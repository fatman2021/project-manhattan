	.file	"c64dvd-glsl.c"
	.intel_syntax noprefix
	.text
	.p2align 4
	.globl	INS_ASLA
	.type	INS_ASLA, @function
INS_ASLA:
.L2:
.L3:
.L4:
	movzx	edx, BYTE PTR 1[rdi]
	movzx	eax, BYTE PTR [rdi]
	pxor	xmm0, xmm0
	mov	esi, edx
	add	edx, edx
	and	eax, -4
	movzx	ecx, dl
	shr	sil, 7
	mov	BYTE PTR 1[rdi], dl
	cvtsi2sd	xmm0, rcx
	comisd	xmm0, QWORD PTR .LC0[rip]
	sete	cl
	or	eax, esi
	and	edx, -128
	add	ecx, ecx
	or	eax, ecx
	and	eax, 127
	or	eax, edx
	mov	BYTE PTR [rdi], al
	ret
	.size	INS_ASLA, .-INS_ASLA
	.p2align 4
	.globl	INS_CLC
	.type	INS_CLC, @function
INS_CLC:
.L9:
	and	BYTE PTR [rdi], -2
	ret
	.size	INS_CLC, .-INS_CLC
	.p2align 4
	.globl	INS_CLD
	.type	INS_CLD, @function
INS_CLD:
.L11:
	and	BYTE PTR [rdi], -9
	ret
	.size	INS_CLD, .-INS_CLD
	.p2align 4
	.globl	INS_CLI
	.type	INS_CLI, @function
INS_CLI:
.L13:
	and	BYTE PTR [rdi], -5
	ret
	.size	INS_CLI, .-INS_CLI
	.p2align 4
	.globl	INS_CLV
	.type	INS_CLV, @function
INS_CLV:
.L15:
	and	BYTE PTR [rdi], -65
	ret
	.size	INS_CLV, .-INS_CLV
	.p2align 4
	.globl	INS_DEX
	.type	INS_DEX, @function
INS_DEX:
.L17:
.L18:
.L19:
	movsx	eax, BYTE PTR 2[rdi]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, eax
	subsd	xmm0, QWORD PTR .LC1[rip]
	cvttsd2si	edx, xmm0
	pxor	xmm0, xmm0
	movzx	eax, dl
	mov	BYTE PTR 2[rdi], dl
	cvtsi2sd	xmm0, rax
	comisd	xmm0, QWORD PTR .LC0[rip]
	sete	al
	and	edx, -128
	lea	ecx, [rax+rax]
	movzx	eax, BYTE PTR [rdi]
	and	eax, 125
	or	eax, ecx
	or	eax, edx
	mov	BYTE PTR [rdi], al
	ret
	.size	INS_DEX, .-INS_DEX
	.p2align 4
	.globl	INS_DEY
	.type	INS_DEY, @function
INS_DEY:
.L23:
.L24:
.L25:
	movsx	eax, BYTE PTR 3[rdi]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, eax
	subsd	xmm0, QWORD PTR .LC1[rip]
	cvttsd2si	edx, xmm0
	pxor	xmm0, xmm0
	movzx	eax, dl
	mov	BYTE PTR 3[rdi], dl
	cvtsi2sd	xmm0, rax
	comisd	xmm0, QWORD PTR .LC0[rip]
	sete	al
	and	edx, -128
	lea	ecx, [rax+rax]
	movzx	eax, BYTE PTR [rdi]
	and	eax, 125
	or	eax, ecx
	or	eax, edx
	mov	BYTE PTR [rdi], al
	ret
	.size	INS_DEY, .-INS_DEY
	.p2align 4
	.globl	INS_JMP
	.type	INS_JMP, @function
INS_JMP:
.L29:
	movzx	eax, WORD PTR 56[rdi]
	mov	WORD PTR 4[rdi], ax
	ret
	.size	INS_JMP, .-INS_JMP
	.p2align 4
	.globl	INS_LSRA
	.type	INS_LSRA, @function
INS_LSRA:
.L31:
.L32:
	movzx	edx, BYTE PTR 1[rdi]
	movzx	eax, BYTE PTR [rdi]
	pxor	xmm0, xmm0
	mov	ecx, edx
	shr	dl
	and	eax, -4
	mov	BYTE PTR 1[rdi], dl
	movzx	edx, dl
	and	ecx, 1
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, QWORD PTR .LC0[rip]
	sete	dl
	or	eax, ecx
	add	edx, edx
	or	eax, edx
	and	eax, 127
	mov	BYTE PTR [rdi], al
	ret
	.size	INS_LSRA, .-INS_LSRA
	.p2align 4
	.globl	INS_ROLA
	.type	INS_ROLA, @function
INS_ROLA:
.L35:
	movzx	esi, BYTE PTR [rdi]
	movzx	ecx, BYTE PTR 1[rdi]
	mov	eax, esi
	lea	edx, [rcx+rcx]
	and	eax, -2
	and	esi, 1
	jne	.L51
	mov	QWORD PTR CARY$[rip], 0
	test	cl, cl
	js	.L52
.L50:
	mov	BYTE PTR 1[rdi], dl
.L39:
.L40:
.L41:
	movzx	ecx, dl
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rcx
	comisd	xmm0, QWORD PTR .LC0[rip]
	sete	cl
	and	eax, 125
	and	edx, -128
	add	ecx, ecx
	or	eax, ecx
	or	eax, edx
	mov	BYTE PTR [rdi], al
	ret
	.p2align 4,,10
	.p2align 3
.L51:
	mov	QWORD PTR CARY$[rip], 1
	mov	esi, eax
	or	esi, 1
	test	cl, cl
	cmovs	eax, esi
	or	edx, 1
	mov	BYTE PTR 1[rdi], dl
	jmp	.L39
	.p2align 4,,10
	.p2align 3
.L52:
	or	eax, 1
	jmp	.L50
	.size	INS_ROLA, .-INS_ROLA
	.p2align 4
	.globl	INS_RORA
	.type	INS_RORA, @function
INS_RORA:
.L54:
	movzx	ecx, BYTE PTR [rdi]
	movzx	eax, BYTE PTR 1[rdi]
	mov	edx, ecx
	mov	esi, eax
	shr	al
	and	esi, 1
	and	edx, -2
	and	ecx, 1
	jne	.L68
	mov	QWORD PTR CARY$[rip], 0
	test	sil, sil
	jne	.L69
.L67:
.L58:
	test	al, al
	mov	BYTE PTR 1[rdi], al
	sete	cl
	and	edx, 125
	and	eax, -128
	add	ecx, ecx
	or	edx, ecx
	or	eax, edx
	mov	BYTE PTR [rdi], al
	ret
	.p2align 4,,10
	.p2align 3
.L68:
	or	edx, esi
	or	eax, -128
	xor	ecx, ecx
	mov	QWORD PTR CARY$[rip], 1
	and	edx, 125
	mov	BYTE PTR 1[rdi], al
	and	eax, -128
	or	edx, ecx
	or	eax, edx
	mov	BYTE PTR [rdi], al
	ret
	.p2align 4,,10
	.p2align 3
.L69:
	or	edx, 1
	jmp	.L67
	.size	INS_RORA, .-INS_RORA
	.p2align 4
	.globl	INS_SEC
	.type	INS_SEC, @function
INS_SEC:
.L71:
	or	BYTE PTR [rdi], 1
	ret
	.size	INS_SEC, .-INS_SEC
	.p2align 4
	.globl	INS_SED
	.type	INS_SED, @function
INS_SED:
.L73:
	or	BYTE PTR [rdi], 8
	ret
	.size	INS_SED, .-INS_SED
	.p2align 4
	.globl	INS_SEI
	.type	INS_SEI, @function
INS_SEI:
.L75:
	or	BYTE PTR [rdi], 4
	ret
	.size	INS_SEI, .-INS_SEI
	.p2align 4
	.globl	INS_TAX
	.type	INS_TAX, @function
INS_TAX:
.L77:
.L78:
.L79:
	movzx	eax, BYTE PTR 1[rdi]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, QWORD PTR .LC0[rip]
	mov	rdx, rax
	mov	BYTE PTR 2[rdi], al
	sete	al
	and	edx, -128
	lea	ecx, [rax+rax]
	movzx	eax, BYTE PTR [rdi]
	and	eax, 125
	or	eax, ecx
	or	eax, edx
	mov	BYTE PTR [rdi], al
	ret
	.size	INS_TAX, .-INS_TAX
	.p2align 4
	.globl	INS_TAY
	.type	INS_TAY, @function
INS_TAY:
.L83:
.L84:
.L85:
	movzx	eax, BYTE PTR 1[rdi]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, QWORD PTR .LC0[rip]
	mov	rdx, rax
	mov	BYTE PTR 3[rdi], al
	sete	al
	and	edx, -128
	lea	ecx, [rax+rax]
	movzx	eax, BYTE PTR [rdi]
	and	eax, 125
	or	eax, ecx
	or	eax, edx
	mov	BYTE PTR [rdi], al
	ret
	.size	INS_TAY, .-INS_TAY
	.p2align 4
	.globl	INS_TSX
	.type	INS_TSX, @function
INS_TSX:
.L89:
.L90:
.L91:
	movzx	eax, BYTE PTR 6[rdi]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, QWORD PTR .LC0[rip]
	mov	rdx, rax
	mov	BYTE PTR 2[rdi], al
	sete	al
	and	edx, -128
	lea	ecx, [rax+rax]
	movzx	eax, BYTE PTR [rdi]
	and	eax, 125
	or	eax, ecx
	or	eax, edx
	mov	BYTE PTR [rdi], al
	ret
	.size	INS_TSX, .-INS_TSX
	.p2align 4
	.globl	INS_TXA
	.type	INS_TXA, @function
INS_TXA:
.L95:
.L96:
.L97:
	movzx	eax, BYTE PTR 2[rdi]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, QWORD PTR .LC0[rip]
	mov	rdx, rax
	mov	BYTE PTR 1[rdi], al
	sete	al
	and	edx, -128
	lea	ecx, [rax+rax]
	movzx	eax, BYTE PTR [rdi]
	and	eax, 125
	or	eax, ecx
	or	eax, edx
	mov	BYTE PTR [rdi], al
	ret
	.size	INS_TXA, .-INS_TXA
	.p2align 4
	.globl	INS_TXS
	.type	INS_TXS, @function
INS_TXS:
.L101:
	movzx	eax, BYTE PTR 2[rdi]
	mov	BYTE PTR 6[rdi], al
	ret
	.size	INS_TXS, .-INS_TXS
	.p2align 4
	.globl	INS_TYA
	.type	INS_TYA, @function
INS_TYA:
.L103:
.L104:
.L105:
	movzx	eax, BYTE PTR 3[rdi]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, QWORD PTR .LC0[rip]
	mov	rdx, rax
	mov	BYTE PTR 1[rdi], al
	sete	al
	and	edx, -128
	lea	ecx, [rax+rax]
	movzx	eax, BYTE PTR [rdi]
	and	eax, 125
	or	eax, ecx
	or	eax, edx
	mov	BYTE PTR [rdi], al
	ret
	.size	INS_TYA, .-INS_TYA
	.p2align 4
	.type	_ZN9SHADERTOYC1Ev, @function
_ZN9SHADERTOYC1Ev:
	pxor	xmm0, xmm0
	mov	DWORD PTR [rdi], 0
	mov	DWORD PTR 4[rdi], 0
	mov	QWORD PTR 24[rdi], 0
	movups	XMMWORD PTR 8[rdi], xmm0
	ret
	.size	_ZN9SHADERTOYC1Ev, .-_ZN9SHADERTOYC1Ev
	.p2align 4
	.globl	INS_INX
	.type	INS_INX, @function
INS_INX:
.L110:
.L111:
.L112:
	movzx	eax, BYTE PTR 2[rdi]
	mov	DWORD PTR -7[rsp], 0
	pxor	xmm0, xmm0
	mov	BYTE PTR -8[rsp], al
	movsx	eax, WORD PTR -8[rsp]
	cvtsi2sd	xmm0, eax
	addsd	xmm0, QWORD PTR .LC1[rip]
	cvttsd2si	edx, xmm0
	pxor	xmm0, xmm0
	movzx	eax, dl
	mov	BYTE PTR 2[rdi], dl
	cvtsi2sd	xmm0, rax
	comisd	xmm0, QWORD PTR .LC0[rip]
	sete	al
	and	edx, -128
	lea	ecx, [rax+rax]
	movzx	eax, BYTE PTR [rdi]
	and	eax, 125
	or	eax, ecx
	or	eax, edx
	mov	BYTE PTR [rdi], al
	ret
	.size	INS_INX, .-INS_INX
	.p2align 4
	.globl	INS_INY
	.type	INS_INY, @function
INS_INY:
.L116:
.L117:
.L118:
	movzx	eax, BYTE PTR 3[rdi]
	mov	DWORD PTR -7[rsp], 0
	pxor	xmm0, xmm0
	mov	BYTE PTR -8[rsp], al
	movsx	eax, WORD PTR -8[rsp]
	cvtsi2sd	xmm0, eax
	addsd	xmm0, QWORD PTR .LC1[rip]
	cvttsd2si	edx, xmm0
	pxor	xmm0, xmm0
	movzx	eax, dl
	mov	BYTE PTR 3[rdi], dl
	cvtsi2sd	xmm0, rax
	comisd	xmm0, QWORD PTR .LC0[rip]
	sete	al
	and	edx, -128
	lea	ecx, [rax+rax]
	movzx	eax, BYTE PTR [rdi]
	and	eax, 125
	or	eax, ecx
	or	eax, edx
	mov	BYTE PTR [rdi], al
	ret
	.size	INS_INY, .-INS_INY
	.p2align 4
	.type	_ZN8MEMORY_TD1Ev.constprop.0, @function
_ZN8MEMORY_TD1Ev.constprop.0:
	ret
	.size	_ZN8MEMORY_TD1Ev.constprop.0, .-_ZN8MEMORY_TD1Ev.constprop.0
	.p2align 4
	.globl	INS_NOP
	.type	INS_NOP, @function
INS_NOP:
	ret
	.size	INS_NOP, .-INS_NOP
	.p2align 4
	.globl	INS_UNK
	.type	INS_UNK, @function
INS_UNK:
	ret
	.size	INS_UNK, .-INS_UNK
	.section	.rodata.str1.1,"aMS",@progbits,1
.LC2:
	.string	"press any key ..."
	.text
	.p2align 4
	.globl	ERROREXIT
	.type	ERROREXIT, @function
ERROREXIT:
.L125:
	push	rbp
	mov	rbp, rdi
	call	fb_GfxScreenPtr@PLT
	test	rax, rax
	je	.L126
	xor	r8d, r8d
	xor	ecx, ecx
	xor	edx, edx
	mov	esi, 8
	xor	edi, edi
	call	fb_GfxScreen@PLT
.L126:
	mov	edx, 1
	mov	rsi, rbp
	xor	edi, edi
	call	fb_PrintString@PLT
	mov	esi, 1
	xor	edi, edi
	call	fb_PrintVoid@PLT
	mov	esi, 17
	lea	rdi, .LC2[rip]
	call	fb_StrAllocTempDescZEx@PLT
	mov	edx, 1
	xor	edi, edi
	mov	rsi, rax
	call	fb_PrintString@PLT
	call	fb_Beep@PLT
	mov	edi, -1
	call	fb_Sleep@PLT
	mov	edi, 1
	pop	rbp
	jmp	fb_End@PLT
	.size	ERROREXIT, .-ERROREXIT
	.section	.rodata.str1.1
.LC3:
	.string	""
.LC10:
	.string	"screenres("
.LC11:
	.string	","
.LC12:
	.string	") failed !"
.LC13:
	.string	"glCreateShader"
.LC14:
	.string	"glDeleteShader"
.LC15:
	.string	"glShaderSource"
.LC16:
	.string	"glCompileShader"
.LC17:
	.string	"glGetShaderiv"
.LC18:
	.string	"glGetShaderInfoLog"
.LC19:
	.string	"glCreateProgram"
.LC20:
	.string	"glDeleteProgram"
.LC21:
	.string	"glAttachShader"
.LC22:
	.string	"glDetachShader"
.LC23:
	.string	"glLinkProgram"
.LC24:
	.string	"glGetProgramiv"
.LC25:
	.string	"glGetProgramInfoLog"
.LC26:
	.string	"glUseProgram"
.LC27:
	.string	"glGetUniformLocation"
.LC28:
	.string	"glUniform1i"
.LC29:
	.string	"glUniform1f"
.LC30:
	.string	"glUniform3f"
.LC31:
	.string	"glUniform3fv"
.LC32:
	.string	"glUniform4f"
.LC33:
	.string	"glUniform4fv"
	.section	.rodata.str1.8,"aMS",@progbits,1
	.align 8
.LC34:
	.string	"load and compile shader pese wait ..."
	.text
	.p2align 4
	.globl	GLSCREEN
	.type	GLSCREEN, @function
GLSCREEN:
.L132:
	push	r15
	push	r14
	push	r13
	push	r12
	mov	r12, rdx
	push	rbp
	mov	rbp, rdi
	push	rbx
	mov	rbx, rsi
	sub	rsp, 280
	mov	QWORD PTR 24[rsp], rcx
	mov	BYTE PTR 23[rsp], r8b
	mov	QWORD PTR 88[rsp], 0
	mov	QWORD PTR 96[rsp], 0
	mov	QWORD PTR 104[rsp], 0
	call	fb_GfxScreenPtr@PLT
	test	rax, rax
	je	.L133
	xor	r8d, r8d
	xor	ecx, ecx
	xor	edx, edx
	mov	esi, 8
	xor	edi, edi
	call	fb_GfxScreen@PLT
.L133:
	xor	esi, esi
	lea	rdi, .LC3[rip]
	call	fb_StrAllocTempDescZEx@PLT
	lea	rdx, 104[rsp]
	lea	rcx, 40[rsp]
	mov	QWORD PTR 56[rsp], 0
	mov	QWORD PTR 48[rsp], 0
	lea	rsi, 96[rsp]
	lea	rdi, 88[rsp]
	sub	rsp, 8
	mov	QWORD PTR 48[rsp], 0
	push	rax
	lea	r9, 72[rsp]
	lea	r8, 64[rsp]
	call	fb_GfxScreenInfo@PLT
	pop	rax
	xor	eax, eax
	test	rbx, rbx
	setle	al
	pop	rdx
	neg	eax
	test	rbp, rbp
	jle	.L230
	test	eax, eax
	jne	.L231
.L136:
.L137:
	cmp	r12, 15
	jle	.L138
	cmp	r12, 23
	jle	.L232
	cmp	r12, 31
	mov	rax, QWORD PTR 24[rsp]
	setg	r12b
	setg	r15b
	movzx	r12d, r12b
	movzx	r15d, r15b
	lea	r12d, 24[0+r12*8]
	lea	r15, 24[0+r15*8]
	test	rax, rax
	jg	.L233
.L141:
	mov	QWORD PTR 24[rsp], 0
	jmp	.L144
	.p2align 4,,10
	.p2align 3
.L138:
	mov	r15, QWORD PTR 104[rsp]
	mov	r12d, r15d
.L140:
	mov	rax, QWORD PTR 24[rsp]
	test	rax, rax
	jle	.L141
.L233:
	cmp	rax, 15
	jg	.L142
	mov	QWORD PTR 24[rsp], 16
.L144:
	mov	eax, 2147483648
	lea	rcx, 72[rsp]
	lea	rdx, 64[rsp]
	mov	edi, 110
	lea	rsi, 24[rsp]
	lea	r8, 80[rsp]
	mov	QWORD PTR 80[rsp], rax
	mov	QWORD PTR 72[rsp], rax
	mov	QWORD PTR 64[rsp], rax
	call	fb_GfxControl_i@PLT
	cmp	BYTE PTR 23[rsp], 0
	je	.L227
.L150:
	xor	edx, edx
	cmp	rbp, 639
	mov	edi, r12d
	mov	r14d, 1073741824
	setle	dl
	xor	eax, eax
	neg	edx
	cmp	rbx, 479
	setle	al
	neg	eax
	or	edx, eax
	mov	eax, 480
	cmovne	rbx, rax
	mov	eax, 640
	cmovne	rbp, rax
	xor	r13d, r13d
	call	fb_GfxScreenList@PLT
	mov	ecx, eax
	test	eax, eax
	je	.L234
	.p2align 4,,10
	.p2align 3
.L157:
	mov	rax, rcx
	sal	rax, 32
	shr	rax, 48
	sub	rax, rbp
	cqo
	xor	rax, rdx
	sub	rax, rdx
	movzx	edx, cx
	sub	rdx, rbx
	mov	rdi, rdx
	sar	rdi, 63
	xor	rdx, rdi
	sub	rdx, rdi
	add	rax, rdx
	cmp	rax, r14
	jge	.L155
	mov	r14, rax
	mov	r13d, ecx
.L154:
.L155:
	xor	edi, edi
	call	fb_GfxScreenList@PLT
	mov	ecx, eax
	test	eax, eax
	jne	.L157
.L163:
.L156:
	test	r13d, r13d
	je	.L227
	mov	rbp, r13
	xor	r8d, r8d
	movzx	esi, r13w
	sal	rbp, 32
	shr	rbp, 48
	cmp	BYTE PTR 23[rsp], 0
	setne	r8b
	or	r8d, 2
.L148:
	xor	r9d, r9d
	mov	ecx, 1
	mov	edx, r12d
	mov	edi, ebp
	call	fb_GfxScreenRes@PLT
	test	eax, eax
	je	.L179
	mov	edx, DWORD PTR 104[rsp]
	xor	r9d, r9d
	mov	r8d, 2
	mov	ecx, 1
	mov	esi, 350
	mov	edi, 640
	call	fb_GfxScreenRes@PLT
	test	eax, eax
	je	.L179
	mov	rdi, QWORD PTR 96[rsp]
	pxor	xmm1, xmm1
	mov	QWORD PTR 256[rsp], 0
	lea	rbp, 240[rsp]
	movups	XMMWORD PTR 240[rsp], xmm1
	call	fb_LongintToStr@PLT
	mov	rdi, QWORD PTR 88[rsp]
	mov	r12, rax
	call	fb_LongintToStr@PLT
	pxor	xmm1, xmm1
	lea	rdi, 112[rsp]
	mov	r8, -1
	mov	rcx, rax
	mov	edx, 11
	movups	XMMWORD PTR 112[rsp], xmm1
	lea	rsi, .LC10[rip]
	mov	QWORD PTR 128[rsp], 0
	call	fb_StrConcat@PLT
	pxor	xmm1, xmm1
	lea	rdi, 144[rsp]
	mov	r8d, 2
	mov	rsi, rax
	lea	rcx, .LC11[rip]
	mov	rdx, -1
	movups	XMMWORD PTR 144[rsp], xmm1
	mov	QWORD PTR 160[rsp], 0
	call	fb_StrConcat@PLT
	pxor	xmm1, xmm1
	lea	rdi, 176[rsp]
	mov	r8, -1
	mov	rsi, rax
	mov	rcx, r12
	mov	rdx, -1
	movups	XMMWORD PTR 176[rsp], xmm1
	mov	QWORD PTR 192[rsp], 0
	call	fb_StrConcat@PLT
	pxor	xmm1, xmm1
	lea	rdi, 208[rsp]
	mov	r8d, 11
	mov	rsi, rax
	lea	rcx, .LC12[rip]
	mov	rdx, -1
	movups	XMMWORD PTR 208[rsp], xmm1
	mov	QWORD PTR 224[rsp], 0
	call	fb_StrConcat@PLT
	xor	r8d, r8d
	mov	rcx, -1
	mov	rdi, rbp
	mov	rdx, rax
	mov	rsi, -1
	call	fb_StrAssign@PLT
	mov	rdi, rbp
	call	ERROREXIT
	mov	rdi, rbp
	call	fb_StrDelete@PLT
.L175:
.L177:
.L178:
.L179:
	mov	esi, -1
	mov	edi, -1
	call	fb_GfxFlip@PLT
	lea	rdi, .LC13[rip]
	call	fb_GfxGetGLProcAddress@PLT
	mov	QWORD PTR GLCREATESHADER$[rip], rax
	test	rax, rax
	jne	.L180
	lea	rbp, 240[rsp]
	pxor	xmm0, xmm0
	xor	r8d, r8d
	mov	ecx, 15
	lea	rdx, .LC13[rip]
	mov	rsi, -1
	mov	rdi, rbp
	movups	XMMWORD PTR 240[rsp], xmm0
	mov	QWORD PTR 256[rsp], 0
	call	fb_StrAssign@PLT
	mov	rdi, rbp
	call	ERROREXIT
	mov	rdi, rbp
	call	fb_StrDelete@PLT
.L180:
	lea	rdi, .LC14[rip]
	call	fb_GfxGetGLProcAddress@PLT
	mov	QWORD PTR GLDELETESHADER$[rip], rax
	test	rax, rax
	jne	.L181
	lea	rbp, 240[rsp]
	pxor	xmm0, xmm0
	xor	r8d, r8d
	mov	ecx, 15
	lea	rdx, .LC14[rip]
	mov	rsi, -1
	mov	rdi, rbp
	movups	XMMWORD PTR 240[rsp], xmm0
	mov	QWORD PTR 256[rsp], 0
	call	fb_StrAssign@PLT
	mov	rdi, rbp
	call	ERROREXIT
	mov	rdi, rbp
	call	fb_StrDelete@PLT
.L181:
	lea	rdi, .LC15[rip]
	call	fb_GfxGetGLProcAddress@PLT
	mov	QWORD PTR GLSHADERSOURCE$[rip], rax
	test	rax, rax
	jne	.L182
	lea	rbp, 240[rsp]
	pxor	xmm0, xmm0
	xor	r8d, r8d
	mov	ecx, 15
	lea	rdx, .LC15[rip]
	mov	rsi, -1
	mov	rdi, rbp
	movups	XMMWORD PTR 240[rsp], xmm0
	mov	QWORD PTR 256[rsp], 0
	call	fb_StrAssign@PLT
	mov	rdi, rbp
	call	ERROREXIT
	mov	rdi, rbp
	call	fb_StrDelete@PLT
.L182:
	lea	rdi, .LC16[rip]
	call	fb_GfxGetGLProcAddress@PLT
	mov	QWORD PTR GLCOMPILESHADER$[rip], rax
	test	rax, rax
	jne	.L183
	lea	rbp, 240[rsp]
	pxor	xmm0, xmm0
	xor	r8d, r8d
	mov	ecx, 16
	lea	rdx, .LC16[rip]
	mov	rsi, -1
	mov	rdi, rbp
	movups	XMMWORD PTR 240[rsp], xmm0
	mov	QWORD PTR 256[rsp], 0
	call	fb_StrAssign@PLT
	mov	rdi, rbp
	call	ERROREXIT
	mov	rdi, rbp
	call	fb_StrDelete@PLT
.L183:
	lea	rdi, .LC17[rip]
	call	fb_GfxGetGLProcAddress@PLT
	mov	QWORD PTR GLGETSHADERIV$[rip], rax
	test	rax, rax
	jne	.L184
	lea	rbp, 240[rsp]
	pxor	xmm0, xmm0
	xor	r8d, r8d
	mov	ecx, 14
	lea	rdx, .LC17[rip]
	mov	rsi, -1
	mov	rdi, rbp
	movups	XMMWORD PTR 240[rsp], xmm0
	mov	QWORD PTR 256[rsp], 0
	call	fb_StrAssign@PLT
	mov	rdi, rbp
	call	ERROREXIT
	mov	rdi, rbp
	call	fb_StrDelete@PLT
.L184:
	lea	rdi, .LC18[rip]
	call	fb_GfxGetGLProcAddress@PLT
	mov	QWORD PTR GLGETSHADERINFOLOG$[rip], rax
	test	rax, rax
	jne	.L185
	lea	rbp, 240[rsp]
	pxor	xmm0, xmm0
	xor	r8d, r8d
	mov	ecx, 19
	lea	rdx, .LC18[rip]
	mov	rsi, -1
	mov	rdi, rbp
	movups	XMMWORD PTR 240[rsp], xmm0
	mov	QWORD PTR 256[rsp], 0
	call	fb_StrAssign@PLT
	mov	rdi, rbp
	call	ERROREXIT
	mov	rdi, rbp
	call	fb_StrDelete@PLT
.L185:
	lea	rdi, .LC19[rip]
	call	fb_GfxGetGLProcAddress@PLT
	mov	QWORD PTR GLCREATEPROGRAM$[rip], rax
	test	rax, rax
	jne	.L186
	lea	rbp, 240[rsp]
	pxor	xmm0, xmm0
	xor	r8d, r8d
	mov	ecx, 16
	lea	rdx, .LC19[rip]
	mov	rsi, -1
	mov	rdi, rbp
	movups	XMMWORD PTR 240[rsp], xmm0
	mov	QWORD PTR 256[rsp], 0
	call	fb_StrAssign@PLT
	mov	rdi, rbp
	call	ERROREXIT
	mov	rdi, rbp
	call	fb_StrDelete@PLT
.L186:
	lea	rdi, .LC20[rip]
	call	fb_GfxGetGLProcAddress@PLT
	mov	QWORD PTR GLDELETEPROGRAM$[rip], rax
	test	rax, rax
	jne	.L187
	lea	rbp, 240[rsp]
	pxor	xmm0, xmm0
	xor	r8d, r8d
	mov	ecx, 16
	lea	rdx, .LC20[rip]
	mov	rsi, -1
	mov	rdi, rbp
	movups	XMMWORD PTR 240[rsp], xmm0
	mov	QWORD PTR 256[rsp], 0
	call	fb_StrAssign@PLT
	mov	rdi, rbp
	call	ERROREXIT
	mov	rdi, rbp
	call	fb_StrDelete@PLT
.L187:
	lea	rdi, .LC21[rip]
	call	fb_GfxGetGLProcAddress@PLT
	mov	QWORD PTR GLATTACHSHADER$[rip], rax
	test	rax, rax
	jne	.L188
	lea	rbp, 240[rsp]
	pxor	xmm0, xmm0
	xor	r8d, r8d
	mov	ecx, 15
	lea	rdx, .LC21[rip]
	mov	rsi, -1
	mov	rdi, rbp
	movups	XMMWORD PTR 240[rsp], xmm0
	mov	QWORD PTR 256[rsp], 0
	call	fb_StrAssign@PLT
	mov	rdi, rbp
	call	ERROREXIT
	mov	rdi, rbp
	call	fb_StrDelete@PLT
.L188:
	lea	rdi, .LC22[rip]
	call	fb_GfxGetGLProcAddress@PLT
	mov	QWORD PTR GLDETACHSHADER$[rip], rax
	test	rax, rax
	jne	.L189
	lea	rbp, 240[rsp]
	pxor	xmm0, xmm0
	xor	r8d, r8d
	mov	ecx, 15
	lea	rdx, .LC22[rip]
	mov	rsi, -1
	mov	rdi, rbp
	movups	XMMWORD PTR 240[rsp], xmm0
	mov	QWORD PTR 256[rsp], 0
	call	fb_StrAssign@PLT
	mov	rdi, rbp
	call	ERROREXIT
	mov	rdi, rbp
	call	fb_StrDelete@PLT
.L189:
	lea	rdi, .LC23[rip]
	call	fb_GfxGetGLProcAddress@PLT
	mov	QWORD PTR GLLINKPROGRAM$[rip], rax
	test	rax, rax
	jne	.L190
	lea	rbp, 240[rsp]
	pxor	xmm0, xmm0
	xor	r8d, r8d
	mov	ecx, 14
	lea	rdx, .LC23[rip]
	mov	rsi, -1
	mov	rdi, rbp
	movups	XMMWORD PTR 240[rsp], xmm0
	mov	QWORD PTR 256[rsp], 0
	call	fb_StrAssign@PLT
	mov	rdi, rbp
	call	ERROREXIT
	mov	rdi, rbp
	call	fb_StrDelete@PLT
.L190:
	lea	rdi, .LC24[rip]
	call	fb_GfxGetGLProcAddress@PLT
	mov	QWORD PTR GLGETPROGRAMIV$[rip], rax
	test	rax, rax
	jne	.L191
	lea	rbp, 240[rsp]
	pxor	xmm0, xmm0
	xor	r8d, r8d
	mov	ecx, 15
	lea	rdx, .LC24[rip]
	mov	rsi, -1
	mov	rdi, rbp
	movups	XMMWORD PTR 240[rsp], xmm0
	mov	QWORD PTR 256[rsp], 0
	call	fb_StrAssign@PLT
	mov	rdi, rbp
	call	ERROREXIT
	mov	rdi, rbp
	call	fb_StrDelete@PLT
.L191:
	lea	rdi, .LC25[rip]
	call	fb_GfxGetGLProcAddress@PLT
	mov	QWORD PTR GLGETPROGRAMINFOLOG$[rip], rax
	test	rax, rax
	jne	.L192
	lea	rbp, 240[rsp]
	pxor	xmm0, xmm0
	xor	r8d, r8d
	mov	ecx, 20
	lea	rdx, .LC25[rip]
	mov	rsi, -1
	mov	rdi, rbp
	movups	XMMWORD PTR 240[rsp], xmm0
	mov	QWORD PTR 256[rsp], 0
	call	fb_StrAssign@PLT
	mov	rdi, rbp
	call	ERROREXIT
	mov	rdi, rbp
	call	fb_StrDelete@PLT
.L192:
	lea	rdi, .LC26[rip]
	call	fb_GfxGetGLProcAddress@PLT
	mov	QWORD PTR GLUSEPROGRAM$[rip], rax
	test	rax, rax
	jne	.L193
	lea	rbp, 240[rsp]
	pxor	xmm0, xmm0
	xor	r8d, r8d
	mov	ecx, 13
	lea	rdx, .LC26[rip]
	mov	rsi, -1
	mov	rdi, rbp
	movups	XMMWORD PTR 240[rsp], xmm0
	mov	QWORD PTR 256[rsp], 0
	call	fb_StrAssign@PLT
	mov	rdi, rbp
	call	ERROREXIT
	mov	rdi, rbp
	call	fb_StrDelete@PLT
.L193:
	lea	rdi, .LC27[rip]
	call	fb_GfxGetGLProcAddress@PLT
	mov	QWORD PTR GLGETUNIFORMLOCATION$[rip], rax
	test	rax, rax
	jne	.L194
	lea	rbp, 240[rsp]
	pxor	xmm0, xmm0
	xor	r8d, r8d
	mov	ecx, 21
	lea	rdx, .LC27[rip]
	mov	rsi, -1
	mov	rdi, rbp
	movups	XMMWORD PTR 240[rsp], xmm0
	mov	QWORD PTR 256[rsp], 0
	call	fb_StrAssign@PLT
	mov	rdi, rbp
	call	ERROREXIT
	mov	rdi, rbp
	call	fb_StrDelete@PLT
.L194:
	lea	rdi, .LC28[rip]
	call	fb_GfxGetGLProcAddress@PLT
	mov	QWORD PTR GLUNIFORM1I$[rip], rax
	test	rax, rax
	jne	.L195
	lea	rbp, 240[rsp]
	pxor	xmm0, xmm0
	xor	r8d, r8d
	mov	ecx, 12
	lea	rdx, .LC28[rip]
	mov	rsi, -1
	mov	rdi, rbp
	movups	XMMWORD PTR 240[rsp], xmm0
	mov	QWORD PTR 256[rsp], 0
	call	fb_StrAssign@PLT
	mov	rdi, rbp
	call	ERROREXIT
	mov	rdi, rbp
	call	fb_StrDelete@PLT
.L195:
	lea	rdi, .LC29[rip]
	call	fb_GfxGetGLProcAddress@PLT
	mov	QWORD PTR GLUNIFORM1F$[rip], rax
	test	rax, rax
	jne	.L196
	lea	rbp, 240[rsp]
	pxor	xmm0, xmm0
	xor	r8d, r8d
	mov	ecx, 12
	lea	rdx, .LC29[rip]
	mov	rsi, -1
	mov	rdi, rbp
	movups	XMMWORD PTR 240[rsp], xmm0
	mov	QWORD PTR 256[rsp], 0
	call	fb_StrAssign@PLT
	mov	rdi, rbp
	call	ERROREXIT
	mov	rdi, rbp
	call	fb_StrDelete@PLT
.L196:
	lea	rdi, .LC30[rip]
	call	fb_GfxGetGLProcAddress@PLT
	mov	QWORD PTR GLUNIFORM3F$[rip], rax
	test	rax, rax
	jne	.L197
	lea	rbp, 240[rsp]
	pxor	xmm0, xmm0
	xor	r8d, r8d
	mov	ecx, 12
	lea	rdx, .LC30[rip]
	mov	rsi, -1
	mov	rdi, rbp
	movups	XMMWORD PTR 240[rsp], xmm0
	mov	QWORD PTR 256[rsp], 0
	call	fb_StrAssign@PLT
	mov	rdi, rbp
	call	ERROREXIT
	mov	rdi, rbp
	call	fb_StrDelete@PLT
.L197:
	lea	rdi, .LC31[rip]
	call	fb_GfxGetGLProcAddress@PLT
	test	rax, rax
	jne	.L198
	lea	rbp, 240[rsp]
	pxor	xmm0, xmm0
	xor	r8d, r8d
	mov	ecx, 13
	lea	rdx, .LC31[rip]
	mov	rsi, -1
	mov	rdi, rbp
	movups	XMMWORD PTR 240[rsp], xmm0
	mov	QWORD PTR 256[rsp], 0
	call	fb_StrAssign@PLT
	mov	rdi, rbp
	call	ERROREXIT
	mov	rdi, rbp
	call	fb_StrDelete@PLT
.L198:
	lea	rdi, .LC32[rip]
	call	fb_GfxGetGLProcAddress@PLT
	mov	QWORD PTR GLUNIFORM4F$[rip], rax
	test	rax, rax
	jne	.L199
	lea	rbp, 240[rsp]
	pxor	xmm0, xmm0
	xor	r8d, r8d
	mov	ecx, 12
	lea	rdx, .LC32[rip]
	mov	rsi, -1
	mov	rdi, rbp
	movups	XMMWORD PTR 240[rsp], xmm0
	mov	QWORD PTR 256[rsp], 0
	call	fb_StrAssign@PLT
	mov	rdi, rbp
	call	ERROREXIT
	mov	rdi, rbp
	call	fb_StrDelete@PLT
.L199:
	lea	rdi, .LC33[rip]
	call	fb_GfxGetGLProcAddress@PLT
	test	rax, rax
	jne	.L200
	lea	rbp, 240[rsp]
	pxor	xmm0, xmm0
	xor	r8d, r8d
	mov	ecx, 13
	lea	rdx, .LC33[rip]
	mov	rsi, -1
	mov	rdi, rbp
	movups	XMMWORD PTR 240[rsp], xmm0
	mov	QWORD PTR 256[rsp], 0
	call	fb_StrAssign@PLT
	mov	rdi, rbp
	call	ERROREXIT
	mov	rdi, rbp
	call	fb_StrDelete@PLT
.L200:
	mov	esi, 37
	lea	rdi, .LC34[rip]
	call	fb_StrAllocTempDescZEx@PLT
	mov	rdi, rax
	call	fb_GfxSetWindowTitle@PLT
	add	rsp, 280
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	ret
	.p2align 4,,10
	.p2align 3
.L142:
	cmp	rax, 31
	setg	al
	movzx	eax, al
	lea	rax, 24[0+rax*8]
	mov	QWORD PTR 24[rsp], rax
	jmp	.L144
	.p2align 4,,10
	.p2align 3
.L232:
	mov	r12d, 16
	mov	r15d, 16
	jmp	.L140
	.p2align 4,,10
	.p2align 3
.L231:
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rbp
	mulsd	xmm0, QWORD PTR .LC4[rip]
	cvtsd2si	rbx, xmm0
	jmp	.L137
	.p2align 4,,10
	.p2align 3
.L227:
	mov	esi, ebx
	mov	r8d, 2
	jmp	.L148
	.p2align 4,,10
	.p2align 3
.L230:
	test	eax, eax
	je	.L135
	mov	BYTE PTR 23[rsp], 0
	mov	ebx, 350
	mov	ebp, 640
	jmp	.L137
	.p2align 4,,10
	.p2align 3
.L135:
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rbx
	divsd	xmm0, QWORD PTR .LC5[rip]
	mulsd	xmm0, QWORD PTR .LC6[rip]
	cvtsd2si	rbp, xmm0
	jmp	.L137
.L149:
	.p2align 4,,10
	.p2align 3
.L234:
	cmp	r15, 16
	je	.L235
	cmp	r15, 24
	je	.L236
	mov	rax, QWORD PTR .LC8[rip]
	mov	r12d, 24
	mov	QWORD PTR 240[rsp], rax
.L160:
	mov	r14d, 2
	jmp	.L172
	.p2align 4,,10
	.p2align 3
.L170:
	cmp	r14d, 1
	je	.L227
	mov	r12d, DWORD PTR 244[rsp]
	mov	r14d, 1
.L172:
	mov	edi, r12d
	call	fb_GfxScreenList@PLT
	mov	r13d, eax
	test	eax, eax
	je	.L170
	xor	ecx, ecx
	mov	edx, 1073741824
	jmp	.L168
	.p2align 4,,10
	.p2align 3
.L164:
	xor	edi, edi
	call	fb_GfxScreenList@PLT
	test	eax, eax
	je	.L156
	mov	rdx, r15
	mov	ecx, r13d
.L201:
	mov	r13d, eax
.L168:
	mov	rax, r13
	movzx	r15d, r13w
	sal	rax, 32
	sub	r15, rbx
	shr	rax, 48
	sub	rax, rbp
	mov	rdi, rax
	sar	rdi, 63
	xor	rax, rdi
	sub	rax, rdi
	mov	rdi, r15
	sar	rdi, 63
	xor	r15, rdi
	sub	r15, rdi
	add	r15, rax
	cmp	r15, rdx
	jl	.L164
.L165:
.L166:
	xor	edi, edi
	mov	DWORD PTR 16[rsp], ecx
	mov	QWORD PTR 8[rsp], rdx
	call	fb_GfxScreenList@PLT
	mov	rdx, QWORD PTR 8[rsp]
	mov	ecx, DWORD PTR 16[rsp]
	test	eax, eax
	jne	.L201
.L167:
.L169:
	test	ecx, ecx
	je	.L170
	mov	r13d, ecx
	jmp	.L156
	.p2align 4,,10
	.p2align 3
.L235:
	mov	rax, QWORD PTR .LC7[rip]
	mov	r12d, 32
	mov	QWORD PTR 240[rsp], rax
	jmp	.L160
.L236:
	mov	rax, QWORD PTR .LC9[rip]
	mov	r12d, 32
	mov	QWORD PTR 240[rsp], rax
	jmp	.L160
	.size	GLSCREEN, .-GLSCREEN
	.p2align 4
	.globl	_ZN9SHADERTOYD1Ev
	.type	_ZN9SHADERTOYD1Ev, @function
_ZN9SHADERTOYD1Ev:
.L238:
	push	rbx
	mov	eax, DWORD PTR 4[rdi]
	mov	rbx, rdi
	test	eax, eax
	je	.L243
	xor	edi, edi
	call	[QWORD PTR GLUSEPROGRAM$[rip]]
	mov	esi, DWORD PTR [rbx]
	test	esi, esi
	je	.L241
	mov	edi, DWORD PTR 4[rbx]
	call	[QWORD PTR GLDETACHSHADER$[rip]]
	mov	edi, DWORD PTR [rbx]
	call	[QWORD PTR GLDELETESHADER$[rip]]
.L240:
.L241:
	mov	edi, DWORD PTR 4[rbx]
	call	[QWORD PTR GLDELETEPROGRAM$[rip]]
.L239:
.L242:
.L243:
	lea	rdi, 8[rbx]
	pop	rbx
	jmp	fb_StrDelete@PLT
	.size	_ZN9SHADERTOYD1Ev, .-_ZN9SHADERTOYD1Ev
	.section	.rodata.str1.1
.LC35:
	.string	"#version 140\n"
	.section	.rodata.str1.8
	.align 8
.LC36:
	.string	"uniform float     iGlobalTime;\n"
	.section	.rodata.str1.1
.LC37:
	.string	"uniform float     iTime;\n"
	.section	.rodata.str1.8
	.align 8
.LC38:
	.string	"uniform vec3      iResolution;\n"
	.align 8
.LC39:
	.string	"uniform float     iTimeDelta;\n"
	.align 8
.LC40:
	.string	"uniform float     iFrameRate;\n"
	.section	.rodata.str1.1
.LC41:
	.string	"uniform int       iFrame;\n"
	.section	.rodata.str1.8
	.align 8
.LC42:
	.string	"uniform float     iChannelTime[4];\n"
	.align 8
.LC43:
	.string	"uniform vec3      iChannelResolution[4];\n"
	.align 8
.LC44:
	.string	"uniform float     iSampleRate;\n"
	.section	.rodata.str1.1
.LC45:
	.string	"uniform vec4      iMouse;\n"
.LC46:
	.string	"uniform vec4      iDate;\n"
.LC47:
	.string	"uniform sampler2D iChannel0;\n"
.LC48:
	.string	"uniform sampler2D iChannel1;\n"
.LC49:
	.string	"uniform sampler2D iChannel2;\n"
.LC50:
	.string	"uniform sampler2D iChannel3;\n"
.LC51:
	.string	"uniform samplerCube iCube;\n"
.LC52:
	.string	"#define main_image mainImage"
.LC53:
	.string	"#define frag_color fragColor"
.LC54:
	.string	"#define frag_coord fragCoord"
	.section	.rodata.str1.8
	.align 8
.LC55:
	.string	"#define i_resolution iResolution"
	.section	.rodata.str1.1
.LC56:
	.string	"#define i_time iTime"
.LC57:
	.string	"void main() {\n"
.LC58:
	.string	"  vec4 color;\n"
.LC59:
	.string	"  // call user shader\n"
	.section	.rodata.str1.8
	.align 8
.LC60:
	.string	"  main_image(color, gl_FragCoord.xy);\n"
	.section	.rodata.str1.1
.LC61:
	.string	"  color.w = 1.0;\n"
.LC62:
	.string	"  gl_FragColor = color;\n"
.LC63:
	.string	"}\n"
	.section	.rodata.str1.8
	.align 8
.LC64:
	.string	"  mainImage(color, gl_FragCoord.xy);\n"
	.align 8
.LC65:
	.string	"glCreateShader(GL_FRAGMENT_SHADER) failed !"
	.align 8
.LC66:
	.string	"glCompileShader(FragmentShader) failed !\n"
	.section	.rodata.str1.1
.LC67:
	.string	"glCreateProgram() failed !"
.LC68:
	.string	"glLinkProgram() failed !\n"
	.text
	.p2align 4
	.globl	_ZN9SHADERTOY11COMPILECODEER8FBSTRING
	.type	_ZN9SHADERTOY11COMPILECODEER8FBSTRING, @function
_ZN9SHADERTOY11COMPILECODEER8FBSTRING:
	push	r15
	pxor	xmm0, xmm0
	xor	r8d, r8d
	mov	ecx, 14
	push	r14
	lea	rdx, .LC35[rip]
	mov	r14, rsi
	mov	rsi, -1
	push	r13
	push	r12
	push	rbp
	push	rbx
	mov	rbx, rdi
	sub	rsp, 248
	lea	r13, 112[rsp]
	lea	rbp, 80[rsp]
	movups	XMMWORD PTR 80[rsp], xmm0
	mov	rdi, r13
	movups	XMMWORD PTR 112[rsp], xmm0
	lea	r12, 144[rsp]
	mov	DWORD PTR [rsp], 0
	mov	DWORD PTR 4[rsp], 0
	mov	QWORD PTR 96[rsp], 0
	mov	QWORD PTR 128[rsp], 0
	call	fb_StrAssign@PLT
	xor	r8d, r8d
	mov	rdx, r13
	mov	rdi, rbp
	mov	rcx, -1
	mov	rsi, -1
	call	fb_StrAssign@PLT
	xor	r8d, r8d
	mov	ecx, 32
	mov	rdi, rbp
	lea	rdx, .LC36[rip]
	mov	rsi, -1
	call	fb_StrConcatAssign@PLT
	xor	r8d, r8d
	mov	ecx, 26
	mov	rdi, rbp
	lea	rdx, .LC37[rip]
	mov	rsi, -1
	call	fb_StrConcatAssign@PLT
	xor	r8d, r8d
	mov	ecx, 32
	mov	rdi, rbp
	lea	rdx, .LC38[rip]
	mov	rsi, -1
	call	fb_StrConcatAssign@PLT
	xor	r8d, r8d
	mov	ecx, 31
	mov	rdi, rbp
	lea	rdx, .LC39[rip]
	mov	rsi, -1
	call	fb_StrConcatAssign@PLT
	xor	r8d, r8d
	mov	ecx, 31
	mov	rdi, rbp
	lea	rdx, .LC40[rip]
	mov	rsi, -1
	call	fb_StrConcatAssign@PLT
	xor	r8d, r8d
	mov	ecx, 27
	mov	rdi, rbp
	lea	rdx, .LC41[rip]
	mov	rsi, -1
	call	fb_StrConcatAssign@PLT
	xor	r8d, r8d
	mov	ecx, 36
	mov	rdi, rbp
	lea	rdx, .LC42[rip]
	mov	rsi, -1
	call	fb_StrConcatAssign@PLT
	xor	r8d, r8d
	mov	ecx, 42
	mov	rdi, rbp
	lea	rdx, .LC43[rip]
	mov	rsi, -1
	call	fb_StrConcatAssign@PLT
	xor	r8d, r8d
	mov	ecx, 32
	mov	rdi, rbp
	lea	rdx, .LC44[rip]
	mov	rsi, -1
	call	fb_StrConcatAssign@PLT
	xor	r8d, r8d
	mov	ecx, 27
	mov	rdi, rbp
	lea	rdx, .LC45[rip]
	mov	rsi, -1
	call	fb_StrConcatAssign@PLT
	xor	r8d, r8d
	mov	ecx, 26
	mov	rdi, rbp
	lea	rdx, .LC46[rip]
	mov	rsi, -1
	call	fb_StrConcatAssign@PLT
	xor	r8d, r8d
	mov	ecx, 30
	mov	rdi, rbp
	lea	rdx, .LC47[rip]
	mov	rsi, -1
	call	fb_StrConcatAssign@PLT
	xor	r8d, r8d
	mov	ecx, 30
	mov	rdi, rbp
	lea	rdx, .LC48[rip]
	mov	rsi, -1
	call	fb_StrConcatAssign@PLT
	xor	r8d, r8d
	mov	ecx, 30
	mov	rdi, rbp
	lea	rdx, .LC49[rip]
	mov	rsi, -1
	call	fb_StrConcatAssign@PLT
	xor	r8d, r8d
	mov	ecx, 30
	mov	rdi, rbp
	lea	rdx, .LC50[rip]
	mov	rsi, -1
	call	fb_StrConcatAssign@PLT
	xor	r8d, r8d
	mov	ecx, 28
	mov	rdi, rbp
	lea	rdx, .LC51[rip]
	mov	rsi, -1
	call	fb_StrConcatAssign@PLT
	pxor	xmm0, xmm0
	xor	r8d, r8d
	mov	QWORD PTR 160[rsp], 0
	movups	XMMWORD PTR 144[rsp], xmm0
	pxor	xmm0, xmm0
	comisd	xmm0, QWORD PTR SWCH$[rip]
	je	.L261
	mov	ecx, 29
	lea	rdx, .LC52[rip]
	mov	rsi, -1
	mov	rdi, r12
	call	fb_StrConcatAssign@PLT
	xor	r8d, r8d
	mov	ecx, 29
	mov	rdi, r12
	lea	rdx, .LC53[rip]
	mov	rsi, -1
	call	fb_StrConcatAssign@PLT
	xor	r8d, r8d
	mov	ecx, 29
	mov	rdi, r12
	lea	rdx, .LC54[rip]
	mov	rsi, -1
	call	fb_StrConcatAssign@PLT
	xor	r8d, r8d
	mov	ecx, 33
	mov	rdi, r12
	lea	rdx, .LC55[rip]
	mov	rsi, -1
	call	fb_StrConcatAssign@PLT
	xor	r8d, r8d
	mov	ecx, 21
	mov	rdi, r12
	lea	rdx, .LC56[rip]
	mov	rsi, -1
	call	fb_StrConcatAssign@PLT
	xor	r8d, r8d
	mov	ecx, 15
	mov	rdi, r12
	lea	rdx, .LC57[rip]
	mov	rsi, -1
	call	fb_StrConcatAssign@PLT
	xor	r8d, r8d
	mov	ecx, 15
	mov	rdi, r12
	lea	rdx, .LC58[rip]
	mov	rsi, -1
	call	fb_StrConcatAssign@PLT
	xor	r8d, r8d
	mov	ecx, 23
	mov	rdi, r12
	lea	rdx, .LC59[rip]
	mov	rsi, -1
	call	fb_StrConcatAssign@PLT
	xor	r8d, r8d
	mov	ecx, 39
	lea	rdx, .LC60[rip]
.L266:
.L251:
	mov	rsi, -1
	mov	rdi, r12
	call	fb_StrConcatAssign@PLT
	xor	r8d, r8d
	mov	ecx, 18
	mov	rdi, r12
	lea	rdx, .LC61[rip]
	mov	rsi, -1
	call	fb_StrConcatAssign@PLT
	xor	r8d, r8d
	mov	ecx, 25
	mov	rdi, r12
	lea	rdx, .LC62[rip]
	mov	rsi, -1
	call	fb_StrConcatAssign@PLT
	xor	r8d, r8d
	mov	ecx, 3
	mov	rdi, r12
	lea	rdx, .LC63[rip]
	mov	rsi, -1
	call	fb_StrConcatAssign@PLT
	pxor	xmm1, xmm1
	mov	rcx, r14
	mov	rsi, rbp
	lea	rdi, 16[rsp]
	mov	r8, -1
	mov	rdx, -1
	movups	XMMWORD PTR 16[rsp], xmm1
	mov	QWORD PTR 32[rsp], 0
	lea	r14, 176[rsp]
	call	fb_StrConcat@PLT
	pxor	xmm1, xmm1
	lea	rdi, 48[rsp]
	mov	rcx, r12
	mov	rsi, rax
	mov	r8, -1
	movups	XMMWORD PTR 48[rsp], xmm1
	mov	rdx, -1
	mov	QWORD PTR 64[rsp], 0
	call	fb_StrConcat@PLT
	xor	r8d, r8d
	mov	rcx, -1
	mov	rdi, r14
	mov	rdx, rax
	mov	rsi, -1
	call	fb_StrInit@PLT
	mov	edi, 35632
	call	[QWORD PTR GLCREATESHADER$[rip]]
	mov	DWORD PTR [rbx], eax
	mov	edi, eax
	test	eax, eax
	je	.L252
	mov	rax, QWORD PTR 176[rsp]
	lea	r15, 4[rsp]
	lea	rdx, 8[rsp]
	xor	ecx, ecx
	mov	esi, 1
	mov	QWORD PTR 8[rsp], rax
	call	[QWORD PTR GLSHADERSOURCE$[rip]]
	mov	edi, DWORD PTR [rbx]
	call	[QWORD PTR GLCOMPILESHADER$[rip]]
	mov	rdx, r15
	mov	edi, DWORD PTR [rbx]
	mov	esi, 35713
	call	[QWORD PTR GLGETSHADERIV$[rip]]
	mov	edx, DWORD PTR 4[rsp]
	test	edx, edx
	jne	.L253
	mov	rdx, rsp
	mov	esi, 35716
	mov	edi, DWORD PTR [rbx]
	lea	r15, 8[rbx]
	call	[QWORD PTR GLGETSHADERIV$[rip]]
	movsx	rdi, DWORD PTR [rsp]
	call	fb_SPACE@PLT
	xor	r8d, r8d
	mov	rcx, -1
	mov	rdi, r15
	mov	rdx, rax
	mov	rsi, -1
	call	fb_StrAssign@PLT
	mov	rcx, QWORD PTR 8[rbx]
	mov	esi, DWORD PTR [rsp]
	xor	edx, edx
	mov	edi, DWORD PTR [rbx]
	call	[QWORD PTR GLGETSHADERINFOLOG$[rip]]
	pxor	xmm2, xmm2
	mov	rcx, r15
	mov	edx, 42
	lea	rdi, 208[rsp]
	movups	XMMWORD PTR 208[rsp], xmm2
	mov	r8, -1
	lea	rsi, .LC66[rip]
	mov	QWORD PTR 224[rsp], 0
.L269:
	call	fb_StrConcat@PLT
	xor	r8d, r8d
	mov	rcx, -1
	mov	rdi, r15
	mov	rdx, rax
	mov	rsi, -1
.L267:
	call	fb_StrAssign@PLT
	mov	edi, DWORD PTR [rbx]
	call	[QWORD PTR GLDELETESHADER$[rip]]
	mov	DWORD PTR [rbx], 0
.L268:
	mov	rdi, r14
	call	fb_StrDelete@PLT
	mov	rdi, r12
	call	fb_StrDelete@PLT
	mov	rdi, r13
	call	fb_StrDelete@PLT
	mov	rdi, rbp
	call	fb_StrDelete@PLT
	xor	eax, eax
.L255:
.L248:
	add	rsp, 248
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	ret
	.p2align 4,,10
	.p2align 3
.L261:
	mov	ecx, 15
	lea	rdx, .LC57[rip]
	mov	rsi, -1
	mov	rdi, r12
	call	fb_StrConcatAssign@PLT
	xor	r8d, r8d
	mov	ecx, 15
	mov	rdi, r12
	lea	rdx, .LC58[rip]
	mov	rsi, -1
	call	fb_StrConcatAssign@PLT
	xor	r8d, r8d
	mov	ecx, 23
	mov	rdi, r12
	lea	rdx, .LC59[rip]
	mov	rsi, -1
	call	fb_StrConcatAssign@PLT
	xor	r8d, r8d
	mov	ecx, 38
	lea	rdx, .LC64[rip]
	jmp	.L266
	.p2align 4,,10
	.p2align 3
.L253:
	call	[QWORD PTR GLCREATEPROGRAM$[rip]]
	mov	DWORD PTR 4[rbx], eax
	mov	edi, eax
	test	eax, eax
	je	.L270
	mov	esi, DWORD PTR [rbx]
	call	[QWORD PTR GLATTACHSHADER$[rip]]
	mov	edi, DWORD PTR 4[rbx]
	call	[QWORD PTR GLLINKPROGRAM$[rip]]
	mov	edi, DWORD PTR 4[rbx]
	mov	rdx, r15
	mov	esi, 35714
	call	[QWORD PTR GLGETPROGRAMIV$[rip]]
	mov	eax, DWORD PTR 4[rsp]
	test	eax, eax
	jne	.L271
	mov	rdx, rsp
	mov	esi, 35716
	mov	edi, DWORD PTR 4[rbx]
	lea	r15, 8[rbx]
	call	[QWORD PTR GLGETPROGRAMIV$[rip]]
	movsx	rdi, DWORD PTR [rsp]
	call	fb_SPACE@PLT
	xor	r8d, r8d
	mov	rcx, -1
	mov	rdi, r15
	mov	rdx, rax
	mov	rsi, -1
	call	fb_StrAssign@PLT
	mov	rcx, QWORD PTR 8[rbx]
	mov	edi, DWORD PTR 4[rbx]
	xor	edx, edx
	mov	esi, DWORD PTR [rsp]
	call	[QWORD PTR GLGETPROGRAMINFOLOG$[rip]]
	pxor	xmm3, xmm3
	mov	rcx, r15
	mov	edx, 26
	lea	rdi, 208[rsp]
	movups	XMMWORD PTR 208[rsp], xmm3
	mov	r8, -1
	lea	rsi, .LC68[rip]
	mov	QWORD PTR 224[rsp], 0
	jmp	.L269
	.p2align 4,,10
	.p2align 3
.L252:
	lea	rdi, 8[rbx]
	xor	r8d, r8d
	mov	ecx, 44
	mov	rsi, -1
	lea	rdx, .LC65[rip]
	call	fb_StrAssign@PLT
	jmp	.L268
	.p2align 4,,10
	.p2align 3
.L271:
	mov	rdi, r14
	call	fb_StrDelete@PLT
	mov	rdi, r12
	call	fb_StrDelete@PLT
	mov	rdi, r13
	call	fb_StrDelete@PLT
	mov	rdi, rbp
	call	fb_StrDelete@PLT
	mov	eax, 1
	jmp	.L248
	.p2align 4,,10
	.p2align 3
.L270:
	lea	rdi, 8[rbx]
	xor	r8d, r8d
	mov	ecx, 27
	mov	rsi, -1
	lea	rdx, .LC67[rip]
	jmp	.L267
	.size	_ZN9SHADERTOY11COMPILECODEER8FBSTRING, .-_ZN9SHADERTOY11COMPILECODEER8FBSTRING
	.section	.rodata.str1.1
.LC69:
	.string	"can't read shader: \""
.LC70:
	.string	"\""
.LC71:
	.string	" !"
.LC72:
	.string	"\n"
	.text
	.p2align 4
	.globl	_ZN9SHADERTOY11COMPILEFILEER8FBSTRING
	.type	_ZN9SHADERTOY11COMPILEFILEER8FBSTRING, @function
_ZN9SHADERTOY11COMPILEFILEER8FBSTRING:
	push	r14
	pxor	xmm1, xmm1
	mov	r14, rsi
	push	r13
	mov	r13, rdi
	push	r12
	push	rbp
	push	rbx
	add	rsp, -128
	movups	XMMWORD PTR [rsp], xmm1
	mov	r12, rsp
	lea	rbx, 96[rsp]
	mov	QWORD PTR 16[rsp], 0
	call	fb_FileFree@PLT
	xor	r9d, r9d
	xor	ecx, ecx
	xor	edx, edx
	mov	r8d, eax
	mov	esi, 2
	mov	rdi, r14
	mov	ebp, eax
	call	fb_FileOpen@PLT
	test	eax, eax
	je	.L273
	jmp	.L280
	.p2align 4,,10
	.p2align 3
.L276:
	pxor	xmm0, xmm0
	xor	ecx, ecx
	mov	rdx, -1
	mov	rsi, rbx
	mov	edi, ebp
	movups	XMMWORD PTR [rbx], xmm0
	mov	QWORD PTR 16[rbx], 0
	call	fb_FileLineInput@PLT
	xor	r8d, r8d
	mov	rdx, rbx
	mov	rdi, r12
	mov	rcx, -1
	mov	rsi, -1
	call	fb_StrConcatAssign@PLT
	mov	rdi, r12
	xor	r8d, r8d
	mov	ecx, 2
	lea	rdx, .LC72[rip]
	mov	rsi, -1
	call	fb_StrConcatAssign@PLT
	mov	rdi, rbx
	call	fb_StrDelete@PLT
.L273:
.L275:
	mov	edi, ebp
	call	fb_FileEof@PLT
	cmp	eax, -1
	jne	.L276
	mov	edi, ebp
	call	fb_FileClose@PLT
	mov	rsi, r12
	mov	rdi, r13
	call	_ZN9SHADERTOY11COMPILECODEER8FBSTRING
	mov	rdi, r12
	mov	r13d, eax
	call	fb_StrDelete@PLT
	sub	rsp, -128
	mov	eax, r13d
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	ret
.L274:
	.p2align 4,,10
	.p2align 3
.L280:
	lea	rdi, 32[rsp]
	pxor	xmm2, xmm2
	mov	rcx, r14
	mov	r8, -1
	mov	edx, 21
	lea	rsi, .LC69[rip]
	movups	XMMWORD PTR 32[rsp], xmm2
	mov	QWORD PTR 48[rsp], 0
	call	fb_StrConcat@PLT
	lea	rdi, 64[rsp]
	pxor	xmm2, xmm2
	mov	r8d, 2
	mov	rsi, rax
	lea	rcx, .LC70[rip]
	movups	XMMWORD PTR 64[rsp], xmm2
	mov	rdx, -1
	mov	QWORD PTR 80[rsp], 0
	call	fb_StrConcat@PLT
	pxor	xmm2, xmm2
	mov	rdi, rbx
	mov	r8d, 3
	mov	rsi, rax
	lea	rcx, .LC71[rip]
	movups	XMMWORD PTR 96[rsp], xmm2
	mov	rdx, -1
	mov	QWORD PTR 112[rsp], 0
	call	fb_StrConcat@PLT
	lea	rdi, 8[r13]
	xor	r8d, r8d
	mov	rcx, -1
	mov	rdx, rax
	mov	rsi, -1
	xor	r13d, r13d
	call	fb_StrAssign@PLT
	mov	rdi, r12
	call	fb_StrDelete@PLT
	sub	rsp, -128
	mov	eax, r13d
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	ret
	.size	_ZN9SHADERTOY11COMPILEFILEER8FBSTRING, .-_ZN9SHADERTOY11COMPILEFILEER8FBSTRING
	.p2align 4
	.globl	_ZN8MEMORY_TD1Ev
	.type	_ZN8MEMORY_TD1Ev, @function
_ZN8MEMORY_TD1Ev:
	ret
.L282:
	.size	_ZN8MEMORY_TD1Ev, .-_ZN8MEMORY_TD1Ev
	.section	.rodata.str1.1
.LC164:
	.string	" "
.LC165:
	.string	"!"
.LC166:
	.string	"\026"
.LC167:
	.string	"#"
.LC168:
	.string	"$"
.LC169:
	.string	"%"
.LC170:
	.string	"&"
.LC171:
	.string	"'"
.LC172:
	.string	"("
.LC173:
	.string	")"
.LC174:
	.string	"*"
.LC175:
	.string	"+"
.LC176:
	.string	"-"
.LC177:
	.string	"."
.LC178:
	.string	"/"
.LC179:
	.string	"0"
.LC180:
	.string	"1"
.LC181:
	.string	"2"
.LC182:
	.string	"3"
.LC183:
	.string	"4"
.LC184:
	.string	"5"
.LC185:
	.string	"6"
.LC186:
	.string	"7"
.LC187:
	.string	"8"
.LC188:
	.string	"9"
.LC189:
	.string	":"
.LC190:
	.string	";"
.LC191:
	.string	"<"
.LC192:
	.string	"="
.LC193:
	.string	">"
.LC194:
	.string	"?"
.LC195:
	.string	"@"
.LC196:
	.string	"A"
.LC197:
	.string	"B"
.LC198:
	.string	"C"
.LC199:
	.string	"D"
.LC200:
	.string	"E"
.LC201:
	.string	"F"
.LC202:
	.string	"G"
.LC203:
	.string	"H"
.LC204:
	.string	"I"
.LC205:
	.string	"J"
.LC206:
	.string	"K"
.LC207:
	.string	"L"
.LC208:
	.string	"M"
.LC209:
	.string	"N"
.LC210:
	.string	"O"
.LC211:
	.string	"P"
.LC212:
	.string	"Q"
.LC213:
	.string	"R"
.LC214:
	.string	"S"
.LC215:
	.string	"T"
.LC216:
	.string	"U"
.LC217:
	.string	"V"
.LC218:
	.string	"W"
.LC219:
	.string	"X"
.LC220:
	.string	"Y"
.LC221:
	.string	"Z"
.LC222:
	.string	"["
.LC223:
	.string	"\\"
.LC224:
	.string	"]"
.LC225:
	.string	"^"
.LC226:
	.string	"_"
.LC227:
	.string	"`"
.LC228:
	.string	"a"
.LC229:
	.string	"b"
.LC230:
	.string	"c"
.LC231:
	.string	"d"
.LC232:
	.string	"e"
.LC233:
	.string	"f"
.LC234:
	.string	"g"
.LC235:
	.string	"h"
.LC236:
	.string	"i"
.LC237:
	.string	"j"
.LC238:
	.string	"k"
.LC239:
	.string	"l"
.LC240:
	.string	"m"
.LC241:
	.string	"n"
.LC242:
	.string	"o"
.LC243:
	.string	"p"
.LC244:
	.string	"q"
.LC245:
	.string	"r"
.LC246:
	.string	"s"
.LC247:
	.string	"t"
.LC248:
	.string	"u"
.LC249:
	.string	"v"
.LC250:
	.string	"w"
.LC251:
	.string	"x"
.LC252:
	.string	"y"
.LC253:
	.string	"z"
.LC254:
	.string	"{"
.LC255:
	.string	"|"
.LC256:
	.string	"}"
.LC257:
	.string	"~"
	.text
	.p2align 4
	.globl	_ZN8MEMORY_T10SCREENCODEEd
	.type	_ZN8MEMORY_T10SCREENCODEEd, @function
_ZN8MEMORY_T10SCREENCODEEd:
	cvtsd2si	rsi, xmm0
	push	rbp
	mov	edi, 1
	xor	eax, eax
	sub	rsp, 64
	mov	QWORD PTR 24[rsp], 0
	lea	rbp, 32[rsp]
	call	fb_CHR@PLT
	xor	r8d, r8d
	mov	rcx, -1
	mov	rdi, rbp
	mov	rdx, rax
	mov	rsi, -1
	call	fb_StrInit@PLT
	mov	ecx, 2
	lea	rdx, .LC164[rip]
	mov	rdi, rbp
	mov	rsi, -1
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC73[rip]
	test	eax, eax
	jne	.L569
.L284:
.L287:
.L288:
.L289:
.L290:
.L291:
.L292:
.L293:
.L294:
.L295:
.L296:
.L297:
.L298:
.L299:
.L300:
.L301:
.L302:
.L303:
.L304:
.L305:
.L306:
.L307:
.L308:
.L309:
.L310:
.L311:
.L312:
.L313:
.L314:
.L315:
.L316:
.L317:
.L318:
.L319:
.L320:
.L321:
.L322:
.L323:
.L324:
.L325:
.L326:
.L327:
.L328:
.L329:
.L330:
.L331:
.L332:
.L333:
.L334:
.L335:
.L336:
.L337:
.L338:
.L339:
.L340:
.L341:
.L342:
.L343:
.L344:
.L345:
.L346:
.L347:
.L348:
.L349:
.L350:
.L351:
.L352:
.L353:
.L354:
.L355:
.L356:
.L357:
.L358:
.L359:
.L360:
.L361:
.L362:
.L363:
.L364:
.L365:
.L366:
.L367:
.L368:
.L369:
.L370:
.L371:
.L372:
.L373:
.L374:
.L375:
.L376:
.L377:
.L378:
.L379:
.L380:
.L381:
.L382:
	mov	rdi, rbp
	movsd	QWORD PTR 8[rsp], xmm0
	call	fb_StrDelete@PLT
	movsd	xmm0, QWORD PTR 8[rsp]
	add	rsp, 64
	pop	rbp
	ret
	.p2align 4,,10
	.p2align 3
.L569:
	mov	ecx, 2
	lea	rdx, .LC165[rip]
	mov	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC74[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC166[rip]
	mov	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC75[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC167[rip]
	mov	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC76[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC168[rip]
	mov	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC77[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC169[rip]
	mov	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC78[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC170[rip]
	mov	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC79[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC171[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC80[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC172[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC81[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC173[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC82[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC174[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC83[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC175[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC84[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC11[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC85[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC176[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC86[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC177[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC87[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC178[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC88[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC179[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC89[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC180[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC90[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC181[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC91[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC182[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC92[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC183[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC93[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC184[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC94[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC185[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC95[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC186[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC96[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC187[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC97[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC188[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC98[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC189[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC99[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC190[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC100[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC191[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC101[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC192[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC102[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC193[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC103[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC194[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC104[rip]
	test	eax, eax
	je	.L382
	or	rsi, -1
	mov	ecx, 2
	lea	rdx, .LC195[rip]
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	test	eax, eax
	jne	.L285
.L286:
	pxor	xmm0, xmm0
	jmp	.L382
.L285:
	mov	ecx, 2
	lea	rdx, .LC196[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC1[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC197[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC105[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC198[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC106[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC199[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC107[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC200[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC108[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC201[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC109[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC202[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC110[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC203[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC111[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC204[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC5[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC205[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC112[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC206[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC113[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC207[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC114[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC208[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC115[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC209[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC116[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC210[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC117[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC211[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC6[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC212[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC118[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC213[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC119[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC214[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC120[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC215[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC121[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC216[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC122[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC217[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC123[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC218[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC124[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC219[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC125[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC220[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC126[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC221[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC127[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC222[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC128[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC223[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC129[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC224[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC130[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC225[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC131[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC226[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC132[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC227[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC133[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC228[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC134[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC229[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC135[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC230[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC136[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC231[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC137[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC232[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC138[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC233[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC139[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC234[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC140[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC235[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC141[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC236[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC142[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC237[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC143[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC238[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC144[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC239[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC145[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC240[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC146[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC241[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC147[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC242[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC148[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC243[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC149[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC244[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC150[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC245[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC151[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC246[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC152[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC247[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC153[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC248[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC154[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC249[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC155[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC250[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC156[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC251[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC157[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC252[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC158[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC253[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC159[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC254[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC160[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC255[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC161[rip]
	test	eax, eax
	je	.L382
	mov	ecx, 2
	lea	rdx, .LC256[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC162[rip]
	test	eax, eax
	je	.L382
	or	rsi, -1
	mov	ecx, 2
	lea	rdx, .LC257[rip]
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	test	eax, eax
	jne	.L286
	movsd	xmm0, QWORD PTR .LC163[rip]
	jmp	.L382
	.size	_ZN8MEMORY_T10SCREENCODEEd, .-_ZN8MEMORY_T10SCREENCODEEd
	.p2align 4
	.globl	_ZN8MEMORY_T5PEEKBEd
	.type	_ZN8MEMORY_T5PEEKBEd, @function
_ZN8MEMORY_T5PEEKBEd:
	cvtsd2si	rax, xmm0
	movsd	xmm0, QWORD PTR [rdi+rax*8]
	ret
	.size	_ZN8MEMORY_T5PEEKBEd, .-_ZN8MEMORY_T5PEEKBEd
	.p2align 4
	.globl	_ZN8MEMORY_T5PEEKWEd
	.type	_ZN8MEMORY_T5PEEKWEd, @function
_ZN8MEMORY_T5PEEKWEd:
	movapd	xmm1, xmm0
	call	_ZN8MEMORY_T5PEEKBEd
	addsd	xmm1, QWORD PTR .LC1[rip]
	movapd	xmm2, xmm0
	cvtsd2si	rdx, xmm2
	movapd	xmm0, xmm1
	call	_ZN8MEMORY_T5PEEKBEd
	cvtsd2si	rax, xmm0
	pxor	xmm0, xmm0
	sal	rax, 8
	or	rax, rdx
	cvtsi2sd	xmm0, rax
	ret
	.size	_ZN8MEMORY_T5PEEKWEd, .-_ZN8MEMORY_T5PEEKWEd
	.p2align 4
	.globl	_ZN8MEMORY_T8ISSYMBOLE8FBSTRINGd
	.type	_ZN8MEMORY_T8ISSYMBOLE8FBSTRINGd, @function
_ZN8MEMORY_T8ISSYMBOLE8FBSTRINGd:
	push	rbx
	mov	rbx, rsi
	sub	rsp, 16
	jmp	.L573
.L575:
	.p2align 4,,10
	.p2align 3
.L578:
.L574:
	addsd	xmm0, QWORD PTR .LC1[rip]
.L573:
	cvtsd2si	rsi, xmm0
	mov	edx, 1
	mov	rdi, rbx
	movsd	QWORD PTR 8[rsp], xmm0
	call	fb_StrMid@PLT
	mov	esi, 1
	mov	rdi, rax
	call	fb_ASC@PLT
	movsd	xmm0, QWORD PTR 8[rsp]
	sub	eax, 48
	cmp	eax, 9
	ja	.L578
	add	rsp, 16
	pop	rbx
	ret
	.size	_ZN8MEMORY_T8ISSYMBOLE8FBSTRINGd, .-_ZN8MEMORY_T8ISSYMBOLE8FBSTRINGd
	.p2align 4
	.globl	_ZN8MEMORY_T8ISNUMBERE8FBSTRINGd
	.type	_ZN8MEMORY_T8ISNUMBERE8FBSTRINGd, @function
_ZN8MEMORY_T8ISNUMBERE8FBSTRINGd:
	push	r13
	push	r12
	push	rbp
	cvtsd2si	rbp, xmm0
	push	rbx
	lea	rbx, GET_DATA$[rip]
	sub	rsp, 24
	lea	r12, 1[rbp]
	mov	QWORD PTR 8[rsp], 0
	jmp	.L580
	.p2align 4,,10
	.p2align 3
.L608:
	cmp	eax, 57
	jbe	.L592
.L585:
.L587:
	cmp	eax, 66
	je	.L592
.L588:
	cmp	eax, 98
	sete	cl
	cmp	eax, 72
	sete	dl
	or	cl, dl
	jne	.L592
	cmp	eax, 104
	jne	.L591
.L581:
.L582:
	.p2align 4,,10
	.p2align 3
.L592:
.L583:
	add	r12, 1
.L580:
	lea	r13, -1[r12]
	mov	rdi, rbx
	mov	edx, 1
	mov	rsi, r13
	call	fb_StrMid@PLT
	mov	esi, 1
	mov	rdi, rax
	call	fb_ASC@PLT
	cmp	eax, 47
	ja	.L608
.L584:
	cmp	eax, 38
	je	.L592
.L589:
.L590:
	lea	edx, -45[rax]
	cmp	edx, 1
	jbe	.L592
	cmp	eax, 43
	je	.L592
.L591:
	mov	rdx, r13
	mov	rsi, rbp
	lea	rdi, GET_DATA$[rip]
	call	fb_StrMid@PLT
	mov	rdi, rax
	call	fb_VAL@PLT
	movapd	xmm1, xmm0
	pxor	xmm0, xmm0
	comisd	xmm0, xmm1
	jb	.L609
	add	rsp, 24
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	ret
.L609:
	mov	rdx, r13
	mov	rsi, rbp
	lea	rdi, GET_DATA$[rip]
	call	fb_StrMid@PLT
	add	rsp, 24
	pop	rbx
	mov	rdi, rax
	pop	rbp
	pop	r12
	pop	r13
	jmp	fb_VAL@PLT
	.size	_ZN8MEMORY_T8ISNUMBERE8FBSTRINGd, .-_ZN8MEMORY_T8ISNUMBERE8FBSTRINGd
	.p2align 4
	.globl	_ZN8MEMORY_T6GETXYZEv
	.type	_ZN8MEMORY_T6GETXYZEv, @function
_ZN8MEMORY_T6GETXYZEv:
.L611:
	push	r12
	pxor	xmm4, xmm4
	xor	r8d, r8d
	mov	rcx, -1
	push	rbp
	lea	rdx, GET_DATA$[rip]
	mov	rsi, -1
	push	rbx
	mov	rbx, rdi
	add	rsp, -128
	mov	rbp, rsp
	movups	XMMWORD PTR [rsp], xmm4
	mov	QWORD PTR 16[rsp], 0
	mov	rdi, rbp
	call	fb_StrAssign@PLT
	movsd	xmm0, QWORD PTR .LC110[rip]
	mov	rsi, rbp
	mov	rdi, rbx
	call	_ZN8MEMORY_T8ISNUMBERE8FBSTRINGd
	mov	rdi, rbp
	movsd	QWORD PTR 394840[rbx], xmm0
	call	fb_StrDelete@PLT
	movsd	xmm1, QWORD PTR 394840[rbx]
	pxor	xmm0, xmm0
	comisd	xmm1, xmm0
	je	.L623
	movapd	xmm0, xmm1
	call	fb_DoubleToStr@PLT
	mov	rsi, -1
	mov	rdi, rax
	call	fb_StrLen@PLT
	mov	edx, 1
	lea	rdi, GET_DATA$[rip]
	lea	rsi, 7[rax]
	call	fb_StrMid@PLT
	mov	ecx, 2
	lea	rdx, .LC176[rip]
	mov	rsi, -1
	mov	rdi, rax
	call	fb_StrCompare@PLT
	test	eax, eax
	je	.L627
.L614:
.L616:
	movsd	xmm0, QWORD PTR 394840[rbx]
	lea	r12, 32[rsp]
	call	fb_DoubleToStr@PLT
	mov	rsi, -1
	mov	rdi, rax
	call	fb_StrLen@PLT
	pxor	xmm2, xmm2
	xor	r8d, r8d
	mov	rdi, r12
	mov	rcx, -1
	mov	rbp, rax
	lea	rdx, GET_DATA$[rip]
	mov	rsi, -1
	movups	XMMWORD PTR 32[rsp], xmm2
	add	rbp, 9
	mov	QWORD PTR 48[rsp], 0
	call	fb_StrAssign@PLT
	pxor	xmm0, xmm0
	mov	rsi, r12
	mov	rdi, rbx
	cvtsi2sd	xmm0, rbp
	call	_ZN8MEMORY_T8ISNUMBERE8FBSTRINGd
	mov	rdi, r12
	movsd	QWORD PTR 394848[rbx], xmm0
	call	fb_StrDelete@PLT
	movsd	xmm0, QWORD PTR 394840[rbx]
	call	fb_DoubleToStr@PLT
	mov	rsi, -1
	mov	rdi, rax
	call	fb_StrLen@PLT
	mov	edx, 1
	lea	rdi, GET_DATA$[rip]
	lea	rsi, 9[rax]
	call	fb_StrMid@PLT
	mov	ecx, 2
	lea	rdx, .LC176[rip]
	mov	rsi, -1
	mov	rdi, rax
	call	fb_StrCompare@PLT
	test	eax, eax
	jne	.L618
	movsd	xmm0, QWORD PTR 394840[rbx]
	lea	r12, 96[rsp]
	call	fb_DoubleToStr@PLT
	mov	rsi, -1
	mov	rdi, rax
	call	fb_StrLen@PLT
	pxor	xmm2, xmm2
	xor	r8d, r8d
	mov	rdi, r12
	mov	rbp, rax
	mov	rcx, -1
	lea	rdx, GET_DATA$[rip]
	mov	rsi, -1
	movups	XMMWORD PTR 96[rsp], xmm2
	add	rbp, 10
	mov	QWORD PTR 112[rsp], 0
	call	fb_StrAssign@PLT
	pxor	xmm0, xmm0
	mov	rdi, rbx
	mov	rsi, r12
	cvtsi2sd	xmm0, rbp
	call	_ZN8MEMORY_T8ISNUMBERE8FBSTRINGd
	xorpd	xmm0, XMMWORD PTR .LC258[rip]
	mov	rdi, r12
	movsd	QWORD PTR 394848[rbx], xmm0
	call	fb_StrDelete@PLT
.L617:
.L618:
	movsd	xmm0, QWORD PTR 394848[rbx]
	lea	r12, 64[rsp]
	call	fb_DoubleToStr@PLT
	mov	rsi, -1
	mov	rdi, rax
	call	fb_StrLen@PLT
	pxor	xmm3, xmm3
	xor	r8d, r8d
	mov	rdi, r12
	mov	rcx, -1
	mov	rbp, rax
	lea	rdx, GET_DATA$[rip]
	mov	rsi, -1
	movups	XMMWORD PTR 64[rsp], xmm3
	add	rbp, 13
	mov	QWORD PTR 80[rsp], 0
	call	fb_StrAssign@PLT
	pxor	xmm0, xmm0
	mov	rsi, r12
	mov	rdi, rbx
	cvtsi2sd	xmm0, rbp
	call	_ZN8MEMORY_T8ISNUMBERE8FBSTRINGd
	mov	rdi, r12
	movsd	QWORD PTR 394856[rbx], xmm0
	call	fb_StrDelete@PLT
	movsd	xmm0, QWORD PTR 394848[rbx]
	call	fb_DoubleToStr@PLT
	mov	rsi, -1
	mov	rdi, rax
	call	fb_StrLen@PLT
	mov	edx, 1
	lea	rdi, GET_DATA$[rip]
	lea	rsi, 13[rax]
	call	fb_StrMid@PLT
	mov	ecx, 2
	lea	rdx, .LC176[rip]
	mov	rsi, -1
	mov	rdi, rax
	call	fb_StrCompare@PLT
	test	eax, eax
	jne	.L610
	movsd	xmm0, QWORD PTR 394848[rbx]
	lea	r12, 96[rsp]
	call	fb_DoubleToStr@PLT
	mov	rsi, -1
	mov	rdi, rax
	call	fb_StrLen@PLT
	pxor	xmm3, xmm3
	xor	r8d, r8d
	mov	rdi, r12
	mov	rbp, rax
	mov	rcx, -1
	lea	rdx, GET_DATA$[rip]
	mov	rsi, -1
	movups	XMMWORD PTR 96[rsp], xmm3
	add	rbp, 14
	mov	QWORD PTR 112[rsp], 0
	call	fb_StrAssign@PLT
	pxor	xmm0, xmm0
	mov	rdi, rbx
	mov	rsi, r12
	cvtsi2sd	xmm0, rbp
	call	_ZN8MEMORY_T8ISNUMBERE8FBSTRINGd
	mov	rdi, r12
	movsd	QWORD PTR 394856[rbx], xmm0
	call	fb_StrDelete@PLT
.L619:
.L620:
.L621:
.L610:
	sub	rsp, -128
	pop	rbx
	pop	rbp
	pop	r12
	ret
	.p2align 4,,10
	.p2align 3
.L623:
	call	fb_DoubleToStr@PLT
	mov	rsi, -1
	lea	r12, 96[rsp]
	mov	rdi, rax
	call	fb_StrLen@PLT
	pxor	xmm5, xmm5
	xor	r8d, r8d
	mov	rdi, r12
	mov	rbp, rax
	mov	rcx, -1
	lea	rdx, GET_DATA$[rip]
	mov	rsi, -1
	mov	QWORD PTR 112[rsp], 0
	add	rbp, 7
	movups	XMMWORD PTR 96[rsp], xmm5
	call	fb_StrAssign@PLT
.L626:
	pxor	xmm0, xmm0
	mov	rdi, rbx
	mov	rsi, r12
	cvtsi2sd	xmm0, rbp
	call	_ZN8MEMORY_T8ISNUMBERE8FBSTRINGd
	xorpd	xmm0, XMMWORD PTR .LC258[rip]
	mov	rdi, r12
	movsd	QWORD PTR 394840[rbx], xmm0
	call	fb_StrDelete@PLT
	jmp	.L616
	.p2align 4,,10
	.p2align 3
.L627:
	movsd	xmm0, QWORD PTR 394840[rbx]
	lea	r12, 96[rsp]
	call	fb_DoubleToStr@PLT
	mov	rsi, -1
	mov	rdi, rax
	call	fb_StrLen@PLT
	pxor	xmm6, xmm6
	xor	r8d, r8d
	mov	rdi, r12
	mov	rbp, rax
	mov	rcx, -1
	lea	rdx, GET_DATA$[rip]
	mov	rsi, -1
	mov	QWORD PTR 112[rsp], 0
	add	rbp, 8
	movups	XMMWORD PTR 96[rsp], xmm6
	call	fb_StrAssign@PLT
	jmp	.L626
	.size	_ZN8MEMORY_T6GETXYZEv, .-_ZN8MEMORY_T6GETXYZEv
	.p2align 4
	.globl	_ZN8MEMORY_T6PEEK64Ed
	.type	_ZN8MEMORY_T6PEEK64Ed, @function
_ZN8MEMORY_T6PEEK64Ed:
	comisd	xmm0, QWORD PTR .LC260[rip]
	mov	QWORD PTR -8[rsp], 0
	ja	.L629
	comisd	xmm0, QWORD PTR .LC261[rip]
	jnb	.L641
.L629:
	comisd	xmm0, QWORD PTR .LC262[rip]
	ja	.L632
	comisd	xmm0, QWORD PTR .LC263[rip]
	jb	.L632
.L633:
	subsd	xmm0, QWORD PTR .LC263[rip]
	cvtsd2si	rax, xmm0
	movsd	xmm0, QWORD PTR 134348800[rdi+rax*8]
	ret
	.p2align 4,,10
	.p2align 3
.L641:
.L630:
	subsd	xmm0, QWORD PTR .LC261[rip]
	cvtsd2si	rax, xmm0
	movsd	xmm0, QWORD PTR 134217728[rdi+rax*8]
	ret
	.p2align 4,,10
	.p2align 3
.L632:
	comisd	xmm0, QWORD PTR .LC264[rip]
	ja	.L634
	comisd	xmm0, QWORD PTR .LC265[rip]
	jnb	.L642
.L634:
	comisd	xmm0, QWORD PTR .LC266[rip]
	cvtsd2si	rax, xmm0
	ja	.L636
	comisd	xmm0, QWORD PTR .LC267[rip]
	jnb	.L643
.L636:
	movsd	xmm0, QWORD PTR [rdi+rax*8]
.L628:
	ret
	.p2align 4,,10
	.p2align 3
.L642:
.L635:
	subsd	xmm0, QWORD PTR .LC265[rip]
	cvtsd2si	rax, xmm0
	movsd	xmm0, QWORD PTR 134479872[rdi+rax*8]
	ret
	.p2align 4,,10
	.p2align 3
.L643:
.L637:
.L631:
.L638:
	and	eax, 63
	pxor	xmm0, xmm0
	cmp	rax, 18
	je	.L628
	movsd	xmm0, QWORD PTR .LC259[rip]
	ret
	.size	_ZN8MEMORY_T6PEEK64Ed, .-_ZN8MEMORY_T6PEEK64Ed
	.p2align 4
	.globl	INS_R32
	.type	INS_R32, @function
INS_R32:
.L645:
	mov	eax, DWORD PTR 56[rdi]
	pxor	xmm0, xmm0
	mov	rdx, rdi
	mov	rdi, QWORD PTR 8[rdi]
	cvtsi2sd	xmm0, rax
	call	_ZN8MEMORY_T6PEEK64Ed
	cvtsd2si	eax, xmm0
	mov	BYTE PTR 1[rdx], al
	ret
	.size	INS_R32, .-INS_R32
	.p2align 4
	.globl	INS_R64
	.type	INS_R64, @function
INS_R64:
.L649:
	mov	rax, QWORD PTR 56[rdi]
	pxor	xmm0, xmm0
	mov	rdx, rdi
	cvtsi2sd	xmm0, rax
	test	rax, rax
	jns	.L651
	mov	rcx, rax
	and	eax, 1
	pxor	xmm0, xmm0
	shr	rcx
	or	rcx, rax
	cvtsi2sd	xmm0, rcx
	addsd	xmm0, xmm0
.L651:
	mov	rdi, QWORD PTR 8[rdx]
	call	_ZN8MEMORY_T6PEEK64Ed
	cvtsd2si	eax, xmm0
	mov	BYTE PTR 1[rdx], al
	ret
	.size	INS_R64, .-INS_R64
	.section	.rodata.str1.8
	.align 8
.LC733:
	.string	"mplayer -vo xv -fs -alang en dvd://"
	.section	.rodata.str1.1
.LC734:
	.string	" -dvd-device /dev/sr0"
	.section	.rodata.str1.8
	.align 8
.LC735:
	.string	"mplayer -vo xv -fs dvdnav:// -mouse-movements -dvd-device /dev/sr0"
	.section	.rodata.str1.1
.LC765:
	.string	"./shaders/pc/demo.glsl"
.LC766:
	.string	"file: "
.LC767:
	.string	"\n\n"
.LC768:
	.string	" ok ..."
.LC771:
	.string	"FreeBASIC"
.LC772:
	.string	"Shadertoy.com"
.LC774:
	.string	"iChannel0"
.LC775:
	.string	"iGlobalTime"
.LC776:
	.string	"iTime"
.LC777:
	.string	"iResolution"
.LC778:
	.string	"iMouse"
.LC779:
	.string	"iFrame"
.LC785:
	.string	" fps: "
.LC788:
	.string	"tmp.pov"
.LC789:
	.string	"// Start of file"
.LC790:
	.string	"// End of file"
.LC791:
	.string	"povray -d -H600 -W800 tmp.pov"
	.section	.rodata.str1.8
	.align 8
.LC792:
	.string	"convert tmp.png -w --o tmp.bmp"
	.section	.rodata.str1.1
.LC793:
	.string	"cp tmp.bmp ./vram/"
.LC794:
	.string	".bmp"
.LC795:
	.string	"rm tmp.pov tmp.png"
.LC796:
	.string	"./vram/"
.LC797:
	.string	".\\vram\\"
.LC798:
	.string	"aa_level"
.LC799:
	.string	"aastep"
.LC800:
	.string	"aa_threshold"
.LC801:
	.string	"abs"
.LC802:
	.string	"absolute"
.LC803:
	.string	"absorption"
.LC804:
	.string	"abstract"
.LC805:
	.string	"accept"
.LC806:
	.string	"access"
.LC807:
	.string	"accuracy"
.LC808:
	.string	"acos"
.LC809:
	.string	"acosh"
.LC810:
	.string	"active"
.LC811:
	.string	"adaptive"
.LC812:
	.string	"adc_bailout"
.LC813:
	.string	"add"
.LC814:
	.string	"address"
.LC815:
	.string	"advancing"
.LC816:
	.string	"after"
.LC817:
	.string	"agate"
.LC818:
	.string	"agate_turb"
.LC819:
	.string	"alias"
.LC820:
	.string	"all"
.LC821:
	.string	"all_intersections"
.LC822:
	.string	"alpha"
.LC823:
	.string	"alphabet"
.LC824:
	.string	"alphabetic"
.LC825:
	.string	"alphabetic-lower"
.LC826:
	.string	"alphabetic-upper"
.LC827:
	.string	"alphanumeric"
.LC828:
	.string	"alphanumeric-edited"
.LC829:
	.string	"also"
.LC830:
	.string	"alter"
.LC831:
	.string	"alternate"
.LC832:
	.string	"altitude"
.LC833:
	.string	"always_sample"
.LC834:
	.string	"ambient"
.LC835:
	.string	"ambient_light"
.LC836:
	.string	"and"
.LC837:
	.string	"and_bits"
.LC838:
	.string	"angle"
.LC839:
	.string	"any"
.LC840:
	.string	"aperture"
.LC841:
	.string	"append"
.LC842:
	.string	"apply"
.LC843:
	.string	"arc_angle"
.LC844:
	.string	"are"
.LC845:
	.string	"area"
.LC846:
	.string	"area_light"
.LC847:
	.string	"areas"
.LC848:
	.string	"array"
.LC849:
	.string	"arraylength"
.LC850:
	.string	"as"
.LC851:
	.string	"asc"
.LC852:
	.string	"ascending"
.LC853:
	.string	"ascii"
.LC854:
	.string	"asin"
.LC855:
	.string	"asinh"
.LC856:
	.string	"asm"
.LC857:
	.string	"assembler"
.LC858:
	.string	"assert"
.LC859:
	.string	"assign"
.LC860:
	.string	"assumed_gamma"
.LC861:
	.string	"async"
.LC862:
	.string	"at"
.LC863:
	.string	"atan"
.LC864:
	.string	"atan2"
.LC865:
	.string	"atanh"
.LC866:
	.string	"atn"
.LC867:
	.string	"attribute"
.LC868:
	.string	"author"
.LC869:
	.string	"auto"
.LC870:
	.string	"automatic"
.LC871:
	.string	"autostop"
.LC872:
	.string	"average"
.LC873:
	.string	"avg"
.LC874:
	.string	"await"
.LC875:
	.string	"backfacing"
.LC876:
	.string	"background"
.LC877:
	.string	"backspace"
.LC878:
	.string	"basis"
.LC879:
	.string	"beep"
.LC880:
	.string	"before"
.LC881:
	.string	"begin"
.LC882:
	.string	"beginning"
.LC883:
	.string	"between"
.LC884:
	.string	"bezier_spline"
.LC885:
	.string	"bicubic_patch"
.LC886:
	.string	"binary"
.LC887:
	.string	"bind"
.LC888:
	.string	"blackbody"
.LC889:
	.string	"black_hole"
.LC890:
	.string	"blank"
.LC891:
	.string	"bload"
.LC892:
	.string	"blob"
.LC893:
	.string	"block"
.LC894:
	.string	"blue"
.LC895:
	.string	"blur_samples"
.LC896:
	.string	"bool"
.LC897:
	.string	"both"
.LC898:
	.string	"bottom"
.LC899:
	.string	"bounded_by"
.LC900:
	.string	"box"
.LC901:
	.string	"boxed"
.LC902:
	.string	"bozo"
.LC903:
	.string	"break"
.LC904:
	.string	"brick"
.LC905:
	.string	"brick_size"
.LC906:
	.string	"brightness"
.LC907:
	.string	"brilliance"
.LC908:
	.string	"bsave"
.LC909:
	.string	"b_spline"
.LC910:
	.string	"bump"
.LC911:
	.string	"bump_map"
.LC912:
	.string	"bumps"
.LC913:
	.string	"bump_size"
.LC914:
	.string	"bvec2"
.LC915:
	.string	"bvec3"
.LC916:
	.string	"bvec4"
.LC917:
	.string	"by"
.LC918:
	.string	"byte"
.LC919:
	.string	"cache"
.LC920:
	.string	"calculatenormal"
.LC921:
	.string	"call"
.LC922:
	.string	"calls"
.LC923:
	.string	"camera"
.LC924:
	.string	"cancel"
.LC925:
	.string	"cardinality"
.LC926:
	.string	"case"
.LC927:
	.string	"cast"
.LC928:
	.string	"castnamespace"
.LC929:
	.string	"caustics"
.LC930:
	.string	"cbl"
.LC931:
	.string	"cbrt"
.LC932:
	.string	"cd"
.LC933:
	.string	"cdbl"
.LC934:
	.string	"cdecl"
.LC935:
	.string	"ceil"
.LC936:
	.string	"cellnoise"
.LC937:
	.string	"cells"
.LC938:
	.string	"centroid"
.LC939:
	.string	"cf"
.LC940:
	.string	"ch"
.LC941:
	.string	"chain"
.LC942:
	.string	"char"
.LC943:
	.string	"character"
.LC944:
	.string	"character_length"
.LC945:
	.string	"character_length_b"
.LC946:
	.string	"character_length_mb"
.LC947:
	.string	"characters"
.LC948:
	.string	"char_length"
.LC949:
	.string	"char_length_b"
.LC950:
	.string	"char_length_mb"
.LC951:
	.string	"charset"
.LC952:
	.string	"chdir"
.LC953:
	.string	"check"
.LC954:
	.string	"checker"
.LC955:
	.string	"chr"
.LC956:
	.string	"cint"
.LC957:
	.string	"circle"
.LC958:
	.string	"circular"
.LC959:
	.string	"clamp"
.LC960:
	.string	"class"
.LC961:
	.string	"class-id"
.LC962:
	.string	"clear"
.LC963:
	.string	"clipped_by"
.LC964:
	.string	"clock"
.LC965:
	.string	"clock_delta"
.LC966:
	.string	"clock_on"
.LC967:
	.string	"clock-units"
.LC968:
	.string	"close"
.LC969:
	.string	"closure"
.LC970:
	.string	"cls"
.LC971:
	.string	"cobol"
.LC972:
	.string	"code"
.LC973:
	.string	"code-set"
.LC974:
	.string	"collating"
.LC975:
	.string	"collect"
.LC976:
	.string	"color"
.LC977:
	.string	"color_map"
.LC978:
	.string	"color.w"
.LC979:
	.string	"colour"
.LC980:
	.string	"colour_map"
.LC981:
	.string	"column"
.LC982:
	.string	"com"
.LC983:
	.string	"comma"
.LC984:
	.string	"comment"
.LC985:
	.string	"commit"
.LC986:
	.string	"common"
.LC987:
	.string	"communication"
.LC988:
	.string	"comp"
.LC989:
	.string	"comp-1"
.LC990:
	.string	"comp-2"
.LC991:
	.string	"comp-3"
.LC992:
	.string	"comp-4"
.LC993:
	.string	"comp-5"
.LC994:
	.string	"complex"
.LC995:
	.string	"component"
.LC996:
	.string	"composite"
.LC997:
	.string	"computational"
.LC998:
	.string	"computational-1"
.LC999:
	.string	"computational-2"
.LC1000:
	.string	"computational-3"
.LC1001:
	.string	"computational-4"
.LC1002:
	.string	"computational-5"
.LC1003:
	.string	"compute"
.LC1004:
	.string	"com-reg"
.LC1005:
	.string	"concat"
.LC1006:
	.string	"concatenate"
.LC1007:
	.string	"cond"
.LC1008:
	.string	"cone"
.LC1009:
	.string	"confidence"
.LC1010:
	.string	"configuration"
.LC1011:
	.string	"conic_sweep"
.LC1012:
	.string	"conserve_energy"
.LC1013:
	.string	"const"
.LC1014:
	.string	"constref"
.LC1015:
	.string	"constructor"
.LC1016:
	.string	"cont"
.LC1017:
	.string	"contained_by"
.LC1018:
	.string	"contains"
.LC1019:
	.string	"content"
.LC1020:
	.string	"continue"
.LC1021:
	.string	"control"
.LC1022:
	.string	"control0"
.LC1023:
	.string	"control1"
.LC1024:
	.string	"controls"
.LC1025:
	.string	"converting"
.LC1026:
	.string	"coords"
.LC1027:
	.string	"corr"
.LC1028:
	.string	"corresponding"
.LC1029:
	.string	"cos"
.LC1030:
	.string	"cosh"
.LC1031:
	.string	"count"
.LC1032:
	.string	"cppdecl"
.LC1033:
	.string	"crackle"
.LC1034:
	.string	"crand"
.LC1035:
	.string	"cross"
.LC1036:
	.string	"csng"
.LC1037:
	.string	"csrlin"
.LC1038:
	.string	"cube"
.LC1039:
	.string	"cubic"
.LC1040:
	.string	"cubic_spline"
.LC1041:
	.string	"cubic_wave"
.LC1042:
	.string	"currency"
.LC1043:
	.string	"current_date"
.LC1044:
	.string	"current_time"
.LC1045:
	.string	"current_timestamp"
.LC1046:
	.string	"cursor"
.LC1047:
	.string	"cutaway_textures"
.LC1048:
	.string	"cvd"
.LC1049:
	.string	"cvi"
.LC1050:
	.string	"cvs"
.LC1051:
	.string	"cylinder"
.LC1052:
	.string	"cylindrical"
.LC1053:
	.string	"data"
.LC1054:
	.string	"dataxel"
.LC1055:
	.string	"date"
.LC1056:
	.string	"date-compiled"
.LC1057:
	.string	"date-written"
.LC1058:
	.string	"day"
.LC1059:
	.string	"day-of-week"
.LC1060:
	.string	"dbcs"
.LC1061:
	.string	"dbms_in_memory"
.LC1062:
	.string	"de"
.LC1063:
	.string	"debug"
.LC1064:
	.string	"debug-contents"
.LC1065:
	.string	"debugging"
.LC1066:
	.string	"debug-item"
.LC1067:
	.string	"debug-line"
.LC1068:
	.string	"debug-name"
.LC1069:
	.string	"debug-sub-1"
.LC1070:
	.string	"debug-sub-2"
.LC1071:
	.string	"debug-sub-3"
.LC1072:
	.string	"dec"
.LC1073:
	.string	"decimal"
.LC1074:
	.string	"decimal-point"
.LC1075:
	.string	"declaratives"
.LC1076:
	.string	"declare"
.LC1077:
	.string	"decode"
.LC1078:
	.string	"def"
.LC1079:
	.string	"default"
.LC1080:
	.string	"defdbl"
.LC1081:
	.string	"define"
.LC1082:
	.string	"defined"
.LC1083:
	.string	"defint"
.LC1084:
	.string	"defsng"
.LC1085:
	.string	"defstr"
.LC1086:
	.string	"degrees"
.LC1087:
	.string	"delete"
.LC1088:
	.string	"delimited"
.LC1089:
	.string	"delimiter"
.LC1090:
	.string	"density"
.LC1091:
	.string	"density_file"
.LC1092:
	.string	"density_map"
.LC1093:
	.string	"dents"
.LC1094:
	.string	"depending"
.LC1095:
	.string	"desc"
.LC1096:
	.string	"descending"
.LC1097:
	.string	"destination"
.LC1098:
	.string	"destructor"
.LC1099:
	.string	"detail"
.LC1100:
	.string	"determinant"
.LC1101:
	.string	"df3"
.LC1102:
	.string	"dict_find"
.LC1103:
	.string	"dict_next"
.LC1104:
	.string	"dict_value"
.LC1105:
	.string	"difference"
.LC1106:
	.string	"diffuse"
.LC1107:
	.string	"dim"
.LC1108:
	.string	"dimension"
.LC1109:
	.string	"dimensions"
.LC1110:
	.string	"dimension_size"
.LC1111:
	.string	"direction"
.LC1112:
	.string	"directive_error"
.LC1113:
	.string	"disc"
.LC1114:
	.string	"discard"
.LC1115:
	.string	"dispersion"
.LC1116:
	.string	"dispersion_samples"
.LC1117:
	.string	"displace"
.LC1118:
	.string	"display"
.LC1119:
	.string	"display-1"
.LC1120:
	.string	"dispose"
.LC1121:
	.string	"distance"
.LC1122:
	.string	"dist_exp"
.LC1123:
	.string	"distinct"
.LC1124:
	.string	"div"
.LC1125:
	.string	"divide"
.LC1126:
	.string	"division"
.LC1127:
	.string	"do"
.LC1128:
	.string	"dot"
.LC1129:
	.string	"double"
.LC1130:
	.string	"doublegreatethan"
.LC1131:
	.string	"double_illuminate"
.LC1132:
	.string	"down"
.LC1133:
	.string	"downto"
.LC1134:
	.string	"draw"
.LC1135:
	.string	"duplicates"
.LC1136:
	.string	"dvec2"
.LC1137:
	.string	"dvec3"
.LC1138:
	.string	"dvec4"
.LC1139:
	.string	"dx"
.LC1140:
	.string	"dy"
.LC1141:
	.string	"dynamic"
.LC1142:
	.string	"dz"
.LC1143:
	.string	"eccentricity"
.LC1144:
	.string	"edit"
.LC1145:
	.string	"egcs"
.LC1146:
	.string	"egi"
.LC1147:
	.string	"eject"
.LC1148:
	.string	"elif"
.LC1149:
	.string	"else"
.LC1150:
	.string	"elseif"
.LC1151:
	.string	"emi"
.LC1152:
	.string	"emission"
.LC1153:
	.string	"enable"
.LC1154:
	.string	"encode"
.LC1155:
	.string	"end"
.LC1156:
	.string	"end-add"
.LC1157:
	.string	"end-call"
.LC1158:
	.string	"end-compute"
.LC1159:
	.string	"end-delete"
.LC1160:
	.string	"end-divide"
.LC1161:
	.string	"end-evaluate"
.LC1162:
	.string	"end-if"
.LC1163:
	.string	"ending"
.LC1164:
	.string	"end-invoke"
.LC1165:
	.string	"end-multiply"
.LC1166:
	.string	"endofdata"
.LC1167:
	.string	"end-of-page"
.LC1168:
	.string	"end-perform"
.LC1169:
	.string	"end-read"
.LC1170:
	.string	"end-receive"
.LC1171:
	.string	"end-return"
.LC1172:
	.string	"end-rewrite"
.LC1173:
	.string	"end-search"
.LC1174:
	.string	"end-start"
.LC1175:
	.string	"end-string"
.LC1176:
	.string	"end-subtract"
.LC1177:
	.string	"endswith"
.LC1178:
	.string	"end-unstring"
.LC1179:
	.string	"end-write"
.LC1180:
	.string	"enter"
.LC1181:
	.string	"entry"
.LC1182:
	.string	"enum"
.LC1183:
	.string	"environ"
.LC1184:
	.string	"environment"
.LC1185:
	.string	"eof"
.LC1186:
	.string	"eop"
.LC1187:
	.string	"equal"
.LC1188:
	.string	"equivalence"
.LC1189:
	.string	"eqv"
.LC1190:
	.string	"erase"
.LC1191:
	.string	"erdev"
.LC1192:
	.string	"erf"
.LC1193:
	.string	"erfc"
.LC1194:
	.string	"erl"
.LC1195:
	.string	"err"
.LC1196:
	.string	"error"
.LC1197:
	.string	"error_bound"
.LC1198:
	.string	"escape"
.LC1199:
	.string	"esi"
.LC1200:
	.string	"evaluate"
.LC1201:
	.string	"every"
.LC1202:
	.string	"except"
.LC1203:
	.string	"exception"
.LC1204:
	.string	"exit"
.LC1205:
	.string	"exp"
.LC1206:
	.string	"exp2"
.LC1207:
	.string	"expand"
.LC1208:
	.string	"expand_thresholds"
.LC1209:
	.string	"expm1"
.LC1210:
	.string	"exponent"
.LC1211:
	.string	"export"
.LC1212:
	.string	"exports"
.LC1213:
	.string	"extend"
.LC1214:
	.string	"exterior"
.LC1215:
	.string	"extern"
.LC1216:
	.string	"external"
.LC1217:
	.string	"exterr"
.LC1218:
	.string	"extinction"
.LC1219:
	.string	"extract"
.LC1220:
	.string	"fabs"
.LC1221:
	.string	"faceforward"
.LC1222:
	.string	"face_indices"
.LC1223:
	.string	"facets"
.LC1224:
	.string	"fade_color"
.LC1225:
	.string	"fade_colour"
.LC1226:
	.string	"fade_distance"
.LC1227:
	.string	"fade_power"
.LC1228:
	.string	"falloff"
.LC1229:
	.string	"falloff_angle"
.LC1230:
	.string	"false"
.LC1231:
	.string	"far"
.LC1232:
	.string	"fclose"
.LC1233:
	.string	"fd"
.LC1234:
	.string	"field"
.LC1235:
	.string	"file"
.LC1236:
	.string	"file-control"
.LC1237:
	.string	"file_exists"
.LC1238:
	.string	"files"
.LC1239:
	.string	"filler"
.LC1240:
	.string	"filter"
.LC1241:
	.string	"filterwidth"
.LC1242:
	.string	"final"
.LC1243:
	.string	"final_clock"
.LC1244:
	.string	"final_frame"
.LC1245:
	.string	"finalization"
.LC1246:
	.string	"finally"
.LC1247:
	.string	"finish"
.LC1248:
	.string	"first"
.LC1249:
	.string	"fisheye"
.LC1250:
	.string	"fix"
.LC1251:
	.string	"fixed"
.LC1252:
	.string	"flat"
.LC1253:
	.string	"flatness"
.LC1254:
	.string	"flip"
.LC1255:
	.string	"float"
.LC1256:
	.string	"floor"
.LC1257:
	.string	"fmod"
.LC1258:
	.string	"fn"
.LC1259:
	.string	"focal_point"
.LC1260:
	.string	"fog"
.LC1261:
	.string	"fog_alt"
.LC1262:
	.string	"fog_offset"
.LC1263:
	.string	"fog_type"
.LC1264:
	.string	"footing"
.LC1265:
	.string	"fopen"
.LC1266:
	.string	"for"
.LC1267:
	.string	"form"
.LC1268:
	.string	"format"
.LC1269:
	.string	"forward"
.LC1270:
	.string	"fprintf"
.LC1271:
	.string	"frag_color"
.LC1272:
	.string	"fragcolor"
.LC1273:
	.string	"frag_coord"
.LC1274:
	.string	"fragcoord"
.LC1275:
	.string	"frame_number"
.LC1276:
	.string	"fre"
.LC1277:
	.string	"frequency"
.LC1278:
	.string	"fresnel"
.LC1279:
	.string	"from"
.LC1280:
	.string	"full"
.LC1281:
	.string	"function"
.LC1282:
	.string	"fvec2"
.LC1283:
	.string	"fvec3"
.LC1284:
	.string	"fvec4"
.LC1285:
	.string	"gather"
.LC1286:
	.string	"generate"
.LC1287:
	.string	"generic"
.LC1288:
	.string	"get"
.LC1289:
	.string	"getattribute"
.LC1290:
	.string	"getchar"
.LC1291:
	.string	"getmatrix"
.LC1292:
	.string	"getmessage"
.LC1293:
	.string	"gettextureinfo"
.LC1294:
	.string	"gif"
.LC1295:
	.string	"giving"
.LC1296:
	.string	"gl_fragcolor"
.LC1297:
	.string	"gl_fragcoord.xy"
.LC1298:
	.string	"global"
.LC1299:
	.string	"global_lights"
.LC1300:
	.string	"global_settings"
.LC1301:
	.string	"go"
.LC1302:
	.string	"goback"
.LC1303:
	.string	"\r\n"
.LC1307:
	.string	"CHARS.INC"
.LC1308:
	.string	"#include \r"
.LC1309:
	.string	"\r"
.LC1310:
	.string	"COLORS.INC"
.LC1311:
	.string	"CONSTS.INC"
.LC1312:
	.string	"DEBUG.INC"
.LC1313:
	.string	"FINISH.INC"
.LC1314:
	.string	"GLASS.INC"
.LC1315:
	.string	"GOLDS.INC"
.LC1316:
	.string	"METALS.INC"
.LC1317:
	.string	"RAD_DEF.INC"
.LC1318:
	.string	"SHAPES2.INC"
.LC1319:
	.string	"SHAPES.INC"
.LC1320:
	.string	"SHAPESQ.INC"
.LC1321:
	.string	"SKIES.INC"
.LC1322:
	.string	"STAGE1.INC"
.LC1323:
	.string	"STARS.INC"
.LC1324:
	.string	"STDCAM.INC"
.LC1325:
	.string	"STONEOLD.INC"
.LC1326:
	.string	"STONES1.INC"
.LC1327:
	.string	"STONES2.INC"
.LC1328:
	.string	"STONES.INC"
.LC1329:
	.string	"TEXTURES.INC"
.LC1330:
	.string	"WOODMAPS.INC"
.LC1331:
	.string	"WOODS.INC"
.LC1332:
	.string	"gosub"
.LC1333:
	.string	"goto"
.LC1334:
	.string	"gradient"
.LC1335:
	.string	"granite"
.LC1336:
	.string	"gray"
.LC1337:
	.string	"gray_threshold"
.LC1338:
	.string	"greateeq"
.LC1339:
	.string	"greater"
.LC1340:
	.string	"green"
.LC1341:
	.string	"group"
.LC1342:
	.string	"group_by"
.LC1343:
	.string	"half"
.LC1344:
	.string	"hash"
.LC1345:
	.string	"hashnoise"
.LC1346:
	.string	"having"
.LC1347:
	.string	"header"
.LC1348:
	.string	"heading"
.LC1349:
	.string	"height_field"
.LC1350:
	.string	"henyey_greenstein"
.LC1351:
	.string	"hex"
.LC1352:
	.string	"hexagon"
.LC1353:
	.string	"hf_gray_16"
.LC1354:
	.string	"hierarchy"
.LC1355:
	.string	"highp"
.LC1356:
	.string	"high-value"
.LC1357:
	.string	"high-values"
.LC1358:
	.string	"hintend"
.LC1359:
	.string	"hint_error"
.LC1360:
	.string	"hintstart"
.LC1361:
	.string	"holdout"
.LC1362:
	.string	"hollow"
.LC1363:
	.string	"hour"
.LC1364:
	.string	"hvec2"
.LC1365:
	.string	"hvec3"
.LC1366:
	.string	"hvec4"
.LC1367:
	.string	"hypercomplex"
.LC1368:
	.string	"hypot"
.LC1369:
	.string	"iChannel1"
.LC1370:
	.string	"iChannel2"
.LC1371:
	.string	"iChannel3"
.LC1372:
	.string	"iChannelResolution"
.LC1373:
	.string	"iChannelTime"
.LC1374:
	.string	"iCube"
.LC1375:
	.string	"id"
.LC1376:
	.string	"iDate"
.LC1377:
	.string	"identification"
.LC1378:
	.string	"if"
.LC1379:
	.string	"ifdef"
.LC1380:
	.string	"ifelse"
.LC1381:
	.string	"iff"
.LC1382:
	.string	"ifndef"
.LC1383:
	.string	"iframe"
.LC1384:
	.string	"iframerate"
.LC1385:
	.string	"iimage1D"
.LC1386:
	.string	"iimage1DArray"
.LC1387:
	.string	"iimage2D"
.LC1388:
	.string	"iimage2DArray"
.LC1389:
	.string	"iimage3D"
.LC1390:
	.string	"iimageBuffer"
.LC1391:
	.string	"iimageCube"
.LC1392:
	.string	"image"
.LC1393:
	.string	"image1D"
.LC1394:
	.string	"image1DArray"
.LC1395:
	.string	"image1DArrayShadow"
.LC1396:
	.string	"image1DShadow"
.LC1397:
	.string	"image2D"
.LC1398:
	.string	"image2DArray"
.LC1399:
	.string	"image2DArrayShadow"
.LC1400:
	.string	"image2DShadow"
.LC1401:
	.string	"image3D"
.LC1402:
	.string	"imageBuffer"
.LC1403:
	.string	"imageCube"
.LC1404:
	.string	"image_height"
.LC1405:
	.string	"image_map"
.LC1406:
	.string	"image_pattern"
.LC1407:
	.string	"image_width"
.LC1408:
	.string	"imouse"
.LC1409:
	.string	"imp"
.LC1410:
	.string	"implementation"
.LC1411:
	.string	"import"
.LC1412:
	.string	"in"
.LC1413:
	.string	"include"
.LC1414:
	.string	"index"
.LC1415:
	.string	"indexed"
.LC1416:
	.string	"indicate"
.LC1417:
	.string	"inherited"
.LC1418:
	.string	"inherits"
.LC1419:
	.string	"initial"
.LC1420:
	.string	"initial_clock"
.LC1421:
	.string	"initial_frame"
.LC1422:
	.string	"initialization"
.LC1423:
	.string	"initialize"
.LC1424:
	.string	"initiate"
.LC1425:
	.string	"inkey"
.LC1426:
	.string	"inline"
.LC1427:
	.string	"inlinenoinline"
.LC1428:
	.string	"in_memory"
.LC1429:
	.string	"inner"
.LC1430:
	.string	"inout"
.LC1431:
	.string	"inp"
.LC1432:
	.string	"input"
.LC1433:
	.string	"input-output"
.LC1434:
	.string	"inquire"
.LC1435:
	.string	"insert"
.LC1436:
	.string	"inside"
.LC1437:
	.string	"inside_vector"
.LC1438:
	.string	"inspect"
.LC1439:
	.string	"installation"
.LC1440:
	.string	"instr"
.LC1441:
	.string	"int"
.LC1442:
	.string	"integer"
.LC1443:
	.string	"interface"
.LC1444:
	.string	"interior"
.LC1445:
	.string	"interior_texture"
.LC1446:
	.string	"internal"
.LC1447:
	.string	"interpolate"
.LC1448:
	.string	"intersect"
.LC1449:
	.string	"intersection"
.LC1450:
	.string	"interval"
.LC1451:
	.string	"intervals"
.LC1452:
	.string	"into"
.LC1453:
	.string	"intrinsic"
.LC1454:
	.string	"invalid"
.LC1455:
	.string	"invariant"
.LC1456:
	.string	"inverse"
.LC1457:
	.string	"inversesqr"
.LC1458:
	.string	"invoke"
.LC1459:
	.string	"i-o"
.LC1460:
	.string	"i-o-control"
.LC1461:
	.string	"ioctl"
.LC1462:
	.string	"ior"
.LC1463:
	.string	"i_resolution"
.LC1464:
	.string	"irid"
.LC1465:
	.string	"irid_wavelength"
.LC1466:
	.string	"is"
.LC1467:
	.string	"isampler1D"
.LC1468:
	.string	"isampler1DArray"
.LC1469:
	.string	"isampler2D"
.LC1470:
	.string	"isampler2DArray"
.LC1471:
	.string	"isampler2DRect"
.LC1472:
	.string	"isampler3D"
.LC1473:
	.string	"iSampleRate"
.LC1474:
	.string	"glsl "
.LC1475:
	.string	"isamplerCube"
.LC1476:
	.string	"isconnected"
.LC1477:
	.string	"isconstant"
.LC1478:
	.string	"isfinite"
.LC1479:
	.string	"isinf"
.LC1480:
	.string	"isnan"
.LC1481:
	.string	"isosurface"
.LC1482:
	.string	"isotropic"
.LC1483:
	.string	"iterate"
.LC1484:
	.string	"i_time"
.LC1485:
	.string	"itime"
.LC1486:
	.string	"itimedelta"
.LC1487:
	.string	"ivec2"
.LC1488:
	.string	"ivec3"
.LC1489:
	.string	"ivec4"
.LC1490:
	.string	"jitter"
.LC1491:
	.string	"join"
.LC1492:
	.string	"jpeg"
.LC1493:
	.string	"julia"
.LC1494:
	.string	"julia_fractal"
.LC1495:
	.string	"just"
.LC1496:
	.string	"justified"
.LC1497:
	.string	"kanji"
.LC1498:
	.string	"key"
.LC1499:
	.string	"kill"
.LC1500:
	.string	"label"
.LC1501:
	.string	"lambda"
.LC1502:
	.string	"last"
.LC1503:
	.string	"lathe"
.LC1504:
	.string	"layout"
.LC1505:
	.string	"lcopy"
.LC1506:
	.string	"leading"
.LC1507:
	.string	"leave"
.LC1508:
	.string	"left"
.LC1509:
	.string	"len"
.LC1510:
	.string	"length"
.LC1511:
	.string	"leopard"
.LC1512:
	.string	"less"
.LC1513:
	.string	"lesseq"
.LC1514:
	.string	"let"
.LC1515:
	.string	"libraryt"
.LC1516:
	.string	"light_group"
.LC1517:
	.string	"light_source"
.LC1518:
	.string	"like"
.LC1519:
	.string	"limit"
.LC1520:
	.string	"limits"
.LC1521:
	.string	"linage"
.LC1522:
	.string	"linage-counter"
.LC1523:
	.string	"line"
.LC1524:
	.string	"linear_spline"
.LC1525:
	.string	"linearstep"
.LC1526:
	.string	"linear_sweep"
.LC1527:
	.string	"line-counter"
.LC1528:
	.string	"lines"
.LC1529:
	.string	"linkage"
.LC1530:
	.string	"list"
.LC1531:
	.string	"llist"
.LC1532:
	.string	"ln"
.LC1533:
	.string	"load"
.LC1534:
	.string	"load_file"
.LC1535:
	.string	"loc"
.LC1536:
	.string	"local"
.LC1537:
	.string	"local-storage"
.LC1538:
	.string	"locate"
.LC1539:
	.string	"location"
.LC1540:
	.string	"lock"
.LC1541:
	.string	"lof"
.LC1542:
	.string	"log"
.LC1543:
	.string	"log10"
.LC1544:
	.string	"log2"
.LC1545:
	.string	"logb"
.LC1546:
	.string	"logical"
.LC1547:
	.string	"long"
.LC1548:
	.string	"look_at"
.LC1549:
	.string	"looks_like"
.LC1550:
	.string	"loop"
.LC1551:
	.string	"lower"
.LC1552:
	.string	"lower_mb"
.LC1553:
	.string	"low_error_factor"
.LC1554:
	.string	"lowp"
.LC1555:
	.string	"low-value"
.LC1556:
	.string	"low-values"
.LC1557:
	.string	"lpad"
.LC1558:
	.string	"lpos"
.LC1559:
	.string	"lprint"
.LC1560:
	.string	"lset"
.LC1561:
	.string	"luminance"
.LC1562:
	.string	"m_2_pi"
.LC1563:
	.string	"m_2_sqrtpi"
.LC1564:
	.string	"m_4_pi"
.LC1565:
	.string	"macro"
.LC1566:
	.string	"magnet"
.LC1567:
	.string	"main"
.LC1568:
	.string	"main_image"
.LC1569:
	.string	"mainImage"
.LC1570:
	.string	"major_radius"
.LC1571:
	.string	"mandel"
.LC1572:
	.string	"map"
.LC1573:
	.string	"map_type"
.LC1574:
	.string	"marble"
.LC1575:
	.string	"mat2"
.LC1576:
	.string	"mat2x2"
.LC1577:
	.string	"mat2x3"
.LC1578:
	.string	"mat2x4"
.LC1579:
	.string	"mat3"
.LC1580:
	.string	"mat3x2"
.LC1581:
	.string	"mat3x3"
.LC1582:
	.string	"mat3x4"
.LC1583:
	.string	"mat4"
.LC1584:
	.string	"mat4x2"
.LC1585:
	.string	"mat4x3"
.LC1586:
	.string	"mat4x4"
.LC1587:
	.string	"material"
.LC1588:
	.string	"material_map"
.LC1589:
	.string	"matrix"
.LC1590:
	.string	"max"
.LC1591:
	.string	"max_extent"
.LC1592:
	.string	"max_gradient"
.LC1593:
	.string	"max_intersections"
.LC1594:
	.string	"max_iteration"
.LC1595:
	.string	"max_sample"
.LC1596:
	.string	"max_trace"
.LC1597:
	.string	"max_trace_level"
.LC1598:
	.string	"m_e"
.LC1599:
	.string	"media"
.LC1600:
	.string	"media_attenuation"
.LC1601:
	.string	"media_interaction"
.LC1602:
	.string	"mediump"
.LC1603:
	.string	"memory"
.LC1604:
	.string	"memory_size"
.LC1605:
	.string	"merge"
.LC1606:
	.string	"mesh"
.LC1607:
	.string	"mesh2"
.LC1608:
	.string	"message"
.LC1609:
	.string	"metaclass"
.LC1610:
	.string	"meta_hint"
.LC1611:
	.string	"metallic"
.LC1612:
	.string	"method"
.LC1613:
	.string	"method-id"
.LC1614:
	.string	"metric"
.LC1615:
	.string	"microfacet"
.LC1616:
	.string	"mid"
.LC1617:
	.string	"min"
.LC1618:
	.string	"min_extent"
.LC1619:
	.string	"minimum_reuse"
.LC1620:
	.string	"minute"
.LC1621:
	.string	"mkd"
.LC1622:
	.string	"mkdir"
.LC1623:
	.string	"mki"
.LC1624:
	.string	"mks"
.LC1625:
	.string	"M_LN"
.LC1626:
	.string	"M_LN2"
.LC1627:
	.string	"M_LOG10E"
.LC1628:
	.string	"M_LOG2E"
.LC1629:
	.string	"mod"
.LC1630:
	.string	"mode"
.LC1631:
	.string	"modules"
.LC1632:
	.string	"month"
.LC1633:
	.string	"more-labels"
.LC1634:
	.string	"mortar"
.LC1635:
	.string	"motor"
.LC1636:
	.string	"move"
.LC1637:
	.string	"M_PI"
.LC1638:
	.string	"M_PI_2"
.LC1639:
	.string	"M_PI_4"
.LC1640:
	.string	"M_SQRT"
.LC1641:
	.string	"M_SQRT2"
.LC1642:
	.string	"multiple"
.LC1643:
	.string	"multiply"
.LC1644:
	.string	"name"
.LC1645:
	.string	"namelist"
.LC1646:
	.string	"native"
.LC1647:
	.string	"native_binary"
.LC1648:
	.string	"natural"
.LC1649:
	.string	"natural_spline"
.LC1650:
	.string	"nchar"
.LC1651:
	.string	"near"
.LC1652:
	.string	"nearest_count"
.LC1653:
	.string	"negative"
.LC1654:
	.string	"nested_loop"
.LC1655:
	.string	"new"
.LC1656:
	.string	"next"
.LC1657:
	.string	"nil"
.LC1658:
	.string	"no"
.LC1659:
	.string	"no_bump_scale"
.LC1660:
	.string	"no_cache"
.LC1661:
	.string	"no_image"
.LC1662:
	.string	"noise"
.LC1663:
	.string	"noise_generator"
.LC1664:
	.string	"none"
.LC1665:
	.string	"nonlocal"
.LC1666:
	.string	"noperspective"
.LC1667:
	.string	"no_reflection"
.LC1668:
	.string	"normal"
.LC1669:
	.string	"normal_indices"
.LC1670:
	.string	"normalize"
.LC1671:
	.string	"normal_map"
.LC1672:
	.string	"normal_vectors"
.LC1673:
	.string	"no_shadow"
.LC1674:
	.string	"nostackframe"
.LC1675:
	.string	"not"
.LC1676:
	.string	"noteq"
.LC1677:
	.string	"null"
.LC1678:
	.string	"nulls"
.LC1679:
	.string	"number"
.LC1680:
	.string	"number_of_waves"
.LC1681:
	.string	"numeric"
.LC1682:
	.string	"numeric-edited"
.LC1683:
	.string	"object"
.LC1684:
	.string	"object-computer"
.LC1685:
	.string	"occurs"
.LC1686:
	.string	"oct"
.LC1687:
	.string	"octaves"
.LC1688:
	.string	"octet_length"
.LC1689:
	.string	"of"
.LC1690:
	.string	"off"
.LC1691:
	.string	"offset"
.LC1692:
	.string	"oldfpccall"
.LC1693:
	.string	"omega"
.LC1694:
	.string	"omitted"
.LC1695:
	.string	"omnimax"
.LC1696:
	.string	"on"
.LC1697:
	.string	"once"
.LC1698:
	.string	"onion"
.LC1699:
	.string	"open"
.LC1700:
	.string	"operator"
.LC1701:
	.string	"option"
.LC1702:
	.string	"optional"
.LC1703:
	.string	"options"
.LC1704:
	.string	"or"
.LC1705:
	.string	"or_bits"
.LC1706:
	.string	"order"
.LC1707:
	.string	"ordered"
.LC1708:
	.string	"oren_nayar"
.LC1709:
	.string	"organization"
.LC1710:
	.string	"orient"
.LC1711:
	.string	"orientation"
.LC1712:
	.string	"orthographic"
.LC1713:
	.string	"other"
.LC1714:
	.string	"out"
.LC1715:
	.string	"outer"
.LC1716:
	.string	"output"
.LC1717:
	.string	"overflow"
.LC1718:
	.string	"overlaps"
.LC1719:
	.string	"override"
.LC1720:
	.string	"packed"
.LC1721:
	.string	"packed-decimal"
.LC1722:
	.string	"padding"
.LC1723:
	.string	"page"
.LC1724:
	.string	"page-counter"
.LC1725:
	.string	"paint"
.LC1726:
	.string	"palette"
.LC1727:
	.string	"panoramic"
.LC1728:
	.string	"parallel"
.LC1729:
	.string	"parameter"
.LC1730:
	.string	"parametric"
.LC1731:
	.string	"partition"
.LC1732:
	.string	"pascal"
.LC1733:
	.string	"pass"
.LC1734:
	.string	"pass_through"
.LC1735:
	.string	"password"
.LC1736:
	.string	"pattern"
.LC1737:
	.string	"pause"
.LC1738:
	.string	"pcopy"
.LC1739:
	.string	"peek"
.LC1740:
	.string	"pen"
.LC1741:
	.string	"perform"
.LC1742:
	.string	"perspective"
.LC1743:
	.string	"pf"
.LC1744:
	.string	"pgm"
.LC1745:
	.string	"ph"
.LC1746:
	.string	"phase"
.LC1747:
	.string	"phong"
.LC1748:
	.string	"phong_size"
.LC1749:
	.string	"photons"
.LC1750:
	.string	"pi"
.LC1751:
	.string	"pic"
.LC1752:
	.string	"picture"
.LC1753:
	.string	"pigment"
.LC1754:
	.string	"pigment_map"
.LC1755:
	.string	"pigment_pattern"
.LC1756:
	.string	"planar"
.LC1757:
	.string	"plane"
.LC1758:
	.string	"play"
.LC1759:
	.string	"plus"
.LC1760:
	.string	"pmap"
.LC1761:
	.string	"png"
.LC1762:
	.string	"pnoise"
.LC1763:
	.string	"point"
.LC1764:
	.string	"point_at"
.LC1765:
	.string	"pointcloud_get"
.LC1766:
	.string	"pointcloud_search"
.LC1767:
	.string	"pointcloud_write"
.LC1768:
	.string	"pointer"
.LC1769:
	.string	"poke"
.LC1770:
	.string	"poly"
.LC1771:
	.string	"polygon"
.LC1772:
	.string	"poly_wave"
.LC1773:
	.string	"pos"
.LC1774:
	.string	"position"
.LC1775:
	.string	"position_b"
.LC1776:
	.string	"position_mb"
.LC1777:
	.string	"positive"
.LC1778:
	.string	"pot"
.LC1779:
	.string	"pow"
.LC1780:
	.string	"ppm"
.LC1781:
	.string	"precision"
.LC1782:
	.string	"precompute"
.LC1783:
	.string	"preset"
.LC1784:
	.string	"pretrace_end"
.LC1785:
	.string	"pretrace_start"
.LC1786:
	.string	"print"
.LC1787:
	.string	"printf"
.LC1788:
	.string	"printing"
.LC1789:
	.string	"prism"
.LC1790:
	.string	"private"
.LC1791:
	.string	"procedure"
.LC1792:
	.string	"procedure-pointer"
.LC1793:
	.string	"procedures"
.LC1794:
	.string	"proceed"
.LC1795:
	.string	"processing"
.LC1796:
	.string	"prod"
.LC1797:
	.string	"program"
.LC1798:
	.string	"program-id"
.LC1799:
	.string	"projected_through"
.LC1800:
	.string	"property"
.LC1801:
	.string	"protected"
.LC1802:
	.string	"pset"
.LC1803:
	.string	"psnoise"
.LC1804:
	.string	"ptype"
.LC1805:
	.string	"public"
.LC1806:
	.string	"published"
.LC1807:
	.string	"purge"
.LC1808:
	.string	"put"
.LC1809:
	.string	"pwr"
.LC1810:
	.string	"quadratic_spline"
.LC1811:
	.string	"quadric"
.LC1812:
	.string	"quartic"
.LC1813:
	.string	"quaternion"
.LC1814:
	.string	"queue"
.LC1815:
	.string	"quick_color"
.LC1816:
	.string	"quick_colour"
.LC1817:
	.string	"quilted"
.LC1818:
	.string	"quote"
.LC1819:
	.string	"quotes"
.LC1820:
	.string	"radial"
.LC1821:
	.string	"radians"
.LC1822:
	.string	"radiosity"
.LC1823:
	.string	"radius"
.LC1824:
	.string	"rainbow"
.LC1825:
	.string	"raise"
.LC1826:
	.string	"ramp_wave"
.LC1827:
	.string	"rand"
.LC1828:
	.string	"random"
.LC1829:
	.string	"randomize"
.LC1830:
	.string	"range"
.LC1831:
	.string	"ratio"
.LC1832:
	.string	"raytype"
.LC1833:
	.string	"rd"
.LC1834:
	.string	"read"
.LC1835:
	.string	"ready"
.LC1836:
	.string	"real"
.LC1837:
	.string	"receive"
.LC1838:
	.string	"reciprocal"
.LC1839:
	.string	"record"
.LC1840:
	.string	"recording"
.LC1841:
	.string	"records"
.LC1842:
	.string	"recursion_limit"
.LC1843:
	.string	"recursive"
.LC1844:
	.string	"red"
.LC1845:
	.string	"redefines"
.LC1846:
	.string	"reel"
.LC1847:
	.string	"reference"
.LC1848:
	.string	"references"
.LC1849:
	.string	"reflect"
.LC1850:
	.string	"reflection"
.LC1851:
	.string	"reflection_exponent"
.LC1852:
	.string	"refract"
.LC1853:
	.string	"refraction"
.LC1854:
	.string	"regex_match"
.LC1855:
	.string	"regex_search"
.LC1856:
	.string	"register"
.LC1857:
	.string	"reintroduce"
.LC1858:
	.string	"relative"
.LC1859:
	.string	"release"
.LC1860:
	.string	"reload"
.LC1861:
	.string	"rem"
.LC1862:
	.string	"remainder"
.LC1863:
	.string	"removal"
.LC1864:
	.string	"renames"
.LC1865:
	.string	"render"
.LC1866:
	.string	"renum"
.LC1867:
	.string	"repeat"
.LC1868:
	.string	"replace"
.LC1869:
	.string	"replacing"
.LC1870:
	.string	"report"
.LC1871:
	.string	"reporting"
.LC1872:
	.string	"reports"
.LC1873:
	.string	"repository"
.LC1874:
	.string	"rerun"
.LC1875:
	.string	"reserve"
.LC1876:
	.string	"reset"
.LC1877:
	.string	"restore"
.LC1878:
	.string	"resume"
.LC1879:
	.string	"return"
.LC1880:
	.string	"return-code"
.LC1881:
	.string	"returning"
.LC1882:
	.string	"reversed"
.LC1883:
	.string	"rewind"
.LC1884:
	.string	"rewrite"
.LC1885:
	.string	"rf"
.LC1886:
	.string	"rgb"
.LC1887:
	.string	"rgbf"
.LC1888:
	.string	"rgbft"
.LC1889:
	.string	"rgbt"
.LC1890:
	.string	"rh"
.LC1891:
	.string	"right"
.LC1892:
	.string	"ripples"
.LC1893:
	.string	"rmdir"
.LC1894:
	.string	"rnd"
.LC1895:
	.string	"rotate"
.LC1896:
	.string	"roughness"
.LC1897:
	.string	"round"
.LC1898:
	.string	"rounded"
.LC1899:
	.string	"row"
.LC1900:
	.string	"row_major"
.LC1901:
	.string	"rpad"
.LC1902:
	.string	"rset"
.LC1903:
	.string	"run"
.LC1904:
	.string	"safecall"
.LC1905:
	.string	"same"
.LC1906:
	.string	"same_source"
.LC1907:
	.string	"sampler1D"
.LC1908:
	.string	"sampler1DArray"
.LC1909:
	.string	"sampler1DArrayShadow"
.LC1910:
	.string	"sampler1DShadow"
.LC1911:
	.string	"sampler2D"
.LC1912:
	.string	"sampler2DArray"
.LC1913:
	.string	"sampler2DArrayShadow"
.LC1914:
	.string	"sampler2DRect"
.LC1915:
	.string	"sampler2DRectShadow"
.LC1916:
	.string	"sampler2DShadow"
.LC1917:
	.string	"sampler3D"
.LC1918:
	.string	"sampler3DRect"
.LC1919:
	.string	"samplerBuffer"
.LC1920:
	.string	"samplerCube"
.LC1921:
	.string	"samples"
.LC1922:
	.string	"save"
.LC1923:
	.string	"save_file"
.LC1924:
	.string	"scale"
.LC1925:
	.string	"scallop_wave"
.LC1926:
	.string	"scattering"
.LC1927:
	.string	"screen"
.LC1928:
	.string	"sd"
.LC1929:
	.string	"search"
.LC1930:
	.string	"second"
.LC1931:
	.string	"section"
.LC1932:
	.string	"security"
.LC1933:
	.string	"seed"
.LC1934:
	.string	"segment"
.LC1935:
	.string	"segment-limit"
.LC1936:
	.string	"select"
.LC1937:
	.string	"selector"
.LC1938:
	.string	"selection"
.LC1939:
	.string	"self"
.LC1940:
	.string	"send"
.LC1941:
	.string	"sentence"
.LC1942:
	.string	"separate"
.LC1943:
	.string	"sequence"
.LC1944:
	.string	"sequential"
.LC1945:
	.string	"sequentially"
.LC1946:
	.string	"service"
.LC1947:
	.string	"set"
.LC1948:
	.string	"sgn"
.LC1949:
	.string	"shadowless"
.LC1950:
	.string	"shell"
.LC1951:
	.string	"shift-in"
.LC1952:
	.string	"shift-out"
.LC1953:
	.string	"shl"
.LC1954:
	.string	"short"
.LC1955:
	.string	"shr"
.LC1956:
	.string	"sign"
.LC1957:
	.string	"simple_nested_loop"
.LC1958:
	.string	"sin"
.LC1959:
	.string	"sine_wave"
.LC1960:
	.string	"sinh"
.LC1961:
	.string	"size"
.LC1962:
	.string	"sizeof"
.LC1963:
	.string	"skip1"
.LC1964:
	.string	"skip2"
.LC1965:
	.string	"skip3"
.LC1966:
	.string	"sky"
.LC1967:
	.string	"sky_sphere"
.LC1968:
	.string	"slice"
.LC1969:
	.string	"slope"
.LC1970:
	.string	"slope_map"
.LC1971:
	.string	"smallint"
.LC1972:
	.string	"smooth"
.LC1973:
	.string	"smooth_linearstep"
.LC1974:
	.string	"smoothstep"
.LC1975:
	.string	"smooth_triangle"
.LC1976:
	.string	"snoise"
.LC1977:
	.string	"softfloat"
.LC1978:
	.string	"solid"
.LC1979:
	.string	"sor"
.LC1980:
	.string	"sort"
.LC1981:
	.string	"sort-control"
.LC1982:
	.string	"sort-core-size"
.LC1983:
	.string	"sort-file-size"
.LC1984:
	.string	"sort-merge"
.LC1985:
	.string	"sort-message"
.LC1986:
	.string	"sort-mode-size"
.LC1987:
	.string	"sort-return"
.LC1988:
	.string	"sound"
.LC1989:
	.string	"source"
.LC1990:
	.string	"source-computer"
.LC1991:
	.string	"space"
.LC1992:
	.string	"spaces"
.LC1993:
	.string	"spacing"
.LC1994:
	.string	"spc"
.LC1995:
	.string	"specialize"
.LC1996:
	.string	"special-names"
.LC1997:
	.string	"specular"
.LC1998:
	.string	"sphere"
.LC1999:
	.string	"sphere_sweep"
.LC2000:
	.string	"spherical"
.LC2001:
	.string	"spiral1"
.LC2002:
	.string	"spiral2"
.LC2003:
	.string	"spline"
.LC2004:
	.string	"splineinverse"
.LC2005:
	.string	"split"
.LC2006:
	.string	"split_union"
.LC2007:
	.string	"spotlight"
.LC2008:
	.string	"spotted"
.LC2009:
	.string	"sqr"
.LC2010:
	.string	"sqrt"
.LC2011:
	.string	"standard"
.LC2012:
	.string	"standard-1"
.LC2013:
	.string	"standard-2"
.LC2014:
	.string	"start"
.LC2015:
	.string	"startswith"
.LC2016:
	.string	"static"
.LC2017:
	.string	"statistics"
.LC2018:
	.string	"status"
.LC2019:
	.string	"stdcall"
.LC2020:
	.string	"stdout"
.LC2021:
	.string	"step"
.LC2022:
	.string	"stick"
.LC2023:
	.string	"stof"
.LC2024:
	.string	"stoi"
.LC2025:
	.string	"stop"
.LC2026:
	.string	"str"
.LC2027:
	.string	"strcmp"
.LC2028:
	.string	"strength"
.LC2029:
	.string	"strig"
.LC2030:
	.string	"string"
.LC2031:
	.string	"strptr"
.LC2032:
	.string	"strlen"
.LC2033:
	.string	"strlwr"
.LC2034:
	.string	"structure"
.LC2035:
	.string	"strupr"
.LC2036:
	.string	"sturm"
.LC2037:
	.string	"subarray"
.LC2038:
	.string	"sub-queue-1"
.LC2039:
	.string	"sub-queue-2"
.LC2040:
	.string	"sub-queue-3"
.LC2041:
	.string	"subroutine"
.LC2042:
	.string	"substr"
.LC2043:
	.string	"substring"
.LC2044:
	.string	"substring_mb"
.LC2045:
	.string	"subtract"
.LC2046:
	.string	"sum"
.LC2047:
	.string	"super"
.LC2048:
	.string	"superellipsoid"
.LC2049:
	.string	"superp"
.LC2050:
	.string	"suppress"
.LC2051:
	.string	"surfacearea"
.LC2052:
	.string	"swap"
.LC2053:
	.string	"switch"
.LC2054:
	.string	"symbolic"
.LC2055:
	.string	"sync"
.LC2056:
	.string	"synchronized"
.LC2057:
	.string	"sys"
.LC2058:
	.string	"system"
.LC2059:
	.string	"tab"
.LC2060:
	.string	"table"
.LC2061:
	.string	"tally"
.LC2062:
	.string	"tallying"
.LC2063:
	.string	"tan"
.LC2064:
	.string	"tanh"
.LC2065:
	.string	"tape"
.LC2066:
	.string	"target"
.LC2067:
	.string	"template"
.LC2068:
	.string	"term"
.LC2069:
	.string	"terminal"
.LC2070:
	.string	"terminate"
.LC2071:
	.string	"test"
.LC2072:
	.string	"text"
.LC2073:
	.string	"texture"
.LC2074:
	.string	"texture3d"
.LC2075:
	.string	"texture_list"
.LC2076:
	.string	"texture_map"
.LC2077:
	.string	"tga"
.LC2078:
	.string	"than"
.LC2079:
	.string	"then"
.LC2080:
	.string	"thickness"
.LC2081:
	.string	"this"
.LC2082:
	.string	"threadvar"
.LC2083:
	.string	"threshold"
.LC2084:
	.string	"through"
.LC2085:
	.string	"thru"
.LC2086:
	.string	"tiff"
.LC2087:
	.string	"tightness"
.LC2088:
	.string	"tile2"
.LC2089:
	.string	"tiles"
.LC2090:
	.string	"time"
.LC2091:
	.string	"timer"
.LC2092:
	.string	"times"
.LC2093:
	.string	"timestamp"
.LC2094:
	.string	"timesten"
.LC2095:
	.string	"title"
.LC2096:
	.string	"to"
.LC2097:
	.string	"tolerance"
.LC2098:
	.string	"top"
.LC2099:
	.string	"toroidal"
.LC2100:
	.string	"torus"
.LC2101:
	.string	"trace"
.LC2102:
	.string	"trailing"
.LC2103:
	.string	"transform"
.LC2104:
	.string	"transformc"
.LC2105:
	.string	"transformu"
.LC2106:
	.string	"translate"
.LC2107:
	.string	"translucent"
.LC2108:
	.string	"transmit"
.LC2109:
	.string	"transparent"
.LC2110:
	.string	"transpose"
.LC2111:
	.string	"triangle"
.LC2112:
	.string	"triangle_wave"
.LC2113:
	.string	"trim"
.LC2114:
	.string	"trim_b"
.LC2115:
	.string	"trim_mb"
.LC2116:
	.string	"troff"
.LC2117:
	.string	"tron"
.LC2118:
	.string	"true"
.LC2119:
	.string	"trunc"
.LC2120:
	.string	"try"
.LC2121:
	.string	"ttf"
.LC2122:
	.string	"turb_depth"
.LC2123:
	.string	"turbulence"
.LC2124:
	.string	"type"
.LC2125:
	.string	"typedef"
.LC2126:
	.string	"uimage1D"
.LC2127:
	.string	"uimage1DArray"
.LC2128:
	.string	"uimage2D"
.LC2129:
	.string	"uimage2DArray"
.LC2130:
	.string	"uimage3D"
.LC2131:
	.string	"uimageBuffer"
.LC2132:
	.string	"uimageCube"
.LC2133:
	.string	"uint"
.LC2134:
	.string	"ultra_wide_angle"
.LC2135:
	.string	"undef"
.LC2136:
	.string	"uniform"
.LC2137:
	.string	"union"
.LC2138:
	.string	"unit"
.LC2139:
	.string	"unknown"
.LC2140:
	.string	"unlock"
.LC2141:
	.string	"unsigned"
.LC2142:
	.string	"unstring"
.LC2143:
	.string	"until"
.LC2144:
	.string	"up"
.LC2145:
	.string	"update"
.LC2146:
	.string	"upon"
.LC2147:
	.string	"upper"
.LC2148:
	.string	"upper_mb"
.LC2149:
	.string	"usage"
.LC2150:
	.string	"usampler1D"
.LC2151:
	.string	"usampler1DArray"
.LC2152:
	.string	"usampler2D"
.LC2153:
	.string	"usampler2DArray"
.LC2154:
	.string	"usampler2drect"
.LC2155:
	.string	"usampler3D"
.LC2156:
	.string	"usamplerBufferStruct"
.LC2157:
	.string	"usamplerCube"
.LC2158:
	.string	"use"
.LC2159:
	.string	"use_alpha"
.LC2160:
	.string	"use_color"
.LC2161:
	.string	"use_colour"
.LC2162:
	.string	"use_index"
.LC2163:
	.string	"uses"
.LC2164:
	.string	"using"
.LC2165:
	.string	"usr"
.LC2166:
	.string	"u_steps"
.LC2167:
	.string	"utf8"
.LC2168:
	.string	"utf16"
.LC2169:
	.string	"utf32"
.LC2170:
	.string	"uvec2"
.LC2171:
	.string	"uvec3"
.LC2172:
	.string	"uvec4"
.LC2173:
	.string	"uv_indices"
.LC2174:
	.string	"uv_mapping"
.LC2175:
	.string	"uv_vectors"
.LC2176:
	.string	"val"
.LC2177:
	.string	"value"
.LC2178:
	.string	"values"
.LC2179:
	.string	"var"
.LC2180:
	.string	"varchar"
.LC2181:
	.string	"variance"
.LC2182:
	.string	"varptr"
.LC2183:
	.string	"varying"
.LC2184:
	.string	"vaxis_rotate"
.LC2185:
	.string	"vcross"
.LC2186:
	.string	"vdot"
.LC2187:
	.string	"vec2"
.LC2188:
	.string	"vec3"
.LC2189:
	.string	"vec4"
.LC2190:
	.string	"vector"
.LC2191:
	.string	"version"
.LC2192:
	.string	"vertex_vectors"
.LC2193:
	.string	"view"
.LC2194:
	.string	"virtual"
.LC2195:
	.string	"vlength"
.LC2196:
	.string	"vnormalize"
.LC2197:
	.string	"void"
.LC2198:
	.string	"volatile"
.LC2199:
	.string	"vrotate"
.LC2200:
	.string	"v_steps"
.LC2201:
	.string	"vstr"
.LC2202:
	.string	"vturbulence"
.LC2203:
	.string	"wait"
.LC2204:
	.string	"ward"
.LC2205:
	.string	"warning"
.LC2206:
	.string	"warp"
.LC2207:
	.string	"water_level"
.LC2208:
	.string	"wavelength_color"
.LC2209:
	.string	"waves"
.LC2210:
	.string	"wend"
.LC2211:
	.string	"when"
.LC2212:
	.string	"when-compiled"
.LC2213:
	.string	"where"
.LC2214:
	.string	"while"
.LC2215:
	.string	"width"
.LC2216:
	.string	"window"
.LC2217:
	.string	"with"
.LC2218:
	.string	"wood"
.LC2219:
	.string	"words"
.LC2220:
	.string	"working-storage"
.LC2221:
	.string	"wrinkles"
.LC2222:
	.string	"write"
.LC2223:
	.string	"write-only"
.LC2224:
	.string	"xor"
.LC2225:
	.string	"xor_bits"
.LC2226:
	.string	"year"
.LC2227:
	.string	"yes"
.LC2228:
	.string	"yield"
.LC2229:
	.string	"zero"
.LC2230:
	.string	"zeroes"
.LC2231:
	.string	"zeros"
.LC2232:
	.string	"buffer"
.LC2233:
	.string	"shared"
.LC2234:
	.string	"coherent"
.LC2235:
	.string	"restrict"
.LC2236:
	.string	"readonly"
.LC2237:
	.string	"writeonly"
.LC2238:
	.string	"atomic_uint"
.LC2239:
	.string	"patch"
.LC2240:
	.string	"sample"
.LC2241:
	.string	"precise"
.LC2242:
	.string	"dmat2"
.LC2243:
	.string	"dmat3"
.LC2244:
	.string	"dmat4"
.LC2245:
	.string	"dmat2x2"
.LC2246:
	.string	"dmat2x3"
.LC2247:
	.string	"dmat2x4"
.LC2248:
	.string	"dmat3x2"
.LC2249:
	.string	"dmat3x3"
.LC2250:
	.string	"dmat3x4"
.LC2251:
	.string	"dmat4x2"
.LC2252:
	.string	"dmat4x3"
.LC2253:
	.string	"dmat4x4"
.LC2254:
	.string	"image2DMS"
.LC2255:
	.string	"iimage2DMS"
.LC2256:
	.string	"uimage2DMS"
.LC2257:
	.string	"image2DMSArray"
.LC2258:
	.string	"iimage2DMSArray"
.LC2259:
	.string	"uimage2DMSArray"
.LC2260:
	.string	"struct"
.LC2261:
	.string	"resource"
.LC2262:
	.string	"M_2PI"
.LC2263:
	.string	"M_4PI"
.LC2264:
	.string	"M_2_SQRTPI"
.LC2265:
	.string	"M_E"
.LC2266:
	.string	"M_LN10"
.LC2267:
	.string	"M_SQRT1_2"
.LC2268:
	.string	"sincos"
.LC2269:
	.string	"inversesqrt"
.LC2270:
	.string	"seg"
.LC2271:
	.string	"seek"
.LC2272:
	.string	"sleep"
.LC2273:
	.string	"console"
.LC2274:
	.string	"COB_SWITCH_1"
.LC2275:
	.string	"COB_SWITCH_2"
.LC2276:
	.string	"COB_SWITCH_3"
.LC2277:
	.string	"COB_SWITCH_4"
.LC2278:
	.string	"COB_SWITCH_5"
.LC2279:
	.string	"COB_SWITCH_6"
.LC2280:
	.string	"COB_SWITCH_7"
.LC2281:
	.string	"COB_SWITCH_8"
.LC2282:
	.string	"abort"
.LC2283:
	.string	"achar"
.LC2284:
	.string	"acosd"
.LC2285:
	.string	"adjustl"
.LC2286:
	.string	"adjustr"
.LC2287:
	.string	"aimag"
.LC2288:
	.string	"aint"
.LC2289:
	.string	"alarm"
.LC2290:
	.string	"alocated"
.LC2291:
	.string	"implicit"
.LC2292:
	.string	"find"
.LC2293:
	.string	"image2DRect"
.LC2294:
	.string	"smpler2DMS"
.LC2295:
	.string	"shortint"
.LC2296:
	.string	"word"
.LC2297:
	.string	"cardinal"
.LC2298:
	.string	"longint"
.LC2299:
	.string	"longword"
.LC2300:
	.string	"int64"
.LC2301:
	.string	"qword"
.LC2302:
	.string	"single"
.LC2303:
	.string	"extended"
.LC2304:
	.string	"boolean"
.LC2305:
	.string	"base"
.LC2306:
	.string	"sbyte"
.LC2307:
	.string	"ushort"
.LC2308:
	.string	"ulong"
.LC2309:
	.string	"catch"
.LC2310:
	.string	"checked"
.LC2311:
	.string	"delegate"
.LC2312:
	.string	"event"
.LC2313:
	.string	"foreach"
.LC2314:
	.string	"namespace"
.LC2315:
	.string	"params"
.LC2316:
	.string	"ref"
.LC2317:
	.string	"sealed"
.LC2318:
	.string	"stackalloc"
.LC2319:
	.string	"typeof"
.LC2320:
	.string	"throw"
.LC2321:
	.string	"unchecked"
.LC2322:
	.string	"unsafe"
.LC2323:
	.string	"equals"
.LC2324:
	.string	"nameof"
.LC2325:
	.string	"notnull"
.LC2326:
	.string	"orderby"
.LC2327:
	.string	"partial"
.LC2328:
	.string	"remove"
.LC2329:
	.string	"unmanaged"
.LC2330:
	.string	"inf"
.LC2331:
	.string	"NaN"
.LC2332:
	.string	"NA"
.LC2333:
	.string	"as?"
.LC2334:
	.string	"fun"
.LC2335:
	.string	"!in"
.LC2336:
	.string	"!is"
.LC2337:
	.string	"package"
.LC2338:
	.string	"typealias"
.LC2339:
	.string	"init"
.LC2340:
	.string	"param"
.LC2341:
	.string	"receiver"
.LC2342:
	.string	"setparam"
.LC2343:
	.string	"actual"
.LC2344:
	.string	"annotation"
.LC2345:
	.string	"companion"
.LC2346:
	.string	"crossinline"
.LC2347:
	.string	"expect"
.LC2348:
	.string	"infix"
.LC2349:
	.string	"lateinit"
.LC2350:
	.string	"noinline"
.LC2351:
	.string	"reified"
.LC2352:
	.string	"suspend"
.LC2353:
	.string	"tailrec"
.LC2354:
	.string	"vararg"
.LC2355:
	.string	"it"
.LC2356:
	.string	"callable"
.LC2357:
	.string	"clone"
.LC2358:
	.string	"echo"
.LC2359:
	.string	"empty"
.LC2360:
	.string	"enddeclare"
.LC2361:
	.string	"endfor"
.LC2362:
	.string	"endforeach"
.LC2363:
	.string	"endif"
.LC2364:
	.string	"endswitch"
.LC2365:
	.string	"endwile"
.LC2366:
	.string	"extends"
.LC2367:
	.string	"instanceof"
.LC2368:
	.string	"isset"
.LC2369:
	.string	"require"
.LC2370:
	.string	"trait"
.LC2371:
	.string	"unset"
.LC2372:
	.string	"del"
.LC2373:
	.string	"signed"
.LC2374:
	.string	"implements"
.LC2375:
	.string	"strictfp"
.LC2376:
	.string	"throws"
.LC2377:
	.string	"transient"
.LC2378:
	.string	"allocate"
.LC2379:
	.string	"andalso"
.LC2380:
	.string	"assertwarn"
.LC2381:
	.string	"bin"
.LC2382:
	.string	"bit"
.LC2383:
	.string	"bitreset"
.LC2384:
	.string	"bitset"
.LC2385:
	.string	"byref"
.LC2386:
	.string	"byval"
.LC2387:
	.string	"callocate"
.LC2388:
	.string	"cbool"
.LC2389:
	.string	"cbyte"
.LC2390:
	.string	"clng"
.LC2391:
	.string	"clongint"
.LC2392:
	.string	"command"
.LC2393:
	.string	"condbroadcast"
.LC2394:
	.string	"condcreate"
.LC2395:
	.string	"conddestroy"
.LC2396:
	.string	"condsignal"
.LC2397:
	.string	"condwait"
.LC2398:
	.string	"cptr"
.LC2399:
	.string	"cshort"
.LC2400:
	.string	"csign"
.LC2401:
	.string	"cubyte"
.LC2402:
	.string	"cuint"
.LC2403:
	.string	"culng"
.LC2404:
	.string	"culngint"
.LC2405:
	.string	"cunsg"
.LC2406:
	.string	"curdir"
.LC2407:
	.string	"cushort"
.LC2408:
	.string	"custom"
.LC2409:
	.string	"cva_arg"
.LC2410:
	.string	"cva_copy"
.LC2411:
	.string	"cva_list"
.LC2412:
	.string	"cva_end"
.LC2413:
	.string	"cva_start"
.LC2414:
	.string	"cvl"
.LC2415:
	.string	"cvlongint"
.LC2416:
	.string	"cvshort"
.LC2417:
	.string	"dateadd"
.LC2418:
	.string	"datediff"
.LC2419:
	.string	"datepart"
.LC2420:
	.string	"dateserial"
.LC2421:
	.string	"datevalue"
.LC2422:
	.string	"deallocate"
.LC2423:
	.string	"defbyte"
.LC2424:
	.string	"deflng"
.LC2425:
	.string	"deflongint"
.LC2426:
	.string	"defshort"
.LC2427:
	.string	"defubyte"
.LC2428:
	.string	"defuint"
.LC2429:
	.string	"defulongint"
.LC2430:
	.string	"defushort"
.LC2431:
	.string	"dir"
.LC2432:
	.string	"dylibfree"
.LC2433:
	.string	"dylibload"
.LC2434:
	.string	"dylibsymbol"
.LC2435:
	.string	"encoding"
.LC2436:
	.string	"erfn"
.LC2437:
	.string	"ermn"
.LC2438:
	.string	"exec"
.LC2439:
	.string	"exepath"
.LC2440:
	.string	"compile"
.LC2441:
	.string	"help"
.LC2442:
	.string	"identify"
.LC2443:
	.string	"listnh"
.LC2444:
	.string	"old"
.LC2445:
	.string	"rename"
.LC2446:
	.string	"resequence"
.LC2447:
	.string	"scratch"
.LC2448:
	.string	"show"
.LC2449:
	.string	"unsave"
.LC2450:
	.string	"bufsiz"
.LC2451:
	.string	"ccpos"
.LC2452:
	.string	"change"
.LC2453:
	.string	"ctrlc"
.LC2454:
	.string	"det"
.LC2455:
	.string	"dif"
.LC2456:
	.string	"ern"
.LC2457:
	.string	"fileattr"
.LC2458:
	.string	"filecopy"
.LC2459:
	.string	"filedatetime"
.LC2460:
	.string	"fileexists"
.LC2461:
	.string	"filelen"
.LC2462:
	.string	"freefile"
.LC2463:
	.string	"frac"
.LC2464:
	.string	"getjoystick"
.LC2465:
	.string	"getkey"
.LC2466:
	.string	"getmouse"
.LC2467:
	.string	"hibyte"
.LC2468:
	.string	"hiword"
.LC2469:
	.string	"imageconvertrow"
.LC2470:
	.string	"imagecreate"
.LC2471:
	.string	"imagedestroy"
.LC2472:
	.string	"imageinfo"
.LC2473:
	.string	"instrrev"
.LC2474:
	.string	"isdate"
.LC2475:
	.string	"isredirected"
.LC2476:
	.string	"lbound"
.LC2477:
	.string	"lcase"
.LC2478:
	.string	"lib"
.LC2479:
	.string	"lobyte"
.LC2480:
	.string	"loword"
.LC2481:
	.string	"ltrim"
.LC2482:
	.string	"mkl"
.LC2483:
	.string	"mklongint"
.LC2484:
	.string	"mkshort"
.LC2485:
	.string	"monthname"
.LC2486:
	.string	"multikey"
.LC2487:
	.string	"mutexcreate"
.LC2488:
	.string	"mutexdestroy"
.LC2489:
	.string	"mutexlock"
.LC2490:
	.string	"mutexunlock"
.LC2491:
	.string	"naked"
.LC2492:
	.string	"now"
.LC2493:
	.string	"offsetof"
.LC2494:
	.string	"orelse"
.LC2495:
	.string	"overload"
.LC2496:
	.string	"pointcoord"
.LC2497:
	.string	"ptr"
.LC2498:
	.string	"preserve"
.LC2499:
	.string	"procptr"
.LC2500:
	.string	"redim"
.LC2501:
	.string	"rgba"
.LC2502:
	.string	"rtrim"
.LC2503:
	.string	"sadd"
.LC2504:
	.string	"scope"
.LC2505:
	.string	"screencopy"
.LC2506:
	.string	"screencontrol"
.LC2507:
	.string	"screenevent"
.LC2508:
	.string	"screenglproc"
.LC2509:
	.string	"screeninfo"
.LC2510:
	.string	"screenlist"
.LC2511:
	.string	"screenlock"
.LC2512:
	.string	"screenptr"
.LC2513:
	.string	"screenres"
.LC2514:
	.string	"screenset"
.LC2515:
	.string	"screensync"
.LC2516:
	.string	"screenunlock"
.LC2517:
	.string	"setdate"
.LC2518:
	.string	"setenviron"
.LC2519:
	.string	"setmouse"
.LC2520:
	.string	"settime"
.LC2521:
	.string	"sub"
.LC2522:
	.string	"threadcall"
.LC2523:
	.string	"threadcreate"
.LC2524:
	.string	"threaddetach"
.LC2525:
	.string	"threadwait"
.LC2526:
	.string	"trans"
.LC2527:
	.string	"ubound"
.LC2528:
	.string	"ubyte"
.LC2529:
	.string	"ucase"
.LC2530:
	.string	"uinteger"
.LC2531:
	.string	"ulongint"
.LC2532:
	.string	"va_arg"
.LC2533:
	.string	"va_first"
.LC2534:
	.string	"va_next"
.LC2535:
	.string	"vallng"
.LC2536:
	.string	"valint"
.LC2537:
	.string	"wbin"
.LC2538:
	.string	"wchr"
.LC2539:
	.string	"weekday"
.LC2540:
	.string	"weekdayname"
.LC2541:
	.string	"whex"
.LC2542:
	.string	"windowtitle"
.LC2543:
	.string	"winput"
.LC2544:
	.string	"woct"
.LC2545:
	.string	"wspace"
.LC2546:
	.string	"wstr"
.LC2547:
	.string	"wstring"
.LC2548:
	.string	"zstring"
.LC2549:
	.string	"ert"
.LC2550:
	.string	"endifle"
.LC2551:
	.string	"fnend"
.LC2552:
	.string	"fnexit"
.LC2553:
	.string	"free"
.LC2554:
	.string	"fsp"
.LC2555:
	.string	"functionend"
.LC2556:
	.string	"functionexit"
.LC2557:
	.string	"getrfa"
.LC2558:
	.string	"handler"
.LC2559:
	.string	"linput"
.LC2560:
	.string	"mag"
.LC2561:
	.string	"magtape"
.LC2562:
	.string	"mar"
.LC2563:
	.string	"margin"
.LC2564:
	.string	"mat"
.LC2565:
	.string	"noecho"
.LC2566:
	.string	"nomargin"
.LC2567:
	.string	"num"
.LC2568:
	.string	"num2"
.LC2569:
	.string	"num1"
.LC2570:
	.string	"place"
.LC2571:
	.string	"quo"
.LC2572:
	.string	"rad"
.LC2573:
	.string	"rctrlc"
.LC2574:
	.string	"rctrl0"
.LC2575:
	.string	"recount"
.LC2576:
	.string	"remap"
.LC2577:
	.string	"retry"
.LC2578:
	.string	"rmsstatus"
.LC2579:
	.string	"prompt"
.LC2580:
	.string	"subend"
.LC2581:
	.string	"exitsub"
.LC2582:
	.string	"trm"
.LC2583:
	.string	"unless"
.LC2584:
	.string	"vmsstatus"
.LC2585:
	.string	"xlate"
.LC2586:
	.string	"allocated"
.LC2587:
	.string	"anint"
.LC2588:
	.string	"asind"
.LC2589:
	.string	"associated"
.LC2590:
	.string	"atand"
.LC2591:
	.string	"atan2d"
.LC2592:
	.string	"atomic_add"
.LC2593:
	.string	"atomic_and"
.LC2594:
	.string	"atomic_cas"
.LC2595:
	.string	"atomic_define"
.LC2596:
	.string	"atomic_fetch_add"
.LC2597:
	.string	"atomic_fetch and"
.LC2598:
	.string	"atomic_fetch_or"
.LC2599:
	.string	"atomic_fetch_xor"
.LC2600:
	.string	"atomic_or"
.LC2601:
	.string	"atomic_ref"
.LC2602:
	.string	"atomic_xor"
.LC2603:
	.string	"backtrace"
.LC2604:
	.string	"bessel_j0"
.LC2605:
	.string	"bessel_j1"
.LC2606:
	.string	"bessel_jn"
.LC2607:
	.string	"bessel_y0"
.LC2608:
	.string	"bassel_y1"
.LC2609:
	.string	"bessel_yn"
.LC2610:
	.string	"bge"
.LC2611:
	.string	"bgt"
.LC2612:
	.string	"bit_size"
.LC2613:
	.string	"ble"
.LC2614:
	.string	"blt"
.LC2615:
	.string	"btest"
.LC2616:
	.string	"c_associated"
.LC2617:
	.string	"c_f_pointer"
.LC2619:
	.string	"tmp.bas"
.LC2620:
	.string	"fbc "
.LC2621:
	.string	"fbc -lang qb "
.LC2622:
	.string	"tmp.glsl"
.LC2623:
	.string	"tmp.cob"
.LC2624:
	.string	"cobc "
.LC2625:
	.string	"tmp.f77"
.LC2626:
	.string	"gfortran "
.LC2627:
	.string	"tmp.pas"
.LC2628:
	.string	"fpc "
.LC2629:
	.string	"tmp.osl"
.LC2630:
	.string	"povray "
.LC2631:
	.string	"tmp.java"
.LC2632:
	.string	"java "
.LC2633:
	.string	"tmp.c"
.LC2634:
	.string	"gcc "
.LC2635:
	.string	"tmp.cpp"
.LC2636:
	.string	"g++ "
.LC2637:
	.string	"tmp.cs"
.LC2638:
	.string	"csc "
.LC2639:
	.string	"tmp.js"
.LC2640:
	.string	"node "
.LC2641:
	.string	"tmp.php"
.LC2642:
	.string	"php -f "
.LC2643:
	.string	"tmp.swift"
.LC2644:
	.string	"swift "
.LC2645:
	.string	"tmp.m"
.LC2646:
	.string	"octave --persist "
.LC2647:
	.string	"tmp.kt"
.LC2648:
	.string	"kotlinc "
.LC2649:
	.string	"tmp.r"
.LC2650:
	.string	"rscript "
.LC2651:
	.string	"tmp.dart"
.LC2652:
	.string	"dart "
.LC2653:
	.string	"tmp.scala"
.LC2654:
	.string	"scalac "
.LC2655:
	.string	"./tmp > tmp.txt"
.LC2656:
	.string	"tmp.txt"
.LC2657:
	.string	"press any key to continue."
.LC2658:
	.string	"rm ./tmp; ./"
.LC2662:
	.string	"./chargen/"
.LC2663:
	.string	".c64"
.LC2671:
	.string	"wine "
.LC2673:
	.string	"dosbox "
.LC2674:
	.string	" -fullscreen -exit"
.LC2676:
	.string	".asm"
.LC2680:
	.string	"nasm "
.LC2681:
	.string	".asm -f bin -o"
.LC2682:
	.string	".bin"
.LC2684:
	.string	"dosbox -c 'boot "
.LC2685:
	.string	" -exit"
.LC2686:
	.string	"rm "
	.text
	.p2align 4
	.globl	_ZN8MEMORY_T6POKE64Edd
	.type	_ZN8MEMORY_T6POKE64Edd, @function
_ZN8MEMORY_T6POKE64Edd:
	push	r15
	movapd	xmm4, xmm0
	movapd	xmm5, xmm1
	push	r14
	push	r13
	push	r12
	push	rbp
	mov	rbp, rdi
	push	rbx
	sub	rsp, 280
.L653:
	xor	edx, edx
	comisd	xmm4, QWORD PTR .LC265[rip]
	cvtsd2si	rbx, xmm4
	setnb	dl
	xor	eax, eax
	neg	edx
	comisd	xmm4, QWORD PTR .LC264[rip]
	movsd	QWORD PTR 0[rbp+rbx*8], xmm5
	setbe	al
	neg	eax
	test	edx, eax
	je	.L654
	subsd	xmm4, QWORD PTR .LC265[rip]
	cvtsd2si	rax, xmm4
	movsd	QWORD PTR 134741896[rbp+rax*8], xmm5
	addsd	xmm4, QWORD PTR 395608[rbp]
	cvtsd2si	rbx, xmm4
	movsd	xmm5, QWORD PTR 0[rbp+rbx*8]
.L654:
	comisd	xmm4, QWORD PTR .LC277[rip]
	jne	.L655
	movzx	edx, BYTE PTR BYTES$[rip]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	mov	rax, rdx
	comisd	xmm0, xmm5
	je	.L5134
	movzx	edx, BYTE PTR BYTES$[rip+1]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6351
	movzx	edx, BYTE PTR BYTES$[rip+2]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6352
	movzx	edx, BYTE PTR BYTES$[rip+3]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6353
	movzx	edx, BYTE PTR BYTES$[rip+4]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6354
	movzx	edx, BYTE PTR BYTES$[rip+5]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6355
	movzx	edx, BYTE PTR BYTES$[rip+6]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6356
	movzx	edx, BYTE PTR BYTES$[rip+7]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6357
	movzx	edx, BYTE PTR BYTES$[rip+8]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6358
	movzx	edx, BYTE PTR BYTES$[rip+9]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6359
	movzx	edx, BYTE PTR BYTES$[rip+10]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6360
	movzx	edx, BYTE PTR BYTES$[rip+11]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6361
	movzx	edx, BYTE PTR BYTES$[rip+12]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6362
	movzx	edx, BYTE PTR BYTES$[rip+13]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6363
	movzx	edx, BYTE PTR BYTES$[rip+14]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6364
	movzx	edx, BYTE PTR BYTES$[rip+15]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L688
	movzx	edx, BYTE PTR BYTES$[rip+16]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6365
	movzx	edx, BYTE PTR BYTES$[rip+17]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6366
	movzx	edx, BYTE PTR BYTES$[rip+18]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6367
	movzx	edx, BYTE PTR BYTES$[rip+19]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6368
	movzx	edx, BYTE PTR BYTES$[rip+20]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6369
	movzx	edx, BYTE PTR BYTES$[rip+21]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6370
	movzx	edx, BYTE PTR BYTES$[rip+22]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6371
	movzx	edx, BYTE PTR BYTES$[rip+23]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6372
	movzx	edx, BYTE PTR BYTES$[rip+24]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6373
	movzx	edx, BYTE PTR BYTES$[rip+25]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6374
	movzx	edx, BYTE PTR BYTES$[rip+26]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6375
	movzx	edx, BYTE PTR BYTES$[rip+27]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6376
	movzx	edx, BYTE PTR BYTES$[rip+28]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6377
	movzx	edx, BYTE PTR BYTES$[rip+29]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6378
	movzx	edx, BYTE PTR BYTES$[rip+30]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6379
	movzx	edx, BYTE PTR BYTES$[rip+31]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L688
	movzx	edx, BYTE PTR BYTES$[rip+32]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L5164
	movzx	edx, BYTE PTR BYTES$[rip+33]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6380
	movzx	edx, BYTE PTR BYTES$[rip+34]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6381
	movzx	edx, BYTE PTR BYTES$[rip+35]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6382
	movzx	edx, BYTE PTR BYTES$[rip+36]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6383
	movzx	edx, BYTE PTR BYTES$[rip+37]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6384
	movzx	edx, BYTE PTR BYTES$[rip+38]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6385
	movzx	edx, BYTE PTR BYTES$[rip+39]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6386
	movzx	edx, BYTE PTR BYTES$[rip+40]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	mov	rcx, rdx
	comisd	xmm0, xmm5
	je	.L6387
	movzx	edx, BYTE PTR BYTES$[rip+41]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6388
	movzx	edx, BYTE PTR BYTES$[rip+42]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6389
	movzx	edx, BYTE PTR BYTES$[rip+43]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6390
	movzx	edx, BYTE PTR BYTES$[rip+44]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6391
	movzx	edx, BYTE PTR BYTES$[rip+45]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6392
	movzx	edx, BYTE PTR BYTES$[rip+46]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6393
	movzx	edx, BYTE PTR BYTES$[rip+47]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6394
	movzx	edx, BYTE PTR BYTES$[rip+48]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6395
	movzx	edx, BYTE PTR BYTES$[rip+49]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6396
	movzx	edx, BYTE PTR BYTES$[rip+50]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6397
	movzx	edx, BYTE PTR BYTES$[rip+51]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	mov	rsi, rdx
	comisd	xmm0, xmm5
	je	.L6398
	movzx	edx, BYTE PTR BYTES$[rip+52]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6399
	movzx	edx, BYTE PTR BYTES$[rip+53]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6400
	movzx	edx, BYTE PTR BYTES$[rip+54]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6401
	movzx	edx, BYTE PTR BYTES$[rip+55]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6402
	movzx	edx, BYTE PTR BYTES$[rip+56]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6403
	movzx	edx, BYTE PTR BYTES$[rip+57]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6404
	movzx	edx, BYTE PTR BYTES$[rip+58]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6405
	movzx	edx, BYTE PTR BYTES$[rip+59]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6406
	movzx	edx, BYTE PTR BYTES$[rip+60]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6407
	movzx	edx, BYTE PTR BYTES$[rip+61]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6408
	movzx	edx, BYTE PTR BYTES$[rip+62]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6409
	movzx	edx, BYTE PTR BYTES$[rip+63]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6410
	movzx	edx, BYTE PTR BYTES$[rip+64]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6411
	movzx	edx, BYTE PTR BYTES$[rip+65]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6412
	movzx	edx, BYTE PTR BYTES$[rip+66]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6413
	movzx	edx, BYTE PTR BYTES$[rip+67]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6414
	movzx	edx, BYTE PTR BYTES$[rip+68]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6415
	movzx	edx, BYTE PTR BYTES$[rip+69]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6416
	movzx	edx, BYTE PTR BYTES$[rip+70]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6417
	movzx	edx, BYTE PTR BYTES$[rip+71]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6418
	movzx	edx, BYTE PTR BYTES$[rip+72]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6419
	movzx	edx, BYTE PTR BYTES$[rip+73]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6420
	movzx	edx, BYTE PTR BYTES$[rip+74]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6421
	movzx	edx, BYTE PTR BYTES$[rip+75]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6422
	movzx	edx, BYTE PTR BYTES$[rip+76]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6423
	movzx	edx, BYTE PTR BYTES$[rip+77]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6424
	movzx	edx, BYTE PTR BYTES$[rip+78]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6425
	movzx	edx, BYTE PTR BYTES$[rip+79]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6426
	movzx	edx, BYTE PTR BYTES$[rip+80]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6427
	movzx	edx, BYTE PTR BYTES$[rip+81]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6428
	movzx	edx, BYTE PTR BYTES$[rip+82]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6429
	movzx	edx, BYTE PTR BYTES$[rip+83]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6430
	movzx	edx, BYTE PTR BYTES$[rip+84]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6431
	movzx	edi, BYTE PTR BYTES$[rip+85]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdi
	mov	rdx, rdi
	comisd	xmm0, xmm5
	je	.L6432
	movzx	edi, BYTE PTR BYTES$[rip+86]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdi
	comisd	xmm0, xmm5
	je	.L6433
	movzx	edi, BYTE PTR BYTES$[rip+87]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdi
	comisd	xmm0, xmm5
	je	.L6434
	movzx	edi, BYTE PTR BYTES$[rip+88]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdi
	comisd	xmm0, xmm5
	je	.L6435
	movzx	edi, BYTE PTR BYTES$[rip+89]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdi
	comisd	xmm0, xmm5
	je	.L6436
	movzx	edi, BYTE PTR BYTES$[rip+90]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdi
	comisd	xmm0, xmm5
	je	.L6437
	movzx	edi, BYTE PTR BYTES$[rip+91]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdi
	comisd	xmm0, xmm5
	je	.L6438
	movzx	edi, BYTE PTR BYTES$[rip+92]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdi
	comisd	xmm0, xmm5
	je	.L6439
	movzx	edi, BYTE PTR BYTES$[rip+93]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdi
	comisd	xmm0, xmm5
	je	.L6440
	movzx	edi, BYTE PTR BYTES$[rip+94]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdi
	comisd	xmm0, xmm5
	je	.L6441
	movzx	edi, BYTE PTR BYTES$[rip+95]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdi
	comisd	xmm0, xmm5
	je	.L6442
	movzx	edi, BYTE PTR BYTES$[rip+96]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdi
	comisd	xmm0, xmm5
	je	.L6443
	movzx	edi, BYTE PTR BYTES$[rip+97]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdi
	comisd	xmm0, xmm5
	je	.L6444
	movzx	edi, BYTE PTR BYTES$[rip+98]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdi
	comisd	xmm0, xmm5
	je	.L6445
	movzx	edi, BYTE PTR BYTES$[rip+99]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdi
	comisd	xmm0, xmm5
	je	.L6446
	movzx	edi, BYTE PTR BYTES$[rip+100]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdi
	comisd	xmm0, xmm5
	je	.L6447
	movzx	edi, BYTE PTR BYTES$[rip+101]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdi
	comisd	xmm0, xmm5
	je	.L6448
	movzx	r8d, BYTE PTR BYTES$[rip+102]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, r8
	mov	rdi, r8
	comisd	xmm0, xmm5
	je	.L6449
	movzx	r8d, BYTE PTR BYTES$[rip+103]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, r8
	comisd	xmm0, xmm5
	je	.L6450
	movzx	r8d, BYTE PTR BYTES$[rip+104]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, r8
	comisd	xmm0, xmm5
	je	.L6451
	movzx	r8d, BYTE PTR BYTES$[rip+105]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, r8
	comisd	xmm0, xmm5
	je	.L6452
	movzx	r8d, BYTE PTR BYTES$[rip+106]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, r8
	comisd	xmm0, xmm5
	je	.L6453
	movzx	r8d, BYTE PTR BYTES$[rip+107]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, r8
	comisd	xmm0, xmm5
	je	.L6454
	movzx	r8d, BYTE PTR BYTES$[rip+108]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, r8
	comisd	xmm0, xmm5
	je	.L6455
	movzx	r8d, BYTE PTR BYTES$[rip+109]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, r8
	comisd	xmm0, xmm5
	je	.L6456
	movzx	r8d, BYTE PTR BYTES$[rip+110]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, r8
	comisd	xmm0, xmm5
	je	.L6457
	movzx	r8d, BYTE PTR BYTES$[rip+111]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, r8
	comisd	xmm0, xmm5
	je	.L6458
	movzx	r8d, BYTE PTR BYTES$[rip+112]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, r8
	comisd	xmm0, xmm5
	je	.L6459
	movzx	r8d, BYTE PTR BYTES$[rip+113]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, r8
	comisd	xmm0, xmm5
	je	.L6460
	movzx	r8d, BYTE PTR BYTES$[rip+114]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, r8
	comisd	xmm0, xmm5
	je	.L6461
	movzx	r8d, BYTE PTR BYTES$[rip+115]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, r8
	comisd	xmm0, xmm5
	je	.L6462
	movzx	r8d, BYTE PTR BYTES$[rip+116]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, r8
	comisd	xmm0, xmm5
	je	.L6463
	movzx	r8d, BYTE PTR BYTES$[rip+117]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, r8
	comisd	xmm0, xmm5
	je	.L6464
	movzx	r8d, BYTE PTR BYTES$[rip+118]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, r8
	comisd	xmm0, xmm5
	je	.L6465
	movzx	r8d, BYTE PTR BYTES$[rip+119]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, r8
	comisd	xmm0, xmm5
	je	.L6466
	movzx	r8d, BYTE PTR BYTES$[rip+120]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, r8
	comisd	xmm0, xmm5
	je	.L6467
	movzx	r8d, BYTE PTR BYTES$[rip+121]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, r8
	comisd	xmm0, xmm5
	je	.L6468
	movzx	r8d, BYTE PTR BYTES$[rip+122]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, r8
	comisd	xmm0, xmm5
	je	.L6469
	movzx	r8d, BYTE PTR BYTES$[rip+123]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, r8
	comisd	xmm0, xmm5
	je	.L6470
	movzx	r8d, BYTE PTR BYTES$[rip+124]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, r8
	comisd	xmm0, xmm5
	je	.L6471
	movzx	r8d, BYTE PTR BYTES$[rip+125]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, r8
	comisd	xmm0, xmm5
	je	.L6472
	movzx	r8d, BYTE PTR BYTES$[rip+126]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, r8
	comisd	xmm0, xmm5
	je	.L6473
	movzx	r8d, BYTE PTR BYTES$[rip+127]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, r8
	comisd	xmm0, xmm5
	je	.L6474
	movzx	r8d, BYTE PTR BYTES$[rip+128]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, r8
	comisd	xmm0, xmm5
	je	.L6475
	movzx	r8d, BYTE PTR BYTES$[rip+129]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, r8
	comisd	xmm0, xmm5
	je	.L6476
	movzx	r8d, BYTE PTR BYTES$[rip+130]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, r8
	comisd	xmm0, xmm5
	je	.L6477
	movzx	r8d, BYTE PTR BYTES$[rip+131]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, r8
	comisd	xmm0, xmm5
	je	.L6478
	movzx	r8d, BYTE PTR BYTES$[rip+132]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, r8
	comisd	xmm0, xmm5
	je	.L6479
	movzx	r8d, BYTE PTR BYTES$[rip+133]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, r8
	comisd	xmm0, xmm5
	je	.L6480
	movzx	r8d, BYTE PTR BYTES$[rip+134]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, r8
	comisd	xmm0, xmm5
	je	.L6481
	movzx	r8d, BYTE PTR BYTES$[rip+135]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, r8
	comisd	xmm0, xmm5
	je	.L6482
	movzx	r8d, BYTE PTR BYTES$[rip+136]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, r8
	comisd	xmm0, xmm5
	je	.L6483
	movzx	r8d, BYTE PTR BYTES$[rip+137]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, r8
	comisd	xmm0, xmm5
	je	.L6484
	movzx	r8d, BYTE PTR BYTES$[rip+138]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, r8
	comisd	xmm0, xmm5
	je	.L6485
	movzx	r8d, BYTE PTR BYTES$[rip+139]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, r8
	comisd	xmm0, xmm5
	je	.L6486
	movzx	r8d, BYTE PTR BYTES$[rip+140]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, r8
	comisd	xmm0, xmm5
	je	.L6487
	movzx	r8d, BYTE PTR BYTES$[rip+141]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, r8
	comisd	xmm0, xmm5
	je	.L6488
	movzx	r8d, BYTE PTR BYTES$[rip+142]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, r8
	comisd	xmm0, xmm5
	je	.L6489
	movzx	edx, BYTE PTR BYTES$[rip+143]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6490
	movzx	edx, BYTE PTR BYTES$[rip+144]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6491
	movzx	edx, BYTE PTR BYTES$[rip+145]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6492
	movzx	edx, BYTE PTR BYTES$[rip+146]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6493
	movzx	edx, BYTE PTR BYTES$[rip+147]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6494
	movzx	edx, BYTE PTR BYTES$[rip+148]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6495
	movzx	edx, BYTE PTR BYTES$[rip+149]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6496
	movzx	edx, BYTE PTR BYTES$[rip+150]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6497
	movzx	edx, BYTE PTR BYTES$[rip+151]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6498
	movzx	edx, BYTE PTR BYTES$[rip+152]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6499
	movzx	edx, BYTE PTR BYTES$[rip+153]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6500
	movzx	edx, BYTE PTR BYTES$[rip+154]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6501
	movzx	edx, BYTE PTR BYTES$[rip+155]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6502
	movzx	edx, BYTE PTR BYTES$[rip+156]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6503
	movzx	edx, BYTE PTR BYTES$[rip+157]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6504
	movzx	edx, BYTE PTR BYTES$[rip+158]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6505
	movzx	edx, BYTE PTR BYTES$[rip+159]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6506
	movzx	edx, BYTE PTR BYTES$[rip+160]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6507
	movzx	edx, BYTE PTR BYTES$[rip+161]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6508
	movzx	edx, BYTE PTR BYTES$[rip+162]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6509
	movzx	edx, BYTE PTR BYTES$[rip+163]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6510
	movzx	edx, BYTE PTR BYTES$[rip+164]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6511
	movzx	edx, BYTE PTR BYTES$[rip+165]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6512
	movzx	edx, BYTE PTR BYTES$[rip+166]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6513
	movzx	edx, BYTE PTR BYTES$[rip+167]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6514
	movzx	edx, BYTE PTR BYTES$[rip+168]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6515
	movzx	edx, BYTE PTR BYTES$[rip+169]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6516
	movzx	edx, BYTE PTR BYTES$[rip+170]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6517
	movzx	edx, BYTE PTR BYTES$[rip+171]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6518
	movzx	edx, BYTE PTR BYTES$[rip+172]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6519
	movzx	edx, BYTE PTR BYTES$[rip+173]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6520
	movzx	edx, BYTE PTR BYTES$[rip+174]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6521
	movzx	edx, BYTE PTR BYTES$[rip+175]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6522
	movzx	edx, BYTE PTR BYTES$[rip+176]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6523
	movzx	edx, BYTE PTR BYTES$[rip+177]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6524
	movzx	edx, BYTE PTR BYTES$[rip+178]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6525
	movzx	edx, BYTE PTR BYTES$[rip+179]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6526
	movzx	edx, BYTE PTR BYTES$[rip+180]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6527
	movzx	edx, BYTE PTR BYTES$[rip+181]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6528
	movzx	edx, BYTE PTR BYTES$[rip+182]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6529
	movzx	edx, BYTE PTR BYTES$[rip+183]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6530
	movzx	edx, BYTE PTR BYTES$[rip+184]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6531
	movzx	edx, BYTE PTR BYTES$[rip+185]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6532
	movzx	edx, BYTE PTR BYTES$[rip+186]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6533
	movzx	edx, BYTE PTR BYTES$[rip+187]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6534
	movzx	edx, BYTE PTR BYTES$[rip+188]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6535
	movzx	edx, BYTE PTR BYTES$[rip+189]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6536
	movzx	edx, BYTE PTR BYTES$[rip+190]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6537
	movzx	edx, BYTE PTR BYTES$[rip+191]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6538
	movzx	edx, BYTE PTR BYTES$[rip+192]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6539
	movzx	edx, BYTE PTR BYTES$[rip+193]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6540
	movzx	edx, BYTE PTR BYTES$[rip+194]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6541
	movzx	edx, BYTE PTR BYTES$[rip+195]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6542
	movzx	edx, BYTE PTR BYTES$[rip+196]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6543
	movzx	edx, BYTE PTR BYTES$[rip+197]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6544
	movzx	edx, BYTE PTR BYTES$[rip+198]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6545
	movzx	edx, BYTE PTR BYTES$[rip+199]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6546
	movzx	edx, BYTE PTR BYTES$[rip+200]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6547
	movzx	edx, BYTE PTR BYTES$[rip+201]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6548
	movzx	edx, BYTE PTR BYTES$[rip+202]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6549
	movzx	edx, BYTE PTR BYTES$[rip+203]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6550
	movzx	edx, BYTE PTR BYTES$[rip+204]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6551
	movzx	edx, BYTE PTR BYTES$[rip+205]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6552
	movzx	edx, BYTE PTR BYTES$[rip+206]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6553
	movzx	edx, BYTE PTR BYTES$[rip+207]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6554
	movzx	edx, BYTE PTR BYTES$[rip+208]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6555
	movzx	edx, BYTE PTR BYTES$[rip+209]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6556
	movzx	edx, BYTE PTR BYTES$[rip+210]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6557
	movzx	edx, BYTE PTR BYTES$[rip+211]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6558
	movzx	edx, BYTE PTR BYTES$[rip+212]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6559
	movzx	edx, BYTE PTR BYTES$[rip+213]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6560
	movzx	edx, BYTE PTR BYTES$[rip+214]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6561
	movzx	edx, BYTE PTR BYTES$[rip+215]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6562
	movzx	edx, BYTE PTR BYTES$[rip+216]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6563
	movzx	edx, BYTE PTR BYTES$[rip+217]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6564
	movzx	edx, BYTE PTR BYTES$[rip+218]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6565
	movzx	edx, BYTE PTR BYTES$[rip+219]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6566
	movzx	edx, BYTE PTR BYTES$[rip+220]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6567
	movzx	edx, BYTE PTR BYTES$[rip+221]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6568
	movzx	edx, BYTE PTR BYTES$[rip+222]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6569
	movzx	edx, BYTE PTR BYTES$[rip+223]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6570
	movzx	edx, BYTE PTR BYTES$[rip+224]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6571
	movzx	edx, BYTE PTR BYTES$[rip+225]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6572
	movzx	edx, BYTE PTR BYTES$[rip+226]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6573
	movzx	edx, BYTE PTR BYTES$[rip+227]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6574
	movzx	edx, BYTE PTR BYTES$[rip+228]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6575
	movzx	edx, BYTE PTR BYTES$[rip+229]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6576
	movzx	edx, BYTE PTR BYTES$[rip+230]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6577
	movzx	edx, BYTE PTR BYTES$[rip+231]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6578
	movzx	edx, BYTE PTR BYTES$[rip+232]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6579
	movzx	edx, BYTE PTR BYTES$[rip+233]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6580
	movzx	edx, BYTE PTR BYTES$[rip+234]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6581
	movzx	edx, BYTE PTR BYTES$[rip+235]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6582
	movzx	edx, BYTE PTR BYTES$[rip+236]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6583
	movzx	edx, BYTE PTR BYTES$[rip+237]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6584
	movzx	edx, BYTE PTR BYTES$[rip+238]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6585
	movzx	edx, BYTE PTR BYTES$[rip+239]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6586
	movzx	edx, BYTE PTR BYTES$[rip+240]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6587
	movzx	edx, BYTE PTR BYTES$[rip+241]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6588
	movzx	edx, BYTE PTR BYTES$[rip+242]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6589
	movzx	edx, BYTE PTR BYTES$[rip+243]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6590
	movzx	edx, BYTE PTR BYTES$[rip+244]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6591
	movzx	edx, BYTE PTR BYTES$[rip+245]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6592
	movzx	edx, BYTE PTR BYTES$[rip+246]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6593
	movzx	edx, BYTE PTR BYTES$[rip+247]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6594
	movzx	edx, BYTE PTR BYTES$[rip+248]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6595
	movzx	edx, BYTE PTR BYTES$[rip+249]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6596
	movzx	edx, BYTE PTR BYTES$[rip+250]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6597
	movzx	edx, BYTE PTR BYTES$[rip+251]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6598
	movzx	edx, BYTE PTR BYTES$[rip+252]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6599
	movzx	edx, BYTE PTR BYTES$[rip+253]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6600
	movzx	edx, BYTE PTR BYTES$[rip+254]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, xmm5
	je	.L6601
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	jne	.L5035
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	cvtsi2sd	xmm1, ecx
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+40]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC279[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+40]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC280[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	.p2align 4,,10
	.p2align 3
.L5035:
	xor	eax, eax
	comisd	xmm4, QWORD PTR .LC315[rip]
	sete	al
	xor	edx, edx
	neg	eax
	comisd	xmm4, QWORD PTR .LC316[rip]
	sete	dl
	neg	edx
	or	eax, edx
	xor	edx, edx
	comisd	xmm4, QWORD PTR .LC317[rip]
	sete	dl
	neg	edx
	or	eax, edx
	xor	edx, edx
	comisd	xmm4, QWORD PTR .LC318[rip]
	sete	dl
	neg	edx
	or	eax, edx
	xor	edx, edx
	comisd	xmm4, QWORD PTR .LC319[rip]
	sete	dl
	neg	edx
	or	eax, edx
	xor	edx, edx
	comisd	xmm4, QWORD PTR .LC320[rip]
	sete	dl
	neg	edx
	or	eax, edx
	xor	edx, edx
	comisd	xmm4, QWORD PTR .LC321[rip]
	sete	dl
	neg	edx
	or	eax, edx
	xor	edx, edx
	comisd	xmm4, QWORD PTR .LC322[rip]
	sete	dl
	neg	edx
	or	eax, edx
	jne	.L6602
	xor	eax, eax
	comisd	xmm4, QWORD PTR .LC323[rip]
	sete	al
	xor	edx, edx
	neg	eax
	comisd	xmm4, QWORD PTR .LC324[rip]
	sete	dl
	neg	edx
	or	eax, edx
	xor	edx, edx
	comisd	xmm4, QWORD PTR .LC325[rip]
	sete	dl
	neg	edx
	or	eax, edx
	xor	edx, edx
	comisd	xmm4, QWORD PTR .LC326[rip]
	sete	dl
	neg	edx
	or	eax, edx
	xor	edx, edx
	comisd	xmm4, QWORD PTR .LC327[rip]
	sete	dl
	neg	edx
	or	eax, edx
	xor	edx, edx
	comisd	xmm4, QWORD PTR .LC328[rip]
	sete	dl
	neg	edx
	or	eax, edx
	xor	edx, edx
	comisd	xmm4, QWORD PTR .LC329[rip]
	sete	dl
	neg	edx
	or	eax, edx
	xor	edx, edx
	comisd	xmm4, QWORD PTR .LC330[rip]
	sete	dl
	neg	edx
	or	eax, edx
	jne	.L6603
	comisd	xmm4, QWORD PTR .LC331[rip]
	je	.L5037
	comisd	xmm4, QWORD PTR .LC332[rip]
	je	.L5391
	comisd	xmm4, QWORD PTR .LC333[rip]
	jne	.L6604
	comisd	xmm5, QWORD PTR .LC0[rip]
	je	.L5394
	movsd	xmm3, QWORD PTR .LC1[rip]
	comisd	xmm5, xmm3
	je	.L6605
	movsd	xmm2, QWORD PTR .LC105[rip]
	comisd	xmm5, xmm2
	je	.L6606
	movsd	xmm7, QWORD PTR .LC106[rip]
	comisd	xmm5, xmm7
	je	.L6607
	movsd	xmm6, QWORD PTR .LC107[rip]
	comisd	xmm5, xmm6
	je	.L6608
	movsd	xmm8, QWORD PTR .LC108[rip]
	comisd	xmm5, xmm8
	je	.L6609
	comisd	xmm5, QWORD PTR .LC109[rip]
	je	.L6610
	comisd	xmm5, QWORD PTR .LC110[rip]
	je	.L6611
	comisd	xmm5, QWORD PTR .LC111[rip]
	je	.L6612
	comisd	xmm5, QWORD PTR .LC5[rip]
	je	.L6613
	comisd	xmm5, QWORD PTR .LC112[rip]
	je	.L6614
	comisd	xmm5, QWORD PTR .LC113[rip]
	je	.L6615
	comisd	xmm5, QWORD PTR .LC114[rip]
	je	.L6616
	comisd	xmm5, QWORD PTR .LC115[rip]
	je	.L6617
	comisd	xmm5, QWORD PTR .LC116[rip]
	je	.L6618
	comisd	xmm5, QWORD PTR .LC117[rip]
	je	.L6619
	comisd	xmm5, QWORD PTR .LC6[rip]
	je	.L6620
	comisd	xmm5, QWORD PTR .LC118[rip]
	je	.L6621
	comisd	xmm5, QWORD PTR .LC119[rip]
	je	.L6622
	comisd	xmm5, QWORD PTR .LC120[rip]
	je	.L6623
	comisd	xmm5, QWORD PTR .LC121[rip]
	je	.L6624
	comisd	xmm5, QWORD PTR .LC122[rip]
	je	.L6625
	comisd	xmm5, QWORD PTR .LC123[rip]
	je	.L6626
	comisd	xmm5, QWORD PTR .LC124[rip]
	je	.L6627
	comisd	xmm5, QWORD PTR .LC125[rip]
	je	.L6628
	comisd	xmm5, QWORD PTR .LC126[rip]
	je	.L6629
	comisd	xmm5, QWORD PTR .LC127[rip]
	je	.L6630
	comisd	xmm5, QWORD PTR .LC128[rip]
	je	.L6631
	comisd	xmm5, QWORD PTR .LC129[rip]
	je	.L6632
	comisd	xmm5, QWORD PTR .LC130[rip]
	je	.L6633
	comisd	xmm5, QWORD PTR .LC131[rip]
	je	.L6634
	comisd	xmm5, QWORD PTR .LC132[rip]
	je	.L6635
	movsd	xmm2, QWORD PTR .LC73[rip]
	comisd	xmm5, xmm2
	je	.L6636
	comisd	xmm5, QWORD PTR .LC74[rip]
	je	.L6637
	comisd	xmm5, QWORD PTR .LC75[rip]
	je	.L6638
	comisd	xmm5, QWORD PTR .LC76[rip]
	je	.L6639
	comisd	xmm5, QWORD PTR .LC77[rip]
	je	.L6640
	comisd	xmm5, QWORD PTR .LC78[rip]
	je	.L6641
	comisd	xmm5, QWORD PTR .LC79[rip]
	je	.L6642
	comisd	xmm5, QWORD PTR .LC80[rip]
	je	.L6643
	comisd	xmm5, QWORD PTR .LC81[rip]
	je	.L6644
	comisd	xmm5, QWORD PTR .LC82[rip]
	je	.L6645
	comisd	xmm5, QWORD PTR .LC83[rip]
	je	.L6646
	comisd	xmm5, QWORD PTR .LC84[rip]
	je	.L6647
	comisd	xmm5, QWORD PTR .LC85[rip]
	je	.L6648
	comisd	xmm5, QWORD PTR .LC86[rip]
	je	.L6649
	comisd	xmm5, QWORD PTR .LC87[rip]
	je	.L6650
	comisd	xmm5, QWORD PTR .LC88[rip]
	je	.L6651
	comisd	xmm5, QWORD PTR .LC89[rip]
	je	.L6652
	comisd	xmm5, QWORD PTR .LC90[rip]
	je	.L6653
	comisd	xmm5, QWORD PTR .LC91[rip]
	je	.L6654
	comisd	xmm5, QWORD PTR .LC92[rip]
	je	.L6655
	comisd	xmm5, QWORD PTR .LC93[rip]
	je	.L6656
	comisd	xmm5, QWORD PTR .LC94[rip]
	je	.L6657
	comisd	xmm5, QWORD PTR .LC95[rip]
	je	.L6658
	comisd	xmm5, QWORD PTR .LC96[rip]
	je	.L6659
	comisd	xmm5, QWORD PTR .LC97[rip]
	je	.L6660
	comisd	xmm5, QWORD PTR .LC98[rip]
	je	.L6661
	comisd	xmm5, QWORD PTR .LC99[rip]
	je	.L6662
	comisd	xmm5, QWORD PTR .LC100[rip]
	je	.L6663
	comisd	xmm5, QWORD PTR .LC101[rip]
	je	.L6664
	comisd	xmm5, QWORD PTR .LC102[rip]
	je	.L6665
	comisd	xmm5, QWORD PTR .LC103[rip]
	je	.L6666
	comisd	xmm5, QWORD PTR .LC104[rip]
	je	.L6667
	comisd	xmm5, QWORD PTR .LC396[rip]
	je	.L6668
	movsd	xmm1, QWORD PTR .LC289[rip]
	comisd	xmm5, xmm1
	je	.L6669
	comisd	xmm5, QWORD PTR .LC399[rip]
	je	.L6670
	comisd	xmm5, QWORD PTR .LC401[rip]
	je	.L6671
	comisd	xmm5, QWORD PTR .LC403[rip]
	je	.L6672
	comisd	xmm5, QWORD PTR .LC281[rip]
	je	.L6673
	comisd	xmm5, QWORD PTR .LC406[rip]
	je	.L6674
	comisd	xmm5, QWORD PTR .LC408[rip]
	je	.L6675
	comisd	xmm5, QWORD PTR .LC410[rip]
	je	.L6676
	comisd	xmm5, QWORD PTR .LC412[rip]
	je	.L6677
	comisd	xmm5, QWORD PTR .LC414[rip]
	je	.L6678
	comisd	xmm5, QWORD PTR .LC416[rip]
	je	.L6679
	comisd	xmm5, QWORD PTR .LC418[rip]
	je	.L6680
	comisd	xmm5, QWORD PTR .LC420[rip]
	je	.L6681
	comisd	xmm5, QWORD PTR .LC422[rip]
	je	.L6682
	comisd	xmm5, QWORD PTR .LC424[rip]
	je	.L6683
	comisd	xmm5, QWORD PTR .LC426[rip]
	je	.L6684
	comisd	xmm5, QWORD PTR .LC282[rip]
	je	.L6685
	comisd	xmm5, QWORD PTR .LC429[rip]
	je	.L6686
	comisd	xmm5, QWORD PTR .LC431[rip]
	je	.L6687
	comisd	xmm5, QWORD PTR .LC433[rip]
	je	.L6688
	comisd	xmm5, QWORD PTR .LC435[rip]
	je	.L6689
	comisd	xmm5, QWORD PTR .LC437[rip]
	je	.L6690
	comisd	xmm5, QWORD PTR .LC439[rip]
	je	.L6691
	comisd	xmm5, QWORD PTR .LC441[rip]
	je	.L6692
	comisd	xmm5, QWORD PTR .LC296[rip]
	je	.L6693
	comisd	xmm5, QWORD PTR .LC444[rip]
	je	.L6694
	comisd	xmm5, QWORD PTR .LC446[rip]
	je	.L6695
	comisd	xmm5, QWORD PTR .LC448[rip]
	je	.L6696
	comisd	xmm5, QWORD PTR .LC450[rip]
	je	.L6697
	comisd	xmm5, QWORD PTR .LC452[rip]
	je	.L6698
	comisd	xmm5, QWORD PTR .LC454[rip]
	je	.L6699
	comisd	xmm5, QWORD PTR .LC456[rip]
	je	.L6700
	comisd	xmm5, QWORD PTR .LC283[rip]
	je	.L6701
	comisd	xmm5, QWORD PTR .LC459[rip]
	je	.L6702
	comisd	xmm5, QWORD PTR .LC461[rip]
	je	.L6703
	comisd	xmm5, QWORD PTR .LC463[rip]
	je	.L6704
	comisd	xmm5, QWORD PTR .LC465[rip]
	je	.L6705
	comisd	xmm5, QWORD PTR .LC467[rip]
	je	.L6706
	comisd	xmm5, QWORD PTR .LC469[rip]
	je	.L6707
	comisd	xmm5, QWORD PTR .LC471[rip]
	je	.L6708
	comisd	xmm5, QWORD PTR .LC297[rip]
	je	.L6709
	comisd	xmm5, QWORD PTR .LC473[rip]
	je	.L6710
	comisd	xmm5, QWORD PTR .LC475[rip]
	je	.L6711
	comisd	xmm5, QWORD PTR .LC477[rip]
	je	.L6712
	comisd	xmm5, QWORD PTR .LC479[rip]
	je	.L6713
	comisd	xmm5, QWORD PTR .LC481[rip]
	je	.L6714
	comisd	xmm5, QWORD PTR .LC483[rip]
	je	.L6715
	comisd	xmm5, QWORD PTR .LC485[rip]
	je	.L6716
	comisd	xmm5, QWORD PTR .LC284[rip]
	je	.L6717
	comisd	xmm5, QWORD PTR .LC488[rip]
	je	.L6718
	comisd	xmm5, QWORD PTR .LC490[rip]
	je	.L6719
	comisd	xmm5, QWORD PTR .LC492[rip]
	je	.L6720
	comisd	xmm5, QWORD PTR .LC494[rip]
	je	.L6721
	comisd	xmm5, QWORD PTR .LC496[rip]
	je	.L6722
	comisd	xmm5, QWORD PTR .LC498[rip]
	je	.L6723
	comisd	xmm5, QWORD PTR .LC500[rip]
	je	.L6724
	comisd	xmm5, QWORD PTR .LC502[rip]
	je	.L6725
	comisd	xmm5, QWORD PTR .LC504[rip]
	je	.L6726
	comisd	xmm5, QWORD PTR .LC506[rip]
	je	.L6727
	comisd	xmm5, QWORD PTR .LC508[rip]
	je	.L6728
	comisd	xmm5, QWORD PTR .LC290[rip]
	je	.L6729
	comisd	xmm5, QWORD PTR .LC511[rip]
	je	.L6730
	comisd	xmm5, QWORD PTR .LC513[rip]
	je	.L6731
	comisd	xmm5, QWORD PTR .LC133[rip]
	je	.L6732
	comisd	xmm5, QWORD PTR .LC134[rip]
	je	.L6733
	comisd	xmm5, QWORD PTR .LC135[rip]
	je	.L6734
	comisd	xmm5, QWORD PTR .LC136[rip]
	je	.L6735
	comisd	xmm5, QWORD PTR .LC137[rip]
	je	.L6736
	comisd	xmm5, QWORD PTR .LC138[rip]
	je	.L6737
	comisd	xmm5, QWORD PTR .LC139[rip]
	je	.L6738
	comisd	xmm5, QWORD PTR .LC140[rip]
	je	.L6739
	comisd	xmm5, QWORD PTR .LC141[rip]
	je	.L6740
	comisd	xmm5, QWORD PTR .LC142[rip]
	je	.L6741
	comisd	xmm5, QWORD PTR .LC143[rip]
	je	.L6742
	comisd	xmm5, QWORD PTR .LC144[rip]
	je	.L6743
	comisd	xmm5, QWORD PTR .LC145[rip]
	je	.L6744
	comisd	xmm5, QWORD PTR .LC146[rip]
	je	.L6745
	comisd	xmm5, QWORD PTR .LC147[rip]
	je	.L6746
	comisd	xmm5, QWORD PTR .LC148[rip]
	je	.L6747
	comisd	xmm5, QWORD PTR .LC149[rip]
	je	.L6748
	comisd	xmm5, QWORD PTR .LC150[rip]
	je	.L6749
	comisd	xmm5, QWORD PTR .LC151[rip]
	je	.L6750
	comisd	xmm5, QWORD PTR .LC152[rip]
	je	.L6751
	comisd	xmm5, QWORD PTR .LC153[rip]
	je	.L6752
	comisd	xmm5, QWORD PTR .LC154[rip]
	je	.L6753
	comisd	xmm5, QWORD PTR .LC155[rip]
	je	.L6754
	comisd	xmm5, QWORD PTR .LC156[rip]
	je	.L6755
	comisd	xmm5, QWORD PTR .LC157[rip]
	je	.L6756
	comisd	xmm5, QWORD PTR .LC158[rip]
	je	.L6757
	comisd	xmm5, QWORD PTR .LC159[rip]
	je	.L6758
	comisd	xmm5, QWORD PTR .LC160[rip]
	je	.L6759
	comisd	xmm5, QWORD PTR .LC161[rip]
	je	.L6760
	comisd	xmm5, QWORD PTR .LC162[rip]
	je	.L6761
	comisd	xmm5, QWORD PTR .LC163[rip]
	je	.L6762
	comisd	xmm5, QWORD PTR .LC546[rip]
	je	.L6763
	comisd	xmm5, QWORD PTR .LC548[rip]
	je	.L6764
	comisd	xmm5, QWORD PTR .LC550[rip]
	je	.L6765
	comisd	xmm5, QWORD PTR .LC285[rip]
	je	.L6766
	comisd	xmm5, QWORD PTR .LC553[rip]
	je	.L6767
	comisd	xmm5, QWORD PTR .LC555[rip]
	je	.L6768
	comisd	xmm5, QWORD PTR .LC557[rip]
	je	.L6769
	comisd	xmm5, QWORD PTR .LC559[rip]
	je	.L6770
	comisd	xmm5, QWORD PTR .LC561[rip]
	je	.L6771
	comisd	xmm5, QWORD PTR .LC563[rip]
	je	.L6772
	comisd	xmm5, QWORD PTR .LC565[rip]
	je	.L6773
	comisd	xmm5, QWORD PTR .LC338[rip]
	je	.L6774
	comisd	xmm5, QWORD PTR .LC568[rip]
	je	.L6775
	comisd	xmm5, QWORD PTR .LC570[rip]
	je	.L6776
	comisd	xmm5, QWORD PTR .LC572[rip]
	je	.L6777
	comisd	xmm5, QWORD PTR .LC574[rip]
	je	.L6778
	comisd	xmm5, QWORD PTR .LC576[rip]
	je	.L6779
	comisd	xmm5, QWORD PTR .LC578[rip]
	je	.L6780
	comisd	xmm5, QWORD PTR .LC580[rip]
	je	.L6781
	comisd	xmm5, QWORD PTR .LC581[rip]
	je	.L6782
	comisd	xmm5, QWORD PTR .LC583[rip]
	je	.L6783
	comisd	xmm5, QWORD PTR .LC585[rip]
	je	.L6784
	comisd	xmm5, QWORD PTR .LC587[rip]
	je	.L6785
	comisd	xmm5, QWORD PTR .LC286[rip]
	je	.L6786
	comisd	xmm5, QWORD PTR .LC590[rip]
	je	.L6787
	comisd	xmm5, QWORD PTR .LC592[rip]
	je	.L6788
	comisd	xmm5, QWORD PTR .LC594[rip]
	je	.L6789
	comisd	xmm5, QWORD PTR .LC596[rip]
	je	.L6790
	comisd	xmm5, QWORD PTR .LC598[rip]
	je	.L6791
	comisd	xmm5, QWORD PTR .LC600[rip]
	je	.L6792
	comisd	xmm5, QWORD PTR .LC602[rip]
	je	.L6793
	comisd	xmm5, QWORD PTR .LC291[rip]
	je	.L6794
	comisd	xmm5, QWORD PTR .LC605[rip]
	je	.L6795
	comisd	xmm5, QWORD PTR .LC607[rip]
	je	.L6796
	comisd	xmm5, QWORD PTR .LC609[rip]
	je	.L6797
	comisd	xmm5, QWORD PTR .LC611[rip]
	je	.L6798
	comisd	xmm5, QWORD PTR .LC613[rip]
	je	.L6799
	comisd	xmm5, QWORD PTR .LC615[rip]
	je	.L6800
	comisd	xmm5, QWORD PTR .LC617[rip]
	je	.L6801
	comisd	xmm5, QWORD PTR .LC293[rip]
	je	.L6802
	comisd	xmm5, QWORD PTR .LC620[rip]
	je	.L6803
	comisd	xmm5, QWORD PTR .LC622[rip]
	je	.L6804
	comisd	xmm5, QWORD PTR .LC624[rip]
	je	.L6805
	comisd	xmm5, QWORD PTR .LC287[rip]
	je	.L6806
	comisd	xmm5, QWORD PTR .LC627[rip]
	je	.L6807
	comisd	xmm5, QWORD PTR .LC629[rip]
	je	.L6808
	comisd	xmm5, QWORD PTR .LC631[rip]
	je	.L6809
	comisd	xmm5, QWORD PTR .LC633[rip]
	je	.L6810
	comisd	xmm5, QWORD PTR .LC635[rip]
	je	.L6811
	comisd	xmm5, QWORD PTR .LC637[rip]
	je	.L6812
	comisd	xmm5, QWORD PTR .LC639[rip]
	je	.L6813
	comisd	xmm5, QWORD PTR .LC641[rip]
	je	.L6814
	comisd	xmm5, QWORD PTR .LC643[rip]
	je	.L6815
	comisd	xmm5, QWORD PTR .LC645[rip]
	je	.L6816
	comisd	xmm5, QWORD PTR .LC647[rip]
	je	.L6817
	comisd	xmm5, QWORD PTR .LC649[rip]
	je	.L6818
	comisd	xmm5, QWORD PTR .LC651[rip]
	je	.L6819
	comisd	xmm5, QWORD PTR .LC653[rip]
	je	.L6820
	comisd	xmm5, QWORD PTR .LC655[rip]
	je	.L6821
	comisd	xmm5, QWORD PTR .LC657[rip]
	je	.L6822
	comisd	xmm5, QWORD PTR .LC294[rip]
	je	.L6823
	comisd	xmm5, QWORD PTR .LC660[rip]
	je	.L6824
	comisd	xmm5, QWORD PTR .LC662[rip]
	je	.L6825
	comisd	xmm5, QWORD PTR .LC664[rip]
	je	.L6826
	comisd	xmm5, QWORD PTR .LC292[rip]
	je	.L6827
	comisd	xmm5, QWORD PTR .LC667[rip]
	je	.L6828
	comisd	xmm5, QWORD PTR .LC669[rip]
	je	.L6829
	comisd	xmm5, QWORD PTR .LC671[rip]
	je	.L6830
	comisd	xmm5, QWORD PTR .LC288[rip]
	je	.L6831
	comisd	xmm5, QWORD PTR .LC674[rip]
	je	.L6832
	comisd	xmm5, QWORD PTR .LC676[rip]
	je	.L6833
	comisd	xmm5, QWORD PTR .LC678[rip]
	je	.L6834
	comisd	xmm5, QWORD PTR .LC680[rip]
	je	.L6835
	comisd	xmm5, QWORD PTR .LC682[rip]
	je	.L6836
	comisd	xmm5, QWORD PTR .LC684[rip]
	je	.L6837
	comisd	xmm5, QWORD PTR .LC686[rip]
	je	.L6838
	comisd	xmm5, QWORD PTR .LC295[rip]
	je	.L6839
	comisd	xmm5, QWORD PTR .LC689[rip]
	je	.L6840
	comisd	xmm5, QWORD PTR .LC691[rip]
	je	.L6841
	comisd	xmm5, QWORD PTR .LC693[rip]
	je	.L6842
	comisd	xmm5, QWORD PTR .LC695[rip]
	je	.L6843
	comisd	xmm5, QWORD PTR .LC697[rip]
	je	.L6844
	comisd	xmm5, QWORD PTR .LC699[rip]
	je	.L6845
	comisd	xmm5, QWORD PTR .LC701[rip]
	je	.L6846
	comisd	xmm5, QWORD PTR .LC703[rip]
	je	.L6847
	comisd	xmm5, QWORD PTR .LC705[rip]
	je	.L6848
	comisd	xmm5, QWORD PTR .LC707[rip]
	je	.L6849
	comisd	xmm5, QWORD PTR .LC709[rip]
	je	.L6850
	comisd	xmm5, QWORD PTR .LC711[rip]
	je	.L6851
	comisd	xmm5, QWORD PTR .LC713[rip]
	je	.L6852
	comisd	xmm5, QWORD PTR .LC715[rip]
	je	.L6853
	comisd	xmm5, QWORD PTR .LC717[rip]
	je	.L6854
	comisd	xmm5, QWORD PTR .LC719[rip]
	je	.L6855
	comisd	xmm5, QWORD PTR .LC721[rip]
	je	.L6856
	comisd	xmm5, QWORD PTR .LC723[rip]
	je	.L6857
	comisd	xmm5, QWORD PTR .LC725[rip]
	je	.L6858
	comisd	xmm5, QWORD PTR .LC259[rip]
	jne	.L5037
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC728[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	.p2align 4,,10
	.p2align 3
.L1205:
	cvtsd2si	rsi, QWORD PTR 395656[rbp]
	pxor	xmm1, xmm1
	movss	xmm3, DWORD PTR .LC729[rip]
	xor	r8d, r8d
	movss	xmm2, DWORD PTR .LC730[rip]
	mov	rdi, QWORD PTR BGIMAGE$[rip]
	mov	ecx, 65535
	movaps	xmm0, xmm1
	mov	edx, 2
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	fb_GfxLine@PLT
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
.L5037:
	movsd	xmm0, QWORD PTR 395608[rbp]
	comisd	xmm0, xmm4
	ja	.L4993
	movsd	xmm6, QWORD PTR .LC787[rip]
	addsd	xmm6, xmm0
	comisd	xmm4, xmm6
	ja	.L4993
.L4994:
	cvtsd2si	rax, xmm5
	movzx	ecx, BYTE PTR BYTES$[rip+3]
	subsd	xmm4, xmm0
	pxor	xmm0, xmm0
	movzx	edx, BYTE PTR BYTES$[rip]
	lea	rbx, BYTES$[rip]
	sal	rax, cl
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 395072[rbp]
	mov	rax, rdx
	cvtsd2si	rcx, xmm0
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, QWORD PTR 1592[rbp]
	mov	QWORD PTR C$[rip], rcx
	je	.L4995
	movzx	edx, BYTE PTR BYTES$[rip+255]
	and	rdx, rcx
	mov	QWORD PTR C$[rip], rdx
.L4995:
	movzx	ecx, BYTE PTR BYTES$[rip+1]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rcx
	comisd	xmm0, QWORD PTR 394856[rbp]
	jbe	.L4996
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, ecx
	movsd	QWORD PTR 394856[rbp], xmm0
.L4996:
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC2699[rip]
	movsd	QWORD PTR 8[rsp], xmm4
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	esi, BYTE PTR BYTES$[rip]
	pxor	xmm1, xmm1
	movsd	xmm0, QWORD PTR 395064[rbp]
	movsd	xmm4, QWORD PTR 8[rsp]
	cvtsi2sd	xmm1, rsi
	comisd	xmm0, xmm1
	je	.L6333
	movsd	xmm3, QWORD PTR .LC1[rip]
	comisd	xmm0, xmm3
	je	.L6859
	movsd	xmm2, QWORD PTR .LC105[rip]
	comisd	xmm0, xmm2
	jne	.L6860
	cvtsd2si	rax, xmm4
	mov	ecx, 40
	pxor	xmm0, xmm0
	movsd	xmm1, QWORD PTR .LC2811[rip]
	mov	QWORD PTR Y$[rip], 0
	mov	QWORD PTR X$[rip], 0
	cqo
	idiv	rcx
	sal	rdx, 3
	sal	rax, 3
	cvtsi2sd	xmm0, rdx
	addsd	xmm0, xmm1
	cvtsd2si	rdx, xmm0
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	mov	QWORD PTR XS$[rip], rdx
	addsd	xmm0, xmm1
	cvtsd2si	rax, xmm0
	mov	QWORD PTR YS$[rip], rax
.L5011:
	mov	rax, QWORD PTR Y$[rip]
	pxor	xmm0, xmm0
	xor	esi, esi
	mov	rdx, QWORD PTR X$[rip]
	cvtsi2sd	xmm0, rax
	comisd	xmm0, QWORD PTR 395088[rbp]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	sete	sil
	xor	ecx, ecx
	neg	esi
	comisd	xmm0, QWORD PTR 395080[rbp]
	sete	cl
	neg	ecx
	test	esi, ecx
	jne	.L5039
	add	rdx, QWORD PTR XS$[rip]
	pxor	xmm0, xmm0
	movsd	xmm2, QWORD PTR 395032[rbp]
	mov	rdi, rbp
	lea	rdx, [rdx+rdx*4]
	add	rax, QWORD PTR YS$[rip]
	movsd	xmm1, QWORD PTR 395040[rbp]
	cvtsi2sd	xmm0, rdx
	sal	rax, 2
	add	rdx, 7
	mulsd	xmm0, QWORD PTR .LC2812[rip]
	addsd	xmm0, xmm2
	movsd	QWORD PTR 394840[rbp], xmm0
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	mulsd	xmm0, QWORD PTR .LC2812[rip]
	add	rax, 4
	addsd	xmm0, xmm1
	movsd	QWORD PTR 394848[rbp], xmm0
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	mulsd	xmm0, QWORD PTR .LC2812[rip]
	addsd	xmm0, xmm2
	movsd	QWORD PTR 394864[rbp], xmm0
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	mulsd	xmm0, QWORD PTR .LC2812[rip]
	mov	rax, QWORD PTR .LC2690[rip]
	addsd	xmm0, xmm1
	movsd	QWORD PTR 394872[rbp], xmm0
	movq	xmm0, rax
	call	_ZN8MEMORY_T6PEEK64Ed
	mov	rax, QWORD PTR .LC2690[rip]
	movapd	xmm1, xmm0
	movq	xmm0, rax
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR X$[rip]
	pxor	xmm0, xmm0
	add	rax, 1
	cvtsi2sd	xmm0, rax
	comisd	xmm0, QWORD PTR 395080[rbp]
	mov	QWORD PTR X$[rip], rax
	jbe	.L5011
.L5010:
	add	QWORD PTR Y$[rip], 1
	add	QWORD PTR C$[rip], 1
	mov	QWORD PTR X$[rip], 0
	jmp	.L5011
	.p2align 4,,10
	.p2align 3
.L655:
	comisd	xmm4, QWORD PTR .LC298[rip]
	jne	.L1167
	movapd	xmm0, xmm5
	movsd	QWORD PTR 16[rsp], xmm4
	movsd	QWORD PTR 8[rsp], xmm5
	call	nearbyint@PLT
	movsd	xmm1, QWORD PTR .LC299[rip]
	movsd	xmm5, QWORD PTR 8[rsp]
	cvttsd2si	rax, xmm0
	movsd	xmm4, QWORD PTR 16[rsp]
	comisd	xmm0, xmm1
	jnb	.L6861
	sub	rax, 15
	cmp	rax, 240
	jbe	.L6862
.L1189:
.L2222:
.L2223:
	pxor	xmm7, xmm7
	comisd	xmm4, xmm7
	je	.L652
	.p2align 4,,10
	.p2align 3
.L6892:
	comisd	xmm4, QWORD PTR .LC731[rip]
	je	.L5902
	comisd	xmm4, QWORD PTR .LC732[rip]
	je	.L6863
	comisd	xmm4, QWORD PTR .LC278[rip]
	je	.L2235
	comisd	xmm4, QWORD PTR .LC279[rip]
	je	.L2235
	comisd	xmm4, QWORD PTR .LC280[rip]
	je	.L2235
	comisd	xmm4, QWORD PTR .LC736[rip]
	je	.L2235
	comisd	xmm4, QWORD PTR .LC276[rip]
	je	.L2243
	comisd	xmm4, QWORD PTR .LC275[rip]
	je	.L2243
	comisd	xmm4, QWORD PTR .LC274[rip]
	je	.L2243
	comisd	xmm4, QWORD PTR .LC273[rip]
	je	.L2243
	comisd	xmm4, QWORD PTR .LC737[rip]
	je	.L5904
	comisd	xmm4, QWORD PTR .LC738[rip]
	je	.L6864
	comisd	xmm4, QWORD PTR .LC739[rip]
	je	.L6865
	comisd	xmm4, QWORD PTR .LC740[rip]
	je	.L6866
	comisd	xmm4, QWORD PTR .LC741[rip]
	je	.L6867
	comisd	xmm4, QWORD PTR .LC742[rip]
	je	.L6868
	comisd	xmm4, QWORD PTR .LC743[rip]
	je	.L6869
	comisd	xmm4, QWORD PTR .LC744[rip]
	je	.L6870
	comisd	xmm4, QWORD PTR .LC745[rip]
	je	.L6871
	comisd	xmm4, QWORD PTR .LC746[rip]
	je	.L6872
	comisd	xmm4, QWORD PTR .LC747[rip]
	je	.L6873
	comisd	xmm4, QWORD PTR .LC748[rip]
	je	.L6874
	comisd	xmm4, QWORD PTR .LC749[rip]
	je	.L6875
	comisd	xmm4, QWORD PTR .LC750[rip]
	je	.L6876
	comisd	xmm4, QWORD PTR .LC751[rip]
	je	.L6877
	comisd	xmm4, QWORD PTR .LC752[rip]
	je	.L6878
	comisd	xmm4, QWORD PTR .LC753[rip]
	je	.L6879
	comisd	xmm4, QWORD PTR .LC754[rip]
	je	.L6880
	comisd	xmm4, QWORD PTR .LC755[rip]
	je	.L6881
	comisd	xmm4, QWORD PTR .LC756[rip]
	je	.L6882
	comisd	xmm4, QWORD PTR .LC757[rip]
	je	.L6883
	comisd	xmm4, QWORD PTR .LC758[rip]
	je	.L6884
	comisd	xmm4, QWORD PTR .LC759[rip]
	je	.L6885
	comisd	xmm4, QWORD PTR .LC760[rip]
	je	.L6886
	comisd	xmm4, QWORD PTR .LC761[rip]
	je	.L6887
	comisd	xmm4, QWORD PTR .LC762[rip]
	je	.L6888
	comisd	xmm4, QWORD PTR .LC269[rip]
	je	.L6889
	comisd	xmm4, QWORD PTR .LC763[rip]
	je	.L6890
	comisd	xmm4, QWORD PTR .LC2618[rip]
	jne	.L6891
.L4527:
	xor	r8d, r8d
	mov	ecx, 9
	lea	rdx, .LC2622[rip]
	mov	rsi, -1
	lea	rdi, FILENAME$[rip]
	call	fb_StrAssign@PLT
	mov	rax, QWORD PTR .LC269[rip]
	pxor	xmm5, xmm5
	movq	xmm4, rax
	jmp	.L653
	.p2align 4,,10
	.p2align 3
.L6861:
	subsd	xmm0, xmm1
	cvttsd2si	rax, xmm0
	btc	rax, 63
	sub	rax, 15
	cmp	rax, 240
	ja	.L2223
.L6862:
	lea	rdx, tmp$2873.15[rip]
	mov	rax, QWORD PTR [rdx+rax*8]
.L4524:
	lea	r15, tmp$2876.12[rip]
	lea	r14, tmp$2875.13[rip]
	movabs	r12, -9223372036854775808
	lea	r13, tmp$2874.14[rip]
	jmp	rax
.L2343:
.L4525:
.L652:
	add	rsp, 280
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	ret
.L1167:
	xor	eax, eax
	comisd	xmm4, QWORD PTR .LC267[rip]
	sete	al
	xor	edx, edx
	neg	eax
	comisd	xmm4, QWORD PTR .LC2814[rip]
	sete	dl
	neg	edx
	or	eax, edx
	xor	edx, edx
	comisd	xmm4, QWORD PTR .LC2815[rip]
	sete	dl
	neg	edx
	or	eax, edx
	xor	edx, edx
	comisd	xmm4, QWORD PTR .LC2816[rip]
	sete	dl
	neg	edx
	or	eax, edx
	xor	edx, edx
	comisd	xmm4, QWORD PTR .LC2817[rip]
	sete	dl
	neg	edx
	or	eax, edx
	xor	edx, edx
	comisd	xmm4, QWORD PTR .LC2818[rip]
	sete	dl
	neg	edx
	or	eax, edx
	xor	edx, edx
	comisd	xmm4, QWORD PTR .LC2819[rip]
	sete	dl
	neg	edx
	or	eax, edx
	xor	edx, edx
	comisd	xmm4, QWORD PTR .LC2820[rip]
	sete	dl
	neg	edx
	or	eax, edx
	je	.L5035
	pxor	xmm7, xmm7
	movsd	QWORD PTR 0[rbp+rbx*8], xmm5
	comisd	xmm4, xmm7
	jne	.L6892
	jmp	.L652
	.p2align 4,,10
	.p2align 3
.L5134:
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	cvtsi2sd	xmm1, edx
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC279[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC280[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
	.p2align 4,,10
	.p2align 3
.L6602:
	pxor	xmm7, xmm7
	movsd	QWORD PTR 0[rbp+rbx*8], xmm5
	comisd	xmm4, xmm7
	jne	.L6892
	jmp	.L652
	.p2align 4,,10
	.p2align 3
.L6352:
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	cvtsi2sd	xmm1, eax
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+170]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC279[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC280[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
	.p2align 4,,10
	.p2align 3
.L6351:
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	cvtsi2sd	xmm1, eax
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC279[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+170]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC280[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
	.p2align 4,,10
	.p2align 3
.L6889:
.L2299:
	movapd	xmm0, xmm5
	movsd	QWORD PTR 16[rsp], xmm4
	movsd	QWORD PTR 8[rsp], xmm5
	call	nearbyint@PLT
	movsd	xmm1, QWORD PTR .LC299[rip]
	movsd	xmm5, QWORD PTR 8[rsp]
	cvttsd2si	rax, xmm0
	movsd	xmm4, QWORD PTR 16[rsp]
	comisd	xmm0, xmm1
	jnb	.L6893
.L2303:
	cmp	rax, 22
	ja	.L652
	lea	rdx, tmp$2883.5[rip]
	mov	rax, QWORD PTR [rdx+rax*8]
	jmp	.L4524
	.p2align 4,,10
	.p2align 3
.L6353:
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	cvtsi2sd	xmm1, eax
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+170]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC279[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+170]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC280[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
	.p2align 4,,10
	.p2align 3
.L6893:
	subsd	xmm0, xmm1
	cvttsd2si	rax, xmm0
	btc	rax, 63
	jmp	.L2303
	.p2align 4,,10
	.p2align 3
.L6356:
	movzx	eax, BYTE PTR BYTES$[rip+170]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 8[rsp], xmm4
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+85]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC279[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC280[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6887:
.L2295:
	cvtsd2si	rdx, QWORD PTR 394456[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rsi, QWORD PTR 394464[rbp]
	cvtsd2si	rax, QWORD PTR 394472[rbp]
	cvtsd2si	rcx, QWORD PTR 394480[rbp]
	sal	rdx, 32
	sal	rsi, 24
	add	rdx, rsi
	sal	rax, 16
	add	rax, rdx
	sal	rcx, 8
	add	rax, rcx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 394488[rbp]
	movsd	QWORD PTR 395032[rbp], xmm0
	jmp	.L652
.L2842:
	mov	esi, 12
	lea	rdi, .LC1275[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1174:
	mov	rax, QWORD PTR .LC301[rip]
	mov	QWORD PTR 395608[rbp], rax
	mov	rax, QWORD PTR .LC111[rip]
	mov	QWORD PTR 5184[rbp], rax
	jmp	.L2223
.L1175:
	mov	rax, QWORD PTR .LC302[rip]
	mov	QWORD PTR 395608[rbp], rax
	mov	rax, QWORD PTR .LC114[rip]
	mov	QWORD PTR 5184[rbp], rax
	jmp	.L2223
.L1182:
	mov	rax, QWORD PTR .LC309[rip]
	mov	QWORD PTR 395608[rbp], rax
	mov	rax, QWORD PTR .LC81[rip]
	mov	QWORD PTR 5184[rbp], rax
	jmp	.L2223
.L1183:
	mov	rax, QWORD PTR .LC310[rip]
	mov	QWORD PTR 395608[rbp], rax
	mov	rax, QWORD PTR .LC85[rip]
	mov	QWORD PTR 5184[rbp], rax
	jmp	.L2223
.L1172:
	mov	QWORD PTR 395608[rbp], 0x000000000
	mov	QWORD PTR 5184[rbp], 0x000000000
	jmp	.L2223
.L1173:
	mov	rax, QWORD PTR .LC300[rip]
	mov	QWORD PTR 395608[rbp], rax
	mov	rax, QWORD PTR .LC107[rip]
	mov	QWORD PTR 5184[rbp], rax
	jmp	.L2223
.L4372:
	jmp	.L652
.L4714:
	pxor	xmm0, xmm0
	movups	XMMWORD PTR 395032[rbp], xmm0
	jmp	.L652
.L1176:
	mov	rax, QWORD PTR .LC303[rip]
	mov	QWORD PTR 395608[rbp], rax
	mov	rax, QWORD PTR .LC6[rip]
	mov	QWORD PTR 5184[rbp], rax
	jmp	.L2223
.L1177:
	mov	rax, QWORD PTR .LC304[rip]
	mov	QWORD PTR 395608[rbp], rax
	mov	rax, QWORD PTR .LC121[rip]
	mov	QWORD PTR 5184[rbp], rax
	jmp	.L2223
.L1178:
	mov	rax, QWORD PTR .LC305[rip]
	mov	QWORD PTR 395608[rbp], rax
	mov	rax, QWORD PTR .LC125[rip]
	mov	QWORD PTR 5184[rbp], rax
	jmp	.L2223
.L1179:
	mov	rax, QWORD PTR .LC306[rip]
	mov	QWORD PTR 395608[rbp], rax
	mov	rax, QWORD PTR .LC129[rip]
	mov	QWORD PTR 5184[rbp], rax
	jmp	.L2223
.L1180:
	mov	rax, QWORD PTR .LC307[rip]
	mov	QWORD PTR 395608[rbp], rax
	mov	rax, QWORD PTR .LC73[rip]
	mov	QWORD PTR 5184[rbp], rax
	jmp	.L2223
.L1181:
	mov	rax, QWORD PTR .LC308[rip]
	mov	QWORD PTR 395608[rbp], rax
	mov	rax, QWORD PTR .LC77[rip]
	mov	QWORD PTR 5184[rbp], rax
	jmp	.L2223
.L4744:
	pxor	xmm0, xmm0
	pxor	xmm2, xmm2
	pxor	xmm3, xmm3
	xor	r8d, r8d
	cvtsd2si	rsi, QWORD PTR 394832[rbp]
	mov	rdi, QWORD PTR RASTER$[rip]
	xor	edx, edx
	cvtsd2ss	xmm0, QWORD PTR 394840[rbp]
	cvtsd2ss	xmm2, QWORD PTR 394864[rbp]
	mov	ecx, 65535
	movaps	xmm1, xmm3
	add	rsp, 280
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_GfxLine@PLT
.L4745:
	pxor	xmm0, xmm0
	pxor	xmm2, xmm2
	pxor	xmm3, xmm3
	xor	r8d, r8d
	cvtsd2si	rcx, QWORD PTR 393584[rbp]
	xor	edx, edx
	movaps	xmm1, xmm3
	cvtsd2ss	xmm0, QWORD PTR 394840[rbp]
	cvtsd2si	rsi, QWORD PTR 394824[rbp]
	cvtsd2ss	xmm2, QWORD PTR 394864[rbp]
	mov	rdi, QWORD PTR RASTER$[rip]
	add	rsp, 280
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_GfxLine@PLT
.L4746:
	pxor	xmm0, xmm0
	pxor	xmm2, xmm2
	pxor	xmm3, xmm3
	xor	r8d, r8d
	cvtsd2si	rcx, QWORD PTR 393584[rbp]
	xor	edx, edx
	movaps	xmm1, xmm3
	cvtsd2ss	xmm0, QWORD PTR 394840[rbp]
	cvtsd2si	rsi, QWORD PTR 394832[rbp]
	cvtsd2ss	xmm2, QWORD PTR 394864[rbp]
	mov	rdi, QWORD PTR RASTER$[rip]
	add	rsp, 280
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_GfxLine@PLT
.L4724:
	movsd	xmm0, QWORD PTR 394944[rbp]
	pxor	xmm1, xmm1
	pxor	xmm2, xmm2
	pxor	xmm4, xmm4
	addsd	xmm0, QWORD PTR 394960[rbp]
	mov	ecx, 4
	movaps	xmm3, xmm4
	cvtsd2ss	xmm2, QWORD PTR 394968[rbp]
	cvtsd2si	rsi, QWORD PTR 394824[rbp]
	movss	xmm5, DWORD PTR .LC2700[rip]
	mov	rdi, QWORD PTR FGIMAGE$[rip]
	cvtsd2si	rax, xmm0
	movsd	xmm0, QWORD PTR 394936[rbp]
	addsd	xmm0, QWORD PTR 394952[rbp]
	add	rsp, 280
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	cvtsd2si	rdx, xmm0
	pxor	xmm0, xmm0
	pop	r14
	pop	r15
	sar	rax
	cvtsi2ss	xmm1, rax
	sar	rdx
	cvtsi2ss	xmm0, rdx
	xor	edx, edx
	jmp	fb_GfxEllipse@PLT
.L4725:
	pxor	xmm3, xmm3
	pxor	xmm2, xmm2
	pxor	xmm1, xmm1
	xor	edx, edx
	movsd	xmm0, QWORD PTR 394944[rbp]
	mov	r8d, 2
	mov	ecx, 65535
	addsd	xmm0, QWORD PTR 394960[rbp]
	cvtsd2si	rsi, QWORD PTR 394824[rbp]
	cvtsd2si	rdi, xmm0
	movsd	xmm0, QWORD PTR 394936[rbp]
	addsd	xmm0, QWORD PTR 394952[rbp]
	cvtsd2si	rax, xmm0
	movaps	xmm0, xmm1
	sar	rdi
	cvtsi2ss	xmm3, rdi
	mov	rdi, QWORD PTR FGIMAGE$[rip]
	add	rsp, 280
	pop	rbx
	pop	rbp
	sar	rax
	pop	r12
	pop	r13
	cvtsi2ss	xmm2, rax
	pop	r14
	pop	r15
	jmp	fb_GfxLine@PLT
.L4726:
	movsd	xmm0, QWORD PTR 394944[rbp]
	pxor	xmm3, xmm3
	addsd	xmm0, QWORD PTR 394960[rbp]
	pxor	xmm2, xmm2
	pxor	xmm1, xmm1
	mov	r8d, 2
	mov	ecx, 65535
	mov	edx, 1
	cvtsd2si	rsi, QWORD PTR 394824[rbp]
	cvtsd2si	rdi, xmm0
	movsd	xmm0, QWORD PTR 394936[rbp]
	addsd	xmm0, QWORD PTR 394952[rbp]
	cvtsd2si	rax, xmm0
	movaps	xmm0, xmm1
	sar	rdi
	cvtsi2ss	xmm3, rdi
	mov	rdi, QWORD PTR FGIMAGE$[rip]
	add	rsp, 280
	pop	rbx
	pop	rbp
	sar	rax
	pop	r12
	pop	r13
	cvtsi2ss	xmm2, rax
	pop	r14
	pop	r15
	jmp	fb_GfxLine@PLT
.L4727:
	movsd	xmm0, QWORD PTR 394944[rbp]
	pxor	xmm3, xmm3
	addsd	xmm0, QWORD PTR 394960[rbp]
	pxor	xmm2, xmm2
	pxor	xmm1, xmm1
	mov	r8d, 2
	mov	ecx, 65535
	mov	edx, 2
	cvtsd2si	rsi, QWORD PTR 394824[rbp]
	cvtsd2si	rdi, xmm0
	movsd	xmm0, QWORD PTR 394936[rbp]
	addsd	xmm0, QWORD PTR 394952[rbp]
	cvtsd2si	rax, xmm0
	movaps	xmm0, xmm1
	sar	rdi
	cvtsi2ss	xmm3, rdi
	mov	rdi, QWORD PTR FGIMAGE$[rip]
	add	rsp, 280
	pop	rbx
	pop	rbp
	sar	rax
	pop	r12
	pop	r13
	cvtsi2ss	xmm2, rax
	pop	r14
	pop	r15
	jmp	fb_GfxLine@PLT
.L4728:
	pxor	xmm0, xmm0
	pxor	xmm3, xmm3
	pxor	xmm2, xmm2
	xor	edx, edx
	cvtsd2si	rax, QWORD PTR 394968[rbp]
	pxor	xmm1, xmm1
	mov	r8d, 2
	cvtsd2si	rsi, QWORD PTR 394824[rbp]
	sal	rax, 8
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 394976[rbp]
	cvtsd2si	rcx, xmm0
	movsd	xmm0, QWORD PTR 394944[rbp]
	addsd	xmm0, QWORD PTR 394960[rbp]
	cvtsd2si	rdi, xmm0
	movsd	xmm0, QWORD PTR 394936[rbp]
	addsd	xmm0, QWORD PTR 394952[rbp]
	cvtsd2si	rax, xmm0
	movaps	xmm0, xmm1
	sar	rdi
	cvtsi2ss	xmm3, rdi
	mov	rdi, QWORD PTR FGIMAGE$[rip]
	add	rsp, 280
	pop	rbx
	pop	rbp
	sar	rax
	pop	r12
	pop	r13
	cvtsi2ss	xmm2, rax
	pop	r14
	pop	r15
	jmp	fb_GfxLine@PLT
.L4729:
	xor	esi, esi
	lea	rdi, .LC3[rip]
	call	fb_StrAllocTempDescZEx@PLT
	movsd	xmm0, QWORD PTR 394944[rbp]
	pxor	xmm1, xmm1
	addsd	xmm0, QWORD PTR 394960[rbp]
	mov	rcx, rax
	mov	rdi, QWORD PTR FGIMAGE$[rip]
	mov	r9d, 1073741828
	xor	r8d, r8d
	cvtsd2si	rsi, QWORD PTR 394824[rbp]
	cvtsd2si	rax, xmm0
	movsd	xmm0, QWORD PTR 394936[rbp]
	addsd	xmm0, QWORD PTR 394952[rbp]
	add	rsp, 280
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	cvtsd2si	rdx, xmm0
	pxor	xmm0, xmm0
	pop	r14
	pop	r15
	sar	rax
	cvtsi2ss	xmm1, rax
	sar	rdx
	cvtsi2ss	xmm0, rdx
	xor	edx, edx
	jmp	fb_GfxPaint@PLT
.L4741:
	pxor	xmm0, xmm0
	xor	ecx, ecx
	pxor	xmm1, xmm1
	mov	edx, 4
	cvtsd2si	rsi, QWORD PTR 394824[rbp]
	cvtsd2ss	xmm0, QWORD PTR 394840[rbp]
	mov	rdi, QWORD PTR RASTER$[rip]
	add	rsp, 280
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_GfxPset@PLT
.L4742:
	pxor	xmm0, xmm0
	xor	ecx, ecx
	pxor	xmm1, xmm1
	mov	edx, 4
	cvtsd2si	rsi, QWORD PTR 394832[rbp]
	cvtsd2ss	xmm0, QWORD PTR 394840[rbp]
	mov	rdi, QWORD PTR RASTER$[rip]
	add	rsp, 280
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_GfxPset@PLT
.L4715:
	movq	xmm0, QWORD PTR .LC2696[rip]
	movups	XMMWORD PTR 395032[rbp], xmm0
	jmp	.L652
.L4716:
	movapd	xmm0, XMMWORD PTR .LC2697[rip]
	movups	XMMWORD PTR 395032[rbp], xmm0
	jmp	.L652
.L4717:
	movapd	xmm0, XMMWORD PTR .LC2698[rip]
	movups	XMMWORD PTR 395032[rbp], xmm0
	jmp	.L652
.L4723:
	movsd	xmm0, QWORD PTR 394944[rbp]
	pxor	xmm1, xmm1
	mov	rdi, QWORD PTR FGIMAGE$[rip]
	xor	ecx, ecx
	addsd	xmm0, QWORD PTR 394960[rbp]
	cvtsd2si	rsi, QWORD PTR 394824[rbp]
	cvtsd2si	rax, xmm0
	movsd	xmm0, QWORD PTR 394936[rbp]
	addsd	xmm0, QWORD PTR 394952[rbp]
	add	rsp, 280
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	cvtsd2si	rdx, xmm0
	pxor	xmm0, xmm0
	pop	r14
	pop	r15
	sar	rax
	cvtsi2ss	xmm1, rax
	sar	rdx
	cvtsi2ss	xmm0, rdx
	mov	edx, 4
	jmp	fb_GfxPset@PLT
.L4523:
	mov	esi, 11
	lea	rdi, .LC2617[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4492:
	mov	esi, 9
	lea	rdi, .LC2586[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4493:
	mov	esi, 5
	lea	rdi, .LC2587[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4494:
	mov	esi, 5
	lea	rdi, .LC2588[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4495:
	mov	esi, 10
	lea	rdi, .LC2589[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4496:
	mov	esi, 5
	lea	rdi, .LC2590[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4497:
	mov	esi, 6
	lea	rdi, .LC2591[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4498:
	mov	esi, 10
	lea	rdi, .LC2592[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4499:
	mov	esi, 10
	lea	rdi, .LC2593[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4500:
	mov	esi, 10
	lea	rdi, .LC2594[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4501:
	mov	esi, 13
	lea	rdi, .LC2595[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4502:
	mov	esi, 16
	lea	rdi, .LC2596[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4503:
	mov	esi, 16
	lea	rdi, .LC2597[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4504:
	mov	esi, 15
	lea	rdi, .LC2598[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4505:
	mov	esi, 16
	lea	rdi, .LC2599[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4506:
	mov	esi, 9
	lea	rdi, .LC2600[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4507:
	mov	esi, 10
	lea	rdi, .LC2601[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4508:
	mov	esi, 10
	lea	rdi, .LC2602[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4509:
	mov	esi, 9
	lea	rdi, .LC2603[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4510:
	mov	esi, 9
	lea	rdi, .LC2604[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4511:
	mov	esi, 9
	lea	rdi, .LC2605[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4512:
	mov	esi, 9
	lea	rdi, .LC2606[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4513:
	mov	esi, 9
	lea	rdi, .LC2607[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4514:
	mov	esi, 9
	lea	rdi, .LC2608[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4515:
	mov	esi, 9
	lea	rdi, .LC2609[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4516:
	mov	esi, 3
	lea	rdi, .LC2610[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4517:
	mov	esi, 3
	lea	rdi, .LC2611[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4518:
	mov	esi, 8
	lea	rdi, .LC2612[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4519:
	mov	esi, 3
	lea	rdi, .LC2613[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4520:
	mov	esi, 3
	lea	rdi, .LC2614[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4521:
	mov	esi, 5
	lea	rdi, .LC2615[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4522:
	mov	esi, 12
	lea	rdi, .LC2616[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4743:
	pxor	xmm0, xmm0
	pxor	xmm2, xmm2
	pxor	xmm3, xmm3
	xor	r8d, r8d
	cvtsd2si	rsi, QWORD PTR 394824[rbp]
	mov	rdi, QWORD PTR RASTER$[rip]
	xor	edx, edx
	cvtsd2ss	xmm0, QWORD PTR 394840[rbp]
	cvtsd2ss	xmm2, QWORD PTR 394864[rbp]
	mov	ecx, 65535
	movaps	xmm1, xmm3
	add	rsp, 280
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_GfxLine@PLT
.L4428:
	mov	esi, 12
	lea	rdi, .LC2523[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4429:
	mov	esi, 12
	lea	rdi, .LC2524[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4430:
	mov	esi, 10
	lea	rdi, .LC2525[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4431:
	mov	esi, 5
	lea	rdi, .LC2526[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4432:
	mov	esi, 6
	lea	rdi, .LC2527[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4433:
	mov	esi, 5
	lea	rdi, .LC2528[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4434:
	mov	esi, 5
	lea	rdi, .LC2529[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4435:
	mov	esi, 8
	lea	rdi, .LC2530[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4436:
	mov	esi, 8
	lea	rdi, .LC2531[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4437:
	mov	esi, 6
	lea	rdi, .LC2532[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4438:
	mov	esi, 8
	lea	rdi, .LC2533[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4439:
	mov	esi, 7
	lea	rdi, .LC2534[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4440:
	mov	esi, 6
	lea	rdi, .LC2535[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4441:
	mov	esi, 6
	lea	rdi, .LC2536[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4442:
	mov	esi, 4
	lea	rdi, .LC2193[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4443:
	mov	esi, 4
	lea	rdi, .LC2537[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4444:
	mov	esi, 4
	lea	rdi, .LC2538[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4445:
	mov	esi, 7
	lea	rdi, .LC2539[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4446:
	mov	esi, 11
	lea	rdi, .LC2540[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4447:
	mov	esi, 4
	lea	rdi, .LC2541[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4448:
	mov	esi, 11
	lea	rdi, .LC2542[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4449:
	mov	esi, 6
	lea	rdi, .LC2543[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4450:
	mov	esi, 4
	lea	rdi, .LC2544[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4451:
	mov	esi, 6
	lea	rdi, .LC2545[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4452:
	mov	esi, 4
	lea	rdi, .LC2546[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4453:
	mov	esi, 7
	lea	rdi, .LC2547[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4454:
	mov	esi, 7
	lea	rdi, .LC2548[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4455:
	mov	esi, 3
	lea	rdi, .LC2549[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4456:
	mov	esi, 7
	lea	rdi, .LC2550[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4457:
	mov	esi, 5
	lea	rdi, .LC2551[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4458:
	mov	esi, 6
	lea	rdi, .LC2552[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4459:
	mov	esi, 4
	lea	rdi, .LC2553[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4460:
	mov	esi, 3
	lea	rdi, .LC2554[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4461:
	mov	esi, 11
	lea	rdi, .LC2555[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4462:
	mov	esi, 12
	lea	rdi, .LC2556[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4463:
	mov	esi, 6
	lea	rdi, .LC2557[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4464:
	mov	esi, 7
	lea	rdi, .LC2558[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4465:
	mov	esi, 6
	lea	rdi, .LC2559[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4466:
	mov	esi, 3
	lea	rdi, .LC2560[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4467:
	mov	esi, 7
	lea	rdi, .LC2561[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4468:
	mov	esi, 3
	lea	rdi, .LC2562[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4469:
	mov	esi, 6
	lea	rdi, .LC2563[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4470:
	mov	esi, 3
	lea	rdi, .LC2564[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4471:
	mov	esi, 6
	lea	rdi, .LC2565[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4472:
	mov	esi, 8
	lea	rdi, .LC2566[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4473:
	mov	esi, 3
	lea	rdi, .LC2567[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4474:
	mov	esi, 4
	lea	rdi, .LC2568[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4475:
	mov	esi, 4
	lea	rdi, .LC2569[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4476:
	mov	esi, 5
	lea	rdi, .LC2570[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4477:
	mov	esi, 3
	lea	rdi, .LC2571[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4478:
	mov	esi, 3
	lea	rdi, .LC2572[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4479:
	mov	esi, 6
	lea	rdi, .LC2573[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4480:
	mov	esi, 6
	lea	rdi, .LC2574[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4481:
	mov	esi, 7
	lea	rdi, .LC2575[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4482:
	mov	esi, 5
	lea	rdi, .LC2576[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4483:
	mov	esi, 5
	lea	rdi, .LC2577[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4484:
	mov	esi, 9
	lea	rdi, .LC2578[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4485:
	mov	esi, 6
	lea	rdi, .LC2579[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4486:
	mov	esi, 6
	lea	rdi, .LC2580[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4487:
	mov	esi, 7
	lea	rdi, .LC2581[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4488:
	mov	esi, 3
	lea	rdi, .LC2582[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4489:
	mov	esi, 6
	lea	rdi, .LC2583[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4490:
	mov	esi, 9
	lea	rdi, .LC2584[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4491:
	mov	esi, 5
	lea	rdi, .LC2585[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4297:
	mov	esi, 8
	lea	rdi, .LC2397[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4298:
	mov	esi, 4
	lea	rdi, .LC2398[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4299:
	mov	esi, 6
	lea	rdi, .LC2399[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4300:
	mov	esi, 5
	lea	rdi, .LC2400[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4301:
	mov	esi, 6
	lea	rdi, .LC2401[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4302:
	mov	esi, 5
	lea	rdi, .LC2402[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4303:
	mov	esi, 5
	lea	rdi, .LC2403[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4304:
	mov	esi, 8
	lea	rdi, .LC2404[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4305:
	mov	esi, 5
	lea	rdi, .LC2405[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4306:
	mov	esi, 6
	lea	rdi, .LC2406[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4307:
	mov	esi, 7
	lea	rdi, .LC2407[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4308:
	mov	esi, 6
	lea	rdi, .LC2408[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4309:
	mov	esi, 7
	lea	rdi, .LC2409[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4310:
	mov	esi, 8
	lea	rdi, .LC2410[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4311:
	mov	esi, 8
	lea	rdi, .LC2411[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4312:
	mov	esi, 7
	lea	rdi, .LC2412[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4313:
	mov	esi, 9
	lea	rdi, .LC2413[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4314:
	mov	esi, 3
	lea	rdi, .LC2414[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4315:
	mov	esi, 9
	lea	rdi, .LC2415[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4316:
	mov	esi, 7
	lea	rdi, .LC2416[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4317:
	mov	esi, 7
	lea	rdi, .LC2417[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4318:
	mov	esi, 8
	lea	rdi, .LC2418[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4319:
	mov	esi, 8
	lea	rdi, .LC2419[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4320:
	mov	esi, 10
	lea	rdi, .LC2420[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4321:
	mov	esi, 9
	lea	rdi, .LC2421[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4322:
	mov	esi, 10
	lea	rdi, .LC2422[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4323:
	mov	esi, 7
	lea	rdi, .LC2423[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4324:
	mov	esi, 6
	lea	rdi, .LC2424[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4325:
	mov	esi, 10
	lea	rdi, .LC2425[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4326:
	mov	esi, 8
	lea	rdi, .LC2426[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4327:
	mov	esi, 8
	lea	rdi, .LC2427[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4328:
	mov	esi, 7
	lea	rdi, .LC2428[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4329:
	mov	esi, 11
	lea	rdi, .LC2429[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4330:
	mov	esi, 9
	lea	rdi, .LC2430[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4331:
	mov	esi, 3
	lea	rdi, .LC2431[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4332:
	mov	esi, 9
	lea	rdi, .LC2432[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4333:
	mov	esi, 9
	lea	rdi, .LC2433[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4334:
	mov	esi, 11
	lea	rdi, .LC2434[rip]
	call	fb_StrAllocTempDescZEx@PLT
	mov	edx, 1
	mov	edi, 1
	add	rsp, 280
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4335:
	mov	esi, 8
	lea	rdi, .LC2435[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4336:
	mov	esi, 4
	lea	rdi, .LC2436[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4337:
	mov	esi, 4
	lea	rdi, .LC2437[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4338:
	mov	esi, 4
	lea	rdi, .LC2438[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4339:
	mov	esi, 7
	lea	rdi, .LC2439[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4340:
	mov	esi, 7
	lea	rdi, .LC2440[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4341:
	mov	esi, 4
	lea	rdi, .LC2441[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4342:
	mov	esi, 8
	lea	rdi, .LC2442[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4343:
	mov	esi, 6
	lea	rdi, .LC2443[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4344:
	mov	esi, 3
	lea	rdi, .LC2444[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4345:
	mov	esi, 6
	lea	rdi, .LC2445[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4346:
	mov	esi, 10
	lea	rdi, .LC2446[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4347:
	mov	esi, 7
	lea	rdi, .LC2447[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4348:
	mov	esi, 4
	lea	rdi, .LC2448[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4349:
	mov	esi, 6
	lea	rdi, .LC2449[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4350:
	mov	esi, 6
	lea	rdi, .LC2450[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4351:
	mov	esi, 5
	lea	rdi, .LC2451[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4352:
	mov	esi, 6
	lea	rdi, .LC2452[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4353:
	mov	esi, 5
	lea	rdi, .LC2453[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4354:
	mov	esi, 3
	lea	rdi, .LC2454[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4355:
	mov	esi, 3
	lea	rdi, .LC2455[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4356:
	mov	esi, 3
	lea	rdi, .LC2456[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4357:
	mov	esi, 8
	lea	rdi, .LC2457[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4358:
	mov	esi, 8
	lea	rdi, .LC2458[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4359:
	mov	esi, 12
	lea	rdi, .LC2459[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4360:
	mov	esi, 10
	lea	rdi, .LC2460[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4361:
	mov	esi, 7
	lea	rdi, .LC2461[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4362:
	mov	esi, 8
	lea	rdi, .LC2462[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4363:
	mov	esi, 4
	lea	rdi, .LC2463[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4364:
	mov	esi, 11
	lea	rdi, .LC2464[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4365:
	mov	esi, 6
	lea	rdi, .LC2465[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4366:
	mov	esi, 8
	lea	rdi, .LC2466[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4367:
	mov	esi, 6
	lea	rdi, .LC2467[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4368:
	mov	esi, 6
	lea	rdi, .LC2468[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4116:
	jmp	.L652
.L4369:
	movsd	xmm0, QWORD PTR 394888[rbp]
	movsd	QWORD PTR 24[rsp], xmm1
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	nearbyint@PLT
	movsd	xmm1, QWORD PTR 24[rsp]
	movsd	xmm4, QWORD PTR 8[rsp]
	lea	r9, tmp$2882.6[rip]
	cvttsd2si	rax, xmm0
	movsd	xmm5, QWORD PTR 16[rsp]
	comisd	xmm0, xmm1
	jb	.L4371
	subsd	xmm0, xmm1
	cvttsd2si	rax, xmm0
	xor	rax, r12
.L4371:
	cmp	rax, 150
	ja	.L652
	jmp	[QWORD PTR [r9+rax*8]]
.L4374:
	mov	esi, 15
	lea	rdi, .LC2469[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4375:
	mov	esi, 11
	lea	rdi, .LC2470[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4376:
	mov	esi, 12
	lea	rdi, .LC2471[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4377:
	mov	esi, 9
	lea	rdi, .LC2472[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4378:
	mov	esi, 8
	lea	rdi, .LC2473[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4379:
	mov	esi, 6
	lea	rdi, .LC2474[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4380:
	mov	esi, 12
	lea	rdi, .LC2475[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4381:
	mov	esi, 6
	lea	rdi, .LC2476[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4382:
	mov	esi, 5
	lea	rdi, .LC2477[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4383:
	mov	esi, 3
	lea	rdi, .LC2478[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4384:
	mov	esi, 6
	lea	rdi, .LC2479[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4385:
	mov	esi, 6
	lea	rdi, .LC2480[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4386:
	mov	esi, 5
	lea	rdi, .LC2481[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4387:
	mov	esi, 3
	lea	rdi, .LC2482[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4388:
	mov	esi, 9
	lea	rdi, .LC2483[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4389:
	mov	esi, 7
	lea	rdi, .LC2484[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4390:
	mov	esi, 9
	lea	rdi, .LC2485[rip]
	call	fb_StrAllocTempDescZEx@PLT
	mov	edx, 1
	mov	edi, 1
	add	rsp, 280
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4391:
	mov	esi, 8
	lea	rdi, .LC2486[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4392:
	mov	esi, 11
	lea	rdi, .LC2487[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4393:
	mov	esi, 12
	lea	rdi, .LC2488[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4394:
	mov	esi, 9
	lea	rdi, .LC2489[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4395:
	mov	esi, 11
	lea	rdi, .LC2490[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4396:
	mov	esi, 5
	lea	rdi, .LC2491[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4397:
	mov	esi, 3
	lea	rdi, .LC2492[rip]
	call	fb_StrAllocTempDescZEx@PLT
	mov	edx, 1
	mov	edi, 1
	add	rsp, 280
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4398:
	mov	esi, 8
	lea	rdi, .LC2493[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4399:
	mov	esi, 6
	lea	rdi, .LC2494[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4400:
	mov	esi, 8
	lea	rdi, .LC2495[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4401:
	mov	esi, 10
	lea	rdi, .LC2496[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4402:
	mov	esi, 3
	lea	rdi, .LC2497[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4403:
	mov	esi, 8
	lea	rdi, .LC2498[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4404:
	mov	esi, 7
	lea	rdi, .LC2499[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4405:
	mov	esi, 5
	lea	rdi, .LC2500[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4406:
	mov	esi, 4
	lea	rdi, .LC2501[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4407:
	mov	esi, 5
	lea	rdi, .LC2502[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4408:
	mov	esi, 4
	lea	rdi, .LC2503[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4409:
	mov	esi, 5
	lea	rdi, .LC2504[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4410:
	mov	esi, 10
	lea	rdi, .LC2505[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4411:
	mov	esi, 13
	lea	rdi, .LC2506[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4412:
	mov	esi, 11
	lea	rdi, .LC2507[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4413:
	mov	esi, 12
	lea	rdi, .LC2508[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4414:
	mov	esi, 10
	lea	rdi, .LC2509[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4415:
	mov	esi, 10
	lea	rdi, .LC2510[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4416:
	mov	esi, 10
	lea	rdi, .LC2511[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4417:
	mov	esi, 9
	lea	rdi, .LC2512[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4418:
	mov	esi, 9
	lea	rdi, .LC2513[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4419:
	mov	esi, 9
	lea	rdi, .LC2514[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4420:
	mov	esi, 10
	lea	rdi, .LC2515[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4421:
	mov	esi, 12
	lea	rdi, .LC2516[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4422:
	mov	esi, 7
	lea	rdi, .LC2517[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4423:
	mov	esi, 10
	lea	rdi, .LC2518[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4424:
	mov	esi, 8
	lea	rdi, .LC2519[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4425:
	mov	esi, 7
	lea	rdi, .LC2520[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4426:
	mov	esi, 3
	lea	rdi, .LC2521[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4427:
	mov	esi, 10
	lea	rdi, .LC2522[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2731:
	mov	esi, 12
	lea	rdi, .LC1165[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2732:
	mov	esi, 9
	lea	rdi, .LC1166[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2733:
	mov	esi, 11
	lea	rdi, .LC1167[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2734:
	mov	esi, 11
	lea	rdi, .LC1168[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2735:
	mov	esi, 8
	lea	rdi, .LC1169[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2736:
	mov	esi, 11
	lea	rdi, .LC1170[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2737:
	mov	esi, 10
	lea	rdi, .LC1171[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2738:
	mov	esi, 11
	lea	rdi, .LC1172[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2739:
	mov	esi, 10
	lea	rdi, .LC1173[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2740:
	mov	esi, 9
	lea	rdi, .LC1174[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2741:
	mov	esi, 10
	lea	rdi, .LC1175[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2742:
	mov	esi, 12
	lea	rdi, .LC1176[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2743:
	mov	esi, 8
	lea	rdi, .LC1177[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2744:
	mov	esi, 12
	lea	rdi, .LC1178[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2745:
	mov	esi, 9
	lea	rdi, .LC1179[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2746:
	mov	esi, 5
	lea	rdi, .LC1180[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2747:
	mov	esi, 5
	lea	rdi, .LC1181[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2748:
	mov	esi, 4
	lea	rdi, .LC1182[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2749:
	mov	esi, 7
	lea	rdi, .LC1183[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2750:
	mov	esi, 11
	lea	rdi, .LC1184[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2751:
	mov	esi, 3
	lea	rdi, .LC1185[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2752:
	mov	esi, 3
	lea	rdi, .LC1186[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2753:
	mov	esi, 5
	lea	rdi, .LC1187[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2754:
	mov	esi, 11
	lea	rdi, .LC1188[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2755:
	mov	esi, 3
	lea	rdi, .LC1189[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2756:
	mov	esi, 5
	lea	rdi, .LC1190[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2757:
	mov	esi, 5
	lea	rdi, .LC1191[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2758:
	mov	esi, 3
	lea	rdi, .LC1192[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2759:
	mov	esi, 4
	lea	rdi, .LC1193[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2760:
	mov	esi, 3
	lea	rdi, .LC1194[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2761:
	mov	esi, 3
	lea	rdi, .LC1195[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2762:
	mov	esi, 5
	lea	rdi, .LC1196[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2763:
	mov	esi, 11
	lea	rdi, .LC1197[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2764:
	mov	esi, 6
	lea	rdi, .LC1198[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2765:
	mov	esi, 3
	lea	rdi, .LC1199[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2766:
	mov	esi, 8
	lea	rdi, .LC1200[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2767:
	mov	esi, 5
	lea	rdi, .LC1201[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2768:
	mov	esi, 6
	lea	rdi, .LC1202[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2769:
	mov	esi, 9
	lea	rdi, .LC1203[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2770:
	mov	esi, 4
	lea	rdi, .LC1204[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2771:
	mov	esi, 3
	lea	rdi, .LC1205[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2772:
	mov	esi, 4
	lea	rdi, .LC1206[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2773:
	mov	esi, 6
	lea	rdi, .LC1207[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2774:
	mov	esi, 17
	lea	rdi, .LC1208[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2775:
	mov	esi, 5
	lea	rdi, .LC1209[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2776:
	mov	esi, 8
	lea	rdi, .LC1210[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2777:
	mov	esi, 6
	lea	rdi, .LC1211[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2778:
	mov	esi, 7
	lea	rdi, .LC1212[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2779:
	mov	esi, 6
	lea	rdi, .LC1213[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2780:
	mov	esi, 8
	lea	rdi, .LC1214[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2781:
	mov	esi, 6
	lea	rdi, .LC1215[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2782:
	mov	esi, 8
	lea	rdi, .LC1216[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2783:
	mov	esi, 6
	lea	rdi, .LC1217[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2784:
	mov	esi, 10
	lea	rdi, .LC1218[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2785:
	mov	esi, 7
	lea	rdi, .LC1219[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2786:
	mov	esi, 1
	lea	rdi, .LC233[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2787:
	mov	esi, 4
	lea	rdi, .LC1220[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2788:
	mov	esi, 11
	lea	rdi, .LC1221[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2789:
	mov	esi, 12
	lea	rdi, .LC1222[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2790:
	mov	esi, 6
	lea	rdi, .LC1223[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2791:
	mov	esi, 10
	lea	rdi, .LC1224[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2792:
	mov	esi, 11
	lea	rdi, .LC1225[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2793:
	mov	esi, 13
	lea	rdi, .LC1226[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2794:
	mov	esi, 10
	lea	rdi, .LC1227[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2795:
	mov	esi, 7
	lea	rdi, .LC1228[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2796:
	mov	esi, 13
	lea	rdi, .LC1229[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2797:
	mov	esi, 5
	lea	rdi, .LC1230[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2798:
	mov	esi, 3
	lea	rdi, .LC1231[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2799:
	mov	esi, 6
	lea	rdi, .LC1232[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2800:
	mov	esi, 2
	lea	rdi, .LC1233[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2801:
	mov	esi, 5
	lea	rdi, .LC1234[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2802:
	mov	esi, 4
	lea	rdi, .LC1235[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2803:
	mov	esi, 12
	lea	rdi, .LC1236[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2804:
	mov	esi, 11
	lea	rdi, .LC1237[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2805:
	mov	esi, 5
	lea	rdi, .LC1238[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2806:
	mov	esi, 6
	lea	rdi, .LC1239[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2807:
	mov	esi, 6
	lea	rdi, .LC1240[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2808:
	mov	esi, 11
	lea	rdi, .LC1241[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2809:
	mov	esi, 5
	lea	rdi, .LC1242[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2810:
	mov	esi, 11
	lea	rdi, .LC1243[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2811:
	mov	esi, 11
	lea	rdi, .LC1244[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2812:
	mov	esi, 12
	lea	rdi, .LC1245[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2813:
	mov	esi, 7
	lea	rdi, .LC1246[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2814:
	mov	esi, 6
	lea	rdi, .LC1247[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2815:
	mov	esi, 5
	lea	rdi, .LC1248[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2816:
	mov	esi, 7
	lea	rdi, .LC1249[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2817:
	mov	esi, 3
	lea	rdi, .LC1250[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2818:
	mov	esi, 5
	lea	rdi, .LC1251[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2819:
	mov	esi, 4
	lea	rdi, .LC1252[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2820:
	mov	esi, 8
	lea	rdi, .LC1253[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2821:
	mov	esi, 4
	lea	rdi, .LC1254[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2822:
	mov	esi, 5
	lea	rdi, .LC1255[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2823:
	mov	esi, 5
	lea	rdi, .LC1256[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2824:
	mov	esi, 4
	lea	rdi, .LC1257[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2825:
	mov	esi, 2
	lea	rdi, .LC1258[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2826:
	mov	esi, 11
	lea	rdi, .LC1259[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2827:
	mov	esi, 3
	lea	rdi, .LC1260[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2828:
	mov	esi, 7
	lea	rdi, .LC1261[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2829:
	mov	esi, 10
	lea	rdi, .LC1262[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2830:
	mov	esi, 8
	lea	rdi, .LC1263[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2831:
	mov	esi, 7
	lea	rdi, .LC1264[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2832:
	mov	esi, 5
	lea	rdi, .LC1265[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2833:
	mov	esi, 3
	lea	rdi, .LC1266[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2834:
	mov	esi, 4
	lea	rdi, .LC1267[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2835:
	mov	esi, 6
	lea	rdi, .LC1268[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2836:
	mov	esi, 7
	lea	rdi, .LC1269[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2837:
	mov	esi, 7
	lea	rdi, .LC1270[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2838:
	mov	esi, 10
	lea	rdi, .LC1271[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2839:
	mov	esi, 9
	lea	rdi, .LC1272[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2840:
	mov	esi, 10
	lea	rdi, .LC1273[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2841:
	mov	esi, 9
	lea	rdi, .LC1274[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2454:
	mov	esi, 4
	lea	rdi, .LC896[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2455:
	mov	esi, 4
	lea	rdi, .LC897[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2456:
	mov	esi, 6
	lea	rdi, .LC898[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2457:
	mov	esi, 10
	lea	rdi, .LC899[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2458:
	mov	esi, 3
	lea	rdi, .LC900[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2459:
	mov	esi, 5
	lea	rdi, .LC901[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2460:
	mov	esi, 4
	lea	rdi, .LC902[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2461:
	mov	esi, 5
	lea	rdi, .LC903[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2462:
	mov	esi, 5
	lea	rdi, .LC904[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2463:
	mov	esi, 10
	lea	rdi, .LC905[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2464:
	mov	esi, 10
	lea	rdi, .LC906[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2465:
	mov	esi, 10
	lea	rdi, .LC907[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2466:
	mov	esi, 5
	lea	rdi, .LC908[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2467:
	mov	esi, 8
	lea	rdi, .LC909[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2468:
	mov	esi, 4
	lea	rdi, .LC910[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2469:
	mov	esi, 8
	lea	rdi, .LC911[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2470:
	mov	esi, 5
	lea	rdi, .LC912[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2471:
	mov	esi, 9
	lea	rdi, .LC913[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2472:
	mov	esi, 5
	lea	rdi, .LC914[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2473:
	mov	esi, 5
	lea	rdi, .LC915[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2474:
	mov	esi, 5
	lea	rdi, .LC916[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2475:
	mov	esi, 2
	lea	rdi, .LC917[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2476:
	mov	esi, 4
	lea	rdi, .LC918[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2477:
	mov	esi, 1
	lea	rdi, .LC230[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2478:
	mov	esi, 5
	lea	rdi, .LC919[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2479:
	mov	esi, 15
	lea	rdi, .LC920[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2480:
	mov	esi, 4
	lea	rdi, .LC921[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2481:
	mov	esi, 5
	lea	rdi, .LC922[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2482:
	mov	esi, 6
	lea	rdi, .LC923[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2483:
	mov	esi, 6
	lea	rdi, .LC924[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2484:
	mov	esi, 11
	lea	rdi, .LC925[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2485:
	mov	esi, 4
	lea	rdi, .LC926[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2486:
	mov	esi, 4
	lea	rdi, .LC927[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2487:
	mov	esi, 13
	lea	rdi, .LC928[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2488:
	mov	esi, 8
	lea	rdi, .LC929[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2489:
	mov	esi, 3
	lea	rdi, .LC930[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2490:
	mov	esi, 4
	lea	rdi, .LC931[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2491:
	mov	esi, 2
	lea	rdi, .LC932[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2492:
	mov	esi, 4
	lea	rdi, .LC933[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2493:
	mov	esi, 5
	lea	rdi, .LC934[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2494:
	mov	esi, 4
	lea	rdi, .LC935[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2495:
	mov	esi, 9
	lea	rdi, .LC936[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2496:
	mov	esi, 5
	lea	rdi, .LC937[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2497:
	mov	esi, 8
	lea	rdi, .LC938[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2498:
	mov	esi, 2
	lea	rdi, .LC939[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2499:
	mov	esi, 2
	lea	rdi, .LC940[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2500:
	mov	esi, 5
	lea	rdi, .LC941[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2501:
	mov	esi, 4
	lea	rdi, .LC942[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2502:
	mov	esi, 9
	lea	rdi, .LC943[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2503:
	mov	esi, 16
	lea	rdi, .LC944[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2504:
	mov	esi, 18
	lea	rdi, .LC945[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2505:
	mov	esi, 19
	lea	rdi, .LC946[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2506:
	mov	esi, 10
	lea	rdi, .LC947[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2507:
	mov	esi, 11
	lea	rdi, .LC948[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2508:
	mov	esi, 13
	lea	rdi, .LC949[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2509:
	mov	esi, 14
	lea	rdi, .LC950[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2510:
	mov	esi, 7
	lea	rdi, .LC951[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2511:
	mov	esi, 5
	lea	rdi, .LC952[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2512:
	mov	esi, 5
	lea	rdi, .LC953[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2513:
	mov	esi, 7
	lea	rdi, .LC954[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2514:
	mov	esi, 3
	lea	rdi, .LC955[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2515:
	mov	esi, 4
	lea	rdi, .LC956[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2516:
	mov	esi, 6
	lea	rdi, .LC957[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2517:
	mov	esi, 8
	lea	rdi, .LC958[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2518:
	mov	esi, 5
	lea	rdi, .LC959[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2519:
	mov	esi, 5
	lea	rdi, .LC960[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2520:
	mov	esi, 8
	lea	rdi, .LC961[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2521:
	mov	esi, 5
	lea	rdi, .LC962[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2522:
	mov	esi, 10
	lea	rdi, .LC963[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2523:
	mov	esi, 5
	lea	rdi, .LC964[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2524:
	mov	esi, 11
	lea	rdi, .LC965[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2525:
	mov	esi, 8
	lea	rdi, .LC966[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2526:
	mov	esi, 11
	lea	rdi, .LC967[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2527:
	mov	esi, 5
	lea	rdi, .LC968[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2528:
	mov	esi, 7
	lea	rdi, .LC969[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2529:
	mov	esi, 3
	lea	rdi, .LC970[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2530:
	mov	esi, 5
	lea	rdi, .LC971[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2531:
	mov	esi, 4
	lea	rdi, .LC972[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2532:
	mov	esi, 8
	lea	rdi, .LC973[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2533:
	mov	esi, 9
	lea	rdi, .LC974[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2534:
	mov	esi, 7
	lea	rdi, .LC975[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2535:
	mov	esi, 5
	lea	rdi, .LC976[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2536:
	mov	esi, 9
	lea	rdi, .LC977[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2537:
	mov	esi, 7
	lea	rdi, .LC978[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2538:
	mov	esi, 6
	lea	rdi, .LC979[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2539:
	mov	esi, 10
	lea	rdi, .LC980[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2540:
	mov	esi, 6
	lea	rdi, .LC981[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2541:
	mov	esi, 3
	lea	rdi, .LC982[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2542:
	mov	esi, 5
	lea	rdi, .LC983[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2543:
	mov	esi, 7
	lea	rdi, .LC984[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2544:
	mov	esi, 6
	lea	rdi, .LC985[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2545:
	mov	esi, 6
	lea	rdi, .LC986[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2546:
	mov	esi, 13
	lea	rdi, .LC987[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2547:
	mov	esi, 4
	lea	rdi, .LC988[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2548:
	mov	esi, 6
	lea	rdi, .LC989[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2549:
	mov	esi, 6
	lea	rdi, .LC990[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2550:
	mov	esi, 6
	lea	rdi, .LC991[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2551:
	mov	esi, 6
	lea	rdi, .LC992[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2552:
	mov	esi, 6
	lea	rdi, .LC993[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2553:
	mov	esi, 7
	lea	rdi, .LC994[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2554:
	mov	esi, 9
	lea	rdi, .LC995[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2555:
	mov	esi, 9
	lea	rdi, .LC996[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2556:
	mov	esi, 13
	lea	rdi, .LC997[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2557:
	mov	esi, 15
	lea	rdi, .LC998[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2558:
	mov	esi, 15
	lea	rdi, .LC999[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2559:
	mov	esi, 15
	lea	rdi, .LC1000[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2560:
	mov	esi, 15
	lea	rdi, .LC1001[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2561:
	mov	esi, 15
	lea	rdi, .LC1002[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2562:
	mov	esi, 7
	lea	rdi, .LC1003[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2563:
	mov	esi, 7
	lea	rdi, .LC1004[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2564:
	mov	esi, 6
	lea	rdi, .LC1005[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2565:
	mov	esi, 11
	lea	rdi, .LC1006[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2566:
	mov	esi, 4
	lea	rdi, .LC1007[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2567:
	mov	esi, 4
	lea	rdi, .LC1008[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2568:
	mov	esi, 10
	lea	rdi, .LC1009[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2569:
	mov	esi, 13
	lea	rdi, .LC1010[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2570:
	mov	esi, 11
	lea	rdi, .LC1011[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2571:
	mov	esi, 15
	lea	rdi, .LC1012[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2572:
	mov	esi, 5
	lea	rdi, .LC1013[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2573:
	mov	esi, 8
	lea	rdi, .LC1014[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2574:
	mov	esi, 11
	lea	rdi, .LC1015[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2575:
	mov	esi, 4
	lea	rdi, .LC1016[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2576:
	mov	esi, 12
	lea	rdi, .LC1017[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2577:
	mov	esi, 8
	lea	rdi, .LC1018[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2578:
	mov	esi, 7
	lea	rdi, .LC1019[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2579:
	mov	esi, 8
	lea	rdi, .LC1020[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2580:
	mov	esi, 7
	lea	rdi, .LC1021[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2581:
	mov	esi, 8
	lea	rdi, .LC1022[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2390:
	mov	esi, 13
	lea	rdi, .LC833[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2391:
	mov	esi, 7
	lea	rdi, .LC834[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2392:
	mov	esi, 13
	lea	rdi, .LC835[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2393:
	mov	esi, 3
	lea	rdi, .LC836[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2394:
	mov	esi, 8
	lea	rdi, .LC837[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2395:
	mov	esi, 5
	lea	rdi, .LC838[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2396:
	mov	esi, 3
	lea	rdi, .LC839[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2397:
	mov	esi, 8
	lea	rdi, .LC840[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2398:
	mov	esi, 6
	lea	rdi, .LC841[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2399:
	mov	esi, 5
	lea	rdi, .LC842[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2400:
	mov	esi, 9
	lea	rdi, .LC843[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2401:
	mov	esi, 3
	lea	rdi, .LC844[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2402:
	mov	esi, 4
	lea	rdi, .LC845[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2403:
	mov	esi, 10
	lea	rdi, .LC846[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2404:
	mov	esi, 5
	lea	rdi, .LC847[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2405:
	mov	esi, 5
	lea	rdi, .LC848[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2406:
	mov	esi, 11
	lea	rdi, .LC849[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2407:
	mov	esi, 2
	lea	rdi, .LC850[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2408:
	mov	esi, 3
	lea	rdi, .LC851[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2409:
	mov	esi, 9
	lea	rdi, .LC852[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2410:
	mov	esi, 5
	lea	rdi, .LC853[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2411:
	mov	esi, 4
	lea	rdi, .LC854[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2412:
	mov	esi, 5
	lea	rdi, .LC855[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2413:
	mov	esi, 3
	lea	rdi, .LC856[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2414:
	mov	esi, 9
	lea	rdi, .LC857[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2415:
	mov	esi, 6
	lea	rdi, .LC858[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2416:
	mov	esi, 6
	lea	rdi, .LC859[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2417:
	mov	esi, 13
	lea	rdi, .LC860[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2418:
	mov	esi, 5
	lea	rdi, .LC861[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2419:
	mov	esi, 2
	lea	rdi, .LC862[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2420:
	mov	esi, 4
	lea	rdi, .LC863[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2421:
	mov	esi, 5
	lea	rdi, .LC864[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2422:
	mov	esi, 5
	lea	rdi, .LC865[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2423:
	mov	esi, 3
	lea	rdi, .LC866[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2424:
	mov	esi, 9
	lea	rdi, .LC867[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2425:
	mov	esi, 6
	lea	rdi, .LC868[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2426:
	mov	esi, 4
	lea	rdi, .LC869[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2427:
	mov	esi, 9
	lea	rdi, .LC870[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2428:
	mov	esi, 8
	lea	rdi, .LC871[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2429:
	mov	esi, 7
	lea	rdi, .LC872[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2430:
	mov	esi, 3
	lea	rdi, .LC873[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2431:
	mov	esi, 5
	lea	rdi, .LC874[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2432:
	mov	esi, 1
	lea	rdi, .LC229[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2433:
	mov	esi, 10
	lea	rdi, .LC875[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2434:
	mov	esi, 10
	lea	rdi, .LC876[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2435:
	mov	esi, 9
	lea	rdi, .LC877[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2436:
	mov	esi, 5
	lea	rdi, .LC878[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2437:
	mov	esi, 4
	lea	rdi, .LC879[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2438:
	mov	esi, 6
	lea	rdi, .LC880[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2439:
	mov	esi, 5
	lea	rdi, .LC881[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2440:
	mov	esi, 9
	lea	rdi, .LC882[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2441:
	mov	esi, 7
	lea	rdi, .LC883[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2442:
	mov	esi, 13
	lea	rdi, .LC884[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2443:
	mov	esi, 13
	lea	rdi, .LC885[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2444:
	mov	esi, 6
	lea	rdi, .LC886[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2445:
	mov	esi, 4
	lea	rdi, .LC887[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2446:
	mov	esi, 9
	lea	rdi, .LC888[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2447:
	mov	esi, 10
	lea	rdi, .LC889[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2448:
	mov	esi, 5
	lea	rdi, .LC890[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2449:
	mov	esi, 5
	lea	rdi, .LC891[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2450:
	mov	esi, 4
	lea	rdi, .LC892[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2451:
	mov	esi, 5
	lea	rdi, .LC893[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2452:
	mov	esi, 4
	lea	rdi, .LC894[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2453:
	mov	esi, 12
	lea	rdi, .LC895[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2358:
	mov	esi, 3
	lea	rdi, .LC801[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2359:
	mov	esi, 8
	lea	rdi, .LC802[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2360:
	mov	esi, 10
	lea	rdi, .LC803[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2361:
	mov	esi, 8
	lea	rdi, .LC804[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2362:
	mov	esi, 6
	lea	rdi, .LC805[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2363:
	mov	esi, 6
	lea	rdi, .LC806[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2364:
	mov	esi, 8
	lea	rdi, .LC807[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2365:
	mov	esi, 4
	lea	rdi, .LC808[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2366:
	mov	esi, 5
	lea	rdi, .LC809[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2367:
	mov	esi, 6
	lea	rdi, .LC810[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2368:
	mov	esi, 8
	lea	rdi, .LC811[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2369:
	mov	esi, 11
	lea	rdi, .LC812[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2370:
	mov	esi, 3
	lea	rdi, .LC813[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2371:
	mov	esi, 7
	lea	rdi, .LC814[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2372:
	mov	esi, 9
	lea	rdi, .LC815[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2373:
	mov	esi, 5
	lea	rdi, .LC816[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2374:
	mov	esi, 5
	lea	rdi, .LC817[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2375:
	mov	esi, 10
	lea	rdi, .LC818[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2376:
	mov	esi, 5
	lea	rdi, .LC819[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2377:
	mov	esi, 3
	lea	rdi, .LC820[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2378:
	mov	esi, 17
	lea	rdi, .LC821[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2379:
	mov	esi, 5
	lea	rdi, .LC822[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2380:
	mov	esi, 8
	lea	rdi, .LC823[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2381:
	mov	esi, 10
	lea	rdi, .LC824[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2382:
	mov	esi, 16
	lea	rdi, .LC825[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2383:
	mov	esi, 16
	lea	rdi, .LC826[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2384:
	mov	esi, 12
	lea	rdi, .LC827[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2385:
	mov	esi, 19
	lea	rdi, .LC828[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2386:
	mov	esi, 4
	lea	rdi, .LC829[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2387:
	mov	esi, 5
	lea	rdi, .LC830[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2388:
	mov	esi, 9
	lea	rdi, .LC831[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2389:
	mov	esi, 8
	lea	rdi, .LC832[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1184:
	mov	rax, QWORD PTR .LC311[rip]
	mov	QWORD PTR 395608[rbp], rax
	mov	rax, QWORD PTR .LC89[rip]
	mov	QWORD PTR 5184[rbp], rax
	jmp	.L2223
.L1185:
	mov	rax, QWORD PTR .LC312[rip]
	mov	QWORD PTR 395608[rbp], rax
	mov	rax, QWORD PTR .LC93[rip]
	mov	QWORD PTR 5184[rbp], rax
	jmp	.L2223
.L1186:
	mov	rax, QWORD PTR .LC313[rip]
	mov	QWORD PTR 395608[rbp], rax
	mov	rax, QWORD PTR .LC97[rip]
	mov	QWORD PTR 5184[rbp], rax
	jmp	.L2223
.L1187:
	mov	rax, QWORD PTR .LC314[rip]
	mov	QWORD PTR 395608[rbp], rax
	mov	rax, QWORD PTR .LC101[rip]
	mov	QWORD PTR 5184[rbp], rax
	jmp	.L2223
.L1170:
	jmp	.L2223
.L2306:
	movapd	xmm0, XMMWORD PTR .LC764[rip]
	mov	rdi, rbp
	pxor	xmm1, xmm1
	lea	r12, 240[rsp]
	movups	XMMWORD PTR 394840[rbp], xmm0
	movsd	xmm0, QWORD PTR .LC762[rip]
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rdi, r12
	or	rsi, -1
	call	_ZN9SHADERTOYC1Ev
	lea	rdi, FILENAME$[rip]
	call	fb_StrLen@PLT
	test	rax, rax
	jne	.L2307
	or	rsi, -1
	xor	r8d, r8d
	lea	rdi, FILENAME$[rip]
	mov	ecx, 23
	lea	rdx, .LC765[rip]
	call	fb_StrAssign@PLT
	lea	rsi, FILENAME$[rip]
	mov	rdi, r12
	call	_ZN9SHADERTOY11COMPILEFILEER8FBSTRING
	test	al, al
	jne	.L2308
	mov	r9d, 1
.L5034:
	xor	ebx, ebx
	lea	r10, 112[rsp]
	mov	ecx, 6
	or	r8, -1
	lea	r14, 208[rsp]
	mov	eax, ebx
	mov	edx, 7
	mov	BYTE PTR 16[rsp], r9b
	mov	rdi, r14
	lea	rsi, .LC766[rip]
	mov	QWORD PTR 8[rsp], r10
	lea	r15, 144[rsp]
	rep stosd
	mov	rdi, r10
	mov	ecx, 6
	lea	r13, 176[rsp]
	rep stosd
	mov	rdi, r10
	lea	rcx, FILENAME$[rip]
	call	fb_StrConcat@PLT
	mov	ecx, 6
	mov	rdi, r15
	or	rdx, -1
	mov	rsi, rax
	mov	eax, ebx
	mov	r8d, 3
	rep stosd
	lea	rcx, .LC767[rip]
	mov	rdi, r15
	call	fb_StrConcat@PLT
	mov	rdi, r13
	or	r8, -1
	or	rdx, -1
	mov	rsi, rax
	mov	ecx, 6
	mov	eax, ebx
	rep stosd
	lea	rcx, 248[rsp]
	mov	rdi, r13
	call	fb_StrConcat@PLT
	xor	r8d, r8d
	or	rcx, -1
	or	rsi, -1
	mov	rdx, rax
	mov	rdi, r14
	call	fb_StrAssign@PLT
	mov	rdi, r14
	call	ERROREXIT
	mov	rdi, r14
	call	fb_StrDelete@PLT
	mov	eax, ebx
	mov	ecx, 6
	mov	rdi, r15
	rep stosd
	mov	r8d, 8
	lea	rcx, .LC768[rip]
	or	rdx, -1
	lea	rsi, FILENAME$[rip]
	mov	rdi, r15
	call	fb_StrConcat@PLT
	mov	rdi, rax
	call	fb_GfxSetWindowTitle@PLT
	mov	edi, DWORD PTR 244[rsp]
	call	[QWORD PTR GLUSEPROGRAM$[rip]]
	mov	r10, QWORD PTR 8[rsp]
	pxor	xmm0, xmm0
	mov	edi, 4
	movaps	XMMWORD PTR 112[rsp], xmm0
	mov	rsi, r10
	call	glGenTextures@PLT
	movzx	r9d, BYTE PTR 16[rsp]
	test	r9b, r9b
	je	.L2320
.L5032:
	cmp	QWORD PTR FGIMAGE$[rip], 0
	je	.L6894
.L2310:
.L2318:
.L2319:
	lea	rcx, 104[rsp]
	lea	rdx, 96[rsp]
	mov	r9, r14
	mov	r8, r13
	mov	QWORD PTR 88[rsp], 0
	lea	rsi, 88[rsp]
	mov	QWORD PTR 96[rsp], 0
	mov	QWORD PTR 104[rsp], 0
	mov	QWORD PTR 176[rsp], 0
	mov	QWORD PTR 208[rsp], 0
	mov	QWORD PTR 80[rsp], 0
	push	rdi
	mov	rdi, QWORD PTR FGIMAGE$[rip]
	lea	rax, 88[rsp]
	push	rax
	call	fb_GfxImageInfo@PLT
	mov	esi, DWORD PTR 128[rsp]
	mov	edi, 3553
	call	glBindTexture@PLT
	pop	r8
	push	QWORD PTR 216[rsp]
	xor	esi, esi
	push	5121
	mov	edi, 3553
	xor	r9d, r9d
	mov	edx, 6408
	push	32993
	mov	r8d, DWORD PTR 128[rsp]
	mov	ecx, DWORD PTR 120[rsp]
	call	glTexImage2D@PLT
	add	rsp, 32
	xor	esi, esi
	mov	edi, 3553
	call	glBindTexture@PLT
.L2309:
.L2320:
	mov	edi, DWORD PTR 244[rsp]
	lea	rsi, .LC774[rip]
	call	[QWORD PTR GLGETUNIFORMLOCATION$[rip]]
	mov	edi, eax
	test	eax, eax
	js	.L2322
	xor	esi, esi
	call	[QWORD PTR GLUNIFORM1I$[rip]]
	mov	edi, 33984
	call	glActiveTexture@PLT
	mov	esi, DWORD PTR 112[rsp]
	mov	edi, 3553
	call	glBindTexture@PLT
.L2321:
.L2322:
	mov	edi, DWORD PTR 244[rsp]
	lea	rsi, .LC775[rip]
	call	[QWORD PTR GLGETUNIFORMLOCATION$[rip]]
	mov	edi, DWORD PTR 244[rsp]
	lea	rsi, .LC776[rip]
	mov	DWORD PTR 40[rsp], eax
	call	[QWORD PTR GLGETUNIFORMLOCATION$[rip]]
	mov	edi, DWORD PTR 244[rsp]
	lea	rsi, .LC777[rip]
	mov	r13d, eax
	call	[QWORD PTR GLGETUNIFORMLOCATION$[rip]]
	mov	edi, DWORD PTR 244[rsp]
	lea	rsi, .LC778[rip]
	mov	ebx, eax
	call	[QWORD PTR GLGETUNIFORMLOCATION$[rip]]
	mov	edi, DWORD PTR 244[rsp]
	lea	rsi, .LC779[rip]
	mov	r14d, eax
	call	[QWORD PTR GLGETUNIFORMLOCATION$[rip]]
	mov	r15d, eax
	test	ebx, ebx
	js	.L2323
	movss	xmm2, DWORD PTR .LC780[rip]
	movss	xmm1, DWORD PTR .LC781[rip]
	mov	edi, ebx
	movss	xmm0, DWORD PTR .LC782[rip]
	call	[QWORD PTR GLUNIFORM3F$[rip]]
.L2323:
	mov	QWORD PTR 72[rsp], 0
	xor	ebx, ebx
	mov	QWORD PTR 80[rsp], 0
	mov	QWORD PTR 88[rsp], 0
	mov	QWORD PTR 96[rsp], 0
	call	fb_Timer@PLT
	mov	QWORD PTR 104[rsp], 0
	mov	QWORD PTR 24[rsp], -1
	mov	QWORD PTR 16[rsp], -1
	mov	QWORD PTR 8[rsp], -1
	movsd	QWORD PTR 48[rsp], xmm0
	movsd	QWORD PTR 32[rsp], xmm0
.L2324:
	call	fb_Inkey@PLT
	mov	ecx, 1
	lea	rdx, .LC3[rip]
	mov	rsi, -1
	mov	rdi, rax
	call	fb_StrCompare@PLT
	test	eax, eax
	jne	.L6895
	call	fb_Timer@PLT
	movsd	QWORD PTR 104[rsp], xmm0
	subsd	xmm0, QWORD PTR 48[rsp]
	movsd	QWORD PTR 96[rsp], xmm0
	test	r13d, r13d
	js	.L6896
	mov	edi, r13d
	cvtsd2ss	xmm0, xmm0
	call	[QWORD PTR GLUNIFORM1F$[rip]]
.L2328:
.L2330:
	test	r15d, r15d
	js	.L2331
	pxor	xmm0, xmm0
	mov	edi, r15d
	cvtsi2ss	xmm0, rbx
	call	[QWORD PTR GLUNIFORM1F$[rip]]
.L2331:
	test	r14d, r14d
	js	.L2340
	lea	rcx, 88[rsp]
	lea	rdx, 176[rsp]
	mov	QWORD PTR 208[rsp], 0
	lea	rsi, 80[rsp]
	lea	rdi, 72[rsp]
	mov	QWORD PTR 176[rsp], 0
	lea	r8, 208[rsp]
	call	fb_GetMouse64@PLT
	test	eax, eax
	jne	.L2340
	mov	rcx, QWORD PTR 72[rsp]
	cmp	rcx, QWORD PTR 8[rsp]
	je	.L6897
.L2334:
	mov	rax, QWORD PTR SCR_H$[rip]
	pxor	xmm2, xmm2
	pxor	xmm1, xmm1
	sub	rax, QWORD PTR 80[rsp]
	cvtsi2ss	xmm2, QWORD PTR 88[rsp]
	cvtsi2ss	xmm1, rax
	jns	.L2336
	mov	rdx, rax
	and	eax, 1
	pxor	xmm1, xmm1
	shr	rdx
	or	rdx, rax
	cvtsi2ss	xmm1, rdx
	addss	xmm1, xmm1
.L2336:
	pxor	xmm0, xmm0
	movss	xmm3, DWORD PTR .LC783[rip]
	mov	edi, r14d
	cvtsi2ss	xmm0, rcx
	call	[QWORD PTR GLUNIFORM4F$[rip]]
	mov	rax, QWORD PTR 72[rsp]
	mov	QWORD PTR 8[rsp], rax
	mov	rax, QWORD PTR 80[rsp]
	mov	QWORD PTR 16[rsp], rax
	mov	rax, QWORD PTR 88[rsp]
	mov	QWORD PTR 24[rsp], rax
.L2333:
.L2337:
.L2338:
.L2339:
.L2332:
.L2340:
	movss	xmm3, DWORD PTR .LC783[rip]
	movss	xmm1, DWORD PTR .LC784[rip]
	add	rbx, 1
	movaps	xmm2, xmm3
	movaps	xmm0, xmm1
	call	glRectf@PLT
	mov	esi, -1
	mov	edi, -1
	call	fb_GfxFlip@PLT
	movabs	rax, -1229782938247303441
	movabs	rdx, 614891469123651720
	imul	rax, rbx
	add	rax, rdx
	movabs	rdx, 307445734561825860
	ror	rax, 2
	cmp	rax, rdx
	ja	.L2324
	call	fb_Timer@PLT
	movapd	xmm1, xmm0
	subsd	xmm1, QWORD PTR 32[rsp]
	movsd	QWORD PTR 104[rsp], xmm0
	movsd	QWORD PTR 56[rsp], xmm0
	movsd	xmm0, QWORD PTR .LC101[rip]
	divsd	xmm0, xmm1
	cvtsd2si	rdi, xmm0
	call	fb_LongintToStr@PLT
	lea	r9, 176[rsp]
	xor	r11d, r11d
	mov	ecx, 6
	mov	QWORD PTR 32[rsp], rax
	mov	rdi, r9
	mov	eax, r11d
	mov	r8d, 7
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	lea	rcx, .LC785[rip]
	lea	rsi, FILENAME$[rip]
	call	fb_StrConcat@PLT
	xor	r11d, r11d
	or	r8, -1
	or	rdx, -1
	lea	r9, 208[rsp]
	mov	rsi, rax
	mov	ecx, 6
	mov	eax, r11d
	mov	rdi, r9
	mov	r10, QWORD PTR 32[rsp]
	rep stosd
	mov	rdi, r9
	mov	rcx, r10
	call	fb_StrConcat@PLT
	pxor	xmm1, xmm1
	xor	r9d, r9d
	xor	r8d, r8d
	push	rcx
	mov	rdx, rax
	xor	ecx, ecx
	mov	esi, -2147483644
	push	0
	movaps	xmm0, xmm1
	xor	edi, edi
	push	0
	push	0
	call	fb_GfxDrawString@PLT
	movsd	xmm2, QWORD PTR 88[rsp]
	add	rsp, 32
	movsd	QWORD PTR 32[rsp], xmm2
	jmp	.L2324
.L2344:
	mov	esi, 7
	lea	rdi, .LC788[rip]
	call	fb_StrAllocTempDescZEx@PLT
	xor	edx, edx
	xor	r9d, r9d
	mov	r8d, 1
	mov	rdi, rax
	xor	ecx, ecx
	mov	esi, 3
	call	fb_FileOpen@PLT
	mov	esi, 16
	lea	rdi, .LC789[rip]
	call	fb_StrAllocTempDescZEx@PLT
	mov	edx, 1
	mov	edi, 1
	add	rsp, 280
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2345:
	mov	esi, 14
	lea	rdi, .LC790[rip]
	call	fb_StrAllocTempDescZEx@PLT
	mov	edi, 1
	mov	edx, 1
	mov	rsi, rax
	call	fb_PrintString@PLT
	add	rsp, 280
	mov	edi, 1
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_FileClose@PLT
.L2346:
	mov	esi, 29
	lea	rdi, .LC791[rip]
	xor	ebx, ebx
	call	fb_StrAllocTempDescZEx@PLT
	mov	rdi, rax
	call	fb_Shell@PLT
	mov	esi, 30
	lea	rdi, .LC792[rip]
	call	fb_StrAllocTempDescZEx@PLT
	mov	rdi, rax
	call	fb_Shell@PLT
	movsd	xmm0, QWORD PTR 394888[rbp]
	call	fb_DoubleToStr@PLT
	mov	ecx, 6
	or	r8, -1
	lea	r9, 144[rsp]
	mov	r10, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	edx, 19
	rep stosd
	lea	rsi, .LC793[rip]
	mov	rcx, r10
	mov	rdi, r9
	call	fb_StrConcat@PLT
	mov	ecx, 6
	mov	r8d, 5
	lea	r9, 176[rsp]
	mov	rdi, r9
	mov	rsi, rax
	mov	eax, ebx
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	lea	rcx, .LC794[rip]
	call	fb_StrConcat@PLT
	mov	rdi, rax
	call	fb_Shell@PLT
	mov	esi, 18
	lea	rdi, .LC795[rip]
	call	fb_StrAllocTempDescZEx@PLT
	mov	rdi, rax
	call	fb_Shell@PLT
	mov	edi, -65536
	call	fb_Cls@PLT
	movsd	xmm0, QWORD PTR 394888[rbp]
	call	fb_DoubleToStr@PLT
	mov	ecx, 6
	or	r8, -1
	lea	r9, 208[rsp]
	mov	r10, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	edx, 8
	rep stosd
	lea	rsi, .LC796[rip]
	mov	rcx, r10
	mov	rdi, r9
	call	fb_StrConcat@PLT
	mov	ecx, 6
	mov	r8d, 5
	lea	r9, 240[rsp]
	mov	rdi, r9
	mov	rsi, rax
	mov	eax, ebx
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	lea	rcx, .LC794[rip]
	call	fb_StrConcat@PLT
	mov	rsi, QWORD PTR FGIMAGE$[rip]
	xor	edx, edx
	mov	rdi, rax
	call	fb_GfxBload@PLT
	push	0
	pxor	xmm1, xmm1
	mov	ecx, -65536
	push	0
	mov	r9d, -65536
	mov	edx, -65536
	movaps	xmm0, xmm1
	push	-1
	mov	rsi, QWORD PTR RENDER$[rip]
	mov	r8d, -65536
	push	QWORD PTR fb_hPutPSet@GOTPCREL[rip]
	mov	rdi, QWORD PTR FGIMAGE$[rip]
	push	1
	push	0
	call	fb_GfxPut@PLT
	add	rsp, 48
	jmp	.L652
.L2347:
	movsd	xmm0, QWORD PTR .LC639[rip]
	addsd	xmm0, QWORD PTR SYS_OFFSET$[rip]
	cvtsd2si	rax, xmm0
	movsd	QWORD PTR 0[rbp+rax*8], xmm5
	jmp	.L652
.L2348:
	cvtsd2si	edx, QWORD PTR 394896[rbp]
	cvtsd2si	eax, QWORD PTR 394904[rbp]
	mov	r13d, edx
	mov	ebp, eax
	cmp	dl, al
	ja	.L652
	mov	rbx, QWORD PTR fb_hPutPSet@GOTPCREL[rip]
	lea	r14, 208[rsp]
	lea	r12, 240[rsp]
.L2349:
	movzx	edi, r13b
	add	r13d, 1
	call	fb_UIntToStr@PLT
	mov	QWORD PTR 16[r14], 0
	pxor	xmm0, xmm0
	mov	rdi, r14
	mov	rcx, rax
	movaps	XMMWORD PTR [r14], xmm0
	mov	r8, -1
	mov	edx, 8
	lea	rsi, .LC797[rip]
	call	fb_StrConcat@PLT
	pxor	xmm0, xmm0
	mov	rdi, r12
	mov	QWORD PTR 16[r12], 0
	movaps	XMMWORD PTR [r12], xmm0
	mov	r8d, 5
	mov	rsi, rax
	lea	rcx, .LC794[rip]
	mov	rdx, -1
	call	fb_StrConcat@PLT
	mov	rsi, QWORD PTR RENDER$[rip]
	xor	edx, edx
	mov	rdi, rax
	call	fb_GfxBload@PLT
	mov	esi, 1
	mov	edi, 10
	call	fb_SleepEx@PLT
	push	0
	pxor	xmm1, xmm1
	mov	ecx, -65536
	push	0
	mov	r9d, -65536
	mov	edx, -65536
	movaps	xmm0, xmm1
	push	-1
	mov	rsi, QWORD PTR RENDER$[rip]
	mov	r8d, -65536
	push	rbx
	mov	rdi, QWORD PTR FGIMAGE$[rip]
	push	1
	push	0
	call	fb_GfxPut@PLT
	add	rsp, 48
	cmp	r13b, bpl
	jbe	.L2349
	jmp	.L652
.L2350:
	movsd	xmm0, QWORD PTR 394888[rbp]
	movsd	QWORD PTR 24[rsp], xmm1
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	nearbyint@PLT
	movsd	xmm1, QWORD PTR 24[rsp]
	movsd	xmm4, QWORD PTR 8[rsp]
	cvttsd2si	rax, xmm0
	movsd	xmm5, QWORD PTR 16[rsp]
	comisd	xmm0, xmm1
	jb	.L2352
	subsd	xmm0, xmm1
	cvttsd2si	rax, xmm0
	xor	rax, r12
.L2352:
	cmp	rax, 255
	ja	.L652
	jmp	[QWORD PTR 0[r13+rax*8]]
.L2354:
	mov	esi, 1
	lea	rdi, .LC228[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2355:
	mov	esi, 8
	lea	rdi, .LC798[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2356:
	mov	esi, 6
	lea	rdi, .LC799[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2357:
	mov	esi, 12
	lea	rdi, .LC800[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3370:
	mov	esi, 5
	lea	rdi, .LC1757[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3371:
	mov	esi, 4
	lea	rdi, .LC1758[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3372:
	mov	esi, 4
	lea	rdi, .LC1759[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3373:
	mov	esi, 4
	lea	rdi, .LC1760[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3374:
	mov	esi, 3
	lea	rdi, .LC1761[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3375:
	mov	esi, 6
	lea	rdi, .LC1762[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3376:
	mov	esi, 5
	lea	rdi, .LC1763[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3377:
	mov	esi, 8
	lea	rdi, .LC1764[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3378:
	mov	esi, 14
	lea	rdi, .LC1765[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3379:
	mov	esi, 17
	lea	rdi, .LC1766[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3380:
	mov	esi, 16
	lea	rdi, .LC1767[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3381:
	mov	esi, 7
	lea	rdi, .LC1768[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3382:
	mov	esi, 4
	lea	rdi, .LC1769[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3383:
	mov	esi, 4
	lea	rdi, .LC1770[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3384:
	mov	esi, 7
	lea	rdi, .LC1771[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3385:
	mov	esi, 9
	lea	rdi, .LC1772[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3386:
	mov	esi, 3
	lea	rdi, .LC1773[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3387:
	mov	esi, 8
	lea	rdi, .LC1774[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3388:
	mov	esi, 10
	lea	rdi, .LC1775[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3389:
	mov	esi, 11
	lea	rdi, .LC1776[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3390:
	mov	esi, 8
	lea	rdi, .LC1777[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3391:
	mov	esi, 3
	lea	rdi, .LC1778[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3392:
	mov	esi, 3
	lea	rdi, .LC1779[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3393:
	mov	esi, 3
	lea	rdi, .LC1780[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3394:
	mov	esi, 9
	lea	rdi, .LC1781[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3395:
	mov	esi, 10
	lea	rdi, .LC1782[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3396:
	mov	esi, 6
	lea	rdi, .LC1783[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3397:
	mov	esi, 12
	lea	rdi, .LC1784[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3398:
	mov	esi, 14
	lea	rdi, .LC1785[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3399:
	mov	esi, 5
	lea	rdi, .LC1786[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3400:
	mov	esi, 6
	lea	rdi, .LC1787[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3401:
	mov	esi, 8
	lea	rdi, .LC1788[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3402:
	mov	esi, 5
	lea	rdi, .LC1789[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3403:
	mov	esi, 7
	lea	rdi, .LC1790[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3404:
	mov	esi, 9
	lea	rdi, .LC1791[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3405:
	mov	esi, 17
	lea	rdi, .LC1792[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3406:
	mov	esi, 10
	lea	rdi, .LC1793[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3407:
	mov	esi, 7
	lea	rdi, .LC1794[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3408:
	mov	esi, 10
	lea	rdi, .LC1795[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3409:
	mov	esi, 4
	lea	rdi, .LC1796[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3410:
	mov	esi, 7
	lea	rdi, .LC1797[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3411:
	mov	esi, 10
	lea	rdi, .LC1798[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3412:
	mov	esi, 17
	lea	rdi, .LC1799[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3413:
	mov	esi, 8
	lea	rdi, .LC1800[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3414:
	mov	esi, 9
	lea	rdi, .LC1801[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3415:
	mov	esi, 4
	lea	rdi, .LC1802[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3416:
	mov	esi, 7
	lea	rdi, .LC1803[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3417:
	mov	esi, 5
	lea	rdi, .LC1804[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3418:
	mov	esi, 6
	lea	rdi, .LC1805[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3419:
	mov	esi, 9
	lea	rdi, .LC1806[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3420:
	mov	esi, 5
	lea	rdi, .LC1807[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3421:
	mov	esi, 3
	lea	rdi, .LC1808[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3422:
	mov	esi, 3
	lea	rdi, .LC1809[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3423:
	mov	esi, 1
	lea	rdi, .LC244[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3424:
	mov	esi, 16
	lea	rdi, .LC1810[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3425:
	mov	esi, 7
	lea	rdi, .LC1811[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3426:
	mov	esi, 7
	lea	rdi, .LC1812[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3427:
	mov	esi, 10
	lea	rdi, .LC1813[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3428:
	mov	esi, 5
	lea	rdi, .LC1814[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3429:
	mov	esi, 11
	lea	rdi, .LC1815[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3430:
	mov	esi, 12
	lea	rdi, .LC1816[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3431:
	mov	esi, 7
	lea	rdi, .LC1817[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3432:
	mov	esi, 5
	lea	rdi, .LC1818[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3433:
	mov	esi, 6
	lea	rdi, .LC1819[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3434:
	mov	esi, 1
	lea	rdi, .LC245[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3435:
	mov	esi, 6
	lea	rdi, .LC1820[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3436:
	mov	esi, 7
	lea	rdi, .LC1821[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3437:
	mov	esi, 9
	lea	rdi, .LC1822[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3438:
	mov	esi, 6
	lea	rdi, .LC1823[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3439:
	mov	esi, 7
	lea	rdi, .LC1824[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3440:
	mov	esi, 5
	lea	rdi, .LC1825[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3441:
	mov	esi, 9
	lea	rdi, .LC1826[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3442:
	mov	esi, 4
	lea	rdi, .LC1827[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3443:
	movsd	xmm0, QWORD PTR 394888[rbp]
	movsd	QWORD PTR 8[rsp], xmm1
	call	nearbyint@PLT
	movsd	xmm1, QWORD PTR 8[rsp]
	cvttsd2si	rax, xmm0
	comisd	xmm0, xmm1
	jb	.L3445
	subsd	xmm0, xmm1
	cvttsd2si	rax, xmm0
	btc	rax, 63
.L3445:
	test	rax, rax
	je	.L3446
	cmp	rax, 1
	je	.L6898
	cmp	rax, 2
	je	.L6899
	cmp	rax, 3
	je	.L6900
	cmp	rax, 4
	je	.L6901
	cmp	rax, 5
	je	.L6902
	cmp	rax, 6
	je	.L6903
	cmp	rax, 7
	je	.L6904
	cmp	rax, 8
	je	.L6905
	cmp	rax, 9
	je	.L6906
	cmp	rax, 10
	je	.L6907
	cmp	rax, 11
	je	.L6908
	cmp	rax, 12
	je	.L6909
	cmp	rax, 13
	je	.L6910
	cmp	rax, 14
	je	.L6911
	cmp	rax, 15
	je	.L6912
	cmp	rax, 16
	je	.L6913
	cmp	rax, 17
	je	.L6914
	cmp	rax, 18
	je	.L6915
	cmp	rax, 19
	je	.L6916
	cmp	rax, 20
	je	.L6917
	cmp	rax, 21
	je	.L6918
	cmp	rax, 22
	je	.L6919
	cmp	rax, 23
	je	.L6920
	cmp	rax, 24
	je	.L6921
	cmp	rax, 25
	je	.L6922
	cmp	rax, 26
	je	.L6923
	cmp	rax, 27
	je	.L6924
	cmp	rax, 28
	je	.L6925
	cmp	rax, 29
	je	.L6926
	cmp	rax, 30
	je	.L6927
	cmp	rax, 31
	je	.L6928
	cmp	rax, 32
	je	.L6929
	cmp	rax, 33
	je	.L6930
	cmp	rax, 34
	je	.L6931
	cmp	rax, 35
	je	.L6932
	cmp	rax, 36
	je	.L6933
	cmp	rax, 37
	je	.L6934
	cmp	rax, 38
	je	.L6935
	cmp	rax, 39
	je	.L6936
	cmp	rax, 40
	je	.L6937
	cmp	rax, 41
	je	.L6938
	cmp	rax, 42
	je	.L6939
	cmp	rax, 43
	je	.L6940
	cmp	rax, 44
	je	.L6941
	cmp	rax, 45
	je	.L6942
	cmp	rax, 46
	je	.L6943
	cmp	rax, 47
	je	.L6944
	cmp	rax, 48
	je	.L6945
	cmp	rax, 49
	je	.L6946
	cmp	rax, 50
	je	.L6947
	cmp	rax, 51
	je	.L6948
	cmp	rax, 52
	je	.L6949
	cmp	rax, 53
	je	.L6950
	cmp	rax, 54
	je	.L6951
	cmp	rax, 55
	je	.L6952
	cmp	rax, 56
	je	.L6953
	cmp	rax, 57
	je	.L6954
	cmp	rax, 58
	je	.L6955
	cmp	rax, 59
	je	.L6956
	cmp	rax, 60
	je	.L6957
	cmp	rax, 61
	je	.L6958
	cmp	rax, 62
	je	.L6959
	cmp	rax, 63
	je	.L6960
	cmp	rax, 65
	je	.L6961
	cmp	rax, 66
	je	.L6962
	cmp	rax, 67
	je	.L6963
	cmp	rax, 68
	je	.L6964
	cmp	rax, 69
	je	.L6965
	cmp	rax, 70
	je	.L6966
	cmp	rax, 71
	je	.L6967
	cmp	rax, 72
	je	.L6968
	cmp	rax, 73
	je	.L6969
	cmp	rax, 74
	je	.L6970
	cmp	rax, 75
	je	.L6971
	cmp	rax, 76
	je	.L6972
	cmp	rax, 77
	je	.L6973
	cmp	rax, 78
	je	.L6974
	cmp	rax, 79
	je	.L6975
	cmp	rax, 80
	je	.L6976
	cmp	rax, 81
	je	.L6977
	cmp	rax, 82
	je	.L6978
	cmp	rax, 83
	je	.L6979
	cmp	rax, 84
	je	.L6980
	cmp	rax, 95
	je	.L6981
	cmp	rax, 86
	je	.L6982
	cmp	rax, 87
	je	.L6983
	cmp	rax, 88
	je	.L6984
	cmp	rax, 89
	je	.L6985
	cmp	rax, 90
	je	.L6986
	cmp	rax, 91
	je	.L6987
	cmp	rax, 92
	je	.L6988
	cmp	rax, 93
	je	.L6989
	cmp	rax, 94
	je	.L6990
	cmp	rax, 96
	je	.L6991
	cmp	rax, 97
	je	.L6992
	cmp	rax, 98
	je	.L6993
	cmp	rax, 99
	je	.L6994
	cmp	rax, 100
	je	.L6995
	cmp	rax, 101
	je	.L6996
	cmp	rax, 102
	je	.L6997
	cmp	rax, 103
	je	.L6998
	cmp	rax, 104
	je	.L6999
	cmp	rax, 105
	je	.L7000
	cmp	rax, 106
	je	.L3657
	cmp	rax, 107
	je	.L7001
	cmp	rax, 108
	je	.L7002
	cmp	rax, 109
	je	.L7003
	cmp	rax, 110
	je	.L7004
	cmp	rax, 111
	je	.L3657
	cmp	rax, 112
	je	.L3665
	cmp	rax, 113
	je	.L7005
	cmp	rax, 114
	je	.L7006
	cmp	rax, 115
	je	.L7007
	cmp	rax, 116
	je	.L7008
	cmp	rax, 117
	je	.L7009
	cmp	rax, 118
	je	.L7010
	cmp	rax, 119
	je	.L7011
	cmp	rax, 120
	je	.L7012
	cmp	rax, 121
	je	.L7013
	cmp	rax, 122
	je	.L7014
	cmp	rax, 123
	je	.L7015
	cmp	rax, 124
	je	.L7016
	cmp	rax, 125
	je	.L7017
	cmp	rax, 126
	je	.L7018
	cmp	rax, 127
	je	.L7019
	cmp	rax, 128
	je	.L7020
	cmp	rax, 129
	je	.L7021
	cmp	rax, 130
	je	.L7022
	cmp	rax, 131
	je	.L7023
	cmp	rax, 132
	je	.L7024
	cmp	rax, 133
	je	.L7025
	cmp	rax, 134
	je	.L7026
	cmp	rax, 135
	je	.L7027
	cmp	rax, 136
	je	.L7028
	cmp	rax, 137
	je	.L7029
	cmp	rax, 138
	je	.L7030
	cmp	rax, 139
	je	.L7031
	cmp	rax, 140
	je	.L7032
	cmp	rax, 141
	je	.L7033
	cmp	rax, 142
	je	.L7034
	cmp	rax, 143
	je	.L7035
	cmp	rax, 144
	je	.L7036
	cmp	rax, 145
	je	.L7037
	cmp	rax, 146
	je	.L7038
	cmp	rax, 147
	je	.L7039
	cmp	rax, 148
	je	.L7040
	cmp	rax, 149
	je	.L7041
	cmp	rax, 150
	je	.L7042
	cmp	rax, 151
	je	.L7043
	cmp	rax, 152
	je	.L7044
	cmp	rax, 153
	je	.L7045
	cmp	rax, 154
	je	.L7046
	cmp	rax, 155
	je	.L7047
	cmp	rax, 156
	je	.L7048
	cmp	rax, 157
	je	.L7049
	cmp	rax, 158
	je	.L7050
	cmp	rax, 159
	je	.L7051
	cmp	rax, 160
	je	.L7052
	cmp	rax, 161
	je	.L7053
	cmp	rax, 162
	je	.L7054
	cmp	rax, 163
	je	.L7055
	cmp	rax, 164
	je	.L7056
	cmp	rax, 165
	je	.L7057
	cmp	rax, 166
	je	.L7058
	cmp	rax, 167
	je	.L7059
	cmp	rax, 169
	je	.L7060
	cmp	rax, 170
	je	.L7061
	cmp	rax, 171
	je	.L7062
	cmp	rax, 172
	je	.L7063
	cmp	rax, 173
	je	.L7064
	cmp	rax, 174
	je	.L7065
	cmp	rax, 175
	je	.L7066
	cmp	rax, 176
	je	.L7067
	cmp	rax, 177
	je	.L7068
	cmp	rax, 178
	je	.L7069
	cmp	rax, 179
	je	.L7070
	cmp	rax, 180
	je	.L7071
	cmp	rax, 181
	je	.L7072
	cmp	rax, 182
	je	.L7073
	cmp	rax, 183
	je	.L7074
	cmp	rax, 184
	je	.L7075
	cmp	rax, 185
	je	.L7076
	cmp	rax, 186
	je	.L7077
	cmp	rax, 187
	je	.L7078
	cmp	rax, 188
	je	.L7079
	cmp	rax, 189
	je	.L7080
	cmp	rax, 190
	je	.L7081
	cmp	rax, 191
	je	.L7082
	cmp	rax, 192
	je	.L7083
	cmp	rax, 193
	je	.L7084
	cmp	rax, 194
	je	.L7085
	cmp	rax, 195
	je	.L7086
	cmp	rax, 196
	je	.L7087
	cmp	rax, 197
	je	.L7088
	cmp	rax, 198
	je	.L7089
	cmp	rax, 199
	je	.L7090
	cmp	rax, 200
	je	.L7091
	cmp	rax, 201
	je	.L7092
	cmp	rax, 202
	je	.L7093
	cmp	rax, 203
	je	.L7094
	cmp	rax, 205
	je	.L7095
	cmp	rax, 206
	je	.L7096
	cmp	rax, 207
	je	.L7097
	cmp	rax, 208
	je	.L7098
	cmp	rax, 209
	je	.L7099
	cmp	rax, 210
	je	.L7100
	cmp	rax, 211
	je	.L7101
	cmp	rax, 212
	je	.L7102
	cmp	rax, 213
	je	.L7103
	cmp	rax, 214
	je	.L7104
	cmp	rax, 215
	je	.L7105
	cmp	rax, 216
	je	.L7106
	cmp	rax, 217
	je	.L7107
	cmp	rax, 218
	je	.L7108
	cmp	rax, 219
	je	.L7109
	cmp	rax, 220
	je	.L7110
	cmp	rax, 221
	je	.L7111
	cmp	rax, 222
	je	.L7112
	cmp	rax, 223
	je	.L7113
	cmp	rax, 224
	je	.L7114
	cmp	rax, 225
	je	.L7115
	cmp	rax, 226
	je	.L7116
	cmp	rax, 227
	je	.L7117
	cmp	rax, 228
	je	.L7118
	cmp	rax, 229
	je	.L7119
	cmp	rax, 230
	je	.L7120
	cmp	rax, 231
	je	.L7121
	cmp	rax, 232
	je	.L7122
	cmp	rax, 233
	je	.L7123
	cmp	rax, 234
	je	.L7124
	cmp	rax, 235
	je	.L7125
	cmp	rax, 236
	je	.L7126
	cmp	rax, 237
	je	.L7127
	cmp	rax, 238
	je	.L7128
	cmp	rax, 239
	je	.L7129
	cmp	rax, 240
	je	.L7130
	cmp	rax, 241
	je	.L7131
	cmp	rax, 242
	je	.L7132
	cmp	rax, 243
	je	.L7133
	cmp	rax, 244
	je	.L7134
	cmp	rax, 245
	je	.L7135
	cmp	rax, 246
	je	.L7136
	cmp	rax, 247
	je	.L7137
	cmp	rax, 248
	je	.L7138
	cmp	rax, 249
	je	.L7139
	cmp	rax, 250
	je	.L7140
	cmp	rax, 251
	je	.L7141
	cmp	rax, 252
	je	.L7142
	cmp	rax, 253
	je	.L7143
	cmp	rax, 254
	je	.L7144
	cmp	rax, 255
	jne	.L652
.L3946:
	mov	esi, 11
	lea	rdi, .LC2076[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3947:
	movsd	xmm0, QWORD PTR 394888[rbp]
	movsd	QWORD PTR 24[rsp], xmm1
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	nearbyint@PLT
	movsd	xmm1, QWORD PTR 24[rsp]
	movsd	xmm4, QWORD PTR 8[rsp]
	lea	rdi, tmp$2880.8[rip]
	cvttsd2si	rax, xmm0
	movsd	xmm5, QWORD PTR 16[rsp]
	comisd	xmm0, xmm1
	jb	.L3949
	subsd	xmm0, xmm1
	cvttsd2si	rax, xmm0
	xor	rax, r12
.L3949:
	cmp	rax, 161
	ja	.L652
	jmp	[QWORD PTR [rdi+rax*8]]
.L3958:
	mov	esi, 9
	lea	rdi, .LC2083[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3959:
	mov	esi, 7
	lea	rdi, .LC2084[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3960:
	mov	esi, 4
	lea	rdi, .LC2085[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3961:
	mov	esi, 4
	lea	rdi, .LC2086[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3962:
	mov	esi, 9
	lea	rdi, .LC2087[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3963:
	mov	esi, 5
	lea	rdi, .LC2088[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3964:
	mov	esi, 5
	lea	rdi, .LC2089[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3965:
	mov	esi, 4
	lea	rdi, .LC2090[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3966:
	mov	esi, 5
	lea	rdi, .LC2091[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3967:
	mov	esi, 5
	lea	rdi, .LC2092[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3968:
	mov	esi, 9
	lea	rdi, .LC2093[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3969:
	mov	esi, 8
	lea	rdi, .LC2094[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3970:
	mov	esi, 5
	lea	rdi, .LC2095[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3971:
	mov	esi, 2
	lea	rdi, .LC2096[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3972:
	mov	esi, 9
	lea	rdi, .LC2097[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3973:
	mov	esi, 3
	lea	rdi, .LC2098[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3974:
	mov	esi, 8
	lea	rdi, .LC2099[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3975:
	mov	esi, 5
	lea	rdi, .LC2100[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3976:
	mov	esi, 5
	lea	rdi, .LC2101[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3977:
	mov	esi, 8
	lea	rdi, .LC2102[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3978:
	mov	esi, 9
	lea	rdi, .LC2103[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3979:
	mov	esi, 10
	lea	rdi, .LC2104[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3980:
	mov	esi, 10
	lea	rdi, .LC2105[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3981:
	mov	esi, 9
	lea	rdi, .LC2106[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3982:
	mov	esi, 11
	lea	rdi, .LC2107[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3983:
	mov	esi, 8
	lea	rdi, .LC2108[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3984:
	mov	esi, 11
	lea	rdi, .LC2109[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3985:
	mov	esi, 9
	lea	rdi, .LC2110[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3986:
	mov	esi, 8
	lea	rdi, .LC2111[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3987:
	mov	esi, 13
	lea	rdi, .LC2112[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3988:
	mov	esi, 4
	lea	rdi, .LC2113[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3989:
	mov	esi, 6
	lea	rdi, .LC2114[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3990:
	mov	esi, 7
	lea	rdi, .LC2115[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3991:
	mov	esi, 5
	lea	rdi, .LC2116[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3992:
	mov	esi, 4
	lea	rdi, .LC2117[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3993:
	mov	esi, 4
	lea	rdi, .LC2118[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3994:
	mov	esi, 5
	lea	rdi, .LC2119[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3995:
	mov	esi, 3
	lea	rdi, .LC2120[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3996:
	mov	esi, 3
	lea	rdi, .LC2121[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3997:
	mov	esi, 10
	lea	rdi, .LC2122[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3998:
	mov	esi, 10
	lea	rdi, .LC2123[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3999:
	mov	esi, 4
	lea	rdi, .LC2124[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4000:
	mov	esi, 7
	lea	rdi, .LC2125[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4001:
	mov	esi, 1
	lea	rdi, .LC248[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4002:
	mov	esi, 8
	lea	rdi, .LC2126[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4003:
	mov	esi, 13
	lea	rdi, .LC2127[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4004:
	mov	esi, 8
	lea	rdi, .LC2128[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4005:
	mov	esi, 13
	lea	rdi, .LC2129[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4006:
	mov	esi, 8
	lea	rdi, .LC2130[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4007:
	mov	esi, 12
	lea	rdi, .LC2131[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4008:
	mov	esi, 10
	lea	rdi, .LC2132[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4009:
	mov	esi, 4
	lea	rdi, .LC2133[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4010:
	mov	esi, 16
	lea	rdi, .LC2134[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4011:
	mov	esi, 5
	lea	rdi, .LC2135[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4012:
	mov	esi, 7
	lea	rdi, .LC2136[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4013:
	mov	esi, 5
	lea	rdi, .LC2137[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4014:
	mov	esi, 4
	lea	rdi, .LC2138[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4015:
	mov	esi, 7
	lea	rdi, .LC2139[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4016:
	mov	esi, 6
	lea	rdi, .LC2140[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4017:
	mov	esi, 8
	lea	rdi, .LC2141[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4018:
	mov	esi, 8
	lea	rdi, .LC2142[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4019:
	mov	esi, 5
	lea	rdi, .LC2143[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4020:
	mov	esi, 2
	lea	rdi, .LC2144[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4021:
	mov	esi, 6
	lea	rdi, .LC2145[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4022:
	mov	esi, 4
	lea	rdi, .LC2146[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4023:
	mov	esi, 5
	lea	rdi, .LC2147[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4024:
	mov	esi, 8
	lea	rdi, .LC2148[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4025:
	mov	esi, 5
	lea	rdi, .LC2149[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4026:
	mov	esi, 10
	lea	rdi, .LC2150[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4027:
	mov	esi, 15
	lea	rdi, .LC2151[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4028:
	mov	esi, 10
	lea	rdi, .LC2152[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4029:
	mov	esi, 15
	lea	rdi, .LC2153[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4030:
	mov	esi, 14
	lea	rdi, .LC2154[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4031:
	mov	esi, 10
	lea	rdi, .LC2155[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4032:
	mov	esi, 20
	lea	rdi, .LC2156[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4033:
	mov	esi, 12
	lea	rdi, .LC2157[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4034:
	mov	esi, 3
	lea	rdi, .LC2158[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4035:
	mov	esi, 9
	lea	rdi, .LC2159[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4036:
	mov	esi, 9
	lea	rdi, .LC2160[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4037:
	mov	esi, 10
	lea	rdi, .LC2161[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3954:
	mov	esi, 4
	lea	rdi, .LC2079[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3955:
	mov	esi, 9
	lea	rdi, .LC2080[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3956:
	mov	esi, 4
	lea	rdi, .LC2081[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3957:
	mov	esi, 9
	lea	rdi, .LC2082[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3952:
	mov	esi, 3
	lea	rdi, .LC2077[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3953:
	mov	esi, 4
	lea	rdi, .LC2078[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2843:
	mov	esi, 3
	lea	rdi, .LC1276[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2844:
	mov	esi, 9
	lea	rdi, .LC1277[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2845:
	mov	esi, 7
	lea	rdi, .LC1278[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2846:
	mov	esi, 4
	lea	rdi, .LC1279[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2847:
	mov	esi, 4
	lea	rdi, .LC1280[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2848:
	mov	esi, 8
	lea	rdi, .LC1281[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2849:
	mov	esi, 5
	lea	rdi, .LC1282[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2850:
	mov	esi, 5
	lea	rdi, .LC1283[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2851:
	mov	esi, 5
	lea	rdi, .LC1284[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2852:
	mov	esi, 1
	lea	rdi, .LC234[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2853:
	mov	esi, 6
	lea	rdi, .LC1285[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2854:
	mov	esi, 8
	lea	rdi, .LC1286[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2855:
	mov	esi, 7
	lea	rdi, .LC1287[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2856:
	mov	esi, 3
	lea	rdi, .LC1288[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2857:
	mov	esi, 12
	lea	rdi, .LC1289[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2858:
	mov	esi, 7
	lea	rdi, .LC1290[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2859:
	mov	esi, 9
	lea	rdi, .LC1291[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2860:
	mov	esi, 10
	lea	rdi, .LC1292[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2861:
	mov	esi, 14
	lea	rdi, .LC1293[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2862:
	mov	esi, 3
	lea	rdi, .LC1294[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2863:
	mov	esi, 6
	lea	rdi, .LC1295[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2864:
	mov	esi, 12
	lea	rdi, .LC1296[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2865:
	mov	esi, 15
	lea	rdi, .LC1297[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2866:
	mov	esi, 6
	lea	rdi, .LC1298[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2867:
	mov	esi, 13
	lea	rdi, .LC1299[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2868:
	mov	esi, 15
	lea	rdi, .LC1300[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2869:
	mov	esi, 2
	lea	rdi, .LC1301[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2870:
	mov	esi, 6
	lea	rdi, .LC1302[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2871:
	movsd	xmm0, QWORD PTR 394888[rbp]
	movsd	QWORD PTR 24[rsp], xmm1
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	nearbyint@PLT
	movsd	xmm1, QWORD PTR 24[rsp]
	movsd	xmm4, QWORD PTR 8[rsp]
	cvttsd2si	rax, xmm0
	movsd	xmm5, QWORD PTR 16[rsp]
	comisd	xmm0, xmm1
	jb	.L2873
	subsd	xmm0, xmm1
	cvttsd2si	rax, xmm0
	xor	rax, r12
.L2873:
	cmp	rax, 10
	ja	.L652
	jmp	[QWORD PTR [r15+rax*8]]
.L2875:
	movsd	xmm0, QWORD PTR 394896[rbp]
	call	fb_DoubleToStr@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2876:
	movsd	xmm0, QWORD PTR 394896[rbp]
	call	fb_DoubleToStr@PLT
	mov	edx, 1
	mov	edi, 1
	add	rsp, 280
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2877:
	movsd	xmm0, QWORD PTR 394896[rbp]
	xorpd	xmm0, XMMWORD PTR .LC258[rip]
	call	fb_DoubleToStr@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2878:
	movsd	xmm0, QWORD PTR 394896[rbp]
	xorpd	xmm0, XMMWORD PTR .LC258[rip]
	call	fb_DoubleToStr@PLT
	mov	edx, 1
	mov	edi, 1
	add	rsp, 280
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2879:
	mov	esi, 2
	lea	rdi, .LC1303[rip]
	call	fb_StrAllocTempDescZEx@PLT
	mov	edx, 1
	mov	edi, 1
	add	rsp, 280
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2880:
	movsd	xmm0, QWORD PTR .LC1304[rip]
	mulsd	xmm0, QWORD PTR 394896[rbp]
	call	fb_DoubleToStr@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2881:
	movsd	xmm0, QWORD PTR .LC1304[rip]
	mulsd	xmm0, QWORD PTR 394896[rbp]
	call	fb_DoubleToStr@PLT
	mov	edx, 1
	mov	edi, 1
	add	rsp, 280
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2882:
	movsd	xmm0, QWORD PTR .LC1305[rip]
	mulsd	xmm0, QWORD PTR 394896[rbp]
	call	fb_DoubleToStr@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2883:
	movsd	xmm0, QWORD PTR .LC1305[rip]
	mulsd	xmm0, QWORD PTR 394896[rbp]
	call	fb_DoubleToStr@PLT
	mov	edx, 1
	mov	edi, 1
	add	rsp, 280
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2884:
	movsd	xmm0, QWORD PTR .LC1306[rip]
	mulsd	xmm0, QWORD PTR 394896[rbp]
	call	fb_DoubleToStr@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2885:
	movsd	xmm0, QWORD PTR .LC1306[rip]
	mulsd	xmm0, QWORD PTR 394896[rbp]
	call	fb_DoubleToStr@PLT
	mov	edx, 1
	mov	edi, 1
	add	rsp, 280
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2886:
	cvtsd2si	rsi, QWORD PTR 394896[rbp]
	mov	edi, 1
	xor	eax, eax
	call	fb_CHR@PLT
	xor	r8d, r8d
	or	rcx, -1
	or	rsi, -1
	mov	rdx, rax
	lea	rdi, MSG$[rip]
	call	fb_StrAssign@PLT
	xor	edx, edx
	mov	edi, 1
	lea	rsi, MSG$[rip]
	call	fb_PrintString@PLT
	add	rsp, 280
	xor	r8d, r8d
	mov	ecx, 1
	pop	rbx
	lea	rdx, .LC3[rip]
	pop	rbp
	or	rsi, -1
	pop	r12
	lea	rdi, MSG$[rip]
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_StrAssign@PLT
.L2887:
	cvtsd2si	rsi, QWORD PTR 394896[rbp]
	mov	edi, 1
	xor	eax, eax
	call	fb_CHR@PLT
	xor	r8d, r8d
	or	rcx, -1
	or	rsi, -1
	mov	rdx, rax
	lea	rdi, MSG$[rip]
	call	fb_StrAssign@PLT
	mov	edx, 1
	mov	edi, 1
	lea	rsi, MSG$[rip]
	call	fb_PrintString@PLT
	add	rsp, 280
	xor	r8d, r8d
	mov	ecx, 1
	pop	rbx
	lea	rdx, .LC3[rip]
	pop	rbp
	or	rsi, -1
	pop	r12
	lea	rdi, MSG$[rip]
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_StrAssign@PLT
.L2888:
	movsd	xmm0, QWORD PTR 394896[rbp]
	call	fb_DoubleToStr@PLT
	xor	r8d, r8d
	or	rcx, -1
	or	rsi, -1
	mov	rdx, rax
	lea	rdi, MSG$[rip]
	call	fb_StrAssign@PLT
	xor	edx, edx
	mov	edi, 1
	lea	rsi, MSG$[rip]
	call	fb_PrintString@PLT
	add	rsp, 280
	xor	r8d, r8d
	mov	ecx, 1
	pop	rbx
	lea	rdx, .LC3[rip]
	pop	rbp
	or	rsi, -1
	pop	r12
	lea	rdi, MSG$[rip]
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_StrAssign@PLT
.L2889:
	movsd	xmm0, QWORD PTR 394896[rbp]
	call	fb_DoubleToStr@PLT
	xor	r8d, r8d
	or	rcx, -1
	or	rsi, -1
	mov	rdx, rax
	lea	rdi, MSG$[rip]
	call	fb_StrAssign@PLT
	mov	edx, 1
	mov	edi, 1
	lea	rsi, MSG$[rip]
	call	fb_PrintString@PLT
	add	rsp, 280
	xor	r8d, r8d
	mov	ecx, 1
	pop	rbx
	lea	rdx, .LC3[rip]
	pop	rbp
	or	rsi, -1
	pop	r12
	lea	rdi, MSG$[rip]
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_StrAssign@PLT
.L2890:
	movsd	xmm0, QWORD PTR 394896[rbp]
	movsd	QWORD PTR 8[rsp], xmm1
	call	nearbyint@PLT
	movsd	xmm1, QWORD PTR 8[rsp]
	cvttsd2si	rdi, xmm0
	comisd	xmm0, xmm1
	jb	.L2892
	subsd	xmm0, xmm1
	cvttsd2si	rdi, xmm0
	btc	rdi, 63
.L2892:
	call	fb_HEX_l@PLT
	xor	r8d, r8d
	or	rcx, -1
	or	rsi, -1
	mov	rdx, rax
	lea	rdi, MSG$[rip]
	call	fb_StrAssign@PLT
	xor	edx, edx
	mov	edi, 1
	lea	rsi, MSG$[rip]
	call	fb_PrintString@PLT
	add	rsp, 280
	xor	r8d, r8d
	mov	ecx, 1
	pop	rbx
	lea	rdx, .LC3[rip]
	pop	rbp
	or	rsi, -1
	pop	r12
	lea	rdi, MSG$[rip]
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_StrAssign@PLT
.L2893:
	movsd	xmm0, QWORD PTR 394896[rbp]
	movsd	QWORD PTR 8[rsp], xmm1
	call	nearbyint@PLT
	movsd	xmm1, QWORD PTR 8[rsp]
	cvttsd2si	rdi, xmm0
	comisd	xmm0, xmm1
	jb	.L2895
	subsd	xmm0, xmm1
	cvttsd2si	rdi, xmm0
	btc	rdi, 63
.L2895:
	call	fb_HEX_l@PLT
	xor	r8d, r8d
	or	rcx, -1
	or	rsi, -1
	mov	rdx, rax
	lea	rdi, MSG$[rip]
	call	fb_StrAssign@PLT
	mov	edx, 1
	mov	edi, 1
	lea	rsi, MSG$[rip]
	call	fb_PrintString@PLT
	add	rsp, 280
	xor	r8d, r8d
	mov	ecx, 1
	pop	rbx
	lea	rdx, .LC3[rip]
	pop	rbp
	or	rsi, -1
	pop	r12
	lea	rdi, MSG$[rip]
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_StrAssign@PLT
.L2896:
	movsd	xmm0, QWORD PTR 394888[rbp]
	movsd	QWORD PTR 24[rsp], xmm1
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	nearbyint@PLT
	movsd	xmm1, QWORD PTR 24[rsp]
	movsd	xmm4, QWORD PTR 8[rsp]
	lea	rdx, tmp$2877.11[rip]
	cvttsd2si	rax, xmm0
	movsd	xmm5, QWORD PTR 16[rsp]
	comisd	xmm0, xmm1
	jb	.L2898
	subsd	xmm0, xmm1
	cvttsd2si	rax, xmm0
	xor	rax, r12
.L2898:
	cmp	rax, 22
	ja	.L652
	jmp	[QWORD PTR [rdx+rax*8]]
.L2900:
	mov	esi, 9
	lea	rdi, .LC1307[rip]
	xor	ebx, ebx
	call	fb_StrAllocTempDescZEx@PLT
	xor	esi, esi
	mov	rdi, rax
	call	fb_StrLcase2@PLT
	mov	ecx, 6
	or	r8, -1
	lea	r9, 208[rsp]
	mov	r10, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	edx, 11
	rep stosd
	lea	rsi, .LC1308[rip]
	mov	rcx, r10
	mov	rdi, r9
	call	fb_StrConcat@PLT
	mov	ecx, 6
	or	rdx, -1
	lea	r9, 240[rsp]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	r8d, 2
	rep stosd
	mov	rdi, r9
	lea	rcx, .LC1309[rip]
	call	fb_StrConcat@PLT
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString@PLT
	jmp	.L652
.L2901:
	mov	esi, 10
	lea	rdi, .LC1310[rip]
	xor	ebx, ebx
	call	fb_StrAllocTempDescZEx@PLT
	xor	esi, esi
	mov	rdi, rax
	call	fb_StrLcase2@PLT
	mov	ecx, 6
	or	r8, -1
	lea	r9, 208[rsp]
	mov	r10, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	edx, 11
	rep stosd
	lea	rsi, .LC1308[rip]
	mov	rcx, r10
	mov	rdi, r9
	call	fb_StrConcat@PLT
	mov	ecx, 6
	or	rdx, -1
	lea	r9, 240[rsp]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	r8d, 2
	rep stosd
	mov	rdi, r9
	lea	rcx, .LC1309[rip]
	call	fb_StrConcat@PLT
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString@PLT
	jmp	.L652
.L2902:
	mov	esi, 10
	lea	rdi, .LC1311[rip]
	xor	ebx, ebx
	call	fb_StrAllocTempDescZEx@PLT
	xor	esi, esi
	mov	rdi, rax
	call	fb_StrLcase2@PLT
	mov	ecx, 6
	or	r8, -1
	lea	r9, 208[rsp]
	mov	r10, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	edx, 11
	rep stosd
	lea	rsi, .LC1308[rip]
	mov	rcx, r10
	mov	rdi, r9
	call	fb_StrConcat@PLT
	mov	ecx, 6
	or	rdx, -1
	lea	r9, 240[rsp]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	r8d, 2
	rep stosd
	mov	rdi, r9
	lea	rcx, .LC1309[rip]
	call	fb_StrConcat@PLT
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString@PLT
	jmp	.L652
.L2903:
	mov	esi, 9
	lea	rdi, .LC1312[rip]
	xor	ebx, ebx
	call	fb_StrAllocTempDescZEx@PLT
	xor	esi, esi
	mov	rdi, rax
	call	fb_StrLcase2@PLT
	mov	ecx, 6
	or	r8, -1
	lea	r9, 208[rsp]
	mov	r10, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	edx, 11
	rep stosd
	lea	rsi, .LC1308[rip]
	mov	rcx, r10
	mov	rdi, r9
	call	fb_StrConcat@PLT
	mov	ecx, 6
	or	rdx, -1
	lea	r9, 240[rsp]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	r8d, 2
	rep stosd
	mov	rdi, r9
	lea	rcx, .LC1309[rip]
	call	fb_StrConcat@PLT
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString@PLT
	jmp	.L652
.L2904:
	mov	esi, 10
	lea	rdi, .LC1313[rip]
	xor	ebx, ebx
	call	fb_StrAllocTempDescZEx@PLT
	xor	esi, esi
	mov	rdi, rax
	call	fb_StrLcase2@PLT
	mov	ecx, 6
	or	r8, -1
	lea	r9, 208[rsp]
	mov	r10, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	edx, 11
	rep stosd
	lea	rsi, .LC1308[rip]
	mov	rcx, r10
	mov	rdi, r9
	call	fb_StrConcat@PLT
	mov	ecx, 6
	or	rdx, -1
	lea	r9, 240[rsp]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	r8d, 2
	rep stosd
	mov	rdi, r9
	lea	rcx, .LC1309[rip]
	call	fb_StrConcat@PLT
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString@PLT
	jmp	.L652
.L2905:
	mov	esi, 9
	lea	rdi, .LC1314[rip]
	xor	ebx, ebx
	call	fb_StrAllocTempDescZEx@PLT
	xor	esi, esi
	mov	rdi, rax
	call	fb_StrLcase2@PLT
	mov	ecx, 6
	or	r8, -1
	lea	r9, 208[rsp]
	mov	r10, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	edx, 11
	rep stosd
	lea	rsi, .LC1308[rip]
	mov	rcx, r10
	mov	rdi, r9
	call	fb_StrConcat@PLT
	mov	ecx, 6
	or	rdx, -1
	lea	r9, 240[rsp]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	r8d, 2
	rep stosd
	mov	rdi, r9
	lea	rcx, .LC1309[rip]
	call	fb_StrConcat@PLT
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString@PLT
	jmp	.L652
.L2906:
	mov	esi, 9
	lea	rdi, .LC1315[rip]
	xor	ebx, ebx
	call	fb_StrAllocTempDescZEx@PLT
	xor	esi, esi
	mov	rdi, rax
	call	fb_StrLcase2@PLT
	mov	ecx, 6
	or	r8, -1
	lea	r9, 208[rsp]
	mov	r10, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	edx, 11
	rep stosd
	lea	rsi, .LC1308[rip]
	mov	rcx, r10
	mov	rdi, r9
	call	fb_StrConcat@PLT
	mov	ecx, 6
	or	rdx, -1
	lea	r9, 240[rsp]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	r8d, 2
	rep stosd
	mov	rdi, r9
	lea	rcx, .LC1309[rip]
	call	fb_StrConcat@PLT
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString@PLT
	jmp	.L652
.L2907:
	mov	esi, 10
	lea	rdi, .LC1316[rip]
	xor	ebx, ebx
	call	fb_StrAllocTempDescZEx@PLT
	xor	esi, esi
	mov	rdi, rax
	call	fb_StrLcase2@PLT
	mov	ecx, 6
	or	r8, -1
	lea	r9, 208[rsp]
	mov	r10, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	edx, 11
	rep stosd
	lea	rsi, .LC1308[rip]
	mov	rcx, r10
	mov	rdi, r9
	call	fb_StrConcat@PLT
	mov	ecx, 6
	or	rdx, -1
	lea	r9, 240[rsp]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	r8d, 2
	rep stosd
	mov	rdi, r9
	lea	rcx, .LC1309[rip]
	call	fb_StrConcat@PLT
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString@PLT
	jmp	.L652
.L2908:
	mov	esi, 11
	lea	rdi, .LC1317[rip]
	xor	ebx, ebx
	call	fb_StrAllocTempDescZEx@PLT
	xor	esi, esi
	mov	rdi, rax
	call	fb_StrLcase2@PLT
	mov	ecx, 6
	or	r8, -1
	lea	r9, 208[rsp]
	mov	r10, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	edx, 11
	rep stosd
	lea	rsi, .LC1308[rip]
	mov	rcx, r10
	mov	rdi, r9
	call	fb_StrConcat@PLT
	mov	ecx, 6
	or	rdx, -1
	lea	r9, 240[rsp]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	r8d, 2
	rep stosd
	mov	rdi, r9
	lea	rcx, .LC1309[rip]
	call	fb_StrConcat@PLT
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString@PLT
	jmp	.L652
.L2909:
	mov	esi, 11
	lea	rdi, .LC1318[rip]
	xor	ebx, ebx
	call	fb_StrAllocTempDescZEx@PLT
	xor	esi, esi
	mov	rdi, rax
	call	fb_StrLcase2@PLT
	mov	ecx, 6
	or	r8, -1
	lea	r9, 208[rsp]
	mov	r10, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	edx, 11
	rep stosd
	lea	rsi, .LC1308[rip]
	mov	rcx, r10
	mov	rdi, r9
	call	fb_StrConcat@PLT
	mov	ecx, 6
	or	rdx, -1
	lea	r9, 240[rsp]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	r8d, 2
	rep stosd
	mov	rdi, r9
	lea	rcx, .LC1309[rip]
	call	fb_StrConcat@PLT
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString@PLT
	jmp	.L652
.L2910:
	mov	esi, 10
	lea	rdi, .LC1319[rip]
	xor	ebx, ebx
	call	fb_StrAllocTempDescZEx@PLT
	xor	esi, esi
	mov	rdi, rax
	call	fb_StrLcase2@PLT
	mov	ecx, 6
	or	r8, -1
	lea	r9, 208[rsp]
	mov	r10, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	edx, 11
	rep stosd
	lea	rsi, .LC1308[rip]
	mov	rcx, r10
	mov	rdi, r9
	call	fb_StrConcat@PLT
	mov	ecx, 6
	or	rdx, -1
	lea	r9, 240[rsp]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	r8d, 2
	rep stosd
	mov	rdi, r9
	lea	rcx, .LC1309[rip]
	call	fb_StrConcat@PLT
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString@PLT
	jmp	.L652
.L2911:
	mov	esi, 11
	lea	rdi, .LC1320[rip]
	xor	ebx, ebx
	call	fb_StrAllocTempDescZEx@PLT
	xor	esi, esi
	mov	rdi, rax
	call	fb_StrLcase2@PLT
	mov	ecx, 6
	or	r8, -1
	lea	r9, 208[rsp]
	mov	r10, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	edx, 11
	rep stosd
	lea	rsi, .LC1308[rip]
	mov	rcx, r10
	mov	rdi, r9
	call	fb_StrConcat@PLT
	mov	ecx, 6
	or	rdx, -1
	lea	r9, 240[rsp]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	r8d, 2
	rep stosd
	mov	rdi, r9
	lea	rcx, .LC1309[rip]
	call	fb_StrConcat@PLT
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString@PLT
	jmp	.L652
.L2912:
	mov	esi, 9
	lea	rdi, .LC1321[rip]
	xor	ebx, ebx
	call	fb_StrAllocTempDescZEx@PLT
	xor	esi, esi
	mov	rdi, rax
	call	fb_StrLcase2@PLT
	mov	ecx, 6
	or	r8, -1
	lea	r9, 208[rsp]
	mov	r10, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	edx, 11
	rep stosd
	lea	rsi, .LC1308[rip]
	mov	rcx, r10
	mov	rdi, r9
	call	fb_StrConcat@PLT
	mov	ecx, 6
	or	rdx, -1
	lea	r9, 240[rsp]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	r8d, 2
	rep stosd
	mov	rdi, r9
	lea	rcx, .LC1309[rip]
	call	fb_StrConcat@PLT
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString@PLT
	jmp	.L652
.L2913:
	mov	esi, 10
	lea	rdi, .LC1322[rip]
	xor	ebx, ebx
	call	fb_StrAllocTempDescZEx@PLT
	xor	esi, esi
	mov	rdi, rax
	call	fb_StrLcase2@PLT
	mov	ecx, 6
	or	r8, -1
	lea	r9, 208[rsp]
	mov	r10, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	edx, 11
	rep stosd
	lea	rsi, .LC1308[rip]
	mov	rcx, r10
	mov	rdi, r9
	call	fb_StrConcat@PLT
	mov	ecx, 6
	or	rdx, -1
	lea	r9, 240[rsp]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	r8d, 2
	rep stosd
	mov	rdi, r9
	lea	rcx, .LC1309[rip]
	call	fb_StrConcat@PLT
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString@PLT
	jmp	.L652
.L2914:
	mov	esi, 9
	lea	rdi, .LC1323[rip]
	xor	ebx, ebx
	call	fb_StrAllocTempDescZEx@PLT
	xor	esi, esi
	mov	rdi, rax
	call	fb_StrLcase2@PLT
	mov	ecx, 6
	or	r8, -1
	lea	r9, 208[rsp]
	mov	r10, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	edx, 11
	rep stosd
	lea	rsi, .LC1308[rip]
	mov	rcx, r10
	mov	rdi, r9
	call	fb_StrConcat@PLT
	mov	ecx, 6
	or	rdx, -1
	lea	r9, 240[rsp]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	r8d, 2
	rep stosd
	mov	rdi, r9
	lea	rcx, .LC1309[rip]
	call	fb_StrConcat@PLT
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString@PLT
	jmp	.L652
.L2915:
	mov	esi, 10
	lea	rdi, .LC1324[rip]
	xor	ebx, ebx
	call	fb_StrAllocTempDescZEx@PLT
	xor	esi, esi
	mov	rdi, rax
	call	fb_StrLcase2@PLT
	mov	ecx, 6
	or	r8, -1
	lea	r9, 208[rsp]
	mov	r10, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	edx, 11
	rep stosd
	lea	rsi, .LC1308[rip]
	mov	rcx, r10
	mov	rdi, r9
	call	fb_StrConcat@PLT
	mov	ecx, 6
	or	rdx, -1
	lea	r9, 240[rsp]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	r8d, 2
	rep stosd
	mov	rdi, r9
	lea	rcx, .LC1309[rip]
	call	fb_StrConcat@PLT
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString@PLT
	jmp	.L652
.L2916:
	mov	esi, 12
	lea	rdi, .LC1325[rip]
	xor	ebx, ebx
	call	fb_StrAllocTempDescZEx@PLT
	xor	esi, esi
	mov	rdi, rax
	call	fb_StrLcase2@PLT
	mov	ecx, 6
	or	r8, -1
	lea	r9, 208[rsp]
	mov	r10, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	edx, 11
	rep stosd
	lea	rsi, .LC1308[rip]
	mov	rcx, r10
	mov	rdi, r9
	call	fb_StrConcat@PLT
	mov	ecx, 6
	or	rdx, -1
	lea	r9, 240[rsp]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	r8d, 2
	rep stosd
	mov	rdi, r9
	lea	rcx, .LC1309[rip]
	call	fb_StrConcat@PLT
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString@PLT
	jmp	.L652
.L2917:
	mov	esi, 11
	lea	rdi, .LC1326[rip]
	xor	ebx, ebx
	call	fb_StrAllocTempDescZEx@PLT
	xor	esi, esi
	mov	rdi, rax
	call	fb_StrLcase2@PLT
	mov	ecx, 6
	or	r8, -1
	lea	r9, 208[rsp]
	mov	r10, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	edx, 11
	rep stosd
	lea	rsi, .LC1308[rip]
	mov	rcx, r10
	mov	rdi, r9
	call	fb_StrConcat@PLT
	mov	ecx, 6
	or	rdx, -1
	lea	r9, 240[rsp]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	r8d, 2
	rep stosd
	mov	rdi, r9
	lea	rcx, .LC1309[rip]
	call	fb_StrConcat@PLT
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString@PLT
	jmp	.L652
.L2918:
	mov	esi, 11
	lea	rdi, .LC1327[rip]
	xor	ebx, ebx
	call	fb_StrAllocTempDescZEx@PLT
	xor	esi, esi
	mov	rdi, rax
	call	fb_StrLcase2@PLT
	mov	ecx, 6
	or	r8, -1
	lea	r9, 208[rsp]
	mov	r10, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	edx, 11
	rep stosd
	lea	rsi, .LC1308[rip]
	mov	rcx, r10
	mov	rdi, r9
	call	fb_StrConcat@PLT
	mov	ecx, 6
	or	rdx, -1
	lea	r9, 240[rsp]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	r8d, 2
	rep stosd
	mov	rdi, r9
	lea	rcx, .LC1309[rip]
	call	fb_StrConcat@PLT
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString@PLT
	jmp	.L652
.L2919:
	mov	esi, 10
	lea	rdi, .LC1328[rip]
	xor	ebx, ebx
	call	fb_StrAllocTempDescZEx@PLT
	xor	esi, esi
	mov	rdi, rax
	call	fb_StrLcase2@PLT
	mov	ecx, 6
	or	r8, -1
	lea	r9, 208[rsp]
	mov	r10, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	edx, 11
	rep stosd
	lea	rsi, .LC1308[rip]
	mov	rcx, r10
	mov	rdi, r9
	call	fb_StrConcat@PLT
	mov	ecx, 6
	or	rdx, -1
	lea	r9, 240[rsp]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	r8d, 2
	rep stosd
	mov	rdi, r9
	lea	rcx, .LC1309[rip]
	call	fb_StrConcat@PLT
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString@PLT
	jmp	.L652
.L2920:
	mov	esi, 12
	lea	rdi, .LC1329[rip]
	xor	ebx, ebx
	call	fb_StrAllocTempDescZEx@PLT
	xor	esi, esi
	mov	rdi, rax
	call	fb_StrLcase2@PLT
	mov	ecx, 6
	or	r8, -1
	lea	r9, 208[rsp]
	mov	r10, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	edx, 11
	rep stosd
	lea	rsi, .LC1308[rip]
	mov	rcx, r10
	mov	rdi, r9
	call	fb_StrConcat@PLT
	mov	ecx, 6
	or	rdx, -1
	lea	r9, 240[rsp]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	r8d, 2
	rep stosd
	mov	rdi, r9
	lea	rcx, .LC1309[rip]
	call	fb_StrConcat@PLT
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString@PLT
	jmp	.L652
.L2921:
	mov	esi, 12
	lea	rdi, .LC1330[rip]
	xor	ebx, ebx
	call	fb_StrAllocTempDescZEx@PLT
	xor	esi, esi
	mov	rdi, rax
	call	fb_StrLcase2@PLT
	mov	ecx, 6
	or	r8, -1
	lea	r9, 208[rsp]
	mov	r10, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	edx, 11
	rep stosd
	lea	rsi, .LC1308[rip]
	mov	rcx, r10
	mov	rdi, r9
	call	fb_StrConcat@PLT
	mov	ecx, 6
	or	rdx, -1
	lea	r9, 240[rsp]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	r8d, 2
	rep stosd
	mov	rdi, r9
	lea	rcx, .LC1309[rip]
	call	fb_StrConcat@PLT
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString@PLT
	jmp	.L652
.L2922:
	mov	esi, 9
	lea	rdi, .LC1331[rip]
	xor	ebx, ebx
	call	fb_StrAllocTempDescZEx@PLT
	xor	esi, esi
	mov	rdi, rax
	call	fb_StrLcase2@PLT
	mov	ecx, 6
	or	r8, -1
	lea	r9, 208[rsp]
	mov	r10, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	edx, 11
	rep stosd
	lea	rsi, .LC1308[rip]
	mov	rcx, r10
	mov	rdi, r9
	call	fb_StrConcat@PLT
	mov	ecx, 6
	or	rdx, -1
	lea	r9, 240[rsp]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	r8d, 2
	rep stosd
	mov	rdi, r9
	lea	rcx, .LC1309[rip]
	call	fb_StrConcat@PLT
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString@PLT
	jmp	.L652
.L2923:
	movsd	xmm0, QWORD PTR 394888[rbp]
	movsd	QWORD PTR 24[rsp], xmm1
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	nearbyint@PLT
	movsd	xmm1, QWORD PTR 24[rsp]
	movsd	xmm4, QWORD PTR 8[rsp]
	lea	rcx, tmp$2878.10[rip]
	cvttsd2si	rax, xmm0
	movsd	xmm5, QWORD PTR 16[rsp]
	comisd	xmm0, xmm1
	jb	.L2925
	subsd	xmm0, xmm1
	cvttsd2si	rax, xmm0
	xor	rax, r12
.L2925:
	cmp	rax, 255
	ja	.L652
	jmp	[QWORD PTR [rcx+rax*8]]
.L2928:
	mov	esi, 5
	lea	rdi, .LC1332[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2929:
	mov	esi, 4
	lea	rdi, .LC1333[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2930:
	mov	esi, 8
	lea	rdi, .LC1334[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2931:
	mov	esi, 7
	lea	rdi, .LC1335[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2932:
	mov	esi, 4
	lea	rdi, .LC1336[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2933:
	mov	esi, 14
	lea	rdi, .LC1337[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2934:
	mov	esi, 8
	lea	rdi, .LC1338[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2935:
	mov	esi, 7
	lea	rdi, .LC1339[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2936:
	mov	esi, 5
	lea	rdi, .LC1340[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2937:
	mov	esi, 5
	lea	rdi, .LC1341[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2938:
	mov	esi, 8
	lea	rdi, .LC1342[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2939:
	mov	esi, 1
	lea	rdi, .LC235[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2940:
	mov	esi, 4
	lea	rdi, .LC1343[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2941:
	mov	esi, 4
	lea	rdi, .LC1344[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2942:
	mov	esi, 9
	lea	rdi, .LC1345[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2943:
	mov	esi, 6
	lea	rdi, .LC1346[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2944:
	mov	esi, 6
	lea	rdi, .LC1347[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2945:
	mov	esi, 7
	lea	rdi, .LC1348[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2946:
	mov	esi, 12
	lea	rdi, .LC1349[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2947:
	mov	esi, 17
	lea	rdi, .LC1350[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2948:
	mov	esi, 3
	lea	rdi, .LC1351[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2949:
	mov	esi, 7
	lea	rdi, .LC1352[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2950:
	mov	esi, 10
	lea	rdi, .LC1353[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2951:
	mov	esi, 9
	lea	rdi, .LC1354[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2952:
	mov	esi, 5
	lea	rdi, .LC1355[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2953:
	mov	esi, 10
	lea	rdi, .LC1356[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2954:
	mov	esi, 11
	lea	rdi, .LC1357[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2955:
	mov	esi, 7
	lea	rdi, .LC1358[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2956:
	mov	esi, 10
	lea	rdi, .LC1359[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2957:
	mov	esi, 9
	lea	rdi, .LC1360[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2958:
	mov	esi, 7
	lea	rdi, .LC1361[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2959:
	mov	esi, 6
	lea	rdi, .LC1362[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2960:
	mov	esi, 4
	lea	rdi, .LC1363[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2961:
	mov	esi, 5
	lea	rdi, .LC1364[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2962:
	mov	esi, 5
	lea	rdi, .LC1365[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2963:
	mov	esi, 5
	lea	rdi, .LC1366[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2964:
	mov	esi, 12
	lea	rdi, .LC1367[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2965:
	mov	esi, 5
	lea	rdi, .LC1368[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2966:
	mov	esi, 1
	lea	rdi, .LC236[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2967:
	mov	esi, 9
	lea	rdi, .LC774[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2968:
	mov	esi, 9
	lea	rdi, .LC1369[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2969:
	mov	esi, 9
	lea	rdi, .LC1370[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2970:
	mov	esi, 9
	lea	rdi, .LC1371[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2971:
	mov	esi, 18
	lea	rdi, .LC1372[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2972:
	mov	esi, 12
	lea	rdi, .LC1373[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2973:
	mov	esi, 5
	lea	rdi, .LC1374[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2974:
	mov	esi, 2
	lea	rdi, .LC1375[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2975:
	mov	esi, 5
	lea	rdi, .LC1376[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2976:
	mov	esi, 14
	lea	rdi, .LC1377[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2977:
	mov	esi, 2
	lea	rdi, .LC1378[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2978:
	mov	esi, 5
	lea	rdi, .LC1379[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2979:
	mov	esi, 6
	lea	rdi, .LC1380[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2980:
	mov	esi, 3
	lea	rdi, .LC1381[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2981:
	mov	esi, 6
	lea	rdi, .LC1382[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2982:
	mov	esi, 6
	lea	rdi, .LC1383[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2983:
	mov	esi, 10
	lea	rdi, .LC1384[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2984:
	mov	esi, 11
	lea	rdi, .LC775[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2985:
	mov	esi, 8
	lea	rdi, .LC1385[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2986:
	mov	esi, 13
	lea	rdi, .LC1386[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2987:
	mov	esi, 8
	lea	rdi, .LC1387[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2988:
	mov	esi, 13
	lea	rdi, .LC1388[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2989:
	mov	esi, 8
	lea	rdi, .LC1389[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2990:
	mov	esi, 12
	lea	rdi, .LC1390[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2991:
	mov	esi, 10
	lea	rdi, .LC1391[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2992:
	mov	esi, 5
	lea	rdi, .LC1392[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2993:
	mov	esi, 7
	lea	rdi, .LC1393[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2994:
	mov	esi, 12
	lea	rdi, .LC1394[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2995:
	mov	esi, 18
	lea	rdi, .LC1395[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2996:
	mov	esi, 13
	lea	rdi, .LC1396[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2997:
	mov	esi, 7
	lea	rdi, .LC1397[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2998:
	mov	esi, 12
	lea	rdi, .LC1398[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2999:
	mov	esi, 18
	lea	rdi, .LC1399[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3000:
	mov	esi, 13
	lea	rdi, .LC1400[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4038:
	mov	esi, 9
	lea	rdi, .LC2162[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4039:
	mov	esi, 4
	lea	rdi, .LC2163[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4040:
	mov	esi, 5
	lea	rdi, .LC2164[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4041:
	mov	esi, 3
	lea	rdi, .LC2165[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4042:
	mov	esi, 7
	lea	rdi, .LC2166[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4043:
	mov	esi, 4
	lea	rdi, .LC2167[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4044:
	mov	esi, 5
	lea	rdi, .LC2168[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4045:
	mov	esi, 5
	lea	rdi, .LC2169[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4046:
	mov	esi, 5
	lea	rdi, .LC2170[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4047:
	mov	esi, 5
	lea	rdi, .LC2171[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4048:
	mov	esi, 5
	lea	rdi, .LC2172[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4049:
	mov	esi, 10
	lea	rdi, .LC2173[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4050:
	mov	esi, 10
	lea	rdi, .LC2174[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4051:
	mov	esi, 10
	lea	rdi, .LC2175[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4052:
	mov	esi, 1
	lea	rdi, .LC249[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4053:
	mov	esi, 3
	lea	rdi, .LC2176[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4054:
	mov	esi, 5
	lea	rdi, .LC2177[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4055:
	mov	esi, 6
	lea	rdi, .LC2178[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4056:
	mov	esi, 3
	lea	rdi, .LC2179[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4057:
	mov	esi, 7
	lea	rdi, .LC2180[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4058:
	mov	esi, 8
	lea	rdi, .LC2181[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4059:
	mov	esi, 6
	lea	rdi, .LC2182[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4060:
	mov	esi, 7
	lea	rdi, .LC2183[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4061:
	mov	esi, 12
	lea	rdi, .LC2184[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4062:
	mov	esi, 6
	lea	rdi, .LC2185[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4063:
	mov	esi, 4
	lea	rdi, .LC2186[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4064:
	mov	esi, 4
	lea	rdi, .LC2187[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4065:
	mov	esi, 4
	lea	rdi, .LC2188[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4066:
	mov	esi, 4
	lea	rdi, .LC2189[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4067:
	mov	esi, 6
	lea	rdi, .LC2190[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4068:
	mov	esi, 7
	lea	rdi, .LC2191[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4069:
	mov	esi, 14
	lea	rdi, .LC2192[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4070:
	mov	esi, 4
	lea	rdi, .LC2193[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4071:
	mov	esi, 7
	lea	rdi, .LC2194[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4072:
	mov	esi, 7
	lea	rdi, .LC2195[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4073:
	mov	esi, 10
	lea	rdi, .LC2196[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4074:
	mov	esi, 4
	lea	rdi, .LC2197[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4075:
	mov	esi, 8
	lea	rdi, .LC2198[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4076:
	mov	esi, 7
	lea	rdi, .LC2199[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4077:
	mov	esi, 7
	lea	rdi, .LC2200[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4078:
	mov	esi, 4
	lea	rdi, .LC2201[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4079:
	mov	esi, 11
	lea	rdi, .LC2202[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4080:
	mov	esi, 1
	lea	rdi, .LC250[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4081:
	mov	esi, 4
	lea	rdi, .LC2203[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4082:
	mov	esi, 4
	lea	rdi, .LC2204[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4083:
	mov	esi, 7
	lea	rdi, .LC2205[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4084:
	mov	esi, 4
	lea	rdi, .LC2206[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4085:
	mov	esi, 11
	lea	rdi, .LC2207[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4086:
	mov	esi, 16
	lea	rdi, .LC2208[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4087:
	mov	esi, 5
	lea	rdi, .LC2209[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4088:
	mov	esi, 4
	lea	rdi, .LC2210[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4089:
	mov	esi, 4
	lea	rdi, .LC2211[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4090:
	mov	esi, 13
	lea	rdi, .LC2212[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4091:
	mov	esi, 5
	lea	rdi, .LC2213[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4092:
	mov	esi, 5
	lea	rdi, .LC2214[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4093:
	mov	esi, 5
	lea	rdi, .LC2215[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4094:
	mov	esi, 6
	lea	rdi, .LC2216[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4095:
	mov	esi, 4
	lea	rdi, .LC2217[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4096:
	mov	esi, 4
	lea	rdi, .LC2218[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4097:
	mov	esi, 5
	lea	rdi, .LC2219[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4098:
	mov	esi, 15
	lea	rdi, .LC2220[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4099:
	mov	esi, 8
	lea	rdi, .LC2221[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4100:
	mov	esi, 5
	lea	rdi, .LC2222[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4101:
	mov	esi, 10
	lea	rdi, .LC2223[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4102:
	mov	esi, 1
	lea	rdi, .LC251[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4103:
	mov	esi, 3
	lea	rdi, .LC2224[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4104:
	mov	esi, 8
	lea	rdi, .LC2225[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4105:
	mov	esi, 1
	lea	rdi, .LC252[rip]
	call	fb_StrAllocTempDescZEx@PLT
	mov	edx, 1
	mov	edi, 1
	add	rsp, 280
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4106:
	mov	esi, 4
	lea	rdi, .LC2226[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4107:
	mov	esi, 3
	lea	rdi, .LC2227[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4108:
	mov	esi, 5
	lea	rdi, .LC2228[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4109:
	mov	esi, 1
	lea	rdi, .LC253[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4110:
	mov	esi, 4
	lea	rdi, .LC2229[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4111:
	mov	esi, 6
	lea	rdi, .LC2230[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4112:
	mov	esi, 5
	lea	rdi, .LC2231[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3950:
	jmp	.L652
.L4113:
	movsd	xmm0, QWORD PTR 394888[rbp]
	movsd	QWORD PTR 24[rsp], xmm1
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	nearbyint@PLT
	movsd	xmm1, QWORD PTR 24[rsp]
	movsd	xmm4, QWORD PTR 8[rsp]
	lea	r8, tmp$2881.7[rip]
	cvttsd2si	rax, xmm0
	movsd	xmm5, QWORD PTR 16[rsp]
	comisd	xmm0, xmm1
	jb	.L4115
	subsd	xmm0, xmm1
	cvttsd2si	rax, xmm0
	xor	rax, r12
.L4115:
	cmp	rax, 255
	ja	.L652
	mov	rax, QWORD PTR [r8+rax*8]
	jmp	rax
.L4118:
	mov	esi, 6
	lea	rdi, .LC2232[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4119:
	mov	esi, 6
	lea	rdi, .LC2233[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4120:
	mov	esi, 8
	lea	rdi, .LC2234[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4121:
	mov	esi, 8
	lea	rdi, .LC2235[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4122:
	mov	esi, 8
	lea	rdi, .LC2236[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4123:
	mov	esi, 9
	lea	rdi, .LC2237[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4124:
	mov	esi, 11
	lea	rdi, .LC2238[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4125:
	mov	esi, 5
	lea	rdi, .LC2239[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4126:
	mov	esi, 6
	lea	rdi, .LC2240[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4127:
	mov	esi, 7
	lea	rdi, .LC2241[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4128:
	mov	esi, 5
	lea	rdi, .LC2242[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4129:
	mov	esi, 5
	lea	rdi, .LC2243[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4130:
	mov	esi, 5
	lea	rdi, .LC2244[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4131:
	mov	esi, 7
	lea	rdi, .LC2245[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4132:
	mov	esi, 7
	lea	rdi, .LC2246[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4133:
	mov	esi, 7
	lea	rdi, .LC2247[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4134:
	mov	esi, 7
	lea	rdi, .LC2248[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4135:
	mov	esi, 7
	lea	rdi, .LC2249[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4136:
	mov	esi, 7
	lea	rdi, .LC2250[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4137:
	mov	esi, 7
	lea	rdi, .LC2251[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4138:
	mov	esi, 7
	lea	rdi, .LC2252[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4139:
	mov	esi, 7
	lea	rdi, .LC2253[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4140:
	mov	esi, 9
	lea	rdi, .LC2254[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4141:
	mov	esi, 10
	lea	rdi, .LC2255[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4142:
	mov	esi, 10
	lea	rdi, .LC2256[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4143:
	mov	esi, 14
	lea	rdi, .LC2257[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4144:
	mov	esi, 15
	lea	rdi, .LC2258[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4145:
	mov	esi, 15
	lea	rdi, .LC2259[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4146:
	mov	esi, 6
	lea	rdi, .LC2260[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4147:
	mov	esi, 13
	lea	rdi, .LC1914[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4148:
	mov	esi, 8
	lea	rdi, .LC2261[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4149:
	mov	esi, 4
	lea	rdi, .LC1637[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4150:
	mov	esi, 6
	lea	rdi, .LC1638[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4151:
	mov	esi, 6
	lea	rdi, .LC1639[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4152:
	mov	esi, 5
	lea	rdi, .LC2262[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4153:
	mov	esi, 5
	lea	rdi, .LC2263[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4154:
	mov	esi, 10
	lea	rdi, .LC2264[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4155:
	mov	esi, 3
	lea	rdi, .LC2265[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4156:
	mov	esi, 5
	lea	rdi, .LC1626[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4157:
	mov	esi, 6
	lea	rdi, .LC2266[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4158:
	mov	esi, 7
	lea	rdi, .LC1628[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4159:
	mov	esi, 8
	lea	rdi, .LC1627[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4160:
	mov	esi, 7
	lea	rdi, .LC1641[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4161:
	mov	esi, 9
	lea	rdi, .LC2267[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4162:
	mov	esi, 6
	lea	rdi, .LC2268[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4163:
	mov	esi, 11
	lea	rdi, .LC2269[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4164:
	mov	esi, 3
	lea	rdi, .LC2270[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4165:
	mov	esi, 4
	lea	rdi, .LC2271[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4166:
	mov	esi, 5
	lea	rdi, .LC2272[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4167:
	mov	esi, 7
	lea	rdi, .LC2273[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4168:
	mov	esi, 12
	lea	rdi, .LC2274[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4169:
	mov	esi, 12
	lea	rdi, .LC2275[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4170:
	mov	esi, 12
	lea	rdi, .LC2276[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4171:
	mov	esi, 12
	lea	rdi, .LC2277[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4172:
	mov	esi, 12
	lea	rdi, .LC2278[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4173:
	mov	esi, 12
	lea	rdi, .LC2279[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4174:
	mov	esi, 12
	lea	rdi, .LC2280[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4175:
	mov	esi, 12
	lea	rdi, .LC2281[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4176:
	mov	esi, 5
	lea	rdi, .LC2282[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4177:
	mov	esi, 5
	lea	rdi, .LC2283[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4178:
	mov	esi, 5
	lea	rdi, .LC2284[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4179:
	mov	esi, 7
	lea	rdi, .LC2285[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4180:
	mov	esi, 7
	lea	rdi, .LC2286[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4181:
	mov	esi, 5
	lea	rdi, .LC2287[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4182:
	mov	esi, 4
	lea	rdi, .LC2288[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4183:
	mov	esi, 5
	lea	rdi, .LC2289[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4184:
	mov	esi, 8
	lea	rdi, .LC2290[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4185:
	mov	esi, 8
	lea	rdi, .LC2291[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4186:
	mov	esi, 4
	lea	rdi, .LC2292[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4187:
	mov	esi, 7
	lea	rdi, .LC1434[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4188:
	mov	esi, 11
	lea	rdi, .LC2293[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4189:
	mov	esi, 10
	lea	rdi, .LC2294[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4190:
	mov	esi, 8
	lea	rdi, .LC2295[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4191:
	mov	esi, 4
	lea	rdi, .LC2296[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4192:
	mov	esi, 8
	lea	rdi, .LC2297[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4193:
	mov	esi, 7
	lea	rdi, .LC2298[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4194:
	mov	esi, 8
	lea	rdi, .LC2299[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4195:
	mov	esi, 5
	lea	rdi, .LC2300[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4196:
	mov	esi, 5
	lea	rdi, .LC2301[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4197:
	mov	esi, 6
	lea	rdi, .LC2302[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4198:
	mov	esi, 8
	lea	rdi, .LC2303[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4199:
	mov	esi, 7
	lea	rdi, .LC2304[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4200:
	mov	esi, 9
	lea	rdi, .LC1417[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4201:
	mov	esi, 4
	lea	rdi, .LC2305[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4202:
	mov	esi, 5
	lea	rdi, .LC2306[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4203:
	mov	esi, 6
	lea	rdi, .LC2307[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4204:
	mov	esi, 5
	lea	rdi, .LC2308[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4205:
	mov	esi, 5
	lea	rdi, .LC2309[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4206:
	mov	esi, 7
	lea	rdi, .LC2310[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4207:
	mov	esi, 7
	lea	rdi, .LC1073[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4208:
	mov	esi, 8
	lea	rdi, .LC2311[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4209:
	mov	esi, 5
	lea	rdi, .LC2312[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4210:
	mov	esi, 7
	lea	rdi, .LC2313[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4211:
	mov	esi, 9
	lea	rdi, .LC2314[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4212:
	mov	esi, 6
	lea	rdi, .LC2315[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4213:
	mov	esi, 3
	lea	rdi, .LC2316[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4214:
	mov	esi, 6
	lea	rdi, .LC2317[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4215:
	mov	esi, 10
	lea	rdi, .LC2318[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4216:
	mov	esi, 6
	lea	rdi, .LC2319[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4217:
	mov	esi, 5
	lea	rdi, .LC2320[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4218:
	mov	esi, 9
	lea	rdi, .LC2321[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4219:
	mov	esi, 6
	lea	rdi, .LC2322[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4220:
	mov	esi, 6
	lea	rdi, .LC2323[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4221:
	mov	esi, 4
	lea	rdi, .LC1452[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4222:
	mov	esi, 6
	lea	rdi, .LC2324[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4223:
	mov	esi, 7
	lea	rdi, .LC2325[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4224:
	mov	esi, 7
	lea	rdi, .LC2326[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4225:
	mov	esi, 7
	lea	rdi, .LC2327[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4226:
	mov	esi, 6
	lea	rdi, .LC2328[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4227:
	mov	esi, 9
	lea	rdi, .LC2329[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4228:
	mov	esi, 3
	lea	rdi, .LC2330[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4229:
	mov	esi, 3
	lea	rdi, .LC2331[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4230:
	mov	esi, 2
	lea	rdi, .LC2332[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4231:
	mov	esi, 3
	lea	rdi, .LC2333[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4232:
	mov	esi, 3
	lea	rdi, .LC2334[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4233:
	mov	esi, 3
	lea	rdi, .LC2335[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4234:
	mov	esi, 3
	lea	rdi, .LC2336[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4235:
	mov	esi, 7
	lea	rdi, .LC2337[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4236:
	mov	esi, 9
	lea	rdi, .LC2338[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4237:
	mov	esi, 4
	lea	rdi, .LC2339[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4238:
	mov	esi, 5
	lea	rdi, .LC2340[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4239:
	mov	esi, 8
	lea	rdi, .LC2341[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4240:
	mov	esi, 8
	lea	rdi, .LC2342[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4241:
	mov	esi, 6
	lea	rdi, .LC2343[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4242:
	mov	esi, 10
	lea	rdi, .LC2344[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4243:
	mov	esi, 9
	lea	rdi, .LC2345[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4244:
	mov	esi, 11
	lea	rdi, .LC2346[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4245:
	mov	esi, 6
	lea	rdi, .LC2347[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4246:
	mov	esi, 5
	lea	rdi, .LC2348[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4247:
	mov	esi, 8
	lea	rdi, .LC2349[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4248:
	mov	esi, 8
	lea	rdi, .LC2350[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4249:
	mov	esi, 7
	lea	rdi, .LC2351[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4250:
	mov	esi, 7
	lea	rdi, .LC2352[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4251:
	mov	esi, 7
	lea	rdi, .LC2353[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4252:
	mov	esi, 6
	lea	rdi, .LC2354[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4253:
	mov	esi, 2
	lea	rdi, .LC2355[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4254:
	mov	esi, 8
	lea	rdi, .LC2356[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4255:
	mov	esi, 5
	lea	rdi, .LC2357[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4256:
	mov	esi, 4
	lea	rdi, .LC2358[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4257:
	mov	esi, 5
	lea	rdi, .LC2359[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4258:
	mov	esi, 10
	lea	rdi, .LC2360[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4259:
	mov	esi, 6
	lea	rdi, .LC2361[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4260:
	mov	esi, 10
	lea	rdi, .LC2362[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4261:
	mov	esi, 5
	lea	rdi, .LC2363[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4262:
	mov	esi, 9
	lea	rdi, .LC2364[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4263:
	mov	esi, 7
	lea	rdi, .LC2365[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4264:
	mov	esi, 7
	lea	rdi, .LC2366[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4265:
	mov	esi, 10
	lea	rdi, .LC2367[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4266:
	mov	esi, 5
	lea	rdi, .LC2368[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4267:
	mov	esi, 7
	lea	rdi, .LC2369[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4268:
	mov	esi, 5
	lea	rdi, .LC2370[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4269:
	mov	esi, 5
	lea	rdi, .LC2371[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4270:
	mov	esi, 3
	lea	rdi, .LC2372[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4271:
	mov	esi, 5
	lea	rdi, .LC2228[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4272:
	mov	esi, 6
	lea	rdi, .LC2373[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4273:
	mov	esi, 5
	lea	rdi, .LC1242[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4274:
	mov	esi, 10
	lea	rdi, .LC2374[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4275:
	mov	esi, 8
	lea	rdi, .LC2375[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4276:
	mov	esi, 6
	lea	rdi, .LC2376[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4277:
	mov	esi, 9
	lea	rdi, .LC2377[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4278:
	mov	esi, 8
	lea	rdi, .LC2378[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4279:
	mov	esi, 7
	lea	rdi, .LC2379[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4280:
	mov	esi, 10
	lea	rdi, .LC2380[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4281:
	mov	esi, 3
	lea	rdi, .LC2381[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4282:
	mov	esi, 3
	lea	rdi, .LC2382[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4283:
	mov	esi, 8
	lea	rdi, .LC2383[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4284:
	mov	esi, 6
	lea	rdi, .LC2384[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4285:
	mov	esi, 5
	lea	rdi, .LC2385[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4286:
	mov	esi, 5
	lea	rdi, .LC2386[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4287:
	mov	esi, 9
	lea	rdi, .LC2387[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4288:
	mov	esi, 5
	lea	rdi, .LC2388[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4289:
	mov	esi, 5
	lea	rdi, .LC2389[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4290:
	mov	esi, 4
	lea	rdi, .LC2390[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4291:
	mov	esi, 8
	lea	rdi, .LC2391[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4292:
	mov	esi, 7
	lea	rdi, .LC2392[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4293:
	mov	esi, 13
	lea	rdi, .LC2393[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4294:
	mov	esi, 10
	lea	rdi, .LC2394[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4295:
	mov	esi, 11
	lea	rdi, .LC2395[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4296:
	mov	esi, 10
	lea	rdi, .LC2396[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3001:
	mov	esi, 7
	lea	rdi, .LC1401[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3002:
	mov	esi, 11
	lea	rdi, .LC1402[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3003:
	mov	esi, 9
	lea	rdi, .LC1403[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3004:
	mov	esi, 12
	lea	rdi, .LC1404[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3005:
	mov	esi, 9
	lea	rdi, .LC1405[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3006:
	mov	esi, 13
	lea	rdi, .LC1406[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3007:
	mov	esi, 11
	lea	rdi, .LC1407[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3008:
	mov	esi, 6
	lea	rdi, .LC1408[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3009:
	mov	esi, 3
	lea	rdi, .LC1409[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3010:
	mov	esi, 14
	lea	rdi, .LC1410[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3011:
	mov	esi, 6
	lea	rdi, .LC1411[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3012:
	mov	esi, 2
	lea	rdi, .LC1412[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3013:
	mov	esi, 7
	lea	rdi, .LC1413[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3014:
	mov	esi, 5
	lea	rdi, .LC1414[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3015:
	mov	esi, 7
	lea	rdi, .LC1415[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3016:
	mov	esi, 8
	lea	rdi, .LC1416[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3017:
	mov	esi, 9
	lea	rdi, .LC1417[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3018:
	mov	esi, 8
	lea	rdi, .LC1418[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3019:
	mov	esi, 7
	lea	rdi, .LC1419[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3020:
	mov	esi, 13
	lea	rdi, .LC1420[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3021:
	mov	esi, 13
	lea	rdi, .LC1421[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3022:
	mov	esi, 14
	lea	rdi, .LC1422[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3023:
	mov	esi, 10
	lea	rdi, .LC1423[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3024:
	mov	esi, 8
	lea	rdi, .LC1424[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3025:
	mov	esi, 5
	lea	rdi, .LC1425[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3026:
	mov	esi, 6
	lea	rdi, .LC1426[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3027:
	mov	esi, 14
	lea	rdi, .LC1427[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3028:
	mov	esi, 9
	lea	rdi, .LC1428[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3029:
	mov	esi, 5
	lea	rdi, .LC1429[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3030:
	mov	esi, 5
	lea	rdi, .LC1430[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3031:
	mov	esi, 3
	lea	rdi, .LC1431[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3032:
	mov	esi, 5
	lea	rdi, .LC1432[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3033:
	mov	esi, 12
	lea	rdi, .LC1433[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3034:
	mov	esi, 7
	lea	rdi, .LC1434[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3035:
	mov	esi, 6
	lea	rdi, .LC1435[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3036:
	mov	esi, 6
	lea	rdi, .LC1436[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3037:
	mov	esi, 13
	lea	rdi, .LC1437[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3038:
	mov	esi, 7
	lea	rdi, .LC1438[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3039:
	mov	esi, 12
	lea	rdi, .LC1439[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3040:
	mov	esi, 5
	lea	rdi, .LC1440[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3041:
	mov	esi, 3
	lea	rdi, .LC1441[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3042:
	mov	esi, 7
	lea	rdi, .LC1442[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3043:
	mov	esi, 9
	lea	rdi, .LC1443[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3044:
	mov	esi, 8
	lea	rdi, .LC1444[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3045:
	mov	esi, 16
	lea	rdi, .LC1445[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3046:
	mov	esi, 8
	lea	rdi, .LC1446[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3047:
	mov	esi, 11
	lea	rdi, .LC1447[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3048:
	mov	esi, 9
	lea	rdi, .LC1448[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3049:
	mov	esi, 12
	lea	rdi, .LC1449[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3050:
	mov	esi, 8
	lea	rdi, .LC1450[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3051:
	mov	esi, 9
	lea	rdi, .LC1451[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3052:
	mov	esi, 4
	lea	rdi, .LC1452[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3053:
	mov	esi, 9
	lea	rdi, .LC1453[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3054:
	mov	esi, 7
	lea	rdi, .LC1454[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3055:
	mov	esi, 9
	lea	rdi, .LC1455[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3056:
	mov	esi, 7
	lea	rdi, .LC1456[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3057:
	mov	esi, 10
	lea	rdi, .LC1457[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3058:
	mov	esi, 6
	lea	rdi, .LC1458[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3059:
	mov	esi, 3
	lea	rdi, .LC1459[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3060:
	mov	esi, 11
	lea	rdi, .LC1460[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3061:
	mov	esi, 5
	lea	rdi, .LC1461[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3062:
	mov	esi, 3
	lea	rdi, .LC1462[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3063:
	mov	esi, 12
	lea	rdi, .LC1463[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3064:
	mov	esi, 11
	lea	rdi, .LC777[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3065:
	mov	esi, 4
	lea	rdi, .LC1464[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3066:
	mov	esi, 15
	lea	rdi, .LC1465[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3067:
	mov	esi, 2
	lea	rdi, .LC1466[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3068:
	mov	esi, 10
	lea	rdi, .LC1467[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3069:
	mov	esi, 15
	lea	rdi, .LC1468[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3070:
	mov	esi, 10
	lea	rdi, .LC1469[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3071:
	mov	esi, 15
	lea	rdi, .LC1470[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3072:
	mov	esi, 14
	lea	rdi, .LC1471[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3073:
	mov	esi, 10
	lea	rdi, .LC1472[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3074:
	mov	esi, 11
	lea	rdi, .LC1473[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3075:
	mov	esi, 5
	lea	rdi, .LC1474[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3076:
	mov	esi, 12
	lea	rdi, .LC1475[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3077:
	mov	esi, 11
	lea	rdi, .LC1476[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3078:
	mov	esi, 10
	lea	rdi, .LC1477[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3079:
	mov	esi, 8
	lea	rdi, .LC1478[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3080:
	mov	esi, 5
	lea	rdi, .LC1479[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3081:
	mov	esi, 5
	lea	rdi, .LC1480[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3082:
	mov	esi, 10
	lea	rdi, .LC1481[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3083:
	mov	esi, 9
	lea	rdi, .LC1482[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3084:
	mov	esi, 7
	lea	rdi, .LC1483[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3085:
	mov	esi, 6
	lea	rdi, .LC1484[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3086:
	mov	esi, 5
	lea	rdi, .LC1485[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3087:
	mov	esi, 10
	lea	rdi, .LC1486[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3088:
	mov	esi, 5
	lea	rdi, .LC1487[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3089:
	mov	esi, 5
	lea	rdi, .LC1488[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3090:
	mov	esi, 5
	lea	rdi, .LC1489[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3091:
	mov	esi, 1
	lea	rdi, .LC237[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3092:
	mov	esi, 6
	lea	rdi, .LC1490[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3093:
	mov	esi, 4
	lea	rdi, .LC1491[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3094:
	mov	esi, 4
	lea	rdi, .LC1492[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3095:
	mov	esi, 5
	lea	rdi, .LC1493[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3096:
	mov	esi, 13
	lea	rdi, .LC1494[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3097:
	mov	esi, 4
	lea	rdi, .LC1495[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3098:
	mov	esi, 9
	lea	rdi, .LC1496[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3099:
	mov	esi, 1
	lea	rdi, .LC238[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3100:
	mov	esi, 5
	lea	rdi, .LC1497[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3101:
	mov	esi, 3
	lea	rdi, .LC1498[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3102:
	mov	esi, 4
	lea	rdi, .LC1499[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3103:
	mov	esi, 1
	lea	rdi, .LC239[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3104:
	mov	esi, 5
	lea	rdi, .LC1500[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3105:
	mov	esi, 6
	lea	rdi, .LC1501[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3106:
	mov	esi, 4
	lea	rdi, .LC1502[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3107:
	mov	esi, 5
	lea	rdi, .LC1503[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3108:
	mov	esi, 6
	lea	rdi, .LC1504[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3109:
	mov	esi, 5
	lea	rdi, .LC1505[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3110:
	mov	esi, 7
	lea	rdi, .LC1506[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3111:
	mov	esi, 5
	lea	rdi, .LC1507[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3112:
	mov	esi, 4
	lea	rdi, .LC1508[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3113:
	jmp	.L652
.L3114:
	mov	esi, 3
	lea	rdi, .LC1509[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3115:
	mov	esi, 6
	lea	rdi, .LC1510[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3116:
	mov	esi, 7
	lea	rdi, .LC1511[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3117:
	mov	esi, 4
	lea	rdi, .LC1512[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3118:
	mov	esi, 6
	lea	rdi, .LC1513[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3119:
	mov	esi, 3
	lea	rdi, .LC1514[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3120:
	mov	esi, 8
	lea	rdi, .LC1515[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3121:
	mov	esi, 11
	lea	rdi, .LC1516[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3122:
	mov	esi, 12
	lea	rdi, .LC1517[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3123:
	mov	esi, 4
	lea	rdi, .LC1518[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3124:
	mov	esi, 5
	lea	rdi, .LC1519[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3125:
	mov	esi, 6
	lea	rdi, .LC1520[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3126:
	mov	esi, 6
	lea	rdi, .LC1521[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3127:
	mov	esi, 14
	lea	rdi, .LC1522[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3128:
	mov	esi, 4
	lea	rdi, .LC1523[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3129:
	mov	esi, 13
	lea	rdi, .LC1524[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3130:
	mov	esi, 10
	lea	rdi, .LC1525[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3131:
	mov	esi, 12
	lea	rdi, .LC1526[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3132:
	mov	esi, 12
	lea	rdi, .LC1527[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3133:
	mov	esi, 5
	lea	rdi, .LC1528[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3134:
	mov	esi, 7
	lea	rdi, .LC1529[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3135:
	mov	esi, 4
	lea	rdi, .LC1530[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3136:
	mov	esi, 5
	lea	rdi, .LC1531[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3137:
	mov	esi, 2
	lea	rdi, .LC1532[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3138:
	mov	esi, 4
	lea	rdi, .LC1533[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3139:
	mov	esi, 9
	lea	rdi, .LC1534[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3140:
	mov	esi, 3
	lea	rdi, .LC1535[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3141:
	mov	esi, 5
	lea	rdi, .LC1536[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3142:
	mov	esi, 13
	lea	rdi, .LC1537[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3143:
	mov	esi, 6
	lea	rdi, .LC1538[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3144:
	mov	esi, 8
	lea	rdi, .LC1539[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3145:
	mov	esi, 4
	lea	rdi, .LC1540[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3146:
	mov	esi, 3
	lea	rdi, .LC1541[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3147:
	mov	esi, 3
	lea	rdi, .LC1542[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3148:
	mov	esi, 5
	lea	rdi, .LC1543[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3149:
	mov	esi, 4
	lea	rdi, .LC1544[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3150:
	mov	esi, 4
	lea	rdi, .LC1545[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3151:
	mov	esi, 7
	lea	rdi, .LC1546[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3152:
	mov	esi, 4
	lea	rdi, .LC1547[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3153:
	mov	esi, 7
	lea	rdi, .LC1548[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3154:
	mov	esi, 10
	lea	rdi, .LC1549[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3155:
	mov	esi, 4
	lea	rdi, .LC1550[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3156:
	mov	esi, 5
	lea	rdi, .LC1551[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3157:
	mov	esi, 8
	lea	rdi, .LC1552[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3158:
	mov	esi, 16
	lea	rdi, .LC1553[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3159:
	mov	esi, 4
	lea	rdi, .LC1554[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3160:
	mov	esi, 9
	lea	rdi, .LC1555[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3161:
	mov	esi, 10
	lea	rdi, .LC1556[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3162:
	mov	esi, 4
	lea	rdi, .LC1557[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3163:
	mov	esi, 4
	lea	rdi, .LC1558[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3164:
	mov	esi, 6
	lea	rdi, .LC1559[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3165:
	mov	esi, 4
	lea	rdi, .LC1560[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3166:
	mov	esi, 9
	lea	rdi, .LC1561[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3167:
	mov	esi, 1
	lea	rdi, .LC240[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3168:
	mov	esi, 6
	lea	rdi, .LC1562[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3169:
	mov	esi, 10
	lea	rdi, .LC1563[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3170:
	mov	esi, 6
	lea	rdi, .LC1564[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3171:
	mov	esi, 5
	lea	rdi, .LC1565[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3172:
	mov	esi, 6
	lea	rdi, .LC1566[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3173:
	mov	esi, 4
	lea	rdi, .LC1567[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3174:
	mov	esi, 10
	lea	rdi, .LC1568[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3175:
	mov	esi, 9
	lea	rdi, .LC1569[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3176:
	mov	esi, 12
	lea	rdi, .LC1570[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3177:
	mov	esi, 6
	lea	rdi, .LC1571[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3178:
	mov	esi, 3
	lea	rdi, .LC1572[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3179:
	mov	esi, 8
	lea	rdi, .LC1573[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3180:
	mov	esi, 6
	lea	rdi, .LC1574[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3181:
	mov	esi, 4
	lea	rdi, .LC1575[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3182:
	mov	esi, 6
	lea	rdi, .LC1576[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2926:
	jmp	.L652
.L3183:
	movsd	xmm0, QWORD PTR 394888[rbp]
	movsd	QWORD PTR 24[rsp], xmm1
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	nearbyint@PLT
	movsd	xmm1, QWORD PTR 24[rsp]
	movsd	xmm4, QWORD PTR 8[rsp]
	lea	rsi, tmp$2879.9[rip]
	cvttsd2si	rax, xmm0
	movsd	xmm5, QWORD PTR 16[rsp]
	comisd	xmm0, xmm1
	jb	.L3185
	subsd	xmm0, xmm1
	cvttsd2si	rax, xmm0
	xor	rax, r12
.L3185:
	cmp	rax, 255
	ja	.L652
	jmp	[QWORD PTR [rsi+rax*8]]
.L3187:
	mov	esi, 6
	lea	rdi, .LC1577[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3188:
	mov	esi, 6
	lea	rdi, .LC1578[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3189:
	mov	esi, 4
	lea	rdi, .LC1579[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3190:
	mov	esi, 6
	lea	rdi, .LC1580[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3191:
	mov	esi, 6
	lea	rdi, .LC1581[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3192:
	mov	esi, 6
	lea	rdi, .LC1582[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3193:
	mov	esi, 4
	lea	rdi, .LC1583[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3194:
	mov	esi, 6
	lea	rdi, .LC1584[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3195:
	mov	esi, 6
	lea	rdi, .LC1585[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3196:
	mov	esi, 6
	lea	rdi, .LC1586[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3197:
	mov	esi, 8
	lea	rdi, .LC1587[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3198:
	mov	esi, 12
	lea	rdi, .LC1588[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3199:
	mov	esi, 6
	lea	rdi, .LC1589[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3200:
	mov	esi, 3
	lea	rdi, .LC1590[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3201:
	mov	esi, 10
	lea	rdi, .LC1591[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3202:
	mov	esi, 12
	lea	rdi, .LC1592[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3203:
	mov	esi, 17
	lea	rdi, .LC1593[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3204:
	mov	esi, 13
	lea	rdi, .LC1594[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3205:
	mov	esi, 10
	lea	rdi, .LC1595[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3206:
	mov	esi, 9
	lea	rdi, .LC1596[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3207:
	mov	esi, 15
	lea	rdi, .LC1597[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3208:
	mov	esi, 3
	lea	rdi, .LC1598[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3209:
	mov	esi, 5
	lea	rdi, .LC1599[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3210:
	mov	esi, 17
	lea	rdi, .LC1600[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3211:
	mov	esi, 17
	lea	rdi, .LC1601[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3212:
	mov	esi, 7
	lea	rdi, .LC1602[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3213:
	mov	esi, 6
	lea	rdi, .LC1603[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3214:
	mov	esi, 11
	lea	rdi, .LC1604[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3215:
	mov	esi, 5
	lea	rdi, .LC1605[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3216:
	mov	esi, 4
	lea	rdi, .LC1606[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3217:
	mov	esi, 5
	lea	rdi, .LC1607[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3218:
	mov	esi, 7
	lea	rdi, .LC1608[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3219:
	mov	esi, 9
	lea	rdi, .LC1609[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3220:
	mov	esi, 9
	lea	rdi, .LC1610[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3221:
	mov	esi, 8
	lea	rdi, .LC1611[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3222:
	mov	esi, 6
	lea	rdi, .LC1612[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3223:
	mov	esi, 9
	lea	rdi, .LC1613[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3224:
	mov	esi, 6
	lea	rdi, .LC1614[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3225:
	mov	esi, 10
	lea	rdi, .LC1615[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3226:
	mov	esi, 3
	lea	rdi, .LC1616[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3227:
	mov	esi, 3
	lea	rdi, .LC1617[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3228:
	mov	esi, 10
	lea	rdi, .LC1618[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3229:
	mov	esi, 13
	lea	rdi, .LC1619[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3230:
	mov	esi, 6
	lea	rdi, .LC1620[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3231:
	mov	esi, 3
	lea	rdi, .LC1621[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3232:
	mov	esi, 5
	lea	rdi, .LC1622[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3233:
	mov	esi, 3
	lea	rdi, .LC1623[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3234:
	mov	esi, 3
	lea	rdi, .LC1624[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3235:
	mov	esi, 4
	lea	rdi, .LC1625[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3236:
	mov	esi, 5
	lea	rdi, .LC1626[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3237:
	mov	esi, 8
	lea	rdi, .LC1627[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3238:
	mov	esi, 7
	lea	rdi, .LC1628[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3239:
	mov	esi, 3
	lea	rdi, .LC1629[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3240:
	mov	esi, 4
	lea	rdi, .LC1630[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3241:
	mov	esi, 7
	lea	rdi, .LC1631[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3242:
	mov	esi, 5
	lea	rdi, .LC1632[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3243:
	mov	esi, 11
	lea	rdi, .LC1633[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3244:
	mov	esi, 6
	lea	rdi, .LC1634[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3245:
	mov	esi, 5
	lea	rdi, .LC1635[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3246:
	mov	esi, 4
	lea	rdi, .LC1636[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3247:
	mov	esi, 4
	lea	rdi, .LC1637[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3248:
	mov	esi, 6
	lea	rdi, .LC1638[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3249:
	mov	esi, 6
	lea	rdi, .LC1639[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3250:
	mov	esi, 6
	lea	rdi, .LC1640[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3251:
	mov	esi, 7
	lea	rdi, .LC1641[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3252:
	mov	esi, 8
	lea	rdi, .LC1642[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3253:
	mov	esi, 8
	lea	rdi, .LC1643[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3254:
	mov	esi, 1
	lea	rdi, .LC241[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3255:
	mov	esi, 4
	lea	rdi, .LC1644[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3256:
	mov	esi, 8
	lea	rdi, .LC1645[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3257:
	mov	esi, 6
	lea	rdi, .LC1646[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3258:
	mov	esi, 13
	lea	rdi, .LC1647[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3259:
	mov	esi, 7
	lea	rdi, .LC1648[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3260:
	mov	esi, 14
	lea	rdi, .LC1649[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3261:
	mov	esi, 5
	lea	rdi, .LC1650[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3262:
	mov	esi, 4
	lea	rdi, .LC1651[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3263:
	mov	esi, 13
	lea	rdi, .LC1652[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3264:
	mov	esi, 8
	lea	rdi, .LC1653[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3265:
	mov	esi, 11
	lea	rdi, .LC1654[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3266:
	mov	esi, 3
	lea	rdi, .LC1655[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3267:
	mov	esi, 4
	lea	rdi, .LC1656[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3268:
	mov	esi, 3
	lea	rdi, .LC1657[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3269:
	mov	esi, 2
	lea	rdi, .LC1658[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3270:
	mov	esi, 13
	lea	rdi, .LC1659[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3271:
	mov	esi, 8
	lea	rdi, .LC1660[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3272:
	mov	esi, 8
	lea	rdi, .LC1661[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3273:
	mov	esi, 5
	lea	rdi, .LC1662[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3274:
	mov	esi, 15
	lea	rdi, .LC1663[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3275:
	mov	esi, 4
	lea	rdi, .LC1664[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3276:
	mov	esi, 8
	lea	rdi, .LC1665[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3277:
	mov	esi, 13
	lea	rdi, .LC1666[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3278:
	mov	esi, 13
	lea	rdi, .LC1667[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3279:
	mov	esi, 6
	lea	rdi, .LC1668[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3280:
	mov	esi, 14
	lea	rdi, .LC1669[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3281:
	mov	esi, 9
	lea	rdi, .LC1670[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3282:
	mov	esi, 10
	lea	rdi, .LC1671[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3283:
	mov	esi, 14
	lea	rdi, .LC1672[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3284:
	mov	esi, 9
	lea	rdi, .LC1673[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3285:
	mov	esi, 12
	lea	rdi, .LC1674[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3286:
	mov	esi, 3
	lea	rdi, .LC1675[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3287:
	mov	esi, 5
	lea	rdi, .LC1676[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3288:
	mov	esi, 4
	lea	rdi, .LC1677[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3289:
	mov	esi, 5
	lea	rdi, .LC1678[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3290:
	mov	esi, 6
	lea	rdi, .LC1679[rip]
	call	fb_StrAllocTempDescZEx@PLT
	mov	edx, 1
	mov	edi, 1
	add	rsp, 280
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3291:
	mov	esi, 15
	lea	rdi, .LC1680[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3292:
	mov	esi, 7
	lea	rdi, .LC1681[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3293:
	mov	esi, 14
	lea	rdi, .LC1682[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3294:
	mov	esi, 1
	lea	rdi, .LC242[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3295:
	mov	esi, 6
	lea	rdi, .LC1683[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3296:
	mov	esi, 15
	lea	rdi, .LC1684[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3297:
	mov	esi, 6
	lea	rdi, .LC1685[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3298:
	mov	esi, 3
	lea	rdi, .LC1686[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3299:
	mov	esi, 7
	lea	rdi, .LC1687[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3300:
	mov	esi, 12
	lea	rdi, .LC1688[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3301:
	mov	esi, 2
	lea	rdi, .LC1689[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3302:
	mov	esi, 3
	lea	rdi, .LC1690[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3303:
	mov	esi, 6
	lea	rdi, .LC1691[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3304:
	mov	esi, 10
	lea	rdi, .LC1692[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3305:
	mov	esi, 5
	lea	rdi, .LC1693[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3306:
	mov	esi, 7
	lea	rdi, .LC1694[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3307:
	mov	esi, 7
	lea	rdi, .LC1695[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3308:
	mov	esi, 2
	lea	rdi, .LC1696[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3309:
	mov	esi, 4
	lea	rdi, .LC1697[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3310:
	mov	esi, 5
	lea	rdi, .LC1698[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3311:
	mov	esi, 4
	lea	rdi, .LC1699[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3312:
	mov	esi, 8
	lea	rdi, .LC1700[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3313:
	mov	esi, 6
	lea	rdi, .LC1701[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3314:
	mov	esi, 8
	lea	rdi, .LC1702[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3315:
	mov	esi, 7
	lea	rdi, .LC1703[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3316:
	mov	esi, 2
	lea	rdi, .LC1704[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3317:
	mov	esi, 7
	lea	rdi, .LC1705[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3318:
	mov	esi, 5
	lea	rdi, .LC1706[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3319:
	mov	esi, 7
	lea	rdi, .LC1707[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3320:
	mov	esi, 10
	lea	rdi, .LC1708[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3321:
	mov	esi, 12
	lea	rdi, .LC1709[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3322:
	mov	esi, 6
	lea	rdi, .LC1710[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3323:
	mov	esi, 11
	lea	rdi, .LC1711[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3324:
	mov	esi, 12
	lea	rdi, .LC1712[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3325:
	mov	esi, 5
	lea	rdi, .LC1713[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3326:
	mov	esi, 3
	lea	rdi, .LC1714[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3327:
	mov	esi, 5
	lea	rdi, .LC1715[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3328:
	mov	esi, 6
	lea	rdi, .LC1716[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3329:
	mov	esi, 8
	lea	rdi, .LC1717[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3330:
	mov	esi, 8
	lea	rdi, .LC1718[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3331:
	mov	esi, 8
	lea	rdi, .LC1719[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3332:
	mov	esi, 1
	lea	rdi, .LC243[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3333:
	mov	esi, 6
	lea	rdi, .LC1720[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3334:
	mov	esi, 14
	lea	rdi, .LC1721[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3335:
	mov	esi, 7
	lea	rdi, .LC1722[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3336:
	mov	esi, 4
	lea	rdi, .LC1723[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3337:
	mov	esi, 12
	lea	rdi, .LC1724[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3338:
	mov	esi, 5
	lea	rdi, .LC1725[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3339:
	mov	esi, 7
	lea	rdi, .LC1726[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3340:
	mov	esi, 9
	lea	rdi, .LC1727[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3341:
	mov	esi, 8
	lea	rdi, .LC1728[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3342:
	mov	esi, 9
	lea	rdi, .LC1729[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3343:
	mov	esi, 10
	lea	rdi, .LC1730[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3344:
	mov	esi, 9
	lea	rdi, .LC1731[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3345:
	mov	esi, 6
	lea	rdi, .LC1732[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3346:
	mov	esi, 4
	lea	rdi, .LC1733[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3347:
	mov	esi, 12
	lea	rdi, .LC1734[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3348:
	mov	esi, 8
	lea	rdi, .LC1735[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3349:
	mov	esi, 7
	lea	rdi, .LC1736[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3350:
	mov	esi, 5
	lea	rdi, .LC1737[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3351:
	mov	esi, 5
	lea	rdi, .LC1738[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3352:
	mov	esi, 4
	lea	rdi, .LC1739[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3353:
	mov	esi, 3
	lea	rdi, .LC1740[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3354:
	mov	esi, 7
	lea	rdi, .LC1741[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3355:
	mov	esi, 11
	lea	rdi, .LC1742[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3356:
	mov	esi, 2
	lea	rdi, .LC1743[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3357:
	mov	esi, 3
	lea	rdi, .LC1744[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3358:
	mov	esi, 2
	lea	rdi, .LC1745[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3359:
	mov	esi, 5
	lea	rdi, .LC1746[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3360:
	mov	esi, 5
	lea	rdi, .LC1747[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3361:
	mov	esi, 10
	lea	rdi, .LC1748[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3362:
	mov	esi, 7
	lea	rdi, .LC1749[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3363:
	mov	esi, 2
	lea	rdi, .LC1750[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3364:
	mov	esi, 3
	lea	rdi, .LC1751[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3365:
	mov	esi, 7
	lea	rdi, .LC1752[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3366:
	mov	esi, 7
	lea	rdi, .LC1753[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3367:
	mov	esi, 11
	lea	rdi, .LC1754[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3368:
	mov	esi, 15
	lea	rdi, .LC1755[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3369:
	mov	esi, 6
	lea	rdi, .LC1756[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2582:
	mov	esi, 8
	lea	rdi, .LC1023[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2583:
	mov	esi, 8
	lea	rdi, .LC1024[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2584:
	mov	esi, 10
	lea	rdi, .LC1025[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2585:
	mov	esi, 6
	lea	rdi, .LC1026[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2586:
	mov	esi, 4
	lea	rdi, .LC1027[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2587:
	mov	esi, 13
	lea	rdi, .LC1028[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2588:
	mov	esi, 3
	lea	rdi, .LC1029[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2589:
	mov	esi, 4
	lea	rdi, .LC1030[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2590:
	mov	esi, 5
	lea	rdi, .LC1031[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2591:
	mov	esi, 7
	lea	rdi, .LC1032[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2592:
	mov	esi, 7
	lea	rdi, .LC1033[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2593:
	mov	esi, 5
	lea	rdi, .LC1034[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2594:
	mov	esi, 5
	lea	rdi, .LC1035[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2595:
	mov	esi, 4
	lea	rdi, .LC1036[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2596:
	mov	esi, 6
	lea	rdi, .LC1037[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2597:
	mov	esi, 4
	lea	rdi, .LC1038[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2598:
	mov	esi, 5
	lea	rdi, .LC1039[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2599:
	mov	esi, 12
	lea	rdi, .LC1040[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2600:
	mov	esi, 10
	lea	rdi, .LC1041[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2601:
	mov	esi, 8
	lea	rdi, .LC1042[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2602:
	mov	esi, 12
	lea	rdi, .LC1043[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2603:
	mov	esi, 12
	lea	rdi, .LC1044[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2604:
	mov	esi, 17
	lea	rdi, .LC1045[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2605:
	mov	esi, 6
	lea	rdi, .LC1046[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2606:
	mov	esi, 16
	lea	rdi, .LC1047[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2607:
	mov	esi, 3
	lea	rdi, .LC1048[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2608:
	mov	esi, 3
	lea	rdi, .LC1049[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2609:
	mov	esi, 3
	lea	rdi, .LC1050[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2611:
	movsd	xmm0, QWORD PTR 394888[rbp]
	movsd	QWORD PTR 24[rsp], xmm1
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	nearbyint@PLT
	movsd	xmm1, QWORD PTR 24[rsp]
	movsd	xmm4, QWORD PTR 8[rsp]
	cvttsd2si	rax, xmm0
	movsd	xmm5, QWORD PTR 16[rsp]
	comisd	xmm0, xmm1
	jb	.L2613
	subsd	xmm0, xmm1
	cvttsd2si	rax, xmm0
	xor	rax, r12
.L2613:
	cmp	rax, 255
	ja	.L652
	jmp	[QWORD PTR [r14+rax*8]]
.L2615:
	mov	esi, 8
	lea	rdi, .LC1051[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2616:
	mov	esi, 11
	lea	rdi, .LC1052[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2617:
	mov	esi, 1
	lea	rdi, .LC231[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2618:
	mov	esi, 4
	lea	rdi, .LC1053[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2619:
	mov	esi, 7
	lea	rdi, .LC1054[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2620:
	mov	esi, 4
	lea	rdi, .LC1055[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2621:
	mov	esi, 13
	lea	rdi, .LC1056[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2622:
	mov	esi, 12
	lea	rdi, .LC1057[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2623:
	mov	esi, 3
	lea	rdi, .LC1058[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2624:
	mov	esi, 11
	lea	rdi, .LC1059[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2625:
	mov	esi, 4
	lea	rdi, .LC1060[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2626:
	mov	esi, 14
	lea	rdi, .LC1061[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2627:
	mov	esi, 2
	lea	rdi, .LC1062[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2628:
	mov	esi, 5
	lea	rdi, .LC1063[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2629:
	mov	esi, 14
	lea	rdi, .LC1064[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2630:
	mov	esi, 9
	lea	rdi, .LC1065[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2631:
	mov	esi, 10
	lea	rdi, .LC1066[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2632:
	mov	esi, 10
	lea	rdi, .LC1067[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2633:
	mov	esi, 10
	lea	rdi, .LC1068[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2634:
	mov	esi, 11
	lea	rdi, .LC1069[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2635:
	mov	esi, 11
	lea	rdi, .LC1070[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2636:
	mov	esi, 11
	lea	rdi, .LC1071[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2637:
	mov	esi, 3
	lea	rdi, .LC1072[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2638:
	mov	esi, 7
	lea	rdi, .LC1073[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2639:
	mov	esi, 13
	lea	rdi, .LC1074[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2640:
	mov	esi, 12
	lea	rdi, .LC1075[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2641:
	mov	esi, 7
	lea	rdi, .LC1076[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2642:
	mov	esi, 6
	lea	rdi, .LC1077[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2643:
	mov	esi, 3
	lea	rdi, .LC1078[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2644:
	mov	esi, 7
	lea	rdi, .LC1079[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2645:
	mov	esi, 6
	lea	rdi, .LC1080[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2646:
	mov	esi, 6
	lea	rdi, .LC1081[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2647:
	mov	esi, 7
	lea	rdi, .LC1082[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2648:
	mov	esi, 6
	lea	rdi, .LC1083[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2649:
	mov	esi, 6
	lea	rdi, .LC1084[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2650:
	mov	esi, 6
	lea	rdi, .LC1085[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2651:
	mov	esi, 7
	lea	rdi, .LC1086[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2652:
	mov	esi, 6
	lea	rdi, .LC1087[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2653:
	mov	esi, 9
	lea	rdi, .LC1088[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2654:
	mov	esi, 9
	lea	rdi, .LC1089[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2655:
	mov	esi, 7
	lea	rdi, .LC1090[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2656:
	mov	esi, 12
	lea	rdi, .LC1091[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2657:
	mov	esi, 11
	lea	rdi, .LC1092[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2658:
	mov	esi, 5
	lea	rdi, .LC1093[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2659:
	mov	esi, 9
	lea	rdi, .LC1094[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2660:
	mov	esi, 4
	lea	rdi, .LC1095[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2661:
	mov	esi, 10
	lea	rdi, .LC1096[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2662:
	mov	esi, 11
	lea	rdi, .LC1097[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2663:
	mov	esi, 10
	lea	rdi, .LC1098[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2664:
	mov	esi, 6
	lea	rdi, .LC1099[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2665:
	mov	esi, 11
	lea	rdi, .LC1100[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2666:
	mov	esi, 3
	lea	rdi, .LC1101[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2667:
	mov	esi, 9
	lea	rdi, .LC1102[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2668:
	mov	esi, 9
	lea	rdi, .LC1103[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2669:
	mov	esi, 10
	lea	rdi, .LC1104[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2670:
	mov	esi, 10
	lea	rdi, .LC1105[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2671:
	mov	esi, 7
	lea	rdi, .LC1106[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2672:
	mov	esi, 3
	lea	rdi, .LC1107[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2673:
	mov	esi, 9
	lea	rdi, .LC1108[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2674:
	mov	esi, 10
	lea	rdi, .LC1109[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2675:
	mov	esi, 14
	lea	rdi, .LC1110[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2676:
	mov	esi, 9
	lea	rdi, .LC1111[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2677:
	mov	esi, 15
	lea	rdi, .LC1112[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2678:
	mov	esi, 4
	lea	rdi, .LC1113[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2679:
	mov	esi, 7
	lea	rdi, .LC1114[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2680:
	mov	esi, 10
	lea	rdi, .LC1115[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2681:
	mov	esi, 18
	lea	rdi, .LC1116[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2682:
	mov	esi, 8
	lea	rdi, .LC1117[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2683:
	mov	esi, 7
	lea	rdi, .LC1118[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2684:
	mov	esi, 9
	lea	rdi, .LC1119[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2685:
	mov	esi, 7
	lea	rdi, .LC1120[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2686:
	mov	esi, 8
	lea	rdi, .LC1121[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2687:
	mov	esi, 8
	lea	rdi, .LC1122[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2688:
	mov	esi, 8
	lea	rdi, .LC1123[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2689:
	mov	esi, 3
	lea	rdi, .LC1124[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2690:
	mov	esi, 6
	lea	rdi, .LC1125[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2691:
	mov	esi, 8
	lea	rdi, .LC1126[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2692:
	mov	esi, 2
	lea	rdi, .LC1127[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2693:
	mov	esi, 3
	lea	rdi, .LC1128[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2694:
	mov	esi, 6
	lea	rdi, .LC1129[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2695:
	mov	esi, 16
	lea	rdi, .LC1130[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2696:
	mov	esi, 17
	lea	rdi, .LC1131[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2697:
	mov	esi, 4
	lea	rdi, .LC1132[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2698:
	mov	esi, 6
	lea	rdi, .LC1133[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2699:
	mov	esi, 4
	lea	rdi, .LC1134[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2700:
	mov	esi, 10
	lea	rdi, .LC1135[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2701:
	mov	esi, 5
	lea	rdi, .LC1136[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2702:
	mov	esi, 5
	lea	rdi, .LC1137[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2703:
	mov	esi, 5
	lea	rdi, .LC1138[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2704:
	mov	esi, 2
	lea	rdi, .LC1139[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2705:
	mov	esi, 2
	lea	rdi, .LC1140[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2706:
	mov	esi, 7
	lea	rdi, .LC1141[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2707:
	mov	esi, 2
	lea	rdi, .LC1142[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2708:
	mov	esi, 1
	lea	rdi, .LC232[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2709:
	mov	esi, 12
	lea	rdi, .LC1143[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2710:
	mov	esi, 4
	lea	rdi, .LC1144[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2711:
	mov	esi, 4
	lea	rdi, .LC1145[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2712:
	mov	esi, 3
	lea	rdi, .LC1146[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2713:
	mov	esi, 5
	lea	rdi, .LC1147[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2714:
	mov	esi, 4
	lea	rdi, .LC1148[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2715:
	mov	esi, 4
	lea	rdi, .LC1149[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2716:
	mov	esi, 6
	lea	rdi, .LC1150[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2717:
	mov	esi, 3
	lea	rdi, .LC1151[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2718:
	mov	esi, 8
	lea	rdi, .LC1152[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2719:
	mov	esi, 6
	lea	rdi, .LC1153[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2720:
	mov	esi, 6
	lea	rdi, .LC1154[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2721:
	mov	esi, 3
	lea	rdi, .LC1155[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2722:
	mov	esi, 7
	lea	rdi, .LC1156[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2723:
	mov	esi, 8
	lea	rdi, .LC1157[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2724:
	mov	esi, 11
	lea	rdi, .LC1158[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2725:
	mov	esi, 10
	lea	rdi, .LC1159[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2726:
	mov	esi, 10
	lea	rdi, .LC1160[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2727:
	mov	esi, 12
	lea	rdi, .LC1161[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2728:
	mov	esi, 6
	lea	rdi, .LC1162[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2729:
	mov	esi, 6
	lea	rdi, .LC1163[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2730:
	mov	esi, 10
	lea	rdi, .LC1164[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
	.p2align 4,,10
	.p2align 3
.L6603:
	mov	rax, QWORD PTR .LC277[rip]
	movapd	xmm1, xmm5
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm4
	movsd	QWORD PTR 8[rsp], xmm5
	movq	xmm0, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm5, QWORD PTR 8[rsp]
	movsd	xmm4, QWORD PTR 16[rsp]
	jmp	.L2223
	.p2align 4,,10
	.p2align 3
.L6891:
	comisd	xmm4, QWORD PTR .LC2659[rip]
	je	.L7145
	comisd	xmm4, QWORD PTR .LC2660[rip]
	je	.L7146
	comisd	xmm4, QWORD PTR .LC2661[rip]
	je	.L7147
.L4639:
	comisd	xmm4, QWORD PTR .LC2664[rip]
	je	.L4643
	comisd	xmm4, QWORD PTR .LC2665[rip]
	jne	.L7148
.L4643:
	comisd	xmm5, QWORD PTR .LC117[rip]
	movsd	QWORD PTR 8[rsp], xmm4
	ja	.L4646
	pxor	xmm6, xmm6
	comisd	xmm6, xmm5
	jbe	.L7149
.L4646:
	comisd	xmm5, QWORD PTR .LC132[rip]
	ja	.L4649
	comisd	xmm5, QWORD PTR .LC6[rip]
	jnb	.L7150
.L4649:
	comisd	xmm5, QWORD PTR .LC88[rip]
	ja	.L4651
	comisd	xmm5, QWORD PTR .LC73[rip]
	jnb	.L7151
.L4651:
	comisd	xmm5, QWORD PTR .LC89[rip]
	jb	.L4653
	comisd	xmm5, QWORD PTR .LC104[rip]
	jbe	.L7152
.L4653:
	subsd	xmm5, QWORD PTR .LC396[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movabs	rcx, -9187201950435737471
	cvtsd2si	rsi, xmm5
	mov	rax, rsi
	imul	rcx
	lea	rax, [rdx+rsi]
	mov	rdx, rsi
	sar	rdx, 63
	sar	rax, 7
	sub	rax, rdx
	mov	rdx, rax
	sal	rdx, 8
	sub	rdx, rax
	mov	rax, rsi
	sub	rax, rdx
	mov	rsi, rax
	sal	rsi, 4
	add	rsi, rax
	mov	rax, rsi
	imul	rcx
	lea	rax, [rdx+rsi]
	mov	rdx, rsi
	sar	rdx, 63
	sar	rax, 7
	sub	rax, rdx
	mov	rdx, rax
	sal	rdx, 8
	sub	rdx, rax
	mov	rax, QWORD PTR .LC736[rip]
	sub	rsi, rdx
	cvtsi2sd	xmm1, rsi
	movq	xmm0, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
.L4648:
	movsd	xmm0, QWORD PTR .LC689[rip]
	addsd	xmm0, QWORD PTR SYS_OFFSET$[rip]
	comisd	xmm0, xmm4
	jne	.L652
	movsd	xmm2, QWORD PTR .LC2667[rip]
	mov	rdi, rbp
	movapd	xmm0, xmm2
	call	_ZN8MEMORY_T6PEEK64Ed
	movapd	xmm1, xmm0
	movsd	xmm0, QWORD PTR .LC333[rip]
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC2667[rip]
	mov	rdi, rbp
	movq	xmm0, rax
	call	_ZN8MEMORY_T6PEEK64Ed
	movsd	xmm4, QWORD PTR .LC270[rip]
	movapd	xmm5, xmm0
	jmp	.L653
.L2231:
.L2233:
.L2234:
	.p2align 4,,10
	.p2align 3
.L2235:
	cvtsd2si	rdx, QWORD PTR 393256[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rsi, QWORD PTR 393232[rbp]
	cvtsd2si	rax, QWORD PTR 393240[rbp]
	mov	rcx, rdx
	sal	rsi, 16
	sal	rcx, 24
	mov	rdx, rsi
	sal	rax, 8
	add	rdx, rcx
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 393248[rbp]
	movsd	QWORD PTR 394824[rbp], xmm0
	jmp	.L652
.L2238:
.L2241:
.L2242:
	.p2align 4,,10
	.p2align 3
.L2243:
	cvtsd2si	rdx, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rsi, QWORD PTR 393264[rbp]
	cvtsd2si	rax, QWORD PTR 393272[rbp]
	mov	rcx, rdx
	sal	rsi, 16
	sal	rcx, 24
	mov	rdx, rsi
	sal	rax, 8
	add	rdx, rcx
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 393280[rbp]
	movsd	QWORD PTR 394832[rbp], xmm0
	jmp	.L652
	.p2align 4,,10
	.p2align 3
.L6354:
	movzx	eax, BYTE PTR BYTES$[rip+170]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 8[rsp], xmm4
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC279[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC280[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
	.p2align 4,,10
	.p2align 3
.L7148:
	comisd	xmm4, QWORD PTR .LC2666[rip]
	je	.L6219
	comisd	xmm4, QWORD PTR .LC272[rip]
	je	.L4667
	comisd	xmm4, QWORD PTR .LC271[rip]
	je	.L7153
	comisd	xmm4, QWORD PTR .LC2668[rip]
	je	.L7154
	comisd	xmm4, QWORD PTR .LC2669[rip]
	je	.L7155
	comisd	xmm4, QWORD PTR .LC2670[rip]
	je	.L7156
.L4676:
	comisd	xmm4, QWORD PTR .LC2672[rip]
	je	.L7157
	comisd	xmm4, QWORD PTR .LC2675[rip]
	je	.L4683
	comisd	xmm4, QWORD PTR .LC2677[rip]
	je	.L7158
	comisd	xmm4, QWORD PTR .LC2678[rip]
	je	.L7159
	comisd	xmm4, QWORD PTR .LC2679[rip]
	je	.L7160
	comisd	xmm4, QWORD PTR .LC2683[rip]
	je	.L7161
.L4691:
	comisd	xmm4, QWORD PTR .LC2687[rip]
	je	.L7162
	comisd	xmm4, QWORD PTR .LC2688[rip]
	je	.L7163
	comisd	xmm4, QWORD PTR .LC2689[rip]
	je	.L4683
	comisd	xmm4, QWORD PTR .LC2690[rip]
	je	.L6231
	comisd	xmm4, QWORD PTR .LC2691[rip]
	je	.L4575
	comisd	xmm4, QWORD PTR .LC2692[rip]
	je	.L6233
	comisd	xmm4, QWORD PTR .LC2693[rip]
	je	.L7164
	comisd	xmm4, QWORD PTR .LC2694[rip]
	je	.L7165
	comisd	xmm4, QWORD PTR .LC2695[rip]
	je	.L7166
	comisd	xmm4, QWORD PTR .LC2699[rip]
	je	.L7167
	comisd	xmm4, QWORD PTR .LC2701[rip]
	je	.L7168
	comisd	xmm4, QWORD PTR .LC268[rip]
	je	.L7169
	comisd	xmm4, QWORD PTR .LC2702[rip]
	je	.L7170
	comisd	xmm4, QWORD PTR .LC2703[rip]
	je	.L7171
	comisd	xmm4, QWORD PTR .LC2704[rip]
	je	.L7172
	comisd	xmm4, QWORD PTR .LC2705[rip]
	je	.L7173
	comisd	xmm4, QWORD PTR .LC2706[rip]
	je	.L7174
	comisd	xmm4, QWORD PTR .LC2711[rip]
	je	.L7175
	comisd	xmm4, QWORD PTR .LC2712[rip]
	je	.L7176
	comisd	xmm4, QWORD PTR .LC2713[rip]
	je	.L7177
	comisd	xmm4, QWORD PTR .LC2714[rip]
	je	.L7178
	comisd	xmm4, QWORD PTR .LC2715[rip]
	je	.L7179
	comisd	xmm4, QWORD PTR .LC2716[rip]
	je	.L7180
	comisd	xmm4, QWORD PTR .LC2717[rip]
	je	.L7181
	comisd	xmm4, QWORD PTR .LC2718[rip]
	je	.L7182
	comisd	xmm4, QWORD PTR .LC2719[rip]
	je	.L7183
	comisd	xmm4, QWORD PTR .LC2720[rip]
	je	.L7184
	comisd	xmm4, QWORD PTR .LC2721[rip]
	je	.L7185
	comisd	xmm4, QWORD PTR .LC2722[rip]
	je	.L7186
	comisd	xmm4, QWORD PTR .LC2723[rip]
	je	.L7187
	comisd	xmm4, QWORD PTR .LC2724[rip]
	je	.L7188
	comisd	xmm4, QWORD PTR .LC2725[rip]
	je	.L7189
	comisd	xmm4, QWORD PTR .LC2726[rip]
	je	.L7190
	comisd	xmm4, QWORD PTR .LC2727[rip]
	je	.L7191
	comisd	xmm4, QWORD PTR .LC2728[rip]
	je	.L7192
	comisd	xmm4, QWORD PTR .LC2729[rip]
	je	.L7193
	comisd	xmm4, QWORD PTR .LC2730[rip]
	je	.L7194
	comisd	xmm4, QWORD PTR .LC2731[rip]
	je	.L7195
	comisd	xmm4, QWORD PTR .LC2732[rip]
	je	.L7196
	comisd	xmm4, QWORD PTR .LC2733[rip]
	je	.L4833
	comisd	xmm4, QWORD PTR .LC2734[rip]
	je	.L4833
	comisd	xmm4, QWORD PTR .LC2735[rip]
	je	.L4833
	comisd	xmm4, QWORD PTR .LC2736[rip]
	je	.L4839
	comisd	xmm4, QWORD PTR .LC2737[rip]
	je	.L4839
	comisd	xmm4, QWORD PTR .LC2738[rip]
	je	.L4839
	comisd	xmm4, QWORD PTR .LC2739[rip]
	je	.L4845
	comisd	xmm4, QWORD PTR .LC2740[rip]
	je	.L4845
	comisd	xmm4, QWORD PTR .LC2741[rip]
	je	.L4845
	comisd	xmm4, QWORD PTR .LC2742[rip]
	je	.L4851
	comisd	xmm4, QWORD PTR .LC2743[rip]
	je	.L4851
	comisd	xmm4, QWORD PTR .LC2744[rip]
	je	.L4851
	comisd	xmm4, QWORD PTR .LC2745[rip]
	je	.L4857
	comisd	xmm4, QWORD PTR .LC2746[rip]
	je	.L7197
	comisd	xmm4, QWORD PTR .LC2747[rip]
	je	.L4862
	comisd	xmm4, QWORD PTR .LC2748[rip]
	je	.L7198
	comisd	xmm4, QWORD PTR .LC2749[rip]
	je	.L7199
	comisd	xmm4, QWORD PTR .LC2750[rip]
	je	.L7200
	comisd	xmm4, QWORD PTR .LC2751[rip]
	je	.L7201
	comisd	xmm4, QWORD PTR .LC2752[rip]
	je	.L7202
	comisd	xmm4, QWORD PTR .LC2753[rip]
	je	.L7203
	comisd	xmm4, QWORD PTR .LC2754[rip]
	je	.L4857
	comisd	xmm4, QWORD PTR .LC2755[rip]
	je	.L6289
	comisd	xmm4, QWORD PTR .LC2756[rip]
	je	.L4862
	comisd	xmm4, QWORD PTR .LC2757[rip]
	je	.L6290
	comisd	xmm4, QWORD PTR .LC2758[rip]
	je	.L7204
	comisd	xmm4, QWORD PTR .LC2759[rip]
	je	.L4885
	comisd	xmm4, QWORD PTR .LC2760[rip]
	je	.L4889
	comisd	xmm4, QWORD PTR .LC2761[rip]
	je	.L7205
	comisd	xmm4, QWORD PTR .LC2762[rip]
	je	.L4885
	comisd	xmm4, QWORD PTR .LC2763[rip]
	je	.L4889
	comisd	xmm4, QWORD PTR .LC2764[rip]
	je	.L4889
	comisd	xmm4, QWORD PTR .LC2765[rip]
	je	.L6293
	comisd	xmm4, QWORD PTR .LC2766[rip]
	je	.L7206
	comisd	xmm4, QWORD PTR .LC2767[rip]
	je	.L7207
	comisd	xmm4, QWORD PTR .LC2768[rip]
	je	.L7208
	comisd	xmm4, QWORD PTR .LC2769[rip]
	je	.L7209
	comisd	xmm4, QWORD PTR .LC2770[rip]
	je	.L7210
	comisd	xmm4, QWORD PTR .LC2771[rip]
	je	.L7211
	comisd	xmm4, QWORD PTR .LC2772[rip]
	je	.L7212
	comisd	xmm4, QWORD PTR .LC2773[rip]
	je	.L7213
	comisd	xmm4, QWORD PTR .LC2774[rip]
	je	.L7214
	comisd	xmm4, QWORD PTR .LC2775[rip]
	je	.L7215
	comisd	xmm4, QWORD PTR .LC2776[rip]
	je	.L7216
	comisd	xmm4, QWORD PTR .LC2777[rip]
	je	.L7217
	comisd	xmm4, QWORD PTR .LC2778[rip]
	je	.L7218
	comisd	xmm4, QWORD PTR .LC2779[rip]
	je	.L7219
	comisd	xmm4, QWORD PTR .LC2780[rip]
	je	.L7220
	comisd	xmm4, QWORD PTR .LC2781[rip]
	je	.L7221
	comisd	xmm4, QWORD PTR .LC2782[rip]
	je	.L7222
	comisd	xmm4, QWORD PTR .LC2783[rip]
	je	.L7223
	comisd	xmm4, QWORD PTR .LC2784[rip]
	je	.L7224
	comisd	xmm4, QWORD PTR .LC2785[rip]
	je	.L7225
	comisd	xmm4, QWORD PTR .LC2786[rip]
	je	.L7226
	comisd	xmm4, QWORD PTR .LC2787[rip]
	je	.L7227
	comisd	xmm4, QWORD PTR .LC2788[rip]
	je	.L7228
	comisd	xmm4, QWORD PTR .LC2789[rip]
	je	.L7229
	comisd	xmm4, QWORD PTR .LC2790[rip]
	je	.L7230
	comisd	xmm4, QWORD PTR .LC2791[rip]
	je	.L7231
	comisd	xmm4, QWORD PTR .LC2792[rip]
	je	.L7232
	comisd	xmm4, QWORD PTR .LC2793[rip]
	je	.L7233
	comisd	xmm4, QWORD PTR .LC2794[rip]
	je	.L7234
	comisd	xmm4, QWORD PTR .LC2795[rip]
	je	.L7235
	comisd	xmm4, QWORD PTR .LC2796[rip]
	je	.L7236
	comisd	xmm4, QWORD PTR .LC2797[rip]
	je	.L7237
	comisd	xmm4, QWORD PTR .LC2798[rip]
	je	.L7238
	comisd	xmm4, QWORD PTR .LC2799[rip]
	je	.L7239
	comisd	xmm4, QWORD PTR .LC2800[rip]
	je	.L7240
	comisd	xmm4, QWORD PTR .LC2801[rip]
	je	.L7241
	comisd	xmm4, QWORD PTR .LC2802[rip]
	je	.L7242
	comisd	xmm4, QWORD PTR .LC2803[rip]
	je	.L7243
	comisd	xmm4, QWORD PTR .LC2804[rip]
	je	.L7244
	comisd	xmm4, QWORD PTR .LC2805[rip]
	je	.L4989
	comisd	xmm4, QWORD PTR .LC2806[rip]
	je	.L4989
	comisd	xmm4, QWORD PTR .LC2807[rip]
	je	.L4989
	comisd	xmm4, QWORD PTR .LC2808[rip]
	je	.L4989
	comisd	xmm4, QWORD PTR .LC2809[rip]
	je	.L652
	jmp	.L5037
	.p2align 4,,10
	.p2align 3
.L6355:
	movzx	eax, BYTE PTR BYTES$[rip+170]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 8[rsp], xmm4
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC279[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+170]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC280[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
	.p2align 4,,10
	.p2align 3
.L7149:
.L4647:
	cvtsd2si	rcx, xmm5
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movabs	rdx, -9187201950435737471
	mov	rax, rcx
	imul	rdx
	lea	rax, [rdx+rcx]
	mov	rdx, rcx
	sar	rdx, 63
	sar	rax, 7
	sub	rax, rdx
	mov	rdx, rax
	sal	rdx, 8
	sub	rdx, rax
	mov	rax, QWORD PTR .LC277[rip]
	sub	rcx, rdx
	cvtsi2sd	xmm1, rcx
	movq	xmm0, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	jmp	.L4648
	.p2align 4,,10
	.p2align 3
.L5391:
	movsd	QWORD PTR 16[rsp], xmm4
	mov	rsi, QWORD PTR RASTER$[rip]
	mov	ecx, -65536
	mov	r9d, -65536
	push	0
	mov	r8d, -65536
	mov	edx, -65536
	xor	edi, edi
	push	0
	pxor	xmm1, xmm1
	pxor	xmm0, xmm0
	push	-1
	cvtsd2ss	xmm1, xmm5
	push	QWORD PTR fb_hPutAlpha@GOTPCREL[rip]
	push	6
	push	0
	movsd	QWORD PTR 56[rsp], xmm5
	call	fb_GfxPut@PLT
	add	rsp, 48
	movsd	xmm5, QWORD PTR 8[rsp]
	movsd	xmm4, QWORD PTR 16[rsp]
	jmp	.L5037
	.p2align 4,,10
	.p2align 3
.L7150:
.L4650:
	subsd	xmm5, QWORD PTR .LC6[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movabs	rcx, -9187201950435737471
	cvtsd2si	rsi, xmm5
	mov	rax, rsi
	imul	rcx
	lea	rax, [rdx+rsi]
	mov	rdx, rsi
	sar	rdx, 63
	sar	rax, 7
	sub	rax, rdx
	mov	rdx, rax
	sal	rdx, 8
	sub	rdx, rax
	mov	rax, rsi
	sub	rax, rdx
	mov	rsi, rax
	sal	rsi, 4
	add	rsi, rax
	mov	rax, rsi
	imul	rcx
	lea	rax, [rdx+rsi]
	mov	rdx, rsi
	sar	rdx, 63
	sar	rax, 7
	sub	rax, rdx
	mov	rdx, rax
	sal	rdx, 8
	sub	rdx, rax
	mov	rax, QWORD PTR .LC278[rip]
	sub	rsi, rdx
	cvtsi2sd	xmm1, rsi
	movq	xmm0, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	jmp	.L4648
	.p2align 4,,10
	.p2align 3
.L6219:
.L4645:
	comisd	xmm7, xmm5
	ja	.L4657
	comisd	xmm5, QWORD PTR .LC117[rip]
	ja	.L4657
.L4658:
	cvtsd2si	rcx, xmm5
	pxor	xmm5, xmm5
	movabs	rdx, -9187201950435737471
	movsd	xmm4, QWORD PTR .LC270[rip]
	mov	rax, rcx
	imul	rdx
	lea	rax, [rdx+rcx]
	mov	rdx, rcx
	sar	rdx, 63
	sar	rax, 7
	sub	rax, rdx
	mov	rdx, rax
	sal	rdx, 8
	sub	rdx, rax
	sub	rcx, rdx
	cvtsi2sd	xmm5, rcx
	jmp	.L653
	.p2align 4,,10
	.p2align 3
.L7151:
.L4652:
	movsd	xmm2, QWORD PTR .LC73[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movabs	rcx, -9187201950435737471
	subsd	xmm5, xmm2
	cvtsd2si	rsi, xmm5
	mov	rax, rsi
	imul	rcx
	lea	rax, [rdx+rsi]
	mov	rdx, rsi
	sar	rdx, 63
	sar	rax, 7
	sub	rax, rdx
	mov	rdx, rax
	sal	rdx, 8
	sub	rdx, rax
	mov	rax, rsi
	sub	rax, rdx
	mov	rsi, rax
	sal	rsi, 4
	add	rsi, rax
	mov	rax, rsi
	imul	rcx
	lea	rax, [rdx+rsi]
	mov	rdx, rsi
	sar	rdx, 63
	sar	rax, 7
	sub	rax, rdx
	mov	rdx, rax
	sal	rdx, 8
	sub	rdx, rax
	mov	rax, QWORD PTR .LC279[rip]
	sub	rsi, rdx
	cvtsi2sd	xmm1, rsi
	movq	xmm0, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	jmp	.L4648
	.p2align 4,,10
	.p2align 3
.L6357:
	movzx	eax, BYTE PTR BYTES$[rip+170]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 8[rsp], xmm4
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+170]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC279[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+170]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC280[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L5902:
.L2226:
	xor	r8d, r8d
	xor	ecx, ecx
	xor	edx, edx
	xor	edi, edi
	mov	esi, 8
	movsd	QWORD PTR 8[rsp], xmm5
	call	fb_GfxScreen@PLT
	movsd	xmm5, QWORD PTR 8[rsp]
	movapd	xmm0, xmm5
	call	fb_DoubleToStr@PLT
	pxor	xmm0, xmm0
	mov	edx, 36
	lea	rdi, 208[rsp]
	mov	rcx, rax
	mov	r8, -1
	lea	rsi, .LC733[rip]
	movaps	XMMWORD PTR 208[rsp], xmm0
	mov	QWORD PTR 224[rsp], 0
	call	fb_StrConcat@PLT
	pxor	xmm0, xmm0
	lea	rdi, 240[rsp]
	mov	r8d, 22
	mov	rsi, rax
	lea	rcx, .LC734[rip]
	mov	rdx, -1
	movaps	XMMWORD PTR 240[rsp], xmm0
	mov	QWORD PTR 256[rsp], 0
	call	fb_StrConcat@PLT
	mov	rdi, rax
	call	fb_Shell@PLT
	xor	r9d, r9d
	mov	r8d, 65
	mov	ecx, 7
	mov	edx, 32
	mov	esi, 1080
	mov	edi, 1920
	call	fb_GfxScreenRes@PLT
	mov	edi, -65536
	call	fb_Cls@PLT
	xor	esi, esi
	lea	rdi, .LC3[rip]
	call	fb_StrAllocTempDescZEx@PLT
	pxor	xmm1, xmm1
	xor	r8d, r8d
	xor	edx, edx
	mov	rcx, rax
	mov	r9d, 1073741828
	mov	esi, -16777216
	xor	edi, edi
	movaps	xmm0, xmm1
	call	fb_GfxPaint@PLT
	jmp	.L652
.L6863:
.L2229:
	xor	r8d, r8d
	xor	ecx, ecx
	xor	edx, edx
	mov	esi, 8
	xor	edi, edi
	call	fb_GfxScreen@PLT
	mov	esi, 66
	lea	rdi, .LC735[rip]
	call	fb_StrAllocTempDescZEx@PLT
	mov	rdi, rax
	call	fb_Shell@PLT
	xor	r9d, r9d
	mov	r8d, 65
	mov	ecx, 7
	mov	edx, 32
	mov	esi, 1080
	mov	edi, 1920
	call	fb_GfxScreenRes@PLT
	mov	edi, -65536
	call	fb_Cls@PLT
	xor	esi, esi
	lea	rdi, .LC3[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	xor	edi, edi
	pxor	xmm1, xmm1
	pop	rbx
	mov	rcx, rax
	pop	rbp
	mov	r9d, 1073741828
	pop	r12
	xor	r8d, r8d
	pop	r13
	mov	esi, -16777216
	pop	r14
	movaps	xmm0, xmm1
	pop	r15
	jmp	fb_GfxPaint@PLT
.L6604:
	xor	eax, eax
	comisd	xmm4, QWORD PTR .LC270[rip]
	sete	al
	xor	edx, edx
	neg	eax
	comisd	xmm4, QWORD PTR .LC335[rip]
	sete	dl
	neg	edx
	or	eax, edx
	xor	edx, edx
	comisd	xmm4, QWORD PTR .LC336[rip]
	sete	dl
	neg	edx
	or	eax, edx
	xor	edx, edx
	comisd	xmm4, QWORD PTR .LC337[rip]
	sete	dl
	neg	edx
	or	eax, edx
	je	.L2223
	movzx	eax, BYTE PTR BYTES$[rip]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L1713
	movzx	eax, BYTE PTR BYTES$[rip+1]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7245
	movzx	eax, BYTE PTR BYTES$[rip+2]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7246
	movzx	eax, BYTE PTR BYTES$[rip+3]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7247
	movzx	eax, BYTE PTR BYTES$[rip+4]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7248
	movzx	eax, BYTE PTR BYTES$[rip+5]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7249
	movzx	eax, BYTE PTR BYTES$[rip+6]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7250
	movzx	eax, BYTE PTR BYTES$[rip+7]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7251
	movzx	eax, BYTE PTR BYTES$[rip+8]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7252
	movzx	eax, BYTE PTR BYTES$[rip+9]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7253
	movzx	eax, BYTE PTR BYTES$[rip+10]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7254
	movzx	eax, BYTE PTR BYTES$[rip+11]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7255
	movzx	eax, BYTE PTR BYTES$[rip+12]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7256
	movzx	eax, BYTE PTR BYTES$[rip+13]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7257
	movzx	eax, BYTE PTR BYTES$[rip+14]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7258
	movzx	eax, BYTE PTR BYTES$[rip+15]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L1744
	movzx	eax, BYTE PTR BYTES$[rip+16]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L1713
	movzx	eax, BYTE PTR BYTES$[rip+17]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L5664
	movzx	eax, BYTE PTR BYTES$[rip+18]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7259
	movzx	eax, BYTE PTR BYTES$[rip+19]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7260
	movzx	eax, BYTE PTR BYTES$[rip+20]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7261
	movzx	eax, BYTE PTR BYTES$[rip+21]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7262
	movzx	eax, BYTE PTR BYTES$[rip+22]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7263
	movzx	eax, BYTE PTR BYTES$[rip+23]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7264
	movzx	eax, BYTE PTR BYTES$[rip+24]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7265
	movzx	eax, BYTE PTR BYTES$[rip+25]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7266
	movzx	eax, BYTE PTR BYTES$[rip+26]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7267
	movzx	eax, BYTE PTR BYTES$[rip+27]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7268
	movzx	eax, BYTE PTR BYTES$[rip+28]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7269
	movzx	eax, BYTE PTR BYTES$[rip+29]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7270
	movzx	eax, BYTE PTR BYTES$[rip+30]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7271
	movzx	eax, BYTE PTR BYTES$[rip+31]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L1744
	movzx	eax, BYTE PTR BYTES$[rip+32]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L5678
	movzx	eax, BYTE PTR BYTES$[rip+33]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7272
	movzx	eax, BYTE PTR BYTES$[rip+34]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7273
	movzx	eax, BYTE PTR BYTES$[rip+35]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7274
	movzx	eax, BYTE PTR BYTES$[rip+36]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7275
	movzx	eax, BYTE PTR BYTES$[rip+37]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7276
	movzx	eax, BYTE PTR BYTES$[rip+38]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7277
	movzx	eax, BYTE PTR BYTES$[rip+39]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7278
	movzx	eax, BYTE PTR BYTES$[rip+40]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7279
	movzx	eax, BYTE PTR BYTES$[rip+41]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7280
	movzx	eax, BYTE PTR BYTES$[rip+42]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7281
	movzx	eax, BYTE PTR BYTES$[rip+43]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7282
	movzx	eax, BYTE PTR BYTES$[rip+44]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7283
	movzx	eax, BYTE PTR BYTES$[rip+45]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7284
	movzx	eax, BYTE PTR BYTES$[rip+46]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7285
	movzx	eax, BYTE PTR BYTES$[rip+47]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7286
	movzx	eax, BYTE PTR BYTES$[rip+48]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7287
	movzx	eax, BYTE PTR BYTES$[rip+49]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7288
	movzx	eax, BYTE PTR BYTES$[rip+50]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7289
	movzx	eax, BYTE PTR BYTES$[rip+51]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7290
	movzx	eax, BYTE PTR BYTES$[rip+52]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7291
	movzx	eax, BYTE PTR BYTES$[rip+53]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7292
	movzx	eax, BYTE PTR BYTES$[rip+54]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7293
	movzx	eax, BYTE PTR BYTES$[rip+55]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7294
	movzx	eax, BYTE PTR BYTES$[rip+56]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7295
	movzx	eax, BYTE PTR BYTES$[rip+57]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7296
	movzx	eax, BYTE PTR BYTES$[rip+58]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7297
	movzx	eax, BYTE PTR BYTES$[rip+59]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7298
	movzx	eax, BYTE PTR BYTES$[rip+60]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7299
	movzx	eax, BYTE PTR BYTES$[rip+61]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7300
	movzx	eax, BYTE PTR BYTES$[rip+62]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7301
	movzx	eax, BYTE PTR BYTES$[rip+63]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7302
	movzx	eax, BYTE PTR BYTES$[rip+64]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7303
	movzx	eax, BYTE PTR BYTES$[rip+65]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7304
	movzx	eax, BYTE PTR BYTES$[rip+66]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7305
	movzx	eax, BYTE PTR BYTES$[rip+67]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7306
	movzx	eax, BYTE PTR BYTES$[rip+68]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7307
	movzx	eax, BYTE PTR BYTES$[rip+69]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7308
	movzx	eax, BYTE PTR BYTES$[rip+70]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7309
	movzx	eax, BYTE PTR BYTES$[rip+71]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7310
	movzx	eax, BYTE PTR BYTES$[rip+72]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7311
	movzx	eax, BYTE PTR BYTES$[rip+73]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7312
	movzx	eax, BYTE PTR BYTES$[rip+74]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7313
	movzx	eax, BYTE PTR BYTES$[rip+75]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7314
	movzx	eax, BYTE PTR BYTES$[rip+76]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7315
	movzx	eax, BYTE PTR BYTES$[rip+77]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7316
	movzx	eax, BYTE PTR BYTES$[rip+78]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7317
	movzx	eax, BYTE PTR BYTES$[rip+79]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7318
	movzx	eax, BYTE PTR BYTES$[rip+80]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7319
	movzx	eax, BYTE PTR BYTES$[rip+81]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7320
	movzx	eax, BYTE PTR BYTES$[rip+82]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7321
	movzx	eax, BYTE PTR BYTES$[rip+83]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7322
	movzx	eax, BYTE PTR BYTES$[rip+84]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7323
	movzx	eax, BYTE PTR BYTES$[rip+85]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7324
	movzx	eax, BYTE PTR BYTES$[rip+86]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7325
	movzx	eax, BYTE PTR BYTES$[rip+87]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7326
	movzx	eax, BYTE PTR BYTES$[rip+88]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7327
	movzx	eax, BYTE PTR BYTES$[rip+89]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7328
	movzx	eax, BYTE PTR BYTES$[rip+90]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7329
	movzx	eax, BYTE PTR BYTES$[rip+91]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7330
	movzx	eax, BYTE PTR BYTES$[rip+92]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7331
	movzx	eax, BYTE PTR BYTES$[rip+93]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7332
	movzx	eax, BYTE PTR BYTES$[rip+94]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7333
	movzx	eax, BYTE PTR BYTES$[rip+95]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7334
	movzx	eax, BYTE PTR BYTES$[rip+96]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7335
	movzx	eax, BYTE PTR BYTES$[rip+97]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7336
	movzx	eax, BYTE PTR BYTES$[rip+98]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7337
	movzx	eax, BYTE PTR BYTES$[rip+99]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7338
	movzx	eax, BYTE PTR BYTES$[rip+100]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7339
	movzx	eax, BYTE PTR BYTES$[rip+101]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7340
	movzx	eax, BYTE PTR BYTES$[rip+102]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7341
	movzx	eax, BYTE PTR BYTES$[rip+103]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7342
	movzx	eax, BYTE PTR BYTES$[rip+104]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7343
	movzx	eax, BYTE PTR BYTES$[rip+105]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7344
	movzx	eax, BYTE PTR BYTES$[rip+106]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7345
	movzx	eax, BYTE PTR BYTES$[rip+107]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7346
	movzx	eax, BYTE PTR BYTES$[rip+108]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7347
	movzx	eax, BYTE PTR BYTES$[rip+109]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7348
	movzx	eax, BYTE PTR BYTES$[rip+110]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7349
	movzx	eax, BYTE PTR BYTES$[rip+111]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7350
	movzx	eax, BYTE PTR BYTES$[rip+112]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7351
	movzx	eax, BYTE PTR BYTES$[rip+113]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7352
	movzx	eax, BYTE PTR BYTES$[rip+114]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7353
	movzx	eax, BYTE PTR BYTES$[rip+115]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7354
	movzx	eax, BYTE PTR BYTES$[rip+116]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7355
	movzx	eax, BYTE PTR BYTES$[rip+117]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7356
	movzx	eax, BYTE PTR BYTES$[rip+118]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7357
	movzx	eax, BYTE PTR BYTES$[rip+119]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7358
	movzx	eax, BYTE PTR BYTES$[rip+120]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7359
	movzx	eax, BYTE PTR BYTES$[rip+121]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7360
	movzx	eax, BYTE PTR BYTES$[rip+122]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7361
	movzx	eax, BYTE PTR BYTES$[rip+123]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7362
	movzx	eax, BYTE PTR BYTES$[rip+124]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7363
	movzx	eax, BYTE PTR BYTES$[rip+125]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7364
	movzx	eax, BYTE PTR BYTES$[rip+126]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7365
	movzx	eax, BYTE PTR BYTES$[rip+127]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7366
	movzx	eax, BYTE PTR BYTES$[rip+128]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7367
	movzx	eax, BYTE PTR BYTES$[rip+129]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7368
	movzx	eax, BYTE PTR BYTES$[rip+130]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7369
	movzx	eax, BYTE PTR BYTES$[rip+131]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7370
	movzx	eax, BYTE PTR BYTES$[rip+132]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7371
	movzx	eax, BYTE PTR BYTES$[rip+133]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7372
	movzx	eax, BYTE PTR BYTES$[rip+134]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7373
	movzx	eax, BYTE PTR BYTES$[rip+135]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7374
	movzx	eax, BYTE PTR BYTES$[rip+136]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7375
	movzx	eax, BYTE PTR BYTES$[rip+137]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7376
	movzx	eax, BYTE PTR BYTES$[rip+138]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7377
	movzx	eax, BYTE PTR BYTES$[rip+139]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7378
	movzx	eax, BYTE PTR BYTES$[rip+140]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7379
	movzx	eax, BYTE PTR BYTES$[rip+141]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7380
	movzx	eax, BYTE PTR BYTES$[rip+142]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7381
	movzx	eax, BYTE PTR BYTES$[rip+143]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7382
	movzx	eax, BYTE PTR BYTES$[rip+144]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7383
	movzx	eax, BYTE PTR BYTES$[rip+145]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7384
	movzx	eax, BYTE PTR BYTES$[rip+146]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7385
	movzx	eax, BYTE PTR BYTES$[rip+147]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7386
	movzx	eax, BYTE PTR BYTES$[rip+148]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7387
	movzx	eax, BYTE PTR BYTES$[rip+149]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7388
	movzx	eax, BYTE PTR BYTES$[rip+150]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7389
	movzx	eax, BYTE PTR BYTES$[rip+151]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7390
	movzx	eax, BYTE PTR BYTES$[rip+152]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7391
	movzx	eax, BYTE PTR BYTES$[rip+153]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7392
	movzx	eax, BYTE PTR BYTES$[rip+154]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7393
	movzx	eax, BYTE PTR BYTES$[rip+155]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7394
	movzx	eax, BYTE PTR BYTES$[rip+156]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7395
	movzx	eax, BYTE PTR BYTES$[rip+157]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7396
	movzx	eax, BYTE PTR BYTES$[rip+158]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7397
	movzx	eax, BYTE PTR BYTES$[rip+159]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7398
	movzx	eax, BYTE PTR BYTES$[rip+160]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7399
	movzx	eax, BYTE PTR BYTES$[rip+161]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7400
	movzx	eax, BYTE PTR BYTES$[rip+162]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7401
	movzx	eax, BYTE PTR BYTES$[rip+163]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7402
	movzx	eax, BYTE PTR BYTES$[rip+164]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7403
	movzx	eax, BYTE PTR BYTES$[rip+165]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7404
	movzx	eax, BYTE PTR BYTES$[rip+166]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7405
	movzx	eax, BYTE PTR BYTES$[rip+167]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7406
	movzx	eax, BYTE PTR BYTES$[rip+168]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7407
	movzx	eax, BYTE PTR BYTES$[rip+169]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7408
	movzx	eax, BYTE PTR BYTES$[rip+170]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7409
	movzx	eax, BYTE PTR BYTES$[rip+171]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7410
	movzx	eax, BYTE PTR BYTES$[rip+172]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7411
	movzx	eax, BYTE PTR BYTES$[rip+173]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7412
	movzx	eax, BYTE PTR BYTES$[rip+174]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7413
	movzx	eax, BYTE PTR BYTES$[rip+175]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7414
	movzx	eax, BYTE PTR BYTES$[rip+176]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7415
	movzx	eax, BYTE PTR BYTES$[rip+177]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7416
	movzx	eax, BYTE PTR BYTES$[rip+178]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7417
	movzx	eax, BYTE PTR BYTES$[rip+179]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7418
	movzx	eax, BYTE PTR BYTES$[rip+180]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7419
	movzx	eax, BYTE PTR BYTES$[rip+181]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7420
	movzx	eax, BYTE PTR BYTES$[rip+182]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7421
	movzx	eax, BYTE PTR BYTES$[rip+183]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7422
	movzx	eax, BYTE PTR BYTES$[rip+184]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7423
	movzx	eax, BYTE PTR BYTES$[rip+185]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7424
	movzx	eax, BYTE PTR BYTES$[rip+186]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7425
	movzx	eax, BYTE PTR BYTES$[rip+187]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7426
	movzx	eax, BYTE PTR BYTES$[rip+188]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7427
	movzx	eax, BYTE PTR BYTES$[rip+189]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7428
	movzx	eax, BYTE PTR BYTES$[rip+190]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7429
	movzx	eax, BYTE PTR BYTES$[rip+191]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7430
	movzx	eax, BYTE PTR BYTES$[rip+192]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7431
	movzx	eax, BYTE PTR BYTES$[rip+193]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7432
	movzx	eax, BYTE PTR BYTES$[rip+194]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7433
	movzx	eax, BYTE PTR BYTES$[rip+195]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7434
	movzx	eax, BYTE PTR BYTES$[rip+196]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7435
	movzx	eax, BYTE PTR BYTES$[rip+197]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7436
	movzx	eax, BYTE PTR BYTES$[rip+198]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7437
	movzx	eax, BYTE PTR BYTES$[rip+199]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7438
	movzx	eax, BYTE PTR BYTES$[rip+200]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7439
	movzx	eax, BYTE PTR BYTES$[rip+201]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7440
	movzx	eax, BYTE PTR BYTES$[rip+202]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7441
	movzx	eax, BYTE PTR BYTES$[rip+203]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7442
	movzx	eax, BYTE PTR BYTES$[rip+204]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7443
	movzx	eax, BYTE PTR BYTES$[rip+205]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7444
	movzx	eax, BYTE PTR BYTES$[rip+206]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7445
	movzx	eax, BYTE PTR BYTES$[rip+207]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7446
	movzx	eax, BYTE PTR BYTES$[rip+208]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7447
	movzx	eax, BYTE PTR BYTES$[rip+209]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7448
	movzx	eax, BYTE PTR BYTES$[rip+210]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7449
	movzx	eax, BYTE PTR BYTES$[rip+211]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7450
	movzx	eax, BYTE PTR BYTES$[rip+212]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7451
	movzx	eax, BYTE PTR BYTES$[rip+213]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7452
	movzx	eax, BYTE PTR BYTES$[rip+214]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7453
	movzx	eax, BYTE PTR BYTES$[rip+215]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7454
	movzx	eax, BYTE PTR BYTES$[rip+216]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7455
	movzx	eax, BYTE PTR BYTES$[rip+217]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7456
	movzx	eax, BYTE PTR BYTES$[rip+218]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7457
	movzx	eax, BYTE PTR BYTES$[rip+219]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7458
	movzx	eax, BYTE PTR BYTES$[rip+220]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7459
	movzx	eax, BYTE PTR BYTES$[rip+221]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7460
	movzx	eax, BYTE PTR BYTES$[rip+222]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7461
	movzx	eax, BYTE PTR BYTES$[rip+223]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7462
	movzx	eax, BYTE PTR BYTES$[rip+224]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7463
	movzx	eax, BYTE PTR BYTES$[rip+225]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7464
	movzx	eax, BYTE PTR BYTES$[rip+226]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7465
	movzx	eax, BYTE PTR BYTES$[rip+227]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7466
	movzx	eax, BYTE PTR BYTES$[rip+228]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7467
	movzx	eax, BYTE PTR BYTES$[rip+229]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7468
	movzx	eax, BYTE PTR BYTES$[rip+230]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7469
	movzx	eax, BYTE PTR BYTES$[rip+231]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7470
	movzx	eax, BYTE PTR BYTES$[rip+232]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7471
	movzx	eax, BYTE PTR BYTES$[rip+233]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7472
	movzx	eax, BYTE PTR BYTES$[rip+234]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7473
	movzx	eax, BYTE PTR BYTES$[rip+235]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7474
	movzx	eax, BYTE PTR BYTES$[rip+236]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7475
	movzx	eax, BYTE PTR BYTES$[rip+237]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7476
	movzx	eax, BYTE PTR BYTES$[rip+238]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7477
	movzx	eax, BYTE PTR BYTES$[rip+239]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7478
	movzx	eax, BYTE PTR BYTES$[rip+240]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7479
	movzx	eax, BYTE PTR BYTES$[rip+241]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7480
	movzx	eax, BYTE PTR BYTES$[rip+242]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7481
	movzx	eax, BYTE PTR BYTES$[rip+243]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7482
	movzx	eax, BYTE PTR BYTES$[rip+244]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7483
	movzx	eax, BYTE PTR BYTES$[rip+245]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7484
	movzx	eax, BYTE PTR BYTES$[rip+246]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7485
	movzx	eax, BYTE PTR BYTES$[rip+247]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7486
	movzx	eax, BYTE PTR BYTES$[rip+248]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7487
	movzx	eax, BYTE PTR BYTES$[rip+249]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7488
	movzx	eax, BYTE PTR BYTES$[rip+250]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7489
	movzx	eax, BYTE PTR BYTES$[rip+251]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7490
	movzx	eax, BYTE PTR BYTES$[rip+252]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7491
	movzx	eax, BYTE PTR BYTES$[rip+253]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7492
	movzx	eax, BYTE PTR BYTES$[rip+254]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	je	.L7493
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm5
	jne	.L2223
	movsd	xmm1, QWORD PTR .LC81[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC81[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC81[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm5, QWORD PTR 16[rsp]
	movsd	xmm4, QWORD PTR 8[rsp]
	jmp	.L2223
	.p2align 4,,10
	.p2align 3
.L5394:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L7152:
.L4654:
	subsd	xmm5, QWORD PTR .LC89[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movabs	rcx, -9187201950435737471
	cvtsd2si	rsi, xmm5
	mov	rax, rsi
	imul	rcx
	lea	rax, [rdx+rsi]
	mov	rdx, rsi
	sar	rdx, 63
	sar	rax, 7
	sub	rax, rdx
	mov	rdx, rax
	sal	rdx, 8
	sub	rdx, rax
	mov	rax, rsi
	sub	rax, rdx
	mov	rsi, rax
	sal	rsi, 4
	add	rsi, rax
	mov	rax, rsi
	imul	rcx
	lea	rax, [rdx+rsi]
	mov	rdx, rsi
	sar	rdx, 63
	sar	rax, 7
	sub	rax, rdx
	mov	rdx, rax
	sal	rdx, 8
	sub	rdx, rax
	mov	rax, QWORD PTR .LC280[rip]
	sub	rsi, rdx
	cvtsi2sd	xmm1, rsi
	movq	xmm0, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	jmp	.L4648
.L5904:
.L2246:
	cvtsd2si	rcx, QWORD PTR 393304[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rdi, QWORD PTR 393312[rbp]
	cvtsd2si	rdx, QWORD PTR 393320[rbp]
	cvtsd2si	rax, QWORD PTR 393328[rbp]
	sal	rcx, 32
	mov	rsi, rcx
	mov	rcx, rdi
	sal	rcx, 24
	sal	rdx, 16
	add	rcx, rsi
	sal	rax, 8
	add	rdx, rcx
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 393336[rbp]
	movsd	QWORD PTR 394840[rbp], xmm0
	jmp	.L652
.L6864:
.L2249:
	cvtsd2si	rcx, QWORD PTR 393352[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rdi, QWORD PTR 393360[rbp]
	cvtsd2si	rdx, QWORD PTR 393368[rbp]
	cvtsd2si	rax, QWORD PTR 393376[rbp]
	sal	rcx, 32
	mov	rsi, rcx
	mov	rcx, rdi
	sal	rcx, 24
	sal	rdx, 16
	add	rcx, rsi
	sal	rax, 8
	add	rdx, rcx
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 393384[rbp]
	movsd	QWORD PTR 394848[rbp], xmm0
	jmp	.L652
.L6865:
.L2251:
	cvtsd2si	rcx, QWORD PTR 393400[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rdi, QWORD PTR 393408[rbp]
	cvtsd2si	rdx, QWORD PTR 393416[rbp]
	cvtsd2si	rax, QWORD PTR 393424[rbp]
	sal	rcx, 32
	mov	rsi, rcx
	mov	rcx, rdi
	sal	rcx, 24
	sal	rdx, 16
	add	rcx, rsi
	sal	rax, 8
	add	rdx, rcx
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 393432[rbp]
	movsd	QWORD PTR 394856[rbp], xmm0
	jmp	.L652
.L6866:
.L2253:
	cvtsd2si	rcx, QWORD PTR 393448[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rdi, QWORD PTR 393456[rbp]
	cvtsd2si	rdx, QWORD PTR 393464[rbp]
	cvtsd2si	rax, QWORD PTR 393472[rbp]
	sal	rcx, 32
	mov	rsi, rcx
	mov	rcx, rdi
	sal	rcx, 24
	sal	rdx, 16
	add	rcx, rsi
	sal	rax, 8
	add	rdx, rcx
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 393480[rbp]
	movsd	QWORD PTR 394864[rbp], xmm0
	jmp	.L652
.L6867:
.L2255:
	cvtsd2si	rcx, QWORD PTR 393496[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rdi, QWORD PTR 393504[rbp]
	cvtsd2si	rdx, QWORD PTR 393512[rbp]
	cvtsd2si	rax, QWORD PTR 393520[rbp]
	sal	rcx, 32
	mov	rsi, rcx
	mov	rcx, rdi
	sal	rcx, 24
	sal	rdx, 16
	add	rcx, rsi
	sal	rax, 8
	add	rdx, rcx
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 393528[rbp]
	movsd	QWORD PTR 394872[rbp], xmm0
	jmp	.L652
.L6868:
.L2257:
	cvtsd2si	rcx, QWORD PTR 393544[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rdi, QWORD PTR 393552[rbp]
	cvtsd2si	rdx, QWORD PTR 393560[rbp]
	cvtsd2si	rax, QWORD PTR 393568[rbp]
	sal	rcx, 32
	mov	rsi, rcx
	mov	rcx, rdi
	sal	rcx, 24
	sal	rdx, 16
	add	rcx, rsi
	sal	rax, 8
	add	rdx, rcx
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 393576[rbp]
	movsd	QWORD PTR 394880[rbp], xmm0
	jmp	.L652
.L6869:
.L2259:
	cvtsd2si	rcx, QWORD PTR 393592[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rdi, QWORD PTR 393600[rbp]
	cvtsd2si	rdx, QWORD PTR 393608[rbp]
	cvtsd2si	rax, QWORD PTR 393616[rbp]
	sal	rcx, 32
	mov	rsi, rcx
	mov	rcx, rdi
	sal	rcx, 24
	sal	rdx, 16
	add	rcx, rsi
	sal	rax, 8
	add	rdx, rcx
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 393624[rbp]
	movsd	QWORD PTR 394888[rbp], xmm0
	jmp	.L652
.L6870:
.L2261:
	cvtsd2si	rcx, QWORD PTR 393640[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rdi, QWORD PTR 393648[rbp]
	cvtsd2si	rdx, QWORD PTR 393656[rbp]
	cvtsd2si	rax, QWORD PTR 393664[rbp]
	sal	rcx, 32
	mov	rsi, rcx
	mov	rcx, rdi
	sal	rcx, 24
	sal	rdx, 16
	add	rcx, rsi
	sal	rax, 8
	add	rdx, rcx
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 393672[rbp]
	movsd	QWORD PTR 394896[rbp], xmm0
	jmp	.L652
.L6871:
.L2263:
	cvtsd2si	rcx, QWORD PTR 393688[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rdi, QWORD PTR 393696[rbp]
	cvtsd2si	rdx, QWORD PTR 393704[rbp]
	cvtsd2si	rax, QWORD PTR 393712[rbp]
	sal	rcx, 32
	mov	rsi, rcx
	mov	rcx, rdi
	sal	rcx, 24
	sal	rdx, 16
	add	rcx, rsi
	sal	rax, 8
	add	rdx, rcx
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 393720[rbp]
	movsd	QWORD PTR 394904[rbp], xmm0
	jmp	.L652
.L6872:
.L2265:
	cvtsd2si	rcx, QWORD PTR 393736[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rdi, QWORD PTR 393744[rbp]
	cvtsd2si	rdx, QWORD PTR 393752[rbp]
	cvtsd2si	rax, QWORD PTR 393768[rbp]
	sal	rcx, 32
	mov	rsi, rcx
	mov	rcx, rdi
	sal	rcx, 24
	sal	rdx, 16
	add	rcx, rsi
	sal	rax, 8
	add	rdx, rcx
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 393776[rbp]
	movsd	QWORD PTR 394912[rbp], xmm0
	jmp	.L652
.L6358:
	movzx	eax, BYTE PTR BYTES$[rip+85]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 8[rsp], xmm4
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+85]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC279[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+85]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC280[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6873:
.L2267:
	cvtsd2si	rcx, QWORD PTR 393792[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rdi, QWORD PTR 393800[rbp]
	cvtsd2si	rdx, QWORD PTR 393808[rbp]
	cvtsd2si	rax, QWORD PTR 393816[rbp]
	sal	rcx, 32
	mov	rsi, rcx
	mov	rcx, rdi
	sal	rcx, 24
	sal	rdx, 16
	add	rcx, rsi
	sal	rax, 8
	add	rdx, rcx
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 393824[rbp]
	movsd	QWORD PTR 394920[rbp], xmm0
	jmp	.L652
.L6874:
.L2269:
	cvtsd2si	rcx, QWORD PTR 393832[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rdi, QWORD PTR 393840[rbp]
	cvtsd2si	rdx, QWORD PTR 393848[rbp]
	cvtsd2si	rax, QWORD PTR 393856[rbp]
	sal	rcx, 32
	mov	rsi, rcx
	mov	rcx, rdi
	sal	rcx, 24
	sal	rdx, 16
	add	rcx, rsi
	sal	rax, 8
	add	rdx, rcx
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 393864[rbp]
	movsd	QWORD PTR 394928[rbp], xmm0
	jmp	.L652
.L6875:
.L2271:
	cvtsd2si	rcx, QWORD PTR 393880[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rdi, QWORD PTR 393888[rbp]
	cvtsd2si	rdx, QWORD PTR 393896[rbp]
	cvtsd2si	rax, QWORD PTR 393904[rbp]
	sal	rcx, 32
	mov	rsi, rcx
	mov	rcx, rdi
	sal	rcx, 24
	sal	rdx, 16
	add	rcx, rsi
	sal	rax, 8
	add	rdx, rcx
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 393912[rbp]
	movsd	QWORD PTR 394936[rbp], xmm0
	jmp	.L652
.L6876:
.L2273:
	cvtsd2si	rcx, QWORD PTR 393928[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rdi, QWORD PTR 393936[rbp]
	cvtsd2si	rdx, QWORD PTR 393944[rbp]
	cvtsd2si	rax, QWORD PTR 393952[rbp]
	sal	rcx, 32
	mov	rsi, rcx
	mov	rcx, rdi
	sal	rcx, 24
	sal	rdx, 16
	add	rcx, rsi
	sal	rax, 8
	add	rdx, rcx
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 393960[rbp]
	movsd	QWORD PTR 394944[rbp], xmm0
	jmp	.L652
.L4657:
	comisd	xmm5, QWORD PTR .LC6[rip]
	jb	.L4659
	comisd	xmm5, QWORD PTR .LC132[rip]
	ja	.L4659
.L4660:
	subsd	xmm5, QWORD PTR .LC6[rip]
	movabs	rcx, -9187201950435737471
	cvtsd2si	rsi, xmm5
	pxor	xmm5, xmm5
	mov	rax, rsi
	imul	rcx
	lea	rax, [rdx+rsi]
	mov	rdx, rsi
	sar	rdx, 63
	sar	rax, 7
	sub	rax, rdx
	mov	rdx, rax
	sal	rdx, 8
	sub	rdx, rax
	mov	rax, rsi
	sub	rax, rdx
	mov	rsi, rax
	sal	rsi, 4
	add	rsi, rax
	mov	rax, rsi
	imul	rcx
	lea	rax, [rdx+rsi]
	mov	rdx, rsi
	sar	rdx, 63
	sar	rax, 7
	sub	rax, rdx
	mov	rdx, rax
	sal	rdx, 8
	sub	rdx, rax
	mov	rax, QWORD PTR .LC276[rip]
	sub	rsi, rdx
	cvtsi2sd	xmm5, rsi
	movq	xmm4, rax
	jmp	.L653
.L6877:
.L2275:
	cvtsd2si	rcx, QWORD PTR 393976[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rdi, QWORD PTR 393984[rbp]
	cvtsd2si	rdx, QWORD PTR 393992[rbp]
	cvtsd2si	rax, QWORD PTR 394000[rbp]
	sal	rcx, 32
	mov	rsi, rcx
	mov	rcx, rdi
	sal	rcx, 24
	sal	rdx, 16
	add	rcx, rsi
	sal	rax, 8
	add	rdx, rcx
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 394008[rbp]
	movsd	QWORD PTR 394952[rbp], xmm0
	jmp	.L652
.L6878:
.L2277:
	cvtsd2si	rdx, QWORD PTR 394024[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rsi, QWORD PTR 394032[rbp]
	cvtsd2si	rax, QWORD PTR 386040[rbp]
	cvtsd2si	rcx, QWORD PTR 394048[rbp]
	sal	rdx, 32
	sal	rsi, 24
	add	rdx, rsi
	sal	rax, 16
	add	rax, rdx
	sal	rcx, 8
	add	rax, rcx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 394056[rbp]
	movsd	QWORD PTR 394960[rbp], xmm0
	jmp	.L652
.L6879:
.L2279:
	cvtsd2si	rdx, QWORD PTR 394072[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rsi, QWORD PTR 394080[rbp]
	cvtsd2si	rax, QWORD PTR 394088[rbp]
	cvtsd2si	rcx, QWORD PTR 394096[rbp]
	sal	rdx, 32
	sal	rsi, 24
	add	rdx, rsi
	sal	rax, 16
	add	rax, rdx
	sal	rcx, 8
	add	rax, rcx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 394104[rbp]
	movsd	QWORD PTR 394968[rbp], xmm0
	jmp	.L652
.L6880:
.L2281:
	cvtsd2si	rdx, QWORD PTR 394120[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rsi, QWORD PTR 394128[rbp]
	cvtsd2si	rax, QWORD PTR 394136[rbp]
	cvtsd2si	rcx, QWORD PTR 394144[rbp]
	sal	rdx, 32
	sal	rsi, 24
	add	rdx, rsi
	sal	rax, 16
	add	rax, rdx
	sal	rcx, 8
	add	rax, rcx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 394152[rbp]
	movsd	QWORD PTR 394976[rbp], xmm0
	jmp	.L652
.L6881:
.L2283:
	cvtsd2si	rdx, QWORD PTR 394168[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rsi, QWORD PTR 394176[rbp]
	cvtsd2si	rax, QWORD PTR 394184[rbp]
	cvtsd2si	rcx, QWORD PTR 394192[rbp]
	sal	rdx, 32
	sal	rsi, 24
	add	rdx, rsi
	sal	rax, 16
	add	rax, rdx
	sal	rcx, 8
	add	rax, rcx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 394200[rbp]
	movsd	QWORD PTR 394984[rbp], xmm0
	jmp	.L652
.L6882:
.L2285:
	cvtsd2si	rdx, QWORD PTR 394216[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rsi, QWORD PTR 394224[rbp]
	cvtsd2si	rax, QWORD PTR 394232[rbp]
	cvtsd2si	rcx, QWORD PTR 394240[rbp]
	sal	rdx, 32
	sal	rsi, 24
	add	rdx, rsi
	sal	rax, 16
	add	rax, rdx
	sal	rcx, 8
	add	rax, rcx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 394248[rbp]
	movsd	QWORD PTR 394992[rbp], xmm0
	jmp	.L652
.L6883:
.L2287:
	cvtsd2si	rdx, QWORD PTR 394264[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rsi, QWORD PTR 394272[rbp]
	cvtsd2si	rax, QWORD PTR 394280[rbp]
	cvtsd2si	rcx, QWORD PTR 394288[rbp]
	sal	rdx, 32
	sal	rsi, 24
	add	rdx, rsi
	sal	rax, 16
	add	rax, rdx
	sal	rcx, 8
	add	rax, rcx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 394296[rbp]
	movsd	QWORD PTR 395000[rbp], xmm0
	jmp	.L652
.L6884:
.L2289:
	cvtsd2si	rdx, QWORD PTR 394312[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rsi, QWORD PTR 394320[rbp]
	cvtsd2si	rax, QWORD PTR 394328[rbp]
	cvtsd2si	rcx, QWORD PTR 394336[rbp]
	sal	rdx, 32
	sal	rsi, 24
	add	rdx, rsi
	sal	rax, 16
	add	rax, rdx
	sal	rcx, 8
	add	rax, rcx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 394344[rbp]
	movsd	QWORD PTR 395008[rbp], xmm0
	jmp	.L652
.L6885:
.L2291:
	cvtsd2si	rdx, QWORD PTR 394360[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rsi, QWORD PTR 394368[rbp]
	cvtsd2si	rax, QWORD PTR 394376[rbp]
	cvtsd2si	rcx, QWORD PTR 394384[rbp]
	sal	rdx, 32
	sal	rsi, 24
	add	rdx, rsi
	sal	rax, 16
	add	rax, rdx
	sal	rcx, 8
	add	rax, rcx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 394392[rbp]
	movsd	QWORD PTR 395016[rbp], xmm0
	jmp	.L652
.L6886:
.L2293:
	cvtsd2si	rdx, QWORD PTR 394408[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rsi, QWORD PTR 394416[rbp]
	cvtsd2si	rax, QWORD PTR 394424[rbp]
	cvtsd2si	rcx, QWORD PTR 394432[rbp]
	sal	rdx, 32
	sal	rsi, 24
	add	rdx, rsi
	sal	rax, 16
	add	rax, rdx
	sal	rcx, 8
	add	rax, rcx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 394440[rbp]
	movsd	QWORD PTR 395024[rbp], xmm0
	jmp	.L652
.L6888:
.L2297:
	cvtsd2si	rsi, QWORD PTR 394848[rbp]
	mov	r8d, 1
	mov	rcx, -1
	mov	rdx, -1
	cvtsd2si	rdi, QWORD PTR 394840[rbp]
	add	rsp, 280
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	GLSCREEN
.L6605:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC338[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6359:
	movzx	eax, BYTE PTR BYTES$[rip+85]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 8[rsp], xmm4
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+85]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC279[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC280[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6231:
.L4697:
	mov	rax, QWORD PTR C$[rip]
	movsd	QWORD PTR 1592[rbp], xmm5
	mov	rcx, QWORD PTR X$[rip]
	cvtsd2si	rdx, QWORD PTR 134479872[rbp+rax*8]
	mov	eax, 128
	sar	rax, cl
	test	rax, rdx
	je	.L7494
	comisd	xmm5, xmm7
	je	.L6339
.L6232:
	mov	rax, QWORD PTR .LC271[rip]
	pxor	xmm5, xmm5
	movq	xmm4, rax
	jmp	.L653
.L4659:
	comisd	xmm5, QWORD PTR .LC73[rip]
	jb	.L4661
	comisd	xmm5, QWORD PTR .LC88[rip]
	ja	.L4661
.L4662:
	movsd	xmm2, QWORD PTR .LC73[rip]
	movabs	rcx, -9187201950435737471
	subsd	xmm5, xmm2
	cvtsd2si	rsi, xmm5
	pxor	xmm5, xmm5
	mov	rax, rsi
	imul	rcx
	lea	rax, [rdx+rsi]
	mov	rdx, rsi
	sar	rdx, 63
	sar	rax, 7
	sub	rax, rdx
	mov	rdx, rax
	sal	rdx, 8
	sub	rdx, rax
	mov	rax, rsi
	sub	rax, rdx
	mov	rsi, rax
	sal	rsi, 4
	add	rsi, rax
	mov	rax, rsi
	imul	rcx
	lea	rax, [rdx+rsi]
	mov	rdx, rsi
	sar	rdx, 63
	sar	rax, 7
	sub	rax, rdx
	mov	rdx, rax
	sal	rdx, 8
	sub	rdx, rax
	mov	rax, QWORD PTR .LC275[rip]
	sub	rsi, rdx
	cvtsi2sd	xmm5, rsi
	movq	xmm4, rax
	jmp	.L653
.L6890:
.L2301:
	comisd	xmm5, xmm7
	je	.L6192
	comisd	xmm5, QWORD PTR .LC1[rip]
	je	.L7495
	comisd	xmm5, QWORD PTR .LC105[rip]
	setne	dl
	comisd	xmm5, QWORD PTR .LC106[rip]
	setne	al
	test	dl, al
	je	.L652
	comisd	xmm5, QWORD PTR .LC107[rip]
	je	.L652
	comisd	xmm5, QWORD PTR .LC108[rip]
	je	.L6194
	comisd	xmm5, QWORD PTR .LC109[rip]
	je	.L7496
	comisd	xmm5, QWORD PTR .LC110[rip]
	je	.L7497
	comisd	xmm5, QWORD PTR .LC111[rip]
	je	.L7498
	comisd	xmm5, QWORD PTR .LC5[rip]
	je	.L7499
	comisd	xmm5, QWORD PTR .LC112[rip]
	je	.L7500
	comisd	xmm5, QWORD PTR .LC113[rip]
	je	.L7501
	comisd	xmm5, QWORD PTR .LC114[rip]
	je	.L7502
	comisd	xmm5, QWORD PTR .LC115[rip]
	je	.L7503
	comisd	xmm5, QWORD PTR .LC116[rip]
	je	.L7504
	comisd	xmm5, QWORD PTR .LC117[rip]
	je	.L7505
	comisd	xmm5, QWORD PTR .LC6[rip]
	je	.L7506
	comisd	xmm5, QWORD PTR .LC119[rip]
	je	.L7507
	comisd	xmm5, QWORD PTR .LC120[rip]
	je	.L7508
	comisd	xmm5, QWORD PTR .LC121[rip]
	je	.L7509
	comisd	xmm5, QWORD PTR .LC122[rip]
	je	.L7510
	comisd	xmm5, QWORD PTR .LC123[rip]
	je	.L7511
	comisd	xmm5, QWORD PTR .LC124[rip]
	je	.L7512
	comisd	xmm5, QWORD PTR .LC125[rip]
	je	.L7513
	comisd	xmm5, QWORD PTR .LC126[rip]
	je	.L4575
	comisd	xmm5, QWORD PTR .LC127[rip]
	je	.L7514
	comisd	xmm5, QWORD PTR .LC128[rip]
	je	.L7515
	comisd	xmm5, QWORD PTR .LC129[rip]
	jne	.L652
.L4604:
	add	rsp, 280
	xor	r8d, r8d
	mov	ecx, 1
	or	rsi, -1
	pop	rbx
	lea	rdx, .LC3[rip]
	lea	rdi, FILENAME$[rip]
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_StrAssign@PLT
	.p2align 4,,10
	.p2align 3
.L6360:
	movzx	eax, BYTE PTR BYTES$[rip+85]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 8[rsp], xmm4
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC279[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+85]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC280[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6606:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC339[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L7145:
.L4632:
	lea	rcx, 240[rsp]
	lea	rdx, 112[rsp]
	mov	QWORD PTR 176[rsp], 0
	lea	rsi, 208[rsp]
	lea	rdi, 176[rsp]
	mov	QWORD PTR 208[rsp], 0
	lea	r8, 144[rsp]
	mov	QWORD PTR 240[rsp], 0
	mov	QWORD PTR 144[rsp], 0
	mov	QWORD PTR 112[rsp], 0
	call	fb_GetMouse64@PLT
	pxor	xmm0, xmm0
	pxor	xmm1, xmm1
	mov	QWORD PTR 394856[rbp], 0x000000000
	cvtsi2sd	xmm0, eax
	mov	rax, QWORD PTR 240[rsp]
	cvtsi2sd	xmm1, QWORD PTR 208[rsp]
	movsd	QWORD PTR 394576[rbp], xmm0
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, QWORD PTR 176[rsp]
	unpcklpd	xmm0, xmm1
	movups	XMMWORD PTR 394840[rbp], xmm0
	test	al, 1
	je	.L4636
	mov	rcx, QWORD PTR .LC1[rip]
	mov	QWORD PTR 394864[rbp], rcx
.L4636:
	test	al, 2
	je	.L4637
	mov	rcx, QWORD PTR .LC105[rip]
	mov	QWORD PTR 394864[rbp], rcx
.L4637:
	test	al, 4
	je	.L652
.L4638:
	mov	rax, QWORD PTR .LC107[rip]
	mov	QWORD PTR 394864[rbp], rax
	jmp	.L652
.L7146:
.L4635:
	cvtsd2si	esi, QWORD PTR 394848[rbp]
	cvtsd2si	edi, QWORD PTR 394840[rbp]
	add	rsp, 280
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PageCopy@PLT
.L7147:
.L4640:
	lea	rdi, 134479872[rbp]
	mov	edx, 65536
	xor	esi, esi
	movsd	QWORD PTR 8[rsp], xmm5
	mov	BYTE PTR 176[rsp], 0
	call	memset@PLT
	movsd	xmm5, QWORD PTR 8[rsp]
	movapd	xmm0, xmm5
	call	fb_DoubleToStr@PLT
	pxor	xmm0, xmm0
	mov	edx, 11
	lea	rdi, 208[rsp]
	mov	rcx, rax
	mov	r8, -1
	lea	rsi, .LC2662[rip]
	movaps	XMMWORD PTR 208[rsp], xmm0
	mov	QWORD PTR 224[rsp], 0
	call	fb_StrConcat@PLT
	pxor	xmm0, xmm0
	lea	rdi, 240[rsp]
	mov	r8d, 5
	mov	rsi, rax
	lea	rcx, .LC2663[rip]
	mov	rdx, -1
	movaps	XMMWORD PTR 240[rsp], xmm0
	mov	QWORD PTR 256[rsp], 0
	call	fb_StrConcat@PLT
	xor	r9d, r9d
	mov	r8d, 1
	xor	ecx, ecx
	mov	rdi, rax
	xor	edx, edx
	xor	esi, esi
	call	fb_FileOpen@PLT
	mov	edi, 1
	call	fb_FileSize@PLT
	mov	r12, rax
	test	rax, rax
	js	.L4641
	xor	ebx, ebx
	lea	r13, 176[rsp]
	.p2align 4,,10
	.p2align 3
.L4642:
	mov	ecx, 1
	mov	rdx, r13
	xor	esi, esi
	mov	edi, 1
	call	fb_FileGetLarge@PLT
	movzx	eax, BYTE PTR 176[rsp]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, eax
	movsd	QWORD PTR 134479872[rbp+rbx*8], xmm0
	add	rbx, 1
	cmp	r12, rbx
	jge	.L4642
.L4641:
	mov	edi, 1
	call	fb_FileClose@PLT
	jmp	.L652
.L1713:
	movsd	xmm0, QWORD PTR .LC276[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC275[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC274[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L4661:
	comisd	xmm5, QWORD PTR .LC89[rip]
	jb	.L4663
	comisd	xmm5, QWORD PTR .LC104[rip]
	ja	.L4663
.L4664:
	subsd	xmm5, QWORD PTR .LC89[rip]
	movabs	rcx, -9187201950435737471
	cvtsd2si	rsi, xmm5
	pxor	xmm5, xmm5
	mov	rax, rsi
	imul	rcx
	lea	rax, [rdx+rsi]
	mov	rdx, rsi
	sar	rdx, 63
	sar	rax, 7
	sub	rax, rdx
	mov	rdx, rax
	sal	rdx, 8
	sub	rdx, rax
	mov	rax, rsi
	sub	rax, rdx
	mov	rsi, rax
	sal	rsi, 4
	add	rsi, rax
	mov	rax, rsi
	imul	rcx
	lea	rax, [rdx+rsi]
	mov	rdx, rsi
	sar	rdx, 63
	sar	rax, 7
	sub	rax, rdx
	mov	rdx, rax
	sal	rdx, 8
	sub	rdx, rax
	mov	rax, QWORD PTR .LC274[rip]
	sub	rsi, rdx
	cvtsi2sd	xmm5, rsi
	movq	xmm4, rax
	jmp	.L653
.L6361:
	movzx	eax, BYTE PTR BYTES$[rip+85]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 8[rsp], xmm4
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC279[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC280[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L7494:
	comisd	xmm5, xmm7
	je	.L6232
.L6339:
	mov	rax, QWORD PTR .LC272[rip]
	pxor	xmm5, xmm5
	movq	xmm4, rax
	jmp	.L653
.L7245:
	movsd	xmm0, QWORD PTR .LC276[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC275[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC338[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L6362:
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 8[rsp], xmm4
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+85]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC279[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+85]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC280[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6607:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC340[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L7165:
.L4708:
	movapd	xmm0, xmm5
	movsd	QWORD PTR 16[rsp], xmm4
	movsd	QWORD PTR 8[rsp], xmm5
	call	nearbyint@PLT
	movsd	xmm1, QWORD PTR .LC299[rip]
	movsd	xmm5, QWORD PTR 8[rsp]
	cvttsd2si	rax, xmm0
	movsd	xmm4, QWORD PTR 16[rsp]
	comisd	xmm0, xmm1
	jb	.L4712
	subsd	xmm0, xmm1
	cvttsd2si	rax, xmm0
	btc	rax, 63
.L4712:
	cmp	rax, 3
	ja	.L652
	lea	rdx, tmp$2884.4[rip]
	mov	rax, QWORD PTR [rdx+rax*8]
	jmp	.L4524
.L4663:
	subsd	xmm5, QWORD PTR .LC396[rip]
	movabs	rcx, -9187201950435737471
	cvtsd2si	rsi, xmm5
	pxor	xmm5, xmm5
	mov	rax, rsi
	imul	rcx
	lea	rax, [rdx+rsi]
	mov	rdx, rsi
	sar	rdx, 63
	sar	rax, 7
	sub	rax, rdx
	mov	rdx, rax
	sal	rdx, 8
	sub	rdx, rax
	mov	rax, rsi
	sub	rax, rdx
	mov	rsi, rax
	sal	rsi, 4
	add	rsi, rax
	mov	rax, rsi
	imul	rcx
	lea	rax, [rdx+rsi]
	mov	rdx, rsi
	sar	rdx, 63
	sar	rax, 7
	sub	rax, rdx
	mov	rdx, rax
	sal	rdx, 8
	sub	rdx, rax
	mov	rax, QWORD PTR .LC273[rip]
	sub	rsi, rdx
	cvtsi2sd	xmm5, rsi
	movq	xmm4, rax
	jmp	.L653
.L6192:
.L4528:
	xor	r8d, r8d
	mov	ecx, 8
	lea	rdx, .LC2619[rip]
	mov	rsi, -1
	lea	rdi, FILENAME$[rip]
	call	fb_StrAssign@PLT
	add	rsp, 280
	xor	r8d, r8d
	mov	ecx, 5
	pop	rbx
	lea	rdx, .LC2620[rip]
	pop	rbp
	mov	rsi, -1
	pop	r12
	lea	rdi, COMPILER$[rip]
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_StrAssign@PLT
.L6363:
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 8[rsp], xmm4
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+85]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC279[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC280[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L7246:
	movsd	xmm0, QWORD PTR .LC276[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC338[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC274[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7495:
.L4531:
	xor	r8d, r8d
	mov	ecx, 8
	or	rsi, -1
	lea	rdx, .LC2619[rip]
	lea	rdi, FILENAME$[rip]
	call	fb_StrAssign@PLT
	add	rsp, 280
	xor	r8d, r8d
	mov	ecx, 14
	pop	rbx
	lea	rdx, .LC2621[rip]
	pop	rbp
	or	rsi, -1
	pop	r12
	lea	rdi, COMPILER$[rip]
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_StrAssign@PLT
.L7166:
.L4710:
	cvtsd2si	rax, QWORD PTR 394984[rbp]
	movsd	xmm0, QWORD PTR 394848[rbp]
	movsd	QWORD PTR 16[rsp], xmm4
	movsd	xmm1, QWORD PTR 394856[rbp]
	movsd	xmm7, QWORD PTR 134752968[rbp+rax*8]
	movsd	xmm2, QWORD PTR 134750088[rbp+rax*8]
	mulsd	xmm7, xmm0
	mulsd	xmm2, xmm1
	subsd	xmm7, xmm2
	movsd	QWORD PTR 394872[rbp], xmm7
	mulsd	xmm1, QWORD PTR 134752968[rbp+rax*8]
	mulsd	xmm0, QWORD PTR 134750088[rbp+rax*8]
	cvtsd2si	rax, QWORD PTR 394992[rbp]
	movsd	QWORD PTR 394848[rbp], xmm7
	movapd	xmm6, xmm1
	addsd	xmm6, xmm0
	movsd	xmm0, QWORD PTR 394840[rbp]
	movsd	QWORD PTR 394880[rbp], xmm6
	movsd	QWORD PTR 394856[rbp], xmm6
	movsd	xmm3, QWORD PTR 134752968[rbp+rax*8]
	movsd	xmm1, QWORD PTR 134750088[rbp+rax*8]
	mulsd	xmm3, xmm6
	mulsd	xmm1, xmm0
	subsd	xmm3, xmm1
	movsd	QWORD PTR 394880[rbp], xmm3
	movsd	xmm1, QWORD PTR 134750088[rbp+rax*8]
	mulsd	xmm0, QWORD PTR 134752968[rbp+rax*8]
	cvtsd2si	rax, QWORD PTR 395000[rbp]
	movsd	QWORD PTR 395024[rbp], xmm3
	mulsd	xmm1, xmm6
	addsd	xmm0, xmm1
	movsd	QWORD PTR 394864[rbp], xmm0
	movsd	QWORD PTR 394840[rbp], xmm0
	movsd	xmm2, QWORD PTR 134752968[rbp+rax*8]
	movsd	xmm1, QWORD PTR 134750088[rbp+rax*8]
	mulsd	xmm2, xmm0
	mulsd	xmm1, xmm7
	subsd	xmm2, xmm1
	movsd	QWORD PTR 394864[rbp], xmm2
	movsd	xmm1, QWORD PTR 134752968[rbp+rax*8]
	movsd	xmm8, QWORD PTR 134750088[rbp+rax*8]
	movsd	QWORD PTR 395008[rbp], xmm2
	mulsd	xmm8, xmm0
	unpcklpd	xmm0, xmm7
	mulsd	xmm1, xmm7
	addsd	xmm1, xmm8
	movsd	xmm8, QWORD PTR 394888[rbp]
	mulsd	xmm2, xmm8
	movsd	QWORD PTR 394872[rbp], xmm1
	movsd	QWORD PTR 395016[rbp], xmm1
	mulsd	xmm1, xmm8
	addsd	xmm3, QWORD PTR 394912[rbp]
	movsd	QWORD PTR 8[rsp], xmm5
	divsd	xmm2, xmm3
	divsd	xmm1, xmm3
	movupd	xmm3, XMMWORD PTR 394896[rbp]
	addsd	xmm2, QWORD PTR 394896[rbp]
	movsd	QWORD PTR 394936[rbp], xmm2
	movupd	xmm2, XMMWORD PTR 394904[rbp]
	unpckhpd	xmm2, xmm2
	addsd	xmm1, QWORD PTR 394904[rbp]
	movsd	QWORD PTR 394944[rbp], xmm1
	movupd	xmm1, XMMWORD PTR 394888[rbp]
	unpcklpd	xmm1, xmm1
	mulpd	xmm0, xmm1
	movapd	xmm1, xmm6
	unpcklpd	xmm1, xmm1
	addpd	xmm1, xmm2
	divpd	xmm0, xmm1
	addpd	xmm0, xmm3
	movups	XMMWORD PTR 394952[rbp], xmm0
	movapd	xmm0, xmm5
	call	nearbyint@PLT
	movsd	xmm1, QWORD PTR .LC299[rip]
	movsd	xmm5, QWORD PTR 8[rsp]
	cvttsd2si	rax, xmm0
	movsd	xmm4, QWORD PTR 16[rsp]
	comisd	xmm0, xmm1
	jb	.L4721
	subsd	xmm0, xmm1
	cvttsd2si	rax, xmm0
	btc	rax, 63
.L4721:
	cmp	rax, 6
	ja	.L652
	lea	rdx, tmp$2885.3[rip]
	mov	rax, QWORD PTR [rdx+rax*8]
	jmp	.L4524
.L6608:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC341[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L7247:
	movsd	xmm0, QWORD PTR .LC276[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC338[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC338[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L6364:
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 8[rsp], xmm4
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC279[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+85]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC280[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L7170:
.L4735:
	movapd	xmm0, xmm5
	movsd	QWORD PTR 16[rsp], xmm4
	movsd	QWORD PTR 8[rsp], xmm5
	call	nearbyint@PLT
	movsd	xmm1, QWORD PTR .LC299[rip]
	movsd	xmm5, QWORD PTR 8[rsp]
	cvttsd2si	rax, xmm0
	movsd	xmm4, QWORD PTR 16[rsp]
	comisd	xmm0, xmm1
	jb	.L4739
	subsd	xmm0, xmm1
	cvttsd2si	rax, xmm0
	btc	rax, 63
.L4739:
	cmp	rax, 5
	ja	.L652
	lea	rdx, tmp$2886.2[rip]
	mov	rax, QWORD PTR [rdx+rax*8]
	jmp	.L4524
.L6896:
	cmp	DWORD PTR 40[rsp], 0
	js	.L2330
	mov	edi, DWORD PTR 40[rsp]
	cvtsd2ss	xmm0, xmm0
	call	[QWORD PTR GLUNIFORM1F$[rip]]
	jmp	.L2330
.L7248:
	movsd	xmm1, QWORD PTR .LC338[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC275[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC274[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L4680:
.L4683:
	mov	edx, 1
	lea	rsi, STRCODE$[rip]
	mov	edi, 1
	call	fb_PrintString@PLT
	add	rsp, 280
	xor	r8d, r8d
	mov	ecx, 1
	pop	rbx
	lea	rdx, .LC3[rip]
	pop	rbp
	or	rsi, -1
	pop	r12
	lea	rdi, STRCODE$[rip]
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_StrAssign@PLT
.L688:
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 8[rsp], xmm4
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC279[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC280[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6365:
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	cvtsi2sd	xmm1, eax
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC279[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC280[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L7249:
	movsd	xmm2, QWORD PTR .LC338[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC275[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC338[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L6609:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC342[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L7156:
.L4674:
	xor	r8d, r8d
	xor	ecx, ecx
	xor	edx, edx
	xor	edi, edi
	mov	esi, 8
	xor	ebx, ebx
	call	fb_GfxScreen@PLT
	mov	eax, ebx
	mov	ecx, 6
	or	r8, -1
	lea	r9, 208[rsp]
	mov	edx, 8
	lea	rsi, .LC2673[rip]
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	lea	rcx, STRCODE$[rip]
	call	fb_StrConcat@PLT
	mov	ecx, 6
	or	rdx, -1
	lea	r9, 240[rsp]
	mov	rdi, r9
	mov	rsi, rax
	mov	eax, ebx
	mov	r8d, 19
	rep stosd
	mov	rdi, r9
	lea	rcx, .LC2674[rip]
	call	fb_StrConcat@PLT
	mov	rdi, rax
	call	fb_Shell@PLT
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 1
	lea	rdx, .LC3[rip]
	lea	rdi, STRCODE$[rip]
	call	fb_StrAssign@PLT
	xor	r9d, r9d
	xor	ecx, ecx
	mov	r8d, 65
	mov	edx, 32
	mov	esi, 1080
	mov	edi, 1920
	call	fb_GfxScreenRes@PLT
	mov	edi, -65536
	call	fb_Cls@PLT
	xor	esi, esi
	lea	rdi, .LC3[rip]
	call	fb_StrAllocTempDescZEx@PLT
	pxor	xmm1, xmm1
	xor	r8d, r8d
	xor	edx, edx
	mov	rcx, rax
	mov	r9d, 1073741828
	mov	esi, -16777216
	xor	edi, edi
	movaps	xmm0, xmm1
	call	fb_GfxPaint@PLT
	jmp	.L652
.L7155:
.L4671:
	xor	r8d, r8d
	xor	ecx, ecx
	xor	edx, edx
	mov	esi, 8
	xor	edi, edi
	call	fb_GfxScreen@PLT
	xor	eax, eax
	mov	ecx, 6
	or	r8, -1
	lea	r9, 240[rsp]
	mov	edx, 6
	lea	rsi, .LC2671[rip]
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	lea	rcx, STRCODE$[rip]
	call	fb_StrConcat@PLT
	mov	rdi, rax
	call	fb_Shell@PLT
	xor	r8d, r8d
	mov	ecx, 1
	lea	rdx, .LC3[rip]
	or	rsi, -1
	lea	rdi, STRCODE$[rip]
	call	fb_StrAssign@PLT
	xor	r9d, r9d
	mov	r8d, 65
	xor	ecx, ecx
	mov	edx, 32
	mov	esi, 1080
	mov	edi, 1920
	call	fb_GfxScreenRes@PLT
	mov	edi, -65536
	call	fb_Cls@PLT
	xor	esi, esi
	lea	rdi, .LC3[rip]
	call	fb_StrAllocTempDescZEx@PLT
	pxor	xmm1, xmm1
	xor	r8d, r8d
	xor	edx, edx
	mov	rcx, rax
	mov	r9d, 1073741828
	mov	esi, -16777216
	xor	edi, edi
	movaps	xmm0, xmm1
	call	fb_GfxPaint@PLT
	movsd	xmm6, QWORD PTR .LC787[rip]
	mov	QWORD PTR OFFSET$[rip], 0x000000000
	movsd	xmm2, QWORD PTR .LC73[rip]
	movsd	xmm3, QWORD PTR .LC1[rip]
	movq	rbx, xmm6
.L4675:
	movsd	xmm0, QWORD PTR 395608[rbp]
	movapd	xmm1, xmm2
	mov	rdi, rbp
	addsd	xmm0, QWORD PTR OFFSET$[rip]
	movsd	QWORD PTR 16[rsp], xmm3
	movsd	QWORD PTR 8[rsp], xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm3, QWORD PTR 16[rsp]
	movq	xmm6, rbx
	movsd	xmm0, QWORD PTR OFFSET$[rip]
	movsd	xmm2, QWORD PTR 8[rsp]
	movapd	xmm1, xmm0
	comisd	xmm6, xmm0
	addsd	xmm1, xmm3
	movsd	QWORD PTR OFFSET$[rip], xmm1
	jnb	.L4675
	jmp	.L652
.L7157:
.L4678:
	lea	r9, 240[rsp]
	xor	eax, eax
	mov	ecx, 6
	or	rdx, -1
	mov	rdi, r9
	mov	r8d, 5
	lea	rsi, STRCODE$[rip]
	rep stosd
	mov	rdi, r9
	lea	rcx, .LC2676[rip]
	call	fb_StrConcat@PLT
	xor	ecx, ecx
	xor	edx, edx
	xor	r9d, r9d
	mov	rdi, rax
	mov	r8d, 1
	mov	esi, 3
	call	fb_FileOpen@PLT
	xor	r8d, r8d
	mov	ecx, 1
	lea	rdx, .LC3[rip]
	or	rsi, -1
	lea	rdi, STRCODE$[rip]
	call	fb_StrAssign@PLT
	jmp	.L652
.L4656:
.L4667:
	pxor	xmm0, xmm0
	pxor	xmm3, xmm3
	pxor	xmm2, xmm2
	xor	r8d, r8d
	pxor	xmm1, xmm1
	cvtsd2ss	xmm0, QWORD PTR 394840[rbp]
	cvtsd2si	rsi, QWORD PTR 394824[rbp]
	cvtsd2ss	xmm3, QWORD PTR 394872[rbp]
	cvtsd2ss	xmm2, QWORD PTR 394864[rbp]
	mov	ecx, 65535
	mov	edx, 2
	cvtsd2ss	xmm1, QWORD PTR 394848[rbp]
	mov	rdi, QWORD PTR FGIMAGE$[rip]
	add	rsp, 280
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_GfxLine@PLT
.L7250:
	movsd	xmm1, QWORD PTR .LC338[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC435[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC274[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L6366:
	movsd	xmm1, QWORD PTR .LC121[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC121[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC121[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L7163:
.L4695:
	cvtsd2si	rsi, xmm5
	mov	edi, 1
	xor	eax, eax
	call	fb_CHR@PLT
	xor	esi, esi
	mov	rdi, rax
	call	fb_StrLcase2@PLT
	xor	r8d, r8d
	or	rcx, -1
	or	rsi, -1
	add	rsp, 280
	mov	rdx, rax
	lea	rdi, STRCODE$[rip]
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_StrConcatAssign@PLT
.L7162:
.L4693:
	movsd	QWORD PTR SWCH$[rip], xmm5
	jmp	.L652
.L7161:
.L4689:
	lea	rdi, STRCODE$[rip]
	call	fb_Shell@PLT
	add	rsp, 280
	xor	r8d, r8d
	mov	ecx, 1
	pop	rbx
	lea	rdx, .LC3[rip]
	pop	rbp
	or	rsi, -1
	pop	r12
	lea	rdi, STRCODE$[rip]
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_StrAssign@PLT
.L7160:
.L4687:
	xor	r8d, r8d
	xor	ecx, ecx
	xor	edx, edx
	mov	esi, 8
	xor	edi, edi
	xor	ebx, ebx
	call	fb_GfxScreen@PLT
	mov	eax, ebx
	mov	ecx, 6
	or	r8, -1
	lea	r9, 144[rsp]
	mov	edx, 17
	lea	rsi, .LC2684[rip]
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	lea	rcx, STRCODE$[rip]
	call	fb_StrConcat@PLT
	mov	ecx, 6
	mov	r8d, 2
	lea	r9, 176[rsp]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	lea	rcx, .LC171[rip]
	call	fb_StrConcat@PLT
	mov	ecx, 6
	mov	r8d, 7
	lea	r9, 208[rsp]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	lea	rcx, .LC2685[rip]
	call	fb_StrConcat@PLT
	mov	rdi, rax
	call	fb_Shell@PLT
	mov	eax, ebx
	mov	ecx, 6
	or	r8, -1
	lea	r9, 240[rsp]
	mov	edx, 4
	lea	rsi, .LC2686[rip]
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	lea	rcx, STRCODE$[rip]
	call	fb_StrConcat@PLT
	mov	rdi, rax
	call	fb_Shell@PLT
	xor	r8d, r8d
	mov	ecx, 1
	lea	rdx, .LC3[rip]
	or	rsi, -1
	lea	rdi, STRCODE$[rip]
	call	fb_StrAssign@PLT
	xor	r9d, r9d
	mov	r8d, 65
	xor	ecx, ecx
	mov	edx, 32
	mov	esi, 1080
	mov	edi, 1920
	call	fb_GfxScreenRes@PLT
	mov	edi, -65536
	call	fb_Cls@PLT
	xor	esi, esi
	lea	rdi, .LC3[rip]
	call	fb_StrAllocTempDescZEx@PLT
	pxor	xmm1, xmm1
	xor	r8d, r8d
	xor	edx, edx
	mov	rcx, rax
	mov	r9d, 1073741828
	mov	esi, -16777216
	xor	edi, edi
	movaps	xmm0, xmm1
	call	fb_GfxPaint@PLT
	movsd	xmm6, QWORD PTR .LC787[rip]
	mov	QWORD PTR OFFSET$[rip], 0x000000000
	movsd	xmm2, QWORD PTR .LC73[rip]
	movsd	xmm3, QWORD PTR .LC1[rip]
	mov	rbx, QWORD PTR .LC786[rip]
	movq	r15, xmm6
.L4690:
	movq	xmm0, rbx
	movapd	xmm1, xmm2
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm3
	addsd	xmm0, QWORD PTR SYS_OFFSET$[rip]
	movsd	QWORD PTR 8[rsp], xmm2
	cvtsd2si	rax, xmm0
	movsd	xmm0, QWORD PTR 0[rbp+rax*8]
	addsd	xmm0, QWORD PTR OFFSET$[rip]
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm3, QWORD PTR 16[rsp]
	movq	xmm6, r15
	movsd	xmm0, QWORD PTR OFFSET$[rip]
	movsd	xmm2, QWORD PTR 8[rsp]
	movapd	xmm1, xmm0
	comisd	xmm6, xmm0
	addsd	xmm1, xmm3
	movsd	QWORD PTR OFFSET$[rip], xmm1
	jnb	.L4690
	jmp	.L652
.L7159:
.L4685:
	xor	ebx, ebx
	mov	ecx, 6
	or	r8, -1
	mov	edx, 6
	lea	r9, 144[rsp]
	mov	eax, ebx
	lea	rsi, .LC2680[rip]
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	lea	rcx, STRCODE$[rip]
	call	fb_StrConcat@PLT
	mov	ecx, 6
	or	rdx, -1
	lea	r9, 176[rsp]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	r8d, 15
	rep stosd
	mov	rdi, r9
	lea	rcx, .LC2681[rip]
	call	fb_StrConcat@PLT
	mov	ecx, 6
	or	r8, -1
	lea	r9, 208[rsp]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	lea	rcx, STRCODE$[rip]
	call	fb_StrConcat@PLT
	mov	ecx, 6
	or	rdx, -1
	lea	r9, 240[rsp]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	r8d, 5
	rep stosd
	mov	rdi, r9
	lea	rcx, .LC2682[rip]
	call	fb_StrConcat@PLT
	mov	rdi, rax
	call	fb_Shell@PLT
	xor	r8d, r8d
	mov	ecx, 1
	lea	rdx, .LC3[rip]
	or	rsi, -1
	lea	rdi, STRCODE$[rip]
	call	fb_StrAssign@PLT
	jmp	.L652
.L7158:
.L4682:
	mov	edi, 1
	call	fb_FileClose@PLT
	add	rsp, 280
	xor	r8d, r8d
	mov	ecx, 1
	pop	rbx
	lea	rdx, .LC3[rip]
	pop	rbp
	or	rsi, -1
	pop	r12
	lea	rdi, STRCODE$[rip]
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_StrAssign@PLT
.L7154:
.L4669:
	xor	r8d, r8d
	xor	ecx, ecx
	xor	edx, edx
	mov	esi, 8
	xor	edi, edi
	call	fb_GfxScreen@PLT
	lea	rdi, STRCODE$[rip]
	call	fb_Chain@PLT
	xor	r8d, r8d
	mov	ecx, 1
	lea	rdx, .LC3[rip]
	or	rsi, -1
	lea	rdi, STRCODE$[rip]
	call	fb_StrAssign@PLT
	xor	r9d, r9d
	mov	r8d, 65
	xor	ecx, ecx
	mov	edx, 32
	mov	esi, 1080
	mov	edi, 1920
	call	fb_GfxScreenRes@PLT
	mov	edi, -65536
	call	fb_Cls@PLT
	xor	esi, esi
	lea	rdi, .LC3[rip]
	call	fb_StrAllocTempDescZEx@PLT
	pxor	xmm1, xmm1
	xor	r8d, r8d
	xor	edx, edx
	mov	rcx, rax
	mov	r9d, 1073741828
	mov	esi, -16777216
	xor	edi, edi
	movaps	xmm0, xmm1
	call	fb_GfxPaint@PLT
	movsd	xmm6, QWORD PTR .LC787[rip]
	mov	QWORD PTR OFFSET$[rip], 0x000000000
	movsd	xmm2, QWORD PTR .LC73[rip]
	movsd	xmm3, QWORD PTR .LC1[rip]
	movq	rbx, xmm6
.L4672:
	movsd	xmm0, QWORD PTR 395608[rbp]
	movapd	xmm1, xmm2
	mov	rdi, rbp
	addsd	xmm0, QWORD PTR OFFSET$[rip]
	movsd	QWORD PTR 16[rsp], xmm3
	movsd	QWORD PTR 8[rsp], xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm3, QWORD PTR 16[rsp]
	movq	xmm6, rbx
	movsd	xmm0, QWORD PTR OFFSET$[rip]
	movsd	xmm2, QWORD PTR 8[rsp]
	movapd	xmm1, xmm0
	comisd	xmm6, xmm0
	addsd	xmm1, xmm3
	movsd	QWORD PTR OFFSET$[rip], xmm1
	jnb	.L4672
	jmp	.L652
.L7153:
.L4666:
	pxor	xmm0, xmm0
	pxor	xmm3, xmm3
	pxor	xmm2, xmm2
	xor	r8d, r8d
	pxor	xmm1, xmm1
	cvtsd2ss	xmm0, QWORD PTR 394840[rbp]
	cvtsd2si	rsi, QWORD PTR 394832[rbp]
	cvtsd2ss	xmm3, QWORD PTR 394872[rbp]
	cvtsd2ss	xmm2, QWORD PTR 394864[rbp]
	mov	ecx, 65535
	mov	edx, 2
	cvtsd2ss	xmm1, QWORD PTR 394848[rbp]
	mov	rdi, QWORD PTR FGIMAGE$[rip]
	add	rsp, 280
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_GfxLine@PLT
.L6897:
	mov	rax, QWORD PTR 16[rsp]
	cmp	QWORD PTR 80[rsp], rax
	jne	.L2334
	mov	rax, QWORD PTR 24[rsp]
	cmp	QWORD PTR 88[rsp], rax
	jne	.L2334
	jmp	.L2340
.L6895:
	xor	r8d, r8d
	mov	ecx, 1
	or	rsi, -1
	lea	rdx, .LC3[rip]
	lea	rdi, STRCODE$[rip]
	call	fb_StrAssign@PLT
	xor	r9d, r9d
	mov	r8d, 65
	mov	ecx, 7
	mov	edx, 32
	mov	esi, 1080
	mov	edi, 1920
	call	fb_GfxScreenRes@PLT
	mov	edi, -65536
	call	fb_Cls@PLT
	movsd	xmm6, QWORD PTR .LC787[rip]
	mov	QWORD PTR OFFSET$[rip], 0x000000000
	movsd	xmm2, QWORD PTR .LC73[rip]
	movsd	xmm3, QWORD PTR .LC1[rip]
	mov	rbx, QWORD PTR .LC786[rip]
	movq	r15, xmm6
.L2326:
	movq	xmm0, rbx
	movapd	xmm1, xmm2
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm3
	addsd	xmm0, QWORD PTR SYS_OFFSET$[rip]
	movsd	QWORD PTR 8[rsp], xmm2
	cvtsd2si	rax, xmm0
	movsd	xmm0, QWORD PTR 0[rbp+rax*8]
	addsd	xmm0, QWORD PTR OFFSET$[rip]
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm3, QWORD PTR 16[rsp]
	movq	xmm6, r15
	movsd	xmm0, QWORD PTR OFFSET$[rip]
	movsd	xmm2, QWORD PTR 8[rsp]
	movapd	xmm1, xmm0
	comisd	xmm6, xmm0
	addsd	xmm1, xmm3
	movsd	QWORD PTR OFFSET$[rip], xmm1
	jnb	.L2326
.L2342:
	mov	rdi, r12
	call	_ZN9SHADERTOYD1Ev
	jmp	.L652
.L7164:
.L4706:
	mov	rax, QWORD PTR .LC269[rip]
	mov	rdi, rbp
	pxor	xmm1, xmm1
	movq	xmm0, rax
	call	_ZN8MEMORY_T6POKE64Edd
	add	rsp, 280
	xor	r8d, r8d
	mov	ecx, 1
	pop	rbx
	lea	rdx, .LC3[rip]
	pop	rbp
	or	rsi, -1
	pop	r12
	lea	rdi, FILENAME$[rip]
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_StrAssign@PLT
.L6233:
.L4703:
	cvtsd2si	rsi, xmm5
	mov	edi, 1
	xor	eax, eax
	call	fb_CHR@PLT
	xor	esi, esi
	mov	rdi, rax
	call	fb_StrLcase2@PLT
	xor	r8d, r8d
	or	rcx, -1
	or	rsi, -1
	add	rsp, 280
	mov	rdx, rax
	lea	rdi, FILENAME$[rip]
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_StrConcatAssign@PLT
.L6194:
.L4533:
	xor	r8d, r8d
	mov	ecx, 9
	or	rsi, -1
	lea	rdx, .LC2622[rip]
	lea	rdi, FILENAME$[rip]
	call	fb_StrAssign@PLT
	add	rsp, 280
	xor	r8d, r8d
	mov	ecx, 1
	pop	rbx
	lea	rdx, .LC3[rip]
	pop	rbp
	or	rsi, -1
	pop	r12
	lea	rdi, COMPILER$[rip]
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_StrAssign@PLT
.L3446:
	mov	esi, 6
	lea	rdi, .LC1828[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7253:
	movsd	xmm1, QWORD PTR .LC435[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC435[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7252:
	movsd	xmm1, QWORD PTR .LC435[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC435[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC435[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L4572:
.L4575:
	add	rsp, 280
	mov	edi, 1
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_FileClose@PLT
.L7251:
	movsd	xmm1, QWORD PTR .LC338[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC338[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC338[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L6367:
	movsd	xmm2, QWORD PTR .LC73[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 24[rsp], xmm5
	movsd	QWORD PTR 16[rsp], xmm4
	movapd	xmm1, xmm2
	movsd	QWORD PTR 8[rsp], xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm2, QWORD PTR 8[rsp]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm2, QWORD PTR 8[rsp]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 16[rsp]
	movsd	xmm5, QWORD PTR 24[rsp]
	jmp	.L5035
.L6369:
	movsd	xmm1, QWORD PTR .LC98[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6368:
	movsd	xmm1, QWORD PTR .LC86[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC86[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC86[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L2307:
	lea	rsi, FILENAME$[rip]
	mov	rdi, r12
	call	_ZN9SHADERTOY11COMPILEFILEER8FBSTRING
	mov	r9d, eax
	test	al, al
	je	.L5034
	lea	r9, 144[rsp]
	xor	eax, eax
	mov	ecx, 6
	mov	r8d, 8
	mov	rdi, r9
	or	rdx, -1
	lea	rsi, FILENAME$[rip]
	rep stosd
	mov	rdi, r9
	lea	rcx, .LC768[rip]
	call	fb_StrConcat@PLT
	mov	rdi, rax
	call	fb_GfxSetWindowTitle@PLT
	mov	edi, DWORD PTR 244[rsp]
	call	[QWORD PTR GLUSEPROGRAM$[rip]]
	pxor	xmm0, xmm0
	lea	rsi, 112[rsp]
	mov	edi, 4
	movaps	XMMWORD PTR 112[rsp], xmm0
	call	glGenTextures@PLT
	jmp	.L2320
.L4835:
.L4838:
.L4839:
	movsd	xmm0, QWORD PTR 395680[rbp]
	movsd	QWORD PTR 393240[rbp], xmm0
	jmp	.L652
.L4830:
.L4832:
.L4833:
	movsd	xmm0, QWORD PTR 395680[rbp]
	movsd	QWORD PTR 393232[rbp], xmm0
	jmp	.L652
.L5039:
	movsd	xmm4, QWORD PTR .LC268[rip]
	pxor	xmm5, xmm5
	jmp	.L653
.L6333:
	cvtsd2si	rax, xmm4
	movzx	edx, BYTE PTR BYTES$[rip+7]
	pxor	xmm0, xmm0
	movzx	edi, BYTE PTR BYTES$[rip+40]
	movzx	ecx, BYTE PTR BYTES$[rip+3]
	pxor	xmm1, xmm1
	mov	QWORD PTR Y$[rip], 0
	cvtsi2sd	xmm0, rdx
	mulsd	xmm0, QWORD PTR .LC2810[rip]
	mov	QWORD PTR X$[rip], rsi
	and	ecx, 63
	cqo
	idiv	rdi
	sal	rdx, cl
	sal	rax, cl
	cvtsi2sd	xmm1, rdx
	addsd	xmm1, xmm0
	cvtsd2si	rdx, xmm1
	pxor	xmm1, xmm1
	cvtsi2sd	xmm1, rax
	mov	QWORD PTR XS$[rip], rdx
	addsd	xmm0, xmm1
	cvtsd2si	rax, xmm0
	mov	QWORD PTR YS$[rip], rax
.L5003:
	mov	rax, QWORD PTR Y$[rip]
	pxor	xmm0, xmm0
	xor	esi, esi
	mov	rdx, QWORD PTR X$[rip]
	cvtsi2sd	xmm0, rax
	comisd	xmm0, QWORD PTR 395088[rbp]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	sete	sil
	xor	ecx, ecx
	neg	esi
	comisd	xmm0, QWORD PTR 395080[rbp]
	sete	cl
	neg	ecx
	test	esi, ecx
	jne	.L7516
	movzx	ecx, BYTE PTR BYTES$[rip+5]
	pxor	xmm0, xmm0
	add	rdx, QWORD PTR XS$[rip]
	mov	rdi, rbp
	movsd	xmm2, QWORD PTR 395032[rbp]
	add	rax, QWORD PTR YS$[rip]
	imul	rdx, rcx
	movzx	ecx, BYTE PTR BYTES$[rip+4]
	movsd	xmm1, QWORD PTR 395040[rbp]
	movzx	esi, BYTE PTR BYTES$[rip+7]
	imul	rax, rcx
	cvtsi2sd	xmm0, rdx
	add	rdx, rsi
	addsd	xmm0, xmm2
	movsd	QWORD PTR 394840[rbp], xmm0
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	add	rax, rcx
	addsd	xmm0, xmm1
	movsd	QWORD PTR 394848[rbp], xmm0
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	addsd	xmm0, xmm2
	movsd	QWORD PTR 394864[rbp], xmm0
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	mov	rax, QWORD PTR .LC2690[rip]
	addsd	xmm0, xmm1
	movsd	QWORD PTR 394872[rbp], xmm0
	movq	xmm0, rax
	call	_ZN8MEMORY_T6PEEK64Ed
	mov	rax, QWORD PTR .LC2690[rip]
	movapd	xmm1, xmm0
	movq	xmm0, rax
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rdx, QWORD PTR X$[rip]
	movzx	eax, BYTE PTR BYTES$[rip+1]
	pxor	xmm0, xmm0
	add	rdx, rax
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, QWORD PTR 395080[rbp]
	mov	QWORD PTR X$[rip], rdx
	jbe	.L5003
.L5001:
	movzx	edx, BYTE PTR [rbx]
	add	QWORD PTR Y$[rip], rax
	add	QWORD PTR C$[rip], rax
	mov	QWORD PTR X$[rip], rdx
	jmp	.L5003
.L6611:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC344[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6610:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC343[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L7516:
	movzx	eax, BYTE PTR BYTES$[rip]
	pxor	xmm5, xmm5
	movsd	xmm4, QWORD PTR .LC268[rip]
	cvtsi2sd	xmm5, eax
	jmp	.L653
.L7492:
	movsd	xmm2, QWORD PTR .LC467[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC467[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7491:
	movsd	xmm0, QWORD PTR .LC276[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC92[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7490:
	movsd	xmm2, QWORD PTR .LC92[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC92[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7489:
	movsd	xmm1, QWORD PTR .LC92[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC274[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L6860:
	comisd	xmm0, QWORD PTR .LC106[rip]
	jne	.L652
	cvtsd2si	rax, xmm4
	mov	ecx, 80
	pxor	xmm0, xmm0
	movsd	xmm1, QWORD PTR .LC73[rip]
	movsd	xmm5, QWORD PTR .LC2812[rip]
	cqo
	idiv	rcx
	sal	rdx, 3
	sal	rax, 3
	cvtsi2sd	xmm0, rdx
	addsd	xmm0, xmm1
	cvttsd2si	rdx, xmm0
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	mov	QWORD PTR XS$[rip], rdx
	addsd	xmm0, xmm1
	cvttsd2si	rax, xmm0
	mov	QWORD PTR YS$[rip], rax
	cvtsd2si	rax, QWORD PTR 395088[rbp]
	mov	QWORD PTR Y$[rip], rax
.L5012:
	cmp	QWORD PTR Y$[rip], 0
	js	.L5015
	cvtsd2si	rbx, QWORD PTR 395080[rbp]
	mov	QWORD PTR X$[rip], 0
.L5013:
	mov	rdx, QWORD PTR X$[rip]
	cmp	rdx, rbx
	jg	.L5014
	mov	rax, QWORD PTR XS$[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm7, QWORD PTR 395032[rbp]
	movsd	xmm6, QWORD PTR 395040[rbp]
	movsd	QWORD PTR 16[rsp], xmm3
	sub	rax, rdx
	movsd	QWORD PTR 8[rsp], xmm2
	cvtsi2sd	xmm1, rax
	mulsd	xmm1, QWORD PTR .LC108[rip]
	mov	rax, QWORD PTR YS$[rip]
	sub	rax, QWORD PTR Y$[rip]
	movapd	xmm0, xmm1
	subsd	xmm1, xmm2
	addsd	xmm0, xmm2
	mulsd	xmm1, xmm5
	mulsd	xmm0, xmm5
	addsd	xmm1, xmm7
	addsd	xmm0, xmm7
	movsd	QWORD PTR 394840[rbp], xmm1
	movsd	QWORD PTR 394864[rbp], xmm0
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	mulsd	xmm0, QWORD PTR .LC107[rip]
	mov	rax, QWORD PTR .LC2690[rip]
	movapd	xmm4, xmm0
	subsd	xmm0, xmm2
	addsd	xmm4, xmm2
	mulsd	xmm0, xmm5
	mulsd	xmm4, xmm5
	addsd	xmm0, xmm6
	addsd	xmm4, xmm6
	movsd	QWORD PTR 394848[rbp], xmm0
	movq	xmm0, rax
	movsd	QWORD PTR 394872[rbp], xmm4
	call	_ZN8MEMORY_T6PEEK64Ed
	mov	rax, QWORD PTR .LC2690[rip]
	movapd	xmm1, xmm0
	movq	xmm0, rax
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC2812[rip]
	add	QWORD PTR X$[rip], 1
	movsd	xmm2, QWORD PTR 8[rsp]
	movsd	xmm3, QWORD PTR 16[rsp]
	movq	xmm5, rax
	jmp	.L5013
.L6859:
	cvtsd2si	rax, xmm4
	mov	ecx, 40
	cqo
	idiv	rcx
	lea	rax, 32[0+rax*8]
	lea	rdx, 32[0+rdx*8]
	mov	QWORD PTR YS$[rip], rax
	cvtsd2si	rax, QWORD PTR 395088[rbp]
	mov	QWORD PTR XS$[rip], rdx
	mov	QWORD PTR Y$[rip], rax
	cvtsd2si	rax, QWORD PTR 395080[rbp]
	mov	QWORD PTR X$[rip], rax
.L5008:
	mov	rcx, QWORD PTR Y$[rip]
	xor	edx, edx
	mov	rsi, QWORD PTR X$[rip]
	test	rcx, rcx
	sete	dl
	xor	eax, eax
	neg	edx
	test	rsi, rsi
	sete	al
	neg	eax
	test	edx, eax
	jne	.L7517
	mov	rdx, QWORD PTR XS$[rip]
	pxor	xmm0, xmm0
	mov	rdi, rbp
	movsd	xmm2, QWORD PTR 395032[rbp]
	movsd	xmm1, QWORD PTR 395040[rbp]
	sub	rdx, rsi
	lea	rdx, [rdx+rdx*4]
	lea	rax, 2[rdx]
	sub	rdx, 2
	cvtsi2sd	xmm0, rax
	mov	rax, QWORD PTR YS$[rip]
	sub	rax, rcx
	sal	rax, 2
	addsd	xmm0, xmm2
	lea	rcx, 2[rax]
	sub	rax, 2
	movsd	QWORD PTR 394864[rbp], xmm0
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rcx
	addsd	xmm0, xmm1
	movsd	QWORD PTR 394872[rbp], xmm0
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	addsd	xmm0, xmm2
	movsd	QWORD PTR 394840[rbp], xmm0
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	mov	rax, QWORD PTR .LC2690[rip]
	addsd	xmm0, xmm1
	movsd	QWORD PTR 394848[rbp], xmm0
	movq	xmm0, rax
	call	_ZN8MEMORY_T6PEEK64Ed
	mov	rax, QWORD PTR .LC2690[rip]
	movapd	xmm1, xmm0
	movq	xmm0, rax
	call	_ZN8MEMORY_T6POKE64Edd
	sub	QWORD PTR X$[rip], 1
	jns	.L5008
.L5006:
	cvtsd2si	rax, QWORD PTR 395080[rbp]
	sub	QWORD PTR Y$[rip], 1
	add	QWORD PTR C$[rip], 1
	mov	QWORD PTR X$[rip], rax
	jmp	.L5008
.L5014:
	pxor	xmm0, xmm0
	sub	QWORD PTR Y$[rip], 1
	cvtsi2sd	xmm0, QWORD PTR C$[rip]
	addsd	xmm0, xmm3
	cvttsd2si	rax, xmm0
	mov	QWORD PTR C$[rip], rax
	jmp	.L5012
.L6617:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC350[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6616:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC349[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6615:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC348[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6614:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC347[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6613:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC346[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6612:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC345[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L5015:
	mov	rdi, QWORD PTR YS$[rip]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdi
	addsd	xmm0, QWORD PTR .LC111[rip]
	add	rsp, 280
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	cvttsd2si	esi, xmm0
	pop	r14
	pop	r15
	jmp	fb_GfxUnlock@PLT
.L7517:
	mov	rdi, QWORD PTR YS$[rip]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdi
	addsd	xmm0, QWORD PTR .LC111[rip]
	add	rsp, 280
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	cvttsd2si	esi, xmm0
	pop	r14
	pop	r15
	jmp	fb_GfxUnlock@PLT
.L6633:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC365[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6632:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC364[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6631:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC363[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6630:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC362[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6629:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC361[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6628:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC360[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6627:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC359[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6626:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC358[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6625:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC357[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6624:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC356[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6623:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC355[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6622:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6621:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC353[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6620:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6619:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC352[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6618:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC351[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6665:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC394[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6664:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC393[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6663:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC392[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6662:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC391[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6661:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC390[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6660:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC389[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6659:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC388[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6658:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC387[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6657:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC386[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6656:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC260[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6655:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC385[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6654:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC384[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6653:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC383[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6652:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC382[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6651:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC381[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6650:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC380[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6649:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC379[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6648:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC378[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6647:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC377[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6646:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC376[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6645:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC375[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6644:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC374[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6643:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC373[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6642:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC372[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6641:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC371[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6640:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC370[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6639:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC369[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6638:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC368[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6637:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC367[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6636:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC259[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6635:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC352[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6634:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC366[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6434:
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 8[rsp], xmm4
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC286[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC293[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6433:
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 8[rsp], xmm4
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC286[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6432:
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 8[rsp], xmm4
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC286[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC295[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6431:
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 8[rsp], xmm4
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC286[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC280[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6430:
	movsd	xmm1, QWORD PTR .LC295[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC286[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC280[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6429:
	movsd	xmm1, QWORD PTR .LC294[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC286[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC280[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6428:
	movsd	xmm1, QWORD PTR .LC293[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC286[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC280[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6427:
	movsd	xmm1, QWORD PTR .LC286[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC286[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC280[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6426:
	movsd	xmm1, QWORD PTR .LC290[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC163[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC280[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6425:
	movsd	xmm1, QWORD PTR .LC290[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC291[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC280[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6424:
	movsd	xmm1, QWORD PTR .LC290[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC292[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC280[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6423:
	movsd	xmm1, QWORD PTR .LC290[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC279[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC280[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6422:
	movsd	xmm1, QWORD PTR .LC290[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC279[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC292[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6421:
	movsd	xmm1, QWORD PTR .LC290[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC279[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC291[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6420:
	movsd	xmm1, QWORD PTR .LC290[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC279[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC163[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6419:
	movsd	xmm2, QWORD PTR .LC290[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC279[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC290[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6418:
	movsd	xmm1, QWORD PTR .LC163[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC279[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC290[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6417:
	movsd	xmm1, QWORD PTR .LC291[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC279[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC290[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6416:
	movsd	xmm1, QWORD PTR .LC292[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC279[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC290[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6415:
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 8[rsp], xmm4
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC279[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC290[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6414:
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 8[rsp], xmm4
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC292[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC290[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6413:
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 8[rsp], xmm4
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC291[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC290[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6412:
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 8[rsp], xmm4
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC163[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC290[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6411:
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 8[rsp], xmm4
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC290[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC290[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6410:
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 8[rsp], xmm4
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC290[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC163[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6409:
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 8[rsp], xmm4
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC290[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC291[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6408:
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 8[rsp], xmm4
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC290[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC292[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6407:
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 8[rsp], xmm4
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC290[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC280[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6406:
	movsd	xmm1, QWORD PTR .LC292[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC290[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC280[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6405:
	movsd	xmm1, QWORD PTR .LC291[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC290[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC280[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6404:
	movsd	xmm1, QWORD PTR .LC163[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC290[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC280[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6403:
	movsd	xmm1, QWORD PTR .LC290[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC290[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC280[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6402:
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	cvtsi2sd	xmm1, eax
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC280[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6401:
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	cvtsi2sd	xmm1, eax
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC290[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC280[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6400:
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	cvtsi2sd	xmm1, eax
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC291[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC280[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6399:
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	cvtsi2sd	xmm1, eax
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC279[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC280[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6398:
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	cvtsi2sd	xmm1, eax
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC279[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC291[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6397:
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	cvtsi2sd	xmm1, eax
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC279[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC290[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6396:
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	cvtsi2sd	xmm1, eax
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC279[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6395:
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	cvtsi2sd	xmm1, eax
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC279[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC280[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6394:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC279[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC280[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6393:
	movsd	xmm1, QWORD PTR .LC290[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC279[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC280[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6392:
	movsd	xmm1, QWORD PTR .LC291[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC279[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC280[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6391:
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 8[rsp], xmm4
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC279[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC280[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6390:
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 8[rsp], xmm4
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC291[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC280[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6389:
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 8[rsp], xmm4
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC290[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC280[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6388:
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 8[rsp], xmm4
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC280[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6387:
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 8[rsp], xmm4
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC279[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC280[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6386:
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 8[rsp], xmm4
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC279[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6385:
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 8[rsp], xmm4
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC279[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC290[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6384:
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 8[rsp], xmm4
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC279[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC291[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6383:
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 8[rsp], xmm4
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC279[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC280[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6382:
	movsd	xmm1, QWORD PTR .LC291[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC279[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC280[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6381:
	movsd	xmm1, QWORD PTR .LC290[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC279[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC280[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6380:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC279[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC280[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L5164:
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	cvtsi2sd	xmm1, eax
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC279[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC280[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6379:
	movsd	xmm1, QWORD PTR .LC288[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC288[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC288[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6378:
	movsd	xmm1, QWORD PTR .LC287[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC287[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC287[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6377:
	movsd	xmm1, QWORD PTR .LC286[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC286[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC286[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6376:
	movsd	xmm1, QWORD PTR .LC285[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC285[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC285[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6375:
	movsd	xmm1, QWORD PTR .LC151[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC151[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC151[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6374:
	movsd	xmm1, QWORD PTR .LC135[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC135[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC135[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6373:
	movsd	xmm1, QWORD PTR .LC284[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6372:
	movsd	xmm1, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC283[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC283[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6729:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC512[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6728:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC510[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6727:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC509[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6726:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC507[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6725:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC505[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6724:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC503[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6723:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC501[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6722:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC499[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6721:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC497[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6720:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC495[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6719:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC493[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6718:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC491[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6717:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC489[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6716:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC487[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6715:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC486[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6714:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC484[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6713:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC482[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6712:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC480[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6711:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC478[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6710:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC476[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6709:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC474[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6708:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC284[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6707:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC472[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6706:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC470[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6705:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC468[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6704:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC466[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6703:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC464[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6702:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC462[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6701:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC460[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6700:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC458[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6699:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC457[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6698:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC455[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6697:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC453[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6696:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC451[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6695:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC449[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6694:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC447[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6693:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC445[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6692:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC443[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6691:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC442[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6690:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC440[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6689:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC438[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6688:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC436[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6687:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC434[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6686:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC432[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6685:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC430[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6684:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC428[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6683:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC427[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6682:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC425[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6681:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC423[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6680:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC421[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6679:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC419[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6678:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC417[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6677:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC415[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6676:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC413[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6675:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC411[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6674:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC409[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6673:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC407[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6672:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC405[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6671:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC404[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6670:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC402[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6669:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC400[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6668:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC398[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6667:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC397[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6666:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC395[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6857:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC726[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6856:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC724[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6855:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC722[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6854:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC720[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6853:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC718[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6852:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC716[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6851:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC714[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6850:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC712[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6849:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC710[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6848:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC708[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6847:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC706[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6846:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC704[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6845:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC702[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6844:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC700[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6843:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC698[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6842:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC696[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6841:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC694[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6840:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC692[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6839:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC690[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6838:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC688[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6837:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC687[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6836:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC685[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6835:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC683[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6834:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC681[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6833:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC679[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6832:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC677[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6831:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC675[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6830:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC673[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6829:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC672[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6828:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC670[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6827:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC668[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6826:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC666[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6825:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC665[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6824:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC663[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6823:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC661[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6822:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC659[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6821:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC658[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6820:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC656[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6819:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC654[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6818:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC652[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6817:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC650[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6816:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC648[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6815:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC646[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6814:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC644[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6813:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC642[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6812:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC640[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6811:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC638[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6810:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC636[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6809:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC634[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6808:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC632[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6807:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC630[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6806:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC628[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6805:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC626[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6804:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC625[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6803:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC623[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6802:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC621[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6801:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC619[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6800:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC618[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6799:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC616[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6798:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC614[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6797:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC612[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6796:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC610[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6795:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC608[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6794:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC606[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6793:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC604[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6792:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC603[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6791:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC601[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6790:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC599[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6789:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC597[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6788:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC595[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6787:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC593[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6786:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC591[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6785:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC589[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6784:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC588[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6783:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC586[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6782:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC584[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6781:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC582[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6780:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, xmm1
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6779:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC579[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6778:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC577[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6777:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC575[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6776:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC573[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6775:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC571[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6774:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC569[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6773:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC567[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6772:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC566[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6771:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC564[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6770:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC562[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6769:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC560[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6768:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC558[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6767:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC556[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6766:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC554[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6765:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC552[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6764:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC551[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6763:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC549[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6762:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC547[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6761:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC545[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6760:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC544[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6759:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC543[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6758:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC542[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6757:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC541[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6756:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC540[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6755:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC539[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6754:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC538[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6753:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC537[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6752:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC536[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6751:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC535[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6750:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC534[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6749:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC533[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6748:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC532[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6747:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC531[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6746:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC530[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6745:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC529[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6744:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC528[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6743:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC527[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6742:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC526[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6741:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC525[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6740:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC524[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6739:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC523[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6738:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC522[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6737:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC521[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6736:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC520[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6735:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC519[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6734:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC518[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6733:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC517[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6732:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC516[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6731:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC515[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6730:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC514[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L6371:
	movsd	xmm1, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC282[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC282[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6370:
	movsd	xmm1, QWORD PTR .LC281[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC281[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC281[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L7196:
.L4828:
	movsd	xmm0, QWORD PTR 395120[rbp]
	movsd	QWORD PTR 395920[rbp], xmm0
	jmp	.L652
.L7195:
.L4826:
	movsd	xmm0, QWORD PTR 394888[rbp]
	movsd	QWORD PTR 395920[rbp], xmm0
	jmp	.L652
.L7197:
.L4856:
	movsd	xmm0, QWORD PTR 395680[rbp]
	movsd	QWORD PTR 394864[rbp], xmm0
	jmp	.L652
.L4853:
.L4857:
	movsd	xmm0, QWORD PTR 395680[rbp]
	movsd	QWORD PTR 394840[rbp], xmm0
	jmp	.L652
.L4847:
.L4850:
.L4851:
	movsd	xmm0, QWORD PTR 395680[rbp]
	movsd	QWORD PTR 393256[rbp], xmm0
	jmp	.L652
.L4841:
.L4844:
.L4845:
	movsd	xmm0, QWORD PTR 395680[rbp]
	movsd	QWORD PTR 393248[rbp], xmm0
	jmp	.L652
.L6289:
.L4874:
	movsd	xmm0, QWORD PTR 394848[rbp]
	movsd	QWORD PTR 395680[rbp], xmm0
	jmp	.L652
.L7203:
.L4872:
	movsd	xmm0, QWORD PTR 394840[rbp]
	movsd	QWORD PTR 395680[rbp], xmm0
	jmp	.L652
.L7202:
.L4870:
	movsd	xmm0, QWORD PTR 395680[rbp]
	movsd	QWORD PTR 394832[rbp], xmm0
	jmp	.L652
.L7201:
.L4868:
	movsd	xmm0, QWORD PTR 395680[rbp]
	movsd	QWORD PTR 394824[rbp], xmm0
	jmp	.L652
.L7200:
.L4866:
	movsd	xmm0, QWORD PTR 395680[rbp]
	movsd	QWORD PTR 394880[rbp], xmm0
	jmp	.L652
.L7199:
.L4864:
	movsd	xmm0, QWORD PTR 395680[rbp]
	movsd	QWORD PTR 394856[rbp], xmm0
	jmp	.L652
.L7198:
.L4861:
	movsd	xmm0, QWORD PTR 395680[rbp]
	movsd	QWORD PTR 394872[rbp], xmm0
	jmp	.L652
.L4859:
.L4862:
	movsd	xmm0, QWORD PTR 395680[rbp]
	movsd	QWORD PTR 394848[rbp], xmm0
	jmp	.L652
.L7194:
.L4824:
	movsd	xmm0, QWORD PTR 394904[rbp]
	movsd	QWORD PTR 395760[rbp], xmm0
	jmp	.L652
.L7193:
.L4822:
	movsd	xmm0, QWORD PTR 394896[rbp]
	movsd	QWORD PTR 395760[rbp], xmm0
	jmp	.L652
.L7192:
.L4820:
	movsd	xmm0, QWORD PTR 394888[rbp]
	movsd	QWORD PTR 395760[rbp], xmm0
	jmp	.L652
.L7191:
.L4818:
	movsd	xmm0, QWORD PTR 394904[rbp]
	movsd	QWORD PTR 395680[rbp], xmm0
	jmp	.L652
.L7190:
.L4816:
	movsd	xmm0, QWORD PTR 394896[rbp]
	movsd	QWORD PTR 395680[rbp], xmm0
	jmp	.L652
.L7189:
.L4814:
	movsd	xmm0, QWORD PTR 394888[rbp]
	movsd	QWORD PTR 395680[rbp], xmm0
	jmp	.L652
.L7188:
.L4812:
	movsd	xmm0, QWORD PTR 394904[rbp]
	movsd	QWORD PTR 396000[rbp], xmm0
	jmp	.L652
.L7187:
.L4810:
	movsd	xmm0, QWORD PTR 394896[rbp]
	movsd	QWORD PTR 396000[rbp], xmm0
	jmp	.L652
.L7186:
.L4808:
	movsd	xmm0, QWORD PTR 394888[rbp]
	movsd	QWORD PTR 396000[rbp], xmm0
	jmp	.L652
.L7185:
.L4806:
	cvtsd2si	rax, QWORD PTR 396088[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	r9, QWORD PTR 396096[rbp]
	cvtsd2si	r8, QWORD PTR 396104[rbp]
	cvtsd2si	rdi, QWORD PTR 396112[rbp]
	cvtsd2si	rsi, QWORD PTR 396120[rbp]
	sal	rax, 56
	cvtsd2si	rcx, QWORD PTR 396128[rbp]
	sal	r9, 48
	cvtsd2si	rdx, QWORD PTR 396136[rbp]
	add	rax, r9
	sal	r8, 40
	add	rax, r8
	sal	rdi, 32
	add	rax, rdi
	sal	rsi, 24
	add	rax, rsi
	sal	rcx, 16
	add	rax, rcx
	sal	rdx, 8
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 396144[rbp]
	movsd	QWORD PTR 396080[rbp], xmm0
	jmp	.L652
.L7184:
.L4804:
	cvtsd2si	rax, QWORD PTR 396008[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	r9, QWORD PTR 396016[rbp]
	cvtsd2si	r8, QWORD PTR 396024[rbp]
	cvtsd2si	rdi, QWORD PTR 396032[rbp]
	cvtsd2si	rsi, QWORD PTR 396040[rbp]
	sal	rax, 56
	cvtsd2si	rcx, QWORD PTR 396048[rbp]
	sal	r9, 48
	cvtsd2si	rdx, QWORD PTR 396056[rbp]
	add	rax, r9
	sal	r8, 40
	add	rax, r8
	sal	rdi, 32
	add	rax, rdi
	sal	rsi, 24
	add	rax, rsi
	sal	rcx, 16
	add	rax, rcx
	sal	rdx, 8
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 396064[rbp]
	movsd	QWORD PTR 396000[rbp], xmm0
	jmp	.L652
.L7183:
.L4802:
	cvtsd2si	rax, QWORD PTR 395928[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	r9, QWORD PTR 395936[rbp]
	cvtsd2si	r8, QWORD PTR 395944[rbp]
	cvtsd2si	rdi, QWORD PTR 395952[rbp]
	cvtsd2si	rsi, QWORD PTR 395960[rbp]
	sal	rax, 56
	cvtsd2si	rcx, QWORD PTR 395968[rbp]
	sal	r9, 48
	cvtsd2si	rdx, QWORD PTR 395976[rbp]
	add	rax, r9
	sal	r8, 40
	add	rax, r8
	sal	rdi, 32
	add	rax, rdi
	sal	rsi, 24
	add	rax, rsi
	sal	rcx, 16
	add	rax, rcx
	sal	rdx, 8
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 395984[rbp]
	movsd	QWORD PTR 395920[rbp], xmm0
	jmp	.L652
.L7182:
.L4800:
	cvtsd2si	rax, QWORD PTR 395848[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	r9, QWORD PTR 395856[rbp]
	cvtsd2si	r8, QWORD PTR 395864[rbp]
	cvtsd2si	rdi, QWORD PTR 395872[rbp]
	cvtsd2si	rsi, QWORD PTR 395880[rbp]
	sal	rax, 56
	cvtsd2si	rcx, QWORD PTR 395888[rbp]
	sal	r9, 48
	cvtsd2si	rdx, QWORD PTR 395896[rbp]
	add	rax, r9
	sal	r8, 40
	add	rax, r8
	sal	rdi, 32
	add	rax, rdi
	sal	rsi, 24
	add	rax, rsi
	sal	rcx, 16
	add	rax, rcx
	sal	rdx, 8
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 395904[rbp]
	movsd	QWORD PTR 395840[rbp], xmm0
	jmp	.L652
.L7181:
.L4798:
	cvtsd2si	rax, QWORD PTR 395768[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	r9, QWORD PTR 395776[rbp]
	cvtsd2si	r8, QWORD PTR 395784[rbp]
	cvtsd2si	rdi, QWORD PTR 395792[rbp]
	cvtsd2si	rsi, QWORD PTR 395800[rbp]
	sal	rax, 56
	cvtsd2si	rcx, QWORD PTR 395808[rbp]
	sal	r9, 48
	cvtsd2si	rdx, QWORD PTR 395816[rbp]
	add	rax, r9
	sal	r8, 40
	add	rax, r8
	sal	rdi, 32
	add	rax, rdi
	sal	rsi, 24
	add	rax, rsi
	sal	rcx, 16
	add	rax, rcx
	sal	rdx, 8
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 395824[rbp]
	movsd	QWORD PTR 395760[rbp], xmm0
	jmp	.L652
.L7180:
.L4796:
	cvtsd2si	rax, QWORD PTR 395688[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	r9, QWORD PTR 395696[rbp]
	cvtsd2si	r8, QWORD PTR 395704[rbp]
	cvtsd2si	rdi, QWORD PTR 395712[rbp]
	cvtsd2si	rsi, QWORD PTR 395720[rbp]
	sal	rax, 56
	cvtsd2si	rcx, QWORD PTR 395728[rbp]
	sal	r9, 48
	cvtsd2si	rdx, QWORD PTR 395736[rbp]
	add	rax, r9
	sal	r8, 40
	add	rax, r8
	sal	rdi, 32
	add	rax, rdi
	sal	rsi, 24
	add	rax, rsi
	sal	rcx, 16
	add	rax, rcx
	sal	rdx, 8
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 395744[rbp]
	movsd	QWORD PTR 395680[rbp], xmm0
	jmp	.L652
.L7179:
.L4794:
	cvtsd2si	rax, QWORD PTR 395632[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rsi, QWORD PTR 395640[rbp]
	cvtsd2si	rcx, QWORD PTR 395648[rbp]
	cvtsd2si	rdx, QWORD PTR 395656[rbp]
	sal	rax, 32
	sal	rsi, 24
	add	rax, rsi
	sal	rcx, 16
	add	rax, rcx
	sal	rdx, 8
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 395664[rbp]
	movsd	QWORD PTR 395624[rbp], xmm0
	jmp	.L652
.L6594:
	movsd	xmm1, QWORD PTR .LC86[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC90[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6593:
	movsd	xmm1, QWORD PTR .LC86[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC94[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6592:
	movsd	xmm1, QWORD PTR .LC86[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC102[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6591:
	movsd	xmm1, QWORD PTR .LC86[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6590:
	movsd	xmm1, QWORD PTR .LC86[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC102[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6589:
	movsd	xmm1, QWORD PTR .LC86[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC94[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6588:
	movsd	xmm1, QWORD PTR .LC86[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC90[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6587:
	movsd	xmm2, QWORD PTR .LC86[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC86[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6586:
	movsd	xmm1, QWORD PTR .LC90[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC86[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6585:
	movsd	xmm1, QWORD PTR .LC94[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC86[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6584:
	movsd	xmm1, QWORD PTR .LC102[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC86[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6583:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC86[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6582:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC102[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC86[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6581:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC94[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC86[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6580:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC90[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC86[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6579:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC86[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC86[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6578:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC86[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC90[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6577:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC86[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC94[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6576:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC86[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC102[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6575:
	movsd	xmm2, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC86[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6574:
	movsd	xmm1, QWORD PTR .LC102[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC86[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6573:
	movsd	xmm1, QWORD PTR .LC94[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC86[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6572:
	movsd	xmm1, QWORD PTR .LC90[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC86[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6571:
	movsd	xmm1, QWORD PTR .LC86[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC86[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6570:
	movsd	xmm1, QWORD PTR .LC73[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+40]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC279[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6569:
	movsd	xmm1, QWORD PTR .LC73[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC90[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6568:
	movsd	xmm1, QWORD PTR .LC73[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6567:
	movsd	xmm1, QWORD PTR .LC73[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6566:
	movsd	xmm1, QWORD PTR .LC73[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6565:
	movsd	xmm1, QWORD PTR .LC73[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC90[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6564:
	movsd	xmm1, QWORD PTR .LC73[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+40]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC280[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6563:
	movsd	xmm2, QWORD PTR .LC73[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 24[rsp], xmm5
	movsd	QWORD PTR 16[rsp], xmm4
	movapd	xmm1, xmm2
	movsd	QWORD PTR 8[rsp], xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm2, QWORD PTR 8[rsp]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 16[rsp]
	movsd	xmm5, QWORD PTR 24[rsp]
	jmp	.L5035
.L7515:
.L4577:
	mov	rax, QWORD PTR SCR_H$[rip]
	pxor	xmm0, xmm0
	pxor	xmm3, xmm3
	movups	XMMWORD PTR 394840[rbp], xmm0
	cvtsi2ss	xmm3, rax
	test	rax, rax
	jns	.L4606
	mov	rdx, rax
	and	eax, 1
	pxor	xmm3, xmm3
	shr	rdx
	or	rdx, rax
	cvtsi2ss	xmm3, rdx
	addss	xmm3, xmm3
.L4606:
	mov	rax, QWORD PTR SCR_W$[rip]
	pxor	xmm2, xmm2
	cvtsi2ss	xmm2, rax
	test	rax, rax
	jns	.L4608
	mov	rdx, rax
	and	eax, 1
	pxor	xmm2, xmm2
	shr	rdx
	or	rdx, rax
	cvtsi2ss	xmm2, rdx
	addss	xmm2, xmm2
.L4608:
	pxor	xmm1, xmm1
	mov	rdi, QWORD PTR FGIMAGE$[rip]
	xor	r8d, r8d
	mov	ecx, 65535
	movaps	xmm0, xmm1
	mov	edx, 2
	mov	esi, -16777216
	call	fb_GfxLine@PLT
	xor	r9d, r9d
	mov	r8d, 1
	xor	ecx, ecx
	xor	edx, edx
	xor	esi, esi
	lea	rdi, FILENAME$[rip]
	call	fb_FileOpen@PLT
	pxor	xmm0, xmm0
	mov	QWORD PTR SCR_POS$[rip], 0
	mov	QWORD PTR 394912[rbp], 0x000000000
	movups	XMMWORD PTR 394896[rbp], xmm0
.L4609:
	mov	edi, 1
	call	fb_FileEof@PLT
	test	eax, eax
	jne	.L7518
	xor	ecx, ecx
	or	rdx, -1
	mov	edi, 1
	lea	rsi, STRCODE$[rip]
	call	fb_FileLineInput@PLT
	or	rsi, -1
	lea	rdi, STRCODE$[rip]
	mov	WORD PTR INDEX$[rip], 1
	call	fb_StrLen@PLT
	mov	ebx, eax
	jmp	.L4612
.L4619:
	mov	rax, QWORD PTR .LC73[rip]
	movq	xmm0, rax
	addsd	xmm1, xmm0
	movsd	QWORD PTR 394888[rbp], xmm1
.L4613:
	addsd	xmm0, QWORD PTR 394888[rbp]
	pxor	xmm1, xmm1
	mov	rdx, QWORD PTR SCR_POS$[rip]
	cvtsd2si	rax, xmm0
	pxor	xmm0, xmm0
	and	eax, 63
	cvtsi2sd	xmm1, rax
	movzx	eax, WORD PTR INDEX$[rip]
	lea	rax, 16383[rdx+rax]
	cvtsi2sd	xmm0, rax
	test	rax, rax
	jns	.L4615
	mov	rdx, rax
	and	eax, 1
	pxor	xmm0, xmm0
	shr	rdx
	or	rdx, rax
	cvtsi2sd	xmm0, rdx
	addsd	xmm0, xmm0
.L4615:
	mov	rdi, rbp
	call	_ZN8MEMORY_T5POKEBEdd
	add	WORD PTR INDEX$[rip], 1
.L4612:
	movzx	eax, WORD PTR INDEX$[rip]
	cmp	ax, bx
	ja	.L4616
	mov	edx, 1
	movzx	esi, ax
	lea	rdi, STRCODE$[rip]
	call	fb_StrMid@PLT
	mov	esi, 1
	mov	rdi, rax
	call	fb_ASC@PLT
	pxor	xmm1, xmm1
	mov	edx, eax
	cvtsi2sd	xmm1, rdx
	xor	edx, edx
	cmp	eax, 31
	seta	dl
	neg	edx
	cmp	eax, 64
	sbb	eax, eax
	test	edx, eax
	jne	.L4619
	mov	rax, QWORD PTR .LC73[rip]
	movsd	QWORD PTR 394888[rbp], xmm1
	movq	xmm0, rax
	jmp	.L4613
.L4616:
	add	QWORD PTR SCR_POS$[rip], 90
	jmp	.L4609
.L7518:
	mov	QWORD PTR 394912[rbp], 0x000000000
	mov	edi, 1
	mov	QWORD PTR SCR_POS$[rip], 5400
	call	fb_FileClose@PLT
	xor	r8d, r8d
	mov	ecx, 27
	lea	rdx, .LC2657[rip]
	or	rsi, -1
	lea	rdi, STRCODE$[rip]
	call	fb_StrAssign@PLT
	or	rsi, -1
	lea	rdi, STRCODE$[rip]
	mov	WORD PTR INDEX$[rip], 1
	call	fb_StrLen@PLT
	mov	ebx, eax
	jmp	.L4611
.L4626:
	mov	rax, QWORD PTR .LC73[rip]
	movq	xmm0, rax
	addsd	xmm1, xmm0
	movsd	QWORD PTR 394888[rbp], xmm1
.L4620:
	addsd	xmm0, QWORD PTR 394888[rbp]
	pxor	xmm1, xmm1
	mov	rdx, QWORD PTR SCR_POS$[rip]
	cvtsd2si	rax, xmm0
	pxor	xmm0, xmm0
	and	eax, 63
	cvtsi2sd	xmm1, rax
	movzx	eax, WORD PTR INDEX$[rip]
	lea	rax, 16383[rdx+rax]
	cvtsi2sd	xmm0, rax
	test	rax, rax
	jns	.L4622
	mov	rdx, rax
	and	eax, 1
	pxor	xmm0, xmm0
	shr	rdx
	or	rdx, rax
	cvtsi2sd	xmm0, rdx
	addsd	xmm0, xmm0
.L4622:
	mov	rdi, rbp
	call	_ZN8MEMORY_T5POKEBEdd
	add	WORD PTR INDEX$[rip], 1
.L4611:
	movzx	eax, WORD PTR INDEX$[rip]
	cmp	ax, bx
	ja	.L4623
	mov	edx, 1
	movzx	esi, ax
	lea	rdi, STRCODE$[rip]
	call	fb_StrMid@PLT
	mov	esi, 1
	mov	rdi, rax
	call	fb_ASC@PLT
	pxor	xmm1, xmm1
	mov	edx, eax
	cvtsi2sd	xmm1, rdx
	xor	edx, edx
	cmp	eax, 31
	seta	dl
	neg	edx
	cmp	eax, 64
	sbb	eax, eax
	test	edx, eax
	jne	.L4626
	mov	rax, QWORD PTR .LC73[rip]
	movsd	QWORD PTR 394888[rbp], xmm1
	movq	xmm0, rax
	jmp	.L4620
.L4623:
	xor	r8d, r8d
	mov	ecx, 1
	or	rsi, -1
	mov	QWORD PTR SCR_POS$[rip], 0
	lea	rdx, .LC3[rip]
	lea	rdi, STRCODE$[rip]
	call	fb_StrAssign@PLT
	mov	rbx, QWORD PTR fb_hPutPSet@GOTPCREL[rip]
	push	0
	xor	edi, edi
	push	0
	pxor	xmm1, xmm1
	mov	ecx, -65536
	mov	edx, -65536
	push	-1
	mov	rsi, QWORD PTR FGIMAGE$[rip]
	mov	r9d, -65536
	movaps	xmm0, xmm1
	push	rbx
	mov	r8d, -65536
	push	1
	push	0
	call	fb_GfxPut@PLT
	add	rsp, 48
	or	edi, -1
	call	fb_Sleep@PLT
	mov	rax, QWORD PTR SCR_H$[rip]
	pxor	xmm3, xmm3
	cvtsi2ss	xmm3, rax
	test	rax, rax
	jns	.L4628
	mov	rdx, rax
	and	eax, 1
	pxor	xmm3, xmm3
	shr	rdx
	or	rdx, rax
	cvtsi2ss	xmm3, rdx
	addss	xmm3, xmm3
.L4628:
	mov	rax, QWORD PTR SCR_W$[rip]
	pxor	xmm2, xmm2
	cvtsi2ss	xmm2, rax
	test	rax, rax
	jns	.L4630
	mov	rdx, rax
	and	eax, 1
	pxor	xmm2, xmm2
	shr	rdx
	or	rdx, rax
	cvtsi2ss	xmm2, rdx
	addss	xmm2, xmm2
.L4630:
	pxor	xmm1, xmm1
	mov	rdi, QWORD PTR FGIMAGE$[rip]
	xor	r8d, r8d
	mov	ecx, 65535
	movaps	xmm0, xmm1
	mov	edx, 2
	mov	esi, -16777216
	call	fb_GfxLine@PLT
	push	0
	pxor	xmm1, xmm1
	mov	ecx, -65536
	push	0
	mov	rsi, QWORD PTR FGIMAGE$[rip]
	mov	edx, -65536
	xor	edi, edi
	push	-1
	mov	r9d, -65536
	mov	r8d, -65536
	movaps	xmm0, xmm1
	push	rbx
	push	1
	push	0
	call	fb_GfxPut@PLT
	add	rsp, 48
	jmp	.L652
.L6894:
	xor	r8d, r8d
	mov	ecx, 32
	mov	edx, -16777216
	xor	r15d, r15d
	mov	esi, 512
	mov	edi, 512
	call	fb_GfxImageCreate@PLT
	mov	QWORD PTR 16[rsp], rbp
	movss	xmm2, DWORD PTR .LC770[rip]
	mov	QWORD PTR FGIMAGE$[rip], rax
.L2311:
	mov	rdx, r15
	pxor	xmm1, xmm1
	mov	rbp, r15
	xor	ebx, ebx
	sal	rdx, 9
	cvtsi2sd	xmm1, rdx
	mulsd	xmm1, QWORD PTR .LC769[rip]
	cvtsd2ss	xmm1, xmm1
	.p2align 4,,10
	.p2align 3
.L2312:
	pxor	xmm0, xmm0
	mov	r8d, 1
	mov	ecx, 65535
	mov	edx, 2
	cvtsi2sd	xmm0, rbx
	mulsd	xmm0, QWORD PTR .LC769[rip]
	mov	esi, -16777216
	cvtsd2ss	xmm0, xmm0
	test	bpl, 1
	jne	.L6340
.L2313:
	mov	esi, -1
.L6340:
	mov	rdi, QWORD PTR FGIMAGE$[rip]
	movaps	xmm3, xmm2
	movss	DWORD PTR 8[rsp], xmm1
	add	rbx, 512
	add	rbp, 1
	call	fb_GfxLine@PLT
	cmp	rbx, 16896
	movss	xmm1, DWORD PTR 8[rsp]
	movss	xmm2, DWORD PTR .LC770[rip]
	jne	.L2312
.L2315:
.L2316:
	add	r15, 1
	cmp	r15, 33
	jne	.L2311
.L2317:
	mov	esi, 9
	lea	rdi, .LC771[rip]
	mov	rbp, QWORD PTR 16[rsp]
	call	fb_StrAllocTempDescZEx@PLT
	pxor	xmm1, xmm1
	xor	r8d, r8d
	mov	rdi, QWORD PTR FGIMAGE$[rip]
	push	r9
	movaps	xmm0, xmm1
	mov	rdx, rax
	xor	r9d, r9d
	push	0
	mov	ecx, -65536
	mov	esi, 4
	push	0
	push	0
	call	fb_GfxDrawString@PLT
	add	rsp, 32
	mov	esi, 13
	lea	rdi, .LC772[rip]
	call	fb_StrAllocTempDescZEx@PLT
	xor	r9d, r9d
	xor	r8d, r8d
	mov	ecx, -16711936
	movss	xmm1, DWORD PTR .LC773[rip]
	push	r10
	mov	rdx, rax
	mov	esi, 4
	push	0
	mov	rdi, QWORD PTR FGIMAGE$[rip]
	push	0
	movaps	xmm0, xmm1
	push	0
	call	fb_GfxDrawString@PLT
	add	rsp, 32
	jmp	.L2319
.L4985:
.L4987:
.L4988:
.L4989:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rcx, QWORD PTR 395624[rbp]
	cvtsd2si	rdx, QWORD PTR 395632[rbp]
	sal	rax, 24
	sal	rcx, 16
	add	rax, rcx
	sal	rdx, 8
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 395640[rbp]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L652
.L7244:
.L4983:
	cvtsd2si	rdx, QWORD PTR 397048[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	r9, QWORD PTR 397064[rbp]
	cvtsd2si	r8, QWORD PTR 397072[rbp]
	cvtsd2si	rdi, QWORD PTR 397080[rbp]
	cvtsd2si	rsi, QWORD PTR 397088[rbp]
	mov	rax, rdx
	sal	rdx, 48
	cvtsd2si	rcx, QWORD PTR 397096[rbp]
	sal	rax, 56
	add	rax, rdx
	mov	rdx, r9
	sal	rdx, 40
	sal	rdi, 24
	add	rax, rdx
	mov	rdx, r8
	sal	rsi, 16
	sal	rdx, 32
	sal	rcx, 8
	add	rax, rdx
	add	rax, rdi
	add	rax, rsi
	add	rax, rcx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 397104[rbp]
	movsd	QWORD PTR 397040[rbp], xmm0
	jmp	.L652
.L7243:
.L4970:
	cvtsd2si	rax, QWORD PTR 396976[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	r9, QWORD PTR 396984[rbp]
	cvtsd2si	r8, QWORD PTR 396992[rbp]
	cvtsd2si	rdi, QWORD PTR 397000[rbp]
	cvtsd2si	rsi, QWORD PTR 397008[rbp]
	sal	rax, 56
	cvtsd2si	rcx, QWORD PTR 397016[rbp]
	sal	r9, 48
	cvtsd2si	rdx, QWORD PTR 397024[rbp]
	add	rax, r9
	sal	r8, 40
	add	rax, r8
	sal	rdi, 32
	add	rax, rdi
	sal	rsi, 24
	add	rax, rsi
	sal	rcx, 16
	add	rax, rcx
	sal	rdx, 8
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 397032[rbp]
	movsd	QWORD PTR 396968[rbp], xmm0
	jmp	.L652
.L7242:
.L4968:
	movsd	xmm0, QWORD PTR 396000[rbp]
	xor	ebx, ebx
	movsd	xmm1, QWORD PTR .LC1[rip]
	movabs	r12, -9223372036854775808
	addsd	xmm1, xmm0
	movsd	QWORD PTR 397040[rbp], xmm0
	cvtsd2si	rax, xmm1
	movsd	xmm1, QWORD PTR .LC105[rip]
	addsd	xmm1, xmm0
	cvtsd2si	rax, QWORD PTR 0[rbp+rax*8]
	cvtsd2si	rdx, xmm1
	movsd	xmm1, QWORD PTR .LC106[rip]
	addsd	xmm1, xmm0
	sal	rax, 32
	cvtsd2si	rsi, QWORD PTR 0[rbp+rdx*8]
	cvtsd2si	rdx, xmm1
	movsd	xmm1, QWORD PTR .LC107[rip]
	addsd	xmm1, xmm0
	sal	rsi, 24
	cvtsd2si	rcx, QWORD PTR 0[rbp+rdx*8]
	add	rax, rsi
	cvtsd2si	rdx, xmm1
	movsd	xmm1, QWORD PTR .LC108[rip]
	addsd	xmm1, xmm0
	sal	rcx, 16
	cvtsd2si	rdx, QWORD PTR 0[rbp+rdx*8]
	add	rax, rcx
	cvtsd2si	rdi, xmm1
	pxor	xmm1, xmm1
	sal	rdx, 8
	add	rax, rdx
	cvtsi2sd	xmm1, rax
	addsd	xmm1, QWORD PTR 0[rbp+rdi*8]
	movsd	QWORD PTR 395680[rbp], xmm1
	movsd	xmm1, QWORD PTR .LC109[rip]
	addsd	xmm1, xmm0
	cvtsd2si	rax, xmm1
	movsd	xmm1, QWORD PTR .LC110[rip]
	addsd	xmm1, xmm0
	cvtsd2si	rax, QWORD PTR 0[rbp+rax*8]
	cvtsd2si	rdx, xmm1
	movsd	xmm1, QWORD PTR .LC111[rip]
	addsd	xmm1, xmm0
	sal	rax, 32
	cvtsd2si	rsi, QWORD PTR 0[rbp+rdx*8]
	cvtsd2si	rdx, xmm1
	movsd	xmm1, QWORD PTR .LC5[rip]
	addsd	xmm1, xmm0
	sal	rsi, 24
	cvtsd2si	rcx, QWORD PTR 0[rbp+rdx*8]
	add	rax, rsi
	cvtsd2si	rdx, xmm1
	movsd	xmm1, QWORD PTR .LC112[rip]
	addsd	xmm1, xmm0
	sal	rcx, 16
	cvtsd2si	rdx, QWORD PTR 0[rbp+rdx*8]
	add	rax, rcx
	cvtsd2si	rdi, xmm1
	pxor	xmm1, xmm1
	sal	rdx, 8
	add	rax, rdx
	cvtsi2sd	xmm1, rax
	addsd	xmm1, QWORD PTR 0[rbp+rdi*8]
	movsd	QWORD PTR 395760[rbp], xmm1
	movsd	xmm1, QWORD PTR .LC113[rip]
	addsd	xmm1, xmm0
	cvtsd2si	rax, xmm1
	movsd	xmm1, QWORD PTR .LC114[rip]
	addsd	xmm1, xmm0
	cvtsd2si	rax, QWORD PTR 0[rbp+rax*8]
	cvtsd2si	rdx, xmm1
	movsd	xmm1, QWORD PTR .LC115[rip]
	addsd	xmm1, xmm0
	addsd	xmm0, QWORD PTR .LC116[rip]
	sal	rax, 32
	cvtsd2si	rsi, QWORD PTR 0[rbp+rdx*8]
	cvtsd2si	rdx, xmm1
	sal	rsi, 24
	cvtsd2si	rcx, QWORD PTR 0[rbp+rdx*8]
	add	rax, rsi
	cvtsd2si	rdx, xmm0
	sal	rcx, 16
	cvtsd2si	rdx, QWORD PTR 0[rbp+rdx*8]
	movsd	xmm0, QWORD PTR .LC117[rip]
	add	rax, rcx
	addsd	xmm0, QWORD PTR 395344[rbp]
	cvtsd2si	rdi, xmm0
	sal	rdx, 8
	pxor	xmm0, xmm0
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 0[rbp+rdi*8]
	movsd	QWORD PTR 396968[rbp], xmm0
.L4971:
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rbx
	test	rbx, rbx
	jns	.L4973
	mov	rax, rbx
	mov	rdx, rbx
	pxor	xmm0, xmm0
	shr	rax
	and	edx, 1
	or	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, xmm0
.L4973:
	comisd	xmm0, QWORD PTR 396968[rbp]
	je	.L652
	movsd	xmm0, QWORD PTR 395680[rbp]
	call	nearbyint@PLT
	comisd	xmm0, QWORD PTR .LC299[rip]
	jnb	.L4974
	cvttsd2si	rax, xmm0
	mov	QWORD PTR PC$[rip], rax
.L4975:
	movsd	xmm0, QWORD PTR 395760[rbp]
	call	nearbyint@PLT
	comisd	xmm0, QWORD PTR .LC299[rip]
	cvttsd2si	r13, xmm0
	jb	.L4978
	subsd	xmm0, QWORD PTR .LC299[rip]
	cvttsd2si	r13, xmm0
	xor	r13, r12
.L4978:
	mov	rax, QWORD PTR PC$[rip]
	cmp	rax, r13
	ja	.L4979
	movsd	xmm0, QWORD PTR 0[rbp+rax*8]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	add	QWORD PTR PC$[rip], 1
	jmp	.L4978
.L4974:
	subsd	xmm0, QWORD PTR .LC299[rip]
	cvttsd2si	rax, xmm0
	mov	QWORD PTR PC$[rip], rax
	xor	QWORD PTR PC$[rip], r12
	jmp	.L4975
.L4979:
	movsd	xmm0, QWORD PTR 396968[rbp]
	call	nearbyint@PLT
	comisd	xmm0, QWORD PTR .LC299[rip]
	lea	rax, 1[rbx]
	cvttsd2si	rcx, xmm0
	jb	.L4981
	subsd	xmm0, QWORD PTR .LC299[rip]
	cvttsd2si	rcx, xmm0
	xor	rcx, r12
.L4981:
	xor	edx, edx
	div	rcx
	mov	rbx, rdx
	jmp	.L4971
.L7241:
.L4966:
	movsd	xmm1, QWORD PTR 395680[rbp]
	mov	rdi, rbp
	movapd	xmm0, xmm5
	add	rsp, 280
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	_ZN8MEMORY_T5POKEBEdd
.L7240:
.L4964:
	movapd	xmm0, xmm5
	mov	rdi, rbp
	call	_ZN8MEMORY_T5PEEKBEd
	movsd	QWORD PTR 395680[rbp], xmm0
	jmp	.L652
.L7239:
.L4962:
	movsd	QWORD PTR 396000[rbp], xmm5
	jmp	.L652
.L7238:
.L4960:
	movsd	xmm0, QWORD PTR 395840[rbp]
	comisd	xmm0, QWORD PTR 395760[rbp]
	jnb	.L652
	movsd	QWORD PTR 396000[rbp], xmm5
	jmp	.L652
.L7237:
.L4958:
	movsd	xmm0, QWORD PTR 395760[rbp]
	comisd	xmm0, QWORD PTR 395840[rbp]
	ja	.L652
	movsd	QWORD PTR 396000[rbp], xmm5
	jmp	.L652
.L7236:
.L4956:
	movsd	xmm0, QWORD PTR 395840[rbp]
	comisd	xmm0, QWORD PTR 395760[rbp]
	ja	.L652
	movsd	QWORD PTR 396000[rbp], xmm5
	jmp	.L652
.L7235:
.L4954:
	movsd	xmm0, QWORD PTR 395840[rbp]
	comisd	xmm0, QWORD PTR 395760[rbp]
	jnb	.L652
	movsd	QWORD PTR 396000[rbp], xmm5
	jmp	.L652
.L7234:
.L4952:
	movsd	xmm0, QWORD PTR 395760[rbp]
	comisd	xmm0, QWORD PTR 395840[rbp]
	jne	.L652
	movsd	QWORD PTR 396000[rbp], xmm5
	jmp	.L652
.L7233:
.L4950:
	movsd	xmm0, QWORD PTR 395840[rbp]
	subsd	xmm0, QWORD PTR .LC1[rip]
	movsd	QWORD PTR 395840[rbp], xmm0
	jmp	.L652
.L7232:
.L4948:
	movsd	xmm0, QWORD PTR 395760[rbp]
	subsd	xmm0, QWORD PTR .LC1[rip]
	movsd	QWORD PTR 395760[rbp], xmm0
	jmp	.L652
.L7512:
.L4568:
	xor	r8d, r8d
	mov	ecx, 10
	or	rsi, -1
	lea	rdx, .LC2653[rip]
	lea	rdi, FILENAME$[rip]
	call	fb_StrAssign@PLT
	add	rsp, 280
	xor	r8d, r8d
	mov	ecx, 8
	pop	rbx
	lea	rdx, .LC2654[rip]
	pop	rbp
	or	rsi, -1
	pop	r12
	lea	rdi, COMPILER$[rip]
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_StrAssign@PLT
.L7511:
.L4566:
	xor	r8d, r8d
	mov	ecx, 9
	or	rsi, -1
	lea	rdx, .LC2651[rip]
	lea	rdi, FILENAME$[rip]
	call	fb_StrAssign@PLT
	add	rsp, 280
	xor	r8d, r8d
	mov	ecx, 6
	pop	rbx
	lea	rdx, .LC2652[rip]
	pop	rbp
	or	rsi, -1
	pop	r12
	lea	rdi, COMPILER$[rip]
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_StrAssign@PLT
.L7510:
.L4564:
	xor	r8d, r8d
	mov	ecx, 6
	or	rsi, -1
	lea	rdx, .LC2649[rip]
	lea	rdi, FILENAME$[rip]
	call	fb_StrAssign@PLT
	add	rsp, 280
	xor	r8d, r8d
	mov	ecx, 9
	pop	rbx
	lea	rdx, .LC2650[rip]
	pop	rbp
	or	rsi, -1
	pop	r12
	lea	rdi, COMPILER$[rip]
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_StrAssign@PLT
.L7509:
.L4562:
	xor	r8d, r8d
	mov	ecx, 7
	or	rsi, -1
	lea	rdx, .LC2647[rip]
	lea	rdi, FILENAME$[rip]
	call	fb_StrAssign@PLT
	add	rsp, 280
	xor	r8d, r8d
	mov	ecx, 9
	pop	rbx
	lea	rdx, .LC2648[rip]
	pop	rbp
	or	rsi, -1
	pop	r12
	lea	rdi, COMPILER$[rip]
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_StrAssign@PLT
.L7514:
.L4574:
	mov	rax, QWORD PTR SCR_H$[rip]
	pxor	xmm3, xmm3
	cvtsi2ss	xmm3, rax
	test	rax, rax
	jns	.L4579
	mov	rdx, rax
	and	eax, 1
	pxor	xmm3, xmm3
	shr	rdx
	or	rdx, rax
	cvtsi2ss	xmm3, rdx
	addss	xmm3, xmm3
.L4579:
	mov	rax, QWORD PTR SCR_W$[rip]
	pxor	xmm2, xmm2
	cvtsi2ss	xmm2, rax
	test	rax, rax
	jns	.L4581
	mov	rdx, rax
	and	eax, 1
	pxor	xmm2, xmm2
	shr	rdx
	or	rdx, rax
	cvtsi2ss	xmm2, rdx
	addss	xmm2, xmm2
.L4581:
	pxor	xmm1, xmm1
	mov	rdi, QWORD PTR FGIMAGE$[rip]
	xor	r8d, r8d
	mov	ecx, 65535
	movaps	xmm0, xmm1
	mov	edx, 2
	mov	esi, -16777216
	call	fb_GfxLine@PLT
	xor	eax, eax
	mov	ecx, 6
	or	r8, -1
	lea	r9, 208[rsp]
	or	rdx, -1
	lea	rsi, COMPILER$[rip]
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	lea	rcx, FILENAME$[rip]
	call	fb_StrConcat@PLT
	mov	rdi, rax
	call	fb_Shell@PLT
	mov	esi, 15
	lea	rdi, .LC2655[rip]
	call	fb_StrAllocTempDescZEx@PLT
	mov	rdi, rax
	call	fb_Shell@PLT
	mov	esi, 7
	lea	rdi, .LC2656[rip]
	call	fb_StrAllocTempDescZEx@PLT
	xor	r9d, r9d
	mov	r8d, 1
	xor	ecx, ecx
	mov	rdi, rax
	xor	edx, edx
	mov	esi, 2
	call	fb_FileOpen@PLT
	pxor	xmm0, xmm0
	mov	QWORD PTR SCR_POS$[rip], 0
	mov	QWORD PTR 394912[rbp], 0x000000000
	movups	XMMWORD PTR 394896[rbp], xmm0
.L4582:
	mov	edi, 1
	call	fb_FileEof@PLT
	test	eax, eax
	jne	.L7519
	xor	ecx, ecx
	or	rdx, -1
	mov	edi, 1
	lea	rsi, STRCODE$[rip]
	call	fb_FileLineInput@PLT
	or	rsi, -1
	lea	rdi, STRCODE$[rip]
	mov	WORD PTR INDEX$[rip], 1
	call	fb_StrLen@PLT
	mov	ebx, eax
	jmp	.L4585
.L4592:
	mov	rax, QWORD PTR .LC73[rip]
	movq	xmm0, rax
	addsd	xmm1, xmm0
	movsd	QWORD PTR 394888[rbp], xmm1
.L4586:
	addsd	xmm0, QWORD PTR 394888[rbp]
	pxor	xmm1, xmm1
	mov	rdx, QWORD PTR SCR_POS$[rip]
	cvtsd2si	rax, xmm0
	pxor	xmm0, xmm0
	and	eax, 63
	cvtsi2sd	xmm1, rax
	movzx	eax, WORD PTR INDEX$[rip]
	lea	rax, 16383[rdx+rax]
	cvtsi2sd	xmm0, rax
	test	rax, rax
	jns	.L4588
	mov	rdx, rax
	and	eax, 1
	pxor	xmm0, xmm0
	shr	rdx
	or	rdx, rax
	cvtsi2sd	xmm0, rdx
	addsd	xmm0, xmm0
.L4588:
	mov	rdi, rbp
	call	_ZN8MEMORY_T5POKEBEdd
	add	WORD PTR INDEX$[rip], 1
.L4585:
	movzx	eax, WORD PTR INDEX$[rip]
	cmp	ax, bx
	ja	.L4589
	mov	edx, 1
	movzx	esi, ax
	lea	rdi, STRCODE$[rip]
	call	fb_StrMid@PLT
	mov	esi, 1
	mov	rdi, rax
	call	fb_ASC@PLT
	pxor	xmm1, xmm1
	mov	edx, eax
	cvtsi2sd	xmm1, rdx
	xor	edx, edx
	cmp	eax, 31
	seta	dl
	neg	edx
	cmp	eax, 64
	sbb	eax, eax
	test	edx, eax
	jne	.L4592
	mov	rax, QWORD PTR .LC73[rip]
	movsd	QWORD PTR 394888[rbp], xmm1
	movq	xmm0, rax
	jmp	.L4586
.L4589:
	add	QWORD PTR SCR_POS$[rip], 90
	jmp	.L4582
.L7519:
	mov	QWORD PTR 394912[rbp], 0x000000000
	mov	edi, 1
	mov	QWORD PTR SCR_POS$[rip], 5400
	call	fb_FileClose@PLT
	xor	r8d, r8d
	mov	ecx, 27
	lea	rdx, .LC2657[rip]
	or	rsi, -1
	lea	rdi, STRCODE$[rip]
	call	fb_StrAssign@PLT
	or	rsi, -1
	lea	rdi, STRCODE$[rip]
	mov	WORD PTR INDEX$[rip], 1
	call	fb_StrLen@PLT
	mov	ebx, eax
	jmp	.L4584
.L4599:
	mov	rax, QWORD PTR .LC73[rip]
	movq	xmm0, rax
	addsd	xmm1, xmm0
	movsd	QWORD PTR 394888[rbp], xmm1
.L4593:
	addsd	xmm0, QWORD PTR 394888[rbp]
	pxor	xmm1, xmm1
	mov	rdx, QWORD PTR SCR_POS$[rip]
	cvtsd2si	rax, xmm0
	pxor	xmm0, xmm0
	and	eax, 63
	cvtsi2sd	xmm1, rax
	movzx	eax, WORD PTR INDEX$[rip]
	lea	rax, 16383[rdx+rax]
	cvtsi2sd	xmm0, rax
	test	rax, rax
	jns	.L4595
	mov	rdx, rax
	and	eax, 1
	pxor	xmm0, xmm0
	shr	rdx
	or	rdx, rax
	cvtsi2sd	xmm0, rdx
	addsd	xmm0, xmm0
.L4595:
	mov	rdi, rbp
	call	_ZN8MEMORY_T5POKEBEdd
	add	WORD PTR INDEX$[rip], 1
.L4584:
	movzx	eax, WORD PTR INDEX$[rip]
	cmp	ax, bx
	ja	.L4596
	mov	edx, 1
	movzx	esi, ax
	lea	rdi, STRCODE$[rip]
	call	fb_StrMid@PLT
	mov	esi, 1
	mov	rdi, rax
	call	fb_ASC@PLT
	pxor	xmm1, xmm1
	mov	edx, eax
	cvtsi2sd	xmm1, rdx
	xor	edx, edx
	cmp	eax, 31
	seta	dl
	neg	edx
	cmp	eax, 64
	sbb	eax, eax
	test	edx, eax
	jne	.L4599
	mov	rax, QWORD PTR .LC73[rip]
	movsd	QWORD PTR 394888[rbp], xmm1
	movq	xmm0, rax
	jmp	.L4593
.L4596:
	xor	eax, eax
	mov	ecx, 6
	or	r8, -1
	mov	edx, 13
	lea	r9, 240[rsp]
	lea	rsi, .LC2658[rip]
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	lea	rcx, FILENAME$[rip]
	call	fb_StrConcat@PLT
	mov	rdi, rax
	call	fb_Shell@PLT
	xor	r8d, r8d
	mov	ecx, 1
	lea	rdx, .LC3[rip]
	or	rsi, -1
	lea	rdi, STRCODE$[rip]
	mov	QWORD PTR SCR_POS$[rip], 0
	call	fb_StrAssign@PLT
	mov	rbx, QWORD PTR fb_hPutPSet@GOTPCREL[rip]
	push	0
	xor	edi, edi
	push	0
	pxor	xmm1, xmm1
	mov	ecx, -65536
	mov	edx, -65536
	push	-1
	mov	rsi, QWORD PTR FGIMAGE$[rip]
	mov	r9d, -65536
	movaps	xmm0, xmm1
	push	rbx
	mov	r8d, -65536
	push	1
	push	0
	call	fb_GfxPut@PLT
	add	rsp, 48
	or	edi, -1
	call	fb_Sleep@PLT
	mov	rax, QWORD PTR SCR_H$[rip]
	pxor	xmm3, xmm3
	cvtsi2ss	xmm3, rax
	test	rax, rax
	jns	.L4601
	mov	rdx, rax
	and	eax, 1
	pxor	xmm3, xmm3
	shr	rdx
	or	rdx, rax
	cvtsi2ss	xmm3, rdx
	addss	xmm3, xmm3
.L4601:
	mov	rax, QWORD PTR SCR_W$[rip]
	pxor	xmm2, xmm2
	cvtsi2ss	xmm2, rax
	test	rax, rax
	jns	.L4603
	mov	rdx, rax
	and	eax, 1
	pxor	xmm2, xmm2
	shr	rdx
	or	rdx, rax
	cvtsi2ss	xmm2, rdx
	addss	xmm2, xmm2
.L4603:
	pxor	xmm1, xmm1
	mov	rdi, QWORD PTR FGIMAGE$[rip]
	xor	r8d, r8d
	mov	ecx, 65535
	movaps	xmm0, xmm1
	mov	edx, 2
	mov	esi, -16777216
	call	fb_GfxLine@PLT
	push	0
	pxor	xmm1, xmm1
	mov	ecx, -65536
	push	0
	mov	rsi, QWORD PTR FGIMAGE$[rip]
	mov	edx, -65536
	xor	edi, edi
	push	-1
	mov	r9d, -65536
	mov	r8d, -65536
	movaps	xmm0, xmm1
	push	rbx
	push	1
	push	0
	call	fb_GfxPut@PLT
	add	rsp, 48
	jmp	.L652
.L7513:
.L4570:
	add	rsp, 280
	xor	r9d, r9d
	xor	ecx, ecx
	xor	edx, edx
	pop	rbx
	mov	r8d, 1
	pop	rbp
	mov	esi, 3
	pop	r12
	lea	rdi, FILENAME$[rip]
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_FileOpen@PLT
.L7493:
	movsd	xmm0, QWORD PTR .LC276[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC467[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L6858:
	cvtsd2si	rax, QWORD PTR 395648[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC727[rip]
	movsd	QWORD PTR 395656[rbp], xmm0
	jmp	.L1205
.L7142:
.L3941:
	mov	esi, 7
	lea	rdi, .LC2073[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7141:
.L3939:
	mov	esi, 4
	lea	rdi, .LC2072[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7140:
.L3937:
	mov	esi, 4
	lea	rdi, .LC2071[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7139:
.L3935:
	mov	esi, 9
	lea	rdi, .LC2070[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7138:
.L3933:
	mov	esi, 8
	lea	rdi, .LC2069[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7137:
.L3931:
	mov	esi, 4
	lea	rdi, .LC2068[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7136:
.L3929:
	mov	esi, 8
	lea	rdi, .LC2067[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7135:
.L3927:
	mov	esi, 6
	lea	rdi, .LC2066[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7231:
.L4946:
	movsd	xmm0, QWORD PTR 395680[rbp]
	subsd	xmm0, QWORD PTR .LC1[rip]
	movsd	QWORD PTR 395680[rbp], xmm0
	jmp	.L652
.L7230:
.L4944:
	movsd	xmm0, QWORD PTR .LC1[rip]
	addsd	xmm0, QWORD PTR 395840[rbp]
	movsd	QWORD PTR 395840[rbp], xmm0
	jmp	.L652
.L7229:
.L4942:
	movsd	xmm0, QWORD PTR .LC1[rip]
	addsd	xmm0, QWORD PTR 395760[rbp]
	movsd	QWORD PTR 395760[rbp], xmm0
	jmp	.L652
.L7228:
.L4940:
	movsd	xmm0, QWORD PTR .LC1[rip]
	addsd	xmm0, QWORD PTR 395680[rbp]
	movsd	QWORD PTR 395680[rbp], xmm0
	jmp	.L652
.L7227:
.L4938:
	movsd	xmm0, QWORD PTR 395680[rbp]
	movsd	QWORD PTR 395840[rbp], xmm0
	jmp	.L652
.L7226:
.L4936:
	movsd	xmm0, QWORD PTR 395680[rbp]
	movsd	QWORD PTR 395760[rbp], xmm0
	jmp	.L652
.L7225:
.L4934:
	cvtsd2si	rax, QWORD PTR 395760[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rdx, QWORD PTR 395840[rbp]
	xor	rax, rdx
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR 395680[rbp], xmm0
	jmp	.L652
.L7224:
.L4932:
	cvtsd2si	rax, QWORD PTR 395760[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rdx, QWORD PTR 395840[rbp]
	or	rax, rdx
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR 395680[rbp], xmm0
	jmp	.L652
.L7223:
.L4930:
	cvtsd2si	rax, QWORD PTR 394960[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rdx, QWORD PTR 395040[rbp]
	not	rax
	or	rax, rdx
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR 395680[rbp], xmm0
	jmp	.L652
.L7222:
.L4928:
	cvtsd2si	rax, QWORD PTR 394960[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rdx, QWORD PTR 395040[rbp]
	xor	rax, rdx
	not	rax
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR 395680[rbp], xmm0
	jmp	.L652
.L7221:
.L4926:
	cvtsd2si	rax, QWORD PTR 395760[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rdx, QWORD PTR 395840[rbp]
	and	rax, rdx
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR 395680[rbp], xmm0
	jmp	.L652
.L7220:
.L4924:
	movsd	xmm0, QWORD PTR 395760[rbp]
	xor	eax, eax
	comisd	xmm0, QWORD PTR 395840[rbp]
	pxor	xmm0, xmm0
	seta	al
	neg	eax
	cvtsi2sd	xmm0, eax
	movsd	QWORD PTR 395680[rbp], xmm0
	jmp	.L652
.L7219:
.L4922:
	movsd	xmm0, QWORD PTR 395760[rbp]
	xor	eax, eax
	comisd	xmm0, QWORD PTR 395840[rbp]
	pxor	xmm0, xmm0
	setnb	al
	neg	eax
	cvtsi2sd	xmm0, eax
	movsd	QWORD PTR 395680[rbp], xmm0
	jmp	.L652
.L7218:
.L4920:
	movsd	xmm0, QWORD PTR 395840[rbp]
	xor	eax, eax
	comisd	xmm0, QWORD PTR 395760[rbp]
	pxor	xmm0, xmm0
	setnb	al
	neg	eax
	cvtsi2sd	xmm0, eax
	movsd	QWORD PTR 395680[rbp], xmm0
	jmp	.L652
.L7217:
.L4918:
	movsd	xmm0, QWORD PTR 395840[rbp]
	xor	eax, eax
	comisd	xmm0, QWORD PTR 395760[rbp]
	pxor	xmm0, xmm0
	seta	al
	neg	eax
	cvtsi2sd	xmm0, eax
	movsd	QWORD PTR 395680[rbp], xmm0
	jmp	.L652
.L7216:
.L4916:
	movsd	xmm0, QWORD PTR 395760[rbp]
	xor	eax, eax
	comisd	xmm0, QWORD PTR 395840[rbp]
	pxor	xmm0, xmm0
	setne	al
	neg	eax
	cvtsi2sd	xmm0, eax
	movsd	QWORD PTR 395680[rbp], xmm0
	jmp	.L652
.L7215:
.L4914:
	movsd	xmm0, QWORD PTR 395760[rbp]
	xor	eax, eax
	comisd	xmm0, QWORD PTR 395840[rbp]
	pxor	xmm0, xmm0
	sete	al
	neg	eax
	cvtsi2sd	xmm0, eax
	movsd	QWORD PTR 395680[rbp], xmm0
	jmp	.L652
.L7214:
.L4912:
	cvtsd2si	rax, QWORD PTR 395760[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rcx, QWORD PTR 395840[rbp]
	sar	rax, cl
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR 395680[rbp], xmm0
	jmp	.L652
.L7213:
.L4910:
	cvtsd2si	rax, QWORD PTR 395760[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rcx, QWORD PTR 395840[rbp]
	sal	rax, cl
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR 395680[rbp], xmm0
	jmp	.L652
.L7212:
.L4908:
	movsd	xmm0, QWORD PTR 395680[rbp]
	xorpd	xmm0, XMMWORD PTR .LC258[rip]
	movsd	QWORD PTR 395680[rbp], xmm0
	jmp	.L652
.L7211:
.L4906:
	cvtsd2si	rax, QWORD PTR 395760[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rcx, QWORD PTR 395840[rbp]
	cqo
	idiv	rcx
	cvtsi2sd	xmm0, rdx
	movsd	QWORD PTR 395680[rbp], xmm0
	jmp	.L652
.L7210:
.L4904:
	movsd	xmm0, QWORD PTR 395760[rbp]
	movsd	xmm1, QWORD PTR 395840[rbp]
	call	pow@PLT
	movsd	QWORD PTR 395680[rbp], xmm0
	jmp	.L652
.L7209:
.L4902:
	cvtsd2si	rax, QWORD PTR 395760[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rcx, QWORD PTR 395840[rbp]
	cqo
	idiv	rcx
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR 395680[rbp], xmm0
	jmp	.L652
.L7208:
.L4900:
	movsd	xmm0, QWORD PTR 395760[rbp]
	divsd	xmm0, QWORD PTR 395840[rbp]
	movsd	QWORD PTR 395680[rbp], xmm0
	jmp	.L652
.L7207:
.L4898:
	movsd	xmm0, QWORD PTR 395760[rbp]
	mulsd	xmm0, QWORD PTR 395840[rbp]
	movsd	QWORD PTR 395680[rbp], xmm0
	jmp	.L652
.L7206:
.L4896:
	movsd	xmm0, QWORD PTR 395760[rbp]
	subsd	xmm0, QWORD PTR 395840[rbp]
	movsd	QWORD PTR 395680[rbp], xmm0
	jmp	.L652
.L6293:
.L4893:
	movsd	xmm0, QWORD PTR 395760[rbp]
	addsd	xmm0, QWORD PTR 395840[rbp]
	movsd	QWORD PTR 395680[rbp], xmm0
	jmp	.L652
.L7205:
.L4887:
	movsd	xmm0, QWORD PTR 395680[rbp]
	movsd	QWORD PTR 394880[rbp], xmm0
	jmp	.L652
.L4884:
.L4888:
.L4889:
	movsd	xmm0, QWORD PTR 394880[rbp]
	movsd	QWORD PTR 395680[rbp], xmm0
	jmp	.L652
.L4882:
.L4885:
	movsd	xmm0, QWORD PTR 394872[rbp]
	movsd	QWORD PTR 395680[rbp], xmm0
	jmp	.L652
.L7204:
.L4880:
	movsd	xmm0, QWORD PTR 394864[rbp]
	movsd	QWORD PTR 395680[rbp], xmm0
	jmp	.L652
.L6290:
.L4877:
	movsd	xmm0, QWORD PTR 394856[rbp]
	movsd	QWORD PTR 395680[rbp], xmm0
	jmp	.L652
.L6562:
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	cvtsi2sd	xmm1, ecx
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC73[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6561:
	movsd	xmm1, QWORD PTR .LC90[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC73[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6560:
	movsd	xmm1, QWORD PTR .LC98[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC73[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6559:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC73[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6558:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC73[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6557:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC90[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC73[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6556:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+40]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC279[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC73[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6555:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 24[rsp], xmm5
	movsd	QWORD PTR 16[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm2, QWORD PTR .LC73[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	movapd	xmm1, xmm2
	movsd	QWORD PTR 8[rsp], xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm2, QWORD PTR 8[rsp]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 16[rsp]
	movsd	xmm5, QWORD PTR 24[rsp]
	jmp	.L5035
.L6554:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC73[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+40]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC280[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6553:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC73[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC90[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6552:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC73[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6551:
	movsd	xmm2, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC73[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6550:
	movsd	xmm1, QWORD PTR .LC98[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC73[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6549:
	movsd	xmm1, QWORD PTR .LC90[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC73[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6548:
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	cvtsi2sd	xmm1, ecx
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC73[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6547:
	movsd	xmm2, QWORD PTR .LC73[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 24[rsp], xmm5
	movsd	QWORD PTR 16[rsp], xmm4
	movapd	xmm1, xmm2
	movsd	QWORD PTR 8[rsp], xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm2, QWORD PTR 8[rsp]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 16[rsp]
	movsd	xmm5, QWORD PTR 24[rsp]
	jmp	.L5035
.L6546:
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	cvtsi2sd	xmm1, eax
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC6[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6545:
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	cvtsi2sd	xmm1, eax
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC73[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6544:
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	cvtsi2sd	xmm1, eax
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC90[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6543:
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	cvtsi2sd	xmm1, eax
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6542:
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	cvtsi2sd	xmm1, eax
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC90[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6541:
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	cvtsi2sd	xmm1, eax
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC73[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6540:
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	cvtsi2sd	xmm1, eax
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC6[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6539:
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	cvtsi2sd	xmm1, eax
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC280[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6538:
	movsd	xmm1, QWORD PTR .LC6[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC280[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6537:
	movsd	xmm1, QWORD PTR .LC73[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC280[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6536:
	movsd	xmm1, QWORD PTR .LC90[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC280[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6535:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC280[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6534:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC90[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC280[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6533:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC73[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC280[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6532:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC6[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC280[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6531:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC279[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC280[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6530:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC279[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC6[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6529:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC279[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC73[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6528:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC279[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC90[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6527:
	movsd	xmm2, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC279[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6526:
	movsd	xmm1, QWORD PTR .LC90[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC279[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6525:
	movsd	xmm1, QWORD PTR .LC73[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC279[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6524:
	movsd	xmm1, QWORD PTR .LC6[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC279[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6523:
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	cvtsi2sd	xmm1, eax
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC279[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6522:
	movsd	xmm1, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC296[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6521:
	movsd	xmm1, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC283[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6520:
	movsd	xmm1, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC297[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6519:
	movsd	xmm1, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6518:
	movsd	xmm1, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC297[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6517:
	movsd	xmm1, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC283[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6516:
	movsd	xmm1, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC296[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6515:
	movsd	xmm2, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC282[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6514:
	movsd	xmm1, QWORD PTR .LC296[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC282[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6513:
	movsd	xmm1, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC282[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6512:
	movsd	xmm1, QWORD PTR .LC297[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC282[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6511:
	movsd	xmm1, QWORD PTR .LC284[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC282[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6510:
	movsd	xmm1, QWORD PTR .LC284[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC297[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC282[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6509:
	movsd	xmm1, QWORD PTR .LC284[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC283[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC282[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6508:
	movsd	xmm1, QWORD PTR .LC284[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC296[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC282[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6507:
	movsd	xmm1, QWORD PTR .LC284[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC282[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC282[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6506:
	movsd	xmm1, QWORD PTR .LC284[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC282[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC296[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6505:
	movsd	xmm1, QWORD PTR .LC284[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC282[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC283[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6504:
	movsd	xmm1, QWORD PTR .LC284[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC282[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC297[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6503:
	movsd	xmm2, QWORD PTR .LC284[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC282[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6502:
	movsd	xmm1, QWORD PTR .LC297[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC282[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6501:
	movsd	xmm1, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC282[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6500:
	movsd	xmm1, QWORD PTR .LC296[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC282[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6499:
	movsd	xmm1, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC282[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6498:
	movsd	xmm1, QWORD PTR .LC98[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC281[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6497:
	movsd	xmm1, QWORD PTR .LC98[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+85]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC279[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6496:
	movsd	xmm1, QWORD PTR .LC98[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC283[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6495:
	movsd	xmm1, QWORD PTR .LC98[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6494:
	movsd	xmm1, QWORD PTR .LC98[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC283[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6493:
	movsd	xmm1, QWORD PTR .LC98[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+85]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC280[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6492:
	movsd	xmm1, QWORD PTR .LC98[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC281[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6491:
	movsd	xmm2, QWORD PTR .LC98[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6490:
	movsd	xmm1, QWORD PTR .LC281[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6489:
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	cvtsi2sd	xmm1, edx
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6488:
	movsd	xmm1, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6487:
	movsd	xmm1, QWORD PTR .LC284[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6486:
	movsd	xmm1, QWORD PTR .LC284[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC283[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6485:
	movsd	xmm1, QWORD PTR .LC284[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+85]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC279[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6484:
	movsd	xmm1, QWORD PTR .LC284[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC281[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6483:
	movsd	xmm1, QWORD PTR .LC284[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6482:
	movsd	xmm1, QWORD PTR .LC284[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC281[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6481:
	movsd	xmm1, QWORD PTR .LC284[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+85]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC280[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6480:
	movsd	xmm1, QWORD PTR .LC284[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC283[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6479:
	movsd	xmm2, QWORD PTR .LC284[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6478:
	movsd	xmm1, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6477:
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	cvtsi2sd	xmm1, edx
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6476:
	movsd	xmm1, QWORD PTR .LC281[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6475:
	movsd	xmm1, QWORD PTR .LC98[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6474:
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	cvtsi2sd	xmm1, eax
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC129[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6473:
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	cvtsi2sd	xmm1, eax
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6472:
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	cvtsi2sd	xmm1, eax
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+85]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC279[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6471:
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	cvtsi2sd	xmm1, eax
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6470:
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	cvtsi2sd	xmm1, eax
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+85]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC280[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6469:
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	cvtsi2sd	xmm1, eax
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6468:
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	cvtsi2sd	xmm1, eax
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC129[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6467:
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	cvtsi2sd	xmm1, eax
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC280[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6466:
	movsd	xmm1, QWORD PTR .LC129[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC280[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6465:
	movsd	xmm1, QWORD PTR .LC98[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC280[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6464:
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	cvtsi2sd	xmm1, edx
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC280[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6463:
	movsd	xmm1, QWORD PTR .LC284[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC280[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6462:
	movsd	xmm1, QWORD PTR .LC284[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+85]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC279[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC280[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6461:
	movsd	xmm1, QWORD PTR .LC284[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC280[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6460:
	movsd	xmm1, QWORD PTR .LC284[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC129[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC280[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6459:
	movsd	xmm1, QWORD PTR .LC284[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC279[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC280[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6458:
	movsd	xmm1, QWORD PTR .LC284[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC279[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC129[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6457:
	movsd	xmm1, QWORD PTR .LC284[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC279[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6456:
	movsd	xmm1, QWORD PTR .LC284[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC279[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+85]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC280[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6455:
	movsd	xmm2, QWORD PTR .LC284[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC279[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6454:
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	cvtsi2sd	xmm1, edx
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC279[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6453:
	movsd	xmm1, QWORD PTR .LC98[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC279[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6452:
	movsd	xmm1, QWORD PTR .LC129[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC279[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6451:
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	cvtsi2sd	xmm1, eax
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC279[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6450:
	movsd	xmm1, QWORD PTR .LC286[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC293[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC280[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6449:
	movsd	xmm1, QWORD PTR .LC286[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC280[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6448:
	movsd	xmm1, QWORD PTR .LC286[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC295[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC280[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6447:
	movsd	xmm1, QWORD PTR .LC286[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC279[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC280[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6446:
	movsd	xmm1, QWORD PTR .LC286[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC279[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC295[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6445:
	movsd	xmm1, QWORD PTR .LC286[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC279[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6444:
	movsd	xmm1, QWORD PTR .LC286[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC279[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC293[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6443:
	movsd	xmm2, QWORD PTR .LC286[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC279[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC286[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6442:
	movsd	xmm1, QWORD PTR .LC293[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC279[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC286[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6441:
	movsd	xmm1, QWORD PTR .LC294[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC279[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC286[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6440:
	movsd	xmm1, QWORD PTR .LC295[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC279[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC286[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6439:
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 8[rsp], xmm4
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC279[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC286[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6438:
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 8[rsp], xmm4
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC295[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC286[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6437:
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 8[rsp], xmm4
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC286[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6436:
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 8[rsp], xmm4
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC293[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC286[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6435:
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 8[rsp], xmm4
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC286[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC286[rip]
	movsd	xmm0, QWORD PTR .LC280[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L7169:
.L4733:
	mov	rdi, QWORD PTR YS$[rip]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdi
	addsd	xmm0, QWORD PTR .LC111[rip]
	add	rsp, 280
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	cvttsd2si	esi, xmm0
	pop	r14
	pop	r15
	jmp	fb_GfxUnlock@PLT
.L2308:
	lea	r9, 144[rsp]
	xor	eax, eax
	mov	ecx, 6
	mov	r8d, 8
	mov	rdi, r9
	or	rdx, -1
	lea	rsi, FILENAME$[rip]
	rep stosd
	mov	rdi, r9
	lea	rcx, .LC768[rip]
	lea	r14, 208[rsp]
	lea	r13, 176[rsp]
	call	fb_StrConcat@PLT
	mov	rdi, rax
	call	fb_GfxSetWindowTitle@PLT
	mov	edi, DWORD PTR 244[rsp]
	call	[QWORD PTR GLUSEPROGRAM$[rip]]
	pxor	xmm0, xmm0
	lea	rsi, 112[rsp]
	mov	edi, 4
	movaps	XMMWORD PTR 112[rsp], xmm0
	call	glGenTextures@PLT
	jmp	.L5032
.L7255:
	movsd	xmm1, QWORD PTR .LC435[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7254:
	movsd	xmm2, QWORD PTR .LC435[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC435[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L1744:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7258:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC435[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7257:
	movsd	xmm2, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC435[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7256:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC435[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC435[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7144:
.L3945:
	mov	esi, 12
	lea	rdi, .LC2075[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7143:
.L3943:
	mov	esi, 9
	lea	rdi, .LC2074[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7168:
.L4731:
	movsd	xmm0, QWORD PTR 394848[rbp]
	movsd	xmm1, QWORD PTR .LC111[rip]
	add	rsp, 280
	pop	rbx
	pop	rbp
	cvtsd2si	edi, xmm0
	addsd	xmm1, xmm0
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	cvtsd2si	esi, xmm1
	jmp	fb_GfxUnlock@PLT
.L7167:
.L4719:
	add	rsp, 280
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_GfxLock@PLT
.L4993:
	movsd	xmm1, QWORD PTR .LC300[rip]
	addsd	xmm1, xmm0
	comisd	xmm1, xmm4
	ja	.L5016
	addsd	xmm0, QWORD PTR .LC2813[rip]
	comisd	xmm4, xmm0
	jbe	.L652
.L5016:
	comisd	xmm4, QWORD PTR .LC2707[rip]
	jb	.L5018
	comisd	xmm4, QWORD PTR .LC2708[rip]
	jbe	.L7520
.L5018:
	comisd	xmm4, QWORD PTR .LC261[rip]
	jb	.L5022
	comisd	xmm4, QWORD PTR .LC260[rip]
	jbe	.L5020
.L5022:
	comisd	xmm4, QWORD PTR .LC263[rip]
	jb	.L5024
	comisd	xmm4, QWORD PTR .LC262[rip]
	jbe	.L5020
.L5024:
	comisd	xmm4, QWORD PTR .LC265[rip]
	jb	.L652
	comisd	xmm4, QWORD PTR .LC264[rip]
	ja	.L652
.L5020:
.L2225:
.L5025:
.L5026:
.L5027:
.L5028:
.L5029:
.L5030:
.L5031:
	movsd	QWORD PTR 0[rbp+rbx*8], xmm5
	jmp	.L652
.L6600:
	movzx	eax, dil
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	cvtsi2sd	xmm1, eax
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC279[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+102]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC280[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6599:
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	cvtsi2sd	xmm1, eax
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC279[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+51]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC280[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6601:
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	cvtsi2sd	xmm1, eax
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC279[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+102]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC280[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L7520:
.L5019:
	add	rsp, 280
	movapd	xmm1, xmm5
	movapd	xmm0, xmm4
	mov	rdi, rbp
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	_ZN8MEMORY_T5POKEBEdd
.L7272:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC275[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L5678:
	movsd	xmm0, QWORD PTR .LC276[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC275[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7271:
	movsd	xmm1, QWORD PTR .LC288[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC288[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC288[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7270:
	movsd	xmm1, QWORD PTR .LC287[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC287[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC287[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7269:
	movsd	xmm1, QWORD PTR .LC286[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC286[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC286[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7268:
	movsd	xmm1, QWORD PTR .LC285[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC285[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC285[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7267:
	movsd	xmm1, QWORD PTR .LC151[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC151[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC151[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7266:
	movsd	xmm1, QWORD PTR .LC135[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC135[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC135[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7265:
	movsd	xmm1, QWORD PTR .LC284[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7264:
	movsd	xmm1, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC283[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC283[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7263:
	movsd	xmm1, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC282[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC282[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7262:
	movsd	xmm1, QWORD PTR .LC281[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC281[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC281[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7261:
	movsd	xmm1, QWORD PTR .LC98[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7260:
	movsd	xmm1, QWORD PTR .LC86[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC86[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC86[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7259:
	movsd	xmm2, QWORD PTR .LC73[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 24[rsp], xmm5
	movsd	QWORD PTR 16[rsp], xmm4
	movapd	xmm1, xmm2
	movsd	QWORD PTR 8[rsp], xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm2, QWORD PTR 8[rsp]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm2, QWORD PTR 8[rsp]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 16[rsp]
	movsd	xmm5, QWORD PTR 24[rsp]
	jmp	.L2223
.L5664:
	movsd	xmm1, QWORD PTR .LC121[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC121[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC121[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7304:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC163[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC290[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7303:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC290[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC290[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7302:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC290[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC163[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7301:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC290[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC291[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7300:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC290[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC292[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7299:
	movsd	xmm2, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC290[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7298:
	movsd	xmm1, QWORD PTR .LC292[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC290[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7297:
	movsd	xmm1, QWORD PTR .LC291[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC290[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7296:
	movsd	xmm1, QWORD PTR .LC163[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC290[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7295:
	movsd	xmm1, QWORD PTR .LC290[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC290[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7294:
	movsd	xmm0, QWORD PTR .LC276[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7293:
	movsd	xmm0, QWORD PTR .LC276[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC290[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7292:
	movsd	xmm0, QWORD PTR .LC276[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC291[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7291:
	movsd	xmm0, QWORD PTR .LC276[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7290:
	movsd	xmm0, QWORD PTR .LC276[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC291[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7289:
	movsd	xmm0, QWORD PTR .LC276[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC290[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7288:
	movsd	xmm0, QWORD PTR .LC276[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7287:
	movsd	xmm0, QWORD PTR .LC276[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC274[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7286:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC274[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7285:
	movsd	xmm1, QWORD PTR .LC290[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC274[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7284:
	movsd	xmm1, QWORD PTR .LC291[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC274[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7283:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC274[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7282:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC291[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC274[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7281:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC290[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC274[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7280:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC274[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7279:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC275[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC274[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7278:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC275[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7277:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC275[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC290[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7276:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC275[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC291[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7275:
	movsd	xmm2, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC275[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7274:
	movsd	xmm1, QWORD PTR .LC291[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC275[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7273:
	movsd	xmm1, QWORD PTR .LC290[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC275[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7368:
	movsd	xmm1, QWORD PTR .LC281[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7367:
	movsd	xmm1, QWORD PTR .LC98[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7366:
	movsd	xmm0, QWORD PTR .LC276[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC129[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7365:
	movsd	xmm0, QWORD PTR .LC276[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7364:
	movsd	xmm0, QWORD PTR .LC276[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC435[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7363:
	movsd	xmm0, QWORD PTR .LC276[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7362:
	movsd	xmm0, QWORD PTR .LC276[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC435[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7361:
	movsd	xmm0, QWORD PTR .LC276[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7360:
	movsd	xmm0, QWORD PTR .LC276[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC129[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7359:
	movsd	xmm0, QWORD PTR .LC276[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC274[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7358:
	movsd	xmm1, QWORD PTR .LC129[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC274[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7357:
	movsd	xmm1, QWORD PTR .LC98[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC274[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7356:
	movsd	xmm1, QWORD PTR .LC435[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC274[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7355:
	movsd	xmm1, QWORD PTR .LC284[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC274[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7354:
	movsd	xmm1, QWORD PTR .LC284[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC435[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC274[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7353:
	movsd	xmm1, QWORD PTR .LC284[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC274[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7352:
	movsd	xmm1, QWORD PTR .LC284[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC129[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC274[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7351:
	movsd	xmm1, QWORD PTR .LC284[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC275[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC274[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7350:
	movsd	xmm1, QWORD PTR .LC284[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC275[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC129[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7349:
	movsd	xmm1, QWORD PTR .LC284[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC275[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7348:
	movsd	xmm1, QWORD PTR .LC284[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC275[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC435[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7347:
	movsd	xmm2, QWORD PTR .LC284[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC275[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7346:
	movsd	xmm1, QWORD PTR .LC435[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC275[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7345:
	movsd	xmm1, QWORD PTR .LC98[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC275[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7344:
	movsd	xmm1, QWORD PTR .LC129[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC275[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7343:
	movsd	xmm0, QWORD PTR .LC276[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC275[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7342:
	movsd	xmm1, QWORD PTR .LC286[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC293[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7341:
	movsd	xmm1, QWORD PTR .LC286[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7340:
	movsd	xmm1, QWORD PTR .LC286[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC295[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7339:
	movsd	xmm1, QWORD PTR .LC286[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7338:
	movsd	xmm1, QWORD PTR .LC286[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC295[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7337:
	movsd	xmm1, QWORD PTR .LC286[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7336:
	movsd	xmm1, QWORD PTR .LC286[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC293[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7335:
	movsd	xmm2, QWORD PTR .LC286[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC286[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7334:
	movsd	xmm1, QWORD PTR .LC293[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC286[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7333:
	movsd	xmm1, QWORD PTR .LC294[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC286[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7332:
	movsd	xmm1, QWORD PTR .LC295[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC286[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7331:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC286[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7330:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC295[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC286[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7329:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC286[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7328:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC293[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC286[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7327:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC286[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC286[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7326:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC286[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC293[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7325:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC286[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7324:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC286[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC295[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7323:
	movsd	xmm2, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC286[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7322:
	movsd	xmm1, QWORD PTR .LC295[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC286[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7321:
	movsd	xmm1, QWORD PTR .LC294[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC286[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7320:
	movsd	xmm1, QWORD PTR .LC293[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC286[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7319:
	movsd	xmm1, QWORD PTR .LC286[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC286[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7318:
	movsd	xmm1, QWORD PTR .LC290[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC163[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7317:
	movsd	xmm1, QWORD PTR .LC290[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC291[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7316:
	movsd	xmm1, QWORD PTR .LC290[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC292[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7315:
	movsd	xmm1, QWORD PTR .LC290[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7314:
	movsd	xmm1, QWORD PTR .LC290[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC292[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7313:
	movsd	xmm1, QWORD PTR .LC290[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC291[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7312:
	movsd	xmm1, QWORD PTR .LC290[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC163[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7311:
	movsd	xmm2, QWORD PTR .LC290[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC290[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7310:
	movsd	xmm1, QWORD PTR .LC163[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC290[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7309:
	movsd	xmm1, QWORD PTR .LC291[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC290[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7308:
	movsd	xmm1, QWORD PTR .LC292[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC290[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7307:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC290[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7306:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC292[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC290[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7305:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC291[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC290[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7178:
.L4792:
	cvtsd2si	rax, QWORD PTR 395576[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rsi, QWORD PTR 395584[rbp]
	cvtsd2si	rcx, QWORD PTR 395592[rbp]
	cvtsd2si	rdx, QWORD PTR 395600[rbp]
	sal	rax, 32
	sal	rsi, 24
	add	rax, rsi
	sal	rcx, 16
	add	rax, rcx
	sal	rdx, 8
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 395608[rbp]
	movsd	QWORD PTR 395568[rbp], xmm0
	jmp	.L652
.L7177:
.L4790:
	cvtsd2si	rax, QWORD PTR 395520[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rsi, QWORD PTR 395528[rbp]
	cvtsd2si	rcx, QWORD PTR 395536[rbp]
	cvtsd2si	rdx, QWORD PTR 395544[rbp]
	sal	rax, 32
	sal	rsi, 24
	add	rax, rsi
	sal	rcx, 16
	add	rax, rcx
	sal	rdx, 8
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 395552[rbp]
	movsd	QWORD PTR 395512[rbp], xmm0
	jmp	.L652
.L7176:
.L4788:
	cvtsd2si	rax, QWORD PTR 395464[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rsi, QWORD PTR 395472[rbp]
	cvtsd2si	rcx, QWORD PTR 395480[rbp]
	cvtsd2si	rdx, QWORD PTR 395488[rbp]
	sal	rax, 32
	sal	rsi, 24
	add	rax, rsi
	sal	rcx, 16
	add	rax, rcx
	sal	rdx, 8
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 395496[rbp]
	movsd	QWORD PTR 395456[rbp], xmm0
	jmp	.L652
.L7175:
.L4786:
	cvtsd2si	rax, QWORD PTR 395408[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rsi, QWORD PTR 395416[rbp]
	cvtsd2si	rcx, QWORD PTR 395424[rbp]
	cvtsd2si	rdx, QWORD PTR 395432[rbp]
	sal	rax, 32
	sal	rsi, 24
	add	rax, rsi
	sal	rcx, 16
	add	rax, rcx
	sal	rdx, 8
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 395440[rbp]
	movsd	QWORD PTR 395400[rbp], xmm0
	jmp	.L652
.L7174:
.L4772:
	cvtsd2si	rax, QWORD PTR 395352[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rsi, QWORD PTR 395360[rbp]
	cvtsd2si	rcx, QWORD PTR 395368[rbp]
	cvtsd2si	rdx, QWORD PTR 395376[rbp]
	sal	rax, 32
	sal	rsi, 24
	add	rax, rsi
	sal	rcx, 16
	add	rax, rcx
	sal	rdx, 8
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 395384[rbp]
	movsd	QWORD PTR 395344[rbp], xmm0
	jmp	.L652
.L7173:
.L4770:
	movsd	xmm0, QWORD PTR 395344[rbp]
	movsd	xmm3, QWORD PTR .LC1[rip]
	cvtsd2si	rdi, xmm0
	movsd	xmm2, QWORD PTR 0[rbp+rdi*8]
	comisd	xmm3, xmm2
	ja	.L4773
	comisd	xmm2, QWORD PTR .LC496[rip]
	jbe	.L7521
.L4773:
	comisd	xmm2, QWORD PTR .LC498[rip]
	jb	.L4776
	comisd	xmm2, QWORD PTR .LC513[rip]
	jbe	.L6259
.L4777:
.L4776:
	comisd	xmm2, QWORD PTR .LC133[rip]
	jb	.L4778
	comisd	xmm2, QWORD PTR .LC139[rip]
	jbe	.L6259
.L4779:
.L4778:
	comisd	xmm2, QWORD PTR .LC140[rip]
	jb	.L6341
	comisd	xmm2, QWORD PTR .LC285[rip]
	jbe	.L6259
.L6341:
	movsd	xmm6, QWORD PTR .LC107[rip]
	movsd	xmm2, QWORD PTR .LC105[rip]
	movsd	xmm7, QWORD PTR .LC106[rip]
	movsd	xmm8, QWORD PTR .LC108[rip]
.L4775:
.L4781:
	addsd	xmm2, xmm0
	movapd	xmm1, xmm0
	addsd	xmm3, xmm0
	addsd	xmm1, xmm7
	cvtsd2si	rdx, xmm2
	cvtsd2si	rax, xmm3
	cvtsd2si	rsi, QWORD PTR 0[rbp+rdx*8]
	cvtsd2si	rdx, xmm1
	movapd	xmm1, xmm0
	addsd	xmm0, xmm8
	cvtsd2si	rax, QWORD PTR 0[rbp+rax*8]
	addsd	xmm1, xmm6
	cvtsd2si	rdi, xmm0
	sal	rsi, 24
	pxor	xmm0, xmm0
	cvtsd2si	rcx, QWORD PTR 0[rbp+rdx*8]
	cvtsd2si	rdx, xmm1
	sal	rax, 32
	add	rax, rsi
	sal	rcx, 16
	cvtsd2si	rdx, QWORD PTR 0[rbp+rdx*8]
	add	rax, rcx
	sal	rdx, 8
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 0[rbp+rdi*8]
	comisd	xmm0, QWORD PTR .LC2707[rip]
	movsd	QWORD PTR 395400[rbp], xmm0
	jb	.L4782
	comisd	xmm0, QWORD PTR .LC2708[rip]
	jbe	.L7522
.L4782:
	comisd	xmm0, QWORD PTR .LC2709[rip]
	movsd	QWORD PTR 8[rsp], xmm6
	jb	.L652
	comisd	xmm0, QWORD PTR .LC2710[rip]
	ja	.L652
.L4784:
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T5POKEBEdd
	movsd	xmm6, QWORD PTR 8[rsp]
	addsd	xmm6, QWORD PTR 395344[rbp]
	movsd	QWORD PTR 395344[rbp], xmm6
	jmp	.L652
.L7522:
.L4783:
	movsd	xmm1, QWORD PTR 8[rbp]
	pxor	xmm0, xmm0
	mov	rdi, rbp
	movsd	QWORD PTR 8[rsp], xmm7
	movsd	QWORD PTR 394912[rbp], xmm1
	call	_ZN8MEMORY_T5POKEBEdd
	movsd	xmm7, QWORD PTR 8[rsp]
	addsd	xmm7, QWORD PTR 395344[rbp]
	movsd	QWORD PTR 395344[rbp], xmm7
	jmp	.L652
.L7172:
.L4748:
	xor	edx, edx
	lea	rsi, STRCODE$[rip]
	mov	edi, 1
	call	fb_PrintString@PLT
	pxor	xmm1, xmm1
	xor	r8d, r8d
	xor	ecx, ecx
	push	rax
	mov	rdi, QWORD PTR FGIMAGE$[rip]
	mov	esi, -2147483644
	xor	r9d, r9d
	push	0
	lea	rdx, STRCODE$[rip]
	movaps	xmm0, xmm1
	push	0
	push	0
	call	fb_GfxDrawString@PLT
	add	rsp, 312
	xor	r8d, r8d
	mov	ecx, 1
	pop	rbx
	lea	rdx, .LC3[rip]
	pop	rbp
	or	rsi, -1
	pop	r12
	lea	rdi, STRCODE$[rip]
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_StrAssign@PLT
.L7171:
.L4737:
	pxor	xmm3, xmm3
	comisd	xmm5, xmm3
	je	.L6246
	comisd	xmm5, QWORD PTR .LC1[rip]
	je	.L7523
	comisd	xmm5, QWORD PTR .LC105[rip]
	je	.L7524
	comisd	xmm5, QWORD PTR .LC106[rip]
	je	.L7525
	comisd	xmm5, QWORD PTR .LC107[rip]
	je	.L7526
	comisd	xmm5, QWORD PTR .LC108[rip]
	je	.L7527
	comisd	xmm5, QWORD PTR .LC109[rip]
	je	.L4667
	comisd	xmm5, QWORD PTR .LC110[rip]
	je	.L6252
	comisd	xmm5, QWORD PTR .LC111[rip]
	je	.L7528
	comisd	xmm5, QWORD PTR .LC5[rip]
	je	.L7529
	comisd	xmm5, QWORD PTR .LC112[rip]
	jne	.L652
.L4768:
	pxor	xmm0, xmm0
	pxor	xmm3, xmm3
	pxor	xmm2, xmm2
	xor	r8d, r8d
	cvtsd2si	rcx, QWORD PTR 393584[rbp]
	pxor	xmm1, xmm1
	cvtsd2ss	xmm0, QWORD PTR 394840[rbp]
	cvtsd2ss	xmm3, QWORD PTR 394872[rbp]
	cvtsd2si	rsi, QWORD PTR 394832[rbp]
	mov	rdi, QWORD PTR BGIMAGE$[rip]
	xor	edx, edx
	cvtsd2ss	xmm2, QWORD PTR 394864[rbp]
	cvtsd2ss	xmm1, QWORD PTR 394848[rbp]
	add	rsp, 280
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_GfxLine@PLT
.L7521:
.L4774:
	movapd	xmm1, xmm0
	movsd	xmm2, QWORD PTR .LC105[rip]
	movsd	xmm7, QWORD PTR .LC106[rip]
	movsd	QWORD PTR 40[rsp], xmm3
	addsd	xmm1, xmm3
	movsd	xmm6, QWORD PTR .LC107[rip]
	movsd	xmm8, QWORD PTR .LC108[rip]
	movsd	QWORD PTR 32[rsp], xmm2
	movsd	QWORD PTR 24[rsp], xmm7
	cvtsd2si	rax, xmm1
	movapd	xmm1, xmm0
	movsd	QWORD PTR 16[rsp], xmm6
	addsd	xmm1, xmm2
	movsd	QWORD PTR 8[rsp], xmm8
	cvtsd2si	rdx, xmm1
	movapd	xmm1, xmm0
	cvtsd2si	rax, QWORD PTR 0[rbp+rax*8]
	addsd	xmm1, xmm7
	cvtsd2si	rsi, QWORD PTR 0[rbp+rdx*8]
	cvtsd2si	rdx, xmm1
	movapd	xmm1, xmm0
	addsd	xmm0, xmm8
	sal	rax, 32
	addsd	xmm1, xmm6
	cvtsd2si	r8, xmm0
	sal	rsi, 24
	cvtsd2si	rcx, QWORD PTR 0[rbp+rdx*8]
	add	rax, rsi
	cvtsd2si	rdx, xmm1
	pxor	xmm1, xmm1
	sal	rcx, 16
	cvtsd2si	rdx, QWORD PTR 0[rbp+rdx*8]
	add	rax, rcx
	sal	rdx, 8
	add	rax, rdx
	cvtsi2sd	xmm1, rax
	addsd	xmm1, QWORD PTR 0[rbp+r8*8]
	movsd	QWORD PTR 394912[rbp], xmm1
	movsd	xmm0, QWORD PTR 0[rbp+rdi*8]
	mov	rdi, rbp
	call	_ZN8MEMORY_T5POKEBEdd
	movsd	xmm0, QWORD PTR .LC109[rip]
	addsd	xmm0, QWORD PTR 395344[rbp]
	movsd	xmm8, QWORD PTR 8[rsp]
	movsd	xmm6, QWORD PTR 16[rsp]
	movsd	xmm7, QWORD PTR 24[rsp]
	movsd	xmm2, QWORD PTR 32[rsp]
	movsd	xmm3, QWORD PTR 40[rsp]
	movsd	QWORD PTR 395344[rbp], xmm0
	jmp	.L4781
.L6259:
.L4780:
	movapd	xmm0, xmm2
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 8[rsp], xmm3
	call	_ZN8MEMORY_T5POKEBEdd
	movsd	xmm0, QWORD PTR 395344[rbp]
	movsd	xmm6, QWORD PTR .LC107[rip]
	movsd	xmm2, QWORD PTR .LC105[rip]
	movsd	xmm7, QWORD PTR .LC106[rip]
	addsd	xmm0, xmm6
	movsd	xmm3, QWORD PTR 8[rsp]
	movsd	xmm8, QWORD PTR .LC108[rip]
	movsd	QWORD PTR 395344[rbp], xmm0
	jmp	.L4781
.L7529:
.L4767:
	pxor	xmm0, xmm0
	pxor	xmm3, xmm3
	pxor	xmm2, xmm2
	xor	r8d, r8d
	cvtsd2si	rcx, QWORD PTR 393584[rbp]
	pxor	xmm1, xmm1
	cvtsd2ss	xmm0, QWORD PTR 394840[rbp]
	cvtsd2ss	xmm3, QWORD PTR 394872[rbp]
	cvtsd2si	rsi, QWORD PTR 394824[rbp]
	mov	rdi, QWORD PTR FGIMAGE$[rip]
	xor	edx, edx
	cvtsd2ss	xmm2, QWORD PTR 394864[rbp]
	cvtsd2ss	xmm1, QWORD PTR 394848[rbp]
	add	rsp, 280
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_GfxLine@PLT
.L7528:
.L4765:
	pxor	xmm0, xmm0
	pxor	xmm2, xmm2
	pxor	xmm1, xmm1
	xor	edx, edx
	cvtsd2si	rsi, QWORD PTR 394832[rbp]
	cvtsd2ss	xmm0, QWORD PTR 394840[rbp]
	cvtsd2ss	xmm2, QWORD PTR 393584[rbp]
	cvtsd2ss	xmm1, QWORD PTR 394848[rbp]
	mov	rdi, QWORD PTR BGIMAGE$[rip]
	pxor	xmm4, xmm4
	mov	ecx, 4
	movss	xmm5, DWORD PTR .LC2700[rip]
	add	rsp, 280
	movaps	xmm3, xmm4
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_GfxEllipse@PLT
.L6252:
.L4762:
	pxor	xmm0, xmm0
	pxor	xmm3, xmm3
	pxor	xmm2, xmm2
	xor	r8d, r8d
	pxor	xmm1, xmm1
	cvtsd2ss	xmm0, QWORD PTR 394840[rbp]
	cvtsd2si	rsi, QWORD PTR 394832[rbp]
	cvtsd2ss	xmm3, QWORD PTR 394872[rbp]
	cvtsd2ss	xmm2, QWORD PTR 394864[rbp]
	mov	ecx, 65535
	mov	edx, 2
	cvtsd2ss	xmm1, QWORD PTR 394848[rbp]
	mov	rdi, QWORD PTR BGIMAGE$[rip]
	add	rsp, 280
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_GfxLine@PLT
.L7527:
.L4760:
	pxor	xmm0, xmm0
	pxor	xmm3, xmm3
	pxor	xmm2, xmm2
	xor	r8d, r8d
	pxor	xmm1, xmm1
	cvtsd2ss	xmm0, QWORD PTR 394840[rbp]
	cvtsd2si	rsi, QWORD PTR 394832[rbp]
	cvtsd2ss	xmm3, QWORD PTR 394872[rbp]
	cvtsd2ss	xmm2, QWORD PTR 394864[rbp]
	mov	ecx, 65535
	mov	edx, 1
	cvtsd2ss	xmm1, QWORD PTR 394848[rbp]
	mov	rdi, QWORD PTR BGIMAGE$[rip]
	add	rsp, 280
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_GfxLine@PLT
.L7526:
.L4758:
	pxor	xmm0, xmm0
	pxor	xmm3, xmm3
	pxor	xmm2, xmm2
	xor	r8d, r8d
	pxor	xmm1, xmm1
	cvtsd2ss	xmm0, QWORD PTR 394840[rbp]
	cvtsd2si	rsi, QWORD PTR 394824[rbp]
	cvtsd2ss	xmm3, QWORD PTR 394872[rbp]
	cvtsd2ss	xmm2, QWORD PTR 394864[rbp]
	mov	ecx, 65535
	mov	edx, 1
	cvtsd2ss	xmm1, QWORD PTR 394848[rbp]
	mov	rdi, QWORD PTR FGIMAGE$[rip]
	add	rsp, 280
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_GfxLine@PLT
.L7525:
.L4756:
	pxor	xmm0, xmm0
	pxor	xmm3, xmm3
	pxor	xmm2, xmm2
	xor	r8d, r8d
	cvtsd2si	rsi, QWORD PTR 394832[rbp]
	pxor	xmm1, xmm1
	cvtsd2ss	xmm0, QWORD PTR 394840[rbp]
	cvtsd2ss	xmm3, QWORD PTR 394872[rbp]
	cvtsd2ss	xmm2, QWORD PTR 394864[rbp]
	cvtsd2ss	xmm1, QWORD PTR 394848[rbp]
	mov	rdi, QWORD PTR BGIMAGE$[rip]
	mov	ecx, 65535
	add	rsp, 280
	xor	edx, edx
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_GfxLine@PLT
.L7524:
.L4754:
	pxor	xmm0, xmm0
	pxor	xmm3, xmm3
	pxor	xmm2, xmm2
	xor	r8d, r8d
	cvtsd2si	rsi, QWORD PTR 394824[rbp]
	pxor	xmm1, xmm1
	cvtsd2ss	xmm0, QWORD PTR 394840[rbp]
	cvtsd2ss	xmm3, QWORD PTR 394872[rbp]
	cvtsd2ss	xmm2, QWORD PTR 394864[rbp]
	cvtsd2ss	xmm1, QWORD PTR 394848[rbp]
	mov	rdi, QWORD PTR FGIMAGE$[rip]
	mov	ecx, 65535
	add	rsp, 280
	xor	edx, edx
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_GfxLine@PLT
.L7523:
.L4752:
	pxor	xmm0, xmm0
	pxor	xmm1, xmm1
	xor	ecx, ecx
	mov	edx, 4
	cvtsd2si	rsi, QWORD PTR 394832[rbp]
	cvtsd2ss	xmm0, QWORD PTR 394840[rbp]
	cvtsd2ss	xmm1, QWORD PTR 394848[rbp]
	mov	rdi, QWORD PTR BGIMAGE$[rip]
	add	rsp, 280
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_GfxPset@PLT
.L6246:
.L4749:
	pxor	xmm0, xmm0
	pxor	xmm1, xmm1
	xor	ecx, ecx
	mov	edx, 4
	cvtsd2si	rsi, QWORD PTR 394824[rbp]
	cvtsd2ss	xmm0, QWORD PTR 394840[rbp]
	cvtsd2ss	xmm1, QWORD PTR 394848[rbp]
	mov	rdi, QWORD PTR FGIMAGE$[rip]
	add	rsp, 280
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_GfxPset@PLT
.L7488:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC607[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC274[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7487:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC578[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC274[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7486:
	movsd	xmm1, QWORD PTR .LC86[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC90[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7485:
	movsd	xmm1, QWORD PTR .LC86[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC94[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7484:
	movsd	xmm1, QWORD PTR .LC86[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC102[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7483:
	movsd	xmm1, QWORD PTR .LC86[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7482:
	movsd	xmm1, QWORD PTR .LC86[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC102[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7481:
	movsd	xmm1, QWORD PTR .LC86[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC94[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7480:
	movsd	xmm1, QWORD PTR .LC86[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC90[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7479:
	movsd	xmm2, QWORD PTR .LC86[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC86[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7478:
	movsd	xmm1, QWORD PTR .LC90[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC86[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7477:
	movsd	xmm1, QWORD PTR .LC94[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC86[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7476:
	movsd	xmm1, QWORD PTR .LC102[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC86[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7475:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC86[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7474:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC102[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC86[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7473:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC94[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC86[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7472:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC90[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC86[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7471:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC86[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC86[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7470:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC86[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC90[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7469:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC86[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC94[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7468:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC86[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC102[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7467:
	movsd	xmm2, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC86[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7466:
	movsd	xmm1, QWORD PTR .LC102[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC86[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7465:
	movsd	xmm1, QWORD PTR .LC94[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC86[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7464:
	movsd	xmm1, QWORD PTR .LC90[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC86[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7463:
	movsd	xmm1, QWORD PTR .LC86[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC86[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7462:
	movsd	xmm1, QWORD PTR .LC73[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC81[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7461:
	movsd	xmm1, QWORD PTR .LC73[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC90[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7460:
	movsd	xmm1, QWORD PTR .LC73[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7459:
	movsd	xmm1, QWORD PTR .LC73[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7458:
	movsd	xmm1, QWORD PTR .LC73[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7457:
	movsd	xmm1, QWORD PTR .LC73[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC90[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7456:
	movsd	xmm1, QWORD PTR .LC73[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC81[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7455:
	movsd	xmm2, QWORD PTR .LC73[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 24[rsp], xmm5
	movsd	QWORD PTR 16[rsp], xmm4
	movapd	xmm1, xmm2
	movsd	QWORD PTR 8[rsp], xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm2, QWORD PTR 8[rsp]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 16[rsp]
	movsd	xmm5, QWORD PTR 24[rsp]
	jmp	.L2223
.L7454:
	movsd	xmm1, QWORD PTR .LC81[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC73[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7453:
	movsd	xmm1, QWORD PTR .LC90[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC73[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7452:
	movsd	xmm1, QWORD PTR .LC98[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC73[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7451:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC73[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7450:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC73[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7449:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC90[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC73[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7448:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC81[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC73[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7447:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 24[rsp], xmm5
	movsd	QWORD PTR 16[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm2, QWORD PTR .LC73[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	movapd	xmm1, xmm2
	movsd	QWORD PTR 8[rsp], xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm2, QWORD PTR 8[rsp]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 16[rsp]
	movsd	xmm5, QWORD PTR 24[rsp]
	jmp	.L2223
.L7446:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC73[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC81[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7445:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC73[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC90[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7444:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC73[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7443:
	movsd	xmm2, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC73[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7442:
	movsd	xmm1, QWORD PTR .LC98[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC73[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7441:
	movsd	xmm1, QWORD PTR .LC90[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC73[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7440:
	movsd	xmm1, QWORD PTR .LC81[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC73[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7439:
	movsd	xmm2, QWORD PTR .LC73[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 24[rsp], xmm5
	movsd	QWORD PTR 16[rsp], xmm4
	movapd	xmm1, xmm2
	movsd	QWORD PTR 8[rsp], xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm2, QWORD PTR 8[rsp]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 16[rsp]
	movsd	xmm5, QWORD PTR 24[rsp]
	jmp	.L2223
.L7438:
	movsd	xmm0, QWORD PTR .LC276[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC6[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7437:
	movsd	xmm0, QWORD PTR .LC276[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC73[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7436:
	movsd	xmm0, QWORD PTR .LC276[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC90[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7435:
	movsd	xmm0, QWORD PTR .LC276[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7434:
	movsd	xmm0, QWORD PTR .LC276[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC90[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7433:
	movsd	xmm0, QWORD PTR .LC276[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC73[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7432:
	movsd	xmm0, QWORD PTR .LC276[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC6[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7431:
	movsd	xmm0, QWORD PTR .LC276[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC274[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7430:
	movsd	xmm1, QWORD PTR .LC6[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC274[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7429:
	movsd	xmm1, QWORD PTR .LC73[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC274[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7428:
	movsd	xmm1, QWORD PTR .LC90[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC274[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7427:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC274[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7426:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC90[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC274[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7425:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC73[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC274[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7424:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC6[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC274[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7423:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC275[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC274[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7422:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC275[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC6[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7421:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC275[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC73[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7420:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC275[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC90[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7419:
	movsd	xmm2, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC275[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7418:
	movsd	xmm1, QWORD PTR .LC90[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC275[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7417:
	movsd	xmm1, QWORD PTR .LC73[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC275[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7416:
	movsd	xmm1, QWORD PTR .LC6[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC275[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7415:
	movsd	xmm0, QWORD PTR .LC276[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC275[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7414:
	movsd	xmm1, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC296[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7413:
	movsd	xmm1, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC283[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7412:
	movsd	xmm1, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC297[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7411:
	movsd	xmm1, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7410:
	movsd	xmm1, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC297[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7409:
	movsd	xmm1, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC283[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7408:
	movsd	xmm1, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC296[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7407:
	movsd	xmm2, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC282[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7406:
	movsd	xmm1, QWORD PTR .LC296[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC282[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7405:
	movsd	xmm1, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC282[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7404:
	movsd	xmm1, QWORD PTR .LC297[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC282[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7403:
	movsd	xmm1, QWORD PTR .LC284[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC282[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7402:
	movsd	xmm1, QWORD PTR .LC284[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC297[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC282[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7401:
	movsd	xmm1, QWORD PTR .LC284[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC283[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC282[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7400:
	movsd	xmm1, QWORD PTR .LC284[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC296[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC282[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7399:
	movsd	xmm1, QWORD PTR .LC284[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC282[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC282[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7398:
	movsd	xmm1, QWORD PTR .LC284[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC282[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC296[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7397:
	movsd	xmm1, QWORD PTR .LC284[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC282[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC283[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7396:
	movsd	xmm1, QWORD PTR .LC284[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC282[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC297[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7395:
	movsd	xmm2, QWORD PTR .LC284[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC282[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7394:
	movsd	xmm1, QWORD PTR .LC297[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC282[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7393:
	movsd	xmm1, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC282[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7392:
	movsd	xmm1, QWORD PTR .LC296[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC282[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7391:
	movsd	xmm1, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC282[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7390:
	movsd	xmm1, QWORD PTR .LC98[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC281[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7389:
	movsd	xmm1, QWORD PTR .LC98[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC435[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7388:
	movsd	xmm1, QWORD PTR .LC98[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC283[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7387:
	movsd	xmm1, QWORD PTR .LC98[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7386:
	movsd	xmm1, QWORD PTR .LC98[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC283[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7385:
	movsd	xmm1, QWORD PTR .LC98[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC435[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7384:
	movsd	xmm1, QWORD PTR .LC98[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC281[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7383:
	movsd	xmm2, QWORD PTR .LC98[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7382:
	movsd	xmm1, QWORD PTR .LC281[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7381:
	movsd	xmm1, QWORD PTR .LC435[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7380:
	movsd	xmm1, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7379:
	movsd	xmm1, QWORD PTR .LC284[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7378:
	movsd	xmm1, QWORD PTR .LC284[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC283[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7377:
	movsd	xmm1, QWORD PTR .LC284[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC435[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7376:
	movsd	xmm1, QWORD PTR .LC284[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC281[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7375:
	movsd	xmm1, QWORD PTR .LC284[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7374:
	movsd	xmm1, QWORD PTR .LC284[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC281[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7373:
	movsd	xmm1, QWORD PTR .LC284[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC435[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7372:
	movsd	xmm1, QWORD PTR .LC284[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC283[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7371:
	movsd	xmm2, QWORD PTR .LC284[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7370:
	movsd	xmm1, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7369:
	movsd	xmm1, QWORD PTR .LC435[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC276[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC275[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC274[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L2223
.L7496:
.L4536:
	xor	r8d, r8d
	mov	ecx, 8
	or	rsi, -1
	lea	rdx, .LC2623[rip]
	lea	rdi, FILENAME$[rip]
	call	fb_StrAssign@PLT
	add	rsp, 280
	xor	r8d, r8d
	mov	ecx, 6
	pop	rbx
	lea	rdx, .LC2624[rip]
	pop	rbp
	or	rsi, -1
	pop	r12
	lea	rdi, COMPILER$[rip]
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_StrAssign@PLT
.L6898:
.L3448:
	mov	esi, 9
	lea	rdi, .LC1829[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6900:
.L3452:
	mov	esi, 5
	lea	rdi, .LC1831[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6899:
.L3450:
	mov	esi, 5
	lea	rdi, .LC1830[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6904:
.L3460:
	mov	esi, 5
	lea	rdi, .LC1835[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6903:
.L3458:
	mov	esi, 4
	lea	rdi, .LC1834[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6902:
.L3456:
	mov	esi, 2
	lea	rdi, .LC1833[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6901:
.L3454:
	mov	esi, 7
	lea	rdi, .LC1832[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6912:
.L3476:
	mov	esi, 9
	lea	rdi, .LC1843[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6911:
.L3474:
	mov	esi, 15
	lea	rdi, .LC1842[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6910:
.L3472:
	mov	esi, 7
	lea	rdi, .LC1841[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6909:
.L3470:
	mov	esi, 9
	lea	rdi, .LC1840[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6908:
.L3468:
	mov	esi, 6
	lea	rdi, .LC1839[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6907:
.L3466:
	mov	esi, 10
	lea	rdi, .LC1838[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6906:
.L3464:
	mov	esi, 7
	lea	rdi, .LC1837[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6905:
.L3462:
	mov	esi, 4
	lea	rdi, .LC1836[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6928:
.L3508:
	mov	esi, 7
	lea	rdi, .LC1859[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6927:
.L3506:
	mov	esi, 8
	lea	rdi, .LC1858[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6926:
.L3504:
	mov	esi, 11
	lea	rdi, .LC1857[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6925:
.L3502:
	mov	esi, 8
	lea	rdi, .LC1856[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6924:
.L3500:
	mov	esi, 12
	lea	rdi, .LC1855[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6923:
.L3498:
	mov	esi, 11
	lea	rdi, .LC1854[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6922:
.L3496:
	mov	esi, 10
	lea	rdi, .LC1853[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6921:
.L3494:
	mov	esi, 7
	lea	rdi, .LC1852[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6920:
.L3492:
	mov	esi, 19
	lea	rdi, .LC1851[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6919:
.L3490:
	mov	esi, 10
	lea	rdi, .LC1850[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6918:
.L3488:
	mov	esi, 7
	lea	rdi, .LC1849[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6917:
.L3486:
	mov	esi, 10
	lea	rdi, .LC1848[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6916:
.L3484:
	mov	esi, 9
	lea	rdi, .LC1847[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6915:
.L3482:
	mov	esi, 4
	lea	rdi, .LC1846[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6914:
.L3480:
	mov	esi, 9
	lea	rdi, .LC1845[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6913:
.L3478:
	mov	esi, 3
	lea	rdi, .LC1844[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6960:
.L3572:
	mov	esi, 5
	lea	rdi, .LC1891[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6959:
.L3570:
	mov	esi, 2
	lea	rdi, .LC1890[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6958:
.L3568:
	mov	esi, 4
	lea	rdi, .LC1889[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6957:
.L3566:
	mov	esi, 5
	lea	rdi, .LC1888[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6956:
.L3564:
	mov	esi, 4
	lea	rdi, .LC1887[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6955:
.L3562:
	mov	esi, 3
	lea	rdi, .LC1886[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6954:
.L3560:
	mov	esi, 2
	lea	rdi, .LC1885[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6953:
.L3558:
	mov	esi, 7
	lea	rdi, .LC1884[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6952:
.L3556:
	mov	esi, 6
	lea	rdi, .LC1883[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6951:
.L3554:
	mov	esi, 8
	lea	rdi, .LC1882[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6950:
.L3552:
	mov	esi, 9
	lea	rdi, .LC1881[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6949:
.L3550:
	mov	esi, 11
	lea	rdi, .LC1880[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6948:
.L3548:
	mov	esi, 6
	lea	rdi, .LC1879[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6947:
.L3546:
	mov	esi, 6
	lea	rdi, .LC1878[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6946:
.L3544:
	mov	esi, 7
	lea	rdi, .LC1877[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6945:
.L3542:
	mov	esi, 5
	lea	rdi, .LC1876[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6944:
.L3540:
	mov	esi, 7
	lea	rdi, .LC1875[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6943:
.L3538:
	mov	esi, 5
	lea	rdi, .LC1874[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6942:
.L3536:
	mov	esi, 10
	lea	rdi, .LC1873[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6941:
.L3534:
	mov	esi, 7
	lea	rdi, .LC1872[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6940:
.L3532:
	mov	esi, 9
	lea	rdi, .LC1871[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6939:
.L3530:
	mov	esi, 6
	lea	rdi, .LC1870[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6938:
.L3528:
	mov	esi, 9
	lea	rdi, .LC1869[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6937:
.L3526:
	mov	esi, 7
	lea	rdi, .LC1868[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6936:
.L3524:
	mov	esi, 6
	lea	rdi, .LC1867[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6935:
.L3522:
	mov	esi, 5
	lea	rdi, .LC1866[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6934:
.L3520:
	mov	esi, 6
	lea	rdi, .LC1865[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6933:
.L3518:
	mov	esi, 7
	lea	rdi, .LC1864[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6932:
.L3516:
	mov	esi, 7
	lea	rdi, .LC1863[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6931:
.L3514:
	mov	esi, 9
	lea	rdi, .LC1862[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6930:
.L3512:
	mov	esi, 3
	lea	rdi, .LC1861[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6929:
.L3510:
	mov	esi, 6
	lea	rdi, .LC1860[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7022:
.L3701:
	mov	esi, 5
	lea	rdi, .LC1954[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7021:
.L3699:
	mov	esi, 3
	lea	rdi, .LC1953[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7020:
.L3697:
	mov	esi, 9
	lea	rdi, .LC1952[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7019:
.L3695:
	mov	esi, 8
	lea	rdi, .LC1951[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7018:
.L3693:
	mov	esi, 5
	lea	rdi, .LC1950[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7017:
.L3691:
	mov	esi, 10
	lea	rdi, .LC1949[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7016:
.L3689:
	mov	esi, 3
	lea	rdi, .LC1948[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7015:
.L3687:
	mov	esi, 3
	lea	rdi, .LC1947[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7014:
.L3685:
	mov	esi, 7
	lea	rdi, .LC1946[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7013:
.L3683:
	mov	esi, 12
	lea	rdi, .LC1945[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7012:
.L3681:
	mov	esi, 10
	lea	rdi, .LC1944[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7011:
.L3679:
	mov	esi, 8
	lea	rdi, .LC1943[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7010:
.L3677:
	mov	esi, 8
	lea	rdi, .LC1942[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7009:
.L3675:
	mov	esi, 8
	lea	rdi, .LC1941[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7008:
.L3673:
	mov	esi, 4
	lea	rdi, .LC1940[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7007:
.L3671:
	mov	esi, 4
	lea	rdi, .LC1939[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7006:
.L3669:
	mov	esi, 9
	lea	rdi, .LC1938[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7005:
.L3667:
	mov	esi, 8
	lea	rdi, .LC1937[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3665:
	mov	esi, 6
	lea	rdi, .LC1936[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7004:
.L3663:
	mov	esi, 13
	lea	rdi, .LC1935[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7003:
.L3661:
	mov	esi, 7
	lea	rdi, .LC1934[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7002:
.L3659:
	mov	esi, 4
	lea	rdi, .LC1933[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7001:
.L3656:
	mov	esi, 8
	lea	rdi, .LC1932[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3654:
.L3657:
	mov	esi, 7
	lea	rdi, .LC1931[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7000:
.L3652:
	mov	esi, 6
	lea	rdi, .LC1930[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6999:
.L3650:
	mov	esi, 6
	lea	rdi, .LC1929[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6998:
.L3648:
	mov	esi, 2
	lea	rdi, .LC1928[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6997:
.L3646:
	mov	esi, 6
	lea	rdi, .LC1927[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6996:
.L3644:
	mov	esi, 10
	lea	rdi, .LC1926[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6995:
.L3642:
	mov	esi, 12
	lea	rdi, .LC1925[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6994:
.L3640:
	mov	esi, 5
	lea	rdi, .LC1924[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6993:
.L3638:
	mov	esi, 9
	lea	rdi, .LC1923[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6992:
.L3636:
	mov	esi, 4
	lea	rdi, .LC1922[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6991:
.L3634:
	mov	esi, 7
	lea	rdi, .LC1921[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6990:
.L3632:
	mov	esi, 11
	lea	rdi, .LC1920[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6989:
.L3630:
	mov	esi, 13
	lea	rdi, .LC1919[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6988:
.L3628:
	mov	esi, 13
	lea	rdi, .LC1918[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6987:
.L3626:
	mov	esi, 9
	lea	rdi, .LC1917[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6986:
.L3624:
	mov	esi, 15
	lea	rdi, .LC1916[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6985:
.L3622:
	mov	esi, 19
	lea	rdi, .LC1915[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6984:
.L3620:
	mov	esi, 13
	lea	rdi, .LC1914[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6983:
.L3618:
	mov	esi, 20
	lea	rdi, .LC1913[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6982:
.L3616:
	mov	esi, 14
	lea	rdi, .LC1912[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6981:
.L3614:
	mov	esi, 9
	lea	rdi, .LC1911[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6980:
.L3612:
	mov	esi, 15
	lea	rdi, .LC1910[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6979:
.L3610:
	mov	esi, 20
	lea	rdi, .LC1909[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6978:
.L3608:
	mov	esi, 14
	lea	rdi, .LC1908[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6977:
.L3606:
	mov	esi, 9
	lea	rdi, .LC1907[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6976:
.L3604:
	mov	esi, 11
	lea	rdi, .LC1906[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6975:
.L3602:
	mov	esi, 4
	lea	rdi, .LC1905[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6974:
.L3600:
	mov	esi, 8
	lea	rdi, .LC1904[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6973:
.L3598:
	mov	esi, 1
	lea	rdi, .LC246[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6972:
.L3596:
	mov	esi, 3
	lea	rdi, .LC1903[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6971:
.L3594:
	mov	esi, 4
	lea	rdi, .LC1902[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6970:
.L3592:
	mov	esi, 4
	lea	rdi, .LC1901[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6969:
.L3590:
	mov	esi, 9
	lea	rdi, .LC1900[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6968:
.L3588:
	mov	esi, 3
	lea	rdi, .LC1899[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6967:
.L3586:
	mov	esi, 7
	lea	rdi, .LC1898[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6966:
.L3584:
	mov	esi, 5
	lea	rdi, .LC1897[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6965:
.L3582:
	mov	esi, 9
	lea	rdi, .LC1896[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6964:
.L3580:
	mov	esi, 6
	lea	rdi, .LC1895[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6963:
.L3578:
	mov	esi, 3
	lea	rdi, .LC1894[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6962:
.L3576:
	mov	esi, 5
	lea	rdi, .LC1893[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6961:
.L3574:
	mov	esi, 7
	lea	rdi, .LC1892[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L6598:
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	cvtsi2sd	xmm1, esi
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC279[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+51]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC280[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6597:
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	cvtsi2sd	xmm1, esi
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC279[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC280[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6596:
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 8[rsp], xmm4
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+192]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC279[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC280[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L6595:
	movzx	eax, BYTE PTR BYTES$[rip+255]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	xmm0, QWORD PTR .LC278[rip]
	movsd	QWORD PTR 8[rsp], xmm4
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip+176]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC279[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR BYTES$[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC280[rip]
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L5035
.L7500:
.L4544:
	xor	r8d, r8d
	mov	ecx, 8
	or	rsi, -1
	lea	rdx, .LC788[rip]
	lea	rdi, FILENAME$[rip]
	call	fb_StrAssign@PLT
	add	rsp, 280
	xor	r8d, r8d
	mov	ecx, 8
	pop	rbx
	lea	rdx, .LC2630[rip]
	pop	rbp
	or	rsi, -1
	pop	r12
	lea	rdi, COMPILER$[rip]
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_StrAssign@PLT
.L7499:
.L4542:
	xor	r8d, r8d
	mov	ecx, 8
	or	rsi, -1
	lea	rdx, .LC2629[rip]
	lea	rdi, FILENAME$[rip]
	call	fb_StrAssign@PLT
	add	rsp, 280
	xor	r8d, r8d
	mov	ecx, 1
	pop	rbx
	lea	rdx, .LC3[rip]
	pop	rbp
	or	rsi, -1
	pop	r12
	lea	rdi, COMPILER$[rip]
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_StrAssign@PLT
.L7498:
.L4540:
	xor	r8d, r8d
	mov	ecx, 8
	or	rsi, -1
	lea	rdx, .LC2627[rip]
	lea	rdi, FILENAME$[rip]
	call	fb_StrAssign@PLT
	add	rsp, 280
	xor	r8d, r8d
	mov	ecx, 5
	pop	rbx
	lea	rdx, .LC2628[rip]
	pop	rbp
	or	rsi, -1
	pop	r12
	lea	rdi, COMPILER$[rip]
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_StrAssign@PLT
.L7497:
.L4538:
	xor	r8d, r8d
	mov	ecx, 8
	or	rsi, -1
	lea	rdx, .LC2625[rip]
	lea	rdi, FILENAME$[rip]
	call	fb_StrAssign@PLT
	add	rsp, 280
	xor	r8d, r8d
	mov	ecx, 10
	pop	rbx
	lea	rdx, .LC2626[rip]
	pop	rbp
	or	rsi, -1
	pop	r12
	lea	rdi, COMPILER$[rip]
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_StrAssign@PLT
.L7508:
.L4560:
	xor	r8d, r8d
	mov	ecx, 6
	or	rsi, -1
	lea	rdx, .LC2645[rip]
	lea	rdi, FILENAME$[rip]
	call	fb_StrAssign@PLT
	add	rsp, 280
	xor	r8d, r8d
	mov	ecx, 18
	pop	rbx
	lea	rdx, .LC2646[rip]
	pop	rbp
	or	rsi, -1
	pop	r12
	lea	rdi, COMPILER$[rip]
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_StrAssign@PLT
.L7507:
.L4558:
	xor	r8d, r8d
	mov	ecx, 10
	or	rsi, -1
	lea	rdx, .LC2643[rip]
	lea	rdi, FILENAME$[rip]
	call	fb_StrAssign@PLT
	add	rsp, 280
	xor	r8d, r8d
	mov	ecx, 7
	pop	rbx
	lea	rdx, .LC2644[rip]
	pop	rbp
	or	rsi, -1
	pop	r12
	lea	rdi, COMPILER$[rip]
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_StrAssign@PLT
.L7506:
.L4556:
	xor	r8d, r8d
	mov	ecx, 8
	or	rsi, -1
	lea	rdx, .LC2641[rip]
	lea	rdi, FILENAME$[rip]
	call	fb_StrAssign@PLT
	add	rsp, 280
	xor	r8d, r8d
	mov	ecx, 8
	pop	rbx
	lea	rdx, .LC2642[rip]
	pop	rbp
	or	rsi, -1
	pop	r12
	lea	rdi, COMPILER$[rip]
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_StrAssign@PLT
.L7505:
.L4554:
	xor	r8d, r8d
	mov	ecx, 7
	or	rsi, -1
	lea	rdx, .LC2639[rip]
	lea	rdi, FILENAME$[rip]
	call	fb_StrAssign@PLT
	add	rsp, 280
	xor	r8d, r8d
	mov	ecx, 6
	pop	rbx
	lea	rdx, .LC2640[rip]
	pop	rbp
	or	rsi, -1
	pop	r12
	lea	rdi, COMPILER$[rip]
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_StrAssign@PLT
.L7504:
.L4552:
	xor	r8d, r8d
	mov	ecx, 7
	or	rsi, -1
	lea	rdx, .LC2637[rip]
	lea	rdi, FILENAME$[rip]
	call	fb_StrAssign@PLT
	add	rsp, 280
	xor	r8d, r8d
	mov	ecx, 5
	pop	rbx
	lea	rdx, .LC2638[rip]
	pop	rbp
	or	rsi, -1
	pop	r12
	lea	rdi, COMPILER$[rip]
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_StrAssign@PLT
.L7503:
.L4550:
	xor	r8d, r8d
	mov	ecx, 8
	or	rsi, -1
	lea	rdx, .LC2635[rip]
	lea	rdi, FILENAME$[rip]
	call	fb_StrAssign@PLT
	add	rsp, 280
	xor	r8d, r8d
	mov	ecx, 5
	pop	rbx
	lea	rdx, .LC2636[rip]
	pop	rbp
	or	rsi, -1
	pop	r12
	lea	rdi, COMPILER$[rip]
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_StrAssign@PLT
.L7502:
.L4548:
	xor	r8d, r8d
	mov	ecx, 6
	or	rsi, -1
	lea	rdx, .LC2633[rip]
	lea	rdi, FILENAME$[rip]
	call	fb_StrAssign@PLT
	add	rsp, 280
	xor	r8d, r8d
	mov	ecx, 5
	pop	rbx
	lea	rdx, .LC2634[rip]
	pop	rbp
	or	rsi, -1
	pop	r12
	lea	rdi, COMPILER$[rip]
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_StrAssign@PLT
.L7501:
.L4546:
	xor	r8d, r8d
	mov	ecx, 9
	or	rsi, -1
	lea	rdx, .LC2631[rip]
	lea	rdi, FILENAME$[rip]
	call	fb_StrAssign@PLT
	add	rsp, 280
	xor	r8d, r8d
	mov	ecx, 6
	pop	rbx
	lea	rdx, .LC2632[rip]
	pop	rbp
	or	rsi, -1
	pop	r12
	lea	rdi, COMPILER$[rip]
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_StrAssign@PLT
.L7134:
.L3925:
	mov	esi, 4
	lea	rdi, .LC2065[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7133:
.L3923:
	mov	esi, 4
	lea	rdi, .LC2064[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7132:
.L3921:
	mov	esi, 3
	lea	rdi, .LC2063[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7131:
.L3919:
	mov	esi, 8
	lea	rdi, .LC2062[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7130:
.L3917:
	mov	esi, 5
	lea	rdi, .LC2061[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7129:
.L3915:
	mov	esi, 5
	lea	rdi, .LC2060[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7128:
.L3913:
	mov	esi, 3
	lea	rdi, .LC2059[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7127:
.L3911:
	mov	esi, 1
	lea	rdi, .LC247[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7126:
.L3909:
	mov	esi, 6
	lea	rdi, .LC2058[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7125:
.L3907:
	mov	esi, 3
	lea	rdi, .LC2057[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7124:
.L3905:
	mov	esi, 12
	lea	rdi, .LC2056[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7123:
.L3903:
	mov	esi, 4
	lea	rdi, .LC2055[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7122:
.L3901:
	mov	esi, 8
	lea	rdi, .LC2054[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7121:
.L3899:
	mov	esi, 6
	lea	rdi, .LC2053[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7120:
.L3897:
	mov	esi, 4
	lea	rdi, .LC2052[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7119:
.L3895:
	mov	esi, 11
	lea	rdi, .LC2051[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7118:
.L3893:
	mov	esi, 8
	lea	rdi, .LC2050[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7117:
.L3891:
	mov	esi, 6
	lea	rdi, .LC2049[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7116:
.L3889:
	mov	esi, 14
	lea	rdi, .LC2048[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7115:
.L3887:
	mov	esi, 5
	lea	rdi, .LC2047[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7114:
.L3885:
	mov	esi, 3
	lea	rdi, .LC2046[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7113:
.L3883:
	mov	esi, 8
	lea	rdi, .LC2045[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7112:
.L3881:
	mov	esi, 12
	lea	rdi, .LC2044[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7111:
.L3879:
	mov	esi, 9
	lea	rdi, .LC2043[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7110:
.L3877:
	mov	esi, 6
	lea	rdi, .LC2042[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7109:
.L3875:
	mov	esi, 10
	lea	rdi, .LC2041[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7108:
.L3873:
	mov	esi, 11
	lea	rdi, .LC2040[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7107:
.L3871:
	mov	esi, 11
	lea	rdi, .LC2039[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7106:
.L3869:
	mov	esi, 11
	lea	rdi, .LC2038[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7105:
.L3867:
	mov	esi, 8
	lea	rdi, .LC2037[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7104:
.L3865:
	mov	esi, 5
	lea	rdi, .LC2036[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7103:
.L3863:
	mov	esi, 6
	lea	rdi, .LC2035[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7102:
.L3861:
	mov	esi, 9
	lea	rdi, .LC2034[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7101:
.L3859:
	mov	esi, 6
	lea	rdi, .LC2033[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7100:
.L3857:
	mov	esi, 6
	lea	rdi, .LC2032[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7099:
.L3855:
	mov	esi, 6
	lea	rdi, .LC2031[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7098:
.L3853:
	mov	esi, 6
	lea	rdi, .LC2030[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7097:
.L3851:
	mov	esi, 5
	lea	rdi, .LC2029[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7096:
.L3849:
	mov	esi, 8
	lea	rdi, .LC2028[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7095:
.L3847:
	mov	esi, 6
	lea	rdi, .LC2027[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7094:
.L3845:
	mov	esi, 3
	lea	rdi, .LC2026[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7093:
.L3843:
	mov	esi, 4
	lea	rdi, .LC2025[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7092:
.L3841:
	mov	esi, 4
	lea	rdi, .LC2024[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7091:
.L3839:
	mov	esi, 4
	lea	rdi, .LC2023[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7090:
.L3837:
	mov	esi, 5
	lea	rdi, .LC2022[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7089:
.L3835:
	mov	esi, 4
	lea	rdi, .LC2021[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7088:
.L3833:
	mov	esi, 6
	lea	rdi, .LC2020[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7087:
.L3831:
	mov	esi, 7
	lea	rdi, .LC2019[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7086:
.L3829:
	mov	esi, 6
	lea	rdi, .LC2018[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7085:
.L3827:
	mov	esi, 10
	lea	rdi, .LC2017[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7084:
.L3825:
	mov	esi, 6
	lea	rdi, .LC2016[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7083:
.L3823:
	mov	esi, 10
	lea	rdi, .LC2015[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7082:
.L3821:
	mov	esi, 5
	lea	rdi, .LC2014[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7081:
.L3819:
	mov	esi, 10
	lea	rdi, .LC2013[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7080:
.L3817:
	mov	esi, 10
	lea	rdi, .LC2012[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7079:
.L3815:
	mov	esi, 8
	lea	rdi, .LC2011[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7078:
.L3813:
	mov	esi, 4
	lea	rdi, .LC2010[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7077:
.L3811:
	mov	esi, 3
	lea	rdi, .LC2009[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7076:
.L3809:
	mov	esi, 7
	lea	rdi, .LC2008[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7075:
.L3807:
	mov	esi, 9
	lea	rdi, .LC2007[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7074:
.L3805:
	mov	esi, 11
	lea	rdi, .LC2006[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7073:
.L3803:
	mov	esi, 5
	lea	rdi, .LC2005[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7072:
.L3801:
	mov	esi, 13
	lea	rdi, .LC2004[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7071:
.L3799:
	mov	esi, 6
	lea	rdi, .LC2003[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7070:
.L3797:
	mov	esi, 7
	lea	rdi, .LC2002[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7069:
.L3795:
	mov	esi, 7
	lea	rdi, .LC2001[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7068:
.L3793:
	mov	esi, 9
	lea	rdi, .LC2000[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7067:
.L3791:
	mov	esi, 12
	lea	rdi, .LC1999[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7066:
.L3789:
	mov	esi, 6
	lea	rdi, .LC1998[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7065:
.L3787:
	mov	esi, 8
	lea	rdi, .LC1997[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7064:
.L3785:
	mov	esi, 13
	lea	rdi, .LC1996[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7063:
.L3783:
	mov	esi, 10
	lea	rdi, .LC1995[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7062:
.L3781:
	mov	esi, 3
	lea	rdi, .LC1994[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7061:
.L3779:
	mov	esi, 7
	lea	rdi, .LC1993[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7060:
.L3777:
	mov	esi, 6
	lea	rdi, .LC1992[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7059:
.L3775:
	mov	esi, 5
	lea	rdi, .LC1991[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7058:
.L3773:
	mov	esi, 15
	lea	rdi, .LC1990[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7057:
.L3771:
	mov	esi, 6
	lea	rdi, .LC1989[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7056:
.L3769:
	mov	esi, 5
	lea	rdi, .LC1988[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7055:
.L3767:
	mov	esi, 11
	lea	rdi, .LC1987[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7054:
.L3765:
	mov	esi, 14
	lea	rdi, .LC1986[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7053:
.L3763:
	mov	esi, 12
	lea	rdi, .LC1985[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7052:
.L3761:
	mov	esi, 10
	lea	rdi, .LC1984[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7051:
.L3759:
	mov	esi, 14
	lea	rdi, .LC1983[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7050:
.L3757:
	mov	esi, 14
	lea	rdi, .LC1982[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7049:
.L3755:
	mov	esi, 12
	lea	rdi, .LC1981[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7048:
.L3753:
	mov	esi, 4
	lea	rdi, .LC1980[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7047:
.L3751:
	mov	esi, 3
	lea	rdi, .LC1979[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7046:
.L3749:
	mov	esi, 5
	lea	rdi, .LC1978[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7045:
.L3747:
	mov	esi, 9
	lea	rdi, .LC1977[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7044:
.L3745:
	mov	esi, 6
	lea	rdi, .LC1976[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7043:
.L3743:
	mov	esi, 15
	lea	rdi, .LC1975[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7042:
.L3741:
	mov	esi, 10
	lea	rdi, .LC1974[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7041:
.L3739:
	mov	esi, 17
	lea	rdi, .LC1973[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7040:
.L3737:
	mov	esi, 6
	lea	rdi, .LC1972[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7039:
.L3735:
	mov	esi, 8
	lea	rdi, .LC1971[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7038:
.L3733:
	mov	esi, 9
	lea	rdi, .LC1970[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7037:
.L3731:
	mov	esi, 5
	lea	rdi, .LC1969[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7036:
.L3729:
	mov	esi, 5
	lea	rdi, .LC1968[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7035:
.L3727:
	mov	esi, 10
	lea	rdi, .LC1967[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7034:
.L3725:
	mov	esi, 3
	lea	rdi, .LC1966[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7033:
.L3723:
	mov	esi, 5
	lea	rdi, .LC1965[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7032:
.L3721:
	mov	esi, 5
	lea	rdi, .LC1964[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7031:
.L3719:
	mov	esi, 5
	lea	rdi, .LC1963[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7030:
.L3717:
	mov	esi, 6
	lea	rdi, .LC1962[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7029:
.L3715:
	mov	esi, 4
	lea	rdi, .LC1961[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7028:
.L3713:
	mov	esi, 4
	lea	rdi, .LC1960[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7027:
.L3711:
	mov	esi, 9
	lea	rdi, .LC1959[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7026:
.L3709:
	mov	esi, 3
	lea	rdi, .LC1958[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7025:
.L3707:
	mov	esi, 18
	lea	rdi, .LC1957[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7024:
.L3705:
	mov	esi, 4
	lea	rdi, .LC1956[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L7023:
.L3703:
	mov	esi, 3
	lea	rdi, .LC1955[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
	.size	_ZN8MEMORY_T6POKE64Edd, .-_ZN8MEMORY_T6POKE64Edd
	.section	.rodata.str1.1
.LC2822:
	.string	"64c.251913-01.bin"
.LC2823:
	.string	"./chargen/2.c64"
.LC2825:
	.string	"BYTES"
.LC2826:
	.string	"FREE"
.LC2827:
	.string	"MICROSOFT"
.LC2828:
	.string	"BASIC"
.LC2829:
	.string	" RAM SYSTEM"
	.text
	.p2align 4
	.globl	_ZN8MEMORY_TC1Ev
	.type	_ZN8MEMORY_TC1Ev, @function
_ZN8MEMORY_TC1Ev:
.L7531:
	push	r13
	mov	edx, 134217728
	xor	esi, esi
	push	r12
	push	rbp
	push	rbx
	mov	rbx, rdi
	sub	rsp, 72
	call	memset@PLT
	lea	rdi, 134217728[rbx]
	mov	edx, 131072
	xor	esi, esi
	call	memset@PLT
	lea	rdi, 134348800[rbx]
	mov	edx, 131072
	xor	esi, esi
	call	memset@PLT
	lea	rdi, 134479872[rbx]
	mov	edx, 262024
	xor	esi, esi
	call	memset@PLT
	lea	rdi, 134741904[rbx]
	mov	edx, ebx
	xor	eax, eax
	and	rdi, -8
	pxor	xmm0, xmm0
	lea	rsi, 134750096[rbx]
	mov	QWORD PTR 134741896[rbx], 0
	sub	edx, edi
	lea	rbp, 30[rsp]
	mov	QWORD PTR 134750080[rbx], 0
	lea	ecx, 134750088[rdx]
	lea	rdx, 134752976[rbx]
	shr	ecx, 3
	rep stosq
	mov	rdi, rsi
	mov	ecx, ebx
	mov	QWORD PTR 134750088[rbx], 0
	mov	QWORD PTR 134752960[rbx], 0
	and	rdi, -8
	sub	ecx, edi
	add	ecx, 134752968
	shr	ecx, 3
	rep stosq
	mov	rdi, rdx
	mov	edx, ebx
	mov	QWORD PTR 134752968[rbx], 0
	mov	QWORD PTR 134755840[rbx], 0
	and	rdi, -8
	sub	edx, edi
	lea	ecx, 134755848[rdx]
	shr	ecx, 3
	rep stosq
	movzx	eax, BYTE PTR ds:4808108
	mov	rcx, rax
	sal	rax, cl
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR SYS_OFFSET$[rip], xmm0
	movzx	r13d, WORD PTR ds:4808096
	mov	WORD PTR 30[rsp], r13w
	mov	r12, r13
	.p2align 4,,10
	.p2align 3
.L7532:
	mov	rdi, rbp
	call	fb_DataReadUShort@PLT
	movzx	eax, WORD PTR 30[rsp]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, eax
	movsd	QWORD PTR [rbx+r13*8], xmm0
	movzx	eax, BYTE PTR ds:4808097
	movzx	edx, BYTE PTR ds:4808111
	movzx	r9d, BYTE PTR ds:4808104
	mov	rsi, rax
	add	r12d, eax
	movzx	eax, BYTE PTR ds:4808100
	mov	rdi, rdx
	mov	r8d, r9d
	movzx	r13d, r12w
	mov	ecx, eax
	and	r8d, 63
	sal	rdi, cl
	mov	ecx, r9d
	sal	rsi, cl
	add	rsi, rdi
	add	rsi, rdx
	cmp	r13, rsi
	jle	.L7532
	movzx	edi, BYTE PTR ds:4808098
	mov	ecx, r8d
	sal	rdi, cl
	movzx	r8d, di
	.p2align 4,,10
	.p2align 3
.L7533:
	mov	ecx, eax
	mov	rsi, rdx
	pxor	xmm0, xmm0
	sal	rsi, cl
	add	rdx, rsi
	cvtsi2sd	xmm0, rdx
	movsd	QWORD PTR [rbx+r8*8], xmm0
	movzx	eax, BYTE PTR ds:4808097
	movzx	edx, BYTE PTR ds:4808111
	movzx	ecx, BYTE PTR ds:4808104
	movzx	esi, BYTE PTR ds:4808099
	add	edi, eax
	movzx	eax, BYTE PTR ds:4808100
	mov	r11, rdx
	sal	rsi, cl
	movzx	r8d, di
	mov	ecx, eax
	sal	r11, cl
	add	rsi, r11
	add	rsi, rdx
	cmp	r8, rsi
	jle	.L7533
	movzx	ebp, BYTE PTR ds:4808096
	mov	r12, rbp
	.p2align 4,,10
	.p2align 3
.L7534:
	pxor	xmm1, xmm1
	movzx	edx, BYTE PTR ds:4808107
	pxor	xmm2, xmm2
	mov	ecx, eax
	cvtsi2sd	xmm1, rbp
	mulsd	xmm1, QWORD PTR .LC2821[rip]
	sal	rbp, 3
	cvtsi2sd	xmm2, rdx
	movapd	xmm0, xmm1
	movsd	QWORD PTR 8[rsp], xmm1
	divsd	xmm0, xmm2
	cvtsd2si	rdx, xmm0
	pxor	xmm0, xmm0
	sal	rdx, cl
	add	rdx, rax
	cvtsi2sd	xmm0, rdx
	call	sin@PLT
	movsd	xmm1, QWORD PTR 8[rsp]
	movsd	QWORD PTR 134750088[rbx+rbp], xmm0
	pxor	xmm0, xmm0
	movzx	eax, BYTE PTR ds:4808107
	movzx	ecx, BYTE PTR ds:4808100
	cvtsi2sd	xmm0, rax
	divsd	xmm1, xmm0
	pxor	xmm0, xmm0
	cvtsd2si	rax, xmm1
	sal	rax, cl
	add	rax, rcx
	cvtsi2sd	xmm0, rax
	call	cos@PLT
	movsd	QWORD PTR 134752968[rbx+rbp], xmm0
	movzx	eax, BYTE PTR ds:4808097
	movzx	ecx, BYTE PTR ds:4808104
	movzx	esi, BYTE PTR ds:4808102
	mov	rdx, rax
	add	r12d, eax
	movzx	eax, BYTE PTR ds:4808100
	sal	rdx, cl
	movzx	ebp, r12w
	mov	ecx, eax
	mov	edi, eax
	sal	rsi, cl
	movzx	ecx, BYTE PTR ds:4808103
	and	edi, 63
	add	rdx, rsi
	add	rdx, rcx
	cmp	rbp, rdx
	jle	.L7534
	pxor	xmm0, xmm0
	pxor	xmm1, xmm1
	lea	rbp, 29[rsp]
	mov	ecx, edi
	movzx	eax, BYTE PTR ds:4808111
	movzx	esi, BYTE PTR ds:4808108
	mov	rdi, rbx
	mov	rdx, rax
	sal	rdx, cl
	mov	ecx, esi
	add	rdx, rax
	movzx	eax, sil
	sal	rax, cl
	movzx	ecx, BYTE PTR ds:4808098
	cvtsi2sd	xmm1, rdx
	add	rax, rcx
	cvtsi2sd	xmm0, rax
	call	_ZN8MEMORY_T6POKE64Edd
	pxor	xmm0, xmm0
	pxor	xmm1, xmm1
	mov	rdi, rbx
	movzx	eax, BYTE PTR ds:4808111
	movzx	ecx, BYTE PTR ds:4808100
	movzx	esi, BYTE PTR ds:4808108
	mov	rdx, rax
	sal	rdx, cl
	mov	ecx, esi
	add	rdx, rax
	movzx	eax, sil
	sal	rax, cl
	movzx	ecx, BYTE PTR ds:4808099
	cvtsi2sd	xmm1, rdx
	add	rax, rcx
	cvtsi2sd	xmm0, rax
	call	_ZN8MEMORY_T6POKE64Edd
	pxor	xmm0, xmm0
	pxor	xmm1, xmm1
	movzx	eax, BYTE PTR ds:4808111
	movzx	edx, BYTE PTR ds:4808100
	movzx	edi, BYTE PTR ds:4808108
	mov	rsi, rax
	mov	ecx, edx
	sal	rsi, cl
	mov	ecx, edi
	add	rsi, rax
	movzx	eax, dil
	mov	rdi, rbx
	sal	rax, cl
	cvtsi2sd	xmm1, rsi
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	call	_ZN8MEMORY_T6POKE64Edd
	pxor	xmm0, xmm0
	pxor	xmm1, xmm1
	mov	rdi, rbx
	movzx	eax, BYTE PTR ds:4808111
	movzx	ecx, BYTE PTR ds:4808100
	movzx	esi, BYTE PTR ds:4808108
	mov	rdx, rax
	sal	rdx, cl
	mov	ecx, esi
	add	rdx, rax
	movzx	eax, sil
	sal	rax, cl
	movzx	ecx, BYTE PTR ds:4808101
	cvtsi2sd	xmm1, rdx
	add	rax, rcx
	cvtsi2sd	xmm0, rax
	call	_ZN8MEMORY_T6POKE64Edd
	pxor	xmm0, xmm0
	pxor	xmm1, xmm1
	mov	rdi, rbx
	movzx	eax, BYTE PTR ds:4808111
	movzx	ecx, BYTE PTR ds:4808100
	movzx	esi, BYTE PTR ds:4808108
	mov	rdx, rax
	sal	rdx, cl
	mov	ecx, esi
	add	rdx, rax
	movzx	eax, sil
	sal	rax, cl
	movzx	ecx, BYTE PTR ds:4808105
	cvtsi2sd	xmm1, rdx
	add	rax, rcx
	cvtsi2sd	xmm0, rax
	call	_ZN8MEMORY_T6POKE64Edd
	pxor	xmm0, xmm0
	pxor	xmm1, xmm1
	mov	rdi, rbx
	movzx	eax, BYTE PTR ds:4808111
	movzx	ecx, BYTE PTR ds:4808100
	movzx	edx, BYTE PTR ds:4808108
	mov	rsi, rax
	sal	rsi, cl
	mov	r11, rdx
	add	rsi, rax
	movzx	eax, cl
	movzx	ecx, BYTE PTR ds:4808102
	cvtsi2sd	xmm1, rsi
	sal	rax, cl
	mov	ecx, edx
	sal	r11, cl
	movzx	ecx, BYTE PTR ds:4808098
	add	rax, r11
	sal	rdx, cl
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	call	_ZN8MEMORY_T6POKE64Edd
	pxor	xmm0, xmm0
	pxor	xmm1, xmm1
	movzx	edx, BYTE PTR ds:4808104
	movzx	edi, BYTE PTR ds:4808100
	movzx	eax, BYTE PTR ds:4808098
	mov	rcx, rdx
	mov	r11, rdx
	sal	rax, cl
	cvtsi2sd	xmm1, edi
	mov	ecx, edi
	mov	rdi, rbx
	sal	r11, cl
	add	rax, r11
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	call	_ZN8MEMORY_T6POKE64Edd
	pxor	xmm0, xmm0
	pxor	xmm1, xmm1
	mov	rdi, rbx
	movzx	ecx, BYTE PTR ds:4808100
	movzx	eax, BYTE PTR ds:4808097
	movzx	esi, BYTE PTR ds:4808111
	sal	rax, cl
	movzx	ecx, BYTE PTR ds:4808108
	add	rsi, rax
	mov	rdx, rax
	movzx	eax, BYTE PTR ds:4808109
	cvtsi2sd	xmm1, rsi
	sal	rax, cl
	add	rax, rdx
	movzx	edx, BYTE PTR ds:4808104
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	edx, BYTE PTR ds:4808108
	movzx	ecx, BYTE PTR ds:4808100
	pxor	xmm0, xmm0
	movzx	eax, BYTE PTR ds:4808110
	movzx	edi, BYTE PTR ds:4808096
	pxor	xmm1, xmm1
	sal	rax, cl
	cvtsi2sd	xmm1, edi
	mov	ecx, edx
	mov	rdi, rbx
	sal	rdx, cl
	add	rax, rdx
	movzx	edx, BYTE PTR ds:4808103
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	edx, BYTE PTR ds:4808108
	movzx	ecx, BYTE PTR ds:4808100
	pxor	xmm0, xmm0
	movzx	eax, BYTE PTR ds:4808110
	movzx	edi, BYTE PTR ds:4808098
	pxor	xmm1, xmm1
	sal	rax, cl
	cvtsi2sd	xmm1, edi
	mov	ecx, edx
	mov	rdi, rbx
	sal	rdx, cl
	add	rax, rdx
	movzx	edx, BYTE PTR ds:4808104
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	edx, BYTE PTR ds:4808108
	movzx	ecx, BYTE PTR ds:4808100
	pxor	xmm0, xmm0
	movzx	eax, BYTE PTR ds:4808110
	movzx	edi, BYTE PTR ds:4808103
	pxor	xmm1, xmm1
	sal	rax, cl
	cvtsi2sd	xmm1, edi
	mov	ecx, edx
	mov	rdi, rbx
	sal	rdx, cl
	add	rax, rdx
	movzx	edx, BYTE PTR ds:4808105
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	edx, BYTE PTR ds:4808108
	movzx	ecx, BYTE PTR ds:4808100
	pxor	xmm0, xmm0
	movzx	eax, BYTE PTR ds:4808110
	movzx	edi, BYTE PTR ds:4808103
	pxor	xmm1, xmm1
	sal	rax, cl
	cvtsi2sd	xmm1, edi
	mov	ecx, edx
	mov	rdi, rbx
	sal	rdx, cl
	add	rax, rdx
	movzx	edx, BYTE PTR ds:4808106
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	call	_ZN8MEMORY_T6POKE64Edd
	mov	esi, 17
	lea	rdi, .LC2822[rip]
	movzx	r13d, BYTE PTR ds:4808096
	mov	BYTE PTR 29[rsp], 0
	call	fb_StrAllocTempDescZEx@PLT
	xor	r9d, r9d
	mov	r8d, 1
	xor	ecx, ecx
	mov	rdi, rax
	xor	edx, edx
	xor	esi, esi
	mov	r12, r13
	call	fb_FileOpen@PLT
	.p2align 4,,10
	.p2align 3
.L7535:
	mov	ecx, 1
	mov	rdx, rbp
	xor	esi, esi
	mov	edi, 1
	call	fb_FileGetLarge@PLT
	movzx	eax, BYTE PTR 29[rsp]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, eax
	movsd	QWORD PTR 134348800[rbx+r13*8], xmm0
	movzx	edx, BYTE PTR ds:4808097
	movzx	ecx, BYTE PTR ds:4808108
	movzx	esi, BYTE PTR ds:4808111
	mov	rax, rdx
	add	r12d, edx
	sal	rax, cl
	movzx	ecx, BYTE PTR ds:4808104
	mov	rdx, rsi
	movzx	r13d, r12w
	sal	rdx, cl
	movzx	ecx, BYTE PTR ds:4808100
	add	rdx, rax
	lea	rax, [rdx+rsi]
	sal	rsi, cl
	add	rax, rsi
	cmp	r13, rax
	jle	.L7535
	movzx	r13d, BYTE PTR ds:4808096
	mov	r12, r13
	.p2align 4,,10
	.p2align 3
.L7536:
	mov	ecx, 1
	mov	rdx, rbp
	xor	esi, esi
	mov	edi, 1
	call	fb_FileGetLarge@PLT
	movzx	eax, BYTE PTR 29[rsp]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, eax
	movsd	QWORD PTR 134217728[rbx+r13*8], xmm0
	movzx	edx, BYTE PTR ds:4808097
	movzx	ecx, BYTE PTR ds:4808108
	movzx	esi, BYTE PTR ds:4808111
	mov	rax, rdx
	add	r12d, edx
	sal	rax, cl
	movzx	ecx, BYTE PTR ds:4808104
	mov	rdx, rsi
	movzx	r13d, r12w
	sal	rdx, cl
	movzx	ecx, BYTE PTR ds:4808100
	add	rdx, rax
	lea	rax, [rdx+rsi]
	sal	rsi, cl
	add	rax, rsi
	cmp	r13, rax
	jle	.L7536
	mov	edi, 1
	call	fb_FileClose@PLT
	mov	esi, 15
	lea	rdi, .LC2823[rip]
	call	fb_StrAllocTempDescZEx@PLT
	xor	r9d, r9d
	xor	ecx, ecx
	xor	edx, edx
	movzx	r8d, BYTE PTR ds:4808097
	mov	rdi, rax
	xor	esi, esi
	call	fb_FileOpen@PLT
	movzx	r13d, BYTE PTR ds:4808096
	mov	r12, r13
	.p2align 4,,10
	.p2align 3
.L7537:
	mov	ecx, 1
	mov	rdx, rbp
	xor	esi, esi
	mov	edi, 1
	call	fb_FileGetLarge@PLT
	movzx	eax, BYTE PTR 29[rsp]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, eax
	movsd	QWORD PTR 134479872[rbx+r13*8], xmm0
	movzx	eax, BYTE PTR ds:4808097
	movzx	ecx, BYTE PTR ds:4808108
	movzx	esi, BYTE PTR ds:4808111
	add	r12d, eax
	mov	edi, eax
	movzx	eax, al
	sal	rax, cl
	movzx	ecx, BYTE PTR ds:4808104
	mov	rdx, rsi
	movzx	r13d, r12w
	sal	rdx, cl
	movzx	ecx, BYTE PTR ds:4808100
	add	rdx, rax
	lea	rax, [rdx+rsi]
	sal	rsi, cl
	add	rax, rsi
	cmp	r13, rax
	jle	.L7537
	movzx	esi, BYTE PTR ds:4808096
	call	fb_FileSeek@PLT
	movzx	ecx, BYTE PTR ds:4808108
	movzx	r12d, BYTE PTR ds:4808098
	sal	r12, cl
	movzx	r13d, r12w
	.p2align 4,,10
	.p2align 3
.L7538:
	mov	ecx, 1
	mov	rdx, rbp
	xor	esi, esi
	mov	edi, 1
	call	fb_FileGetLarge@PLT
	movzx	eax, BYTE PTR 29[rsp]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, eax
	movsd	QWORD PTR 134479872[rbx+r13*8], xmm0
	movzx	eax, BYTE PTR ds:4808097
	movzx	ecx, BYTE PTR ds:4808108
	movzx	esi, BYTE PTR ds:4808111
	add	r12d, eax
	mov	edi, eax
	movzx	eax, BYTE PTR ds:4808099
	mov	rdx, rsi
	movzx	r13d, r12w
	sal	rax, cl
	movzx	ecx, BYTE PTR ds:4808104
	sal	rdx, cl
	movzx	ecx, BYTE PTR ds:4808100
	add	rdx, rax
	lea	rax, [rdx+rsi]
	sal	rsi, cl
	add	rax, rsi
	cmp	r13, rax
	jle	.L7538
	call	fb_FileClose@PLT
	movzx	eax, BYTE PTR ds:4808096
	pxor	xmm0, xmm0
	mov	rdi, rbx
	movsd	xmm1, QWORD PTR .LC2824[rip]
	lea	rbp, 32[rsp]
	cvtsi2sd	xmm0, eax
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	eax, BYTE PTR ds:4808097
	pxor	xmm0, xmm0
	mov	rdi, rbx
	cvtsi2sd	xmm0, eax
	mov	rax, QWORD PTR .LC2824[rip]
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	esi, BYTE PTR ds:4808111
	pxor	xmm0, xmm0
	movzx	edi, BYTE PTR ds:4808108
	movzx	ecx, BYTE PTR ds:4808104
	mov	rax, rsi
	mov	rdx, rsi
	sal	rax, cl
	mov	ecx, edi
	sal	rdx, cl
	movzx	ecx, BYTE PTR ds:4808100
	add	rdx, rax
	movzx	eax, dil
	mov	rdi, rbx
	sal	rsi, cl
	add	rax, rdx
	add	rax, rsi
	cvtsi2sd	xmm0, rax
	mov	rax, QWORD PTR .LC2824[rip]
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	esi, BYTE PTR ds:4808111
	pxor	xmm0, xmm0
	mov	rdi, rbx
	movzx	ecx, BYTE PTR ds:4808108
	mov	rax, rsi
	mov	rdx, rsi
	sal	rax, cl
	movzx	ecx, BYTE PTR ds:4808104
	sal	rdx, cl
	movzx	ecx, BYTE PTR ds:4808100
	add	rdx, rax
	movzx	eax, BYTE PTR ds:4808109
	sal	rsi, cl
	add	rax, rdx
	add	rax, rsi
	cvtsi2sd	xmm0, rax
	mov	rax, QWORD PTR .LC2824[rip]
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	xor	esi, esi
	lea	rdi, .LC3[rip]
	call	fb_StrAllocTempDescZEx@PLT
	pxor	xmm1, xmm1
	xor	r8d, r8d
	xor	edi, edi
	mov	r10, rax
	movzx	ecx, BYTE PTR ds:4808100
	movzx	eax, BYTE PTR ds:4808111
	mov	r9d, 1073741828
	movzx	edx, BYTE PTR ds:4808096
	mov	rsi, rax
	sal	rax, cl
	cvtsi2ss	xmm1, edx
	add	esi, eax
	mov	ecx, edx
	mov	eax, edx
	sal	ecx, 8
	sal	eax, 16
	or	eax, ecx
	sal	esi, 24
	mov	rcx, r10
	or	eax, edx
	xor	edx, edx
	or	esi, eax
	movaps	xmm0, xmm1
	call	fb_GfxPaint@PLT
	pxor	xmm0, xmm0
	pxor	xmm1, xmm1
	movzx	r8d, BYTE PTR ds:4808100
	movzx	esi, BYTE PTR ds:4808106
	movzx	eax, BYTE PTR ds:4808105
	and	r8d, 63
	movzx	edi, BYTE PTR ds:4808103
	mov	ecx, r8d
	sal	rsi, cl
	movzx	ecx, BYTE PTR ds:4808104
	mov	rdx, rdi
	add	rsi, rax
	movzx	eax, BYTE PTR ds:4808110
	cvtsi2sd	xmm1, rsi
	sal	rax, cl
	movzx	ecx, BYTE PTR ds:4808108
	sal	rdx, cl
	mov	ecx, r8d
	add	rdx, rax
	movzx	eax, BYTE PTR ds:4808098
	sal	rdi, cl
	add	rax, rdx
	add	rax, rdi
	mov	rdi, rbx
	cvtsi2sd	xmm0, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	ecx, BYTE PTR ds:4808104
	movzx	eax, BYTE PTR ds:4808110
	pxor	xmm0, xmm0
	movzx	esi, BYTE PTR ds:4808103
	movzx	edi, BYTE PTR ds:4808096
	pxor	xmm1, xmm1
	sal	rax, cl
	movzx	ecx, BYTE PTR ds:4808108
	mov	rdx, rsi
	cvtsi2sd	xmm1, edi
	mov	rdi, rbx
	sal	rdx, cl
	movzx	ecx, BYTE PTR ds:4808100
	add	rdx, rax
	movzx	eax, BYTE PTR ds:4808099
	sal	rsi, cl
	add	rax, rdx
	add	rax, rsi
	cvtsi2sd	xmm0, rax
	call	_ZN8MEMORY_T6POKE64Edd
	pxor	xmm0, xmm0
	pxor	xmm1, xmm1
	movzx	r8d, BYTE PTR ds:4808100
	movzx	esi, BYTE PTR ds:4808104
	movzx	edi, BYTE PTR ds:4808103
	mov	r9d, r8d
	movzx	eax, BYTE PTR ds:4808109
	and	r9d, 63
	mov	r10, rsi
	mov	rdx, rdi
	mov	ecx, r9d
	sal	rsi, cl
	movzx	ecx, BYTE PTR ds:4808108
	add	rsi, rax
	movzx	eax, BYTE PTR ds:4808110
	sal	rdx, cl
	cvtsi2sd	xmm1, rsi
	mov	ecx, r10d
	sal	rax, cl
	mov	ecx, r9d
	add	rdx, rax
	movzx	eax, r8b
	sal	rdi, cl
	add	rax, rdx
	add	rax, rdi
	mov	rdi, rbx
	cvtsi2sd	xmm0, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	ecx, BYTE PTR ds:4808104
	movzx	eax, BYTE PTR ds:4808110
	pxor	xmm0, xmm0
	movzx	esi, BYTE PTR ds:4808103
	movzx	edi, BYTE PTR ds:4808096
	pxor	xmm1, xmm1
	sal	rax, cl
	movzx	ecx, BYTE PTR ds:4808108
	mov	rdx, rsi
	cvtsi2sd	xmm1, edi
	mov	rdi, rbx
	sal	rdx, cl
	movzx	ecx, BYTE PTR ds:4808100
	add	rdx, rax
	movzx	eax, BYTE PTR ds:4808101
	sal	rsi, cl
	add	rax, rdx
	add	rax, rsi
	cvtsi2sd	xmm0, rax
	call	_ZN8MEMORY_T6POKE64Edd
	pxor	xmm0, xmm0
	pxor	xmm1, xmm1
	movzx	edi, BYTE PTR ds:4808100
	movzx	esi, BYTE PTR ds:4808103
	movzx	eax, BYTE PTR ds:4808110
	movzx	r8d, BYTE PTR ds:4808108
	and	edi, 63
	mov	ecx, edi
	mov	r11, rsi
	mov	rdx, r8
	sal	r8, cl
	movzx	ecx, BYTE PTR ds:4808104
	cvtsi2sd	xmm1, r8
	sal	rax, cl
	mov	ecx, edx
	sal	r11, cl
	mov	ecx, edi
	mov	rdi, rbx
	mov	rdx, r11
	sal	rsi, cl
	add	rdx, rax
	movzx	eax, BYTE PTR ds:4808102
	add	rax, rdx
	add	rax, rsi
	cvtsi2sd	xmm0, rax
	call	_ZN8MEMORY_T6POKE64Edd
	pxor	xmm0, xmm0
	pxor	xmm1, xmm1
	movzx	edi, BYTE PTR ds:4808100
	movzx	eax, BYTE PTR ds:4808110
	movzx	esi, BYTE PTR ds:4808103
	movzx	r8d, BYTE PTR ds:4808102
	and	edi, 63
	mov	ecx, edi
	mov	rdx, rsi
	sal	r8, cl
	movzx	ecx, BYTE PTR ds:4808104
	cvtsi2sd	xmm1, r8
	sal	rax, cl
	movzx	ecx, BYTE PTR ds:4808108
	sal	rdx, cl
	mov	ecx, edi
	mov	rdi, rbx
	add	rdx, rax
	lea	rax, [rdx+rsi]
	sal	rsi, cl
	add	rax, rsi
	cvtsi2sd	xmm0, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movzx	esi, BYTE PTR ds:4808096
	mov	edi, 1
	xor	eax, eax
	call	fb_CHR@PLT
	xor	r8d, r8d
	mov	rcx, -1
	mov	rdi, rbp
	mov	rdx, rax
	mov	rsi, -1
	call	fb_StrInit@PLT
	xor	r8d, r8d
	mov	ecx, 6
	mov	rdi, rbp
	lea	rdx, .LC2825[rip]
	mov	rsi, -1
	call	fb_StrAssign@PLT
	movzx	r13d, BYTE PTR ds:4808097
	mov	r12, r13
	.p2align 4,,10
	.p2align 3
.L7539:
	movzx	eax, BYTE PTR ds:4808111
	movzx	ecx, BYTE PTR ds:4808100
	mov	rsi, r13
	mov	rdi, rbp
	mov	rdx, rax
	sal	rdx, cl
	add	rdx, rax
	call	fb_StrMid@PLT
	mov	esi, 1
	mov	rdi, rax
	call	fb_ASC@PLT
	pxor	xmm0, xmm0
	pxor	xmm1, xmm1
	xor	r9d, r9d
	mov	r8d, eax
	movzx	eax, BYTE PTR ds:4808100
	movzx	edx, BYTE PTR ds:4808102
	movzx	ecx, BYTE PTR ds:4808104
	cvtsi2sd	xmm0, r8
	mov	rsi, rax
	mov	rdi, rdx
	sal	rax, cl
	mov	ecx, esi
	sal	rdi, cl
	add	rax, rdi
	add	rax, rdx
	add	rax, r13
	movsd	QWORD PTR 134217728[rbx+rax*8], xmm0
	movzx	edi, BYTE PTR ds:4808100
	movzx	edx, BYTE PTR ds:4808102
	movzx	ecx, BYTE PTR ds:4808104
	mov	rax, rdi
	mov	rsi, rdi
	mov	r11, rdx
	and	eax, 63
	sal	rsi, cl
	mov	ecx, eax
	sal	r11, cl
	add	rsi, r11
	add	rdx, rsi
	add	rdx, r13
	movsd	xmm0, QWORD PTR 134217728[rbx+rdx*8]
	movzx	edx, BYTE PTR ds:4808097
	mov	r8, rdx
	sal	rdx, cl
	movzx	ecx, BYTE PTR ds:4808111
	add	rdx, rcx
	mov	ecx, eax
	cvtsi2sd	xmm1, rdx
	comisd	xmm0, xmm1
	pxor	xmm1, xmm1
	seta	r9b
	sal	rdi, cl
	xor	edx, edx
	cvtsi2sd	xmm1, rdi
	neg	r9d
	comisd	xmm1, xmm0
	seta	dl
	neg	edx
	test	r9d, edx
	jne	.L7542
	add	r12d, r8d
	mov	rsi, -1
	mov	rdi, rbp
	call	fb_StrLen@PLT
	movzx	r13d, r12w
	cmp	r13, rax
	jle	.L7539
	lea	rdx, .LC2826[rip]
	xor	r8d, r8d
	mov	ecx, 5
	mov	rdi, rbp
	mov	rsi, -1
	call	fb_StrAssign@PLT
	movzx	r12d, BYTE PTR ds:4808097
	mov	rdx, r12
	movzx	r13d, r12b
	jmp	.L7545
	.p2align 4,,10
	.p2align 3
.L7595:
	add	r12d, r8d
	mov	rsi, -1
	mov	rdi, rbp
	call	fb_StrLen@PLT
	movzx	r13d, r12w
	cmp	r13, rax
	jg	.L7594
.L7550:
	movzx	edx, BYTE PTR ds:4808097
.L7545:
	mov	rsi, r13
	mov	rdi, rbp
	call	fb_StrMid@PLT
	mov	esi, 1
	mov	rdi, rax
	call	fb_ASC@PLT
	pxor	xmm0, xmm0
	pxor	xmm1, xmm1
	xor	r10d, r10d
	mov	r8d, eax
	movzx	eax, BYTE PTR ds:4808100
	movzx	ecx, BYTE PTR ds:4808104
	movzx	edx, BYTE PTR ds:4808102
	cvtsi2sd	xmm0, r8
	mov	rsi, rax
	sal	rax, cl
	mov	ecx, esi
	sal	rdx, cl
	add	rax, rdx
	movzx	edx, BYTE PTR ds:4808108
	add	rax, rdx
	add	rax, r13
	movsd	QWORD PTR 134217728[rbx+rax*8], xmm0
	movzx	edi, BYTE PTR ds:4808100
	movzx	ecx, BYTE PTR ds:4808104
	movzx	eax, BYTE PTR ds:4808102
	mov	rsi, rdi
	mov	rdx, rdi
	and	esi, 63
	sal	rdx, cl
	mov	ecx, esi
	sal	rax, cl
	add	rax, rdx
	movzx	edx, BYTE PTR ds:4808108
	add	rax, rdx
	movzx	edx, BYTE PTR ds:4808097
	add	rax, r13
	mov	r8, rdx
	sal	rdx, cl
	movzx	ecx, WORD PTR ds:4808111
	sal	rax, 3
	add	rdx, rcx
	lea	r9, 134217728[rbx+rax]
	mov	ecx, esi
	cvtsi2sd	xmm1, rdx
	movsd	xmm0, QWORD PTR [r9]
	comisd	xmm0, xmm1
	pxor	xmm1, xmm1
	seta	r10b
	sal	rdi, cl
	xor	edx, edx
	cvtsi2sd	xmm1, rdi
	neg	r10d
	comisd	xmm1, xmm0
	seta	dl
	neg	edx
	test	r10d, edx
	je	.L7595
	movzx	edx, BYTE PTR ds:4808098
	add	rax, rbx
	sal	rdx, cl
	movsd	xmm0, QWORD PTR 134217728[rax+rdx*8]
	movsd	QWORD PTR [r9], xmm0
	jmp	.L7550
	.p2align 4,,10
	.p2align 3
.L7542:
	movzx	edx, BYTE PTR ds:4808098
	add	rsi, r13
	sal	rsi, 3
	sal	rdx, cl
	lea	rax, [rbx+rsi]
	movsd	xmm0, QWORD PTR 134217728[rax+rdx*8]
	movsd	QWORD PTR 134217728[rbx+rsi], xmm0
	jmp	.L7539
	.p2align 4,,10
	.p2align 3
.L7594:
	movzx	eax, BYTE PTR NIBBLES$[rip+4]
	pxor	xmm0, xmm0
	xor	r8d, r8d
	mov	rdi, rbp
	movzx	ecx, BYTE PTR NIBBLES$[rip+8]
	movzx	edx, BYTE PTR NIBBLES$[rip+7]
	mov	esi, eax
	and	esi, 63
	sal	rax, cl
	mov	ecx, esi
	sal	rdx, cl
	add	rax, rdx
	movzx	edx, BYTE PTR NIBBLES$[rip+13]
	add	rax, rdx
	movzx	edx, BYTE PTR NIBBLES$[rip+2]
	sal	rdx, cl
	movzx	ecx, BYTE PTR NIBBLES$[rip+10]
	add	rdx, rcx
	cvtsi2sd	xmm0, rdx
	movsd	QWORD PTR 134217728[rbx+rax*8], xmm0
	movzx	eax, BYTE PTR NIBBLES$[rip+4]
	movzx	ecx, BYTE PTR NIBBLES$[rip+8]
	pxor	xmm0, xmm0
	movzx	edx, BYTE PTR NIBBLES$[rip+7]
	mov	esi, eax
	sal	rax, cl
	and	esi, 63
	mov	ecx, esi
	sal	rdx, cl
	add	rax, rdx
	movzx	edx, BYTE PTR NIBBLES$[rip+14]
	add	rax, rdx
	movzx	edx, BYTE PTR NIBBLES$[rip+1]
	sal	rdx, cl
	cvtsi2sd	xmm0, rdx
	movsd	QWORD PTR 134217728[rbx+rax*8], xmm0
	movzx	eax, BYTE PTR NIBBLES$[rip+4]
	movzx	ecx, BYTE PTR NIBBLES$[rip+8]
	pxor	xmm0, xmm0
	movzx	edx, BYTE PTR NIBBLES$[rip+7]
	mov	esi, eax
	sal	rax, cl
	and	esi, 63
	mov	ecx, esi
	mov	rsi, -1
	sal	rdx, cl
	add	rax, rdx
	movzx	edx, BYTE PTR NIBBLES$[rip+15]
	add	rax, rdx
	movzx	edx, BYTE PTR NIBBLES$[rip+2]
	sal	rdx, cl
	mov	ecx, 10
	cvtsi2sd	xmm0, rdx
	lea	rdx, .LC2827[rip]
	movsd	QWORD PTR 134217728[rbx+rax*8], xmm0
	call	fb_StrAssign@PLT
	movzx	r12d, BYTE PTR NIBBLES$[rip+1]
	mov	rdx, r12
	movzx	r13d, r12b
	jmp	.L7551
	.p2align 4,,10
	.p2align 3
.L7597:
	add	r12d, r8d
	mov	rsi, -1
	mov	rdi, rbp
	call	fb_StrLen@PLT
	movzx	r13d, r12w
	cmp	r13, rax
	jg	.L7596
.L7556:
	movzx	edx, BYTE PTR NIBBLES$[rip+1]
.L7551:
	mov	rsi, r13
	mov	rdi, rbp
	call	fb_StrMid@PLT
	mov	esi, 1
	mov	rdi, rax
	call	fb_ASC@PLT
	movzx	ecx, BYTE PTR NIBBLES$[rip+8]
	movzx	edx, BYTE PTR NIBBLES$[rip+7]
	pxor	xmm0, xmm0
	mov	r8d, eax
	movzx	eax, BYTE PTR NIBBLES$[rip+4]
	pxor	xmm1, xmm1
	cvtsi2sd	xmm0, r8
	mov	rsi, rax
	sal	rax, cl
	mov	ecx, esi
	sal	rdx, cl
	add	rax, rdx
	movzx	edx, BYTE PTR NIBBLES$[rip+15]
	add	rax, rdx
	add	rax, r13
	movsd	QWORD PTR 134217728[rbx+rax*8], xmm0
	movzx	ecx, BYTE PTR NIBBLES$[rip+8]
	movzx	r10d, BYTE PTR NIBBLES$[rip+4]
	movzx	eax, BYTE PTR NIBBLES$[rip+7]
	movzx	edi, BYTE PTR NIBBLES$[rip+15]
	mov	rsi, r10
	mov	rdx, r10
	and	esi, 63
	sal	rdx, cl
	mov	ecx, esi
	sal	rax, cl
	sal	r10, cl
	movzx	ecx, WORD PTR NIBBLES$[rip+4]
	add	rax, rdx
	movzx	edx, BYTE PTR NIBBLES$[rip+1]
	add	rax, rdi
	mov	r8, rdx
	sal	rdx, cl
	add	rax, r13
	xor	ecx, ecx
	add	rdx, rdi
	sal	rax, 3
	cvtsi2sd	xmm1, rdx
	lea	r9, 134217728[rbx+rax]
	movsd	xmm0, QWORD PTR [r9]
	comisd	xmm0, xmm1
	pxor	xmm1, xmm1
	cvtsi2sd	xmm1, r10
	seta	cl
	xor	edx, edx
	neg	ecx
	comisd	xmm1, xmm0
	seta	dl
	neg	edx
	test	ecx, edx
	je	.L7597
	add	rax, rbx
	movsd	xmm0, QWORD PTR 134217728[rax+r10*8]
	movsd	QWORD PTR [r9], xmm0
	jmp	.L7556
	.p2align 4,,10
	.p2align 3
.L7596:
	movzx	eax, BYTE PTR NIBBLES$[rip+4]
	movzx	edx, BYTE PTR NIBBLES$[rip+8]
	xor	r8d, r8d
	mov	rdi, rbp
	pxor	xmm0, xmm0
	mov	esi, eax
	mov	rcx, rdx
	and	esi, 63
	sal	rax, cl
	mov	ecx, esi
	mov	rsi, -1
	sal	rdx, cl
	add	rax, rdx
	movzx	edx, BYTE PTR NIBBLES$[rip+9]
	add	rax, rdx
	movzx	edx, BYTE PTR NIBBLES$[rip+2]
	sal	rdx, cl
	mov	ecx, 6
	cvtsi2sd	xmm0, rdx
	lea	rdx, .LC2828[rip]
	movsd	QWORD PTR 134217728[rbx+rax*8], xmm0
	call	fb_StrAssign@PLT
	movzx	r12d, BYTE PTR NIBBLES$[rip+1]
	mov	rdx, r12
	movzx	r13d, r12b
	jmp	.L7557
	.p2align 4,,10
	.p2align 3
.L7600:
	mov	rdx, r9
	mov	rsi, r13
	mov	rdi, rbp
	call	fb_StrMid@PLT
	mov	esi, 1
	mov	rdi, rax
	call	fb_ASC@PLT
	movzx	edx, BYTE PTR NIBBLES$[rip+8]
	pxor	xmm0, xmm0
	pxor	xmm1, xmm1
	mov	r8d, eax
	movzx	eax, BYTE PTR NIBBLES$[rip+4]
	mov	rcx, rdx
	cvtsi2sd	xmm0, r8
	mov	rsi, rax
	sal	rax, cl
	mov	ecx, esi
	sal	rdx, cl
	add	rax, rdx
	movzx	edx, BYTE PTR NIBBLES$[rip+9]
	add	rax, rdx
	add	rax, r13
	movsd	QWORD PTR 134217728[rbx+rax*8], xmm0
	movzx	edi, BYTE PTR NIBBLES$[rip+4]
	movzx	eax, BYTE PTR NIBBLES$[rip+8]
	mov	rsi, rdi
	mov	rcx, rax
	mov	rdx, rdi
	and	esi, 63
	sal	rdx, cl
	mov	ecx, esi
	sal	rax, cl
	add	rax, rdx
	movzx	edx, BYTE PTR NIBBLES$[rip+9]
	add	rax, rdx
	movzx	edx, BYTE PTR NIBBLES$[rip+1]
	add	rax, r13
	mov	r8, rdx
	sal	rdx, cl
	movzx	ecx, BYTE PTR NIBBLES$[rip+15]
	sal	rax, 3
	add	rdx, rcx
	lea	r9, 134217728[rbx+rax]
	xor	ecx, ecx
	cvtsi2sd	xmm1, rdx
	movsd	xmm0, QWORD PTR [r9]
	comisd	xmm0, xmm1
	pxor	xmm1, xmm1
	cvtsi2sd	xmm1, rdi
	seta	cl
	xor	edx, edx
	neg	ecx
	comisd	xmm1, xmm0
	seta	dl
	neg	edx
	test	ecx, edx
	jne	.L7598
	add	r12d, r8d
	mov	rsi, -1
	mov	rdi, rbp
	call	fb_StrLen@PLT
	movzx	r13d, r12w
	cmp	r13, rax
	jg	.L7599
.L7565:
	movzx	edx, BYTE PTR NIBBLES$[rip+1]
.L7557:
	mov	rsi, r13
	mov	rdi, rbp
	call	fb_StrMid@PLT
	mov	esi, 1
	mov	rdi, rax
	call	fb_ASC@PLT
	movzx	ecx, BYTE PTR NIBBLES$[rip+8]
	movzx	edx, BYTE PTR NIBBLES$[rip+6]
	pxor	xmm0, xmm0
	mov	r8d, eax
	movzx	eax, BYTE PTR NIBBLES$[rip+4]
	pxor	xmm1, xmm1
	cvtsi2sd	xmm0, r8
	xor	r8d, r8d
	mov	rsi, rax
	sal	rax, cl
	mov	ecx, esi
	sal	rdx, cl
	add	rax, rdx
	add	rax, r13
	movsd	QWORD PTR 134217728[rbx+rax*8], xmm0
	movzx	edi, BYTE PTR NIBBLES$[rip+4]
	movzx	ecx, BYTE PTR NIBBLES$[rip+8]
	movzx	eax, BYTE PTR NIBBLES$[rip+6]
	movzx	r9d, BYTE PTR NIBBLES$[rip+1]
	mov	rsi, rdi
	mov	rdx, rdi
	and	esi, 63
	sal	rdx, cl
	mov	ecx, esi
	sal	rax, cl
	add	rax, rdx
	mov	rdx, r9
	sal	rdx, cl
	movzx	ecx, BYTE PTR NIBBLES$[rip+15]
	add	rax, r13
	sal	rax, 3
	add	rdx, rcx
	lea	r10, 134217728[rbx+rax]
	mov	ecx, esi
	cvtsi2sd	xmm1, rdx
	movsd	xmm0, QWORD PTR [r10]
	comisd	xmm0, xmm1
	pxor	xmm1, xmm1
	seta	r8b
	sal	rdi, cl
	xor	edx, edx
	cvtsi2sd	xmm1, rdi
	neg	r8d
	comisd	xmm1, xmm0
	seta	dl
	neg	edx
	test	r8d, edx
	je	.L7600
	movzx	edx, BYTE PTR NIBBLES$[rip+2]
	add	rax, rbx
	sal	rdx, cl
	movsd	xmm0, QWORD PTR 134217728[rax+rdx*8]
	movsd	QWORD PTR [r10], xmm0
	jmp	.L7565
	.p2align 4,,10
	.p2align 3
.L7598:
	movzx	edx, BYTE PTR NIBBLES$[rip+2]
	mov	ecx, esi
	add	rax, rbx
	sal	rdx, cl
	movsd	xmm0, QWORD PTR 134217728[rax+rdx*8]
	movsd	QWORD PTR [r9], xmm0
	jmp	.L7565
	.p2align 4,,10
	.p2align 3
.L7599:
	movzx	eax, BYTE PTR NIBBLES$[rip+4]
	movzx	edx, BYTE PTR NIBBLES$[rip+8]
	pxor	xmm0, xmm0
	xor	r8d, r8d
	mov	esi, eax
	mov	rcx, rdx
	and	esi, 63
	sal	rax, cl
	mov	ecx, esi
	sal	rdx, cl
	add	rax, rdx
	movzx	edx, BYTE PTR NIBBLES$[rip+15]
	add	rax, rdx
	movzx	edx, BYTE PTR NIBBLES$[rip+2]
	sal	rdx, cl
	cvtsi2sd	xmm0, rdx
	movsd	QWORD PTR 134217728[rbx+rax*8], xmm0
	movzx	eax, BYTE PTR NIBBLES$[rip+4]
	movzx	edx, BYTE PTR NIBBLES$[rip+8]
	pxor	xmm0, xmm0
	movzx	esi, BYTE PTR NIBBLES$[rip+9]
	mov	edi, eax
	mov	ecx, edx
	and	edi, 63
	sal	rax, cl
	mov	ecx, edi
	mov	rdi, rbp
	sal	rsi, cl
	sal	rdx, cl
	movzx	ecx, BYTE PTR NIBBLES$[rip+6]
	add	rax, rsi
	add	rdx, rcx
	cvtsi2sd	xmm0, rdx
	movsd	QWORD PTR 134217728[rbx+rax*8], xmm0
	movzx	edx, BYTE PTR NIBBLES$[rip+4]
	movzx	ecx, BYTE PTR NIBBLES$[rip+8]
	pxor	xmm0, xmm0
	movzx	eax, BYTE PTR NIBBLES$[rip+3]
	mov	rsi, rdx
	sal	rdx, cl
	mov	ecx, esi
	mov	rsi, -1
	sal	rax, cl
	movzx	ecx, BYTE PTR NIBBLES$[rip+2]
	add	rax, rcx
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR 134218888[rbx+rdx*8], xmm0
	movzx	ecx, BYTE PTR NIBBLES$[rip+4]
	movzx	eax, BYTE PTR NIBBLES$[rip+2]
	pxor	xmm0, xmm0
	movzx	edx, BYTE PTR NIBBLES$[rip+10]
	sal	rax, cl
	mov	ecx, 12
	cvtsi2sd	xmm0, rax
	add	rax, rdx
	lea	rdx, .LC2829[rip]
	movsd	QWORD PTR 134227088[rbx], xmm0
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR 134227096[rbx], xmm0
	call	fb_StrAssign@PLT
	movzx	r13d, BYTE PTR NIBBLES$[rip+1]
	mov	rdx, r13
	movzx	r12d, r13b
	jmp	.L7567
	.p2align 4,,10
	.p2align 3
.L7601:
	movzx	edx, BYTE PTR NIBBLES$[rip+1]
.L7567:
	mov	rsi, r12
	mov	rdi, rbp
	call	fb_StrMid@PLT
	mov	esi, 1
	mov	rdi, rax
	call	fb_ASC@PLT
	pxor	xmm0, xmm0
	mov	rsi, -1
	mov	rdi, rbp
	mov	eax, eax
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR 134227184[rbx+r12*8], xmm0
	movzx	eax, BYTE PTR NIBBLES$[rip+1]
	add	r13d, eax
	call	fb_StrLen@PLT
	movzx	r12d, r13w
	cmp	r12, rax
	jle	.L7601
	movzx	eax, BYTE PTR BYTES$[rip]
	cvtsd2si	edi, QWORD PTR [rbx+rax*8]
	call	fb_GetMemAvail@PLT
	pxor	xmm1, xmm1
	movsd	xmm0, QWORD PTR .LC300[rip]
	mov	r12, rax
	movzx	eax, BYTE PTR BYTES$[rip+3]
	cvtsi2sd	xmm1, rax
	call	pow@PLT
	call	nearbyint@PLT
	movsd	xmm1, QWORD PTR .LC299[rip]
	cvttsd2si	rcx, xmm0
	comisd	xmm0, xmm1
	jnb	.L7602
.L7572:
	mov	rax, r12
	xor	edx, edx
	div	rcx
	mov	rdi, rax
	call	fb_ULongintToStr@PLT
	xor	r8d, r8d
	mov	rcx, -1
	mov	rdi, rbp
	mov	rdx, rax
	mov	rsi, -1
	call	fb_StrAssign@PLT
	mov	rsi, -1
	mov	rdi, rbp
	call	fb_StrLen@PLT
	movzx	edx, BYTE PTR BYTES$[rip+1]
	cmp	rdx, rax
	jne	.L7603
.L7573:
	mov	esi, 1
	mov	rdi, rbp
	call	fb_ASC@PLT
	pxor	xmm0, xmm0
	movzx	edx, WORD PTR XWORDS$[rip+2358]
	mov	eax, eax
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR 134217728[rbx+rdx*8], xmm0
	movzx	edx, BYTE PTR BYTES$[rip+71]
	pxor	xmm0, xmm0
	movzx	eax, WORD PTR XWORDS$[rip+2360]
	cvtsi2sd	xmm0, edx
	movsd	QWORD PTR 134217728[rbx+rax*8], xmm0
	movzx	edx, BYTE PTR BYTES$[rip+66]
	pxor	xmm0, xmm0
	movzx	eax, WORD PTR XWORDS$[rip+2362]
	cvtsi2sd	xmm0, edx
	movsd	QWORD PTR 134217728[rbx+rax*8], xmm0
.L7581:
	movzx	edx, BYTE PTR BYTES$[rip+250]
	pxor	xmm0, xmm0
	movzx	eax, WORD PTR XWORDS$[rip+2666]
	mov	rdi, rbp
	cvtsi2sd	xmm0, edx
	movsd	QWORD PTR 134217728[rbx+rax*8], xmm0
	movzx	edx, BYTE PTR BYTES$[rip+255]
	pxor	xmm0, xmm0
	movzx	eax, WORD PTR XWORDS$[rip+6578]
	cvtsi2sd	xmm0, edx
	movsd	QWORD PTR 134217728[rbx+rax*8], xmm0
	movzx	edx, BYTE PTR BYTES$[rip+255]
	pxor	xmm0, xmm0
	movzx	eax, WORD PTR XWORDS$[rip+6580]
	cvtsi2sd	xmm0, edx
	movsd	QWORD PTR 134217728[rbx+rax*8], xmm0
	call	fb_StrDelete@PLT
	add	rsp, 72
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	ret
	.p2align 4,,10
	.p2align 3
.L7602:
	subsd	xmm0, xmm1
	cvttsd2si	rcx, xmm0
	btc	rcx, 63
	jmp	.L7572
	.p2align 4,,10
	.p2align 3
.L7603:
	mov	rsi, -1
	mov	rdi, rbp
	call	fb_StrLen@PLT
	movzx	edx, BYTE PTR BYTES$[rip+2]
	cmp	rdx, rax
	jne	.L7573
	movzx	esi, BYTE PTR BYTES$[rip+1]
	mov	rdi, rbp
	mov	rdx, rsi
	call	fb_StrMid@PLT
	mov	esi, 1
	mov	rdi, rax
	call	fb_ASC@PLT
	pxor	xmm0, xmm0
	movzx	edx, WORD PTR XWORDS$[rip+2358]
	mov	rdi, rbp
	mov	eax, eax
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR 134217728[rbx+rdx*8], xmm0
	movzx	edx, BYTE PTR BYTES$[rip+1]
	movzx	esi, BYTE PTR BYTES$[rip+2]
	call	fb_StrMid@PLT
	mov	esi, 1
	mov	rdi, rax
	call	fb_ASC@PLT
	pxor	xmm0, xmm0
	xor	r8d, r8d
	mov	rdi, rbp
	mov	eax, eax
	movzx	edx, WORD PTR XWORDS$[rip+2360]
	mov	ecx, 12
	mov	rsi, -1
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR 134217728[rbx+rdx*8], xmm0
	movzx	edx, BYTE PTR BYTES$[rip+71]
	pxor	xmm0, xmm0
	movzx	eax, WORD PTR XWORDS$[rip+2362]
	cvtsi2sd	xmm0, edx
	movsd	QWORD PTR 134217728[rbx+rax*8], xmm0
	movzx	edx, BYTE PTR BYTES$[rip+66]
	pxor	xmm0, xmm0
	movzx	eax, WORD PTR XWORDS$[rip+2364]
	cvtsi2sd	xmm0, edx
	lea	rdx, .LC2829[rip]
	movsd	QWORD PTR 134217728[rbx+rax*8], xmm0
	call	fb_StrAssign@PLT
	movzx	r13d, BYTE PTR BYTES$[rip+1]
	mov	rdx, r13
	movzx	r12d, r13b
	jmp	.L7578
	.p2align 4,,10
	.p2align 3
.L7584:
	movzx	edx, BYTE PTR BYTES$[rip+1]
.L7578:
	mov	rsi, r12
	mov	rdi, rbp
	call	fb_StrMid@PLT
	mov	esi, 1
	mov	rdi, rax
	call	fb_ASC@PLT
	pxor	xmm0, xmm0
	mov	rsi, -1
	mov	rdi, rbp
	mov	r8d, eax
	movzx	eax, WORD PTR XWORDS$[rip+2364]
	add	r12, rax
	mov	eax, r8d
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR 134217728[rbx+r12*8], xmm0
	movzx	eax, BYTE PTR BYTES$[rip+1]
	add	r13d, eax
	call	fb_StrLen@PLT
	movzx	r12d, r13w
	cmp	r12, rax
	jle	.L7584
	movzx	edx, BYTE PTR BYTES$[rip+32]
	pxor	xmm0, xmm0
	movzx	eax, WORD PTR XWORDS$[rip+2366]
	cvtsi2sd	xmm0, edx
	movsd	QWORD PTR 134217728[rbx+rax*8], xmm0
	movzx	edx, BYTE PTR BYTES$[rip+32]
	pxor	xmm0, xmm0
	movzx	eax, WORD PTR XWORDS$[rip+2374]
	cvtsi2sd	xmm0, edx
	movsd	QWORD PTR 134217728[rbx+rax*8], xmm0
	jmp	.L7581
	.size	_ZN8MEMORY_TC1Ev, .-_ZN8MEMORY_TC1Ev
	.section	.rodata.str1.1
.LC2830:
	.string	"cobc -x -free tmp.cob"
.LC2831:
	.string	"press any key to contiune."
	.text
	.p2align 4
	.globl	_ZN8MEMORY_T5POKEBEdd
	.type	_ZN8MEMORY_T5POKEBEdd, @function
_ZN8MEMORY_T5POKEBEdd:
	push	r13
	movapd	xmm2, xmm0
	push	r12
	push	rbp
	mov	rbp, rdi
	push	rbx
	sub	rsp, 56
.L7605:
	cvtsd2si	rax, xmm2
	comisd	xmm2, QWORD PTR .LC1[rip]
	movsd	QWORD PTR 0[rbp+rax*8], xmm1
	je	.L7921
	comisd	xmm2, QWORD PTR .LC105[rip]
	je	.L8020
	comisd	xmm2, QWORD PTR .LC106[rip]
	je	.L8021
	comisd	xmm2, QWORD PTR .LC107[rip]
	je	.L8022
	comisd	xmm2, QWORD PTR .LC108[rip]
	je	.L8023
	comisd	xmm2, QWORD PTR .LC109[rip]
	je	.L8024
	comisd	xmm2, QWORD PTR .LC110[rip]
	je	.L8025
	comisd	xmm2, QWORD PTR .LC111[rip]
	je	.L8026
	comisd	xmm2, QWORD PTR .LC5[rip]
	je	.L8027
	comisd	xmm2, QWORD PTR .LC112[rip]
	je	.L8028
	comisd	xmm2, QWORD PTR .LC113[rip]
	je	.L8029
	comisd	xmm2, QWORD PTR .LC114[rip]
	je	.L8030
	comisd	xmm2, QWORD PTR .LC115[rip]
	je	.L8031
	comisd	xmm2, QWORD PTR .LC116[rip]
	je	.L8032
	comisd	xmm2, QWORD PTR .LC117[rip]
	je	.L8033
	comisd	xmm2, QWORD PTR .LC6[rip]
	je	.L8034
	comisd	xmm2, QWORD PTR .LC118[rip]
	je	.L8035
	comisd	xmm2, QWORD PTR .LC119[rip]
	je	.L8036
	comisd	xmm2, QWORD PTR .LC120[rip]
	je	.L8037
	comisd	xmm2, QWORD PTR .LC121[rip]
	je	.L8038
	comisd	xmm2, QWORD PTR .LC122[rip]
	je	.L8039
	comisd	xmm2, QWORD PTR .LC123[rip]
	je	.L7653
	comisd	xmm2, QWORD PTR .LC124[rip]
	je	.L7653
	comisd	xmm2, QWORD PTR .LC125[rip]
	je	.L7653
	comisd	xmm2, QWORD PTR .LC126[rip]
	je	.L7659
	comisd	xmm2, QWORD PTR .LC127[rip]
	je	.L7659
	comisd	xmm2, QWORD PTR .LC128[rip]
	je	.L7659
	comisd	xmm2, QWORD PTR .LC129[rip]
	je	.L7665
	comisd	xmm2, QWORD PTR .LC130[rip]
	je	.L7665
	comisd	xmm2, QWORD PTR .LC131[rip]
	je	.L7665
	comisd	xmm2, QWORD PTR .LC132[rip]
	je	.L7671
	comisd	xmm2, QWORD PTR .LC73[rip]
	je	.L7671
	comisd	xmm2, QWORD PTR .LC74[rip]
	je	.L7671
	comisd	xmm2, QWORD PTR .LC75[rip]
	je	.L7942
	comisd	xmm2, QWORD PTR .LC76[rip]
	je	.L8040
	comisd	xmm2, QWORD PTR .LC77[rip]
	je	.L8041
	comisd	xmm2, QWORD PTR .LC78[rip]
	je	.L8042
	comisd	xmm2, QWORD PTR .LC79[rip]
	je	.L8043
	comisd	xmm2, QWORD PTR .LC80[rip]
	je	.L8044
	comisd	xmm2, QWORD PTR .LC81[rip]
	je	.L8045
	comisd	xmm2, QWORD PTR .LC82[rip]
	je	.L8046
	comisd	xmm2, QWORD PTR .LC83[rip]
	je	.L8047
	comisd	xmm2, QWORD PTR .LC84[rip]
	je	.L8048
	comisd	xmm2, QWORD PTR .LC85[rip]
	je	.L7604
	comisd	xmm2, QWORD PTR .LC86[rip]
	je	.L7952
	comisd	xmm2, QWORD PTR .LC87[rip]
	je	.L8049
	comisd	xmm2, QWORD PTR .LC88[rip]
	je	.L8050
	comisd	xmm2, QWORD PTR .LC89[rip]
	je	.L8051
	comisd	xmm2, QWORD PTR .LC90[rip]
	je	.L8052
	comisd	xmm2, QWORD PTR .LC91[rip]
	je	.L7604
	comisd	xmm2, QWORD PTR .LC92[rip]
	je	.L7957
	comisd	xmm2, QWORD PTR .LC93[rip]
	je	.L8053
	comisd	xmm2, QWORD PTR .LC94[rip]
	je	.L8054
	comisd	xmm2, QWORD PTR .LC95[rip]
	je	.L8055
	comisd	xmm2, QWORD PTR .LC96[rip]
	je	.L8056
	comisd	xmm2, QWORD PTR .LC97[rip]
	je	.L8057
	comisd	xmm2, QWORD PTR .LC98[rip]
	je	.L7724
	comisd	xmm2, QWORD PTR .LC99[rip]
	je	.L7728
	comisd	xmm2, QWORD PTR .LC100[rip]
	je	.L8058
	comisd	xmm2, QWORD PTR .LC101[rip]
	je	.L7724
	comisd	xmm2, QWORD PTR .LC102[rip]
	je	.L7728
	comisd	xmm2, QWORD PTR .LC103[rip]
	je	.L7740
	comisd	xmm2, QWORD PTR .LC104[rip]
	je	.L7740
	comisd	xmm2, QWORD PTR .LC396[rip]
	je	.L7740
	comisd	xmm2, QWORD PTR .LC289[rip]
	je	.L7740
	comisd	xmm2, QWORD PTR .LC399[rip]
	je	.L7740
	comisd	xmm2, QWORD PTR .LC401[rip]
	je	.L7740
	comisd	xmm2, QWORD PTR .LC403[rip]
	je	.L7740
	comisd	xmm2, QWORD PTR .LC281[rip]
	je	.L7740
	comisd	xmm2, QWORD PTR .LC406[rip]
	je	.L7728
	comisd	xmm2, QWORD PTR .LC408[rip]
	je	.L7964
	comisd	xmm2, QWORD PTR .LC410[rip]
	je	.L8059
	comisd	xmm2, QWORD PTR .LC412[rip]
	je	.L8060
	comisd	xmm2, QWORD PTR .LC414[rip]
	je	.L8061
	comisd	xmm2, QWORD PTR .LC416[rip]
	je	.L8062
	comisd	xmm2, QWORD PTR .LC418[rip]
	je	.L8063
	comisd	xmm2, QWORD PTR .LC420[rip]
	je	.L8064
	comisd	xmm2, QWORD PTR .LC422[rip]
	je	.L8065
	comisd	xmm2, QWORD PTR .LC424[rip]
	je	.L8066
	comisd	xmm2, QWORD PTR .LC426[rip]
	je	.L8067
	comisd	xmm2, QWORD PTR .LC282[rip]
	je	.L8068
	comisd	xmm2, QWORD PTR .LC429[rip]
	je	.L8069
	comisd	xmm2, QWORD PTR .LC431[rip]
	je	.L8070
	comisd	xmm2, QWORD PTR .LC433[rip]
	je	.L8071
	comisd	xmm2, QWORD PTR .LC435[rip]
	je	.L8072
	comisd	xmm2, QWORD PTR .LC437[rip]
	je	.L8073
	comisd	xmm2, QWORD PTR .LC439[rip]
	je	.L8074
	comisd	xmm2, QWORD PTR .LC441[rip]
	je	.L8075
	comisd	xmm2, QWORD PTR .LC296[rip]
	je	.L8076
	comisd	xmm2, QWORD PTR .LC444[rip]
	je	.L8077
	comisd	xmm2, QWORD PTR .LC446[rip]
	je	.L8078
	comisd	xmm2, QWORD PTR .LC448[rip]
	je	.L8079
	comisd	xmm2, QWORD PTR .LC450[rip]
	je	.L8080
	comisd	xmm2, QWORD PTR .LC452[rip]
	je	.L8081
	comisd	xmm2, QWORD PTR .LC454[rip]
	je	.L8082
	comisd	xmm2, QWORD PTR .LC456[rip]
	je	.L8083
	comisd	xmm2, QWORD PTR .LC283[rip]
	je	.L8084
	comisd	xmm2, QWORD PTR .LC459[rip]
	je	.L8085
	comisd	xmm2, QWORD PTR .LC461[rip]
	je	.L8086
	comisd	xmm2, QWORD PTR .LC463[rip]
	je	.L8087
	comisd	xmm2, QWORD PTR .LC465[rip]
	je	.L8088
	comisd	xmm2, QWORD PTR .LC467[rip]
	je	.L8089
	comisd	xmm2, QWORD PTR .LC469[rip]
	je	.L8090
	comisd	xmm2, QWORD PTR .LC471[rip]
	je	.L8091
	comisd	xmm2, QWORD PTR .LC297[rip]
	je	.L8092
	comisd	xmm2, QWORD PTR .LC473[rip]
	je	.L8093
	comisd	xmm2, QWORD PTR .LC475[rip]
	je	.L8094
	comisd	xmm2, QWORD PTR .LC477[rip]
	jne	.L8095
.L7823:
	movapd	xmm2, xmm1
	movsd	xmm1, QWORD PTR 394888[rbp]
	jmp	.L7605
.L7731:
.L7734:
.L7735:
.L7736:
.L7737:
.L7738:
.L7739:
	.p2align 4,,10
	.p2align 3
.L7740:
	mov	QWORD PTR 394888[rbp], 0x000000000
.L7604:
	add	rsp, 56
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	ret
.L8046:
.L7688:
	movsd	xmm0, QWORD PTR 394888[rbp]
	movsd	QWORD PTR 394832[rbp], xmm0
	jmp	.L7604
.L8073:
.L7779:
	movsd	xmm0, QWORD PTR 394896[rbp]
	xor	eax, eax
	comisd	xmm0, QWORD PTR 394904[rbp]
	pxor	xmm0, xmm0
	seta	al
	neg	eax
	cvtsi2sd	xmm0, eax
	movsd	QWORD PTR 394888[rbp], xmm0
	jmp	.L7604
	.p2align 4,,10
	.p2align 3
.L8095:
	comisd	xmm2, QWORD PTR .LC479[rip]
	je	.L8096
	comisd	xmm2, QWORD PTR .LC481[rip]
	je	.L8097
	comisd	xmm2, QWORD PTR .LC483[rip]
	je	.L8098
	comisd	xmm2, QWORD PTR .LC485[rip]
	jne	.L8099
.L7844:
	movsd	xmm1, QWORD PTR 395344[rbp]
	movsd	xmm0, QWORD PTR .LC1[rip]
	pxor	xmm2, xmm2
	addsd	xmm0, xmm1
	cvtsd2si	rax, xmm0
	movsd	xmm0, QWORD PTR .LC105[rip]
	addsd	xmm0, xmm1
	cvtsd2si	rcx, QWORD PTR 0[rbp+rax*8]
	cvtsd2si	rax, xmm0
	movsd	xmm0, QWORD PTR .LC106[rip]
	addsd	xmm0, xmm1
	mov	rsi, rcx
	cvtsd2si	rdi, QWORD PTR 0[rbp+rax*8]
	sal	rsi, 32
	cvtsd2si	rax, xmm0
	movsd	xmm0, QWORD PTR .LC107[rip]
	addsd	xmm0, xmm1
	mov	rcx, rdi
	cvtsd2si	rdx, QWORD PTR 0[rbp+rax*8]
	sal	rcx, 24
	cvtsd2si	rax, xmm0
	movsd	xmm0, QWORD PTR .LC108[rip]
	add	rcx, rsi
	addsd	xmm0, xmm1
	addsd	xmm1, QWORD PTR .LC109[rip]
	sal	rdx, 16
	cvtsd2si	rax, QWORD PTR 0[rbp+rax*8]
	add	rdx, rcx
	cvtsd2si	r8, xmm0
	sal	rax, 8
	add	rax, rdx
	cvtsi2sd	xmm2, rax
	addsd	xmm2, QWORD PTR 0[rbp+r8*8]
	cvtsd2si	rax, xmm1
	movsd	QWORD PTR 395400[rbp], xmm2
	movsd	xmm1, QWORD PTR 0[rbp+rax*8]
	movsd	QWORD PTR 394912[rbp], xmm1
	jmp	.L7605
.L7650:
.L7652:
	.p2align 4,,10
	.p2align 3
.L7653:
	movsd	xmm0, QWORD PTR 394888[rbp]
	movsd	QWORD PTR 393232[rbp], xmm0
	jmp	.L7604
.L7655:
.L7658:
	.p2align 4,,10
	.p2align 3
.L7659:
	movsd	xmm0, QWORD PTR 394888[rbp]
	movsd	QWORD PTR 393240[rbp], xmm0
	jmp	.L7604
.L7661:
.L7664:
	.p2align 4,,10
	.p2align 3
.L7665:
	movsd	xmm0, QWORD PTR 394888[rbp]
	movsd	QWORD PTR 393248[rbp], xmm0
	jmp	.L7604
.L7667:
.L7670:
	.p2align 4,,10
	.p2align 3
.L7671:
	movsd	xmm0, QWORD PTR 394888[rbp]
	movsd	QWORD PTR 393256[rbp], xmm0
	jmp	.L7604
	.p2align 4,,10
	.p2align 3
.L7921:
.L7606:
	movsd	QWORD PTR 394888[rbp], xmm1
	jmp	.L7604
	.p2align 4,,10
	.p2align 3
.L8020:
.L7609:
	movsd	QWORD PTR 394896[rbp], xmm1
	jmp	.L7604
	.p2align 4,,10
	.p2align 3
.L8021:
.L7612:
	movsd	QWORD PTR 394904[rbp], xmm1
	jmp	.L7604
	.p2align 4,,10
	.p2align 3
.L8022:
.L7614:
	movsd	xmm0, QWORD PTR 394896[rbp]
	movsd	QWORD PTR 394888[rbp], xmm0
	jmp	.L7604
	.p2align 4,,10
	.p2align 3
.L8023:
.L7616:
	movsd	xmm0, QWORD PTR 394904[rbp]
	movsd	QWORD PTR 394888[rbp], xmm0
	jmp	.L7604
	.p2align 4,,10
	.p2align 3
.L8024:
.L7618:
	movsd	xmm0, QWORD PTR 394888[rbp]
	movsd	QWORD PTR 394896[rbp], xmm0
	jmp	.L7604
	.p2align 4,,10
	.p2align 3
.L8025:
.L7620:
	movsd	xmm0, QWORD PTR 394904[rbp]
	movsd	QWORD PTR 394896[rbp], xmm0
	jmp	.L7604
	.p2align 4,,10
	.p2align 3
.L8026:
.L7622:
	movsd	xmm0, QWORD PTR 394888[rbp]
	movsd	QWORD PTR 394904[rbp], xmm0
	jmp	.L7604
.L7723:
.L7727:
	.p2align 4,,10
	.p2align 3
.L7728:
	movsd	xmm0, QWORD PTR 394880[rbp]
	movsd	QWORD PTR 394888[rbp], xmm0
	jmp	.L7604
	.p2align 4,,10
	.p2align 3
.L8027:
.L7624:
	movsd	xmm0, QWORD PTR 394896[rbp]
	movsd	QWORD PTR 394904[rbp], xmm0
	jmp	.L7604
	.p2align 4,,10
	.p2align 3
.L8028:
.L7626:
	movsd	xmm0, QWORD PTR 394888[rbp]
	movsd	QWORD PTR 395344[rbp], xmm0
	jmp	.L7604
	.p2align 4,,10
	.p2align 3
.L8029:
.L7628:
	movsd	xmm0, QWORD PTR 394896[rbp]
	movsd	QWORD PTR 395344[rbp], xmm0
	jmp	.L7604
	.p2align 4,,10
	.p2align 3
.L8030:
.L7630:
	movsd	xmm0, QWORD PTR 394904[rbp]
	movsd	QWORD PTR 395344[rbp], xmm0
	jmp	.L7604
	.p2align 4,,10
	.p2align 3
.L8031:
.L7632:
	movsd	xmm0, QWORD PTR 394888[rbp]
	movsd	QWORD PTR 395400[rbp], xmm0
	jmp	.L7604
	.p2align 4,,10
	.p2align 3
.L8032:
.L7634:
	movsd	xmm0, QWORD PTR 394896[rbp]
	movsd	QWORD PTR 395400[rbp], xmm0
	jmp	.L7604
	.p2align 4,,10
	.p2align 3
.L8033:
.L7636:
	movsd	xmm0, QWORD PTR 394904[rbp]
	movsd	QWORD PTR 395400[rbp], xmm0
	jmp	.L7604
	.p2align 4,,10
	.p2align 3
.L8034:
.L7638:
	movsd	xmm0, QWORD PTR 394888[rbp]
	movsd	QWORD PTR 395456[rbp], xmm0
	jmp	.L7604
	.p2align 4,,10
	.p2align 3
.L8035:
.L7640:
	movsd	xmm0, QWORD PTR 394896[rbp]
	movsd	QWORD PTR 395456[rbp], xmm0
	jmp	.L7604
	.p2align 4,,10
	.p2align 3
.L8036:
.L7642:
	movsd	xmm0, QWORD PTR 394904[rbp]
	movsd	QWORD PTR 395456[rbp], xmm0
	jmp	.L7604
	.p2align 4,,10
	.p2align 3
.L8037:
.L7644:
	movsd	xmm0, QWORD PTR 394888[rbp]
	movsd	QWORD PTR 395568[rbp], xmm0
	jmp	.L7604
	.p2align 4,,10
	.p2align 3
.L8038:
.L7646:
	movsd	xmm0, QWORD PTR 394896[rbp]
	movsd	QWORD PTR 395568[rbp], xmm0
	jmp	.L7604
	.p2align 4,,10
	.p2align 3
.L8039:
.L7648:
	movsd	xmm0, QWORD PTR 394904[rbp]
	movsd	QWORD PTR 395568[rbp], xmm0
	jmp	.L7604
.L7721:
	.p2align 4,,10
	.p2align 3
.L7724:
	movsd	xmm0, QWORD PTR 394872[rbp]
	movsd	QWORD PTR 394888[rbp], xmm0
	jmp	.L7604
	.p2align 4,,10
	.p2align 3
.L8099:
	comisd	xmm2, QWORD PTR .LC284[rip]
	je	.L8100
	comisd	xmm2, QWORD PTR .LC488[rip]
	je	.L8101
	comisd	xmm2, QWORD PTR .LC490[rip]
	jne	.L8102
.L7850:
	movsd	xmm1, QWORD PTR 395344[rbp]
	movsd	xmm0, QWORD PTR .LC1[rip]
	pxor	xmm2, xmm2
	addsd	xmm0, xmm1
	cvtsd2si	rax, xmm0
	movsd	xmm0, QWORD PTR .LC105[rip]
	addsd	xmm0, xmm1
	cvtsd2si	rcx, QWORD PTR 0[rbp+rax*8]
	cvtsd2si	rax, xmm0
	movsd	xmm0, QWORD PTR .LC106[rip]
	addsd	xmm0, xmm1
	mov	rsi, rcx
	cvtsd2si	rdi, QWORD PTR 0[rbp+rax*8]
	sal	rsi, 32
	cvtsd2si	rax, xmm0
	movsd	xmm0, QWORD PTR .LC107[rip]
	addsd	xmm0, xmm1
	mov	rcx, rdi
	cvtsd2si	rdx, QWORD PTR 0[rbp+rax*8]
	sal	rcx, 24
	cvtsd2si	rax, xmm0
	movsd	xmm0, QWORD PTR .LC108[rip]
	add	rcx, rsi
	addsd	xmm0, xmm1
	sal	rdx, 16
	cvtsd2si	rax, QWORD PTR 0[rbp+rax*8]
	add	rdx, rcx
	cvtsd2si	r8, xmm0
	movsd	xmm0, QWORD PTR .LC109[rip]
	addsd	xmm0, xmm1
	sal	rax, 8
	add	rax, rdx
	cvtsi2sd	xmm2, rax
	addsd	xmm2, QWORD PTR 0[rbp+r8*8]
	cvtsd2si	rax, xmm0
	movsd	xmm0, QWORD PTR .LC110[rip]
	addsd	xmm0, xmm1
	movsd	QWORD PTR 395400[rbp], xmm2
	cvtsd2si	rcx, QWORD PTR 0[rbp+rax*8]
	cvtsd2si	rax, xmm0
	movsd	xmm0, QWORD PTR .LC111[rip]
	addsd	xmm0, xmm1
	mov	rsi, rcx
	cvtsd2si	rdi, QWORD PTR 0[rbp+rax*8]
	sal	rsi, 32
	cvtsd2si	rax, xmm0
	movsd	xmm0, QWORD PTR .LC5[rip]
	addsd	xmm0, xmm1
	addsd	xmm1, QWORD PTR .LC112[rip]
	mov	rcx, rdi
	mov	rdi, rbp
	cvtsd2si	rdx, QWORD PTR 0[rbp+rax*8]
	sal	rcx, 24
	cvtsd2si	rax, xmm0
	add	rcx, rsi
	pxor	xmm0, xmm0
	cvtsd2si	r8, xmm1
	sal	rdx, 16
	cvtsd2si	rax, QWORD PTR 0[rbp+rax*8]
	add	rdx, rcx
	sal	rax, 8
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 0[rbp+r8*8]
	movsd	QWORD PTR 395456[rbp], xmm0
	call	_ZN8MEMORY_T5PEEKBEd
	movapd	xmm1, xmm0
	jmp	.L7605
	.p2align 4,,10
	.p2align 3
.L7942:
.L7673:
	movsd	xmm0, QWORD PTR 394888[rbp]
	movsd	QWORD PTR 394840[rbp], xmm0
	jmp	.L7604
	.p2align 4,,10
	.p2align 3
.L8040:
.L7676:
	movsd	xmm0, QWORD PTR 394888[rbp]
	movsd	QWORD PTR 394864[rbp], xmm0
	jmp	.L7604
.L8041:
.L7678:
	movsd	xmm0, QWORD PTR 394888[rbp]
	movsd	QWORD PTR 394848[rbp], xmm0
	jmp	.L7604
.L8042:
.L7680:
	movsd	xmm0, QWORD PTR 394888[rbp]
	movsd	QWORD PTR 394872[rbp], xmm0
	jmp	.L7604
.L8043:
.L7682:
	movsd	xmm0, QWORD PTR 394888[rbp]
	movsd	QWORD PTR 394856[rbp], xmm0
	jmp	.L7604
.L8044:
.L7684:
	movsd	xmm0, QWORD PTR 394888[rbp]
	movsd	QWORD PTR 394880[rbp], xmm0
	jmp	.L7604
.L8045:
.L7686:
	movsd	xmm0, QWORD PTR 394888[rbp]
	movsd	QWORD PTR 394824[rbp], xmm0
	jmp	.L7604
.L8047:
.L7690:
	pxor	xmm0, xmm0
	cvtsd2ss	xmm0, QWORD PTR 394888[rbp]
	movss	DWORD PTR CHAR_H$[rip], xmm0
	jmp	.L7604
.L8048:
.L7692:
	pxor	xmm0, xmm0
	cvtsd2ss	xmm0, QWORD PTR 394888[rbp]
	movss	DWORD PTR CHAR_W$[rip], xmm0
	jmp	.L7604
.L7952:
.L7694:
	cvtsd2si	rax, QWORD PTR 394888[rbp]
	mov	DWORD PTR CHAR_BUFFER$[rip], eax
	jmp	.L7604
.L8049:
.L7697:
	cvtsd2si	rax, QWORD PTR 394888[rbp]
	mov	DWORD PTR BITMASK$[rip], eax
	jmp	.L7604
.L8050:
.L7699:
	cvtsd2si	rax, QWORD PTR 394888[rbp]
	mov	DWORD PTR PIXEL_SIZE$[rip], eax
	jmp	.L7604
.L8051:
.L7701:
	movsd	xmm0, QWORD PTR 394888[rbp]
	call	nearbyint@PLT
	movsd	xmm1, QWORD PTR .LC299[rip]
	comisd	xmm0, xmm1
	jnb	.L7704
	cvttsd2si	rax, xmm0
	mov	QWORD PTR RADIUS$[rip], rax
	jmp	.L7604
.L8052:
.L7703:
	cvtsd2si	rax, QWORD PTR 394888[rbp]
	mov	DWORD PTR STRING_ADR$[rip], eax
	jmp	.L7604
.L7957:
.L7708:
	movsd	xmm0, QWORD PTR 394840[rbp]
	movsd	QWORD PTR 394888[rbp], xmm0
	jmp	.L7604
.L8053:
.L7711:
	movsd	xmm0, QWORD PTR 394888[rbp]
	movsd	QWORD PTR 394840[rbp], xmm0
	jmp	.L7604
.L8054:
.L7713:
	movsd	xmm0, QWORD PTR 394848[rbp]
	movsd	QWORD PTR 394888[rbp], xmm0
	jmp	.L7604
.L8055:
.L7715:
	movsd	xmm0, QWORD PTR 394888[rbp]
	movsd	QWORD PTR 394848[rbp], xmm0
	jmp	.L7604
.L8056:
.L7717:
	movsd	xmm0, QWORD PTR 394856[rbp]
	movsd	QWORD PTR 394888[rbp], xmm0
	jmp	.L7604
.L8057:
.L7719:
	movsd	xmm0, QWORD PTR 394864[rbp]
	movsd	QWORD PTR 394888[rbp], xmm0
	jmp	.L7604
.L8058:
.L7726:
	movsd	xmm0, QWORD PTR 394888[rbp]
	movsd	QWORD PTR 394880[rbp], xmm0
	jmp	.L7604
.L7964:
.L7748:
	movsd	xmm0, QWORD PTR 394896[rbp]
	addsd	xmm0, QWORD PTR 394904[rbp]
	movsd	QWORD PTR 394888[rbp], xmm0
	jmp	.L7604
.L8059:
.L7751:
	movsd	xmm0, QWORD PTR 394896[rbp]
	subsd	xmm0, QWORD PTR 394904[rbp]
	movsd	QWORD PTR 394888[rbp], xmm0
	jmp	.L7604
.L8060:
.L7753:
	movsd	xmm0, QWORD PTR 394896[rbp]
	mulsd	xmm0, QWORD PTR 394904[rbp]
	movsd	QWORD PTR 394888[rbp], xmm0
	jmp	.L7604
.L8061:
.L7755:
	movsd	xmm0, QWORD PTR 394896[rbp]
	divsd	xmm0, QWORD PTR 394904[rbp]
	movsd	QWORD PTR 394888[rbp], xmm0
	jmp	.L7604
.L8062:
.L7757:
	cvtsd2si	rax, QWORD PTR 394896[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rcx, QWORD PTR 394904[rbp]
	cqo
	idiv	rcx
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR 394888[rbp], xmm0
	jmp	.L7604
.L8063:
.L7759:
	movsd	xmm0, QWORD PTR 394896[rbp]
	movsd	xmm1, QWORD PTR 394904[rbp]
	call	pow@PLT
	movsd	QWORD PTR 394888[rbp], xmm0
	jmp	.L7604
.L8064:
.L7761:
	cvtsd2si	rax, QWORD PTR 394896[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rcx, QWORD PTR 394904[rbp]
	cqo
	idiv	rcx
	cvtsi2sd	xmm0, rdx
	movsd	QWORD PTR 394888[rbp], xmm0
	jmp	.L7604
.L8065:
.L7763:
	movsd	xmm0, QWORD PTR 394888[rbp]
	xorpd	xmm0, XMMWORD PTR .LC258[rip]
	movsd	QWORD PTR 394888[rbp], xmm0
	jmp	.L7604
.L8067:
.L7767:
	cvtsd2si	rax, QWORD PTR 394896[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rcx, QWORD PTR 394904[rbp]
	sar	rax, cl
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR 394888[rbp], xmm0
	jmp	.L7604
.L8066:
.L7765:
	cvtsd2si	rax, QWORD PTR 394896[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rcx, QWORD PTR 394904[rbp]
	sal	rax, cl
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR 394888[rbp], xmm0
	jmp	.L7604
.L8068:
.L7769:
	movsd	xmm0, QWORD PTR 394896[rbp]
	xor	eax, eax
	comisd	xmm0, QWORD PTR 394904[rbp]
	pxor	xmm0, xmm0
	sete	al
	neg	eax
	cvtsi2sd	xmm0, eax
	movsd	QWORD PTR 394888[rbp], xmm0
	jmp	.L7604
.L7704:
	subsd	xmm0, xmm1
	cvttsd2si	rax, xmm0
	mov	QWORD PTR RADIUS$[rip], rax
	btc	QWORD PTR RADIUS$[rip], 63
	jmp	.L7604
.L8069:
.L7771:
	movsd	xmm0, QWORD PTR 394896[rbp]
	xor	eax, eax
	comisd	xmm0, QWORD PTR 394904[rbp]
	pxor	xmm0, xmm0
	setne	al
	neg	eax
	cvtsi2sd	xmm0, eax
	movsd	QWORD PTR 394888[rbp], xmm0
	jmp	.L7604
.L8070:
.L7773:
	movsd	xmm0, QWORD PTR 394904[rbp]
	xor	eax, eax
	comisd	xmm0, QWORD PTR 394896[rbp]
	pxor	xmm0, xmm0
	seta	al
	neg	eax
	cvtsi2sd	xmm0, eax
	movsd	QWORD PTR 394888[rbp], xmm0
	jmp	.L7604
.L8072:
.L7777:
	movsd	xmm0, QWORD PTR 394896[rbp]
	xor	eax, eax
	comisd	xmm0, QWORD PTR 394904[rbp]
	pxor	xmm0, xmm0
	setnb	al
	neg	eax
	cvtsi2sd	xmm0, eax
	movsd	QWORD PTR 394888[rbp], xmm0
	jmp	.L7604
.L8071:
.L7775:
	movsd	xmm0, QWORD PTR 394904[rbp]
	xor	eax, eax
	comisd	xmm0, QWORD PTR 394896[rbp]
	pxor	xmm0, xmm0
	setnb	al
	neg	eax
	cvtsi2sd	xmm0, eax
	movsd	QWORD PTR 394888[rbp], xmm0
	jmp	.L7604
.L8074:
.L7781:
	cvtsd2si	rax, QWORD PTR 394896[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rdx, QWORD PTR 394904[rbp]
	and	rax, rdx
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR 394888[rbp], xmm0
	jmp	.L7604
.L8076:
.L7785:
	cvtsd2si	rax, QWORD PTR 394896[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rdx, QWORD PTR 394904[rbp]
	not	rax
	or	rax, rdx
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR 394888[rbp], xmm0
	jmp	.L7604
.L8075:
.L7783:
	cvtsd2si	rax, QWORD PTR 394896[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rdx, QWORD PTR 394904[rbp]
	xor	rax, rdx
	not	rax
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR 394888[rbp], xmm0
	jmp	.L7604
.L8077:
.L7787:
	cvtsd2si	rax, QWORD PTR 394896[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rdx, QWORD PTR 394904[rbp]
	or	rax, rdx
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR 394888[rbp], xmm0
	jmp	.L7604
.L8078:
.L7789:
	cvtsd2si	rax, QWORD PTR 394896[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rdx, QWORD PTR 394904[rbp]
	xor	rax, rdx
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR 394888[rbp], xmm0
	jmp	.L7604
.L8079:
.L7791:
	movsd	xmm0, QWORD PTR 394888[rbp]
	movsd	QWORD PTR 394896[rbp], xmm0
	jmp	.L7604
.L8080:
.L7793:
	movsd	xmm0, QWORD PTR 394888[rbp]
	movsd	QWORD PTR 394904[rbp], xmm0
	jmp	.L7604
.L8081:
.L7795:
	movsd	xmm0, QWORD PTR .LC1[rip]
	addsd	xmm0, QWORD PTR 394888[rbp]
	movsd	QWORD PTR 394888[rbp], xmm0
	jmp	.L7604
.L8082:
.L7797:
	movsd	xmm0, QWORD PTR .LC1[rip]
	addsd	xmm0, QWORD PTR 394896[rbp]
	movsd	QWORD PTR 394896[rbp], xmm0
	jmp	.L7604
.L8084:
.L7801:
	movsd	xmm0, QWORD PTR 394888[rbp]
	subsd	xmm0, QWORD PTR .LC1[rip]
	movsd	QWORD PTR 394888[rbp], xmm0
	jmp	.L7604
.L8083:
.L7799:
	movsd	xmm0, QWORD PTR .LC1[rip]
	addsd	xmm0, QWORD PTR 394904[rbp]
	movsd	QWORD PTR 394904[rbp], xmm0
	jmp	.L7604
.L8086:
.L7805:
	movsd	xmm0, QWORD PTR 394904[rbp]
	subsd	xmm0, QWORD PTR .LC1[rip]
	movsd	QWORD PTR 394904[rbp], xmm0
	jmp	.L7604
.L8085:
.L7803:
	movsd	xmm0, QWORD PTR 394896[rbp]
	subsd	xmm0, QWORD PTR .LC1[rip]
	movsd	QWORD PTR 394896[rbp], xmm0
	jmp	.L7604
.L8088:
.L7809:
	movsd	xmm0, QWORD PTR 394896[rbp]
	comisd	xmm0, QWORD PTR 394904[rbp]
	je	.L7604
	movsd	QWORD PTR 395344[rbp], xmm1
	jmp	.L7604
.L8087:
.L7807:
	movsd	xmm0, QWORD PTR 394896[rbp]
	comisd	xmm0, QWORD PTR 394904[rbp]
	jne	.L7604
	movsd	QWORD PTR 395344[rbp], xmm1
	jmp	.L7604
.L8089:
.L7811:
	movsd	xmm0, QWORD PTR 394904[rbp]
	comisd	xmm0, QWORD PTR 394896[rbp]
	jnb	.L7604
	movsd	QWORD PTR 395344[rbp], xmm1
	jmp	.L7604
.L8090:
.L7813:
	movsd	xmm0, QWORD PTR 394904[rbp]
	comisd	xmm0, QWORD PTR 394896[rbp]
	ja	.L7604
	movsd	QWORD PTR 395344[rbp], xmm1
	jmp	.L7604
.L8091:
.L7815:
	movsd	xmm0, QWORD PTR 394896[rbp]
	comisd	xmm0, QWORD PTR 394904[rbp]
	ja	.L7604
	movsd	QWORD PTR 395344[rbp], xmm1
	jmp	.L7604
.L8092:
.L7817:
	movsd	xmm0, QWORD PTR 394896[rbp]
	comisd	xmm0, QWORD PTR 394904[rbp]
	jnb	.L7604
	movsd	QWORD PTR 395344[rbp], xmm1
	jmp	.L7604
.L8093:
.L7819:
	movsd	QWORD PTR 395344[rbp], xmm1
	jmp	.L7604
.L8094:
.L7821:
	movapd	xmm0, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T5PEEKBEd
	movsd	QWORD PTR 394888[rbp], xmm0
	jmp	.L7604
.L8097:
.L7828:
	mov	edi, -65536
	lea	rbp, 16[rsp]
	call	fb_Cls@PLT
	xor	eax, eax
	mov	rdi, rbp
	mov	ecx, 6
	rep stosd
	mov	esi, 21
	lea	rdi, .LC2830[rip]
	call	fb_StrAllocTempDescZEx@PLT
	mov	rdi, rax
	call	fb_Shell@PLT
	mov	esi, 15
	lea	rdi, .LC2655[rip]
	call	fb_StrAllocTempDescZEx@PLT
	mov	rdi, rax
	call	fb_Shell@PLT
	mov	esi, 7
	lea	rdi, .LC2656[rip]
	call	fb_StrAllocTempDescZEx@PLT
	xor	r9d, r9d
	mov	r8d, 1
	xor	ecx, ecx
	mov	rdi, rax
	xor	edx, edx
	mov	esi, 2
	call	fb_FileOpen@PLT
	jmp	.L7841
.L7842:
	call	fb_FileInput@PLT
	xor	edx, edx
	mov	rsi, -1
	mov	rdi, rbp
	call	fb_InputString@PLT
	mov	edx, 1
	mov	rsi, rbp
	xor	edi, edi
	call	fb_PrintString@PLT
.L7841:
	mov	edi, 1
	call	fb_FileEof@PLT
	mov	edi, 1
	test	eax, eax
	je	.L7842
	call	fb_FileClose@PLT
	mov	esi, 26
	lea	rdi, .LC2831[rip]
	call	fb_StrAllocTempDescZEx@PLT
	mov	edx, 1
	xor	edi, edi
	mov	rsi, rax
	call	fb_PrintString@PLT
	or	edi, -1
	call	fb_Sleep@PLT
	mov	rdi, rbp
	call	fb_StrDelete@PLT
	jmp	.L7604
.L8096:
.L7825:
	movsd	xmm0, QWORD PTR 395344[rbp]
	movsd	xmm1, QWORD PTR .LC1[rip]
	addsd	xmm1, xmm0
	movsd	QWORD PTR 397040[rbp], xmm0
	cvtsd2si	rax, xmm1
	movsd	xmm1, QWORD PTR .LC105[rip]
	addsd	xmm1, xmm0
	cvtsd2si	rax, QWORD PTR 0[rbp+rax*8]
	cvtsd2si	rdx, xmm1
	movsd	xmm1, QWORD PTR .LC106[rip]
	addsd	xmm1, xmm0
	sal	rax, 32
	cvtsd2si	rsi, QWORD PTR 0[rbp+rdx*8]
	cvtsd2si	rdx, xmm1
	movsd	xmm1, QWORD PTR .LC107[rip]
	addsd	xmm1, xmm0
	sal	rsi, 24
	cvtsd2si	rcx, QWORD PTR 0[rbp+rdx*8]
	add	rax, rsi
	cvtsd2si	rdx, xmm1
	movsd	xmm1, QWORD PTR .LC108[rip]
	addsd	xmm1, xmm0
	sal	rcx, 16
	cvtsd2si	rdx, QWORD PTR 0[rbp+rdx*8]
	add	rax, rcx
	cvtsd2si	rdi, xmm1
	pxor	xmm1, xmm1
	sal	rdx, 8
	add	rax, rdx
	cvtsi2sd	xmm1, rax
	addsd	xmm1, QWORD PTR 0[rbp+rdi*8]
	movsd	QWORD PTR 395400[rbp], xmm1
	movsd	xmm1, QWORD PTR .LC109[rip]
	addsd	xmm1, xmm0
	cvtsd2si	rax, xmm1
	movsd	xmm1, QWORD PTR .LC110[rip]
	addsd	xmm1, xmm0
	cvtsd2si	rax, QWORD PTR 0[rbp+rax*8]
	cvtsd2si	rdx, xmm1
	movsd	xmm1, QWORD PTR .LC111[rip]
	addsd	xmm1, xmm0
	sal	rax, 32
	cvtsd2si	rsi, QWORD PTR 0[rbp+rdx*8]
	cvtsd2si	rdx, xmm1
	movsd	xmm1, QWORD PTR .LC5[rip]
	addsd	xmm1, xmm0
	sal	rsi, 24
	cvtsd2si	rcx, QWORD PTR 0[rbp+rdx*8]
	add	rax, rsi
	cvtsd2si	rdx, xmm1
	movsd	xmm1, QWORD PTR .LC112[rip]
	addsd	xmm1, xmm0
	sal	rcx, 16
	cvtsd2si	rdx, QWORD PTR 0[rbp+rdx*8]
	add	rax, rcx
	cvtsd2si	rdi, xmm1
	pxor	xmm1, xmm1
	sal	rdx, 8
	add	rax, rdx
	cvtsi2sd	xmm1, rax
	addsd	xmm1, QWORD PTR 0[rbp+rdi*8]
	movsd	QWORD PTR 395456[rbp], xmm1
	movsd	xmm1, QWORD PTR .LC113[rip]
	addsd	xmm1, xmm0
	cvtsd2si	rax, xmm1
	movsd	xmm1, QWORD PTR .LC114[rip]
	addsd	xmm1, xmm0
	cvtsd2si	rax, QWORD PTR 0[rbp+rax*8]
	cvtsd2si	rdx, xmm1
	movsd	xmm1, QWORD PTR .LC115[rip]
	addsd	xmm1, xmm0
	sal	rax, 32
	cvtsd2si	rsi, QWORD PTR 0[rbp+rdx*8]
	cvtsd2si	rdx, xmm1
	movsd	xmm1, QWORD PTR .LC116[rip]
	addsd	xmm1, xmm0
	sal	rsi, 24
	cvtsd2si	rcx, QWORD PTR 0[rbp+rdx*8]
	add	rax, rsi
	cvtsd2si	rdx, xmm1
	sal	rcx, 16
	cvtsd2si	rdx, QWORD PTR 0[rbp+rdx*8]
	addsd	xmm0, QWORD PTR .LC117[rip]
	add	rax, rcx
	cvtsd2si	rdi, xmm0
	pxor	xmm0, xmm0
	sal	rdx, 8
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 0[rbp+rdi*8]
	comisd	xmm0, QWORD PTR .LC0[rip]
	movsd	QWORD PTR 396968[rbp], xmm0
	je	.L7604
	movabs	r13, -9223372036854775808
	xor	ebx, ebx
.L7889:
	movsd	xmm0, QWORD PTR 395456[rbp]
	mov	QWORD PTR PC$[rip], 49425
	call	nearbyint@PLT
	comisd	xmm0, QWORD PTR .LC299[rip]
	cvttsd2si	r12, xmm0
	jb	.L7830
	subsd	xmm0, QWORD PTR .LC299[rip]
	cvttsd2si	r12, xmm0
	xor	r12, r13
.L7830:
	cmp	r12, 49424
	jbe	.L8103
	mov	eax, 49425
.L7831:
	movsd	xmm0, QWORD PTR 0[rbp+rax*8]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T5POKEBEdd
	mov	rax, QWORD PTR PC$[rip]
	add	rax, 1
	mov	QWORD PTR PC$[rip], rax
	cmp	rax, r12
	jbe	.L7831
	movsd	xmm1, QWORD PTR 396968[rbp]
	movapd	xmm0, xmm1
	movsd	QWORD PTR 8[rsp], xmm1
	call	nearbyint@PLT
	lea	rax, 1[rbx]
	comisd	xmm0, QWORD PTR .LC299[rip]
	movsd	xmm1, QWORD PTR 8[rsp]
	cvttsd2si	rbx, xmm0
	jb	.L7886
	subsd	xmm0, QWORD PTR .LC299[rip]
	cvttsd2si	rbx, xmm0
	xor	rbx, r13
.L7886:
	xor	edx, edx
	pxor	xmm0, xmm0
	div	rbx
	cvtsi2sd	xmm0, rdx
	mov	rbx, rdx
	test	rdx, rdx
	jns	.L7888
	mov	rax, rdx
	and	edx, 1
	pxor	xmm0, xmm0
	shr	rax
	or	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, xmm0
.L7888:
	comisd	xmm0, xmm1
	jne	.L7889
	jmp	.L7604
.L8098:
.L7840:
	movsd	xmm0, QWORD PTR 395344[rbp]
	movsd	xmm1, QWORD PTR .LC1[rip]
	addsd	xmm1, xmm0
	cvtsd2si	rax, xmm1
	movsd	xmm1, QWORD PTR .LC105[rip]
	addsd	xmm1, xmm0
	cvtsd2si	rax, QWORD PTR 0[rbp+rax*8]
	cvtsd2si	rdx, xmm1
	movsd	xmm1, QWORD PTR .LC106[rip]
	addsd	xmm1, xmm0
	sal	rax, 32
	cvtsd2si	rsi, QWORD PTR 0[rbp+rdx*8]
	cvtsd2si	rdx, xmm1
	movsd	xmm1, QWORD PTR .LC107[rip]
	addsd	xmm1, xmm0
	addsd	xmm0, QWORD PTR .LC108[rip]
	sal	rsi, 24
	cvtsd2si	rcx, QWORD PTR 0[rbp+rdx*8]
	add	rax, rsi
	cvtsd2si	rdx, xmm1
	cvtsd2si	rdi, xmm0
	pxor	xmm0, xmm0
	sal	rcx, 16
	cvtsd2si	rdx, QWORD PTR 0[rbp+rdx*8]
	add	rax, rcx
	sal	rdx, 8
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 0[rbp+rdi*8]
	mov	rdi, rbp
	movsd	QWORD PTR 395400[rbp], xmm0
	call	_ZN8MEMORY_T5PEEKBEd
	movsd	QWORD PTR 394912[rbp], xmm0
	jmp	.L7604
.L8103:
	movsd	xmm1, QWORD PTR 396968[rbp]
	movapd	xmm0, xmm1
	movsd	QWORD PTR 8[rsp], xmm1
	call	nearbyint@PLT
	comisd	xmm0, QWORD PTR .LC299[rip]
	movsd	xmm1, QWORD PTR 8[rsp]
	cvttsd2si	rcx, xmm0
	jb	.L7891
	subsd	xmm0, QWORD PTR .LC299[rip]
	cvttsd2si	rcx, xmm0
	btc	rcx, 63
.L7891:
	lea	rax, 1[rbx]
	xor	edx, edx
	pxor	xmm0, xmm0
	div	rcx
	cvtsi2sd	xmm0, rdx
	test	rdx, rdx
	jns	.L7893
	mov	rax, rdx
	mov	rsi, rdx
	pxor	xmm0, xmm0
	shr	rax
	and	esi, 1
	or	rax, rsi
	cvtsi2sd	xmm0, rax
	addsd	xmm0, xmm0
.L7893:
	comisd	xmm1, xmm0
	je	.L7604
.L7833:
	lea	rax, 1[rdx]
	xor	edx, edx
	pxor	xmm0, xmm0
	div	rcx
	cvtsi2sd	xmm0, rdx
	test	rdx, rdx
	jns	.L7835
	mov	rax, rdx
	mov	rsi, rdx
	pxor	xmm0, xmm0
	shr	rax
	and	esi, 1
	or	rax, rsi
	cvtsi2sd	xmm0, rax
	addsd	xmm0, xmm0
.L7835:
	comisd	xmm1, xmm0
	jne	.L7833
	mov	QWORD PTR PC$[rip], 49425
	jmp	.L7604
.L8100:
.L7846:
	movsd	xmm0, QWORD PTR 395344[rbp]
	movsd	xmm1, QWORD PTR .LC1[rip]
	addsd	xmm1, xmm0
	cvtsd2si	rax, xmm1
	movsd	xmm1, QWORD PTR .LC105[rip]
	addsd	xmm1, xmm0
	cvtsd2si	rax, QWORD PTR 0[rbp+rax*8]
	cvtsd2si	rdx, xmm1
	movsd	xmm1, QWORD PTR .LC106[rip]
	addsd	xmm1, xmm0
	sal	rax, 32
	cvtsd2si	rsi, QWORD PTR 0[rbp+rdx*8]
	cvtsd2si	rdx, xmm1
	movsd	xmm1, QWORD PTR .LC107[rip]
	addsd	xmm1, xmm0
	addsd	xmm0, QWORD PTR .LC108[rip]
	sal	rsi, 24
	cvtsd2si	rcx, QWORD PTR 0[rbp+rdx*8]
	add	rax, rsi
	cvtsd2si	rdx, xmm1
	cvtsd2si	rdi, xmm0
	pxor	xmm0, xmm0
	sal	rcx, 16
	cvtsd2si	rdx, QWORD PTR 0[rbp+rdx*8]
	add	rax, rcx
	sal	rdx, 8
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 0[rbp+rdi*8]
	mov	rdi, rbp
	movsd	QWORD PTR 395400[rbp], xmm0
	call	_ZN8MEMORY_T5PEEKWEd
	movsd	QWORD PTR 394912[rbp], xmm0
	jmp	.L7604
.L8102:
	comisd	xmm2, QWORD PTR .LC492[rip]
	je	.L8104
	comisd	xmm2, QWORD PTR .LC494[rip]
	je	.L8105
	comisd	xmm2, QWORD PTR .LC496[rip]
	je	.L8106
	comisd	xmm2, QWORD PTR .LC2708[rip]
	ja	.L7863
	comisd	xmm2, QWORD PTR .LC2707[rip]
	jb	.L7863
.L7864:
	subsd	xmm2, QWORD PTR .LC2707[rip]
	pxor	xmm0, xmm0
	cvtsd2si	rax, xmm1
	pxor	xmm1, xmm1
	cvtss2si	rdi, DWORD PTR CHAR_W$[rip]
	cvtsd2si	rcx, xmm2
	sal	rax, 3
	cvtsi2sd	xmm1, rax
	addsd	xmm1, QWORD PTR 395072[rbp]
	mov	rax, rcx
	cqo
	idiv	rdi
	cvtsd2si	rsi, xmm1
	movsd	xmm1, QWORD PTR .LC2811[rip]
	cvtss2si	rdi, DWORD PTR CHAR_H$[rip]
	mov	QWORD PTR C$[rip], rsi
	sal	rdx, 3
	cvtsi2sd	xmm0, rdx
	addsd	xmm0, xmm1
	cvtsd2si	rax, xmm0
	pxor	xmm0, xmm0
	mov	QWORD PTR XS$[rip], rax
	mov	rax, rcx
	cqo
	idiv	rdi
	sal	rax, 3
	cvtsi2sd	xmm0, rax
	addsd	xmm0, xmm1
	cvtsd2si	rax, xmm0
	pxor	xmm0, xmm0
	comisd	xmm0, QWORD PTR 1592[rbp]
	mov	QWORD PTR YS$[rip], rax
	je	.L7865
	and	esi, 255
	mov	QWORD PTR C$[rip], rsi
.L7865:
	movsd	xmm6, QWORD PTR .LC1[rip]
	comisd	xmm6, QWORD PTR 394856[rbp]
	jbe	.L7866
	movsd	QWORD PTR 394856[rbp], xmm6
.L7866:
	movsd	xmm0, QWORD PTR .LC2699[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	QWORD PTR Y$[rip], 0
	mov	QWORD PTR X$[rip], 0
.L7869:
	mov	rax, QWORD PTR Y$[rip]
	pxor	xmm0, xmm0
	xor	esi, esi
	mov	rdx, QWORD PTR X$[rip]
	cvtsi2sd	xmm0, rax
	comisd	xmm0, QWORD PTR 395088[rbp]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	sete	sil
	xor	ecx, ecx
	neg	esi
	comisd	xmm0, QWORD PTR 395080[rbp]
	sete	cl
	neg	ecx
	test	esi, ecx
	jne	.L8107
	add	rdx, QWORD PTR XS$[rip]
	pxor	xmm0, xmm0
	pxor	xmm1, xmm1
	mov	rdi, rbp
	cvtsi2sd	xmm0, rdx
	add	rax, QWORD PTR YS$[rip]
	movupd	xmm7, XMMWORD PTR 395032[rbp]
	cvtsi2sd	xmm1, rax
	mov	rax, QWORD PTR .LC2690[rip]
	movapd	xmm2, xmm0
	mulsd	xmm0, QWORD PTR .LC108[rip]
	unpcklpd	xmm2, xmm1
	addsd	xmm0, QWORD PTR .LC110[rip]
	mulsd	xmm0, QWORD PTR .LC2812[rip]
	addsd	xmm0, QWORD PTR 395032[rbp]
	mulpd	xmm2, XMMWORD PTR .LC2832[rip]
	movsd	QWORD PTR 394864[rbp], xmm0
	movsd	xmm0, QWORD PTR .LC1[rip]
	addsd	xmm0, xmm1
	addpd	xmm2, xmm7
	addsd	xmm0, xmm0
	addsd	xmm0, QWORD PTR 395040[rbp]
	movups	XMMWORD PTR 394840[rbp], xmm2
	movsd	QWORD PTR 394872[rbp], xmm0
	movq	xmm0, rax
	call	_ZN8MEMORY_T6PEEK64Ed
	mov	rax, QWORD PTR .LC2690[rip]
	movapd	xmm1, xmm0
	movq	xmm0, rax
	call	_ZN8MEMORY_T6POKE64Edd
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, QWORD PTR X$[rip]
	addsd	xmm0, QWORD PTR .LC1[rip]
	cvttsd2si	rax, xmm0
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, QWORD PTR 395080[rbp]
	mov	QWORD PTR X$[rip], rax
	jbe	.L7869
.L7867:
	mov	QWORD PTR X$[rip], 0
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, QWORD PTR Y$[rip]
	addsd	xmm0, QWORD PTR .LC1[rip]
	cvttsd2si	rax, xmm0
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, QWORD PTR C$[rip]
	addsd	xmm0, QWORD PTR .LC1[rip]
	mov	QWORD PTR Y$[rip], rax
	cvttsd2si	rax, xmm0
	mov	QWORD PTR C$[rip], rax
	jmp	.L7869
.L8101:
.L7848:
	movsd	xmm0, QWORD PTR 395344[rbp]
	movsd	xmm1, QWORD PTR .LC1[rip]
	pxor	xmm2, xmm2
	addsd	xmm1, xmm0
	cvtsd2si	rax, xmm1
	movsd	xmm1, QWORD PTR .LC105[rip]
	addsd	xmm1, xmm0
	cvtsd2si	rax, QWORD PTR 0[rbp+rax*8]
	cvtsd2si	rdx, xmm1
	movsd	xmm1, QWORD PTR .LC106[rip]
	addsd	xmm1, xmm0
	sal	rax, 32
	cvtsd2si	rsi, QWORD PTR 0[rbp+rdx*8]
	cvtsd2si	rdx, xmm1
	movsd	xmm1, QWORD PTR .LC107[rip]
	addsd	xmm1, xmm0
	sal	rsi, 24
	cvtsd2si	rcx, QWORD PTR 0[rbp+rdx*8]
	add	rax, rsi
	cvtsd2si	rdx, xmm1
	movsd	xmm1, QWORD PTR .LC108[rip]
	addsd	xmm1, xmm0
	sal	rcx, 16
	cvtsd2si	rdx, QWORD PTR 0[rbp+rdx*8]
	add	rax, rcx
	cvtsd2si	rdi, xmm1
	movsd	xmm1, QWORD PTR .LC109[rip]
	addsd	xmm1, xmm0
	sal	rdx, 8
	add	rax, rdx
	cvtsi2sd	xmm2, rax
	addsd	xmm2, QWORD PTR 0[rbp+rdi*8]
	cvtsd2si	rax, xmm1
	movsd	xmm1, QWORD PTR .LC110[rip]
	addsd	xmm1, xmm0
	movsd	QWORD PTR 395400[rbp], xmm2
	cvtsd2si	rax, QWORD PTR 0[rbp+rax*8]
	cvtsd2si	rdx, xmm1
	movsd	xmm1, QWORD PTR .LC111[rip]
	addsd	xmm1, xmm0
	sal	rax, 32
	cvtsd2si	rsi, QWORD PTR 0[rbp+rdx*8]
	cvtsd2si	rdx, xmm1
	movsd	xmm1, QWORD PTR .LC5[rip]
	addsd	xmm1, xmm0
	addsd	xmm0, QWORD PTR .LC112[rip]
	sal	rsi, 24
	cvtsd2si	rcx, QWORD PTR 0[rbp+rdx*8]
	add	rax, rsi
	cvtsd2si	rdx, xmm1
	pxor	xmm1, xmm1
	cvtsd2si	rdi, xmm0
	movapd	xmm0, xmm2
	sal	rcx, 16
	cvtsd2si	rdx, QWORD PTR 0[rbp+rdx*8]
	add	rax, rcx
	sal	rdx, 8
	add	rax, rdx
	cvtsi2sd	xmm1, rax
	addsd	xmm1, QWORD PTR 0[rbp+rdi*8]
	mov	rdi, rbp
	movsd	QWORD PTR 394912[rbp], xmm1
.L8018:
	add	rsp, 56
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	jmp	_ZN8MEMORY_T5POKEWEdd
.L8106:
.L7856:
	movsd	xmm1, QWORD PTR 395344[rbp]
	movsd	xmm0, QWORD PTR .LC1[rip]
	addsd	xmm0, xmm1
	cvtsd2si	rax, xmm0
	movsd	xmm0, QWORD PTR .LC105[rip]
	addsd	xmm0, xmm1
	cvtsd2si	rax, QWORD PTR 0[rbp+rax*8]
	cvtsd2si	rdx, xmm0
	movsd	xmm0, QWORD PTR .LC106[rip]
	addsd	xmm0, xmm1
	sal	rax, 32
	cvtsd2si	rsi, QWORD PTR 0[rbp+rdx*8]
	cvtsd2si	rdx, xmm0
	movsd	xmm0, QWORD PTR .LC107[rip]
	addsd	xmm0, xmm1
	sal	rsi, 24
	cvtsd2si	rcx, QWORD PTR 0[rbp+rdx*8]
	add	rax, rsi
	cvtsd2si	rdx, xmm0
	movsd	xmm0, QWORD PTR .LC108[rip]
	addsd	xmm0, xmm1
	sal	rcx, 16
	cvtsd2si	rdx, QWORD PTR 0[rbp+rdx*8]
	add	rax, rcx
	cvtsd2si	rdi, xmm0
	pxor	xmm0, xmm0
	sal	rdx, 8
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 0[rbp+rdi*8]
	cvtsd2si	rax, xmm0
	movsd	xmm0, QWORD PTR .LC109[rip]
	addsd	xmm0, xmm1
	mov	DWORD PTR STRING_ADR$[rip], eax
	cvtsd2si	rax, xmm0
	movsd	xmm0, QWORD PTR .LC110[rip]
	addsd	xmm0, xmm1
	cvtsd2si	rax, QWORD PTR 0[rbp+rax*8]
	cvtsd2si	rdx, xmm0
	movsd	xmm0, QWORD PTR .LC111[rip]
	addsd	xmm0, xmm1
	sal	rax, 32
	cvtsd2si	rsi, QWORD PTR 0[rbp+rdx*8]
	cvtsd2si	rdx, xmm0
	movsd	xmm0, QWORD PTR .LC5[rip]
	addsd	xmm0, xmm1
	sal	rsi, 24
	cvtsd2si	rcx, QWORD PTR 0[rbp+rdx*8]
	add	rax, rsi
	cvtsd2si	rdx, xmm0
	movsd	xmm0, QWORD PTR .LC112[rip]
	addsd	xmm0, xmm1
	sal	rcx, 16
	cvtsd2si	rdx, QWORD PTR 0[rbp+rdx*8]
	add	rax, rcx
	cvtsd2si	rdi, xmm0
	pxor	xmm0, xmm0
	sal	rdx, 8
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 0[rbp+rdi*8]
	cvtsd2si	rbx, xmm0
	movsd	xmm0, QWORD PTR .LC113[rip]
	addsd	xmm0, xmm1
	cvtsd2si	rax, xmm0
	movsd	xmm0, QWORD PTR .LC114[rip]
	addsd	xmm0, xmm1
	cvtsd2si	rax, QWORD PTR 0[rbp+rax*8]
	cvtsd2si	rdx, xmm0
	movsd	xmm0, QWORD PTR .LC115[rip]
	addsd	xmm0, xmm1
	sal	rax, 32
	cvtsd2si	rsi, QWORD PTR 0[rbp+rdx*8]
	cvtsd2si	rdx, xmm0
	movsd	xmm0, QWORD PTR .LC116[rip]
	addsd	xmm0, xmm1
	sal	rsi, 24
	cvtsd2si	rcx, QWORD PTR 0[rbp+rdx*8]
	add	rax, rsi
	cvtsd2si	rdx, xmm0
	movsd	xmm0, QWORD PTR .LC117[rip]
	addsd	xmm0, xmm1
	sal	rcx, 16
	cvtsd2si	rdx, QWORD PTR 0[rbp+rdx*8]
	add	rax, rcx
	cvtsd2si	rdi, xmm0
	pxor	xmm0, xmm0
	sal	rdx, 8
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 0[rbp+rdi*8]
	xor	eax, eax
	movsd	QWORD PTR 395400[rbp], xmm0
	addsd	xmm1, QWORD PTR .LC6[rip]
	mov	DWORD PTR R3$[rip], 0
	movsd	QWORD PTR 395344[rbp], xmm1
.L7862:
	mov	edx, DWORD PTR STRING_ADR$[rip]
	mov	rdi, rbp
	add	rax, rdx
	movsd	xmm0, QWORD PTR 0[rbp+rax*8]
	call	_ZN8MEMORY_T10SCREENCODEEd
	mov	eax, DWORD PTR CHAR_BUFFER$[rip]
	pxor	xmm2, xmm2
	mov	rdi, rbp
	movapd	xmm1, xmm0
	pxor	xmm0, xmm0
	cvtsi2sd	xmm2, rax
	mov	eax, DWORD PTR R3$[rip]
	cvtsi2sd	xmm0, rax
	addsd	xmm0, xmm2
	addsd	xmm0, QWORD PTR 395400[rbp]
	call	_ZN8MEMORY_T5POKEBEdd
	mov	eax, DWORD PTR R3$[rip]
	add	eax, 1
	mov	DWORD PTR R3$[rip], eax
	cmp	ebx, eax
	jnb	.L7862
	jmp	.L7604
.L8105:
.L7854:
	movsd	xmm0, QWORD PTR 395344[rbp]
	movsd	xmm1, QWORD PTR .LC1[rip]
	lea	r12, STRING_DATA$[rip]
	addsd	xmm1, xmm0
	cvtsd2si	rax, xmm1
	movsd	xmm1, QWORD PTR .LC105[rip]
	addsd	xmm1, xmm0
	cvtsd2si	rax, QWORD PTR 0[rbp+rax*8]
	cvtsd2si	rdx, xmm1
	movsd	xmm1, QWORD PTR .LC106[rip]
	addsd	xmm1, xmm0
	sal	rax, 32
	cvtsd2si	rsi, QWORD PTR 0[rbp+rdx*8]
	cvtsd2si	rdx, xmm1
	movsd	xmm1, QWORD PTR .LC107[rip]
	addsd	xmm1, xmm0
	addsd	xmm0, QWORD PTR .LC108[rip]
	sal	rsi, 24
	cvtsd2si	rcx, QWORD PTR 0[rbp+rdx*8]
	add	rax, rsi
	cvtsd2si	rdx, xmm1
	cvtsd2si	rdi, xmm0
	pxor	xmm0, xmm0
	sal	rcx, 16
	cvtsd2si	rdx, QWORD PTR 0[rbp+rdx*8]
	add	rax, rcx
	sal	rdx, 8
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 0[rbp+rdi*8]
	movsd	QWORD PTR 395400[rbp], xmm0
	movsd	xmm0, QWORD PTR 394888[rbp]
	call	fb_DoubleToStr@PLT
	xor	r8d, r8d
	or	rcx, -1
	or	rsi, -1
	mov	rdx, rax
	lea	rdi, STRING_DATA$[rip]
	call	fb_StrAssign@PLT
	or	rsi, -1
	lea	rdi, STRING_DATA$[rip]
	mov	DWORD PTR R3$[rip], 1
	call	fb_StrLen@PLT
	mov	ebx, eax
.L7857:
	mov	eax, DWORD PTR R3$[rip]
	cmp	eax, ebx
	ja	.L7604
	mov	edx, 1
	mov	esi, eax
	mov	rdi, r12
	call	fb_StrMid@PLT
	mov	esi, 1
	mov	rdi, rax
	call	fb_ASC@PLT
	pxor	xmm0, xmm0
	mov	rdi, rbp
	mov	eax, eax
	cvtsi2sd	xmm0, rax
	call	_ZN8MEMORY_T10SCREENCODEEd
	mov	edx, DWORD PTR CHAR_BUFFER$[rip]
	mov	eax, DWORD PTR R3$[rip]
	movapd	xmm1, xmm0
	pxor	xmm0, xmm0
	lea	rax, -1[rdx+rax]
	cvtsi2sd	xmm0, rax
	test	rax, rax
	jns	.L7861
	mov	rdx, rax
	and	eax, 1
	pxor	xmm0, xmm0
	shr	rdx
	or	rdx, rax
	cvtsi2sd	xmm0, rdx
	addsd	xmm0, xmm0
.L7861:
	mov	rdi, rbp
	call	_ZN8MEMORY_T5POKEBEdd
	add	DWORD PTR R3$[rip], 1
	jmp	.L7857
.L8104:
.L7852:
	movsd	xmm0, QWORD PTR 395344[rbp]
	movsd	xmm1, QWORD PTR .LC1[rip]
	pxor	xmm3, xmm3
	addsd	xmm1, xmm0
	cvtsd2si	rax, xmm1
	movsd	xmm1, QWORD PTR .LC105[rip]
	addsd	xmm1, xmm0
	cvtsd2si	rax, QWORD PTR 0[rbp+rax*8]
	cvtsd2si	rdx, xmm1
	movsd	xmm1, QWORD PTR .LC106[rip]
	addsd	xmm1, xmm0
	sal	rax, 32
	cvtsd2si	rsi, QWORD PTR 0[rbp+rdx*8]
	cvtsd2si	rdx, xmm1
	movsd	xmm1, QWORD PTR .LC107[rip]
	addsd	xmm1, xmm0
	sal	rsi, 24
	cvtsd2si	rcx, QWORD PTR 0[rbp+rdx*8]
	add	rax, rsi
	cvtsd2si	rdx, xmm1
	movsd	xmm1, QWORD PTR .LC108[rip]
	addsd	xmm1, xmm0
	sal	rcx, 16
	cvtsd2si	rdx, QWORD PTR 0[rbp+rdx*8]
	add	rax, rcx
	cvtsd2si	rdi, xmm1
	movsd	xmm1, QWORD PTR .LC109[rip]
	addsd	xmm1, xmm0
	sal	rdx, 8
	add	rax, rdx
	cvtsi2sd	xmm3, rax
	addsd	xmm3, QWORD PTR 0[rbp+rdi*8]
	cvtsd2si	rax, xmm1
	movsd	xmm1, QWORD PTR .LC110[rip]
	addsd	xmm1, xmm0
	movsd	QWORD PTR 395400[rbp], xmm3
	cvtsd2si	rax, QWORD PTR 0[rbp+rax*8]
	cvtsd2si	rdx, xmm1
	movsd	xmm1, QWORD PTR .LC111[rip]
	addsd	xmm1, xmm0
	sal	rax, 32
	cvtsd2si	rsi, QWORD PTR 0[rbp+rdx*8]
	cvtsd2si	rdx, xmm1
	movsd	xmm1, QWORD PTR .LC5[rip]
	addsd	xmm1, xmm0
	sal	rsi, 24
	cvtsd2si	rcx, QWORD PTR 0[rbp+rdx*8]
	add	rax, rsi
	cvtsd2si	rdx, xmm1
	movsd	xmm1, QWORD PTR .LC112[rip]
	addsd	xmm1, xmm0
	addsd	xmm0, QWORD PTR .LC113[rip]
	sal	rcx, 16
	cvtsd2si	rdx, QWORD PTR 0[rbp+rdx*8]
	add	rax, rcx
	cvtsd2si	rdi, xmm1
	pxor	xmm1, xmm1
	sal	rdx, 8
	add	rax, rdx
	cvtsi2sd	xmm1, rax
	addsd	xmm1, QWORD PTR 0[rbp+rdi*8]
	mov	rdi, rbp
	movsd	QWORD PTR 395344[rbp], xmm0
	movsd	QWORD PTR 395456[rbp], xmm1
	movapd	xmm0, xmm1
	call	_ZN8MEMORY_T5PEEKWEd
	movapd	xmm1, xmm0
	movapd	xmm0, xmm3
	jmp	.L8018
.L7863:
	comisd	xmm2, QWORD PTR .LC2709[rip]
	je	.L8014
	comisd	xmm2, QWORD PTR .LC2833[rip]
	je	.L8108
	comisd	xmm2, QWORD PTR .LC2834[rip]
	je	.L8109
	comisd	xmm2, QWORD PTR .LC2835[rip]
	ja	.L7604
	comisd	xmm2, QWORD PTR .LC2836[rip]
	jb	.L7604
.L7878:
.L7610:
.L7879:
.L7880:
.L7881:
.L7882:
.L7883:
.L7884:
	subsd	xmm2, QWORD PTR .LC2836[rip]
	cvtsd2si	rax, xmm2
	movsd	QWORD PTR 134479872[rbp+rax*8], xmm1
	jmp	.L7604
.L8107:
	movsd	xmm0, QWORD PTR .LC268[rip]
	add	rsp, 56
	mov	rdi, rbp
	pxor	xmm1, xmm1
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	jmp	_ZN8MEMORY_T6POKE64Edd
.L8109:
.L7875:
	mov	rax, QWORD PTR RADIUS$[rip]
	pxor	xmm2, xmm2
	cvtsi2ss	xmm2, rax
	test	rax, rax
	jns	.L7877
	mov	rdx, rax
	and	eax, 1
	pxor	xmm2, xmm2
	shr	rdx
	or	rdx, rax
	cvtsi2ss	xmm2, rdx
	addss	xmm2, xmm2
.L7877:
	pxor	xmm4, xmm4
	movss	xmm5, DWORD PTR .LC2700[rip]
	xor	edx, edx
	xor	edi, edi
	add	rsp, 56
	mov	ecx, 4
	movaps	xmm3, xmm4
	or	esi, -1
	pop	rbx
	movaps	xmm1, xmm4
	movaps	xmm0, xmm4
	pop	rbp
	pop	r12
	pop	r13
	jmp	fb_GfxEllipse@PLT
.L8108:
.L7873:
	pxor	xmm3, xmm3
	mov	ecx, DWORD PTR BITMASK$[rip]
	xor	r8d, r8d
	xor	edx, edx
	or	esi, -1
	movaps	xmm2, xmm3
	movaps	xmm1, xmm3
.L8019:
	add	rsp, 56
	movaps	xmm0, xmm1
	xor	edi, edi
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	jmp	fb_GfxLine@PLT
.L8014:
.L7870:
	mov	eax, DWORD PTR PIXEL_SIZE$[rip]
	pxor	xmm2, xmm2
	xor	r8d, r8d
	or	esi, -1
	mov	ecx, 65535
	mov	edx, 2
	pxor	xmm1, xmm1
	cvtsi2ss	xmm2, rax
	movaps	xmm3, xmm2
	jmp	.L8019
	.size	_ZN8MEMORY_T5POKEBEdd, .-_ZN8MEMORY_T5POKEBEdd
	.p2align 4
	.globl	_ZN8MEMORY_T5POKEWEdd
	.type	_ZN8MEMORY_T5POKEWEdd, @function
_ZN8MEMORY_T5POKEWEdd:
.L8111:
	push	r14
	movq	r14, xmm0
	movapd	xmm0, xmm1
	push	rbp
	mov	rbp, rdi
	push	rbx
	call	nearbyint@PLT
	movsd	xmm1, QWORD PTR .LC299[rip]
	cvttsd2si	rbx, xmm0
	comisd	xmm0, xmm1
	jb	.L8113
	subsd	xmm0, xmm1
	cvttsd2si	rbx, xmm0
	btc	rbx, 63
.L8113:
	movzx	eax, bl
	pxor	xmm1, xmm1
	movq	xmm0, r14
	mov	rdi, rbp
	cvtsi2sd	xmm1, rax
	movzx	ebx, bh
	call	_ZN8MEMORY_T5POKEBEdd
	pxor	xmm1, xmm1
	movq	xmm0, r14
	mov	rdi, rbp
	cvtsi2sd	xmm1, rbx
	addsd	xmm0, QWORD PTR .LC1[rip]
	pop	rbx
	pop	rbp
	pop	r14
	jmp	_ZN8MEMORY_T5POKEBEdd
	.size	_ZN8MEMORY_T5POKEWEdd, .-_ZN8MEMORY_T5POKEWEdd
	.p2align 4
	.globl	INS_W32
	.type	INS_W32, @function
INS_W32:
.L8116:
	movzx	eax, BYTE PTR 1[rdi]
	mov	edx, DWORD PTR 56[rdi]
	pxor	xmm0, xmm0
	pxor	xmm1, xmm1
	mov	rdi, QWORD PTR 8[rdi]
	cvtsi2sd	xmm0, rdx
	cvtsi2sd	xmm1, eax
	jmp	_ZN8MEMORY_T6POKE64Edd
	.size	INS_W32, .-INS_W32
	.p2align 4
	.globl	INS_W64
	.type	INS_W64, @function
INS_W64:
.L8120:
	movzx	eax, BYTE PTR 1[rdi]
	pxor	xmm1, xmm1
	pxor	xmm0, xmm0
	cvtsi2sd	xmm1, eax
	mov	rax, QWORD PTR 56[rdi]
	cvtsi2sd	xmm0, rax
	test	rax, rax
	jns	.L8122
	mov	rdx, rax
	and	eax, 1
	pxor	xmm0, xmm0
	shr	rdx
	or	rdx, rax
	cvtsi2sd	xmm0, rdx
	addsd	xmm0, xmm0
.L8122:
	mov	rdi, QWORD PTR 8[rdi]
	jmp	_ZN8MEMORY_T6POKE64Edd
	.size	INS_W64, .-INS_W64
	.p2align 4
	.globl	_ZN8MEMORY_T9READUBYTEEd
	.type	_ZN8MEMORY_T9READUBYTEEd, @function
_ZN8MEMORY_T9READUBYTEEd:
	call	_ZN8MEMORY_T6PEEK64Ed
	cvtsd2si	eax, xmm0
	ret
	.size	_ZN8MEMORY_T9READUBYTEEd, .-_ZN8MEMORY_T9READUBYTEEd
	.p2align 4
	.globl	INS_ADC
	.type	INS_ADC, @function
INS_ADC:
.L8125:
	movzx	eax, WORD PTR 56[rdi]
	pxor	xmm0, xmm0
	mov	rcx, rdi
	mov	rdi, QWORD PTR 8[rdi]
	xor	r9d, r9d
	cvtsi2sd	xmm0, eax
	call	_ZN8MEMORY_T9READUBYTEEd
	movzx	esi, BYTE PTR 1[rcx]
	mov	edx, eax
	movzx	eax, al
	mov	edi, esi
	add	esi, eax
	movzx	eax, BYTE PTR [rcx]
	mov	r9w, si
	test	al, 1
	je	.L8126
	add	esi, 1
	mov	r9w, si
.L8126:
.L8127:
.L8128:
.L8129:
	xor	edx, edi
	xor	edi, r9d
	movzx	esi, si
	mov	r8d, r9d
	or	rdx, -129
	movzx	edi, dil
	pxor	xmm0, xmm0
	mov	BYTE PTR 1[rcx], r9b
	not	rdx
	cvtsi2sd	xmm0, rsi
	test	rdx, rdi
	setne	dl
	and	eax, -66
	sal	edx, 6
	or	eax, edx
	comisd	xmm0, QWORD PTR .LC259[rip]
	pxor	xmm0, xmm0
	seta	dl
	or	eax, edx
	movzx	edx, r9b
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, QWORD PTR .LC0[rip]
	sete	dl
	and	eax, 125
	and	r8d, -128
	add	edx, edx
	or	eax, edx
	or	eax, r8d
	mov	BYTE PTR [rcx], al
	ret
	.size	INS_ADC, .-INS_ADC
	.p2align 4
	.globl	INS_AND
	.type	INS_AND, @function
INS_AND:
.L8137:
.L8138:
.L8139:
	movzx	eax, WORD PTR 56[rdi]
	pxor	xmm0, xmm0
	mov	rdx, rdi
	mov	rdi, QWORD PTR 8[rdi]
	cvtsi2sd	xmm0, eax
	call	_ZN8MEMORY_T9READUBYTEEd
	and	al, BYTE PTR 1[rdx]
	pxor	xmm0, xmm0
	mov	ecx, eax
	mov	BYTE PTR 1[rdx], al
	movzx	eax, al
	cvtsi2sd	xmm0, rax
	comisd	xmm0, QWORD PTR .LC0[rip]
	sete	al
	and	ecx, -128
	lea	esi, [rax+rax]
	movzx	eax, BYTE PTR [rdx]
	and	eax, 125
	or	eax, esi
	or	eax, ecx
	mov	BYTE PTR [rdx], al
	ret
	.size	INS_AND, .-INS_AND
	.p2align 4
	.globl	INS_CMP
	.type	INS_CMP, @function
INS_CMP:
.L8143:
.L8144:
.L8145:
	movzx	eax, WORD PTR 56[rdi]
	pxor	xmm0, xmm0
	mov	rdx, rdi
	mov	rdi, QWORD PTR 8[rdi]
	xor	esi, esi
	cvtsi2sd	xmm0, eax
	call	_ZN8MEMORY_T9READUBYTEEd
	movzx	ecx, BYTE PTR 1[rdx]
	pxor	xmm0, xmm0
	movzx	eax, al
	sub	ecx, eax
	movzx	eax, BYTE PTR [rdx]
	mov	si, cx
	movzx	ecx, cx
	cvtsi2sd	xmm0, rcx
	comisd	xmm0, QWORD PTR .LC259[rip]
	movzx	ecx, sil
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rcx
	setbe	dil
	and	eax, -4
	comisd	xmm0, QWORD PTR .LC0[rip]
	sete	cl
	or	eax, edi
	and	esi, -128
	add	ecx, ecx
	or	eax, ecx
	and	eax, 127
	or	eax, esi
	mov	BYTE PTR [rdx], al
	ret
	.size	INS_CMP, .-INS_CMP
	.p2align 4
	.globl	INS_CPX
	.type	INS_CPX, @function
INS_CPX:
.L8149:
.L8150:
.L8151:
	movzx	eax, WORD PTR 56[rdi]
	pxor	xmm0, xmm0
	mov	rdx, rdi
	mov	rdi, QWORD PTR 8[rdi]
	xor	esi, esi
	cvtsi2sd	xmm0, eax
	call	_ZN8MEMORY_T9READUBYTEEd
	movzx	ecx, BYTE PTR 2[rdx]
	pxor	xmm0, xmm0
	movzx	eax, al
	sub	ecx, eax
	movzx	eax, BYTE PTR [rdx]
	mov	si, cx
	movzx	ecx, cx
	cvtsi2sd	xmm0, rcx
	comisd	xmm0, QWORD PTR .LC259[rip]
	movzx	ecx, sil
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rcx
	setbe	dil
	and	eax, -4
	comisd	xmm0, QWORD PTR .LC0[rip]
	sete	cl
	or	eax, edi
	and	esi, -128
	add	ecx, ecx
	or	eax, ecx
	and	eax, 127
	or	eax, esi
	mov	BYTE PTR [rdx], al
	ret
	.size	INS_CPX, .-INS_CPX
	.p2align 4
	.globl	INS_CPY
	.type	INS_CPY, @function
INS_CPY:
.L8155:
.L8156:
.L8157:
	movzx	eax, WORD PTR 56[rdi]
	pxor	xmm0, xmm0
	mov	rdx, rdi
	mov	rdi, QWORD PTR 8[rdi]
	xor	esi, esi
	cvtsi2sd	xmm0, eax
	call	_ZN8MEMORY_T9READUBYTEEd
	movzx	ecx, BYTE PTR 3[rdx]
	pxor	xmm0, xmm0
	movzx	eax, al
	sub	ecx, eax
	movzx	eax, BYTE PTR [rdx]
	mov	si, cx
	movzx	ecx, cx
	cvtsi2sd	xmm0, rcx
	comisd	xmm0, QWORD PTR .LC259[rip]
	movzx	ecx, sil
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rcx
	setbe	dil
	and	eax, -4
	comisd	xmm0, QWORD PTR .LC0[rip]
	sete	cl
	or	eax, edi
	and	esi, -128
	add	ecx, ecx
	or	eax, ecx
	and	eax, 127
	or	eax, esi
	mov	BYTE PTR [rdx], al
	ret
	.size	INS_CPY, .-INS_CPY
	.p2align 4
	.globl	INS_EOR
	.type	INS_EOR, @function
INS_EOR:
.L8161:
.L8162:
.L8163:
	movzx	eax, WORD PTR 56[rdi]
	pxor	xmm0, xmm0
	mov	rdx, rdi
	mov	rdi, QWORD PTR 8[rdi]
	cvtsi2sd	xmm0, eax
	call	_ZN8MEMORY_T9READUBYTEEd
	xor	al, BYTE PTR 1[rdx]
	pxor	xmm0, xmm0
	mov	ecx, eax
	mov	BYTE PTR 1[rdx], al
	movzx	eax, al
	cvtsi2sd	xmm0, rax
	comisd	xmm0, QWORD PTR .LC0[rip]
	sete	al
	and	ecx, -128
	lea	esi, [rax+rax]
	movzx	eax, BYTE PTR [rdx]
	and	eax, 125
	or	eax, esi
	or	eax, ecx
	mov	BYTE PTR [rdx], al
	ret
	.size	INS_EOR, .-INS_EOR
	.p2align 4
	.globl	INS_LDA
	.type	INS_LDA, @function
INS_LDA:
.L8167:
.L8168:
.L8169:
	movzx	eax, WORD PTR 56[rdi]
	pxor	xmm0, xmm0
	mov	rdx, rdi
	mov	rdi, QWORD PTR 8[rdi]
	cvtsi2sd	xmm0, eax
	call	_ZN8MEMORY_T9READUBYTEEd
	pxor	xmm0, xmm0
	mov	ecx, eax
	mov	BYTE PTR 1[rdx], al
	movzx	eax, al
	cvtsi2sd	xmm0, rax
	comisd	xmm0, QWORD PTR .LC0[rip]
	sete	al
	and	ecx, -128
	lea	esi, [rax+rax]
	movzx	eax, BYTE PTR [rdx]
	and	eax, 125
	or	eax, esi
	or	eax, ecx
	mov	BYTE PTR [rdx], al
	ret
	.size	INS_LDA, .-INS_LDA
	.p2align 4
	.globl	INS_LDX
	.type	INS_LDX, @function
INS_LDX:
.L8173:
.L8174:
.L8175:
	movzx	eax, WORD PTR 56[rdi]
	pxor	xmm0, xmm0
	mov	rdx, rdi
	mov	rdi, QWORD PTR 8[rdi]
	cvtsi2sd	xmm0, eax
	call	_ZN8MEMORY_T9READUBYTEEd
	pxor	xmm0, xmm0
	mov	ecx, eax
	mov	BYTE PTR 2[rdx], al
	movzx	eax, al
	cvtsi2sd	xmm0, rax
	comisd	xmm0, QWORD PTR .LC0[rip]
	sete	al
	and	ecx, -128
	lea	esi, [rax+rax]
	movzx	eax, BYTE PTR [rdx]
	and	eax, 125
	or	eax, esi
	or	eax, ecx
	mov	BYTE PTR [rdx], al
	ret
	.size	INS_LDX, .-INS_LDX
	.p2align 4
	.globl	INS_LDY
	.type	INS_LDY, @function
INS_LDY:
.L8179:
.L8180:
.L8181:
	movzx	eax, WORD PTR 56[rdi]
	pxor	xmm0, xmm0
	mov	rdx, rdi
	mov	rdi, QWORD PTR 8[rdi]
	cvtsi2sd	xmm0, eax
	call	_ZN8MEMORY_T9READUBYTEEd
	pxor	xmm0, xmm0
	mov	ecx, eax
	mov	BYTE PTR 3[rdx], al
	movzx	eax, al
	cvtsi2sd	xmm0, rax
	comisd	xmm0, QWORD PTR .LC0[rip]
	sete	al
	and	ecx, -128
	lea	esi, [rax+rax]
	movzx	eax, BYTE PTR [rdx]
	and	eax, 125
	or	eax, esi
	or	eax, ecx
	mov	BYTE PTR [rdx], al
	ret
	.size	INS_LDY, .-INS_LDY
	.p2align 4
	.globl	INS_ORA
	.type	INS_ORA, @function
INS_ORA:
.L8185:
.L8186:
.L8187:
	movzx	eax, WORD PTR 56[rdi]
	pxor	xmm0, xmm0
	mov	rdx, rdi
	mov	rdi, QWORD PTR 8[rdi]
	cvtsi2sd	xmm0, eax
	call	_ZN8MEMORY_T9READUBYTEEd
	or	al, BYTE PTR 1[rdx]
	pxor	xmm0, xmm0
	mov	ecx, eax
	mov	BYTE PTR 1[rdx], al
	movzx	eax, al
	cvtsi2sd	xmm0, rax
	comisd	xmm0, QWORD PTR .LC0[rip]
	sete	al
	and	ecx, -128
	lea	esi, [rax+rax]
	movzx	eax, BYTE PTR [rdx]
	and	eax, 125
	or	eax, esi
	or	eax, ecx
	mov	BYTE PTR [rdx], al
	ret
	.size	INS_ORA, .-INS_ORA
	.p2align 4
	.globl	INS_SBC
	.type	INS_SBC, @function
INS_SBC:
.L8191:
	movzx	eax, WORD PTR 56[rdi]
	pxor	xmm0, xmm0
	mov	rcx, rdi
	mov	rdi, QWORD PTR 8[rdi]
	xor	esi, esi
	cvtsi2sd	xmm0, eax
	call	_ZN8MEMORY_T9READUBYTEEd
	movzx	r8d, BYTE PTR 1[rcx]
	mov	edx, eax
	movzx	eax, al
	mov	edi, r8d
	sub	r8d, eax
	movzx	eax, BYTE PTR [rcx]
	mov	si, r8w
	test	al, 1
	jne	.L8192
	movsx	r8d, r8w
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, r8d
	subsd	xmm0, QWORD PTR .LC1[rip]
	cvttsd2si	r8d, xmm0
	mov	si, r8w
.L8192:
.L8193:
.L8194:
.L8195:
	xor	edx, edi
	xor	edi, esi
	mov	r8d, esi
	and	eax, -66
	and	edx, edi
	mov	BYTE PTR 1[rcx], sil
	pxor	xmm0, xmm0
	movzx	esi, si
	shr	dl, 7
	cvtsi2sd	xmm0, rsi
	sal	edx, 6
	or	eax, edx
	comisd	xmm0, QWORD PTR .LC259[rip]
	pxor	xmm0, xmm0
	setbe	dl
	or	eax, edx
	movzx	edx, r8b
	cvtsi2sd	xmm0, rdx
	comisd	xmm0, QWORD PTR .LC0[rip]
	sete	dl
	and	eax, 125
	and	r8d, -128
	add	edx, edx
	or	eax, edx
	or	eax, r8d
	mov	BYTE PTR [rcx], al
	ret
	.size	INS_SBC, .-INS_SBC
	.p2align 4
	.globl	_ZN8MEMORY_T8READBYTEEd
	.type	_ZN8MEMORY_T8READBYTEEd, @function
_ZN8MEMORY_T8READBYTEEd:
	call	_ZN8MEMORY_T6PEEK64Ed
	cvtsd2si	eax, xmm0
	ret
	.size	_ZN8MEMORY_T8READBYTEEd, .-_ZN8MEMORY_T8READBYTEEd
	.p2align 4
	.globl	INS_BCC
	.type	INS_BCC, @function
INS_BCC:
.L8201:
	mov	rdx, rdi
	test	BYTE PTR [rdi], 1
	je	.L8205
.L8202:
.L8203:
.L8204:
	ret
	.p2align 4,,10
	.p2align 3
.L8205:
	movsx	eax, WORD PTR 4[rdi]
	pxor	xmm0, xmm0
	movsd	xmm1, QWORD PTR .LC1[rip]
	cvtsi2sd	xmm0, eax
	movzx	eax, WORD PTR 56[rdi]
	mov	rdi, QWORD PTR 8[rdi]
	subsd	xmm0, xmm1
	cvttsd2si	ecx, xmm0
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, eax
	movsx	ecx, cx
	call	_ZN8MEMORY_T8READBYTEEd
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, ecx
	movsx	eax, al
	addsd	xmm0, xmm1
	pxor	xmm1, xmm1
	cvtsi2sd	xmm1, eax
	addsd	xmm0, xmm1
	cvttsd2si	eax, xmm0
	mov	WORD PTR 4[rdx], ax
	ret
	.size	INS_BCC, .-INS_BCC
	.p2align 4
	.globl	INS_BCS
	.type	INS_BCS, @function
INS_BCS:
.L8207:
	mov	rdx, rdi
	test	BYTE PTR [rdi], 1
	jne	.L8214
.L8208:
.L8209:
.L8210:
	ret
	.p2align 4,,10
	.p2align 3
.L8214:
	movsx	eax, WORD PTR 4[rdi]
	pxor	xmm0, xmm0
	movsd	xmm1, QWORD PTR .LC1[rip]
	cvtsi2sd	xmm0, eax
	movzx	eax, WORD PTR 56[rdi]
	mov	rdi, QWORD PTR 8[rdi]
	subsd	xmm0, xmm1
	cvttsd2si	ecx, xmm0
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, eax
	movsx	ecx, cx
	call	_ZN8MEMORY_T8READBYTEEd
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, ecx
	movsx	eax, al
	addsd	xmm0, xmm1
	pxor	xmm1, xmm1
	cvtsi2sd	xmm1, eax
	addsd	xmm0, xmm1
	cvttsd2si	eax, xmm0
	mov	WORD PTR 4[rdx], ax
	ret
	.size	INS_BCS, .-INS_BCS
	.p2align 4
	.globl	INS_BEQ
	.type	INS_BEQ, @function
INS_BEQ:
.L8216:
	mov	rdx, rdi
	test	BYTE PTR [rdi], 2
	jne	.L8223
.L8217:
.L8218:
.L8219:
	ret
	.p2align 4,,10
	.p2align 3
.L8223:
	movsx	eax, WORD PTR 4[rdi]
	pxor	xmm0, xmm0
	movsd	xmm1, QWORD PTR .LC1[rip]
	cvtsi2sd	xmm0, eax
	movzx	eax, WORD PTR 56[rdi]
	mov	rdi, QWORD PTR 8[rdi]
	subsd	xmm0, xmm1
	cvttsd2si	ecx, xmm0
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, eax
	movsx	ecx, cx
	call	_ZN8MEMORY_T8READBYTEEd
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, ecx
	movsx	eax, al
	addsd	xmm0, xmm1
	pxor	xmm1, xmm1
	cvtsi2sd	xmm1, eax
	addsd	xmm0, xmm1
	cvttsd2si	eax, xmm0
	mov	WORD PTR 4[rdx], ax
	ret
	.size	INS_BEQ, .-INS_BEQ
	.p2align 4
	.globl	INS_BIT
	.type	INS_BIT, @function
INS_BIT:
.L8225:
.L8226:
.L8227:
.L8228:
	movzx	eax, WORD PTR 56[rdi]
	pxor	xmm0, xmm0
	mov	rdx, rdi
	mov	rdi, QWORD PTR 8[rdi]
	cvtsi2sd	xmm0, eax
	call	_ZN8MEMORY_T8READBYTEEd
	mov	ecx, eax
	mov	edi, eax
	movzx	eax, BYTE PTR [rdx]
	and	edi, -128
	mov	esi, ecx
	and	eax, 63
	and	esi, 64
	or	eax, edi
	or	eax, esi
	and	cl, BYTE PTR 2[rdx]
	sete	cl
	and	eax, -3
	add	ecx, ecx
	or	eax, ecx
	mov	BYTE PTR [rdx], al
	ret
	.size	INS_BIT, .-INS_BIT
	.p2align 4
	.globl	INS_BMI
	.type	INS_BMI, @function
INS_BMI:
.L8233:
	cmp	BYTE PTR [rdi], 0
	mov	rdx, rdi
	js	.L8240
.L8234:
.L8235:
.L8236:
	ret
	.p2align 4,,10
	.p2align 3
.L8240:
	movsx	eax, WORD PTR 4[rdi]
	pxor	xmm0, xmm0
	movsd	xmm1, QWORD PTR .LC1[rip]
	cvtsi2sd	xmm0, eax
	movzx	eax, WORD PTR 56[rdi]
	mov	rdi, QWORD PTR 8[rdi]
	subsd	xmm0, xmm1
	cvttsd2si	ecx, xmm0
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, eax
	movsx	ecx, cx
	call	_ZN8MEMORY_T8READBYTEEd
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, ecx
	movsx	eax, al
	addsd	xmm0, xmm1
	pxor	xmm1, xmm1
	cvtsi2sd	xmm1, eax
	addsd	xmm0, xmm1
	cvttsd2si	eax, xmm0
	mov	WORD PTR 4[rdx], ax
	ret
	.size	INS_BMI, .-INS_BMI
	.p2align 4
	.globl	INS_BNE
	.type	INS_BNE, @function
INS_BNE:
.L8242:
	mov	rdx, rdi
	test	BYTE PTR [rdi], 2
	je	.L8246
.L8243:
.L8244:
.L8245:
	ret
	.p2align 4,,10
	.p2align 3
.L8246:
	movsx	eax, WORD PTR 4[rdi]
	pxor	xmm0, xmm0
	movsd	xmm1, QWORD PTR .LC1[rip]
	cvtsi2sd	xmm0, eax
	movzx	eax, WORD PTR 56[rdi]
	mov	rdi, QWORD PTR 8[rdi]
	subsd	xmm0, xmm1
	cvttsd2si	ecx, xmm0
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, eax
	movsx	ecx, cx
	call	_ZN8MEMORY_T8READBYTEEd
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, ecx
	movsx	eax, al
	addsd	xmm0, xmm1
	pxor	xmm1, xmm1
	cvtsi2sd	xmm1, eax
	addsd	xmm0, xmm1
	cvttsd2si	eax, xmm0
	mov	WORD PTR 4[rdx], ax
	ret
	.size	INS_BNE, .-INS_BNE
	.p2align 4
	.globl	INS_BPL
	.type	INS_BPL, @function
INS_BPL:
.L8248:
	cmp	BYTE PTR [rdi], 0
	mov	rdx, rdi
	jns	.L8252
.L8249:
.L8250:
.L8251:
	ret
	.p2align 4,,10
	.p2align 3
.L8252:
	movsx	eax, WORD PTR 4[rdi]
	pxor	xmm0, xmm0
	movsd	xmm1, QWORD PTR .LC1[rip]
	cvtsi2sd	xmm0, eax
	movzx	eax, WORD PTR 56[rdi]
	mov	rdi, QWORD PTR 8[rdi]
	subsd	xmm0, xmm1
	cvttsd2si	ecx, xmm0
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, eax
	movsx	ecx, cx
	call	_ZN8MEMORY_T8READBYTEEd
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, ecx
	movsx	eax, al
	addsd	xmm0, xmm1
	pxor	xmm1, xmm1
	cvtsi2sd	xmm1, eax
	addsd	xmm0, xmm1
	cvttsd2si	eax, xmm0
	mov	WORD PTR 4[rdx], ax
	ret
	.size	INS_BPL, .-INS_BPL
	.p2align 4
	.globl	INS_BVC
	.type	INS_BVC, @function
INS_BVC:
.L8254:
	mov	rdx, rdi
	test	BYTE PTR [rdi], 64
	je	.L8258
.L8255:
.L8256:
.L8257:
	ret
	.p2align 4,,10
	.p2align 3
.L8258:
	movsx	eax, WORD PTR 4[rdi]
	pxor	xmm0, xmm0
	movsd	xmm1, QWORD PTR .LC1[rip]
	cvtsi2sd	xmm0, eax
	movzx	eax, WORD PTR 56[rdi]
	mov	rdi, QWORD PTR 8[rdi]
	subsd	xmm0, xmm1
	cvttsd2si	ecx, xmm0
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, eax
	movsx	ecx, cx
	call	_ZN8MEMORY_T8READBYTEEd
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, ecx
	movsx	eax, al
	addsd	xmm0, xmm1
	pxor	xmm1, xmm1
	cvtsi2sd	xmm1, eax
	addsd	xmm0, xmm1
	cvttsd2si	eax, xmm0
	mov	WORD PTR 4[rdx], ax
	ret
	.size	INS_BVC, .-INS_BVC
	.p2align 4
	.globl	INS_BVS
	.type	INS_BVS, @function
INS_BVS:
.L8260:
	mov	rdx, rdi
	test	BYTE PTR [rdi], 64
	jne	.L8267
.L8261:
.L8262:
.L8263:
	ret
	.p2align 4,,10
	.p2align 3
.L8267:
	movsx	eax, WORD PTR 4[rdi]
	pxor	xmm0, xmm0
	movsd	xmm1, QWORD PTR .LC1[rip]
	cvtsi2sd	xmm0, eax
	movzx	eax, WORD PTR 56[rdi]
	mov	rdi, QWORD PTR 8[rdi]
	subsd	xmm0, xmm1
	cvttsd2si	ecx, xmm0
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, eax
	movsx	ecx, cx
	call	_ZN8MEMORY_T8READBYTEEd
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, ecx
	movsx	eax, al
	addsd	xmm0, xmm1
	pxor	xmm1, xmm1
	cvtsi2sd	xmm1, eax
	addsd	xmm0, xmm1
	cvttsd2si	eax, xmm0
	mov	WORD PTR 4[rdx], ax
	ret
	.size	INS_BVS, .-INS_BVS
	.p2align 4
	.globl	_ZN8MEMORY_T10READUSHORTEd
	.type	_ZN8MEMORY_T10READUSHORTEd, @function
_ZN8MEMORY_T10READUSHORTEd:
	movapd	xmm1, xmm0
	call	_ZN8MEMORY_T6PEEK64Ed
	addsd	xmm1, QWORD PTR .LC1[rip]
	movapd	xmm2, xmm0
	cvtsd2si	rdx, xmm2
	movapd	xmm0, xmm1
	call	_ZN8MEMORY_T6PEEK64Ed
	cvtsd2si	rax, xmm0
	sal	rax, 8
	or	eax, edx
	ret
	.size	_ZN8MEMORY_T10READUSHORTEd, .-_ZN8MEMORY_T10READUSHORTEd
	.p2align 4
	.globl	_ZN8MEMORY_T9WRITEBYTEEdd
	.type	_ZN8MEMORY_T9WRITEBYTEEdd, @function
_ZN8MEMORY_T9WRITEBYTEEdd:
.L8270:
	jmp	_ZN8MEMORY_T6POKE64Edd
	.size	_ZN8MEMORY_T9WRITEBYTEEdd, .-_ZN8MEMORY_T9WRITEBYTEEdd
	.p2align 4
	.globl	INS_INC
	.type	INS_INC, @function
INS_INC:
.L8272:
.L8273:
.L8274:
	push	rbp
	xor	eax, eax
	pxor	xmm0, xmm0
	pxor	xmm1, xmm1
	push	rbx
	mov	rbx, rdi
	sub	rsp, 24
	mov	WORD PTR 13[rsp], ax
	movzx	eax, WORD PTR 56[rdi]
	mov	rdi, QWORD PTR 8[rdi]
	mov	DWORD PTR 9[rsp], 0
	cvtsi2sd	xmm0, eax
	mov	BYTE PTR 15[rsp], 0
	call	_ZN8MEMORY_T9READUBYTEEd
	pxor	xmm0, xmm0
	movzx	edx, WORD PTR 56[rbx]
	mov	rdi, QWORD PTR 8[rbx]
	mov	BYTE PTR 8[rsp], al
	movsx	eax, WORD PTR 8[rsp]
	cvtsi2sd	xmm0, eax
	addsd	xmm0, QWORD PTR .LC1[rip]
	cvttsd2si	ebp, xmm0
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, edx
	movzx	eax, bpl
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T9WRITEBYTEEdd
	movzx	eax, bpl
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, QWORD PTR .LC0[rip]
	sete	al
	and	ebp, -128
	lea	edx, [rax+rax]
	movzx	eax, BYTE PTR [rbx]
	and	eax, 125
	or	eax, edx
	or	eax, ebp
	mov	BYTE PTR [rbx], al
	add	rsp, 24
	pop	rbx
	pop	rbp
	ret
	.size	INS_INC, .-INS_INC
	.p2align 4
	.globl	INS_STY
	.type	INS_STY, @function
INS_STY:
.L8279:
	movzx	eax, BYTE PTR 3[rdi]
	movzx	edx, WORD PTR 56[rdi]
	pxor	xmm0, xmm0
	pxor	xmm1, xmm1
	mov	rdi, QWORD PTR 8[rdi]
	cvtsi2sd	xmm0, edx
	cvtsi2sd	xmm1, eax
	jmp	_ZN8MEMORY_T9WRITEBYTEEdd
	.size	INS_STY, .-INS_STY
	.p2align 4
	.globl	INS_STX
	.type	INS_STX, @function
INS_STX:
.L8281:
	movzx	eax, BYTE PTR 2[rdi]
	movzx	edx, WORD PTR 56[rdi]
	pxor	xmm0, xmm0
	pxor	xmm1, xmm1
	mov	rdi, QWORD PTR 8[rdi]
	cvtsi2sd	xmm0, edx
	cvtsi2sd	xmm1, eax
	jmp	_ZN8MEMORY_T9WRITEBYTEEdd
	.size	INS_STX, .-INS_STX
	.p2align 4
	.globl	INS_STA
	.type	INS_STA, @function
INS_STA:
.L8283:
	movzx	eax, BYTE PTR 1[rdi]
	movzx	edx, WORD PTR 56[rdi]
	pxor	xmm0, xmm0
	pxor	xmm1, xmm1
	mov	rdi, QWORD PTR 8[rdi]
	cvtsi2sd	xmm0, edx
	cvtsi2sd	xmm1, eax
	jmp	_ZN8MEMORY_T9WRITEBYTEEdd
	.size	INS_STA, .-INS_STA
	.p2align 4
	.globl	INS_ROR
	.type	INS_ROR, @function
INS_ROR:
.L8285:
	push	r12
	push	rbp
	push	rbx
	movzx	r12d, BYTE PTR [rdi]
	mov	rbx, rdi
	and	r12d, 1
	jne	.L8286
.L8287:
	movzx	eax, WORD PTR 56[rdi]
	pxor	xmm0, xmm0
	mov	rdi, QWORD PTR 8[rdi]
	mov	QWORD PTR CARY$[rip], 0
	cvtsi2sd	xmm0, eax
	call	_ZN8MEMORY_T9READUBYTEEd
	mov	ebp, eax
	test	al, 1
	je	.L8288
	or	BYTE PTR [rbx], 1
	shr	bpl
.L8297:
	movzx	edx, WORD PTR 56[rbx]
	movzx	eax, bpl
	pxor	xmm0, xmm0
	pxor	xmm1, xmm1
	cvtsi2sd	xmm1, eax
	mov	rdi, QWORD PTR 8[rbx]
	cvtsi2sd	xmm0, edx
	call	_ZN8MEMORY_T9WRITEBYTEEdd
	movzx	eax, bpl
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, QWORD PTR .LC0[rip]
	je	.L8291
	movzx	eax, BYTE PTR [rbx]
	and	eax, -3
	and	eax, 127
	or	eax, r12d
	mov	BYTE PTR [rbx], al
	pop	rbx
	pop	rbp
	pop	r12
	ret
	.p2align 4,,10
	.p2align 3
.L8286:
	movzx	eax, WORD PTR 56[rdi]
	pxor	xmm0, xmm0
	mov	rdi, QWORD PTR 8[rdi]
	mov	QWORD PTR CARY$[rip], 1
	cvtsi2sd	xmm0, eax
	call	_ZN8MEMORY_T9READUBYTEEd
	mov	ebp, eax
	test	al, 1
	je	.L8295
	or	BYTE PTR [rbx], 1
	shr	bpl
.L8294:
	or	ebp, -128
	movzx	edx, WORD PTR 56[rbx]
	pxor	xmm0, xmm0
	pxor	xmm1, xmm1
	movzx	eax, bpl
	mov	rdi, QWORD PTR 8[rbx]
	cvtsi2sd	xmm0, edx
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T9WRITEBYTEEdd
	movzx	eax, bpl
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, QWORD PTR .LC0[rip]
	je	.L8291
.L8292:
	movzx	eax, BYTE PTR [rbx]
	mov	r12d, -128
	and	eax, -3
	and	eax, 127
	or	eax, r12d
	mov	BYTE PTR [rbx], al
	pop	rbx
	pop	rbp
	pop	r12
	ret
	.p2align 4,,10
	.p2align 3
.L8295:
	and	BYTE PTR [rbx], -2
	shr	bpl
	jmp	.L8294
	.p2align 4,,10
	.p2align 3
.L8288:
	and	BYTE PTR [rbx], -2
	shr	bpl
	jmp	.L8297
	.p2align 4,,10
	.p2align 3
.L8291:
	movzx	eax, BYTE PTR [rbx]
	and	ebp, -128
	mov	r12d, ebp
	or	eax, 2
	and	eax, 127
	or	eax, r12d
	mov	BYTE PTR [rbx], al
	pop	rbx
	pop	rbp
	pop	r12
	ret
	.size	INS_ROR, .-INS_ROR
	.p2align 4
	.globl	INS_ROL
	.type	INS_ROL, @function
INS_ROL:
.L8304:
	push	rbp
	pxor	xmm0, xmm0
	push	rbx
	mov	rbx, rdi
	sub	rsp, 8
	movzx	eax, WORD PTR 56[rdi]
	mov	rdi, QWORD PTR 8[rdi]
	cvtsi2sd	xmm0, eax
	call	_ZN8MEMORY_T9READUBYTEEd
	mov	edx, eax
	movzx	eax, BYTE PTR [rbx]
	test	al, 1
	jne	.L8320
	mov	QWORD PTR CARY$[rip], 0
	mov	ecx, eax
	or	eax, 1
	lea	ebp, [rdx+rdx]
	and	ecx, -2
	test	dl, dl
	cmovns	eax, ecx
	mov	BYTE PTR [rbx], al
.L8308:
.L8309:
.L8310:
	movzx	edx, WORD PTR 56[rbx]
	movzx	eax, bpl
	pxor	xmm0, xmm0
	pxor	xmm1, xmm1
	cvtsi2sd	xmm1, eax
	mov	rdi, QWORD PTR 8[rbx]
	cvtsi2sd	xmm0, edx
	call	_ZN8MEMORY_T9WRITEBYTEEdd
	movzx	eax, bpl
	pxor	xmm0, xmm0
	mov	edx, 0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, QWORD PTR .LC0[rip]
	mov	esi, -128
	sete	al
	lea	ecx, [rax+rax]
	movzx	eax, BYTE PTR [rbx]
	and	eax, 125
	test	bpl, bpl
	cmovle	edx, esi
	or	eax, ecx
	or	eax, edx
	mov	BYTE PTR [rbx], al
	add	rsp, 8
	pop	rbx
	pop	rbp
	ret
	.p2align 4,,10
	.p2align 3
.L8320:
	mov	ecx, eax
	or	eax, 1
	lea	ebp, 1[rdx+rdx]
	mov	QWORD PTR CARY$[rip], 1
	and	ecx, -2
	test	dl, dl
	cmovns	eax, ecx
	mov	BYTE PTR [rbx], al
	jmp	.L8308
	.size	INS_ROL, .-INS_ROL
	.p2align 4
	.globl	INS_LSR
	.type	INS_LSR, @function
INS_LSR:
.L8322:
.L8323:
.L8324:
	push	rbp
	pxor	xmm0, xmm0
	pxor	xmm1, xmm1
	push	rbx
	mov	rbx, rdi
	sub	rsp, 8
	movzx	eax, WORD PTR 56[rdi]
	mov	rdi, QWORD PTR 8[rdi]
	cvtsi2sd	xmm0, eax
	call	_ZN8MEMORY_T9READUBYTEEd
	pxor	xmm0, xmm0
	mov	rdi, QWORD PTR 8[rbx]
	mov	ebp, eax
	movzx	eax, BYTE PTR [rbx]
	mov	edx, ebp
	shr	bpl
	and	edx, 1
	and	eax, -2
	or	eax, edx
	movzx	edx, WORD PTR 56[rbx]
	mov	BYTE PTR [rbx], al
	movzx	eax, bpl
	cvtsi2sd	xmm0, edx
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T9WRITEBYTEEdd
	movzx	eax, bpl
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, QWORD PTR .LC0[rip]
	sete	al
	lea	ecx, [rax+rax]
	movzx	eax, BYTE PTR [rbx]
	and	eax, 125
	cmp	bpl, 1
	sbb	edx, edx
	or	eax, ecx
	and	edx, -128
	or	eax, edx
	mov	BYTE PTR [rbx], al
	add	rsp, 8
	pop	rbx
	pop	rbp
	ret
	.size	INS_LSR, .-INS_LSR
	.p2align 4
	.globl	INS_DEC
	.type	INS_DEC, @function
INS_DEC:
.L8329:
	sub	rsp, 8
	movzx	eax, WORD PTR 56[rdi]
	pxor	xmm0, xmm0
	mov	rdx, rdi
	mov	rdi, QWORD PTR 8[rdi]
	cvtsi2sd	xmm0, eax
	call	_ZN8MEMORY_T9READUBYTEEd
	pxor	xmm0, xmm0
	movsx	eax, al
	cvtsi2sd	xmm0, eax
	subsd	xmm0, QWORD PTR .LC1[rip]
	movzx	eax, BYTE PTR [rdx]
	cvttsd2si	ecx, xmm0
	test	cl, cl
	je	.L8330
.L8331:
	mov	esi, ecx
	and	eax, -3
	and	esi, -128
.L8332:
	and	eax, 127
	movzx	ecx, cl
	pxor	xmm0, xmm0
	mov	rdi, QWORD PTR 8[rdx]
	or	eax, esi
	pxor	xmm1, xmm1
	mov	BYTE PTR [rdx], al
	movzx	eax, WORD PTR 56[rdx]
	cvtsi2sd	xmm1, ecx
	add	rsp, 8
	cvtsi2sd	xmm0, eax
	jmp	_ZN8MEMORY_T9WRITEBYTEEdd
	.p2align 4,,10
	.p2align 3
.L8330:
	or	eax, 2
	xor	esi, esi
	jmp	.L8332
	.size	INS_DEC, .-INS_DEC
	.p2align 4
	.globl	INS_ASL
	.type	INS_ASL, @function
INS_ASL:
.L8336:
.L8337:
.L8338:
	push	rbp
	pxor	xmm0, xmm0
	pxor	xmm1, xmm1
	push	rbx
	mov	rbx, rdi
	sub	rsp, 8
	movzx	eax, WORD PTR 56[rdi]
	mov	rdi, QWORD PTR 8[rdi]
	cvtsi2sd	xmm0, eax
	call	_ZN8MEMORY_T9READUBYTEEd
	movzx	edx, BYTE PTR [rbx]
	pxor	xmm0, xmm0
	mov	rdi, QWORD PTR 8[rbx]
	mov	ecx, eax
	lea	ebp, [rax+rax]
	shr	cl, 7
	and	edx, -2
	movzx	eax, bpl
	or	edx, ecx
	cvtsi2sd	xmm1, eax
	mov	BYTE PTR [rbx], dl
	movzx	edx, WORD PTR 56[rbx]
	cvtsi2sd	xmm0, edx
	call	_ZN8MEMORY_T9WRITEBYTEEdd
	movzx	eax, bpl
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, QWORD PTR .LC0[rip]
	sete	al
	and	ebp, -128
	lea	edx, [rax+rax]
	movzx	eax, BYTE PTR [rbx]
	and	eax, 125
	or	eax, edx
	or	ebp, eax
	mov	BYTE PTR [rbx], bpl
	add	rsp, 8
	pop	rbx
	pop	rbp
	ret
	.size	INS_ASL, .-INS_ASL
	.p2align 4
	.globl	_ZN8MEMORY_T10WRITEUBYTEEdd
	.type	_ZN8MEMORY_T10WRITEUBYTEEdd, @function
_ZN8MEMORY_T10WRITEUBYTEEdd:
	jmp	_ZN8MEMORY_T9WRITEBYTEEdd
	.size	_ZN8MEMORY_T10WRITEUBYTEEdd, .-_ZN8MEMORY_T10WRITEUBYTEEdd
	.p2align 4
	.globl	_ZN8MEMORY_T11WRITEUSHORTEdd
	.type	_ZN8MEMORY_T11WRITEUSHORTEdd, @function
_ZN8MEMORY_T11WRITEUSHORTEdd:
.L8344:
	push	r14
	movq	r14, xmm0
	movapd	xmm0, xmm1
	push	rbp
	mov	rbp, rdi
	push	rbx
	call	nearbyint@PLT
	movsd	xmm1, QWORD PTR .LC299[rip]
	cvttsd2si	rbx, xmm0
	comisd	xmm0, xmm1
	jb	.L8346
	subsd	xmm0, xmm1
	cvttsd2si	rbx, xmm0
	btc	rbx, 63
.L8346:
	movzx	eax, bl
	pxor	xmm1, xmm1
	movq	xmm0, r14
	mov	rdi, rbp
	cvtsi2sd	xmm1, rax
	movzx	ebx, bh
	call	_ZN8MEMORY_T6POKE64Edd
	pxor	xmm1, xmm1
	movq	xmm0, r14
	mov	rdi, rbp
	cvtsi2sd	xmm1, rbx
	addsd	xmm0, QWORD PTR .LC1[rip]
	pop	rbx
	pop	rbp
	pop	r14
	jmp	_ZN8MEMORY_T6POKE64Edd
	.size	_ZN8MEMORY_T11WRITEUSHORTEdd, .-_ZN8MEMORY_T11WRITEUSHORTEdd
	.p2align 4
	.globl	_ZN7CPU6510C1EP8MEMORY_T
	.type	_ZN7CPU6510C1EP8MEMORY_T, @function
_ZN7CPU6510C1EP8MEMORY_T:
.L8349:
	push	r13
	xor	ecx, ecx
	xor	edx, edx
	pxor	xmm0, xmm0
	push	r12
	mov	r13, rsi
	xor	esi, esi
	push	rbp
	mov	rbp, rdi
	push	rbx
	lea	rbx, 72[rdi]
	lea	r12, 14408[rbp]
	sub	rsp, 8
	mov	WORD PTR 4[rdi], dx
	mov	edx, 14336
	mov	WORD PTR 6[rdi], cx
	mov	BYTE PTR [rdi], 0
	mov	BYTE PTR 1[rdi], 0
	mov	BYTE PTR 2[rdi], 0
	mov	BYTE PTR 3[rdi], 0
	mov	QWORD PTR 64[rdi], 0
	movups	XMMWORD PTR 16[rdi], xmm0
	movups	XMMWORD PTR 32[rdi], xmm0
	movups	XMMWORD PTR 48[rdi], xmm0
	mov	rdi, rbx
	call	memset@PLT
	lea	rdi, 14416[rbp]
	mov	rcx, r12
	xor	eax, eax
	mov	QWORD PTR 14408[rbp], 0
	and	rdi, -8
	mov	QWORD PTR 14712[rbp], 0
	sub	rcx, rdi
	add	ecx, 312
	shr	ecx, 3
	rep stosq
	mov	QWORD PTR 8[rbp], r13
	lea	rdi, label$6001[rip]
	call	fb_DataRestore@PLT
	.p2align 4,,10
	.p2align 3
.L8350:
	mov	rdi, rbx
	call	fb_DataReadULongint@PLT
	xor	edx, edx
	mov	esi, 4
	lea	rdi, 8[rbx]
	call	fb_DataReadStr@PLT
	lea	rdi, 16[rbx]
	call	fb_DataReadULongint@PLT
	lea	rdi, 24[rbx]
	call	fb_DataReadULongint@PLT
	lea	rdi, 32[rbx]
	call	fb_DataReadULongint@PLT
	lea	rdi, 48[rbx]
	add	rbx, 56
	call	fb_DataReadLongint@PLT
	cmp	rbx, r12
	jne	.L8350
.L8351:
	lea	rdi, label$6007[rip]
	lea	r12, 14720[rbp]
	call	fb_DataRestore@PLT
	.p2align 4,,10
	.p2align 3
.L8352:
	mov	rdi, rbx
	xor	edx, edx
	mov	rsi, -1
	add	rbx, 24
	call	fb_DataReadStr@PLT
	cmp	r12, rbx
	jne	.L8352
.L8353:
	mov	eax, -798
	mov	BYTE PTR 7[rbp], 1
	mov	WORD PTR 4[rbp], ax
	add	rsp, 8
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	ret
	.size	_ZN7CPU6510C1EP8MEMORY_T, .-_ZN7CPU6510C1EP8MEMORY_T
	.section	.rodata.str1.1
.LC2837:
	.string	"NIBBLES: "
.LC2838:
	.string	"BYTES:   "
.LC2839:
	.string	"WORDS:   "
	.text
	.p2align 4
	.globl	_ZN5C64_TC1Ev
	.type	_ZN5C64_TC1Ev, @function
_ZN5C64_TC1Ev:
.L8358:
	push	r13
	lea	r13, NIBBLES$[rip]
	push	r12
	mov	r12, rdi
	push	rbp
	lea	rbp, .LC2837[rip]
	push	rbx
	xor	ebx, ebx
	sub	rsp, 40
	mov	QWORD PTR [rdi], 0
	mov	QWORD PTR 24[rsp], 0
	mov	QWORD PTR 8[rdi], 0
	mov	BYTE PTR ds:4808096, 0
	mov	BYTE PTR ds:4808097, 1
	mov	BYTE PTR ds:4808101, 5
	mov	BYTE PTR ds:4808104, 8
	jmp	.L8359
	.p2align 4,,10
	.p2align 3
.L8387:
	mov	rsi, rbx
	mov	edx, 1
	sub	rsi, rcx
.L8383:
	xor	edi, edi
	call	fb_PrintLongint@PLT
	movzx	eax, BYTE PTR ds:4808104
	movzx	ecx, BYTE PTR ds:4808097
	sal	rax, cl
	cmp	rbx, rax
	jg	.L8386
.L8359:
	mov	BYTE PTR 0[r13+rbx], bl
	xor	ecx, ecx
	xor	r8d, r8d
	mov	edx, -1
	movzx	eax, BYTE PTR ds:4808097
	mov	rdi, rax
	mov	esi, eax
	add	rbx, rax
	call	fb_Locate@PLT
	mov	esi, 9
	mov	rdi, rbp
	call	fb_StrAllocTempDescZEx@PLT
	xor	edx, edx
	xor	edi, edi
	mov	rsi, rax
	call	fb_PrintString@PLT
	movzx	ecx, BYTE PTR ds:4808097
	movzx	eax, BYTE PTR ds:4808104
	sal	rax, cl
	cmp	rbx, rax
	jge	.L8387
.L8360:
	mov	edx, 1
	mov	rsi, rbx
	jmp	.L8383
	.p2align 4,,10
	.p2align 3
.L8386:
	movzx	ebx, BYTE PTR ds:4808096
	lea	r13, BYTES$[rip]
	lea	rbp, .LC2838[rip]
	jmp	.L8363
	.p2align 4,,10
	.p2align 3
.L8389:
	movzx	eax, BYTE PTR ds:4808097
	mov	rsi, rbx
	mov	edx, 1
	sub	rsi, rax
.L8385:
	xor	edi, edi
	call	fb_PrintLongint@PLT
	movzx	eax, BYTE PTR ds:4808104
	movzx	ecx, BYTE PTR ds:4808101
	sal	rax, cl
	cmp	rbx, rax
	jg	.L8388
.L8363:
	mov	BYTE PTR 0[r13+rbx], bl
	xor	ecx, ecx
	xor	r8d, r8d
	mov	edx, -1
	movzx	eax, BYTE PTR ds:4808097
	movzx	edi, BYTE PTR ds:4808098
	mov	rsi, rax
	add	rbx, rax
	call	fb_Locate@PLT
	mov	esi, 9
	mov	rdi, rbp
	call	fb_StrAllocTempDescZEx@PLT
	xor	edx, edx
	xor	edi, edi
	mov	rsi, rax
	call	fb_PrintString@PLT
	movzx	eax, BYTE PTR ds:4808104
	movzx	ecx, BYTE PTR ds:4808101
	sal	rax, cl
	cmp	rbx, rax
	jge	.L8389
.L8364:
	mov	edx, 1
	mov	rsi, rbx
	jmp	.L8385
	.p2align 4,,10
	.p2align 3
.L8388:
	movzx	r13d, BYTE PTR ds:4808096
	lea	rbp, XWORDS$[rip]
	lea	rbx, .LC2839[rip]
	.p2align 4,,10
	.p2align 3
.L8367:
	mov	WORD PTR 0[rbp+r13*2], r13w
	xor	ecx, ecx
	xor	r8d, r8d
	mov	edx, -1
	movzx	eax, BYTE PTR ds:4808097
	movzx	edi, BYTE PTR ds:4808099
	mov	rsi, rax
	add	r13, rax
	call	fb_Locate@PLT
	mov	esi, 9
	mov	rdi, rbx
	call	fb_StrAllocTempDescZEx@PLT
	xor	edx, edx
	xor	edi, edi
	mov	rsi, rax
	call	fb_PrintString@PLT
	movzx	esi, BYTE PTR ds:4808111
	movzx	ecx, BYTE PTR ds:4808108
	mov	rax, rsi
	mov	rdx, rsi
	sal	rax, cl
	movzx	ecx, BYTE PTR ds:4808104
	sal	rdx, cl
	movzx	ecx, BYTE PTR ds:4808100
	add	rdx, rax
	lea	rax, [rdx+rsi]
	sal	rsi, cl
	add	rax, rsi
	mov	rsi, r13
	cmp	r13, rax
	jl	.L8368
	movzx	eax, BYTE PTR ds:4808097
	sub	rsi, rax
.L8368:
	mov	edx, 1
	xor	edi, edi
	call	fb_PrintLongint@PLT
	movzx	edi, BYTE PTR ds:4808111
	movzx	esi, BYTE PTR ds:4808104
	movzx	ecx, BYTE PTR ds:4808108
	movzx	r8d, BYTE PTR ds:4808100
	mov	rax, rdi
	mov	rdx, rdi
	mov	r9d, esi
	sal	rax, cl
	mov	ecx, esi
	mov	r10d, r8d
	and	r9d, 63
	sal	rdx, cl
	mov	ecx, r8d
	and	r10d, 63
	add	rax, rdx
	mov	rdx, rdi
	add	rax, rdi
	sal	rdx, cl
	add	rax, rdx
	cmp	r13, rax
	jle	.L8367
	movzx	eax, BYTE PTR ds:4808099
	mov	ecx, r10d
	movzx	edx, BYTE PTR ds:4808098
	movzx	r11d, BYTE PTR ds:4808096
	sal	rax, cl
	sal	rdx, cl
	mov	ecx, r9d
	xor	r9d, r9d
	add	eax, esi
	movzx	esi, r8b
	mov	r8d, 64
	sal	rsi, cl
	movzx	ecx, BYTE PTR ds:4808103
	add	esi, eax
	sal	rdi, cl
	mov	ecx, r11d
	call	fb_GfxScreenRes@PLT
	mov	edi, -65536
	call	fb_Cls@PLT
	xor	esi, esi
	lea	rdi, .LC3[rip]
	call	fb_StrAllocTempDescZEx@PLT
	sub	rsp, 8
	mov	QWORD PTR 24[rsp], 0
	lea	rcx, PITCH$[rip]
	mov	QWORD PTR 16[rsp], 0
	lea	rdx, IMGDATA$[rip]
	lea	rsi, SCR_H$[rip]
	push	rax
	lea	rdi, SCR_W$[rip]
	lea	r9, 32[rsp]
	lea	r8, 24[rsp]
	call	fb_GfxScreenInfo@PLT
	movzx	ecx, BYTE PTR ds:4808100
	xor	r8d, r8d
	movzx	eax, BYTE PTR ds:4808098
	movzx	edx, BYTE PTR ds:4808096
	mov	esi, DWORD PTR SCR_H$[rip]
	mov	edi, DWORD PTR SCR_W$[rip]
	sal	rax, cl
	mov	rcx, rax
	call	fb_GfxImageCreate@PLT
	mov	esi, DWORD PTR SCR_H$[rip]
	mov	edi, DWORD PTR SCR_W$[rip]
	xor	r8d, r8d
	mov	QWORD PTR BGIMAGE$[rip], rax
	movzx	ecx, BYTE PTR ds:4808100
	movzx	eax, BYTE PTR ds:4808098
	movzx	edx, BYTE PTR ds:4808096
	sal	rax, cl
	mov	rcx, rax
	call	fb_GfxImageCreate@PLT
	mov	edi, DWORD PTR SCR_W$[rip]
	xor	r8d, r8d
	mov	QWORD PTR FGIMAGE$[rip], rax
	movzx	ecx, BYTE PTR ds:4808100
	movzx	eax, BYTE PTR ds:4808098
	movzx	edx, BYTE PTR ds:4808096
	movzx	esi, BYTE PTR ds:4808097
	sal	rax, cl
	mov	rcx, rax
	call	fb_GfxImageCreate@PLT
	mov	esi, DWORD PTR SCR_H$[rip]
	mov	edi, DWORD PTR SCR_W$[rip]
	xor	r8d, r8d
	mov	QWORD PTR RASTER$[rip], rax
	movzx	ecx, BYTE PTR ds:4808100
	movzx	eax, BYTE PTR ds:4808098
	movzx	edx, BYTE PTR ds:4808096
	sal	rax, cl
	mov	rcx, rax
	call	fb_GfxImageCreate@PLT
	mov	QWORD PTR RENDER$[rip], rax
	pop	rax
	movzx	ebx, BYTE PTR ds:4808096
	pop	rdx
	lea	rbp, 24[rsp]
	.p2align 4,,10
	.p2align 3
.L8369:
	mov	rdi, rbp
	call	fb_DataReadLongint@PLT
	mov	esi, DWORD PTR 24[rsp]
	mov	edi, ebx
	mov	ecx, -1
	mov	edx, -1
	call	fb_GfxPalette@PLT
	movzx	eax, BYTE PTR ds:4808097
	add	rbx, rax
	movzx	eax, BYTE PTR ds:4808111
	cmp	rbx, rax
	jl	.L8369
	mov	edi, 134755848
	call	malloc@PLT
	mov	rbp, rax
	test	rax, rax
	je	.L8370
	mov	rdi, rax
	call	_ZN8MEMORY_TC1Ev
.L8370:
	mov	QWORD PTR [r12], rbp
	mov	edi, 14720
	call	malloc@PLT
	mov	rbx, rax
	test	rax, rax
	je	.L8371
	mov	rsi, rbp
	mov	rdi, rax
	call	_ZN7CPU6510C1EP8MEMORY_T
.L8371:
	mov	QWORD PTR 8[r12], rbx
	add	rsp, 40
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	ret
	.size	_ZN5C64_TC1Ev, .-_ZN5C64_TC1Ev
	.p2align 4
	.globl	_ZN7CPU6510D1Ev
	.type	_ZN7CPU6510D1Ev, @function
_ZN7CPU6510D1Ev:
.L8391:
	sub	rsp, 88
	add	rdi, 14408
	mov	QWORD PTR [rsp], rdi
	mov	QWORD PTR 8[rsp], rdi
	mov	rdi, rsp
	mov	QWORD PTR 16[rsp], 312
	mov	QWORD PTR 24[rsp], 24
	mov	QWORD PTR 32[rsp], 1
	mov	QWORD PTR 40[rsp], 49
	mov	QWORD PTR 48[rsp], 13
	mov	QWORD PTR 56[rsp], 0
	mov	QWORD PTR 64[rsp], 12
	call	fb_ArrayDestructStr@PLT
	add	rsp, 88
	ret
	.size	_ZN7CPU6510D1Ev, .-_ZN7CPU6510D1Ev
	.p2align 4
	.globl	_ZN5C64_TD1Ev
	.type	_ZN5C64_TD1Ev, @function
_ZN5C64_TD1Ev:
.L8394:
	push	rbx
	mov	rbx, rdi
	mov	rdi, QWORD PTR 8[rdi]
	test	rdi, rdi
	je	.L8395
	call	_ZN7CPU6510D1Ev
	mov	rdi, QWORD PTR 8[rbx]
	call	free@PLT
.L8395:
	mov	rdi, QWORD PTR [rbx]
	test	rdi, rdi
	je	.L8396
	call	free@PLT
.L8396:
	mov	rdi, QWORD PTR BGIMAGE$[rip]
	call	fb_GfxImageDestroy@PLT
	mov	rdi, QWORD PTR FGIMAGE$[rip]
	call	fb_GfxImageDestroy@PLT
	mov	rdi, QWORD PTR RASTER$[rip]
	call	fb_GfxImageDestroy@PLT
	mov	rdi, QWORD PTR RENDER$[rip]
	call	fb_GfxImageDestroy@PLT
	movzx	eax, BYTE PTR ds:4808104
	pop	rbx
	movzx	ecx, BYTE PTR ds:4808100
	movzx	edi, BYTE PTR ds:4808110
	movzx	edx, BYTE PTR ds:4808099
	sal	rdi, cl
	mov	ecx, eax
	sal	rdx, cl
	add	edi, edx
	add	edi, eax
	jmp	fb_Sleep@PLT
	.size	_ZN5C64_TD1Ev, .-_ZN5C64_TD1Ev
	.section	.rodata.str1.1
.LC2840:
	.string	"PC:"
.LC2841:
	.string	" A:"
.LC2842:
	.string	" X:"
.LC2843:
	.string	" Y:"
.LC2844:
	.string	" S:"
.LC2845:
	.string	" N:"
.LC2846:
	.string	" V:"
.LC2847:
	.string	" -"
.LC2848:
	.string	" B:"
.LC2849:
	.string	" D:"
.LC2850:
	.string	" I:"
.LC2851:
	.string	" Z:"
.LC2852:
	.string	" C:"
	.text
	.p2align 4
	.globl	_ZN7CPU6510cv8FBSTRINGEv
	.type	_ZN7CPU6510cv8FBSTRINGEv, @function
_ZN7CPU6510cv8FBSTRINGEv:
	push	r15
	pxor	xmm0, xmm0
	push	r14
	push	r13
	push	r12
	push	rbp
	push	rbx
	mov	rbx, rdi
	sub	rsp, 872
	movzx	edi, BYTE PTR [rdi]
	movups	XMMWORD PTR 832[rsp], xmm0
	lea	rbp, 832[rsp]
	mov	QWORD PTR 848[rsp], 0
	and	edi, 1
	call	fb_ULongintToStr@PLT
	movzx	edi, BYTE PTR [rbx]
	mov	QWORD PTR 56[rsp], rax
	shr	dil
	and	edi, 1
	call	fb_ULongintToStr@PLT
	movzx	edi, BYTE PTR [rbx]
	mov	QWORD PTR 8[rsp], rax
	shr	dil, 2
	and	edi, 1
	call	fb_ULongintToStr@PLT
	movzx	edi, BYTE PTR [rbx]
	mov	QWORD PTR 16[rsp], rax
	shr	dil, 3
	and	edi, 1
	call	fb_ULongintToStr@PLT
	movzx	edi, BYTE PTR [rbx]
	mov	QWORD PTR 24[rsp], rax
	shr	dil, 4
	and	edi, 1
	call	fb_ULongintToStr@PLT
	movzx	edi, BYTE PTR [rbx]
	mov	r12, rax
	shr	dil, 6
	and	edi, 1
	call	fb_ULongintToStr@PLT
	movzx	edi, BYTE PTR [rbx]
	mov	r13, rax
	shr	dil, 7
	movzx	edi, dil
	call	fb_ULongintToStr@PLT
	movzx	edi, BYTE PTR 6[rbx]
	mov	esi, 2
	mov	r14, rax
	call	fb_HEXEx_b@PLT
	movzx	edi, BYTE PTR 3[rbx]
	mov	esi, 2
	mov	r15, rax
	call	fb_HEXEx_b@PLT
	movzx	edi, BYTE PTR 2[rbx]
	mov	esi, 2
	mov	QWORD PTR 32[rsp], rax
	call	fb_HEXEx_b@PLT
	movzx	edi, BYTE PTR 1[rbx]
	mov	esi, 2
	mov	QWORD PTR 48[rsp], rax
	call	fb_HEXEx_b@PLT
	movzx	edi, WORD PTR 4[rbx]
	mov	esi, 4
	mov	QWORD PTR 40[rsp], rax
	call	fb_HEXEx_s@PLT
	lea	rdi, 64[rsp]
	pxor	xmm0, xmm0
	mov	r8, -1
	mov	rcx, rax
	mov	edx, 4
	movups	XMMWORD PTR 64[rsp], xmm0
	lea	rsi, .LC2840[rip]
	mov	QWORD PTR 80[rsp], 0
	call	fb_StrConcat@PLT
	lea	rdi, 96[rsp]
	pxor	xmm0, xmm0
	mov	r8d, 4
	mov	rsi, rax
	lea	rcx, .LC2841[rip]
	movups	XMMWORD PTR 96[rsp], xmm0
	mov	rdx, -1
	mov	QWORD PTR 112[rsp], 0
	call	fb_StrConcat@PLT
	mov	r10, QWORD PTR 40[rsp]
	pxor	xmm0, xmm0
	lea	rdi, 128[rsp]
	mov	rsi, rax
	mov	r8, -1
	mov	rdx, -1
	movups	XMMWORD PTR 128[rsp], xmm0
	mov	QWORD PTR 144[rsp], 0
	mov	rcx, r10
	call	fb_StrConcat@PLT
	pxor	xmm0, xmm0
	lea	rdi, 160[rsp]
	mov	r8d, 4
	mov	rsi, rax
	lea	rcx, .LC2842[rip]
	mov	rdx, -1
	movups	XMMWORD PTR 160[rsp], xmm0
	mov	QWORD PTR 176[rsp], 0
	call	fb_StrConcat@PLT
	mov	r9, QWORD PTR 48[rsp]
	pxor	xmm0, xmm0
	lea	rdi, 192[rsp]
	mov	rsi, rax
	mov	r8, -1
	mov	rdx, -1
	movups	XMMWORD PTR 192[rsp], xmm0
	mov	QWORD PTR 208[rsp], 0
	mov	rcx, r9
	call	fb_StrConcat@PLT
	pxor	xmm0, xmm0
	lea	rdi, 224[rsp]
	mov	r8d, 4
	mov	rsi, rax
	lea	rcx, .LC2843[rip]
	mov	rdx, -1
	movups	XMMWORD PTR 224[rsp], xmm0
	mov	QWORD PTR 240[rsp], 0
	call	fb_StrConcat@PLT
	mov	rcx, QWORD PTR 32[rsp]
	pxor	xmm0, xmm0
	lea	rdi, 256[rsp]
	mov	rsi, rax
	mov	r8, -1
	mov	rdx, -1
	movups	XMMWORD PTR 256[rsp], xmm0
	mov	QWORD PTR 272[rsp], 0
	call	fb_StrConcat@PLT
	pxor	xmm0, xmm0
	lea	rdi, 288[rsp]
	mov	r8d, 4
	mov	rsi, rax
	lea	rcx, .LC2844[rip]
	mov	rdx, -1
	movups	XMMWORD PTR 288[rsp], xmm0
	mov	QWORD PTR 304[rsp], 0
	call	fb_StrConcat@PLT
	lea	rdi, 320[rsp]
	pxor	xmm0, xmm0
	mov	rcx, r15
	mov	rsi, rax
	mov	r8, -1
	mov	rdx, -1
	movups	XMMWORD PTR 320[rsp], xmm0
	mov	QWORD PTR 336[rsp], 0
	call	fb_StrConcat@PLT
	pxor	xmm0, xmm0
	lea	rdi, 352[rsp]
	mov	r8d, 4
	mov	rsi, rax
	lea	rcx, .LC2845[rip]
	mov	rdx, -1
	movups	XMMWORD PTR 352[rsp], xmm0
	mov	QWORD PTR 368[rsp], 0
	call	fb_StrConcat@PLT
	lea	rdi, 384[rsp]
	pxor	xmm0, xmm0
	mov	rcx, r14
	mov	rsi, rax
	mov	r8, -1
	mov	rdx, -1
	movups	XMMWORD PTR 384[rsp], xmm0
	mov	QWORD PTR 400[rsp], 0
	call	fb_StrConcat@PLT
	pxor	xmm0, xmm0
	lea	rdi, 416[rsp]
	mov	r8d, 4
	mov	rsi, rax
	lea	rcx, .LC2846[rip]
	mov	rdx, -1
	movups	XMMWORD PTR 416[rsp], xmm0
	mov	QWORD PTR 432[rsp], 0
	call	fb_StrConcat@PLT
	lea	rdi, 448[rsp]
	pxor	xmm0, xmm0
	mov	rcx, r13
	mov	rsi, rax
	mov	r8, -1
	mov	rdx, -1
	movups	XMMWORD PTR 448[rsp], xmm0
	mov	QWORD PTR 464[rsp], 0
	call	fb_StrConcat@PLT
	pxor	xmm0, xmm0
	lea	rdi, 480[rsp]
	mov	r8d, 3
	mov	rsi, rax
	lea	rcx, .LC2847[rip]
	mov	rdx, -1
	movups	XMMWORD PTR 480[rsp], xmm0
	mov	QWORD PTR 496[rsp], 0
	call	fb_StrConcat@PLT
	pxor	xmm0, xmm0
	lea	rdi, 512[rsp]
	mov	r8d, 4
	mov	rsi, rax
	lea	rcx, .LC2848[rip]
	mov	rdx, -1
	movups	XMMWORD PTR 512[rsp], xmm0
	mov	QWORD PTR 528[rsp], 0
	call	fb_StrConcat@PLT
	lea	rdi, 544[rsp]
	pxor	xmm0, xmm0
	mov	rcx, r12
	mov	rsi, rax
	mov	r8, -1
	mov	rdx, -1
	movups	XMMWORD PTR 544[rsp], xmm0
	mov	QWORD PTR 560[rsp], 0
	call	fb_StrConcat@PLT
	pxor	xmm0, xmm0
	lea	rdi, 576[rsp]
	mov	r8d, 4
	mov	rsi, rax
	lea	rcx, .LC2849[rip]
	mov	rdx, -1
	movups	XMMWORD PTR 576[rsp], xmm0
	mov	QWORD PTR 592[rsp], 0
	call	fb_StrConcat@PLT
	mov	rcx, QWORD PTR 24[rsp]
	pxor	xmm0, xmm0
	lea	rdi, 608[rsp]
	mov	rsi, rax
	mov	r8, -1
	mov	rdx, -1
	movups	XMMWORD PTR 608[rsp], xmm0
	mov	QWORD PTR 624[rsp], 0
	call	fb_StrConcat@PLT
	pxor	xmm0, xmm0
	lea	rdi, 640[rsp]
	mov	r8d, 4
	mov	rsi, rax
	lea	rcx, .LC2850[rip]
	mov	rdx, -1
	movups	XMMWORD PTR 640[rsp], xmm0
	mov	QWORD PTR 656[rsp], 0
	call	fb_StrConcat@PLT
	mov	rcx, QWORD PTR 16[rsp]
	pxor	xmm0, xmm0
	lea	rdi, 672[rsp]
	mov	rsi, rax
	mov	r8, -1
	mov	rdx, -1
	movups	XMMWORD PTR 672[rsp], xmm0
	mov	QWORD PTR 688[rsp], 0
	call	fb_StrConcat@PLT
	pxor	xmm0, xmm0
	lea	rdi, 704[rsp]
	mov	r8d, 4
	mov	rsi, rax
	lea	rcx, .LC2851[rip]
	mov	rdx, -1
	movups	XMMWORD PTR 704[rsp], xmm0
	mov	QWORD PTR 720[rsp], 0
	call	fb_StrConcat@PLT
	mov	rcx, QWORD PTR 8[rsp]
	pxor	xmm0, xmm0
	lea	rdi, 736[rsp]
	mov	rsi, rax
	mov	r8, -1
	mov	rdx, -1
	movups	XMMWORD PTR 736[rsp], xmm0
	mov	QWORD PTR 752[rsp], 0
	call	fb_StrConcat@PLT
	pxor	xmm0, xmm0
	lea	rdi, 768[rsp]
	mov	r8d, 4
	mov	rsi, rax
	lea	rcx, .LC2852[rip]
	mov	rdx, -1
	movups	XMMWORD PTR 768[rsp], xmm0
	mov	QWORD PTR 784[rsp], 0
	call	fb_StrConcat@PLT
	mov	r11, QWORD PTR 56[rsp]
	pxor	xmm0, xmm0
	lea	rdi, 800[rsp]
	mov	rsi, rax
	mov	r8, -1
	mov	rdx, -1
	movups	XMMWORD PTR 800[rsp], xmm0
	mov	QWORD PTR 816[rsp], 0
	mov	rcx, r11
	call	fb_StrConcat@PLT
	mov	rdi, rbp
	xor	r8d, r8d
	mov	rcx, -1
	mov	rdx, rax
	mov	rsi, -1
	call	fb_StrAssign@PLT
	mov	rdi, rbp
	call	fb_StrAllocTempResult@PLT
	add	rsp, 872
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	ret
	.size	_ZN7CPU6510cv8FBSTRINGEv, .-_ZN7CPU6510cv8FBSTRINGEv
	.p2align 4
	.globl	_ZN7CPU65107ADR_UNKEv
	.type	_ZN7CPU65107ADR_UNKEv, @function
_ZN7CPU65107ADR_UNKEv:
	sub	rsp, 8
	mov	edi, -1
	call	fb_Sleep@PLT
	pxor	xmm0, xmm0
	add	rsp, 8
	ret
	.size	_ZN7CPU65107ADR_UNKEv, .-_ZN7CPU65107ADR_UNKEv
	.p2align 4
	.globl	_ZN7CPU65107ADR_IMMEv
	.type	_ZN7CPU65107ADR_IMMEv, @function
_ZN7CPU65107ADR_IMMEv:
	movzx	edx, WORD PTR 4[rdi]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	addsd	xmm0, QWORD PTR .LC1[rip]
	mov	rax, rdx
	cvttsd2si	edx, xmm0
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, eax
	mov	WORD PTR 4[rdi], dx
	ret
	.size	_ZN7CPU65107ADR_IMMEv, .-_ZN7CPU65107ADR_IMMEv
	.p2align 4
	.globl	_ZN7CPU65107ADR_RELEv
	.type	_ZN7CPU65107ADR_RELEv, @function
_ZN7CPU65107ADR_RELEv:
	jmp	_ZN7CPU65107ADR_IMMEv
	.size	_ZN7CPU65107ADR_RELEv, .-_ZN7CPU65107ADR_RELEv
	.p2align 4
	.globl	_ZN7CPU65107ADR_ABSEv
	.type	_ZN7CPU65107ADR_ABSEv, @function
_ZN7CPU65107ADR_ABSEv:
	movzx	eax, WORD PTR 4[rdi]
	pxor	xmm0, xmm0
	mov	rcx, rdi
	mov	rdi, QWORD PTR 8[rdi]
	cvtsi2sd	xmm0, eax
	call	_ZN8MEMORY_T10READUSHORTEd
	movzx	edx, WORD PTR 4[rcx]
	pxor	xmm0, xmm0
	movzx	eax, ax
	cvtsi2sd	xmm0, rdx
	addsd	xmm0, QWORD PTR .LC105[rip]
	cvttsd2si	edx, xmm0
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, eax
	mov	WORD PTR 4[rcx], dx
	ret
	.size	_ZN7CPU65107ADR_ABSEv, .-_ZN7CPU65107ADR_ABSEv
	.p2align 4
	.globl	_ZN7CPU65108ADR_ZEROEv
	.type	_ZN7CPU65108ADR_ZEROEv, @function
_ZN7CPU65108ADR_ZEROEv:
	movzx	eax, WORD PTR 4[rdi]
	pxor	xmm0, xmm0
	mov	rdx, rdi
	mov	rdi, QWORD PTR 8[rdi]
	cvtsi2sd	xmm0, eax
	call	_ZN8MEMORY_T9READUBYTEEd
	movzx	ecx, WORD PTR 4[rdx]
	pxor	xmm0, xmm0
	movzx	eax, al
	cvtsi2sd	xmm0, rcx
	addsd	xmm0, QWORD PTR .LC1[rip]
	cvttsd2si	ecx, xmm0
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	mov	WORD PTR 4[rdx], cx
	ret
	.size	_ZN7CPU65108ADR_ZEROEv, .-_ZN7CPU65108ADR_ZEROEv
	.p2align 4
	.globl	_ZN7CPU65109ADR_ZEROXEv
	.type	_ZN7CPU65109ADR_ZEROXEv, @function
_ZN7CPU65109ADR_ZEROXEv:
	movzx	eax, WORD PTR 4[rdi]
	pxor	xmm0, xmm0
	mov	rdx, rdi
	mov	rdi, QWORD PTR 8[rdi]
	pxor	xmm1, xmm1
	cvtsi2sd	xmm0, eax
	call	_ZN8MEMORY_T9READUBYTEEd
	add	al, BYTE PTR 2[rdx]
	pxor	xmm0, xmm0
	movzx	eax, al
	cvtsi2sd	xmm1, rax
	movzx	eax, WORD PTR 4[rdx]
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC1[rip]
	cvttsd2si	eax, xmm0
	movapd	xmm0, xmm1
	mov	WORD PTR 4[rdx], ax
	ret
	.size	_ZN7CPU65109ADR_ZEROXEv, .-_ZN7CPU65109ADR_ZEROXEv
	.p2align 4
	.globl	_ZN7CPU65109ADR_ZEROYEv
	.type	_ZN7CPU65109ADR_ZEROYEv, @function
_ZN7CPU65109ADR_ZEROYEv:
	movzx	eax, WORD PTR 4[rdi]
	pxor	xmm0, xmm0
	mov	rdx, rdi
	mov	rdi, QWORD PTR 8[rdi]
	pxor	xmm1, xmm1
	cvtsi2sd	xmm0, eax
	call	_ZN8MEMORY_T9READUBYTEEd
	add	al, BYTE PTR 3[rdx]
	pxor	xmm0, xmm0
	movzx	eax, al
	cvtsi2sd	xmm1, rax
	movzx	eax, WORD PTR 4[rdx]
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC1[rip]
	cvttsd2si	eax, xmm0
	movapd	xmm0, xmm1
	mov	WORD PTR 4[rdx], ax
	ret
	.size	_ZN7CPU65109ADR_ZEROYEv, .-_ZN7CPU65109ADR_ZEROYEv
	.p2align 4
	.globl	_ZN7CPU65108ADR_ABSXEv
	.type	_ZN7CPU65108ADR_ABSXEv, @function
_ZN7CPU65108ADR_ABSXEv:
	movzx	eax, WORD PTR 4[rdi]
	pxor	xmm0, xmm0
	mov	rcx, rdi
	mov	rdi, QWORD PTR 8[rdi]
	cvtsi2sd	xmm0, eax
	call	_ZN8MEMORY_T10READUSHORTEd
	pxor	xmm1, xmm1
	pxor	xmm0, xmm0
	movzx	edx, ax
	movzx	eax, BYTE PTR 2[rcx]
	add	rax, rdx
	cvtsi2sd	xmm1, rax
	movzx	eax, WORD PTR 4[rcx]
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC105[rip]
	cvttsd2si	eax, xmm0
	movapd	xmm0, xmm1
	mov	WORD PTR 4[rcx], ax
	ret
	.size	_ZN7CPU65108ADR_ABSXEv, .-_ZN7CPU65108ADR_ABSXEv
	.p2align 4
	.globl	_ZN7CPU65108ADR_ABSYEv
	.type	_ZN7CPU65108ADR_ABSYEv, @function
_ZN7CPU65108ADR_ABSYEv:
	movzx	eax, WORD PTR 4[rdi]
	pxor	xmm0, xmm0
	mov	rcx, rdi
	mov	rdi, QWORD PTR 8[rdi]
	cvtsi2sd	xmm0, eax
	call	_ZN8MEMORY_T10READUSHORTEd
	pxor	xmm1, xmm1
	pxor	xmm0, xmm0
	movzx	edx, ax
	movzx	eax, BYTE PTR 3[rcx]
	add	rax, rdx
	cvtsi2sd	xmm1, rax
	movzx	eax, WORD PTR 4[rcx]
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC105[rip]
	cvttsd2si	eax, xmm0
	movapd	xmm0, xmm1
	mov	WORD PTR 4[rcx], ax
	ret
	.size	_ZN7CPU65108ADR_ABSYEv, .-_ZN7CPU65108ADR_ABSYEv
	.p2align 4
	.globl	_ZN7CPU65108ADR_INDXEv
	.type	_ZN7CPU65108ADR_INDXEv, @function
_ZN7CPU65108ADR_INDXEv:
	movzx	eax, WORD PTR 4[rdi]
	pxor	xmm0, xmm0
	mov	rcx, rdi
	mov	rdi, QWORD PTR 8[rdi]
	cvtsi2sd	xmm0, eax
	call	_ZN8MEMORY_T9READUBYTEEd
	add	al, BYTE PTR 2[rcx]
	pxor	xmm0, xmm0
	mov	rdi, QWORD PTR 8[rcx]
	movzx	eax, al
	cvtsi2sd	xmm0, eax
	call	_ZN8MEMORY_T10READUSHORTEd
	movzx	edx, WORD PTR 4[rcx]
	pxor	xmm0, xmm0
	movzx	eax, ax
	cvtsi2sd	xmm0, rdx
	addsd	xmm0, QWORD PTR .LC1[rip]
	cvttsd2si	edx, xmm0
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, eax
	mov	WORD PTR 4[rcx], dx
	ret
	.size	_ZN7CPU65108ADR_INDXEv, .-_ZN7CPU65108ADR_INDXEv
	.p2align 4
	.globl	_ZN7CPU65108ADR_INDYEv
	.type	_ZN7CPU65108ADR_INDYEv, @function
_ZN7CPU65108ADR_INDYEv:
	movzx	eax, WORD PTR 4[rdi]
	pxor	xmm0, xmm0
	mov	rcx, rdi
	mov	rdi, QWORD PTR 8[rdi]
	cvtsi2sd	xmm0, eax
	call	_ZN8MEMORY_T9READUBYTEEd
	pxor	xmm0, xmm0
	mov	rdi, QWORD PTR 8[rcx]
	movzx	eax, al
	cvtsi2sd	xmm0, eax
	call	_ZN8MEMORY_T10READUSHORTEd
	pxor	xmm1, xmm1
	pxor	xmm0, xmm0
	mov	r8d, eax
	movzx	eax, BYTE PTR 3[rcx]
	add	eax, r8d
	movzx	eax, ax
	cvtsi2sd	xmm1, eax
	movzx	eax, WORD PTR 4[rcx]
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC1[rip]
	cvttsd2si	eax, xmm0
	movapd	xmm0, xmm1
	mov	WORD PTR 4[rcx], ax
	ret
	.size	_ZN7CPU65108ADR_INDYEv, .-_ZN7CPU65108ADR_INDYEv
	.p2align 4
	.globl	_ZN7CPU65107ADR_INDEv
	.type	_ZN7CPU65107ADR_INDEv, @function
_ZN7CPU65107ADR_INDEv:
	movzx	eax, WORD PTR 4[rdi]
	pxor	xmm0, xmm0
	mov	rcx, rdi
	mov	rdi, QWORD PTR 8[rdi]
	cvtsi2sd	xmm0, eax
	call	_ZN8MEMORY_T10READUSHORTEd
	pxor	xmm0, xmm0
	mov	rdi, QWORD PTR 8[rcx]
	movzx	eax, ax
	cvtsi2sd	xmm0, eax
	call	_ZN8MEMORY_T10READUSHORTEd
	movzx	edx, WORD PTR 4[rcx]
	pxor	xmm0, xmm0
	movzx	eax, ax
	cvtsi2sd	xmm0, rdx
	addsd	xmm0, QWORD PTR .LC105[rip]
	cvttsd2si	edx, xmm0
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, eax
	mov	WORD PTR 4[rcx], dx
	ret
	.size	_ZN7CPU65107ADR_INDEv, .-_ZN7CPU65107ADR_INDEv
	.p2align 4
	.globl	_ZN7CPU65104TICKEd
	.type	_ZN7CPU65104TICKEd, @function
_ZN7CPU65104TICKEd:
	push	rbp
	xor	esi, esi
	xor	eax, eax
	push	rbx
	mov	rbx, rdi
	mov	edi, 1
	sub	rsp, 56
	mov	QWORD PTR [rsp], 0
	lea	rbp, 16[rsp]
	call	fb_CHR@PLT
	mov	rcx, -1
	mov	rdi, rbp
	xor	r8d, r8d
	mov	rdx, rax
	mov	rsi, -1
	call	fb_StrInit@PLT
	movzx	eax, WORD PTR 4[rbx]
	pxor	xmm0, xmm0
	mov	rdi, QWORD PTR 8[rbx]
	mov	QWORD PTR 8[rsp], 0
	cvtsi2sd	xmm0, eax
	call	_ZN8MEMORY_T9READUBYTEEd
	pxor	xmm0, xmm0
	movzx	eax, al
	lea	rcx, 0[0+rax*8]
	sub	rcx, rax
	lea	rax, 72[rbx+rcx*8]
	movdqu	xmm1, XMMWORD PTR [rax]
	movups	XMMWORD PTR 16[rbx], xmm1
	movdqu	xmm2, XMMWORD PTR 16[rax]
	movups	XMMWORD PTR 32[rbx], xmm2
	movdqu	xmm3, XMMWORD PTR 32[rax]
	movups	XMMWORD PTR 48[rbx], xmm3
	mov	rax, QWORD PTR 48[rax]
	mov	QWORD PTR 56[rbx], 0x000000000
	mov	QWORD PTR 64[rbx], rax
	movzx	eax, WORD PTR 4[rbx]
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC1[rip]
	cvttsd2si	eax, xmm0
	mov	WORD PTR 4[rbx], ax
	mov	rax, QWORD PTR 32[rbx]
	cmp	rax, 12
	ja	.L8420
	lea	rdx, tmp$2929.1[rip]
	jmp	[QWORD PTR [rdx+rax*8]]
	.p2align 4,,10
	.p2align 3
.L8423:
.L8437:
	mov	rdi, rbx
	call	[QWORD PTR 64[rbx]]
.L8420:
	mov	rdi, rbp
	call	fb_StrDelete@PLT
	add	rsp, 56
	pxor	xmm0, xmm0
	pop	rbx
	pop	rbp
	ret
	.p2align 4,,10
	.p2align 3
.L8424:
.L8431:
	mov	rdi, rbx
	call	_ZN7CPU65107ADR_IMMEv
	cvtsd2si	eax, xmm0
	mov	WORD PTR 56[rbx], ax
	call	[QWORD PTR 64[rbx]]
	jmp	.L8420
	.p2align 4,,10
	.p2align 3
.L8432:
	mov	rdi, rbx
	call	_ZN7CPU65108ADR_INDXEv
	mov	rdi, rbx
	cvtsd2si	eax, xmm0
	mov	WORD PTR 56[rbx], ax
	call	[QWORD PTR 64[rbx]]
	jmp	.L8420
	.p2align 4,,10
	.p2align 3
.L8433:
	mov	rdi, rbx
	call	_ZN7CPU65108ADR_INDYEv
	mov	rdi, rbx
	cvtsd2si	eax, xmm0
	mov	WORD PTR 56[rbx], ax
	call	[QWORD PTR 64[rbx]]
	jmp	.L8420
	.p2align 4,,10
	.p2align 3
.L8434:
	mov	rdi, rbx
	call	_ZN7CPU65107ADR_INDEv
	mov	rdi, rbx
	cvtsd2si	eax, xmm0
	mov	WORD PTR 56[rbx], ax
	call	[QWORD PTR 64[rbx]]
	jmp	.L8420
	.p2align 4,,10
	.p2align 3
.L8422:
	jmp	.L8420
	.p2align 4,,10
	.p2align 3
.L8425:
	mov	rdi, rbx
	call	_ZN7CPU65107ADR_ABSEv
	cvtsd2si	eax, xmm0
	mov	WORD PTR 56[rbx], ax
	jmp	.L8437
	.p2align 4,,10
	.p2align 3
.L8426:
	mov	rdi, rbx
	call	_ZN7CPU65108ADR_ZEROEv
	mov	rdi, rbx
	cvtsd2si	eax, xmm0
	mov	WORD PTR 56[rbx], ax
	call	[QWORD PTR 64[rbx]]
	jmp	.L8420
	.p2align 4,,10
	.p2align 3
.L8427:
	mov	rdi, rbx
	call	_ZN7CPU65109ADR_ZEROXEv
	mov	rdi, rbx
	cvtsd2si	eax, xmm0
	mov	WORD PTR 56[rbx], ax
	call	[QWORD PTR 64[rbx]]
	jmp	.L8420
	.p2align 4,,10
	.p2align 3
.L8428:
	mov	rdi, rbx
	call	_ZN7CPU65109ADR_ZEROYEv
	mov	rdi, rbx
	cvtsd2si	eax, xmm0
	mov	WORD PTR 56[rbx], ax
	call	[QWORD PTR 64[rbx]]
	jmp	.L8420
	.p2align 4,,10
	.p2align 3
.L8429:
	mov	rdi, rbx
	call	_ZN7CPU65108ADR_ABSXEv
	mov	rdi, rbx
	cvtsd2si	eax, xmm0
	mov	WORD PTR 56[rbx], ax
	call	[QWORD PTR 64[rbx]]
	jmp	.L8420
	.p2align 4,,10
	.p2align 3
.L8430:
	mov	rdi, rbx
	call	_ZN7CPU65108ADR_ABSYEv
	mov	rdi, rbx
	cvtsd2si	eax, xmm0
	mov	WORD PTR 56[rbx], ax
	call	[QWORD PTR 64[rbx]]
	jmp	.L8420
	.size	_ZN7CPU65104TICKEd, .-_ZN7CPU65104TICKEd
	.p2align 4
	.globl	_ZN7CPU65104PUSHEd
	.type	_ZN7CPU65104PUSHEd, @function
_ZN7CPU65104PUSHEd:
.L8439:
	push	rbx
	movzx	eax, WORD PTR 6[rdi]
	movapd	xmm1, xmm0
	pxor	xmm0, xmm0
	mov	rbx, rdi
	mov	rdi, QWORD PTR 8[rdi]
	cvtsi2sd	xmm0, eax
	call	_ZN8MEMORY_T9WRITEBYTEEdd
	movzx	eax, BYTE PTR 6[rbx]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	subsd	xmm0, QWORD PTR .LC1[rip]
	cvttsd2si	eax, xmm0
	mov	BYTE PTR 6[rbx], al
	pop	rbx
	ret
	.size	_ZN7CPU65104PUSHEd, .-_ZN7CPU65104PUSHEd
	.p2align 4
	.globl	INS_BRK
	.type	INS_BRK, @function
INS_BRK:
.L8442:
	push	rbx
	movzx	eax, WORD PTR 4[rdi]
	pxor	xmm0, xmm0
	mov	rbx, rdi
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC1[rip]
	cvttsd2si	eax, xmm0
	pxor	xmm0, xmm0
	mov	WORD PTR 4[rdi], ax
	movzx	eax, ah
	cvtsi2sd	xmm0, eax
	call	_ZN7CPU65104PUSHEd
	movzx	eax, BYTE PTR 4[rbx]
	pxor	xmm0, xmm0
	mov	rdi, rbx
	cvtsi2sd	xmm0, eax
	call	_ZN7CPU65104PUSHEd
	movzx	eax, BYTE PTR [rbx]
	pxor	xmm0, xmm0
	mov	rdi, rbx
	cvtsi2sd	xmm0, eax
	call	_ZN7CPU65104PUSHEd
	or	BYTE PTR [rbx], 20
	mov	rdi, QWORD PTR 8[rbx]
	movsd	xmm0, QWORD PTR .LC2853[rip]
	call	_ZN8MEMORY_T10READUSHORTEd
	mov	WORD PTR 4[rbx], ax
	pop	rbx
	ret
	.size	INS_BRK, .-INS_BRK
	.p2align 4
	.globl	INS_JSR
	.type	INS_JSR, @function
INS_JSR:
.L8445:
	push	rbx
	movzx	eax, WORD PTR 4[rdi]
	pxor	xmm0, xmm0
	mov	rbx, rdi
	sub	eax, 1
	mov	WORD PTR 4[rdi], ax
	movzx	eax, ah
	cvtsi2sd	xmm0, eax
	call	_ZN7CPU65104PUSHEd
	movzx	eax, BYTE PTR 4[rbx]
	pxor	xmm0, xmm0
	mov	rdi, rbx
	cvtsi2sd	xmm0, eax
	call	_ZN7CPU65104PUSHEd
	movzx	eax, WORD PTR 56[rbx]
	mov	WORD PTR 4[rbx], ax
	pop	rbx
	ret
	.size	INS_JSR, .-INS_JSR
	.p2align 4
	.globl	INS_PHA
	.type	INS_PHA, @function
INS_PHA:
.L8448:
	movzx	eax, BYTE PTR 1[rdi]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, eax
	jmp	_ZN7CPU65104PUSHEd
	.size	INS_PHA, .-INS_PHA
	.p2align 4
	.globl	INS_PHP
	.type	INS_PHP, @function
INS_PHP:
.L8450:
	movzx	eax, BYTE PTR [rdi]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, eax
	jmp	_ZN7CPU65104PUSHEd
	.size	INS_PHP, .-INS_PHP
	.p2align 4
	.globl	_ZN7CPU65104PULLEv
	.type	_ZN7CPU65104PULLEv, @function
_ZN7CPU65104PULLEv:
	movzx	eax, BYTE PTR 6[rdi]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC1[rip]
	cvttsd2si	eax, xmm0
	pxor	xmm0, xmm0
	mov	BYTE PTR 6[rdi], al
	movzx	eax, WORD PTR 6[rdi]
	mov	rdi, QWORD PTR 8[rdi]
	cvtsi2sd	xmm0, eax
	call	_ZN8MEMORY_T9READUBYTEEd
	pxor	xmm0, xmm0
	movzx	eax, al
	cvtsi2sd	xmm0, eax
	ret
	.size	_ZN7CPU65104PULLEv, .-_ZN7CPU65104PULLEv
	.p2align 4
	.globl	INS_PLA
	.type	INS_PLA, @function
INS_PLA:
.L8453:
.L8454:
.L8455:
	mov	rdx, rdi
	call	_ZN7CPU65104PULLEv
	cvtsd2si	ecx, xmm0
	pxor	xmm0, xmm0
	movzx	eax, cl
	mov	BYTE PTR 1[rdx], cl
	cvtsi2sd	xmm0, rax
	comisd	xmm0, QWORD PTR .LC0[rip]
	sete	al
	and	ecx, -128
	lea	esi, [rax+rax]
	movzx	eax, BYTE PTR [rdx]
	and	eax, 125
	or	eax, esi
	or	eax, ecx
	mov	BYTE PTR [rdx], al
	ret
	.size	INS_PLA, .-INS_PLA
	.p2align 4
	.globl	INS_PLP
	.type	INS_PLP, @function
INS_PLP:
.L8459:
	mov	rdx, rdi
	call	_ZN7CPU65104PULLEv
	cvtsd2si	eax, xmm0
	mov	BYTE PTR [rdx], al
	ret
	.size	INS_PLP, .-INS_PLP
	.p2align 4
	.globl	INS_RTI
	.type	INS_RTI, @function
INS_RTI:
.L8461:
	mov	rdx, rdi
	call	_ZN7CPU65104PULLEv
	mov	rdi, rdx
	cvtsd2si	eax, xmm0
	mov	BYTE PTR [rdx], al
	call	_ZN7CPU65104PULLEv
	mov	rdi, rdx
	cvtsd2si	eax, xmm0
	mov	BYTE PTR 4[rdx], al
	call	_ZN7CPU65104PULLEv
	cvtsd2si	eax, xmm0
	pxor	xmm0, xmm0
	mov	BYTE PTR 5[rdx], al
	movzx	eax, WORD PTR 4[rdx]
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC1[rip]
	cvttsd2si	eax, xmm0
	mov	WORD PTR 4[rdx], ax
	ret
	.size	INS_RTI, .-INS_RTI
	.p2align 4
	.globl	INS_RTS
	.type	INS_RTS, @function
INS_RTS:
.L8463:
	mov	rdx, rdi
	call	_ZN7CPU65104PULLEv
	mov	rdi, rdx
	cvtsd2si	eax, xmm0
	mov	BYTE PTR 4[rdx], al
	call	_ZN7CPU65104PULLEv
	cvtsd2si	eax, xmm0
	pxor	xmm0, xmm0
	mov	BYTE PTR 5[rdx], al
	movzx	eax, WORD PTR 4[rdx]
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC1[rip]
	cvttsd2si	eax, xmm0
	mov	WORD PTR 4[rdx], ax
	ret
	.size	INS_RTS, .-INS_RTS
	.section	.rodata.str1.1
.LC2854:
	.string	"save filename:"
.LC2855:
	.string	"can't create: "
.LC2858:
	.string	"load filename:"
.LC2859:
	.string	"can't open: "
	.text
	.p2align 4
	.globl	INTERRUPTSERVICE
	.type	INTERRUPTSERVICE, @function
INTERRUPTSERVICE:
.L8465:
	push	r15
	push	r14
	push	r13
	push	r12
	xor	r12d, r12d
	push	rbp
	push	rbx
	sub	rsp, 88
	test	BYTE PTR [rdi], 4
	je	.L8539
.L8464:
	add	rsp, 88
	mov	rax, r12
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	ret
	.p2align 4,,10
	.p2align 3
.L8539:
	mov	rax, QWORD PTR .LC293[rip]
	mov	rbx, rdi
	mov	rdi, QWORD PTR 8[rdi]
	xor	ebp, ebp
	movq	xmm0, rax
	call	_ZN8MEMORY_T9READUBYTEEd
	movzx	r12d, al
	cmp	r12, 9
	jle	.L8540
.L8466:
.L8504:
	movzx	eax, BYTE PTR 5[rbx]
	pxor	xmm0, xmm0
	mov	rdi, rbx
	xor	r12d, r12d
	cvtsi2sd	xmm0, eax
	call	_ZN7CPU65104PUSHEd
	movzx	eax, BYTE PTR 4[rbx]
	pxor	xmm0, xmm0
	mov	rdi, rbx
	cvtsi2sd	xmm0, eax
	call	_ZN7CPU65104PUSHEd
	movzx	eax, BYTE PTR [rbx]
	pxor	xmm0, xmm0
	mov	rdi, rbx
	cvtsi2sd	xmm0, eax
	call	_ZN7CPU65104PUSHEd
	mov	rdi, QWORD PTR 8[rbx]
	movsd	xmm0, QWORD PTR .LC2853[rip]
	call	_ZN8MEMORY_T9READUBYTEEd
	mov	rdi, QWORD PTR 8[rbx]
	movsd	xmm0, QWORD PTR .LC260[rip]
	mov	BYTE PTR 5[rbx], al
	call	_ZN8MEMORY_T9READUBYTEEd
	mov	BYTE PTR 4[rbx], al
	movzx	eax, BYTE PTR [rbx]
	and	eax, -17
	or	eax, 4
	cmp	QWORD PTR 16[rbx], 64
	mov	BYTE PTR [rbx], al
	je	.L8508
	.p2align 4,,10
	.p2align 3
.L8505:
	mov	rax, QWORD PTR .LC2824[rip]
	mov	rdi, rbx
	add	r12, 1
	movq	xmm0, rax
	call	_ZN7CPU65104TICKEd
	cmp	QWORD PTR 16[rbx], 64
	jne	.L8505
.L8508:
	mov	rdi, rbx
	call	_ZN7CPU65104PULLEv
	mov	rdi, rbx
	cvtsd2si	eax, xmm0
	mov	BYTE PTR [rbx], al
	call	_ZN7CPU65104PULLEv
	mov	rdi, rbx
	cvtsd2si	eax, xmm0
	mov	BYTE PTR 4[rbx], al
	call	_ZN7CPU65104PULLEv
	cvtsd2si	eax, xmm0
	mov	BYTE PTR 5[rbx], al
	xor	eax, eax
	cmp	rbp, 13
	sete	al
	mov	QWORD PTR FLAG$[rip], rax
	jmp	.L8464
	.p2align 4,,10
	.p2align 3
.L8540:
	call	fb_Inkey@PLT
	lea	r13, 16[rsp]
	xor	r8d, r8d
	mov	rcx, -1
	mov	rdx, rax
	mov	rsi, -1
	mov	rdi, r13
	call	fb_StrInit@PLT
	mov	rsi, -1
	mov	rdi, r13
	call	fb_StrLen@PLT
	mov	rbp, rax
	test	rax, rax
	je	.L8503
	mov	rax, QWORD PTR 16[rsp]
	movzx	edx, BYTE PTR -1[rax+rbp]
	sal	rbp, 8
	lea	rax, [rdx+rbp]
	lea	rbp, -256[rax]
	cmp	rax, 283
	je	.L8541
	lea	rdx, -321[rax]
	cmp	rdx, 25
	jbe	.L8542
.L8471:
	lea	rdx, -353[rax]
	cmp	rdx, 25
	jbe	.L8543
.L8474:
	cmp	rbp, 316
	je	.L8476
	cmp	rbp, 317
	je	.L8544
	cmp	rbp, 327
	je	.L8545
	cmp	rbp, 8
	je	.L8514
	cmp	rbp, 331
	je	.L8515
	cmp	rbp, 328
	je	.L8516
	cmp	rbp, 333
	je	.L8517
	cmp	rbp, 336
	jne	.L8546
	movsd	xmm1, QWORD PTR .LC118[rip]
	mov	ebp, 17
.L8470:
.L8497:
.L8498:
.L8499:
	.p2align 4,,10
	.p2align 3
.L8500:
	lea	rax, 631[r12]
	pxor	xmm0, xmm0
	mov	rdi, QWORD PTR 8[rbx]
	add	r12, 1
	cvtsi2sd	xmm0, rax
	call	_ZN8MEMORY_T9WRITEBYTEEdd
	pxor	xmm1, xmm1
	mov	rax, QWORD PTR .LC293[rip]
	mov	rdi, QWORD PTR 8[rbx]
	cvtsi2sd	xmm1, r12
	movq	xmm0, rax
	call	_ZN8MEMORY_T9WRITEBYTEEdd
.L8467:
.L8501:
.L8502:
.L8503:
	mov	rdi, r13
	call	fb_StrDelete@PLT
	jmp	.L8504
.L8476:
	xor	r8d, r8d
	xor	ecx, ecx
	mov	edx, -1
	mov	esi, 1
	mov	edi, 1
	call	fb_Locate@PLT
	mov	edi, 48
	call	fb_SPACE@PLT
	xor	edi, edi
	mov	edx, 1
	mov	rsi, rax
	call	fb_PrintString@PLT
	xor	r8d, r8d
	xor	ecx, ecx
	mov	edx, -1
	mov	esi, 1
	mov	edi, 1
	call	fb_Locate@PLT
	mov	esi, 14
	lea	rdi, .LC2854[rip]
	call	fb_StrAllocTempDescZEx@PLT
	mov	edx, -1
	mov	esi, -1
	mov	rdi, rax
	call	fb_ConsoleInput@PLT
	xor	edx, edx
	mov	rsi, -1
	mov	rdi, r13
	call	fb_InputString@PLT
	mov	rsi, -1
	mov	rdi, r13
	call	fb_StrLen@PLT
	test	rax, rax
	je	.L8488
	call	fb_FileFree@PLT
	xor	r9d, r9d
	xor	ecx, ecx
	xor	esi, esi
	mov	r8d, eax
	mov	edx, 2
	mov	rdi, r13
	mov	r14d, eax
	call	fb_FileOpen@PLT
	test	eax, eax
	je	.L8481
	xor	r8d, r8d
	xor	ecx, ecx
	mov	edx, -1
	mov	esi, 1
	mov	edi, 1
	call	fb_Locate@PLT
	mov	edi, 48
	call	fb_SPACE@PLT
	mov	edx, 1
	xor	edi, edi
	mov	rsi, rax
	call	fb_PrintString@PLT
	xor	r8d, r8d
	xor	ecx, ecx
	mov	edx, -1
	mov	esi, 1
	mov	edi, 1
	call	fb_Locate@PLT
	pxor	xmm0, xmm0
	lea	rdi, 48[rsp]
	mov	rcx, r13
	mov	QWORD PTR 64[rsp], 0
	mov	r8, -1
	mov	edx, 15
	lea	rsi, .LC2855[rip]
	movups	XMMWORD PTR 48[rsp], xmm0
.L8537:
	call	fb_StrConcat@PLT
	xor	edi, edi
	mov	edx, 1
	mov	rsi, rax
	call	fb_PrintString@PLT
	call	fb_Beep@PLT
	mov	edi, -1
	call	fb_Sleep@PLT
.L8480:
.L8484:
.L8485:
.L8486:
.L8487:
.L8488:
	pxor	xmm1, xmm1
	movss	xmm3, DWORD PTR .LC2856[rip]
	xor	edi, edi
	xor	ebp, ebp
	xor	r8d, r8d
	mov	ecx, 65535
	movaps	xmm0, xmm1
	mov	edx, 2
	movss	xmm2, DWORD PTR .LC2857[rip]
	mov	esi, 3
	call	fb_GfxLine@PLT
	jmp	.L8503
.L8546:
.L8494:
.L8495:
.L8496:
	test	rbp, rbp
	je	.L8503
	.p2align 4,,10
	.p2align 3
.L8509:
	pxor	xmm1, xmm1
	cvtsi2sd	xmm1, rbp
	jmp	.L8500
.L8541:
.L8469:
	xor	edi, edi
	call	fb_End@PLT
	movsd	xmm1, QWORD PTR .LC128[rip]
	jmp	.L8500
.L8542:
.L8472:
	lea	rbp, -224[rax]
.L8538:
	mov	rsi, rbp
	mov	edi, 1
	xor	eax, eax
	call	fb_CHR@PLT
	xor	r8d, r8d
	mov	rcx, -1
	mov	rsi, -1
	mov	rdx, rax
	lea	rdi, S$1.0[rip]
	call	fb_StrConcatAssign@PLT
	jmp	.L8509
.L8543:
.L8475:
	lea	rbp, -288[rax]
	jmp	.L8538
.L8545:
	movsd	xmm1, QWORD PTR .LC120[rip]
	mov	ebp, 19
	jmp	.L8500
.L8544:
.L8478:
	xor	r8d, r8d
	xor	ecx, ecx
	mov	edx, -1
	mov	esi, 1
	mov	edi, 1
	call	fb_Locate@PLT
	mov	edi, 48
	call	fb_SPACE@PLT
	xor	edi, edi
	mov	edx, 1
	mov	rsi, rax
	call	fb_PrintString@PLT
	xor	r8d, r8d
	xor	ecx, ecx
	mov	edx, -1
	mov	esi, 1
	mov	edi, 1
	call	fb_Locate@PLT
	mov	esi, 14
	lea	rdi, .LC2858[rip]
	call	fb_StrAllocTempDescZEx@PLT
	mov	edx, -1
	mov	esi, -1
	mov	rdi, rax
	call	fb_ConsoleInput@PLT
	xor	edx, edx
	mov	rsi, -1
	mov	rdi, r13
	call	fb_InputString@PLT
	mov	rsi, -1
	mov	rdi, r13
	call	fb_StrLen@PLT
	test	rax, rax
	je	.L8488
	call	fb_FileFree@PLT
	xor	r9d, r9d
	xor	ecx, ecx
	xor	esi, esi
	mov	r8d, eax
	mov	edx, 1
	mov	rdi, r13
	mov	r14d, eax
	call	fb_FileOpen@PLT
	test	eax, eax
	je	.L8491
	xor	r8d, r8d
	xor	ecx, ecx
	mov	edx, -1
	mov	esi, 1
	mov	edi, 1
	call	fb_Locate@PLT
	mov	edi, 48
	call	fb_SPACE@PLT
	mov	edx, 1
	xor	edi, edi
	mov	rsi, rax
	call	fb_PrintString@PLT
	xor	r8d, r8d
	xor	ecx, ecx
	mov	edx, -1
	mov	esi, 1
	mov	edi, 1
	call	fb_Locate@PLT
	pxor	xmm0, xmm0
	lea	rdi, 48[rsp]
	mov	rcx, r13
	mov	QWORD PTR 64[rsp], 0
	mov	r8, -1
	mov	edx, 13
	lea	rsi, .LC2859[rip]
	movups	XMMWORD PTR 48[rsp], xmm0
	jmp	.L8537
.L8514:
	movsd	xmm1, QWORD PTR .LC121[rip]
	mov	ebp, 20
	jmp	.L8500
.L8515:
	movsd	xmm1, QWORD PTR .LC162[rip]
	mov	ebp, 157
	jmp	.L8500
.L8516:
	movsd	xmm1, QWORD PTR .LC150[rip]
	mov	ebp, 145
	jmp	.L8500
.L8481:
	mov	rdi, QWORD PTR 8[rbx]
	movsd	xmm0, QWORD PTR .LC86[rip]
	xor	esi, esi
	xor	ebp, ebp
	mov	BYTE PTR 15[rsp], 0
	mov	ecx, 8
	lea	r12, 15[rsp]
	call	_ZN8MEMORY_T10READUSHORTEd
	lea	rdx, 48[rsp]
	mov	edi, r14d
	movzx	eax, ax
	sub	rax, 2048
	mov	QWORD PTR 48[rsp], rax
	call	fb_FilePutLarge@PLT
	mov	r15, QWORD PTR 48[rsp]
	sub	r15, 1
	js	.L8483
.L8482:
	lea	rax, 2048[rbp]
	pxor	xmm0, xmm0
	mov	rdx, r12
	xor	esi, esi
	cvtsi2sd	xmm0, rax
	mov	rdi, QWORD PTR 8[rbx]
	mov	ecx, 1
	add	rbp, 1
	call	_ZN8MEMORY_T9READUBYTEEd
	mov	edi, r14d
	mov	BYTE PTR 15[rsp], al
	call	fb_FilePutLarge@PLT
	cmp	r15, rbp
	jge	.L8482
.L8483:
	mov	edi, r14d
	call	fb_FileClose@PLT
	jmp	.L8488
.L8517:
	movsd	xmm1, QWORD PTR .LC130[rip]
	mov	ebp, 29
	jmp	.L8500
.L8491:
	lea	rdx, 48[rsp]
	mov	ecx, 8
	xor	esi, esi
	mov	edi, r14d
	mov	BYTE PTR 15[rsp], 0
	xor	ebp, ebp
	lea	r12, 15[rsp]
	mov	QWORD PTR 48[rsp], 0
	call	fb_FileGetLarge@PLT
	mov	r15, QWORD PTR 48[rsp]
	sub	r15, 1
	js	.L8493
.L8492:
	mov	ecx, 1
	mov	rdx, r12
	xor	esi, esi
	mov	edi, r14d
	call	fb_FileGetLarge@PLT
	movzx	eax, BYTE PTR 15[rsp]
	lea	rdx, 2048[rbp]
	pxor	xmm0, xmm0
	pxor	xmm1, xmm1
	cvtsi2sd	xmm0, rdx
	mov	rdi, QWORD PTR 8[rbx]
	add	rbp, 1
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T9WRITEBYTEEdd
	cmp	r15, rbp
	jge	.L8492
.L8493:
	mov	edi, r14d
	call	fb_FileClose@PLT
	mov	rax, QWORD PTR 48[rsp]
	pxor	xmm1, xmm1
	mov	rdi, QWORD PTR 8[rbx]
	movsd	xmm0, QWORD PTR .LC86[rip]
	add	rax, 2048
	cvtsi2sd	xmm1, rax
	mov	QWORD PTR 48[rsp], rax
	call	_ZN8MEMORY_T11WRITEUSHORTEdd
	mov	eax, -23254
	mov	WORD PTR 4[rbx], ax
	jmp	.L8488
	.size	INTERRUPTSERVICE, .-INTERRUPTSERVICE
	.section	.text.startup,"ax",@progbits
	.p2align 4
	.globl	main
	.type	main, @function
main:
	push	r13
	xor	edx, edx
	xor	r13d, r13d
	push	r12
	push	rbp
	push	rbx
	movabs	rbx, -5853766786057164379
	sub	rsp, 24
	call	fb_Init@PLT
	lea	rdi, label$6001[rip]
	call	fb_DataRestore@PLT
	xor	r8d, r8d
	mov	ecx, 3
	lea	rdx, .LC1303[rip]
	mov	rsi, -1
	lea	rdi, EOL$[rip]
	call	fb_StrAssign@PLT
	mov	rdi, rsp
	call	_ZN5C64_TC1Ev
	mov	r12, QWORD PTR fb_hPutPSet@GOTPCREL[rip]
	mov	rbp, QWORD PTR fb_hPutOr@GOTPCREL[rip]
	.p2align 4,,10
	.p2align 3
.L8552:
	pxor	xmm0, xmm0
	mov	rdi, QWORD PTR 8[rsp]
	cvtsi2sd	xmm0, r13
	addsd	xmm0, QWORD PTR .LC1[rip]
	cvttsd2si	r13, xmm0
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, QWORD PTR FLAG$[rip]
	comisd	xmm0, QWORD PTR .LC1[rip]
	je	.L8555
	mov	rax, QWORD PTR .LC2824[rip]
	movq	xmm0, rax
	call	_ZN7CPU65104TICKEd
.L8551:
	mov	rax, r13
	pxor	xmm0, xmm0
	pxor	xmm2, xmm2
	imul	rbx
	mov	rax, r13
	sar	rax, 63
	add	rdx, r13
	sar	rdx, 14
	sub	rdx, rax
	mov	rax, r13
	imul	rdx, rdx, 24000
	sub	rax, rdx
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm2
	jne	.L8552
.L8548:
	mov	rdi, QWORD PTR 8[rsp]
	call	INTERRUPTSERVICE
	add	r13, rax
	call	fb_GfxLock@PLT
	push	0
	pxor	xmm1, xmm1
	xor	edi, edi
	push	0
	movaps	xmm0, xmm1
	mov	r9d, -65536
	mov	ecx, -65536
	push	-1
	mov	r8d, -65536
	mov	edx, -65536
	mov	rsi, QWORD PTR BGIMAGE$[rip]
	push	r12
	push	1
	push	0
	call	fb_GfxPut@PLT
	add	rsp, 48
	xor	edi, edi
	mov	ecx, -65536
	push	0
	mov	r9d, -65536
	pxor	xmm1, xmm1
	pxor	xmm0, xmm0
	push	0
	mov	r8d, -65536
	mov	edx, -65536
	mov	rsi, QWORD PTR FGIMAGE$[rip]
	push	-1
	push	rbp
	push	4
	push	0
	call	fb_GfxPut@PLT
	add	rsp, 48
	mov	esi, -1
	mov	edi, -1
	call	fb_GfxUnlock@PLT
	jmp	.L8552
	.p2align 4,,10
	.p2align 3
.L8555:
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, r13
	call	_ZN7CPU65104TICKEd
	jmp	.L8551
	.size	main, .-main
	.local	S$1.0
	.comm	S$1.0,24,16
	.section	.data.rel.ro.local,"aw"
	.align 32
	.type	tmp$2929.1, @object
	.size	tmp$2929.1, 104
tmp$2929.1:
	.quad	.L8422
	.quad	.L8423
	.quad	.L8424
	.quad	.L8425
	.quad	.L8426
	.quad	.L8427
	.quad	.L8428
	.quad	.L8429
	.quad	.L8430
	.quad	.L8431
	.quad	.L8432
	.quad	.L8433
	.quad	.L8434
	.align 32
	.type	tmp$2886.2, @object
	.size	tmp$2886.2, 48
tmp$2886.2:
	.quad	.L4741
	.quad	.L4742
	.quad	.L4743
	.quad	.L4744
	.quad	.L4745
	.quad	.L4746
	.align 32
	.type	tmp$2885.3, @object
	.size	tmp$2885.3, 56
tmp$2885.3:
	.quad	.L4723
	.quad	.L4724
	.quad	.L4725
	.quad	.L4726
	.quad	.L4727
	.quad	.L4728
	.quad	.L4729
	.align 32
	.type	tmp$2884.4, @object
	.size	tmp$2884.4, 32
tmp$2884.4:
	.quad	.L4714
	.quad	.L4715
	.quad	.L4716
	.quad	.L4717
	.align 32
	.type	tmp$2883.5, @object
	.size	tmp$2883.5, 184
tmp$2883.5:
	.quad	.L2306
	.quad	.L2344
	.quad	.L2345
	.quad	.L2346
	.quad	.L2347
	.quad	.L2348
	.quad	.L2350
	.quad	.L2611
	.quad	.L4525
	.quad	.L2871
	.quad	.L2886
	.quad	.L2887
	.quad	.L2888
	.quad	.L2889
	.quad	.L2890
	.quad	.L2893
	.quad	.L2896
	.quad	.L2923
	.quad	.L3183
	.quad	.L3443
	.quad	.L3947
	.quad	.L4113
	.quad	.L4369
	.align 32
	.type	tmp$2882.6, @object
	.size	tmp$2882.6, 1208
tmp$2882.6:
	.quad	.L4374
	.quad	.L4375
	.quad	.L4376
	.quad	.L4377
	.quad	.L4378
	.quad	.L4379
	.quad	.L4380
	.quad	.L4381
	.quad	.L4382
	.quad	.L4383
	.quad	.L4384
	.quad	.L4372
	.quad	.L4385
	.quad	.L4386
	.quad	.L4387
	.quad	.L4388
	.quad	.L4389
	.quad	.L4390
	.quad	.L4391
	.quad	.L4392
	.quad	.L4393
	.quad	.L4394
	.quad	.L4395
	.quad	.L4396
	.quad	.L4397
	.quad	.L4398
	.quad	.L4399
	.quad	.L4400
	.quad	.L4401
	.quad	.L4402
	.quad	.L4403
	.quad	.L4404
	.quad	.L4405
	.quad	.L4406
	.quad	.L4407
	.quad	.L4408
	.quad	.L4409
	.quad	.L4410
	.quad	.L4411
	.quad	.L4412
	.quad	.L4413
	.quad	.L4414
	.quad	.L4415
	.quad	.L4416
	.quad	.L4417
	.quad	.L4418
	.quad	.L4419
	.quad	.L4420
	.quad	.L4421
	.quad	.L4422
	.quad	.L4423
	.quad	.L4424
	.quad	.L4425
	.quad	.L4426
	.quad	.L4427
	.quad	.L4428
	.quad	.L4429
	.quad	.L4430
	.quad	.L4431
	.quad	.L4432
	.quad	.L4433
	.quad	.L4434
	.quad	.L4435
	.quad	.L4436
	.quad	.L4437
	.quad	.L4438
	.quad	.L4439
	.quad	.L4440
	.quad	.L4441
	.quad	.L4442
	.quad	.L4443
	.quad	.L4444
	.quad	.L4445
	.quad	.L4446
	.quad	.L4447
	.quad	.L4448
	.quad	.L4449
	.quad	.L4450
	.quad	.L4451
	.quad	.L4452
	.quad	.L4453
	.quad	.L4454
	.quad	.L4455
	.quad	.L4456
	.quad	.L4457
	.quad	.L4458
	.quad	.L4459
	.quad	.L4460
	.quad	.L4461
	.quad	.L4462
	.quad	.L4463
	.quad	.L4464
	.quad	.L4465
	.quad	.L4466
	.quad	.L4467
	.quad	.L4468
	.quad	.L4469
	.quad	.L4470
	.quad	.L4471
	.quad	.L4472
	.quad	.L4473
	.quad	.L4474
	.quad	.L4475
	.quad	.L4476
	.quad	.L4477
	.quad	.L4478
	.quad	.L4479
	.quad	.L4480
	.quad	.L4481
	.quad	.L4482
	.quad	.L4483
	.quad	.L4484
	.quad	.L4485
	.quad	.L4486
	.quad	.L4487
	.quad	.L4488
	.quad	.L4489
	.quad	.L4490
	.quad	.L4491
	.quad	.L4492
	.quad	.L4493
	.quad	.L4494
	.quad	.L4495
	.quad	.L4496
	.quad	.L4497
	.quad	.L4498
	.quad	.L4499
	.quad	.L4500
	.quad	.L4501
	.quad	.L4502
	.quad	.L4503
	.quad	.L4504
	.quad	.L4505
	.quad	.L4506
	.quad	.L4507
	.quad	.L4508
	.quad	.L4509
	.quad	.L4510
	.quad	.L4511
	.quad	.L4512
	.quad	.L4513
	.quad	.L4514
	.quad	.L4515
	.quad	.L4516
	.quad	.L4517
	.quad	.L4518
	.quad	.L4519
	.quad	.L4520
	.quad	.L4521
	.quad	.L4522
	.quad	.L4523
	.align 32
	.type	tmp$2881.7, @object
	.size	tmp$2881.7, 2048
tmp$2881.7:
	.quad	.L4118
	.quad	.L4119
	.quad	.L4120
	.quad	.L4116
	.quad	.L4121
	.quad	.L4122
	.quad	.L4123
	.quad	.L4124
	.quad	.L4125
	.quad	.L4126
	.quad	.L4127
	.quad	.L4128
	.quad	.L4129
	.quad	.L4130
	.quad	.L4131
	.quad	.L4132
	.quad	.L4133
	.quad	.L4134
	.quad	.L4135
	.quad	.L4136
	.quad	.L4116
	.quad	.L4137
	.quad	.L4138
	.quad	.L4139
	.quad	.L4140
	.quad	.L4141
	.quad	.L4142
	.quad	.L4143
	.quad	.L4144
	.quad	.L4145
	.quad	.L4146
	.quad	.L4147
	.quad	.L4148
	.quad	.L4149
	.quad	.L4150
	.quad	.L4151
	.quad	.L4152
	.quad	.L4153
	.quad	.L4154
	.quad	.L4155
	.quad	.L4156
	.quad	.L4157
	.quad	.L4158
	.quad	.L4159
	.quad	.L4160
	.quad	.L4161
	.quad	.L4162
	.quad	.L4163
	.quad	.L4164
	.quad	.L4165
	.quad	.L4166
	.quad	.L4167
	.quad	.L4168
	.quad	.L4169
	.quad	.L4170
	.quad	.L4171
	.quad	.L4172
	.quad	.L4173
	.quad	.L4174
	.quad	.L4175
	.quad	.L4176
	.quad	.L4177
	.quad	.L4178
	.quad	.L4179
	.quad	.L4180
	.quad	.L4181
	.quad	.L4182
	.quad	.L4183
	.quad	.L4184
	.quad	.L4185
	.quad	.L4186
	.quad	.L4187
	.quad	.L4188
	.quad	.L4189
	.quad	.L4190
	.quad	.L4191
	.quad	.L4192
	.quad	.L4193
	.quad	.L4194
	.quad	.L4195
	.quad	.L4196
	.quad	.L4197
	.quad	.L4198
	.quad	.L4199
	.quad	.L4200
	.quad	.L4201
	.quad	.L4202
	.quad	.L4203
	.quad	.L4204
	.quad	.L4205
	.quad	.L4206
	.quad	.L4207
	.quad	.L4208
	.quad	.L4209
	.quad	.L4210
	.quad	.L4211
	.quad	.L4212
	.quad	.L4213
	.quad	.L4214
	.quad	.L4215
	.quad	.L4216
	.quad	.L4217
	.quad	.L4218
	.quad	.L4219
	.quad	.L4220
	.quad	.L4221
	.quad	.L4116
	.quad	.L4222
	.quad	.L4223
	.quad	.L4224
	.quad	.L4225
	.quad	.L4226
	.quad	.L4227
	.quad	.L4228
	.quad	.L4229
	.quad	.L4230
	.quad	.L4231
	.quad	.L4232
	.quad	.L4233
	.quad	.L4234
	.quad	.L4235
	.quad	.L4236
	.quad	.L4237
	.quad	.L4238
	.quad	.L4239
	.quad	.L4240
	.quad	.L4241
	.quad	.L4116
	.quad	.L4116
	.quad	.L4242
	.quad	.L4243
	.quad	.L4244
	.quad	.L4245
	.quad	.L4246
	.quad	.L4247
	.quad	.L4248
	.quad	.L4249
	.quad	.L4250
	.quad	.L4251
	.quad	.L4252
	.quad	.L4253
	.quad	.L4254
	.quad	.L4255
	.quad	.L4256
	.quad	.L4257
	.quad	.L4258
	.quad	.L4259
	.quad	.L4260
	.quad	.L4261
	.quad	.L4262
	.quad	.L4263
	.quad	.L4264
	.quad	.L4265
	.quad	.L4266
	.quad	.L4267
	.quad	.L4268
	.quad	.L4269
	.quad	.L4270
	.quad	.L4271
	.quad	.L4272
	.quad	.L4273
	.quad	.L4274
	.quad	.L4275
	.quad	.L4276
	.quad	.L4277
	.quad	.L4278
	.quad	.L4279
	.quad	.L4280
	.quad	.L4281
	.quad	.L4282
	.quad	.L4283
	.quad	.L4284
	.quad	.L4285
	.quad	.L4286
	.quad	.L4287
	.quad	.L4288
	.quad	.L4289
	.quad	.L4290
	.quad	.L4291
	.quad	.L4292
	.quad	.L4293
	.quad	.L4294
	.quad	.L4295
	.quad	.L4296
	.quad	.L4297
	.quad	.L4298
	.quad	.L4299
	.quad	.L4300
	.quad	.L4301
	.quad	.L4302
	.quad	.L4303
	.quad	.L4304
	.quad	.L4305
	.quad	.L4306
	.quad	.L4307
	.quad	.L4308
	.quad	.L4309
	.quad	.L4310
	.quad	.L4311
	.quad	.L4312
	.quad	.L4313
	.quad	.L4314
	.quad	.L4315
	.quad	.L4316
	.quad	.L4317
	.quad	.L4318
	.quad	.L4319
	.quad	.L4320
	.quad	.L4321
	.quad	.L4322
	.quad	.L4323
	.quad	.L4324
	.quad	.L4325
	.quad	.L4326
	.quad	.L4327
	.quad	.L4328
	.quad	.L4329
	.quad	.L4330
	.quad	.L4331
	.quad	.L4332
	.quad	.L4333
	.quad	.L4334
	.quad	.L4335
	.quad	.L4336
	.quad	.L4337
	.quad	.L4338
	.quad	.L4339
	.quad	.L4340
	.quad	.L4341
	.quad	.L4342
	.quad	.L4343
	.quad	.L4344
	.quad	.L4345
	.quad	.L4346
	.quad	.L4347
	.quad	.L4348
	.quad	.L4349
	.quad	.L4350
	.quad	.L4351
	.quad	.L4352
	.quad	.L4353
	.quad	.L4354
	.quad	.L4355
	.quad	.L4356
	.quad	.L4357
	.quad	.L4358
	.quad	.L4359
	.quad	.L4360
	.quad	.L4361
	.quad	.L4362
	.quad	.L4363
	.quad	.L4364
	.quad	.L4365
	.quad	.L4366
	.quad	.L4367
	.quad	.L4368
	.align 32
	.type	tmp$2880.8, @object
	.size	tmp$2880.8, 1296
tmp$2880.8:
	.quad	.L3952
	.quad	.L3953
	.quad	.L3954
	.quad	.L3955
	.quad	.L3956
	.quad	.L3957
	.quad	.L3958
	.quad	.L3959
	.quad	.L3960
	.quad	.L3961
	.quad	.L3962
	.quad	.L3963
	.quad	.L3964
	.quad	.L3965
	.quad	.L3950
	.quad	.L3966
	.quad	.L3967
	.quad	.L3968
	.quad	.L3969
	.quad	.L3970
	.quad	.L3971
	.quad	.L3972
	.quad	.L3973
	.quad	.L3974
	.quad	.L3975
	.quad	.L3976
	.quad	.L3977
	.quad	.L3978
	.quad	.L3979
	.quad	.L3980
	.quad	.L3981
	.quad	.L3982
	.quad	.L3983
	.quad	.L3984
	.quad	.L3985
	.quad	.L3986
	.quad	.L3987
	.quad	.L3988
	.quad	.L3989
	.quad	.L3990
	.quad	.L3991
	.quad	.L3992
	.quad	.L3993
	.quad	.L3994
	.quad	.L3995
	.quad	.L3996
	.quad	.L3997
	.quad	.L3998
	.quad	.L3999
	.quad	.L4000
	.quad	.L4001
	.quad	.L4002
	.quad	.L4003
	.quad	.L4004
	.quad	.L4005
	.quad	.L4006
	.quad	.L4007
	.quad	.L4008
	.quad	.L4009
	.quad	.L4010
	.quad	.L4011
	.quad	.L4012
	.quad	.L4013
	.quad	.L4014
	.quad	.L4015
	.quad	.L4016
	.quad	.L4017
	.quad	.L4018
	.quad	.L4019
	.quad	.L4020
	.quad	.L4021
	.quad	.L4022
	.quad	.L4023
	.quad	.L4024
	.quad	.L4025
	.quad	.L4026
	.quad	.L4027
	.quad	.L4028
	.quad	.L4029
	.quad	.L4030
	.quad	.L4031
	.quad	.L4032
	.quad	.L4033
	.quad	.L4034
	.quad	.L4035
	.quad	.L4036
	.quad	.L4037
	.quad	.L4038
	.quad	.L4039
	.quad	.L4040
	.quad	.L4041
	.quad	.L4042
	.quad	.L4043
	.quad	.L4044
	.quad	.L4045
	.quad	.L4046
	.quad	.L4047
	.quad	.L4048
	.quad	.L4049
	.quad	.L4050
	.quad	.L4051
	.quad	.L4052
	.quad	.L4053
	.quad	.L4054
	.quad	.L4055
	.quad	.L4056
	.quad	.L4057
	.quad	.L4058
	.quad	.L4059
	.quad	.L4060
	.quad	.L4061
	.quad	.L4062
	.quad	.L4063
	.quad	.L4064
	.quad	.L4065
	.quad	.L4066
	.quad	.L4067
	.quad	.L4068
	.quad	.L4069
	.quad	.L4070
	.quad	.L4071
	.quad	.L4072
	.quad	.L4073
	.quad	.L4074
	.quad	.L4075
	.quad	.L4076
	.quad	.L4077
	.quad	.L4078
	.quad	.L4079
	.quad	.L4080
	.quad	.L4081
	.quad	.L4082
	.quad	.L4083
	.quad	.L4084
	.quad	.L4085
	.quad	.L4086
	.quad	.L4087
	.quad	.L4088
	.quad	.L4089
	.quad	.L4090
	.quad	.L4091
	.quad	.L4092
	.quad	.L4093
	.quad	.L4094
	.quad	.L4095
	.quad	.L4096
	.quad	.L4097
	.quad	.L4098
	.quad	.L4099
	.quad	.L4100
	.quad	.L4101
	.quad	.L4102
	.quad	.L4103
	.quad	.L4104
	.quad	.L4105
	.quad	.L4106
	.quad	.L4107
	.quad	.L4108
	.quad	.L4109
	.quad	.L4110
	.quad	.L4111
	.quad	.L4112
	.align 32
	.type	tmp$2879.9, @object
	.size	tmp$2879.9, 2048
tmp$2879.9:
	.quad	.L3187
	.quad	.L3188
	.quad	.L3189
	.quad	.L3190
	.quad	.L3191
	.quad	.L3192
	.quad	.L3193
	.quad	.L3194
	.quad	.L3195
	.quad	.L3196
	.quad	.L3197
	.quad	.L3198
	.quad	.L3199
	.quad	.L3200
	.quad	.L3201
	.quad	.L3202
	.quad	.L3203
	.quad	.L3204
	.quad	.L3205
	.quad	.L3206
	.quad	.L3207
	.quad	.L3208
	.quad	.L3209
	.quad	.L3210
	.quad	.L3211
	.quad	.L3212
	.quad	.L3213
	.quad	.L3214
	.quad	.L3215
	.quad	.L3216
	.quad	.L3217
	.quad	.L3218
	.quad	.L3219
	.quad	.L3220
	.quad	.L3221
	.quad	.L3222
	.quad	.L3223
	.quad	.L3224
	.quad	.L3225
	.quad	.L3226
	.quad	.L3227
	.quad	.L3228
	.quad	.L3229
	.quad	.L3230
	.quad	.L3231
	.quad	.L3232
	.quad	.L3233
	.quad	.L3234
	.quad	.L3235
	.quad	.L3236
	.quad	.L3237
	.quad	.L3238
	.quad	.L3239
	.quad	.L3240
	.quad	.L3241
	.quad	.L3242
	.quad	.L3243
	.quad	.L3244
	.quad	.L3245
	.quad	.L3246
	.quad	.L3247
	.quad	.L3248
	.quad	.L3249
	.quad	.L3250
	.quad	.L3251
	.quad	.L3252
	.quad	.L3253
	.quad	.L3254
	.quad	.L3255
	.quad	.L3256
	.quad	.L3257
	.quad	.L3258
	.quad	.L3259
	.quad	.L3260
	.quad	.L3261
	.quad	.L3262
	.quad	.L3263
	.quad	.L3264
	.quad	.L3265
	.quad	.L3266
	.quad	.L3267
	.quad	.L3268
	.quad	.L3269
	.quad	.L3270
	.quad	.L3271
	.quad	.L3272
	.quad	.L3273
	.quad	.L3274
	.quad	.L3275
	.quad	.L3276
	.quad	.L3277
	.quad	.L3278
	.quad	.L3279
	.quad	.L3280
	.quad	.L3281
	.quad	.L3282
	.quad	.L3283
	.quad	.L3284
	.quad	.L3285
	.quad	.L3286
	.quad	.L3287
	.quad	.L3288
	.quad	.L3289
	.quad	.L3290
	.quad	.L3291
	.quad	.L3292
	.quad	.L3293
	.quad	.L3294
	.quad	.L3295
	.quad	.L3296
	.quad	.L3297
	.quad	.L3298
	.quad	.L3299
	.quad	.L3300
	.quad	.L3301
	.quad	.L3302
	.quad	.L3303
	.quad	.L3304
	.quad	.L3305
	.quad	.L3306
	.quad	.L3307
	.quad	.L3308
	.quad	.L3309
	.quad	.L3310
	.quad	.L3311
	.quad	.L3312
	.quad	.L3313
	.quad	.L3314
	.quad	.L3315
	.quad	.L3316
	.quad	.L3317
	.quad	.L3318
	.quad	.L3319
	.quad	.L3320
	.quad	.L3321
	.quad	.L3322
	.quad	.L3323
	.quad	.L3324
	.quad	.L3325
	.quad	.L3326
	.quad	.L3327
	.quad	.L3328
	.quad	.L3329
	.quad	.L3330
	.quad	.L3331
	.quad	.L3332
	.quad	.L3333
	.quad	.L3334
	.quad	.L3335
	.quad	.L3336
	.quad	.L3337
	.quad	.L3338
	.quad	.L3339
	.quad	.L3340
	.quad	.L3341
	.quad	.L3342
	.quad	.L3343
	.quad	.L3344
	.quad	.L3345
	.quad	.L3346
	.quad	.L3347
	.quad	.L3348
	.quad	.L3349
	.quad	.L3350
	.quad	.L3351
	.quad	.L3352
	.quad	.L3353
	.quad	.L3354
	.quad	.L3355
	.quad	.L3356
	.quad	.L3357
	.quad	.L3358
	.quad	.L3359
	.quad	.L3360
	.quad	.L3361
	.quad	.L3362
	.quad	.L3363
	.quad	.L3364
	.quad	.L3365
	.quad	.L3366
	.quad	.L3367
	.quad	.L3368
	.quad	.L3369
	.quad	.L3370
	.quad	.L3371
	.quad	.L3372
	.quad	.L3373
	.quad	.L3374
	.quad	.L3375
	.quad	.L3376
	.quad	.L3377
	.quad	.L3378
	.quad	.L3379
	.quad	.L3380
	.quad	.L3381
	.quad	.L3382
	.quad	.L3383
	.quad	.L3384
	.quad	.L3385
	.quad	.L3386
	.quad	.L3387
	.quad	.L3388
	.quad	.L3389
	.quad	.L3390
	.quad	.L3391
	.quad	.L3392
	.quad	.L3393
	.quad	.L3394
	.quad	.L3395
	.quad	.L3396
	.quad	.L3397
	.quad	.L3398
	.quad	.L3399
	.quad	.L3400
	.quad	.L3401
	.quad	.L3402
	.quad	.L3403
	.quad	.L3404
	.quad	.L3405
	.quad	.L3406
	.quad	.L3407
	.quad	.L3408
	.quad	.L3409
	.quad	.L3410
	.quad	.L3411
	.quad	.L3412
	.quad	.L3413
	.quad	.L3414
	.quad	.L3415
	.quad	.L3416
	.quad	.L3417
	.quad	.L3418
	.quad	.L3419
	.quad	.L3420
	.quad	.L3421
	.quad	.L3422
	.quad	.L3423
	.quad	.L3424
	.quad	.L3425
	.quad	.L3426
	.quad	.L3427
	.quad	.L3428
	.quad	.L3429
	.quad	.L3430
	.quad	.L3431
	.quad	.L3432
	.quad	.L3433
	.quad	.L3434
	.quad	.L3435
	.quad	.L3436
	.quad	.L3437
	.quad	.L3438
	.quad	.L3439
	.quad	.L3440
	.quad	.L3441
	.quad	.L3442
	.align 32
	.type	tmp$2878.10, @object
	.size	tmp$2878.10, 2048
tmp$2878.10:
	.quad	.L2928
	.quad	.L2929
	.quad	.L2930
	.quad	.L2931
	.quad	.L2932
	.quad	.L2933
	.quad	.L2934
	.quad	.L2935
	.quad	.L2936
	.quad	.L2937
	.quad	.L2938
	.quad	.L2939
	.quad	.L2940
	.quad	.L2941
	.quad	.L2942
	.quad	.L2943
	.quad	.L2944
	.quad	.L2945
	.quad	.L2946
	.quad	.L2947
	.quad	.L2948
	.quad	.L2949
	.quad	.L2950
	.quad	.L2951
	.quad	.L2952
	.quad	.L2953
	.quad	.L2954
	.quad	.L2926
	.quad	.L2955
	.quad	.L2956
	.quad	.L2957
	.quad	.L2958
	.quad	.L2959
	.quad	.L2960
	.quad	.L2961
	.quad	.L2962
	.quad	.L2963
	.quad	.L2964
	.quad	.L2965
	.quad	.L2966
	.quad	.L2967
	.quad	.L2968
	.quad	.L2969
	.quad	.L2970
	.quad	.L2971
	.quad	.L2972
	.quad	.L2973
	.quad	.L2974
	.quad	.L2975
	.quad	.L2976
	.quad	.L2977
	.quad	.L2978
	.quad	.L2979
	.quad	.L2980
	.quad	.L2981
	.quad	.L2982
	.quad	.L2983
	.quad	.L2984
	.quad	.L2985
	.quad	.L2986
	.quad	.L2987
	.quad	.L2988
	.quad	.L2989
	.quad	.L2990
	.quad	.L2991
	.quad	.L2992
	.quad	.L2993
	.quad	.L2994
	.quad	.L2995
	.quad	.L2996
	.quad	.L2997
	.quad	.L2998
	.quad	.L2999
	.quad	.L3000
	.quad	.L3001
	.quad	.L3002
	.quad	.L3003
	.quad	.L3004
	.quad	.L3005
	.quad	.L3006
	.quad	.L3007
	.quad	.L3008
	.quad	.L3009
	.quad	.L3010
	.quad	.L3011
	.quad	.L3012
	.quad	.L3013
	.quad	.L3014
	.quad	.L3015
	.quad	.L3016
	.quad	.L3017
	.quad	.L3018
	.quad	.L3019
	.quad	.L3020
	.quad	.L3021
	.quad	.L3022
	.quad	.L3023
	.quad	.L3024
	.quad	.L3025
	.quad	.L3026
	.quad	.L3027
	.quad	.L3028
	.quad	.L3029
	.quad	.L3030
	.quad	.L3031
	.quad	.L3032
	.quad	.L3033
	.quad	.L3034
	.quad	.L3035
	.quad	.L3036
	.quad	.L3037
	.quad	.L3038
	.quad	.L3039
	.quad	.L3040
	.quad	.L3041
	.quad	.L3042
	.quad	.L3043
	.quad	.L3044
	.quad	.L3045
	.quad	.L3046
	.quad	.L3047
	.quad	.L3048
	.quad	.L3049
	.quad	.L3050
	.quad	.L3051
	.quad	.L3052
	.quad	.L3053
	.quad	.L3054
	.quad	.L3055
	.quad	.L3056
	.quad	.L3057
	.quad	.L3058
	.quad	.L3059
	.quad	.L3060
	.quad	.L3061
	.quad	.L3062
	.quad	.L3063
	.quad	.L3064
	.quad	.L3065
	.quad	.L3066
	.quad	.L3067
	.quad	.L3068
	.quad	.L3069
	.quad	.L3070
	.quad	.L3071
	.quad	.L3072
	.quad	.L3073
	.quad	.L3074
	.quad	.L3075
	.quad	.L3076
	.quad	.L3077
	.quad	.L3078
	.quad	.L3079
	.quad	.L3080
	.quad	.L3081
	.quad	.L3082
	.quad	.L3083
	.quad	.L3084
	.quad	.L3085
	.quad	.L3086
	.quad	.L3087
	.quad	.L3088
	.quad	.L3089
	.quad	.L3090
	.quad	.L3091
	.quad	.L3092
	.quad	.L3093
	.quad	.L3094
	.quad	.L3095
	.quad	.L3096
	.quad	.L3097
	.quad	.L3098
	.quad	.L3099
	.quad	.L3100
	.quad	.L3101
	.quad	.L3102
	.quad	.L3103
	.quad	.L3104
	.quad	.L3105
	.quad	.L3106
	.quad	.L3107
	.quad	.L3108
	.quad	.L3109
	.quad	.L3110
	.quad	.L3111
	.quad	.L3112
	.quad	.L3113
	.quad	.L3114
	.quad	.L3115
	.quad	.L3116
	.quad	.L3117
	.quad	.L3118
	.quad	.L3119
	.quad	.L3120
	.quad	.L3121
	.quad	.L3122
	.quad	.L3123
	.quad	.L3124
	.quad	.L3125
	.quad	.L3126
	.quad	.L3127
	.quad	.L3128
	.quad	.L3129
	.quad	.L3130
	.quad	.L3131
	.quad	.L3132
	.quad	.L3133
	.quad	.L3134
	.quad	.L3135
	.quad	.L3136
	.quad	.L3137
	.quad	.L3138
	.quad	.L3139
	.quad	.L3140
	.quad	.L3141
	.quad	.L3142
	.quad	.L3143
	.quad	.L3144
	.quad	.L3145
	.quad	.L3146
	.quad	.L3147
	.quad	.L3148
	.quad	.L3149
	.quad	.L3150
	.quad	.L3151
	.quad	.L3152
	.quad	.L3153
	.quad	.L3154
	.quad	.L3155
	.quad	.L3156
	.quad	.L3157
	.quad	.L3158
	.quad	.L3159
	.quad	.L3160
	.quad	.L3161
	.quad	.L3162
	.quad	.L3163
	.quad	.L3164
	.quad	.L3165
	.quad	.L3166
	.quad	.L3167
	.quad	.L3168
	.quad	.L3169
	.quad	.L3170
	.quad	.L3171
	.quad	.L3172
	.quad	.L3173
	.quad	.L3174
	.quad	.L3175
	.quad	.L3176
	.quad	.L3177
	.quad	.L3178
	.quad	.L3179
	.quad	.L3180
	.quad	.L3181
	.quad	.L3182
	.align 32
	.type	tmp$2877.11, @object
	.size	tmp$2877.11, 184
tmp$2877.11:
	.quad	.L2900
	.quad	.L2901
	.quad	.L2902
	.quad	.L2903
	.quad	.L2904
	.quad	.L2905
	.quad	.L2906
	.quad	.L2907
	.quad	.L2908
	.quad	.L2909
	.quad	.L2910
	.quad	.L2911
	.quad	.L2912
	.quad	.L2913
	.quad	.L2914
	.quad	.L2915
	.quad	.L2916
	.quad	.L2917
	.quad	.L2918
	.quad	.L2919
	.quad	.L2920
	.quad	.L2921
	.quad	.L2922
	.align 32
	.type	tmp$2876.12, @object
	.size	tmp$2876.12, 88
tmp$2876.12:
	.quad	.L2875
	.quad	.L2876
	.quad	.L2877
	.quad	.L2878
	.quad	.L2879
	.quad	.L2880
	.quad	.L2881
	.quad	.L2882
	.quad	.L2883
	.quad	.L2884
	.quad	.L2885
	.align 32
	.type	tmp$2875.13, @object
	.size	tmp$2875.13, 2048
tmp$2875.13:
	.quad	.L2615
	.quad	.L2616
	.quad	.L2617
	.quad	.L2618
	.quad	.L2619
	.quad	.L2620
	.quad	.L2621
	.quad	.L2622
	.quad	.L2623
	.quad	.L2624
	.quad	.L2625
	.quad	.L2626
	.quad	.L2627
	.quad	.L2628
	.quad	.L2629
	.quad	.L2630
	.quad	.L2631
	.quad	.L2632
	.quad	.L2633
	.quad	.L2634
	.quad	.L2635
	.quad	.L2636
	.quad	.L2637
	.quad	.L2638
	.quad	.L2639
	.quad	.L2640
	.quad	.L2641
	.quad	.L2642
	.quad	.L2643
	.quad	.L2644
	.quad	.L2645
	.quad	.L2646
	.quad	.L2647
	.quad	.L2648
	.quad	.L2649
	.quad	.L2650
	.quad	.L2651
	.quad	.L2652
	.quad	.L2653
	.quad	.L2654
	.quad	.L2655
	.quad	.L2656
	.quad	.L2657
	.quad	.L2658
	.quad	.L2659
	.quad	.L2660
	.quad	.L2661
	.quad	.L2662
	.quad	.L2663
	.quad	.L2664
	.quad	.L2665
	.quad	.L2666
	.quad	.L2667
	.quad	.L2668
	.quad	.L2669
	.quad	.L2670
	.quad	.L2671
	.quad	.L2672
	.quad	.L2673
	.quad	.L2674
	.quad	.L2675
	.quad	.L2676
	.quad	.L2677
	.quad	.L2678
	.quad	.L2679
	.quad	.L2680
	.quad	.L2681
	.quad	.L2682
	.quad	.L2683
	.quad	.L2684
	.quad	.L2685
	.quad	.L2686
	.quad	.L2687
	.quad	.L2688
	.quad	.L2689
	.quad	.L2690
	.quad	.L2691
	.quad	.L2692
	.quad	.L2693
	.quad	.L2694
	.quad	.L2695
	.quad	.L2696
	.quad	.L2697
	.quad	.L2698
	.quad	.L2699
	.quad	.L2700
	.quad	.L2701
	.quad	.L2702
	.quad	.L2703
	.quad	.L2704
	.quad	.L2705
	.quad	.L2706
	.quad	.L2707
	.quad	.L2708
	.quad	.L2709
	.quad	.L2710
	.quad	.L2711
	.quad	.L2712
	.quad	.L2713
	.quad	.L2714
	.quad	.L2715
	.quad	.L2716
	.quad	.L2717
	.quad	.L2718
	.quad	.L2719
	.quad	.L2720
	.quad	.L2721
	.quad	.L2722
	.quad	.L2723
	.quad	.L2724
	.quad	.L2725
	.quad	.L2726
	.quad	.L2727
	.quad	.L2728
	.quad	.L2729
	.quad	.L2730
	.quad	.L2731
	.quad	.L2732
	.quad	.L2733
	.quad	.L2734
	.quad	.L2735
	.quad	.L2736
	.quad	.L2737
	.quad	.L2738
	.quad	.L2739
	.quad	.L2740
	.quad	.L2741
	.quad	.L2742
	.quad	.L2743
	.quad	.L2744
	.quad	.L2745
	.quad	.L2746
	.quad	.L2747
	.quad	.L2748
	.quad	.L2749
	.quad	.L2750
	.quad	.L2751
	.quad	.L2752
	.quad	.L2753
	.quad	.L2754
	.quad	.L2755
	.quad	.L2756
	.quad	.L2757
	.quad	.L2758
	.quad	.L2759
	.quad	.L2760
	.quad	.L2761
	.quad	.L2762
	.quad	.L2763
	.quad	.L2764
	.quad	.L2765
	.quad	.L2766
	.quad	.L2767
	.quad	.L2768
	.quad	.L2769
	.quad	.L2770
	.quad	.L2771
	.quad	.L2772
	.quad	.L2773
	.quad	.L2774
	.quad	.L2775
	.quad	.L2776
	.quad	.L2777
	.quad	.L2778
	.quad	.L2779
	.quad	.L2780
	.quad	.L2781
	.quad	.L2782
	.quad	.L2783
	.quad	.L2784
	.quad	.L2785
	.quad	.L2786
	.quad	.L2787
	.quad	.L2788
	.quad	.L2789
	.quad	.L2790
	.quad	.L2791
	.quad	.L2792
	.quad	.L2793
	.quad	.L2794
	.quad	.L2795
	.quad	.L2796
	.quad	.L2797
	.quad	.L2798
	.quad	.L2799
	.quad	.L2800
	.quad	.L2801
	.quad	.L2802
	.quad	.L2803
	.quad	.L2804
	.quad	.L2805
	.quad	.L2806
	.quad	.L2807
	.quad	.L2808
	.quad	.L2809
	.quad	.L2810
	.quad	.L2811
	.quad	.L2812
	.quad	.L2813
	.quad	.L2814
	.quad	.L2815
	.quad	.L2816
	.quad	.L2817
	.quad	.L2818
	.quad	.L2819
	.quad	.L2820
	.quad	.L2821
	.quad	.L2822
	.quad	.L2823
	.quad	.L2824
	.quad	.L2825
	.quad	.L2826
	.quad	.L2827
	.quad	.L2828
	.quad	.L2829
	.quad	.L2830
	.quad	.L2831
	.quad	.L2832
	.quad	.L2833
	.quad	.L2834
	.quad	.L2835
	.quad	.L2836
	.quad	.L2837
	.quad	.L2838
	.quad	.L2839
	.quad	.L2840
	.quad	.L2841
	.quad	.L2842
	.quad	.L2843
	.quad	.L2844
	.quad	.L2845
	.quad	.L2846
	.quad	.L2847
	.quad	.L2848
	.quad	.L2849
	.quad	.L2850
	.quad	.L2851
	.quad	.L2852
	.quad	.L2853
	.quad	.L2854
	.quad	.L2855
	.quad	.L2856
	.quad	.L2857
	.quad	.L2858
	.quad	.L2859
	.quad	.L2860
	.quad	.L2861
	.quad	.L2862
	.quad	.L2863
	.quad	.L2864
	.quad	.L2865
	.quad	.L2866
	.quad	.L2867
	.quad	.L2868
	.quad	.L2869
	.quad	.L2870
	.align 32
	.type	tmp$2874.14, @object
	.size	tmp$2874.14, 2048
tmp$2874.14:
	.quad	.L2354
	.quad	.L2355
	.quad	.L2356
	.quad	.L2357
	.quad	.L2358
	.quad	.L2359
	.quad	.L2360
	.quad	.L2361
	.quad	.L2362
	.quad	.L2363
	.quad	.L2364
	.quad	.L2365
	.quad	.L2366
	.quad	.L2367
	.quad	.L2368
	.quad	.L2369
	.quad	.L2370
	.quad	.L2371
	.quad	.L2372
	.quad	.L2373
	.quad	.L2374
	.quad	.L2375
	.quad	.L2376
	.quad	.L2377
	.quad	.L2378
	.quad	.L2379
	.quad	.L2380
	.quad	.L2381
	.quad	.L2382
	.quad	.L2383
	.quad	.L2384
	.quad	.L2385
	.quad	.L2386
	.quad	.L2387
	.quad	.L2388
	.quad	.L2389
	.quad	.L2390
	.quad	.L2391
	.quad	.L2392
	.quad	.L2393
	.quad	.L2394
	.quad	.L2395
	.quad	.L2396
	.quad	.L2397
	.quad	.L2398
	.quad	.L2399
	.quad	.L2400
	.quad	.L2401
	.quad	.L2402
	.quad	.L2403
	.quad	.L2404
	.quad	.L2405
	.quad	.L2406
	.quad	.L2407
	.quad	.L2408
	.quad	.L2409
	.quad	.L2410
	.quad	.L2411
	.quad	.L2412
	.quad	.L2413
	.quad	.L2414
	.quad	.L2415
	.quad	.L2416
	.quad	.L2417
	.quad	.L2418
	.quad	.L2419
	.quad	.L2420
	.quad	.L2421
	.quad	.L2422
	.quad	.L2423
	.quad	.L2424
	.quad	.L2425
	.quad	.L2426
	.quad	.L2427
	.quad	.L2428
	.quad	.L2429
	.quad	.L2430
	.quad	.L2431
	.quad	.L2432
	.quad	.L2433
	.quad	.L2434
	.quad	.L2435
	.quad	.L2436
	.quad	.L2437
	.quad	.L2438
	.quad	.L2439
	.quad	.L2440
	.quad	.L2441
	.quad	.L2442
	.quad	.L2443
	.quad	.L2444
	.quad	.L2445
	.quad	.L2446
	.quad	.L2447
	.quad	.L2448
	.quad	.L2449
	.quad	.L2450
	.quad	.L2451
	.quad	.L2452
	.quad	.L2453
	.quad	.L2454
	.quad	.L2455
	.quad	.L2456
	.quad	.L2457
	.quad	.L2458
	.quad	.L2459
	.quad	.L2460
	.quad	.L2461
	.quad	.L2462
	.quad	.L2463
	.quad	.L2464
	.quad	.L2465
	.quad	.L2466
	.quad	.L2467
	.quad	.L2468
	.quad	.L2469
	.quad	.L2470
	.quad	.L2471
	.quad	.L2472
	.quad	.L2473
	.quad	.L2474
	.quad	.L2475
	.quad	.L2476
	.quad	.L2477
	.quad	.L2478
	.quad	.L2479
	.quad	.L2480
	.quad	.L2481
	.quad	.L2482
	.quad	.L2483
	.quad	.L2484
	.quad	.L2485
	.quad	.L2486
	.quad	.L2487
	.quad	.L2488
	.quad	.L2489
	.quad	.L2490
	.quad	.L2491
	.quad	.L2492
	.quad	.L2493
	.quad	.L2494
	.quad	.L2495
	.quad	.L2496
	.quad	.L2497
	.quad	.L2498
	.quad	.L2499
	.quad	.L2500
	.quad	.L2501
	.quad	.L2502
	.quad	.L2503
	.quad	.L2504
	.quad	.L2505
	.quad	.L2506
	.quad	.L2507
	.quad	.L2508
	.quad	.L2509
	.quad	.L2510
	.quad	.L2511
	.quad	.L2512
	.quad	.L2513
	.quad	.L2514
	.quad	.L2515
	.quad	.L2516
	.quad	.L2517
	.quad	.L2518
	.quad	.L2519
	.quad	.L2520
	.quad	.L2521
	.quad	.L2522
	.quad	.L2523
	.quad	.L2524
	.quad	.L2525
	.quad	.L2526
	.quad	.L2527
	.quad	.L2528
	.quad	.L2529
	.quad	.L2530
	.quad	.L2531
	.quad	.L2532
	.quad	.L2533
	.quad	.L2534
	.quad	.L2535
	.quad	.L2536
	.quad	.L2537
	.quad	.L2538
	.quad	.L2539
	.quad	.L2540
	.quad	.L2541
	.quad	.L2542
	.quad	.L2543
	.quad	.L2544
	.quad	.L2545
	.quad	.L2546
	.quad	.L2547
	.quad	.L2548
	.quad	.L2549
	.quad	.L2550
	.quad	.L2551
	.quad	.L2552
	.quad	.L2553
	.quad	.L2554
	.quad	.L2555
	.quad	.L2556
	.quad	.L2557
	.quad	.L2558
	.quad	.L2559
	.quad	.L2560
	.quad	.L2561
	.quad	.L2562
	.quad	.L2563
	.quad	.L2564
	.quad	.L2565
	.quad	.L2566
	.quad	.L2567
	.quad	.L2568
	.quad	.L2569
	.quad	.L2570
	.quad	.L2571
	.quad	.L2572
	.quad	.L2573
	.quad	.L2574
	.quad	.L2575
	.quad	.L2576
	.quad	.L2577
	.quad	.L2578
	.quad	.L2579
	.quad	.L2580
	.quad	.L2581
	.quad	.L2582
	.quad	.L2583
	.quad	.L2584
	.quad	.L2585
	.quad	.L2586
	.quad	.L2587
	.quad	.L2588
	.quad	.L2589
	.quad	.L2590
	.quad	.L2591
	.quad	.L2592
	.quad	.L2593
	.quad	.L2594
	.quad	.L2595
	.quad	.L2596
	.quad	.L2597
	.quad	.L2598
	.quad	.L2599
	.quad	.L2600
	.quad	.L2601
	.quad	.L2602
	.quad	.L2603
	.quad	.L2604
	.quad	.L2605
	.quad	.L2606
	.quad	.L2607
	.quad	.L2608
	.quad	.L2609
	.align 32
	.type	tmp$2873.15, @object
	.size	tmp$2873.15, 1928
tmp$2873.15:
	.quad	.L1172
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1173
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1174
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1175
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1176
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1177
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1178
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1179
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1180
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1181
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1182
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1183
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1184
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1185
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1186
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1170
	.quad	.L1187
	.comm	MSG$,24,16
	.comm	RENDER$,8,8
	.comm	PITCH$,8,8
	.comm	IMGDATA$,8,8
	.comm	SCR_POS$,8,8
	.comm	SCR_H$,8,8
	.comm	SCR_W$,8,8
	.comm	COMPILER$,24,16
	.comm	PSCRN$,8,8
	.comm	RASTER$,8,8
	.comm	FGIMAGE$,8,8
	.comm	BGIMAGE$,8,8
	.comm	CNT$,8,8
	.comm	STR_LEN$,8,8
	.comm	SYS_OFFSET$,8,8
	.globl	FILENAME$
	.bss
	.align 16
	.type	FILENAME$, @object
	.size	FILENAME$, 24
FILENAME$:
	.zero	24
	.globl	STRCODE$
	.align 16
	.type	STRCODE$, @object
	.size	STRCODE$, 24
STRCODE$:
	.zero	24
	.globl	IMAGE$
	.align 8
	.type	IMAGE$, @object
	.size	IMAGE$, 8
IMAGE$:
	.zero	8
	.globl	OFFSET$
	.align 8
	.type	OFFSET$, @object
	.size	OFFSET$, 8
OFFSET$:
	.zero	8
	.globl	SWCH$
	.align 8
	.type	SWCH$, @object
	.size	SWCH$, 8
SWCH$:
	.zero	8
	.section	.rodata.str1.1
.LC2860:
	.string	"BRK"
	.section	.data.rel.local,"aw"
	.align 32
	.type	label$6001, @object
	.size	label$6001, 70
label$6001:
	.value	1
	.quad	.LC179
	.value	3
	.quad	.LC2860
	.value	1
	.quad	.LC180
	.value	1
	.quad	.LC186
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_BRK
	.value	-1
	.quad	label$6388
	.section	.rodata.str1.1
.LC2861:
	.string	"ORA"
.LC2862:
	.string	"10"
	.section	.data.rel.local
	.align 32
	.type	label$6388, @object
	.size	label$6388, 70
label$6388:
	.value	1
	.quad	.LC180
	.value	3
	.quad	.LC2861
	.value	2
	.quad	.LC2862
	.value	1
	.quad	.LC185
	.value	1
	.quad	.LC181
	.value	-2
	.quad	INS_ORA
	.value	-1
	.quad	label$6390
	.section	.rodata.str1.1
.LC2863:
	.string	"R32"
	.section	.data.rel.local
	.align 32
	.type	label$6390, @object
	.size	label$6390, 70
label$6390:
	.value	1
	.quad	.LC181
	.value	3
	.quad	.LC2863
	.value	1
	.quad	.LC182
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_R32
	.value	-1
	.quad	label$6392
	.section	.rodata.str1.1
.LC2864:
	.string	"W32"
	.section	.data.rel.local
	.align 32
	.type	label$6392, @object
	.size	label$6392, 70
label$6392:
	.value	1
	.quad	.LC182
	.value	3
	.quad	.LC2864
	.value	1
	.quad	.LC182
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_W32
	.value	-1
	.quad	label$6394
	.section	.rodata.str1.1
.LC2865:
	.string	"R64"
	.section	.data.rel.local
	.align 32
	.type	label$6394, @object
	.size	label$6394, 70
label$6394:
	.value	1
	.quad	.LC183
	.value	3
	.quad	.LC2865
	.value	1
	.quad	.LC182
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_R64
	.value	-1
	.quad	label$6396
	.align 32
	.type	label$6396, @object
	.size	label$6396, 70
label$6396:
	.value	1
	.quad	.LC184
	.value	3
	.quad	.LC2861
	.value	1
	.quad	.LC183
	.value	1
	.quad	.LC182
	.value	1
	.quad	.LC181
	.value	-2
	.quad	INS_ORA
	.value	-1
	.quad	label$6398
	.section	.rodata.str1.1
.LC2866:
	.string	"ASL"
	.section	.data.rel.local
	.align 32
	.type	label$6398, @object
	.size	label$6398, 70
label$6398:
	.value	1
	.quad	.LC185
	.value	3
	.quad	.LC2866
	.value	1
	.quad	.LC183
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_ASL
	.value	-1
	.quad	label$6400
	.section	.rodata.str1.1
.LC2867:
	.string	"W64"
	.section	.data.rel.local
	.align 32
	.type	label$6400, @object
	.size	label$6400, 70
label$6400:
	.value	1
	.quad	.LC186
	.value	3
	.quad	.LC2867
	.value	1
	.quad	.LC182
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_W64
	.value	-1
	.quad	label$6402
	.section	.rodata.str1.1
.LC2868:
	.string	"PHP"
	.section	.data.rel.local
	.align 32
	.type	label$6402, @object
	.size	label$6402, 70
label$6402:
	.value	1
	.quad	.LC187
	.value	3
	.quad	.LC2868
	.value	1
	.quad	.LC180
	.value	1
	.quad	.LC182
	.value	1
	.quad	.LC180
	.value	-2
	.quad	INS_PHP
	.value	-1
	.quad	label$6404
	.align 32
	.type	label$6404, @object
	.size	label$6404, 70
label$6404:
	.value	1
	.quad	.LC188
	.value	3
	.quad	.LC2861
	.value	1
	.quad	.LC181
	.value	1
	.quad	.LC181
	.value	1
	.quad	.LC181
	.value	-2
	.quad	INS_ORA
	.value	-1
	.quad	label$6406
	.align 32
	.type	label$6406, @object
	.size	label$6406, 70
label$6406:
	.value	2
	.quad	.LC2862
	.value	3
	.quad	.LC2866
	.value	1
	.quad	.LC180
	.value	1
	.quad	.LC181
	.value	1
	.quad	.LC180
	.value	-2
	.quad	INS_ASLA
	.value	-1
	.quad	label$6408
	.section	.rodata.str1.1
.LC2869:
	.string	"11"
.LC2870:
	.string	"***"
	.section	.data.rel.local
	.align 32
	.type	label$6408, @object
	.size	label$6408, 70
label$6408:
	.value	2
	.quad	.LC2869
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6410
	.section	.rodata.str1.1
.LC2871:
	.string	"12"
	.section	.data.rel.local
	.align 32
	.type	label$6410, @object
	.size	label$6410, 70
label$6410:
	.value	2
	.quad	.LC2871
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6412
	.section	.rodata.str1.1
.LC2872:
	.string	"13"
	.section	.data.rel.local
	.align 32
	.type	label$6412, @object
	.size	label$6412, 70
label$6412:
	.value	2
	.quad	.LC2872
	.value	3
	.quad	.LC2861
	.value	1
	.quad	.LC182
	.value	1
	.quad	.LC183
	.value	1
	.quad	.LC182
	.value	-2
	.quad	INS_ORA
	.value	-1
	.quad	label$6414
	.section	.rodata.str1.1
.LC2873:
	.string	"14"
	.section	.data.rel.local
	.align 32
	.type	label$6414, @object
	.size	label$6414, 70
label$6414:
	.value	2
	.quad	.LC2873
	.value	3
	.quad	.LC2866
	.value	1
	.quad	.LC182
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_ASL
	.value	-1
	.quad	label$6416
	.section	.rodata.str1.1
.LC2874:
	.string	"15"
	.section	.data.rel.local
	.align 32
	.type	label$6416, @object
	.size	label$6416, 70
label$6416:
	.value	2
	.quad	.LC2874
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6418
	.section	.rodata.str1.1
.LC2875:
	.string	"16"
.LC2876:
	.string	"BPL"
	.section	.data.rel.local
	.align 32
	.type	label$6418, @object
	.size	label$6418, 70
label$6418:
	.value	2
	.quad	.LC2875
	.value	3
	.quad	.LC2876
	.value	1
	.quad	.LC188
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_BPL
	.value	-1
	.quad	label$6420
	.section	.rodata.str1.1
.LC2877:
	.string	"17"
	.section	.data.rel.local
	.align 32
	.type	label$6420, @object
	.size	label$6420, 70
label$6420:
	.value	2
	.quad	.LC2877
	.value	3
	.quad	.LC2861
	.value	2
	.quad	.LC2869
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_ORA
	.value	-1
	.quad	label$6422
	.section	.rodata.str1.1
.LC2878:
	.string	"18"
	.section	.data.rel.local
	.align 32
	.type	label$6422, @object
	.size	label$6422, 70
label$6422:
	.value	2
	.quad	.LC2878
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6424
	.section	.rodata.str1.1
.LC2879:
	.string	"19"
	.section	.data.rel.local
	.align 32
	.type	label$6424, @object
	.size	label$6424, 70
label$6424:
	.value	2
	.quad	.LC2879
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6426
	.section	.rodata.str1.1
.LC2880:
	.string	"20"
	.section	.data.rel.local
	.align 32
	.type	label$6426, @object
	.size	label$6426, 70
label$6426:
	.value	2
	.quad	.LC2880
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6428
	.section	.rodata.str1.1
.LC2881:
	.string	"21"
	.section	.data.rel.local
	.align 32
	.type	label$6428, @object
	.size	label$6428, 70
label$6428:
	.value	2
	.quad	.LC2881
	.value	3
	.quad	.LC2861
	.value	1
	.quad	.LC184
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_ORA
	.value	-1
	.quad	label$6430
	.section	.rodata.str1.1
.LC2882:
	.string	"22"
	.section	.data.rel.local
	.align 32
	.type	label$6430, @object
	.size	label$6430, 70
label$6430:
	.value	2
	.quad	.LC2882
	.value	3
	.quad	.LC2866
	.value	1
	.quad	.LC184
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_ASL
	.value	-1
	.quad	label$6432
	.section	.rodata.str1.1
.LC2883:
	.string	"23"
	.section	.data.rel.local
	.align 32
	.type	label$6432, @object
	.size	label$6432, 70
label$6432:
	.value	2
	.quad	.LC2883
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6434
	.section	.rodata.str1.1
.LC2884:
	.string	"24"
.LC2885:
	.string	"CLC"
	.section	.data.rel.local
	.align 32
	.type	label$6434, @object
	.size	label$6434, 70
label$6434:
	.value	2
	.quad	.LC2884
	.value	3
	.quad	.LC2885
	.value	1
	.quad	.LC180
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_CLC
	.value	-1
	.quad	label$6436
	.section	.rodata.str1.1
.LC2886:
	.string	"25"
	.section	.data.rel.local
	.align 32
	.type	label$6436, @object
	.size	label$6436, 70
label$6436:
	.value	2
	.quad	.LC2886
	.value	3
	.quad	.LC2861
	.value	1
	.quad	.LC187
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_ORA
	.value	-1
	.quad	label$6438
	.section	.rodata.str1.1
.LC2887:
	.string	"26"
	.section	.data.rel.local
	.align 32
	.type	label$6438, @object
	.size	label$6438, 70
label$6438:
	.value	2
	.quad	.LC2887
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6440
	.section	.rodata.str1.1
.LC2888:
	.string	"27"
	.section	.data.rel.local
	.align 32
	.type	label$6440, @object
	.size	label$6440, 70
label$6440:
	.value	2
	.quad	.LC2888
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6442
	.section	.rodata.str1.1
.LC2889:
	.string	"28"
	.section	.data.rel.local
	.align 32
	.type	label$6442, @object
	.size	label$6442, 70
label$6442:
	.value	2
	.quad	.LC2889
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6444
	.section	.rodata.str1.1
.LC2890:
	.string	"29"
	.section	.data.rel.local
	.align 32
	.type	label$6444, @object
	.size	label$6444, 70
label$6444:
	.value	2
	.quad	.LC2890
	.value	3
	.quad	.LC2861
	.value	1
	.quad	.LC186
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_ORA
	.value	-1
	.quad	label$6446
	.section	.rodata.str1.1
.LC2891:
	.string	"30"
	.section	.data.rel.local
	.align 32
	.type	label$6446, @object
	.size	label$6446, 70
label$6446:
	.value	2
	.quad	.LC2891
	.value	3
	.quad	.LC2866
	.value	1
	.quad	.LC186
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_ASL
	.value	-1
	.quad	label$6448
	.section	.rodata.str1.1
.LC2892:
	.string	"31"
	.section	.data.rel.local
	.align 32
	.type	label$6448, @object
	.size	label$6448, 70
label$6448:
	.value	2
	.quad	.LC2892
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6450
	.section	.rodata.str1.1
.LC2893:
	.string	"32"
.LC2894:
	.string	"JSR"
	.section	.data.rel.local
	.align 32
	.type	label$6450, @object
	.size	label$6450, 70
label$6450:
	.value	2
	.quad	.LC2893
	.value	3
	.quad	.LC2894
	.value	1
	.quad	.LC182
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_JSR
	.value	-1
	.quad	label$6452
	.section	.rodata.str1.1
.LC2895:
	.string	"33"
.LC2896:
	.string	"AND"
	.section	.data.rel.local
	.align 32
	.type	label$6452, @object
	.size	label$6452, 70
label$6452:
	.value	2
	.quad	.LC2895
	.value	3
	.quad	.LC2896
	.value	2
	.quad	.LC2862
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_AND
	.value	-1
	.quad	label$6454
	.section	.rodata.str1.1
.LC2897:
	.string	"34"
	.section	.data.rel.local
	.align 32
	.type	label$6454, @object
	.size	label$6454, 70
label$6454:
	.value	2
	.quad	.LC2897
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6456
	.section	.rodata.str1.1
.LC2898:
	.string	"35"
	.section	.data.rel.local
	.align 32
	.type	label$6456, @object
	.size	label$6456, 70
label$6456:
	.value	2
	.quad	.LC2898
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6458
	.section	.rodata.str1.1
.LC2899:
	.string	"36"
.LC2900:
	.string	"BIT"
	.section	.data.rel.local
	.align 32
	.type	label$6458, @object
	.size	label$6458, 70
label$6458:
	.value	2
	.quad	.LC2899
	.value	3
	.quad	.LC2900
	.value	1
	.quad	.LC183
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_BIT
	.value	-1
	.quad	label$6460
	.section	.rodata.str1.1
.LC2901:
	.string	"37"
	.section	.data.rel.local
	.align 32
	.type	label$6460, @object
	.size	label$6460, 70
label$6460:
	.value	2
	.quad	.LC2901
	.value	3
	.quad	.LC2896
	.value	1
	.quad	.LC183
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_AND
	.value	-1
	.quad	label$6462
	.section	.rodata.str1.1
.LC2902:
	.string	"38"
.LC2903:
	.string	"ROL"
	.section	.data.rel.local
	.align 32
	.type	label$6462, @object
	.size	label$6462, 70
label$6462:
	.value	2
	.quad	.LC2902
	.value	3
	.quad	.LC2903
	.value	1
	.quad	.LC183
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_ROL
	.value	-1
	.quad	label$6464
	.section	.rodata.str1.1
.LC2904:
	.string	"39"
	.section	.data.rel.local
	.align 32
	.type	label$6464, @object
	.size	label$6464, 70
label$6464:
	.value	2
	.quad	.LC2904
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6466
	.section	.rodata.str1.1
.LC2905:
	.string	"40"
.LC2906:
	.string	"PLP"
	.section	.data.rel.local
	.align 32
	.type	label$6466, @object
	.size	label$6466, 70
label$6466:
	.value	2
	.quad	.LC2905
	.value	3
	.quad	.LC2906
	.value	1
	.quad	.LC180
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_PLP
	.value	-1
	.quad	label$6468
	.section	.rodata.str1.1
.LC2907:
	.string	"41"
	.section	.data.rel.local
	.align 32
	.type	label$6468, @object
	.size	label$6468, 70
label$6468:
	.value	2
	.quad	.LC2907
	.value	3
	.quad	.LC2896
	.value	1
	.quad	.LC181
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_AND
	.value	-1
	.quad	label$6470
	.section	.rodata.str1.1
.LC2908:
	.string	"42"
	.section	.data.rel.local
	.align 32
	.type	label$6470, @object
	.size	label$6470, 70
label$6470:
	.value	2
	.quad	.LC2908
	.value	3
	.quad	.LC2903
	.value	1
	.quad	.LC180
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_ROLA
	.value	-1
	.quad	label$6472
	.section	.rodata.str1.1
.LC2909:
	.string	"43"
	.section	.data.rel.local
	.align 32
	.type	label$6472, @object
	.size	label$6472, 70
label$6472:
	.value	2
	.quad	.LC2909
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6474
	.section	.rodata.str1.1
.LC2910:
	.string	"44"
	.section	.data.rel.local
	.align 32
	.type	label$6474, @object
	.size	label$6474, 70
label$6474:
	.value	2
	.quad	.LC2910
	.value	3
	.quad	.LC2900
	.value	1
	.quad	.LC182
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_BIT
	.value	-1
	.quad	label$6476
	.section	.rodata.str1.1
.LC2911:
	.string	"45"
	.section	.data.rel.local
	.align 32
	.type	label$6476, @object
	.size	label$6476, 70
label$6476:
	.value	2
	.quad	.LC2911
	.value	3
	.quad	.LC2896
	.value	1
	.quad	.LC182
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_AND
	.value	-1
	.quad	label$6478
	.section	.rodata.str1.1
.LC2912:
	.string	"46"
	.section	.data.rel.local
	.align 32
	.type	label$6478, @object
	.size	label$6478, 70
label$6478:
	.value	2
	.quad	.LC2912
	.value	3
	.quad	.LC2903
	.value	1
	.quad	.LC182
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_ROL
	.value	-1
	.quad	label$6480
	.section	.rodata.str1.1
.LC2913:
	.string	"47"
	.section	.data.rel.local
	.align 32
	.type	label$6480, @object
	.size	label$6480, 70
label$6480:
	.value	2
	.quad	.LC2913
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6482
	.section	.rodata.str1.1
.LC2914:
	.string	"48"
.LC2915:
	.string	"BMI"
	.section	.data.rel.local
	.align 32
	.type	label$6482, @object
	.size	label$6482, 70
label$6482:
	.value	2
	.quad	.LC2914
	.value	3
	.quad	.LC2915
	.value	1
	.quad	.LC188
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_BMI
	.value	-1
	.quad	label$6484
	.section	.rodata.str1.1
.LC2916:
	.string	"49"
	.section	.data.rel.local
	.align 32
	.type	label$6484, @object
	.size	label$6484, 70
label$6484:
	.value	2
	.quad	.LC2916
	.value	3
	.quad	.LC2896
	.value	2
	.quad	.LC2869
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_AND
	.value	-1
	.quad	label$6486
	.section	.rodata.str1.1
.LC2917:
	.string	"50"
	.section	.data.rel.local
	.align 32
	.type	label$6486, @object
	.size	label$6486, 70
label$6486:
	.value	2
	.quad	.LC2917
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6488
	.section	.rodata.str1.1
.LC2918:
	.string	"51"
	.section	.data.rel.local
	.align 32
	.type	label$6488, @object
	.size	label$6488, 70
label$6488:
	.value	2
	.quad	.LC2918
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6490
	.section	.rodata.str1.1
.LC2919:
	.string	"52"
	.section	.data.rel.local
	.align 32
	.type	label$6490, @object
	.size	label$6490, 70
label$6490:
	.value	2
	.quad	.LC2919
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6492
	.section	.rodata.str1.1
.LC2920:
	.string	"53"
	.section	.data.rel.local
	.align 32
	.type	label$6492, @object
	.size	label$6492, 70
label$6492:
	.value	2
	.quad	.LC2920
	.value	3
	.quad	.LC2896
	.value	1
	.quad	.LC184
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_AND
	.value	-1
	.quad	label$6494
	.section	.rodata.str1.1
.LC2921:
	.string	"54"
	.section	.data.rel.local
	.align 32
	.type	label$6494, @object
	.size	label$6494, 70
label$6494:
	.value	2
	.quad	.LC2921
	.value	3
	.quad	.LC2903
	.value	1
	.quad	.LC184
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_ROL
	.value	-1
	.quad	label$6496
	.section	.rodata.str1.1
.LC2922:
	.string	"55"
	.section	.data.rel.local
	.align 32
	.type	label$6496, @object
	.size	label$6496, 70
label$6496:
	.value	2
	.quad	.LC2922
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6498
	.section	.rodata.str1.1
.LC2923:
	.string	"56"
.LC2924:
	.string	"SEC"
	.section	.data.rel.local
	.align 32
	.type	label$6498, @object
	.size	label$6498, 70
label$6498:
	.value	2
	.quad	.LC2923
	.value	3
	.quad	.LC2924
	.value	1
	.quad	.LC180
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_SEC
	.value	-1
	.quad	label$6500
	.section	.rodata.str1.1
.LC2925:
	.string	"57"
	.section	.data.rel.local
	.align 32
	.type	label$6500, @object
	.size	label$6500, 70
label$6500:
	.value	2
	.quad	.LC2925
	.value	3
	.quad	.LC2896
	.value	1
	.quad	.LC187
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_AND
	.value	-1
	.quad	label$6502
	.section	.rodata.str1.1
.LC2926:
	.string	"58"
	.section	.data.rel.local
	.align 32
	.type	label$6502, @object
	.size	label$6502, 70
label$6502:
	.value	2
	.quad	.LC2926
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6504
	.section	.rodata.str1.1
.LC2927:
	.string	"59"
	.section	.data.rel.local
	.align 32
	.type	label$6504, @object
	.size	label$6504, 70
label$6504:
	.value	2
	.quad	.LC2927
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6506
	.section	.rodata.str1.1
.LC2928:
	.string	"60"
	.section	.data.rel.local
	.align 32
	.type	label$6506, @object
	.size	label$6506, 70
label$6506:
	.value	2
	.quad	.LC2928
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6508
	.section	.rodata.str1.1
.LC2929:
	.string	"61"
	.section	.data.rel.local
	.align 32
	.type	label$6508, @object
	.size	label$6508, 70
label$6508:
	.value	2
	.quad	.LC2929
	.value	3
	.quad	.LC2896
	.value	1
	.quad	.LC186
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_AND
	.value	-1
	.quad	label$6510
	.section	.rodata.str1.1
.LC2930:
	.string	"62"
	.section	.data.rel.local
	.align 32
	.type	label$6510, @object
	.size	label$6510, 70
label$6510:
	.value	2
	.quad	.LC2930
	.value	3
	.quad	.LC2903
	.value	1
	.quad	.LC186
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_ROL
	.value	-1
	.quad	label$6512
	.section	.rodata.str1.1
.LC2931:
	.string	"63"
	.section	.data.rel.local
	.align 32
	.type	label$6512, @object
	.size	label$6512, 70
label$6512:
	.value	2
	.quad	.LC2931
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6514
	.section	.rodata.str1.1
.LC2932:
	.string	"64"
.LC2933:
	.string	"RTI"
	.section	.data.rel.local
	.align 32
	.type	label$6514, @object
	.size	label$6514, 70
label$6514:
	.value	2
	.quad	.LC2932
	.value	3
	.quad	.LC2933
	.value	1
	.quad	.LC180
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_RTI
	.value	-1
	.quad	label$6516
	.section	.rodata.str1.1
.LC2934:
	.string	"65"
.LC2935:
	.string	"EOR"
	.section	.data.rel.local
	.align 32
	.type	label$6516, @object
	.size	label$6516, 70
label$6516:
	.value	2
	.quad	.LC2934
	.value	3
	.quad	.LC2935
	.value	2
	.quad	.LC2862
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_EOR
	.value	-1
	.quad	label$6518
	.section	.rodata.str1.1
.LC2936:
	.string	"66"
	.section	.data.rel.local
	.align 32
	.type	label$6518, @object
	.size	label$6518, 70
label$6518:
	.value	2
	.quad	.LC2936
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6520
	.section	.rodata.str1.1
.LC2937:
	.string	"67"
	.section	.data.rel.local
	.align 32
	.type	label$6520, @object
	.size	label$6520, 70
label$6520:
	.value	2
	.quad	.LC2937
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6522
	.section	.rodata.str1.1
.LC2938:
	.string	"68"
	.section	.data.rel.local
	.align 32
	.type	label$6522, @object
	.size	label$6522, 70
label$6522:
	.value	2
	.quad	.LC2938
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6524
	.section	.rodata.str1.1
.LC2939:
	.string	"69"
	.section	.data.rel.local
	.align 32
	.type	label$6524, @object
	.size	label$6524, 70
label$6524:
	.value	2
	.quad	.LC2939
	.value	3
	.quad	.LC2935
	.value	1
	.quad	.LC183
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_EOR
	.value	-1
	.quad	label$6526
	.section	.rodata.str1.1
.LC2940:
	.string	"70"
.LC2941:
	.string	"LSR"
	.section	.data.rel.local
	.align 32
	.type	label$6526, @object
	.size	label$6526, 70
label$6526:
	.value	2
	.quad	.LC2940
	.value	3
	.quad	.LC2941
	.value	1
	.quad	.LC183
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_LSR
	.value	-1
	.quad	label$6528
	.section	.rodata.str1.1
.LC2942:
	.string	"71"
	.section	.data.rel.local
	.align 32
	.type	label$6528, @object
	.size	label$6528, 70
label$6528:
	.value	2
	.quad	.LC2942
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6530
	.section	.rodata.str1.1
.LC2943:
	.string	"72"
.LC2944:
	.string	"PHA"
	.section	.data.rel.local
	.align 32
	.type	label$6530, @object
	.size	label$6530, 70
label$6530:
	.value	2
	.quad	.LC2943
	.value	3
	.quad	.LC2944
	.value	1
	.quad	.LC180
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_PHA
	.value	-1
	.quad	label$6532
	.section	.rodata.str1.1
.LC2945:
	.string	"73"
	.section	.data.rel.local
	.align 32
	.type	label$6532, @object
	.size	label$6532, 70
label$6532:
	.value	2
	.quad	.LC2945
	.value	3
	.quad	.LC2935
	.value	1
	.quad	.LC181
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_EOR
	.value	-1
	.quad	label$6534
	.section	.rodata.str1.1
.LC2946:
	.string	"74"
	.section	.data.rel.local
	.align 32
	.type	label$6534, @object
	.size	label$6534, 70
label$6534:
	.value	2
	.quad	.LC2946
	.value	3
	.quad	.LC2941
	.value	1
	.quad	.LC180
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_LSRA
	.value	-1
	.quad	label$6536
	.section	.rodata.str1.1
.LC2947:
	.string	"75"
	.section	.data.rel.local
	.align 32
	.type	label$6536, @object
	.size	label$6536, 70
label$6536:
	.value	2
	.quad	.LC2947
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6538
	.section	.rodata.str1.1
.LC2948:
	.string	"76"
.LC2949:
	.string	"JMP"
	.section	.data.rel.local
	.align 32
	.type	label$6538, @object
	.size	label$6538, 70
label$6538:
	.value	2
	.quad	.LC2948
	.value	3
	.quad	.LC2949
	.value	1
	.quad	.LC182
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_JMP
	.value	-1
	.quad	label$6540
	.section	.rodata.str1.1
.LC2950:
	.string	"77"
	.section	.data.rel.local
	.align 32
	.type	label$6540, @object
	.size	label$6540, 70
label$6540:
	.value	2
	.quad	.LC2950
	.value	3
	.quad	.LC2935
	.value	1
	.quad	.LC182
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_EOR
	.value	-1
	.quad	label$6542
	.section	.rodata.str1.1
.LC2951:
	.string	"78"
	.section	.data.rel.local
	.align 32
	.type	label$6542, @object
	.size	label$6542, 70
label$6542:
	.value	2
	.quad	.LC2951
	.value	3
	.quad	.LC2941
	.value	1
	.quad	.LC182
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_LSR
	.value	-1
	.quad	label$6544
	.section	.rodata.str1.1
.LC2952:
	.string	"79"
	.section	.data.rel.local
	.align 32
	.type	label$6544, @object
	.size	label$6544, 70
label$6544:
	.value	2
	.quad	.LC2952
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6546
	.section	.rodata.str1.1
.LC2953:
	.string	"80"
.LC2954:
	.string	"BVC"
	.section	.data.rel.local
	.align 32
	.type	label$6546, @object
	.size	label$6546, 70
label$6546:
	.value	2
	.quad	.LC2953
	.value	3
	.quad	.LC2954
	.value	1
	.quad	.LC188
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_BVC
	.value	-1
	.quad	label$6548
	.section	.rodata.str1.1
.LC2955:
	.string	"81"
	.section	.data.rel.local
	.align 32
	.type	label$6548, @object
	.size	label$6548, 70
label$6548:
	.value	2
	.quad	.LC2955
	.value	3
	.quad	.LC2935
	.value	2
	.quad	.LC2869
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_EOR
	.value	-1
	.quad	label$6550
	.section	.rodata.str1.1
.LC2956:
	.string	"82"
	.section	.data.rel.local
	.align 32
	.type	label$6550, @object
	.size	label$6550, 70
label$6550:
	.value	2
	.quad	.LC2956
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6552
	.section	.rodata.str1.1
.LC2957:
	.string	"83"
	.section	.data.rel.local
	.align 32
	.type	label$6552, @object
	.size	label$6552, 70
label$6552:
	.value	2
	.quad	.LC2957
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6554
	.section	.rodata.str1.1
.LC2958:
	.string	"84"
	.section	.data.rel.local
	.align 32
	.type	label$6554, @object
	.size	label$6554, 70
label$6554:
	.value	2
	.quad	.LC2958
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6556
	.section	.rodata.str1.1
.LC2959:
	.string	"85"
	.section	.data.rel.local
	.align 32
	.type	label$6556, @object
	.size	label$6556, 70
label$6556:
	.value	2
	.quad	.LC2959
	.value	3
	.quad	.LC2935
	.value	1
	.quad	.LC184
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_EOR
	.value	-1
	.quad	label$6558
	.section	.rodata.str1.1
.LC2960:
	.string	"86"
	.section	.data.rel.local
	.align 32
	.type	label$6558, @object
	.size	label$6558, 70
label$6558:
	.value	2
	.quad	.LC2960
	.value	3
	.quad	.LC2941
	.value	1
	.quad	.LC184
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_LSR
	.value	-1
	.quad	label$6560
	.section	.rodata.str1.1
.LC2961:
	.string	"87"
	.section	.data.rel.local
	.align 32
	.type	label$6560, @object
	.size	label$6560, 70
label$6560:
	.value	2
	.quad	.LC2961
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6562
	.section	.rodata.str1.1
.LC2962:
	.string	"88"
.LC2963:
	.string	"CLI"
	.section	.data.rel.local
	.align 32
	.type	label$6562, @object
	.size	label$6562, 70
label$6562:
	.value	2
	.quad	.LC2962
	.value	3
	.quad	.LC2963
	.value	1
	.quad	.LC180
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_CLI
	.value	-1
	.quad	label$6564
	.section	.rodata.str1.1
.LC2964:
	.string	"89"
	.section	.data.rel.local
	.align 32
	.type	label$6564, @object
	.size	label$6564, 70
label$6564:
	.value	2
	.quad	.LC2964
	.value	3
	.quad	.LC2935
	.value	1
	.quad	.LC187
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_EOR
	.value	-1
	.quad	label$6566
	.section	.rodata.str1.1
.LC2965:
	.string	"90"
	.section	.data.rel.local
	.align 32
	.type	label$6566, @object
	.size	label$6566, 70
label$6566:
	.value	2
	.quad	.LC2965
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6568
	.section	.rodata.str1.1
.LC2966:
	.string	"91"
	.section	.data.rel.local
	.align 32
	.type	label$6568, @object
	.size	label$6568, 70
label$6568:
	.value	2
	.quad	.LC2966
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6570
	.section	.rodata.str1.1
.LC2967:
	.string	"92"
	.section	.data.rel.local
	.align 32
	.type	label$6570, @object
	.size	label$6570, 70
label$6570:
	.value	2
	.quad	.LC2967
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6572
	.section	.rodata.str1.1
.LC2968:
	.string	"93"
	.section	.data.rel.local
	.align 32
	.type	label$6572, @object
	.size	label$6572, 70
label$6572:
	.value	2
	.quad	.LC2968
	.value	3
	.quad	.LC2935
	.value	1
	.quad	.LC186
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_EOR
	.value	-1
	.quad	label$6574
	.section	.rodata.str1.1
.LC2969:
	.string	"94"
	.section	.data.rel.local
	.align 32
	.type	label$6574, @object
	.size	label$6574, 70
label$6574:
	.value	2
	.quad	.LC2969
	.value	3
	.quad	.LC2941
	.value	1
	.quad	.LC186
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_LSR
	.value	-1
	.quad	label$6576
	.section	.rodata.str1.1
.LC2970:
	.string	"95"
	.section	.data.rel.local
	.align 32
	.type	label$6576, @object
	.size	label$6576, 70
label$6576:
	.value	2
	.quad	.LC2970
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6578
	.section	.rodata.str1.1
.LC2971:
	.string	"96"
.LC2972:
	.string	"RTS"
	.section	.data.rel.local
	.align 32
	.type	label$6578, @object
	.size	label$6578, 70
label$6578:
	.value	2
	.quad	.LC2971
	.value	3
	.quad	.LC2972
	.value	1
	.quad	.LC180
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_RTS
	.value	-1
	.quad	label$6580
	.section	.rodata.str1.1
.LC2973:
	.string	"97"
.LC2974:
	.string	"ADC"
	.section	.data.rel.local
	.align 32
	.type	label$6580, @object
	.size	label$6580, 70
label$6580:
	.value	2
	.quad	.LC2973
	.value	3
	.quad	.LC2974
	.value	2
	.quad	.LC2862
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_ADC
	.value	-1
	.quad	label$6582
	.section	.rodata.str1.1
.LC2975:
	.string	"98"
	.section	.data.rel.local
	.align 32
	.type	label$6582, @object
	.size	label$6582, 70
label$6582:
	.value	2
	.quad	.LC2975
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6584
	.section	.rodata.str1.1
.LC2976:
	.string	"99"
	.section	.data.rel.local
	.align 32
	.type	label$6584, @object
	.size	label$6584, 70
label$6584:
	.value	2
	.quad	.LC2976
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6586
	.section	.rodata.str1.1
.LC2977:
	.string	"100"
	.section	.data.rel.local
	.align 32
	.type	label$6586, @object
	.size	label$6586, 70
label$6586:
	.value	3
	.quad	.LC2977
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6588
	.section	.rodata.str1.1
.LC2978:
	.string	"101"
	.section	.data.rel.local
	.align 32
	.type	label$6588, @object
	.size	label$6588, 70
label$6588:
	.value	3
	.quad	.LC2978
	.value	3
	.quad	.LC2974
	.value	1
	.quad	.LC183
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_ADC
	.value	-1
	.quad	label$6590
	.section	.rodata.str1.1
.LC2979:
	.string	"102"
.LC2980:
	.string	"ROR"
	.section	.data.rel.local
	.align 32
	.type	label$6590, @object
	.size	label$6590, 70
label$6590:
	.value	3
	.quad	.LC2979
	.value	3
	.quad	.LC2980
	.value	1
	.quad	.LC183
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_ROR
	.value	-1
	.quad	label$6592
	.section	.rodata.str1.1
.LC2981:
	.string	"103"
	.section	.data.rel.local
	.align 32
	.type	label$6592, @object
	.size	label$6592, 70
label$6592:
	.value	3
	.quad	.LC2981
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6594
	.section	.rodata.str1.1
.LC2982:
	.string	"104"
.LC2983:
	.string	"PLA"
	.section	.data.rel.local
	.align 32
	.type	label$6594, @object
	.size	label$6594, 70
label$6594:
	.value	3
	.quad	.LC2982
	.value	3
	.quad	.LC2983
	.value	1
	.quad	.LC180
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_PLA
	.value	-1
	.quad	label$6596
	.section	.rodata.str1.1
.LC2984:
	.string	"105"
	.section	.data.rel.local
	.align 32
	.type	label$6596, @object
	.size	label$6596, 70
label$6596:
	.value	3
	.quad	.LC2984
	.value	3
	.quad	.LC2974
	.value	1
	.quad	.LC181
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_ADC
	.value	-1
	.quad	label$6598
	.section	.rodata.str1.1
.LC2985:
	.string	"106"
	.section	.data.rel.local
	.align 32
	.type	label$6598, @object
	.size	label$6598, 70
label$6598:
	.value	3
	.quad	.LC2985
	.value	3
	.quad	.LC2980
	.value	1
	.quad	.LC180
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_RORA
	.value	-1
	.quad	label$6600
	.section	.rodata.str1.1
.LC2986:
	.string	"107"
	.section	.data.rel.local
	.align 32
	.type	label$6600, @object
	.size	label$6600, 70
label$6600:
	.value	3
	.quad	.LC2986
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6602
	.section	.rodata.str1.1
.LC2987:
	.string	"108"
	.section	.data.rel.local
	.align 32
	.type	label$6602, @object
	.size	label$6602, 70
label$6602:
	.value	3
	.quad	.LC2987
	.value	3
	.quad	.LC2949
	.value	2
	.quad	.LC2871
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_JMP
	.value	-1
	.quad	label$6604
	.section	.rodata.str1.1
.LC2988:
	.string	"109"
	.section	.data.rel.local
	.align 32
	.type	label$6604, @object
	.size	label$6604, 70
label$6604:
	.value	3
	.quad	.LC2988
	.value	3
	.quad	.LC2974
	.value	1
	.quad	.LC182
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_ADC
	.value	-1
	.quad	label$6606
	.section	.rodata.str1.1
.LC2989:
	.string	"110"
	.section	.data.rel.local
	.align 32
	.type	label$6606, @object
	.size	label$6606, 70
label$6606:
	.value	3
	.quad	.LC2989
	.value	3
	.quad	.LC2980
	.value	1
	.quad	.LC182
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_ROR
	.value	-1
	.quad	label$6608
	.section	.rodata.str1.1
.LC2990:
	.string	"111"
	.section	.data.rel.local
	.align 32
	.type	label$6608, @object
	.size	label$6608, 70
label$6608:
	.value	3
	.quad	.LC2990
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6610
	.section	.rodata.str1.1
.LC2991:
	.string	"112"
.LC2992:
	.string	"BVS"
	.section	.data.rel.local
	.align 32
	.type	label$6610, @object
	.size	label$6610, 70
label$6610:
	.value	3
	.quad	.LC2991
	.value	3
	.quad	.LC2992
	.value	1
	.quad	.LC188
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_BVS
	.value	-1
	.quad	label$6612
	.section	.rodata.str1.1
.LC2993:
	.string	"113"
	.section	.data.rel.local
	.align 32
	.type	label$6612, @object
	.size	label$6612, 70
label$6612:
	.value	3
	.quad	.LC2993
	.value	3
	.quad	.LC2974
	.value	2
	.quad	.LC2869
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_ADC
	.value	-1
	.quad	label$6614
	.section	.rodata.str1.1
.LC2994:
	.string	"114"
	.section	.data.rel.local
	.align 32
	.type	label$6614, @object
	.size	label$6614, 70
label$6614:
	.value	3
	.quad	.LC2994
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6616
	.section	.rodata.str1.1
.LC2995:
	.string	"115"
	.section	.data.rel.local
	.align 32
	.type	label$6616, @object
	.size	label$6616, 70
label$6616:
	.value	3
	.quad	.LC2995
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6618
	.section	.rodata.str1.1
.LC2996:
	.string	"116"
	.section	.data.rel.local
	.align 32
	.type	label$6618, @object
	.size	label$6618, 70
label$6618:
	.value	3
	.quad	.LC2996
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6620
	.section	.rodata.str1.1
.LC2997:
	.string	"117"
	.section	.data.rel.local
	.align 32
	.type	label$6620, @object
	.size	label$6620, 70
label$6620:
	.value	3
	.quad	.LC2997
	.value	3
	.quad	.LC2974
	.value	1
	.quad	.LC184
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_ADC
	.value	-1
	.quad	label$6622
	.section	.rodata.str1.1
.LC2998:
	.string	"118"
	.section	.data.rel.local
	.align 32
	.type	label$6622, @object
	.size	label$6622, 70
label$6622:
	.value	3
	.quad	.LC2998
	.value	3
	.quad	.LC2980
	.value	1
	.quad	.LC184
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_ROR
	.value	-1
	.quad	label$6624
	.section	.rodata.str1.1
.LC2999:
	.string	"119"
	.section	.data.rel.local
	.align 32
	.type	label$6624, @object
	.size	label$6624, 70
label$6624:
	.value	3
	.quad	.LC2999
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6626
	.section	.rodata.str1.1
.LC3000:
	.string	"120"
.LC3001:
	.string	"SEI"
	.section	.data.rel.local
	.align 32
	.type	label$6626, @object
	.size	label$6626, 70
label$6626:
	.value	3
	.quad	.LC3000
	.value	3
	.quad	.LC3001
	.value	1
	.quad	.LC180
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_SEI
	.value	-1
	.quad	label$6628
	.section	.rodata.str1.1
.LC3002:
	.string	"121"
	.section	.data.rel.local
	.align 32
	.type	label$6628, @object
	.size	label$6628, 70
label$6628:
	.value	3
	.quad	.LC3002
	.value	3
	.quad	.LC2974
	.value	1
	.quad	.LC187
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_ADC
	.value	-1
	.quad	label$6630
	.section	.rodata.str1.1
.LC3003:
	.string	"122"
	.section	.data.rel.local
	.align 32
	.type	label$6630, @object
	.size	label$6630, 70
label$6630:
	.value	3
	.quad	.LC3003
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6632
	.section	.rodata.str1.1
.LC3004:
	.string	"123"
	.section	.data.rel.local
	.align 32
	.type	label$6632, @object
	.size	label$6632, 70
label$6632:
	.value	3
	.quad	.LC3004
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6634
	.section	.rodata.str1.1
.LC3005:
	.string	"124"
	.section	.data.rel.local
	.align 32
	.type	label$6634, @object
	.size	label$6634, 70
label$6634:
	.value	3
	.quad	.LC3005
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6636
	.section	.rodata.str1.1
.LC3006:
	.string	"125"
	.section	.data.rel.local
	.align 32
	.type	label$6636, @object
	.size	label$6636, 70
label$6636:
	.value	3
	.quad	.LC3006
	.value	3
	.quad	.LC2974
	.value	1
	.quad	.LC186
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_ADC
	.value	-1
	.quad	label$6638
	.section	.rodata.str1.1
.LC3007:
	.string	"126"
	.section	.data.rel.local
	.align 32
	.type	label$6638, @object
	.size	label$6638, 70
label$6638:
	.value	3
	.quad	.LC3007
	.value	3
	.quad	.LC2980
	.value	1
	.quad	.LC186
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_ROR
	.value	-1
	.quad	label$6640
	.section	.rodata.str1.1
.LC3008:
	.string	"127"
	.section	.data.rel.local
	.align 32
	.type	label$6640, @object
	.size	label$6640, 70
label$6640:
	.value	3
	.quad	.LC3008
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6642
	.section	.rodata.str1.1
.LC3009:
	.string	"128"
	.section	.data.rel.local
	.align 32
	.type	label$6642, @object
	.size	label$6642, 70
label$6642:
	.value	3
	.quad	.LC3009
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6644
	.section	.rodata.str1.1
.LC3010:
	.string	"129"
.LC3011:
	.string	"STA"
	.section	.data.rel.local
	.align 32
	.type	label$6644, @object
	.size	label$6644, 70
label$6644:
	.value	3
	.quad	.LC3010
	.value	3
	.quad	.LC3011
	.value	2
	.quad	.LC2862
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_STA
	.value	-1
	.quad	label$6646
	.section	.rodata.str1.1
.LC3012:
	.string	"130"
	.section	.data.rel.local
	.align 32
	.type	label$6646, @object
	.size	label$6646, 70
label$6646:
	.value	3
	.quad	.LC3012
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6648
	.section	.rodata.str1.1
.LC3013:
	.string	"131"
	.section	.data.rel.local
	.align 32
	.type	label$6648, @object
	.size	label$6648, 70
label$6648:
	.value	3
	.quad	.LC3013
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6650
	.section	.rodata.str1.1
.LC3014:
	.string	"132"
.LC3015:
	.string	"STY"
	.section	.data.rel.local
	.align 32
	.type	label$6650, @object
	.size	label$6650, 70
label$6650:
	.value	3
	.quad	.LC3014
	.value	3
	.quad	.LC3015
	.value	1
	.quad	.LC183
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_STY
	.value	-1
	.quad	label$6652
	.section	.rodata.str1.1
.LC3016:
	.string	"133"
	.section	.data.rel.local
	.align 32
	.type	label$6652, @object
	.size	label$6652, 70
label$6652:
	.value	3
	.quad	.LC3016
	.value	3
	.quad	.LC3011
	.value	1
	.quad	.LC183
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_STA
	.value	-1
	.quad	label$6654
	.section	.rodata.str1.1
.LC3017:
	.string	"134"
.LC3018:
	.string	"STX"
	.section	.data.rel.local
	.align 32
	.type	label$6654, @object
	.size	label$6654, 70
label$6654:
	.value	3
	.quad	.LC3017
	.value	3
	.quad	.LC3018
	.value	1
	.quad	.LC183
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_STX
	.value	-1
	.quad	label$6656
	.section	.rodata.str1.1
.LC3019:
	.string	"135"
	.section	.data.rel.local
	.align 32
	.type	label$6656, @object
	.size	label$6656, 70
label$6656:
	.value	3
	.quad	.LC3019
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6658
	.section	.rodata.str1.1
.LC3020:
	.string	"136"
.LC3021:
	.string	"DEY"
	.section	.data.rel.local
	.align 32
	.type	label$6658, @object
	.size	label$6658, 70
label$6658:
	.value	3
	.quad	.LC3020
	.value	3
	.quad	.LC3021
	.value	1
	.quad	.LC180
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_DEY
	.value	-1
	.quad	label$6660
	.section	.rodata.str1.1
.LC3022:
	.string	"137"
	.section	.data.rel.local
	.align 32
	.type	label$6660, @object
	.size	label$6660, 70
label$6660:
	.value	3
	.quad	.LC3022
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6662
	.section	.rodata.str1.1
.LC3023:
	.string	"138"
.LC3024:
	.string	"TXA"
	.section	.data.rel.local
	.align 32
	.type	label$6662, @object
	.size	label$6662, 70
label$6662:
	.value	3
	.quad	.LC3023
	.value	3
	.quad	.LC3024
	.value	1
	.quad	.LC180
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_TXA
	.value	-1
	.quad	label$6664
	.section	.rodata.str1.1
.LC3025:
	.string	"139"
	.section	.data.rel.local
	.align 32
	.type	label$6664, @object
	.size	label$6664, 70
label$6664:
	.value	3
	.quad	.LC3025
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6666
	.section	.rodata.str1.1
.LC3026:
	.string	"140"
	.section	.data.rel.local
	.align 32
	.type	label$6666, @object
	.size	label$6666, 70
label$6666:
	.value	3
	.quad	.LC3026
	.value	3
	.quad	.LC3015
	.value	1
	.quad	.LC182
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_STY
	.value	-1
	.quad	label$6668
	.section	.rodata.str1.1
.LC3027:
	.string	"141"
	.section	.data.rel.local
	.align 32
	.type	label$6668, @object
	.size	label$6668, 70
label$6668:
	.value	3
	.quad	.LC3027
	.value	3
	.quad	.LC3011
	.value	1
	.quad	.LC182
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_STA
	.value	-1
	.quad	label$6670
	.section	.rodata.str1.1
.LC3028:
	.string	"142"
	.section	.data.rel.local
	.align 32
	.type	label$6670, @object
	.size	label$6670, 70
label$6670:
	.value	3
	.quad	.LC3028
	.value	3
	.quad	.LC3018
	.value	1
	.quad	.LC182
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_STX
	.value	-1
	.quad	label$6672
	.section	.rodata.str1.1
.LC3029:
	.string	"143"
	.section	.data.rel.local
	.align 32
	.type	label$6672, @object
	.size	label$6672, 70
label$6672:
	.value	3
	.quad	.LC3029
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6674
	.section	.rodata.str1.1
.LC3030:
	.string	"144"
.LC3031:
	.string	"BCC"
	.section	.data.rel.local
	.align 32
	.type	label$6674, @object
	.size	label$6674, 70
label$6674:
	.value	3
	.quad	.LC3030
	.value	3
	.quad	.LC3031
	.value	1
	.quad	.LC188
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_BCC
	.value	-1
	.quad	label$6676
	.section	.rodata.str1.1
.LC3032:
	.string	"145"
	.section	.data.rel.local
	.align 32
	.type	label$6676, @object
	.size	label$6676, 70
label$6676:
	.value	3
	.quad	.LC3032
	.value	3
	.quad	.LC3011
	.value	2
	.quad	.LC2869
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_STA
	.value	-1
	.quad	label$6678
	.section	.rodata.str1.1
.LC3033:
	.string	"146"
	.section	.data.rel.local
	.align 32
	.type	label$6678, @object
	.size	label$6678, 70
label$6678:
	.value	3
	.quad	.LC3033
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6680
	.section	.rodata.str1.1
.LC3034:
	.string	"147"
	.section	.data.rel.local
	.align 32
	.type	label$6680, @object
	.size	label$6680, 70
label$6680:
	.value	3
	.quad	.LC3034
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6682
	.section	.rodata.str1.1
.LC3035:
	.string	"148"
	.section	.data.rel.local
	.align 32
	.type	label$6682, @object
	.size	label$6682, 70
label$6682:
	.value	3
	.quad	.LC3035
	.value	3
	.quad	.LC3015
	.value	1
	.quad	.LC184
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_STY
	.value	-1
	.quad	label$6684
	.section	.rodata.str1.1
.LC3036:
	.string	"149"
	.section	.data.rel.local
	.align 32
	.type	label$6684, @object
	.size	label$6684, 70
label$6684:
	.value	3
	.quad	.LC3036
	.value	3
	.quad	.LC3011
	.value	1
	.quad	.LC184
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_STA
	.value	-1
	.quad	label$6686
	.section	.rodata.str1.1
.LC3037:
	.string	"150"
	.section	.data.rel.local
	.align 32
	.type	label$6686, @object
	.size	label$6686, 70
label$6686:
	.value	3
	.quad	.LC3037
	.value	3
	.quad	.LC3018
	.value	1
	.quad	.LC185
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_STX
	.value	-1
	.quad	label$6688
	.section	.rodata.str1.1
.LC3038:
	.string	"151"
	.section	.data.rel.local
	.align 32
	.type	label$6688, @object
	.size	label$6688, 70
label$6688:
	.value	3
	.quad	.LC3038
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6690
	.section	.rodata.str1.1
.LC3039:
	.string	"152"
.LC3040:
	.string	"TYA"
	.section	.data.rel.local
	.align 32
	.type	label$6690, @object
	.size	label$6690, 70
label$6690:
	.value	3
	.quad	.LC3039
	.value	3
	.quad	.LC3040
	.value	1
	.quad	.LC180
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_TYA
	.value	-1
	.quad	label$6692
	.section	.rodata.str1.1
.LC3041:
	.string	"153"
	.section	.data.rel.local
	.align 32
	.type	label$6692, @object
	.size	label$6692, 70
label$6692:
	.value	3
	.quad	.LC3041
	.value	3
	.quad	.LC3011
	.value	1
	.quad	.LC187
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_STA
	.value	-1
	.quad	label$6694
	.section	.rodata.str1.1
.LC3042:
	.string	"154"
.LC3043:
	.string	"TXS"
	.section	.data.rel.local
	.align 32
	.type	label$6694, @object
	.size	label$6694, 70
label$6694:
	.value	3
	.quad	.LC3042
	.value	3
	.quad	.LC3043
	.value	1
	.quad	.LC180
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_TXS
	.value	-1
	.quad	label$6696
	.section	.rodata.str1.1
.LC3044:
	.string	"155"
	.section	.data.rel.local
	.align 32
	.type	label$6696, @object
	.size	label$6696, 70
label$6696:
	.value	3
	.quad	.LC3044
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6698
	.section	.rodata.str1.1
.LC3045:
	.string	"156"
	.section	.data.rel.local
	.align 32
	.type	label$6698, @object
	.size	label$6698, 70
label$6698:
	.value	3
	.quad	.LC3045
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6700
	.section	.rodata.str1.1
.LC3046:
	.string	"157"
	.section	.data.rel.local
	.align 32
	.type	label$6700, @object
	.size	label$6700, 70
label$6700:
	.value	3
	.quad	.LC3046
	.value	3
	.quad	.LC3011
	.value	1
	.quad	.LC186
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_STA
	.value	-1
	.quad	label$6702
	.section	.rodata.str1.1
.LC3047:
	.string	"158"
	.section	.data.rel.local
	.align 32
	.type	label$6702, @object
	.size	label$6702, 70
label$6702:
	.value	3
	.quad	.LC3047
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6704
	.section	.rodata.str1.1
.LC3048:
	.string	"159"
	.section	.data.rel.local
	.align 32
	.type	label$6704, @object
	.size	label$6704, 70
label$6704:
	.value	3
	.quad	.LC3048
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6706
	.section	.rodata.str1.1
.LC3049:
	.string	"160"
.LC3050:
	.string	"LDY"
	.section	.data.rel.local
	.align 32
	.type	label$6706, @object
	.size	label$6706, 70
label$6706:
	.value	3
	.quad	.LC3049
	.value	3
	.quad	.LC3050
	.value	1
	.quad	.LC181
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_LDY
	.value	-1
	.quad	label$6708
	.section	.rodata.str1.1
.LC3051:
	.string	"161"
.LC3052:
	.string	"LDA"
	.section	.data.rel.local
	.align 32
	.type	label$6708, @object
	.size	label$6708, 70
label$6708:
	.value	3
	.quad	.LC3051
	.value	3
	.quad	.LC3052
	.value	2
	.quad	.LC2862
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_LDA
	.value	-1
	.quad	label$6710
	.section	.rodata.str1.1
.LC3053:
	.string	"162"
.LC3054:
	.string	"LDX"
	.section	.data.rel.local
	.align 32
	.type	label$6710, @object
	.size	label$6710, 70
label$6710:
	.value	3
	.quad	.LC3053
	.value	3
	.quad	.LC3054
	.value	1
	.quad	.LC181
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_LDX
	.value	-1
	.quad	label$6712
	.section	.rodata.str1.1
.LC3055:
	.string	"163"
	.section	.data.rel.local
	.align 32
	.type	label$6712, @object
	.size	label$6712, 70
label$6712:
	.value	3
	.quad	.LC3055
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6714
	.section	.rodata.str1.1
.LC3056:
	.string	"164"
	.section	.data.rel.local
	.align 32
	.type	label$6714, @object
	.size	label$6714, 70
label$6714:
	.value	3
	.quad	.LC3056
	.value	3
	.quad	.LC3050
	.value	1
	.quad	.LC183
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_LDY
	.value	-1
	.quad	label$6716
	.section	.rodata.str1.1
.LC3057:
	.string	"165"
	.section	.data.rel.local
	.align 32
	.type	label$6716, @object
	.size	label$6716, 70
label$6716:
	.value	3
	.quad	.LC3057
	.value	3
	.quad	.LC3052
	.value	1
	.quad	.LC183
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_LDA
	.value	-1
	.quad	label$6718
	.section	.rodata.str1.1
.LC3058:
	.string	"166"
	.section	.data.rel.local
	.align 32
	.type	label$6718, @object
	.size	label$6718, 70
label$6718:
	.value	3
	.quad	.LC3058
	.value	3
	.quad	.LC3054
	.value	1
	.quad	.LC183
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_LDX
	.value	-1
	.quad	label$6720
	.section	.rodata.str1.1
.LC3059:
	.string	"167"
	.section	.data.rel.local
	.align 32
	.type	label$6720, @object
	.size	label$6720, 70
label$6720:
	.value	3
	.quad	.LC3059
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6722
	.section	.rodata.str1.1
.LC3060:
	.string	"168"
.LC3061:
	.string	"TAY"
	.section	.data.rel.local
	.align 32
	.type	label$6722, @object
	.size	label$6722, 70
label$6722:
	.value	3
	.quad	.LC3060
	.value	3
	.quad	.LC3061
	.value	1
	.quad	.LC180
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_TAY
	.value	-1
	.quad	label$6724
	.section	.rodata.str1.1
.LC3062:
	.string	"169"
	.section	.data.rel.local
	.align 32
	.type	label$6724, @object
	.size	label$6724, 70
label$6724:
	.value	3
	.quad	.LC3062
	.value	3
	.quad	.LC3052
	.value	1
	.quad	.LC181
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_LDA
	.value	-1
	.quad	label$6726
	.section	.rodata.str1.1
.LC3063:
	.string	"170"
.LC3064:
	.string	"TAX"
	.section	.data.rel.local
	.align 32
	.type	label$6726, @object
	.size	label$6726, 70
label$6726:
	.value	3
	.quad	.LC3063
	.value	3
	.quad	.LC3064
	.value	1
	.quad	.LC180
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_TAX
	.value	-1
	.quad	label$6728
	.section	.rodata.str1.1
.LC3065:
	.string	"171"
	.section	.data.rel.local
	.align 32
	.type	label$6728, @object
	.size	label$6728, 70
label$6728:
	.value	3
	.quad	.LC3065
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6730
	.section	.rodata.str1.1
.LC3066:
	.string	"172"
	.section	.data.rel.local
	.align 32
	.type	label$6730, @object
	.size	label$6730, 70
label$6730:
	.value	3
	.quad	.LC3066
	.value	3
	.quad	.LC3050
	.value	1
	.quad	.LC182
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_LDY
	.value	-1
	.quad	label$6732
	.section	.rodata.str1.1
.LC3067:
	.string	"173"
	.section	.data.rel.local
	.align 32
	.type	label$6732, @object
	.size	label$6732, 70
label$6732:
	.value	3
	.quad	.LC3067
	.value	3
	.quad	.LC3052
	.value	1
	.quad	.LC182
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_LDA
	.value	-1
	.quad	label$6734
	.section	.rodata.str1.1
.LC3068:
	.string	"174"
	.section	.data.rel.local
	.align 32
	.type	label$6734, @object
	.size	label$6734, 70
label$6734:
	.value	3
	.quad	.LC3068
	.value	3
	.quad	.LC3054
	.value	1
	.quad	.LC182
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_LDX
	.value	-1
	.quad	label$6736
	.section	.rodata.str1.1
.LC3069:
	.string	"175"
	.section	.data.rel.local
	.align 32
	.type	label$6736, @object
	.size	label$6736, 70
label$6736:
	.value	3
	.quad	.LC3069
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6738
	.section	.rodata.str1.1
.LC3070:
	.string	"176"
.LC3071:
	.string	"BCS"
	.section	.data.rel.local
	.align 32
	.type	label$6738, @object
	.size	label$6738, 70
label$6738:
	.value	3
	.quad	.LC3070
	.value	3
	.quad	.LC3071
	.value	1
	.quad	.LC188
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_BCS
	.value	-1
	.quad	label$6740
	.section	.rodata.str1.1
.LC3072:
	.string	"177"
	.section	.data.rel.local
	.align 32
	.type	label$6740, @object
	.size	label$6740, 70
label$6740:
	.value	3
	.quad	.LC3072
	.value	3
	.quad	.LC3052
	.value	2
	.quad	.LC2869
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_LDA
	.value	-1
	.quad	label$6742
	.section	.rodata.str1.1
.LC3073:
	.string	"178"
	.section	.data.rel.local
	.align 32
	.type	label$6742, @object
	.size	label$6742, 70
label$6742:
	.value	3
	.quad	.LC3073
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6744
	.section	.rodata.str1.1
.LC3074:
	.string	"179"
	.section	.data.rel.local
	.align 32
	.type	label$6744, @object
	.size	label$6744, 70
label$6744:
	.value	3
	.quad	.LC3074
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6746
	.section	.rodata.str1.1
.LC3075:
	.string	"180"
	.section	.data.rel.local
	.align 32
	.type	label$6746, @object
	.size	label$6746, 70
label$6746:
	.value	3
	.quad	.LC3075
	.value	3
	.quad	.LC3050
	.value	1
	.quad	.LC184
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_LDY
	.value	-1
	.quad	label$6748
	.section	.rodata.str1.1
.LC3076:
	.string	"181"
	.section	.data.rel.local
	.align 32
	.type	label$6748, @object
	.size	label$6748, 70
label$6748:
	.value	3
	.quad	.LC3076
	.value	3
	.quad	.LC3052
	.value	1
	.quad	.LC184
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_LDA
	.value	-1
	.quad	label$6750
	.section	.rodata.str1.1
.LC3077:
	.string	"182"
	.section	.data.rel.local
	.align 32
	.type	label$6750, @object
	.size	label$6750, 70
label$6750:
	.value	3
	.quad	.LC3077
	.value	3
	.quad	.LC3054
	.value	1
	.quad	.LC185
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_LDX
	.value	-1
	.quad	label$6752
	.section	.rodata.str1.1
.LC3078:
	.string	"183"
	.section	.data.rel.local
	.align 32
	.type	label$6752, @object
	.size	label$6752, 70
label$6752:
	.value	3
	.quad	.LC3078
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6754
	.section	.rodata.str1.1
.LC3079:
	.string	"184"
.LC3080:
	.string	"CLV"
	.section	.data.rel.local
	.align 32
	.type	label$6754, @object
	.size	label$6754, 70
label$6754:
	.value	3
	.quad	.LC3079
	.value	3
	.quad	.LC3080
	.value	1
	.quad	.LC180
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_CLV
	.value	-1
	.quad	label$6756
	.section	.rodata.str1.1
.LC3081:
	.string	"185"
	.section	.data.rel.local
	.align 32
	.type	label$6756, @object
	.size	label$6756, 70
label$6756:
	.value	3
	.quad	.LC3081
	.value	3
	.quad	.LC3052
	.value	1
	.quad	.LC187
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_LDA
	.value	-1
	.quad	label$6758
	.section	.rodata.str1.1
.LC3082:
	.string	"186"
.LC3083:
	.string	"TSX"
	.section	.data.rel.local
	.align 32
	.type	label$6758, @object
	.size	label$6758, 70
label$6758:
	.value	3
	.quad	.LC3082
	.value	3
	.quad	.LC3083
	.value	1
	.quad	.LC180
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_TSX
	.value	-1
	.quad	label$6760
	.section	.rodata.str1.1
.LC3084:
	.string	"187"
	.section	.data.rel.local
	.align 32
	.type	label$6760, @object
	.size	label$6760, 70
label$6760:
	.value	3
	.quad	.LC3084
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6762
	.section	.rodata.str1.1
.LC3085:
	.string	"188"
	.section	.data.rel.local
	.align 32
	.type	label$6762, @object
	.size	label$6762, 70
label$6762:
	.value	3
	.quad	.LC3085
	.value	3
	.quad	.LC3050
	.value	1
	.quad	.LC186
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_LDY
	.value	-1
	.quad	label$6764
	.section	.rodata.str1.1
.LC3086:
	.string	"189"
	.section	.data.rel.local
	.align 32
	.type	label$6764, @object
	.size	label$6764, 70
label$6764:
	.value	3
	.quad	.LC3086
	.value	3
	.quad	.LC3052
	.value	1
	.quad	.LC186
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_LDA
	.value	-1
	.quad	label$6766
	.section	.rodata.str1.1
.LC3087:
	.string	"190"
	.section	.data.rel.local
	.align 32
	.type	label$6766, @object
	.size	label$6766, 70
label$6766:
	.value	3
	.quad	.LC3087
	.value	3
	.quad	.LC3054
	.value	1
	.quad	.LC187
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_LDX
	.value	-1
	.quad	label$6768
	.section	.rodata.str1.1
.LC3088:
	.string	"191"
	.section	.data.rel.local
	.align 32
	.type	label$6768, @object
	.size	label$6768, 70
label$6768:
	.value	3
	.quad	.LC3088
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6770
	.section	.rodata.str1.1
.LC3089:
	.string	"192"
.LC3090:
	.string	"CPY"
	.section	.data.rel.local
	.align 32
	.type	label$6770, @object
	.size	label$6770, 70
label$6770:
	.value	3
	.quad	.LC3089
	.value	3
	.quad	.LC3090
	.value	1
	.quad	.LC181
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_CPY
	.value	-1
	.quad	label$6772
	.section	.rodata.str1.1
.LC3091:
	.string	"193"
.LC3092:
	.string	"CMP"
	.section	.data.rel.local
	.align 32
	.type	label$6772, @object
	.size	label$6772, 70
label$6772:
	.value	3
	.quad	.LC3091
	.value	3
	.quad	.LC3092
	.value	2
	.quad	.LC2862
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_CMP
	.value	-1
	.quad	label$6774
	.section	.rodata.str1.1
.LC3093:
	.string	"194"
	.section	.data.rel.local
	.align 32
	.type	label$6774, @object
	.size	label$6774, 70
label$6774:
	.value	3
	.quad	.LC3093
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6776
	.section	.rodata.str1.1
.LC3094:
	.string	"195"
	.section	.data.rel.local
	.align 32
	.type	label$6776, @object
	.size	label$6776, 70
label$6776:
	.value	3
	.quad	.LC3094
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6778
	.section	.rodata.str1.1
.LC3095:
	.string	"196"
	.section	.data.rel.local
	.align 32
	.type	label$6778, @object
	.size	label$6778, 70
label$6778:
	.value	3
	.quad	.LC3095
	.value	3
	.quad	.LC3090
	.value	1
	.quad	.LC183
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_CPY
	.value	-1
	.quad	label$6780
	.section	.rodata.str1.1
.LC3096:
	.string	"197"
	.section	.data.rel.local
	.align 32
	.type	label$6780, @object
	.size	label$6780, 70
label$6780:
	.value	3
	.quad	.LC3096
	.value	3
	.quad	.LC3092
	.value	1
	.quad	.LC183
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_CMP
	.value	-1
	.quad	label$6782
	.section	.rodata.str1.1
.LC3097:
	.string	"198"
.LC3098:
	.string	"DEC"
	.section	.data.rel.local
	.align 32
	.type	label$6782, @object
	.size	label$6782, 70
label$6782:
	.value	3
	.quad	.LC3097
	.value	3
	.quad	.LC3098
	.value	1
	.quad	.LC183
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_DEC
	.value	-1
	.quad	label$6784
	.section	.rodata.str1.1
.LC3099:
	.string	"199"
	.section	.data.rel.local
	.align 32
	.type	label$6784, @object
	.size	label$6784, 70
label$6784:
	.value	3
	.quad	.LC3099
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6786
	.section	.rodata.str1.1
.LC3100:
	.string	"200"
.LC3101:
	.string	"INY"
	.section	.data.rel.local
	.align 32
	.type	label$6786, @object
	.size	label$6786, 70
label$6786:
	.value	3
	.quad	.LC3100
	.value	3
	.quad	.LC3101
	.value	1
	.quad	.LC180
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_INY
	.value	-1
	.quad	label$6788
	.section	.rodata.str1.1
.LC3102:
	.string	"201"
	.section	.data.rel.local
	.align 32
	.type	label$6788, @object
	.size	label$6788, 70
label$6788:
	.value	3
	.quad	.LC3102
	.value	3
	.quad	.LC3092
	.value	1
	.quad	.LC181
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_CMP
	.value	-1
	.quad	label$6790
	.section	.rodata.str1.1
.LC3103:
	.string	"202"
.LC3104:
	.string	"DEX"
	.section	.data.rel.local
	.align 32
	.type	label$6790, @object
	.size	label$6790, 70
label$6790:
	.value	3
	.quad	.LC3103
	.value	3
	.quad	.LC3104
	.value	1
	.quad	.LC180
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_DEX
	.value	-1
	.quad	label$6792
	.section	.rodata.str1.1
.LC3105:
	.string	"203"
	.section	.data.rel.local
	.align 32
	.type	label$6792, @object
	.size	label$6792, 70
label$6792:
	.value	3
	.quad	.LC3105
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6794
	.section	.rodata.str1.1
.LC3106:
	.string	"204"
	.section	.data.rel.local
	.align 32
	.type	label$6794, @object
	.size	label$6794, 70
label$6794:
	.value	3
	.quad	.LC3106
	.value	3
	.quad	.LC3090
	.value	1
	.quad	.LC182
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_CPY
	.value	-1
	.quad	label$6796
	.section	.rodata.str1.1
.LC3107:
	.string	"205"
	.section	.data.rel.local
	.align 32
	.type	label$6796, @object
	.size	label$6796, 70
label$6796:
	.value	3
	.quad	.LC3107
	.value	3
	.quad	.LC3092
	.value	1
	.quad	.LC182
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_CMP
	.value	-1
	.quad	label$6798
	.section	.rodata.str1.1
.LC3108:
	.string	"206"
	.section	.data.rel.local
	.align 32
	.type	label$6798, @object
	.size	label$6798, 70
label$6798:
	.value	3
	.quad	.LC3108
	.value	3
	.quad	.LC3098
	.value	1
	.quad	.LC182
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_DEC
	.value	-1
	.quad	label$6800
	.section	.rodata.str1.1
.LC3109:
	.string	"207"
	.section	.data.rel.local
	.align 32
	.type	label$6800, @object
	.size	label$6800, 70
label$6800:
	.value	3
	.quad	.LC3109
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6802
	.section	.rodata.str1.1
.LC3110:
	.string	"208"
.LC3111:
	.string	"BNE"
	.section	.data.rel.local
	.align 32
	.type	label$6802, @object
	.size	label$6802, 70
label$6802:
	.value	3
	.quad	.LC3110
	.value	3
	.quad	.LC3111
	.value	1
	.quad	.LC188
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_BNE
	.value	-1
	.quad	label$6804
	.section	.rodata.str1.1
.LC3112:
	.string	"209"
	.section	.data.rel.local
	.align 32
	.type	label$6804, @object
	.size	label$6804, 70
label$6804:
	.value	3
	.quad	.LC3112
	.value	3
	.quad	.LC3092
	.value	2
	.quad	.LC2869
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_CMP
	.value	-1
	.quad	label$6806
	.section	.rodata.str1.1
.LC3113:
	.string	"210"
	.section	.data.rel.local
	.align 32
	.type	label$6806, @object
	.size	label$6806, 70
label$6806:
	.value	3
	.quad	.LC3113
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6808
	.section	.rodata.str1.1
.LC3114:
	.string	"211"
	.section	.data.rel.local
	.align 32
	.type	label$6808, @object
	.size	label$6808, 70
label$6808:
	.value	3
	.quad	.LC3114
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6810
	.section	.rodata.str1.1
.LC3115:
	.string	"212"
	.section	.data.rel.local
	.align 32
	.type	label$6810, @object
	.size	label$6810, 70
label$6810:
	.value	3
	.quad	.LC3115
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6812
	.section	.rodata.str1.1
.LC3116:
	.string	"213"
	.section	.data.rel.local
	.align 32
	.type	label$6812, @object
	.size	label$6812, 70
label$6812:
	.value	3
	.quad	.LC3116
	.value	3
	.quad	.LC3092
	.value	1
	.quad	.LC184
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_CMP
	.value	-1
	.quad	label$6814
	.section	.rodata.str1.1
.LC3117:
	.string	"214"
	.section	.data.rel.local
	.align 32
	.type	label$6814, @object
	.size	label$6814, 70
label$6814:
	.value	3
	.quad	.LC3117
	.value	3
	.quad	.LC3098
	.value	1
	.quad	.LC184
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_DEC
	.value	-1
	.quad	label$6816
	.section	.rodata.str1.1
.LC3118:
	.string	"215"
	.section	.data.rel.local
	.align 32
	.type	label$6816, @object
	.size	label$6816, 70
label$6816:
	.value	3
	.quad	.LC3118
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6818
	.section	.rodata.str1.1
.LC3119:
	.string	"216"
.LC3120:
	.string	"CLD"
	.section	.data.rel.local
	.align 32
	.type	label$6818, @object
	.size	label$6818, 70
label$6818:
	.value	3
	.quad	.LC3119
	.value	3
	.quad	.LC3120
	.value	1
	.quad	.LC180
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_CLD
	.value	-1
	.quad	label$6820
	.section	.rodata.str1.1
.LC3121:
	.string	"217"
	.section	.data.rel.local
	.align 32
	.type	label$6820, @object
	.size	label$6820, 70
label$6820:
	.value	3
	.quad	.LC3121
	.value	3
	.quad	.LC3092
	.value	1
	.quad	.LC187
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_CMP
	.value	-1
	.quad	label$6822
	.section	.rodata.str1.1
.LC3122:
	.string	"218"
	.section	.data.rel.local
	.align 32
	.type	label$6822, @object
	.size	label$6822, 70
label$6822:
	.value	3
	.quad	.LC3122
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6824
	.section	.rodata.str1.1
.LC3123:
	.string	"219"
	.section	.data.rel.local
	.align 32
	.type	label$6824, @object
	.size	label$6824, 70
label$6824:
	.value	3
	.quad	.LC3123
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6826
	.section	.rodata.str1.1
.LC3124:
	.string	"220"
	.section	.data.rel.local
	.align 32
	.type	label$6826, @object
	.size	label$6826, 70
label$6826:
	.value	3
	.quad	.LC3124
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6828
	.section	.rodata.str1.1
.LC3125:
	.string	"221"
	.section	.data.rel.local
	.align 32
	.type	label$6828, @object
	.size	label$6828, 70
label$6828:
	.value	3
	.quad	.LC3125
	.value	3
	.quad	.LC3092
	.value	1
	.quad	.LC186
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_CMP
	.value	-1
	.quad	label$6830
	.section	.rodata.str1.1
.LC3126:
	.string	"222"
	.section	.data.rel.local
	.align 32
	.type	label$6830, @object
	.size	label$6830, 70
label$6830:
	.value	3
	.quad	.LC3126
	.value	3
	.quad	.LC3098
	.value	1
	.quad	.LC186
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_DEC
	.value	-1
	.quad	label$6832
	.section	.rodata.str1.1
.LC3127:
	.string	"223"
	.section	.data.rel.local
	.align 32
	.type	label$6832, @object
	.size	label$6832, 70
label$6832:
	.value	3
	.quad	.LC3127
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6834
	.section	.rodata.str1.1
.LC3128:
	.string	"224"
.LC3129:
	.string	"CPX"
	.section	.data.rel.local
	.align 32
	.type	label$6834, @object
	.size	label$6834, 70
label$6834:
	.value	3
	.quad	.LC3128
	.value	3
	.quad	.LC3129
	.value	1
	.quad	.LC181
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_CPX
	.value	-1
	.quad	label$6836
	.section	.rodata.str1.1
.LC3130:
	.string	"225"
.LC3131:
	.string	"SBC"
	.section	.data.rel.local
	.align 32
	.type	label$6836, @object
	.size	label$6836, 70
label$6836:
	.value	3
	.quad	.LC3130
	.value	3
	.quad	.LC3131
	.value	2
	.quad	.LC2862
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_SBC
	.value	-1
	.quad	label$6838
	.section	.rodata.str1.1
.LC3132:
	.string	"226"
	.section	.data.rel.local
	.align 32
	.type	label$6838, @object
	.size	label$6838, 70
label$6838:
	.value	3
	.quad	.LC3132
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6840
	.section	.rodata.str1.1
.LC3133:
	.string	"227"
	.section	.data.rel.local
	.align 32
	.type	label$6840, @object
	.size	label$6840, 70
label$6840:
	.value	3
	.quad	.LC3133
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6842
	.section	.rodata.str1.1
.LC3134:
	.string	"228"
	.section	.data.rel.local
	.align 32
	.type	label$6842, @object
	.size	label$6842, 70
label$6842:
	.value	3
	.quad	.LC3134
	.value	3
	.quad	.LC3129
	.value	1
	.quad	.LC183
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_CPX
	.value	-1
	.quad	label$6844
	.section	.rodata.str1.1
.LC3135:
	.string	"229"
	.section	.data.rel.local
	.align 32
	.type	label$6844, @object
	.size	label$6844, 70
label$6844:
	.value	3
	.quad	.LC3135
	.value	3
	.quad	.LC3131
	.value	1
	.quad	.LC183
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_SBC
	.value	-1
	.quad	label$6846
	.section	.rodata.str1.1
.LC3136:
	.string	"230"
.LC3137:
	.string	"INC"
	.section	.data.rel.local
	.align 32
	.type	label$6846, @object
	.size	label$6846, 70
label$6846:
	.value	3
	.quad	.LC3136
	.value	3
	.quad	.LC3137
	.value	1
	.quad	.LC183
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_INC
	.value	-1
	.quad	label$6848
	.section	.rodata.str1.1
.LC3138:
	.string	"231"
	.section	.data.rel.local
	.align 32
	.type	label$6848, @object
	.size	label$6848, 70
label$6848:
	.value	3
	.quad	.LC3138
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6850
	.section	.rodata.str1.1
.LC3139:
	.string	"232"
.LC3140:
	.string	"INX"
	.section	.data.rel.local
	.align 32
	.type	label$6850, @object
	.size	label$6850, 70
label$6850:
	.value	3
	.quad	.LC3139
	.value	3
	.quad	.LC3140
	.value	1
	.quad	.LC180
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_INX
	.value	-1
	.quad	label$6852
	.section	.rodata.str1.1
.LC3141:
	.string	"233"
	.section	.data.rel.local
	.align 32
	.type	label$6852, @object
	.size	label$6852, 70
label$6852:
	.value	3
	.quad	.LC3141
	.value	3
	.quad	.LC3131
	.value	1
	.quad	.LC181
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_SBC
	.value	-1
	.quad	label$6854
	.section	.rodata.str1.1
.LC3142:
	.string	"234"
.LC3143:
	.string	"NOP"
	.section	.data.rel.local
	.align 32
	.type	label$6854, @object
	.size	label$6854, 70
label$6854:
	.value	3
	.quad	.LC3142
	.value	3
	.quad	.LC3143
	.value	1
	.quad	.LC180
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_NOP
	.value	-1
	.quad	label$6856
	.section	.rodata.str1.1
.LC3144:
	.string	"235"
	.section	.data.rel.local
	.align 32
	.type	label$6856, @object
	.size	label$6856, 70
label$6856:
	.value	3
	.quad	.LC3144
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6858
	.section	.rodata.str1.1
.LC3145:
	.string	"236"
	.section	.data.rel.local
	.align 32
	.type	label$6858, @object
	.size	label$6858, 70
label$6858:
	.value	3
	.quad	.LC3145
	.value	3
	.quad	.LC3129
	.value	1
	.quad	.LC182
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_CPX
	.value	-1
	.quad	label$6860
	.section	.rodata.str1.1
.LC3146:
	.string	"237"
	.section	.data.rel.local
	.align 32
	.type	label$6860, @object
	.size	label$6860, 70
label$6860:
	.value	3
	.quad	.LC3146
	.value	3
	.quad	.LC3131
	.value	1
	.quad	.LC182
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_SBC
	.value	-1
	.quad	label$6862
	.section	.rodata.str1.1
.LC3147:
	.string	"238"
	.section	.data.rel.local
	.align 32
	.type	label$6862, @object
	.size	label$6862, 70
label$6862:
	.value	3
	.quad	.LC3147
	.value	3
	.quad	.LC3137
	.value	1
	.quad	.LC182
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_INC
	.value	-1
	.quad	label$6864
	.section	.rodata.str1.1
.LC3148:
	.string	"239"
	.section	.data.rel.local
	.align 32
	.type	label$6864, @object
	.size	label$6864, 70
label$6864:
	.value	3
	.quad	.LC3148
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6866
	.section	.rodata.str1.1
.LC3149:
	.string	"240"
.LC3150:
	.string	"BEQ"
	.section	.data.rel.local
	.align 32
	.type	label$6866, @object
	.size	label$6866, 70
label$6866:
	.value	3
	.quad	.LC3149
	.value	3
	.quad	.LC3150
	.value	1
	.quad	.LC188
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_BEQ
	.value	-1
	.quad	label$6868
	.section	.rodata.str1.1
.LC3151:
	.string	"241"
	.section	.data.rel.local
	.align 32
	.type	label$6868, @object
	.size	label$6868, 70
label$6868:
	.value	3
	.quad	.LC3151
	.value	3
	.quad	.LC3131
	.value	2
	.quad	.LC2869
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_SBC
	.value	-1
	.quad	label$6870
	.section	.rodata.str1.1
.LC3152:
	.string	"242"
	.section	.data.rel.local
	.align 32
	.type	label$6870, @object
	.size	label$6870, 70
label$6870:
	.value	3
	.quad	.LC3152
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6872
	.section	.rodata.str1.1
.LC3153:
	.string	"243"
	.section	.data.rel.local
	.align 32
	.type	label$6872, @object
	.size	label$6872, 70
label$6872:
	.value	3
	.quad	.LC3153
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6874
	.section	.rodata.str1.1
.LC3154:
	.string	"244"
	.section	.data.rel.local
	.align 32
	.type	label$6874, @object
	.size	label$6874, 70
label$6874:
	.value	3
	.quad	.LC3154
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6876
	.section	.rodata.str1.1
.LC3155:
	.string	"245"
	.section	.data.rel.local
	.align 32
	.type	label$6876, @object
	.size	label$6876, 70
label$6876:
	.value	3
	.quad	.LC3155
	.value	3
	.quad	.LC3131
	.value	1
	.quad	.LC184
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_SBC
	.value	-1
	.quad	label$6878
	.section	.rodata.str1.1
.LC3156:
	.string	"246"
	.section	.data.rel.local
	.align 32
	.type	label$6878, @object
	.size	label$6878, 70
label$6878:
	.value	3
	.quad	.LC3156
	.value	3
	.quad	.LC3137
	.value	1
	.quad	.LC184
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_INC
	.value	-1
	.quad	label$6880
	.section	.rodata.str1.1
.LC3157:
	.string	"247"
	.section	.data.rel.local
	.align 32
	.type	label$6880, @object
	.size	label$6880, 70
label$6880:
	.value	3
	.quad	.LC3157
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6882
	.section	.rodata.str1.1
.LC3158:
	.string	"248"
.LC3159:
	.string	"SED"
	.section	.data.rel.local
	.align 32
	.type	label$6882, @object
	.size	label$6882, 70
label$6882:
	.value	3
	.quad	.LC3158
	.value	3
	.quad	.LC3159
	.value	1
	.quad	.LC180
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_SED
	.value	-1
	.quad	label$6884
	.section	.rodata.str1.1
.LC3160:
	.string	"249"
	.section	.data.rel.local
	.align 32
	.type	label$6884, @object
	.size	label$6884, 70
label$6884:
	.value	3
	.quad	.LC3160
	.value	3
	.quad	.LC3131
	.value	1
	.quad	.LC187
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_SBC
	.value	-1
	.quad	label$6886
	.section	.rodata.str1.1
.LC3161:
	.string	"250"
	.section	.data.rel.local
	.align 32
	.type	label$6886, @object
	.size	label$6886, 70
label$6886:
	.value	3
	.quad	.LC3161
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6888
	.section	.rodata.str1.1
.LC3162:
	.string	"251"
	.section	.data.rel.local
	.align 32
	.type	label$6888, @object
	.size	label$6888, 70
label$6888:
	.value	3
	.quad	.LC3162
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6890
	.section	.rodata.str1.1
.LC3163:
	.string	"252"
	.section	.data.rel.local
	.align 32
	.type	label$6890, @object
	.size	label$6890, 70
label$6890:
	.value	3
	.quad	.LC3163
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6892
	.section	.rodata.str1.1
.LC3164:
	.string	"253"
	.section	.data.rel.local
	.align 32
	.type	label$6892, @object
	.size	label$6892, 70
label$6892:
	.value	3
	.quad	.LC3164
	.value	3
	.quad	.LC3131
	.value	1
	.quad	.LC186
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_SBC
	.value	-1
	.quad	label$6894
	.section	.rodata.str1.1
.LC3165:
	.string	"254"
	.section	.data.rel.local
	.align 32
	.type	label$6894, @object
	.size	label$6894, 70
label$6894:
	.value	3
	.quad	.LC3165
	.value	3
	.quad	.LC3137
	.value	1
	.quad	.LC186
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_INC
	.value	-1
	.quad	label$6896
	.section	.rodata.str1.1
.LC3166:
	.string	"255"
	.section	.data.rel.local
	.align 32
	.type	label$6896, @object
	.size	label$6896, 70
label$6896:
	.value	3
	.quad	.LC3166
	.value	3
	.quad	.LC2870
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$6007
	.section	.rodata.str1.1
.LC3167:
	.string	"UNK"
	.section	.data.rel.local
	.align 16
	.type	label$6007, @object
	.size	label$6007, 20
label$6007:
	.value	3
	.quad	.LC3167
	.value	-1
	.quad	label$6898
	.section	.rodata.str1.1
.LC3168:
	.string	"IMP"
	.section	.data.rel.local
	.align 16
	.type	label$6898, @object
	.size	label$6898, 20
label$6898:
	.value	3
	.quad	.LC3168
	.value	-1
	.quad	label$6900
	.section	.rodata.str1.1
.LC3169:
	.string	"IMM"
	.section	.data.rel.local
	.align 16
	.type	label$6900, @object
	.size	label$6900, 20
label$6900:
	.value	3
	.quad	.LC3169
	.value	-1
	.quad	label$6902
	.section	.rodata.str1.1
.LC3170:
	.string	"ABS"
	.section	.data.rel.local
	.align 16
	.type	label$6902, @object
	.size	label$6902, 20
label$6902:
	.value	3
	.quad	.LC3170
	.value	-1
	.quad	label$6904
	.section	.rodata.str1.1
.LC3171:
	.string	"ZERO"
	.section	.data.rel.local
	.align 16
	.type	label$6904, @object
	.size	label$6904, 20
label$6904:
	.value	4
	.quad	.LC3171
	.value	-1
	.quad	label$6906
	.section	.rodata.str1.1
.LC3172:
	.string	"ZEROX"
	.section	.data.rel.local
	.align 16
	.type	label$6906, @object
	.size	label$6906, 20
label$6906:
	.value	5
	.quad	.LC3172
	.value	-1
	.quad	label$6908
	.section	.rodata.str1.1
.LC3173:
	.string	"ZEROY"
	.section	.data.rel.local
	.align 16
	.type	label$6908, @object
	.size	label$6908, 20
label$6908:
	.value	5
	.quad	.LC3173
	.value	-1
	.quad	label$6910
	.section	.rodata.str1.1
.LC3174:
	.string	"ABSX"
	.section	.data.rel.local
	.align 16
	.type	label$6910, @object
	.size	label$6910, 20
label$6910:
	.value	4
	.quad	.LC3174
	.value	-1
	.quad	label$6912
	.section	.rodata.str1.1
.LC3175:
	.string	"ABSY"
	.section	.data.rel.local
	.align 16
	.type	label$6912, @object
	.size	label$6912, 20
label$6912:
	.value	4
	.quad	.LC3175
	.value	-1
	.quad	label$6914
	.section	.rodata.str1.1
.LC3176:
	.string	"REL"
	.section	.data.rel.local
	.align 16
	.type	label$6914, @object
	.size	label$6914, 20
label$6914:
	.value	3
	.quad	.LC3176
	.value	-1
	.quad	label$6916
	.section	.rodata.str1.1
.LC3177:
	.string	"INDX"
	.section	.data.rel.local
	.align 16
	.type	label$6916, @object
	.size	label$6916, 20
label$6916:
	.value	4
	.quad	.LC3177
	.value	-1
	.quad	label$6918
	.section	.rodata.str1.1
.LC3178:
	.string	"INDY"
	.section	.data.rel.local
	.align 16
	.type	label$6918, @object
	.size	label$6918, 20
label$6918:
	.value	4
	.quad	.LC3178
	.value	-1
	.quad	label$6920
	.section	.rodata.str1.1
.LC3179:
	.string	"IND"
	.section	.data.rel.local
	.align 16
	.type	label$6920, @object
	.size	label$6920, 20
label$6920:
	.value	3
	.quad	.LC3179
	.value	-1
	.quad	0
	.local	FLAG$
	.comm	FLAG$,8,8
	.local	CARY$
	.comm	CARY$,8,8
	.local	YS$
	.comm	YS$,8,8
	.local	XS$
	.comm	XS$,8,8
	.local	Y$
	.comm	Y$,8,8
	.local	X$
	.comm	X$,8,8
	.local	C$
	.comm	C$,8,8
	.local	XWORDS$
	.comm	XWORDS$,131072,32
	.local	BYTES$
	.comm	BYTES$,256,32
	.local	NIBBLES$
	.comm	NIBBLES$,16,16
	.local	EOL$
	.comm	EOL$,24,16
	.local	GET_DATA$
	.comm	GET_DATA$,24,16
	.local	STRING_DATA$
	.comm	STRING_DATA$,24,16
	.local	STRING_ADR$
	.comm	STRING_ADR$,4,4
	.local	PIXEL_SIZE$
	.comm	PIXEL_SIZE$,4,4
	.data
	.align 4
	.type	BITMASK$, @object
	.size	BITMASK$, 4
BITMASK$:
	.long	255
	.align 4
	.type	CHAR_BUFFER$, @object
	.size	CHAR_BUFFER$, 4
CHAR_BUFFER$:
	.long	16384
	.align 4
	.type	CHAR_W$, @object
	.size	CHAR_W$, 4
CHAR_W$:
	.long	1119092736
	.align 4
	.type	CHAR_H$, @object
	.size	CHAR_H$, 4
CHAR_H$:
	.long	1119092736
	.local	RADIUS$
	.comm	RADIUS$,8,8
	.local	R3$
	.comm	R3$,4,4
	.local	PC$
	.comm	PC$,8,8
	.local	GLUNIFORM1I$
	.comm	GLUNIFORM1I$,8,8
	.local	GLUNIFORM4F$
	.comm	GLUNIFORM4F$,8,8
	.local	GLUNIFORM3F$
	.comm	GLUNIFORM3F$,8,8
	.local	GLUNIFORM1F$
	.comm	GLUNIFORM1F$,8,8
	.local	GLGETUNIFORMLOCATION$
	.comm	GLGETUNIFORMLOCATION$,8,8
	.local	GLUSEPROGRAM$
	.comm	GLUSEPROGRAM$,8,8
	.local	GLGETPROGRAMINFOLOG$
	.comm	GLGETPROGRAMINFOLOG$,8,8
	.local	GLGETPROGRAMIV$
	.comm	GLGETPROGRAMIV$,8,8
	.local	GLLINKPROGRAM$
	.comm	GLLINKPROGRAM$,8,8
	.local	GLDETACHSHADER$
	.comm	GLDETACHSHADER$,8,8
	.local	GLATTACHSHADER$
	.comm	GLATTACHSHADER$,8,8
	.local	GLDELETEPROGRAM$
	.comm	GLDELETEPROGRAM$,8,8
	.local	GLCREATEPROGRAM$
	.comm	GLCREATEPROGRAM$,8,8
	.local	GLGETSHADERINFOLOG$
	.comm	GLGETSHADERINFOLOG$,8,8
	.local	GLGETSHADERIV$
	.comm	GLGETSHADERIV$,8,8
	.local	GLCOMPILESHADER$
	.comm	GLCOMPILESHADER$,8,8
	.local	GLSHADERSOURCE$
	.comm	GLSHADERSOURCE$,8,8
	.local	GLDELETESHADER$
	.comm	GLDELETESHADER$,8,8
	.local	GLCREATESHADER$
	.comm	GLCREATESHADER$,8,8
	.align 2
	.type	INDEX$, @object
	.size	INDEX$, 2
INDEX$:
	.value	34
	.section	.rodata.cst8,"aM",@progbits,8
	.align 8
.LC0:
	.long	0
	.long	0
	.align 8
.LC1:
	.long	0
	.long	1072693248
	.align 8
.LC4:
	.long	0
	.long	1071775744
	.align 8
.LC5:
	.long	0
	.long	1075970048
	.align 8
.LC6:
	.long	0
	.long	1076887552
	.align 8
.LC7:
	.long	32
	.long	24
	.align 8
.LC8:
	.long	24
	.long	16
	.align 8
.LC9:
	.long	32
	.long	16
	.align 8
.LC73:
	.long	0
	.long	1077936128
	.align 8
.LC74:
	.long	0
	.long	1077968896
	.align 8
.LC75:
	.long	0
	.long	1078001664
	.align 8
.LC76:
	.long	0
	.long	1078034432
	.align 8
.LC77:
	.long	0
	.long	1078067200
	.align 8
.LC78:
	.long	0
	.long	1078099968
	.align 8
.LC79:
	.long	0
	.long	1078132736
	.align 8
.LC80:
	.long	0
	.long	1078165504
	.align 8
.LC81:
	.long	0
	.long	1078198272
	.align 8
.LC82:
	.long	0
	.long	1078231040
	.align 8
.LC83:
	.long	0
	.long	1078263808
	.align 8
.LC84:
	.long	0
	.long	1078296576
	.align 8
.LC85:
	.long	0
	.long	1078329344
	.align 8
.LC86:
	.long	0
	.long	1078362112
	.align 8
.LC87:
	.long	0
	.long	1078394880
	.align 8
.LC88:
	.long	0
	.long	1078427648
	.align 8
.LC89:
	.long	0
	.long	1078460416
	.align 8
.LC90:
	.long	0
	.long	1078493184
	.align 8
.LC91:
	.long	0
	.long	1078525952
	.align 8
.LC92:
	.long	0
	.long	1078558720
	.align 8
.LC93:
	.long	0
	.long	1078591488
	.align 8
.LC94:
	.long	0
	.long	1078624256
	.align 8
.LC95:
	.long	0
	.long	1078657024
	.align 8
.LC96:
	.long	0
	.long	1078689792
	.align 8
.LC97:
	.long	0
	.long	1078722560
	.align 8
.LC98:
	.long	0
	.long	1078755328
	.align 8
.LC99:
	.long	0
	.long	1078788096
	.align 8
.LC100:
	.long	0
	.long	1078820864
	.align 8
.LC101:
	.long	0
	.long	1078853632
	.align 8
.LC102:
	.long	0
	.long	1078886400
	.align 8
.LC103:
	.long	0
	.long	1078919168
	.align 8
.LC104:
	.long	0
	.long	1078951936
	.align 8
.LC105:
	.long	0
	.long	1073741824
	.align 8
.LC106:
	.long	0
	.long	1074266112
	.align 8
.LC107:
	.long	0
	.long	1074790400
	.align 8
.LC108:
	.long	0
	.long	1075052544
	.align 8
.LC109:
	.long	0
	.long	1075314688
	.align 8
.LC110:
	.long	0
	.long	1075576832
	.align 8
.LC111:
	.long	0
	.long	1075838976
	.align 8
.LC112:
	.long	0
	.long	1076101120
	.align 8
.LC113:
	.long	0
	.long	1076232192
	.align 8
.LC114:
	.long	0
	.long	1076363264
	.align 8
.LC115:
	.long	0
	.long	1076494336
	.align 8
.LC116:
	.long	0
	.long	1076625408
	.align 8
.LC117:
	.long	0
	.long	1076756480
	.align 8
.LC118:
	.long	0
	.long	1076953088
	.align 8
.LC119:
	.long	0
	.long	1077018624
	.align 8
.LC120:
	.long	0
	.long	1077084160
	.align 8
.LC121:
	.long	0
	.long	1077149696
	.align 8
.LC122:
	.long	0
	.long	1077215232
	.align 8
.LC123:
	.long	0
	.long	1077280768
	.align 8
.LC124:
	.long	0
	.long	1077346304
	.align 8
.LC125:
	.long	0
	.long	1077411840
	.align 8
.LC126:
	.long	0
	.long	1077477376
	.align 8
.LC127:
	.long	0
	.long	1077542912
	.align 8
.LC128:
	.long	0
	.long	1077608448
	.align 8
.LC129:
	.long	0
	.long	1077673984
	.align 8
.LC130:
	.long	0
	.long	1077739520
	.align 8
.LC131:
	.long	0
	.long	1077805056
	.align 8
.LC132:
	.long	0
	.long	1077870592
	.align 8
.LC133:
	.long	0
	.long	1080033280
	.align 8
.LC134:
	.long	0
	.long	1080041472
	.align 8
.LC135:
	.long	0
	.long	1080049664
	.align 8
.LC136:
	.long	0
	.long	1080057856
	.align 8
.LC137:
	.long	0
	.long	1080066048
	.align 8
.LC138:
	.long	0
	.long	1080074240
	.align 8
.LC139:
	.long	0
	.long	1080082432
	.align 8
.LC140:
	.long	0
	.long	1080090624
	.align 8
.LC141:
	.long	0
	.long	1080098816
	.align 8
.LC142:
	.long	0
	.long	1080107008
	.align 8
.LC143:
	.long	0
	.long	1080115200
	.align 8
.LC144:
	.long	0
	.long	1080123392
	.align 8
.LC145:
	.long	0
	.long	1080131584
	.align 8
.LC146:
	.long	0
	.long	1080139776
	.align 8
.LC147:
	.long	0
	.long	1080147968
	.align 8
.LC148:
	.long	0
	.long	1080156160
	.align 8
.LC149:
	.long	0
	.long	1080164352
	.align 8
.LC150:
	.long	0
	.long	1080172544
	.align 8
.LC151:
	.long	0
	.long	1080180736
	.align 8
.LC152:
	.long	0
	.long	1080188928
	.align 8
.LC153:
	.long	0
	.long	1080197120
	.align 8
.LC154:
	.long	0
	.long	1080205312
	.align 8
.LC155:
	.long	0
	.long	1080213504
	.align 8
.LC156:
	.long	0
	.long	1080221696
	.align 8
.LC157:
	.long	0
	.long	1080229888
	.align 8
.LC158:
	.long	0
	.long	1080238080
	.align 8
.LC159:
	.long	0
	.long	1080246272
	.align 8
.LC160:
	.long	0
	.long	1080254464
	.align 8
.LC161:
	.long	0
	.long	1080262656
	.align 8
.LC162:
	.long	0
	.long	1080270848
	.align 8
.LC163:
	.long	0
	.long	1080279040
	.section	.rodata.cst16,"aM",@progbits,16
	.align 16
.LC258:
	.long	0
	.long	-2147483648
	.long	0
	.long	0
	.section	.rodata.cst8
	.align 8
.LC259:
	.long	0
	.long	1081073664
	.align 8
.LC260:
	.long	0
	.long	1089470432
	.align 8
.LC261:
	.long	0
	.long	1089208320
	.align 8
.LC262:
	.long	0
	.long	1088946144
	.align 8
.LC263:
	.long	0
	.long	1088684032
	.align 8
.LC264:
	.long	0
	.long	1089175520
	.align 8
.LC265:
	.long	0
	.long	1089142784
	.align 8
.LC266:
	.long	0
	.long	1089109984
	.align 8
.LC267:
	.long	0
	.long	1089077248
	.align 8
.LC268:
	.long	0
	.long	1088954496
	.align 8
.LC269:
	.long	0
	.long	1088951328
	.align 8
.LC270:
	.long	0
	.long	1089078304
	.align 8
.LC271:
	.long	0
	.long	1088953824
	.align 8
.LC272:
	.long	0
	.long	1088953792
	.align 8
.LC273:
	.long	0
	.long	1088946464
	.align 8
.LC274:
	.long	0
	.long	1088946432
	.align 8
.LC275:
	.long	0
	.long	1088946400
	.align 8
.LC276:
	.long	0
	.long	1088946368
	.align 8
.LC277:
	.long	0
	.long	1082404864
	.align 8
.LC278:
	.long	0
	.long	1088946240
	.align 8
.LC279:
	.long	0
	.long	1088946272
	.align 8
.LC280:
	.long	0
	.long	1088946304
	.align 8
.LC281:
	.long	0
	.long	1079066624
	.align 8
.LC282:
	.long	0
	.long	1079263232
	.align 8
.LC283:
	.long	0
	.long	1079525376
	.align 8
.LC284:
	.long	0
	.long	1079787520
	.align 8
.LC285:
	.long	0
	.long	1080311808
	.align 8
.LC286:
	.long	0
	.long	1080475648
	.align 8
.LC287:
	.long	0
	.long	1080639488
	.align 8
.LC288:
	.long	0
	.long	1080844288
	.align 8
.LC289:
	.long	0
	.long	1079001088
	.align 8
.LC290:
	.long	0
	.long	1079984128
	.align 8
.LC291:
	.long	0
	.long	1080541184
	.align 8
.LC292:
	.long	0
	.long	1080811520
	.align 8
.LC293:
	.long	0
	.long	1080606720
	.align 8
.LC294:
	.long	0
	.long	1080778752
	.align 8
.LC295:
	.long	0
	.long	1080909824
	.align 8
.LC296:
	.long	0
	.long	1079394304
	.align 8
.LC297:
	.long	0
	.long	1079656448
	.align 8
.LC298:
	.long	0
	.long	1089078016
	.align 8
.LC299:
	.long	0
	.long	1138753536
	.align 8
.LC300:
	.long	0
	.long	1083179008
	.align 8
.LC301:
	.long	0
	.long	1084227584
	.align 8
.LC302:
	.long	0
	.long	1084751872
	.align 8
.LC303:
	.long	0
	.long	1085276160
	.align 8
.LC304:
	.long	0
	.long	1085538304
	.align 8
.LC305:
	.long	0
	.long	1085800448
	.align 8
.LC306:
	.long	0
	.long	1086062592
	.align 8
.LC307:
	.long	0
	.long	1086324736
	.align 8
.LC308:
	.long	0
	.long	1086455808
	.align 8
.LC309:
	.long	0
	.long	1086586880
	.align 8
.LC310:
	.long	0
	.long	1086717952
	.align 8
.LC311:
	.long	0
	.long	1086849024
	.align 8
.LC312:
	.long	0
	.long	1086980096
	.align 8
.LC313:
	.long	0
	.long	1087111168
	.align 8
.LC314:
	.long	0
	.long	1087242240
	.align 8
.LC315:
	.long	0
	.long	1089077280
	.align 8
.LC316:
	.long	0
	.long	1089077344
	.align 8
.LC317:
	.long	0
	.long	1089077408
	.align 8
.LC318:
	.long	0
	.long	1089077472
	.align 8
.LC319:
	.long	0
	.long	1089077536
	.align 8
.LC320:
	.long	0
	.long	1089077600
	.align 8
.LC321:
	.long	0
	.long	1089077664
	.align 8
.LC322:
	.long	0
	.long	1089077728
	.align 8
.LC323:
	.long	0
	.long	1089078496
	.align 8
.LC324:
	.long	0
	.long	1089078528
	.align 8
.LC325:
	.long	0
	.long	1089078560
	.align 8
.LC326:
	.long	0
	.long	1089078592
	.align 8
.LC327:
	.long	0
	.long	1089078624
	.align 8
.LC328:
	.long	0
	.long	1089079200
	.align 8
.LC329:
	.long	0
	.long	1089079232
	.align 8
.LC330:
	.long	0
	.long	1089079264
	.align 8
.LC331:
	.long	0
	.long	1089077920
	.align 8
.LC332:
	.long	0
	.long	1089077824
	.align 8
.LC333:
	.long	0
	.long	1089078272
	.align 8
.LC335:
	.long	0
	.long	1089078336
	.align 8
.LC336:
	.long	0
	.long	1089078368
	.align 8
.LC337:
	.long	0
	.long	1089078400
	.align 8
.LC338:
	.long	0
	.long	1080377344
	.align 8
.LC339:
	.long	0
	.long	1088765952
	.align 8
.LC340:
	.long	0
	.long	1088771392
	.align 8
.LC341:
	.long	0
	.long	1097154560
	.align 8
.LC342:
	.long	1073741824
	.long	1097154581
	.align 8
.LC343:
	.long	0
	.long	1097157280
	.align 8
.LC344:
	.long	1073741824
	.long	1097160021
	.align 8
.LC345:
	.long	1073741824
	.long	1096111445
	.align 8
.LC346:
	.long	-1073741824
	.long	1096111487
	.align 8
.LC347:
	.long	1073741824
	.long	1096122325
	.align 8
.LC348:
	.long	-1073741824
	.long	1096122367
	.align 8
.LC349:
	.long	-1610612736
	.long	1097853610
	.align 8
.LC350:
	.long	-536870912
	.long	1097853631
	.align 8
.LC351:
	.long	-1610612736
	.long	1097859050
	.align 8
.LC352:
	.long	-536870912
	.long	1097859071
	.align 8
.LC353:
	.long	0
	.long	1093932052
	.align 8
.LC354:
	.long	0
	.long	1094717456
	.align 8
.LC355:
	.long	-2147483648
	.long	1095145110
	.align 8
.LC356:
	.long	-2147483648
	.long	1095539868
	.align 8
.LC357:
	.long	1073741824
	.long	1095848273
	.align 8
.LC358:
	.long	1073741824
	.long	1096045652
	.align 8
.LC359:
	.long	1073741824
	.long	1096308824
	.align 8
.LC360:
	.long	1073741824
	.long	1096571996
	.align 8
.LC361:
	.long	1073741824
	.long	1096831056
	.align 8
.LC362:
	.long	1073741824
	.long	1096962642
	.align 8
.LC363:
	.long	1073741824
	.long	1097094228
	.align 8
.LC364:
	.long	-1073741824
	.long	1097258710
	.align 8
.LC365:
	.long	1073741824
	.long	1097423193
	.align 8
.LC366:
	.long	1610612736
	.long	1097628796
	.align 8
.LC367:
	.long	-1073741824
	.long	1095778367
	.align 8
.LC368:
	.long	-1073741824
	.long	1096761407
	.align 8
.LC369:
	.long	-536870912
	.long	1097318431
	.align 8
.LC370:
	.long	-536870912
	.long	1097850911
	.align 8
.LC371:
	.long	-1073741824
	.long	1097850903
	.align 8
.LC372:
	.long	-1610612736
	.long	1097850895
	.align 8
.LC373:
	.long	536870912
	.long	1097850888
	.align 8
.LC374:
	.long	0
	.long	1097850880
	.align 8
.LC375:
	.long	0
	.long	1097852960
	.align 8
.LC376:
	.long	0
	.long	1097854880
	.align 8
.LC377:
	.long	0
	.long	1097856960
	.align 8
.LC378:
	.long	0
	.long	1097859040
	.align 8
.LC379:
	.long	0
	.long	1097326560
	.align 8
.LC380:
	.long	0
	.long	1096777664
	.align 8
.LC381:
	.long	0
	.long	1095794624
	.align 8
.LC382:
	.long	0
	.long	1089462272
	.align 8
.LC383:
	.long	0
	.long	1089464352
	.align 8
.LC384:
	.long	0
	.long	1089466272
	.align 8
.LC385:
	.long	0
	.long	1089468352
	.align 8
.LC386:
	.long	0
	.long	1088937952
	.align 8
.LC387:
	.long	0
	.long	1088389056
	.align 8
.LC388:
	.long	0
	.long	1087406016
	.align 8
.LC389:
	.long	-1073741824
	.long	1096769407
	.align 8
.LC390:
	.long	-536870912
	.long	1097060287
	.align 8
.LC391:
	.long	-536870912
	.long	1097322431
	.align 8
.LC392:
	.long	-536870912
	.long	1097592767
	.align 8
.LC393:
	.long	-536870912
	.long	1097854911
	.align 8
.LC394:
	.long	-536870912
	.long	1097854907
	.align 8
.LC395:
	.long	-1073741824
	.long	1097854903
	.align 8
.LC396:
	.long	0
	.long	1078984704
	.align 8
.LC397:
	.long	-1073741824
	.long	1097854899
	.align 8
.LC398:
	.long	-1610612736
	.long	1097854895
	.align 8
.LC399:
	.long	0
	.long	1079017472
	.align 8
.LC400:
	.long	-1610612736
	.long	1097855951
	.align 8
.LC401:
	.long	0
	.long	1079033856
	.align 8
.LC402:
	.long	-1610612736
	.long	1097856975
	.align 8
.LC403:
	.long	0
	.long	1079050240
	.align 8
.LC404:
	.long	-1610612736
	.long	1097858031
	.align 8
.LC405:
	.long	-1610612736
	.long	1097859055
	.align 8
.LC406:
	.long	0
	.long	1079083008
	.align 8
.LC407:
	.long	-1610612736
	.long	1097596911
	.align 8
.LC408:
	.long	0
	.long	1079099392
	.align 8
.LC409:
	.long	-1610612736
	.long	1097326575
	.align 8
.LC410:
	.long	0
	.long	1079115776
	.align 8
.LC411:
	.long	-1610612736
	.long	1097064431
	.align 8
.LC412:
	.long	0
	.long	1079132160
	.align 8
.LC413:
	.long	1073741824
	.long	1096777695
	.align 8
.LC414:
	.long	0
	.long	1079148544
	.align 8
.LC415:
	.long	-2147483648
	.long	1096777703
	.align 8
.LC416:
	.long	0
	.long	1079164928
	.align 8
.LC417:
	.long	-2147483648
	.long	1096777711
	.align 8
.LC418:
	.long	0
	.long	1079181312
	.align 8
.LC419:
	.long	-1073741824
	.long	1096777719
	.align 8
.LC420:
	.long	0
	.long	1079197696
	.align 8
.LC421:
	.long	-1073741824
	.long	1096777727
	.align 8
.LC422:
	.long	0
	.long	1079214080
	.align 8
.LC423:
	.long	-1073741824
	.long	1096775679
	.align 8
.LC424:
	.long	0
	.long	1079230464
	.align 8
.LC425:
	.long	-1073741824
	.long	1096773567
	.align 8
.LC426:
	.long	0
	.long	1079246848
	.align 8
.LC427:
	.long	-1073741824
	.long	1096771519
	.align 8
.LC428:
	.long	-536870912
	.long	1097258719
	.align 8
.LC429:
	.long	0
	.long	1079279616
	.align 8
.LC430:
	.long	-536870912
	.long	1097389791
	.align 8
.LC431:
	.long	0
	.long	1079296000
	.align 8
.LC432:
	.long	-536870912
	.long	1097561823
	.align 8
.LC433:
	.long	0
	.long	1079312384
	.align 8
.LC434:
	.long	-536870912
	.long	1097692895
	.align 8
.LC435:
	.long	0
	.long	1079328768
	.align 8
.LC436:
	.long	-536870912
	.long	1097856735
	.align 8
.LC437:
	.long	0
	.long	1079345152
	.align 8
.LC438:
	.long	1610612736
	.long	1097856733
	.align 8
.LC439:
	.long	0
	.long	1079361536
	.align 8
.LC440:
	.long	1610612736
	.long	1097856731
	.align 8
.LC441:
	.long	0
	.long	1079377920
	.align 8
.LC442:
	.long	-1073741824
	.long	1097856728
	.align 8
.LC443:
	.long	-1073741824
	.long	1097856726
	.align 8
.LC444:
	.long	0
	.long	1079410688
	.align 8
.LC445:
	.long	-1073741824
	.long	1097857238
	.align 8
.LC446:
	.long	0
	.long	1079427072
	.align 8
.LC447:
	.long	-1073741824
	.long	1097857910
	.align 8
.LC448:
	.long	0
	.long	1079443456
	.align 8
.LC449:
	.long	-1073741824
	.long	1097858422
	.align 8
.LC450:
	.long	0
	.long	1079459840
	.align 8
.LC451:
	.long	-1073741824
	.long	1097859062
	.align 8
.LC452:
	.long	0
	.long	1079476224
	.align 8
.LC453:
	.long	-1073741824
	.long	1097695222
	.align 8
.LC454:
	.long	0
	.long	1079492608
	.align 8
.LC455:
	.long	-1073741824
	.long	1097564150
	.align 8
.LC456:
	.long	0
	.long	1079508992
	.align 8
.LC457:
	.long	-1073741824
	.long	1097392118
	.align 8
.LC458:
	.long	-1073741824
	.long	1097261046
	.align 8
.LC459:
	.long	0
	.long	1079541760
	.align 8
.LC460:
	.long	-1073741824
	.long	1097261048
	.align 8
.LC461:
	.long	0
	.long	1079558144
	.align 8
.LC462:
	.long	1610612736
	.long	1097261051
	.align 8
.LC463:
	.long	0
	.long	1079574528
	.align 8
.LC464:
	.long	1610612736
	.long	1097261053
	.align 8
.LC465:
	.long	0
	.long	1079590912
	.align 8
.LC466:
	.long	-536870912
	.long	1097261055
	.align 8
.LC467:
	.long	0
	.long	1079607296
	.align 8
.LC468:
	.long	-536870912
	.long	1097260415
	.align 8
.LC469:
	.long	0
	.long	1079623680
	.align 8
.LC470:
	.long	-536870912
	.long	1097259903
	.align 8
.LC471:
	.long	0
	.long	1079640064
	.align 8
.LC472:
	.long	-536870912
	.long	1097259231
	.align 8
.LC473:
	.long	0
	.long	1079672832
	.align 8
.LC474:
	.long	0
	.long	1094451313
	.align 8
.LC475:
	.long	0
	.long	1079689216
	.align 8
.LC476:
	.long	-2147483648
	.long	1095532600
	.align 8
.LC477:
	.long	0
	.long	1079705600
	.align 8
.LC478:
	.long	1073741824
	.long	1096106012
	.align 8
.LC479:
	.long	0
	.long	1079721984
	.align 8
.LC480:
	.long	1073741824
	.long	1096564764
	.align 8
.LC481:
	.long	0
	.long	1079738368
	.align 8
.LC482:
	.long	1073741824
	.long	1096564757
	.align 8
.LC483:
	.long	0
	.long	1079754752
	.align 8
.LC484:
	.long	1073741824
	.long	1096564750
	.align 8
.LC485:
	.long	0
	.long	1079771136
	.align 8
.LC486:
	.long	0
	.long	1096564743
	.align 8
.LC487:
	.long	0
	.long	1096564736
	.align 8
.LC488:
	.long	0
	.long	1079803904
	.align 8
.LC489:
	.long	0
	.long	1096566528
	.align 8
.LC490:
	.long	0
	.long	1079820288
	.align 8
.LC491:
	.long	0
	.long	1096568384
	.align 8
.LC492:
	.long	0
	.long	1079836672
	.align 8
.LC493:
	.long	0
	.long	1096570176
	.align 8
.LC494:
	.long	0
	.long	1079853056
	.align 8
.LC495:
	.long	0
	.long	1096571968
	.align 8
.LC496:
	.long	0
	.long	1079869440
	.align 8
.LC497:
	.long	0
	.long	1096113216
	.align 8
.LC498:
	.long	0
	.long	1079885824
	.align 8
.LC499:
	.long	0
	.long	1095547008
	.align 8
.LC500:
	.long	0
	.long	1079902208
	.align 8
.LC501:
	.long	0
	.long	1094480128
	.align 8
.LC502:
	.long	0
	.long	1079918592
	.align 8
.LC503:
	.long	0
	.long	1088176128
	.align 8
.LC504:
	.long	0
	.long	1079934976
	.align 8
.LC505:
	.long	0
	.long	1088177920
	.align 8
.LC506:
	.long	0
	.long	1079951360
	.align 8
.LC507:
	.long	0
	.long	1088179776
	.align 8
.LC508:
	.long	0
	.long	1079967744
	.align 8
.LC509:
	.long	0
	.long	1088181568
	.align 8
.LC510:
	.long	0
	.long	1088183360
	.align 8
.LC511:
	.long	0
	.long	1080000512
	.align 8
.LC512:
	.long	0
	.long	1087724608
	.align 8
.LC513:
	.long	0
	.long	1080016896
	.align 8
.LC514:
	.long	0
	.long	1087158400
	.align 8
.LC515:
	.long	0
	.long	1086091520
	.align 8
.LC516:
	.long	-2147483648
	.long	1095539896
	.align 8
.LC517:
	.long	1073741824
	.long	1095847516
	.align 8
.LC518:
	.long	1073741824
	.long	1096109660
	.align 8
.LC519:
	.long	1073741824
	.long	1096306268
	.align 8
.LC520:
	.long	1073741824
	.long	1096568412
	.align 8
.LC521:
	.long	1073741824
	.long	1096568408
	.align 8
.LC522:
	.long	1073741824
	.long	1096568405
	.align 8
.LC523:
	.long	1073741824
	.long	1096568401
	.align 8
.LC524:
	.long	1073741824
	.long	1096568398
	.align 8
.LC525:
	.long	1073741824
	.long	1096569166
	.align 8
.LC526:
	.long	1073741824
	.long	1096570190
	.align 8
.LC527:
	.long	1073741824
	.long	1096570958
	.align 8
.LC528:
	.long	1073741824
	.long	1096571982
	.align 8
.LC529:
	.long	1073741824
	.long	1096309838
	.align 8
.LC530:
	.long	1073741824
	.long	1096113230
	.align 8
.LC531:
	.long	1073741824
	.long	1095851086
	.align 8
.LC532:
	.long	-2147483648
	.long	1095547036
	.align 8
.LC533:
	.long	-2147483648
	.long	1095547042
	.align 8
.LC534:
	.long	-2147483648
	.long	1095547050
	.align 8
.LC535:
	.long	-2147483648
	.long	1095547056
	.align 8
.LC536:
	.long	-2147483648
	.long	1095547064
	.align 8
.LC537:
	.long	-2147483648
	.long	1095545016
	.align 8
.LC538:
	.long	-2147483648
	.long	1095543480
	.align 8
.LC539:
	.long	-2147483648
	.long	1095541432
	.align 8
.LC540:
	.long	1073741824
	.long	1096045660
	.align 8
.LC541:
	.long	1073741824
	.long	1096176732
	.align 8
.LC542:
	.long	1073741824
	.long	1096307804
	.align 8
.LC543:
	.long	1073741824
	.long	1096438876
	.align 8
.LC544:
	.long	1073741824
	.long	1096569948
	.align 8
.LC545:
	.long	1073741824
	.long	1096569946
	.align 8
.LC546:
	.long	0
	.long	1080287232
	.align 8
.LC547:
	.long	1073741824
	.long	1096569944
	.align 8
.LC548:
	.long	0
	.long	1080295424
	.align 8
.LC549:
	.long	1073741824
	.long	1096569942
	.align 8
.LC550:
	.long	0
	.long	1080303616
	.align 8
.LC551:
	.long	1073741824
	.long	1096569940
	.align 8
.LC552:
	.long	1073741824
	.long	1096570452
	.align 8
.LC553:
	.long	0
	.long	1080320000
	.align 8
.LC554:
	.long	1073741824
	.long	1096570964
	.align 8
.LC555:
	.long	0
	.long	1080328192
	.align 8
.LC556:
	.long	1073741824
	.long	1096571476
	.align 8
.LC557:
	.long	0
	.long	1080336384
	.align 8
.LC558:
	.long	1073741824
	.long	1096571988
	.align 8
.LC559:
	.long	0
	.long	1080344576
	.align 8
.LC560:
	.long	1073741824
	.long	1096440916
	.align 8
.LC561:
	.long	0
	.long	1080352768
	.align 8
.LC562:
	.long	1073741824
	.long	1096309844
	.align 8
.LC563:
	.long	0
	.long	1080360960
	.align 8
.LC564:
	.long	1073741824
	.long	1096178772
	.align 8
.LC565:
	.long	0
	.long	1080369152
	.align 8
.LC566:
	.long	1073741824
	.long	1096047700
	.align 8
.LC567:
	.long	1073741824
	.long	1096047702
	.align 8
.LC568:
	.long	0
	.long	1080385536
	.align 8
.LC569:
	.long	1073741824
	.long	1096047704
	.align 8
.LC570:
	.long	0
	.long	1080393728
	.align 8
.LC571:
	.long	1073741824
	.long	1096047706
	.align 8
.LC572:
	.long	0
	.long	1080401920
	.align 8
.LC573:
	.long	1073741824
	.long	1096047708
	.align 8
.LC574:
	.long	0
	.long	1080410112
	.align 8
.LC575:
	.long	1073741824
	.long	1096047196
	.align 8
.LC576:
	.long	0
	.long	1080418304
	.align 8
.LC577:
	.long	1073741824
	.long	1096046684
	.align 8
.LC578:
	.long	0
	.long	1080426496
	.align 8
.LC579:
	.long	1073741824
	.long	1096046172
	.align 8
.LC580:
	.long	0
	.long	1080434688
	.align 8
.LC581:
	.long	0
	.long	1080442880
	.align 8
.LC582:
	.long	0
	.long	1093664833
	.align 8
.LC583:
	.long	0
	.long	1080451072
	.align 8
.LC584:
	.long	-2147483648
	.long	1094713376
	.align 8
.LC585:
	.long	0
	.long	1080459264
	.align 8
.LC586:
	.long	-2147483648
	.long	1095270432
	.align 8
.LC587:
	.long	0
	.long	1080467456
	.align 8
.LC588:
	.long	1073741824
	.long	1095778320
	.align 8
.LC589:
	.long	1073741824
	.long	1095778316
	.align 8
.LC590:
	.long	0
	.long	1080483840
	.align 8
.LC591:
	.long	0
	.long	1095778312
	.align 8
.LC592:
	.long	0
	.long	1080492032
	.align 8
.LC593:
	.long	0
	.long	1095778308
	.align 8
.LC594:
	.long	0
	.long	1080500224
	.align 8
.LC595:
	.long	0
	.long	1095778304
	.align 8
.LC596:
	.long	0
	.long	1080508416
	.align 8
.LC597:
	.long	0
	.long	1095779328
	.align 8
.LC598:
	.long	0
	.long	1080516608
	.align 8
.LC599:
	.long	0
	.long	1095780352
	.align 8
.LC600:
	.long	0
	.long	1080524800
	.align 8
.LC601:
	.long	0
	.long	1095781440
	.align 8
.LC602:
	.long	0
	.long	1080532992
	.align 8
.LC603:
	.long	0
	.long	1095782464
	.align 8
.LC604:
	.long	0
	.long	1095278720
	.align 8
.LC605:
	.long	0
	.long	1080549376
	.align 8
.LC606:
	.long	0
	.long	1094721664
	.align 8
.LC607:
	.long	0
	.long	1080557568
	.align 8
.LC608:
	.long	0
	.long	1093681408
	.align 8
.LC609:
	.long	0
	.long	1080565760
	.align 8
.LC610:
	.long	0
	.long	1087389696
	.align 8
.LC611:
	.long	0
	.long	1080573952
	.align 8
.LC612:
	.long	0
	.long	1087390720
	.align 8
.LC613:
	.long	0
	.long	1080582144
	.align 8
.LC614:
	.long	0
	.long	1087391744
	.align 8
.LC615:
	.long	0
	.long	1080590336
	.align 8
.LC616:
	.long	0
	.long	1087392832
	.align 8
.LC617:
	.long	0
	.long	1080598528
	.align 8
.LC618:
	.long	0
	.long	1087393856
	.align 8
.LC619:
	.long	0
	.long	1086890112
	.align 8
.LC620:
	.long	0
	.long	1080614912
	.align 8
.LC621:
	.long	0
	.long	1086333056
	.align 8
.LC622:
	.long	0
	.long	1080623104
	.align 8
.LC623:
	.long	0
	.long	1085292800
	.align 8
.LC624:
	.long	0
	.long	1080631296
	.align 8
.LC625:
	.long	-2147483648
	.long	1094717472
	.align 8
.LC626:
	.long	-2147483648
	.long	1094979616
	.align 8
.LC627:
	.long	0
	.long	1080647680
	.align 8
.LC628:
	.long	-2147483648
	.long	1095274528
	.align 8
.LC629:
	.long	0
	.long	1080655872
	.align 8
.LC630:
	.long	-2147483648
	.long	1095536672
	.align 8
.LC631:
	.long	0
	.long	1080664064
	.align 8
.LC632:
	.long	1073741824
	.long	1095780368
	.align 8
.LC633:
	.long	0
	.long	1080672256
	.align 8
.LC634:
	.long	1073741824
	.long	1095780366
	.align 8
.LC635:
	.long	0
	.long	1080680448
	.align 8
.LC636:
	.long	1073741824
	.long	1095780364
	.align 8
.LC637:
	.long	0
	.long	1080688640
	.align 8
.LC638:
	.long	0
	.long	1095780362
	.align 8
.LC639:
	.long	0
	.long	1080696832
	.align 8
.LC640:
	.long	0
	.long	1095780360
	.align 8
.LC641:
	.long	0
	.long	1080705024
	.align 8
.LC642:
	.long	0
	.long	1095780872
	.align 8
.LC643:
	.long	0
	.long	1080713216
	.align 8
.LC644:
	.long	0
	.long	1095781448
	.align 8
.LC645:
	.long	0
	.long	1080721408
	.align 8
.LC646:
	.long	0
	.long	1095781960
	.align 8
.LC647:
	.long	0
	.long	1080729600
	.align 8
.LC648:
	.long	0
	.long	1095782472
	.align 8
.LC649:
	.long	0
	.long	1080737792
	.align 8
.LC650:
	.long	0
	.long	1095540880
	.align 8
.LC651:
	.long	0
	.long	1080745984
	.align 8
.LC652:
	.long	0
	.long	1095278736
	.align 8
.LC653:
	.long	0
	.long	1080754176
	.align 8
.LC654:
	.long	0
	.long	1094983824
	.align 8
.LC655:
	.long	0
	.long	1080762368
	.align 8
.LC656:
	.long	0
	.long	1094721680
	.align 8
.LC657:
	.long	0
	.long	1080770560
	.align 8
.LC658:
	.long	0
	.long	1094721684
	.align 8
.LC659:
	.long	-2147483648
	.long	1094721688
	.align 8
.LC660:
	.long	0
	.long	1080786944
	.align 8
.LC661:
	.long	-2147483648
	.long	1094721692
	.align 8
.LC662:
	.long	0
	.long	1080795136
	.align 8
.LC663:
	.long	-2147483648
	.long	1094721696
	.align 8
.LC664:
	.long	0
	.long	1080803328
	.align 8
.LC665:
	.long	-2147483648
	.long	1094720672
	.align 8
.LC666:
	.long	-2147483648
	.long	1094719648
	.align 8
.LC667:
	.long	0
	.long	1080819712
	.align 8
.LC668:
	.long	-2147483648
	.long	1094718496
	.align 8
.LC669:
	.long	0
	.long	1080827904
	.align 8
.LC670:
	.long	-2147483648
	.long	1095145120
	.align 8
.LC671:
	.long	0
	.long	1080836096
	.align 8
.LC672:
	.long	-2147483648
	.long	1095276192
	.align 8
.LC673:
	.long	-2147483648
	.long	1095407264
	.align 8
.LC674:
	.long	0
	.long	1080852480
	.align 8
.LC675:
	.long	-2147483648
	.long	1095669408
	.align 8
.LC676:
	.long	0
	.long	1080860672
	.align 8
.LC677:
	.long	1073741824
	.long	1095781200
	.align 8
.LC678:
	.long	0
	.long	1080868864
	.align 8
.LC679:
	.long	1073741824
	.long	1095781199
	.align 8
.LC680:
	.long	0
	.long	1080877056
	.align 8
.LC681:
	.long	1073741824
	.long	1095781197
	.align 8
.LC682:
	.long	0
	.long	1080885248
	.align 8
.LC683:
	.long	1073741824
	.long	1095781196
	.align 8
.LC684:
	.long	0
	.long	1080893440
	.align 8
.LC685:
	.long	1073741824
	.long	1095781195
	.align 8
.LC686:
	.long	0
	.long	1080901632
	.align 8
.LC687:
	.long	1073741824
	.long	1095781451
	.align 8
.LC688:
	.long	1073741824
	.long	1095781707
	.align 8
.LC689:
	.long	0
	.long	1080918016
	.align 8
.LC690:
	.long	1073741824
	.long	1095782219
	.align 8
.LC691:
	.long	0
	.long	1080926208
	.align 8
.LC692:
	.long	1073741824
	.long	1095782475
	.align 8
.LC693:
	.long	0
	.long	1080934400
	.align 8
.LC694:
	.long	-2147483648
	.long	1095671958
	.align 8
.LC695:
	.long	0
	.long	1080942592
	.align 8
.LC696:
	.long	-2147483648
	.long	1095409814
	.align 8
.LC697:
	.long	0
	.long	1080950784
	.align 8
.LC698:
	.long	-2147483648
	.long	1095278742
	.align 8
.LC699:
	.long	0
	.long	1080958976
	.align 8
.LC700:
	.long	-2147483648
	.long	1095147670
	.align 8
.LC701:
	.long	0
	.long	1080967168
	.align 8
.LC702:
	.long	-2147483648
	.long	1095147672
	.align 8
.LC703:
	.long	0
	.long	1080975360
	.align 8
.LC704:
	.long	-2147483648
	.long	1095147674
	.align 8
.LC705:
	.long	0
	.long	1080983552
	.align 8
.LC706:
	.long	-2147483648
	.long	1095147678
	.align 8
.LC707:
	.long	0
	.long	1080991744
	.align 8
.LC708:
	.long	-2147483648
	.long	1095147680
	.align 8
.LC709:
	.long	0
	.long	1080999936
	.align 8
.LC710:
	.long	-2147483648
	.long	1095147168
	.align 8
.LC711:
	.long	0
	.long	1081008128
	.align 8
.LC712:
	.long	-2147483648
	.long	1095146144
	.align 8
.LC713:
	.long	0
	.long	1081016320
	.align 8
.LC714:
	.long	-2147483648
	.long	1095145632
	.align 8
.LC715:
	.long	0
	.long	1081024512
	.align 8
.LC716:
	.long	0
	.long	1097856512
	.align 8
.LC717:
	.long	0
	.long	1081032704
	.align 8
.LC718:
	.long	0
	.long	1097857024
	.align 8
.LC719:
	.long	0
	.long	1081040896
	.align 8
.LC720:
	.long	0
	.long	1095368576
	.align 8
.LC721:
	.long	0
	.long	1081049088
	.align 8
.LC722:
	.long	-2147483648
	.long	1095368601
	.align 8
.LC723:
	.long	0
	.long	1081057280
	.align 8
.LC724:
	.long	0
	.long	1089463904
	.align 8
.LC725:
	.long	0
	.long	1081065472
	.align 8
.LC726:
	.long	-2147483648
	.long	1096400857
	.align 8
.LC727:
	.long	0
	.long	1089465536
	.align 8
.LC728:
	.long	0
	.long	1094980628
	.section	.rodata.cst4,"aM",@progbits,4
	.align 4
.LC729:
	.long	1149689856
	.align 4
.LC730:
	.long	1156571136
	.section	.rodata.cst8
	.align 8
.LC731:
	.long	0
	.long	1088946176
	.align 8
.LC732:
	.long	0
	.long	1088946208
	.align 8
.LC736:
	.long	0
	.long	1088946336
	.align 8
.LC737:
	.long	0
	.long	1088946496
	.align 8
.LC738:
	.long	0
	.long	1088946688
	.align 8
.LC739:
	.long	0
	.long	1088946880
	.align 8
.LC740:
	.long	0
	.long	1088947072
	.align 8
.LC741:
	.long	0
	.long	1088947264
	.align 8
.LC742:
	.long	0
	.long	1088947456
	.align 8
.LC743:
	.long	0
	.long	1088947648
	.align 8
.LC744:
	.long	0
	.long	1088947840
	.align 8
.LC745:
	.long	0
	.long	1088948032
	.align 8
.LC746:
	.long	0
	.long	1088948224
	.align 8
.LC747:
	.long	0
	.long	1088948448
	.align 8
.LC748:
	.long	0
	.long	1088948576
	.align 8
.LC749:
	.long	0
	.long	1088948800
	.align 8
.LC750:
	.long	0
	.long	1088948992
	.align 8
.LC751:
	.long	0
	.long	1088949184
	.align 8
.LC752:
	.long	0
	.long	1088949376
	.align 8
.LC753:
	.long	0
	.long	1088949568
	.align 8
.LC754:
	.long	0
	.long	1088949760
	.align 8
.LC755:
	.long	0
	.long	1088949952
	.align 8
.LC756:
	.long	0
	.long	1088950144
	.align 8
.LC757:
	.long	0
	.long	1088950336
	.align 8
.LC758:
	.long	0
	.long	1088950528
	.align 8
.LC759:
	.long	0
	.long	1088950720
	.align 8
.LC760:
	.long	0
	.long	1088950912
	.align 8
.LC761:
	.long	0
	.long	1088951104
	.align 8
.LC762:
	.long	0
	.long	1088951296
	.align 8
.LC763:
	.long	0
	.long	1088951360
	.section	.rodata.cst16
	.align 16
.LC764:
	.long	0
	.long	1082556416
	.long	0
	.long	1082261504
	.section	.rodata.cst8
	.align 8
.LC769:
	.long	0
	.long	1068498944
	.section	.rodata.cst4
	.align 4
.LC770:
	.long	1106771968
	.align 4
.LC773:
	.long	1103101952
	.align 4
.LC780:
	.long	1067450368
	.align 4
.LC781:
	.long	1141899264
	.align 4
.LC782:
	.long	1144258560
	.align 4
.LC783:
	.long	1065353216
	.align 4
.LC784:
	.long	-1082130432
	.section	.rodata.cst8
	.align 8
.LC786:
	.long	0
	.long	1081257984
	.align 8
.LC787:
	.long	0
	.long	1083176960
	.align 8
.LC1304:
	.long	-1717986918
	.long	1069128089
	.align 8
.LC1305:
	.long	1202590843
	.long	1065646817
	.align 8
.LC1306:
	.long	-755914244
	.long	1062232653
	.align 8
.LC2618:
	.long	0
	.long	1088951392
	.align 8
.LC2659:
	.long	0
	.long	1088951616
	.align 8
.LC2660:
	.long	0
	.long	1088951648
	.align 8
.LC2661:
	.long	0
	.long	1088953536
	.align 8
.LC2664:
	.long	0
	.long	1088953728
	.align 8
.LC2665:
	.long	0
	.long	1088953696
	.align 8
.LC2666:
	.long	0
	.long	1088953760
	.align 8
.LC2667:
	.long	0
	.long	1088952608
	.align 8
.LC2668:
	.long	0
	.long	1088953856
	.align 8
.LC2669:
	.long	0
	.long	1088953888
	.align 8
.LC2670:
	.long	0
	.long	1088953920
	.align 8
.LC2672:
	.long	0
	.long	1088953952
	.align 8
.LC2675:
	.long	0
	.long	1088953984
	.align 8
.LC2677:
	.long	0
	.long	1088954016
	.align 8
.LC2678:
	.long	0
	.long	1088954048
	.align 8
.LC2679:
	.long	0
	.long	1088954080
	.align 8
.LC2683:
	.long	0
	.long	1088954112
	.align 8
.LC2687:
	.long	0
	.long	1088954144
	.align 8
.LC2688:
	.long	0
	.long	1088954176
	.align 8
.LC2689:
	.long	0
	.long	1088954208
	.align 8
.LC2690:
	.long	0
	.long	1088954240
	.align 8
.LC2691:
	.long	0
	.long	1088954272
	.align 8
.LC2692:
	.long	0
	.long	1088954304
	.align 8
.LC2693:
	.long	0
	.long	1088954336
	.align 8
.LC2694:
	.long	0
	.long	1088954368
	.align 8
.LC2695:
	.long	0
	.long	1088954400
	.section	.rodata.cst16
	.align 16
.LC2696:
	.long	0
	.long	1082724352
	.long	0
	.long	0
	.align 16
.LC2697:
	.long	0
	.long	0
	.long	0
	.long	1081630720
	.align 16
.LC2698:
	.long	0
	.long	1082724352
	.long	0
	.long	1081630720
	.section	.rodata.cst8
	.align 8
.LC2699:
	.long	0
	.long	1088954432
	.section	.rodata.cst4
	.align 4
.LC2700:
	.long	1086918620
	.section	.rodata.cst8
	.align 8
.LC2701:
	.long	0
	.long	1088954464
	.align 8
.LC2702:
	.long	0
	.long	1088954528
	.align 8
.LC2703:
	.long	0
	.long	1088954560
	.align 8
.LC2704:
	.long	0
	.long	1088954592
	.align 8
.LC2705:
	.long	0
	.long	1088954624
	.align 8
.LC2706:
	.long	0
	.long	1088954656
	.align 8
.LC2707:
	.long	0
	.long	1087373312
	.align 8
.LC2708:
	.long	0
	.long	1088396288
	.align 8
.LC2709:
	.long	0
	.long	1092878336
	.align 8
.LC2710:
	.long	0
	.long	1093009406
	.align 8
.LC2711:
	.long	0
	.long	1088954880
	.align 8
.LC2712:
	.long	0
	.long	1088955104
	.align 8
.LC2713:
	.long	0
	.long	1088955328
	.align 8
.LC2714:
	.long	0
	.long	1088955552
	.align 8
.LC2715:
	.long	0
	.long	1088955776
	.align 8
.LC2716:
	.long	0
	.long	1088956000
	.align 8
.LC2717:
	.long	0
	.long	1088956320
	.align 8
.LC2718:
	.long	0
	.long	1088956640
	.align 8
.LC2719:
	.long	0
	.long	1088956960
	.align 8
.LC2720:
	.long	0
	.long	1088957280
	.align 8
.LC2721:
	.long	0
	.long	1088957600
	.align 8
.LC2722:
	.long	0
	.long	1088957920
	.align 8
.LC2723:
	.long	0
	.long	1088957952
	.align 8
.LC2724:
	.long	0
	.long	1088957984
	.align 8
.LC2725:
	.long	0
	.long	1088958016
	.align 8
.LC2726:
	.long	0
	.long	1088958048
	.align 8
.LC2727:
	.long	0
	.long	1088958080
	.align 8
.LC2728:
	.long	0
	.long	1088958112
	.align 8
.LC2729:
	.long	0
	.long	1088958144
	.align 8
.LC2730:
	.long	0
	.long	1088958176
	.align 8
.LC2731:
	.long	0
	.long	1088958208
	.align 8
.LC2732:
	.long	0
	.long	1088958240
	.align 8
.LC2733:
	.long	0
	.long	1088958272
	.align 8
.LC2734:
	.long	0
	.long	1088958304
	.align 8
.LC2735:
	.long	0
	.long	1088958336
	.align 8
.LC2736:
	.long	0
	.long	1088958368
	.align 8
.LC2737:
	.long	0
	.long	1088958400
	.align 8
.LC2738:
	.long	0
	.long	1088958432
	.align 8
.LC2739:
	.long	0
	.long	1088958464
	.align 8
.LC2740:
	.long	0
	.long	1089278496
	.align 8
.LC2741:
	.long	0
	.long	1089278528
	.align 8
.LC2742:
	.long	0
	.long	1089278560
	.align 8
.LC2743:
	.long	0
	.long	1089279232
	.align 8
.LC2744:
	.long	0
	.long	1089279264
	.align 8
.LC2745:
	.long	0
	.long	1089279296
	.align 8
.LC2746:
	.long	0
	.long	1089279328
	.align 8
.LC2747:
	.long	0
	.long	1089279360
	.align 8
.LC2748:
	.long	0
	.long	1089279392
	.align 8
.LC2749:
	.long	0
	.long	1089279424
	.align 8
.LC2750:
	.long	0
	.long	1089279456
	.align 8
.LC2751:
	.long	0
	.long	1089279488
	.align 8
.LC2752:
	.long	0
	.long	1089279520
	.align 8
.LC2753:
	.long	0
	.long	1089279552
	.align 8
.LC2754:
	.long	0
	.long	1089279584
	.align 8
.LC2755:
	.long	0
	.long	1089279616
	.align 8
.LC2756:
	.long	0
	.long	1089279648
	.align 8
.LC2757:
	.long	0
	.long	1089279680
	.align 8
.LC2758:
	.long	0
	.long	1089279712
	.align 8
.LC2759:
	.long	0
	.long	1089279744
	.align 8
.LC2760:
	.long	0
	.long	1089279776
	.align 8
.LC2761:
	.long	0
	.long	1089279808
	.align 8
.LC2762:
	.long	0
	.long	1089279840
	.align 8
.LC2763:
	.long	0
	.long	1089279872
	.align 8
.LC2764:
	.long	0
	.long	1089279904
	.align 8
.LC2765:
	.long	0
	.long	1089279936
	.align 8
.LC2766:
	.long	0
	.long	1089279968
	.align 8
.LC2767:
	.long	0
	.long	1089280000
	.align 8
.LC2768:
	.long	0
	.long	1089280032
	.align 8
.LC2769:
	.long	0
	.long	1089280064
	.align 8
.LC2770:
	.long	0
	.long	1089280096
	.align 8
.LC2771:
	.long	0
	.long	1089280128
	.align 8
.LC2772:
	.long	0
	.long	1089280160
	.align 8
.LC2773:
	.long	0
	.long	1089280192
	.align 8
.LC2774:
	.long	0
	.long	1089280224
	.align 8
.LC2775:
	.long	0
	.long	1089280256
	.align 8
.LC2776:
	.long	0
	.long	1089280288
	.align 8
.LC2777:
	.long	0
	.long	1089280320
	.align 8
.LC2778:
	.long	0
	.long	1089280352
	.align 8
.LC2779:
	.long	0
	.long	1089280384
	.align 8
.LC2780:
	.long	0
	.long	1089280416
	.align 8
.LC2781:
	.long	0
	.long	1089280448
	.align 8
.LC2782:
	.long	0
	.long	1089280480
	.align 8
.LC2783:
	.long	0
	.long	1089280512
	.align 8
.LC2784:
	.long	0
	.long	1089280544
	.align 8
.LC2785:
	.long	0
	.long	1089280576
	.align 8
.LC2786:
	.long	0
	.long	1089280608
	.align 8
.LC2787:
	.long	0
	.long	1089280640
	.align 8
.LC2788:
	.long	0
	.long	1089280672
	.align 8
.LC2789:
	.long	0
	.long	1089280704
	.align 8
.LC2790:
	.long	0
	.long	1089280736
	.align 8
.LC2791:
	.long	0
	.long	1089280768
	.align 8
.LC2792:
	.long	0
	.long	1089280800
	.align 8
.LC2793:
	.long	0
	.long	1089280832
	.align 8
.LC2794:
	.long	0
	.long	1089280864
	.align 8
.LC2795:
	.long	0
	.long	1089280896
	.align 8
.LC2796:
	.long	0
	.long	1089280928
	.align 8
.LC2797:
	.long	0
	.long	1089280960
	.align 8
.LC2798:
	.long	0
	.long	1089280992
	.align 8
.LC2799:
	.long	0
	.long	1089281024
	.align 8
.LC2800:
	.long	0
	.long	1089281056
	.align 8
.LC2801:
	.long	0
	.long	1089281088
	.align 8
.LC2802:
	.long	0
	.long	1089281120
	.align 8
.LC2803:
	.long	0
	.long	1088961152
	.align 8
.LC2804:
	.long	0
	.long	1088961440
	.align 8
.LC2805:
	.long	0
	.long	1088955808
	.align 8
.LC2806:
	.long	0
	.long	1088955840
	.align 8
.LC2807:
	.long	0
	.long	1088955872
	.align 8
.LC2808:
	.long	0
	.long	1088955904
	.align 8
.LC2809:
	.long	0
	.long	1088955936
	.align 8
.LC2810:
	.long	0
	.long	1074528256
	.align 8
.LC2811:
	.long	0
	.long	1077444608
	.align 8
.LC2812:
	.long	0
	.long	1071644672
	.align 8
.LC2813:
	.long	0
	.long	1083186176
	.align 8
.LC2814:
	.long	0
	.long	1089077312
	.align 8
.LC2815:
	.long	0
	.long	1089077376
	.align 8
.LC2816:
	.long	0
	.long	1089077440
	.align 8
.LC2817:
	.long	0
	.long	1089077504
	.align 8
.LC2818:
	.long	0
	.long	1089077568
	.align 8
.LC2819:
	.long	0
	.long	1089077632
	.align 8
.LC2820:
	.long	0
	.long	1089077696
	.align 8
.LC2821:
	.long	1413754136
	.long	1074340347
	.align 8
.LC2824:
	.long	0
	.long	2146435072
	.section	.rodata.cst16
	.align 16
.LC2832:
	.long	0
	.long	1074003968
	.long	0
	.long	1073741824
	.section	.rodata.cst8
	.align 8
.LC2833:
	.long	0
	.long	1092878338
	.align 8
.LC2834:
	.long	0
	.long	1092878340
	.align 8
.LC2835:
	.long	0
	.long	1093205984
	.align 8
.LC2836:
	.long	0
	.long	1093140480
	.align 8
.LC2853:
	.long	0
	.long	1089470400
	.section	.rodata.cst4
	.align 4
.LC2856:
	.long	1088421888
	.align 4
.LC2857:
	.long	1146601472
	.ident	"GCC: (GNU) 10.2.0"
	.section	.note.GNU-stack,"",@progbits
