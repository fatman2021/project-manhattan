	.file	"c64dvd-glsl.c"
	.intel_syntax noprefix
	.text
	.p2align 4
	.globl	INS_ASLA
	.type	INS_ASLA, @function
INS_ASLA:
.L2:
.L3:
.L4:
	movsx	rax, BYTE PTR 8[rdi]
	pxor	xmm0, xmm0
	mov	rdx, rax
	shr	rax, 63
	add	edx, edx
	mov	rsi, rax
	mov	rax, QWORD PTR [rdi]
	movzx	ecx, dl
	mov	BYTE PTR 8[rdi], dl
	cvtsi2sd	xmm0, rcx
	and	rax, -4
	xor	ecx, ecx
	comisd	xmm0, QWORD PTR .LC0[rip]
	sete	cl
	or	rax, rsi
	and	edx, 128
	add	rcx, rcx
	or	rax, rcx
	and	al, 127
	or	rax, rdx
	mov	QWORD PTR [rdi], rax
	ret
	.size	INS_ASLA, .-INS_ASLA
	.p2align 4
	.globl	INS_CLC
	.type	INS_CLC, @function
INS_CLC:
.L9:
	and	QWORD PTR [rdi], -2
	ret
	.size	INS_CLC, .-INS_CLC
	.p2align 4
	.globl	INS_CLD
	.type	INS_CLD, @function
INS_CLD:
.L11:
	and	QWORD PTR [rdi], -9
	ret
	.size	INS_CLD, .-INS_CLD
	.p2align 4
	.globl	INS_CLI
	.type	INS_CLI, @function
INS_CLI:
.L13:
	and	QWORD PTR [rdi], -5
	ret
	.size	INS_CLI, .-INS_CLI
	.p2align 4
	.globl	INS_CLV
	.type	INS_CLV, @function
INS_CLV:
.L15:
	and	QWORD PTR [rdi], -65
	ret
	.size	INS_CLV, .-INS_CLV
	.p2align 4
	.globl	INS_DEX
	.type	INS_DEX, @function
INS_DEX:
.L17:
.L18:
.L19:
	movsx	eax, BYTE PTR 9[rdi]
	pxor	xmm0, xmm0
	xor	ecx, ecx
	cvtsi2sd	xmm0, eax
	subsd	xmm0, QWORD PTR .LC1[rip]
	cvttsd2si	edx, xmm0
	pxor	xmm0, xmm0
	movzx	eax, dl
	mov	BYTE PTR 9[rdi], dl
	cvtsi2sd	xmm0, rax
	comisd	xmm0, QWORD PTR .LC0[rip]
	mov	rax, QWORD PTR [rdi]
	sete	cl
	and	al, 125
	and	edx, 128
	add	rcx, rcx
	or	rax, rcx
	or	rax, rdx
	mov	QWORD PTR [rdi], rax
	ret
	.size	INS_DEX, .-INS_DEX
	.p2align 4
	.globl	INS_DEY
	.type	INS_DEY, @function
INS_DEY:
.L23:
.L24:
.L25:
	movsx	eax, BYTE PTR 10[rdi]
	pxor	xmm0, xmm0
	xor	ecx, ecx
	cvtsi2sd	xmm0, eax
	subsd	xmm0, QWORD PTR .LC1[rip]
	cvttsd2si	edx, xmm0
	pxor	xmm0, xmm0
	movzx	eax, dl
	mov	BYTE PTR 10[rdi], dl
	cvtsi2sd	xmm0, rax
	comisd	xmm0, QWORD PTR .LC0[rip]
	mov	rax, QWORD PTR [rdi]
	sete	cl
	and	al, 125
	and	edx, 128
	add	rcx, rcx
	or	rax, rcx
	or	rax, rdx
	mov	QWORD PTR [rdi], rax
	ret
	.size	INS_DEY, .-INS_DEY
	.p2align 4
	.globl	INS_JMP
	.type	INS_JMP, @function
INS_JMP:
.L29:
	movzx	eax, WORD PTR 64[rdi]
	mov	WORD PTR 12[rdi], ax
	ret
	.size	INS_JMP, .-INS_JMP
	.p2align 4
	.globl	INS_LSRA
	.type	INS_LSRA, @function
INS_LSRA:
.L31:
.L32:
	movzx	edx, BYTE PTR 8[rdi]
	mov	rax, QWORD PTR [rdi]
	pxor	xmm0, xmm0
	mov	rcx, rdx
	shr	dl
	and	rax, -4
	mov	BYTE PTR 8[rdi], dl
	movzx	edx, dl
	and	ecx, 1
	cvtsi2sd	xmm0, rdx
	xor	edx, edx
	comisd	xmm0, QWORD PTR .LC0[rip]
	sete	dl
	or	rax, rcx
	add	rdx, rdx
	or	rax, rdx
	and	al, 127
	mov	QWORD PTR [rdi], rax
	ret
	.size	INS_LSRA, .-INS_LSRA
	.p2align 4
	.globl	INS_ROLA
	.type	INS_ROLA, @function
INS_ROLA:
.L35:
	mov	rcx, QWORD PTR [rdi]
	pxor	xmm1, xmm1
	movsd	xmm0, QWORD PTR .LC1[rip]
	movzx	esi, BYTE PTR 8[rdi]
	mov	rax, rcx
	and	ecx, 1
	cvtsi2sd	xmm1, rcx
	and	rax, -2
	lea	edx, [rsi+rsi]
	comisd	xmm1, xmm0
	je	.L50
	mov	QWORD PTR CARY$[rip], 0x000000000
	test	sil, sil
	js	.L51
.L49:
	mov	BYTE PTR 8[rdi], dl
	jmp	.L38
	.p2align 4,,10
	.p2align 3
.L50:
	mov	rcx, rax
	movsd	QWORD PTR CARY$[rip], xmm0
	or	rcx, 1
	test	sil, sil
	cmovs	rax, rcx
	or	edx, 1
	mov	BYTE PTR 8[rdi], dl
.L38:
.L39:
.L40:
	movzx	ecx, dl
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rcx
	xor	ecx, ecx
	comisd	xmm0, QWORD PTR .LC0[rip]
	sete	cl
	and	al, 125
	and	edx, 128
	add	rcx, rcx
	or	rax, rcx
	or	rax, rdx
	mov	QWORD PTR [rdi], rax
	ret
	.p2align 4,,10
	.p2align 3
.L51:
	or	rax, 1
	jmp	.L49
	.size	INS_ROLA, .-INS_ROLA
	.p2align 4
	.globl	INS_RORA
	.type	INS_RORA, @function
INS_RORA:
.L53:
	mov	rcx, QWORD PTR [rdi]
	pxor	xmm1, xmm1
	movzx	edx, BYTE PTR 8[rdi]
	movsd	xmm0, QWORD PTR .LC1[rip]
	mov	rax, rcx
	and	ecx, 1
	mov	esi, edx
	shr	dl
	cvtsi2sd	xmm1, rcx
	and	esi, 1
	and	rax, -2
	comisd	xmm1, xmm0
	je	.L65
	mov	QWORD PTR CARY$[rip], 0x000000000
	test	sil, sil
	jne	.L66
.L64:
	xor	ecx, ecx
	test	dl, dl
	mov	BYTE PTR 8[rdi], dl
	sete	cl
	add	rcx, rcx
	jmp	.L56
	.p2align 4,,10
	.p2align 3
.L65:
	mov	rcx, rax
	movsd	QWORD PTR CARY$[rip], xmm0
	or	rcx, 1
	test	sil, sil
	cmovne	rax, rcx
	or	edx, -128
	xor	ecx, ecx
	mov	BYTE PTR 8[rdi], dl
.L56:
	and	al, 125
	and	edx, 128
	or	rax, rcx
	or	rax, rdx
	mov	QWORD PTR [rdi], rax
	ret
	.p2align 4,,10
	.p2align 3
.L66:
	or	rax, 1
	jmp	.L64
	.size	INS_RORA, .-INS_RORA
	.p2align 4
	.globl	INS_SEC
	.type	INS_SEC, @function
INS_SEC:
.L68:
	or	QWORD PTR [rdi], 1
	ret
	.size	INS_SEC, .-INS_SEC
	.p2align 4
	.globl	INS_SED
	.type	INS_SED, @function
INS_SED:
.L70:
	or	QWORD PTR [rdi], 8
	ret
	.size	INS_SED, .-INS_SED
	.p2align 4
	.globl	INS_SEI
	.type	INS_SEI, @function
INS_SEI:
.L72:
	or	QWORD PTR [rdi], 4
	ret
	.size	INS_SEI, .-INS_SEI
	.p2align 4
	.globl	INS_TAX
	.type	INS_TAX, @function
INS_TAX:
.L74:
.L75:
.L76:
	movzx	eax, BYTE PTR 8[rdi]
	pxor	xmm0, xmm0
	xor	ecx, ecx
	cvtsi2sd	xmm0, rax
	comisd	xmm0, QWORD PTR .LC0[rip]
	mov	rdx, rax
	mov	BYTE PTR 9[rdi], al
	mov	rax, QWORD PTR [rdi]
	sete	cl
	and	al, 125
	and	edx, 128
	add	rcx, rcx
	or	rax, rcx
	or	rax, rdx
	mov	QWORD PTR [rdi], rax
	ret
	.size	INS_TAX, .-INS_TAX
	.p2align 4
	.globl	INS_TAY
	.type	INS_TAY, @function
INS_TAY:
.L80:
.L81:
.L82:
	movzx	eax, BYTE PTR 8[rdi]
	pxor	xmm0, xmm0
	xor	ecx, ecx
	cvtsi2sd	xmm0, rax
	comisd	xmm0, QWORD PTR .LC0[rip]
	mov	rdx, rax
	mov	BYTE PTR 10[rdi], al
	mov	rax, QWORD PTR [rdi]
	sete	cl
	and	al, 125
	and	edx, 128
	add	rcx, rcx
	or	rax, rcx
	or	rax, rdx
	mov	QWORD PTR [rdi], rax
	ret
	.size	INS_TAY, .-INS_TAY
	.p2align 4
	.globl	INS_TSX
	.type	INS_TSX, @function
INS_TSX:
.L86:
.L87:
.L88:
	movzx	eax, BYTE PTR 14[rdi]
	pxor	xmm0, xmm0
	xor	ecx, ecx
	cvtsi2sd	xmm0, rax
	comisd	xmm0, QWORD PTR .LC0[rip]
	mov	rdx, rax
	mov	BYTE PTR 9[rdi], al
	mov	rax, QWORD PTR [rdi]
	sete	cl
	and	al, 125
	and	edx, 128
	add	rcx, rcx
	or	rax, rcx
	or	rax, rdx
	mov	QWORD PTR [rdi], rax
	ret
	.size	INS_TSX, .-INS_TSX
	.p2align 4
	.globl	INS_TXA
	.type	INS_TXA, @function
INS_TXA:
.L92:
.L93:
.L94:
	movzx	eax, BYTE PTR 9[rdi]
	pxor	xmm0, xmm0
	xor	ecx, ecx
	cvtsi2sd	xmm0, rax
	comisd	xmm0, QWORD PTR .LC0[rip]
	mov	rdx, rax
	mov	BYTE PTR 8[rdi], al
	mov	rax, QWORD PTR [rdi]
	sete	cl
	and	al, 125
	and	edx, 128
	add	rcx, rcx
	or	rax, rcx
	or	rax, rdx
	mov	QWORD PTR [rdi], rax
	ret
	.size	INS_TXA, .-INS_TXA
	.p2align 4
	.globl	INS_TXS
	.type	INS_TXS, @function
INS_TXS:
.L98:
	movzx	eax, BYTE PTR 9[rdi]
	mov	BYTE PTR 14[rdi], al
	ret
	.size	INS_TXS, .-INS_TXS
	.p2align 4
	.globl	INS_TYA
	.type	INS_TYA, @function
INS_TYA:
.L100:
.L101:
.L102:
	movzx	eax, BYTE PTR 10[rdi]
	pxor	xmm0, xmm0
	xor	ecx, ecx
	cvtsi2sd	xmm0, rax
	comisd	xmm0, QWORD PTR .LC0[rip]
	mov	rdx, rax
	mov	BYTE PTR 8[rdi], al
	mov	rax, QWORD PTR [rdi]
	sete	cl
	and	al, 125
	and	edx, 128
	add	rcx, rcx
	or	rax, rcx
	or	rax, rdx
	mov	QWORD PTR [rdi], rax
	ret
	.size	INS_TYA, .-INS_TYA
	.p2align 4
	.type	_ZN9SHADERTOYC1Ev, @function
_ZN9SHADERTOYC1Ev:
	pxor	xmm0, xmm0
	mov	DWORD PTR [rdi], 0
	mov	DWORD PTR 4[rdi], 0
	mov	QWORD PTR 24[rdi], 0
	movups	XMMWORD PTR 8[rdi], xmm0
	ret
	.size	_ZN9SHADERTOYC1Ev, .-_ZN9SHADERTOYC1Ev
	.p2align 4
	.globl	INS_INX
	.type	INS_INX, @function
INS_INX:
.L107:
.L108:
.L109:
	movzx	eax, BYTE PTR 9[rdi]
	mov	DWORD PTR -7[rsp], 0
	pxor	xmm0, xmm0
	xor	ecx, ecx
	mov	BYTE PTR -8[rsp], al
	movsx	eax, WORD PTR -8[rsp]
	cvtsi2sd	xmm0, eax
	addsd	xmm0, QWORD PTR .LC1[rip]
	cvttsd2si	edx, xmm0
	pxor	xmm0, xmm0
	movzx	eax, dl
	mov	BYTE PTR 9[rdi], dl
	cvtsi2sd	xmm0, rax
	comisd	xmm0, QWORD PTR .LC0[rip]
	mov	rax, QWORD PTR [rdi]
	sete	cl
	and	al, 125
	and	edx, 128
	add	rcx, rcx
	or	rax, rcx
	or	rax, rdx
	mov	QWORD PTR [rdi], rax
	ret
	.size	INS_INX, .-INS_INX
	.p2align 4
	.globl	INS_INY
	.type	INS_INY, @function
INS_INY:
.L113:
.L114:
.L115:
	movzx	eax, BYTE PTR 10[rdi]
	mov	DWORD PTR -7[rsp], 0
	pxor	xmm0, xmm0
	xor	ecx, ecx
	mov	BYTE PTR -8[rsp], al
	movsx	eax, WORD PTR -8[rsp]
	cvtsi2sd	xmm0, eax
	addsd	xmm0, QWORD PTR .LC1[rip]
	cvttsd2si	edx, xmm0
	pxor	xmm0, xmm0
	movzx	eax, dl
	mov	BYTE PTR 10[rdi], dl
	cvtsi2sd	xmm0, rax
	comisd	xmm0, QWORD PTR .LC0[rip]
	mov	rax, QWORD PTR [rdi]
	sete	cl
	and	al, 125
	and	edx, 128
	add	rcx, rcx
	or	rax, rcx
	or	rax, rdx
	mov	QWORD PTR [rdi], rax
	ret
	.size	INS_INY, .-INS_INY
	.p2align 4
	.type	_ZN8MEMORY_TD1Ev.constprop.0, @function
_ZN8MEMORY_TD1Ev.constprop.0:
	ret
	.size	_ZN8MEMORY_TD1Ev.constprop.0, .-_ZN8MEMORY_TD1Ev.constprop.0
	.p2align 4
	.globl	INS_NOP
	.type	INS_NOP, @function
INS_NOP:
	ret
	.size	INS_NOP, .-INS_NOP
	.p2align 4
	.globl	INS_UNK
	.type	INS_UNK, @function
INS_UNK:
	ret
	.size	INS_UNK, .-INS_UNK
	.section	.rodata.str1.1,"aMS",@progbits,1
.LC2:
	.string	"press any key ..."
	.text
	.p2align 4
	.globl	ERROREXIT
	.type	ERROREXIT, @function
ERROREXIT:
.L122:
	push	rbp
	mov	rbp, rdi
	call	fb_GfxScreenPtr@PLT
	test	rax, rax
	je	.L123
	xor	r8d, r8d
	xor	ecx, ecx
	xor	edx, edx
	mov	esi, 8
	xor	edi, edi
	call	fb_GfxScreen@PLT
.L123:
	mov	edx, 1
	mov	rsi, rbp
	xor	edi, edi
	call	fb_PrintString@PLT
	mov	esi, 1
	xor	edi, edi
	call	fb_PrintVoid@PLT
	mov	esi, 17
	lea	rdi, .LC2[rip]
	call	fb_StrAllocTempDescZEx@PLT
	mov	edx, 1
	xor	edi, edi
	mov	rsi, rax
	call	fb_PrintString@PLT
	call	fb_Beep@PLT
	mov	edi, -1
	call	fb_Sleep@PLT
	mov	edi, 1
	pop	rbp
	jmp	fb_End@PLT
	.size	ERROREXIT, .-ERROREXIT
	.section	.rodata.str1.1
.LC3:
	.string	""
.LC10:
	.string	"screenres("
.LC11:
	.string	","
.LC12:
	.string	") failed !"
.LC13:
	.string	"glCreateShader"
.LC14:
	.string	"glDeleteShader"
.LC15:
	.string	"glShaderSource"
.LC16:
	.string	"glCompileShader"
.LC17:
	.string	"glGetShaderiv"
.LC18:
	.string	"glGetShaderInfoLog"
.LC19:
	.string	"glCreateProgram"
.LC20:
	.string	"glDeleteProgram"
.LC21:
	.string	"glAttachShader"
.LC22:
	.string	"glDetachShader"
.LC23:
	.string	"glLinkProgram"
.LC24:
	.string	"glGetProgramiv"
.LC25:
	.string	"glGetProgramInfoLog"
.LC26:
	.string	"glUseProgram"
.LC27:
	.string	"glGetUniformLocation"
.LC28:
	.string	"glUniform1i"
.LC29:
	.string	"glUniform1f"
.LC30:
	.string	"glUniform3f"
.LC31:
	.string	"glUniform3fv"
.LC32:
	.string	"glUniform4f"
.LC33:
	.string	"glUniform4fv"
	.section	.rodata.str1.8,"aMS",@progbits,1
	.align 8
.LC34:
	.string	"load and compile shader pese wait ..."
	.text
	.p2align 4
	.globl	GLSCREEN
	.type	GLSCREEN, @function
GLSCREEN:
.L129:
	push	r15
	push	r14
	push	r13
	push	r12
	mov	r12, rdx
	push	rbp
	mov	rbp, rdi
	push	rbx
	mov	rbx, rsi
	sub	rsp, 280
	mov	QWORD PTR 24[rsp], rcx
	mov	BYTE PTR 23[rsp], r8b
	mov	QWORD PTR 88[rsp], 0
	mov	QWORD PTR 96[rsp], 0
	mov	QWORD PTR 104[rsp], 0
	call	fb_GfxScreenPtr@PLT
	test	rax, rax
	je	.L130
	xor	r8d, r8d
	xor	ecx, ecx
	xor	edx, edx
	mov	esi, 8
	xor	edi, edi
	call	fb_GfxScreen@PLT
.L130:
	xor	esi, esi
	lea	rdi, .LC3[rip]
	call	fb_StrAllocTempDescZEx@PLT
	lea	rdx, 104[rsp]
	lea	rcx, 40[rsp]
	mov	QWORD PTR 56[rsp], 0
	mov	QWORD PTR 48[rsp], 0
	lea	rsi, 96[rsp]
	lea	rdi, 88[rsp]
	sub	rsp, 8
	mov	QWORD PTR 48[rsp], 0
	push	rax
	lea	r9, 72[rsp]
	lea	r8, 64[rsp]
	call	fb_GfxScreenInfo@PLT
	pop	rax
	xor	eax, eax
	test	rbx, rbx
	setle	al
	pop	rdx
	neg	eax
	test	rbp, rbp
	jle	.L227
	test	eax, eax
	jne	.L228
.L133:
.L134:
	cmp	r12, 15
	jle	.L135
	cmp	r12, 23
	jle	.L229
	cmp	r12, 31
	mov	rax, QWORD PTR 24[rsp]
	setg	r12b
	setg	r15b
	movzx	r12d, r12b
	movzx	r15d, r15b
	lea	r12d, 24[0+r12*8]
	lea	r15, 24[0+r15*8]
	test	rax, rax
	jg	.L230
.L138:
	mov	QWORD PTR 24[rsp], 0
	jmp	.L141
	.p2align 4,,10
	.p2align 3
.L135:
	mov	r15, QWORD PTR 104[rsp]
	mov	r12d, r15d
.L137:
	mov	rax, QWORD PTR 24[rsp]
	test	rax, rax
	jle	.L138
.L230:
	cmp	rax, 15
	jg	.L139
	mov	QWORD PTR 24[rsp], 16
.L141:
	mov	eax, 2147483648
	lea	rcx, 72[rsp]
	lea	rdx, 64[rsp]
	mov	edi, 110
	lea	rsi, 24[rsp]
	lea	r8, 80[rsp]
	mov	QWORD PTR 80[rsp], rax
	mov	QWORD PTR 72[rsp], rax
	mov	QWORD PTR 64[rsp], rax
	call	fb_GfxControl_i@PLT
	cmp	BYTE PTR 23[rsp], 0
	je	.L224
.L147:
	xor	edx, edx
	cmp	rbp, 639
	mov	edi, r12d
	mov	r14d, 1073741824
	setle	dl
	xor	eax, eax
	neg	edx
	cmp	rbx, 479
	setle	al
	neg	eax
	or	edx, eax
	mov	eax, 480
	cmovne	rbx, rax
	mov	eax, 640
	cmovne	rbp, rax
	xor	r13d, r13d
	call	fb_GfxScreenList@PLT
	mov	ecx, eax
	test	eax, eax
	je	.L231
	.p2align 4,,10
	.p2align 3
.L154:
	mov	rax, rcx
	sal	rax, 32
	shr	rax, 48
	sub	rax, rbp
	cqo
	xor	rax, rdx
	sub	rax, rdx
	movzx	edx, cx
	sub	rdx, rbx
	mov	rdi, rdx
	sar	rdi, 63
	xor	rdx, rdi
	sub	rdx, rdi
	add	rax, rdx
	cmp	rax, r14
	jge	.L152
	mov	r14, rax
	mov	r13d, ecx
.L151:
.L152:
	xor	edi, edi
	call	fb_GfxScreenList@PLT
	mov	ecx, eax
	test	eax, eax
	jne	.L154
.L160:
.L153:
	test	r13d, r13d
	je	.L224
	mov	rbp, r13
	xor	r8d, r8d
	movzx	esi, r13w
	sal	rbp, 32
	shr	rbp, 48
	cmp	BYTE PTR 23[rsp], 0
	setne	r8b
	or	r8d, 2
.L145:
	xor	r9d, r9d
	mov	ecx, 1
	mov	edx, r12d
	mov	edi, ebp
	call	fb_GfxScreenRes@PLT
	test	eax, eax
	je	.L176
	mov	edx, DWORD PTR 104[rsp]
	xor	r9d, r9d
	mov	r8d, 2
	mov	ecx, 1
	mov	esi, 350
	mov	edi, 640
	call	fb_GfxScreenRes@PLT
	test	eax, eax
	je	.L176
	mov	rdi, QWORD PTR 96[rsp]
	pxor	xmm1, xmm1
	mov	QWORD PTR 256[rsp], 0
	lea	rbp, 240[rsp]
	movups	XMMWORD PTR 240[rsp], xmm1
	call	fb_LongintToStr@PLT
	mov	rdi, QWORD PTR 88[rsp]
	mov	r12, rax
	call	fb_LongintToStr@PLT
	pxor	xmm1, xmm1
	lea	rdi, 112[rsp]
	mov	r8, -1
	mov	rcx, rax
	mov	edx, 11
	movups	XMMWORD PTR 112[rsp], xmm1
	lea	rsi, .LC10[rip]
	mov	QWORD PTR 128[rsp], 0
	call	fb_StrConcat@PLT
	pxor	xmm1, xmm1
	lea	rdi, 144[rsp]
	mov	r8d, 2
	mov	rsi, rax
	lea	rcx, .LC11[rip]
	mov	rdx, -1
	movups	XMMWORD PTR 144[rsp], xmm1
	mov	QWORD PTR 160[rsp], 0
	call	fb_StrConcat@PLT
	pxor	xmm1, xmm1
	lea	rdi, 176[rsp]
	mov	r8, -1
	mov	rsi, rax
	mov	rcx, r12
	mov	rdx, -1
	movups	XMMWORD PTR 176[rsp], xmm1
	mov	QWORD PTR 192[rsp], 0
	call	fb_StrConcat@PLT
	pxor	xmm1, xmm1
	lea	rdi, 208[rsp]
	mov	r8d, 11
	mov	rsi, rax
	lea	rcx, .LC12[rip]
	mov	rdx, -1
	movups	XMMWORD PTR 208[rsp], xmm1
	mov	QWORD PTR 224[rsp], 0
	call	fb_StrConcat@PLT
	xor	r8d, r8d
	mov	rcx, -1
	mov	rdi, rbp
	mov	rdx, rax
	mov	rsi, -1
	call	fb_StrAssign@PLT
	mov	rdi, rbp
	call	ERROREXIT
	mov	rdi, rbp
	call	fb_StrDelete@PLT
.L172:
.L174:
.L175:
.L176:
	mov	esi, -1
	mov	edi, -1
	call	fb_GfxFlip@PLT
	lea	rdi, .LC13[rip]
	call	fb_GfxGetGLProcAddress@PLT
	mov	QWORD PTR GLCREATESHADER$[rip], rax
	test	rax, rax
	jne	.L177
	lea	rbp, 240[rsp]
	pxor	xmm0, xmm0
	xor	r8d, r8d
	mov	ecx, 15
	lea	rdx, .LC13[rip]
	mov	rsi, -1
	mov	rdi, rbp
	movups	XMMWORD PTR 240[rsp], xmm0
	mov	QWORD PTR 256[rsp], 0
	call	fb_StrAssign@PLT
	mov	rdi, rbp
	call	ERROREXIT
	mov	rdi, rbp
	call	fb_StrDelete@PLT
.L177:
	lea	rdi, .LC14[rip]
	call	fb_GfxGetGLProcAddress@PLT
	mov	QWORD PTR GLDELETESHADER$[rip], rax
	test	rax, rax
	jne	.L178
	lea	rbp, 240[rsp]
	pxor	xmm0, xmm0
	xor	r8d, r8d
	mov	ecx, 15
	lea	rdx, .LC14[rip]
	mov	rsi, -1
	mov	rdi, rbp
	movups	XMMWORD PTR 240[rsp], xmm0
	mov	QWORD PTR 256[rsp], 0
	call	fb_StrAssign@PLT
	mov	rdi, rbp
	call	ERROREXIT
	mov	rdi, rbp
	call	fb_StrDelete@PLT
.L178:
	lea	rdi, .LC15[rip]
	call	fb_GfxGetGLProcAddress@PLT
	mov	QWORD PTR GLSHADERSOURCE$[rip], rax
	test	rax, rax
	jne	.L179
	lea	rbp, 240[rsp]
	pxor	xmm0, xmm0
	xor	r8d, r8d
	mov	ecx, 15
	lea	rdx, .LC15[rip]
	mov	rsi, -1
	mov	rdi, rbp
	movups	XMMWORD PTR 240[rsp], xmm0
	mov	QWORD PTR 256[rsp], 0
	call	fb_StrAssign@PLT
	mov	rdi, rbp
	call	ERROREXIT
	mov	rdi, rbp
	call	fb_StrDelete@PLT
.L179:
	lea	rdi, .LC16[rip]
	call	fb_GfxGetGLProcAddress@PLT
	mov	QWORD PTR GLCOMPILESHADER$[rip], rax
	test	rax, rax
	jne	.L180
	lea	rbp, 240[rsp]
	pxor	xmm0, xmm0
	xor	r8d, r8d
	mov	ecx, 16
	lea	rdx, .LC16[rip]
	mov	rsi, -1
	mov	rdi, rbp
	movups	XMMWORD PTR 240[rsp], xmm0
	mov	QWORD PTR 256[rsp], 0
	call	fb_StrAssign@PLT
	mov	rdi, rbp
	call	ERROREXIT
	mov	rdi, rbp
	call	fb_StrDelete@PLT
.L180:
	lea	rdi, .LC17[rip]
	call	fb_GfxGetGLProcAddress@PLT
	mov	QWORD PTR GLGETSHADERIV$[rip], rax
	test	rax, rax
	jne	.L181
	lea	rbp, 240[rsp]
	pxor	xmm0, xmm0
	xor	r8d, r8d
	mov	ecx, 14
	lea	rdx, .LC17[rip]
	mov	rsi, -1
	mov	rdi, rbp
	movups	XMMWORD PTR 240[rsp], xmm0
	mov	QWORD PTR 256[rsp], 0
	call	fb_StrAssign@PLT
	mov	rdi, rbp
	call	ERROREXIT
	mov	rdi, rbp
	call	fb_StrDelete@PLT
.L181:
	lea	rdi, .LC18[rip]
	call	fb_GfxGetGLProcAddress@PLT
	mov	QWORD PTR GLGETSHADERINFOLOG$[rip], rax
	test	rax, rax
	jne	.L182
	lea	rbp, 240[rsp]
	pxor	xmm0, xmm0
	xor	r8d, r8d
	mov	ecx, 19
	lea	rdx, .LC18[rip]
	mov	rsi, -1
	mov	rdi, rbp
	movups	XMMWORD PTR 240[rsp], xmm0
	mov	QWORD PTR 256[rsp], 0
	call	fb_StrAssign@PLT
	mov	rdi, rbp
	call	ERROREXIT
	mov	rdi, rbp
	call	fb_StrDelete@PLT
.L182:
	lea	rdi, .LC19[rip]
	call	fb_GfxGetGLProcAddress@PLT
	mov	QWORD PTR GLCREATEPROGRAM$[rip], rax
	test	rax, rax
	jne	.L183
	lea	rbp, 240[rsp]
	pxor	xmm0, xmm0
	xor	r8d, r8d
	mov	ecx, 16
	lea	rdx, .LC19[rip]
	mov	rsi, -1
	mov	rdi, rbp
	movups	XMMWORD PTR 240[rsp], xmm0
	mov	QWORD PTR 256[rsp], 0
	call	fb_StrAssign@PLT
	mov	rdi, rbp
	call	ERROREXIT
	mov	rdi, rbp
	call	fb_StrDelete@PLT
.L183:
	lea	rdi, .LC20[rip]
	call	fb_GfxGetGLProcAddress@PLT
	mov	QWORD PTR GLDELETEPROGRAM$[rip], rax
	test	rax, rax
	jne	.L184
	lea	rbp, 240[rsp]
	pxor	xmm0, xmm0
	xor	r8d, r8d
	mov	ecx, 16
	lea	rdx, .LC20[rip]
	mov	rsi, -1
	mov	rdi, rbp
	movups	XMMWORD PTR 240[rsp], xmm0
	mov	QWORD PTR 256[rsp], 0
	call	fb_StrAssign@PLT
	mov	rdi, rbp
	call	ERROREXIT
	mov	rdi, rbp
	call	fb_StrDelete@PLT
.L184:
	lea	rdi, .LC21[rip]
	call	fb_GfxGetGLProcAddress@PLT
	mov	QWORD PTR GLATTACHSHADER$[rip], rax
	test	rax, rax
	jne	.L185
	lea	rbp, 240[rsp]
	pxor	xmm0, xmm0
	xor	r8d, r8d
	mov	ecx, 15
	lea	rdx, .LC21[rip]
	mov	rsi, -1
	mov	rdi, rbp
	movups	XMMWORD PTR 240[rsp], xmm0
	mov	QWORD PTR 256[rsp], 0
	call	fb_StrAssign@PLT
	mov	rdi, rbp
	call	ERROREXIT
	mov	rdi, rbp
	call	fb_StrDelete@PLT
.L185:
	lea	rdi, .LC22[rip]
	call	fb_GfxGetGLProcAddress@PLT
	mov	QWORD PTR GLDETACHSHADER$[rip], rax
	test	rax, rax
	jne	.L186
	lea	rbp, 240[rsp]
	pxor	xmm0, xmm0
	xor	r8d, r8d
	mov	ecx, 15
	lea	rdx, .LC22[rip]
	mov	rsi, -1
	mov	rdi, rbp
	movups	XMMWORD PTR 240[rsp], xmm0
	mov	QWORD PTR 256[rsp], 0
	call	fb_StrAssign@PLT
	mov	rdi, rbp
	call	ERROREXIT
	mov	rdi, rbp
	call	fb_StrDelete@PLT
.L186:
	lea	rdi, .LC23[rip]
	call	fb_GfxGetGLProcAddress@PLT
	mov	QWORD PTR GLLINKPROGRAM$[rip], rax
	test	rax, rax
	jne	.L187
	lea	rbp, 240[rsp]
	pxor	xmm0, xmm0
	xor	r8d, r8d
	mov	ecx, 14
	lea	rdx, .LC23[rip]
	mov	rsi, -1
	mov	rdi, rbp
	movups	XMMWORD PTR 240[rsp], xmm0
	mov	QWORD PTR 256[rsp], 0
	call	fb_StrAssign@PLT
	mov	rdi, rbp
	call	ERROREXIT
	mov	rdi, rbp
	call	fb_StrDelete@PLT
.L187:
	lea	rdi, .LC24[rip]
	call	fb_GfxGetGLProcAddress@PLT
	mov	QWORD PTR GLGETPROGRAMIV$[rip], rax
	test	rax, rax
	jne	.L188
	lea	rbp, 240[rsp]
	pxor	xmm0, xmm0
	xor	r8d, r8d
	mov	ecx, 15
	lea	rdx, .LC24[rip]
	mov	rsi, -1
	mov	rdi, rbp
	movups	XMMWORD PTR 240[rsp], xmm0
	mov	QWORD PTR 256[rsp], 0
	call	fb_StrAssign@PLT
	mov	rdi, rbp
	call	ERROREXIT
	mov	rdi, rbp
	call	fb_StrDelete@PLT
.L188:
	lea	rdi, .LC25[rip]
	call	fb_GfxGetGLProcAddress@PLT
	mov	QWORD PTR GLGETPROGRAMINFOLOG$[rip], rax
	test	rax, rax
	jne	.L189
	lea	rbp, 240[rsp]
	pxor	xmm0, xmm0
	xor	r8d, r8d
	mov	ecx, 20
	lea	rdx, .LC25[rip]
	mov	rsi, -1
	mov	rdi, rbp
	movups	XMMWORD PTR 240[rsp], xmm0
	mov	QWORD PTR 256[rsp], 0
	call	fb_StrAssign@PLT
	mov	rdi, rbp
	call	ERROREXIT
	mov	rdi, rbp
	call	fb_StrDelete@PLT
.L189:
	lea	rdi, .LC26[rip]
	call	fb_GfxGetGLProcAddress@PLT
	mov	QWORD PTR GLUSEPROGRAM$[rip], rax
	test	rax, rax
	jne	.L190
	lea	rbp, 240[rsp]
	pxor	xmm0, xmm0
	xor	r8d, r8d
	mov	ecx, 13
	lea	rdx, .LC26[rip]
	mov	rsi, -1
	mov	rdi, rbp
	movups	XMMWORD PTR 240[rsp], xmm0
	mov	QWORD PTR 256[rsp], 0
	call	fb_StrAssign@PLT
	mov	rdi, rbp
	call	ERROREXIT
	mov	rdi, rbp
	call	fb_StrDelete@PLT
.L190:
	lea	rdi, .LC27[rip]
	call	fb_GfxGetGLProcAddress@PLT
	mov	QWORD PTR GLGETUNIFORMLOCATION$[rip], rax
	test	rax, rax
	jne	.L191
	lea	rbp, 240[rsp]
	pxor	xmm0, xmm0
	xor	r8d, r8d
	mov	ecx, 21
	lea	rdx, .LC27[rip]
	mov	rsi, -1
	mov	rdi, rbp
	movups	XMMWORD PTR 240[rsp], xmm0
	mov	QWORD PTR 256[rsp], 0
	call	fb_StrAssign@PLT
	mov	rdi, rbp
	call	ERROREXIT
	mov	rdi, rbp
	call	fb_StrDelete@PLT
.L191:
	lea	rdi, .LC28[rip]
	call	fb_GfxGetGLProcAddress@PLT
	mov	QWORD PTR GLUNIFORM1I$[rip], rax
	test	rax, rax
	jne	.L192
	lea	rbp, 240[rsp]
	pxor	xmm0, xmm0
	xor	r8d, r8d
	mov	ecx, 12
	lea	rdx, .LC28[rip]
	mov	rsi, -1
	mov	rdi, rbp
	movups	XMMWORD PTR 240[rsp], xmm0
	mov	QWORD PTR 256[rsp], 0
	call	fb_StrAssign@PLT
	mov	rdi, rbp
	call	ERROREXIT
	mov	rdi, rbp
	call	fb_StrDelete@PLT
.L192:
	lea	rdi, .LC29[rip]
	call	fb_GfxGetGLProcAddress@PLT
	mov	QWORD PTR GLUNIFORM1F$[rip], rax
	test	rax, rax
	jne	.L193
	lea	rbp, 240[rsp]
	pxor	xmm0, xmm0
	xor	r8d, r8d
	mov	ecx, 12
	lea	rdx, .LC29[rip]
	mov	rsi, -1
	mov	rdi, rbp
	movups	XMMWORD PTR 240[rsp], xmm0
	mov	QWORD PTR 256[rsp], 0
	call	fb_StrAssign@PLT
	mov	rdi, rbp
	call	ERROREXIT
	mov	rdi, rbp
	call	fb_StrDelete@PLT
.L193:
	lea	rdi, .LC30[rip]
	call	fb_GfxGetGLProcAddress@PLT
	mov	QWORD PTR GLUNIFORM3F$[rip], rax
	test	rax, rax
	jne	.L194
	lea	rbp, 240[rsp]
	pxor	xmm0, xmm0
	xor	r8d, r8d
	mov	ecx, 12
	lea	rdx, .LC30[rip]
	mov	rsi, -1
	mov	rdi, rbp
	movups	XMMWORD PTR 240[rsp], xmm0
	mov	QWORD PTR 256[rsp], 0
	call	fb_StrAssign@PLT
	mov	rdi, rbp
	call	ERROREXIT
	mov	rdi, rbp
	call	fb_StrDelete@PLT
.L194:
	lea	rdi, .LC31[rip]
	call	fb_GfxGetGLProcAddress@PLT
	test	rax, rax
	jne	.L195
	lea	rbp, 240[rsp]
	pxor	xmm0, xmm0
	xor	r8d, r8d
	mov	ecx, 13
	lea	rdx, .LC31[rip]
	mov	rsi, -1
	mov	rdi, rbp
	movups	XMMWORD PTR 240[rsp], xmm0
	mov	QWORD PTR 256[rsp], 0
	call	fb_StrAssign@PLT
	mov	rdi, rbp
	call	ERROREXIT
	mov	rdi, rbp
	call	fb_StrDelete@PLT
.L195:
	lea	rdi, .LC32[rip]
	call	fb_GfxGetGLProcAddress@PLT
	mov	QWORD PTR GLUNIFORM4F$[rip], rax
	test	rax, rax
	jne	.L196
	lea	rbp, 240[rsp]
	pxor	xmm0, xmm0
	xor	r8d, r8d
	mov	ecx, 12
	lea	rdx, .LC32[rip]
	mov	rsi, -1
	mov	rdi, rbp
	movups	XMMWORD PTR 240[rsp], xmm0
	mov	QWORD PTR 256[rsp], 0
	call	fb_StrAssign@PLT
	mov	rdi, rbp
	call	ERROREXIT
	mov	rdi, rbp
	call	fb_StrDelete@PLT
.L196:
	lea	rdi, .LC33[rip]
	call	fb_GfxGetGLProcAddress@PLT
	test	rax, rax
	jne	.L197
	lea	rbp, 240[rsp]
	pxor	xmm0, xmm0
	xor	r8d, r8d
	mov	ecx, 13
	lea	rdx, .LC33[rip]
	mov	rsi, -1
	mov	rdi, rbp
	movups	XMMWORD PTR 240[rsp], xmm0
	mov	QWORD PTR 256[rsp], 0
	call	fb_StrAssign@PLT
	mov	rdi, rbp
	call	ERROREXIT
	mov	rdi, rbp
	call	fb_StrDelete@PLT
.L197:
	mov	esi, 37
	lea	rdi, .LC34[rip]
	call	fb_StrAllocTempDescZEx@PLT
	mov	rdi, rax
	call	fb_GfxSetWindowTitle@PLT
	add	rsp, 280
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	ret
	.p2align 4,,10
	.p2align 3
.L139:
	cmp	rax, 31
	setg	al
	movzx	eax, al
	lea	rax, 24[0+rax*8]
	mov	QWORD PTR 24[rsp], rax
	jmp	.L141
	.p2align 4,,10
	.p2align 3
.L229:
	mov	r12d, 16
	mov	r15d, 16
	jmp	.L137
	.p2align 4,,10
	.p2align 3
.L228:
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rbp
	mulsd	xmm0, QWORD PTR .LC4[rip]
	cvtsd2si	rbx, xmm0
	jmp	.L134
	.p2align 4,,10
	.p2align 3
.L224:
	mov	esi, ebx
	mov	r8d, 2
	jmp	.L145
	.p2align 4,,10
	.p2align 3
.L227:
	test	eax, eax
	je	.L132
	mov	BYTE PTR 23[rsp], 0
	mov	ebx, 350
	mov	ebp, 640
	jmp	.L134
	.p2align 4,,10
	.p2align 3
.L132:
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rbx
	divsd	xmm0, QWORD PTR .LC5[rip]
	mulsd	xmm0, QWORD PTR .LC6[rip]
	cvtsd2si	rbp, xmm0
	jmp	.L134
.L146:
	.p2align 4,,10
	.p2align 3
.L231:
	cmp	r15, 16
	je	.L232
	cmp	r15, 24
	je	.L233
	mov	rax, QWORD PTR .LC8[rip]
	mov	r12d, 24
	mov	QWORD PTR 240[rsp], rax
.L157:
	mov	r14d, 2
	jmp	.L169
	.p2align 4,,10
	.p2align 3
.L167:
	cmp	r14d, 1
	je	.L224
	mov	r12d, DWORD PTR 244[rsp]
	mov	r14d, 1
.L169:
	mov	edi, r12d
	call	fb_GfxScreenList@PLT
	mov	r13d, eax
	test	eax, eax
	je	.L167
	xor	ecx, ecx
	mov	edx, 1073741824
	jmp	.L165
	.p2align 4,,10
	.p2align 3
.L161:
	xor	edi, edi
	call	fb_GfxScreenList@PLT
	test	eax, eax
	je	.L153
	mov	rdx, r15
	mov	ecx, r13d
.L198:
	mov	r13d, eax
.L165:
	mov	rax, r13
	movzx	r15d, r13w
	sal	rax, 32
	sub	r15, rbx
	shr	rax, 48
	sub	rax, rbp
	mov	rdi, rax
	sar	rdi, 63
	xor	rax, rdi
	sub	rax, rdi
	mov	rdi, r15
	sar	rdi, 63
	xor	r15, rdi
	sub	r15, rdi
	add	r15, rax
	cmp	r15, rdx
	jl	.L161
.L162:
.L163:
	xor	edi, edi
	mov	DWORD PTR 16[rsp], ecx
	mov	QWORD PTR 8[rsp], rdx
	call	fb_GfxScreenList@PLT
	mov	rdx, QWORD PTR 8[rsp]
	mov	ecx, DWORD PTR 16[rsp]
	test	eax, eax
	jne	.L198
.L164:
.L166:
	test	ecx, ecx
	je	.L167
	mov	r13d, ecx
	jmp	.L153
	.p2align 4,,10
	.p2align 3
.L232:
	mov	rax, QWORD PTR .LC7[rip]
	mov	r12d, 32
	mov	QWORD PTR 240[rsp], rax
	jmp	.L157
.L233:
	mov	rax, QWORD PTR .LC9[rip]
	mov	r12d, 32
	mov	QWORD PTR 240[rsp], rax
	jmp	.L157
	.size	GLSCREEN, .-GLSCREEN
	.p2align 4
	.globl	_ZN9SHADERTOYD1Ev
	.type	_ZN9SHADERTOYD1Ev, @function
_ZN9SHADERTOYD1Ev:
.L235:
	push	rbx
	mov	eax, DWORD PTR 4[rdi]
	mov	rbx, rdi
	test	eax, eax
	je	.L240
	xor	edi, edi
	call	[QWORD PTR GLUSEPROGRAM$[rip]]
	mov	esi, DWORD PTR [rbx]
	test	esi, esi
	je	.L238
	mov	edi, DWORD PTR 4[rbx]
	call	[QWORD PTR GLDETACHSHADER$[rip]]
	mov	edi, DWORD PTR [rbx]
	call	[QWORD PTR GLDELETESHADER$[rip]]
.L237:
.L238:
	mov	edi, DWORD PTR 4[rbx]
	call	[QWORD PTR GLDELETEPROGRAM$[rip]]
.L236:
.L239:
.L240:
	lea	rdi, 8[rbx]
	pop	rbx
	jmp	fb_StrDelete@PLT
	.size	_ZN9SHADERTOYD1Ev, .-_ZN9SHADERTOYD1Ev
	.section	.rodata.str1.1
.LC35:
	.string	"#version 460\n"
	.section	.rodata.str1.8
	.align 8
.LC36:
	.string	"uniform float     iGlobalTime;\n"
	.section	.rodata.str1.1
.LC37:
	.string	"uniform float     iTime;\n"
	.section	.rodata.str1.8
	.align 8
.LC38:
	.string	"uniform vec3      iResolution;\n"
	.align 8
.LC39:
	.string	"uniform float     iTimeDelta;\n"
	.align 8
.LC40:
	.string	"uniform float     iFrameRate;\n"
	.section	.rodata.str1.1
.LC41:
	.string	"uniform int       iFrame;\n"
	.section	.rodata.str1.8
	.align 8
.LC42:
	.string	"uniform float     iChannelTime[4];\n"
	.align 8
.LC43:
	.string	"uniform vec3      iChannelResolution[4];\n"
	.align 8
.LC44:
	.string	"uniform float     iSampleRate;\n"
	.section	.rodata.str1.1
.LC45:
	.string	"uniform vec4      iMouse;\n"
.LC46:
	.string	"uniform vec4      iDate;\n"
.LC47:
	.string	"uniform sampler2D iChannel0;\n"
.LC48:
	.string	"uniform sampler2D iChannel1;\n"
.LC49:
	.string	"uniform sampler2D iChannel2;\n"
.LC50:
	.string	"uniform sampler2D iChannel3;\n"
.LC51:
	.string	"uniform samplerCube iCube;\n"
.LC52:
	.string	"#define main_image mainImage"
.LC53:
	.string	"#define frag_color fragColor"
.LC54:
	.string	"#define frag_coord fragCoord"
	.section	.rodata.str1.8
	.align 8
.LC55:
	.string	"#define i_resolution iResolution"
	.section	.rodata.str1.1
.LC56:
	.string	"#define i_time iTime"
.LC57:
	.string	"void main() {\n"
.LC58:
	.string	"  vec4 color;\n"
.LC59:
	.string	"  // call user shader\n"
	.section	.rodata.str1.8
	.align 8
.LC60:
	.string	"  main_image(color, gl_FragCoord.xy);\n"
	.section	.rodata.str1.1
.LC61:
	.string	"  color.w = 1.0;\n"
.LC62:
	.string	"  gl_FragColor = color;\n"
.LC63:
	.string	"}\n"
	.section	.rodata.str1.8
	.align 8
.LC64:
	.string	"  mainImage(color, gl_FragCoord.xy);\n"
	.align 8
.LC65:
	.string	"glCreateShader(GL_FRAGMENT_SHADER) failed !"
	.align 8
.LC66:
	.string	"glCompileShader(FragmentShader) failed !\n"
	.section	.rodata.str1.1
.LC67:
	.string	"glCreateProgram() failed !"
.LC68:
	.string	"glLinkProgram() failed !\n"
	.text
	.p2align 4
	.globl	_ZN9SHADERTOY11COMPILECODEER8FBSTRING
	.type	_ZN9SHADERTOY11COMPILECODEER8FBSTRING, @function
_ZN9SHADERTOY11COMPILECODEER8FBSTRING:
	push	r15
	pxor	xmm0, xmm0
	xor	r8d, r8d
	mov	ecx, 14
	push	r14
	lea	rdx, .LC35[rip]
	mov	r14, rsi
	mov	rsi, -1
	push	r13
	push	r12
	push	rbp
	push	rbx
	mov	rbx, rdi
	sub	rsp, 248
	lea	r13, 112[rsp]
	lea	rbp, 80[rsp]
	movups	XMMWORD PTR 80[rsp], xmm0
	mov	rdi, r13
	movups	XMMWORD PTR 112[rsp], xmm0
	lea	r12, 144[rsp]
	mov	DWORD PTR [rsp], 0
	mov	DWORD PTR 4[rsp], 0
	mov	QWORD PTR 96[rsp], 0
	mov	QWORD PTR 128[rsp], 0
	call	fb_StrAssign@PLT
	xor	r8d, r8d
	mov	rdx, r13
	mov	rdi, rbp
	mov	rcx, -1
	mov	rsi, -1
	call	fb_StrAssign@PLT
	xor	r8d, r8d
	mov	ecx, 32
	mov	rdi, rbp
	lea	rdx, .LC36[rip]
	mov	rsi, -1
	call	fb_StrConcatAssign@PLT
	xor	r8d, r8d
	mov	ecx, 26
	mov	rdi, rbp
	lea	rdx, .LC37[rip]
	mov	rsi, -1
	call	fb_StrConcatAssign@PLT
	xor	r8d, r8d
	mov	ecx, 32
	mov	rdi, rbp
	lea	rdx, .LC38[rip]
	mov	rsi, -1
	call	fb_StrConcatAssign@PLT
	xor	r8d, r8d
	mov	ecx, 31
	mov	rdi, rbp
	lea	rdx, .LC39[rip]
	mov	rsi, -1
	call	fb_StrConcatAssign@PLT
	xor	r8d, r8d
	mov	ecx, 31
	mov	rdi, rbp
	lea	rdx, .LC40[rip]
	mov	rsi, -1
	call	fb_StrConcatAssign@PLT
	xor	r8d, r8d
	mov	ecx, 27
	mov	rdi, rbp
	lea	rdx, .LC41[rip]
	mov	rsi, -1
	call	fb_StrConcatAssign@PLT
	xor	r8d, r8d
	mov	ecx, 36
	mov	rdi, rbp
	lea	rdx, .LC42[rip]
	mov	rsi, -1
	call	fb_StrConcatAssign@PLT
	xor	r8d, r8d
	mov	ecx, 42
	mov	rdi, rbp
	lea	rdx, .LC43[rip]
	mov	rsi, -1
	call	fb_StrConcatAssign@PLT
	xor	r8d, r8d
	mov	ecx, 32
	mov	rdi, rbp
	lea	rdx, .LC44[rip]
	mov	rsi, -1
	call	fb_StrConcatAssign@PLT
	xor	r8d, r8d
	mov	ecx, 27
	mov	rdi, rbp
	lea	rdx, .LC45[rip]
	mov	rsi, -1
	call	fb_StrConcatAssign@PLT
	xor	r8d, r8d
	mov	ecx, 26
	mov	rdi, rbp
	lea	rdx, .LC46[rip]
	mov	rsi, -1
	call	fb_StrConcatAssign@PLT
	xor	r8d, r8d
	mov	ecx, 30
	mov	rdi, rbp
	lea	rdx, .LC47[rip]
	mov	rsi, -1
	call	fb_StrConcatAssign@PLT
	xor	r8d, r8d
	mov	ecx, 30
	mov	rdi, rbp
	lea	rdx, .LC48[rip]
	mov	rsi, -1
	call	fb_StrConcatAssign@PLT
	xor	r8d, r8d
	mov	ecx, 30
	mov	rdi, rbp
	lea	rdx, .LC49[rip]
	mov	rsi, -1
	call	fb_StrConcatAssign@PLT
	xor	r8d, r8d
	mov	ecx, 30
	mov	rdi, rbp
	lea	rdx, .LC50[rip]
	mov	rsi, -1
	call	fb_StrConcatAssign@PLT
	xor	r8d, r8d
	mov	ecx, 28
	mov	rdi, rbp
	lea	rdx, .LC51[rip]
	mov	rsi, -1
	call	fb_StrConcatAssign@PLT
	pxor	xmm0, xmm0
	xor	r8d, r8d
	mov	QWORD PTR 160[rsp], 0
	movups	XMMWORD PTR 144[rsp], xmm0
	pxor	xmm0, xmm0
	comisd	xmm0, QWORD PTR SWCH$[rip]
	je	.L258
	mov	ecx, 29
	lea	rdx, .LC52[rip]
	mov	rsi, -1
	mov	rdi, r12
	call	fb_StrConcatAssign@PLT
	xor	r8d, r8d
	mov	ecx, 29
	mov	rdi, r12
	lea	rdx, .LC53[rip]
	mov	rsi, -1
	call	fb_StrConcatAssign@PLT
	xor	r8d, r8d
	mov	ecx, 29
	mov	rdi, r12
	lea	rdx, .LC54[rip]
	mov	rsi, -1
	call	fb_StrConcatAssign@PLT
	xor	r8d, r8d
	mov	ecx, 33
	mov	rdi, r12
	lea	rdx, .LC55[rip]
	mov	rsi, -1
	call	fb_StrConcatAssign@PLT
	xor	r8d, r8d
	mov	ecx, 21
	mov	rdi, r12
	lea	rdx, .LC56[rip]
	mov	rsi, -1
	call	fb_StrConcatAssign@PLT
	xor	r8d, r8d
	mov	ecx, 15
	mov	rdi, r12
	lea	rdx, .LC57[rip]
	mov	rsi, -1
	call	fb_StrConcatAssign@PLT
	xor	r8d, r8d
	mov	ecx, 15
	mov	rdi, r12
	lea	rdx, .LC58[rip]
	mov	rsi, -1
	call	fb_StrConcatAssign@PLT
	xor	r8d, r8d
	mov	ecx, 23
	mov	rdi, r12
	lea	rdx, .LC59[rip]
	mov	rsi, -1
	call	fb_StrConcatAssign@PLT
	xor	r8d, r8d
	mov	ecx, 39
	lea	rdx, .LC60[rip]
.L263:
.L248:
	mov	rsi, -1
	mov	rdi, r12
	call	fb_StrConcatAssign@PLT
	xor	r8d, r8d
	mov	ecx, 18
	mov	rdi, r12
	lea	rdx, .LC61[rip]
	mov	rsi, -1
	call	fb_StrConcatAssign@PLT
	xor	r8d, r8d
	mov	ecx, 25
	mov	rdi, r12
	lea	rdx, .LC62[rip]
	mov	rsi, -1
	call	fb_StrConcatAssign@PLT
	xor	r8d, r8d
	mov	ecx, 3
	mov	rdi, r12
	lea	rdx, .LC63[rip]
	mov	rsi, -1
	call	fb_StrConcatAssign@PLT
	pxor	xmm1, xmm1
	mov	rcx, r14
	mov	rsi, rbp
	lea	rdi, 16[rsp]
	mov	r8, -1
	mov	rdx, -1
	movups	XMMWORD PTR 16[rsp], xmm1
	mov	QWORD PTR 32[rsp], 0
	lea	r14, 176[rsp]
	call	fb_StrConcat@PLT
	pxor	xmm1, xmm1
	lea	rdi, 48[rsp]
	mov	rcx, r12
	mov	rsi, rax
	mov	r8, -1
	movups	XMMWORD PTR 48[rsp], xmm1
	mov	rdx, -1
	mov	QWORD PTR 64[rsp], 0
	call	fb_StrConcat@PLT
	xor	r8d, r8d
	mov	rcx, -1
	mov	rdi, r14
	mov	rdx, rax
	mov	rsi, -1
	call	fb_StrInit@PLT
	mov	edi, 35632
	call	[QWORD PTR GLCREATESHADER$[rip]]
	mov	DWORD PTR [rbx], eax
	mov	edi, eax
	test	eax, eax
	je	.L249
	mov	rax, QWORD PTR 176[rsp]
	lea	r15, 4[rsp]
	lea	rdx, 8[rsp]
	xor	ecx, ecx
	mov	esi, 1
	mov	QWORD PTR 8[rsp], rax
	call	[QWORD PTR GLSHADERSOURCE$[rip]]
	mov	edi, DWORD PTR [rbx]
	call	[QWORD PTR GLCOMPILESHADER$[rip]]
	mov	rdx, r15
	mov	edi, DWORD PTR [rbx]
	mov	esi, 35713
	call	[QWORD PTR GLGETSHADERIV$[rip]]
	mov	edx, DWORD PTR 4[rsp]
	test	edx, edx
	jne	.L250
	mov	rdx, rsp
	mov	esi, 35716
	mov	edi, DWORD PTR [rbx]
	lea	r15, 8[rbx]
	call	[QWORD PTR GLGETSHADERIV$[rip]]
	movsx	rdi, DWORD PTR [rsp]
	call	fb_SPACE@PLT
	xor	r8d, r8d
	mov	rcx, -1
	mov	rdi, r15
	mov	rdx, rax
	mov	rsi, -1
	call	fb_StrAssign@PLT
	mov	rcx, QWORD PTR 8[rbx]
	mov	esi, DWORD PTR [rsp]
	xor	edx, edx
	mov	edi, DWORD PTR [rbx]
	call	[QWORD PTR GLGETSHADERINFOLOG$[rip]]
	pxor	xmm2, xmm2
	mov	rcx, r15
	mov	edx, 42
	lea	rdi, 208[rsp]
	movups	XMMWORD PTR 208[rsp], xmm2
	mov	r8, -1
	lea	rsi, .LC66[rip]
	mov	QWORD PTR 224[rsp], 0
.L266:
	call	fb_StrConcat@PLT
	xor	r8d, r8d
	mov	rcx, -1
	mov	rdi, r15
	mov	rdx, rax
	mov	rsi, -1
.L264:
	call	fb_StrAssign@PLT
	mov	edi, DWORD PTR [rbx]
	call	[QWORD PTR GLDELETESHADER$[rip]]
	mov	DWORD PTR [rbx], 0
.L265:
	mov	rdi, r14
	call	fb_StrDelete@PLT
	mov	rdi, r12
	call	fb_StrDelete@PLT
	mov	rdi, r13
	call	fb_StrDelete@PLT
	mov	rdi, rbp
	call	fb_StrDelete@PLT
	xor	eax, eax
.L252:
.L245:
	add	rsp, 248
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	ret
	.p2align 4,,10
	.p2align 3
.L258:
	mov	ecx, 15
	lea	rdx, .LC57[rip]
	mov	rsi, -1
	mov	rdi, r12
	call	fb_StrConcatAssign@PLT
	xor	r8d, r8d
	mov	ecx, 15
	mov	rdi, r12
	lea	rdx, .LC58[rip]
	mov	rsi, -1
	call	fb_StrConcatAssign@PLT
	xor	r8d, r8d
	mov	ecx, 23
	mov	rdi, r12
	lea	rdx, .LC59[rip]
	mov	rsi, -1
	call	fb_StrConcatAssign@PLT
	xor	r8d, r8d
	mov	ecx, 38
	lea	rdx, .LC64[rip]
	jmp	.L263
	.p2align 4,,10
	.p2align 3
.L250:
	call	[QWORD PTR GLCREATEPROGRAM$[rip]]
	mov	DWORD PTR 4[rbx], eax
	mov	edi, eax
	test	eax, eax
	je	.L267
	mov	esi, DWORD PTR [rbx]
	call	[QWORD PTR GLATTACHSHADER$[rip]]
	mov	edi, DWORD PTR 4[rbx]
	call	[QWORD PTR GLLINKPROGRAM$[rip]]
	mov	edi, DWORD PTR 4[rbx]
	mov	rdx, r15
	mov	esi, 35714
	call	[QWORD PTR GLGETPROGRAMIV$[rip]]
	mov	eax, DWORD PTR 4[rsp]
	test	eax, eax
	jne	.L268
	mov	rdx, rsp
	mov	esi, 35716
	mov	edi, DWORD PTR 4[rbx]
	lea	r15, 8[rbx]
	call	[QWORD PTR GLGETPROGRAMIV$[rip]]
	movsx	rdi, DWORD PTR [rsp]
	call	fb_SPACE@PLT
	xor	r8d, r8d
	mov	rcx, -1
	mov	rdi, r15
	mov	rdx, rax
	mov	rsi, -1
	call	fb_StrAssign@PLT
	mov	rcx, QWORD PTR 8[rbx]
	mov	edi, DWORD PTR 4[rbx]
	xor	edx, edx
	mov	esi, DWORD PTR [rsp]
	call	[QWORD PTR GLGETPROGRAMINFOLOG$[rip]]
	pxor	xmm3, xmm3
	mov	rcx, r15
	mov	edx, 26
	lea	rdi, 208[rsp]
	movups	XMMWORD PTR 208[rsp], xmm3
	mov	r8, -1
	lea	rsi, .LC68[rip]
	mov	QWORD PTR 224[rsp], 0
	jmp	.L266
	.p2align 4,,10
	.p2align 3
.L249:
	lea	rdi, 8[rbx]
	xor	r8d, r8d
	mov	ecx, 44
	mov	rsi, -1
	lea	rdx, .LC65[rip]
	call	fb_StrAssign@PLT
	jmp	.L265
	.p2align 4,,10
	.p2align 3
.L268:
	mov	rdi, r14
	call	fb_StrDelete@PLT
	mov	rdi, r12
	call	fb_StrDelete@PLT
	mov	rdi, r13
	call	fb_StrDelete@PLT
	mov	rdi, rbp
	call	fb_StrDelete@PLT
	mov	eax, 1
	jmp	.L245
	.p2align 4,,10
	.p2align 3
.L267:
	lea	rdi, 8[rbx]
	xor	r8d, r8d
	mov	ecx, 27
	mov	rsi, -1
	lea	rdx, .LC67[rip]
	jmp	.L264
	.size	_ZN9SHADERTOY11COMPILECODEER8FBSTRING, .-_ZN9SHADERTOY11COMPILECODEER8FBSTRING
	.section	.rodata.str1.1
.LC69:
	.string	"can't read shader: \""
.LC70:
	.string	"\""
.LC71:
	.string	" !"
.LC72:
	.string	"\n"
	.text
	.p2align 4
	.globl	_ZN9SHADERTOY11COMPILEFILEER8FBSTRING
	.type	_ZN9SHADERTOY11COMPILEFILEER8FBSTRING, @function
_ZN9SHADERTOY11COMPILEFILEER8FBSTRING:
	push	r14
	pxor	xmm1, xmm1
	mov	r14, rsi
	push	r13
	mov	r13, rdi
	push	r12
	push	rbp
	push	rbx
	add	rsp, -128
	movups	XMMWORD PTR [rsp], xmm1
	mov	r12, rsp
	lea	rbx, 96[rsp]
	mov	QWORD PTR 16[rsp], 0
	call	fb_FileFree@PLT
	xor	r9d, r9d
	xor	ecx, ecx
	xor	edx, edx
	mov	r8d, eax
	mov	esi, 2
	mov	rdi, r14
	mov	ebp, eax
	call	fb_FileOpen@PLT
	test	eax, eax
	je	.L270
	jmp	.L277
	.p2align 4,,10
	.p2align 3
.L273:
	pxor	xmm0, xmm0
	xor	ecx, ecx
	mov	rdx, -1
	mov	rsi, rbx
	mov	edi, ebp
	movups	XMMWORD PTR [rbx], xmm0
	mov	QWORD PTR 16[rbx], 0
	call	fb_FileLineInput@PLT
	xor	r8d, r8d
	mov	rdx, rbx
	mov	rdi, r12
	mov	rcx, -1
	mov	rsi, -1
	call	fb_StrConcatAssign@PLT
	mov	rdi, r12
	xor	r8d, r8d
	mov	ecx, 2
	lea	rdx, .LC72[rip]
	mov	rsi, -1
	call	fb_StrConcatAssign@PLT
	mov	rdi, rbx
	call	fb_StrDelete@PLT
.L270:
.L272:
	mov	edi, ebp
	call	fb_FileEof@PLT
	cmp	eax, -1
	jne	.L273
	mov	edi, ebp
	call	fb_FileClose@PLT
	mov	rsi, r12
	mov	rdi, r13
	call	_ZN9SHADERTOY11COMPILECODEER8FBSTRING
	mov	rdi, r12
	mov	r13d, eax
	call	fb_StrDelete@PLT
	sub	rsp, -128
	mov	eax, r13d
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	ret
.L271:
	.p2align 4,,10
	.p2align 3
.L277:
	lea	rdi, 32[rsp]
	pxor	xmm2, xmm2
	mov	rcx, r14
	mov	r8, -1
	mov	edx, 21
	lea	rsi, .LC69[rip]
	movups	XMMWORD PTR 32[rsp], xmm2
	mov	QWORD PTR 48[rsp], 0
	call	fb_StrConcat@PLT
	lea	rdi, 64[rsp]
	pxor	xmm2, xmm2
	mov	r8d, 2
	mov	rsi, rax
	lea	rcx, .LC70[rip]
	movups	XMMWORD PTR 64[rsp], xmm2
	mov	rdx, -1
	mov	QWORD PTR 80[rsp], 0
	call	fb_StrConcat@PLT
	pxor	xmm2, xmm2
	mov	rdi, rbx
	mov	r8d, 3
	mov	rsi, rax
	lea	rcx, .LC71[rip]
	movups	XMMWORD PTR 96[rsp], xmm2
	mov	rdx, -1
	mov	QWORD PTR 112[rsp], 0
	call	fb_StrConcat@PLT
	lea	rdi, 8[r13]
	xor	r8d, r8d
	mov	rcx, -1
	mov	rdx, rax
	mov	rsi, -1
	xor	r13d, r13d
	call	fb_StrAssign@PLT
	mov	rdi, r12
	call	fb_StrDelete@PLT
	sub	rsp, -128
	mov	eax, r13d
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	ret
	.size	_ZN9SHADERTOY11COMPILEFILEER8FBSTRING, .-_ZN9SHADERTOY11COMPILEFILEER8FBSTRING
	.p2align 4
	.globl	_ZN8MEMORY_TD1Ev
	.type	_ZN8MEMORY_TD1Ev, @function
_ZN8MEMORY_TD1Ev:
	ret
.L279:
	.size	_ZN8MEMORY_TD1Ev, .-_ZN8MEMORY_TD1Ev
	.section	.rodata.str1.1
.LC164:
	.string	" "
.LC165:
	.string	"!"
.LC166:
	.string	"\026"
.LC167:
	.string	"#"
.LC168:
	.string	"$"
.LC169:
	.string	"%"
.LC170:
	.string	"&"
.LC171:
	.string	"'"
.LC172:
	.string	"("
.LC173:
	.string	")"
.LC174:
	.string	"*"
.LC175:
	.string	"+"
.LC176:
	.string	"-"
.LC177:
	.string	"."
.LC178:
	.string	"/"
.LC179:
	.string	"0"
.LC180:
	.string	"1"
.LC181:
	.string	"2"
.LC182:
	.string	"3"
.LC183:
	.string	"4"
.LC184:
	.string	"5"
.LC185:
	.string	"6"
.LC186:
	.string	"7"
.LC187:
	.string	"8"
.LC188:
	.string	"9"
.LC189:
	.string	":"
.LC190:
	.string	";"
.LC191:
	.string	"<"
.LC192:
	.string	"="
.LC193:
	.string	">"
.LC194:
	.string	"?"
.LC195:
	.string	"@"
.LC196:
	.string	"A"
.LC197:
	.string	"B"
.LC198:
	.string	"C"
.LC199:
	.string	"D"
.LC200:
	.string	"E"
.LC201:
	.string	"F"
.LC202:
	.string	"G"
.LC203:
	.string	"H"
.LC204:
	.string	"I"
.LC205:
	.string	"J"
.LC206:
	.string	"K"
.LC207:
	.string	"L"
.LC208:
	.string	"M"
.LC209:
	.string	"N"
.LC210:
	.string	"O"
.LC211:
	.string	"P"
.LC212:
	.string	"Q"
.LC213:
	.string	"R"
.LC214:
	.string	"S"
.LC215:
	.string	"T"
.LC216:
	.string	"U"
.LC217:
	.string	"V"
.LC218:
	.string	"W"
.LC219:
	.string	"X"
.LC220:
	.string	"Y"
.LC221:
	.string	"Z"
.LC222:
	.string	"["
.LC223:
	.string	"\\"
.LC224:
	.string	"]"
.LC225:
	.string	"^"
.LC226:
	.string	"_"
.LC227:
	.string	"`"
.LC228:
	.string	"a"
.LC229:
	.string	"b"
.LC230:
	.string	"c"
.LC231:
	.string	"d"
.LC232:
	.string	"e"
.LC233:
	.string	"f"
.LC234:
	.string	"g"
.LC235:
	.string	"h"
.LC236:
	.string	"i"
.LC237:
	.string	"j"
.LC238:
	.string	"k"
.LC239:
	.string	"l"
.LC240:
	.string	"m"
.LC241:
	.string	"n"
.LC242:
	.string	"o"
.LC243:
	.string	"p"
.LC244:
	.string	"q"
.LC245:
	.string	"r"
.LC246:
	.string	"s"
.LC247:
	.string	"t"
.LC248:
	.string	"u"
.LC249:
	.string	"v"
.LC250:
	.string	"w"
.LC251:
	.string	"x"
.LC252:
	.string	"y"
.LC253:
	.string	"z"
.LC254:
	.string	"{"
.LC255:
	.string	"|"
.LC256:
	.string	"}"
.LC257:
	.string	"~"
	.text
	.p2align 4
	.globl	_ZN8MEMORY_T10SCREENCODEEd
	.type	_ZN8MEMORY_T10SCREENCODEEd, @function
_ZN8MEMORY_T10SCREENCODEEd:
	cvtsd2si	rsi, xmm0
	push	rbp
	mov	edi, 1
	xor	eax, eax
	sub	rsp, 64
	mov	QWORD PTR 24[rsp], 0
	lea	rbp, 32[rsp]
	call	fb_CHR@PLT
	xor	r8d, r8d
	mov	rcx, -1
	mov	rdi, rbp
	mov	rdx, rax
	mov	rsi, -1
	call	fb_StrInit@PLT
	mov	ecx, 2
	lea	rdx, .LC164[rip]
	mov	rdi, rbp
	mov	rsi, -1
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC73[rip]
	test	eax, eax
	jne	.L566
.L281:
.L284:
.L285:
.L286:
.L287:
.L288:
.L289:
.L290:
.L291:
.L292:
.L293:
.L294:
.L295:
.L296:
.L297:
.L298:
.L299:
.L300:
.L301:
.L302:
.L303:
.L304:
.L305:
.L306:
.L307:
.L308:
.L309:
.L310:
.L311:
.L312:
.L313:
.L314:
.L315:
.L316:
.L317:
.L318:
.L319:
.L320:
.L321:
.L322:
.L323:
.L324:
.L325:
.L326:
.L327:
.L328:
.L329:
.L330:
.L331:
.L332:
.L333:
.L334:
.L335:
.L336:
.L337:
.L338:
.L339:
.L340:
.L341:
.L342:
.L343:
.L344:
.L345:
.L346:
.L347:
.L348:
.L349:
.L350:
.L351:
.L352:
.L353:
.L354:
.L355:
.L356:
.L357:
.L358:
.L359:
.L360:
.L361:
.L362:
.L363:
.L364:
.L365:
.L366:
.L367:
.L368:
.L369:
.L370:
.L371:
.L372:
.L373:
.L374:
.L375:
.L376:
.L377:
.L378:
.L379:
	mov	rdi, rbp
	movsd	QWORD PTR 8[rsp], xmm0
	call	fb_StrDelete@PLT
	movsd	xmm0, QWORD PTR 8[rsp]
	add	rsp, 64
	pop	rbp
	ret
	.p2align 4,,10
	.p2align 3
.L566:
	mov	ecx, 2
	lea	rdx, .LC165[rip]
	mov	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC74[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC166[rip]
	mov	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC75[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC167[rip]
	mov	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC76[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC168[rip]
	mov	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC77[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC169[rip]
	mov	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC78[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC170[rip]
	mov	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC79[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC171[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC80[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC172[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC81[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC173[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC82[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC174[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC83[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC175[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC84[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC11[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC85[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC176[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC86[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC177[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC87[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC178[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC88[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC179[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC89[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC180[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC90[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC181[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC91[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC182[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC92[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC183[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC93[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC184[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC94[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC185[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC95[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC186[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC96[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC187[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC97[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC188[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC98[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC189[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC99[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC190[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC100[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC191[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC101[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC192[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC102[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC193[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC103[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC194[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC104[rip]
	test	eax, eax
	je	.L379
	or	rsi, -1
	mov	ecx, 2
	lea	rdx, .LC195[rip]
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	test	eax, eax
	jne	.L282
.L283:
	pxor	xmm0, xmm0
	jmp	.L379
.L282:
	mov	ecx, 2
	lea	rdx, .LC196[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC1[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC197[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC105[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC198[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC106[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC199[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC107[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC200[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC108[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC201[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC109[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC202[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC110[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC203[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC111[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC204[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC5[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC205[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC112[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC206[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC113[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC207[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC114[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC208[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC115[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC209[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC116[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC210[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC117[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC211[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC6[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC212[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC118[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC213[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC119[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC214[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC120[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC215[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC121[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC216[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC122[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC217[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC123[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC218[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC124[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC219[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC125[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC220[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC126[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC221[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC127[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC222[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC128[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC223[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC129[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC224[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC130[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC225[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC131[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC226[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC132[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC227[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC133[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC228[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC134[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC229[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC135[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC230[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC136[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC231[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC137[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC232[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC138[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC233[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC139[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC234[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC140[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC235[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC141[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC236[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC142[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC237[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC143[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC238[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC144[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC239[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC145[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC240[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC146[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC241[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC147[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC242[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC148[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC243[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC149[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC244[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC150[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC245[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC151[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC246[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC152[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC247[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC153[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC248[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC154[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC249[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC155[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC250[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC156[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC251[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC157[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC252[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC158[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC253[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC159[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC254[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC160[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC255[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC161[rip]
	test	eax, eax
	je	.L379
	mov	ecx, 2
	lea	rdx, .LC256[rip]
	or	rsi, -1
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	movsd	xmm0, QWORD PTR .LC162[rip]
	test	eax, eax
	je	.L379
	or	rsi, -1
	mov	ecx, 2
	lea	rdx, .LC257[rip]
	mov	rdi, rbp
	call	fb_StrCompare@PLT
	test	eax, eax
	jne	.L283
	movsd	xmm0, QWORD PTR .LC163[rip]
	jmp	.L379
	.size	_ZN8MEMORY_T10SCREENCODEEd, .-_ZN8MEMORY_T10SCREENCODEEd
	.p2align 4
	.globl	_ZN8MEMORY_T5PEEKBEd
	.type	_ZN8MEMORY_T5PEEKBEd, @function
_ZN8MEMORY_T5PEEKBEd:
	cvtsd2si	rax, xmm0
	movsd	xmm0, QWORD PTR [rdi+rax*8]
	ret
	.size	_ZN8MEMORY_T5PEEKBEd, .-_ZN8MEMORY_T5PEEKBEd
	.p2align 4
	.globl	_ZN8MEMORY_T5PEEKWEd
	.type	_ZN8MEMORY_T5PEEKWEd, @function
_ZN8MEMORY_T5PEEKWEd:
	movapd	xmm1, xmm0
	call	_ZN8MEMORY_T5PEEKBEd
	addsd	xmm1, QWORD PTR .LC1[rip]
	movapd	xmm2, xmm0
	cvtsd2si	rdx, xmm2
	movapd	xmm0, xmm1
	call	_ZN8MEMORY_T5PEEKBEd
	cvtsd2si	rax, xmm0
	pxor	xmm0, xmm0
	sal	rax, 8
	or	rax, rdx
	cvtsi2sd	xmm0, rax
	ret
	.size	_ZN8MEMORY_T5PEEKWEd, .-_ZN8MEMORY_T5PEEKWEd
	.p2align 4
	.globl	_ZN8MEMORY_T8ISSYMBOLE8FBSTRINGd
	.type	_ZN8MEMORY_T8ISSYMBOLE8FBSTRINGd, @function
_ZN8MEMORY_T8ISSYMBOLE8FBSTRINGd:
	push	rbx
	mov	rbx, rsi
	sub	rsp, 16
	jmp	.L570
.L572:
	.p2align 4,,10
	.p2align 3
.L575:
.L571:
	addsd	xmm0, QWORD PTR .LC1[rip]
.L570:
	cvtsd2si	rsi, xmm0
	mov	edx, 1
	mov	rdi, rbx
	movsd	QWORD PTR 8[rsp], xmm0
	call	fb_StrMid@PLT
	mov	esi, 1
	mov	rdi, rax
	call	fb_ASC@PLT
	movsd	xmm0, QWORD PTR 8[rsp]
	sub	eax, 48
	cmp	eax, 9
	ja	.L575
	add	rsp, 16
	pop	rbx
	ret
	.size	_ZN8MEMORY_T8ISSYMBOLE8FBSTRINGd, .-_ZN8MEMORY_T8ISSYMBOLE8FBSTRINGd
	.p2align 4
	.globl	_ZN8MEMORY_T8ISNUMBERE8FBSTRINGd
	.type	_ZN8MEMORY_T8ISNUMBERE8FBSTRINGd, @function
_ZN8MEMORY_T8ISNUMBERE8FBSTRINGd:
	push	r13
	push	r12
	push	rbp
	cvtsd2si	rbp, xmm0
	push	rbx
	lea	rbx, GET_DATA$[rip]
	sub	rsp, 24
	lea	r12, 1[rbp]
	mov	QWORD PTR 8[rsp], 0
	jmp	.L577
	.p2align 4,,10
	.p2align 3
.L605:
	cmp	eax, 57
	jbe	.L589
.L582:
.L584:
	cmp	eax, 66
	je	.L589
.L585:
	cmp	eax, 98
	sete	cl
	cmp	eax, 72
	sete	dl
	or	cl, dl
	jne	.L589
	cmp	eax, 104
	jne	.L588
.L578:
.L579:
	.p2align 4,,10
	.p2align 3
.L589:
.L580:
	add	r12, 1
.L577:
	lea	r13, -1[r12]
	mov	rdi, rbx
	mov	edx, 1
	mov	rsi, r13
	call	fb_StrMid@PLT
	mov	esi, 1
	mov	rdi, rax
	call	fb_ASC@PLT
	cmp	eax, 47
	ja	.L605
.L581:
	cmp	eax, 38
	je	.L589
.L586:
.L587:
	lea	edx, -45[rax]
	cmp	edx, 1
	jbe	.L589
	cmp	eax, 43
	je	.L589
.L588:
	mov	rdx, r13
	mov	rsi, rbp
	lea	rdi, GET_DATA$[rip]
	call	fb_StrMid@PLT
	mov	rdi, rax
	call	fb_VAL@PLT
	movapd	xmm1, xmm0
	pxor	xmm0, xmm0
	comisd	xmm0, xmm1
	jb	.L606
	add	rsp, 24
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	ret
.L606:
	mov	rdx, r13
	mov	rsi, rbp
	lea	rdi, GET_DATA$[rip]
	call	fb_StrMid@PLT
	add	rsp, 24
	pop	rbx
	mov	rdi, rax
	pop	rbp
	pop	r12
	pop	r13
	jmp	fb_VAL@PLT
	.size	_ZN8MEMORY_T8ISNUMBERE8FBSTRINGd, .-_ZN8MEMORY_T8ISNUMBERE8FBSTRINGd
	.p2align 4
	.globl	_ZN8MEMORY_T6GETXYZEv
	.type	_ZN8MEMORY_T6GETXYZEv, @function
_ZN8MEMORY_T6GETXYZEv:
.L608:
	push	r12
	pxor	xmm4, xmm4
	xor	r8d, r8d
	mov	rcx, -1
	push	rbp
	lea	rdx, GET_DATA$[rip]
	mov	rsi, -1
	push	rbx
	mov	rbx, rdi
	add	rsp, -128
	mov	rbp, rsp
	movups	XMMWORD PTR [rsp], xmm4
	mov	QWORD PTR 16[rsp], 0
	mov	rdi, rbp
	call	fb_StrAssign@PLT
	movsd	xmm0, QWORD PTR .LC110[rip]
	mov	rsi, rbp
	mov	rdi, rbx
	call	_ZN8MEMORY_T8ISNUMBERE8FBSTRINGd
	mov	rdi, rbp
	movsd	QWORD PTR 394840[rbx], xmm0
	call	fb_StrDelete@PLT
	movsd	xmm1, QWORD PTR 394840[rbx]
	pxor	xmm0, xmm0
	comisd	xmm1, xmm0
	je	.L620
	movapd	xmm0, xmm1
	call	fb_DoubleToStr@PLT
	mov	rsi, -1
	mov	rdi, rax
	call	fb_StrLen@PLT
	mov	edx, 1
	lea	rdi, GET_DATA$[rip]
	lea	rsi, 7[rax]
	call	fb_StrMid@PLT
	mov	ecx, 2
	lea	rdx, .LC176[rip]
	mov	rsi, -1
	mov	rdi, rax
	call	fb_StrCompare@PLT
	test	eax, eax
	je	.L624
.L611:
.L613:
	movsd	xmm0, QWORD PTR 394840[rbx]
	lea	r12, 32[rsp]
	call	fb_DoubleToStr@PLT
	mov	rsi, -1
	mov	rdi, rax
	call	fb_StrLen@PLT
	pxor	xmm2, xmm2
	xor	r8d, r8d
	mov	rdi, r12
	mov	rcx, -1
	mov	rbp, rax
	lea	rdx, GET_DATA$[rip]
	mov	rsi, -1
	movups	XMMWORD PTR 32[rsp], xmm2
	add	rbp, 9
	mov	QWORD PTR 48[rsp], 0
	call	fb_StrAssign@PLT
	pxor	xmm0, xmm0
	mov	rsi, r12
	mov	rdi, rbx
	cvtsi2sd	xmm0, rbp
	call	_ZN8MEMORY_T8ISNUMBERE8FBSTRINGd
	mov	rdi, r12
	movsd	QWORD PTR 394848[rbx], xmm0
	call	fb_StrDelete@PLT
	movsd	xmm0, QWORD PTR 394840[rbx]
	call	fb_DoubleToStr@PLT
	mov	rsi, -1
	mov	rdi, rax
	call	fb_StrLen@PLT
	mov	edx, 1
	lea	rdi, GET_DATA$[rip]
	lea	rsi, 9[rax]
	call	fb_StrMid@PLT
	mov	ecx, 2
	lea	rdx, .LC176[rip]
	mov	rsi, -1
	mov	rdi, rax
	call	fb_StrCompare@PLT
	test	eax, eax
	jne	.L615
	movsd	xmm0, QWORD PTR 394840[rbx]
	lea	r12, 96[rsp]
	call	fb_DoubleToStr@PLT
	mov	rsi, -1
	mov	rdi, rax
	call	fb_StrLen@PLT
	pxor	xmm2, xmm2
	xor	r8d, r8d
	mov	rdi, r12
	mov	rbp, rax
	mov	rcx, -1
	lea	rdx, GET_DATA$[rip]
	mov	rsi, -1
	movups	XMMWORD PTR 96[rsp], xmm2
	add	rbp, 10
	mov	QWORD PTR 112[rsp], 0
	call	fb_StrAssign@PLT
	pxor	xmm0, xmm0
	mov	rdi, rbx
	mov	rsi, r12
	cvtsi2sd	xmm0, rbp
	call	_ZN8MEMORY_T8ISNUMBERE8FBSTRINGd
	xorpd	xmm0, XMMWORD PTR .LC258[rip]
	mov	rdi, r12
	movsd	QWORD PTR 394848[rbx], xmm0
	call	fb_StrDelete@PLT
.L614:
.L615:
	movsd	xmm0, QWORD PTR 394848[rbx]
	lea	r12, 64[rsp]
	call	fb_DoubleToStr@PLT
	mov	rsi, -1
	mov	rdi, rax
	call	fb_StrLen@PLT
	pxor	xmm3, xmm3
	xor	r8d, r8d
	mov	rdi, r12
	mov	rcx, -1
	mov	rbp, rax
	lea	rdx, GET_DATA$[rip]
	mov	rsi, -1
	movups	XMMWORD PTR 64[rsp], xmm3
	add	rbp, 13
	mov	QWORD PTR 80[rsp], 0
	call	fb_StrAssign@PLT
	pxor	xmm0, xmm0
	mov	rsi, r12
	mov	rdi, rbx
	cvtsi2sd	xmm0, rbp
	call	_ZN8MEMORY_T8ISNUMBERE8FBSTRINGd
	mov	rdi, r12
	movsd	QWORD PTR 394856[rbx], xmm0
	call	fb_StrDelete@PLT
	movsd	xmm0, QWORD PTR 394848[rbx]
	call	fb_DoubleToStr@PLT
	mov	rsi, -1
	mov	rdi, rax
	call	fb_StrLen@PLT
	mov	edx, 1
	lea	rdi, GET_DATA$[rip]
	lea	rsi, 13[rax]
	call	fb_StrMid@PLT
	mov	ecx, 2
	lea	rdx, .LC176[rip]
	mov	rsi, -1
	mov	rdi, rax
	call	fb_StrCompare@PLT
	test	eax, eax
	jne	.L607
	movsd	xmm0, QWORD PTR 394848[rbx]
	lea	r12, 96[rsp]
	call	fb_DoubleToStr@PLT
	mov	rsi, -1
	mov	rdi, rax
	call	fb_StrLen@PLT
	pxor	xmm3, xmm3
	xor	r8d, r8d
	mov	rdi, r12
	mov	rbp, rax
	mov	rcx, -1
	lea	rdx, GET_DATA$[rip]
	mov	rsi, -1
	movups	XMMWORD PTR 96[rsp], xmm3
	add	rbp, 14
	mov	QWORD PTR 112[rsp], 0
	call	fb_StrAssign@PLT
	pxor	xmm0, xmm0
	mov	rdi, rbx
	mov	rsi, r12
	cvtsi2sd	xmm0, rbp
	call	_ZN8MEMORY_T8ISNUMBERE8FBSTRINGd
	mov	rdi, r12
	movsd	QWORD PTR 394856[rbx], xmm0
	call	fb_StrDelete@PLT
.L616:
.L617:
.L618:
.L607:
	sub	rsp, -128
	pop	rbx
	pop	rbp
	pop	r12
	ret
	.p2align 4,,10
	.p2align 3
.L620:
	call	fb_DoubleToStr@PLT
	mov	rsi, -1
	lea	r12, 96[rsp]
	mov	rdi, rax
	call	fb_StrLen@PLT
	pxor	xmm5, xmm5
	xor	r8d, r8d
	mov	rdi, r12
	mov	rbp, rax
	mov	rcx, -1
	lea	rdx, GET_DATA$[rip]
	mov	rsi, -1
	mov	QWORD PTR 112[rsp], 0
	add	rbp, 7
	movups	XMMWORD PTR 96[rsp], xmm5
	call	fb_StrAssign@PLT
.L623:
	pxor	xmm0, xmm0
	mov	rdi, rbx
	mov	rsi, r12
	cvtsi2sd	xmm0, rbp
	call	_ZN8MEMORY_T8ISNUMBERE8FBSTRINGd
	xorpd	xmm0, XMMWORD PTR .LC258[rip]
	mov	rdi, r12
	movsd	QWORD PTR 394840[rbx], xmm0
	call	fb_StrDelete@PLT
	jmp	.L613
	.p2align 4,,10
	.p2align 3
.L624:
	movsd	xmm0, QWORD PTR 394840[rbx]
	lea	r12, 96[rsp]
	call	fb_DoubleToStr@PLT
	mov	rsi, -1
	mov	rdi, rax
	call	fb_StrLen@PLT
	pxor	xmm6, xmm6
	xor	r8d, r8d
	mov	rdi, r12
	mov	rbp, rax
	mov	rcx, -1
	lea	rdx, GET_DATA$[rip]
	mov	rsi, -1
	mov	QWORD PTR 112[rsp], 0
	add	rbp, 8
	movups	XMMWORD PTR 96[rsp], xmm6
	call	fb_StrAssign@PLT
	jmp	.L623
	.size	_ZN8MEMORY_T6GETXYZEv, .-_ZN8MEMORY_T6GETXYZEv
	.p2align 4
	.globl	_ZN8MEMORY_T6PEEK64Ed
	.type	_ZN8MEMORY_T6PEEK64Ed, @function
_ZN8MEMORY_T6PEEK64Ed:
	comisd	xmm0, QWORD PTR .LC260[rip]
	mov	QWORD PTR -8[rsp], 0
	ja	.L626
	comisd	xmm0, QWORD PTR .LC261[rip]
	jnb	.L638
.L626:
	comisd	xmm0, QWORD PTR .LC262[rip]
	ja	.L629
	comisd	xmm0, QWORD PTR .LC263[rip]
	jb	.L629
.L630:
	subsd	xmm0, QWORD PTR .LC263[rip]
	cvtsd2si	rax, xmm0
	movsd	xmm0, QWORD PTR 134348800[rdi+rax*8]
	ret
	.p2align 4,,10
	.p2align 3
.L638:
.L627:
	subsd	xmm0, QWORD PTR .LC261[rip]
	cvtsd2si	rax, xmm0
	movsd	xmm0, QWORD PTR 134217728[rdi+rax*8]
	ret
	.p2align 4,,10
	.p2align 3
.L629:
	comisd	xmm0, QWORD PTR .LC264[rip]
	ja	.L631
	comisd	xmm0, QWORD PTR .LC265[rip]
	jnb	.L639
.L631:
	comisd	xmm0, QWORD PTR .LC266[rip]
	cvtsd2si	rax, xmm0
	ja	.L633
	comisd	xmm0, QWORD PTR .LC267[rip]
	jnb	.L640
.L633:
	movsd	xmm0, QWORD PTR [rdi+rax*8]
.L625:
	ret
	.p2align 4,,10
	.p2align 3
.L639:
.L632:
	subsd	xmm0, QWORD PTR .LC265[rip]
	cvtsd2si	rax, xmm0
	movsd	xmm0, QWORD PTR 134479872[rdi+rax*8]
	ret
	.p2align 4,,10
	.p2align 3
.L640:
.L634:
.L628:
.L635:
	and	eax, 63
	pxor	xmm0, xmm0
	cmp	rax, 18
	je	.L625
	movsd	xmm0, QWORD PTR .LC259[rip]
	ret
	.size	_ZN8MEMORY_T6PEEK64Ed, .-_ZN8MEMORY_T6PEEK64Ed
	.p2align 4
	.globl	INS_R32
	.type	INS_R32, @function
INS_R32:
.L642:
	mov	eax, DWORD PTR 64[rdi]
	pxor	xmm0, xmm0
	mov	rdx, rdi
	mov	rdi, QWORD PTR 16[rdi]
	cvtsi2sd	xmm0, rax
	call	_ZN8MEMORY_T6PEEK64Ed
	cvtsd2si	eax, xmm0
	mov	BYTE PTR 8[rdx], al
	ret
	.size	INS_R32, .-INS_R32
	.p2align 4
	.globl	INS_R64
	.type	INS_R64, @function
INS_R64:
.L646:
	mov	rax, QWORD PTR 64[rdi]
	pxor	xmm0, xmm0
	mov	rdx, rdi
	cvtsi2sd	xmm0, rax
	test	rax, rax
	jns	.L648
	mov	rcx, rax
	and	eax, 1
	pxor	xmm0, xmm0
	shr	rcx
	or	rcx, rax
	cvtsi2sd	xmm0, rcx
	addsd	xmm0, xmm0
.L648:
	mov	rdi, QWORD PTR 16[rdx]
	call	_ZN8MEMORY_T6PEEK64Ed
	cvtsd2si	eax, xmm0
	mov	BYTE PTR 8[rdx], al
	ret
	.size	INS_R64, .-INS_R64
	.section	.rodata.str1.8
	.align 8
.LC359:
	.string	"mplayer -vo xv -fs -alang en dvd://"
	.section	.rodata.str1.1
.LC360:
	.string	" -dvd-device /dev/sr0"
	.section	.rodata.str1.8
	.align 8
.LC361:
	.string	"mplayer -vo xv -fs dvdnav:// -mouse-movements -dvd-device /dev/sr0"
	.section	.rodata.str1.1
.LC391:
	.string	"./shaders/pc/demo.glsl"
.LC392:
	.string	"file: "
.LC393:
	.string	"\n\n"
.LC394:
	.string	" ok ..."
.LC397:
	.string	"FreeBASIC"
.LC398:
	.string	"Shadertoy.com"
.LC400:
	.string	"iChannel0"
.LC401:
	.string	"iGlobalTime"
.LC402:
	.string	"iTime"
.LC403:
	.string	"iResolution"
.LC404:
	.string	"iMouse"
.LC405:
	.string	"iFrame"
.LC408:
	.string	" fps: "
.LC411:
	.string	"tmp.pov"
.LC412:
	.string	"// Start of file"
.LC413:
	.string	"// End of file"
.LC414:
	.string	"povray -d -H600 -W800 tmp.pov"
	.section	.rodata.str1.8
	.align 8
.LC415:
	.string	"convert tmp.png -w --o tmp.bmp"
	.section	.rodata.str1.1
.LC416:
	.string	"cp tmp.bmp ./vram/"
.LC417:
	.string	".bmp"
.LC418:
	.string	"rm tmp.pov tmp.png"
.LC419:
	.string	"./vram/"
.LC421:
	.string	".\\vram\\"
.LC422:
	.string	"aa_level"
.LC423:
	.string	"aastep"
.LC424:
	.string	"aa_threshold"
.LC425:
	.string	"abs"
.LC426:
	.string	"absolute"
.LC427:
	.string	"absorption"
.LC428:
	.string	"abstract"
.LC429:
	.string	"accept"
.LC430:
	.string	"access"
.LC431:
	.string	"accuracy"
.LC432:
	.string	"acos"
.LC433:
	.string	"acosh"
.LC434:
	.string	"active"
.LC435:
	.string	"adaptive"
.LC436:
	.string	"adc_bailout"
.LC437:
	.string	"add"
.LC438:
	.string	"address"
.LC439:
	.string	"advancing"
.LC440:
	.string	"after"
.LC441:
	.string	"agate"
.LC442:
	.string	"agate_turb"
.LC443:
	.string	"alias"
.LC444:
	.string	"all"
.LC445:
	.string	"all_intersections"
.LC446:
	.string	"alpha"
.LC447:
	.string	"alphabet"
.LC448:
	.string	"alphabetic"
.LC449:
	.string	"alphabetic-lower"
.LC450:
	.string	"alphabetic-upper"
.LC451:
	.string	"alphanumeric"
.LC452:
	.string	"alphanumeric-edited"
.LC453:
	.string	"also"
.LC454:
	.string	"alter"
.LC455:
	.string	"alternate"
.LC456:
	.string	"altitude"
.LC457:
	.string	"always_sample"
.LC458:
	.string	"ambient"
.LC459:
	.string	"ambient_light"
.LC460:
	.string	"and"
.LC461:
	.string	"and_bits"
.LC462:
	.string	"angle"
.LC463:
	.string	"any"
.LC464:
	.string	"aperture"
.LC465:
	.string	"append"
.LC466:
	.string	"apply"
.LC467:
	.string	"arc_angle"
.LC468:
	.string	"are"
.LC469:
	.string	"area"
.LC470:
	.string	"area_light"
.LC471:
	.string	"areas"
.LC472:
	.string	"array"
.LC473:
	.string	"arraylength"
.LC474:
	.string	"as"
.LC475:
	.string	"asc"
.LC476:
	.string	"ascending"
.LC477:
	.string	"ascii"
.LC478:
	.string	"asin"
.LC479:
	.string	"asinh"
.LC480:
	.string	"asm"
.LC481:
	.string	"assembler"
.LC482:
	.string	"assert"
.LC483:
	.string	"assign"
.LC484:
	.string	"assumed_gamma"
.LC485:
	.string	"async"
.LC486:
	.string	"at"
.LC487:
	.string	"atan"
.LC488:
	.string	"atan2"
.LC489:
	.string	"atanh"
.LC490:
	.string	"atn"
.LC491:
	.string	"attribute"
.LC492:
	.string	"author"
.LC493:
	.string	"auto"
.LC494:
	.string	"automatic"
.LC495:
	.string	"autostop"
.LC496:
	.string	"average"
.LC497:
	.string	"avg"
.LC498:
	.string	"await"
.LC499:
	.string	"backfacing"
.LC500:
	.string	"background"
.LC501:
	.string	"backspace"
.LC502:
	.string	"basis"
.LC503:
	.string	"beep"
.LC504:
	.string	"before"
.LC505:
	.string	"begin"
.LC506:
	.string	"beginning"
.LC507:
	.string	"between"
.LC508:
	.string	"bezier_spline"
.LC509:
	.string	"bicubic_patch"
.LC510:
	.string	"binary"
.LC511:
	.string	"bind"
.LC512:
	.string	"blackbody"
.LC513:
	.string	"black_hole"
.LC514:
	.string	"blank"
.LC515:
	.string	"bload"
.LC516:
	.string	"blob"
.LC517:
	.string	"block"
.LC518:
	.string	"blue"
.LC519:
	.string	"blur_samples"
.LC520:
	.string	"bool"
.LC521:
	.string	"both"
.LC522:
	.string	"bottom"
.LC523:
	.string	"bounded_by"
.LC524:
	.string	"box"
.LC525:
	.string	"boxed"
.LC526:
	.string	"bozo"
.LC527:
	.string	"break"
.LC528:
	.string	"brick"
.LC529:
	.string	"brick_size"
.LC530:
	.string	"brightness"
.LC531:
	.string	"brilliance"
.LC532:
	.string	"bsave"
.LC533:
	.string	"b_spline"
.LC534:
	.string	"bump"
.LC535:
	.string	"bump_map"
.LC536:
	.string	"bumps"
.LC537:
	.string	"bump_size"
.LC538:
	.string	"bvec2"
.LC539:
	.string	"bvec3"
.LC540:
	.string	"bvec4"
.LC541:
	.string	"by"
.LC542:
	.string	"byte"
.LC543:
	.string	"cache"
.LC544:
	.string	"calculatenormal"
.LC545:
	.string	"call"
.LC546:
	.string	"calls"
.LC547:
	.string	"camera"
.LC548:
	.string	"cancel"
.LC549:
	.string	"cardinality"
.LC550:
	.string	"case"
.LC551:
	.string	"cast"
.LC552:
	.string	"castnamespace"
.LC553:
	.string	"caustics"
.LC554:
	.string	"cbl"
.LC555:
	.string	"cbrt"
.LC556:
	.string	"cd"
.LC557:
	.string	"cdbl"
.LC558:
	.string	"cdecl"
.LC559:
	.string	"ceil"
.LC560:
	.string	"cellnoise"
.LC561:
	.string	"cells"
.LC562:
	.string	"centroid"
.LC563:
	.string	"cf"
.LC564:
	.string	"ch"
.LC565:
	.string	"chain"
.LC566:
	.string	"char"
.LC567:
	.string	"character"
.LC568:
	.string	"character_length"
.LC569:
	.string	"character_length_b"
.LC570:
	.string	"character_length_mb"
.LC571:
	.string	"characters"
.LC572:
	.string	"char_length"
.LC573:
	.string	"char_length_b"
.LC574:
	.string	"char_length_mb"
.LC575:
	.string	"charset"
.LC576:
	.string	"chdir"
.LC577:
	.string	"check"
.LC578:
	.string	"checker"
.LC579:
	.string	"chr"
.LC580:
	.string	"cint"
.LC581:
	.string	"circle"
.LC582:
	.string	"circular"
.LC583:
	.string	"clamp"
.LC584:
	.string	"class"
.LC585:
	.string	"class-id"
.LC586:
	.string	"clear"
.LC587:
	.string	"clipped_by"
.LC588:
	.string	"clock"
.LC589:
	.string	"clock_delta"
.LC590:
	.string	"clock_on"
.LC591:
	.string	"clock-units"
.LC592:
	.string	"close"
.LC593:
	.string	"closure"
.LC594:
	.string	"cls"
.LC595:
	.string	"cobol"
.LC596:
	.string	"code"
.LC597:
	.string	"code-set"
.LC598:
	.string	"collating"
.LC599:
	.string	"collect"
.LC600:
	.string	"color"
.LC601:
	.string	"color_map"
.LC602:
	.string	"color.w"
.LC603:
	.string	"colour"
.LC604:
	.string	"colour_map"
.LC605:
	.string	"column"
.LC606:
	.string	"com"
.LC607:
	.string	"comma"
.LC608:
	.string	"comment"
.LC609:
	.string	"commit"
.LC610:
	.string	"common"
.LC611:
	.string	"communication"
.LC612:
	.string	"comp"
.LC613:
	.string	"comp-1"
.LC614:
	.string	"comp-2"
.LC615:
	.string	"comp-3"
.LC616:
	.string	"comp-4"
.LC617:
	.string	"comp-5"
.LC618:
	.string	"complex"
.LC619:
	.string	"component"
.LC620:
	.string	"composite"
.LC621:
	.string	"computational"
.LC622:
	.string	"computational-1"
.LC623:
	.string	"computational-2"
.LC624:
	.string	"computational-3"
.LC625:
	.string	"computational-4"
.LC626:
	.string	"computational-5"
.LC627:
	.string	"compute"
.LC628:
	.string	"com-reg"
.LC629:
	.string	"concat"
.LC630:
	.string	"concatenate"
.LC631:
	.string	"cond"
.LC632:
	.string	"cone"
.LC633:
	.string	"confidence"
.LC634:
	.string	"configuration"
.LC635:
	.string	"conic_sweep"
.LC636:
	.string	"conserve_energy"
.LC637:
	.string	"const"
.LC638:
	.string	"constref"
.LC639:
	.string	"constructor"
.LC640:
	.string	"cont"
.LC641:
	.string	"contained_by"
.LC642:
	.string	"contains"
.LC643:
	.string	"content"
.LC644:
	.string	"continue"
.LC645:
	.string	"control"
.LC646:
	.string	"control0"
.LC647:
	.string	"control1"
.LC648:
	.string	"controls"
.LC649:
	.string	"converting"
.LC650:
	.string	"coords"
.LC651:
	.string	"corr"
.LC652:
	.string	"corresponding"
.LC653:
	.string	"cos"
.LC654:
	.string	"cosh"
.LC655:
	.string	"count"
.LC656:
	.string	"cppdecl"
.LC657:
	.string	"crackle"
.LC658:
	.string	"crand"
.LC659:
	.string	"cross"
.LC660:
	.string	"csng"
.LC661:
	.string	"csrlin"
.LC662:
	.string	"cube"
.LC663:
	.string	"cubic"
.LC664:
	.string	"cubic_spline"
.LC665:
	.string	"cubic_wave"
.LC666:
	.string	"currency"
.LC667:
	.string	"current_date"
.LC668:
	.string	"current_time"
.LC669:
	.string	"current_timestamp"
.LC670:
	.string	"cursor"
.LC671:
	.string	"cutaway_textures"
.LC672:
	.string	"cvd"
.LC673:
	.string	"cvi"
.LC674:
	.string	"cvs"
.LC675:
	.string	"cylinder"
.LC676:
	.string	"cylindrical"
.LC677:
	.string	"data"
.LC678:
	.string	"dataxel"
.LC679:
	.string	"date"
.LC680:
	.string	"date-compiled"
.LC681:
	.string	"date-written"
.LC682:
	.string	"day"
.LC683:
	.string	"day-of-week"
.LC684:
	.string	"dbcs"
.LC685:
	.string	"dbms_in_memory"
.LC686:
	.string	"de"
.LC687:
	.string	"debug"
.LC688:
	.string	"debug-contents"
.LC689:
	.string	"debugging"
.LC690:
	.string	"debug-item"
.LC691:
	.string	"debug-line"
.LC692:
	.string	"debug-name"
.LC693:
	.string	"debug-sub-1"
.LC694:
	.string	"debug-sub-2"
.LC695:
	.string	"debug-sub-3"
.LC696:
	.string	"dec"
.LC697:
	.string	"decimal"
.LC698:
	.string	"decimal-point"
.LC699:
	.string	"declaratives"
.LC700:
	.string	"declare"
.LC701:
	.string	"decode"
.LC702:
	.string	"def"
.LC703:
	.string	"default"
.LC704:
	.string	"defdbl"
.LC705:
	.string	"define"
.LC706:
	.string	"defined"
.LC707:
	.string	"defint"
.LC708:
	.string	"defsng"
.LC709:
	.string	"defstr"
.LC710:
	.string	"degrees"
.LC711:
	.string	"delete"
.LC712:
	.string	"delimited"
.LC713:
	.string	"delimiter"
.LC714:
	.string	"density"
.LC715:
	.string	"density_file"
.LC716:
	.string	"density_map"
.LC717:
	.string	"dents"
.LC718:
	.string	"depending"
.LC719:
	.string	"desc"
.LC720:
	.string	"descending"
.LC721:
	.string	"destination"
.LC722:
	.string	"destructor"
.LC723:
	.string	"detail"
.LC724:
	.string	"determinant"
.LC725:
	.string	"df3"
.LC726:
	.string	"dict_find"
.LC727:
	.string	"dict_next"
.LC728:
	.string	"dict_value"
.LC729:
	.string	"difference"
.LC730:
	.string	"diffuse"
.LC731:
	.string	"dim"
.LC732:
	.string	"dimension"
.LC733:
	.string	"dimensions"
.LC734:
	.string	"dimension_size"
.LC735:
	.string	"direction"
.LC736:
	.string	"directive_error"
.LC737:
	.string	"disc"
.LC738:
	.string	"discard"
.LC739:
	.string	"dispersion"
.LC740:
	.string	"dispersion_samples"
.LC741:
	.string	"displace"
.LC742:
	.string	"display"
.LC743:
	.string	"display-1"
.LC744:
	.string	"dispose"
.LC745:
	.string	"distance"
.LC746:
	.string	"dist_exp"
.LC747:
	.string	"distinct"
.LC748:
	.string	"div"
.LC749:
	.string	"divide"
.LC750:
	.string	"division"
.LC751:
	.string	"do"
.LC752:
	.string	"dot"
.LC753:
	.string	"double"
.LC754:
	.string	"doublegreatethan"
.LC755:
	.string	"double_illuminate"
.LC756:
	.string	"down"
.LC757:
	.string	"downto"
.LC758:
	.string	"draw"
.LC759:
	.string	"duplicates"
.LC760:
	.string	"dvec2"
.LC761:
	.string	"dvec3"
.LC762:
	.string	"dvec4"
.LC763:
	.string	"dx"
.LC764:
	.string	"dy"
.LC765:
	.string	"dynamic"
.LC766:
	.string	"dz"
.LC767:
	.string	"eccentricity"
.LC768:
	.string	"edit"
.LC769:
	.string	"egcs"
.LC770:
	.string	"egi"
.LC771:
	.string	"eject"
.LC772:
	.string	"elif"
.LC773:
	.string	"else"
.LC774:
	.string	"elseif"
.LC775:
	.string	"emi"
.LC776:
	.string	"emission"
.LC777:
	.string	"enable"
.LC778:
	.string	"encode"
.LC779:
	.string	"end"
.LC780:
	.string	"end-add"
.LC781:
	.string	"end-call"
.LC782:
	.string	"end-compute"
.LC783:
	.string	"end-delete"
.LC784:
	.string	"end-divide"
.LC785:
	.string	"end-evaluate"
.LC786:
	.string	"end-if"
.LC787:
	.string	"ending"
.LC788:
	.string	"end-invoke"
.LC789:
	.string	"end-multiply"
.LC790:
	.string	"endofdata"
.LC791:
	.string	"end-of-page"
.LC792:
	.string	"end-perform"
.LC793:
	.string	"end-read"
.LC794:
	.string	"end-receive"
.LC795:
	.string	"end-return"
.LC796:
	.string	"end-rewrite"
.LC797:
	.string	"end-search"
.LC798:
	.string	"end-start"
.LC799:
	.string	"end-string"
.LC800:
	.string	"end-subtract"
.LC801:
	.string	"endswith"
.LC802:
	.string	"end-unstring"
.LC803:
	.string	"end-write"
.LC804:
	.string	"enter"
.LC805:
	.string	"entry"
.LC806:
	.string	"enum"
.LC807:
	.string	"environ"
.LC808:
	.string	"environment"
.LC809:
	.string	"eof"
.LC810:
	.string	"eop"
.LC811:
	.string	"equal"
.LC812:
	.string	"equivalence"
.LC813:
	.string	"eqv"
.LC814:
	.string	"erase"
.LC815:
	.string	"erdev"
.LC816:
	.string	"erf"
.LC817:
	.string	"erfc"
.LC818:
	.string	"erl"
.LC819:
	.string	"err"
.LC820:
	.string	"error"
.LC821:
	.string	"error_bound"
.LC822:
	.string	"escape"
.LC823:
	.string	"esi"
.LC824:
	.string	"evaluate"
.LC825:
	.string	"every"
.LC826:
	.string	"except"
.LC827:
	.string	"exception"
.LC828:
	.string	"exit"
.LC829:
	.string	"exp"
.LC830:
	.string	"exp2"
.LC831:
	.string	"expand"
.LC832:
	.string	"expand_thresholds"
.LC833:
	.string	"expm1"
.LC834:
	.string	"exponent"
.LC835:
	.string	"export"
.LC836:
	.string	"exports"
.LC837:
	.string	"extend"
.LC838:
	.string	"exterior"
.LC839:
	.string	"extern"
.LC840:
	.string	"external"
.LC841:
	.string	"exterr"
.LC842:
	.string	"extinction"
.LC843:
	.string	"extract"
.LC844:
	.string	"fabs"
.LC845:
	.string	"faceforward"
.LC846:
	.string	"face_indices"
.LC847:
	.string	"facets"
.LC848:
	.string	"fade_color"
.LC849:
	.string	"fade_colour"
.LC850:
	.string	"fade_distance"
.LC851:
	.string	"fade_power"
.LC852:
	.string	"falloff"
.LC853:
	.string	"falloff_angle"
.LC854:
	.string	"false"
.LC855:
	.string	"far"
.LC856:
	.string	"fclose"
.LC857:
	.string	"fd"
.LC858:
	.string	"field"
.LC859:
	.string	"file"
.LC860:
	.string	"file-control"
.LC861:
	.string	"file_exists"
.LC862:
	.string	"files"
.LC863:
	.string	"filler"
.LC864:
	.string	"filter"
.LC865:
	.string	"filterwidth"
.LC866:
	.string	"final"
.LC867:
	.string	"final_clock"
.LC868:
	.string	"final_frame"
.LC869:
	.string	"finalization"
.LC870:
	.string	"finally"
.LC871:
	.string	"finish"
.LC872:
	.string	"first"
.LC873:
	.string	"fisheye"
.LC874:
	.string	"fix"
.LC875:
	.string	"fixed"
.LC876:
	.string	"flat"
.LC877:
	.string	"flatness"
.LC878:
	.string	"flip"
.LC879:
	.string	"float"
.LC880:
	.string	"floor"
.LC881:
	.string	"fmod"
.LC882:
	.string	"fn"
.LC883:
	.string	"focal_point"
.LC884:
	.string	"fog"
.LC885:
	.string	"fog_alt"
.LC886:
	.string	"fog_offset"
.LC887:
	.string	"fog_type"
.LC888:
	.string	"footing"
.LC889:
	.string	"fopen"
.LC890:
	.string	"for"
.LC891:
	.string	"form"
.LC892:
	.string	"format"
.LC893:
	.string	"forward"
.LC894:
	.string	"fprintf"
.LC895:
	.string	"frag_color"
.LC896:
	.string	"fragcolor"
.LC897:
	.string	"frag_coord"
.LC898:
	.string	"fragcoord"
.LC899:
	.string	"frame_number"
.LC900:
	.string	"fre"
.LC901:
	.string	"frequency"
.LC902:
	.string	"fresnel"
.LC903:
	.string	"from"
.LC904:
	.string	"full"
.LC905:
	.string	"function"
.LC906:
	.string	"fvec2"
.LC907:
	.string	"fvec3"
.LC908:
	.string	"fvec4"
.LC909:
	.string	"gather"
.LC910:
	.string	"generate"
.LC911:
	.string	"generic"
.LC912:
	.string	"get"
.LC913:
	.string	"getattribute"
.LC914:
	.string	"getchar"
.LC915:
	.string	"getmatrix"
.LC916:
	.string	"getmessage"
.LC917:
	.string	"gettextureinfo"
.LC918:
	.string	"gif"
.LC919:
	.string	"giving"
.LC920:
	.string	"gl_fragcolor"
.LC921:
	.string	"gl_fragcoord.xy"
.LC922:
	.string	"global"
.LC923:
	.string	"global_lights"
.LC924:
	.string	"global_settings"
.LC925:
	.string	"go"
.LC926:
	.string	"goback"
.LC927:
	.string	"\r\n"
.LC931:
	.string	"CHARS.INC"
.LC932:
	.string	"#include \r"
.LC933:
	.string	"\r"
.LC934:
	.string	"COLORS.INC"
.LC935:
	.string	"CONSTS.INC"
.LC936:
	.string	"DEBUG.INC"
.LC937:
	.string	"FINISH.INC"
.LC938:
	.string	"GLASS.INC"
.LC939:
	.string	"GOLDS.INC"
.LC940:
	.string	"METALS.INC"
.LC941:
	.string	"RAD_DEF.INC"
.LC942:
	.string	"SHAPES2.INC"
.LC943:
	.string	"SHAPES.INC"
.LC944:
	.string	"SHAPESQ.INC"
.LC945:
	.string	"SKIES.INC"
.LC946:
	.string	"STAGE1.INC"
.LC947:
	.string	"STARS.INC"
.LC948:
	.string	"STDCAM.INC"
.LC949:
	.string	"STONEOLD.INC"
.LC950:
	.string	"STONES1.INC"
.LC951:
	.string	"STONES2.INC"
.LC952:
	.string	"STONES.INC"
.LC953:
	.string	"TEXTURES.INC"
.LC954:
	.string	"WOODMAPS.INC"
.LC955:
	.string	"WOODS.INC"
.LC956:
	.string	"gosub"
.LC957:
	.string	"goto"
.LC958:
	.string	"gradient"
.LC959:
	.string	"granite"
.LC960:
	.string	"gray"
.LC961:
	.string	"gray_threshold"
.LC962:
	.string	"greateeq"
.LC963:
	.string	"greater"
.LC964:
	.string	"green"
.LC965:
	.string	"group"
.LC966:
	.string	"group_by"
.LC967:
	.string	"half"
.LC968:
	.string	"hash"
.LC969:
	.string	"hashnoise"
.LC970:
	.string	"having"
.LC971:
	.string	"header"
.LC972:
	.string	"heading"
.LC973:
	.string	"height_field"
.LC974:
	.string	"henyey_greenstein"
.LC975:
	.string	"hex"
.LC976:
	.string	"hexagon"
.LC977:
	.string	"hf_gray_16"
.LC978:
	.string	"hierarchy"
.LC979:
	.string	"highp"
.LC980:
	.string	"high-value"
.LC981:
	.string	"high-values"
.LC982:
	.string	"high_values"
.LC983:
	.string	"hintend"
.LC984:
	.string	"hint_error"
.LC985:
	.string	"hintstart"
.LC986:
	.string	"holdout"
.LC987:
	.string	"hollow"
.LC988:
	.string	"hour"
.LC989:
	.string	"hvec2"
.LC990:
	.string	"hvec3"
.LC991:
	.string	"hvec4"
.LC992:
	.string	"hypercomplex"
.LC993:
	.string	"hypot"
.LC994:
	.string	"iChannel1"
.LC995:
	.string	"iChannel2"
.LC996:
	.string	"iChannel3"
.LC997:
	.string	"iChannelResolution"
.LC998:
	.string	"iChannelTime"
.LC999:
	.string	"iCube"
.LC1000:
	.string	"id"
.LC1001:
	.string	"iDate"
.LC1002:
	.string	"identification"
.LC1003:
	.string	"if"
.LC1004:
	.string	"ifdef"
.LC1005:
	.string	"ifelse"
.LC1006:
	.string	"iff"
.LC1007:
	.string	"ifndef"
.LC1008:
	.string	"iframe"
.LC1009:
	.string	"iframerate"
.LC1010:
	.string	"iimage1d"
.LC1011:
	.string	"iimage1darray"
.LC1012:
	.string	"iimage2d"
.LC1013:
	.string	"iimage2darray"
.LC1014:
	.string	"iimage3d"
.LC1015:
	.string	"iimagebuffer"
.LC1016:
	.string	"iimagecube"
.LC1017:
	.string	"image"
.LC1018:
	.string	"image1d"
.LC1019:
	.string	"image1darray"
.LC1020:
	.string	"image1darrayshadow"
.LC1021:
	.string	"image1dshadow"
.LC1022:
	.string	"image2d"
.LC1023:
	.string	"image2darray"
.LC1024:
	.string	"image2darrayshadow"
.LC1025:
	.string	"image2dshadow"
.LC1026:
	.string	"image3d"
.LC1027:
	.string	"imagebuffer"
.LC1028:
	.string	"imagecube"
.LC1029:
	.string	"image_height"
.LC1030:
	.string	"image_map"
.LC1031:
	.string	"image_pattern"
.LC1032:
	.string	"image_width"
.LC1033:
	.string	"imouse"
.LC1034:
	.string	"imp"
.LC1035:
	.string	"implementation"
.LC1036:
	.string	"import"
.LC1037:
	.string	"in"
.LC1038:
	.string	"include"
.LC1039:
	.string	"index"
.LC1040:
	.string	"indexed"
.LC1041:
	.string	"indicate"
.LC1042:
	.string	"inherited"
.LC1043:
	.string	"inherits"
.LC1044:
	.string	"initial"
.LC1045:
	.string	"initial_clock"
.LC1046:
	.string	"initial_frame"
.LC1047:
	.string	"initialization"
.LC1048:
	.string	"initialize"
.LC1049:
	.string	"initiate"
.LC1050:
	.string	"inkey"
.LC1051:
	.string	"inline"
.LC1052:
	.string	"inlinenoinline"
.LC1053:
	.string	"in_memory"
.LC1054:
	.string	"inner"
.LC1055:
	.string	"inout"
.LC1056:
	.string	"inp"
.LC1057:
	.string	"input"
.LC1058:
	.string	"input-output"
.LC1059:
	.string	"inquire"
.LC1060:
	.string	"insert"
.LC1061:
	.string	"inside"
.LC1062:
	.string	"inside_vector"
.LC1063:
	.string	"inspect"
.LC1064:
	.string	"installation"
.LC1065:
	.string	"instr"
.LC1066:
	.string	"int"
.LC1067:
	.string	"integer"
.LC1068:
	.string	"interface"
.LC1069:
	.string	"interior"
.LC1070:
	.string	"interior_texture"
.LC1071:
	.string	"internal"
.LC1072:
	.string	"interpolate"
.LC1073:
	.string	"intersect"
.LC1074:
	.string	"intersection"
.LC1075:
	.string	"interval"
.LC1076:
	.string	"intervals"
.LC1077:
	.string	"into"
.LC1078:
	.string	"intrinsic"
.LC1079:
	.string	"invalid"
.LC1080:
	.string	"invariant"
.LC1081:
	.string	"inverse"
.LC1082:
	.string	"inversesqr"
.LC1083:
	.string	"invoke"
.LC1084:
	.string	"i-o"
.LC1085:
	.string	"i-o-control"
.LC1086:
	.string	"ioctl"
.LC1087:
	.string	"ior"
.LC1088:
	.string	"i_resolution"
.LC1089:
	.string	"irid"
.LC1090:
	.string	"irid_wavelength"
.LC1091:
	.string	"is"
.LC1092:
	.string	"isampler1D"
.LC1093:
	.string	"isampler1darray"
.LC1094:
	.string	"isampler2D"
.LC1095:
	.string	"isampler2darray"
.LC1096:
	.string	"isampler2drect"
.LC1097:
	.string	"isampler3D"
.LC1098:
	.string	"isamplerate"
.LC1099:
	.string	"isamplerbuffer"
.LC1100:
	.string	"isamplercube"
.LC1101:
	.string	"isconnected"
.LC1102:
	.string	"isconstant"
.LC1103:
	.string	"isfinite"
.LC1104:
	.string	"isinf"
.LC1105:
	.string	"isnan"
.LC1106:
	.string	"isosurface"
.LC1107:
	.string	"isotropic"
.LC1108:
	.string	"iterate"
.LC1109:
	.string	"i_time"
.LC1110:
	.string	"itime"
.LC1111:
	.string	"itimedelta"
.LC1112:
	.string	"ivec2"
.LC1113:
	.string	"ivec3"
.LC1114:
	.string	"ivec4"
.LC1115:
	.string	"jitter"
.LC1116:
	.string	"join"
.LC1117:
	.string	"jpeg"
.LC1118:
	.string	"julia"
.LC1119:
	.string	"julia_fractal"
.LC1120:
	.string	"just"
.LC1121:
	.string	"justified"
.LC1122:
	.string	"kanji"
.LC1123:
	.string	"key"
.LC1124:
	.string	"kill"
.LC1125:
	.string	"label"
.LC1126:
	.string	"lambda"
.LC1127:
	.string	"last"
.LC1128:
	.string	"lathe"
.LC1129:
	.string	"layout"
.LC1130:
	.string	"lcopy"
.LC1131:
	.string	"leading"
.LC1132:
	.string	"leave"
.LC1133:
	.string	"left"
.LC1134:
	.string	"len"
.LC1135:
	.string	"length"
.LC1136:
	.string	"leopard"
.LC1137:
	.string	"less"
.LC1138:
	.string	"lesseq"
.LC1139:
	.string	"let"
.LC1140:
	.string	"libraryt"
.LC1141:
	.string	"light_group"
.LC1142:
	.string	"light_source"
.LC1143:
	.string	"like"
.LC1144:
	.string	"limit"
.LC1145:
	.string	"limits"
.LC1146:
	.string	"linage"
.LC1147:
	.string	"linage-counter"
.LC1148:
	.string	"line"
.LC1149:
	.string	"linear_spline"
.LC1150:
	.string	"linearstep"
.LC1151:
	.string	"linear_sweep"
.LC1152:
	.string	"line-counter"
.LC1153:
	.string	"lines"
.LC1154:
	.string	"linkage"
.LC1155:
	.string	"list"
.LC1156:
	.string	"llist"
.LC1157:
	.string	"ln"
.LC1158:
	.string	"load"
.LC1159:
	.string	"load_file"
.LC1160:
	.string	"loc"
.LC1161:
	.string	"local"
.LC1162:
	.string	"local-storage"
.LC1163:
	.string	"locate"
.LC1164:
	.string	"location"
.LC1165:
	.string	"lock"
.LC1166:
	.string	"lof"
.LC1167:
	.string	"log"
.LC1168:
	.string	"log10"
.LC1169:
	.string	"log2"
.LC1170:
	.string	"logb"
.LC1171:
	.string	"logical"
.LC1172:
	.string	"long"
.LC1173:
	.string	"look_at"
.LC1174:
	.string	"looks_like"
.LC1175:
	.string	"loop"
.LC1176:
	.string	"lower"
.LC1177:
	.string	"lower_mb"
.LC1178:
	.string	"low_error_factor"
.LC1179:
	.string	"lowp"
.LC1180:
	.string	"low-value"
.LC1181:
	.string	"low-values"
.LC1182:
	.string	"lpad"
.LC1183:
	.string	"lpos"
.LC1184:
	.string	"lprint"
.LC1185:
	.string	"lset"
.LC1186:
	.string	"luminance"
.LC1187:
	.string	"m_2_pi"
.LC1188:
	.string	"m_2_sqrtpi"
.LC1189:
	.string	"m_4_pi"
.LC1190:
	.string	"macro"
.LC1191:
	.string	"magnet"
.LC1192:
	.string	"main"
.LC1193:
	.string	"main_image"
.LC1194:
	.string	"mainImage"
.LC1195:
	.string	"major_radius"
.LC1196:
	.string	"mandel"
.LC1197:
	.string	"map"
.LC1198:
	.string	"map_type"
.LC1199:
	.string	"marble"
.LC1200:
	.string	"mat2"
.LC1201:
	.string	"mat2x2"
.LC1202:
	.string	"mat2x3"
.LC1203:
	.string	"mat2x4"
.LC1204:
	.string	"mat3"
.LC1205:
	.string	"mat3x2"
.LC1206:
	.string	"mat3x3"
.LC1207:
	.string	"mat3x4"
.LC1208:
	.string	"mat4"
.LC1209:
	.string	"mat4x2"
.LC1210:
	.string	"mat4x3"
.LC1211:
	.string	"mat4x4"
.LC1212:
	.string	"material"
.LC1213:
	.string	"material_map"
.LC1214:
	.string	"matrix"
.LC1215:
	.string	"max"
.LC1216:
	.string	"max_extent"
.LC1217:
	.string	"max_gradient"
.LC1218:
	.string	"max_intersections"
.LC1219:
	.string	"max_iteration"
.LC1220:
	.string	"max_sample"
.LC1221:
	.string	"max_trace"
.LC1222:
	.string	"max_trace_level"
.LC1223:
	.string	"m_e"
.LC1224:
	.string	"media"
.LC1225:
	.string	"media_attenuation"
.LC1226:
	.string	"media_interaction"
.LC1227:
	.string	"mediump"
.LC1228:
	.string	"memory"
.LC1229:
	.string	"memory_size"
.LC1230:
	.string	"merge"
.LC1231:
	.string	"mesh"
.LC1232:
	.string	"mesh2"
.LC1233:
	.string	"message"
.LC1234:
	.string	"metaclass"
.LC1235:
	.string	"meta_hint"
.LC1236:
	.string	"metallic"
.LC1237:
	.string	"method"
.LC1238:
	.string	"method-id"
.LC1239:
	.string	"metric"
.LC1240:
	.string	"microfacet"
.LC1241:
	.string	"mid"
.LC1242:
	.string	"min"
.LC1243:
	.string	"min_extentv"
.LC1244:
	.string	"minimum_reuse"
.LC1245:
	.string	"minute"
.LC1246:
	.string	"mkd"
.LC1247:
	.string	"mkdir"
.LC1248:
	.string	"mki"
.LC1249:
	.string	"mks"
.LC1250:
	.string	"m_ln"
.LC1251:
	.string	"m_ln2"
.LC1252:
	.string	"m_log10e"
.LC1253:
	.string	"m_log2e"
.LC1254:
	.string	"mod"
.LC1255:
	.string	"mode"
.LC1256:
	.string	"modules"
.LC1257:
	.string	"month"
.LC1258:
	.string	"more-labels"
.LC1259:
	.string	"mortar"
.LC1260:
	.string	"motor"
.LC1261:
	.string	"move"
.LC1262:
	.string	"m_pi"
.LC1263:
	.string	"m_pi_2"
.LC1264:
	.string	"m_pi_4"
.LC1265:
	.string	"m_sqrt"
.LC1266:
	.string	"m_sqrt2"
.LC1267:
	.string	"multiple"
.LC1268:
	.string	"multiply"
.LC1269:
	.string	"name"
.LC1270:
	.string	"namelist"
.LC1271:
	.string	"native"
.LC1272:
	.string	"native_binary"
.LC1273:
	.string	"natural"
.LC1274:
	.string	"natural_spline"
.LC1275:
	.string	"nchar"
.LC1276:
	.string	"near"
.LC1277:
	.string	"nearest_count"
.LC1278:
	.string	"negative"
.LC1279:
	.string	"nested_loop"
.LC1280:
	.string	"new"
.LC1281:
	.string	"next"
.LC1282:
	.string	"nil"
.LC1283:
	.string	"no"
.LC1284:
	.string	"no_bump_scale"
.LC1285:
	.string	"no_cache"
.LC1286:
	.string	"no_image"
.LC1287:
	.string	"noise"
.LC1288:
	.string	"noise_generator"
.LC1289:
	.string	"none"
.LC1290:
	.string	"nonlocal"
.LC1291:
	.string	"noperspective"
.LC1292:
	.string	"no_reflection"
.LC1293:
	.string	"normal"
.LC1294:
	.string	"normal_indices"
.LC1295:
	.string	"normalize"
.LC1296:
	.string	"normal_map"
.LC1297:
	.string	"normal_vectors"
.LC1298:
	.string	"no_shadow"
.LC1299:
	.string	"nostackframe"
.LC1300:
	.string	"not"
.LC1301:
	.string	"noteq"
.LC1302:
	.string	"null"
.LC1303:
	.string	"nulls"
.LC1304:
	.string	"number"
.LC1305:
	.string	"number_of_waves"
.LC1306:
	.string	"numeric"
.LC1307:
	.string	"numeric-edited"
.LC1308:
	.string	"object"
.LC1309:
	.string	"object-computer"
.LC1310:
	.string	"occurs"
.LC1311:
	.string	"oct"
.LC1312:
	.string	"octaves"
.LC1313:
	.string	"octet_length"
.LC1314:
	.string	"of"
.LC1315:
	.string	"off"
.LC1316:
	.string	"offset"
.LC1317:
	.string	"oldfpccall"
.LC1318:
	.string	"omega"
.LC1319:
	.string	"omitted"
.LC1320:
	.string	"omnimax"
.LC1321:
	.string	"on"
.LC1322:
	.string	"once"
.LC1323:
	.string	"onion"
.LC1324:
	.string	"open"
.LC1325:
	.string	"operator"
.LC1326:
	.string	"option"
.LC1327:
	.string	"optional"
.LC1328:
	.string	"options"
.LC1329:
	.string	"or"
.LC1330:
	.string	"or_bits"
.LC1331:
	.string	"order"
.LC1332:
	.string	"ordered"
.LC1333:
	.string	"oren_nayar"
.LC1334:
	.string	"organization"
.LC1335:
	.string	"orient"
.LC1336:
	.string	"orientation"
.LC1337:
	.string	"orthographic"
.LC1338:
	.string	"other"
.LC1339:
	.string	"out"
.LC1340:
	.string	"outer"
.LC1341:
	.string	"output"
.LC1342:
	.string	"overflow"
.LC1343:
	.string	"overlaps"
.LC1344:
	.string	"override"
.LC1345:
	.string	"packed"
.LC1346:
	.string	"packed-decimal"
.LC1347:
	.string	"padding"
.LC1348:
	.string	"page"
.LC1349:
	.string	"page-counter"
.LC1350:
	.string	"paint"
.LC1351:
	.string	"palette"
.LC1352:
	.string	"panoramic"
.LC1353:
	.string	"parallel"
.LC1354:
	.string	"parameter"
.LC1355:
	.string	"parametric"
.LC1356:
	.string	"partition"
.LC1357:
	.string	"pascal"
.LC1358:
	.string	"pass"
.LC1359:
	.string	"pass_through"
.LC1360:
	.string	"password"
.LC1361:
	.string	"pattern"
.LC1362:
	.string	"pause"
.LC1363:
	.string	"pcopy"
.LC1364:
	.string	"peek"
.LC1365:
	.string	"pen"
.LC1366:
	.string	"perform"
.LC1367:
	.string	"perspective"
.LC1368:
	.string	"pf"
.LC1369:
	.string	"pgm"
.LC1370:
	.string	"ph"
.LC1371:
	.string	"phase"
.LC1372:
	.string	"phong"
.LC1373:
	.string	"phong_size"
.LC1374:
	.string	"photons"
.LC1375:
	.string	"pi"
.LC1376:
	.string	"pic"
.LC1377:
	.string	"picture"
.LC1378:
	.string	"pigment"
.LC1379:
	.string	"pigment_map"
.LC1380:
	.string	"pigment_pattern"
.LC1381:
	.string	"planar"
.LC1382:
	.string	"plane"
.LC1383:
	.string	"play"
.LC1384:
	.string	"plus"
.LC1385:
	.string	"pmap"
.LC1386:
	.string	"png"
.LC1387:
	.string	"pnoise"
.LC1388:
	.string	"point"
.LC1389:
	.string	"point_at"
.LC1390:
	.string	"pointcloud_get"
.LC1391:
	.string	"pointcloud_search"
.LC1392:
	.string	"pointcloud_write"
.LC1393:
	.string	"pointer"
.LC1394:
	.string	"poke"
.LC1395:
	.string	"poly"
.LC1396:
	.string	"polygon"
.LC1397:
	.string	"poly_wave"
.LC1398:
	.string	"pos"
.LC1399:
	.string	"position"
.LC1400:
	.string	"position_b"
.LC1401:
	.string	"position_mb"
.LC1402:
	.string	"positive"
.LC1403:
	.string	"pot"
.LC1404:
	.string	"pow"
.LC1405:
	.string	"ppm"
.LC1406:
	.string	"precision"
.LC1407:
	.string	"precompute"
.LC1408:
	.string	"preset"
.LC1409:
	.string	"pretrace_end"
.LC1410:
	.string	"pretrace_start"
.LC1411:
	.string	"print"
.LC1412:
	.string	"printf"
.LC1413:
	.string	"printing"
.LC1414:
	.string	"prism"
.LC1415:
	.string	"private"
.LC1416:
	.string	"procedure"
.LC1417:
	.string	"procedure-pointer"
.LC1418:
	.string	"procedures"
.LC1419:
	.string	"proceed"
.LC1420:
	.string	"processing"
.LC1421:
	.string	"prod"
.LC1422:
	.string	"program"
.LC1423:
	.string	"program-id"
.LC1424:
	.string	"projected_through"
.LC1425:
	.string	"property"
.LC1426:
	.string	"protected"
.LC1427:
	.string	"pset"
.LC1428:
	.string	"psnoise"
.LC1429:
	.string	"ptype"
.LC1430:
	.string	"public"
.LC1431:
	.string	"published"
.LC1432:
	.string	"purge"
.LC1433:
	.string	"put"
.LC1434:
	.string	"pwr"
.LC1435:
	.string	"quadratic_spline"
.LC1436:
	.string	"quadric"
.LC1437:
	.string	"quartic"
.LC1438:
	.string	"quaternion"
.LC1439:
	.string	"queue"
.LC1440:
	.string	"quick_color"
.LC1441:
	.string	"quick_colour"
.LC1442:
	.string	"quilted"
.LC1443:
	.string	"quote"
.LC1444:
	.string	"quotes"
.LC1445:
	.string	"radial"
.LC1446:
	.string	"radians"
.LC1447:
	.string	"radiosity"
.LC1448:
	.string	"radius"
.LC1449:
	.string	"rainbow"
.LC1450:
	.string	"raise"
.LC1451:
	.string	"ramp_wave"
.LC1452:
	.string	"rand"
.LC1453:
	.string	"random"
.LC1454:
	.string	"randomize"
.LC1455:
	.string	"range"
.LC1456:
	.string	"ratio"
.LC1457:
	.string	"raytype"
.LC1458:
	.string	"rd"
.LC1459:
	.string	"read"
.LC1460:
	.string	"ready"
.LC1461:
	.string	"real"
.LC1462:
	.string	"receive"
.LC1463:
	.string	"reciprocal"
.LC1464:
	.string	"record"
.LC1465:
	.string	"recording"
.LC1466:
	.string	"records"
.LC1467:
	.string	"recursion_limit"
.LC1468:
	.string	"recursive"
.LC1469:
	.string	"red"
.LC1470:
	.string	"redefines"
.LC1471:
	.string	"reel"
.LC1472:
	.string	"reference"
.LC1473:
	.string	"references"
.LC1474:
	.string	"reflect"
.LC1475:
	.string	"reflection"
.LC1476:
	.string	"reflection_exponent"
.LC1477:
	.string	"refract"
.LC1478:
	.string	"refraction"
.LC1479:
	.string	"regex_match"
.LC1480:
	.string	"regex_search"
.LC1481:
	.string	"register"
.LC1482:
	.string	"reintroduce"
.LC1483:
	.string	"relative"
.LC1484:
	.string	"release"
.LC1485:
	.string	"reload"
.LC1486:
	.string	"rem"
.LC1487:
	.string	"remainder"
.LC1488:
	.string	"removal"
.LC1489:
	.string	"renames"
.LC1490:
	.string	"render"
.LC1491:
	.string	"renum"
.LC1492:
	.string	"repeat"
.LC1493:
	.string	"replace"
.LC1494:
	.string	"replacing"
.LC1495:
	.string	"report"
.LC1496:
	.string	"reporting"
.LC1497:
	.string	"reports"
.LC1498:
	.string	"repository"
.LC1499:
	.string	"rerun"
.LC1500:
	.string	"reserve"
.LC1501:
	.string	"reset"
.LC1502:
	.string	"restore"
.LC1503:
	.string	"resume"
.LC1504:
	.string	"return"
.LC1505:
	.string	"return-code"
.LC1506:
	.string	"returning"
.LC1507:
	.string	"reversed"
.LC1508:
	.string	"rewind"
.LC1509:
	.string	"rewrite"
.LC1510:
	.string	"rf"
.LC1511:
	.string	"rgb"
.LC1512:
	.string	"rgbf"
.LC1513:
	.string	"rgbft"
.LC1514:
	.string	"rgbt"
.LC1515:
	.string	"rh"
.LC1516:
	.string	"right"
.LC1517:
	.string	"ripples"
.LC1518:
	.string	"rmdir"
.LC1519:
	.string	"rnd"
.LC1520:
	.string	"rotate"
.LC1521:
	.string	"roughness"
.LC1522:
	.string	"round"
.LC1523:
	.string	"rounded"
.LC1524:
	.string	"row"
.LC1525:
	.string	"row_major"
.LC1526:
	.string	"rpad"
.LC1527:
	.string	"rset"
.LC1528:
	.string	"run"
.LC1529:
	.string	"safecall"
.LC1530:
	.string	"same"
.LC1531:
	.string	"same_source"
.LC1532:
	.string	"sampler1d"
.LC1533:
	.string	"sampler1darray"
.LC1534:
	.string	"sampler1darrayshadow"
.LC1535:
	.string	"sampler1dshadow"
.LC1536:
	.string	"sampler2d"
.LC1537:
	.string	"sampler2darray"
.LC1538:
	.string	"sampler2darrayshadow"
.LC1539:
	.string	"sampler2drect"
.LC1540:
	.string	"sampler2drectshadow"
.LC1541:
	.string	"sampler2dshadow"
.LC1542:
	.string	"sampler3d"
.LC1543:
	.string	"sampler3drect"
.LC1544:
	.string	"samplerbuffer"
.LC1545:
	.string	"samplercube"
.LC1546:
	.string	"samples"
.LC1547:
	.string	"save"
.LC1548:
	.string	"save_file"
.LC1549:
	.string	"scale"
.LC1550:
	.string	"scallop_wave"
.LC1551:
	.string	"scattering"
.LC1552:
	.string	"screen"
.LC1553:
	.string	"sd"
.LC1554:
	.string	"search"
.LC1555:
	.string	"second"
.LC1556:
	.string	"section"
.LC1557:
	.string	"security"
.LC1558:
	.string	"seed"
.LC1559:
	.string	"segment"
.LC1560:
	.string	"segment-limit"
.LC1561:
	.string	"select"
.LC1562:
	.string	"selector"
.LC1563:
	.string	"selection"
.LC1564:
	.string	"self"
.LC1565:
	.string	"send"
.LC1566:
	.string	"sentence"
.LC1567:
	.string	"separate"
.LC1568:
	.string	"sequence"
.LC1569:
	.string	"sequential"
.LC1570:
	.string	"sequentially"
.LC1571:
	.string	"service"
.LC1572:
	.string	"set"
.LC1573:
	.string	"sgn"
.LC1574:
	.string	"shadowless"
.LC1575:
	.string	"shell"
.LC1576:
	.string	"shift-in"
.LC1577:
	.string	"shift-out"
.LC1578:
	.string	"shl"
.LC1579:
	.string	"short"
.LC1580:
	.string	"shr"
.LC1581:
	.string	"sign"
.LC1582:
	.string	"simple_nested_loop"
.LC1583:
	.string	"sin"
.LC1584:
	.string	"sine_wave"
.LC1585:
	.string	"sinh"
.LC1586:
	.string	"size"
.LC1587:
	.string	"sizeof"
.LC1588:
	.string	"skip1"
.LC1589:
	.string	"skip2"
.LC1590:
	.string	"skip3"
.LC1591:
	.string	"sky"
.LC1592:
	.string	"sky_sphere"
.LC1593:
	.string	"slice"
.LC1594:
	.string	"slope"
.LC1595:
	.string	"slope_map"
.LC1596:
	.string	"smallint"
.LC1597:
	.string	"smooth"
.LC1598:
	.string	"smooth_linearstep"
.LC1599:
	.string	"smoothstep"
.LC1600:
	.string	"smooth_triangle"
.LC1601:
	.string	"snoise"
.LC1602:
	.string	"softfloat"
.LC1603:
	.string	"solid"
.LC1604:
	.string	"sor"
.LC1605:
	.string	"sort"
.LC1606:
	.string	"sort-control"
.LC1607:
	.string	"sort-core-size"
.LC1608:
	.string	"sort-file-size"
.LC1609:
	.string	"sort-merge"
.LC1610:
	.string	"sort-message"
.LC1611:
	.string	"sort-mode-size"
.LC1612:
	.string	"sort-return"
.LC1613:
	.string	"sound"
.LC1614:
	.string	"source"
.LC1615:
	.string	"source-computer"
.LC1616:
	.string	"space"
.LC1617:
	.string	"spaces"
.LC1618:
	.string	"spacing"
.LC1619:
	.string	"spc"
.LC1620:
	.string	"specialize"
.LC1621:
	.string	"special-names"
.LC1622:
	.string	"specular"
.LC1623:
	.string	"sphere"
.LC1624:
	.string	"sphere_sweep"
.LC1625:
	.string	"spherical"
.LC1626:
	.string	"spiral1"
.LC1627:
	.string	"spiral2"
.LC1628:
	.string	"spline"
.LC1629:
	.string	"splineinverse"
.LC1630:
	.string	"split"
.LC1631:
	.string	"split_union"
.LC1632:
	.string	"spotlight"
.LC1633:
	.string	"spotted"
.LC1634:
	.string	"sqr"
.LC1635:
	.string	"sqrt"
.LC1636:
	.string	"standard"
.LC1637:
	.string	"standard-1"
.LC1638:
	.string	"standard-2"
.LC1639:
	.string	"start"
.LC1640:
	.string	"startswith"
.LC1641:
	.string	"static"
.LC1642:
	.string	"statistics"
.LC1643:
	.string	"status"
.LC1644:
	.string	"stdcall"
.LC1645:
	.string	"stdout"
.LC1646:
	.string	"step"
.LC1647:
	.string	"stick"
.LC1648:
	.string	"stof"
.LC1649:
	.string	"stoi"
.LC1650:
	.string	"stop"
.LC1651:
	.string	"str"
.LC1652:
	.string	"strcmp"
.LC1653:
	.string	"strength"
.LC1654:
	.string	"strig"
.LC1655:
	.string	"string"
.LC1656:
	.string	"strlen"
.LC1657:
	.string	"strlwr"
.LC1658:
	.string	"structure"
.LC1659:
	.string	"strupr"
.LC1660:
	.string	"sturm"
.LC1661:
	.string	"subarray"
.LC1662:
	.string	"sub-queue-1"
.LC1663:
	.string	"sub-queue-2"
.LC1664:
	.string	"sub-queue-3"
.LC1665:
	.string	"subroutine"
.LC1666:
	.string	"substr"
.LC1667:
	.string	"substring"
.LC1668:
	.string	"substring_mb"
.LC1669:
	.string	"subtract"
.LC1670:
	.string	"sum"
.LC1671:
	.string	"super"
.LC1672:
	.string	"superellipsoid"
.LC1673:
	.string	"superp"
.LC1674:
	.string	"suppress"
.LC1675:
	.string	"surfacearea"
.LC1676:
	.string	"swap"
.LC1677:
	.string	"switch"
.LC1678:
	.string	"symbolic"
.LC1679:
	.string	"sync"
.LC1680:
	.string	"synchronized"
.LC1681:
	.string	"sys"
.LC1682:
	.string	"system"
.LC1683:
	.string	"tab"
.LC1684:
	.string	"table"
.LC1685:
	.string	"tally"
.LC1686:
	.string	"tallying"
.LC1687:
	.string	"tan"
.LC1688:
	.string	"tanh"
.LC1689:
	.string	"tape"
.LC1690:
	.string	"target"
.LC1691:
	.string	"template"
.LC1692:
	.string	"term"
.LC1693:
	.string	"terminal"
.LC1694:
	.string	"terminate"
.LC1695:
	.string	"test"
.LC1696:
	.string	"text"
.LC1697:
	.string	"texture"
.LC1698:
	.string	"texture3d"
.LC1699:
	.string	"texture_list"
.LC1700:
	.string	"texture_map"
.LC1701:
	.string	"tga"
.LC1702:
	.string	"than"
.LC1703:
	.string	"then"
.LC1704:
	.string	"thickness"
.LC1705:
	.string	"this"
.LC1706:
	.string	"threadvar"
.LC1707:
	.string	"threshold"
.LC1708:
	.string	"through"
.LC1709:
	.string	"thru"
.LC1710:
	.string	"tiff"
.LC1711:
	.string	"tightness"
.LC1712:
	.string	"tile2"
.LC1713:
	.string	"tiles"
.LC1714:
	.string	"time"
.LC1715:
	.string	"timer"
.LC1716:
	.string	"times"
.LC1717:
	.string	"timestamp"
.LC1718:
	.string	"timesten"
.LC1719:
	.string	"title"
.LC1720:
	.string	"to"
.LC1721:
	.string	"tolerance"
.LC1722:
	.string	"top"
.LC1723:
	.string	"toroidal"
.LC1724:
	.string	"torus"
.LC1725:
	.string	"trace"
.LC1726:
	.string	"trailing"
.LC1727:
	.string	"transform"
.LC1728:
	.string	"transformc"
.LC1729:
	.string	"transformu"
.LC1730:
	.string	"translate"
.LC1731:
	.string	"translucent"
.LC1732:
	.string	"transmit"
.LC1733:
	.string	"transparent"
.LC1734:
	.string	"transpose"
.LC1735:
	.string	"triangle"
.LC1736:
	.string	"triangle_wave"
.LC1737:
	.string	"trim"
.LC1738:
	.string	"trim_b"
.LC1739:
	.string	"trim_mb"
.LC1740:
	.string	"troff"
.LC1741:
	.string	"tron"
.LC1742:
	.string	"true"
.LC1743:
	.string	"trunc"
.LC1744:
	.string	"try"
.LC1745:
	.string	"ttf"
.LC1746:
	.string	"turb_depth"
.LC1747:
	.string	"turbulence"
.LC1748:
	.string	"type"
.LC1749:
	.string	"typedef"
.LC1750:
	.string	"uimage1d"
.LC1751:
	.string	"uimage1darray"
.LC1752:
	.string	"uimage2d"
.LC1753:
	.string	"uimage2darray"
.LC1754:
	.string	"uimage3d"
.LC1755:
	.string	"uimagebuffer"
.LC1756:
	.string	"uimagecube"
.LC1757:
	.string	"uint"
.LC1758:
	.string	"ultra_wide_angle"
.LC1759:
	.string	"undef"
.LC1760:
	.string	"uniform"
.LC1761:
	.string	"union"
.LC1762:
	.string	"unit"
.LC1763:
	.string	"unknown"
.LC1764:
	.string	"unlock"
.LC1765:
	.string	"unsigned"
.LC1766:
	.string	"unstring"
.LC1767:
	.string	"until"
.LC1768:
	.string	"up"
.LC1769:
	.string	"update"
.LC1770:
	.string	"upon"
.LC1771:
	.string	"upper"
.LC1772:
	.string	"upper_mb"
.LC1773:
	.string	"usage"
.LC1774:
	.string	"usampler1d"
.LC1775:
	.string	"usampler1darray"
.LC1776:
	.string	"usampler2d"
.LC1777:
	.string	"usampler2darray"
.LC1778:
	.string	"usampler2drect"
.LC1779:
	.string	"usampler3d"
.LC1780:
	.string	"usamplerbufferstruct"
.LC1781:
	.string	"usamplercube"
.LC1782:
	.string	"use"
.LC1783:
	.string	"use_alpha"
.LC1784:
	.string	"use_color"
.LC1785:
	.string	"use_colour"
.LC1786:
	.string	"use_index"
.LC1787:
	.string	"uses"
.LC1788:
	.string	"using"
.LC1789:
	.string	"usr"
.LC1790:
	.string	"u_steps"
.LC1791:
	.string	"utf8"
.LC1792:
	.string	"utf16"
.LC1793:
	.string	"utf32"
.LC1794:
	.string	"uvec2"
.LC1795:
	.string	"uvec3"
.LC1796:
	.string	"uvec4"
.LC1797:
	.string	"uv_indices"
.LC1798:
	.string	"uv_mapping"
.LC1799:
	.string	"uv_vectors"
.LC1800:
	.string	"val"
.LC1801:
	.string	"value"
.LC1802:
	.string	"values"
.LC1803:
	.string	"var"
.LC1804:
	.string	"varchar"
.LC1805:
	.string	"variance"
.LC1806:
	.string	"varptr"
.LC1807:
	.string	"varying"
.LC1808:
	.string	"vaxis_rotate"
.LC1809:
	.string	"vcross"
.LC1810:
	.string	"vdot"
.LC1811:
	.string	"vec2"
.LC1812:
	.string	"vec3"
.LC1813:
	.string	"vec4"
.LC1814:
	.string	"vector"
.LC1815:
	.string	"version"
.LC1816:
	.string	"vertex_vectors"
.LC1817:
	.string	"view"
.LC1818:
	.string	"virtual"
.LC1819:
	.string	"vlength"
.LC1820:
	.string	"vnormalize"
.LC1821:
	.string	"void"
.LC1822:
	.string	"volatile"
.LC1823:
	.string	"vrotate"
.LC1824:
	.string	"v_steps"
.LC1825:
	.string	"vstr"
.LC1826:
	.string	"vturbulence"
.LC1827:
	.string	"wait"
.LC1828:
	.string	"ward"
.LC1829:
	.string	"warning"
.LC1830:
	.string	"warp"
.LC1831:
	.string	"water_level"
.LC1832:
	.string	"wavelength_color"
.LC1833:
	.string	"waves"
.LC1834:
	.string	"wend"
.LC1835:
	.string	"when"
.LC1836:
	.string	"when-compiled"
.LC1837:
	.string	"where"
.LC1838:
	.string	"while"
.LC1839:
	.string	"width"
.LC1840:
	.string	"window"
.LC1841:
	.string	"with"
.LC1842:
	.string	"wood"
.LC1843:
	.string	"words"
.LC1844:
	.string	"working-storage"
.LC1845:
	.string	"wrinkles"
.LC1846:
	.string	"write"
.LC1847:
	.string	"write-only"
.LC1848:
	.string	"xor"
.LC1849:
	.string	"xor_bits"
.LC1850:
	.string	"year"
.LC1851:
	.string	"yes"
.LC1852:
	.string	"yield"
.LC1853:
	.string	"zero"
.LC1854:
	.string	"zeroes"
.LC1855:
	.string	"zeros"
.LC1857:
	.string	"tmp.bas"
.LC1858:
	.string	"fbc "
.LC1859:
	.string	"fbc -lang qb "
.LC1860:
	.string	"tmp.glsl"
.LC1861:
	.string	"tmp.cob"
.LC1862:
	.string	"cobc "
.LC1863:
	.string	"tmp.f77"
.LC1864:
	.string	"gfortran "
.LC1865:
	.string	"tmp.pas"
.LC1866:
	.string	"fpc "
.LC1867:
	.string	"tmp.osl"
.LC1868:
	.string	"povray "
.LC1869:
	.string	"tmp.java"
.LC1870:
	.string	"java "
.LC1871:
	.string	"tmp.c"
.LC1872:
	.string	"gcc "
.LC1873:
	.string	"tmp.cpp"
.LC1874:
	.string	"g++ "
.LC1875:
	.string	"tmp.cs"
.LC1876:
	.string	"csc "
.LC1877:
	.string	"tmp.js"
.LC1878:
	.string	"node "
.LC1879:
	.string	"tmp.php"
.LC1880:
	.string	"php -f "
.LC1881:
	.string	"tmp.swift"
.LC1882:
	.string	"swift "
.LC1883:
	.string	"tmp.m"
.LC1884:
	.string	"octave --persist "
.LC1885:
	.string	"tmp.kt"
.LC1886:
	.string	"kotlinc "
.LC1887:
	.string	"tmp.r"
.LC1888:
	.string	"rscript "
.LC1889:
	.string	"tmp.dart"
.LC1890:
	.string	"dart "
.LC1891:
	.string	"tmp.scala"
.LC1892:
	.string	"scalac "
.LC1893:
	.string	"./tmp > tmp.txt"
.LC1894:
	.string	"tmp.txt"
.LC1895:
	.string	"press any key to continue."
.LC1896:
	.string	"rm ./tmp; ./"
.LC1900:
	.string	"./chargen/"
.LC1901:
	.string	".c64"
.LC1911:
	.string	"wine "
.LC1913:
	.string	"dosbox "
.LC1914:
	.string	" -fullscreen -exit"
.LC1916:
	.string	".asm"
.LC1920:
	.string	"nasm "
.LC1921:
	.string	".asm -f bin -o"
.LC1922:
	.string	".bin"
.LC1924:
	.string	"dosbox -c 'boot "
.LC1925:
	.string	" -exit"
.LC1926:
	.string	"rm "
	.text
	.p2align 4
	.globl	_ZN8MEMORY_T6POKE64Edd
	.type	_ZN8MEMORY_T6POKE64Edd, @function
_ZN8MEMORY_T6POKE64Edd:
	push	r15
	movapd	xmm4, xmm0
	movapd	xmm5, xmm1
	push	r14
	push	r13
	push	r12
	push	rbp
	mov	rbp, rdi
	push	rbx
	sub	rsp, 280
.L650:
	xor	edx, edx
	comisd	xmm4, QWORD PTR .LC265[rip]
	cvtsd2si	rbx, xmm4
	setnb	dl
	xor	eax, eax
	neg	edx
	comisd	xmm4, QWORD PTR .LC264[rip]
	movsd	QWORD PTR 0[rbp+rbx*8], xmm5
	setbe	al
	neg	eax
	test	edx, eax
	je	.L652
	subsd	xmm4, QWORD PTR .LC265[rip]
	cvtsd2si	rax, xmm4
	movsd	QWORD PTR 134741896[rbp+rax*8], xmm5
	addsd	xmm4, QWORD PTR 395608[rbp]
	cvtsd2si	rbx, xmm4
	movsd	xmm5, QWORD PTR 0[rbp+rbx*8]
.L651:
.L652:
	comisd	xmm4, QWORD PTR .LC277[rip]
	jne	.L4416
.L3823:
	movsd	xmm0, QWORD PTR 395608[rbp]
	comisd	xmm0, xmm4
	ja	.L3825
	movsd	xmm6, QWORD PTR .LC410[rip]
	addsd	xmm6, xmm0
	comisd	xmm4, xmm6
	ja	.L3825
.L3827:
	cvtsd2si	rax, xmm5
	subsd	xmm4, xmm0
	pxor	xmm0, xmm0
	pxor	xmm2, xmm2
	sal	rax, 3
	comisd	xmm2, QWORD PTR 1592[rbp]
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 395072[rbp]
	movsd	QWORD PTR C$[rip], xmm0
	je	.L3828
	cvtsd2si	rax, xmm0
	pxor	xmm0, xmm0
	movzx	eax, al
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR C$[rip], xmm0
.L3828:
	movsd	xmm3, QWORD PTR .LC1[rip]
	comisd	xmm3, QWORD PTR 394856[rbp]
	jbe	.L3829
	movsd	QWORD PTR 394856[rbp], xmm3
.L3829:
	movsd	xmm0, QWORD PTR .LC1939[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 24[rsp], xmm3
	movsd	QWORD PTR 16[rsp], xmm2
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm5, QWORD PTR 395064[rbp]
	movsd	xmm2, QWORD PTR 16[rsp]
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm3, QWORD PTR 24[rsp]
	comisd	xmm5, xmm2
	jne	.L4417
	cvtsd2si	rax, xmm4
	mov	ecx, 40
	pxor	xmm0, xmm0
	movsd	xmm1, QWORD PTR .LC2048[rip]
	mov	QWORD PTR Y$[rip], 0x000000000
	mov	QWORD PTR X$[rip], 0x000000000
	cqo
	idiv	rcx
	cvtsi2sd	xmm0, rdx
	cvttsd2si	rdx, xmm0
	pxor	xmm0, xmm0
	sal	rdx, 3
	cvtsi2sd	xmm0, rdx
	addsd	xmm0, xmm1
	movsd	QWORD PTR XS$[rip], xmm0
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	cvttsd2si	rax, xmm0
	pxor	xmm0, xmm0
	sal	rax, 3
	cvtsi2sd	xmm0, rax
	addsd	xmm0, xmm1
	movsd	QWORD PTR YS$[rip], xmm0
.L3834:
	movsd	xmm0, QWORD PTR X$[rip]
.L3835:
	xor	edx, edx
	movsd	xmm1, QWORD PTR Y$[rip]
	movsd	QWORD PTR 16[rsp], xmm3
	comisd	xmm1, QWORD PTR 395088[rbp]
	sete	dl
	xor	eax, eax
	neg	edx
	comisd	xmm0, QWORD PTR 395080[rbp]
	sete	al
	neg	eax
	test	edx, eax
	jne	.L3871
	mov	rax, QWORD PTR .LC1930[rip]
	mov	rdi, rbp
	movsd	QWORD PTR 8[rsp], xmm5
	addsd	xmm1, QWORD PTR YS$[rip]
	addsd	xmm0, QWORD PTR XS$[rip]
	movupd	xmm7, XMMWORD PTR 395032[rbp]
	unpcklpd	xmm0, xmm1
	mulpd	xmm0, XMMWORD PTR .LC2049[rip]
	addpd	xmm0, xmm7
	movups	XMMWORD PTR 394840[rbp], xmm0
	addpd	xmm0, XMMWORD PTR .LC2050[rip]
	movups	XMMWORD PTR 394864[rbp], xmm0
	movq	xmm0, rax
	call	_ZN8MEMORY_T6PEEK64Ed
	mov	rax, QWORD PTR .LC1930[rip]
	movapd	xmm1, xmm0
	movq	xmm0, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR X$[rip]
	movsd	xmm3, QWORD PTR 16[rsp]
	movsd	xmm5, QWORD PTR 8[rsp]
	addsd	xmm0, xmm3
	comisd	xmm0, QWORD PTR 395080[rbp]
	movsd	QWORD PTR X$[rip], xmm0
	jbe	.L3835
	movsd	xmm0, QWORD PTR Y$[rip]
	mov	QWORD PTR X$[rip], 0x000000000
	addsd	xmm0, xmm3
	movsd	QWORD PTR Y$[rip], xmm0
	movsd	xmm0, QWORD PTR C$[rip]
	addsd	xmm0, xmm3
	movsd	QWORD PTR C$[rip], xmm0
	jmp	.L3834
	.p2align 4,,10
	.p2align 3
.L4416:
	comisd	xmm4, QWORD PTR .LC278[rip]
	je	.L3958
	comisd	xmm4, QWORD PTR .LC279[rip]
	jne	.L657
	movapd	xmm0, xmm5
	movsd	QWORD PTR 16[rsp], xmm4
	movsd	QWORD PTR 8[rsp], xmm5
	call	nearbyint@PLT
	movsd	xmm1, QWORD PTR .LC280[rip]
	movsd	xmm5, QWORD PTR 8[rsp]
	cvttsd2si	rax, xmm0
	movsd	xmm4, QWORD PTR 16[rsp]
	comisd	xmm0, xmm1
	jb	.L923
	subsd	xmm0, xmm1
	cvttsd2si	rax, xmm0
	btc	rax, 63
.L923:
	sub	rax, 15
	cmp	rax, 240
	jbe	.L4418
.L663:
.L1474:
	pxor	xmm2, xmm2
	comisd	xmm4, xmm2
	je	.L649
	comisd	xmm4, QWORD PTR .LC357[rip]
	je	.L3971
	comisd	xmm4, QWORD PTR .LC358[rip]
	je	.L4419
	comisd	xmm4, QWORD PTR .LC281[rip]
	je	.L1486
	comisd	xmm4, QWORD PTR .LC282[rip]
	je	.L1486
	comisd	xmm4, QWORD PTR .LC283[rip]
	je	.L1486
	comisd	xmm4, QWORD PTR .LC362[rip]
	je	.L1486
	comisd	xmm4, QWORD PTR .LC274[rip]
	je	.L1494
	comisd	xmm4, QWORD PTR .LC273[rip]
	je	.L1494
	comisd	xmm4, QWORD PTR .LC272[rip]
	je	.L1494
	comisd	xmm4, QWORD PTR .LC271[rip]
	je	.L1494
	comisd	xmm4, QWORD PTR .LC363[rip]
	je	.L3973
	comisd	xmm4, QWORD PTR .LC364[rip]
	je	.L4420
	comisd	xmm4, QWORD PTR .LC365[rip]
	je	.L4421
	comisd	xmm4, QWORD PTR .LC366[rip]
	je	.L4422
	comisd	xmm4, QWORD PTR .LC367[rip]
	je	.L4423
	comisd	xmm4, QWORD PTR .LC368[rip]
	je	.L4424
	comisd	xmm4, QWORD PTR .LC369[rip]
	je	.L4425
	comisd	xmm4, QWORD PTR .LC370[rip]
	je	.L4426
	comisd	xmm4, QWORD PTR .LC371[rip]
	je	.L4427
	comisd	xmm4, QWORD PTR .LC372[rip]
	je	.L4428
	comisd	xmm4, QWORD PTR .LC373[rip]
	je	.L4429
	comisd	xmm4, QWORD PTR .LC374[rip]
	je	.L4430
	comisd	xmm4, QWORD PTR .LC375[rip]
	je	.L4431
	comisd	xmm4, QWORD PTR .LC376[rip]
	je	.L4432
	comisd	xmm4, QWORD PTR .LC377[rip]
	je	.L4433
	comisd	xmm4, QWORD PTR .LC378[rip]
	je	.L4434
	comisd	xmm4, QWORD PTR .LC379[rip]
	je	.L4435
	comisd	xmm4, QWORD PTR .LC380[rip]
	je	.L4436
	comisd	xmm4, QWORD PTR .LC381[rip]
	je	.L4437
	comisd	xmm4, QWORD PTR .LC382[rip]
	je	.L4438
	comisd	xmm4, QWORD PTR .LC383[rip]
	je	.L4439
	comisd	xmm4, QWORD PTR .LC384[rip]
	je	.L4440
	comisd	xmm4, QWORD PTR .LC385[rip]
	je	.L4441
	comisd	xmm4, QWORD PTR .LC386[rip]
	je	.L4442
	comisd	xmm4, QWORD PTR .LC387[rip]
	je	.L4443
	comisd	xmm4, QWORD PTR .LC388[rip]
	je	.L4444
	comisd	xmm4, QWORD PTR .LC270[rip]
	je	.L4445
	comisd	xmm4, QWORD PTR .LC389[rip]
	je	.L4446
	comisd	xmm4, QWORD PTR .LC1856[rip]
	jne	.L4447
.L3368:
	xor	r8d, r8d
	mov	ecx, 9
	lea	rdx, .LC1860[rip]
	mov	rsi, -1
	lea	rdi, FILENAME$[rip]
	movsd	QWORD PTR 8[rsp], xmm2
	call	fb_StrAssign@PLT
	movsd	xmm2, QWORD PTR 8[rsp]
	mov	rax, QWORD PTR .LC270[rip]
	movapd	xmm5, xmm2
	movq	xmm4, rax
	jmp	.L650
	.p2align 4,,10
	.p2align 3
.L3958:
	movapd	xmm0, xmm5
	movsd	QWORD PTR 16[rsp], xmm4
	movsd	QWORD PTR 8[rsp], xmm5
	call	nearbyint@PLT
	movsd	xmm1, QWORD PTR .LC280[rip]
	movsd	xmm5, QWORD PTR 8[rsp]
	cvttsd2si	rax, xmm0
	movsd	xmm4, QWORD PTR 16[rsp]
	comisd	xmm0, xmm1
	jnb	.L4448
	cmp	rax, 255
	ja	.L3823
.L4454:
	lea	rdx, tmp$2482.16[rip]
	mov	rax, QWORD PTR [rdx+rax*8]
.L942:
	lea	r15, tmp$2488.10[rip]
	lea	r14, tmp$2487.11[rip]
	movabs	r12, -9223372036854775808
	lea	r13, tmp$2486.12[rip]
	jmp	rax
	.p2align 4,,10
	.p2align 3
.L657:
	xor	eax, eax
	comisd	xmm4, QWORD PTR .LC267[rip]
	sete	al
	xor	edx, edx
	neg	eax
	comisd	xmm4, QWORD PTR .LC306[rip]
	sete	dl
	neg	edx
	or	eax, edx
	xor	edx, edx
	comisd	xmm4, QWORD PTR .LC307[rip]
	sete	dl
	neg	edx
	or	eax, edx
	xor	edx, edx
	comisd	xmm4, QWORD PTR .LC308[rip]
	sete	dl
	neg	edx
	or	eax, edx
	xor	edx, edx
	comisd	xmm4, QWORD PTR .LC309[rip]
	sete	dl
	neg	edx
	or	eax, edx
	xor	edx, edx
	comisd	xmm4, QWORD PTR .LC310[rip]
	sete	dl
	neg	edx
	or	eax, edx
	xor	edx, edx
	comisd	xmm4, QWORD PTR .LC311[rip]
	sete	dl
	neg	edx
	or	eax, edx
	xor	edx, edx
	comisd	xmm4, QWORD PTR .LC312[rip]
	sete	dl
	neg	edx
	or	eax, edx
	jne	.L4449
	xor	eax, eax
	comisd	xmm4, QWORD PTR .LC328[rip]
	sete	al
	xor	edx, edx
	neg	eax
	comisd	xmm4, QWORD PTR .LC329[rip]
	sete	dl
	neg	edx
	or	eax, edx
	xor	edx, edx
	comisd	xmm4, QWORD PTR .LC330[rip]
	sete	dl
	neg	edx
	or	eax, edx
	xor	edx, edx
	comisd	xmm4, QWORD PTR .LC331[rip]
	sete	dl
	neg	edx
	or	eax, edx
	xor	edx, edx
	comisd	xmm4, QWORD PTR .LC332[rip]
	sete	dl
	neg	edx
	or	eax, edx
	xor	edx, edx
	comisd	xmm4, QWORD PTR .LC333[rip]
	sete	dl
	neg	edx
	or	eax, edx
	xor	edx, edx
	comisd	xmm4, QWORD PTR .LC334[rip]
	sete	dl
	neg	edx
	or	eax, edx
	xor	edx, edx
	comisd	xmm4, QWORD PTR .LC335[rip]
	sete	dl
	neg	edx
	or	eax, edx
	jne	.L4450
	xor	eax, eax
	comisd	xmm4, QWORD PTR .LC336[rip]
	sete	al
	xor	edx, edx
	neg	eax
	comisd	xmm4, QWORD PTR .LC337[rip]
	sete	dl
	neg	edx
	or	eax, edx
	xor	edx, edx
	comisd	xmm4, QWORD PTR .LC338[rip]
	sete	dl
	neg	edx
	or	eax, edx
	xor	edx, edx
	comisd	xmm4, QWORD PTR .LC339[rip]
	sete	dl
	neg	edx
	or	eax, edx
	xor	edx, edx
	comisd	xmm4, QWORD PTR .LC340[rip]
	sete	dl
	neg	edx
	or	eax, edx
	xor	edx, edx
	comisd	xmm4, QWORD PTR .LC341[rip]
	sete	dl
	neg	edx
	or	eax, edx
	xor	edx, edx
	comisd	xmm4, QWORD PTR .LC342[rip]
	sete	dl
	neg	edx
	or	eax, edx
	xor	edx, edx
	comisd	xmm4, QWORD PTR .LC343[rip]
	sete	dl
	neg	edx
	or	eax, edx
	jne	.L4451
	comisd	xmm4, QWORD PTR .LC344[rip]
	je	.L3823
	comisd	xmm4, QWORD PTR .LC345[rip]
	je	.L3965
	comisd	xmm4, QWORD PTR .LC346[rip]
	je	.L4452
	xor	eax, eax
	comisd	xmm4, QWORD PTR .LC268[rip]
	sete	al
	xor	edx, edx
	neg	eax
	comisd	xmm4, QWORD PTR .LC348[rip]
	sete	dl
	neg	edx
	or	eax, edx
	xor	edx, edx
	comisd	xmm4, QWORD PTR .LC349[rip]
	sete	dl
	neg	edx
	or	eax, edx
	xor	edx, edx
	comisd	xmm4, QWORD PTR .LC350[rip]
	sete	dl
	neg	edx
	or	eax, edx
	jne	.L4453
	comisd	xmm4, QWORD PTR .LC353[rip]
	jne	.L1474
	movsd	xmm0, QWORD PTR .LC268[rip]
	movapd	xmm1, xmm5
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm4
	movsd	QWORD PTR 8[rsp], xmm5
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm5, QWORD PTR 8[rsp]
	movsd	xmm4, QWORD PTR 16[rsp]
	jmp	.L3823
	.p2align 4,,10
	.p2align 3
.L4448:
	subsd	xmm0, xmm1
	cvttsd2si	rax, xmm0
	btc	rax, 63
	cmp	rax, 255
	ja	.L3823
	jmp	.L4454
.L1482:
.L1484:
.L1485:
	.p2align 4,,10
	.p2align 3
.L1486:
	cvtsd2si	rdx, QWORD PTR 393256[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rsi, QWORD PTR 393232[rbp]
	cvtsd2si	rax, QWORD PTR 393240[rbp]
	mov	rcx, rdx
	sal	rsi, 16
	sal	rcx, 24
	mov	rdx, rsi
	sal	rax, 8
	add	rdx, rcx
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 393248[rbp]
	movsd	QWORD PTR 394824[rbp], xmm0
.L649:
	add	rsp, 280
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	ret
	.p2align 4,,10
	.p2align 3
.L4445:
.L1550:
	movapd	xmm0, xmm5
	movsd	QWORD PTR 16[rsp], xmm4
	movsd	QWORD PTR 8[rsp], xmm5
	call	nearbyint@PLT
	movsd	xmm1, QWORD PTR .LC280[rip]
	movsd	xmm5, QWORD PTR 8[rsp]
	cvttsd2si	rax, xmm0
	movsd	xmm4, QWORD PTR 16[rsp]
	comisd	xmm0, xmm1
	jnb	.L4455
.L1554:
	cmp	rax, 20
	ja	.L649
	lea	rdx, tmp$2493.5[rip]
	mov	rax, QWORD PTR [rdx+rax*8]
	jmp	.L942
	.p2align 4,,10
	.p2align 3
.L4449:
	movsd	QWORD PTR 0[rbp+rbx*8], xmm5
	jmp	.L1474
	.p2align 4,,10
	.p2align 3
.L4418:
	lea	rdx, tmp$2483.15[rip]
	mov	rax, QWORD PTR [rdx+rax*8]
	jmp	.L942
.L1489:
.L1492:
.L1493:
	.p2align 4,,10
	.p2align 3
.L1494:
	cvtsd2si	rdx, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rsi, QWORD PTR 393264[rbp]
	cvtsd2si	rax, QWORD PTR 393272[rbp]
	mov	rcx, rdx
	sal	rsi, 16
	sal	rcx, 24
	mov	rdx, rsi
	sal	rax, 8
	add	rdx, rcx
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 393280[rbp]
	movsd	QWORD PTR 394832[rbp], xmm0
	jmp	.L649
	.p2align 4,,10
	.p2align 3
.L4455:
	subsd	xmm0, xmm1
	cvttsd2si	rax, xmm0
	btc	rax, 63
	jmp	.L1554
	.p2align 4,,10
	.p2align 3
.L4450:
	movsd	QWORD PTR 0[rbp+rbx*8], xmm5
	jmp	.L1474
.L1598:
.L3366:
	jmp	.L649
.L664:
	movsd	xmm0, QWORD PTR .LC281[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC282[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L662:
	movsd	xmm0, QWORD PTR .LC281[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC282[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC283[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L3587:
	pxor	xmm0, xmm0
	pxor	xmm2, xmm2
	pxor	xmm3, xmm3
	xor	r8d, r8d
	cvtsd2si	rcx, QWORD PTR 393584[rbp]
	xor	edx, edx
	movaps	xmm1, xmm3
	cvtsd2ss	xmm0, QWORD PTR 394840[rbp]
	cvtsd2si	rsi, QWORD PTR 394832[rbp]
	cvtsd2ss	xmm2, QWORD PTR 394864[rbp]
	mov	rdi, QWORD PTR RASTER$[rip]
	add	rsp, 280
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_GfxLine@PLT
.L3365:
	mov	esi, 5
	lea	rdi, .LC1855[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3364:
	mov	esi, 6
	lea	rdi, .LC1854[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3363:
	mov	esi, 4
	lea	rdi, .LC1853[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3582:
	pxor	xmm0, xmm0
	xor	ecx, ecx
	pxor	xmm1, xmm1
	mov	edx, 4
	cvtsd2si	rsi, QWORD PTR 394824[rbp]
	cvtsd2ss	xmm0, QWORD PTR 394840[rbp]
	mov	rdi, QWORD PTR RASTER$[rip]
	add	rsp, 280
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_GfxPset@PLT
.L3570:
	xor	esi, esi
	lea	rdi, .LC3[rip]
	call	fb_StrAllocTempDescZEx@PLT
	movsd	xmm0, QWORD PTR 394944[rbp]
	pxor	xmm1, xmm1
	addsd	xmm0, QWORD PTR 394960[rbp]
	mov	rcx, rax
	mov	rdi, QWORD PTR FGIMAGE$[rip]
	mov	r9d, 1073741828
	xor	r8d, r8d
	cvtsd2si	rsi, QWORD PTR 394824[rbp]
	cvtsd2si	rax, xmm0
	movsd	xmm0, QWORD PTR 394936[rbp]
	addsd	xmm0, QWORD PTR 394952[rbp]
	add	rsp, 280
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	cvtsd2si	rdx, xmm0
	pxor	xmm0, xmm0
	pop	r14
	pop	r15
	sar	rax
	cvtsi2ss	xmm1, rax
	sar	rdx
	cvtsi2ss	xmm0, rdx
	xor	edx, edx
	jmp	fb_GfxPaint@PLT
.L3569:
	pxor	xmm0, xmm0
	pxor	xmm3, xmm3
	pxor	xmm2, xmm2
	xor	edx, edx
	cvtsd2si	rax, QWORD PTR 394968[rbp]
	pxor	xmm1, xmm1
	mov	r8d, 2
	cvtsd2si	rsi, QWORD PTR 394824[rbp]
	sal	rax, 8
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 394976[rbp]
	cvtsd2si	rcx, xmm0
	movsd	xmm0, QWORD PTR 394944[rbp]
	addsd	xmm0, QWORD PTR 394960[rbp]
	cvtsd2si	rdi, xmm0
	movsd	xmm0, QWORD PTR 394936[rbp]
	addsd	xmm0, QWORD PTR 394952[rbp]
	cvtsd2si	rax, xmm0
	movaps	xmm0, xmm1
	sar	rdi
	cvtsi2ss	xmm3, rdi
	mov	rdi, QWORD PTR FGIMAGE$[rip]
	add	rsp, 280
	pop	rbx
	pop	rbp
	sar	rax
	pop	r12
	pop	r13
	cvtsi2ss	xmm2, rax
	pop	r14
	pop	r15
	jmp	fb_GfxLine@PLT
.L3568:
	movsd	xmm0, QWORD PTR 394944[rbp]
	pxor	xmm3, xmm3
	addsd	xmm0, QWORD PTR 394960[rbp]
	pxor	xmm2, xmm2
	pxor	xmm1, xmm1
	mov	r8d, 2
	mov	ecx, 65535
	mov	edx, 2
	cvtsd2si	rsi, QWORD PTR 394824[rbp]
	cvtsd2si	rdi, xmm0
	movsd	xmm0, QWORD PTR 394936[rbp]
	addsd	xmm0, QWORD PTR 394952[rbp]
	cvtsd2si	rax, xmm0
	movaps	xmm0, xmm1
	sar	rdi
	cvtsi2ss	xmm3, rdi
	mov	rdi, QWORD PTR FGIMAGE$[rip]
	add	rsp, 280
	pop	rbx
	pop	rbp
	sar	rax
	pop	r12
	pop	r13
	cvtsi2ss	xmm2, rax
	pop	r14
	pop	r15
	jmp	fb_GfxLine@PLT
.L3567:
	movsd	xmm0, QWORD PTR 394944[rbp]
	pxor	xmm3, xmm3
	addsd	xmm0, QWORD PTR 394960[rbp]
	pxor	xmm2, xmm2
	pxor	xmm1, xmm1
	mov	r8d, 2
	mov	ecx, 65535
	mov	edx, 1
	cvtsd2si	rsi, QWORD PTR 394824[rbp]
	cvtsd2si	rdi, xmm0
	movsd	xmm0, QWORD PTR 394936[rbp]
	addsd	xmm0, QWORD PTR 394952[rbp]
	cvtsd2si	rax, xmm0
	movaps	xmm0, xmm1
	sar	rdi
	cvtsi2ss	xmm3, rdi
	mov	rdi, QWORD PTR FGIMAGE$[rip]
	add	rsp, 280
	pop	rbx
	pop	rbp
	sar	rax
	pop	r12
	pop	r13
	cvtsi2ss	xmm2, rax
	pop	r14
	pop	r15
	jmp	fb_GfxLine@PLT
.L3566:
	pxor	xmm3, xmm3
	pxor	xmm2, xmm2
	pxor	xmm1, xmm1
	xor	edx, edx
	movsd	xmm0, QWORD PTR 394944[rbp]
	mov	r8d, 2
	mov	ecx, 65535
	addsd	xmm0, QWORD PTR 394960[rbp]
	cvtsd2si	rsi, QWORD PTR 394824[rbp]
	cvtsd2si	rdi, xmm0
	movsd	xmm0, QWORD PTR 394936[rbp]
	addsd	xmm0, QWORD PTR 394952[rbp]
	cvtsd2si	rax, xmm0
	movaps	xmm0, xmm1
	sar	rdi
	cvtsi2ss	xmm3, rdi
	mov	rdi, QWORD PTR FGIMAGE$[rip]
	add	rsp, 280
	pop	rbx
	pop	rbp
	sar	rax
	pop	r12
	pop	r13
	cvtsi2ss	xmm2, rax
	pop	r14
	pop	r15
	jmp	fb_GfxLine@PLT
.L3565:
	movsd	xmm0, QWORD PTR 394944[rbp]
	pxor	xmm1, xmm1
	pxor	xmm2, xmm2
	pxor	xmm4, xmm4
	addsd	xmm0, QWORD PTR 394960[rbp]
	mov	ecx, 4
	movaps	xmm3, xmm4
	cvtsd2ss	xmm2, QWORD PTR 394968[rbp]
	cvtsd2si	rsi, QWORD PTR 394824[rbp]
	movss	xmm5, DWORD PTR .LC1940[rip]
	mov	rdi, QWORD PTR FGIMAGE$[rip]
	cvtsd2si	rax, xmm0
	movsd	xmm0, QWORD PTR 394936[rbp]
	addsd	xmm0, QWORD PTR 394952[rbp]
	add	rsp, 280
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	cvtsd2si	rdx, xmm0
	pxor	xmm0, xmm0
	pop	r14
	pop	r15
	sar	rax
	cvtsi2ss	xmm1, rax
	sar	rdx
	cvtsi2ss	xmm0, rdx
	xor	edx, edx
	jmp	fb_GfxEllipse@PLT
.L3564:
	movsd	xmm0, QWORD PTR 394944[rbp]
	pxor	xmm1, xmm1
	mov	rdi, QWORD PTR FGIMAGE$[rip]
	xor	ecx, ecx
	addsd	xmm0, QWORD PTR 394960[rbp]
	cvtsd2si	rsi, QWORD PTR 394824[rbp]
	cvtsd2si	rax, xmm0
	movsd	xmm0, QWORD PTR 394936[rbp]
	addsd	xmm0, QWORD PTR 394952[rbp]
	add	rsp, 280
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	cvtsd2si	rdx, xmm0
	pxor	xmm0, xmm0
	pop	r14
	pop	r15
	sar	rax
	cvtsi2ss	xmm1, rax
	sar	rdx
	cvtsi2ss	xmm0, rdx
	mov	edx, 4
	jmp	fb_GfxPset@PLT
.L3362:
	mov	esi, 1
	lea	rdi, .LC253[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3361:
	mov	esi, 5
	lea	rdi, .LC1852[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3360:
	mov	esi, 3
	lea	rdi, .LC1851[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3359:
	mov	esi, 4
	lea	rdi, .LC1850[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3358:
	mov	esi, 1
	lea	rdi, .LC252[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3357:
	mov	esi, 8
	lea	rdi, .LC1849[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3356:
	mov	esi, 3
	lea	rdi, .LC1848[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3355:
	mov	esi, 1
	lea	rdi, .LC251[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3558:
	movapd	xmm0, XMMWORD PTR .LC1938[rip]
	movups	XMMWORD PTR 395032[rbp], xmm0
	jmp	.L649
.L3557:
	movapd	xmm0, XMMWORD PTR .LC1937[rip]
	movups	XMMWORD PTR 395032[rbp], xmm0
	jmp	.L649
.L3556:
	movq	xmm0, QWORD PTR .LC1936[rip]
	movups	XMMWORD PTR 395032[rbp], xmm0
	jmp	.L649
.L3555:
	pxor	xmm0, xmm0
	movups	XMMWORD PTR 395032[rbp], xmm0
	jmp	.L649
.L3586:
	pxor	xmm0, xmm0
	pxor	xmm2, xmm2
	pxor	xmm3, xmm3
	xor	r8d, r8d
	cvtsd2si	rcx, QWORD PTR 393584[rbp]
	xor	edx, edx
	movaps	xmm1, xmm3
	cvtsd2ss	xmm0, QWORD PTR 394840[rbp]
	cvtsd2si	rsi, QWORD PTR 394824[rbp]
	cvtsd2ss	xmm2, QWORD PTR 394864[rbp]
	mov	rdi, QWORD PTR RASTER$[rip]
	add	rsp, 280
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_GfxLine@PLT
.L3585:
	pxor	xmm0, xmm0
	pxor	xmm2, xmm2
	pxor	xmm3, xmm3
	xor	r8d, r8d
	cvtsd2si	rsi, QWORD PTR 394832[rbp]
	mov	rdi, QWORD PTR RASTER$[rip]
	xor	edx, edx
	cvtsd2ss	xmm0, QWORD PTR 394840[rbp]
	cvtsd2ss	xmm2, QWORD PTR 394864[rbp]
	mov	ecx, 65535
	movaps	xmm1, xmm3
	add	rsp, 280
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_GfxLine@PLT
.L3584:
	pxor	xmm0, xmm0
	pxor	xmm2, xmm2
	pxor	xmm3, xmm3
	xor	r8d, r8d
	cvtsd2si	rsi, QWORD PTR 394824[rbp]
	mov	rdi, QWORD PTR RASTER$[rip]
	xor	edx, edx
	cvtsd2ss	xmm0, QWORD PTR 394840[rbp]
	cvtsd2ss	xmm2, QWORD PTR 394864[rbp]
	mov	ecx, 65535
	movaps	xmm1, xmm3
	add	rsp, 280
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_GfxLine@PLT
.L3583:
	pxor	xmm0, xmm0
	xor	ecx, ecx
	pxor	xmm1, xmm1
	mov	edx, 4
	cvtsd2si	rsi, QWORD PTR 394832[rbp]
	cvtsd2ss	xmm0, QWORD PTR 394840[rbp]
	mov	rdi, QWORD PTR RASTER$[rip]
	add	rsp, 280
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_GfxPset@PLT
.L668:
	movsd	xmm2, QWORD PTR .LC284[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC282[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L667:
	movsd	xmm1, QWORD PTR .LC284[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC282[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC283[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L666:
	movsd	xmm0, QWORD PTR .LC281[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L665:
	movsd	xmm0, QWORD PTR .LC281[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC283[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L676:
	movsd	xmm2, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC285[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L675:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC285[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC285[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L674:
	movsd	xmm1, QWORD PTR .LC285[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L673:
	movsd	xmm2, QWORD PTR .LC285[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC285[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L672:
	movsd	xmm1, QWORD PTR .LC285[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC285[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L671:
	movsd	xmm1, QWORD PTR .LC285[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC285[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC285[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L670:
	movsd	xmm1, QWORD PTR .LC284[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L669:
	movsd	xmm1, QWORD PTR .LC284[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC285[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC283[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L692:
	movsd	xmm1, QWORD PTR .LC292[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC292[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC292[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L691:
	movsd	xmm1, QWORD PTR .LC291[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC291[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC291[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L690:
	movsd	xmm1, QWORD PTR .LC290[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC290[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC290[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L689:
	movsd	xmm1, QWORD PTR .LC151[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC151[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC151[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L688:
	movsd	xmm1, QWORD PTR .LC135[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC135[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC135[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L687:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L686:
	movsd	xmm1, QWORD PTR .LC288[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC288[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC288[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L685:
	movsd	xmm1, QWORD PTR .LC287[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC287[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC287[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L684:
	movsd	xmm1, QWORD PTR .LC286[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC286[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC286[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L683:
	movsd	xmm1, QWORD PTR .LC98[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L682:
	movsd	xmm1, QWORD PTR .LC86[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC86[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC86[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L681:
	movsd	xmm2, QWORD PTR .LC73[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 24[rsp], xmm5
	movsd	QWORD PTR 16[rsp], xmm4
	movapd	xmm1, xmm2
	movsd	QWORD PTR 8[rsp], xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm2, QWORD PTR 8[rsp]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm2, QWORD PTR 8[rsp]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 16[rsp]
	movsd	xmm5, QWORD PTR 24[rsp]
	jmp	.L1474
.L680:
	movsd	xmm1, QWORD PTR .LC121[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC121[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC121[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L679:
	movsd	xmm0, QWORD PTR .LC281[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC282[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC283[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L678:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L677:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC285[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L756:
	movsd	xmm1, QWORD PTR .LC300[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC291[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L755:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC291[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L754:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC300[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC291[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L753:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC299[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC291[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L752:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC298[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC291[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L751:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC291[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC291[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L750:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC291[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC298[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L749:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC291[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC299[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L748:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC291[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC300[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L747:
	movsd	xmm2, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC291[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L746:
	movsd	xmm1, QWORD PTR .LC300[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC291[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L745:
	movsd	xmm1, QWORD PTR .LC299[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC291[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L744:
	movsd	xmm1, QWORD PTR .LC298[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC291[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L743:
	movsd	xmm1, QWORD PTR .LC291[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC291[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L742:
	movsd	xmm1, QWORD PTR .LC295[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC163[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L741:
	movsd	xmm1, QWORD PTR .LC295[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC296[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L740:
	movsd	xmm1, QWORD PTR .LC295[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC297[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L739:
	movsd	xmm1, QWORD PTR .LC295[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L738:
	movsd	xmm1, QWORD PTR .LC295[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC297[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L737:
	movsd	xmm1, QWORD PTR .LC295[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC296[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L736:
	movsd	xmm1, QWORD PTR .LC295[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC163[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L735:
	movsd	xmm2, QWORD PTR .LC295[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC295[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L734:
	movsd	xmm1, QWORD PTR .LC163[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC295[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L733:
	movsd	xmm1, QWORD PTR .LC296[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC295[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L732:
	movsd	xmm1, QWORD PTR .LC297[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC295[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L731:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC295[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L730:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC297[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC295[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L729:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC296[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC295[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L728:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC163[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC295[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L727:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC295[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC295[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L726:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC295[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC163[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L725:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC295[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC296[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L724:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC295[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC297[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L723:
	movsd	xmm2, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC295[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L722:
	movsd	xmm1, QWORD PTR .LC297[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC295[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L721:
	movsd	xmm1, QWORD PTR .LC296[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC295[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L720:
	movsd	xmm1, QWORD PTR .LC163[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC295[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L719:
	movsd	xmm1, QWORD PTR .LC295[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC295[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L718:
	movsd	xmm0, QWORD PTR .LC281[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L717:
	movsd	xmm0, QWORD PTR .LC281[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC295[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L716:
	movsd	xmm0, QWORD PTR .LC281[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC296[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L715:
	movsd	xmm0, QWORD PTR .LC281[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L714:
	movsd	xmm0, QWORD PTR .LC281[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC296[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L713:
	movsd	xmm0, QWORD PTR .LC281[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC295[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L712:
	movsd	xmm0, QWORD PTR .LC281[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L711:
	movsd	xmm0, QWORD PTR .LC281[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC283[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L710:
	movsd	xmm1, QWORD PTR .LC294[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC283[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L709:
	movsd	xmm1, QWORD PTR .LC295[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC283[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L708:
	movsd	xmm1, QWORD PTR .LC296[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC283[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L707:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC283[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L706:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC296[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC283[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L705:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC295[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC283[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L704:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC283[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L703:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC282[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC283[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L702:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC282[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L701:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC282[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC295[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L700:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC282[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC296[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L699:
	movsd	xmm2, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC282[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L698:
	movsd	xmm1, QWORD PTR .LC296[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC282[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L697:
	movsd	xmm1, QWORD PTR .LC295[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC282[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L696:
	movsd	xmm1, QWORD PTR .LC294[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC282[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L695:
	movsd	xmm0, QWORD PTR .LC281[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC282[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L694:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L693:
	movsd	xmm1, QWORD PTR .LC293[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC293[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC293[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L884:
	movsd	xmm1, QWORD PTR .LC73[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L883:
	movsd	xmm1, QWORD PTR .LC73[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L882:
	movsd	xmm1, QWORD PTR .LC73[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L881:
	movsd	xmm1, QWORD PTR .LC73[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC90[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L880:
	movsd	xmm1, QWORD PTR .LC73[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC81[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L879:
	movsd	xmm2, QWORD PTR .LC73[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 24[rsp], xmm5
	movsd	QWORD PTR 16[rsp], xmm4
	movapd	xmm1, xmm2
	movsd	QWORD PTR 8[rsp], xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm2, QWORD PTR 8[rsp]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 16[rsp]
	movsd	xmm5, QWORD PTR 24[rsp]
	jmp	.L1474
.L878:
	movsd	xmm1, QWORD PTR .LC81[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC73[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L877:
	movsd	xmm1, QWORD PTR .LC90[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC73[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L876:
	movsd	xmm1, QWORD PTR .LC98[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC73[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L875:
	movsd	xmm1, QWORD PTR .LC294[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC73[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L874:
	movsd	xmm1, QWORD PTR .LC294[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC73[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L873:
	movsd	xmm1, QWORD PTR .LC294[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC90[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC73[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L872:
	movsd	xmm1, QWORD PTR .LC294[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC81[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC73[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L871:
	movsd	xmm1, QWORD PTR .LC294[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 24[rsp], xmm5
	movsd	QWORD PTR 16[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm2, QWORD PTR .LC73[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	movapd	xmm1, xmm2
	movsd	QWORD PTR 8[rsp], xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm2, QWORD PTR 8[rsp]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 16[rsp]
	movsd	xmm5, QWORD PTR 24[rsp]
	jmp	.L1474
.L870:
	movsd	xmm1, QWORD PTR .LC294[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC73[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC81[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L869:
	movsd	xmm1, QWORD PTR .LC294[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC73[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC90[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L868:
	movsd	xmm1, QWORD PTR .LC294[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC73[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L867:
	movsd	xmm2, QWORD PTR .LC294[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC73[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L866:
	movsd	xmm1, QWORD PTR .LC98[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC73[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L865:
	movsd	xmm1, QWORD PTR .LC90[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC73[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L864:
	movsd	xmm1, QWORD PTR .LC81[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC73[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L863:
	movsd	xmm2, QWORD PTR .LC73[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 24[rsp], xmm5
	movsd	QWORD PTR 16[rsp], xmm4
	movapd	xmm1, xmm2
	movsd	QWORD PTR 8[rsp], xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm2, QWORD PTR 8[rsp]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 16[rsp]
	movsd	xmm5, QWORD PTR 24[rsp]
	jmp	.L1474
.L862:
	movsd	xmm0, QWORD PTR .LC281[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC6[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L861:
	movsd	xmm0, QWORD PTR .LC281[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC73[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L860:
	movsd	xmm0, QWORD PTR .LC281[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC90[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L859:
	movsd	xmm0, QWORD PTR .LC281[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L858:
	movsd	xmm0, QWORD PTR .LC281[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC90[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L857:
	movsd	xmm0, QWORD PTR .LC281[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC73[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L856:
	movsd	xmm0, QWORD PTR .LC281[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC6[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L855:
	movsd	xmm0, QWORD PTR .LC281[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC283[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L854:
	movsd	xmm1, QWORD PTR .LC6[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC283[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L853:
	movsd	xmm1, QWORD PTR .LC73[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC283[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L852:
	movsd	xmm1, QWORD PTR .LC90[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC283[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L851:
	movsd	xmm1, QWORD PTR .LC294[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC283[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L850:
	movsd	xmm1, QWORD PTR .LC294[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC90[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC283[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L849:
	movsd	xmm1, QWORD PTR .LC294[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC73[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC283[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L848:
	movsd	xmm1, QWORD PTR .LC294[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC6[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC283[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L847:
	movsd	xmm1, QWORD PTR .LC294[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC282[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC283[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L846:
	movsd	xmm1, QWORD PTR .LC294[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC282[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC6[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L845:
	movsd	xmm1, QWORD PTR .LC294[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC282[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC73[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L844:
	movsd	xmm1, QWORD PTR .LC294[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC282[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC90[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L843:
	movsd	xmm2, QWORD PTR .LC294[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC282[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L842:
	movsd	xmm1, QWORD PTR .LC90[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC282[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L841:
	movsd	xmm1, QWORD PTR .LC73[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC282[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L840:
	movsd	xmm1, QWORD PTR .LC6[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC282[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L839:
	movsd	xmm0, QWORD PTR .LC281[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC282[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L838:
	movsd	xmm1, QWORD PTR .LC287[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC301[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L837:
	movsd	xmm1, QWORD PTR .LC287[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC288[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L836:
	movsd	xmm1, QWORD PTR .LC287[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC302[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L835:
	movsd	xmm1, QWORD PTR .LC287[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L834:
	movsd	xmm1, QWORD PTR .LC287[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC302[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L833:
	movsd	xmm1, QWORD PTR .LC287[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC288[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L832:
	movsd	xmm1, QWORD PTR .LC287[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC301[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L831:
	movsd	xmm2, QWORD PTR .LC287[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC287[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L830:
	movsd	xmm1, QWORD PTR .LC301[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC287[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L829:
	movsd	xmm1, QWORD PTR .LC288[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC287[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L828:
	movsd	xmm1, QWORD PTR .LC302[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC287[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L827:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC287[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L826:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC302[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC287[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L825:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC288[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC287[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L824:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC301[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC287[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L823:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC287[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC287[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L822:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC287[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC301[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L821:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC287[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC288[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L820:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC287[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC302[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L819:
	movsd	xmm2, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC287[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L818:
	movsd	xmm1, QWORD PTR .LC302[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC287[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L817:
	movsd	xmm1, QWORD PTR .LC288[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC287[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L816:
	movsd	xmm1, QWORD PTR .LC301[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC287[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L815:
	movsd	xmm1, QWORD PTR .LC287[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC287[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L814:
	movsd	xmm1, QWORD PTR .LC98[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC286[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L813:
	movsd	xmm1, QWORD PTR .LC98[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC285[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L812:
	movsd	xmm1, QWORD PTR .LC98[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC288[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L811:
	movsd	xmm1, QWORD PTR .LC98[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L810:
	movsd	xmm1, QWORD PTR .LC98[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC288[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L809:
	movsd	xmm1, QWORD PTR .LC98[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC285[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L808:
	movsd	xmm1, QWORD PTR .LC98[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC286[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L807:
	movsd	xmm2, QWORD PTR .LC98[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L806:
	movsd	xmm1, QWORD PTR .LC286[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L805:
	movsd	xmm1, QWORD PTR .LC285[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L804:
	movsd	xmm1, QWORD PTR .LC288[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L803:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L802:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC288[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L801:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC285[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L800:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC286[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L799:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L798:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC286[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L797:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC285[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L796:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC288[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L795:
	movsd	xmm2, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L794:
	movsd	xmm1, QWORD PTR .LC288[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L793:
	movsd	xmm1, QWORD PTR .LC285[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L792:
	movsd	xmm1, QWORD PTR .LC286[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L791:
	movsd	xmm1, QWORD PTR .LC98[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L790:
	movsd	xmm0, QWORD PTR .LC281[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC129[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L789:
	movsd	xmm0, QWORD PTR .LC281[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L788:
	movsd	xmm0, QWORD PTR .LC281[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC285[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L787:
	movsd	xmm0, QWORD PTR .LC281[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L786:
	movsd	xmm0, QWORD PTR .LC281[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC285[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L785:
	movsd	xmm0, QWORD PTR .LC281[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L784:
	movsd	xmm0, QWORD PTR .LC281[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC129[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L783:
	movsd	xmm0, QWORD PTR .LC281[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC283[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L782:
	movsd	xmm1, QWORD PTR .LC129[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC283[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L781:
	movsd	xmm1, QWORD PTR .LC98[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC283[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L780:
	movsd	xmm1, QWORD PTR .LC285[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC283[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L779:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC283[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L778:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC285[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC283[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L777:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC283[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L776:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC129[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC283[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L775:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC282[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC283[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L774:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC282[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC129[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L773:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC282[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L772:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC282[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC285[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L771:
	movsd	xmm2, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC282[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L770:
	movsd	xmm1, QWORD PTR .LC285[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC282[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L769:
	movsd	xmm1, QWORD PTR .LC98[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC282[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L768:
	movsd	xmm1, QWORD PTR .LC129[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC282[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L767:
	movsd	xmm0, QWORD PTR .LC281[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC282[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L766:
	movsd	xmm1, QWORD PTR .LC291[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC298[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L765:
	movsd	xmm1, QWORD PTR .LC291[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC299[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L764:
	movsd	xmm1, QWORD PTR .LC291[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC300[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L763:
	movsd	xmm1, QWORD PTR .LC291[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L762:
	movsd	xmm1, QWORD PTR .LC291[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC300[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L761:
	movsd	xmm1, QWORD PTR .LC291[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC299[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L760:
	movsd	xmm1, QWORD PTR .LC291[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC298[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L759:
	movsd	xmm2, QWORD PTR .LC291[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC291[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L758:
	movsd	xmm1, QWORD PTR .LC298[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC291[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L757:
	movsd	xmm1, QWORD PTR .LC299[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC291[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1162:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 4268097
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	.p2align 4,,10
	.p2align 3
.L956:
	cvtsd2si	rsi, QWORD PTR BD_COLOR$[rip]
	pxor	xmm1, xmm1
	movss	xmm3, DWORD PTR .LC351[rip]
	xor	r8d, r8d
	movss	xmm2, DWORD PTR .LC352[rip]
	mov	rdi, QWORD PTR BGIMAGE$[rip]
	mov	ecx, 65535
	movaps	xmm0, xmm1
	mov	edx, 2
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	fb_GfxLine@PLT
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1161:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 3743809
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1160:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 3219521
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1159:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 2629697
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1158:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 2105409
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1157:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 4161
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1156:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 8257
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1155:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 12609
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1154:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 16705
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1153:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 16689
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1152:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 16672
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1151:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 16656
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1150:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 16640
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1149:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 1065216
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1148:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 2113792
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1147:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 3227904
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1146:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 4276480
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1145:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 4272384
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1144:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 4268032
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1143:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 4263936
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1142:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 4259840
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1141:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 4259856
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1140:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 4259872
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1139:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 4259889
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1138:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 4259905
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1137:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 3211329
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1136:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 2097217
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1135:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 1048641
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1134:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 65
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1133:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 5331313
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1132:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 5333361
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1131:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 5335409
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1130:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 5337457
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1129:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 5337449
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1128:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 5337441
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1127:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 5337433
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1126:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 5337425
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1125:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 5861713
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1124:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 6386001
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1123:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 6910289
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1122:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 7434577
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1121:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 7432529
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1120:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 7430481
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1119:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 7428433
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1118:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 7426385
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1117:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 7426393
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1116:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 7426401
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1115:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 7426409
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1114:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 7426417
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1113:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 6902129
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1112:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 6377841
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1111:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 5853553
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1110:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 5329265
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1109:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 3753329
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1108:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 3757425
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1107:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 3760497
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1106:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 3764593
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1105:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 3764577
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1104:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 3764565
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1103:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 3764549
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1102:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 3764537
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1101:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 4550969
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1100:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 5599545
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1099:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 6385977
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1098:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 7434553
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1097:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 7430457
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1096:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 7427385
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1095:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 7423289
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1094:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 7420217
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1093:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 7420229
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1092:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 7420245
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1091:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 7420257
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1090:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 7420273
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1089:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 6371697
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1088:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 5585265
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1087:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 4536689
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1086:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 3750257
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1085:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 7281
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1084:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 14705
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1083:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 21873
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1082:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 29041
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1081:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 29013
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1080:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 28985
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1079:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 28956
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1078:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 28928
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1077:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 1863936
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1076:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 3764480
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1075:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 5599488
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1074:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 7434496
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1073:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 7427328
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1072:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 7420160
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1071:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 7412736
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1070:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 7405568
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1069:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 7405596
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1068:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 7405625
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1067:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 7405653
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1066:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 7405681
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1065:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 5570673
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1064:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 3735665
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1063:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 1835121
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1062:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 113
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1061:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 11978495
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1060:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 11983871
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1059:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 11987967
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1058:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 11993087
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1057:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 11993067
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1056:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 11993051
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1055:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 11993030
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1054:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 11993014
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1053:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 13041590
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1052:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 14417846
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1051:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 15466422
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1050:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 16777142
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1049:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 16772022
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1048:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 16767926
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1047:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 16762550
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1046:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 16758454
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1045:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 16758470
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1044:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 16758491
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1043:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 16758507
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1042:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 16758527
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1041:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 15447807
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1040:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 14399231
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1039:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 13022975
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1038:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 11974399
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1037:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 8232703
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1036:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 8240895
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1035:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 8249343
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1034:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 8257535
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1033:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 8257503
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1032:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 8257470
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1031:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 8257438
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1030:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 8257405
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1029:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 10420093
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1028:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 12517245
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1027:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 14679933
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1026:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 16777085
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1025:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 16768893
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1024:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 16760445
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1023:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 16752253
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1022:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 16743805
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1021:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 16743838
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1020:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 16743870
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1019:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 16743903
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1018:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 16743935
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1017:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 14646783
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1016:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 12484095
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1015:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 10386943
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1014:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 8224255
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1013:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 16895
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1012:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 32255
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1011:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 48895
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1010:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 65535
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1009:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 65470
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1008:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 65405
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1007:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 65345
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1006:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 65280
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1005:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 4325120
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1004:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 8257280
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1003:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 12517120
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1002:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 16776960
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1001:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 16760320
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1000:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 16743680
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L999:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 16728320
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L998:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 16711680
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L997:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 16711745
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L996:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 16711805
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L995:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 16711870
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L994:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 16711935
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L993:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 12452095
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L992:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 8192255
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L991:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 4260095
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L990:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 255
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L989:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 16777215
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L988:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 14935011
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L987:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 13290186
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L986:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 11974326
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L985:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 10658466
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L984:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 9605778
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L983:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 8553090
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L982:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 7434609
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L981:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 6381921
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L980:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 5329233
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L979:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 4539717
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L978:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 3750201
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L977:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 2960685
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L976:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 2105376
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L975:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 1315860
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L974:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L973:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 16777215
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L972:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 16777045
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L971:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 16733695
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L970:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 16733525
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L969:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 5636095
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L968:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 5635925
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L967:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 5592575
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L966:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 5592405
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L965:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 11184810
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L964:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 11162880
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L963:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 11141290
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L962:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 11141120
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L961:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 43690
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L960:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 43520
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L959:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 170
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L958:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L924:
	jmp	.L1474
.L941:
	mov	rax, QWORD PTR .LC327[rip]
	mov	QWORD PTR 395608[rbp], rax
	mov	rax, QWORD PTR .LC101[rip]
	mov	QWORD PTR 5184[rbp], rax
	jmp	.L1474
.L940:
	mov	rax, QWORD PTR .LC326[rip]
	mov	QWORD PTR 395608[rbp], rax
	mov	rax, QWORD PTR .LC97[rip]
	mov	QWORD PTR 5184[rbp], rax
	jmp	.L1474
.L939:
	mov	rax, QWORD PTR .LC325[rip]
	mov	QWORD PTR 395608[rbp], rax
	mov	rax, QWORD PTR .LC93[rip]
	mov	QWORD PTR 5184[rbp], rax
	jmp	.L1474
.L938:
	mov	rax, QWORD PTR .LC324[rip]
	mov	QWORD PTR 395608[rbp], rax
	mov	rax, QWORD PTR .LC89[rip]
	mov	QWORD PTR 5184[rbp], rax
	jmp	.L1474
.L937:
	mov	rax, QWORD PTR .LC323[rip]
	mov	QWORD PTR 395608[rbp], rax
	mov	rax, QWORD PTR .LC85[rip]
	mov	QWORD PTR 5184[rbp], rax
	jmp	.L1474
.L936:
	mov	rax, QWORD PTR .LC322[rip]
	mov	QWORD PTR 395608[rbp], rax
	mov	rax, QWORD PTR .LC81[rip]
	mov	QWORD PTR 5184[rbp], rax
	jmp	.L1474
.L935:
	mov	rax, QWORD PTR .LC321[rip]
	mov	QWORD PTR 395608[rbp], rax
	mov	rax, QWORD PTR .LC77[rip]
	mov	QWORD PTR 5184[rbp], rax
	jmp	.L1474
.L934:
	mov	rax, QWORD PTR .LC320[rip]
	mov	QWORD PTR 395608[rbp], rax
	mov	rax, QWORD PTR .LC73[rip]
	mov	QWORD PTR 5184[rbp], rax
	jmp	.L1474
.L933:
	mov	rax, QWORD PTR .LC319[rip]
	mov	QWORD PTR 395608[rbp], rax
	mov	rax, QWORD PTR .LC129[rip]
	mov	QWORD PTR 5184[rbp], rax
	jmp	.L1474
.L932:
	mov	rax, QWORD PTR .LC318[rip]
	mov	QWORD PTR 395608[rbp], rax
	mov	rax, QWORD PTR .LC125[rip]
	mov	QWORD PTR 5184[rbp], rax
	jmp	.L1474
.L931:
	mov	rax, QWORD PTR .LC317[rip]
	mov	QWORD PTR 395608[rbp], rax
	mov	rax, QWORD PTR .LC121[rip]
	mov	QWORD PTR 5184[rbp], rax
	jmp	.L1474
.L930:
	mov	rax, QWORD PTR .LC316[rip]
	mov	QWORD PTR 395608[rbp], rax
	mov	rax, QWORD PTR .LC6[rip]
	mov	QWORD PTR 5184[rbp], rax
	jmp	.L1474
.L929:
	mov	rax, QWORD PTR .LC315[rip]
	mov	QWORD PTR 395608[rbp], rax
	mov	rax, QWORD PTR .LC114[rip]
	mov	QWORD PTR 5184[rbp], rax
	jmp	.L1474
.L928:
	mov	rax, QWORD PTR .LC314[rip]
	mov	QWORD PTR 395608[rbp], rax
	mov	rax, QWORD PTR .LC111[rip]
	mov	QWORD PTR 5184[rbp], rax
	jmp	.L1474
.L927:
	mov	rax, QWORD PTR .LC313[rip]
	mov	QWORD PTR 395608[rbp], rax
	mov	rax, QWORD PTR .LC107[rip]
	mov	QWORD PTR 5184[rbp], rax
	jmp	.L1474
.L926:
	mov	QWORD PTR 395608[rbp], 0x000000000
	mov	QWORD PTR 5184[rbp], 0x000000000
	jmp	.L1474
.L918:
	movsd	xmm1, QWORD PTR .LC81[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC81[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC81[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L917:
	movsd	xmm0, QWORD PTR .LC281[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC305[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L916:
	movsd	xmm2, QWORD PTR .LC305[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC305[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L915:
	movsd	xmm0, QWORD PTR .LC281[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC92[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L914:
	movsd	xmm2, QWORD PTR .LC92[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC92[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L913:
	movsd	xmm1, QWORD PTR .LC92[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC283[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L912:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC304[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC283[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L911:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC303[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC283[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L910:
	movsd	xmm1, QWORD PTR .LC86[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC90[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L909:
	movsd	xmm1, QWORD PTR .LC86[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC94[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L908:
	movsd	xmm1, QWORD PTR .LC86[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC102[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L907:
	movsd	xmm1, QWORD PTR .LC86[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L906:
	movsd	xmm1, QWORD PTR .LC86[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC102[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L905:
	movsd	xmm1, QWORD PTR .LC86[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC94[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L904:
	movsd	xmm1, QWORD PTR .LC86[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC90[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L903:
	movsd	xmm2, QWORD PTR .LC86[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC86[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L902:
	movsd	xmm1, QWORD PTR .LC90[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC86[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L901:
	movsd	xmm1, QWORD PTR .LC94[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC86[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L900:
	movsd	xmm1, QWORD PTR .LC102[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC86[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L899:
	movsd	xmm1, QWORD PTR .LC294[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC86[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L898:
	movsd	xmm1, QWORD PTR .LC294[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC102[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC86[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L897:
	movsd	xmm1, QWORD PTR .LC294[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC94[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC86[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L896:
	movsd	xmm1, QWORD PTR .LC294[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC90[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC86[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L895:
	movsd	xmm1, QWORD PTR .LC294[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC86[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC86[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L894:
	movsd	xmm1, QWORD PTR .LC294[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC86[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC90[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L893:
	movsd	xmm1, QWORD PTR .LC294[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC86[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC94[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L892:
	movsd	xmm1, QWORD PTR .LC294[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC86[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC102[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L891:
	movsd	xmm2, QWORD PTR .LC294[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC86[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L890:
	movsd	xmm1, QWORD PTR .LC102[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC86[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L889:
	movsd	xmm1, QWORD PTR .LC94[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC86[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L888:
	movsd	xmm1, QWORD PTR .LC90[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC86[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L887:
	movsd	xmm1, QWORD PTR .LC86[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC86[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L886:
	movsd	xmm1, QWORD PTR .LC73[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC81[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L885:
	movsd	xmm1, QWORD PTR .LC73[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC281[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC90[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1806:
	mov	esi, 6
	lea	rdi, .LC616[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1805:
	mov	esi, 6
	lea	rdi, .LC615[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1804:
	mov	esi, 6
	lea	rdi, .LC614[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1803:
	mov	esi, 6
	lea	rdi, .LC613[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1802:
	mov	esi, 4
	lea	rdi, .LC612[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1801:
	mov	esi, 13
	lea	rdi, .LC611[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1800:
	mov	esi, 6
	lea	rdi, .LC610[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1799:
	mov	esi, 6
	lea	rdi, .LC609[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1798:
	mov	esi, 7
	lea	rdi, .LC608[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1797:
	mov	esi, 5
	lea	rdi, .LC607[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1796:
	mov	esi, 3
	lea	rdi, .LC606[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1795:
	mov	esi, 6
	lea	rdi, .LC605[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1794:
	mov	esi, 10
	lea	rdi, .LC604[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1793:
	mov	esi, 6
	lea	rdi, .LC603[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1792:
	mov	esi, 7
	lea	rdi, .LC602[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1791:
	mov	esi, 9
	lea	rdi, .LC601[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1790:
	mov	esi, 5
	lea	rdi, .LC600[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1789:
	mov	esi, 7
	lea	rdi, .LC599[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1788:
	mov	esi, 9
	lea	rdi, .LC598[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1787:
	mov	esi, 8
	lea	rdi, .LC597[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1786:
	mov	esi, 4
	lea	rdi, .LC596[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1785:
	mov	esi, 5
	lea	rdi, .LC595[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1784:
	mov	esi, 3
	lea	rdi, .LC594[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1783:
	mov	esi, 7
	lea	rdi, .LC593[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1782:
	mov	esi, 5
	lea	rdi, .LC592[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1781:
	mov	esi, 11
	lea	rdi, .LC591[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1780:
	mov	esi, 8
	lea	rdi, .LC590[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1779:
	mov	esi, 11
	lea	rdi, .LC589[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1778:
	mov	esi, 5
	lea	rdi, .LC588[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1777:
	mov	esi, 10
	lea	rdi, .LC587[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1776:
	mov	esi, 5
	lea	rdi, .LC586[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1775:
	mov	esi, 8
	lea	rdi, .LC585[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1774:
	mov	esi, 5
	lea	rdi, .LC584[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1773:
	mov	esi, 5
	lea	rdi, .LC583[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1772:
	mov	esi, 8
	lea	rdi, .LC582[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1771:
	mov	esi, 6
	lea	rdi, .LC581[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1770:
	mov	esi, 4
	lea	rdi, .LC580[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1769:
	mov	esi, 3
	lea	rdi, .LC579[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1768:
	mov	esi, 7
	lea	rdi, .LC578[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1767:
	mov	esi, 5
	lea	rdi, .LC577[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1766:
	mov	esi, 5
	lea	rdi, .LC576[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1765:
	mov	esi, 7
	lea	rdi, .LC575[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1764:
	mov	esi, 14
	lea	rdi, .LC574[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1763:
	mov	esi, 13
	lea	rdi, .LC573[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1762:
	mov	esi, 11
	lea	rdi, .LC572[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1761:
	mov	esi, 10
	lea	rdi, .LC571[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1760:
	mov	esi, 19
	lea	rdi, .LC570[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1759:
	mov	esi, 18
	lea	rdi, .LC569[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1758:
	mov	esi, 16
	lea	rdi, .LC568[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1757:
	mov	esi, 9
	lea	rdi, .LC567[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1756:
	mov	esi, 4
	lea	rdi, .LC566[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1755:
	mov	esi, 5
	lea	rdi, .LC565[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1754:
	mov	esi, 2
	lea	rdi, .LC564[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1753:
	mov	esi, 2
	lea	rdi, .LC563[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1752:
	mov	esi, 8
	lea	rdi, .LC562[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1751:
	mov	esi, 5
	lea	rdi, .LC561[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1750:
	mov	esi, 9
	lea	rdi, .LC560[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1749:
	mov	esi, 4
	lea	rdi, .LC559[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1748:
	mov	esi, 5
	lea	rdi, .LC558[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1747:
	mov	esi, 4
	lea	rdi, .LC557[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1746:
	mov	esi, 2
	lea	rdi, .LC556[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1745:
	mov	esi, 4
	lea	rdi, .LC555[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1744:
	mov	esi, 3
	lea	rdi, .LC554[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1743:
	mov	esi, 8
	lea	rdi, .LC553[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1742:
	mov	esi, 13
	lea	rdi, .LC552[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1741:
	mov	esi, 4
	lea	rdi, .LC551[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1740:
	mov	esi, 4
	lea	rdi, .LC550[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1739:
	mov	esi, 11
	lea	rdi, .LC549[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1738:
	mov	esi, 6
	lea	rdi, .LC548[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1737:
	mov	esi, 6
	lea	rdi, .LC547[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1736:
	mov	esi, 5
	lea	rdi, .LC546[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1735:
	mov	esi, 4
	lea	rdi, .LC545[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1734:
	mov	esi, 15
	lea	rdi, .LC544[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1733:
	mov	esi, 5
	lea	rdi, .LC543[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1732:
	mov	esi, 1
	lea	rdi, .LC230[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1731:
	mov	esi, 4
	lea	rdi, .LC542[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1730:
	mov	esi, 2
	lea	rdi, .LC541[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1729:
	mov	esi, 5
	lea	rdi, .LC540[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1728:
	mov	esi, 5
	lea	rdi, .LC539[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1727:
	mov	esi, 5
	lea	rdi, .LC538[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1726:
	mov	esi, 9
	lea	rdi, .LC537[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1725:
	mov	esi, 5
	lea	rdi, .LC536[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1724:
	mov	esi, 8
	lea	rdi, .LC535[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1723:
	mov	esi, 4
	lea	rdi, .LC534[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1722:
	mov	esi, 8
	lea	rdi, .LC533[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1721:
	mov	esi, 5
	lea	rdi, .LC532[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1720:
	mov	esi, 10
	lea	rdi, .LC531[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1719:
	mov	esi, 10
	lea	rdi, .LC530[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1718:
	mov	esi, 10
	lea	rdi, .LC529[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1717:
	mov	esi, 5
	lea	rdi, .LC528[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1716:
	mov	esi, 5
	lea	rdi, .LC527[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1715:
	mov	esi, 4
	lea	rdi, .LC526[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1714:
	mov	esi, 5
	lea	rdi, .LC525[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1713:
	mov	esi, 3
	lea	rdi, .LC524[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1712:
	mov	esi, 10
	lea	rdi, .LC523[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1711:
	mov	esi, 6
	lea	rdi, .LC522[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1710:
	mov	esi, 4
	lea	rdi, .LC521[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1709:
	mov	esi, 4
	lea	rdi, .LC520[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1708:
	mov	esi, 12
	lea	rdi, .LC519[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1707:
	mov	esi, 4
	lea	rdi, .LC518[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1706:
	mov	esi, 5
	lea	rdi, .LC517[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1705:
	mov	esi, 4
	lea	rdi, .LC516[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1704:
	mov	esi, 5
	lea	rdi, .LC515[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1703:
	mov	esi, 5
	lea	rdi, .LC514[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1702:
	mov	esi, 10
	lea	rdi, .LC513[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1701:
	mov	esi, 9
	lea	rdi, .LC512[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1700:
	mov	esi, 4
	lea	rdi, .LC511[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1699:
	mov	esi, 6
	lea	rdi, .LC510[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1698:
	mov	esi, 13
	lea	rdi, .LC509[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1697:
	mov	esi, 13
	lea	rdi, .LC508[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1696:
	mov	esi, 7
	lea	rdi, .LC507[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1695:
	mov	esi, 9
	lea	rdi, .LC506[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1694:
	mov	esi, 5
	lea	rdi, .LC505[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1693:
	mov	esi, 6
	lea	rdi, .LC504[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1692:
	mov	esi, 4
	lea	rdi, .LC503[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1691:
	mov	esi, 5
	lea	rdi, .LC502[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1690:
	mov	esi, 9
	lea	rdi, .LC501[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1689:
	mov	esi, 10
	lea	rdi, .LC500[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1688:
	mov	esi, 10
	lea	rdi, .LC499[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1687:
	mov	esi, 1
	lea	rdi, .LC229[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1686:
	mov	esi, 5
	lea	rdi, .LC498[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1685:
	mov	esi, 3
	lea	rdi, .LC497[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1684:
	mov	esi, 7
	lea	rdi, .LC496[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1683:
	mov	esi, 8
	lea	rdi, .LC495[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1682:
	mov	esi, 9
	lea	rdi, .LC494[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1681:
	mov	esi, 4
	lea	rdi, .LC493[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1680:
	mov	esi, 6
	lea	rdi, .LC492[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1679:
	mov	esi, 9
	lea	rdi, .LC491[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1678:
	mov	esi, 3
	lea	rdi, .LC490[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1677:
	mov	esi, 5
	lea	rdi, .LC489[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1676:
	mov	esi, 5
	lea	rdi, .LC488[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1675:
	mov	esi, 4
	lea	rdi, .LC487[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1674:
	mov	esi, 2
	lea	rdi, .LC486[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1673:
	mov	esi, 5
	lea	rdi, .LC485[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1672:
	mov	esi, 13
	lea	rdi, .LC484[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1671:
	mov	esi, 6
	lea	rdi, .LC483[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1670:
	mov	esi, 6
	lea	rdi, .LC482[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1669:
	mov	esi, 9
	lea	rdi, .LC481[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1668:
	mov	esi, 3
	lea	rdi, .LC480[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1667:
	mov	esi, 5
	lea	rdi, .LC479[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1666:
	mov	esi, 4
	lea	rdi, .LC478[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1665:
	mov	esi, 5
	lea	rdi, .LC477[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1664:
	mov	esi, 9
	lea	rdi, .LC476[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1663:
	mov	esi, 3
	lea	rdi, .LC475[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1662:
	mov	esi, 2
	lea	rdi, .LC474[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1661:
	mov	esi, 11
	lea	rdi, .LC473[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1660:
	mov	esi, 5
	lea	rdi, .LC472[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1659:
	mov	esi, 5
	lea	rdi, .LC471[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1658:
	mov	esi, 10
	lea	rdi, .LC470[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1657:
	mov	esi, 4
	lea	rdi, .LC469[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1656:
	mov	esi, 3
	lea	rdi, .LC468[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1655:
	mov	esi, 9
	lea	rdi, .LC467[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1654:
	mov	esi, 5
	lea	rdi, .LC466[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1653:
	mov	esi, 6
	lea	rdi, .LC465[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1652:
	mov	esi, 8
	lea	rdi, .LC464[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1651:
	mov	esi, 3
	lea	rdi, .LC463[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1650:
	mov	esi, 5
	lea	rdi, .LC462[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1649:
	mov	esi, 8
	lea	rdi, .LC461[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1648:
	mov	esi, 3
	lea	rdi, .LC460[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1647:
	mov	esi, 13
	lea	rdi, .LC459[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1646:
	mov	esi, 7
	lea	rdi, .LC458[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1645:
	mov	esi, 13
	lea	rdi, .LC457[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1644:
	mov	esi, 8
	lea	rdi, .LC456[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1643:
	mov	esi, 9
	lea	rdi, .LC455[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1642:
	mov	esi, 5
	lea	rdi, .LC454[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1641:
	mov	esi, 4
	lea	rdi, .LC453[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1640:
	mov	esi, 19
	lea	rdi, .LC452[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1639:
	mov	esi, 12
	lea	rdi, .LC451[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1638:
	mov	esi, 16
	lea	rdi, .LC450[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1637:
	mov	esi, 16
	lea	rdi, .LC449[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1636:
	mov	esi, 10
	lea	rdi, .LC448[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1635:
	mov	esi, 8
	lea	rdi, .LC447[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1634:
	mov	esi, 5
	lea	rdi, .LC446[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1633:
	mov	esi, 17
	lea	rdi, .LC445[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1632:
	mov	esi, 3
	lea	rdi, .LC444[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1631:
	mov	esi, 5
	lea	rdi, .LC443[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1630:
	mov	esi, 10
	lea	rdi, .LC442[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1629:
	mov	esi, 5
	lea	rdi, .LC441[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1628:
	mov	esi, 5
	lea	rdi, .LC440[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1627:
	mov	esi, 9
	lea	rdi, .LC439[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1626:
	mov	esi, 7
	lea	rdi, .LC438[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1625:
	mov	esi, 3
	lea	rdi, .LC437[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1624:
	mov	esi, 11
	lea	rdi, .LC436[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1623:
	mov	esi, 8
	lea	rdi, .LC435[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1622:
	mov	esi, 6
	lea	rdi, .LC434[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1621:
	mov	esi, 5
	lea	rdi, .LC433[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1620:
	mov	esi, 4
	lea	rdi, .LC432[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1619:
	mov	esi, 8
	lea	rdi, .LC431[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1618:
	mov	esi, 6
	lea	rdi, .LC430[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1617:
	mov	esi, 6
	lea	rdi, .LC429[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1616:
	mov	esi, 8
	lea	rdi, .LC428[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1615:
	mov	esi, 10
	lea	rdi, .LC427[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1614:
	mov	esi, 8
	lea	rdi, .LC426[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1613:
	mov	esi, 3
	lea	rdi, .LC425[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1612:
	mov	esi, 12
	lea	rdi, .LC424[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1611:
	mov	esi, 6
	lea	rdi, .LC423[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1610:
	mov	esi, 8
	lea	rdi, .LC422[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1609:
	mov	esi, 1
	lea	rdi, .LC228[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1605:
	movsd	xmm0, QWORD PTR 394888[rbp]
	movsd	QWORD PTR 24[rsp], xmm1
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	nearbyint@PLT
	movsd	xmm1, QWORD PTR 24[rsp]
	movsd	xmm4, QWORD PTR 8[rsp]
	cvttsd2si	rax, xmm0
	movsd	xmm5, QWORD PTR 16[rsp]
	comisd	xmm0, xmm1
	jb	.L1607
	subsd	xmm0, xmm1
	cvttsd2si	rax, xmm0
	xor	rax, r12
.L1607:
	cmp	rax, 255
	ja	.L649
	jmp	[QWORD PTR 0[r13+rax*8]]
.L1603:
	cvtsd2si	edx, QWORD PTR 394896[rbp]
	cvtsd2si	eax, QWORD PTR 394904[rbp]
	mov	r12d, edx
	mov	ebp, eax
	cmp	dl, al
	ja	.L649
	mov	rbx, QWORD PTR fb_hPutPSet@GOTPCREL[rip]
	lea	r13, 208[rsp]
	lea	r14, 240[rsp]
.L1604:
	movzx	edi, r12b
	add	r12d, 1
	call	fb_UIntToStr@PLT
	mov	QWORD PTR 16[r13], 0
	pxor	xmm0, xmm0
	mov	rdi, r13
	mov	rcx, rax
	movaps	XMMWORD PTR 0[r13], xmm0
	mov	r8, -1
	mov	edx, 8
	lea	rsi, .LC421[rip]
	call	fb_StrConcat@PLT
	mov	QWORD PTR 16[r14], 0
	pxor	xmm0, xmm0
	mov	r8d, 5
	movaps	XMMWORD PTR [r14], xmm0
	mov	rsi, rax
	mov	rdi, r14
	lea	rcx, .LC417[rip]
	mov	rdx, -1
	call	fb_StrConcat@PLT
	mov	rsi, QWORD PTR RENDER$[rip]
	xor	edx, edx
	mov	rdi, rax
	call	fb_GfxBload@PLT
	mov	esi, 1
	mov	edi, 10
	call	fb_SleepEx@PLT
	push	0
	pxor	xmm1, xmm1
	mov	ecx, -65536
	push	0
	mov	r9d, -65536
	mov	edx, -65536
	movaps	xmm0, xmm1
	push	-1
	mov	rsi, QWORD PTR RENDER$[rip]
	mov	r8d, -65536
	push	rbx
	mov	rdi, QWORD PTR FGIMAGE$[rip]
	push	1
	push	0
	call	fb_GfxPut@PLT
	add	rsp, 48
	cmp	r12b, bpl
	jbe	.L1604
	jmp	.L649
.L1602:
	movsd	xmm0, QWORD PTR .LC420[rip]
	addsd	xmm0, QWORD PTR SYS_OFFSET$[rip]
	cvtsd2si	rax, xmm0
	movsd	QWORD PTR 0[rbp+rax*8], xmm5
	jmp	.L649
.L1601:
	mov	esi, 29
	lea	rdi, .LC414[rip]
	xor	ebx, ebx
	call	fb_StrAllocTempDescZEx@PLT
	mov	rdi, rax
	call	fb_Shell@PLT
	mov	esi, 30
	lea	rdi, .LC415[rip]
	call	fb_StrAllocTempDescZEx@PLT
	mov	rdi, rax
	call	fb_Shell@PLT
	movsd	xmm0, QWORD PTR 394888[rbp]
	call	fb_DoubleToStr@PLT
	mov	ecx, 6
	or	r8, -1
	lea	r9, 144[rsp]
	mov	r10, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	edx, 19
	rep stosd
	lea	rsi, .LC416[rip]
	mov	rcx, r10
	mov	rdi, r9
	call	fb_StrConcat@PLT
	mov	ecx, 6
	mov	r8d, 5
	lea	r9, 176[rsp]
	mov	rdi, r9
	mov	rsi, rax
	mov	eax, ebx
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	lea	rcx, .LC417[rip]
	call	fb_StrConcat@PLT
	mov	rdi, rax
	call	fb_Shell@PLT
	mov	esi, 18
	lea	rdi, .LC418[rip]
	call	fb_StrAllocTempDescZEx@PLT
	mov	rdi, rax
	call	fb_Shell@PLT
	mov	edi, -65536
	call	fb_Cls@PLT
	movsd	xmm0, QWORD PTR 394888[rbp]
	call	fb_DoubleToStr@PLT
	mov	ecx, 6
	or	r8, -1
	lea	r9, 208[rsp]
	mov	r10, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	edx, 8
	rep stosd
	lea	rsi, .LC419[rip]
	mov	rcx, r10
	mov	rdi, r9
	call	fb_StrConcat@PLT
	mov	ecx, 6
	mov	r8d, 5
	lea	r9, 240[rsp]
	mov	rdi, r9
	mov	rsi, rax
	mov	eax, ebx
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	lea	rcx, .LC417[rip]
	call	fb_StrConcat@PLT
	mov	rsi, QWORD PTR FGIMAGE$[rip]
	xor	edx, edx
	mov	rdi, rax
	call	fb_GfxBload@PLT
	push	0
	pxor	xmm1, xmm1
	mov	ecx, -65536
	push	0
	mov	r9d, -65536
	mov	edx, -65536
	movaps	xmm0, xmm1
	push	-1
	mov	rsi, QWORD PTR RENDER$[rip]
	mov	r8d, -65536
	push	QWORD PTR fb_hPutPSet@GOTPCREL[rip]
	mov	rdi, QWORD PTR FGIMAGE$[rip]
	push	1
	push	0
	call	fb_GfxPut@PLT
	add	rsp, 48
	jmp	.L649
.L1600:
	mov	esi, 14
	lea	rdi, .LC413[rip]
	call	fb_StrAllocTempDescZEx@PLT
	mov	edi, 1
	mov	edx, 1
	mov	rsi, rax
	call	fb_PrintString@PLT
	add	rsp, 280
	mov	edi, 1
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_FileClose@PLT
.L1599:
	mov	esi, 7
	lea	rdi, .LC411[rip]
	call	fb_StrAllocTempDescZEx@PLT
	xor	edx, edx
	xor	r9d, r9d
	mov	r8d, 1
	mov	rdi, rax
	xor	ecx, ecx
	mov	esi, 3
	call	fb_FileOpen@PLT
	mov	esi, 16
	lea	rdi, .LC412[rip]
	call	fb_StrAllocTempDescZEx@PLT
	mov	edx, 1
	mov	edi, 1
	add	rsp, 280
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1557:
	movapd	xmm0, XMMWORD PTR .LC390[rip]
	mov	rdi, rbp
	pxor	xmm1, xmm1
	lea	r14, 240[rsp]
	movups	XMMWORD PTR 394840[rbp], xmm0
	movsd	xmm0, QWORD PTR .LC388[rip]
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR SCR_W$[rip]
	mov	rdi, r14
	or	rsi, -1
	mov	QWORD PTR 16[rsp], rax
	mov	rax, QWORD PTR SCR_H$[rip]
	mov	QWORD PTR 24[rsp], rax
	call	_ZN9SHADERTOYC1Ev
	lea	rdi, FILENAME$[rip]
	call	fb_StrLen@PLT
	test	rax, rax
	jne	.L1558
	or	rsi, -1
	xor	r8d, r8d
	lea	rdi, FILENAME$[rip]
	mov	ecx, 23
	lea	rdx, .LC391[rip]
	call	fb_StrAssign@PLT
	lea	rsi, FILENAME$[rip]
	mov	rdi, r14
	call	_ZN9SHADERTOY11COMPILEFILEER8FBSTRING
	test	al, al
	jne	.L1559
	mov	r10d, 1
.L3866:
	lea	r13, 208[rsp]
	xor	r15d, r15d
	lea	r11, 112[rsp]
	mov	ecx, 6
	mov	eax, r15d
	mov	rdi, r13
	or	r8, -1
	mov	edx, 7
	rep stosd
	mov	rdi, r11
	mov	ecx, 6
	lea	rsi, .LC392[rip]
	rep stosd
	mov	rdi, r11
	lea	rcx, FILENAME$[rip]
	mov	BYTE PTR 40[rsp], r10b
	mov	QWORD PTR 32[rsp], r11
	lea	r12, 176[rsp]
	call	fb_StrConcat@PLT
	mov	ecx, 6
	mov	r8d, 3
	lea	r9, 144[rsp]
	mov	rdi, r9
	mov	rsi, rax
	mov	eax, r15d
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	lea	rcx, .LC393[rip]
	mov	QWORD PTR 8[rsp], r9
	call	fb_StrConcat@PLT
	mov	rdi, r12
	or	r8, -1
	or	rdx, -1
	mov	rsi, rax
	mov	ecx, 6
	mov	eax, r15d
	rep stosd
	lea	rcx, 248[rsp]
	mov	rdi, r12
	call	fb_StrConcat@PLT
	xor	r8d, r8d
	or	rcx, -1
	or	rsi, -1
	mov	rdx, rax
	mov	rdi, r13
	call	fb_StrAssign@PLT
	mov	rdi, r13
	call	ERROREXIT
	mov	rdi, r13
	call	fb_StrDelete@PLT
	mov	r9, QWORD PTR 8[rsp]
	mov	eax, r15d
	mov	ecx, 6
	mov	r8d, 8
	or	rdx, -1
	lea	rsi, FILENAME$[rip]
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	lea	rcx, .LC394[rip]
	call	fb_StrConcat@PLT
	mov	rdi, rax
	call	fb_GfxSetWindowTitle@PLT
	mov	edi, DWORD PTR 244[rsp]
	call	[QWORD PTR GLUSEPROGRAM$[rip]]
	mov	r11, QWORD PTR 32[rsp]
	pxor	xmm0, xmm0
	mov	edi, 4
	movaps	XMMWORD PTR 112[rsp], xmm0
	mov	rsi, r11
	call	glGenTextures@PLT
	movzx	r10d, BYTE PTR 40[rsp]
	test	r10b, r10b
	je	.L1571
.L3867:
	cmp	QWORD PTR FGIMAGE$[rip], 0
	je	.L4456
.L1561:
.L1569:
.L1570:
	lea	rcx, 104[rsp]
	lea	rdx, 96[rsp]
	mov	r9, r13
	mov	r8, r12
	mov	QWORD PTR 88[rsp], 0
	lea	rsi, 88[rsp]
	mov	QWORD PTR 96[rsp], 0
	mov	QWORD PTR 104[rsp], 0
	mov	QWORD PTR 176[rsp], 0
	mov	QWORD PTR 208[rsp], 0
	mov	QWORD PTR 80[rsp], 0
	push	rdi
	mov	rdi, QWORD PTR FGIMAGE$[rip]
	lea	rax, 88[rsp]
	push	rax
	call	fb_GfxImageInfo@PLT
	mov	esi, DWORD PTR 128[rsp]
	mov	edi, 3553
	call	glBindTexture@PLT
	pop	r8
	push	QWORD PTR 216[rsp]
	xor	esi, esi
	push	5121
	mov	edi, 3553
	xor	r9d, r9d
	mov	edx, 6408
	push	32993
	mov	r8d, DWORD PTR 128[rsp]
	mov	ecx, DWORD PTR 120[rsp]
	call	glTexImage2D@PLT
	add	rsp, 32
	xor	esi, esi
	mov	edi, 3553
	call	glBindTexture@PLT
.L1560:
.L1571:
	mov	edi, DWORD PTR 244[rsp]
	lea	rsi, .LC400[rip]
	call	[QWORD PTR GLGETUNIFORMLOCATION$[rip]]
	mov	edi, eax
	test	eax, eax
	js	.L1573
	xor	esi, esi
	call	[QWORD PTR GLUNIFORM1I$[rip]]
	mov	edi, 33984
	call	glActiveTexture@PLT
	mov	esi, DWORD PTR 112[rsp]
	mov	edi, 3553
	call	glBindTexture@PLT
.L1572:
.L1573:
	mov	edi, DWORD PTR 244[rsp]
	lea	rsi, .LC401[rip]
	call	[QWORD PTR GLGETUNIFORMLOCATION$[rip]]
	mov	edi, DWORD PTR 244[rsp]
	lea	rsi, .LC402[rip]
	mov	DWORD PTR 40[rsp], eax
	call	[QWORD PTR GLGETUNIFORMLOCATION$[rip]]
	mov	edi, DWORD PTR 244[rsp]
	lea	rsi, .LC403[rip]
	mov	r15d, eax
	call	[QWORD PTR GLGETUNIFORMLOCATION$[rip]]
	mov	edi, DWORD PTR 244[rsp]
	lea	rsi, .LC404[rip]
	mov	DWORD PTR 8[rsp], eax
	call	[QWORD PTR GLGETUNIFORMLOCATION$[rip]]
	mov	edi, DWORD PTR 244[rsp]
	lea	rsi, .LC405[rip]
	mov	r12d, eax
	call	[QWORD PTR GLGETUNIFORMLOCATION$[rip]]
	mov	r8d, DWORD PTR 8[rsp]
	mov	r13d, eax
	test	r8d, r8d
	js	.L1574
	mov	rax, QWORD PTR 16[rsp]
	pxor	xmm0, xmm0
	cvtsi2ss	xmm0, rax
	test	rax, rax
	jns	.L1576
	mov	rbx, QWORD PTR 16[rsp]
	pxor	xmm0, xmm0
	mov	rax, rbx
	and	ebx, 1
	shr	rax
	or	rax, rbx
	cvtsi2ss	xmm0, rax
	addss	xmm0, xmm0
.L1576:
	mov	rax, QWORD PTR 24[rsp]
	pxor	xmm1, xmm1
	cvtsi2ss	xmm1, rax
	test	rax, rax
	jns	.L1578
	mov	rbx, QWORD PTR 24[rsp]
	pxor	xmm1, xmm1
	mov	rax, rbx
	and	ebx, 1
	shr	rax
	or	rax, rbx
	cvtsi2ss	xmm1, rax
	addss	xmm1, xmm1
.L1578:
	movaps	xmm2, xmm0
	mov	edi, r8d
	divss	xmm2, xmm1
	call	[QWORD PTR GLUNIFORM3F$[rip]]
.L1574:
	mov	QWORD PTR 72[rsp], 0
	xor	ebx, ebx
	mov	QWORD PTR 80[rsp], 0
	mov	QWORD PTR 88[rsp], 0
	mov	QWORD PTR 96[rsp], 0
	call	fb_Timer@PLT
	mov	QWORD PTR 104[rsp], 0
	mov	QWORD PTR 24[rsp], -1
	mov	QWORD PTR 16[rsp], -1
	mov	QWORD PTR 8[rsp], -1
	movsd	QWORD PTR 48[rsp], xmm0
	movsd	QWORD PTR 32[rsp], xmm0
.L1579:
	call	fb_Inkey@PLT
	mov	ecx, 1
	lea	rdx, .LC3[rip]
	mov	rsi, -1
	mov	rdi, rax
	call	fb_StrCompare@PLT
	test	eax, eax
	jne	.L4457
	call	fb_Timer@PLT
	movsd	QWORD PTR 104[rsp], xmm0
	subsd	xmm0, QWORD PTR 48[rsp]
	movsd	QWORD PTR 96[rsp], xmm0
	test	r15d, r15d
	js	.L4458
	mov	edi, r15d
	cvtsd2ss	xmm0, xmm0
	call	[QWORD PTR GLUNIFORM1F$[rip]]
.L1583:
.L1585:
	test	r13d, r13d
	js	.L1586
	pxor	xmm0, xmm0
	mov	edi, r13d
	cvtsi2ss	xmm0, rbx
	call	[QWORD PTR GLUNIFORM1F$[rip]]
.L1586:
	test	r12d, r12d
	js	.L1595
	lea	rcx, 88[rsp]
	lea	rdx, 176[rsp]
	mov	QWORD PTR 208[rsp], 0
	lea	rsi, 80[rsp]
	lea	rdi, 72[rsp]
	mov	QWORD PTR 176[rsp], 0
	lea	r8, 208[rsp]
	call	fb_GetMouse64@PLT
	test	eax, eax
	jne	.L1595
	mov	rcx, QWORD PTR 72[rsp]
	mov	rdx, QWORD PTR 80[rsp]
	mov	rax, QWORD PTR 88[rsp]
	cmp	rcx, QWORD PTR 8[rsp]
	je	.L4459
.L1589:
	pxor	xmm2, xmm2
	pxor	xmm1, xmm1
	cvtsi2ss	xmm2, rax
	mov	rax, QWORD PTR SCR_H$[rip]
	sub	rax, rdx
	cvtsi2ss	xmm1, rax
	jns	.L1591
	mov	rdx, rax
	and	eax, 1
	pxor	xmm1, xmm1
	shr	rdx
	or	rdx, rax
	cvtsi2ss	xmm1, rdx
	addss	xmm1, xmm1
.L1591:
	pxor	xmm0, xmm0
	movss	xmm3, DWORD PTR .LC406[rip]
	mov	edi, r12d
	cvtsi2ss	xmm0, rcx
	call	[QWORD PTR GLUNIFORM4F$[rip]]
	mov	rax, QWORD PTR 72[rsp]
	mov	QWORD PTR 8[rsp], rax
	mov	rax, QWORD PTR 80[rsp]
	mov	QWORD PTR 16[rsp], rax
	mov	rax, QWORD PTR 88[rsp]
	mov	QWORD PTR 24[rsp], rax
.L1588:
.L1592:
.L1593:
.L1594:
.L1587:
.L1595:
	movss	xmm3, DWORD PTR .LC406[rip]
	movss	xmm1, DWORD PTR .LC407[rip]
	add	rbx, 1
	movaps	xmm2, xmm3
	movaps	xmm0, xmm1
	call	glRectf@PLT
	mov	esi, -1
	mov	edi, -1
	call	fb_GfxFlip@PLT
	movabs	rax, -1229782938247303441
	movabs	rdx, 614891469123651720
	imul	rax, rbx
	add	rax, rdx
	movabs	rdx, 307445734561825860
	ror	rax, 2
	cmp	rax, rdx
	ja	.L1579
	call	fb_Timer@PLT
	movapd	xmm1, xmm0
	subsd	xmm1, QWORD PTR 32[rsp]
	movsd	QWORD PTR 104[rsp], xmm0
	movsd	QWORD PTR 56[rsp], xmm0
	movsd	xmm0, QWORD PTR .LC101[rip]
	divsd	xmm0, xmm1
	cvtsd2si	rdi, xmm0
	call	fb_LongintToStr@PLT
	lea	r9, 176[rsp]
	xor	r11d, r11d
	mov	ecx, 6
	mov	QWORD PTR 32[rsp], rax
	mov	rdi, r9
	mov	eax, r11d
	mov	r8d, 7
	rep stosd
	or	rdx, -1
	mov	rdi, r9
	lea	rcx, .LC408[rip]
	lea	rsi, FILENAME$[rip]
	call	fb_StrConcat@PLT
	xor	r11d, r11d
	or	r8, -1
	or	rdx, -1
	lea	r9, 208[rsp]
	mov	rsi, rax
	mov	ecx, 6
	mov	eax, r11d
	mov	rdi, r9
	mov	r10, QWORD PTR 32[rsp]
	rep stosd
	mov	rdi, r9
	mov	rcx, r10
	call	fb_StrConcat@PLT
	pxor	xmm1, xmm1
	xor	r9d, r9d
	xor	r8d, r8d
	push	rcx
	mov	rdx, rax
	xor	ecx, ecx
	mov	esi, -2147483644
	push	0
	movaps	xmm0, xmm1
	xor	edi, edi
	push	0
	push	0
	call	fb_GfxDrawString@PLT
	movsd	xmm2, QWORD PTR 88[rsp]
	add	rsp, 32
	movsd	QWORD PTR 32[rsp], xmm2
	jmp	.L1579
.L1472:
	movsd	xmm0, QWORD PTR .LC354[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC305[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1471:
	movsd	xmm2, QWORD PTR .LC305[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC305[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1473:
	movsd	xmm1, QWORD PTR .LC81[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC81[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC81[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1470:
	movsd	xmm0, QWORD PTR .LC354[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC92[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1469:
	movsd	xmm2, QWORD PTR .LC92[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC92[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1468:
	movsd	xmm1, QWORD PTR .LC92[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC356[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1467:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC304[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC356[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1466:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC303[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC356[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1465:
	movsd	xmm1, QWORD PTR .LC86[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC90[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1464:
	movsd	xmm1, QWORD PTR .LC86[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC94[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1463:
	movsd	xmm1, QWORD PTR .LC86[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC102[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1462:
	movsd	xmm1, QWORD PTR .LC86[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1461:
	movsd	xmm1, QWORD PTR .LC86[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC102[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1460:
	movsd	xmm1, QWORD PTR .LC86[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC94[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1459:
	movsd	xmm1, QWORD PTR .LC86[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC90[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1458:
	movsd	xmm2, QWORD PTR .LC86[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC86[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1457:
	movsd	xmm1, QWORD PTR .LC90[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC86[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1456:
	movsd	xmm1, QWORD PTR .LC94[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC86[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1455:
	movsd	xmm1, QWORD PTR .LC102[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC86[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1454:
	movsd	xmm1, QWORD PTR .LC294[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC86[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1453:
	movsd	xmm1, QWORD PTR .LC294[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC102[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC86[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1452:
	movsd	xmm1, QWORD PTR .LC294[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC94[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC86[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1451:
	movsd	xmm1, QWORD PTR .LC294[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC90[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC86[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1450:
	movsd	xmm1, QWORD PTR .LC294[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC86[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC86[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1449:
	movsd	xmm1, QWORD PTR .LC294[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC86[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC90[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1448:
	movsd	xmm1, QWORD PTR .LC294[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC86[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC94[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1447:
	movsd	xmm1, QWORD PTR .LC294[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC86[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC102[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1446:
	movsd	xmm2, QWORD PTR .LC294[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC86[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1445:
	movsd	xmm1, QWORD PTR .LC102[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC86[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1444:
	movsd	xmm1, QWORD PTR .LC94[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC86[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1443:
	movsd	xmm1, QWORD PTR .LC90[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC86[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1442:
	movsd	xmm1, QWORD PTR .LC86[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC86[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1441:
	movsd	xmm1, QWORD PTR .LC73[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC81[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1440:
	movsd	xmm1, QWORD PTR .LC73[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC90[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1439:
	movsd	xmm1, QWORD PTR .LC73[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1438:
	movsd	xmm1, QWORD PTR .LC73[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1437:
	movsd	xmm1, QWORD PTR .LC73[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1436:
	movsd	xmm1, QWORD PTR .LC73[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC90[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1435:
	movsd	xmm1, QWORD PTR .LC73[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC81[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1434:
	movsd	xmm2, QWORD PTR .LC73[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 24[rsp], xmm5
	movsd	QWORD PTR 16[rsp], xmm4
	movapd	xmm1, xmm2
	movsd	QWORD PTR 8[rsp], xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm2, QWORD PTR 8[rsp]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 16[rsp]
	movsd	xmm5, QWORD PTR 24[rsp]
	jmp	.L1474
.L1433:
	movsd	xmm1, QWORD PTR .LC81[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC73[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1432:
	movsd	xmm1, QWORD PTR .LC90[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC73[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1431:
	movsd	xmm1, QWORD PTR .LC98[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC73[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1430:
	movsd	xmm1, QWORD PTR .LC294[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC73[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1429:
	movsd	xmm1, QWORD PTR .LC294[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC73[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1428:
	movsd	xmm1, QWORD PTR .LC294[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC90[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC73[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1427:
	movsd	xmm1, QWORD PTR .LC294[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC81[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC73[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1426:
	movsd	xmm1, QWORD PTR .LC294[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 24[rsp], xmm5
	movsd	QWORD PTR 16[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm2, QWORD PTR .LC73[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	movapd	xmm1, xmm2
	movsd	QWORD PTR 8[rsp], xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm2, QWORD PTR 8[rsp]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 16[rsp]
	movsd	xmm5, QWORD PTR 24[rsp]
	jmp	.L1474
.L1425:
	movsd	xmm1, QWORD PTR .LC294[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC73[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC81[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1424:
	movsd	xmm1, QWORD PTR .LC294[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC73[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC90[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1423:
	movsd	xmm1, QWORD PTR .LC294[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC73[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1422:
	movsd	xmm2, QWORD PTR .LC294[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC73[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1421:
	movsd	xmm1, QWORD PTR .LC98[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC73[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1420:
	movsd	xmm1, QWORD PTR .LC90[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC73[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1419:
	movsd	xmm1, QWORD PTR .LC81[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC73[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1418:
	movsd	xmm2, QWORD PTR .LC73[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 24[rsp], xmm5
	movsd	QWORD PTR 16[rsp], xmm4
	movapd	xmm1, xmm2
	movsd	QWORD PTR 8[rsp], xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm2, QWORD PTR 8[rsp]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 16[rsp]
	movsd	xmm5, QWORD PTR 24[rsp]
	jmp	.L1474
.L1417:
	movsd	xmm0, QWORD PTR .LC354[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC6[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1416:
	movsd	xmm0, QWORD PTR .LC354[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC73[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1415:
	movsd	xmm0, QWORD PTR .LC354[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC90[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1414:
	movsd	xmm0, QWORD PTR .LC354[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1413:
	movsd	xmm0, QWORD PTR .LC354[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC90[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1412:
	movsd	xmm0, QWORD PTR .LC354[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC73[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1411:
	movsd	xmm0, QWORD PTR .LC354[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC6[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1410:
	movsd	xmm0, QWORD PTR .LC354[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC356[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1409:
	movsd	xmm1, QWORD PTR .LC6[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC356[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1408:
	movsd	xmm1, QWORD PTR .LC73[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC356[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1407:
	movsd	xmm1, QWORD PTR .LC90[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC356[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1406:
	movsd	xmm1, QWORD PTR .LC294[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC356[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1405:
	movsd	xmm1, QWORD PTR .LC294[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC90[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC356[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1404:
	movsd	xmm1, QWORD PTR .LC294[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC73[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC356[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1403:
	movsd	xmm1, QWORD PTR .LC294[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC6[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC356[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1402:
	movsd	xmm1, QWORD PTR .LC294[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC355[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC356[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1401:
	movsd	xmm1, QWORD PTR .LC294[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC355[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC6[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1400:
	movsd	xmm1, QWORD PTR .LC294[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC355[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC73[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1399:
	movsd	xmm1, QWORD PTR .LC294[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC355[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC90[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1398:
	movsd	xmm2, QWORD PTR .LC294[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC355[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1397:
	movsd	xmm1, QWORD PTR .LC90[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC355[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1396:
	movsd	xmm1, QWORD PTR .LC73[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC355[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1395:
	movsd	xmm1, QWORD PTR .LC6[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC355[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1394:
	movsd	xmm0, QWORD PTR .LC354[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC355[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1393:
	movsd	xmm1, QWORD PTR .LC287[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC301[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1392:
	movsd	xmm1, QWORD PTR .LC287[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC288[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1391:
	movsd	xmm1, QWORD PTR .LC287[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC302[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1390:
	movsd	xmm1, QWORD PTR .LC287[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1389:
	movsd	xmm1, QWORD PTR .LC287[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC302[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1388:
	movsd	xmm1, QWORD PTR .LC287[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC288[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1387:
	movsd	xmm1, QWORD PTR .LC287[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC301[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1386:
	movsd	xmm2, QWORD PTR .LC287[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC287[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1385:
	movsd	xmm1, QWORD PTR .LC301[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC287[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1384:
	movsd	xmm1, QWORD PTR .LC288[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC287[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1383:
	movsd	xmm1, QWORD PTR .LC302[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC287[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1382:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC287[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1381:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC302[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC287[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1380:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC288[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC287[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1379:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC301[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC287[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1378:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC287[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC287[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1377:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC287[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC301[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1376:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC287[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC288[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1375:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC287[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC302[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1374:
	movsd	xmm2, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC287[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1373:
	movsd	xmm1, QWORD PTR .LC302[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC287[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1372:
	movsd	xmm1, QWORD PTR .LC288[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC287[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1371:
	movsd	xmm1, QWORD PTR .LC301[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC287[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1370:
	movsd	xmm1, QWORD PTR .LC287[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC287[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1369:
	movsd	xmm1, QWORD PTR .LC98[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC286[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1368:
	movsd	xmm1, QWORD PTR .LC98[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC285[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1367:
	movsd	xmm1, QWORD PTR .LC98[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC288[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1366:
	movsd	xmm1, QWORD PTR .LC98[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1365:
	movsd	xmm1, QWORD PTR .LC98[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC288[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1364:
	movsd	xmm1, QWORD PTR .LC98[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC285[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1363:
	movsd	xmm1, QWORD PTR .LC98[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC286[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1362:
	movsd	xmm2, QWORD PTR .LC98[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1361:
	movsd	xmm1, QWORD PTR .LC286[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1360:
	movsd	xmm1, QWORD PTR .LC285[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1359:
	movsd	xmm1, QWORD PTR .LC288[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1358:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1357:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC288[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1356:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC285[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1355:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC286[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1354:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1353:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC286[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1352:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC285[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1351:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC288[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1350:
	movsd	xmm2, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1349:
	movsd	xmm1, QWORD PTR .LC288[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1348:
	movsd	xmm1, QWORD PTR .LC285[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1347:
	movsd	xmm1, QWORD PTR .LC286[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1346:
	movsd	xmm1, QWORD PTR .LC98[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1345:
	movsd	xmm0, QWORD PTR .LC354[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC129[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1344:
	movsd	xmm0, QWORD PTR .LC354[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1343:
	movsd	xmm0, QWORD PTR .LC354[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC285[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1342:
	movsd	xmm0, QWORD PTR .LC354[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1341:
	movsd	xmm0, QWORD PTR .LC354[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC285[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1340:
	movsd	xmm0, QWORD PTR .LC354[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1339:
	movsd	xmm0, QWORD PTR .LC354[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC129[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1338:
	movsd	xmm0, QWORD PTR .LC354[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC356[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1337:
	movsd	xmm1, QWORD PTR .LC129[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC356[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1336:
	movsd	xmm1, QWORD PTR .LC98[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC356[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1335:
	movsd	xmm1, QWORD PTR .LC285[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC356[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1334:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC356[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1333:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC285[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC356[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1332:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC356[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1331:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC129[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC356[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1330:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC355[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC356[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1329:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC355[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC129[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1328:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC355[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1327:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC355[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC285[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1326:
	movsd	xmm2, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC355[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1325:
	movsd	xmm1, QWORD PTR .LC285[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC355[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1324:
	movsd	xmm1, QWORD PTR .LC98[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC355[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1323:
	movsd	xmm1, QWORD PTR .LC129[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC355[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1322:
	movsd	xmm0, QWORD PTR .LC354[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC355[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1321:
	movsd	xmm1, QWORD PTR .LC291[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC298[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1320:
	movsd	xmm1, QWORD PTR .LC291[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC299[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1319:
	movsd	xmm1, QWORD PTR .LC291[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC300[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1318:
	movsd	xmm1, QWORD PTR .LC291[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1317:
	movsd	xmm1, QWORD PTR .LC291[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC300[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1316:
	movsd	xmm1, QWORD PTR .LC291[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC299[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1315:
	movsd	xmm1, QWORD PTR .LC291[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC298[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1314:
	movsd	xmm2, QWORD PTR .LC291[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC291[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1313:
	movsd	xmm1, QWORD PTR .LC298[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC291[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1312:
	movsd	xmm1, QWORD PTR .LC299[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC291[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1311:
	movsd	xmm1, QWORD PTR .LC300[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC291[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1310:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC291[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1309:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC300[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC291[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1308:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC299[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC291[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1307:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC298[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC291[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1306:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC291[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC291[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1305:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC291[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC298[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1304:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC291[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC299[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1303:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC291[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC300[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1302:
	movsd	xmm2, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC291[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1301:
	movsd	xmm1, QWORD PTR .LC300[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC291[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1300:
	movsd	xmm1, QWORD PTR .LC299[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC291[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1299:
	movsd	xmm1, QWORD PTR .LC298[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC291[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1298:
	movsd	xmm1, QWORD PTR .LC291[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC291[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1297:
	movsd	xmm1, QWORD PTR .LC295[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC163[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1296:
	movsd	xmm1, QWORD PTR .LC295[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC296[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1295:
	movsd	xmm1, QWORD PTR .LC295[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC297[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1294:
	movsd	xmm1, QWORD PTR .LC295[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1293:
	movsd	xmm1, QWORD PTR .LC295[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC297[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1292:
	movsd	xmm1, QWORD PTR .LC295[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC296[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1291:
	movsd	xmm1, QWORD PTR .LC295[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC163[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1290:
	movsd	xmm2, QWORD PTR .LC295[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC295[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1289:
	movsd	xmm1, QWORD PTR .LC163[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC295[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1288:
	movsd	xmm1, QWORD PTR .LC296[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC295[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1287:
	movsd	xmm1, QWORD PTR .LC297[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC295[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1286:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC295[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1285:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC297[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC295[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1284:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC296[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC295[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1283:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC163[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC295[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1282:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC295[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC295[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1281:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC295[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC163[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1280:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC295[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC296[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1279:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC295[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC297[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1278:
	movsd	xmm2, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC295[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1277:
	movsd	xmm1, QWORD PTR .LC297[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC295[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1276:
	movsd	xmm1, QWORD PTR .LC296[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC295[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1275:
	movsd	xmm1, QWORD PTR .LC163[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC295[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1274:
	movsd	xmm1, QWORD PTR .LC295[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC295[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1273:
	movsd	xmm0, QWORD PTR .LC354[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1272:
	movsd	xmm0, QWORD PTR .LC354[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC295[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1271:
	movsd	xmm0, QWORD PTR .LC354[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC296[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1270:
	movsd	xmm0, QWORD PTR .LC354[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1269:
	movsd	xmm0, QWORD PTR .LC354[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC296[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1268:
	movsd	xmm0, QWORD PTR .LC354[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC295[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1267:
	movsd	xmm0, QWORD PTR .LC354[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1266:
	movsd	xmm0, QWORD PTR .LC354[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC356[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1265:
	movsd	xmm1, QWORD PTR .LC294[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC356[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1264:
	movsd	xmm1, QWORD PTR .LC295[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC356[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1263:
	movsd	xmm1, QWORD PTR .LC296[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC356[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1262:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC356[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1261:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC296[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC356[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1260:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC295[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC356[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1259:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC356[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1258:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC355[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC356[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1257:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC355[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC294[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1256:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC355[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC295[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1255:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC355[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC296[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1254:
	movsd	xmm2, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC355[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1253:
	movsd	xmm1, QWORD PTR .LC296[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC355[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1252:
	movsd	xmm1, QWORD PTR .LC295[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC355[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1251:
	movsd	xmm1, QWORD PTR .LC294[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC355[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1250:
	movsd	xmm0, QWORD PTR .LC354[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC355[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1249:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1248:
	movsd	xmm1, QWORD PTR .LC293[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC293[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC293[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1247:
	movsd	xmm1, QWORD PTR .LC292[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC292[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC292[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1246:
	movsd	xmm1, QWORD PTR .LC291[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC291[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC291[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1245:
	movsd	xmm1, QWORD PTR .LC290[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC290[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC290[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1244:
	movsd	xmm1, QWORD PTR .LC151[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC151[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC151[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1243:
	movsd	xmm1, QWORD PTR .LC135[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC135[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC135[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1242:
	movsd	xmm1, QWORD PTR .LC289[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC289[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1241:
	movsd	xmm1, QWORD PTR .LC288[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC288[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC288[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1240:
	movsd	xmm1, QWORD PTR .LC287[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC287[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC287[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1239:
	movsd	xmm1, QWORD PTR .LC286[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC286[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC286[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1238:
	movsd	xmm1, QWORD PTR .LC98[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC98[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1237:
	movsd	xmm1, QWORD PTR .LC86[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC86[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC86[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1236:
	movsd	xmm2, QWORD PTR .LC73[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 24[rsp], xmm5
	movsd	QWORD PTR 16[rsp], xmm4
	movapd	xmm1, xmm2
	movsd	QWORD PTR 8[rsp], xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm2, QWORD PTR 8[rsp]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm2, QWORD PTR 8[rsp]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 16[rsp]
	movsd	xmm5, QWORD PTR 24[rsp]
	jmp	.L1474
.L1235:
	movsd	xmm1, QWORD PTR .LC121[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC121[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC121[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1234:
	movsd	xmm0, QWORD PTR .LC354[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC355[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC356[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1233:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1232:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC285[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1231:
	movsd	xmm2, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC285[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1230:
	movsd	xmm1, QWORD PTR .LC259[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC285[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC285[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1229:
	movsd	xmm1, QWORD PTR .LC285[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1228:
	movsd	xmm2, QWORD PTR .LC285[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC285[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1227:
	movsd	xmm1, QWORD PTR .LC285[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC285[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1226:
	movsd	xmm1, QWORD PTR .LC285[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC285[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC285[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1225:
	movsd	xmm1, QWORD PTR .LC284[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1224:
	movsd	xmm1, QWORD PTR .LC284[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC285[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC356[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1223:
	movsd	xmm2, QWORD PTR .LC284[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	movapd	xmm1, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC355[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1222:
	movsd	xmm1, QWORD PTR .LC284[rip]
	mov	rdi, rbp
	movsd	xmm0, QWORD PTR .LC354[rip]
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC355[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC356[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1221:
	movsd	xmm0, QWORD PTR .LC354[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1220:
	movsd	xmm0, QWORD PTR .LC354[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC355[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC356[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1219:
	movsd	xmm0, QWORD PTR .LC354[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC355[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC284[rip]
	movsd	xmm0, QWORD PTR .LC356[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1218:
	movsd	xmm0, QWORD PTR .LC354[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC355[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC356[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	movsd	xmm5, QWORD PTR 16[rsp]
	jmp	.L1474
.L1213:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 2631720
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1212:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 65382
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1211:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 6750054
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1210:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 65331
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1209:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 3407667
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1208:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 3407616
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1207:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 16760832
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1206:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 16756736
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1205:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 2961729
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1204:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 2962753
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1203:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 2964801
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1202:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 2965825
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1201:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 2965821
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1200:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 2965813
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1199:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 2965809
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1198:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 2965805
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1197:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 3227949
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1196:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 3490093
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1195:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 4014381
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1194:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 4276525
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1193:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 4275501
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1192:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 4273453
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1191:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 4272429
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1190:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 4271405
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1189:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 4271409
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1188:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 4271413
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1187:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 4271421
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1186:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 4271425
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1185:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 4009281
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1184:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 3484993
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1183:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 3222849
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1182:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 2960705
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1181:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 2107457
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1180:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 2109761
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1179:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 2111809
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1178:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 2113857
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1177:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 2113849
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1176:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 2113841
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1175:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 2113832
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1174:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 2113824
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1173:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 2638112
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1172:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 3227936
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1171:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 3752224
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1170:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 4276512
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1169:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 4274464
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1168:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 4272416
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1167:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 4270112
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1166:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 4268064
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1165:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 4268072
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1164:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 4268081
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L1163:
	cvtsd2si	rax, QWORD PTR 393288[rbp]
	pxor	xmm0, xmm0
	sal	rax, 24
	add	rax, 4268089
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR BD_COLOR$[rip], xmm0
	jmp	.L956
.L3354:
	mov	esi, 10
	lea	rdi, .LC1847[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3353:
	mov	esi, 5
	lea	rdi, .LC1846[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3352:
	mov	esi, 8
	lea	rdi, .LC1845[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3351:
	mov	esi, 15
	lea	rdi, .LC1844[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3350:
	mov	esi, 5
	lea	rdi, .LC1843[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3349:
	mov	esi, 4
	lea	rdi, .LC1842[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3348:
	mov	esi, 4
	lea	rdi, .LC1841[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3347:
	mov	esi, 6
	lea	rdi, .LC1840[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3346:
	mov	esi, 5
	lea	rdi, .LC1839[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3345:
	mov	esi, 5
	lea	rdi, .LC1838[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3344:
	mov	esi, 5
	lea	rdi, .LC1837[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3343:
	mov	esi, 13
	lea	rdi, .LC1836[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3342:
	mov	esi, 4
	lea	rdi, .LC1835[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3341:
	mov	esi, 4
	lea	rdi, .LC1834[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3340:
	mov	esi, 5
	lea	rdi, .LC1833[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3339:
	mov	esi, 16
	lea	rdi, .LC1832[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3338:
	mov	esi, 11
	lea	rdi, .LC1831[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3337:
	mov	esi, 4
	lea	rdi, .LC1830[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3336:
	mov	esi, 7
	lea	rdi, .LC1829[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3335:
	mov	esi, 4
	lea	rdi, .LC1828[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3334:
	mov	esi, 4
	lea	rdi, .LC1827[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3333:
	mov	esi, 1
	lea	rdi, .LC250[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3332:
	mov	esi, 11
	lea	rdi, .LC1826[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3331:
	mov	esi, 4
	lea	rdi, .LC1825[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3330:
	mov	esi, 7
	lea	rdi, .LC1824[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3329:
	mov	esi, 7
	lea	rdi, .LC1823[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3328:
	mov	esi, 8
	lea	rdi, .LC1822[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3327:
	mov	esi, 4
	lea	rdi, .LC1821[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3326:
	mov	esi, 10
	lea	rdi, .LC1820[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3325:
	mov	esi, 7
	lea	rdi, .LC1819[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3324:
	mov	esi, 7
	lea	rdi, .LC1818[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3323:
	mov	esi, 4
	lea	rdi, .LC1817[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3322:
	mov	esi, 14
	lea	rdi, .LC1816[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3321:
	mov	esi, 7
	lea	rdi, .LC1815[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3320:
	mov	esi, 6
	lea	rdi, .LC1814[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3319:
	mov	esi, 4
	lea	rdi, .LC1813[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3318:
	mov	esi, 4
	lea	rdi, .LC1812[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3317:
	mov	esi, 4
	lea	rdi, .LC1811[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3316:
	mov	esi, 4
	lea	rdi, .LC1810[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3315:
	mov	esi, 6
	lea	rdi, .LC1809[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3314:
	mov	esi, 12
	lea	rdi, .LC1808[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3313:
	mov	esi, 7
	lea	rdi, .LC1807[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3312:
	mov	esi, 6
	lea	rdi, .LC1806[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3311:
	mov	esi, 8
	lea	rdi, .LC1805[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3310:
	mov	esi, 7
	lea	rdi, .LC1804[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3309:
	mov	esi, 3
	lea	rdi, .LC1803[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3308:
	mov	esi, 6
	lea	rdi, .LC1802[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3307:
	mov	esi, 5
	lea	rdi, .LC1801[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3306:
	mov	esi, 3
	lea	rdi, .LC1800[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3305:
	mov	esi, 1
	lea	rdi, .LC249[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3304:
	mov	esi, 10
	lea	rdi, .LC1799[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3303:
	mov	esi, 10
	lea	rdi, .LC1798[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3302:
	mov	esi, 10
	lea	rdi, .LC1797[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3301:
	mov	esi, 5
	lea	rdi, .LC1796[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3300:
	mov	esi, 5
	lea	rdi, .LC1795[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3299:
	mov	esi, 5
	lea	rdi, .LC1794[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3298:
	mov	esi, 5
	lea	rdi, .LC1793[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3297:
	mov	esi, 5
	lea	rdi, .LC1792[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3296:
	mov	esi, 4
	lea	rdi, .LC1791[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3295:
	mov	esi, 7
	lea	rdi, .LC1790[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3294:
	mov	esi, 3
	lea	rdi, .LC1789[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3293:
	mov	esi, 5
	lea	rdi, .LC1788[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3292:
	mov	esi, 4
	lea	rdi, .LC1787[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3291:
	mov	esi, 9
	lea	rdi, .LC1786[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3290:
	mov	esi, 10
	lea	rdi, .LC1785[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3289:
	mov	esi, 9
	lea	rdi, .LC1784[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3288:
	mov	esi, 9
	lea	rdi, .LC1783[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3287:
	mov	esi, 3
	lea	rdi, .LC1782[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3286:
	mov	esi, 12
	lea	rdi, .LC1781[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3285:
	mov	esi, 20
	lea	rdi, .LC1780[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3284:
	mov	esi, 10
	lea	rdi, .LC1779[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3283:
	mov	esi, 14
	lea	rdi, .LC1778[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3282:
	mov	esi, 15
	lea	rdi, .LC1777[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3281:
	mov	esi, 10
	lea	rdi, .LC1776[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3280:
	mov	esi, 15
	lea	rdi, .LC1775[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3279:
	mov	esi, 10
	lea	rdi, .LC1774[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3278:
	mov	esi, 5
	lea	rdi, .LC1773[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3277:
	mov	esi, 8
	lea	rdi, .LC1772[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3276:
	mov	esi, 5
	lea	rdi, .LC1771[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3275:
	mov	esi, 4
	lea	rdi, .LC1770[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3274:
	mov	esi, 6
	lea	rdi, .LC1769[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3273:
	mov	esi, 2
	lea	rdi, .LC1768[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3272:
	mov	esi, 5
	lea	rdi, .LC1767[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3271:
	mov	esi, 8
	lea	rdi, .LC1766[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3270:
	mov	esi, 8
	lea	rdi, .LC1765[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3269:
	mov	esi, 6
	lea	rdi, .LC1764[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3268:
	mov	esi, 7
	lea	rdi, .LC1763[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3267:
	mov	esi, 4
	lea	rdi, .LC1762[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3266:
	mov	esi, 5
	lea	rdi, .LC1761[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3265:
	mov	esi, 7
	lea	rdi, .LC1760[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3264:
	mov	esi, 5
	lea	rdi, .LC1759[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3263:
	mov	esi, 16
	lea	rdi, .LC1758[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3262:
	mov	esi, 4
	lea	rdi, .LC1757[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3261:
	mov	esi, 10
	lea	rdi, .LC1756[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3260:
	mov	esi, 12
	lea	rdi, .LC1755[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3259:
	mov	esi, 8
	lea	rdi, .LC1754[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3258:
	mov	esi, 13
	lea	rdi, .LC1753[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3257:
	mov	esi, 8
	lea	rdi, .LC1752[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3256:
	mov	esi, 13
	lea	rdi, .LC1751[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3255:
	mov	esi, 8
	lea	rdi, .LC1750[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3254:
	mov	esi, 1
	lea	rdi, .LC248[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3253:
	mov	esi, 7
	lea	rdi, .LC1749[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3252:
	mov	esi, 4
	lea	rdi, .LC1748[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3251:
	mov	esi, 10
	lea	rdi, .LC1747[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3250:
	mov	esi, 10
	lea	rdi, .LC1746[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3249:
	mov	esi, 3
	lea	rdi, .LC1745[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3248:
	mov	esi, 3
	lea	rdi, .LC1744[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3247:
	mov	esi, 5
	lea	rdi, .LC1743[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3246:
	mov	esi, 4
	lea	rdi, .LC1742[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3245:
	mov	esi, 4
	lea	rdi, .LC1741[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3244:
	mov	esi, 5
	lea	rdi, .LC1740[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3243:
	mov	esi, 7
	lea	rdi, .LC1739[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3242:
	mov	esi, 6
	lea	rdi, .LC1738[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3241:
	mov	esi, 4
	lea	rdi, .LC1737[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3240:
	mov	esi, 13
	lea	rdi, .LC1736[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3239:
	mov	esi, 8
	lea	rdi, .LC1735[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3238:
	mov	esi, 9
	lea	rdi, .LC1734[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3237:
	mov	esi, 11
	lea	rdi, .LC1733[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3236:
	mov	esi, 8
	lea	rdi, .LC1732[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3235:
	mov	esi, 11
	lea	rdi, .LC1731[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3234:
	mov	esi, 9
	lea	rdi, .LC1730[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3233:
	mov	esi, 10
	lea	rdi, .LC1729[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3232:
	mov	esi, 10
	lea	rdi, .LC1728[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3231:
	mov	esi, 9
	lea	rdi, .LC1727[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3230:
	mov	esi, 8
	lea	rdi, .LC1726[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3229:
	mov	esi, 5
	lea	rdi, .LC1725[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3228:
	mov	esi, 5
	lea	rdi, .LC1724[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3227:
	mov	esi, 8
	lea	rdi, .LC1723[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3226:
	mov	esi, 3
	lea	rdi, .LC1722[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3225:
	mov	esi, 9
	lea	rdi, .LC1721[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3224:
	mov	esi, 2
	lea	rdi, .LC1720[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3223:
	mov	esi, 5
	lea	rdi, .LC1719[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3222:
	mov	esi, 8
	lea	rdi, .LC1718[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3221:
	mov	esi, 9
	lea	rdi, .LC1717[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3220:
	mov	esi, 5
	lea	rdi, .LC1716[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3219:
	mov	esi, 5
	lea	rdi, .LC1715[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3218:
	mov	esi, 4
	lea	rdi, .LC1714[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3217:
	mov	esi, 4
	lea	rdi, .LC1714[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3216:
	mov	esi, 5
	lea	rdi, .LC1713[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3215:
	mov	esi, 5
	lea	rdi, .LC1712[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3214:
	mov	esi, 9
	lea	rdi, .LC1711[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3213:
	mov	esi, 4
	lea	rdi, .LC1710[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3212:
	mov	esi, 4
	lea	rdi, .LC1709[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3211:
	mov	esi, 7
	lea	rdi, .LC1708[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3210:
	mov	esi, 9
	lea	rdi, .LC1707[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3209:
	mov	esi, 9
	lea	rdi, .LC1706[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3208:
	mov	esi, 4
	lea	rdi, .LC1705[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3207:
	mov	esi, 9
	lea	rdi, .LC1704[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3206:
	mov	esi, 4
	lea	rdi, .LC1703[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3205:
	mov	esi, 4
	lea	rdi, .LC1702[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3204:
	mov	esi, 3
	lea	rdi, .LC1701[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3200:
	movsd	xmm0, QWORD PTR 394888[rbp]
	movsd	QWORD PTR 24[rsp], xmm1
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	nearbyint@PLT
	movsd	xmm1, QWORD PTR 24[rsp]
	movsd	xmm4, QWORD PTR 8[rsp]
	lea	rdi, tmp$2492.6[rip]
	cvttsd2si	rax, xmm0
	movsd	xmm5, QWORD PTR 16[rsp]
	comisd	xmm0, xmm1
	jb	.L3202
	subsd	xmm0, xmm1
	cvttsd2si	rax, xmm0
	xor	rax, r12
.L3202:
	cmp	rax, 161
	ja	.L649
	jmp	[QWORD PTR [rdi+rax*8]]
.L2698:
	movsd	xmm0, QWORD PTR 394888[rbp]
	movsd	QWORD PTR 8[rsp], xmm1
	call	nearbyint@PLT
	movsd	xmm1, QWORD PTR 8[rsp]
	cvttsd2si	rax, xmm0
	comisd	xmm0, xmm1
	jb	.L2700
	subsd	xmm0, xmm1
	cvttsd2si	rax, xmm0
	btc	rax, 63
.L2700:
	test	rax, rax
	je	.L2701
	cmp	rax, 1
	je	.L4460
	cmp	rax, 2
	je	.L4461
	cmp	rax, 3
	je	.L4462
	cmp	rax, 4
	je	.L4463
	cmp	rax, 5
	je	.L4464
	cmp	rax, 6
	je	.L4465
	cmp	rax, 7
	je	.L4466
	cmp	rax, 8
	je	.L4467
	cmp	rax, 9
	je	.L4468
	cmp	rax, 10
	je	.L4469
	cmp	rax, 11
	je	.L4470
	cmp	rax, 12
	je	.L4471
	cmp	rax, 13
	je	.L4472
	cmp	rax, 14
	je	.L4473
	cmp	rax, 15
	je	.L4474
	cmp	rax, 16
	je	.L4475
	cmp	rax, 17
	je	.L4476
	cmp	rax, 18
	je	.L4477
	cmp	rax, 19
	je	.L4478
	cmp	rax, 20
	je	.L4479
	cmp	rax, 21
	je	.L4480
	cmp	rax, 22
	je	.L4481
	cmp	rax, 23
	je	.L4482
	cmp	rax, 24
	je	.L4483
	cmp	rax, 25
	je	.L4484
	cmp	rax, 26
	je	.L4485
	cmp	rax, 27
	je	.L4486
	cmp	rax, 28
	je	.L4487
	cmp	rax, 29
	je	.L4488
	cmp	rax, 30
	je	.L4489
	cmp	rax, 31
	je	.L4490
	cmp	rax, 32
	je	.L4491
	cmp	rax, 33
	je	.L4492
	cmp	rax, 34
	je	.L4493
	cmp	rax, 35
	je	.L4494
	cmp	rax, 36
	je	.L4495
	cmp	rax, 37
	je	.L4496
	cmp	rax, 38
	je	.L4497
	cmp	rax, 39
	je	.L4498
	cmp	rax, 40
	je	.L4499
	cmp	rax, 41
	je	.L4500
	cmp	rax, 42
	je	.L4501
	cmp	rax, 43
	je	.L4502
	cmp	rax, 44
	je	.L4503
	cmp	rax, 45
	je	.L4504
	cmp	rax, 46
	je	.L4505
	cmp	rax, 47
	je	.L4506
	cmp	rax, 48
	je	.L4507
	cmp	rax, 49
	je	.L4508
	cmp	rax, 50
	je	.L4509
	cmp	rax, 51
	je	.L4510
	cmp	rax, 52
	je	.L4511
	cmp	rax, 53
	je	.L4512
	cmp	rax, 54
	je	.L4513
	cmp	rax, 55
	je	.L4514
	cmp	rax, 56
	je	.L4515
	cmp	rax, 57
	je	.L4516
	cmp	rax, 58
	je	.L4517
	cmp	rax, 59
	je	.L4518
	cmp	rax, 60
	je	.L4519
	cmp	rax, 61
	je	.L4520
	cmp	rax, 62
	je	.L4521
	lea	rdx, -63[rax]
	cmp	rdx, 1
	jbe	.L4522
	cmp	rax, 65
	je	.L2829
	cmp	rax, 66
	je	.L4523
	cmp	rax, 67
	je	.L4524
	cmp	rax, 68
	je	.L4525
	cmp	rax, 69
	je	.L4526
	cmp	rax, 70
	je	.L4527
	cmp	rax, 71
	je	.L4528
	cmp	rax, 72
	je	.L4529
	cmp	rax, 73
	je	.L4530
	cmp	rax, 74
	je	.L4531
	cmp	rax, 75
	je	.L4532
	cmp	rax, 76
	je	.L4533
	cmp	rax, 77
	je	.L4534
	cmp	rax, 78
	je	.L4535
	cmp	rax, 79
	je	.L4536
	cmp	rax, 80
	je	.L4537
	cmp	rax, 81
	je	.L4538
	cmp	rax, 82
	je	.L4539
	cmp	rax, 83
	je	.L4540
	cmp	rax, 84
	je	.L4541
	cmp	rax, 95
	je	.L4542
	cmp	rax, 86
	je	.L4543
	cmp	rax, 87
	je	.L4544
	cmp	rax, 88
	je	.L4545
	cmp	rax, 89
	je	.L4546
	cmp	rax, 90
	je	.L4547
	cmp	rax, 91
	je	.L4548
	cmp	rax, 92
	je	.L4549
	cmp	rax, 93
	je	.L4550
	cmp	rax, 94
	je	.L4551
	cmp	rax, 96
	je	.L4552
	cmp	rax, 97
	je	.L4553
	cmp	rax, 98
	je	.L4554
	cmp	rax, 99
	je	.L4555
	cmp	rax, 100
	je	.L4556
	cmp	rax, 101
	je	.L4557
	cmp	rax, 102
	je	.L4558
	cmp	rax, 103
	je	.L4559
	cmp	rax, 104
	je	.L4560
	cmp	rax, 105
	je	.L4561
	cmp	rax, 106
	je	.L2912
	cmp	rax, 107
	je	.L4562
	cmp	rax, 108
	je	.L4563
	cmp	rax, 109
	je	.L4564
	cmp	rax, 110
	je	.L4565
	cmp	rax, 111
	je	.L2912
	cmp	rax, 112
	je	.L2920
	cmp	rax, 113
	je	.L4566
	cmp	rax, 114
	je	.L4567
	cmp	rax, 115
	je	.L4568
	cmp	rax, 116
	je	.L4569
	cmp	rax, 117
	je	.L4570
	cmp	rax, 118
	je	.L4571
	cmp	rax, 119
	je	.L4572
	cmp	rax, 120
	je	.L4573
	cmp	rax, 121
	je	.L4574
	cmp	rax, 122
	je	.L4575
	cmp	rax, 123
	je	.L4576
	cmp	rax, 124
	je	.L4577
	cmp	rax, 125
	je	.L4578
	cmp	rax, 126
	je	.L4579
	cmp	rax, 127
	je	.L4580
	cmp	rax, 128
	je	.L4581
	cmp	rax, 129
	je	.L4582
	cmp	rax, 130
	je	.L4583
	cmp	rax, 131
	je	.L4584
	cmp	rax, 132
	je	.L4585
	cmp	rax, 133
	je	.L4586
	cmp	rax, 134
	je	.L4587
	cmp	rax, 135
	je	.L4588
	cmp	rax, 136
	je	.L4589
	cmp	rax, 137
	je	.L4590
	cmp	rax, 138
	je	.L4591
	cmp	rax, 139
	je	.L4592
	cmp	rax, 140
	je	.L4593
	cmp	rax, 141
	je	.L4594
	cmp	rax, 142
	je	.L4595
	cmp	rax, 143
	je	.L4596
	cmp	rax, 144
	je	.L4597
	cmp	rax, 145
	je	.L4598
	cmp	rax, 146
	je	.L4599
	cmp	rax, 147
	je	.L4600
	cmp	rax, 148
	je	.L4601
	cmp	rax, 149
	je	.L4602
	cmp	rax, 150
	je	.L4603
	cmp	rax, 151
	je	.L4604
	cmp	rax, 152
	je	.L4605
	cmp	rax, 153
	je	.L4606
	cmp	rax, 154
	je	.L4607
	cmp	rax, 155
	je	.L4608
	cmp	rax, 156
	je	.L4609
	cmp	rax, 157
	je	.L4610
	cmp	rax, 158
	je	.L4611
	cmp	rax, 159
	je	.L4612
	cmp	rax, 160
	je	.L4613
	cmp	rax, 161
	je	.L4614
	cmp	rax, 162
	je	.L4615
	cmp	rax, 163
	je	.L4616
	cmp	rax, 164
	je	.L4617
	cmp	rax, 165
	je	.L4618
	cmp	rax, 166
	je	.L4619
	lea	rdx, -167[rax]
	cmp	rdx, 1
	jbe	.L4620
	cmp	rax, 169
	je	.L3032
	cmp	rax, 170
	je	.L4621
	cmp	rax, 171
	je	.L4622
	cmp	rax, 172
	je	.L4623
	cmp	rax, 173
	je	.L4624
	cmp	rax, 174
	je	.L4625
	cmp	rax, 175
	je	.L4626
	cmp	rax, 176
	je	.L4627
	cmp	rax, 177
	je	.L4628
	cmp	rax, 178
	je	.L4629
	cmp	rax, 179
	je	.L4630
	cmp	rax, 180
	je	.L4631
	cmp	rax, 181
	je	.L4632
	cmp	rax, 182
	je	.L4633
	cmp	rax, 183
	je	.L4634
	cmp	rax, 184
	je	.L4635
	cmp	rax, 185
	je	.L4636
	cmp	rax, 186
	je	.L4637
	cmp	rax, 187
	je	.L4638
	cmp	rax, 188
	je	.L4639
	cmp	rax, 189
	je	.L4640
	cmp	rax, 190
	je	.L4641
	cmp	rax, 191
	je	.L4642
	cmp	rax, 192
	je	.L4643
	cmp	rax, 193
	je	.L4644
	cmp	rax, 194
	je	.L4645
	cmp	rax, 195
	je	.L4646
	cmp	rax, 196
	je	.L4647
	cmp	rax, 197
	je	.L4648
	cmp	rax, 198
	je	.L4649
	cmp	rax, 199
	je	.L4650
	cmp	rax, 200
	je	.L4651
	cmp	rax, 201
	je	.L4652
	cmp	rax, 202
	je	.L4653
	lea	rdx, -203[rax]
	cmp	rdx, 1
	jbe	.L4654
	cmp	rax, 205
	je	.L3102
	cmp	rax, 206
	je	.L4655
	cmp	rax, 207
	je	.L4656
	lea	rdx, -208[rax]
	cmp	rdx, 1
	jbe	.L4657
	cmp	rax, 210
	je	.L3110
	cmp	rax, 211
	je	.L4658
	cmp	rax, 212
	je	.L4659
	cmp	rax, 213
	je	.L4660
	cmp	rax, 214
	je	.L4661
	cmp	rax, 215
	je	.L4662
	cmp	rax, 216
	je	.L4663
	cmp	rax, 217
	je	.L4664
	cmp	rax, 218
	je	.L4665
	cmp	rax, 219
	je	.L4666
	cmp	rax, 220
	je	.L4667
	cmp	rax, 221
	je	.L4668
	cmp	rax, 222
	je	.L4669
	cmp	rax, 223
	je	.L4670
	cmp	rax, 224
	je	.L4671
	cmp	rax, 225
	je	.L4672
	cmp	rax, 226
	je	.L4673
	cmp	rax, 227
	je	.L4674
	cmp	rax, 228
	je	.L4675
	cmp	rax, 229
	je	.L4676
	cmp	rax, 230
	je	.L4677
	cmp	rax, 231
	je	.L4678
	cmp	rax, 232
	je	.L4679
	cmp	rax, 233
	je	.L4680
	cmp	rax, 234
	je	.L4681
	cmp	rax, 235
	je	.L4682
	cmp	rax, 236
	je	.L4683
	cmp	rax, 237
	je	.L4684
	cmp	rax, 238
	je	.L4685
	cmp	rax, 239
	je	.L4686
	cmp	rax, 240
	je	.L4687
	cmp	rax, 241
	je	.L4688
	cmp	rax, 242
	je	.L4689
	cmp	rax, 243
	je	.L4690
	cmp	rax, 244
	je	.L4691
	cmp	rax, 245
	je	.L4692
	cmp	rax, 246
	je	.L4693
	cmp	rax, 247
	je	.L4694
	cmp	rax, 248
	je	.L4695
	cmp	rax, 249
	je	.L4696
	cmp	rax, 250
	je	.L4697
	cmp	rax, 251
	je	.L4698
	cmp	rax, 252
	je	.L4699
	cmp	rax, 253
	je	.L4700
	cmp	rax, 254
	je	.L4701
	cmp	rax, 255
	jne	.L649
.L3199:
	mov	esi, 11
	lea	rdi, .LC1700[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2697:
	mov	esi, 4
	lea	rdi, .LC1452[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2696:
	mov	esi, 9
	lea	rdi, .LC1451[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2695:
	mov	esi, 5
	lea	rdi, .LC1450[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2694:
	mov	esi, 7
	lea	rdi, .LC1449[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2693:
	mov	esi, 6
	lea	rdi, .LC1448[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2692:
	mov	esi, 9
	lea	rdi, .LC1447[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2691:
	mov	esi, 7
	lea	rdi, .LC1446[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2690:
	mov	esi, 6
	lea	rdi, .LC1445[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2689:
	mov	esi, 1
	lea	rdi, .LC245[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2688:
	mov	esi, 6
	lea	rdi, .LC1444[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2687:
	mov	esi, 5
	lea	rdi, .LC1443[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2686:
	mov	esi, 7
	lea	rdi, .LC1442[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2685:
	mov	esi, 12
	lea	rdi, .LC1441[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2684:
	mov	esi, 11
	lea	rdi, .LC1440[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2683:
	mov	esi, 5
	lea	rdi, .LC1439[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2682:
	mov	esi, 10
	lea	rdi, .LC1438[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2681:
	mov	esi, 7
	lea	rdi, .LC1437[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2680:
	mov	esi, 7
	lea	rdi, .LC1436[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2679:
	mov	esi, 16
	lea	rdi, .LC1435[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2678:
	mov	esi, 1
	lea	rdi, .LC244[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2677:
	mov	esi, 3
	lea	rdi, .LC1434[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2676:
	mov	esi, 3
	lea	rdi, .LC1433[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2675:
	mov	esi, 5
	lea	rdi, .LC1432[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2674:
	mov	esi, 9
	lea	rdi, .LC1431[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2673:
	mov	esi, 6
	lea	rdi, .LC1430[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2672:
	mov	esi, 5
	lea	rdi, .LC1429[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2671:
	mov	esi, 7
	lea	rdi, .LC1428[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2670:
	mov	esi, 4
	lea	rdi, .LC1427[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2669:
	mov	esi, 9
	lea	rdi, .LC1426[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2668:
	mov	esi, 8
	lea	rdi, .LC1425[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2667:
	mov	esi, 17
	lea	rdi, .LC1424[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2666:
	mov	esi, 10
	lea	rdi, .LC1423[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2665:
	mov	esi, 7
	lea	rdi, .LC1422[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2664:
	mov	esi, 4
	lea	rdi, .LC1421[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2663:
	mov	esi, 10
	lea	rdi, .LC1420[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2662:
	mov	esi, 7
	lea	rdi, .LC1419[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2661:
	mov	esi, 10
	lea	rdi, .LC1418[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2660:
	mov	esi, 17
	lea	rdi, .LC1417[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2659:
	mov	esi, 9
	lea	rdi, .LC1416[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2658:
	mov	esi, 7
	lea	rdi, .LC1415[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2657:
	mov	esi, 5
	lea	rdi, .LC1414[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2656:
	mov	esi, 8
	lea	rdi, .LC1413[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2655:
	mov	esi, 6
	lea	rdi, .LC1412[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2654:
	mov	esi, 5
	lea	rdi, .LC1411[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2653:
	mov	esi, 14
	lea	rdi, .LC1410[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2652:
	mov	esi, 12
	lea	rdi, .LC1409[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2651:
	mov	esi, 6
	lea	rdi, .LC1408[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2650:
	mov	esi, 10
	lea	rdi, .LC1407[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2649:
	mov	esi, 9
	lea	rdi, .LC1406[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2648:
	mov	esi, 3
	lea	rdi, .LC1405[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2647:
	mov	esi, 3
	lea	rdi, .LC1404[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2646:
	mov	esi, 3
	lea	rdi, .LC1403[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2645:
	mov	esi, 8
	lea	rdi, .LC1402[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2644:
	mov	esi, 11
	lea	rdi, .LC1401[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2643:
	mov	esi, 10
	lea	rdi, .LC1400[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2642:
	mov	esi, 8
	lea	rdi, .LC1399[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2641:
	mov	esi, 3
	lea	rdi, .LC1398[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2640:
	mov	esi, 9
	lea	rdi, .LC1397[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2639:
	mov	esi, 7
	lea	rdi, .LC1396[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2638:
	mov	esi, 4
	lea	rdi, .LC1395[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2637:
	mov	esi, 4
	lea	rdi, .LC1394[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2636:
	mov	esi, 7
	lea	rdi, .LC1393[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2635:
	mov	esi, 16
	lea	rdi, .LC1392[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2634:
	mov	esi, 17
	lea	rdi, .LC1391[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2633:
	mov	esi, 14
	lea	rdi, .LC1390[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2632:
	mov	esi, 8
	lea	rdi, .LC1389[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2631:
	mov	esi, 5
	lea	rdi, .LC1388[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2630:
	mov	esi, 6
	lea	rdi, .LC1387[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2629:
	mov	esi, 3
	lea	rdi, .LC1386[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2628:
	mov	esi, 4
	lea	rdi, .LC1385[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2627:
	mov	esi, 4
	lea	rdi, .LC1384[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2626:
	mov	esi, 4
	lea	rdi, .LC1383[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2625:
	mov	esi, 5
	lea	rdi, .LC1382[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2624:
	mov	esi, 6
	lea	rdi, .LC1381[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2623:
	mov	esi, 15
	lea	rdi, .LC1380[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2622:
	mov	esi, 11
	lea	rdi, .LC1379[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2621:
	mov	esi, 7
	lea	rdi, .LC1378[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2620:
	mov	esi, 7
	lea	rdi, .LC1377[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2619:
	mov	esi, 3
	lea	rdi, .LC1376[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2618:
	mov	esi, 2
	lea	rdi, .LC1375[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2617:
	mov	esi, 7
	lea	rdi, .LC1374[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2616:
	mov	esi, 10
	lea	rdi, .LC1373[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2615:
	mov	esi, 5
	lea	rdi, .LC1372[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2614:
	mov	esi, 5
	lea	rdi, .LC1371[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2613:
	mov	esi, 2
	lea	rdi, .LC1370[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2612:
	mov	esi, 3
	lea	rdi, .LC1369[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2611:
	mov	esi, 2
	lea	rdi, .LC1368[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2610:
	mov	esi, 11
	lea	rdi, .LC1367[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2609:
	mov	esi, 7
	lea	rdi, .LC1366[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2608:
	mov	esi, 3
	lea	rdi, .LC1365[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2607:
	mov	esi, 4
	lea	rdi, .LC1364[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2606:
	mov	esi, 5
	lea	rdi, .LC1363[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2605:
	mov	esi, 5
	lea	rdi, .LC1362[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2604:
	mov	esi, 7
	lea	rdi, .LC1361[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2603:
	mov	esi, 8
	lea	rdi, .LC1360[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2602:
	mov	esi, 12
	lea	rdi, .LC1359[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2601:
	mov	esi, 4
	lea	rdi, .LC1358[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2600:
	mov	esi, 6
	lea	rdi, .LC1357[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2599:
	mov	esi, 9
	lea	rdi, .LC1356[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2598:
	mov	esi, 10
	lea	rdi, .LC1355[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2597:
	mov	esi, 9
	lea	rdi, .LC1354[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2596:
	mov	esi, 8
	lea	rdi, .LC1353[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2595:
	mov	esi, 9
	lea	rdi, .LC1352[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2594:
	mov	esi, 7
	lea	rdi, .LC1351[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2593:
	mov	esi, 5
	lea	rdi, .LC1350[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2592:
	mov	esi, 12
	lea	rdi, .LC1349[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2591:
	mov	esi, 4
	lea	rdi, .LC1348[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2590:
	mov	esi, 7
	lea	rdi, .LC1347[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2589:
	mov	esi, 14
	lea	rdi, .LC1346[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2588:
	mov	esi, 6
	lea	rdi, .LC1345[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2587:
	mov	esi, 1
	lea	rdi, .LC243[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2586:
	mov	esi, 8
	lea	rdi, .LC1344[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2585:
	mov	esi, 8
	lea	rdi, .LC1343[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2584:
	mov	esi, 8
	lea	rdi, .LC1342[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2583:
	mov	esi, 6
	lea	rdi, .LC1341[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2582:
	mov	esi, 5
	lea	rdi, .LC1340[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2581:
	mov	esi, 3
	lea	rdi, .LC1339[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2580:
	mov	esi, 5
	lea	rdi, .LC1338[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2579:
	mov	esi, 12
	lea	rdi, .LC1337[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2578:
	mov	esi, 11
	lea	rdi, .LC1336[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2577:
	mov	esi, 6
	lea	rdi, .LC1335[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2576:
	mov	esi, 12
	lea	rdi, .LC1334[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2575:
	mov	esi, 10
	lea	rdi, .LC1333[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2574:
	mov	esi, 7
	lea	rdi, .LC1332[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2573:
	mov	esi, 5
	lea	rdi, .LC1331[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2572:
	mov	esi, 7
	lea	rdi, .LC1330[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2571:
	mov	esi, 2
	lea	rdi, .LC1329[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2570:
	mov	esi, 7
	lea	rdi, .LC1328[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2569:
	mov	esi, 8
	lea	rdi, .LC1327[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2568:
	mov	esi, 6
	lea	rdi, .LC1326[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2567:
	mov	esi, 8
	lea	rdi, .LC1325[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2566:
	mov	esi, 4
	lea	rdi, .LC1324[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2565:
	mov	esi, 5
	lea	rdi, .LC1323[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2564:
	mov	esi, 4
	lea	rdi, .LC1322[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2563:
	mov	esi, 2
	lea	rdi, .LC1321[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2562:
	mov	esi, 7
	lea	rdi, .LC1320[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2561:
	mov	esi, 7
	lea	rdi, .LC1319[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2560:
	mov	esi, 5
	lea	rdi, .LC1318[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2559:
	mov	esi, 10
	lea	rdi, .LC1317[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2558:
	mov	esi, 6
	lea	rdi, .LC1316[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2557:
	mov	esi, 3
	lea	rdi, .LC1315[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2556:
	mov	esi, 2
	lea	rdi, .LC1314[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2555:
	mov	esi, 12
	lea	rdi, .LC1313[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2554:
	mov	esi, 7
	lea	rdi, .LC1312[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2553:
	mov	esi, 3
	lea	rdi, .LC1311[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2552:
	mov	esi, 6
	lea	rdi, .LC1310[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2551:
	mov	esi, 15
	lea	rdi, .LC1309[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2550:
	mov	esi, 6
	lea	rdi, .LC1308[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2549:
	mov	esi, 1
	lea	rdi, .LC242[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2548:
	mov	esi, 14
	lea	rdi, .LC1307[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2547:
	mov	esi, 7
	lea	rdi, .LC1306[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2546:
	mov	esi, 15
	lea	rdi, .LC1305[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2545:
	mov	esi, 6
	lea	rdi, .LC1304[rip]
	call	fb_StrAllocTempDescZEx@PLT
	mov	edx, 1
	mov	edi, 1
	add	rsp, 280
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2544:
	mov	esi, 5
	lea	rdi, .LC1303[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2543:
	mov	esi, 4
	lea	rdi, .LC1302[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2542:
	mov	esi, 5
	lea	rdi, .LC1301[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2541:
	mov	esi, 3
	lea	rdi, .LC1300[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2540:
	mov	esi, 12
	lea	rdi, .LC1299[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2539:
	mov	esi, 9
	lea	rdi, .LC1298[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2538:
	mov	esi, 14
	lea	rdi, .LC1297[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2537:
	mov	esi, 10
	lea	rdi, .LC1296[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2536:
	mov	esi, 9
	lea	rdi, .LC1295[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2535:
	mov	esi, 14
	lea	rdi, .LC1294[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2534:
	mov	esi, 6
	lea	rdi, .LC1293[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2533:
	mov	esi, 13
	lea	rdi, .LC1292[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2532:
	mov	esi, 13
	lea	rdi, .LC1291[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2531:
	mov	esi, 8
	lea	rdi, .LC1290[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2530:
	mov	esi, 4
	lea	rdi, .LC1289[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2529:
	mov	esi, 15
	lea	rdi, .LC1288[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2528:
	mov	esi, 5
	lea	rdi, .LC1287[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2527:
	mov	esi, 8
	lea	rdi, .LC1286[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2526:
	mov	esi, 8
	lea	rdi, .LC1285[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2525:
	mov	esi, 13
	lea	rdi, .LC1284[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2524:
	mov	esi, 2
	lea	rdi, .LC1283[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2523:
	mov	esi, 3
	lea	rdi, .LC1282[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2522:
	mov	esi, 4
	lea	rdi, .LC1281[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2521:
	mov	esi, 3
	lea	rdi, .LC1280[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2520:
	mov	esi, 11
	lea	rdi, .LC1279[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2519:
	mov	esi, 8
	lea	rdi, .LC1278[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2518:
	mov	esi, 13
	lea	rdi, .LC1277[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2517:
	mov	esi, 4
	lea	rdi, .LC1276[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2516:
	mov	esi, 5
	lea	rdi, .LC1275[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2515:
	mov	esi, 14
	lea	rdi, .LC1274[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2514:
	mov	esi, 7
	lea	rdi, .LC1273[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2513:
	mov	esi, 13
	lea	rdi, .LC1272[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2512:
	mov	esi, 6
	lea	rdi, .LC1271[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2511:
	mov	esi, 8
	lea	rdi, .LC1270[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2510:
	mov	esi, 4
	lea	rdi, .LC1269[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2509:
	mov	esi, 1
	lea	rdi, .LC241[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2508:
	mov	esi, 8
	lea	rdi, .LC1268[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2507:
	mov	esi, 8
	lea	rdi, .LC1267[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2506:
	mov	esi, 7
	lea	rdi, .LC1266[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2505:
	mov	esi, 6
	lea	rdi, .LC1265[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2504:
	mov	esi, 6
	lea	rdi, .LC1264[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2503:
	mov	esi, 6
	lea	rdi, .LC1263[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2502:
	mov	esi, 4
	lea	rdi, .LC1262[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2501:
	mov	esi, 4
	lea	rdi, .LC1261[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2500:
	mov	esi, 5
	lea	rdi, .LC1260[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2499:
	mov	esi, 6
	lea	rdi, .LC1259[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2498:
	mov	esi, 11
	lea	rdi, .LC1258[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2497:
	mov	esi, 5
	lea	rdi, .LC1257[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2496:
	mov	esi, 7
	lea	rdi, .LC1256[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2495:
	mov	esi, 4
	lea	rdi, .LC1255[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2494:
	mov	esi, 3
	lea	rdi, .LC1254[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2493:
	mov	esi, 7
	lea	rdi, .LC1253[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2492:
	mov	esi, 8
	lea	rdi, .LC1252[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2491:
	mov	esi, 5
	lea	rdi, .LC1251[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2490:
	mov	esi, 4
	lea	rdi, .LC1250[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2489:
	mov	esi, 3
	lea	rdi, .LC1249[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2488:
	mov	esi, 3
	lea	rdi, .LC1248[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2487:
	mov	esi, 5
	lea	rdi, .LC1247[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2486:
	mov	esi, 3
	lea	rdi, .LC1246[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2485:
	mov	esi, 6
	lea	rdi, .LC1245[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2484:
	mov	esi, 13
	lea	rdi, .LC1244[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2483:
	mov	esi, 11
	lea	rdi, .LC1243[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2482:
	mov	esi, 3
	lea	rdi, .LC1242[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2481:
	mov	esi, 3
	lea	rdi, .LC1241[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2480:
	mov	esi, 10
	lea	rdi, .LC1240[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2479:
	mov	esi, 6
	lea	rdi, .LC1239[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2478:
	mov	esi, 9
	lea	rdi, .LC1238[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2477:
	mov	esi, 6
	lea	rdi, .LC1237[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2476:
	mov	esi, 8
	lea	rdi, .LC1236[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2475:
	mov	esi, 9
	lea	rdi, .LC1235[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2474:
	mov	esi, 9
	lea	rdi, .LC1234[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2473:
	mov	esi, 7
	lea	rdi, .LC1233[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2472:
	mov	esi, 5
	lea	rdi, .LC1232[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2471:
	mov	esi, 4
	lea	rdi, .LC1231[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2470:
	mov	esi, 5
	lea	rdi, .LC1230[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2469:
	mov	esi, 11
	lea	rdi, .LC1229[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2468:
	mov	esi, 6
	lea	rdi, .LC1228[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2467:
	mov	esi, 7
	lea	rdi, .LC1227[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2466:
	mov	esi, 17
	lea	rdi, .LC1226[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2465:
	mov	esi, 17
	lea	rdi, .LC1225[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2464:
	mov	esi, 5
	lea	rdi, .LC1224[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2463:
	mov	esi, 3
	lea	rdi, .LC1223[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2462:
	mov	esi, 15
	lea	rdi, .LC1222[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2461:
	mov	esi, 9
	lea	rdi, .LC1221[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2460:
	mov	esi, 10
	lea	rdi, .LC1220[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2459:
	mov	esi, 13
	lea	rdi, .LC1219[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2458:
	mov	esi, 17
	lea	rdi, .LC1218[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2457:
	mov	esi, 12
	lea	rdi, .LC1217[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2456:
	mov	esi, 10
	lea	rdi, .LC1216[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2455:
	mov	esi, 3
	lea	rdi, .LC1215[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2454:
	mov	esi, 6
	lea	rdi, .LC1214[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2453:
	mov	esi, 12
	lea	rdi, .LC1213[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2452:
	mov	esi, 8
	lea	rdi, .LC1212[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2451:
	mov	esi, 6
	lea	rdi, .LC1211[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2450:
	mov	esi, 6
	lea	rdi, .LC1210[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2449:
	mov	esi, 6
	lea	rdi, .LC1209[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2448:
	mov	esi, 4
	lea	rdi, .LC1208[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2447:
	mov	esi, 6
	lea	rdi, .LC1207[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2446:
	mov	esi, 6
	lea	rdi, .LC1206[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2445:
	mov	esi, 6
	lea	rdi, .LC1205[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2444:
	mov	esi, 4
	lea	rdi, .LC1204[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2443:
	mov	esi, 6
	lea	rdi, .LC1203[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2442:
	mov	esi, 6
	lea	rdi, .LC1202[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2438:
	movsd	xmm0, QWORD PTR 394888[rbp]
	movsd	QWORD PTR 24[rsp], xmm1
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	nearbyint@PLT
	movsd	xmm1, QWORD PTR 24[rsp]
	movsd	xmm4, QWORD PTR 8[rsp]
	lea	rsi, tmp$2491.7[rip]
	cvttsd2si	rax, xmm0
	movsd	xmm5, QWORD PTR 16[rsp]
	comisd	xmm0, xmm1
	jb	.L2440
	subsd	xmm0, xmm1
	cvttsd2si	rax, xmm0
	xor	rax, r12
.L2440:
	cmp	rax, 255
	ja	.L649
	mov	rax, QWORD PTR [rsi+rax*8]
	jmp	rax
.L2437:
	mov	esi, 6
	lea	rdi, .LC1201[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2436:
	mov	esi, 4
	lea	rdi, .LC1200[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2435:
	mov	esi, 6
	lea	rdi, .LC1199[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2434:
	mov	esi, 8
	lea	rdi, .LC1198[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2433:
	mov	esi, 3
	lea	rdi, .LC1197[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2432:
	mov	esi, 6
	lea	rdi, .LC1196[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2431:
	mov	esi, 12
	lea	rdi, .LC1195[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2430:
	mov	esi, 9
	lea	rdi, .LC1194[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2429:
	mov	esi, 10
	lea	rdi, .LC1193[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2428:
	mov	esi, 4
	lea	rdi, .LC1192[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2427:
	mov	esi, 6
	lea	rdi, .LC1191[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2426:
	mov	esi, 5
	lea	rdi, .LC1190[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2425:
	mov	esi, 6
	lea	rdi, .LC1189[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2424:
	mov	esi, 10
	lea	rdi, .LC1188[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2423:
	mov	esi, 6
	lea	rdi, .LC1187[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2422:
	mov	esi, 1
	lea	rdi, .LC240[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2421:
	mov	esi, 9
	lea	rdi, .LC1186[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2420:
	mov	esi, 4
	lea	rdi, .LC1185[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2419:
	mov	esi, 6
	lea	rdi, .LC1184[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2418:
	mov	esi, 4
	lea	rdi, .LC1183[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2417:
	mov	esi, 4
	lea	rdi, .LC1182[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2416:
	mov	esi, 10
	lea	rdi, .LC1181[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2415:
	mov	esi, 9
	lea	rdi, .LC1180[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2414:
	mov	esi, 4
	lea	rdi, .LC1179[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2413:
	mov	esi, 16
	lea	rdi, .LC1178[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2412:
	mov	esi, 8
	lea	rdi, .LC1177[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2411:
	mov	esi, 5
	lea	rdi, .LC1176[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2410:
	mov	esi, 4
	lea	rdi, .LC1175[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2409:
	mov	esi, 10
	lea	rdi, .LC1174[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2408:
	mov	esi, 7
	lea	rdi, .LC1173[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2407:
	mov	esi, 4
	lea	rdi, .LC1172[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2406:
	mov	esi, 7
	lea	rdi, .LC1171[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2405:
	mov	esi, 4
	lea	rdi, .LC1170[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2404:
	mov	esi, 4
	lea	rdi, .LC1169[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2403:
	mov	esi, 5
	lea	rdi, .LC1168[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2402:
	mov	esi, 3
	lea	rdi, .LC1167[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2401:
	mov	esi, 3
	lea	rdi, .LC1166[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2400:
	mov	esi, 4
	lea	rdi, .LC1165[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2399:
	mov	esi, 8
	lea	rdi, .LC1164[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2398:
	mov	esi, 6
	lea	rdi, .LC1163[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2397:
	mov	esi, 13
	lea	rdi, .LC1162[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2396:
	mov	esi, 5
	lea	rdi, .LC1161[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2395:
	mov	esi, 3
	lea	rdi, .LC1160[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2394:
	mov	esi, 9
	lea	rdi, .LC1159[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2393:
	mov	esi, 4
	lea	rdi, .LC1158[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2392:
	mov	esi, 2
	lea	rdi, .LC1157[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2391:
	mov	esi, 5
	lea	rdi, .LC1156[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2390:
	mov	esi, 4
	lea	rdi, .LC1155[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2389:
	mov	esi, 7
	lea	rdi, .LC1154[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2388:
	mov	esi, 5
	lea	rdi, .LC1153[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2387:
	mov	esi, 12
	lea	rdi, .LC1152[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2386:
	mov	esi, 12
	lea	rdi, .LC1151[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2385:
	mov	esi, 10
	lea	rdi, .LC1150[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2384:
	mov	esi, 13
	lea	rdi, .LC1149[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2383:
	mov	esi, 4
	lea	rdi, .LC1148[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2382:
	mov	esi, 14
	lea	rdi, .LC1147[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2381:
	mov	esi, 6
	lea	rdi, .LC1146[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2380:
	mov	esi, 6
	lea	rdi, .LC1145[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2379:
	mov	esi, 5
	lea	rdi, .LC1144[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2378:
	mov	esi, 4
	lea	rdi, .LC1143[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2377:
	mov	esi, 12
	lea	rdi, .LC1142[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2376:
	mov	esi, 11
	lea	rdi, .LC1141[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2375:
	mov	esi, 8
	lea	rdi, .LC1140[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2374:
	mov	esi, 3
	lea	rdi, .LC1139[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2373:
	mov	esi, 6
	lea	rdi, .LC1138[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2372:
	mov	esi, 4
	lea	rdi, .LC1137[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2371:
	mov	esi, 7
	lea	rdi, .LC1136[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2370:
	mov	esi, 6
	lea	rdi, .LC1135[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2369:
	mov	esi, 3
	lea	rdi, .LC1134[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2368:
	mov	esi, 4
	lea	rdi, .LC1133[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2367:
	mov	esi, 4
	lea	rdi, .LC1133[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2366:
	mov	esi, 5
	lea	rdi, .LC1132[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2365:
	mov	esi, 7
	lea	rdi, .LC1131[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2364:
	mov	esi, 5
	lea	rdi, .LC1130[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2363:
	mov	esi, 6
	lea	rdi, .LC1129[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2362:
	mov	esi, 5
	lea	rdi, .LC1128[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2361:
	mov	esi, 4
	lea	rdi, .LC1127[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2360:
	mov	esi, 6
	lea	rdi, .LC1126[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2359:
	mov	esi, 5
	lea	rdi, .LC1125[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2358:
	mov	esi, 1
	lea	rdi, .LC239[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2357:
	mov	esi, 4
	lea	rdi, .LC1124[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2356:
	mov	esi, 3
	lea	rdi, .LC1123[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2355:
	mov	esi, 5
	lea	rdi, .LC1122[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2354:
	mov	esi, 1
	lea	rdi, .LC238[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2353:
	mov	esi, 9
	lea	rdi, .LC1121[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2352:
	mov	esi, 4
	lea	rdi, .LC1120[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2351:
	mov	esi, 13
	lea	rdi, .LC1119[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2350:
	mov	esi, 5
	lea	rdi, .LC1118[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2349:
	mov	esi, 4
	lea	rdi, .LC1117[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2348:
	mov	esi, 4
	lea	rdi, .LC1116[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2347:
	mov	esi, 6
	lea	rdi, .LC1115[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2346:
	mov	esi, 1
	lea	rdi, .LC237[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2345:
	mov	esi, 5
	lea	rdi, .LC1114[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2344:
	mov	esi, 5
	lea	rdi, .LC1113[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2343:
	mov	esi, 5
	lea	rdi, .LC1112[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2342:
	mov	esi, 10
	lea	rdi, .LC1111[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2341:
	mov	esi, 5
	lea	rdi, .LC1110[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2340:
	mov	esi, 6
	lea	rdi, .LC1109[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2339:
	mov	esi, 7
	lea	rdi, .LC1108[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2338:
	mov	esi, 9
	lea	rdi, .LC1107[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2337:
	mov	esi, 10
	lea	rdi, .LC1106[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2336:
	mov	esi, 5
	lea	rdi, .LC1105[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2335:
	mov	esi, 5
	lea	rdi, .LC1104[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2334:
	mov	esi, 8
	lea	rdi, .LC1103[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2333:
	mov	esi, 10
	lea	rdi, .LC1102[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2332:
	mov	esi, 11
	lea	rdi, .LC1101[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2331:
	mov	esi, 12
	lea	rdi, .LC1100[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2330:
	mov	esi, 14
	lea	rdi, .LC1099[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2329:
	mov	esi, 11
	lea	rdi, .LC1098[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2328:
	mov	esi, 10
	lea	rdi, .LC1097[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2327:
	mov	esi, 14
	lea	rdi, .LC1096[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2326:
	mov	esi, 15
	lea	rdi, .LC1095[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2325:
	mov	esi, 10
	lea	rdi, .LC1094[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2324:
	mov	esi, 15
	lea	rdi, .LC1093[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2323:
	mov	esi, 10
	lea	rdi, .LC1092[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2322:
	mov	esi, 2
	lea	rdi, .LC1091[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2321:
	mov	esi, 15
	lea	rdi, .LC1090[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2320:
	mov	esi, 4
	lea	rdi, .LC1089[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2319:
	mov	esi, 11
	lea	rdi, .LC403[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2318:
	mov	esi, 12
	lea	rdi, .LC1088[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2317:
	mov	esi, 3
	lea	rdi, .LC1087[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2316:
	mov	esi, 5
	lea	rdi, .LC1086[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2315:
	mov	esi, 11
	lea	rdi, .LC1085[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2314:
	mov	esi, 3
	lea	rdi, .LC1084[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2313:
	mov	esi, 6
	lea	rdi, .LC1083[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2312:
	mov	esi, 10
	lea	rdi, .LC1082[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2311:
	mov	esi, 7
	lea	rdi, .LC1081[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2310:
	mov	esi, 9
	lea	rdi, .LC1080[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2309:
	mov	esi, 7
	lea	rdi, .LC1079[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2308:
	mov	esi, 9
	lea	rdi, .LC1078[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2307:
	mov	esi, 4
	lea	rdi, .LC1077[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2306:
	mov	esi, 9
	lea	rdi, .LC1076[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2305:
	mov	esi, 8
	lea	rdi, .LC1075[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2304:
	mov	esi, 12
	lea	rdi, .LC1074[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2303:
	mov	esi, 9
	lea	rdi, .LC1073[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2302:
	mov	esi, 11
	lea	rdi, .LC1072[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2301:
	mov	esi, 8
	lea	rdi, .LC1071[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2300:
	mov	esi, 16
	lea	rdi, .LC1070[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2299:
	mov	esi, 8
	lea	rdi, .LC1069[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2298:
	mov	esi, 9
	lea	rdi, .LC1068[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2297:
	mov	esi, 7
	lea	rdi, .LC1067[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2296:
	mov	esi, 3
	lea	rdi, .LC1066[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2295:
	mov	esi, 5
	lea	rdi, .LC1065[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2294:
	mov	esi, 12
	lea	rdi, .LC1064[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2293:
	mov	esi, 7
	lea	rdi, .LC1063[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2292:
	mov	esi, 13
	lea	rdi, .LC1062[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2291:
	mov	esi, 6
	lea	rdi, .LC1061[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2290:
	mov	esi, 6
	lea	rdi, .LC1060[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2289:
	mov	esi, 7
	lea	rdi, .LC1059[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2288:
	mov	esi, 12
	lea	rdi, .LC1058[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2287:
	mov	esi, 5
	lea	rdi, .LC1057[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2286:
	mov	esi, 3
	lea	rdi, .LC1056[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2285:
	mov	esi, 5
	lea	rdi, .LC1055[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2284:
	mov	esi, 5
	lea	rdi, .LC1054[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2283:
	mov	esi, 9
	lea	rdi, .LC1053[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2282:
	mov	esi, 14
	lea	rdi, .LC1052[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2281:
	mov	esi, 6
	lea	rdi, .LC1051[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2280:
	mov	esi, 5
	lea	rdi, .LC1050[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2279:
	mov	esi, 8
	lea	rdi, .LC1049[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2278:
	mov	esi, 10
	lea	rdi, .LC1048[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2277:
	mov	esi, 14
	lea	rdi, .LC1047[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2276:
	mov	esi, 13
	lea	rdi, .LC1046[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2275:
	mov	esi, 13
	lea	rdi, .LC1045[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2274:
	mov	esi, 7
	lea	rdi, .LC1044[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2273:
	mov	esi, 8
	lea	rdi, .LC1043[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2272:
	mov	esi, 9
	lea	rdi, .LC1042[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2271:
	mov	esi, 8
	lea	rdi, .LC1041[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2270:
	mov	esi, 7
	lea	rdi, .LC1040[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2269:
	mov	esi, 5
	lea	rdi, .LC1039[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2268:
	mov	esi, 7
	lea	rdi, .LC1038[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2267:
	mov	esi, 2
	lea	rdi, .LC1037[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2266:
	mov	esi, 6
	lea	rdi, .LC1036[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2265:
	mov	esi, 14
	lea	rdi, .LC1035[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2264:
	mov	esi, 3
	lea	rdi, .LC1034[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2263:
	mov	esi, 6
	lea	rdi, .LC1033[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2262:
	mov	esi, 11
	lea	rdi, .LC1032[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2261:
	mov	esi, 13
	lea	rdi, .LC1031[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2260:
	mov	esi, 9
	lea	rdi, .LC1030[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2259:
	mov	esi, 12
	lea	rdi, .LC1029[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2258:
	mov	esi, 9
	lea	rdi, .LC1028[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2257:
	mov	esi, 11
	lea	rdi, .LC1027[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2256:
	mov	esi, 7
	lea	rdi, .LC1026[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2255:
	mov	esi, 13
	lea	rdi, .LC1025[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2254:
	mov	esi, 18
	lea	rdi, .LC1024[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2253:
	mov	esi, 12
	lea	rdi, .LC1023[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2252:
	mov	esi, 7
	lea	rdi, .LC1022[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2251:
	mov	esi, 13
	lea	rdi, .LC1021[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2250:
	mov	esi, 18
	lea	rdi, .LC1020[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2249:
	mov	esi, 12
	lea	rdi, .LC1019[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2248:
	mov	esi, 7
	lea	rdi, .LC1018[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2247:
	mov	esi, 5
	lea	rdi, .LC1017[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2246:
	mov	esi, 10
	lea	rdi, .LC1016[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2245:
	mov	esi, 12
	lea	rdi, .LC1015[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2244:
	mov	esi, 8
	lea	rdi, .LC1014[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2243:
	mov	esi, 13
	lea	rdi, .LC1013[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2242:
	mov	esi, 8
	lea	rdi, .LC1012[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2241:
	mov	esi, 13
	lea	rdi, .LC1011[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2240:
	mov	esi, 8
	lea	rdi, .LC1010[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2239:
	mov	esi, 11
	lea	rdi, .LC401[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2238:
	mov	esi, 10
	lea	rdi, .LC1009[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2237:
	mov	esi, 6
	lea	rdi, .LC1008[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2236:
	mov	esi, 6
	lea	rdi, .LC1007[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2235:
	mov	esi, 3
	lea	rdi, .LC1006[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2234:
	mov	esi, 6
	lea	rdi, .LC1005[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2233:
	mov	esi, 5
	lea	rdi, .LC1004[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2232:
	mov	esi, 2
	lea	rdi, .LC1003[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2231:
	mov	esi, 14
	lea	rdi, .LC1002[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2230:
	mov	esi, 5
	lea	rdi, .LC1001[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2229:
	mov	esi, 2
	lea	rdi, .LC1000[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2228:
	mov	esi, 5
	lea	rdi, .LC999[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2227:
	mov	esi, 12
	lea	rdi, .LC998[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2226:
	mov	esi, 18
	lea	rdi, .LC997[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2225:
	mov	esi, 9
	lea	rdi, .LC996[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2224:
	mov	esi, 9
	lea	rdi, .LC995[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2223:
	mov	esi, 9
	lea	rdi, .LC994[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2222:
	mov	esi, 9
	lea	rdi, .LC400[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2221:
	mov	esi, 1
	lea	rdi, .LC236[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2220:
	mov	esi, 5
	lea	rdi, .LC993[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2219:
	mov	esi, 12
	lea	rdi, .LC992[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2218:
	mov	esi, 5
	lea	rdi, .LC991[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2217:
	mov	esi, 5
	lea	rdi, .LC990[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2216:
	mov	esi, 5
	lea	rdi, .LC989[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2215:
	mov	esi, 4
	lea	rdi, .LC988[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2214:
	mov	esi, 6
	lea	rdi, .LC987[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2213:
	mov	esi, 7
	lea	rdi, .LC986[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2212:
	mov	esi, 9
	lea	rdi, .LC985[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2211:
	mov	esi, 10
	lea	rdi, .LC984[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2210:
	mov	esi, 7
	lea	rdi, .LC983[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2209:
	mov	esi, 11
	lea	rdi, .LC982[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2208:
	mov	esi, 11
	lea	rdi, .LC981[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2207:
	mov	esi, 10
	lea	rdi, .LC980[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2206:
	mov	esi, 5
	lea	rdi, .LC979[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2205:
	mov	esi, 9
	lea	rdi, .LC978[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2204:
	mov	esi, 10
	lea	rdi, .LC977[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2203:
	mov	esi, 7
	lea	rdi, .LC976[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2202:
	mov	esi, 3
	lea	rdi, .LC975[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2201:
	mov	esi, 17
	lea	rdi, .LC974[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2200:
	mov	esi, 12
	lea	rdi, .LC973[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2199:
	mov	esi, 7
	lea	rdi, .LC972[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2198:
	mov	esi, 6
	lea	rdi, .LC971[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2197:
	mov	esi, 6
	lea	rdi, .LC970[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2196:
	mov	esi, 9
	lea	rdi, .LC969[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2195:
	mov	esi, 4
	lea	rdi, .LC968[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2194:
	mov	esi, 4
	lea	rdi, .LC967[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2193:
	mov	esi, 1
	lea	rdi, .LC235[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2192:
	mov	esi, 8
	lea	rdi, .LC966[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2191:
	mov	esi, 5
	lea	rdi, .LC965[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2190:
	mov	esi, 5
	lea	rdi, .LC964[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2189:
	mov	esi, 7
	lea	rdi, .LC963[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2188:
	mov	esi, 8
	lea	rdi, .LC962[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2187:
	mov	esi, 14
	lea	rdi, .LC961[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2186:
	mov	esi, 4
	lea	rdi, .LC960[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2185:
	mov	esi, 7
	lea	rdi, .LC959[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2184:
	mov	esi, 8
	lea	rdi, .LC958[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2183:
	mov	esi, 4
	lea	rdi, .LC957[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2182:
	mov	esi, 5
	lea	rdi, .LC956[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2178:
	movsd	xmm0, QWORD PTR 394888[rbp]
	movsd	QWORD PTR 24[rsp], xmm1
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	nearbyint@PLT
	movsd	xmm1, QWORD PTR 24[rsp]
	movsd	xmm4, QWORD PTR 8[rsp]
	lea	rcx, tmp$2490.8[rip]
	cvttsd2si	rax, xmm0
	movsd	xmm5, QWORD PTR 16[rsp]
	comisd	xmm0, xmm1
	jb	.L2180
	subsd	xmm0, xmm1
	cvttsd2si	rax, xmm0
	xor	rax, r12
.L2180:
	cmp	rax, 255
	ja	.L649
	jmp	[QWORD PTR [rcx+rax*8]]
.L2177:
	mov	esi, 9
	lea	rdi, .LC955[rip]
	xor	ebx, ebx
	call	fb_StrAllocTempDescZEx@PLT
	xor	esi, esi
	mov	rdi, rax
	call	fb_StrLcase2@PLT
	mov	ecx, 6
	or	r8, -1
	lea	r9, 208[rsp]
	mov	r10, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	edx, 11
	rep stosd
	lea	rsi, .LC932[rip]
	mov	rcx, r10
	mov	rdi, r9
	call	fb_StrConcat@PLT
	mov	ecx, 6
	or	rdx, -1
	lea	r9, 240[rsp]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	r8d, 2
	rep stosd
	mov	rdi, r9
	lea	rcx, .LC933[rip]
	call	fb_StrConcat@PLT
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString@PLT
	jmp	.L649
.L2176:
	mov	esi, 12
	lea	rdi, .LC954[rip]
	xor	ebx, ebx
	call	fb_StrAllocTempDescZEx@PLT
	xor	esi, esi
	mov	rdi, rax
	call	fb_StrLcase2@PLT
	mov	ecx, 6
	or	r8, -1
	lea	r9, 208[rsp]
	mov	r10, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	edx, 11
	rep stosd
	lea	rsi, .LC932[rip]
	mov	rcx, r10
	mov	rdi, r9
	call	fb_StrConcat@PLT
	mov	ecx, 6
	or	rdx, -1
	lea	r9, 240[rsp]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	r8d, 2
	rep stosd
	mov	rdi, r9
	lea	rcx, .LC933[rip]
	call	fb_StrConcat@PLT
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString@PLT
	jmp	.L649
.L2175:
	mov	esi, 12
	lea	rdi, .LC953[rip]
	xor	ebx, ebx
	call	fb_StrAllocTempDescZEx@PLT
	xor	esi, esi
	mov	rdi, rax
	call	fb_StrLcase2@PLT
	mov	ecx, 6
	or	r8, -1
	lea	r9, 208[rsp]
	mov	r10, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	edx, 11
	rep stosd
	lea	rsi, .LC932[rip]
	mov	rcx, r10
	mov	rdi, r9
	call	fb_StrConcat@PLT
	mov	ecx, 6
	or	rdx, -1
	lea	r9, 240[rsp]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	r8d, 2
	rep stosd
	mov	rdi, r9
	lea	rcx, .LC933[rip]
	call	fb_StrConcat@PLT
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString@PLT
	jmp	.L649
.L2174:
	mov	esi, 10
	lea	rdi, .LC952[rip]
	xor	ebx, ebx
	call	fb_StrAllocTempDescZEx@PLT
	xor	esi, esi
	mov	rdi, rax
	call	fb_StrLcase2@PLT
	mov	ecx, 6
	or	r8, -1
	lea	r9, 208[rsp]
	mov	r10, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	edx, 11
	rep stosd
	lea	rsi, .LC932[rip]
	mov	rcx, r10
	mov	rdi, r9
	call	fb_StrConcat@PLT
	mov	ecx, 6
	or	rdx, -1
	lea	r9, 240[rsp]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	r8d, 2
	rep stosd
	mov	rdi, r9
	lea	rcx, .LC933[rip]
	call	fb_StrConcat@PLT
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString@PLT
	jmp	.L649
.L2173:
	mov	esi, 11
	lea	rdi, .LC951[rip]
	xor	ebx, ebx
	call	fb_StrAllocTempDescZEx@PLT
	xor	esi, esi
	mov	rdi, rax
	call	fb_StrLcase2@PLT
	mov	ecx, 6
	or	r8, -1
	lea	r9, 208[rsp]
	mov	r10, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	edx, 11
	rep stosd
	lea	rsi, .LC932[rip]
	mov	rcx, r10
	mov	rdi, r9
	call	fb_StrConcat@PLT
	mov	ecx, 6
	or	rdx, -1
	lea	r9, 240[rsp]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	r8d, 2
	rep stosd
	mov	rdi, r9
	lea	rcx, .LC933[rip]
	call	fb_StrConcat@PLT
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString@PLT
	jmp	.L649
.L2172:
	mov	esi, 11
	lea	rdi, .LC950[rip]
	xor	ebx, ebx
	call	fb_StrAllocTempDescZEx@PLT
	xor	esi, esi
	mov	rdi, rax
	call	fb_StrLcase2@PLT
	mov	ecx, 6
	or	r8, -1
	lea	r9, 208[rsp]
	mov	r10, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	edx, 11
	rep stosd
	lea	rsi, .LC932[rip]
	mov	rcx, r10
	mov	rdi, r9
	call	fb_StrConcat@PLT
	mov	ecx, 6
	or	rdx, -1
	lea	r9, 240[rsp]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	r8d, 2
	rep stosd
	mov	rdi, r9
	lea	rcx, .LC933[rip]
	call	fb_StrConcat@PLT
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString@PLT
	jmp	.L649
.L2171:
	mov	esi, 12
	lea	rdi, .LC949[rip]
	xor	ebx, ebx
	call	fb_StrAllocTempDescZEx@PLT
	xor	esi, esi
	mov	rdi, rax
	call	fb_StrLcase2@PLT
	mov	ecx, 6
	or	r8, -1
	lea	r9, 208[rsp]
	mov	r10, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	edx, 11
	rep stosd
	lea	rsi, .LC932[rip]
	mov	rcx, r10
	mov	rdi, r9
	call	fb_StrConcat@PLT
	mov	ecx, 6
	or	rdx, -1
	lea	r9, 240[rsp]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	r8d, 2
	rep stosd
	mov	rdi, r9
	lea	rcx, .LC933[rip]
	call	fb_StrConcat@PLT
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString@PLT
	jmp	.L649
.L2170:
	mov	esi, 10
	lea	rdi, .LC948[rip]
	xor	ebx, ebx
	call	fb_StrAllocTempDescZEx@PLT
	xor	esi, esi
	mov	rdi, rax
	call	fb_StrLcase2@PLT
	mov	ecx, 6
	or	r8, -1
	lea	r9, 208[rsp]
	mov	r10, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	edx, 11
	rep stosd
	lea	rsi, .LC932[rip]
	mov	rcx, r10
	mov	rdi, r9
	call	fb_StrConcat@PLT
	mov	ecx, 6
	or	rdx, -1
	lea	r9, 240[rsp]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	r8d, 2
	rep stosd
	mov	rdi, r9
	lea	rcx, .LC933[rip]
	call	fb_StrConcat@PLT
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString@PLT
	jmp	.L649
.L2169:
	mov	esi, 9
	lea	rdi, .LC947[rip]
	xor	ebx, ebx
	call	fb_StrAllocTempDescZEx@PLT
	xor	esi, esi
	mov	rdi, rax
	call	fb_StrLcase2@PLT
	mov	ecx, 6
	or	r8, -1
	lea	r9, 208[rsp]
	mov	r10, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	edx, 11
	rep stosd
	lea	rsi, .LC932[rip]
	mov	rcx, r10
	mov	rdi, r9
	call	fb_StrConcat@PLT
	mov	ecx, 6
	or	rdx, -1
	lea	r9, 240[rsp]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	r8d, 2
	rep stosd
	mov	rdi, r9
	lea	rcx, .LC933[rip]
	call	fb_StrConcat@PLT
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString@PLT
	jmp	.L649
.L2168:
	mov	esi, 10
	lea	rdi, .LC946[rip]
	xor	ebx, ebx
	call	fb_StrAllocTempDescZEx@PLT
	xor	esi, esi
	mov	rdi, rax
	call	fb_StrLcase2@PLT
	mov	ecx, 6
	or	r8, -1
	lea	r9, 208[rsp]
	mov	r10, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	edx, 11
	rep stosd
	lea	rsi, .LC932[rip]
	mov	rcx, r10
	mov	rdi, r9
	call	fb_StrConcat@PLT
	mov	ecx, 6
	or	rdx, -1
	lea	r9, 240[rsp]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	r8d, 2
	rep stosd
	mov	rdi, r9
	lea	rcx, .LC933[rip]
	call	fb_StrConcat@PLT
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString@PLT
	jmp	.L649
.L2167:
	mov	esi, 9
	lea	rdi, .LC945[rip]
	xor	ebx, ebx
	call	fb_StrAllocTempDescZEx@PLT
	xor	esi, esi
	mov	rdi, rax
	call	fb_StrLcase2@PLT
	mov	ecx, 6
	or	r8, -1
	lea	r9, 208[rsp]
	mov	r10, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	edx, 11
	rep stosd
	lea	rsi, .LC932[rip]
	mov	rcx, r10
	mov	rdi, r9
	call	fb_StrConcat@PLT
	mov	ecx, 6
	or	rdx, -1
	lea	r9, 240[rsp]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	r8d, 2
	rep stosd
	mov	rdi, r9
	lea	rcx, .LC933[rip]
	call	fb_StrConcat@PLT
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString@PLT
	jmp	.L649
.L2166:
	mov	esi, 11
	lea	rdi, .LC944[rip]
	xor	ebx, ebx
	call	fb_StrAllocTempDescZEx@PLT
	xor	esi, esi
	mov	rdi, rax
	call	fb_StrLcase2@PLT
	mov	ecx, 6
	or	r8, -1
	lea	r9, 208[rsp]
	mov	r10, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	edx, 11
	rep stosd
	lea	rsi, .LC932[rip]
	mov	rcx, r10
	mov	rdi, r9
	call	fb_StrConcat@PLT
	mov	ecx, 6
	or	rdx, -1
	lea	r9, 240[rsp]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	r8d, 2
	rep stosd
	mov	rdi, r9
	lea	rcx, .LC933[rip]
	call	fb_StrConcat@PLT
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString@PLT
	jmp	.L649
.L2165:
	mov	esi, 10
	lea	rdi, .LC943[rip]
	xor	ebx, ebx
	call	fb_StrAllocTempDescZEx@PLT
	xor	esi, esi
	mov	rdi, rax
	call	fb_StrLcase2@PLT
	mov	ecx, 6
	or	r8, -1
	lea	r9, 208[rsp]
	mov	r10, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	edx, 11
	rep stosd
	lea	rsi, .LC932[rip]
	mov	rcx, r10
	mov	rdi, r9
	call	fb_StrConcat@PLT
	mov	ecx, 6
	or	rdx, -1
	lea	r9, 240[rsp]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	r8d, 2
	rep stosd
	mov	rdi, r9
	lea	rcx, .LC933[rip]
	call	fb_StrConcat@PLT
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString@PLT
	jmp	.L649
.L2164:
	mov	esi, 11
	lea	rdi, .LC942[rip]
	xor	ebx, ebx
	call	fb_StrAllocTempDescZEx@PLT
	xor	esi, esi
	mov	rdi, rax
	call	fb_StrLcase2@PLT
	mov	ecx, 6
	or	r8, -1
	lea	r9, 208[rsp]
	mov	r10, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	edx, 11
	rep stosd
	lea	rsi, .LC932[rip]
	mov	rcx, r10
	mov	rdi, r9
	call	fb_StrConcat@PLT
	mov	ecx, 6
	or	rdx, -1
	lea	r9, 240[rsp]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	r8d, 2
	rep stosd
	mov	rdi, r9
	lea	rcx, .LC933[rip]
	call	fb_StrConcat@PLT
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString@PLT
	jmp	.L649
.L2163:
	mov	esi, 11
	lea	rdi, .LC941[rip]
	xor	ebx, ebx
	call	fb_StrAllocTempDescZEx@PLT
	xor	esi, esi
	mov	rdi, rax
	call	fb_StrLcase2@PLT
	mov	ecx, 6
	or	r8, -1
	lea	r9, 208[rsp]
	mov	r10, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	edx, 11
	rep stosd
	lea	rsi, .LC932[rip]
	mov	rcx, r10
	mov	rdi, r9
	call	fb_StrConcat@PLT
	mov	ecx, 6
	or	rdx, -1
	lea	r9, 240[rsp]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	r8d, 2
	rep stosd
	mov	rdi, r9
	lea	rcx, .LC933[rip]
	call	fb_StrConcat@PLT
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString@PLT
	jmp	.L649
.L2162:
	mov	esi, 10
	lea	rdi, .LC940[rip]
	xor	ebx, ebx
	call	fb_StrAllocTempDescZEx@PLT
	xor	esi, esi
	mov	rdi, rax
	call	fb_StrLcase2@PLT
	mov	ecx, 6
	or	r8, -1
	lea	r9, 208[rsp]
	mov	r10, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	edx, 11
	rep stosd
	lea	rsi, .LC932[rip]
	mov	rcx, r10
	mov	rdi, r9
	call	fb_StrConcat@PLT
	mov	ecx, 6
	or	rdx, -1
	lea	r9, 240[rsp]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	r8d, 2
	rep stosd
	mov	rdi, r9
	lea	rcx, .LC933[rip]
	call	fb_StrConcat@PLT
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString@PLT
	jmp	.L649
.L2161:
	mov	esi, 9
	lea	rdi, .LC939[rip]
	xor	ebx, ebx
	call	fb_StrAllocTempDescZEx@PLT
	xor	esi, esi
	mov	rdi, rax
	call	fb_StrLcase2@PLT
	mov	ecx, 6
	or	r8, -1
	lea	r9, 208[rsp]
	mov	r10, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	edx, 11
	rep stosd
	lea	rsi, .LC932[rip]
	mov	rcx, r10
	mov	rdi, r9
	call	fb_StrConcat@PLT
	mov	ecx, 6
	or	rdx, -1
	lea	r9, 240[rsp]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	r8d, 2
	rep stosd
	mov	rdi, r9
	lea	rcx, .LC933[rip]
	call	fb_StrConcat@PLT
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString@PLT
	jmp	.L649
.L2160:
	mov	esi, 9
	lea	rdi, .LC938[rip]
	xor	ebx, ebx
	call	fb_StrAllocTempDescZEx@PLT
	xor	esi, esi
	mov	rdi, rax
	call	fb_StrLcase2@PLT
	mov	ecx, 6
	or	r8, -1
	lea	r9, 208[rsp]
	mov	r10, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	edx, 11
	rep stosd
	lea	rsi, .LC932[rip]
	mov	rcx, r10
	mov	rdi, r9
	call	fb_StrConcat@PLT
	mov	ecx, 6
	or	rdx, -1
	lea	r9, 240[rsp]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	r8d, 2
	rep stosd
	mov	rdi, r9
	lea	rcx, .LC933[rip]
	call	fb_StrConcat@PLT
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString@PLT
	jmp	.L649
.L2159:
	mov	esi, 10
	lea	rdi, .LC937[rip]
	xor	ebx, ebx
	call	fb_StrAllocTempDescZEx@PLT
	xor	esi, esi
	mov	rdi, rax
	call	fb_StrLcase2@PLT
	mov	ecx, 6
	or	r8, -1
	lea	r9, 208[rsp]
	mov	r10, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	edx, 11
	rep stosd
	lea	rsi, .LC932[rip]
	mov	rcx, r10
	mov	rdi, r9
	call	fb_StrConcat@PLT
	mov	ecx, 6
	or	rdx, -1
	lea	r9, 240[rsp]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	r8d, 2
	rep stosd
	mov	rdi, r9
	lea	rcx, .LC933[rip]
	call	fb_StrConcat@PLT
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString@PLT
	jmp	.L649
.L2158:
	mov	esi, 9
	lea	rdi, .LC936[rip]
	xor	ebx, ebx
	call	fb_StrAllocTempDescZEx@PLT
	xor	esi, esi
	mov	rdi, rax
	call	fb_StrLcase2@PLT
	mov	ecx, 6
	or	r8, -1
	lea	r9, 208[rsp]
	mov	r10, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	edx, 11
	rep stosd
	lea	rsi, .LC932[rip]
	mov	rcx, r10
	mov	rdi, r9
	call	fb_StrConcat@PLT
	mov	ecx, 6
	or	rdx, -1
	lea	r9, 240[rsp]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	r8d, 2
	rep stosd
	mov	rdi, r9
	lea	rcx, .LC933[rip]
	call	fb_StrConcat@PLT
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString@PLT
	jmp	.L649
.L2157:
	mov	esi, 10
	lea	rdi, .LC935[rip]
	xor	ebx, ebx
	call	fb_StrAllocTempDescZEx@PLT
	xor	esi, esi
	mov	rdi, rax
	call	fb_StrLcase2@PLT
	mov	ecx, 6
	or	r8, -1
	lea	r9, 208[rsp]
	mov	r10, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	edx, 11
	rep stosd
	lea	rsi, .LC932[rip]
	mov	rcx, r10
	mov	rdi, r9
	call	fb_StrConcat@PLT
	mov	ecx, 6
	or	rdx, -1
	lea	r9, 240[rsp]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	r8d, 2
	rep stosd
	mov	rdi, r9
	lea	rcx, .LC933[rip]
	call	fb_StrConcat@PLT
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString@PLT
	jmp	.L649
.L2156:
	mov	esi, 10
	lea	rdi, .LC934[rip]
	xor	ebx, ebx
	call	fb_StrAllocTempDescZEx@PLT
	xor	esi, esi
	mov	rdi, rax
	call	fb_StrLcase2@PLT
	mov	ecx, 6
	or	r8, -1
	lea	r9, 208[rsp]
	mov	r10, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	edx, 11
	rep stosd
	lea	rsi, .LC932[rip]
	mov	rcx, r10
	mov	rdi, r9
	call	fb_StrConcat@PLT
	mov	ecx, 6
	or	rdx, -1
	lea	r9, 240[rsp]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	r8d, 2
	rep stosd
	mov	rdi, r9
	lea	rcx, .LC933[rip]
	call	fb_StrConcat@PLT
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString@PLT
	jmp	.L649
.L2155:
	mov	esi, 9
	lea	rdi, .LC931[rip]
	xor	ebx, ebx
	call	fb_StrAllocTempDescZEx@PLT
	xor	esi, esi
	mov	rdi, rax
	call	fb_StrLcase2@PLT
	mov	ecx, 6
	or	r8, -1
	lea	r9, 208[rsp]
	mov	r10, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	edx, 11
	rep stosd
	lea	rsi, .LC932[rip]
	mov	rcx, r10
	mov	rdi, r9
	call	fb_StrConcat@PLT
	mov	ecx, 6
	or	rdx, -1
	lea	r9, 240[rsp]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	r8d, 2
	rep stosd
	mov	rdi, r9
	lea	rcx, .LC933[rip]
	call	fb_StrConcat@PLT
	mov	edx, 1
	mov	edi, 1
	mov	rsi, rax
	call	fb_PrintString@PLT
	jmp	.L649
.L2151:
	movsd	xmm0, QWORD PTR 394888[rbp]
	movsd	QWORD PTR 24[rsp], xmm1
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	nearbyint@PLT
	movsd	xmm1, QWORD PTR 24[rsp]
	movsd	xmm4, QWORD PTR 8[rsp]
	lea	rdx, tmp$2489.9[rip]
	cvttsd2si	rax, xmm0
	movsd	xmm5, QWORD PTR 16[rsp]
	comisd	xmm0, xmm1
	jb	.L2153
	subsd	xmm0, xmm1
	cvttsd2si	rax, xmm0
	xor	rax, r12
.L2153:
	cmp	rax, 22
	ja	.L649
	jmp	[QWORD PTR [rdx+rax*8]]
.L2148:
	movsd	xmm0, QWORD PTR 394896[rbp]
	movsd	QWORD PTR 8[rsp], xmm1
	call	nearbyint@PLT
	movsd	xmm1, QWORD PTR 8[rsp]
	cvttsd2si	rdi, xmm0
	comisd	xmm0, xmm1
	jb	.L2150
	subsd	xmm0, xmm1
	cvttsd2si	rdi, xmm0
	btc	rdi, 63
.L2150:
	call	fb_HEX_l@PLT
	xor	r8d, r8d
	or	rcx, -1
	or	rsi, -1
	mov	rdx, rax
	lea	rdi, MSG$[rip]
	call	fb_StrAssign@PLT
	mov	edx, 1
	mov	edi, 1
	lea	rsi, MSG$[rip]
	call	fb_PrintString@PLT
	add	rsp, 280
	xor	r8d, r8d
	mov	ecx, 1
	pop	rbx
	lea	rdx, .LC3[rip]
	pop	rbp
	or	rsi, -1
	pop	r12
	lea	rdi, MSG$[rip]
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_StrAssign@PLT
.L2145:
	movsd	xmm0, QWORD PTR 394896[rbp]
	movsd	QWORD PTR 8[rsp], xmm1
	call	nearbyint@PLT
	movsd	xmm1, QWORD PTR 8[rsp]
	cvttsd2si	rdi, xmm0
	comisd	xmm0, xmm1
	jb	.L2147
	subsd	xmm0, xmm1
	cvttsd2si	rdi, xmm0
	btc	rdi, 63
.L2147:
	call	fb_HEX_l@PLT
	xor	r8d, r8d
	or	rcx, -1
	or	rsi, -1
	mov	rdx, rax
	lea	rdi, MSG$[rip]
	call	fb_StrAssign@PLT
	xor	edx, edx
	mov	edi, 1
	lea	rsi, MSG$[rip]
	call	fb_PrintString@PLT
	add	rsp, 280
	xor	r8d, r8d
	mov	ecx, 1
	pop	rbx
	lea	rdx, .LC3[rip]
	pop	rbp
	or	rsi, -1
	pop	r12
	lea	rdi, MSG$[rip]
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_StrAssign@PLT
.L2144:
	movsd	xmm0, QWORD PTR 394896[rbp]
	call	fb_DoubleToStr@PLT
	xor	r8d, r8d
	or	rcx, -1
	or	rsi, -1
	mov	rdx, rax
	lea	rdi, MSG$[rip]
	call	fb_StrAssign@PLT
	mov	edx, 1
	mov	edi, 1
	lea	rsi, MSG$[rip]
	call	fb_PrintString@PLT
	add	rsp, 280
	xor	r8d, r8d
	mov	ecx, 1
	pop	rbx
	lea	rdx, .LC3[rip]
	pop	rbp
	or	rsi, -1
	pop	r12
	lea	rdi, MSG$[rip]
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_StrAssign@PLT
.L2143:
	movsd	xmm0, QWORD PTR 394896[rbp]
	call	fb_DoubleToStr@PLT
	xor	r8d, r8d
	or	rcx, -1
	or	rsi, -1
	mov	rdx, rax
	lea	rdi, MSG$[rip]
	call	fb_StrAssign@PLT
	xor	edx, edx
	mov	edi, 1
	lea	rsi, MSG$[rip]
	call	fb_PrintString@PLT
	add	rsp, 280
	xor	r8d, r8d
	mov	ecx, 1
	pop	rbx
	lea	rdx, .LC3[rip]
	pop	rbp
	or	rsi, -1
	pop	r12
	lea	rdi, MSG$[rip]
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_StrAssign@PLT
.L2142:
	cvtsd2si	rsi, QWORD PTR 394896[rbp]
	mov	edi, 1
	xor	eax, eax
	call	fb_CHR@PLT
	xor	r8d, r8d
	or	rcx, -1
	or	rsi, -1
	mov	rdx, rax
	lea	rdi, MSG$[rip]
	call	fb_StrAssign@PLT
	mov	edx, 1
	mov	edi, 1
	lea	rsi, MSG$[rip]
	call	fb_PrintString@PLT
	add	rsp, 280
	xor	r8d, r8d
	mov	ecx, 1
	pop	rbx
	lea	rdx, .LC3[rip]
	pop	rbp
	or	rsi, -1
	pop	r12
	lea	rdi, MSG$[rip]
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_StrAssign@PLT
.L2141:
	cvtsd2si	rsi, QWORD PTR 394896[rbp]
	mov	edi, 1
	xor	eax, eax
	call	fb_CHR@PLT
	xor	r8d, r8d
	or	rcx, -1
	or	rsi, -1
	mov	rdx, rax
	lea	rdi, MSG$[rip]
	call	fb_StrAssign@PLT
	xor	edx, edx
	mov	edi, 1
	lea	rsi, MSG$[rip]
	call	fb_PrintString@PLT
	add	rsp, 280
	xor	r8d, r8d
	mov	ecx, 1
	pop	rbx
	lea	rdx, .LC3[rip]
	pop	rbp
	or	rsi, -1
	pop	r12
	lea	rdi, MSG$[rip]
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_StrAssign@PLT
.L2140:
	movsd	xmm0, QWORD PTR .LC930[rip]
	mulsd	xmm0, QWORD PTR 394896[rbp]
	call	fb_DoubleToStr@PLT
	mov	edx, 1
	mov	edi, 1
	add	rsp, 280
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2139:
	movsd	xmm0, QWORD PTR .LC930[rip]
	mulsd	xmm0, QWORD PTR 394896[rbp]
	call	fb_DoubleToStr@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2138:
	movsd	xmm0, QWORD PTR .LC929[rip]
	mulsd	xmm0, QWORD PTR 394896[rbp]
	call	fb_DoubleToStr@PLT
	mov	edx, 1
	mov	edi, 1
	add	rsp, 280
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2137:
	movsd	xmm0, QWORD PTR .LC929[rip]
	mulsd	xmm0, QWORD PTR 394896[rbp]
	call	fb_DoubleToStr@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2136:
	movsd	xmm0, QWORD PTR .LC928[rip]
	mulsd	xmm0, QWORD PTR 394896[rbp]
	call	fb_DoubleToStr@PLT
	mov	edx, 1
	mov	edi, 1
	add	rsp, 280
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2135:
	movsd	xmm0, QWORD PTR .LC928[rip]
	mulsd	xmm0, QWORD PTR 394896[rbp]
	call	fb_DoubleToStr@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2134:
	mov	esi, 2
	lea	rdi, .LC927[rip]
	call	fb_StrAllocTempDescZEx@PLT
	mov	edx, 1
	mov	edi, 1
	add	rsp, 280
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2133:
	movsd	xmm0, QWORD PTR 394896[rbp]
	xorpd	xmm0, XMMWORD PTR .LC258[rip]
	call	fb_DoubleToStr@PLT
	mov	edx, 1
	mov	edi, 1
	add	rsp, 280
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2132:
	movsd	xmm0, QWORD PTR 394896[rbp]
	xorpd	xmm0, XMMWORD PTR .LC258[rip]
	call	fb_DoubleToStr@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2131:
	movsd	xmm0, QWORD PTR 394896[rbp]
	call	fb_DoubleToStr@PLT
	mov	edx, 1
	mov	edi, 1
	add	rsp, 280
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2130:
	movsd	xmm0, QWORD PTR 394896[rbp]
	call	fb_DoubleToStr@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2126:
	movsd	xmm0, QWORD PTR 394888[rbp]
	movsd	QWORD PTR 24[rsp], xmm1
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	nearbyint@PLT
	movsd	xmm1, QWORD PTR 24[rsp]
	movsd	xmm4, QWORD PTR 8[rsp]
	cvttsd2si	rax, xmm0
	movsd	xmm5, QWORD PTR 16[rsp]
	comisd	xmm0, xmm1
	jb	.L2128
	subsd	xmm0, xmm1
	cvttsd2si	rax, xmm0
	xor	rax, r12
.L2128:
	cmp	rax, 10
	ja	.L649
	jmp	[QWORD PTR [r15+rax*8]]
.L2125:
	mov	esi, 6
	lea	rdi, .LC926[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2124:
	mov	esi, 2
	lea	rdi, .LC925[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2123:
	mov	esi, 15
	lea	rdi, .LC924[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2122:
	mov	esi, 13
	lea	rdi, .LC923[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2121:
	mov	esi, 6
	lea	rdi, .LC922[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2120:
	mov	esi, 15
	lea	rdi, .LC921[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2119:
	mov	esi, 12
	lea	rdi, .LC920[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2118:
	mov	esi, 6
	lea	rdi, .LC919[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2117:
	mov	esi, 3
	lea	rdi, .LC918[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2116:
	mov	esi, 14
	lea	rdi, .LC917[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2115:
	mov	esi, 10
	lea	rdi, .LC916[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2114:
	mov	esi, 9
	lea	rdi, .LC915[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2113:
	mov	esi, 7
	lea	rdi, .LC914[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2112:
	mov	esi, 12
	lea	rdi, .LC913[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2111:
	mov	esi, 3
	lea	rdi, .LC912[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2110:
	mov	esi, 7
	lea	rdi, .LC911[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2109:
	mov	esi, 8
	lea	rdi, .LC910[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2108:
	mov	esi, 6
	lea	rdi, .LC909[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2107:
	mov	esi, 1
	lea	rdi, .LC234[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2106:
	mov	esi, 5
	lea	rdi, .LC908[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2105:
	mov	esi, 5
	lea	rdi, .LC907[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2104:
	mov	esi, 5
	lea	rdi, .LC906[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2103:
	mov	esi, 8
	lea	rdi, .LC905[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2102:
	mov	esi, 4
	lea	rdi, .LC904[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2101:
	mov	esi, 4
	lea	rdi, .LC903[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2100:
	mov	esi, 7
	lea	rdi, .LC902[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2099:
	mov	esi, 9
	lea	rdi, .LC901[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2098:
	mov	esi, 3
	lea	rdi, .LC900[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2097:
	mov	esi, 12
	lea	rdi, .LC899[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2096:
	mov	esi, 9
	lea	rdi, .LC898[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2095:
	mov	esi, 10
	lea	rdi, .LC897[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2094:
	mov	esi, 9
	lea	rdi, .LC896[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2093:
	mov	esi, 10
	lea	rdi, .LC895[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2092:
	mov	esi, 7
	lea	rdi, .LC894[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2091:
	mov	esi, 7
	lea	rdi, .LC893[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2090:
	mov	esi, 6
	lea	rdi, .LC892[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2089:
	mov	esi, 4
	lea	rdi, .LC891[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2088:
	mov	esi, 3
	lea	rdi, .LC890[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2087:
	mov	esi, 5
	lea	rdi, .LC889[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2086:
	mov	esi, 7
	lea	rdi, .LC888[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2085:
	mov	esi, 8
	lea	rdi, .LC887[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2084:
	mov	esi, 10
	lea	rdi, .LC886[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2083:
	mov	esi, 7
	lea	rdi, .LC885[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2082:
	mov	esi, 3
	lea	rdi, .LC884[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2081:
	mov	esi, 11
	lea	rdi, .LC883[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2080:
	mov	esi, 2
	lea	rdi, .LC882[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2079:
	mov	esi, 4
	lea	rdi, .LC881[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2078:
	mov	esi, 5
	lea	rdi, .LC880[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2077:
	mov	esi, 5
	lea	rdi, .LC879[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2076:
	mov	esi, 4
	lea	rdi, .LC878[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2075:
	mov	esi, 8
	lea	rdi, .LC877[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2074:
	mov	esi, 4
	lea	rdi, .LC876[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2073:
	mov	esi, 5
	lea	rdi, .LC875[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2072:
	mov	esi, 3
	lea	rdi, .LC874[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2071:
	mov	esi, 7
	lea	rdi, .LC873[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2070:
	mov	esi, 5
	lea	rdi, .LC872[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2069:
	mov	esi, 6
	lea	rdi, .LC871[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2068:
	mov	esi, 7
	lea	rdi, .LC870[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2067:
	mov	esi, 12
	lea	rdi, .LC869[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2066:
	mov	esi, 11
	lea	rdi, .LC868[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2065:
	mov	esi, 11
	lea	rdi, .LC867[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2064:
	mov	esi, 5
	lea	rdi, .LC866[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2063:
	mov	esi, 11
	lea	rdi, .LC865[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2062:
	mov	esi, 6
	lea	rdi, .LC864[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2061:
	mov	esi, 6
	lea	rdi, .LC863[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2060:
	mov	esi, 5
	lea	rdi, .LC862[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2059:
	mov	esi, 11
	lea	rdi, .LC861[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2058:
	mov	esi, 12
	lea	rdi, .LC860[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2057:
	mov	esi, 4
	lea	rdi, .LC859[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2056:
	mov	esi, 5
	lea	rdi, .LC858[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2055:
	mov	esi, 2
	lea	rdi, .LC857[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2054:
	mov	esi, 6
	lea	rdi, .LC856[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2053:
	mov	esi, 3
	lea	rdi, .LC855[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2052:
	mov	esi, 5
	lea	rdi, .LC854[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2051:
	mov	esi, 13
	lea	rdi, .LC853[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2050:
	mov	esi, 7
	lea	rdi, .LC852[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2049:
	mov	esi, 10
	lea	rdi, .LC851[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2048:
	mov	esi, 13
	lea	rdi, .LC850[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2047:
	mov	esi, 11
	lea	rdi, .LC849[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2046:
	mov	esi, 10
	lea	rdi, .LC848[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2045:
	mov	esi, 6
	lea	rdi, .LC847[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2044:
	mov	esi, 12
	lea	rdi, .LC846[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2043:
	mov	esi, 11
	lea	rdi, .LC845[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2042:
	mov	esi, 4
	lea	rdi, .LC844[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2041:
	mov	esi, 1
	lea	rdi, .LC233[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2040:
	mov	esi, 7
	lea	rdi, .LC843[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2039:
	mov	esi, 10
	lea	rdi, .LC842[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2038:
	mov	esi, 6
	lea	rdi, .LC841[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2037:
	mov	esi, 8
	lea	rdi, .LC840[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2036:
	mov	esi, 6
	lea	rdi, .LC839[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2035:
	mov	esi, 8
	lea	rdi, .LC838[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2034:
	mov	esi, 6
	lea	rdi, .LC837[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2033:
	mov	esi, 7
	lea	rdi, .LC836[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2032:
	mov	esi, 6
	lea	rdi, .LC835[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2031:
	mov	esi, 8
	lea	rdi, .LC834[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2030:
	mov	esi, 5
	lea	rdi, .LC833[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2029:
	mov	esi, 17
	lea	rdi, .LC832[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2028:
	mov	esi, 6
	lea	rdi, .LC831[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2027:
	mov	esi, 4
	lea	rdi, .LC830[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2026:
	mov	esi, 3
	lea	rdi, .LC829[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2025:
	mov	esi, 4
	lea	rdi, .LC828[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2024:
	mov	esi, 9
	lea	rdi, .LC827[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2023:
	mov	esi, 6
	lea	rdi, .LC826[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2022:
	mov	esi, 5
	lea	rdi, .LC825[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2021:
	mov	esi, 8
	lea	rdi, .LC824[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2020:
	mov	esi, 3
	lea	rdi, .LC823[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2019:
	mov	esi, 6
	lea	rdi, .LC822[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2018:
	mov	esi, 11
	lea	rdi, .LC821[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2017:
	mov	esi, 5
	lea	rdi, .LC820[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2016:
	mov	esi, 3
	lea	rdi, .LC819[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2015:
	mov	esi, 3
	lea	rdi, .LC818[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2014:
	mov	esi, 4
	lea	rdi, .LC817[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2013:
	mov	esi, 3
	lea	rdi, .LC816[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2012:
	mov	esi, 5
	lea	rdi, .LC815[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2011:
	mov	esi, 5
	lea	rdi, .LC814[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2010:
	mov	esi, 3
	lea	rdi, .LC813[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2009:
	mov	esi, 11
	lea	rdi, .LC812[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2008:
	mov	esi, 5
	lea	rdi, .LC811[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2007:
	mov	esi, 3
	lea	rdi, .LC810[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2006:
	mov	esi, 3
	lea	rdi, .LC809[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2005:
	mov	esi, 11
	lea	rdi, .LC808[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2004:
	mov	esi, 7
	lea	rdi, .LC807[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2003:
	mov	esi, 4
	lea	rdi, .LC806[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2002:
	mov	esi, 5
	lea	rdi, .LC805[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2001:
	mov	esi, 5
	lea	rdi, .LC804[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2000:
	mov	esi, 9
	lea	rdi, .LC803[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1999:
	mov	esi, 12
	lea	rdi, .LC802[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1998:
	mov	esi, 8
	lea	rdi, .LC801[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1997:
	mov	esi, 12
	lea	rdi, .LC800[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1996:
	mov	esi, 10
	lea	rdi, .LC799[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1995:
	mov	esi, 9
	lea	rdi, .LC798[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1994:
	mov	esi, 10
	lea	rdi, .LC797[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1993:
	mov	esi, 11
	lea	rdi, .LC796[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1992:
	mov	esi, 10
	lea	rdi, .LC795[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1991:
	mov	esi, 11
	lea	rdi, .LC794[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1990:
	mov	esi, 8
	lea	rdi, .LC793[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1989:
	mov	esi, 11
	lea	rdi, .LC792[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1988:
	mov	esi, 11
	lea	rdi, .LC791[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1987:
	mov	esi, 9
	lea	rdi, .LC790[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1986:
	mov	esi, 12
	lea	rdi, .LC789[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1985:
	mov	esi, 10
	lea	rdi, .LC788[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1984:
	mov	esi, 6
	lea	rdi, .LC787[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1983:
	mov	esi, 6
	lea	rdi, .LC786[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1982:
	mov	esi, 12
	lea	rdi, .LC785[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1981:
	mov	esi, 10
	lea	rdi, .LC784[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1980:
	mov	esi, 10
	lea	rdi, .LC783[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1979:
	mov	esi, 11
	lea	rdi, .LC782[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1978:
	mov	esi, 8
	lea	rdi, .LC781[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1977:
	mov	esi, 7
	lea	rdi, .LC780[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1976:
	mov	esi, 3
	lea	rdi, .LC779[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1975:
	mov	esi, 6
	lea	rdi, .LC778[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1974:
	mov	esi, 6
	lea	rdi, .LC777[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1973:
	mov	esi, 8
	lea	rdi, .LC776[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1972:
	mov	esi, 3
	lea	rdi, .LC775[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1971:
	mov	esi, 6
	lea	rdi, .LC774[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1970:
	mov	esi, 4
	lea	rdi, .LC773[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1969:
	mov	esi, 4
	lea	rdi, .LC772[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1968:
	mov	esi, 5
	lea	rdi, .LC771[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1967:
	mov	esi, 3
	lea	rdi, .LC770[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1966:
	mov	esi, 4
	lea	rdi, .LC769[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1965:
	mov	esi, 4
	lea	rdi, .LC768[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1964:
	mov	esi, 12
	lea	rdi, .LC767[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1963:
	mov	esi, 1
	lea	rdi, .LC232[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1962:
	mov	esi, 2
	lea	rdi, .LC766[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1961:
	mov	esi, 7
	lea	rdi, .LC765[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1960:
	mov	esi, 2
	lea	rdi, .LC764[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1959:
	mov	esi, 2
	lea	rdi, .LC763[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1958:
	mov	esi, 5
	lea	rdi, .LC762[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1957:
	mov	esi, 5
	lea	rdi, .LC761[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1956:
	mov	esi, 5
	lea	rdi, .LC760[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1955:
	mov	esi, 10
	lea	rdi, .LC759[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1954:
	mov	esi, 4
	lea	rdi, .LC758[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1953:
	mov	esi, 6
	lea	rdi, .LC757[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1952:
	mov	esi, 4
	lea	rdi, .LC756[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1951:
	mov	esi, 17
	lea	rdi, .LC755[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1950:
	mov	esi, 16
	lea	rdi, .LC754[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1949:
	mov	esi, 6
	lea	rdi, .LC753[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1948:
	mov	esi, 3
	lea	rdi, .LC752[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1947:
	mov	esi, 2
	lea	rdi, .LC751[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1946:
	mov	esi, 8
	lea	rdi, .LC750[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1945:
	mov	esi, 6
	lea	rdi, .LC749[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1944:
	mov	esi, 3
	lea	rdi, .LC748[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1943:
	mov	esi, 8
	lea	rdi, .LC747[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1942:
	mov	esi, 8
	lea	rdi, .LC746[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1941:
	mov	esi, 8
	lea	rdi, .LC745[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1940:
	mov	esi, 7
	lea	rdi, .LC744[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1939:
	mov	esi, 9
	lea	rdi, .LC743[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1938:
	mov	esi, 7
	lea	rdi, .LC742[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1937:
	mov	esi, 8
	lea	rdi, .LC741[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1936:
	mov	esi, 18
	lea	rdi, .LC740[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1935:
	mov	esi, 10
	lea	rdi, .LC739[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1934:
	mov	esi, 7
	lea	rdi, .LC738[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1933:
	mov	esi, 4
	lea	rdi, .LC737[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1932:
	mov	esi, 15
	lea	rdi, .LC736[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1931:
	mov	esi, 9
	lea	rdi, .LC735[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1930:
	mov	esi, 14
	lea	rdi, .LC734[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1929:
	mov	esi, 10
	lea	rdi, .LC733[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1928:
	mov	esi, 9
	lea	rdi, .LC732[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1927:
	mov	esi, 3
	lea	rdi, .LC731[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1926:
	mov	esi, 7
	lea	rdi, .LC730[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1925:
	mov	esi, 10
	lea	rdi, .LC729[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1924:
	mov	esi, 10
	lea	rdi, .LC728[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1923:
	mov	esi, 9
	lea	rdi, .LC727[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1922:
	mov	esi, 9
	lea	rdi, .LC726[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1921:
	mov	esi, 3
	lea	rdi, .LC725[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1920:
	mov	esi, 11
	lea	rdi, .LC724[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1919:
	mov	esi, 6
	lea	rdi, .LC723[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1918:
	mov	esi, 10
	lea	rdi, .LC722[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1917:
	mov	esi, 11
	lea	rdi, .LC721[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1916:
	mov	esi, 10
	lea	rdi, .LC720[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1915:
	mov	esi, 4
	lea	rdi, .LC719[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1914:
	mov	esi, 9
	lea	rdi, .LC718[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1913:
	mov	esi, 5
	lea	rdi, .LC717[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1912:
	mov	esi, 11
	lea	rdi, .LC716[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1911:
	mov	esi, 12
	lea	rdi, .LC715[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1910:
	mov	esi, 7
	lea	rdi, .LC714[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1909:
	mov	esi, 9
	lea	rdi, .LC713[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1908:
	mov	esi, 9
	lea	rdi, .LC712[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1907:
	mov	esi, 6
	lea	rdi, .LC711[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1906:
	mov	esi, 7
	lea	rdi, .LC710[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1905:
	mov	esi, 6
	lea	rdi, .LC709[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1904:
	mov	esi, 6
	lea	rdi, .LC708[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1903:
	mov	esi, 6
	lea	rdi, .LC707[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1902:
	mov	esi, 7
	lea	rdi, .LC706[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1901:
	mov	esi, 6
	lea	rdi, .LC705[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1900:
	mov	esi, 6
	lea	rdi, .LC704[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1899:
	mov	esi, 7
	lea	rdi, .LC703[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1898:
	mov	esi, 3
	lea	rdi, .LC702[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1897:
	mov	esi, 6
	lea	rdi, .LC701[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1896:
	mov	esi, 7
	lea	rdi, .LC700[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1895:
	mov	esi, 12
	lea	rdi, .LC699[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1894:
	mov	esi, 13
	lea	rdi, .LC698[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1893:
	mov	esi, 7
	lea	rdi, .LC697[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1892:
	mov	esi, 3
	lea	rdi, .LC696[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1891:
	mov	esi, 11
	lea	rdi, .LC695[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1890:
	mov	esi, 11
	lea	rdi, .LC694[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1889:
	mov	esi, 11
	lea	rdi, .LC693[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1888:
	mov	esi, 10
	lea	rdi, .LC692[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1887:
	mov	esi, 10
	lea	rdi, .LC691[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1886:
	mov	esi, 10
	lea	rdi, .LC690[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1885:
	mov	esi, 9
	lea	rdi, .LC689[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1884:
	mov	esi, 14
	lea	rdi, .LC688[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1883:
	mov	esi, 5
	lea	rdi, .LC687[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1882:
	mov	esi, 2
	lea	rdi, .LC686[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1881:
	mov	esi, 14
	lea	rdi, .LC685[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1880:
	mov	esi, 4
	lea	rdi, .LC684[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1879:
	mov	esi, 11
	lea	rdi, .LC683[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1878:
	mov	esi, 3
	lea	rdi, .LC682[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1877:
	mov	esi, 12
	lea	rdi, .LC681[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1876:
	mov	esi, 13
	lea	rdi, .LC680[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1875:
	mov	esi, 4
	lea	rdi, .LC679[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1874:
	mov	esi, 7
	lea	rdi, .LC678[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1873:
	mov	esi, 4
	lea	rdi, .LC677[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1872:
	mov	esi, 1
	lea	rdi, .LC231[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1871:
	mov	esi, 11
	lea	rdi, .LC676[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1870:
	mov	esi, 8
	lea	rdi, .LC675[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1866:
	movsd	xmm0, QWORD PTR 394888[rbp]
	movsd	QWORD PTR 24[rsp], xmm1
	movsd	QWORD PTR 16[rsp], xmm5
	movsd	QWORD PTR 8[rsp], xmm4
	call	nearbyint@PLT
	movsd	xmm1, QWORD PTR 24[rsp]
	movsd	xmm4, QWORD PTR 8[rsp]
	cvttsd2si	rax, xmm0
	movsd	xmm5, QWORD PTR 16[rsp]
	comisd	xmm0, xmm1
	jb	.L1868
	subsd	xmm0, xmm1
	cvttsd2si	rax, xmm0
	xor	rax, r12
.L1868:
	cmp	rax, 255
	ja	.L649
	jmp	[QWORD PTR [r14+rax*8]]
.L1864:
	mov	esi, 3
	lea	rdi, .LC674[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1863:
	mov	esi, 3
	lea	rdi, .LC673[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1862:
	mov	esi, 3
	lea	rdi, .LC672[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1861:
	mov	esi, 16
	lea	rdi, .LC671[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1860:
	mov	esi, 6
	lea	rdi, .LC670[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1859:
	mov	esi, 17
	lea	rdi, .LC669[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1858:
	mov	esi, 12
	lea	rdi, .LC668[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1857:
	mov	esi, 12
	lea	rdi, .LC667[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1856:
	mov	esi, 8
	lea	rdi, .LC666[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1855:
	mov	esi, 10
	lea	rdi, .LC665[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1854:
	mov	esi, 12
	lea	rdi, .LC664[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1853:
	mov	esi, 5
	lea	rdi, .LC663[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1852:
	mov	esi, 4
	lea	rdi, .LC662[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1851:
	mov	esi, 6
	lea	rdi, .LC661[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1850:
	mov	esi, 4
	lea	rdi, .LC660[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1849:
	mov	esi, 5
	lea	rdi, .LC659[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1848:
	mov	esi, 5
	lea	rdi, .LC658[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1847:
	mov	esi, 7
	lea	rdi, .LC657[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1846:
	mov	esi, 7
	lea	rdi, .LC656[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1845:
	mov	esi, 5
	lea	rdi, .LC655[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1844:
	mov	esi, 4
	lea	rdi, .LC654[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1843:
	mov	esi, 3
	lea	rdi, .LC653[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1842:
	mov	esi, 13
	lea	rdi, .LC652[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1841:
	mov	esi, 4
	lea	rdi, .LC651[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1840:
	mov	esi, 6
	lea	rdi, .LC650[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1839:
	mov	esi, 10
	lea	rdi, .LC649[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1838:
	mov	esi, 8
	lea	rdi, .LC648[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1837:
	mov	esi, 8
	lea	rdi, .LC647[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1836:
	mov	esi, 8
	lea	rdi, .LC646[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1835:
	mov	esi, 7
	lea	rdi, .LC645[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1834:
	mov	esi, 8
	lea	rdi, .LC644[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1833:
	mov	esi, 7
	lea	rdi, .LC643[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1832:
	mov	esi, 8
	lea	rdi, .LC642[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1831:
	mov	esi, 12
	lea	rdi, .LC641[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1830:
	mov	esi, 4
	lea	rdi, .LC640[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1829:
	mov	esi, 11
	lea	rdi, .LC639[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1828:
	mov	esi, 8
	lea	rdi, .LC638[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1827:
	mov	esi, 5
	lea	rdi, .LC637[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1826:
	mov	esi, 15
	lea	rdi, .LC636[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1825:
	mov	esi, 11
	lea	rdi, .LC635[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1824:
	mov	esi, 13
	lea	rdi, .LC634[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1823:
	mov	esi, 10
	lea	rdi, .LC633[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1822:
	mov	esi, 4
	lea	rdi, .LC632[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1821:
	mov	esi, 4
	lea	rdi, .LC631[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1820:
	mov	esi, 11
	lea	rdi, .LC630[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1819:
	mov	esi, 6
	lea	rdi, .LC629[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1818:
	mov	esi, 7
	lea	rdi, .LC628[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1817:
	mov	esi, 7
	lea	rdi, .LC627[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1816:
	mov	esi, 15
	lea	rdi, .LC626[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1815:
	mov	esi, 15
	lea	rdi, .LC625[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1814:
	mov	esi, 15
	lea	rdi, .LC624[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1813:
	mov	esi, 15
	lea	rdi, .LC623[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1812:
	mov	esi, 15
	lea	rdi, .LC622[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1811:
	mov	esi, 13
	lea	rdi, .LC621[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1810:
	mov	esi, 9
	lea	rdi, .LC620[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1809:
	mov	esi, 9
	lea	rdi, .LC619[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1808:
	mov	esi, 7
	lea	rdi, .LC618[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L1807:
	mov	esi, 6
	lea	rdi, .LC617[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
	.p2align 4,,10
	.p2align 3
.L3971:
.L1477:
	xor	r8d, r8d
	xor	ecx, ecx
	xor	edx, edx
	xor	edi, edi
	mov	esi, 8
	movsd	QWORD PTR 8[rsp], xmm5
	call	fb_GfxScreen@PLT
	movsd	xmm5, QWORD PTR 8[rsp]
	movapd	xmm0, xmm5
	call	fb_DoubleToStr@PLT
	pxor	xmm0, xmm0
	mov	edx, 36
	lea	rdi, 208[rsp]
	mov	rcx, rax
	mov	r8, -1
	lea	rsi, .LC359[rip]
	movaps	XMMWORD PTR 208[rsp], xmm0
	mov	QWORD PTR 224[rsp], 0
	call	fb_StrConcat@PLT
	pxor	xmm0, xmm0
	lea	rdi, 240[rsp]
	mov	r8d, 22
	mov	rsi, rax
	lea	rcx, .LC360[rip]
	mov	rdx, -1
	movaps	XMMWORD PTR 240[rsp], xmm0
	mov	QWORD PTR 256[rsp], 0
	call	fb_StrConcat@PLT
	mov	rdi, rax
	call	fb_Shell@PLT
	xor	r9d, r9d
	mov	r8d, 65
	mov	ecx, 7
	mov	edx, 32
	mov	esi, 1080
	mov	edi, 1920
	call	fb_GfxScreenRes@PLT
	mov	edi, -65536
	call	fb_Cls@PLT
	xor	esi, esi
	lea	rdi, .LC3[rip]
	call	fb_StrAllocTempDescZEx@PLT
	pxor	xmm1, xmm1
	xor	r8d, r8d
	xor	edx, edx
	mov	rcx, rax
	mov	r9d, 1073741828
	mov	esi, -16777216
	xor	edi, edi
	movaps	xmm0, xmm1
	call	fb_GfxPaint@PLT
	jmp	.L649
	.p2align 4,,10
	.p2align 3
.L4419:
.L1480:
	xor	r8d, r8d
	xor	ecx, ecx
	xor	edx, edx
	mov	esi, 8
	xor	edi, edi
	call	fb_GfxScreen@PLT
	mov	esi, 66
	lea	rdi, .LC361[rip]
	call	fb_StrAllocTempDescZEx@PLT
	mov	rdi, rax
	call	fb_Shell@PLT
	xor	r9d, r9d
	mov	r8d, 65
	mov	ecx, 7
	mov	edx, 32
	mov	esi, 1080
	mov	edi, 1920
	call	fb_GfxScreenRes@PLT
	mov	edi, -65536
	call	fb_Cls@PLT
	xor	esi, esi
	lea	rdi, .LC3[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	xor	edi, edi
	pxor	xmm1, xmm1
	pop	rbx
	mov	rcx, rax
	pop	rbp
	mov	r9d, 1073741828
	pop	r12
	xor	r8d, r8d
	pop	r13
	mov	esi, -16777216
	pop	r14
	movaps	xmm0, xmm1
	pop	r15
	jmp	fb_GfxPaint@PLT
	.p2align 4,,10
	.p2align 3
.L4451:
	mov	rax, QWORD PTR .LC278[rip]
	movapd	xmm1, xmm5
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm4
	movsd	QWORD PTR 8[rsp], xmm5
	movq	xmm0, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm5, QWORD PTR 8[rsp]
	movsd	xmm4, QWORD PTR 16[rsp]
	jmp	.L1474
.L3973:
.L1497:
	cvtsd2si	rcx, QWORD PTR 393304[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rdi, QWORD PTR 393312[rbp]
	cvtsd2si	rdx, QWORD PTR 393320[rbp]
	cvtsd2si	rax, QWORD PTR 393328[rbp]
	sal	rcx, 32
	mov	rsi, rcx
	mov	rcx, rdi
	sal	rcx, 24
	sal	rdx, 16
	add	rcx, rsi
	sal	rax, 8
	add	rdx, rcx
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 393336[rbp]
	movsd	QWORD PTR 394840[rbp], xmm0
	jmp	.L649
.L4420:
.L1500:
	cvtsd2si	rcx, QWORD PTR 393352[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rdi, QWORD PTR 393360[rbp]
	cvtsd2si	rdx, QWORD PTR 393368[rbp]
	cvtsd2si	rax, QWORD PTR 393376[rbp]
	sal	rcx, 32
	mov	rsi, rcx
	mov	rcx, rdi
	sal	rcx, 24
	sal	rdx, 16
	add	rcx, rsi
	sal	rax, 8
	add	rdx, rcx
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 393384[rbp]
	movsd	QWORD PTR 394848[rbp], xmm0
	jmp	.L649
.L4421:
.L1502:
	cvtsd2si	rcx, QWORD PTR 393400[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rdi, QWORD PTR 393408[rbp]
	cvtsd2si	rdx, QWORD PTR 393416[rbp]
	cvtsd2si	rax, QWORD PTR 393424[rbp]
	sal	rcx, 32
	mov	rsi, rcx
	mov	rcx, rdi
	sal	rcx, 24
	sal	rdx, 16
	add	rcx, rsi
	sal	rax, 8
	add	rdx, rcx
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 393432[rbp]
	movsd	QWORD PTR 394856[rbp], xmm0
	jmp	.L649
.L4422:
.L1504:
	cvtsd2si	rcx, QWORD PTR 393448[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rdi, QWORD PTR 393456[rbp]
	cvtsd2si	rdx, QWORD PTR 393464[rbp]
	cvtsd2si	rax, QWORD PTR 393472[rbp]
	sal	rcx, 32
	mov	rsi, rcx
	mov	rcx, rdi
	sal	rcx, 24
	sal	rdx, 16
	add	rcx, rsi
	sal	rax, 8
	add	rdx, rcx
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 393480[rbp]
	movsd	QWORD PTR 394864[rbp], xmm0
	jmp	.L649
.L4423:
.L1506:
	cvtsd2si	rcx, QWORD PTR 393496[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rdi, QWORD PTR 393504[rbp]
	cvtsd2si	rdx, QWORD PTR 393512[rbp]
	cvtsd2si	rax, QWORD PTR 393520[rbp]
	sal	rcx, 32
	mov	rsi, rcx
	mov	rcx, rdi
	sal	rcx, 24
	sal	rdx, 16
	add	rcx, rsi
	sal	rax, 8
	add	rdx, rcx
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 393528[rbp]
	movsd	QWORD PTR 394872[rbp], xmm0
	jmp	.L649
.L4424:
.L1508:
	cvtsd2si	rcx, QWORD PTR 393544[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rdi, QWORD PTR 393552[rbp]
	cvtsd2si	rdx, QWORD PTR 393560[rbp]
	cvtsd2si	rax, QWORD PTR 393568[rbp]
	sal	rcx, 32
	mov	rsi, rcx
	mov	rcx, rdi
	sal	rcx, 24
	sal	rdx, 16
	add	rcx, rsi
	sal	rax, 8
	add	rdx, rcx
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 393576[rbp]
	movsd	QWORD PTR 394880[rbp], xmm0
	jmp	.L649
.L4425:
.L1510:
	cvtsd2si	rcx, QWORD PTR 393592[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rdi, QWORD PTR 393600[rbp]
	cvtsd2si	rdx, QWORD PTR 393608[rbp]
	cvtsd2si	rax, QWORD PTR 393616[rbp]
	sal	rcx, 32
	mov	rsi, rcx
	mov	rcx, rdi
	sal	rcx, 24
	sal	rdx, 16
	add	rcx, rsi
	sal	rax, 8
	add	rdx, rcx
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 393624[rbp]
	movsd	QWORD PTR 394888[rbp], xmm0
	jmp	.L649
.L4426:
.L1512:
	cvtsd2si	rcx, QWORD PTR 393640[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rdi, QWORD PTR 393648[rbp]
	cvtsd2si	rdx, QWORD PTR 393656[rbp]
	cvtsd2si	rax, QWORD PTR 393664[rbp]
	sal	rcx, 32
	mov	rsi, rcx
	mov	rcx, rdi
	sal	rcx, 24
	sal	rdx, 16
	add	rcx, rsi
	sal	rax, 8
	add	rdx, rcx
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 393672[rbp]
	movsd	QWORD PTR 394896[rbp], xmm0
	jmp	.L649
.L4427:
.L1514:
	cvtsd2si	rcx, QWORD PTR 393688[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rdi, QWORD PTR 393696[rbp]
	cvtsd2si	rdx, QWORD PTR 393704[rbp]
	cvtsd2si	rax, QWORD PTR 393712[rbp]
	sal	rcx, 32
	mov	rsi, rcx
	mov	rcx, rdi
	sal	rcx, 24
	sal	rdx, 16
	add	rcx, rsi
	sal	rax, 8
	add	rdx, rcx
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 393720[rbp]
	movsd	QWORD PTR 394904[rbp], xmm0
	jmp	.L649
.L4428:
.L1516:
	cvtsd2si	rcx, QWORD PTR 393736[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rdi, QWORD PTR 393744[rbp]
	cvtsd2si	rdx, QWORD PTR 393752[rbp]
	cvtsd2si	rax, QWORD PTR 393768[rbp]
	sal	rcx, 32
	mov	rsi, rcx
	mov	rcx, rdi
	sal	rcx, 24
	sal	rdx, 16
	add	rcx, rsi
	sal	rax, 8
	add	rdx, rcx
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 393776[rbp]
	movsd	QWORD PTR 394912[rbp], xmm0
	jmp	.L649
.L4429:
.L1518:
	cvtsd2si	rcx, QWORD PTR 393792[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rdi, QWORD PTR 393800[rbp]
	cvtsd2si	rdx, QWORD PTR 393808[rbp]
	cvtsd2si	rax, QWORD PTR 393816[rbp]
	sal	rcx, 32
	mov	rsi, rcx
	mov	rcx, rdi
	sal	rcx, 24
	sal	rdx, 16
	add	rcx, rsi
	sal	rax, 8
	add	rdx, rcx
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 393824[rbp]
	movsd	QWORD PTR 394920[rbp], xmm0
	jmp	.L649
.L4430:
.L1520:
	cvtsd2si	rcx, QWORD PTR 393832[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rdi, QWORD PTR 393840[rbp]
	cvtsd2si	rdx, QWORD PTR 393848[rbp]
	cvtsd2si	rax, QWORD PTR 393856[rbp]
	sal	rcx, 32
	mov	rsi, rcx
	mov	rcx, rdi
	sal	rcx, 24
	sal	rdx, 16
	add	rcx, rsi
	sal	rax, 8
	add	rdx, rcx
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 393864[rbp]
	movsd	QWORD PTR 394928[rbp], xmm0
	jmp	.L649
.L4431:
.L1522:
	cvtsd2si	rcx, QWORD PTR 393880[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rdi, QWORD PTR 393888[rbp]
	cvtsd2si	rdx, QWORD PTR 393896[rbp]
	cvtsd2si	rax, QWORD PTR 393904[rbp]
	sal	rcx, 32
	mov	rsi, rcx
	mov	rcx, rdi
	sal	rcx, 24
	sal	rdx, 16
	add	rcx, rsi
	sal	rax, 8
	add	rdx, rcx
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 393912[rbp]
	movsd	QWORD PTR 394936[rbp], xmm0
	jmp	.L649
.L4432:
.L1524:
	cvtsd2si	rcx, QWORD PTR 393928[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rdi, QWORD PTR 393936[rbp]
	cvtsd2si	rdx, QWORD PTR 393944[rbp]
	cvtsd2si	rax, QWORD PTR 393952[rbp]
	sal	rcx, 32
	mov	rsi, rcx
	mov	rcx, rdi
	sal	rcx, 24
	sal	rdx, 16
	add	rcx, rsi
	sal	rax, 8
	add	rdx, rcx
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 393960[rbp]
	movsd	QWORD PTR 394944[rbp], xmm0
	jmp	.L649
.L4433:
.L1526:
	cvtsd2si	rcx, QWORD PTR 393976[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rdi, QWORD PTR 393984[rbp]
	cvtsd2si	rdx, QWORD PTR 393992[rbp]
	cvtsd2si	rax, QWORD PTR 394000[rbp]
	sal	rcx, 32
	mov	rsi, rcx
	mov	rcx, rdi
	sal	rcx, 24
	sal	rdx, 16
	add	rcx, rsi
	sal	rax, 8
	add	rdx, rcx
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 394008[rbp]
	movsd	QWORD PTR 394952[rbp], xmm0
	jmp	.L649
.L4434:
.L1528:
	cvtsd2si	rcx, QWORD PTR 394024[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rdi, QWORD PTR 394032[rbp]
	cvtsd2si	rdx, QWORD PTR 386040[rbp]
	cvtsd2si	rax, QWORD PTR 394048[rbp]
	sal	rcx, 32
	mov	rsi, rcx
	mov	rcx, rdi
	sal	rcx, 24
	sal	rdx, 16
	add	rcx, rsi
	sal	rax, 8
	add	rdx, rcx
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 394056[rbp]
	movsd	QWORD PTR 394960[rbp], xmm0
	jmp	.L649
.L4435:
.L1530:
	cvtsd2si	rcx, QWORD PTR 394072[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rdi, QWORD PTR 394080[rbp]
	cvtsd2si	rdx, QWORD PTR 394088[rbp]
	cvtsd2si	rax, QWORD PTR 394096[rbp]
	sal	rcx, 32
	mov	rsi, rcx
	mov	rcx, rdi
	sal	rcx, 24
	sal	rdx, 16
	add	rcx, rsi
	sal	rax, 8
	add	rdx, rcx
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 394104[rbp]
	movsd	QWORD PTR 394968[rbp], xmm0
	jmp	.L649
.L4436:
.L1532:
	cvtsd2si	rcx, QWORD PTR 394120[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rdi, QWORD PTR 394128[rbp]
	cvtsd2si	rdx, QWORD PTR 394136[rbp]
	cvtsd2si	rax, QWORD PTR 394144[rbp]
	sal	rcx, 32
	mov	rsi, rcx
	mov	rcx, rdi
	sal	rcx, 24
	sal	rdx, 16
	add	rcx, rsi
	sal	rax, 8
	add	rdx, rcx
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 394152[rbp]
	movsd	QWORD PTR 394976[rbp], xmm0
	jmp	.L649
.L4437:
.L1534:
	cvtsd2si	rcx, QWORD PTR 394168[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rdi, QWORD PTR 394176[rbp]
	cvtsd2si	rdx, QWORD PTR 394184[rbp]
	cvtsd2si	rax, QWORD PTR 394192[rbp]
	sal	rcx, 32
	mov	rsi, rcx
	mov	rcx, rdi
	sal	rcx, 24
	sal	rdx, 16
	add	rcx, rsi
	sal	rax, 8
	add	rdx, rcx
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 394200[rbp]
	movsd	QWORD PTR 394984[rbp], xmm0
	jmp	.L649
.L4438:
.L1536:
	cvtsd2si	rcx, QWORD PTR 394216[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rdi, QWORD PTR 394224[rbp]
	cvtsd2si	rdx, QWORD PTR 394232[rbp]
	cvtsd2si	rax, QWORD PTR 394240[rbp]
	sal	rcx, 32
	mov	rsi, rcx
	mov	rcx, rdi
	sal	rcx, 24
	sal	rdx, 16
	add	rcx, rsi
	sal	rax, 8
	add	rdx, rcx
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 394248[rbp]
	movsd	QWORD PTR 394992[rbp], xmm0
	jmp	.L649
.L4439:
.L1538:
	cvtsd2si	rcx, QWORD PTR 394264[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rdi, QWORD PTR 394272[rbp]
	cvtsd2si	rdx, QWORD PTR 394280[rbp]
	cvtsd2si	rax, QWORD PTR 394288[rbp]
	sal	rcx, 32
	mov	rsi, rcx
	mov	rcx, rdi
	sal	rcx, 24
	sal	rdx, 16
	add	rcx, rsi
	sal	rax, 8
	add	rdx, rcx
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 394296[rbp]
	movsd	QWORD PTR 395000[rbp], xmm0
	jmp	.L649
.L4440:
.L1540:
	cvtsd2si	rcx, QWORD PTR 394312[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rdi, QWORD PTR 394320[rbp]
	cvtsd2si	rdx, QWORD PTR 394328[rbp]
	cvtsd2si	rax, QWORD PTR 394336[rbp]
	sal	rcx, 32
	mov	rsi, rcx
	mov	rcx, rdi
	sal	rcx, 24
	sal	rdx, 16
	add	rcx, rsi
	sal	rax, 8
	add	rdx, rcx
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 394344[rbp]
	movsd	QWORD PTR 395008[rbp], xmm0
	jmp	.L649
.L4441:
.L1542:
	cvtsd2si	rcx, QWORD PTR 394360[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rdi, QWORD PTR 394368[rbp]
	cvtsd2si	rdx, QWORD PTR 394376[rbp]
	cvtsd2si	rax, QWORD PTR 394384[rbp]
	sal	rcx, 32
	mov	rsi, rcx
	mov	rcx, rdi
	sal	rcx, 24
	sal	rdx, 16
	add	rcx, rsi
	sal	rax, 8
	add	rdx, rcx
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 394392[rbp]
	movsd	QWORD PTR 395016[rbp], xmm0
	jmp	.L649
.L4447:
	comisd	xmm4, QWORD PTR .LC1897[rip]
	je	.L4702
	comisd	xmm4, QWORD PTR .LC1898[rip]
	je	.L4279
	comisd	xmm4, QWORD PTR .LC1899[rip]
	jne	.L4703
.L3481:
	lea	rdi, 134479872[rbp]
	mov	edx, 65536
	xor	esi, esi
	xor	ebx, ebx
	movsd	QWORD PTR 8[rsp], xmm5
	lea	r12, 176[rsp]
	mov	BYTE PTR 176[rsp], 0
	call	memset@PLT
	movsd	xmm5, QWORD PTR 8[rsp]
	movapd	xmm0, xmm5
	call	fb_DoubleToStr@PLT
	pxor	xmm0, xmm0
	mov	edx, 11
	lea	rdi, 208[rsp]
	mov	rcx, rax
	mov	r8, -1
	lea	rsi, .LC1900[rip]
	movaps	XMMWORD PTR 208[rsp], xmm0
	mov	QWORD PTR 224[rsp], 0
	call	fb_StrConcat@PLT
	pxor	xmm0, xmm0
	lea	rdi, 240[rsp]
	mov	r8d, 5
	mov	rsi, rax
	lea	rcx, .LC1901[rip]
	mov	rdx, -1
	movaps	XMMWORD PTR 240[rsp], xmm0
	mov	QWORD PTR 256[rsp], 0
	call	fb_StrConcat@PLT
	xor	r9d, r9d
	mov	r8d, 1
	xor	ecx, ecx
	mov	rdi, rax
	xor	edx, edx
	xor	esi, esi
	call	fb_FileOpen@PLT
	mov	edi, 1
	call	fb_FileSize@PLT
	mov	r13, rax
	test	rax, rax
	js	.L3483
	.p2align 4,,10
	.p2align 3
.L3482:
	mov	ecx, 1
	mov	rdx, r12
	xor	esi, esi
	mov	edi, 1
	call	fb_FileGetLarge@PLT
	movzx	eax, BYTE PTR 176[rsp]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, eax
	movsd	QWORD PTR 134479872[rbp+rbx*8], xmm0
	add	rbx, 1
	cmp	r13, rbx
	jge	.L3482
.L3483:
	mov	edi, 1
	call	fb_FileClose@PLT
	jmp	.L649
	.p2align 4,,10
	.p2align 3
.L4703:
.L3480:
	comisd	xmm4, QWORD PTR .LC1902[rip]
	je	.L3484
	comisd	xmm4, QWORD PTR .LC1903[rip]
	jne	.L4704
.L3484:
	comisd	xmm5, QWORD PTR .LC117[rip]
	movsd	QWORD PTR 8[rsp], xmm4
	ja	.L3487
	comisd	xmm2, xmm5
	jbe	.L4705
.L3487:
	comisd	xmm5, QWORD PTR .LC6[rip]
	jb	.L3490
	comisd	xmm5, QWORD PTR .LC132[rip]
	jbe	.L4706
.L3490:
	comisd	xmm5, QWORD PTR .LC88[rip]
	ja	.L3492
	comisd	xmm5, QWORD PTR .LC73[rip]
	jnb	.L4707
.L3492:
	comisd	xmm5, QWORD PTR .LC89[rip]
	jb	.L3494
	comisd	xmm5, QWORD PTR .LC104[rip]
	jbe	.L4708
.L3494:
	subsd	xmm5, QWORD PTR .LC1905[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movabs	rcx, -9187201950435737471
	cvtsd2si	rsi, xmm5
	mov	rax, rsi
	imul	rcx
	lea	rax, [rdx+rsi]
	mov	rdx, rsi
	sar	rdx, 63
	sar	rax, 7
	sub	rax, rdx
	mov	rdx, rax
	sal	rdx, 8
	sub	rdx, rax
	mov	rax, rsi
	sub	rax, rdx
	mov	rsi, rax
	sal	rsi, 4
	add	rsi, rax
	mov	rax, rsi
	imul	rcx
	lea	rax, [rdx+rsi]
	mov	rdx, rsi
	sar	rdx, 63
	sar	rax, 7
	sub	rax, rdx
	mov	rdx, rax
	sal	rdx, 8
	sub	rdx, rax
	mov	rax, QWORD PTR .LC362[rip]
	sub	rsi, rdx
	cvtsi2sd	xmm1, rsi
	movq	xmm0, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
.L3489:
	movsd	xmm0, QWORD PTR .LC1906[rip]
	addsd	xmm0, QWORD PTR SYS_OFFSET$[rip]
	comisd	xmm0, xmm4
	jne	.L649
	movsd	xmm2, QWORD PTR .LC1907[rip]
	mov	rdi, rbp
	movapd	xmm0, xmm2
	call	_ZN8MEMORY_T6PEEK64Ed
	movapd	xmm1, xmm0
	movsd	xmm0, QWORD PTR .LC346[rip]
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC1907[rip]
	mov	rdi, rbp
	movq	xmm0, rax
	call	_ZN8MEMORY_T6PEEK64Ed
	movsd	xmm4, QWORD PTR .LC268[rip]
	movapd	xmm5, xmm0
	jmp	.L650
	.p2align 4,,10
	.p2align 3
.L4704:
	comisd	xmm4, QWORD PTR .LC1904[rip]
	jne	.L4709
.L3486:
	comisd	xmm2, xmm5
	ja	.L3498
	comisd	xmm5, QWORD PTR .LC117[rip]
	ja	.L3498
.L3499:
	cvtsd2si	rcx, xmm5
	pxor	xmm5, xmm5
	movabs	rdx, -9187201950435737471
	movsd	xmm4, QWORD PTR .LC268[rip]
	mov	rax, rcx
	imul	rdx
	lea	rax, [rdx+rcx]
	mov	rdx, rcx
	sar	rdx, 63
	sar	rax, 7
	sub	rax, rdx
	mov	rdx, rax
	sal	rdx, 8
	sub	rdx, rax
	sub	rcx, rdx
	cvtsi2sd	xmm5, rcx
	jmp	.L650
	.p2align 4,,10
	.p2align 3
.L4705:
.L3488:
	cvtsd2si	rcx, xmm5
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movabs	rdx, -9187201950435737471
	mov	rax, rcx
	imul	rdx
	lea	rax, [rdx+rcx]
	mov	rdx, rcx
	sar	rdx, 63
	sar	rax, 7
	sub	rax, rdx
	mov	rdx, rax
	sal	rdx, 8
	sub	rdx, rax
	mov	rax, QWORD PTR .LC278[rip]
	sub	rcx, rdx
	cvtsi2sd	xmm1, rcx
	movq	xmm0, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	jmp	.L3489
	.p2align 4,,10
	.p2align 3
.L4706:
.L3491:
	subsd	xmm5, QWORD PTR .LC6[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movabs	rcx, -9187201950435737471
	cvtsd2si	rsi, xmm5
	mov	rax, rsi
	imul	rcx
	lea	rax, [rdx+rsi]
	mov	rdx, rsi
	sar	rdx, 63
	sar	rax, 7
	sub	rax, rdx
	mov	rdx, rax
	sal	rdx, 8
	sub	rdx, rax
	mov	rax, rsi
	sub	rax, rdx
	mov	rsi, rax
	sal	rsi, 4
	add	rsi, rax
	mov	rax, rsi
	imul	rcx
	lea	rax, [rdx+rsi]
	mov	rdx, rsi
	sar	rdx, 63
	sar	rax, 7
	sub	rax, rdx
	mov	rdx, rax
	sal	rdx, 8
	sub	rdx, rax
	mov	rax, QWORD PTR .LC281[rip]
	sub	rsi, rdx
	cvtsi2sd	xmm1, rsi
	movq	xmm0, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	jmp	.L3489
	.p2align 4,,10
	.p2align 3
.L4707:
.L3493:
	movsd	xmm2, QWORD PTR .LC73[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movabs	rcx, -9187201950435737471
	subsd	xmm5, xmm2
	cvtsd2si	rsi, xmm5
	mov	rax, rsi
	imul	rcx
	lea	rax, [rdx+rsi]
	mov	rdx, rsi
	sar	rdx, 63
	sar	rax, 7
	sub	rax, rdx
	mov	rdx, rax
	sal	rdx, 8
	sub	rdx, rax
	mov	rax, rsi
	sub	rax, rdx
	mov	rsi, rax
	sal	rsi, 4
	add	rsi, rax
	mov	rax, rsi
	imul	rcx
	lea	rax, [rdx+rsi]
	mov	rdx, rsi
	sar	rdx, 63
	sar	rax, 7
	sub	rax, rdx
	mov	rdx, rax
	sal	rdx, 8
	sub	rdx, rax
	mov	rax, QWORD PTR .LC282[rip]
	sub	rsi, rdx
	cvtsi2sd	xmm1, rsi
	movq	xmm0, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	jmp	.L3489
.L4708:
.L3495:
	subsd	xmm5, QWORD PTR .LC89[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movabs	rcx, -9187201950435737471
	cvtsd2si	rsi, xmm5
	mov	rax, rsi
	imul	rcx
	lea	rax, [rdx+rsi]
	mov	rdx, rsi
	sar	rdx, 63
	sar	rax, 7
	sub	rax, rdx
	mov	rdx, rax
	sal	rdx, 8
	sub	rdx, rax
	mov	rax, rsi
	sub	rax, rdx
	mov	rsi, rax
	sal	rsi, 4
	add	rsi, rax
	mov	rax, rsi
	imul	rcx
	lea	rax, [rdx+rsi]
	mov	rdx, rsi
	sar	rdx, 63
	sar	rax, 7
	sub	rax, rdx
	mov	rdx, rax
	sal	rdx, 8
	sub	rdx, rax
	mov	rax, QWORD PTR .LC283[rip]
	sub	rsi, rdx
	cvtsi2sd	xmm1, rsi
	movq	xmm0, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR 8[rsp]
	jmp	.L3489
.L3498:
	comisd	xmm5, QWORD PTR .LC6[rip]
	jb	.L3500
	comisd	xmm5, QWORD PTR .LC132[rip]
	ja	.L3500
.L3501:
	subsd	xmm5, QWORD PTR .LC6[rip]
	movabs	rcx, -9187201950435737471
	cvtsd2si	rsi, xmm5
	pxor	xmm5, xmm5
	mov	rax, rsi
	imul	rcx
	lea	rax, [rdx+rsi]
	mov	rdx, rsi
	sar	rdx, 63
	sar	rax, 7
	sub	rax, rdx
	mov	rdx, rax
	sal	rdx, 8
	sub	rdx, rax
	mov	rax, rsi
	sub	rax, rdx
	mov	rsi, rax
	sal	rsi, 4
	add	rsi, rax
	mov	rax, rsi
	imul	rcx
	lea	rax, [rdx+rsi]
	mov	rdx, rsi
	sar	rdx, 63
	sar	rax, 7
	sub	rax, rdx
	mov	rdx, rax
	sal	rdx, 8
	sub	rdx, rax
	mov	rax, QWORD PTR .LC274[rip]
	sub	rsi, rdx
	cvtsi2sd	xmm5, rsi
	movq	xmm4, rax
	jmp	.L650
.L4709:
	comisd	xmm4, QWORD PTR .LC275[rip]
	je	.L3508
	comisd	xmm4, QWORD PTR .LC269[rip]
	je	.L4710
	comisd	xmm4, QWORD PTR .LC1908[rip]
	je	.L4711
	comisd	xmm4, QWORD PTR .LC1909[rip]
	je	.L4712
	comisd	xmm4, QWORD PTR .LC1910[rip]
	je	.L4713
.L3517:
	comisd	xmm4, QWORD PTR .LC1912[rip]
	je	.L4714
	comisd	xmm4, QWORD PTR .LC1915[rip]
	je	.L3524
	comisd	xmm4, QWORD PTR .LC1917[rip]
	je	.L4715
	comisd	xmm4, QWORD PTR .LC1918[rip]
	je	.L4716
	comisd	xmm4, QWORD PTR .LC1919[rip]
	je	.L4717
	comisd	xmm4, QWORD PTR .LC1923[rip]
	je	.L4718
.L3532:
	comisd	xmm4, QWORD PTR .LC1927[rip]
	je	.L4719
	comisd	xmm4, QWORD PTR .LC1928[rip]
	je	.L4720
	comisd	xmm4, QWORD PTR .LC1929[rip]
	je	.L3524
	comisd	xmm4, QWORD PTR .LC1930[rip]
	jne	.L4721
.L3538:
	cvtsd2si	rax, QWORD PTR C$[rip]
	movsd	QWORD PTR 1592[rbp], xmm5
	cvtsd2si	rcx, QWORD PTR X$[rip]
	cvtsd2si	rdx, QWORD PTR 134479872[rbp+rax*8]
	mov	eax, 128
	sar	rax, cl
	test	rax, rdx
	je	.L4722
	comisd	xmm5, xmm2
	je	.L4405
.L4406:
	mov	rax, QWORD PTR .LC269[rip]
	movapd	xmm5, xmm2
	movq	xmm4, rax
	jmp	.L650
.L4442:
.L1544:
	cvtsd2si	rcx, QWORD PTR 394408[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rdi, QWORD PTR 394416[rbp]
	cvtsd2si	rdx, QWORD PTR 394424[rbp]
	cvtsd2si	rax, QWORD PTR 394432[rbp]
	sal	rcx, 32
	mov	rsi, rcx
	mov	rcx, rdi
	sal	rcx, 24
	sal	rdx, 16
	add	rcx, rsi
	sal	rax, 8
	add	rdx, rcx
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 394440[rbp]
	movsd	QWORD PTR 395024[rbp], xmm0
	jmp	.L649
.L4443:
.L1546:
	cvtsd2si	rcx, QWORD PTR 394456[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rdi, QWORD PTR 394464[rbp]
	cvtsd2si	rdx, QWORD PTR 394472[rbp]
	cvtsd2si	rax, QWORD PTR 394480[rbp]
	sal	rcx, 32
	mov	rsi, rcx
	mov	rcx, rdi
	sal	rcx, 24
	sal	rdx, 16
	add	rcx, rsi
	sal	rax, 8
	add	rdx, rcx
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 394488[rbp]
	movsd	QWORD PTR 395032[rbp], xmm0
	jmp	.L649
.L4444:
.L1548:
	cvtsd2si	rsi, QWORD PTR 394848[rbp]
	mov	r8d, 1
	mov	rcx, -1
	mov	rdx, -1
	cvtsd2si	rdi, QWORD PTR 394840[rbp]
	add	rsp, 280
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	GLSCREEN
.L3500:
	comisd	xmm5, QWORD PTR .LC73[rip]
	jb	.L3502
	comisd	xmm5, QWORD PTR .LC88[rip]
	ja	.L3502
.L3503:
	movsd	xmm2, QWORD PTR .LC73[rip]
	movabs	rcx, -9187201950435737471
	subsd	xmm5, xmm2
	cvtsd2si	rsi, xmm5
	pxor	xmm5, xmm5
	mov	rax, rsi
	imul	rcx
	lea	rax, [rdx+rsi]
	mov	rdx, rsi
	sar	rdx, 63
	sar	rax, 7
	sub	rax, rdx
	mov	rdx, rax
	sal	rdx, 8
	sub	rdx, rax
	mov	rax, rsi
	sub	rax, rdx
	mov	rsi, rax
	sal	rsi, 4
	add	rsi, rax
	mov	rax, rsi
	imul	rcx
	lea	rax, [rdx+rsi]
	mov	rdx, rsi
	sar	rdx, 63
	sar	rax, 7
	sub	rax, rdx
	mov	rdx, rax
	sal	rdx, 8
	sub	rdx, rax
	mov	rax, QWORD PTR .LC273[rip]
	sub	rsi, rdx
	cvtsi2sd	xmm5, rsi
	movq	xmm4, rax
	jmp	.L650
.L4446:
.L1552:
	comisd	xmm5, xmm2
	je	.L4254
	comisd	xmm5, QWORD PTR .LC1[rip]
	je	.L4723
	comisd	xmm5, QWORD PTR .LC105[rip]
	setne	dl
	comisd	xmm5, QWORD PTR .LC106[rip]
	setne	al
	test	dl, al
	je	.L649
	comisd	xmm5, QWORD PTR .LC107[rip]
	je	.L649
	comisd	xmm5, QWORD PTR .LC108[rip]
	je	.L4256
	comisd	xmm5, QWORD PTR .LC109[rip]
	je	.L4724
	comisd	xmm5, QWORD PTR .LC110[rip]
	je	.L4725
	comisd	xmm5, QWORD PTR .LC111[rip]
	je	.L4726
	comisd	xmm5, QWORD PTR .LC5[rip]
	je	.L4727
	comisd	xmm5, QWORD PTR .LC112[rip]
	je	.L4728
	comisd	xmm5, QWORD PTR .LC113[rip]
	je	.L4729
	comisd	xmm5, QWORD PTR .LC114[rip]
	je	.L4730
	comisd	xmm5, QWORD PTR .LC115[rip]
	je	.L4731
	comisd	xmm5, QWORD PTR .LC116[rip]
	je	.L4732
	comisd	xmm5, QWORD PTR .LC117[rip]
	je	.L4733
	comisd	xmm5, QWORD PTR .LC6[rip]
	je	.L4734
	comisd	xmm5, QWORD PTR .LC119[rip]
	je	.L4735
	comisd	xmm5, QWORD PTR .LC120[rip]
	je	.L4736
	comisd	xmm5, QWORD PTR .LC121[rip]
	je	.L4737
	comisd	xmm5, QWORD PTR .LC122[rip]
	je	.L4738
	comisd	xmm5, QWORD PTR .LC123[rip]
	je	.L4739
	comisd	xmm5, QWORD PTR .LC124[rip]
	je	.L4740
	comisd	xmm5, QWORD PTR .LC125[rip]
	je	.L4741
	comisd	xmm5, QWORD PTR .LC126[rip]
	je	.L3416
	comisd	xmm5, QWORD PTR .LC127[rip]
	je	.L4742
	comisd	xmm5, QWORD PTR .LC128[rip]
	je	.L4743
	comisd	xmm5, QWORD PTR .LC129[rip]
	jne	.L649
.L3445:
	add	rsp, 280
	xor	r8d, r8d
	mov	ecx, 1
	or	rsi, -1
	pop	rbx
	lea	rdx, .LC3[rip]
	lea	rdi, FILENAME$[rip]
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_StrAssign@PLT
	.p2align 4,,10
	.p2align 3
.L3965:
	movsd	QWORD PTR 16[rsp], xmm4
	mov	rsi, QWORD PTR RASTER$[rip]
	mov	ecx, -65536
	mov	r9d, -65536
	push	0
	mov	r8d, -65536
	mov	edx, -65536
	xor	edi, edi
	push	0
	pxor	xmm1, xmm1
	pxor	xmm0, xmm0
	push	-1
	cvtsd2ss	xmm1, xmm5
	push	QWORD PTR fb_hPutAlpha@GOTPCREL[rip]
	push	6
	push	0
	movsd	QWORD PTR 56[rsp], xmm5
	call	fb_GfxPut@PLT
	add	rsp, 48
	movsd	xmm5, QWORD PTR 8[rsp]
	movsd	xmm4, QWORD PTR 16[rsp]
	jmp	.L3823
.L4452:
	movapd	xmm0, xmm5
	movsd	QWORD PTR 16[rsp], xmm4
	movsd	QWORD PTR 8[rsp], xmm5
	call	nearbyint@PLT
	movsd	xmm1, QWORD PTR .LC280[rip]
	movsd	xmm5, QWORD PTR 8[rsp]
	cvttsd2si	rax, xmm0
	movsd	xmm4, QWORD PTR 16[rsp]
	comisd	xmm0, xmm1
	jb	.L955
	subsd	xmm0, xmm1
	cvttsd2si	rax, xmm0
	btc	rax, 63
.L955:
	cmp	rax, 255
	ja	.L956
	lea	rdx, tmp$2484.14[rip]
	mov	rax, QWORD PTR [rdx+rax*8]
	jmp	.L942
.L3502:
	comisd	xmm5, QWORD PTR .LC89[rip]
	jb	.L3504
	comisd	xmm5, QWORD PTR .LC104[rip]
	ja	.L3504
.L3505:
	subsd	xmm5, QWORD PTR .LC89[rip]
	movabs	rcx, -9187201950435737471
	cvtsd2si	rsi, xmm5
	pxor	xmm5, xmm5
	mov	rax, rsi
	imul	rcx
	lea	rax, [rdx+rsi]
	mov	rdx, rsi
	sar	rdx, 63
	sar	rax, 7
	sub	rax, rdx
	mov	rdx, rax
	sal	rdx, 8
	sub	rdx, rax
	mov	rax, rsi
	sub	rax, rdx
	mov	rsi, rax
	sal	rsi, 4
	add	rsi, rax
	mov	rax, rsi
	imul	rcx
	lea	rax, [rdx+rsi]
	mov	rdx, rsi
	sar	rdx, 63
	sar	rax, 7
	sub	rax, rdx
	mov	rdx, rax
	sal	rdx, 8
	sub	rdx, rax
	mov	rax, QWORD PTR .LC272[rip]
	sub	rsi, rdx
	cvtsi2sd	xmm5, rsi
	movq	xmm4, rax
	jmp	.L650
.L4279:
.L3476:
	cvtsd2si	esi, QWORD PTR 394848[rbp]
	cvtsd2si	edi, QWORD PTR 394840[rbp]
	add	rsp, 280
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PageCopy@PLT
.L4702:
.L3473:
	lea	rcx, 240[rsp]
	lea	rdx, 112[rsp]
	mov	QWORD PTR 176[rsp], 0
	lea	rsi, 208[rsp]
	lea	rdi, 176[rsp]
	mov	QWORD PTR 208[rsp], 0
	lea	r8, 144[rsp]
	mov	QWORD PTR 240[rsp], 0
	mov	QWORD PTR 144[rsp], 0
	mov	QWORD PTR 112[rsp], 0
	call	fb_GetMouse64@PLT
	pxor	xmm0, xmm0
	pxor	xmm1, xmm1
	mov	QWORD PTR 394856[rbp], 0x000000000
	cvtsi2sd	xmm0, eax
	mov	rax, QWORD PTR 240[rsp]
	cvtsi2sd	xmm1, QWORD PTR 208[rsp]
	movsd	QWORD PTR 394576[rbp], xmm0
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, QWORD PTR 176[rsp]
	unpcklpd	xmm0, xmm1
	movups	XMMWORD PTR 394840[rbp], xmm0
	test	al, 1
	je	.L3477
	mov	rbx, QWORD PTR .LC1[rip]
	mov	QWORD PTR 394864[rbp], rbx
.L3477:
	test	al, 2
	je	.L3478
	mov	rbx, QWORD PTR .LC105[rip]
	mov	QWORD PTR 394864[rbp], rbx
.L3478:
	test	al, 4
	je	.L649
.L3479:
	mov	rax, QWORD PTR .LC107[rip]
	mov	QWORD PTR 394864[rbp], rax
	jmp	.L649
.L4721:
	comisd	xmm4, QWORD PTR .LC1931[rip]
	je	.L3416
	comisd	xmm4, QWORD PTR .LC1932[rip]
	je	.L4296
	comisd	xmm4, QWORD PTR .LC1933[rip]
	je	.L4744
	comisd	xmm4, QWORD PTR .LC1934[rip]
	je	.L4745
	comisd	xmm4, QWORD PTR .LC1935[rip]
	je	.L4746
	comisd	xmm4, QWORD PTR .LC1939[rip]
	je	.L4747
	comisd	xmm4, QWORD PTR .LC1941[rip]
	je	.L4748
	comisd	xmm4, QWORD PTR .LC276[rip]
	je	.L4749
	comisd	xmm4, QWORD PTR .LC1942[rip]
	jne	.L4750
.L3576:
	movapd	xmm0, xmm5
	movsd	QWORD PTR 16[rsp], xmm4
	movsd	QWORD PTR 8[rsp], xmm5
	call	nearbyint@PLT
	movsd	xmm1, QWORD PTR .LC280[rip]
	movsd	xmm5, QWORD PTR 8[rsp]
	cvttsd2si	rax, xmm0
	movsd	xmm4, QWORD PTR 16[rsp]
	comisd	xmm0, xmm1
	jb	.L3580
	subsd	xmm0, xmm1
	cvttsd2si	rax, xmm0
	btc	rax, 63
.L3580:
	cmp	rax, 5
	ja	.L649
	lea	rdx, tmp$2496.2[rip]
	mov	rax, QWORD PTR [rdx+rax*8]
	jmp	.L942
.L4453:
	movapd	xmm0, xmm5
	movsd	QWORD PTR 16[rsp], xmm4
	movsd	QWORD PTR 8[rsp], xmm5
	call	nearbyint@PLT
	movsd	xmm1, QWORD PTR .LC280[rip]
	movsd	xmm5, QWORD PTR 8[rsp]
	cvttsd2si	rax, xmm0
	movsd	xmm4, QWORD PTR 16[rsp]
	comisd	xmm0, xmm1
	jb	.L1216
	subsd	xmm0, xmm1
	cvttsd2si	rax, xmm0
	btc	rax, 63
.L1216:
	cmp	rax, 255
	ja	.L1474
	lea	rdx, tmp$2485.13[rip]
	mov	rax, QWORD PTR [rdx+rax*8]
	jmp	.L942
.L4722:
	comisd	xmm5, xmm2
	je	.L4406
.L4405:
	mov	rax, QWORD PTR .LC275[rip]
	movapd	xmm5, xmm2
	movq	xmm4, rax
	jmp	.L650
.L3504:
	subsd	xmm5, QWORD PTR .LC1905[rip]
	movabs	rcx, -9187201950435737471
	cvtsd2si	rsi, xmm5
	pxor	xmm5, xmm5
	mov	rax, rsi
	imul	rcx
	lea	rax, [rdx+rsi]
	mov	rdx, rsi
	sar	rdx, 63
	sar	rax, 7
	sub	rax, rdx
	mov	rdx, rax
	sal	rdx, 8
	sub	rdx, rax
	mov	rax, rsi
	sub	rax, rdx
	mov	rsi, rax
	sal	rsi, 4
	add	rsi, rax
	mov	rax, rsi
	imul	rcx
	lea	rax, [rdx+rsi]
	mov	rdx, rsi
	sar	rdx, 63
	sar	rax, 7
	sub	rax, rdx
	mov	rdx, rax
	sal	rdx, 8
	sub	rdx, rax
	mov	rax, QWORD PTR .LC271[rip]
	sub	rsi, rdx
	cvtsi2sd	xmm5, rsi
	movq	xmm4, rax
	jmp	.L650
.L4254:
.L3369:
	xor	r8d, r8d
	mov	ecx, 8
	lea	rdx, .LC1857[rip]
	mov	rsi, -1
	lea	rdi, FILENAME$[rip]
	call	fb_StrAssign@PLT
	add	rsp, 280
	xor	r8d, r8d
	mov	ecx, 5
	pop	rbx
	lea	rdx, .LC1858[rip]
	pop	rbp
	mov	rsi, -1
	pop	r12
	lea	rdi, COMPILER$[rip]
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_StrAssign@PLT
.L4723:
.L3372:
	xor	r8d, r8d
	mov	ecx, 8
	lea	rdx, .LC1857[rip]
	mov	rsi, -1
	lea	rdi, FILENAME$[rip]
	call	fb_StrAssign@PLT
	add	rsp, 280
	xor	r8d, r8d
	mov	ecx, 14
	pop	rbx
	lea	rdx, .LC1859[rip]
	pop	rbp
	mov	rsi, -1
	pop	r12
	lea	rdi, COMPILER$[rip]
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_StrAssign@PLT
.L4745:
.L3549:
	movapd	xmm0, xmm5
	movsd	QWORD PTR 16[rsp], xmm4
	movsd	QWORD PTR 8[rsp], xmm5
	call	nearbyint@PLT
	movsd	xmm1, QWORD PTR .LC280[rip]
	movsd	xmm5, QWORD PTR 8[rsp]
	cvttsd2si	rax, xmm0
	movsd	xmm4, QWORD PTR 16[rsp]
	comisd	xmm0, xmm1
	jb	.L3553
	subsd	xmm0, xmm1
	cvttsd2si	rax, xmm0
	btc	rax, 63
.L3553:
	cmp	rax, 3
	ja	.L649
	lea	rdx, tmp$2494.4[rip]
	mov	rax, QWORD PTR [rdx+rax*8]
	jmp	.L942
.L4746:
.L3551:
	cvtsd2si	rax, QWORD PTR 394984[rbp]
	movsd	xmm1, QWORD PTR 394848[rbp]
	movsd	QWORD PTR 16[rsp], xmm4
	movsd	xmm0, QWORD PTR 394856[rbp]
	movsd	xmm7, QWORD PTR 134752968[rbp+rax*8]
	movsd	xmm2, QWORD PTR 134750088[rbp+rax*8]
	mulsd	xmm7, xmm1
	mulsd	xmm2, xmm0
	subsd	xmm7, xmm2
	movsd	QWORD PTR 394872[rbp], xmm7
	mulsd	xmm1, QWORD PTR 134750088[rbp+rax*8]
	mulsd	xmm0, QWORD PTR 134752968[rbp+rax*8]
	cvtsd2si	rax, QWORD PTR 394992[rbp]
	movsd	QWORD PTR 394848[rbp], xmm7
	addsd	xmm0, xmm1
	movsd	xmm1, QWORD PTR 394840[rbp]
	movsd	QWORD PTR 394880[rbp], xmm0
	movsd	QWORD PTR 394856[rbp], xmm0
	movsd	xmm6, QWORD PTR 134752968[rbp+rax*8]
	movsd	xmm2, QWORD PTR 134750088[rbp+rax*8]
	mulsd	xmm6, xmm0
	mulsd	xmm2, xmm1
	subsd	xmm6, xmm2
	movsd	QWORD PTR 394880[rbp], xmm6
	movsd	xmm2, QWORD PTR 134750088[rbp+rax*8]
	mulsd	xmm1, QWORD PTR 134752968[rbp+rax*8]
	cvtsd2si	rax, QWORD PTR 395000[rbp]
	movsd	QWORD PTR 395024[rbp], xmm6
	mulsd	xmm2, xmm0
	unpcklpd	xmm0, xmm0
	addsd	xmm1, xmm2
	movsd	QWORD PTR 394864[rbp], xmm1
	movsd	QWORD PTR 394840[rbp], xmm1
	movsd	xmm3, QWORD PTR 134752968[rbp+rax*8]
	movsd	xmm2, QWORD PTR 134750088[rbp+rax*8]
	mulsd	xmm3, xmm1
	mulsd	xmm2, xmm7
	subsd	xmm3, xmm2
	movsd	QWORD PTR 394864[rbp], xmm3
	movsd	xmm2, QWORD PTR 134752968[rbp+rax*8]
	movsd	xmm8, QWORD PTR 134750088[rbp+rax*8]
	movsd	QWORD PTR 395008[rbp], xmm3
	mulsd	xmm8, xmm1
	unpcklpd	xmm1, xmm7
	mulsd	xmm2, xmm7
	addsd	xmm2, xmm8
	movsd	xmm8, QWORD PTR 394888[rbp]
	mulsd	xmm3, xmm8
	movsd	QWORD PTR 394872[rbp], xmm2
	movsd	QWORD PTR 395016[rbp], xmm2
	mulsd	xmm2, xmm8
	addsd	xmm6, QWORD PTR 394912[rbp]
	movupd	xmm7, XMMWORD PTR 394896[rbp]
	movsd	QWORD PTR 8[rsp], xmm5
	divsd	xmm3, xmm6
	divsd	xmm2, xmm6
	addsd	xmm3, QWORD PTR 394896[rbp]
	movsd	QWORD PTR 394936[rbp], xmm3
	addsd	xmm2, QWORD PTR 394904[rbp]
	movsd	QWORD PTR 394944[rbp], xmm2
	movupd	xmm2, XMMWORD PTR 394888[rbp]
	unpcklpd	xmm2, xmm2
	mulpd	xmm1, xmm2
	movupd	xmm2, XMMWORD PTR 394904[rbp]
	unpckhpd	xmm2, xmm2
	addpd	xmm2, xmm0
	divpd	xmm1, xmm2
	movapd	xmm0, xmm1
	addpd	xmm0, xmm7
	movups	XMMWORD PTR 394952[rbp], xmm0
	movapd	xmm0, xmm5
	call	nearbyint@PLT
	movsd	xmm1, QWORD PTR .LC280[rip]
	movsd	xmm5, QWORD PTR 8[rsp]
	cvttsd2si	rax, xmm0
	movsd	xmm4, QWORD PTR 16[rsp]
	comisd	xmm0, xmm1
	jb	.L3562
	subsd	xmm0, xmm1
	cvttsd2si	rax, xmm0
	btc	rax, 63
.L3562:
	cmp	rax, 6
	ja	.L649
	lea	rdx, tmp$2495.3[rip]
	mov	rax, QWORD PTR [rdx+rax*8]
	jmp	.L942
.L4458:
	cmp	DWORD PTR 40[rsp], 0
	js	.L1585
	mov	edi, DWORD PTR 40[rsp]
	cvtsd2ss	xmm0, xmm0
	call	[QWORD PTR GLUNIFORM1F$[rip]]
	jmp	.L1585
.L3521:
.L3524:
	mov	edx, 1
	lea	rsi, STRCODE$[rip]
	mov	edi, 1
	call	fb_PrintString@PLT
	add	rsp, 280
	xor	r8d, r8d
	mov	ecx, 1
	pop	rbx
	lea	rdx, .LC3[rip]
	pop	rbp
	or	rsi, -1
	pop	r12
	lea	rdi, STRCODE$[rip]
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_StrAssign@PLT
.L4750:
	comisd	xmm4, QWORD PTR .LC1943[rip]
	je	.L4751
	comisd	xmm4, QWORD PTR .LC1944[rip]
	je	.L4752
	comisd	xmm4, QWORD PTR .LC1945[rip]
	je	.L4753
	comisd	xmm4, QWORD PTR .LC1946[rip]
	je	.L4754
	comisd	xmm4, QWORD PTR .LC1954[rip]
	je	.L4755
	comisd	xmm4, QWORD PTR .LC1955[rip]
	je	.L4756
	comisd	xmm4, QWORD PTR .LC1956[rip]
	je	.L4757
	comisd	xmm4, QWORD PTR .LC1957[rip]
	je	.L4758
	comisd	xmm4, QWORD PTR .LC1958[rip]
	je	.L4759
	comisd	xmm4, QWORD PTR .LC1959[rip]
	je	.L4760
	comisd	xmm4, QWORD PTR .LC1960[rip]
	je	.L4761
	comisd	xmm4, QWORD PTR .LC1961[rip]
	je	.L4762
	comisd	xmm4, QWORD PTR .LC1962[rip]
	je	.L4763
	comisd	xmm4, QWORD PTR .LC1963[rip]
	je	.L4764
	comisd	xmm4, QWORD PTR .LC1964[rip]
	je	.L4765
	comisd	xmm4, QWORD PTR .LC1965[rip]
	je	.L4766
	comisd	xmm4, QWORD PTR .LC1966[rip]
	je	.L4767
	comisd	xmm4, QWORD PTR .LC1967[rip]
	je	.L4768
	comisd	xmm4, QWORD PTR .LC1968[rip]
	je	.L4769
	comisd	xmm4, QWORD PTR .LC1969[rip]
	je	.L4770
	comisd	xmm4, QWORD PTR .LC1970[rip]
	je	.L4771
	comisd	xmm4, QWORD PTR .LC1971[rip]
	je	.L4772
	comisd	xmm4, QWORD PTR .LC1972[rip]
	je	.L4773
	comisd	xmm4, QWORD PTR .LC1973[rip]
	je	.L4774
	comisd	xmm4, QWORD PTR .LC1974[rip]
	je	.L4775
	comisd	xmm4, QWORD PTR .LC1975[rip]
	je	.L4776
	comisd	xmm4, QWORD PTR .LC1976[rip]
	je	.L3674
	comisd	xmm4, QWORD PTR .LC1977[rip]
	je	.L3674
	comisd	xmm4, QWORD PTR .LC1978[rip]
	je	.L3674
	comisd	xmm4, QWORD PTR .LC1979[rip]
	je	.L3680
	comisd	xmm4, QWORD PTR .LC1980[rip]
	je	.L3680
	comisd	xmm4, QWORD PTR .LC1981[rip]
	je	.L3680
	comisd	xmm4, QWORD PTR .LC1982[rip]
	je	.L3686
	comisd	xmm4, QWORD PTR .LC1983[rip]
	je	.L3686
	comisd	xmm4, QWORD PTR .LC1984[rip]
	je	.L3686
	comisd	xmm4, QWORD PTR .LC1985[rip]
	je	.L3692
	comisd	xmm4, QWORD PTR .LC1986[rip]
	je	.L3692
	comisd	xmm4, QWORD PTR .LC1987[rip]
	je	.L3692
	comisd	xmm4, QWORD PTR .LC1988[rip]
	je	.L3698
	comisd	xmm4, QWORD PTR .LC1989[rip]
	je	.L4777
	comisd	xmm4, QWORD PTR .LC1990[rip]
	je	.L3703
	comisd	xmm4, QWORD PTR .LC1991[rip]
	je	.L4778
	comisd	xmm4, QWORD PTR .LC1992[rip]
	je	.L4779
	comisd	xmm4, QWORD PTR .LC1993[rip]
	je	.L4780
	comisd	xmm4, QWORD PTR .LC1994[rip]
	je	.L4781
	comisd	xmm4, QWORD PTR .LC1995[rip]
	je	.L4782
	comisd	xmm4, QWORD PTR .LC1996[rip]
	je	.L4783
	comisd	xmm4, QWORD PTR .LC1997[rip]
	je	.L3698
	comisd	xmm4, QWORD PTR .LC1998[rip]
	je	.L4352
	comisd	xmm4, QWORD PTR .LC1999[rip]
	je	.L3703
	comisd	xmm4, QWORD PTR .LC2000[rip]
	je	.L4353
	comisd	xmm4, QWORD PTR .LC2001[rip]
	je	.L4784
	comisd	xmm4, QWORD PTR .LC2002[rip]
	je	.L3726
	comisd	xmm4, QWORD PTR .LC2003[rip]
	je	.L3730
	comisd	xmm4, QWORD PTR .LC2004[rip]
	je	.L4785
	comisd	xmm4, QWORD PTR .LC2005[rip]
	je	.L3726
	comisd	xmm4, QWORD PTR .LC2006[rip]
	je	.L3730
	comisd	xmm4, QWORD PTR .LC2007[rip]
	je	.L3730
	comisd	xmm4, QWORD PTR .LC2008[rip]
	je	.L4356
	comisd	xmm4, QWORD PTR .LC2009[rip]
	je	.L4786
	comisd	xmm4, QWORD PTR .LC2010[rip]
	je	.L4787
	comisd	xmm4, QWORD PTR .LC2011[rip]
	je	.L4788
	comisd	xmm4, QWORD PTR .LC2012[rip]
	je	.L4789
	comisd	xmm4, QWORD PTR .LC2013[rip]
	je	.L4790
	comisd	xmm4, QWORD PTR .LC2014[rip]
	je	.L4791
	comisd	xmm4, QWORD PTR .LC2015[rip]
	je	.L4792
	comisd	xmm4, QWORD PTR .LC2016[rip]
	je	.L4793
	comisd	xmm4, QWORD PTR .LC2017[rip]
	je	.L4794
	comisd	xmm4, QWORD PTR .LC2018[rip]
	je	.L4795
	comisd	xmm4, QWORD PTR .LC2019[rip]
	je	.L4796
	comisd	xmm4, QWORD PTR .LC2020[rip]
	je	.L4797
	comisd	xmm4, QWORD PTR .LC2021[rip]
	je	.L4798
	comisd	xmm4, QWORD PTR .LC2022[rip]
	je	.L4799
	comisd	xmm4, QWORD PTR .LC2023[rip]
	je	.L4800
	comisd	xmm4, QWORD PTR .LC2024[rip]
	je	.L4801
	comisd	xmm4, QWORD PTR .LC2025[rip]
	je	.L4802
	comisd	xmm4, QWORD PTR .LC2026[rip]
	je	.L4803
	comisd	xmm4, QWORD PTR .LC2027[rip]
	je	.L4804
	comisd	xmm4, QWORD PTR .LC2028[rip]
	je	.L4805
	comisd	xmm4, QWORD PTR .LC2029[rip]
	je	.L4806
	comisd	xmm4, QWORD PTR .LC2030[rip]
	je	.L4807
	comisd	xmm4, QWORD PTR .LC2031[rip]
	je	.L4808
	comisd	xmm4, QWORD PTR .LC2032[rip]
	je	.L4809
	comisd	xmm4, QWORD PTR .LC2033[rip]
	je	.L4810
	comisd	xmm4, QWORD PTR .LC2034[rip]
	je	.L4811
	comisd	xmm4, QWORD PTR .LC2035[rip]
	je	.L4812
	comisd	xmm4, QWORD PTR .LC2036[rip]
	je	.L4813
	comisd	xmm4, QWORD PTR .LC2037[rip]
	je	.L4814
	comisd	xmm4, QWORD PTR .LC2038[rip]
	je	.L4815
	comisd	xmm4, QWORD PTR .LC2039[rip]
	je	.L4816
	comisd	xmm4, QWORD PTR .LC2040[rip]
	je	.L4817
	comisd	xmm4, QWORD PTR .LC2041[rip]
	je	.L4818
	comisd	xmm4, QWORD PTR .LC2042[rip]
	je	.L4819
	comisd	xmm4, QWORD PTR .LC2043[rip]
	je	.L4820
	comisd	xmm4, QWORD PTR .LC2044[rip]
	je	.L4821
	comisd	xmm4, QWORD PTR .LC2045[rip]
	je	.L4822
	comisd	xmm4, QWORD PTR .LC2046[rip]
	je	.L4394
	comisd	xmm4, QWORD PTR .LC2047[rip]
	jne	.L3823
.L3824:
	cvtsd2si	rdx, QWORD PTR 397048[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	r9, QWORD PTR 397064[rbp]
	cvtsd2si	r8, QWORD PTR 397072[rbp]
	cvtsd2si	rdi, QWORD PTR 397080[rbp]
	cvtsd2si	rsi, QWORD PTR 397088[rbp]
	mov	rax, rdx
	sal	rdx, 48
	cvtsd2si	rcx, QWORD PTR 397096[rbp]
	sal	rax, 56
	add	rax, rdx
	mov	rdx, r9
	sal	rdx, 40
	sal	rdi, 24
	add	rax, rdx
	mov	rdx, r8
	sal	rsi, 16
	sal	rdx, 32
	sal	rcx, 8
	add	rax, rdx
	add	rax, rdi
	add	rax, rsi
	add	rax, rcx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 397104[rbp]
	movsd	QWORD PTR 397040[rbp], xmm0
	jmp	.L649
.L4710:
.L3507:
	pxor	xmm0, xmm0
	pxor	xmm3, xmm3
	pxor	xmm2, xmm2
	xor	r8d, r8d
	pxor	xmm1, xmm1
	cvtsd2ss	xmm0, QWORD PTR 394840[rbp]
	cvtsd2si	rsi, QWORD PTR 394832[rbp]
	cvtsd2ss	xmm3, QWORD PTR 394872[rbp]
	cvtsd2ss	xmm2, QWORD PTR 394864[rbp]
	mov	ecx, 65535
	mov	edx, 2
	cvtsd2ss	xmm1, QWORD PTR 394848[rbp]
	mov	rdi, QWORD PTR FGIMAGE$[rip]
	add	rsp, 280
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_GfxLine@PLT
.L3497:
.L3508:
	pxor	xmm0, xmm0
	pxor	xmm3, xmm3
	pxor	xmm2, xmm2
	xor	r8d, r8d
	pxor	xmm1, xmm1
	cvtsd2ss	xmm0, QWORD PTR 394840[rbp]
	cvtsd2si	rsi, QWORD PTR 394824[rbp]
	cvtsd2ss	xmm3, QWORD PTR 394872[rbp]
	cvtsd2ss	xmm2, QWORD PTR 394864[rbp]
	mov	ecx, 65535
	mov	edx, 2
	cvtsd2ss	xmm1, QWORD PTR 394848[rbp]
	mov	rdi, QWORD PTR FGIMAGE$[rip]
	add	rsp, 280
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_GfxLine@PLT
.L4712:
.L3512:
	xor	r8d, r8d
	xor	ecx, ecx
	xor	edx, edx
	mov	esi, 8
	xor	edi, edi
	call	fb_GfxScreen@PLT
	xor	eax, eax
	mov	ecx, 6
	or	r8, -1
	lea	r9, 240[rsp]
	mov	edx, 6
	lea	rsi, .LC1911[rip]
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	lea	rcx, STRCODE$[rip]
	call	fb_StrConcat@PLT
	mov	rdi, rax
	call	fb_Shell@PLT
	xor	r8d, r8d
	mov	ecx, 1
	lea	rdx, .LC3[rip]
	or	rsi, -1
	lea	rdi, STRCODE$[rip]
	call	fb_StrAssign@PLT
	xor	r9d, r9d
	mov	r8d, 65
	xor	ecx, ecx
	mov	edx, 32
	mov	esi, 1080
	mov	edi, 1920
	call	fb_GfxScreenRes@PLT
	mov	edi, -65536
	call	fb_Cls@PLT
	xor	esi, esi
	lea	rdi, .LC3[rip]
	call	fb_StrAllocTempDescZEx@PLT
	pxor	xmm1, xmm1
	xor	r8d, r8d
	xor	edx, edx
	mov	rcx, rax
	mov	r9d, 1073741828
	mov	esi, -16777216
	xor	edi, edi
	movaps	xmm0, xmm1
	call	fb_GfxPaint@PLT
	movsd	xmm6, QWORD PTR .LC410[rip]
	mov	QWORD PTR OFFSET$[rip], 0x000000000
	movsd	xmm2, QWORD PTR .LC73[rip]
	movsd	xmm3, QWORD PTR .LC1[rip]
	movq	rbx, xmm6
.L3516:
	movsd	xmm0, QWORD PTR 395608[rbp]
	movapd	xmm1, xmm2
	mov	rdi, rbp
	addsd	xmm0, QWORD PTR OFFSET$[rip]
	movsd	QWORD PTR 16[rsp], xmm3
	movsd	QWORD PTR 8[rsp], xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm3, QWORD PTR 16[rsp]
	movq	xmm7, rbx
	movsd	xmm0, QWORD PTR OFFSET$[rip]
	movsd	xmm2, QWORD PTR 8[rsp]
	movapd	xmm1, xmm0
	comisd	xmm7, xmm0
	addsd	xmm1, xmm3
	movsd	QWORD PTR OFFSET$[rip], xmm1
	jnb	.L3516
	jmp	.L649
.L4711:
.L3510:
	xor	r8d, r8d
	xor	ecx, ecx
	xor	edx, edx
	mov	esi, 8
	xor	edi, edi
	call	fb_GfxScreen@PLT
	lea	rdi, STRCODE$[rip]
	call	fb_Chain@PLT
	xor	r8d, r8d
	mov	ecx, 1
	lea	rdx, .LC3[rip]
	or	rsi, -1
	lea	rdi, STRCODE$[rip]
	call	fb_StrAssign@PLT
	xor	r9d, r9d
	mov	r8d, 65
	xor	ecx, ecx
	mov	edx, 32
	mov	esi, 1080
	mov	edi, 1920
	call	fb_GfxScreenRes@PLT
	mov	edi, -65536
	call	fb_Cls@PLT
	xor	esi, esi
	lea	rdi, .LC3[rip]
	call	fb_StrAllocTempDescZEx@PLT
	pxor	xmm1, xmm1
	xor	r8d, r8d
	xor	edx, edx
	mov	rcx, rax
	mov	r9d, 1073741828
	mov	esi, -16777216
	xor	edi, edi
	movaps	xmm0, xmm1
	call	fb_GfxPaint@PLT
	movsd	xmm6, QWORD PTR .LC410[rip]
	mov	QWORD PTR OFFSET$[rip], 0x000000000
	movsd	xmm2, QWORD PTR .LC73[rip]
	movsd	xmm3, QWORD PTR .LC1[rip]
	movq	rbx, xmm6
.L3513:
	movsd	xmm0, QWORD PTR 395608[rbp]
	movapd	xmm1, xmm2
	mov	rdi, rbp
	addsd	xmm0, QWORD PTR OFFSET$[rip]
	movsd	QWORD PTR 16[rsp], xmm3
	movsd	QWORD PTR 8[rsp], xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm3, QWORD PTR 16[rsp]
	movq	xmm7, rbx
	movsd	xmm0, QWORD PTR OFFSET$[rip]
	movsd	xmm2, QWORD PTR 8[rsp]
	movapd	xmm1, xmm0
	comisd	xmm7, xmm0
	addsd	xmm1, xmm3
	movsd	QWORD PTR OFFSET$[rip], xmm1
	jnb	.L3513
	jmp	.L649
.L4719:
.L3534:
	movsd	QWORD PTR SWCH$[rip], xmm5
	jmp	.L649
.L4718:
.L3530:
	lea	rdi, STRCODE$[rip]
	call	fb_Shell@PLT
	add	rsp, 280
	xor	r8d, r8d
	mov	ecx, 1
	pop	rbx
	lea	rdx, .LC3[rip]
	pop	rbp
	or	rsi, -1
	pop	r12
	lea	rdi, STRCODE$[rip]
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_StrAssign@PLT
.L4717:
.L3528:
	xor	r8d, r8d
	xor	ecx, ecx
	xor	edx, edx
	mov	esi, 8
	xor	edi, edi
	xor	ebx, ebx
	call	fb_GfxScreen@PLT
	mov	eax, ebx
	mov	ecx, 6
	or	r8, -1
	lea	r9, 144[rsp]
	mov	edx, 17
	lea	rsi, .LC1924[rip]
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	lea	rcx, STRCODE$[rip]
	call	fb_StrConcat@PLT
	mov	ecx, 6
	mov	r8d, 2
	lea	r9, 176[rsp]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	lea	rcx, .LC171[rip]
	call	fb_StrConcat@PLT
	mov	ecx, 6
	mov	r8d, 7
	lea	r9, 208[rsp]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	lea	rcx, .LC1925[rip]
	call	fb_StrConcat@PLT
	mov	rdi, rax
	call	fb_Shell@PLT
	mov	eax, ebx
	mov	ecx, 6
	or	r8, -1
	lea	r9, 240[rsp]
	mov	edx, 4
	lea	rsi, .LC1926[rip]
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	lea	rcx, STRCODE$[rip]
	call	fb_StrConcat@PLT
	mov	rdi, rax
	call	fb_Shell@PLT
	xor	r8d, r8d
	mov	ecx, 1
	lea	rdx, .LC3[rip]
	or	rsi, -1
	lea	rdi, STRCODE$[rip]
	call	fb_StrAssign@PLT
	xor	r9d, r9d
	mov	r8d, 65
	xor	ecx, ecx
	mov	edx, 32
	mov	esi, 1080
	mov	edi, 1920
	call	fb_GfxScreenRes@PLT
	mov	edi, -65536
	call	fb_Cls@PLT
	xor	esi, esi
	lea	rdi, .LC3[rip]
	call	fb_StrAllocTempDescZEx@PLT
	pxor	xmm1, xmm1
	xor	r8d, r8d
	xor	edx, edx
	mov	rcx, rax
	mov	r9d, 1073741828
	mov	esi, -16777216
	xor	edi, edi
	movaps	xmm0, xmm1
	call	fb_GfxPaint@PLT
	movsd	xmm6, QWORD PTR .LC410[rip]
	mov	QWORD PTR OFFSET$[rip], 0x000000000
	movsd	xmm2, QWORD PTR .LC73[rip]
	mov	rbx, QWORD PTR .LC409[rip]
	movsd	xmm3, QWORD PTR .LC1[rip]
	movq	r15, xmm6
.L3531:
	movq	xmm0, rbx
	movapd	xmm1, xmm2
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm3
	addsd	xmm0, QWORD PTR SYS_OFFSET$[rip]
	movsd	QWORD PTR 8[rsp], xmm2
	cvtsd2si	rax, xmm0
	movsd	xmm0, QWORD PTR 0[rbp+rax*8]
	addsd	xmm0, QWORD PTR OFFSET$[rip]
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm3, QWORD PTR 16[rsp]
	movq	xmm7, r15
	movsd	xmm0, QWORD PTR OFFSET$[rip]
	movsd	xmm2, QWORD PTR 8[rsp]
	movapd	xmm1, xmm0
	comisd	xmm7, xmm0
	addsd	xmm1, xmm3
	movsd	QWORD PTR OFFSET$[rip], xmm1
	jnb	.L3531
	jmp	.L649
.L4716:
.L3526:
	xor	ebx, ebx
	mov	ecx, 6
	or	r8, -1
	mov	edx, 6
	lea	r9, 144[rsp]
	mov	eax, ebx
	lea	rsi, .LC1920[rip]
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	lea	rcx, STRCODE$[rip]
	call	fb_StrConcat@PLT
	mov	ecx, 6
	or	rdx, -1
	lea	r9, 176[rsp]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	r8d, 15
	rep stosd
	mov	rdi, r9
	lea	rcx, .LC1921[rip]
	call	fb_StrConcat@PLT
	mov	ecx, 6
	or	r8, -1
	lea	r9, 208[rsp]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	or	rdx, -1
	rep stosd
	mov	rdi, r9
	lea	rcx, STRCODE$[rip]
	call	fb_StrConcat@PLT
	mov	ecx, 6
	or	rdx, -1
	lea	r9, 240[rsp]
	mov	rsi, rax
	mov	rdi, r9
	mov	eax, ebx
	mov	r8d, 5
	rep stosd
	mov	rdi, r9
	lea	rcx, .LC1922[rip]
	call	fb_StrConcat@PLT
	mov	rdi, rax
	call	fb_Shell@PLT
	xor	r8d, r8d
	mov	ecx, 1
	lea	rdx, .LC3[rip]
	or	rsi, -1
	lea	rdi, STRCODE$[rip]
	call	fb_StrAssign@PLT
	jmp	.L649
.L1558:
	lea	rsi, FILENAME$[rip]
	mov	rdi, r14
	call	_ZN9SHADERTOY11COMPILEFILEER8FBSTRING
	mov	r10d, eax
	test	al, al
	je	.L3866
	lea	r9, 144[rsp]
	xor	eax, eax
	mov	ecx, 6
	mov	r8d, 8
	mov	rdi, r9
	or	rdx, -1
	lea	rsi, FILENAME$[rip]
	rep stosd
	mov	rdi, r9
	lea	rcx, .LC394[rip]
	call	fb_StrConcat@PLT
	mov	rdi, rax
	call	fb_GfxSetWindowTitle@PLT
	mov	edi, DWORD PTR 244[rsp]
	call	[QWORD PTR GLUSEPROGRAM$[rip]]
	pxor	xmm0, xmm0
	lea	rsi, 112[rsp]
	mov	edi, 4
	movaps	XMMWORD PTR 112[rsp], xmm0
	call	glGenTextures@PLT
	jmp	.L1571
.L4459:
	cmp	rdx, QWORD PTR 16[rsp]
	jne	.L1589
	cmp	QWORD PTR 24[rsp], rax
	jne	.L1589
	jmp	.L1595
.L4457:
	xor	r8d, r8d
	mov	ecx, 1
	or	rsi, -1
	lea	rdx, .LC3[rip]
	lea	rdi, STRCODE$[rip]
	call	fb_StrAssign@PLT
	xor	r9d, r9d
	mov	r8d, 65
	mov	ecx, 7
	mov	edx, 32
	mov	esi, 1080
	mov	edi, 1920
	call	fb_GfxScreenRes@PLT
	mov	edi, -65536
	call	fb_Cls@PLT
	movsd	xmm6, QWORD PTR .LC410[rip]
	mov	QWORD PTR OFFSET$[rip], 0x000000000
	movsd	xmm2, QWORD PTR .LC73[rip]
	mov	rbx, QWORD PTR .LC409[rip]
	movsd	xmm3, QWORD PTR .LC1[rip]
	movq	r15, xmm6
.L1581:
	movq	xmm0, rbx
	movapd	xmm1, xmm2
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm3
	addsd	xmm0, QWORD PTR SYS_OFFSET$[rip]
	movsd	QWORD PTR 8[rsp], xmm2
	cvtsd2si	rax, xmm0
	movsd	xmm0, QWORD PTR 0[rbp+rax*8]
	addsd	xmm0, QWORD PTR OFFSET$[rip]
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm3, QWORD PTR 16[rsp]
	movq	xmm7, r15
	movsd	xmm0, QWORD PTR OFFSET$[rip]
	movsd	xmm2, QWORD PTR 8[rsp]
	movapd	xmm1, xmm0
	comisd	xmm7, xmm0
	addsd	xmm1, xmm3
	movsd	QWORD PTR OFFSET$[rip], xmm1
	jnb	.L1581
.L1597:
	mov	rdi, r14
	call	_ZN9SHADERTOYD1Ev
	jmp	.L649
.L4715:
.L3523:
	mov	edi, 1
	call	fb_FileClose@PLT
	add	rsp, 280
	xor	r8d, r8d
	mov	ecx, 1
	pop	rbx
	lea	rdx, .LC3[rip]
	pop	rbp
	or	rsi, -1
	pop	r12
	lea	rdi, STRCODE$[rip]
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_StrAssign@PLT
.L4714:
.L3519:
	lea	r9, 240[rsp]
	xor	eax, eax
	mov	ecx, 6
	or	rdx, -1
	mov	rdi, r9
	mov	r8d, 5
	lea	rsi, STRCODE$[rip]
	rep stosd
	mov	rdi, r9
	lea	rcx, .LC1916[rip]
	call	fb_StrConcat@PLT
	xor	ecx, ecx
	xor	edx, edx
	xor	r9d, r9d
	mov	rdi, rax
	mov	r8d, 1
	mov	esi, 3
	call	fb_FileOpen@PLT
	xor	r8d, r8d
	mov	ecx, 1
	lea	rdx, .LC3[rip]
	or	rsi, -1
	lea	rdi, STRCODE$[rip]
	call	fb_StrAssign@PLT
	jmp	.L649
.L4713:
.L3515:
	xor	r8d, r8d
	xor	ecx, ecx
	xor	edx, edx
	xor	edi, edi
	mov	esi, 8
	xor	ebx, ebx
	call	fb_GfxScreen@PLT
	mov	eax, ebx
	mov	ecx, 6
	or	r8, -1
	lea	r9, 208[rsp]
	mov	edx, 8
	lea	rsi, .LC1913[rip]
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	lea	rcx, STRCODE$[rip]
	call	fb_StrConcat@PLT
	mov	ecx, 6
	or	rdx, -1
	lea	r9, 240[rsp]
	mov	rdi, r9
	mov	rsi, rax
	mov	eax, ebx
	mov	r8d, 19
	rep stosd
	mov	rdi, r9
	lea	rcx, .LC1914[rip]
	call	fb_StrConcat@PLT
	mov	rdi, rax
	call	fb_Shell@PLT
	xor	r8d, r8d
	or	rsi, -1
	mov	ecx, 1
	lea	rdx, .LC3[rip]
	lea	rdi, STRCODE$[rip]
	call	fb_StrAssign@PLT
	xor	r9d, r9d
	xor	ecx, ecx
	mov	r8d, 65
	mov	edx, 32
	mov	esi, 1080
	mov	edi, 1920
	call	fb_GfxScreenRes@PLT
	mov	edi, -65536
	call	fb_Cls@PLT
	xor	esi, esi
	lea	rdi, .LC3[rip]
	call	fb_StrAllocTempDescZEx@PLT
	pxor	xmm1, xmm1
	xor	r8d, r8d
	xor	edx, edx
	mov	rcx, rax
	mov	r9d, 1073741828
	mov	esi, -16777216
	xor	edi, edi
	movaps	xmm0, xmm1
	call	fb_GfxPaint@PLT
	jmp	.L649
.L4720:
.L3536:
	cvtsd2si	rsi, xmm5
	mov	edi, 1
	xor	eax, eax
	call	fb_CHR@PLT
	xor	esi, esi
	mov	rdi, rax
	call	fb_StrLcase2@PLT
	xor	r8d, r8d
	or	rcx, -1
	or	rsi, -1
	add	rsp, 280
	mov	rdx, rax
	lea	rdi, STRCODE$[rip]
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_StrConcatAssign@PLT
.L4724:
.L3377:
	xor	r8d, r8d
	mov	ecx, 8
	or	rsi, -1
	lea	rdx, .LC1861[rip]
	lea	rdi, FILENAME$[rip]
	call	fb_StrAssign@PLT
	add	rsp, 280
	xor	r8d, r8d
	mov	ecx, 6
	pop	rbx
	lea	rdx, .LC1862[rip]
	pop	rbp
	or	rsi, -1
	pop	r12
	lea	rdi, COMPILER$[rip]
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_StrAssign@PLT
.L4256:
.L3374:
	xor	r8d, r8d
	mov	ecx, 9
	or	rsi, -1
	lea	rdx, .LC1860[rip]
	lea	rdi, FILENAME$[rip]
	call	fb_StrAssign@PLT
	add	rsp, 280
	xor	r8d, r8d
	mov	ecx, 1
	pop	rbx
	lea	rdx, .LC3[rip]
	pop	rbp
	or	rsi, -1
	pop	r12
	lea	rdi, COMPILER$[rip]
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_StrAssign@PLT
.L4456:
	xor	r8d, r8d
	mov	ecx, 32
	mov	edx, -16777216
	xor	r15d, r15d
	mov	esi, 512
	mov	edi, 512
	call	fb_GfxImageCreate@PLT
	mov	QWORD PTR 32[rsp], rbp
	movss	xmm2, DWORD PTR .LC396[rip]
	mov	QWORD PTR FGIMAGE$[rip], rax
.L1562:
	mov	rdx, r15
	pxor	xmm1, xmm1
	mov	rbp, r15
	xor	ebx, ebx
	sal	rdx, 9
	cvtsi2sd	xmm1, rdx
	mulsd	xmm1, QWORD PTR .LC395[rip]
	cvtsd2ss	xmm1, xmm1
	.p2align 4,,10
	.p2align 3
.L1563:
	pxor	xmm0, xmm0
	mov	r8d, 1
	mov	ecx, 65535
	mov	edx, 2
	cvtsi2sd	xmm0, rbx
	mulsd	xmm0, QWORD PTR .LC395[rip]
	mov	esi, -16777216
	cvtsd2ss	xmm0, xmm0
	test	bpl, 1
	jne	.L4407
.L1564:
	mov	esi, -1
.L4407:
	mov	rdi, QWORD PTR FGIMAGE$[rip]
	movaps	xmm3, xmm2
	movss	DWORD PTR 8[rsp], xmm1
	add	rbx, 512
	add	rbp, 1
	call	fb_GfxLine@PLT
	cmp	rbx, 16896
	movss	xmm1, DWORD PTR 8[rsp]
	movss	xmm2, DWORD PTR .LC396[rip]
	jne	.L1563
.L1566:
.L1567:
	add	r15, 1
	cmp	r15, 33
	jne	.L1562
.L1568:
	mov	esi, 9
	lea	rdi, .LC397[rip]
	mov	rbp, QWORD PTR 32[rsp]
	call	fb_StrAllocTempDescZEx@PLT
	pxor	xmm1, xmm1
	xor	r8d, r8d
	mov	rdi, QWORD PTR FGIMAGE$[rip]
	push	r9
	movaps	xmm0, xmm1
	mov	rdx, rax
	xor	r9d, r9d
	push	0
	mov	ecx, -65536
	mov	esi, 4
	push	0
	push	0
	call	fb_GfxDrawString@PLT
	add	rsp, 32
	mov	esi, 13
	lea	rdi, .LC398[rip]
	call	fb_StrAllocTempDescZEx@PLT
	xor	r9d, r9d
	xor	r8d, r8d
	mov	ecx, -16711936
	movss	xmm1, DWORD PTR .LC399[rip]
	push	r10
	mov	rdx, rax
	mov	esi, 4
	push	0
	mov	rdi, QWORD PTR FGIMAGE$[rip]
	push	0
	movaps	xmm0, xmm1
	push	0
	call	fb_GfxDrawString@PLT
	add	rsp, 32
	jmp	.L1570
.L4701:
.L3198:
	mov	esi, 12
	lea	rdi, .LC1699[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4744:
.L3547:
	mov	rax, QWORD PTR .LC270[rip]
	mov	rdi, rbp
	pxor	xmm1, xmm1
	movq	xmm0, rax
	call	_ZN8MEMORY_T6POKE64Edd
	add	rsp, 280
	xor	r8d, r8d
	mov	ecx, 1
	pop	rbx
	lea	rdx, .LC3[rip]
	pop	rbp
	or	rsi, -1
	pop	r12
	lea	rdi, FILENAME$[rip]
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_StrAssign@PLT
.L4296:
.L3544:
	cvtsd2si	rsi, xmm5
	mov	edi, 1
	xor	eax, eax
	call	fb_CHR@PLT
	xor	esi, esi
	mov	rdi, rax
	call	fb_StrLcase2@PLT
	xor	r8d, r8d
	or	rcx, -1
	or	rsi, -1
	add	rsp, 280
	mov	rdx, rax
	lea	rdi, FILENAME$[rip]
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_StrConcatAssign@PLT
.L3825:
	movsd	xmm1, QWORD PTR .LC313[rip]
	addsd	xmm1, xmm0
	comisd	xmm1, xmm4
	ja	.L3851
	addsd	xmm0, QWORD PTR .LC2056[rip]
	comisd	xmm4, xmm0
	jbe	.L649
.L3851:
	comisd	xmm4, QWORD PTR .LC1950[rip]
	jb	.L3853
	comisd	xmm4, QWORD PTR .LC1951[rip]
	jbe	.L4823
.L3853:
	comisd	xmm4, QWORD PTR .LC261[rip]
	jb	.L3857
	comisd	xmm4, QWORD PTR .LC260[rip]
	jbe	.L3855
.L3857:
	comisd	xmm4, QWORD PTR .LC262[rip]
	ja	.L3859
	comisd	xmm4, QWORD PTR .LC263[rip]
	jnb	.L3855
.L3859:
	comisd	xmm4, QWORD PTR .LC265[rip]
	jb	.L649
	comisd	xmm4, QWORD PTR .LC264[rip]
	ja	.L649
.L3855:
.L1476:
.L3860:
.L3861:
.L3862:
.L3863:
.L3864:
	movsd	QWORD PTR 0[rbp+rbx*8], xmm5
	jmp	.L649
.L4749:
.L3574:
	movsd	xmm0, QWORD PTR YS$[rip]
	movsd	xmm1, QWORD PTR .LC111[rip]
	add	rsp, 280
	pop	rbx
	pop	rbp
	cvtsd2si	edi, xmm0
	addsd	xmm1, xmm0
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	cvtsd2si	esi, xmm1
	jmp	fb_GfxUnlock@PLT
.L1559:
	lea	r9, 144[rsp]
	xor	eax, eax
	mov	ecx, 6
	mov	r8d, 8
	mov	rdi, r9
	or	rdx, -1
	lea	rsi, FILENAME$[rip]
	rep stosd
	mov	rdi, r9
	lea	rcx, .LC394[rip]
	lea	r13, 208[rsp]
	lea	r12, 176[rsp]
	call	fb_StrConcat@PLT
	mov	rdi, rax
	call	fb_GfxSetWindowTitle@PLT
	mov	edi, DWORD PTR 244[rsp]
	call	[QWORD PTR GLUSEPROGRAM$[rip]]
	pxor	xmm0, xmm0
	lea	rsi, 112[rsp]
	mov	edi, 4
	movaps	XMMWORD PTR 112[rsp], xmm0
	call	glGenTextures@PLT
	jmp	.L3867
.L4748:
.L3572:
	movsd	xmm0, QWORD PTR 394848[rbp]
	movsd	xmm1, QWORD PTR .LC111[rip]
	add	rsp, 280
	pop	rbx
	pop	rbp
	cvtsd2si	edi, xmm0
	addsd	xmm1, xmm0
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	cvtsd2si	esi, xmm1
	jmp	fb_GfxUnlock@PLT
.L4747:
.L3560:
	add	rsp, 280
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_GfxLock@PLT
.L3871:
	movsd	xmm4, QWORD PTR .LC276[rip]
	jmp	.L650
.L4823:
.L3854:
	add	rsp, 280
	movapd	xmm1, xmm5
	movapd	xmm0, xmm4
	mov	rdi, rbp
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	_ZN8MEMORY_T5POKEBEdd
.L4417:
	comisd	xmm5, xmm3
	je	.L4824
	comisd	xmm5, QWORD PTR .LC105[rip]
	je	.L4825
	comisd	xmm5, QWORD PTR .LC106[rip]
	jne	.L649
	cvtsd2si	rax, xmm4
	mov	ecx, 80
	pxor	xmm0, xmm0
	movsd	xmm1, QWORD PTR .LC73[rip]
	movapd	xmm4, XMMWORD PTR .LC2054[rip]
	cqo
	idiv	rcx
	cvtsi2sd	xmm0, rdx
	cvttsd2si	rdx, xmm0
	pxor	xmm0, xmm0
	sal	rdx, 3
	cvtsi2sd	xmm0, rdx
	addsd	xmm0, xmm1
	movsd	QWORD PTR XS$[rip], xmm0
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	cvttsd2si	rax, xmm0
	pxor	xmm0, xmm0
	sal	rax, 3
	cvtsi2sd	xmm0, rax
	addsd	xmm0, xmm1
	movsd	QWORD PTR YS$[rip], xmm0
	movsd	xmm0, QWORD PTR 395088[rbp]
	movsd	QWORD PTR Y$[rip], xmm0
.L3845:
	comisd	xmm2, QWORD PTR Y$[rip]
	ja	.L4402
	mov	QWORD PTR X$[rip], 0x000000000
	mov	rbx, QWORD PTR 395080[rbp]
	pxor	xmm1, xmm1
.L3846:
	movq	xmm7, rbx
	movsd	xmm5, QWORD PTR Y$[rip]
	comisd	xmm7, xmm1
	jb	.L4401
	movsd	xmm0, QWORD PTR XS$[rip]
	mov	rdi, rbp
	movupd	xmm7, XMMWORD PTR 395032[rbp]
	movsd	QWORD PTR 16[rsp], xmm3
	movsd	QWORD PTR 8[rsp], xmm2
	subsd	xmm0, xmm1
	movsd	xmm1, QWORD PTR YS$[rip]
	subsd	xmm1, xmm5
	movsd	xmm5, QWORD PTR .LC1930[rip]
	unpcklpd	xmm0, xmm1
	movapd	xmm1, XMMWORD PTR .LC2053[rip]
	mulpd	xmm0, XMMWORD PTR .LC2049[rip]
	addpd	xmm1, xmm0
	addpd	xmm0, XMMWORD PTR .LC2055[rip]
	mulpd	xmm1, xmm4
	mulpd	xmm0, xmm4
	addpd	xmm1, xmm7
	addpd	xmm0, xmm7
	movups	XMMWORD PTR 394864[rbp], xmm1
	movups	XMMWORD PTR 394840[rbp], xmm0
	movapd	xmm0, xmm5
	call	_ZN8MEMORY_T6PEEK64Ed
	movapd	xmm1, xmm0
	movapd	xmm0, xmm5
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR X$[rip]
	movsd	xmm3, QWORD PTR 16[rsp]
	movapd	xmm4, XMMWORD PTR .LC2054[rip]
	movsd	xmm2, QWORD PTR 8[rsp]
	addsd	xmm1, xmm3
	movsd	QWORD PTR X$[rip], xmm1
	jmp	.L3846
.L4474:
.L2731:
	mov	esi, 9
	lea	rdi, .LC1468[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4473:
.L2729:
	mov	esi, 15
	lea	rdi, .LC1467[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4472:
.L2727:
	mov	esi, 7
	lea	rdi, .LC1466[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4471:
.L2725:
	mov	esi, 9
	lea	rdi, .LC1465[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4819:
.L3803:
	movsd	QWORD PTR 396000[rbp], xmm5
	jmp	.L649
.L4818:
.L3801:
	movsd	xmm0, QWORD PTR 395840[rbp]
	comisd	xmm0, QWORD PTR 395760[rbp]
	jnb	.L649
	movsd	QWORD PTR 396000[rbp], xmm5
	jmp	.L649
.L4817:
.L3799:
	movsd	xmm0, QWORD PTR 395760[rbp]
	comisd	xmm0, QWORD PTR 395840[rbp]
	ja	.L649
	movsd	QWORD PTR 396000[rbp], xmm5
	jmp	.L649
.L4816:
.L3797:
	movsd	xmm0, QWORD PTR 395840[rbp]
	comisd	xmm0, QWORD PTR 395760[rbp]
	ja	.L649
	movsd	QWORD PTR 396000[rbp], xmm5
	jmp	.L649
.L4815:
.L3795:
	movsd	xmm0, QWORD PTR 395840[rbp]
	comisd	xmm0, QWORD PTR 395760[rbp]
	jnb	.L649
	movsd	QWORD PTR 396000[rbp], xmm5
	jmp	.L649
.L4814:
.L3793:
	movsd	xmm0, QWORD PTR 395760[rbp]
	comisd	xmm0, QWORD PTR 395840[rbp]
	jne	.L649
	movsd	QWORD PTR 396000[rbp], xmm5
	jmp	.L649
.L4813:
.L3791:
	movsd	xmm0, QWORD PTR 395840[rbp]
	subsd	xmm0, QWORD PTR .LC1[rip]
	movsd	QWORD PTR 395840[rbp], xmm0
	jmp	.L649
.L4812:
.L3789:
	movsd	xmm0, QWORD PTR 395760[rbp]
	subsd	xmm0, QWORD PTR .LC1[rip]
	movsd	QWORD PTR 395760[rbp], xmm0
	jmp	.L649
.L4811:
.L3787:
	movsd	xmm0, QWORD PTR 395680[rbp]
	subsd	xmm0, QWORD PTR .LC1[rip]
	movsd	QWORD PTR 395680[rbp], xmm0
	jmp	.L649
.L4810:
.L3785:
	movsd	xmm0, QWORD PTR .LC1[rip]
	addsd	xmm0, QWORD PTR 395840[rbp]
	movsd	QWORD PTR 395840[rbp], xmm0
	jmp	.L649
.L4809:
.L3783:
	movsd	xmm0, QWORD PTR .LC1[rip]
	addsd	xmm0, QWORD PTR 395760[rbp]
	movsd	QWORD PTR 395760[rbp], xmm0
	jmp	.L649
.L4808:
.L3781:
	movsd	xmm0, QWORD PTR .LC1[rip]
	addsd	xmm0, QWORD PTR 395680[rbp]
	movsd	QWORD PTR 395680[rbp], xmm0
	jmp	.L649
.L4807:
.L3779:
	movsd	xmm0, QWORD PTR 395680[rbp]
	movsd	QWORD PTR 395840[rbp], xmm0
	jmp	.L649
.L4806:
.L3777:
	movsd	xmm0, QWORD PTR 395680[rbp]
	movsd	QWORD PTR 395760[rbp], xmm0
	jmp	.L649
.L4805:
.L3775:
	cvtsd2si	rax, QWORD PTR 395760[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rdx, QWORD PTR 395840[rbp]
	xor	rax, rdx
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR 395680[rbp], xmm0
	jmp	.L649
.L4804:
.L3773:
	cvtsd2si	rax, QWORD PTR 395760[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rdx, QWORD PTR 395840[rbp]
	or	rax, rdx
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR 395680[rbp], xmm0
	jmp	.L649
.L4466:
.L2715:
	mov	esi, 5
	lea	rdi, .LC1460[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4465:
.L2713:
	mov	esi, 4
	lea	rdi, .LC1459[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4464:
.L2711:
	mov	esi, 2
	lea	rdi, .LC1458[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4463:
.L2709:
	mov	esi, 7
	lea	rdi, .LC1457[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4462:
.L2707:
	mov	esi, 5
	lea	rdi, .LC1456[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4461:
.L2705:
	mov	esi, 5
	lea	rdi, .LC1455[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4460:
.L2703:
	mov	esi, 9
	lea	rdi, .LC1454[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2701:
	mov	esi, 6
	lea	rdi, .LC1453[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4470:
.L2723:
	mov	esi, 6
	lea	rdi, .LC1464[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4469:
.L2721:
	mov	esi, 10
	lea	rdi, .LC1463[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4468:
.L2719:
	mov	esi, 7
	lea	rdi, .LC1462[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4467:
.L2717:
	mov	esi, 4
	lea	rdi, .LC1461[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4401:
.L3847:
	movsd	xmm0, QWORD PTR C$[rip]
	subsd	xmm5, xmm3
	addsd	xmm0, xmm3
	movsd	QWORD PTR Y$[rip], xmm5
	movsd	QWORD PTR C$[rip], xmm0
	jmp	.L3845
.L4402:
.L3849:
	movsd	xmm0, QWORD PTR YS$[rip]
	movsd	xmm1, QWORD PTR .LC111[rip]
	add	rsp, 280
	pop	rbx
	pop	rbp
	cvtsd2si	edi, xmm0
	addsd	xmm1, xmm0
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	cvtsd2si	esi, xmm1
	jmp	fb_GfxUnlock@PLT
.L4825:
	cvtsd2si	rax, xmm4
	mov	ecx, 40
	pxor	xmm0, xmm0
	movsd	xmm1, QWORD PTR .LC2048[rip]
	mov	QWORD PTR Y$[rip], 0x000000000
	mov	QWORD PTR X$[rip], 0x000000000
	cqo
	idiv	rcx
	cvtsi2sd	xmm0, rdx
	cvttsd2si	rdx, xmm0
	pxor	xmm0, xmm0
	sal	rdx, 3
	cvtsi2sd	xmm0, rdx
	addsd	xmm0, xmm1
	movsd	QWORD PTR XS$[rip], xmm0
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	cvttsd2si	rax, xmm0
	pxor	xmm0, xmm0
	sal	rax, 3
	cvtsi2sd	xmm0, rax
	addsd	xmm0, xmm1
	movsd	QWORD PTR YS$[rip], xmm0
.L3842:
	movsd	xmm2, QWORD PTR X$[rip]
.L3844:
	xor	edx, edx
	movsd	xmm1, QWORD PTR Y$[rip]
	comisd	xmm1, QWORD PTR 395088[rbp]
	movsd	xmm0, QWORD PTR YS$[rip]
	sete	dl
	xor	eax, eax
	neg	edx
	comisd	xmm2, QWORD PTR 395080[rbp]
	sete	al
	neg	eax
	test	edx, eax
	jne	.L4826
	addsd	xmm2, QWORD PTR XS$[rip]
	movsd	xmm4, QWORD PTR .LC2051[rip]
	addsd	xmm0, xmm1
	mov	rdi, rbp
	movsd	xmm5, QWORD PTR 395032[rbp]
	movsd	QWORD PTR 8[rsp], xmm3
	mulsd	xmm4, xmm2
	movapd	xmm1, xmm0
	addsd	xmm1, xmm0
	mulsd	xmm2, QWORD PTR .LC108[rip]
	addsd	xmm0, xmm3
	addsd	xmm0, xmm0
	addsd	xmm4, xmm5
	movsd	QWORD PTR 394840[rbp], xmm4
	movsd	xmm4, QWORD PTR 395040[rbp]
	addsd	xmm1, xmm4
	addsd	xmm0, xmm4
	movsd	QWORD PTR 394848[rbp], xmm1
	movsd	xmm1, QWORD PTR .LC110[rip]
	movsd	QWORD PTR 394872[rbp], xmm0
	addsd	xmm1, xmm2
	mulsd	xmm1, QWORD PTR .LC2052[rip]
	movsd	xmm2, QWORD PTR .LC1930[rip]
	movapd	xmm0, xmm2
	addsd	xmm1, xmm5
	movsd	QWORD PTR 394864[rbp], xmm1
	call	_ZN8MEMORY_T6PEEK64Ed
	movapd	xmm1, xmm0
	movapd	xmm0, xmm2
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm2, QWORD PTR X$[rip]
	movsd	xmm3, QWORD PTR 8[rsp]
	addsd	xmm2, xmm3
	comisd	xmm2, QWORD PTR 395080[rbp]
	movsd	QWORD PTR X$[rip], xmm2
	jbe	.L3844
	movsd	xmm0, QWORD PTR Y$[rip]
	mov	QWORD PTR X$[rip], 0x000000000
	addsd	xmm0, xmm3
	movsd	QWORD PTR Y$[rip], xmm0
	movsd	xmm0, QWORD PTR C$[rip]
	addsd	xmm0, xmm3
	movsd	QWORD PTR C$[rip], xmm0
	jmp	.L3842
.L4824:
	cvtsd2si	rax, xmm4
	mov	ecx, 40
	pxor	xmm0, xmm0
	movsd	xmm1, QWORD PTR .LC73[rip]
	movsd	xmm5, QWORD PTR .LC105[rip]
	cqo
	idiv	rcx
	cvtsi2sd	xmm0, rdx
	cvttsd2si	rdx, xmm0
	pxor	xmm0, xmm0
	sal	rdx, 3
	cvtsi2sd	xmm0, rdx
	addsd	xmm0, xmm1
	movsd	QWORD PTR XS$[rip], xmm0
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	cvttsd2si	rax, xmm0
	pxor	xmm0, xmm0
	sal	rax, 3
	cvtsi2sd	xmm0, rax
	addsd	xmm0, xmm1
	movsd	QWORD PTR YS$[rip], xmm0
	movsd	xmm0, QWORD PTR 395088[rbp]
	movsd	QWORD PTR Y$[rip], xmm0
	movsd	xmm0, QWORD PTR 395080[rbp]
	movsd	QWORD PTR X$[rip], xmm0
.L3838:
	movsd	xmm4, QWORD PTR X$[rip]
.L3840:
	movsd	xmm6, QWORD PTR Y$[rip]
	xor	edx, edx
	movsd	xmm0, QWORD PTR YS$[rip]
	comisd	xmm6, xmm2
	sete	dl
	xor	eax, eax
	neg	edx
	comisd	xmm4, xmm2
	sete	al
	neg	eax
	test	edx, eax
	jne	.L4827
	movsd	xmm1, QWORD PTR XS$[rip]
	subsd	xmm0, xmm6
	mov	rdi, rbp
	movsd	QWORD PTR 16[rsp], xmm3
	mulsd	xmm0, QWORD PTR .LC107[rip]
	mov	rax, QWORD PTR .LC1930[rip]
	movsd	QWORD PTR 8[rsp], xmm2
	subsd	xmm1, xmm4
	mulsd	xmm1, QWORD PTR .LC108[rip]
	addsd	xmm0, QWORD PTR 395040[rbp]
	addsd	xmm1, QWORD PTR 395032[rbp]
	movapd	xmm4, xmm1
	subsd	xmm1, xmm5
	addsd	xmm4, xmm5
	movsd	QWORD PTR 394840[rbp], xmm1
	movsd	QWORD PTR 394864[rbp], xmm4
	movapd	xmm4, xmm0
	subsd	xmm0, xmm5
	addsd	xmm4, xmm5
	movsd	QWORD PTR 394848[rbp], xmm0
	movq	xmm0, rax
	movsd	QWORD PTR 394872[rbp], xmm4
	call	_ZN8MEMORY_T6PEEK64Ed
	mov	rax, QWORD PTR .LC1930[rip]
	movapd	xmm1, xmm0
	movq	xmm0, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm4, QWORD PTR X$[rip]
	movsd	xmm3, QWORD PTR 16[rsp]
	mov	rax, QWORD PTR .LC105[rip]
	movsd	xmm2, QWORD PTR 8[rsp]
	movapd	xmm0, xmm4
	subsd	xmm4, xmm3
	comisd	xmm0, xmm3
	movq	xmm5, rax
	movsd	QWORD PTR X$[rip], xmm4
	jnb	.L3840
	movsd	xmm0, QWORD PTR 395080[rbp]
	movsd	QWORD PTR X$[rip], xmm0
	movsd	xmm0, QWORD PTR Y$[rip]
	subsd	xmm0, xmm3
	movsd	QWORD PTR Y$[rip], xmm0
	movsd	xmm0, QWORD PTR C$[rip]
	addsd	xmm0, xmm3
	movsd	QWORD PTR C$[rip], xmm0
	jmp	.L3838
.L4826:
	movsd	xmm1, QWORD PTR .LC111[rip]
	cvtsd2si	edi, xmm0
	add	rsp, 280
	pop	rbx
	pop	rbp
	addsd	xmm1, xmm0
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	cvtsd2si	esi, xmm1
	jmp	fb_GfxUnlock@PLT
.L4827:
	movsd	xmm1, QWORD PTR .LC111[rip]
	cvtsd2si	edi, xmm0
	add	rsp, 280
	pop	rbx
	pop	rbp
	addsd	xmm1, xmm0
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	cvtsd2si	esi, xmm1
	jmp	fb_GfxUnlock@PLT
.L4803:
.L3771:
	cvtsd2si	rax, QWORD PTR 394960[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rdx, QWORD PTR 395040[rbp]
	not	rax
	or	rax, rdx
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR 395680[rbp], xmm0
	jmp	.L649
.L4802:
.L3769:
	cvtsd2si	rax, QWORD PTR 394960[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rdx, QWORD PTR 395040[rbp]
	xor	rax, rdx
	not	rax
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR 395680[rbp], xmm0
	jmp	.L649
.L4801:
.L3767:
	cvtsd2si	rax, QWORD PTR 395760[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rdx, QWORD PTR 395840[rbp]
	and	rax, rdx
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR 395680[rbp], xmm0
	jmp	.L649
.L4800:
.L3765:
	movsd	xmm0, QWORD PTR 395760[rbp]
	xor	eax, eax
	comisd	xmm0, QWORD PTR 395840[rbp]
	pxor	xmm0, xmm0
	seta	al
	neg	eax
	cvtsi2sd	xmm0, eax
	movsd	QWORD PTR 395680[rbp], xmm0
	jmp	.L649
.L4799:
.L3763:
	movsd	xmm0, QWORD PTR 395760[rbp]
	xor	eax, eax
	comisd	xmm0, QWORD PTR 395840[rbp]
	pxor	xmm0, xmm0
	setnb	al
	neg	eax
	cvtsi2sd	xmm0, eax
	movsd	QWORD PTR 395680[rbp], xmm0
	jmp	.L649
.L4798:
.L3761:
	movsd	xmm0, QWORD PTR 395840[rbp]
	xor	eax, eax
	comisd	xmm0, QWORD PTR 395760[rbp]
	pxor	xmm0, xmm0
	setnb	al
	neg	eax
	cvtsi2sd	xmm0, eax
	movsd	QWORD PTR 395680[rbp], xmm0
	jmp	.L649
.L4797:
.L3759:
	movsd	xmm0, QWORD PTR 395840[rbp]
	xor	eax, eax
	comisd	xmm0, QWORD PTR 395760[rbp]
	pxor	xmm0, xmm0
	seta	al
	neg	eax
	cvtsi2sd	xmm0, eax
	movsd	QWORD PTR 395680[rbp], xmm0
	jmp	.L649
.L4796:
.L3757:
	movsd	xmm0, QWORD PTR 395760[rbp]
	xor	eax, eax
	comisd	xmm0, QWORD PTR 395840[rbp]
	pxor	xmm0, xmm0
	setne	al
	neg	eax
	cvtsi2sd	xmm0, eax
	movsd	QWORD PTR 395680[rbp], xmm0
	jmp	.L649
.L4795:
.L3755:
	movsd	xmm0, QWORD PTR 395760[rbp]
	xor	eax, eax
	comisd	xmm0, QWORD PTR 395840[rbp]
	pxor	xmm0, xmm0
	sete	al
	neg	eax
	cvtsi2sd	xmm0, eax
	movsd	QWORD PTR 395680[rbp], xmm0
	jmp	.L649
.L4794:
.L3753:
	cvtsd2si	rax, QWORD PTR 395760[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rcx, QWORD PTR 395840[rbp]
	sar	rax, cl
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR 395680[rbp], xmm0
	jmp	.L649
.L4793:
.L3751:
	cvtsd2si	rax, QWORD PTR 395760[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rcx, QWORD PTR 395840[rbp]
	sal	rax, cl
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR 395680[rbp], xmm0
	jmp	.L649
.L4792:
.L3749:
	movsd	xmm0, QWORD PTR 395680[rbp]
	xorpd	xmm0, XMMWORD PTR .LC258[rip]
	movsd	QWORD PTR 395680[rbp], xmm0
	jmp	.L649
.L4791:
.L3747:
	cvtsd2si	rax, QWORD PTR 395760[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rcx, QWORD PTR 395840[rbp]
	cqo
	idiv	rcx
	cvtsi2sd	xmm0, rdx
	movsd	QWORD PTR 395680[rbp], xmm0
	jmp	.L649
.L4790:
.L3745:
	movsd	xmm0, QWORD PTR 395760[rbp]
	movsd	xmm1, QWORD PTR 395840[rbp]
	call	pow@PLT
	movsd	QWORD PTR 395680[rbp], xmm0
	jmp	.L649
.L4789:
.L3743:
	cvtsd2si	rax, QWORD PTR 395760[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rcx, QWORD PTR 395840[rbp]
	cqo
	idiv	rcx
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR 395680[rbp], xmm0
	jmp	.L649
.L4788:
.L3741:
	movsd	xmm0, QWORD PTR 395760[rbp]
	divsd	xmm0, QWORD PTR 395840[rbp]
	movsd	QWORD PTR 395680[rbp], xmm0
	jmp	.L649
.L4787:
.L3739:
	movsd	xmm0, QWORD PTR 395760[rbp]
	mulsd	xmm0, QWORD PTR 395840[rbp]
	movsd	QWORD PTR 395680[rbp], xmm0
	jmp	.L649
.L4786:
.L3737:
	movsd	xmm0, QWORD PTR 395760[rbp]
	subsd	xmm0, QWORD PTR 395840[rbp]
	movsd	QWORD PTR 395680[rbp], xmm0
	jmp	.L649
.L4356:
.L3734:
	movsd	xmm0, QWORD PTR 395760[rbp]
	addsd	xmm0, QWORD PTR 395840[rbp]
	movsd	QWORD PTR 395680[rbp], xmm0
	jmp	.L649
.L4785:
.L3728:
	movsd	xmm0, QWORD PTR 395680[rbp]
	movsd	QWORD PTR 394880[rbp], xmm0
	jmp	.L649
.L3725:
.L3729:
.L3730:
	movsd	xmm0, QWORD PTR 394880[rbp]
	movsd	QWORD PTR 395680[rbp], xmm0
	jmp	.L649
.L3723:
.L3726:
	movsd	xmm0, QWORD PTR 394872[rbp]
	movsd	QWORD PTR 395680[rbp], xmm0
	jmp	.L649
.L4784:
.L3721:
	movsd	xmm0, QWORD PTR 394864[rbp]
	movsd	QWORD PTR 395680[rbp], xmm0
	jmp	.L649
.L4353:
.L3718:
	movsd	xmm0, QWORD PTR 394856[rbp]
	movsd	QWORD PTR 395680[rbp], xmm0
	jmp	.L649
.L4352:
.L3715:
	movsd	xmm0, QWORD PTR 394848[rbp]
	movsd	QWORD PTR 395680[rbp], xmm0
	jmp	.L649
.L4783:
.L3713:
	movsd	xmm0, QWORD PTR 394840[rbp]
	movsd	QWORD PTR 395680[rbp], xmm0
	jmp	.L649
.L4782:
.L3711:
	movsd	xmm0, QWORD PTR 395680[rbp]
	movsd	QWORD PTR 394832[rbp], xmm0
	jmp	.L649
.L4781:
.L3709:
	movsd	xmm0, QWORD PTR 395680[rbp]
	movsd	QWORD PTR 394824[rbp], xmm0
	jmp	.L649
.L4780:
.L3707:
	movsd	xmm0, QWORD PTR 395680[rbp]
	movsd	QWORD PTR 394880[rbp], xmm0
	jmp	.L649
.L4779:
.L3705:
	movsd	xmm0, QWORD PTR 395680[rbp]
	movsd	QWORD PTR 394856[rbp], xmm0
	jmp	.L649
.L4778:
.L3702:
	movsd	xmm0, QWORD PTR 395680[rbp]
	movsd	QWORD PTR 394872[rbp], xmm0
	jmp	.L649
.L3700:
.L3703:
	movsd	xmm0, QWORD PTR 395680[rbp]
	movsd	QWORD PTR 394848[rbp], xmm0
	jmp	.L649
.L4777:
.L3697:
	movsd	xmm0, QWORD PTR 395680[rbp]
	movsd	QWORD PTR 394864[rbp], xmm0
	jmp	.L649
.L3694:
.L3698:
	movsd	xmm0, QWORD PTR 395680[rbp]
	movsd	QWORD PTR 394840[rbp], xmm0
	jmp	.L649
.L3688:
.L3691:
.L3692:
	movsd	xmm0, QWORD PTR 395680[rbp]
	movsd	QWORD PTR 393256[rbp], xmm0
	jmp	.L649
.L3682:
.L3685:
.L3686:
	movsd	xmm0, QWORD PTR 395680[rbp]
	movsd	QWORD PTR 393248[rbp], xmm0
	jmp	.L649
.L3676:
.L3679:
.L3680:
	movsd	xmm0, QWORD PTR 395680[rbp]
	movsd	QWORD PTR 393240[rbp], xmm0
	jmp	.L649
.L3671:
.L3673:
.L3674:
	movsd	xmm0, QWORD PTR 395680[rbp]
	movsd	QWORD PTR 393232[rbp], xmm0
	jmp	.L649
.L4776:
.L3669:
	movsd	xmm0, QWORD PTR 395120[rbp]
	movsd	QWORD PTR 395920[rbp], xmm0
	jmp	.L649
.L4775:
.L3667:
	movsd	xmm0, QWORD PTR 394888[rbp]
	movsd	QWORD PTR 395920[rbp], xmm0
	jmp	.L649
.L4774:
.L3665:
	movsd	xmm0, QWORD PTR 394904[rbp]
	movsd	QWORD PTR 395760[rbp], xmm0
	jmp	.L649
.L4773:
.L3663:
	movsd	xmm0, QWORD PTR 394896[rbp]
	movsd	QWORD PTR 395760[rbp], xmm0
	jmp	.L649
.L4772:
.L3661:
	movsd	xmm0, QWORD PTR 394888[rbp]
	movsd	QWORD PTR 395760[rbp], xmm0
	jmp	.L649
.L4771:
.L3659:
	movsd	xmm0, QWORD PTR 394904[rbp]
	movsd	QWORD PTR 395680[rbp], xmm0
	jmp	.L649
.L4770:
.L3657:
	movsd	xmm0, QWORD PTR 394896[rbp]
	movsd	QWORD PTR 395680[rbp], xmm0
	jmp	.L649
.L4769:
.L3655:
	movsd	xmm0, QWORD PTR 394888[rbp]
	movsd	QWORD PTR 395680[rbp], xmm0
	jmp	.L649
.L4768:
.L3653:
	movsd	xmm0, QWORD PTR 394904[rbp]
	movsd	QWORD PTR 396000[rbp], xmm0
	jmp	.L649
.L4767:
.L3651:
	movsd	xmm0, QWORD PTR 394896[rbp]
	movsd	QWORD PTR 396000[rbp], xmm0
	jmp	.L649
.L4766:
.L3649:
	movsd	xmm0, QWORD PTR 394888[rbp]
	movsd	QWORD PTR 396000[rbp], xmm0
	jmp	.L649
.L4765:
.L3647:
	cvtsd2si	rax, QWORD PTR 396088[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	r9, QWORD PTR 396096[rbp]
	cvtsd2si	r8, QWORD PTR 396104[rbp]
	cvtsd2si	rdi, QWORD PTR 396112[rbp]
	cvtsd2si	rsi, QWORD PTR 396120[rbp]
	sal	rax, 56
	cvtsd2si	rcx, QWORD PTR 396128[rbp]
	sal	r9, 48
	cvtsd2si	rdx, QWORD PTR 396136[rbp]
	add	rax, r9
	sal	r8, 40
	add	rax, r8
	sal	rdi, 32
	add	rax, rdi
	sal	rsi, 24
	add	rax, rsi
	sal	rcx, 16
	add	rax, rcx
	sal	rdx, 8
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 396144[rbp]
	movsd	QWORD PTR 396080[rbp], xmm0
	jmp	.L649
.L4764:
.L3645:
	cvtsd2si	rax, QWORD PTR 396008[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	r9, QWORD PTR 396016[rbp]
	cvtsd2si	r8, QWORD PTR 396024[rbp]
	cvtsd2si	rdi, QWORD PTR 396032[rbp]
	cvtsd2si	rsi, QWORD PTR 396040[rbp]
	sal	rax, 56
	cvtsd2si	rcx, QWORD PTR 396048[rbp]
	sal	r9, 48
	cvtsd2si	rdx, QWORD PTR 396056[rbp]
	add	rax, r9
	sal	r8, 40
	add	rax, r8
	sal	rdi, 32
	add	rax, rdi
	sal	rsi, 24
	add	rax, rsi
	sal	rcx, 16
	add	rax, rcx
	sal	rdx, 8
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 396064[rbp]
	movsd	QWORD PTR 396000[rbp], xmm0
	jmp	.L649
.L4763:
.L3643:
	cvtsd2si	rax, QWORD PTR 395928[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	r9, QWORD PTR 395936[rbp]
	cvtsd2si	r8, QWORD PTR 395944[rbp]
	cvtsd2si	rdi, QWORD PTR 395952[rbp]
	cvtsd2si	rsi, QWORD PTR 395960[rbp]
	sal	rax, 56
	cvtsd2si	rcx, QWORD PTR 395968[rbp]
	sal	r9, 48
	cvtsd2si	rdx, QWORD PTR 395976[rbp]
	add	rax, r9
	sal	r8, 40
	add	rax, r8
	sal	rdi, 32
	add	rax, rdi
	sal	rsi, 24
	add	rax, rsi
	sal	rcx, 16
	add	rax, rcx
	sal	rdx, 8
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 395984[rbp]
	movsd	QWORD PTR 395920[rbp], xmm0
	jmp	.L649
.L4762:
.L3641:
	cvtsd2si	rax, QWORD PTR 395848[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	r9, QWORD PTR 395856[rbp]
	cvtsd2si	r8, QWORD PTR 395864[rbp]
	cvtsd2si	rdi, QWORD PTR 395872[rbp]
	cvtsd2si	rsi, QWORD PTR 395880[rbp]
	sal	rax, 56
	cvtsd2si	rcx, QWORD PTR 395888[rbp]
	sal	r9, 48
	cvtsd2si	rdx, QWORD PTR 395896[rbp]
	add	rax, r9
	sal	r8, 40
	add	rax, r8
	sal	rdi, 32
	add	rax, rdi
	sal	rsi, 24
	add	rax, rsi
	sal	rcx, 16
	add	rax, rcx
	sal	rdx, 8
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 395904[rbp]
	movsd	QWORD PTR 395840[rbp], xmm0
	jmp	.L649
.L4761:
.L3639:
	cvtsd2si	rax, QWORD PTR 395768[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	r9, QWORD PTR 395776[rbp]
	cvtsd2si	r8, QWORD PTR 395784[rbp]
	cvtsd2si	rdi, QWORD PTR 395792[rbp]
	cvtsd2si	rsi, QWORD PTR 395800[rbp]
	sal	rax, 56
	cvtsd2si	rcx, QWORD PTR 395808[rbp]
	sal	r9, 48
	cvtsd2si	rdx, QWORD PTR 395816[rbp]
	add	rax, r9
	sal	r8, 40
	add	rax, r8
	sal	rdi, 32
	add	rax, rdi
	sal	rsi, 24
	add	rax, rsi
	sal	rcx, 16
	add	rax, rcx
	sal	rdx, 8
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 395824[rbp]
	movsd	QWORD PTR 395760[rbp], xmm0
	jmp	.L649
.L4760:
.L3637:
	cvtsd2si	rax, QWORD PTR 395688[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	r9, QWORD PTR 395696[rbp]
	cvtsd2si	r8, QWORD PTR 395704[rbp]
	cvtsd2si	rdi, QWORD PTR 395712[rbp]
	cvtsd2si	rsi, QWORD PTR 395720[rbp]
	sal	rax, 56
	cvtsd2si	rcx, QWORD PTR 395728[rbp]
	sal	r9, 48
	cvtsd2si	rdx, QWORD PTR 395736[rbp]
	add	rax, r9
	sal	r8, 40
	add	rax, r8
	sal	rdi, 32
	add	rax, rdi
	sal	rsi, 24
	add	rax, rsi
	sal	rcx, 16
	add	rax, rcx
	sal	rdx, 8
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 395744[rbp]
	movsd	QWORD PTR 395680[rbp], xmm0
	jmp	.L649
.L4759:
.L3635:
	cvtsd2si	rax, QWORD PTR 395632[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rsi, QWORD PTR 395640[rbp]
	cvtsd2si	rcx, QWORD PTR 395648[rbp]
	cvtsd2si	rdx, QWORD PTR 395656[rbp]
	sal	rax, 32
	sal	rsi, 24
	add	rax, rsi
	sal	rcx, 16
	add	rax, rcx
	sal	rdx, 8
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 395664[rbp]
	movsd	QWORD PTR 395624[rbp], xmm0
	jmp	.L649
.L4758:
.L3633:
	cvtsd2si	rax, QWORD PTR 395576[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rsi, QWORD PTR 395584[rbp]
	cvtsd2si	rcx, QWORD PTR 395592[rbp]
	cvtsd2si	rdx, QWORD PTR 395600[rbp]
	sal	rax, 32
	sal	rsi, 24
	add	rax, rsi
	sal	rcx, 16
	add	rax, rcx
	sal	rdx, 8
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 395608[rbp]
	movsd	QWORD PTR 395568[rbp], xmm0
	jmp	.L649
.L4757:
.L3631:
	cvtsd2si	rax, QWORD PTR 395520[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rsi, QWORD PTR 395528[rbp]
	cvtsd2si	rcx, QWORD PTR 395536[rbp]
	cvtsd2si	rdx, QWORD PTR 395544[rbp]
	sal	rax, 32
	sal	rsi, 24
	add	rax, rsi
	sal	rcx, 16
	add	rax, rcx
	sal	rdx, 8
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 395552[rbp]
	movsd	QWORD PTR 395512[rbp], xmm0
	jmp	.L649
.L4756:
.L3629:
	cvtsd2si	rax, QWORD PTR 395464[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rsi, QWORD PTR 395472[rbp]
	cvtsd2si	rcx, QWORD PTR 395480[rbp]
	cvtsd2si	rdx, QWORD PTR 395488[rbp]
	sal	rax, 32
	sal	rsi, 24
	add	rax, rsi
	sal	rcx, 16
	add	rax, rcx
	sal	rdx, 8
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 395496[rbp]
	movsd	QWORD PTR 395456[rbp], xmm0
	jmp	.L649
.L4755:
.L3627:
	cvtsd2si	rax, QWORD PTR 395408[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rsi, QWORD PTR 395416[rbp]
	cvtsd2si	rcx, QWORD PTR 395424[rbp]
	cvtsd2si	rdx, QWORD PTR 395432[rbp]
	sal	rax, 32
	sal	rsi, 24
	add	rax, rsi
	sal	rcx, 16
	add	rax, rcx
	sal	rdx, 8
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 395440[rbp]
	movsd	QWORD PTR 395400[rbp], xmm0
	jmp	.L649
.L4754:
.L3613:
	cvtsd2si	rax, QWORD PTR 395352[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rsi, QWORD PTR 395360[rbp]
	cvtsd2si	rcx, QWORD PTR 395368[rbp]
	cvtsd2si	rdx, QWORD PTR 395376[rbp]
	sal	rax, 32
	sal	rsi, 24
	add	rax, rsi
	sal	rcx, 16
	add	rax, rcx
	sal	rdx, 8
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 395384[rbp]
	movsd	QWORD PTR 395344[rbp], xmm0
	jmp	.L649
.L4753:
.L3611:
	movsd	xmm0, QWORD PTR 395344[rbp]
	movsd	xmm3, QWORD PTR .LC1[rip]
	cvtsd2si	rdi, xmm0
	movsd	xmm2, QWORD PTR 0[rbp+rdi*8]
	comisd	xmm3, xmm2
	ja	.L3614
	comisd	xmm2, QWORD PTR .LC1947[rip]
	jbe	.L4828
.L3614:
	comisd	xmm2, QWORD PTR .LC1948[rip]
	jb	.L3617
	comisd	xmm2, QWORD PTR .LC1949[rip]
	jbe	.L4322
.L3618:
.L3617:
	comisd	xmm2, QWORD PTR .LC133[rip]
	jb	.L3619
	comisd	xmm2, QWORD PTR .LC139[rip]
	jbe	.L4322
.L3620:
.L3619:
	comisd	xmm2, QWORD PTR .LC140[rip]
	jb	.L4408
	comisd	xmm2, QWORD PTR .LC290[rip]
	jbe	.L4322
.L4408:
	movsd	xmm2, QWORD PTR .LC107[rip]
	movsd	xmm6, QWORD PTR .LC108[rip]
	movsd	xmm5, QWORD PTR .LC105[rip]
	movsd	xmm4, QWORD PTR .LC106[rip]
.L3616:
.L3622:
	addsd	xmm5, xmm0
	movapd	xmm1, xmm0
	addsd	xmm3, xmm0
	addsd	xmm1, xmm4
	cvtsd2si	rdx, xmm5
	cvtsd2si	rax, xmm3
	cvtsd2si	rsi, QWORD PTR 0[rbp+rdx*8]
	cvtsd2si	rdx, xmm1
	movapd	xmm1, xmm0
	addsd	xmm0, xmm6
	cvtsd2si	rax, QWORD PTR 0[rbp+rax*8]
	addsd	xmm1, xmm2
	cvtsd2si	rdi, xmm0
	sal	rsi, 24
	pxor	xmm0, xmm0
	cvtsd2si	rcx, QWORD PTR 0[rbp+rdx*8]
	cvtsd2si	rdx, xmm1
	sal	rax, 32
	add	rax, rsi
	sal	rcx, 16
	cvtsd2si	rdx, QWORD PTR 0[rbp+rdx*8]
	add	rax, rcx
	sal	rdx, 8
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 0[rbp+rdi*8]
	comisd	xmm0, QWORD PTR .LC1950[rip]
	movsd	QWORD PTR 395400[rbp], xmm0
	jb	.L3623
	comisd	xmm0, QWORD PTR .LC1951[rip]
	jbe	.L4829
.L3623:
	comisd	xmm0, QWORD PTR .LC1952[rip]
	movsd	QWORD PTR 8[rsp], xmm2
	jb	.L649
	comisd	xmm0, QWORD PTR .LC1953[rip]
	ja	.L649
.L3625:
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T5POKEBEdd
	movsd	xmm2, QWORD PTR 8[rsp]
	addsd	xmm2, QWORD PTR 395344[rbp]
	movsd	QWORD PTR 395344[rbp], xmm2
	jmp	.L649
.L4829:
.L3624:
	movsd	xmm1, QWORD PTR 8[rbp]
	pxor	xmm0, xmm0
	mov	rdi, rbp
	movsd	QWORD PTR 8[rsp], xmm4
	movsd	QWORD PTR 394912[rbp], xmm1
	call	_ZN8MEMORY_T5POKEBEdd
	movsd	xmm4, QWORD PTR 8[rsp]
	addsd	xmm4, QWORD PTR 395344[rbp]
	movsd	QWORD PTR 395344[rbp], xmm4
	jmp	.L649
.L4752:
.L3589:
	xor	edx, edx
	lea	rsi, STRCODE$[rip]
	mov	edi, 1
	call	fb_PrintString@PLT
	pxor	xmm1, xmm1
	xor	r8d, r8d
	xor	ecx, ecx
	push	rax
	mov	rdi, QWORD PTR FGIMAGE$[rip]
	mov	esi, -2147483644
	xor	r9d, r9d
	push	0
	lea	rdx, STRCODE$[rip]
	movaps	xmm0, xmm1
	push	0
	push	0
	call	fb_GfxDrawString@PLT
	add	rsp, 312
	xor	r8d, r8d
	mov	ecx, 1
	pop	rbx
	lea	rdx, .LC3[rip]
	pop	rbp
	or	rsi, -1
	pop	r12
	lea	rdi, STRCODE$[rip]
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_StrAssign@PLT
.L4751:
.L3578:
	comisd	xmm5, xmm2
	je	.L4309
	comisd	xmm5, QWORD PTR .LC1[rip]
	je	.L4830
	comisd	xmm5, QWORD PTR .LC105[rip]
	je	.L4831
	comisd	xmm5, QWORD PTR .LC106[rip]
	je	.L4832
	comisd	xmm5, QWORD PTR .LC107[rip]
	je	.L4833
	comisd	xmm5, QWORD PTR .LC108[rip]
	je	.L4834
	comisd	xmm5, QWORD PTR .LC109[rip]
	je	.L3508
	comisd	xmm5, QWORD PTR .LC110[rip]
	je	.L4315
	comisd	xmm5, QWORD PTR .LC111[rip]
	je	.L4835
	comisd	xmm5, QWORD PTR .LC5[rip]
	je	.L4836
	comisd	xmm5, QWORD PTR .LC112[rip]
	jne	.L649
.L3609:
	pxor	xmm0, xmm0
	pxor	xmm3, xmm3
	pxor	xmm2, xmm2
	xor	r8d, r8d
	cvtsd2si	rcx, QWORD PTR 393584[rbp]
	pxor	xmm1, xmm1
	cvtsd2ss	xmm0, QWORD PTR 394840[rbp]
	cvtsd2ss	xmm3, QWORD PTR 394872[rbp]
	cvtsd2si	rsi, QWORD PTR 394832[rbp]
	mov	rdi, QWORD PTR BGIMAGE$[rip]
	xor	edx, edx
	cvtsd2ss	xmm2, QWORD PTR 394864[rbp]
	cvtsd2ss	xmm1, QWORD PTR 394848[rbp]
	add	rsp, 280
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_GfxLine@PLT
.L4828:
.L3615:
	movapd	xmm1, xmm0
	movsd	xmm5, QWORD PTR .LC105[rip]
	movsd	xmm4, QWORD PTR .LC106[rip]
	movsd	QWORD PTR 40[rsp], xmm3
	addsd	xmm1, xmm3
	movsd	xmm2, QWORD PTR .LC107[rip]
	movsd	xmm6, QWORD PTR .LC108[rip]
	movsd	QWORD PTR 32[rsp], xmm5
	movsd	QWORD PTR 24[rsp], xmm4
	cvtsd2si	rax, xmm1
	movapd	xmm1, xmm0
	movsd	QWORD PTR 16[rsp], xmm2
	addsd	xmm1, xmm5
	movsd	QWORD PTR 8[rsp], xmm6
	cvtsd2si	rdx, xmm1
	movapd	xmm1, xmm0
	cvtsd2si	rax, QWORD PTR 0[rbp+rax*8]
	addsd	xmm1, xmm4
	cvtsd2si	rsi, QWORD PTR 0[rbp+rdx*8]
	cvtsd2si	rdx, xmm1
	movapd	xmm1, xmm0
	addsd	xmm0, xmm6
	sal	rax, 32
	addsd	xmm1, xmm2
	cvtsd2si	r8, xmm0
	sal	rsi, 24
	cvtsd2si	rcx, QWORD PTR 0[rbp+rdx*8]
	add	rax, rsi
	cvtsd2si	rdx, xmm1
	pxor	xmm1, xmm1
	sal	rcx, 16
	cvtsd2si	rdx, QWORD PTR 0[rbp+rdx*8]
	add	rax, rcx
	sal	rdx, 8
	add	rax, rdx
	cvtsi2sd	xmm1, rax
	addsd	xmm1, QWORD PTR 0[rbp+r8*8]
	movsd	QWORD PTR 394912[rbp], xmm1
	movsd	xmm0, QWORD PTR 0[rbp+rdi*8]
	mov	rdi, rbp
	call	_ZN8MEMORY_T5POKEBEdd
	movsd	xmm0, QWORD PTR .LC109[rip]
	addsd	xmm0, QWORD PTR 395344[rbp]
	movsd	xmm6, QWORD PTR 8[rsp]
	movsd	xmm2, QWORD PTR 16[rsp]
	movsd	xmm4, QWORD PTR 24[rsp]
	movsd	xmm5, QWORD PTR 32[rsp]
	movsd	xmm3, QWORD PTR 40[rsp]
	movsd	QWORD PTR 395344[rbp], xmm0
	jmp	.L3622
.L4322:
.L3621:
	movapd	xmm0, xmm2
	pxor	xmm1, xmm1
	mov	rdi, rbp
	movsd	QWORD PTR 8[rsp], xmm3
	call	_ZN8MEMORY_T5POKEBEdd
	movsd	xmm0, QWORD PTR 395344[rbp]
	movsd	xmm2, QWORD PTR .LC107[rip]
	movsd	xmm6, QWORD PTR .LC108[rip]
	movsd	xmm5, QWORD PTR .LC105[rip]
	addsd	xmm0, xmm2
	movsd	xmm4, QWORD PTR .LC106[rip]
	movsd	xmm3, QWORD PTR 8[rsp]
	movsd	QWORD PTR 395344[rbp], xmm0
	jmp	.L3622
.L4836:
.L3608:
	pxor	xmm0, xmm0
	pxor	xmm3, xmm3
	pxor	xmm2, xmm2
	xor	r8d, r8d
	cvtsd2si	rcx, QWORD PTR 393584[rbp]
	pxor	xmm1, xmm1
	cvtsd2ss	xmm0, QWORD PTR 394840[rbp]
	cvtsd2ss	xmm3, QWORD PTR 394872[rbp]
	cvtsd2si	rsi, QWORD PTR 394824[rbp]
	mov	rdi, QWORD PTR FGIMAGE$[rip]
	xor	edx, edx
	cvtsd2ss	xmm2, QWORD PTR 394864[rbp]
	cvtsd2ss	xmm1, QWORD PTR 394848[rbp]
	add	rsp, 280
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_GfxLine@PLT
.L4835:
.L3606:
	pxor	xmm0, xmm0
	pxor	xmm2, xmm2
	pxor	xmm1, xmm1
	xor	edx, edx
	cvtsd2si	rsi, QWORD PTR 394832[rbp]
	cvtsd2ss	xmm0, QWORD PTR 394840[rbp]
	cvtsd2ss	xmm2, QWORD PTR 393584[rbp]
	cvtsd2ss	xmm1, QWORD PTR 394848[rbp]
	mov	rdi, QWORD PTR BGIMAGE$[rip]
	pxor	xmm4, xmm4
	mov	ecx, 4
	movss	xmm5, DWORD PTR .LC1940[rip]
	add	rsp, 280
	movaps	xmm3, xmm4
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_GfxEllipse@PLT
.L4315:
.L3603:
	pxor	xmm0, xmm0
	pxor	xmm3, xmm3
	pxor	xmm2, xmm2
	xor	r8d, r8d
	pxor	xmm1, xmm1
	cvtsd2ss	xmm0, QWORD PTR 394840[rbp]
	cvtsd2si	rsi, QWORD PTR 394832[rbp]
	cvtsd2ss	xmm3, QWORD PTR 394872[rbp]
	cvtsd2ss	xmm2, QWORD PTR 394864[rbp]
	mov	ecx, 65535
	mov	edx, 2
	cvtsd2ss	xmm1, QWORD PTR 394848[rbp]
	mov	rdi, QWORD PTR BGIMAGE$[rip]
	add	rsp, 280
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_GfxLine@PLT
.L4834:
.L3601:
	pxor	xmm0, xmm0
	pxor	xmm3, xmm3
	pxor	xmm2, xmm2
	xor	r8d, r8d
	pxor	xmm1, xmm1
	cvtsd2ss	xmm0, QWORD PTR 394840[rbp]
	cvtsd2si	rsi, QWORD PTR 394832[rbp]
	cvtsd2ss	xmm3, QWORD PTR 394872[rbp]
	cvtsd2ss	xmm2, QWORD PTR 394864[rbp]
	mov	ecx, 65535
	mov	edx, 1
	cvtsd2ss	xmm1, QWORD PTR 394848[rbp]
	mov	rdi, QWORD PTR BGIMAGE$[rip]
	add	rsp, 280
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_GfxLine@PLT
.L4833:
.L3599:
	pxor	xmm0, xmm0
	pxor	xmm3, xmm3
	pxor	xmm2, xmm2
	xor	r8d, r8d
	pxor	xmm1, xmm1
	cvtsd2ss	xmm0, QWORD PTR 394840[rbp]
	cvtsd2si	rsi, QWORD PTR 394824[rbp]
	cvtsd2ss	xmm3, QWORD PTR 394872[rbp]
	cvtsd2ss	xmm2, QWORD PTR 394864[rbp]
	mov	ecx, 65535
	mov	edx, 1
	cvtsd2ss	xmm1, QWORD PTR 394848[rbp]
	mov	rdi, QWORD PTR FGIMAGE$[rip]
	add	rsp, 280
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_GfxLine@PLT
.L4832:
.L3597:
	pxor	xmm0, xmm0
	pxor	xmm3, xmm3
	pxor	xmm2, xmm2
	xor	r8d, r8d
	cvtsd2si	rsi, QWORD PTR 394832[rbp]
	pxor	xmm1, xmm1
	cvtsd2ss	xmm0, QWORD PTR 394840[rbp]
	cvtsd2ss	xmm3, QWORD PTR 394872[rbp]
	cvtsd2ss	xmm2, QWORD PTR 394864[rbp]
	cvtsd2ss	xmm1, QWORD PTR 394848[rbp]
	mov	rdi, QWORD PTR BGIMAGE$[rip]
	mov	ecx, 65535
	add	rsp, 280
	xor	edx, edx
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_GfxLine@PLT
.L4831:
.L3595:
	pxor	xmm0, xmm0
	pxor	xmm3, xmm3
	pxor	xmm2, xmm2
	xor	r8d, r8d
	cvtsd2si	rsi, QWORD PTR 394824[rbp]
	pxor	xmm1, xmm1
	cvtsd2ss	xmm0, QWORD PTR 394840[rbp]
	cvtsd2ss	xmm3, QWORD PTR 394872[rbp]
	cvtsd2ss	xmm2, QWORD PTR 394864[rbp]
	cvtsd2ss	xmm1, QWORD PTR 394848[rbp]
	mov	rdi, QWORD PTR FGIMAGE$[rip]
	mov	ecx, 65535
	add	rsp, 280
	xor	edx, edx
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_GfxLine@PLT
.L4830:
.L3593:
	pxor	xmm0, xmm0
	pxor	xmm1, xmm1
	xor	ecx, ecx
	mov	edx, 4
	cvtsd2si	rsi, QWORD PTR 394832[rbp]
	cvtsd2ss	xmm0, QWORD PTR 394840[rbp]
	cvtsd2ss	xmm1, QWORD PTR 394848[rbp]
	mov	rdi, QWORD PTR BGIMAGE$[rip]
	add	rsp, 280
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_GfxPset@PLT
.L4309:
.L3590:
	pxor	xmm0, xmm0
	pxor	xmm1, xmm1
	xor	ecx, ecx
	mov	edx, 4
	cvtsd2si	rsi, QWORD PTR 394824[rbp]
	cvtsd2ss	xmm0, QWORD PTR 394840[rbp]
	cvtsd2ss	xmm1, QWORD PTR 394848[rbp]
	mov	rdi, QWORD PTR FGIMAGE$[rip]
	add	rsp, 280
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_GfxPset@PLT
.L4394:
.L3811:
	cvtsd2si	rax, QWORD PTR 396976[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	r9, QWORD PTR 396984[rbp]
	cvtsd2si	r8, QWORD PTR 396992[rbp]
	cvtsd2si	rdi, QWORD PTR 397000[rbp]
	cvtsd2si	rsi, QWORD PTR 397008[rbp]
	sal	rax, 56
	cvtsd2si	rcx, QWORD PTR 397016[rbp]
	sal	r9, 48
	cvtsd2si	rdx, QWORD PTR 397024[rbp]
	add	rax, r9
	sal	r8, 40
	add	rax, r8
	sal	rdi, 32
	add	rax, rdi
	sal	rsi, 24
	add	rax, rsi
	sal	rcx, 16
	add	rax, rcx
	sal	rdx, 8
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 397032[rbp]
	movsd	QWORD PTR 396968[rbp], xmm0
	jmp	.L649
.L4822:
.L3809:
	movsd	xmm0, QWORD PTR 396000[rbp]
	xor	ebx, ebx
	movsd	xmm1, QWORD PTR .LC1[rip]
	movabs	r12, -9223372036854775808
	addsd	xmm1, xmm0
	movsd	QWORD PTR 397040[rbp], xmm0
	cvtsd2si	rax, xmm1
	movsd	xmm1, QWORD PTR .LC105[rip]
	addsd	xmm1, xmm0
	cvtsd2si	rax, QWORD PTR 0[rbp+rax*8]
	cvtsd2si	rdx, xmm1
	movsd	xmm1, QWORD PTR .LC106[rip]
	addsd	xmm1, xmm0
	sal	rax, 32
	cvtsd2si	rsi, QWORD PTR 0[rbp+rdx*8]
	cvtsd2si	rdx, xmm1
	movsd	xmm1, QWORD PTR .LC107[rip]
	addsd	xmm1, xmm0
	sal	rsi, 24
	cvtsd2si	rcx, QWORD PTR 0[rbp+rdx*8]
	add	rax, rsi
	cvtsd2si	rdx, xmm1
	movsd	xmm1, QWORD PTR .LC108[rip]
	addsd	xmm1, xmm0
	sal	rcx, 16
	cvtsd2si	rdx, QWORD PTR 0[rbp+rdx*8]
	add	rax, rcx
	cvtsd2si	rdi, xmm1
	pxor	xmm1, xmm1
	sal	rdx, 8
	add	rax, rdx
	cvtsi2sd	xmm1, rax
	addsd	xmm1, QWORD PTR 0[rbp+rdi*8]
	movsd	QWORD PTR 395680[rbp], xmm1
	movsd	xmm1, QWORD PTR .LC109[rip]
	addsd	xmm1, xmm0
	cvtsd2si	rax, xmm1
	movsd	xmm1, QWORD PTR .LC110[rip]
	addsd	xmm1, xmm0
	cvtsd2si	rax, QWORD PTR 0[rbp+rax*8]
	cvtsd2si	rdx, xmm1
	movsd	xmm1, QWORD PTR .LC111[rip]
	addsd	xmm1, xmm0
	sal	rax, 32
	cvtsd2si	rsi, QWORD PTR 0[rbp+rdx*8]
	cvtsd2si	rdx, xmm1
	movsd	xmm1, QWORD PTR .LC5[rip]
	addsd	xmm1, xmm0
	sal	rsi, 24
	cvtsd2si	rcx, QWORD PTR 0[rbp+rdx*8]
	add	rax, rsi
	cvtsd2si	rdx, xmm1
	movsd	xmm1, QWORD PTR .LC112[rip]
	addsd	xmm1, xmm0
	sal	rcx, 16
	cvtsd2si	rdx, QWORD PTR 0[rbp+rdx*8]
	add	rax, rcx
	cvtsd2si	rdi, xmm1
	pxor	xmm1, xmm1
	sal	rdx, 8
	add	rax, rdx
	cvtsi2sd	xmm1, rax
	addsd	xmm1, QWORD PTR 0[rbp+rdi*8]
	movsd	QWORD PTR 395760[rbp], xmm1
	movsd	xmm1, QWORD PTR .LC113[rip]
	addsd	xmm1, xmm0
	cvtsd2si	rax, xmm1
	movsd	xmm1, QWORD PTR .LC114[rip]
	addsd	xmm1, xmm0
	cvtsd2si	rax, QWORD PTR 0[rbp+rax*8]
	cvtsd2si	rdx, xmm1
	movsd	xmm1, QWORD PTR .LC115[rip]
	addsd	xmm1, xmm0
	addsd	xmm0, QWORD PTR .LC116[rip]
	sal	rax, 32
	cvtsd2si	rsi, QWORD PTR 0[rbp+rdx*8]
	cvtsd2si	rdx, xmm1
	sal	rsi, 24
	cvtsd2si	rcx, QWORD PTR 0[rbp+rdx*8]
	add	rax, rsi
	cvtsd2si	rdx, xmm0
	sal	rcx, 16
	cvtsd2si	rdx, QWORD PTR 0[rbp+rdx*8]
	movsd	xmm0, QWORD PTR .LC117[rip]
	add	rax, rcx
	addsd	xmm0, QWORD PTR 395344[rbp]
	cvtsd2si	rdi, xmm0
	sal	rdx, 8
	pxor	xmm0, xmm0
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 0[rbp+rdi*8]
	movsd	QWORD PTR 396968[rbp], xmm0
.L3812:
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rbx
	test	rbx, rbx
	jns	.L3814
	mov	rax, rbx
	mov	rdx, rbx
	pxor	xmm0, xmm0
	shr	rax
	and	edx, 1
	or	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, xmm0
.L3814:
	comisd	xmm0, QWORD PTR 396968[rbp]
	je	.L649
	movsd	xmm0, QWORD PTR 395680[rbp]
	call	nearbyint@PLT
	comisd	xmm0, QWORD PTR .LC280[rip]
	jnb	.L3815
	cvttsd2si	rax, xmm0
	mov	QWORD PTR PC$[rip], rax
.L3816:
	movsd	xmm0, QWORD PTR 395760[rbp]
	call	nearbyint@PLT
	comisd	xmm0, QWORD PTR .LC280[rip]
	cvttsd2si	r13, xmm0
	jb	.L3819
	subsd	xmm0, QWORD PTR .LC280[rip]
	cvttsd2si	r13, xmm0
	xor	r13, r12
.L3819:
	mov	rax, QWORD PTR PC$[rip]
	cmp	rax, r13
	ja	.L3820
	movsd	xmm0, QWORD PTR 0[rbp+rax*8]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	add	QWORD PTR PC$[rip], 1
	jmp	.L3819
.L3815:
	subsd	xmm0, QWORD PTR .LC280[rip]
	cvttsd2si	rax, xmm0
	mov	QWORD PTR PC$[rip], rax
	xor	QWORD PTR PC$[rip], r12
	jmp	.L3816
.L3820:
	movsd	xmm0, QWORD PTR 396968[rbp]
	call	nearbyint@PLT
	comisd	xmm0, QWORD PTR .LC280[rip]
	lea	rax, 1[rbx]
	cvttsd2si	rbx, xmm0
	jb	.L3822
	subsd	xmm0, QWORD PTR .LC280[rip]
	cvttsd2si	rbx, xmm0
	xor	rbx, r12
.L3822:
	xor	edx, edx
	div	rbx
	mov	rbx, rdx
	jmp	.L3812
.L4821:
.L3807:
	movsd	xmm1, QWORD PTR 395680[rbp]
	mov	rdi, rbp
	movapd	xmm0, xmm5
	add	rsp, 280
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	_ZN8MEMORY_T5POKEBEdd
.L4820:
.L3805:
	movapd	xmm0, xmm5
	mov	rdi, rbp
	call	_ZN8MEMORY_T5PEEKBEd
	movsd	QWORD PTR 395680[rbp], xmm0
	jmp	.L649
.L4728:
.L3385:
	xor	r8d, r8d
	mov	ecx, 8
	or	rsi, -1
	lea	rdx, .LC411[rip]
	lea	rdi, FILENAME$[rip]
	call	fb_StrAssign@PLT
	add	rsp, 280
	xor	r8d, r8d
	mov	ecx, 8
	pop	rbx
	lea	rdx, .LC1868[rip]
	pop	rbp
	or	rsi, -1
	pop	r12
	lea	rdi, COMPILER$[rip]
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_StrAssign@PLT
.L4727:
.L3383:
	xor	r8d, r8d
	mov	ecx, 8
	or	rsi, -1
	lea	rdx, .LC1867[rip]
	lea	rdi, FILENAME$[rip]
	call	fb_StrAssign@PLT
	add	rsp, 280
	xor	r8d, r8d
	mov	ecx, 1
	pop	rbx
	lea	rdx, .LC3[rip]
	pop	rbp
	or	rsi, -1
	pop	r12
	lea	rdi, COMPILER$[rip]
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_StrAssign@PLT
.L4726:
.L3381:
	xor	r8d, r8d
	mov	ecx, 8
	or	rsi, -1
	lea	rdx, .LC1865[rip]
	lea	rdi, FILENAME$[rip]
	call	fb_StrAssign@PLT
	add	rsp, 280
	xor	r8d, r8d
	mov	ecx, 5
	pop	rbx
	lea	rdx, .LC1866[rip]
	pop	rbp
	or	rsi, -1
	pop	r12
	lea	rdi, COMPILER$[rip]
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_StrAssign@PLT
.L4725:
.L3379:
	xor	r8d, r8d
	mov	ecx, 8
	or	rsi, -1
	lea	rdx, .LC1863[rip]
	lea	rdi, FILENAME$[rip]
	call	fb_StrAssign@PLT
	add	rsp, 280
	xor	r8d, r8d
	mov	ecx, 10
	pop	rbx
	lea	rdx, .LC1864[rip]
	pop	rbp
	or	rsi, -1
	pop	r12
	lea	rdi, COMPILER$[rip]
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_StrAssign@PLT
.L4736:
.L3401:
	xor	r8d, r8d
	mov	ecx, 6
	or	rsi, -1
	lea	rdx, .LC1883[rip]
	lea	rdi, FILENAME$[rip]
	call	fb_StrAssign@PLT
	add	rsp, 280
	xor	r8d, r8d
	mov	ecx, 18
	pop	rbx
	lea	rdx, .LC1884[rip]
	pop	rbp
	or	rsi, -1
	pop	r12
	lea	rdi, COMPILER$[rip]
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_StrAssign@PLT
.L4735:
.L3399:
	xor	r8d, r8d
	mov	ecx, 10
	or	rsi, -1
	lea	rdx, .LC1881[rip]
	lea	rdi, FILENAME$[rip]
	call	fb_StrAssign@PLT
	add	rsp, 280
	xor	r8d, r8d
	mov	ecx, 7
	pop	rbx
	lea	rdx, .LC1882[rip]
	pop	rbp
	or	rsi, -1
	pop	r12
	lea	rdi, COMPILER$[rip]
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_StrAssign@PLT
.L4734:
.L3397:
	xor	r8d, r8d
	mov	ecx, 8
	or	rsi, -1
	lea	rdx, .LC1879[rip]
	lea	rdi, FILENAME$[rip]
	call	fb_StrAssign@PLT
	add	rsp, 280
	xor	r8d, r8d
	mov	ecx, 8
	pop	rbx
	lea	rdx, .LC1880[rip]
	pop	rbp
	or	rsi, -1
	pop	r12
	lea	rdi, COMPILER$[rip]
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_StrAssign@PLT
.L4733:
.L3395:
	xor	r8d, r8d
	mov	ecx, 7
	or	rsi, -1
	lea	rdx, .LC1877[rip]
	lea	rdi, FILENAME$[rip]
	call	fb_StrAssign@PLT
	add	rsp, 280
	xor	r8d, r8d
	mov	ecx, 6
	pop	rbx
	lea	rdx, .LC1878[rip]
	pop	rbp
	or	rsi, -1
	pop	r12
	lea	rdi, COMPILER$[rip]
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_StrAssign@PLT
.L4732:
.L3393:
	xor	r8d, r8d
	mov	ecx, 7
	or	rsi, -1
	lea	rdx, .LC1875[rip]
	lea	rdi, FILENAME$[rip]
	call	fb_StrAssign@PLT
	add	rsp, 280
	xor	r8d, r8d
	mov	ecx, 5
	pop	rbx
	lea	rdx, .LC1876[rip]
	pop	rbp
	or	rsi, -1
	pop	r12
	lea	rdi, COMPILER$[rip]
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_StrAssign@PLT
.L4731:
.L3391:
	xor	r8d, r8d
	mov	ecx, 8
	or	rsi, -1
	lea	rdx, .LC1873[rip]
	lea	rdi, FILENAME$[rip]
	call	fb_StrAssign@PLT
	add	rsp, 280
	xor	r8d, r8d
	mov	ecx, 5
	pop	rbx
	lea	rdx, .LC1874[rip]
	pop	rbp
	or	rsi, -1
	pop	r12
	lea	rdi, COMPILER$[rip]
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_StrAssign@PLT
.L4730:
.L3389:
	xor	r8d, r8d
	mov	ecx, 6
	or	rsi, -1
	lea	rdx, .LC1871[rip]
	lea	rdi, FILENAME$[rip]
	call	fb_StrAssign@PLT
	add	rsp, 280
	xor	r8d, r8d
	mov	ecx, 5
	pop	rbx
	lea	rdx, .LC1872[rip]
	pop	rbp
	or	rsi, -1
	pop	r12
	lea	rdi, COMPILER$[rip]
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_StrAssign@PLT
.L4729:
.L3387:
	xor	r8d, r8d
	mov	ecx, 9
	or	rsi, -1
	lea	rdx, .LC1869[rip]
	lea	rdi, FILENAME$[rip]
	call	fb_StrAssign@PLT
	add	rsp, 280
	xor	r8d, r8d
	mov	ecx, 6
	pop	rbx
	lea	rdx, .LC1870[rip]
	pop	rbp
	or	rsi, -1
	pop	r12
	lea	rdi, COMPILER$[rip]
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_StrAssign@PLT
.L4700:
.L3196:
	mov	esi, 9
	lea	rdi, .LC1698[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4699:
.L3194:
	mov	esi, 7
	lea	rdi, .LC1697[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4698:
.L3192:
	mov	esi, 4
	lea	rdi, .LC1696[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4697:
.L3190:
	mov	esi, 4
	lea	rdi, .LC1695[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4696:
.L3188:
	mov	esi, 9
	lea	rdi, .LC1694[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4695:
.L3186:
	mov	esi, 8
	lea	rdi, .LC1693[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4694:
.L3184:
	mov	esi, 4
	lea	rdi, .LC1692[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4693:
.L3182:
	mov	esi, 8
	lea	rdi, .LC1691[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4743:
.L3418:
	mov	rax, QWORD PTR SCR_H$[rip]
	pxor	xmm0, xmm0
	pxor	xmm3, xmm3
	movups	XMMWORD PTR 394840[rbp], xmm0
	cvtsi2ss	xmm3, rax
	test	rax, rax
	jns	.L3447
	mov	rdx, rax
	and	eax, 1
	pxor	xmm3, xmm3
	shr	rdx
	or	rdx, rax
	cvtsi2ss	xmm3, rdx
	addss	xmm3, xmm3
.L3447:
	mov	rax, QWORD PTR SCR_W$[rip]
	pxor	xmm2, xmm2
	cvtsi2ss	xmm2, rax
	test	rax, rax
	jns	.L3449
	mov	rdx, rax
	and	eax, 1
	pxor	xmm2, xmm2
	shr	rdx
	or	rdx, rax
	cvtsi2ss	xmm2, rdx
	addss	xmm2, xmm2
.L3449:
	pxor	xmm1, xmm1
	mov	rdi, QWORD PTR FGIMAGE$[rip]
	xor	r8d, r8d
	mov	ecx, 65535
	movaps	xmm0, xmm1
	mov	edx, 2
	mov	esi, -16777216
	call	fb_GfxLine@PLT
	xor	r9d, r9d
	mov	r8d, 1
	xor	ecx, ecx
	xor	edx, edx
	xor	esi, esi
	lea	rdi, FILENAME$[rip]
	call	fb_FileOpen@PLT
	pxor	xmm0, xmm0
	mov	QWORD PTR SCR_POS$[rip], 0
	mov	QWORD PTR 394912[rbp], 0x000000000
	movups	XMMWORD PTR 394896[rbp], xmm0
.L3450:
	mov	edi, 1
	call	fb_FileEof@PLT
	test	eax, eax
	jne	.L4837
	xor	ecx, ecx
	or	rdx, -1
	mov	edi, 1
	lea	rsi, STRCODE$[rip]
	call	fb_FileLineInput@PLT
	or	rsi, -1
	lea	rdi, STRCODE$[rip]
	mov	WORD PTR INDEX$[rip], 1
	call	fb_StrLen@PLT
	mov	ebx, eax
	jmp	.L3453
.L3460:
	mov	rax, QWORD PTR .LC73[rip]
	movq	xmm0, rax
	addsd	xmm1, xmm0
	movsd	QWORD PTR 394888[rbp], xmm1
.L3454:
	addsd	xmm0, QWORD PTR 394888[rbp]
	pxor	xmm1, xmm1
	mov	rdx, QWORD PTR SCR_POS$[rip]
	cvtsd2si	rax, xmm0
	pxor	xmm0, xmm0
	and	eax, 63
	cvtsi2sd	xmm1, rax
	movzx	eax, WORD PTR INDEX$[rip]
	lea	rax, 16383[rdx+rax]
	cvtsi2sd	xmm0, rax
	test	rax, rax
	jns	.L3456
	mov	rdx, rax
	and	eax, 1
	pxor	xmm0, xmm0
	shr	rdx
	or	rdx, rax
	cvtsi2sd	xmm0, rdx
	addsd	xmm0, xmm0
.L3456:
	mov	rdi, rbp
	call	_ZN8MEMORY_T5POKEBEdd
	add	WORD PTR INDEX$[rip], 1
.L3453:
	movzx	eax, WORD PTR INDEX$[rip]
	cmp	ax, bx
	ja	.L3457
	mov	edx, 1
	movzx	esi, ax
	lea	rdi, STRCODE$[rip]
	call	fb_StrMid@PLT
	mov	esi, 1
	mov	rdi, rax
	call	fb_ASC@PLT
	pxor	xmm1, xmm1
	mov	edx, eax
	cvtsi2sd	xmm1, rdx
	xor	edx, edx
	cmp	eax, 31
	seta	dl
	neg	edx
	cmp	eax, 64
	sbb	eax, eax
	test	edx, eax
	jne	.L3460
	mov	rax, QWORD PTR .LC73[rip]
	movsd	QWORD PTR 394888[rbp], xmm1
	movq	xmm0, rax
	jmp	.L3454
.L3457:
	add	QWORD PTR SCR_POS$[rip], 90
	jmp	.L3450
.L4837:
	mov	QWORD PTR 394912[rbp], 0x000000000
	mov	edi, 1
	mov	QWORD PTR SCR_POS$[rip], 5400
	call	fb_FileClose@PLT
	xor	r8d, r8d
	mov	ecx, 27
	lea	rdx, .LC1895[rip]
	or	rsi, -1
	lea	rdi, STRCODE$[rip]
	call	fb_StrAssign@PLT
	or	rsi, -1
	lea	rdi, STRCODE$[rip]
	mov	WORD PTR INDEX$[rip], 1
	call	fb_StrLen@PLT
	mov	ebx, eax
	jmp	.L3452
.L3467:
	mov	rax, QWORD PTR .LC73[rip]
	movq	xmm0, rax
	addsd	xmm1, xmm0
	movsd	QWORD PTR 394888[rbp], xmm1
.L3461:
	addsd	xmm0, QWORD PTR 394888[rbp]
	pxor	xmm1, xmm1
	mov	rdx, QWORD PTR SCR_POS$[rip]
	cvtsd2si	rax, xmm0
	pxor	xmm0, xmm0
	and	eax, 63
	cvtsi2sd	xmm1, rax
	movzx	eax, WORD PTR INDEX$[rip]
	lea	rax, 16383[rdx+rax]
	cvtsi2sd	xmm0, rax
	test	rax, rax
	jns	.L3463
	mov	rdx, rax
	and	eax, 1
	pxor	xmm0, xmm0
	shr	rdx
	or	rdx, rax
	cvtsi2sd	xmm0, rdx
	addsd	xmm0, xmm0
.L3463:
	mov	rdi, rbp
	call	_ZN8MEMORY_T5POKEBEdd
	add	WORD PTR INDEX$[rip], 1
.L3452:
	movzx	eax, WORD PTR INDEX$[rip]
	cmp	ax, bx
	ja	.L3464
	mov	edx, 1
	movzx	esi, ax
	lea	rdi, STRCODE$[rip]
	call	fb_StrMid@PLT
	mov	esi, 1
	mov	rdi, rax
	call	fb_ASC@PLT
	pxor	xmm1, xmm1
	mov	edx, eax
	cvtsi2sd	xmm1, rdx
	xor	edx, edx
	cmp	eax, 31
	seta	dl
	neg	edx
	cmp	eax, 64
	sbb	eax, eax
	test	edx, eax
	jne	.L3467
	mov	rax, QWORD PTR .LC73[rip]
	movsd	QWORD PTR 394888[rbp], xmm1
	movq	xmm0, rax
	jmp	.L3461
.L3464:
	xor	r8d, r8d
	mov	ecx, 1
	or	rsi, -1
	mov	QWORD PTR SCR_POS$[rip], 0
	lea	rdx, .LC3[rip]
	lea	rdi, STRCODE$[rip]
	call	fb_StrAssign@PLT
	mov	rbx, QWORD PTR fb_hPutPSet@GOTPCREL[rip]
	push	0
	xor	edi, edi
	push	0
	pxor	xmm1, xmm1
	mov	ecx, -65536
	mov	edx, -65536
	push	-1
	mov	rsi, QWORD PTR FGIMAGE$[rip]
	mov	r9d, -65536
	movaps	xmm0, xmm1
	push	rbx
	mov	r8d, -65536
	push	1
	push	0
	call	fb_GfxPut@PLT
	add	rsp, 48
	or	edi, -1
	call	fb_Sleep@PLT
	mov	rax, QWORD PTR SCR_H$[rip]
	pxor	xmm3, xmm3
	cvtsi2ss	xmm3, rax
	test	rax, rax
	jns	.L3469
	mov	rdx, rax
	and	eax, 1
	pxor	xmm3, xmm3
	shr	rdx
	or	rdx, rax
	cvtsi2ss	xmm3, rdx
	addss	xmm3, xmm3
.L3469:
	mov	rax, QWORD PTR SCR_W$[rip]
	pxor	xmm2, xmm2
	cvtsi2ss	xmm2, rax
	test	rax, rax
	jns	.L3471
	mov	rdx, rax
	and	eax, 1
	pxor	xmm2, xmm2
	shr	rdx
	or	rdx, rax
	cvtsi2ss	xmm2, rdx
	addss	xmm2, xmm2
.L3471:
	pxor	xmm1, xmm1
	mov	rdi, QWORD PTR FGIMAGE$[rip]
	xor	r8d, r8d
	mov	ecx, 65535
	movaps	xmm0, xmm1
	mov	edx, 2
	mov	esi, -16777216
	call	fb_GfxLine@PLT
	push	0
	pxor	xmm1, xmm1
	mov	ecx, -65536
	push	0
	mov	rsi, QWORD PTR FGIMAGE$[rip]
	mov	edx, -65536
	xor	edi, edi
	push	-1
	mov	r9d, -65536
	mov	r8d, -65536
	movaps	xmm0, xmm1
	push	rbx
	push	1
	push	0
	call	fb_GfxPut@PLT
	add	rsp, 48
	jmp	.L649
.L4742:
.L3415:
	mov	rax, QWORD PTR SCR_H$[rip]
	pxor	xmm3, xmm3
	cvtsi2ss	xmm3, rax
	test	rax, rax
	jns	.L3420
	mov	rdx, rax
	and	eax, 1
	pxor	xmm3, xmm3
	shr	rdx
	or	rdx, rax
	cvtsi2ss	xmm3, rdx
	addss	xmm3, xmm3
.L3420:
	mov	rax, QWORD PTR SCR_W$[rip]
	pxor	xmm2, xmm2
	cvtsi2ss	xmm2, rax
	test	rax, rax
	jns	.L3422
	mov	rdx, rax
	and	eax, 1
	pxor	xmm2, xmm2
	shr	rdx
	or	rdx, rax
	cvtsi2ss	xmm2, rdx
	addss	xmm2, xmm2
.L3422:
	pxor	xmm1, xmm1
	mov	rdi, QWORD PTR FGIMAGE$[rip]
	xor	r8d, r8d
	mov	ecx, 65535
	movaps	xmm0, xmm1
	mov	edx, 2
	mov	esi, -16777216
	call	fb_GfxLine@PLT
	xor	eax, eax
	mov	ecx, 6
	or	r8, -1
	lea	r9, 208[rsp]
	or	rdx, -1
	lea	rsi, COMPILER$[rip]
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	lea	rcx, FILENAME$[rip]
	call	fb_StrConcat@PLT
	mov	rdi, rax
	call	fb_Shell@PLT
	mov	esi, 15
	lea	rdi, .LC1893[rip]
	call	fb_StrAllocTempDescZEx@PLT
	mov	rdi, rax
	call	fb_Shell@PLT
	mov	esi, 7
	lea	rdi, .LC1894[rip]
	call	fb_StrAllocTempDescZEx@PLT
	xor	r9d, r9d
	mov	r8d, 1
	xor	ecx, ecx
	mov	rdi, rax
	xor	edx, edx
	mov	esi, 2
	call	fb_FileOpen@PLT
	pxor	xmm0, xmm0
	mov	QWORD PTR SCR_POS$[rip], 0
	mov	QWORD PTR 394912[rbp], 0x000000000
	movups	XMMWORD PTR 394896[rbp], xmm0
.L3423:
	mov	edi, 1
	call	fb_FileEof@PLT
	test	eax, eax
	jne	.L4838
	xor	ecx, ecx
	or	rdx, -1
	mov	edi, 1
	lea	rsi, STRCODE$[rip]
	call	fb_FileLineInput@PLT
	or	rsi, -1
	lea	rdi, STRCODE$[rip]
	mov	WORD PTR INDEX$[rip], 1
	call	fb_StrLen@PLT
	mov	ebx, eax
	jmp	.L3426
.L3433:
	mov	rax, QWORD PTR .LC73[rip]
	movq	xmm0, rax
	addsd	xmm1, xmm0
	movsd	QWORD PTR 394888[rbp], xmm1
.L3427:
	addsd	xmm0, QWORD PTR 394888[rbp]
	pxor	xmm1, xmm1
	mov	rdx, QWORD PTR SCR_POS$[rip]
	cvtsd2si	rax, xmm0
	pxor	xmm0, xmm0
	and	eax, 63
	cvtsi2sd	xmm1, rax
	movzx	eax, WORD PTR INDEX$[rip]
	lea	rax, 16383[rdx+rax]
	cvtsi2sd	xmm0, rax
	test	rax, rax
	jns	.L3429
	mov	rdx, rax
	and	eax, 1
	pxor	xmm0, xmm0
	shr	rdx
	or	rdx, rax
	cvtsi2sd	xmm0, rdx
	addsd	xmm0, xmm0
.L3429:
	mov	rdi, rbp
	call	_ZN8MEMORY_T5POKEBEdd
	add	WORD PTR INDEX$[rip], 1
.L3426:
	movzx	eax, WORD PTR INDEX$[rip]
	cmp	ax, bx
	ja	.L3430
	mov	edx, 1
	movzx	esi, ax
	lea	rdi, STRCODE$[rip]
	call	fb_StrMid@PLT
	mov	esi, 1
	mov	rdi, rax
	call	fb_ASC@PLT
	pxor	xmm1, xmm1
	mov	edx, eax
	cvtsi2sd	xmm1, rdx
	xor	edx, edx
	cmp	eax, 31
	seta	dl
	neg	edx
	cmp	eax, 64
	sbb	eax, eax
	test	edx, eax
	jne	.L3433
	mov	rax, QWORD PTR .LC73[rip]
	movsd	QWORD PTR 394888[rbp], xmm1
	movq	xmm0, rax
	jmp	.L3427
.L3430:
	add	QWORD PTR SCR_POS$[rip], 90
	jmp	.L3423
.L4838:
	mov	QWORD PTR 394912[rbp], 0x000000000
	mov	edi, 1
	mov	QWORD PTR SCR_POS$[rip], 5400
	call	fb_FileClose@PLT
	xor	r8d, r8d
	mov	ecx, 27
	lea	rdx, .LC1895[rip]
	or	rsi, -1
	lea	rdi, STRCODE$[rip]
	call	fb_StrAssign@PLT
	or	rsi, -1
	lea	rdi, STRCODE$[rip]
	mov	WORD PTR INDEX$[rip], 1
	call	fb_StrLen@PLT
	mov	ebx, eax
	jmp	.L3425
.L3440:
	mov	rax, QWORD PTR .LC73[rip]
	movq	xmm0, rax
	addsd	xmm1, xmm0
	movsd	QWORD PTR 394888[rbp], xmm1
.L3434:
	addsd	xmm0, QWORD PTR 394888[rbp]
	pxor	xmm1, xmm1
	mov	rdx, QWORD PTR SCR_POS$[rip]
	cvtsd2si	rax, xmm0
	pxor	xmm0, xmm0
	and	eax, 63
	cvtsi2sd	xmm1, rax
	movzx	eax, WORD PTR INDEX$[rip]
	lea	rax, 16383[rdx+rax]
	cvtsi2sd	xmm0, rax
	test	rax, rax
	jns	.L3436
	mov	rdx, rax
	and	eax, 1
	pxor	xmm0, xmm0
	shr	rdx
	or	rdx, rax
	cvtsi2sd	xmm0, rdx
	addsd	xmm0, xmm0
.L3436:
	mov	rdi, rbp
	call	_ZN8MEMORY_T5POKEBEdd
	add	WORD PTR INDEX$[rip], 1
.L3425:
	movzx	eax, WORD PTR INDEX$[rip]
	cmp	ax, bx
	ja	.L3437
	mov	edx, 1
	movzx	esi, ax
	lea	rdi, STRCODE$[rip]
	call	fb_StrMid@PLT
	mov	esi, 1
	mov	rdi, rax
	call	fb_ASC@PLT
	pxor	xmm1, xmm1
	mov	edx, eax
	cvtsi2sd	xmm1, rdx
	xor	edx, edx
	cmp	eax, 31
	seta	dl
	neg	edx
	cmp	eax, 64
	sbb	eax, eax
	test	edx, eax
	jne	.L3440
	mov	rax, QWORD PTR .LC73[rip]
	movsd	QWORD PTR 394888[rbp], xmm1
	movq	xmm0, rax
	jmp	.L3434
.L3437:
	xor	eax, eax
	mov	ecx, 6
	or	r8, -1
	mov	edx, 13
	lea	r9, 240[rsp]
	lea	rsi, .LC1896[rip]
	mov	rdi, r9
	rep stosd
	mov	rdi, r9
	lea	rcx, FILENAME$[rip]
	call	fb_StrConcat@PLT
	mov	rdi, rax
	call	fb_Shell@PLT
	xor	r8d, r8d
	mov	ecx, 1
	lea	rdx, .LC3[rip]
	or	rsi, -1
	lea	rdi, STRCODE$[rip]
	mov	QWORD PTR SCR_POS$[rip], 0
	call	fb_StrAssign@PLT
	mov	rbx, QWORD PTR fb_hPutPSet@GOTPCREL[rip]
	push	0
	xor	edi, edi
	push	0
	pxor	xmm1, xmm1
	mov	ecx, -65536
	mov	edx, -65536
	push	-1
	mov	rsi, QWORD PTR FGIMAGE$[rip]
	mov	r9d, -65536
	movaps	xmm0, xmm1
	push	rbx
	mov	r8d, -65536
	push	1
	push	0
	call	fb_GfxPut@PLT
	add	rsp, 48
	or	edi, -1
	call	fb_Sleep@PLT
	mov	rax, QWORD PTR SCR_H$[rip]
	pxor	xmm3, xmm3
	cvtsi2ss	xmm3, rax
	test	rax, rax
	jns	.L3442
	mov	rdx, rax
	and	eax, 1
	pxor	xmm3, xmm3
	shr	rdx
	or	rdx, rax
	cvtsi2ss	xmm3, rdx
	addss	xmm3, xmm3
.L3442:
	mov	rax, QWORD PTR SCR_W$[rip]
	pxor	xmm2, xmm2
	cvtsi2ss	xmm2, rax
	test	rax, rax
	jns	.L3444
	mov	rdx, rax
	and	eax, 1
	pxor	xmm2, xmm2
	shr	rdx
	or	rdx, rax
	cvtsi2ss	xmm2, rdx
	addss	xmm2, xmm2
.L3444:
	pxor	xmm1, xmm1
	mov	rdi, QWORD PTR FGIMAGE$[rip]
	xor	r8d, r8d
	mov	ecx, 65535
	movaps	xmm0, xmm1
	mov	edx, 2
	mov	esi, -16777216
	call	fb_GfxLine@PLT
	push	0
	pxor	xmm1, xmm1
	mov	ecx, -65536
	push	0
	mov	rsi, QWORD PTR FGIMAGE$[rip]
	mov	edx, -65536
	xor	edi, edi
	push	-1
	mov	r9d, -65536
	mov	r8d, -65536
	movaps	xmm0, xmm1
	push	rbx
	push	1
	push	0
	call	fb_GfxPut@PLT
	add	rsp, 48
	jmp	.L649
.L3413:
.L3416:
	add	rsp, 280
	mov	edi, 1
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_FileClose@PLT
.L4741:
.L3411:
	add	rsp, 280
	xor	r9d, r9d
	xor	ecx, ecx
	xor	edx, edx
	pop	rbx
	mov	r8d, 1
	pop	rbp
	mov	esi, 3
	pop	r12
	lea	rdi, FILENAME$[rip]
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_FileOpen@PLT
.L4740:
.L3409:
	xor	r8d, r8d
	mov	ecx, 10
	or	rsi, -1
	lea	rdx, .LC1891[rip]
	lea	rdi, FILENAME$[rip]
	call	fb_StrAssign@PLT
	add	rsp, 280
	xor	r8d, r8d
	mov	ecx, 8
	pop	rbx
	lea	rdx, .LC1892[rip]
	pop	rbp
	or	rsi, -1
	pop	r12
	lea	rdi, COMPILER$[rip]
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_StrAssign@PLT
.L4739:
.L3407:
	xor	r8d, r8d
	mov	ecx, 9
	or	rsi, -1
	lea	rdx, .LC1889[rip]
	lea	rdi, FILENAME$[rip]
	call	fb_StrAssign@PLT
	add	rsp, 280
	xor	r8d, r8d
	mov	ecx, 6
	pop	rbx
	lea	rdx, .LC1890[rip]
	pop	rbp
	or	rsi, -1
	pop	r12
	lea	rdi, COMPILER$[rip]
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_StrAssign@PLT
.L4738:
.L3405:
	xor	r8d, r8d
	mov	ecx, 6
	or	rsi, -1
	lea	rdx, .LC1887[rip]
	lea	rdi, FILENAME$[rip]
	call	fb_StrAssign@PLT
	add	rsp, 280
	xor	r8d, r8d
	mov	ecx, 9
	pop	rbx
	lea	rdx, .LC1888[rip]
	pop	rbp
	or	rsi, -1
	pop	r12
	lea	rdi, COMPILER$[rip]
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_StrAssign@PLT
.L4737:
.L3403:
	xor	r8d, r8d
	mov	ecx, 7
	or	rsi, -1
	lea	rdx, .LC1885[rip]
	lea	rdi, FILENAME$[rip]
	call	fb_StrAssign@PLT
	add	rsp, 280
	xor	r8d, r8d
	mov	ecx, 9
	pop	rbx
	lea	rdx, .LC1886[rip]
	pop	rbp
	or	rsi, -1
	pop	r12
	lea	rdi, COMPILER$[rip]
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_StrAssign@PLT
.L4506:
.L2795:
	mov	esi, 7
	lea	rdi, .LC1500[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4505:
.L2793:
	mov	esi, 5
	lea	rdi, .LC1499[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4504:
.L2791:
	mov	esi, 10
	lea	rdi, .LC1498[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4503:
.L2789:
	mov	esi, 7
	lea	rdi, .LC1497[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4502:
.L2787:
	mov	esi, 9
	lea	rdi, .LC1496[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4501:
.L2785:
	mov	esi, 6
	lea	rdi, .LC1495[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4500:
.L2783:
	mov	esi, 9
	lea	rdi, .LC1494[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4499:
.L2781:
	mov	esi, 7
	lea	rdi, .LC1493[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4498:
.L2779:
	mov	esi, 6
	lea	rdi, .LC1492[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4497:
.L2777:
	mov	esi, 5
	lea	rdi, .LC1491[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4496:
.L2775:
	mov	esi, 6
	lea	rdi, .LC1490[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4495:
.L2773:
	mov	esi, 7
	lea	rdi, .LC1489[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4494:
.L2771:
	mov	esi, 7
	lea	rdi, .LC1488[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4493:
.L2769:
	mov	esi, 9
	lea	rdi, .LC1487[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4492:
.L2767:
	mov	esi, 3
	lea	rdi, .LC1486[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4491:
.L2765:
	mov	esi, 6
	lea	rdi, .LC1485[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4490:
.L2763:
	mov	esi, 7
	lea	rdi, .LC1484[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4489:
.L2761:
	mov	esi, 8
	lea	rdi, .LC1483[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4488:
.L2759:
	mov	esi, 11
	lea	rdi, .LC1482[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4487:
.L2757:
	mov	esi, 8
	lea	rdi, .LC1481[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4486:
.L2755:
	mov	esi, 12
	lea	rdi, .LC1480[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4485:
.L2753:
	mov	esi, 11
	lea	rdi, .LC1479[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4484:
.L2751:
	mov	esi, 10
	lea	rdi, .LC1478[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4483:
.L2749:
	mov	esi, 7
	lea	rdi, .LC1477[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4482:
.L2747:
	mov	esi, 19
	lea	rdi, .LC1476[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4481:
.L2745:
	mov	esi, 10
	lea	rdi, .LC1475[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4480:
.L2743:
	mov	esi, 7
	lea	rdi, .LC1474[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4479:
.L2741:
	mov	esi, 10
	lea	rdi, .LC1473[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4478:
.L2739:
	mov	esi, 9
	lea	rdi, .LC1472[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4477:
.L2737:
	mov	esi, 4
	lea	rdi, .LC1471[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4476:
.L2735:
	mov	esi, 9
	lea	rdi, .LC1470[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4475:
.L2733:
	mov	esi, 3
	lea	rdi, .LC1469[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4567:
.L2924:
	mov	esi, 9
	lea	rdi, .LC1563[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4566:
.L2922:
	mov	esi, 8
	lea	rdi, .LC1562[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2920:
	mov	esi, 6
	lea	rdi, .LC1561[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4565:
.L2918:
	mov	esi, 13
	lea	rdi, .LC1560[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4564:
.L2916:
	mov	esi, 7
	lea	rdi, .LC1559[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4563:
.L2914:
	mov	esi, 4
	lea	rdi, .LC1558[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4562:
.L2911:
	mov	esi, 8
	lea	rdi, .LC1557[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2909:
.L2912:
	mov	esi, 7
	lea	rdi, .LC1556[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4561:
.L2907:
	mov	esi, 6
	lea	rdi, .LC1555[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4560:
.L2905:
	mov	esi, 6
	lea	rdi, .LC1554[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4559:
.L2903:
	mov	esi, 2
	lea	rdi, .LC1553[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4558:
.L2901:
	mov	esi, 6
	lea	rdi, .LC1552[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4557:
.L2899:
	mov	esi, 10
	lea	rdi, .LC1551[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4556:
.L2897:
	mov	esi, 12
	lea	rdi, .LC1550[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4555:
.L2895:
	mov	esi, 5
	lea	rdi, .LC1549[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4554:
.L2893:
	mov	esi, 9
	lea	rdi, .LC1548[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4553:
.L2891:
	mov	esi, 4
	lea	rdi, .LC1547[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4552:
.L2889:
	mov	esi, 7
	lea	rdi, .LC1546[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4551:
.L2887:
	mov	esi, 11
	lea	rdi, .LC1545[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4550:
.L2885:
	mov	esi, 13
	lea	rdi, .LC1544[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4549:
.L2883:
	mov	esi, 13
	lea	rdi, .LC1543[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4548:
.L2881:
	mov	esi, 9
	lea	rdi, .LC1542[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4547:
.L2879:
	mov	esi, 15
	lea	rdi, .LC1541[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4546:
.L2877:
	mov	esi, 19
	lea	rdi, .LC1540[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4545:
.L2875:
	mov	esi, 13
	lea	rdi, .LC1539[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4544:
.L2873:
	mov	esi, 20
	lea	rdi, .LC1538[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4543:
.L2871:
	mov	esi, 14
	lea	rdi, .LC1537[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4542:
.L2869:
	mov	esi, 9
	lea	rdi, .LC1536[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4541:
.L2867:
	mov	esi, 15
	lea	rdi, .LC1535[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4540:
.L2865:
	mov	esi, 20
	lea	rdi, .LC1534[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4539:
.L2863:
	mov	esi, 14
	lea	rdi, .LC1533[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4538:
.L2861:
	mov	esi, 9
	lea	rdi, .LC1532[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4537:
.L2859:
	mov	esi, 11
	lea	rdi, .LC1531[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4536:
.L2857:
	mov	esi, 4
	lea	rdi, .LC1530[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4535:
.L2855:
	mov	esi, 8
	lea	rdi, .LC1529[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4534:
.L2853:
	mov	esi, 1
	lea	rdi, .LC246[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4533:
.L2851:
	mov	esi, 3
	lea	rdi, .LC1528[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4532:
.L2849:
	mov	esi, 4
	lea	rdi, .LC1527[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4531:
.L2847:
	mov	esi, 4
	lea	rdi, .LC1526[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4530:
.L2845:
	mov	esi, 9
	lea	rdi, .LC1525[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4529:
.L2843:
	mov	esi, 3
	lea	rdi, .LC1524[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4528:
.L2841:
	mov	esi, 7
	lea	rdi, .LC1523[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4527:
.L2839:
	mov	esi, 5
	lea	rdi, .LC1522[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4526:
.L2837:
	mov	esi, 9
	lea	rdi, .LC1521[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4525:
.L2835:
	mov	esi, 6
	lea	rdi, .LC1520[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4524:
.L2833:
	mov	esi, 3
	lea	rdi, .LC1519[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4523:
.L2831:
	mov	esi, 5
	lea	rdi, .LC1518[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2829:
	mov	esi, 7
	lea	rdi, .LC1517[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L2827:
.L4522:
.L2828:
	mov	esi, 5
	lea	rdi, .LC1516[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4521:
.L2825:
	mov	esi, 2
	lea	rdi, .LC1515[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4520:
.L2823:
	mov	esi, 4
	lea	rdi, .LC1514[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4519:
.L2821:
	mov	esi, 5
	lea	rdi, .LC1513[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4518:
.L2819:
	mov	esi, 4
	lea	rdi, .LC1512[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4517:
.L2817:
	mov	esi, 3
	lea	rdi, .LC1511[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4516:
.L2815:
	mov	esi, 2
	lea	rdi, .LC1510[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4515:
.L2813:
	mov	esi, 7
	lea	rdi, .LC1509[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4514:
.L2811:
	mov	esi, 6
	lea	rdi, .LC1508[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4513:
.L2809:
	mov	esi, 8
	lea	rdi, .LC1507[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4512:
.L2807:
	mov	esi, 9
	lea	rdi, .LC1506[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4511:
.L2805:
	mov	esi, 11
	lea	rdi, .LC1505[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4510:
.L2803:
	mov	esi, 6
	lea	rdi, .LC1504[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4509:
.L2801:
	mov	esi, 6
	lea	rdi, .LC1503[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4508:
.L2799:
	mov	esi, 7
	lea	rdi, .LC1502[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4507:
.L2797:
	mov	esi, 5
	lea	rdi, .LC1501[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4692:
.L3180:
	mov	esi, 6
	lea	rdi, .LC1690[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4691:
.L3178:
	mov	esi, 4
	lea	rdi, .LC1689[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4690:
.L3176:
	mov	esi, 4
	lea	rdi, .LC1688[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4689:
.L3174:
	mov	esi, 3
	lea	rdi, .LC1687[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4688:
.L3172:
	mov	esi, 8
	lea	rdi, .LC1686[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4687:
.L3170:
	mov	esi, 5
	lea	rdi, .LC1685[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4686:
.L3168:
	mov	esi, 5
	lea	rdi, .LC1684[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4685:
.L3166:
	mov	esi, 3
	lea	rdi, .LC1683[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4684:
.L3164:
	mov	esi, 1
	lea	rdi, .LC247[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4683:
.L3162:
	mov	esi, 6
	lea	rdi, .LC1682[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4682:
.L3160:
	mov	esi, 3
	lea	rdi, .LC1681[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4681:
.L3158:
	mov	esi, 12
	lea	rdi, .LC1680[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4680:
.L3156:
	mov	esi, 4
	lea	rdi, .LC1679[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4679:
.L3154:
	mov	esi, 8
	lea	rdi, .LC1678[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4678:
.L3152:
	mov	esi, 6
	lea	rdi, .LC1677[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4677:
.L3150:
	mov	esi, 4
	lea	rdi, .LC1676[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4676:
.L3148:
	mov	esi, 11
	lea	rdi, .LC1675[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4675:
.L3146:
	mov	esi, 8
	lea	rdi, .LC1674[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4674:
.L3144:
	mov	esi, 6
	lea	rdi, .LC1673[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4673:
.L3142:
	mov	esi, 14
	lea	rdi, .LC1672[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4672:
.L3140:
	mov	esi, 5
	lea	rdi, .LC1671[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4671:
.L3138:
	mov	esi, 3
	lea	rdi, .LC1670[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4670:
.L3136:
	mov	esi, 8
	lea	rdi, .LC1669[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4669:
.L3134:
	mov	esi, 12
	lea	rdi, .LC1668[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4668:
.L3132:
	mov	esi, 9
	lea	rdi, .LC1667[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4667:
.L3130:
	mov	esi, 6
	lea	rdi, .LC1666[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4666:
.L3128:
	mov	esi, 10
	lea	rdi, .LC1665[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4665:
.L3126:
	mov	esi, 11
	lea	rdi, .LC1664[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4664:
.L3124:
	mov	esi, 11
	lea	rdi, .LC1663[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4663:
.L3122:
	mov	esi, 11
	lea	rdi, .LC1662[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4662:
.L3120:
	mov	esi, 8
	lea	rdi, .LC1661[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4661:
.L3118:
	mov	esi, 5
	lea	rdi, .LC1660[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4660:
.L3116:
	mov	esi, 6
	lea	rdi, .LC1659[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4659:
.L3114:
	mov	esi, 9
	lea	rdi, .LC1658[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4658:
.L3112:
	mov	esi, 6
	lea	rdi, .LC1657[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3110:
	mov	esi, 6
	lea	rdi, .LC1656[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3108:
.L4657:
.L3109:
	mov	esi, 6
	lea	rdi, .LC1655[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4656:
.L3106:
	mov	esi, 5
	lea	rdi, .LC1654[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4655:
.L3104:
	mov	esi, 8
	lea	rdi, .LC1653[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3102:
	mov	esi, 6
	lea	rdi, .LC1652[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3100:
.L4654:
.L3101:
	mov	esi, 3
	lea	rdi, .LC1651[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4653:
.L3098:
	mov	esi, 4
	lea	rdi, .LC1650[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4652:
.L3096:
	mov	esi, 4
	lea	rdi, .LC1649[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4651:
.L3094:
	mov	esi, 4
	lea	rdi, .LC1648[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4650:
.L3092:
	mov	esi, 5
	lea	rdi, .LC1647[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4649:
.L3090:
	mov	esi, 4
	lea	rdi, .LC1646[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4648:
.L3088:
	mov	esi, 6
	lea	rdi, .LC1645[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4647:
.L3086:
	mov	esi, 7
	lea	rdi, .LC1644[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4646:
.L3084:
	mov	esi, 6
	lea	rdi, .LC1643[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4645:
.L3082:
	mov	esi, 10
	lea	rdi, .LC1642[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4644:
.L3080:
	mov	esi, 6
	lea	rdi, .LC1641[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4643:
.L3078:
	mov	esi, 10
	lea	rdi, .LC1640[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4642:
.L3076:
	mov	esi, 5
	lea	rdi, .LC1639[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4641:
.L3074:
	mov	esi, 10
	lea	rdi, .LC1638[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4640:
.L3072:
	mov	esi, 10
	lea	rdi, .LC1637[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4639:
.L3070:
	mov	esi, 8
	lea	rdi, .LC1636[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4638:
.L3068:
	mov	esi, 4
	lea	rdi, .LC1635[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4637:
.L3066:
	mov	esi, 3
	lea	rdi, .LC1634[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4636:
.L3064:
	mov	esi, 7
	lea	rdi, .LC1633[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4635:
.L3062:
	mov	esi, 9
	lea	rdi, .LC1632[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4634:
.L3060:
	mov	esi, 11
	lea	rdi, .LC1631[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4633:
.L3058:
	mov	esi, 5
	lea	rdi, .LC1630[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4632:
.L3056:
	mov	esi, 13
	lea	rdi, .LC1629[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4631:
.L3054:
	mov	esi, 6
	lea	rdi, .LC1628[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4630:
.L3052:
	mov	esi, 7
	lea	rdi, .LC1627[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4629:
.L3050:
	mov	esi, 7
	lea	rdi, .LC1626[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4628:
.L3048:
	mov	esi, 9
	lea	rdi, .LC1625[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4627:
.L3046:
	mov	esi, 12
	lea	rdi, .LC1624[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4626:
.L3044:
	mov	esi, 6
	lea	rdi, .LC1623[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4625:
.L3042:
	mov	esi, 8
	lea	rdi, .LC1622[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4624:
.L3040:
	mov	esi, 13
	lea	rdi, .LC1621[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4623:
.L3038:
	mov	esi, 10
	lea	rdi, .LC1620[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4622:
.L3036:
	mov	esi, 3
	lea	rdi, .LC1619[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4621:
.L3034:
	mov	esi, 7
	lea	rdi, .LC1618[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3032:
	mov	esi, 6
	lea	rdi, .LC1617[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L3030:
.L4620:
.L3031:
	mov	esi, 5
	lea	rdi, .LC1616[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4619:
.L3028:
	mov	esi, 15
	lea	rdi, .LC1615[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4618:
.L3026:
	mov	esi, 6
	lea	rdi, .LC1614[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4617:
.L3024:
	mov	esi, 5
	lea	rdi, .LC1613[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4616:
.L3022:
	mov	esi, 11
	lea	rdi, .LC1612[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4615:
.L3020:
	mov	esi, 14
	lea	rdi, .LC1611[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4614:
.L3018:
	mov	esi, 12
	lea	rdi, .LC1610[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4613:
.L3016:
	mov	esi, 10
	lea	rdi, .LC1609[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4612:
.L3014:
	mov	esi, 14
	lea	rdi, .LC1608[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4611:
.L3012:
	mov	esi, 14
	lea	rdi, .LC1607[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4610:
.L3010:
	mov	esi, 12
	lea	rdi, .LC1606[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4609:
.L3008:
	mov	esi, 4
	lea	rdi, .LC1605[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4608:
.L3006:
	mov	esi, 3
	lea	rdi, .LC1604[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4607:
.L3004:
	mov	esi, 5
	lea	rdi, .LC1603[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4606:
.L3002:
	mov	esi, 9
	lea	rdi, .LC1602[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4605:
.L3000:
	mov	esi, 6
	lea	rdi, .LC1601[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4604:
.L2998:
	mov	esi, 15
	lea	rdi, .LC1600[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4603:
.L2996:
	mov	esi, 10
	lea	rdi, .LC1599[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4602:
.L2994:
	mov	esi, 17
	lea	rdi, .LC1598[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4601:
.L2992:
	mov	esi, 6
	lea	rdi, .LC1597[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4600:
.L2990:
	mov	esi, 8
	lea	rdi, .LC1596[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4599:
.L2988:
	mov	esi, 9
	lea	rdi, .LC1595[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4598:
.L2986:
	mov	esi, 5
	lea	rdi, .LC1594[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4597:
.L2984:
	mov	esi, 5
	lea	rdi, .LC1593[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4596:
.L2982:
	mov	esi, 10
	lea	rdi, .LC1592[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4595:
.L2980:
	mov	esi, 3
	lea	rdi, .LC1591[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4594:
.L2978:
	mov	esi, 5
	lea	rdi, .LC1590[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4593:
.L2976:
	mov	esi, 5
	lea	rdi, .LC1589[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4592:
.L2974:
	mov	esi, 5
	lea	rdi, .LC1588[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4591:
.L2972:
	mov	esi, 6
	lea	rdi, .LC1587[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4590:
.L2970:
	mov	esi, 4
	lea	rdi, .LC1586[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4589:
.L2968:
	mov	esi, 4
	lea	rdi, .LC1585[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4588:
.L2966:
	mov	esi, 9
	lea	rdi, .LC1584[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4587:
.L2964:
	mov	esi, 3
	lea	rdi, .LC1583[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4586:
.L2962:
	mov	esi, 18
	lea	rdi, .LC1582[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4585:
.L2960:
	mov	esi, 4
	lea	rdi, .LC1581[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4584:
.L2958:
	mov	esi, 3
	lea	rdi, .LC1580[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4583:
.L2956:
	mov	esi, 5
	lea	rdi, .LC1579[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4582:
.L2954:
	mov	esi, 3
	lea	rdi, .LC1578[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4581:
.L2952:
	mov	esi, 9
	lea	rdi, .LC1577[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4580:
.L2950:
	mov	esi, 8
	lea	rdi, .LC1576[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4579:
.L2948:
	mov	esi, 5
	lea	rdi, .LC1575[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4578:
.L2946:
	mov	esi, 10
	lea	rdi, .LC1574[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4577:
.L2944:
	mov	esi, 3
	lea	rdi, .LC1573[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4576:
.L2942:
	mov	esi, 3
	lea	rdi, .LC1572[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4575:
.L2940:
	mov	esi, 7
	lea	rdi, .LC1571[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4574:
.L2938:
	mov	esi, 12
	lea	rdi, .LC1570[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4573:
.L2936:
	mov	esi, 10
	lea	rdi, .LC1569[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4572:
.L2934:
	mov	esi, 8
	lea	rdi, .LC1568[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4571:
.L2932:
	mov	esi, 8
	lea	rdi, .LC1567[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4570:
.L2930:
	mov	esi, 8
	lea	rdi, .LC1566[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4569:
.L2928:
	mov	esi, 4
	lea	rdi, .LC1565[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
.L4568:
.L2926:
	mov	esi, 4
	lea	rdi, .LC1564[rip]
	call	fb_StrAllocTempDescZEx@PLT
	add	rsp, 280
	xor	edx, edx
	mov	edi, 1
	pop	rbx
	mov	rsi, rax
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	jmp	fb_PrintString@PLT
	.size	_ZN8MEMORY_T6POKE64Edd, .-_ZN8MEMORY_T6POKE64Edd
	.section	.rodata.str1.1
.LC2064:
	.string	"64c.251913-01.bin"
.LC2066:
	.string	"./chargen/2.c64"
.LC2077:
	.string	"BYTES"
.LC2078:
	.string	"FREE"
.LC2080:
	.string	"MICROSOFT"
.LC2081:
	.string	"BASIC"
.LC2084:
	.string	"RAM SYSTEM"
.LC2087:
	.string	" RAM SYSTEM"
	.text
	.p2align 4
	.globl	_ZN8MEMORY_TC1Ev
	.type	_ZN8MEMORY_TC1Ev, @function
_ZN8MEMORY_TC1Ev:
.L4840:
	push	r14
	mov	edx, 134217728
	xor	esi, esi
	push	r13
	push	r12
	mov	r12d, 512
	push	rbp
	mov	rbp, rdi
	push	rbx
	xor	ebx, ebx
	sub	rsp, 80
	call	memset@PLT
	lea	rdi, 134217728[rbp]
	mov	edx, 131072
	xor	esi, esi
	call	memset@PLT
	lea	rdi, 134348800[rbp]
	mov	edx, 131072
	xor	esi, esi
	call	memset@PLT
	lea	rdi, 134479872[rbp]
	mov	edx, 262024
	xor	esi, esi
	call	memset@PLT
	lea	rdi, 134741904[rbp]
	mov	edx, ebp
	xor	eax, eax
	and	rdi, -8
	lea	r13, 40[rsp]
	lea	rsi, 134750096[rbp]
	mov	QWORD PTR 134741896[rbp], 0
	sub	edx, edi
	and	rsi, -8
	mov	QWORD PTR 134750080[rbp], 0
	lea	ecx, 134750088[rdx]
	lea	rdx, 134752976[rbp]
	shr	ecx, 3
	rep stosq
	mov	ecx, ebp
	mov	rdi, rsi
	mov	QWORD PTR 134750088[rbp], 0
	mov	QWORD PTR 134752960[rbp], 0
	sub	ecx, esi
	add	ecx, 134752968
	shr	ecx, 3
	rep stosq
	mov	rdi, rdx
	mov	edx, ebp
	mov	QWORD PTR 134752968[rbp], 0
	mov	QWORD PTR 134755840[rbp], 0
	and	rdi, -8
	sub	edx, edi
	lea	ecx, 134755848[rdx]
	shr	ecx, 3
	rep stosq
	mov	rax, QWORD PTR .LC357[rip]
	mov	QWORD PTR 40[rsp], 0
	mov	QWORD PTR SYS_OFFSET$[rip], rax
	.p2align 4,,10
	.p2align 3
.L4841:
	mov	rdi, r13
	call	fb_DataReadLongint@PLT
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, QWORD PTR 40[rsp]
	movsd	QWORD PTR 0[rbp+rbx*8], xmm0
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rbx
	addsd	xmm0, QWORD PTR .LC1[rip]
	cvttsd2si	rbx, xmm0
	sub	r12d, 1
	jne	.L4841
	mov	edx, 512
	mov	eax, 512
	.p2align 4,,10
	.p2align 3
.L4842:
	pxor	xmm0, xmm0
	mov	rcx, QWORD PTR .LC259[rip]
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC1[rip]
	mov	QWORD PTR 0[rbp+rax*8], rcx
	cvttsd2si	rax, xmm0
	sub	edx, 1
	jne	.L4842
	mov	ebx, 1
	mov	r12d, 359
	lea	r14, 24[rsp]
	mov	rax, QWORD PTR .LC1[rip]
	mov	QWORD PTR 134750088[rbp], 0x000000000
	movsd	xmm2, QWORD PTR .LC2057[rip]
	lea	r13, 16[rsp]
	divsd	xmm2, QWORD PTR .LC2058[rip]
	movq	xmm0, rax
	mov	QWORD PTR 134752968[rbp], rax
	movq	xmm1, rax
	movsd	QWORD PTR 8[rsp], xmm2
	.p2align 4,,10
	.p2align 3
.L4843:
	mulsd	xmm0, QWORD PTR 8[rsp]
	mov	rsi, r13
	mov	rdi, r14
	sal	rbx, 3
	movsd	QWORD PTR [rsp], xmm1
	call	sincos@PLT
	movsd	xmm1, QWORD PTR [rsp]
	addsd	xmm1, QWORD PTR .LC1[rip]
	movsd	xmm0, QWORD PTR 16[rsp]
	movsd	xmm2, QWORD PTR 24[rsp]
	movsd	QWORD PTR 134752968[rbp+rbx], xmm0
	movsd	QWORD PTR 134750088[rbp+rbx], xmm2
	cvttsd2si	rbx, xmm1
	pxor	xmm1, xmm1
	cvtsi2sd	xmm1, rbx
	movapd	xmm0, xmm1
	sub	r12d, 1
	jne	.L4843
	mov	rax, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC281[rip]
	mov	rdi, rbp
	lea	rbx, 39[rsp]
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC282[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC283[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC362[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC259[rip]
	movsd	xmm0, QWORD PTR .LC271[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC107[rip]
	movsd	xmm0, QWORD PTR .LC2059[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC132[rip]
	movsd	xmm0, QWORD PTR .LC279[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC2060[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC105[rip]
	movsd	xmm0, QWORD PTR .LC2061[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC110[rip]
	movsd	xmm0, QWORD PTR .LC2062[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC110[rip]
	movsd	xmm0, QWORD PTR .LC2063[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	mov	esi, 17
	mov	BYTE PTR 39[rsp], 0
	lea	rdi, .LC2064[rip]
	call	fb_StrAllocTempDescZEx@PLT
	xor	r9d, r9d
	mov	r8d, 1
	xor	ecx, ecx
	mov	rdi, rax
	xor	edx, edx
	xor	esi, esi
	call	fb_FileOpen@PLT
	pxor	xmm0, xmm0
	.p2align 4,,10
	.p2align 3
.L4844:
	mov	rdx, rbx
	xor	esi, esi
	mov	ecx, 1
	mov	edi, 1
	movsd	QWORD PTR [rsp], xmm0
	call	fb_FileGetLarge@PLT
	movsd	xmm0, QWORD PTR [rsp]
	movzx	edx, BYTE PTR 39[rsp]
	pxor	xmm1, xmm1
	cvtsd2si	rax, xmm0
	cvtsi2sd	xmm1, edx
	movsd	QWORD PTR 134348800[rbp+rax*8], xmm1
	movapd	xmm1, xmm0
	comisd	xmm1, QWORD PTR .LC2065[rip]
	addsd	xmm0, QWORD PTR .LC1[rip]
	jbe	.L4844
	pxor	xmm0, xmm0
	.p2align 4,,10
	.p2align 3
.L4846:
	mov	rdx, rbx
	xor	esi, esi
	mov	ecx, 1
	mov	edi, 1
	movsd	QWORD PTR [rsp], xmm0
	call	fb_FileGetLarge@PLT
	movsd	xmm0, QWORD PTR [rsp]
	movzx	edx, BYTE PTR 39[rsp]
	pxor	xmm1, xmm1
	cvtsd2si	rax, xmm0
	cvtsi2sd	xmm1, edx
	movsd	QWORD PTR 134217728[rbp+rax*8], xmm1
	movapd	xmm1, xmm0
	comisd	xmm1, QWORD PTR .LC2065[rip]
	addsd	xmm0, QWORD PTR .LC1[rip]
	jbe	.L4846
	mov	edi, 1
	call	fb_FileClose@PLT
	mov	esi, 15
	lea	rdi, .LC2066[rip]
	call	fb_StrAllocTempDescZEx@PLT
	xor	r9d, r9d
	mov	r8d, 1
	xor	ecx, ecx
	mov	rdi, rax
	xor	edx, edx
	xor	esi, esi
	call	fb_FileOpen@PLT
	pxor	xmm0, xmm0
	.p2align 4,,10
	.p2align 3
.L4848:
	mov	rdx, rbx
	xor	esi, esi
	mov	ecx, 1
	mov	edi, 1
	movsd	QWORD PTR [rsp], xmm0
	call	fb_FileGetLarge@PLT
	movsd	xmm0, QWORD PTR [rsp]
	movzx	edx, BYTE PTR 39[rsp]
	pxor	xmm1, xmm1
	cvtsd2si	rax, xmm0
	cvtsi2sd	xmm1, edx
	movsd	QWORD PTR 134479872[rbp+rax*8], xmm1
	movapd	xmm1, xmm0
	comisd	xmm1, QWORD PTR .LC2065[rip]
	addsd	xmm0, QWORD PTR .LC1[rip]
	jbe	.L4848
	xor	esi, esi
	mov	edi, 1
	call	fb_FileSeekLarge@PLT
	movsd	xmm0, QWORD PTR .LC320[rip]
	.p2align 4,,10
	.p2align 3
.L4850:
	mov	rdx, rbx
	xor	esi, esi
	mov	ecx, 1
	mov	edi, 1
	movsd	QWORD PTR [rsp], xmm0
	call	fb_FileGetLarge@PLT
	movsd	xmm0, QWORD PTR [rsp]
	movzx	edx, BYTE PTR 39[rsp]
	pxor	xmm1, xmm1
	cvtsd2si	rax, xmm0
	cvtsi2sd	xmm1, edx
	movsd	QWORD PTR 134479872[rbp+rax*8], xmm1
	movapd	xmm1, xmm0
	comisd	xmm1, QWORD PTR .LC2067[rip]
	addsd	xmm0, QWORD PTR .LC1[rip]
	jbe	.L4850
	mov	edi, 1
	lea	r12, 48[rsp]
	mov	ebx, 1
	call	fb_FileClose@PLT
	movsd	xmm1, QWORD PTR .LC2068[rip]
	pxor	xmm0, xmm0
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC2068[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	mov	rax, QWORD PTR .LC1[rip]
	movq	xmm0, rax
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC2068[rip]
	movsd	xmm0, QWORD PTR .LC2069[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	mov	rax, QWORD PTR .LC2068[rip]
	movsd	xmm0, QWORD PTR .LC2070[rip]
	mov	rdi, rbp
	movq	xmm1, rax
	call	_ZN8MEMORY_T6POKE64Edd
	xor	esi, esi
	lea	rdi, .LC3[rip]
	call	fb_StrAllocTempDescZEx@PLT
	pxor	xmm1, xmm1
	xor	r8d, r8d
	xor	edx, edx
	mov	rcx, rax
	mov	r9d, 1073741828
	mov	esi, -16777216
	xor	edi, edi
	movaps	xmm0, xmm1
	call	fb_GfxPaint@PLT
	movsd	xmm1, QWORD PTR .LC2071[rip]
	movsd	xmm0, QWORD PTR .LC2072[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC2073[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC146[rip]
	movsd	xmm0, QWORD PTR .LC2074[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC2075[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC304[rip]
	movsd	xmm0, QWORD PTR .LC1897[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm1, QWORD PTR .LC2076[rip]
	movsd	xmm0, QWORD PTR .LC1898[rip]
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	xor	esi, esi
	mov	edi, 1
	xor	eax, eax
	call	fb_CHR@PLT
	xor	r8d, r8d
	mov	rcx, -1
	mov	rdi, r12
	mov	rdx, rax
	mov	rsi, -1
	call	fb_StrInit@PLT
	xor	r8d, r8d
	mov	ecx, 6
	mov	rdi, r12
	lea	rdx, .LC2077[rip]
	mov	rsi, -1
	call	fb_StrAssign@PLT
	.p2align 4,,10
	.p2align 3
.L4852:
	mov	edx, 1
	mov	rsi, rbx
	mov	rdi, r12
	call	fb_StrMid@PLT
	mov	esi, 1
	mov	rdi, rax
	call	fb_ASC@PLT
	pxor	xmm0, xmm0
	lea	rcx, 134226736[rbp+rbx*8]
	mov	edx, eax
	cvtsi2sd	xmm0, rdx
	xor	edx, edx
	cmp	eax, 31
	seta	dl
	neg	edx
	cmp	eax, 64
	sbb	eax, eax
	movsd	QWORD PTR [rcx], xmm0
	test	edx, eax
	jne	.L4855
	pxor	xmm0, xmm0
	mov	rsi, -1
	mov	rdi, r12
	cvtsi2sd	xmm0, rbx
	addsd	xmm0, QWORD PTR .LC1[rip]
	cvttsd2si	rbx, xmm0
	call	fb_StrLen@PLT
	cmp	rax, rbx
	jge	.L4852
	xor	r8d, r8d
	mov	ecx, 5
	mov	rdi, r12
	mov	ebx, 1
	lea	rdx, .LC2078[rip]
	mov	rsi, -1
	call	fb_StrAssign@PLT
	.p2align 4,,10
	.p2align 3
.L4858:
	mov	edx, 1
	mov	rsi, rbx
	mov	rdi, r12
	call	fb_StrMid@PLT
	mov	esi, 1
	mov	rdi, rax
	call	fb_ASC@PLT
	pxor	xmm0, xmm0
	lea	rcx, 134226784[rbp+rbx*8]
	mov	edx, eax
	cvtsi2sd	xmm0, rdx
	xor	edx, edx
	cmp	eax, 31
	seta	dl
	neg	edx
	cmp	eax, 64
	sbb	eax, eax
	movsd	QWORD PTR [rcx], xmm0
	test	edx, eax
	jne	.L4861
	pxor	xmm0, xmm0
	mov	rsi, -1
	mov	rdi, r12
	cvtsi2sd	xmm0, rbx
	addsd	xmm0, QWORD PTR .LC1[rip]
	cvttsd2si	rbx, xmm0
	call	fb_StrLen@PLT
	cmp	rax, rbx
	jge	.L4858
	mov	rax, QWORD PTR .LC73[rip]
	xor	r8d, r8d
	mov	ecx, 10
	mov	rdi, r12
	movapd	xmm0, XMMWORD PTR .LC2079[rip]
	lea	rdx, .LC2080[rip]
	mov	ebx, 1
	mov	rsi, -1
	mov	QWORD PTR 134226936[rbp], rax
	movups	XMMWORD PTR 134226920[rbp], xmm0
	call	fb_StrAssign@PLT
	.p2align 4,,10
	.p2align 3
.L4864:
	mov	edx, 1
	mov	rsi, rbx
	mov	rdi, r12
	call	fb_StrMid@PLT
	mov	esi, 1
	mov	rdi, rax
	call	fb_ASC@PLT
	pxor	xmm0, xmm0
	lea	rcx, 134226936[rbp+rbx*8]
	mov	edx, eax
	cvtsi2sd	xmm0, rdx
	xor	edx, edx
	cmp	eax, 31
	seta	dl
	neg	edx
	cmp	eax, 64
	sbb	eax, eax
	movsd	QWORD PTR [rcx], xmm0
	test	edx, eax
	jne	.L4867
	pxor	xmm0, xmm0
	mov	rsi, -1
	mov	rdi, r12
	cvtsi2sd	xmm0, rbx
	addsd	xmm0, QWORD PTR .LC1[rip]
	cvttsd2si	rbx, xmm0
	call	fb_StrLen@PLT
	cmp	rax, rbx
	jge	.L4864
	xor	r8d, r8d
	mov	ecx, 6
	mov	rdi, r12
	mov	ebx, 1
	mov	rax, QWORD PTR .LC73[rip]
	lea	rdx, .LC2081[rip]
	mov	rsi, -1
	mov	QWORD PTR 134227016[rbp], rax
	call	fb_StrAssign@PLT
	.p2align 4,,10
	.p2align 3
.L4870:
	mov	edx, 1
	mov	rsi, rbx
	mov	rdi, r12
	call	fb_StrMid@PLT
	mov	esi, 1
	mov	rdi, rax
	call	fb_ASC@PLT
	pxor	xmm0, xmm0
	lea	rcx, 0[0+rbx*8]
	mov	edx, eax
	lea	rsi, 134226688[rbp+rcx]
	cvtsi2sd	xmm0, rdx
	xor	edx, edx
	cmp	eax, 31
	seta	dl
	neg	edx
	cmp	eax, 64
	sbb	eax, eax
	movsd	QWORD PTR [rsi], xmm0
	test	edx, eax
	jne	.L4873
	mov	edx, 1
	mov	rsi, rbx
	mov	rdi, r12
	lea	r13, 134227016[rbp+rcx]
	call	fb_StrMid@PLT
	mov	esi, 1
	mov	rdi, rax
	call	fb_ASC@PLT
	pxor	xmm0, xmm0
	mov	edx, eax
	cvtsi2sd	xmm0, rdx
	xor	edx, edx
	cmp	eax, 31
	seta	dl
	neg	edx
	cmp	eax, 64
	sbb	eax, eax
	movsd	QWORD PTR 0[r13], xmm0
	test	edx, eax
	jne	.L4911
	pxor	xmm0, xmm0
	mov	rsi, -1
	mov	rdi, r12
	cvtsi2sd	xmm0, rbx
	addsd	xmm0, QWORD PTR .LC1[rip]
	cvttsd2si	rbx, xmm0
	call	fb_StrLen@PLT
	cmp	rax, rbx
	jge	.L4870
	movapd	xmm0, XMMWORD PTR .LC2082[rip]
	xor	r8d, r8d
	mov	ecx, 11
	mov	rdi, r12
	mov	rax, QWORD PTR .LC83[rip]
	lea	rdx, .LC2084[rip]
	mov	ebx, 1
	mov	rsi, -1
	movups	XMMWORD PTR 134227064[rbp], xmm0
	movapd	xmm0, XMMWORD PTR .LC2083[rip]
	mov	QWORD PTR 134227096[rbp], rax
	movups	XMMWORD PTR 134227080[rbp], xmm0
	call	fb_StrAssign@PLT
	jmp	.L4880
	.p2align 4,,10
	.p2align 3
.L4912:
	pxor	xmm0, xmm0
	mov	edx, 1
	mov	rdi, r12
	cvtsi2sd	xmm0, rbx
	addsd	xmm0, QWORD PTR .LC1[rip]
	cvttsd2si	rbx, xmm0
	mov	rsi, rbx
	call	fb_StrMid@PLT
	mov	esi, 1
	mov	rdi, rax
	call	fb_ASC@PLT
	mov	eax, eax
	cmp	rax, rbx
	jl	.L4884
.L4880:
	mov	edx, 1
	mov	rsi, rbx
	mov	rdi, r12
	call	fb_StrMid@PLT
	mov	esi, 1
	mov	rdi, rax
	call	fb_ASC@PLT
	pxor	xmm0, xmm0
	lea	rcx, 134227184[rbp+rbx*8]
	mov	edx, eax
	cvtsi2sd	xmm0, rdx
	xor	edx, edx
	cmp	eax, 31
	seta	dl
	neg	edx
	cmp	eax, 64
	sbb	eax, eax
	movsd	QWORD PTR [rcx], xmm0
	test	edx, eax
	je	.L4912
	addsd	xmm0, QWORD PTR .LC73[rip]
	movsd	QWORD PTR [rcx], xmm0
.L4884:
	mov	rax, QWORD PTR .LC73[rip]
	cvtsd2si	edi, QWORD PTR 0[rbp]
	mov	QWORD PTR 134227216[rbp], rax
	call	fb_GetMemAvail@PLT
	shr	rax, 30
	mov	rdi, rax
	call	fb_ULongintToStr@PLT
	xor	r8d, r8d
	mov	rdi, r12
	mov	rsi, -1
	mov	rdx, rax
	mov	rcx, -1
	call	fb_StrAssign@PLT
	mov	rsi, -1
	mov	rdi, r12
	call	fb_StrLen@PLT
	cmp	rax, 1
	jne	.L4913
.L4885:
	mov	esi, 1
	mov	rdi, r12
	call	fb_ASC@PLT
	pxor	xmm0, xmm0
	pxor	xmm1, xmm1
	mov	eax, eax
	cvtsi2sd	xmm1, rbx
	addsd	xmm1, QWORD PTR .LC1[rip]
	cvtsi2sd	xmm0, rax
	mov	rax, QWORD PTR .LC2085[rip]
	mov	QWORD PTR 134227168[rbp], rax
	mov	rax, QWORD PTR .LC2086[rip]
	cvttsd2si	r13, xmm1
	mov	QWORD PTR 134227176[rbp], rax
	lea	rax, 134227184[rbp+rbx*8]
	movsd	QWORD PTR 134227160[rbp], xmm0
	movsd	xmm0, QWORD PTR [rax]
.L4893:
	addsd	xmm0, QWORD PTR .LC73[rip]
	movsd	QWORD PTR [rax], xmm0
.L4896:
	mov	rsi, -1
	mov	rdi, r12
	call	fb_StrLen@PLT
	cmp	rax, r13
	jge	.L4897
	mov	rax, QWORD PTR .LC73[rip]
	movapd	xmm0, XMMWORD PTR .LC2089[rip]
	mov	rdi, r12
	mov	QWORD PTR 134227192[rbp], rax
	mov	QWORD PTR 134227224[rbp], rax
	mov	rax, QWORD PTR .LC2088[rip]
	movups	XMMWORD PTR 134244040[rbp], xmm0
	mov	QWORD PTR 134228392[rbp], rax
	call	fb_StrDelete@PLT
	add	rsp, 80
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	ret
	.p2align 4,,10
	.p2align 3
.L4873:
	addsd	xmm0, QWORD PTR .LC73[rip]
	movsd	QWORD PTR [rsi], xmm0
	jmp	.L4870
	.p2align 4,,10
	.p2align 3
.L4911:
	addsd	xmm0, QWORD PTR .LC73[rip]
	movsd	QWORD PTR 0[r13], xmm0
	jmp	.L4870
	.p2align 4,,10
	.p2align 3
.L4867:
	addsd	xmm0, QWORD PTR .LC73[rip]
	movsd	QWORD PTR [rcx], xmm0
	jmp	.L4864
	.p2align 4,,10
	.p2align 3
.L4861:
	addsd	xmm0, QWORD PTR .LC73[rip]
	movsd	QWORD PTR [rcx], xmm0
	jmp	.L4858
	.p2align 4,,10
	.p2align 3
.L4855:
	addsd	xmm0, QWORD PTR .LC73[rip]
	movsd	QWORD PTR [rcx], xmm0
	jmp	.L4852
.L4913:
	mov	rsi, -1
	mov	rdi, r12
	call	fb_StrLen@PLT
	mov	r13, rax
	cmp	rax, 2
	jne	.L4885
	mov	edx, 1
	mov	esi, 1
	mov	rdi, r12
	mov	ebx, 134227192
	call	fb_StrMid@PLT
	mov	esi, 1
	mov	rdi, rax
	call	fb_ASC@PLT
	pxor	xmm0, xmm0
	mov	edx, 1
	mov	rdi, r12
	mov	eax, eax
	mov	esi, 2
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR 134227160[rbp], xmm0
	call	fb_StrMid@PLT
	mov	esi, 1
	mov	rdi, rax
	call	fb_ASC@PLT
	pxor	xmm0, xmm0
	xor	r8d, r8d
	mov	rdi, r12
	mov	eax, eax
	mov	rsi, -1
	mov	ecx, 12
	cvtsi2sd	xmm0, rax
	mov	rax, QWORD PTR .LC2085[rip]
	lea	rdx, .LC2087[rip]
	mov	QWORD PTR 134227176[rbp], rax
	mov	rax, QWORD PTR .LC2086[rip]
	mov	QWORD PTR 134227184[rbp], rax
	movsd	QWORD PTR 134227168[rbp], xmm0
	call	fb_StrAssign@PLT
	mov	esi, 1
	jmp	.L4890
.L4897:
	pxor	xmm0, xmm0
	lea	rbx, 134227184[0+r13*8]
	mov	rsi, r13
	cvtsi2sd	xmm0, r13
	addsd	xmm0, QWORD PTR .LC1[rip]
	cvttsd2si	r13, xmm0
.L4890:
	mov	edx, 1
	mov	rdi, r12
	call	fb_StrMid@PLT
	mov	esi, 1
	mov	rdi, rax
	call	fb_ASC@PLT
	pxor	xmm0, xmm0
	mov	ecx, eax
	lea	rax, 0[rbp+rbx]
	mov	rdx, rcx
	cvtsi2sd	xmm0, rcx
	xor	ecx, ecx
	cmp	edx, 31
	seta	cl
	neg	ecx
	cmp	edx, 64
	sbb	edx, edx
	movsd	QWORD PTR [rax], xmm0
	test	ecx, edx
	jne	.L4893
	jmp	.L4896
	.size	_ZN8MEMORY_TC1Ev, .-_ZN8MEMORY_TC1Ev
	.section	.rodata.str1.1
.LC2126:
	.string	"cobc -x -free tmp.cob"
.LC2127:
	.string	"press any key to contiune."
	.text
	.p2align 4
	.globl	_ZN8MEMORY_T5POKEBEdd
	.type	_ZN8MEMORY_T5POKEBEdd, @function
_ZN8MEMORY_T5POKEBEdd:
	push	r13
	push	r12
	push	rbp
	mov	rbp, rdi
	push	rbx
	sub	rsp, 56
.L4915:
	cvtsd2si	rax, xmm0
	comisd	xmm0, QWORD PTR .LC1[rip]
	movsd	QWORD PTR 0[rbp+rax*8], xmm1
	je	.L5231
	comisd	xmm0, QWORD PTR .LC105[rip]
	je	.L5331
	comisd	xmm0, QWORD PTR .LC106[rip]
	je	.L5332
	comisd	xmm0, QWORD PTR .LC107[rip]
	je	.L5333
	comisd	xmm0, QWORD PTR .LC108[rip]
	je	.L5334
	comisd	xmm0, QWORD PTR .LC109[rip]
	je	.L5335
	comisd	xmm0, QWORD PTR .LC110[rip]
	je	.L5336
	comisd	xmm0, QWORD PTR .LC111[rip]
	je	.L5337
	comisd	xmm0, QWORD PTR .LC5[rip]
	je	.L5338
	comisd	xmm0, QWORD PTR .LC112[rip]
	je	.L5339
	comisd	xmm0, QWORD PTR .LC113[rip]
	je	.L5340
	comisd	xmm0, QWORD PTR .LC114[rip]
	je	.L5341
	comisd	xmm0, QWORD PTR .LC115[rip]
	je	.L5342
	comisd	xmm0, QWORD PTR .LC116[rip]
	je	.L5343
	comisd	xmm0, QWORD PTR .LC117[rip]
	je	.L5344
	comisd	xmm0, QWORD PTR .LC6[rip]
	je	.L5345
	comisd	xmm0, QWORD PTR .LC118[rip]
	je	.L5346
	comisd	xmm0, QWORD PTR .LC119[rip]
	je	.L5347
	comisd	xmm0, QWORD PTR .LC120[rip]
	je	.L5348
	comisd	xmm0, QWORD PTR .LC121[rip]
	je	.L5349
	comisd	xmm0, QWORD PTR .LC122[rip]
	je	.L5350
	comisd	xmm0, QWORD PTR .LC123[rip]
	je	.L4963
	comisd	xmm0, QWORD PTR .LC124[rip]
	je	.L4963
	comisd	xmm0, QWORD PTR .LC125[rip]
	je	.L4963
	comisd	xmm0, QWORD PTR .LC126[rip]
	je	.L4969
	comisd	xmm0, QWORD PTR .LC127[rip]
	je	.L4969
	comisd	xmm0, QWORD PTR .LC128[rip]
	je	.L4969
	comisd	xmm0, QWORD PTR .LC129[rip]
	je	.L4975
	comisd	xmm0, QWORD PTR .LC130[rip]
	je	.L4975
	comisd	xmm0, QWORD PTR .LC131[rip]
	je	.L4975
	comisd	xmm0, QWORD PTR .LC132[rip]
	je	.L4981
	comisd	xmm0, QWORD PTR .LC73[rip]
	je	.L4981
	comisd	xmm0, QWORD PTR .LC74[rip]
	je	.L4981
	comisd	xmm0, QWORD PTR .LC75[rip]
	je	.L5252
	comisd	xmm0, QWORD PTR .LC76[rip]
	je	.L5351
	comisd	xmm0, QWORD PTR .LC77[rip]
	je	.L5352
	comisd	xmm0, QWORD PTR .LC78[rip]
	je	.L5353
	comisd	xmm0, QWORD PTR .LC79[rip]
	je	.L5354
	comisd	xmm0, QWORD PTR .LC80[rip]
	je	.L5355
	comisd	xmm0, QWORD PTR .LC81[rip]
	je	.L5356
	comisd	xmm0, QWORD PTR .LC82[rip]
	je	.L5357
	comisd	xmm0, QWORD PTR .LC83[rip]
	je	.L5358
	comisd	xmm0, QWORD PTR .LC84[rip]
	je	.L5359
	comisd	xmm0, QWORD PTR .LC85[rip]
	je	.L4914
	comisd	xmm0, QWORD PTR .LC86[rip]
	je	.L5262
	comisd	xmm0, QWORD PTR .LC87[rip]
	je	.L5360
	comisd	xmm0, QWORD PTR .LC88[rip]
	je	.L5361
	comisd	xmm0, QWORD PTR .LC89[rip]
	je	.L5362
	comisd	xmm0, QWORD PTR .LC90[rip]
	je	.L5363
	comisd	xmm0, QWORD PTR .LC91[rip]
	je	.L4914
	comisd	xmm0, QWORD PTR .LC92[rip]
	je	.L5267
	comisd	xmm0, QWORD PTR .LC93[rip]
	je	.L5364
	comisd	xmm0, QWORD PTR .LC94[rip]
	je	.L5365
	comisd	xmm0, QWORD PTR .LC95[rip]
	je	.L5366
	comisd	xmm0, QWORD PTR .LC96[rip]
	je	.L5367
	comisd	xmm0, QWORD PTR .LC97[rip]
	je	.L5368
	comisd	xmm0, QWORD PTR .LC98[rip]
	je	.L5034
	comisd	xmm0, QWORD PTR .LC99[rip]
	je	.L5038
	comisd	xmm0, QWORD PTR .LC100[rip]
	je	.L5369
	comisd	xmm0, QWORD PTR .LC101[rip]
	je	.L5034
	comisd	xmm0, QWORD PTR .LC102[rip]
	je	.L5038
	comisd	xmm0, QWORD PTR .LC103[rip]
	je	.L5050
	comisd	xmm0, QWORD PTR .LC104[rip]
	je	.L5050
	comisd	xmm0, QWORD PTR .LC1905[rip]
	je	.L5050
	comisd	xmm0, QWORD PTR .LC294[rip]
	je	.L5050
	comisd	xmm0, QWORD PTR .LC2086[rip]
	je	.L5050
	comisd	xmm0, QWORD PTR .LC2090[rip]
	je	.L5050
	comisd	xmm0, QWORD PTR .LC2091[rip]
	je	.L5050
	comisd	xmm0, QWORD PTR .LC286[rip]
	je	.L5050
	comisd	xmm0, QWORD PTR .LC2092[rip]
	je	.L5038
	comisd	xmm0, QWORD PTR .LC2085[rip]
	je	.L5274
	comisd	xmm0, QWORD PTR .LC2093[rip]
	je	.L5370
	comisd	xmm0, QWORD PTR .LC2094[rip]
	je	.L5371
	comisd	xmm0, QWORD PTR .LC2095[rip]
	je	.L5372
	comisd	xmm0, QWORD PTR .LC2096[rip]
	je	.L5373
	comisd	xmm0, QWORD PTR .LC2097[rip]
	je	.L5374
	comisd	xmm0, QWORD PTR .LC2098[rip]
	je	.L5375
	comisd	xmm0, QWORD PTR .LC2099[rip]
	je	.L5376
	comisd	xmm0, QWORD PTR .LC2100[rip]
	je	.L5377
	comisd	xmm0, QWORD PTR .LC2101[rip]
	je	.L5378
	comisd	xmm0, QWORD PTR .LC287[rip]
	je	.L5379
	comisd	xmm0, QWORD PTR .LC2102[rip]
	je	.L5380
	comisd	xmm0, QWORD PTR .LC2103[rip]
	je	.L5381
	comisd	xmm0, QWORD PTR .LC2104[rip]
	je	.L5382
	comisd	xmm0, QWORD PTR .LC285[rip]
	je	.L5383
	comisd	xmm0, QWORD PTR .LC2105[rip]
	je	.L5384
	comisd	xmm0, QWORD PTR .LC2106[rip]
	je	.L5385
	comisd	xmm0, QWORD PTR .LC2107[rip]
	je	.L5386
	comisd	xmm0, QWORD PTR .LC301[rip]
	je	.L5387
	comisd	xmm0, QWORD PTR .LC2108[rip]
	je	.L5388
	comisd	xmm0, QWORD PTR .LC2109[rip]
	je	.L5389
	comisd	xmm0, QWORD PTR .LC2110[rip]
	je	.L5390
	comisd	xmm0, QWORD PTR .LC2111[rip]
	je	.L5391
	comisd	xmm0, QWORD PTR .LC2112[rip]
	je	.L5392
	comisd	xmm0, QWORD PTR .LC2113[rip]
	je	.L5393
	comisd	xmm0, QWORD PTR .LC2076[rip]
	je	.L5394
	comisd	xmm0, QWORD PTR .LC288[rip]
	je	.L5395
	comisd	xmm0, QWORD PTR .LC2114[rip]
	je	.L5396
	comisd	xmm0, QWORD PTR .LC2115[rip]
	je	.L5397
	comisd	xmm0, QWORD PTR .LC2116[rip]
	je	.L5398
	comisd	xmm0, QWORD PTR .LC2117[rip]
	je	.L5399
	comisd	xmm0, QWORD PTR .LC305[rip]
	je	.L5400
	comisd	xmm0, QWORD PTR .LC2118[rip]
	je	.L5401
	comisd	xmm0, QWORD PTR .LC2119[rip]
	je	.L5402
	comisd	xmm0, QWORD PTR .LC302[rip]
	je	.L5403
	comisd	xmm0, QWORD PTR .LC2120[rip]
	je	.L5404
	comisd	xmm0, QWORD PTR .LC2121[rip]
	je	.L5405
	comisd	xmm0, QWORD PTR .LC2122[rip]
	jne	.L5406
.L5133:
	movapd	xmm0, xmm1
	movsd	xmm1, QWORD PTR 394888[rbp]
	jmp	.L4915
.L5041:
.L5044:
.L5045:
.L5046:
.L5047:
.L5048:
.L5049:
	.p2align 4,,10
	.p2align 3
.L5050:
	mov	QWORD PTR 394888[rbp], 0x000000000
.L4914:
	add	rsp, 56
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	ret
.L5357:
.L4998:
	movsd	xmm0, QWORD PTR 394888[rbp]
	movsd	QWORD PTR 394832[rbp], xmm0
	jmp	.L4914
.L5384:
.L5089:
	movsd	xmm0, QWORD PTR 394896[rbp]
	xor	eax, eax
	comisd	xmm0, QWORD PTR 394904[rbp]
	pxor	xmm0, xmm0
	seta	al
	neg	eax
	cvtsi2sd	xmm0, eax
	movsd	QWORD PTR 394888[rbp], xmm0
	jmp	.L4914
	.p2align 4,,10
	.p2align 3
.L5406:
	comisd	xmm0, QWORD PTR .LC2123[rip]
	je	.L5407
	comisd	xmm0, QWORD PTR .LC2124[rip]
	je	.L5408
	comisd	xmm0, QWORD PTR .LC2125[rip]
	je	.L5409
	comisd	xmm0, QWORD PTR .LC2128[rip]
	jne	.L5410
.L5154:
	movsd	xmm0, QWORD PTR 395344[rbp]
	movsd	xmm1, QWORD PTR .LC1[rip]
	addsd	xmm1, xmm0
	cvtsd2si	rax, xmm1
	movsd	xmm1, QWORD PTR .LC105[rip]
	addsd	xmm1, xmm0
	cvtsd2si	rcx, QWORD PTR 0[rbp+rax*8]
	cvtsd2si	rax, xmm1
	movsd	xmm1, QWORD PTR .LC106[rip]
	addsd	xmm1, xmm0
	mov	rsi, rcx
	cvtsd2si	rdi, QWORD PTR 0[rbp+rax*8]
	sal	rsi, 32
	cvtsd2si	rax, xmm1
	movsd	xmm1, QWORD PTR .LC107[rip]
	addsd	xmm1, xmm0
	mov	rcx, rdi
	cvtsd2si	rdx, QWORD PTR 0[rbp+rax*8]
	sal	rcx, 24
	cvtsd2si	rax, xmm1
	movsd	xmm1, QWORD PTR .LC108[rip]
	add	rcx, rsi
	addsd	xmm1, xmm0
	addsd	xmm0, QWORD PTR .LC109[rip]
	sal	rdx, 16
	cvtsd2si	rax, QWORD PTR 0[rbp+rax*8]
	add	rdx, rcx
	cvtsd2si	r8, xmm1
	pxor	xmm1, xmm1
	sal	rax, 8
	add	rax, rdx
	cvtsi2sd	xmm1, rax
	addsd	xmm1, QWORD PTR 0[rbp+r8*8]
	cvtsd2si	rax, xmm0
	pxor	xmm0, xmm0
	movsd	QWORD PTR 395400[rbp], xmm1
	movsd	xmm1, QWORD PTR 0[rbp+rax*8]
	movsd	QWORD PTR 394912[rbp], xmm1
	jmp	.L4915
.L4960:
.L4962:
	.p2align 4,,10
	.p2align 3
.L4963:
	movsd	xmm0, QWORD PTR 394888[rbp]
	movsd	QWORD PTR 393232[rbp], xmm0
	jmp	.L4914
.L4965:
.L4968:
	.p2align 4,,10
	.p2align 3
.L4969:
	movsd	xmm0, QWORD PTR 394888[rbp]
	movsd	QWORD PTR 393240[rbp], xmm0
	jmp	.L4914
.L4971:
.L4974:
	.p2align 4,,10
	.p2align 3
.L4975:
	movsd	xmm0, QWORD PTR 394888[rbp]
	movsd	QWORD PTR 393248[rbp], xmm0
	jmp	.L4914
.L4977:
.L4980:
	.p2align 4,,10
	.p2align 3
.L4981:
	movsd	xmm0, QWORD PTR 394888[rbp]
	movsd	QWORD PTR 393256[rbp], xmm0
	jmp	.L4914
	.p2align 4,,10
	.p2align 3
.L5231:
.L4916:
	movsd	QWORD PTR 394888[rbp], xmm1
	jmp	.L4914
	.p2align 4,,10
	.p2align 3
.L5331:
.L4919:
	movsd	QWORD PTR 394896[rbp], xmm1
	jmp	.L4914
	.p2align 4,,10
	.p2align 3
.L5332:
.L4922:
	movsd	QWORD PTR 394904[rbp], xmm1
	jmp	.L4914
	.p2align 4,,10
	.p2align 3
.L5333:
.L4924:
	movsd	xmm0, QWORD PTR 394896[rbp]
	movsd	QWORD PTR 394888[rbp], xmm0
	jmp	.L4914
	.p2align 4,,10
	.p2align 3
.L5334:
.L4926:
	movsd	xmm0, QWORD PTR 394904[rbp]
	movsd	QWORD PTR 394888[rbp], xmm0
	jmp	.L4914
	.p2align 4,,10
	.p2align 3
.L5335:
.L4928:
	movsd	xmm0, QWORD PTR 394888[rbp]
	movsd	QWORD PTR 394896[rbp], xmm0
	jmp	.L4914
	.p2align 4,,10
	.p2align 3
.L5336:
.L4930:
	movsd	xmm0, QWORD PTR 394904[rbp]
	movsd	QWORD PTR 394896[rbp], xmm0
	jmp	.L4914
	.p2align 4,,10
	.p2align 3
.L5337:
.L4932:
	movsd	xmm0, QWORD PTR 394888[rbp]
	movsd	QWORD PTR 394904[rbp], xmm0
	jmp	.L4914
.L5033:
.L5037:
	.p2align 4,,10
	.p2align 3
.L5038:
	movsd	xmm0, QWORD PTR 394880[rbp]
	movsd	QWORD PTR 394888[rbp], xmm0
	jmp	.L4914
	.p2align 4,,10
	.p2align 3
.L5338:
.L4934:
	movsd	xmm0, QWORD PTR 394896[rbp]
	movsd	QWORD PTR 394904[rbp], xmm0
	jmp	.L4914
	.p2align 4,,10
	.p2align 3
.L5339:
.L4936:
	movsd	xmm0, QWORD PTR 394888[rbp]
	movsd	QWORD PTR 395344[rbp], xmm0
	jmp	.L4914
	.p2align 4,,10
	.p2align 3
.L5340:
.L4938:
	movsd	xmm0, QWORD PTR 394896[rbp]
	movsd	QWORD PTR 395344[rbp], xmm0
	jmp	.L4914
	.p2align 4,,10
	.p2align 3
.L5341:
.L4940:
	movsd	xmm0, QWORD PTR 394904[rbp]
	movsd	QWORD PTR 395344[rbp], xmm0
	jmp	.L4914
	.p2align 4,,10
	.p2align 3
.L5342:
.L4942:
	movsd	xmm0, QWORD PTR 394888[rbp]
	movsd	QWORD PTR 395400[rbp], xmm0
	jmp	.L4914
	.p2align 4,,10
	.p2align 3
.L5343:
.L4944:
	movsd	xmm0, QWORD PTR 394896[rbp]
	movsd	QWORD PTR 395400[rbp], xmm0
	jmp	.L4914
	.p2align 4,,10
	.p2align 3
.L5344:
.L4946:
	movsd	xmm0, QWORD PTR 394904[rbp]
	movsd	QWORD PTR 395400[rbp], xmm0
	jmp	.L4914
	.p2align 4,,10
	.p2align 3
.L5345:
.L4948:
	movsd	xmm0, QWORD PTR 394888[rbp]
	movsd	QWORD PTR 395456[rbp], xmm0
	jmp	.L4914
	.p2align 4,,10
	.p2align 3
.L5346:
.L4950:
	movsd	xmm0, QWORD PTR 394896[rbp]
	movsd	QWORD PTR 395456[rbp], xmm0
	jmp	.L4914
	.p2align 4,,10
	.p2align 3
.L5347:
.L4952:
	movsd	xmm0, QWORD PTR 394904[rbp]
	movsd	QWORD PTR 395456[rbp], xmm0
	jmp	.L4914
	.p2align 4,,10
	.p2align 3
.L5348:
.L4954:
	movsd	xmm0, QWORD PTR 394888[rbp]
	movsd	QWORD PTR 395568[rbp], xmm0
	jmp	.L4914
	.p2align 4,,10
	.p2align 3
.L5349:
.L4956:
	movsd	xmm0, QWORD PTR 394896[rbp]
	movsd	QWORD PTR 395568[rbp], xmm0
	jmp	.L4914
	.p2align 4,,10
	.p2align 3
.L5350:
.L4958:
	movsd	xmm0, QWORD PTR 394904[rbp]
	movsd	QWORD PTR 395568[rbp], xmm0
	jmp	.L4914
.L5031:
	.p2align 4,,10
	.p2align 3
.L5034:
	movsd	xmm0, QWORD PTR 394872[rbp]
	movsd	QWORD PTR 394888[rbp], xmm0
	jmp	.L4914
	.p2align 4,,10
	.p2align 3
.L5410:
	comisd	xmm0, QWORD PTR .LC289[rip]
	je	.L5411
	comisd	xmm0, QWORD PTR .LC2129[rip]
	je	.L5412
	comisd	xmm0, QWORD PTR .LC2130[rip]
	jne	.L5413
.L5160:
	movsd	xmm0, QWORD PTR 395344[rbp]
	movsd	xmm1, QWORD PTR .LC1[rip]
	addsd	xmm1, xmm0
	cvtsd2si	rax, xmm1
	movsd	xmm1, QWORD PTR .LC105[rip]
	addsd	xmm1, xmm0
	cvtsd2si	rcx, QWORD PTR 0[rbp+rax*8]
	cvtsd2si	rax, xmm1
	movsd	xmm1, QWORD PTR .LC106[rip]
	addsd	xmm1, xmm0
	mov	rsi, rcx
	cvtsd2si	rdi, QWORD PTR 0[rbp+rax*8]
	sal	rsi, 32
	cvtsd2si	rax, xmm1
	movsd	xmm1, QWORD PTR .LC107[rip]
	addsd	xmm1, xmm0
	mov	rcx, rdi
	cvtsd2si	rdx, QWORD PTR 0[rbp+rax*8]
	sal	rcx, 24
	cvtsd2si	rax, xmm1
	movsd	xmm1, QWORD PTR .LC108[rip]
	add	rcx, rsi
	addsd	xmm1, xmm0
	sal	rdx, 16
	cvtsd2si	rax, QWORD PTR 0[rbp+rax*8]
	add	rdx, rcx
	cvtsd2si	r8, xmm1
	pxor	xmm1, xmm1
	sal	rax, 8
	add	rax, rdx
	cvtsi2sd	xmm1, rax
	addsd	xmm1, QWORD PTR 0[rbp+r8*8]
	movsd	QWORD PTR 395400[rbp], xmm1
	movsd	xmm1, QWORD PTR .LC109[rip]
	addsd	xmm1, xmm0
	cvtsd2si	rax, xmm1
	movsd	xmm1, QWORD PTR .LC110[rip]
	addsd	xmm1, xmm0
	cvtsd2si	rcx, QWORD PTR 0[rbp+rax*8]
	cvtsd2si	rax, xmm1
	movsd	xmm1, QWORD PTR .LC111[rip]
	addsd	xmm1, xmm0
	mov	rsi, rcx
	cvtsd2si	rdi, QWORD PTR 0[rbp+rax*8]
	sal	rsi, 32
	cvtsd2si	rax, xmm1
	movsd	xmm1, QWORD PTR .LC5[rip]
	addsd	xmm1, xmm0
	addsd	xmm0, QWORD PTR .LC112[rip]
	mov	rcx, rdi
	mov	rdi, rbp
	cvtsd2si	rdx, QWORD PTR 0[rbp+rax*8]
	sal	rcx, 24
	cvtsd2si	rax, xmm1
	add	rcx, rsi
	cvtsd2si	r8, xmm0
	pxor	xmm0, xmm0
	sal	rdx, 16
	cvtsd2si	rax, QWORD PTR 0[rbp+rax*8]
	add	rdx, rcx
	sal	rax, 8
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 0[rbp+r8*8]
	movsd	QWORD PTR 395456[rbp], xmm0
	pxor	xmm0, xmm0
	call	_ZN8MEMORY_T5PEEKBEd
	movapd	xmm1, xmm0
	pxor	xmm0, xmm0
	jmp	.L4915
	.p2align 4,,10
	.p2align 3
.L5252:
.L4983:
	movsd	xmm0, QWORD PTR 394888[rbp]
	movsd	QWORD PTR 394840[rbp], xmm0
	jmp	.L4914
	.p2align 4,,10
	.p2align 3
.L5351:
.L4986:
	movsd	xmm0, QWORD PTR 394888[rbp]
	movsd	QWORD PTR 394864[rbp], xmm0
	jmp	.L4914
.L5352:
.L4988:
	movsd	xmm0, QWORD PTR 394888[rbp]
	movsd	QWORD PTR 394848[rbp], xmm0
	jmp	.L4914
.L5353:
.L4990:
	movsd	xmm0, QWORD PTR 394888[rbp]
	movsd	QWORD PTR 394872[rbp], xmm0
	jmp	.L4914
.L5354:
.L4992:
	movsd	xmm0, QWORD PTR 394888[rbp]
	movsd	QWORD PTR 394856[rbp], xmm0
	jmp	.L4914
.L5355:
.L4994:
	movsd	xmm0, QWORD PTR 394888[rbp]
	movsd	QWORD PTR 394880[rbp], xmm0
	jmp	.L4914
.L5356:
.L4996:
	movsd	xmm0, QWORD PTR 394888[rbp]
	movsd	QWORD PTR 394824[rbp], xmm0
	jmp	.L4914
.L5358:
.L5000:
	pxor	xmm0, xmm0
	cvtsd2ss	xmm0, QWORD PTR 394888[rbp]
	movss	DWORD PTR CHAR_H$[rip], xmm0
	jmp	.L4914
.L5359:
.L5002:
	pxor	xmm0, xmm0
	cvtsd2ss	xmm0, QWORD PTR 394888[rbp]
	movss	DWORD PTR CHAR_W$[rip], xmm0
	jmp	.L4914
.L5262:
.L5004:
	cvtsd2si	rax, QWORD PTR 394888[rbp]
	mov	DWORD PTR CHAR_BUFFER$[rip], eax
	jmp	.L4914
.L5360:
.L5007:
	cvtsd2si	rax, QWORD PTR 394888[rbp]
	mov	DWORD PTR BITMASK$[rip], eax
	jmp	.L4914
.L5361:
.L5009:
	cvtsd2si	rax, QWORD PTR 394888[rbp]
	mov	DWORD PTR PIXEL_SIZE$[rip], eax
	jmp	.L4914
.L5362:
.L5011:
	movsd	xmm0, QWORD PTR 394888[rbp]
	call	nearbyint@PLT
	movsd	xmm1, QWORD PTR .LC280[rip]
	comisd	xmm0, xmm1
	jnb	.L5014
	cvttsd2si	rax, xmm0
	mov	QWORD PTR RADIUS$[rip], rax
	jmp	.L4914
.L5363:
.L5013:
	cvtsd2si	rax, QWORD PTR 394888[rbp]
	mov	DWORD PTR STRING_ADR$[rip], eax
	jmp	.L4914
.L5267:
.L5018:
	movsd	xmm0, QWORD PTR 394840[rbp]
	movsd	QWORD PTR 394888[rbp], xmm0
	jmp	.L4914
.L5364:
.L5021:
	movsd	xmm0, QWORD PTR 394888[rbp]
	movsd	QWORD PTR 394840[rbp], xmm0
	jmp	.L4914
.L5365:
.L5023:
	movsd	xmm0, QWORD PTR 394848[rbp]
	movsd	QWORD PTR 394888[rbp], xmm0
	jmp	.L4914
.L5366:
.L5025:
	movsd	xmm0, QWORD PTR 394888[rbp]
	movsd	QWORD PTR 394848[rbp], xmm0
	jmp	.L4914
.L5367:
.L5027:
	movsd	xmm0, QWORD PTR 394856[rbp]
	movsd	QWORD PTR 394888[rbp], xmm0
	jmp	.L4914
.L5368:
.L5029:
	movsd	xmm0, QWORD PTR 394864[rbp]
	movsd	QWORD PTR 394888[rbp], xmm0
	jmp	.L4914
.L5369:
.L5036:
	movsd	xmm0, QWORD PTR 394888[rbp]
	movsd	QWORD PTR 394880[rbp], xmm0
	jmp	.L4914
.L5274:
.L5058:
	movsd	xmm0, QWORD PTR 394896[rbp]
	addsd	xmm0, QWORD PTR 394904[rbp]
	movsd	QWORD PTR 394888[rbp], xmm0
	jmp	.L4914
.L5370:
.L5061:
	movsd	xmm0, QWORD PTR 394896[rbp]
	subsd	xmm0, QWORD PTR 394904[rbp]
	movsd	QWORD PTR 394888[rbp], xmm0
	jmp	.L4914
.L5371:
.L5063:
	movsd	xmm0, QWORD PTR 394896[rbp]
	mulsd	xmm0, QWORD PTR 394904[rbp]
	movsd	QWORD PTR 394888[rbp], xmm0
	jmp	.L4914
.L5372:
.L5065:
	movsd	xmm0, QWORD PTR 394896[rbp]
	divsd	xmm0, QWORD PTR 394904[rbp]
	movsd	QWORD PTR 394888[rbp], xmm0
	jmp	.L4914
.L5373:
.L5067:
	cvtsd2si	rax, QWORD PTR 394896[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rcx, QWORD PTR 394904[rbp]
	cqo
	idiv	rcx
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR 394888[rbp], xmm0
	jmp	.L4914
.L5374:
.L5069:
	movsd	xmm0, QWORD PTR 394896[rbp]
	movsd	xmm1, QWORD PTR 394904[rbp]
	call	pow@PLT
	movsd	QWORD PTR 394888[rbp], xmm0
	jmp	.L4914
.L5375:
.L5071:
	cvtsd2si	rax, QWORD PTR 394896[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rcx, QWORD PTR 394904[rbp]
	cqo
	idiv	rcx
	cvtsi2sd	xmm0, rdx
	movsd	QWORD PTR 394888[rbp], xmm0
	jmp	.L4914
.L5376:
.L5073:
	movsd	xmm0, QWORD PTR 394888[rbp]
	xorpd	xmm0, XMMWORD PTR .LC258[rip]
	movsd	QWORD PTR 394888[rbp], xmm0
	jmp	.L4914
.L5378:
.L5077:
	cvtsd2si	rax, QWORD PTR 394896[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rcx, QWORD PTR 394904[rbp]
	sar	rax, cl
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR 394888[rbp], xmm0
	jmp	.L4914
.L5377:
.L5075:
	cvtsd2si	rax, QWORD PTR 394896[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rcx, QWORD PTR 394904[rbp]
	sal	rax, cl
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR 394888[rbp], xmm0
	jmp	.L4914
.L5379:
.L5079:
	movsd	xmm0, QWORD PTR 394896[rbp]
	xor	eax, eax
	comisd	xmm0, QWORD PTR 394904[rbp]
	pxor	xmm0, xmm0
	sete	al
	neg	eax
	cvtsi2sd	xmm0, eax
	movsd	QWORD PTR 394888[rbp], xmm0
	jmp	.L4914
.L5014:
	subsd	xmm0, xmm1
	cvttsd2si	rax, xmm0
	mov	QWORD PTR RADIUS$[rip], rax
	btc	QWORD PTR RADIUS$[rip], 63
	jmp	.L4914
.L5380:
.L5081:
	movsd	xmm0, QWORD PTR 394896[rbp]
	xor	eax, eax
	comisd	xmm0, QWORD PTR 394904[rbp]
	pxor	xmm0, xmm0
	setne	al
	neg	eax
	cvtsi2sd	xmm0, eax
	movsd	QWORD PTR 394888[rbp], xmm0
	jmp	.L4914
.L5381:
.L5083:
	movsd	xmm0, QWORD PTR 394904[rbp]
	xor	eax, eax
	comisd	xmm0, QWORD PTR 394896[rbp]
	pxor	xmm0, xmm0
	seta	al
	neg	eax
	cvtsi2sd	xmm0, eax
	movsd	QWORD PTR 394888[rbp], xmm0
	jmp	.L4914
.L5383:
.L5087:
	movsd	xmm0, QWORD PTR 394896[rbp]
	xor	eax, eax
	comisd	xmm0, QWORD PTR 394904[rbp]
	pxor	xmm0, xmm0
	setnb	al
	neg	eax
	cvtsi2sd	xmm0, eax
	movsd	QWORD PTR 394888[rbp], xmm0
	jmp	.L4914
.L5382:
.L5085:
	movsd	xmm0, QWORD PTR 394904[rbp]
	xor	eax, eax
	comisd	xmm0, QWORD PTR 394896[rbp]
	pxor	xmm0, xmm0
	setnb	al
	neg	eax
	cvtsi2sd	xmm0, eax
	movsd	QWORD PTR 394888[rbp], xmm0
	jmp	.L4914
.L5385:
.L5091:
	cvtsd2si	rax, QWORD PTR 394896[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rdx, QWORD PTR 394904[rbp]
	and	rax, rdx
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR 394888[rbp], xmm0
	jmp	.L4914
.L5387:
.L5095:
	cvtsd2si	rax, QWORD PTR 394896[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rdx, QWORD PTR 394904[rbp]
	not	rax
	or	rax, rdx
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR 394888[rbp], xmm0
	jmp	.L4914
.L5386:
.L5093:
	cvtsd2si	rax, QWORD PTR 394896[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rdx, QWORD PTR 394904[rbp]
	xor	rax, rdx
	not	rax
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR 394888[rbp], xmm0
	jmp	.L4914
.L5388:
.L5097:
	cvtsd2si	rax, QWORD PTR 394896[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rdx, QWORD PTR 394904[rbp]
	or	rax, rdx
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR 394888[rbp], xmm0
	jmp	.L4914
.L5389:
.L5099:
	cvtsd2si	rax, QWORD PTR 394896[rbp]
	pxor	xmm0, xmm0
	cvtsd2si	rdx, QWORD PTR 394904[rbp]
	xor	rax, rdx
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR 394888[rbp], xmm0
	jmp	.L4914
.L5390:
.L5101:
	movsd	xmm0, QWORD PTR 394888[rbp]
	movsd	QWORD PTR 394896[rbp], xmm0
	jmp	.L4914
.L5391:
.L5103:
	movsd	xmm0, QWORD PTR 394888[rbp]
	movsd	QWORD PTR 394904[rbp], xmm0
	jmp	.L4914
.L5392:
.L5105:
	movsd	xmm0, QWORD PTR .LC1[rip]
	addsd	xmm0, QWORD PTR 394888[rbp]
	movsd	QWORD PTR 394888[rbp], xmm0
	jmp	.L4914
.L5393:
.L5107:
	movsd	xmm0, QWORD PTR .LC1[rip]
	addsd	xmm0, QWORD PTR 394896[rbp]
	movsd	QWORD PTR 394896[rbp], xmm0
	jmp	.L4914
.L5395:
.L5111:
	movsd	xmm0, QWORD PTR 394888[rbp]
	subsd	xmm0, QWORD PTR .LC1[rip]
	movsd	QWORD PTR 394888[rbp], xmm0
	jmp	.L4914
.L5394:
.L5109:
	movsd	xmm0, QWORD PTR .LC1[rip]
	addsd	xmm0, QWORD PTR 394904[rbp]
	movsd	QWORD PTR 394904[rbp], xmm0
	jmp	.L4914
.L5397:
.L5115:
	movsd	xmm0, QWORD PTR 394904[rbp]
	subsd	xmm0, QWORD PTR .LC1[rip]
	movsd	QWORD PTR 394904[rbp], xmm0
	jmp	.L4914
.L5396:
.L5113:
	movsd	xmm0, QWORD PTR 394896[rbp]
	subsd	xmm0, QWORD PTR .LC1[rip]
	movsd	QWORD PTR 394896[rbp], xmm0
	jmp	.L4914
.L5399:
.L5119:
	movsd	xmm0, QWORD PTR 394896[rbp]
	comisd	xmm0, QWORD PTR 394904[rbp]
	je	.L4914
	movsd	QWORD PTR 395344[rbp], xmm1
	jmp	.L4914
.L5398:
.L5117:
	movsd	xmm0, QWORD PTR 394896[rbp]
	comisd	xmm0, QWORD PTR 394904[rbp]
	jne	.L4914
	movsd	QWORD PTR 395344[rbp], xmm1
	jmp	.L4914
.L5400:
.L5121:
	movsd	xmm0, QWORD PTR 394904[rbp]
	comisd	xmm0, QWORD PTR 394896[rbp]
	jnb	.L4914
	movsd	QWORD PTR 395344[rbp], xmm1
	jmp	.L4914
.L5401:
.L5123:
	movsd	xmm0, QWORD PTR 394904[rbp]
	comisd	xmm0, QWORD PTR 394896[rbp]
	ja	.L4914
	movsd	QWORD PTR 395344[rbp], xmm1
	jmp	.L4914
.L5402:
.L5125:
	movsd	xmm0, QWORD PTR 394896[rbp]
	comisd	xmm0, QWORD PTR 394904[rbp]
	ja	.L4914
	movsd	QWORD PTR 395344[rbp], xmm1
	jmp	.L4914
.L5403:
.L5127:
	movsd	xmm0, QWORD PTR 394896[rbp]
	comisd	xmm0, QWORD PTR 394904[rbp]
	jnb	.L4914
	movsd	QWORD PTR 395344[rbp], xmm1
	jmp	.L4914
.L5404:
.L5129:
	movsd	QWORD PTR 395344[rbp], xmm1
	jmp	.L4914
.L5405:
.L5131:
	movapd	xmm0, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T5PEEKBEd
	movsd	QWORD PTR 394888[rbp], xmm0
	jmp	.L4914
.L5408:
.L5138:
	mov	edi, -65536
	lea	rbp, 16[rsp]
	call	fb_Cls@PLT
	xor	eax, eax
	mov	rdi, rbp
	mov	ecx, 6
	rep stosd
	mov	esi, 21
	lea	rdi, .LC2126[rip]
	call	fb_StrAllocTempDescZEx@PLT
	mov	rdi, rax
	call	fb_Shell@PLT
	mov	esi, 15
	lea	rdi, .LC1893[rip]
	call	fb_StrAllocTempDescZEx@PLT
	mov	rdi, rax
	call	fb_Shell@PLT
	mov	esi, 7
	lea	rdi, .LC1894[rip]
	call	fb_StrAllocTempDescZEx@PLT
	xor	r9d, r9d
	mov	r8d, 1
	xor	ecx, ecx
	mov	rdi, rax
	xor	edx, edx
	mov	esi, 2
	call	fb_FileOpen@PLT
	jmp	.L5151
.L5152:
	call	fb_FileInput@PLT
	xor	edx, edx
	mov	rsi, -1
	mov	rdi, rbp
	call	fb_InputString@PLT
	mov	edx, 1
	mov	rsi, rbp
	xor	edi, edi
	call	fb_PrintString@PLT
.L5151:
	mov	edi, 1
	call	fb_FileEof@PLT
	mov	edi, 1
	test	eax, eax
	je	.L5152
	call	fb_FileClose@PLT
	mov	esi, 26
	lea	rdi, .LC2127[rip]
	call	fb_StrAllocTempDescZEx@PLT
	mov	edx, 1
	xor	edi, edi
	mov	rsi, rax
	call	fb_PrintString@PLT
	or	edi, -1
	call	fb_Sleep@PLT
	mov	rdi, rbp
	call	fb_StrDelete@PLT
	jmp	.L4914
.L5407:
.L5135:
	movsd	xmm0, QWORD PTR 395344[rbp]
	movsd	xmm1, QWORD PTR .LC1[rip]
	addsd	xmm1, xmm0
	movsd	QWORD PTR 397040[rbp], xmm0
	cvtsd2si	rax, xmm1
	movsd	xmm1, QWORD PTR .LC105[rip]
	addsd	xmm1, xmm0
	cvtsd2si	rax, QWORD PTR 0[rbp+rax*8]
	cvtsd2si	rdx, xmm1
	movsd	xmm1, QWORD PTR .LC106[rip]
	addsd	xmm1, xmm0
	sal	rax, 32
	cvtsd2si	rsi, QWORD PTR 0[rbp+rdx*8]
	cvtsd2si	rdx, xmm1
	movsd	xmm1, QWORD PTR .LC107[rip]
	addsd	xmm1, xmm0
	sal	rsi, 24
	cvtsd2si	rcx, QWORD PTR 0[rbp+rdx*8]
	add	rax, rsi
	cvtsd2si	rdx, xmm1
	movsd	xmm1, QWORD PTR .LC108[rip]
	addsd	xmm1, xmm0
	sal	rcx, 16
	cvtsd2si	rdx, QWORD PTR 0[rbp+rdx*8]
	add	rax, rcx
	cvtsd2si	rdi, xmm1
	pxor	xmm1, xmm1
	sal	rdx, 8
	add	rax, rdx
	cvtsi2sd	xmm1, rax
	addsd	xmm1, QWORD PTR 0[rbp+rdi*8]
	movsd	QWORD PTR 395400[rbp], xmm1
	movsd	xmm1, QWORD PTR .LC109[rip]
	addsd	xmm1, xmm0
	cvtsd2si	rax, xmm1
	movsd	xmm1, QWORD PTR .LC110[rip]
	addsd	xmm1, xmm0
	cvtsd2si	rax, QWORD PTR 0[rbp+rax*8]
	cvtsd2si	rdx, xmm1
	movsd	xmm1, QWORD PTR .LC111[rip]
	addsd	xmm1, xmm0
	sal	rax, 32
	cvtsd2si	rsi, QWORD PTR 0[rbp+rdx*8]
	cvtsd2si	rdx, xmm1
	movsd	xmm1, QWORD PTR .LC5[rip]
	addsd	xmm1, xmm0
	sal	rsi, 24
	cvtsd2si	rcx, QWORD PTR 0[rbp+rdx*8]
	add	rax, rsi
	cvtsd2si	rdx, xmm1
	movsd	xmm1, QWORD PTR .LC112[rip]
	addsd	xmm1, xmm0
	sal	rcx, 16
	cvtsd2si	rdx, QWORD PTR 0[rbp+rdx*8]
	add	rax, rcx
	cvtsd2si	rdi, xmm1
	pxor	xmm1, xmm1
	sal	rdx, 8
	add	rax, rdx
	cvtsi2sd	xmm1, rax
	addsd	xmm1, QWORD PTR 0[rbp+rdi*8]
	movsd	QWORD PTR 395456[rbp], xmm1
	movsd	xmm1, QWORD PTR .LC113[rip]
	addsd	xmm1, xmm0
	cvtsd2si	rax, xmm1
	movsd	xmm1, QWORD PTR .LC114[rip]
	addsd	xmm1, xmm0
	cvtsd2si	rax, QWORD PTR 0[rbp+rax*8]
	cvtsd2si	rdx, xmm1
	movsd	xmm1, QWORD PTR .LC115[rip]
	addsd	xmm1, xmm0
	sal	rax, 32
	cvtsd2si	rsi, QWORD PTR 0[rbp+rdx*8]
	cvtsd2si	rdx, xmm1
	movsd	xmm1, QWORD PTR .LC116[rip]
	addsd	xmm1, xmm0
	sal	rsi, 24
	cvtsd2si	rcx, QWORD PTR 0[rbp+rdx*8]
	add	rax, rsi
	cvtsd2si	rdx, xmm1
	sal	rcx, 16
	cvtsd2si	rdx, QWORD PTR 0[rbp+rdx*8]
	addsd	xmm0, QWORD PTR .LC117[rip]
	add	rax, rcx
	cvtsd2si	rdi, xmm0
	pxor	xmm0, xmm0
	sal	rdx, 8
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 0[rbp+rdi*8]
	comisd	xmm0, QWORD PTR .LC0[rip]
	movsd	QWORD PTR 396968[rbp], xmm0
	je	.L4914
	movabs	r13, -9223372036854775808
	xor	ebx, ebx
.L5199:
	movsd	xmm0, QWORD PTR 395456[rbp]
	mov	QWORD PTR PC$[rip], 49425
	call	nearbyint@PLT
	comisd	xmm0, QWORD PTR .LC280[rip]
	cvttsd2si	r12, xmm0
	jb	.L5140
	subsd	xmm0, QWORD PTR .LC280[rip]
	cvttsd2si	r12, xmm0
	xor	r12, r13
.L5140:
	cmp	r12, 49424
	jbe	.L5414
	mov	eax, 49425
.L5141:
	movsd	xmm0, QWORD PTR 0[rbp+rax*8]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T5POKEBEdd
	mov	rax, QWORD PTR PC$[rip]
	add	rax, 1
	mov	QWORD PTR PC$[rip], rax
	cmp	rax, r12
	jbe	.L5141
	movsd	xmm1, QWORD PTR 396968[rbp]
	movapd	xmm0, xmm1
	movsd	QWORD PTR 8[rsp], xmm1
	call	nearbyint@PLT
	lea	rax, 1[rbx]
	comisd	xmm0, QWORD PTR .LC280[rip]
	movsd	xmm1, QWORD PTR 8[rsp]
	cvttsd2si	rbx, xmm0
	jb	.L5196
	subsd	xmm0, QWORD PTR .LC280[rip]
	cvttsd2si	rbx, xmm0
	xor	rbx, r13
.L5196:
	xor	edx, edx
	pxor	xmm0, xmm0
	div	rbx
	cvtsi2sd	xmm0, rdx
	mov	rbx, rdx
	test	rdx, rdx
	jns	.L5198
	mov	rax, rdx
	and	edx, 1
	pxor	xmm0, xmm0
	shr	rax
	or	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, xmm0
.L5198:
	comisd	xmm0, xmm1
	jne	.L5199
	jmp	.L4914
.L5409:
.L5150:
	movsd	xmm0, QWORD PTR 395344[rbp]
	movsd	xmm1, QWORD PTR .LC1[rip]
	addsd	xmm1, xmm0
	cvtsd2si	rax, xmm1
	movsd	xmm1, QWORD PTR .LC105[rip]
	addsd	xmm1, xmm0
	cvtsd2si	rax, QWORD PTR 0[rbp+rax*8]
	cvtsd2si	rdx, xmm1
	movsd	xmm1, QWORD PTR .LC106[rip]
	addsd	xmm1, xmm0
	sal	rax, 32
	cvtsd2si	rsi, QWORD PTR 0[rbp+rdx*8]
	cvtsd2si	rdx, xmm1
	movsd	xmm1, QWORD PTR .LC107[rip]
	addsd	xmm1, xmm0
	addsd	xmm0, QWORD PTR .LC108[rip]
	sal	rsi, 24
	cvtsd2si	rcx, QWORD PTR 0[rbp+rdx*8]
	add	rax, rsi
	cvtsd2si	rdx, xmm1
	cvtsd2si	rdi, xmm0
	pxor	xmm0, xmm0
	sal	rcx, 16
	cvtsd2si	rdx, QWORD PTR 0[rbp+rdx*8]
	add	rax, rcx
	sal	rdx, 8
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 0[rbp+rdi*8]
	mov	rdi, rbp
	movsd	QWORD PTR 395400[rbp], xmm0
	pxor	xmm0, xmm0
	call	_ZN8MEMORY_T5PEEKBEd
	movsd	QWORD PTR 394912[rbp], xmm0
	jmp	.L4914
.L5414:
	movsd	xmm1, QWORD PTR 396968[rbp]
	movapd	xmm0, xmm1
	movsd	QWORD PTR 8[rsp], xmm1
	call	nearbyint@PLT
	comisd	xmm0, QWORD PTR .LC280[rip]
	movsd	xmm1, QWORD PTR 8[rsp]
	cvttsd2si	rcx, xmm0
	jb	.L5201
	subsd	xmm0, QWORD PTR .LC280[rip]
	cvttsd2si	rcx, xmm0
	btc	rcx, 63
.L5201:
	lea	rax, 1[rbx]
	xor	edx, edx
	pxor	xmm0, xmm0
	div	rcx
	cvtsi2sd	xmm0, rdx
	test	rdx, rdx
	jns	.L5203
	mov	rax, rdx
	mov	rsi, rdx
	pxor	xmm0, xmm0
	shr	rax
	and	esi, 1
	or	rax, rsi
	cvtsi2sd	xmm0, rax
	addsd	xmm0, xmm0
.L5203:
	comisd	xmm1, xmm0
	je	.L4914
.L5143:
	lea	rax, 1[rdx]
	xor	edx, edx
	pxor	xmm0, xmm0
	div	rcx
	cvtsi2sd	xmm0, rdx
	test	rdx, rdx
	jns	.L5145
	mov	rax, rdx
	mov	rsi, rdx
	pxor	xmm0, xmm0
	shr	rax
	and	esi, 1
	or	rax, rsi
	cvtsi2sd	xmm0, rax
	addsd	xmm0, xmm0
.L5145:
	comisd	xmm0, xmm1
	jne	.L5143
	mov	QWORD PTR PC$[rip], 49425
	jmp	.L4914
.L5411:
.L5156:
	movsd	xmm0, QWORD PTR 395344[rbp]
	movsd	xmm1, QWORD PTR .LC1[rip]
	addsd	xmm1, xmm0
	cvtsd2si	rax, xmm1
	movsd	xmm1, QWORD PTR .LC105[rip]
	addsd	xmm1, xmm0
	cvtsd2si	rax, QWORD PTR 0[rbp+rax*8]
	cvtsd2si	rdx, xmm1
	movsd	xmm1, QWORD PTR .LC106[rip]
	addsd	xmm1, xmm0
	sal	rax, 32
	cvtsd2si	rsi, QWORD PTR 0[rbp+rdx*8]
	cvtsd2si	rdx, xmm1
	movsd	xmm1, QWORD PTR .LC107[rip]
	addsd	xmm1, xmm0
	addsd	xmm0, QWORD PTR .LC108[rip]
	sal	rsi, 24
	cvtsd2si	rcx, QWORD PTR 0[rbp+rdx*8]
	add	rax, rsi
	cvtsd2si	rdx, xmm1
	cvtsd2si	rdi, xmm0
	pxor	xmm0, xmm0
	sal	rcx, 16
	cvtsd2si	rdx, QWORD PTR 0[rbp+rdx*8]
	add	rax, rcx
	sal	rdx, 8
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 0[rbp+rdi*8]
	mov	rdi, rbp
	movsd	QWORD PTR 395400[rbp], xmm0
	pxor	xmm0, xmm0
	call	_ZN8MEMORY_T5PEEKWEd
	movsd	QWORD PTR 394912[rbp], xmm0
	jmp	.L4914
.L5413:
	comisd	xmm0, QWORD PTR .LC2131[rip]
	je	.L5415
	comisd	xmm0, QWORD PTR .LC2132[rip]
	je	.L5416
	comisd	xmm0, QWORD PTR .LC1947[rip]
	je	.L5417
	comisd	xmm0, QWORD PTR .LC1951[rip]
	ja	.L5173
	comisd	xmm0, QWORD PTR .LC1950[rip]
	jb	.L5173
.L5174:
	subsd	xmm0, QWORD PTR .LC1950[rip]
	movsd	xmm2, QWORD PTR .LC2048[rip]
	cvtsd2si	rax, xmm1
	pxor	xmm1, xmm1
	cvtss2si	rsi, DWORD PTR CHAR_W$[rip]
	cvtsd2si	rcx, xmm0
	pxor	xmm0, xmm0
	sal	rax, 3
	cvtsi2sd	xmm1, rax
	addsd	xmm1, QWORD PTR 395072[rbp]
	mov	rax, rcx
	cqo
	idiv	rsi
	movsd	QWORD PTR C$[rip], xmm1
	cvtss2si	rsi, DWORD PTR CHAR_H$[rip]
	cvtsi2sd	xmm0, rdx
	cvttsd2si	rax, xmm0
	pxor	xmm0, xmm0
	sal	rax, 3
	cvtsi2sd	xmm0, rax
	mov	rax, rcx
	cqo
	idiv	rsi
	addsd	xmm0, xmm2
	movsd	QWORD PTR XS$[rip], xmm0
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	cvttsd2si	rax, xmm0
	pxor	xmm0, xmm0
	sal	rax, 3
	cvtsi2sd	xmm0, rax
	addsd	xmm0, xmm2
	movsd	QWORD PTR YS$[rip], xmm0
	pxor	xmm0, xmm0
	comisd	xmm0, QWORD PTR 1592[rbp]
	je	.L5175
	cvtsd2si	rax, xmm1
	pxor	xmm0, xmm0
	movzx	eax, al
	cvtsi2sd	xmm0, rax
	movsd	QWORD PTR C$[rip], xmm0
.L5175:
	movsd	xmm6, QWORD PTR .LC1[rip]
	comisd	xmm6, QWORD PTR 394856[rbp]
	jbe	.L5176
	movsd	QWORD PTR 394856[rbp], xmm6
.L5176:
	movsd	xmm0, QWORD PTR .LC1939[rip]
	pxor	xmm1, xmm1
	mov	rdi, rbp
	call	_ZN8MEMORY_T6POKE64Edd
	pxor	xmm1, xmm1
	mov	QWORD PTR Y$[rip], 0x000000000
	mov	QWORD PTR X$[rip], 0x000000000
	jmp	.L5177
.L5324:
	movsd	xmm1, QWORD PTR .LC1[rip]
	movsd	xmm0, QWORD PTR .LC1[rip]
	mov	QWORD PTR X$[rip], 0x000000000
	addsd	xmm1, QWORD PTR Y$[rip]
	addsd	xmm0, QWORD PTR C$[rip]
	movsd	QWORD PTR Y$[rip], xmm1
	movsd	QWORD PTR C$[rip], xmm0
.L5177:
	movsd	xmm0, QWORD PTR X$[rip]
.L5179:
	xor	edx, edx
	comisd	xmm1, QWORD PTR 395088[rbp]
	sete	dl
	xor	eax, eax
	neg	edx
	comisd	xmm0, QWORD PTR 395080[rbp]
	sete	al
	neg	eax
	test	edx, eax
	jne	.L5418
	addsd	xmm0, QWORD PTR XS$[rip]
	addsd	xmm1, QWORD PTR YS$[rip]
	mov	rdi, rbp
	movupd	xmm7, XMMWORD PTR 395032[rbp]
	mov	rax, QWORD PTR .LC1930[rip]
	movapd	xmm2, xmm0
	mulsd	xmm0, QWORD PTR .LC108[rip]
	unpcklpd	xmm2, xmm1
	addsd	xmm1, QWORD PTR .LC1[rip]
	mulpd	xmm2, XMMWORD PTR .LC2133[rip]
	addsd	xmm0, QWORD PTR .LC110[rip]
	mulsd	xmm0, QWORD PTR .LC2052[rip]
	addsd	xmm0, QWORD PTR 395032[rbp]
	addsd	xmm1, xmm1
	addsd	xmm1, QWORD PTR 395040[rbp]
	addpd	xmm2, xmm7
	movsd	QWORD PTR 394864[rbp], xmm0
	movq	xmm0, rax
	movsd	QWORD PTR 394872[rbp], xmm1
	movups	XMMWORD PTR 394840[rbp], xmm2
	call	_ZN8MEMORY_T6PEEK64Ed
	mov	rax, QWORD PTR .LC1930[rip]
	movapd	xmm1, xmm0
	movq	xmm0, rax
	call	_ZN8MEMORY_T6POKE64Edd
	movsd	xmm0, QWORD PTR .LC1[rip]
	addsd	xmm0, QWORD PTR X$[rip]
	comisd	xmm0, QWORD PTR 395080[rbp]
	movsd	QWORD PTR X$[rip], xmm0
	ja	.L5324
	movsd	xmm1, QWORD PTR Y$[rip]
	jmp	.L5179
.L5412:
.L5158:
	movsd	xmm0, QWORD PTR 395344[rbp]
	movsd	xmm1, QWORD PTR .LC1[rip]
	addsd	xmm1, xmm0
	cvtsd2si	rax, xmm1
	movsd	xmm1, QWORD PTR .LC105[rip]
	addsd	xmm1, xmm0
	cvtsd2si	rax, QWORD PTR 0[rbp+rax*8]
	cvtsd2si	rdx, xmm1
	movsd	xmm1, QWORD PTR .LC106[rip]
	addsd	xmm1, xmm0
	sal	rax, 32
	cvtsd2si	rsi, QWORD PTR 0[rbp+rdx*8]
	cvtsd2si	rdx, xmm1
	movsd	xmm1, QWORD PTR .LC107[rip]
	addsd	xmm1, xmm0
	sal	rsi, 24
	cvtsd2si	rcx, QWORD PTR 0[rbp+rdx*8]
	add	rax, rsi
	cvtsd2si	rdx, xmm1
	movsd	xmm1, QWORD PTR .LC108[rip]
	addsd	xmm1, xmm0
	sal	rcx, 16
	cvtsd2si	rdx, QWORD PTR 0[rbp+rdx*8]
	add	rax, rcx
	cvtsd2si	rdi, xmm1
	pxor	xmm1, xmm1
	sal	rdx, 8
	add	rax, rdx
	cvtsi2sd	xmm1, rax
	addsd	xmm1, QWORD PTR 0[rbp+rdi*8]
	movsd	QWORD PTR 395400[rbp], xmm1
	movsd	xmm1, QWORD PTR .LC109[rip]
	addsd	xmm1, xmm0
	cvtsd2si	rax, xmm1
	movsd	xmm1, QWORD PTR .LC110[rip]
	addsd	xmm1, xmm0
	cvtsd2si	rax, QWORD PTR 0[rbp+rax*8]
	cvtsd2si	rdx, xmm1
	movsd	xmm1, QWORD PTR .LC111[rip]
	addsd	xmm1, xmm0
	sal	rax, 32
	cvtsd2si	rsi, QWORD PTR 0[rbp+rdx*8]
	cvtsd2si	rdx, xmm1
	movsd	xmm1, QWORD PTR .LC5[rip]
	addsd	xmm1, xmm0
	addsd	xmm0, QWORD PTR .LC112[rip]
	sal	rsi, 24
	cvtsd2si	rcx, QWORD PTR 0[rbp+rdx*8]
	add	rax, rsi
	cvtsd2si	rdx, xmm1
	pxor	xmm1, xmm1
	cvtsd2si	rdi, xmm0
	pxor	xmm0, xmm0
	sal	rcx, 16
	cvtsd2si	rdx, QWORD PTR 0[rbp+rdx*8]
	add	rax, rcx
	sal	rdx, 8
	add	rax, rdx
	cvtsi2sd	xmm1, rax
	addsd	xmm1, QWORD PTR 0[rbp+rdi*8]
	mov	rdi, rbp
	movsd	QWORD PTR 394912[rbp], xmm1
.L5329:
	add	rsp, 56
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	jmp	_ZN8MEMORY_T5POKEWEdd
.L5415:
.L5162:
	movsd	xmm0, QWORD PTR 395344[rbp]
	movsd	xmm1, QWORD PTR .LC1[rip]
	addsd	xmm1, xmm0
	cvtsd2si	rax, xmm1
	movsd	xmm1, QWORD PTR .LC105[rip]
	addsd	xmm1, xmm0
	cvtsd2si	rax, QWORD PTR 0[rbp+rax*8]
	cvtsd2si	rdx, xmm1
	movsd	xmm1, QWORD PTR .LC106[rip]
	addsd	xmm1, xmm0
	sal	rax, 32
	cvtsd2si	rsi, QWORD PTR 0[rbp+rdx*8]
	cvtsd2si	rdx, xmm1
	movsd	xmm1, QWORD PTR .LC107[rip]
	addsd	xmm1, xmm0
	sal	rsi, 24
	cvtsd2si	rcx, QWORD PTR 0[rbp+rdx*8]
	add	rax, rsi
	cvtsd2si	rdx, xmm1
	movsd	xmm1, QWORD PTR .LC108[rip]
	addsd	xmm1, xmm0
	sal	rcx, 16
	cvtsd2si	rdx, QWORD PTR 0[rbp+rdx*8]
	add	rax, rcx
	cvtsd2si	rdi, xmm1
	pxor	xmm1, xmm1
	sal	rdx, 8
	add	rax, rdx
	cvtsi2sd	xmm1, rax
	addsd	xmm1, QWORD PTR 0[rbp+rdi*8]
	movsd	QWORD PTR 395400[rbp], xmm1
	movsd	xmm1, QWORD PTR .LC109[rip]
	addsd	xmm1, xmm0
	cvtsd2si	rax, xmm1
	movsd	xmm1, QWORD PTR .LC110[rip]
	addsd	xmm1, xmm0
	cvtsd2si	rax, QWORD PTR 0[rbp+rax*8]
	cvtsd2si	rdx, xmm1
	movsd	xmm1, QWORD PTR .LC111[rip]
	addsd	xmm1, xmm0
	sal	rax, 32
	cvtsd2si	rsi, QWORD PTR 0[rbp+rdx*8]
	cvtsd2si	rdx, xmm1
	movsd	xmm1, QWORD PTR .LC5[rip]
	addsd	xmm1, xmm0
	sal	rsi, 24
	cvtsd2si	rcx, QWORD PTR 0[rbp+rdx*8]
	add	rax, rsi
	cvtsd2si	rdx, xmm1
	movsd	xmm1, QWORD PTR .LC112[rip]
	addsd	xmm1, xmm0
	addsd	xmm0, QWORD PTR .LC113[rip]
	sal	rcx, 16
	cvtsd2si	rdx, QWORD PTR 0[rbp+rdx*8]
	add	rax, rcx
	cvtsd2si	rdi, xmm1
	pxor	xmm1, xmm1
	sal	rdx, 8
	add	rax, rdx
	cvtsi2sd	xmm1, rax
	addsd	xmm1, QWORD PTR 0[rbp+rdi*8]
	mov	rdi, rbp
	movsd	QWORD PTR 395344[rbp], xmm0
	pxor	xmm0, xmm0
	movsd	QWORD PTR 395456[rbp], xmm1
	call	_ZN8MEMORY_T5PEEKWEd
	movapd	xmm1, xmm0
	pxor	xmm0, xmm0
	jmp	.L5329
.L5417:
.L5166:
	movsd	xmm1, QWORD PTR 395344[rbp]
	movsd	xmm0, QWORD PTR .LC1[rip]
	addsd	xmm0, xmm1
	cvtsd2si	rax, xmm0
	movsd	xmm0, QWORD PTR .LC105[rip]
	addsd	xmm0, xmm1
	cvtsd2si	rax, QWORD PTR 0[rbp+rax*8]
	cvtsd2si	rdx, xmm0
	movsd	xmm0, QWORD PTR .LC106[rip]
	addsd	xmm0, xmm1
	sal	rax, 32
	cvtsd2si	rsi, QWORD PTR 0[rbp+rdx*8]
	cvtsd2si	rdx, xmm0
	movsd	xmm0, QWORD PTR .LC107[rip]
	addsd	xmm0, xmm1
	sal	rsi, 24
	cvtsd2si	rcx, QWORD PTR 0[rbp+rdx*8]
	add	rax, rsi
	cvtsd2si	rdx, xmm0
	movsd	xmm0, QWORD PTR .LC108[rip]
	addsd	xmm0, xmm1
	sal	rcx, 16
	cvtsd2si	rdx, QWORD PTR 0[rbp+rdx*8]
	add	rax, rcx
	cvtsd2si	rdi, xmm0
	pxor	xmm0, xmm0
	sal	rdx, 8
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 0[rbp+rdi*8]
	cvtsd2si	rax, xmm0
	movsd	xmm0, QWORD PTR .LC109[rip]
	addsd	xmm0, xmm1
	mov	DWORD PTR STRING_ADR$[rip], eax
	cvtsd2si	rax, xmm0
	movsd	xmm0, QWORD PTR .LC110[rip]
	addsd	xmm0, xmm1
	cvtsd2si	rax, QWORD PTR 0[rbp+rax*8]
	cvtsd2si	rdx, xmm0
	movsd	xmm0, QWORD PTR .LC111[rip]
	addsd	xmm0, xmm1
	sal	rax, 32
	cvtsd2si	rsi, QWORD PTR 0[rbp+rdx*8]
	cvtsd2si	rdx, xmm0
	movsd	xmm0, QWORD PTR .LC5[rip]
	addsd	xmm0, xmm1
	sal	rsi, 24
	cvtsd2si	rcx, QWORD PTR 0[rbp+rdx*8]
	add	rax, rsi
	cvtsd2si	rdx, xmm0
	movsd	xmm0, QWORD PTR .LC112[rip]
	addsd	xmm0, xmm1
	sal	rcx, 16
	cvtsd2si	rdx, QWORD PTR 0[rbp+rdx*8]
	add	rax, rcx
	cvtsd2si	rdi, xmm0
	pxor	xmm0, xmm0
	sal	rdx, 8
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 0[rbp+rdi*8]
	cvtsd2si	rbx, xmm0
	movsd	xmm0, QWORD PTR .LC113[rip]
	addsd	xmm0, xmm1
	cvtsd2si	rax, xmm0
	movsd	xmm0, QWORD PTR .LC114[rip]
	addsd	xmm0, xmm1
	cvtsd2si	rax, QWORD PTR 0[rbp+rax*8]
	cvtsd2si	rdx, xmm0
	movsd	xmm0, QWORD PTR .LC115[rip]
	addsd	xmm0, xmm1
	sal	rax, 32
	cvtsd2si	rsi, QWORD PTR 0[rbp+rdx*8]
	cvtsd2si	rdx, xmm0
	movsd	xmm0, QWORD PTR .LC116[rip]
	addsd	xmm0, xmm1
	sal	rsi, 24
	cvtsd2si	rcx, QWORD PTR 0[rbp+rdx*8]
	add	rax, rsi
	cvtsd2si	rdx, xmm0
	movsd	xmm0, QWORD PTR .LC117[rip]
	addsd	xmm0, xmm1
	sal	rcx, 16
	cvtsd2si	rdx, QWORD PTR 0[rbp+rdx*8]
	add	rax, rcx
	cvtsd2si	rdi, xmm0
	pxor	xmm0, xmm0
	sal	rdx, 8
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 0[rbp+rdi*8]
	xor	eax, eax
	movsd	QWORD PTR 395400[rbp], xmm0
	addsd	xmm1, QWORD PTR .LC6[rip]
	mov	DWORD PTR R3$[rip], 0
	movsd	QWORD PTR 395344[rbp], xmm1
.L5172:
	mov	edx, DWORD PTR STRING_ADR$[rip]
	mov	rdi, rbp
	add	rax, rdx
	movsd	xmm0, QWORD PTR 0[rbp+rax*8]
	call	_ZN8MEMORY_T10SCREENCODEEd
	mov	eax, DWORD PTR CHAR_BUFFER$[rip]
	pxor	xmm2, xmm2
	mov	rdi, rbp
	movapd	xmm1, xmm0
	pxor	xmm0, xmm0
	cvtsi2sd	xmm2, rax
	mov	eax, DWORD PTR R3$[rip]
	cvtsi2sd	xmm0, rax
	addsd	xmm0, xmm2
	addsd	xmm0, QWORD PTR 395400[rbp]
	call	_ZN8MEMORY_T5POKEBEdd
	mov	eax, DWORD PTR R3$[rip]
	add	eax, 1
	mov	DWORD PTR R3$[rip], eax
	cmp	ebx, eax
	jnb	.L5172
	jmp	.L4914
.L5416:
.L5164:
	movsd	xmm0, QWORD PTR 395344[rbp]
	movsd	xmm1, QWORD PTR .LC1[rip]
	lea	r12, STRING_DATA$[rip]
	addsd	xmm1, xmm0
	cvtsd2si	rax, xmm1
	movsd	xmm1, QWORD PTR .LC105[rip]
	addsd	xmm1, xmm0
	cvtsd2si	rax, QWORD PTR 0[rbp+rax*8]
	cvtsd2si	rdx, xmm1
	movsd	xmm1, QWORD PTR .LC106[rip]
	addsd	xmm1, xmm0
	sal	rax, 32
	cvtsd2si	rsi, QWORD PTR 0[rbp+rdx*8]
	cvtsd2si	rdx, xmm1
	movsd	xmm1, QWORD PTR .LC107[rip]
	addsd	xmm1, xmm0
	addsd	xmm0, QWORD PTR .LC108[rip]
	sal	rsi, 24
	cvtsd2si	rcx, QWORD PTR 0[rbp+rdx*8]
	add	rax, rsi
	cvtsd2si	rdx, xmm1
	cvtsd2si	rdi, xmm0
	pxor	xmm0, xmm0
	sal	rcx, 16
	cvtsd2si	rdx, QWORD PTR 0[rbp+rdx*8]
	add	rax, rcx
	sal	rdx, 8
	add	rax, rdx
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR 0[rbp+rdi*8]
	movsd	QWORD PTR 395400[rbp], xmm0
	movsd	xmm0, QWORD PTR 394888[rbp]
	call	fb_DoubleToStr@PLT
	xor	r8d, r8d
	or	rcx, -1
	or	rsi, -1
	mov	rdx, rax
	lea	rdi, STRING_DATA$[rip]
	call	fb_StrAssign@PLT
	or	rsi, -1
	lea	rdi, STRING_DATA$[rip]
	mov	DWORD PTR R3$[rip], 1
	call	fb_StrLen@PLT
	mov	ebx, eax
.L5167:
	mov	eax, DWORD PTR R3$[rip]
	cmp	eax, ebx
	ja	.L4914
	mov	edx, 1
	mov	esi, eax
	mov	rdi, r12
	call	fb_StrMid@PLT
	mov	esi, 1
	mov	rdi, rax
	call	fb_ASC@PLT
	pxor	xmm0, xmm0
	mov	rdi, rbp
	mov	eax, eax
	cvtsi2sd	xmm0, rax
	call	_ZN8MEMORY_T10SCREENCODEEd
	mov	edx, DWORD PTR CHAR_BUFFER$[rip]
	mov	eax, DWORD PTR R3$[rip]
	movapd	xmm1, xmm0
	pxor	xmm0, xmm0
	lea	rax, -1[rdx+rax]
	cvtsi2sd	xmm0, rax
	test	rax, rax
	jns	.L5171
	mov	rdx, rax
	and	eax, 1
	pxor	xmm0, xmm0
	shr	rdx
	or	rdx, rax
	cvtsi2sd	xmm0, rdx
	addsd	xmm0, xmm0
.L5171:
	mov	rdi, rbp
	call	_ZN8MEMORY_T5POKEBEdd
	add	DWORD PTR R3$[rip], 1
	jmp	.L5167
.L5173:
	comisd	xmm0, QWORD PTR .LC1952[rip]
	je	.L5325
	comisd	xmm0, QWORD PTR .LC2134[rip]
	je	.L5419
	comisd	xmm0, QWORD PTR .LC2135[rip]
	je	.L5420
	comisd	xmm0, QWORD PTR .LC2136[rip]
	ja	.L4914
	comisd	xmm0, QWORD PTR .LC2137[rip]
	jb	.L4914
.L5188:
.L4920:
.L5189:
.L5190:
.L5191:
.L5192:
.L5193:
.L5194:
	subsd	xmm0, QWORD PTR .LC2137[rip]
	cvtsd2si	rax, xmm0
	movsd	QWORD PTR 134479872[rbp+rax*8], xmm1
	jmp	.L4914
.L5418:
	movsd	xmm0, QWORD PTR .LC276[rip]
	add	rsp, 56
	mov	rdi, rbp
	pxor	xmm1, xmm1
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	jmp	_ZN8MEMORY_T6POKE64Edd
.L5420:
.L5185:
	mov	rax, QWORD PTR RADIUS$[rip]
	pxor	xmm2, xmm2
	cvtsi2ss	xmm2, rax
	test	rax, rax
	jns	.L5187
	mov	rdx, rax
	and	eax, 1
	pxor	xmm2, xmm2
	shr	rdx
	or	rdx, rax
	cvtsi2ss	xmm2, rdx
	addss	xmm2, xmm2
.L5187:
	pxor	xmm4, xmm4
	movss	xmm5, DWORD PTR .LC1940[rip]
	xor	edx, edx
	xor	edi, edi
	add	rsp, 56
	mov	ecx, 4
	movaps	xmm3, xmm4
	or	esi, -1
	pop	rbx
	movaps	xmm1, xmm4
	movaps	xmm0, xmm4
	pop	rbp
	pop	r12
	pop	r13
	jmp	fb_GfxEllipse@PLT
.L5419:
.L5183:
	pxor	xmm3, xmm3
	mov	ecx, DWORD PTR BITMASK$[rip]
	xor	r8d, r8d
	xor	edx, edx
	or	esi, -1
	movaps	xmm2, xmm3
	movaps	xmm1, xmm3
.L5330:
	add	rsp, 56
	movaps	xmm0, xmm1
	xor	edi, edi
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	jmp	fb_GfxLine@PLT
.L5325:
.L5180:
	mov	eax, DWORD PTR PIXEL_SIZE$[rip]
	pxor	xmm2, xmm2
	xor	r8d, r8d
	or	esi, -1
	mov	ecx, 65535
	mov	edx, 2
	pxor	xmm1, xmm1
	cvtsi2ss	xmm2, rax
	movaps	xmm3, xmm2
	jmp	.L5330
	.size	_ZN8MEMORY_T5POKEBEdd, .-_ZN8MEMORY_T5POKEBEdd
	.p2align 4
	.globl	_ZN8MEMORY_T5POKEWEdd
	.type	_ZN8MEMORY_T5POKEWEdd, @function
_ZN8MEMORY_T5POKEWEdd:
.L5422:
	push	r14
	movq	r14, xmm0
	movapd	xmm0, xmm1
	push	rbp
	mov	rbp, rdi
	push	rbx
	call	nearbyint@PLT
	movsd	xmm1, QWORD PTR .LC280[rip]
	cvttsd2si	rbx, xmm0
	comisd	xmm0, xmm1
	jb	.L5424
	subsd	xmm0, xmm1
	cvttsd2si	rbx, xmm0
	btc	rbx, 63
.L5424:
	movzx	eax, bl
	pxor	xmm1, xmm1
	movq	xmm0, r14
	mov	rdi, rbp
	cvtsi2sd	xmm1, rax
	movzx	ebx, bh
	call	_ZN8MEMORY_T5POKEBEdd
	pxor	xmm1, xmm1
	movq	xmm0, r14
	mov	rdi, rbp
	cvtsi2sd	xmm1, rbx
	addsd	xmm0, QWORD PTR .LC1[rip]
	pop	rbx
	pop	rbp
	pop	r14
	jmp	_ZN8MEMORY_T5POKEBEdd
	.size	_ZN8MEMORY_T5POKEWEdd, .-_ZN8MEMORY_T5POKEWEdd
	.p2align 4
	.globl	INS_W32
	.type	INS_W32, @function
INS_W32:
.L5427:
	movzx	eax, BYTE PTR 8[rdi]
	mov	edx, DWORD PTR 64[rdi]
	pxor	xmm0, xmm0
	pxor	xmm1, xmm1
	mov	rdi, QWORD PTR 16[rdi]
	cvtsi2sd	xmm0, rdx
	cvtsi2sd	xmm1, eax
	jmp	_ZN8MEMORY_T6POKE64Edd
	.size	INS_W32, .-INS_W32
	.p2align 4
	.globl	INS_W64
	.type	INS_W64, @function
INS_W64:
.L5431:
	movzx	eax, BYTE PTR 8[rdi]
	pxor	xmm1, xmm1
	pxor	xmm0, xmm0
	cvtsi2sd	xmm1, eax
	mov	rax, QWORD PTR 64[rdi]
	cvtsi2sd	xmm0, rax
	test	rax, rax
	jns	.L5433
	mov	rdx, rax
	and	eax, 1
	pxor	xmm0, xmm0
	shr	rdx
	or	rdx, rax
	cvtsi2sd	xmm0, rdx
	addsd	xmm0, xmm0
.L5433:
	mov	rdi, QWORD PTR 16[rdi]
	jmp	_ZN8MEMORY_T6POKE64Edd
	.size	INS_W64, .-INS_W64
	.p2align 4
	.globl	_ZN8MEMORY_T9READUBYTEEd
	.type	_ZN8MEMORY_T9READUBYTEEd, @function
_ZN8MEMORY_T9READUBYTEEd:
	call	_ZN8MEMORY_T6PEEK64Ed
	cvtsd2si	eax, xmm0
	ret
	.size	_ZN8MEMORY_T9READUBYTEEd, .-_ZN8MEMORY_T9READUBYTEEd
	.p2align 4
	.globl	INS_ADC
	.type	INS_ADC, @function
INS_ADC:
.L5436:
	movzx	eax, WORD PTR 64[rdi]
	pxor	xmm0, xmm0
	mov	rcx, rdi
	mov	rdi, QWORD PTR 16[rdi]
	xor	r9d, r9d
	cvtsi2sd	xmm0, eax
	call	_ZN8MEMORY_T9READUBYTEEd
	movzx	esi, BYTE PTR 8[rcx]
	mov	edx, eax
	movzx	eax, al
	mov	edi, esi
	add	esi, eax
	mov	rax, QWORD PTR [rcx]
	mov	r9w, si
	test	al, 1
	je	.L5437
	add	esi, 1
	mov	r9w, si
.L5437:
.L5438:
.L5439:
.L5440:
	xor	edx, edi
	xor	edi, r9d
	movzx	esi, si
	mov	r8d, r9d
	or	rdx, -129
	movzx	edi, dil
	pxor	xmm0, xmm0
	mov	BYTE PTR 8[rcx], r9b
	not	rdx
	cvtsi2sd	xmm0, rsi
	test	rdx, rdi
	setne	dl
	and	rax, -66
	movzx	edx, dl
	sal	rdx, 6
	or	rax, rdx
	xor	edx, edx
	comisd	xmm0, QWORD PTR .LC259[rip]
	pxor	xmm0, xmm0
	seta	dl
	or	rax, rdx
	movzx	edx, r9b
	cvtsi2sd	xmm0, rdx
	xor	edx, edx
	comisd	xmm0, QWORD PTR .LC0[rip]
	sete	dl
	and	al, 125
	and	r8d, 128
	add	rdx, rdx
	or	rax, rdx
	or	rax, r8
	mov	QWORD PTR [rcx], rax
	ret
	.size	INS_ADC, .-INS_ADC
	.p2align 4
	.globl	INS_AND
	.type	INS_AND, @function
INS_AND:
.L5448:
.L5449:
.L5450:
	movzx	eax, WORD PTR 64[rdi]
	pxor	xmm0, xmm0
	mov	rdx, rdi
	mov	rdi, QWORD PTR 16[rdi]
	xor	esi, esi
	cvtsi2sd	xmm0, eax
	call	_ZN8MEMORY_T9READUBYTEEd
	and	al, BYTE PTR 8[rdx]
	pxor	xmm0, xmm0
	mov	ecx, eax
	mov	BYTE PTR 8[rdx], al
	movzx	eax, al
	cvtsi2sd	xmm0, rax
	comisd	xmm0, QWORD PTR .LC0[rip]
	mov	rax, QWORD PTR [rdx]
	sete	sil
	and	al, 125
	and	ecx, 128
	add	rsi, rsi
	or	rax, rsi
	or	rax, rcx
	mov	QWORD PTR [rdx], rax
	ret
	.size	INS_AND, .-INS_AND
	.p2align 4
	.globl	INS_CMP
	.type	INS_CMP, @function
INS_CMP:
.L5454:
.L5455:
.L5456:
	movzx	eax, WORD PTR 64[rdi]
	pxor	xmm0, xmm0
	mov	rdx, rdi
	mov	rdi, QWORD PTR 16[rdi]
	xor	esi, esi
	cvtsi2sd	xmm0, eax
	call	_ZN8MEMORY_T9READUBYTEEd
	movzx	ecx, BYTE PTR 8[rdx]
	pxor	xmm0, xmm0
	xor	edi, edi
	movzx	eax, al
	sub	ecx, eax
	mov	rax, QWORD PTR [rdx]
	mov	si, cx
	movzx	ecx, cx
	cvtsi2sd	xmm0, rcx
	comisd	xmm0, QWORD PTR .LC259[rip]
	movzx	ecx, sil
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rcx
	setbe	dil
	and	rax, -4
	xor	ecx, ecx
	comisd	xmm0, QWORD PTR .LC0[rip]
	sete	cl
	or	rax, rdi
	and	esi, 128
	add	rcx, rcx
	or	rax, rcx
	and	al, 127
	or	rax, rsi
	mov	QWORD PTR [rdx], rax
	ret
	.size	INS_CMP, .-INS_CMP
	.p2align 4
	.globl	INS_CPX
	.type	INS_CPX, @function
INS_CPX:
.L5460:
.L5461:
.L5462:
	movzx	eax, WORD PTR 64[rdi]
	pxor	xmm0, xmm0
	mov	rdx, rdi
	mov	rdi, QWORD PTR 16[rdi]
	xor	esi, esi
	cvtsi2sd	xmm0, eax
	call	_ZN8MEMORY_T9READUBYTEEd
	movzx	ecx, BYTE PTR 9[rdx]
	pxor	xmm0, xmm0
	xor	edi, edi
	movzx	eax, al
	sub	ecx, eax
	mov	rax, QWORD PTR [rdx]
	mov	si, cx
	movzx	ecx, cx
	cvtsi2sd	xmm0, rcx
	comisd	xmm0, QWORD PTR .LC259[rip]
	movzx	ecx, sil
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rcx
	setbe	dil
	and	rax, -4
	xor	ecx, ecx
	comisd	xmm0, QWORD PTR .LC0[rip]
	sete	cl
	or	rax, rdi
	and	esi, 128
	add	rcx, rcx
	or	rax, rcx
	and	al, 127
	or	rax, rsi
	mov	QWORD PTR [rdx], rax
	ret
	.size	INS_CPX, .-INS_CPX
	.p2align 4
	.globl	INS_CPY
	.type	INS_CPY, @function
INS_CPY:
.L5466:
.L5467:
.L5468:
	movzx	eax, WORD PTR 64[rdi]
	pxor	xmm0, xmm0
	mov	rdx, rdi
	mov	rdi, QWORD PTR 16[rdi]
	xor	esi, esi
	cvtsi2sd	xmm0, eax
	call	_ZN8MEMORY_T9READUBYTEEd
	movzx	ecx, BYTE PTR 10[rdx]
	pxor	xmm0, xmm0
	xor	edi, edi
	movzx	eax, al
	sub	ecx, eax
	mov	rax, QWORD PTR [rdx]
	mov	si, cx
	movzx	ecx, cx
	cvtsi2sd	xmm0, rcx
	comisd	xmm0, QWORD PTR .LC259[rip]
	movzx	ecx, sil
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rcx
	setbe	dil
	and	rax, -4
	xor	ecx, ecx
	comisd	xmm0, QWORD PTR .LC0[rip]
	sete	cl
	or	rax, rdi
	and	esi, 128
	add	rcx, rcx
	or	rax, rcx
	and	al, 127
	or	rax, rsi
	mov	QWORD PTR [rdx], rax
	ret
	.size	INS_CPY, .-INS_CPY
	.p2align 4
	.globl	INS_EOR
	.type	INS_EOR, @function
INS_EOR:
.L5472:
.L5473:
.L5474:
	movzx	eax, WORD PTR 64[rdi]
	pxor	xmm0, xmm0
	mov	rdx, rdi
	mov	rdi, QWORD PTR 16[rdi]
	xor	esi, esi
	cvtsi2sd	xmm0, eax
	call	_ZN8MEMORY_T9READUBYTEEd
	xor	al, BYTE PTR 8[rdx]
	pxor	xmm0, xmm0
	mov	ecx, eax
	mov	BYTE PTR 8[rdx], al
	movzx	eax, al
	cvtsi2sd	xmm0, rax
	comisd	xmm0, QWORD PTR .LC0[rip]
	mov	rax, QWORD PTR [rdx]
	sete	sil
	and	al, 125
	and	ecx, 128
	add	rsi, rsi
	or	rax, rsi
	or	rax, rcx
	mov	QWORD PTR [rdx], rax
	ret
	.size	INS_EOR, .-INS_EOR
	.p2align 4
	.globl	INS_LDA
	.type	INS_LDA, @function
INS_LDA:
.L5478:
.L5479:
.L5480:
	movzx	eax, WORD PTR 64[rdi]
	pxor	xmm0, xmm0
	mov	rdx, rdi
	mov	rdi, QWORD PTR 16[rdi]
	xor	esi, esi
	cvtsi2sd	xmm0, eax
	call	_ZN8MEMORY_T9READUBYTEEd
	pxor	xmm0, xmm0
	mov	ecx, eax
	mov	BYTE PTR 8[rdx], al
	movzx	eax, al
	cvtsi2sd	xmm0, rax
	comisd	xmm0, QWORD PTR .LC0[rip]
	mov	rax, QWORD PTR [rdx]
	sete	sil
	and	al, 125
	and	ecx, 128
	add	rsi, rsi
	or	rax, rsi
	or	rax, rcx
	mov	QWORD PTR [rdx], rax
	ret
	.size	INS_LDA, .-INS_LDA
	.p2align 4
	.globl	INS_LDX
	.type	INS_LDX, @function
INS_LDX:
.L5484:
.L5485:
.L5486:
	movzx	eax, WORD PTR 64[rdi]
	pxor	xmm0, xmm0
	mov	rdx, rdi
	mov	rdi, QWORD PTR 16[rdi]
	xor	esi, esi
	cvtsi2sd	xmm0, eax
	call	_ZN8MEMORY_T9READUBYTEEd
	pxor	xmm0, xmm0
	mov	ecx, eax
	mov	BYTE PTR 9[rdx], al
	movzx	eax, al
	cvtsi2sd	xmm0, rax
	comisd	xmm0, QWORD PTR .LC0[rip]
	mov	rax, QWORD PTR [rdx]
	sete	sil
	and	al, 125
	and	ecx, 128
	add	rsi, rsi
	or	rax, rsi
	or	rax, rcx
	mov	QWORD PTR [rdx], rax
	ret
	.size	INS_LDX, .-INS_LDX
	.p2align 4
	.globl	INS_LDY
	.type	INS_LDY, @function
INS_LDY:
.L5490:
.L5491:
.L5492:
	movzx	eax, WORD PTR 64[rdi]
	pxor	xmm0, xmm0
	mov	rdx, rdi
	mov	rdi, QWORD PTR 16[rdi]
	xor	esi, esi
	cvtsi2sd	xmm0, eax
	call	_ZN8MEMORY_T9READUBYTEEd
	pxor	xmm0, xmm0
	mov	ecx, eax
	mov	BYTE PTR 10[rdx], al
	movzx	eax, al
	cvtsi2sd	xmm0, rax
	comisd	xmm0, QWORD PTR .LC0[rip]
	mov	rax, QWORD PTR [rdx]
	sete	sil
	and	al, 125
	and	ecx, 128
	add	rsi, rsi
	or	rax, rsi
	or	rax, rcx
	mov	QWORD PTR [rdx], rax
	ret
	.size	INS_LDY, .-INS_LDY
	.p2align 4
	.globl	INS_ORA
	.type	INS_ORA, @function
INS_ORA:
.L5496:
.L5497:
.L5498:
	movzx	eax, WORD PTR 64[rdi]
	pxor	xmm0, xmm0
	mov	rdx, rdi
	mov	rdi, QWORD PTR 16[rdi]
	xor	esi, esi
	cvtsi2sd	xmm0, eax
	call	_ZN8MEMORY_T9READUBYTEEd
	or	al, BYTE PTR 8[rdx]
	pxor	xmm0, xmm0
	mov	ecx, eax
	mov	BYTE PTR 8[rdx], al
	movzx	eax, al
	cvtsi2sd	xmm0, rax
	comisd	xmm0, QWORD PTR .LC0[rip]
	mov	rax, QWORD PTR [rdx]
	sete	sil
	and	al, 125
	and	ecx, 128
	add	rsi, rsi
	or	rax, rsi
	or	rax, rcx
	mov	QWORD PTR [rdx], rax
	ret
	.size	INS_ORA, .-INS_ORA
	.p2align 4
	.globl	INS_SBC
	.type	INS_SBC, @function
INS_SBC:
.L5502:
	movzx	eax, WORD PTR 64[rdi]
	pxor	xmm0, xmm0
	mov	rcx, rdi
	mov	rdi, QWORD PTR 16[rdi]
	pxor	xmm1, xmm1
	xor	esi, esi
	cvtsi2sd	xmm0, eax
	call	_ZN8MEMORY_T9READUBYTEEd
	movzx	r8d, BYTE PTR 8[rcx]
	pxor	xmm0, xmm0
	mov	edx, eax
	movzx	eax, al
	mov	edi, r8d
	sub	r8d, eax
	mov	rax, QWORD PTR [rcx]
	mov	si, r8w
	mov	r9, rax
	and	r9d, 1
	cvtsi2sd	xmm1, r9
	comisd	xmm1, xmm0
	jne	.L5503
	movsx	r8d, r8w
	pxor	xmm1, xmm1
	cvtsi2sd	xmm1, r8d
	subsd	xmm1, QWORD PTR .LC1[rip]
	cvttsd2si	r8d, xmm1
	mov	si, r8w
.L5503:
.L5504:
.L5505:
.L5506:
	xor	edx, edi
	xor	edi, esi
	mov	r8d, esi
	and	rax, -66
	and	edx, edi
	mov	BYTE PTR 8[rcx], sil
	pxor	xmm1, xmm1
	movzx	esi, si
	shr	rdx
	cvtsi2sd	xmm1, rsi
	and	edx, 64
	or	rax, rdx
	xor	edx, edx
	comisd	xmm1, QWORD PTR .LC259[rip]
	pxor	xmm1, xmm1
	setbe	dl
	or	rax, rdx
	movzx	edx, r8b
	cvtsi2sd	xmm1, rdx
	xor	edx, edx
	comisd	xmm1, xmm0
	sete	dl
	and	al, 125
	and	r8d, 128
	add	rdx, rdx
	or	rax, rdx
	or	rax, r8
	mov	QWORD PTR [rcx], rax
	ret
	.size	INS_SBC, .-INS_SBC
	.p2align 4
	.globl	_ZN8MEMORY_T8READBYTEEd
	.type	_ZN8MEMORY_T8READBYTEEd, @function
_ZN8MEMORY_T8READBYTEEd:
	call	_ZN8MEMORY_T6PEEK64Ed
	cvtsd2si	eax, xmm0
	ret
	.size	_ZN8MEMORY_T8READBYTEEd, .-_ZN8MEMORY_T8READBYTEEd
	.p2align 4
	.globl	INS_BCC
	.type	INS_BCC, @function
INS_BCC:
.L5512:
	mov	rdx, rdi
	test	BYTE PTR [rdi], 1
	je	.L5516
.L5513:
.L5514:
.L5515:
	ret
	.p2align 4,,10
	.p2align 3
.L5516:
	movsx	eax, WORD PTR 12[rdi]
	pxor	xmm0, xmm0
	movsd	xmm1, QWORD PTR .LC1[rip]
	cvtsi2sd	xmm0, eax
	movzx	eax, WORD PTR 64[rdi]
	mov	rdi, QWORD PTR 16[rdi]
	subsd	xmm0, xmm1
	cvttsd2si	ecx, xmm0
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, eax
	movsx	ecx, cx
	call	_ZN8MEMORY_T8READBYTEEd
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, ecx
	movsx	eax, al
	addsd	xmm0, xmm1
	pxor	xmm1, xmm1
	cvtsi2sd	xmm1, eax
	addsd	xmm0, xmm1
	cvttsd2si	eax, xmm0
	mov	WORD PTR 12[rdx], ax
	ret
	.size	INS_BCC, .-INS_BCC
	.p2align 4
	.globl	INS_BCS
	.type	INS_BCS, @function
INS_BCS:
.L5518:
	mov	rdx, rdi
	test	BYTE PTR [rdi], 1
	jne	.L5525
.L5519:
.L5520:
.L5521:
	ret
	.p2align 4,,10
	.p2align 3
.L5525:
	movsx	eax, WORD PTR 12[rdi]
	pxor	xmm0, xmm0
	movsd	xmm1, QWORD PTR .LC1[rip]
	cvtsi2sd	xmm0, eax
	movzx	eax, WORD PTR 64[rdi]
	mov	rdi, QWORD PTR 16[rdi]
	subsd	xmm0, xmm1
	cvttsd2si	ecx, xmm0
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, eax
	movsx	ecx, cx
	call	_ZN8MEMORY_T8READBYTEEd
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, ecx
	movsx	eax, al
	addsd	xmm0, xmm1
	pxor	xmm1, xmm1
	cvtsi2sd	xmm1, eax
	addsd	xmm0, xmm1
	cvttsd2si	eax, xmm0
	mov	WORD PTR 12[rdx], ax
	ret
	.size	INS_BCS, .-INS_BCS
	.p2align 4
	.globl	INS_BEQ
	.type	INS_BEQ, @function
INS_BEQ:
.L5527:
	mov	rax, QWORD PTR [rdi]
	pxor	xmm0, xmm0
	movsd	xmm1, QWORD PTR .LC1[rip]
	mov	rdx, rdi
	shr	rax
	and	eax, 1
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm1
	je	.L5531
.L5528:
.L5529:
.L5530:
	ret
	.p2align 4,,10
	.p2align 3
.L5531:
	movsx	eax, WORD PTR 12[rdi]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, eax
	movzx	eax, WORD PTR 64[rdi]
	mov	rdi, QWORD PTR 16[rdi]
	subsd	xmm0, xmm1
	cvttsd2si	ecx, xmm0
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, eax
	movsx	ecx, cx
	call	_ZN8MEMORY_T8READBYTEEd
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, ecx
	movsx	eax, al
	addsd	xmm1, xmm0
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, eax
	addsd	xmm1, xmm0
	cvttsd2si	eax, xmm1
	mov	WORD PTR 12[rdx], ax
	ret
	.size	INS_BEQ, .-INS_BEQ
	.p2align 4
	.globl	INS_BIT
	.type	INS_BIT, @function
INS_BIT:
.L5533:
.L5534:
.L5535:
.L5536:
	movzx	eax, WORD PTR 64[rdi]
	pxor	xmm0, xmm0
	mov	rdx, rdi
	mov	rdi, QWORD PTR 16[rdi]
	cvtsi2sd	xmm0, eax
	call	_ZN8MEMORY_T8READBYTEEd
	mov	ecx, eax
	mov	rax, QWORD PTR [rdx]
	mov	rdi, rcx
	mov	rsi, rcx
	and	edi, 128
	and	al, 63
	and	esi, 64
	or	rax, rdi
	or	rax, rsi
	and	cl, BYTE PTR 9[rdx]
	sete	cl
	and	rax, -3
	movzx	ecx, cl
	add	rcx, rcx
	or	rax, rcx
	mov	QWORD PTR [rdx], rax
	ret
	.size	INS_BIT, .-INS_BIT
	.p2align 4
	.globl	INS_BMI
	.type	INS_BMI, @function
INS_BMI:
.L5541:
	mov	rdx, rdi
	test	BYTE PTR [rdi], -128
	jne	.L5548
.L5542:
.L5543:
.L5544:
	ret
	.p2align 4,,10
	.p2align 3
.L5548:
	movsx	eax, WORD PTR 12[rdi]
	pxor	xmm0, xmm0
	movsd	xmm1, QWORD PTR .LC1[rip]
	cvtsi2sd	xmm0, eax
	movzx	eax, WORD PTR 64[rdi]
	mov	rdi, QWORD PTR 16[rdi]
	subsd	xmm0, xmm1
	cvttsd2si	ecx, xmm0
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, eax
	movsx	ecx, cx
	call	_ZN8MEMORY_T8READBYTEEd
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, ecx
	movsx	eax, al
	addsd	xmm0, xmm1
	pxor	xmm1, xmm1
	cvtsi2sd	xmm1, eax
	addsd	xmm0, xmm1
	cvttsd2si	eax, xmm0
	mov	WORD PTR 12[rdx], ax
	ret
	.size	INS_BMI, .-INS_BMI
	.p2align 4
	.globl	INS_BNE
	.type	INS_BNE, @function
INS_BNE:
.L5550:
	mov	rax, QWORD PTR [rdi]
	pxor	xmm0, xmm0
	mov	rdx, rdi
	shr	rax
	and	eax, 1
	cvtsi2sd	xmm0, rax
	comisd	xmm0, QWORD PTR .LC0[rip]
	je	.L5554
.L5551:
.L5552:
.L5553:
	ret
	.p2align 4,,10
	.p2align 3
.L5554:
	movsx	eax, WORD PTR 12[rdi]
	pxor	xmm0, xmm0
	movsd	xmm1, QWORD PTR .LC1[rip]
	cvtsi2sd	xmm0, eax
	movzx	eax, WORD PTR 64[rdi]
	mov	rdi, QWORD PTR 16[rdi]
	subsd	xmm0, xmm1
	cvttsd2si	ecx, xmm0
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, eax
	movsx	ecx, cx
	call	_ZN8MEMORY_T8READBYTEEd
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, ecx
	movsx	eax, al
	addsd	xmm0, xmm1
	pxor	xmm1, xmm1
	cvtsi2sd	xmm1, eax
	addsd	xmm0, xmm1
	cvttsd2si	eax, xmm0
	mov	WORD PTR 12[rdx], ax
	ret
	.size	INS_BNE, .-INS_BNE
	.p2align 4
	.globl	INS_BPL
	.type	INS_BPL, @function
INS_BPL:
.L5556:
	mov	rdx, rdi
	test	BYTE PTR [rdi], -128
	je	.L5560
.L5557:
.L5558:
.L5559:
	ret
	.p2align 4,,10
	.p2align 3
.L5560:
	movsx	eax, WORD PTR 12[rdi]
	pxor	xmm0, xmm0
	movsd	xmm1, QWORD PTR .LC1[rip]
	cvtsi2sd	xmm0, eax
	movzx	eax, WORD PTR 64[rdi]
	mov	rdi, QWORD PTR 16[rdi]
	subsd	xmm0, xmm1
	cvttsd2si	ecx, xmm0
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, eax
	movsx	ecx, cx
	call	_ZN8MEMORY_T8READBYTEEd
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, ecx
	movsx	eax, al
	addsd	xmm0, xmm1
	pxor	xmm1, xmm1
	cvtsi2sd	xmm1, eax
	addsd	xmm0, xmm1
	cvttsd2si	eax, xmm0
	mov	WORD PTR 12[rdx], ax
	ret
	.size	INS_BPL, .-INS_BPL
	.p2align 4
	.globl	INS_BVC
	.type	INS_BVC, @function
INS_BVC:
.L5562:
	mov	rdx, rdi
	test	BYTE PTR [rdi], 64
	je	.L5566
.L5563:
.L5564:
.L5565:
	ret
	.p2align 4,,10
	.p2align 3
.L5566:
	movsx	eax, WORD PTR 12[rdi]
	pxor	xmm0, xmm0
	movsd	xmm1, QWORD PTR .LC1[rip]
	cvtsi2sd	xmm0, eax
	movzx	eax, WORD PTR 64[rdi]
	mov	rdi, QWORD PTR 16[rdi]
	subsd	xmm0, xmm1
	cvttsd2si	ecx, xmm0
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, eax
	movsx	ecx, cx
	call	_ZN8MEMORY_T8READBYTEEd
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, ecx
	movsx	eax, al
	addsd	xmm0, xmm1
	pxor	xmm1, xmm1
	cvtsi2sd	xmm1, eax
	addsd	xmm0, xmm1
	cvttsd2si	eax, xmm0
	mov	WORD PTR 12[rdx], ax
	ret
	.size	INS_BVC, .-INS_BVC
	.p2align 4
	.globl	INS_BVS
	.type	INS_BVS, @function
INS_BVS:
.L5568:
	mov	rdx, rdi
	test	BYTE PTR [rdi], 64
	jne	.L5575
.L5569:
.L5570:
.L5571:
	ret
	.p2align 4,,10
	.p2align 3
.L5575:
	movsx	eax, WORD PTR 12[rdi]
	pxor	xmm0, xmm0
	movsd	xmm1, QWORD PTR .LC1[rip]
	cvtsi2sd	xmm0, eax
	movzx	eax, WORD PTR 64[rdi]
	mov	rdi, QWORD PTR 16[rdi]
	subsd	xmm0, xmm1
	cvttsd2si	ecx, xmm0
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, eax
	movsx	ecx, cx
	call	_ZN8MEMORY_T8READBYTEEd
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, ecx
	movsx	eax, al
	addsd	xmm0, xmm1
	pxor	xmm1, xmm1
	cvtsi2sd	xmm1, eax
	addsd	xmm0, xmm1
	cvttsd2si	eax, xmm0
	mov	WORD PTR 12[rdx], ax
	ret
	.size	INS_BVS, .-INS_BVS
	.p2align 4
	.globl	_ZN8MEMORY_T10READUSHORTEd
	.type	_ZN8MEMORY_T10READUSHORTEd, @function
_ZN8MEMORY_T10READUSHORTEd:
	movapd	xmm1, xmm0
	call	_ZN8MEMORY_T6PEEK64Ed
	addsd	xmm1, QWORD PTR .LC1[rip]
	movapd	xmm2, xmm0
	cvtsd2si	rdx, xmm2
	movapd	xmm0, xmm1
	call	_ZN8MEMORY_T6PEEK64Ed
	cvtsd2si	rax, xmm0
	sal	rax, 8
	or	eax, edx
	ret
	.size	_ZN8MEMORY_T10READUSHORTEd, .-_ZN8MEMORY_T10READUSHORTEd
	.p2align 4
	.globl	_ZN8MEMORY_T9WRITEBYTEEdd
	.type	_ZN8MEMORY_T9WRITEBYTEEdd, @function
_ZN8MEMORY_T9WRITEBYTEEdd:
.L5578:
	jmp	_ZN8MEMORY_T6POKE64Edd
	.size	_ZN8MEMORY_T9WRITEBYTEEdd, .-_ZN8MEMORY_T9WRITEBYTEEdd
	.p2align 4
	.globl	INS_INC
	.type	INS_INC, @function
INS_INC:
.L5580:
.L5581:
.L5582:
	push	rbp
	xor	eax, eax
	pxor	xmm0, xmm0
	pxor	xmm1, xmm1
	push	rbx
	mov	rbx, rdi
	sub	rsp, 24
	mov	WORD PTR 13[rsp], ax
	movzx	eax, WORD PTR 64[rdi]
	mov	rdi, QWORD PTR 16[rdi]
	mov	DWORD PTR 9[rsp], 0
	cvtsi2sd	xmm0, eax
	mov	BYTE PTR 15[rsp], 0
	call	_ZN8MEMORY_T9READUBYTEEd
	pxor	xmm0, xmm0
	movzx	edx, WORD PTR 64[rbx]
	mov	rdi, QWORD PTR 16[rbx]
	mov	BYTE PTR 8[rsp], al
	movsx	eax, WORD PTR 8[rsp]
	cvtsi2sd	xmm0, eax
	addsd	xmm0, QWORD PTR .LC1[rip]
	cvttsd2si	ebp, xmm0
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, edx
	movzx	eax, bpl
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T9WRITEBYTEEdd
	movzx	eax, bpl
	pxor	xmm0, xmm0
	xor	edx, edx
	cvtsi2sd	xmm0, rax
	comisd	xmm0, QWORD PTR .LC0[rip]
	mov	rax, QWORD PTR [rbx]
	sete	dl
	and	al, 125
	and	ebp, 128
	add	rdx, rdx
	or	rax, rdx
	or	rax, rbp
	mov	QWORD PTR [rbx], rax
	add	rsp, 24
	pop	rbx
	pop	rbp
	ret
	.size	INS_INC, .-INS_INC
	.p2align 4
	.globl	INS_STY
	.type	INS_STY, @function
INS_STY:
.L5587:
	movzx	eax, BYTE PTR 10[rdi]
	movzx	edx, WORD PTR 64[rdi]
	pxor	xmm0, xmm0
	pxor	xmm1, xmm1
	mov	rdi, QWORD PTR 16[rdi]
	cvtsi2sd	xmm0, edx
	cvtsi2sd	xmm1, eax
	jmp	_ZN8MEMORY_T9WRITEBYTEEdd
	.size	INS_STY, .-INS_STY
	.p2align 4
	.globl	INS_STX
	.type	INS_STX, @function
INS_STX:
.L5589:
	movzx	eax, BYTE PTR 9[rdi]
	movzx	edx, WORD PTR 64[rdi]
	pxor	xmm0, xmm0
	pxor	xmm1, xmm1
	mov	rdi, QWORD PTR 16[rdi]
	cvtsi2sd	xmm0, edx
	cvtsi2sd	xmm1, eax
	jmp	_ZN8MEMORY_T9WRITEBYTEEdd
	.size	INS_STX, .-INS_STX
	.p2align 4
	.globl	INS_STA
	.type	INS_STA, @function
INS_STA:
.L5591:
	movzx	eax, BYTE PTR 8[rdi]
	movzx	edx, WORD PTR 64[rdi]
	pxor	xmm0, xmm0
	pxor	xmm1, xmm1
	mov	rdi, QWORD PTR 16[rdi]
	cvtsi2sd	xmm0, edx
	cvtsi2sd	xmm1, eax
	jmp	_ZN8MEMORY_T9WRITEBYTEEdd
	.size	INS_STA, .-INS_STA
	.p2align 4
	.globl	INS_ROR
	.type	INS_ROR, @function
INS_ROR:
.L5593:
	push	rbp
	pxor	xmm1, xmm1
	push	rbx
	mov	rbx, rdi
	sub	rsp, 24
	mov	rax, QWORD PTR [rdi]
	movsd	xmm0, QWORD PTR .LC1[rip]
	and	eax, 1
	cvtsi2sd	xmm1, rax
	comisd	xmm1, xmm0
	je	.L5608
.L5596:
	movzx	eax, WORD PTR 64[rdi]
	pxor	xmm0, xmm0
	mov	rdi, QWORD PTR 16[rdi]
	pxor	xmm1, xmm1
	mov	QWORD PTR CARY$[rip], 0x000000000
	cvtsi2sd	xmm0, eax
	movsd	QWORD PTR 8[rsp], xmm1
	call	_ZN8MEMORY_T9READUBYTEEd
	mov	ebp, eax
	test	al, 1
	je	.L5606
.L5605:
	mov	edx, 1
.L5597:
	mov	rax, QWORD PTR [rbx]
	shr	bpl
	and	rax, -2
	or	rax, rdx
	comisd	xmm1, QWORD PTR 8[rsp]
	mov	QWORD PTR [rbx], rax
	je	.L5598
.L5603:
	or	ebp, -128
	movzx	edx, WORD PTR 64[rbx]
	pxor	xmm0, xmm0
	pxor	xmm1, xmm1
	movzx	eax, bpl
	mov	rdi, QWORD PTR 16[rbx]
	cvtsi2sd	xmm0, edx
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T9WRITEBYTEEdd
	movzx	eax, bpl
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, QWORD PTR 8[rsp]
	jne	.L5599
.L5600:
.L5601:
	mov	rdx, QWORD PTR [rbx]
	and	ebp, 128
	or	rdx, 2
	and	dl, 127
	or	rdx, rbp
	mov	QWORD PTR [rbx], rdx
	add	rsp, 24
	pop	rbx
	pop	rbp
	ret
	.p2align 4,,10
	.p2align 3
.L5608:
	movzx	eax, WORD PTR 64[rdi]
	movsd	QWORD PTR CARY$[rip], xmm0
	pxor	xmm0, xmm0
	mov	rdi, QWORD PTR 16[rdi]
	cvtsi2sd	xmm0, eax
	call	_ZN8MEMORY_T9READUBYTEEd
	mov	ebp, eax
	test	al, 1
	jne	.L5611
	pxor	xmm5, xmm5
	and	QWORD PTR [rbx], -2
	shr	bpl
	movsd	QWORD PTR 8[rsp], xmm5
	jmp	.L5603
	.p2align 4,,10
	.p2align 3
.L5598:
	movzx	edx, WORD PTR 64[rbx]
	movzx	eax, bpl
	pxor	xmm0, xmm0
	pxor	xmm1, xmm1
	cvtsi2sd	xmm1, eax
	mov	rdi, QWORD PTR 16[rbx]
	cvtsi2sd	xmm0, edx
	call	_ZN8MEMORY_T9WRITEBYTEEdd
	movzx	eax, bpl
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	comisd	xmm0, QWORD PTR 8[rsp]
	je	.L5600
	mov	rdx, QWORD PTR [rbx]
	xor	ebp, ebp
	and	rdx, -3
	and	dl, 127
	or	rdx, rbp
	mov	QWORD PTR [rbx], rdx
	add	rsp, 24
	pop	rbx
	pop	rbp
	ret
	.p2align 4,,10
	.p2align 3
.L5599:
	mov	rdx, QWORD PTR [rbx]
	mov	ebp, 128
	and	rdx, -3
	and	dl, 127
	or	rdx, rbp
	mov	QWORD PTR [rbx], rdx
	add	rsp, 24
	pop	rbx
	pop	rbp
	ret
	.p2align 4,,10
	.p2align 3
.L5606:
	pxor	xmm1, xmm1
	xor	edx, edx
	jmp	.L5597
	.p2align 4,,10
	.p2align 3
.L5611:
	pxor	xmm6, xmm6
	movsd	QWORD PTR 8[rsp], xmm6
	jmp	.L5605
	.size	INS_ROR, .-INS_ROR
	.p2align 4
	.globl	INS_ROL
	.type	INS_ROL, @function
INS_ROL:
.L5613:
	push	rbp
	pxor	xmm0, xmm0
	pxor	xmm1, xmm1
	push	rbx
	mov	rbx, rdi
	sub	rsp, 8
	movzx	eax, WORD PTR 64[rdi]
	mov	rdi, QWORD PTR 16[rdi]
	cvtsi2sd	xmm0, eax
	call	_ZN8MEMORY_T9READUBYTEEd
	movsd	xmm0, QWORD PTR .LC1[rip]
	mov	edx, eax
	mov	rax, QWORD PTR [rbx]
	mov	rcx, rax
	and	ecx, 1
	cvtsi2sd	xmm1, rcx
	comisd	xmm1, xmm0
	je	.L5629
	mov	rcx, rax
	or	rax, 1
	lea	ebp, [rdx+rdx]
	mov	QWORD PTR CARY$[rip], 0x000000000
	and	rcx, -2
	test	dl, dl
	cmovns	rax, rcx
	mov	QWORD PTR [rbx], rax
.L5616:
.L5617:
.L5618:
	movzx	edx, WORD PTR 64[rbx]
	movzx	eax, bpl
	pxor	xmm0, xmm0
	pxor	xmm1, xmm1
	cvtsi2sd	xmm1, eax
	mov	rdi, QWORD PTR 16[rbx]
	cvtsi2sd	xmm0, edx
	call	_ZN8MEMORY_T9WRITEBYTEEdd
	movzx	eax, bpl
	pxor	xmm0, xmm0
	xor	ecx, ecx
	cvtsi2sd	xmm0, rax
	comisd	xmm0, QWORD PTR .LC0[rip]
	mov	rax, QWORD PTR [rbx]
	sete	cl
	and	al, 125
	xor	edx, edx
	add	rcx, rcx
	test	bpl, bpl
	setle	dl
	or	rax, rcx
	sal	rdx, 7
	or	rax, rdx
	mov	QWORD PTR [rbx], rax
	add	rsp, 8
	pop	rbx
	pop	rbp
	ret
	.p2align 4,,10
	.p2align 3
.L5629:
	mov	rcx, rax
	or	rax, 1
	movsd	QWORD PTR CARY$[rip], xmm0
	lea	ebp, 1[rdx+rdx]
	and	rcx, -2
	test	dl, dl
	cmovns	rax, rcx
	mov	QWORD PTR [rbx], rax
	jmp	.L5616
	.size	INS_ROL, .-INS_ROL
	.p2align 4
	.globl	INS_LSR
	.type	INS_LSR, @function
INS_LSR:
.L5631:
.L5632:
.L5633:
	push	rbp
	pxor	xmm0, xmm0
	pxor	xmm1, xmm1
	push	rbx
	mov	rbx, rdi
	sub	rsp, 8
	movzx	eax, WORD PTR 64[rdi]
	mov	rdi, QWORD PTR 16[rdi]
	cvtsi2sd	xmm0, eax
	call	_ZN8MEMORY_T9READUBYTEEd
	pxor	xmm0, xmm0
	mov	rdi, QWORD PTR 16[rbx]
	mov	ebp, eax
	mov	rax, QWORD PTR [rbx]
	mov	rdx, rbp
	shr	bpl
	and	edx, 1
	and	rax, -2
	or	rax, rdx
	movzx	edx, WORD PTR 64[rbx]
	mov	QWORD PTR [rbx], rax
	movzx	eax, bpl
	cvtsi2sd	xmm0, edx
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T9WRITEBYTEEdd
	movzx	eax, bpl
	pxor	xmm0, xmm0
	xor	ecx, ecx
	cvtsi2sd	xmm0, rax
	comisd	xmm0, QWORD PTR .LC0[rip]
	mov	rax, QWORD PTR [rbx]
	sete	cl
	and	al, 125
	xor	edx, edx
	add	rcx, rcx
	test	bpl, bpl
	sete	dl
	or	rax, rcx
	sal	rdx, 7
	or	rax, rdx
	mov	QWORD PTR [rbx], rax
	add	rsp, 8
	pop	rbx
	pop	rbp
	ret
	.size	INS_LSR, .-INS_LSR
	.p2align 4
	.globl	INS_DEC
	.type	INS_DEC, @function
INS_DEC:
.L5638:
	sub	rsp, 8
	movzx	eax, WORD PTR 64[rdi]
	pxor	xmm0, xmm0
	mov	rdx, rdi
	mov	rdi, QWORD PTR 16[rdi]
	cvtsi2sd	xmm0, eax
	call	_ZN8MEMORY_T9READUBYTEEd
	pxor	xmm0, xmm0
	movsx	eax, al
	cvtsi2sd	xmm0, eax
	subsd	xmm0, QWORD PTR .LC1[rip]
	mov	rax, QWORD PTR [rdx]
	cvttsd2si	ecx, xmm0
	test	cl, cl
	je	.L5639
.L5640:
	mov	esi, ecx
	and	rax, -3
	and	esi, 128
.L5641:
	and	al, 127
	movzx	ecx, cl
	pxor	xmm0, xmm0
	mov	rdi, QWORD PTR 16[rdx]
	or	rax, rsi
	pxor	xmm1, xmm1
	mov	QWORD PTR [rdx], rax
	movzx	eax, WORD PTR 64[rdx]
	cvtsi2sd	xmm1, ecx
	add	rsp, 8
	cvtsi2sd	xmm0, eax
	jmp	_ZN8MEMORY_T9WRITEBYTEEdd
	.p2align 4,,10
	.p2align 3
.L5639:
	or	rax, 2
	xor	esi, esi
	jmp	.L5641
	.size	INS_DEC, .-INS_DEC
	.p2align 4
	.globl	INS_ASL
	.type	INS_ASL, @function
INS_ASL:
.L5645:
.L5646:
.L5647:
	push	rbp
	pxor	xmm0, xmm0
	pxor	xmm1, xmm1
	push	rbx
	mov	rbx, rdi
	sub	rsp, 8
	movzx	eax, WORD PTR 64[rdi]
	mov	rdi, QWORD PTR 16[rdi]
	cvtsi2sd	xmm0, eax
	call	_ZN8MEMORY_T9READUBYTEEd
	mov	rdx, QWORD PTR [rbx]
	pxor	xmm0, xmm0
	mov	rdi, QWORD PTR 16[rbx]
	movsx	rcx, al
	lea	ebp, [rax+rax]
	shr	rcx, 63
	and	rdx, -2
	movzx	eax, bpl
	or	rdx, rcx
	cvtsi2sd	xmm1, eax
	mov	QWORD PTR [rbx], rdx
	movzx	edx, WORD PTR 64[rbx]
	cvtsi2sd	xmm0, edx
	call	_ZN8MEMORY_T9WRITEBYTEEdd
	movzx	eax, bpl
	pxor	xmm0, xmm0
	xor	edx, edx
	cvtsi2sd	xmm0, rax
	comisd	xmm0, QWORD PTR .LC0[rip]
	mov	rax, QWORD PTR [rbx]
	sete	dl
	and	al, 125
	and	ebp, 128
	add	rdx, rdx
	or	rax, rdx
	or	rbp, rax
	mov	QWORD PTR [rbx], rbp
	add	rsp, 8
	pop	rbx
	pop	rbp
	ret
	.size	INS_ASL, .-INS_ASL
	.p2align 4
	.globl	_ZN8MEMORY_T10WRITEUBYTEEdd
	.type	_ZN8MEMORY_T10WRITEUBYTEEdd, @function
_ZN8MEMORY_T10WRITEUBYTEEdd:
	jmp	_ZN8MEMORY_T9WRITEBYTEEdd
	.size	_ZN8MEMORY_T10WRITEUBYTEEdd, .-_ZN8MEMORY_T10WRITEUBYTEEdd
	.p2align 4
	.globl	_ZN8MEMORY_T11WRITEUSHORTEdd
	.type	_ZN8MEMORY_T11WRITEUSHORTEdd, @function
_ZN8MEMORY_T11WRITEUSHORTEdd:
.L5653:
	push	r14
	movq	r14, xmm0
	movapd	xmm0, xmm1
	push	rbp
	mov	rbp, rdi
	push	rbx
	call	nearbyint@PLT
	movsd	xmm1, QWORD PTR .LC280[rip]
	cvttsd2si	rbx, xmm0
	comisd	xmm0, xmm1
	jb	.L5655
	subsd	xmm0, xmm1
	cvttsd2si	rbx, xmm0
	btc	rbx, 63
.L5655:
	movzx	eax, bl
	pxor	xmm1, xmm1
	movq	xmm0, r14
	mov	rdi, rbp
	cvtsi2sd	xmm1, rax
	movzx	ebx, bh
	call	_ZN8MEMORY_T6POKE64Edd
	pxor	xmm1, xmm1
	movq	xmm0, r14
	mov	rdi, rbp
	cvtsi2sd	xmm1, rbx
	addsd	xmm0, QWORD PTR .LC1[rip]
	pop	rbx
	pop	rbp
	pop	r14
	jmp	_ZN8MEMORY_T6POKE64Edd
	.size	_ZN8MEMORY_T11WRITEUSHORTEdd, .-_ZN8MEMORY_T11WRITEUSHORTEdd
	.p2align 4
	.globl	_ZN7CPU6510C1EP8MEMORY_T
	.type	_ZN7CPU6510C1EP8MEMORY_T, @function
_ZN7CPU6510C1EP8MEMORY_T:
.L5658:
	push	r13
	xor	ecx, ecx
	xor	edx, edx
	pxor	xmm0, xmm0
	push	r12
	mov	r13, rsi
	xor	esi, esi
	push	rbp
	mov	rbp, rdi
	push	rbx
	lea	rbx, 80[rdi]
	lea	r12, 14416[rbp]
	sub	rsp, 8
	mov	WORD PTR 12[rdi], dx
	mov	edx, 14336
	mov	WORD PTR 14[rdi], cx
	mov	QWORD PTR [rdi], 0
	mov	BYTE PTR 8[rdi], 0
	mov	BYTE PTR 9[rdi], 0
	mov	BYTE PTR 10[rdi], 0
	mov	QWORD PTR 72[rdi], 0
	movups	XMMWORD PTR 24[rdi], xmm0
	movups	XMMWORD PTR 40[rdi], xmm0
	movups	XMMWORD PTR 56[rdi], xmm0
	mov	rdi, rbx
	call	memset@PLT
	lea	rdi, 14424[rbp]
	mov	rcx, r12
	xor	eax, eax
	mov	QWORD PTR 14416[rbp], 0
	and	rdi, -8
	mov	QWORD PTR 14720[rbp], 0
	sub	rcx, rdi
	add	ecx, 312
	shr	ecx, 3
	rep stosq
	mov	QWORD PTR 16[rbp], r13
	lea	rdi, label$4039[rip]
	call	fb_DataRestore@PLT
	.p2align 4,,10
	.p2align 3
.L5659:
	mov	rdi, rbx
	call	fb_DataReadULongint@PLT
	xor	edx, edx
	mov	esi, 4
	lea	rdi, 8[rbx]
	call	fb_DataReadStr@PLT
	lea	rdi, 16[rbx]
	call	fb_DataReadULongint@PLT
	lea	rdi, 24[rbx]
	call	fb_DataReadULongint@PLT
	lea	rdi, 32[rbx]
	call	fb_DataReadULongint@PLT
	lea	rdi, 48[rbx]
	add	rbx, 56
	call	fb_DataReadLongint@PLT
	cmp	rbx, r12
	jne	.L5659
.L5660:
	lea	rdi, label$4045[rip]
	lea	r12, 14728[rbp]
	call	fb_DataRestore@PLT
	.p2align 4,,10
	.p2align 3
.L5661:
	mov	rdi, rbx
	xor	edx, edx
	mov	rsi, -1
	add	rbx, 24
	call	fb_DataReadStr@PLT
	cmp	r12, rbx
	jne	.L5661
.L5662:
	mov	eax, -798
	mov	BYTE PTR 15[rbp], 1
	mov	WORD PTR 12[rbp], ax
	add	rsp, 8
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	ret
	.size	_ZN7CPU6510C1EP8MEMORY_T, .-_ZN7CPU6510C1EP8MEMORY_T
	.p2align 4
	.globl	_ZN5C64_TC1Ev
	.type	_ZN5C64_TC1Ev, @function
_ZN5C64_TC1Ev:
.L5667:
	push	r13
	xor	r9d, r9d
	mov	r8d, 64
	xor	ecx, ecx
	push	r12
	mov	edx, 32
	mov	esi, 1080
	mov	r13, rdi
	push	rbp
	mov	ebp, 15
	push	rbx
	xor	ebx, ebx
	sub	rsp, 56
	mov	QWORD PTR [rdi], 0
	mov	QWORD PTR 8[rdi], 0
	mov	edi, 1920
	mov	QWORD PTR 40[rsp], 0
	call	fb_GfxScreenRes@PLT
	mov	edi, -65536
	call	fb_Cls@PLT
	xor	esi, esi
	lea	rdi, .LC3[rip]
	call	fb_StrAllocTempDescZEx@PLT
	lea	rcx, 16[rsp]
	mov	QWORD PTR 32[rsp], 0
	lea	rdx, 8[rsp]
	mov	QWORD PTR 24[rsp], 0
	sub	rsp, 8
	lea	rsi, SCR_H$[rip]
	lea	rdi, SCR_W$[rip]
	mov	QWORD PTR 24[rsp], 0
	mov	QWORD PTR 16[rsp], 0
	push	rax
	lea	r9, 48[rsp]
	lea	r8, 40[rsp]
	call	fb_GfxScreenInfo@PLT
	mov	esi, DWORD PTR SCR_H$[rip]
	xor	r8d, r8d
	xor	edx, edx
	mov	edi, DWORD PTR SCR_W$[rip]
	mov	ecx, 32
	call	fb_GfxImageCreate@PLT
	mov	esi, DWORD PTR SCR_H$[rip]
	xor	r8d, r8d
	xor	edx, edx
	mov	edi, DWORD PTR SCR_W$[rip]
	mov	ecx, 32
	mov	QWORD PTR BGIMAGE$[rip], rax
	call	fb_GfxImageCreate@PLT
	mov	edi, DWORD PTR SCR_W$[rip]
	xor	r8d, r8d
	xor	edx, edx
	mov	ecx, 32
	xor	esi, esi
	mov	QWORD PTR FGIMAGE$[rip], rax
	call	fb_GfxImageCreate@PLT
	mov	edi, DWORD PTR SCR_W$[rip]
	xor	edx, edx
	xor	r8d, r8d
	mov	ecx, 32
	mov	esi, 1080
	mov	QWORD PTR RASTER$[rip], rax
	call	fb_GfxImageCreate@PLT
	mov	QWORD PTR RENDER$[rip], rax
	pop	rax
	pop	rdx
	lea	r12, 40[rsp]
	.p2align 4,,10
	.p2align 3
.L5668:
	mov	rdi, r12
	call	fb_DataReadLongint@PLT
	mov	esi, DWORD PTR 40[rsp]
	mov	edi, ebx
	mov	ecx, -1
	mov	edx, -1
	call	fb_GfxPalette@PLT
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rbx
	addsd	xmm0, QWORD PTR .LC1[rip]
	cvttsd2si	rbx, xmm0
	sub	ebp, 1
	jne	.L5668
	mov	edi, 134755848
	call	malloc@PLT
	mov	rbp, rax
	test	rax, rax
	je	.L5669
	mov	rdi, rax
	call	_ZN8MEMORY_TC1Ev
.L5669:
	mov	QWORD PTR 0[r13], rbp
	mov	edi, 14728
	call	malloc@PLT
	mov	rbx, rax
	test	rax, rax
	je	.L5670
	mov	rsi, rbp
	mov	rdi, rax
	call	_ZN7CPU6510C1EP8MEMORY_T
.L5670:
	mov	QWORD PTR 8[r13], rbx
	add	rsp, 56
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	ret
	.size	_ZN5C64_TC1Ev, .-_ZN5C64_TC1Ev
	.p2align 4
	.globl	_ZN7CPU6510D1Ev
	.type	_ZN7CPU6510D1Ev, @function
_ZN7CPU6510D1Ev:
.L5680:
	sub	rsp, 88
	add	rdi, 14416
	mov	QWORD PTR [rsp], rdi
	mov	QWORD PTR 8[rsp], rdi
	mov	rdi, rsp
	mov	QWORD PTR 16[rsp], 312
	mov	QWORD PTR 24[rsp], 24
	mov	QWORD PTR 32[rsp], 1
	mov	QWORD PTR 40[rsp], 49
	mov	QWORD PTR 48[rsp], 13
	mov	QWORD PTR 56[rsp], 0
	mov	QWORD PTR 64[rsp], 12
	call	fb_ArrayDestructStr@PLT
	add	rsp, 88
	ret
	.size	_ZN7CPU6510D1Ev, .-_ZN7CPU6510D1Ev
	.p2align 4
	.globl	_ZN5C64_TD1Ev
	.type	_ZN5C64_TD1Ev, @function
_ZN5C64_TD1Ev:
.L5683:
	push	rbx
	mov	rbx, rdi
	mov	rdi, QWORD PTR 8[rdi]
	test	rdi, rdi
	je	.L5684
	call	_ZN7CPU6510D1Ev
	mov	rdi, QWORD PTR 8[rbx]
	call	free@PLT
.L5684:
	mov	rdi, QWORD PTR [rbx]
	test	rdi, rdi
	je	.L5685
	call	free@PLT
.L5685:
	mov	rdi, QWORD PTR BGIMAGE$[rip]
	call	fb_GfxImageDestroy@PLT
	mov	rdi, QWORD PTR FGIMAGE$[rip]
	call	fb_GfxImageDestroy@PLT
	mov	rdi, QWORD PTR RASTER$[rip]
	call	fb_GfxImageDestroy@PLT
	mov	rdi, QWORD PTR RENDER$[rip]
	call	fb_GfxImageDestroy@PLT
	mov	edi, 1000
	pop	rbx
	jmp	fb_Sleep@PLT
	.size	_ZN5C64_TD1Ev, .-_ZN5C64_TD1Ev
	.section	.rodata.str1.1
.LC2138:
	.string	"PC:"
.LC2139:
	.string	" A:"
.LC2140:
	.string	" X:"
.LC2141:
	.string	" Y:"
.LC2142:
	.string	" S:"
.LC2143:
	.string	" N:"
.LC2144:
	.string	" V:"
.LC2145:
	.string	" -"
.LC2146:
	.string	" B:"
.LC2147:
	.string	" D:"
.LC2148:
	.string	" I:"
.LC2149:
	.string	" Z:"
.LC2150:
	.string	" C:"
	.text
	.p2align 4
	.globl	_ZN7CPU6510cv8FBSTRINGEv
	.type	_ZN7CPU6510cv8FBSTRINGEv, @function
_ZN7CPU6510cv8FBSTRINGEv:
	push	r15
	pxor	xmm0, xmm0
	push	r14
	push	r13
	push	r12
	push	rbp
	push	rbx
	mov	rbx, rdi
	sub	rsp, 872
	mov	rdi, QWORD PTR [rdi]
	movups	XMMWORD PTR 832[rsp], xmm0
	lea	rbp, 832[rsp]
	mov	QWORD PTR 848[rsp], 0
	and	edi, 1
	call	fb_ULongintToStr@PLT
	mov	rdi, QWORD PTR [rbx]
	mov	QWORD PTR 56[rsp], rax
	shr	rdi
	and	edi, 1
	call	fb_ULongintToStr@PLT
	mov	rdi, QWORD PTR [rbx]
	mov	QWORD PTR 8[rsp], rax
	shr	rdi, 2
	and	edi, 1
	call	fb_ULongintToStr@PLT
	mov	rdi, QWORD PTR [rbx]
	mov	QWORD PTR 16[rsp], rax
	shr	rdi, 3
	and	edi, 1
	call	fb_ULongintToStr@PLT
	mov	rdi, QWORD PTR [rbx]
	mov	QWORD PTR 24[rsp], rax
	shr	rdi, 4
	and	edi, 1
	call	fb_ULongintToStr@PLT
	mov	rdi, QWORD PTR [rbx]
	mov	r12, rax
	shr	rdi, 6
	and	edi, 1
	call	fb_ULongintToStr@PLT
	mov	rdi, QWORD PTR [rbx]
	mov	r13, rax
	shr	rdi, 7
	and	edi, 1
	call	fb_ULongintToStr@PLT
	movzx	edi, BYTE PTR 14[rbx]
	mov	esi, 2
	mov	r14, rax
	call	fb_HEXEx_b@PLT
	movzx	edi, BYTE PTR 10[rbx]
	mov	esi, 2
	mov	r15, rax
	call	fb_HEXEx_b@PLT
	movzx	edi, BYTE PTR 9[rbx]
	mov	esi, 2
	mov	QWORD PTR 32[rsp], rax
	call	fb_HEXEx_b@PLT
	movzx	edi, BYTE PTR 8[rbx]
	mov	esi, 2
	mov	QWORD PTR 48[rsp], rax
	call	fb_HEXEx_b@PLT
	movzx	edi, WORD PTR 12[rbx]
	mov	esi, 4
	mov	QWORD PTR 40[rsp], rax
	call	fb_HEXEx_s@PLT
	lea	rdi, 64[rsp]
	pxor	xmm0, xmm0
	mov	r8, -1
	mov	rcx, rax
	mov	edx, 4
	movups	XMMWORD PTR 64[rsp], xmm0
	lea	rsi, .LC2138[rip]
	mov	QWORD PTR 80[rsp], 0
	call	fb_StrConcat@PLT
	lea	rdi, 96[rsp]
	pxor	xmm0, xmm0
	mov	r8d, 4
	mov	rsi, rax
	lea	rcx, .LC2139[rip]
	movups	XMMWORD PTR 96[rsp], xmm0
	mov	rdx, -1
	mov	QWORD PTR 112[rsp], 0
	call	fb_StrConcat@PLT
	mov	r10, QWORD PTR 40[rsp]
	pxor	xmm0, xmm0
	lea	rdi, 128[rsp]
	mov	rsi, rax
	mov	r8, -1
	mov	rdx, -1
	movups	XMMWORD PTR 128[rsp], xmm0
	mov	QWORD PTR 144[rsp], 0
	mov	rcx, r10
	call	fb_StrConcat@PLT
	pxor	xmm0, xmm0
	lea	rdi, 160[rsp]
	mov	r8d, 4
	mov	rsi, rax
	lea	rcx, .LC2140[rip]
	mov	rdx, -1
	movups	XMMWORD PTR 160[rsp], xmm0
	mov	QWORD PTR 176[rsp], 0
	call	fb_StrConcat@PLT
	mov	r9, QWORD PTR 48[rsp]
	pxor	xmm0, xmm0
	lea	rdi, 192[rsp]
	mov	rsi, rax
	mov	r8, -1
	mov	rdx, -1
	movups	XMMWORD PTR 192[rsp], xmm0
	mov	QWORD PTR 208[rsp], 0
	mov	rcx, r9
	call	fb_StrConcat@PLT
	pxor	xmm0, xmm0
	lea	rdi, 224[rsp]
	mov	r8d, 4
	mov	rsi, rax
	lea	rcx, .LC2141[rip]
	mov	rdx, -1
	movups	XMMWORD PTR 224[rsp], xmm0
	mov	QWORD PTR 240[rsp], 0
	call	fb_StrConcat@PLT
	mov	rcx, QWORD PTR 32[rsp]
	pxor	xmm0, xmm0
	lea	rdi, 256[rsp]
	mov	rsi, rax
	mov	r8, -1
	mov	rdx, -1
	movups	XMMWORD PTR 256[rsp], xmm0
	mov	QWORD PTR 272[rsp], 0
	call	fb_StrConcat@PLT
	pxor	xmm0, xmm0
	lea	rdi, 288[rsp]
	mov	r8d, 4
	mov	rsi, rax
	lea	rcx, .LC2142[rip]
	mov	rdx, -1
	movups	XMMWORD PTR 288[rsp], xmm0
	mov	QWORD PTR 304[rsp], 0
	call	fb_StrConcat@PLT
	lea	rdi, 320[rsp]
	pxor	xmm0, xmm0
	mov	rcx, r15
	mov	rsi, rax
	mov	r8, -1
	mov	rdx, -1
	movups	XMMWORD PTR 320[rsp], xmm0
	mov	QWORD PTR 336[rsp], 0
	call	fb_StrConcat@PLT
	pxor	xmm0, xmm0
	lea	rdi, 352[rsp]
	mov	r8d, 4
	mov	rsi, rax
	lea	rcx, .LC2143[rip]
	mov	rdx, -1
	movups	XMMWORD PTR 352[rsp], xmm0
	mov	QWORD PTR 368[rsp], 0
	call	fb_StrConcat@PLT
	lea	rdi, 384[rsp]
	pxor	xmm0, xmm0
	mov	rcx, r14
	mov	rsi, rax
	mov	r8, -1
	mov	rdx, -1
	movups	XMMWORD PTR 384[rsp], xmm0
	mov	QWORD PTR 400[rsp], 0
	call	fb_StrConcat@PLT
	pxor	xmm0, xmm0
	lea	rdi, 416[rsp]
	mov	r8d, 4
	mov	rsi, rax
	lea	rcx, .LC2144[rip]
	mov	rdx, -1
	movups	XMMWORD PTR 416[rsp], xmm0
	mov	QWORD PTR 432[rsp], 0
	call	fb_StrConcat@PLT
	lea	rdi, 448[rsp]
	pxor	xmm0, xmm0
	mov	rcx, r13
	mov	rsi, rax
	mov	r8, -1
	mov	rdx, -1
	movups	XMMWORD PTR 448[rsp], xmm0
	mov	QWORD PTR 464[rsp], 0
	call	fb_StrConcat@PLT
	pxor	xmm0, xmm0
	lea	rdi, 480[rsp]
	mov	r8d, 3
	mov	rsi, rax
	lea	rcx, .LC2145[rip]
	mov	rdx, -1
	movups	XMMWORD PTR 480[rsp], xmm0
	mov	QWORD PTR 496[rsp], 0
	call	fb_StrConcat@PLT
	pxor	xmm0, xmm0
	lea	rdi, 512[rsp]
	mov	r8d, 4
	mov	rsi, rax
	lea	rcx, .LC2146[rip]
	mov	rdx, -1
	movups	XMMWORD PTR 512[rsp], xmm0
	mov	QWORD PTR 528[rsp], 0
	call	fb_StrConcat@PLT
	lea	rdi, 544[rsp]
	pxor	xmm0, xmm0
	mov	rcx, r12
	mov	rsi, rax
	mov	r8, -1
	mov	rdx, -1
	movups	XMMWORD PTR 544[rsp], xmm0
	mov	QWORD PTR 560[rsp], 0
	call	fb_StrConcat@PLT
	pxor	xmm0, xmm0
	lea	rdi, 576[rsp]
	mov	r8d, 4
	mov	rsi, rax
	lea	rcx, .LC2147[rip]
	mov	rdx, -1
	movups	XMMWORD PTR 576[rsp], xmm0
	mov	QWORD PTR 592[rsp], 0
	call	fb_StrConcat@PLT
	mov	rcx, QWORD PTR 24[rsp]
	pxor	xmm0, xmm0
	lea	rdi, 608[rsp]
	mov	rsi, rax
	mov	r8, -1
	mov	rdx, -1
	movups	XMMWORD PTR 608[rsp], xmm0
	mov	QWORD PTR 624[rsp], 0
	call	fb_StrConcat@PLT
	pxor	xmm0, xmm0
	lea	rdi, 640[rsp]
	mov	r8d, 4
	mov	rsi, rax
	lea	rcx, .LC2148[rip]
	mov	rdx, -1
	movups	XMMWORD PTR 640[rsp], xmm0
	mov	QWORD PTR 656[rsp], 0
	call	fb_StrConcat@PLT
	mov	rcx, QWORD PTR 16[rsp]
	pxor	xmm0, xmm0
	lea	rdi, 672[rsp]
	mov	rsi, rax
	mov	r8, -1
	mov	rdx, -1
	movups	XMMWORD PTR 672[rsp], xmm0
	mov	QWORD PTR 688[rsp], 0
	call	fb_StrConcat@PLT
	pxor	xmm0, xmm0
	lea	rdi, 704[rsp]
	mov	r8d, 4
	mov	rsi, rax
	lea	rcx, .LC2149[rip]
	mov	rdx, -1
	movups	XMMWORD PTR 704[rsp], xmm0
	mov	QWORD PTR 720[rsp], 0
	call	fb_StrConcat@PLT
	mov	rcx, QWORD PTR 8[rsp]
	pxor	xmm0, xmm0
	lea	rdi, 736[rsp]
	mov	rsi, rax
	mov	r8, -1
	mov	rdx, -1
	movups	XMMWORD PTR 736[rsp], xmm0
	mov	QWORD PTR 752[rsp], 0
	call	fb_StrConcat@PLT
	pxor	xmm0, xmm0
	lea	rdi, 768[rsp]
	mov	r8d, 4
	mov	rsi, rax
	lea	rcx, .LC2150[rip]
	mov	rdx, -1
	movups	XMMWORD PTR 768[rsp], xmm0
	mov	QWORD PTR 784[rsp], 0
	call	fb_StrConcat@PLT
	mov	r11, QWORD PTR 56[rsp]
	pxor	xmm0, xmm0
	lea	rdi, 800[rsp]
	mov	rsi, rax
	mov	r8, -1
	mov	rdx, -1
	movups	XMMWORD PTR 800[rsp], xmm0
	mov	QWORD PTR 816[rsp], 0
	mov	rcx, r11
	call	fb_StrConcat@PLT
	mov	rdi, rbp
	xor	r8d, r8d
	mov	rcx, -1
	mov	rdx, rax
	mov	rsi, -1
	call	fb_StrAssign@PLT
	mov	rdi, rbp
	call	fb_StrAllocTempResult@PLT
	add	rsp, 872
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	ret
	.size	_ZN7CPU6510cv8FBSTRINGEv, .-_ZN7CPU6510cv8FBSTRINGEv
	.p2align 4
	.globl	_ZN7CPU65107ADR_UNKEv
	.type	_ZN7CPU65107ADR_UNKEv, @function
_ZN7CPU65107ADR_UNKEv:
	sub	rsp, 8
	mov	edi, -1
	call	fb_Sleep@PLT
	pxor	xmm0, xmm0
	add	rsp, 8
	ret
	.size	_ZN7CPU65107ADR_UNKEv, .-_ZN7CPU65107ADR_UNKEv
	.p2align 4
	.globl	_ZN7CPU65107ADR_IMMEv
	.type	_ZN7CPU65107ADR_IMMEv, @function
_ZN7CPU65107ADR_IMMEv:
	movzx	edx, WORD PTR 12[rdi]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rdx
	addsd	xmm0, QWORD PTR .LC1[rip]
	mov	rax, rdx
	cvttsd2si	edx, xmm0
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, eax
	mov	WORD PTR 12[rdi], dx
	ret
	.size	_ZN7CPU65107ADR_IMMEv, .-_ZN7CPU65107ADR_IMMEv
	.p2align 4
	.globl	_ZN7CPU65107ADR_RELEv
	.type	_ZN7CPU65107ADR_RELEv, @function
_ZN7CPU65107ADR_RELEv:
	jmp	_ZN7CPU65107ADR_IMMEv
	.size	_ZN7CPU65107ADR_RELEv, .-_ZN7CPU65107ADR_RELEv
	.p2align 4
	.globl	_ZN7CPU65107ADR_ABSEv
	.type	_ZN7CPU65107ADR_ABSEv, @function
_ZN7CPU65107ADR_ABSEv:
	movzx	eax, WORD PTR 12[rdi]
	pxor	xmm0, xmm0
	mov	rcx, rdi
	mov	rdi, QWORD PTR 16[rdi]
	cvtsi2sd	xmm0, eax
	call	_ZN8MEMORY_T10READUSHORTEd
	movzx	edx, WORD PTR 12[rcx]
	pxor	xmm0, xmm0
	movzx	eax, ax
	cvtsi2sd	xmm0, rdx
	addsd	xmm0, QWORD PTR .LC105[rip]
	cvttsd2si	edx, xmm0
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, eax
	mov	WORD PTR 12[rcx], dx
	ret
	.size	_ZN7CPU65107ADR_ABSEv, .-_ZN7CPU65107ADR_ABSEv
	.p2align 4
	.globl	_ZN7CPU65108ADR_ZEROEv
	.type	_ZN7CPU65108ADR_ZEROEv, @function
_ZN7CPU65108ADR_ZEROEv:
	movzx	eax, WORD PTR 12[rdi]
	pxor	xmm0, xmm0
	mov	rdx, rdi
	mov	rdi, QWORD PTR 16[rdi]
	cvtsi2sd	xmm0, eax
	call	_ZN8MEMORY_T9READUBYTEEd
	movzx	ecx, WORD PTR 12[rdx]
	pxor	xmm0, xmm0
	movzx	eax, al
	cvtsi2sd	xmm0, rcx
	addsd	xmm0, QWORD PTR .LC1[rip]
	cvttsd2si	ecx, xmm0
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	mov	WORD PTR 12[rdx], cx
	ret
	.size	_ZN7CPU65108ADR_ZEROEv, .-_ZN7CPU65108ADR_ZEROEv
	.p2align 4
	.globl	_ZN7CPU65109ADR_ZEROXEv
	.type	_ZN7CPU65109ADR_ZEROXEv, @function
_ZN7CPU65109ADR_ZEROXEv:
	movzx	eax, WORD PTR 12[rdi]
	pxor	xmm0, xmm0
	mov	rdx, rdi
	mov	rdi, QWORD PTR 16[rdi]
	pxor	xmm1, xmm1
	cvtsi2sd	xmm0, eax
	call	_ZN8MEMORY_T9READUBYTEEd
	add	al, BYTE PTR 9[rdx]
	pxor	xmm0, xmm0
	movzx	eax, al
	cvtsi2sd	xmm1, rax
	movzx	eax, WORD PTR 12[rdx]
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC1[rip]
	cvttsd2si	eax, xmm0
	movapd	xmm0, xmm1
	mov	WORD PTR 12[rdx], ax
	ret
	.size	_ZN7CPU65109ADR_ZEROXEv, .-_ZN7CPU65109ADR_ZEROXEv
	.p2align 4
	.globl	_ZN7CPU65109ADR_ZEROYEv
	.type	_ZN7CPU65109ADR_ZEROYEv, @function
_ZN7CPU65109ADR_ZEROYEv:
	movzx	eax, WORD PTR 12[rdi]
	pxor	xmm0, xmm0
	mov	rdx, rdi
	mov	rdi, QWORD PTR 16[rdi]
	pxor	xmm1, xmm1
	cvtsi2sd	xmm0, eax
	call	_ZN8MEMORY_T9READUBYTEEd
	add	al, BYTE PTR 10[rdx]
	pxor	xmm0, xmm0
	movzx	eax, al
	cvtsi2sd	xmm1, rax
	movzx	eax, WORD PTR 12[rdx]
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC1[rip]
	cvttsd2si	eax, xmm0
	movapd	xmm0, xmm1
	mov	WORD PTR 12[rdx], ax
	ret
	.size	_ZN7CPU65109ADR_ZEROYEv, .-_ZN7CPU65109ADR_ZEROYEv
	.p2align 4
	.globl	_ZN7CPU65108ADR_ABSXEv
	.type	_ZN7CPU65108ADR_ABSXEv, @function
_ZN7CPU65108ADR_ABSXEv:
	movzx	eax, WORD PTR 12[rdi]
	pxor	xmm0, xmm0
	mov	rcx, rdi
	mov	rdi, QWORD PTR 16[rdi]
	cvtsi2sd	xmm0, eax
	call	_ZN8MEMORY_T10READUSHORTEd
	pxor	xmm1, xmm1
	pxor	xmm0, xmm0
	movzx	edx, ax
	movzx	eax, BYTE PTR 9[rcx]
	add	rax, rdx
	cvtsi2sd	xmm1, rax
	movzx	eax, WORD PTR 12[rcx]
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC105[rip]
	cvttsd2si	eax, xmm0
	movapd	xmm0, xmm1
	mov	WORD PTR 12[rcx], ax
	ret
	.size	_ZN7CPU65108ADR_ABSXEv, .-_ZN7CPU65108ADR_ABSXEv
	.p2align 4
	.globl	_ZN7CPU65108ADR_ABSYEv
	.type	_ZN7CPU65108ADR_ABSYEv, @function
_ZN7CPU65108ADR_ABSYEv:
	movzx	eax, WORD PTR 12[rdi]
	pxor	xmm0, xmm0
	mov	rcx, rdi
	mov	rdi, QWORD PTR 16[rdi]
	cvtsi2sd	xmm0, eax
	call	_ZN8MEMORY_T10READUSHORTEd
	pxor	xmm1, xmm1
	pxor	xmm0, xmm0
	movzx	edx, ax
	movzx	eax, BYTE PTR 10[rcx]
	add	rax, rdx
	cvtsi2sd	xmm1, rax
	movzx	eax, WORD PTR 12[rcx]
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC105[rip]
	cvttsd2si	eax, xmm0
	movapd	xmm0, xmm1
	mov	WORD PTR 12[rcx], ax
	ret
	.size	_ZN7CPU65108ADR_ABSYEv, .-_ZN7CPU65108ADR_ABSYEv
	.p2align 4
	.globl	_ZN7CPU65108ADR_INDXEv
	.type	_ZN7CPU65108ADR_INDXEv, @function
_ZN7CPU65108ADR_INDXEv:
	movzx	eax, WORD PTR 12[rdi]
	pxor	xmm0, xmm0
	mov	rcx, rdi
	mov	rdi, QWORD PTR 16[rdi]
	cvtsi2sd	xmm0, eax
	call	_ZN8MEMORY_T9READUBYTEEd
	add	al, BYTE PTR 9[rcx]
	pxor	xmm0, xmm0
	mov	rdi, QWORD PTR 16[rcx]
	movzx	eax, al
	cvtsi2sd	xmm0, eax
	call	_ZN8MEMORY_T10READUSHORTEd
	movzx	edx, WORD PTR 12[rcx]
	pxor	xmm0, xmm0
	movzx	eax, ax
	cvtsi2sd	xmm0, rdx
	addsd	xmm0, QWORD PTR .LC1[rip]
	cvttsd2si	edx, xmm0
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, eax
	mov	WORD PTR 12[rcx], dx
	ret
	.size	_ZN7CPU65108ADR_INDXEv, .-_ZN7CPU65108ADR_INDXEv
	.p2align 4
	.globl	_ZN7CPU65108ADR_INDYEv
	.type	_ZN7CPU65108ADR_INDYEv, @function
_ZN7CPU65108ADR_INDYEv:
	movzx	eax, WORD PTR 12[rdi]
	pxor	xmm0, xmm0
	mov	rcx, rdi
	mov	rdi, QWORD PTR 16[rdi]
	cvtsi2sd	xmm0, eax
	call	_ZN8MEMORY_T9READUBYTEEd
	pxor	xmm0, xmm0
	mov	rdi, QWORD PTR 16[rcx]
	movzx	eax, al
	cvtsi2sd	xmm0, eax
	call	_ZN8MEMORY_T10READUSHORTEd
	pxor	xmm1, xmm1
	pxor	xmm0, xmm0
	mov	r8d, eax
	movzx	eax, BYTE PTR 10[rcx]
	add	eax, r8d
	movzx	eax, ax
	cvtsi2sd	xmm1, eax
	movzx	eax, WORD PTR 12[rcx]
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC1[rip]
	cvttsd2si	eax, xmm0
	movapd	xmm0, xmm1
	mov	WORD PTR 12[rcx], ax
	ret
	.size	_ZN7CPU65108ADR_INDYEv, .-_ZN7CPU65108ADR_INDYEv
	.p2align 4
	.globl	_ZN7CPU65107ADR_INDEv
	.type	_ZN7CPU65107ADR_INDEv, @function
_ZN7CPU65107ADR_INDEv:
	movzx	eax, WORD PTR 12[rdi]
	pxor	xmm0, xmm0
	mov	rcx, rdi
	mov	rdi, QWORD PTR 16[rdi]
	cvtsi2sd	xmm0, eax
	call	_ZN8MEMORY_T10READUSHORTEd
	pxor	xmm0, xmm0
	mov	rdi, QWORD PTR 16[rcx]
	movzx	eax, ax
	cvtsi2sd	xmm0, eax
	call	_ZN8MEMORY_T10READUSHORTEd
	movzx	edx, WORD PTR 12[rcx]
	pxor	xmm0, xmm0
	movzx	eax, ax
	cvtsi2sd	xmm0, rdx
	addsd	xmm0, QWORD PTR .LC105[rip]
	cvttsd2si	edx, xmm0
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, eax
	mov	WORD PTR 12[rcx], dx
	ret
	.size	_ZN7CPU65107ADR_INDEv, .-_ZN7CPU65107ADR_INDEv
	.p2align 4
	.globl	_ZN7CPU65104TICKEd
	.type	_ZN7CPU65104TICKEd, @function
_ZN7CPU65104TICKEd:
	push	rbp
	xor	esi, esi
	xor	eax, eax
	push	rbx
	mov	rbx, rdi
	mov	edi, 1
	sub	rsp, 56
	mov	QWORD PTR [rsp], 0
	lea	rbp, 16[rsp]
	call	fb_CHR@PLT
	mov	rcx, -1
	mov	rdi, rbp
	xor	r8d, r8d
	mov	rdx, rax
	mov	rsi, -1
	call	fb_StrInit@PLT
	movzx	eax, WORD PTR 12[rbx]
	pxor	xmm0, xmm0
	mov	rdi, QWORD PTR 16[rbx]
	mov	QWORD PTR 8[rsp], 0
	cvtsi2sd	xmm0, eax
	call	_ZN8MEMORY_T9READUBYTEEd
	pxor	xmm0, xmm0
	movzx	eax, al
	lea	rcx, 0[0+rax*8]
	sub	rcx, rax
	lea	rax, 80[rbx+rcx*8]
	movdqu	xmm1, XMMWORD PTR [rax]
	movups	XMMWORD PTR 24[rbx], xmm1
	movdqu	xmm2, XMMWORD PTR 16[rax]
	movups	XMMWORD PTR 40[rbx], xmm2
	movdqu	xmm3, XMMWORD PTR 32[rax]
	movups	XMMWORD PTR 56[rbx], xmm3
	mov	rax, QWORD PTR 48[rax]
	mov	QWORD PTR 64[rbx], 0x000000000
	mov	QWORD PTR 72[rbx], rax
	movzx	eax, WORD PTR 12[rbx]
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC1[rip]
	cvttsd2si	eax, xmm0
	mov	WORD PTR 12[rbx], ax
	mov	rax, QWORD PTR 40[rbx]
	cmp	rax, 12
	ja	.L5709
	lea	rdx, tmp$2539.1[rip]
	jmp	[QWORD PTR [rdx+rax*8]]
	.p2align 4,,10
	.p2align 3
.L5712:
.L5726:
	mov	rdi, rbx
	call	[QWORD PTR 72[rbx]]
.L5709:
	mov	rdi, rbp
	call	fb_StrDelete@PLT
	add	rsp, 56
	pxor	xmm0, xmm0
	pop	rbx
	pop	rbp
	ret
	.p2align 4,,10
	.p2align 3
.L5713:
.L5720:
	mov	rdi, rbx
	call	_ZN7CPU65107ADR_IMMEv
	cvtsd2si	eax, xmm0
	mov	WORD PTR 64[rbx], ax
	call	[QWORD PTR 72[rbx]]
	jmp	.L5709
	.p2align 4,,10
	.p2align 3
.L5721:
	mov	rdi, rbx
	call	_ZN7CPU65108ADR_INDXEv
	mov	rdi, rbx
	cvtsd2si	eax, xmm0
	mov	WORD PTR 64[rbx], ax
	call	[QWORD PTR 72[rbx]]
	jmp	.L5709
	.p2align 4,,10
	.p2align 3
.L5722:
	mov	rdi, rbx
	call	_ZN7CPU65108ADR_INDYEv
	mov	rdi, rbx
	cvtsd2si	eax, xmm0
	mov	WORD PTR 64[rbx], ax
	call	[QWORD PTR 72[rbx]]
	jmp	.L5709
	.p2align 4,,10
	.p2align 3
.L5723:
	mov	rdi, rbx
	call	_ZN7CPU65107ADR_INDEv
	mov	rdi, rbx
	cvtsd2si	eax, xmm0
	mov	WORD PTR 64[rbx], ax
	call	[QWORD PTR 72[rbx]]
	jmp	.L5709
	.p2align 4,,10
	.p2align 3
.L5711:
	jmp	.L5709
	.p2align 4,,10
	.p2align 3
.L5714:
	mov	rdi, rbx
	call	_ZN7CPU65107ADR_ABSEv
	cvtsd2si	eax, xmm0
	mov	WORD PTR 64[rbx], ax
	jmp	.L5726
	.p2align 4,,10
	.p2align 3
.L5715:
	mov	rdi, rbx
	call	_ZN7CPU65108ADR_ZEROEv
	mov	rdi, rbx
	cvtsd2si	eax, xmm0
	mov	WORD PTR 64[rbx], ax
	call	[QWORD PTR 72[rbx]]
	jmp	.L5709
	.p2align 4,,10
	.p2align 3
.L5716:
	mov	rdi, rbx
	call	_ZN7CPU65109ADR_ZEROXEv
	mov	rdi, rbx
	cvtsd2si	eax, xmm0
	mov	WORD PTR 64[rbx], ax
	call	[QWORD PTR 72[rbx]]
	jmp	.L5709
	.p2align 4,,10
	.p2align 3
.L5717:
	mov	rdi, rbx
	call	_ZN7CPU65109ADR_ZEROYEv
	mov	rdi, rbx
	cvtsd2si	eax, xmm0
	mov	WORD PTR 64[rbx], ax
	call	[QWORD PTR 72[rbx]]
	jmp	.L5709
	.p2align 4,,10
	.p2align 3
.L5718:
	mov	rdi, rbx
	call	_ZN7CPU65108ADR_ABSXEv
	mov	rdi, rbx
	cvtsd2si	eax, xmm0
	mov	WORD PTR 64[rbx], ax
	call	[QWORD PTR 72[rbx]]
	jmp	.L5709
	.p2align 4,,10
	.p2align 3
.L5719:
	mov	rdi, rbx
	call	_ZN7CPU65108ADR_ABSYEv
	mov	rdi, rbx
	cvtsd2si	eax, xmm0
	mov	WORD PTR 64[rbx], ax
	call	[QWORD PTR 72[rbx]]
	jmp	.L5709
	.size	_ZN7CPU65104TICKEd, .-_ZN7CPU65104TICKEd
	.p2align 4
	.globl	_ZN7CPU65104PUSHEd
	.type	_ZN7CPU65104PUSHEd, @function
_ZN7CPU65104PUSHEd:
.L5728:
	push	rbx
	movzx	eax, WORD PTR 14[rdi]
	movapd	xmm1, xmm0
	pxor	xmm0, xmm0
	mov	rbx, rdi
	mov	rdi, QWORD PTR 16[rdi]
	cvtsi2sd	xmm0, eax
	call	_ZN8MEMORY_T9WRITEBYTEEdd
	movzx	eax, BYTE PTR 14[rbx]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	subsd	xmm0, QWORD PTR .LC1[rip]
	cvttsd2si	eax, xmm0
	mov	BYTE PTR 14[rbx], al
	pop	rbx
	ret
	.size	_ZN7CPU65104PUSHEd, .-_ZN7CPU65104PUSHEd
	.p2align 4
	.globl	INS_BRK
	.type	INS_BRK, @function
INS_BRK:
.L5731:
	push	rbx
	movzx	eax, WORD PTR 12[rdi]
	pxor	xmm0, xmm0
	mov	rbx, rdi
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC1[rip]
	cvttsd2si	eax, xmm0
	pxor	xmm0, xmm0
	mov	WORD PTR 12[rdi], ax
	movzx	eax, ah
	cvtsi2sd	xmm0, eax
	call	_ZN7CPU65104PUSHEd
	movzx	eax, BYTE PTR 12[rbx]
	pxor	xmm0, xmm0
	mov	rdi, rbx
	cvtsi2sd	xmm0, eax
	call	_ZN7CPU65104PUSHEd
	movzx	eax, BYTE PTR [rbx]
	pxor	xmm0, xmm0
	mov	rdi, rbx
	cvtsi2sd	xmm0, eax
	call	_ZN7CPU65104PUSHEd
	or	QWORD PTR [rbx], 20
	mov	rdi, QWORD PTR 16[rbx]
	movsd	xmm0, QWORD PTR .LC2151[rip]
	call	_ZN8MEMORY_T10READUSHORTEd
	mov	WORD PTR 12[rbx], ax
	pop	rbx
	ret
	.size	INS_BRK, .-INS_BRK
	.p2align 4
	.globl	INS_JSR
	.type	INS_JSR, @function
INS_JSR:
.L5734:
	push	rbx
	movzx	eax, WORD PTR 12[rdi]
	pxor	xmm0, xmm0
	mov	rbx, rdi
	sub	eax, 1
	mov	WORD PTR 12[rdi], ax
	movzx	eax, ah
	cvtsi2sd	xmm0, eax
	call	_ZN7CPU65104PUSHEd
	movzx	eax, BYTE PTR 12[rbx]
	pxor	xmm0, xmm0
	mov	rdi, rbx
	cvtsi2sd	xmm0, eax
	call	_ZN7CPU65104PUSHEd
	movzx	eax, WORD PTR 64[rbx]
	mov	WORD PTR 12[rbx], ax
	pop	rbx
	ret
	.size	INS_JSR, .-INS_JSR
	.p2align 4
	.globl	INS_PHA
	.type	INS_PHA, @function
INS_PHA:
.L5737:
	movzx	eax, BYTE PTR 8[rdi]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, eax
	jmp	_ZN7CPU65104PUSHEd
	.size	INS_PHA, .-INS_PHA
	.p2align 4
	.globl	INS_PHP
	.type	INS_PHP, @function
INS_PHP:
.L5739:
	movzx	eax, BYTE PTR [rdi]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, eax
	jmp	_ZN7CPU65104PUSHEd
	.size	INS_PHP, .-INS_PHP
	.p2align 4
	.globl	_ZN7CPU65104PULLEv
	.type	_ZN7CPU65104PULLEv, @function
_ZN7CPU65104PULLEv:
	movzx	eax, BYTE PTR 14[rdi]
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC1[rip]
	cvttsd2si	eax, xmm0
	pxor	xmm0, xmm0
	mov	BYTE PTR 14[rdi], al
	movzx	eax, WORD PTR 14[rdi]
	mov	rdi, QWORD PTR 16[rdi]
	cvtsi2sd	xmm0, eax
	call	_ZN8MEMORY_T9READUBYTEEd
	pxor	xmm0, xmm0
	movzx	eax, al
	cvtsi2sd	xmm0, eax
	ret
	.size	_ZN7CPU65104PULLEv, .-_ZN7CPU65104PULLEv
	.p2align 4
	.globl	INS_PLA
	.type	INS_PLA, @function
INS_PLA:
.L5742:
.L5743:
.L5744:
	mov	rdx, rdi
	xor	esi, esi
	call	_ZN7CPU65104PULLEv
	cvtsd2si	ecx, xmm0
	pxor	xmm0, xmm0
	movzx	eax, cl
	mov	BYTE PTR 8[rdx], cl
	cvtsi2sd	xmm0, rax
	comisd	xmm0, QWORD PTR .LC0[rip]
	mov	rax, QWORD PTR [rdx]
	sete	sil
	and	al, 125
	and	ecx, 128
	add	rsi, rsi
	or	rax, rsi
	or	rax, rcx
	mov	QWORD PTR [rdx], rax
	ret
	.size	INS_PLA, .-INS_PLA
	.p2align 4
	.globl	INS_PLP
	.type	INS_PLP, @function
INS_PLP:
.L5748:
	mov	rdx, rdi
	call	_ZN7CPU65104PULLEv
	cvtsd2si	eax, xmm0
	mov	BYTE PTR [rdx], al
	ret
	.size	INS_PLP, .-INS_PLP
	.p2align 4
	.globl	INS_RTI
	.type	INS_RTI, @function
INS_RTI:
.L5750:
	mov	rdx, rdi
	call	_ZN7CPU65104PULLEv
	mov	rdi, rdx
	cvtsd2si	eax, xmm0
	mov	BYTE PTR [rdx], al
	call	_ZN7CPU65104PULLEv
	mov	rdi, rdx
	cvtsd2si	eax, xmm0
	mov	BYTE PTR 12[rdx], al
	call	_ZN7CPU65104PULLEv
	cvtsd2si	eax, xmm0
	pxor	xmm0, xmm0
	mov	BYTE PTR 13[rdx], al
	movzx	eax, WORD PTR 12[rdx]
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC1[rip]
	cvttsd2si	eax, xmm0
	mov	WORD PTR 12[rdx], ax
	ret
	.size	INS_RTI, .-INS_RTI
	.p2align 4
	.globl	INS_RTS
	.type	INS_RTS, @function
INS_RTS:
.L5752:
	mov	rdx, rdi
	call	_ZN7CPU65104PULLEv
	mov	rdi, rdx
	cvtsd2si	eax, xmm0
	mov	BYTE PTR 12[rdx], al
	call	_ZN7CPU65104PULLEv
	cvtsd2si	eax, xmm0
	pxor	xmm0, xmm0
	mov	BYTE PTR 13[rdx], al
	movzx	eax, WORD PTR 12[rdx]
	cvtsi2sd	xmm0, rax
	addsd	xmm0, QWORD PTR .LC1[rip]
	cvttsd2si	eax, xmm0
	mov	WORD PTR 12[rdx], ax
	ret
	.size	INS_RTS, .-INS_RTS
	.section	.rodata.str1.1
.LC2152:
	.string	"save filename:"
.LC2153:
	.string	"can't create: "
.LC2156:
	.string	"load filename:"
.LC2157:
	.string	"can't open: "
	.text
	.p2align 4
	.globl	INTERRUPTSERVICE
	.type	INTERRUPTSERVICE, @function
INTERRUPTSERVICE:
.L5754:
	push	r15
	push	r14
	push	r13
	push	r12
	xor	r12d, r12d
	push	rbp
	push	rbx
	sub	rsp, 88
	test	BYTE PTR [rdi], 4
	je	.L5828
.L5753:
	add	rsp, 88
	mov	rax, r12
	pop	rbx
	pop	rbp
	pop	r12
	pop	r13
	pop	r14
	pop	r15
	ret
	.p2align 4,,10
	.p2align 3
.L5828:
	mov	rax, QWORD PTR .LC298[rip]
	mov	rbx, rdi
	mov	rdi, QWORD PTR 16[rdi]
	xor	ebp, ebp
	movq	xmm0, rax
	call	_ZN8MEMORY_T9READUBYTEEd
	movzx	r12d, al
	cmp	r12, 9
	jle	.L5829
.L5755:
.L5793:
	movzx	eax, BYTE PTR 13[rbx]
	pxor	xmm0, xmm0
	mov	rdi, rbx
	xor	r12d, r12d
	cvtsi2sd	xmm0, eax
	call	_ZN7CPU65104PUSHEd
	movzx	eax, BYTE PTR 12[rbx]
	pxor	xmm0, xmm0
	mov	rdi, rbx
	cvtsi2sd	xmm0, eax
	call	_ZN7CPU65104PUSHEd
	movzx	eax, BYTE PTR [rbx]
	pxor	xmm0, xmm0
	mov	rdi, rbx
	cvtsi2sd	xmm0, eax
	call	_ZN7CPU65104PUSHEd
	mov	rdi, QWORD PTR 16[rbx]
	movsd	xmm0, QWORD PTR .LC2151[rip]
	call	_ZN8MEMORY_T9READUBYTEEd
	mov	rdi, QWORD PTR 16[rbx]
	movsd	xmm0, QWORD PTR .LC260[rip]
	mov	BYTE PTR 13[rbx], al
	call	_ZN8MEMORY_T9READUBYTEEd
	mov	BYTE PTR 12[rbx], al
	mov	rax, QWORD PTR [rbx]
	and	rax, -17
	or	rax, 4
	cmp	QWORD PTR 24[rbx], 64
	mov	QWORD PTR [rbx], rax
	je	.L5797
	.p2align 4,,10
	.p2align 3
.L5794:
	mov	rax, QWORD PTR .LC2068[rip]
	mov	rdi, rbx
	add	r12, 1
	movq	xmm0, rax
	call	_ZN7CPU65104TICKEd
	cmp	QWORD PTR 24[rbx], 64
	jne	.L5794
.L5797:
	mov	rdi, rbx
	call	_ZN7CPU65104PULLEv
	mov	rdi, rbx
	cvtsd2si	eax, xmm0
	mov	BYTE PTR [rbx], al
	call	_ZN7CPU65104PULLEv
	mov	rdi, rbx
	cvtsd2si	eax, xmm0
	mov	BYTE PTR 12[rbx], al
	call	_ZN7CPU65104PULLEv
	cvtsd2si	eax, xmm0
	mov	BYTE PTR 13[rbx], al
	xor	eax, eax
	cmp	rbp, 13
	sete	al
	mov	QWORD PTR FLAG$[rip], rax
	jmp	.L5753
	.p2align 4,,10
	.p2align 3
.L5829:
	call	fb_Inkey@PLT
	lea	r13, 16[rsp]
	xor	r8d, r8d
	mov	rcx, -1
	mov	rdx, rax
	mov	rsi, -1
	mov	rdi, r13
	call	fb_StrInit@PLT
	mov	rsi, -1
	mov	rdi, r13
	call	fb_StrLen@PLT
	mov	rbp, rax
	test	rax, rax
	je	.L5792
	mov	rax, QWORD PTR 16[rsp]
	movzx	edx, BYTE PTR -1[rax+rbp]
	sal	rbp, 8
	lea	rax, [rdx+rbp]
	lea	rbp, -256[rax]
	cmp	rax, 283
	je	.L5830
	lea	rdx, -321[rax]
	cmp	rdx, 25
	jbe	.L5831
.L5760:
	lea	rdx, -353[rax]
	cmp	rdx, 25
	jbe	.L5832
.L5763:
	cmp	rbp, 316
	je	.L5765
	cmp	rbp, 317
	je	.L5833
	cmp	rbp, 327
	je	.L5834
	cmp	rbp, 8
	je	.L5803
	cmp	rbp, 331
	je	.L5804
	cmp	rbp, 328
	je	.L5805
	cmp	rbp, 333
	je	.L5806
	cmp	rbp, 336
	jne	.L5835
	movsd	xmm1, QWORD PTR .LC118[rip]
	mov	ebp, 17
.L5759:
.L5786:
.L5787:
.L5788:
	.p2align 4,,10
	.p2align 3
.L5789:
	lea	rax, 631[r12]
	pxor	xmm0, xmm0
	mov	rdi, QWORD PTR 16[rbx]
	add	r12, 1
	cvtsi2sd	xmm0, rax
	call	_ZN8MEMORY_T9WRITEBYTEEdd
	pxor	xmm1, xmm1
	mov	rax, QWORD PTR .LC298[rip]
	mov	rdi, QWORD PTR 16[rbx]
	cvtsi2sd	xmm1, r12
	movq	xmm0, rax
	call	_ZN8MEMORY_T9WRITEBYTEEdd
.L5756:
.L5790:
.L5791:
.L5792:
	mov	rdi, r13
	call	fb_StrDelete@PLT
	jmp	.L5793
.L5765:
	xor	r8d, r8d
	xor	ecx, ecx
	mov	edx, -1
	mov	esi, 1
	mov	edi, 1
	call	fb_Locate@PLT
	mov	edi, 48
	call	fb_SPACE@PLT
	xor	edi, edi
	mov	edx, 1
	mov	rsi, rax
	call	fb_PrintString@PLT
	xor	r8d, r8d
	xor	ecx, ecx
	mov	edx, -1
	mov	esi, 1
	mov	edi, 1
	call	fb_Locate@PLT
	mov	esi, 14
	lea	rdi, .LC2152[rip]
	call	fb_StrAllocTempDescZEx@PLT
	mov	edx, -1
	mov	esi, -1
	mov	rdi, rax
	call	fb_ConsoleInput@PLT
	xor	edx, edx
	mov	rsi, -1
	mov	rdi, r13
	call	fb_InputString@PLT
	mov	rsi, -1
	mov	rdi, r13
	call	fb_StrLen@PLT
	test	rax, rax
	je	.L5777
	call	fb_FileFree@PLT
	xor	r9d, r9d
	xor	ecx, ecx
	xor	esi, esi
	mov	r8d, eax
	mov	edx, 2
	mov	rdi, r13
	mov	r14d, eax
	call	fb_FileOpen@PLT
	test	eax, eax
	je	.L5770
	xor	r8d, r8d
	xor	ecx, ecx
	mov	edx, -1
	mov	esi, 1
	mov	edi, 1
	call	fb_Locate@PLT
	mov	edi, 48
	call	fb_SPACE@PLT
	mov	edx, 1
	xor	edi, edi
	mov	rsi, rax
	call	fb_PrintString@PLT
	xor	r8d, r8d
	xor	ecx, ecx
	mov	edx, -1
	mov	esi, 1
	mov	edi, 1
	call	fb_Locate@PLT
	pxor	xmm0, xmm0
	lea	rdi, 48[rsp]
	mov	rcx, r13
	mov	QWORD PTR 64[rsp], 0
	mov	r8, -1
	mov	edx, 15
	lea	rsi, .LC2153[rip]
	movups	XMMWORD PTR 48[rsp], xmm0
.L5826:
	call	fb_StrConcat@PLT
	xor	edi, edi
	mov	edx, 1
	mov	rsi, rax
	call	fb_PrintString@PLT
	call	fb_Beep@PLT
	mov	edi, -1
	call	fb_Sleep@PLT
.L5769:
.L5773:
.L5774:
.L5775:
.L5776:
.L5777:
	pxor	xmm1, xmm1
	movss	xmm3, DWORD PTR .LC2154[rip]
	xor	edi, edi
	xor	ebp, ebp
	xor	r8d, r8d
	mov	ecx, 65535
	movaps	xmm0, xmm1
	mov	edx, 2
	movss	xmm2, DWORD PTR .LC2155[rip]
	mov	esi, 3
	call	fb_GfxLine@PLT
	jmp	.L5792
.L5835:
.L5783:
.L5784:
.L5785:
	test	rbp, rbp
	je	.L5792
	.p2align 4,,10
	.p2align 3
.L5798:
	pxor	xmm1, xmm1
	cvtsi2sd	xmm1, rbp
	jmp	.L5789
.L5830:
.L5758:
	xor	edi, edi
	call	fb_End@PLT
	movsd	xmm1, QWORD PTR .LC128[rip]
	jmp	.L5789
.L5831:
.L5761:
	lea	rbp, -224[rax]
.L5827:
	mov	rsi, rbp
	mov	edi, 1
	xor	eax, eax
	call	fb_CHR@PLT
	xor	r8d, r8d
	mov	rcx, -1
	mov	rsi, -1
	mov	rdx, rax
	lea	rdi, S$1.0[rip]
	call	fb_StrConcatAssign@PLT
	jmp	.L5798
.L5832:
.L5764:
	lea	rbp, -288[rax]
	jmp	.L5827
.L5834:
	movsd	xmm1, QWORD PTR .LC120[rip]
	mov	ebp, 19
	jmp	.L5789
.L5833:
.L5767:
	xor	r8d, r8d
	xor	ecx, ecx
	mov	edx, -1
	mov	esi, 1
	mov	edi, 1
	call	fb_Locate@PLT
	mov	edi, 48
	call	fb_SPACE@PLT
	xor	edi, edi
	mov	edx, 1
	mov	rsi, rax
	call	fb_PrintString@PLT
	xor	r8d, r8d
	xor	ecx, ecx
	mov	edx, -1
	mov	esi, 1
	mov	edi, 1
	call	fb_Locate@PLT
	mov	esi, 14
	lea	rdi, .LC2156[rip]
	call	fb_StrAllocTempDescZEx@PLT
	mov	edx, -1
	mov	esi, -1
	mov	rdi, rax
	call	fb_ConsoleInput@PLT
	xor	edx, edx
	mov	rsi, -1
	mov	rdi, r13
	call	fb_InputString@PLT
	mov	rsi, -1
	mov	rdi, r13
	call	fb_StrLen@PLT
	test	rax, rax
	je	.L5777
	call	fb_FileFree@PLT
	xor	r9d, r9d
	xor	ecx, ecx
	xor	esi, esi
	mov	r8d, eax
	mov	edx, 1
	mov	rdi, r13
	mov	r14d, eax
	call	fb_FileOpen@PLT
	test	eax, eax
	je	.L5780
	xor	r8d, r8d
	xor	ecx, ecx
	mov	edx, -1
	mov	esi, 1
	mov	edi, 1
	call	fb_Locate@PLT
	mov	edi, 48
	call	fb_SPACE@PLT
	mov	edx, 1
	xor	edi, edi
	mov	rsi, rax
	call	fb_PrintString@PLT
	xor	r8d, r8d
	xor	ecx, ecx
	mov	edx, -1
	mov	esi, 1
	mov	edi, 1
	call	fb_Locate@PLT
	pxor	xmm0, xmm0
	lea	rdi, 48[rsp]
	mov	rcx, r13
	mov	QWORD PTR 64[rsp], 0
	mov	r8, -1
	mov	edx, 13
	lea	rsi, .LC2157[rip]
	movups	XMMWORD PTR 48[rsp], xmm0
	jmp	.L5826
.L5803:
	movsd	xmm1, QWORD PTR .LC121[rip]
	mov	ebp, 20
	jmp	.L5789
.L5804:
	movsd	xmm1, QWORD PTR .LC162[rip]
	mov	ebp, 157
	jmp	.L5789
.L5805:
	movsd	xmm1, QWORD PTR .LC150[rip]
	mov	ebp, 145
	jmp	.L5789
.L5770:
	mov	rdi, QWORD PTR 16[rbx]
	movsd	xmm0, QWORD PTR .LC86[rip]
	xor	esi, esi
	xor	ebp, ebp
	mov	BYTE PTR 15[rsp], 0
	mov	ecx, 8
	lea	r12, 15[rsp]
	call	_ZN8MEMORY_T10READUSHORTEd
	lea	rdx, 48[rsp]
	mov	edi, r14d
	movzx	eax, ax
	sub	rax, 2048
	mov	QWORD PTR 48[rsp], rax
	call	fb_FilePutLarge@PLT
	mov	r15, QWORD PTR 48[rsp]
	sub	r15, 1
	js	.L5772
.L5771:
	lea	rax, 2048[rbp]
	pxor	xmm0, xmm0
	mov	rdx, r12
	xor	esi, esi
	cvtsi2sd	xmm0, rax
	mov	rdi, QWORD PTR 16[rbx]
	mov	ecx, 1
	add	rbp, 1
	call	_ZN8MEMORY_T9READUBYTEEd
	mov	edi, r14d
	mov	BYTE PTR 15[rsp], al
	call	fb_FilePutLarge@PLT
	cmp	r15, rbp
	jge	.L5771
.L5772:
	mov	edi, r14d
	call	fb_FileClose@PLT
	jmp	.L5777
.L5806:
	movsd	xmm1, QWORD PTR .LC130[rip]
	mov	ebp, 29
	jmp	.L5789
.L5780:
	lea	rdx, 48[rsp]
	mov	ecx, 8
	xor	esi, esi
	mov	edi, r14d
	mov	BYTE PTR 15[rsp], 0
	xor	ebp, ebp
	lea	r12, 15[rsp]
	mov	QWORD PTR 48[rsp], 0
	call	fb_FileGetLarge@PLT
	mov	r15, QWORD PTR 48[rsp]
	sub	r15, 1
	js	.L5782
.L5781:
	mov	ecx, 1
	mov	rdx, r12
	xor	esi, esi
	mov	edi, r14d
	call	fb_FileGetLarge@PLT
	movzx	eax, BYTE PTR 15[rsp]
	lea	rdx, 2048[rbp]
	pxor	xmm0, xmm0
	pxor	xmm1, xmm1
	cvtsi2sd	xmm0, rdx
	mov	rdi, QWORD PTR 16[rbx]
	add	rbp, 1
	cvtsi2sd	xmm1, eax
	call	_ZN8MEMORY_T9WRITEBYTEEdd
	cmp	r15, rbp
	jge	.L5781
.L5782:
	mov	edi, r14d
	call	fb_FileClose@PLT
	mov	rax, QWORD PTR 48[rsp]
	pxor	xmm1, xmm1
	mov	rdi, QWORD PTR 16[rbx]
	movsd	xmm0, QWORD PTR .LC86[rip]
	add	rax, 2048
	cvtsi2sd	xmm1, rax
	mov	QWORD PTR 48[rsp], rax
	call	_ZN8MEMORY_T11WRITEUSHORTEdd
	mov	eax, -23254
	mov	WORD PTR 12[rbx], ax
	jmp	.L5777
	.size	INTERRUPTSERVICE, .-INTERRUPTSERVICE
	.section	.text.startup,"ax",@progbits
	.p2align 4
	.type	fb_ctor__c64dvdzglsl, @function
fb_ctor__c64dvdzglsl:
.L5837:
	push	r13
	xor	r8d, r8d
	mov	ecx, 3
	lea	rdx, .LC927[rip]
	push	r12
	mov	rsi, -1
	lea	rdi, EOL$[rip]
	xor	r13d, r13d
	push	rbp
	push	rbx
	movabs	rbx, -5853766786057164379
	sub	rsp, 24
	call	fb_StrAssign@PLT
	mov	rdi, rsp
	call	_ZN5C64_TC1Ev
	mov	r12, QWORD PTR fb_hPutPSet@GOTPCREL[rip]
	mov	rbp, QWORD PTR fb_hPutOr@GOTPCREL[rip]
	.p2align 4,,10
	.p2align 3
.L5842:
	pxor	xmm0, xmm0
	mov	rdi, QWORD PTR 8[rsp]
	cvtsi2sd	xmm0, r13
	addsd	xmm0, QWORD PTR .LC1[rip]
	cvttsd2si	r13, xmm0
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, QWORD PTR FLAG$[rip]
	comisd	xmm0, QWORD PTR .LC1[rip]
	je	.L5845
	mov	rax, QWORD PTR .LC2068[rip]
	movq	xmm0, rax
	call	_ZN7CPU65104TICKEd
.L5841:
	mov	rax, r13
	pxor	xmm0, xmm0
	pxor	xmm2, xmm2
	imul	rbx
	mov	rax, r13
	sar	rax, 63
	add	rdx, r13
	sar	rdx, 14
	sub	rdx, rax
	mov	rax, r13
	imul	rdx, rdx, 24000
	sub	rax, rdx
	cvtsi2sd	xmm0, rax
	comisd	xmm0, xmm2
	jne	.L5842
.L5838:
	mov	rdi, QWORD PTR 8[rsp]
	call	INTERRUPTSERVICE
	add	r13, rax
	call	fb_GfxLock@PLT
	push	0
	pxor	xmm1, xmm1
	xor	edi, edi
	push	0
	movaps	xmm0, xmm1
	mov	r9d, -65536
	mov	ecx, -65536
	push	-1
	mov	r8d, -65536
	mov	edx, -65536
	mov	rsi, QWORD PTR BGIMAGE$[rip]
	push	r12
	push	1
	push	0
	call	fb_GfxPut@PLT
	add	rsp, 48
	xor	edi, edi
	mov	ecx, -65536
	push	0
	mov	r9d, -65536
	pxor	xmm1, xmm1
	pxor	xmm0, xmm0
	push	0
	mov	r8d, -65536
	mov	edx, -65536
	mov	rsi, QWORD PTR FGIMAGE$[rip]
	push	-1
	push	rbp
	push	4
	push	0
	call	fb_GfxPut@PLT
	add	rsp, 48
	mov	esi, -1
	mov	edi, -1
	call	fb_GfxUnlock@PLT
	jmp	.L5842
	.p2align 4,,10
	.p2align 3
.L5845:
	pxor	xmm0, xmm0
	cvtsi2sd	xmm0, r13
	call	_ZN7CPU65104TICKEd
	jmp	.L5841
	.size	fb_ctor__c64dvdzglsl, .-fb_ctor__c64dvdzglsl
	.section	.init_array,"aw"
	.align 8
	.quad	fb_ctor__c64dvdzglsl
	.local	S$1.0
	.comm	S$1.0,24,16
	.section	.data.rel.ro.local,"aw"
	.align 32
	.type	tmp$2539.1, @object
	.size	tmp$2539.1, 104
tmp$2539.1:
	.quad	.L5711
	.quad	.L5712
	.quad	.L5713
	.quad	.L5714
	.quad	.L5715
	.quad	.L5716
	.quad	.L5717
	.quad	.L5718
	.quad	.L5719
	.quad	.L5720
	.quad	.L5721
	.quad	.L5722
	.quad	.L5723
	.align 32
	.type	tmp$2496.2, @object
	.size	tmp$2496.2, 48
tmp$2496.2:
	.quad	.L3582
	.quad	.L3583
	.quad	.L3584
	.quad	.L3585
	.quad	.L3586
	.quad	.L3587
	.align 32
	.type	tmp$2495.3, @object
	.size	tmp$2495.3, 56
tmp$2495.3:
	.quad	.L3564
	.quad	.L3565
	.quad	.L3566
	.quad	.L3567
	.quad	.L3568
	.quad	.L3569
	.quad	.L3570
	.align 32
	.type	tmp$2494.4, @object
	.size	tmp$2494.4, 32
tmp$2494.4:
	.quad	.L3555
	.quad	.L3556
	.quad	.L3557
	.quad	.L3558
	.align 32
	.type	tmp$2493.5, @object
	.size	tmp$2493.5, 168
tmp$2493.5:
	.quad	.L1557
	.quad	.L1599
	.quad	.L1600
	.quad	.L1601
	.quad	.L1602
	.quad	.L1603
	.quad	.L1605
	.quad	.L1866
	.quad	.L3366
	.quad	.L2126
	.quad	.L2141
	.quad	.L2142
	.quad	.L2143
	.quad	.L2144
	.quad	.L2145
	.quad	.L2148
	.quad	.L2151
	.quad	.L2178
	.quad	.L2438
	.quad	.L2698
	.quad	.L3200
	.align 32
	.type	tmp$2492.6, @object
	.size	tmp$2492.6, 1296
tmp$2492.6:
	.quad	.L3204
	.quad	.L3205
	.quad	.L3206
	.quad	.L3207
	.quad	.L3208
	.quad	.L3209
	.quad	.L3210
	.quad	.L3211
	.quad	.L3212
	.quad	.L3213
	.quad	.L3214
	.quad	.L3215
	.quad	.L3216
	.quad	.L3217
	.quad	.L3218
	.quad	.L3219
	.quad	.L3220
	.quad	.L3221
	.quad	.L3222
	.quad	.L3223
	.quad	.L3224
	.quad	.L3225
	.quad	.L3226
	.quad	.L3227
	.quad	.L3228
	.quad	.L3229
	.quad	.L3230
	.quad	.L3231
	.quad	.L3232
	.quad	.L3233
	.quad	.L3234
	.quad	.L3235
	.quad	.L3236
	.quad	.L3237
	.quad	.L3238
	.quad	.L3239
	.quad	.L3240
	.quad	.L3241
	.quad	.L3242
	.quad	.L3243
	.quad	.L3244
	.quad	.L3245
	.quad	.L3246
	.quad	.L3247
	.quad	.L3248
	.quad	.L3249
	.quad	.L3250
	.quad	.L3251
	.quad	.L3252
	.quad	.L3253
	.quad	.L3254
	.quad	.L3255
	.quad	.L3256
	.quad	.L3257
	.quad	.L3258
	.quad	.L3259
	.quad	.L3260
	.quad	.L3261
	.quad	.L3262
	.quad	.L3263
	.quad	.L3264
	.quad	.L3265
	.quad	.L3266
	.quad	.L3267
	.quad	.L3268
	.quad	.L3269
	.quad	.L3270
	.quad	.L3271
	.quad	.L3272
	.quad	.L3273
	.quad	.L3274
	.quad	.L3275
	.quad	.L3276
	.quad	.L3277
	.quad	.L3278
	.quad	.L3279
	.quad	.L3280
	.quad	.L3281
	.quad	.L3282
	.quad	.L3283
	.quad	.L3284
	.quad	.L3285
	.quad	.L3286
	.quad	.L3287
	.quad	.L3288
	.quad	.L3289
	.quad	.L3290
	.quad	.L3291
	.quad	.L3292
	.quad	.L3293
	.quad	.L3294
	.quad	.L3295
	.quad	.L3296
	.quad	.L3297
	.quad	.L3298
	.quad	.L3299
	.quad	.L3300
	.quad	.L3301
	.quad	.L3302
	.quad	.L3303
	.quad	.L3304
	.quad	.L3305
	.quad	.L3306
	.quad	.L3307
	.quad	.L3308
	.quad	.L3309
	.quad	.L3310
	.quad	.L3311
	.quad	.L3312
	.quad	.L3313
	.quad	.L3314
	.quad	.L3315
	.quad	.L3316
	.quad	.L3317
	.quad	.L3318
	.quad	.L3319
	.quad	.L3320
	.quad	.L3321
	.quad	.L3322
	.quad	.L3323
	.quad	.L3324
	.quad	.L3325
	.quad	.L3326
	.quad	.L3327
	.quad	.L3328
	.quad	.L3329
	.quad	.L3330
	.quad	.L3331
	.quad	.L3332
	.quad	.L3333
	.quad	.L3334
	.quad	.L3335
	.quad	.L3336
	.quad	.L3337
	.quad	.L3338
	.quad	.L3339
	.quad	.L3340
	.quad	.L3341
	.quad	.L3342
	.quad	.L3343
	.quad	.L3344
	.quad	.L3345
	.quad	.L3346
	.quad	.L3347
	.quad	.L3348
	.quad	.L3349
	.quad	.L3350
	.quad	.L3351
	.quad	.L3352
	.quad	.L3353
	.quad	.L3354
	.quad	.L3355
	.quad	.L3356
	.quad	.L3357
	.quad	.L3358
	.quad	.L3359
	.quad	.L3360
	.quad	.L3361
	.quad	.L3362
	.quad	.L3363
	.quad	.L3364
	.quad	.L3365
	.align 32
	.type	tmp$2491.7, @object
	.size	tmp$2491.7, 2048
tmp$2491.7:
	.quad	.L2442
	.quad	.L2443
	.quad	.L2444
	.quad	.L2445
	.quad	.L2446
	.quad	.L2447
	.quad	.L2448
	.quad	.L2449
	.quad	.L2450
	.quad	.L2451
	.quad	.L2452
	.quad	.L2453
	.quad	.L2454
	.quad	.L2455
	.quad	.L2456
	.quad	.L2457
	.quad	.L2458
	.quad	.L2459
	.quad	.L2460
	.quad	.L2461
	.quad	.L2462
	.quad	.L2463
	.quad	.L2464
	.quad	.L2465
	.quad	.L2466
	.quad	.L2467
	.quad	.L2468
	.quad	.L2469
	.quad	.L2470
	.quad	.L2471
	.quad	.L2472
	.quad	.L2473
	.quad	.L2474
	.quad	.L2475
	.quad	.L2476
	.quad	.L2477
	.quad	.L2478
	.quad	.L2479
	.quad	.L2480
	.quad	.L2481
	.quad	.L2482
	.quad	.L2483
	.quad	.L2484
	.quad	.L2485
	.quad	.L2486
	.quad	.L2487
	.quad	.L2488
	.quad	.L2489
	.quad	.L2490
	.quad	.L2491
	.quad	.L2492
	.quad	.L2493
	.quad	.L2494
	.quad	.L2495
	.quad	.L2496
	.quad	.L2497
	.quad	.L2498
	.quad	.L2499
	.quad	.L2500
	.quad	.L2501
	.quad	.L2502
	.quad	.L2503
	.quad	.L2504
	.quad	.L2505
	.quad	.L2506
	.quad	.L2507
	.quad	.L2508
	.quad	.L2509
	.quad	.L2510
	.quad	.L2511
	.quad	.L2512
	.quad	.L2513
	.quad	.L2514
	.quad	.L2515
	.quad	.L2516
	.quad	.L2517
	.quad	.L2518
	.quad	.L2519
	.quad	.L2520
	.quad	.L2521
	.quad	.L2522
	.quad	.L2523
	.quad	.L2524
	.quad	.L2525
	.quad	.L2526
	.quad	.L2527
	.quad	.L2528
	.quad	.L2529
	.quad	.L2530
	.quad	.L2531
	.quad	.L2532
	.quad	.L2533
	.quad	.L2534
	.quad	.L2535
	.quad	.L2536
	.quad	.L2537
	.quad	.L2538
	.quad	.L2539
	.quad	.L2540
	.quad	.L2541
	.quad	.L2542
	.quad	.L2543
	.quad	.L2544
	.quad	.L2545
	.quad	.L2546
	.quad	.L2547
	.quad	.L2548
	.quad	.L2549
	.quad	.L2550
	.quad	.L2551
	.quad	.L2552
	.quad	.L2553
	.quad	.L2554
	.quad	.L2555
	.quad	.L2556
	.quad	.L2557
	.quad	.L2558
	.quad	.L2559
	.quad	.L2560
	.quad	.L2561
	.quad	.L2562
	.quad	.L2563
	.quad	.L2564
	.quad	.L2565
	.quad	.L2566
	.quad	.L2567
	.quad	.L2568
	.quad	.L2569
	.quad	.L2570
	.quad	.L2571
	.quad	.L2572
	.quad	.L2573
	.quad	.L2574
	.quad	.L2575
	.quad	.L2576
	.quad	.L2577
	.quad	.L2578
	.quad	.L2579
	.quad	.L2580
	.quad	.L2581
	.quad	.L2582
	.quad	.L2583
	.quad	.L2584
	.quad	.L2585
	.quad	.L2586
	.quad	.L2587
	.quad	.L2588
	.quad	.L2589
	.quad	.L2590
	.quad	.L2591
	.quad	.L2592
	.quad	.L2593
	.quad	.L2594
	.quad	.L2595
	.quad	.L2596
	.quad	.L2597
	.quad	.L2598
	.quad	.L2599
	.quad	.L2600
	.quad	.L2601
	.quad	.L2602
	.quad	.L2603
	.quad	.L2604
	.quad	.L2605
	.quad	.L2606
	.quad	.L2607
	.quad	.L2608
	.quad	.L2609
	.quad	.L2610
	.quad	.L2611
	.quad	.L2612
	.quad	.L2613
	.quad	.L2614
	.quad	.L2615
	.quad	.L2616
	.quad	.L2617
	.quad	.L2618
	.quad	.L2619
	.quad	.L2620
	.quad	.L2621
	.quad	.L2622
	.quad	.L2623
	.quad	.L2624
	.quad	.L2625
	.quad	.L2626
	.quad	.L2627
	.quad	.L2628
	.quad	.L2629
	.quad	.L2630
	.quad	.L2631
	.quad	.L2632
	.quad	.L2633
	.quad	.L2634
	.quad	.L2635
	.quad	.L2636
	.quad	.L2637
	.quad	.L2638
	.quad	.L2639
	.quad	.L2640
	.quad	.L2641
	.quad	.L2642
	.quad	.L2643
	.quad	.L2644
	.quad	.L2645
	.quad	.L2646
	.quad	.L2647
	.quad	.L2648
	.quad	.L2649
	.quad	.L2650
	.quad	.L2651
	.quad	.L2652
	.quad	.L2653
	.quad	.L2654
	.quad	.L2655
	.quad	.L2656
	.quad	.L2657
	.quad	.L2658
	.quad	.L2659
	.quad	.L2660
	.quad	.L2661
	.quad	.L2662
	.quad	.L2663
	.quad	.L2664
	.quad	.L2665
	.quad	.L2666
	.quad	.L2667
	.quad	.L2668
	.quad	.L2669
	.quad	.L2670
	.quad	.L2671
	.quad	.L2672
	.quad	.L2673
	.quad	.L2674
	.quad	.L2675
	.quad	.L2676
	.quad	.L2677
	.quad	.L2678
	.quad	.L2679
	.quad	.L2680
	.quad	.L2681
	.quad	.L2682
	.quad	.L2683
	.quad	.L2684
	.quad	.L2685
	.quad	.L2686
	.quad	.L2687
	.quad	.L2688
	.quad	.L2689
	.quad	.L2690
	.quad	.L2691
	.quad	.L2692
	.quad	.L2693
	.quad	.L2694
	.quad	.L2695
	.quad	.L2696
	.quad	.L2697
	.align 32
	.type	tmp$2490.8, @object
	.size	tmp$2490.8, 2048
tmp$2490.8:
	.quad	.L2182
	.quad	.L2183
	.quad	.L2184
	.quad	.L2185
	.quad	.L2186
	.quad	.L2187
	.quad	.L2188
	.quad	.L2189
	.quad	.L2190
	.quad	.L2191
	.quad	.L2192
	.quad	.L2193
	.quad	.L2194
	.quad	.L2195
	.quad	.L2196
	.quad	.L2197
	.quad	.L2198
	.quad	.L2199
	.quad	.L2200
	.quad	.L2201
	.quad	.L2202
	.quad	.L2203
	.quad	.L2204
	.quad	.L2205
	.quad	.L2206
	.quad	.L2207
	.quad	.L2208
	.quad	.L2209
	.quad	.L2210
	.quad	.L2211
	.quad	.L2212
	.quad	.L2213
	.quad	.L2214
	.quad	.L2215
	.quad	.L2216
	.quad	.L2217
	.quad	.L2218
	.quad	.L2219
	.quad	.L2220
	.quad	.L2221
	.quad	.L2222
	.quad	.L2223
	.quad	.L2224
	.quad	.L2225
	.quad	.L2226
	.quad	.L2227
	.quad	.L2228
	.quad	.L2229
	.quad	.L2230
	.quad	.L2231
	.quad	.L2232
	.quad	.L2233
	.quad	.L2234
	.quad	.L2235
	.quad	.L2236
	.quad	.L2237
	.quad	.L2238
	.quad	.L2239
	.quad	.L2240
	.quad	.L2241
	.quad	.L2242
	.quad	.L2243
	.quad	.L2244
	.quad	.L2245
	.quad	.L2246
	.quad	.L2247
	.quad	.L2248
	.quad	.L2249
	.quad	.L2250
	.quad	.L2251
	.quad	.L2252
	.quad	.L2253
	.quad	.L2254
	.quad	.L2255
	.quad	.L2256
	.quad	.L2257
	.quad	.L2258
	.quad	.L2259
	.quad	.L2260
	.quad	.L2261
	.quad	.L2262
	.quad	.L2263
	.quad	.L2264
	.quad	.L2265
	.quad	.L2266
	.quad	.L2267
	.quad	.L2268
	.quad	.L2269
	.quad	.L2270
	.quad	.L2271
	.quad	.L2272
	.quad	.L2273
	.quad	.L2274
	.quad	.L2275
	.quad	.L2276
	.quad	.L2277
	.quad	.L2278
	.quad	.L2279
	.quad	.L2280
	.quad	.L2281
	.quad	.L2282
	.quad	.L2283
	.quad	.L2284
	.quad	.L2285
	.quad	.L2286
	.quad	.L2287
	.quad	.L2288
	.quad	.L2289
	.quad	.L2290
	.quad	.L2291
	.quad	.L2292
	.quad	.L2293
	.quad	.L2294
	.quad	.L2295
	.quad	.L2296
	.quad	.L2297
	.quad	.L2298
	.quad	.L2299
	.quad	.L2300
	.quad	.L2301
	.quad	.L2302
	.quad	.L2303
	.quad	.L2304
	.quad	.L2305
	.quad	.L2306
	.quad	.L2307
	.quad	.L2308
	.quad	.L2309
	.quad	.L2310
	.quad	.L2311
	.quad	.L2312
	.quad	.L2313
	.quad	.L2314
	.quad	.L2315
	.quad	.L2316
	.quad	.L2317
	.quad	.L2318
	.quad	.L2319
	.quad	.L2320
	.quad	.L2321
	.quad	.L2322
	.quad	.L2323
	.quad	.L2324
	.quad	.L2325
	.quad	.L2326
	.quad	.L2327
	.quad	.L2328
	.quad	.L2329
	.quad	.L2330
	.quad	.L2331
	.quad	.L2332
	.quad	.L2333
	.quad	.L2334
	.quad	.L2335
	.quad	.L2336
	.quad	.L2337
	.quad	.L2338
	.quad	.L2339
	.quad	.L2340
	.quad	.L2341
	.quad	.L2342
	.quad	.L2343
	.quad	.L2344
	.quad	.L2345
	.quad	.L2346
	.quad	.L2347
	.quad	.L2348
	.quad	.L2349
	.quad	.L2350
	.quad	.L2351
	.quad	.L2352
	.quad	.L2353
	.quad	.L2354
	.quad	.L2355
	.quad	.L2356
	.quad	.L2357
	.quad	.L2358
	.quad	.L2359
	.quad	.L2360
	.quad	.L2361
	.quad	.L2362
	.quad	.L2363
	.quad	.L2364
	.quad	.L2365
	.quad	.L2366
	.quad	.L2367
	.quad	.L2368
	.quad	.L2369
	.quad	.L2370
	.quad	.L2371
	.quad	.L2372
	.quad	.L2373
	.quad	.L2374
	.quad	.L2375
	.quad	.L2376
	.quad	.L2377
	.quad	.L2378
	.quad	.L2379
	.quad	.L2380
	.quad	.L2381
	.quad	.L2382
	.quad	.L2383
	.quad	.L2384
	.quad	.L2385
	.quad	.L2386
	.quad	.L2387
	.quad	.L2388
	.quad	.L2389
	.quad	.L2390
	.quad	.L2391
	.quad	.L2392
	.quad	.L2393
	.quad	.L2394
	.quad	.L2395
	.quad	.L2396
	.quad	.L2397
	.quad	.L2398
	.quad	.L2399
	.quad	.L2400
	.quad	.L2401
	.quad	.L2402
	.quad	.L2403
	.quad	.L2404
	.quad	.L2405
	.quad	.L2406
	.quad	.L2407
	.quad	.L2408
	.quad	.L2409
	.quad	.L2410
	.quad	.L2411
	.quad	.L2412
	.quad	.L2413
	.quad	.L2414
	.quad	.L2415
	.quad	.L2416
	.quad	.L2417
	.quad	.L2418
	.quad	.L2419
	.quad	.L2420
	.quad	.L2421
	.quad	.L2422
	.quad	.L2423
	.quad	.L2424
	.quad	.L2425
	.quad	.L2426
	.quad	.L2427
	.quad	.L2428
	.quad	.L2429
	.quad	.L2430
	.quad	.L2431
	.quad	.L2432
	.quad	.L2433
	.quad	.L2434
	.quad	.L2435
	.quad	.L2436
	.quad	.L2437
	.align 32
	.type	tmp$2489.9, @object
	.size	tmp$2489.9, 184
tmp$2489.9:
	.quad	.L2155
	.quad	.L2156
	.quad	.L2157
	.quad	.L2158
	.quad	.L2159
	.quad	.L2160
	.quad	.L2161
	.quad	.L2162
	.quad	.L2163
	.quad	.L2164
	.quad	.L2165
	.quad	.L2166
	.quad	.L2167
	.quad	.L2168
	.quad	.L2169
	.quad	.L2170
	.quad	.L2171
	.quad	.L2172
	.quad	.L2173
	.quad	.L2174
	.quad	.L2175
	.quad	.L2176
	.quad	.L2177
	.align 32
	.type	tmp$2488.10, @object
	.size	tmp$2488.10, 88
tmp$2488.10:
	.quad	.L2130
	.quad	.L2131
	.quad	.L2132
	.quad	.L2133
	.quad	.L2134
	.quad	.L2135
	.quad	.L2136
	.quad	.L2137
	.quad	.L2138
	.quad	.L2139
	.quad	.L2140
	.align 32
	.type	tmp$2487.11, @object
	.size	tmp$2487.11, 2048
tmp$2487.11:
	.quad	.L1870
	.quad	.L1871
	.quad	.L1872
	.quad	.L1873
	.quad	.L1874
	.quad	.L1875
	.quad	.L1876
	.quad	.L1877
	.quad	.L1878
	.quad	.L1879
	.quad	.L1880
	.quad	.L1881
	.quad	.L1882
	.quad	.L1883
	.quad	.L1884
	.quad	.L1885
	.quad	.L1886
	.quad	.L1887
	.quad	.L1888
	.quad	.L1889
	.quad	.L1890
	.quad	.L1891
	.quad	.L1892
	.quad	.L1893
	.quad	.L1894
	.quad	.L1895
	.quad	.L1896
	.quad	.L1897
	.quad	.L1898
	.quad	.L1899
	.quad	.L1900
	.quad	.L1901
	.quad	.L1902
	.quad	.L1903
	.quad	.L1904
	.quad	.L1905
	.quad	.L1906
	.quad	.L1907
	.quad	.L1908
	.quad	.L1909
	.quad	.L1910
	.quad	.L1911
	.quad	.L1912
	.quad	.L1913
	.quad	.L1914
	.quad	.L1915
	.quad	.L1916
	.quad	.L1917
	.quad	.L1918
	.quad	.L1919
	.quad	.L1920
	.quad	.L1921
	.quad	.L1922
	.quad	.L1923
	.quad	.L1924
	.quad	.L1925
	.quad	.L1926
	.quad	.L1927
	.quad	.L1928
	.quad	.L1929
	.quad	.L1930
	.quad	.L1931
	.quad	.L1932
	.quad	.L1933
	.quad	.L1934
	.quad	.L1935
	.quad	.L1936
	.quad	.L1937
	.quad	.L1938
	.quad	.L1939
	.quad	.L1940
	.quad	.L1941
	.quad	.L1942
	.quad	.L1943
	.quad	.L1944
	.quad	.L1945
	.quad	.L1946
	.quad	.L1947
	.quad	.L1948
	.quad	.L1949
	.quad	.L1950
	.quad	.L1951
	.quad	.L1952
	.quad	.L1953
	.quad	.L1954
	.quad	.L1955
	.quad	.L1956
	.quad	.L1957
	.quad	.L1958
	.quad	.L1959
	.quad	.L1960
	.quad	.L1961
	.quad	.L1962
	.quad	.L1963
	.quad	.L1964
	.quad	.L1965
	.quad	.L1966
	.quad	.L1967
	.quad	.L1968
	.quad	.L1969
	.quad	.L1970
	.quad	.L1971
	.quad	.L1972
	.quad	.L1973
	.quad	.L1974
	.quad	.L1975
	.quad	.L1976
	.quad	.L1977
	.quad	.L1978
	.quad	.L1979
	.quad	.L1980
	.quad	.L1981
	.quad	.L1982
	.quad	.L1983
	.quad	.L1984
	.quad	.L1985
	.quad	.L1986
	.quad	.L1987
	.quad	.L1988
	.quad	.L1989
	.quad	.L1990
	.quad	.L1991
	.quad	.L1992
	.quad	.L1993
	.quad	.L1994
	.quad	.L1995
	.quad	.L1996
	.quad	.L1997
	.quad	.L1998
	.quad	.L1999
	.quad	.L2000
	.quad	.L2001
	.quad	.L2002
	.quad	.L2003
	.quad	.L2004
	.quad	.L2005
	.quad	.L2006
	.quad	.L2007
	.quad	.L2008
	.quad	.L2009
	.quad	.L2010
	.quad	.L2011
	.quad	.L2012
	.quad	.L2013
	.quad	.L2014
	.quad	.L2015
	.quad	.L2016
	.quad	.L2017
	.quad	.L2018
	.quad	.L2019
	.quad	.L2020
	.quad	.L2021
	.quad	.L2022
	.quad	.L2023
	.quad	.L2024
	.quad	.L2025
	.quad	.L2026
	.quad	.L2027
	.quad	.L2028
	.quad	.L2029
	.quad	.L2030
	.quad	.L2031
	.quad	.L2032
	.quad	.L2033
	.quad	.L2034
	.quad	.L2035
	.quad	.L2036
	.quad	.L2037
	.quad	.L2038
	.quad	.L2039
	.quad	.L2040
	.quad	.L2041
	.quad	.L2042
	.quad	.L2043
	.quad	.L2044
	.quad	.L2045
	.quad	.L2046
	.quad	.L2047
	.quad	.L2048
	.quad	.L2049
	.quad	.L2050
	.quad	.L2051
	.quad	.L2052
	.quad	.L2053
	.quad	.L2054
	.quad	.L2055
	.quad	.L2056
	.quad	.L2057
	.quad	.L2058
	.quad	.L2059
	.quad	.L2060
	.quad	.L2061
	.quad	.L2062
	.quad	.L2063
	.quad	.L2064
	.quad	.L2065
	.quad	.L2066
	.quad	.L2067
	.quad	.L2068
	.quad	.L2069
	.quad	.L2070
	.quad	.L2071
	.quad	.L2072
	.quad	.L2073
	.quad	.L2074
	.quad	.L2075
	.quad	.L2076
	.quad	.L2077
	.quad	.L2078
	.quad	.L2079
	.quad	.L2080
	.quad	.L2081
	.quad	.L2082
	.quad	.L2083
	.quad	.L2084
	.quad	.L2085
	.quad	.L2086
	.quad	.L2087
	.quad	.L2088
	.quad	.L2089
	.quad	.L2090
	.quad	.L2091
	.quad	.L2092
	.quad	.L2093
	.quad	.L2094
	.quad	.L2095
	.quad	.L2096
	.quad	.L2097
	.quad	.L2098
	.quad	.L2099
	.quad	.L2100
	.quad	.L2101
	.quad	.L2102
	.quad	.L2103
	.quad	.L2104
	.quad	.L2105
	.quad	.L2106
	.quad	.L2107
	.quad	.L2108
	.quad	.L2109
	.quad	.L2110
	.quad	.L2111
	.quad	.L2112
	.quad	.L2113
	.quad	.L2114
	.quad	.L2115
	.quad	.L2116
	.quad	.L2117
	.quad	.L2118
	.quad	.L2119
	.quad	.L2120
	.quad	.L2121
	.quad	.L2122
	.quad	.L2123
	.quad	.L2124
	.quad	.L2125
	.align 32
	.type	tmp$2486.12, @object
	.size	tmp$2486.12, 2048
tmp$2486.12:
	.quad	.L1609
	.quad	.L1610
	.quad	.L1611
	.quad	.L1612
	.quad	.L1613
	.quad	.L1614
	.quad	.L1615
	.quad	.L1616
	.quad	.L1617
	.quad	.L1618
	.quad	.L1619
	.quad	.L1620
	.quad	.L1621
	.quad	.L1622
	.quad	.L1623
	.quad	.L1624
	.quad	.L1625
	.quad	.L1626
	.quad	.L1627
	.quad	.L1628
	.quad	.L1629
	.quad	.L1630
	.quad	.L1631
	.quad	.L1632
	.quad	.L1633
	.quad	.L1634
	.quad	.L1635
	.quad	.L1636
	.quad	.L1637
	.quad	.L1638
	.quad	.L1639
	.quad	.L1640
	.quad	.L1641
	.quad	.L1642
	.quad	.L1643
	.quad	.L1644
	.quad	.L1645
	.quad	.L1646
	.quad	.L1647
	.quad	.L1648
	.quad	.L1649
	.quad	.L1650
	.quad	.L1651
	.quad	.L1652
	.quad	.L1653
	.quad	.L1654
	.quad	.L1655
	.quad	.L1656
	.quad	.L1657
	.quad	.L1658
	.quad	.L1659
	.quad	.L1660
	.quad	.L1661
	.quad	.L1662
	.quad	.L1663
	.quad	.L1664
	.quad	.L1665
	.quad	.L1666
	.quad	.L1667
	.quad	.L1668
	.quad	.L1669
	.quad	.L1670
	.quad	.L1671
	.quad	.L1672
	.quad	.L1673
	.quad	.L1674
	.quad	.L1675
	.quad	.L1676
	.quad	.L1677
	.quad	.L1678
	.quad	.L1679
	.quad	.L1680
	.quad	.L1681
	.quad	.L1682
	.quad	.L1683
	.quad	.L1684
	.quad	.L1685
	.quad	.L1686
	.quad	.L1687
	.quad	.L1688
	.quad	.L1689
	.quad	.L1690
	.quad	.L1691
	.quad	.L1692
	.quad	.L1693
	.quad	.L1694
	.quad	.L1695
	.quad	.L1696
	.quad	.L1697
	.quad	.L1698
	.quad	.L1699
	.quad	.L1700
	.quad	.L1701
	.quad	.L1702
	.quad	.L1703
	.quad	.L1704
	.quad	.L1705
	.quad	.L1706
	.quad	.L1707
	.quad	.L1708
	.quad	.L1709
	.quad	.L1710
	.quad	.L1711
	.quad	.L1712
	.quad	.L1713
	.quad	.L1714
	.quad	.L1715
	.quad	.L1716
	.quad	.L1717
	.quad	.L1718
	.quad	.L1719
	.quad	.L1720
	.quad	.L1721
	.quad	.L1722
	.quad	.L1723
	.quad	.L1724
	.quad	.L1725
	.quad	.L1726
	.quad	.L1727
	.quad	.L1728
	.quad	.L1729
	.quad	.L1730
	.quad	.L1731
	.quad	.L1732
	.quad	.L1733
	.quad	.L1734
	.quad	.L1735
	.quad	.L1736
	.quad	.L1737
	.quad	.L1738
	.quad	.L1739
	.quad	.L1740
	.quad	.L1741
	.quad	.L1742
	.quad	.L1743
	.quad	.L1744
	.quad	.L1745
	.quad	.L1746
	.quad	.L1747
	.quad	.L1748
	.quad	.L1749
	.quad	.L1750
	.quad	.L1751
	.quad	.L1752
	.quad	.L1753
	.quad	.L1754
	.quad	.L1755
	.quad	.L1756
	.quad	.L1757
	.quad	.L1758
	.quad	.L1759
	.quad	.L1760
	.quad	.L1761
	.quad	.L1762
	.quad	.L1763
	.quad	.L1764
	.quad	.L1765
	.quad	.L1766
	.quad	.L1767
	.quad	.L1768
	.quad	.L1769
	.quad	.L1770
	.quad	.L1771
	.quad	.L1772
	.quad	.L1773
	.quad	.L1774
	.quad	.L1775
	.quad	.L1776
	.quad	.L1777
	.quad	.L1778
	.quad	.L1779
	.quad	.L1780
	.quad	.L1781
	.quad	.L1782
	.quad	.L1783
	.quad	.L1784
	.quad	.L1785
	.quad	.L1786
	.quad	.L1787
	.quad	.L1788
	.quad	.L1789
	.quad	.L1790
	.quad	.L1791
	.quad	.L1792
	.quad	.L1793
	.quad	.L1794
	.quad	.L1795
	.quad	.L1796
	.quad	.L1797
	.quad	.L1798
	.quad	.L1799
	.quad	.L1800
	.quad	.L1801
	.quad	.L1802
	.quad	.L1803
	.quad	.L1804
	.quad	.L1805
	.quad	.L1806
	.quad	.L1807
	.quad	.L1808
	.quad	.L1809
	.quad	.L1810
	.quad	.L1811
	.quad	.L1812
	.quad	.L1813
	.quad	.L1814
	.quad	.L1815
	.quad	.L1816
	.quad	.L1817
	.quad	.L1818
	.quad	.L1819
	.quad	.L1820
	.quad	.L1821
	.quad	.L1822
	.quad	.L1823
	.quad	.L1824
	.quad	.L1825
	.quad	.L1826
	.quad	.L1827
	.quad	.L1828
	.quad	.L1829
	.quad	.L1830
	.quad	.L1831
	.quad	.L1832
	.quad	.L1833
	.quad	.L1834
	.quad	.L1835
	.quad	.L1836
	.quad	.L1837
	.quad	.L1838
	.quad	.L1839
	.quad	.L1840
	.quad	.L1841
	.quad	.L1842
	.quad	.L1843
	.quad	.L1844
	.quad	.L1845
	.quad	.L1846
	.quad	.L1847
	.quad	.L1848
	.quad	.L1849
	.quad	.L1850
	.quad	.L1851
	.quad	.L1852
	.quad	.L1853
	.quad	.L1854
	.quad	.L1855
	.quad	.L1856
	.quad	.L1857
	.quad	.L1858
	.quad	.L1859
	.quad	.L1860
	.quad	.L1861
	.quad	.L1862
	.quad	.L1863
	.quad	.L1864
	.align 32
	.type	tmp$2485.13, @object
	.size	tmp$2485.13, 2048
tmp$2485.13:
	.quad	.L1218
	.quad	.L1219
	.quad	.L1220
	.quad	.L1221
	.quad	.L1222
	.quad	.L1223
	.quad	.L1224
	.quad	.L1225
	.quad	.L1226
	.quad	.L1227
	.quad	.L1228
	.quad	.L1229
	.quad	.L1230
	.quad	.L1231
	.quad	.L1232
	.quad	.L1233
	.quad	.L1234
	.quad	.L1235
	.quad	.L1236
	.quad	.L1237
	.quad	.L1238
	.quad	.L1239
	.quad	.L1240
	.quad	.L1241
	.quad	.L1242
	.quad	.L1243
	.quad	.L1244
	.quad	.L1245
	.quad	.L1246
	.quad	.L1247
	.quad	.L1248
	.quad	.L1249
	.quad	.L1250
	.quad	.L1251
	.quad	.L1252
	.quad	.L1253
	.quad	.L1254
	.quad	.L1255
	.quad	.L1256
	.quad	.L1257
	.quad	.L1258
	.quad	.L1259
	.quad	.L1260
	.quad	.L1261
	.quad	.L1262
	.quad	.L1263
	.quad	.L1264
	.quad	.L1265
	.quad	.L1266
	.quad	.L1267
	.quad	.L1268
	.quad	.L1269
	.quad	.L1270
	.quad	.L1271
	.quad	.L1272
	.quad	.L1273
	.quad	.L1274
	.quad	.L1275
	.quad	.L1276
	.quad	.L1277
	.quad	.L1278
	.quad	.L1279
	.quad	.L1280
	.quad	.L1281
	.quad	.L1282
	.quad	.L1283
	.quad	.L1284
	.quad	.L1285
	.quad	.L1286
	.quad	.L1287
	.quad	.L1288
	.quad	.L1289
	.quad	.L1290
	.quad	.L1291
	.quad	.L1292
	.quad	.L1293
	.quad	.L1294
	.quad	.L1295
	.quad	.L1296
	.quad	.L1297
	.quad	.L1298
	.quad	.L1299
	.quad	.L1300
	.quad	.L1301
	.quad	.L1302
	.quad	.L1303
	.quad	.L1304
	.quad	.L1305
	.quad	.L1306
	.quad	.L1307
	.quad	.L1308
	.quad	.L1309
	.quad	.L1310
	.quad	.L1311
	.quad	.L1312
	.quad	.L1313
	.quad	.L1314
	.quad	.L1315
	.quad	.L1316
	.quad	.L1317
	.quad	.L1318
	.quad	.L1319
	.quad	.L1320
	.quad	.L1321
	.quad	.L1322
	.quad	.L1323
	.quad	.L1324
	.quad	.L1325
	.quad	.L1326
	.quad	.L1327
	.quad	.L1328
	.quad	.L1329
	.quad	.L1330
	.quad	.L1331
	.quad	.L1332
	.quad	.L1333
	.quad	.L1334
	.quad	.L1335
	.quad	.L1336
	.quad	.L1337
	.quad	.L1338
	.quad	.L1339
	.quad	.L1340
	.quad	.L1341
	.quad	.L1342
	.quad	.L1343
	.quad	.L1344
	.quad	.L1345
	.quad	.L1346
	.quad	.L1347
	.quad	.L1348
	.quad	.L1349
	.quad	.L1350
	.quad	.L1351
	.quad	.L1352
	.quad	.L1353
	.quad	.L1354
	.quad	.L1355
	.quad	.L1356
	.quad	.L1357
	.quad	.L1358
	.quad	.L1359
	.quad	.L1360
	.quad	.L1361
	.quad	.L1362
	.quad	.L1363
	.quad	.L1364
	.quad	.L1365
	.quad	.L1366
	.quad	.L1367
	.quad	.L1368
	.quad	.L1369
	.quad	.L1370
	.quad	.L1371
	.quad	.L1372
	.quad	.L1373
	.quad	.L1374
	.quad	.L1375
	.quad	.L1376
	.quad	.L1377
	.quad	.L1378
	.quad	.L1379
	.quad	.L1380
	.quad	.L1381
	.quad	.L1382
	.quad	.L1383
	.quad	.L1384
	.quad	.L1385
	.quad	.L1386
	.quad	.L1387
	.quad	.L1388
	.quad	.L1389
	.quad	.L1390
	.quad	.L1391
	.quad	.L1392
	.quad	.L1393
	.quad	.L1394
	.quad	.L1395
	.quad	.L1396
	.quad	.L1397
	.quad	.L1398
	.quad	.L1399
	.quad	.L1400
	.quad	.L1401
	.quad	.L1402
	.quad	.L1403
	.quad	.L1404
	.quad	.L1405
	.quad	.L1406
	.quad	.L1407
	.quad	.L1408
	.quad	.L1409
	.quad	.L1410
	.quad	.L1411
	.quad	.L1412
	.quad	.L1413
	.quad	.L1414
	.quad	.L1415
	.quad	.L1416
	.quad	.L1417
	.quad	.L1418
	.quad	.L1419
	.quad	.L1420
	.quad	.L1421
	.quad	.L1422
	.quad	.L1423
	.quad	.L1424
	.quad	.L1425
	.quad	.L1426
	.quad	.L1427
	.quad	.L1428
	.quad	.L1429
	.quad	.L1430
	.quad	.L1431
	.quad	.L1432
	.quad	.L1433
	.quad	.L1434
	.quad	.L1435
	.quad	.L1436
	.quad	.L1437
	.quad	.L1438
	.quad	.L1439
	.quad	.L1440
	.quad	.L1441
	.quad	.L1442
	.quad	.L1443
	.quad	.L1444
	.quad	.L1445
	.quad	.L1446
	.quad	.L1447
	.quad	.L1448
	.quad	.L1449
	.quad	.L1450
	.quad	.L1451
	.quad	.L1452
	.quad	.L1453
	.quad	.L1454
	.quad	.L1455
	.quad	.L1456
	.quad	.L1457
	.quad	.L1458
	.quad	.L1459
	.quad	.L1460
	.quad	.L1461
	.quad	.L1462
	.quad	.L1463
	.quad	.L1464
	.quad	.L1465
	.quad	.L1466
	.quad	.L1467
	.quad	.L1468
	.quad	.L1469
	.quad	.L1470
	.quad	.L1471
	.quad	.L1472
	.quad	.L1473
	.align 32
	.type	tmp$2484.14, @object
	.size	tmp$2484.14, 2048
tmp$2484.14:
	.quad	.L958
	.quad	.L959
	.quad	.L960
	.quad	.L961
	.quad	.L962
	.quad	.L963
	.quad	.L964
	.quad	.L965
	.quad	.L966
	.quad	.L967
	.quad	.L968
	.quad	.L969
	.quad	.L970
	.quad	.L971
	.quad	.L972
	.quad	.L973
	.quad	.L974
	.quad	.L975
	.quad	.L976
	.quad	.L977
	.quad	.L978
	.quad	.L979
	.quad	.L980
	.quad	.L981
	.quad	.L982
	.quad	.L983
	.quad	.L984
	.quad	.L985
	.quad	.L986
	.quad	.L987
	.quad	.L988
	.quad	.L989
	.quad	.L990
	.quad	.L991
	.quad	.L992
	.quad	.L993
	.quad	.L994
	.quad	.L995
	.quad	.L996
	.quad	.L997
	.quad	.L998
	.quad	.L999
	.quad	.L1000
	.quad	.L1001
	.quad	.L1002
	.quad	.L1003
	.quad	.L1004
	.quad	.L1005
	.quad	.L1006
	.quad	.L1007
	.quad	.L1008
	.quad	.L1009
	.quad	.L1010
	.quad	.L1011
	.quad	.L1012
	.quad	.L1013
	.quad	.L1014
	.quad	.L1015
	.quad	.L1016
	.quad	.L1017
	.quad	.L1018
	.quad	.L1019
	.quad	.L1020
	.quad	.L1021
	.quad	.L1022
	.quad	.L1023
	.quad	.L1024
	.quad	.L1025
	.quad	.L1026
	.quad	.L1027
	.quad	.L1028
	.quad	.L1029
	.quad	.L1030
	.quad	.L1031
	.quad	.L1032
	.quad	.L1033
	.quad	.L1034
	.quad	.L1035
	.quad	.L1036
	.quad	.L1037
	.quad	.L1038
	.quad	.L1039
	.quad	.L1040
	.quad	.L1041
	.quad	.L1042
	.quad	.L1043
	.quad	.L1044
	.quad	.L1045
	.quad	.L1046
	.quad	.L1047
	.quad	.L1048
	.quad	.L1049
	.quad	.L1050
	.quad	.L1051
	.quad	.L1052
	.quad	.L1053
	.quad	.L1054
	.quad	.L1055
	.quad	.L1056
	.quad	.L1057
	.quad	.L1058
	.quad	.L1059
	.quad	.L1060
	.quad	.L1061
	.quad	.L1062
	.quad	.L1063
	.quad	.L1064
	.quad	.L1065
	.quad	.L1066
	.quad	.L1067
	.quad	.L1068
	.quad	.L1069
	.quad	.L1070
	.quad	.L1071
	.quad	.L1072
	.quad	.L1073
	.quad	.L1074
	.quad	.L1075
	.quad	.L1076
	.quad	.L1077
	.quad	.L1078
	.quad	.L1079
	.quad	.L1080
	.quad	.L1081
	.quad	.L1082
	.quad	.L1083
	.quad	.L1084
	.quad	.L1085
	.quad	.L1086
	.quad	.L1087
	.quad	.L1088
	.quad	.L1089
	.quad	.L1090
	.quad	.L1091
	.quad	.L1092
	.quad	.L1093
	.quad	.L1094
	.quad	.L1095
	.quad	.L1096
	.quad	.L1097
	.quad	.L1098
	.quad	.L1099
	.quad	.L1100
	.quad	.L1101
	.quad	.L1102
	.quad	.L1103
	.quad	.L1104
	.quad	.L1105
	.quad	.L1106
	.quad	.L1107
	.quad	.L1108
	.quad	.L1109
	.quad	.L1110
	.quad	.L1111
	.quad	.L1112
	.quad	.L1113
	.quad	.L1114
	.quad	.L1115
	.quad	.L1116
	.quad	.L1117
	.quad	.L1118
	.quad	.L1119
	.quad	.L1120
	.quad	.L1121
	.quad	.L1122
	.quad	.L1123
	.quad	.L1124
	.quad	.L1125
	.quad	.L1126
	.quad	.L1127
	.quad	.L1128
	.quad	.L1129
	.quad	.L1130
	.quad	.L1131
	.quad	.L1132
	.quad	.L1133
	.quad	.L1134
	.quad	.L1135
	.quad	.L1136
	.quad	.L1137
	.quad	.L1138
	.quad	.L1139
	.quad	.L1140
	.quad	.L1141
	.quad	.L1142
	.quad	.L1143
	.quad	.L1144
	.quad	.L1145
	.quad	.L1146
	.quad	.L1147
	.quad	.L1148
	.quad	.L1149
	.quad	.L1150
	.quad	.L1151
	.quad	.L1152
	.quad	.L1153
	.quad	.L1154
	.quad	.L1155
	.quad	.L1156
	.quad	.L1157
	.quad	.L1158
	.quad	.L1159
	.quad	.L1160
	.quad	.L1161
	.quad	.L1162
	.quad	.L1163
	.quad	.L1164
	.quad	.L1165
	.quad	.L1166
	.quad	.L1167
	.quad	.L1168
	.quad	.L1169
	.quad	.L1170
	.quad	.L1171
	.quad	.L1172
	.quad	.L1173
	.quad	.L1174
	.quad	.L1175
	.quad	.L1176
	.quad	.L1177
	.quad	.L1178
	.quad	.L1179
	.quad	.L1180
	.quad	.L1181
	.quad	.L1182
	.quad	.L1183
	.quad	.L1184
	.quad	.L1185
	.quad	.L1186
	.quad	.L1187
	.quad	.L1188
	.quad	.L1189
	.quad	.L1190
	.quad	.L1191
	.quad	.L1192
	.quad	.L1193
	.quad	.L1194
	.quad	.L1195
	.quad	.L1196
	.quad	.L1197
	.quad	.L1198
	.quad	.L1199
	.quad	.L1200
	.quad	.L1201
	.quad	.L1202
	.quad	.L1203
	.quad	.L1204
	.quad	.L1205
	.quad	.L1206
	.quad	.L1207
	.quad	.L1208
	.quad	.L1209
	.quad	.L1210
	.quad	.L1211
	.quad	.L1212
	.quad	.L1213
	.align 32
	.type	tmp$2483.15, @object
	.size	tmp$2483.15, 1928
tmp$2483.15:
	.quad	.L926
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L927
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L928
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L929
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L930
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L931
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L932
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L933
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L934
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L935
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L936
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L937
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L938
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L939
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L940
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L924
	.quad	.L941
	.align 32
	.type	tmp$2482.16, @object
	.size	tmp$2482.16, 2048
tmp$2482.16:
	.quad	.L662
	.quad	.L664
	.quad	.L665
	.quad	.L666
	.quad	.L667
	.quad	.L668
	.quad	.L669
	.quad	.L670
	.quad	.L671
	.quad	.L672
	.quad	.L673
	.quad	.L674
	.quad	.L675
	.quad	.L676
	.quad	.L677
	.quad	.L678
	.quad	.L679
	.quad	.L680
	.quad	.L681
	.quad	.L682
	.quad	.L683
	.quad	.L684
	.quad	.L685
	.quad	.L686
	.quad	.L687
	.quad	.L688
	.quad	.L689
	.quad	.L690
	.quad	.L691
	.quad	.L692
	.quad	.L693
	.quad	.L694
	.quad	.L695
	.quad	.L696
	.quad	.L697
	.quad	.L698
	.quad	.L699
	.quad	.L700
	.quad	.L701
	.quad	.L702
	.quad	.L703
	.quad	.L704
	.quad	.L705
	.quad	.L706
	.quad	.L707
	.quad	.L708
	.quad	.L709
	.quad	.L710
	.quad	.L711
	.quad	.L712
	.quad	.L713
	.quad	.L714
	.quad	.L715
	.quad	.L716
	.quad	.L717
	.quad	.L718
	.quad	.L719
	.quad	.L720
	.quad	.L721
	.quad	.L722
	.quad	.L723
	.quad	.L724
	.quad	.L725
	.quad	.L726
	.quad	.L727
	.quad	.L728
	.quad	.L729
	.quad	.L730
	.quad	.L731
	.quad	.L732
	.quad	.L733
	.quad	.L734
	.quad	.L735
	.quad	.L736
	.quad	.L737
	.quad	.L738
	.quad	.L739
	.quad	.L740
	.quad	.L741
	.quad	.L742
	.quad	.L743
	.quad	.L744
	.quad	.L745
	.quad	.L746
	.quad	.L747
	.quad	.L748
	.quad	.L749
	.quad	.L750
	.quad	.L751
	.quad	.L752
	.quad	.L753
	.quad	.L754
	.quad	.L755
	.quad	.L756
	.quad	.L757
	.quad	.L758
	.quad	.L759
	.quad	.L760
	.quad	.L761
	.quad	.L762
	.quad	.L763
	.quad	.L764
	.quad	.L765
	.quad	.L766
	.quad	.L767
	.quad	.L768
	.quad	.L769
	.quad	.L770
	.quad	.L771
	.quad	.L772
	.quad	.L773
	.quad	.L774
	.quad	.L775
	.quad	.L776
	.quad	.L777
	.quad	.L778
	.quad	.L779
	.quad	.L780
	.quad	.L781
	.quad	.L782
	.quad	.L783
	.quad	.L784
	.quad	.L785
	.quad	.L786
	.quad	.L787
	.quad	.L788
	.quad	.L789
	.quad	.L790
	.quad	.L791
	.quad	.L792
	.quad	.L793
	.quad	.L794
	.quad	.L795
	.quad	.L796
	.quad	.L797
	.quad	.L798
	.quad	.L799
	.quad	.L800
	.quad	.L801
	.quad	.L802
	.quad	.L803
	.quad	.L804
	.quad	.L805
	.quad	.L806
	.quad	.L807
	.quad	.L808
	.quad	.L809
	.quad	.L810
	.quad	.L811
	.quad	.L812
	.quad	.L813
	.quad	.L814
	.quad	.L815
	.quad	.L816
	.quad	.L817
	.quad	.L818
	.quad	.L819
	.quad	.L820
	.quad	.L821
	.quad	.L822
	.quad	.L823
	.quad	.L824
	.quad	.L825
	.quad	.L826
	.quad	.L827
	.quad	.L828
	.quad	.L829
	.quad	.L830
	.quad	.L831
	.quad	.L832
	.quad	.L833
	.quad	.L834
	.quad	.L835
	.quad	.L836
	.quad	.L837
	.quad	.L838
	.quad	.L839
	.quad	.L840
	.quad	.L841
	.quad	.L842
	.quad	.L843
	.quad	.L844
	.quad	.L845
	.quad	.L846
	.quad	.L847
	.quad	.L848
	.quad	.L849
	.quad	.L850
	.quad	.L851
	.quad	.L852
	.quad	.L853
	.quad	.L854
	.quad	.L855
	.quad	.L856
	.quad	.L857
	.quad	.L858
	.quad	.L859
	.quad	.L860
	.quad	.L861
	.quad	.L862
	.quad	.L863
	.quad	.L864
	.quad	.L865
	.quad	.L866
	.quad	.L867
	.quad	.L868
	.quad	.L869
	.quad	.L870
	.quad	.L871
	.quad	.L872
	.quad	.L873
	.quad	.L874
	.quad	.L875
	.quad	.L876
	.quad	.L877
	.quad	.L878
	.quad	.L879
	.quad	.L880
	.quad	.L881
	.quad	.L882
	.quad	.L883
	.quad	.L884
	.quad	.L885
	.quad	.L886
	.quad	.L887
	.quad	.L888
	.quad	.L889
	.quad	.L890
	.quad	.L891
	.quad	.L892
	.quad	.L893
	.quad	.L894
	.quad	.L895
	.quad	.L896
	.quad	.L897
	.quad	.L898
	.quad	.L899
	.quad	.L900
	.quad	.L901
	.quad	.L902
	.quad	.L903
	.quad	.L904
	.quad	.L905
	.quad	.L906
	.quad	.L907
	.quad	.L908
	.quad	.L909
	.quad	.L910
	.quad	.L911
	.quad	.L912
	.quad	.L913
	.quad	.L914
	.quad	.L915
	.quad	.L916
	.quad	.L917
	.quad	.L918
	.section	.fbctinf,"a"
	.align 32
	.type	__fbctinf, @object
	.size	__fbctinf, 92
__fbctinf:
	.string	"-l"
	.string	"fbgfx"
	.string	"-l"
	.string	"X11"
	.string	"-l"
	.string	"Xext"
	.string	"-l"
	.string	"Xpm"
	.string	"-l"
	.string	"Xrandr"
	.string	"-l"
	.string	"Xrender"
	.string	"-l"
	.string	"pthread"
	.string	"-l"
	.string	"GL"
	.string	"-p"
	.string	"/usr/X11R6/lib"
	.string	"-gfx"
	.comm	MSG$,24,16
	.comm	RENDER$,8,8
	.comm	SCR_POS$,8,8
	.comm	SCR_H$,8,8
	.comm	SCR_W$,8,8
	.comm	COMPILER$,24,16
	.comm	RASTER$,8,8
	.comm	FGIMAGE$,8,8
	.comm	BGIMAGE$,8,8
	.comm	CNT$,8,8
	.comm	STR_LEN$,8,8
	.comm	SYS_OFFSET$,8,8
	.globl	FILENAME$
	.bss
	.align 16
	.type	FILENAME$, @object
	.size	FILENAME$, 24
FILENAME$:
	.zero	24
	.globl	STRCODE$
	.align 16
	.type	STRCODE$, @object
	.size	STRCODE$, 24
STRCODE$:
	.zero	24
	.globl	IMAGE$
	.align 8
	.type	IMAGE$, @object
	.size	IMAGE$, 8
IMAGE$:
	.zero	8
	.globl	OFFSET$
	.align 8
	.type	OFFSET$, @object
	.size	OFFSET$, 8
OFFSET$:
	.zero	8
	.globl	SWCH$
	.align 8
	.type	SWCH$, @object
	.size	SWCH$, 8
SWCH$:
	.zero	8
	.section	.rodata.str1.1
.LC2158:
	.string	"BRK"
	.section	.data.rel.local,"aw"
	.align 32
	.type	label$4039, @object
	.size	label$4039, 70
label$4039:
	.value	1
	.quad	.LC179
	.value	3
	.quad	.LC2158
	.value	1
	.quad	.LC180
	.value	1
	.quad	.LC186
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_BRK
	.value	-1
	.quad	label$4426
	.section	.rodata.str1.1
.LC2159:
	.string	"ORA"
.LC2160:
	.string	"10"
	.section	.data.rel.local
	.align 32
	.type	label$4426, @object
	.size	label$4426, 70
label$4426:
	.value	1
	.quad	.LC180
	.value	3
	.quad	.LC2159
	.value	2
	.quad	.LC2160
	.value	1
	.quad	.LC185
	.value	1
	.quad	.LC181
	.value	-2
	.quad	INS_ORA
	.value	-1
	.quad	label$4428
	.section	.rodata.str1.1
.LC2161:
	.string	"R32"
	.section	.data.rel.local
	.align 32
	.type	label$4428, @object
	.size	label$4428, 70
label$4428:
	.value	1
	.quad	.LC181
	.value	3
	.quad	.LC2161
	.value	1
	.quad	.LC182
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_R32
	.value	-1
	.quad	label$4430
	.section	.rodata.str1.1
.LC2162:
	.string	"W32"
	.section	.data.rel.local
	.align 32
	.type	label$4430, @object
	.size	label$4430, 70
label$4430:
	.value	1
	.quad	.LC182
	.value	3
	.quad	.LC2162
	.value	1
	.quad	.LC182
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_W32
	.value	-1
	.quad	label$4432
	.section	.rodata.str1.1
.LC2163:
	.string	"R64"
	.section	.data.rel.local
	.align 32
	.type	label$4432, @object
	.size	label$4432, 70
label$4432:
	.value	1
	.quad	.LC183
	.value	3
	.quad	.LC2163
	.value	1
	.quad	.LC182
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_R64
	.value	-1
	.quad	label$4434
	.align 32
	.type	label$4434, @object
	.size	label$4434, 70
label$4434:
	.value	1
	.quad	.LC184
	.value	3
	.quad	.LC2159
	.value	1
	.quad	.LC183
	.value	1
	.quad	.LC182
	.value	1
	.quad	.LC181
	.value	-2
	.quad	INS_ORA
	.value	-1
	.quad	label$4436
	.section	.rodata.str1.1
.LC2164:
	.string	"ASL"
	.section	.data.rel.local
	.align 32
	.type	label$4436, @object
	.size	label$4436, 70
label$4436:
	.value	1
	.quad	.LC185
	.value	3
	.quad	.LC2164
	.value	1
	.quad	.LC183
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_ASL
	.value	-1
	.quad	label$4438
	.section	.rodata.str1.1
.LC2165:
	.string	"W64"
	.section	.data.rel.local
	.align 32
	.type	label$4438, @object
	.size	label$4438, 70
label$4438:
	.value	1
	.quad	.LC186
	.value	3
	.quad	.LC2165
	.value	1
	.quad	.LC182
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_W64
	.value	-1
	.quad	label$4440
	.section	.rodata.str1.1
.LC2166:
	.string	"PHP"
	.section	.data.rel.local
	.align 32
	.type	label$4440, @object
	.size	label$4440, 70
label$4440:
	.value	1
	.quad	.LC187
	.value	3
	.quad	.LC2166
	.value	1
	.quad	.LC180
	.value	1
	.quad	.LC182
	.value	1
	.quad	.LC180
	.value	-2
	.quad	INS_PHP
	.value	-1
	.quad	label$4442
	.align 32
	.type	label$4442, @object
	.size	label$4442, 70
label$4442:
	.value	1
	.quad	.LC188
	.value	3
	.quad	.LC2159
	.value	1
	.quad	.LC181
	.value	1
	.quad	.LC181
	.value	1
	.quad	.LC181
	.value	-2
	.quad	INS_ORA
	.value	-1
	.quad	label$4444
	.align 32
	.type	label$4444, @object
	.size	label$4444, 70
label$4444:
	.value	2
	.quad	.LC2160
	.value	3
	.quad	.LC2164
	.value	1
	.quad	.LC180
	.value	1
	.quad	.LC181
	.value	1
	.quad	.LC180
	.value	-2
	.quad	INS_ASLA
	.value	-1
	.quad	label$4446
	.section	.rodata.str1.1
.LC2167:
	.string	"11"
.LC2168:
	.string	"***"
	.section	.data.rel.local
	.align 32
	.type	label$4446, @object
	.size	label$4446, 70
label$4446:
	.value	2
	.quad	.LC2167
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4448
	.section	.rodata.str1.1
.LC2169:
	.string	"12"
	.section	.data.rel.local
	.align 32
	.type	label$4448, @object
	.size	label$4448, 70
label$4448:
	.value	2
	.quad	.LC2169
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4450
	.section	.rodata.str1.1
.LC2170:
	.string	"13"
	.section	.data.rel.local
	.align 32
	.type	label$4450, @object
	.size	label$4450, 70
label$4450:
	.value	2
	.quad	.LC2170
	.value	3
	.quad	.LC2159
	.value	1
	.quad	.LC182
	.value	1
	.quad	.LC183
	.value	1
	.quad	.LC182
	.value	-2
	.quad	INS_ORA
	.value	-1
	.quad	label$4452
	.section	.rodata.str1.1
.LC2171:
	.string	"14"
	.section	.data.rel.local
	.align 32
	.type	label$4452, @object
	.size	label$4452, 70
label$4452:
	.value	2
	.quad	.LC2171
	.value	3
	.quad	.LC2164
	.value	1
	.quad	.LC182
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_ASL
	.value	-1
	.quad	label$4454
	.section	.rodata.str1.1
.LC2172:
	.string	"15"
	.section	.data.rel.local
	.align 32
	.type	label$4454, @object
	.size	label$4454, 70
label$4454:
	.value	2
	.quad	.LC2172
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4456
	.section	.rodata.str1.1
.LC2173:
	.string	"16"
.LC2174:
	.string	"BPL"
	.section	.data.rel.local
	.align 32
	.type	label$4456, @object
	.size	label$4456, 70
label$4456:
	.value	2
	.quad	.LC2173
	.value	3
	.quad	.LC2174
	.value	1
	.quad	.LC188
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_BPL
	.value	-1
	.quad	label$4458
	.section	.rodata.str1.1
.LC2175:
	.string	"17"
	.section	.data.rel.local
	.align 32
	.type	label$4458, @object
	.size	label$4458, 70
label$4458:
	.value	2
	.quad	.LC2175
	.value	3
	.quad	.LC2159
	.value	2
	.quad	.LC2167
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_ORA
	.value	-1
	.quad	label$4460
	.section	.rodata.str1.1
.LC2176:
	.string	"18"
	.section	.data.rel.local
	.align 32
	.type	label$4460, @object
	.size	label$4460, 70
label$4460:
	.value	2
	.quad	.LC2176
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4462
	.section	.rodata.str1.1
.LC2177:
	.string	"19"
	.section	.data.rel.local
	.align 32
	.type	label$4462, @object
	.size	label$4462, 70
label$4462:
	.value	2
	.quad	.LC2177
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4464
	.section	.rodata.str1.1
.LC2178:
	.string	"20"
	.section	.data.rel.local
	.align 32
	.type	label$4464, @object
	.size	label$4464, 70
label$4464:
	.value	2
	.quad	.LC2178
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4466
	.section	.rodata.str1.1
.LC2179:
	.string	"21"
	.section	.data.rel.local
	.align 32
	.type	label$4466, @object
	.size	label$4466, 70
label$4466:
	.value	2
	.quad	.LC2179
	.value	3
	.quad	.LC2159
	.value	1
	.quad	.LC184
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_ORA
	.value	-1
	.quad	label$4468
	.section	.rodata.str1.1
.LC2180:
	.string	"22"
	.section	.data.rel.local
	.align 32
	.type	label$4468, @object
	.size	label$4468, 70
label$4468:
	.value	2
	.quad	.LC2180
	.value	3
	.quad	.LC2164
	.value	1
	.quad	.LC184
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_ASL
	.value	-1
	.quad	label$4470
	.section	.rodata.str1.1
.LC2181:
	.string	"23"
	.section	.data.rel.local
	.align 32
	.type	label$4470, @object
	.size	label$4470, 70
label$4470:
	.value	2
	.quad	.LC2181
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4472
	.section	.rodata.str1.1
.LC2182:
	.string	"24"
.LC2183:
	.string	"CLC"
	.section	.data.rel.local
	.align 32
	.type	label$4472, @object
	.size	label$4472, 70
label$4472:
	.value	2
	.quad	.LC2182
	.value	3
	.quad	.LC2183
	.value	1
	.quad	.LC180
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_CLC
	.value	-1
	.quad	label$4474
	.section	.rodata.str1.1
.LC2184:
	.string	"25"
	.section	.data.rel.local
	.align 32
	.type	label$4474, @object
	.size	label$4474, 70
label$4474:
	.value	2
	.quad	.LC2184
	.value	3
	.quad	.LC2159
	.value	1
	.quad	.LC187
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_ORA
	.value	-1
	.quad	label$4476
	.section	.rodata.str1.1
.LC2185:
	.string	"26"
	.section	.data.rel.local
	.align 32
	.type	label$4476, @object
	.size	label$4476, 70
label$4476:
	.value	2
	.quad	.LC2185
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4478
	.section	.rodata.str1.1
.LC2186:
	.string	"27"
	.section	.data.rel.local
	.align 32
	.type	label$4478, @object
	.size	label$4478, 70
label$4478:
	.value	2
	.quad	.LC2186
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4480
	.section	.rodata.str1.1
.LC2187:
	.string	"28"
	.section	.data.rel.local
	.align 32
	.type	label$4480, @object
	.size	label$4480, 70
label$4480:
	.value	2
	.quad	.LC2187
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4482
	.section	.rodata.str1.1
.LC2188:
	.string	"29"
	.section	.data.rel.local
	.align 32
	.type	label$4482, @object
	.size	label$4482, 70
label$4482:
	.value	2
	.quad	.LC2188
	.value	3
	.quad	.LC2159
	.value	1
	.quad	.LC186
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_ORA
	.value	-1
	.quad	label$4484
	.section	.rodata.str1.1
.LC2189:
	.string	"30"
	.section	.data.rel.local
	.align 32
	.type	label$4484, @object
	.size	label$4484, 70
label$4484:
	.value	2
	.quad	.LC2189
	.value	3
	.quad	.LC2164
	.value	1
	.quad	.LC186
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_ASL
	.value	-1
	.quad	label$4486
	.section	.rodata.str1.1
.LC2190:
	.string	"31"
	.section	.data.rel.local
	.align 32
	.type	label$4486, @object
	.size	label$4486, 70
label$4486:
	.value	2
	.quad	.LC2190
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4488
	.section	.rodata.str1.1
.LC2191:
	.string	"32"
.LC2192:
	.string	"JSR"
	.section	.data.rel.local
	.align 32
	.type	label$4488, @object
	.size	label$4488, 70
label$4488:
	.value	2
	.quad	.LC2191
	.value	3
	.quad	.LC2192
	.value	1
	.quad	.LC182
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_JSR
	.value	-1
	.quad	label$4490
	.section	.rodata.str1.1
.LC2193:
	.string	"33"
.LC2194:
	.string	"AND"
	.section	.data.rel.local
	.align 32
	.type	label$4490, @object
	.size	label$4490, 70
label$4490:
	.value	2
	.quad	.LC2193
	.value	3
	.quad	.LC2194
	.value	2
	.quad	.LC2160
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_AND
	.value	-1
	.quad	label$4492
	.section	.rodata.str1.1
.LC2195:
	.string	"34"
	.section	.data.rel.local
	.align 32
	.type	label$4492, @object
	.size	label$4492, 70
label$4492:
	.value	2
	.quad	.LC2195
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4494
	.section	.rodata.str1.1
.LC2196:
	.string	"35"
	.section	.data.rel.local
	.align 32
	.type	label$4494, @object
	.size	label$4494, 70
label$4494:
	.value	2
	.quad	.LC2196
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4496
	.section	.rodata.str1.1
.LC2197:
	.string	"36"
.LC2198:
	.string	"BIT"
	.section	.data.rel.local
	.align 32
	.type	label$4496, @object
	.size	label$4496, 70
label$4496:
	.value	2
	.quad	.LC2197
	.value	3
	.quad	.LC2198
	.value	1
	.quad	.LC183
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_BIT
	.value	-1
	.quad	label$4498
	.section	.rodata.str1.1
.LC2199:
	.string	"37"
	.section	.data.rel.local
	.align 32
	.type	label$4498, @object
	.size	label$4498, 70
label$4498:
	.value	2
	.quad	.LC2199
	.value	3
	.quad	.LC2194
	.value	1
	.quad	.LC183
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_AND
	.value	-1
	.quad	label$4500
	.section	.rodata.str1.1
.LC2200:
	.string	"38"
.LC2201:
	.string	"ROL"
	.section	.data.rel.local
	.align 32
	.type	label$4500, @object
	.size	label$4500, 70
label$4500:
	.value	2
	.quad	.LC2200
	.value	3
	.quad	.LC2201
	.value	1
	.quad	.LC183
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_ROL
	.value	-1
	.quad	label$4502
	.section	.rodata.str1.1
.LC2202:
	.string	"39"
	.section	.data.rel.local
	.align 32
	.type	label$4502, @object
	.size	label$4502, 70
label$4502:
	.value	2
	.quad	.LC2202
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4504
	.section	.rodata.str1.1
.LC2203:
	.string	"40"
.LC2204:
	.string	"PLP"
	.section	.data.rel.local
	.align 32
	.type	label$4504, @object
	.size	label$4504, 70
label$4504:
	.value	2
	.quad	.LC2203
	.value	3
	.quad	.LC2204
	.value	1
	.quad	.LC180
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_PLP
	.value	-1
	.quad	label$4506
	.section	.rodata.str1.1
.LC2205:
	.string	"41"
	.section	.data.rel.local
	.align 32
	.type	label$4506, @object
	.size	label$4506, 70
label$4506:
	.value	2
	.quad	.LC2205
	.value	3
	.quad	.LC2194
	.value	1
	.quad	.LC181
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_AND
	.value	-1
	.quad	label$4508
	.section	.rodata.str1.1
.LC2206:
	.string	"42"
	.section	.data.rel.local
	.align 32
	.type	label$4508, @object
	.size	label$4508, 70
label$4508:
	.value	2
	.quad	.LC2206
	.value	3
	.quad	.LC2201
	.value	1
	.quad	.LC180
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_ROLA
	.value	-1
	.quad	label$4510
	.section	.rodata.str1.1
.LC2207:
	.string	"43"
	.section	.data.rel.local
	.align 32
	.type	label$4510, @object
	.size	label$4510, 70
label$4510:
	.value	2
	.quad	.LC2207
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4512
	.section	.rodata.str1.1
.LC2208:
	.string	"44"
	.section	.data.rel.local
	.align 32
	.type	label$4512, @object
	.size	label$4512, 70
label$4512:
	.value	2
	.quad	.LC2208
	.value	3
	.quad	.LC2198
	.value	1
	.quad	.LC182
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_BIT
	.value	-1
	.quad	label$4514
	.section	.rodata.str1.1
.LC2209:
	.string	"45"
	.section	.data.rel.local
	.align 32
	.type	label$4514, @object
	.size	label$4514, 70
label$4514:
	.value	2
	.quad	.LC2209
	.value	3
	.quad	.LC2194
	.value	1
	.quad	.LC182
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_AND
	.value	-1
	.quad	label$4516
	.section	.rodata.str1.1
.LC2210:
	.string	"46"
	.section	.data.rel.local
	.align 32
	.type	label$4516, @object
	.size	label$4516, 70
label$4516:
	.value	2
	.quad	.LC2210
	.value	3
	.quad	.LC2201
	.value	1
	.quad	.LC182
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_ROL
	.value	-1
	.quad	label$4518
	.section	.rodata.str1.1
.LC2211:
	.string	"47"
	.section	.data.rel.local
	.align 32
	.type	label$4518, @object
	.size	label$4518, 70
label$4518:
	.value	2
	.quad	.LC2211
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4520
	.section	.rodata.str1.1
.LC2212:
	.string	"48"
.LC2213:
	.string	"BMI"
	.section	.data.rel.local
	.align 32
	.type	label$4520, @object
	.size	label$4520, 70
label$4520:
	.value	2
	.quad	.LC2212
	.value	3
	.quad	.LC2213
	.value	1
	.quad	.LC188
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_BMI
	.value	-1
	.quad	label$4522
	.section	.rodata.str1.1
.LC2214:
	.string	"49"
	.section	.data.rel.local
	.align 32
	.type	label$4522, @object
	.size	label$4522, 70
label$4522:
	.value	2
	.quad	.LC2214
	.value	3
	.quad	.LC2194
	.value	2
	.quad	.LC2167
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_AND
	.value	-1
	.quad	label$4524
	.section	.rodata.str1.1
.LC2215:
	.string	"50"
	.section	.data.rel.local
	.align 32
	.type	label$4524, @object
	.size	label$4524, 70
label$4524:
	.value	2
	.quad	.LC2215
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4526
	.section	.rodata.str1.1
.LC2216:
	.string	"51"
	.section	.data.rel.local
	.align 32
	.type	label$4526, @object
	.size	label$4526, 70
label$4526:
	.value	2
	.quad	.LC2216
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4528
	.section	.rodata.str1.1
.LC2217:
	.string	"52"
	.section	.data.rel.local
	.align 32
	.type	label$4528, @object
	.size	label$4528, 70
label$4528:
	.value	2
	.quad	.LC2217
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4530
	.section	.rodata.str1.1
.LC2218:
	.string	"53"
	.section	.data.rel.local
	.align 32
	.type	label$4530, @object
	.size	label$4530, 70
label$4530:
	.value	2
	.quad	.LC2218
	.value	3
	.quad	.LC2194
	.value	1
	.quad	.LC184
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_AND
	.value	-1
	.quad	label$4532
	.section	.rodata.str1.1
.LC2219:
	.string	"54"
	.section	.data.rel.local
	.align 32
	.type	label$4532, @object
	.size	label$4532, 70
label$4532:
	.value	2
	.quad	.LC2219
	.value	3
	.quad	.LC2201
	.value	1
	.quad	.LC184
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_ROL
	.value	-1
	.quad	label$4534
	.section	.rodata.str1.1
.LC2220:
	.string	"55"
	.section	.data.rel.local
	.align 32
	.type	label$4534, @object
	.size	label$4534, 70
label$4534:
	.value	2
	.quad	.LC2220
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4536
	.section	.rodata.str1.1
.LC2221:
	.string	"56"
.LC2222:
	.string	"SEC"
	.section	.data.rel.local
	.align 32
	.type	label$4536, @object
	.size	label$4536, 70
label$4536:
	.value	2
	.quad	.LC2221
	.value	3
	.quad	.LC2222
	.value	1
	.quad	.LC180
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_SEC
	.value	-1
	.quad	label$4538
	.section	.rodata.str1.1
.LC2223:
	.string	"57"
	.section	.data.rel.local
	.align 32
	.type	label$4538, @object
	.size	label$4538, 70
label$4538:
	.value	2
	.quad	.LC2223
	.value	3
	.quad	.LC2194
	.value	1
	.quad	.LC187
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_AND
	.value	-1
	.quad	label$4540
	.section	.rodata.str1.1
.LC2224:
	.string	"58"
	.section	.data.rel.local
	.align 32
	.type	label$4540, @object
	.size	label$4540, 70
label$4540:
	.value	2
	.quad	.LC2224
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4542
	.section	.rodata.str1.1
.LC2225:
	.string	"59"
	.section	.data.rel.local
	.align 32
	.type	label$4542, @object
	.size	label$4542, 70
label$4542:
	.value	2
	.quad	.LC2225
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4544
	.section	.rodata.str1.1
.LC2226:
	.string	"60"
	.section	.data.rel.local
	.align 32
	.type	label$4544, @object
	.size	label$4544, 70
label$4544:
	.value	2
	.quad	.LC2226
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4546
	.section	.rodata.str1.1
.LC2227:
	.string	"61"
	.section	.data.rel.local
	.align 32
	.type	label$4546, @object
	.size	label$4546, 70
label$4546:
	.value	2
	.quad	.LC2227
	.value	3
	.quad	.LC2194
	.value	1
	.quad	.LC186
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_AND
	.value	-1
	.quad	label$4548
	.section	.rodata.str1.1
.LC2228:
	.string	"62"
	.section	.data.rel.local
	.align 32
	.type	label$4548, @object
	.size	label$4548, 70
label$4548:
	.value	2
	.quad	.LC2228
	.value	3
	.quad	.LC2201
	.value	1
	.quad	.LC186
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_ROL
	.value	-1
	.quad	label$4550
	.section	.rodata.str1.1
.LC2229:
	.string	"63"
	.section	.data.rel.local
	.align 32
	.type	label$4550, @object
	.size	label$4550, 70
label$4550:
	.value	2
	.quad	.LC2229
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4552
	.section	.rodata.str1.1
.LC2230:
	.string	"64"
.LC2231:
	.string	"RTI"
	.section	.data.rel.local
	.align 32
	.type	label$4552, @object
	.size	label$4552, 70
label$4552:
	.value	2
	.quad	.LC2230
	.value	3
	.quad	.LC2231
	.value	1
	.quad	.LC180
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_RTI
	.value	-1
	.quad	label$4554
	.section	.rodata.str1.1
.LC2232:
	.string	"65"
.LC2233:
	.string	"EOR"
	.section	.data.rel.local
	.align 32
	.type	label$4554, @object
	.size	label$4554, 70
label$4554:
	.value	2
	.quad	.LC2232
	.value	3
	.quad	.LC2233
	.value	2
	.quad	.LC2160
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_EOR
	.value	-1
	.quad	label$4556
	.section	.rodata.str1.1
.LC2234:
	.string	"66"
	.section	.data.rel.local
	.align 32
	.type	label$4556, @object
	.size	label$4556, 70
label$4556:
	.value	2
	.quad	.LC2234
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4558
	.section	.rodata.str1.1
.LC2235:
	.string	"67"
	.section	.data.rel.local
	.align 32
	.type	label$4558, @object
	.size	label$4558, 70
label$4558:
	.value	2
	.quad	.LC2235
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4560
	.section	.rodata.str1.1
.LC2236:
	.string	"68"
	.section	.data.rel.local
	.align 32
	.type	label$4560, @object
	.size	label$4560, 70
label$4560:
	.value	2
	.quad	.LC2236
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4562
	.section	.rodata.str1.1
.LC2237:
	.string	"69"
	.section	.data.rel.local
	.align 32
	.type	label$4562, @object
	.size	label$4562, 70
label$4562:
	.value	2
	.quad	.LC2237
	.value	3
	.quad	.LC2233
	.value	1
	.quad	.LC183
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_EOR
	.value	-1
	.quad	label$4564
	.section	.rodata.str1.1
.LC2238:
	.string	"70"
.LC2239:
	.string	"LSR"
	.section	.data.rel.local
	.align 32
	.type	label$4564, @object
	.size	label$4564, 70
label$4564:
	.value	2
	.quad	.LC2238
	.value	3
	.quad	.LC2239
	.value	1
	.quad	.LC183
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_LSR
	.value	-1
	.quad	label$4566
	.section	.rodata.str1.1
.LC2240:
	.string	"71"
	.section	.data.rel.local
	.align 32
	.type	label$4566, @object
	.size	label$4566, 70
label$4566:
	.value	2
	.quad	.LC2240
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4568
	.section	.rodata.str1.1
.LC2241:
	.string	"72"
.LC2242:
	.string	"PHA"
	.section	.data.rel.local
	.align 32
	.type	label$4568, @object
	.size	label$4568, 70
label$4568:
	.value	2
	.quad	.LC2241
	.value	3
	.quad	.LC2242
	.value	1
	.quad	.LC180
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_PHA
	.value	-1
	.quad	label$4570
	.section	.rodata.str1.1
.LC2243:
	.string	"73"
	.section	.data.rel.local
	.align 32
	.type	label$4570, @object
	.size	label$4570, 70
label$4570:
	.value	2
	.quad	.LC2243
	.value	3
	.quad	.LC2233
	.value	1
	.quad	.LC181
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_EOR
	.value	-1
	.quad	label$4572
	.section	.rodata.str1.1
.LC2244:
	.string	"74"
	.section	.data.rel.local
	.align 32
	.type	label$4572, @object
	.size	label$4572, 70
label$4572:
	.value	2
	.quad	.LC2244
	.value	3
	.quad	.LC2239
	.value	1
	.quad	.LC180
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_LSRA
	.value	-1
	.quad	label$4574
	.section	.rodata.str1.1
.LC2245:
	.string	"75"
	.section	.data.rel.local
	.align 32
	.type	label$4574, @object
	.size	label$4574, 70
label$4574:
	.value	2
	.quad	.LC2245
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4576
	.section	.rodata.str1.1
.LC2246:
	.string	"76"
.LC2247:
	.string	"JMP"
	.section	.data.rel.local
	.align 32
	.type	label$4576, @object
	.size	label$4576, 70
label$4576:
	.value	2
	.quad	.LC2246
	.value	3
	.quad	.LC2247
	.value	1
	.quad	.LC182
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_JMP
	.value	-1
	.quad	label$4578
	.section	.rodata.str1.1
.LC2248:
	.string	"77"
	.section	.data.rel.local
	.align 32
	.type	label$4578, @object
	.size	label$4578, 70
label$4578:
	.value	2
	.quad	.LC2248
	.value	3
	.quad	.LC2233
	.value	1
	.quad	.LC182
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_EOR
	.value	-1
	.quad	label$4580
	.section	.rodata.str1.1
.LC2249:
	.string	"78"
	.section	.data.rel.local
	.align 32
	.type	label$4580, @object
	.size	label$4580, 70
label$4580:
	.value	2
	.quad	.LC2249
	.value	3
	.quad	.LC2239
	.value	1
	.quad	.LC182
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_LSR
	.value	-1
	.quad	label$4582
	.section	.rodata.str1.1
.LC2250:
	.string	"79"
	.section	.data.rel.local
	.align 32
	.type	label$4582, @object
	.size	label$4582, 70
label$4582:
	.value	2
	.quad	.LC2250
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4584
	.section	.rodata.str1.1
.LC2251:
	.string	"80"
.LC2252:
	.string	"BVC"
	.section	.data.rel.local
	.align 32
	.type	label$4584, @object
	.size	label$4584, 70
label$4584:
	.value	2
	.quad	.LC2251
	.value	3
	.quad	.LC2252
	.value	1
	.quad	.LC188
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_BVC
	.value	-1
	.quad	label$4586
	.section	.rodata.str1.1
.LC2253:
	.string	"81"
	.section	.data.rel.local
	.align 32
	.type	label$4586, @object
	.size	label$4586, 70
label$4586:
	.value	2
	.quad	.LC2253
	.value	3
	.quad	.LC2233
	.value	2
	.quad	.LC2167
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_EOR
	.value	-1
	.quad	label$4588
	.section	.rodata.str1.1
.LC2254:
	.string	"82"
	.section	.data.rel.local
	.align 32
	.type	label$4588, @object
	.size	label$4588, 70
label$4588:
	.value	2
	.quad	.LC2254
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4590
	.section	.rodata.str1.1
.LC2255:
	.string	"83"
	.section	.data.rel.local
	.align 32
	.type	label$4590, @object
	.size	label$4590, 70
label$4590:
	.value	2
	.quad	.LC2255
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4592
	.section	.rodata.str1.1
.LC2256:
	.string	"84"
	.section	.data.rel.local
	.align 32
	.type	label$4592, @object
	.size	label$4592, 70
label$4592:
	.value	2
	.quad	.LC2256
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4594
	.section	.rodata.str1.1
.LC2257:
	.string	"85"
	.section	.data.rel.local
	.align 32
	.type	label$4594, @object
	.size	label$4594, 70
label$4594:
	.value	2
	.quad	.LC2257
	.value	3
	.quad	.LC2233
	.value	1
	.quad	.LC184
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_EOR
	.value	-1
	.quad	label$4596
	.section	.rodata.str1.1
.LC2258:
	.string	"86"
	.section	.data.rel.local
	.align 32
	.type	label$4596, @object
	.size	label$4596, 70
label$4596:
	.value	2
	.quad	.LC2258
	.value	3
	.quad	.LC2239
	.value	1
	.quad	.LC184
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_LSR
	.value	-1
	.quad	label$4598
	.section	.rodata.str1.1
.LC2259:
	.string	"87"
	.section	.data.rel.local
	.align 32
	.type	label$4598, @object
	.size	label$4598, 70
label$4598:
	.value	2
	.quad	.LC2259
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4600
	.section	.rodata.str1.1
.LC2260:
	.string	"88"
.LC2261:
	.string	"CLI"
	.section	.data.rel.local
	.align 32
	.type	label$4600, @object
	.size	label$4600, 70
label$4600:
	.value	2
	.quad	.LC2260
	.value	3
	.quad	.LC2261
	.value	1
	.quad	.LC180
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_CLI
	.value	-1
	.quad	label$4602
	.section	.rodata.str1.1
.LC2262:
	.string	"89"
	.section	.data.rel.local
	.align 32
	.type	label$4602, @object
	.size	label$4602, 70
label$4602:
	.value	2
	.quad	.LC2262
	.value	3
	.quad	.LC2233
	.value	1
	.quad	.LC187
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_EOR
	.value	-1
	.quad	label$4604
	.section	.rodata.str1.1
.LC2263:
	.string	"90"
	.section	.data.rel.local
	.align 32
	.type	label$4604, @object
	.size	label$4604, 70
label$4604:
	.value	2
	.quad	.LC2263
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4606
	.section	.rodata.str1.1
.LC2264:
	.string	"91"
	.section	.data.rel.local
	.align 32
	.type	label$4606, @object
	.size	label$4606, 70
label$4606:
	.value	2
	.quad	.LC2264
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4608
	.section	.rodata.str1.1
.LC2265:
	.string	"92"
	.section	.data.rel.local
	.align 32
	.type	label$4608, @object
	.size	label$4608, 70
label$4608:
	.value	2
	.quad	.LC2265
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4610
	.section	.rodata.str1.1
.LC2266:
	.string	"93"
	.section	.data.rel.local
	.align 32
	.type	label$4610, @object
	.size	label$4610, 70
label$4610:
	.value	2
	.quad	.LC2266
	.value	3
	.quad	.LC2233
	.value	1
	.quad	.LC186
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_EOR
	.value	-1
	.quad	label$4612
	.section	.rodata.str1.1
.LC2267:
	.string	"94"
	.section	.data.rel.local
	.align 32
	.type	label$4612, @object
	.size	label$4612, 70
label$4612:
	.value	2
	.quad	.LC2267
	.value	3
	.quad	.LC2239
	.value	1
	.quad	.LC186
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_LSR
	.value	-1
	.quad	label$4614
	.section	.rodata.str1.1
.LC2268:
	.string	"95"
	.section	.data.rel.local
	.align 32
	.type	label$4614, @object
	.size	label$4614, 70
label$4614:
	.value	2
	.quad	.LC2268
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4616
	.section	.rodata.str1.1
.LC2269:
	.string	"96"
.LC2270:
	.string	"RTS"
	.section	.data.rel.local
	.align 32
	.type	label$4616, @object
	.size	label$4616, 70
label$4616:
	.value	2
	.quad	.LC2269
	.value	3
	.quad	.LC2270
	.value	1
	.quad	.LC180
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_RTS
	.value	-1
	.quad	label$4618
	.section	.rodata.str1.1
.LC2271:
	.string	"97"
.LC2272:
	.string	"ADC"
	.section	.data.rel.local
	.align 32
	.type	label$4618, @object
	.size	label$4618, 70
label$4618:
	.value	2
	.quad	.LC2271
	.value	3
	.quad	.LC2272
	.value	2
	.quad	.LC2160
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_ADC
	.value	-1
	.quad	label$4620
	.section	.rodata.str1.1
.LC2273:
	.string	"98"
	.section	.data.rel.local
	.align 32
	.type	label$4620, @object
	.size	label$4620, 70
label$4620:
	.value	2
	.quad	.LC2273
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4622
	.section	.rodata.str1.1
.LC2274:
	.string	"99"
	.section	.data.rel.local
	.align 32
	.type	label$4622, @object
	.size	label$4622, 70
label$4622:
	.value	2
	.quad	.LC2274
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4624
	.section	.rodata.str1.1
.LC2275:
	.string	"100"
	.section	.data.rel.local
	.align 32
	.type	label$4624, @object
	.size	label$4624, 70
label$4624:
	.value	3
	.quad	.LC2275
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4626
	.section	.rodata.str1.1
.LC2276:
	.string	"101"
	.section	.data.rel.local
	.align 32
	.type	label$4626, @object
	.size	label$4626, 70
label$4626:
	.value	3
	.quad	.LC2276
	.value	3
	.quad	.LC2272
	.value	1
	.quad	.LC183
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_ADC
	.value	-1
	.quad	label$4628
	.section	.rodata.str1.1
.LC2277:
	.string	"102"
.LC2278:
	.string	"ROR"
	.section	.data.rel.local
	.align 32
	.type	label$4628, @object
	.size	label$4628, 70
label$4628:
	.value	3
	.quad	.LC2277
	.value	3
	.quad	.LC2278
	.value	1
	.quad	.LC183
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_ROR
	.value	-1
	.quad	label$4630
	.section	.rodata.str1.1
.LC2279:
	.string	"103"
	.section	.data.rel.local
	.align 32
	.type	label$4630, @object
	.size	label$4630, 70
label$4630:
	.value	3
	.quad	.LC2279
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4632
	.section	.rodata.str1.1
.LC2280:
	.string	"104"
.LC2281:
	.string	"PLA"
	.section	.data.rel.local
	.align 32
	.type	label$4632, @object
	.size	label$4632, 70
label$4632:
	.value	3
	.quad	.LC2280
	.value	3
	.quad	.LC2281
	.value	1
	.quad	.LC180
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_PLA
	.value	-1
	.quad	label$4634
	.section	.rodata.str1.1
.LC2282:
	.string	"105"
	.section	.data.rel.local
	.align 32
	.type	label$4634, @object
	.size	label$4634, 70
label$4634:
	.value	3
	.quad	.LC2282
	.value	3
	.quad	.LC2272
	.value	1
	.quad	.LC181
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_ADC
	.value	-1
	.quad	label$4636
	.section	.rodata.str1.1
.LC2283:
	.string	"106"
	.section	.data.rel.local
	.align 32
	.type	label$4636, @object
	.size	label$4636, 70
label$4636:
	.value	3
	.quad	.LC2283
	.value	3
	.quad	.LC2278
	.value	1
	.quad	.LC180
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_RORA
	.value	-1
	.quad	label$4638
	.section	.rodata.str1.1
.LC2284:
	.string	"107"
	.section	.data.rel.local
	.align 32
	.type	label$4638, @object
	.size	label$4638, 70
label$4638:
	.value	3
	.quad	.LC2284
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4640
	.section	.rodata.str1.1
.LC2285:
	.string	"108"
	.section	.data.rel.local
	.align 32
	.type	label$4640, @object
	.size	label$4640, 70
label$4640:
	.value	3
	.quad	.LC2285
	.value	3
	.quad	.LC2247
	.value	2
	.quad	.LC2169
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_JMP
	.value	-1
	.quad	label$4642
	.section	.rodata.str1.1
.LC2286:
	.string	"109"
	.section	.data.rel.local
	.align 32
	.type	label$4642, @object
	.size	label$4642, 70
label$4642:
	.value	3
	.quad	.LC2286
	.value	3
	.quad	.LC2272
	.value	1
	.quad	.LC182
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_ADC
	.value	-1
	.quad	label$4644
	.section	.rodata.str1.1
.LC2287:
	.string	"110"
	.section	.data.rel.local
	.align 32
	.type	label$4644, @object
	.size	label$4644, 70
label$4644:
	.value	3
	.quad	.LC2287
	.value	3
	.quad	.LC2278
	.value	1
	.quad	.LC182
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_ROR
	.value	-1
	.quad	label$4646
	.section	.rodata.str1.1
.LC2288:
	.string	"111"
	.section	.data.rel.local
	.align 32
	.type	label$4646, @object
	.size	label$4646, 70
label$4646:
	.value	3
	.quad	.LC2288
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4648
	.section	.rodata.str1.1
.LC2289:
	.string	"112"
.LC2290:
	.string	"BVS"
	.section	.data.rel.local
	.align 32
	.type	label$4648, @object
	.size	label$4648, 70
label$4648:
	.value	3
	.quad	.LC2289
	.value	3
	.quad	.LC2290
	.value	1
	.quad	.LC188
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_BVS
	.value	-1
	.quad	label$4650
	.section	.rodata.str1.1
.LC2291:
	.string	"113"
	.section	.data.rel.local
	.align 32
	.type	label$4650, @object
	.size	label$4650, 70
label$4650:
	.value	3
	.quad	.LC2291
	.value	3
	.quad	.LC2272
	.value	2
	.quad	.LC2167
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_ADC
	.value	-1
	.quad	label$4652
	.section	.rodata.str1.1
.LC2292:
	.string	"114"
	.section	.data.rel.local
	.align 32
	.type	label$4652, @object
	.size	label$4652, 70
label$4652:
	.value	3
	.quad	.LC2292
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4654
	.section	.rodata.str1.1
.LC2293:
	.string	"115"
	.section	.data.rel.local
	.align 32
	.type	label$4654, @object
	.size	label$4654, 70
label$4654:
	.value	3
	.quad	.LC2293
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4656
	.section	.rodata.str1.1
.LC2294:
	.string	"116"
	.section	.data.rel.local
	.align 32
	.type	label$4656, @object
	.size	label$4656, 70
label$4656:
	.value	3
	.quad	.LC2294
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4658
	.section	.rodata.str1.1
.LC2295:
	.string	"117"
	.section	.data.rel.local
	.align 32
	.type	label$4658, @object
	.size	label$4658, 70
label$4658:
	.value	3
	.quad	.LC2295
	.value	3
	.quad	.LC2272
	.value	1
	.quad	.LC184
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_ADC
	.value	-1
	.quad	label$4660
	.section	.rodata.str1.1
.LC2296:
	.string	"118"
	.section	.data.rel.local
	.align 32
	.type	label$4660, @object
	.size	label$4660, 70
label$4660:
	.value	3
	.quad	.LC2296
	.value	3
	.quad	.LC2278
	.value	1
	.quad	.LC184
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_ROR
	.value	-1
	.quad	label$4662
	.section	.rodata.str1.1
.LC2297:
	.string	"119"
	.section	.data.rel.local
	.align 32
	.type	label$4662, @object
	.size	label$4662, 70
label$4662:
	.value	3
	.quad	.LC2297
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4664
	.section	.rodata.str1.1
.LC2298:
	.string	"120"
.LC2299:
	.string	"SEI"
	.section	.data.rel.local
	.align 32
	.type	label$4664, @object
	.size	label$4664, 70
label$4664:
	.value	3
	.quad	.LC2298
	.value	3
	.quad	.LC2299
	.value	1
	.quad	.LC180
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_SEI
	.value	-1
	.quad	label$4666
	.section	.rodata.str1.1
.LC2300:
	.string	"121"
	.section	.data.rel.local
	.align 32
	.type	label$4666, @object
	.size	label$4666, 70
label$4666:
	.value	3
	.quad	.LC2300
	.value	3
	.quad	.LC2272
	.value	1
	.quad	.LC187
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_ADC
	.value	-1
	.quad	label$4668
	.section	.rodata.str1.1
.LC2301:
	.string	"122"
	.section	.data.rel.local
	.align 32
	.type	label$4668, @object
	.size	label$4668, 70
label$4668:
	.value	3
	.quad	.LC2301
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4670
	.section	.rodata.str1.1
.LC2302:
	.string	"123"
	.section	.data.rel.local
	.align 32
	.type	label$4670, @object
	.size	label$4670, 70
label$4670:
	.value	3
	.quad	.LC2302
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4672
	.section	.rodata.str1.1
.LC2303:
	.string	"124"
	.section	.data.rel.local
	.align 32
	.type	label$4672, @object
	.size	label$4672, 70
label$4672:
	.value	3
	.quad	.LC2303
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4674
	.section	.rodata.str1.1
.LC2304:
	.string	"125"
	.section	.data.rel.local
	.align 32
	.type	label$4674, @object
	.size	label$4674, 70
label$4674:
	.value	3
	.quad	.LC2304
	.value	3
	.quad	.LC2272
	.value	1
	.quad	.LC186
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_ADC
	.value	-1
	.quad	label$4676
	.section	.rodata.str1.1
.LC2305:
	.string	"126"
	.section	.data.rel.local
	.align 32
	.type	label$4676, @object
	.size	label$4676, 70
label$4676:
	.value	3
	.quad	.LC2305
	.value	3
	.quad	.LC2278
	.value	1
	.quad	.LC186
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_ROR
	.value	-1
	.quad	label$4678
	.section	.rodata.str1.1
.LC2306:
	.string	"127"
	.section	.data.rel.local
	.align 32
	.type	label$4678, @object
	.size	label$4678, 70
label$4678:
	.value	3
	.quad	.LC2306
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4680
	.section	.rodata.str1.1
.LC2307:
	.string	"128"
	.section	.data.rel.local
	.align 32
	.type	label$4680, @object
	.size	label$4680, 70
label$4680:
	.value	3
	.quad	.LC2307
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4682
	.section	.rodata.str1.1
.LC2308:
	.string	"129"
.LC2309:
	.string	"STA"
	.section	.data.rel.local
	.align 32
	.type	label$4682, @object
	.size	label$4682, 70
label$4682:
	.value	3
	.quad	.LC2308
	.value	3
	.quad	.LC2309
	.value	2
	.quad	.LC2160
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_STA
	.value	-1
	.quad	label$4684
	.section	.rodata.str1.1
.LC2310:
	.string	"130"
	.section	.data.rel.local
	.align 32
	.type	label$4684, @object
	.size	label$4684, 70
label$4684:
	.value	3
	.quad	.LC2310
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4686
	.section	.rodata.str1.1
.LC2311:
	.string	"131"
	.section	.data.rel.local
	.align 32
	.type	label$4686, @object
	.size	label$4686, 70
label$4686:
	.value	3
	.quad	.LC2311
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4688
	.section	.rodata.str1.1
.LC2312:
	.string	"132"
.LC2313:
	.string	"STY"
	.section	.data.rel.local
	.align 32
	.type	label$4688, @object
	.size	label$4688, 70
label$4688:
	.value	3
	.quad	.LC2312
	.value	3
	.quad	.LC2313
	.value	1
	.quad	.LC183
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_STY
	.value	-1
	.quad	label$4690
	.section	.rodata.str1.1
.LC2314:
	.string	"133"
	.section	.data.rel.local
	.align 32
	.type	label$4690, @object
	.size	label$4690, 70
label$4690:
	.value	3
	.quad	.LC2314
	.value	3
	.quad	.LC2309
	.value	1
	.quad	.LC183
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_STA
	.value	-1
	.quad	label$4692
	.section	.rodata.str1.1
.LC2315:
	.string	"134"
.LC2316:
	.string	"STX"
	.section	.data.rel.local
	.align 32
	.type	label$4692, @object
	.size	label$4692, 70
label$4692:
	.value	3
	.quad	.LC2315
	.value	3
	.quad	.LC2316
	.value	1
	.quad	.LC183
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_STX
	.value	-1
	.quad	label$4694
	.section	.rodata.str1.1
.LC2317:
	.string	"135"
	.section	.data.rel.local
	.align 32
	.type	label$4694, @object
	.size	label$4694, 70
label$4694:
	.value	3
	.quad	.LC2317
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4696
	.section	.rodata.str1.1
.LC2318:
	.string	"136"
.LC2319:
	.string	"DEY"
	.section	.data.rel.local
	.align 32
	.type	label$4696, @object
	.size	label$4696, 70
label$4696:
	.value	3
	.quad	.LC2318
	.value	3
	.quad	.LC2319
	.value	1
	.quad	.LC180
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_DEY
	.value	-1
	.quad	label$4698
	.section	.rodata.str1.1
.LC2320:
	.string	"137"
	.section	.data.rel.local
	.align 32
	.type	label$4698, @object
	.size	label$4698, 70
label$4698:
	.value	3
	.quad	.LC2320
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4700
	.section	.rodata.str1.1
.LC2321:
	.string	"138"
.LC2322:
	.string	"TXA"
	.section	.data.rel.local
	.align 32
	.type	label$4700, @object
	.size	label$4700, 70
label$4700:
	.value	3
	.quad	.LC2321
	.value	3
	.quad	.LC2322
	.value	1
	.quad	.LC180
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_TXA
	.value	-1
	.quad	label$4702
	.section	.rodata.str1.1
.LC2323:
	.string	"139"
	.section	.data.rel.local
	.align 32
	.type	label$4702, @object
	.size	label$4702, 70
label$4702:
	.value	3
	.quad	.LC2323
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4704
	.section	.rodata.str1.1
.LC2324:
	.string	"140"
	.section	.data.rel.local
	.align 32
	.type	label$4704, @object
	.size	label$4704, 70
label$4704:
	.value	3
	.quad	.LC2324
	.value	3
	.quad	.LC2313
	.value	1
	.quad	.LC182
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_STY
	.value	-1
	.quad	label$4706
	.section	.rodata.str1.1
.LC2325:
	.string	"141"
	.section	.data.rel.local
	.align 32
	.type	label$4706, @object
	.size	label$4706, 70
label$4706:
	.value	3
	.quad	.LC2325
	.value	3
	.quad	.LC2309
	.value	1
	.quad	.LC182
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_STA
	.value	-1
	.quad	label$4708
	.section	.rodata.str1.1
.LC2326:
	.string	"142"
	.section	.data.rel.local
	.align 32
	.type	label$4708, @object
	.size	label$4708, 70
label$4708:
	.value	3
	.quad	.LC2326
	.value	3
	.quad	.LC2316
	.value	1
	.quad	.LC182
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_STX
	.value	-1
	.quad	label$4710
	.section	.rodata.str1.1
.LC2327:
	.string	"143"
	.section	.data.rel.local
	.align 32
	.type	label$4710, @object
	.size	label$4710, 70
label$4710:
	.value	3
	.quad	.LC2327
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4712
	.section	.rodata.str1.1
.LC2328:
	.string	"144"
.LC2329:
	.string	"BCC"
	.section	.data.rel.local
	.align 32
	.type	label$4712, @object
	.size	label$4712, 70
label$4712:
	.value	3
	.quad	.LC2328
	.value	3
	.quad	.LC2329
	.value	1
	.quad	.LC188
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_BCC
	.value	-1
	.quad	label$4714
	.section	.rodata.str1.1
.LC2330:
	.string	"145"
	.section	.data.rel.local
	.align 32
	.type	label$4714, @object
	.size	label$4714, 70
label$4714:
	.value	3
	.quad	.LC2330
	.value	3
	.quad	.LC2309
	.value	2
	.quad	.LC2167
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_STA
	.value	-1
	.quad	label$4716
	.section	.rodata.str1.1
.LC2331:
	.string	"146"
	.section	.data.rel.local
	.align 32
	.type	label$4716, @object
	.size	label$4716, 70
label$4716:
	.value	3
	.quad	.LC2331
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4718
	.section	.rodata.str1.1
.LC2332:
	.string	"147"
	.section	.data.rel.local
	.align 32
	.type	label$4718, @object
	.size	label$4718, 70
label$4718:
	.value	3
	.quad	.LC2332
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4720
	.section	.rodata.str1.1
.LC2333:
	.string	"148"
	.section	.data.rel.local
	.align 32
	.type	label$4720, @object
	.size	label$4720, 70
label$4720:
	.value	3
	.quad	.LC2333
	.value	3
	.quad	.LC2313
	.value	1
	.quad	.LC184
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_STY
	.value	-1
	.quad	label$4722
	.section	.rodata.str1.1
.LC2334:
	.string	"149"
	.section	.data.rel.local
	.align 32
	.type	label$4722, @object
	.size	label$4722, 70
label$4722:
	.value	3
	.quad	.LC2334
	.value	3
	.quad	.LC2309
	.value	1
	.quad	.LC184
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_STA
	.value	-1
	.quad	label$4724
	.section	.rodata.str1.1
.LC2335:
	.string	"150"
	.section	.data.rel.local
	.align 32
	.type	label$4724, @object
	.size	label$4724, 70
label$4724:
	.value	3
	.quad	.LC2335
	.value	3
	.quad	.LC2316
	.value	1
	.quad	.LC185
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_STX
	.value	-1
	.quad	label$4726
	.section	.rodata.str1.1
.LC2336:
	.string	"151"
	.section	.data.rel.local
	.align 32
	.type	label$4726, @object
	.size	label$4726, 70
label$4726:
	.value	3
	.quad	.LC2336
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4728
	.section	.rodata.str1.1
.LC2337:
	.string	"152"
.LC2338:
	.string	"TYA"
	.section	.data.rel.local
	.align 32
	.type	label$4728, @object
	.size	label$4728, 70
label$4728:
	.value	3
	.quad	.LC2337
	.value	3
	.quad	.LC2338
	.value	1
	.quad	.LC180
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_TYA
	.value	-1
	.quad	label$4730
	.section	.rodata.str1.1
.LC2339:
	.string	"153"
	.section	.data.rel.local
	.align 32
	.type	label$4730, @object
	.size	label$4730, 70
label$4730:
	.value	3
	.quad	.LC2339
	.value	3
	.quad	.LC2309
	.value	1
	.quad	.LC187
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_STA
	.value	-1
	.quad	label$4732
	.section	.rodata.str1.1
.LC2340:
	.string	"154"
.LC2341:
	.string	"TXS"
	.section	.data.rel.local
	.align 32
	.type	label$4732, @object
	.size	label$4732, 70
label$4732:
	.value	3
	.quad	.LC2340
	.value	3
	.quad	.LC2341
	.value	1
	.quad	.LC180
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_TXS
	.value	-1
	.quad	label$4734
	.section	.rodata.str1.1
.LC2342:
	.string	"155"
	.section	.data.rel.local
	.align 32
	.type	label$4734, @object
	.size	label$4734, 70
label$4734:
	.value	3
	.quad	.LC2342
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4736
	.section	.rodata.str1.1
.LC2343:
	.string	"156"
	.section	.data.rel.local
	.align 32
	.type	label$4736, @object
	.size	label$4736, 70
label$4736:
	.value	3
	.quad	.LC2343
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4738
	.section	.rodata.str1.1
.LC2344:
	.string	"157"
	.section	.data.rel.local
	.align 32
	.type	label$4738, @object
	.size	label$4738, 70
label$4738:
	.value	3
	.quad	.LC2344
	.value	3
	.quad	.LC2309
	.value	1
	.quad	.LC186
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_STA
	.value	-1
	.quad	label$4740
	.section	.rodata.str1.1
.LC2345:
	.string	"158"
	.section	.data.rel.local
	.align 32
	.type	label$4740, @object
	.size	label$4740, 70
label$4740:
	.value	3
	.quad	.LC2345
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4742
	.section	.rodata.str1.1
.LC2346:
	.string	"159"
	.section	.data.rel.local
	.align 32
	.type	label$4742, @object
	.size	label$4742, 70
label$4742:
	.value	3
	.quad	.LC2346
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4744
	.section	.rodata.str1.1
.LC2347:
	.string	"160"
.LC2348:
	.string	"LDY"
	.section	.data.rel.local
	.align 32
	.type	label$4744, @object
	.size	label$4744, 70
label$4744:
	.value	3
	.quad	.LC2347
	.value	3
	.quad	.LC2348
	.value	1
	.quad	.LC181
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_LDY
	.value	-1
	.quad	label$4746
	.section	.rodata.str1.1
.LC2349:
	.string	"161"
.LC2350:
	.string	"LDA"
	.section	.data.rel.local
	.align 32
	.type	label$4746, @object
	.size	label$4746, 70
label$4746:
	.value	3
	.quad	.LC2349
	.value	3
	.quad	.LC2350
	.value	2
	.quad	.LC2160
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_LDA
	.value	-1
	.quad	label$4748
	.section	.rodata.str1.1
.LC2351:
	.string	"162"
.LC2352:
	.string	"LDX"
	.section	.data.rel.local
	.align 32
	.type	label$4748, @object
	.size	label$4748, 70
label$4748:
	.value	3
	.quad	.LC2351
	.value	3
	.quad	.LC2352
	.value	1
	.quad	.LC181
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_LDX
	.value	-1
	.quad	label$4750
	.section	.rodata.str1.1
.LC2353:
	.string	"163"
	.section	.data.rel.local
	.align 32
	.type	label$4750, @object
	.size	label$4750, 70
label$4750:
	.value	3
	.quad	.LC2353
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4752
	.section	.rodata.str1.1
.LC2354:
	.string	"164"
	.section	.data.rel.local
	.align 32
	.type	label$4752, @object
	.size	label$4752, 70
label$4752:
	.value	3
	.quad	.LC2354
	.value	3
	.quad	.LC2348
	.value	1
	.quad	.LC183
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_LDY
	.value	-1
	.quad	label$4754
	.section	.rodata.str1.1
.LC2355:
	.string	"165"
	.section	.data.rel.local
	.align 32
	.type	label$4754, @object
	.size	label$4754, 70
label$4754:
	.value	3
	.quad	.LC2355
	.value	3
	.quad	.LC2350
	.value	1
	.quad	.LC183
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_LDA
	.value	-1
	.quad	label$4756
	.section	.rodata.str1.1
.LC2356:
	.string	"166"
	.section	.data.rel.local
	.align 32
	.type	label$4756, @object
	.size	label$4756, 70
label$4756:
	.value	3
	.quad	.LC2356
	.value	3
	.quad	.LC2352
	.value	1
	.quad	.LC183
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_LDX
	.value	-1
	.quad	label$4758
	.section	.rodata.str1.1
.LC2357:
	.string	"167"
	.section	.data.rel.local
	.align 32
	.type	label$4758, @object
	.size	label$4758, 70
label$4758:
	.value	3
	.quad	.LC2357
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4760
	.section	.rodata.str1.1
.LC2358:
	.string	"168"
.LC2359:
	.string	"TAY"
	.section	.data.rel.local
	.align 32
	.type	label$4760, @object
	.size	label$4760, 70
label$4760:
	.value	3
	.quad	.LC2358
	.value	3
	.quad	.LC2359
	.value	1
	.quad	.LC180
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_TAY
	.value	-1
	.quad	label$4762
	.section	.rodata.str1.1
.LC2360:
	.string	"169"
	.section	.data.rel.local
	.align 32
	.type	label$4762, @object
	.size	label$4762, 70
label$4762:
	.value	3
	.quad	.LC2360
	.value	3
	.quad	.LC2350
	.value	1
	.quad	.LC181
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_LDA
	.value	-1
	.quad	label$4764
	.section	.rodata.str1.1
.LC2361:
	.string	"170"
.LC2362:
	.string	"TAX"
	.section	.data.rel.local
	.align 32
	.type	label$4764, @object
	.size	label$4764, 70
label$4764:
	.value	3
	.quad	.LC2361
	.value	3
	.quad	.LC2362
	.value	1
	.quad	.LC180
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_TAX
	.value	-1
	.quad	label$4766
	.section	.rodata.str1.1
.LC2363:
	.string	"171"
	.section	.data.rel.local
	.align 32
	.type	label$4766, @object
	.size	label$4766, 70
label$4766:
	.value	3
	.quad	.LC2363
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4768
	.section	.rodata.str1.1
.LC2364:
	.string	"172"
	.section	.data.rel.local
	.align 32
	.type	label$4768, @object
	.size	label$4768, 70
label$4768:
	.value	3
	.quad	.LC2364
	.value	3
	.quad	.LC2348
	.value	1
	.quad	.LC182
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_LDY
	.value	-1
	.quad	label$4770
	.section	.rodata.str1.1
.LC2365:
	.string	"173"
	.section	.data.rel.local
	.align 32
	.type	label$4770, @object
	.size	label$4770, 70
label$4770:
	.value	3
	.quad	.LC2365
	.value	3
	.quad	.LC2350
	.value	1
	.quad	.LC182
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_LDA
	.value	-1
	.quad	label$4772
	.section	.rodata.str1.1
.LC2366:
	.string	"174"
	.section	.data.rel.local
	.align 32
	.type	label$4772, @object
	.size	label$4772, 70
label$4772:
	.value	3
	.quad	.LC2366
	.value	3
	.quad	.LC2352
	.value	1
	.quad	.LC182
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_LDX
	.value	-1
	.quad	label$4774
	.section	.rodata.str1.1
.LC2367:
	.string	"175"
	.section	.data.rel.local
	.align 32
	.type	label$4774, @object
	.size	label$4774, 70
label$4774:
	.value	3
	.quad	.LC2367
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4776
	.section	.rodata.str1.1
.LC2368:
	.string	"176"
.LC2369:
	.string	"BCS"
	.section	.data.rel.local
	.align 32
	.type	label$4776, @object
	.size	label$4776, 70
label$4776:
	.value	3
	.quad	.LC2368
	.value	3
	.quad	.LC2369
	.value	1
	.quad	.LC188
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_BCS
	.value	-1
	.quad	label$4778
	.section	.rodata.str1.1
.LC2370:
	.string	"177"
	.section	.data.rel.local
	.align 32
	.type	label$4778, @object
	.size	label$4778, 70
label$4778:
	.value	3
	.quad	.LC2370
	.value	3
	.quad	.LC2350
	.value	2
	.quad	.LC2167
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_LDA
	.value	-1
	.quad	label$4780
	.section	.rodata.str1.1
.LC2371:
	.string	"178"
	.section	.data.rel.local
	.align 32
	.type	label$4780, @object
	.size	label$4780, 70
label$4780:
	.value	3
	.quad	.LC2371
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4782
	.section	.rodata.str1.1
.LC2372:
	.string	"179"
	.section	.data.rel.local
	.align 32
	.type	label$4782, @object
	.size	label$4782, 70
label$4782:
	.value	3
	.quad	.LC2372
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4784
	.section	.rodata.str1.1
.LC2373:
	.string	"180"
	.section	.data.rel.local
	.align 32
	.type	label$4784, @object
	.size	label$4784, 70
label$4784:
	.value	3
	.quad	.LC2373
	.value	3
	.quad	.LC2348
	.value	1
	.quad	.LC184
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_LDY
	.value	-1
	.quad	label$4786
	.section	.rodata.str1.1
.LC2374:
	.string	"181"
	.section	.data.rel.local
	.align 32
	.type	label$4786, @object
	.size	label$4786, 70
label$4786:
	.value	3
	.quad	.LC2374
	.value	3
	.quad	.LC2350
	.value	1
	.quad	.LC184
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_LDA
	.value	-1
	.quad	label$4788
	.section	.rodata.str1.1
.LC2375:
	.string	"182"
	.section	.data.rel.local
	.align 32
	.type	label$4788, @object
	.size	label$4788, 70
label$4788:
	.value	3
	.quad	.LC2375
	.value	3
	.quad	.LC2352
	.value	1
	.quad	.LC185
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_LDX
	.value	-1
	.quad	label$4790
	.section	.rodata.str1.1
.LC2376:
	.string	"183"
	.section	.data.rel.local
	.align 32
	.type	label$4790, @object
	.size	label$4790, 70
label$4790:
	.value	3
	.quad	.LC2376
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4792
	.section	.rodata.str1.1
.LC2377:
	.string	"184"
.LC2378:
	.string	"CLV"
	.section	.data.rel.local
	.align 32
	.type	label$4792, @object
	.size	label$4792, 70
label$4792:
	.value	3
	.quad	.LC2377
	.value	3
	.quad	.LC2378
	.value	1
	.quad	.LC180
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_CLV
	.value	-1
	.quad	label$4794
	.section	.rodata.str1.1
.LC2379:
	.string	"185"
	.section	.data.rel.local
	.align 32
	.type	label$4794, @object
	.size	label$4794, 70
label$4794:
	.value	3
	.quad	.LC2379
	.value	3
	.quad	.LC2350
	.value	1
	.quad	.LC187
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_LDA
	.value	-1
	.quad	label$4796
	.section	.rodata.str1.1
.LC2380:
	.string	"186"
.LC2381:
	.string	"TSX"
	.section	.data.rel.local
	.align 32
	.type	label$4796, @object
	.size	label$4796, 70
label$4796:
	.value	3
	.quad	.LC2380
	.value	3
	.quad	.LC2381
	.value	1
	.quad	.LC180
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_TSX
	.value	-1
	.quad	label$4798
	.section	.rodata.str1.1
.LC2382:
	.string	"187"
	.section	.data.rel.local
	.align 32
	.type	label$4798, @object
	.size	label$4798, 70
label$4798:
	.value	3
	.quad	.LC2382
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4800
	.section	.rodata.str1.1
.LC2383:
	.string	"188"
	.section	.data.rel.local
	.align 32
	.type	label$4800, @object
	.size	label$4800, 70
label$4800:
	.value	3
	.quad	.LC2383
	.value	3
	.quad	.LC2348
	.value	1
	.quad	.LC186
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_LDY
	.value	-1
	.quad	label$4802
	.section	.rodata.str1.1
.LC2384:
	.string	"189"
	.section	.data.rel.local
	.align 32
	.type	label$4802, @object
	.size	label$4802, 70
label$4802:
	.value	3
	.quad	.LC2384
	.value	3
	.quad	.LC2350
	.value	1
	.quad	.LC186
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_LDA
	.value	-1
	.quad	label$4804
	.section	.rodata.str1.1
.LC2385:
	.string	"190"
	.section	.data.rel.local
	.align 32
	.type	label$4804, @object
	.size	label$4804, 70
label$4804:
	.value	3
	.quad	.LC2385
	.value	3
	.quad	.LC2352
	.value	1
	.quad	.LC187
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_LDX
	.value	-1
	.quad	label$4806
	.section	.rodata.str1.1
.LC2386:
	.string	"191"
	.section	.data.rel.local
	.align 32
	.type	label$4806, @object
	.size	label$4806, 70
label$4806:
	.value	3
	.quad	.LC2386
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4808
	.section	.rodata.str1.1
.LC2387:
	.string	"192"
.LC2388:
	.string	"CPY"
	.section	.data.rel.local
	.align 32
	.type	label$4808, @object
	.size	label$4808, 70
label$4808:
	.value	3
	.quad	.LC2387
	.value	3
	.quad	.LC2388
	.value	1
	.quad	.LC181
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_CPY
	.value	-1
	.quad	label$4810
	.section	.rodata.str1.1
.LC2389:
	.string	"193"
.LC2390:
	.string	"CMP"
	.section	.data.rel.local
	.align 32
	.type	label$4810, @object
	.size	label$4810, 70
label$4810:
	.value	3
	.quad	.LC2389
	.value	3
	.quad	.LC2390
	.value	2
	.quad	.LC2160
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_CMP
	.value	-1
	.quad	label$4812
	.section	.rodata.str1.1
.LC2391:
	.string	"194"
	.section	.data.rel.local
	.align 32
	.type	label$4812, @object
	.size	label$4812, 70
label$4812:
	.value	3
	.quad	.LC2391
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4814
	.section	.rodata.str1.1
.LC2392:
	.string	"195"
	.section	.data.rel.local
	.align 32
	.type	label$4814, @object
	.size	label$4814, 70
label$4814:
	.value	3
	.quad	.LC2392
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4816
	.section	.rodata.str1.1
.LC2393:
	.string	"196"
	.section	.data.rel.local
	.align 32
	.type	label$4816, @object
	.size	label$4816, 70
label$4816:
	.value	3
	.quad	.LC2393
	.value	3
	.quad	.LC2388
	.value	1
	.quad	.LC183
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_CPY
	.value	-1
	.quad	label$4818
	.section	.rodata.str1.1
.LC2394:
	.string	"197"
	.section	.data.rel.local
	.align 32
	.type	label$4818, @object
	.size	label$4818, 70
label$4818:
	.value	3
	.quad	.LC2394
	.value	3
	.quad	.LC2390
	.value	1
	.quad	.LC183
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_CMP
	.value	-1
	.quad	label$4820
	.section	.rodata.str1.1
.LC2395:
	.string	"198"
.LC2396:
	.string	"DEC"
	.section	.data.rel.local
	.align 32
	.type	label$4820, @object
	.size	label$4820, 70
label$4820:
	.value	3
	.quad	.LC2395
	.value	3
	.quad	.LC2396
	.value	1
	.quad	.LC183
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_DEC
	.value	-1
	.quad	label$4822
	.section	.rodata.str1.1
.LC2397:
	.string	"199"
	.section	.data.rel.local
	.align 32
	.type	label$4822, @object
	.size	label$4822, 70
label$4822:
	.value	3
	.quad	.LC2397
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4824
	.section	.rodata.str1.1
.LC2398:
	.string	"200"
.LC2399:
	.string	"INY"
	.section	.data.rel.local
	.align 32
	.type	label$4824, @object
	.size	label$4824, 70
label$4824:
	.value	3
	.quad	.LC2398
	.value	3
	.quad	.LC2399
	.value	1
	.quad	.LC180
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_INY
	.value	-1
	.quad	label$4826
	.section	.rodata.str1.1
.LC2400:
	.string	"201"
	.section	.data.rel.local
	.align 32
	.type	label$4826, @object
	.size	label$4826, 70
label$4826:
	.value	3
	.quad	.LC2400
	.value	3
	.quad	.LC2390
	.value	1
	.quad	.LC181
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_CMP
	.value	-1
	.quad	label$4828
	.section	.rodata.str1.1
.LC2401:
	.string	"202"
.LC2402:
	.string	"DEX"
	.section	.data.rel.local
	.align 32
	.type	label$4828, @object
	.size	label$4828, 70
label$4828:
	.value	3
	.quad	.LC2401
	.value	3
	.quad	.LC2402
	.value	1
	.quad	.LC180
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_DEX
	.value	-1
	.quad	label$4830
	.section	.rodata.str1.1
.LC2403:
	.string	"203"
	.section	.data.rel.local
	.align 32
	.type	label$4830, @object
	.size	label$4830, 70
label$4830:
	.value	3
	.quad	.LC2403
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4832
	.section	.rodata.str1.1
.LC2404:
	.string	"204"
	.section	.data.rel.local
	.align 32
	.type	label$4832, @object
	.size	label$4832, 70
label$4832:
	.value	3
	.quad	.LC2404
	.value	3
	.quad	.LC2388
	.value	1
	.quad	.LC182
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_CPY
	.value	-1
	.quad	label$4834
	.section	.rodata.str1.1
.LC2405:
	.string	"205"
	.section	.data.rel.local
	.align 32
	.type	label$4834, @object
	.size	label$4834, 70
label$4834:
	.value	3
	.quad	.LC2405
	.value	3
	.quad	.LC2390
	.value	1
	.quad	.LC182
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_CMP
	.value	-1
	.quad	label$4836
	.section	.rodata.str1.1
.LC2406:
	.string	"206"
	.section	.data.rel.local
	.align 32
	.type	label$4836, @object
	.size	label$4836, 70
label$4836:
	.value	3
	.quad	.LC2406
	.value	3
	.quad	.LC2396
	.value	1
	.quad	.LC182
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_DEC
	.value	-1
	.quad	label$4838
	.section	.rodata.str1.1
.LC2407:
	.string	"207"
	.section	.data.rel.local
	.align 32
	.type	label$4838, @object
	.size	label$4838, 70
label$4838:
	.value	3
	.quad	.LC2407
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4840
	.section	.rodata.str1.1
.LC2408:
	.string	"208"
.LC2409:
	.string	"BNE"
	.section	.data.rel.local
	.align 32
	.type	label$4840, @object
	.size	label$4840, 70
label$4840:
	.value	3
	.quad	.LC2408
	.value	3
	.quad	.LC2409
	.value	1
	.quad	.LC188
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_BNE
	.value	-1
	.quad	label$4842
	.section	.rodata.str1.1
.LC2410:
	.string	"209"
	.section	.data.rel.local
	.align 32
	.type	label$4842, @object
	.size	label$4842, 70
label$4842:
	.value	3
	.quad	.LC2410
	.value	3
	.quad	.LC2390
	.value	2
	.quad	.LC2167
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_CMP
	.value	-1
	.quad	label$4844
	.section	.rodata.str1.1
.LC2411:
	.string	"210"
	.section	.data.rel.local
	.align 32
	.type	label$4844, @object
	.size	label$4844, 70
label$4844:
	.value	3
	.quad	.LC2411
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4846
	.section	.rodata.str1.1
.LC2412:
	.string	"211"
	.section	.data.rel.local
	.align 32
	.type	label$4846, @object
	.size	label$4846, 70
label$4846:
	.value	3
	.quad	.LC2412
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4848
	.section	.rodata.str1.1
.LC2413:
	.string	"212"
	.section	.data.rel.local
	.align 32
	.type	label$4848, @object
	.size	label$4848, 70
label$4848:
	.value	3
	.quad	.LC2413
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4850
	.section	.rodata.str1.1
.LC2414:
	.string	"213"
	.section	.data.rel.local
	.align 32
	.type	label$4850, @object
	.size	label$4850, 70
label$4850:
	.value	3
	.quad	.LC2414
	.value	3
	.quad	.LC2390
	.value	1
	.quad	.LC184
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_CMP
	.value	-1
	.quad	label$4852
	.section	.rodata.str1.1
.LC2415:
	.string	"214"
	.section	.data.rel.local
	.align 32
	.type	label$4852, @object
	.size	label$4852, 70
label$4852:
	.value	3
	.quad	.LC2415
	.value	3
	.quad	.LC2396
	.value	1
	.quad	.LC184
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_DEC
	.value	-1
	.quad	label$4854
	.section	.rodata.str1.1
.LC2416:
	.string	"215"
	.section	.data.rel.local
	.align 32
	.type	label$4854, @object
	.size	label$4854, 70
label$4854:
	.value	3
	.quad	.LC2416
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4856
	.section	.rodata.str1.1
.LC2417:
	.string	"216"
.LC2418:
	.string	"CLD"
	.section	.data.rel.local
	.align 32
	.type	label$4856, @object
	.size	label$4856, 70
label$4856:
	.value	3
	.quad	.LC2417
	.value	3
	.quad	.LC2418
	.value	1
	.quad	.LC180
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_CLD
	.value	-1
	.quad	label$4858
	.section	.rodata.str1.1
.LC2419:
	.string	"217"
	.section	.data.rel.local
	.align 32
	.type	label$4858, @object
	.size	label$4858, 70
label$4858:
	.value	3
	.quad	.LC2419
	.value	3
	.quad	.LC2390
	.value	1
	.quad	.LC187
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_CMP
	.value	-1
	.quad	label$4860
	.section	.rodata.str1.1
.LC2420:
	.string	"218"
	.section	.data.rel.local
	.align 32
	.type	label$4860, @object
	.size	label$4860, 70
label$4860:
	.value	3
	.quad	.LC2420
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4862
	.section	.rodata.str1.1
.LC2421:
	.string	"219"
	.section	.data.rel.local
	.align 32
	.type	label$4862, @object
	.size	label$4862, 70
label$4862:
	.value	3
	.quad	.LC2421
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4864
	.section	.rodata.str1.1
.LC2422:
	.string	"220"
	.section	.data.rel.local
	.align 32
	.type	label$4864, @object
	.size	label$4864, 70
label$4864:
	.value	3
	.quad	.LC2422
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4866
	.section	.rodata.str1.1
.LC2423:
	.string	"221"
	.section	.data.rel.local
	.align 32
	.type	label$4866, @object
	.size	label$4866, 70
label$4866:
	.value	3
	.quad	.LC2423
	.value	3
	.quad	.LC2390
	.value	1
	.quad	.LC186
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_CMP
	.value	-1
	.quad	label$4868
	.section	.rodata.str1.1
.LC2424:
	.string	"222"
	.section	.data.rel.local
	.align 32
	.type	label$4868, @object
	.size	label$4868, 70
label$4868:
	.value	3
	.quad	.LC2424
	.value	3
	.quad	.LC2396
	.value	1
	.quad	.LC186
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_DEC
	.value	-1
	.quad	label$4870
	.section	.rodata.str1.1
.LC2425:
	.string	"223"
	.section	.data.rel.local
	.align 32
	.type	label$4870, @object
	.size	label$4870, 70
label$4870:
	.value	3
	.quad	.LC2425
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4872
	.section	.rodata.str1.1
.LC2426:
	.string	"224"
.LC2427:
	.string	"CPX"
	.section	.data.rel.local
	.align 32
	.type	label$4872, @object
	.size	label$4872, 70
label$4872:
	.value	3
	.quad	.LC2426
	.value	3
	.quad	.LC2427
	.value	1
	.quad	.LC181
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_CPX
	.value	-1
	.quad	label$4874
	.section	.rodata.str1.1
.LC2428:
	.string	"225"
.LC2429:
	.string	"SBC"
	.section	.data.rel.local
	.align 32
	.type	label$4874, @object
	.size	label$4874, 70
label$4874:
	.value	3
	.quad	.LC2428
	.value	3
	.quad	.LC2429
	.value	2
	.quad	.LC2160
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_SBC
	.value	-1
	.quad	label$4876
	.section	.rodata.str1.1
.LC2430:
	.string	"226"
	.section	.data.rel.local
	.align 32
	.type	label$4876, @object
	.size	label$4876, 70
label$4876:
	.value	3
	.quad	.LC2430
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4878
	.section	.rodata.str1.1
.LC2431:
	.string	"227"
	.section	.data.rel.local
	.align 32
	.type	label$4878, @object
	.size	label$4878, 70
label$4878:
	.value	3
	.quad	.LC2431
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4880
	.section	.rodata.str1.1
.LC2432:
	.string	"228"
	.section	.data.rel.local
	.align 32
	.type	label$4880, @object
	.size	label$4880, 70
label$4880:
	.value	3
	.quad	.LC2432
	.value	3
	.quad	.LC2427
	.value	1
	.quad	.LC183
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_CPX
	.value	-1
	.quad	label$4882
	.section	.rodata.str1.1
.LC2433:
	.string	"229"
	.section	.data.rel.local
	.align 32
	.type	label$4882, @object
	.size	label$4882, 70
label$4882:
	.value	3
	.quad	.LC2433
	.value	3
	.quad	.LC2429
	.value	1
	.quad	.LC183
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_SBC
	.value	-1
	.quad	label$4884
	.section	.rodata.str1.1
.LC2434:
	.string	"230"
.LC2435:
	.string	"INC"
	.section	.data.rel.local
	.align 32
	.type	label$4884, @object
	.size	label$4884, 70
label$4884:
	.value	3
	.quad	.LC2434
	.value	3
	.quad	.LC2435
	.value	1
	.quad	.LC183
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_INC
	.value	-1
	.quad	label$4886
	.section	.rodata.str1.1
.LC2436:
	.string	"231"
	.section	.data.rel.local
	.align 32
	.type	label$4886, @object
	.size	label$4886, 70
label$4886:
	.value	3
	.quad	.LC2436
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4888
	.section	.rodata.str1.1
.LC2437:
	.string	"232"
.LC2438:
	.string	"INX"
	.section	.data.rel.local
	.align 32
	.type	label$4888, @object
	.size	label$4888, 70
label$4888:
	.value	3
	.quad	.LC2437
	.value	3
	.quad	.LC2438
	.value	1
	.quad	.LC180
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_INX
	.value	-1
	.quad	label$4890
	.section	.rodata.str1.1
.LC2439:
	.string	"233"
	.section	.data.rel.local
	.align 32
	.type	label$4890, @object
	.size	label$4890, 70
label$4890:
	.value	3
	.quad	.LC2439
	.value	3
	.quad	.LC2429
	.value	1
	.quad	.LC181
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_SBC
	.value	-1
	.quad	label$4892
	.section	.rodata.str1.1
.LC2440:
	.string	"234"
.LC2441:
	.string	"NOP"
	.section	.data.rel.local
	.align 32
	.type	label$4892, @object
	.size	label$4892, 70
label$4892:
	.value	3
	.quad	.LC2440
	.value	3
	.quad	.LC2441
	.value	1
	.quad	.LC180
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_NOP
	.value	-1
	.quad	label$4894
	.section	.rodata.str1.1
.LC2442:
	.string	"235"
	.section	.data.rel.local
	.align 32
	.type	label$4894, @object
	.size	label$4894, 70
label$4894:
	.value	3
	.quad	.LC2442
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4896
	.section	.rodata.str1.1
.LC2443:
	.string	"236"
	.section	.data.rel.local
	.align 32
	.type	label$4896, @object
	.size	label$4896, 70
label$4896:
	.value	3
	.quad	.LC2443
	.value	3
	.quad	.LC2427
	.value	1
	.quad	.LC182
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_CPX
	.value	-1
	.quad	label$4898
	.section	.rodata.str1.1
.LC2444:
	.string	"237"
	.section	.data.rel.local
	.align 32
	.type	label$4898, @object
	.size	label$4898, 70
label$4898:
	.value	3
	.quad	.LC2444
	.value	3
	.quad	.LC2429
	.value	1
	.quad	.LC182
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_SBC
	.value	-1
	.quad	label$4900
	.section	.rodata.str1.1
.LC2445:
	.string	"238"
	.section	.data.rel.local
	.align 32
	.type	label$4900, @object
	.size	label$4900, 70
label$4900:
	.value	3
	.quad	.LC2445
	.value	3
	.quad	.LC2435
	.value	1
	.quad	.LC182
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_INC
	.value	-1
	.quad	label$4902
	.section	.rodata.str1.1
.LC2446:
	.string	"239"
	.section	.data.rel.local
	.align 32
	.type	label$4902, @object
	.size	label$4902, 70
label$4902:
	.value	3
	.quad	.LC2446
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4904
	.section	.rodata.str1.1
.LC2447:
	.string	"240"
.LC2448:
	.string	"BEQ"
	.section	.data.rel.local
	.align 32
	.type	label$4904, @object
	.size	label$4904, 70
label$4904:
	.value	3
	.quad	.LC2447
	.value	3
	.quad	.LC2448
	.value	1
	.quad	.LC188
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_BEQ
	.value	-1
	.quad	label$4906
	.section	.rodata.str1.1
.LC2449:
	.string	"241"
	.section	.data.rel.local
	.align 32
	.type	label$4906, @object
	.size	label$4906, 70
label$4906:
	.value	3
	.quad	.LC2449
	.value	3
	.quad	.LC2429
	.value	2
	.quad	.LC2167
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_SBC
	.value	-1
	.quad	label$4908
	.section	.rodata.str1.1
.LC2450:
	.string	"242"
	.section	.data.rel.local
	.align 32
	.type	label$4908, @object
	.size	label$4908, 70
label$4908:
	.value	3
	.quad	.LC2450
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4910
	.section	.rodata.str1.1
.LC2451:
	.string	"243"
	.section	.data.rel.local
	.align 32
	.type	label$4910, @object
	.size	label$4910, 70
label$4910:
	.value	3
	.quad	.LC2451
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4912
	.section	.rodata.str1.1
.LC2452:
	.string	"244"
	.section	.data.rel.local
	.align 32
	.type	label$4912, @object
	.size	label$4912, 70
label$4912:
	.value	3
	.quad	.LC2452
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4914
	.section	.rodata.str1.1
.LC2453:
	.string	"245"
	.section	.data.rel.local
	.align 32
	.type	label$4914, @object
	.size	label$4914, 70
label$4914:
	.value	3
	.quad	.LC2453
	.value	3
	.quad	.LC2429
	.value	1
	.quad	.LC184
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_SBC
	.value	-1
	.quad	label$4916
	.section	.rodata.str1.1
.LC2454:
	.string	"246"
	.section	.data.rel.local
	.align 32
	.type	label$4916, @object
	.size	label$4916, 70
label$4916:
	.value	3
	.quad	.LC2454
	.value	3
	.quad	.LC2435
	.value	1
	.quad	.LC184
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_INC
	.value	-1
	.quad	label$4918
	.section	.rodata.str1.1
.LC2455:
	.string	"247"
	.section	.data.rel.local
	.align 32
	.type	label$4918, @object
	.size	label$4918, 70
label$4918:
	.value	3
	.quad	.LC2455
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4920
	.section	.rodata.str1.1
.LC2456:
	.string	"248"
.LC2457:
	.string	"SED"
	.section	.data.rel.local
	.align 32
	.type	label$4920, @object
	.size	label$4920, 70
label$4920:
	.value	3
	.quad	.LC2456
	.value	3
	.quad	.LC2457
	.value	1
	.quad	.LC180
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_SED
	.value	-1
	.quad	label$4922
	.section	.rodata.str1.1
.LC2458:
	.string	"249"
	.section	.data.rel.local
	.align 32
	.type	label$4922, @object
	.size	label$4922, 70
label$4922:
	.value	3
	.quad	.LC2458
	.value	3
	.quad	.LC2429
	.value	1
	.quad	.LC187
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_SBC
	.value	-1
	.quad	label$4924
	.section	.rodata.str1.1
.LC2459:
	.string	"250"
	.section	.data.rel.local
	.align 32
	.type	label$4924, @object
	.size	label$4924, 70
label$4924:
	.value	3
	.quad	.LC2459
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4926
	.section	.rodata.str1.1
.LC2460:
	.string	"251"
	.section	.data.rel.local
	.align 32
	.type	label$4926, @object
	.size	label$4926, 70
label$4926:
	.value	3
	.quad	.LC2460
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4928
	.section	.rodata.str1.1
.LC2461:
	.string	"252"
	.section	.data.rel.local
	.align 32
	.type	label$4928, @object
	.size	label$4928, 70
label$4928:
	.value	3
	.quad	.LC2461
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4930
	.section	.rodata.str1.1
.LC2462:
	.string	"253"
	.section	.data.rel.local
	.align 32
	.type	label$4930, @object
	.size	label$4930, 70
label$4930:
	.value	3
	.quad	.LC2462
	.value	3
	.quad	.LC2429
	.value	1
	.quad	.LC186
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_SBC
	.value	-1
	.quad	label$4932
	.section	.rodata.str1.1
.LC2463:
	.string	"254"
	.section	.data.rel.local
	.align 32
	.type	label$4932, @object
	.size	label$4932, 70
label$4932:
	.value	3
	.quad	.LC2463
	.value	3
	.quad	.LC2435
	.value	1
	.quad	.LC186
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_INC
	.value	-1
	.quad	label$4934
	.section	.rodata.str1.1
.LC2464:
	.string	"255"
	.section	.data.rel.local
	.align 32
	.type	label$4934, @object
	.size	label$4934, 70
label$4934:
	.value	3
	.quad	.LC2464
	.value	3
	.quad	.LC2168
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	1
	.quad	.LC179
	.value	-2
	.quad	INS_UNK
	.value	-1
	.quad	label$4045
	.section	.rodata.str1.1
.LC2465:
	.string	"UNK"
	.section	.data.rel.local
	.align 16
	.type	label$4045, @object
	.size	label$4045, 20
label$4045:
	.value	3
	.quad	.LC2465
	.value	-1
	.quad	label$4936
	.section	.rodata.str1.1
.LC2466:
	.string	"IMP"
	.section	.data.rel.local
	.align 16
	.type	label$4936, @object
	.size	label$4936, 20
label$4936:
	.value	3
	.quad	.LC2466
	.value	-1
	.quad	label$4938
	.section	.rodata.str1.1
.LC2467:
	.string	"IMM"
	.section	.data.rel.local
	.align 16
	.type	label$4938, @object
	.size	label$4938, 20
label$4938:
	.value	3
	.quad	.LC2467
	.value	-1
	.quad	label$4940
	.section	.rodata.str1.1
.LC2468:
	.string	"ABS"
	.section	.data.rel.local
	.align 16
	.type	label$4940, @object
	.size	label$4940, 20
label$4940:
	.value	3
	.quad	.LC2468
	.value	-1
	.quad	label$4942
	.section	.rodata.str1.1
.LC2469:
	.string	"ZERO"
	.section	.data.rel.local
	.align 16
	.type	label$4942, @object
	.size	label$4942, 20
label$4942:
	.value	4
	.quad	.LC2469
	.value	-1
	.quad	label$4944
	.section	.rodata.str1.1
.LC2470:
	.string	"ZEROX"
	.section	.data.rel.local
	.align 16
	.type	label$4944, @object
	.size	label$4944, 20
label$4944:
	.value	5
	.quad	.LC2470
	.value	-1
	.quad	label$4946
	.section	.rodata.str1.1
.LC2471:
	.string	"ZEROY"
	.section	.data.rel.local
	.align 16
	.type	label$4946, @object
	.size	label$4946, 20
label$4946:
	.value	5
	.quad	.LC2471
	.value	-1
	.quad	label$4948
	.section	.rodata.str1.1
.LC2472:
	.string	"ABSX"
	.section	.data.rel.local
	.align 16
	.type	label$4948, @object
	.size	label$4948, 20
label$4948:
	.value	4
	.quad	.LC2472
	.value	-1
	.quad	label$4950
	.section	.rodata.str1.1
.LC2473:
	.string	"ABSY"
	.section	.data.rel.local
	.align 16
	.type	label$4950, @object
	.size	label$4950, 20
label$4950:
	.value	4
	.quad	.LC2473
	.value	-1
	.quad	label$4952
	.section	.rodata.str1.1
.LC2474:
	.string	"REL"
	.section	.data.rel.local
	.align 16
	.type	label$4952, @object
	.size	label$4952, 20
label$4952:
	.value	3
	.quad	.LC2474
	.value	-1
	.quad	label$4954
	.section	.rodata.str1.1
.LC2475:
	.string	"INDX"
	.section	.data.rel.local
	.align 16
	.type	label$4954, @object
	.size	label$4954, 20
label$4954:
	.value	4
	.quad	.LC2475
	.value	-1
	.quad	label$4956
	.section	.rodata.str1.1
.LC2476:
	.string	"INDY"
	.section	.data.rel.local
	.align 16
	.type	label$4956, @object
	.size	label$4956, 20
label$4956:
	.value	4
	.quad	.LC2476
	.value	-1
	.quad	label$4958
	.section	.rodata.str1.1
.LC2477:
	.string	"IND"
	.section	.data.rel.local
	.align 16
	.type	label$4958, @object
	.size	label$4958, 20
label$4958:
	.value	3
	.quad	.LC2477
	.value	-1
	.quad	0
	.local	FLAG$
	.comm	FLAG$,8,8
	.local	CARY$
	.comm	CARY$,8,8
	.local	YS$
	.comm	YS$,8,8
	.local	XS$
	.comm	XS$,8,8
	.local	Y$
	.comm	Y$,8,8
	.local	X$
	.comm	X$,8,8
	.local	C$
	.comm	C$,8,8
	.local	BD_COLOR$
	.comm	BD_COLOR$,8,8
	.local	EOL$
	.comm	EOL$,24,16
	.local	GET_DATA$
	.comm	GET_DATA$,24,16
	.local	STRING_DATA$
	.comm	STRING_DATA$,24,16
	.local	STRING_ADR$
	.comm	STRING_ADR$,4,4
	.local	PIXEL_SIZE$
	.comm	PIXEL_SIZE$,4,4
	.data
	.align 4
	.type	BITMASK$, @object
	.size	BITMASK$, 4
BITMASK$:
	.long	255
	.align 4
	.type	CHAR_BUFFER$, @object
	.size	CHAR_BUFFER$, 4
CHAR_BUFFER$:
	.long	16384
	.align 4
	.type	CHAR_W$, @object
	.size	CHAR_W$, 4
CHAR_W$:
	.long	1119092736
	.align 4
	.type	CHAR_H$, @object
	.size	CHAR_H$, 4
CHAR_H$:
	.long	1119092736
	.local	RADIUS$
	.comm	RADIUS$,8,8
	.local	R3$
	.comm	R3$,4,4
	.local	PC$
	.comm	PC$,8,8
	.local	GLUNIFORM1I$
	.comm	GLUNIFORM1I$,8,8
	.local	GLUNIFORM4F$
	.comm	GLUNIFORM4F$,8,8
	.local	GLUNIFORM3F$
	.comm	GLUNIFORM3F$,8,8
	.local	GLUNIFORM1F$
	.comm	GLUNIFORM1F$,8,8
	.local	GLGETUNIFORMLOCATION$
	.comm	GLGETUNIFORMLOCATION$,8,8
	.local	GLUSEPROGRAM$
	.comm	GLUSEPROGRAM$,8,8
	.local	GLGETPROGRAMINFOLOG$
	.comm	GLGETPROGRAMINFOLOG$,8,8
	.local	GLGETPROGRAMIV$
	.comm	GLGETPROGRAMIV$,8,8
	.local	GLLINKPROGRAM$
	.comm	GLLINKPROGRAM$,8,8
	.local	GLDETACHSHADER$
	.comm	GLDETACHSHADER$,8,8
	.local	GLATTACHSHADER$
	.comm	GLATTACHSHADER$,8,8
	.local	GLDELETEPROGRAM$
	.comm	GLDELETEPROGRAM$,8,8
	.local	GLCREATEPROGRAM$
	.comm	GLCREATEPROGRAM$,8,8
	.local	GLGETSHADERINFOLOG$
	.comm	GLGETSHADERINFOLOG$,8,8
	.local	GLGETSHADERIV$
	.comm	GLGETSHADERIV$,8,8
	.local	GLCOMPILESHADER$
	.comm	GLCOMPILESHADER$,8,8
	.local	GLSHADERSOURCE$
	.comm	GLSHADERSOURCE$,8,8
	.local	GLDELETESHADER$
	.comm	GLDELETESHADER$,8,8
	.local	GLCREATESHADER$
	.comm	GLCREATESHADER$,8,8
	.align 2
	.type	INDEX$, @object
	.size	INDEX$, 2
INDEX$:
	.value	34
	.section	.rodata.cst8,"aM",@progbits,8
	.align 8
.LC0:
	.long	0
	.long	0
	.align 8
.LC1:
	.long	0
	.long	1072693248
	.align 8
.LC4:
	.long	0
	.long	1071775744
	.align 8
.LC5:
	.long	0
	.long	1075970048
	.align 8
.LC6:
	.long	0
	.long	1076887552
	.align 8
.LC7:
	.long	32
	.long	24
	.align 8
.LC8:
	.long	24
	.long	16
	.align 8
.LC9:
	.long	32
	.long	16
	.align 8
.LC73:
	.long	0
	.long	1077936128
	.align 8
.LC74:
	.long	0
	.long	1077968896
	.align 8
.LC75:
	.long	0
	.long	1078001664
	.align 8
.LC76:
	.long	0
	.long	1078034432
	.align 8
.LC77:
	.long	0
	.long	1078067200
	.align 8
.LC78:
	.long	0
	.long	1078099968
	.align 8
.LC79:
	.long	0
	.long	1078132736
	.align 8
.LC80:
	.long	0
	.long	1078165504
	.align 8
.LC81:
	.long	0
	.long	1078198272
	.align 8
.LC82:
	.long	0
	.long	1078231040
	.align 8
.LC83:
	.long	0
	.long	1078263808
	.align 8
.LC84:
	.long	0
	.long	1078296576
	.align 8
.LC85:
	.long	0
	.long	1078329344
	.align 8
.LC86:
	.long	0
	.long	1078362112
	.align 8
.LC87:
	.long	0
	.long	1078394880
	.align 8
.LC88:
	.long	0
	.long	1078427648
	.align 8
.LC89:
	.long	0
	.long	1078460416
	.align 8
.LC90:
	.long	0
	.long	1078493184
	.align 8
.LC91:
	.long	0
	.long	1078525952
	.align 8
.LC92:
	.long	0
	.long	1078558720
	.align 8
.LC93:
	.long	0
	.long	1078591488
	.align 8
.LC94:
	.long	0
	.long	1078624256
	.align 8
.LC95:
	.long	0
	.long	1078657024
	.align 8
.LC96:
	.long	0
	.long	1078689792
	.align 8
.LC97:
	.long	0
	.long	1078722560
	.align 8
.LC98:
	.long	0
	.long	1078755328
	.align 8
.LC99:
	.long	0
	.long	1078788096
	.align 8
.LC100:
	.long	0
	.long	1078820864
	.align 8
.LC101:
	.long	0
	.long	1078853632
	.align 8
.LC102:
	.long	0
	.long	1078886400
	.align 8
.LC103:
	.long	0
	.long	1078919168
	.align 8
.LC104:
	.long	0
	.long	1078951936
	.align 8
.LC105:
	.long	0
	.long	1073741824
	.align 8
.LC106:
	.long	0
	.long	1074266112
	.align 8
.LC107:
	.long	0
	.long	1074790400
	.align 8
.LC108:
	.long	0
	.long	1075052544
	.align 8
.LC109:
	.long	0
	.long	1075314688
	.align 8
.LC110:
	.long	0
	.long	1075576832
	.align 8
.LC111:
	.long	0
	.long	1075838976
	.align 8
.LC112:
	.long	0
	.long	1076101120
	.align 8
.LC113:
	.long	0
	.long	1076232192
	.align 8
.LC114:
	.long	0
	.long	1076363264
	.align 8
.LC115:
	.long	0
	.long	1076494336
	.align 8
.LC116:
	.long	0
	.long	1076625408
	.align 8
.LC117:
	.long	0
	.long	1076756480
	.align 8
.LC118:
	.long	0
	.long	1076953088
	.align 8
.LC119:
	.long	0
	.long	1077018624
	.align 8
.LC120:
	.long	0
	.long	1077084160
	.align 8
.LC121:
	.long	0
	.long	1077149696
	.align 8
.LC122:
	.long	0
	.long	1077215232
	.align 8
.LC123:
	.long	0
	.long	1077280768
	.align 8
.LC124:
	.long	0
	.long	1077346304
	.align 8
.LC125:
	.long	0
	.long	1077411840
	.align 8
.LC126:
	.long	0
	.long	1077477376
	.align 8
.LC127:
	.long	0
	.long	1077542912
	.align 8
.LC128:
	.long	0
	.long	1077608448
	.align 8
.LC129:
	.long	0
	.long	1077673984
	.align 8
.LC130:
	.long	0
	.long	1077739520
	.align 8
.LC131:
	.long	0
	.long	1077805056
	.align 8
.LC132:
	.long	0
	.long	1077870592
	.align 8
.LC133:
	.long	0
	.long	1080033280
	.align 8
.LC134:
	.long	0
	.long	1080041472
	.align 8
.LC135:
	.long	0
	.long	1080049664
	.align 8
.LC136:
	.long	0
	.long	1080057856
	.align 8
.LC137:
	.long	0
	.long	1080066048
	.align 8
.LC138:
	.long	0
	.long	1080074240
	.align 8
.LC139:
	.long	0
	.long	1080082432
	.align 8
.LC140:
	.long	0
	.long	1080090624
	.align 8
.LC141:
	.long	0
	.long	1080098816
	.align 8
.LC142:
	.long	0
	.long	1080107008
	.align 8
.LC143:
	.long	0
	.long	1080115200
	.align 8
.LC144:
	.long	0
	.long	1080123392
	.align 8
.LC145:
	.long	0
	.long	1080131584
	.align 8
.LC146:
	.long	0
	.long	1080139776
	.align 8
.LC147:
	.long	0
	.long	1080147968
	.align 8
.LC148:
	.long	0
	.long	1080156160
	.align 8
.LC149:
	.long	0
	.long	1080164352
	.align 8
.LC150:
	.long	0
	.long	1080172544
	.align 8
.LC151:
	.long	0
	.long	1080180736
	.align 8
.LC152:
	.long	0
	.long	1080188928
	.align 8
.LC153:
	.long	0
	.long	1080197120
	.align 8
.LC154:
	.long	0
	.long	1080205312
	.align 8
.LC155:
	.long	0
	.long	1080213504
	.align 8
.LC156:
	.long	0
	.long	1080221696
	.align 8
.LC157:
	.long	0
	.long	1080229888
	.align 8
.LC158:
	.long	0
	.long	1080238080
	.align 8
.LC159:
	.long	0
	.long	1080246272
	.align 8
.LC160:
	.long	0
	.long	1080254464
	.align 8
.LC161:
	.long	0
	.long	1080262656
	.align 8
.LC162:
	.long	0
	.long	1080270848
	.align 8
.LC163:
	.long	0
	.long	1080279040
	.section	.rodata.cst16,"aM",@progbits,16
	.align 16
.LC258:
	.long	0
	.long	-2147483648
	.long	0
	.long	0
	.section	.rodata.cst8
	.align 8
.LC259:
	.long	0
	.long	1081073664
	.align 8
.LC260:
	.long	0
	.long	1089470432
	.align 8
.LC261:
	.long	0
	.long	1089208320
	.align 8
.LC262:
	.long	0
	.long	1088946144
	.align 8
.LC263:
	.long	0
	.long	1088684032
	.align 8
.LC264:
	.long	0
	.long	1089175520
	.align 8
.LC265:
	.long	0
	.long	1089142784
	.align 8
.LC266:
	.long	0
	.long	1089109984
	.align 8
.LC267:
	.long	0
	.long	1089077248
	.align 8
.LC268:
	.long	0
	.long	1089078304
	.align 8
.LC269:
	.long	0
	.long	1088953824
	.align 8
.LC270:
	.long	0
	.long	1088951328
	.align 8
.LC271:
	.long	0
	.long	1088946464
	.align 8
.LC272:
	.long	0
	.long	1088946432
	.align 8
.LC273:
	.long	0
	.long	1088946400
	.align 8
.LC274:
	.long	0
	.long	1088946368
	.align 8
.LC275:
	.long	0
	.long	1088953792
	.align 8
.LC276:
	.long	0
	.long	1088954496
	.align 8
.LC277:
	.long	0
	.long	1080614912
	.align 8
.LC278:
	.long	0
	.long	1082404864
	.align 8
.LC279:
	.long	0
	.long	1089078016
	.align 8
.LC280:
	.long	0
	.long	1138753536
	.align 8
.LC281:
	.long	0
	.long	1088946240
	.align 8
.LC282:
	.long	0
	.long	1088946272
	.align 8
.LC283:
	.long	0
	.long	1088946304
	.align 8
.LC284:
	.long	0
	.long	1080377344
	.align 8
.LC285:
	.long	0
	.long	1079328768
	.align 8
.LC286:
	.long	0
	.long	1079066624
	.align 8
.LC287:
	.long	0
	.long	1079263232
	.align 8
.LC288:
	.long	0
	.long	1079525376
	.align 8
.LC289:
	.long	0
	.long	1079787520
	.align 8
.LC290:
	.long	0
	.long	1080311808
	.align 8
.LC291:
	.long	0
	.long	1080475648
	.align 8
.LC292:
	.long	0
	.long	1080639488
	.align 8
.LC293:
	.long	0
	.long	1080844288
	.align 8
.LC294:
	.long	0
	.long	1079001088
	.align 8
.LC295:
	.long	0
	.long	1079984128
	.align 8
.LC296:
	.long	0
	.long	1080541184
	.align 8
.LC297:
	.long	0
	.long	1080811520
	.align 8
.LC298:
	.long	0
	.long	1080606720
	.align 8
.LC299:
	.long	0
	.long	1080778752
	.align 8
.LC300:
	.long	0
	.long	1080909824
	.align 8
.LC301:
	.long	0
	.long	1079394304
	.align 8
.LC302:
	.long	0
	.long	1079656448
	.align 8
.LC303:
	.long	0
	.long	1080426496
	.align 8
.LC304:
	.long	0
	.long	1080557568
	.align 8
.LC305:
	.long	0
	.long	1079607296
	.align 8
.LC306:
	.long	0
	.long	1089077312
	.align 8
.LC307:
	.long	0
	.long	1089077376
	.align 8
.LC308:
	.long	0
	.long	1089077440
	.align 8
.LC309:
	.long	0
	.long	1089077504
	.align 8
.LC310:
	.long	0
	.long	1089077568
	.align 8
.LC311:
	.long	0
	.long	1089077632
	.align 8
.LC312:
	.long	0
	.long	1089077696
	.align 8
.LC313:
	.long	0
	.long	1083179008
	.align 8
.LC314:
	.long	0
	.long	1084227584
	.align 8
.LC315:
	.long	0
	.long	1084751872
	.align 8
.LC316:
	.long	0
	.long	1085276160
	.align 8
.LC317:
	.long	0
	.long	1085538304
	.align 8
.LC318:
	.long	0
	.long	1085800448
	.align 8
.LC319:
	.long	0
	.long	1086062592
	.align 8
.LC320:
	.long	0
	.long	1086324736
	.align 8
.LC321:
	.long	0
	.long	1086455808
	.align 8
.LC322:
	.long	0
	.long	1086586880
	.align 8
.LC323:
	.long	0
	.long	1086717952
	.align 8
.LC324:
	.long	0
	.long	1086849024
	.align 8
.LC325:
	.long	0
	.long	1086980096
	.align 8
.LC326:
	.long	0
	.long	1087111168
	.align 8
.LC327:
	.long	0
	.long	1087242240
	.align 8
.LC328:
	.long	0
	.long	1089077280
	.align 8
.LC329:
	.long	0
	.long	1089077344
	.align 8
.LC330:
	.long	0
	.long	1089077408
	.align 8
.LC331:
	.long	0
	.long	1089077472
	.align 8
.LC332:
	.long	0
	.long	1089077536
	.align 8
.LC333:
	.long	0
	.long	1089077600
	.align 8
.LC334:
	.long	0
	.long	1089077664
	.align 8
.LC335:
	.long	0
	.long	1089077728
	.align 8
.LC336:
	.long	0
	.long	1089078496
	.align 8
.LC337:
	.long	0
	.long	1089078528
	.align 8
.LC338:
	.long	0
	.long	1089078560
	.align 8
.LC339:
	.long	0
	.long	1089078592
	.align 8
.LC340:
	.long	0
	.long	1089078624
	.align 8
.LC341:
	.long	0
	.long	1089079200
	.align 8
.LC342:
	.long	0
	.long	1089079232
	.align 8
.LC343:
	.long	0
	.long	1089079264
	.align 8
.LC344:
	.long	0
	.long	1089077920
	.align 8
.LC345:
	.long	0
	.long	1089077824
	.align 8
.LC346:
	.long	0
	.long	1089078272
	.align 8
.LC348:
	.long	0
	.long	1089078336
	.align 8
.LC349:
	.long	0
	.long	1089078368
	.align 8
.LC350:
	.long	0
	.long	1089078400
	.section	.rodata.cst4,"aM",@progbits,4
	.align 4
.LC351:
	.long	1149689856
	.align 4
.LC352:
	.long	1156571136
	.section	.rodata.cst8
	.align 8
.LC353:
	.long	0
	.long	1089148896
	.align 8
.LC354:
	.long	0
	.long	1088959168
	.align 8
.LC355:
	.long	0
	.long	1088959200
	.align 8
.LC356:
	.long	0
	.long	1088959232
	.align 8
.LC357:
	.long	0
	.long	1088946176
	.align 8
.LC358:
	.long	0
	.long	1088946208
	.align 8
.LC362:
	.long	0
	.long	1088946336
	.align 8
.LC363:
	.long	0
	.long	1088946496
	.align 8
.LC364:
	.long	0
	.long	1088946688
	.align 8
.LC365:
	.long	0
	.long	1088946880
	.align 8
.LC366:
	.long	0
	.long	1088947072
	.align 8
.LC367:
	.long	0
	.long	1088947264
	.align 8
.LC368:
	.long	0
	.long	1088947456
	.align 8
.LC369:
	.long	0
	.long	1088947648
	.align 8
.LC370:
	.long	0
	.long	1088947840
	.align 8
.LC371:
	.long	0
	.long	1088948032
	.align 8
.LC372:
	.long	0
	.long	1088948224
	.align 8
.LC373:
	.long	0
	.long	1088948448
	.align 8
.LC374:
	.long	0
	.long	1088948576
	.align 8
.LC375:
	.long	0
	.long	1088948800
	.align 8
.LC376:
	.long	0
	.long	1088948992
	.align 8
.LC377:
	.long	0
	.long	1088949184
	.align 8
.LC378:
	.long	0
	.long	1088949376
	.align 8
.LC379:
	.long	0
	.long	1088949568
	.align 8
.LC380:
	.long	0
	.long	1088949760
	.align 8
.LC381:
	.long	0
	.long	1088949952
	.align 8
.LC382:
	.long	0
	.long	1088950144
	.align 8
.LC383:
	.long	0
	.long	1088950336
	.align 8
.LC384:
	.long	0
	.long	1088950528
	.align 8
.LC385:
	.long	0
	.long	1088950720
	.align 8
.LC386:
	.long	0
	.long	1088950912
	.align 8
.LC387:
	.long	0
	.long	1088951104
	.align 8
.LC388:
	.long	0
	.long	1088951296
	.align 8
.LC389:
	.long	0
	.long	1088951360
	.section	.rodata.cst16
	.align 16
.LC390:
	.long	0
	.long	1084096512
	.long	0
	.long	1083236352
	.section	.rodata.cst8
	.align 8
.LC395:
	.long	0
	.long	1068498944
	.section	.rodata.cst4
	.align 4
.LC396:
	.long	1106771968
	.align 4
.LC399:
	.long	1103101952
	.align 4
.LC406:
	.long	1065353216
	.align 4
.LC407:
	.long	-1082130432
	.section	.rodata.cst8
	.align 8
.LC409:
	.long	0
	.long	1081257984
	.align 8
.LC410:
	.long	0
	.long	1083176960
	.align 8
.LC420:
	.long	0
	.long	1080696832
	.align 8
.LC928:
	.long	-1717986918
	.long	1069128089
	.align 8
.LC929:
	.long	1202590843
	.long	1065646817
	.align 8
.LC930:
	.long	-755914244
	.long	1062232653
	.align 8
.LC1856:
	.long	0
	.long	1088951392
	.align 8
.LC1897:
	.long	0
	.long	1088951616
	.align 8
.LC1898:
	.long	0
	.long	1088951648
	.align 8
.LC1899:
	.long	0
	.long	1088953536
	.align 8
.LC1902:
	.long	0
	.long	1088953728
	.align 8
.LC1903:
	.long	0
	.long	1088953696
	.align 8
.LC1904:
	.long	0
	.long	1088953760
	.align 8
.LC1905:
	.long	0
	.long	1078984704
	.align 8
.LC1906:
	.long	0
	.long	1080918016
	.align 8
.LC1907:
	.long	0
	.long	1088952608
	.align 8
.LC1908:
	.long	0
	.long	1088953856
	.align 8
.LC1909:
	.long	0
	.long	1088953888
	.align 8
.LC1910:
	.long	0
	.long	1088953920
	.align 8
.LC1912:
	.long	0
	.long	1088953952
	.align 8
.LC1915:
	.long	0
	.long	1088953984
	.align 8
.LC1917:
	.long	0
	.long	1088954016
	.align 8
.LC1918:
	.long	0
	.long	1088954048
	.align 8
.LC1919:
	.long	0
	.long	1088954080
	.align 8
.LC1923:
	.long	0
	.long	1088954112
	.align 8
.LC1927:
	.long	0
	.long	1088954144
	.align 8
.LC1928:
	.long	0
	.long	1088954176
	.align 8
.LC1929:
	.long	0
	.long	1088954208
	.align 8
.LC1930:
	.long	0
	.long	1088954240
	.align 8
.LC1931:
	.long	0
	.long	1088954272
	.align 8
.LC1932:
	.long	0
	.long	1088954304
	.align 8
.LC1933:
	.long	0
	.long	1088954336
	.align 8
.LC1934:
	.long	0
	.long	1088954368
	.align 8
.LC1935:
	.long	0
	.long	1088954400
	.section	.rodata.cst16
	.align 16
.LC1936:
	.long	0
	.long	1082724352
	.long	0
	.long	0
	.align 16
.LC1937:
	.long	0
	.long	0
	.long	0
	.long	1081630720
	.align 16
.LC1938:
	.long	0
	.long	1082724352
	.long	0
	.long	1081630720
	.section	.rodata.cst8
	.align 8
.LC1939:
	.long	0
	.long	1088954432
	.section	.rodata.cst4
	.align 4
.LC1940:
	.long	1086918620
	.section	.rodata.cst8
	.align 8
.LC1941:
	.long	0
	.long	1088954464
	.align 8
.LC1942:
	.long	0
	.long	1088954528
	.align 8
.LC1943:
	.long	0
	.long	1088954560
	.align 8
.LC1944:
	.long	0
	.long	1088954592
	.align 8
.LC1945:
	.long	0
	.long	1088954624
	.align 8
.LC1946:
	.long	0
	.long	1088954656
	.align 8
.LC1947:
	.long	0
	.long	1079869440
	.align 8
.LC1948:
	.long	0
	.long	1079885824
	.align 8
.LC1949:
	.long	0
	.long	1080016896
	.align 8
.LC1950:
	.long	0
	.long	1087373312
	.align 8
.LC1951:
	.long	0
	.long	1088396288
	.align 8
.LC1952:
	.long	0
	.long	1092878336
	.align 8
.LC1953:
	.long	0
	.long	1093009406
	.align 8
.LC1954:
	.long	0
	.long	1088954880
	.align 8
.LC1955:
	.long	0
	.long	1088955104
	.align 8
.LC1956:
	.long	0
	.long	1088955328
	.align 8
.LC1957:
	.long	0
	.long	1088955552
	.align 8
.LC1958:
	.long	0
	.long	1088955776
	.align 8
.LC1959:
	.long	0
	.long	1088956000
	.align 8
.LC1960:
	.long	0
	.long	1088956320
	.align 8
.LC1961:
	.long	0
	.long	1088956640
	.align 8
.LC1962:
	.long	0
	.long	1088956960
	.align 8
.LC1963:
	.long	0
	.long	1088957280
	.align 8
.LC1964:
	.long	0
	.long	1088957600
	.align 8
.LC1965:
	.long	0
	.long	1088957920
	.align 8
.LC1966:
	.long	0
	.long	1088957952
	.align 8
.LC1967:
	.long	0
	.long	1088957984
	.align 8
.LC1968:
	.long	0
	.long	1088958016
	.align 8
.LC1969:
	.long	0
	.long	1088958048
	.align 8
.LC1970:
	.long	0
	.long	1088958080
	.align 8
.LC1971:
	.long	0
	.long	1088958112
	.align 8
.LC1972:
	.long	0
	.long	1088958144
	.align 8
.LC1973:
	.long	0
	.long	1088958176
	.align 8
.LC1974:
	.long	0
	.long	1088958208
	.align 8
.LC1975:
	.long	0
	.long	1088958240
	.align 8
.LC1976:
	.long	0
	.long	1088958272
	.align 8
.LC1977:
	.long	0
	.long	1088958304
	.align 8
.LC1978:
	.long	0
	.long	1088958336
	.align 8
.LC1979:
	.long	0
	.long	1088958368
	.align 8
.LC1980:
	.long	0
	.long	1088958400
	.align 8
.LC1981:
	.long	0
	.long	1088958432
	.align 8
.LC1982:
	.long	0
	.long	1088958464
	.align 8
.LC1983:
	.long	0
	.long	1089278496
	.align 8
.LC1984:
	.long	0
	.long	1089278528
	.align 8
.LC1985:
	.long	0
	.long	1089278560
	.align 8
.LC1986:
	.long	0
	.long	1089279232
	.align 8
.LC1987:
	.long	0
	.long	1089279264
	.align 8
.LC1988:
	.long	0
	.long	1089279296
	.align 8
.LC1989:
	.long	0
	.long	1089279328
	.align 8
.LC1990:
	.long	0
	.long	1089279360
	.align 8
.LC1991:
	.long	0
	.long	1089279392
	.align 8
.LC1992:
	.long	0
	.long	1089279424
	.align 8
.LC1993:
	.long	0
	.long	1089279456
	.align 8
.LC1994:
	.long	0
	.long	1089279488
	.align 8
.LC1995:
	.long	0
	.long	1089279520
	.align 8
.LC1996:
	.long	0
	.long	1089279552
	.align 8
.LC1997:
	.long	0
	.long	1089279584
	.align 8
.LC1998:
	.long	0
	.long	1089279616
	.align 8
.LC1999:
	.long	0
	.long	1089279648
	.align 8
.LC2000:
	.long	0
	.long	1089279680
	.align 8
.LC2001:
	.long	0
	.long	1089279712
	.align 8
.LC2002:
	.long	0
	.long	1089279744
	.align 8
.LC2003:
	.long	0
	.long	1089279776
	.align 8
.LC2004:
	.long	0
	.long	1089279808
	.align 8
.LC2005:
	.long	0
	.long	1089279840
	.align 8
.LC2006:
	.long	0
	.long	1089279872
	.align 8
.LC2007:
	.long	0
	.long	1089279904
	.align 8
.LC2008:
	.long	0
	.long	1089279936
	.align 8
.LC2009:
	.long	0
	.long	1089279968
	.align 8
.LC2010:
	.long	0
	.long	1089280000
	.align 8
.LC2011:
	.long	0
	.long	1089280032
	.align 8
.LC2012:
	.long	0
	.long	1089280064
	.align 8
.LC2013:
	.long	0
	.long	1089280096
	.align 8
.LC2014:
	.long	0
	.long	1089280128
	.align 8
.LC2015:
	.long	0
	.long	1089280160
	.align 8
.LC2016:
	.long	0
	.long	1089280192
	.align 8
.LC2017:
	.long	0
	.long	1089280224
	.align 8
.LC2018:
	.long	0
	.long	1089280256
	.align 8
.LC2019:
	.long	0
	.long	1089280288
	.align 8
.LC2020:
	.long	0
	.long	1089280320
	.align 8
.LC2021:
	.long	0
	.long	1089280352
	.align 8
.LC2022:
	.long	0
	.long	1089280384
	.align 8
.LC2023:
	.long	0
	.long	1089280416
	.align 8
.LC2024:
	.long	0
	.long	1089280448
	.align 8
.LC2025:
	.long	0
	.long	1089280480
	.align 8
.LC2026:
	.long	0
	.long	1089280512
	.align 8
.LC2027:
	.long	0
	.long	1089280544
	.align 8
.LC2028:
	.long	0
	.long	1089280576
	.align 8
.LC2029:
	.long	0
	.long	1089280608
	.align 8
.LC2030:
	.long	0
	.long	1089280640
	.align 8
.LC2031:
	.long	0
	.long	1089280672
	.align 8
.LC2032:
	.long	0
	.long	1089280704
	.align 8
.LC2033:
	.long	0
	.long	1089280736
	.align 8
.LC2034:
	.long	0
	.long	1089280768
	.align 8
.LC2035:
	.long	0
	.long	1089280800
	.align 8
.LC2036:
	.long	0
	.long	1089280832
	.align 8
.LC2037:
	.long	0
	.long	1089280864
	.align 8
.LC2038:
	.long	0
	.long	1089280896
	.align 8
.LC2039:
	.long	0
	.long	1089280928
	.align 8
.LC2040:
	.long	0
	.long	1089280960
	.align 8
.LC2041:
	.long	0
	.long	1089280992
	.align 8
.LC2042:
	.long	0
	.long	1089281024
	.align 8
.LC2043:
	.long	0
	.long	1089281056
	.align 8
.LC2044:
	.long	0
	.long	1089281088
	.align 8
.LC2045:
	.long	0
	.long	1089281120
	.align 8
.LC2046:
	.long	0
	.long	1088961152
	.align 8
.LC2047:
	.long	0
	.long	1088961440
	.align 8
.LC2048:
	.long	0
	.long	1077444608
	.section	.rodata.cst16
	.align 16
.LC2049:
	.long	0
	.long	1075052544
	.long	0
	.long	1074790400
	.align 16
.LC2050:
	.long	0
	.long	1075576832
	.long	0
	.long	1074790400
	.section	.rodata.cst8
	.align 8
.LC2051:
	.long	0
	.long	1074003968
	.align 8
.LC2052:
	.long	0
	.long	1071644672
	.section	.rodata.cst16
	.align 16
.LC2053:
	.long	0
	.long	1073741824
	.long	0
	.long	1073741824
	.align 16
.LC2054:
	.long	0
	.long	1071644672
	.long	0
	.long	1071644672
	.align 16
.LC2055:
	.long	0
	.long	-1073741824
	.long	0
	.long	-1073741824
	.section	.rodata.cst8
	.align 8
.LC2056:
	.long	0
	.long	1083186176
	.align 8
.LC2057:
	.long	1413754136
	.long	1074340347
	.align 8
.LC2058:
	.long	0
	.long	1080459264
	.align 8
.LC2059:
	.long	0
	.long	1082408960
	.align 8
.LC2060:
	.long	0
	.long	1088953568
	.align 8
.LC2061:
	.long	0
	.long	1088953600
	.align 8
.LC2062:
	.long	0
	.long	1088953632
	.align 8
.LC2063:
	.long	0
	.long	1088953664
	.align 8
.LC2065:
	.long	0
	.long	1086324224
	.align 8
.LC2067:
	.long	0
	.long	1087373056
	.align 8
.LC2068:
	.long	0
	.long	2146435072
	.align 8
.LC2069:
	.long	0
	.long	1089470336
	.align 8
.LC2070:
	.long	0
	.long	1089470368
	.align 8
.LC2071:
	.long	0
	.long	1080369152
	.align 8
.LC2072:
	.long	0
	.long	1088951488
	.align 8
.LC2073:
	.long	0
	.long	1088951520
	.align 8
.LC2074:
	.long	0
	.long	1088951552
	.align 8
.LC2075:
	.long	0
	.long	1088951584
	.align 8
.LC2076:
	.long	0
	.long	1079508992
	.section	.rodata.cst16
	.align 16
.LC2079:
	.long	0
	.long	1078263808
	.long	0
	.long	1077936128
	.align 16
.LC2082:
	.long	0
	.long	1077936128
	.long	0
	.long	1080082432
	.align 16
.LC2083:
	.long	0
	.long	1078525952
	.long	0
	.long	1077936128
	.section	.rodata.cst8
	.align 8
.LC2085:
	.long	0
	.long	1079099392
	.align 8
.LC2086:
	.long	0
	.long	1079017472
	.align 8
.LC2088:
	.long	0
	.long	1081032704
	.section	.rodata.cst16
	.align 16
.LC2089:
	.long	0
	.long	1081073664
	.long	0
	.long	1081073664
	.section	.rodata.cst8
	.align 8
.LC2090:
	.long	0
	.long	1079033856
	.align 8
.LC2091:
	.long	0
	.long	1079050240
	.align 8
.LC2092:
	.long	0
	.long	1079083008
	.align 8
.LC2093:
	.long	0
	.long	1079115776
	.align 8
.LC2094:
	.long	0
	.long	1079132160
	.align 8
.LC2095:
	.long	0
	.long	1079148544
	.align 8
.LC2096:
	.long	0
	.long	1079164928
	.align 8
.LC2097:
	.long	0
	.long	1079181312
	.align 8
.LC2098:
	.long	0
	.long	1079197696
	.align 8
.LC2099:
	.long	0
	.long	1079214080
	.align 8
.LC2100:
	.long	0
	.long	1079230464
	.align 8
.LC2101:
	.long	0
	.long	1079246848
	.align 8
.LC2102:
	.long	0
	.long	1079279616
	.align 8
.LC2103:
	.long	0
	.long	1079296000
	.align 8
.LC2104:
	.long	0
	.long	1079312384
	.align 8
.LC2105:
	.long	0
	.long	1079345152
	.align 8
.LC2106:
	.long	0
	.long	1079361536
	.align 8
.LC2107:
	.long	0
	.long	1079377920
	.align 8
.LC2108:
	.long	0
	.long	1079410688
	.align 8
.LC2109:
	.long	0
	.long	1079427072
	.align 8
.LC2110:
	.long	0
	.long	1079443456
	.align 8
.LC2111:
	.long	0
	.long	1079459840
	.align 8
.LC2112:
	.long	0
	.long	1079476224
	.align 8
.LC2113:
	.long	0
	.long	1079492608
	.align 8
.LC2114:
	.long	0
	.long	1079541760
	.align 8
.LC2115:
	.long	0
	.long	1079558144
	.align 8
.LC2116:
	.long	0
	.long	1079574528
	.align 8
.LC2117:
	.long	0
	.long	1079590912
	.align 8
.LC2118:
	.long	0
	.long	1079623680
	.align 8
.LC2119:
	.long	0
	.long	1079640064
	.align 8
.LC2120:
	.long	0
	.long	1079672832
	.align 8
.LC2121:
	.long	0
	.long	1079689216
	.align 8
.LC2122:
	.long	0
	.long	1079705600
	.align 8
.LC2123:
	.long	0
	.long	1079721984
	.align 8
.LC2124:
	.long	0
	.long	1079738368
	.align 8
.LC2125:
	.long	0
	.long	1079754752
	.align 8
.LC2128:
	.long	0
	.long	1079771136
	.align 8
.LC2129:
	.long	0
	.long	1079803904
	.align 8
.LC2130:
	.long	0
	.long	1079820288
	.align 8
.LC2131:
	.long	0
	.long	1079836672
	.align 8
.LC2132:
	.long	0
	.long	1079853056
	.section	.rodata.cst16
	.align 16
.LC2133:
	.long	0
	.long	1074003968
	.long	0
	.long	1073741824
	.section	.rodata.cst8
	.align 8
.LC2134:
	.long	0
	.long	1092878338
	.align 8
.LC2135:
	.long	0
	.long	1092878340
	.align 8
.LC2136:
	.long	0
	.long	1093205984
	.align 8
.LC2137:
	.long	0
	.long	1093140480
	.align 8
.LC2151:
	.long	0
	.long	1089470400
	.section	.rodata.cst4
	.align 4
.LC2154:
	.long	1088421888
	.align 4
.LC2155:
	.long	1146601472
	.ident	"GCC: (GNU) 10.2.0"
	.section	.note.GNU-stack,"",@progbits
