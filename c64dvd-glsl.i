# 0 "c64dvd-glsl.c"
# 0 "<built-in>"
# 0 "<command-line>"
# 1 "c64dvd-glsl.c"
typedef signed char int8;
typedef unsigned char uint8;
typedef signed short int16;
typedef unsigned short uint16;
typedef signed int int32;
typedef unsigned int uint32;
typedef signed long long int64;
typedef unsigned long long uint64;
typedef struct { char *data; int64 len; int64 size; } FBSTRING;
typedef int8 boolean;
struct $9_FLOAT128 {
 union {
  int64 LOWPART;
  struct {
   union {
    double X;
    double R;
    double S;
   };
   union {
    double Y;
    double G;
    double T;
   };
  };
  int64 HIGHPART;
  struct {
   union {
    double Z;
    double B;
    double P;
   };
   union {
    double W;
    double A;
    double Q;
   };
  };
 };
};

extern int __$fb_structsizecheck[(sizeof( struct $9_FLOAT128 ) == 16) ? 1 : -1];
struct $9_FLOAT256 {
 union {
  int64 LOWPART1;
  struct {
   union {
    double X;
    double R;
    double S;
   };
  };
  int64 HIGHPART1;
  struct {
   union {
    double Y;
    double G;
    double T;
   };
  };
  int64 LOWPART2;
  struct {
   union {
    double Z;
    double B;
    double P;
   };
  };
  int64 HIGHPART2;
  struct {
   union {
    double W;
    double A;
    double Q;
   };
  };
 };
};
extern int __$fb_structsizecheck[(sizeof( struct $9_FLOAT256 ) == 8) ? 1 : -1];
struct $9_FLOAT512 {
 union {
  int64 LOWPART1;
  struct {
   union {
    double X;
   };
  };
  int64 HIGHPART1;
  struct {
   union {
    double R;
    double S;
   };
  };
  int64 LOWPART2;
  struct {
   union {
    double Y;
   };
  };
  int64 HIGHPART2;
  struct {
   union {
    double G;
    double T;
   };
  };
  int64 LOWPART3;
  struct {
   union {
    double Z;
   };
  };
  int64 HIGHPART3;
  struct {
   union {
    double B;
    double P;
   };
  };
  int64 LOWPART4;
  struct {
   union {
    double W;
   };
  };
  int64 HIGHPART4;
  struct {
   union {
    double A;
    double Q;
   };
  };
 };
};
extern int __$fb_structsizecheck[(sizeof( struct $9_FLOAT512 ) == 8) ? 1 : -1];
struct $16__FB_ARRAYDIMTB$ {
 int64 ELEMENTS;
 int64 LBOUND;
 int64 UBOUND;
};
extern int __$fb_structsizecheck[(sizeof( struct $16__FB_ARRAYDIMTB$ ) == 24) ? 1 : -1];
struct $8FBARRAY1IiE {
 int32* DATA;
 int32* PTR;
 int64 SIZE;
 int64 ELEMENT_LEN;
 int64 DIMENSIONS;
 int64 FLAGS;
 struct $16__FB_ARRAYDIMTB$ DIMTB[1];
};
extern int __$fb_structsizecheck[(sizeof( struct $8FBARRAY1IiE ) == 72) ? 1 : -1];
typedef uint32 (*tmp$532)( uint32 );
typedef void (*tmp$461)( uint32 );
typedef void (*tmp$541)( uint32, int32, uint8**, int32* );
typedef void (*tmp$522)( uint32, uint32, int32* );
typedef void (*tmp$536)( uint32, int32, int32*, uint8* );
typedef uint32 (*tmp$531)( void );
typedef void (*tmp$521)( uint32, uint32 );
typedef int32 (*tmp$535)( uint32, uint8* );
typedef void (*tmp$515)( int32, int32 );
typedef void (*tmp$542)( int32, float );
typedef void (*tmp$544)( int32, float, float, float );
typedef void (*tmp$548)( int32, int32, float* );
typedef void (*tmp$545)( int32, float, float, float, float );
struct $9SHADERTOY {
 uint32 FRAGMENTSHADER;
 uint32 PROGRAMOBJECT;
 FBSTRING SHADERLOG;
};
extern int __$fb_structsizecheck[(sizeof( struct $9SHADERTOY ) == 32) ? 1 : -1];
struct $6VECTOR {
 union {
  double X;
  double R;
 };
 union {
  double Y;
  double G;
 };
 union {
  double Z;
  double B;
 };
 union {
  double W;
  double A;
 };
};
extern int __$fb_structsizecheck[(sizeof( struct $6VECTOR ) == 32) ? 1 : -1];
struct $9RECTANGLE {
 struct $6VECTOR BASE$;
 struct $6VECTOR LEFTTOP;
 struct $6VECTOR RIGHTBOTTOM;
};
extern int __$fb_structsizecheck[(sizeof( struct $9RECTANGLE ) == 96) ? 1 : -1];
struct $9BMPHEADER {
 struct $9RECTANGLE BASE$ __attribute__((packed, aligned(1)));
 uint16 FILEID __attribute__((packed, aligned(1)));
 int32 FILESIZE __attribute__((packed, aligned(1)));
 uint16 RES1 __attribute__((packed, aligned(1)));
 uint16 RES2 __attribute__((packed, aligned(1)));
 int32 OFFSET __attribute__((packed, aligned(1)));
 int32 HEADERSIZE __attribute__((packed, aligned(1)));
 int32 W __attribute__((packed, aligned(1)));
 int32 H __attribute__((packed, aligned(1)));
 int16 PLANES __attribute__((packed, aligned(1)));
 int16 BITCOUNT __attribute__((packed, aligned(1)));
 int32 COMPRESSION __attribute__((packed, aligned(1)));
 int32 IMAGESIZE __attribute__((packed, aligned(1)));
 int32 PELSPERX __attribute__((packed, aligned(1)));
 int32 PELSPERY __attribute__((packed, aligned(1)));
 int32 COLORSINUSE __attribute__((packed, aligned(1)));
 int32 COLORSINPORTANT __attribute__((packed, aligned(1)));
};
extern int __$fb_structsizecheck[(sizeof( struct $9BMPHEADER ) == 150) ? 1 : -1];
struct $8PALENTRY {
 struct $9BMPHEADER BASE$;
 uint8 R;
 uint8 G;
 uint8 B;
 uint8 FLAG;
};
extern int __$fb_structsizecheck[(sizeof( struct $8PALENTRY ) == 154) ? 1 : -1];
struct $8MATERIAL {
 struct $8PALENTRY BASE$ __attribute__((aligned(8)));
 int64 ID;
 struct $6VECTOR COLOR;
 double ROUGH_REFLECTION;
 double MIRROR_REFLECTION;
 double CONCENTRIC_REFLECTION;
 double PORTION_OF_MATERIAL;
 double PORTION_OF_MIRROR;
 double TRANSPARENCY;
 double REFRACTIVE_INDEX;
 int8 BUILDSHADOW;
 int8 RECEIVESHADOW;
 int8 MIXCOLORS;
 int8 NEEDCOORDS;
 int64 COLORMAPID;
 struct $6VECTOR COLORMAPFACTOR;
 int64 BUMPMAPID;
 struct $6VECTOR BUMPMAPFACTOR;
 int64 STAMPMAPID;
 struct $6VECTOR STAMPMAPFACTOR;
 int64 TRANSMAPID;
 struct $6VECTOR TRANSMAPFACTOR;
};
extern int __$fb_structsizecheck[(sizeof( struct $8MATERIAL ) == 424) ? 1 : -1];
typedef int64 $14OBJECT3D_TYPES;
struct $4POLY {
 struct $8MATERIAL BASE$;
 int64 ID;
 struct $9RECTANGLE SCREENREC;
 int64 NVERTICES;
 struct $6VECTOR** VERTICES;
 struct $6VECTOR NORMALE;
 struct $6VECTOR CROSS;
 double DOTV0VP;
};
extern int __$fb_structsizecheck[(sizeof( struct $4POLY ) == 616) ? 1 : -1];
struct $8OBJECT3D {
 $14OBJECT3D_TYPES TYPE;
 int64 ID;
 struct $9RECTANGLE SCREENREC;
 struct $6VECTOR POSITION;
 int64 MATERIALID;
 double RADIUS;
 int64 NVERTICES;
 struct $6VECTOR** VERTICES;
 int64 NPOLYS;
 struct $4POLY** POLYS;
};
extern int __$fb_structsizecheck[(sizeof( struct $8OBJECT3D ) == 192) ? 1 : -1];
typedef int64 $11LIGHT_TYPES;
struct $5LIGHT {
 $11LIGHT_TYPES TYPE;
 int64 ID;
 struct $6VECTOR POSITION;
 struct $6VECTOR DIRECTION;
 struct $6VECTOR NORMALE;
 struct $6VECTOR RNORMALE;
 struct $6VECTOR COLOR;
 double MAXWIDTH;
 double SPOTANGLE;
 int8 BUILDSHADOW;
};
extern int __$fb_structsizecheck[(sizeof( struct $5LIGHT ) == 200) ? 1 : -1];
typedef int64 $11MAP2D_TYPES;
struct $5MAP2D {
 int64 MAPID;
 $11MAP2D_TYPES TYPE;
 struct $9BMPHEADER HEADER __attribute__((aligned(8)));
 uint8* PCOLORPIXELS;
 struct $6VECTOR FACTOR;
};
extern int __$fb_structsizecheck[(sizeof( struct $5MAP2D ) == 208) ? 1 : -1];
struct $7AAPIXEL {
 struct $8MATERIAL BASE$;
 int64 V;
 int64 X;
 int64 Y;
};
extern int __$fb_structsizecheck[(sizeof( struct $7AAPIXEL ) == 448) ? 1 : -1];
struct $9RAYTRACER {
 struct $8MATERIAL BASE$;
 int64 SCREENWIDTH;
 int64 SCREENHEIGHT;
 int64 XCENTER;
 int64 YCENTER;
 double SCALE;
 double SCALEINV;
 struct $6VECTOR AMBIENT;
 double PORTION_OF_AMBIENT;
 struct $6VECTOR BACKGROUND;
 double PORTION_OF_BACKGROUND;
 int64 MAXRAYDEPTH;
 int64 RAYDEPTH;
 struct $6VECTOR SRC;
 struct $6VECTOR DES;
 struct $6VECTOR HITPOINT;
 int64 NMATERIALS;
 struct $8MATERIAL** MATERIALS;
 int64 NOBJECTS;
 struct $8OBJECT3D** OBJECTS;
 int64 NLIGHTS;
 struct $5LIGHT** LIGHTS;
 int64 NMAPS;
 struct $5MAP2D** MAPS;
 int64 NAAPIXELS;
 struct $7AAPIXEL** AAPIXELS;
};
extern int __$fb_structsizecheck[(sizeof( struct $9RAYTRACER ) == 744) ? 1 : -1];
struct $7FBARRAYIvE {
 void* DATA;
 void* PTR;
 int64 SIZE;
 int64 ELEMENT_LEN;
 int64 DIMENSIONS;
 int64 FLAGS;
 struct $16__FB_ARRAYDIMTB$ DIMTB[8];
};
extern int __$fb_structsizecheck[(sizeof( struct $7FBARRAYIvE ) == 240) ? 1 : -1];
typedef int64 $13BUMP_METHODES;
typedef int64 $6AATYPE;
struct $7VECTOR2 {
 union {
  double X;
  double U;
  double S;
 };
 union {
  double Y;
  double V;
  double T;
 };
};
extern int __$fb_structsizecheck[(sizeof( struct $7VECTOR2 ) == 16) ? 1 : -1];
struct $7VECTOR3 {
 struct $7VECTOR2 BASE$;
 union {
  double X;
  double R;
  double S;
 };
 union {
  double Y;
  double G;
  double T;
 };
 union {
  double Z;
  double B;
  double P;
 };
};
extern int __$fb_structsizecheck[(sizeof( struct $7VECTOR3 ) == 40) ? 1 : -1];
struct $7VECTOR4 {
 struct $7VECTOR3 BASE$;
 union {
  double X;
  double R;
  double S;
 };
 union {
  double Y;
  double G;
  double T;
 };
 union {
  double Z;
  double B;
  double P;
 };
 union {
  double W;
  double A;
  double Q;
 };
};
extern int __$fb_structsizecheck[(sizeof( struct $7VECTOR4 ) == 72) ? 1 : -1];
struct $5PLANE {
 struct $7VECTOR4 BASE$;
 struct $7VECTOR3 N;
 double D;
};
extern int __$fb_structsizecheck[(sizeof( struct $5PLANE ) == 120) ? 1 : -1];
typedef int64 $10EPLANESIDE;
struct $4MAT2 {
 struct $5PLANE BASE$;
 double M00;
 double M10;
 double M01;
 double M11;
};
extern int __$fb_structsizecheck[(sizeof( struct $4MAT2 ) == 152) ? 1 : -1];
struct $4MAT3 {
 struct $4MAT2 BASE$;
 double M00;
 double M10;
 double M20;
 double M01;
 double M11;
 double M21;
 double M02;
 double M12;
 double M22;
};
extern int __$fb_structsizecheck[(sizeof( struct $4MAT3 ) == 224) ? 1 : -1];
struct $4MAT4 {
 struct $4MAT3 BASE$;
 double M00;
 double M10;
 double M20;
 double M30;
 double M01;
 double M11;
 double M21;
 double M31;
 double M02;
 double M12;
 double M22;
 double M32;
 double M03;
 double M13;
 double M23;
 double M33;
};
extern int __$fb_structsizecheck[(sizeof( struct $4MAT4 ) == 352) ? 1 : -1];
struct $12SYSTEM_BUS_T {
 double KERNAL[16384];
 double BASIC[16384];
 double CHAR[2073601];
 double COL[1024];
 double SINTABLE[360];
 double COSTABLE[360];
 struct $9RAYTRACER RAYTRACER;
 uint8 RESULT[2048];
 uint8 RESULT2[2048];
};
extern int __$fb_structsizecheck[(sizeof( struct $12SYSTEM_BUS_T ) == 16869744) ? 1 : -1];
struct $5FLAGS {
 uint8 __fb_struct_body[1];
};
extern int __$fb_structsizecheck[(sizeof( struct $5FLAGS ) == 1) ? 1 : -1];
struct $5MULTI {
 union {
  void* ADR0;
  void* ADR1;
  struct {
   union {
    double UFPU64;
    double SFPU64;
    struct {
     union {
      uint64 U64;
      int64 S64;
      struct {
       union {
        float UFPU32;
        float SFPU32;
        struct {
         union {
          uint32 U32;
          int32 S32;
          struct {
           union {
            uint16 U16;
            int16 S16;
            struct {
             union {
              uint8 ULO;
              int8 SLO;
             };
             union {
              uint8 UHI;
              int8 SHI;
             };
            };
           };
          };
         };
        };
       };
      };
     };
    };
   };
  };
 };
};
extern int __$fb_structsizecheck[(sizeof( struct $5MULTI ) == 8) ? 1 : -1];
struct $7CPU6510;
typedef void (*tmp$1793)( struct $7CPU6510* );
struct $6OPCODE {
 uint64 CODE;
 uint8 NAM[4];
 uint64 ADRMODE;
 uint64 BYTES;
 uint64 TICKS;
 struct $5MULTI OP;
 tmp$1793 DECODE;
};
extern int __$fb_structsizecheck[(sizeof( struct $6OPCODE ) == 56) ? 1 : -1];
struct $7CPU6510 {
 union {
  uint8 P;
  struct $5FLAGS F;
 };
 union {
  uint8 A;
  int8 SA;
 };
 union {
  uint8 X;
  int8 SX;
 };
 union {
  uint8 Y;
  int8 SY;
 };
 union {
  uint16 PC;
  struct {
   uint8 PL;
   uint8 PH;
  };
 };
 union {
  uint16 SP;
  struct {
   uint8 S;
   uint8 MSB;
  };
 };
 struct $12SYSTEM_BUS_T* MEM;
 struct $6OPCODE CODE;
 struct $6OPCODE OPCODES[256];
 FBSTRING STRADRMODES[13];
};
extern int __$fb_structsizecheck[(sizeof( struct $7CPU6510 ) == 14720) ? 1 : -1];
struct $5C64_T {
 struct $4MAT4 BASE$;
 struct $12SYSTEM_BUS_T* MEM;
 struct $7CPU6510* CPU_MOS6510;
};
extern int __$fb_structsizecheck[(sizeof( struct $5C64_T ) == 368) ? 1 : -1];
struct $19BOUNDING_BOX_STRUCT {
 double LOWER_LEFT;
 double LENGTHS;
};
extern int __$fb_structsizecheck[(sizeof( struct $19BOUNDING_BOX_STRUCT ) == 16) ? 1 : -1];
struct $7FBARRAYI19BOUNDING_BOX_STRUCTE {
 struct $19BOUNDING_BOX_STRUCT* DATA;
 struct $19BOUNDING_BOX_STRUCT* PTR;
 int64 SIZE;
 int64 ELEMENT_LEN;
 int64 DIMENSIONS;
 int64 FLAGS;
 struct $16__FB_ARRAYDIMTB$ DIMTB[8];
};
extern int __$fb_structsizecheck[(sizeof( struct $7FBARRAYI19BOUNDING_BOX_STRUCTE ) == 240) ? 1 : -1];
struct $23MEM64_DYNAMIC_LINK_TYPE;
struct $23MEM64_DYNAMIC_LINK_TYPE {
 double* OFFSET;
 double* TOP;
 uint64 SIZE;
 uint64 I;
 struct $23MEM64_DYNAMIC_LINK_TYPE* NEXT_PTR;
};
extern int __$fb_structsizecheck[(sizeof( struct $23MEM64_DYNAMIC_LINK_TYPE ) == 40) ? 1 : -1];
struct $9QBS_FIELD {
 int32 FILENO;
 int64 FILEID;
 int64 SIZE;
 int64 OFFSET;
};
extern int __$fb_structsizecheck[(sizeof( struct $9QBS_FIELD ) == 32) ? 1 : -1];
struct $3QBS {
 uint8* CHR;
 int32 LEN;
 uint8 IN_MEM64;
 uint16* MEM64_DESCRIPTOR;
 uint16 MEM64_DESCRIPTOR_OFFSET;
 uint32 LISTI;
 uint8 TMP;
 uint32 TMPLISTI;
 uint8 FIXED;
 uint8 READONLY;
 struct $9QBS_FIELD* FIELD;
};
extern int __$fb_structsizecheck[(sizeof( struct $3QBS ) == 56) ? 1 : -1];
union $5CHEAT {
 double D;
 struct {
  int32 LS;
  int32 MS;
 };
};
extern int __$fb_structsizecheck[(sizeof( union $5CHEAT ) == 8) ? 1 : -1];
struct $4VEC3 {
 float X;
 float Y;
 float Z;
};
extern int __$fb_structsizecheck[(sizeof( struct $4VEC3 ) == 12) ? 1 : -1];
struct $10THREADSCAN {
 double YSCAN;
 double XEND;
 double YEND;
 void* THREAD_HANDLE;
};
extern int __$fb_structsizecheck[(sizeof( struct $10THREADSCAN ) == 32) ? 1 : -1];
struct $21MULTIBOOT_MODULE_INFO {
 uint64 MOD_START __attribute__((packed, aligned(1)));
 uint64 MOD_END __attribute__((packed, aligned(1)));
 uint64 MOD_STRING __attribute__((packed, aligned(1)));
 uint64 RESERVED __attribute__((packed, aligned(1)));
};
extern int __$fb_structsizecheck[(sizeof( struct $21MULTIBOOT_MODULE_INFO ) == 32) ? 1 : -1];
struct $14MULTIBOOT_INFO {
 uint64 FLAGS __attribute__((packed, aligned(1)));
 uint64 MEM_LOWER __attribute__((packed, aligned(1)));
 uint64 MEM_UPPER __attribute__((packed, aligned(1)));
 uint64 BOOT_DEVICE __attribute__((packed, aligned(1)));
 int8* CMDLINE __attribute__((packed, aligned(1)));
 uint64 MODS_COUNT __attribute__((packed, aligned(1)));
 struct $21MULTIBOOT_MODULE_INFO* MODS_ADDR __attribute__((packed, aligned(1)));
 uint64 SYMS[5] __attribute__((packed, aligned(1)));
 uint64 MMAP_LENGTH __attribute__((packed, aligned(1)));
 uint64 MMAP_ADDR __attribute__((packed, aligned(1)));
 uint64 DRIVES_LENGTH __attribute__((packed, aligned(1)));
 uint64 DRIVES_ADDR __attribute__((packed, aligned(1)));
 uint64 CONFIG_TABLE __attribute__((packed, aligned(1)));
 int8* BOOT_LOADER_NAME __attribute__((packed, aligned(1)));
 uint64 APM_TABLE __attribute__((packed, aligned(1)));
 uint64 VBE_CONTROL_INFO __attribute__((packed, aligned(1)));
 uint64 VBE_MODE_INFO __attribute__((packed, aligned(1)));
 uint16 VBE_MODE __attribute__((packed, aligned(1)));
 uint16 VBE_INTERFACE_SEG __attribute__((packed, aligned(1)));
 uint16 VBE_INTERFACE_OFF __attribute__((packed, aligned(1)));
 uint16 VBE_INTERFACE_LEN __attribute__((packed, aligned(1)));
};
extern int __$fb_structsizecheck[(sizeof( struct $14MULTIBOOT_INFO ) == 176) ? 1 : -1];
struct $8FBARRAY1IyE {
 uint64* DATA;
 uint64* PTR;
 int64 SIZE;
 int64 ELEMENT_LEN;
 int64 DIMENSIONS;
 int64 FLAGS;
 struct $16__FB_ARRAYDIMTB$ DIMTB[1];
};
extern int __$fb_structsizecheck[(sizeof( struct $8FBARRAY1IyE ) == 72) ? 1 : -1];
struct $4LIST {
 int64 USER_STRUCTURE_SIZE;
 int64 INTERNAL_STRUCTURE_SIZE;
 uint8* STRUCTURE;
 int64 STRUCTURES;
 int64 STRUCTURES_LAST;
 int64* STRUCTURE_FREED;
 int64* STRUCTURE_FREED_CLEANUP;
 int64 STRUCTURES_FREED;
 int64 STRUCTURES_FREED_LAST;
 int64 STRUCTURE_BASE[65];
 int64 STRUCTURE_BASES;
 int64* INDEX;
 int64* INDEX_CLEANUP;
 int64 INDEXES;
 int64 INDEXES_LAST;
};
extern int __$fb_structsizecheck[(sizeof( struct $4LIST ) == 632) ? 1 : -1];
struct $10CPU_STRUCT {
 union {
  struct {
   union {
    uint8 AL;
    int8 AL_SIGNED;
   };
   union {
    uint8 AH;
    int8 AH_SIGNED;
   };
  };
  uint16 AX;
  int16 AX_SIGNED;
  uint64 EAX;
  int64 EAX_SIGNED;
  uint64 RAX;
  int64 RAX_SIGNED;
 };
 union {
  struct {
   union {
    uint8 BL;
    int8 BL_SIGNED;
   };
   union {
    uint8 BH;
    int8 BH_SIGNED;
   };
  };
  uint16 BX;
  int16 BX_SIGNED;
  uint64 EBX;
  int64 EBX_SIGNED;
  uint64 RBX;
  int64 RBX_SIGNED;
 };
 union {
  struct {
   union {
    uint8 CL;
    int8 CL_SIGNED;
   };
   union {
    uint8 CH;
    int8 CH_SIGNED;
   };
  };
  uint16 CX;
  int16 CX_SIGNED;
  uint64 ECX;
  int64 ECX_SIGNED;
  uint64 RCX;
  int64 RCX_SIGNED;
 };
 union {
  struct {
   union {
    uint8 DL;
    int8 DL_SIGNED;
   };
   union {
    uint8 DH;
    int8 DH_SIGNED;
   };
  };
  uint16 DX;
  int16 DX_SIGNED;
  uint64 EDX;
  int64 EDX_SIGNED;
  uint64 RDX;
  int64 RDX_SIGNED;
 };
 union {
  uint16 SI;
  int16 SI_SIGNED;
  uint64 ESI;
  int64 ESI_SIGNED;
  uint64 RSI;
  int64 RSI_SIGNED;
 };
 union {
  uint16 DI;
  int16 DI_SIGNED;
  uint64 EDI;
  int64 EDI_SIGNED;
  uint64 RDI;
  int64 RDI_SIGNED;
 };
 union {
  uint16 BP;
  int16 BP_SIGNED;
  uint64 EBP;
  int64 EBP_SIGNED;
  uint64 RBP;
  int64 RBP_SIGNED;
 };
 union {
  uint16 SP;
  int16 SP_SIGNED;
  uint64 ESP;
  int64 ESP_SIGNED;
 };
 union {
  uint16 CS;
  uint16 CS_SIGNED;
 };
 union {
  uint16 SS;
  uint16 SS_SIGNED;
 };
 union {
  uint16 DS;
  uint16 DS_SIGNED;
 };
 union {
  uint16 ES;
  uint16 ES_SIGNED;
 };
 union {
  uint16 FS;
  uint16 FS_SIGNED;
 };
 union {
  uint16 GS;
  uint16 GS_SIGNED;
 };
 union {
  uint16 IP;
  uint16 IP_SIGNED;
  uint16 EIP;
  uint16 EIP_SIGNED;
  uint16 RIP;
  uint16 RIP_SIGNED;
 };
 uint8 OVERFLOW_FLAG;
 uint8 DIRECTION_FLAG;
 uint8 INTERRUPT_FLAG;
 uint8 TRAP_FLAG;
 uint8 SIGN_FLAG;
 uint8 ZERO_FLAG;
 uint8 AUXILIARY_FLAG;
 uint8 PARITY_FLAG;
 uint8 CARRY_FLAG;
};
extern int __$fb_structsizecheck[(sizeof( struct $10CPU_STRUCT ) == 88) ? 1 : -1];
typedef int64 (*tmp$407)( int8*, int64, int64, int64, int64, int64 );
typedef void (*tmp$2)( void );
typedef int64 (*tmp$408)( int64, int64, int64, int64 );
typedef int64 (*tmp$409)( int64*, int64*, int64*, int64*, int64* );
typedef void (*tmp$410)( int64, int64, int64, int64 );
typedef void (*tmp$411)( int8* );
typedef int64 (*tmp$412)( int64, int64 );
typedef int64* (*tmp$413)( int64, int64* );
struct $9GFXDRIVER {
 int8* NAME_DATA;
 tmp$407 INIT;
 tmp$2 EXIT;
 tmp$2 LOCK;
 tmp$2 UNLOCK;
 tmp$408 SET_PALETTE;
 tmp$2 WAIT_VSYNC;
 tmp$409 GET_MOUSE;
 tmp$410 SET_MOUSE;
 tmp$411 SET_WINDOW_TITLE;
 tmp$412 SET_WINDOW_POS;
 tmp$413 FETCH_MODES;
 tmp$2 FLIP;
 tmp$2 POLL_EVENTS;
};
extern int __$fb_structsizecheck[(sizeof( struct $9GFXDRIVER ) == 112) ? 1 : -1];
struct $9PALETTE_T {
 int64 COLORS;
 uint8* PAL_DATA;
};
extern int __$fb_structsizecheck[(sizeof( struct $9PALETTE_T ) == 16) ? 1 : -1];
struct $4FONT {
 int64 W;
 int64 H;
 uint8* FONT_DATA;
};
extern int __$fb_structsizecheck[(sizeof( struct $4FONT ) == 24) ? 1 : -1];
struct $14_GFX_CHAR_CELL {
 int8 CH;
 uint64 FG;
 uint64 BG;
};
extern int __$fb_structsizecheck[(sizeof( struct $14_GFX_CHAR_CELL ) == 24) ? 1 : -1];
struct $6_EVENT {
 int64 TYPE_DATA;
 union {
  struct {
   int64 SCANCODE;
   int64 ASCII;
  };
  int64 Z;
  int64 W;
 };
};
extern int __$fb_structsizecheck[(sizeof( struct $6_EVENT ) == 24) ? 1 : -1];
struct $5FBGFX {
 int64 ID;
 int64 MODE_NUM;
 uint8* PAGE;
 int64 NUM_PAGES;
 int64 VISIBLE_PAGE;
 uint8* FRAMEBUFFER;
 int64 W;
 int64 H;
 int64 DEPTH;
 int64 BPP;
 int64 PITCH;
 uint64 PALETTE_DATA;
 uint64* DEVICE_PALETTE;
 uint8* COLOR_ASSOCIATION;
 int8* DIRTY;
 struct $9GFXDRIVER* DRIVER;
 int64 COLOR_MASK;
 struct $9PALETTE_T* DEFAULT_PALETTE;
 int64 SCANLINE_SIZE;
 int64 CURSOR_X;
 int64 CURSOR_Y;
 struct $4FONT* FONT;
 int64 TEXT_W;
 int64 TEXT_H;
 struct $9_FLOAT128 ASPECT;
 int8* KEY;
 int64 REFRESH_RATE;
 struct $14_GFX_CHAR_CELL* CON_PAGES;
 struct $6_EVENT* EVENT_QUEUE;
 int64 EVENT_HEAD;
 int64 EVENT_TAIL;
 void** EVENT_MUTEX;
 int64 FLAGS;
 int64 LOCK_COUNT;
};
extern int __$fb_structsizecheck[(sizeof( struct $5FBGFX ) == 280) ? 1 : -1];




int32 fb_ArrayRedimObj( struct $7FBARRAYIvE*, uint64, void*, void*, uint64, ... );
void fb_ArrayDestructStr( struct $7FBARRAYIvE* );
int32 fb_ArrayEraseObj( struct $7FBARRAYIvE*, void*, void* );
int32 fb_Locate( int32, int32, int32, int32, int32 );
void fb_Cls( int32 );
FBSTRING* fb_Inkey( void );
int32 fb_PageCopy( int32, int32 );
void fb_DataRestore( void* );
void fb_DataReadStr( void*, int64, int32 );
void fb_DataReadInt( int32* );
void fb_DataReadLongint( int64* );
void fb_DataReadULongint( uint64* );
void* fb_ErrorThrowEx( int32, int32, uint8*, void*, void* );
int32 fb_FileOpen( FBSTRING*, uint32, uint32, uint32, int32, int32 );
int32 fb_FileClose( int32 );
int32 fb_FilePutLarge( int32, int64, void*, uint64 );
int32 fb_FileGetLarge( int32, int64, void*, uint64 );
int32 fb_FileGetArrayLarge( int32, int64, struct $7FBARRAYIvE* );
int32 fb_FileSeek( int32, int32 );
int32 fb_FileLineInput( int32, void*, int64, int32 );
int32 fb_LineInput( FBSTRING*, void*, int64, int32, int32, int32 );
int32 fb_FileInput( int32 );
int32 fb_ConsoleInput( FBSTRING*, int32, int32 );
int32 fb_InputString( void*, int64, int32 );
int32 fb_FileFree( void );
int32 fb_FileEof( int32 );
int64 fb_FileSize( int32 );
void fb_GfxPset( void*, float, float, uint32, int32, int32 );
uint32 fb_GfxPoint( void*, float, float );
void fb_GfxLine( void*, float, float, float, float, uint32, int32, uint32, int32 );
void fb_GfxEllipse( void*, float, float, float, uint32, float, float, float, int32, int32 );
void fb_GfxPaint( void*, float, float, uint32, uint32, FBSTRING*, int32, int32 );
void fb_GfxDraw( void*, FBSTRING* );
int64 fb_GfxDrawString( void*, float, float, int32, FBSTRING*, uint32, void*, int32, void*, void*, void* );
void fb_GfxPalette( int32, int32, int32, int32 );
int32 fb_GfxPut( void*, float, float, void*, int32, int32, int32, int32, int32, int32, void*, int32, void*, void* );
int32 fb_GfxScreen( int32, int32, int32, int32, int32 );
int32 fb_GfxScreenRes( int32, int32, int32, int32, int32, int32 );
int32 fb_GfxBload( FBSTRING*, void*, void* );
int32 fb_GfxFlip( int32, int32 );
int32 fb_GfxWaitVSync( void );
void fb_GfxLock( void );
void fb_GfxUnlock( int32, int32 );
void* fb_GfxScreenPtr( void );
void fb_GfxSetWindowTitle( FBSTRING* );
int32 fb_GetMouse64( int64*, int64*, int64*, int64*, int64* );
void fb_GfxScreenInfo64( int64*, int64*, int64*, int64*, int64*, int64*, FBSTRING* );
int32 fb_GfxScreenList( int32 );
void* fb_GfxImageCreate( int32, int32, uint32, int32, int32 );
void fb_GfxImageDestroy( void* );
int32 fb_GfxImageInfo64( void*, int64*, int64*, int64*, int64*, void**, int64* );
void fb_GfxControl_i64( int32, int64*, int64*, int64*, int64* );
void* fb_GfxGetGLProcAddress( uint8* );
void fb_hPutPSet( uint8*, uint8*, int32, int32, int32, int32, int32, void*, void* );
void fb_hPutAlpha( uint8*, uint8*, int32, int32, int32, int32, int32, void*, void* );
double pow( double, double );
double fb_Rnd( float );
uint64 fb_GetMemAvail( int32 );
void* malloc( uint64 );
void* calloc( uint64, uint64 );
void* realloc( void*, uint64 );
void free( void* );
void fb_PrintVoid( int32, int32 );
void fb_PrintULongint( int32, uint64, int32 );
void fb_PrintString( int32, FBSTRING*, int32 );
FBSTRING* fb_StrInit( void*, int64, void*, int64, int32 );
FBSTRING* fb_StrAssign( void*, int64, void*, int64, int32 );
void fb_StrDelete( FBSTRING* );
FBSTRING* fb_StrConcat( FBSTRING*, void*, int64, void*, int64 );
int32 fb_StrCompare( void*, int64, void*, int64 );
FBSTRING* fb_StrConcatAssign( void*, int64, void*, int64, int32 );
FBSTRING* fb_StrAllocTempResult( FBSTRING* );
FBSTRING* fb_StrAllocTempDescZEx( uint8*, int64 );
FBSTRING* fb_UIntToStr( uint32 );
FBSTRING* fb_LongintToStr( int64 );
FBSTRING* fb_ULongintToStr( uint64 );
FBSTRING* fb_DoubleToStr( double );
FBSTRING* fb_StrMid( FBSTRING*, int64, int64 );
int64 fb_StrLen( void*, int64 );
uint32 fb_ASC( FBSTRING*, int64 );
FBSTRING* fb_CHR( int32, ... );
double fb_VAL( FBSTRING* );
FBSTRING* fb_HEX_l( uint64 );
FBSTRING* fb_HEXEx_b( uint8, int32 );
FBSTRING* fb_HEXEx_s( uint16, int32 );
FBSTRING* fb_SPACE( int64 );
FBSTRING* fb_StrLcase2( FBSTRING*, int32 );
void fb_Init( int32, uint8**, int32 );
void fb_End( int32 );
double fb_Timer( void );
int32 fb_Shell( FBSTRING* );
int32 fb_Chain( FBSTRING* );
void fb_Sleep( int32 );
int32 fb_SleepEx( int32, int32 );
void fb_Beep( void );
void* memcpy( void*, void*, uint64 );
void* memset( void*, int32, uint64 );
double fabs( double );
float sinf( float );
float cosf( float );
float tanf( float );
float asinf( float );
float acosf( float );
float atan2f( float, float );
float expf( float );
float logf( float );
float log2f( float );
float powf( float, float );
float sqrtf( float );
float ceilf( float );
float floorf( float );
void* calloc( uint64, uint64 );
void* malloc( uint64 );
void* realloc( void*, uint64 );
void free( void* );
int64 llabs( int64 );
void _ZN9_FLOAT128C1Ev( struct $9_FLOAT128* );
void _ZN9_FLOAT128C1Edd( struct $9_FLOAT128*, double, double );
void _ZN9_FLOAT128C1Edddd( struct $9_FLOAT128*, double, double, double, double );
void _ZN9_FLOAT128aSEd( struct $9_FLOAT128*, double );
void _ZN9_FLOAT128aSEy( struct $9_FLOAT128*, uint64 );
void _ZN9_FLOAT128aSERS_( struct $9_FLOAT128*, struct $9_FLOAT128* );
uint64 _ZN9_FLOAT128cvyEv( struct $9_FLOAT128* );
void _ZN9_FLOAT128pLEy( struct $9_FLOAT128*, uint64 );
struct $9_FLOAT128* _ZngR9_FLOAT128( struct $9_FLOAT128*, struct $9_FLOAT128* );
struct $9_FLOAT128* _ZplR9_FLOAT128S0_( struct $9_FLOAT128*, struct $9_FLOAT128*, struct $9_FLOAT128* );
struct $9_FLOAT128* _ZmiR9_FLOAT128S0_( struct $9_FLOAT128*, struct $9_FLOAT128*, struct $9_FLOAT128* );
struct $9_FLOAT128* _ZmlR9_FLOAT128S0_( struct $9_FLOAT128*, struct $9_FLOAT128*, struct $9_FLOAT128* );
struct $9_FLOAT128* _ZdvR9_FLOAT128S0_( struct $9_FLOAT128*, struct $9_FLOAT128*, struct $9_FLOAT128* );
struct $9_FLOAT128* _ZplR9_FLOAT128d( struct $9_FLOAT128*, struct $9_FLOAT128*, double );
struct $9_FLOAT128* _ZmiR9_FLOAT128d( struct $9_FLOAT128*, struct $9_FLOAT128*, double );
struct $9_FLOAT128* _ZmidR9_FLOAT128( struct $9_FLOAT128*, double, struct $9_FLOAT128* );
struct $9_FLOAT128* _ZmlR9_FLOAT128d( struct $9_FLOAT128*, struct $9_FLOAT128*, double );
struct $9_FLOAT128* _ZmldR9_FLOAT128( struct $9_FLOAT128*, double, struct $9_FLOAT128* );
void _ZN9_FLOAT256C1Edd( struct $9_FLOAT256*, double, double );
void _ZN9_FLOAT256C1Edddd( struct $9_FLOAT256*, double, double, double, double );
void _ZN9_FLOAT256aSEd( struct $9_FLOAT256*, double );
void _ZN9_FLOAT256aSEy( struct $9_FLOAT256*, uint64 );
void _ZN9_FLOAT256aSERS_( struct $9_FLOAT256*, struct $9_FLOAT256* );
uint64 _ZN9_FLOAT256cvyEv( struct $9_FLOAT256* );
void _ZN9_FLOAT256pLEy( struct $9_FLOAT256*, uint64 );
struct $9_FLOAT256* _ZngR9_FLOAT256( struct $9_FLOAT256*, struct $9_FLOAT256* );
struct $9_FLOAT256* _ZplR9_FLOAT256S0_( struct $9_FLOAT256*, struct $9_FLOAT256*, struct $9_FLOAT256* );
struct $9_FLOAT256* _ZmiR9_FLOAT256S0_( struct $9_FLOAT256*, struct $9_FLOAT256*, struct $9_FLOAT256* );
struct $9_FLOAT256* _ZmlR9_FLOAT256S0_( struct $9_FLOAT256*, struct $9_FLOAT256*, struct $9_FLOAT256* );
struct $9_FLOAT256* _ZdvR9_FLOAT256S0_( struct $9_FLOAT256*, struct $9_FLOAT256*, struct $9_FLOAT256* );
struct $9_FLOAT256* _ZplR9_FLOAT256d( struct $9_FLOAT256*, struct $9_FLOAT256*, double );
struct $9_FLOAT256* _ZmiR9_FLOAT256d( struct $9_FLOAT256*, struct $9_FLOAT256*, double );
struct $9_FLOAT256* _ZmidR9_FLOAT256( struct $9_FLOAT256*, double, struct $9_FLOAT256* );
struct $9_FLOAT256* _ZmlR9_FLOAT256d( struct $9_FLOAT256*, struct $9_FLOAT256*, double );
struct $9_FLOAT256* _ZmldR9_FLOAT256( struct $9_FLOAT256*, double, struct $9_FLOAT256* );
void _ZN9_FLOAT512C1Edd( struct $9_FLOAT512*, double, double );
void _ZN9_FLOAT512C1Edddd( struct $9_FLOAT512*, double, double, double, double );
void _ZN9_FLOAT512aSEd( struct $9_FLOAT512*, double );
void _ZN9_FLOAT512aSEy( struct $9_FLOAT512*, uint64 );
void _ZN9_FLOAT512aSERS_( struct $9_FLOAT512*, struct $9_FLOAT512* );
uint64 _ZN9_FLOAT512cvyEv( struct $9_FLOAT512* );
void _ZN9_FLOAT512pLEy( struct $9_FLOAT512*, uint64 );
struct $9_FLOAT512* _ZngR9_FLOAT512( struct $9_FLOAT512*, struct $9_FLOAT512* );
struct $9_FLOAT512* _ZplR9_FLOAT512S0_( struct $9_FLOAT512*, struct $9_FLOAT512*, struct $9_FLOAT512* );
struct $9_FLOAT512* _ZmiR9_FLOAT512S0_( struct $9_FLOAT512*, struct $9_FLOAT512*, struct $9_FLOAT512* );
struct $9_FLOAT512* _ZmlR9_FLOAT512S0_( struct $9_FLOAT512*, struct $9_FLOAT512*, struct $9_FLOAT512* );
struct $9_FLOAT512* _ZdvR9_FLOAT512S0_( struct $9_FLOAT512*, struct $9_FLOAT512*, struct $9_FLOAT512* );
struct $9_FLOAT512* _ZplR9_FLOAT512d( struct $9_FLOAT512*, struct $9_FLOAT512*, double );
struct $9_FLOAT512* _ZmiR9_FLOAT512d( struct $9_FLOAT512*, struct $9_FLOAT512*, double );
struct $9_FLOAT512* _ZmidR9_FLOAT512( struct $9_FLOAT512*, double, struct $9_FLOAT512* );
struct $9_FLOAT512* _ZmlR9_FLOAT512d( struct $9_FLOAT512*, struct $9_FLOAT512*, double );
struct $9_FLOAT512* _ZmldR9_FLOAT512( struct $9_FLOAT512*, double, struct $9_FLOAT512* );
static void _ZN5FBGFXaSERKS_( struct $5FBGFX*, struct $5FBGFX* );
void glRectf( float, float, float, float );
void glTexParameteri( uint32, uint32, int32 );
void glTexImage2D( uint32, int32, int32, int32, int32, int32, uint32, uint32, void* );
void glGenTextures( int32, uint32* );
void glBindTexture( uint32, uint32 );
void glActiveTexture( uint32 );
void ERROREXIT( FBSTRING* );
void GLSCREEN( int64, int64, int64, int64, int8 );
void _ZN9SHADERTOYD1Ev( struct $9SHADERTOY* );
int8 _ZN9SHADERTOY11COMPILEFILEER8FBSTRING( struct $9SHADERTOY*, FBSTRING* );
int8 _ZN9SHADERTOY11COMPILECODEER8FBSTRING( struct $9SHADERTOY*, FBSTRING* );
static void _ZN9SHADERTOYC1Ev( struct $9SHADERTOY* );
static void _ZN9SHADERTOYaSERKS_( struct $9SHADERTOY*, struct $9SHADERTOY* );
void _ZN6VECTORC1Ev( struct $6VECTOR* );
void _ZN6VECTORC1Ej( struct $6VECTOR*, uint32 );
void _ZN6VECTORC1ERS_( struct $6VECTOR*, struct $6VECTOR* );
void _ZN6VECTORC1Edddd( struct $6VECTOR*, double, double, double, double );
void _ZN6VECTORpLERS_( struct $6VECTOR*, struct $6VECTOR* );
void _ZN6VECTORmIERS_( struct $6VECTOR*, struct $6VECTOR* );
void _ZN6VECTORmLEd( struct $6VECTOR*, double );
uint32 _ZN6VECTORcvjEv( struct $6VECTOR* );
double _ZN6VECTOR6LENGTHEv( struct $6VECTOR* );
void _ZN6VECTOR9NORMALIZEEv( struct $6VECTOR* );
struct $6VECTOR* _ZN6VECTOR10NORMALIZEDEv( struct $6VECTOR*, struct $6VECTOR* );
struct $6VECTOR* _ZmiR6VECTORS0_( struct $6VECTOR*, struct $6VECTOR*, struct $6VECTOR* );
struct $6VECTOR* _ZplR6VECTORS0_( struct $6VECTOR*, struct $6VECTOR*, struct $6VECTOR* );
struct $6VECTOR* _ZmlR6VECTORd( struct $6VECTOR*, struct $6VECTOR*, double );
struct $6VECTOR* _ZmldR6VECTOR( struct $6VECTOR*, double, struct $6VECTOR* );
double _ZmlR6VECTORS0_( struct $6VECTOR*, struct $6VECTOR* );
struct $6VECTOR* _Zv24idivR6VECTORS0_( struct $6VECTOR*, struct $6VECTOR*, struct $6VECTOR* );
static void _ZN9RECTANGLEC1Ev( struct $9RECTANGLE* );
static void _ZN9RECTANGLEaSERKS_( struct $9RECTANGLE*, struct $9RECTANGLE* );
static void _ZN9BMPHEADERC1Ev( struct $9BMPHEADER* );
static void _ZN9BMPHEADERaSERKS_( struct $9BMPHEADER*, struct $9BMPHEADER* );
static void _ZN8PALENTRYC1Ev( struct $8PALENTRY* );
static void _ZN8PALENTRYaSERKS_( struct $8PALENTRY*, struct $8PALENTRY* );
static void _ZN5MAP2DaSERKS_( struct $5MAP2D*, struct $5MAP2D* );
static void _ZN8MATERIALC1Ev( struct $8MATERIAL* );
static void _ZN8MATERIALaSERKS_( struct $8MATERIAL*, struct $8MATERIAL* );
static void _ZN5LIGHTaSERKS_( struct $5LIGHT*, struct $5LIGHT* );
static void _ZN4POLYaSERKS_( struct $4POLY*, struct $4POLY* );
static void _ZN8OBJECT3DaSERKS_( struct $8OBJECT3D*, struct $8OBJECT3D* );
static void _ZN7AAPIXELaSERKS_( struct $7AAPIXEL*, struct $7AAPIXEL* );
void _ZN9RAYTRACERC1Ev( struct $9RAYTRACER* );
void _ZN9RAYTRACERD1Ev( struct $9RAYTRACER* );
int64 _ZN9RAYTRACER11ADDMATERIALEddddddddddaaallll( struct $9RAYTRACER*, double, double, double, double, double, double, double, double, double, double, int8, int8, int8, int64, int64, int64, int64 );
void _ZN9RAYTRACER15RENDERRECTANGLEEllll( struct $9RAYTRACER*, int64, int64, int64, int64 );
void _ZN9RAYTRACER8EDGEBLUREv( struct $9RAYTRACER* );
void _ZN9RAYTRACER4BLUREv( struct $9RAYTRACER* );
struct $6VECTOR* _ZN9RAYTRACER2AVEddd( struct $9RAYTRACER*, double, double, double );
struct $6VECTOR** _ZN9RAYTRACER4APV4EPP6VECTORllll( struct $9RAYTRACER*, struct $6VECTOR**, int64, int64, int64, int64 );
void _ZN9RAYTRACER6ADJUSTEPddd( struct $9RAYTRACER*, double*, double, double );
void _ZN9RAYTRACER4INITElll( struct $9RAYTRACER*, int64, int64, int64 );
int8 _ZN9RAYTRACER13ISPOLYONPIXELElldd( struct $9RAYTRACER*, int64, int64, double, double );
int8 _ZN9RAYTRACER18ISANYOBJECTONPIXELEll( struct $9RAYTRACER*, int64, int64 );
uint32 _ZN9RAYTRACER9SHOWPOINTEll( struct $9RAYTRACER*, int64, int64 );
void _ZN9RAYTRACER15BACKGROUNDCOLORER6VECTORS1_( struct $9RAYTRACER*, struct $6VECTOR*, struct $6VECTOR* );
void _ZN9RAYTRACER9VECMIRRORER6VECTORS1_S1_S1_( struct $9RAYTRACER*, struct $6VECTOR*, struct $6VECTOR*, struct $6VECTOR*, struct $6VECTOR* );
void _ZN9RAYTRACER9VECBROKENElR6VECTORS1_S1_S1_( struct $9RAYTRACER*, int64, struct $6VECTOR*, struct $6VECTOR*, struct $6VECTOR*, struct $6VECTOR* );
void _ZN9RAYTRACER8GETMAPXYEllR6VECTORS1_( struct $9RAYTRACER*, int64, int64, struct $6VECTOR*, struct $6VECTOR* );
double _ZN9RAYTRACER18GETHIGHTFIELDVALUEElll13BUMP_METHODESa( struct $9RAYTRACER*, int64, int64, int64, $13BUMP_METHODES, int8 );
int8 _ZN9RAYTRACER19ISVISIBLEONSTAMPMAPElR6VECTOR( struct $9RAYTRACER*, int64, struct $6VECTOR* );
void _ZN9RAYTRACER9DOBUMPMAPEllR6VECTORS1_S1_( struct $9RAYTRACER*, int64, int64, struct $6VECTOR*, struct $6VECTOR*, struct $6VECTOR* );
void _ZN9RAYTRACER12SURFACECOLORElR6VECTORS1_( struct $9RAYTRACER*, int64, struct $6VECTOR*, struct $6VECTOR* );
void _ZN9RAYTRACER10LOCALCOLOREllR6VECTORS1_S1_S1_S1_S1_( struct $9RAYTRACER*, int64, int64, struct $6VECTOR*, struct $6VECTOR*, struct $6VECTOR*, struct $6VECTOR*, struct $6VECTOR*, struct $6VECTOR* );
void _ZN9RAYTRACER16GETPOLYSCREENRECEll( struct $9RAYTRACER*, int64, int64 );
void _ZN9RAYTRACER10POLYHELPEREl( struct $9RAYTRACER*, int64 );
void _ZN9RAYTRACER18GETOBJECTSCREENRECEl( struct $9RAYTRACER*, int64 );
int8 _ZN9RAYTRACER13ISOBJECTONRAYER6VECTORS1_lRlS1_S1_S1_S1_( struct $9RAYTRACER*, struct $6VECTOR*, struct $6VECTOR*, int64, int64*, struct $6VECTOR*, struct $6VECTOR*, struct $6VECTOR*, struct $6VECTOR* );
int8 _ZN9RAYTRACER14ISPOLYGONONRAYER6VECTORS1_lRlS1_S1_S1_( struct $9RAYTRACER*, struct $6VECTOR*, struct $6VECTOR*, int64, int64*, struct $6VECTOR*, struct $6VECTOR*, struct $6VECTOR* );
int8 _ZN9RAYTRACER17ISMATHSPHEREONRAYER6VECTORS1_lS1_S1_S1_( struct $9RAYTRACER*, struct $6VECTOR*, struct $6VECTOR*, int64, struct $6VECTOR*, struct $6VECTOR*, struct $6VECTOR* );
int8 _ZN9RAYTRACER9LINETRACEER6VECTORS1_RlS2_S1_S1_S1_S1_( struct $9RAYTRACER*, struct $6VECTOR*, struct $6VECTOR*, int64*, int64*, struct $6VECTOR*, struct $6VECTOR*, struct $6VECTOR*, struct $6VECTOR* );
void _ZN9RAYTRACER8RAYTRACEERK6VECTORS2_lRS0_( struct $9RAYTRACER*, struct $6VECTOR*, struct $6VECTOR*, int64, struct $6VECTOR* );
void _ZN9RAYTRACER5VBLUREll( struct $9RAYTRACER*, int64, int64 );
void _ZN9RAYTRACER5HBLUREll( struct $9RAYTRACER*, int64, int64 );
static void _ZN9RAYTRACERaSERKS_( struct $9RAYTRACER*, struct $9RAYTRACER* );
void _ZN7VECTOR2C1Ev( struct $7VECTOR2* );
void _ZN7VECTOR2C1Edd( struct $7VECTOR2*, double, double );
void _ZN7VECTOR2C1ERS_( struct $7VECTOR2*, struct $7VECTOR2* );
void _ZN7VECTOR2aSEd( struct $7VECTOR2*, double );
void _ZN7VECTOR2aSERS_( struct $7VECTOR2*, struct $7VECTOR2* );
struct $7VECTOR2* _ZN7VECTOR22XYEv( struct $7VECTOR2*, struct $7VECTOR2* );
struct $7VECTOR2* _ZngR7VECTOR2( struct $7VECTOR2*, struct $7VECTOR2* );
struct $7VECTOR2* _ZplR7VECTOR2S0_( struct $7VECTOR2*, struct $7VECTOR2*, struct $7VECTOR2* );
struct $7VECTOR2* _ZmiR7VECTOR2S0_( struct $7VECTOR2*, struct $7VECTOR2*, struct $7VECTOR2* );
struct $7VECTOR2* _ZmiR7VECTOR2Rd( struct $7VECTOR2*, struct $7VECTOR2*, double* );
struct $7VECTOR2* _ZmlR7VECTOR2S0_( struct $7VECTOR2*, struct $7VECTOR2*, struct $7VECTOR2* );
struct $7VECTOR2* _ZmlR7VECTOR2Rd( struct $7VECTOR2*, struct $7VECTOR2*, double* );
struct $7VECTOR2* _ZmlRdR7VECTOR2( struct $7VECTOR2*, double*, struct $7VECTOR2* );
struct $7VECTOR2* _ZdvR7VECTOR2S0_( struct $7VECTOR2*, struct $7VECTOR2*, struct $7VECTOR2* );
void _ZN7VECTOR3C1Ev( struct $7VECTOR3* );
void _ZN7VECTOR3C1Ed( struct $7VECTOR3*, double );
void _ZN7VECTOR3C1Eddd( struct $7VECTOR3*, double, double, double );
void _ZN7VECTOR3C1ER7VECTOR2d( struct $7VECTOR3*, struct $7VECTOR2*, double );
void _ZN7VECTOR3C1ERS_( struct $7VECTOR3*, struct $7VECTOR3* );
void _ZN7VECTOR3aSERS_( struct $7VECTOR3*, struct $7VECTOR3* );
void _ZN7VECTOR3pLERS_( struct $7VECTOR3*, struct $7VECTOR3* );
struct $7VECTOR2* _ZN7VECTOR32XYEv( struct $7VECTOR2*, struct $7VECTOR3* );
struct $7VECTOR2* _ZN7VECTOR32XZEv( struct $7VECTOR2*, struct $7VECTOR3* );
struct $7VECTOR2* _ZN7VECTOR32YZEv( struct $7VECTOR2*, struct $7VECTOR3* );
struct $7VECTOR3* _ZN7VECTOR33XYXEv( struct $7VECTOR3*, struct $7VECTOR3* );
static void _ZN7VECTOR3aSERKS_( struct $7VECTOR3*, struct $7VECTOR3* );
struct $7VECTOR3* _ZngR7VECTOR3( struct $7VECTOR3*, struct $7VECTOR3* );
struct $7VECTOR3* _ZplR7VECTOR3d( struct $7VECTOR3*, struct $7VECTOR3*, double );
struct $7VECTOR3* _ZpldR7VECTOR3( struct $7VECTOR3*, double, struct $7VECTOR3* );
struct $7VECTOR3* _ZmlR7VECTOR3d( struct $7VECTOR3*, struct $7VECTOR3*, double );
struct $7VECTOR3* _ZmldR7VECTOR3( struct $7VECTOR3*, double, struct $7VECTOR3* );
struct $7VECTOR3* _ZplR7VECTOR3S0_( struct $7VECTOR3*, struct $7VECTOR3*, struct $7VECTOR3* );
struct $7VECTOR3* _ZmiR7VECTOR3S0_( struct $7VECTOR3*, struct $7VECTOR3*, struct $7VECTOR3* );
struct $7VECTOR3* _ZmlR7VECTOR3S0_( struct $7VECTOR3*, struct $7VECTOR3*, struct $7VECTOR3* );
struct $7VECTOR3* _ZdvR7VECTOR3S0_( struct $7VECTOR3*, struct $7VECTOR3*, struct $7VECTOR3* );
void _ZN7VECTOR4C1Ev( struct $7VECTOR4* );
void _ZN7VECTOR4C1Edddd( struct $7VECTOR4*, double, double, double, double );
void _ZN7VECTOR4C1ER7VECTOR3d( struct $7VECTOR4*, struct $7VECTOR3*, double );
void _ZN7VECTOR4C1ERS_( struct $7VECTOR4*, struct $7VECTOR4* );
void _ZN7VECTOR4aSERS_( struct $7VECTOR4*, struct $7VECTOR4* );
uint64 _ZN7VECTOR4cvyEv( struct $7VECTOR4* );
static void _ZN7VECTOR4aSERKS_( struct $7VECTOR4*, struct $7VECTOR4* );
struct $7VECTOR4* _ZngR7VECTOR4( struct $7VECTOR4*, struct $7VECTOR4* );
struct $7VECTOR4* _ZmiR7VECTOR4S0_( struct $7VECTOR4*, struct $7VECTOR4*, struct $7VECTOR4* );
struct $7VECTOR4* _ZmldR7VECTOR4( struct $7VECTOR4*, double, struct $7VECTOR4* );
void _ZN5PLANEC1Ev( struct $5PLANE* );
static void _ZN5PLANEaSERKS_( struct $5PLANE*, struct $5PLANE* );
struct $7VECTOR3* _Zv13sinR7VECTOR3( struct $7VECTOR3*, struct $7VECTOR3* );
struct $7VECTOR3* _Zv13cosR7VECTOR3( struct $7VECTOR3*, struct $7VECTOR3* );
struct $7VECTOR2* _Zv13absRK7VECTOR2( struct $7VECTOR2*, struct $7VECTOR2* );
struct $7VECTOR3* _Zv13absRK7VECTOR3( struct $7VECTOR3*, struct $7VECTOR3* );
void _ZN4MAT2C1Ed( struct $4MAT2*, double );
void _ZN4MAT2C1Edddd( struct $4MAT2*, double, double, double, double );
static void _ZN4MAT2aSERKS_( struct $4MAT2*, struct $4MAT2* );
static void _ZN4MAT2C1ERKS_( struct $4MAT2*, struct $4MAT2* );
struct $7VECTOR2* _ZmlR4MAT2R7VECTOR2( struct $7VECTOR2*, struct $4MAT2*, struct $7VECTOR2* );
void _ZN4MAT3C1Ed( struct $4MAT3*, double );
void _ZN4MAT3C1Eddddddddd( struct $4MAT3*, double, double, double, double, double, double, double, double, double );
void _ZN4MAT3C1ER7VECTOR3S1_S1_( struct $4MAT3*, struct $7VECTOR3*, struct $7VECTOR3*, struct $7VECTOR3* );
void _ZN4MAT313SETZROTATIONREd( struct $4MAT3*, double );
void _ZN4MAT312SETROTATIONRER7VECTOR3d( struct $4MAT3*, struct $7VECTOR3*, double );
void _ZN4MAT310SETSCALINGEdd( struct $4MAT3*, double, double );
static void _ZN4MAT3aSERKS_( struct $4MAT3*, struct $4MAT3* );
static void _ZN4MAT3C1ERKS_( struct $4MAT3*, struct $4MAT3* );
struct $7VECTOR3* _ZmlR4MAT3R7VECTOR3( struct $7VECTOR3*, struct $4MAT3*, struct $7VECTOR3* );
void _ZN4MAT4C1Ed( struct $4MAT4*, double );
void _ZN4MAT4C1Edddddddddddddddd( struct $4MAT4*, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double );
void _ZN4MAT48SETORTHOEdddddd( struct $4MAT4*, double, double, double, double, double, double );
static void _ZN4MAT4aSERKS_( struct $4MAT4*, struct $4MAT4* );
static void _ZN4MAT4C1ERKS_( struct $4MAT4*, struct $4MAT4* );
void _ZN12SYSTEM_BUS_TC1Ev( struct $12SYSTEM_BUS_T* );
void _ZN12SYSTEM_BUS_TD1Ev( struct $12SYSTEM_BUS_T* );
int8 _ZN12SYSTEM_BUS_T8READBYTEEt( struct $12SYSTEM_BUS_T*, uint16 );
uint8 _ZN12SYSTEM_BUS_T9READUBYTEEd( struct $12SYSTEM_BUS_T*, double );
uint16 _ZN12SYSTEM_BUS_T10READUSHORTEd( struct $12SYSTEM_BUS_T*, double );
void _ZN12SYSTEM_BUS_T9WRITEBYTEEtt( struct $12SYSTEM_BUS_T*, uint16, uint16 );
void _ZN12SYSTEM_BUS_T10WRITEUBYTEEdd( struct $12SYSTEM_BUS_T*, double, double );
void _ZN12SYSTEM_BUS_T11WRITEUSHORTEdd( struct $12SYSTEM_BUS_T*, double, double );
double _ZN12SYSTEM_BUS_T6PEEK64Ed( struct $12SYSTEM_BUS_T*, double );
void _ZN12SYSTEM_BUS_T6POKE64Edd( struct $12SYSTEM_BUS_T*, double, double );
double _ZN12SYSTEM_BUS_T10SCREENCODEEd( struct $12SYSTEM_BUS_T*, double );
double _ZN12SYSTEM_BUS_T5PEEKBEd( struct $12SYSTEM_BUS_T*, double );
void _ZN12SYSTEM_BUS_T5POKEBEdd( struct $12SYSTEM_BUS_T*, double, double );
void _ZN12SYSTEM_BUS_T5POKEWEdd( struct $12SYSTEM_BUS_T*, double, double );
double _ZN12SYSTEM_BUS_T5PEEKWEd( struct $12SYSTEM_BUS_T*, double );
double _ZN12SYSTEM_BUS_T8ISNUMBERE8FBSTRINGd( struct $12SYSTEM_BUS_T*, FBSTRING*, double );
double _ZN12SYSTEM_BUS_T7LENGTH6ER7VECTOR2( struct $12SYSTEM_BUS_T*, struct $7VECTOR2* );
double _ZN12SYSTEM_BUS_T7LENGTH8ER7VECTOR2( struct $12SYSTEM_BUS_T*, struct $7VECTOR2* );
double _ZN12SYSTEM_BUS_T7SDPLANEER7VECTOR3( struct $12SYSTEM_BUS_T*, struct $7VECTOR3* );
double _ZN12SYSTEM_BUS_T8SDSPHEREER7VECTOR3d( struct $12SYSTEM_BUS_T*, struct $7VECTOR3*, double );
double _ZN12SYSTEM_BUS_T5SDBOXER7VECTOR3S1_( struct $12SYSTEM_BUS_T*, struct $7VECTOR3*, struct $7VECTOR3* );
double _ZN12SYSTEM_BUS_T11SDELLIPSOIDER7VECTOR3S1_( struct $12SYSTEM_BUS_T*, struct $7VECTOR3*, struct $7VECTOR3* );
double _ZN12SYSTEM_BUS_T10UDROUNDBOXER7VECTOR3S1_d( struct $12SYSTEM_BUS_T*, struct $7VECTOR3*, struct $7VECTOR3*, double );
double _ZN12SYSTEM_BUS_T7SDTORUSER7VECTOR3R7VECTOR2( struct $12SYSTEM_BUS_T*, struct $7VECTOR3*, struct $7VECTOR2* );
double _ZN12SYSTEM_BUS_T9SDTORUS82ER7VECTOR3R7VECTOR2( struct $12SYSTEM_BUS_T*, struct $7VECTOR3*, struct $7VECTOR2* );
double _ZN12SYSTEM_BUS_T9SDTORUS88ER7VECTOR3R7VECTOR2( struct $12SYSTEM_BUS_T*, struct $7VECTOR3*, struct $7VECTOR2* );
double _ZN12SYSTEM_BUS_T10SDHEXPRISMER7VECTOR3R7VECTOR2( struct $12SYSTEM_BUS_T*, struct $7VECTOR3*, struct $7VECTOR2* );
double _ZN12SYSTEM_BUS_T9SDCAPSULEER7VECTOR3S1_S1_d( struct $12SYSTEM_BUS_T*, struct $7VECTOR3*, struct $7VECTOR3*, struct $7VECTOR3*, double );
double _ZN12SYSTEM_BUS_T10SDTRIPRISMER7VECTOR3R7VECTOR2( struct $12SYSTEM_BUS_T*, struct $7VECTOR3*, struct $7VECTOR2* );
double _ZN12SYSTEM_BUS_T10SDCYLINDERER7VECTOR3R7VECTOR2( struct $12SYSTEM_BUS_T*, struct $7VECTOR3*, struct $7VECTOR2* );
double _ZN12SYSTEM_BUS_T11SDCYLINDER6ER7VECTOR3R7VECTOR2( struct $12SYSTEM_BUS_T*, struct $7VECTOR3*, struct $7VECTOR2* );
double _ZN12SYSTEM_BUS_T6SDCONEER7VECTOR3S1_( struct $12SYSTEM_BUS_T*, struct $7VECTOR3*, struct $7VECTOR3* );
double _ZN12SYSTEM_BUS_T13SDCONESECTIONER7VECTOR3ddd( struct $12SYSTEM_BUS_T*, struct $7VECTOR3*, double, double, double );
double _ZN12SYSTEM_BUS_T3OPSEdd( struct $12SYSTEM_BUS_T*, double, double );
struct $7VECTOR2* _ZN12SYSTEM_BUS_T3OPUER7VECTOR2S1_( struct $7VECTOR2*, struct $12SYSTEM_BUS_T*, struct $7VECTOR2*, struct $7VECTOR2* );
struct $7VECTOR3* _ZN12SYSTEM_BUS_T5OPREPER7VECTOR3S1_( struct $7VECTOR3*, struct $12SYSTEM_BUS_T*, struct $7VECTOR3*, struct $7VECTOR3* );
struct $7VECTOR3* _ZN12SYSTEM_BUS_T7OPTWISTER7VECTOR3( struct $7VECTOR3*, struct $12SYSTEM_BUS_T*, struct $7VECTOR3* );
struct $7VECTOR2* _ZN12SYSTEM_BUS_T3MAPER7VECTOR3( struct $7VECTOR2*, struct $12SYSTEM_BUS_T*, struct $7VECTOR3* );
struct $7VECTOR2* _ZN12SYSTEM_BUS_T7CASTRAYEv( struct $7VECTOR2*, struct $12SYSTEM_BUS_T* );
double _ZN12SYSTEM_BUS_T10SOFTSHADOWEv( struct $12SYSTEM_BUS_T* );
struct $7VECTOR3* _ZN12SYSTEM_BUS_T10CALCNORMALEv( struct $7VECTOR3*, struct $12SYSTEM_BUS_T* );
double _ZN12SYSTEM_BUS_T6CALCAOEv( struct $12SYSTEM_BUS_T* );
struct $7VECTOR3* _ZN12SYSTEM_BUS_T11RENDER_GLSLEv( struct $7VECTOR3*, struct $12SYSTEM_BUS_T* );
struct $4MAT3 _ZN12SYSTEM_BUS_T9SETCAMERAEv( struct $12SYSTEM_BUS_T* );
double _ZN12SYSTEM_BUS_T12HAVERSINEISHEd( struct $12SYSTEM_BUS_T*, double );
uint32 _ZN12SYSTEM_BUS_T10RAINBOWISHEfa( struct $12SYSTEM_BUS_T*, float, int8 );
void _ZN12SYSTEM_BUS_T6FILTEREPvi( struct $12SYSTEM_BUS_T*, void*, int32 );
double _ZN12SYSTEM_BUS_T3MAPEddddd( struct $12SYSTEM_BUS_T*, double, double, double, double, double );
void _ZN12SYSTEM_BUS_T9MAINIMAGEER7VECTOR4RK7VECTOR2( struct $12SYSTEM_BUS_T*, struct $7VECTOR4*, struct $7VECTOR2* );
void _ZN12SYSTEM_BUS_T9EXEC_GLSLEv( struct $12SYSTEM_BUS_T* );
void _ZN12SYSTEM_BUS_T12EXEC_GLSL_40Ev( struct $12SYSTEM_BUS_T* );
void _ZN12SYSTEM_BUS_T12EXEC_GLSL_90Ev( struct $12SYSTEM_BUS_T* );
void _ZN12SYSTEM_BUS_T13EXEC_GLSL_120Ev( struct $12SYSTEM_BUS_T* );
int64 _ZN12SYSTEM_BUS_T11FUNC_LBOUNDEPxii( struct $12SYSTEM_BUS_T*, int64*, int32, int32 );
int64 _ZN12SYSTEM_BUS_T11FUNC_UBOUNDEPxii( struct $12SYSTEM_BUS_T*, int64*, int32, int32 );
int64 _ZN12SYSTEM_BUS_T3QBREd( struct $12SYSTEM_BUS_T*, double );
int32 _ZN12SYSTEM_BUS_T18QBR_DOUBLE_TO_LONGEd( struct $12SYSTEM_BUS_T*, double );
int32 _ZN12SYSTEM_BUS_T8FUNC_INPEi( struct $12SYSTEM_BUS_T*, int32 );
uint64 _ZN12SYSTEM_BUS_T8GETUBITSEjPhx( struct $12SYSTEM_BUS_T*, uint32, uint8*, int64 );
int64 _ZN12SYSTEM_BUS_T7GETBITSEjPhx( struct $12SYSTEM_BUS_T*, uint32, uint8*, int64 );
void _ZN12SYSTEM_BUS_T7SETBITSEjPhxx( struct $12SYSTEM_BUS_T*, uint32, uint8*, int64, int64 );
double _ZN12SYSTEM_BUS_T7K_FREXPEdPd( struct $12SYSTEM_BUS_T*, double, double* );
double _ZN12SYSTEM_BUS_T7K_SQRTFEd( struct $12SYSTEM_BUS_T*, double );
void _ZN12SYSTEM_BUS_T8K_MEMSETEPjjj( struct $12SYSTEM_BUS_T*, uint32*, uint32, uint32 );
void _ZN12SYSTEM_BUS_T8K_MEMCPYEPjS0_j( struct $12SYSTEM_BUS_T*, uint32*, uint32*, uint32 );
double _ZN12SYSTEM_BUS_T8K_STRLENEPh( struct $12SYSTEM_BUS_T*, uint8* );
double _ZN12SYSTEM_BUS_T16K_STRLASTINDEXOFEPhS0_( struct $12SYSTEM_BUS_T*, uint8*, uint8* );
void _ZN12SYSTEM_BUS_T8K_STRREVEPh( struct $12SYSTEM_BUS_T*, uint8* );
double _ZN12SYSTEM_BUS_T6K_ATANEdd( struct $12SYSTEM_BUS_T*, double, double );
double _ZN12SYSTEM_BUS_T5K_POWEhh( struct $12SYSTEM_BUS_T*, uint8, uint8 );
double _ZN12SYSTEM_BUS_T5K_POWEaa( struct $12SYSTEM_BUS_T*, int8, int8 );
double _ZN12SYSTEM_BUS_T5K_POWEtt( struct $12SYSTEM_BUS_T*, uint16, uint16 );
double _ZN12SYSTEM_BUS_T5K_POWEss( struct $12SYSTEM_BUS_T*, int16, int16 );
double _ZN12SYSTEM_BUS_T5K_POWEjj( struct $12SYSTEM_BUS_T*, uint32, uint32 );
double _ZN12SYSTEM_BUS_T5K_POWEii( struct $12SYSTEM_BUS_T*, int32, int32 );
double _ZN12SYSTEM_BUS_T5K_POWEyy( struct $12SYSTEM_BUS_T*, uint64, uint64 );
double _ZN12SYSTEM_BUS_T5K_POWExx( struct $12SYSTEM_BUS_T*, int64, int64 );
double _ZN12SYSTEM_BUS_T5K_POWEff( struct $12SYSTEM_BUS_T*, float, float );
double _ZN12SYSTEM_BUS_T5K_POWEdd( struct $12SYSTEM_BUS_T*, double, double );
struct $7VECTOR3* _ZN12SYSTEM_BUS_T5K_POWER7VECTOR3S1_( struct $7VECTOR3*, struct $12SYSTEM_BUS_T*, struct $7VECTOR3*, struct $7VECTOR3* );
double _ZN12SYSTEM_BUS_T7K_EXP2FEh( struct $12SYSTEM_BUS_T*, uint8 );
double _ZN12SYSTEM_BUS_T7K_EXP2FEa( struct $12SYSTEM_BUS_T*, int8 );
double _ZN12SYSTEM_BUS_T7K_EXP2FEt( struct $12SYSTEM_BUS_T*, uint16 );
double _ZN12SYSTEM_BUS_T7K_EXP2FEs( struct $12SYSTEM_BUS_T*, int16 );
double _ZN12SYSTEM_BUS_T7K_EXP2FEj( struct $12SYSTEM_BUS_T*, uint32 );
double _ZN12SYSTEM_BUS_T7K_EXP2FEi( struct $12SYSTEM_BUS_T*, int32 );
double _ZN12SYSTEM_BUS_T7K_EXP2FEy( struct $12SYSTEM_BUS_T*, uint64 );
double _ZN12SYSTEM_BUS_T7K_EXP2FEx( struct $12SYSTEM_BUS_T*, int64 );
double _ZN12SYSTEM_BUS_T7K_EXP2FEf( struct $12SYSTEM_BUS_T*, float );
double _ZN12SYSTEM_BUS_T7K_EXP2FEd( struct $12SYSTEM_BUS_T*, double );
double _ZN12SYSTEM_BUS_T7K_EXP2FER9_FLOAT128( struct $12SYSTEM_BUS_T*, struct $9_FLOAT128* );
double _ZN12SYSTEM_BUS_T7K_EXP2FER9_FLOAT256( struct $12SYSTEM_BUS_T*, struct $9_FLOAT256* );
double _ZN12SYSTEM_BUS_T7K_EXP2FER9_FLOAT512( struct $12SYSTEM_BUS_T*, struct $9_FLOAT512* );
double _ZN12SYSTEM_BUS_T5K_EXPEd( struct $12SYSTEM_BUS_T*, double );
double _ZN12SYSTEM_BUS_T5K_LOGEd( struct $12SYSTEM_BUS_T*, double );
double _ZN12SYSTEM_BUS_T6K_SQRTEd( struct $12SYSTEM_BUS_T*, double );
double _ZN12SYSTEM_BUS_T6K_SIGNEd( struct $12SYSTEM_BUS_T*, double );
double _ZN12SYSTEM_BUS_T7K_FLOOREh( struct $12SYSTEM_BUS_T*, uint8 );
double _ZN12SYSTEM_BUS_T7K_FLOOREa( struct $12SYSTEM_BUS_T*, int8 );
double _ZN12SYSTEM_BUS_T7K_FLOOREt( struct $12SYSTEM_BUS_T*, uint16 );
double _ZN12SYSTEM_BUS_T7K_FLOOREs( struct $12SYSTEM_BUS_T*, int16 );
double _ZN12SYSTEM_BUS_T7K_FLOOREj( struct $12SYSTEM_BUS_T*, uint32 );
double _ZN12SYSTEM_BUS_T7K_FLOOREi( struct $12SYSTEM_BUS_T*, int32 );
double _ZN12SYSTEM_BUS_T7K_FLOOREy( struct $12SYSTEM_BUS_T*, uint64 );
double _ZN12SYSTEM_BUS_T7K_FLOOREx( struct $12SYSTEM_BUS_T*, int64 );
double _ZN12SYSTEM_BUS_T7K_FLOOREf( struct $12SYSTEM_BUS_T*, float );
double _ZN12SYSTEM_BUS_T7K_FLOOREd( struct $12SYSTEM_BUS_T*, double );
double _ZN12SYSTEM_BUS_T7K_FLOORER9_FLOAT128( struct $12SYSTEM_BUS_T*, struct $9_FLOAT128* );
double _ZN12SYSTEM_BUS_T7K_FLOORER9_FLOAT256( struct $12SYSTEM_BUS_T*, struct $9_FLOAT256* );
double _ZN12SYSTEM_BUS_T7K_FLOORER9_FLOAT512( struct $12SYSTEM_BUS_T*, struct $9_FLOAT512* );
double _ZN12SYSTEM_BUS_T8K_MODULOEdd( struct $12SYSTEM_BUS_T*, double, double );
struct $7VECTOR3* _ZN12SYSTEM_BUS_T8K_MODULOER7VECTOR3S1_( struct $7VECTOR3*, struct $12SYSTEM_BUS_T*, struct $7VECTOR3*, struct $7VECTOR3* );
double _ZN12SYSTEM_BUS_T5K_MINEdd( struct $12SYSTEM_BUS_T*, double, double );
struct $7VECTOR2* _ZN12SYSTEM_BUS_T5K_MINER7VECTOR2S1_( struct $7VECTOR2*, struct $12SYSTEM_BUS_T*, struct $7VECTOR2*, struct $7VECTOR2* );
double _ZN12SYSTEM_BUS_T5K_MAXEdd( struct $12SYSTEM_BUS_T*, double, double );
struct $7VECTOR2* _ZN12SYSTEM_BUS_T5K_MAXER7VECTOR2Rd( struct $7VECTOR2*, struct $12SYSTEM_BUS_T*, struct $7VECTOR2*, double* );
struct $7VECTOR3* _ZN12SYSTEM_BUS_T5K_MAXER7VECTOR3Rd( struct $7VECTOR3*, struct $12SYSTEM_BUS_T*, struct $7VECTOR3*, double* );
double _ZN12SYSTEM_BUS_T16K_PASCALTRIANGLEEhh( struct $12SYSTEM_BUS_T*, uint8, uint8 );
double _ZN12SYSTEM_BUS_T16K_PASCALTRIANGLEEaa( struct $12SYSTEM_BUS_T*, int8, int8 );
double _ZN12SYSTEM_BUS_T16K_PASCALTRIANGLEEtt( struct $12SYSTEM_BUS_T*, uint16, uint16 );
double _ZN12SYSTEM_BUS_T16K_PASCALTRIANGLEEss( struct $12SYSTEM_BUS_T*, int16, int16 );
double _ZN12SYSTEM_BUS_T16K_PASCALTRIANGLEEjj( struct $12SYSTEM_BUS_T*, uint32, uint32 );
double _ZN12SYSTEM_BUS_T16K_PASCALTRIANGLEEii( struct $12SYSTEM_BUS_T*, int32, int32 );
double _ZN12SYSTEM_BUS_T16K_PASCALTRIANGLEEyy( struct $12SYSTEM_BUS_T*, uint64, uint64 );
double _ZN12SYSTEM_BUS_T16K_PASCALTRIANGLEExx( struct $12SYSTEM_BUS_T*, int64, int64 );
double _ZN12SYSTEM_BUS_T16K_PASCALTRIANGLEEff( struct $12SYSTEM_BUS_T*, float, float );
double _ZN12SYSTEM_BUS_T16K_PASCALTRIANGLEEdd( struct $12SYSTEM_BUS_T*, double, double );
double _ZN12SYSTEM_BUS_T7K_CLAMPEhhh( struct $12SYSTEM_BUS_T*, uint8, uint8, uint8 );
double _ZN12SYSTEM_BUS_T7K_CLAMPEaaa( struct $12SYSTEM_BUS_T*, int8, int8, int8 );
double _ZN12SYSTEM_BUS_T7K_CLAMPEttt( struct $12SYSTEM_BUS_T*, uint16, uint16, uint16 );
double _ZN12SYSTEM_BUS_T7K_CLAMPEsss( struct $12SYSTEM_BUS_T*, int16, int16, int16 );
double _ZN12SYSTEM_BUS_T7K_CLAMPEjjj( struct $12SYSTEM_BUS_T*, uint32, uint32, uint32 );
double _ZN12SYSTEM_BUS_T7K_CLAMPEiii( struct $12SYSTEM_BUS_T*, int32, int32, int32 );
double _ZN12SYSTEM_BUS_T7K_CLAMPEyyy( struct $12SYSTEM_BUS_T*, uint64, uint64, uint64 );
double _ZN12SYSTEM_BUS_T7K_CLAMPExxx( struct $12SYSTEM_BUS_T*, int64, int64, int64 );
double _ZN12SYSTEM_BUS_T7K_CLAMPEfff( struct $12SYSTEM_BUS_T*, float, float, float );
double _ZN12SYSTEM_BUS_T7K_CLAMPEddd( struct $12SYSTEM_BUS_T*, double, double, double );
struct $7VECTOR3* _ZN12SYSTEM_BUS_T7K_CLAMPER7VECTOR3dd( struct $7VECTOR3*, struct $12SYSTEM_BUS_T*, struct $7VECTOR3*, double, double );
double _ZN12SYSTEM_BUS_T5K_MIXEddd( struct $12SYSTEM_BUS_T*, double, double, double );
struct $7VECTOR3* _ZN12SYSTEM_BUS_T5K_MIXER7VECTOR3S1_d( struct $7VECTOR3*, struct $12SYSTEM_BUS_T*, struct $7VECTOR3*, struct $7VECTOR3*, double );
double _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEddd( struct $12SYSTEM_BUS_T*, double, double, double );
double _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR2( struct $12SYSTEM_BUS_T*, struct $7VECTOR2* );
double _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR3( struct $12SYSTEM_BUS_T*, struct $7VECTOR3* );
double _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR2S1_( struct $12SYSTEM_BUS_T*, struct $7VECTOR2*, struct $7VECTOR2* );
double _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( struct $12SYSTEM_BUS_T*, struct $7VECTOR3*, struct $7VECTOR3* );
struct $7VECTOR3* _ZN12SYSTEM_BUS_T7K_CROSSER7VECTOR3S1_( struct $7VECTOR3*, struct $12SYSTEM_BUS_T*, struct $7VECTOR3*, struct $7VECTOR3* );
struct $7VECTOR3* _ZN12SYSTEM_BUS_T11K_NORMALIZEER7VECTOR3( struct $7VECTOR3*, struct $12SYSTEM_BUS_T*, struct $7VECTOR3* );
struct $7VECTOR3* _ZN12SYSTEM_BUS_T9K_REFLECTER7VECTOR3S1_( struct $7VECTOR3*, struct $12SYSTEM_BUS_T*, struct $7VECTOR3*, struct $7VECTOR3* );
void _ZN12SYSTEM_BUS_T14K_FLOAT128_ABSEP9_FLOAT128S1_( struct $12SYSTEM_BUS_T*, struct $9_FLOAT128*, struct $9_FLOAT128* );
void _ZN12SYSTEM_BUS_T14K_FLOAT256_ABSEP9_FLOAT256S1_( struct $12SYSTEM_BUS_T*, struct $9_FLOAT256*, struct $9_FLOAT256* );
void _ZN12SYSTEM_BUS_T14K_FLOAT512_ABSEP9_FLOAT512S1_( struct $12SYSTEM_BUS_T*, struct $9_FLOAT512*, struct $9_FLOAT512* );
static void _ZN12SYSTEM_BUS_TaSERKS_( struct $12SYSTEM_BUS_T*, struct $12SYSTEM_BUS_T* );
void _ZN7CPU6510C1EP12SYSTEM_BUS_T( struct $7CPU6510*, struct $12SYSTEM_BUS_T* );
void _ZN7CPU6510D1Ev( struct $7CPU6510* );
double _ZN7CPU65104TICKEd( struct $7CPU6510*, double );
double _ZN7CPU65107ADR_IMMEv( struct $7CPU6510* );
double _ZN7CPU65107ADR_RELEv( struct $7CPU6510* );
double _ZN7CPU65108ADR_ZEROEv( struct $7CPU6510* );
double _ZN7CPU65109ADR_ZEROXEv( struct $7CPU6510* );
double _ZN7CPU65109ADR_ZEROYEv( struct $7CPU6510* );
double _ZN7CPU65107ADR_ABSEv( struct $7CPU6510* );
double _ZN7CPU65108ADR_ABSXEv( struct $7CPU6510* );
double _ZN7CPU65108ADR_ABSYEv( struct $7CPU6510* );
double _ZN7CPU65107ADR_INDEv( struct $7CPU6510* );
double _ZN7CPU65108ADR_INDXEv( struct $7CPU6510* );
double _ZN7CPU65108ADR_INDYEv( struct $7CPU6510* );
void _ZN7CPU65104PUSHEd( struct $7CPU6510*, double );
double _ZN7CPU65104PULLEv( struct $7CPU6510* );
static void _ZN7CPU6510aSERKS_( struct $7CPU6510*, struct $7CPU6510* );
void _ZN5C64_TC1Ev( struct $5C64_T* );
void _ZN5C64_TD1Ev( struct $5C64_T* );
static void _ZN5C64_TaSERKS_( struct $5C64_T*, struct $5C64_T* );
void INS_UNK( struct $7CPU6510* );
void INS_ADC( struct $7CPU6510* );
void INS_AND( struct $7CPU6510* );
void INS_ASL( struct $7CPU6510* );
void INS_ASLA( struct $7CPU6510* );
void INS_BCC( struct $7CPU6510* );
void INS_BCS( struct $7CPU6510* );
void INS_BEQ( struct $7CPU6510* );
void INS_BIT( struct $7CPU6510* );
void INS_BMI( struct $7CPU6510* );
void INS_BNE( struct $7CPU6510* );
void INS_BPL( struct $7CPU6510* );
void INS_BRK( struct $7CPU6510* );
void INS_BVC( struct $7CPU6510* );
void INS_BVS( struct $7CPU6510* );
void INS_CLC( struct $7CPU6510* );
void INS_CLD( struct $7CPU6510* );
void INS_CLI( struct $7CPU6510* );
void INS_CLV( struct $7CPU6510* );
void INS_CMP( struct $7CPU6510* );
void INS_CPX( struct $7CPU6510* );
void INS_CPY( struct $7CPU6510* );
void INS_DEC( struct $7CPU6510* );
void INS_DEX( struct $7CPU6510* );
void INS_DEY( struct $7CPU6510* );
void INS_EOR( struct $7CPU6510* );
void INS_INC( struct $7CPU6510* );
void INS_INX( struct $7CPU6510* );
void INS_INY( struct $7CPU6510* );
void INS_JMP( struct $7CPU6510* );
void INS_JSR( struct $7CPU6510* );
void INS_LDA( struct $7CPU6510* );
void INS_LDX( struct $7CPU6510* );
void INS_LDY( struct $7CPU6510* );
void INS_LSR( struct $7CPU6510* );
void INS_LSRA( struct $7CPU6510* );
void INS_NOP( struct $7CPU6510* );
void INS_ORA( struct $7CPU6510* );
void INS_PHA( struct $7CPU6510* );
void INS_PHP( struct $7CPU6510* );
void INS_PLA( struct $7CPU6510* );
void INS_PLP( struct $7CPU6510* );
void INS_ROL( struct $7CPU6510* );
void INS_ROLA( struct $7CPU6510* );
void INS_ROR( struct $7CPU6510* );
void INS_RORA( struct $7CPU6510* );
void INS_RTI( struct $7CPU6510* );
void INS_RTS( struct $7CPU6510* );
void INS_SBC( struct $7CPU6510* );
void INS_SEC( struct $7CPU6510* );
void INS_SED( struct $7CPU6510* );
void INS_SEI( struct $7CPU6510* );
void INS_STA( struct $7CPU6510* );
void INS_STX( struct $7CPU6510* );
void INS_STY( struct $7CPU6510* );
void INS_TAX( struct $7CPU6510* );
void INS_TAY( struct $7CPU6510* );
void INS_TSX( struct $7CPU6510* );
void INS_TXA( struct $7CPU6510* );
void INS_TXS( struct $7CPU6510* );
void INS_TYA( struct $7CPU6510* );
void INS_R32( struct $7CPU6510* );
void INS_W32( struct $7CPU6510* );
void INS_R64( struct $7CPU6510* );
void INS_W64( struct $7CPU6510* );
int64 INTERRUPTSERVICE( struct $7CPU6510* );
void KMAIN( struct $14MULTIBOOT_INFO* );
static void _GLOBAL__I( void ) __attribute__(( constructor ));
static void _GLOBAL__D( void ) __attribute__(( destructor ));
static double POS_INF$ = __builtin_inf();
static double NEG_INF$ = (-__builtin_inf());
static struct $14MULTIBOOT_INFO* MB_INFO$;
static uint16 INDEX$ = (uint16)34u;
static uint16 RVS$ = (uint16)199u;
static uint16 FCOLOR$ = (uint16)646u;
static uint16 HIBASE$ = (uint16)648u;
static uint16 SP0X$ = (uint16)53248u;
static uint16 SP0Y$ = (uint16)53249u;
static uint16 SP1X$ = (uint16)53250u;
static uint16 SP1Y$ = (uint16)53251u;
static uint16 SP2X$ = (uint16)53252u;
static uint16 SP2Y$ = (uint16)53253u;
static uint16 SP3X$ = (uint16)53254u;
static uint16 SP3Y$ = (uint16)53255u;
static uint16 SP4X$ = (uint16)53256u;
static uint16 SP4Y$ = (uint16)53257u;
static uint16 SP5X$ = (uint16)53258u;
static uint16 SP5Y$ = (uint16)53259u;
static uint16 SP6X$ = (uint16)53260u;
static uint16 SP6Y$ = (uint16)53261u;
static uint16 SP7X$ = (uint16)53262u;
static uint16 SP7Y$ = (uint16)53263u;
static uint16 VMCSB$ = (uint16)53272u;
static uint16 EXTCOL$ = (uint16)53280u;
static uint16 BGCOL0$ = (uint16)53281u;
static uint16 BGCOL1$ = (uint16)53282u;
static uint16 BGCOL2$ = (uint16)53283u;
static uint16 BGCOL3$ = (uint16)53284u;
static uint16 SP0COL$ = (uint16)53287u;
static uint16 SP1COL$ = (uint16)53288u;
static uint16 SP2COL$ = (uint16)53289u;
static uint16 SP3COL$ = (uint16)53290u;
static uint16 SP4COL$ = (uint16)53291u;
static uint16 SP5COL$ = (uint16)53309u;
static uint16 SP6COL$ = (uint16)53310u;
static uint16 SP7COL$ = (uint16)53311u;
static double MEM64$[16777216];
static int16 NOT_IN_DEFAULT$;
static int16 OK_TO_DECLARE$;
static int16 LVALUE_OK$;
struct $16BBOX_TREE_STRUCT;
struct $16BBOX_TREE_STRUCT {
 int16 INFINITE;
 int16 ENTRIES;
 struct $19BOUNDING_BOX_STRUCT BBOX;
 struct $16BBOX_TREE_STRUCT** NODE;
};
extern int __$fb_structsizecheck[(sizeof( struct $16BBOX_TREE_STRUCT ) == 32) ? 1 : -1];
static struct $16BBOX_TREE_STRUCT* ROOT_OBJECT$;
struct $14PROJECT_STRUCT {
 int64 X1;
 int64 Y1;
 int64 X2;
 int64 Y2;
};
extern int __$fb_structsizecheck[(sizeof( struct $14PROJECT_STRUCT ) == 32) ? 1 : -1];
struct $24PROJECT_TREE_NODE_STRUCT;
struct $24PROJECT_TREE_NODE_STRUCT {
 uint16 IS_LEAF;
 struct $16BBOX_TREE_STRUCT* NODE;
 struct $14PROJECT_STRUCT PROJECT;
 uint16 ENTRIES;
 struct $24PROJECT_TREE_NODE_STRUCT** ENTRY;
};
extern int __$fb_structsizecheck[(sizeof( struct $24PROJECT_TREE_NODE_STRUCT ) == 64) ? 1 : -1];
struct $20PROJECT_QUEUE_STRUCT {
 uint64 QSIZE;
 uint64 MAX_QSIZE;
 struct $24PROJECT_TREE_NODE_STRUCT** QUEUE;
};
extern int __$fb_structsizecheck[(sizeof( struct $20PROJECT_QUEUE_STRUCT ) == 24) ? 1 : -1];
static struct $20PROJECT_QUEUE_STRUCT* NODE_QUEUE$;
struct $12QELEM_STRUCT {
 double DEPTH;
 struct $16BBOX_TREE_STRUCT* NODE;
};
extern int __$fb_structsizecheck[(sizeof( struct $12QELEM_STRUCT ) == 16) ? 1 : -1];
struct $21PRIORITY_QUEUE_STRUCT {
 uint64 QSIZE;
 uint64 MAX_QSIZE;
 struct $12QELEM_STRUCT* QUEUE;
};
extern int __$fb_structsizecheck[(sizeof( struct $21PRIORITY_QUEUE_STRUCT ) == 24) ? 1 : -1];
static struct $21PRIORITY_QUEUE_STRUCT* VLBUFFER_QUEUE$;
static int64 TRACE_LEVEL$;
static int64 MAX_TRACE_LEVEL$;
static int64 HIGHEST_TRACE_LEVEL$;
static double ADC_BAILOUT$;
static uint32* HISTOGRAM_GRID$;
static uint32 MAX_HISTOGRAM_VALUE$;
struct $18FILE_HANDLE_STRUCT {
 int8* FILENAME;
 int64 MODE;
 int64 _WIDTH;
 int64 _HEIGHT;
 int64 BUFFER_SIZE;
 int8* BUFFER;
 void* FILE;
 int64 FILE_TYPE;
};
extern int __$fb_structsizecheck[(sizeof( struct $18FILE_HANDLE_STRUCT ) == 64) ? 1 : -1];
static struct $18FILE_HANDLE_STRUCT* HISTOGRAM_FILE_HANDLE$;
struct $14PATTERN_STRUCT;
struct $16BLEND_MAP_STRUCT;
struct $24DENSITY_FILE_DATA_STRUCT {
 int64 REFERENCES;
 int8* _NAME;
 int64 SX;
 int64 SY;
 int64 SZ;
 uint8*** DENSITY;
};
extern int __$fb_structsizecheck[(sizeof( struct $24DENSITY_FILE_DATA_STRUCT ) == 48) ? 1 : -1];
struct $19DENSITY_FILE_STRUCT {
 int64 INTERPOLATION;
 struct $24DENSITY_FILE_DATA_STRUCT* _DATA;
};
extern int __$fb_structsizecheck[(sizeof( struct $19DENSITY_FILE_STRUCT ) == 16) ? 1 : -1];
struct $19IMAGE_COLOUR_STRUCT {
 uint16 RED;
 uint16 GREEN;
 uint16 BLUE;
 uint16 FILTER;
 uint16 TRANSMIT;
};
extern int __$fb_structsizecheck[(sizeof( struct $19IMAGE_COLOUR_STRUCT ) == 10) ? 1 : -1];
struct $17IMAGE_LINE_STRUCT {
 uint8* RED;
 uint8* GREEN;
 uint8* BLUE;
 uint8* TRANSM;
};
extern int __$fb_structsizecheck[(sizeof( struct $17IMAGE_LINE_STRUCT ) == 32) ? 1 : -1];
struct $12IMAGE_STRUCT {
 int64 REFERENCES;
 int64 MAP_TYPE;
 int64 FILE_TYPE;
 int64 IMAGE_TYPE;
 int64 INTERPOLATION_TYPE;
 int16 ONCE_FLAG;
 int16 USE_COLOUR_FLAG;
 double GRADIENT;
 double _WIDTH;
 double _HEIGHT;
 int64 IWIDTH;
 int64 IHEIGHT;
 int16 COLOUR_MAP_SIZE;
 struct $19IMAGE_COLOUR_STRUCT* COLOUR_MAP;
 union {
  struct $17IMAGE_LINE_STRUCT* RGB_LINES;
  uint8** MAP_LINES;
 };
};
extern int __$fb_structsizecheck[(sizeof( struct $12IMAGE_STRUCT ) == 112) ? 1 : -1];
struct $14PIGMENT_STRUCT {
 uint16 _TYPE;
 uint16 WAVE_TYPE;
 uint16 FLAGS;
 int64 REFERENCES;
 double FREQUENCY;
 double PHASE;
 double EXPONENT;
 struct $14PATTERN_STRUCT* _NEXT;
 struct $16BLEND_MAP_STRUCT* BLEND_MAP;
 union {
  struct $19DENSITY_FILE_STRUCT* DENSITY_FILE;
  struct $12IMAGE_STRUCT* IMAGE;
  double GRADIENT;
  double AGATE_TURB_SCALE;
  int16 NUM_OF_WAVES;
  int16 ITERATIONS;
  int16 ARMS;
  struct {
   double MORTAR;
   double SIZE;
  };
  struct {
   double CONTROL0;
   double CONTROL1;
  };
  double COLOUR;
 };
};
extern int __$fb_structsizecheck[(sizeof( struct $14PIGMENT_STRUCT ) == 72) ? 1 : -1];
struct $14TNORMAL_STRUCT;
struct $13FINISH_STRUCT {
 double DIFFUSE;
 double BRILLIANCE;
 double SPECULAR;
 double ROUGHNESS;
 double PHONG;
 double PHONG_SIZE;
 double IRID;
 double IRID_FILM_THICKNESS;
 double IRID_TURB;
 double CRAND;
 double METALLIC;
 double TEMP_CAUSTICS;
 double TEMP_IOR;
 double TEMP_REFRACT;
 double REFLECT_EXP;
 double AMBIENT;
 double REFLECTION;
};
extern int __$fb_structsizecheck[(sizeof( struct $13FINISH_STRUCT ) == 136) ? 1 : -1];
struct $14TEXTURE_STRUCT;
struct $14TEXTURE_STRUCT {
 uint16 _TYPE;
 uint16 WAVE_TYPE;
 uint16 FLAGS;
 int64 REFERENCES;
 double FREQUENCY;
 double PHASE;
 double EXPONENT;
 struct $14PATTERN_STRUCT* _NEXT;
 struct $16BLEND_MAP_STRUCT* BLEND_MAP;
 union {
  struct $19DENSITY_FILE_STRUCT* DENSITY_FILE;
  struct $12IMAGE_STRUCT* IMAGE;
  double GRADIENT;
  double AGATE_TURB_SCALE;
  int16 NUM_OF_WAVES;
  int16 ITERATIONS;
  int16 ARMS;
  struct {
   double MORTAR;
   double SIZE;
  };
  struct {
   double CONTROL0;
   double CONTROL1;
  };
 };
 struct $14PIGMENT_STRUCT* PIGMENT;
 struct $14TNORMAL_STRUCT* TNORMAL;
 struct $13FINISH_STRUCT* FINISH;
 struct $14TEXTURE_STRUCT* MATERIALS;
 int64 NUM_OF_MATS;
 struct $14TEXTURE_STRUCT* NEXT_MATERIAL;
};
extern int __$fb_structsizecheck[(sizeof( struct $14TEXTURE_STRUCT ) == 120) ? 1 : -1];
struct $15BLEND_MAP_ENTRY {
 double VALUE;
 uint8 SAME;
 union {
  double COLOUR;
  struct $14PIGMENT_STRUCT* PIGMENT;
  struct $14TNORMAL_STRUCT* TNORMAL;
  struct $14TEXTURE_STRUCT* TEXTURE;
  double POINT_SLOPE;
 };
};
extern int __$fb_structsizecheck[(sizeof( struct $15BLEND_MAP_ENTRY ) == 24) ? 1 : -1];
struct $16BLEND_MAP_STRUCT {
 int16 NUMBER_OF_ENTRIES;
 int16 TRANSPARENCY_FLAG;
 int16 _TYPE;
 int32 USERS;
 struct $15BLEND_MAP_ENTRY* BLEND_MAP_ENTRIES;
};
extern int __$fb_structsizecheck[(sizeof( struct $16BLEND_MAP_STRUCT ) == 24) ? 1 : -1];
struct $14PATTERN_STRUCT {
 uint16 _TYPE;
 uint16 WAVE_TYPE;
 uint16 FLAGS;
 int64 REFERENCES;
 double FREQUENCY;
 double PHASE;
 double EXPONENT;
 struct $14PATTERN_STRUCT* _NEXT;
 struct $16BLEND_MAP_STRUCT* BLEND_MAP;
 union {
  struct $19DENSITY_FILE_STRUCT* DENSITY_FILE;
  struct $12IMAGE_STRUCT* IMAGE;
  double GRADIENT;
  double AGATE_TURB_SCALE;
  int16 NUM_OF_WAVES;
  int16 ITERATIONS;
  int16 ARMS;
  struct {
   double MORTAR;
   double SIZE;
  };
  struct {
   double CONTROL0;
   double CONTROL1;
  };
 };
};
extern int __$fb_structsizecheck[(sizeof( struct $14PATTERN_STRUCT ) == 72) ? 1 : -1];
struct $14TNORMAL_STRUCT {
 uint16 _TYPE;
 uint16 WAVE_TYPE;
 uint16 FLAGS;
 int64 REFERENCES;
 double FREQUENCY;
 double PHASE;
 double EXPONENT;
 struct $14PATTERN_STRUCT* _NEXT;
 struct $16BLEND_MAP_STRUCT* BLEND_MAP;
 union {
  struct $19DENSITY_FILE_STRUCT* DENSITY_FILE;
  struct $12IMAGE_STRUCT* IMAGE;
  double GRADIENT;
  double AGATE_TURB_SCALE;
  int16 NUM_OF_WAVES;
  int16 ITERATIONS;
  int16 ARMS;
  struct {
   double MORTAR;
   double SIZE;
  };
  struct {
   double CONTROL0;
   double CONTROL1;
  };
  double AMOUNT;
 };
};
extern int __$fb_structsizecheck[(sizeof( struct $14TNORMAL_STRUCT ) == 72) ? 1 : -1];
struct $13CAMERA_STRUCT {
 double LOCATION;
 double DIRECTION;
 double UP;
 double _RIGHT;
 double SKY;
 double LOOK_AT;
 double FOCAL_DISTANCE;
 double APERTURE;
 int64 BLUR_SAMPLES;
 double CONFIDENCE;
 double VARIANCE;
 int64 _TYPE;
 double ANGLE;
 struct $14TNORMAL_STRUCT* TNORMAL;
};
extern int __$fb_structsizecheck[(sizeof( struct $13CAMERA_STRUCT ) == 112) ? 1 : -1];
struct $13OBJECT_STRUCT;
struct $12MEDIA_STRUCT;
struct $12MEDIA_STRUCT {
 int64 _TYPE;
 int64 INTERVALS;
 int64 MIN_SAMPLES;
 int64 MAX_SAMPLES;
 int64 IS_CONSTANT;
 double ECCENTRICITY;
 double SC_EXT;
 int64 USE_ABSORPTION;
 int64 USE_EMISSION;
 int64 USE_EXTINCTION;
 int64 USE_SCATTERING;
 double ABSORPTION;
 double EMISSION;
 double EXTINCTION;
 double SCATTERING;
 double RATIO;
 double CONFIDENCE;
 double VARIANCE;
 double* SAMPLE_THRESHOLD;
 struct $14PIGMENT_STRUCT* DENSITY;
 struct $12MEDIA_STRUCT* NEXT_MEDIA;
};
extern int __$fb_structsizecheck[(sizeof( struct $12MEDIA_STRUCT ) == 168) ? 1 : -1];
struct $15INTERIOR_STRUCT {
 int32 REFERENCES;
 int64 HOLLOW;
 double IOR;
 double CAUSTICS;
 double OLD_REFRACT;
 double FADE_DISTANCE;
 double FADE_POWER;
 struct $12MEDIA_STRUCT* IMEDIA;
};
extern int __$fb_structsizecheck[(sizeof( struct $15INTERIOR_STRUCT ) == 64) ? 1 : -1];
struct $14_OBJECT_FIELDS {
 void* METHODS;
 int64 _TYPE;
 struct $13OBJECT_STRUCT* SIBLING;
 struct $14TEXTURE_STRUCT* TEXTURE;
 struct $15INTERIOR_STRUCT* INTERIOR;
 struct $13OBJECT_STRUCT* BOUND;
 struct $13OBJECT_STRUCT* CLIP;
 struct $19BOUNDING_BOX_STRUCT BBOX;
 uint32 FLAGS;
};
extern int __$fb_structsizecheck[(sizeof( struct $14_OBJECT_FIELDS ) == 80) ? 1 : -1];
struct $13OBJECT_STRUCT {
 struct $14_OBJECT_FIELDS OBJECT_FIELDS;
};
extern int __$fb_structsizecheck[(sizeof( struct $13OBJECT_STRUCT ) == 80) ? 1 : -1];
struct $16_COMPOUND_FIELDS {
 struct $14_OBJECT_FIELDS OBJECT_FIELDS;
 struct $13OBJECT_STRUCT* CHILDREN;
};
extern int __$fb_structsizecheck[(sizeof( struct $16_COMPOUND_FIELDS ) == 88) ? 1 : -1];
struct $19LIGHT_SOURCE_STRUCT;
struct $19LIGHT_SOURCE_STRUCT {
 struct $16_COMPOUND_FIELDS COMPOUND_FIELDS;
 double COLOUR;
 double DIRECTION;
 double CENTER;
 double POINTS_AT;
 double _AXIS1;
 double _AXIS2;
 double COEFF;
 double RADIUS;
 double FALLOFF;
 double FADE_DISTANCE;
 double FADE_POWER;
 struct $19LIGHT_SOURCE_STRUCT* NEXT_LIGHT_SOURCE;
 uint8 LIGHT_TYPE;
 uint8 AREA_LIGHT;
 uint8 JITTER;
 uint8 TRACK;
 int64 AREA_SIZE1;
 int64 AREA_SIZE2;
 int64 ADAPTIVE_LEVEL;
 int64 MEDIA_ATTENUATION;
 int64 MEDIA_INTERACTION;
 double** LIGHT_GRID;
 struct $13OBJECT_STRUCT* SHADOW_CACHED_OBJECT;
 struct $24PROJECT_TREE_NODE_STRUCT* LIGHT_BUFFER;
};
extern int __$fb_structsizecheck[(sizeof( struct $19LIGHT_SOURCE_STRUCT ) == 256) ? 1 : -1];
struct $12WARPS_STRUCT;
struct $12WARPS_STRUCT {
 uint16 WARP_TYPE;
 struct $12WARPS_STRUCT* NEXT_WARP;
};
extern int __$fb_structsizecheck[(sizeof( struct $12WARPS_STRUCT ) == 16) ? 1 : -1];
struct $11TURB_STRUCT {
 uint16 WARP_TYPE;
 struct $12WARPS_STRUCT* NEXT_WARP;
 double TURBULENCE;
 int64 OCTAVES;
 double LAMBDA;
 double OMEGA;
};
extern int __$fb_structsizecheck[(sizeof( struct $11TURB_STRUCT ) == 48) ? 1 : -1];
struct $10FOG_STRUCT;
struct $10FOG_STRUCT {
 int64 _TYPE;
 double DISTANCE;
 double ALT;
 double OFFSET;
 double COLOUR;
 double UP;
 struct $11TURB_STRUCT* TURB;
 double TURB_DEPTH;
 struct $10FOG_STRUCT* _NEXT;
};
extern int __$fb_structsizecheck[(sizeof( struct $10FOG_STRUCT ) == 72) ? 1 : -1];
struct $14RAINBOW_STRUCT;
struct $14RAINBOW_STRUCT {
 double DISTANCE;
 double JITTER;
 double ANGLE;
 double _WIDTH;
 double ARC_ANGLE;
 double FALLOFF_ANGLE;
 double FALLOFF_WIDTH;
 double ANTISOLAR_VECTOR;
 double UP_VECTOR;
 double RIGHT_VECTOR;
 struct $14PIGMENT_STRUCT* PIGMENT;
 struct $14RAINBOW_STRUCT* _NEXT;
};
extern int __$fb_structsizecheck[(sizeof( struct $14RAINBOW_STRUCT ) == 96) ? 1 : -1];
struct $16TRANSFORM_STRUCT {
 double MATRIX;
 double INVERSE;
};
extern int __$fb_structsizecheck[(sizeof( struct $16TRANSFORM_STRUCT ) == 16) ? 1 : -1];
struct $16SKYSPHERE_STRUCT {
 int64 COUNT;
 struct $14PIGMENT_STRUCT** PIGMENTS;
 struct $16TRANSFORM_STRUCT* TRANS;
};
extern int __$fb_structsizecheck[(sizeof( struct $16SKYSPHERE_STRUCT ) == 24) ? 1 : -1];
struct $12FRAME_STRUCT {
 struct $13CAMERA_STRUCT* CAMERA;
 int64 SCREEN_HEIGHT;
 int64 SCREEN_WIDTH;
 int64 NUMBER_OF_LIGHT_SOURCES;
 struct $19LIGHT_SOURCE_STRUCT* LIGHT_SOURCES;
 struct $13OBJECT_STRUCT* OBJECTS;
 double ATMOSPHERE_IOR;
 double ANTIALIAS_THRESHOLD;
 double BACKGROUND_COLOUR;
 double AMBIENT_LIGHT;
 double IRID_WAVELENGTHS;
 struct $12MEDIA_STRUCT* ATMOSPHERE;
 struct $10FOG_STRUCT* FOG;
 struct $14RAINBOW_STRUCT* RAINBOW;
 struct $16SKYSPHERE_STRUCT* SKYSPHERE;
};
extern int __$fb_structsizecheck[(sizeof( struct $12FRAME_STRUCT ) == 120) ? 1 : -1];
static struct $12FRAME_STRUCT FRAME$;
struct $14COUNTER_STRUCT {
 uint32 HIGH;
 uint32 LOW;
};
extern int __$fb_structsizecheck[(sizeof( struct $14COUNTER_STRUCT ) == 8) ? 1 : -1];
static struct $14COUNTER_STRUCT _STATS$[99];
static struct $14COUNTER_STRUCT TOTALSTATS$[99];
static int64 TSTART$;
static int64 TSTOP$;
static double TPARSE$;
static double TRENDER$;
static double TPARSE_TOTAL$;
static double TRENDER_TOTAL$;
static int8 COLOR_BITS$;
static int64 NUMBER_OF_FILES$;
struct $8FRAMESEQ {
 double CLOCK_VALUE;
 int64 FRAMENUMBER;
 int64 INITIALFRAME;
 double INITIALCLOCK;
 int64 FINALFRAME;
 int64 FRAMENUMWIDTH;
 double FINALCLOCK;
 int64 SUBSETSTARTFRAME;
 double SUBSETSTARTPERCENT;
 int64 SUBSETENDFRAME;
 double SUBSETENDPERCENT;
 uint64 FIELD_RENDER_FLAG;
 uint64 ODD_FIELD_FLAG;
};
extern int __$fb_structsizecheck[(sizeof( struct $8FRAMESEQ ) == 104) ? 1 : -1];
typedef int64 $15HISTOGRAM_TYPES;
typedef int64 $9_SHELLRET;
struct $10_SHELLDATA {
 $9_SHELLRET RET;
 int64 INVERSE;
 int8 _COMMAND[251];
};
extern int __$fb_structsizecheck[(sizeof( struct $10_SHELLDATA ) == 272) ? 1 : -1];
struct $15_OPTIONS_STRUCT {
 int64 FILE_BUFFER_SIZE;
 uint32 OPTIONS;
 int8 DISPLAYFORMAT;
 int8 PALETTEOPTION;
 int8 OUTPUTFORMAT;
 int64 OUTPUTQUALITY;
 int8 INPUT_FILE_NAME[151];
 int8 OUTPUT_FILE_NAME[151];
 int8 OUTPUT_PATH[151];
 int8 OUTPUT_NUMBERED_NAME[151];
 int8 SCENE_NAME[151];
 double DISPLAYGAMMA;
 double GAMMAFACTOR;
 uint32 QUALITY_FLAGS;
 int32 ANTIALIASDEPTH;
 double ANTIALIAS_THRESHOLD;
 double JITTERSCALE;
 int64 ABORT_TEST_COUNTER;
 int8* LIBRARY_PATHS[26];
 int64 LIBRARY_PATH_INDEX;
 int64 FIRST_COLUMN;
 int64 LAST_COLUMN;
 double FIRST_COLUMN_PERCENT;
 double LAST_COLUMN_PERCENT;
 int64 FIRST_LINE;
 int64 LAST_LINE;
 double FIRST_LINE_PERCENT;
 double LAST_LINE_PERCENT;
 double LANGUAGE_VERSION;
 int64 USE_SLABS;
 int32 BBOX_THRESHOLD;
 int64 QUALITY;
 int64 PREVIEWGRIDSIZE_START;
 int64 PREVIEWGRIDSIZE_END;
 struct $8FRAMESEQ FRAMESEQ;
 double RADIOSITY_BRIGHTNESS;
 int32 RADIOSITY_COUNT;
 double RADIOSITY_DIST_MAX;
 double RADIOSITY_ERROR_BOUND;
 double RADIOSITY_GRAY;
 double RADIOSITY_LOW_ERROR_FACTOR;
 double RADIOSITY_MIN_REUSE;
 int32 RADIOSITY_NEAREST_COUNT;
 int64 RADIOSITY_RECURSION_LIMIT;
 int32 RADIOSITY_QUALITY;
 int64 RADIOSITY_FILE_READONCONTINUE;
 int64 RADIOSITY_FILE_SAVEWHILERENDERING;
 int64 RADIOSITY_FILE_ALWAYSREADATSTART;
 int64 RADIOSITY_FILE_KEEPONABORT;
 int64 RADIOSITY_FILE_KEEPALWAYS;
 int64 RADIOSITY_PREVIEW_DONE;
 int64 HISTOGRAM_X;
 int64 HISTOGRAM_Y;
 int64 HISTOGRAM_ON;
 $15HISTOGRAM_TYPES HISTOGRAM_TYPE;
 int8 HISTOGRAM_FILE_NAME[151];
 struct $10_SHELLDATA* SHELLOUTS;
 int8 INI_OUTPUT_FILE_NAME[151];
 int64 TRACING_METHOD;
 int64 DO_STATS;
};
extern int __$fb_structsizecheck[(sizeof( struct $15_OPTIONS_STRUCT ) == 1752) ? 1 : -1];
static struct $15_OPTIONS_STRUCT OPTS$;
static void* STAT_FILE$;
struct $11file_handle {
 uint32 HANDLE_BYTES;
 int32 HANDLE_TYPE;
 uint8* F_HANDLE;
};
extern int __$fb_structsizecheck[(sizeof( struct $11file_handle ) == 16) ? 1 : -1];
static struct $11file_handle* OUTPUT_FILE_HANDLE$;
static int64 HELP_AVAILABLE$;
static int64 ABORT_TEST_EVERY$;
static int64 DISPLAY_STARTED$;
static int64 STAGE$;
static int64 STOP_FLAG$;
static int64 PRE_INIT_FLAG$;
static int64 EXPERIMENTAL_FLAG$;
static int64 NUM_ECHO_LINES$;
static int64 ECHO_LINE_LENGTH$;
static int8* OPTION_STRING_PTR$;
static double CLOCK_DELTA$;
static int64 LEAK_MSG$ = 0ll;
typedef uint32 (*tmp$397)( uint32, uint32, void* );
typedef void (*tmp$398)( uint8*, uint8*, int32, int32, int32, int32, int32, tmp$397, void* );
struct $8FBARRAY1IPPFvPhS_iiiiiPFjjjPvES0_EE {
 tmp$398** DATA;
 tmp$398** PTR;
 int64 SIZE;
 int64 ELEMENT_LEN;
 int64 DIMENSIONS;
 int64 FLAGS;
 struct $16__FB_ARRAYDIMTB$ DIMTB[1];
};
extern int __$fb_structsizecheck[(sizeof( struct $8FBARRAY1IPPFvPhS_iiiiiPFjjjPvES0_EE ) == 72) ? 1 : -1];
static struct $8FBARRAY1IPPFvPhS_iiiiiPFjjjPvES0_EE _ZN9FB_GFXCTX8tmp$406$E;
static uint32 NEW_ERROR$ = 0u;
static int64 KEYHIT$[8193];
static int32 KEYHIT_NEXTFREE$;
static int32 KEYHIT_NEXT$;
static uint8 PORT60H_EVENT$[257];
static int32 PORT60H_EVENTS$;
static int32 WINDOW_EXISTS$;
static int32 NO_CONTROL_CHARACTERS2$;
static int32 DISABLEEVENTS$ = 0;
static int32 CONSOLEKEY$;
static int32 CONSOLEMOUSEX$;
static int32 CONSOLEMOUSEY$;
static int32 CONSOLEBUTTON$;
static int32 SLEEP_BREAK$;
static uint64 MEM_LOCK_ID$;
struct $8MEM_LOCK {
 uint64 ID;
 int32 TYPE;
 void* OFFSET;
};
extern int __$fb_structsizecheck[(sizeof( struct $8MEM_LOCK ) == 24) ? 1 : -1];
static struct $8MEM_LOCK* MEM_LOCK_TMP$;
static int64 EXIT_CODE$;
static int32 LOCK_MAINLOOP$;
static int64 DEVICE_EVENT_INDEX$;
static int32 EXIT_OK$;
static struct $3QBS* FUNC_COMMAND_STR$;
static uint32 ERCL$;
static uint32 INCLERCL$;
static int8* INCLUDEDFILENAME$;
static uint16 CALL_ABSOLUTE_OFFSETS$[257];
static uint32 DBGLINE$;
static int64 DBLOCK$;
static uint64* NOTHINGVALUE$;
static struct $3QBS* NOTHINGSTRING$;
static uint8 STOP_PROGRAM$ = (uint8)0u;
static double* MEM64_STATIC_POINTER$ = (double*)((uint8*)MEM64$ + 534528ll);
static double* MEM64_DYNAMIC_BASE$ = (double*)((uint8*)MEM64$ + 5242880ll);
static double* MEM_STATIC$;
static double* MEM_STATIC_POINTER$;
static double* MEM_STATIC_LIMIT$;
static uint32* RETURN_POINT$ = (uint32*)0ull;
static uint32 RETURN_POINTS$ = 16384u;
static void* QBS_INPUT_VARIABLEOFFSETS$[258];
static int32 QBS_INPUT_VARIABLETYPES$[258];
static int8 G_TMP_CHAR$;
static uint8 G_TMP_UCHAR$;
static int16 G_TMP_SHORT$;
static uint16 G_TMP_USHORT$;
static int32 G_TMP_LONG$;
static uint32 G_TMP_ULONG$;
static int8 G_TMP_INT8$;
static uint8 G_TMP_UINT8$;
static int16 G_TMP_INT16$;
static uint16 G_TMP_UINT16$;
static int32 G_TMP_INT32$;
static uint32 G_TMP_UINT32$;
static int64 G_TMP_INT64$;
static uint64 G_TMP_UINT64$;
static double G_TMP_FLOAT$;
static double G_TMP_DOUBLE$;
static double G_TMP_LONGDOUBLE$;
static struct $3QBS* G_TMP_STR$;
static struct $3QBS* G_SWAP_STR$;
static struct $3QBS* PASS_STR$;
static uint64 MEM_STATIC_SIZE$;
static struct $23MEM64_DYNAMIC_LINK_TYPE MEM64_DYNAMIC_LINK$[147138];
static struct $23MEM64_DYNAMIC_LINK_TYPE* MEM64_DYNAMIC_LINK_FIRST$ = (struct $23MEM64_DYNAMIC_LINK_TYPE*)0ull;
static int64 MEM64_DYNAMIC_NEXT_LINK$ = 0ll;
static int64 MEM64_DYNAMIC_FREE_LINK$ = 0ll;
static uint64 MEM64_DYNAMIC_FREE_LIST$[147137];
static double* DEFSEG$ = (double*)((uint8*)MEM64$ + 10240ll);
static uint8 KEYON$[65537];
static struct $3QBS* SINGLESPACE$;
static struct $3QBS* QBS_MALLOC$;
static uint64 QBS_MALLOC_NEXT$ = 0ull;
static int64* QBS_MALLOC_FREED$;
static uint64 QBS_MALLOC_FREED_SIZE$ = 65536ull;
static uint64 QBS_MALLOC_FREED_NUM$ = 0ull;
static int64* QBS_MEM64_LIST$;
static int64* QBS_LIST$;
static int64* QBS_TMP_LIST$;
static uint8* IP$;
static uint8* SEG$;
static uint8* SEG_BP$;
static uint8* REG8$[9];
static uint16* REG16$[9];
static uint64* REG32$[9];
static uint64* REG64$[9];
static uint16* SEGREG$[9];
static int64 A32$;
static int64 B32$;
struct $10IMG_STRUCT {
 void* LOCK_OFFSET;
 int64 LOCK_ID;
 uint8 VALID;
 uint8 TEXT;
 uint8 CONSOLE;
 uint16 WIDTH;
 uint16 HEIGHT;
 uint8 BYTES_PER_PIXEL;
 uint8 BITS_PER_PIXEL;
 uint32 MASK;
 uint16 COMPATIBLE_MODE;
 uint32 COLOR;
 uint32 BACKGROUND_COLOR;
 uint32 DRAW_COLOR;
 uint32 FONT;
 int16 TOP_ROW;
 int16 BOTTOM_ROW;
 int16 CURSOR_X;
 int16 CURSOR_Y;
 uint8 CURSOR_SHOW;
 uint8 CURSOR_FIRSTVALUE;
 uint8 CURSOR_LASTVALUE;
 union {
  uint8* OFFSET;
  uint32* OFFSET32;
 };
 uint32 FLAGS;
 uint32* PAL;
 int32 TRANSPARENT_COLOR;
 uint8 ALPHA_DISABLED;
 uint8 HOLDING_CURSOR;
 uint8 PRINT_MODE;
 uint8 APM_P1;
 int32 VIEW_X1;
 int32 VIEW_Y1;
 int32 VIEW_X2;
 int32 VIEW_Y2;
 int32 VIEW_OFFSET_X;
 int32 VIEW_OFFSET_Y;
 double X;
 double Y;
 uint8 CLIPPING_OR_SCALING;
 double SCALING_X;
 double SCALING_Y;
 double SCALING_OFFSET_X;
 double SCALING_OFFSET_Y;
 double WINDOW_X1;
 double WINDOW_Y1;
 double WINDOW_X2;
 double WINDOW_Y2;
 double DRAW_TA;
 double DRAW_SCALE;
 uint8 APM_P2;
};
extern int __$fb_structsizecheck[(sizeof( struct $10IMG_STRUCT ) == 232) ? 1 : -1];
static struct $10IMG_STRUCT* WRITE_PAGE$ = (struct $10IMG_STRUCT*)0ull;
static int64 UNSUPPORTED_PORT_ACCESSED$ = 0ll;
static int64 H3C7_PALETTE_REGISTER_READ_INDEX$ = 0ll;
static int64 H3C8_PALETTE_REGISTER_INDEX$ = 0ll;
static int64 H3C9_NEXT$ = 0ll;
static int64 H3C9_READ_NEXT$ = 0ll;
static int64 H3C0_BLINK_ENABLE$ = 1ll;
static uint64 QB64_FIRSTTIMERVALUE$;
static uint64 CLOCK_FIRSTTIMERVALUE$;
static int64 VERTICAL_RETRACE_IN_PROGRESS$ = 0ll;
static int64 VERTICAL_RETRACE_HAPPENED$ = 0ll;
extern double SWCH$;
extern double OFFSET$;
extern void* IMAGE$;
extern FBSTRING STRCODE$;
extern FBSTRING FILENAME$;
static tmp$532 GLCREATESHADER$;
static tmp$461 GLDELETESHADER$;
static tmp$541 GLSHADERSOURCE$;
static tmp$461 GLCOMPILESHADER$;
static tmp$522 GLGETSHADERIV$;
static tmp$536 GLGETSHADERINFOLOG$;
static tmp$531 GLCREATEPROGRAM$;
static tmp$461 GLDELETEPROGRAM$;
static tmp$521 GLATTACHSHADER$;
static tmp$521 GLDETACHSHADER$;
static tmp$461 GLLINKPROGRAM$;
static tmp$522 GLGETPROGRAMIV$;
static tmp$536 GLGETPROGRAMINFOLOG$;
static tmp$461 GLUSEPROGRAM$;
static tmp$535 GLGETUNIFORMLOCATION$;
static tmp$542 GLUNIFORM1F$;
typedef void (*tmp$543)( int32, float, float );
static tmp$543 GLUNIFORM2F$;
static tmp$544 GLUNIFORM3F$;
static tmp$548 GLUNIFORM3FV$;
static tmp$545 GLUNIFORM4F$;
static tmp$548 GLUNIFORM4FV$;
static tmp$515 GLUNIFORM1I$;
static double PC$;
static double ADR0$;
static double ADR1$;
static double ADR2$;
static double ADR3$;
static double PC_STATUS$;
static double R0$;
static double R1$;
static double R2$;
static double R3$;
static double R4$;
static double R5$;
static double RADIUS$;
static double RED2$ = 0x1.FEp+7;
static double GREEN2$ = 0x1.FEp+7;
static double BLUE2$ = 0x1.FEp+7;
static double XALPHA2$ = 0x1.FEp+7;
static double X_AXIS0$;
static double Y_AXIS0$;
static double Z_AXIS0$;
static double COL0$;
static double COL1$;
static double CHAR_H$ = 0x1.68p+6;
static double X_AXIS1$;
static double Y_AXIS1$;
static double Z_AXIS1$;
static double CHAR_PTR$;
static double CHAR_W$ = 0x1.68p+6;
static double CHAR_BUFFER$ = 0x1.p+14;
static double BITMASK$ = 0x1.FEp+7;
static double PIXEL_SIZE$;
static double OCC$;
static double AMBIENT$;
static double DIFFUSE$;
static double BAC$;
static double DOM$;
static double FR$;
static double SPECULAR$;
static double IGLOBALTIME$;
static double RTIME$;
static double ITIME$;
static double CR$;
static double T$;
static double M$;
static double SCA$;
static double HR$;
static double DD2$;
static double EPS$;
static double RESF$;
static double H$;
static double MINT$;
static double TMAX$;
static double TMIN$;
static double PRECIS$;
static double S$;
static struct $4MAT2 M2$;
static struct $7VECTOR3 IRESOLUTION$;
static struct $7VECTOR4 IMOUSE$;
static struct $7VECTOR4 FRAGCOLOR$;
static struct $7VECTOR2 FRAGCOORD$;
static struct $7VECTOR2 Q$;
static struct $7VECTOR2 P2$;
static struct $7VECTOR3 RO$;
static struct $7VECTOR3 TA$;
static struct $4MAT3 CA$;
static struct $7VECTOR3 RD$;
static struct $7VECTOR3 COL$;
static struct $7VECTOR2 UV$;
static struct $7VECTOR3 CW$;
static struct $7VECTOR3 CP$;
static struct $7VECTOR3 CU$;
static struct $7VECTOR3 CV$;
static struct $7VECTOR3 LIN$;
static struct $7VECTOR3 REF$;
static struct $7VECTOR3 LIGHT$;
static struct $7VECTOR3 P3$;
static struct $7VECTOR3 NOR$;
static struct $7VECTOR2 RES2$;
static struct $7VECTOR3 AOPOS$;
static struct $7VECTOR2 RV2$;
static double STRING_ADR$;
static double STRING_LEN$;
static FBSTRING DRIVER_NAME$;
static FBSTRING STRING_DATA$;
static double A1$;
static double A2$;
static double A3$;
static double A4$;
static double A5$;
static double A6$;
static double A7$;
static double A8$;
static FBSTRING GET_KEY$;
static FBSTRING GET_DATA$;
static FBSTRING OLD_DATA$[10001];
static uint64 I$;
static uint8 NIBBLES$[16];
static int64 C$ = 0ll;
static int64 X$ = 0ll;
static int64 Y$ = 0ll;
static int64 XS$ = 0ll;
static int64 YS$ = 0ll;
static int64 CARY$ = 0ll;
static int64 G$ = 0ll;
extern double SYS_OFFSET$;
extern double STR_LEN$;
extern double CNT$;
extern void* BGIMAGE$;
extern void* FGIMAGE$;
extern void* RASTER$;
extern void* _RENDER$;
extern void* PSCRN$;
extern FBSTRING COMPILER$;
extern uint64 SCR_W$;
extern uint64 SCR_H$;
extern uint64 SCR_POS$;
extern uint64 IMGDATA$;
extern uint64 PITCH$;
extern FBSTRING MSG$;
struct $7FBARRAYIdE {
 double* DATA;
 double* PTR;
 int64 SIZE;
 int64 ELEMENT_LEN;
 int64 DIMENSIONS;
 int64 FLAGS;
 struct $16__FB_ARRAYDIMTB$ DIMTB[8];
};
extern int __$fb_structsizecheck[(sizeof( struct $7FBARRAYIdE ) == 240) ? 1 : -1];
extern struct $7FBARRAYIdE POWER2$;
extern double SIZESCREEN$;
extern FBSTRING _SCREENRES$;
extern FBSTRING _NAME$;
extern double SCRWIDTH$;
extern double SCRHEIGHT$;
extern double RED$;
extern double GREEN$;
extern double BLUE$;
extern double XSCRCENTER$;
extern double YSCRCENTER$;
static struct $5MULTI V$;
static struct $5MULTI O$;
static struct $5C64_T COMPUTER$;
static int64 FLAG$;
static uint64 TICKS$;
static uint64 RES$;
struct $14__FB_DATADESC$ {
 int16 TYPE __attribute__((packed, aligned(1)));
 void* NODE __attribute__((packed, aligned(1)));
};
extern int __$fb_structsizecheck[(sizeof( struct $14__FB_DATADESC$ ) == 10) ? 1 : -1];
static struct $14__FB_DATADESC$ label$13003[17] = { { (int16)1, (void*)"0" }, { (int16)2, (void*)"34" }, { (int16)3, (void*)"212" }, { (int16)3, (void*)"229" }, { (int16)1, (void*)"0" }, { (int16)2, (void*)"10" }, { (int16)2, (void*)"20" }, { (int16)3, (void*)"225" }, { (int16)3, (void*)"100" }, { (int16)3, (void*)"165" }, { (int16)3, (void*)"133" }, { (int16)3, (void*)"164" }, { (int16)3, (void*)"121" }, { (int16)3, (void*)"166" }, { (int16)3, (void*)"156" }, { (int16)3, (void*)"227" }, { (int16)-1, (void*)0ull } };
static struct $14__FB_DATADESC$ label$13001[17] = { { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)2, (void*)"63" }, { (int16)3, (void*)"125" }, { (int16)3, (void*)"234" }, { (int16)3, (void*)"125" }, { (int16)3, (void*)"234" }, { (int16)2, (void*)"32" }, { (int16)1, (void*)"7" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"125" }, { (int16)3, (void*)"234" }, { (int16)3, (void*)"133" }, { (int16)1, (void*)"1" }, { (int16)-1, (void*)label$13003 } };
static struct $14__FB_DATADESC$ label$12999[17] = { { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)-1, (void*)label$13001 } };
static struct $14__FB_DATADESC$ label$12997[17] = { { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)-1, (void*)label$12999 } };
static struct $14__FB_DATADESC$ label$12995[17] = { { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)-1, (void*)label$12997 } };
static struct $14__FB_DATADESC$ label$12993[17] = { { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)-1, (void*)label$12995 } };
static struct $14__FB_DATADESC$ label$12991[17] = { { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)-1, (void*)label$12993 } };
static struct $14__FB_DATADESC$ label$12989[17] = { { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)-1, (void*)label$12991 } };
static struct $14__FB_DATADESC$ label$12987[17] = { { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)-1, (void*)label$12989 } };
static struct $14__FB_DATADESC$ label$12985[17] = { { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)-1, (void*)label$12987 } };
static struct $14__FB_DATADESC$ label$12983[17] = { { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)-1, (void*)label$12985 } };
static struct $14__FB_DATADESC$ label$12981[17] = { { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)-1, (void*)label$12983 } };
static struct $14__FB_DATADESC$ label$12979[17] = { { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)-1, (void*)label$12981 } };
static struct $14__FB_DATADESC$ label$12977[17] = { { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)-1, (void*)label$12979 } };
static struct $14__FB_DATADESC$ label$12975[17] = { { (int16)3, (void*)"141" }, { (int16)1, (void*)"0" }, { (int16)3, (void*)"222" }, { (int16)2, (void*)"96" }, { (int16)3, (void*)"160" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)-1, (void*)label$12977 } };
static struct $14__FB_DATADESC$ label$12973[17] = { { (int16)2, (void*)"51" }, { (int16)2, (void*)"56" }, { (int16)2, (void*)"57" }, { (int16)2, (void*)"49" }, { (int16)2, (void*)"49" }, { (int16)1, (void*)"0" }, { (int16)2, (void*)"48" }, { (int16)2, (void*)"48" }, { (int16)2, (void*)"48" }, { (int16)2, (void*)"48" }, { (int16)1, (void*)"3" }, { (int16)3, (void*)"141" }, { (int16)3, (void*)"148" }, { (int16)3, (void*)"158" }, { (int16)3, (void*)"169" }, { (int16)1, (void*)"0" }, { (int16)-1, (void*)label$12975 } };
static struct $14__FB_DATADESC$ label$12971[17] = { { (int16)3, (void*)"135" }, { (int16)3, (void*)"135" }, { (int16)3, (void*)"135" }, { (int16)3, (void*)"240" }, { (int16)3, (void*)"216" }, { (int16)3, (void*)"129" }, { (int16)3, (void*)"235" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)2, (void*)"32" }, { (int16)-1, (void*)label$12973 } };
static struct $14__FB_DATADESC$ label$12969[17] = { { (int16)3, (void*)"133" }, { (int16)3, (void*)"133" }, { (int16)3, (void*)"133" }, { (int16)3, (void*)"133" }, { (int16)3, (void*)"133" }, { (int16)3, (void*)"133" }, { (int16)3, (void*)"134" }, { (int16)3, (void*)"134" }, { (int16)3, (void*)"134" }, { (int16)3, (void*)"134" }, { (int16)3, (void*)"134" }, { (int16)3, (void*)"134" }, { (int16)3, (void*)"134" }, { (int16)3, (void*)"135" }, { (int16)3, (void*)"135" }, { (int16)3, (void*)"135" }, { (int16)-1, (void*)label$12971 } };
static struct $14__FB_DATADESC$ label$12967[17] = { { (int16)1, (void*)"0" }, { (int16)3, (void*)"240" }, { (int16)1, (void*)"4" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)2, (void*)"39" }, { (int16)1, (void*)"6" }, { (int16)3, (void*)"133" }, { (int16)1, (void*)"0" }, { (int16)3, (void*)"132" }, { (int16)3, (void*)"132" }, { (int16)3, (void*)"132" }, { (int16)3, (void*)"132" }, { (int16)3, (void*)"132" }, { (int16)3, (void*)"132" }, { (int16)3, (void*)"132" }, { (int16)-1, (void*)label$12969 } };
static struct $14__FB_DATADESC$ label$12965[17] = { { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)3, (void*)"160" }, { (int16)2, (void*)"48" }, { (int16)3, (void*)"253" }, { (int16)2, (void*)"64" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"6" }, { (int16)1, (void*)"0" }, { (int16)2, (void*)"64" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"1" }, { (int16)2, (void*)"32" }, { (int16)1, (void*)"1" }, { (int16)-1, (void*)label$12967 } };
static struct $14__FB_DATADESC$ label$12963[17] = { { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)2, (void*)"60" }, { (int16)1, (void*)"3" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)-1, (void*)label$12965 } };
static struct $14__FB_DATADESC$ label$12961[17] = { { (int16)1, (void*)"0" }, { (int16)1, (void*)"1" }, { (int16)3, (void*)"191" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)-1, (void*)label$12963 } };
static struct $14__FB_DATADESC$ label$12959[17] = { { (int16)1, (void*)"0" }, { (int16)3, (void*)"255" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"3" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)3, (void*)"128" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)-1, (void*)label$12961 } };
static struct $14__FB_DATADESC$ label$12957[17] = { { (int16)3, (void*)"201" }, { (int16)2, (void*)"32" }, { (int16)3, (void*)"240" }, { (int16)3, (void*)"239" }, { (int16)2, (void*)"56" }, { (int16)3, (void*)"233" }, { (int16)2, (void*)"48" }, { (int16)2, (void*)"56" }, { (int16)3, (void*)"233" }, { (int16)3, (void*)"208" }, { (int16)2, (void*)"96" }, { (int16)3, (void*)"128" }, { (int16)2, (void*)"79" }, { (int16)3, (void*)"199" }, { (int16)2, (void*)"82" }, { (int16)2, (void*)"88" }, { (int16)-1, (void*)label$12959 } };
static struct $14__FB_DATADESC$ label$12955[17] = { { (int16)1, (void*)"0" }, { (int16)3, (void*)"128" }, { (int16)3, (void*)"163" }, { (int16)3, (void*)"230" }, { (int16)3, (void*)"122" }, { (int16)3, (void*)"208" }, { (int16)1, (void*)"2" }, { (int16)3, (void*)"230" }, { (int16)3, (void*)"123" }, { (int16)3, (void*)"173" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"8" }, { (int16)3, (void*)"201" }, { (int16)2, (void*)"58" }, { (int16)3, (void*)"176" }, { (int16)2, (void*)"10" }, { (int16)-1, (void*)label$12957 } };
static struct $14__FB_DATADESC$ label$12953[17] = { { (int16)1, (void*)"0" }, { (int16)2, (void*)"10" }, { (int16)3, (void*)"118" }, { (int16)3, (void*)"163" }, { (int16)2, (void*)"25" }, { (int16)1, (void*)"0" }, { (int16)2, (void*)"32" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)3, (void*)"128" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"4" }, { (int16)1, (void*)"0" }, { (int16)3, (void*)"118" }, { (int16)-1, (void*)label$12955 } };
static struct $14__FB_DATADESC$ label$12951[17] = { { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"3" }, { (int16)2, (void*)"76" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)3, (void*)"252" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)-1, (void*)label$12953 } };
static struct $14__FB_DATADESC$ label$12949[17] = { { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"8" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)2, (void*)"36" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)-1, (void*)label$12951 } };
static struct $14__FB_DATADESC$ label$12947[17] = { { (int16)1, (void*)"8" }, { (int16)1, (void*)"3" }, { (int16)1, (void*)"8" }, { (int16)1, (void*)"0" }, { (int16)3, (void*)"160" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)3, (void*)"160" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)-1, (void*)label$12949 } };
static struct $14__FB_DATADESC$ label$12945[17] = { { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)3, (void*)"118" }, { (int16)3, (void*)"163" }, { (int16)3, (void*)"179" }, { (int16)3, (void*)"189" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"1" }, { (int16)1, (void*)"8" }, { (int16)1, (void*)"3" }, { (int16)1, (void*)"8" }, { (int16)1, (void*)"3" }, { (int16)-1, (void*)label$12947 } };
static struct $14__FB_DATADESC$ label$12943[17] = { { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)2, (void*)"25" }, { (int16)2, (void*)"22" }, { (int16)1, (void*)"0" }, { (int16)2, (void*)"10" }, { (int16)3, (void*)"118" }, { (int16)3, (void*)"163" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)-1, (void*)label$12945 } };
static struct $14__FB_DATADESC$ label$2139[17] = { { (int16)2, (void*)"47" }, { (int16)2, (void*)"55" }, { (int16)1, (void*)"0" }, { (int16)3, (void*)"170" }, { (int16)3, (void*)"177" }, { (int16)3, (void*)"145" }, { (int16)3, (void*)"179" }, { (int16)2, (void*)"34" }, { (int16)2, (void*)"34" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)3, (void*)"255" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)-1, (void*)label$12943 } };
static struct $14__FB_DATADESC$ label$12941[2] = { { (int16)3, (void*)"IND" }, { (int16)-1, (void*)label$2139 } };
static struct $14__FB_DATADESC$ label$12939[2] = { { (int16)4, (void*)"INDY" }, { (int16)-1, (void*)label$12941 } };
static struct $14__FB_DATADESC$ label$12937[2] = { { (int16)4, (void*)"INDX" }, { (int16)-1, (void*)label$12939 } };
static struct $14__FB_DATADESC$ label$12935[2] = { { (int16)3, (void*)"REL" }, { (int16)-1, (void*)label$12937 } };
static struct $14__FB_DATADESC$ label$12933[2] = { { (int16)4, (void*)"ABSY" }, { (int16)-1, (void*)label$12935 } };
static struct $14__FB_DATADESC$ label$12931[2] = { { (int16)4, (void*)"ABSX" }, { (int16)-1, (void*)label$12933 } };
static struct $14__FB_DATADESC$ label$12929[2] = { { (int16)5, (void*)"ZEROY" }, { (int16)-1, (void*)label$12931 } };
static struct $14__FB_DATADESC$ label$12927[2] = { { (int16)5, (void*)"ZEROX" }, { (int16)-1, (void*)label$12929 } };
static struct $14__FB_DATADESC$ label$12925[2] = { { (int16)4, (void*)"ZERO" }, { (int16)-1, (void*)label$12927 } };
static struct $14__FB_DATADESC$ label$12923[2] = { { (int16)3, (void*)"ABS" }, { (int16)-1, (void*)label$12925 } };
static struct $14__FB_DATADESC$ label$12921[2] = { { (int16)3, (void*)"IMM" }, { (int16)-1, (void*)label$12923 } };
static struct $14__FB_DATADESC$ label$12919[2] = { { (int16)3, (void*)"IMP" }, { (int16)-1, (void*)label$12921 } };
static struct $14__FB_DATADESC$ label$12028[2] = { { (int16)3, (void*)"UNK" }, { (int16)-1, (void*)label$12919 } };
static struct $14__FB_DATADESC$ label$12917[7] = { { (int16)3, (void*)"255" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12028 } };
static struct $14__FB_DATADESC$ label$12915[7] = { { (int16)3, (void*)"254" }, { (int16)3, (void*)"INC" }, { (int16)1, (void*)"7" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_INC }, { (int16)-1, (void*)label$12917 } };
static struct $14__FB_DATADESC$ label$12913[7] = { { (int16)3, (void*)"253" }, { (int16)3, (void*)"SBC" }, { (int16)1, (void*)"7" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_SBC }, { (int16)-1, (void*)label$12915 } };
static struct $14__FB_DATADESC$ label$12911[7] = { { (int16)3, (void*)"252" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12913 } };
static struct $14__FB_DATADESC$ label$12909[7] = { { (int16)3, (void*)"251" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12911 } };
static struct $14__FB_DATADESC$ label$12907[7] = { { (int16)3, (void*)"250" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12909 } };
static struct $14__FB_DATADESC$ label$12905[7] = { { (int16)3, (void*)"249" }, { (int16)3, (void*)"SBC" }, { (int16)1, (void*)"8" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_SBC }, { (int16)-1, (void*)label$12907 } };
static struct $14__FB_DATADESC$ label$12903[7] = { { (int16)3, (void*)"248" }, { (int16)3, (void*)"SED" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_SED }, { (int16)-1, (void*)label$12905 } };
static struct $14__FB_DATADESC$ label$12901[7] = { { (int16)3, (void*)"247" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12903 } };
static struct $14__FB_DATADESC$ label$12899[7] = { { (int16)3, (void*)"246" }, { (int16)3, (void*)"INC" }, { (int16)1, (void*)"5" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_INC }, { (int16)-1, (void*)label$12901 } };
static struct $14__FB_DATADESC$ label$12897[7] = { { (int16)3, (void*)"245" }, { (int16)3, (void*)"SBC" }, { (int16)1, (void*)"5" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_SBC }, { (int16)-1, (void*)label$12899 } };
static struct $14__FB_DATADESC$ label$12895[7] = { { (int16)3, (void*)"244" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12897 } };
static struct $14__FB_DATADESC$ label$12893[7] = { { (int16)3, (void*)"243" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12895 } };
static struct $14__FB_DATADESC$ label$12891[7] = { { (int16)3, (void*)"242" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12893 } };
static struct $14__FB_DATADESC$ label$12889[7] = { { (int16)3, (void*)"241" }, { (int16)3, (void*)"SBC" }, { (int16)2, (void*)"11" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_SBC }, { (int16)-1, (void*)label$12891 } };
static struct $14__FB_DATADESC$ label$12887[7] = { { (int16)3, (void*)"240" }, { (int16)3, (void*)"BEQ" }, { (int16)1, (void*)"9" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_BEQ }, { (int16)-1, (void*)label$12889 } };
static struct $14__FB_DATADESC$ label$12885[7] = { { (int16)3, (void*)"239" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12887 } };
static struct $14__FB_DATADESC$ label$12883[7] = { { (int16)3, (void*)"238" }, { (int16)3, (void*)"INC" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_INC }, { (int16)-1, (void*)label$12885 } };
static struct $14__FB_DATADESC$ label$12881[7] = { { (int16)3, (void*)"237" }, { (int16)3, (void*)"SBC" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_SBC }, { (int16)-1, (void*)label$12883 } };
static struct $14__FB_DATADESC$ label$12879[7] = { { (int16)3, (void*)"236" }, { (int16)3, (void*)"CPX" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_CPX }, { (int16)-1, (void*)label$12881 } };
static struct $14__FB_DATADESC$ label$12877[7] = { { (int16)3, (void*)"235" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12879 } };
static struct $14__FB_DATADESC$ label$12875[7] = { { (int16)3, (void*)"234" }, { (int16)3, (void*)"NOP" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_NOP }, { (int16)-1, (void*)label$12877 } };
static struct $14__FB_DATADESC$ label$12873[7] = { { (int16)3, (void*)"233" }, { (int16)3, (void*)"SBC" }, { (int16)1, (void*)"2" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_SBC }, { (int16)-1, (void*)label$12875 } };
static struct $14__FB_DATADESC$ label$12871[7] = { { (int16)3, (void*)"232" }, { (int16)3, (void*)"INX" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_INX }, { (int16)-1, (void*)label$12873 } };
static struct $14__FB_DATADESC$ label$12869[7] = { { (int16)3, (void*)"231" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12871 } };
static struct $14__FB_DATADESC$ label$12867[7] = { { (int16)3, (void*)"230" }, { (int16)3, (void*)"INC" }, { (int16)1, (void*)"4" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_INC }, { (int16)-1, (void*)label$12869 } };
static struct $14__FB_DATADESC$ label$12865[7] = { { (int16)3, (void*)"229" }, { (int16)3, (void*)"SBC" }, { (int16)1, (void*)"4" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_SBC }, { (int16)-1, (void*)label$12867 } };
static struct $14__FB_DATADESC$ label$12863[7] = { { (int16)3, (void*)"228" }, { (int16)3, (void*)"CPX" }, { (int16)1, (void*)"4" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_CPX }, { (int16)-1, (void*)label$12865 } };
static struct $14__FB_DATADESC$ label$12861[7] = { { (int16)3, (void*)"227" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12863 } };
static struct $14__FB_DATADESC$ label$12859[7] = { { (int16)3, (void*)"226" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12861 } };
static struct $14__FB_DATADESC$ label$12857[7] = { { (int16)3, (void*)"225" }, { (int16)3, (void*)"SBC" }, { (int16)2, (void*)"10" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_SBC }, { (int16)-1, (void*)label$12859 } };
static struct $14__FB_DATADESC$ label$12855[7] = { { (int16)3, (void*)"224" }, { (int16)3, (void*)"CPX" }, { (int16)1, (void*)"2" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_CPX }, { (int16)-1, (void*)label$12857 } };
static struct $14__FB_DATADESC$ label$12853[7] = { { (int16)3, (void*)"223" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12855 } };
static struct $14__FB_DATADESC$ label$12851[7] = { { (int16)3, (void*)"222" }, { (int16)3, (void*)"DEC" }, { (int16)1, (void*)"7" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_DEC }, { (int16)-1, (void*)label$12853 } };
static struct $14__FB_DATADESC$ label$12849[7] = { { (int16)3, (void*)"221" }, { (int16)3, (void*)"CMP" }, { (int16)1, (void*)"7" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_CMP }, { (int16)-1, (void*)label$12851 } };
static struct $14__FB_DATADESC$ label$12847[7] = { { (int16)3, (void*)"220" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12849 } };
static struct $14__FB_DATADESC$ label$12845[7] = { { (int16)3, (void*)"219" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12847 } };
static struct $14__FB_DATADESC$ label$12843[7] = { { (int16)3, (void*)"218" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12845 } };
static struct $14__FB_DATADESC$ label$12841[7] = { { (int16)3, (void*)"217" }, { (int16)3, (void*)"CMP" }, { (int16)1, (void*)"8" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_CMP }, { (int16)-1, (void*)label$12843 } };
static struct $14__FB_DATADESC$ label$12839[7] = { { (int16)3, (void*)"216" }, { (int16)3, (void*)"CLD" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_CLD }, { (int16)-1, (void*)label$12841 } };
static struct $14__FB_DATADESC$ label$12837[7] = { { (int16)3, (void*)"215" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12839 } };
static struct $14__FB_DATADESC$ label$12835[7] = { { (int16)3, (void*)"214" }, { (int16)3, (void*)"DEC" }, { (int16)1, (void*)"5" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_DEC }, { (int16)-1, (void*)label$12837 } };
static struct $14__FB_DATADESC$ label$12833[7] = { { (int16)3, (void*)"213" }, { (int16)3, (void*)"CMP" }, { (int16)1, (void*)"5" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_CMP }, { (int16)-1, (void*)label$12835 } };
static struct $14__FB_DATADESC$ label$12831[7] = { { (int16)3, (void*)"212" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12833 } };
static struct $14__FB_DATADESC$ label$12829[7] = { { (int16)3, (void*)"211" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12831 } };
static struct $14__FB_DATADESC$ label$12827[7] = { { (int16)3, (void*)"210" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12829 } };
static struct $14__FB_DATADESC$ label$12825[7] = { { (int16)3, (void*)"209" }, { (int16)3, (void*)"CMP" }, { (int16)2, (void*)"11" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_CMP }, { (int16)-1, (void*)label$12827 } };
static struct $14__FB_DATADESC$ label$12823[7] = { { (int16)3, (void*)"208" }, { (int16)3, (void*)"BNE" }, { (int16)1, (void*)"9" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_BNE }, { (int16)-1, (void*)label$12825 } };
static struct $14__FB_DATADESC$ label$12821[7] = { { (int16)3, (void*)"207" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12823 } };
static struct $14__FB_DATADESC$ label$12819[7] = { { (int16)3, (void*)"206" }, { (int16)3, (void*)"DEC" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_DEC }, { (int16)-1, (void*)label$12821 } };
static struct $14__FB_DATADESC$ label$12817[7] = { { (int16)3, (void*)"205" }, { (int16)3, (void*)"CMP" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_CMP }, { (int16)-1, (void*)label$12819 } };
static struct $14__FB_DATADESC$ label$12815[7] = { { (int16)3, (void*)"204" }, { (int16)3, (void*)"CPY" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_CPY }, { (int16)-1, (void*)label$12817 } };
static struct $14__FB_DATADESC$ label$12813[7] = { { (int16)3, (void*)"203" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12815 } };
static struct $14__FB_DATADESC$ label$12811[7] = { { (int16)3, (void*)"202" }, { (int16)3, (void*)"DEX" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_DEX }, { (int16)-1, (void*)label$12813 } };
static struct $14__FB_DATADESC$ label$12809[7] = { { (int16)3, (void*)"201" }, { (int16)3, (void*)"CMP" }, { (int16)1, (void*)"2" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_CMP }, { (int16)-1, (void*)label$12811 } };
static struct $14__FB_DATADESC$ label$12807[7] = { { (int16)3, (void*)"200" }, { (int16)3, (void*)"INY" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_INY }, { (int16)-1, (void*)label$12809 } };
static struct $14__FB_DATADESC$ label$12805[7] = { { (int16)3, (void*)"199" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12807 } };
static struct $14__FB_DATADESC$ label$12803[7] = { { (int16)3, (void*)"198" }, { (int16)3, (void*)"DEC" }, { (int16)1, (void*)"4" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_DEC }, { (int16)-1, (void*)label$12805 } };
static struct $14__FB_DATADESC$ label$12801[7] = { { (int16)3, (void*)"197" }, { (int16)3, (void*)"CMP" }, { (int16)1, (void*)"4" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_CMP }, { (int16)-1, (void*)label$12803 } };
static struct $14__FB_DATADESC$ label$12799[7] = { { (int16)3, (void*)"196" }, { (int16)3, (void*)"CPY" }, { (int16)1, (void*)"4" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_CPY }, { (int16)-1, (void*)label$12801 } };
static struct $14__FB_DATADESC$ label$12797[7] = { { (int16)3, (void*)"195" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12799 } };
static struct $14__FB_DATADESC$ label$12795[7] = { { (int16)3, (void*)"194" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12797 } };
static struct $14__FB_DATADESC$ label$12793[7] = { { (int16)3, (void*)"193" }, { (int16)3, (void*)"CMP" }, { (int16)2, (void*)"10" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_CMP }, { (int16)-1, (void*)label$12795 } };
static struct $14__FB_DATADESC$ label$12791[7] = { { (int16)3, (void*)"192" }, { (int16)3, (void*)"CPY" }, { (int16)1, (void*)"2" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_CPY }, { (int16)-1, (void*)label$12793 } };
static struct $14__FB_DATADESC$ label$12789[7] = { { (int16)3, (void*)"191" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12791 } };
static struct $14__FB_DATADESC$ label$12787[7] = { { (int16)3, (void*)"190" }, { (int16)3, (void*)"LDX" }, { (int16)1, (void*)"8" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LDX }, { (int16)-1, (void*)label$12789 } };
static struct $14__FB_DATADESC$ label$12785[7] = { { (int16)3, (void*)"189" }, { (int16)3, (void*)"LDA" }, { (int16)1, (void*)"7" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LDA }, { (int16)-1, (void*)label$12787 } };
static struct $14__FB_DATADESC$ label$12783[7] = { { (int16)3, (void*)"188" }, { (int16)3, (void*)"LDY" }, { (int16)1, (void*)"7" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LDY }, { (int16)-1, (void*)label$12785 } };
static struct $14__FB_DATADESC$ label$12781[7] = { { (int16)3, (void*)"187" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12783 } };
static struct $14__FB_DATADESC$ label$12779[7] = { { (int16)3, (void*)"186" }, { (int16)3, (void*)"TSX" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_TSX }, { (int16)-1, (void*)label$12781 } };
static struct $14__FB_DATADESC$ label$12777[7] = { { (int16)3, (void*)"185" }, { (int16)3, (void*)"LDA" }, { (int16)1, (void*)"8" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LDA }, { (int16)-1, (void*)label$12779 } };
static struct $14__FB_DATADESC$ label$12775[7] = { { (int16)3, (void*)"184" }, { (int16)3, (void*)"CLV" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_CLV }, { (int16)-1, (void*)label$12777 } };
static struct $14__FB_DATADESC$ label$12773[7] = { { (int16)3, (void*)"183" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12775 } };
static struct $14__FB_DATADESC$ label$12771[7] = { { (int16)3, (void*)"182" }, { (int16)3, (void*)"LDX" }, { (int16)1, (void*)"6" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LDX }, { (int16)-1, (void*)label$12773 } };
static struct $14__FB_DATADESC$ label$12769[7] = { { (int16)3, (void*)"181" }, { (int16)3, (void*)"LDA" }, { (int16)1, (void*)"5" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LDA }, { (int16)-1, (void*)label$12771 } };
static struct $14__FB_DATADESC$ label$12767[7] = { { (int16)3, (void*)"180" }, { (int16)3, (void*)"LDY" }, { (int16)1, (void*)"5" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LDY }, { (int16)-1, (void*)label$12769 } };
static struct $14__FB_DATADESC$ label$12765[7] = { { (int16)3, (void*)"179" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12767 } };
static struct $14__FB_DATADESC$ label$12763[7] = { { (int16)3, (void*)"178" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12765 } };
static struct $14__FB_DATADESC$ label$12761[7] = { { (int16)3, (void*)"177" }, { (int16)3, (void*)"LDA" }, { (int16)2, (void*)"11" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LDA }, { (int16)-1, (void*)label$12763 } };
static struct $14__FB_DATADESC$ label$12759[7] = { { (int16)3, (void*)"176" }, { (int16)3, (void*)"BCS" }, { (int16)1, (void*)"9" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_BCS }, { (int16)-1, (void*)label$12761 } };
static struct $14__FB_DATADESC$ label$12757[7] = { { (int16)3, (void*)"175" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12759 } };
static struct $14__FB_DATADESC$ label$12755[7] = { { (int16)3, (void*)"174" }, { (int16)3, (void*)"LDX" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LDX }, { (int16)-1, (void*)label$12757 } };
static struct $14__FB_DATADESC$ label$12753[7] = { { (int16)3, (void*)"173" }, { (int16)3, (void*)"LDA" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LDA }, { (int16)-1, (void*)label$12755 } };
static struct $14__FB_DATADESC$ label$12751[7] = { { (int16)3, (void*)"172" }, { (int16)3, (void*)"LDY" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LDY }, { (int16)-1, (void*)label$12753 } };
static struct $14__FB_DATADESC$ label$12749[7] = { { (int16)3, (void*)"171" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12751 } };
static struct $14__FB_DATADESC$ label$12747[7] = { { (int16)3, (void*)"170" }, { (int16)3, (void*)"TAX" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_TAX }, { (int16)-1, (void*)label$12749 } };
static struct $14__FB_DATADESC$ label$12745[7] = { { (int16)3, (void*)"169" }, { (int16)3, (void*)"LDA" }, { (int16)1, (void*)"2" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LDA }, { (int16)-1, (void*)label$12747 } };
static struct $14__FB_DATADESC$ label$12743[7] = { { (int16)3, (void*)"168" }, { (int16)3, (void*)"TAY" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_TAY }, { (int16)-1, (void*)label$12745 } };
static struct $14__FB_DATADESC$ label$12741[7] = { { (int16)3, (void*)"167" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12743 } };
static struct $14__FB_DATADESC$ label$12739[7] = { { (int16)3, (void*)"166" }, { (int16)3, (void*)"LDX" }, { (int16)1, (void*)"4" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LDX }, { (int16)-1, (void*)label$12741 } };
static struct $14__FB_DATADESC$ label$12737[7] = { { (int16)3, (void*)"165" }, { (int16)3, (void*)"LDA" }, { (int16)1, (void*)"4" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LDA }, { (int16)-1, (void*)label$12739 } };
static struct $14__FB_DATADESC$ label$12735[7] = { { (int16)3, (void*)"164" }, { (int16)3, (void*)"LDY" }, { (int16)1, (void*)"4" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LDY }, { (int16)-1, (void*)label$12737 } };
static struct $14__FB_DATADESC$ label$12733[7] = { { (int16)3, (void*)"163" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12735 } };
static struct $14__FB_DATADESC$ label$12731[7] = { { (int16)3, (void*)"162" }, { (int16)3, (void*)"LDX" }, { (int16)1, (void*)"2" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LDX }, { (int16)-1, (void*)label$12733 } };
static struct $14__FB_DATADESC$ label$12729[7] = { { (int16)3, (void*)"161" }, { (int16)3, (void*)"LDA" }, { (int16)2, (void*)"10" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LDA }, { (int16)-1, (void*)label$12731 } };
static struct $14__FB_DATADESC$ label$12727[7] = { { (int16)3, (void*)"160" }, { (int16)3, (void*)"LDY" }, { (int16)1, (void*)"2" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LDY }, { (int16)-1, (void*)label$12729 } };
static struct $14__FB_DATADESC$ label$12725[7] = { { (int16)3, (void*)"159" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12727 } };
static struct $14__FB_DATADESC$ label$12723[7] = { { (int16)3, (void*)"158" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12725 } };
static struct $14__FB_DATADESC$ label$12721[7] = { { (int16)3, (void*)"157" }, { (int16)3, (void*)"STA" }, { (int16)1, (void*)"7" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_STA }, { (int16)-1, (void*)label$12723 } };
static struct $14__FB_DATADESC$ label$12719[7] = { { (int16)3, (void*)"156" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12721 } };
static struct $14__FB_DATADESC$ label$12717[7] = { { (int16)3, (void*)"155" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12719 } };
static struct $14__FB_DATADESC$ label$12715[7] = { { (int16)3, (void*)"154" }, { (int16)3, (void*)"TXS" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_TXS }, { (int16)-1, (void*)label$12717 } };
static struct $14__FB_DATADESC$ label$12713[7] = { { (int16)3, (void*)"153" }, { (int16)3, (void*)"STA" }, { (int16)1, (void*)"8" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_STA }, { (int16)-1, (void*)label$12715 } };
static struct $14__FB_DATADESC$ label$12711[7] = { { (int16)3, (void*)"152" }, { (int16)3, (void*)"TYA" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_TYA }, { (int16)-1, (void*)label$12713 } };
static struct $14__FB_DATADESC$ label$12709[7] = { { (int16)3, (void*)"151" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12711 } };
static struct $14__FB_DATADESC$ label$12707[7] = { { (int16)3, (void*)"150" }, { (int16)3, (void*)"STX" }, { (int16)1, (void*)"6" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_STX }, { (int16)-1, (void*)label$12709 } };
static struct $14__FB_DATADESC$ label$12705[7] = { { (int16)3, (void*)"149" }, { (int16)3, (void*)"STA" }, { (int16)1, (void*)"5" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_STA }, { (int16)-1, (void*)label$12707 } };
static struct $14__FB_DATADESC$ label$12703[7] = { { (int16)3, (void*)"148" }, { (int16)3, (void*)"STY" }, { (int16)1, (void*)"5" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_STY }, { (int16)-1, (void*)label$12705 } };
static struct $14__FB_DATADESC$ label$12701[7] = { { (int16)3, (void*)"147" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12703 } };
static struct $14__FB_DATADESC$ label$12699[7] = { { (int16)3, (void*)"146" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12701 } };
static struct $14__FB_DATADESC$ label$12697[7] = { { (int16)3, (void*)"145" }, { (int16)3, (void*)"STA" }, { (int16)2, (void*)"11" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_STA }, { (int16)-1, (void*)label$12699 } };
static struct $14__FB_DATADESC$ label$12695[7] = { { (int16)3, (void*)"144" }, { (int16)3, (void*)"BCC" }, { (int16)1, (void*)"9" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_BCC }, { (int16)-1, (void*)label$12697 } };
static struct $14__FB_DATADESC$ label$12693[7] = { { (int16)3, (void*)"143" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12695 } };
static struct $14__FB_DATADESC$ label$12691[7] = { { (int16)3, (void*)"142" }, { (int16)3, (void*)"STX" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_STX }, { (int16)-1, (void*)label$12693 } };
static struct $14__FB_DATADESC$ label$12689[7] = { { (int16)3, (void*)"141" }, { (int16)3, (void*)"STA" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_STA }, { (int16)-1, (void*)label$12691 } };
static struct $14__FB_DATADESC$ label$12687[7] = { { (int16)3, (void*)"140" }, { (int16)3, (void*)"STY" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_STY }, { (int16)-1, (void*)label$12689 } };
static struct $14__FB_DATADESC$ label$12685[7] = { { (int16)3, (void*)"139" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12687 } };
static struct $14__FB_DATADESC$ label$12683[7] = { { (int16)3, (void*)"138" }, { (int16)3, (void*)"TXA" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_TXA }, { (int16)-1, (void*)label$12685 } };
static struct $14__FB_DATADESC$ label$12681[7] = { { (int16)3, (void*)"137" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12683 } };
static struct $14__FB_DATADESC$ label$12679[7] = { { (int16)3, (void*)"136" }, { (int16)3, (void*)"DEY" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_DEY }, { (int16)-1, (void*)label$12681 } };
static struct $14__FB_DATADESC$ label$12677[7] = { { (int16)3, (void*)"135" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12679 } };
static struct $14__FB_DATADESC$ label$12675[7] = { { (int16)3, (void*)"134" }, { (int16)3, (void*)"STX" }, { (int16)1, (void*)"4" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_STX }, { (int16)-1, (void*)label$12677 } };
static struct $14__FB_DATADESC$ label$12673[7] = { { (int16)3, (void*)"133" }, { (int16)3, (void*)"STA" }, { (int16)1, (void*)"4" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_STA }, { (int16)-1, (void*)label$12675 } };
static struct $14__FB_DATADESC$ label$12671[7] = { { (int16)3, (void*)"132" }, { (int16)3, (void*)"STY" }, { (int16)1, (void*)"4" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_STY }, { (int16)-1, (void*)label$12673 } };
static struct $14__FB_DATADESC$ label$12669[7] = { { (int16)3, (void*)"131" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12671 } };
static struct $14__FB_DATADESC$ label$12667[7] = { { (int16)3, (void*)"130" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12669 } };
static struct $14__FB_DATADESC$ label$12665[7] = { { (int16)3, (void*)"129" }, { (int16)3, (void*)"STA" }, { (int16)2, (void*)"10" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_STA }, { (int16)-1, (void*)label$12667 } };
static struct $14__FB_DATADESC$ label$12663[7] = { { (int16)3, (void*)"128" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12665 } };
static struct $14__FB_DATADESC$ label$12661[7] = { { (int16)3, (void*)"127" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12663 } };
static struct $14__FB_DATADESC$ label$12659[7] = { { (int16)3, (void*)"126" }, { (int16)3, (void*)"ROR" }, { (int16)1, (void*)"7" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ROR }, { (int16)-1, (void*)label$12661 } };
static struct $14__FB_DATADESC$ label$12657[7] = { { (int16)3, (void*)"125" }, { (int16)3, (void*)"ADC" }, { (int16)1, (void*)"7" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ADC }, { (int16)-1, (void*)label$12659 } };
static struct $14__FB_DATADESC$ label$12655[7] = { { (int16)3, (void*)"124" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12657 } };
static struct $14__FB_DATADESC$ label$12653[7] = { { (int16)3, (void*)"123" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12655 } };
static struct $14__FB_DATADESC$ label$12651[7] = { { (int16)3, (void*)"122" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12653 } };
static struct $14__FB_DATADESC$ label$12649[7] = { { (int16)3, (void*)"121" }, { (int16)3, (void*)"ADC" }, { (int16)1, (void*)"8" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ADC }, { (int16)-1, (void*)label$12651 } };
static struct $14__FB_DATADESC$ label$12647[7] = { { (int16)3, (void*)"120" }, { (int16)3, (void*)"SEI" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_SEI }, { (int16)-1, (void*)label$12649 } };
static struct $14__FB_DATADESC$ label$12645[7] = { { (int16)3, (void*)"119" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12647 } };
static struct $14__FB_DATADESC$ label$12643[7] = { { (int16)3, (void*)"118" }, { (int16)3, (void*)"ROR" }, { (int16)1, (void*)"5" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ROR }, { (int16)-1, (void*)label$12645 } };
static struct $14__FB_DATADESC$ label$12641[7] = { { (int16)3, (void*)"117" }, { (int16)3, (void*)"ADC" }, { (int16)1, (void*)"5" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ADC }, { (int16)-1, (void*)label$12643 } };
static struct $14__FB_DATADESC$ label$12639[7] = { { (int16)3, (void*)"116" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12641 } };
static struct $14__FB_DATADESC$ label$12637[7] = { { (int16)3, (void*)"115" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12639 } };
static struct $14__FB_DATADESC$ label$12635[7] = { { (int16)3, (void*)"114" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12637 } };
static struct $14__FB_DATADESC$ label$12633[7] = { { (int16)3, (void*)"113" }, { (int16)3, (void*)"ADC" }, { (int16)2, (void*)"11" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ADC }, { (int16)-1, (void*)label$12635 } };
static struct $14__FB_DATADESC$ label$12631[7] = { { (int16)3, (void*)"112" }, { (int16)3, (void*)"BVS" }, { (int16)1, (void*)"9" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_BVS }, { (int16)-1, (void*)label$12633 } };
static struct $14__FB_DATADESC$ label$12629[7] = { { (int16)3, (void*)"111" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12631 } };
static struct $14__FB_DATADESC$ label$12627[7] = { { (int16)3, (void*)"110" }, { (int16)3, (void*)"ROR" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ROR }, { (int16)-1, (void*)label$12629 } };
static struct $14__FB_DATADESC$ label$12625[7] = { { (int16)3, (void*)"109" }, { (int16)3, (void*)"ADC" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ADC }, { (int16)-1, (void*)label$12627 } };
static struct $14__FB_DATADESC$ label$12623[7] = { { (int16)3, (void*)"108" }, { (int16)3, (void*)"JMP" }, { (int16)2, (void*)"12" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_JMP }, { (int16)-1, (void*)label$12625 } };
static struct $14__FB_DATADESC$ label$12621[7] = { { (int16)3, (void*)"107" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12623 } };
static struct $14__FB_DATADESC$ label$12619[7] = { { (int16)3, (void*)"106" }, { (int16)3, (void*)"ROR" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_RORA }, { (int16)-1, (void*)label$12621 } };
static struct $14__FB_DATADESC$ label$12617[7] = { { (int16)3, (void*)"105" }, { (int16)3, (void*)"ADC" }, { (int16)1, (void*)"2" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ADC }, { (int16)-1, (void*)label$12619 } };
static struct $14__FB_DATADESC$ label$12615[7] = { { (int16)3, (void*)"104" }, { (int16)3, (void*)"PLA" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_PLA }, { (int16)-1, (void*)label$12617 } };
static struct $14__FB_DATADESC$ label$12613[7] = { { (int16)3, (void*)"103" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12615 } };
static struct $14__FB_DATADESC$ label$12611[7] = { { (int16)3, (void*)"102" }, { (int16)3, (void*)"ROR" }, { (int16)1, (void*)"4" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ROR }, { (int16)-1, (void*)label$12613 } };
static struct $14__FB_DATADESC$ label$12609[7] = { { (int16)3, (void*)"101" }, { (int16)3, (void*)"ADC" }, { (int16)1, (void*)"4" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ADC }, { (int16)-1, (void*)label$12611 } };
static struct $14__FB_DATADESC$ label$12607[7] = { { (int16)3, (void*)"100" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12609 } };
static struct $14__FB_DATADESC$ label$12605[7] = { { (int16)2, (void*)"99" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12607 } };
static struct $14__FB_DATADESC$ label$12603[7] = { { (int16)2, (void*)"98" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12605 } };
static struct $14__FB_DATADESC$ label$12601[7] = { { (int16)2, (void*)"97" }, { (int16)3, (void*)"ADC" }, { (int16)2, (void*)"10" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ADC }, { (int16)-1, (void*)label$12603 } };
static struct $14__FB_DATADESC$ label$12599[7] = { { (int16)2, (void*)"96" }, { (int16)3, (void*)"RTS" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_RTS }, { (int16)-1, (void*)label$12601 } };
static struct $14__FB_DATADESC$ label$12597[7] = { { (int16)2, (void*)"95" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12599 } };
static struct $14__FB_DATADESC$ label$12595[7] = { { (int16)2, (void*)"94" }, { (int16)3, (void*)"LSR" }, { (int16)1, (void*)"7" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LSR }, { (int16)-1, (void*)label$12597 } };
static struct $14__FB_DATADESC$ label$12593[7] = { { (int16)2, (void*)"93" }, { (int16)3, (void*)"EOR" }, { (int16)1, (void*)"7" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_EOR }, { (int16)-1, (void*)label$12595 } };
static struct $14__FB_DATADESC$ label$12591[7] = { { (int16)2, (void*)"92" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12593 } };
static struct $14__FB_DATADESC$ label$12589[7] = { { (int16)2, (void*)"91" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12591 } };
static struct $14__FB_DATADESC$ label$12587[7] = { { (int16)2, (void*)"90" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12589 } };
static struct $14__FB_DATADESC$ label$12585[7] = { { (int16)2, (void*)"89" }, { (int16)3, (void*)"EOR" }, { (int16)1, (void*)"8" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_EOR }, { (int16)-1, (void*)label$12587 } };
static struct $14__FB_DATADESC$ label$12583[7] = { { (int16)2, (void*)"88" }, { (int16)3, (void*)"CLI" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_CLI }, { (int16)-1, (void*)label$12585 } };
static struct $14__FB_DATADESC$ label$12581[7] = { { (int16)2, (void*)"87" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12583 } };
static struct $14__FB_DATADESC$ label$12579[7] = { { (int16)2, (void*)"86" }, { (int16)3, (void*)"LSR" }, { (int16)1, (void*)"5" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LSR }, { (int16)-1, (void*)label$12581 } };
static struct $14__FB_DATADESC$ label$12577[7] = { { (int16)2, (void*)"85" }, { (int16)3, (void*)"EOR" }, { (int16)1, (void*)"5" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_EOR }, { (int16)-1, (void*)label$12579 } };
static struct $14__FB_DATADESC$ label$12575[7] = { { (int16)2, (void*)"84" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12577 } };
static struct $14__FB_DATADESC$ label$12573[7] = { { (int16)2, (void*)"83" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12575 } };
static struct $14__FB_DATADESC$ label$12571[7] = { { (int16)2, (void*)"82" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12573 } };
static struct $14__FB_DATADESC$ label$12569[7] = { { (int16)2, (void*)"81" }, { (int16)3, (void*)"EOR" }, { (int16)2, (void*)"11" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_EOR }, { (int16)-1, (void*)label$12571 } };
static struct $14__FB_DATADESC$ label$12567[7] = { { (int16)2, (void*)"80" }, { (int16)3, (void*)"BVC" }, { (int16)1, (void*)"9" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_BVC }, { (int16)-1, (void*)label$12569 } };
static struct $14__FB_DATADESC$ label$12565[7] = { { (int16)2, (void*)"79" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12567 } };
static struct $14__FB_DATADESC$ label$12563[7] = { { (int16)2, (void*)"78" }, { (int16)3, (void*)"LSR" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LSR }, { (int16)-1, (void*)label$12565 } };
static struct $14__FB_DATADESC$ label$12561[7] = { { (int16)2, (void*)"77" }, { (int16)3, (void*)"EOR" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_EOR }, { (int16)-1, (void*)label$12563 } };
static struct $14__FB_DATADESC$ label$12559[7] = { { (int16)2, (void*)"76" }, { (int16)3, (void*)"JMP" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_JMP }, { (int16)-1, (void*)label$12561 } };
static struct $14__FB_DATADESC$ label$12557[7] = { { (int16)2, (void*)"75" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12559 } };
static struct $14__FB_DATADESC$ label$12555[7] = { { (int16)2, (void*)"74" }, { (int16)3, (void*)"LSR" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LSRA }, { (int16)-1, (void*)label$12557 } };
static struct $14__FB_DATADESC$ label$12553[7] = { { (int16)2, (void*)"73" }, { (int16)3, (void*)"EOR" }, { (int16)1, (void*)"2" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_EOR }, { (int16)-1, (void*)label$12555 } };
static struct $14__FB_DATADESC$ label$12551[7] = { { (int16)2, (void*)"72" }, { (int16)3, (void*)"PHA" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_PHA }, { (int16)-1, (void*)label$12553 } };
static struct $14__FB_DATADESC$ label$12549[7] = { { (int16)2, (void*)"71" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12551 } };
static struct $14__FB_DATADESC$ label$12547[7] = { { (int16)2, (void*)"70" }, { (int16)3, (void*)"LSR" }, { (int16)1, (void*)"4" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LSR }, { (int16)-1, (void*)label$12549 } };
static struct $14__FB_DATADESC$ label$12545[7] = { { (int16)2, (void*)"69" }, { (int16)3, (void*)"EOR" }, { (int16)1, (void*)"4" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_EOR }, { (int16)-1, (void*)label$12547 } };
static struct $14__FB_DATADESC$ label$12543[7] = { { (int16)2, (void*)"68" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12545 } };
static struct $14__FB_DATADESC$ label$12541[7] = { { (int16)2, (void*)"67" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12543 } };
static struct $14__FB_DATADESC$ label$12539[7] = { { (int16)2, (void*)"66" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12541 } };
static struct $14__FB_DATADESC$ label$12537[7] = { { (int16)2, (void*)"65" }, { (int16)3, (void*)"EOR" }, { (int16)2, (void*)"10" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_EOR }, { (int16)-1, (void*)label$12539 } };
static struct $14__FB_DATADESC$ label$12535[7] = { { (int16)2, (void*)"64" }, { (int16)3, (void*)"RTI" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_RTI }, { (int16)-1, (void*)label$12537 } };
static struct $14__FB_DATADESC$ label$12533[7] = { { (int16)2, (void*)"63" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12535 } };
static struct $14__FB_DATADESC$ label$12531[7] = { { (int16)2, (void*)"62" }, { (int16)3, (void*)"ROL" }, { (int16)1, (void*)"7" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ROL }, { (int16)-1, (void*)label$12533 } };
static struct $14__FB_DATADESC$ label$12529[7] = { { (int16)2, (void*)"61" }, { (int16)3, (void*)"AND" }, { (int16)1, (void*)"7" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_AND }, { (int16)-1, (void*)label$12531 } };
static struct $14__FB_DATADESC$ label$12527[7] = { { (int16)2, (void*)"60" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12529 } };
static struct $14__FB_DATADESC$ label$12525[7] = { { (int16)2, (void*)"59" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12527 } };
static struct $14__FB_DATADESC$ label$12523[7] = { { (int16)2, (void*)"58" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12525 } };
static struct $14__FB_DATADESC$ label$12521[7] = { { (int16)2, (void*)"57" }, { (int16)3, (void*)"AND" }, { (int16)1, (void*)"8" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_AND }, { (int16)-1, (void*)label$12523 } };
static struct $14__FB_DATADESC$ label$12519[7] = { { (int16)2, (void*)"56" }, { (int16)3, (void*)"SEC" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_SEC }, { (int16)-1, (void*)label$12521 } };
static struct $14__FB_DATADESC$ label$12517[7] = { { (int16)2, (void*)"55" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12519 } };
static struct $14__FB_DATADESC$ label$12515[7] = { { (int16)2, (void*)"54" }, { (int16)3, (void*)"ROL" }, { (int16)1, (void*)"5" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ROL }, { (int16)-1, (void*)label$12517 } };
static struct $14__FB_DATADESC$ label$12513[7] = { { (int16)2, (void*)"53" }, { (int16)3, (void*)"AND" }, { (int16)1, (void*)"5" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_AND }, { (int16)-1, (void*)label$12515 } };
static struct $14__FB_DATADESC$ label$12511[7] = { { (int16)2, (void*)"52" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12513 } };
static struct $14__FB_DATADESC$ label$12509[7] = { { (int16)2, (void*)"51" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12511 } };
static struct $14__FB_DATADESC$ label$12507[7] = { { (int16)2, (void*)"50" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12509 } };
static struct $14__FB_DATADESC$ label$12505[7] = { { (int16)2, (void*)"49" }, { (int16)3, (void*)"AND" }, { (int16)2, (void*)"11" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_AND }, { (int16)-1, (void*)label$12507 } };
static struct $14__FB_DATADESC$ label$12503[7] = { { (int16)2, (void*)"48" }, { (int16)3, (void*)"BMI" }, { (int16)1, (void*)"9" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_BMI }, { (int16)-1, (void*)label$12505 } };
static struct $14__FB_DATADESC$ label$12501[7] = { { (int16)2, (void*)"47" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12503 } };
static struct $14__FB_DATADESC$ label$12499[7] = { { (int16)2, (void*)"46" }, { (int16)3, (void*)"ROL" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ROL }, { (int16)-1, (void*)label$12501 } };
static struct $14__FB_DATADESC$ label$12497[7] = { { (int16)2, (void*)"45" }, { (int16)3, (void*)"AND" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_AND }, { (int16)-1, (void*)label$12499 } };
static struct $14__FB_DATADESC$ label$12495[7] = { { (int16)2, (void*)"44" }, { (int16)3, (void*)"BIT" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_BIT }, { (int16)-1, (void*)label$12497 } };
static struct $14__FB_DATADESC$ label$12493[7] = { { (int16)2, (void*)"43" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12495 } };
static struct $14__FB_DATADESC$ label$12491[7] = { { (int16)2, (void*)"42" }, { (int16)3, (void*)"ROL" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ROLA }, { (int16)-1, (void*)label$12493 } };
static struct $14__FB_DATADESC$ label$12489[7] = { { (int16)2, (void*)"41" }, { (int16)3, (void*)"AND" }, { (int16)1, (void*)"2" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_AND }, { (int16)-1, (void*)label$12491 } };
static struct $14__FB_DATADESC$ label$12487[7] = { { (int16)2, (void*)"40" }, { (int16)3, (void*)"PLP" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_PLP }, { (int16)-1, (void*)label$12489 } };
static struct $14__FB_DATADESC$ label$12485[7] = { { (int16)2, (void*)"39" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12487 } };
static struct $14__FB_DATADESC$ label$12483[7] = { { (int16)2, (void*)"38" }, { (int16)3, (void*)"ROL" }, { (int16)1, (void*)"4" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ROL }, { (int16)-1, (void*)label$12485 } };
static struct $14__FB_DATADESC$ label$12481[7] = { { (int16)2, (void*)"37" }, { (int16)3, (void*)"AND" }, { (int16)1, (void*)"4" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_AND }, { (int16)-1, (void*)label$12483 } };
static struct $14__FB_DATADESC$ label$12479[7] = { { (int16)2, (void*)"36" }, { (int16)3, (void*)"BIT" }, { (int16)1, (void*)"4" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_BIT }, { (int16)-1, (void*)label$12481 } };
static struct $14__FB_DATADESC$ label$12477[7] = { { (int16)2, (void*)"35" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12479 } };
static struct $14__FB_DATADESC$ label$12475[7] = { { (int16)2, (void*)"34" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12477 } };
static struct $14__FB_DATADESC$ label$12473[7] = { { (int16)2, (void*)"33" }, { (int16)3, (void*)"AND" }, { (int16)2, (void*)"10" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_AND }, { (int16)-1, (void*)label$12475 } };
static struct $14__FB_DATADESC$ label$12471[7] = { { (int16)2, (void*)"32" }, { (int16)3, (void*)"JSR" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_JSR }, { (int16)-1, (void*)label$12473 } };
static struct $14__FB_DATADESC$ label$12469[7] = { { (int16)2, (void*)"31" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12471 } };
static struct $14__FB_DATADESC$ label$12467[7] = { { (int16)2, (void*)"30" }, { (int16)3, (void*)"ASL" }, { (int16)1, (void*)"7" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ASL }, { (int16)-1, (void*)label$12469 } };
static struct $14__FB_DATADESC$ label$12465[7] = { { (int16)2, (void*)"29" }, { (int16)3, (void*)"ORA" }, { (int16)1, (void*)"7" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ORA }, { (int16)-1, (void*)label$12467 } };
static struct $14__FB_DATADESC$ label$12463[7] = { { (int16)2, (void*)"28" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12465 } };
static struct $14__FB_DATADESC$ label$12461[7] = { { (int16)2, (void*)"27" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12463 } };
static struct $14__FB_DATADESC$ label$12459[7] = { { (int16)2, (void*)"26" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12461 } };
static struct $14__FB_DATADESC$ label$12457[7] = { { (int16)2, (void*)"25" }, { (int16)3, (void*)"ORA" }, { (int16)1, (void*)"8" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ORA }, { (int16)-1, (void*)label$12459 } };
static struct $14__FB_DATADESC$ label$12455[7] = { { (int16)2, (void*)"24" }, { (int16)3, (void*)"CLC" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_CLC }, { (int16)-1, (void*)label$12457 } };
static struct $14__FB_DATADESC$ label$12453[7] = { { (int16)2, (void*)"23" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12455 } };
static struct $14__FB_DATADESC$ label$12451[7] = { { (int16)2, (void*)"22" }, { (int16)3, (void*)"ASL" }, { (int16)1, (void*)"5" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ASL }, { (int16)-1, (void*)label$12453 } };
static struct $14__FB_DATADESC$ label$12449[7] = { { (int16)2, (void*)"21" }, { (int16)3, (void*)"ORA" }, { (int16)1, (void*)"5" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ORA }, { (int16)-1, (void*)label$12451 } };
static struct $14__FB_DATADESC$ label$12447[7] = { { (int16)2, (void*)"20" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12449 } };
static struct $14__FB_DATADESC$ label$12445[7] = { { (int16)2, (void*)"19" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12447 } };
static struct $14__FB_DATADESC$ label$12443[7] = { { (int16)2, (void*)"18" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12445 } };
static struct $14__FB_DATADESC$ label$12441[7] = { { (int16)2, (void*)"17" }, { (int16)3, (void*)"ORA" }, { (int16)2, (void*)"11" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ORA }, { (int16)-1, (void*)label$12443 } };
static struct $14__FB_DATADESC$ label$12439[7] = { { (int16)2, (void*)"16" }, { (int16)3, (void*)"BPL" }, { (int16)1, (void*)"9" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_BPL }, { (int16)-1, (void*)label$12441 } };
static struct $14__FB_DATADESC$ label$12437[7] = { { (int16)-2, (void*)((uint8*)NIBBLES$ + 15ll) }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12439 } };
static struct $14__FB_DATADESC$ label$12435[7] = { { (int16)-2, (void*)((uint8*)NIBBLES$ + 14ll) }, { (int16)3, (void*)"ASL" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ASL }, { (int16)-1, (void*)label$12437 } };
static struct $14__FB_DATADESC$ label$12433[7] = { { (int16)-2, (void*)((uint8*)NIBBLES$ + 13ll) }, { (int16)3, (void*)"ORA" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)((uint8*)NIBBLES$ + 4ll) }, { (int16)-2, (void*)((uint8*)NIBBLES$ + 3ll) }, { (int16)-2, (void*)&INS_ORA }, { (int16)-1, (void*)label$12435 } };
static struct $14__FB_DATADESC$ label$12431[7] = { { (int16)-2, (void*)((uint8*)NIBBLES$ + 12ll) }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12433 } };
static struct $14__FB_DATADESC$ label$12429[7] = { { (int16)-2, (void*)((uint8*)NIBBLES$ + 11ll) }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12431 } };
static struct $14__FB_DATADESC$ label$12427[7] = { { (int16)-2, (void*)((uint8*)NIBBLES$ + 10ll) }, { (int16)3, (void*)"ASL" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)((uint8*)NIBBLES$ + 2ll) }, { (int16)-2, (void*)((uint8*)NIBBLES$ + 1ll) }, { (int16)-2, (void*)&INS_ASLA }, { (int16)-1, (void*)label$12429 } };
static struct $14__FB_DATADESC$ label$12425[7] = { { (int16)-2, (void*)((uint8*)NIBBLES$ + 9ll) }, { (int16)3, (void*)"ORA" }, { (int16)1, (void*)"2" }, { (int16)-2, (void*)((uint8*)NIBBLES$ + 2ll) }, { (int16)-2, (void*)((uint8*)NIBBLES$ + 2ll) }, { (int16)-2, (void*)&INS_ORA }, { (int16)-1, (void*)label$12427 } };
static struct $14__FB_DATADESC$ label$12423[7] = { { (int16)-2, (void*)((uint8*)NIBBLES$ + 8ll) }, { (int16)3, (void*)"PHP" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)((uint8*)NIBBLES$ + 3ll) }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_PHP }, { (int16)-1, (void*)label$12425 } };
static struct $14__FB_DATADESC$ label$12421[7] = { { (int16)-2, (void*)((uint8*)NIBBLES$ + 7ll) }, { (int16)3, (void*)"W64" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_W64 }, { (int16)-1, (void*)label$12423 } };
static struct $14__FB_DATADESC$ label$12419[7] = { { (int16)-2, (void*)((uint8*)NIBBLES$ + 6ll) }, { (int16)3, (void*)"ASL" }, { (int16)1, (void*)"4" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ASL }, { (int16)-1, (void*)label$12421 } };
static struct $14__FB_DATADESC$ label$12417[7] = { { (int16)-2, (void*)((uint8*)NIBBLES$ + 5ll) }, { (int16)3, (void*)"ORA" }, { (int16)1, (void*)"4" }, { (int16)-2, (void*)((uint8*)NIBBLES$ + 3ll) }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ORA }, { (int16)-1, (void*)label$12419 } };
static struct $14__FB_DATADESC$ label$12415[7] = { { (int16)-2, (void*)((uint8*)NIBBLES$ + 4ll) }, { (int16)3, (void*)"R64" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_R64 }, { (int16)-1, (void*)label$12417 } };
static struct $14__FB_DATADESC$ label$12413[7] = { { (int16)-2, (void*)((uint8*)NIBBLES$ + 3ll) }, { (int16)3, (void*)"W32" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_W32 }, { (int16)-1, (void*)label$12415 } };
static struct $14__FB_DATADESC$ label$12411[7] = { { (int16)-2, (void*)((uint8*)NIBBLES$ + 2ll) }, { (int16)3, (void*)"R32" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_R32 }, { (int16)-1, (void*)label$12413 } };
static struct $14__FB_DATADESC$ label$12409[7] = { { (int16)-2, (void*)((uint8*)NIBBLES$ + 1ll) }, { (int16)3, (void*)"ORA" }, { (int16)2, (void*)"10" }, { (int16)-2, (void*)((uint8*)NIBBLES$ + 14ll) }, { (int16)-2, (void*)((uint8*)NIBBLES$ + 2ll) }, { (int16)-2, (void*)&INS_ORA }, { (int16)-1, (void*)label$12411 } };
static struct $14__FB_DATADESC$ label$12022[7] = { { (int16)-2, (void*)NIBBLES$ }, { (int16)3, (void*)"BRK" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)((uint8*)NIBBLES$ + 15ll) }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_BRK }, { (int16)-1, (void*)label$12409 } };
double SWCH$;
double OFFSET$;
void* IMAGE$;
FBSTRING STRCODE$;
FBSTRING FILENAME$;
double SYS_OFFSET$ __attribute__((common));
double STR_LEN$ __attribute__((common));
double CNT$ __attribute__((common));
void* BGIMAGE$ __attribute__((common));
void* FGIMAGE$ __attribute__((common));
void* RASTER$ __attribute__((common));
void* _RENDER$ __attribute__((common));
void* PSCRN$ __attribute__((common));
FBSTRING COMPILER$ __attribute__((common));
uint64 SCR_W$ __attribute__((common));
uint64 SCR_H$ __attribute__((common));
uint64 SCR_POS$ __attribute__((common));
uint64 IMGDATA$ __attribute__((common));
uint64 PITCH$ __attribute__((common));
FBSTRING MSG$ __attribute__((common));
struct $7FBARRAYIdE POWER2$ __attribute__((common));
double SIZESCREEN$ __attribute__((common));
FBSTRING _SCREENRES$ __attribute__((common));
FBSTRING _NAME$ __attribute__((common));
double SCRWIDTH$ __attribute__((common));
double SCRHEIGHT$ __attribute__((common));
double RED$ __attribute__((common));
double GREEN$ __attribute__((common));
double BLUE$ __attribute__((common));
double XSCRCENTER$ __attribute__((common));
double YSCRCENTER$ __attribute__((common));

void _ZN9_FLOAT128C1Ev( struct $9_FLOAT128* THIS$1 )
{
 label$2:;
 __builtin_memset( (int64*)THIS$1, 0, 16ll );
 *(double*)((uint8*)THIS$1 + 8ll) = 0x1.p+0;
 label$3:;
}

void _ZN9_FLOAT128C1Edd( struct $9_FLOAT128* THIS$1, double PXYZ$1, double PW$1 )
{
 label$4:;
 __builtin_memset( (int64*)THIS$1, 0, 16ll );
 *(double*)THIS$1 = PXYZ$1;
 *(double*)((uint8*)THIS$1 + 8ll) = PXYZ$1;
 *(double*)THIS$1 = PXYZ$1;
 *(double*)((uint8*)THIS$1 + 8ll) = PW$1;
 label$5:;
}

void _ZN9_FLOAT128C1Edddd( struct $9_FLOAT128* THIS$1, double PX$1, double PY$1, double PZ$1, double PW$1 )
{
 label$6:;
 __builtin_memset( (int64*)THIS$1, 0, 16ll );
 *(double*)THIS$1 = PX$1;
 *(double*)((uint8*)THIS$1 + 8ll) = PY$1;
 *(double*)THIS$1 = PZ$1;
 *(double*)((uint8*)THIS$1 + 8ll) = PW$1;
 label$7:;
}

void _ZN9_FLOAT128C1ERS_dd( struct $9_FLOAT128* THIS$1, struct $9_FLOAT128* V1$1, double PZ$1, double PW$1 )
{
 label$8:;
 __builtin_memset( (int64*)THIS$1, 0, 16ll );
 *(double*)THIS$1 = *(double*)V1$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)V1$1 + 8ll);
 *(double*)THIS$1 = PZ$1;
 *(double*)((uint8*)THIS$1 + 8ll) = PW$1;
 label$9:;
}

void _ZN9_FLOAT128C1ERS_S0_( struct $9_FLOAT128* THIS$1, struct $9_FLOAT128* V1$1, struct $9_FLOAT128* V2$1 )
{
 label$10:;
 __builtin_memset( (int64*)THIS$1, 0, 16ll );
 *(double*)THIS$1 = *(double*)V1$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)V1$1 + 8ll);
 *(double*)THIS$1 = *(double*)V2$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)V2$1 + 8ll);
 label$11:;
}

void _ZN9_FLOAT128C1ERS_d( struct $9_FLOAT128* THIS$1, struct $9_FLOAT128* V3$1, double PW$1 )
{
 label$12:;
 __builtin_memset( (int64*)THIS$1, 0, 16ll );
 *(double*)THIS$1 = *(double*)V3$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)V3$1 + 8ll);
 *(double*)THIS$1 = *(double*)V3$1;
 *(double*)((uint8*)THIS$1 + 8ll) = PW$1;
 label$13:;
}

void _ZN9_FLOAT128C1EdRS_( struct $9_FLOAT128* THIS$1, double PX$1, struct $9_FLOAT128* V3$1 )
{
 label$14:;
 __builtin_memset( (int64*)THIS$1, 0, 16ll );
 *(double*)THIS$1 = PX$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)V3$1;
 *(double*)THIS$1 = *(double*)((uint8*)V3$1 + 8ll);
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)V3$1;
 label$15:;
}

void _ZN9_FLOAT128C1ERS_( struct $9_FLOAT128* THIS$1, struct $9_FLOAT128* V4$1 )
{
 label$16:;
 __builtin_memset( (int64*)THIS$1, 0, 16ll );
 *(double*)THIS$1 = *(double*)V4$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)V4$1 + 8ll);
 *(double*)THIS$1 = *(double*)V4$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)V4$1 + 8ll);
 label$17:;
}

void _ZN9_FLOAT128aSEd( struct $9_FLOAT128* THIS$1, double PXYZW$1 )
{
 label$18:;
 *(double*)THIS$1 = PXYZW$1;
 *(double*)((uint8*)THIS$1 + 8ll) = PXYZW$1;
 *(double*)THIS$1 = PXYZW$1;
 *(double*)((uint8*)THIS$1 + 8ll) = PXYZW$1;
 label$19:;
}

void _ZN9_FLOAT128aSEf( struct $9_FLOAT128* THIS$1, float P$1 )
{
 label$20:;
 *(double*)THIS$1 = (double)P$1;
 *(double*)((uint8*)THIS$1 + 8ll) = (double)P$1;
 *(double*)THIS$1 = 0x1.p+0;
 *(double*)((uint8*)THIS$1 + 8ll) = 0x1.p+0;
 label$21:;
}

void _ZN9_FLOAT128aSEy( struct $9_FLOAT128* THIS$1, uint64 P$1 )
{
 label$22:;
 *(double*)THIS$1 = (double)P$1;
 *(double*)((uint8*)THIS$1 + 8ll) = (double)P$1;
 *(double*)THIS$1 = (double)P$1;
 *(double*)((uint8*)THIS$1 + 8ll) = 0x1.p+0;
 label$23:;
}

void _ZN9_FLOAT128aSERS_( struct $9_FLOAT128* THIS$1, struct $9_FLOAT128* P$1 )
{
 label$24:;
 *(double*)THIS$1 = *(double*)P$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)P$1 + 8ll);
 *(double*)THIS$1 = *(double*)P$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)P$1 + 8ll);
 label$25:;
}

FBSTRING* _ZN9_FLOAT128cv8FBSTRINGEv( struct $9_FLOAT128* THIS$1 )
{
 FBSTRING TMP$43$1;
 FBSTRING TMP$44$1;
 FBSTRING TMP$45$1;
 FBSTRING TMP$46$1;
 FBSTRING TMP$47$1;
 FBSTRING TMP$48$1;
 FBSTRING TMP$49$1;
 FBSTRING TMP$50$1;
 FBSTRING fb$result$1;
 __builtin_memset( &fb$result$1, 0, 24ll );
 label$26:;
 FBSTRING* vr$2 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 8ll) );
 FBSTRING* vr$4 = fb_DoubleToStr( *(double*)THIS$1 );
 FBSTRING* vr$6 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 8ll) );
 FBSTRING* vr$8 = fb_DoubleToStr( *(double*)THIS$1 );
 __builtin_memset( &TMP$43$1, 0, 24ll );
 FBSTRING* vr$11 = fb_StrConcat( &TMP$43$1, (void*)"(", 2ll, (void*)vr$8, -1ll );
 __builtin_memset( &TMP$44$1, 0, 24ll );
 FBSTRING* vr$14 = fb_StrConcat( &TMP$44$1, (void*)vr$11, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$45$1, 0, 24ll );
 FBSTRING* vr$17 = fb_StrConcat( &TMP$45$1, (void*)vr$14, -1ll, (void*)vr$6, -1ll );
 __builtin_memset( &TMP$46$1, 0, 24ll );
 FBSTRING* vr$20 = fb_StrConcat( &TMP$46$1, (void*)vr$17, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$47$1, 0, 24ll );
 FBSTRING* vr$23 = fb_StrConcat( &TMP$47$1, (void*)vr$20, -1ll, (void*)vr$4, -1ll );
 __builtin_memset( &TMP$48$1, 0, 24ll );
 FBSTRING* vr$26 = fb_StrConcat( &TMP$48$1, (void*)vr$23, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$49$1, 0, 24ll );
 FBSTRING* vr$29 = fb_StrConcat( &TMP$49$1, (void*)vr$26, -1ll, (void*)vr$2, -1ll );
 __builtin_memset( &TMP$50$1, 0, 24ll );
 FBSTRING* vr$32 = fb_StrConcat( &TMP$50$1, (void*)vr$29, -1ll, (void*)")", 2ll );
 fb_StrInit( (void*)&fb$result$1, -1ll, (void*)vr$32, -1ll, 0 );
 goto label$27;
 label$27:;
 FBSTRING* vr$35 = fb_StrAllocTempResult( (FBSTRING*)&fb$result$1 );
 return vr$35;
}

uint64 _ZN9_FLOAT128cvyEv( struct $9_FLOAT128* THIS$1 )
{
 uint64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$28:;
 uint64 C$1;
 __builtin_memset( &C$1, 0, 8ll );
 C$1 = C$1 << (8ll & 63ll);
 if( *(double*)((uint8*)THIS$1 + 8ll) >= 0x1.010101010101p-8 ) goto label$31;
 {
 }
 goto label$30;
 label$31:;
 if( *(double*)((uint8*)THIS$1 + 8ll) <= 0x1.p+0 ) goto label$32;
 {
  C$1 = C$1 | 255ull;
 }
 goto label$30;
 label$32:;
 {
  C$1 = C$1 | ((uint64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 8ll) * 0x1.FEp+7 ));
 }
 label$30:;
 C$1 = C$1 << (8ll & 63ll);
 if( *(double*)THIS$1 >= 0x1.010101010101p-8 ) goto label$34;
 {
 }
 goto label$33;
 label$34:;
 if( *(double*)THIS$1 <= 0x1.p+0 ) goto label$35;
 {
  C$1 = C$1 | 255ull;
 }
 goto label$33;
 label$35:;
 {
  C$1 = C$1 | ((uint64)__builtin_nearbyint( *(double*)THIS$1 * 0x1.FEp+7 ));
 }
 label$33:;
 C$1 = C$1 << (8ll & 63ll);
 if( *(double*)((uint8*)THIS$1 + 8ll) >= 0x1.010101010101p-8 ) goto label$37;
 {
 }
 goto label$36;
 label$37:;
 if( *(double*)((uint8*)THIS$1 + 8ll) <= 0x1.p+0 ) goto label$38;
 {
  C$1 = C$1 | 255ull;
 }
 goto label$36;
 label$38:;
 {
  C$1 = C$1 | ((uint64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 8ll) * 0x1.FEp+7 ));
 }
 label$36:;
 C$1 = C$1 << (8ll & 63ll);
 if( *(double*)THIS$1 >= 0x1.010101010101p-8 ) goto label$40;
 {
 }
 goto label$39;
 label$40:;
 if( *(double*)THIS$1 <= 0x1.p+0 ) goto label$41;
 {
  C$1 = C$1 | 255ull;
 }
 goto label$39;
 label$41:;
 {
  C$1 = C$1 | ((uint64)__builtin_nearbyint( *(double*)THIS$1 * 0x1.FEp+7 ));
 }
 label$39:;
 fb$result$1 = C$1;
 goto label$29;
 label$29:;
 return fb$result$1;
}

void _ZN9_FLOAT128pLEf( struct $9_FLOAT128* THIS$1, float V$1 )
{
 label$42:;
 *(double*)THIS$1 = *(double*)THIS$1 + (double)V$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) + (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 + (double)V$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) + (double)V$1;
 label$43:;
}

void _ZN9_FLOAT128mIEf( struct $9_FLOAT128* THIS$1, float V$1 )
{
 label$44:;
 *(double*)THIS$1 = *(double*)THIS$1 - (double)V$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) - (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 - (double)V$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) - (double)V$1;
 label$45:;
}

void _ZN9_FLOAT128mLEf( struct $9_FLOAT128* THIS$1, float V$1 )
{
 label$46:;
 *(double*)THIS$1 = *(double*)THIS$1 * (double)V$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) * (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 * (double)V$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) * (double)V$1;
 label$47:;
}

void _ZN9_FLOAT128dVEf( struct $9_FLOAT128* THIS$1, float V$1 )
{
 label$48:;
 *(double*)THIS$1 = *(double*)THIS$1 / (double)V$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) / (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 / (double)V$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) / (double)V$1;
 label$49:;
}

void _ZN9_FLOAT128pLEd( struct $9_FLOAT128* THIS$1, double V$1 )
{
 label$50:;
 *(double*)THIS$1 = *(double*)THIS$1 + V$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) + V$1;
 *(double*)THIS$1 = *(double*)THIS$1 + V$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) + V$1;
 label$51:;
}

void _ZN9_FLOAT128mIEd( struct $9_FLOAT128* THIS$1, double V$1 )
{
 label$52:;
 *(double*)THIS$1 = *(double*)THIS$1 - V$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) - V$1;
 *(double*)THIS$1 = *(double*)THIS$1 - V$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) - V$1;
 label$53:;
}

void _ZN9_FLOAT128mLEd( struct $9_FLOAT128* THIS$1, double V$1 )
{
 label$54:;
 *(double*)THIS$1 = *(double*)THIS$1 * V$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) * V$1;
 *(double*)THIS$1 = *(double*)THIS$1 * V$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) * V$1;
 label$55:;
}

void _ZN9_FLOAT128dVEd( struct $9_FLOAT128* THIS$1, double V$1 )
{
 label$56:;
 *(double*)THIS$1 = *(double*)THIS$1 / V$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) / V$1;
 *(double*)THIS$1 = *(double*)THIS$1 / V$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) / V$1;
 label$57:;
}

void _ZN9_FLOAT128pLEy( struct $9_FLOAT128* THIS$1, uint64 V$1 )
{
 label$58:;
 *(double*)THIS$1 = *(double*)THIS$1 + (double)V$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) + (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 + (double)V$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) + (double)V$1;
 label$59:;
}

void _ZN9_FLOAT128mIEy( struct $9_FLOAT128* THIS$1, uint64 V$1 )
{
 label$60:;
 *(double*)THIS$1 = *(double*)THIS$1 - (double)V$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) - (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 - (double)V$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) - (double)V$1;
 label$61:;
}

void _ZN9_FLOAT128mLEy( struct $9_FLOAT128* THIS$1, uint64 V$1 )
{
 label$62:;
 *(double*)THIS$1 = *(double*)THIS$1 * (double)V$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) * (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 * (double)V$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) * (double)V$1;
 label$63:;
}

void _ZN9_FLOAT128dVEy( struct $9_FLOAT128* THIS$1, uint64 V$1 )
{
 label$64:;
 *(double*)THIS$1 = *(double*)THIS$1 / (double)V$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) / (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 / (double)V$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) / (double)V$1;
 label$65:;
}

void _ZN9_FLOAT128pLERS_( struct $9_FLOAT128* THIS$1, struct $9_FLOAT128* V4$1 )
{
 label$66:;
 *(double*)THIS$1 = *(double*)THIS$1 + *(double*)V4$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) + *(double*)((uint8*)V4$1 + 8ll);
 *(double*)THIS$1 = *(double*)THIS$1 + *(double*)V4$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) + *(double*)((uint8*)V4$1 + 8ll);
 label$67:;
}

void _ZN9_FLOAT128mIERS_( struct $9_FLOAT128* THIS$1, struct $9_FLOAT128* V4$1 )
{
 label$68:;
 *(double*)THIS$1 = *(double*)THIS$1 - *(double*)V4$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) - *(double*)((uint8*)V4$1 + 8ll);
 *(double*)THIS$1 = *(double*)THIS$1 - *(double*)V4$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) - *(double*)((uint8*)V4$1 + 8ll);
 label$69:;
}

void _ZN9_FLOAT128mLERS_( struct $9_FLOAT128* THIS$1, struct $9_FLOAT128* V4$1 )
{
 label$70:;
 *(double*)THIS$1 = *(double*)THIS$1 * *(double*)V4$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) * *(double*)((uint8*)V4$1 + 8ll);
 *(double*)THIS$1 = *(double*)THIS$1 * *(double*)V4$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) * *(double*)((uint8*)V4$1 + 8ll);
 label$71:;
}

void _ZN9_FLOAT128dVERS_( struct $9_FLOAT128* THIS$1, struct $9_FLOAT128* V4$1 )
{
 label$72:;
 *(double*)THIS$1 = *(double*)THIS$1 / *(double*)V4$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) / *(double*)((uint8*)V4$1 + 8ll);
 *(double*)THIS$1 = *(double*)THIS$1 / *(double*)V4$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) / *(double*)((uint8*)V4$1 + 8ll);
 label$73:;
}

struct $9_FLOAT128* _ZN9_FLOAT1282XXEv( struct $9_FLOAT128* tmp$51$1, struct $9_FLOAT128* THIS$1 )
{
 label$74:;
 _ZN9_FLOAT128C1Edd( tmp$51$1, *(double*)THIS$1, *(double*)THIS$1 );
 goto label$75;
 label$75:;
 return tmp$51$1;
}

struct $9_FLOAT128* _ZN9_FLOAT1282XYEv( struct $9_FLOAT128* tmp$53$1, struct $9_FLOAT128* THIS$1 )
{
 label$76:;
 _ZN9_FLOAT128C1Edd( tmp$53$1, *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 8ll) );
 goto label$77;
 label$77:;
 return tmp$53$1;
}

struct $9_FLOAT128* _ZN9_FLOAT1282XZEv( struct $9_FLOAT128* tmp$55$1, struct $9_FLOAT128* THIS$1 )
{
 label$78:;
 _ZN9_FLOAT128C1Edd( tmp$55$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)THIS$1 );
 goto label$79;
 label$79:;
 return tmp$55$1;
}

struct $9_FLOAT128* _ZN9_FLOAT1282YXEv( struct $9_FLOAT128* tmp$57$1, struct $9_FLOAT128* THIS$1 )
{
 label$80:;
 _ZN9_FLOAT128C1Edd( tmp$57$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)THIS$1 );
 goto label$81;
 label$81:;
 return tmp$57$1;
}

struct $9_FLOAT128* _ZN9_FLOAT1282YYEv( struct $9_FLOAT128* tmp$59$1, struct $9_FLOAT128* THIS$1 )
{
 label$82:;
 _ZN9_FLOAT128C1Edd( tmp$59$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)((uint8*)THIS$1 + 8ll) );
 goto label$83;
 label$83:;
 return tmp$59$1;
}

struct $9_FLOAT128* _ZN9_FLOAT1282YZEv( struct $9_FLOAT128* tmp$61$1, struct $9_FLOAT128* THIS$1 )
{
 label$84:;
 _ZN9_FLOAT128C1Edd( tmp$61$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)THIS$1 );
 goto label$85;
 label$85:;
 return tmp$61$1;
}

struct $9_FLOAT128* _ZN9_FLOAT1282ZXEv( struct $9_FLOAT128* tmp$63$1, struct $9_FLOAT128* THIS$1 )
{
 label$86:;
 _ZN9_FLOAT128C1Edd( tmp$63$1, *(double*)THIS$1, *(double*)THIS$1 );
 goto label$87;
 label$87:;
 return tmp$63$1;
}

struct $9_FLOAT128* _ZN9_FLOAT1282ZYEv( struct $9_FLOAT128* tmp$65$1, struct $9_FLOAT128* THIS$1 )
{
 label$88:;
 _ZN9_FLOAT128C1Edd( tmp$65$1, *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 8ll) );
 goto label$89;
 label$89:;
 return tmp$65$1;
}

struct $9_FLOAT128* _ZN9_FLOAT1282ZZEv( struct $9_FLOAT128* tmp$67$1, struct $9_FLOAT128* THIS$1 )
{
 label$90:;
 _ZN9_FLOAT128C1Edd( tmp$67$1, *(double*)THIS$1, *(double*)THIS$1 );
 goto label$91;
 label$91:;
 return tmp$67$1;
}

struct $9_FLOAT128* _ZN9_FLOAT1283XXXEv( struct $9_FLOAT128* tmp$69$1, struct $9_FLOAT128* THIS$1 )
{
 label$92:;
 _ZN9_FLOAT128C1Edddd( tmp$69$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$93;
 label$93:;
 return tmp$69$1;
}

struct $9_FLOAT128* _ZN9_FLOAT1283XXYEv( struct $9_FLOAT128* tmp$71$1, struct $9_FLOAT128* THIS$1 )
{
 label$94:;
 _ZN9_FLOAT128C1Edddd( tmp$71$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 8ll), 0x1.p+0 );
 goto label$95;
 label$95:;
 return tmp$71$1;
}

struct $9_FLOAT128* _ZN9_FLOAT1283XXZEv( struct $9_FLOAT128* tmp$73$1, struct $9_FLOAT128* THIS$1 )
{
 label$96:;
 _ZN9_FLOAT128C1Edddd( tmp$73$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$97;
 label$97:;
 return tmp$73$1;
}

struct $9_FLOAT128* _ZN9_FLOAT1283XYXEv( struct $9_FLOAT128* tmp$75$1, struct $9_FLOAT128* THIS$1 )
{
 label$98:;
 _ZN9_FLOAT128C1Edddd( tmp$75$1, *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)THIS$1, 0x1.p+0 );
 goto label$99;
 label$99:;
 return tmp$75$1;
}

struct $9_FLOAT128* _ZN9_FLOAT1283XYYEv( struct $9_FLOAT128* tmp$77$1, struct $9_FLOAT128* THIS$1 )
{
 label$100:;
 _ZN9_FLOAT128C1Edddd( tmp$77$1, *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)((uint8*)THIS$1 + 8ll), 0x1.p+0 );
 goto label$101;
 label$101:;
 return tmp$77$1;
}

struct $9_FLOAT128* _ZN9_FLOAT1283XYZEv( struct $9_FLOAT128* tmp$79$1, struct $9_FLOAT128* THIS$1 )
{
 label$102:;
 _ZN9_FLOAT128C1Edddd( tmp$79$1, *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)THIS$1, 0x1.p+0 );
 goto label$103;
 label$103:;
 return tmp$79$1;
}

struct $9_FLOAT128* _ZN9_FLOAT1283XZXEv( struct $9_FLOAT128* tmp$81$1, struct $9_FLOAT128* THIS$1 )
{
 label$104:;
 _ZN9_FLOAT128C1Edddd( tmp$81$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$105;
 label$105:;
 return tmp$81$1;
}

struct $9_FLOAT128* _ZN9_FLOAT1283XZYEv( struct $9_FLOAT128* tmp$83$1, struct $9_FLOAT128* THIS$1 )
{
 label$106:;
 _ZN9_FLOAT128C1Edddd( tmp$83$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 8ll), 0x1.p+0 );
 goto label$107;
 label$107:;
 return tmp$83$1;
}

struct $9_FLOAT128* _ZN9_FLOAT1283XZZEv( struct $9_FLOAT128* tmp$85$1, struct $9_FLOAT128* THIS$1 )
{
 label$108:;
 _ZN9_FLOAT128C1Edddd( tmp$85$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$109;
 label$109:;
 return tmp$85$1;
}

struct $9_FLOAT128* _ZN9_FLOAT1283YXXEv( struct $9_FLOAT128* tmp$87$1, struct $9_FLOAT128* THIS$1 )
{
 label$110:;
 _ZN9_FLOAT128C1Edddd( tmp$87$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$111;
 label$111:;
 return tmp$87$1;
}

struct $9_FLOAT128* _ZN9_FLOAT1283YXYEv( struct $9_FLOAT128* tmp$89$1, struct $9_FLOAT128* THIS$1 )
{
 label$112:;
 _ZN9_FLOAT128C1Edddd( tmp$89$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 8ll), 0x1.p+0 );
 goto label$113;
 label$113:;
 return tmp$89$1;
}

struct $9_FLOAT128* _ZN9_FLOAT1283YXZEv( struct $9_FLOAT128* tmp$91$1, struct $9_FLOAT128* THIS$1 )
{
 label$114:;
 _ZN9_FLOAT128C1Edddd( tmp$91$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$115;
 label$115:;
 return tmp$91$1;
}

struct $9_FLOAT128* _ZN9_FLOAT1283YYXEv( struct $9_FLOAT128* tmp$93$1, struct $9_FLOAT128* THIS$1 )
{
 label$116:;
 _ZN9_FLOAT128C1Edddd( tmp$93$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)((uint8*)THIS$1 + 8ll), *(double*)THIS$1, 0x1.p+0 );
 goto label$117;
 label$117:;
 return tmp$93$1;
}

struct $9_FLOAT128* _ZN9_FLOAT1283YYYEv( struct $9_FLOAT128* tmp$95$1, struct $9_FLOAT128* THIS$1 )
{
 label$118:;
 _ZN9_FLOAT128C1Edddd( tmp$95$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)((uint8*)THIS$1 + 8ll), *(double*)((uint8*)THIS$1 + 8ll), 0x1.p+0 );
 goto label$119;
 label$119:;
 return tmp$95$1;
}

struct $9_FLOAT128* _ZN9_FLOAT1283YYZEv( struct $9_FLOAT128* tmp$97$1, struct $9_FLOAT128* THIS$1 )
{
 label$120:;
 _ZN9_FLOAT128C1Edddd( tmp$97$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)((uint8*)THIS$1 + 8ll), *(double*)THIS$1, 0x1.p+0 );
 goto label$121;
 label$121:;
 return tmp$97$1;
}

struct $9_FLOAT128* _ZN9_FLOAT1283YZXEv( struct $9_FLOAT128* tmp$99$1, struct $9_FLOAT128* THIS$1 )
{
 label$122:;
 _ZN9_FLOAT128C1Edddd( tmp$99$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$123;
 label$123:;
 return tmp$99$1;
}

struct $9_FLOAT128* _ZN9_FLOAT1283YZYEv( struct $9_FLOAT128* tmp$101$1, struct $9_FLOAT128* THIS$1 )
{
 label$124:;
 _ZN9_FLOAT128C1Edddd( tmp$101$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 8ll), 0x1.p+0 );
 goto label$125;
 label$125:;
 return tmp$101$1;
}

struct $9_FLOAT128* _ZN9_FLOAT1283YZZEv( struct $9_FLOAT128* tmp$103$1, struct $9_FLOAT128* THIS$1 )
{
 label$126:;
 _ZN9_FLOAT128C1Edddd( tmp$103$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$127;
 label$127:;
 return tmp$103$1;
}

struct $9_FLOAT128* _ZN9_FLOAT1283ZXXEv( struct $9_FLOAT128* tmp$105$1, struct $9_FLOAT128* THIS$1 )
{
 label$128:;
 _ZN9_FLOAT128C1Edddd( tmp$105$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$129;
 label$129:;
 return tmp$105$1;
}

struct $9_FLOAT128* _ZN9_FLOAT1283ZXYEv( struct $9_FLOAT128* tmp$107$1, struct $9_FLOAT128* THIS$1 )
{
 label$130:;
 _ZN9_FLOAT128C1Edddd( tmp$107$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 8ll), 0x1.p+0 );
 goto label$131;
 label$131:;
 return tmp$107$1;
}

struct $9_FLOAT128* _ZN9_FLOAT1283ZXZEv( struct $9_FLOAT128* tmp$109$1, struct $9_FLOAT128* THIS$1 )
{
 label$132:;
 _ZN9_FLOAT128C1Edddd( tmp$109$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$133;
 label$133:;
 return tmp$109$1;
}

struct $9_FLOAT128* _ZN9_FLOAT1283ZYXEv( struct $9_FLOAT128* tmp$111$1, struct $9_FLOAT128* THIS$1 )
{
 label$134:;
 _ZN9_FLOAT128C1Edddd( tmp$111$1, *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)THIS$1, 0x1.p+0 );
 goto label$135;
 label$135:;
 return tmp$111$1;
}

struct $9_FLOAT128* _ZN9_FLOAT1283ZYYEv( struct $9_FLOAT128* tmp$113$1, struct $9_FLOAT128* THIS$1 )
{
 label$136:;
 _ZN9_FLOAT128C1Edddd( tmp$113$1, *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)((uint8*)THIS$1 + 8ll), 0x1.p+0 );
 goto label$137;
 label$137:;
 return tmp$113$1;
}

struct $9_FLOAT128* _ZN9_FLOAT1283ZYZEv( struct $9_FLOAT128* tmp$115$1, struct $9_FLOAT128* THIS$1 )
{
 label$138:;
 _ZN9_FLOAT128C1Edddd( tmp$115$1, *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)THIS$1, 0x1.p+0 );
 goto label$139;
 label$139:;
 return tmp$115$1;
}

struct $9_FLOAT128* _ZN9_FLOAT1283ZZXEv( struct $9_FLOAT128* tmp$117$1, struct $9_FLOAT128* THIS$1 )
{
 label$140:;
 _ZN9_FLOAT128C1Edddd( tmp$117$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$141;
 label$141:;
 return tmp$117$1;
}

struct $9_FLOAT128* _ZN9_FLOAT1283ZZYEv( struct $9_FLOAT128* tmp$119$1, struct $9_FLOAT128* THIS$1 )
{
 label$142:;
 _ZN9_FLOAT128C1Edddd( tmp$119$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 8ll), 0x1.p+0 );
 goto label$143;
 label$143:;
 return tmp$119$1;
}

struct $9_FLOAT128* _ZN9_FLOAT1283ZZZEv( struct $9_FLOAT128* tmp$121$1, struct $9_FLOAT128* THIS$1 )
{
 label$144:;
 _ZN9_FLOAT128C1Edddd( tmp$121$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$145;
 label$145:;
 return tmp$121$1;
}

struct $9_FLOAT128* _ZN9_FLOAT1283RGBEv( struct $9_FLOAT128* tmp$123$1, struct $9_FLOAT128* THIS$1 )
{
 label$146:;
 _ZN9_FLOAT128C1Edddd( tmp$123$1, *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)THIS$1, 0x1.p+0 );
 goto label$147;
 label$147:;
 return tmp$123$1;
}

struct $9_FLOAT128* _ZN9_FLOAT1284RGBAEv( struct $9_FLOAT128* tmp$125$1, struct $9_FLOAT128* THIS$1 )
{
 label$148:;
 _ZN9_FLOAT128C1Edddd( tmp$125$1, *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 8ll) );
 goto label$149;
 label$149:;
 return tmp$125$1;
}

struct $9_FLOAT128* _ZngR9_FLOAT128( struct $9_FLOAT128* tmp$127$1, struct $9_FLOAT128* L$1 )
{
 label$150:;
 _ZN9_FLOAT128C1Edddd( tmp$127$1, -(*(double*)L$1), -(*(double*)((uint8*)L$1 + 8ll)), -(*(double*)L$1), -(*(double*)((uint8*)L$1 + 8ll)) );
 goto label$151;
 label$151:;
 return tmp$127$1;
}

struct $9_FLOAT128* _ZplR9_FLOAT128S0_( struct $9_FLOAT128* tmp$129$1, struct $9_FLOAT128* L$1, struct $9_FLOAT128* R$1 )
{
 label$152:;
 _ZN9_FLOAT128C1Edddd( tmp$129$1, *(double*)L$1 + *(double*)R$1, *(double*)((uint8*)L$1 + 8ll) + *(double*)((uint8*)R$1 + 8ll), *(double*)L$1 + *(double*)R$1, *(double*)((uint8*)L$1 + 8ll) + *(double*)((uint8*)R$1 + 8ll) );
 goto label$153;
 label$153:;
 return tmp$129$1;
}

struct $9_FLOAT128* _ZmiR9_FLOAT128S0_( struct $9_FLOAT128* tmp$131$1, struct $9_FLOAT128* L$1, struct $9_FLOAT128* R$1 )
{
 label$154:;
 _ZN9_FLOAT128C1Edddd( tmp$131$1, *(double*)L$1 - *(double*)R$1, *(double*)((uint8*)L$1 + 8ll) - *(double*)((uint8*)R$1 + 8ll), *(double*)L$1 - *(double*)R$1, *(double*)((uint8*)L$1 + 8ll) - *(double*)((uint8*)R$1 + 8ll) );
 goto label$155;
 label$155:;
 return tmp$131$1;
}

struct $9_FLOAT128* _ZmlR9_FLOAT128S0_( struct $9_FLOAT128* tmp$133$1, struct $9_FLOAT128* L$1, struct $9_FLOAT128* R$1 )
{
 label$156:;
 _ZN9_FLOAT128C1Edddd( tmp$133$1, *(double*)L$1 * *(double*)R$1, *(double*)((uint8*)L$1 + 8ll) * *(double*)((uint8*)R$1 + 8ll), *(double*)L$1 * *(double*)R$1, *(double*)((uint8*)L$1 + 8ll) * *(double*)((uint8*)R$1 + 8ll) );
 goto label$157;
 label$157:;
 return tmp$133$1;
}

struct $9_FLOAT128* _ZdvR9_FLOAT128S0_( struct $9_FLOAT128* tmp$135$1, struct $9_FLOAT128* L$1, struct $9_FLOAT128* R$1 )
{
 label$158:;
 _ZN9_FLOAT128C1Edddd( tmp$135$1, *(double*)L$1 / *(double*)R$1, *(double*)((uint8*)L$1 + 8ll) / *(double*)((uint8*)R$1 + 8ll), *(double*)L$1 / *(double*)R$1, *(double*)((uint8*)L$1 + 8ll) / *(double*)((uint8*)R$1 + 8ll) );
 goto label$159;
 label$159:;
 return tmp$135$1;
}

int64 _ZeqR9_FLOAT128S0_( struct $9_FLOAT128* L$1, struct $9_FLOAT128* R$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$160:;
 if( ((((int64)__builtin_nearbyint( *(double*)L$1 )) ^ ((int64)__builtin_nearbyint( *(double*)R$1 ))) | (((int64)__builtin_nearbyint( *(double*)((uint8*)L$1 + 8ll) )) ^ ((int64)__builtin_nearbyint( *(double*)((uint8*)R$1 + 8ll) )))) == 0ll ) goto label$163;
 {
  fb$result$1 = 0ll;
  goto label$161;
  label$163:;
 }
 fb$result$1 = -1ll;
 goto label$161;
 label$161:;
 return fb$result$1;
}

int64 _ZneR9_FLOAT128S0_( struct $9_FLOAT128* L$1, struct $9_FLOAT128* R$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$164:;
 if( ((((int64)__builtin_nearbyint( *(double*)L$1 )) ^ ((int64)__builtin_nearbyint( *(double*)R$1 ))) | (((int64)__builtin_nearbyint( *(double*)((uint8*)L$1 + 8ll) )) ^ ((int64)__builtin_nearbyint( *(double*)((uint8*)R$1 + 8ll) )))) == 0ll ) goto label$167;
 {
  fb$result$1 = -1ll;
  goto label$165;
  label$167:;
 }
 fb$result$1 = 0ll;
 goto label$165;
 label$165:;
 return fb$result$1;
}

struct $9_FLOAT128* _ZplR9_FLOAT128d( struct $9_FLOAT128* tmp$137$1, struct $9_FLOAT128* L$1, double R$1 )
{
 label$168:;
 _ZN9_FLOAT128C1Edddd( tmp$137$1, *(double*)L$1 + R$1, *(double*)((uint8*)L$1 + 8ll) + R$1, *(double*)L$1 + R$1, *(double*)((uint8*)L$1 + 8ll) + R$1 );
 goto label$169;
 label$169:;
 return tmp$137$1;
}

struct $9_FLOAT128* _ZpldR9_FLOAT128( struct $9_FLOAT128* tmp$139$1, double L$1, struct $9_FLOAT128* R$1 )
{
 label$170:;
 _ZN9_FLOAT128C1Edddd( tmp$139$1, *(double*)R$1 + L$1, *(double*)((uint8*)R$1 + 8ll) + L$1, *(double*)R$1 + L$1, *(double*)((uint8*)R$1 + 8ll) + L$1 );
 goto label$171;
 label$171:;
 return tmp$139$1;
}

struct $9_FLOAT128* _ZmiR9_FLOAT128d( struct $9_FLOAT128* tmp$141$1, struct $9_FLOAT128* L$1, double R$1 )
{
 label$172:;
 _ZN9_FLOAT128C1Edddd( tmp$141$1, *(double*)L$1 - R$1, *(double*)((uint8*)L$1 + 8ll) - R$1, *(double*)L$1 - R$1, *(double*)((uint8*)L$1 + 8ll) - R$1 );
 goto label$173;
 label$173:;
 return tmp$141$1;
}

struct $9_FLOAT128* _ZmidR9_FLOAT128( struct $9_FLOAT128* tmp$143$1, double L$1, struct $9_FLOAT128* R$1 )
{
 label$174:;
 _ZN9_FLOAT128C1Edddd( tmp$143$1, *(double*)R$1 - L$1, *(double*)((uint8*)R$1 + 8ll) - L$1, *(double*)R$1 - L$1, *(double*)((uint8*)R$1 + 8ll) - L$1 );
 goto label$175;
 label$175:;
 return tmp$143$1;
}

struct $9_FLOAT128* _ZmlR9_FLOAT128d( struct $9_FLOAT128* tmp$145$1, struct $9_FLOAT128* L$1, double R$1 )
{
 label$176:;
 _ZN9_FLOAT128C1Edddd( tmp$145$1, *(double*)L$1 * R$1, *(double*)((uint8*)L$1 + 8ll) * R$1, *(double*)L$1 * R$1, *(double*)((uint8*)L$1 + 8ll) * R$1 );
 goto label$177;
 label$177:;
 return tmp$145$1;
}

struct $9_FLOAT128* _ZmldR9_FLOAT128( struct $9_FLOAT128* tmp$147$1, double L$1, struct $9_FLOAT128* R$1 )
{
 label$178:;
 _ZN9_FLOAT128C1Edddd( tmp$147$1, L$1 * *(double*)R$1, L$1 * *(double*)((uint8*)R$1 + 8ll), L$1 * *(double*)R$1, L$1 * *(double*)((uint8*)R$1 + 8ll) );
 goto label$179;
 label$179:;
 return tmp$147$1;
}

void _ZN9_FLOAT256C1Ev( struct $9_FLOAT256* THIS$1 )
{
 label$180:;
 __builtin_memset( (int64*)THIS$1, 0, 8ll );
 *(double*)THIS$1 = 0x1.p+0;
 label$181:;
}

void _ZN9_FLOAT256C1Edd( struct $9_FLOAT256* THIS$1, double PXYZ$1, double PW$1 )
{
 label$182:;
 __builtin_memset( (int64*)THIS$1, 0, 8ll );
 *(double*)THIS$1 = PXYZ$1;
 *(double*)THIS$1 = PXYZ$1;
 *(double*)THIS$1 = PXYZ$1;
 *(double*)THIS$1 = PW$1;
 label$183:;
}

void _ZN9_FLOAT256C1Edddd( struct $9_FLOAT256* THIS$1, double PX$1, double PY$1, double PZ$1, double PW$1 )
{
 label$184:;
 __builtin_memset( (int64*)THIS$1, 0, 8ll );
 *(double*)THIS$1 = PX$1;
 *(double*)THIS$1 = PY$1;
 *(double*)THIS$1 = PZ$1;
 *(double*)THIS$1 = PW$1;
 label$185:;
}

void _ZN9_FLOAT256C1ERS_dd( struct $9_FLOAT256* THIS$1, struct $9_FLOAT256* V1$1, double PZ$1, double PW$1 )
{
 label$186:;
 __builtin_memset( (int64*)THIS$1, 0, 8ll );
 *(double*)THIS$1 = *(double*)V1$1;
 *(double*)THIS$1 = *(double*)V1$1;
 *(double*)THIS$1 = PZ$1;
 *(double*)THIS$1 = PW$1;
 label$187:;
}

void _ZN9_FLOAT256C1ERS_S0_( struct $9_FLOAT256* THIS$1, struct $9_FLOAT256* V1$1, struct $9_FLOAT256* V2$1 )
{
 label$188:;
 __builtin_memset( (int64*)THIS$1, 0, 8ll );
 *(double*)THIS$1 = *(double*)V1$1;
 *(double*)THIS$1 = *(double*)V1$1;
 *(double*)THIS$1 = *(double*)V2$1;
 *(double*)THIS$1 = *(double*)V2$1;
 label$189:;
}

void _ZN9_FLOAT256C1ERS_d( struct $9_FLOAT256* THIS$1, struct $9_FLOAT256* V3$1, double PW$1 )
{
 label$190:;
 __builtin_memset( (int64*)THIS$1, 0, 8ll );
 *(double*)THIS$1 = *(double*)V3$1;
 *(double*)THIS$1 = *(double*)V3$1;
 *(double*)THIS$1 = *(double*)V3$1;
 *(double*)THIS$1 = PW$1;
 label$191:;
}

void _ZN9_FLOAT256C1EdRS_( struct $9_FLOAT256* THIS$1, double PX$1, struct $9_FLOAT256* V3$1 )
{
 label$192:;
 __builtin_memset( (int64*)THIS$1, 0, 8ll );
 *(double*)THIS$1 = PX$1;
 *(double*)THIS$1 = *(double*)V3$1;
 *(double*)THIS$1 = *(double*)V3$1;
 *(double*)THIS$1 = *(double*)V3$1;
 label$193:;
}

void _ZN9_FLOAT256C1ERS_( struct $9_FLOAT256* THIS$1, struct $9_FLOAT256* V4$1 )
{
 label$194:;
 __builtin_memset( (int64*)THIS$1, 0, 8ll );
 *(double*)THIS$1 = *(double*)V4$1;
 *(double*)THIS$1 = *(double*)V4$1;
 *(double*)THIS$1 = *(double*)V4$1;
 *(double*)THIS$1 = *(double*)V4$1;
 label$195:;
}

void _ZN9_FLOAT256aSEd( struct $9_FLOAT256* THIS$1, double PXYZW$1 )
{
 label$196:;
 *(double*)THIS$1 = PXYZW$1;
 *(double*)THIS$1 = PXYZW$1;
 *(double*)THIS$1 = PXYZW$1;
 *(double*)THIS$1 = PXYZW$1;
 label$197:;
}

void _ZN9_FLOAT256aSEf( struct $9_FLOAT256* THIS$1, float P$1 )
{
 label$198:;
 *(double*)THIS$1 = (double)P$1;
 *(double*)THIS$1 = (double)P$1;
 *(double*)THIS$1 = 0x1.p+0;
 *(double*)THIS$1 = 0x1.p+0;
 label$199:;
}

void _ZN9_FLOAT256aSEy( struct $9_FLOAT256* THIS$1, uint64 P$1 )
{
 label$200:;
 *(double*)THIS$1 = (double)P$1;
 *(double*)THIS$1 = (double)P$1;
 *(double*)THIS$1 = (double)P$1;
 *(double*)THIS$1 = 0x1.p+0;
 label$201:;
}

void _ZN9_FLOAT256aSERS_( struct $9_FLOAT256* THIS$1, struct $9_FLOAT256* P$1 )
{
 label$202:;
 *(double*)THIS$1 = *(double*)P$1;
 *(double*)THIS$1 = *(double*)P$1;
 *(double*)THIS$1 = *(double*)P$1;
 *(double*)THIS$1 = *(double*)P$1;
 label$203:;
}

FBSTRING* _ZN9_FLOAT256cv8FBSTRINGEv( struct $9_FLOAT256* THIS$1 )
{
 FBSTRING TMP$158$1;
 FBSTRING TMP$159$1;
 FBSTRING TMP$160$1;
 FBSTRING TMP$161$1;
 FBSTRING TMP$162$1;
 FBSTRING TMP$163$1;
 FBSTRING TMP$164$1;
 FBSTRING TMP$165$1;
 FBSTRING fb$result$1;
 __builtin_memset( &fb$result$1, 0, 24ll );
 label$204:;
 FBSTRING* vr$2 = fb_DoubleToStr( *(double*)THIS$1 );
 FBSTRING* vr$4 = fb_DoubleToStr( *(double*)THIS$1 );
 FBSTRING* vr$6 = fb_DoubleToStr( *(double*)THIS$1 );
 FBSTRING* vr$8 = fb_DoubleToStr( *(double*)THIS$1 );
 __builtin_memset( &TMP$158$1, 0, 24ll );
 FBSTRING* vr$11 = fb_StrConcat( &TMP$158$1, (void*)"(", 2ll, (void*)vr$8, -1ll );
 __builtin_memset( &TMP$159$1, 0, 24ll );
 FBSTRING* vr$14 = fb_StrConcat( &TMP$159$1, (void*)vr$11, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$160$1, 0, 24ll );
 FBSTRING* vr$17 = fb_StrConcat( &TMP$160$1, (void*)vr$14, -1ll, (void*)vr$6, -1ll );
 __builtin_memset( &TMP$161$1, 0, 24ll );
 FBSTRING* vr$20 = fb_StrConcat( &TMP$161$1, (void*)vr$17, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$162$1, 0, 24ll );
 FBSTRING* vr$23 = fb_StrConcat( &TMP$162$1, (void*)vr$20, -1ll, (void*)vr$4, -1ll );
 __builtin_memset( &TMP$163$1, 0, 24ll );
 FBSTRING* vr$26 = fb_StrConcat( &TMP$163$1, (void*)vr$23, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$164$1, 0, 24ll );
 FBSTRING* vr$29 = fb_StrConcat( &TMP$164$1, (void*)vr$26, -1ll, (void*)vr$2, -1ll );
 __builtin_memset( &TMP$165$1, 0, 24ll );
 FBSTRING* vr$32 = fb_StrConcat( &TMP$165$1, (void*)vr$29, -1ll, (void*)")", 2ll );
 fb_StrInit( (void*)&fb$result$1, -1ll, (void*)vr$32, -1ll, 0 );
 goto label$205;
 label$205:;
 FBSTRING* vr$35 = fb_StrAllocTempResult( (FBSTRING*)&fb$result$1 );
 return vr$35;
}

uint64 _ZN9_FLOAT256cvyEv( struct $9_FLOAT256* THIS$1 )
{
 uint64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$206:;
 uint64 C$1;
 __builtin_memset( &C$1, 0, 8ll );
 C$1 = C$1 << (8ll & 63ll);
 if( *(double*)THIS$1 >= 0x1.010101010101p-8 ) goto label$209;
 {
 }
 goto label$208;
 label$209:;
 if( *(double*)THIS$1 <= 0x1.p+0 ) goto label$210;
 {
  C$1 = C$1 | 255ull;
 }
 goto label$208;
 label$210:;
 {
  C$1 = C$1 | ((uint64)__builtin_nearbyint( *(double*)THIS$1 * 0x1.FEp+7 ));
 }
 label$208:;
 C$1 = C$1 << (8ll & 63ll);
 if( *(double*)THIS$1 >= 0x1.010101010101p-8 ) goto label$212;
 {
 }
 goto label$211;
 label$212:;
 if( *(double*)THIS$1 <= 0x1.p+0 ) goto label$213;
 {
  C$1 = C$1 | 255ull;
 }
 goto label$211;
 label$213:;
 {
  C$1 = C$1 | ((uint64)__builtin_nearbyint( *(double*)THIS$1 * 0x1.FEp+7 ));
 }
 label$211:;
 C$1 = C$1 << (8ll & 63ll);
 if( *(double*)THIS$1 >= 0x1.010101010101p-8 ) goto label$215;
 {
 }
 goto label$214;
 label$215:;
 if( *(double*)THIS$1 <= 0x1.p+0 ) goto label$216;
 {
  C$1 = C$1 | 255ull;
 }
 goto label$214;
 label$216:;
 {
  C$1 = C$1 | ((uint64)__builtin_nearbyint( *(double*)THIS$1 * 0x1.FEp+7 ));
 }
 label$214:;
 C$1 = C$1 << (8ll & 63ll);
 if( *(double*)THIS$1 >= 0x1.010101010101p-8 ) goto label$218;
 {
 }
 goto label$217;
 label$218:;
 if( *(double*)THIS$1 <= 0x1.p+0 ) goto label$219;
 {
  C$1 = C$1 | 255ull;
 }
 goto label$217;
 label$219:;
 {
  C$1 = C$1 | ((uint64)__builtin_nearbyint( *(double*)THIS$1 * 0x1.FEp+7 ));
 }
 label$217:;
 fb$result$1 = C$1;
 goto label$207;
 label$207:;
 return fb$result$1;
}

void _ZN9_FLOAT256pLEf( struct $9_FLOAT256* THIS$1, float V$1 )
{
 label$220:;
 *(double*)THIS$1 = *(double*)THIS$1 + (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 + (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 + (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 + (double)V$1;
 label$221:;
}

void _ZN9_FLOAT256mIEf( struct $9_FLOAT256* THIS$1, float V$1 )
{
 label$222:;
 *(double*)THIS$1 = *(double*)THIS$1 - (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 - (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 - (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 - (double)V$1;
 label$223:;
}

void _ZN9_FLOAT256mLEf( struct $9_FLOAT256* THIS$1, float V$1 )
{
 label$224:;
 *(double*)THIS$1 = *(double*)THIS$1 * (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 * (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 * (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 * (double)V$1;
 label$225:;
}

void _ZN9_FLOAT256dVEf( struct $9_FLOAT256* THIS$1, float V$1 )
{
 label$226:;
 *(double*)THIS$1 = *(double*)THIS$1 / (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 / (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 / (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 / (double)V$1;
 label$227:;
}

void _ZN9_FLOAT256pLEd( struct $9_FLOAT256* THIS$1, double V$1 )
{
 label$228:;
 *(double*)THIS$1 = *(double*)THIS$1 + V$1;
 *(double*)THIS$1 = *(double*)THIS$1 + V$1;
 *(double*)THIS$1 = *(double*)THIS$1 + V$1;
 *(double*)THIS$1 = *(double*)THIS$1 + V$1;
 label$229:;
}

void _ZN9_FLOAT256mIEd( struct $9_FLOAT256* THIS$1, double V$1 )
{
 label$230:;
 *(double*)THIS$1 = *(double*)THIS$1 - V$1;
 *(double*)THIS$1 = *(double*)THIS$1 - V$1;
 *(double*)THIS$1 = *(double*)THIS$1 - V$1;
 *(double*)THIS$1 = *(double*)THIS$1 - V$1;
 label$231:;
}

void _ZN9_FLOAT256mLEd( struct $9_FLOAT256* THIS$1, double V$1 )
{
 label$232:;
 *(double*)THIS$1 = *(double*)THIS$1 * V$1;
 *(double*)THIS$1 = *(double*)THIS$1 * V$1;
 *(double*)THIS$1 = *(double*)THIS$1 * V$1;
 *(double*)THIS$1 = *(double*)THIS$1 * V$1;
 label$233:;
}

void _ZN9_FLOAT256dVEd( struct $9_FLOAT256* THIS$1, double V$1 )
{
 label$234:;
 *(double*)THIS$1 = *(double*)THIS$1 / V$1;
 *(double*)THIS$1 = *(double*)THIS$1 / V$1;
 *(double*)THIS$1 = *(double*)THIS$1 / V$1;
 *(double*)THIS$1 = *(double*)THIS$1 / V$1;
 label$235:;
}

void _ZN9_FLOAT256pLEy( struct $9_FLOAT256* THIS$1, uint64 V$1 )
{
 label$236:;
 *(double*)THIS$1 = *(double*)THIS$1 + (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 + (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 + (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 + (double)V$1;
 label$237:;
}

void _ZN9_FLOAT256mIEy( struct $9_FLOAT256* THIS$1, uint64 V$1 )
{
 label$238:;
 *(double*)THIS$1 = *(double*)THIS$1 - (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 - (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 - (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 - (double)V$1;
 label$239:;
}

void _ZN9_FLOAT256mLEy( struct $9_FLOAT256* THIS$1, uint64 V$1 )
{
 label$240:;
 *(double*)THIS$1 = *(double*)THIS$1 * (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 * (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 * (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 * (double)V$1;
 label$241:;
}

void _ZN9_FLOAT256dVEy( struct $9_FLOAT256* THIS$1, uint64 V$1 )
{
 label$242:;
 *(double*)THIS$1 = *(double*)THIS$1 / (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 / (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 / (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 / (double)V$1;
 label$243:;
}

void _ZN9_FLOAT256pLERS_( struct $9_FLOAT256* THIS$1, struct $9_FLOAT256* V4$1 )
{
 label$244:;
 *(double*)THIS$1 = *(double*)THIS$1 + *(double*)V4$1;
 *(double*)THIS$1 = *(double*)THIS$1 + *(double*)V4$1;
 *(double*)THIS$1 = *(double*)THIS$1 + *(double*)V4$1;
 *(double*)THIS$1 = *(double*)THIS$1 + *(double*)V4$1;
 label$245:;
}

void _ZN9_FLOAT256mIERS_( struct $9_FLOAT256* THIS$1, struct $9_FLOAT256* V4$1 )
{
 label$246:;
 *(double*)THIS$1 = *(double*)THIS$1 - *(double*)V4$1;
 *(double*)THIS$1 = *(double*)THIS$1 - *(double*)V4$1;
 *(double*)THIS$1 = *(double*)THIS$1 - *(double*)V4$1;
 *(double*)THIS$1 = *(double*)THIS$1 - *(double*)V4$1;
 label$247:;
}

void _ZN9_FLOAT256mLERS_( struct $9_FLOAT256* THIS$1, struct $9_FLOAT256* V4$1 )
{
 label$248:;
 *(double*)THIS$1 = *(double*)THIS$1 * *(double*)V4$1;
 *(double*)THIS$1 = *(double*)THIS$1 * *(double*)V4$1;
 *(double*)THIS$1 = *(double*)THIS$1 * *(double*)V4$1;
 *(double*)THIS$1 = *(double*)THIS$1 * *(double*)V4$1;
 label$249:;
}

void _ZN9_FLOAT256dVERS_( struct $9_FLOAT256* THIS$1, struct $9_FLOAT256* V4$1 )
{
 label$250:;
 *(double*)THIS$1 = *(double*)THIS$1 / *(double*)V4$1;
 *(double*)THIS$1 = *(double*)THIS$1 / *(double*)V4$1;
 *(double*)THIS$1 = *(double*)THIS$1 / *(double*)V4$1;
 *(double*)THIS$1 = *(double*)THIS$1 / *(double*)V4$1;
 label$251:;
}

struct $9_FLOAT256* _ZN9_FLOAT2562XXEv( struct $9_FLOAT256* tmp$166$1, struct $9_FLOAT256* THIS$1 )
{
 label$252:;
 _ZN9_FLOAT256C1Edd( tmp$166$1, *(double*)THIS$1, *(double*)THIS$1 );
 goto label$253;
 label$253:;
 return tmp$166$1;
}

struct $9_FLOAT256* _ZN9_FLOAT2562XYEv( struct $9_FLOAT256* tmp$168$1, struct $9_FLOAT256* THIS$1 )
{
 label$254:;
 _ZN9_FLOAT256C1Edd( tmp$168$1, *(double*)THIS$1, *(double*)THIS$1 );
 goto label$255;
 label$255:;
 return tmp$168$1;
}

struct $9_FLOAT256* _ZN9_FLOAT2562XZEv( struct $9_FLOAT256* tmp$170$1, struct $9_FLOAT256* THIS$1 )
{
 label$256:;
 _ZN9_FLOAT256C1Edd( tmp$170$1, *(double*)THIS$1, *(double*)THIS$1 );
 goto label$257;
 label$257:;
 return tmp$170$1;
}

struct $9_FLOAT256* _ZN9_FLOAT2562YXEv( struct $9_FLOAT256* tmp$172$1, struct $9_FLOAT256* THIS$1 )
{
 label$258:;
 _ZN9_FLOAT256C1Edd( tmp$172$1, *(double*)THIS$1, *(double*)THIS$1 );
 goto label$259;
 label$259:;
 return tmp$172$1;
}

struct $9_FLOAT256* _ZN9_FLOAT2562YYEv( struct $9_FLOAT256* tmp$174$1, struct $9_FLOAT256* THIS$1 )
{
 label$260:;
 _ZN9_FLOAT256C1Edd( tmp$174$1, *(double*)THIS$1, *(double*)THIS$1 );
 goto label$261;
 label$261:;
 return tmp$174$1;
}

struct $9_FLOAT256* _ZN9_FLOAT2562YZEv( struct $9_FLOAT256* tmp$176$1, struct $9_FLOAT256* THIS$1 )
{
 label$262:;
 _ZN9_FLOAT256C1Edd( tmp$176$1, *(double*)THIS$1, *(double*)THIS$1 );
 goto label$263;
 label$263:;
 return tmp$176$1;
}

struct $9_FLOAT256* _ZN9_FLOAT2562ZXEv( struct $9_FLOAT256* tmp$178$1, struct $9_FLOAT256* THIS$1 )
{
 label$264:;
 _ZN9_FLOAT256C1Edd( tmp$178$1, *(double*)THIS$1, *(double*)THIS$1 );
 goto label$265;
 label$265:;
 return tmp$178$1;
}

struct $9_FLOAT256* _ZN9_FLOAT2562ZYEv( struct $9_FLOAT256* tmp$180$1, struct $9_FLOAT256* THIS$1 )
{
 label$266:;
 _ZN9_FLOAT256C1Edd( tmp$180$1, *(double*)THIS$1, *(double*)THIS$1 );
 goto label$267;
 label$267:;
 return tmp$180$1;
}

struct $9_FLOAT256* _ZN9_FLOAT2562ZZEv( struct $9_FLOAT256* tmp$182$1, struct $9_FLOAT256* THIS$1 )
{
 label$268:;
 _ZN9_FLOAT256C1Edd( tmp$182$1, *(double*)THIS$1, *(double*)THIS$1 );
 goto label$269;
 label$269:;
 return tmp$182$1;
}

struct $9_FLOAT256* _ZN9_FLOAT2563XXXEv( struct $9_FLOAT256* tmp$184$1, struct $9_FLOAT256* THIS$1 )
{
 label$270:;
 _ZN9_FLOAT256C1Edddd( tmp$184$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$271;
 label$271:;
 return tmp$184$1;
}

struct $9_FLOAT256* _ZN9_FLOAT2563XXYEv( struct $9_FLOAT256* tmp$186$1, struct $9_FLOAT256* THIS$1 )
{
 label$272:;
 _ZN9_FLOAT256C1Edddd( tmp$186$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$273;
 label$273:;
 return tmp$186$1;
}

struct $9_FLOAT256* _ZN9_FLOAT2563XXZEv( struct $9_FLOAT256* tmp$188$1, struct $9_FLOAT256* THIS$1 )
{
 label$274:;
 _ZN9_FLOAT256C1Edddd( tmp$188$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$275;
 label$275:;
 return tmp$188$1;
}

struct $9_FLOAT256* _ZN9_FLOAT2563XYXEv( struct $9_FLOAT256* tmp$190$1, struct $9_FLOAT256* THIS$1 )
{
 label$276:;
 _ZN9_FLOAT256C1Edddd( tmp$190$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$277;
 label$277:;
 return tmp$190$1;
}

struct $9_FLOAT256* _ZN9_FLOAT2563XYYEv( struct $9_FLOAT256* tmp$192$1, struct $9_FLOAT256* THIS$1 )
{
 label$278:;
 _ZN9_FLOAT256C1Edddd( tmp$192$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$279;
 label$279:;
 return tmp$192$1;
}

struct $9_FLOAT256* _ZN9_FLOAT2563XYZEv( struct $9_FLOAT256* tmp$194$1, struct $9_FLOAT256* THIS$1 )
{
 label$280:;
 _ZN9_FLOAT256C1Edddd( tmp$194$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$281;
 label$281:;
 return tmp$194$1;
}

struct $9_FLOAT256* _ZN9_FLOAT2563XZXEv( struct $9_FLOAT256* tmp$196$1, struct $9_FLOAT256* THIS$1 )
{
 label$282:;
 _ZN9_FLOAT256C1Edddd( tmp$196$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$283;
 label$283:;
 return tmp$196$1;
}

struct $9_FLOAT256* _ZN9_FLOAT2563XZYEv( struct $9_FLOAT256* tmp$198$1, struct $9_FLOAT256* THIS$1 )
{
 label$284:;
 _ZN9_FLOAT256C1Edddd( tmp$198$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$285;
 label$285:;
 return tmp$198$1;
}

struct $9_FLOAT256* _ZN9_FLOAT2563XZZEv( struct $9_FLOAT256* tmp$200$1, struct $9_FLOAT256* THIS$1 )
{
 label$286:;
 _ZN9_FLOAT256C1Edddd( tmp$200$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$287;
 label$287:;
 return tmp$200$1;
}

struct $9_FLOAT256* _ZN9_FLOAT2563YXXEv( struct $9_FLOAT256* tmp$202$1, struct $9_FLOAT256* THIS$1 )
{
 label$288:;
 _ZN9_FLOAT256C1Edddd( tmp$202$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$289;
 label$289:;
 return tmp$202$1;
}

struct $9_FLOAT256* _ZN9_FLOAT2563YXYEv( struct $9_FLOAT256* tmp$204$1, struct $9_FLOAT256* THIS$1 )
{
 label$290:;
 _ZN9_FLOAT256C1Edddd( tmp$204$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$291;
 label$291:;
 return tmp$204$1;
}

struct $9_FLOAT256* _ZN9_FLOAT2563YXZEv( struct $9_FLOAT256* tmp$206$1, struct $9_FLOAT256* THIS$1 )
{
 label$292:;
 _ZN9_FLOAT256C1Edddd( tmp$206$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$293;
 label$293:;
 return tmp$206$1;
}

struct $9_FLOAT256* _ZN9_FLOAT2563YYXEv( struct $9_FLOAT256* tmp$208$1, struct $9_FLOAT256* THIS$1 )
{
 label$294:;
 _ZN9_FLOAT256C1Edddd( tmp$208$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$295;
 label$295:;
 return tmp$208$1;
}

struct $9_FLOAT256* _ZN9_FLOAT2563YYYEv( struct $9_FLOAT256* tmp$210$1, struct $9_FLOAT256* THIS$1 )
{
 label$296:;
 _ZN9_FLOAT256C1Edddd( tmp$210$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$297;
 label$297:;
 return tmp$210$1;
}

struct $9_FLOAT256* _ZN9_FLOAT2563YYZEv( struct $9_FLOAT256* tmp$212$1, struct $9_FLOAT256* THIS$1 )
{
 label$298:;
 _ZN9_FLOAT256C1Edddd( tmp$212$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$299;
 label$299:;
 return tmp$212$1;
}

struct $9_FLOAT256* _ZN9_FLOAT2563YZXEv( struct $9_FLOAT256* tmp$214$1, struct $9_FLOAT256* THIS$1 )
{
 label$300:;
 _ZN9_FLOAT256C1Edddd( tmp$214$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$301;
 label$301:;
 return tmp$214$1;
}

struct $9_FLOAT256* _ZN9_FLOAT2563YZYEv( struct $9_FLOAT256* tmp$216$1, struct $9_FLOAT256* THIS$1 )
{
 label$302:;
 _ZN9_FLOAT256C1Edddd( tmp$216$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$303;
 label$303:;
 return tmp$216$1;
}

struct $9_FLOAT256* _ZN9_FLOAT2563YZZEv( struct $9_FLOAT256* tmp$218$1, struct $9_FLOAT256* THIS$1 )
{
 label$304:;
 _ZN9_FLOAT256C1Edddd( tmp$218$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$305;
 label$305:;
 return tmp$218$1;
}

struct $9_FLOAT256* _ZN9_FLOAT2563ZXXEv( struct $9_FLOAT256* tmp$220$1, struct $9_FLOAT256* THIS$1 )
{
 label$306:;
 _ZN9_FLOAT256C1Edddd( tmp$220$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$307;
 label$307:;
 return tmp$220$1;
}

struct $9_FLOAT256* _ZN9_FLOAT2563ZXYEv( struct $9_FLOAT256* tmp$222$1, struct $9_FLOAT256* THIS$1 )
{
 label$308:;
 _ZN9_FLOAT256C1Edddd( tmp$222$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$309;
 label$309:;
 return tmp$222$1;
}

struct $9_FLOAT256* _ZN9_FLOAT2563ZXZEv( struct $9_FLOAT256* tmp$224$1, struct $9_FLOAT256* THIS$1 )
{
 label$310:;
 _ZN9_FLOAT256C1Edddd( tmp$224$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$311;
 label$311:;
 return tmp$224$1;
}

struct $9_FLOAT256* _ZN9_FLOAT2563ZYXEv( struct $9_FLOAT256* tmp$226$1, struct $9_FLOAT256* THIS$1 )
{
 label$312:;
 _ZN9_FLOAT256C1Edddd( tmp$226$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$313;
 label$313:;
 return tmp$226$1;
}

struct $9_FLOAT256* _ZN9_FLOAT2563ZYYEv( struct $9_FLOAT256* tmp$228$1, struct $9_FLOAT256* THIS$1 )
{
 label$314:;
 _ZN9_FLOAT256C1Edddd( tmp$228$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$315;
 label$315:;
 return tmp$228$1;
}

struct $9_FLOAT256* _ZN9_FLOAT2563ZYZEv( struct $9_FLOAT256* tmp$230$1, struct $9_FLOAT256* THIS$1 )
{
 label$316:;
 _ZN9_FLOAT256C1Edddd( tmp$230$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$317;
 label$317:;
 return tmp$230$1;
}

struct $9_FLOAT256* _ZN9_FLOAT2563ZZXEv( struct $9_FLOAT256* tmp$232$1, struct $9_FLOAT256* THIS$1 )
{
 label$318:;
 _ZN9_FLOAT256C1Edddd( tmp$232$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$319;
 label$319:;
 return tmp$232$1;
}

struct $9_FLOAT256* _ZN9_FLOAT2563ZZYEv( struct $9_FLOAT256* tmp$234$1, struct $9_FLOAT256* THIS$1 )
{
 label$320:;
 _ZN9_FLOAT256C1Edddd( tmp$234$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$321;
 label$321:;
 return tmp$234$1;
}

struct $9_FLOAT256* _ZN9_FLOAT2563ZZZEv( struct $9_FLOAT256* tmp$236$1, struct $9_FLOAT256* THIS$1 )
{
 label$322:;
 _ZN9_FLOAT256C1Edddd( tmp$236$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$323;
 label$323:;
 return tmp$236$1;
}

struct $9_FLOAT256* _ZN9_FLOAT2563RGBEv( struct $9_FLOAT256* tmp$238$1, struct $9_FLOAT256* THIS$1 )
{
 label$324:;
 _ZN9_FLOAT256C1Edddd( tmp$238$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$325;
 label$325:;
 return tmp$238$1;
}

struct $9_FLOAT256* _ZN9_FLOAT2564RGBAEv( struct $9_FLOAT256* tmp$240$1, struct $9_FLOAT256* THIS$1 )
{
 label$326:;
 _ZN9_FLOAT256C1Edddd( tmp$240$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1 );
 goto label$327;
 label$327:;
 return tmp$240$1;
}

struct $9_FLOAT256* _ZngR9_FLOAT256( struct $9_FLOAT256* tmp$242$1, struct $9_FLOAT256* L$1 )
{
 label$328:;
 _ZN9_FLOAT256C1Edddd( tmp$242$1, -(*(double*)L$1), -(*(double*)L$1), -(*(double*)L$1), -(*(double*)L$1) );
 goto label$329;
 label$329:;
 return tmp$242$1;
}

struct $9_FLOAT256* _ZplR9_FLOAT256S0_( struct $9_FLOAT256* tmp$244$1, struct $9_FLOAT256* L$1, struct $9_FLOAT256* R$1 )
{
 label$330:;
 _ZN9_FLOAT256C1Edddd( tmp$244$1, *(double*)L$1 + *(double*)R$1, *(double*)L$1 + *(double*)R$1, *(double*)L$1 + *(double*)R$1, *(double*)L$1 + *(double*)R$1 );
 goto label$331;
 label$331:;
 return tmp$244$1;
}

struct $9_FLOAT256* _ZmiR9_FLOAT256S0_( struct $9_FLOAT256* tmp$246$1, struct $9_FLOAT256* L$1, struct $9_FLOAT256* R$1 )
{
 label$332:;
 _ZN9_FLOAT256C1Edddd( tmp$246$1, *(double*)L$1 - *(double*)R$1, *(double*)L$1 - *(double*)R$1, *(double*)L$1 - *(double*)R$1, *(double*)L$1 - *(double*)R$1 );
 goto label$333;
 label$333:;
 return tmp$246$1;
}

struct $9_FLOAT256* _ZmlR9_FLOAT256S0_( struct $9_FLOAT256* tmp$248$1, struct $9_FLOAT256* L$1, struct $9_FLOAT256* R$1 )
{
 label$334:;
 _ZN9_FLOAT256C1Edddd( tmp$248$1, *(double*)L$1 * *(double*)R$1, *(double*)L$1 * *(double*)R$1, *(double*)L$1 * *(double*)R$1, *(double*)L$1 * *(double*)R$1 );
 goto label$335;
 label$335:;
 return tmp$248$1;
}

struct $9_FLOAT256* _ZdvR9_FLOAT256S0_( struct $9_FLOAT256* tmp$250$1, struct $9_FLOAT256* L$1, struct $9_FLOAT256* R$1 )
{
 label$336:;
 _ZN9_FLOAT256C1Edddd( tmp$250$1, *(double*)L$1 / *(double*)R$1, *(double*)L$1 / *(double*)R$1, *(double*)L$1 / *(double*)R$1, *(double*)L$1 / *(double*)R$1 );
 goto label$337;
 label$337:;
 return tmp$250$1;
}

int64 _ZeqR9_FLOAT256S0_( struct $9_FLOAT256* L$1, struct $9_FLOAT256* R$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$338:;
 if( ((((int64)__builtin_nearbyint( *(double*)L$1 )) ^ ((int64)__builtin_nearbyint( *(double*)R$1 ))) | (((int64)__builtin_nearbyint( *(double*)L$1 )) ^ ((int64)__builtin_nearbyint( *(double*)R$1 )))) == 0ll ) goto label$341;
 {
  fb$result$1 = 0ll;
  goto label$339;
  label$341:;
 }
 fb$result$1 = -1ll;
 goto label$339;
 label$339:;
 return fb$result$1;
}

int64 _ZneR9_FLOAT256S0_( struct $9_FLOAT256* L$1, struct $9_FLOAT256* R$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$342:;
 if( ((((int64)__builtin_nearbyint( *(double*)L$1 )) ^ ((int64)__builtin_nearbyint( *(double*)R$1 ))) | (((int64)__builtin_nearbyint( *(double*)L$1 )) ^ ((int64)__builtin_nearbyint( *(double*)R$1 )))) == 0ll ) goto label$345;
 {
  fb$result$1 = -1ll;
  goto label$343;
  label$345:;
 }
 fb$result$1 = 0ll;
 goto label$343;
 label$343:;
 return fb$result$1;
}

struct $9_FLOAT256* _ZplR9_FLOAT256d( struct $9_FLOAT256* tmp$252$1, struct $9_FLOAT256* L$1, double R$1 )
{
 label$346:;
 _ZN9_FLOAT256C1Edddd( tmp$252$1, *(double*)L$1 + R$1, *(double*)L$1 + R$1, *(double*)L$1 + R$1, *(double*)L$1 + R$1 );
 goto label$347;
 label$347:;
 return tmp$252$1;
}

struct $9_FLOAT256* _ZpldR9_FLOAT256( struct $9_FLOAT256* tmp$254$1, double L$1, struct $9_FLOAT256* R$1 )
{
 label$348:;
 _ZN9_FLOAT256C1Edddd( tmp$254$1, *(double*)R$1 + L$1, *(double*)R$1 + L$1, *(double*)R$1 + L$1, *(double*)R$1 + L$1 );
 goto label$349;
 label$349:;
 return tmp$254$1;
}

struct $9_FLOAT256* _ZmiR9_FLOAT256d( struct $9_FLOAT256* tmp$256$1, struct $9_FLOAT256* L$1, double R$1 )
{
 label$350:;
 _ZN9_FLOAT256C1Edddd( tmp$256$1, *(double*)L$1 - R$1, *(double*)L$1 - R$1, *(double*)L$1 - R$1, *(double*)L$1 - R$1 );
 goto label$351;
 label$351:;
 return tmp$256$1;
}

struct $9_FLOAT256* _ZmidR9_FLOAT256( struct $9_FLOAT256* tmp$258$1, double L$1, struct $9_FLOAT256* R$1 )
{
 label$352:;
 _ZN9_FLOAT256C1Edddd( tmp$258$1, *(double*)R$1 - L$1, *(double*)R$1 - L$1, *(double*)R$1 - L$1, *(double*)R$1 - L$1 );
 goto label$353;
 label$353:;
 return tmp$258$1;
}

struct $9_FLOAT256* _ZmlR9_FLOAT256d( struct $9_FLOAT256* tmp$260$1, struct $9_FLOAT256* L$1, double R$1 )
{
 label$354:;
 _ZN9_FLOAT256C1Edddd( tmp$260$1, *(double*)L$1 * R$1, *(double*)L$1 * R$1, *(double*)L$1 * R$1, *(double*)L$1 * R$1 );
 goto label$355;
 label$355:;
 return tmp$260$1;
}

struct $9_FLOAT256* _ZmldR9_FLOAT256( struct $9_FLOAT256* tmp$262$1, double L$1, struct $9_FLOAT256* R$1 )
{
 label$356:;
 _ZN9_FLOAT256C1Edddd( tmp$262$1, L$1 * *(double*)R$1, L$1 * *(double*)R$1, L$1 * *(double*)R$1, L$1 * *(double*)R$1 );
 goto label$357;
 label$357:;
 return tmp$262$1;
}

void _ZN9_FLOAT512C1Ev( struct $9_FLOAT512* THIS$1 )
{
 label$358:;
 __builtin_memset( (int64*)THIS$1, 0, 8ll );
 *(double*)THIS$1 = 0x1.p+0;
 label$359:;
}

void _ZN9_FLOAT512C1Edd( struct $9_FLOAT512* THIS$1, double PXYZ$1, double PW$1 )
{
 label$360:;
 __builtin_memset( (int64*)THIS$1, 0, 8ll );
 *(double*)THIS$1 = PXYZ$1;
 *(double*)THIS$1 = PXYZ$1;
 *(double*)THIS$1 = PXYZ$1;
 *(double*)THIS$1 = PW$1;
 label$361:;
}

void _ZN9_FLOAT512C1Edddd( struct $9_FLOAT512* THIS$1, double PX$1, double PY$1, double PZ$1, double PW$1 )
{
 label$362:;
 __builtin_memset( (int64*)THIS$1, 0, 8ll );
 *(double*)THIS$1 = PX$1;
 *(double*)THIS$1 = PY$1;
 *(double*)THIS$1 = PZ$1;
 *(double*)THIS$1 = PW$1;
 label$363:;
}

void _ZN9_FLOAT512C1ERS_dd( struct $9_FLOAT512* THIS$1, struct $9_FLOAT512* V1$1, double PZ$1, double PW$1 )
{
 label$364:;
 __builtin_memset( (int64*)THIS$1, 0, 8ll );
 *(double*)THIS$1 = *(double*)V1$1;
 *(double*)THIS$1 = *(double*)V1$1;
 *(double*)THIS$1 = PZ$1;
 *(double*)THIS$1 = PW$1;
 label$365:;
}

void _ZN9_FLOAT512C1ERS_S0_( struct $9_FLOAT512* THIS$1, struct $9_FLOAT512* V1$1, struct $9_FLOAT512* V2$1 )
{
 label$366:;
 __builtin_memset( (int64*)THIS$1, 0, 8ll );
 *(double*)THIS$1 = *(double*)V1$1;
 *(double*)THIS$1 = *(double*)V1$1;
 *(double*)THIS$1 = *(double*)V2$1;
 *(double*)THIS$1 = *(double*)V2$1;
 label$367:;
}

void _ZN9_FLOAT512C1ERS_d( struct $9_FLOAT512* THIS$1, struct $9_FLOAT512* V3$1, double PW$1 )
{
 label$368:;
 __builtin_memset( (int64*)THIS$1, 0, 8ll );
 *(double*)THIS$1 = *(double*)V3$1;
 *(double*)THIS$1 = *(double*)V3$1;
 *(double*)THIS$1 = *(double*)V3$1;
 *(double*)THIS$1 = PW$1;
 label$369:;
}

void _ZN9_FLOAT512C1EdRS_( struct $9_FLOAT512* THIS$1, double PX$1, struct $9_FLOAT512* V3$1 )
{
 label$370:;
 __builtin_memset( (int64*)THIS$1, 0, 8ll );
 *(double*)THIS$1 = PX$1;
 *(double*)THIS$1 = *(double*)V3$1;
 *(double*)THIS$1 = *(double*)V3$1;
 *(double*)THIS$1 = *(double*)V3$1;
 label$371:;
}

void _ZN9_FLOAT512C1ERS_( struct $9_FLOAT512* THIS$1, struct $9_FLOAT512* V4$1 )
{
 label$372:;
 __builtin_memset( (int64*)THIS$1, 0, 8ll );
 *(double*)THIS$1 = *(double*)V4$1;
 *(double*)THIS$1 = *(double*)V4$1;
 *(double*)THIS$1 = *(double*)V4$1;
 *(double*)THIS$1 = *(double*)V4$1;
 label$373:;
}

void _ZN9_FLOAT512aSEd( struct $9_FLOAT512* THIS$1, double PXYZW$1 )
{
 label$374:;
 *(double*)THIS$1 = PXYZW$1;
 *(double*)THIS$1 = PXYZW$1;
 *(double*)THIS$1 = PXYZW$1;
 *(double*)THIS$1 = PXYZW$1;
 label$375:;
}

void _ZN9_FLOAT512aSEf( struct $9_FLOAT512* THIS$1, float P$1 )
{
 label$376:;
 *(double*)THIS$1 = (double)P$1;
 *(double*)THIS$1 = (double)P$1;
 *(double*)THIS$1 = 0x1.p+0;
 *(double*)THIS$1 = 0x1.p+0;
 label$377:;
}

void _ZN9_FLOAT512aSEy( struct $9_FLOAT512* THIS$1, uint64 P$1 )
{
 label$378:;
 *(double*)THIS$1 = (double)P$1;
 *(double*)THIS$1 = (double)P$1;
 *(double*)THIS$1 = (double)P$1;
 *(double*)THIS$1 = 0x1.p+0;
 label$379:;
}

void _ZN9_FLOAT512aSERS_( struct $9_FLOAT512* THIS$1, struct $9_FLOAT512* P$1 )
{
 label$380:;
 *(double*)THIS$1 = *(double*)P$1;
 *(double*)THIS$1 = *(double*)P$1;
 *(double*)THIS$1 = *(double*)P$1;
 *(double*)THIS$1 = *(double*)P$1;
 label$381:;
}

FBSTRING* _ZN9_FLOAT512cv8FBSTRINGEv( struct $9_FLOAT512* THIS$1 )
{
 FBSTRING TMP$281$1;
 FBSTRING TMP$282$1;
 FBSTRING TMP$283$1;
 FBSTRING TMP$284$1;
 FBSTRING TMP$285$1;
 FBSTRING TMP$286$1;
 FBSTRING TMP$287$1;
 FBSTRING TMP$288$1;
 FBSTRING fb$result$1;
 __builtin_memset( &fb$result$1, 0, 24ll );
 label$382:;
 FBSTRING* vr$2 = fb_DoubleToStr( *(double*)THIS$1 );
 FBSTRING* vr$4 = fb_DoubleToStr( *(double*)THIS$1 );
 FBSTRING* vr$6 = fb_DoubleToStr( *(double*)THIS$1 );
 FBSTRING* vr$8 = fb_DoubleToStr( *(double*)THIS$1 );
 __builtin_memset( &TMP$281$1, 0, 24ll );
 FBSTRING* vr$11 = fb_StrConcat( &TMP$281$1, (void*)"(", 2ll, (void*)vr$8, -1ll );
 __builtin_memset( &TMP$282$1, 0, 24ll );
 FBSTRING* vr$14 = fb_StrConcat( &TMP$282$1, (void*)vr$11, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$283$1, 0, 24ll );
 FBSTRING* vr$17 = fb_StrConcat( &TMP$283$1, (void*)vr$14, -1ll, (void*)vr$6, -1ll );
 __builtin_memset( &TMP$284$1, 0, 24ll );
 FBSTRING* vr$20 = fb_StrConcat( &TMP$284$1, (void*)vr$17, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$285$1, 0, 24ll );
 FBSTRING* vr$23 = fb_StrConcat( &TMP$285$1, (void*)vr$20, -1ll, (void*)vr$4, -1ll );
 __builtin_memset( &TMP$286$1, 0, 24ll );
 FBSTRING* vr$26 = fb_StrConcat( &TMP$286$1, (void*)vr$23, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$287$1, 0, 24ll );
 FBSTRING* vr$29 = fb_StrConcat( &TMP$287$1, (void*)vr$26, -1ll, (void*)vr$2, -1ll );
 __builtin_memset( &TMP$288$1, 0, 24ll );
 FBSTRING* vr$32 = fb_StrConcat( &TMP$288$1, (void*)vr$29, -1ll, (void*)")", 2ll );
 fb_StrInit( (void*)&fb$result$1, -1ll, (void*)vr$32, -1ll, 0 );
 goto label$383;
 label$383:;
 FBSTRING* vr$35 = fb_StrAllocTempResult( (FBSTRING*)&fb$result$1 );
 return vr$35;
}

uint64 _ZN9_FLOAT512cvyEv( struct $9_FLOAT512* THIS$1 )
{
 uint64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$384:;
 uint64 C$1;
 __builtin_memset( &C$1, 0, 8ll );
 C$1 = C$1 << (8ll & 63ll);
 if( *(double*)THIS$1 >= 0x1.010101010101p-8 ) goto label$387;
 {
 }
 goto label$386;
 label$387:;
 if( *(double*)THIS$1 <= 0x1.p+0 ) goto label$388;
 {
  C$1 = C$1 | 255ull;
 }
 goto label$386;
 label$388:;
 {
  C$1 = C$1 | ((uint64)__builtin_nearbyint( *(double*)THIS$1 * 0x1.FEp+7 ));
 }
 label$386:;
 C$1 = C$1 << (8ll & 63ll);
 if( *(double*)THIS$1 >= 0x1.010101010101p-8 ) goto label$390;
 {
 }
 goto label$389;
 label$390:;
 if( *(double*)THIS$1 <= 0x1.p+0 ) goto label$391;
 {
  C$1 = C$1 | 255ull;
 }
 goto label$389;
 label$391:;
 {
  C$1 = C$1 | ((uint64)__builtin_nearbyint( *(double*)THIS$1 * 0x1.FEp+7 ));
 }
 label$389:;
 C$1 = C$1 << (8ll & 63ll);
 if( *(double*)THIS$1 >= 0x1.010101010101p-8 ) goto label$393;
 {
 }
 goto label$392;
 label$393:;
 if( *(double*)THIS$1 <= 0x1.p+0 ) goto label$394;
 {
  C$1 = C$1 | 255ull;
 }
 goto label$392;
 label$394:;
 {
  C$1 = C$1 | ((uint64)__builtin_nearbyint( *(double*)THIS$1 * 0x1.FEp+7 ));
 }
 label$392:;
 C$1 = C$1 << (8ll & 63ll);
 if( *(double*)THIS$1 >= 0x1.010101010101p-8 ) goto label$396;
 {
 }
 goto label$395;
 label$396:;
 if( *(double*)THIS$1 <= 0x1.p+0 ) goto label$397;
 {
  C$1 = C$1 | 255ull;
 }
 goto label$395;
 label$397:;
 {
  C$1 = C$1 | ((uint64)__builtin_nearbyint( *(double*)THIS$1 * 0x1.FEp+7 ));
 }
 label$395:;
 fb$result$1 = C$1;
 goto label$385;
 label$385:;
 return fb$result$1;
}

void _ZN9_FLOAT512pLEf( struct $9_FLOAT512* THIS$1, float V$1 )
{
 label$398:;
 *(double*)THIS$1 = *(double*)THIS$1 + (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 + (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 + (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 + (double)V$1;
 label$399:;
}

void _ZN9_FLOAT512mIEf( struct $9_FLOAT512* THIS$1, float V$1 )
{
 label$400:;
 *(double*)THIS$1 = *(double*)THIS$1 - (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 - (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 - (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 - (double)V$1;
 label$401:;
}

void _ZN9_FLOAT512mLEf( struct $9_FLOAT512* THIS$1, float V$1 )
{
 label$402:;
 *(double*)THIS$1 = *(double*)THIS$1 * (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 * (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 * (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 * (double)V$1;
 label$403:;
}

void _ZN9_FLOAT512dVEf( struct $9_FLOAT512* THIS$1, float V$1 )
{
 label$404:;
 *(double*)THIS$1 = *(double*)THIS$1 / (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 / (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 / (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 / (double)V$1;
 label$405:;
}

void _ZN9_FLOAT512pLEd( struct $9_FLOAT512* THIS$1, double V$1 )
{
 label$406:;
 *(double*)THIS$1 = *(double*)THIS$1 + V$1;
 *(double*)THIS$1 = *(double*)THIS$1 + V$1;
 *(double*)THIS$1 = *(double*)THIS$1 + V$1;
 *(double*)THIS$1 = *(double*)THIS$1 + V$1;
 label$407:;
}

void _ZN9_FLOAT512mIEd( struct $9_FLOAT512* THIS$1, double V$1 )
{
 label$408:;
 *(double*)THIS$1 = *(double*)THIS$1 - V$1;
 *(double*)THIS$1 = *(double*)THIS$1 - V$1;
 *(double*)THIS$1 = *(double*)THIS$1 - V$1;
 *(double*)THIS$1 = *(double*)THIS$1 - V$1;
 label$409:;
}

void _ZN9_FLOAT512mLEd( struct $9_FLOAT512* THIS$1, double V$1 )
{
 label$410:;
 *(double*)THIS$1 = *(double*)THIS$1 * V$1;
 *(double*)THIS$1 = *(double*)THIS$1 * V$1;
 *(double*)THIS$1 = *(double*)THIS$1 * V$1;
 *(double*)THIS$1 = *(double*)THIS$1 * V$1;
 label$411:;
}

void _ZN9_FLOAT512dVEd( struct $9_FLOAT512* THIS$1, double V$1 )
{
 label$412:;
 *(double*)THIS$1 = *(double*)THIS$1 / V$1;
 *(double*)THIS$1 = *(double*)THIS$1 / V$1;
 *(double*)THIS$1 = *(double*)THIS$1 / V$1;
 *(double*)THIS$1 = *(double*)THIS$1 / V$1;
 label$413:;
}

void _ZN9_FLOAT512pLEy( struct $9_FLOAT512* THIS$1, uint64 V$1 )
{
 label$414:;
 *(double*)THIS$1 = *(double*)THIS$1 + (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 + (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 + (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 + (double)V$1;
 label$415:;
}

void _ZN9_FLOAT512mIEy( struct $9_FLOAT512* THIS$1, uint64 V$1 )
{
 label$416:;
 *(double*)THIS$1 = *(double*)THIS$1 - (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 - (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 - (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 - (double)V$1;
 label$417:;
}

void _ZN9_FLOAT512mLEy( struct $9_FLOAT512* THIS$1, uint64 V$1 )
{
 label$418:;
 *(double*)THIS$1 = *(double*)THIS$1 * (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 * (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 * (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 * (double)V$1;
 label$419:;
}

void _ZN9_FLOAT512dVEy( struct $9_FLOAT512* THIS$1, uint64 V$1 )
{
 label$420:;
 *(double*)THIS$1 = *(double*)THIS$1 / (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 / (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 / (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 / (double)V$1;
 label$421:;
}

void _ZN9_FLOAT512pLERS_( struct $9_FLOAT512* THIS$1, struct $9_FLOAT512* V4$1 )
{
 label$422:;
 *(double*)THIS$1 = *(double*)THIS$1 + *(double*)V4$1;
 *(double*)THIS$1 = *(double*)THIS$1 + *(double*)V4$1;
 *(double*)THIS$1 = *(double*)THIS$1 + *(double*)V4$1;
 *(double*)THIS$1 = *(double*)THIS$1 + *(double*)V4$1;
 label$423:;
}

void _ZN9_FLOAT512mIERS_( struct $9_FLOAT512* THIS$1, struct $9_FLOAT512* V4$1 )
{
 label$424:;
 *(double*)THIS$1 = *(double*)THIS$1 - *(double*)V4$1;
 *(double*)THIS$1 = *(double*)THIS$1 - *(double*)V4$1;
 *(double*)THIS$1 = *(double*)THIS$1 - *(double*)V4$1;
 *(double*)THIS$1 = *(double*)THIS$1 - *(double*)V4$1;
 label$425:;
}

void _ZN9_FLOAT512mLERS_( struct $9_FLOAT512* THIS$1, struct $9_FLOAT512* V4$1 )
{
 label$426:;
 *(double*)THIS$1 = *(double*)THIS$1 * *(double*)V4$1;
 *(double*)THIS$1 = *(double*)THIS$1 * *(double*)V4$1;
 *(double*)THIS$1 = *(double*)THIS$1 * *(double*)V4$1;
 *(double*)THIS$1 = *(double*)THIS$1 * *(double*)V4$1;
 label$427:;
}

void _ZN9_FLOAT512dVERS_( struct $9_FLOAT512* THIS$1, struct $9_FLOAT512* V4$1 )
{
 label$428:;
 *(double*)THIS$1 = *(double*)THIS$1 / *(double*)V4$1;
 *(double*)THIS$1 = *(double*)THIS$1 / *(double*)V4$1;
 *(double*)THIS$1 = *(double*)THIS$1 / *(double*)V4$1;
 *(double*)THIS$1 = *(double*)THIS$1 / *(double*)V4$1;
 label$429:;
}

struct $9_FLOAT512* _ZN9_FLOAT5122XXEv( struct $9_FLOAT512* tmp$289$1, struct $9_FLOAT512* THIS$1 )
{
 label$430:;
 _ZN9_FLOAT512C1Edd( tmp$289$1, *(double*)THIS$1, *(double*)THIS$1 );
 goto label$431;
 label$431:;
 return tmp$289$1;
}

struct $9_FLOAT512* _ZN9_FLOAT5122XYEv( struct $9_FLOAT512* tmp$291$1, struct $9_FLOAT512* THIS$1 )
{
 label$432:;
 _ZN9_FLOAT512C1Edd( tmp$291$1, *(double*)THIS$1, *(double*)THIS$1 );
 goto label$433;
 label$433:;
 return tmp$291$1;
}

struct $9_FLOAT512* _ZN9_FLOAT5122XZEv( struct $9_FLOAT512* tmp$293$1, struct $9_FLOAT512* THIS$1 )
{
 label$434:;
 _ZN9_FLOAT512C1Edd( tmp$293$1, *(double*)THIS$1, *(double*)THIS$1 );
 goto label$435;
 label$435:;
 return tmp$293$1;
}

struct $9_FLOAT512* _ZN9_FLOAT5122YXEv( struct $9_FLOAT512* tmp$295$1, struct $9_FLOAT512* THIS$1 )
{
 label$436:;
 _ZN9_FLOAT512C1Edd( tmp$295$1, *(double*)THIS$1, *(double*)THIS$1 );
 goto label$437;
 label$437:;
 return tmp$295$1;
}

struct $9_FLOAT512* _ZN9_FLOAT5122YYEv( struct $9_FLOAT512* tmp$297$1, struct $9_FLOAT512* THIS$1 )
{
 label$438:;
 _ZN9_FLOAT512C1Edd( tmp$297$1, *(double*)THIS$1, *(double*)THIS$1 );
 goto label$439;
 label$439:;
 return tmp$297$1;
}

struct $9_FLOAT512* _ZN9_FLOAT5122YZEv( struct $9_FLOAT512* tmp$299$1, struct $9_FLOAT512* THIS$1 )
{
 label$440:;
 _ZN9_FLOAT512C1Edd( tmp$299$1, *(double*)THIS$1, *(double*)THIS$1 );
 goto label$441;
 label$441:;
 return tmp$299$1;
}

struct $9_FLOAT512* _ZN9_FLOAT5122ZXEv( struct $9_FLOAT512* tmp$301$1, struct $9_FLOAT512* THIS$1 )
{
 label$442:;
 _ZN9_FLOAT512C1Edd( tmp$301$1, *(double*)THIS$1, *(double*)THIS$1 );
 goto label$443;
 label$443:;
 return tmp$301$1;
}

struct $9_FLOAT512* _ZN9_FLOAT5122ZYEv( struct $9_FLOAT512* tmp$303$1, struct $9_FLOAT512* THIS$1 )
{
 label$444:;
 _ZN9_FLOAT512C1Edd( tmp$303$1, *(double*)THIS$1, *(double*)THIS$1 );
 goto label$445;
 label$445:;
 return tmp$303$1;
}

struct $9_FLOAT512* _ZN9_FLOAT5122ZZEv( struct $9_FLOAT512* tmp$305$1, struct $9_FLOAT512* THIS$1 )
{
 label$446:;
 _ZN9_FLOAT512C1Edd( tmp$305$1, *(double*)THIS$1, *(double*)THIS$1 );
 goto label$447;
 label$447:;
 return tmp$305$1;
}

struct $9_FLOAT512* _ZN9_FLOAT5123XXXEv( struct $9_FLOAT512* tmp$307$1, struct $9_FLOAT512* THIS$1 )
{
 label$448:;
 _ZN9_FLOAT512C1Edddd( tmp$307$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$449;
 label$449:;
 return tmp$307$1;
}

struct $9_FLOAT512* _ZN9_FLOAT5123XXYEv( struct $9_FLOAT512* tmp$309$1, struct $9_FLOAT512* THIS$1 )
{
 label$450:;
 _ZN9_FLOAT512C1Edddd( tmp$309$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$451;
 label$451:;
 return tmp$309$1;
}

struct $9_FLOAT512* _ZN9_FLOAT5123XXZEv( struct $9_FLOAT512* tmp$311$1, struct $9_FLOAT512* THIS$1 )
{
 label$452:;
 _ZN9_FLOAT512C1Edddd( tmp$311$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$453;
 label$453:;
 return tmp$311$1;
}

struct $9_FLOAT512* _ZN9_FLOAT5123XYXEv( struct $9_FLOAT512* tmp$313$1, struct $9_FLOAT512* THIS$1 )
{
 label$454:;
 _ZN9_FLOAT512C1Edddd( tmp$313$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$455;
 label$455:;
 return tmp$313$1;
}

struct $9_FLOAT512* _ZN9_FLOAT5123XYYEv( struct $9_FLOAT512* tmp$315$1, struct $9_FLOAT512* THIS$1 )
{
 label$456:;
 _ZN9_FLOAT512C1Edddd( tmp$315$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$457;
 label$457:;
 return tmp$315$1;
}

struct $9_FLOAT512* _ZN9_FLOAT5123XYZEv( struct $9_FLOAT512* tmp$317$1, struct $9_FLOAT512* THIS$1 )
{
 label$458:;
 _ZN9_FLOAT512C1Edddd( tmp$317$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$459;
 label$459:;
 return tmp$317$1;
}

struct $9_FLOAT512* _ZN9_FLOAT5123XZXEv( struct $9_FLOAT512* tmp$319$1, struct $9_FLOAT512* THIS$1 )
{
 label$460:;
 _ZN9_FLOAT512C1Edddd( tmp$319$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$461;
 label$461:;
 return tmp$319$1;
}

struct $9_FLOAT512* _ZN9_FLOAT5123XZYEv( struct $9_FLOAT512* tmp$321$1, struct $9_FLOAT512* THIS$1 )
{
 label$462:;
 _ZN9_FLOAT512C1Edddd( tmp$321$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$463;
 label$463:;
 return tmp$321$1;
}

struct $9_FLOAT512* _ZN9_FLOAT5123XZZEv( struct $9_FLOAT512* tmp$323$1, struct $9_FLOAT512* THIS$1 )
{
 label$464:;
 _ZN9_FLOAT512C1Edddd( tmp$323$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$465;
 label$465:;
 return tmp$323$1;
}

struct $9_FLOAT512* _ZN9_FLOAT5123YXXEv( struct $9_FLOAT512* tmp$325$1, struct $9_FLOAT512* THIS$1 )
{
 label$466:;
 _ZN9_FLOAT512C1Edddd( tmp$325$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$467;
 label$467:;
 return tmp$325$1;
}

struct $9_FLOAT512* _ZN9_FLOAT5123YXYEv( struct $9_FLOAT512* tmp$327$1, struct $9_FLOAT512* THIS$1 )
{
 label$468:;
 _ZN9_FLOAT512C1Edddd( tmp$327$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$469;
 label$469:;
 return tmp$327$1;
}

struct $9_FLOAT512* _ZN9_FLOAT5123YXZEv( struct $9_FLOAT512* tmp$329$1, struct $9_FLOAT512* THIS$1 )
{
 label$470:;
 _ZN9_FLOAT512C1Edddd( tmp$329$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$471;
 label$471:;
 return tmp$329$1;
}

struct $9_FLOAT512* _ZN9_FLOAT5123YYXEv( struct $9_FLOAT512* tmp$331$1, struct $9_FLOAT512* THIS$1 )
{
 label$472:;
 _ZN9_FLOAT512C1Edddd( tmp$331$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$473;
 label$473:;
 return tmp$331$1;
}

struct $9_FLOAT512* _ZN9_FLOAT5123YYYEv( struct $9_FLOAT512* tmp$333$1, struct $9_FLOAT512* THIS$1 )
{
 label$474:;
 _ZN9_FLOAT512C1Edddd( tmp$333$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$475;
 label$475:;
 return tmp$333$1;
}

struct $9_FLOAT512* _ZN9_FLOAT5123YYZEv( struct $9_FLOAT512* tmp$335$1, struct $9_FLOAT512* THIS$1 )
{
 label$476:;
 _ZN9_FLOAT512C1Edddd( tmp$335$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$477;
 label$477:;
 return tmp$335$1;
}

struct $9_FLOAT512* _ZN9_FLOAT5123YZXEv( struct $9_FLOAT512* tmp$337$1, struct $9_FLOAT512* THIS$1 )
{
 label$478:;
 _ZN9_FLOAT512C1Edddd( tmp$337$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$479;
 label$479:;
 return tmp$337$1;
}

struct $9_FLOAT512* _ZN9_FLOAT5123YZYEv( struct $9_FLOAT512* tmp$339$1, struct $9_FLOAT512* THIS$1 )
{
 label$480:;
 _ZN9_FLOAT512C1Edddd( tmp$339$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$481;
 label$481:;
 return tmp$339$1;
}

struct $9_FLOAT512* _ZN9_FLOAT5123YZZEv( struct $9_FLOAT512* tmp$341$1, struct $9_FLOAT512* THIS$1 )
{
 label$482:;
 _ZN9_FLOAT512C1Edddd( tmp$341$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$483;
 label$483:;
 return tmp$341$1;
}

struct $9_FLOAT512* _ZN9_FLOAT5123ZXXEv( struct $9_FLOAT512* tmp$343$1, struct $9_FLOAT512* THIS$1 )
{
 label$484:;
 _ZN9_FLOAT512C1Edddd( tmp$343$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$485;
 label$485:;
 return tmp$343$1;
}

struct $9_FLOAT512* _ZN9_FLOAT5123ZXYEv( struct $9_FLOAT512* tmp$345$1, struct $9_FLOAT512* THIS$1 )
{
 label$486:;
 _ZN9_FLOAT512C1Edddd( tmp$345$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$487;
 label$487:;
 return tmp$345$1;
}

struct $9_FLOAT512* _ZN9_FLOAT5123ZXZEv( struct $9_FLOAT512* tmp$347$1, struct $9_FLOAT512* THIS$1 )
{
 label$488:;
 _ZN9_FLOAT512C1Edddd( tmp$347$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$489;
 label$489:;
 return tmp$347$1;
}

struct $9_FLOAT512* _ZN9_FLOAT5123ZYXEv( struct $9_FLOAT512* tmp$349$1, struct $9_FLOAT512* THIS$1 )
{
 label$490:;
 _ZN9_FLOAT512C1Edddd( tmp$349$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$491;
 label$491:;
 return tmp$349$1;
}

struct $9_FLOAT512* _ZN9_FLOAT5123ZYYEv( struct $9_FLOAT512* tmp$351$1, struct $9_FLOAT512* THIS$1 )
{
 label$492:;
 _ZN9_FLOAT512C1Edddd( tmp$351$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$493;
 label$493:;
 return tmp$351$1;
}

struct $9_FLOAT512* _ZN9_FLOAT5123ZYZEv( struct $9_FLOAT512* tmp$353$1, struct $9_FLOAT512* THIS$1 )
{
 label$494:;
 _ZN9_FLOAT512C1Edddd( tmp$353$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$495;
 label$495:;
 return tmp$353$1;
}

struct $9_FLOAT512* _ZN9_FLOAT5123ZZXEv( struct $9_FLOAT512* tmp$355$1, struct $9_FLOAT512* THIS$1 )
{
 label$496:;
 _ZN9_FLOAT512C1Edddd( tmp$355$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$497;
 label$497:;
 return tmp$355$1;
}

struct $9_FLOAT512* _ZN9_FLOAT5123ZZYEv( struct $9_FLOAT512* tmp$357$1, struct $9_FLOAT512* THIS$1 )
{
 label$498:;
 _ZN9_FLOAT512C1Edddd( tmp$357$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$499;
 label$499:;
 return tmp$357$1;
}

struct $9_FLOAT512* _ZN9_FLOAT5123ZZZEv( struct $9_FLOAT512* tmp$359$1, struct $9_FLOAT512* THIS$1 )
{
 label$500:;
 _ZN9_FLOAT512C1Edddd( tmp$359$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$501;
 label$501:;
 return tmp$359$1;
}

struct $9_FLOAT512* _ZN9_FLOAT5123RGBEv( struct $9_FLOAT512* tmp$361$1, struct $9_FLOAT512* THIS$1 )
{
 label$502:;
 _ZN9_FLOAT512C1Edddd( tmp$361$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$503;
 label$503:;
 return tmp$361$1;
}

struct $9_FLOAT512* _ZN9_FLOAT5124RGBAEv( struct $9_FLOAT512* tmp$363$1, struct $9_FLOAT512* THIS$1 )
{
 label$504:;
 _ZN9_FLOAT512C1Edddd( tmp$363$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1 );
 goto label$505;
 label$505:;
 return tmp$363$1;
}

struct $9_FLOAT512* _ZngR9_FLOAT512( struct $9_FLOAT512* tmp$365$1, struct $9_FLOAT512* L$1 )
{
 label$506:;
 _ZN9_FLOAT512C1Edddd( tmp$365$1, -(*(double*)L$1), -(*(double*)L$1), -(*(double*)L$1), -(*(double*)L$1) );
 goto label$507;
 label$507:;
 return tmp$365$1;
}

struct $9_FLOAT512* _ZplR9_FLOAT512S0_( struct $9_FLOAT512* tmp$367$1, struct $9_FLOAT512* L$1, struct $9_FLOAT512* R$1 )
{
 label$508:;
 _ZN9_FLOAT512C1Edddd( tmp$367$1, *(double*)L$1 + *(double*)R$1, *(double*)L$1 + *(double*)R$1, *(double*)L$1 + *(double*)R$1, *(double*)L$1 + *(double*)R$1 );
 goto label$509;
 label$509:;
 return tmp$367$1;
}

struct $9_FLOAT512* _ZmiR9_FLOAT512S0_( struct $9_FLOAT512* tmp$369$1, struct $9_FLOAT512* L$1, struct $9_FLOAT512* R$1 )
{
 label$510:;
 _ZN9_FLOAT512C1Edddd( tmp$369$1, *(double*)L$1 - *(double*)R$1, *(double*)L$1 - *(double*)R$1, *(double*)L$1 - *(double*)R$1, *(double*)L$1 - *(double*)R$1 );
 goto label$511;
 label$511:;
 return tmp$369$1;
}

struct $9_FLOAT512* _ZmlR9_FLOAT512S0_( struct $9_FLOAT512* tmp$371$1, struct $9_FLOAT512* L$1, struct $9_FLOAT512* R$1 )
{
 label$512:;
 _ZN9_FLOAT512C1Edddd( tmp$371$1, *(double*)L$1 * *(double*)R$1, *(double*)L$1 * *(double*)R$1, *(double*)L$1 * *(double*)R$1, *(double*)L$1 * *(double*)R$1 );
 goto label$513;
 label$513:;
 return tmp$371$1;
}

struct $9_FLOAT512* _ZdvR9_FLOAT512S0_( struct $9_FLOAT512* tmp$373$1, struct $9_FLOAT512* L$1, struct $9_FLOAT512* R$1 )
{
 label$514:;
 _ZN9_FLOAT512C1Edddd( tmp$373$1, *(double*)L$1 / *(double*)R$1, *(double*)L$1 / *(double*)R$1, *(double*)L$1 / *(double*)R$1, *(double*)L$1 / *(double*)R$1 );
 goto label$515;
 label$515:;
 return tmp$373$1;
}

int64 _ZeqR9_FLOAT512S0_( struct $9_FLOAT512* L$1, struct $9_FLOAT512* R$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$516:;
 if( ((((int64)__builtin_nearbyint( *(double*)L$1 )) ^ ((int64)__builtin_nearbyint( *(double*)R$1 ))) | (((int64)__builtin_nearbyint( *(double*)L$1 )) ^ ((int64)__builtin_nearbyint( *(double*)R$1 )))) == 0ll ) goto label$519;
 {
  fb$result$1 = 0ll;
  goto label$517;
  label$519:;
 }
 fb$result$1 = -1ll;
 goto label$517;
 label$517:;
 return fb$result$1;
}

int64 _ZneR9_FLOAT512S0_( struct $9_FLOAT512* L$1, struct $9_FLOAT512* R$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$520:;
 if( ((((int64)__builtin_nearbyint( *(double*)L$1 )) ^ ((int64)__builtin_nearbyint( *(double*)R$1 ))) | (((int64)__builtin_nearbyint( *(double*)L$1 )) ^ ((int64)__builtin_nearbyint( *(double*)R$1 )))) == 0ll ) goto label$523;
 {
  fb$result$1 = -1ll;
  goto label$521;
  label$523:;
 }
 fb$result$1 = 0ll;
 goto label$521;
 label$521:;
 return fb$result$1;
}

struct $9_FLOAT512* _ZplR9_FLOAT512d( struct $9_FLOAT512* tmp$375$1, struct $9_FLOAT512* L$1, double R$1 )
{
 label$524:;
 _ZN9_FLOAT512C1Edddd( tmp$375$1, *(double*)L$1 + R$1, *(double*)L$1 + R$1, *(double*)L$1 + R$1, *(double*)L$1 + R$1 );
 goto label$525;
 label$525:;
 return tmp$375$1;
}

struct $9_FLOAT512* _ZpldR9_FLOAT512( struct $9_FLOAT512* tmp$377$1, double L$1, struct $9_FLOAT512* R$1 )
{
 label$526:;
 _ZN9_FLOAT512C1Edddd( tmp$377$1, *(double*)R$1 + L$1, *(double*)R$1 + L$1, *(double*)R$1 + L$1, *(double*)R$1 + L$1 );
 goto label$527;
 label$527:;
 return tmp$377$1;
}

struct $9_FLOAT512* _ZmiR9_FLOAT512d( struct $9_FLOAT512* tmp$379$1, struct $9_FLOAT512* L$1, double R$1 )
{
 label$528:;
 _ZN9_FLOAT512C1Edddd( tmp$379$1, *(double*)L$1 - R$1, *(double*)L$1 - R$1, *(double*)L$1 - R$1, *(double*)L$1 - R$1 );
 goto label$529;
 label$529:;
 return tmp$379$1;
}

struct $9_FLOAT512* _ZmidR9_FLOAT512( struct $9_FLOAT512* tmp$381$1, double L$1, struct $9_FLOAT512* R$1 )
{
 label$530:;
 _ZN9_FLOAT512C1Edddd( tmp$381$1, *(double*)R$1 - L$1, *(double*)R$1 - L$1, *(double*)R$1 - L$1, *(double*)R$1 - L$1 );
 goto label$531;
 label$531:;
 return tmp$381$1;
}

struct $9_FLOAT512* _ZmlR9_FLOAT512d( struct $9_FLOAT512* tmp$383$1, struct $9_FLOAT512* L$1, double R$1 )
{
 label$532:;
 _ZN9_FLOAT512C1Edddd( tmp$383$1, *(double*)L$1 * R$1, *(double*)L$1 * R$1, *(double*)L$1 * R$1, *(double*)L$1 * R$1 );
 goto label$533;
 label$533:;
 return tmp$383$1;
}

struct $9_FLOAT512* _ZmldR9_FLOAT512( struct $9_FLOAT512* tmp$385$1, double L$1, struct $9_FLOAT512* R$1 )
{
 label$534:;
 _ZN9_FLOAT512C1Edddd( tmp$385$1, L$1 * *(double*)R$1, L$1 * *(double*)R$1, L$1 * *(double*)R$1, L$1 * *(double*)R$1 );
 goto label$535;
 label$535:;
 return tmp$385$1;
}

void ERROREXIT( FBSTRING* MSG$1 )
{
 label$542:;
 void* vr$0 = fb_GfxScreenPtr( );
 if( vr$0 == (void*)0ull ) goto label$545;
 {
  fb_GfxScreen( 0, 8, 0, 0, 0 );
  label$545:;
 }
 int64 W$1;
 __builtin_memset( &W$1, 0, 8ll );
 int64 H$1;
 __builtin_memset( &H$1, 0, 8ll );
 fb_PrintString( 0, (FBSTRING*)MSG$1, 1 );
 fb_PrintVoid( 0, 1 );
 FBSTRING* vr$3 = fb_StrAllocTempDescZEx( (uint8*)"press any key ...", 17ll );
 fb_PrintString( 0, (FBSTRING*)vr$3, 1 );
 fb_Beep( );
 fb_Sleep( -1 );
 fb_End( 1 );
 label$543:;
}

void GLSCREEN( int64 PIXELWIDTH$1, int64 PIXELHEIGHT$1, int64 COLORBITS$1, int64 DEPTHBITS$1, int8 FULLSCREEN$1 )
{
 int64 TMP$1035$1;
 int64 TMP$1036$1;
 int64 TMP$1037$1;
 int64 TMP$1038$1;
 int64 TMP$1039$1;
 int64 TMP$1040$1;
 int64 TMP$1041$1;
 int64 TMP$1042$1;
 int64 TMP$1043$1;
 label$546:;
 int64 W$1;
 __builtin_memset( &W$1, 0, 8ll );
 int64 H$1;
 __builtin_memset( &H$1, 0, 8ll );
 int64 B$1;
 __builtin_memset( &B$1, 0, 8ll );
 void* vr$3 = fb_GfxScreenPtr( );
 if( vr$3 == (void*)0ull ) goto label$549;
 {
  fb_GfxScreen( 0, 8, 0, 0, 0 );
  label$549:;
 }
 FBSTRING* vr$4 = fb_StrAllocTempDescZEx( (uint8*)"", 0ll );
 TMP$1037$1 = 0ll;
 TMP$1036$1 = 0ll;
 TMP$1035$1 = 0ll;
 fb_GfxScreenInfo64( (int64*)&W$1, (int64*)&H$1, (int64*)&B$1, &TMP$1035$1, &TMP$1036$1, &TMP$1037$1, vr$4 );
 if( PIXELWIDTH$1 > 0ll ) goto label$550;
 TMP$1038$1 = (int64)-(PIXELHEIGHT$1 <= 0ll);
 goto label$638;
 label$550:;
 TMP$1038$1 = 0ll;
 label$638:;
 if( TMP$1038$1 == 0ll ) goto label$552;
 {
  PIXELWIDTH$1 = 640ll;
  PIXELHEIGHT$1 = 350ll;
  FULLSCREEN$1 = (int8)0;
 }
 goto label$551;
 label$552:;
 if( PIXELWIDTH$1 <= 0ll ) goto label$554;
 TMP$1039$1 = (int64)-(PIXELHEIGHT$1 <= 0ll);
 goto label$639;
 label$554:;
 TMP$1039$1 = 0ll;
 label$639:;
 if( TMP$1039$1 == 0ll ) goto label$553;
 {
  PIXELHEIGHT$1 = ((int64)__builtin_nearbyint( ((double)PIXELWIDTH$1 / 0x1.p+4) * 0x1.2p+3 ));
 }
 goto label$551;
 label$553:;
 if( PIXELWIDTH$1 > 0ll ) goto label$556;
 TMP$1040$1 = (int64)-(PIXELHEIGHT$1 > 0ll);
 goto label$640;
 label$556:;
 TMP$1040$1 = 0ll;
 label$640:;
 if( TMP$1040$1 == 0ll ) goto label$555;
 {
  PIXELWIDTH$1 = ((int64)__builtin_nearbyint( ((double)PIXELHEIGHT$1 / 0x1.2p+3) * 0x1.p+4 ));
 }
 label$555:;
 label$551:;
 if( COLORBITS$1 >= 16ll ) goto label$558;
 {
  COLORBITS$1 = B$1;
 }
 goto label$557;
 label$558:;
 if( COLORBITS$1 >= 24ll ) goto label$559;
 {
  COLORBITS$1 = 16ll;
 }
 goto label$557;
 label$559:;
 if( COLORBITS$1 >= 32ll ) goto label$560;
 {
  COLORBITS$1 = 24ll;
 }
 goto label$557;
 label$560:;
 {
  COLORBITS$1 = 32ll;
 }
 label$557:;
 if( DEPTHBITS$1 > 0ll ) goto label$562;
 {
  DEPTHBITS$1 = 0ll;
 }
 goto label$561;
 label$562:;
 if( DEPTHBITS$1 >= 16ll ) goto label$563;
 {
  DEPTHBITS$1 = 16ll;
 }
 goto label$561;
 label$563:;
 if( DEPTHBITS$1 >= 32ll ) goto label$564;
 {
  DEPTHBITS$1 = 24ll;
 }
 goto label$561;
 label$564:;
 {
  DEPTHBITS$1 = 32ll;
 }
 label$561:;
 TMP$1043$1 = 2147483648ll;
 TMP$1042$1 = 2147483648ll;
 TMP$1041$1 = 2147483648ll;
 fb_GfxControl_i64( 110, (int64*)&DEPTHBITS$1, &TMP$1041$1, &TMP$1042$1, &TMP$1043$1 );
 if( (int64)FULLSCREEN$1 == 0ll ) goto label$566;
 {
  if( ((int64)-(PIXELWIDTH$1 < 640ll) | (int64)-(PIXELHEIGHT$1 < 480ll)) == 0ll ) goto label$568;
  {
   PIXELWIDTH$1 = 640ll;
   PIXELHEIGHT$1 = 480ll;
  }
  label$568:;
  label$567:;
  int32 FOUNDMODE$2;
  __builtin_memset( &FOUNDMODE$2, 0, 4ll );
  int32 MODE$2;
  int32 vr$32 = fb_GfxScreenList( (int32)COLORBITS$1 );
  MODE$2 = vr$32;
  if( (int64)MODE$2 == 0ll ) goto label$570;
  {
   int64 ERRORVALUE$3;
   ERRORVALUE$3 = 1073741824ll;
   int64 ERRORWIDTH$3;
   __builtin_memset( &ERRORWIDTH$3, 0, 8ll );
   int64 ERRORHEIGHT$3;
   __builtin_memset( &ERRORHEIGHT$3, 0, 8ll );
   label$571:;
   if( (int64)MODE$2 == 0ll ) goto label$572;
   {
    ERRORWIDTH$3 = (int64)__builtin_llabs( ((((uint64)MODE$2 & 4294901760ull) >> (16ll & 63ll)) - (uint64)PIXELWIDTH$1) );
    ERRORHEIGHT$3 = (int64)__builtin_llabs( (((uint64)MODE$2 & 65535ull) - (uint64)PIXELHEIGHT$1) );
    if( (ERRORWIDTH$3 + ERRORHEIGHT$3) >= ERRORVALUE$3 ) goto label$574;
    {
     ERRORVALUE$3 = ERRORWIDTH$3 + ERRORHEIGHT$3;
     FOUNDMODE$2 = MODE$2;
    }
    label$574:;
    label$573:;
    int32 vr$48 = fb_GfxScreenList( 0 );
    MODE$2 = vr$48;
   }
   goto label$571;
   label$572:;
  }
  goto label$569;
  label$570:;
  {
   int32 BITS$3[2];
   __builtin_memset( (int32*)BITS$3, 0, 8ll );
   struct $8FBARRAY1IiE tmp$1044$3;
   *(int32**)&tmp$1044$3 = (int32*)BITS$3;
   *(int32**)((uint8*)&tmp$1044$3 + 8ll) = (int32*)BITS$3;
   *(int64*)((uint8*)&tmp$1044$3 + 16ll) = 8ll;
   *(int64*)((uint8*)&tmp$1044$3 + 24ll) = 4ll;
   *(int64*)((uint8*)&tmp$1044$3 + 32ll) = 1ll;
   *(int64*)((uint8*)&tmp$1044$3 + 40ll) = 49ll;
   *(int64*)((uint8*)&tmp$1044$3 + 48ll) = 2ll;
   *(int64*)((uint8*)&tmp$1044$3 + 56ll) = 0ll;
   *(int64*)((uint8*)&tmp$1044$3 + 64ll) = 1ll;
   if( COLORBITS$1 != 16ll ) goto label$576;
   {
    *(int32*)BITS$3 = 32;
    *(int32*)((int64)(int32*)BITS$3 + 4ll) = 24;
   }
   goto label$575;
   label$576:;
   if( COLORBITS$1 != 24ll ) goto label$577;
   {
    *(int32*)BITS$3 = 32;
    *(int32*)((int64)(int32*)BITS$3 + 4ll) = 16;
   }
   goto label$575;
   label$577:;
   {
    *(int32*)BITS$3 = 24;
    *(int32*)((int64)(int32*)BITS$3 + 4ll) = 16;
   }
   label$575:;
   {
    int64 I$4;
    I$4 = 0ll;
    label$581:;
    {
     COLORBITS$1 = (int64)*(int32*)((int64)(int32*)BITS$3 + (I$4 << (2ll & 63ll)));
     int32 vr$55 = fb_GfxScreenList( (int32)COLORBITS$1 );
     MODE$2 = vr$55;
     if( (int64)MODE$2 == 0ll ) goto label$583;
     {
      int64 ERRORVALUE$6;
      ERRORVALUE$6 = 1073741824ll;
      int64 ERRORWIDTH$6;
      __builtin_memset( &ERRORWIDTH$6, 0, 8ll );
      int64 ERRORHEIGHT$6;
      __builtin_memset( &ERRORHEIGHT$6, 0, 8ll );
      label$584:;
      if( (int64)MODE$2 == 0ll ) goto label$585;
      {
       ERRORWIDTH$6 = (int64)__builtin_llabs( ((((uint64)MODE$2 & 4294901760ull) >> (16ll & 63ll)) - (uint64)PIXELWIDTH$1) );
       ERRORHEIGHT$6 = (int64)__builtin_llabs( (((uint64)MODE$2 & 65535ull) - (uint64)PIXELHEIGHT$1) );
       if( (ERRORWIDTH$6 + ERRORHEIGHT$6) >= ERRORVALUE$6 ) goto label$587;
       {
        ERRORVALUE$6 = ERRORWIDTH$6 + ERRORHEIGHT$6;
        FOUNDMODE$2 = MODE$2;
       }
       label$587:;
       label$586:;
       int32 vr$71 = fb_GfxScreenList( 0 );
       MODE$2 = vr$71;
      }
      goto label$584;
      label$585:;
     }
     label$583:;
     label$582:;
     if( (int64)FOUNDMODE$2 == 0ll ) goto label$589;
     {
      goto label$580;
      label$589:;
     }
    }
    label$579:;
    I$4 = I$4 + 1ll;
    label$578:;
    if( I$4 <= 1ll ) goto label$581;
    label$580:;
   }
  }
  label$569:;
  if( (int64)FOUNDMODE$2 == 0ll ) goto label$591;
  {
   PIXELWIDTH$1 = (int64)(((uint64)FOUNDMODE$2 & 4294901760ull) >> (16ll & 63ll));
   PIXELHEIGHT$1 = (int64)((uint64)FOUNDMODE$2 & 65535ull);
  }
  goto label$590;
  label$591:;
  {
   FULLSCREEN$1 = (int8)0;
  }
  label$590:;
 }
 label$566:;
 label$565:;
 int32 vr$83 = fb_GfxScreenRes( (int32)PIXELWIDTH$1, (int32)PIXELHEIGHT$1, (int32)COLORBITS$1, 1, 2, 0 );
 if( (int64)vr$83 == 0ll ) goto label$593;
 {
  FULLSCREEN$1 = (int8)0;
  int32 vr$86 = fb_GfxScreenRes( 640, 350, (int32)B$1, 1, 2, 0 );
  if( (int64)vr$86 == 0ll ) goto label$595;
  {
   FBSTRING TMP$1048$3;
   FBSTRING TMP$1049$3;
   FBSTRING TMP$1050$3;
   FBSTRING TMP$1051$3;
   FBSTRING TMP$1052$3;
   __builtin_memset( &TMP$1052$3, 0, 24ll );
   FBSTRING* vr$89 = fb_LongintToStr( H$1 );
   FBSTRING* vr$90 = fb_LongintToStr( W$1 );
   __builtin_memset( &TMP$1048$3, 0, 24ll );
   FBSTRING* vr$93 = fb_StrConcat( &TMP$1048$3, (void*)"screenres(", 11ll, (void*)vr$90, -1ll );
   __builtin_memset( &TMP$1049$3, 0, 24ll );
   FBSTRING* vr$96 = fb_StrConcat( &TMP$1049$3, (void*)vr$93, -1ll, (void*)",", 2ll );
   __builtin_memset( &TMP$1050$3, 0, 24ll );
   FBSTRING* vr$99 = fb_StrConcat( &TMP$1050$3, (void*)vr$96, -1ll, (void*)vr$89, -1ll );
   __builtin_memset( &TMP$1051$3, 0, 24ll );
   FBSTRING* vr$102 = fb_StrConcat( &TMP$1051$3, (void*)vr$99, -1ll, (void*)") failed !", 11ll );
   fb_StrAssign( (void*)&TMP$1052$3, -1ll, (void*)vr$102, -1ll, 0 );
   ERROREXIT( &TMP$1052$3 );
   fb_StrDelete( (FBSTRING*)&TMP$1052$3 );
  }
  label$595:;
  label$594:;
 }
 label$593:;
 label$592:;
 fb_GfxFlip( -1, -1 );
 void* vr$106 = fb_GfxGetGLProcAddress( (uint8*)"glCreateShader" );
 GLCREATESHADER$ = (tmp$532)vr$106;
 if( GLCREATESHADER$ != (tmp$532)0ull ) goto label$597;
 {
  FBSTRING TMP$1054$2;
  __builtin_memset( &TMP$1054$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$1054$2, -1ll, (void*)"glCreateShader", 15ll, 0 );
  ERROREXIT( &TMP$1054$2 );
  fb_StrDelete( (FBSTRING*)&TMP$1054$2 );
  label$597:;
 }
 void* vr$111 = fb_GfxGetGLProcAddress( (uint8*)"glDeleteShader" );
 GLDELETESHADER$ = (tmp$461)vr$111;
 if( GLDELETESHADER$ != (tmp$461)0ull ) goto label$599;
 {
  FBSTRING TMP$1056$2;
  __builtin_memset( &TMP$1056$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$1056$2, -1ll, (void*)"glDeleteShader", 15ll, 0 );
  ERROREXIT( &TMP$1056$2 );
  fb_StrDelete( (FBSTRING*)&TMP$1056$2 );
  label$599:;
 }
 void* vr$116 = fb_GfxGetGLProcAddress( (uint8*)"glShaderSource" );
 GLSHADERSOURCE$ = (tmp$541)vr$116;
 if( GLSHADERSOURCE$ != (tmp$541)0ull ) goto label$601;
 {
  FBSTRING TMP$1058$2;
  __builtin_memset( &TMP$1058$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$1058$2, -1ll, (void*)"glShaderSource", 15ll, 0 );
  ERROREXIT( &TMP$1058$2 );
  fb_StrDelete( (FBSTRING*)&TMP$1058$2 );
  label$601:;
 }
 void* vr$121 = fb_GfxGetGLProcAddress( (uint8*)"glCompileShader" );
 GLCOMPILESHADER$ = (tmp$461)vr$121;
 if( GLCOMPILESHADER$ != (tmp$461)0ull ) goto label$603;
 {
  FBSTRING TMP$1060$2;
  __builtin_memset( &TMP$1060$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$1060$2, -1ll, (void*)"glCompileShader", 16ll, 0 );
  ERROREXIT( &TMP$1060$2 );
  fb_StrDelete( (FBSTRING*)&TMP$1060$2 );
  label$603:;
 }
 void* vr$126 = fb_GfxGetGLProcAddress( (uint8*)"glGetShaderiv" );
 GLGETSHADERIV$ = (tmp$522)vr$126;
 if( GLGETSHADERIV$ != (tmp$522)0ull ) goto label$605;
 {
  FBSTRING TMP$1062$2;
  __builtin_memset( &TMP$1062$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$1062$2, -1ll, (void*)"glGetShaderiv", 14ll, 0 );
  ERROREXIT( &TMP$1062$2 );
  fb_StrDelete( (FBSTRING*)&TMP$1062$2 );
  label$605:;
 }
 void* vr$131 = fb_GfxGetGLProcAddress( (uint8*)"glGetShaderInfoLog" );
 GLGETSHADERINFOLOG$ = (tmp$536)vr$131;
 if( GLGETSHADERINFOLOG$ != (tmp$536)0ull ) goto label$607;
 {
  FBSTRING TMP$1064$2;
  __builtin_memset( &TMP$1064$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$1064$2, -1ll, (void*)"glGetShaderInfoLog", 19ll, 0 );
  ERROREXIT( &TMP$1064$2 );
  fb_StrDelete( (FBSTRING*)&TMP$1064$2 );
  label$607:;
 }
 void* vr$136 = fb_GfxGetGLProcAddress( (uint8*)"glCreateProgram" );
 GLCREATEPROGRAM$ = (tmp$531)vr$136;
 if( GLCREATEPROGRAM$ != (tmp$531)0ull ) goto label$609;
 {
  FBSTRING TMP$1066$2;
  __builtin_memset( &TMP$1066$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$1066$2, -1ll, (void*)"glCreateProgram", 16ll, 0 );
  ERROREXIT( &TMP$1066$2 );
  fb_StrDelete( (FBSTRING*)&TMP$1066$2 );
  label$609:;
 }
 void* vr$141 = fb_GfxGetGLProcAddress( (uint8*)"glDeleteProgram" );
 GLDELETEPROGRAM$ = (tmp$461)vr$141;
 if( GLDELETEPROGRAM$ != (tmp$461)0ull ) goto label$611;
 {
  FBSTRING TMP$1068$2;
  __builtin_memset( &TMP$1068$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$1068$2, -1ll, (void*)"glDeleteProgram", 16ll, 0 );
  ERROREXIT( &TMP$1068$2 );
  fb_StrDelete( (FBSTRING*)&TMP$1068$2 );
  label$611:;
 }
 void* vr$146 = fb_GfxGetGLProcAddress( (uint8*)"glAttachShader" );
 GLATTACHSHADER$ = (tmp$521)vr$146;
 if( GLATTACHSHADER$ != (tmp$521)0ull ) goto label$613;
 {
  FBSTRING TMP$1070$2;
  __builtin_memset( &TMP$1070$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$1070$2, -1ll, (void*)"glAttachShader", 15ll, 0 );
  ERROREXIT( &TMP$1070$2 );
  fb_StrDelete( (FBSTRING*)&TMP$1070$2 );
  label$613:;
 }
 void* vr$151 = fb_GfxGetGLProcAddress( (uint8*)"glDetachShader" );
 GLDETACHSHADER$ = (tmp$521)vr$151;
 if( GLDETACHSHADER$ != (tmp$521)0ull ) goto label$615;
 {
  FBSTRING TMP$1072$2;
  __builtin_memset( &TMP$1072$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$1072$2, -1ll, (void*)"glDetachShader", 15ll, 0 );
  ERROREXIT( &TMP$1072$2 );
  fb_StrDelete( (FBSTRING*)&TMP$1072$2 );
  label$615:;
 }
 void* vr$156 = fb_GfxGetGLProcAddress( (uint8*)"glLinkProgram" );
 GLLINKPROGRAM$ = (tmp$461)vr$156;
 if( GLLINKPROGRAM$ != (tmp$461)0ull ) goto label$617;
 {
  FBSTRING TMP$1074$2;
  __builtin_memset( &TMP$1074$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$1074$2, -1ll, (void*)"glLinkProgram", 14ll, 0 );
  ERROREXIT( &TMP$1074$2 );
  fb_StrDelete( (FBSTRING*)&TMP$1074$2 );
  label$617:;
 }
 void* vr$161 = fb_GfxGetGLProcAddress( (uint8*)"glGetProgramiv" );
 GLGETPROGRAMIV$ = (tmp$522)vr$161;
 if( GLGETPROGRAMIV$ != (tmp$522)0ull ) goto label$619;
 {
  FBSTRING TMP$1076$2;
  __builtin_memset( &TMP$1076$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$1076$2, -1ll, (void*)"glGetProgramiv", 15ll, 0 );
  ERROREXIT( &TMP$1076$2 );
  fb_StrDelete( (FBSTRING*)&TMP$1076$2 );
  label$619:;
 }
 void* vr$166 = fb_GfxGetGLProcAddress( (uint8*)"glGetProgramInfoLog" );
 GLGETPROGRAMINFOLOG$ = (tmp$536)vr$166;
 if( GLGETPROGRAMINFOLOG$ != (tmp$536)0ull ) goto label$621;
 {
  FBSTRING TMP$1078$2;
  __builtin_memset( &TMP$1078$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$1078$2, -1ll, (void*)"glGetProgramInfoLog", 20ll, 0 );
  ERROREXIT( &TMP$1078$2 );
  fb_StrDelete( (FBSTRING*)&TMP$1078$2 );
  label$621:;
 }
 void* vr$171 = fb_GfxGetGLProcAddress( (uint8*)"glUseProgram" );
 GLUSEPROGRAM$ = (tmp$461)vr$171;
 if( GLUSEPROGRAM$ != (tmp$461)0ull ) goto label$623;
 {
  FBSTRING TMP$1080$2;
  __builtin_memset( &TMP$1080$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$1080$2, -1ll, (void*)"glUseProgram", 13ll, 0 );
  ERROREXIT( &TMP$1080$2 );
  fb_StrDelete( (FBSTRING*)&TMP$1080$2 );
  label$623:;
 }
 void* vr$176 = fb_GfxGetGLProcAddress( (uint8*)"glGetUniformLocation" );
 GLGETUNIFORMLOCATION$ = (tmp$535)vr$176;
 if( GLGETUNIFORMLOCATION$ != (tmp$535)0ull ) goto label$625;
 {
  FBSTRING TMP$1082$2;
  __builtin_memset( &TMP$1082$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$1082$2, -1ll, (void*)"glGetUniformLocation", 21ll, 0 );
  ERROREXIT( &TMP$1082$2 );
  fb_StrDelete( (FBSTRING*)&TMP$1082$2 );
  label$625:;
 }
 void* vr$181 = fb_GfxGetGLProcAddress( (uint8*)"glUniform1i" );
 GLUNIFORM1I$ = (tmp$515)vr$181;
 if( GLUNIFORM1I$ != (tmp$515)0ull ) goto label$627;
 {
  FBSTRING TMP$1084$2;
  __builtin_memset( &TMP$1084$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$1084$2, -1ll, (void*)"glUniform1i", 12ll, 0 );
  ERROREXIT( &TMP$1084$2 );
  fb_StrDelete( (FBSTRING*)&TMP$1084$2 );
  label$627:;
 }
 void* vr$186 = fb_GfxGetGLProcAddress( (uint8*)"glUniform1f" );
 GLUNIFORM1F$ = (tmp$542)vr$186;
 if( GLUNIFORM1F$ != (tmp$542)0ull ) goto label$629;
 {
  FBSTRING TMP$1086$2;
  __builtin_memset( &TMP$1086$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$1086$2, -1ll, (void*)"glUniform1f", 12ll, 0 );
  ERROREXIT( &TMP$1086$2 );
  fb_StrDelete( (FBSTRING*)&TMP$1086$2 );
  label$629:;
 }
 void* vr$191 = fb_GfxGetGLProcAddress( (uint8*)"glUniform3f" );
 GLUNIFORM3F$ = (tmp$544)vr$191;
 if( GLUNIFORM3F$ != (tmp$544)0ull ) goto label$631;
 {
  FBSTRING TMP$1088$2;
  __builtin_memset( &TMP$1088$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$1088$2, -1ll, (void*)"glUniform3f", 12ll, 0 );
  ERROREXIT( &TMP$1088$2 );
  fb_StrDelete( (FBSTRING*)&TMP$1088$2 );
  label$631:;
 }
 void* vr$196 = fb_GfxGetGLProcAddress( (uint8*)"glUniform3fv" );
 GLUNIFORM3FV$ = (tmp$548)vr$196;
 if( GLUNIFORM3FV$ != (tmp$548)0ull ) goto label$633;
 {
  FBSTRING TMP$1090$2;
  __builtin_memset( &TMP$1090$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$1090$2, -1ll, (void*)"glUniform3fv", 13ll, 0 );
  ERROREXIT( &TMP$1090$2 );
  fb_StrDelete( (FBSTRING*)&TMP$1090$2 );
  label$633:;
 }
 void* vr$201 = fb_GfxGetGLProcAddress( (uint8*)"glUniform4f" );
 GLUNIFORM4F$ = (tmp$545)vr$201;
 if( GLUNIFORM4F$ != (tmp$545)0ull ) goto label$635;
 {
  FBSTRING TMP$1092$2;
  __builtin_memset( &TMP$1092$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$1092$2, -1ll, (void*)"glUniform4f", 12ll, 0 );
  ERROREXIT( &TMP$1092$2 );
  fb_StrDelete( (FBSTRING*)&TMP$1092$2 );
  label$635:;
 }
 void* vr$206 = fb_GfxGetGLProcAddress( (uint8*)"glUniform4fv" );
 GLUNIFORM4FV$ = (tmp$548)vr$206;
 if( GLUNIFORM4FV$ != (tmp$548)0ull ) goto label$637;
 {
  FBSTRING TMP$1094$2;
  __builtin_memset( &TMP$1094$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$1094$2, -1ll, (void*)"glUniform4fv", 13ll, 0 );
  ERROREXIT( &TMP$1094$2 );
  fb_StrDelete( (FBSTRING*)&TMP$1094$2 );
  label$637:;
 }
 FBSTRING* vr$211 = fb_StrAllocTempDescZEx( (uint8*)"Loading and compiling shader. Please wait ...", 45ll );
 fb_GfxSetWindowTitle( (FBSTRING*)vr$211 );
 label$547:;
}

void _ZN9SHADERTOYD1Ev( struct $9SHADERTOY* THIS$1 )
{
 label$647:;
 if( (int64)*(uint32*)((uint8*)THIS$1 + 4ll) == 0ll ) goto label$650;
 {
  (GLUSEPROGRAM$)( 0u );
  if( (int64)*(uint32*)THIS$1 == 0ll ) goto label$652;
  {
   (GLDETACHSHADER$)( *(uint32*)((uint8*)THIS$1 + 4ll), *(uint32*)THIS$1 );
   (GLDELETESHADER$)( *(uint32*)THIS$1 );
  }
  label$652:;
  label$651:;
  (GLDELETEPROGRAM$)( *(uint32*)((uint8*)THIS$1 + 4ll) );
 }
 label$650:;
 label$649:;
 label$648:;
 fb_StrDelete( (FBSTRING*)((uint8*)THIS$1 + 8ll) );
}

int8 _ZN9SHADERTOY11COMPILEFILEER8FBSTRING( struct $9SHADERTOY* THIS$1, FBSTRING* FILENAME$1 )
{
 int8 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 1ll );
 label$653:;
 FBSTRING CODE$1;
 __builtin_memset( &CODE$1, 0, 24ll );
 int32 HFILE$1;
 int32 vr$2 = fb_FileFree( );
 HFILE$1 = vr$2;
 int32 vr$3 = fb_FileOpen( (FBSTRING*)FILENAME$1, 2u, 0u, 0u, HFILE$1, 0 );
 if( (int64)vr$3 == 0ll ) goto label$656;
 {
  FBSTRING TMP$1100$2;
  FBSTRING TMP$1101$2;
  FBSTRING TMP$1102$2;
  __builtin_memset( &TMP$1100$2, 0, 24ll );
  FBSTRING* vr$7 = fb_StrConcat( &TMP$1100$2, (void*)"can't read shader: \x22", 21ll, (void*)FILENAME$1, -1ll );
  __builtin_memset( &TMP$1101$2, 0, 24ll );
  FBSTRING* vr$10 = fb_StrConcat( &TMP$1101$2, (void*)vr$7, -1ll, (void*)"\x22", 2ll );
  __builtin_memset( &TMP$1102$2, 0, 24ll );
  FBSTRING* vr$13 = fb_StrConcat( &TMP$1102$2, (void*)vr$10, -1ll, (void*)" !", 3ll );
  fb_StrAssign( (void*)((uint8*)THIS$1 + 8ll), -1ll, (void*)vr$13, -1ll, 0 );
  fb$result$1 = (int8)0;
  fb_StrDelete( (FBSTRING*)&CODE$1 );
  goto label$654;
 }
 label$656:;
 label$655:;
 label$657:;
 int32 vr$17 = fb_FileEof( HFILE$1 );
 if( ~(int64)vr$17 == 0ll ) goto label$658;
 {
  FBSTRING ALINE$2;
  __builtin_memset( &ALINE$2, 0, 24ll );
  fb_FileLineInput( HFILE$1, (void*)&ALINE$2, -1ll, 0 );
  fb_StrConcatAssign( (void*)&CODE$1, -1ll, (void*)&ALINE$2, -1ll, 0 );
  fb_StrConcatAssign( (void*)&CODE$1, -1ll, (void*)"\x0A", 2ll, 0 );
  fb_StrDelete( (FBSTRING*)&ALINE$2 );
 }
 goto label$657;
 label$658:;
 fb_FileClose( HFILE$1 );
 int8 vr$27 = _ZN9SHADERTOY11COMPILECODEER8FBSTRING( THIS$1, &CODE$1 );
 fb$result$1 = vr$27;
 fb_StrDelete( (FBSTRING*)&CODE$1 );
 goto label$654;
 fb_StrDelete( (FBSTRING*)&CODE$1 );
 label$654:;
 return fb$result$1;
}

int8 _ZN9SHADERTOY11COMPILECODEER8FBSTRING( struct $9SHADERTOY* THIS$1, FBSTRING* USERCODE$1 )
{
 FBSTRING TMP$1134$1;
 FBSTRING TMP$1135$1;
 int8 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 1ll );
 label$659:;
 int32 LOGSIZE$1;
 __builtin_memset( &LOGSIZE$1, 0, 4ll );
 int32 STATUS$1;
 __builtin_memset( &STATUS$1, 0, 4ll );
 FBSTRING FRAGMENTPROLOG$1;
 __builtin_memset( &FRAGMENTPROLOG$1, 0, 24ll );
 FBSTRING VERSION$1;
 __builtin_memset( &VERSION$1, 0, 24ll );
 fb_StrAssign( (void*)&VERSION$1, -1ll, (void*)"#version 460\x0A", 14ll, 0 );
 fb_StrAssign( (void*)&FRAGMENTPROLOG$1, -1ll, (void*)&VERSION$1, -1ll, 0 );
 fb_StrConcatAssign( (void*)&FRAGMENTPROLOG$1, -1ll, (void*)"uniform float     iGlobalTime;\x0A", 32ll, 0 );
 fb_StrConcatAssign( (void*)&FRAGMENTPROLOG$1, -1ll, (void*)"uniform float     iTime;\x0A", 26ll, 0 );
 fb_StrConcatAssign( (void*)&FRAGMENTPROLOG$1, -1ll, (void*)"uniform vec3      iResolution;\x0A", 32ll, 0 );
 fb_StrConcatAssign( (void*)&FRAGMENTPROLOG$1, -1ll, (void*)"uniform float     iTimeDelta;\x0A", 31ll, 0 );
 fb_StrConcatAssign( (void*)&FRAGMENTPROLOG$1, -1ll, (void*)"uniform float     iFrameRate;\x0A", 31ll, 0 );
 fb_StrConcatAssign( (void*)&FRAGMENTPROLOG$1, -1ll, (void*)"uniform int       iFrame;\x0A", 27ll, 0 );
 fb_StrConcatAssign( (void*)&FRAGMENTPROLOG$1, -1ll, (void*)"uniform float     iChannelTime[4];\x0A", 36ll, 0 );
 fb_StrConcatAssign( (void*)&FRAGMENTPROLOG$1, -1ll, (void*)"uniform vec3      iChannelResolution[4];\x0A", 42ll, 0 );
 fb_StrConcatAssign( (void*)&FRAGMENTPROLOG$1, -1ll, (void*)"uniform float     iSampleRate;\x0A", 32ll, 0 );
 fb_StrConcatAssign( (void*)&FRAGMENTPROLOG$1, -1ll, (void*)"uniform vec4      iMouse;\x0A", 27ll, 0 );
 fb_StrConcatAssign( (void*)&FRAGMENTPROLOG$1, -1ll, (void*)"uniform vec4      iDate;\x0A", 26ll, 0 );
 fb_StrConcatAssign( (void*)&FRAGMENTPROLOG$1, -1ll, (void*)"uniform sampler2D iChannel0;\x0A", 30ll, 0 );
 fb_StrConcatAssign( (void*)&FRAGMENTPROLOG$1, -1ll, (void*)"uniform sampler2D iChannel1;\x0A", 30ll, 0 );
 fb_StrConcatAssign( (void*)&FRAGMENTPROLOG$1, -1ll, (void*)"uniform sampler2D iChannel2;\x0A", 30ll, 0 );
 fb_StrConcatAssign( (void*)&FRAGMENTPROLOG$1, -1ll, (void*)"uniform sampler2D iChannel3;\x0A", 30ll, 0 );
 fb_StrConcatAssign( (void*)&FRAGMENTPROLOG$1, -1ll, (void*)"uniform samplerCube iCube;\x0A", 28ll, 0 );
 FBSTRING FRAGMENTEPILOG$1;
 __builtin_memset( &FRAGMENTEPILOG$1, 0, 24ll );
 if( SWCH$ != 0x0p+0 ) goto label$662;
 {
  fb_StrConcatAssign( (void*)&FRAGMENTEPILOG$1, -1ll, (void*)"void main() {\x0A", 15ll, 0 );
  fb_StrConcatAssign( (void*)&FRAGMENTEPILOG$1, -1ll, (void*)"  vec4 color;\x0A", 15ll, 0 );
  fb_StrConcatAssign( (void*)&FRAGMENTEPILOG$1, -1ll, (void*)"  // call user shader\x0A", 23ll, 0 );
  fb_StrConcatAssign( (void*)&FRAGMENTEPILOG$1, -1ll, (void*)"  mainImage(color, gl_FragCoord.xy);\x0A", 38ll, 0 );
  fb_StrConcatAssign( (void*)&FRAGMENTEPILOG$1, -1ll, (void*)"  color.w = 1.0;\x0A", 18ll, 0 );
  fb_StrConcatAssign( (void*)&FRAGMENTEPILOG$1, -1ll, (void*)"  gl_FragColor = color;\x0A", 25ll, 0 );
  fb_StrConcatAssign( (void*)&FRAGMENTEPILOG$1, -1ll, (void*)"}\x0A", 3ll, 0 );
 }
 goto label$661;
 label$662:;
 {
  fb_StrConcatAssign( (void*)&FRAGMENTEPILOG$1, -1ll, (void*)"#define main_image mainImage", 29ll, 0 );
  fb_StrConcatAssign( (void*)&FRAGMENTEPILOG$1, -1ll, (void*)"#define frag_color fragColor", 29ll, 0 );
  fb_StrConcatAssign( (void*)&FRAGMENTEPILOG$1, -1ll, (void*)"#define frag_coord fragCoord", 29ll, 0 );
  fb_StrConcatAssign( (void*)&FRAGMENTEPILOG$1, -1ll, (void*)"#define i_resolution iResolution", 33ll, 0 );
  fb_StrConcatAssign( (void*)&FRAGMENTEPILOG$1, -1ll, (void*)"#define i_time iTime", 21ll, 0 );
  fb_StrConcatAssign( (void*)&FRAGMENTEPILOG$1, -1ll, (void*)"void main() {\x0A", 15ll, 0 );
  fb_StrConcatAssign( (void*)&FRAGMENTEPILOG$1, -1ll, (void*)"  vec4 color;\x0A", 15ll, 0 );
  fb_StrConcatAssign( (void*)&FRAGMENTEPILOG$1, -1ll, (void*)"  // call user shader\x0A", 23ll, 0 );
  fb_StrConcatAssign( (void*)&FRAGMENTEPILOG$1, -1ll, (void*)"  main_image(color, gl_FragCoord.xy);\x0A", 39ll, 0 );
  fb_StrConcatAssign( (void*)&FRAGMENTEPILOG$1, -1ll, (void*)"  color.w = 1.0;\x0A", 18ll, 0 );
  fb_StrConcatAssign( (void*)&FRAGMENTEPILOG$1, -1ll, (void*)"  gl_FragColor = color;\x0A", 25ll, 0 );
  fb_StrConcatAssign( (void*)&FRAGMENTEPILOG$1, -1ll, (void*)"}\x0A", 3ll, 0 );
 }
 label$661:;
 FBSTRING FRAGMENTCODE$1;
 __builtin_memset( &TMP$1134$1, 0, 24ll );
 FBSTRING* vr$48 = fb_StrConcat( &TMP$1134$1, (void*)&FRAGMENTPROLOG$1, -1ll, (void*)USERCODE$1, -1ll );
 __builtin_memset( &TMP$1135$1, 0, 24ll );
 FBSTRING* vr$51 = fb_StrConcat( &TMP$1135$1, (void*)vr$48, -1ll, (void*)&FRAGMENTEPILOG$1, -1ll );
 fb_StrInit( (void*)&FRAGMENTCODE$1, -1ll, (void*)vr$51, -1ll, 0 );
 uint32 vr$53 = (GLCREATESHADER$)( 35632u );
 *(uint32*)THIS$1 = vr$53;
 if( (int64)*(uint32*)THIS$1 != 0ll ) goto label$664;
 {
  fb_StrAssign( (void*)((uint8*)THIS$1 + 8ll), -1ll, (void*)"glCreateShader(GL_FRAGMENT_SHADER) failed !", 44ll, 0 );
  fb$result$1 = (int8)0;
  fb_StrDelete( (FBSTRING*)&FRAGMENTCODE$1 );
  fb_StrDelete( (FBSTRING*)&FRAGMENTEPILOG$1 );
  fb_StrDelete( (FBSTRING*)&VERSION$1 );
  fb_StrDelete( (FBSTRING*)&FRAGMENTPROLOG$1 );
  goto label$660;
 }
 label$664:;
 label$663:;
 uint8* PCODE$1;
 PCODE$1 = (uint8*)*(uint8**)&FRAGMENTCODE$1;
 (GLSHADERSOURCE$)( *(uint32*)THIS$1, 1, (uint8**)&PCODE$1, (int32*)0ull );
 (GLCOMPILESHADER$)( *(uint32*)THIS$1 );
 (GLGETSHADERIV$)( *(uint32*)THIS$1, 35713u, &STATUS$1 );
 if( (int64)STATUS$1 != 0ll ) goto label$666;
 {
  FBSTRING TMP$1138$2;
  (GLGETSHADERIV$)( *(uint32*)THIS$1, 35716u, &LOGSIZE$1 );
  FBSTRING* vr$72 = fb_SPACE( (int64)LOGSIZE$1 );
  fb_StrAssign( (void*)((uint8*)THIS$1 + 8ll), -1ll, (void*)vr$72, -1ll, 0 );
  (GLGETSHADERINFOLOG$)( *(uint32*)THIS$1, LOGSIZE$1, (int32*)0ull, *(uint8**)((uint8*)THIS$1 + 8ll) );
  __builtin_memset( &TMP$1138$2, 0, 24ll );
  FBSTRING* vr$81 = fb_StrConcat( &TMP$1138$2, (void*)"glCompileShader(FragmentShader) failed !\x0A", 42ll, (void*)((uint8*)THIS$1 + 8ll), -1ll );
  fb_StrAssign( (void*)((uint8*)THIS$1 + 8ll), -1ll, (void*)vr$81, -1ll, 0 );
  (GLDELETESHADER$)( *(uint32*)THIS$1 );
  *(uint32*)THIS$1 = 0u;
  fb$result$1 = (int8)0;
  fb_StrDelete( (FBSTRING*)&FRAGMENTCODE$1 );
  fb_StrDelete( (FBSTRING*)&FRAGMENTEPILOG$1 );
  fb_StrDelete( (FBSTRING*)&VERSION$1 );
  fb_StrDelete( (FBSTRING*)&FRAGMENTPROLOG$1 );
  goto label$660;
 }
 label$666:;
 label$665:;
 uint32 vr$90 = (GLCREATEPROGRAM$)( );
 *(uint32*)((uint8*)THIS$1 + 4ll) = vr$90;
 if( (int64)*(uint32*)((uint8*)THIS$1 + 4ll) != 0ll ) goto label$668;
 {
  fb_StrAssign( (void*)((uint8*)THIS$1 + 8ll), -1ll, (void*)"glCreateProgram() failed !", 27ll, 0 );
  (GLDELETESHADER$)( *(uint32*)THIS$1 );
  *(uint32*)THIS$1 = 0u;
  fb$result$1 = (int8)0;
  fb_StrDelete( (FBSTRING*)&FRAGMENTCODE$1 );
  fb_StrDelete( (FBSTRING*)&FRAGMENTEPILOG$1 );
  fb_StrDelete( (FBSTRING*)&VERSION$1 );
  fb_StrDelete( (FBSTRING*)&FRAGMENTPROLOG$1 );
  goto label$660;
 }
 label$668:;
 label$667:;
 (GLATTACHSHADER$)( *(uint32*)((uint8*)THIS$1 + 4ll), *(uint32*)THIS$1 );
 (GLLINKPROGRAM$)( *(uint32*)((uint8*)THIS$1 + 4ll) );
 (GLGETPROGRAMIV$)( *(uint32*)((uint8*)THIS$1 + 4ll), 35714u, &STATUS$1 );
 if( (int64)STATUS$1 != 0ll ) goto label$670;
 {
  FBSTRING TMP$1141$2;
  (GLGETPROGRAMIV$)( *(uint32*)((uint8*)THIS$1 + 4ll), 35716u, &LOGSIZE$1 );
  FBSTRING* vr$111 = fb_SPACE( (int64)LOGSIZE$1 );
  fb_StrAssign( (void*)((uint8*)THIS$1 + 8ll), -1ll, (void*)vr$111, -1ll, 0 );
  (GLGETPROGRAMINFOLOG$)( *(uint32*)((uint8*)THIS$1 + 4ll), LOGSIZE$1, (int32*)0ull, *(uint8**)((uint8*)THIS$1 + 8ll) );
  __builtin_memset( &TMP$1141$2, 0, 24ll );
  FBSTRING* vr$120 = fb_StrConcat( &TMP$1141$2, (void*)"glLinkProgram() failed !\x0A", 26ll, (void*)((uint8*)THIS$1 + 8ll), -1ll );
  fb_StrAssign( (void*)((uint8*)THIS$1 + 8ll), -1ll, (void*)vr$120, -1ll, 0 );
  (GLDELETESHADER$)( *(uint32*)THIS$1 );
  *(uint32*)THIS$1 = 0u;
  fb$result$1 = (int8)0;
  fb_StrDelete( (FBSTRING*)&FRAGMENTCODE$1 );
  fb_StrDelete( (FBSTRING*)&FRAGMENTEPILOG$1 );
  fb_StrDelete( (FBSTRING*)&VERSION$1 );
  fb_StrDelete( (FBSTRING*)&FRAGMENTPROLOG$1 );
  goto label$660;
 }
 label$670:;
 label$669:;
 fb$result$1 = (int8)-1;
 fb_StrDelete( (FBSTRING*)&FRAGMENTCODE$1 );
 fb_StrDelete( (FBSTRING*)&FRAGMENTEPILOG$1 );
 fb_StrDelete( (FBSTRING*)&VERSION$1 );
 fb_StrDelete( (FBSTRING*)&FRAGMENTPROLOG$1 );
 goto label$660;
 fb_StrDelete( (FBSTRING*)&FRAGMENTCODE$1 );
 fb_StrDelete( (FBSTRING*)&FRAGMENTEPILOG$1 );
 fb_StrDelete( (FBSTRING*)&VERSION$1 );
 fb_StrDelete( (FBSTRING*)&FRAGMENTPROLOG$1 );
 label$660:;
 return fb$result$1;
}

void _ZN6VECTORpLERS_( struct $6VECTOR* THIS$1, struct $6VECTOR* R$1 )
{
 label$671:;
 *(double*)THIS$1 = *(double*)THIS$1 + *(double*)R$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) + *(double*)((uint8*)R$1 + 8ll);
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)THIS$1 + 16ll) + *(double*)((uint8*)R$1 + 16ll);
 label$672:;
}

void _ZN6VECTORmIERS_( struct $6VECTOR* THIS$1, struct $6VECTOR* R$1 )
{
 label$673:;
 *(double*)THIS$1 = *(double*)THIS$1 - *(double*)R$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) - *(double*)((uint8*)R$1 + 8ll);
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)THIS$1 + 16ll) - *(double*)((uint8*)R$1 + 16ll);
 label$674:;
}

void _ZN6VECTORmLEd( struct $6VECTOR* THIS$1, double S$1 )
{
 label$675:;
 *(double*)THIS$1 = *(double*)THIS$1 * S$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) * S$1;
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)THIS$1 + 16ll) * S$1;
 label$676:;
}

struct $6VECTOR* _ZmiR6VECTORS0_( struct $6VECTOR* tmp$1148$1, struct $6VECTOR* L$1, struct $6VECTOR* R$1 )
{
 struct $6VECTOR TMP$1149$1;
 label$677:;
 _ZN6VECTORC1Ev( tmp$1148$1 );
 _ZN6VECTORC1Edddd( &TMP$1149$1, *(double*)L$1 - *(double*)R$1, *(double*)((uint8*)L$1 + 8ll) - *(double*)((uint8*)R$1 + 8ll), *(double*)((uint8*)L$1 + 16ll) - *(double*)((uint8*)R$1 + 16ll), 0x1.p+0 );
 __builtin_memcpy( tmp$1148$1, &TMP$1149$1, 32 );
 label$678:;
 return tmp$1148$1;
}

struct $6VECTOR* _ZplR6VECTORS0_( struct $6VECTOR* tmp$1150$1, struct $6VECTOR* L$1, struct $6VECTOR* R$1 )
{
 struct $6VECTOR TMP$1151$1;
 label$679:;
 _ZN6VECTORC1Ev( tmp$1150$1 );
 _ZN6VECTORC1Edddd( &TMP$1151$1, *(double*)L$1 + *(double*)R$1, *(double*)((uint8*)L$1 + 8ll) + *(double*)((uint8*)R$1 + 8ll), *(double*)((uint8*)L$1 + 16ll) + *(double*)((uint8*)R$1 + 16ll), 0x1.p+0 );
 __builtin_memcpy( tmp$1150$1, &TMP$1151$1, 32 );
 label$680:;
 return tmp$1150$1;
}

struct $6VECTOR* _ZmlR6VECTORd( struct $6VECTOR* tmp$1152$1, struct $6VECTOR* L$1, double R$1 )
{
 struct $6VECTOR TMP$1153$1;
 label$681:;
 _ZN6VECTORC1Ev( tmp$1152$1 );
 _ZN6VECTORC1Edddd( &TMP$1153$1, *(double*)L$1 * R$1, *(double*)((uint8*)L$1 + 8ll) * R$1, *(double*)((uint8*)L$1 + 16ll) * R$1, 0x1.p+0 );
 __builtin_memcpy( tmp$1152$1, &TMP$1153$1, 32 );
 label$682:;
 return tmp$1152$1;
}

struct $6VECTOR* _ZmldR6VECTOR( struct $6VECTOR* tmp$1154$1, double L$1, struct $6VECTOR* R$1 )
{
 struct $6VECTOR TMP$1155$1;
 label$683:;
 _ZN6VECTORC1Ev( tmp$1154$1 );
 _ZN6VECTORC1Edddd( &TMP$1155$1, L$1 * *(double*)R$1, L$1 * *(double*)((uint8*)R$1 + 8ll), L$1 * *(double*)((uint8*)R$1 + 16ll), 0x1.p+0 );
 __builtin_memcpy( tmp$1154$1, &TMP$1155$1, 32 );
 label$684:;
 return tmp$1154$1;
}

struct $6VECTOR* _ZdvR6VECTORd( struct $6VECTOR* tmp$1156$1, struct $6VECTOR* L$1, double R$1 )
{
 struct $6VECTOR TMP$1157$1;
 label$685:;
 _ZN6VECTORC1Ev( tmp$1156$1 );
 _ZN6VECTORC1Edddd( &TMP$1157$1, *(double*)L$1 / R$1, *(double*)((uint8*)L$1 + 8ll) / R$1, *(double*)((uint8*)L$1 + 16ll) / R$1, 0x1.p+0 );
 __builtin_memcpy( tmp$1156$1, &TMP$1157$1, 32 );
 label$686:;
 return tmp$1156$1;
}

struct $6VECTOR* _ZdvdR6VECTOR( struct $6VECTOR* tmp$1158$1, double L$1, struct $6VECTOR* R$1 )
{
 struct $6VECTOR TMP$1159$1;
 label$687:;
 _ZN6VECTORC1Ev( tmp$1158$1 );
 _ZN6VECTORC1Edddd( &TMP$1159$1, *(double*)R$1 / L$1, *(double*)((uint8*)R$1 + 8ll) / L$1, *(double*)((uint8*)R$1 + 16ll) / L$1, 0x1.p+0 );
 __builtin_memcpy( tmp$1158$1, &TMP$1159$1, 32 );
 label$688:;
 return tmp$1158$1;
}

double _ZmlR6VECTORS0_( struct $6VECTOR* L$1, struct $6VECTOR* R$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$689:;
 fb$result$1 = ((*(double*)L$1 * *(double*)R$1) + (*(double*)((uint8*)L$1 + 8ll) * *(double*)((uint8*)R$1 + 8ll))) + (*(double*)((uint8*)L$1 + 16ll) * *(double*)((uint8*)R$1 + 16ll));
 goto label$690;
 label$690:;
 return fb$result$1;
}

struct $6VECTOR* _Zv24idivR6VECTORS0_( struct $6VECTOR* tmp$1160$1, struct $6VECTOR* L$1, struct $6VECTOR* R$1 )
{
 struct $6VECTOR TMP$1161$1;
 label$691:;
 _ZN6VECTORC1Ev( tmp$1160$1 );
 _ZN6VECTORC1Edddd( &TMP$1161$1, (*(double*)((uint8*)L$1 + 8ll) * *(double*)((uint8*)R$1 + 16ll)) - (*(double*)((uint8*)L$1 + 16ll) * *(double*)((uint8*)R$1 + 8ll)), (*(double*)((uint8*)L$1 + 16ll) * *(double*)R$1) - (*(double*)L$1 * *(double*)((uint8*)R$1 + 16ll)), (*(double*)L$1 * *(double*)((uint8*)R$1 + 8ll)) - (*(double*)((uint8*)L$1 + 8ll) * *(double*)R$1), 0x1.p+0 );
 __builtin_memcpy( tmp$1160$1, &TMP$1161$1, 32 );
 label$692:;
 return tmp$1160$1;
}

void _ZN6VECTORC1Ev( struct $6VECTOR* THIS$1 )
{
 __builtin_memset( (double*)THIS$1, 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 8ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 16ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 24ll), 0, 8ll );
 label$693:;
 label$694:;
}

void _ZN6VECTORC1ERS_( struct $6VECTOR* THIS$1, struct $6VECTOR* INV$1 )
{
 label$695:;
 __builtin_memset( (double*)THIS$1, 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 8ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 16ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 24ll), 0, 8ll );
 *(double*)THIS$1 = *(double*)INV$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)INV$1 + 8ll);
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)INV$1 + 16ll);
 *(double*)((uint8*)THIS$1 + 24ll) = *(double*)((uint8*)INV$1 + 24ll);
 label$696:;
}

void _ZN6VECTORC1Edddd( struct $6VECTOR* THIS$1, double INX$1, double INY$1, double INZ$1, double INW$1 )
{
 label$697:;
 __builtin_memset( (double*)THIS$1, 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 8ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 16ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 24ll), 0, 8ll );
 *(double*)THIS$1 = INX$1;
 *(double*)((uint8*)THIS$1 + 8ll) = INY$1;
 *(double*)((uint8*)THIS$1 + 16ll) = INZ$1;
 *(double*)((uint8*)THIS$1 + 24ll) = INW$1;
 label$698:;
}

void _ZN6VECTORC1Ej( struct $6VECTOR* THIS$1, uint32 COL$1 )
{
 label$699:;
 uint32 V$1;
 __builtin_memset( (double*)THIS$1, 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 8ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 16ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 24ll), 0, 8ll );
 V$1 = (uint32)((int64)COL$1 & 255ll);
 COL$1 = (uint32)((int64)COL$1 >> (8ll & 63ll));
 *(double*)((uint8*)THIS$1 + 16ll) = (double)(int64)V$1 * 0x1.010101010101p-8;
 V$1 = (uint32)((int64)COL$1 & 255ll);
 COL$1 = (uint32)((int64)COL$1 >> (8ll & 63ll));
 *(double*)((uint8*)THIS$1 + 8ll) = (double)(int64)V$1 * 0x1.010101010101p-8;
 V$1 = (uint32)((int64)COL$1 & 255ll);
 COL$1 = (uint32)((int64)COL$1 >> (8ll & 63ll));
 *(double*)THIS$1 = (double)(int64)V$1 * 0x1.010101010101p-8;
 V$1 = (uint32)((int64)COL$1 & 255ll);
 *(double*)((uint8*)THIS$1 + 24ll) = (double)(int64)V$1 * 0x1.010101010101p-8;
 label$700:;
}

double _ZN6VECTOR10LENGTHSQRDEv( struct $6VECTOR* THIS$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$701:;
 fb$result$1 = ((*(double*)THIS$1 * *(double*)THIS$1) + (*(double*)((uint8*)THIS$1 + 8ll) * *(double*)((uint8*)THIS$1 + 8ll))) + (*(double*)((uint8*)THIS$1 + 16ll) * *(double*)((uint8*)THIS$1 + 16ll));
 goto label$702;
 label$702:;
 return fb$result$1;
}

double _ZN6VECTOR6LENGTHEv( struct $6VECTOR* THIS$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$703:;
 double L$1;
 L$1 = ((*(double*)THIS$1 * *(double*)THIS$1) + (*(double*)((uint8*)THIS$1 + 8ll) * *(double*)((uint8*)THIS$1 + 8ll))) + (*(double*)((uint8*)THIS$1 + 16ll) * *(double*)((uint8*)THIS$1 + 16ll));
 if( L$1 == 0x0p+0 ) goto label$706;
 {
  L$1 = __builtin_sqrt( L$1 );
  label$706:;
 }
 fb$result$1 = L$1;
 goto label$704;
 label$704:;
 return fb$result$1;
}

struct $6VECTOR* _ZN6VECTOR10NORMALIZEDEv( struct $6VECTOR* tmp$1162$1, struct $6VECTOR* THIS$1 )
{
 struct $6VECTOR TMP$1163$1;
 label$707:;
 _ZN6VECTORC1Ev( tmp$1162$1 );
 double L$1;
 L$1 = ((*(double*)THIS$1 * *(double*)THIS$1) + (*(double*)((uint8*)THIS$1 + 8ll) * *(double*)((uint8*)THIS$1 + 8ll))) + (*(double*)((uint8*)THIS$1 + 16ll) * *(double*)((uint8*)THIS$1 + 16ll));
 if( L$1 == 0x0p+0 ) goto label$710;
 {
  L$1 = 0x1.p+0 / __builtin_sqrt( L$1 );
  label$710:;
 }
 _ZN6VECTORC1Edddd( &TMP$1163$1, *(double*)THIS$1 * L$1, *(double*)((uint8*)THIS$1 + 8ll) * L$1, *(double*)((uint8*)THIS$1 + 16ll) * L$1, 0x1.p+0 );
 __builtin_memcpy( tmp$1162$1, &TMP$1163$1, 32 );
 label$708:;
 return tmp$1162$1;
}

void _ZN6VECTOR9NORMALIZEEv( struct $6VECTOR* THIS$1 )
{
 label$711:;
 double L$1;
 L$1 = ((*(double*)THIS$1 * *(double*)THIS$1) + (*(double*)((uint8*)THIS$1 + 8ll) * *(double*)((uint8*)THIS$1 + 8ll))) + (*(double*)((uint8*)THIS$1 + 16ll) * *(double*)((uint8*)THIS$1 + 16ll));
 if( L$1 == 0x0p+0 ) goto label$714;
 {
  L$1 = 0x1.p+0 / __builtin_sqrt( L$1 );
  *(double*)THIS$1 = *(double*)THIS$1 * L$1;
  *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) * L$1;
  *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)THIS$1 + 16ll) * L$1;
 }
 label$714:;
 label$713:;
 label$712:;
}

uint32 _ZN6VECTORcvjEv( struct $6VECTOR* THIS$1 )
{
 int64 TMP$1164$1;
 int64 TMP$1165$1;
 int64 TMP$1166$1;
 int64 TMP$1167$1;
 int64 TMP$1168$1;
 int64 TMP$1169$1;
 int64 TMP$1170$1;
 int64 TMP$1171$1;
 uint32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$715:;
 uint32 UR$1;
 if( *(double*)THIS$1 >= 0x0p+0 ) goto label$718;
 TMP$1165$1 = 0ll;
 goto label$725;
 label$718:;
 if( *(double*)THIS$1 <= 0x1.p+0 ) goto label$717;
 TMP$1164$1 = 255ll;
 goto label$726;
 label$717:;
 TMP$1164$1 = (int64)(uint32)((int64)__builtin_nearbyint( *(double*)THIS$1 * 0x1.FEp+7 ));
 label$726:;
 TMP$1165$1 = TMP$1164$1;
 label$725:;
 UR$1 = (uint32)TMP$1165$1;
 uint32 UG$1;
 if( *(double*)((uint8*)THIS$1 + 8ll) >= 0x0p+0 ) goto label$720;
 TMP$1167$1 = 0ll;
 goto label$727;
 label$720:;
 if( *(double*)((uint8*)THIS$1 + 8ll) <= 0x1.p+0 ) goto label$719;
 TMP$1166$1 = 255ll;
 goto label$728;
 label$719:;
 TMP$1166$1 = (int64)(uint32)((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 8ll) * 0x1.FEp+7 ));
 label$728:;
 TMP$1167$1 = TMP$1166$1;
 label$727:;
 UG$1 = (uint32)TMP$1167$1;
 uint32 UB$1;
 if( *(double*)((uint8*)THIS$1 + 16ll) >= 0x0p+0 ) goto label$722;
 TMP$1169$1 = 0ll;
 goto label$729;
 label$722:;
 if( *(double*)((uint8*)THIS$1 + 16ll) <= 0x1.p+0 ) goto label$721;
 TMP$1168$1 = 255ll;
 goto label$730;
 label$721:;
 TMP$1168$1 = (int64)(uint32)((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 16ll) * 0x1.FEp+7 ));
 label$730:;
 TMP$1169$1 = TMP$1168$1;
 label$729:;
 UB$1 = (uint32)TMP$1169$1;
 uint32 UA$1;
 if( *(double*)((uint8*)THIS$1 + 24ll) >= 0x0p+0 ) goto label$724;
 TMP$1171$1 = 0ll;
 goto label$731;
 label$724:;
 if( *(double*)((uint8*)THIS$1 + 24ll) <= 0x1.p+0 ) goto label$723;
 TMP$1170$1 = 255ll;
 goto label$732;
 label$723:;
 TMP$1170$1 = (int64)(uint32)((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 24ll) * 0x1.FEp+7 ));
 label$732:;
 TMP$1171$1 = TMP$1170$1;
 label$731:;
 UA$1 = (uint32)TMP$1171$1;
 fb$result$1 = (uint32)(((((int64)(uint32)(uint8)UR$1 << (16ll & 63ll)) | ((int64)(uint32)(uint8)UG$1 << (8ll & 63ll))) | (int64)(uint32)(uint8)UB$1) | ((int64)(uint32)(uint8)UA$1 << (24ll & 63ll)));
 label$716:;
 return fb$result$1;
}

struct $6VECTOR* MIX( struct $6VECTOR* tmp$1172$1, struct $6VECTOR* L$1, struct $6VECTOR* R$1, double A$1 )
{
 struct $6VECTOR TMP$1173$1;
 label$733:;
 _ZN6VECTORC1Ev( tmp$1172$1 );
 double V$1;
 V$1 = 0x1.p+0 - A$1;
 _ZN6VECTORC1Edddd( &TMP$1173$1, (*(double*)L$1 * V$1) + (*(double*)R$1 * A$1), (*(double*)((uint8*)L$1 + 8ll) * V$1) + (*(double*)((uint8*)R$1 + 8ll) * A$1), (*(double*)((uint8*)L$1 + 16ll) * V$1) + (*(double*)((uint8*)R$1 + 16ll) * A$1), 0x1.p+0 );
 __builtin_memcpy( tmp$1172$1, &TMP$1173$1, 32 );
 label$734:;
 return tmp$1172$1;
}

struct $6VECTOR* REFLECT( struct $6VECTOR* tmp$1174$1, struct $6VECTOR* I$1, struct $6VECTOR* N$1 )
{
 struct $6VECTOR TMP$1175$1;
 struct $6VECTOR TMP$1176$1;
 label$735:;
 double vr$0 = _ZmlR6VECTORS0_( N$1, I$1 );
 struct $6VECTOR* vr$3 = _ZmldR6VECTOR( &TMP$1175$1, vr$0 * 0x1.p+1, N$1 );
 struct $6VECTOR* vr$5 = _ZmiR6VECTORS0_( &TMP$1176$1, I$1, vr$3 );
 _ZN6VECTORC1ERS_( tmp$1174$1, vr$5 );
 goto label$736;
 label$736:;
 return tmp$1174$1;
}

struct $6VECTOR* REFRACT( struct $6VECTOR* tmp$1177$1, struct $6VECTOR* I$1, struct $6VECTOR* N$1, double ETA$1 )
{
 label$737:;
 struct $6VECTOR R$1;
 _ZN6VECTORC1Ev( &R$1 );
 double DOTNI$1;
 double vr$1 = _ZmlR6VECTORS0_( N$1, I$1 );
 DOTNI$1 = vr$1;
 double K$1;
 K$1 = -((ETA$1 * ETA$1) * (-(DOTNI$1 * DOTNI$1) + 0x1.p+0)) + 0x1.p+0;
 if( K$1 >= 0x0p+0 ) goto label$740;
 {
  _ZN6VECTORC1ERS_( tmp$1177$1, &R$1 );
  goto label$738;
 }
 goto label$739;
 label$740:;
 if( K$1 != 0x0p+0 ) goto label$741;
 {
  struct $6VECTOR TMP$1178$2;
  struct $6VECTOR TMP$1179$2;
  struct $6VECTOR TMP$1180$2;
  struct $6VECTOR* vr$13 = _ZmldR6VECTOR( &TMP$1179$2, ETA$1 * DOTNI$1, N$1 );
  struct $6VECTOR* vr$15 = _ZmldR6VECTOR( &TMP$1178$2, ETA$1, I$1 );
  _ZmiR6VECTORS0_( &TMP$1180$2, vr$15, vr$13 );
  __builtin_memcpy( &R$1, &TMP$1180$2, 32 );
 }
 goto label$739;
 label$741:;
 {
  struct $6VECTOR TMP$1181$2;
  struct $6VECTOR TMP$1182$2;
  struct $6VECTOR TMP$1183$2;
  K$1 = __builtin_sqrt( K$1 );
  struct $6VECTOR* vr$23 = _ZmldR6VECTOR( &TMP$1182$2, (ETA$1 * DOTNI$1) + K$1, N$1 );
  struct $6VECTOR* vr$25 = _ZmldR6VECTOR( &TMP$1181$2, ETA$1, I$1 );
  _ZmiR6VECTORS0_( &TMP$1183$2, vr$25, vr$23 );
  __builtin_memcpy( &R$1, &TMP$1183$2, 32 );
 }
 label$739:;
 _ZN6VECTORC1ERS_( tmp$1177$1, &R$1 );
 goto label$738;
 label$738:;
 return tmp$1177$1;
}

void LATLONTOXYZ( double LAT$1, double LON$1, double* X$1, double* Y$1, double* Z$1 )
{
 label$796:;
 double R$1;
 R$1 = __builtin_cos( (LAT$1 * 0x1.1DF46A2529D39p-6) );
 *X$1 = R$1 * __builtin_cos( (LON$1 * 0x1.1DF46A2529D39p-6) );
 *Y$1 = __builtin_sin( (LAT$1 * 0x1.1DF46A2529D39p-6) );
 *Z$1 = R$1 * __builtin_sin( (LON$1 * 0x1.1DF46A2529D39p-6) );
 label$797:;
}

void _ZN9RAYTRACERC1Ev( struct $9RAYTRACER* THIS$1 )
{
 int64 TMP$1184$1;
 int64 TMP$1185$1;
 int64 TMP$1186$1;
 int64 TMP$1187$1;
 label$802:;
 int64 W$1;
 __builtin_memset( &W$1, 0, 8ll );
 int64 H$1;
 __builtin_memset( &H$1, 0, 8ll );
 _ZN8MATERIALC1Ev( (struct $8MATERIAL*)THIS$1 );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 424ll), 0, 8ll );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 432ll), 0, 8ll );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 440ll), 0, 8ll );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 448ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 456ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 464ll), 0, 8ll );
 _ZN6VECTORC1Ev( (struct $6VECTOR*)((uint8*)THIS$1 + 472ll) );
 __builtin_memset( (double*)((uint8*)THIS$1 + 504ll), 0, 8ll );
 _ZN6VECTORC1Ev( (struct $6VECTOR*)((uint8*)THIS$1 + 512ll) );
 __builtin_memset( (double*)((uint8*)THIS$1 + 544ll), 0, 8ll );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 552ll), 0, 8ll );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 560ll), 0, 8ll );
 _ZN6VECTORC1Ev( (struct $6VECTOR*)((uint8*)THIS$1 + 568ll) );
 _ZN6VECTORC1Ev( (struct $6VECTOR*)((uint8*)THIS$1 + 600ll) );
 _ZN6VECTORC1Ev( (struct $6VECTOR*)((uint8*)THIS$1 + 632ll) );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 664ll), 0, 8ll );
 __builtin_memset( (struct $8MATERIAL***)((uint8*)THIS$1 + 672ll), 0, 8ll );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 680ll), 0, 8ll );
 __builtin_memset( (struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll), 0, 8ll );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 696ll), 0, 8ll );
 __builtin_memset( (struct $5LIGHT***)((uint8*)THIS$1 + 704ll), 0, 8ll );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 712ll), 0, 8ll );
 __builtin_memset( (struct $5MAP2D***)((uint8*)THIS$1 + 720ll), 0, 8ll );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 728ll), 0, 8ll );
 __builtin_memset( (struct $7AAPIXEL***)((uint8*)THIS$1 + 736ll), 0, 8ll );
 FBSTRING* vr$54 = fb_StrAllocTempDescZEx( (uint8*)"", 0ll );
 TMP$1187$1 = 0ll;
 TMP$1186$1 = 0ll;
 TMP$1185$1 = 0ll;
 TMP$1184$1 = 0ll;
 fb_GfxScreenInfo64( (int64*)&W$1, (int64*)&H$1, &TMP$1184$1, &TMP$1185$1, &TMP$1186$1, &TMP$1187$1, vr$54 );
 _ZN9RAYTRACER4INITElll( THIS$1, ((int64)__builtin_nearbyint( (double)W$1 * 0x1.999999999999Ap-1 )), ((int64)__builtin_nearbyint( (double)H$1 * 0x1.999999999999Ap-1 )), 5ll );
 label$803:;
}

void _ZN9RAYTRACERC1Elll( struct $9RAYTRACER* THIS$1, int64 W$1, int64 H$1, int64 MD$1 )
{
 label$804:;
 _ZN8MATERIALC1Ev( (struct $8MATERIAL*)THIS$1 );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 424ll), 0, 8ll );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 432ll), 0, 8ll );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 440ll), 0, 8ll );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 448ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 456ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 464ll), 0, 8ll );
 _ZN6VECTORC1Ev( (struct $6VECTOR*)((uint8*)THIS$1 + 472ll) );
 __builtin_memset( (double*)((uint8*)THIS$1 + 504ll), 0, 8ll );
 _ZN6VECTORC1Ev( (struct $6VECTOR*)((uint8*)THIS$1 + 512ll) );
 __builtin_memset( (double*)((uint8*)THIS$1 + 544ll), 0, 8ll );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 552ll), 0, 8ll );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 560ll), 0, 8ll );
 _ZN6VECTORC1Ev( (struct $6VECTOR*)((uint8*)THIS$1 + 568ll) );
 _ZN6VECTORC1Ev( (struct $6VECTOR*)((uint8*)THIS$1 + 600ll) );
 _ZN6VECTORC1Ev( (struct $6VECTOR*)((uint8*)THIS$1 + 632ll) );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 664ll), 0, 8ll );
 __builtin_memset( (struct $8MATERIAL***)((uint8*)THIS$1 + 672ll), 0, 8ll );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 680ll), 0, 8ll );
 __builtin_memset( (struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll), 0, 8ll );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 696ll), 0, 8ll );
 __builtin_memset( (struct $5LIGHT***)((uint8*)THIS$1 + 704ll), 0, 8ll );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 712ll), 0, 8ll );
 __builtin_memset( (struct $5MAP2D***)((uint8*)THIS$1 + 720ll), 0, 8ll );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 728ll), 0, 8ll );
 __builtin_memset( (struct $7AAPIXEL***)((uint8*)THIS$1 + 736ll), 0, 8ll );
 _ZN9RAYTRACER4INITElll( THIS$1, W$1, H$1, MD$1 );
 label$805:;
}

void _ZN9RAYTRACERD1Ev( struct $9RAYTRACER* THIS$1 )
{
 label$806:;
 if( *(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) == (struct $5MAP2D**)0ull ) goto label$809;
 {
  if( *(int64*)((uint8*)THIS$1 + 712ll) <= 0ll ) goto label$811;
  {
   {
    int64 I$4;
    I$4 = 0ll;
    int64 TMP$1188$4;
    TMP$1188$4 = *(int64*)((uint8*)THIS$1 + 712ll) + -1ll;
    goto label$812;
    label$815:;
    {
     if( *(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (I$4 << (3ll & 63ll))) == (struct $5MAP2D*)0ull ) goto label$817;
     {
      if( *(uint8**)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (I$4 << (3ll & 63ll))) + 168ll) == (uint8*)0ull ) goto label$819;
      {
       free( *(void**)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (I$4 << (3ll & 63ll))) + 168ll) );
       *(uint8**)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (I$4 << (3ll & 63ll))) + 168ll) = (uint8*)0ull;
      }
      label$819:;
      label$818:;
      free( *(void**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (I$4 << (3ll & 63ll))) );
      *(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (I$4 << (3ll & 63ll))) = (struct $5MAP2D*)0ull;
     }
     label$817:;
     label$816:;
    }
    label$813:;
    I$4 = I$4 + 1ll;
    label$812:;
    if( I$4 <= TMP$1188$4 ) goto label$815;
    label$814:;
   }
   *(int64*)((uint8*)THIS$1 + 712ll) = 0ll;
  }
  label$811:;
  label$810:;
  free( *(void**)((uint8*)THIS$1 + 720ll) );
  *(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) = (struct $5MAP2D**)0ull;
 }
 label$809:;
 label$808:;
 if( *(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) == (struct $8MATERIAL**)0ull ) goto label$821;
 {
  if( *(int64*)((uint8*)THIS$1 + 664ll) <= 0ll ) goto label$823;
  {
   {
    int64 MC$4;
    MC$4 = 0ll;
    int64 TMP$1189$4;
    TMP$1189$4 = *(int64*)((uint8*)THIS$1 + 664ll) + -1ll;
    goto label$824;
    label$827:;
    {
     if( *(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MC$4 << (3ll & 63ll))) == (struct $8MATERIAL*)0ull ) goto label$829;
     {
      free( *(void**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MC$4 << (3ll & 63ll))) );
      *(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MC$4 << (3ll & 63ll))) = (struct $8MATERIAL*)0ull;
     }
     label$829:;
     label$828:;
    }
    label$825:;
    MC$4 = MC$4 + 1ll;
    label$824:;
    if( MC$4 <= TMP$1189$4 ) goto label$827;
    label$826:;
   }
   *(int64*)((uint8*)THIS$1 + 664ll) = 0ll;
  }
  label$823:;
  label$822:;
  free( *(void**)((uint8*)THIS$1 + 672ll) );
  *(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) = (struct $8MATERIAL**)0ull;
 }
 label$821:;
 label$820:;
 if( *(struct $5LIGHT***)((uint8*)THIS$1 + 704ll) == (struct $5LIGHT**)0ull ) goto label$831;
 {
  if( *(int64*)((uint8*)THIS$1 + 696ll) <= 0ll ) goto label$833;
  {
   {
    int64 LC$4;
    LC$4 = 0ll;
    int64 TMP$1190$4;
    TMP$1190$4 = *(int64*)((uint8*)THIS$1 + 696ll) + -1ll;
    goto label$834;
    label$837:;
    {
     if( *(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 704ll) + (LC$4 << (3ll & 63ll))) == (struct $5LIGHT*)0ull ) goto label$839;
     {
      free( *(void**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 704ll) + (LC$4 << (3ll & 63ll))) );
      *(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 704ll) + (LC$4 << (3ll & 63ll))) = (struct $5LIGHT*)0ull;
     }
     label$839:;
     label$838:;
    }
    label$835:;
    LC$4 = LC$4 + 1ll;
    label$834:;
    if( LC$4 <= TMP$1190$4 ) goto label$837;
    label$836:;
   }
   *(int64*)((uint8*)THIS$1 + 696ll) = 0ll;
  }
  label$833:;
  label$832:;
  free( *(void**)((uint8*)THIS$1 + 704ll) );
  *(struct $5LIGHT***)((uint8*)THIS$1 + 704ll) = (struct $5LIGHT**)0ull;
 }
 label$831:;
 label$830:;
 if( *(struct $7AAPIXEL***)((uint8*)THIS$1 + 736ll) == (struct $7AAPIXEL**)0ull ) goto label$841;
 {
  if( *(int64*)((uint8*)THIS$1 + 728ll) <= 0ll ) goto label$843;
  {
   {
    int64 I$4;
    I$4 = 0ll;
    int64 TMP$1191$4;
    TMP$1191$4 = *(int64*)((uint8*)THIS$1 + 728ll) + -1ll;
    goto label$844;
    label$847:;
    {
     if( *(struct $7AAPIXEL**)((uint8*)*(struct $7AAPIXEL***)((uint8*)THIS$1 + 736ll) + (I$4 << (3ll & 63ll))) == (struct $7AAPIXEL*)0ull ) goto label$849;
     {
      free( *(void**)((uint8*)*(struct $7AAPIXEL***)((uint8*)THIS$1 + 736ll) + (I$4 << (3ll & 63ll))) );
      *(struct $7AAPIXEL**)((uint8*)*(struct $7AAPIXEL***)((uint8*)THIS$1 + 736ll) + (I$4 << (3ll & 63ll))) = (struct $7AAPIXEL*)0ull;
     }
     label$849:;
     label$848:;
    }
    label$845:;
    I$4 = I$4 + 1ll;
    label$844:;
    if( I$4 <= TMP$1191$4 ) goto label$847;
    label$846:;
   }
   *(int64*)((uint8*)THIS$1 + 728ll) = 0ll;
  }
  label$843:;
  label$842:;
  free( *(void**)((uint8*)THIS$1 + 736ll) );
  *(struct $7AAPIXEL***)((uint8*)THIS$1 + 736ll) = (struct $7AAPIXEL**)0ull;
 }
 label$841:;
 label$840:;
 if( *(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) == (struct $8OBJECT3D**)0ull ) goto label$851;
 {
  if( *(int64*)((uint8*)THIS$1 + 680ll) <= 0ll ) goto label$853;
  {
   {
    int64 OC$4;
    OC$4 = 0ll;
    int64 TMP$1192$4;
    TMP$1192$4 = *(int64*)((uint8*)THIS$1 + 680ll) + -1ll;
    goto label$854;
    label$857:;
    {
     if( *(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OC$4 << (3ll & 63ll))) == (struct $8OBJECT3D*)0ull ) goto label$859;
     {
      if( *(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OC$4 << (3ll & 63ll))) + 184ll) == (struct $4POLY**)0ull ) goto label$861;
      {
       if( *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OC$4 << (3ll & 63ll))) + 176ll) <= 0ll ) goto label$863;
       {
        {
         int64 PC$9;
         PC$9 = 0ll;
         int64 TMP$1193$9;
         TMP$1193$9 = *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OC$4 << (3ll & 63ll))) + 176ll) + -1ll;
         goto label$864;
         label$867:;
         {
          if( *(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OC$4 << (3ll & 63ll))) + 184ll) + (PC$9 << (3ll & 63ll))) == (struct $4POLY*)0ull ) goto label$869;
          {
           free( *(void**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OC$4 << (3ll & 63ll))) + 184ll) + (PC$9 << (3ll & 63ll))) );
           *(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OC$4 << (3ll & 63ll))) + 184ll) + (PC$9 << (3ll & 63ll))) = (struct $4POLY*)0ull;
          }
          label$869:;
          label$868:;
         }
         label$865:;
         PC$9 = PC$9 + 1ll;
         label$864:;
         if( PC$9 <= TMP$1193$9 ) goto label$867;
         label$866:;
        }
        *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OC$4 << (3ll & 63ll))) + 176ll) = 0ll;
       }
       label$863:;
       label$862:;
       free( *(void**)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OC$4 << (3ll & 63ll))) + 184ll) );
       *(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OC$4 << (3ll & 63ll))) + 184ll) = (struct $4POLY**)0ull;
      }
      label$861:;
      label$860:;
      if( *(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OC$4 << (3ll & 63ll))) + 168ll) == (struct $6VECTOR**)0ull ) goto label$871;
      {
       if( *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OC$4 << (3ll & 63ll))) + 160ll) <= 0ll ) goto label$873;
       {
        {
         int64 VC$9;
         VC$9 = 0ll;
         int64 TMP$1194$9;
         TMP$1194$9 = *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OC$4 << (3ll & 63ll))) + 160ll) + -1ll;
         goto label$874;
         label$877:;
         {
          if( *(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OC$4 << (3ll & 63ll))) + 168ll) + (VC$9 << (3ll & 63ll))) == (struct $6VECTOR*)0ull ) goto label$879;
          {
           if( *(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OC$4 << (3ll & 63ll))) + 168ll) + (VC$9 << (3ll & 63ll))) == (struct $6VECTOR*)0ull ) goto label$880;
           free( *(void**)((uint8*)*(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OC$4 << (3ll & 63ll))) + 168ll) + (VC$9 << (3ll & 63ll))) );
           label$880:;
           *(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OC$4 << (3ll & 63ll))) + 168ll) + (VC$9 << (3ll & 63ll))) = (struct $6VECTOR*)0ull;
          }
          label$879:;
          label$878:;
         }
         label$875:;
         VC$9 = VC$9 + 1ll;
         label$874:;
         if( VC$9 <= TMP$1194$9 ) goto label$877;
         label$876:;
        }
       }
       label$873:;
       label$872:;
       if( *(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OC$4 << (3ll & 63ll))) + 168ll) == (struct $6VECTOR**)0ull ) goto label$881;
       free( *(void**)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OC$4 << (3ll & 63ll))) + 168ll) );
       label$881:;
       *(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OC$4 << (3ll & 63ll))) + 168ll) = (struct $6VECTOR**)0ull;
      }
      label$871:;
      label$870:;
      free( *(void**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OC$4 << (3ll & 63ll))) );
      *(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OC$4 << (3ll & 63ll))) = (struct $8OBJECT3D*)0ull;
     }
     label$859:;
     label$858:;
    }
    label$855:;
    OC$4 = OC$4 + 1ll;
    label$854:;
    if( OC$4 <= TMP$1192$4 ) goto label$857;
    label$856:;
   }
   *(int64*)((uint8*)THIS$1 + 680ll) = 0ll;
  }
  label$853:;
  label$852:;
  free( *(void**)((uint8*)THIS$1 + 688ll) );
  *(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) = (struct $8OBJECT3D**)0ull;
 }
 label$851:;
 label$850:;
 label$807:;
}

void _ZN9RAYTRACER4INITElll( struct $9RAYTRACER* THIS$1, int64 W$1, int64 H$1, int64 MAXDEPTH$1 )
{
 int64 TMP$1195$1;
 label$882:;
 if( W$1 >= 4ll ) goto label$885;
 {
  W$1 = 4ll;
  label$885:;
 }
 if( H$1 >= 4ll ) goto label$887;
 {
  H$1 = 4ll;
  label$887:;
 }
 *(int64*)((uint8*)THIS$1 + 424ll) = W$1;
 *(int64*)((uint8*)THIS$1 + 440ll) = ((int64)__builtin_nearbyint( (double)W$1 * 0x1.p-1 ));
 *(int64*)((uint8*)THIS$1 + 432ll) = H$1;
 *(int64*)((uint8*)THIS$1 + 448ll) = ((int64)__builtin_nearbyint( (double)H$1 * 0x1.p-1 ));
 if( W$1 <= H$1 ) goto label$888;
 TMP$1195$1 = W$1;
 goto label$891;
 label$888:;
 TMP$1195$1 = H$1;
 label$891:;
 *(double*)((uint8*)THIS$1 + 456ll) = (double)TMP$1195$1;
 *(double*)((uint8*)THIS$1 + 464ll) = 0x1.p+0 / *(double*)((uint8*)THIS$1 + 456ll);
 *(double*)((uint8*)THIS$1 + 512ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 520ll) = 0x1.p-1;
 *(double*)((uint8*)THIS$1 + 528ll) = 0x1.p-1;
 *(double*)((uint8*)THIS$1 + 472ll) = 0x1.999999999999Ap-4;
 *(double*)((uint8*)THIS$1 + 480ll) = 0x1.999999999999Ap-4;
 *(double*)((uint8*)THIS$1 + 488ll) = 0x1.999999999999Ap-4;
 *(int64*)((uint8*)THIS$1 + 552ll) = MAXDEPTH$1;
 if( *(int64*)((uint8*)THIS$1 + 552ll) >= 0ll ) goto label$890;
 {
  *(int64*)((uint8*)THIS$1 + 552ll) = 0ll;
  label$890:;
 }
 _ZN9RAYTRACER11ADDMATERIALEddddddddddaaallll( THIS$1, 0x1.p-1, 0x1.p-1, 0x1.p-1, 0x1.6666666666666p-1, 0x1.3333333333333p-2, 0x1.p-2, 0x1.999999999999Ap-1, 0x1.999999999999Ap-3, 0x0p+0, 0x0p+0, (int8)-1, (int8)-1, (int8)-1, -1ll, -1ll, -1ll, -1ll );
 label$883:;
}

void _ZN9RAYTRACER6ADJUSTEPddd( struct $9RAYTRACER* THIS$1, double* ADJVALUE$1, double MINVALUE$1, double MAXVALUE$1 )
{
 label$892:;
 if( ADJVALUE$1 == (double*)0ull ) goto label$895;
 {
  if( *ADJVALUE$1 >= MINVALUE$1 ) goto label$897;
  {
   *ADJVALUE$1 = MINVALUE$1;
  }
  goto label$896;
  label$897:;
  if( *ADJVALUE$1 <= MAXVALUE$1 ) goto label$898;
  {
   *ADJVALUE$1 = MAXVALUE$1;
  }
  label$898:;
  label$896:;
 }
 label$895:;
 label$894:;
 label$893:;
}

int64 _ZN9RAYTRACER8ADDMAP2DER8FBSTRING11MAP2D_TYPESddd( struct $9RAYTRACER* THIS$1, FBSTRING* FILENAME$1, $11MAP2D_TYPES MAPTYPE$1, double REPEATX$1, double REPEATY$1, double REPEATZ$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$899:;
 int64 I$1;
 __builtin_memset( &I$1, 0, 8ll );
 int64 C$1;
 __builtin_memset( &C$1, 0, 8ll );
 int64 RR$1;
 __builtin_memset( &RR$1, 0, 8ll );
 int64 REAL_PITCH$1;
 __builtin_memset( &REAL_PITCH$1, 0, 8ll );
 int64 TARGETADD$1;
 __builtin_memset( &TARGETADD$1, 0, 8ll );
 int64 SOURCEADD$1;
 __builtin_memset( &SOURCEADD$1, 0, 8ll );
 int64 HFILE$1;
 __builtin_memset( &HFILE$1, 0, 8ll );
 uint8 ONEBYTE$1;
 __builtin_memset( &ONEBYTE$1, 0, 1ll );
 uint8* LREAL_PIMAGE$1;
 __builtin_memset( &LREAL_PIMAGE$1, 0, 8ll );
 uint8* LPSOURCEROW$1;
 __builtin_memset( &LPSOURCEROW$1, 0, 8ll );
 uint8* LPTARGETROW$1;
 __builtin_memset( &LPTARGETROW$1, 0, 8ll );
 double R$1;
 __builtin_memset( &R$1, 0, 8ll );
 double G$1;
 __builtin_memset( &G$1, 0, 8ll );
 double B$1;
 __builtin_memset( &B$1, 0, 8ll );
 struct $N9RAYTRACER7FBARRAYI8PALENTRYEE {
  struct $8PALENTRY* DATA;
  struct $8PALENTRY* PTR;
  int64 SIZE;
  int64 ELEMENT_LEN;
  int64 DIMENSIONS;
  int64 FLAGS;
  struct $16__FB_ARRAYDIMTB$ DIMTB[8];
 };
 extern int __$fb_structsizecheck[(sizeof( struct $N9RAYTRACER7FBARRAYI8PALENTRYEE ) == 240) ? 1 : -1];
 struct $N9RAYTRACER7FBARRAYI8PALENTRYEE PAL$1;
 *(struct $8PALENTRY**)&PAL$1 = (struct $8PALENTRY*)0ull;
 *(struct $8PALENTRY**)((uint8*)&PAL$1 + 8ll) = (struct $8PALENTRY*)0ull;
 *(int64*)((uint8*)&PAL$1 + 16ll) = 0ll;
 *(int64*)((uint8*)&PAL$1 + 24ll) = 154ll;
 *(int64*)((uint8*)&PAL$1 + 32ll) = 0ll;
 *(int64*)((uint8*)&PAL$1 + 40ll) = 8ll;
 __builtin_memset( (void*)((uint8*)&PAL$1 + 48ll), 0, 192ll );
 struct $9BMPHEADER HEADER$1;
 _ZN9BMPHEADERC1Ev( &HEADER$1 );
 if( REPEATX$1 >= 0x1.0624DD2F1A9FCp-10 ) goto label$902;
 {
  REPEATX$1 = 0x1.0624DD2F1A9FCp-10;
  label$902:;
 }
 if( REPEATY$1 >= 0x1.0624DD2F1A9FCp-10 ) goto label$904;
 {
  REPEATY$1 = 0x1.0624DD2F1A9FCp-10;
  label$904:;
 }
 if( REPEATZ$1 >= 0x1.0624DD2F1A9FCp-10 ) goto label$906;
 {
  REPEATZ$1 = 0x1.0624DD2F1A9FCp-10;
  label$906:;
 }
 int32 vr$17 = fb_FileFree( );
 HFILE$1 = (int64)vr$17;
 int32 vr$20 = fb_FileOpen( (FBSTRING*)FILENAME$1, 0u, 1u, 0u, (int32)HFILE$1, 0 );
 if( (int64)vr$20 != 0ll ) goto label$908;
 {
  int64 vr$23 = fb_FileSize( (int32)HFILE$1 );
  if( vr$23 >= 44ll ) goto label$910;
  {
   fb_FileClose( (int32)HFILE$1 );
   fb$result$1 = -1ll;
   fb_ArrayEraseObj( (struct $7FBARRAYIvE*)&PAL$1, (void*)&_ZN8PALENTRYC1Ev, (void*)0ull );
   goto label$900;
  }
  label$910:;
  label$909:;
  fb_FileGetLarge( (int32)HFILE$1, 0ll, (void*)&HEADER$1, 150ull );
  if( (int64)*(uint16*)((uint8*)&HEADER$1 + 96ll) == 19778ll ) goto label$912;
  {
   fb_FileClose( (int32)HFILE$1 );
   fb$result$1 = -1ll;
   fb_ArrayEraseObj( (struct $7FBARRAYIvE*)&PAL$1, (void*)&_ZN8PALENTRYC1Ev, (void*)0ull );
   goto label$900;
  }
  label$912:;
  label$911:;
  if( (int64)*(int32*)((uint8*)&HEADER$1 + 126ll) == 0ll ) goto label$914;
  {
   fb_FileClose( (int32)HFILE$1 );
   fb$result$1 = -1ll;
   fb_ArrayEraseObj( (struct $7FBARRAYIvE*)&PAL$1, (void*)&_ZN8PALENTRYC1Ev, (void*)0ull );
   goto label$900;
  }
  label$914:;
  label$913:;
  if( (int64)*(int16*)((uint8*)&HEADER$1 + 124ll) >= 8ll ) goto label$916;
  {
   fb_FileClose( (int32)HFILE$1 );
   fb$result$1 = -1ll;
   fb_ArrayEraseObj( (struct $7FBARRAYIvE*)&PAL$1, (void*)&_ZN8PALENTRYC1Ev, (void*)0ull );
   goto label$900;
  }
  label$916:;
  label$915:;
  {
   int64 TMP$1198$3;
   if( (int64)*(int32*)((uint8*)&HEADER$1 + 110ll) <= 40ll ) goto label$918;
   {
    {
     I$1 = 1ll;
     int64 TMP$1196$5;
     TMP$1196$5 = (int64)*(int32*)((uint8*)&HEADER$1 + 110ll) + -40ll;
     goto label$919;
     label$922:;
     {
      fb_FileGetLarge( (int32)HFILE$1, 0ll, (void*)&ONEBYTE$1, 1ull );
     }
     label$920:;
     I$1 = I$1 + 1ll;
     label$919:;
     if( I$1 <= TMP$1196$5 ) goto label$922;
     label$921:;
    }
   }
   label$918:;
   label$917:;
   if( (int64)*(int16*)((uint8*)&HEADER$1 + 124ll) != 8ll ) goto label$924;
   {
    if( (int64)*(int32*)((uint8*)&HEADER$1 + 142ll) != 0ll ) goto label$926;
    {
     *(int32*)((uint8*)&HEADER$1 + 142ll) = 256;
     label$926:;
    }
    fb_ArrayRedimObj( (struct $7FBARRAYIvE*)&PAL$1, 154ull, (void*)&_ZN8PALENTRYC1Ev, (void*)0ull, 1ull, 0ll, (int64)*(int32*)((uint8*)&HEADER$1 + 142ll) + -1ll );
    fb_FileGetArrayLarge( (int32)HFILE$1, 0ll, (struct $7FBARRAYIvE*)&PAL$1 );
   }
   label$924:;
   label$923:;
   fb_FileSeek( (int32)HFILE$1, *(int32*)((uint8*)&HEADER$1 + 106ll) );
   void* vr$52 = calloc( (uint64)*(int32*)((uint8*)&HEADER$1 + 130ll), 1ull );
   LREAL_PIMAGE$1 = (uint8*)vr$52;
   fb_FileGetLarge( (int32)HFILE$1, 0ll, (void*)LREAL_PIMAGE$1, (uint64)(int64)*(int32*)((uint8*)&HEADER$1 + 130ll) );
   fb_FileClose( (int32)HFILE$1 );
   *(int16*)((uint8*)&HEADER$1 + 124ll) = (int16)((int64)*(int16*)((uint8*)&HEADER$1 + 124ll) >> (3ll & 63ll));
   void* vr$63 = realloc( *(void**)((uint8*)THIS$1 + 720ll), (uint64)((*(int64*)((uint8*)THIS$1 + 712ll) << (3ll & 63ll)) + 8ll) );
   *(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) = (struct $5MAP2D**)vr$63;
   void* vr$65 = malloc( 208ull );
   *(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (*(int64*)((uint8*)THIS$1 + 712ll) << (3ll & 63ll))) = (struct $5MAP2D*)vr$65;
   _ZN9BMPHEADERaSERKS_( (struct $9BMPHEADER*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (*(int64*)((uint8*)THIS$1 + 712ll) << (3ll & 63ll))) + 16ll), (struct $9BMPHEADER*)&HEADER$1 );
   *($11MAP2D_TYPES*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (*(int64*)((uint8*)THIS$1 + 712ll) << (3ll & 63ll))) + 8ll) = MAPTYPE$1;
   *(double*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (*(int64*)((uint8*)THIS$1 + 712ll) << (3ll & 63ll))) + 176ll) = REPEATX$1;
   *(double*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (*(int64*)((uint8*)THIS$1 + 712ll) << (3ll & 63ll))) + 184ll) = REPEATY$1;
   *(double*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (*(int64*)((uint8*)THIS$1 + 712ll) << (3ll & 63ll))) + 192ll) = REPEATZ$1;
   if( (int64)*(int32*)((uint8*)&HEADER$1 + 118ll) >= 0ll ) goto label$927;
   TMP$1198$3 = -(int64)*(int32*)((uint8*)&HEADER$1 + 118ll);
   goto label$984;
   label$927:;
   TMP$1198$3 = (int64)*(int32*)((uint8*)&HEADER$1 + 118ll);
   label$984:;
   REAL_PITCH$1 = (int64)*(int32*)((uint8*)&HEADER$1 + 130ll) / TMP$1198$3;
   REAL_PITCH$1 = REAL_PITCH$1 - ((int64)*(int32*)((uint8*)&HEADER$1 + 114ll) * (int64)*(int16*)((uint8*)&HEADER$1 + 124ll));
   {
    if( MAPTYPE$1 != 0ll ) goto label$929;
    label$930:;
    {
     int64 TMP$1199$5;
     if( (int64)*(int32*)((uint8*)&HEADER$1 + 118ll) >= 0ll ) goto label$931;
     TMP$1199$5 = -(int64)*(int32*)((uint8*)&HEADER$1 + 118ll);
     goto label$985;
     label$931:;
     TMP$1199$5 = (int64)*(int32*)((uint8*)&HEADER$1 + 118ll);
     label$985:;
     void* vr$114 = malloc( (uint64)(((int64)*(int32*)((uint8*)&HEADER$1 + 114ll) * TMP$1199$5) * 3ll) );
     *(uint8**)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (*(int64*)((uint8*)THIS$1 + 712ll) << (3ll & 63ll))) + 168ll) = (uint8*)vr$114;
     TARGETADD$1 = (int64)*(int32*)((uint8*)&HEADER$1 + 114ll) * 3ll;
    }
    goto label$928;
    label$929:;
    {
     int64 TMP$1200$5;
     if( (int64)*(int32*)((uint8*)&HEADER$1 + 118ll) >= 0ll ) goto label$933;
     TMP$1200$5 = -(int64)*(int32*)((uint8*)&HEADER$1 + 118ll);
     goto label$986;
     label$933:;
     TMP$1200$5 = (int64)*(int32*)((uint8*)&HEADER$1 + 118ll);
     label$986:;
     void* vr$128 = malloc( (uint64)((int64)*(int32*)((uint8*)&HEADER$1 + 114ll) * TMP$1200$5) );
     *(uint8**)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (*(int64*)((uint8*)THIS$1 + 712ll) << (3ll & 63ll))) + 168ll) = (uint8*)vr$128;
     TARGETADD$1 = (int64)*(int32*)((uint8*)&HEADER$1 + 114ll);
    }
    label$932:;
    label$928:;
   }
   LPSOURCEROW$1 = LREAL_PIMAGE$1;
   SOURCEADD$1 = ((int64)*(int32*)((uint8*)&HEADER$1 + 114ll) * (int64)*(int16*)((uint8*)&HEADER$1 + 124ll)) + REAL_PITCH$1;
   LPTARGETROW$1 = *(uint8**)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (*(int64*)((uint8*)THIS$1 + 712ll) << (3ll & 63ll))) + 168ll);
   if( (int64)*(int32*)((uint8*)&HEADER$1 + 118ll) >= 0ll ) goto label$935;
   {
    int64 TMP$1201$4;
    if( (int64)*(int32*)((uint8*)&HEADER$1 + 118ll) >= 0ll ) goto label$936;
    TMP$1201$4 = -(int64)*(int32*)((uint8*)&HEADER$1 + 118ll);
    goto label$987;
    label$936:;
    TMP$1201$4 = (int64)*(int32*)((uint8*)&HEADER$1 + 118ll);
    label$987:;
    *(int32*)((uint8*)&HEADER$1 + 118ll) = (int32)TMP$1201$4;
    SOURCEADD$1 = SOURCEADD$1 * -1ll;
    LPSOURCEROW$1 = (uint8*)(LREAL_PIMAGE$1 + (((int64)*(int32*)((uint8*)&HEADER$1 + 118ll) + -1ll) * SOURCEADD$1));
   }
   label$935:;
   label$934:;
   {
    int16 TMP$1202$4;
    TMP$1202$4 = *(int16*)((uint8*)&HEADER$1 + 124ll);
    if( (int64)TMP$1202$4 != 1ll ) goto label$938;
    label$939:;
    {
     {
      if( MAPTYPE$1 != 0ll ) goto label$941;
      label$942:;
      {
       {
        RR$1 = 0ll;
        int64 TMP$1203$8;
        TMP$1203$8 = (int64)*(int32*)((uint8*)&HEADER$1 + 118ll) + -1ll;
        goto label$943;
        label$946:;
        {
         {
          C$1 = 0ll;
          int64 TMP$1204$10;
          TMP$1204$10 = (int64)*(int32*)((uint8*)&HEADER$1 + 114ll) + -1ll;
          goto label$947;
          label$950:;
          {
           I$1 = (int64)*(uint8*)(LPSOURCEROW$1 + C$1);
           *(uint8*)(LPTARGETROW$1 + (C$1 * 3ll)) = *(uint8*)((uint8*)((I$1 * 154ll) + *(int64*)&PAL$1) + 152ll);
           *(uint8*)((uint8*)(LPTARGETROW$1 + (C$1 * 3ll)) + 1ll) = *(uint8*)((uint8*)((I$1 * 154ll) + *(int64*)&PAL$1) + 151ll);
           *(uint8*)((uint8*)(LPTARGETROW$1 + (C$1 * 3ll)) + 2ll) = *(uint8*)((uint8*)((I$1 * 154ll) + *(int64*)&PAL$1) + 150ll);
          }
          label$948:;
          C$1 = C$1 + 1ll;
          label$947:;
          if( C$1 <= TMP$1204$10 ) goto label$950;
          label$949:;
         }
         LPTARGETROW$1 = (uint8*)(LPTARGETROW$1 + TARGETADD$1);
         LPSOURCEROW$1 = (uint8*)(LPSOURCEROW$1 + SOURCEADD$1);
        }
        label$944:;
        RR$1 = RR$1 + 1ll;
        label$943:;
        if( RR$1 <= TMP$1203$8 ) goto label$946;
        label$945:;
       }
      }
      goto label$940;
      label$941:;
      {
       {
        RR$1 = 0ll;
        int64 TMP$1205$8;
        TMP$1205$8 = (int64)*(int32*)((uint8*)&HEADER$1 + 118ll) + -1ll;
        goto label$952;
        label$955:;
        {
         {
          C$1 = 0ll;
          int64 TMP$1206$10;
          TMP$1206$10 = (int64)*(int32*)((uint8*)&HEADER$1 + 114ll) + -1ll;
          goto label$956;
          label$959:;
          {
           I$1 = (int64)*(uint8*)(LPSOURCEROW$1 + C$1);
           R$1 = (double)(int64)*(uint8*)((uint8*)((I$1 * 154ll) + *(int64*)&PAL$1) + 150ll) * 0x1.010101010101p-8;
           G$1 = (double)(int64)*(uint8*)((uint8*)((I$1 * 154ll) + *(int64*)&PAL$1) + 151ll) * 0x1.010101010101p-8;
           B$1 = (double)(int64)*(uint8*)((uint8*)((I$1 * 154ll) + *(int64*)&PAL$1) + 152ll) * 0x1.010101010101p-8;
           *(uint8*)(LPTARGETROW$1 + C$1) = (uint8)((int32)__builtin_nearbyint( __builtin_sqrt( (((R$1 * R$1) + (G$1 * G$1)) + (B$1 * B$1)) ) * 0x1.FEp+7 ));
          }
          label$957:;
          C$1 = C$1 + 1ll;
          label$956:;
          if( C$1 <= TMP$1206$10 ) goto label$959;
          label$958:;
         }
         LPTARGETROW$1 = (uint8*)(LPTARGETROW$1 + TARGETADD$1);
         LPSOURCEROW$1 = (uint8*)(LPSOURCEROW$1 + SOURCEADD$1);
        }
        label$953:;
        RR$1 = RR$1 + 1ll;
        label$952:;
        if( RR$1 <= TMP$1205$8 ) goto label$955;
        label$954:;
       }
      }
      label$951:;
      label$940:;
     }
    }
    goto label$937;
    label$938:;
    if( (int64)TMP$1202$4 != 3ll ) goto label$960;
    label$961:;
    {
     {
      if( MAPTYPE$1 != 0ll ) goto label$963;
      label$964:;
      {
       {
        RR$1 = 0ll;
        int64 TMP$1207$8;
        TMP$1207$8 = (int64)*(int32*)((uint8*)&HEADER$1 + 118ll) + -1ll;
        goto label$965;
        label$968:;
        {
         {
          C$1 = 0ll;
          int64 TMP$1208$10;
          TMP$1208$10 = (int64)*(int32*)((uint8*)&HEADER$1 + 114ll) + -1ll;
          goto label$969;
          label$972:;
          {
           *(uint8*)(LPTARGETROW$1 + (C$1 * 3ll)) = *(uint8*)(LPSOURCEROW$1 + (C$1 * (int64)*(int16*)((uint8*)&HEADER$1 + 124ll)));
           *(uint8*)((uint8*)(LPTARGETROW$1 + (C$1 * 3ll)) + 1ll) = *(uint8*)((uint8*)(LPSOURCEROW$1 + (C$1 * (int64)*(int16*)((uint8*)&HEADER$1 + 124ll))) + 2ll);
           *(uint8*)((uint8*)(LPTARGETROW$1 + (C$1 * 3ll)) + 2ll) = *(uint8*)((uint8*)(LPSOURCEROW$1 + (C$1 * (int64)*(int16*)((uint8*)&HEADER$1 + 124ll))) + 1ll);
          }
          label$970:;
          C$1 = C$1 + 1ll;
          label$969:;
          if( C$1 <= TMP$1208$10 ) goto label$972;
          label$971:;
         }
         LPTARGETROW$1 = (uint8*)(LPTARGETROW$1 + TARGETADD$1);
         LPSOURCEROW$1 = (uint8*)(LPSOURCEROW$1 + SOURCEADD$1);
        }
        label$966:;
        RR$1 = RR$1 + 1ll;
        label$965:;
        if( RR$1 <= TMP$1207$8 ) goto label$968;
        label$967:;
       }
      }
      goto label$962;
      label$963:;
      {
       {
        RR$1 = 0ll;
        int64 TMP$1209$8;
        TMP$1209$8 = (int64)*(int32*)((uint8*)&HEADER$1 + 118ll) + -1ll;
        goto label$974;
        label$977:;
        {
         {
          C$1 = 0ll;
          int64 TMP$1210$10;
          TMP$1210$10 = (int64)*(int32*)((uint8*)&HEADER$1 + 114ll) + -1ll;
          goto label$978;
          label$981:;
          {
           R$1 = (double)(int64)*(uint8*)(LPSOURCEROW$1 + (C$1 * (int64)*(int16*)((uint8*)&HEADER$1 + 124ll))) * 0x1.010101010101p-8;
           B$1 = (double)(int64)*(uint8*)((uint8*)(LPSOURCEROW$1 + (C$1 * (int64)*(int16*)((uint8*)&HEADER$1 + 124ll))) + 1ll) * 0x1.010101010101p-8;
           G$1 = (double)(int64)*(uint8*)((uint8*)(LPSOURCEROW$1 + (C$1 * (int64)*(int16*)((uint8*)&HEADER$1 + 124ll))) + 2ll) * 0x1.010101010101p-8;
           *(uint8*)(LPTARGETROW$1 + C$1) = (uint8)((int32)__builtin_nearbyint( __builtin_sqrt( (((R$1 * R$1) + (G$1 * G$1)) + (B$1 * B$1)) ) * 0x1.FEp+7 ));
          }
          label$979:;
          C$1 = C$1 + 1ll;
          label$978:;
          if( C$1 <= TMP$1210$10 ) goto label$981;
          label$980:;
         }
         LPTARGETROW$1 = (uint8*)(LPTARGETROW$1 + TARGETADD$1);
         LPSOURCEROW$1 = (uint8*)(LPSOURCEROW$1 + SOURCEADD$1);
        }
        label$975:;
        RR$1 = RR$1 + 1ll;
        label$974:;
        if( RR$1 <= TMP$1209$8 ) goto label$977;
        label$976:;
       }
      }
      label$973:;
      label$962:;
     }
    }
    label$960:;
    label$937:;
   }
  }
  if( LREAL_PIMAGE$1 == (uint8*)0ull ) goto label$983;
  {
   free( (void*)LREAL_PIMAGE$1 );
   label$983:;
  }
  fb$result$1 = *(int64*)((uint8*)THIS$1 + 712ll);
  *(int64*)((uint8*)THIS$1 + 712ll) = *(int64*)((uint8*)THIS$1 + 712ll) + 1ll;
 }
 goto label$907;
 label$908:;
 {
  fb$result$1 = -1ll;
  fb_ArrayEraseObj( (struct $7FBARRAYIvE*)&PAL$1, (void*)&_ZN8PALENTRYC1Ev, (void*)0ull );
  goto label$900;
 }
 label$907:;
 fb_ArrayEraseObj( (struct $7FBARRAYIvE*)&PAL$1, (void*)&_ZN8PALENTRYC1Ev, (void*)0ull );
 label$900:;
 return fb$result$1;
}

void _ZN9RAYTRACER8GETMAPXYEllR6VECTORS1_( struct $9RAYTRACER* THIS$1, int64 OBJID$1, int64 POLYID$1, struct $6VECTOR* HITPOINT$1, struct $6VECTOR* MAPXY$1 )
{
 label$988:;
 struct $6VECTOR AD$1;
 _ZN6VECTORC1Ev( &AD$1 );
 struct $6VECTOR BD$1;
 _ZN6VECTORC1Ev( &BD$1 );
 struct $6VECTOR B$1;
 _ZN6VECTORC1Ev( &B$1 );
 struct $6VECTOR C$1;
 _ZN6VECTORC1Ev( &C$1 );
 struct $6VECTOR D$1;
 _ZN6VECTORC1Ev( &D$1 );
 double R$1;
 __builtin_memset( &R$1, 0, 8ll );
 double DOTC$1;
 __builtin_memset( &DOTC$1, 0, 8ll );
 double ANGLE$1;
 __builtin_memset( &ANGLE$1, 0, 8ll );
 double X$1;
 __builtin_memset( &X$1, 0, 8ll );
 double Y$1;
 __builtin_memset( &Y$1, 0, 8ll );
 double XDIM$1;
 __builtin_memset( &XDIM$1, 0, 8ll );
 double YDIM$1;
 __builtin_memset( &YDIM$1, 0, 8ll );
 struct $4POLY* LPPOLY$1;
 __builtin_memset( &LPPOLY$1, 0, 8ll );
 {
  $14OBJECT3D_TYPES TMP$1212$2;
  TMP$1212$2 = *($14OBJECT3D_TYPES*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll)));
  if( TMP$1212$2 != 1ll ) goto label$991;
  label$992:;
  {
   struct $6VECTOR TMP$1213$3;
   struct $6VECTOR TMP$1214$3;
   struct $6VECTOR TMP$1215$3;
   struct $6VECTOR TMP$1216$3;
   struct $6VECTOR TMP$1217$3;
   LPPOLY$1 = *(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 184ll) + (POLYID$1 << (3ll & 63ll)));
   _ZmiR6VECTORS0_( &TMP$1213$3, HITPOINT$1, *(*(struct $6VECTOR***)((uint8*)LPPOLY$1 + 536ll)) );
   __builtin_memcpy( &C$1, &TMP$1213$3, 32 );
   double vr$29 = _ZN6VECTOR6LENGTHEv( &C$1 );
   DOTC$1 = vr$29;
   _ZmiR6VECTORS0_( &TMP$1214$3, *(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)LPPOLY$1 + 536ll) + 8ll), *(*(struct $6VECTOR***)((uint8*)LPPOLY$1 + 536ll)) );
   __builtin_memcpy( &AD$1, &TMP$1214$3, 32 );
   double vr$38 = _ZN6VECTOR6LENGTHEv( &AD$1 );
   XDIM$1 = vr$38;
   _ZmiR6VECTORS0_( &TMP$1215$3, *(struct $6VECTOR**)((uint8*)((uint8*)*(struct $6VECTOR***)((uint8*)LPPOLY$1 + 536ll) + (*(int64*)((uint8*)LPPOLY$1 + 528ll) << (3ll & 63ll))) + -8ll), *(*(struct $6VECTOR***)((uint8*)LPPOLY$1 + 536ll)) );
   __builtin_memcpy( &BD$1, &TMP$1215$3, 32 );
   double vr$49 = _ZN6VECTOR6LENGTHEv( &BD$1 );
   YDIM$1 = vr$49;
   _ZmlR6VECTORd( &TMP$1216$3, &AD$1, 0x1.p+0 / XDIM$1 );
   __builtin_memcpy( &B$1, &TMP$1216$3, 32 );
   _ZmlR6VECTORd( &TMP$1217$3, &C$1, 0x1.p+0 / DOTC$1 );
   __builtin_memcpy( &D$1, &TMP$1217$3, 32 );
   double vr$62 = _ZmlR6VECTORS0_( &B$1, &D$1 );
   ANGLE$1 = vr$62;
   Y$1 = DOTC$1 * ANGLE$1;
   ANGLE$1 = __builtin_sin( __builtin_acos( ANGLE$1 ) );
   X$1 = DOTC$1 * ANGLE$1;
   *(double*)MAPXY$1 = ((X$1 * 0x1.p+0) + 0x1.p-1) / XDIM$1;
   *(double*)((uint8*)MAPXY$1 + 8ll) = ((Y$1 * 0x1.p+0) + 0x1.p-1) / YDIM$1;
  }
  goto label$990;
  label$991:;
  if( TMP$1212$2 != 0ll ) goto label$993;
  label$994:;
  {
   X$1 = *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 112ll) - *(double*)HITPOINT$1;
   Y$1 = (*(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 120ll) - *(double*)((uint8*)HITPOINT$1 + 8ll)) * -0x1.p+0;
   R$1 = *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 152ll);
   *(double*)MAPXY$1 = ((X$1 / R$1) * 0x1.p-1) + 0x1.p-1;
   *(double*)((uint8*)MAPXY$1 + 8ll) = ((Y$1 / R$1) * 0x1.p-1) + 0x1.p-1;
  }
  label$993:;
  label$990:;
 }
 label$989:;
}

double _ZN9RAYTRACER18GETHIGHTFIELDVALUEElll13BUMP_METHODESa( struct $9RAYTRACER* THIS$1, int64 MAPID$1, int64 X$1, int64 Y$1, $13BUMP_METHODES METHODE$1, int8 INVERSE$1 )
{
 int64 TMP$1218$1;
 int64 TMP$1219$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$995:;
 int64 PTR1$1;
 __builtin_memset( &PTR1$1, 0, 8ll );
 int64 PTR2$1;
 __builtin_memset( &PTR2$1, 0, 8ll );
 int64 PTR3$1;
 __builtin_memset( &PTR3$1, 0, 8ll );
 double H1$1;
 __builtin_memset( &H1$1, 0, 8ll );
 double H2$1;
 __builtin_memset( &H2$1, 0, 8ll );
 double H3$1;
 __builtin_memset( &H3$1, 0, 8ll );
 double H$1;
 __builtin_memset( &H$1, 0, 8ll );
 if( X$1 >= 0ll ) goto label$997;
 TMP$1218$1 = -X$1;
 goto label$1006;
 label$997:;
 TMP$1218$1 = X$1;
 label$1006:;
 X$1 = TMP$1218$1 % (int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (MAPID$1 << (3ll & 63ll))) + 130ll);
 if( Y$1 >= 0ll ) goto label$998;
 TMP$1219$1 = -Y$1;
 goto label$1007;
 label$998:;
 TMP$1219$1 = Y$1;
 label$1007:;
 Y$1 = TMP$1219$1 % (int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (MAPID$1 << (3ll & 63ll))) + 134ll);
 {
  if( METHODE$1 != 0ll ) goto label$1000;
  label$1001:;
  {
   PTR1$1 = (Y$1 * (int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (MAPID$1 << (3ll & 63ll))) + 130ll)) + X$1;
   PTR2$1 = (Y$1 * (int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (MAPID$1 << (3ll & 63ll))) + 130ll)) + ((X$1 + 1ll) % (int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (MAPID$1 << (3ll & 63ll))) + 130ll));
   H1$1 = (double)(int64)*(uint8*)(*(uint8**)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (MAPID$1 << (3ll & 63ll))) + 168ll) + PTR1$1) * 0x1.010101010101p-8;
   H2$1 = (double)(int64)*(uint8*)(*(uint8**)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (MAPID$1 << (3ll & 63ll))) + 168ll) + PTR2$1) * 0x1.010101010101p-8;
   H$1 = H2$1 - H1$1;
  }
  goto label$999;
  label$1000:;
  if( METHODE$1 != 1ll ) goto label$1002;
  label$1003:;
  {
   PTR1$1 = (Y$1 * (int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (MAPID$1 << (3ll & 63ll))) + 130ll)) + X$1;
   PTR2$1 = (((Y$1 + 1ll) % (int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (MAPID$1 << (3ll & 63ll))) + 134ll)) * (int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (MAPID$1 << (3ll & 63ll))) + 130ll)) + X$1;
   H1$1 = (double)(int64)*(uint8*)(*(uint8**)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (MAPID$1 << (3ll & 63ll))) + 168ll) + PTR1$1) * 0x1.010101010101p-8;
   H2$1 = (double)(int64)*(uint8*)(*(uint8**)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (MAPID$1 << (3ll & 63ll))) + 168ll) + PTR2$1) * 0x1.010101010101p-8;
   H$1 = H2$1 - H1$1;
  }
  goto label$999;
  label$1002:;
  if( METHODE$1 != 2ll ) goto label$1004;
  label$1005:;
  {
   PTR1$1 = (Y$1 * (int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (MAPID$1 << (3ll & 63ll))) + 130ll)) + X$1;
   PTR2$1 = (Y$1 * (int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (MAPID$1 << (3ll & 63ll))) + 130ll)) + ((X$1 + 1ll) % (int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (MAPID$1 << (3ll & 63ll))) + 130ll));
   PTR3$1 = (((Y$1 + 1ll) % (int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (MAPID$1 << (3ll & 63ll))) + 134ll)) * (int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (MAPID$1 << (3ll & 63ll))) + 130ll)) + X$1;
   H1$1 = (double)*(uint8*)(*(uint8**)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (MAPID$1 << (3ll & 63ll))) + 168ll) + PTR1$1);
   H1$1 = H1$1 * 0x1.010101010101p-8;
   H2$1 = (double)*(uint8*)(*(uint8**)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (MAPID$1 << (3ll & 63ll))) + 168ll) + PTR2$1);
   H2$1 = H2$1 * 0x1.010101010101p-8;
   H3$1 = (double)*(uint8*)(*(uint8**)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (MAPID$1 << (3ll & 63ll))) + 168ll) + PTR3$1);
   H3$1 = H3$1 * 0x1.010101010101p-8;
   H$1 = ((H2$1 - H1$1) + H3$1) - H1$1;
  }
  label$1004:;
  label$999:;
 }
 fb$result$1 = H$1;
 goto label$996;
 label$996:;
 return fb$result$1;
}

int8 _ZN9RAYTRACER19ISVISIBLEONSTAMPMAPElR6VECTOR( struct $9RAYTRACER* THIS$1, int64 MATID$1, struct $6VECTOR* MAPXY$1 )
{
 double TMP$1220$1;
 double TMP$1221$1;
 int8 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 1ll );
 label$1008:;
 double X$1;
 __builtin_memset( &X$1, 0, 8ll );
 double Y$1;
 __builtin_memset( &Y$1, 0, 8ll );
 int64 XP$1;
 __builtin_memset( &XP$1, 0, 8ll );
 int64 YP$1;
 __builtin_memset( &YP$1, 0, 8ll );
 int64 PTR1$1;
 __builtin_memset( &PTR1$1, 0, 8ll );
 int64 MAPID$1;
 MAPID$1 = *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 344ll);
 if( (*(double*)MAPXY$1 * *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 352ll)) >= 0x0p+0 ) goto label$1010;
 TMP$1220$1 = -(*(double*)MAPXY$1) * *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 352ll);
 goto label$1014;
 label$1010:;
 TMP$1220$1 = *(double*)MAPXY$1 * *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 352ll);
 label$1014:;
 X$1 = TMP$1220$1;
 if( (*(double*)((uint8*)MAPXY$1 + 8ll) * *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 360ll)) >= 0x0p+0 ) goto label$1011;
 TMP$1221$1 = -(*(double*)((uint8*)MAPXY$1 + 8ll)) * *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 360ll);
 goto label$1015;
 label$1011:;
 TMP$1221$1 = *(double*)((uint8*)MAPXY$1 + 8ll) * *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 360ll);
 label$1015:;
 Y$1 = TMP$1221$1;
 XP$1 = ((int64)__builtin_nearbyint( X$1 * (double)(int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (MAPID$1 << (3ll & 63ll))) + 130ll) ));
 XP$1 = XP$1 % (int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (MAPID$1 << (3ll & 63ll))) + 130ll);
 YP$1 = ((int64)__builtin_nearbyint( Y$1 * (double)(int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (MAPID$1 << (3ll & 63ll))) + 134ll) ));
 YP$1 = YP$1 % (int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (MAPID$1 << (3ll & 63ll))) + 134ll);
 PTR1$1 = (YP$1 * (int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (MAPID$1 << (3ll & 63ll))) + 130ll)) + XP$1;
 if( (int64)*(uint8*)(*(uint8**)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (MAPID$1 << (3ll & 63ll))) + 168ll) + PTR1$1) <= 0ll ) goto label$1013;
 {
  fb$result$1 = (int8)-1;
  goto label$1009;
  label$1013:;
 }
 label$1009:;
 return fb$result$1;
}

void _ZN9RAYTRACER9DOBUMPMAPEllR6VECTORS1_S1_( struct $9RAYTRACER* THIS$1, int64 HITOBJID$1, int64 HITPOLYID$1, struct $6VECTOR* NORMAL$1, struct $6VECTOR* BNORMAL$1, struct $6VECTOR* MAPXY$1 )
{
 label$1016:;
 double X$1;
 __builtin_memset( &X$1, 0, 8ll );
 double Y$1;
 __builtin_memset( &Y$1, 0, 8ll );
 double L$1;
 __builtin_memset( &L$1, 0, 8ll );
 int64 XP$1;
 __builtin_memset( &XP$1, 0, 8ll );
 int64 YP$1;
 __builtin_memset( &YP$1, 0, 8ll );
 int64 MATID$1;
 __builtin_memset( &MATID$1, 0, 8ll );
 int64 MAPID$1;
 __builtin_memset( &MAPID$1, 0, 8ll );
 MATID$1 = *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (HITOBJID$1 << (3ll & 63ll))) + 144ll);
 MAPID$1 = *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 304ll);
 if( MAPID$1 <= -1ll ) goto label$1019;
 {
  X$1 = *(double*)MAPXY$1 * *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 312ll);
  Y$1 = *(double*)((uint8*)MAPXY$1 + 8ll) * *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 320ll);
  XP$1 = ((int64)__builtin_nearbyint( X$1 * (double)(int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (MAPID$1 << (3ll & 63ll))) + 130ll) ));
  XP$1 = XP$1 % (int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (MAPID$1 << (3ll & 63ll))) + 130ll);
  YP$1 = ((int64)__builtin_nearbyint( Y$1 * (double)(int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (MAPID$1 << (3ll & 63ll))) + 134ll) ));
  YP$1 = YP$1 % (int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (MAPID$1 << (3ll & 63ll))) + 134ll);
  double vr$55 = _ZN9RAYTRACER18GETHIGHTFIELDVALUEElll13BUMP_METHODESa( THIS$1, MAPID$1, XP$1, YP$1, 2ll, (int8)0 );
  L$1 = vr$55 * *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 328ll);
  if( L$1 != 0x0p+0 ) goto label$1021;
  {
   __builtin_memcpy( BNORMAL$1, NORMAL$1, 32 );
  }
  goto label$1020;
  label$1021:;
  {
   L$1 = L$1 + 0x1.p+0;
   *(double*)BNORMAL$1 = *(double*)NORMAL$1 * L$1;
   *(double*)((uint8*)BNORMAL$1 + 8ll) = *(double*)((uint8*)NORMAL$1 + 8ll) * L$1;
   *(double*)((uint8*)BNORMAL$1 + 16ll) = *(double*)((uint8*)NORMAL$1 + 16ll) * L$1;
  }
  label$1020:;
 }
 label$1019:;
 label$1018:;
 label$1017:;
}

void _ZN9RAYTRACER12SURFACECOLORElR6VECTORS1_( struct $9RAYTRACER* THIS$1, int64 HITOBJID$1, struct $6VECTOR* MAPXY$1, struct $6VECTOR* RETCOL$1 )
{
 label$1022:;
 int64 MATID$1;
 __builtin_memset( &MATID$1, 0, 8ll );
 int64 MAPID$1;
 __builtin_memset( &MAPID$1, 0, 8ll );
 int64 XP$1;
 __builtin_memset( &XP$1, 0, 8ll );
 int64 YP$1;
 __builtin_memset( &YP$1, 0, 8ll );
 int64 PTR1$1;
 __builtin_memset( &PTR1$1, 0, 8ll );
 double X$1;
 __builtin_memset( &X$1, 0, 8ll );
 double Y$1;
 __builtin_memset( &Y$1, 0, 8ll );
 struct $6VECTOR SURCOL$1;
 _ZN6VECTORC1Ev( &SURCOL$1 );
 MATID$1 = *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (HITOBJID$1 << (3ll & 63ll))) + 144ll);
 MAPID$1 = *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 264ll);
 if( MAPID$1 <= -1ll ) goto label$1025;
 {
  X$1 = *(double*)MAPXY$1 * *(double*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (MAPID$1 << (3ll & 63ll))) + 176ll);
  Y$1 = *(double*)((uint8*)MAPXY$1 + 8ll) * *(double*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (MAPID$1 << (3ll & 63ll))) + 184ll);
  XP$1 = ((int64)__builtin_nearbyint( X$1 * (double)(int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (MAPID$1 << (3ll & 63ll))) + 130ll) ));
  XP$1 = XP$1 % (int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (MAPID$1 << (3ll & 63ll))) + 130ll);
  YP$1 = ((int64)__builtin_nearbyint( Y$1 * (double)(int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (MAPID$1 << (3ll & 63ll))) + 134ll) ));
  YP$1 = YP$1 % (int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (MAPID$1 << (3ll & 63ll))) + 134ll);
  PTR1$1 = ((YP$1 * (int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (MAPID$1 << (3ll & 63ll))) + 130ll)) * 3ll) + (XP$1 * 3ll);
  *(double*)&SURCOL$1 = (double)*(uint8*)(*(uint8**)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (MAPID$1 << (3ll & 63ll))) + 168ll) + PTR1$1);
  *(double*)&SURCOL$1 = *(double*)&SURCOL$1 * 0x1.010101010101p-8;
  *(double*)((uint8*)&SURCOL$1 + 8ll) = (double)*(uint8*)((uint8*)(*(uint8**)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (MAPID$1 << (3ll & 63ll))) + 168ll) + PTR1$1) + 1ll);
  *(double*)((uint8*)&SURCOL$1 + 8ll) = *(double*)((uint8*)&SURCOL$1 + 8ll) * 0x1.010101010101p-8;
  *(double*)((uint8*)&SURCOL$1 + 16ll) = (double)*(uint8*)((uint8*)(*(uint8**)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (MAPID$1 << (3ll & 63ll))) + 168ll) + PTR1$1) + 2ll);
  *(double*)((uint8*)&SURCOL$1 + 16ll) = *(double*)((uint8*)&SURCOL$1 + 16ll) * 0x1.010101010101p-8;
  *(double*)&SURCOL$1 = *(double*)&SURCOL$1 * *(double*)RETCOL$1;
  *(double*)((uint8*)&SURCOL$1 + 8ll) = *(double*)((uint8*)&SURCOL$1 + 8ll) * *(double*)((uint8*)RETCOL$1 + 8ll);
  *(double*)((uint8*)&SURCOL$1 + 16ll) = *(double*)((uint8*)&SURCOL$1 + 16ll) * *(double*)((uint8*)RETCOL$1 + 16ll);
  if( (int64)*(int8*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 258ll) != -1ll ) goto label$1027;
  {
   *(double*)&SURCOL$1 = *(double*)&SURCOL$1 + (*(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 168ll) * *(double*)RETCOL$1);
   *(double*)((uint8*)&SURCOL$1 + 8ll) = *(double*)((uint8*)&SURCOL$1 + 8ll) + (*(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 176ll) * *(double*)((uint8*)RETCOL$1 + 8ll));
   *(double*)((uint8*)&SURCOL$1 + 16ll) = *(double*)((uint8*)&SURCOL$1 + 16ll) + (*(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 184ll) * *(double*)((uint8*)RETCOL$1 + 16ll));
  }
  label$1027:;
  label$1026:;
  *(double*)RETCOL$1 = *(double*)RETCOL$1 + *(double*)&SURCOL$1;
  *(double*)((uint8*)RETCOL$1 + 8ll) = *(double*)((uint8*)RETCOL$1 + 8ll) + *(double*)((uint8*)&SURCOL$1 + 8ll);
  *(double*)((uint8*)RETCOL$1 + 16ll) = *(double*)((uint8*)RETCOL$1 + 16ll) + *(double*)((uint8*)&SURCOL$1 + 16ll);
 }
 goto label$1024;
 label$1025:;
 {
  *(double*)RETCOL$1 = *(double*)RETCOL$1 + (*(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 168ll) * *(double*)RETCOL$1);
  *(double*)((uint8*)RETCOL$1 + 8ll) = *(double*)((uint8*)RETCOL$1 + 8ll) + (*(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 176ll) * *(double*)((uint8*)RETCOL$1 + 8ll));
  *(double*)((uint8*)RETCOL$1 + 16ll) = *(double*)((uint8*)RETCOL$1 + 16ll) + (*(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 184ll) * *(double*)((uint8*)RETCOL$1 + 16ll));
 }
 label$1024:;
 label$1023:;
}

struct $6VECTOR* _ZN9RAYTRACER2AVEddd( struct $9RAYTRACER* THIS$1, double X$1, double Y$1, double Z$1 )
{
 struct $6VECTOR* fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1028:;
 struct $6VECTOR* TMP$1;
 void* vr$1 = malloc( 32ull );
 TMP$1 = (struct $6VECTOR*)vr$1;
 *(double*)TMP$1 = X$1;
 *(double*)((uint8*)TMP$1 + 8ll) = Y$1;
 *(double*)((uint8*)TMP$1 + 16ll) = Z$1;
 fb$result$1 = TMP$1;
 goto label$1029;
 label$1029:;
 return fb$result$1;
}

struct $6VECTOR** _ZN9RAYTRACER4APV3EPP6VECTORlll( struct $9RAYTRACER* THIS$1, struct $6VECTOR** V$1, int64 V0$1, int64 V1$1, int64 V2$1 )
{
 struct $6VECTOR** fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1030:;
 struct $6VECTOR** TMP$1;
 void* vr$1 = malloc( 24ull );
 TMP$1 = (struct $6VECTOR**)vr$1;
 *TMP$1 = *(struct $6VECTOR**)((uint8*)V$1 + (V0$1 << (3ll & 63ll)));
 *(struct $6VECTOR**)((uint8*)TMP$1 + 8ll) = *(struct $6VECTOR**)((uint8*)V$1 + (V1$1 << (3ll & 63ll)));
 *(struct $6VECTOR**)((uint8*)TMP$1 + 16ll) = *(struct $6VECTOR**)((uint8*)V$1 + (V2$1 << (3ll & 63ll)));
 fb$result$1 = TMP$1;
 goto label$1031;
 label$1031:;
 return fb$result$1;
}

struct $6VECTOR** _ZN9RAYTRACER4APV4EPP6VECTORllll( struct $9RAYTRACER* THIS$1, struct $6VECTOR** V$1, int64 V0$1, int64 V1$1, int64 V2$1, int64 V3$1 )
{
 struct $6VECTOR** fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1032:;
 struct $6VECTOR** TMP$1;
 void* vr$1 = malloc( 32ull );
 TMP$1 = (struct $6VECTOR**)vr$1;
 *TMP$1 = *(struct $6VECTOR**)((uint8*)V$1 + (V0$1 << (3ll & 63ll)));
 *(struct $6VECTOR**)((uint8*)TMP$1 + 8ll) = *(struct $6VECTOR**)((uint8*)V$1 + (V1$1 << (3ll & 63ll)));
 *(struct $6VECTOR**)((uint8*)TMP$1 + 16ll) = *(struct $6VECTOR**)((uint8*)V$1 + (V2$1 << (3ll & 63ll)));
 *(struct $6VECTOR**)((uint8*)TMP$1 + 24ll) = *(struct $6VECTOR**)((uint8*)V$1 + (V3$1 << (3ll & 63ll)));
 fb$result$1 = TMP$1;
 goto label$1033;
 label$1033:;
 return fb$result$1;
}

int64 _ZN9RAYTRACER11ADDMATERIALEddddddddddaaallll( struct $9RAYTRACER* THIS$1, double RED$1, double GREEN$1, double BLUE$1, double R_REFLECTION$1, double M_REFLECTION$1, double C_REFLECTION$1, double P_MATERIAL$1, double P_MIRROR$1, double TRANSPARENCY$1, double R_INDEX$1, int8 BUILDSHADOW$1, int8 RECEIVESHADOW$1, int8 MIXCOLORS$1, int64 COLORMAPID$1, int64 BUMPMAPID$1, int64 TRANSMAPID$1, int64 STAMPMAPID$1 )
{
 boolean TMP$1222$1;
 boolean TMP$1223$1;
 boolean TMP$1224$1;
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1034:;
 int8 FLAG$1;
 __builtin_memset( &FLAG$1, 0, 1ll );
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &RED$1, 0x0p+0, 0x1.p+0 );
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &GREEN$1, 0x0p+0, 0x1.p+0 );
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &BLUE$1, 0x0p+0, 0x1.p+0 );
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &R_REFLECTION$1, 0x0p+0, 0x1.p+0 );
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &M_REFLECTION$1, 0x0p+0, 0x1.p+0 );
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &C_REFLECTION$1, 0x1.0624DD2F1A9FCp-10, 0x1.p+0 );
 C_REFLECTION$1 = C_REFLECTION$1 * 0x1.2Cp+7;
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &P_MATERIAL$1, 0x0p+0, 0x1.p+0 );
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &P_MIRROR$1, 0x0p+0, 0x1.p+0 );
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &R_INDEX$1, 0x0p+0, 0x1.p+0 );
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &TRANSPARENCY$1, 0x0p+0, 0x1.p+0 );
 if( (int64)BUILDSHADOW$1 == 0ll ) goto label$1036;
 TMP$1222$1 = (boolean)1ll;
 goto label$1047;
 label$1036:;
 TMP$1222$1 = (boolean)0ll;
 label$1047:;
 BUILDSHADOW$1 = (int8)-TMP$1222$1;
 if( (int64)RECEIVESHADOW$1 == 0ll ) goto label$1037;
 TMP$1223$1 = (boolean)1ll;
 goto label$1048;
 label$1037:;
 TMP$1223$1 = (boolean)0ll;
 label$1048:;
 RECEIVESHADOW$1 = (int8)-TMP$1223$1;
 if( (int64)MIXCOLORS$1 == 0ll ) goto label$1038;
 TMP$1224$1 = (boolean)1ll;
 goto label$1049;
 label$1038:;
 TMP$1224$1 = (boolean)0ll;
 label$1049:;
 MIXCOLORS$1 = (int8)-TMP$1224$1;
 void* vr$23 = realloc( *(void**)((uint8*)THIS$1 + 672ll), (uint64)((*(int64*)((uint8*)THIS$1 + 664ll) << (3ll & 63ll)) + 8ll) );
 *(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) = (struct $8MATERIAL**)vr$23;
 void* vr$25 = calloc( 424ull, 1ull );
 *(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (*(int64*)((uint8*)THIS$1 + 664ll) << (3ll & 63ll))) = (struct $8MATERIAL*)vr$25;
 *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (*(int64*)((uint8*)THIS$1 + 664ll) << (3ll & 63ll))) + 160ll) = *(int64*)((uint8*)THIS$1 + 664ll);
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (*(int64*)((uint8*)THIS$1 + 664ll) << (3ll & 63ll))) + 168ll) = RED$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (*(int64*)((uint8*)THIS$1 + 664ll) << (3ll & 63ll))) + 176ll) = GREEN$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (*(int64*)((uint8*)THIS$1 + 664ll) << (3ll & 63ll))) + 184ll) = BLUE$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (*(int64*)((uint8*)THIS$1 + 664ll) << (3ll & 63ll))) + 200ll) = R_REFLECTION$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (*(int64*)((uint8*)THIS$1 + 664ll) << (3ll & 63ll))) + 208ll) = M_REFLECTION$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (*(int64*)((uint8*)THIS$1 + 664ll) << (3ll & 63ll))) + 216ll) = C_REFLECTION$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (*(int64*)((uint8*)THIS$1 + 664ll) << (3ll & 63ll))) + 224ll) = P_MATERIAL$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (*(int64*)((uint8*)THIS$1 + 664ll) << (3ll & 63ll))) + 232ll) = P_MIRROR$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (*(int64*)((uint8*)THIS$1 + 664ll) << (3ll & 63ll))) + 240ll) = TRANSPARENCY$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (*(int64*)((uint8*)THIS$1 + 664ll) << (3ll & 63ll))) + 248ll) = R_INDEX$1;
 *(int8*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (*(int64*)((uint8*)THIS$1 + 664ll) << (3ll & 63ll))) + 256ll) = BUILDSHADOW$1;
 *(int8*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (*(int64*)((uint8*)THIS$1 + 664ll) << (3ll & 63ll))) + 257ll) = RECEIVESHADOW$1;
 *(int8*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (*(int64*)((uint8*)THIS$1 + 664ll) << (3ll & 63ll))) + 258ll) = MIXCOLORS$1;
 *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (*(int64*)((uint8*)THIS$1 + 664ll) << (3ll & 63ll))) + 264ll) = COLORMAPID$1;
 *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (*(int64*)((uint8*)THIS$1 + 664ll) << (3ll & 63ll))) + 304ll) = BUMPMAPID$1;
 *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (*(int64*)((uint8*)THIS$1 + 664ll) << (3ll & 63ll))) + 384ll) = TRANSMAPID$1;
 *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (*(int64*)((uint8*)THIS$1 + 664ll) << (3ll & 63ll))) + 344ll) = STAMPMAPID$1;
 if( *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (*(int64*)((uint8*)THIS$1 + 664ll) << (3ll & 63ll))) + 264ll) <= -1ll ) goto label$1040;
 {
  __builtin_memcpy( (struct $6VECTOR*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (*(int64*)((uint8*)THIS$1 + 664ll) << (3ll & 63ll))) + 272ll), (struct $6VECTOR*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (*(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (*(int64*)((uint8*)THIS$1 + 664ll) << (3ll & 63ll))) + 264ll) << (3ll & 63ll))) + 176ll), 32 );
  FLAG$1 = (int8)-1;
 }
 label$1040:;
 label$1039:;
 if( *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (*(int64*)((uint8*)THIS$1 + 664ll) << (3ll & 63ll))) + 304ll) <= -1ll ) goto label$1042;
 {
  __builtin_memcpy( (struct $6VECTOR*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (*(int64*)((uint8*)THIS$1 + 664ll) << (3ll & 63ll))) + 312ll), (struct $6VECTOR*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (*(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (*(int64*)((uint8*)THIS$1 + 664ll) << (3ll & 63ll))) + 304ll) << (3ll & 63ll))) + 176ll), 32 );
  FLAG$1 = (int8)-1;
 }
 label$1042:;
 label$1041:;
 if( *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (*(int64*)((uint8*)THIS$1 + 664ll) << (3ll & 63ll))) + 384ll) <= -1ll ) goto label$1044;
 {
  __builtin_memcpy( (struct $6VECTOR*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (*(int64*)((uint8*)THIS$1 + 664ll) << (3ll & 63ll))) + 392ll), (struct $6VECTOR*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (*(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (*(int64*)((uint8*)THIS$1 + 664ll) << (3ll & 63ll))) + 384ll) << (3ll & 63ll))) + 176ll), 32 );
  FLAG$1 = (int8)-1;
 }
 label$1044:;
 label$1043:;
 if( *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (*(int64*)((uint8*)THIS$1 + 664ll) << (3ll & 63ll))) + 344ll) <= -1ll ) goto label$1046;
 {
  __builtin_memcpy( (struct $6VECTOR*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (*(int64*)((uint8*)THIS$1 + 664ll) << (3ll & 63ll))) + 352ll), (struct $6VECTOR*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (*(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (*(int64*)((uint8*)THIS$1 + 664ll) << (3ll & 63ll))) + 344ll) << (3ll & 63ll))) + 176ll), 32 );
  FLAG$1 = (int8)-1;
 }
 label$1046:;
 label$1045:;
 *(int8*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (*(int64*)((uint8*)THIS$1 + 664ll) << (3ll & 63ll))) + 259ll) = FLAG$1;
 fb$result$1 = *(int64*)((uint8*)THIS$1 + 664ll);
 *(int64*)((uint8*)THIS$1 + 664ll) = *(int64*)((uint8*)THIS$1 + 664ll) + 1ll;
 label$1035:;
 return fb$result$1;
}

void _ZN9RAYTRACER14CHANGEMATERIALElddddddddddaaallll( struct $9RAYTRACER* THIS$1, int64 MATID$1, double RED$1, double GREEN$1, double BLUE$1, double R_REFLECTION$1, double M_REFLECTION$1, double C_REFLECTION$1, double P_MATERIAL$1, double P_MIRROR$1, double TRANSPARENCY$1, double R_INDEX$1, int8 BUILDSHADOW$1, int8 RECEIVESHADOW$1, int8 MIXCOLORS$1, int64 COLORMAPID$1, int64 BUMPMAPID$1, int64 TRANSMAPID$1, int64 STAMPMAPID$1 )
{
 boolean TMP$1225$1;
 boolean TMP$1226$1;
 boolean TMP$1227$1;
 label$1050:;
 if( ((int64)-(MATID$1 < 0ll) | (int64)-(MATID$1 >= *(int64*)((uint8*)THIS$1 + 664ll))) == 0ll ) goto label$1053;
 {
  goto label$1051;
  label$1053:;
 }
 int8 FLAG$1;
 __builtin_memset( &FLAG$1, 0, 1ll );
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &RED$1, 0x0p+0, 0x1.p+0 );
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &GREEN$1, 0x0p+0, 0x1.p+0 );
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &BLUE$1, 0x0p+0, 0x1.p+0 );
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &R_REFLECTION$1, 0x0p+0, 0x1.p+0 );
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &M_REFLECTION$1, 0x0p+0, 0x1.p+0 );
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &C_REFLECTION$1, 0x1.0624DD2F1A9FCp-10, 0x1.p+0 );
 C_REFLECTION$1 = C_REFLECTION$1 * 0x1.2Cp+7;
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &P_MATERIAL$1, 0x0p+0, 0x1.p+0 );
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &P_MIRROR$1, 0x0p+0, 0x1.p+0 );
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &R_INDEX$1, 0x0p+0, 0x1.p+0 );
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &TRANSPARENCY$1, 0x0p+0, 0x1.p+0 );
 if( (int64)BUILDSHADOW$1 == 0ll ) goto label$1054;
 TMP$1225$1 = (boolean)1ll;
 goto label$1065;
 label$1054:;
 TMP$1225$1 = (boolean)0ll;
 label$1065:;
 BUILDSHADOW$1 = (int8)-TMP$1225$1;
 if( (int64)RECEIVESHADOW$1 == 0ll ) goto label$1055;
 TMP$1226$1 = (boolean)1ll;
 goto label$1066;
 label$1055:;
 TMP$1226$1 = (boolean)0ll;
 label$1066:;
 RECEIVESHADOW$1 = (int8)-TMP$1226$1;
 if( (int64)MIXCOLORS$1 == 0ll ) goto label$1056;
 TMP$1227$1 = (boolean)1ll;
 goto label$1067;
 label$1056:;
 TMP$1227$1 = (boolean)0ll;
 label$1067:;
 MIXCOLORS$1 = (int8)-TMP$1227$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 168ll) = RED$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 176ll) = GREEN$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 184ll) = BLUE$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 200ll) = R_REFLECTION$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 208ll) = M_REFLECTION$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 216ll) = C_REFLECTION$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 224ll) = P_MATERIAL$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 232ll) = P_MIRROR$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 240ll) = TRANSPARENCY$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 248ll) = R_INDEX$1;
 *(int8*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 256ll) = BUILDSHADOW$1;
 *(int8*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 257ll) = RECEIVESHADOW$1;
 *(int8*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 258ll) = MIXCOLORS$1;
 *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 264ll) = COLORMAPID$1;
 *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 304ll) = BUMPMAPID$1;
 *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 384ll) = TRANSMAPID$1;
 *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 344ll) = STAMPMAPID$1;
 if( *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 264ll) <= -1ll ) goto label$1058;
 {
  __builtin_memcpy( (struct $6VECTOR*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 272ll), (struct $6VECTOR*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (*(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 264ll) << (3ll & 63ll))) + 176ll), 32 );
  FLAG$1 = (int8)-1;
 }
 label$1058:;
 label$1057:;
 if( *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 304ll) <= -1ll ) goto label$1060;
 {
  __builtin_memcpy( (struct $6VECTOR*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 312ll), (struct $6VECTOR*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (*(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 304ll) << (3ll & 63ll))) + 176ll), 32 );
  FLAG$1 = (int8)-1;
 }
 label$1060:;
 label$1059:;
 if( *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 384ll) <= -1ll ) goto label$1062;
 {
  __builtin_memcpy( (struct $6VECTOR*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 392ll), (struct $6VECTOR*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (*(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 384ll) << (3ll & 63ll))) + 176ll), 32 );
  FLAG$1 = (int8)-1;
 }
 label$1062:;
 label$1061:;
 if( *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 344ll) <= -1ll ) goto label$1064;
 {
  __builtin_memcpy( (struct $6VECTOR*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 352ll), (struct $6VECTOR*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (*(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 344ll) << (3ll & 63ll))) + 176ll), 32 );
  FLAG$1 = (int8)-1;
 }
 label$1064:;
 label$1063:;
 *(int8*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 259ll) = FLAG$1;
 label$1051:;
}

void _ZN9RAYTRACER17SETCOLORMAPFACTORElddd( struct $9RAYTRACER* THIS$1, int64 MATID$1, double X$1, double Y$1, double Z$1 )
{
 label$1068:;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 272ll) = X$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 280ll) = Y$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 288ll) = Z$1;
 label$1069:;
}

void _ZN9RAYTRACER16SETBUMPMAPFACTORElddd( struct $9RAYTRACER* THIS$1, int64 MATID$1, double X$1, double Y$1, double Z$1 )
{
 label$1070:;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 312ll) = X$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 320ll) = Y$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 328ll) = Z$1;
 label$1071:;
}

void _ZN9RAYTRACER17SETTRANSMAPFACTORElddd( struct $9RAYTRACER* THIS$1, int64 MATID$1, double X$1, double Y$1, double Z$1 )
{
 label$1072:;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 392ll) = X$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 400ll) = Y$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 408ll) = Z$1;
 label$1073:;
}

void _ZN9RAYTRACER17SETSTAMPMAPFACTORElddd( struct $9RAYTRACER* THIS$1, int64 MATID$1, double X$1, double Y$1, double Z$1 )
{
 label$1074:;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 352ll) = X$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 360ll) = Y$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 368ll) = Z$1;
 label$1075:;
}

int64 _ZN9RAYTRACER13ADDMATHSPHEREEddddl( struct $9RAYTRACER* THIS$1, double XPOS$1, double YPOS$1, double ZPOS$1, double RADIUS$1, int64 MATID$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1076:;
 if( ((int64)-(MATID$1 < 0ll) | (int64)-(MATID$1 >= *(int64*)((uint8*)THIS$1 + 664ll))) == 0ll ) goto label$1079;
 {
  MATID$1 = 0ll;
  label$1079:;
 }
 void* vr$9 = realloc( *(void**)((uint8*)THIS$1 + 688ll), (uint64)((*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll)) + 8ll) );
 *(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) = (struct $8OBJECT3D**)vr$9;
 void* vr$11 = calloc( 192ull, 1ull );
 *(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) = (struct $8OBJECT3D*)vr$11;
 *($14OBJECT3D_TYPES*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) = 0ll;
 *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) + 112ll) = XPOS$1;
 *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) + 120ll) = YPOS$1;
 *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) + 128ll) = ZPOS$1;
 *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) + 152ll) = RADIUS$1;
 *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) + 144ll) = MATID$1;
 _ZN9RAYTRACER18GETOBJECTSCREENRECEl( THIS$1, *(int64*)((uint8*)THIS$1 + 680ll) );
 fb$result$1 = *(int64*)((uint8*)THIS$1 + 680ll);
 *(int64*)((uint8*)THIS$1 + 680ll) = *(int64*)((uint8*)THIS$1 + 680ll) + 1ll;
 label$1077:;
 return fb$result$1;
}

int64 _ZN9RAYTRACER6ADDBOXEddddddl( struct $9RAYTRACER* THIS$1, double XPOS$1, double YPOS$1, double ZPOS$1, double XSIZE$1, double YSIZE$1, double ZSIZE$1, int64 MATID$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1080:;
 if( ((int64)-(MATID$1 < 0ll) | (int64)-(MATID$1 >= *(int64*)((uint8*)THIS$1 + 664ll))) == 0ll ) goto label$1083;
 {
  MATID$1 = 0ll;
  label$1083:;
 }
 if( XSIZE$1 >= 0x1.p+0 ) goto label$1085;
 {
  XSIZE$1 = 0x1.p+0;
  label$1085:;
 }
 if( YSIZE$1 >= 0x1.p+0 ) goto label$1087;
 {
  YSIZE$1 = 0x1.p+0;
  label$1087:;
 }
 if( ZSIZE$1 >= 0x1.p+0 ) goto label$1089;
 {
  ZSIZE$1 = 0x1.p+0;
  label$1089:;
 }
 double XM$1;
 XM$1 = XSIZE$1 * 0x1.p-1;
 double YM$1;
 YM$1 = YSIZE$1 * 0x1.p-1;
 double ZM$1;
 ZM$1 = ZSIZE$1 * 0x1.p-1;
 void* vr$12 = realloc( *(void**)((uint8*)THIS$1 + 688ll), (uint64)((*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll)) + 8ll) );
 *(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) = (struct $8OBJECT3D**)vr$12;
 void* vr$14 = calloc( 192ull, 1ull );
 *(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) = (struct $8OBJECT3D*)vr$14;
 *($14OBJECT3D_TYPES*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) = 1ll;
 *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) + 144ll) = MATID$1;
 *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) + 112ll) = XPOS$1;
 *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) + 120ll) = YPOS$1;
 *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) + 128ll) = ZPOS$1;
 *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) + 160ll) = 8ll;
 void* vr$49 = malloc( 64ull );
 *(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) + 168ll) = (struct $6VECTOR**)vr$49;
 struct $6VECTOR* vr$57 = _ZN9RAYTRACER2AVEddd( THIS$1, -XM$1, YM$1, -ZM$1 );
 *(*(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) + 168ll)) = vr$57;
 struct $6VECTOR* vr$67 = _ZN9RAYTRACER2AVEddd( THIS$1, -XM$1, -YM$1, -ZM$1 );
 *(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) + 168ll) + 8ll) = vr$67;
 struct $6VECTOR* vr$76 = _ZN9RAYTRACER2AVEddd( THIS$1, XM$1, -YM$1, -ZM$1 );
 *(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) + 168ll) + 16ll) = vr$76;
 struct $6VECTOR* vr$84 = _ZN9RAYTRACER2AVEddd( THIS$1, XM$1, YM$1, -ZM$1 );
 *(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) + 168ll) + 24ll) = vr$84;
 struct $6VECTOR* vr$91 = _ZN9RAYTRACER2AVEddd( THIS$1, XM$1, YM$1, ZM$1 );
 *(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) + 168ll) + 32ll) = vr$91;
 struct $6VECTOR* vr$99 = _ZN9RAYTRACER2AVEddd( THIS$1, XM$1, -YM$1, ZM$1 );
 *(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) + 168ll) + 40ll) = vr$99;
 struct $6VECTOR* vr$108 = _ZN9RAYTRACER2AVEddd( THIS$1, -XM$1, -YM$1, ZM$1 );
 *(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) + 168ll) + 48ll) = vr$108;
 struct $6VECTOR* vr$116 = _ZN9RAYTRACER2AVEddd( THIS$1, -XM$1, YM$1, ZM$1 );
 *(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) + 168ll) + 56ll) = vr$116;
 {
  int64 I$2;
  I$2 = 0ll;
  int64 TMP$1228$2;
  TMP$1228$2 = *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) + 160ll) + -1ll;
  goto label$1090;
  label$1093:;
  {
   *(double*)*(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) + 168ll) + (I$2 << (3ll & 63ll))) = *(double*)*(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) + 168ll) + (I$2 << (3ll & 63ll))) + XPOS$1;
   *(double*)((uint8*)*(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) + 168ll) + (I$2 << (3ll & 63ll))) + 8ll) = *(double*)((uint8*)*(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) + 168ll) + (I$2 << (3ll & 63ll))) + 8ll) + YPOS$1;
   *(double*)((uint8*)*(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) + 168ll) + (I$2 << (3ll & 63ll))) + 16ll) = *(double*)((uint8*)*(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) + 168ll) + (I$2 << (3ll & 63ll))) + 16ll) + ZPOS$1;
  }
  label$1091:;
  I$2 = I$2 + 1ll;
  label$1090:;
  if( I$2 <= TMP$1228$2 ) goto label$1093;
  label$1092:;
 }
 *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) + 176ll) = 6ll;
 void* vr$186 = malloc( 48ull );
 *(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) + 184ll) = (struct $4POLY**)vr$186;
 {
  int64 I$2;
  I$2 = 0ll;
  int64 TMP$1229$2;
  TMP$1229$2 = *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) + 176ll) + -1ll;
  goto label$1094;
  label$1097:;
  {
   void* vr$198 = malloc( 616ull );
   *(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) + 184ll) + (I$2 << (3ll & 63ll))) = (struct $4POLY*)vr$198;
   *(int64*)((uint8*)*(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) + 184ll) + (I$2 << (3ll & 63ll))) + 528ll) = 4ll;
  }
  label$1095:;
  I$2 = I$2 + 1ll;
  label$1094:;
  if( I$2 <= TMP$1229$2 ) goto label$1097;
  label$1096:;
 }
 struct $6VECTOR** vr$220 = _ZN9RAYTRACER4APV4EPP6VECTORllll( THIS$1, *(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) + 168ll), 0ll, 1ll, 2ll, 3ll );
 *(struct $6VECTOR***)((uint8*)*(*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) + 184ll)) + 536ll) = vr$220;
 struct $6VECTOR** vr$233 = _ZN9RAYTRACER4APV4EPP6VECTORllll( THIS$1, *(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) + 168ll), 3ll, 2ll, 5ll, 4ll );
 *(struct $6VECTOR***)((uint8*)*(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) + 184ll) + 8ll) + 536ll) = vr$233;
 struct $6VECTOR** vr$246 = _ZN9RAYTRACER4APV4EPP6VECTORllll( THIS$1, *(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) + 168ll), 4ll, 5ll, 6ll, 7ll );
 *(struct $6VECTOR***)((uint8*)*(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) + 184ll) + 16ll) + 536ll) = vr$246;
 struct $6VECTOR** vr$259 = _ZN9RAYTRACER4APV4EPP6VECTORllll( THIS$1, *(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) + 168ll), 7ll, 6ll, 1ll, 0ll );
 *(struct $6VECTOR***)((uint8*)*(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) + 184ll) + 24ll) + 536ll) = vr$259;
 struct $6VECTOR** vr$272 = _ZN9RAYTRACER4APV4EPP6VECTORllll( THIS$1, *(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) + 168ll), 7ll, 0ll, 3ll, 4ll );
 *(struct $6VECTOR***)((uint8*)*(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) + 184ll) + 32ll) + 536ll) = vr$272;
 struct $6VECTOR** vr$285 = _ZN9RAYTRACER4APV4EPP6VECTORllll( THIS$1, *(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) + 168ll), 1ll, 6ll, 5ll, 2ll );
 *(struct $6VECTOR***)((uint8*)*(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) + 184ll) + 40ll) + 536ll) = vr$285;
 _ZN9RAYTRACER10POLYHELPEREl( THIS$1, *(int64*)((uint8*)THIS$1 + 680ll) );
 fb$result$1 = *(int64*)((uint8*)THIS$1 + 680ll);
 *(int64*)((uint8*)THIS$1 + 680ll) = *(int64*)((uint8*)THIS$1 + 680ll) + 1ll;
 label$1081:;
 return fb$result$1;
}

void _ZN9RAYTRACER17SETOBJECTPOSITIONElddd( struct $9RAYTRACER* THIS$1, int64 ID$1, double XPOS$1, double YPOS$1, double ZPOS$1 )
{
 label$1098:;
 *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (ID$1 << (3ll & 63ll))) + 112ll) = XPOS$1;
 *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (ID$1 << (3ll & 63ll))) + 120ll) = YPOS$1;
 *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (ID$1 << (3ll & 63ll))) + 128ll) = ZPOS$1;
 _ZN9RAYTRACER18GETOBJECTSCREENRECEl( THIS$1, ID$1 );
 label$1099:;
}

int64 _ZN9RAYTRACER13ADDPOINTLIGHTEddddddda( struct $9RAYTRACER* THIS$1, double XPOS$1, double YPOS$1, double ZPOS$1, double MAXWIDTH$1, double RED$1, double GREEN$1, double BLUE$1, int8 BUILDSHADOW$1 )
{
 boolean TMP$1230$1;
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1100:;
 if( MAXWIDTH$1 >= 0x1.p+0 ) goto label$1103;
 {
  MAXWIDTH$1 = 0x1.p+0;
  label$1103:;
 }
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &RED$1, 0x0p+0, 0x1.p+0 );
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &GREEN$1, 0x0p+0, 0x1.p+0 );
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &BLUE$1, 0x0p+0, 0x1.p+0 );
 if( (int64)BUILDSHADOW$1 == 0ll ) goto label$1104;
 TMP$1230$1 = (boolean)1ll;
 goto label$1105;
 label$1104:;
 TMP$1230$1 = (boolean)0ll;
 label$1105:;
 BUILDSHADOW$1 = (int8)-TMP$1230$1;
 void* vr$10 = realloc( *(void**)((uint8*)THIS$1 + 704ll), (uint64)((*(int64*)((uint8*)THIS$1 + 696ll) << (3ll & 63ll)) + 8ll) );
 *(struct $5LIGHT***)((uint8*)THIS$1 + 704ll) = (struct $5LIGHT**)vr$10;
 void* vr$12 = calloc( 200ull, 1ull );
 *(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 704ll) + (*(int64*)((uint8*)THIS$1 + 696ll) << (3ll & 63ll))) = (struct $5LIGHT*)vr$12;
 *($11LIGHT_TYPES*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 704ll) + (*(int64*)((uint8*)THIS$1 + 696ll) << (3ll & 63ll))) = 0ll;
 *(double*)((uint8*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 704ll) + (*(int64*)((uint8*)THIS$1 + 696ll) << (3ll & 63ll))) + 16ll) = XPOS$1;
 *(double*)((uint8*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 704ll) + (*(int64*)((uint8*)THIS$1 + 696ll) << (3ll & 63ll))) + 24ll) = YPOS$1;
 *(double*)((uint8*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 704ll) + (*(int64*)((uint8*)THIS$1 + 696ll) << (3ll & 63ll))) + 32ll) = ZPOS$1;
 *(double*)((uint8*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 704ll) + (*(int64*)((uint8*)THIS$1 + 696ll) << (3ll & 63ll))) + 176ll) = MAXWIDTH$1;
 *(double*)((uint8*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 704ll) + (*(int64*)((uint8*)THIS$1 + 696ll) << (3ll & 63ll))) + 144ll) = RED$1;
 *(double*)((uint8*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 704ll) + (*(int64*)((uint8*)THIS$1 + 696ll) << (3ll & 63ll))) + 152ll) = GREEN$1;
 *(double*)((uint8*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 704ll) + (*(int64*)((uint8*)THIS$1 + 696ll) << (3ll & 63ll))) + 160ll) = BLUE$1;
 *(int8*)((uint8*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 704ll) + (*(int64*)((uint8*)THIS$1 + 696ll) << (3ll & 63ll))) + 192ll) = BUILDSHADOW$1;
 fb$result$1 = *(int64*)((uint8*)THIS$1 + 696ll);
 *(int64*)((uint8*)THIS$1 + 696ll) = *(int64*)((uint8*)THIS$1 + 696ll) + 1ll;
 label$1101:;
 return fb$result$1;
}

void _ZN9RAYTRACER16SETLIGHTPOSITIONElddd( struct $9RAYTRACER* THIS$1, int64 LIGHTID$1, double XPOS$1, double YPOS$1, double ZPOS$1 )
{
 label$1106:;
 if( ((int64)-(LIGHTID$1 < 0ll) | (int64)-(LIGHTID$1 >= *(int64*)((uint8*)THIS$1 + 696ll))) == 0ll ) goto label$1109;
 {
  goto label$1107;
  label$1109:;
 }
 *(double*)((uint8*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 704ll) + (LIGHTID$1 << (3ll & 63ll))) + 16ll) = XPOS$1;
 *(double*)((uint8*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 704ll) + (LIGHTID$1 << (3ll & 63ll))) + 24ll) = YPOS$1;
 *(double*)((uint8*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 704ll) + (LIGHTID$1 << (3ll & 63ll))) + 32ll) = ZPOS$1;
 label$1107:;
}

void _ZN9RAYTRACER16GETPOLYSCREENRECEll( struct $9RAYTRACER* THIS$1, int64 OBJID$1, int64 POLYID$1 )
{
 label$1110:;
 struct $6VECTOR* TMP$1;
 __builtin_memset( &TMP$1, 0, 8ll );
 double X$1;
 __builtin_memset( &X$1, 0, 8ll );
 double Y$1;
 __builtin_memset( &Y$1, 0, 8ll );
 if( *(int64*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) == 1ll ) goto label$1113;
 {
  goto label$1111;
  label$1113:;
 }
 if( *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 176ll) >= 1ll ) goto label$1115;
 {
  goto label$1111;
  label$1115:;
 }
 {
  struct $9RECTANGLE* TMP$1231$2;
  TMP$1231$2 = (struct $9RECTANGLE*)((uint8*)*(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 184ll) + (POLYID$1 << (3ll & 63ll))) + 432ll);
  *(double*)((uint8*)TMP$1231$2 + 32ll) = (double)*(int64*)((uint8*)THIS$1 + 424ll);
  *(double*)((uint8*)TMP$1231$2 + 40ll) = (double)*(int64*)((uint8*)THIS$1 + 432ll);
  *(double*)((uint8*)TMP$1231$2 + 64ll) = (double)-(*(int64*)((uint8*)THIS$1 + 424ll));
  *(double*)((uint8*)TMP$1231$2 + 72ll) = (double)-(*(int64*)((uint8*)THIS$1 + 432ll));
 }
 {
  int64 VC$2;
  VC$2 = 0ll;
  int64 TMP$1232$2;
  TMP$1232$2 = *(int64*)((uint8*)*(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 184ll) + (POLYID$1 << (3ll & 63ll))) + 528ll) + -1ll;
  goto label$1116;
  label$1119:;
  {
   TMP$1 = *(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)*(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 184ll) + (POLYID$1 << (3ll & 63ll))) + 536ll) + (VC$2 << (3ll & 63ll)));
   if( *(double*)((uint8*)TMP$1 + 16ll) <= 0x0p+0 ) goto label$1121;
   {
    X$1 = (double)*(int64*)((uint8*)THIS$1 + 440ll) + ((*(double*)TMP$1 * *(double*)((uint8*)THIS$1 + 456ll)) / *(double*)((uint8*)TMP$1 + 16ll));
    Y$1 = (double)*(int64*)((uint8*)THIS$1 + 448ll) - ((*(double*)((uint8*)TMP$1 + 8ll) * *(double*)((uint8*)THIS$1 + 456ll)) / *(double*)((uint8*)TMP$1 + 16ll));
    if( X$1 >= *(double*)((uint8*)*(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 184ll) + (POLYID$1 << (3ll & 63ll))) + 464ll) ) goto label$1123;
    {
     *(double*)((uint8*)*(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 184ll) + (POLYID$1 << (3ll & 63ll))) + 464ll) = X$1;
    }
    goto label$1122;
    label$1123:;
    if( X$1 <= *(double*)((uint8*)*(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 184ll) + (POLYID$1 << (3ll & 63ll))) + 496ll) ) goto label$1124;
    {
     *(double*)((uint8*)*(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 184ll) + (POLYID$1 << (3ll & 63ll))) + 496ll) = X$1;
    }
    label$1124:;
    label$1122:;
    if( Y$1 >= *(double*)((uint8*)*(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 184ll) + (POLYID$1 << (3ll & 63ll))) + 472ll) ) goto label$1126;
    {
     *(double*)((uint8*)*(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 184ll) + (POLYID$1 << (3ll & 63ll))) + 472ll) = Y$1;
    }
    goto label$1125;
    label$1126:;
    if( Y$1 <= *(double*)((uint8*)*(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 184ll) + (POLYID$1 << (3ll & 63ll))) + 504ll) ) goto label$1127;
    {
     *(double*)((uint8*)*(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 184ll) + (POLYID$1 << (3ll & 63ll))) + 504ll) = Y$1;
    }
    label$1127:;
    label$1125:;
   }
   label$1121:;
   label$1120:;
  }
  label$1117:;
  VC$2 = VC$2 + 1ll;
  label$1116:;
  if( VC$2 <= TMP$1232$2 ) goto label$1119;
  label$1118:;
 }
 label$1111:;
}

void _ZN9RAYTRACER18GETOBJECTSCREENRECEl( struct $9RAYTRACER* THIS$1, int64 OBJID$1 )
{
 label$1128:;
 double X$1;
 __builtin_memset( &X$1, 0, 8ll );
 double Y$1;
 __builtin_memset( &Y$1, 0, 8ll );
 struct $6VECTOR* LPVEC$1;
 __builtin_memset( &LPVEC$1, 0, 8ll );
 {
  struct $9RECTANGLE* TMP$1233$2;
  TMP$1233$2 = (struct $9RECTANGLE*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 16ll);
  *(double*)((uint8*)TMP$1233$2 + 32ll) = (double)*(int64*)((uint8*)THIS$1 + 424ll);
  *(double*)((uint8*)TMP$1233$2 + 40ll) = (double)*(int64*)((uint8*)THIS$1 + 432ll);
  *(double*)((uint8*)TMP$1233$2 + 64ll) = (double)-(*(int64*)((uint8*)THIS$1 + 424ll));
  *(double*)((uint8*)TMP$1233$2 + 72ll) = (double)-(*(int64*)((uint8*)THIS$1 + 432ll));
 }
 {
  $14OBJECT3D_TYPES TMP$1234$2;
  TMP$1234$2 = *($14OBJECT3D_TYPES*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll)));
  if( TMP$1234$2 != 1ll ) goto label$1131;
  label$1132:;
  {
   {
    int64 VC$4;
    VC$4 = 0ll;
    int64 TMP$1235$4;
    TMP$1235$4 = *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 160ll) + -1ll;
    goto label$1133;
    label$1136:;
    {
     LPVEC$1 = *(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 168ll) + (VC$4 << (3ll & 63ll)));
     if( *(double*)((uint8*)LPVEC$1 + 16ll) == 0x0p+0 ) goto label$1138;
     {
      X$1 = (double)*(int64*)((uint8*)THIS$1 + 440ll) + ((*(double*)LPVEC$1 * *(double*)((uint8*)THIS$1 + 456ll)) / *(double*)((uint8*)LPVEC$1 + 16ll));
      Y$1 = (double)*(int64*)((uint8*)THIS$1 + 448ll) - ((*(double*)((uint8*)LPVEC$1 + 8ll) * *(double*)((uint8*)THIS$1 + 456ll)) / *(double*)((uint8*)LPVEC$1 + 16ll));
      if( X$1 >= *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 48ll) ) goto label$1140;
      {
       *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 48ll) = X$1;
      }
      goto label$1139;
      label$1140:;
      if( X$1 <= *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 80ll) ) goto label$1141;
      {
       *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 80ll) = X$1;
      }
      label$1141:;
      label$1139:;
      if( Y$1 >= *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 56ll) ) goto label$1143;
      {
       *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 56ll) = Y$1;
      }
      goto label$1142;
      label$1143:;
      if( Y$1 <= *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 88ll) ) goto label$1144;
      {
       *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 88ll) = Y$1;
      }
      label$1144:;
      label$1142:;
     }
     label$1138:;
     label$1137:;
    }
    label$1134:;
    VC$4 = VC$4 + 1ll;
    label$1133:;
    if( VC$4 <= TMP$1235$4 ) goto label$1136;
    label$1135:;
   }
  }
  goto label$1130;
  label$1131:;
  if( TMP$1234$2 != 0ll ) goto label$1145;
  label$1146:;
  {
   {
    struct $6VECTOR* TMP$1236$4;
    TMP$1236$4 = (struct $6VECTOR*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 112ll);
    X$1 = (double)*(int64*)((uint8*)THIS$1 + 440ll) + (((*(double*)TMP$1236$4 - (*(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 152ll) * 0x1.199999999999Ap+0)) * *(double*)((uint8*)THIS$1 + 456ll)) / *(double*)((uint8*)TMP$1236$4 + 16ll));
    Y$1 = (double)*(int64*)((uint8*)THIS$1 + 448ll) - (((*(double*)((uint8*)TMP$1236$4 + 8ll) + (*(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 152ll) * 0x1.199999999999Ap+0)) * *(double*)((uint8*)THIS$1 + 456ll)) / *(double*)((uint8*)TMP$1236$4 + 16ll));
   }
   {
    struct $9RECTANGLE* TMP$1237$4;
    TMP$1237$4 = (struct $9RECTANGLE*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 16ll);
    if( X$1 >= *(double*)((uint8*)TMP$1237$4 + 32ll) ) goto label$1148;
    {
     *(double*)((uint8*)TMP$1237$4 + 32ll) = X$1;
    }
    goto label$1147;
    label$1148:;
    if( X$1 <= *(double*)((uint8*)TMP$1237$4 + 64ll) ) goto label$1149;
    {
     *(double*)((uint8*)TMP$1237$4 + 64ll) = X$1;
    }
    label$1149:;
    label$1147:;
    if( Y$1 >= *(double*)((uint8*)TMP$1237$4 + 40ll) ) goto label$1151;
    {
     *(double*)((uint8*)TMP$1237$4 + 40ll) = Y$1;
    }
    goto label$1150;
    label$1151:;
    if( Y$1 <= *(double*)((uint8*)TMP$1237$4 + 72ll) ) goto label$1152;
    {
     *(double*)((uint8*)TMP$1237$4 + 72ll) = Y$1;
    }
    label$1152:;
    label$1150:;
   }
   {
    struct $6VECTOR* TMP$1238$4;
    TMP$1238$4 = (struct $6VECTOR*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 112ll);
    X$1 = (double)*(int64*)((uint8*)THIS$1 + 440ll) + (((*(double*)TMP$1238$4 + (*(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 152ll) * 0x1.199999999999Ap+0)) * *(double*)((uint8*)THIS$1 + 456ll)) / *(double*)((uint8*)TMP$1238$4 + 16ll));
    Y$1 = (double)*(int64*)((uint8*)THIS$1 + 448ll) - (((*(double*)((uint8*)TMP$1238$4 + 8ll) - (*(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 152ll) * 0x1.199999999999Ap+0)) * *(double*)((uint8*)THIS$1 + 456ll)) / *(double*)((uint8*)TMP$1238$4 + 16ll));
   }
   {
    struct $9RECTANGLE* TMP$1239$4;
    TMP$1239$4 = (struct $9RECTANGLE*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 16ll);
    if( X$1 >= *(double*)((uint8*)TMP$1239$4 + 32ll) ) goto label$1154;
    {
     *(double*)((uint8*)TMP$1239$4 + 32ll) = X$1;
    }
    goto label$1153;
    label$1154:;
    if( X$1 <= *(double*)((uint8*)TMP$1239$4 + 64ll) ) goto label$1155;
    {
     *(double*)((uint8*)TMP$1239$4 + 64ll) = X$1;
    }
    label$1155:;
    label$1153:;
    if( Y$1 >= *(double*)((uint8*)TMP$1239$4 + 40ll) ) goto label$1157;
    {
     *(double*)((uint8*)TMP$1239$4 + 40ll) = Y$1;
    }
    goto label$1156;
    label$1157:;
    if( Y$1 <= *(double*)((uint8*)TMP$1239$4 + 72ll) ) goto label$1158;
    {
     *(double*)((uint8*)TMP$1239$4 + 72ll) = Y$1;
    }
    label$1158:;
    label$1156:;
   }
  }
  label$1145:;
  label$1130:;
 }
 label$1129:;
}

void _ZN9RAYTRACER10POLYHELPEREl( struct $9RAYTRACER* THIS$1, int64 OBJID$1 )
{
 label$1159:;
 struct $6VECTOR A$1;
 _ZN6VECTORC1Ev( &A$1 );
 struct $6VECTOR B$1;
 _ZN6VECTORC1Ev( &B$1 );
 struct $6VECTOR VP$1;
 _ZN6VECTORC1Ev( &VP$1 );
 struct $4POLY* LPPOLY$1;
 __builtin_memset( &LPPOLY$1, 0, 8ll );
 double L$1;
 __builtin_memset( &L$1, 0, 8ll );
 int64 N$1;
 __builtin_memset( &N$1, 0, 8ll );
 if( *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 176ll) >= 1ll ) goto label$1162;
 {
  goto label$1160;
  label$1162:;
 }
 {
  int64 PC$2;
  PC$2 = 0ll;
  int64 TMP$1240$2;
  TMP$1240$2 = *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 176ll) + -1ll;
  goto label$1163;
  label$1166:;
  {
   struct $6VECTOR TMP$1241$3;
   struct $6VECTOR TMP$1242$3;
   struct $6VECTOR TMP$1243$3;
   struct $6VECTOR TMP$1244$3;
   LPPOLY$1 = *(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 184ll) + (PC$2 << (3ll & 63ll)));
   N$1 = *(int64*)((uint8*)LPPOLY$1 + 528ll) + -1ll;
   _ZmiR6VECTORS0_( &TMP$1241$3, *(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)LPPOLY$1 + 536ll) + 8ll), *(*(struct $6VECTOR***)((uint8*)LPPOLY$1 + 536ll)) );
   __builtin_memcpy( &A$1, &TMP$1241$3, 32 );
   _ZmiR6VECTORS0_( &TMP$1242$3, *(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)LPPOLY$1 + 536ll) + (N$1 << (3ll & 63ll))), *(*(struct $6VECTOR***)((uint8*)LPPOLY$1 + 536ll)) );
   __builtin_memcpy( &B$1, &TMP$1242$3, 32 );
   _Zv24idivR6VECTORS0_( &TMP$1243$3, &A$1, &B$1 );
   __builtin_memcpy( (struct $6VECTOR*)((uint8*)LPPOLY$1 + 576ll), &TMP$1243$3, 32 );
   double vr$48 = _ZmlR6VECTORS0_( *(*(struct $6VECTOR***)((uint8*)LPPOLY$1 + 536ll)), (struct $6VECTOR*)((uint8*)LPPOLY$1 + 576ll) );
   *(double*)((uint8*)LPPOLY$1 + 608ll) = vr$48;
   _ZN6VECTOR10NORMALIZEDEv( &TMP$1244$3, (struct $6VECTOR*)((uint8*)LPPOLY$1 + 576ll) );
   __builtin_memcpy( (struct $6VECTOR*)((uint8*)LPPOLY$1 + 544ll), &TMP$1244$3, 32 );
   _ZN9RAYTRACER16GETPOLYSCREENRECEll( THIS$1, OBJID$1, PC$2 );
  }
  label$1164:;
  PC$2 = PC$2 + 1ll;
  label$1163:;
  if( PC$2 <= TMP$1240$2 ) goto label$1166;
  label$1165:;
 }
 _ZN9RAYTRACER18GETOBJECTSCREENRECEl( THIS$1, OBJID$1 );
 label$1160:;
}

int8 _ZN9RAYTRACER13ISPOLYONPIXELElldd( struct $9RAYTRACER* THIS$1, int64 OBJID$1, int64 POLYID$1, double X$1, double Y$1 )
{
 int8 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 1ll );
 label$1167:;
 if( *(int64*)((uint8*)THIS$1 + 680ll) >= 1ll ) goto label$1170;
 {
  fb$result$1 = (int8)0;
  goto label$1168;
  label$1170:;
 }
 if( *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 176ll) >= 1ll ) goto label$1172;
 {
  fb$result$1 = (int8)0;
  goto label$1168;
  label$1172:;
 }
 {
  struct $9RECTANGLE* TMP$1245$2;
  TMP$1245$2 = (struct $9RECTANGLE*)((uint8*)*(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 184ll) + (POLYID$1 << (3ll & 63ll))) + 432ll);
  if( ((int64)-(X$1 >= *(double*)((uint8*)TMP$1245$2 + 32ll)) & (int64)-(X$1 <= *(double*)((uint8*)TMP$1245$2 + 64ll))) == 0ll ) goto label$1174;
  {
   if( ((int64)-(Y$1 >= *(double*)((uint8*)TMP$1245$2 + 40ll)) & (int64)-(Y$1 <= *(double*)((uint8*)TMP$1245$2 + 72ll))) == 0ll ) goto label$1176;
   {
    fb$result$1 = (int8)-1;
    goto label$1168;
    label$1176:;
   }
  }
  label$1174:;
  label$1173:;
 }
 label$1168:;
 return fb$result$1;
}

int8 _ZN9RAYTRACER18ISANYOBJECTONPIXELEll( struct $9RAYTRACER* THIS$1, int64 X$1, int64 Y$1 )
{
 int8 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 1ll );
 label$1177:;
 if( *(int64*)((uint8*)THIS$1 + 680ll) != 0ll ) goto label$1180;
 {
  fb$result$1 = (int8)0;
  goto label$1178;
  label$1180:;
 }
 {
  int64 I$2;
  I$2 = 0ll;
  int64 TMP$1246$2;
  TMP$1246$2 = *(int64*)((uint8*)THIS$1 + 680ll) + -1ll;
  goto label$1181;
  label$1184:;
  {
   {
    struct $9RECTANGLE* TMP$1247$4;
    TMP$1247$4 = (struct $9RECTANGLE*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (I$2 << (3ll & 63ll))) + 16ll);
    if( ((int64)-((double)X$1 >= *(double*)((uint8*)TMP$1247$4 + 32ll)) & (int64)-((double)X$1 <= *(double*)((uint8*)TMP$1247$4 + 64ll))) == 0ll ) goto label$1186;
    {
     if( ((int64)-((double)Y$1 >= *(double*)((uint8*)TMP$1247$4 + 40ll)) & (int64)-((double)Y$1 <= *(double*)((uint8*)TMP$1247$4 + 72ll))) == 0ll ) goto label$1188;
     {
      fb$result$1 = (int8)-1;
      goto label$1178;
      label$1188:;
     }
    }
    label$1186:;
    label$1185:;
   }
  }
  label$1182:;
  I$2 = I$2 + 1ll;
  label$1181:;
  if( I$2 <= TMP$1246$2 ) goto label$1184;
  label$1183:;
 }
 fb$result$1 = (int8)0;
 goto label$1178;
 label$1178:;
 return fb$result$1;
}

void _ZN9RAYTRACER15BACKGROUNDCOLORER6VECTORS1_( struct $9RAYTRACER* THIS$1, struct $6VECTOR* RETCOL$1, struct $6VECTOR* RAYDIRECTION$1 )
{
 struct $6VECTOR TMP$1248$1;
 label$1189:;
 double L$1;
 double vr$0 = _ZmlR6VECTORS0_( RAYDIRECTION$1, RAYDIRECTION$1 );
 L$1 = vr$0;
 if( L$1 != 0x0p+0 ) goto label$1192;
 {
  *(double*)((uint8*)RAYDIRECTION$1 + 16ll) = 0x1.p+0;
 }
 goto label$1191;
 label$1192:;
 {
  L$1 = __builtin_sqrt( L$1 );
  *(double*)((uint8*)RAYDIRECTION$1 + 16ll) = *(double*)((uint8*)RAYDIRECTION$1 + 16ll) / L$1;
 }
 label$1191:;
 double vr$8 = pow( *(double*)((uint8*)RAYDIRECTION$1 + 16ll), *(double*)((uint8*)RAYDIRECTION$1 + 16ll) );
 L$1 = vr$8;
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &L$1, 0x0p+0, 0x1.p+0 );
 _ZmlR6VECTORd( &TMP$1248$1, (struct $6VECTOR*)((uint8*)THIS$1 + 512ll), L$1 );
 __builtin_memcpy( RETCOL$1, &TMP$1248$1, 32 );
 label$1190:;
}

uint32 _ZN9RAYTRACER9SHOWPOINTEll( struct $9RAYTRACER* THIS$1, int64 X$1, int64 Y$1 )
{
 uint32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$1193:;
 struct $6VECTOR OSRC$1;
 _ZN6VECTORC1Ev( &OSRC$1 );
 struct $6VECTOR ODES$1;
 _ZN6VECTORC1Ev( &ODES$1 );
 struct $6VECTOR RGBCOL$1;
 _ZN6VECTORC1Ev( &RGBCOL$1 );
 int64 CURREC$1;
 __builtin_memset( &CURREC$1, 0, 8ll );
 {
  *(double*)&ODES$1 = (double)(X$1 - *(int64*)((uint8*)THIS$1 + 440ll)) * *(double*)((uint8*)THIS$1 + 464ll);
  *(double*)((uint8*)&ODES$1 + 8ll) = (double)(*(int64*)((uint8*)THIS$1 + 448ll) - Y$1) * *(double*)((uint8*)THIS$1 + 464ll);
  *(double*)((uint8*)&ODES$1 + 16ll) = 0x1.p+0;
 }
 int8 vr$15 = _ZN9RAYTRACER18ISANYOBJECTONPIXELEll( THIS$1, X$1, Y$1 );
 if( (int64)vr$15 != -1ll ) goto label$1196;
 {
  _ZN9RAYTRACER8RAYTRACEERK6VECTORS2_lRS0_( THIS$1, (struct $6VECTOR*)&OSRC$1, (struct $6VECTOR*)&ODES$1, CURREC$1, &RGBCOL$1 );
 }
 goto label$1195;
 label$1196:;
 {
  _ZN9RAYTRACER15BACKGROUNDCOLORER6VECTORS1_( THIS$1, &RGBCOL$1, &ODES$1 );
 }
 label$1195:;
 uint32 vr$23 = _ZN6VECTORcvjEv( &RGBCOL$1 );
 fb$result$1 = vr$23;
 goto label$1194;
 label$1194:;
 return fb$result$1;
}

int8 _ZN9RAYTRACER17ISMATHSPHEREONRAYER6VECTORS1_lS1_S1_S1_( struct $9RAYTRACER* THIS$1, struct $6VECTOR* RAYORIGIN$1, struct $6VECTOR* RAYDIRECTION$1, int64 OBJID$1, struct $6VECTOR* HITPOINT$1, struct $6VECTOR* NORMALE$1, struct $6VECTOR* MAPXY$1 )
{
 struct $6VECTOR TMP$1260$1;
 struct $6VECTOR TMP$1261$1;
 struct $6VECTOR TMP$1262$1;
 int8 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 1ll );
 label$1197:;
 static struct $6VECTOR A$1;
 static int64 LABEL$1199$1;
 if( LABEL$1199$1 != 0ll ) goto label$1200;
 LABEL$1199$1 = 1ll;
 _ZN6VECTORC1Ev( &A$1 );
 label$1200:;
 static struct $6VECTOR B$1;
 static int64 LABEL$1201$1;
 if( LABEL$1201$1 != 0ll ) goto label$1202;
 LABEL$1201$1 = 1ll;
 _ZN6VECTORC1Ev( &B$1 );
 label$1202:;
 static struct $6VECTOR FOUNDPOINT$1;
 static int64 LABEL$1203$1;
 if( LABEL$1203$1 != 0ll ) goto label$1204;
 LABEL$1203$1 = 1ll;
 _ZN6VECTORC1Ev( &FOUNDPOINT$1 );
 label$1204:;
 static struct $6VECTOR FOUNDNORMALE$1;
 static int64 LABEL$1205$1;
 if( LABEL$1205$1 != 0ll ) goto label$1206;
 LABEL$1205$1 = 1ll;
 _ZN6VECTORC1Ev( &FOUNDNORMALE$1 );
 label$1206:;
 static int8 INSPHERE$1;
 static int8 FLAG$1;
 static double T1$1;
 static double T2$1;
 static double L$1;
 static double L2$1;
 static double M$1;
 static double N$1;
 static double RADIUS$1;
 static int64 MATID$1;
 FLAG$1 = (int8)0;
 INSPHERE$1 = (int8)0;
 MATID$1 = *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 144ll);
 RADIUS$1 = *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 152ll);
 double vr$9 = _ZmlR6VECTORS0_( RAYDIRECTION$1, RAYDIRECTION$1 );
 L$1 = vr$9;
 if( L$1 != 0x0p+0 ) goto label$1208;
 {
  L$1 = 0x1.0624DD2F1A9FCp-10;
  label$1208:;
 }
 M$1 = (((*(double*)RAYDIRECTION$1 * (*(double*)RAYORIGIN$1 - *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 112ll))) * 0x1.p+1) + ((*(double*)((uint8*)RAYDIRECTION$1 + 8ll) * (*(double*)((uint8*)RAYORIGIN$1 + 8ll) - *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 120ll))) * 0x1.p+1)) + ((*(double*)((uint8*)RAYDIRECTION$1 + 16ll) * (*(double*)((uint8*)RAYORIGIN$1 + 16ll) - *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 128ll))) * 0x1.p+1);
 double vr$49 = _ZmlR6VECTORS0_( (struct $6VECTOR*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 112ll), (struct $6VECTOR*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 112ll) );
 double vr$50 = _ZmlR6VECTORS0_( RAYORIGIN$1, RAYORIGIN$1 );
 N$1 = vr$49 + vr$50;
 double vr$57 = _ZmlR6VECTORS0_( (struct $6VECTOR*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 112ll), RAYORIGIN$1 );
 N$1 = (N$1 - (vr$57 * 0x1.p+1)) - (RADIUS$1 * RADIUS$1);
 T1$1 = (M$1 * M$1) - ((L$1 * N$1) * 0x1.p+2);
 if( T1$1 >= 0x0p+0 ) goto label$1210;
 {
  fb$result$1 = (int8)0;
  goto label$1198;
  label$1210:;
 }
 L2$1 = L$1 * 0x1.p+1;
 if( T1$1 != 0x0p+0 ) goto label$1212;
 {
  struct $6VECTOR TMP$1249$2;
  struct $6VECTOR TMP$1250$2;
  T1$1 = -M$1 / L2$1;
  if( T1$1 > 0x0p+0 ) goto label$1214;
  {
   fb$result$1 = (int8)0;
   goto label$1198;
   label$1214:;
  }
  struct $6VECTOR* vr$70 = _ZmldR6VECTOR( &TMP$1249$2, T1$1, RAYDIRECTION$1 );
  _ZplR6VECTORS0_( &TMP$1250$2, RAYORIGIN$1, vr$70 );
  __builtin_memcpy( &FOUNDPOINT$1, &TMP$1250$2, 32 );
  INSPHERE$1 = (int8)0;
  if( (int64)*(int8*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 259ll) != -1ll ) goto label$1216;
  {
   _ZN9RAYTRACER8GETMAPXYEllR6VECTORS1_( THIS$1, OBJID$1, 0ll, &FOUNDPOINT$1, MAPXY$1 );
   if( *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 344ll) <= -1ll ) goto label$1218;
   {
    int8 vr$82 = _ZN9RAYTRACER19ISVISIBLEONSTAMPMAPElR6VECTOR( THIS$1, MATID$1, MAPXY$1 );
    FLAG$1 = vr$82;
   }
   goto label$1217;
   label$1218:;
   {
    FLAG$1 = (int8)-1;
   }
   label$1217:;
  }
  goto label$1215;
  label$1216:;
  {
   FLAG$1 = (int8)-1;
  }
  label$1215:;
 }
 goto label$1211;
 label$1212:;
 {
  T1$1 = (-M$1 - __builtin_sqrt( T1$1 )) / L2$1;
  T2$1 = (-M$1 + __builtin_sqrt( T1$1 )) / L2$1;
  if( T1$1 >= 0x1.0624DD2F1A9FCp-10 ) goto label$1220;
  {
   T1$1 = 0x0p+0;
   label$1220:;
  }
  if( T2$1 >= 0x1.0624DD2F1A9FCp-10 ) goto label$1222;
  {
   T2$1 = 0x0p+0;
   label$1222:;
  }
  if( ((int64)-(T1$1 == 0x0p+0) & (int64)-(T2$1 == 0x0p+0)) == 0ll ) goto label$1224;
  {
   fb$result$1 = (int8)0;
   goto label$1198;
   label$1224:;
  }
  if( ((int64)-(T1$1 > 0x0p+0) & (int64)-(T2$1 > 0x0p+0)) == 0ll ) goto label$1226;
  {
   struct $6VECTOR TMP$1252$3;
   struct $6VECTOR TMP$1253$3;
   if( T2$1 >= T1$1 ) goto label$1228;
   {
    {
     double TMP$1251$5;
     TMP$1251$5 = T1$1;
     T1$1 = T2$1;
     T2$1 = TMP$1251$5;
    }
    label$1228:;
   }
   struct $6VECTOR* vr$98 = _ZmldR6VECTOR( &TMP$1252$3, T1$1, RAYDIRECTION$1 );
   _ZplR6VECTORS0_( &TMP$1253$3, RAYORIGIN$1, vr$98 );
   __builtin_memcpy( &FOUNDPOINT$1, &TMP$1253$3, 32 );
   if( (int64)*(int8*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 259ll) != -1ll ) goto label$1230;
   {
    _ZN9RAYTRACER8GETMAPXYEllR6VECTORS1_( THIS$1, OBJID$1, 0ll, &FOUNDPOINT$1, MAPXY$1 );
    if( *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 344ll) <= -1ll ) goto label$1232;
    {
     int8 vr$110 = _ZN9RAYTRACER19ISVISIBLEONSTAMPMAPElR6VECTOR( THIS$1, MATID$1, MAPXY$1 );
     FLAG$1 = vr$110;
     if( (int64)FLAG$1 != 0ll ) goto label$1234;
     {
      struct $6VECTOR TMP$1254$6;
      struct $6VECTOR TMP$1255$6;
      INSPHERE$1 = (int8)-1;
      struct $6VECTOR* vr$113 = _ZmldR6VECTOR( &TMP$1254$6, T2$1, RAYDIRECTION$1 );
      _ZplR6VECTORS0_( &TMP$1255$6, RAYORIGIN$1, vr$113 );
      __builtin_memcpy( &FOUNDPOINT$1, &TMP$1255$6, 32 );
      _ZN9RAYTRACER8GETMAPXYEllR6VECTORS1_( THIS$1, OBJID$1, 0ll, &FOUNDPOINT$1, MAPXY$1 );
      int8 vr$116 = _ZN9RAYTRACER19ISVISIBLEONSTAMPMAPElR6VECTOR( THIS$1, MATID$1, MAPXY$1 );
      FLAG$1 = vr$116;
     }
     label$1234:;
     label$1233:;
    }
    goto label$1231;
    label$1232:;
    {
     FLAG$1 = (int8)-1;
    }
    label$1231:;
   }
   goto label$1229;
   label$1230:;
   {
    FLAG$1 = (int8)-1;
   }
   label$1229:;
  }
  goto label$1225;
  label$1226:;
  {
   if( T1$1 <= 0x0p+0 ) goto label$1236;
   {
    struct $6VECTOR TMP$1256$4;
    struct $6VECTOR TMP$1257$4;
    struct $6VECTOR* vr$118 = _ZmldR6VECTOR( &TMP$1256$4, T1$1, RAYDIRECTION$1 );
    _ZplR6VECTORS0_( &TMP$1257$4, RAYORIGIN$1, vr$118 );
    __builtin_memcpy( &FOUNDPOINT$1, &TMP$1257$4, 32 );
    INSPHERE$1 = (int8)0;
   }
   goto label$1235;
   label$1236:;
   {
    struct $6VECTOR TMP$1258$4;
    struct $6VECTOR TMP$1259$4;
    struct $6VECTOR* vr$122 = _ZmldR6VECTOR( &TMP$1258$4, T2$1, RAYDIRECTION$1 );
    _ZplR6VECTORS0_( &TMP$1259$4, RAYORIGIN$1, vr$122 );
    __builtin_memcpy( &FOUNDPOINT$1, &TMP$1259$4, 32 );
    INSPHERE$1 = (int8)-1;
   }
   label$1235:;
   if( (int64)*(int8*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 259ll) != -1ll ) goto label$1238;
   {
    _ZN9RAYTRACER8GETMAPXYEllR6VECTORS1_( THIS$1, OBJID$1, 0ll, &FOUNDPOINT$1, MAPXY$1 );
    if( *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 344ll) <= -1ll ) goto label$1240;
    {
     int8 vr$134 = _ZN9RAYTRACER19ISVISIBLEONSTAMPMAPElR6VECTOR( THIS$1, MATID$1, MAPXY$1 );
     FLAG$1 = vr$134;
    }
    goto label$1239;
    label$1240:;
    {
     FLAG$1 = (int8)-1;
    }
    label$1239:;
   }
   goto label$1237;
   label$1238:;
   {
    FLAG$1 = (int8)-1;
   }
   label$1237:;
  }
  label$1225:;
 }
 label$1211:;
 if( (int64)FLAG$1 != 0ll ) goto label$1242;
 {
  fb$result$1 = (int8)0;
  goto label$1198;
  label$1242:;
 }
 _ZmiR6VECTORS0_( &TMP$1260$1, &FOUNDPOINT$1, (struct $6VECTOR*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 112ll) );
 __builtin_memcpy( NORMALE$1, &TMP$1260$1, 32 );
 struct $6VECTOR* vr$149 = _ZmlR6VECTORd( &TMP$1261$1, NORMALE$1, 0x1.004189374BC6Ap+0 );
 _ZplR6VECTORS0_( &TMP$1262$1, vr$149, (struct $6VECTOR*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 112ll) );
 __builtin_memcpy( HITPOINT$1, &TMP$1262$1, 32 );
 _ZN6VECTOR9NORMALIZEEv( NORMALE$1 );
 if( (int64)INSPHERE$1 != -1ll ) goto label$1244;
 {
  _ZN6VECTORmLEd( NORMALE$1, -0x1.p+0 );
  label$1244:;
 }
 fb$result$1 = (int8)-1;
 goto label$1198;
 label$1198:;
 return fb$result$1;
}

int8 _ZN9RAYTRACER14ISPOLYGONONRAYER6VECTORS1_lRlS1_S1_S1_( struct $9RAYTRACER* THIS$1, struct $6VECTOR* RAYORIGIN$1, struct $6VECTOR* RAYDIRECTION$1, int64 OBJID$1, int64* POLYID$1, struct $6VECTOR* HITPOINT$1, struct $6VECTOR* NORMALE$1, struct $6VECTOR* MAPXY$1 )
{
 int8 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 1ll );
 label$1245:;
 int8 FLAG$1;
 __builtin_memset( &FLAG$1, 0, 1ll );
 int64 FOUNDPOLYID$1;
 __builtin_memset( &FOUNDPOLYID$1, 0, 8ll );
 int64 MATID$1;
 __builtin_memset( &MATID$1, 0, 8ll );
 struct $6VECTOR FOUNDHITPOINT$1;
 _ZN6VECTORC1Ev( &FOUNDHITPOINT$1 );
 struct $6VECTOR FOUNDNORMALE$1;
 _ZN6VECTORC1Ev( &FOUNDNORMALE$1 );
 struct $6VECTOR FOUNDMAPXY$1;
 _ZN6VECTORC1Ev( &FOUNDMAPXY$1 );
 double OLDDISTANCE2$1;
 __builtin_memset( &OLDDISTANCE2$1, 0, 8ll );
 double NEWDISTANCE2$1;
 __builtin_memset( &NEWDISTANCE2$1, 0, 8ll );
 struct $6VECTOR A$1;
 _ZN6VECTORC1Ev( &A$1 );
 struct $6VECTOR B$1;
 _ZN6VECTORC1Ev( &B$1 );
 struct $6VECTOR C$1;
 _ZN6VECTORC1Ev( &C$1 );
 double HELP$1;
 __builtin_memset( &HELP$1, 0, 8ll );
 double L$1;
 __builtin_memset( &L$1, 0, 8ll );
 double M$1;
 __builtin_memset( &M$1, 0, 8ll );
 double N$1;
 __builtin_memset( &N$1, 0, 8ll );
 double INSIDE$1;
 __builtin_memset( &INSIDE$1, 0, 8ll );
 double ORIENT$1;
 __builtin_memset( &ORIENT$1, 0, 8ll );
 double T$1;
 __builtin_memset( &T$1, 0, 8ll );
 double X$1;
 __builtin_memset( &X$1, 0, 8ll );
 double Y$1;
 __builtin_memset( &Y$1, 0, 8ll );
 struct $4POLY* LPPOLY$1;
 __builtin_memset( &LPPOLY$1, 0, 8ll );
 if( *(int64*)((uint8*)THIS$1 + 680ll) >= 1ll ) goto label$1248;
 {
  fb$result$1 = (int8)0;
  goto label$1246;
  label$1248:;
 }
 OLDDISTANCE2$1 = 0x1.7D784p+26;
 if( *(int64*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) == 1ll ) goto label$1250;
 {
  fb$result$1 = (int8)0;
  goto label$1246;
  label$1250:;
 }
 if( *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 176ll) >= 1ll ) goto label$1252;
 {
  fb$result$1 = (int8)0;
  goto label$1246;
  label$1252:;
 }
 MATID$1 = *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 144ll);
 {
  int64 PC$2;
  PC$2 = 0ll;
  int64 TMP$1263$2;
  TMP$1263$2 = *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 176ll) + -1ll;
  goto label$1253;
  label$1256:;
  {
   struct $6VECTOR TMP$1265$3;
   struct $6VECTOR TMP$1266$3;
   if( *(int64*)((uint8*)THIS$1 + 560ll) != 0ll ) goto label$1258;
   {
    X$1 = (double)*(int64*)((uint8*)THIS$1 + 440ll) + (*(double*)RAYDIRECTION$1 * *(double*)((uint8*)THIS$1 + 456ll));
    Y$1 = (double)*(int64*)((uint8*)THIS$1 + 448ll) - (*(double*)((uint8*)RAYDIRECTION$1 + 8ll) * *(double*)((uint8*)THIS$1 + 456ll));
    int8 vr$53 = _ZN9RAYTRACER13ISPOLYONPIXELElldd( THIS$1, OBJID$1, PC$2, X$1, Y$1 );
    if( (int64)vr$53 != 0ll ) goto label$1260;
    {
     goto label$1254;
     label$1260:;
    }
   }
   label$1258:;
   label$1257:;
   LPPOLY$1 = *(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 184ll) + (PC$2 << (3ll & 63ll)));
   double vr$63 = _ZmlR6VECTORS0_( (struct $6VECTOR*)((uint8*)LPPOLY$1 + 576ll), RAYORIGIN$1 );
   HELP$1 = vr$63;
   HELP$1 = -(HELP$1 - *(double*)((uint8*)LPPOLY$1 + 608ll));
   if( HELP$1 <= 0x0p+0 ) goto label$1262;
   {
    struct $6VECTOR TMP$1264$4;
    _ZmlR6VECTORd( &TMP$1264$4, (struct $6VECTOR*)((uint8*)LPPOLY$1 + 544ll), -0x1.p+0 );
    __builtin_memcpy( NORMALE$1, &TMP$1264$4, 32 );
   }
   goto label$1261;
   label$1262:;
   {
    __builtin_memcpy( NORMALE$1, (struct $6VECTOR*)((uint8*)LPPOLY$1 + 544ll), 32 );
   }
   label$1261:;
   double vr$73 = _ZmlR6VECTORS0_( NORMALE$1, RAYDIRECTION$1 );
   T$1 = vr$73;
   if( T$1 != 0x0p+0 ) goto label$1264;
   {
    goto label$1254;
    label$1264:;
   }
   double vr$74 = _ZmlR6VECTORS0_( NORMALE$1, RAYORIGIN$1 );
   double vr$83 = _ZmlR6VECTORS0_( *(*(struct $6VECTOR***)((uint8*)*(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 184ll) + (PC$2 << (3ll & 63ll))) + 536ll)), NORMALE$1 );
   T$1 = -(vr$74 - vr$83) / T$1;
   if( T$1 > 0x0p+0 ) goto label$1266;
   {
    goto label$1254;
    label$1266:;
   }
   struct $6VECTOR* vr$88 = _ZmldR6VECTOR( &TMP$1265$3, T$1, RAYDIRECTION$1 );
   _ZplR6VECTORS0_( &TMP$1266$3, RAYORIGIN$1, vr$88 );
   __builtin_memcpy( HITPOINT$1, &TMP$1266$3, 32 );
   T$1 = 0x0p+0;
   {
    int64 VC$4;
    VC$4 = 0ll;
    int64 TMP$1267$4;
    TMP$1267$4 = *(int64*)((uint8*)LPPOLY$1 + 528ll) + -1ll;
    goto label$1267;
    label$1270:;
    {
     struct $6VECTOR TMP$1268$5;
     struct $6VECTOR TMP$1269$5;
     _ZmiR6VECTORS0_( &TMP$1268$5, *(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)LPPOLY$1 + 536ll) + (VC$4 << (3ll & 63ll))), HITPOINT$1 );
     __builtin_memcpy( &A$1, &TMP$1268$5, 32 );
     _ZmiR6VECTORS0_( &TMP$1269$5, *(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)LPPOLY$1 + 536ll) + (((VC$4 + 1ll) % *(int64*)((uint8*)LPPOLY$1 + 528ll)) << (3ll & 63ll))), HITPOINT$1 );
     __builtin_memcpy( &B$1, &TMP$1269$5, 32 );
     _ZN6VECTOR9NORMALIZEEv( &A$1 );
     _ZN6VECTOR9NORMALIZEEv( &B$1 );
     double vr$112 = _ZmlR6VECTORS0_( &A$1, &B$1 );
     INSIDE$1 = vr$112;
     if( INSIDE$1 >= -0x1.p+0 ) goto label$1272;
     {
      goto label$1254;
      label$1272:;
     }
     if( INSIDE$1 <= 0x1.p+0 ) goto label$1274;
     {
      goto label$1254;
      label$1274:;
     }
     T$1 = T$1 + __builtin_acos( INSIDE$1 );
    }
    label$1268:;
    VC$4 = VC$4 + 1ll;
    label$1267:;
    if( VC$4 <= TMP$1267$4 ) goto label$1270;
    label$1269:;
   }
   if( ((int64)-(T$1 > 0x1.921CAC083126Fp+2) & (int64)-(T$1 < 0x1.922339C0EBEEp+2)) == 0ll ) goto label$1276;
   {
    struct $6VECTOR TMP$1270$4;
    if( (int64)*(int8*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 259ll) != -1ll ) goto label$1278;
    {
     _ZN9RAYTRACER8GETMAPXYEllR6VECTORS1_( THIS$1, OBJID$1, PC$2, HITPOINT$1, MAPXY$1 );
     if( *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 344ll) <= -1ll ) goto label$1280;
     {
      int8 vr$128 = _ZN9RAYTRACER19ISVISIBLEONSTAMPMAPElR6VECTOR( THIS$1, MATID$1, MAPXY$1 );
      if( (int64)vr$128 != 0ll ) goto label$1282;
      {
       goto label$1254;
       label$1282:;
      }
     }
     label$1280:;
     label$1279:;
    }
    label$1278:;
    label$1277:;
    FLAG$1 = (int8)-1;
    _ZmiR6VECTORS0_( &TMP$1270$4, HITPOINT$1, RAYORIGIN$1 );
    __builtin_memcpy( &C$1, &TMP$1270$4, 32 );
    if( PC$2 != 0ll ) goto label$1284;
    {
     FOUNDPOLYID$1 = 0ll;
     __builtin_memcpy( &FOUNDHITPOINT$1, HITPOINT$1, 32 );
     __builtin_memcpy( &FOUNDNORMALE$1, NORMALE$1, 32 );
     __builtin_memcpy( &FOUNDMAPXY$1, MAPXY$1, 32 );
     double vr$138 = _ZmlR6VECTORS0_( &C$1, &C$1 );
     OLDDISTANCE2$1 = vr$138;
    }
    goto label$1283;
    label$1284:;
    {
     double vr$141 = _ZmlR6VECTORS0_( &C$1, &C$1 );
     NEWDISTANCE2$1 = vr$141;
     if( NEWDISTANCE2$1 >= OLDDISTANCE2$1 ) goto label$1286;
     {
      FOUNDPOLYID$1 = PC$2;
      __builtin_memcpy( &FOUNDHITPOINT$1, HITPOINT$1, 32 );
      __builtin_memcpy( &FOUNDNORMALE$1, NORMALE$1, 32 );
      __builtin_memcpy( &FOUNDMAPXY$1, MAPXY$1, 32 );
      OLDDISTANCE2$1 = NEWDISTANCE2$1;
     }
     label$1286:;
     label$1285:;
    }
    label$1283:;
   }
   label$1276:;
   label$1275:;
  }
  label$1254:;
  PC$2 = PC$2 + 1ll;
  label$1253:;
  if( PC$2 <= TMP$1263$2 ) goto label$1256;
  label$1255:;
 }
 if( (int64)FLAG$1 != -1ll ) goto label$1288;
 {
  *POLYID$1 = FOUNDPOLYID$1;
  __builtin_memcpy( HITPOINT$1, &FOUNDHITPOINT$1, 32 );
  __builtin_memcpy( NORMALE$1, &FOUNDNORMALE$1, 32 );
  if( (int64)*(int8*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 259ll) != -1ll ) goto label$1290;
  {
   __builtin_memcpy( MAPXY$1, &FOUNDMAPXY$1, 32 );
   label$1290:;
  }
 }
 goto label$1287;
 label$1288:;
 {
  *POLYID$1 = -1ll;
 }
 label$1287:;
 fb$result$1 = FLAG$1;
 goto label$1246;
 label$1246:;
 return fb$result$1;
}

int8 _ZN9RAYTRACER13ISOBJECTONRAYER6VECTORS1_lRlS1_S1_S1_S1_( struct $9RAYTRACER* THIS$1, struct $6VECTOR* RAYORIGIN$1, struct $6VECTOR* RAYDIRECTION$1, int64 OBJID$1, int64* POLYID$1, struct $6VECTOR* HITPOINT$1, struct $6VECTOR* NORMALE$1, struct $6VECTOR* BNORMALE$1, struct $6VECTOR* MAPXY$1 )
{
 int8 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 1ll );
 label$1291:;
 int8 FLAG$1;
 __builtin_memset( &FLAG$1, 0, 1ll );
 {
  $14OBJECT3D_TYPES TMP$1271$2;
  TMP$1271$2 = *($14OBJECT3D_TYPES*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll)));
  if( TMP$1271$2 != 1ll ) goto label$1294;
  label$1295:;
  {
   int8 vr$6 = _ZN9RAYTRACER14ISPOLYGONONRAYER6VECTORS1_lRlS1_S1_S1_( THIS$1, RAYORIGIN$1, RAYDIRECTION$1, OBJID$1, POLYID$1, HITPOINT$1, NORMALE$1, MAPXY$1 );
   FLAG$1 = vr$6;
  }
  goto label$1293;
  label$1294:;
  if( TMP$1271$2 != 0ll ) goto label$1296;
  label$1297:;
  {
   int8 vr$7 = _ZN9RAYTRACER17ISMATHSPHEREONRAYER6VECTORS1_lS1_S1_S1_( THIS$1, RAYORIGIN$1, RAYDIRECTION$1, OBJID$1, HITPOINT$1, NORMALE$1, MAPXY$1 );
   FLAG$1 = vr$7;
  }
  label$1296:;
  label$1293:;
 }
 if( (int64)FLAG$1 != -1ll ) goto label$1299;
 {
  if( *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (*(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 144ll) << (3ll & 63ll))) + 304ll) <= -1ll ) goto label$1301;
  {
   _ZN9RAYTRACER9DOBUMPMAPEllR6VECTORS1_S1_( THIS$1, OBJID$1, *POLYID$1, NORMALE$1, BNORMALE$1, MAPXY$1 );
  }
  label$1301:;
  label$1300:;
 }
 label$1299:;
 label$1298:;
 fb$result$1 = FLAG$1;
 goto label$1292;
 label$1292:;
 return fb$result$1;
}

int8 _ZN9RAYTRACER9LINETRACEER6VECTORS1_RlS2_S1_S1_S1_S1_( struct $9RAYTRACER* THIS$1, struct $6VECTOR* RAYORIGIN$1, struct $6VECTOR* RAYDIRECTION$1, int64* OBJID$1, int64* POLYID$1, struct $6VECTOR* HITPOINT$1, struct $6VECTOR* NORMALE$1, struct $6VECTOR* BNORMALE$1, struct $6VECTOR* MAPXY$1 )
{
 int8 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 1ll );
 label$1302:;
 static struct $6VECTOR R$1;
 static int64 LABEL$1304$1;
 if( LABEL$1304$1 != 0ll ) goto label$1305;
 LABEL$1304$1 = 1ll;
 _ZN6VECTORC1Ev( &R$1 );
 label$1305:;
 static struct $6VECTOR N$1;
 static int64 LABEL$1306$1;
 if( LABEL$1306$1 != 0ll ) goto label$1307;
 LABEL$1306$1 = 1ll;
 _ZN6VECTORC1Ev( &N$1 );
 label$1307:;
 static struct $6VECTOR N2$1;
 static int64 LABEL$1308$1;
 if( LABEL$1308$1 != 0ll ) goto label$1309;
 LABEL$1308$1 = 1ll;
 _ZN6VECTORC1Ev( &N2$1 );
 label$1309:;
 static struct $6VECTOR C$1;
 static int64 LABEL$1310$1;
 if( LABEL$1310$1 != 0ll ) goto label$1311;
 LABEL$1310$1 = 1ll;
 _ZN6VECTORC1Ev( &C$1 );
 label$1311:;
 static int8 FLAG$1;
 static int8 FLAG2$1;
 static int64 FOUNDOBJID$1;
 static int64 FOUNDPOLYID$1;
 static struct $6VECTOR FOUNDHITPOINT$1;
 static int64 LABEL$1312$1;
 if( LABEL$1312$1 != 0ll ) goto label$1313;
 LABEL$1312$1 = 1ll;
 _ZN6VECTORC1Ev( &FOUNDHITPOINT$1 );
 label$1313:;
 static struct $6VECTOR FOUNDNORMALE$1;
 static int64 LABEL$1314$1;
 if( LABEL$1314$1 != 0ll ) goto label$1315;
 LABEL$1314$1 = 1ll;
 _ZN6VECTORC1Ev( &FOUNDNORMALE$1 );
 label$1315:;
 static struct $6VECTOR FOUNDBNORMALE$1;
 static int64 LABEL$1316$1;
 if( LABEL$1316$1 != 0ll ) goto label$1317;
 LABEL$1316$1 = 1ll;
 _ZN6VECTORC1Ev( &FOUNDBNORMALE$1 );
 label$1317:;
 static struct $6VECTOR FOUNDMAPXY$1;
 static int64 LABEL$1318$1;
 if( LABEL$1318$1 != 0ll ) goto label$1319;
 LABEL$1318$1 = 1ll;
 _ZN6VECTORC1Ev( &FOUNDMAPXY$1 );
 label$1319:;
 static double OLDDISTANCE2$1;
 static double NEWDISTANCE2$1;
 if( *(int64*)((uint8*)THIS$1 + 680ll) >= 1ll ) goto label$1321;
 {
  fb$result$1 = (int8)0;
  goto label$1303;
  label$1321:;
 }
 OLDDISTANCE2$1 = 0x1.7D784p+26;
 FLAG$1 = (int8)0;
 {
  int64 OC$2;
  OC$2 = 0ll;
  int64 TMP$1272$2;
  TMP$1272$2 = *(int64*)((uint8*)THIS$1 + 680ll) + -1ll;
  goto label$1322;
  label$1325:;
  {
   int8 vr$4 = _ZN9RAYTRACER13ISOBJECTONRAYER6VECTORS1_lRlS1_S1_S1_S1_( THIS$1, RAYORIGIN$1, RAYDIRECTION$1, OC$2, POLYID$1, &R$1, &N$1, &N2$1, MAPXY$1 );
   if( (int64)vr$4 != -1ll ) goto label$1327;
   {
    if( OC$2 != 0ll ) goto label$1329;
    {
     struct $6VECTOR TMP$1273$5;
     __builtin_memcpy( &FOUNDHITPOINT$1, &R$1, 32 );
     __builtin_memcpy( &FOUNDNORMALE$1, &N$1, 32 );
     __builtin_memcpy( &FOUNDBNORMALE$1, &N2$1, 32 );
     __builtin_memcpy( &FOUNDMAPXY$1, MAPXY$1, 32 );
     FOUNDOBJID$1 = 0ll;
     FOUNDPOLYID$1 = *POLYID$1;
     _ZmiR6VECTORS0_( &TMP$1273$5, &R$1, RAYORIGIN$1 );
     __builtin_memcpy( &C$1, &TMP$1273$5, 32 );
     double vr$9 = _ZmlR6VECTORS0_( &C$1, &C$1 );
     OLDDISTANCE2$1 = vr$9;
    }
    goto label$1328;
    label$1329:;
    {
     struct $6VECTOR TMP$1274$5;
     _ZmiR6VECTORS0_( &TMP$1274$5, &R$1, RAYORIGIN$1 );
     __builtin_memcpy( &C$1, &TMP$1274$5, 32 );
     double vr$12 = _ZmlR6VECTORS0_( &C$1, &C$1 );
     NEWDISTANCE2$1 = vr$12;
     if( NEWDISTANCE2$1 >= OLDDISTANCE2$1 ) goto label$1331;
     {
      __builtin_memcpy( &FOUNDHITPOINT$1, &R$1, 32 );
      __builtin_memcpy( &FOUNDNORMALE$1, &N$1, 32 );
      __builtin_memcpy( &FOUNDBNORMALE$1, &N2$1, 32 );
      __builtin_memcpy( &FOUNDMAPXY$1, MAPXY$1, 32 );
      FOUNDOBJID$1 = OC$2;
      FOUNDPOLYID$1 = *POLYID$1;
      OLDDISTANCE2$1 = NEWDISTANCE2$1;
     }
     label$1331:;
     label$1330:;
    }
    label$1328:;
    FLAG$1 = (int8)-1;
   }
   label$1327:;
   label$1326:;
  }
  label$1323:;
  OC$2 = OC$2 + 1ll;
  label$1322:;
  if( OC$2 <= TMP$1272$2 ) goto label$1325;
  label$1324:;
 }
 if( (int64)FLAG$1 != -1ll ) goto label$1333;
 {
  *OBJID$1 = FOUNDOBJID$1;
  *POLYID$1 = FOUNDPOLYID$1;
  __builtin_memcpy( HITPOINT$1, &FOUNDHITPOINT$1, 32 );
  __builtin_memcpy( NORMALE$1, &FOUNDNORMALE$1, 32 );
  __builtin_memcpy( BNORMALE$1, &FOUNDBNORMALE$1, 32 );
  __builtin_memcpy( MAPXY$1, &FOUNDMAPXY$1, 32 );
 }
 goto label$1332;
 label$1333:;
 {
  *OBJID$1 = -1ll;
  *POLYID$1 = -1ll;
 }
 label$1332:;
 fb$result$1 = FLAG$1;
 goto label$1303;
 label$1303:;
 return fb$result$1;
}

void _ZN9RAYTRACER10LOCALCOLOREllR6VECTORS1_S1_S1_S1_S1_( struct $9RAYTRACER* THIS$1, int64 HITOBJID$1, int64 HITPOLYID$1, struct $6VECTOR* RAYDIRECTION$1, struct $6VECTOR* HITP$1, struct $6VECTOR* HITN$1, struct $6VECTOR* HITBN$1, struct $6VECTOR* MAPXY$1, struct $6VECTOR* RETCOL$1 )
{
 label$1334:;
 struct $6VECTOR L$1;
 _ZN6VECTORC1Ev( &L$1 );
 struct $6VECTOR V$1;
 _ZN6VECTORC1Ev( &V$1 );
 struct $6VECTOR DUMMY1$1;
 _ZN6VECTORC1Ev( &DUMMY1$1 );
 struct $6VECTOR DUMMY2$1;
 _ZN6VECTORC1Ev( &DUMMY2$1 );
 struct $6VECTOR DUMMY3$1;
 _ZN6VECTORC1Ev( &DUMMY3$1 );
 struct $6VECTOR DUMMY4$1;
 _ZN6VECTORC1Ev( &DUMMY4$1 );
 struct $6VECTOR HNORMAL$1;
 _ZN6VECTORC1Ev( &HNORMAL$1 );
 double VDOT$1;
 __builtin_memset( &VDOT$1, 0, 8ll );
 double LIGHTCOSINUS$1;
 __builtin_memset( &LIGHTCOSINUS$1, 0, 8ll );
 double SPOTANGLE$1;
 __builtin_memset( &SPOTANGLE$1, 0, 8ll );
 double LIGHTSPECULAR$1;
 __builtin_memset( &LIGHTSPECULAR$1, 0, 8ll );
 double LIGHTDISTANCE$1;
 __builtin_memset( &LIGHTDISTANCE$1, 0, 8ll );
 struct $6VECTOR COLLIGHT$1;
 _ZN6VECTORC1Ev( &COLLIGHT$1 );
 struct $6VECTOR COLSPECULAR$1;
 _ZN6VECTORC1Ev( &COLSPECULAR$1 );
 struct $6VECTOR COLDISTANCE$1;
 _ZN6VECTORC1Ev( &COLDISTANCE$1 );
 struct $6VECTOR COLAMBIENT$1;
 _ZN6VECTORC1Ev( &COLAMBIENT$1 );
 int64 OBJID$1;
 __builtin_memset( &OBJID$1, 0, 8ll );
 int64 POLYID$1;
 __builtin_memset( &POLYID$1, 0, 8ll );
 *(double*)RETCOL$1 = 0x0p+0;
 *(double*)((uint8*)RETCOL$1 + 8ll) = 0x0p+0;
 *(double*)((uint8*)RETCOL$1 + 16ll) = 0x0p+0;
 if( *(int64*)((uint8*)THIS$1 + 696ll) >= 0ll ) goto label$1337;
 {
  goto label$1335;
  label$1337:;
 }
 {
  int64 LC$2;
  LC$2 = 0ll;
  int64 TMP$1275$2;
  TMP$1275$2 = *(int64*)((uint8*)THIS$1 + 696ll) + -1ll;
  goto label$1338;
  label$1341:;
  {
   struct $6VECTOR TMP$1276$3;
   int64 TMP$1277$3;
   struct $6VECTOR TMP$1282$3;
   struct $6VECTOR TMP$1283$3;
   _ZmiR6VECTORS0_( &TMP$1276$3, HITP$1, (struct $6VECTOR*)((uint8*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 704ll) + (LC$2 << (3ll & 63ll))) + 16ll) );
   __builtin_memcpy( &L$1, &TMP$1276$3, 32 );
   if( (int64)*(int8*)((uint8*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 704ll) + (LC$2 << (3ll & 63ll))) + 192ll) != -1ll ) goto label$1342;
   TMP$1277$3 = (int64)-((int64)*(int8*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (*(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (HITOBJID$1 << (3ll & 63ll))) + 144ll) << (3ll & 63ll))) + 257ll) == -1ll);
   goto label$1374;
   label$1342:;
   TMP$1277$3 = 0ll;
   label$1374:;
   if( TMP$1277$3 == 0ll ) goto label$1344;
   {
    *(int64*)((uint8*)THIS$1 + 560ll) = 1ll;
    int8 vr$60 = _ZN9RAYTRACER9LINETRACEER6VECTORS1_RlS2_S1_S1_S1_S1_( THIS$1, (struct $6VECTOR*)((uint8*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 704ll) + (LC$2 << (3ll & 63ll))) + 16ll), &L$1, &OBJID$1, &POLYID$1, &DUMMY1$1, &DUMMY2$1, &DUMMY3$1, &DUMMY4$1 );
    if( (int64)vr$60 != -1ll ) goto label$1346;
    {
     if( OBJID$1 == HITOBJID$1 ) goto label$1348;
     {
      if( (int64)*(int8*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (*(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 144ll) << (3ll & 63ll))) + 256ll) != 0ll ) goto label$1350;
      {
       goto label$1339;
       label$1350:;
      }
     }
     label$1348:;
     label$1347:;
    }
    label$1346:;
    label$1345:;
    if( ((int64)-(*(int64*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (HITOBJID$1 << (3ll & 63ll))) == 1ll) & (int64)-(HITPOLYID$1 != POLYID$1)) == 0ll ) goto label$1352;
    {
     goto label$1339;
     label$1352:;
    }
   }
   label$1344:;
   label$1343:;
   if( *(int64*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 704ll) + (LC$2 << (3ll & 63ll))) != 1ll ) goto label$1354;
   {
    struct $6VECTOR TMP$1278$4;
    _ZmiR6VECTORS0_( &TMP$1278$4, (struct $6VECTOR*)((uint8*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 704ll) + (LC$2 << (3ll & 63ll))) + 16ll), HITP$1 );
    __builtin_memcpy( &HNORMAL$1, &TMP$1278$4, 32 );
    _ZN6VECTOR9NORMALIZEEv( &HNORMAL$1 );
    double vr$97 = _ZmlR6VECTORS0_( &HNORMAL$1, (struct $6VECTOR*)((uint8*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 704ll) + (LC$2 << (3ll & 63ll))) + 112ll) );
    SPOTANGLE$1 = vr$97;
    if( SPOTANGLE$1 >= 0x0p+0 ) goto label$1356;
    {
     goto label$1339;
     label$1356:;
    }
    SPOTANGLE$1 = __builtin_acos( SPOTANGLE$1 );
    if( SPOTANGLE$1 <= *(double*)((uint8*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 704ll) + (LC$2 << (3ll & 63ll))) + 184ll) ) goto label$1358;
    {
     goto label$1339;
     label$1358:;
    }
   }
   label$1354:;
   label$1353:;
   _ZN6VECTORmLEd( &L$1, -0x1.p+0 );
   _ZN6VECTOR9NORMALIZEEv( &L$1 );
   if( *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (*(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (HITOBJID$1 << (3ll & 63ll))) + 144ll) << (3ll & 63ll))) + 304ll) <= -1ll ) goto label$1360;
   {
    double vr$114 = _ZmlR6VECTORS0_( &L$1, HITBN$1 );
    LIGHTCOSINUS$1 = vr$114;
   }
   goto label$1359;
   label$1360:;
   {
    double vr$116 = _ZmlR6VECTORS0_( &L$1, HITN$1 );
    LIGHTCOSINUS$1 = vr$116;
   }
   label$1359:;
   LIGHTCOSINUS$1 = LIGHTCOSINUS$1 * *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (*(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (HITOBJID$1 << (3ll & 63ll))) + 144ll) << (3ll & 63ll))) + 200ll);
   if( LIGHTCOSINUS$1 > 0x0p+0 ) goto label$1362;
   {
    goto label$1339;
    label$1362:;
   }
   if( *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (*(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (HITOBJID$1 << (3ll & 63ll))) + 144ll) << (3ll & 63ll))) + 208ll) <= 0x0p+0 ) goto label$1364;
   {
    struct $6VECTOR TMP$1279$4;
    struct $6VECTOR TMP$1280$4;
    double TMP$1281$4;
    struct $6VECTOR* vr$137 = _ZmiR6VECTORS0_( &TMP$1279$4, &L$1, RAYDIRECTION$1 );
    _ZmlR6VECTORd( &TMP$1280$4, vr$137, 0x1.p-1 );
    __builtin_memcpy( &V$1, &TMP$1280$4, 32 );
    _ZN6VECTOR9NORMALIZEEv( &V$1 );
    double vr$142 = _ZmlR6VECTORS0_( &V$1, HITN$1 );
    VDOT$1 = vr$142;
    if( VDOT$1 >= 0x0p+0 ) goto label$1365;
    TMP$1281$4 = -VDOT$1;
    goto label$1375;
    label$1365:;
    TMP$1281$4 = VDOT$1;
    label$1375:;
    double vr$160 = pow( TMP$1281$4, *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (*(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (HITOBJID$1 << (3ll & 63ll))) + 144ll) << (3ll & 63ll))) + 216ll) );
    LIGHTSPECULAR$1 = *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (*(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (HITOBJID$1 << (3ll & 63ll))) + 144ll) << (3ll & 63ll))) + 208ll) * vr$160;
    if( LIGHTSPECULAR$1 <= 0x0p+0 ) goto label$1367;
    {
     LIGHTCOSINUS$1 = LIGHTCOSINUS$1 + LIGHTSPECULAR$1;
     if( LIGHTCOSINUS$1 <= 0x1.p+0 ) goto label$1369;
     {
      LIGHTCOSINUS$1 = 0x1.p+0;
      label$1369:;
     }
    }
    label$1367:;
    label$1366:;
   }
   label$1364:;
   label$1363:;
   _ZmlR6VECTORd( &TMP$1282$3, (struct $6VECTOR*)((uint8*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 704ll) + (LC$2 << (3ll & 63ll))) + 144ll), LIGHTCOSINUS$1 );
   __builtin_memcpy( &COLLIGHT$1, &TMP$1282$3, 32 );
   double vr$176 = _ZmlR6VECTORS0_( HITP$1, (struct $6VECTOR*)((uint8*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 704ll) + (LC$2 << (3ll & 63ll))) + 16ll) );
   LIGHTDISTANCE$1 = __builtin_sqrt( vr$176 );
   LIGHTDISTANCE$1 = __builtin_exp( ((-0x1.62E42FEFA39ECp-1 / *(double*)((uint8*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 704ll) + (LC$2 << (3ll & 63ll))) + 176ll)) * LIGHTDISTANCE$1) );
   if( LIGHTDISTANCE$1 > 0x0p+0 ) goto label$1371;
   {
    goto label$1339;
    label$1371:;
   }
   if( LIGHTDISTANCE$1 <= 0x1.p+0 ) goto label$1373;
   {
    LIGHTDISTANCE$1 = 0x1.p+0;
    label$1373:;
   }
   struct $6VECTOR* vr$187 = _ZmlR6VECTORd( &TMP$1283$3, &COLLIGHT$1, LIGHTDISTANCE$1 );
   _ZN6VECTORpLERS_( RETCOL$1, vr$187 );
  }
  label$1339:;
  LC$2 = LC$2 + 1ll;
  label$1338:;
  if( LC$2 <= TMP$1275$2 ) goto label$1341;
  label$1340:;
 }
 _ZN6VECTORpLERS_( RETCOL$1, (struct $6VECTOR*)((uint8*)THIS$1 + 472ll) );
 label$1335:;
}

void _ZN9RAYTRACER9VECMIRRORER6VECTORS1_S1_S1_( struct $9RAYTRACER* THIS$1, struct $6VECTOR* RETVEC$1, struct $6VECTOR* RAYDIRECTION$1, struct $6VECTOR* HITPOINT$1, struct $6VECTOR* NORMALE$1 )
{
 struct $6VECTOR TMP$1284$1;
 struct $6VECTOR TMP$1285$1;
 struct $6VECTOR TMP$1286$1;
 label$1376:;
 struct $6VECTOR I$1;
 _ZN6VECTORC1Ev( &I$1 );
 struct $6VECTOR I2$1;
 _ZN6VECTORC1Ev( &I2$1 );
 double L$1;
 __builtin_memset( &L$1, 0, 8ll );
 _ZN6VECTOR10NORMALIZEDEv( &TMP$1284$1, RAYDIRECTION$1 );
 __builtin_memcpy( &I$1, &TMP$1284$1, 32 );
 __builtin_memcpy( RETVEC$1, &I$1, 32 );
 _ZN6VECTORmLEd( &I$1, -0x1.p+0 );
 _ZmlR6VECTORd( &TMP$1285$1, &I$1, 0x1.999999999999Ap-4 );
 __builtin_memcpy( &I2$1, &TMP$1285$1, 32 );
 _ZN6VECTORpLERS_( HITPOINT$1, &I2$1 );
 double vr$14 = _ZmlR6VECTORS0_( NORMALE$1, &I$1 );
 L$1 = vr$14;
 L$1 = L$1 * 0x1.p+1;
 _ZmldR6VECTOR( &TMP$1286$1, L$1, NORMALE$1 );
 __builtin_memcpy( &I$1, &TMP$1286$1, 32 );
 _ZN6VECTORpLERS_( RETVEC$1, &I$1 );
 label$1377:;
}

void _ZN9RAYTRACER9VECBROKENElR6VECTORS1_S1_S1_( struct $9RAYTRACER* THIS$1, int64 HITOBJNR$1, struct $6VECTOR* HITPOINT$1, struct $6VECTOR* NORMALE$1, struct $6VECTOR* RAYDIRECTION$1, struct $6VECTOR* TDES$1 )
{
 struct $6VECTOR TMP$1287$1;
 struct $6VECTOR TMP$1288$1;
 struct $6VECTOR TMP$1289$1;
 label$1378:;
 struct $6VECTOR I$1;
 _ZN6VECTORC1Ev( &I$1 );
 struct $6VECTOR I2$1;
 _ZN6VECTORC1Ev( &I2$1 );
 double L$1;
 __builtin_memset( &L$1, 0, 8ll );
 double IOR$1;
 __builtin_memset( &IOR$1, 0, 8ll );
 double COSINUS$1;
 __builtin_memset( &COSINUS$1, 0, 8ll );
 IOR$1 = *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (*(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (HITOBJNR$1 << (3ll & 63ll))) + 144ll) << (3ll & 63ll))) + 248ll);
 if( IOR$1 >= 0x1.47AE147AE147Bp-7 ) goto label$1381;
 {
  IOR$1 = 0x1.47AE147AE147Bp-7;
  label$1381:;
 }
 _ZN6VECTOR10NORMALIZEDEv( &TMP$1287$1, RAYDIRECTION$1 );
 __builtin_memcpy( &I$1, &TMP$1287$1, 32 );
 _ZN6VECTORmLEd( &I$1, -0x1.p+0 );
 double vr$18 = _ZmlR6VECTORS0_( NORMALE$1, &I$1 );
 L$1 = vr$18;
 COSINUS$1 = __builtin_sqrt( (-((-(L$1 * L$1) + 0x1.p+0) / (IOR$1 * IOR$1)) + 0x1.p+0) );
 COSINUS$1 = COSINUS$1 - (L$1 / IOR$1);
 _ZmldR6VECTOR( &TMP$1288$1, COSINUS$1, NORMALE$1 );
 __builtin_memcpy( TDES$1, &TMP$1288$1, 32 );
 _ZN6VECTORmIERS_( TDES$1, &I$1 );
 _ZN6VECTOR10NORMALIZEDEv( &TMP$1289$1, RAYDIRECTION$1 );
 __builtin_memcpy( &I2$1, &TMP$1289$1, 32 );
 _ZN6VECTORmLEd( &I2$1, 0x1.999999999999Ap-4 );
 _ZN6VECTORpLERS_( HITPOINT$1, &I2$1 );
 label$1379:;
}

void _ZN9RAYTRACER8RAYTRACEERK6VECTORS2_lRS0_( struct $9RAYTRACER* THIS$1, struct $6VECTOR* _RAYORIGIN$1, struct $6VECTOR* _RAYDIRECTION$1, int64 CURRAYDEPTH$1, struct $6VECTOR* RETCOL$1 )
{
 label$1382:;
 struct $6VECTOR LCOL$1;
 _ZN6VECTORC1Ev( &LCOL$1 );
 struct $6VECTOR MCOL$1;
 _ZN6VECTORC1Ev( &MCOL$1 );
 struct $6VECTOR TCOL$1;
 _ZN6VECTORC1Ev( &TCOL$1 );
 struct $6VECTOR MIRRORAYDIRECTION$1;
 _ZN6VECTORC1Ev( &MIRRORAYDIRECTION$1 );
 struct $6VECTOR BROKENRAYDIRECTION$1;
 _ZN6VECTORC1Ev( &BROKENRAYDIRECTION$1 );
 struct $6VECTOR HITPOINT$1;
 _ZN6VECTORC1Ev( &HITPOINT$1 );
 struct $6VECTOR NORMALE$1;
 _ZN6VECTORC1Ev( &NORMALE$1 );
 struct $6VECTOR BUMPNORMALE$1;
 _ZN6VECTORC1Ev( &BUMPNORMALE$1 );
 struct $6VECTOR MAPXY$1;
 _ZN6VECTORC1Ev( &MAPXY$1 );
 int64 HITOBJID$1;
 __builtin_memset( &HITOBJID$1, 0, 8ll );
 int64 HITPOLYID$1;
 __builtin_memset( &HITPOLYID$1, 0, 8ll );
 int64 MATID$1;
 __builtin_memset( &MATID$1, 0, 8ll );
 struct $8MATERIAL* PMAT$1;
 __builtin_memset( &PMAT$1, 0, 8ll );
 *(int64*)((uint8*)THIS$1 + 560ll) = CURRAYDEPTH$1;
 struct $6VECTOR RAYORIGIN$1;
 __builtin_memcpy( &RAYORIGIN$1, _RAYORIGIN$1, 32 );
 struct $6VECTOR RAYDIRECTION$1;
 __builtin_memcpy( &RAYDIRECTION$1, _RAYDIRECTION$1, 32 );
 int8 vr$24 = _ZN9RAYTRACER9LINETRACEER6VECTORS1_RlS2_S1_S1_S1_S1_( THIS$1, &RAYORIGIN$1, &RAYDIRECTION$1, &HITOBJID$1, &HITPOLYID$1, &HITPOINT$1, &NORMALE$1, &BUMPNORMALE$1, &MAPXY$1 );
 if( (int64)vr$24 != 0ll ) goto label$1385;
 {
  if( CURRAYDEPTH$1 != 0ll ) goto label$1387;
  {
   _ZN9RAYTRACER15BACKGROUNDCOLORER6VECTORS1_( THIS$1, RETCOL$1, &RAYDIRECTION$1 );
   label$1387:;
  }
 }
 goto label$1384;
 label$1385:;
 {
  struct $6VECTOR TMP$1290$2;
  struct $6VECTOR TMP$1291$2;
  struct $6VECTOR TMP$1292$2;
  struct $6VECTOR TMP$1293$2;
  struct $6VECTOR TMP$1294$2;
  MATID$1 = *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (HITOBJID$1 << (3ll & 63ll))) + 144ll);
  PMAT$1 = *(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll)));
  _ZN9RAYTRACER10LOCALCOLOREllR6VECTORS1_S1_S1_S1_S1_( THIS$1, HITOBJID$1, HITPOLYID$1, &RAYDIRECTION$1, &HITPOINT$1, &NORMALE$1, &BUMPNORMALE$1, &MAPXY$1, &LCOL$1 );
  MATID$1 = *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (HITOBJID$1 << (3ll & 63ll))) + 144ll);
  PMAT$1 = *(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll)));
  if( CURRAYDEPTH$1 < *(int64*)((uint8*)THIS$1 + 552ll) ) goto label$1389;
  {
   *(double*)&TCOL$1 = 0x0p+0;
   *(double*)((uint8*)&TCOL$1 + 8ll) = 0x0p+0;
   *(double*)((uint8*)&TCOL$1 + 16ll) = 0x0p+0;
   *(double*)&MCOL$1 = 0x0p+0;
   *(double*)((uint8*)&MCOL$1 + 8ll) = 0x0p+0;
   *(double*)((uint8*)&MCOL$1 + 16ll) = 0x0p+0;
  }
  goto label$1388;
  label$1389:;
  {
   if( *(double*)((uint8*)PMAT$1 + 240ll) <= 0x0p+0 ) goto label$1391;
   {
    _ZN9RAYTRACER9VECBROKENElR6VECTORS1_S1_S1_( THIS$1, HITOBJID$1, &HITPOINT$1, &NORMALE$1, &RAYDIRECTION$1, &BROKENRAYDIRECTION$1 );
    _ZN9RAYTRACER8RAYTRACEERK6VECTORS2_lRS0_( THIS$1, (struct $6VECTOR*)&HITPOINT$1, (struct $6VECTOR*)&BROKENRAYDIRECTION$1, CURRAYDEPTH$1 + 1ll, &TCOL$1 );
   }
   goto label$1390;
   label$1391:;
   {
    *(double*)&TCOL$1 = 0x0p+0;
    *(double*)((uint8*)&TCOL$1 + 8ll) = 0x0p+0;
    *(double*)((uint8*)&TCOL$1 + 16ll) = 0x0p+0;
   }
   label$1390:;
   if( *(double*)((uint8*)PMAT$1 + 232ll) <= 0x0p+0 ) goto label$1393;
   {
    _ZN9RAYTRACER9VECMIRRORER6VECTORS1_S1_S1_( THIS$1, &MIRRORAYDIRECTION$1, &RAYDIRECTION$1, &HITPOINT$1, &NORMALE$1 );
    _ZN9RAYTRACER8RAYTRACEERK6VECTORS2_lRS0_( THIS$1, (struct $6VECTOR*)&HITPOINT$1, (struct $6VECTOR*)&MIRRORAYDIRECTION$1, CURRAYDEPTH$1 + 1ll, &MCOL$1 );
   }
   goto label$1392;
   label$1393:;
   {
    *(double*)&MCOL$1 = 0x0p+0;
    *(double*)((uint8*)&MCOL$1 + 8ll) = 0x0p+0;
    *(double*)((uint8*)&MCOL$1 + 16ll) = 0x0p+0;
   }
   label$1392:;
  }
  label$1388:;
  struct $6VECTOR* vr$69 = _ZmlR6VECTORd( &TMP$1293$2, &TCOL$1, *(double*)((uint8*)PMAT$1 + 240ll) );
  struct $6VECTOR* vr$73 = _ZmlR6VECTORd( &TMP$1291$2, &MCOL$1, *(double*)((uint8*)PMAT$1 + 232ll) );
  struct $6VECTOR* vr$77 = _ZmlR6VECTORd( &TMP$1290$2, &LCOL$1, *(double*)((uint8*)PMAT$1 + 224ll) );
  struct $6VECTOR* vr$79 = _ZplR6VECTORS0_( &TMP$1292$2, vr$77, vr$73 );
  _ZplR6VECTORS0_( &TMP$1294$2, vr$79, vr$69 );
  __builtin_memcpy( RETCOL$1, &TMP$1294$2, 32 );
  _ZN9RAYTRACER12SURFACECOLORElR6VECTORS1_( THIS$1, HITOBJID$1, &MAPXY$1, RETCOL$1 );
 }
 label$1384:;
 label$1383:;
}

void _ZN9RAYTRACER5VBLUREll( struct $9RAYTRACER* THIS$1, int64 XP$1, int64 YP$1 )
{
 struct $6VECTOR TMP$1297$1;
 struct $6VECTOR TMP$1298$1;
 struct $6VECTOR TMP$1299$1;
 label$1394:;
 struct $6VECTOR VA$1;
 uint32 vr$3 = fb_GfxPoint( (void*)0ull, (float)XP$1, (float)(YP$1 + -1ll) );
 _ZN6VECTORC1Ej( &VA$1, vr$3 );
 struct $6VECTOR VB$1;
 uint32 vr$7 = fb_GfxPoint( (void*)0ull, (float)XP$1, (float)YP$1 );
 _ZN6VECTORC1Ej( &VB$1, vr$7 );
 struct $6VECTOR AB$1;
 struct $6VECTOR* vr$11 = _ZmlR6VECTORd( &TMP$1298$1, &VB$1, 0x1.p-1 );
 struct $6VECTOR* vr$14 = _ZmlR6VECTORd( &TMP$1297$1, &VA$1, 0x1.p-1 );
 struct $6VECTOR* vr$16 = _ZplR6VECTORS0_( &TMP$1299$1, vr$14, vr$11 );
 _ZN6VECTORC1ERS_( &AB$1, vr$16 );
 uint32 vr$19 = _ZN6VECTORcvjEv( &AB$1 );
 fb_GfxPset( (void*)0ull, (float)XP$1, (float)(YP$1 + -1ll), vr$19, 4, 0 );
 label$1395:;
}

void _ZN9RAYTRACER5HBLUREll( struct $9RAYTRACER* THIS$1, int64 XP$1, int64 YP$1 )
{
 struct $6VECTOR TMP$1302$1;
 struct $6VECTOR TMP$1303$1;
 struct $6VECTOR TMP$1304$1;
 label$1396:;
 struct $6VECTOR VA$1;
 uint32 vr$3 = fb_GfxPoint( (void*)0ull, (float)(XP$1 + -1ll), (float)YP$1 );
 _ZN6VECTORC1Ej( &VA$1, vr$3 );
 struct $6VECTOR VB$1;
 uint32 vr$7 = fb_GfxPoint( (void*)0ull, (float)XP$1, (float)YP$1 );
 _ZN6VECTORC1Ej( &VB$1, vr$7 );
 struct $6VECTOR AB$1;
 struct $6VECTOR* vr$11 = _ZmlR6VECTORd( &TMP$1303$1, &VB$1, 0x1.p-1 );
 struct $6VECTOR* vr$14 = _ZmlR6VECTORd( &TMP$1302$1, &VA$1, 0x1.p-1 );
 struct $6VECTOR* vr$16 = _ZplR6VECTORS0_( &TMP$1304$1, vr$14, vr$11 );
 _ZN6VECTORC1ERS_( &AB$1, vr$16 );
 uint32 vr$19 = _ZN6VECTORcvjEv( &AB$1 );
 fb_GfxPset( (void*)0ull, (float)(XP$1 + -1ll), (float)YP$1, vr$19, 4, 0 );
 label$1397:;
}

void _ZN9RAYTRACER8EDGEBLUREv( struct $9RAYTRACER* THIS$1 )
{
 label$1398:;
 {
  int64 Y$2;
  Y$2 = 1ll;
  int64 TMP$1305$2;
  TMP$1305$2 = *(int64*)((uint8*)THIS$1 + 432ll) + -1ll;
  goto label$1400;
  label$1403:;
  {
   {
    int64 X$4;
    X$4 = 0ll;
    int64 TMP$1306$4;
    TMP$1306$4 = *(int64*)((uint8*)THIS$1 + 424ll) + -1ll;
    goto label$1404;
    label$1407:;
    {
     struct $6VECTOR TMP$1309$5;
     struct $6VECTOR A$5;
     uint32 vr$7 = fb_GfxPoint( (void*)0ull, (float)X$4, (float)(Y$2 + -1ll) );
     _ZN6VECTORC1Ej( &A$5, vr$7 );
     struct $6VECTOR B$5;
     uint32 vr$11 = fb_GfxPoint( (void*)0ull, (float)X$4, (float)Y$2 );
     _ZN6VECTORC1Ej( &B$5, vr$11 );
     struct $6VECTOR D$5;
     struct $6VECTOR* vr$16 = _ZmiR6VECTORS0_( &TMP$1309$5, &B$5, &A$5 );
     _ZN6VECTORC1ERS_( &D$5, vr$16 );
     double L$5;
     double vr$19 = _ZN6VECTOR6LENGTHEv( &D$5 );
     L$5 = vr$19;
     if( L$5 < 0x1.54FDF3B645A1Dp-2 ) goto label$1409;
     {
      void* vr$24 = realloc( *(void**)((uint8*)THIS$1 + 736ll), (uint64)((*(int64*)((uint8*)THIS$1 + 728ll) << (3ll & 63ll)) + 8ll) );
      *(struct $7AAPIXEL***)((uint8*)THIS$1 + 736ll) = (struct $7AAPIXEL**)vr$24;
      void* vr$26 = malloc( 448ull );
      *(struct $7AAPIXEL**)((uint8*)*(struct $7AAPIXEL***)((uint8*)THIS$1 + 736ll) + (*(int64*)((uint8*)THIS$1 + 728ll) << (3ll & 63ll))) = (struct $7AAPIXEL*)vr$26;
      *(int64*)((uint8*)*(struct $7AAPIXEL**)((uint8*)*(struct $7AAPIXEL***)((uint8*)THIS$1 + 736ll) + (*(int64*)((uint8*)THIS$1 + 728ll) << (3ll & 63ll))) + 424ll) = 1ll;
      *(int64*)((uint8*)*(struct $7AAPIXEL**)((uint8*)*(struct $7AAPIXEL***)((uint8*)THIS$1 + 736ll) + (*(int64*)((uint8*)THIS$1 + 728ll) << (3ll & 63ll))) + 432ll) = X$4;
      *(int64*)((uint8*)*(struct $7AAPIXEL**)((uint8*)*(struct $7AAPIXEL***)((uint8*)THIS$1 + 736ll) + (*(int64*)((uint8*)THIS$1 + 728ll) << (3ll & 63ll))) + 440ll) = Y$2;
      *(int64*)((uint8*)THIS$1 + 728ll) = *(int64*)((uint8*)THIS$1 + 728ll) + 1ll;
     }
     label$1409:;
     label$1408:;
    }
    label$1405:;
    X$4 = X$4 + 1ll;
    label$1404:;
    if( X$4 <= TMP$1306$4 ) goto label$1407;
    label$1406:;
   }
  }
  label$1401:;
  Y$2 = Y$2 + 1ll;
  label$1400:;
  if( Y$2 <= TMP$1305$2 ) goto label$1403;
  label$1402:;
 }
 {
  int64 Y$2;
  Y$2 = 0ll;
  int64 TMP$1310$2;
  TMP$1310$2 = *(int64*)((uint8*)THIS$1 + 432ll) + -1ll;
  goto label$1410;
  label$1413:;
  {
   {
    int64 X$4;
    X$4 = 1ll;
    int64 TMP$1311$4;
    TMP$1311$4 = *(int64*)((uint8*)THIS$1 + 424ll) + -1ll;
    goto label$1414;
    label$1417:;
    {
     struct $6VECTOR TMP$1314$5;
     struct $6VECTOR A$5;
     uint32 vr$58 = fb_GfxPoint( (void*)0ull, (float)(X$4 + -1ll), (float)Y$2 );
     _ZN6VECTORC1Ej( &A$5, vr$58 );
     struct $6VECTOR B$5;
     uint32 vr$62 = fb_GfxPoint( (void*)0ull, (float)X$4, (float)Y$2 );
     _ZN6VECTORC1Ej( &B$5, vr$62 );
     struct $6VECTOR D$5;
     struct $6VECTOR* vr$67 = _ZmiR6VECTORS0_( &TMP$1314$5, &B$5, &A$5 );
     _ZN6VECTORC1ERS_( &D$5, vr$67 );
     double L$5;
     double vr$70 = _ZN6VECTOR6LENGTHEv( &D$5 );
     L$5 = vr$70;
     if( L$5 < 0x1.54FDF3B645A1Dp-2 ) goto label$1419;
     {
      void* vr$75 = realloc( *(void**)((uint8*)THIS$1 + 736ll), (uint64)((*(int64*)((uint8*)THIS$1 + 728ll) << (3ll & 63ll)) + 8ll) );
      *(struct $7AAPIXEL***)((uint8*)THIS$1 + 736ll) = (struct $7AAPIXEL**)vr$75;
      void* vr$77 = malloc( 448ull );
      *(struct $7AAPIXEL**)((uint8*)*(struct $7AAPIXEL***)((uint8*)THIS$1 + 736ll) + (*(int64*)((uint8*)THIS$1 + 728ll) << (3ll & 63ll))) = (struct $7AAPIXEL*)vr$77;
      *(int64*)((uint8*)*(struct $7AAPIXEL**)((uint8*)*(struct $7AAPIXEL***)((uint8*)THIS$1 + 736ll) + (*(int64*)((uint8*)THIS$1 + 728ll) << (3ll & 63ll))) + 424ll) = 0ll;
      *(int64*)((uint8*)*(struct $7AAPIXEL**)((uint8*)*(struct $7AAPIXEL***)((uint8*)THIS$1 + 736ll) + (*(int64*)((uint8*)THIS$1 + 728ll) << (3ll & 63ll))) + 432ll) = X$4;
      *(int64*)((uint8*)*(struct $7AAPIXEL**)((uint8*)*(struct $7AAPIXEL***)((uint8*)THIS$1 + 736ll) + (*(int64*)((uint8*)THIS$1 + 728ll) << (3ll & 63ll))) + 440ll) = Y$2;
      *(int64*)((uint8*)THIS$1 + 728ll) = *(int64*)((uint8*)THIS$1 + 728ll) + 1ll;
     }
     label$1419:;
     label$1418:;
    }
    label$1415:;
    X$4 = X$4 + 1ll;
    label$1414:;
    if( X$4 <= TMP$1311$4 ) goto label$1417;
    label$1416:;
   }
  }
  label$1411:;
  Y$2 = Y$2 + 1ll;
  label$1410:;
  if( Y$2 <= TMP$1310$2 ) goto label$1413;
  label$1412:;
 }
 if( *(struct $7AAPIXEL***)((uint8*)THIS$1 + 736ll) == (struct $7AAPIXEL**)0ull ) goto label$1421;
 {
  if( *(int64*)((uint8*)THIS$1 + 728ll) <= 0ll ) goto label$1423;
  {
   {
    int64 I$4;
    I$4 = 0ll;
    int64 TMP$1315$4;
    TMP$1315$4 = *(int64*)((uint8*)THIS$1 + 728ll) + -1ll;
    goto label$1424;
    label$1427:;
    {
     int64 X$5;
     X$5 = *(int64*)((uint8*)*(struct $7AAPIXEL**)((uint8*)*(struct $7AAPIXEL***)((uint8*)THIS$1 + 736ll) + (I$4 << (3ll & 63ll))) + 432ll);
     int64 Y$5;
     Y$5 = *(int64*)((uint8*)*(struct $7AAPIXEL**)((uint8*)*(struct $7AAPIXEL***)((uint8*)THIS$1 + 736ll) + (I$4 << (3ll & 63ll))) + 440ll);
     if( *(int64*)((uint8*)*(struct $7AAPIXEL**)((uint8*)*(struct $7AAPIXEL***)((uint8*)THIS$1 + 736ll) + (I$4 << (3ll & 63ll))) + 424ll) == 0ll ) goto label$1429;
     {
      _ZN9RAYTRACER5VBLUREll( THIS$1, X$5, Y$5 );
     }
     goto label$1428;
     label$1429:;
     {
      _ZN9RAYTRACER5HBLUREll( THIS$1, X$5, Y$5 );
     }
     label$1428:;
     free( *(void**)((uint8*)*(struct $7AAPIXEL***)((uint8*)THIS$1 + 736ll) + (I$4 << (3ll & 63ll))) );
     *(struct $7AAPIXEL**)((uint8*)*(struct $7AAPIXEL***)((uint8*)THIS$1 + 736ll) + (I$4 << (3ll & 63ll))) = (struct $7AAPIXEL*)0ull;
    }
    label$1425:;
    I$4 = I$4 + 1ll;
    label$1424:;
    if( I$4 <= TMP$1315$4 ) goto label$1427;
    label$1426:;
   }
   *(int64*)((uint8*)THIS$1 + 728ll) = 0ll;
  }
  label$1423:;
  label$1422:;
  free( *(void**)((uint8*)THIS$1 + 736ll) );
  *(struct $7AAPIXEL***)((uint8*)THIS$1 + 736ll) = (struct $7AAPIXEL**)0ull;
 }
 label$1421:;
 label$1420:;
 label$1399:;
}

void _ZN9RAYTRACER4BLUREv( struct $9RAYTRACER* THIS$1 )
{
 label$1430:;
 {
  int64 Y$2;
  Y$2 = 1ll;
  int64 TMP$1316$2;
  TMP$1316$2 = *(int64*)((uint8*)THIS$1 + 432ll) + -2ll;
  goto label$1432;
  label$1435:;
  {
   {
    int64 X$4;
    X$4 = 1ll;
    int64 TMP$1317$4;
    TMP$1317$4 = *(int64*)((uint8*)THIS$1 + 424ll) + -2ll;
    goto label$1436;
    label$1439:;
    {
     struct $6VECTOR TMP$1327$5;
     struct $6VECTOR TMP$1328$5;
     struct $6VECTOR TMP$1329$5;
     struct $6VECTOR TMP$1330$5;
     struct $6VECTOR TMP$1331$5;
     struct $6VECTOR TMP$1332$5;
     struct $6VECTOR TMP$1333$5;
     struct $6VECTOR TMP$1334$5;
     struct $6VECTOR C0$5;
     uint32 vr$8 = fb_GfxPoint( (void*)0ull, (float)(X$4 + -1ll), (float)(Y$2 + -1ll) );
     _ZN6VECTORC1Ej( &C0$5, vr$8 );
     struct $6VECTOR C1$5;
     uint32 vr$13 = fb_GfxPoint( (void*)0ull, (float)X$4, (float)(Y$2 + -1ll) );
     _ZN6VECTORC1Ej( &C1$5, vr$13 );
     struct $6VECTOR C2$5;
     uint32 vr$19 = fb_GfxPoint( (void*)0ull, (float)(X$4 + 1ll), (float)(Y$2 + -1ll) );
     _ZN6VECTORC1Ej( &C2$5, vr$19 );
     struct $6VECTOR C3$5;
     uint32 vr$24 = fb_GfxPoint( (void*)0ull, (float)(X$4 + -1ll), (float)Y$2 );
     _ZN6VECTORC1Ej( &C3$5, vr$24 );
     struct $6VECTOR C4$5;
     uint32 vr$28 = fb_GfxPoint( (void*)0ull, (float)X$4, (float)Y$2 );
     _ZN6VECTORC1Ej( &C4$5, vr$28 );
     struct $6VECTOR C5$5;
     uint32 vr$33 = fb_GfxPoint( (void*)0ull, (float)(X$4 + 1ll), (float)Y$2 );
     _ZN6VECTORC1Ej( &C5$5, vr$33 );
     struct $6VECTOR C6$5;
     uint32 vr$39 = fb_GfxPoint( (void*)0ull, (float)(X$4 + -1ll), (float)(Y$2 + 1ll) );
     _ZN6VECTORC1Ej( &C6$5, vr$39 );
     struct $6VECTOR C7$5;
     uint32 vr$44 = fb_GfxPoint( (void*)0ull, (float)X$4, (float)(Y$2 + 1ll) );
     _ZN6VECTORC1Ej( &C7$5, vr$44 );
     struct $6VECTOR C8$5;
     uint32 vr$50 = fb_GfxPoint( (void*)0ull, (float)(X$4 + 1ll), (float)(Y$2 + 1ll) );
     _ZN6VECTORC1Ej( &C8$5, vr$50 );
     struct $6VECTOR C$5;
     struct $6VECTOR* vr$62 = _ZplR6VECTORS0_( &TMP$1327$5, &C0$5, &C1$5 );
     struct $6VECTOR* vr$64 = _ZplR6VECTORS0_( &TMP$1328$5, vr$62, &C2$5 );
     struct $6VECTOR* vr$66 = _ZplR6VECTORS0_( &TMP$1329$5, vr$64, &C3$5 );
     struct $6VECTOR* vr$68 = _ZplR6VECTORS0_( &TMP$1330$5, vr$66, &C4$5 );
     struct $6VECTOR* vr$70 = _ZplR6VECTORS0_( &TMP$1331$5, vr$68, &C5$5 );
     struct $6VECTOR* vr$72 = _ZplR6VECTORS0_( &TMP$1332$5, vr$70, &C6$5 );
     struct $6VECTOR* vr$74 = _ZplR6VECTORS0_( &TMP$1333$5, vr$72, &C7$5 );
     struct $6VECTOR* vr$76 = _ZplR6VECTORS0_( &TMP$1334$5, vr$74, &C8$5 );
     _ZN6VECTORC1ERS_( &C$5, vr$76 );
     _ZN6VECTORmLEd( &C$5, 0x1.C71C71C71C71Cp-4 );
     uint32 vr$80 = _ZN6VECTORcvjEv( &C$5 );
     fb_GfxPset( (void*)0ull, (float)X$4, (float)Y$2, vr$80, 4, 0 );
    }
    label$1437:;
    X$4 = X$4 + 1ll;
    label$1436:;
    if( X$4 <= TMP$1317$4 ) goto label$1439;
    label$1438:;
   }
  }
  label$1433:;
  Y$2 = Y$2 + 1ll;
  label$1432:;
  if( Y$2 <= TMP$1316$2 ) goto label$1435;
  label$1434:;
 }
 label$1431:;
}

void _ZN9RAYTRACER6RENDERE6AATYPE( struct $9RAYTRACER* THIS$1, $6AATYPE ANTIALIAS$1 )
{
 FBSTRING TMP$1337$1;
 FBSTRING TMP$1338$1;
 FBSTRING TMP$1345$1;
 label$1440:;
 double T1$1;
 __builtin_memset( &T1$1, 0, 8ll );
 uint64* LPSCREEN$1;
 __builtin_memset( &LPSCREEN$1, 0, 8ll );
 void* vr$2 = fb_GfxScreenPtr( );
 if( vr$2 != (void*)0ull ) goto label$1443;
 {
  fb_GfxScreenRes( (int32)*(int64*)((uint8*)THIS$1 + 424ll), (int32)*(int64*)((uint8*)THIS$1 + 432ll), 32, 1, 0, 0 );
 }
 label$1443:;
 label$1442:;
 FBSTRING* vr$8 = fb_LongintToStr( *(int64*)((uint8*)THIS$1 + 432ll) );
 __builtin_memset( &TMP$1337$1, 0, 24ll );
 FBSTRING* vr$11 = fb_StrConcat( &TMP$1337$1, (void*)"render ", 8ll, (void*)vr$8, -1ll );
 __builtin_memset( &TMP$1338$1, 0, 24ll );
 FBSTRING* vr$14 = fb_StrConcat( &TMP$1338$1, (void*)vr$11, -1ll, (void*)" lines. [ESC]=cancel", 21ll );
 fb_GfxSetWindowTitle( (FBSTRING*)vr$14 );
 double vr$15 = fb_Timer( );
 T1$1 = vr$15;
 {
  int64 Y$2;
  Y$2 = 0ll;
  int64 TMP$1339$2;
  TMP$1339$2 = *(int64*)((uint8*)THIS$1 + 432ll) + -1ll;
  goto label$1444;
  label$1447:;
  {
   fb_GfxLock( );
   {
    int64 X$4;
    X$4 = 0ll;
    int64 TMP$1340$4;
    TMP$1340$4 = *(int64*)((uint8*)THIS$1 + 424ll) + -1ll;
    goto label$1448;
    label$1451:;
    {
     uint32 vr$20 = _ZN9RAYTRACER9SHOWPOINTEll( THIS$1, X$4, Y$2 );
     fb_GfxPset( (void*)0ull, (float)X$4, (float)Y$2, vr$20, 4, 0 );
    }
    label$1449:;
    X$4 = X$4 + 1ll;
    label$1448:;
    if( X$4 <= TMP$1340$4 ) goto label$1451;
    label$1450:;
   }
   fb_GfxUnlock( (int32)Y$2, (int32)(Y$2 + 1ll) );
  }
  label$1445:;
  Y$2 = Y$2 + 1ll;
  label$1444:;
  if( Y$2 <= TMP$1339$2 ) goto label$1447;
  label$1446:;
 }
 if( ANTIALIAS$1 == 0ll ) goto label$1453;
 {
  if( ANTIALIAS$1 != 1ll ) goto label$1455;
  {
   FBSTRING* vr$28 = fb_StrAllocTempDescZEx( (uint8*)"edge detection", 14ll );
   fb_GfxSetWindowTitle( (FBSTRING*)vr$28 );
   _ZN9RAYTRACER8EDGEBLUREv( THIS$1 );
  }
  goto label$1454;
  label$1455:;
  if( ANTIALIAS$1 != 2ll ) goto label$1456;
  {
   FBSTRING* vr$29 = fb_StrAllocTempDescZEx( (uint8*)"anitialias", 10ll );
   fb_GfxSetWindowTitle( (FBSTRING*)vr$29 );
   _ZN9RAYTRACER4BLUREv( THIS$1 );
  }
  label$1456:;
  label$1454:;
 }
 label$1453:;
 label$1452:;
 double vr$30 = fb_Timer( );
 T1$1 = vr$30 - T1$1;
 FBSTRING T$1;
 __builtin_memset( &T$1, 0, 24ll );
 int64 _H$1;
 __builtin_memset( &_H$1, 0, 8ll );
 int64 _M$1;
 __builtin_memset( &_M$1, 0, 8ll );
 int64 _S$1;
 __builtin_memset( &_S$1, 0, 8ll );
 if( __builtin_floor( T1$1 ) < 0x1.C2p+11 ) goto label$1458;
 {
  _H$1 = ((int64)__builtin_nearbyint( __builtin_floor( (T1$1 / 0x1.C2p+11) ) ));
  T1$1 = T1$1 - (double)(_H$1 * 3600ll);
  FBSTRING* vr$43 = fb_LongintToStr( _H$1 );
  fb_StrConcatAssign( (void*)&T$1, -1ll, (void*)vr$43, -1ll, 0 );
  fb_StrConcatAssign( (void*)&T$1, -1ll, (void*)":", 2ll, 0 );
  label$1458:;
 }
 if( __builtin_floor( T1$1 ) < 0x1.Ep+5 ) goto label$1460;
 {
  _M$1 = ((int64)__builtin_nearbyint( __builtin_floor( (T1$1 / 0x1.Ep+5) ) ));
  T1$1 = T1$1 - (double)(_M$1 * 60ll);
  FBSTRING* vr$53 = fb_LongintToStr( _M$1 );
  fb_StrConcatAssign( (void*)&T$1, -1ll, (void*)vr$53, -1ll, 0 );
  fb_StrConcatAssign( (void*)&T$1, -1ll, (void*)":", 2ll, 0 );
  label$1460:;
 }
 if( __builtin_floor( T1$1 ) < 0x1.p+0 ) goto label$1462;
 {
  _S$1 = ((int64)__builtin_nearbyint( __builtin_floor( T1$1 ) ));
  T1$1 = T1$1 - (double)_S$1;
  FBSTRING* vr$61 = fb_LongintToStr( _S$1 );
  fb_StrConcatAssign( (void*)&T$1, -1ll, (void*)vr$61, -1ll, 0 );
  label$1462:;
 }
 __builtin_memset( &TMP$1345$1, 0, 24ll );
 FBSTRING* vr$66 = fb_StrConcat( &TMP$1345$1, (void*)"time over all: ", 16ll, (void*)&T$1, -1ll );
 fb_GfxSetWindowTitle( (FBSTRING*)vr$66 );
 fb_StrDelete( (FBSTRING*)&T$1 );
 label$1441:;
}

void _ZN9RAYTRACER15RENDERRECTANGLEEllll( struct $9RAYTRACER* THIS$1, int64 X$1, int64 Y$1, int64 W$1, int64 H$1 )
{
 label$1463:;
 if( ((int64)-(W$1 == 0ll) & (int64)-(H$1 == 0ll)) == 0ll ) goto label$1466;
 {
  goto label$1464;
  label$1466:;
 }
 uint32 vr$3 = _ZN9RAYTRACER9SHOWPOINTEll( THIS$1, X$1, Y$1 );
 fb_GfxLine( (void*)0ull, (float)X$1, (float)Y$1, (float)W$1, (float)H$1, vr$3, 2, 65535u, 1 );
 goto label$1464;
 int64 XD$1;
 XD$1 = (int64)((uint64)W$1 + ((uint64)W$1 >> (63ll & 63ll))) >> (1ll & 63ll);
 int64 YD$1;
 YD$1 = (int64)((uint64)H$1 + ((uint64)H$1 >> (63ll & 63ll))) >> (1ll & 63ll);
 _ZN9RAYTRACER15RENDERRECTANGLEEllll( THIS$1, X$1 + XD$1, Y$1, XD$1, YD$1 );
 _ZN9RAYTRACER15RENDERRECTANGLEEllll( THIS$1, X$1 + XD$1, Y$1 + YD$1, XD$1, YD$1 );
 _ZN9RAYTRACER15RENDERRECTANGLEEllll( THIS$1, X$1, Y$1 + YD$1, XD$1, YD$1 );
 _ZN9RAYTRACER15RENDERRECTANGLEEllll( THIS$1, X$1, Y$1, XD$1, YD$1 );
 label$1464:;
}

void _ZN9RAYTRACER7RENDER2E6AATYPE( struct $9RAYTRACER* THIS$1, $6AATYPE ANTIALIAS$1 )
{
 int64 TMP$1350$1;
 FBSTRING TMP$1357$1;
 label$1467:;
 void* vr$0 = fb_GfxScreenPtr( );
 if( vr$0 != (void*)0ull ) goto label$1470;
 {
  fb_GfxScreenRes( (int32)*(int64*)((uint8*)THIS$1 + 424ll), (int32)*(int64*)((uint8*)THIS$1 + 432ll), 32, 1, 0, 0 );
 }
 label$1470:;
 label$1469:;
 double T1$1;
 double vr$5 = fb_Timer( );
 T1$1 = vr$5;
 FBSTRING* vr$6 = fb_StrAllocTempDescZEx( (uint8*)"render2 1080 lines. [ESC]=cancel", 32ll );
 fb_GfxSetWindowTitle( (FBSTRING*)vr$6 );
 int64 S$1;
 S$1 = 256ll;
 int64 FLAG$1;
 __builtin_memset( &FLAG$1, 0, 8ll );
 label$1471:;
 if( S$1 <= 0ll ) goto label$1473;
 TMP$1350$1 = (int64)-(FLAG$1 == 0ll);
 goto label$1497;
 label$1473:;
 TMP$1350$1 = 0ll;
 label$1497:;
 if( TMP$1350$1 == 0ll ) goto label$1472;
 {
  {
   int64 Y$3;
   Y$3 = 0ll;
   int64 TMP$1351$3;
   TMP$1351$3 = S$1;
   int64 TMP$1352$3;
   TMP$1352$3 = (int64)-(TMP$1351$3 >= 0ll);
   goto label$1474;
   label$1477:;
   {
    fb_GfxLock( );
    fb_GfxLine( (void*)0ull, 0x0p+0f, (float)Y$3, 0x1.DFCp+10f, (float)(S$1 + -1ll), 4294909984u, 2, 65535u, 1 );
    fb_GfxUnlock( (int32)Y$3, (int32)(Y$3 + S$1) );
    {
     int64 X$5;
     X$5 = 0ll;
     int64 TMP$1353$5;
     TMP$1353$5 = S$1;
     int64 TMP$1354$5;
     TMP$1354$5 = (int64)-(TMP$1353$5 >= 0ll);
     goto label$1478;
     label$1481:;
     {
      _ZN9RAYTRACER15RENDERRECTANGLEEllll( THIS$1, X$5, Y$3, S$1, S$1 );
     }
     label$1479:;
     X$5 = X$5 + TMP$1353$5;
     label$1478:;
     if( TMP$1354$5 != 0ll ) goto label$1482;
     if( X$5 >= 1919ll ) goto label$1481;
     goto label$1480;
     label$1482:;
     if( X$5 <= 1919ll ) goto label$1481;
     label$1480:;
    }
    FBSTRING* vr$18 = fb_Inkey( );
    int32 vr$19 = fb_StrCompare( (void*)vr$18, -1ll, (void*)"\x1B", 2ll );
    if( (int64)vr$19 != 0ll ) goto label$1484;
    {
     FLAG$1 = -1ll;
     goto label$1476;
    }
    label$1484:;
    label$1483:;
   }
   label$1475:;
   Y$3 = Y$3 + TMP$1351$3;
   label$1474:;
   if( TMP$1352$3 != 0ll ) goto label$1485;
   if( Y$3 >= 1079ll ) goto label$1477;
   goto label$1476;
   label$1485:;
   if( Y$3 <= 1079ll ) goto label$1477;
   label$1476:;
  }
  S$1 = S$1 >> (1ll & 63ll);
 }
 goto label$1471;
 label$1472:;
 if( ANTIALIAS$1 == 0ll ) goto label$1487;
 {
  if( ANTIALIAS$1 != 1ll ) goto label$1489;
  {
   FBSTRING* vr$23 = fb_StrAllocTempDescZEx( (uint8*)"edge detection", 14ll );
   fb_GfxSetWindowTitle( (FBSTRING*)vr$23 );
   _ZN9RAYTRACER8EDGEBLUREv( THIS$1 );
  }
  goto label$1488;
  label$1489:;
  if( ANTIALIAS$1 != 2ll ) goto label$1490;
  {
   FBSTRING* vr$24 = fb_StrAllocTempDescZEx( (uint8*)"antialias", 9ll );
   fb_GfxSetWindowTitle( (FBSTRING*)vr$24 );
   _ZN9RAYTRACER4BLUREv( THIS$1 );
  }
  label$1490:;
  label$1488:;
 }
 label$1487:;
 label$1486:;
 double vr$25 = fb_Timer( );
 T1$1 = vr$25 - T1$1;
 FBSTRING T$1;
 __builtin_memset( &T$1, 0, 24ll );
 int64 _H$1;
 __builtin_memset( &_H$1, 0, 8ll );
 int64 _M$1;
 __builtin_memset( &_M$1, 0, 8ll );
 int64 _S$1;
 __builtin_memset( &_S$1, 0, 8ll );
 if( __builtin_floor( T1$1 ) <= 0x1.C1Ep+11 ) goto label$1492;
 {
  _H$1 = ((int64)__builtin_nearbyint( __builtin_floor( (T1$1 / 0x1.C2p+11) ) ));
  T1$1 = T1$1 - (double)(_H$1 * 3600ll);
  FBSTRING* vr$38 = fb_LongintToStr( _H$1 );
  fb_StrAssign( (void*)&T$1, -1ll, (void*)vr$38, -1ll, 0 );
  fb_StrConcatAssign( (void*)&T$1, -1ll, (void*)":", 2ll, 0 );
  label$1492:;
 }
 if( __builtin_floor( T1$1 ) <= 0x1.D8p+5 ) goto label$1494;
 {
  _M$1 = ((int64)__builtin_nearbyint( __builtin_floor( (T1$1 / 0x1.Ep+5) ) ));
  T1$1 = T1$1 - (double)(_M$1 * 60ll);
  FBSTRING* vr$48 = fb_LongintToStr( _M$1 );
  fb_StrConcatAssign( (void*)&T$1, -1ll, (void*)vr$48, -1ll, 0 );
  fb_StrConcatAssign( (void*)&T$1, -1ll, (void*)":", 2ll, 0 );
  label$1494:;
 }
 if( __builtin_floor( T1$1 ) < 0x1.p+0 ) goto label$1496;
 {
  _S$1 = ((int64)__builtin_nearbyint( __builtin_floor( T1$1 ) ));
  T1$1 = T1$1 - (double)_S$1;
  FBSTRING* vr$56 = fb_LongintToStr( _S$1 );
  fb_StrConcatAssign( (void*)&T$1, -1ll, (void*)vr$56, -1ll, 0 );
  label$1496:;
 }
 __builtin_memset( &TMP$1357$1, 0, 24ll );
 FBSTRING* vr$61 = fb_StrConcat( &TMP$1357$1, (void*)"time over all: ", 16ll, (void*)&T$1, -1ll );
 fb_GfxSetWindowTitle( (FBSTRING*)vr$61 );
 fb_StrDelete( (FBSTRING*)&T$1 );
 label$1468:;
}

void _ZN7VECTOR2C1Ev( struct $7VECTOR2* THIS$1 )
{
 __builtin_memset( (double*)THIS$1, 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 8ll), 0, 8ll );
 label$1498:;
 label$1499:;
}

void _ZN7VECTOR2C1Ed( struct $7VECTOR2* THIS$1, double PXY$1 )
{
 label$1500:;
 __builtin_memset( (double*)THIS$1, 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 8ll), 0, 8ll );
 *(double*)THIS$1 = PXY$1;
 *(double*)((uint8*)THIS$1 + 8ll) = PXY$1;
 label$1501:;
}

void _ZN7VECTOR2C1Edd( struct $7VECTOR2* THIS$1, double PX$1, double PY$1 )
{
 label$1502:;
 __builtin_memset( (double*)THIS$1, 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 8ll), 0, 8ll );
 *(double*)THIS$1 = PX$1;
 *(double*)((uint8*)THIS$1 + 8ll) = PY$1;
 label$1503:;
}

void _ZN7VECTOR2C1ERS_( struct $7VECTOR2* THIS$1, struct $7VECTOR2* V2$1 )
{
 label$1504:;
 __builtin_memset( (double*)THIS$1, 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 8ll), 0, 8ll );
 *(double*)THIS$1 = *(double*)V2$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)V2$1 + 8ll);
 label$1505:;
}

void _ZN7VECTOR2aSEd( struct $7VECTOR2* THIS$1, double PXY$1 )
{
 label$1506:;
 *(double*)THIS$1 = PXY$1;
 *(double*)((uint8*)THIS$1 + 8ll) = PXY$1;
 label$1507:;
}

void _ZN7VECTOR2aSERS_( struct $7VECTOR2* THIS$1, struct $7VECTOR2* P$1 )
{
 label$1508:;
 *(double*)THIS$1 = *(double*)P$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)P$1 + 8ll);
 label$1509:;
}

FBSTRING* _ZN7VECTOR2cv8FBSTRINGEv( struct $7VECTOR2* THIS$1 )
{
 FBSTRING TMP$1360$1;
 FBSTRING TMP$1361$1;
 FBSTRING TMP$1362$1;
 FBSTRING TMP$1363$1;
 FBSTRING fb$result$1;
 __builtin_memset( &fb$result$1, 0, 24ll );
 label$1510:;
 FBSTRING* vr$2 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 8ll) );
 FBSTRING* vr$4 = fb_DoubleToStr( *(double*)THIS$1 );
 __builtin_memset( &TMP$1360$1, 0, 24ll );
 FBSTRING* vr$7 = fb_StrConcat( &TMP$1360$1, (void*)"(", 2ll, (void*)vr$4, -1ll );
 __builtin_memset( &TMP$1361$1, 0, 24ll );
 FBSTRING* vr$10 = fb_StrConcat( &TMP$1361$1, (void*)vr$7, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1362$1, 0, 24ll );
 FBSTRING* vr$13 = fb_StrConcat( &TMP$1362$1, (void*)vr$10, -1ll, (void*)vr$2, -1ll );
 __builtin_memset( &TMP$1363$1, 0, 24ll );
 FBSTRING* vr$16 = fb_StrConcat( &TMP$1363$1, (void*)vr$13, -1ll, (void*)")", 2ll );
 fb_StrInit( (void*)&fb$result$1, -1ll, (void*)vr$16, -1ll, 0 );
 goto label$1511;
 label$1511:;
 FBSTRING* vr$19 = fb_StrAllocTempResult( (FBSTRING*)&fb$result$1 );
 return vr$19;
}

void _ZN7VECTOR2pLEd( struct $7VECTOR2* THIS$1, double V$1 )
{
 label$1512:;
 *(double*)THIS$1 = *(double*)THIS$1 + V$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) + V$1;
 label$1513:;
}

void _ZN7VECTOR2mIEd( struct $7VECTOR2* THIS$1, double V$1 )
{
 label$1514:;
 *(double*)THIS$1 = *(double*)THIS$1 - V$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) - V$1;
 label$1515:;
}

void _ZN7VECTOR2mLEd( struct $7VECTOR2* THIS$1, double V$1 )
{
 label$1516:;
 *(double*)THIS$1 = *(double*)THIS$1 * V$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) * V$1;
 label$1517:;
}

void _ZN7VECTOR2dVEd( struct $7VECTOR2* THIS$1, double V$1 )
{
 label$1518:;
 *(double*)THIS$1 = *(double*)THIS$1 / V$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) / V$1;
 label$1519:;
}

void _ZN7VECTOR2pLERS_( struct $7VECTOR2* THIS$1, struct $7VECTOR2* V2$1 )
{
 label$1520:;
 *(double*)THIS$1 = *(double*)THIS$1 + *(double*)V2$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) + *(double*)((uint8*)V2$1 + 8ll);
 label$1521:;
}

void _ZN7VECTOR2mIERS_( struct $7VECTOR2* THIS$1, struct $7VECTOR2* V2$1 )
{
 label$1522:;
 *(double*)THIS$1 = *(double*)THIS$1 - *(double*)V2$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) - *(double*)((uint8*)V2$1 + 8ll);
 label$1523:;
}

void _ZN7VECTOR2mLERS_( struct $7VECTOR2* THIS$1, struct $7VECTOR2* V2$1 )
{
 label$1524:;
 *(double*)THIS$1 = *(double*)THIS$1 * *(double*)V2$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) * *(double*)((uint8*)V2$1 + 8ll);
 label$1525:;
}

void _ZN7VECTOR2dVERS_( struct $7VECTOR2* THIS$1, struct $7VECTOR2* V2$1 )
{
 label$1526:;
 *(double*)THIS$1 = *(double*)THIS$1 / *(double*)V2$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) / *(double*)((uint8*)V2$1 + 8ll);
 label$1527:;
}

struct $7VECTOR2* _ZN7VECTOR22XXEv( struct $7VECTOR2* tmp$1364$1, struct $7VECTOR2* THIS$1 )
{
 label$1528:;
 _ZN7VECTOR2C1Edd( tmp$1364$1, *(double*)THIS$1, *(double*)THIS$1 );
 goto label$1529;
 label$1529:;
 return tmp$1364$1;
}

struct $7VECTOR2* _ZN7VECTOR22XYEv( struct $7VECTOR2* tmp$1366$1, struct $7VECTOR2* THIS$1 )
{
 label$1530:;
 _ZN7VECTOR2C1Edd( tmp$1366$1, *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 8ll) );
 goto label$1531;
 label$1531:;
 return tmp$1366$1;
}

struct $7VECTOR2* _ZN7VECTOR22YXEv( struct $7VECTOR2* tmp$1368$1, struct $7VECTOR2* THIS$1 )
{
 label$1532:;
 _ZN7VECTOR2C1Edd( tmp$1368$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)THIS$1 );
 goto label$1533;
 label$1533:;
 return tmp$1368$1;
}

struct $7VECTOR2* _ZN7VECTOR22YYEv( struct $7VECTOR2* tmp$1370$1, struct $7VECTOR2* THIS$1 )
{
 label$1534:;
 _ZN7VECTOR2C1Edd( tmp$1370$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)((uint8*)THIS$1 + 8ll) );
 goto label$1535;
 label$1535:;
 return tmp$1370$1;
}

struct $7VECTOR2* _ZngR7VECTOR2( struct $7VECTOR2* tmp$1372$1, struct $7VECTOR2* L$1 )
{
 label$1536:;
 _ZN7VECTOR2C1Edd( tmp$1372$1, -(*(double*)L$1), -(*(double*)((uint8*)L$1 + 8ll)) );
 goto label$1537;
 label$1537:;
 return tmp$1372$1;
}

struct $7VECTOR2* _ZplR7VECTOR2S0_( struct $7VECTOR2* tmp$1374$1, struct $7VECTOR2* L$1, struct $7VECTOR2* R$1 )
{
 label$1538:;
 _ZN7VECTOR2C1Edd( tmp$1374$1, *(double*)L$1 + *(double*)R$1, *(double*)((uint8*)L$1 + 8ll) + *(double*)((uint8*)R$1 + 8ll) );
 goto label$1539;
 label$1539:;
 return tmp$1374$1;
}

struct $7VECTOR2* _ZplR7VECTOR2Rd( struct $7VECTOR2* tmp$1376$1, struct $7VECTOR2* L$1, double* R$1 )
{
 label$1540:;
 _ZN7VECTOR2C1Edd( tmp$1376$1, *(double*)L$1 + *R$1, *(double*)((uint8*)L$1 + 8ll) + *R$1 );
 goto label$1541;
 label$1541:;
 return tmp$1376$1;
}

struct $7VECTOR2* _ZplRdR7VECTOR2( struct $7VECTOR2* tmp$1378$1, double* L$1, struct $7VECTOR2* R$1 )
{
 label$1542:;
 _ZN7VECTOR2C1Edd( tmp$1378$1, *(double*)R$1 + *L$1, *(double*)((uint8*)R$1 + 8ll) + *L$1 );
 goto label$1543;
 label$1543:;
 return tmp$1378$1;
}

struct $7VECTOR2* _ZmiR7VECTOR2S0_( struct $7VECTOR2* tmp$1380$1, struct $7VECTOR2* L$1, struct $7VECTOR2* R$1 )
{
 label$1544:;
 _ZN7VECTOR2C1Edd( tmp$1380$1, *(double*)L$1 - *(double*)R$1, *(double*)((uint8*)L$1 + 8ll) - *(double*)((uint8*)R$1 + 8ll) );
 goto label$1545;
 label$1545:;
 return tmp$1380$1;
}

struct $7VECTOR2* _ZmiR7VECTOR2Rd( struct $7VECTOR2* tmp$1382$1, struct $7VECTOR2* L$1, double* R$1 )
{
 label$1546:;
 _ZN7VECTOR2C1Edd( tmp$1382$1, *(double*)L$1 - *R$1, *(double*)((uint8*)L$1 + 8ll) - *R$1 );
 goto label$1547;
 label$1547:;
 return tmp$1382$1;
}

struct $7VECTOR2* _ZmiRdR7VECTOR2( struct $7VECTOR2* tmp$1384$1, double* L$1, struct $7VECTOR2* R$1 )
{
 label$1548:;
 _ZN7VECTOR2C1Edd( tmp$1384$1, *(double*)R$1 - *L$1, *(double*)((uint8*)R$1 + 8ll) - *L$1 );
 goto label$1549;
 label$1549:;
 return tmp$1384$1;
}

struct $7VECTOR2* _ZmlR7VECTOR2S0_( struct $7VECTOR2* tmp$1386$1, struct $7VECTOR2* L$1, struct $7VECTOR2* R$1 )
{
 label$1550:;
 _ZN7VECTOR2C1Edd( tmp$1386$1, *(double*)L$1 * *(double*)R$1, *(double*)((uint8*)L$1 + 8ll) * *(double*)((uint8*)R$1 + 8ll) );
 goto label$1551;
 label$1551:;
 return tmp$1386$1;
}

struct $7VECTOR2* _ZmlR7VECTOR2Rd( struct $7VECTOR2* tmp$1388$1, struct $7VECTOR2* L$1, double* R$1 )
{
 label$1552:;
 _ZN7VECTOR2C1Edd( tmp$1388$1, *(double*)L$1 * *R$1, *(double*)((uint8*)L$1 + 8ll) * *R$1 );
 goto label$1553;
 label$1553:;
 return tmp$1388$1;
}

struct $7VECTOR2* _ZmlRdR7VECTOR2( struct $7VECTOR2* tmp$1390$1, double* L$1, struct $7VECTOR2* R$1 )
{
 label$1554:;
 _ZN7VECTOR2C1Edd( tmp$1390$1, *L$1 * *(double*)R$1, *L$1 * *(double*)((uint8*)R$1 + 8ll) );
 goto label$1555;
 label$1555:;
 return tmp$1390$1;
}

struct $7VECTOR2* _ZdvR7VECTOR2S0_( struct $7VECTOR2* tmp$1392$1, struct $7VECTOR2* L$1, struct $7VECTOR2* R$1 )
{
 label$1556:;
 _ZN7VECTOR2C1Edd( tmp$1392$1, *(double*)L$1 / *(double*)R$1, *(double*)((uint8*)L$1 + 8ll) / *(double*)((uint8*)R$1 + 8ll) );
 goto label$1557;
 label$1557:;
 return tmp$1392$1;
}

int64 _ZeqR7VECTOR2S0_( struct $7VECTOR2* L$1, struct $7VECTOR2* R$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1558:;
 if( ((((int64)__builtin_nearbyint( *(double*)L$1 )) ^ ((int64)__builtin_nearbyint( *(double*)R$1 ))) | (((int64)__builtin_nearbyint( *(double*)((uint8*)L$1 + 8ll) )) ^ ((int64)__builtin_nearbyint( *(double*)((uint8*)R$1 + 8ll) )))) == 0ll ) goto label$1561;
 {
  fb$result$1 = 0ll;
  goto label$1559;
  label$1561:;
 }
 fb$result$1 = -1ll;
 goto label$1559;
 label$1559:;
 return fb$result$1;
}

int64 _ZneR7VECTOR2S0_( struct $7VECTOR2* L$1, struct $7VECTOR2* R$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1562:;
 if( ((((int64)__builtin_nearbyint( *(double*)L$1 )) ^ ((int64)__builtin_nearbyint( *(double*)R$1 ))) | (((int64)__builtin_nearbyint( *(double*)((uint8*)L$1 + 8ll) )) ^ ((int64)__builtin_nearbyint( *(double*)((uint8*)R$1 + 8ll) )))) == 0ll ) goto label$1565;
 {
  fb$result$1 = -1ll;
  goto label$1563;
  label$1565:;
 }
 fb$result$1 = 0ll;
 goto label$1563;
 label$1563:;
 return fb$result$1;
}

void _ZN7VECTOR3C1Ev( struct $7VECTOR3* THIS$1 )
{
 _ZN7VECTOR2C1Ev( (struct $7VECTOR2*)THIS$1 );
 __builtin_memset( (double*)((uint8*)THIS$1 + 16ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 24ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 32ll), 0, 8ll );
 label$1570:;
 label$1571:;
}

void _ZN7VECTOR3C1Ed( struct $7VECTOR3* THIS$1, double PXYZ$1 )
{
 label$1572:;
 _ZN7VECTOR2C1Ev( (struct $7VECTOR2*)THIS$1 );
 __builtin_memset( (double*)((uint8*)THIS$1 + 16ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 24ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 32ll), 0, 8ll );
 *(double*)((uint8*)THIS$1 + 16ll) = PXYZ$1;
 *(double*)((uint8*)THIS$1 + 24ll) = PXYZ$1;
 *(double*)((uint8*)THIS$1 + 32ll) = PXYZ$1;
 label$1573:;
}

void _ZN7VECTOR3C1Eddd( struct $7VECTOR3* THIS$1, double PX$1, double PY$1, double PZ$1 )
{
 label$1574:;
 _ZN7VECTOR2C1Ev( (struct $7VECTOR2*)THIS$1 );
 __builtin_memset( (double*)((uint8*)THIS$1 + 16ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 24ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 32ll), 0, 8ll );
 *(double*)((uint8*)THIS$1 + 16ll) = PX$1;
 *(double*)((uint8*)THIS$1 + 24ll) = PY$1;
 *(double*)((uint8*)THIS$1 + 32ll) = PZ$1;
 label$1575:;
}

void _ZN7VECTOR3C1ER7VECTOR2d( struct $7VECTOR3* THIS$1, struct $7VECTOR2* V2$1, double PZ$1 )
{
 label$1576:;
 _ZN7VECTOR2C1Ev( (struct $7VECTOR2*)THIS$1 );
 __builtin_memset( (double*)((uint8*)THIS$1 + 16ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 24ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 32ll), 0, 8ll );
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)V2$1;
 *(double*)((uint8*)THIS$1 + 24ll) = *(double*)((uint8*)V2$1 + 8ll);
 *(double*)((uint8*)THIS$1 + 32ll) = PZ$1;
 label$1577:;
}

void _ZN7VECTOR3C1EdR7VECTOR2( struct $7VECTOR3* THIS$1, double PX$1, struct $7VECTOR2* V2$1 )
{
 label$1578:;
 _ZN7VECTOR2C1Ev( (struct $7VECTOR2*)THIS$1 );
 __builtin_memset( (double*)((uint8*)THIS$1 + 16ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 24ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 32ll), 0, 8ll );
 *(double*)((uint8*)THIS$1 + 16ll) = PX$1;
 *(double*)((uint8*)THIS$1 + 24ll) = *(double*)V2$1;
 *(double*)((uint8*)THIS$1 + 32ll) = *(double*)((uint8*)V2$1 + 8ll);
 label$1579:;
}

void _ZN7VECTOR3C1ERS_( struct $7VECTOR3* THIS$1, struct $7VECTOR3* V3$1 )
{
 label$1580:;
 _ZN7VECTOR2C1Ev( (struct $7VECTOR2*)THIS$1 );
 __builtin_memset( (double*)((uint8*)THIS$1 + 16ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 24ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 32ll), 0, 8ll );
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)V3$1 + 16ll);
 *(double*)((uint8*)THIS$1 + 24ll) = *(double*)((uint8*)V3$1 + 24ll);
 *(double*)((uint8*)THIS$1 + 32ll) = *(double*)((uint8*)V3$1 + 32ll);
 label$1581:;
}

void _ZN7VECTOR3aSEd( struct $7VECTOR3* THIS$1, double PXYZ$1 )
{
 label$1582:;
 *(double*)((uint8*)THIS$1 + 16ll) = PXYZ$1;
 *(double*)((uint8*)THIS$1 + 24ll) = PXYZ$1;
 *(double*)((uint8*)THIS$1 + 32ll) = PXYZ$1;
 label$1583:;
}

void _ZN7VECTOR3aSER7VECTOR2( struct $7VECTOR3* THIS$1, struct $7VECTOR2* P$1 )
{
 label$1584:;
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)P$1;
 *(double*)((uint8*)THIS$1 + 24ll) = *(double*)((uint8*)P$1 + 8ll);
 *(double*)((uint8*)THIS$1 + 32ll) = 0x1.p+0;
 label$1585:;
}

void _ZN7VECTOR3aSERS_( struct $7VECTOR3* THIS$1, struct $7VECTOR3* P$1 )
{
 label$1586:;
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)P$1 + 16ll);
 *(double*)((uint8*)THIS$1 + 24ll) = *(double*)((uint8*)P$1 + 24ll);
 *(double*)((uint8*)THIS$1 + 32ll) = *(double*)((uint8*)P$1 + 32ll);
 label$1587:;
}

FBSTRING* _ZN7VECTOR3cv8FBSTRINGEv( struct $7VECTOR3* THIS$1 )
{
 FBSTRING TMP$1397$1;
 FBSTRING TMP$1398$1;
 FBSTRING TMP$1399$1;
 FBSTRING TMP$1400$1;
 FBSTRING TMP$1401$1;
 FBSTRING TMP$1402$1;
 FBSTRING fb$result$1;
 __builtin_memset( &fb$result$1, 0, 24ll );
 label$1588:;
 FBSTRING* vr$2 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 32ll) );
 FBSTRING* vr$4 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 24ll) );
 FBSTRING* vr$6 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 16ll) );
 __builtin_memset( &TMP$1397$1, 0, 24ll );
 FBSTRING* vr$9 = fb_StrConcat( &TMP$1397$1, (void*)"(", 2ll, (void*)vr$6, -1ll );
 __builtin_memset( &TMP$1398$1, 0, 24ll );
 FBSTRING* vr$12 = fb_StrConcat( &TMP$1398$1, (void*)vr$9, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1399$1, 0, 24ll );
 FBSTRING* vr$15 = fb_StrConcat( &TMP$1399$1, (void*)vr$12, -1ll, (void*)vr$4, -1ll );
 __builtin_memset( &TMP$1400$1, 0, 24ll );
 FBSTRING* vr$18 = fb_StrConcat( &TMP$1400$1, (void*)vr$15, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1401$1, 0, 24ll );
 FBSTRING* vr$21 = fb_StrConcat( &TMP$1401$1, (void*)vr$18, -1ll, (void*)vr$2, -1ll );
 __builtin_memset( &TMP$1402$1, 0, 24ll );
 FBSTRING* vr$24 = fb_StrConcat( &TMP$1402$1, (void*)vr$21, -1ll, (void*)")", 2ll );
 fb_StrInit( (void*)&fb$result$1, -1ll, (void*)vr$24, -1ll, 0 );
 goto label$1589;
 label$1589:;
 FBSTRING* vr$27 = fb_StrAllocTempResult( (FBSTRING*)&fb$result$1 );
 return vr$27;
}

uint64 _ZN7VECTOR3cvyEv( struct $7VECTOR3* THIS$1 )
{
 uint64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1590:;
 uint64 T$1;
 uint64 A$1;
 A$1 = 255ull;
 A$1 = A$1 << (8ll & 63ll);
 if( *(double*)((uint8*)THIS$1 + 16ll) >= 0x0p+0 ) goto label$1593;
 {
 }
 goto label$1592;
 label$1593:;
 if( *(double*)((uint8*)THIS$1 + 16ll) <= 0x1.p+0 ) goto label$1594;
 {
  A$1 = A$1 | 255ull;
 }
 goto label$1592;
 label$1594:;
 {
  T$1 = ((uint64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 16ll) * 0x1.FEp+7 ));
  A$1 = A$1 | T$1;
 }
 label$1592:;
 A$1 = A$1 << (8ll & 63ll);
 if( *(double*)((uint8*)THIS$1 + 24ll) >= 0x0p+0 ) goto label$1596;
 {
 }
 goto label$1595;
 label$1596:;
 if( *(double*)((uint8*)THIS$1 + 24ll) <= 0x1.p+0 ) goto label$1597;
 {
  A$1 = A$1 | 255ull;
 }
 goto label$1595;
 label$1597:;
 {
  T$1 = ((uint64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 24ll) * 0x1.FEp+7 ));
  A$1 = A$1 | T$1;
 }
 label$1595:;
 A$1 = A$1 << (8ll & 63ll);
 if( *(double*)((uint8*)THIS$1 + 32ll) >= 0x0p+0 ) goto label$1599;
 {
 }
 goto label$1598;
 label$1599:;
 if( *(double*)((uint8*)THIS$1 + 32ll) <= 0x1.p+0 ) goto label$1600;
 {
  A$1 = A$1 | 255ull;
 }
 goto label$1598;
 label$1600:;
 {
  T$1 = ((uint64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 32ll) * 0x1.FEp+7 ));
  A$1 = A$1 | T$1;
 }
 label$1598:;
 fb$result$1 = A$1;
 goto label$1591;
 label$1591:;
 return fb$result$1;
}

void _ZN7VECTOR3pLEd( struct $7VECTOR3* THIS$1, double V$1 )
{
 label$1601:;
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)THIS$1 + 16ll) + V$1;
 *(double*)((uint8*)THIS$1 + 24ll) = *(double*)((uint8*)THIS$1 + 24ll) + V$1;
 *(double*)((uint8*)THIS$1 + 32ll) = *(double*)((uint8*)THIS$1 + 32ll) + V$1;
 label$1602:;
}

void _ZN7VECTOR3mIEd( struct $7VECTOR3* THIS$1, double V$1 )
{
 label$1603:;
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)THIS$1 + 16ll) - V$1;
 *(double*)((uint8*)THIS$1 + 24ll) = *(double*)((uint8*)THIS$1 + 24ll) - V$1;
 *(double*)((uint8*)THIS$1 + 32ll) = *(double*)((uint8*)THIS$1 + 32ll) - V$1;
 label$1604:;
}

void _ZN7VECTOR3mLEd( struct $7VECTOR3* THIS$1, double V$1 )
{
 label$1605:;
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)THIS$1 + 16ll) * V$1;
 *(double*)((uint8*)THIS$1 + 24ll) = *(double*)((uint8*)THIS$1 + 24ll) * V$1;
 *(double*)((uint8*)THIS$1 + 32ll) = *(double*)((uint8*)THIS$1 + 32ll) * V$1;
 label$1606:;
}

void _ZN7VECTOR3dVEd( struct $7VECTOR3* THIS$1, double V$1 )
{
 label$1607:;
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)THIS$1 + 16ll) / V$1;
 *(double*)((uint8*)THIS$1 + 24ll) = *(double*)((uint8*)THIS$1 + 24ll) / V$1;
 *(double*)((uint8*)THIS$1 + 32ll) = *(double*)((uint8*)THIS$1 + 32ll) / V$1;
 label$1608:;
}

void _ZN7VECTOR3pLERS_( struct $7VECTOR3* THIS$1, struct $7VECTOR3* V3$1 )
{
 label$1609:;
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)THIS$1 + 16ll) + *(double*)((uint8*)V3$1 + 16ll);
 *(double*)((uint8*)THIS$1 + 24ll) = *(double*)((uint8*)THIS$1 + 24ll) + *(double*)((uint8*)V3$1 + 24ll);
 *(double*)((uint8*)THIS$1 + 32ll) = *(double*)((uint8*)THIS$1 + 32ll) + *(double*)((uint8*)V3$1 + 32ll);
 label$1610:;
}

void _ZN7VECTOR3mIERS_( struct $7VECTOR3* THIS$1, struct $7VECTOR3* V3$1 )
{
 label$1611:;
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)THIS$1 + 16ll) - *(double*)((uint8*)V3$1 + 16ll);
 *(double*)((uint8*)THIS$1 + 24ll) = *(double*)((uint8*)THIS$1 + 24ll) - *(double*)((uint8*)V3$1 + 24ll);
 *(double*)((uint8*)THIS$1 + 32ll) = *(double*)((uint8*)THIS$1 + 32ll) - *(double*)((uint8*)V3$1 + 32ll);
 label$1612:;
}

void _ZN7VECTOR3mLERS_( struct $7VECTOR3* THIS$1, struct $7VECTOR3* V3$1 )
{
 label$1613:;
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)THIS$1 + 16ll) * *(double*)((uint8*)V3$1 + 16ll);
 *(double*)((uint8*)THIS$1 + 24ll) = *(double*)((uint8*)THIS$1 + 24ll) * *(double*)((uint8*)V3$1 + 24ll);
 *(double*)((uint8*)THIS$1 + 32ll) = *(double*)((uint8*)THIS$1 + 32ll) * *(double*)((uint8*)V3$1 + 32ll);
 label$1614:;
}

void _ZN7VECTOR3dVERS_( struct $7VECTOR3* THIS$1, struct $7VECTOR3* V3$1 )
{
 label$1615:;
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)THIS$1 + 16ll) / *(double*)((uint8*)V3$1 + 16ll);
 *(double*)((uint8*)THIS$1 + 24ll) = *(double*)((uint8*)THIS$1 + 24ll) / *(double*)((uint8*)V3$1 + 24ll);
 *(double*)((uint8*)THIS$1 + 32ll) = *(double*)((uint8*)THIS$1 + 32ll) / *(double*)((uint8*)V3$1 + 32ll);
 label$1616:;
}

struct $7VECTOR2* _ZN7VECTOR32XXEv( struct $7VECTOR2* tmp$1403$1, struct $7VECTOR3* THIS$1 )
{
 label$1617:;
 _ZN7VECTOR2C1Edd( tmp$1403$1, *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 16ll) );
 goto label$1618;
 label$1618:;
 return tmp$1403$1;
}

struct $7VECTOR2* _ZN7VECTOR32XYEv( struct $7VECTOR2* tmp$1405$1, struct $7VECTOR3* THIS$1 )
{
 label$1619:;
 _ZN7VECTOR2C1Edd( tmp$1405$1, *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 24ll) );
 goto label$1620;
 label$1620:;
 return tmp$1405$1;
}

struct $7VECTOR2* _ZN7VECTOR32XZEv( struct $7VECTOR2* tmp$1407$1, struct $7VECTOR3* THIS$1 )
{
 label$1621:;
 _ZN7VECTOR2C1Edd( tmp$1407$1, *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 32ll) );
 goto label$1622;
 label$1622:;
 return tmp$1407$1;
}

struct $7VECTOR2* _ZN7VECTOR32YXEv( struct $7VECTOR2* tmp$1409$1, struct $7VECTOR3* THIS$1 )
{
 label$1623:;
 _ZN7VECTOR2C1Edd( tmp$1409$1, *(double*)((uint8*)THIS$1 + 24ll), *(double*)((uint8*)THIS$1 + 16ll) );
 goto label$1624;
 label$1624:;
 return tmp$1409$1;
}

struct $7VECTOR2* _ZN7VECTOR32YYEv( struct $7VECTOR2* tmp$1411$1, struct $7VECTOR3* THIS$1 )
{
 label$1625:;
 _ZN7VECTOR2C1Edd( tmp$1411$1, *(double*)((uint8*)THIS$1 + 24ll), *(double*)((uint8*)THIS$1 + 24ll) );
 goto label$1626;
 label$1626:;
 return tmp$1411$1;
}

struct $7VECTOR2* _ZN7VECTOR32YZEv( struct $7VECTOR2* tmp$1413$1, struct $7VECTOR3* THIS$1 )
{
 label$1627:;
 _ZN7VECTOR2C1Edd( tmp$1413$1, *(double*)((uint8*)THIS$1 + 24ll), *(double*)((uint8*)THIS$1 + 32ll) );
 goto label$1628;
 label$1628:;
 return tmp$1413$1;
}

struct $7VECTOR2* _ZN7VECTOR32ZXEv( struct $7VECTOR2* tmp$1415$1, struct $7VECTOR3* THIS$1 )
{
 label$1629:;
 _ZN7VECTOR2C1Edd( tmp$1415$1, *(double*)((uint8*)THIS$1 + 32ll), *(double*)((uint8*)THIS$1 + 16ll) );
 goto label$1630;
 label$1630:;
 return tmp$1415$1;
}

struct $7VECTOR2* _ZN7VECTOR32ZYEv( struct $7VECTOR2* tmp$1417$1, struct $7VECTOR3* THIS$1 )
{
 label$1631:;
 _ZN7VECTOR2C1Edd( tmp$1417$1, *(double*)((uint8*)THIS$1 + 32ll), *(double*)((uint8*)THIS$1 + 24ll) );
 goto label$1632;
 label$1632:;
 return tmp$1417$1;
}

struct $7VECTOR2* _ZN7VECTOR32ZZEv( struct $7VECTOR2* tmp$1419$1, struct $7VECTOR3* THIS$1 )
{
 label$1633:;
 _ZN7VECTOR2C1Edd( tmp$1419$1, *(double*)((uint8*)THIS$1 + 32ll), *(double*)((uint8*)THIS$1 + 32ll) );
 goto label$1634;
 label$1634:;
 return tmp$1419$1;
}

struct $7VECTOR3* _ZN7VECTOR33XXXEv( struct $7VECTOR3* tmp$1421$1, struct $7VECTOR3* THIS$1 )
{
 label$1635:;
 _ZN7VECTOR3C1Eddd( tmp$1421$1, *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 16ll) );
 goto label$1636;
 label$1636:;
 return tmp$1421$1;
}

struct $7VECTOR3* _ZN7VECTOR33XXYEv( struct $7VECTOR3* tmp$1423$1, struct $7VECTOR3* THIS$1 )
{
 label$1637:;
 _ZN7VECTOR3C1Eddd( tmp$1423$1, *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 24ll) );
 goto label$1638;
 label$1638:;
 return tmp$1423$1;
}

struct $7VECTOR3* _ZN7VECTOR33XXZEv( struct $7VECTOR3* tmp$1425$1, struct $7VECTOR3* THIS$1 )
{
 label$1639:;
 _ZN7VECTOR3C1Eddd( tmp$1425$1, *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 32ll) );
 goto label$1640;
 label$1640:;
 return tmp$1425$1;
}

struct $7VECTOR3* _ZN7VECTOR33XYXEv( struct $7VECTOR3* tmp$1427$1, struct $7VECTOR3* THIS$1 )
{
 label$1641:;
 _ZN7VECTOR3C1Eddd( tmp$1427$1, *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 24ll), *(double*)((uint8*)THIS$1 + 16ll) );
 goto label$1642;
 label$1642:;
 return tmp$1427$1;
}

struct $7VECTOR3* _ZN7VECTOR33XYYEv( struct $7VECTOR3* tmp$1429$1, struct $7VECTOR3* THIS$1 )
{
 label$1643:;
 _ZN7VECTOR3C1Eddd( tmp$1429$1, *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 24ll), *(double*)((uint8*)THIS$1 + 24ll) );
 goto label$1644;
 label$1644:;
 return tmp$1429$1;
}

struct $7VECTOR3* _ZN7VECTOR33XYZEv( struct $7VECTOR3* tmp$1431$1, struct $7VECTOR3* THIS$1 )
{
 label$1645:;
 _ZN7VECTOR3C1Eddd( tmp$1431$1, *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 24ll), *(double*)((uint8*)THIS$1 + 32ll) );
 goto label$1646;
 label$1646:;
 return tmp$1431$1;
}

struct $7VECTOR3* _ZN7VECTOR33XZXEv( struct $7VECTOR3* tmp$1433$1, struct $7VECTOR3* THIS$1 )
{
 label$1647:;
 _ZN7VECTOR3C1Eddd( tmp$1433$1, *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 32ll), *(double*)((uint8*)THIS$1 + 16ll) );
 goto label$1648;
 label$1648:;
 return tmp$1433$1;
}

struct $7VECTOR3* _ZN7VECTOR33XZYEv( struct $7VECTOR3* tmp$1435$1, struct $7VECTOR3* THIS$1 )
{
 label$1649:;
 _ZN7VECTOR3C1Eddd( tmp$1435$1, *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 32ll), *(double*)((uint8*)THIS$1 + 24ll) );
 goto label$1650;
 label$1650:;
 return tmp$1435$1;
}

struct $7VECTOR3* _ZN7VECTOR33XZZEv( struct $7VECTOR3* tmp$1437$1, struct $7VECTOR3* THIS$1 )
{
 label$1651:;
 _ZN7VECTOR3C1Eddd( tmp$1437$1, *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 32ll), *(double*)((uint8*)THIS$1 + 32ll) );
 goto label$1652;
 label$1652:;
 return tmp$1437$1;
}

struct $7VECTOR3* _ZN7VECTOR33YXXEv( struct $7VECTOR3* tmp$1439$1, struct $7VECTOR3* THIS$1 )
{
 label$1653:;
 _ZN7VECTOR3C1Eddd( tmp$1439$1, *(double*)((uint8*)THIS$1 + 24ll), *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 16ll) );
 goto label$1654;
 label$1654:;
 return tmp$1439$1;
}

struct $7VECTOR3* _ZN7VECTOR33YXYEv( struct $7VECTOR3* tmp$1441$1, struct $7VECTOR3* THIS$1 )
{
 label$1655:;
 _ZN7VECTOR3C1Eddd( tmp$1441$1, *(double*)((uint8*)THIS$1 + 24ll), *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 24ll) );
 goto label$1656;
 label$1656:;
 return tmp$1441$1;
}

struct $7VECTOR3* _ZN7VECTOR33YXZEv( struct $7VECTOR3* tmp$1443$1, struct $7VECTOR3* THIS$1 )
{
 label$1657:;
 _ZN7VECTOR3C1Eddd( tmp$1443$1, *(double*)((uint8*)THIS$1 + 24ll), *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 32ll) );
 goto label$1658;
 label$1658:;
 return tmp$1443$1;
}

struct $7VECTOR3* _ZN7VECTOR33YYXEv( struct $7VECTOR3* tmp$1445$1, struct $7VECTOR3* THIS$1 )
{
 label$1659:;
 _ZN7VECTOR3C1Eddd( tmp$1445$1, *(double*)((uint8*)THIS$1 + 24ll), *(double*)((uint8*)THIS$1 + 24ll), *(double*)((uint8*)THIS$1 + 16ll) );
 goto label$1660;
 label$1660:;
 return tmp$1445$1;
}

struct $7VECTOR3* _ZN7VECTOR33YYYEv( struct $7VECTOR3* tmp$1447$1, struct $7VECTOR3* THIS$1 )
{
 label$1661:;
 _ZN7VECTOR3C1Eddd( tmp$1447$1, *(double*)((uint8*)THIS$1 + 24ll), *(double*)((uint8*)THIS$1 + 24ll), *(double*)((uint8*)THIS$1 + 24ll) );
 goto label$1662;
 label$1662:;
 return tmp$1447$1;
}

struct $7VECTOR3* _ZN7VECTOR33YYZEv( struct $7VECTOR3* tmp$1449$1, struct $7VECTOR3* THIS$1 )
{
 label$1663:;
 _ZN7VECTOR3C1Eddd( tmp$1449$1, *(double*)((uint8*)THIS$1 + 24ll), *(double*)((uint8*)THIS$1 + 24ll), *(double*)((uint8*)THIS$1 + 32ll) );
 goto label$1664;
 label$1664:;
 return tmp$1449$1;
}

struct $7VECTOR3* _ZN7VECTOR33YZXEv( struct $7VECTOR3* tmp$1451$1, struct $7VECTOR3* THIS$1 )
{
 label$1665:;
 _ZN7VECTOR3C1Eddd( tmp$1451$1, *(double*)((uint8*)THIS$1 + 24ll), *(double*)((uint8*)THIS$1 + 32ll), *(double*)((uint8*)THIS$1 + 16ll) );
 goto label$1666;
 label$1666:;
 return tmp$1451$1;
}

struct $7VECTOR3* _ZN7VECTOR33YZYEv( struct $7VECTOR3* tmp$1453$1, struct $7VECTOR3* THIS$1 )
{
 label$1667:;
 _ZN7VECTOR3C1Eddd( tmp$1453$1, *(double*)((uint8*)THIS$1 + 24ll), *(double*)((uint8*)THIS$1 + 32ll), *(double*)((uint8*)THIS$1 + 24ll) );
 goto label$1668;
 label$1668:;
 return tmp$1453$1;
}

struct $7VECTOR3* _ZN7VECTOR33YZZEv( struct $7VECTOR3* tmp$1455$1, struct $7VECTOR3* THIS$1 )
{
 label$1669:;
 _ZN7VECTOR3C1Eddd( tmp$1455$1, *(double*)((uint8*)THIS$1 + 24ll), *(double*)((uint8*)THIS$1 + 32ll), *(double*)((uint8*)THIS$1 + 32ll) );
 goto label$1670;
 label$1670:;
 return tmp$1455$1;
}

struct $7VECTOR3* _ZN7VECTOR33ZXXEv( struct $7VECTOR3* tmp$1457$1, struct $7VECTOR3* THIS$1 )
{
 label$1671:;
 _ZN7VECTOR3C1Eddd( tmp$1457$1, *(double*)((uint8*)THIS$1 + 32ll), *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 16ll) );
 goto label$1672;
 label$1672:;
 return tmp$1457$1;
}

struct $7VECTOR3* _ZN7VECTOR33ZXYEv( struct $7VECTOR3* tmp$1459$1, struct $7VECTOR3* THIS$1 )
{
 label$1673:;
 _ZN7VECTOR3C1Eddd( tmp$1459$1, *(double*)((uint8*)THIS$1 + 32ll), *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 24ll) );
 goto label$1674;
 label$1674:;
 return tmp$1459$1;
}

struct $7VECTOR3* _ZN7VECTOR33ZXZEv( struct $7VECTOR3* tmp$1461$1, struct $7VECTOR3* THIS$1 )
{
 label$1675:;
 _ZN7VECTOR3C1Eddd( tmp$1461$1, *(double*)((uint8*)THIS$1 + 32ll), *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 32ll) );
 goto label$1676;
 label$1676:;
 return tmp$1461$1;
}

struct $7VECTOR3* _ZN7VECTOR33ZYXEv( struct $7VECTOR3* tmp$1463$1, struct $7VECTOR3* THIS$1 )
{
 label$1677:;
 _ZN7VECTOR3C1Eddd( tmp$1463$1, *(double*)((uint8*)THIS$1 + 32ll), *(double*)((uint8*)THIS$1 + 24ll), *(double*)((uint8*)THIS$1 + 16ll) );
 goto label$1678;
 label$1678:;
 return tmp$1463$1;
}

struct $7VECTOR3* _ZN7VECTOR33ZYYEv( struct $7VECTOR3* tmp$1465$1, struct $7VECTOR3* THIS$1 )
{
 label$1679:;
 _ZN7VECTOR3C1Eddd( tmp$1465$1, *(double*)((uint8*)THIS$1 + 32ll), *(double*)((uint8*)THIS$1 + 24ll), *(double*)((uint8*)THIS$1 + 24ll) );
 goto label$1680;
 label$1680:;
 return tmp$1465$1;
}

struct $7VECTOR3* _ZN7VECTOR33ZYZEv( struct $7VECTOR3* tmp$1467$1, struct $7VECTOR3* THIS$1 )
{
 label$1681:;
 _ZN7VECTOR3C1Eddd( tmp$1467$1, *(double*)((uint8*)THIS$1 + 32ll), *(double*)((uint8*)THIS$1 + 24ll), *(double*)((uint8*)THIS$1 + 32ll) );
 goto label$1682;
 label$1682:;
 return tmp$1467$1;
}

struct $7VECTOR3* _ZN7VECTOR33ZZXEv( struct $7VECTOR3* tmp$1469$1, struct $7VECTOR3* THIS$1 )
{
 label$1683:;
 _ZN7VECTOR3C1Eddd( tmp$1469$1, *(double*)((uint8*)THIS$1 + 32ll), *(double*)((uint8*)THIS$1 + 32ll), *(double*)((uint8*)THIS$1 + 16ll) );
 goto label$1684;
 label$1684:;
 return tmp$1469$1;
}

struct $7VECTOR3* _ZN7VECTOR33ZZYEv( struct $7VECTOR3* tmp$1471$1, struct $7VECTOR3* THIS$1 )
{
 label$1685:;
 _ZN7VECTOR3C1Eddd( tmp$1471$1, *(double*)((uint8*)THIS$1 + 32ll), *(double*)((uint8*)THIS$1 + 32ll), *(double*)((uint8*)THIS$1 + 24ll) );
 goto label$1686;
 label$1686:;
 return tmp$1471$1;
}

struct $7VECTOR3* _ZN7VECTOR33ZZZEv( struct $7VECTOR3* tmp$1473$1, struct $7VECTOR3* THIS$1 )
{
 label$1687:;
 _ZN7VECTOR3C1Eddd( tmp$1473$1, *(double*)((uint8*)THIS$1 + 32ll), *(double*)((uint8*)THIS$1 + 32ll), *(double*)((uint8*)THIS$1 + 32ll) );
 goto label$1688;
 label$1688:;
 return tmp$1473$1;
}

struct $7VECTOR3* _ZN7VECTOR33RGBEv( struct $7VECTOR3* tmp$1475$1, struct $7VECTOR3* THIS$1 )
{
 label$1689:;
 _ZN7VECTOR3C1Eddd( tmp$1475$1, *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 24ll), *(double*)((uint8*)THIS$1 + 32ll) );
 goto label$1690;
 label$1690:;
 return tmp$1475$1;
}

struct $7VECTOR3* _ZngR7VECTOR3( struct $7VECTOR3* tmp$1477$1, struct $7VECTOR3* L$1 )
{
 label$1691:;
 _ZN7VECTOR3C1Eddd( tmp$1477$1, -(*(double*)((uint8*)L$1 + 16ll)), -(*(double*)((uint8*)L$1 + 24ll)), -(*(double*)((uint8*)L$1 + 32ll)) );
 goto label$1692;
 label$1692:;
 return tmp$1477$1;
}

struct $7VECTOR3* _ZplR7VECTOR3d( struct $7VECTOR3* tmp$1479$1, struct $7VECTOR3* L$1, double R$1 )
{
 label$1693:;
 _ZN7VECTOR3C1Eddd( tmp$1479$1, *(double*)((uint8*)L$1 + 16ll) + R$1, *(double*)((uint8*)L$1 + 24ll) + R$1, *(double*)((uint8*)L$1 + 32ll) + R$1 );
 goto label$1694;
 label$1694:;
 return tmp$1479$1;
}

struct $7VECTOR3* _ZpldR7VECTOR3( struct $7VECTOR3* tmp$1481$1, double L$1, struct $7VECTOR3* R$1 )
{
 label$1695:;
 _ZN7VECTOR3C1Eddd( tmp$1481$1, *(double*)((uint8*)R$1 + 16ll) + L$1, *(double*)((uint8*)R$1 + 24ll) + L$1, *(double*)((uint8*)R$1 + 32ll) + L$1 );
 goto label$1696;
 label$1696:;
 return tmp$1481$1;
}

struct $7VECTOR3* _ZmiR7VECTOR3d( struct $7VECTOR3* tmp$1483$1, struct $7VECTOR3* L$1, double R$1 )
{
 label$1697:;
 _ZN7VECTOR3C1Eddd( tmp$1483$1, *(double*)((uint8*)L$1 + 16ll) - R$1, *(double*)((uint8*)L$1 + 24ll) - R$1, *(double*)((uint8*)L$1 + 32ll) - R$1 );
 goto label$1698;
 label$1698:;
 return tmp$1483$1;
}

struct $7VECTOR3* _ZmidR7VECTOR3( struct $7VECTOR3* tmp$1485$1, double L$1, struct $7VECTOR3* R$1 )
{
 label$1699:;
 _ZN7VECTOR3C1Eddd( tmp$1485$1, *(double*)((uint8*)R$1 + 16ll) - L$1, *(double*)((uint8*)R$1 + 24ll) - L$1, *(double*)((uint8*)R$1 + 32ll) - L$1 );
 goto label$1700;
 label$1700:;
 return tmp$1485$1;
}

struct $7VECTOR3* _ZmlR7VECTOR3d( struct $7VECTOR3* tmp$1487$1, struct $7VECTOR3* L$1, double R$1 )
{
 label$1701:;
 _ZN7VECTOR3C1Eddd( tmp$1487$1, *(double*)((uint8*)L$1 + 16ll) * R$1, *(double*)((uint8*)L$1 + 24ll) * R$1, *(double*)((uint8*)L$1 + 32ll) * R$1 );
 goto label$1702;
 label$1702:;
 return tmp$1487$1;
}

struct $7VECTOR3* _ZmldR7VECTOR3( struct $7VECTOR3* tmp$1489$1, double L$1, struct $7VECTOR3* R$1 )
{
 label$1703:;
 _ZN7VECTOR3C1Eddd( tmp$1489$1, *(double*)((uint8*)R$1 + 16ll) * L$1, *(double*)((uint8*)R$1 + 24ll) * L$1, *(double*)((uint8*)R$1 + 32ll) * L$1 );
 goto label$1704;
 label$1704:;
 return tmp$1489$1;
}

struct $7VECTOR3* _ZdvR7VECTOR3d( struct $7VECTOR3* tmp$1491$1, struct $7VECTOR3* L$1, double R$1 )
{
 label$1705:;
 _ZN7VECTOR3C1Eddd( tmp$1491$1, *(double*)((uint8*)L$1 + 16ll) / R$1, *(double*)((uint8*)L$1 + 24ll) / R$1, *(double*)((uint8*)L$1 + 32ll) / R$1 );
 goto label$1706;
 label$1706:;
 return tmp$1491$1;
}

struct $7VECTOR3* _ZdvdR7VECTOR3( struct $7VECTOR3* tmp$1493$1, double L$1, struct $7VECTOR3* R$1 )
{
 label$1707:;
 _ZN7VECTOR3C1Eddd( tmp$1493$1, *(double*)((uint8*)R$1 + 16ll) / L$1, *(double*)((uint8*)R$1 + 24ll) / L$1, *(double*)((uint8*)R$1 + 32ll) / L$1 );
 goto label$1708;
 label$1708:;
 return tmp$1493$1;
}

struct $7VECTOR3* _ZplR7VECTOR3S0_( struct $7VECTOR3* tmp$1495$1, struct $7VECTOR3* L$1, struct $7VECTOR3* R$1 )
{
 label$1709:;
 _ZN7VECTOR3C1Eddd( tmp$1495$1, *(double*)((uint8*)L$1 + 16ll) + *(double*)((uint8*)R$1 + 16ll), *(double*)((uint8*)L$1 + 24ll) + *(double*)((uint8*)R$1 + 24ll), *(double*)((uint8*)L$1 + 32ll) + *(double*)((uint8*)R$1 + 32ll) );
 goto label$1710;
 label$1710:;
 return tmp$1495$1;
}

struct $7VECTOR3* _ZmiR7VECTOR3S0_( struct $7VECTOR3* tmp$1497$1, struct $7VECTOR3* L$1, struct $7VECTOR3* R$1 )
{
 label$1711:;
 _ZN7VECTOR3C1Eddd( tmp$1497$1, *(double*)((uint8*)L$1 + 16ll) - *(double*)((uint8*)R$1 + 16ll), *(double*)((uint8*)L$1 + 24ll) - *(double*)((uint8*)R$1 + 24ll), *(double*)((uint8*)L$1 + 32ll) - *(double*)((uint8*)R$1 + 32ll) );
 goto label$1712;
 label$1712:;
 return tmp$1497$1;
}

struct $7VECTOR3* _ZmlR7VECTOR3S0_( struct $7VECTOR3* tmp$1499$1, struct $7VECTOR3* L$1, struct $7VECTOR3* R$1 )
{
 label$1713:;
 _ZN7VECTOR3C1Eddd( tmp$1499$1, *(double*)((uint8*)L$1 + 16ll) * *(double*)((uint8*)R$1 + 16ll), *(double*)((uint8*)L$1 + 24ll) * *(double*)((uint8*)R$1 + 24ll), *(double*)((uint8*)L$1 + 32ll) * *(double*)((uint8*)R$1 + 32ll) );
 goto label$1714;
 label$1714:;
 return tmp$1499$1;
}

struct $7VECTOR3* _ZdvR7VECTOR3S0_( struct $7VECTOR3* tmp$1501$1, struct $7VECTOR3* L$1, struct $7VECTOR3* R$1 )
{
 label$1715:;
 _ZN7VECTOR3C1Eddd( tmp$1501$1, *(double*)((uint8*)L$1 + 16ll) / *(double*)((uint8*)R$1 + 16ll), *(double*)((uint8*)L$1 + 24ll) / *(double*)((uint8*)R$1 + 24ll), *(double*)((uint8*)L$1 + 32ll) / *(double*)((uint8*)R$1 + 32ll) );
 goto label$1716;
 label$1716:;
 return tmp$1501$1;
}

int64 _ZeqR7VECTOR3S0_( struct $7VECTOR3* L$1, struct $7VECTOR3* R$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1717:;
 if( (((((int64)__builtin_nearbyint( *(double*)((uint8*)L$1 + 16ll) )) ^ ((int64)__builtin_nearbyint( *(double*)((uint8*)R$1 + 16ll) ))) | (((int64)__builtin_nearbyint( *(double*)((uint8*)L$1 + 24ll) )) ^ ((int64)__builtin_nearbyint( *(double*)((uint8*)R$1 + 24ll) )))) | (((int64)__builtin_nearbyint( *(double*)((uint8*)L$1 + 32ll) )) ^ ((int64)__builtin_nearbyint( *(double*)((uint8*)R$1 + 32ll) )))) == 0ll ) goto label$1720;
 {
  fb$result$1 = 0ll;
  goto label$1718;
  label$1720:;
 }
 fb$result$1 = -1ll;
 goto label$1718;
 label$1718:;
 return fb$result$1;
}

int64 _ZneR7VECTOR3S0_( struct $7VECTOR3* L$1, struct $7VECTOR3* R$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1721:;
 if( (((((int64)__builtin_nearbyint( *(double*)((uint8*)L$1 + 16ll) )) ^ ((int64)__builtin_nearbyint( *(double*)((uint8*)R$1 + 16ll) ))) | (((int64)__builtin_nearbyint( *(double*)((uint8*)L$1 + 24ll) )) ^ ((int64)__builtin_nearbyint( *(double*)((uint8*)R$1 + 24ll) )))) | (((int64)__builtin_nearbyint( *(double*)((uint8*)L$1 + 32ll) )) ^ ((int64)__builtin_nearbyint( *(double*)((uint8*)R$1 + 32ll) )))) == 0ll ) goto label$1724;
 {
  fb$result$1 = -1ll;
  goto label$1722;
  label$1724:;
 }
 fb$result$1 = 0ll;
 goto label$1722;
 label$1722:;
 return fb$result$1;
}

void _ZN7VECTOR4C1Ev( struct $7VECTOR4* THIS$1 )
{
 label$1729:;
 _ZN7VECTOR3C1Ev( (struct $7VECTOR3*)THIS$1 );
 __builtin_memset( (double*)((uint8*)THIS$1 + 40ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 48ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 56ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 64ll), 0, 8ll );
 *(double*)((uint8*)THIS$1 + 64ll) = 0x1.p+0;
 label$1730:;
}

void _ZN7VECTOR4C1Edd( struct $7VECTOR4* THIS$1, double PXYZ$1, double PW$1 )
{
 label$1731:;
 _ZN7VECTOR3C1Ev( (struct $7VECTOR3*)THIS$1 );
 __builtin_memset( (double*)((uint8*)THIS$1 + 40ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 48ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 56ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 64ll), 0, 8ll );
 *(double*)((uint8*)THIS$1 + 40ll) = PXYZ$1;
 *(double*)((uint8*)THIS$1 + 48ll) = PXYZ$1;
 *(double*)((uint8*)THIS$1 + 56ll) = PXYZ$1;
 *(double*)((uint8*)THIS$1 + 64ll) = PW$1;
 label$1732:;
}

void _ZN7VECTOR4C1Edddd( struct $7VECTOR4* THIS$1, double PX$1, double PY$1, double PZ$1, double PW$1 )
{
 label$1733:;
 _ZN7VECTOR3C1Ev( (struct $7VECTOR3*)THIS$1 );
 __builtin_memset( (double*)((uint8*)THIS$1 + 40ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 48ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 56ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 64ll), 0, 8ll );
 *(double*)((uint8*)THIS$1 + 40ll) = PX$1;
 *(double*)((uint8*)THIS$1 + 48ll) = PY$1;
 *(double*)((uint8*)THIS$1 + 56ll) = PZ$1;
 *(double*)((uint8*)THIS$1 + 64ll) = PW$1;
 label$1734:;
}

void _ZN7VECTOR4C1ER7VECTOR2dd( struct $7VECTOR4* THIS$1, struct $7VECTOR2* V1$1, double PZ$1, double PW$1 )
{
 label$1735:;
 _ZN7VECTOR3C1Ev( (struct $7VECTOR3*)THIS$1 );
 __builtin_memset( (double*)((uint8*)THIS$1 + 40ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 48ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 56ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 64ll), 0, 8ll );
 *(double*)((uint8*)THIS$1 + 40ll) = *(double*)V1$1;
 *(double*)((uint8*)THIS$1 + 48ll) = *(double*)((uint8*)V1$1 + 8ll);
 *(double*)((uint8*)THIS$1 + 56ll) = PZ$1;
 *(double*)((uint8*)THIS$1 + 64ll) = PW$1;
 label$1736:;
}

void _ZN7VECTOR4C1ER7VECTOR2S1_( struct $7VECTOR4* THIS$1, struct $7VECTOR2* V1$1, struct $7VECTOR2* V2$1 )
{
 label$1737:;
 _ZN7VECTOR3C1Ev( (struct $7VECTOR3*)THIS$1 );
 __builtin_memset( (double*)((uint8*)THIS$1 + 40ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 48ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 56ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 64ll), 0, 8ll );
 *(double*)((uint8*)THIS$1 + 40ll) = *(double*)V1$1;
 *(double*)((uint8*)THIS$1 + 48ll) = *(double*)((uint8*)V1$1 + 8ll);
 *(double*)((uint8*)THIS$1 + 56ll) = *(double*)V2$1;
 *(double*)((uint8*)THIS$1 + 64ll) = *(double*)((uint8*)V2$1 + 8ll);
 label$1738:;
}

void _ZN7VECTOR4C1ER7VECTOR3d( struct $7VECTOR4* THIS$1, struct $7VECTOR3* V3$1, double PW$1 )
{
 label$1739:;
 _ZN7VECTOR3C1Ev( (struct $7VECTOR3*)THIS$1 );
 __builtin_memset( (double*)((uint8*)THIS$1 + 40ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 48ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 56ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 64ll), 0, 8ll );
 *(double*)((uint8*)THIS$1 + 40ll) = *(double*)((uint8*)V3$1 + 16ll);
 *(double*)((uint8*)THIS$1 + 48ll) = *(double*)((uint8*)V3$1 + 24ll);
 *(double*)((uint8*)THIS$1 + 56ll) = *(double*)((uint8*)V3$1 + 32ll);
 *(double*)((uint8*)THIS$1 + 64ll) = PW$1;
 label$1740:;
}

void _ZN7VECTOR4C1EdR7VECTOR3( struct $7VECTOR4* THIS$1, double PX$1, struct $7VECTOR3* V3$1 )
{
 label$1741:;
 _ZN7VECTOR3C1Ev( (struct $7VECTOR3*)THIS$1 );
 __builtin_memset( (double*)((uint8*)THIS$1 + 40ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 48ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 56ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 64ll), 0, 8ll );
 *(double*)((uint8*)THIS$1 + 40ll) = PX$1;
 *(double*)((uint8*)THIS$1 + 48ll) = *(double*)((uint8*)V3$1 + 16ll);
 *(double*)((uint8*)THIS$1 + 56ll) = *(double*)((uint8*)V3$1 + 24ll);
 *(double*)((uint8*)THIS$1 + 64ll) = *(double*)((uint8*)V3$1 + 32ll);
 label$1742:;
}

void _ZN7VECTOR4C1ERS_( struct $7VECTOR4* THIS$1, struct $7VECTOR4* V4$1 )
{
 label$1743:;
 _ZN7VECTOR3C1Ev( (struct $7VECTOR3*)THIS$1 );
 __builtin_memset( (double*)((uint8*)THIS$1 + 40ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 48ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 56ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 64ll), 0, 8ll );
 *(double*)((uint8*)THIS$1 + 40ll) = *(double*)((uint8*)V4$1 + 40ll);
 *(double*)((uint8*)THIS$1 + 48ll) = *(double*)((uint8*)V4$1 + 48ll);
 *(double*)((uint8*)THIS$1 + 56ll) = *(double*)((uint8*)V4$1 + 56ll);
 *(double*)((uint8*)THIS$1 + 64ll) = *(double*)((uint8*)V4$1 + 64ll);
 label$1744:;
}

void _ZN7VECTOR4aSEd( struct $7VECTOR4* THIS$1, double PXYZW$1 )
{
 label$1745:;
 *(double*)((uint8*)THIS$1 + 40ll) = PXYZW$1;
 *(double*)((uint8*)THIS$1 + 48ll) = PXYZW$1;
 *(double*)((uint8*)THIS$1 + 56ll) = PXYZW$1;
 *(double*)((uint8*)THIS$1 + 64ll) = PXYZW$1;
 label$1746:;
}

void _ZN7VECTOR4aSER7VECTOR2( struct $7VECTOR4* THIS$1, struct $7VECTOR2* P$1 )
{
 label$1747:;
 *(double*)((uint8*)THIS$1 + 40ll) = *(double*)P$1;
 *(double*)((uint8*)THIS$1 + 48ll) = *(double*)((uint8*)P$1 + 8ll);
 *(double*)((uint8*)THIS$1 + 56ll) = 0x1.p+0;
 *(double*)((uint8*)THIS$1 + 64ll) = 0x1.p+0;
 label$1748:;
}

void _ZN7VECTOR4aSER7VECTOR3( struct $7VECTOR4* THIS$1, struct $7VECTOR3* P$1 )
{
 label$1749:;
 *(double*)((uint8*)THIS$1 + 40ll) = *(double*)((uint8*)P$1 + 16ll);
 *(double*)((uint8*)THIS$1 + 48ll) = *(double*)((uint8*)P$1 + 24ll);
 *(double*)((uint8*)THIS$1 + 56ll) = *(double*)((uint8*)P$1 + 32ll);
 *(double*)((uint8*)THIS$1 + 64ll) = 0x1.p+0;
 label$1750:;
}

void _ZN7VECTOR4aSERS_( struct $7VECTOR4* THIS$1, struct $7VECTOR4* P$1 )
{
 label$1751:;
 *(double*)((uint8*)THIS$1 + 40ll) = *(double*)((uint8*)P$1 + 40ll);
 *(double*)((uint8*)THIS$1 + 48ll) = *(double*)((uint8*)P$1 + 48ll);
 *(double*)((uint8*)THIS$1 + 56ll) = *(double*)((uint8*)P$1 + 56ll);
 *(double*)((uint8*)THIS$1 + 64ll) = *(double*)((uint8*)P$1 + 64ll);
 label$1752:;
}

FBSTRING* _ZN7VECTOR4cv8FBSTRINGEv( struct $7VECTOR4* THIS$1 )
{
 FBSTRING TMP$1507$1;
 FBSTRING TMP$1508$1;
 FBSTRING TMP$1509$1;
 FBSTRING TMP$1510$1;
 FBSTRING TMP$1511$1;
 FBSTRING TMP$1512$1;
 FBSTRING TMP$1513$1;
 FBSTRING TMP$1514$1;
 FBSTRING fb$result$1;
 __builtin_memset( &fb$result$1, 0, 24ll );
 label$1753:;
 FBSTRING* vr$2 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 64ll) );
 FBSTRING* vr$4 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 56ll) );
 FBSTRING* vr$6 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 48ll) );
 FBSTRING* vr$8 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 40ll) );
 __builtin_memset( &TMP$1507$1, 0, 24ll );
 FBSTRING* vr$11 = fb_StrConcat( &TMP$1507$1, (void*)"(", 2ll, (void*)vr$8, -1ll );
 __builtin_memset( &TMP$1508$1, 0, 24ll );
 FBSTRING* vr$14 = fb_StrConcat( &TMP$1508$1, (void*)vr$11, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1509$1, 0, 24ll );
 FBSTRING* vr$17 = fb_StrConcat( &TMP$1509$1, (void*)vr$14, -1ll, (void*)vr$6, -1ll );
 __builtin_memset( &TMP$1510$1, 0, 24ll );
 FBSTRING* vr$20 = fb_StrConcat( &TMP$1510$1, (void*)vr$17, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1511$1, 0, 24ll );
 FBSTRING* vr$23 = fb_StrConcat( &TMP$1511$1, (void*)vr$20, -1ll, (void*)vr$4, -1ll );
 __builtin_memset( &TMP$1512$1, 0, 24ll );
 FBSTRING* vr$26 = fb_StrConcat( &TMP$1512$1, (void*)vr$23, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1513$1, 0, 24ll );
 FBSTRING* vr$29 = fb_StrConcat( &TMP$1513$1, (void*)vr$26, -1ll, (void*)vr$2, -1ll );
 __builtin_memset( &TMP$1514$1, 0, 24ll );
 FBSTRING* vr$32 = fb_StrConcat( &TMP$1514$1, (void*)vr$29, -1ll, (void*)")", 2ll );
 fb_StrInit( (void*)&fb$result$1, -1ll, (void*)vr$32, -1ll, 0 );
 goto label$1754;
 label$1754:;
 FBSTRING* vr$35 = fb_StrAllocTempResult( (FBSTRING*)&fb$result$1 );
 return vr$35;
}

uint64 _ZN7VECTOR4cvyEv( struct $7VECTOR4* THIS$1 )
{
 uint64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1755:;
 uint64 C$1;
 __builtin_memset( &C$1, 0, 8ll );
 C$1 = C$1 << (8ll & 63ll);
 if( *(double*)((uint8*)THIS$1 + 64ll) >= 0x1.010101010101p-8 ) goto label$1758;
 {
 }
 goto label$1757;
 label$1758:;
 if( *(double*)((uint8*)THIS$1 + 64ll) <= 0x1.p+0 ) goto label$1759;
 {
  C$1 = C$1 | 255ull;
 }
 goto label$1757;
 label$1759:;
 {
  C$1 = C$1 | ((uint64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 64ll) * 0x1.FEp+7 ));
 }
 label$1757:;
 C$1 = C$1 << (8ll & 63ll);
 if( *(double*)((uint8*)THIS$1 + 40ll) >= 0x1.010101010101p-8 ) goto label$1761;
 {
 }
 goto label$1760;
 label$1761:;
 if( *(double*)((uint8*)THIS$1 + 40ll) <= 0x1.p+0 ) goto label$1762;
 {
  C$1 = C$1 | 255ull;
 }
 goto label$1760;
 label$1762:;
 {
  C$1 = C$1 | ((uint64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 40ll) * 0x1.FEp+7 ));
 }
 label$1760:;
 C$1 = C$1 << (8ll & 63ll);
 if( *(double*)((uint8*)THIS$1 + 48ll) >= 0x1.010101010101p-8 ) goto label$1764;
 {
 }
 goto label$1763;
 label$1764:;
 if( *(double*)((uint8*)THIS$1 + 48ll) <= 0x1.p+0 ) goto label$1765;
 {
  C$1 = C$1 | 255ull;
 }
 goto label$1763;
 label$1765:;
 {
  C$1 = C$1 | ((uint64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 48ll) * 0x1.FEp+7 ));
 }
 label$1763:;
 C$1 = C$1 << (8ll & 63ll);
 if( *(double*)((uint8*)THIS$1 + 56ll) >= 0x1.010101010101p-8 ) goto label$1767;
 {
 }
 goto label$1766;
 label$1767:;
 if( *(double*)((uint8*)THIS$1 + 56ll) <= 0x1.p+0 ) goto label$1768;
 {
  C$1 = C$1 | 255ull;
 }
 goto label$1766;
 label$1768:;
 {
  C$1 = C$1 | ((uint64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 56ll) * 0x1.FEp+7 ));
 }
 label$1766:;
 fb$result$1 = C$1;
 goto label$1756;
 label$1756:;
 return fb$result$1;
}

void _ZN7VECTOR4pLEd( struct $7VECTOR4* THIS$1, double V$1 )
{
 label$1769:;
 *(double*)((uint8*)THIS$1 + 40ll) = *(double*)((uint8*)THIS$1 + 40ll) + V$1;
 *(double*)((uint8*)THIS$1 + 48ll) = *(double*)((uint8*)THIS$1 + 48ll) + V$1;
 *(double*)((uint8*)THIS$1 + 56ll) = *(double*)((uint8*)THIS$1 + 56ll) + V$1;
 *(double*)((uint8*)THIS$1 + 64ll) = *(double*)((uint8*)THIS$1 + 64ll) + V$1;
 label$1770:;
}

void _ZN7VECTOR4mIEd( struct $7VECTOR4* THIS$1, double V$1 )
{
 label$1771:;
 *(double*)((uint8*)THIS$1 + 40ll) = *(double*)((uint8*)THIS$1 + 40ll) - V$1;
 *(double*)((uint8*)THIS$1 + 48ll) = *(double*)((uint8*)THIS$1 + 48ll) - V$1;
 *(double*)((uint8*)THIS$1 + 56ll) = *(double*)((uint8*)THIS$1 + 56ll) - V$1;
 *(double*)((uint8*)THIS$1 + 64ll) = *(double*)((uint8*)THIS$1 + 64ll) - V$1;
 label$1772:;
}

void _ZN7VECTOR4mLEd( struct $7VECTOR4* THIS$1, double V$1 )
{
 label$1773:;
 *(double*)((uint8*)THIS$1 + 40ll) = *(double*)((uint8*)THIS$1 + 40ll) * V$1;
 *(double*)((uint8*)THIS$1 + 48ll) = *(double*)((uint8*)THIS$1 + 48ll) * V$1;
 *(double*)((uint8*)THIS$1 + 56ll) = *(double*)((uint8*)THIS$1 + 56ll) * V$1;
 *(double*)((uint8*)THIS$1 + 64ll) = *(double*)((uint8*)THIS$1 + 64ll) * V$1;
 label$1774:;
}

void _ZN7VECTOR4dVEd( struct $7VECTOR4* THIS$1, double V$1 )
{
 label$1775:;
 *(double*)((uint8*)THIS$1 + 40ll) = *(double*)((uint8*)THIS$1 + 40ll) / V$1;
 *(double*)((uint8*)THIS$1 + 48ll) = *(double*)((uint8*)THIS$1 + 48ll) / V$1;
 *(double*)((uint8*)THIS$1 + 56ll) = *(double*)((uint8*)THIS$1 + 56ll) / V$1;
 *(double*)((uint8*)THIS$1 + 64ll) = *(double*)((uint8*)THIS$1 + 64ll) / V$1;
 label$1776:;
}

void _ZN7VECTOR4pLER7VECTOR3( struct $7VECTOR4* THIS$1, struct $7VECTOR3* V3$1 )
{
 label$1777:;
 *(double*)((uint8*)THIS$1 + 40ll) = *(double*)((uint8*)THIS$1 + 40ll) + *(double*)((uint8*)V3$1 + 16ll);
 *(double*)((uint8*)THIS$1 + 48ll) = *(double*)((uint8*)THIS$1 + 48ll) + *(double*)((uint8*)V3$1 + 24ll);
 *(double*)((uint8*)THIS$1 + 56ll) = *(double*)((uint8*)THIS$1 + 56ll) + *(double*)((uint8*)V3$1 + 32ll);
 label$1778:;
}

void _ZN7VECTOR4mIER7VECTOR3( struct $7VECTOR4* THIS$1, struct $7VECTOR3* V3$1 )
{
 label$1779:;
 *(double*)((uint8*)THIS$1 + 40ll) = *(double*)((uint8*)THIS$1 + 40ll) - *(double*)((uint8*)V3$1 + 16ll);
 *(double*)((uint8*)THIS$1 + 48ll) = *(double*)((uint8*)THIS$1 + 48ll) - *(double*)((uint8*)V3$1 + 24ll);
 *(double*)((uint8*)THIS$1 + 56ll) = *(double*)((uint8*)THIS$1 + 56ll) - *(double*)((uint8*)V3$1 + 32ll);
 label$1780:;
}

void _ZN7VECTOR4mLER7VECTOR3( struct $7VECTOR4* THIS$1, struct $7VECTOR3* V3$1 )
{
 label$1781:;
 *(double*)((uint8*)THIS$1 + 40ll) = *(double*)((uint8*)THIS$1 + 40ll) * *(double*)((uint8*)V3$1 + 16ll);
 *(double*)((uint8*)THIS$1 + 48ll) = *(double*)((uint8*)THIS$1 + 48ll) * *(double*)((uint8*)V3$1 + 24ll);
 *(double*)((uint8*)THIS$1 + 56ll) = *(double*)((uint8*)THIS$1 + 56ll) * *(double*)((uint8*)V3$1 + 32ll);
 label$1782:;
}

void _ZN7VECTOR4dVER7VECTOR3( struct $7VECTOR4* THIS$1, struct $7VECTOR3* V3$1 )
{
 label$1783:;
 *(double*)((uint8*)THIS$1 + 40ll) = *(double*)((uint8*)THIS$1 + 40ll) / *(double*)((uint8*)V3$1 + 16ll);
 *(double*)((uint8*)THIS$1 + 48ll) = *(double*)((uint8*)THIS$1 + 48ll) / *(double*)((uint8*)V3$1 + 24ll);
 *(double*)((uint8*)THIS$1 + 56ll) = *(double*)((uint8*)THIS$1 + 56ll) / *(double*)((uint8*)V3$1 + 32ll);
 label$1784:;
}

void _ZN7VECTOR4pLERS_( struct $7VECTOR4* THIS$1, struct $7VECTOR4* V4$1 )
{
 label$1785:;
 *(double*)((uint8*)THIS$1 + 40ll) = *(double*)((uint8*)THIS$1 + 40ll) + *(double*)((uint8*)V4$1 + 40ll);
 *(double*)((uint8*)THIS$1 + 48ll) = *(double*)((uint8*)THIS$1 + 48ll) + *(double*)((uint8*)V4$1 + 48ll);
 *(double*)((uint8*)THIS$1 + 56ll) = *(double*)((uint8*)THIS$1 + 56ll) + *(double*)((uint8*)V4$1 + 56ll);
 *(double*)((uint8*)THIS$1 + 64ll) = *(double*)((uint8*)THIS$1 + 64ll) + *(double*)((uint8*)V4$1 + 64ll);
 label$1786:;
}

void _ZN7VECTOR4mIERS_( struct $7VECTOR4* THIS$1, struct $7VECTOR4* V4$1 )
{
 label$1787:;
 *(double*)((uint8*)THIS$1 + 40ll) = *(double*)((uint8*)THIS$1 + 40ll) - *(double*)((uint8*)V4$1 + 40ll);
 *(double*)((uint8*)THIS$1 + 48ll) = *(double*)((uint8*)THIS$1 + 48ll) - *(double*)((uint8*)V4$1 + 48ll);
 *(double*)((uint8*)THIS$1 + 56ll) = *(double*)((uint8*)THIS$1 + 56ll) - *(double*)((uint8*)V4$1 + 56ll);
 *(double*)((uint8*)THIS$1 + 64ll) = *(double*)((uint8*)THIS$1 + 64ll) - *(double*)((uint8*)V4$1 + 64ll);
 label$1788:;
}

void _ZN7VECTOR4mLERS_( struct $7VECTOR4* THIS$1, struct $7VECTOR4* V4$1 )
{
 label$1789:;
 *(double*)((uint8*)THIS$1 + 40ll) = *(double*)((uint8*)THIS$1 + 40ll) * *(double*)((uint8*)V4$1 + 40ll);
 *(double*)((uint8*)THIS$1 + 48ll) = *(double*)((uint8*)THIS$1 + 48ll) * *(double*)((uint8*)V4$1 + 48ll);
 *(double*)((uint8*)THIS$1 + 56ll) = *(double*)((uint8*)THIS$1 + 56ll) * *(double*)((uint8*)V4$1 + 56ll);
 *(double*)((uint8*)THIS$1 + 64ll) = *(double*)((uint8*)THIS$1 + 64ll) * *(double*)((uint8*)V4$1 + 64ll);
 label$1790:;
}

void _ZN7VECTOR4dVERS_( struct $7VECTOR4* THIS$1, struct $7VECTOR4* V4$1 )
{
 label$1791:;
 *(double*)((uint8*)THIS$1 + 40ll) = *(double*)((uint8*)THIS$1 + 40ll) / *(double*)((uint8*)V4$1 + 40ll);
 *(double*)((uint8*)THIS$1 + 48ll) = *(double*)((uint8*)THIS$1 + 48ll) / *(double*)((uint8*)V4$1 + 48ll);
 *(double*)((uint8*)THIS$1 + 56ll) = *(double*)((uint8*)THIS$1 + 56ll) / *(double*)((uint8*)V4$1 + 56ll);
 *(double*)((uint8*)THIS$1 + 64ll) = *(double*)((uint8*)THIS$1 + 64ll) / *(double*)((uint8*)V4$1 + 64ll);
 label$1792:;
}

struct $7VECTOR2* _ZN7VECTOR42XXEv( struct $7VECTOR2* tmp$1515$1, struct $7VECTOR4* THIS$1 )
{
 label$1793:;
 _ZN7VECTOR2C1Edd( tmp$1515$1, *(double*)((uint8*)THIS$1 + 40ll), *(double*)((uint8*)THIS$1 + 40ll) );
 goto label$1794;
 label$1794:;
 return tmp$1515$1;
}

struct $7VECTOR2* _ZN7VECTOR42XYEv( struct $7VECTOR2* tmp$1517$1, struct $7VECTOR4* THIS$1 )
{
 label$1795:;
 _ZN7VECTOR2C1Edd( tmp$1517$1, *(double*)((uint8*)THIS$1 + 40ll), *(double*)((uint8*)THIS$1 + 48ll) );
 goto label$1796;
 label$1796:;
 return tmp$1517$1;
}

struct $7VECTOR2* _ZN7VECTOR42XZEv( struct $7VECTOR2* tmp$1519$1, struct $7VECTOR4* THIS$1 )
{
 label$1797:;
 _ZN7VECTOR2C1Edd( tmp$1519$1, *(double*)((uint8*)THIS$1 + 48ll), *(double*)((uint8*)THIS$1 + 56ll) );
 goto label$1798;
 label$1798:;
 return tmp$1519$1;
}

struct $7VECTOR2* _ZN7VECTOR42YXEv( struct $7VECTOR2* tmp$1521$1, struct $7VECTOR4* THIS$1 )
{
 label$1799:;
 _ZN7VECTOR2C1Edd( tmp$1521$1, *(double*)((uint8*)THIS$1 + 48ll), *(double*)((uint8*)THIS$1 + 40ll) );
 goto label$1800;
 label$1800:;
 return tmp$1521$1;
}

struct $7VECTOR2* _ZN7VECTOR42YYEv( struct $7VECTOR2* tmp$1523$1, struct $7VECTOR4* THIS$1 )
{
 label$1801:;
 _ZN7VECTOR2C1Edd( tmp$1523$1, *(double*)((uint8*)THIS$1 + 48ll), *(double*)((uint8*)THIS$1 + 48ll) );
 goto label$1802;
 label$1802:;
 return tmp$1523$1;
}

struct $7VECTOR2* _ZN7VECTOR42YZEv( struct $7VECTOR2* tmp$1525$1, struct $7VECTOR4* THIS$1 )
{
 label$1803:;
 _ZN7VECTOR2C1Edd( tmp$1525$1, *(double*)((uint8*)THIS$1 + 48ll), *(double*)((uint8*)THIS$1 + 56ll) );
 goto label$1804;
 label$1804:;
 return tmp$1525$1;
}

struct $7VECTOR2* _ZN7VECTOR42ZXEv( struct $7VECTOR2* tmp$1527$1, struct $7VECTOR4* THIS$1 )
{
 label$1805:;
 _ZN7VECTOR2C1Edd( tmp$1527$1, *(double*)((uint8*)THIS$1 + 56ll), *(double*)((uint8*)THIS$1 + 40ll) );
 goto label$1806;
 label$1806:;
 return tmp$1527$1;
}

struct $7VECTOR2* _ZN7VECTOR42ZYEv( struct $7VECTOR2* tmp$1529$1, struct $7VECTOR4* THIS$1 )
{
 label$1807:;
 _ZN7VECTOR2C1Edd( tmp$1529$1, *(double*)((uint8*)THIS$1 + 56ll), *(double*)((uint8*)THIS$1 + 48ll) );
 goto label$1808;
 label$1808:;
 return tmp$1529$1;
}

struct $7VECTOR2* _ZN7VECTOR42ZZEv( struct $7VECTOR2* tmp$1531$1, struct $7VECTOR4* THIS$1 )
{
 label$1809:;
 _ZN7VECTOR2C1Edd( tmp$1531$1, *(double*)((uint8*)THIS$1 + 56ll), *(double*)((uint8*)THIS$1 + 56ll) );
 goto label$1810;
 label$1810:;
 return tmp$1531$1;
}

struct $7VECTOR3* _ZN7VECTOR43XXXEv( struct $7VECTOR3* tmp$1533$1, struct $7VECTOR4* THIS$1 )
{
 label$1811:;
 _ZN7VECTOR3C1Eddd( tmp$1533$1, *(double*)((uint8*)THIS$1 + 40ll), *(double*)((uint8*)THIS$1 + 40ll), *(double*)((uint8*)THIS$1 + 40ll) );
 goto label$1812;
 label$1812:;
 return tmp$1533$1;
}

struct $7VECTOR3* _ZN7VECTOR43XXYEv( struct $7VECTOR3* tmp$1535$1, struct $7VECTOR4* THIS$1 )
{
 label$1813:;
 _ZN7VECTOR3C1Eddd( tmp$1535$1, *(double*)((uint8*)THIS$1 + 40ll), *(double*)((uint8*)THIS$1 + 40ll), *(double*)((uint8*)THIS$1 + 48ll) );
 goto label$1814;
 label$1814:;
 return tmp$1535$1;
}

struct $7VECTOR3* _ZN7VECTOR43XXZEv( struct $7VECTOR3* tmp$1537$1, struct $7VECTOR4* THIS$1 )
{
 label$1815:;
 _ZN7VECTOR3C1Eddd( tmp$1537$1, *(double*)((uint8*)THIS$1 + 40ll), *(double*)((uint8*)THIS$1 + 40ll), *(double*)((uint8*)THIS$1 + 56ll) );
 goto label$1816;
 label$1816:;
 return tmp$1537$1;
}

struct $7VECTOR3* _ZN7VECTOR43XYXEv( struct $7VECTOR3* tmp$1539$1, struct $7VECTOR4* THIS$1 )
{
 label$1817:;
 _ZN7VECTOR3C1Eddd( tmp$1539$1, *(double*)((uint8*)THIS$1 + 40ll), *(double*)((uint8*)THIS$1 + 48ll), *(double*)((uint8*)THIS$1 + 40ll) );
 goto label$1818;
 label$1818:;
 return tmp$1539$1;
}

struct $7VECTOR3* _ZN7VECTOR43XYYEv( struct $7VECTOR3* tmp$1541$1, struct $7VECTOR4* THIS$1 )
{
 label$1819:;
 _ZN7VECTOR3C1Eddd( tmp$1541$1, *(double*)((uint8*)THIS$1 + 40ll), *(double*)((uint8*)THIS$1 + 48ll), *(double*)((uint8*)THIS$1 + 48ll) );
 goto label$1820;
 label$1820:;
 return tmp$1541$1;
}

struct $7VECTOR3* _ZN7VECTOR43XYZEv( struct $7VECTOR3* tmp$1543$1, struct $7VECTOR4* THIS$1 )
{
 label$1821:;
 _ZN7VECTOR3C1Eddd( tmp$1543$1, *(double*)((uint8*)THIS$1 + 40ll), *(double*)((uint8*)THIS$1 + 48ll), *(double*)((uint8*)THIS$1 + 56ll) );
 goto label$1822;
 label$1822:;
 return tmp$1543$1;
}

struct $7VECTOR3* _ZN7VECTOR43XZXEv( struct $7VECTOR3* tmp$1545$1, struct $7VECTOR4* THIS$1 )
{
 label$1823:;
 _ZN7VECTOR3C1Eddd( tmp$1545$1, *(double*)((uint8*)THIS$1 + 40ll), *(double*)((uint8*)THIS$1 + 56ll), *(double*)((uint8*)THIS$1 + 40ll) );
 goto label$1824;
 label$1824:;
 return tmp$1545$1;
}

struct $7VECTOR3* _ZN7VECTOR43XZYEv( struct $7VECTOR3* tmp$1547$1, struct $7VECTOR4* THIS$1 )
{
 label$1825:;
 _ZN7VECTOR3C1Eddd( tmp$1547$1, *(double*)((uint8*)THIS$1 + 40ll), *(double*)((uint8*)THIS$1 + 56ll), *(double*)((uint8*)THIS$1 + 48ll) );
 goto label$1826;
 label$1826:;
 return tmp$1547$1;
}

struct $7VECTOR3* _ZN7VECTOR43XZZEv( struct $7VECTOR3* tmp$1549$1, struct $7VECTOR4* THIS$1 )
{
 label$1827:;
 _ZN7VECTOR3C1Eddd( tmp$1549$1, *(double*)((uint8*)THIS$1 + 40ll), *(double*)((uint8*)THIS$1 + 56ll), *(double*)((uint8*)THIS$1 + 56ll) );
 goto label$1828;
 label$1828:;
 return tmp$1549$1;
}

struct $7VECTOR3* _ZN7VECTOR43YXXEv( struct $7VECTOR3* tmp$1551$1, struct $7VECTOR4* THIS$1 )
{
 label$1829:;
 _ZN7VECTOR3C1Eddd( tmp$1551$1, *(double*)((uint8*)THIS$1 + 48ll), *(double*)((uint8*)THIS$1 + 40ll), *(double*)((uint8*)THIS$1 + 40ll) );
 goto label$1830;
 label$1830:;
 return tmp$1551$1;
}

struct $7VECTOR3* _ZN7VECTOR43YXYEv( struct $7VECTOR3* tmp$1553$1, struct $7VECTOR4* THIS$1 )
{
 label$1831:;
 _ZN7VECTOR3C1Eddd( tmp$1553$1, *(double*)((uint8*)THIS$1 + 48ll), *(double*)((uint8*)THIS$1 + 40ll), *(double*)((uint8*)THIS$1 + 48ll) );
 goto label$1832;
 label$1832:;
 return tmp$1553$1;
}

struct $7VECTOR3* _ZN7VECTOR43YXZEv( struct $7VECTOR3* tmp$1555$1, struct $7VECTOR4* THIS$1 )
{
 label$1833:;
 _ZN7VECTOR3C1Eddd( tmp$1555$1, *(double*)((uint8*)THIS$1 + 48ll), *(double*)((uint8*)THIS$1 + 40ll), *(double*)((uint8*)THIS$1 + 56ll) );
 goto label$1834;
 label$1834:;
 return tmp$1555$1;
}

struct $7VECTOR3* _ZN7VECTOR43YYXEv( struct $7VECTOR3* tmp$1557$1, struct $7VECTOR4* THIS$1 )
{
 label$1835:;
 _ZN7VECTOR3C1Eddd( tmp$1557$1, *(double*)((uint8*)THIS$1 + 48ll), *(double*)((uint8*)THIS$1 + 48ll), *(double*)((uint8*)THIS$1 + 40ll) );
 goto label$1836;
 label$1836:;
 return tmp$1557$1;
}

struct $7VECTOR3* _ZN7VECTOR43YYYEv( struct $7VECTOR3* tmp$1559$1, struct $7VECTOR4* THIS$1 )
{
 label$1837:;
 _ZN7VECTOR3C1Eddd( tmp$1559$1, *(double*)((uint8*)THIS$1 + 48ll), *(double*)((uint8*)THIS$1 + 48ll), *(double*)((uint8*)THIS$1 + 48ll) );
 goto label$1838;
 label$1838:;
 return tmp$1559$1;
}

struct $7VECTOR3* _ZN7VECTOR43YYZEv( struct $7VECTOR3* tmp$1561$1, struct $7VECTOR4* THIS$1 )
{
 label$1839:;
 _ZN7VECTOR3C1Eddd( tmp$1561$1, *(double*)((uint8*)THIS$1 + 48ll), *(double*)((uint8*)THIS$1 + 48ll), *(double*)((uint8*)THIS$1 + 56ll) );
 goto label$1840;
 label$1840:;
 return tmp$1561$1;
}

struct $7VECTOR3* _ZN7VECTOR43YZXEv( struct $7VECTOR3* tmp$1563$1, struct $7VECTOR4* THIS$1 )
{
 label$1841:;
 _ZN7VECTOR3C1Eddd( tmp$1563$1, *(double*)((uint8*)THIS$1 + 48ll), *(double*)((uint8*)THIS$1 + 56ll), *(double*)((uint8*)THIS$1 + 40ll) );
 goto label$1842;
 label$1842:;
 return tmp$1563$1;
}

struct $7VECTOR3* _ZN7VECTOR43YZYEv( struct $7VECTOR3* tmp$1565$1, struct $7VECTOR4* THIS$1 )
{
 label$1843:;
 _ZN7VECTOR3C1Eddd( tmp$1565$1, *(double*)((uint8*)THIS$1 + 48ll), *(double*)((uint8*)THIS$1 + 56ll), *(double*)((uint8*)THIS$1 + 48ll) );
 goto label$1844;
 label$1844:;
 return tmp$1565$1;
}

struct $7VECTOR3* _ZN7VECTOR43YZZEv( struct $7VECTOR3* tmp$1567$1, struct $7VECTOR4* THIS$1 )
{
 label$1845:;
 _ZN7VECTOR3C1Eddd( tmp$1567$1, *(double*)((uint8*)THIS$1 + 48ll), *(double*)((uint8*)THIS$1 + 56ll), *(double*)((uint8*)THIS$1 + 56ll) );
 goto label$1846;
 label$1846:;
 return tmp$1567$1;
}

struct $7VECTOR3* _ZN7VECTOR43ZXXEv( struct $7VECTOR3* tmp$1569$1, struct $7VECTOR4* THIS$1 )
{
 label$1847:;
 _ZN7VECTOR3C1Eddd( tmp$1569$1, *(double*)((uint8*)THIS$1 + 56ll), *(double*)((uint8*)THIS$1 + 40ll), *(double*)((uint8*)THIS$1 + 40ll) );
 goto label$1848;
 label$1848:;
 return tmp$1569$1;
}

struct $7VECTOR3* _ZN7VECTOR43ZXYEv( struct $7VECTOR3* tmp$1571$1, struct $7VECTOR4* THIS$1 )
{
 label$1849:;
 _ZN7VECTOR3C1Eddd( tmp$1571$1, *(double*)((uint8*)THIS$1 + 56ll), *(double*)((uint8*)THIS$1 + 40ll), *(double*)((uint8*)THIS$1 + 48ll) );
 goto label$1850;
 label$1850:;
 return tmp$1571$1;
}

struct $7VECTOR3* _ZN7VECTOR43ZXZEv( struct $7VECTOR3* tmp$1573$1, struct $7VECTOR4* THIS$1 )
{
 label$1851:;
 _ZN7VECTOR3C1Eddd( tmp$1573$1, *(double*)((uint8*)THIS$1 + 56ll), *(double*)((uint8*)THIS$1 + 40ll), *(double*)((uint8*)THIS$1 + 56ll) );
 goto label$1852;
 label$1852:;
 return tmp$1573$1;
}

struct $7VECTOR3* _ZN7VECTOR43ZYXEv( struct $7VECTOR3* tmp$1575$1, struct $7VECTOR4* THIS$1 )
{
 label$1853:;
 _ZN7VECTOR3C1Eddd( tmp$1575$1, *(double*)((uint8*)THIS$1 + 56ll), *(double*)((uint8*)THIS$1 + 48ll), *(double*)((uint8*)THIS$1 + 40ll) );
 goto label$1854;
 label$1854:;
 return tmp$1575$1;
}

struct $7VECTOR3* _ZN7VECTOR43ZYYEv( struct $7VECTOR3* tmp$1577$1, struct $7VECTOR4* THIS$1 )
{
 label$1855:;
 _ZN7VECTOR3C1Eddd( tmp$1577$1, *(double*)((uint8*)THIS$1 + 56ll), *(double*)((uint8*)THIS$1 + 48ll), *(double*)((uint8*)THIS$1 + 48ll) );
 goto label$1856;
 label$1856:;
 return tmp$1577$1;
}

struct $7VECTOR3* _ZN7VECTOR43ZYZEv( struct $7VECTOR3* tmp$1579$1, struct $7VECTOR4* THIS$1 )
{
 label$1857:;
 _ZN7VECTOR3C1Eddd( tmp$1579$1, *(double*)((uint8*)THIS$1 + 56ll), *(double*)((uint8*)THIS$1 + 48ll), *(double*)((uint8*)THIS$1 + 56ll) );
 goto label$1858;
 label$1858:;
 return tmp$1579$1;
}

struct $7VECTOR3* _ZN7VECTOR43ZZXEv( struct $7VECTOR3* tmp$1581$1, struct $7VECTOR4* THIS$1 )
{
 label$1859:;
 _ZN7VECTOR3C1Eddd( tmp$1581$1, *(double*)((uint8*)THIS$1 + 56ll), *(double*)((uint8*)THIS$1 + 56ll), *(double*)((uint8*)THIS$1 + 40ll) );
 goto label$1860;
 label$1860:;
 return tmp$1581$1;
}

struct $7VECTOR3* _ZN7VECTOR43ZZYEv( struct $7VECTOR3* tmp$1583$1, struct $7VECTOR4* THIS$1 )
{
 label$1861:;
 _ZN7VECTOR3C1Eddd( tmp$1583$1, *(double*)((uint8*)THIS$1 + 56ll), *(double*)((uint8*)THIS$1 + 56ll), *(double*)((uint8*)THIS$1 + 48ll) );
 goto label$1862;
 label$1862:;
 return tmp$1583$1;
}

struct $7VECTOR3* _ZN7VECTOR43ZZZEv( struct $7VECTOR3* tmp$1585$1, struct $7VECTOR4* THIS$1 )
{
 label$1863:;
 _ZN7VECTOR3C1Eddd( tmp$1585$1, *(double*)((uint8*)THIS$1 + 56ll), *(double*)((uint8*)THIS$1 + 56ll), *(double*)((uint8*)THIS$1 + 56ll) );
 goto label$1864;
 label$1864:;
 return tmp$1585$1;
}

struct $7VECTOR3* _ZN7VECTOR43RGBEv( struct $7VECTOR3* tmp$1587$1, struct $7VECTOR4* THIS$1 )
{
 label$1865:;
 _ZN7VECTOR3C1Eddd( tmp$1587$1, *(double*)((uint8*)THIS$1 + 40ll), *(double*)((uint8*)THIS$1 + 48ll), *(double*)((uint8*)THIS$1 + 56ll) );
 goto label$1866;
 label$1866:;
 return tmp$1587$1;
}

struct $7VECTOR4* _ZN7VECTOR44RGBAEv( struct $7VECTOR4* tmp$1589$1, struct $7VECTOR4* THIS$1 )
{
 label$1867:;
 _ZN7VECTOR4C1Edddd( tmp$1589$1, *(double*)((uint8*)THIS$1 + 40ll), *(double*)((uint8*)THIS$1 + 48ll), *(double*)((uint8*)THIS$1 + 56ll), *(double*)((uint8*)THIS$1 + 64ll) );
 goto label$1868;
 label$1868:;
 return tmp$1589$1;
}

struct $7VECTOR4* _ZngR7VECTOR4( struct $7VECTOR4* tmp$1591$1, struct $7VECTOR4* L$1 )
{
 label$1869:;
 _ZN7VECTOR4C1Edddd( tmp$1591$1, -(*(double*)((uint8*)L$1 + 40ll)), -(*(double*)((uint8*)L$1 + 48ll)), -(*(double*)((uint8*)L$1 + 56ll)), -(*(double*)((uint8*)L$1 + 64ll)) );
 goto label$1870;
 label$1870:;
 return tmp$1591$1;
}

struct $7VECTOR4* _ZplR7VECTOR4S0_( struct $7VECTOR4* tmp$1593$1, struct $7VECTOR4* L$1, struct $7VECTOR4* R$1 )
{
 label$1871:;
 _ZN7VECTOR4C1Edddd( tmp$1593$1, *(double*)((uint8*)L$1 + 40ll) + *(double*)((uint8*)R$1 + 40ll), *(double*)((uint8*)L$1 + 48ll) + *(double*)((uint8*)R$1 + 48ll), *(double*)((uint8*)L$1 + 56ll) + *(double*)((uint8*)R$1 + 56ll), *(double*)((uint8*)L$1 + 64ll) + *(double*)((uint8*)R$1 + 64ll) );
 goto label$1872;
 label$1872:;
 return tmp$1593$1;
}

struct $7VECTOR4* _ZmiR7VECTOR4S0_( struct $7VECTOR4* tmp$1595$1, struct $7VECTOR4* L$1, struct $7VECTOR4* R$1 )
{
 label$1873:;
 _ZN7VECTOR4C1Edddd( tmp$1595$1, *(double*)((uint8*)L$1 + 40ll) - *(double*)((uint8*)R$1 + 40ll), *(double*)((uint8*)L$1 + 48ll) - *(double*)((uint8*)R$1 + 48ll), *(double*)((uint8*)L$1 + 56ll) - *(double*)((uint8*)R$1 + 56ll), *(double*)((uint8*)L$1 + 64ll) - *(double*)((uint8*)R$1 + 64ll) );
 goto label$1874;
 label$1874:;
 return tmp$1595$1;
}

struct $7VECTOR4* _ZmlR7VECTOR4S0_( struct $7VECTOR4* tmp$1597$1, struct $7VECTOR4* L$1, struct $7VECTOR4* R$1 )
{
 label$1875:;
 _ZN7VECTOR4C1Edddd( tmp$1597$1, *(double*)((uint8*)L$1 + 40ll) * *(double*)((uint8*)R$1 + 40ll), *(double*)((uint8*)L$1 + 48ll) * *(double*)((uint8*)R$1 + 48ll), *(double*)((uint8*)L$1 + 56ll) * *(double*)((uint8*)R$1 + 56ll), *(double*)((uint8*)L$1 + 64ll) * *(double*)((uint8*)R$1 + 64ll) );
 goto label$1876;
 label$1876:;
 return tmp$1597$1;
}

struct $7VECTOR4* _ZdvR7VECTOR4S0_( struct $7VECTOR4* tmp$1599$1, struct $7VECTOR4* L$1, struct $7VECTOR4* R$1 )
{
 label$1877:;
 _ZN7VECTOR4C1Edddd( tmp$1599$1, *(double*)((uint8*)L$1 + 40ll) / *(double*)((uint8*)R$1 + 40ll), *(double*)((uint8*)L$1 + 48ll) / *(double*)((uint8*)R$1 + 48ll), *(double*)((uint8*)L$1 + 56ll) / *(double*)((uint8*)R$1 + 56ll), *(double*)((uint8*)L$1 + 64ll) / *(double*)((uint8*)R$1 + 64ll) );
 goto label$1878;
 label$1878:;
 return tmp$1599$1;
}

struct $7VECTOR4* _ZplR7VECTOR4d( struct $7VECTOR4* tmp$1601$1, struct $7VECTOR4* L$1, double R$1 )
{
 label$1879:;
 _ZN7VECTOR4C1Edddd( tmp$1601$1, *(double*)((uint8*)L$1 + 40ll) + R$1, *(double*)((uint8*)L$1 + 48ll) + R$1, *(double*)((uint8*)L$1 + 56ll) + R$1, *(double*)((uint8*)L$1 + 64ll) + R$1 );
 goto label$1880;
 label$1880:;
 return tmp$1601$1;
}

struct $7VECTOR4* _ZpldR7VECTOR4( struct $7VECTOR4* tmp$1603$1, double L$1, struct $7VECTOR4* R$1 )
{
 label$1881:;
 _ZN7VECTOR4C1Edddd( tmp$1603$1, *(double*)((uint8*)R$1 + 40ll) + L$1, *(double*)((uint8*)R$1 + 48ll) + L$1, *(double*)((uint8*)R$1 + 56ll) + L$1, *(double*)((uint8*)R$1 + 64ll) + L$1 );
 goto label$1882;
 label$1882:;
 return tmp$1603$1;
}

struct $7VECTOR4* _ZmiR7VECTOR4d( struct $7VECTOR4* tmp$1605$1, struct $7VECTOR4* L$1, double R$1 )
{
 label$1883:;
 _ZN7VECTOR4C1Edddd( tmp$1605$1, *(double*)((uint8*)L$1 + 40ll) - R$1, *(double*)((uint8*)L$1 + 48ll) - R$1, *(double*)((uint8*)L$1 + 56ll) - R$1, *(double*)((uint8*)L$1 + 64ll) - R$1 );
 goto label$1884;
 label$1884:;
 return tmp$1605$1;
}

struct $7VECTOR4* _ZmidR7VECTOR4( struct $7VECTOR4* tmp$1607$1, double L$1, struct $7VECTOR4* R$1 )
{
 label$1885:;
 _ZN7VECTOR4C1Edddd( tmp$1607$1, *(double*)((uint8*)R$1 + 40ll) - L$1, *(double*)((uint8*)R$1 + 48ll) - L$1, *(double*)((uint8*)R$1 + 56ll) - L$1, *(double*)((uint8*)R$1 + 64ll) - L$1 );
 goto label$1886;
 label$1886:;
 return tmp$1607$1;
}

struct $7VECTOR4* _ZmlR7VECTOR4d( struct $7VECTOR4* tmp$1609$1, struct $7VECTOR4* L$1, double R$1 )
{
 label$1887:;
 _ZN7VECTOR4C1Edddd( tmp$1609$1, *(double*)((uint8*)L$1 + 40ll) * R$1, *(double*)((uint8*)L$1 + 48ll) * R$1, *(double*)((uint8*)L$1 + 56ll) * R$1, *(double*)((uint8*)L$1 + 64ll) * R$1 );
 goto label$1888;
 label$1888:;
 return tmp$1609$1;
}

struct $7VECTOR4* _ZmldR7VECTOR4( struct $7VECTOR4* tmp$1611$1, double L$1, struct $7VECTOR4* R$1 )
{
 label$1889:;
 _ZN7VECTOR4C1Edddd( tmp$1611$1, L$1 * *(double*)((uint8*)R$1 + 40ll), L$1 * *(double*)((uint8*)R$1 + 48ll), L$1 * *(double*)((uint8*)R$1 + 56ll), L$1 * *(double*)((uint8*)R$1 + 64ll) );
 goto label$1890;
 label$1890:;
 return tmp$1611$1;
}

struct $7VECTOR4* _ZdvR7VECTOR4d( struct $7VECTOR4* tmp$1613$1, struct $7VECTOR4* L$1, double R$1 )
{
 label$1891:;
 _ZN7VECTOR4C1Edddd( tmp$1613$1, *(double*)((uint8*)L$1 + 40ll) / R$1, *(double*)((uint8*)L$1 + 48ll) / R$1, *(double*)((uint8*)L$1 + 56ll) / R$1, *(double*)((uint8*)L$1 + 64ll) / R$1 );
 goto label$1892;
 label$1892:;
 return tmp$1613$1;
}

struct $7VECTOR4* _ZdvdR7VECTOR4( struct $7VECTOR4* tmp$1615$1, double L$1, struct $7VECTOR4* R$1 )
{
 label$1893:;
 _ZN7VECTOR4C1Edddd( tmp$1615$1, *(double*)((uint8*)R$1 + 40ll) / L$1, *(double*)((uint8*)R$1 + 48ll) / L$1, *(double*)((uint8*)R$1 + 56ll) / L$1, *(double*)((uint8*)R$1 + 64ll) / L$1 );
 goto label$1894;
 label$1894:;
 return tmp$1615$1;
}

struct $7VECTOR4* _ZplR7VECTOR4R7VECTOR3( struct $7VECTOR4* tmp$1617$1, struct $7VECTOR4* L$1, struct $7VECTOR3* R$1 )
{
 label$1895:;
 _ZN7VECTOR4C1Edddd( tmp$1617$1, *(double*)((uint8*)L$1 + 40ll) + *(double*)((uint8*)R$1 + 16ll), *(double*)((uint8*)L$1 + 48ll) + *(double*)((uint8*)R$1 + 24ll), *(double*)((uint8*)L$1 + 56ll) + *(double*)((uint8*)R$1 + 32ll), *(double*)((uint8*)L$1 + 64ll) );
 goto label$1896;
 label$1896:;
 return tmp$1617$1;
}

struct $7VECTOR4* _ZplR7VECTOR3R7VECTOR4( struct $7VECTOR4* tmp$1619$1, struct $7VECTOR3* L$1, struct $7VECTOR4* R$1 )
{
 label$1897:;
 _ZN7VECTOR4C1Edddd( tmp$1619$1, *(double*)((uint8*)L$1 + 16ll) + *(double*)((uint8*)R$1 + 40ll), *(double*)((uint8*)L$1 + 24ll) + *(double*)((uint8*)R$1 + 48ll), *(double*)((uint8*)L$1 + 32ll) + *(double*)((uint8*)R$1 + 56ll), 0x1.p+0 );
 goto label$1898;
 label$1898:;
 return tmp$1619$1;
}

struct $7VECTOR4* _ZmiR7VECTOR4R7VECTOR3( struct $7VECTOR4* tmp$1621$1, struct $7VECTOR4* L$1, struct $7VECTOR3* R$1 )
{
 label$1899:;
 _ZN7VECTOR4C1Edddd( tmp$1621$1, *(double*)((uint8*)L$1 + 40ll) - *(double*)((uint8*)R$1 + 16ll), *(double*)((uint8*)L$1 + 48ll) - *(double*)((uint8*)R$1 + 24ll), *(double*)((uint8*)L$1 + 56ll) - *(double*)((uint8*)R$1 + 32ll), *(double*)((uint8*)L$1 + 64ll) );
 goto label$1900;
 label$1900:;
 return tmp$1621$1;
}

struct $7VECTOR4* _ZmiR7VECTOR3R7VECTOR4( struct $7VECTOR4* tmp$1623$1, struct $7VECTOR3* L$1, struct $7VECTOR4* R$1 )
{
 label$1901:;
 _ZN7VECTOR4C1Edddd( tmp$1623$1, *(double*)((uint8*)L$1 + 16ll) - *(double*)((uint8*)R$1 + 40ll), *(double*)((uint8*)L$1 + 24ll) - *(double*)((uint8*)R$1 + 48ll), *(double*)((uint8*)L$1 + 32ll) - *(double*)((uint8*)R$1 + 56ll), 0x1.p+0 );
 goto label$1902;
 label$1902:;
 return tmp$1623$1;
}

struct $7VECTOR4* _ZmlR7VECTOR4R7VECTOR3( struct $7VECTOR4* tmp$1625$1, struct $7VECTOR4* L$1, struct $7VECTOR3* R$1 )
{
 label$1903:;
 _ZN7VECTOR4C1Edddd( tmp$1625$1, *(double*)((uint8*)L$1 + 40ll) * *(double*)((uint8*)R$1 + 16ll), *(double*)((uint8*)L$1 + 48ll) * *(double*)((uint8*)R$1 + 24ll), *(double*)((uint8*)L$1 + 56ll) * *(double*)((uint8*)R$1 + 32ll), *(double*)((uint8*)L$1 + 64ll) );
 goto label$1904;
 label$1904:;
 return tmp$1625$1;
}

struct $7VECTOR4* _ZmlR7VECTOR3R7VECTOR4( struct $7VECTOR4* tmp$1627$1, struct $7VECTOR3* L$1, struct $7VECTOR4* R$1 )
{
 label$1905:;
 _ZN7VECTOR4C1Edddd( tmp$1627$1, *(double*)((uint8*)L$1 + 16ll) * *(double*)((uint8*)R$1 + 40ll), *(double*)((uint8*)L$1 + 24ll) * *(double*)((uint8*)R$1 + 48ll), *(double*)((uint8*)L$1 + 32ll) * *(double*)((uint8*)R$1 + 56ll), 0x1.p+0 );
 goto label$1906;
 label$1906:;
 return tmp$1627$1;
}

struct $7VECTOR4* _ZdvR7VECTOR4R7VECTOR3( struct $7VECTOR4* tmp$1629$1, struct $7VECTOR4* L$1, struct $7VECTOR3* R$1 )
{
 label$1907:;
 _ZN7VECTOR4C1Edddd( tmp$1629$1, *(double*)((uint8*)L$1 + 40ll) / *(double*)((uint8*)R$1 + 16ll), *(double*)((uint8*)L$1 + 48ll) / *(double*)((uint8*)R$1 + 24ll), *(double*)((uint8*)L$1 + 56ll) / *(double*)((uint8*)R$1 + 32ll), *(double*)((uint8*)L$1 + 64ll) );
 goto label$1908;
 label$1908:;
 return tmp$1629$1;
}

struct $7VECTOR4* _ZdvR7VECTOR3R7VECTOR4( struct $7VECTOR4* tmp$1631$1, struct $7VECTOR3* L$1, struct $7VECTOR4* R$1 )
{
 label$1909:;
 _ZN7VECTOR4C1Edddd( tmp$1631$1, *(double*)((uint8*)L$1 + 16ll) / *(double*)((uint8*)R$1 + 40ll), *(double*)((uint8*)L$1 + 24ll) / *(double*)((uint8*)R$1 + 48ll), *(double*)((uint8*)L$1 + 32ll) / *(double*)((uint8*)R$1 + 56ll), 0x1.p+0 );
 goto label$1910;
 label$1910:;
 return tmp$1631$1;
}

int64 _ZeqR7VECTOR4S0_( struct $7VECTOR4* L$1, struct $7VECTOR4* R$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1911:;
 if( ((((((int64)__builtin_nearbyint( *(double*)((uint8*)L$1 + 40ll) )) ^ ((int64)__builtin_nearbyint( *(double*)((uint8*)R$1 + 40ll) ))) | (((int64)__builtin_nearbyint( *(double*)((uint8*)L$1 + 48ll) )) ^ ((int64)__builtin_nearbyint( *(double*)((uint8*)R$1 + 48ll) )))) | (((int64)__builtin_nearbyint( *(double*)((uint8*)L$1 + 56ll) )) ^ ((int64)__builtin_nearbyint( *(double*)((uint8*)R$1 + 56ll) )))) | (((int64)__builtin_nearbyint( *(double*)((uint8*)L$1 + 64ll) )) ^ ((int64)__builtin_nearbyint( *(double*)((uint8*)R$1 + 64ll) )))) == 0ll ) goto label$1914;
 {
  fb$result$1 = 0ll;
  goto label$1912;
  label$1914:;
 }
 fb$result$1 = -1ll;
 goto label$1912;
 label$1912:;
 return fb$result$1;
}

int64 _ZneR7VECTOR4S0_( struct $7VECTOR4* L$1, struct $7VECTOR4* R$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1915:;
 if( ((((((int64)__builtin_nearbyint( *(double*)((uint8*)L$1 + 40ll) )) ^ ((int64)__builtin_nearbyint( *(double*)((uint8*)R$1 + 40ll) ))) | (((int64)__builtin_nearbyint( *(double*)((uint8*)L$1 + 48ll) )) ^ ((int64)__builtin_nearbyint( *(double*)((uint8*)R$1 + 48ll) )))) | (((int64)__builtin_nearbyint( *(double*)((uint8*)L$1 + 56ll) )) ^ ((int64)__builtin_nearbyint( *(double*)((uint8*)R$1 + 56ll) )))) | (((int64)__builtin_nearbyint( *(double*)((uint8*)L$1 + 64ll) )) ^ ((int64)__builtin_nearbyint( *(double*)((uint8*)R$1 + 64ll) )))) == 0ll ) goto label$1918;
 {
  fb$result$1 = -1ll;
  goto label$1916;
  label$1918:;
 }
 fb$result$1 = 0ll;
 goto label$1916;
 label$1916:;
 return fb$result$1;
}

void _ZN5PLANEC1Ev( struct $5PLANE* THIS$1 )
{
 label$1923:;
 _ZN7VECTOR4C1Ev( (struct $7VECTOR4*)THIS$1 );
 *(double*)((uint8*)THIS$1 + 88ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 96ll) = 0x1.p+0;
 *(double*)((uint8*)THIS$1 + 104ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 112ll) = 0x0p+0;
 label$1924:;
}

void _ZN5PLANEC1ER7VECTOR3S1_( struct $5PLANE* THIS$1, struct $7VECTOR3* NORMAL$1, struct $7VECTOR3* V$1 )
{
 label$1925:;
 _ZN7VECTOR4C1Ev( (struct $7VECTOR4*)THIS$1 );
 _ZN7VECTOR3aSERS_( (struct $7VECTOR3*)((uint8*)THIS$1 + 72ll), NORMAL$1 );
 *(double*)((uint8*)THIS$1 + 112ll) = -(((*(double*)((uint8*)THIS$1 + 88ll) * *(double*)((uint8*)V$1 + 16ll)) + (*(double*)((uint8*)THIS$1 + 96ll) * *(double*)((uint8*)V$1 + 24ll))) + (*(double*)((uint8*)THIS$1 + 96ll) * *(double*)((uint8*)V$1 + 16ll)));
 label$1926:;
}

double _ZN5PLANE11GETDISTANCEER7VECTOR3( struct $5PLANE* THIS$1, struct $7VECTOR3* V$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1927:;
 fb$result$1 = (((*(double*)((uint8*)THIS$1 + 88ll) * *(double*)((uint8*)V$1 + 16ll)) + (*(double*)((uint8*)THIS$1 + 96ll) * *(double*)((uint8*)V$1 + 24ll))) + (*(double*)((uint8*)THIS$1 + 96ll) * *(double*)((uint8*)V$1 + 16ll))) + *(double*)((uint8*)THIS$1 + 112ll);
 goto label$1928;
 label$1928:;
 return fb$result$1;
}

$10EPLANESIDE _ZN5PLANE7GETSIDEER7VECTOR3( struct $5PLANE* THIS$1, struct $7VECTOR3* V$1 )
{
 $10EPLANESIDE fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1929:;
 double DIST$1;
 DIST$1 = (((*(double*)((uint8*)THIS$1 + 88ll) * *(double*)((uint8*)V$1 + 16ll)) + (*(double*)((uint8*)THIS$1 + 96ll) * *(double*)((uint8*)V$1 + 24ll))) + (*(double*)((uint8*)THIS$1 + 96ll) * *(double*)((uint8*)V$1 + 16ll))) + *(double*)((uint8*)THIS$1 + 112ll);
 if( DIST$1 != 0x0p+0 ) goto label$1932;
 {
  fb$result$1 = 0ll;
  goto label$1930;
  label$1932:;
 }
 if( DIST$1 >= 0x0p+0 ) goto label$1934;
 {
  fb$result$1 = 2ll;
  goto label$1930;
  label$1934:;
 }
 fb$result$1 = 1ll;
 goto label$1930;
 label$1930:;
 return fb$result$1;
}

int8 _ZN5PLANE9INTERSECTER7VECTOR3S1_Rd( struct $5PLANE* THIS$1, struct $7VECTOR3* RAYORIGIN$1, struct $7VECTOR3* RAYDIRECTION$1, double* RESULTT$1 )
{
 int8 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 1ll );
 label$1935:;
 double DENOM$1;
 DENOM$1 = ((*(double*)((uint8*)THIS$1 + 88ll) * *(double*)((uint8*)RAYDIRECTION$1 + 16ll)) + (*(double*)((uint8*)THIS$1 + 96ll) * *(double*)((uint8*)RAYDIRECTION$1 + 24ll))) + (*(double*)((uint8*)THIS$1 + 96ll) * *(double*)((uint8*)RAYDIRECTION$1 + 16ll));
 double vr$12 = fabs( DENOM$1 );
 if( vr$12 >= 0x1.0624DD2F1A9FCp-10 ) goto label$1938;
 {
  fb$result$1 = (int8)0;
  goto label$1936;
  label$1938:;
 }
 struct $7VECTOR3 PLANECENTER$1;
 _ZN7VECTOR3C1Eddd( &PLANECENTER$1, *(double*)((uint8*)THIS$1 + 88ll) * *(double*)((uint8*)THIS$1 + 112ll), *(double*)((uint8*)THIS$1 + 96ll) * *(double*)((uint8*)THIS$1 + 112ll), *(double*)((uint8*)THIS$1 + 104ll) * *(double*)((uint8*)THIS$1 + 112ll) );
 *(double*)((uint8*)&PLANECENTER$1 + 16ll) = *(double*)((uint8*)&PLANECENTER$1 + 16ll) - *(double*)((uint8*)RAYORIGIN$1 + 16ll);
 *(double*)((uint8*)&PLANECENTER$1 + 24ll) = *(double*)((uint8*)&PLANECENTER$1 + 24ll) - *(double*)((uint8*)RAYORIGIN$1 + 24ll);
 *(double*)((uint8*)&PLANECENTER$1 + 32ll) = *(double*)((uint8*)&PLANECENTER$1 + 32ll) - *(double*)((uint8*)RAYORIGIN$1 + 32ll);
 double T$1;
 T$1 = (((*(double*)((uint8*)&PLANECENTER$1 + 16ll) * *(double*)((uint8*)THIS$1 + 88ll)) + (*(double*)((uint8*)&PLANECENTER$1 + 24ll) * *(double*)((uint8*)THIS$1 + 96ll))) + (*(double*)((uint8*)&PLANECENTER$1 + 32ll) * *(double*)((uint8*)THIS$1 + 104ll))) / DENOM$1;
 if( T$1 >= 0x1.0624DD2F1A9FCp-10 ) goto label$1940;
 {
  fb$result$1 = (int8)0;
  goto label$1936;
  label$1940:;
 }
 *RESULTT$1 = T$1;
 fb$result$1 = (int8)-1;
 goto label$1936;
 label$1936:;
 return fb$result$1;
}

struct $7VECTOR2* _Zv13sinR7VECTOR2( struct $7VECTOR2* tmp$1634$1, struct $7VECTOR2* V$1 )
{
 label$1941:;
 float vr$2 = sinf( (float)*(double*)((uint8*)V$1 + 8ll) );
 float vr$6 = sinf( (float)*(double*)V$1 );
 _ZN7VECTOR2C1Edd( tmp$1634$1, (double)vr$6, (double)vr$2 );
 goto label$1942;
 label$1942:;
 return tmp$1634$1;
}

struct $7VECTOR3* _Zv13sinR7VECTOR3( struct $7VECTOR3* tmp$1636$1, struct $7VECTOR3* V$1 )
{
 label$1943:;
 float vr$2 = sinf( (float)*(double*)((uint8*)V$1 + 32ll) );
 float vr$6 = sinf( (float)*(double*)((uint8*)V$1 + 24ll) );
 float vr$10 = sinf( (float)*(double*)((uint8*)V$1 + 16ll) );
 _ZN7VECTOR3C1Eddd( tmp$1636$1, (double)vr$10, (double)vr$6, (double)vr$2 );
 goto label$1944;
 label$1944:;
 return tmp$1636$1;
}

struct $7VECTOR4* _Zv13sinR7VECTOR4( struct $7VECTOR4* tmp$1638$1, struct $7VECTOR4* V$1 )
{
 label$1945:;
 float vr$2 = sinf( (float)*(double*)((uint8*)V$1 + 64ll) );
 float vr$6 = sinf( (float)*(double*)((uint8*)V$1 + 56ll) );
 float vr$10 = sinf( (float)*(double*)((uint8*)V$1 + 48ll) );
 float vr$14 = sinf( (float)*(double*)((uint8*)V$1 + 40ll) );
 _ZN7VECTOR4C1Edddd( tmp$1638$1, (double)vr$14, (double)vr$10, (double)vr$6, (double)vr$2 );
 goto label$1946;
 label$1946:;
 return tmp$1638$1;
}

struct $7VECTOR2* _Zv13cosR7VECTOR2( struct $7VECTOR2* tmp$1640$1, struct $7VECTOR2* V$1 )
{
 label$1947:;
 float vr$2 = cosf( (float)*(double*)((uint8*)V$1 + 8ll) );
 float vr$6 = cosf( (float)*(double*)V$1 );
 _ZN7VECTOR2C1Edd( tmp$1640$1, (double)vr$6, (double)vr$2 );
 goto label$1948;
 label$1948:;
 return tmp$1640$1;
}

struct $7VECTOR3* _Zv13cosR7VECTOR3( struct $7VECTOR3* tmp$1642$1, struct $7VECTOR3* V$1 )
{
 label$1949:;
 float vr$2 = cosf( (float)*(double*)((uint8*)V$1 + 32ll) );
 float vr$6 = cosf( (float)*(double*)((uint8*)V$1 + 24ll) );
 float vr$10 = cosf( (float)*(double*)((uint8*)V$1 + 16ll) );
 _ZN7VECTOR3C1Eddd( tmp$1642$1, (double)vr$10, (double)vr$6, (double)vr$2 );
 goto label$1950;
 label$1950:;
 return tmp$1642$1;
}

struct $7VECTOR4* _Zv13cosR7VECTOR4( struct $7VECTOR4* tmp$1644$1, struct $7VECTOR4* V$1 )
{
 label$1951:;
 float vr$2 = cosf( (float)*(double*)((uint8*)V$1 + 64ll) );
 float vr$6 = cosf( (float)*(double*)((uint8*)V$1 + 56ll) );
 float vr$10 = cosf( (float)*(double*)((uint8*)V$1 + 48ll) );
 float vr$14 = cosf( (float)*(double*)((uint8*)V$1 + 40ll) );
 _ZN7VECTOR4C1Edddd( tmp$1644$1, (double)vr$14, (double)vr$10, (double)vr$6, (double)vr$2 );
 goto label$1952;
 label$1952:;
 return tmp$1644$1;
}

struct $7VECTOR2* _Zv13tanR7VECTOR2( struct $7VECTOR2* tmp$1646$1, struct $7VECTOR2* V$1 )
{
 label$1953:;
 float vr$2 = tanf( (float)*(double*)((uint8*)V$1 + 8ll) );
 float vr$6 = tanf( (float)*(double*)V$1 );
 _ZN7VECTOR2C1Edd( tmp$1646$1, (double)vr$6, (double)vr$2 );
 goto label$1954;
 label$1954:;
 return tmp$1646$1;
}

struct $7VECTOR3* _Zv13tanR7VECTOR3( struct $7VECTOR3* tmp$1648$1, struct $7VECTOR3* V$1 )
{
 label$1955:;
 float vr$2 = tanf( (float)*(double*)((uint8*)V$1 + 32ll) );
 float vr$8 = tanf( (float)*(double*)((uint8*)V$1 + 16ll) );
 _ZN7VECTOR3C1Eddd( tmp$1648$1, (double)vr$8, __builtin_tan( *(double*)((uint8*)V$1 + 24ll) ), (double)vr$2 );
 goto label$1956;
 label$1956:;
 return tmp$1648$1;
}

struct $7VECTOR4* _Zv13tanR7VECTOR4( struct $7VECTOR4* tmp$1650$1, struct $7VECTOR4* V$1 )
{
 label$1957:;
 float vr$2 = tanf( (float)*(double*)((uint8*)V$1 + 64ll) );
 float vr$6 = tanf( (float)*(double*)((uint8*)V$1 + 56ll) );
 float vr$10 = tanf( (float)*(double*)((uint8*)V$1 + 48ll) );
 float vr$14 = tanf( (float)*(double*)((uint8*)V$1 + 40ll) );
 _ZN7VECTOR4C1Edddd( tmp$1650$1, (double)vr$14, (double)vr$10, (double)vr$6, (double)vr$2 );
 goto label$1958;
 label$1958:;
 return tmp$1650$1;
}

struct $7VECTOR2* _Zv14asinR7VECTOR2( struct $7VECTOR2* tmp$1652$1, struct $7VECTOR2* V$1 )
{
 label$1959:;
 float vr$2 = asinf( (float)*(double*)((uint8*)V$1 + 8ll) );
 float vr$6 = asinf( (float)*(double*)V$1 );
 _ZN7VECTOR2C1Edd( tmp$1652$1, (double)vr$6, (double)vr$2 );
 goto label$1960;
 label$1960:;
 return tmp$1652$1;
}

struct $7VECTOR3* _Zv14asinR7VECTOR3( struct $7VECTOR3* tmp$1654$1, struct $7VECTOR3* V$1 )
{
 label$1961:;
 float vr$2 = asinf( (float)*(double*)((uint8*)V$1 + 32ll) );
 float vr$6 = asinf( (float)*(double*)((uint8*)V$1 + 24ll) );
 float vr$10 = asinf( (float)*(double*)((uint8*)V$1 + 16ll) );
 _ZN7VECTOR3C1Eddd( tmp$1654$1, (double)vr$10, (double)vr$6, (double)vr$2 );
 goto label$1962;
 label$1962:;
 return tmp$1654$1;
}

struct $7VECTOR4* _Zv14asinR7VECTOR4( struct $7VECTOR4* tmp$1656$1, struct $7VECTOR4* V$1 )
{
 label$1963:;
 float vr$2 = asinf( (float)*(double*)((uint8*)V$1 + 64ll) );
 float vr$6 = asinf( (float)*(double*)((uint8*)V$1 + 56ll) );
 float vr$10 = asinf( (float)*(double*)((uint8*)V$1 + 48ll) );
 float vr$14 = asinf( (float)*(double*)((uint8*)V$1 + 40ll) );
 _ZN7VECTOR4C1Edddd( tmp$1656$1, (double)vr$14, (double)vr$10, (double)vr$6, (double)vr$2 );
 goto label$1964;
 label$1964:;
 return tmp$1656$1;
}

struct $7VECTOR2* _Zv14acosR7VECTOR2( struct $7VECTOR2* tmp$1658$1, struct $7VECTOR2* V$1 )
{
 label$1965:;
 float vr$2 = acosf( (float)*(double*)((uint8*)V$1 + 8ll) );
 float vr$6 = acosf( (float)*(double*)V$1 );
 _ZN7VECTOR2C1Edd( tmp$1658$1, (double)vr$6, (double)vr$2 );
 goto label$1966;
 label$1966:;
 return tmp$1658$1;
}

struct $7VECTOR3* _Zv14acosR7VECTOR3( struct $7VECTOR3* tmp$1660$1, struct $7VECTOR3* V$1 )
{
 label$1967:;
 float vr$2 = acosf( (float)*(double*)((uint8*)V$1 + 32ll) );
 float vr$6 = acosf( (float)*(double*)((uint8*)V$1 + 24ll) );
 float vr$10 = acosf( (float)*(double*)((uint8*)V$1 + 16ll) );
 _ZN7VECTOR3C1Eddd( tmp$1660$1, (double)vr$10, (double)vr$6, (double)vr$2 );
 goto label$1968;
 label$1968:;
 return tmp$1660$1;
}

struct $7VECTOR4* _Zv14acosR7VECTOR4( struct $7VECTOR4* tmp$1662$1, struct $7VECTOR4* V$1 )
{
 label$1969:;
 float vr$2 = acosf( (float)*(double*)((uint8*)V$1 + 64ll) );
 float vr$6 = acosf( (float)*(double*)((uint8*)V$1 + 56ll) );
 float vr$10 = acosf( (float)*(double*)((uint8*)V$1 + 48ll) );
 float vr$14 = acosf( (float)*(double*)((uint8*)V$1 + 40ll) );
 _ZN7VECTOR4C1Edddd( tmp$1662$1, (double)vr$14, (double)vr$10, (double)vr$6, (double)vr$2 );
 goto label$1970;
 label$1970:;
 return tmp$1662$1;
}

struct $7VECTOR2* _Zv13absRK7VECTOR2( struct $7VECTOR2* tmp$1664$1, struct $7VECTOR2* V$1 )
{
 double TMP$1666$1;
 double TMP$1667$1;
 label$1971:;
 if( *(double*)((uint8*)V$1 + 8ll) >= 0x0p+0 ) goto label$1974;
 TMP$1667$1 = -(*(double*)((uint8*)V$1 + 8ll));
 goto label$1975;
 label$1974:;
 TMP$1667$1 = *(double*)((uint8*)V$1 + 8ll);
 label$1975:;
 if( *(double*)V$1 >= 0x0p+0 ) goto label$1973;
 TMP$1666$1 = -(*(double*)V$1);
 goto label$1976;
 label$1973:;
 TMP$1666$1 = *(double*)V$1;
 label$1976:;
 _ZN7VECTOR2C1Edd( tmp$1664$1, TMP$1666$1, TMP$1667$1 );
 goto label$1972;
 label$1972:;
 return tmp$1664$1;
}

struct $7VECTOR3* _Zv13absRK7VECTOR3( struct $7VECTOR3* tmp$1668$1, struct $7VECTOR3* V$1 )
{
 double TMP$1670$1;
 double TMP$1671$1;
 double TMP$1672$1;
 label$1977:;
 if( *(double*)((uint8*)V$1 + 32ll) >= 0x0p+0 ) goto label$1981;
 TMP$1672$1 = -(*(double*)((uint8*)V$1 + 32ll));
 goto label$1982;
 label$1981:;
 TMP$1672$1 = *(double*)((uint8*)V$1 + 32ll);
 label$1982:;
 if( *(double*)((uint8*)V$1 + 24ll) >= 0x0p+0 ) goto label$1980;
 TMP$1671$1 = -(*(double*)((uint8*)V$1 + 24ll));
 goto label$1983;
 label$1980:;
 TMP$1671$1 = *(double*)((uint8*)V$1 + 24ll);
 label$1983:;
 if( *(double*)((uint8*)V$1 + 16ll) >= 0x0p+0 ) goto label$1979;
 TMP$1670$1 = -(*(double*)((uint8*)V$1 + 16ll));
 goto label$1984;
 label$1979:;
 TMP$1670$1 = *(double*)((uint8*)V$1 + 16ll);
 label$1984:;
 _ZN7VECTOR3C1Eddd( tmp$1668$1, TMP$1670$1, TMP$1671$1, TMP$1672$1 );
 goto label$1978;
 label$1978:;
 return tmp$1668$1;
}

struct $7VECTOR4* _Zv13absRK7VECTOR4( struct $7VECTOR4* tmp$1673$1, struct $7VECTOR4* V$1 )
{
 double TMP$1675$1;
 double TMP$1676$1;
 double TMP$1677$1;
 double TMP$1678$1;
 label$1985:;
 if( *(double*)((uint8*)V$1 + 64ll) >= 0x0p+0 ) goto label$1990;
 TMP$1678$1 = -(*(double*)((uint8*)V$1 + 64ll));
 goto label$1991;
 label$1990:;
 TMP$1678$1 = *(double*)((uint8*)V$1 + 64ll);
 label$1991:;
 if( *(double*)((uint8*)V$1 + 56ll) >= 0x0p+0 ) goto label$1989;
 TMP$1677$1 = -(*(double*)((uint8*)V$1 + 56ll));
 goto label$1992;
 label$1989:;
 TMP$1677$1 = *(double*)((uint8*)V$1 + 56ll);
 label$1992:;
 if( *(double*)((uint8*)V$1 + 48ll) >= 0x0p+0 ) goto label$1988;
 TMP$1676$1 = -(*(double*)((uint8*)V$1 + 48ll));
 goto label$1993;
 label$1988:;
 TMP$1676$1 = *(double*)((uint8*)V$1 + 48ll);
 label$1993:;
 if( *(double*)((uint8*)V$1 + 40ll) >= 0x0p+0 ) goto label$1987;
 TMP$1675$1 = -(*(double*)((uint8*)V$1 + 40ll));
 goto label$1994;
 label$1987:;
 TMP$1675$1 = *(double*)((uint8*)V$1 + 40ll);
 label$1994:;
 _ZN7VECTOR4C1Edddd( tmp$1673$1, TMP$1675$1, TMP$1676$1, TMP$1677$1, TMP$1678$1 );
 goto label$1986;
 label$1986:;
 return tmp$1673$1;
}

void _ZN4MAT2C1Ed( struct $4MAT2* THIS$1, double D$1 )
{
 label$1999:;
 _ZN5PLANEC1Ev( (struct $5PLANE*)THIS$1 );
 *(double*)((uint8*)THIS$1 + 120ll) = D$1;
 *(double*)((uint8*)THIS$1 + 128ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 136ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 144ll) = D$1;
 label$2000:;
}

void _ZN4MAT2C1Edddd( struct $4MAT2* THIS$1, double A$1, double B$1, double C$1, double D$1 )
{
 label$2001:;
 _ZN5PLANEC1Ev( (struct $5PLANE*)THIS$1 );
 *(double*)((uint8*)THIS$1 + 120ll) = A$1;
 *(double*)((uint8*)THIS$1 + 128ll) = B$1;
 *(double*)((uint8*)THIS$1 + 136ll) = C$1;
 *(double*)((uint8*)THIS$1 + 144ll) = D$1;
 label$2002:;
}

FBSTRING* _ZN4MAT2cv8FBSTRINGEv( struct $4MAT2* THIS$1 )
{
 FBSTRING TMP$1680$1;
 FBSTRING TMP$1681$1;
 FBSTRING TMP$1682$1;
 FBSTRING TMP$1683$1;
 FBSTRING TMP$1684$1;
 FBSTRING TMP$1685$1;
 FBSTRING TMP$1686$1;
 FBSTRING TMP$1687$1;
 FBSTRING fb$result$1;
 __builtin_memset( &fb$result$1, 0, 24ll );
 label$2003:;
 FBSTRING* vr$2 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 144ll) );
 FBSTRING* vr$4 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 128ll) );
 FBSTRING* vr$6 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 136ll) );
 FBSTRING* vr$8 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 120ll) );
 __builtin_memset( &TMP$1680$1, 0, 24ll );
 FBSTRING* vr$11 = fb_StrConcat( &TMP$1680$1, (void*)"(", 2ll, (void*)vr$8, -1ll );
 __builtin_memset( &TMP$1681$1, 0, 24ll );
 FBSTRING* vr$14 = fb_StrConcat( &TMP$1681$1, (void*)vr$11, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1682$1, 0, 24ll );
 FBSTRING* vr$17 = fb_StrConcat( &TMP$1682$1, (void*)vr$14, -1ll, (void*)vr$6, -1ll );
 __builtin_memset( &TMP$1683$1, 0, 24ll );
 FBSTRING* vr$20 = fb_StrConcat( &TMP$1683$1, (void*)vr$17, -1ll, (void*)"), (", 5ll );
 __builtin_memset( &TMP$1684$1, 0, 24ll );
 FBSTRING* vr$23 = fb_StrConcat( &TMP$1684$1, (void*)vr$20, -1ll, (void*)vr$4, -1ll );
 __builtin_memset( &TMP$1685$1, 0, 24ll );
 FBSTRING* vr$26 = fb_StrConcat( &TMP$1685$1, (void*)vr$23, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1686$1, 0, 24ll );
 FBSTRING* vr$29 = fb_StrConcat( &TMP$1686$1, (void*)vr$26, -1ll, (void*)vr$2, -1ll );
 __builtin_memset( &TMP$1687$1, 0, 24ll );
 FBSTRING* vr$32 = fb_StrConcat( &TMP$1687$1, (void*)vr$29, -1ll, (void*)")", 2ll );
 fb_StrInit( (void*)&fb$result$1, -1ll, (void*)vr$32, -1ll, 0 );
 goto label$2004;
 label$2004:;
 FBSTRING* vr$35 = fb_StrAllocTempResult( (FBSTRING*)&fb$result$1 );
 return vr$35;
}

struct $7VECTOR2* _ZmlR4MAT2R7VECTOR2( struct $7VECTOR2* tmp$1688$1, struct $4MAT2* L$1, struct $7VECTOR2* R$1 )
{
 label$2005:;
 _ZN7VECTOR2C1Edd( tmp$1688$1, (*(double*)((uint8*)L$1 + 120ll) * *(double*)R$1) + (*(double*)((uint8*)L$1 + 136ll) * *(double*)((uint8*)R$1 + 8ll)), (*(double*)((uint8*)L$1 + 128ll) * *(double*)R$1) + (*(double*)((uint8*)L$1 + 144ll) * *(double*)((uint8*)R$1 + 8ll)) );
 goto label$2006;
 label$2006:;
 return tmp$1688$1;
}

struct $7VECTOR2* _ZmlR7VECTOR2R4MAT2( struct $7VECTOR2* tmp$1690$1, struct $7VECTOR2* R$1, struct $4MAT2* L$1 )
{
 label$2007:;
 _ZN7VECTOR2C1Edd( tmp$1690$1, (*(double*)((uint8*)L$1 + 120ll) * *(double*)R$1) + (*(double*)((uint8*)L$1 + 128ll) * *(double*)((uint8*)R$1 + 8ll)), (*(double*)((uint8*)L$1 + 136ll) * *(double*)R$1) + (*(double*)((uint8*)L$1 + 144ll) * *(double*)((uint8*)R$1 + 8ll)) );
 goto label$2008;
 label$2008:;
 return tmp$1690$1;
}

struct $4MAT2 _ZmlR4MAT2S0_( struct $4MAT2* L$1, struct $4MAT2* R$1 )
{
 struct $4MAT2 fb$result$1;
 label$2009:;
 _ZN4MAT2C1Edddd( &fb$result$1, (*(double*)((uint8*)L$1 + 120ll) * *(double*)((uint8*)R$1 + 120ll)) + (*(double*)((uint8*)L$1 + 136ll) * *(double*)((uint8*)R$1 + 128ll)), (*(double*)((uint8*)L$1 + 128ll) * *(double*)((uint8*)R$1 + 120ll)) + (*(double*)((uint8*)L$1 + 144ll) * *(double*)((uint8*)R$1 + 128ll)), (*(double*)((uint8*)L$1 + 120ll) * *(double*)((uint8*)R$1 + 128ll)) + (*(double*)((uint8*)L$1 + 136ll) * *(double*)((uint8*)R$1 + 144ll)), (*(double*)((uint8*)L$1 + 128ll) * *(double*)((uint8*)R$1 + 136ll)) + (*(double*)((uint8*)L$1 + 144ll) * *(double*)((uint8*)R$1 + 144ll)) );
 goto label$2010;
 label$2010:;
 return fb$result$1;
}

void _ZN4MAT3C1Ed( struct $4MAT3* THIS$1, double D$1 )
{
 label$2015:;
 _ZN4MAT2C1Ed( (struct $4MAT2*)THIS$1, 0x1.p+0 );
 *(double*)((uint8*)THIS$1 + 152ll) = D$1;
 *(double*)((uint8*)THIS$1 + 160ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 168ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 176ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 184ll) = D$1;
 *(double*)((uint8*)THIS$1 + 192ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 200ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 208ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 216ll) = D$1;
 label$2016:;
}

void _ZN4MAT3C1Eddddddddd( struct $4MAT3* THIS$1, double A$1, double B$1, double C$1, double D$1, double E$1, double F$1, double G$1, double H$1, double J$1 )
{
 label$2017:;
 _ZN4MAT2C1Ed( (struct $4MAT2*)THIS$1, 0x1.p+0 );
 *(double*)((uint8*)THIS$1 + 152ll) = A$1;
 *(double*)((uint8*)THIS$1 + 160ll) = B$1;
 *(double*)((uint8*)THIS$1 + 168ll) = C$1;
 *(double*)((uint8*)THIS$1 + 176ll) = D$1;
 *(double*)((uint8*)THIS$1 + 184ll) = E$1;
 *(double*)((uint8*)THIS$1 + 192ll) = F$1;
 *(double*)((uint8*)THIS$1 + 200ll) = G$1;
 *(double*)((uint8*)THIS$1 + 208ll) = H$1;
 *(double*)((uint8*)THIS$1 + 216ll) = J$1;
 label$2018:;
}

void _ZN4MAT3C1ER7VECTOR3S1_S1_( struct $4MAT3* THIS$1, struct $7VECTOR3* A$1, struct $7VECTOR3* B$1, struct $7VECTOR3* C$1 )
{
 label$2019:;
 _ZN4MAT2C1Ed( (struct $4MAT2*)THIS$1, 0x1.p+0 );
 *(double*)((uint8*)THIS$1 + 152ll) = *(double*)((uint8*)A$1 + 16ll);
 *(double*)((uint8*)THIS$1 + 160ll) = *(double*)((uint8*)A$1 + 24ll);
 *(double*)((uint8*)THIS$1 + 168ll) = *(double*)((uint8*)A$1 + 32ll);
 *(double*)((uint8*)THIS$1 + 176ll) = *(double*)((uint8*)B$1 + 16ll);
 *(double*)((uint8*)THIS$1 + 184ll) = *(double*)((uint8*)B$1 + 24ll);
 *(double*)((uint8*)THIS$1 + 192ll) = *(double*)((uint8*)B$1 + 32ll);
 *(double*)((uint8*)THIS$1 + 200ll) = *(double*)((uint8*)C$1 + 16ll);
 *(double*)((uint8*)THIS$1 + 208ll) = *(double*)((uint8*)C$1 + 24ll);
 *(double*)((uint8*)THIS$1 + 216ll) = *(double*)((uint8*)C$1 + 32ll);
 label$2020:;
}

FBSTRING* _ZN4MAT3cv8FBSTRINGEv( struct $4MAT3* THIS$1 )
{
 FBSTRING TMP$1693$1;
 FBSTRING TMP$1694$1;
 FBSTRING TMP$1695$1;
 FBSTRING TMP$1696$1;
 FBSTRING TMP$1697$1;
 FBSTRING TMP$1698$1;
 FBSTRING TMP$1699$1;
 FBSTRING TMP$1700$1;
 FBSTRING TMP$1701$1;
 FBSTRING TMP$1702$1;
 FBSTRING TMP$1703$1;
 FBSTRING TMP$1704$1;
 FBSTRING TMP$1705$1;
 FBSTRING TMP$1706$1;
 FBSTRING TMP$1707$1;
 FBSTRING TMP$1708$1;
 FBSTRING TMP$1709$1;
 FBSTRING TMP$1710$1;
 FBSTRING fb$result$1;
 __builtin_memset( &fb$result$1, 0, 24ll );
 label$2021:;
 FBSTRING* vr$2 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 216ll) );
 FBSTRING* vr$4 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 192ll) );
 FBSTRING* vr$6 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 168ll) );
 FBSTRING* vr$8 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 208ll) );
 FBSTRING* vr$10 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 184ll) );
 FBSTRING* vr$12 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 160ll) );
 FBSTRING* vr$14 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 200ll) );
 FBSTRING* vr$16 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 176ll) );
 FBSTRING* vr$18 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 152ll) );
 __builtin_memset( &TMP$1693$1, 0, 24ll );
 FBSTRING* vr$21 = fb_StrConcat( &TMP$1693$1, (void*)"(", 2ll, (void*)vr$18, -1ll );
 __builtin_memset( &TMP$1694$1, 0, 24ll );
 FBSTRING* vr$24 = fb_StrConcat( &TMP$1694$1, (void*)vr$21, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1695$1, 0, 24ll );
 FBSTRING* vr$27 = fb_StrConcat( &TMP$1695$1, (void*)vr$24, -1ll, (void*)vr$16, -1ll );
 __builtin_memset( &TMP$1696$1, 0, 24ll );
 FBSTRING* vr$30 = fb_StrConcat( &TMP$1696$1, (void*)vr$27, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1697$1, 0, 24ll );
 FBSTRING* vr$33 = fb_StrConcat( &TMP$1697$1, (void*)vr$30, -1ll, (void*)vr$14, -1ll );
 __builtin_memset( &TMP$1698$1, 0, 24ll );
 FBSTRING* vr$36 = fb_StrConcat( &TMP$1698$1, (void*)vr$33, -1ll, (void*)"), (", 5ll );
 __builtin_memset( &TMP$1699$1, 0, 24ll );
 FBSTRING* vr$39 = fb_StrConcat( &TMP$1699$1, (void*)vr$36, -1ll, (void*)vr$12, -1ll );
 __builtin_memset( &TMP$1700$1, 0, 24ll );
 FBSTRING* vr$42 = fb_StrConcat( &TMP$1700$1, (void*)vr$39, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1701$1, 0, 24ll );
 FBSTRING* vr$45 = fb_StrConcat( &TMP$1701$1, (void*)vr$42, -1ll, (void*)vr$10, -1ll );
 __builtin_memset( &TMP$1702$1, 0, 24ll );
 FBSTRING* vr$48 = fb_StrConcat( &TMP$1702$1, (void*)vr$45, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1703$1, 0, 24ll );
 FBSTRING* vr$51 = fb_StrConcat( &TMP$1703$1, (void*)vr$48, -1ll, (void*)vr$8, -1ll );
 __builtin_memset( &TMP$1704$1, 0, 24ll );
 FBSTRING* vr$54 = fb_StrConcat( &TMP$1704$1, (void*)vr$51, -1ll, (void*)"), (", 5ll );
 __builtin_memset( &TMP$1705$1, 0, 24ll );
 FBSTRING* vr$57 = fb_StrConcat( &TMP$1705$1, (void*)vr$54, -1ll, (void*)vr$6, -1ll );
 __builtin_memset( &TMP$1706$1, 0, 24ll );
 FBSTRING* vr$60 = fb_StrConcat( &TMP$1706$1, (void*)vr$57, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1707$1, 0, 24ll );
 FBSTRING* vr$63 = fb_StrConcat( &TMP$1707$1, (void*)vr$60, -1ll, (void*)vr$4, -1ll );
 __builtin_memset( &TMP$1708$1, 0, 24ll );
 FBSTRING* vr$66 = fb_StrConcat( &TMP$1708$1, (void*)vr$63, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1709$1, 0, 24ll );
 FBSTRING* vr$69 = fb_StrConcat( &TMP$1709$1, (void*)vr$66, -1ll, (void*)vr$2, -1ll );
 __builtin_memset( &TMP$1710$1, 0, 24ll );
 FBSTRING* vr$72 = fb_StrConcat( &TMP$1710$1, (void*)vr$69, -1ll, (void*)")", 2ll );
 fb_StrInit( (void*)&fb$result$1, -1ll, (void*)vr$72, -1ll, 0 );
 goto label$2022;
 label$2022:;
 FBSTRING* vr$75 = fb_StrAllocTempResult( (FBSTRING*)&fb$result$1 );
 return vr$75;
}

void _ZN4MAT313SETZROTATIONDEd( struct $4MAT3* THIS$1, double DEG$1 )
{
 label$2023:;
 _ZN4MAT313SETZROTATIONREd( THIS$1, (DEG$1 * 0x1.921FB54442D18p+1) / 0x1.68p+7 );
 label$2024:;
}

void _ZN4MAT313SETZROTATIONREd( struct $4MAT3* THIS$1, double RAD$1 )
{
 label$2025:;
 double CO$1;
 float vr$1 = cosf( (float)RAD$1 );
 CO$1 = (double)vr$1;
 double SI$1;
 float vr$4 = sinf( (float)RAD$1 );
 SI$1 = (double)vr$4;
 *(double*)((uint8*)THIS$1 + 152ll) = CO$1;
 *(double*)((uint8*)THIS$1 + 160ll) = SI$1;
 *(double*)((uint8*)THIS$1 + 168ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 176ll) = -SI$1;
 *(double*)((uint8*)THIS$1 + 184ll) = CO$1;
 *(double*)((uint8*)THIS$1 + 192ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 200ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 208ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 216ll) = 0x1.p+0;
 label$2026:;
}

void _ZN4MAT312SETROTATIONDER7VECTOR3d( struct $4MAT3* THIS$1, struct $7VECTOR3* AXIS$1, double DEG$1 )
{
 label$2027:;
 _ZN4MAT312SETROTATIONRER7VECTOR3d( THIS$1, AXIS$1, (DEG$1 * 0x1.921FB54442D18p+1) / 0x1.68p+7 );
 label$2028:;
}

void _ZN4MAT312SETROTATIONRER7VECTOR3d( struct $4MAT3* THIS$1, struct $7VECTOR3* AXIS$1, double RAD$1 )
{
 label$2029:;
 double CO$1;
 float vr$1 = cosf( (float)RAD$1 );
 CO$1 = (double)vr$1;
 double SI$1;
 float vr$4 = sinf( (float)RAD$1 );
 SI$1 = (double)vr$4;
 double OC$1;
 OC$1 = 0x1.p+0 - CO$1;
 *(double*)((uint8*)THIS$1 + 152ll) = ((OC$1 * *(double*)((uint8*)AXIS$1 + 16ll)) * *(double*)((uint8*)AXIS$1 + 16ll)) + CO$1;
 *(double*)((uint8*)THIS$1 + 160ll) = ((OC$1 * *(double*)((uint8*)AXIS$1 + 16ll)) * *(double*)((uint8*)AXIS$1 + 24ll)) - (*(double*)((uint8*)AXIS$1 + 32ll) * SI$1);
 *(double*)((uint8*)THIS$1 + 168ll) = ((OC$1 * *(double*)((uint8*)AXIS$1 + 32ll)) * *(double*)((uint8*)AXIS$1 + 16ll)) + (*(double*)((uint8*)AXIS$1 + 24ll) * SI$1);
 *(double*)((uint8*)THIS$1 + 176ll) = ((OC$1 * *(double*)((uint8*)AXIS$1 + 16ll)) * *(double*)((uint8*)AXIS$1 + 24ll)) + (*(double*)((uint8*)AXIS$1 + 32ll) * SI$1);
 *(double*)((uint8*)THIS$1 + 184ll) = ((OC$1 * *(double*)((uint8*)AXIS$1 + 24ll)) * *(double*)((uint8*)AXIS$1 + 24ll)) + CO$1;
 *(double*)((uint8*)THIS$1 + 192ll) = ((OC$1 * *(double*)((uint8*)AXIS$1 + 24ll)) * *(double*)((uint8*)AXIS$1 + 32ll)) - (*(double*)((uint8*)AXIS$1 + 16ll) * SI$1);
 *(double*)((uint8*)THIS$1 + 200ll) = ((OC$1 * *(double*)((uint8*)AXIS$1 + 32ll)) * *(double*)((uint8*)AXIS$1 + 16ll)) - (*(double*)((uint8*)AXIS$1 + 24ll) * SI$1);
 *(double*)((uint8*)THIS$1 + 208ll) = ((OC$1 * *(double*)((uint8*)AXIS$1 + 24ll)) * *(double*)((uint8*)AXIS$1 + 32ll)) + (*(double*)((uint8*)AXIS$1 + 16ll) * SI$1);
 *(double*)((uint8*)THIS$1 + 216ll) = ((OC$1 * *(double*)((uint8*)AXIS$1 + 32ll)) * *(double*)((uint8*)AXIS$1 + 32ll)) + CO$1;
 label$2030:;
}

void _ZN4MAT310SETSCALINGER7VECTOR2( struct $4MAT3* THIS$1, struct $7VECTOR2* SCALE$1 )
{
 label$2031:;
 _ZN4MAT310SETSCALINGEdd( THIS$1, *(double*)SCALE$1, *(double*)((uint8*)SCALE$1 + 8ll) );
 label$2032:;
}

void _ZN4MAT310SETSCALINGEd( struct $4MAT3* THIS$1, double SCALE$1 )
{
 label$2033:;
 _ZN4MAT310SETSCALINGEdd( THIS$1, SCALE$1, SCALE$1 );
 label$2034:;
}

void _ZN4MAT310SETSCALINGEdd( struct $4MAT3* THIS$1, double SCALEX$1, double SCALEY$1 )
{
 label$2035:;
 *(double*)((uint8*)THIS$1 + 152ll) = SCALEX$1;
 *(double*)((uint8*)THIS$1 + 160ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 168ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 176ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 184ll) = SCALEY$1;
 *(double*)((uint8*)THIS$1 + 192ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 200ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 208ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 216ll) = 0x1.p+0;
 label$2036:;
}

struct $7VECTOR3* _ZmlR4MAT3R7VECTOR3( struct $7VECTOR3* tmp$1711$1, struct $4MAT3* L$1, struct $7VECTOR3* R$1 )
{
 label$2037:;
 _ZN7VECTOR3C1Eddd( tmp$1711$1, ((*(double*)((uint8*)L$1 + 152ll) * *(double*)((uint8*)R$1 + 16ll)) + (*(double*)((uint8*)L$1 + 176ll) * *(double*)((uint8*)R$1 + 24ll))) + (*(double*)((uint8*)L$1 + 200ll) * *(double*)((uint8*)R$1 + 32ll)), ((*(double*)((uint8*)L$1 + 160ll) * *(double*)((uint8*)R$1 + 16ll)) + (*(double*)((uint8*)L$1 + 184ll) * *(double*)((uint8*)R$1 + 24ll))) + (*(double*)((uint8*)L$1 + 208ll) * *(double*)((uint8*)R$1 + 32ll)), ((*(double*)((uint8*)L$1 + 168ll) * *(double*)((uint8*)R$1 + 16ll)) + (*(double*)((uint8*)L$1 + 192ll) * *(double*)((uint8*)R$1 + 24ll))) + (*(double*)((uint8*)L$1 + 216ll) * *(double*)((uint8*)R$1 + 32ll)) );
 goto label$2038;
 label$2038:;
 return tmp$1711$1;
}

struct $7VECTOR3* _ZmlR7VECTOR3R4MAT3( struct $7VECTOR3* tmp$1713$1, struct $7VECTOR3* R$1, struct $4MAT3* L$1 )
{
 label$2039:;
 _ZN7VECTOR3C1Eddd( tmp$1713$1, ((*(double*)((uint8*)L$1 + 152ll) * *(double*)((uint8*)R$1 + 16ll)) + (*(double*)((uint8*)L$1 + 160ll) * *(double*)((uint8*)R$1 + 24ll))) + (*(double*)((uint8*)L$1 + 168ll) * *(double*)((uint8*)R$1 + 32ll)), ((*(double*)((uint8*)L$1 + 176ll) * *(double*)((uint8*)R$1 + 16ll)) + (*(double*)((uint8*)L$1 + 184ll) * *(double*)((uint8*)R$1 + 24ll))) + (*(double*)((uint8*)L$1 + 192ll) * *(double*)((uint8*)R$1 + 32ll)), ((*(double*)((uint8*)L$1 + 200ll) * *(double*)((uint8*)R$1 + 16ll)) + (*(double*)((uint8*)L$1 + 208ll) * *(double*)((uint8*)R$1 + 24ll))) + (*(double*)((uint8*)L$1 + 216ll) * *(double*)((uint8*)R$1 + 32ll)) );
 goto label$2040;
 label$2040:;
 return tmp$1713$1;
}

struct $4MAT3 _ZmlR4MAT3S0_( struct $4MAT3* L$1, struct $4MAT3* R$1 )
{
 struct $4MAT3 fb$result$1;
 label$2041:;
 _ZN4MAT3C1Eddddddddd( &fb$result$1, ((*(double*)((uint8*)L$1 + 152ll) * *(double*)((uint8*)R$1 + 152ll)) + (*(double*)((uint8*)L$1 + 176ll) * *(double*)((uint8*)R$1 + 160ll))) + (*(double*)((uint8*)L$1 + 200ll) * *(double*)((uint8*)R$1 + 168ll)), ((*(double*)((uint8*)L$1 + 160ll) * *(double*)((uint8*)R$1 + 152ll)) + (*(double*)((uint8*)L$1 + 184ll) * *(double*)((uint8*)R$1 + 160ll))) + (*(double*)((uint8*)L$1 + 208ll) * *(double*)((uint8*)R$1 + 168ll)), ((*(double*)((uint8*)L$1 + 168ll) * *(double*)((uint8*)R$1 + 152ll)) + (*(double*)((uint8*)L$1 + 192ll) * *(double*)((uint8*)R$1 + 160ll))) + (*(double*)((uint8*)L$1 + 216ll) * *(double*)((uint8*)R$1 + 168ll)), ((*(double*)((uint8*)L$1 + 152ll) * *(double*)((uint8*)R$1 + 176ll)) + (*(double*)((uint8*)L$1 + 176ll) * *(double*)((uint8*)R$1 + 184ll))) + (*(double*)((uint8*)L$1 + 200ll) * *(double*)((uint8*)R$1 + 192ll)), ((*(double*)((uint8*)L$1 + 160ll) * *(double*)((uint8*)R$1 + 176ll)) + (*(double*)((uint8*)L$1 + 184ll) * *(double*)((uint8*)R$1 + 184ll))) + (*(double*)((uint8*)L$1 + 208ll) * *(double*)((uint8*)R$1 + 192ll)), ((*(double*)((uint8*)L$1 + 168ll) * *(double*)((uint8*)R$1 + 176ll)) + (*(double*)((uint8*)L$1 + 192ll) * *(double*)((uint8*)R$1 + 184ll))) + (*(double*)((uint8*)L$1 + 216ll) * *(double*)((uint8*)R$1 + 192ll)), ((*(double*)((uint8*)L$1 + 152ll) * *(double*)((uint8*)R$1 + 200ll)) + (*(double*)((uint8*)L$1 + 176ll) * *(double*)((uint8*)R$1 + 208ll))) + (*(double*)((uint8*)L$1 + 200ll) * *(double*)((uint8*)R$1 + 216ll)), ((*(double*)((uint8*)L$1 + 160ll) * *(double*)((uint8*)R$1 + 200ll)) + (*(double*)((uint8*)L$1 + 184ll) * *(double*)((uint8*)R$1 + 208ll))) + (*(double*)((uint8*)L$1 + 208ll) * *(double*)((uint8*)R$1 + 216ll)), ((*(double*)((uint8*)L$1 + 168ll) * *(double*)((uint8*)R$1 + 200ll)) + (*(double*)((uint8*)L$1 + 192ll) * *(double*)((uint8*)R$1 + 208ll))) + (*(double*)((uint8*)L$1 + 216ll) * *(double*)((uint8*)R$1 + 216ll)) );
 goto label$2042;
 label$2042:;
 return fb$result$1;
}

void _ZN4MAT4C1Edddddddddddddddd( struct $4MAT4* THIS$1, double A$1, double B$1, double C$1, double D$1, double E$1, double F$1, double G$1, double H$1, double I$1, double J$1, double K$1, double L$1, double M$1, double N$1, double O$1, double P$1 )
{
 label$2047:;
 _ZN4MAT3C1Ed( (struct $4MAT3*)THIS$1, 0x1.p+0 );
 *(double*)((uint8*)THIS$1 + 224ll) = A$1;
 *(double*)((uint8*)THIS$1 + 232ll) = B$1;
 *(double*)((uint8*)THIS$1 + 240ll) = C$1;
 *(double*)((uint8*)THIS$1 + 248ll) = D$1;
 *(double*)((uint8*)THIS$1 + 256ll) = E$1;
 *(double*)((uint8*)THIS$1 + 264ll) = F$1;
 *(double*)((uint8*)THIS$1 + 272ll) = G$1;
 *(double*)((uint8*)THIS$1 + 280ll) = H$1;
 *(double*)((uint8*)THIS$1 + 288ll) = I$1;
 *(double*)((uint8*)THIS$1 + 296ll) = J$1;
 *(double*)((uint8*)THIS$1 + 304ll) = K$1;
 *(double*)((uint8*)THIS$1 + 312ll) = L$1;
 *(double*)((uint8*)THIS$1 + 320ll) = M$1;
 *(double*)((uint8*)THIS$1 + 328ll) = N$1;
 *(double*)((uint8*)THIS$1 + 336ll) = O$1;
 *(double*)((uint8*)THIS$1 + 344ll) = P$1;
 label$2048:;
}

void _ZN4MAT4C1Ed( struct $4MAT4* THIS$1, double D$1 )
{
 label$2049:;
 _ZN4MAT3C1Ed( (struct $4MAT3*)THIS$1, 0x1.p+0 );
 *(double*)((uint8*)THIS$1 + 224ll) = D$1;
 *(double*)((uint8*)THIS$1 + 232ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 240ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 248ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 256ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 264ll) = D$1;
 *(double*)((uint8*)THIS$1 + 272ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 280ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 288ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 296ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 304ll) = D$1;
 *(double*)((uint8*)THIS$1 + 312ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 320ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 328ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 336ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 344ll) = D$1;
 label$2050:;
}

FBSTRING* _ZN4MAT4cv8FBSTRINGEv( struct $4MAT4* THIS$1 )
{
 FBSTRING TMP$1716$1;
 FBSTRING TMP$1717$1;
 FBSTRING TMP$1718$1;
 FBSTRING TMP$1719$1;
 FBSTRING TMP$1720$1;
 FBSTRING TMP$1721$1;
 FBSTRING TMP$1722$1;
 FBSTRING TMP$1723$1;
 FBSTRING TMP$1724$1;
 FBSTRING TMP$1725$1;
 FBSTRING TMP$1726$1;
 FBSTRING TMP$1727$1;
 FBSTRING TMP$1728$1;
 FBSTRING TMP$1729$1;
 FBSTRING TMP$1730$1;
 FBSTRING TMP$1731$1;
 FBSTRING TMP$1732$1;
 FBSTRING TMP$1733$1;
 FBSTRING TMP$1734$1;
 FBSTRING TMP$1735$1;
 FBSTRING TMP$1736$1;
 FBSTRING TMP$1737$1;
 FBSTRING TMP$1738$1;
 FBSTRING TMP$1739$1;
 FBSTRING TMP$1740$1;
 FBSTRING TMP$1741$1;
 FBSTRING TMP$1742$1;
 FBSTRING TMP$1743$1;
 FBSTRING TMP$1744$1;
 FBSTRING TMP$1745$1;
 FBSTRING TMP$1746$1;
 FBSTRING TMP$1747$1;
 FBSTRING fb$result$1;
 __builtin_memset( &fb$result$1, 0, 24ll );
 label$2051:;
 FBSTRING* vr$2 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 344ll) );
 FBSTRING* vr$4 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 312ll) );
 FBSTRING* vr$6 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 280ll) );
 FBSTRING* vr$8 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 248ll) );
 FBSTRING* vr$10 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 336ll) );
 FBSTRING* vr$12 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 304ll) );
 FBSTRING* vr$14 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 272ll) );
 FBSTRING* vr$16 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 240ll) );
 FBSTRING* vr$18 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 328ll) );
 FBSTRING* vr$20 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 296ll) );
 FBSTRING* vr$22 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 264ll) );
 FBSTRING* vr$24 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 232ll) );
 FBSTRING* vr$26 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 320ll) );
 FBSTRING* vr$28 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 288ll) );
 FBSTRING* vr$30 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 256ll) );
 FBSTRING* vr$32 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 224ll) );
 __builtin_memset( &TMP$1716$1, 0, 24ll );
 FBSTRING* vr$35 = fb_StrConcat( &TMP$1716$1, (void*)"(", 2ll, (void*)vr$32, -1ll );
 __builtin_memset( &TMP$1717$1, 0, 24ll );
 FBSTRING* vr$38 = fb_StrConcat( &TMP$1717$1, (void*)vr$35, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1718$1, 0, 24ll );
 FBSTRING* vr$41 = fb_StrConcat( &TMP$1718$1, (void*)vr$38, -1ll, (void*)vr$30, -1ll );
 __builtin_memset( &TMP$1719$1, 0, 24ll );
 FBSTRING* vr$44 = fb_StrConcat( &TMP$1719$1, (void*)vr$41, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1720$1, 0, 24ll );
 FBSTRING* vr$47 = fb_StrConcat( &TMP$1720$1, (void*)vr$44, -1ll, (void*)vr$28, -1ll );
 __builtin_memset( &TMP$1721$1, 0, 24ll );
 FBSTRING* vr$50 = fb_StrConcat( &TMP$1721$1, (void*)vr$47, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1722$1, 0, 24ll );
 FBSTRING* vr$53 = fb_StrConcat( &TMP$1722$1, (void*)vr$50, -1ll, (void*)vr$26, -1ll );
 __builtin_memset( &TMP$1723$1, 0, 24ll );
 FBSTRING* vr$56 = fb_StrConcat( &TMP$1723$1, (void*)vr$53, -1ll, (void*)"), (", 5ll );
 __builtin_memset( &TMP$1724$1, 0, 24ll );
 FBSTRING* vr$59 = fb_StrConcat( &TMP$1724$1, (void*)vr$56, -1ll, (void*)vr$24, -1ll );
 __builtin_memset( &TMP$1725$1, 0, 24ll );
 FBSTRING* vr$62 = fb_StrConcat( &TMP$1725$1, (void*)vr$59, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1726$1, 0, 24ll );
 FBSTRING* vr$65 = fb_StrConcat( &TMP$1726$1, (void*)vr$62, -1ll, (void*)vr$22, -1ll );
 __builtin_memset( &TMP$1727$1, 0, 24ll );
 FBSTRING* vr$68 = fb_StrConcat( &TMP$1727$1, (void*)vr$65, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1728$1, 0, 24ll );
 FBSTRING* vr$71 = fb_StrConcat( &TMP$1728$1, (void*)vr$68, -1ll, (void*)vr$20, -1ll );
 __builtin_memset( &TMP$1729$1, 0, 24ll );
 FBSTRING* vr$74 = fb_StrConcat( &TMP$1729$1, (void*)vr$71, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1730$1, 0, 24ll );
 FBSTRING* vr$77 = fb_StrConcat( &TMP$1730$1, (void*)vr$74, -1ll, (void*)vr$18, -1ll );
 __builtin_memset( &TMP$1731$1, 0, 24ll );
 FBSTRING* vr$80 = fb_StrConcat( &TMP$1731$1, (void*)vr$77, -1ll, (void*)"), (", 5ll );
 __builtin_memset( &TMP$1732$1, 0, 24ll );
 FBSTRING* vr$83 = fb_StrConcat( &TMP$1732$1, (void*)vr$80, -1ll, (void*)vr$16, -1ll );
 __builtin_memset( &TMP$1733$1, 0, 24ll );
 FBSTRING* vr$86 = fb_StrConcat( &TMP$1733$1, (void*)vr$83, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1734$1, 0, 24ll );
 FBSTRING* vr$89 = fb_StrConcat( &TMP$1734$1, (void*)vr$86, -1ll, (void*)vr$14, -1ll );
 __builtin_memset( &TMP$1735$1, 0, 24ll );
 FBSTRING* vr$92 = fb_StrConcat( &TMP$1735$1, (void*)vr$89, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1736$1, 0, 24ll );
 FBSTRING* vr$95 = fb_StrConcat( &TMP$1736$1, (void*)vr$92, -1ll, (void*)vr$12, -1ll );
 __builtin_memset( &TMP$1737$1, 0, 24ll );
 FBSTRING* vr$98 = fb_StrConcat( &TMP$1737$1, (void*)vr$95, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1738$1, 0, 24ll );
 FBSTRING* vr$101 = fb_StrConcat( &TMP$1738$1, (void*)vr$98, -1ll, (void*)vr$10, -1ll );
 __builtin_memset( &TMP$1739$1, 0, 24ll );
 FBSTRING* vr$104 = fb_StrConcat( &TMP$1739$1, (void*)vr$101, -1ll, (void*)"), (", 5ll );
 __builtin_memset( &TMP$1740$1, 0, 24ll );
 FBSTRING* vr$107 = fb_StrConcat( &TMP$1740$1, (void*)vr$104, -1ll, (void*)vr$8, -1ll );
 __builtin_memset( &TMP$1741$1, 0, 24ll );
 FBSTRING* vr$110 = fb_StrConcat( &TMP$1741$1, (void*)vr$107, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1742$1, 0, 24ll );
 FBSTRING* vr$113 = fb_StrConcat( &TMP$1742$1, (void*)vr$110, -1ll, (void*)vr$6, -1ll );
 __builtin_memset( &TMP$1743$1, 0, 24ll );
 FBSTRING* vr$116 = fb_StrConcat( &TMP$1743$1, (void*)vr$113, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1744$1, 0, 24ll );
 FBSTRING* vr$119 = fb_StrConcat( &TMP$1744$1, (void*)vr$116, -1ll, (void*)vr$4, -1ll );
 __builtin_memset( &TMP$1745$1, 0, 24ll );
 FBSTRING* vr$122 = fb_StrConcat( &TMP$1745$1, (void*)vr$119, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1746$1, 0, 24ll );
 FBSTRING* vr$125 = fb_StrConcat( &TMP$1746$1, (void*)vr$122, -1ll, (void*)vr$2, -1ll );
 __builtin_memset( &TMP$1747$1, 0, 24ll );
 FBSTRING* vr$128 = fb_StrConcat( &TMP$1747$1, (void*)vr$125, -1ll, (void*)")", 2ll );
 fb_StrInit( (void*)&fb$result$1, -1ll, (void*)vr$128, -1ll, 0 );
 goto label$2052;
 label$2052:;
 FBSTRING* vr$131 = fb_StrAllocTempResult( (FBSTRING*)&fb$result$1 );
 return vr$131;
}

void _ZN4MAT413SETPROJECTIONEdddd( struct $4MAT4* THIS$1, double FOV$1, double ASPECTRATIO$1, double NEAR$1, double FAR$1 )
{
 label$2053:;
 double A$1;
 float vr$4 = tanf( (float)(((FOV$1 * 0x1.921FB54442D18p+1) / 0x1.68p+7) * 0x1.p-1) );
 A$1 = 0x1.p+0 / (double)vr$4;
 double B$1;
 B$1 = A$1 / ASPECTRATIO$1;
 double C$1;
 C$1 = (FAR$1 + NEAR$1) / (NEAR$1 - FAR$1);
 double D$1;
 D$1 = ((FAR$1 * NEAR$1) * 0x1.p+1) / (NEAR$1 - FAR$1);
 *(double*)((uint8*)THIS$1 + 224ll) = B$1;
 *(double*)((uint8*)THIS$1 + 232ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 240ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 248ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 256ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 264ll) = B$1;
 *(double*)((uint8*)THIS$1 + 272ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 280ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 288ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 296ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 304ll) = C$1;
 *(double*)((uint8*)THIS$1 + 312ll) = -0x1.p+0;
 *(double*)((uint8*)THIS$1 + 320ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 328ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 336ll) = D$1;
 *(double*)((uint8*)THIS$1 + 344ll) = 0x0p+0;
 label$2054:;
}

void _ZN4MAT410SETORTHO2DEdddd( struct $4MAT4* THIS$1, double X$1, double Y$1, double W$1, double H$1 )
{
 label$2055:;
 _ZN4MAT48SETORTHOEdddddd( THIS$1, X$1, X$1 + W$1, Y$1 + H$1, Y$1, 0x1.p+0, -0x1.p+0 );
 label$2056:;
}

void _ZN4MAT410SETORTHO2DEdddddd( struct $4MAT4* THIS$1, double X$1, double Y$1, double W$1, double H$1, double NEAR$1, double FAR$1 )
{
 label$2057:;
 _ZN4MAT48SETORTHOEdddddd( THIS$1, X$1, X$1 + W$1, Y$1, Y$1 + H$1, NEAR$1, FAR$1 );
 label$2058:;
}

void _ZN4MAT48SETORTHOEdddddd( struct $4MAT4* THIS$1, double LEFT_$1, double RIGHT_$1, double BOTTOM$1, double TOP$1, double NEAR$1, double FAR$1 )
{
 label$2059:;
 double X_ORTH$1;
 X_ORTH$1 = 0x1.p+1 / (RIGHT_$1 - LEFT_$1);
 double Y_ORTH$1;
 Y_ORTH$1 = 0x1.p+1 / (TOP$1 - BOTTOM$1);
 double Z_ORTH$1;
 Z_ORTH$1 = -0x1.p+1 / (FAR$1 - NEAR$1);
 double TX$1;
 TX$1 = -(RIGHT_$1 + LEFT_$1) / (RIGHT_$1 - LEFT_$1);
 double TY$1;
 TY$1 = -(TOP$1 + BOTTOM$1) / (TOP$1 - BOTTOM$1);
 double TZ$1;
 TZ$1 = -(FAR$1 + NEAR$1) / (FAR$1 - NEAR$1);
 *(double*)((uint8*)THIS$1 + 224ll) = X_ORTH$1;
 *(double*)((uint8*)THIS$1 + 232ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 240ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 248ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 256ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 264ll) = Y_ORTH$1;
 *(double*)((uint8*)THIS$1 + 272ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 280ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 288ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 296ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 304ll) = Z_ORTH$1;
 *(double*)((uint8*)THIS$1 + 312ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 320ll) = TX$1;
 *(double*)((uint8*)THIS$1 + 328ll) = TY$1;
 *(double*)((uint8*)THIS$1 + 336ll) = TZ$1;
 *(double*)((uint8*)THIS$1 + 344ll) = 0x1.p+0;
 label$2060:;
}

struct $7VECTOR4* _ZmlR4MAT4R7VECTOR4( struct $7VECTOR4* tmp$1748$1, struct $4MAT4* L$1, struct $7VECTOR4* R$1 )
{
 label$2061:;
 _ZN7VECTOR4C1Edddd( tmp$1748$1, (((*(double*)((uint8*)L$1 + 224ll) * *(double*)((uint8*)R$1 + 40ll)) + (*(double*)((uint8*)L$1 + 256ll) * *(double*)((uint8*)R$1 + 48ll))) + (*(double*)((uint8*)L$1 + 288ll) * *(double*)((uint8*)R$1 + 56ll))) + (*(double*)((uint8*)L$1 + 320ll) * *(double*)((uint8*)R$1 + 64ll)), (((*(double*)((uint8*)L$1 + 232ll) * *(double*)((uint8*)R$1 + 40ll)) + (*(double*)((uint8*)L$1 + 264ll) * *(double*)((uint8*)R$1 + 48ll))) + (*(double*)((uint8*)L$1 + 296ll) * *(double*)((uint8*)R$1 + 56ll))) + (*(double*)((uint8*)L$1 + 328ll) * *(double*)((uint8*)R$1 + 64ll)), (((*(double*)((uint8*)L$1 + 240ll) * *(double*)((uint8*)R$1 + 40ll)) + (*(double*)((uint8*)L$1 + 272ll) * *(double*)((uint8*)R$1 + 48ll))) + (*(double*)((uint8*)L$1 + 304ll) * *(double*)((uint8*)R$1 + 56ll))) + (*(double*)((uint8*)L$1 + 336ll) * *(double*)((uint8*)R$1 + 64ll)), (((*(double*)((uint8*)L$1 + 248ll) * *(double*)((uint8*)R$1 + 40ll)) + (*(double*)((uint8*)L$1 + 280ll) * *(double*)((uint8*)R$1 + 48ll))) + (*(double*)((uint8*)L$1 + 312ll) * *(double*)((uint8*)R$1 + 56ll))) + (*(double*)((uint8*)L$1 + 344ll) * *(double*)((uint8*)R$1 + 64ll)) );
 goto label$2062;
 label$2062:;
 return tmp$1748$1;
}

struct $7VECTOR4* _ZmlR7VECTOR4R4MAT4( struct $7VECTOR4* tmp$1750$1, struct $7VECTOR4* R$1, struct $4MAT4* L$1 )
{
 label$2063:;
 _ZN7VECTOR4C1Edddd( tmp$1750$1, (((*(double*)((uint8*)L$1 + 224ll) * *(double*)((uint8*)R$1 + 40ll)) + (*(double*)((uint8*)L$1 + 232ll) * *(double*)((uint8*)R$1 + 48ll))) + (*(double*)((uint8*)L$1 + 240ll) * *(double*)((uint8*)R$1 + 56ll))) + (*(double*)((uint8*)L$1 + 248ll) * *(double*)((uint8*)R$1 + 64ll)), (((*(double*)((uint8*)L$1 + 256ll) * *(double*)((uint8*)R$1 + 40ll)) + (*(double*)((uint8*)L$1 + 264ll) * *(double*)((uint8*)R$1 + 48ll))) + (*(double*)((uint8*)L$1 + 272ll) * *(double*)((uint8*)R$1 + 56ll))) + (*(double*)((uint8*)L$1 + 280ll) * *(double*)((uint8*)R$1 + 64ll)), (((*(double*)((uint8*)L$1 + 288ll) * *(double*)((uint8*)R$1 + 40ll)) + (*(double*)((uint8*)L$1 + 296ll) * *(double*)((uint8*)R$1 + 48ll))) + (*(double*)((uint8*)L$1 + 304ll) * *(double*)((uint8*)R$1 + 56ll))) + (*(double*)((uint8*)L$1 + 312ll) * *(double*)((uint8*)R$1 + 64ll)), (((*(double*)((uint8*)L$1 + 320ll) * *(double*)((uint8*)R$1 + 40ll)) + (*(double*)((uint8*)L$1 + 328ll) * *(double*)((uint8*)R$1 + 48ll))) + (*(double*)((uint8*)L$1 + 336ll) * *(double*)((uint8*)R$1 + 56ll))) + (*(double*)((uint8*)L$1 + 344ll) * *(double*)((uint8*)R$1 + 64ll)) );
 goto label$2064;
 label$2064:;
 return tmp$1750$1;
}

struct $4MAT4 _ZmlR4MAT4S0_( struct $4MAT4* L$1, struct $4MAT4* R$1 )
{
 struct $4MAT4 fb$result$1;
 label$2065:;
 _ZN4MAT4C1Edddddddddddddddd( &fb$result$1, (((*(double*)((uint8*)L$1 + 224ll) * *(double*)((uint8*)R$1 + 224ll)) + (*(double*)((uint8*)L$1 + 256ll) * *(double*)((uint8*)R$1 + 232ll))) + (*(double*)((uint8*)L$1 + 288ll) * *(double*)((uint8*)R$1 + 240ll))) + (*(double*)((uint8*)L$1 + 320ll) * *(double*)((uint8*)R$1 + 248ll)), (((*(double*)((uint8*)L$1 + 232ll) * *(double*)((uint8*)R$1 + 224ll)) + (*(double*)((uint8*)L$1 + 264ll) * *(double*)((uint8*)R$1 + 232ll))) + (*(double*)((uint8*)L$1 + 296ll) * *(double*)((uint8*)R$1 + 240ll))) + (*(double*)((uint8*)L$1 + 328ll) * *(double*)((uint8*)R$1 + 248ll)), (((*(double*)((uint8*)L$1 + 240ll) * *(double*)((uint8*)R$1 + 224ll)) + (*(double*)((uint8*)L$1 + 272ll) * *(double*)((uint8*)R$1 + 232ll))) + (*(double*)((uint8*)L$1 + 304ll) * *(double*)((uint8*)R$1 + 240ll))) + (*(double*)((uint8*)L$1 + 336ll) * *(double*)((uint8*)R$1 + 248ll)), (((*(double*)((uint8*)L$1 + 248ll) * *(double*)((uint8*)R$1 + 224ll)) + (*(double*)((uint8*)L$1 + 280ll) * *(double*)((uint8*)R$1 + 232ll))) + (*(double*)((uint8*)L$1 + 312ll) * *(double*)((uint8*)R$1 + 240ll))) + (*(double*)((uint8*)L$1 + 344ll) * *(double*)((uint8*)R$1 + 248ll)), (((*(double*)((uint8*)L$1 + 224ll) * *(double*)((uint8*)R$1 + 256ll)) + (*(double*)((uint8*)L$1 + 256ll) * *(double*)((uint8*)R$1 + 264ll))) + (*(double*)((uint8*)L$1 + 288ll) * *(double*)((uint8*)R$1 + 272ll))) + (*(double*)((uint8*)L$1 + 320ll) * *(double*)((uint8*)R$1 + 280ll)), (((*(double*)((uint8*)L$1 + 232ll) * *(double*)((uint8*)R$1 + 256ll)) + (*(double*)((uint8*)L$1 + 264ll) * *(double*)((uint8*)R$1 + 264ll))) + (*(double*)((uint8*)L$1 + 296ll) * *(double*)((uint8*)R$1 + 272ll))) + (*(double*)((uint8*)L$1 + 328ll) * *(double*)((uint8*)R$1 + 280ll)), (((*(double*)((uint8*)L$1 + 240ll) * *(double*)((uint8*)R$1 + 256ll)) + (*(double*)((uint8*)L$1 + 272ll) * *(double*)((uint8*)R$1 + 264ll))) + (*(double*)((uint8*)L$1 + 304ll) * *(double*)((uint8*)R$1 + 272ll))) + (*(double*)((uint8*)L$1 + 336ll) * *(double*)((uint8*)R$1 + 280ll)), (((*(double*)((uint8*)L$1 + 248ll) * *(double*)((uint8*)R$1 + 256ll)) + (*(double*)((uint8*)L$1 + 280ll) * *(double*)((uint8*)R$1 + 264ll))) + (*(double*)((uint8*)L$1 + 312ll) * *(double*)((uint8*)R$1 + 272ll))) + (*(double*)((uint8*)L$1 + 344ll) * *(double*)((uint8*)R$1 + 280ll)), (((*(double*)((uint8*)L$1 + 224ll) * *(double*)((uint8*)R$1 + 288ll)) + (*(double*)((uint8*)L$1 + 256ll) * *(double*)((uint8*)R$1 + 296ll))) + (*(double*)((uint8*)L$1 + 288ll) * *(double*)((uint8*)R$1 + 304ll))) + (*(double*)((uint8*)L$1 + 320ll) * *(double*)((uint8*)R$1 + 312ll)), (((*(double*)((uint8*)L$1 + 232ll) * *(double*)((uint8*)R$1 + 288ll)) + (*(double*)((uint8*)L$1 + 264ll) * *(double*)((uint8*)R$1 + 296ll))) + (*(double*)((uint8*)L$1 + 296ll) * *(double*)((uint8*)R$1 + 304ll))) + (*(double*)((uint8*)L$1 + 328ll) * *(double*)((uint8*)R$1 + 312ll)), (((*(double*)((uint8*)L$1 + 240ll) * *(double*)((uint8*)R$1 + 288ll)) + (*(double*)((uint8*)L$1 + 272ll) * *(double*)((uint8*)R$1 + 296ll))) + (*(double*)((uint8*)L$1 + 304ll) * *(double*)((uint8*)R$1 + 304ll))) + (*(double*)((uint8*)L$1 + 336ll) * *(double*)((uint8*)R$1 + 312ll)), (((*(double*)((uint8*)L$1 + 248ll) * *(double*)((uint8*)R$1 + 288ll)) + (*(double*)((uint8*)L$1 + 280ll) * *(double*)((uint8*)R$1 + 296ll))) + (*(double*)((uint8*)L$1 + 312ll) * *(double*)((uint8*)R$1 + 304ll))) + (*(double*)((uint8*)L$1 + 344ll) * *(double*)((uint8*)R$1 + 312ll)), (((*(double*)((uint8*)L$1 + 224ll) * *(double*)((uint8*)R$1 + 320ll)) + (*(double*)((uint8*)L$1 + 256ll) * *(double*)((uint8*)R$1 + 328ll))) + (*(double*)((uint8*)L$1 + 288ll) * *(double*)((uint8*)R$1 + 336ll))) + (*(double*)((uint8*)L$1 + 320ll) * *(double*)((uint8*)R$1 + 344ll)), (((*(double*)((uint8*)L$1 + 232ll) * *(double*)((uint8*)R$1 + 320ll)) + (*(double*)((uint8*)L$1 + 264ll) * *(double*)((uint8*)R$1 + 328ll))) + (*(double*)((uint8*)L$1 + 296ll) * *(double*)((uint8*)R$1 + 336ll))) + (*(double*)((uint8*)L$1 + 328ll) * *(double*)((uint8*)R$1 + 344ll)), (((*(double*)((uint8*)L$1 + 240ll) * *(double*)((uint8*)R$1 + 320ll)) + (*(double*)((uint8*)L$1 + 272ll) * *(double*)((uint8*)R$1 + 328ll))) + (*(double*)((uint8*)L$1 + 304ll) * *(double*)((uint8*)R$1 + 336ll))) + (*(double*)((uint8*)L$1 + 336ll) * *(double*)((uint8*)R$1 + 344ll)), (((*(double*)((uint8*)L$1 + 248ll) * *(double*)((uint8*)R$1 + 320ll)) + (*(double*)((uint8*)L$1 + 280ll) * *(double*)((uint8*)R$1 + 328ll))) + (*(double*)((uint8*)L$1 + 312ll) * *(double*)((uint8*)R$1 + 336ll))) + (*(double*)((uint8*)L$1 + 344ll) * *(double*)((uint8*)R$1 + 344ll)) );
 goto label$2066;
 label$2066:;
 return fb$result$1;
}

struct $4MAT2 _Z14MATRIXCOMPMULTR4MAT2S0_( struct $4MAT2* X$1, struct $4MAT2* Y$1 )
{
 struct $4MAT2 fb$result$1;
 label$2067:;
 struct $4MAT2 Z$1;
 _ZN4MAT2C1Ed( &Z$1, 0x1.p+0 );
 double* PZ$1;
 PZ$1 = (double*)((uint8*)&Z$1 + 120ll);
 double* PX$1;
 PX$1 = (double*)((uint8*)X$1 + 120ll);
 double* PY$1;
 PY$1 = (double*)((uint8*)Y$1 + 120ll);
 int64 I2$1;
 __builtin_memset( &I2$1, 0, 8ll );
 {
  int64 I$2;
  I$2 = 0ll;
  label$2072:;
  {
   int64 IJ$3;
   IJ$3 = I2$1;
   {
    int64 J$4;
    J$4 = 0ll;
    label$2076:;
    {
     *(double*)((uint8*)PZ$1 + (IJ$3 << (3ll & 63ll))) = *(double*)((uint8*)PX$1 + (IJ$3 << (3ll & 63ll))) * *(double*)((uint8*)PY$1 + (IJ$3 << (3ll & 63ll)));
     IJ$3 = IJ$3 + 1ll;
    }
    label$2074:;
    J$4 = J$4 + 1ll;
    label$2073:;
    if( J$4 <= 1ll ) goto label$2076;
    label$2075:;
   }
   I2$1 = I2$1 + 2ll;
  }
  label$2070:;
  I$2 = I$2 + 1ll;
  label$2069:;
  if( I$2 <= 1ll ) goto label$2072;
  label$2071:;
 }
 _ZN4MAT2C1ERKS_( &fb$result$1, (struct $4MAT2*)&Z$1 );
 goto label$2068;
 label$2068:;
 return fb$result$1;
}

struct $4MAT3 _Z14MATRIXCOMPMULTR4MAT3S0_( struct $4MAT3* X$1, struct $4MAT3* Y$1 )
{
 struct $4MAT3 fb$result$1;
 label$2077:;
 struct $4MAT3 Z$1;
 _ZN4MAT3C1Ed( &Z$1, 0x1.p+0 );
 double* PZ$1;
 PZ$1 = (double*)((uint8*)&Z$1 + 152ll);
 double* PX$1;
 PX$1 = (double*)((uint8*)X$1 + 152ll);
 double* PY$1;
 PY$1 = (double*)((uint8*)Y$1 + 152ll);
 int64 I3$1;
 __builtin_memset( &I3$1, 0, 8ll );
 {
  int64 I$2;
  I$2 = 0ll;
  label$2082:;
  {
   int64 IJ$3;
   IJ$3 = I3$1;
   {
    int64 J$4;
    J$4 = 0ll;
    label$2086:;
    {
     *(double*)((uint8*)PZ$1 + (IJ$3 << (3ll & 63ll))) = *(double*)((uint8*)PX$1 + (IJ$3 << (3ll & 63ll))) * *(double*)((uint8*)PY$1 + (IJ$3 << (3ll & 63ll)));
     IJ$3 = IJ$3 + 1ll;
    }
    label$2084:;
    J$4 = J$4 + 1ll;
    label$2083:;
    if( J$4 <= 1ll ) goto label$2086;
    label$2085:;
   }
   I3$1 = I3$1 + 3ll;
  }
  label$2080:;
  I$2 = I$2 + 1ll;
  label$2079:;
  if( I$2 <= 1ll ) goto label$2082;
  label$2081:;
 }
 _ZN4MAT3C1ERKS_( &fb$result$1, (struct $4MAT3*)&Z$1 );
 goto label$2078;
 label$2078:;
 return fb$result$1;
}

struct $4MAT4 _Z14MATRIXCOMPMULTR4MAT4S0_( struct $4MAT4* X$1, struct $4MAT4* Y$1 )
{
 struct $4MAT4 fb$result$1;
 label$2087:;
 struct $4MAT4 Z$1;
 _ZN4MAT4C1Ed( &Z$1, 0x1.p+0 );
 double* PZ$1;
 PZ$1 = (double*)((uint8*)&Z$1 + 224ll);
 double* PX$1;
 PX$1 = (double*)((uint8*)X$1 + 224ll);
 double* PY$1;
 PY$1 = (double*)((uint8*)Y$1 + 224ll);
 int64 I4$1;
 __builtin_memset( &I4$1, 0, 8ll );
 {
  int64 I$2;
  I$2 = 0ll;
  label$2092:;
  {
   int64 IJ$3;
   IJ$3 = I4$1;
   {
    int64 J$4;
    J$4 = 0ll;
    label$2096:;
    {
     *(double*)((uint8*)PZ$1 + (IJ$3 << (3ll & 63ll))) = *(double*)((uint8*)PX$1 + (IJ$3 << (3ll & 63ll))) * *(double*)((uint8*)PY$1 + (IJ$3 << (3ll & 63ll)));
     IJ$3 = IJ$3 + 1ll;
    }
    label$2094:;
    J$4 = J$4 + 1ll;
    label$2093:;
    if( J$4 <= 1ll ) goto label$2096;
    label$2095:;
   }
   I4$1 = I4$1 + 4ll;
  }
  label$2090:;
  I$2 = I$2 + 1ll;
  label$2089:;
  if( I$2 <= 1ll ) goto label$2092;
  label$2091:;
 }
 _ZN4MAT4C1ERKS_( &fb$result$1, (struct $4MAT4*)&Z$1 );
 goto label$2088;
 label$2088:;
 return fb$result$1;
}

void _ZN5C64_TC1Ev( struct $5C64_T* THIS$1 )
{
 uint64 TMP$1809$1;
 int64 TMP$1810$1;
 int64 TMP$1811$1;
 struct $12SYSTEM_BUS_T* TMP$1813$1;
 struct $7CPU6510* TMP$1815$1;
 label$2119:;
 _ZN4MAT4C1Ed( (struct $4MAT4*)THIS$1, 0x1.p+0 );
 __builtin_memset( (struct $12SYSTEM_BUS_T**)((uint8*)THIS$1 + 352ll), 0, 8ll );
 __builtin_memset( (struct $7CPU6510**)((uint8*)THIS$1 + 360ll), 0, 8ll );
 *(uint8*)NIBBLES$ = (uint8)0u;
 *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) = (uint8)1u;
 *(uint8*)((int64)(uint8*)NIBBLES$ + 257ll) = (uint8)5u;
 *(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) = (uint8)8u;
 label$2121:;
 *(uint8*)((uint8*)NIBBLES$ + (int64)I$) = (uint8)I$;
 I$ = I$ + (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 fb_Locate( (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll), (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll), -1, 0, 0 );
 FBSTRING* vr$12 = fb_StrAllocTempDescZEx( (uint8*)"NIBBLES: ", 9ll );
 fb_PrintString( 0, (FBSTRING*)vr$12, 0 );
 if( I$ >= (uint64)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) & 63ll)) ) goto label$2122;
 TMP$1809$1 = I$;
 goto label$2131;
 label$2122:;
 TMP$1809$1 = I$ - (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 label$2131:;
 fb_PrintULongint( 0, TMP$1809$1, 1 );
 if( I$ > (uint64)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) & 63ll)) ) goto label$2124;
 goto label$2121;
 label$2124:;
 I$ = (uint64)*(uint8*)NIBBLES$;
 label$2125:;
 static int32 I$1;
 static int32 C$1;
 fb_GfxScreenRes( (int32)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) & 63ll)), (int32)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)), (int32)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)), (int32)*(uint8*)NIBBLES$, 64, 0 );
 fb_Cls( -65536 );
 FBSTRING* vr$41 = fb_StrAllocTempDescZEx( (uint8*)"", 0ll );
 TMP$1811$1 = 0ll;
 TMP$1810$1 = 0ll;
 fb_GfxScreenInfo64( (int64*)&SCR_W$, (int64*)&SCR_H$, (int64*)&IMGDATA$, (int64*)&PITCH$, &TMP$1810$1, &TMP$1811$1, vr$41 );
 void* vr$51 = fb_GfxImageCreate( (int32)SCR_W$, (int32)SCR_H$, (uint32)*(uint8*)NIBBLES$, (int32)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)), 0 );
 BGIMAGE$ = vr$51;
 void* vr$59 = fb_GfxImageCreate( (int32)SCR_W$, (int32)SCR_H$, (uint32)*(uint8*)NIBBLES$, (int32)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)), 0 );
 FGIMAGE$ = vr$59;
 void* vr$67 = fb_GfxImageCreate( (int32)SCR_W$, (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll), (uint32)*(uint8*)NIBBLES$, (int32)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)), 0 );
 RASTER$ = vr$67;
 void* vr$75 = fb_GfxImageCreate( (int32)SCR_W$, (int32)SCR_H$, (uint32)*(uint8*)NIBBLES$, (int32)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)), 0 );
 _RENDER$ = vr$75;
 I$1 = (uint64)*(uint8*)NIBBLES$;
 label$2126:;
 fb_DataReadInt( &C$1 );
 typedef void (*_ZN5C64_T8tmp$1812Eiiii)( int32, int32, int32, int32 );
 ((_ZN5C64_T8tmp$1812Eiiii)&fb_GfxPalette)( (int32)(uint64)I$1, (int32)(uint64)C$1, (int32)-(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll), (int32)-(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 I$1 = (uint64)I$1 + (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 if( (uint64)I$1 >= (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) ) goto label$2128;
 goto label$2126;
 label$2128:;
 void* vr$88 = malloc( 16869744ull );
 TMP$1813$1 = (struct $12SYSTEM_BUS_T*)vr$88;
 if( TMP$1813$1 == (struct $12SYSTEM_BUS_T*)0ull ) goto label$2129;
 _ZN12SYSTEM_BUS_TC1Ev( TMP$1813$1 );
 label$2129:;
 *(struct $12SYSTEM_BUS_T**)((uint8*)THIS$1 + 352ll) = TMP$1813$1;
 void* vr$90 = malloc( 14720ull );
 TMP$1815$1 = (struct $7CPU6510*)vr$90;
 if( TMP$1815$1 == (struct $7CPU6510*)0ull ) goto label$2130;
 _ZN7CPU6510C1EP12SYSTEM_BUS_T( TMP$1815$1, *(struct $12SYSTEM_BUS_T**)((uint8*)THIS$1 + 352ll) );
 label$2130:;
 *(struct $7CPU6510**)((uint8*)THIS$1 + 360ll) = TMP$1815$1;
 label$2120:;
}

void _ZN5C64_TD1Ev( struct $5C64_T* THIS$1 )
{
 label$2132:;
 if( *(struct $7CPU6510**)((uint8*)THIS$1 + 360ll) == (struct $7CPU6510*)0ull ) goto label$2134;
 _ZN7CPU6510D1Ev( *(struct $7CPU6510**)((uint8*)THIS$1 + 360ll) );
 free( *(void**)((uint8*)THIS$1 + 360ll) );
 label$2134:;
 if( *(struct $12SYSTEM_BUS_T**)((uint8*)THIS$1 + 352ll) == (struct $12SYSTEM_BUS_T*)0ull ) goto label$2135;
 _ZN12SYSTEM_BUS_TD1Ev( *(struct $12SYSTEM_BUS_T**)((uint8*)THIS$1 + 352ll) );
 free( *(void**)((uint8*)THIS$1 + 352ll) );
 label$2135:;
 fb_GfxImageDestroy( (void*)BGIMAGE$ );
 fb_GfxImageDestroy( (void*)FGIMAGE$ );
 fb_GfxImageDestroy( (void*)RASTER$ );
 fb_GfxImageDestroy( (void*)_RENDER$ );
 fb_Sleep( 1 );
 label$2133:;
}

void _ZN12SYSTEM_BUS_TC1Ev( struct $12SYSTEM_BUS_T* THIS$1 )
{
 FBSTRING TMP$1818$1;
 FBSTRING TMP$1819$1;
 FBSTRING TMP$1820$1;
 FBSTRING TMP$1821$1;
 FBSTRING TMP$1822$1;
 FBSTRING TMP$1823$1;
 FBSTRING TMP$1824$1;
 FBSTRING TMP$1825$1;
 FBSTRING TMP$1826$1;
 FBSTRING TMP$1827$1;
 FBSTRING TMP$1828$1;
 FBSTRING TMP$1829$1;
 FBSTRING TMP$1830$1;
 FBSTRING TMP$1831$1;
 FBSTRING TMP$1832$1;
 FBSTRING TMP$1833$1;
 FBSTRING TMP$1834$1;
 FBSTRING TMP$1835$1;
 FBSTRING TMP$1836$1;
 FBSTRING TMP$1837$1;
 FBSTRING TMP$1838$1;
 FBSTRING TMP$1839$1;
 FBSTRING TMP$1840$1;
 FBSTRING TMP$1841$1;
 FBSTRING TMP$1842$1;
 FBSTRING TMP$1843$1;
 FBSTRING TMP$1844$1;
 FBSTRING TMP$1845$1;
 FBSTRING TMP$1846$1;
 FBSTRING TMP$1847$1;
 FBSTRING TMP$1848$1;
 FBSTRING TMP$1849$1;
 FBSTRING TMP$1850$1;
 FBSTRING TMP$1851$1;
 FBSTRING TMP$1852$1;
 label$2136:;
 __builtin_memset( (double*)THIS$1, 0, 131072ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 131072ll), 0, 131072ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 262144ll), 0, 16588808ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 16850952ll), 0, 8192ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 16859144ll), 0, 2880ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 16862024ll), 0, 2880ll );
 _ZN9RAYTRACERC1Ev( (struct $9RAYTRACER*)((uint8*)THIS$1 + 16864904ll) );
 __builtin_memset( (uint8*)((uint8*)THIS$1 + 16865648ll), 0, 2048ll );
 __builtin_memset( (uint8*)((uint8*)THIS$1 + 16867696ll), 0, 2048ll );
 SYS_OFFSET$ = (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll));
 fb_DataRestore( (void*)label$2139 );
 label$2140:;
 fb_DataReadLongint( (int64*)&C$ );
 *(double*)((int64)(double*)MEM64$ + ((int64)I$ << (3ll & 63ll))) = (double)(uint64)C$;
 I$ = I$ + (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 if( I$ > (uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$2142;
 goto label$2140;
 label$2142:;
 I$ = (uint64)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll));
 label$2143:;
 *(double*)((int64)(double*)MEM64$ + ((int64)I$ << (3ll & 63ll))) = (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll));
 I$ = I$ + (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 if( I$ > (uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$2145;
 goto label$2143;
 label$2145:;
 I$ = (uint64)*(uint8*)NIBBLES$;
 label$2146:;
 *(double*)((uint8*)((uint8*)THIS$1 + ((int64)I$ << (3ll & 63ll))) + 16859144ll) = __builtin_sin( (double)((((int64)__builtin_nearbyint( ((double)I$ * 0x1.921FB54442D18p+1) / (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) )) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) );
 *(double*)((uint8*)((uint8*)THIS$1 + ((int64)I$ << (3ll & 63ll))) + 16862024ll) = __builtin_cos( (double)((((int64)__builtin_nearbyint( ((double)I$ * 0x1.921FB54442D18p+1) / (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) )) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) );
 I$ = I$ + (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 if( I$ > (uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$2148;
 goto label$2146;
 label$2148:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)), (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)), (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)), (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)), (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)), (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8264p+15, (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)), (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)), (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)), (double)*(uint8*)NIBBLES$ );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)), (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)), (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)), (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) );
 I$ = (uint64)*(uint8*)NIBBLES$;
 uint8 TMP$1;
 __builtin_memset( &TMP$1, 0, 1ll );
 FBSTRING* vr$241 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) );
 FBSTRING* vr$247 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) );
 FBSTRING* vr$253 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
 FBSTRING* vr$259 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) );
 FBSTRING* vr$265 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
 FBSTRING* vr$269 = fb_CHR( 1, (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll) );
 FBSTRING* vr$275 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) );
 FBSTRING* vr$281 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) );
 FBSTRING* vr$287 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
 FBSTRING* vr$291 = fb_CHR( 1, (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll) );
 FBSTRING* vr$297 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) );
 FBSTRING* vr$303 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 FBSTRING* vr$309 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) );
 FBSTRING* vr$315 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) );
 FBSTRING* vr$321 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) );
 FBSTRING* vr$327 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) );
 FBSTRING* vr$333 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) );
 FBSTRING* vr$339 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) );
 FBSTRING* vr$343 = fb_CHR( 1, (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll) );
 FBSTRING* vr$349 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) );
 FBSTRING* vr$355 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) );
 FBSTRING* vr$361 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) );
 __builtin_memset( &TMP$1818$1, 0, 24ll );
 FBSTRING* vr$364 = fb_StrConcat( &TMP$1818$1, (void*)vr$361, -1ll, (void*)vr$355, -1ll );
 __builtin_memset( &TMP$1819$1, 0, 24ll );
 FBSTRING* vr$367 = fb_StrConcat( &TMP$1819$1, (void*)vr$364, -1ll, (void*)vr$349, -1ll );
 __builtin_memset( &TMP$1820$1, 0, 24ll );
 FBSTRING* vr$370 = fb_StrConcat( &TMP$1820$1, (void*)vr$367, -1ll, (void*)vr$343, -1ll );
 __builtin_memset( &TMP$1821$1, 0, 24ll );
 FBSTRING* vr$373 = fb_StrConcat( &TMP$1821$1, (void*)vr$370, -1ll, (void*)vr$339, -1ll );
 __builtin_memset( &TMP$1822$1, 0, 24ll );
 FBSTRING* vr$376 = fb_StrConcat( &TMP$1822$1, (void*)vr$373, -1ll, (void*)vr$333, -1ll );
 __builtin_memset( &TMP$1823$1, 0, 24ll );
 FBSTRING* vr$379 = fb_StrConcat( &TMP$1823$1, (void*)vr$376, -1ll, (void*)vr$327, -1ll );
 __builtin_memset( &TMP$1824$1, 0, 24ll );
 FBSTRING* vr$382 = fb_StrConcat( &TMP$1824$1, (void*)vr$379, -1ll, (void*)vr$321, -1ll );
 __builtin_memset( &TMP$1825$1, 0, 24ll );
 FBSTRING* vr$385 = fb_StrConcat( &TMP$1825$1, (void*)vr$382, -1ll, (void*)vr$315, -1ll );
 __builtin_memset( &TMP$1826$1, 0, 24ll );
 FBSTRING* vr$388 = fb_StrConcat( &TMP$1826$1, (void*)vr$385, -1ll, (void*)vr$309, -1ll );
 __builtin_memset( &TMP$1827$1, 0, 24ll );
 FBSTRING* vr$391 = fb_StrConcat( &TMP$1827$1, (void*)vr$388, -1ll, (void*)vr$303, -1ll );
 __builtin_memset( &TMP$1828$1, 0, 24ll );
 FBSTRING* vr$394 = fb_StrConcat( &TMP$1828$1, (void*)vr$391, -1ll, (void*)vr$297, -1ll );
 __builtin_memset( &TMP$1829$1, 0, 24ll );
 FBSTRING* vr$397 = fb_StrConcat( &TMP$1829$1, (void*)vr$394, -1ll, (void*)vr$291, -1ll );
 __builtin_memset( &TMP$1830$1, 0, 24ll );
 FBSTRING* vr$400 = fb_StrConcat( &TMP$1830$1, (void*)vr$397, -1ll, (void*)vr$287, -1ll );
 __builtin_memset( &TMP$1831$1, 0, 24ll );
 FBSTRING* vr$403 = fb_StrConcat( &TMP$1831$1, (void*)vr$400, -1ll, (void*)vr$281, -1ll );
 __builtin_memset( &TMP$1832$1, 0, 24ll );
 FBSTRING* vr$406 = fb_StrConcat( &TMP$1832$1, (void*)vr$403, -1ll, (void*)vr$275, -1ll );
 __builtin_memset( &TMP$1833$1, 0, 24ll );
 FBSTRING* vr$409 = fb_StrConcat( &TMP$1833$1, (void*)vr$406, -1ll, (void*)vr$269, -1ll );
 __builtin_memset( &TMP$1834$1, 0, 24ll );
 FBSTRING* vr$412 = fb_StrConcat( &TMP$1834$1, (void*)vr$409, -1ll, (void*)vr$265, -1ll );
 __builtin_memset( &TMP$1835$1, 0, 24ll );
 FBSTRING* vr$415 = fb_StrConcat( &TMP$1835$1, (void*)vr$412, -1ll, (void*)vr$259, -1ll );
 __builtin_memset( &TMP$1836$1, 0, 24ll );
 FBSTRING* vr$418 = fb_StrConcat( &TMP$1836$1, (void*)vr$415, -1ll, (void*)vr$253, -1ll );
 __builtin_memset( &TMP$1837$1, 0, 24ll );
 FBSTRING* vr$421 = fb_StrConcat( &TMP$1837$1, (void*)vr$418, -1ll, (void*)vr$247, -1ll );
 __builtin_memset( &TMP$1838$1, 0, 24ll );
 FBSTRING* vr$424 = fb_StrConcat( &TMP$1838$1, (void*)vr$421, -1ll, (void*)vr$241, -1ll );
 fb_FileOpen( (FBSTRING*)vr$424, 0u, 0u, 0u, (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll), 0 );
 label$2149:;
 fb_FileGetLarge( 1, 0ll, (void*)&TMP$1, 1ull );
 *(double*)((uint8*)((uint8*)THIS$1 + ((int64)I$ << (3ll & 63ll))) + 131072ll) = (double)TMP$1;
 I$ = I$ + (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 if( I$ > (uint64)(((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$2151;
 goto label$2149;
 label$2151:;
 I$ = (uint64)*(uint8*)NIBBLES$;
 label$2152:;
 fb_FileGetLarge( 1, 0ll, (void*)&TMP$1, 1ull );
 *(double*)((uint8*)THIS$1 + ((int64)I$ << (3ll & 63ll))) = (double)TMP$1;
 I$ = I$ + (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 if( I$ > (uint64)(((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$2154;
 goto label$2152;
 label$2154:;
 fb_FileClose( (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 FBSTRING* vr$471 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) );
 FBSTRING* vr$477 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) );
 FBSTRING* vr$483 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) );
 FBSTRING* vr$489 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) );
 FBSTRING* vr$495 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
 FBSTRING* vr$501 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) );
 FBSTRING* vr$507 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) );
 FBSTRING* vr$513 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) );
 FBSTRING* vr$519 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) );
 FBSTRING* vr$525 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
 FBSTRING* vr$531 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 FBSTRING* vr$537 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) );
 FBSTRING* vr$543 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) );
 FBSTRING* vr$549 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) );
 FBSTRING* vr$555 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) );
 __builtin_memset( &TMP$1839$1, 0, 24ll );
 FBSTRING* vr$558 = fb_StrConcat( &TMP$1839$1, (void*)vr$555, -1ll, (void*)vr$549, -1ll );
 __builtin_memset( &TMP$1840$1, 0, 24ll );
 FBSTRING* vr$561 = fb_StrConcat( &TMP$1840$1, (void*)vr$558, -1ll, (void*)vr$543, -1ll );
 __builtin_memset( &TMP$1841$1, 0, 24ll );
 FBSTRING* vr$564 = fb_StrConcat( &TMP$1841$1, (void*)vr$561, -1ll, (void*)vr$537, -1ll );
 __builtin_memset( &TMP$1842$1, 0, 24ll );
 FBSTRING* vr$567 = fb_StrConcat( &TMP$1842$1, (void*)vr$564, -1ll, (void*)vr$531, -1ll );
 __builtin_memset( &TMP$1843$1, 0, 24ll );
 FBSTRING* vr$570 = fb_StrConcat( &TMP$1843$1, (void*)vr$567, -1ll, (void*)vr$525, -1ll );
 __builtin_memset( &TMP$1844$1, 0, 24ll );
 FBSTRING* vr$573 = fb_StrConcat( &TMP$1844$1, (void*)vr$570, -1ll, (void*)vr$519, -1ll );
 __builtin_memset( &TMP$1845$1, 0, 24ll );
 FBSTRING* vr$576 = fb_StrConcat( &TMP$1845$1, (void*)vr$573, -1ll, (void*)vr$513, -1ll );
 __builtin_memset( &TMP$1846$1, 0, 24ll );
 FBSTRING* vr$579 = fb_StrConcat( &TMP$1846$1, (void*)vr$576, -1ll, (void*)vr$507, -1ll );
 __builtin_memset( &TMP$1847$1, 0, 24ll );
 FBSTRING* vr$582 = fb_StrConcat( &TMP$1847$1, (void*)vr$579, -1ll, (void*)vr$501, -1ll );
 __builtin_memset( &TMP$1848$1, 0, 24ll );
 FBSTRING* vr$585 = fb_StrConcat( &TMP$1848$1, (void*)vr$582, -1ll, (void*)vr$495, -1ll );
 __builtin_memset( &TMP$1849$1, 0, 24ll );
 FBSTRING* vr$588 = fb_StrConcat( &TMP$1849$1, (void*)vr$585, -1ll, (void*)vr$489, -1ll );
 __builtin_memset( &TMP$1850$1, 0, 24ll );
 FBSTRING* vr$591 = fb_StrConcat( &TMP$1850$1, (void*)vr$588, -1ll, (void*)vr$483, -1ll );
 __builtin_memset( &TMP$1851$1, 0, 24ll );
 FBSTRING* vr$594 = fb_StrConcat( &TMP$1851$1, (void*)vr$591, -1ll, (void*)vr$477, -1ll );
 __builtin_memset( &TMP$1852$1, 0, 24ll );
 FBSTRING* vr$597 = fb_StrConcat( &TMP$1852$1, (void*)vr$594, -1ll, (void*)vr$471, -1ll );
 fb_FileOpen( (FBSTRING*)vr$597, 0u, 0u, 0u, (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll), 0 );
 I$ = (uint64)*(uint8*)NIBBLES$;
 label$2155:;
 fb_FileGetLarge( 1, 0ll, (void*)&TMP$1, 1ull );
 *(double*)((uint8*)((uint8*)THIS$1 + ((int64)I$ << (3ll & 63ll))) + 262144ll) = (double)TMP$1;
 I$ = I$ + (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 if( I$ > (uint64)(((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$2157;
 goto label$2155;
 label$2157:;
 {
  uint64 TIMES$2;
  TIMES$2 = 0ull;
  label$2161:;
  {
   fb_FileSeek( (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll), (int32)*(uint8*)NIBBLES$ );
   I$ = (uint64)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll));
   label$2162:;
   fb_FileGetLarge( 1, 0ll, (void*)&TMP$1, 1ull );
   *(double*)((uint8*)((uint8*)THIS$1 + ((int64)I$ << (3ll & 63ll))) + 262144ll) = (double)TMP$1;
   I$ = I$ + (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
   if( I$ > (uint64)(((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$2164;
   goto label$2162;
   label$2164:;
  }
  label$2159:;
  TIMES$2 = TIMES$2 + 1ull;
  label$2158:;
  if( TIMES$2 <= 506ull ) goto label$2161;
  label$2160:;
 }
 fb_FileClose( (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (double)*(uint8*)NIBBLES$, __builtin_inf() );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll), __builtin_inf() );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (double)(((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)), __builtin_inf() );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (double)(((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)), __builtin_inf() );
 FBSTRING* vr$674 = fb_StrAllocTempDescZEx( (uint8*)"", 0ll );
 fb_GfxPaint( (void*)0ull, (float)*(uint8*)NIBBLES$, (float)*(uint8*)NIBBLES$, (uint32)(((((int64)(uint32)*(uint8*)NIBBLES$ << (16ll & 63ll)) | ((int64)(uint32)*(uint8*)NIBBLES$ << (8ll & 63ll))) | (int64)(uint32)*(uint8*)NIBBLES$) | ((int64)(uint32)(uint8)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) << (24ll & 63ll))), 0u, (FBSTRING*)vr$674, 0, 1073741828 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (double)(((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)), (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (double)(((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)), (double)*(uint8*)NIBBLES$ );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (double)(((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)), (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (double)(((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)), (double)*(uint8*)NIBBLES$ );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (double)(((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)), (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (double)(((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)), (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) );
 FBSTRING MEM$1;
 FBSTRING* vr$805 = fb_CHR( 1, (int64)*(uint8*)NIBBLES$ );
 fb_StrInit( (void*)&MEM$1, -1ll, (void*)vr$805, -1ll, 0 );
 I$ = (uint64)*(uint8*)NIBBLES$;
 FBSTRING* vr$813 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
 fb_StrAssign( (void*)&MEM$1, -1ll, (void*)vr$813, -1ll, 0 );
 FBSTRING* vr$820 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$820, -1ll, 0 );
 FBSTRING* vr$827 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$827, -1ll, 0 );
 FBSTRING* vr$834 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$834, -1ll, 0 );
 FBSTRING* vr$841 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$841, -1ll, 0 );
 I$ = (uint64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 label$2165:;
 FBSTRING* vr$850 = fb_StrMid( (FBSTRING*)&MEM$1, (int64)I$, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) );
 uint32 vr$851 = fb_ASC( (FBSTRING*)vr$850, 1ll );
 *(double*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) + I$) << (3ll & 63ll))) = (double)vr$851;
 if( ((int64)-(*(double*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) + I$) << (3ll & 63ll))) > (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) & (int64)-(*(double*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) + I$) << (3ll & 63ll))) < (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)))) == 0ll ) goto label$2167;
 goto label$2168;
 label$2167:;
 I$ = I$ + (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 int64 vr$905 = fb_StrLen( (void*)&MEM$1, -1ll );
 if( I$ > (uint64)vr$905 ) goto label$2170;
 goto label$2165;
 label$2170:;
 goto label$2171;
 label$2168:;
 *(double*)((uint8*)THIS$1 + ((int64)((uint64)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + I$) << (3ll & 63ll))) = *(double*)((uint8*)((uint8*)THIS$1 + ((int64)((uint64)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + I$) << (3ll & 63ll))) + (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) << (3ll & 63ll)));
 goto label$2165;
 label$2171:;
 FBSTRING* vr$937 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) );
 fb_StrAssign( (void*)&MEM$1, -1ll, (void*)vr$937, -1ll, 0 );
 FBSTRING* vr$944 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$944, -1ll, 0 );
 FBSTRING* vr$951 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$951, -1ll, 0 );
 FBSTRING* vr$958 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$958, -1ll, 0 );
 I$ = (uint64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 label$2172:;
 FBSTRING* vr$963 = fb_StrMid( (FBSTRING*)&MEM$1, (int64)I$, (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 uint32 vr$964 = fb_ASC( (FBSTRING*)vr$963, 1ll );
 *(double*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) + I$) << (3ll & 63ll))) = (double)vr$964;
 if( ((int64)-(*(double*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) + I$) << (3ll & 63ll))) > (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) & (int64)-(*(double*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) + I$) << (3ll & 63ll))) < (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)))) == 0ll ) goto label$2174;
 goto label$2175;
 label$2174:;
 I$ = I$ + (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 int64 vr$1018 = fb_StrLen( (void*)&MEM$1, -1ll );
 if( I$ > (uint64)vr$1018 ) goto label$2177;
 goto label$2172;
 label$2177:;
 goto label$2178;
 label$2175:;
 *(double*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) + I$) << (3ll & 63ll))) = *(double*)((uint8*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) + I$) << (3ll & 63ll))) + (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) << (3ll & 63ll)));
 goto label$2172;
 label$2178:;
 *(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) << (3ll & 63ll))) = (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll));
 *(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) << (3ll & 63ll))) = (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll));
 *(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) << (3ll & 63ll))) = (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll));
 FBSTRING* vr$1101 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) );
 fb_StrAssign( (void*)&MEM$1, -1ll, (void*)vr$1101, -1ll, 0 );
 FBSTRING* vr$1108 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1108, -1ll, 0 );
 FBSTRING* vr$1115 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1115, -1ll, 0 );
 FBSTRING* vr$1122 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1122, -1ll, 0 );
 FBSTRING* vr$1129 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1129, -1ll, 0 );
 FBSTRING* vr$1136 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1136, -1ll, 0 );
 FBSTRING* vr$1143 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1143, -1ll, 0 );
 FBSTRING* vr$1150 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1150, -1ll, 0 );
 FBSTRING* vr$1157 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1157, -1ll, 0 );
 I$ = (uint64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 label$2179:;
 FBSTRING* vr$1162 = fb_StrMid( (FBSTRING*)&MEM$1, (int64)I$, (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 uint32 vr$1163 = fb_ASC( (FBSTRING*)vr$1162, 1ll );
 *(double*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) + I$) << (3ll & 63ll))) = (double)vr$1163;
 if( ((int64)-(*(double*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) + I$) << (3ll & 63ll))) > (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) & (int64)-(*(double*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) + I$) << (3ll & 63ll))) < (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)))) == 0ll ) goto label$2181;
 goto label$2182;
 label$2181:;
 I$ = I$ + (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 int64 vr$1217 = fb_StrLen( (void*)&MEM$1, -1ll );
 if( I$ > (uint64)vr$1217 ) goto label$2184;
 goto label$2179;
 label$2184:;
 goto label$2185;
 label$2182:;
 *(double*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) + I$) << (3ll & 63ll))) = *(double*)((uint8*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) + I$) << (3ll & 63ll))) + (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) << (3ll & 63ll)));
 goto label$2179;
 label$2185:;
 *(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) << (3ll & 63ll))) = (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll));
 FBSTRING* vr$1268 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
 fb_StrAssign( (void*)&MEM$1, -1ll, (void*)vr$1268, -1ll, 0 );
 FBSTRING* vr$1275 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1275, -1ll, 0 );
 FBSTRING* vr$1282 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1282, -1ll, 0 );
 FBSTRING* vr$1289 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1289, -1ll, 0 );
 FBSTRING* vr$1296 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1296, -1ll, 0 );
 I$ = (uint64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 label$2186:;
 FBSTRING* vr$1301 = fb_StrMid( (FBSTRING*)&MEM$1, (int64)I$, (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 uint32 vr$1302 = fb_ASC( (FBSTRING*)vr$1301, 1ll );
 *(double*)((uint8*)THIS$1 + ((int64)((uint64)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + I$) << (3ll & 63ll))) = (double)vr$1302;
 if( ((int64)-(*(double*)((uint8*)THIS$1 + ((int64)((uint64)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + I$) << (3ll & 63ll))) > (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) & (int64)-(*(double*)((uint8*)THIS$1 + ((int64)((uint64)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + I$) << (3ll & 63ll))) < (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)))) == 0ll ) goto label$2188;
 goto label$2189;
 label$2188:;
 FBSTRING* vr$1349 = fb_StrMid( (FBSTRING*)&MEM$1, (int64)I$, (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 uint32 vr$1350 = fb_ASC( (FBSTRING*)vr$1349, 1ll );
 *(double*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) + I$) << (3ll & 63ll))) = (double)vr$1350;
 if( ((int64)-(*(double*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) + I$) << (3ll & 63ll))) > (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) & (int64)-(*(double*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) + I$) << (3ll & 63ll))) < (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll))) == 0ll ) goto label$2191;
 goto label$2192;
 label$2191:;
 I$ = I$ + (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 int64 vr$1402 = fb_StrLen( (void*)&MEM$1, -1ll );
 if( I$ > (uint64)vr$1402 ) goto label$2194;
 goto label$2186;
 label$2194:;
 goto label$2195;
 label$2189:;
 *(double*)((uint8*)THIS$1 + ((int64)((uint64)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + I$) << (3ll & 63ll))) = *(double*)((uint8*)((uint8*)THIS$1 + ((int64)((uint64)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + I$) << (3ll & 63ll))) + (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) << (3ll & 63ll)));
 goto label$2186;
 label$2192:;
 *(double*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) + I$) << (3ll & 63ll))) = *(double*)((uint8*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) + I$) << (3ll & 63ll))) + (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) << (3ll & 63ll)));
 goto label$2186;
 label$2195:;
 *(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) << (3ll & 63ll))) = (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll));
 *(double*)((uint8*)THIS$1 + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) << (3ll & 63ll))) = (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll));
 *(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) << (3ll & 63ll))) = (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll));
 *(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) << (3ll & 63ll))) = (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll));
 *(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) << (3ll & 63ll))) = (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll));
 FBSTRING* vr$1541 = fb_CHR( 1, (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll) );
 fb_StrAssign( (void*)&MEM$1, -1ll, (void*)vr$1541, -1ll, 0 );
 FBSTRING* vr$1548 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1548, -1ll, 0 );
 FBSTRING* vr$1555 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1555, -1ll, 0 );
 FBSTRING* vr$1562 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1562, -1ll, 0 );
 FBSTRING* vr$1567 = fb_CHR( 1, (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1567, -1ll, 0 );
 FBSTRING* vr$1574 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1574, -1ll, 0 );
 FBSTRING* vr$1581 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1581, -1ll, 0 );
 FBSTRING* vr$1588 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1588, -1ll, 0 );
 FBSTRING* vr$1595 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1595, -1ll, 0 );
 FBSTRING* vr$1602 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1602, -1ll, 0 );
 FBSTRING* vr$1609 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1609, -1ll, 0 );
 I$ = (uint64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 label$2196:;
 FBSTRING* vr$1614 = fb_StrMid( (FBSTRING*)&MEM$1, (int64)I$, (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 uint32 vr$1615 = fb_ASC( (FBSTRING*)vr$1614, 1ll );
 *(double*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) + I$) << (3ll & 63ll))) = (double)vr$1615;
 if( ((int64)-(*(double*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) + I$) << (3ll & 63ll))) > (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) & (int64)-(*(double*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) + I$) << (3ll & 63ll))) < (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)))) == 0ll ) goto label$2198;
 goto label$2199;
 label$2198:;
 label$2199:;
 I$ = I$ + (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 int64 vr$1665 = fb_StrLen( (void*)&MEM$1, -1ll );
 if( I$ > (uint64)vr$1665 ) goto label$2201;
 goto label$2196;
 label$2201:;
 goto label$2202;
 label$2203:;
 *(double*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) + I$) << (3ll & 63ll))) = *(double*)((uint8*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) + I$) << (3ll & 63ll))) + (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) << (3ll & 63ll)));
 goto label$2199;
 label$2202:;
 uint64 vr$1699 = fb_GetMemAvail( ((int32)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((int64)*(uint8*)NIBBLES$ << (3ll & 63ll))) )) );
 double vr$1706 = pow( (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)), (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) );
 FBSTRING* vr$1709 = fb_ULongintToStr( vr$1699 / ((uint64)__builtin_nearbyint( vr$1706 )) );
 fb_StrAssign( (void*)&MEM$1, -1ll, (void*)vr$1709, -1ll, 0 );
 int64 vr$1712 = fb_StrLen( (void*)&MEM$1, -1ll );
 if( vr$1712 != (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$2205;
 goto label$2206;
 label$2205:;
 int64 vr$1715 = fb_StrLen( (void*)&MEM$1, -1ll );
 if( vr$1715 != (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) ) goto label$2208;
 goto label$2209;
 label$2208:;
 label$2206:;
 uint32 vr$1718 = fb_ASC( (FBSTRING*)&MEM$1, 1ll );
 *(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) = (double)vr$1718;
 *(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) << (3ll & 63ll))) = (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll));
 *(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) << (3ll & 63ll))) = (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll));
 goto label$2210;
 label$2209:;
 FBSTRING* vr$1768 = fb_StrMid( (FBSTRING*)&MEM$1, (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll), (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 uint32 vr$1769 = fb_ASC( (FBSTRING*)vr$1768, 1ll );
 *(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) = (double)vr$1769;
 FBSTRING* vr$1785 = fb_StrMid( (FBSTRING*)&MEM$1, (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll), (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 uint32 vr$1786 = fb_ASC( (FBSTRING*)vr$1785, 1ll );
 *(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) << (3ll & 63ll))) = (double)vr$1786;
 *(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) << (3ll & 63ll))) = (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll));
 *(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) << (3ll & 63ll))) = (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll));
 FBSTRING* vr$1836 = fb_CHR( 1, (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll) );
 fb_StrAssign( (void*)&MEM$1, -1ll, (void*)vr$1836, -1ll, 0 );
 FBSTRING* vr$1843 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1843, -1ll, 0 );
 FBSTRING* vr$1850 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1850, -1ll, 0 );
 FBSTRING* vr$1857 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1857, -1ll, 0 );
 FBSTRING* vr$1862 = fb_CHR( 1, (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1862, -1ll, 0 );
 FBSTRING* vr$1869 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1869, -1ll, 0 );
 FBSTRING* vr$1876 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1876, -1ll, 0 );
 FBSTRING* vr$1883 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1883, -1ll, 0 );
 FBSTRING* vr$1890 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1890, -1ll, 0 );
 FBSTRING* vr$1897 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1897, -1ll, 0 );
 FBSTRING* vr$1904 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1904, -1ll, 0 );
 I$ = (uint64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 label$2211:;
 FBSTRING* vr$1909 = fb_StrMid( (FBSTRING*)&MEM$1, (int64)I$, (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 uint32 vr$1910 = fb_ASC( (FBSTRING*)vr$1909, 1ll );
 *(double*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) + I$) << (3ll & 63ll))) = (double)vr$1910;
 I$ = I$ + (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 int64 vr$1927 = fb_StrLen( (void*)&MEM$1, -1ll );
 if( I$ > (uint64)vr$1927 ) goto label$2213;
 goto label$2211;
 label$2213:;
 *(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) << (3ll & 63ll))) = (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll));
 *(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) << (3ll & 63ll))) = (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll));
 goto label$2210;
 label$2210:;
 *(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) << (3ll & 63ll))) = (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll));
 *(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) << (3ll & 63ll))) = (double)*(uint8*)NIBBLES$;
 *(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) << (3ll & 63ll))) = (double)*(uint8*)NIBBLES$;
 fb_StrDelete( (FBSTRING*)&MEM$1 );
 label$2137:;
}

void _ZN12SYSTEM_BUS_TD1Ev( struct $12SYSTEM_BUS_T* THIS$1 )
{
 label$2214:;
 label$2215:;
 _ZN9RAYTRACERD1Ev( (struct $9RAYTRACER*)((uint8*)THIS$1 + 16864904ll) );
}

double _ZN12SYSTEM_BUS_T7LENGTH6ER7VECTOR2( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR2* P$1 )
{
 struct $7VECTOR2 TMP$1853$1;
 struct $7VECTOR2 TMP$1854$1;
 struct $7VECTOR2 TMP$1855$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2216:;
 struct $7VECTOR2* vr$2 = _ZmlR7VECTOR2S0_( &TMP$1853$1, P$1, P$1 );
 struct $7VECTOR2* vr$4 = _ZmlR7VECTOR2S0_( &TMP$1854$1, vr$2, P$1 );
 _ZN7VECTOR2aSERS_( P$1, vr$4 );
 struct $7VECTOR2* vr$6 = _ZmlR7VECTOR2S0_( &TMP$1855$1, P$1, P$1 );
 _ZN7VECTOR2aSERS_( P$1, vr$6 );
 double vr$10 = _ZN12SYSTEM_BUS_T5K_POWEdd( THIS$1, *(double*)P$1 + *(double*)((uint8*)P$1 + 8ll), 0x1.5555555555555p-3 );
 fb$result$1 = vr$10;
 goto label$2217;
 label$2217:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7LENGTH8ER7VECTOR2( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR2* P$1 )
{
 struct $7VECTOR2 TMP$1856$1;
 struct $7VECTOR2 TMP$1857$1;
 struct $7VECTOR2 TMP$1858$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2218:;
 struct $7VECTOR2* vr$2 = _ZmlR7VECTOR2S0_( &TMP$1856$1, P$1, P$1 );
 _ZN7VECTOR2aSERS_( P$1, vr$2 );
 struct $7VECTOR2* vr$4 = _ZmlR7VECTOR2S0_( &TMP$1857$1, P$1, P$1 );
 _ZN7VECTOR2aSERS_( P$1, vr$4 );
 struct $7VECTOR2* vr$6 = _ZmlR7VECTOR2S0_( &TMP$1858$1, P$1, P$1 );
 _ZN7VECTOR2aSERS_( P$1, vr$6 );
 double vr$10 = _ZN12SYSTEM_BUS_T5K_POWEdd( THIS$1, *(double*)P$1 + *(double*)((uint8*)P$1 + 8ll), 0x1.p-3 );
 fb$result$1 = vr$10;
 goto label$2219;
 label$2219:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7SDPLANEER7VECTOR3( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2220:;
 fb$result$1 = *(double*)((uint8*)P$1 + 24ll);
 goto label$2221;
 label$2221:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7SDPLANEER7VECTOR3S1_d( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR3* N$1, double H$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2222:;
 double vr$1 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, P$1, N$1 );
 fb$result$1 = vr$1 + H$1;
 goto label$2223;
 label$2223:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8SDSPHEREER7VECTOR3d( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, double S$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2224:;
 double vr$1 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR3( THIS$1, (struct $7VECTOR3*)P$1 );
 fb$result$1 = vr$1 - S$1;
 goto label$2225;
 label$2225:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5SDBOXER7VECTOR3S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR3* B$1 )
{
 struct $7VECTOR3 TMP$1859$1;
 struct $7VECTOR3 TMP$1860$1;
 struct $7VECTOR3 TMP$1861$1;
 double TMP$1862$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2226:;
 struct $7VECTOR3 Q$1;
 struct $7VECTOR3* vr$2 = _Zv13absRK7VECTOR3( &TMP$1859$1, (struct $7VECTOR3*)P$1 );
 struct $7VECTOR3* vr$4 = _ZmiR7VECTOR3S0_( &TMP$1860$1, vr$2, B$1 );
 _ZN7VECTOR3C1ERS_( &Q$1, vr$4 );
 TMP$1862$1 = 0x0p+0;
 struct $7VECTOR3* vr$9 = _ZN12SYSTEM_BUS_T5K_MAXER7VECTOR3Rd( &TMP$1861$1, THIS$1, &Q$1, &TMP$1862$1 );
 double vr$10 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR3( THIS$1, (struct $7VECTOR3*)vr$9 );
 double vr$11 = _ZN12SYSTEM_BUS_T5K_MAXEdd( THIS$1, *(double*)((uint8*)&Q$1 + 24ll), *(double*)((uint8*)&Q$1 + 32ll) );
 double vr$12 = _ZN12SYSTEM_BUS_T5K_MAXEdd( THIS$1, *(double*)((uint8*)&Q$1 + 16ll), vr$11 );
 double vr$13 = _ZN12SYSTEM_BUS_T5K_MINEdd( THIS$1, vr$12, 0x0p+0 );
 fb$result$1 = vr$10 + vr$13;
 goto label$2227;
 label$2227:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T11SDELLIPSOIDER7VECTOR3S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR3* R$1 )
{
 struct $7VECTOR3 TMP$1863$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2228:;
 struct $7VECTOR3* vr$2 = _ZdvR7VECTOR3S0_( &TMP$1863$1, P$1, R$1 );
 double vr$3 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR3( THIS$1, (struct $7VECTOR3*)vr$2 );
 double vr$8 = _ZN12SYSTEM_BUS_T5K_MINEdd( THIS$1, *(double*)((uint8*)R$1 + 16ll), *(double*)((uint8*)R$1 + 24ll) );
 double vr$9 = _ZN12SYSTEM_BUS_T5K_MINEdd( THIS$1, vr$8, *(double*)((uint8*)R$1 + 32ll) );
 fb$result$1 = (vr$3 + -0x1.p+0) * vr$9;
 goto label$2229;
 label$2229:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T10SDROUNDBOXER7VECTOR3S1_d( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR3* B$1, double R$1 )
{
 struct $7VECTOR3 TMP$1864$1;
 struct $7VECTOR3 TMP$1865$1;
 struct $7VECTOR3 TMP$1866$1;
 double TMP$1867$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2230:;
 struct $7VECTOR3 Q$1;
 struct $7VECTOR3* vr$2 = _Zv13absRK7VECTOR3( &TMP$1864$1, (struct $7VECTOR3*)P$1 );
 struct $7VECTOR3* vr$4 = _ZmiR7VECTOR3S0_( &TMP$1865$1, vr$2, B$1 );
 _ZN7VECTOR3C1ERS_( &Q$1, vr$4 );
 TMP$1867$1 = 0x0p+0;
 struct $7VECTOR3* vr$9 = _ZN12SYSTEM_BUS_T5K_MAXER7VECTOR3Rd( &TMP$1866$1, THIS$1, &Q$1, &TMP$1867$1 );
 double vr$10 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR3( THIS$1, (struct $7VECTOR3*)vr$9 );
 double vr$11 = _ZN12SYSTEM_BUS_T5K_MAXEdd( THIS$1, *(double*)((uint8*)&Q$1 + 24ll), *(double*)((uint8*)&Q$1 + 32ll) );
 double vr$12 = _ZN12SYSTEM_BUS_T5K_MAXEdd( THIS$1, *(double*)((uint8*)&Q$1 + 16ll), vr$11 );
 double vr$13 = _ZN12SYSTEM_BUS_T5K_MINEdd( THIS$1, vr$12, 0x0p+0 );
 fb$result$1 = (vr$10 + vr$13) - R$1;
 goto label$2231;
 label$2231:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T10UDROUNDBOXER7VECTOR3S1_d( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR3* B$1, double R$1 )
{
 struct $7VECTOR3 TMP$1868$1;
 struct $7VECTOR3 TMP$1869$1;
 struct $7VECTOR3 TMP$1870$1;
 double TMP$1871$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2232:;
 TMP$1871$1 = 0x0p+0;
 struct $7VECTOR3* vr$3 = _Zv13absRK7VECTOR3( &TMP$1868$1, (struct $7VECTOR3*)P$1 );
 struct $7VECTOR3* vr$5 = _ZmiR7VECTOR3S0_( &TMP$1869$1, vr$3, B$1 );
 struct $7VECTOR3* vr$7 = _ZN12SYSTEM_BUS_T5K_MAXER7VECTOR3Rd( &TMP$1870$1, THIS$1, vr$5, &TMP$1871$1 );
 double vr$8 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR3( THIS$1, (struct $7VECTOR3*)vr$7 );
 fb$result$1 = vr$8 - R$1;
 goto label$2233;
 label$2233:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7SDTORUSER7VECTOR3R7VECTOR2( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR2* T$1 )
{
 struct $7VECTOR2 TMP$1873$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2234:;
 struct $7VECTOR2 Q$1;
 struct $7VECTOR2* vr$3 = _ZN7VECTOR32XZEv( &TMP$1873$1, P$1 );
 double vr$4 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR2( THIS$1, (struct $7VECTOR2*)vr$3 );
 _ZN7VECTOR2C1Edd( &Q$1, vr$4 - *(double*)T$1, *(double*)((uint8*)P$1 + 24ll) );
 double vr$9 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR2( THIS$1, (struct $7VECTOR2*)&Q$1 );
 fb$result$1 = vr$9 - *(double*)((uint8*)T$1 + 8ll);
 goto label$2235;
 label$2235:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T13SDCAPPEDTORUSER7VECTOR3R7VECTOR2dd( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR2* SC$1, double RA$1, double RB$1 )
{
 struct $7VECTOR2 TMP$1874$1;
 struct $7VECTOR2 TMP$1875$1;
 double TMP$1876$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2236:;
 *(double*)((uint8*)P$1 + 16ll) = __builtin_fabs( *(double*)((uint8*)P$1 + 16ll) );
 double K$1;
 if( (*(double*)((uint8*)SC$1 + 8ll) * *(double*)((uint8*)P$1 + 16ll)) <= (*(double*)SC$1 * *(double*)((uint8*)P$1 + 24ll)) ) goto label$2238;
 struct $7VECTOR2* vr$11 = _ZN7VECTOR32XYEv( &TMP$1874$1, P$1 );
 double vr$12 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR2S1_( THIS$1, vr$11, SC$1 );
 TMP$1876$1 = vr$12;
 goto label$2239;
 label$2238:;
 struct $7VECTOR2* vr$14 = _ZN7VECTOR32XYEv( &TMP$1875$1, P$1 );
 double vr$15 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR2( THIS$1, (struct $7VECTOR2*)vr$14 );
 TMP$1876$1 = vr$15;
 label$2239:;
 K$1 = TMP$1876$1;
 double vr$16 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, P$1, P$1 );
 double vr$22 = _ZN12SYSTEM_BUS_T6K_SQRTEd( THIS$1, (vr$16 + (RA$1 * RA$1)) - ((RA$1 * K$1) * 0x1.p+1) );
 fb$result$1 = vr$22 - RB$1;
 goto label$2237;
 label$2237:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T9SDTORUS82ER7VECTOR3R7VECTOR2( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR2* T$1 )
{
 struct $7VECTOR2 TMP$1878$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2240:;
 struct $7VECTOR2 Q$1;
 struct $7VECTOR2* vr$3 = _ZN7VECTOR32XZEv( &TMP$1878$1, P$1 );
 double vr$4 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR2( THIS$1, (struct $7VECTOR2*)vr$3 );
 _ZN7VECTOR2C1Edd( &Q$1, vr$4 - *(double*)T$1, *(double*)((uint8*)P$1 + 24ll) );
 double vr$9 = _ZN12SYSTEM_BUS_T7LENGTH8ER7VECTOR2( THIS$1, &Q$1 );
 fb$result$1 = vr$9 - *(double*)((uint8*)T$1 + 8ll);
 goto label$2241;
 label$2241:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T9SDTORUS88ER7VECTOR3R7VECTOR2( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR2* T$1 )
{
 struct $7VECTOR2 TMP$1880$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2242:;
 struct $7VECTOR2 Q$1;
 struct $7VECTOR2* vr$3 = _ZN7VECTOR32XZEv( &TMP$1880$1, P$1 );
 double vr$4 = _ZN12SYSTEM_BUS_T7LENGTH8ER7VECTOR2( THIS$1, vr$3 );
 _ZN7VECTOR2C1Edd( &Q$1, vr$4 - *(double*)T$1, *(double*)((uint8*)P$1 + 24ll) );
 double vr$9 = _ZN12SYSTEM_BUS_T7LENGTH8ER7VECTOR2( THIS$1, &Q$1 );
 fb$result$1 = vr$9 - *(double*)((uint8*)T$1 + 8ll);
 goto label$2243;
 label$2243:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6SDLINKER7VECTOR3ddd( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, double LE$1, double R1$1, double R2$1 )
{
 struct $7VECTOR2 TMP$1882$1;
 struct $7VECTOR2 TMP$1883$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2244:;
 struct $7VECTOR3 Q$1;
 double vr$5 = _ZN12SYSTEM_BUS_T5K_MAXEdd( THIS$1, __builtin_fabs( *(double*)((uint8*)P$1 + 24ll) ) - LE$1, 0x0p+0 );
 _ZN7VECTOR3C1Eddd( &Q$1, *(double*)((uint8*)P$1 + 16ll), vr$5, *(double*)((uint8*)P$1 + 32ll) );
 struct $7VECTOR2* vr$10 = _ZN7VECTOR32XYEv( &TMP$1883$1, &Q$1 );
 double vr$11 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR2( THIS$1, (struct $7VECTOR2*)vr$10 );
 _ZN7VECTOR2C1Edd( &TMP$1882$1, vr$11 - R1$1, *(double*)((uint8*)&Q$1 + 32ll) );
 double vr$15 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR2( THIS$1, (struct $7VECTOR2*)&TMP$1882$1 );
 fb$result$1 = vr$15 - R2$1;
 goto label$2245;
 label$2245:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T10SDHEXPRISMER7VECTOR3R7VECTOR2( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR2* H$1 )
{
 struct $7VECTOR3 TMP$1884$1;
 struct $7VECTOR2 TMP$1885$1;
 struct $7VECTOR2 TMP$1886$1;
 double TMP$1887$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2246:;
 struct $7VECTOR3 Q$1;
 struct $7VECTOR3* vr$2 = _Zv13absRK7VECTOR3( &TMP$1884$1, (struct $7VECTOR3*)P$1 );
 _ZN7VECTOR3C1ERS_( &Q$1, vr$2 );
 double D1$1;
 D1$1 = *(double*)((uint8*)&Q$1 + 32ll) - *(double*)((uint8*)H$1 + 8ll);
 double D2$1;
 double vr$9 = _ZN12SYSTEM_BUS_T5K_MAXEdd( THIS$1, (*(double*)((uint8*)&Q$1 + 16ll) * 0x1.BB67A0F9096BCp-1) + (*(double*)((uint8*)&Q$1 + 24ll) * 0x1.p-1), *(double*)((uint8*)&Q$1 + 24ll) );
 D2$1 = vr$9 - *(double*)H$1;
 TMP$1887$1 = 0x0p+0;
 _ZN7VECTOR2C1Edd( &TMP$1885$1, D1$1, D2$1 );
 struct $7VECTOR2* vr$16 = _ZN12SYSTEM_BUS_T5K_MAXER7VECTOR2Rd( &TMP$1886$1, THIS$1, &TMP$1885$1, &TMP$1887$1 );
 double vr$17 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR2( THIS$1, (struct $7VECTOR2*)vr$16 );
 double vr$18 = _ZN12SYSTEM_BUS_T5K_MAXEdd( THIS$1, D1$1, D2$1 );
 double vr$19 = _ZN12SYSTEM_BUS_T5K_MINEdd( THIS$1, vr$18, 0x0p+0 );
 fb$result$1 = vr$17 + vr$19;
 goto label$2247;
 label$2247:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T9SDCAPSULEER7VECTOR3S1_S1_d( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR3* A$1, struct $7VECTOR3* B$1, double R$1 )
{
 struct $7VECTOR3 TMP$1888$1;
 struct $7VECTOR3 TMP$1889$1;
 struct $7VECTOR3 TMP$1890$1;
 struct $7VECTOR3 TMP$1891$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2248:;
 struct $7VECTOR3 PA$1;
 struct $7VECTOR3* vr$2 = _ZmiR7VECTOR3S0_( &TMP$1888$1, P$1, A$1 );
 _ZN7VECTOR3C1ERS_( &PA$1, vr$2 );
 struct $7VECTOR3 BA$1;
 struct $7VECTOR3* vr$5 = _ZmiR7VECTOR3S0_( &TMP$1889$1, B$1, A$1 );
 _ZN7VECTOR3C1ERS_( &BA$1, vr$5 );
 double H$1;
 double vr$9 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, &PA$1, &BA$1 );
 double vr$12 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, &BA$1, &BA$1 );
 double vr$14 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, vr$9 / vr$12, 0x0p+0, 0x1.p+0 );
 H$1 = vr$14;
 struct $7VECTOR3* vr$17 = _ZmlR7VECTOR3d( &TMP$1890$1, &BA$1, H$1 );
 struct $7VECTOR3* vr$20 = _ZmiR7VECTOR3S0_( &TMP$1891$1, &PA$1, vr$17 );
 double vr$21 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR3( THIS$1, (struct $7VECTOR3*)vr$20 );
 fb$result$1 = vr$21 - R$1;
 goto label$2249;
 label$2249:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T17SDVERTICALCAPSULEER7VECTOR3dd( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, double H$1, double R$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2250:;
 double vr$3 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, *(double*)((uint8*)P$1 + 24ll), 0x0p+0, H$1 );
 *(double*)((uint8*)P$1 + 24ll) = *(double*)((uint8*)P$1 + 24ll) - vr$3;
 double vr$6 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR3( THIS$1, (struct $7VECTOR3*)P$1 );
 fb$result$1 = vr$6 - R$1;
 goto label$2251;
 label$2251:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T10SDTRIPRISMER7VECTOR3R7VECTOR2( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR2* H$1 )
{
 struct $7VECTOR3 TMP$1892$1;
 struct $7VECTOR2 TMP$1893$1;
 struct $7VECTOR2 TMP$1894$1;
 double TMP$1895$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2252:;
 struct $7VECTOR3 Q$1;
 struct $7VECTOR3* vr$2 = _Zv13absRK7VECTOR3( &TMP$1892$1, (struct $7VECTOR3*)P$1 );
 _ZN7VECTOR3C1ERS_( &Q$1, vr$2 );
 double D1$1;
 D1$1 = *(double*)((uint8*)&Q$1 + 32ll) - *(double*)((uint8*)H$1 + 8ll);
 double D2$1;
 double vr$12 = _ZN12SYSTEM_BUS_T5K_MAXEdd( THIS$1, (*(double*)((uint8*)&Q$1 + 16ll) * 0x1.BB67A0F9096BCp-1) + (*(double*)((uint8*)P$1 + 24ll) * 0x1.p-1), -(*(double*)((uint8*)P$1 + 24ll)) );
 D2$1 = vr$12 - (*(double*)H$1 * 0x1.p-1);
 TMP$1895$1 = 0x0p+0;
 _ZN7VECTOR2C1Edd( &TMP$1893$1, D1$1, D2$1 );
 struct $7VECTOR2* vr$20 = _ZN12SYSTEM_BUS_T5K_MAXER7VECTOR2Rd( &TMP$1894$1, THIS$1, &TMP$1893$1, &TMP$1895$1 );
 double vr$21 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR2( THIS$1, (struct $7VECTOR2*)vr$20 );
 double vr$22 = _ZN12SYSTEM_BUS_T5K_MAXEdd( THIS$1, D1$1, D2$1 );
 double vr$23 = _ZN12SYSTEM_BUS_T5K_MINEdd( THIS$1, vr$22, 0x0p+0 );
 fb$result$1 = vr$21 + vr$23;
 goto label$2253;
 label$2253:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T11SDTRIPRISM2ER7VECTOR3R7VECTOR2( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR2* H$1 )
{
 struct $7VECTOR3 TMP$1896$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2254:;
 struct $7VECTOR3 Q$1;
 struct $7VECTOR3* vr$2 = _Zv13absRK7VECTOR3( &TMP$1896$1, (struct $7VECTOR3*)P$1 );
 _ZN7VECTOR3C1ERS_( &Q$1, vr$2 );
 double vr$10 = _ZN12SYSTEM_BUS_T5K_MAXEdd( THIS$1, (*(double*)((uint8*)&Q$1 + 16ll) * 0x1.BB67A0F9096BCp-1) + (*(double*)((uint8*)P$1 + 24ll) * 0x1.p-1), -(*(double*)((uint8*)P$1 + 24ll)) );
 double vr$16 = _ZN12SYSTEM_BUS_T5K_MAXEdd( THIS$1, *(double*)((uint8*)&Q$1 + 32ll) - *(double*)((uint8*)H$1 + 8ll), vr$10 - (*(double*)H$1 * 0x1.p-1) );
 fb$result$1 = vr$16;
 goto label$2255;
 label$2255:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T10SDCYLINDERER7VECTOR3R7VECTOR2( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR2* H$1 )
{
 struct $7VECTOR2 TMP$1897$1;
 struct $7VECTOR2 TMP$1898$1;
 struct $7VECTOR2 TMP$1899$1;
 struct $7VECTOR2 TMP$1900$1;
 struct $7VECTOR2 TMP$1901$1;
 double TMP$1902$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2256:;
 struct $7VECTOR2 D$1;
 struct $7VECTOR2* vr$3 = _ZN7VECTOR32XZEv( &TMP$1898$1, P$1 );
 double vr$4 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR2( THIS$1, (struct $7VECTOR2*)vr$3 );
 _ZN7VECTOR2C1Edd( &TMP$1897$1, vr$4, *(double*)((uint8*)P$1 + 24ll) );
 struct $7VECTOR2* vr$8 = _Zv13absRK7VECTOR2( &TMP$1899$1, (struct $7VECTOR2*)&TMP$1897$1 );
 struct $7VECTOR2* vr$10 = _ZmiR7VECTOR2S0_( &TMP$1900$1, vr$8, H$1 );
 _ZN7VECTOR2C1ERS_( &D$1, vr$10 );
 double vr$12 = _ZN12SYSTEM_BUS_T5K_MAXEdd( THIS$1, *(double*)&D$1, *(double*)((uint8*)&D$1 + 8ll) );
 double vr$13 = _ZN12SYSTEM_BUS_T5K_MINEdd( THIS$1, vr$12, 0x0p+0 );
 TMP$1902$1 = 0x0p+0;
 struct $7VECTOR2* vr$17 = _ZN12SYSTEM_BUS_T5K_MAXER7VECTOR2Rd( &TMP$1901$1, THIS$1, &D$1, &TMP$1902$1 );
 double vr$18 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR2( THIS$1, (struct $7VECTOR2*)vr$17 );
 fb$result$1 = vr$13 + vr$18;
 goto label$2257;
 label$2257:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T10SDCYLINDERER7VECTOR3S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR3* C$1 )
{
 struct $7VECTOR2 TMP$1903$1;
 struct $7VECTOR2 TMP$1904$1;
 struct $7VECTOR2 TMP$1905$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2258:;
 struct $7VECTOR2* vr$2 = _ZN7VECTOR32XYEv( &TMP$1904$1, C$1 );
 struct $7VECTOR2* vr$4 = _ZN7VECTOR32XZEv( &TMP$1903$1, P$1 );
 struct $7VECTOR2* vr$6 = _ZmiR7VECTOR2S0_( &TMP$1905$1, vr$4, vr$2 );
 double vr$7 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR2( THIS$1, (struct $7VECTOR2*)vr$6 );
 fb$result$1 = vr$7 - *(double*)((uint8*)C$1 + 32ll);
 goto label$2259;
 label$2259:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T11SDCYLINDER6ER7VECTOR3R7VECTOR2( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR2* H$1 )
{
 struct $7VECTOR2 TMP$1906$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2260:;
 struct $7VECTOR2* vr$6 = _ZN7VECTOR32XZEv( &TMP$1906$1, P$1 );
 double vr$7 = _ZN12SYSTEM_BUS_T7LENGTH6ER7VECTOR2( THIS$1, vr$6 );
 double vr$10 = _ZN12SYSTEM_BUS_T5K_MAXEdd( THIS$1, vr$7 - *(double*)H$1, __builtin_fabs( *(double*)((uint8*)P$1 + 24ll) ) - *(double*)((uint8*)H$1 + 8ll) );
 fb$result$1 = vr$10;
 goto label$2261;
 label$2261:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T16SDCAPPEDCYLINDERER7VECTOR3dd( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, double H$1, double R$1 )
{
 struct $7VECTOR2 TMP$1907$1;
 struct $7VECTOR2 TMP$1908$1;
 struct $7VECTOR2 TMP$1909$1;
 struct $7VECTOR2 TMP$1910$1;
 struct $7VECTOR2 TMP$1911$1;
 struct $7VECTOR2 TMP$1912$1;
 double TMP$1913$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2262:;
 struct $7VECTOR2 D$1;
 _ZN7VECTOR2C1Edd( &TMP$1910$1, H$1, R$1 );
 struct $7VECTOR2* vr$5 = _ZN7VECTOR32XZEv( &TMP$1908$1, P$1 );
 double vr$6 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR2( THIS$1, (struct $7VECTOR2*)vr$5 );
 _ZN7VECTOR2C1Edd( &TMP$1907$1, vr$6, *(double*)((uint8*)P$1 + 24ll) );
 struct $7VECTOR2* vr$10 = _Zv13absRK7VECTOR2( &TMP$1909$1, (struct $7VECTOR2*)&TMP$1907$1 );
 struct $7VECTOR2* vr$12 = _ZmiR7VECTOR2S0_( &TMP$1911$1, vr$10, &TMP$1910$1 );
 _ZN7VECTOR2C1ERS_( &D$1, vr$12 );
 double vr$14 = _ZN12SYSTEM_BUS_T5K_MAXEdd( THIS$1, *(double*)&D$1, *(double*)((uint8*)&D$1 + 8ll) );
 double vr$15 = _ZN12SYSTEM_BUS_T5K_MINEdd( THIS$1, vr$14, 0x0p+0 );
 TMP$1913$1 = 0x0p+0;
 struct $7VECTOR2* vr$19 = _ZN12SYSTEM_BUS_T5K_MAXER7VECTOR2Rd( &TMP$1912$1, THIS$1, &D$1, &TMP$1913$1 );
 double vr$20 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR2( THIS$1, (struct $7VECTOR2*)vr$19 );
 fb$result$1 = vr$15 + vr$20;
 goto label$2263;
 label$2263:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T16SDCAPPEDCYLINDERER7VECTOR3S1_S1_d( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR3* A$1, struct $7VECTOR3* B$1, double R$1 )
{
 struct $7VECTOR3 TMP$1914$1;
 struct $7VECTOR3 TMP$1915$1;
 struct $7VECTOR3 TMP$1916$1;
 struct $7VECTOR3 TMP$1917$1;
 struct $7VECTOR3 TMP$1918$1;
 double TMP$1919$1;
 double TMP$1920$1;
 double TMP$1921$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2264:;
 struct $7VECTOR3 BA$1;
 struct $7VECTOR3* vr$2 = _ZmiR7VECTOR3S0_( &TMP$1914$1, B$1, A$1 );
 _ZN7VECTOR3C1ERS_( &BA$1, vr$2 );
 struct $7VECTOR3 PA$1;
 struct $7VECTOR3* vr$5 = _ZmiR7VECTOR3S0_( &TMP$1915$1, P$1, A$1 );
 _ZN7VECTOR3C1ERS_( &PA$1, vr$5 );
 double BABA$1;
 double vr$9 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, &BA$1, &BA$1 );
 BABA$1 = vr$9;
 double PABA$1;
 double vr$12 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, &PA$1, &BA$1 );
 PABA$1 = vr$12;
 double X$1;
 struct $7VECTOR3* vr$15 = _ZmlR7VECTOR3d( &TMP$1917$1, &BA$1, PABA$1 );
 struct $7VECTOR3* vr$18 = _ZmlR7VECTOR3d( &TMP$1916$1, &PA$1, BABA$1 );
 struct $7VECTOR3* vr$20 = _ZmiR7VECTOR3S0_( &TMP$1918$1, vr$18, vr$15 );
 double vr$21 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR3( THIS$1, (struct $7VECTOR3*)vr$20 );
 X$1 = vr$21 - (R$1 * BABA$1);
 double Y$1;
 Y$1 = __builtin_fabs( (PABA$1 - (BABA$1 * 0x1.p-1)) ) - (BABA$1 * 0x1.p-1);
 double X2$1;
 X2$1 = X$1 * X$1;
 double Y2$1;
 Y2$1 = (Y$1 * Y$1) * BABA$1;
 double D$1;
 double vr$32 = _ZN12SYSTEM_BUS_T5K_MAXEdd( THIS$1, X$1, Y$1 );
 if( vr$32 >= 0x0p+0 ) goto label$2268;
 double vr$33 = _ZN12SYSTEM_BUS_T5K_MINEdd( THIS$1, X2$1, Y2$1 );
 TMP$1921$1 = -vr$33;
 goto label$2269;
 label$2268:;
 if( X$1 <= 0x0p+0 ) goto label$2266;
 TMP$1919$1 = X2$1;
 goto label$2270;
 label$2266:;
 TMP$1919$1 = 0x0p+0;
 label$2270:;
 if( Y$1 <= 0x0p+0 ) goto label$2267;
 TMP$1920$1 = Y2$1;
 goto label$2271;
 label$2267:;
 TMP$1920$1 = 0x0p+0;
 label$2271:;
 TMP$1921$1 = TMP$1919$1 + TMP$1920$1;
 label$2269:;
 D$1 = TMP$1921$1;
 double vr$36 = _ZN12SYSTEM_BUS_T6K_SIGNEd( THIS$1, D$1 );
 double vr$38 = _ZN12SYSTEM_BUS_T6K_SQRTEd( THIS$1, __builtin_fabs( D$1 ) );
 fb$result$1 = (vr$36 * vr$38) / BABA$1;
 goto label$2265;
 label$2265:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T17SDROUNDEDCYLINDERER7VECTOR3ddd( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, double RA$1, double RB$1, double H$1 )
{
 struct $7VECTOR2 TMP$1923$1;
 struct $7VECTOR2 TMP$1924$1;
 double TMP$1925$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2272:;
 struct $7VECTOR2 D$1;
 struct $7VECTOR2* vr$5 = _ZN7VECTOR32XZEv( &TMP$1923$1, P$1 );
 double vr$6 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR2( THIS$1, (struct $7VECTOR2*)vr$5 );
 _ZN7VECTOR2C1Edd( &D$1, (vr$6 - (RA$1 * 0x1.p+1)) + RB$1, __builtin_fabs( *(double*)((uint8*)P$1 + 24ll) ) - H$1 );
 double vr$11 = _ZN12SYSTEM_BUS_T5K_MAXEdd( THIS$1, *(double*)&D$1, *(double*)((uint8*)&D$1 + 8ll) );
 double vr$12 = _ZN12SYSTEM_BUS_T5K_MINEdd( THIS$1, vr$11, 0x0p+0 );
 TMP$1925$1 = 0x0p+0;
 struct $7VECTOR2* vr$16 = _ZN12SYSTEM_BUS_T5K_MAXER7VECTOR2Rd( &TMP$1924$1, THIS$1, &D$1, &TMP$1925$1 );
 double vr$17 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR2( THIS$1, (struct $7VECTOR2*)vr$16 );
 fb$result$1 = (vr$12 + vr$17) - RB$1;
 goto label$2273;
 label$2273:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6SDCONEER7VECTOR3S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR3* C$1 )
{
 struct $7VECTOR2 TMP$1927$1;
 struct $7VECTOR2 TMP$1928$1;
 struct $7VECTOR2 TMP$1929$1;
 struct $7VECTOR2 TMP$1930$1;
 double TMP$1931$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2274:;
 struct $7VECTOR2 Q$1;
 struct $7VECTOR2* vr$3 = _ZN7VECTOR32XZEv( &TMP$1927$1, P$1 );
 double vr$4 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR2( THIS$1, (struct $7VECTOR2*)vr$3 );
 _ZN7VECTOR2C1Edd( &Q$1, vr$4, *(double*)((uint8*)P$1 + 24ll) );
 double D1$1;
 D1$1 = -(*(double*)((uint8*)&Q$1 + 8ll)) - *(double*)((uint8*)C$1 + 32ll);
 double D2$1;
 struct $7VECTOR2* vr$10 = _ZN7VECTOR32XYEv( &TMP$1928$1, C$1 );
 double vr$12 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR2S1_( THIS$1, &Q$1, vr$10 );
 double vr$13 = _ZN12SYSTEM_BUS_T5K_MAXEdd( THIS$1, vr$12, *(double*)((uint8*)&Q$1 + 8ll) );
 D2$1 = vr$13;
 TMP$1931$1 = 0x0p+0;
 _ZN7VECTOR2C1Edd( &TMP$1929$1, D1$1, D2$1 );
 struct $7VECTOR2* vr$18 = _ZN12SYSTEM_BUS_T5K_MAXER7VECTOR2Rd( &TMP$1930$1, THIS$1, &TMP$1929$1, &TMP$1931$1 );
 double vr$19 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR2( THIS$1, (struct $7VECTOR2*)vr$18 );
 double vr$20 = _ZN12SYSTEM_BUS_T5K_MAXEdd( THIS$1, D1$1, D2$1 );
 double vr$21 = _ZN12SYSTEM_BUS_T5K_MINEdd( THIS$1, vr$20, 0x0p+0 );
 fb$result$1 = vr$19 + vr$21;
 goto label$2275;
 label$2275:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6SDCONEER7VECTOR3R7VECTOR2d( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR2* C$1, double H$1 )
{
 struct $7VECTOR2 TMP$1932$1;
 struct $7VECTOR2 TMP$1933$1;
 struct $7VECTOR2 TMP$1935$1;
 struct $7VECTOR2 TMP$1936$1;
 double TMP$1937$1;
 struct $7VECTOR2 TMP$1938$1;
 struct $7VECTOR2 TMP$1939$1;
 struct $7VECTOR2 TMP$1940$1;
 struct $7VECTOR2 TMP$1941$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2276:;
 struct $7VECTOR2 Q$1;
 _ZN7VECTOR2C1Edd( &TMP$1932$1, *(double*)C$1 / *(double*)((uint8*)C$1 + 8ll), -0x1.p+0 );
 struct $7VECTOR2* vr$8 = _ZmlRdR7VECTOR2( &TMP$1933$1, &H$1, &TMP$1932$1 );
 _ZN7VECTOR2C1ERS_( &Q$1, vr$8 );
 struct $7VECTOR2 W$1;
 struct $7VECTOR2* vr$12 = _ZN7VECTOR32XZEv( &TMP$1935$1, P$1 );
 double vr$13 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR2( THIS$1, (struct $7VECTOR2*)vr$12 );
 _ZN7VECTOR2C1Edd( &W$1, vr$13, *(double*)((uint8*)P$1 + 24ll) );
 struct $7VECTOR2 A$1;
 double vr$17 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR2S1_( THIS$1, &W$1, &Q$1 );
 double vr$20 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR2S1_( THIS$1, &Q$1, &Q$1 );
 double vr$22 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, vr$17 / vr$20, 0x0p+0, 0x1.p+0 );
 TMP$1937$1 = vr$22;
 struct $7VECTOR2* vr$26 = _ZmlR7VECTOR2Rd( &TMP$1936$1, &Q$1, &TMP$1937$1 );
 struct $7VECTOR2* vr$29 = _ZmiR7VECTOR2S0_( &TMP$1938$1, &W$1, vr$26 );
 _ZN7VECTOR2C1ERS_( &A$1, vr$29 );
 struct $7VECTOR2 B$1;
 double vr$32 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, *(double*)&W$1 / *(double*)&Q$1, 0x0p+0, 0x1.p+0 );
 _ZN7VECTOR2C1Edd( &TMP$1939$1, vr$32, 0x1.p+0 );
 struct $7VECTOR2* vr$37 = _ZmlR7VECTOR2S0_( &TMP$1940$1, &Q$1, &TMP$1939$1 );
 struct $7VECTOR2* vr$40 = _ZmiR7VECTOR2S0_( &TMP$1941$1, &W$1, vr$37 );
 _ZN7VECTOR2C1ERS_( &B$1, vr$40 );
 double K$1;
 double vr$42 = _ZN12SYSTEM_BUS_T6K_SIGNEd( THIS$1, *(double*)((uint8*)&Q$1 + 8ll) );
 K$1 = vr$42;
 double D$1;
 double vr$45 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR2S1_( THIS$1, &B$1, &B$1 );
 double vr$48 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR2S1_( THIS$1, &A$1, &A$1 );
 double vr$49 = _ZN12SYSTEM_BUS_T5K_MINEdd( THIS$1, vr$48, vr$45 );
 D$1 = vr$49;
 double S$1;
 double vr$56 = _ZN12SYSTEM_BUS_T5K_MAXEdd( THIS$1, K$1 * ((*(double*)&W$1 * *(double*)((uint8*)&Q$1 + 8ll)) - (*(double*)((uint8*)&W$1 + 8ll) * *(double*)&Q$1)), K$1 * (*(double*)((uint8*)&W$1 + 8ll) - *(double*)((uint8*)&Q$1 + 8ll)) );
 S$1 = vr$56;
 double vr$57 = _ZN12SYSTEM_BUS_T6K_SQRTEd( THIS$1, D$1 );
 double vr$58 = _ZN12SYSTEM_BUS_T6K_SIGNEd( THIS$1, S$1 );
 fb$result$1 = vr$57 * vr$58;
 goto label$2277;
 label$2277:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6SDCONEER7VECTOR3R7VECTOR2( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR2* C$1 )
{
 struct $7VECTOR2 TMP$1943$1;
 struct $7VECTOR2 TMP$1944$1;
 double TMP$1945$1;
 struct $7VECTOR2 TMP$1946$1;
 double TMP$1947$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2278:;
 struct $7VECTOR2 Q$1;
 struct $7VECTOR2* vr$4 = _ZN7VECTOR32XZEv( &TMP$1943$1, P$1 );
 double vr$5 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR2( THIS$1, (struct $7VECTOR2*)vr$4 );
 _ZN7VECTOR2C1Edd( &Q$1, vr$5, -(*(double*)((uint8*)P$1 + 24ll)) );
 double D$1;
 double vr$8 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR2S1_( THIS$1, &Q$1, C$1 );
 double vr$9 = _ZN12SYSTEM_BUS_T5K_MAXEdd( THIS$1, vr$8, 0x0p+0 );
 TMP$1945$1 = vr$9;
 struct $7VECTOR2* vr$12 = _ZmlR7VECTOR2Rd( &TMP$1944$1, C$1, &TMP$1945$1 );
 struct $7VECTOR2* vr$15 = _ZmiR7VECTOR2S0_( &TMP$1946$1, &Q$1, vr$12 );
 double vr$16 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR2( THIS$1, (struct $7VECTOR2*)vr$15 );
 D$1 = vr$16;
 if( ((*(double*)&Q$1 * *(double*)((uint8*)C$1 + 8ll)) - (*(double*)((uint8*)&Q$1 + 8ll) * *(double*)C$1)) >= 0x0p+0 ) goto label$2280;
 TMP$1947$1 = -0x1.p+0;
 goto label$2281;
 label$2280:;
 TMP$1947$1 = 0x1.p+0;
 label$2281:;
 fb$result$1 = D$1 * TMP$1947$1;
 goto label$2279;
 label$2279:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7SDCONE2ER7VECTOR3R7VECTOR2d( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR2* C$1, double H$1 )
{
 struct $7VECTOR2 TMP$1948$1;
 struct $7VECTOR2 TMP$1949$1;
 struct $7VECTOR2 TMP$1950$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2282:;
 double Q$1;
 struct $7VECTOR2* vr$2 = _ZN7VECTOR32XZEv( &TMP$1948$1, P$1 );
 double vr$3 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR2( THIS$1, (struct $7VECTOR2*)vr$2 );
 Q$1 = vr$3;
 _ZN7VECTOR2C1Edd( &TMP$1950$1, Q$1, *(double*)((uint8*)P$1 + 24ll) );
 struct $7VECTOR2* vr$11 = _ZN7VECTOR22XYEv( &TMP$1949$1, C$1 );
 double vr$12 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR2S1_( THIS$1, vr$11, &TMP$1950$1 );
 double vr$13 = _ZN12SYSTEM_BUS_T5K_MAXEdd( THIS$1, vr$12, -H$1 - *(double*)((uint8*)P$1 + 24ll) );
 fb$result$1 = vr$13;
 goto label$2283;
 label$2283:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7_SDCONEER7VECTOR3S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR3* C$1 )
{
 struct $7VECTOR2 TMP$1952$1;
 struct $7VECTOR2 TMP$1954$1;
 struct $7VECTOR2 TMP$1957$1;
 double TMP$1958$1;
 struct $7VECTOR2 TMP$1959$1;
 struct $7VECTOR2 TMP$1960$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2284:;
 struct $7VECTOR2 Q$1;
 struct $7VECTOR2* vr$3 = _ZN7VECTOR32XZEv( &TMP$1952$1, P$1 );
 double vr$4 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR2( THIS$1, (struct $7VECTOR2*)vr$3 );
 _ZN7VECTOR2C1Edd( &Q$1, vr$4, *(double*)((uint8*)P$1 + 24ll) );
 struct $7VECTOR2 V$1;
 _ZN7VECTOR2C1Edd( &V$1, (*(double*)((uint8*)C$1 + 32ll) * *(double*)((uint8*)C$1 + 24ll)) / *(double*)((uint8*)C$1 + 16ll), -(*(double*)((uint8*)C$1 + 32ll)) );
 struct $7VECTOR2 W$1;
 struct $7VECTOR2* vr$17 = _ZmiR7VECTOR2S0_( &TMP$1954$1, &V$1, &Q$1 );
 _ZN7VECTOR2C1ERS_( &W$1, vr$17 );
 struct $7VECTOR2 VV$1;
 double vr$22 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR2S1_( THIS$1, &V$1, &V$1 );
 _ZN7VECTOR2C1Edd( &VV$1, vr$22, *(double*)&V$1 * *(double*)&V$1 );
 struct $7VECTOR2 QV$1;
 double vr$27 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR2S1_( THIS$1, &V$1, &W$1 );
 _ZN7VECTOR2C1Edd( &QV$1, vr$27, *(double*)&V$1 * *(double*)&W$1 );
 struct $7VECTOR2 D$1;
 TMP$1958$1 = 0x0p+0;
 struct $7VECTOR2* vr$34 = _ZN12SYSTEM_BUS_T5K_MAXER7VECTOR2Rd( &TMP$1957$1, THIS$1, &QV$1, &TMP$1958$1 );
 struct $7VECTOR2* vr$36 = _ZmlR7VECTOR2S0_( &TMP$1959$1, vr$34, &QV$1 );
 struct $7VECTOR2* vr$38 = _ZdvR7VECTOR2S0_( &TMP$1960$1, vr$36, &VV$1 );
 _ZN7VECTOR2C1ERS_( &D$1, vr$38 );
 double vr$42 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR2S1_( THIS$1, &W$1, &W$1 );
 double vr$43 = _ZN12SYSTEM_BUS_T5K_MAXEdd( THIS$1, *(double*)&D$1, *(double*)((uint8*)&D$1 + 8ll) );
 double vr$45 = _ZN12SYSTEM_BUS_T6K_SQRTEd( THIS$1, vr$42 - vr$43 );
 double vr$49 = _ZN12SYSTEM_BUS_T5K_MAXEdd( THIS$1, (*(double*)((uint8*)&Q$1 + 8ll) * *(double*)&V$1) - (*(double*)&Q$1 * *(double*)((uint8*)&V$1 + 8ll)), *(double*)((uint8*)&W$1 + 8ll) );
 double vr$50 = _ZN12SYSTEM_BUS_T6K_SIGNEd( THIS$1, vr$49 );
 fb$result$1 = vr$45 * vr$50;
 goto label$2285;
 label$2285:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8SDCONEHQER7VECTOR3S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR3* C$1 )
{
 struct $7VECTOR2 TMP$1962$1;
 struct $7VECTOR2 TMP$1964$1;
 struct $7VECTOR2 TMP$1967$1;
 struct $7VECTOR2 TMP$1968$1;
 struct $7VECTOR2 TMP$1969$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2286:;
 struct $7VECTOR2 Q$1;
 struct $7VECTOR2* vr$3 = _ZN7VECTOR32XZEv( &TMP$1962$1, P$1 );
 double vr$4 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR2( THIS$1, (struct $7VECTOR2*)vr$3 );
 _ZN7VECTOR2C1Edd( &Q$1, vr$4, *(double*)((uint8*)P$1 + 24ll) );
 struct $7VECTOR2 V$1;
 _ZN7VECTOR2C1Edd( &V$1, (*(double*)((uint8*)C$1 + 32ll) * *(double*)((uint8*)C$1 + 24ll)) / *(double*)((uint8*)C$1 + 16ll), -(*(double*)((uint8*)C$1 + 32ll)) );
 double VVB$1;
 double vr$16 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR2S1_( THIS$1, &V$1, &V$1 );
 VVB$1 = vr$16;
 double QVB$1;
 struct $7VECTOR2* vr$20 = _ZmiR7VECTOR2S0_( &TMP$1964$1, &V$1, &Q$1 );
 double vr$22 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR2S1_( THIS$1, &V$1, vr$20 );
 QVB$1 = vr$22;
 double VVX$1;
 VVX$1 = *(double*)&V$1 * *(double*)&V$1;
 double QVX$1;
 QVX$1 = *(double*)&V$1 * (*(double*)&V$1 - *(double*)&Q$1);
 double HB$1;
 double vr$26 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, QVB$1, 0x0p+0, VVB$1 );
 HB$1 = vr$26;
 double HX$1;
 double vr$27 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, QVX$1, 0x0p+0, VVX$1 );
 HX$1 = vr$27;
 struct $7VECTOR2 D1$1;
 _ZN7VECTOR2C1Edd( &D1$1, (HB$1 * (HB$1 - (QVB$1 * 0x1.p+1))) / VVB$1, (*(double*)&Q$1 * *(double*)((uint8*)&V$1 + 8ll)) - (*(double*)((uint8*)&Q$1 + 8ll) * *(double*)&V$1) );
 struct $7VECTOR2 D2$1;
 _ZN7VECTOR2C1Edd( &D2$1, (HX$1 * (HX$1 - (QVX$1 * 0x1.p+1))) / VVX$1, *(double*)((uint8*)&Q$1 + 8ll) - *(double*)((uint8*)&V$1 + 8ll) );
 struct $7VECTOR2 D$1;
 struct $7VECTOR2* vr$45 = _ZN12SYSTEM_BUS_T5K_MINER7VECTOR2S1_( &TMP$1967$1, THIS$1, &D1$1, &D2$1 );
 _ZN7VECTOR2C1ERS_( &D$1, vr$45 );
 struct $7VECTOR2* vr$50 = _ZmiR7VECTOR2S0_( &TMP$1969$1, &V$1, &Q$1 );
 struct $7VECTOR2* vr$54 = _ZmiR7VECTOR2S0_( &TMP$1968$1, &V$1, &Q$1 );
 double vr$55 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR2S1_( THIS$1, vr$54, vr$50 );
 double vr$57 = _ZN12SYSTEM_BUS_T6K_SQRTEd( THIS$1, vr$55 + *(double*)&D$1 );
 double vr$59 = _ZN12SYSTEM_BUS_T6K_SIGNEd( THIS$1, *(double*)((uint8*)&D$1 + 8ll) );
 fb$result$1 = -vr$57 * vr$59;
 goto label$2287;
 label$2287:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T12SDCAPPEDCONEER7VECTOR3ddd( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, double H$1, double R1$1, double R2$1 )
{
 struct $7VECTOR2 TMP$1971$1;
 double TMP$1975$1;
 struct $7VECTOR2 TMP$1976$1;
 struct $7VECTOR2 TMP$1977$1;
 struct $7VECTOR2 TMP$1978$1;
 double TMP$1979$1;
 struct $7VECTOR2 TMP$1980$1;
 double TMP$1981$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2288:;
 struct $7VECTOR2 Q$1;
 struct $7VECTOR2* vr$3 = _ZN7VECTOR32XZEv( &TMP$1971$1, P$1 );
 double vr$4 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR2( THIS$1, (struct $7VECTOR2*)vr$3 );
 _ZN7VECTOR2C1Edd( &Q$1, vr$4, *(double*)((uint8*)P$1 + 24ll) );
 struct $7VECTOR2 K1$1;
 _ZN7VECTOR2C1Edd( &K1$1, R2$1, H$1 );
 struct $7VECTOR2 K2$1;
 _ZN7VECTOR2C1Edd( &K2$1, R2$1 - R1$1, H$1 * 0x1.p+1 );
 struct $7VECTOR2 CA$1;
 if( *(double*)((uint8*)&Q$1 + 8ll) >= 0x0p+0 ) goto label$2290;
 TMP$1975$1 = R1$1;
 goto label$2292;
 label$2290:;
 TMP$1975$1 = R2$1;
 label$2292:;
 double vr$12 = _ZN12SYSTEM_BUS_T5K_MINEdd( THIS$1, *(double*)&Q$1, TMP$1975$1 );
 _ZN7VECTOR2C1Edd( &CA$1, *(double*)&Q$1 - vr$12, __builtin_fabs( *(double*)((uint8*)&Q$1 + 8ll) ) - H$1 );
 struct $7VECTOR2 CB$1;
 struct $7VECTOR2* vr$19 = _ZmiR7VECTOR2S0_( &TMP$1977$1, &K1$1, &Q$1 );
 double vr$20 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR2S1_( THIS$1, vr$19, &K2$1 );
 double vr$23 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR2S1_( THIS$1, &K2$1, &K2$1 );
 double vr$25 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, vr$20 / vr$23, 0x0p+0, 0x1.p+0 );
 TMP$1979$1 = vr$25;
 struct $7VECTOR2* vr$29 = _ZmlR7VECTOR2Rd( &TMP$1978$1, &K2$1, &TMP$1979$1 );
 struct $7VECTOR2* vr$33 = _ZmiR7VECTOR2S0_( &TMP$1976$1, &Q$1, &K1$1 );
 struct $7VECTOR2* vr$35 = _ZplR7VECTOR2S0_( &TMP$1980$1, vr$33, vr$29 );
 _ZN7VECTOR2C1ERS_( &CB$1, vr$35 );
 double S$1;
 if( ((int64)-(*(double*)&CB$1 < 0x0p+0) & (int64)-(*(double*)((uint8*)&CA$1 + 8ll) < 0x0p+0)) == 0ll ) goto label$2291;
 TMP$1981$1 = -0x1.p+0;
 goto label$2293;
 label$2291:;
 TMP$1981$1 = 0x1.p+0;
 label$2293:;
 S$1 = TMP$1981$1;
 double vr$42 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR2S1_( THIS$1, &CB$1, &CB$1 );
 double vr$45 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR2S1_( THIS$1, &CA$1, &CA$1 );
 double vr$46 = _ZN12SYSTEM_BUS_T5K_MINEdd( THIS$1, vr$45, vr$42 );
 double vr$47 = _ZN12SYSTEM_BUS_T6K_SQRTEd( THIS$1, vr$46 );
 fb$result$1 = S$1 * vr$47;
 goto label$2289;
 label$2289:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T12SDCAPPEDCONEER7VECTOR3S1_S1_dd( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR3* A$1, struct $7VECTOR3* B$1, double RA$1, double RB$1 )
{
 struct $7VECTOR3 TMP$1982$1;
 struct $7VECTOR3 TMP$1983$1;
 struct $7VECTOR3 TMP$1984$1;
 struct $7VECTOR3 TMP$1985$1;
 struct $7VECTOR3 TMP$1986$1;
 struct $7VECTOR3 TMP$1987$1;
 double TMP$1988$1;
 double TMP$1989$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2294:;
 double RBA$1;
 RBA$1 = RB$1 - RA$1;
 double BABA$1;
 struct $7VECTOR3* vr$3 = _ZmiR7VECTOR3S0_( &TMP$1983$1, B$1, A$1 );
 struct $7VECTOR3* vr$5 = _ZmiR7VECTOR3S0_( &TMP$1982$1, B$1, A$1 );
 double vr$6 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, vr$5, vr$3 );
 BABA$1 = vr$6;
 double PAPA$1;
 struct $7VECTOR3* vr$8 = _ZmiR7VECTOR3S0_( &TMP$1985$1, P$1, A$1 );
 struct $7VECTOR3* vr$10 = _ZmiR7VECTOR3S0_( &TMP$1984$1, P$1, A$1 );
 double vr$11 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, vr$10, vr$8 );
 PAPA$1 = vr$11;
 double PABA$1;
 struct $7VECTOR3* vr$13 = _ZmiR7VECTOR3S0_( &TMP$1987$1, B$1, A$1 );
 struct $7VECTOR3* vr$15 = _ZmiR7VECTOR3S0_( &TMP$1986$1, P$1, A$1 );
 double vr$16 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, vr$15, vr$13 );
 PABA$1 = vr$16 / BABA$1;
 double X$1;
 double vr$21 = _ZN12SYSTEM_BUS_T6K_SQRTEd( THIS$1, PAPA$1 - ((PABA$1 * PABA$1) * BABA$1) );
 X$1 = vr$21;
 double CAX$1;
 if( PABA$1 >= 0x1.p-1 ) goto label$2296;
 TMP$1988$1 = RA$1;
 goto label$2298;
 label$2296:;
 TMP$1988$1 = RB$1;
 label$2298:;
 double vr$23 = _ZN12SYSTEM_BUS_T5K_MAXEdd( THIS$1, 0x0p+0, X$1 - TMP$1988$1 );
 CAX$1 = vr$23;
 double CAY$1;
 CAY$1 = __builtin_fabs( (PABA$1 + -0x1.p-1) ) + -0x1.p-1;
 double K$1;
 K$1 = (RBA$1 * RBA$1) + BABA$1;
 double F$1;
 double vr$34 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, ((RBA$1 * (X$1 - RA$1)) + (PABA$1 * BABA$1)) / K$1, 0x0p+0, 0x1.p+0 );
 F$1 = vr$34;
 double CBX$1;
 CBX$1 = (X$1 - RA$1) - (F$1 * RBA$1);
 double CBY$1;
 CBY$1 = PABA$1 - F$1;
 double S$1;
 if( ((int64)-(CBX$1 < 0x0p+0) & (int64)-(CAY$1 < 0x0p+0)) == 0ll ) goto label$2297;
 TMP$1989$1 = -0x1.p+0;
 goto label$2299;
 label$2297:;
 TMP$1989$1 = 0x1.p+0;
 label$2299:;
 S$1 = TMP$1989$1;
 double vr$50 = _ZN12SYSTEM_BUS_T5K_MINEdd( THIS$1, (CAX$1 * CAX$1) + ((CAY$1 * CAY$1) * BABA$1), (CBX$1 * CBX$1) + ((CBY$1 * CBY$1) * BABA$1) );
 double vr$51 = _ZN12SYSTEM_BUS_T6K_SQRTEd( THIS$1, vr$50 );
 fb$result$1 = S$1 * vr$51;
 goto label$2295;
 label$2295:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T13SDCONESECTIONER7VECTOR3ddd( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, double H$1, double R1$1, double R2$1 )
{
 struct $7VECTOR2 TMP$1990$1;
 struct $7VECTOR2 TMP$1991$1;
 struct $7VECTOR2 TMP$1992$1;
 struct $7VECTOR2 TMP$1993$1;
 double TMP$1994$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2300:;
 double D1$1;
 D1$1 = -(*(double*)((uint8*)P$1 + 24ll)) - H$1;
 double Q$1;
 Q$1 = *(double*)((uint8*)P$1 + 24ll) - H$1;
 double SI$1;
 SI$1 = ((R1$1 - R2$1) * 0x1.p-1) / H$1;
 double D2$1;
 struct $7VECTOR2* vr$10 = _ZN7VECTOR32XZEv( &TMP$1991$1, P$1 );
 struct $7VECTOR2* vr$12 = _ZN7VECTOR32XZEv( &TMP$1990$1, P$1 );
 double vr$13 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR2S1_( THIS$1, vr$12, vr$10 );
 double vr$18 = _ZN12SYSTEM_BUS_T6K_SQRTEd( THIS$1, vr$13 * (-(SI$1 * SI$1) + 0x1.p+0) );
 double vr$22 = _ZN12SYSTEM_BUS_T5K_MAXEdd( THIS$1, (vr$18 + (Q$1 * SI$1)) - R2$1, Q$1 );
 D2$1 = vr$22;
 TMP$1994$1 = 0x0p+0;
 _ZN7VECTOR2C1Edd( &TMP$1992$1, D1$1, D2$1 );
 struct $7VECTOR2* vr$27 = _ZN12SYSTEM_BUS_T5K_MAXER7VECTOR2Rd( &TMP$1993$1, THIS$1, &TMP$1992$1, &TMP$1994$1 );
 double vr$28 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR2( THIS$1, (struct $7VECTOR2*)vr$27 );
 double vr$29 = _ZN12SYSTEM_BUS_T5K_MAXEdd( THIS$1, D1$1, D2$1 );
 double vr$30 = _ZN12SYSTEM_BUS_T5K_MINEdd( THIS$1, vr$29, 0x0p+0 );
 fb$result$1 = vr$28 + vr$30;
 goto label$2301;
 label$2301:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T11SDROUNDCONEER7VECTOR3ddd( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, double R1$1, double R2$1, double H$1 )
{
 struct $7VECTOR2 TMP$1996$1;
 struct $7VECTOR2 TMP$1997$1;
 struct $7VECTOR2 TMP$2000$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2302:;
 double B$1;
 B$1 = (R1$1 - R2$1) / H$1;
 double A$1;
 double vr$6 = _ZN12SYSTEM_BUS_T6K_SQRTEd( THIS$1, -(B$1 * B$1) + 0x1.p+0 );
 A$1 = vr$6;
 struct $7VECTOR2 Q$1;
 struct $7VECTOR2* vr$9 = _ZN7VECTOR32XZEv( &TMP$1996$1, P$1 );
 double vr$10 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR2( THIS$1, (struct $7VECTOR2*)vr$9 );
 _ZN7VECTOR2C1Edd( &Q$1, vr$10, *(double*)((uint8*)P$1 + 24ll) );
 double K$1;
 _ZN7VECTOR2C1Edd( &TMP$1997$1, -B$1, A$1 );
 double vr$16 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR2S1_( THIS$1, &Q$1, &TMP$1997$1 );
 K$1 = vr$16;
 if( K$1 >= 0x0p+0 ) goto label$2305;
 {
  double vr$18 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR2( THIS$1, (struct $7VECTOR2*)&Q$1 );
  fb$result$1 = vr$18 - R1$1;
  goto label$2303;
  label$2305:;
 }
 if( K$1 <= (A$1 * H$1) ) goto label$2307;
 {
  struct $7VECTOR2 TMP$1998$2;
  struct $7VECTOR2 TMP$1999$2;
  _ZN7VECTOR2C1Edd( &TMP$1998$2, 0x0p+0, H$1 );
  struct $7VECTOR2* vr$25 = _ZmiR7VECTOR2S0_( &TMP$1999$2, &Q$1, &TMP$1998$2 );
  double vr$26 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR2( THIS$1, (struct $7VECTOR2*)vr$25 );
  fb$result$1 = vr$26 - R2$1;
  goto label$2303;
  label$2307:;
 }
 _ZN7VECTOR2C1Edd( &TMP$2000$1, A$1, B$1 );
 double vr$31 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR2S1_( THIS$1, &Q$1, &TMP$2000$1 );
 fb$result$1 = vr$31 - R1$1;
 goto label$2303;
 label$2303:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T12SDSOLIDANGLEER7VECTOR3R7VECTOR2d( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR2* C$1, double RA$1 )
{
 struct $7VECTOR2 TMP$2002$1;
 struct $7VECTOR2 TMP$2003$1;
 double TMP$2004$1;
 struct $7VECTOR2 TMP$2005$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2308:;
 struct $7VECTOR2 Q$1;
 struct $7VECTOR2* vr$3 = _ZN7VECTOR32XZEv( &TMP$2002$1, P$1 );
 double vr$4 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR2( THIS$1, (struct $7VECTOR2*)vr$3 );
 _ZN7VECTOR2C1Edd( &Q$1, vr$4, *(double*)((uint8*)P$1 + 24ll) );
 double L$1;
 double vr$7 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR2( THIS$1, (struct $7VECTOR2*)&Q$1 );
 L$1 = vr$7 - RA$1;
 double M$1;
 double vr$10 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR2S1_( THIS$1, &Q$1, C$1 );
 double vr$11 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, vr$10, 0x0p+0, RA$1 );
 TMP$2004$1 = vr$11;
 struct $7VECTOR2* vr$14 = _ZmlR7VECTOR2Rd( &TMP$2003$1, C$1, &TMP$2004$1 );
 struct $7VECTOR2* vr$17 = _ZmiR7VECTOR2S0_( &TMP$2005$1, &Q$1, vr$14 );
 double vr$18 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR2( THIS$1, (struct $7VECTOR2*)vr$17 );
 M$1 = vr$18;
 double vr$24 = _ZN12SYSTEM_BUS_T6K_SIGNEd( THIS$1, (*(double*)((uint8*)C$1 + 8ll) * *(double*)&Q$1) - (*(double*)C$1 * *(double*)((uint8*)&Q$1 + 8ll)) );
 double vr$26 = _ZN12SYSTEM_BUS_T5K_MAXEdd( THIS$1, L$1, M$1 * vr$24 );
 fb$result$1 = vr$26;
 goto label$2309;
 label$2309:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T11SDCUTSPHEREER7VECTOR3dd( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, double R$1, double H$1 )
{
 struct $7VECTOR2 TMP$2007$1;
 struct $7VECTOR2 TMP$2008$1;
 struct $7VECTOR2 TMP$2009$1;
 double TMP$2010$1;
 double TMP$2011$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2310:;
 double W$1;
 double vr$4 = _ZN12SYSTEM_BUS_T6K_SQRTEd( THIS$1, (R$1 * R$1) - (H$1 * H$1) );
 W$1 = vr$4;
 struct $7VECTOR2 Q$1;
 struct $7VECTOR2* vr$7 = _ZN7VECTOR32XZEv( &TMP$2007$1, P$1 );
 double vr$8 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR2( THIS$1, (struct $7VECTOR2*)vr$7 );
 _ZN7VECTOR2C1Edd( &Q$1, vr$8, *(double*)((uint8*)P$1 + 24ll) );
 double S$1;
 double vr$22 = _ZN12SYSTEM_BUS_T5K_MAXEdd( THIS$1, (((H$1 - R$1) * *(double*)&Q$1) * *(double*)&Q$1) + ((W$1 * W$1) * ((H$1 + R$1) - (*(double*)((uint8*)&Q$1 + 8ll) * 0x1.p+1))), (H$1 * *(double*)&Q$1) - (W$1 * *(double*)((uint8*)&Q$1 + 8ll)) );
 S$1 = vr$22;
 if( S$1 >= 0x0p+0 ) goto label$2313;
 double vr$24 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR2( THIS$1, (struct $7VECTOR2*)&Q$1 );
 TMP$2011$1 = vr$24 - R$1;
 goto label$2314;
 label$2313:;
 if( *(double*)&Q$1 >= W$1 ) goto label$2312;
 TMP$2010$1 = H$1 - *(double*)((uint8*)&Q$1 + 8ll);
 goto label$2315;
 label$2312:;
 _ZN7VECTOR2C1Edd( &TMP$2008$1, W$1, H$1 );
 struct $7VECTOR2* vr$31 = _ZmiR7VECTOR2S0_( &TMP$2009$1, &Q$1, &TMP$2008$1 );
 double vr$32 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR2( THIS$1, (struct $7VECTOR2*)vr$31 );
 TMP$2010$1 = vr$32;
 label$2315:;
 TMP$2011$1 = TMP$2010$1;
 label$2314:;
 fb$result$1 = TMP$2011$1;
 goto label$2311;
 label$2311:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T17SDCUTHOLLOWSPHEREER7VECTOR3ddd( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, double R$1, double H$1, double T$1 )
{
 struct $7VECTOR2 TMP$2013$1;
 struct $7VECTOR2 TMP$2014$1;
 struct $7VECTOR2 TMP$2015$1;
 double TMP$2016$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2316:;
 double W$1;
 double vr$4 = _ZN12SYSTEM_BUS_T6K_SQRTEd( THIS$1, (R$1 * R$1) - (H$1 * H$1) );
 W$1 = vr$4;
 struct $7VECTOR2 Q$1;
 struct $7VECTOR2* vr$7 = _ZN7VECTOR32XZEv( &TMP$2013$1, P$1 );
 double vr$8 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR2( THIS$1, (struct $7VECTOR2*)vr$7 );
 _ZN7VECTOR2C1Edd( &Q$1, vr$8, *(double*)((uint8*)P$1 + 24ll) );
 if( (H$1 * *(double*)&Q$1) >= (W$1 * *(double*)((uint8*)&Q$1 + 8ll)) ) goto label$2318;
 _ZN7VECTOR2C1Edd( &TMP$2014$1, W$1, H$1 );
 struct $7VECTOR2* vr$16 = _ZmiR7VECTOR2S0_( &TMP$2015$1, &Q$1, &TMP$2014$1 );
 double vr$17 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR2( THIS$1, (struct $7VECTOR2*)vr$16 );
 TMP$2016$1 = vr$17;
 goto label$2319;
 label$2318:;
 double vr$19 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR2( THIS$1, (struct $7VECTOR2*)&Q$1 );
 TMP$2016$1 = __builtin_fabs( (vr$19 - R$1) );
 label$2319:;
 fb$result$1 = TMP$2016$1 - T$1;
 goto label$2317;
 label$2317:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T11SDDEATHSTARER7VECTOR3ddd( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P2$1, double RA$1, double RB$1, double D$1 )
{
 struct $7VECTOR2 TMP$2018$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2320:;
 double A$1;
 A$1 = (((RA$1 * RA$1) - (RB$1 * RB$1)) + (D$1 * D$1)) / (D$1 * 0x1.p+1);
 double B$1;
 double vr$11 = _ZN12SYSTEM_BUS_T5K_MAXEdd( THIS$1, (RA$1 * RA$1) - (A$1 * A$1), 0x0p+0 );
 double vr$12 = _ZN12SYSTEM_BUS_T6K_SQRTEd( THIS$1, vr$11 );
 B$1 = vr$12;
 struct $7VECTOR2 P$1;
 struct $7VECTOR2* vr$14 = _ZN7VECTOR32YZEv( &TMP$2018$1, P2$1 );
 double vr$15 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR2( THIS$1, (struct $7VECTOR2*)vr$14 );
 _ZN7VECTOR2C1Edd( &P$1, *(double*)((uint8*)P2$1 + 16ll), vr$15 );
 double vr$22 = _ZN12SYSTEM_BUS_T5K_MAXEdd( THIS$1, B$1 - *(double*)((uint8*)&P$1 + 8ll), 0x0p+0 );
 if( ((*(double*)&P$1 * B$1) - (*(double*)((uint8*)&P$1 + 8ll) * A$1)) <= (D$1 * vr$22) ) goto label$2323;
 {
  struct $7VECTOR2 TMP$2019$2;
  struct $7VECTOR2 TMP$2020$2;
  _ZN7VECTOR2C1Edd( &TMP$2019$2, A$1, B$1 );
  struct $7VECTOR2* vr$28 = _ZmiR7VECTOR2S0_( &TMP$2020$2, &P$1, &TMP$2019$2 );
  double vr$29 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR2( THIS$1, (struct $7VECTOR2*)vr$28 );
  fb$result$1 = vr$29;
  goto label$2321;
 }
 goto label$2322;
 label$2323:;
 {
  struct $7VECTOR2 TMP$2021$2;
  struct $7VECTOR2 TMP$2022$2;
  _ZN7VECTOR2C1Edd( &TMP$2021$2, D$1, 0x0p+0 );
  struct $7VECTOR2* vr$34 = _ZmiR7VECTOR2S0_( &TMP$2022$2, &P$1, &TMP$2021$2 );
  double vr$35 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR2( THIS$1, (struct $7VECTOR2*)vr$34 );
  double vr$39 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR2( THIS$1, (struct $7VECTOR2*)&P$1 );
  double vr$41 = _ZN12SYSTEM_BUS_T5K_MAXEdd( THIS$1, vr$39 - RA$1, -(vr$35 - RB$1) );
  fb$result$1 = vr$41;
  goto label$2321;
 }
 label$2322:;
 label$2321:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T12SDWOBBLECUBEER7VECTOR3d( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, double S$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2324:;
 double vr$15 = _ZN12SYSTEM_BUS_T5K_MAXEdd( THIS$1, (__builtin_fabs( *(double*)((uint8*)P$1 + 16ll) ) - S$1) + (__builtin_sin( (*(double*)((uint8*)P$1 + 24ll) * 0x1.4p+3) ) * 0x1.999999999999Ap-5), __builtin_fabs( *(double*)((uint8*)P$1 + 24ll) ) - S$1 );
 double vr$16 = _ZN12SYSTEM_BUS_T5K_MAXEdd( THIS$1, vr$15, __builtin_fabs( *(double*)((uint8*)P$1 + 32ll) ) - S$1 );
 fb$result$1 = vr$16;
 goto label$2325;
 label$2325:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T10UDTRIANGLEER7VECTOR3S1_S1_S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR3* A$1, struct $7VECTOR3* B$1, struct $7VECTOR3* C$1 )
{
 struct $7VECTOR3 TMP$2023$1;
 struct $7VECTOR3 TMP$2024$1;
 struct $7VECTOR3 TMP$2025$1;
 struct $7VECTOR3 TMP$2026$1;
 struct $7VECTOR3 TMP$2027$1;
 struct $7VECTOR3 TMP$2028$1;
 struct $7VECTOR3 TMP$2029$1;
 struct $7VECTOR3 TMP$2030$1;
 struct $7VECTOR3 TMP$2031$1;
 struct $7VECTOR3 TMP$2032$1;
 struct $7VECTOR3 TMP$2033$1;
 struct $7VECTOR3 TMP$2034$1;
 struct $7VECTOR3 TMP$2035$1;
 struct $7VECTOR3 TMP$2036$1;
 struct $7VECTOR3 TMP$2037$1;
 struct $7VECTOR3 TMP$2038$1;
 struct $7VECTOR3 TMP$2039$1;
 struct $7VECTOR3 TMP$2040$1;
 struct $7VECTOR3 TMP$2041$1;
 struct $7VECTOR3 TMP$2042$1;
 struct $7VECTOR3 TMP$2043$1;
 struct $7VECTOR3 TMP$2044$1;
 double TMP$2045$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2326:;
 struct $7VECTOR3 BA$1;
 struct $7VECTOR3* vr$2 = _ZmiR7VECTOR3S0_( &TMP$2023$1, B$1, A$1 );
 _ZN7VECTOR3C1ERS_( &BA$1, vr$2 );
 struct $7VECTOR3 CB$1;
 struct $7VECTOR3* vr$5 = _ZmiR7VECTOR3S0_( &TMP$2024$1, C$1, B$1 );
 _ZN7VECTOR3C1ERS_( &CB$1, vr$5 );
 struct $7VECTOR3 AC$1;
 struct $7VECTOR3* vr$8 = _ZmiR7VECTOR3S0_( &TMP$2025$1, A$1, C$1 );
 _ZN7VECTOR3C1ERS_( &AC$1, vr$8 );
 struct $7VECTOR3 PA$1;
 struct $7VECTOR3* vr$11 = _ZmiR7VECTOR3S0_( &TMP$2026$1, P$1, A$1 );
 _ZN7VECTOR3C1ERS_( &PA$1, vr$11 );
 struct $7VECTOR3 PB$1;
 struct $7VECTOR3* vr$14 = _ZmiR7VECTOR3S0_( &TMP$2027$1, P$1, B$1 );
 _ZN7VECTOR3C1ERS_( &PB$1, vr$14 );
 struct $7VECTOR3 PC$1;
 struct $7VECTOR3* vr$17 = _ZmiR7VECTOR3S0_( &TMP$2028$1, P$1, C$1 );
 _ZN7VECTOR3C1ERS_( &PC$1, vr$17 );
 struct $7VECTOR3 NOR$1;
 struct $7VECTOR3* vr$22 = _ZN12SYSTEM_BUS_T7K_CROSSER7VECTOR3S1_( &TMP$2029$1, THIS$1, &BA$1, &AC$1 );
 _ZN7VECTOR3C1ERS_( &NOR$1, vr$22 );
 struct $7VECTOR3* vr$28 = _ZN12SYSTEM_BUS_T7K_CROSSER7VECTOR3S1_( &TMP$2030$1, THIS$1, &BA$1, &NOR$1 );
 double vr$29 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, vr$28, &PA$1 );
 double vr$30 = _ZN12SYSTEM_BUS_T6K_SIGNEd( THIS$1, vr$29 );
 struct $7VECTOR3* vr$35 = _ZN12SYSTEM_BUS_T7K_CROSSER7VECTOR3S1_( &TMP$2031$1, THIS$1, &CB$1, &NOR$1 );
 double vr$36 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, vr$35, &PB$1 );
 double vr$37 = _ZN12SYSTEM_BUS_T6K_SIGNEd( THIS$1, vr$36 );
 struct $7VECTOR3* vr$43 = _ZN12SYSTEM_BUS_T7K_CROSSER7VECTOR3S1_( &TMP$2032$1, THIS$1, &AC$1, &NOR$1 );
 double vr$44 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, vr$43, &PC$1 );
 double vr$45 = _ZN12SYSTEM_BUS_T6K_SIGNEd( THIS$1, vr$44 );
 if( ((vr$30 + vr$37) + vr$45) >= 0x1.p+1 ) goto label$2328;
 double vr$50 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, &AC$1, &PC$1 );
 double vr$53 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, &AC$1, &AC$1 );
 double vr$55 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, vr$50 / vr$53, 0x0p+0, 0x1.p+0 );
 struct $7VECTOR3* vr$58 = _ZmlR7VECTOR3d( &TMP$2043$1, &AC$1, vr$55 );
 struct $7VECTOR3* vr$60 = _ZmiR7VECTOR3S0_( &TMP$2044$1, vr$58, &PC$1 );
 double vr$64 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, &AC$1, &PC$1 );
 double vr$67 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, &AC$1, &AC$1 );
 double vr$69 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, vr$64 / vr$67, 0x0p+0, 0x1.p+0 );
 struct $7VECTOR3* vr$72 = _ZmlR7VECTOR3d( &TMP$2041$1, &AC$1, vr$69 );
 struct $7VECTOR3* vr$74 = _ZmiR7VECTOR3S0_( &TMP$2042$1, vr$72, &PC$1 );
 double vr$75 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, vr$74, vr$60 );
 double vr$79 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, &CB$1, &PB$1 );
 double vr$82 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, &CB$1, &CB$1 );
 double vr$84 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, vr$79 / vr$82, 0x0p+0, 0x1.p+0 );
 struct $7VECTOR3* vr$87 = _ZmlR7VECTOR3d( &TMP$2039$1, &CB$1, vr$84 );
 struct $7VECTOR3* vr$89 = _ZmiR7VECTOR3S0_( &TMP$2040$1, vr$87, &PB$1 );
 double vr$93 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, &CB$1, &PB$1 );
 double vr$96 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, &CB$1, &CB$1 );
 double vr$98 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, vr$93 / vr$96, 0x0p+0, 0x1.p+0 );
 struct $7VECTOR3* vr$101 = _ZmlR7VECTOR3d( &TMP$2037$1, &CB$1, vr$98 );
 struct $7VECTOR3* vr$103 = _ZmiR7VECTOR3S0_( &TMP$2038$1, vr$101, &PB$1 );
 double vr$104 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, vr$103, vr$89 );
 double vr$108 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, &BA$1, &PA$1 );
 double vr$111 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, &BA$1, &BA$1 );
 double vr$113 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, vr$108 / vr$111, 0x0p+0, 0x1.p+0 );
 struct $7VECTOR3* vr$116 = _ZmlR7VECTOR3d( &TMP$2035$1, &BA$1, vr$113 );
 struct $7VECTOR3* vr$118 = _ZmiR7VECTOR3S0_( &TMP$2036$1, vr$116, &PA$1 );
 double vr$122 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, &BA$1, &PA$1 );
 double vr$125 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, &BA$1, &BA$1 );
 double vr$127 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, vr$122 / vr$125, 0x0p+0, 0x1.p+0 );
 struct $7VECTOR3* vr$130 = _ZmlR7VECTOR3d( &TMP$2033$1, &BA$1, vr$127 );
 struct $7VECTOR3* vr$132 = _ZmiR7VECTOR3S0_( &TMP$2034$1, vr$130, &PA$1 );
 double vr$133 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, vr$132, vr$118 );
 double vr$134 = _ZN12SYSTEM_BUS_T5K_MINEdd( THIS$1, vr$133, vr$104 );
 double vr$135 = _ZN12SYSTEM_BUS_T5K_MINEdd( THIS$1, vr$134, vr$75 );
 TMP$2045$1 = vr$135;
 goto label$2329;
 label$2328:;
 double vr$138 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, &NOR$1, &PA$1 );
 double vr$141 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, &NOR$1, &PA$1 );
 double vr$145 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, &NOR$1, &NOR$1 );
 TMP$2045$1 = (vr$138 * vr$141) / vr$145;
 label$2329:;
 double vr$147 = _ZN12SYSTEM_BUS_T6K_SQRTEd( THIS$1, TMP$2045$1 );
 fb$result$1 = vr$147;
 goto label$2327;
 label$2327:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6UDQUADER7VECTOR3S1_S1_S1_S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR3* A$1, struct $7VECTOR3* B$1, struct $7VECTOR3* C$1, struct $7VECTOR3* D$1 )
{
 struct $7VECTOR3 TMP$2046$1;
 struct $7VECTOR3 TMP$2047$1;
 struct $7VECTOR3 TMP$2048$1;
 struct $7VECTOR3 TMP$2049$1;
 struct $7VECTOR3 TMP$2050$1;
 struct $7VECTOR3 TMP$2051$1;
 struct $7VECTOR3 TMP$2052$1;
 struct $7VECTOR3 TMP$2053$1;
 struct $7VECTOR3 TMP$2054$1;
 struct $7VECTOR3 TMP$2055$1;
 struct $7VECTOR3 TMP$2056$1;
 struct $7VECTOR3 TMP$2057$1;
 struct $7VECTOR3 TMP$2058$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2330:;
 struct $7VECTOR3 BA$1;
 struct $7VECTOR3* vr$2 = _ZmiR7VECTOR3S0_( &TMP$2046$1, B$1, A$1 );
 _ZN7VECTOR3C1ERS_( &BA$1, vr$2 );
 struct $7VECTOR3 PA$1;
 struct $7VECTOR3* vr$5 = _ZmiR7VECTOR3S0_( &TMP$2047$1, P$1, A$1 );
 _ZN7VECTOR3C1ERS_( &PA$1, vr$5 );
 struct $7VECTOR3 CB$1;
 struct $7VECTOR3* vr$8 = _ZmiR7VECTOR3S0_( &TMP$2048$1, C$1, B$1 );
 _ZN7VECTOR3C1ERS_( &CB$1, vr$8 );
 struct $7VECTOR3 PB$1;
 struct $7VECTOR3* vr$11 = _ZmiR7VECTOR3S0_( &TMP$2049$1, P$1, B$1 );
 _ZN7VECTOR3C1ERS_( &PB$1, vr$11 );
 struct $7VECTOR3 DC$1;
 struct $7VECTOR3* vr$14 = _ZmiR7VECTOR3S0_( &TMP$2050$1, D$1, C$1 );
 _ZN7VECTOR3C1ERS_( &DC$1, vr$14 );
 struct $7VECTOR3 PC$1;
 struct $7VECTOR3* vr$17 = _ZmiR7VECTOR3S0_( &TMP$2051$1, P$1, C$1 );
 _ZN7VECTOR3C1ERS_( &PC$1, vr$17 );
 struct $7VECTOR3 AD$1;
 struct $7VECTOR3* vr$20 = _ZmiR7VECTOR3S0_( &TMP$2052$1, A$1, D$1 );
 _ZN7VECTOR3C1ERS_( &AD$1, vr$20 );
 struct $7VECTOR3 PD$1;
 struct $7VECTOR3* vr$23 = _ZmiR7VECTOR3S0_( &TMP$2053$1, P$1, D$1 );
 _ZN7VECTOR3C1ERS_( &PD$1, vr$23 );
 struct $7VECTOR3 NOR$1;
 struct $7VECTOR3* vr$28 = _ZN12SYSTEM_BUS_T7K_CROSSER7VECTOR3S1_( &TMP$2054$1, THIS$1, &BA$1, &AD$1 );
 _ZN7VECTOR3C1ERS_( &NOR$1, vr$28 );
 double S$1;
 struct $7VECTOR3* vr$34 = _ZN12SYSTEM_BUS_T7K_CROSSER7VECTOR3S1_( &TMP$2055$1, THIS$1, &BA$1, &NOR$1 );
 double vr$35 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, vr$34, &PA$1 );
 double vr$36 = _ZN12SYSTEM_BUS_T6K_SIGNEd( THIS$1, vr$35 );
 struct $7VECTOR3* vr$41 = _ZN12SYSTEM_BUS_T7K_CROSSER7VECTOR3S1_( &TMP$2056$1, THIS$1, &CB$1, &NOR$1 );
 double vr$42 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, vr$41, &PB$1 );
 double vr$43 = _ZN12SYSTEM_BUS_T6K_SIGNEd( THIS$1, vr$42 );
 struct $7VECTOR3* vr$49 = _ZN12SYSTEM_BUS_T7K_CROSSER7VECTOR3S1_( &TMP$2057$1, THIS$1, &DC$1, &NOR$1 );
 double vr$50 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, vr$49, &PC$1 );
 double vr$51 = _ZN12SYSTEM_BUS_T6K_SIGNEd( THIS$1, vr$50 );
 struct $7VECTOR3* vr$57 = _ZN12SYSTEM_BUS_T7K_CROSSER7VECTOR3S1_( &TMP$2058$1, THIS$1, &AD$1, &NOR$1 );
 double vr$58 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, vr$57, &PD$1 );
 double vr$59 = _ZN12SYSTEM_BUS_T6K_SIGNEd( THIS$1, vr$58 );
 S$1 = ((vr$36 + vr$43) + vr$51) + vr$59;
 if( S$1 >= 0x1.8p+1 ) goto label$2333;
 {
  struct $7VECTOR3 TMP$2059$2;
  struct $7VECTOR3 TMP$2060$2;
  struct $7VECTOR3 TMP$2061$2;
  struct $7VECTOR3 TMP$2062$2;
  struct $7VECTOR3 TMP$2063$2;
  struct $7VECTOR3 TMP$2064$2;
  struct $7VECTOR3 TMP$2065$2;
  struct $7VECTOR3 TMP$2066$2;
  struct $7VECTOR3 TMP$2067$2;
  struct $7VECTOR3 TMP$2068$2;
  struct $7VECTOR3 TMP$2069$2;
  struct $7VECTOR3 TMP$2070$2;
  struct $7VECTOR3 TMP$2071$2;
  struct $7VECTOR3 TMP$2072$2;
  struct $7VECTOR3 TMP$2073$2;
  struct $7VECTOR3 TMP$2074$2;
  double vr$64 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, &AD$1, &PD$1 );
  double vr$67 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, &AD$1, &AD$1 );
  double vr$69 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, vr$64 / vr$67, 0x0p+0, 0x1.p+0 );
  struct $7VECTOR3* vr$72 = _ZmlR7VECTOR3d( &TMP$2073$2, &AD$1, vr$69 );
  struct $7VECTOR3* vr$74 = _ZmiR7VECTOR3S0_( &TMP$2074$2, vr$72, &PD$1 );
  double vr$78 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, &AD$1, &PD$1 );
  double vr$81 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, &AD$1, &AD$1 );
  double vr$83 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, vr$78 / vr$81, 0x0p+0, 0x1.p+0 );
  struct $7VECTOR3* vr$86 = _ZmlR7VECTOR3d( &TMP$2071$2, &AD$1, vr$83 );
  struct $7VECTOR3* vr$88 = _ZmiR7VECTOR3S0_( &TMP$2072$2, vr$86, &PD$1 );
  double vr$89 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, vr$88, vr$74 );
  double vr$93 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, &DC$1, &PC$1 );
  double vr$96 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, &DC$1, &DC$1 );
  double vr$98 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, vr$93 / vr$96, 0x0p+0, 0x1.p+0 );
  struct $7VECTOR3* vr$101 = _ZmlR7VECTOR3d( &TMP$2069$2, &DC$1, vr$98 );
  struct $7VECTOR3* vr$103 = _ZmiR7VECTOR3S0_( &TMP$2070$2, vr$101, &PC$1 );
  double vr$107 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, &DC$1, &PC$1 );
  double vr$110 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, &DC$1, &DC$1 );
  double vr$112 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, vr$107 / vr$110, 0x0p+0, 0x1.p+0 );
  struct $7VECTOR3* vr$115 = _ZmlR7VECTOR3d( &TMP$2067$2, &DC$1, vr$112 );
  struct $7VECTOR3* vr$117 = _ZmiR7VECTOR3S0_( &TMP$2068$2, vr$115, &PC$1 );
  double vr$118 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, vr$117, vr$103 );
  double vr$122 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, &CB$1, &PB$1 );
  double vr$125 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, &CB$1, &CB$1 );
  double vr$127 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, vr$122 / vr$125, 0x0p+0, 0x1.p+0 );
  struct $7VECTOR3* vr$130 = _ZmlR7VECTOR3d( &TMP$2065$2, &CB$1, vr$127 );
  struct $7VECTOR3* vr$132 = _ZmiR7VECTOR3S0_( &TMP$2066$2, vr$130, &PB$1 );
  double vr$136 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, &CB$1, &PB$1 );
  double vr$139 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, &CB$1, &CB$1 );
  double vr$141 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, vr$136 / vr$139, 0x0p+0, 0x1.p+0 );
  struct $7VECTOR3* vr$144 = _ZmlR7VECTOR3d( &TMP$2063$2, &CB$1, vr$141 );
  struct $7VECTOR3* vr$146 = _ZmiR7VECTOR3S0_( &TMP$2064$2, vr$144, &PB$1 );
  double vr$147 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, vr$146, vr$132 );
  double vr$151 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, &BA$1, &PA$1 );
  double vr$154 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, &BA$1, &BA$1 );
  double vr$156 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, vr$151 / vr$154, 0x0p+0, 0x1.p+0 );
  struct $7VECTOR3* vr$159 = _ZmlR7VECTOR3d( &TMP$2061$2, &BA$1, vr$156 );
  struct $7VECTOR3* vr$161 = _ZmiR7VECTOR3S0_( &TMP$2062$2, vr$159, &PA$1 );
  double vr$165 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, &BA$1, &PA$1 );
  double vr$168 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, &BA$1, &BA$1 );
  double vr$170 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, vr$165 / vr$168, 0x0p+0, 0x1.p+0 );
  struct $7VECTOR3* vr$173 = _ZmlR7VECTOR3d( &TMP$2059$2, &BA$1, vr$170 );
  struct $7VECTOR3* vr$175 = _ZmiR7VECTOR3S0_( &TMP$2060$2, vr$173, &PA$1 );
  double vr$176 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, vr$175, vr$161 );
  double vr$177 = _ZN12SYSTEM_BUS_T5K_MINEdd( THIS$1, vr$176, vr$147 );
  double vr$178 = _ZN12SYSTEM_BUS_T5K_MINEdd( THIS$1, vr$177, vr$118 );
  double vr$179 = _ZN12SYSTEM_BUS_T5K_MINEdd( THIS$1, vr$178, vr$89 );
  double vr$180 = _ZN12SYSTEM_BUS_T6K_SQRTEd( THIS$1, vr$179 );
  fb$result$1 = vr$180;
  goto label$2331;
  label$2333:;
 }
 double vr$183 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, &NOR$1, &PA$1 );
 double vr$186 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, &NOR$1, &PA$1 );
 double vr$190 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, &NOR$1, &NOR$1 );
 double vr$192 = _ZN12SYSTEM_BUS_T6K_SQRTEd( THIS$1, (vr$183 * vr$186) / vr$190 );
 fb$result$1 = vr$192;
 goto label$2331;
 label$2331:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T3OPSEdd( struct $12SYSTEM_BUS_T* THIS$1, double D1$1, double D2$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2334:;
 double vr$2 = _ZN12SYSTEM_BUS_T5K_MAXEdd( THIS$1, -D2$1, D1$1 );
 fb$result$1 = vr$2;
 goto label$2335;
 label$2335:;
 return fb$result$1;
}

struct $7VECTOR2* _ZN12SYSTEM_BUS_T3OPUER7VECTOR2S1_( struct $7VECTOR2* tmp$2075$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR2* D1$1, struct $7VECTOR2* D2$1 )
{
 struct $7VECTOR2 TMP$2076$1;
 label$2336:;
 if( *(double*)D1$1 >= *(double*)D2$1 ) goto label$2338;
 _ZN7VECTOR2C1ERS_( &TMP$2076$1, D1$1 );
 goto label$2339;
 label$2338:;
 _ZN7VECTOR2C1ERS_( &TMP$2076$1, D2$1 );
 label$2339:;
 _ZN7VECTOR2C1ERS_( tmp$2075$1, &TMP$2076$1 );
 goto label$2337;
 label$2337:;
 return tmp$2075$1;
}

double _ZN12SYSTEM_BUS_T3OPIEdd( struct $12SYSTEM_BUS_T* THIS$1, double D1$1, double D2$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2340:;
 double vr$1 = _ZN12SYSTEM_BUS_T5K_MAXEdd( THIS$1, D1$1, D2$1 );
 fb$result$1 = vr$1;
 goto label$2341;
 label$2341:;
 return fb$result$1;
}

struct $7VECTOR3* _ZN12SYSTEM_BUS_T5OPREPER7VECTOR3S1_( struct $7VECTOR3* tmp$2077$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR3* C$1 )
{
 struct $7VECTOR3 TMP$2078$1;
 struct $7VECTOR3 TMP$2079$1;
 struct $7VECTOR3 TMP$2080$1;
 label$2342:;
 struct $7VECTOR3* vr$1 = _ZmlR7VECTOR3d( &TMP$2079$1, C$1, 0x1.p-1 );
 struct $7VECTOR3* vr$3 = _ZN12SYSTEM_BUS_T8K_MODULOER7VECTOR3S1_( &TMP$2078$1, THIS$1, P$1, C$1 );
 struct $7VECTOR3* vr$5 = _ZmiR7VECTOR3S0_( &TMP$2080$1, vr$3, vr$1 );
 _ZN7VECTOR3C1ERS_( tmp$2077$1, vr$5 );
 goto label$2343;
 label$2343:;
 return tmp$2077$1;
}

double _ZN12SYSTEM_BUS_T7EXPSMINEddd( struct $12SYSTEM_BUS_T* THIS$1, double A$1, double B$1, double K$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2344:;
 double RES$1;
 double vr$3 = _ZN12SYSTEM_BUS_T5K_EXPEd( THIS$1, -K$1 * A$1 );
 double vr$6 = _ZN12SYSTEM_BUS_T5K_EXPEd( THIS$1, -K$1 * B$1 );
 RES$1 = vr$3 + vr$6;
 double vr$8 = _ZN12SYSTEM_BUS_T5K_LOGEd( THIS$1, RES$1 );
 fb$result$1 = -vr$8 / K$1;
 goto label$2345;
 label$2345:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8POLYSMINEddd( struct $12SYSTEM_BUS_T* THIS$1, double A$1, double B$1, double K$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2346:;
 double H$1;
 double vr$5 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, (((B$1 - A$1) * 0x1.p-1) / K$1) + 0x1.p-1, 0x0p+0, 0x1.p+0 );
 H$1 = vr$5;
 double vr$6 = _ZN12SYSTEM_BUS_T5K_MIXEddd( THIS$1, B$1, A$1, H$1 );
 fb$result$1 = vr$6 - ((K$1 * H$1) * (0x1.p+0 - H$1));
 goto label$2347;
 label$2347:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7POWSMINEddd( struct $12SYSTEM_BUS_T* THIS$1, double A$1, double B$1, double K$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2348:;
 double vr$1 = _ZN12SYSTEM_BUS_T5K_POWEdd( THIS$1, A$1, K$1 );
 A$1 = vr$1;
 double vr$2 = _ZN12SYSTEM_BUS_T5K_POWEdd( THIS$1, B$1, K$1 );
 B$1 = vr$2;
 double vr$7 = _ZN12SYSTEM_BUS_T5K_POWEdd( THIS$1, (A$1 * B$1) / (A$1 + B$1), 0x1.p+0 / K$1 );
 fb$result$1 = vr$7;
 goto label$2349;
 label$2349:;
 return fb$result$1;
}

struct $7VECTOR3* _ZN12SYSTEM_BUS_T7OPTWISTER7VECTOR3( struct $7VECTOR3* tmp$2081$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1 )
{
 struct $7VECTOR2 TMP$2084$1;
 struct $7VECTOR2 TMP$2085$1;
 label$2350:;
 double C$1;
 C$1 = __builtin_cos( ((*(double*)((uint8*)P$1 + 24ll) * 0x1.4p+3) + 0x1.4p+3) );
 double S$1;
 S$1 = __builtin_sin( ((*(double*)((uint8*)P$1 + 24ll) * 0x1.4p+3) + 0x1.4p+3) );
 struct $4MAT2 M$1;
 _ZN4MAT2C1Edddd( &M$1, C$1, -S$1, S$1, C$1 );
 struct $7VECTOR2* vr$12 = _ZN7VECTOR32XZEv( &TMP$2084$1, P$1 );
 struct $7VECTOR2* vr$15 = _ZmlR4MAT2R7VECTOR2( &TMP$2085$1, &M$1, vr$12 );
 _ZN7VECTOR3C1ER7VECTOR2d( tmp$2081$1, vr$15, *(double*)((uint8*)P$1 + 24ll) );
 goto label$2351;
 label$2351:;
 return tmp$2081$1;
}

struct $7VECTOR2* _ZN12SYSTEM_BUS_T3MAPER7VECTOR3( struct $7VECTOR2* tmp$2086$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P3$1 )
{
 struct $7VECTOR2 TMP$2087$1;
 struct $7VECTOR2 TMP$2088$1;
 struct $7VECTOR2 TMP$2089$1;
 struct $7VECTOR3 TMP$2090$1;
 struct $7VECTOR3 TMP$2091$1;
 struct $7VECTOR2 TMP$2092$1;
 struct $7VECTOR2 TMP$2093$1;
 struct $7VECTOR3 TMP$2094$1;
 struct $7VECTOR3 TMP$2095$1;
 struct $7VECTOR3 TMP$2096$1;
 struct $7VECTOR2 TMP$2097$1;
 struct $7VECTOR2 TMP$2098$1;
 struct $7VECTOR3 TMP$2099$1;
 struct $7VECTOR3 TMP$2100$1;
 struct $7VECTOR3 TMP$2101$1;
 struct $7VECTOR2 TMP$2102$1;
 struct $7VECTOR2 TMP$2103$1;
 struct $7VECTOR3 TMP$2104$1;
 struct $7VECTOR3 TMP$2105$1;
 struct $7VECTOR2 TMP$2106$1;
 struct $7VECTOR2 TMP$2107$1;
 struct $7VECTOR2 TMP$2108$1;
 struct $7VECTOR3 TMP$2109$1;
 struct $7VECTOR3 TMP$2110$1;
 struct $7VECTOR2 TMP$2111$1;
 struct $7VECTOR2 TMP$2112$1;
 struct $7VECTOR3 TMP$2113$1;
 struct $7VECTOR3 TMP$2114$1;
 struct $7VECTOR2 TMP$2115$1;
 struct $7VECTOR2 TMP$2116$1;
 struct $7VECTOR2 TMP$2117$1;
 struct $7VECTOR3 TMP$2118$1;
 struct $7VECTOR3 TMP$2119$1;
 struct $7VECTOR2 TMP$2120$1;
 struct $7VECTOR2 TMP$2121$1;
 struct $7VECTOR2 TMP$2122$1;
 struct $7VECTOR3 TMP$2123$1;
 struct $7VECTOR3 TMP$2124$1;
 struct $7VECTOR3 TMP$2125$1;
 struct $7VECTOR2 TMP$2126$1;
 struct $7VECTOR2 TMP$2127$1;
 struct $7VECTOR3 TMP$2128$1;
 struct $7VECTOR3 TMP$2129$1;
 struct $7VECTOR2 TMP$2130$1;
 struct $7VECTOR2 TMP$2131$1;
 struct $7VECTOR2 TMP$2132$1;
 struct $7VECTOR3 TMP$2133$1;
 struct $7VECTOR3 TMP$2134$1;
 struct $7VECTOR2 TMP$2135$1;
 struct $7VECTOR2 TMP$2136$1;
 struct $7VECTOR2 TMP$2137$1;
 struct $7VECTOR3 TMP$2138$1;
 struct $7VECTOR3 TMP$2139$1;
 struct $7VECTOR2 TMP$2140$1;
 struct $7VECTOR2 TMP$2141$1;
 struct $7VECTOR2 TMP$2142$1;
 struct $7VECTOR3 TMP$2143$1;
 struct $7VECTOR3 TMP$2144$1;
 struct $7VECTOR2 TMP$2145$1;
 struct $7VECTOR2 TMP$2146$1;
 struct $7VECTOR2 TMP$2147$1;
 struct $7VECTOR3 TMP$2148$1;
 struct $7VECTOR3 TMP$2149$1;
 struct $7VECTOR3 TMP$2150$1;
 struct $7VECTOR3 TMP$2151$1;
 struct $7VECTOR3 TMP$2152$1;
 struct $7VECTOR2 TMP$2153$1;
 struct $7VECTOR2 TMP$2154$1;
 struct $7VECTOR3 TMP$2155$1;
 struct $7VECTOR3 TMP$2156$1;
 struct $7VECTOR2 TMP$2157$1;
 struct $7VECTOR3 TMP$2158$1;
 struct $7VECTOR3 TMP$2159$1;
 struct $7VECTOR3 TMP$2160$1;
 struct $7VECTOR3 TMP$2161$1;
 struct $7VECTOR3 TMP$2162$1;
 struct $7VECTOR2 TMP$2163$1;
 struct $7VECTOR2 TMP$2164$1;
 struct $7VECTOR2 TMP$2165$1;
 struct $7VECTOR3 TMP$2166$1;
 struct $7VECTOR3 TMP$2167$1;
 struct $7VECTOR2 TMP$2168$1;
 struct $7VECTOR2 TMP$2169$1;
 struct $7VECTOR3 TMP$2170$1;
 struct $7VECTOR3 TMP$2171$1;
 struct $7VECTOR3 TMP$2172$1;
 struct $7VECTOR2 TMP$2173$1;
 struct $7VECTOR2 TMP$2174$1;
 struct $7VECTOR2 TMP$2175$1;
 struct $7VECTOR3 TMP$2176$1;
 struct $7VECTOR3 TMP$2177$1;
 struct $7VECTOR2 TMP$2178$1;
 struct $7VECTOR2 TMP$2179$1;
 struct $7VECTOR3 TMP$2180$1;
 struct $7VECTOR3 TMP$2181$1;
 struct $7VECTOR3 TMP$2182$1;
 label$2352:;
 double vr$0 = _ZN12SYSTEM_BUS_T7SDPLANEER7VECTOR3( THIS$1, P3$1 );
 _ZN7VECTOR2C1Edd( &TMP$2087$1, vr$0, 0x1.p+0 );
 _ZN7VECTOR2aSERS_( &RES2$, &TMP$2087$1 );
 _ZN7VECTOR3C1Eddd( &TMP$2090$1, 0x0p+0, 0x1.p-2, 0x0p+0 );
 struct $7VECTOR3* vr$6 = _ZmiR7VECTOR3S0_( &TMP$2091$1, P3$1, &TMP$2090$1 );
 double vr$7 = _ZN12SYSTEM_BUS_T8SDSPHEREER7VECTOR3d( THIS$1, vr$6, 0x1.p-2 );
 _ZN7VECTOR2C1Edd( &TMP$2089$1, vr$7, 0x1.7733333333333p+5 );
 struct $7VECTOR2* vr$11 = _ZN12SYSTEM_BUS_T3OPUER7VECTOR2S1_( &TMP$2088$1, THIS$1, &RES2$, &TMP$2089$1 );
 _ZN7VECTOR2aSERS_( &RES2$, vr$11 );
 _ZN7VECTOR3C1Ed( &TMP$2096$1, 0x1.p-2 );
 _ZN7VECTOR3C1Eddd( &TMP$2094$1, 0x1.p+0, 0x1.p-2, 0x0p+0 );
 struct $7VECTOR3* vr$17 = _ZmiR7VECTOR3S0_( &TMP$2095$1, P3$1, &TMP$2094$1 );
 double vr$18 = _ZN12SYSTEM_BUS_T5SDBOXER7VECTOR3S1_( THIS$1, vr$17, &TMP$2096$1 );
 _ZN7VECTOR2C1Edd( &TMP$2093$1, vr$18, 0x1.8p+1 );
 struct $7VECTOR2* vr$22 = _ZN12SYSTEM_BUS_T3OPUER7VECTOR2S1_( &TMP$2092$1, THIS$1, &RES2$, &TMP$2093$1 );
 _ZN7VECTOR2aSERS_( &RES2$, vr$22 );
 _ZN7VECTOR3C1Ed( &TMP$2101$1, 0x1.3333333333333p-3 );
 _ZN7VECTOR3C1Eddd( &TMP$2099$1, 0x1.p+0, 0x1.p-2, 0x1.p+0 );
 struct $7VECTOR3* vr$28 = _ZmiR7VECTOR3S0_( &TMP$2100$1, P3$1, &TMP$2099$1 );
 double vr$29 = _ZN12SYSTEM_BUS_T10UDROUNDBOXER7VECTOR3S1_d( THIS$1, vr$28, &TMP$2101$1, 0x1.999999999999Ap-4 );
 _ZN7VECTOR2C1Edd( &TMP$2098$1, vr$29, 0x1.48p+5 );
 struct $7VECTOR2* vr$33 = _ZN12SYSTEM_BUS_T3OPUER7VECTOR2S1_( &TMP$2097$1, THIS$1, &RES2$, &TMP$2098$1 );
 _ZN7VECTOR2aSERS_( &RES2$, vr$33 );
 _ZN7VECTOR2C1Edd( &TMP$2106$1, 0x1.999999999999Ap-3, 0x1.999999999999Ap-5 );
 _ZN7VECTOR3C1Eddd( &TMP$2104$1, 0x0p+0, 0x1.p-2, 0x1.p+0 );
 struct $7VECTOR3* vr$39 = _ZmiR7VECTOR3S0_( &TMP$2105$1, P3$1, &TMP$2104$1 );
 double vr$40 = _ZN12SYSTEM_BUS_T7SDTORUSER7VECTOR3R7VECTOR2( THIS$1, vr$39, &TMP$2106$1 );
 _ZN7VECTOR2C1Edd( &TMP$2103$1, vr$40, 0x1.9p+4 );
 struct $7VECTOR2* vr$44 = _ZN12SYSTEM_BUS_T3OPUER7VECTOR2S1_( &TMP$2102$1, THIS$1, &RES2$, &TMP$2103$1 );
 _ZN7VECTOR2aSERS_( &RES2$, vr$44 );
 _ZN7VECTOR3C1Eddd( &TMP$2110$1, -0x1.999999999999Ap-1, 0x1.p-1, 0x1.999999999999Ap-3 );
 _ZN7VECTOR3C1Eddd( &TMP$2109$1, -0x1.4CCCCCCCCCCCDp+0, 0x1.999999999999Ap-4, -0x1.999999999999Ap-4 );
 double vr$49 = _ZN12SYSTEM_BUS_T9SDCAPSULEER7VECTOR3S1_S1_d( THIS$1, P3$1, &TMP$2109$1, &TMP$2110$1, 0x1.999999999999Ap-4 );
 _ZN7VECTOR2C1Edd( &TMP$2108$1, vr$49, 0x1.FE66666666666p+4 );
 struct $7VECTOR2* vr$53 = _ZN12SYSTEM_BUS_T3OPUER7VECTOR2S1_( &TMP$2107$1, THIS$1, &RES2$, &TMP$2108$1 );
 _ZN7VECTOR2aSERS_( &RES2$, vr$53 );
 _ZN7VECTOR2C1Edd( &TMP$2115$1, 0x1.p-2, 0x1.999999999999Ap-5 );
 _ZN7VECTOR3C1Eddd( &TMP$2113$1, -0x1.p+0, 0x1.p-2, -0x1.p+0 );
 struct $7VECTOR3* vr$59 = _ZmiR7VECTOR3S0_( &TMP$2114$1, P3$1, &TMP$2113$1 );
 double vr$60 = _ZN12SYSTEM_BUS_T10SDTRIPRISMER7VECTOR3R7VECTOR2( THIS$1, vr$59, &TMP$2115$1 );
 _ZN7VECTOR2C1Edd( &TMP$2112$1, vr$60, 0x1.5Cp+5 );
 struct $7VECTOR2* vr$64 = _ZN12SYSTEM_BUS_T3OPUER7VECTOR2S1_( &TMP$2111$1, THIS$1, &RES2$, &TMP$2112$1 );
 _ZN7VECTOR2aSERS_( &RES2$, vr$64 );
 _ZN7VECTOR2C1Edd( &TMP$2120$1, 0x1.999999999999Ap-4, 0x1.999999999999Ap-3 );
 _ZN7VECTOR3C1Eddd( &TMP$2118$1, 0x1.p+0, 0x1.3333333333333p-2, -0x1.p+0 );
 struct $7VECTOR3* vr$70 = _ZmiR7VECTOR3S0_( &TMP$2119$1, P3$1, &TMP$2118$1 );
 double vr$71 = _ZN12SYSTEM_BUS_T10SDCYLINDERER7VECTOR3R7VECTOR2( THIS$1, vr$70, &TMP$2120$1 );
 _ZN7VECTOR2C1Edd( &TMP$2117$1, vr$71, 0x1.p+3 );
 struct $7VECTOR2* vr$75 = _ZN12SYSTEM_BUS_T3OPUER7VECTOR2S1_( &TMP$2116$1, THIS$1, &RES2$, &TMP$2117$1 );
 _ZN7VECTOR2aSERS_( &RES2$, vr$75 );
 _ZN7VECTOR3C1Eddd( &TMP$2125$1, 0x1.999999999999Ap-1, 0x1.3333333333333p-1, 0x1.3333333333333p-2 );
 _ZN7VECTOR3C1Eddd( &TMP$2123$1, 0x0p+0, 0x1.p-1, -0x1.p+0 );
 struct $7VECTOR3* vr$81 = _ZmiR7VECTOR3S0_( &TMP$2124$1, P3$1, &TMP$2123$1 );
 double vr$82 = _ZN12SYSTEM_BUS_T6SDCONEER7VECTOR3S1_( THIS$1, vr$81, &TMP$2125$1 );
 _ZN7VECTOR2C1Edd( &TMP$2122$1, vr$82, 0x1.B8p+5 );
 struct $7VECTOR2* vr$86 = _ZN12SYSTEM_BUS_T3OPUER7VECTOR2S1_( &TMP$2121$1, THIS$1, &RES2$, &TMP$2122$1 );
 _ZN7VECTOR2aSERS_( &RES2$, vr$86 );
 _ZN7VECTOR2C1Edd( &TMP$2130$1, 0x1.999999999999Ap-3, 0x1.999999999999Ap-5 );
 _ZN7VECTOR3C1Eddd( &TMP$2128$1, 0x0p+0, 0x1.p-2, 0x1.p+1 );
 struct $7VECTOR3* vr$92 = _ZmiR7VECTOR3S0_( &TMP$2129$1, P3$1, &TMP$2128$1 );
 double vr$93 = _ZN12SYSTEM_BUS_T9SDTORUS82ER7VECTOR3R7VECTOR2( THIS$1, vr$92, &TMP$2130$1 );
 _ZN7VECTOR2C1Edd( &TMP$2127$1, vr$93, 0x1.9p+5 );
 struct $7VECTOR2* vr$97 = _ZN12SYSTEM_BUS_T3OPUER7VECTOR2S1_( &TMP$2126$1, THIS$1, &RES2$, &TMP$2127$1 );
 _ZN7VECTOR2aSERS_( &RES2$, vr$97 );
 _ZN7VECTOR2C1Edd( &TMP$2135$1, 0x1.999999999999Ap-3, 0x1.999999999999Ap-5 );
 _ZN7VECTOR3C1Eddd( &TMP$2133$1, -0x1.p+0, 0x1.p-2, 0x1.p+1 );
 struct $7VECTOR3* vr$103 = _ZmiR7VECTOR3S0_( &TMP$2134$1, P3$1, &TMP$2133$1 );
 double vr$104 = _ZN12SYSTEM_BUS_T9SDTORUS88ER7VECTOR3R7VECTOR2( THIS$1, vr$103, &TMP$2135$1 );
 _ZN7VECTOR2C1Edd( &TMP$2132$1, vr$104, 0x1.58p+5 );
 struct $7VECTOR2* vr$108 = _ZN12SYSTEM_BUS_T3OPUER7VECTOR2S1_( &TMP$2131$1, THIS$1, &RES2$, &TMP$2132$1 );
 _ZN7VECTOR2aSERS_( &RES2$, vr$108 );
 _ZN7VECTOR2C1Edd( &TMP$2140$1, 0x1.999999999999Ap-4, 0x1.999999999999Ap-3 );
 _ZN7VECTOR3C1Eddd( &TMP$2138$1, 0x1.p+0, 0x1.3333333333333p-2, 0x1.p+1 );
 struct $7VECTOR3* vr$114 = _ZmiR7VECTOR3S0_( &TMP$2139$1, P3$1, &TMP$2138$1 );
 double vr$115 = _ZN12SYSTEM_BUS_T11SDCYLINDER6ER7VECTOR3R7VECTOR2( THIS$1, vr$114, &TMP$2140$1 );
 _ZN7VECTOR2C1Edd( &TMP$2137$1, vr$115, 0x1.8p+3 );
 struct $7VECTOR2* vr$119 = _ZN12SYSTEM_BUS_T3OPUER7VECTOR2S1_( &TMP$2136$1, THIS$1, &RES2$, &TMP$2137$1 );
 _ZN7VECTOR2aSERS_( &RES2$, vr$119 );
 _ZN7VECTOR2C1Edd( &TMP$2145$1, 0x1.p-2, 0x1.999999999999Ap-5 );
 _ZN7VECTOR3C1Eddd( &TMP$2143$1, -0x1.p+0, 0x1.999999999999Ap-3, 0x1.p+0 );
 struct $7VECTOR3* vr$125 = _ZmiR7VECTOR3S0_( &TMP$2144$1, P3$1, &TMP$2143$1 );
 double vr$126 = _ZN12SYSTEM_BUS_T10SDHEXPRISMER7VECTOR3R7VECTOR2( THIS$1, vr$125, &TMP$2145$1 );
 _ZN7VECTOR2C1Edd( &TMP$2142$1, vr$126, 0x1.1p+4 );
 struct $7VECTOR2* vr$130 = _ZN12SYSTEM_BUS_T3OPUER7VECTOR2S1_( &TMP$2141$1, THIS$1, &RES2$, &TMP$2142$1 );
 _ZN7VECTOR2aSERS_( &RES2$, vr$130 );
 _ZN7VECTOR3C1Eddd( &TMP$2151$1, -0x1.p+1, 0x1.999999999999Ap-3, 0x1.p+0 );
 struct $7VECTOR3* vr$134 = _ZmiR7VECTOR3S0_( &TMP$2152$1, P3$1, &TMP$2151$1 );
 double vr$135 = _ZN12SYSTEM_BUS_T8SDSPHEREER7VECTOR3d( THIS$1, vr$134, 0x1.p-2 );
 _ZN7VECTOR3C1Ed( &TMP$2150$1, 0x1.3333333333333p-3 );
 _ZN7VECTOR3C1Eddd( &TMP$2148$1, -0x1.p+1, 0x1.999999999999Ap-3, 0x1.p+0 );
 struct $7VECTOR3* vr$141 = _ZmiR7VECTOR3S0_( &TMP$2149$1, P3$1, &TMP$2148$1 );
 double vr$142 = _ZN12SYSTEM_BUS_T10UDROUNDBOXER7VECTOR3S1_d( THIS$1, vr$141, &TMP$2150$1, 0x1.999999999999Ap-5 );
 double vr$143 = _ZN12SYSTEM_BUS_T3OPSEdd( THIS$1, vr$142, vr$135 );
 _ZN7VECTOR2C1Edd( &TMP$2147$1, vr$143, 0x1.Ap+3 );
 struct $7VECTOR2* vr$147 = _ZN12SYSTEM_BUS_T3OPUER7VECTOR2S1_( &TMP$2146$1, THIS$1, &RES2$, &TMP$2147$1 );
 _ZN7VECTOR2aSERS_( &RES2$, vr$147 );
 _ZN7VECTOR2C1Edd( &TMP$2163$1, 0x1.47AE147AE147Bp-6, 0x1.3333333333333p-1 );
 _ZN7VECTOR3C1Eddd( &TMP$2162$1, 0x1.999999999999Ap-5, 0x1.p+0, 0x1.999999999999Ap-5 );
 _ZN7VECTOR3C1Eddd( &TMP$2160$1, -0x1.p+1, 0x1.999999999999Ap-3, 0x0p+0 );
 struct $7VECTOR3* vr$155 = _ZmiR7VECTOR3S0_( &TMP$2161$1, P3$1, &TMP$2160$1 );
 double vr$156 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR3( THIS$1, (struct $7VECTOR3*)vr$155 );
 double vr$163 = _ZN12SYSTEM_BUS_T6K_ATANEdd( THIS$1, *(double*)((uint8*)P3$1 + 16ll) + 0x1.p+1, *(double*)((uint8*)P3$1 + 32ll) );
 _ZN7VECTOR3C1Eddd( &TMP$2159$1, vr$163 / 0x1.921E4F765FD8Bp+2, *(double*)((uint8*)P3$1 + 24ll), (vr$156 * 0x1.p-1) + 0x1.47AE147AE147Bp-6 );
 struct $7VECTOR3* vr$168 = _ZN12SYSTEM_BUS_T5OPREPER7VECTOR3S1_( &TMP$2158$1, THIS$1, &TMP$2159$1, &TMP$2162$1 );
 double vr$169 = _ZN12SYSTEM_BUS_T10SDCYLINDERER7VECTOR3R7VECTOR2( THIS$1, vr$168, &TMP$2163$1 );
 _ZN7VECTOR2C1Edd( &TMP$2157$1, 0x1.999999999999Ap-3, 0x1.999999999999Ap-4 );
 _ZN7VECTOR3C1Eddd( &TMP$2155$1, -0x1.p+1, 0x1.999999999999Ap-3, 0x0p+0 );
 struct $7VECTOR3* vr$175 = _ZmiR7VECTOR3S0_( &TMP$2156$1, P3$1, &TMP$2155$1 );
 double vr$176 = _ZN12SYSTEM_BUS_T9SDTORUS82ER7VECTOR3R7VECTOR2( THIS$1, vr$175, &TMP$2157$1 );
 double vr$177 = _ZN12SYSTEM_BUS_T3OPSEdd( THIS$1, vr$176, vr$169 );
 _ZN7VECTOR2C1Edd( &TMP$2154$1, vr$177, 0x1.98p+5 );
 struct $7VECTOR2* vr$181 = _ZN12SYSTEM_BUS_T3OPUER7VECTOR2S1_( &TMP$2153$1, THIS$1, &RES2$, &TMP$2154$1 );
 _ZN7VECTOR2aSERS_( &RES2$, vr$181 );
 _ZN7VECTOR3C1Eddd( &TMP$2166$1, -0x1.p+1, 0x1.p-2, -0x1.p+0 );
 struct $7VECTOR3* vr$185 = _ZmiR7VECTOR3S0_( &TMP$2167$1, P3$1, &TMP$2166$1 );
 double vr$186 = _ZN12SYSTEM_BUS_T8SDSPHEREER7VECTOR3d( THIS$1, vr$185, 0x1.999999999999Ap-3 );
 _ZN7VECTOR2C1Edd( &TMP$2165$1, (vr$186 * 0x1.6666666666666p-1) + (((__builtin_sin( (*(double*)((uint8*)P3$1 + 16ll) * 0x1.9p+5) ) * __builtin_sin( (*(double*)((uint8*)P3$1 + 24ll) * 0x1.9p+5) )) * __builtin_sin( (*(double*)((uint8*)P3$1 + 32ll) * 0x1.9p+5) )) * 0x1.EB851EB851EB8p-6), 0x1.04p+6 );
 struct $7VECTOR2* vr$204 = _ZN12SYSTEM_BUS_T3OPUER7VECTOR2S1_( &TMP$2164$1, THIS$1, &RES2$, &TMP$2165$1 );
 _ZN7VECTOR2aSERS_( &RES2$, vr$204 );
 _ZN7VECTOR2C1Edd( &TMP$2173$1, 0x1.999999999999Ap-3, 0x1.999999999999Ap-5 );
 _ZN7VECTOR3C1Eddd( &TMP$2171$1, -0x1.p+1, 0x1.p-2, 0x1.p+1 );
 struct $7VECTOR3* vr$210 = _ZmiR7VECTOR3S0_( &TMP$2172$1, P3$1, &TMP$2171$1 );
 struct $7VECTOR3* vr$212 = _ZN12SYSTEM_BUS_T7OPTWISTER7VECTOR3( &TMP$2170$1, THIS$1, vr$210 );
 double vr$213 = _ZN12SYSTEM_BUS_T7SDTORUSER7VECTOR3R7VECTOR2( THIS$1, vr$212, &TMP$2173$1 );
 _ZN7VECTOR2C1Edd( &TMP$2169$1, vr$213 * 0x1.p-1, 0x1.759999999999Ap+5 );
 struct $7VECTOR2* vr$218 = _ZN12SYSTEM_BUS_T3OPUER7VECTOR2S1_( &TMP$2168$1, THIS$1, &RES2$, &TMP$2169$1 );
 _ZN7VECTOR2aSERS_( &RES2$, vr$218 );
 _ZN7VECTOR3C1Eddd( &TMP$2176$1, 0x0p+0, 0x1.6666666666666p-2, -0x1.p+1 );
 struct $7VECTOR3* vr$222 = _ZmiR7VECTOR3S0_( &TMP$2177$1, P3$1, &TMP$2176$1 );
 double vr$223 = _ZN12SYSTEM_BUS_T13SDCONESECTIONER7VECTOR3ddd( THIS$1, vr$222, 0x1.3333333333333p-3, 0x1.999999999999Ap-3, 0x1.999999999999Ap-4 );
 _ZN7VECTOR2C1Edd( &TMP$2175$1, vr$223, 0x1.B570A3D70A3D7p+3 );
 struct $7VECTOR2* vr$227 = _ZN12SYSTEM_BUS_T3OPUER7VECTOR2S1_( &TMP$2174$1, THIS$1, &RES2$, &TMP$2175$1 );
 _ZN7VECTOR2aSERS_( &RES2$, vr$227 );
 _ZN7VECTOR3C1Eddd( &TMP$2182$1, 0x1.3333333333333p-3, 0x1.999999999999Ap-3, 0x1.999999999999Ap-5 );
 _ZN7VECTOR3C1Eddd( &TMP$2180$1, 0x1.p+0, 0x1.6666666666666p-2, -0x1.p+1 );
 struct $7VECTOR3* vr$233 = _ZmiR7VECTOR3S0_( &TMP$2181$1, P3$1, &TMP$2180$1 );
 double vr$234 = _ZN12SYSTEM_BUS_T11SDELLIPSOIDER7VECTOR3S1_( THIS$1, vr$233, &TMP$2182$1 );
 _ZN7VECTOR2C1Edd( &TMP$2179$1, vr$234, 0x1.595C28F5C28F6p+5 );
 struct $7VECTOR2* vr$238 = _ZN12SYSTEM_BUS_T3OPUER7VECTOR2S1_( &TMP$2178$1, THIS$1, &RES2$, &TMP$2179$1 );
 _ZN7VECTOR2aSERS_( &RES2$, vr$238 );
 _ZN7VECTOR2C1ERS_( tmp$2086$1, &RES2$ );
 goto label$2353;
 label$2353:;
 return tmp$2086$1;
}

double _ZN12SYSTEM_BUS_T3MAPEddddd( struct $12SYSTEM_BUS_T* THIS$1, double A$1, double B$1, double X$1, double C$1, double D$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2354:;
 fb$result$1 = (((D$1 - C$1) * (X$1 - A$1)) / (B$1 - A$1)) + C$1;
 goto label$2355;
 label$2355:;
 return fb$result$1;
}

struct $7VECTOR2* _ZN12SYSTEM_BUS_T7CASTRAYEv( struct $7VECTOR2* tmp$2183$1, struct $12SYSTEM_BUS_T* THIS$1 )
{
 double TMP$2187$1;
 label$2356:;
 TMIN$ = 0x1.999999999999Ap-4;
 TMAX$ = 0x1.4p+4;
 PRECIS$ = 0x1.0624DD2F1A9FCp-9;
 T$ = TMIN$;
 M$ = -0x1.p+0;
 _ZN7VECTOR2aSEd( &RES2$, 0x0p+0 );
 label$2358:;
 {
  struct $7VECTOR3 TMP$2184$2;
  struct $7VECTOR3 TMP$2185$2;
  struct $7VECTOR2 TMP$2186$2;
  struct $7VECTOR3* vr$1 = _ZmlR7VECTOR3d( &TMP$2184$2, &RD$, T$ );
  struct $7VECTOR3* vr$3 = _ZplR7VECTOR3S0_( &TMP$2185$2, &RO$, vr$1 );
  struct $7VECTOR2* vr$5 = _ZN12SYSTEM_BUS_T3MAPER7VECTOR3( &TMP$2186$2, THIS$1, vr$3 );
  _ZN7VECTOR2aSERS_( &RES2$, vr$5 );
  if( T$ <= TMAX$ ) goto label$2362;
  {
   goto label$2359;
   label$2362:;
  }
  if( *(double*)&RES2$ >= PRECIS$ ) goto label$2364;
  {
   goto label$2359;
   label$2364:;
  }
  T$ = T$ + *(double*)&RES2$;
  M$ = *(double*)((uint8*)&RES2$ + 8ll);
 }
 label$2360:;
 goto label$2358;
 label$2359:;
 *(double*)&RES2$ = T$;
 if( T$ <= TMAX$ ) goto label$2365;
 TMP$2187$1 = -0x1.p+0;
 goto label$2366;
 label$2365:;
 TMP$2187$1 = M$;
 label$2366:;
 *(double*)((uint8*)&RES2$ + 8ll) = TMP$2187$1;
 _ZN7VECTOR2C1ERS_( tmp$2183$1, &RES2$ );
 goto label$2357;
 label$2357:;
 return tmp$2183$1;
}

double _ZN12SYSTEM_BUS_T10SOFTSHADOWEv( struct $12SYSTEM_BUS_T* THIS$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2367:;
 RESF$ = 0x1.p+0;
 T$ = MINT$;
 {
  int64 I$2;
  I$2 = 0ll;
  label$2372:;
  {
   struct $7VECTOR3 TMP$2188$3;
   struct $7VECTOR3 TMP$2189$3;
   struct $7VECTOR2 TMP$2190$3;
   struct $7VECTOR3* vr$2 = _ZmlR7VECTOR3d( &TMP$2188$3, &RD$, T$ );
   struct $7VECTOR3* vr$4 = _ZplR7VECTOR3S0_( &TMP$2189$3, &RO$, vr$2 );
   _ZN12SYSTEM_BUS_T3MAPER7VECTOR3( &TMP$2190$3, THIS$1, vr$4 );
   H$ = *(double*)&TMP$2190$3;
   double vr$8 = _ZN12SYSTEM_BUS_T5K_MINEdd( THIS$1, RESF$, (H$ * 0x1.p+3) / T$ );
   RESF$ = vr$8;
   double vr$9 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, H$, 0x1.47AE147AE147Bp-6, 0x1.999999999999Ap-4 );
   T$ = T$ + vr$9;
   if( ((int64)-(H$ < 0x1.0624DD2F1A9FCp-10) | (int64)-(T$ > TMAX$)) == 0ll ) goto label$2374;
   {
    goto label$2371;
    label$2374:;
   }
  }
  label$2370:;
  I$2 = I$2 + 1ll;
  label$2369:;
  if( I$2 <= 15ll ) goto label$2372;
  label$2371:;
 }
 double vr$15 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, RESF$, 0x0p+0, 0x1.p+0 );
 fb$result$1 = vr$15;
 goto label$2368;
 label$2368:;
 return fb$result$1;
}

struct $7VECTOR3* _ZN12SYSTEM_BUS_T10CALCNORMALEv( struct $7VECTOR3* tmp$2191$1, struct $12SYSTEM_BUS_T* THIS$1 )
{
 struct $7VECTOR3 TMP$2192$1;
 struct $7VECTOR3 TMP$2193$1;
 struct $7VECTOR2 TMP$2194$1;
 struct $7VECTOR3 TMP$2195$1;
 struct $7VECTOR2 TMP$2196$1;
 struct $7VECTOR3 TMP$2197$1;
 struct $7VECTOR2 TMP$2198$1;
 struct $7VECTOR3 TMP$2199$1;
 struct $7VECTOR2 TMP$2200$1;
 struct $7VECTOR3 TMP$2201$1;
 struct $7VECTOR2 TMP$2202$1;
 struct $7VECTOR3 TMP$2203$1;
 struct $7VECTOR2 TMP$2204$1;
 struct $7VECTOR3 TMP$2205$1;
 label$2375:;
 EPS$ = 0x1.0624DD2F1A9FCp-10;
 _ZN7VECTOR3C1Eddd( &TMP$2201$1, *(double*)((uint8*)&P3$ + 16ll), *(double*)((uint8*)&P3$ + 24ll), *(double*)((uint8*)&P3$ + 32ll) + EPS$ );
 _ZN12SYSTEM_BUS_T3MAPER7VECTOR3( &TMP$2202$1, THIS$1, &TMP$2201$1 );
 _ZN7VECTOR3C1Eddd( &TMP$2203$1, *(double*)((uint8*)&P3$ + 16ll), *(double*)((uint8*)&P3$ + 24ll), *(double*)((uint8*)&P3$ + 32ll) - EPS$ );
 _ZN12SYSTEM_BUS_T3MAPER7VECTOR3( &TMP$2204$1, THIS$1, &TMP$2203$1 );
 _ZN7VECTOR3C1Eddd( &TMP$2197$1, *(double*)((uint8*)&P3$ + 16ll), *(double*)((uint8*)&P3$ + 24ll) + EPS$, *(double*)((uint8*)&P3$ + 32ll) );
 _ZN12SYSTEM_BUS_T3MAPER7VECTOR3( &TMP$2198$1, THIS$1, &TMP$2197$1 );
 _ZN7VECTOR3C1Eddd( &TMP$2199$1, *(double*)((uint8*)&P3$ + 16ll), *(double*)((uint8*)&P3$ + 24ll) - EPS$, *(double*)((uint8*)&P3$ + 32ll) );
 _ZN12SYSTEM_BUS_T3MAPER7VECTOR3( &TMP$2200$1, THIS$1, &TMP$2199$1 );
 _ZN7VECTOR3C1Eddd( &TMP$2193$1, *(double*)((uint8*)&P3$ + 16ll) + EPS$, *(double*)((uint8*)&P3$ + 24ll), *(double*)((uint8*)&P3$ + 32ll) );
 _ZN12SYSTEM_BUS_T3MAPER7VECTOR3( &TMP$2194$1, THIS$1, &TMP$2193$1 );
 _ZN7VECTOR3C1Eddd( &TMP$2195$1, *(double*)((uint8*)&P3$ + 16ll) - EPS$, *(double*)((uint8*)&P3$ + 24ll), *(double*)((uint8*)&P3$ + 32ll) );
 _ZN12SYSTEM_BUS_T3MAPER7VECTOR3( &TMP$2196$1, THIS$1, &TMP$2195$1 );
 _ZN7VECTOR3C1Eddd( &TMP$2192$1, *(double*)&TMP$2194$1 - *(double*)&TMP$2196$1, *(double*)&TMP$2198$1 - *(double*)&TMP$2200$1, *(double*)&TMP$2202$1 - *(double*)&TMP$2204$1 );
 struct $7VECTOR3* vr$30 = _ZN12SYSTEM_BUS_T11K_NORMALIZEER7VECTOR3( &TMP$2205$1, THIS$1, &TMP$2192$1 );
 _ZN7VECTOR3C1ERS_( tmp$2191$1, vr$30 );
 goto label$2376;
 label$2376:;
 return tmp$2191$1;
}

double _ZN12SYSTEM_BUS_T6CALCAOEv( struct $12SYSTEM_BUS_T* THIS$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2377:;
 OCC$ = 0x0p+0;
 SCA$ = 0x1.p+0;
 {
  int64 I$2;
  I$2 = 0ll;
  label$2382:;
  {
   struct $7VECTOR3 TMP$2206$3;
   struct $7VECTOR3 TMP$2207$3;
   struct $7VECTOR2 TMP$2208$3;
   HR$ = (((double)I$2 * 0x1.EB851EB851EB8p-4) / 0x1.4p+2) + 0x1.47AE147AE147Bp-7;
   struct $7VECTOR3* vr$6 = _ZmlR7VECTOR3d( &TMP$2206$3, &NOR$, HR$ );
   struct $7VECTOR3* vr$8 = _ZplR7VECTOR3S0_( &TMP$2207$3, vr$6, &P3$ );
   _ZN7VECTOR3aSERS_( &AOPOS$, vr$8 );
   _ZN12SYSTEM_BUS_T3MAPER7VECTOR3( &TMP$2208$3, THIS$1, &AOPOS$ );
   DD2$ = *(double*)&TMP$2208$3;
   OCC$ = OCC$ + (-(DD2$ - HR$) * SCA$);
   SCA$ = SCA$ * 0x1.E666666666666p-1;
  }
  label$2380:;
  I$2 = I$2 + 1ll;
  label$2379:;
  if( I$2 <= 4ll ) goto label$2382;
  label$2381:;
 }
 OCC$ = -(OCC$ * 0x1.8p+1) + 0x1.p+0;
 double vr$19 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, OCC$, 0x0p+0, 0x1.p+0 );
 fb$result$1 = vr$19;
 goto label$2378;
 label$2378:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T12HAVERSINEISHEd( struct $12SYSTEM_BUS_T* THIS$1, double X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2383:;
 double vr$5 = _ZN12SYSTEM_BUS_T3MAPEddddd( THIS$1, 0x0p+0, 0x1.p+0, (-(__builtin_cos( X$1 )) + 0x1.p+0) / 0x1.p+1, 0x1.p-1, 0x1.p+0 );
 fb$result$1 = vr$5;
 goto label$2384;
 label$2384:;
 return fb$result$1;
}

uint32 _ZN12SYSTEM_BUS_T10RAINBOWISHEfa( struct $12SYSTEM_BUS_T* THIS$1, float X$1, int8 SET$1 )
{
 uint32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$2385:;
 static double KR$1;
 static double KG$1;
 static double KB$1;
 if( (int64)SET$1 != -1ll ) goto label$2388;
 {
  KR$1 = 0x0p+0;
  KG$1 = 0x0p+0;
  KB$1 = 0x0p+0;
  fb$result$1 = 0u;
  goto label$2386;
  label$2388:;
 }
 KR$1 = KR$1 + 0x1.205BC01A36E2Fp-7;
 KG$1 = KG$1 + 0x1.F8A0902DE00D2p-8;
 KB$1 = KB$1 + 0x1.4467381D7DBF5p-7;
 uint32 R$1;
 __builtin_memset( &R$1, 0, 4ll );
 uint32 G$1;
 __builtin_memset( &G$1, 0, 4ll );
 uint32 B$1;
 __builtin_memset( &B$1, 0, 4ll );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, (__builtin_sin( ((double)X$1 * 0x1.1DF46A2529D39p-6) ) * 0x1.FCp+6) + 0x1.p+7 );
 double vr$13 = _ZN12SYSTEM_BUS_T12HAVERSINEISHEd( THIS$1, KR$1 );
 R$1 = (uint32)((int64)__builtin_nearbyint( vr$13 * *(double*)((int64)(double*)MEM64$ + 393232ll) ));
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, (__builtin_sin( ((double)(X$1 + -0x1.Ep+6f) * 0x1.1DF46A2529D39p-6) ) * 0x1.FCp+6) + 0x1.p+7 );
 double vr$22 = _ZN12SYSTEM_BUS_T12HAVERSINEISHEd( THIS$1, KG$1 );
 G$1 = (uint32)((int64)__builtin_nearbyint( vr$22 * *(double*)((int64)(double*)MEM64$ + 393240ll) ));
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, (__builtin_sin( ((double)(X$1 + 0x1.Ep+6f) * 0x1.1DF46A2529D39p-6) ) * 0x1.FCp+6) + 0x1.p+7 );
 double vr$31 = _ZN12SYSTEM_BUS_T12HAVERSINEISHEd( THIS$1, KB$1 );
 B$1 = (uint32)((int64)__builtin_nearbyint( vr$31 * *(double*)((int64)(double*)MEM64$ + 393248ll) ));
 fb$result$1 = (uint32)(((((int64)(uint32)(uint8)((int64)R$1 & 255ll) << (16ll & 63ll)) | ((int64)(uint32)(uint8)((int64)G$1 & 255ll) << (8ll & 63ll))) | (int64)(uint32)(uint8)((int64)B$1 & 255ll)) | 4278190080ll);
 goto label$2386;
 label$2386:;
 return fb$result$1;
}

void _ZN12SYSTEM_BUS_T6FILTEREPvi( struct $12SYSTEM_BUS_T* THIS$1, void* I$1, int32 N$1 )
{
 int64 TMP$2209$1;
 int64 TMP$2210$1;
 void* TMP$2211$1;
 int64 TMP$2212$1;
 label$2389:;
 int64 IX$1;
 __builtin_memset( &IX$1, 0, 8ll );
 int64 IY$1;
 __builtin_memset( &IY$1, 0, 8ll );
 TMP$2212$1 = 0ll;
 TMP$2211$1 = (void*)0ull;
 TMP$2210$1 = 0ll;
 TMP$2209$1 = 0ll;
 fb_GfxImageInfo64( (void*)I$1, (int64*)&IX$1, (int64*)&IY$1, &TMP$2209$1, &TMP$2210$1, &TMP$2211$1, &TMP$2212$1 );
 int32 P$1[5];
 __builtin_memset( (int32*)P$1, 0, 20ll );
 struct $N12SYSTEM_BUS_T8FBARRAY1IiEE {
  int32* DATA;
  int32* PTR;
  int64 SIZE;
  int64 ELEMENT_LEN;
  int64 DIMENSIONS;
  int64 FLAGS;
  struct $16__FB_ARRAYDIMTB$ DIMTB[1];
 };
 extern int __$fb_structsizecheck[(sizeof( struct $N12SYSTEM_BUS_T8FBARRAY1IiEE ) == 72) ? 1 : -1];
 struct $N12SYSTEM_BUS_T8FBARRAY1IiEE tmp$2213$1;
 *(int32**)&tmp$2213$1 = (int32*)P$1;
 *(int32**)((uint8*)&tmp$2213$1 + 8ll) = (int32*)P$1;
 *(int64*)((uint8*)&tmp$2213$1 + 16ll) = 20ll;
 *(int64*)((uint8*)&tmp$2213$1 + 24ll) = 4ll;
 *(int64*)((uint8*)&tmp$2213$1 + 32ll) = 1ll;
 *(int64*)((uint8*)&tmp$2213$1 + 40ll) = 49ll;
 *(int64*)((uint8*)&tmp$2213$1 + 48ll) = 5ll;
 *(int64*)((uint8*)&tmp$2213$1 + 56ll) = 0ll;
 *(int64*)((uint8*)&tmp$2213$1 + 64ll) = 4ll;
 {
  int32 K$2;
  K$2 = 1;
  int32 TMP$2214$2;
  TMP$2214$2 = N$1;
  goto label$2391;
  label$2394:;
  {
   {
    int32 X$4;
    X$4 = 1;
    label$2398:;
    {
     {
      int32 Y$6;
      Y$6 = 1;
      label$2402:;
      {
       int64 R$7;
       R$7 = 0ll;
       int64 G$7;
       G$7 = 0ll;
       int64 B$7;
       B$7 = 0ll;
       uint32 vr$13 = fb_GfxPoint( I$1, (float)X$4, (float)Y$6 );
       *(int32*)P$1 = (int32)vr$13;
       uint32 vr$18 = fb_GfxPoint( I$1, (float)X$4, (float)((int64)Y$6 + -1ll) );
       *(int32*)((int64)(int32*)P$1 + 4ll) = (int32)vr$18;
       uint32 vr$23 = fb_GfxPoint( I$1, (float)((int64)X$4 + 1ll), (float)Y$6 );
       *(int32*)((int64)(int32*)P$1 + 8ll) = (int32)vr$23;
       uint32 vr$28 = fb_GfxPoint( I$1, (float)X$4, (float)((int64)Y$6 + 1ll) );
       *(int32*)((int64)(int32*)P$1 + 12ll) = (int32)vr$28;
       uint32 vr$33 = fb_GfxPoint( I$1, (float)((int64)X$4 + -1ll), (float)Y$6 );
       *(int32*)((int64)(int32*)P$1 + 16ll) = (int32)vr$33;
       {
        int32 N$8;
        N$8 = 0;
        label$2406:;
        {
         R$7 = (int64)(int8*)((uint8*)R$7 + (int64)*(uint8*)((uint8*)((int64)(int32*)P$1 + ((int64)N$8 << (2ll & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)));
         G$7 = (int64)(int8*)((uint8*)G$7 + (int64)*(uint8*)((uint8*)((int64)(int32*)P$1 + ((int64)N$8 << (2ll & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)));
         B$7 = (int64)(int8*)((uint8*)B$7 + (int64)*(uint8*)((uint8*)((int64)(int32*)P$1 + ((int64)N$8 << (2ll & 63ll))) + (int64)*(uint8*)NIBBLES$));
        }
        label$2404:;
        N$8 = (int32)((int64)N$8 + 1ll);
        label$2403:;
        if( (int64)N$8 <= 4ll ) goto label$2406;
        label$2405:;
       }
       R$7 = ((int64)__builtin_nearbyint( (double)R$7 / 0x1.4p+2 ));
       G$7 = ((int64)__builtin_nearbyint( (double)G$7 / 0x1.4p+2 ));
       B$7 = ((int64)__builtin_nearbyint( (double)B$7 / 0x1.4p+2 ));
       *(double*)((int64)(double*)MEM64$ + 394888ll) = (double)X$4;
       *(double*)((int64)(double*)MEM64$ + 394896ll) = (double)Y$6;
       *(double*)((int64)(double*)MEM64$ + 394824ll) = (double)(uint32)(((((int64)(uint32)(uint8)R$7 << (16ll & 63ll)) | ((int64)(uint32)(uint8)G$7 << (8ll & 63ll))) | (int64)(uint32)(uint8)B$7) | 4278190080ll);
       _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.820Cp+15, 0x0p+0 );
      }
      label$2400:;
      Y$6 = (int32)((int64)Y$6 + 1ll);
      label$2399:;
      if( (int64)Y$6 <= 1078ll ) goto label$2402;
      label$2401:;
     }
     fb_GfxPut( (void*)0ull, 0x0p+0f, 0x0p+0f, (void*)FGIMAGE$, -65536, -65536, -65536, -65536, 0, 6, (void*)&fb_hPutAlpha, -1, (void*)0ull, (void*)0ull );
    }
    label$2396:;
    X$4 = (int32)((int64)X$4 + 1ll);
    label$2395:;
    if( (int64)X$4 <= 1918ll ) goto label$2398;
    label$2397:;
   }
  }
  label$2392:;
  K$2 = (int32)((int64)K$2 + 1ll);
  label$2391:;
  if( (int64)K$2 <= (int64)TMP$2214$2 ) goto label$2394;
  label$2393:;
 }
 label$2390:;
}

struct $7VECTOR3* _ZN12SYSTEM_BUS_T11RENDER_GLSLEv( struct $7VECTOR3* tmp$2216$1, struct $12SYSTEM_BUS_T* THIS$1 )
{
 struct $7VECTOR2 TMP$2217$1;
 struct $7VECTOR3 TMP$2258$1;
 label$2407:;
 struct $7VECTOR3 COL$1;
 _ZN7VECTOR3C1Ev( &COL$1 );
 struct $7VECTOR2* vr$2 = _ZN12SYSTEM_BUS_T7CASTRAYEv( &TMP$2217$1, THIS$1 );
 _ZN7VECTOR2aSERS_( &RES2$, vr$2 );
 T$ = *(double*)&RES2$;
 M$ = *(double*)((uint8*)&RES2$ + 8ll);
 if( M$ >= 0x0p+0 ) goto label$2410;
 {
  struct $7VECTOR3 TMP$2218$2;
  struct $7VECTOR3 TMP$2219$2;
  _ZN7VECTOR3C1Eddd( &TMP$2218$2, 0x1.p-1, 0x1.3333333333333p-1, 0x1.p+0 );
  struct $7VECTOR3* vr$7 = _ZplR7VECTOR3d( &TMP$2219$2, &TMP$2218$2, *(double*)((uint8*)&RD$ + 24ll) * 0x1.999999999999Ap-1 );
  _ZN7VECTOR3aSERS_( &COL$1, vr$7 );
 }
 goto label$2409;
 label$2410:;
 {
  struct $7VECTOR3 TMP$2220$2;
  struct $7VECTOR3 TMP$2221$2;
  struct $7VECTOR3 TMP$2232$2;
  struct $7VECTOR3 TMP$2233$2;
  struct $7VECTOR3 TMP$2234$2;
  struct $7VECTOR3 TMP$2235$2;
  struct $7VECTOR3 TMP$2236$2;
  struct $7VECTOR3 TMP$2237$2;
  struct $7VECTOR3 TMP$2238$2;
  struct $7VECTOR3 TMP$2239$2;
  struct $7VECTOR3 TMP$2240$2;
  struct $7VECTOR3 TMP$2241$2;
  struct $7VECTOR3 TMP$2242$2;
  struct $7VECTOR3 TMP$2243$2;
  struct $7VECTOR3 TMP$2244$2;
  struct $7VECTOR3 TMP$2245$2;
  struct $7VECTOR3 TMP$2246$2;
  struct $7VECTOR3 TMP$2247$2;
  struct $7VECTOR3 TMP$2248$2;
  struct $7VECTOR3 TMP$2249$2;
  struct $7VECTOR3 TMP$2250$2;
  struct $7VECTOR3 TMP$2251$2;
  struct $7VECTOR3 TMP$2252$2;
  struct $7VECTOR3 TMP$2253$2;
  struct $7VECTOR3 TMP$2254$2;
  struct $7VECTOR3 TMP$2255$2;
  struct $7VECTOR3 TMP$2256$2;
  struct $7VECTOR3* vr$10 = _ZmldR7VECTOR3( &TMP$2220$2, T$, &RD$ );
  struct $7VECTOR3* vr$12 = _ZplR7VECTOR3S0_( &TMP$2221$2, &RO$, vr$10 );
  _ZN7VECTOR3aSERS_( &P3$, vr$12 );
  if( M$ != 0x1.p+0 ) goto label$2412;
  {
   struct $7VECTOR3 TMP$2222$3;
   struct $7VECTOR3 TMP$2223$3;
   struct $7VECTOR3 TMP$2224$3;
   struct $7VECTOR3 TMP$2225$3;
   _ZN7VECTOR3C1Eddd( &TMP$2222$3, 0x0p+0, 0x1.p+0, 0x0p+0 );
   _ZN7VECTOR3aSERS_( &NOR$, &TMP$2222$3 );
   _ZN7VECTOR3C1Ed( &TMP$2223$3, 0x1.999999999999Ap-2 );
   double vr$18 = _ZN12SYSTEM_BUS_T7K_FLOOREd( THIS$1, *(double*)((uint8*)&P3$ + 16ll) * 0x1.p+0 );
   double vr$20 = _ZN12SYSTEM_BUS_T7K_FLOOREd( THIS$1, *(double*)((uint8*)&P3$ + 32ll) * 0x1.p+0 );
   double vr$22 = _ZN12SYSTEM_BUS_T8K_MODULOEdd( THIS$1, vr$18 + vr$20, 0x1.p+1 );
   struct $7VECTOR3* vr$24 = _ZmldR7VECTOR3( &TMP$2224$3, vr$22, &TMP$2223$3 );
   struct $7VECTOR3* vr$26 = _ZplR7VECTOR3d( &TMP$2225$3, vr$24, 0x1.999999999999Ap-4 );
   _ZN7VECTOR3aSERS_( &COL$1, vr$26 );
  }
  goto label$2411;
  label$2412:;
  {
   struct $7VECTOR3 TMP$2226$3;
   struct $7VECTOR3 TMP$2227$3;
   struct $7VECTOR3 TMP$2228$3;
   struct $7VECTOR3 TMP$2229$3;
   struct $7VECTOR3 TMP$2230$3;
   struct $7VECTOR3 TMP$2231$3;
   struct $7VECTOR3* vr$29 = _ZN12SYSTEM_BUS_T10CALCNORMALEv( &TMP$2226$3, THIS$1 );
   _ZN7VECTOR3aSERS_( &NOR$, vr$29 );
   _ZN7VECTOR3C1Eddd( &TMP$2227$3, 0x1.999999999999Ap-5, 0x1.47AE147AE147Bp-4, 0x1.999999999999Ap-4 );
   struct $7VECTOR3* vr$34 = _ZmlR7VECTOR3d( &TMP$2228$3, &TMP$2227$3, M$ + -0x1.p+0 );
   struct $7VECTOR3* vr$36 = _Zv13sinR7VECTOR3( &TMP$2229$3, vr$34 );
   struct $7VECTOR3* vr$38 = _ZmldR7VECTOR3( &TMP$2230$3, 0x1.p-1, vr$36 );
   struct $7VECTOR3* vr$40 = _ZpldR7VECTOR3( &TMP$2231$3, 0x1.p-1, vr$38 );
   _ZN7VECTOR3aSERS_( &COL$1, vr$40 );
  }
  label$2411:;
  struct $7VECTOR3* vr$43 = _ZN12SYSTEM_BUS_T9K_REFLECTER7VECTOR3S1_( &TMP$2232$2, THIS$1, &RD$, &NOR$ );
  _ZN7VECTOR3aSERS_( &REF$, vr$43 );
  double vr$44 = _ZN12SYSTEM_BUS_T6CALCAOEv( THIS$1 );
  OCC$ = vr$44;
  _ZN7VECTOR3C1Eddd( &TMP$2233$2, 0x1.p+0, 0x1.p+0, -0x1.p+0 );
  struct $7VECTOR3* vr$48 = _ZN12SYSTEM_BUS_T11K_NORMALIZEER7VECTOR3( &TMP$2234$2, THIS$1, &TMP$2233$2 );
  _ZN7VECTOR3aSERS_( &LIGHT$, vr$48 );
  double vr$51 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, (*(double*)((uint8*)&NOR$ + 24ll) * 0x1.p-1) + 0x1.p-1, 0x0p+0, 0x1.p+0 );
  AMBIENT$ = vr$51;
  double vr$52 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, &NOR$, &LIGHT$ );
  double vr$53 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, vr$52, 0x0p+0, 0x1.p+0 );
  DIFFUSE$ = vr$53;
  _ZN7VECTOR3C1Eddd( &TMP$2235$2, -(*(double*)((uint8*)&LIGHT$ + 16ll)), 0x0p+0, -(*(double*)((uint8*)&LIGHT$ + 32ll)) );
  struct $7VECTOR3* vr$59 = _ZN12SYSTEM_BUS_T11K_NORMALIZEER7VECTOR3( &TMP$2236$2, THIS$1, &TMP$2235$2 );
  double vr$60 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, &NOR$, vr$59 );
  double vr$61 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, vr$60, 0x0p+0, 0x1.p+0 );
  double vr$64 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, -(*(double*)((uint8*)&P3$ + 24ll)) + 0x1.p+0, 0x0p+0, 0x1.p+0 );
  BAC$ = vr$61 * vr$64;
  double vr$66 = _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEddd( THIS$1, -0x1.999999999999Ap-4, 0x1.999999999999Ap-4, *(double*)((uint8*)&REF$ + 24ll) );
  DOM$ = vr$66;
  double vr$67 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, &NOR$, &RD$ );
  double vr$69 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, vr$67 + 0x1.p+0, 0x0p+0, 0x1.p+0 );
  double vr$70 = _ZN12SYSTEM_BUS_T5K_POWEdd( THIS$1, vr$69, 0x1.p+1 );
  FR$ = vr$70;
  double vr$71 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, &REF$, &LIGHT$ );
  double vr$72 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, vr$71, 0x0p+0, 0x1.p+0 );
  double vr$73 = _ZN12SYSTEM_BUS_T5K_POWEdd( THIS$1, vr$72, 0x1.p+4 );
  SPECULAR$ = vr$73;
  MINT$ = 0x1.47AE147AE147Bp-6;
  TMAX$ = 0x1.4p+1;
  _ZN7VECTOR3aSERS_( &RD$, &LIGHT$ );
  double vr$74 = _ZN12SYSTEM_BUS_T10SOFTSHADOWEv( THIS$1 );
  DIFFUSE$ = DIFFUSE$ * vr$74;
  _ZN7VECTOR3aSERS_( &RD$, &REF$ );
  double vr$76 = _ZN12SYSTEM_BUS_T10SOFTSHADOWEv( THIS$1 );
  DOM$ = DOM$ * vr$76;
  _ZN7VECTOR3C1Eddd( &TMP$2237$2, 0x1.p+0, 0x1.B333333333333p-1, 0x1.199999999999Ap-1 );
  struct $7VECTOR3* vr$82 = _ZmldR7VECTOR3( &TMP$2238$2, DIFFUSE$ * 0x1.3333333333333p+0, &TMP$2237$2 );
  _ZN7VECTOR3aSERS_( &LIN$, vr$82 );
  _ZN7VECTOR3C1Eddd( &TMP$2239$2, 0x1.p+0, 0x1.B333333333333p-1, 0x1.199999999999Ap-1 );
  struct $7VECTOR3* vr$87 = _ZmldR7VECTOR3( &TMP$2240$2, SPECULAR$ * 0x1.3333333333333p+0, &TMP$2239$2 );
  struct $7VECTOR3* vr$89 = _ZmlR7VECTOR3d( &TMP$2241$2, vr$87, DIFFUSE$ );
  _ZN7VECTOR3pLERS_( &LIN$, vr$89 );
  _ZN7VECTOR3C1Eddd( &TMP$2242$2, 0x1.p-1, 0x1.6666666666666p-1, 0x1.p+0 );
  struct $7VECTOR3* vr$94 = _ZmldR7VECTOR3( &TMP$2243$2, AMBIENT$ * 0x1.999999999999Ap-3, &TMP$2242$2 );
  struct $7VECTOR3* vr$96 = _ZmlR7VECTOR3d( &TMP$2244$2, vr$94, OCC$ );
  _ZN7VECTOR3pLERS_( &LIN$, vr$96 );
  _ZN7VECTOR3C1Eddd( &TMP$2245$2, 0x1.p-1, 0x1.6666666666666p-1, 0x1.p+0 );
  struct $7VECTOR3* vr$101 = _ZmldR7VECTOR3( &TMP$2246$2, DOM$ * 0x1.3333333333333p-2, &TMP$2245$2 );
  struct $7VECTOR3* vr$103 = _ZmlR7VECTOR3d( &TMP$2247$2, vr$101, OCC$ );
  _ZN7VECTOR3pLERS_( &LIN$, vr$103 );
  _ZN7VECTOR3C1Eddd( &TMP$2248$2, 0x1.p-2, 0x1.p-2, 0x1.p-2 );
  struct $7VECTOR3* vr$108 = _ZmldR7VECTOR3( &TMP$2249$2, BAC$ * 0x1.3333333333333p-2, &TMP$2248$2 );
  struct $7VECTOR3* vr$110 = _ZmlR7VECTOR3d( &TMP$2250$2, vr$108, OCC$ );
  _ZN7VECTOR3pLERS_( &LIN$, vr$110 );
  _ZN7VECTOR3C1Eddd( &TMP$2251$2, 0x1.p+0, 0x1.p+0, 0x1.p+0 );
  struct $7VECTOR3* vr$115 = _ZmldR7VECTOR3( &TMP$2252$2, FR$ * 0x1.999999999999Ap-2, &TMP$2251$2 );
  struct $7VECTOR3* vr$117 = _ZmlR7VECTOR3d( &TMP$2253$2, vr$115, OCC$ );
  _ZN7VECTOR3pLERS_( &LIN$, vr$117 );
  struct $7VECTOR3* vr$120 = _ZmlR7VECTOR3S0_( &TMP$2254$2, &COL$1, &LIN$ );
  _ZN7VECTOR3aSERS_( &COL$1, vr$120 );
  double vr$124 = _ZN12SYSTEM_BUS_T5K_EXPEd( THIS$1, (T$ * T$) * -0x1.0624DD2F1A9FCp-9 );
  _ZN7VECTOR3C1Eddd( &TMP$2255$2, 0x1.999999999999Ap-1, 0x1.CCCCCCCCCCCCDp-1, 0x1.p+0 );
  struct $7VECTOR3* vr$131 = _ZN12SYSTEM_BUS_T5K_MIXER7VECTOR3S1_d( &TMP$2256$2, THIS$1, &COL$1, &TMP$2255$2, -vr$124 + 0x1.p+0 );
  _ZN7VECTOR3aSERS_( &COL$1, vr$131 );
 }
 label$2409:;
 struct $7VECTOR3* vr$135 = _ZN12SYSTEM_BUS_T7K_CLAMPER7VECTOR3dd( &TMP$2258$1, THIS$1, &COL$1, 0x0p+0, 0x1.p+0 );
 _ZN7VECTOR3C1ERS_( tmp$2216$1, vr$135 );
 goto label$2408;
 label$2408:;
 return tmp$2216$1;
}

struct $4MAT3 _ZN12SYSTEM_BUS_T9SETCAMERAEv( struct $12SYSTEM_BUS_T* THIS$1 )
{
 struct $7VECTOR3 TMP$2259$1;
 struct $7VECTOR3 TMP$2260$1;
 struct $7VECTOR3 TMP$2261$1;
 struct $7VECTOR3 TMP$2262$1;
 struct $7VECTOR3 TMP$2263$1;
 struct $7VECTOR3 TMP$2264$1;
 struct $7VECTOR3 TMP$2265$1;
 struct $4MAT3 fb$result$1;
 label$2413:;
 struct $7VECTOR3* vr$1 = _ZmiR7VECTOR3S0_( &TMP$2259$1, &TA$, &RO$ );
 struct $7VECTOR3* vr$3 = _ZN12SYSTEM_BUS_T11K_NORMALIZEER7VECTOR3( &TMP$2260$1, THIS$1, vr$1 );
 _ZN7VECTOR3aSERS_( &CW$, vr$3 );
 _ZN7VECTOR3C1Eddd( &TMP$2261$1, __builtin_sin( CR$ ), __builtin_cos( CR$ ), 0x0p+0 );
 _ZN7VECTOR3aSERS_( &CP$, &TMP$2261$1 );
 struct $7VECTOR3* vr$9 = _ZN12SYSTEM_BUS_T7K_CROSSER7VECTOR3S1_( &TMP$2262$1, THIS$1, &CW$, &CP$ );
 struct $7VECTOR3* vr$11 = _ZN12SYSTEM_BUS_T11K_NORMALIZEER7VECTOR3( &TMP$2263$1, THIS$1, vr$9 );
 _ZN7VECTOR3aSERS_( &CU$, vr$11 );
 struct $7VECTOR3* vr$13 = _ZN12SYSTEM_BUS_T7K_CROSSER7VECTOR3S1_( &TMP$2264$1, THIS$1, &CU$, &CW$ );
 struct $7VECTOR3* vr$15 = _ZN12SYSTEM_BUS_T11K_NORMALIZEER7VECTOR3( &TMP$2265$1, THIS$1, vr$13 );
 _ZN7VECTOR3aSERS_( &CV$, vr$15 );
 _ZN4MAT3C1ER7VECTOR3S1_S1_( &fb$result$1, &CU$, &CV$, &CW$ );
 goto label$2414;
 label$2414:;
 return fb$result$1;
}

struct $7VECTOR3* _ZN12SYSTEM_BUS_T8SPECTRUMEd( struct $7VECTOR3* tmp$2267$1, struct $12SYSTEM_BUS_T* THIS$1, double X$1 )
{
 double TMP$2268$1;
 double TMP$2269$1;
 double TMP$2270$1;
 double TMP$2271$1;
 double TMP$2272$1;
 double TMP$2273$1;
 double TMP$2274$1;
 double TMP$2275$1;
 double TMP$2276$1;
 double TMP$2277$1;
 double TMP$2278$1;
 double TMP$2279$1;
 double TMP$2280$1;
 double TMP$2281$1;
 double TMP$2282$1;
 double TMP$2283$1;
 label$2415:;
 double R$1;
 __builtin_memset( &R$1, 0, 8ll );
 double G$1;
 __builtin_memset( &G$1, 0, 8ll );
 double B$1;
 __builtin_memset( &B$1, 0, 8ll );
 if( X$1 >= 0x1.47AE147AE147Bp-3 ) goto label$2420;
 double vr$3 = _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEddd( THIS$1, 0x0p+0, 0x1.47AE147AE147Bp-3, X$1 );
 TMP$2271$1 = vr$3 * 0x1.5A1CAC083126Fp-3;
 goto label$2433;
 label$2420:;
 if( X$1 >= 0x1.C28F5C28F5C29p-3 ) goto label$2419;
 double vr$5 = _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEddd( THIS$1, 0x1.C28F5C28F5C29p-3, 0x1.47AE147AE147Bp-3, X$1 );
 TMP$2270$1 = (vr$5 * 0x1.126E978D4FDF4p-3) + 0x1.1EB851EB851ECp-5;
 goto label$2434;
 label$2419:;
 if( X$1 >= 0x1.A3D70A3D70A3Dp-2 ) goto label$2418;
 double vr$8 = _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEddd( THIS$1, 0x1.C28F5C28F5C29p-3, 0x1.A3D70A3D70A3Dp-2, X$1 );
 TMP$2269$1 = (vr$8 * 0x1.916872B020C4Ap-4) + 0x1.1EB851EB851ECp-5;
 goto label$2435;
 label$2418:;
 if( X$1 >= 0x1.47AE147AE147Bp-1 ) goto label$2417;
 double vr$11 = _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEddd( THIS$1, 0x1.A3D70A3D70A3Dp-2, 0x1.47AE147AE147Bp-1, X$1 );
 TMP$2268$1 = (vr$11 * 0x1.B3B645A1CAC08p-1) + 0x1.10624DD2F1AAp-3;
 goto label$2436;
 label$2417:;
 double vr$14 = _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEddd( THIS$1, 0x1.p+0, 0x1.47AE147AE147Bp-1, X$1 );
 TMP$2268$1 = vr$14 * 0x1.F7CED916872Bp-1;
 label$2436:;
 TMP$2269$1 = TMP$2268$1;
 label$2435:;
 TMP$2270$1 = TMP$2269$1;
 label$2434:;
 TMP$2271$1 = TMP$2270$1;
 label$2433:;
 R$1 = TMP$2271$1;
 if( X$1 >= 0x1.999999999999Ap-5 ) goto label$2424;
 TMP$2275$1 = 0x0p+0;
 goto label$2437;
 label$2424:;
 if( X$1 >= 0x1.3333333333333p-3 ) goto label$2423;
 double vr$16 = _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEddd( THIS$1, 0x1.999999999999Ap-5, 0x1.3333333333333p-3, X$1 );
 TMP$2274$1 = vr$16 * 0x1.810624DD2F1AAp-5;
 goto label$2438;
 label$2423:;
 if( X$1 >= 0x1.CCCCCCCCCCCCDp-2 ) goto label$2422;
 double vr$18 = _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEddd( THIS$1, 0x1.3333333333333p-3, 0x1.CCCCCCCCCCCCDp-2, X$1 );
 TMP$2273$1 = (vr$18 * 0x1.C395810624DD3p-1) + 0x1.810624DD2F1AAp-5;
 goto label$2439;
 label$2422:;
 if( X$1 >= 0x1.6666666666666p-1 ) goto label$2421;
 double vr$21 = _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEddd( THIS$1, 0x1.6666666666666p-1, 0x1.CCCCCCCCCCCCDp-2, X$1 );
 TMP$2272$1 = (vr$21 * 0x1.978D4FDF3B646p-1) + 0x1.10624DD2F1AAp-3;
 goto label$2440;
 label$2421:;
 double vr$24 = _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEddd( THIS$1, 0x1.p+0, 0x1.6666666666666p-1, X$1 );
 TMP$2272$1 = vr$24 * 0x1.10624DD2F1AAp-3;
 label$2440:;
 TMP$2273$1 = TMP$2272$1;
 label$2439:;
 TMP$2274$1 = TMP$2273$1;
 label$2438:;
 TMP$2275$1 = TMP$2274$1;
 label$2437:;
 G$1 = TMP$2275$1;
 if( X$1 >= 0x1.70A3D70A3D70Ap-3 ) goto label$2432;
 double vr$26 = _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEddd( THIS$1, 0x0p+0, 0x1.70A3D70A3D70Ap-3, X$1 );
 TMP$2283$1 = vr$26 * 0x1.p-1;
 goto label$2441;
 label$2432:;
 if( X$1 >= 0x1.C28F5C28F5C29p-3 ) goto label$2431;
 double vr$28 = _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEddd( THIS$1, 0x1.C28F5C28F5C29p-3, 0x1.70A3D70A3D70Ap-3, X$1 );
 TMP$2282$1 = (vr$28 * 0x1.999999999999Ap-4) + 0x1.999999999999Ap-2;
 goto label$2442;
 label$2431:;
 if( X$1 >= 0x1.6666666666666p-2 ) goto label$2430;
 double vr$31 = _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEddd( THIS$1, 0x1.C28F5C28F5C29p-3, 0x1.6666666666666p-2, X$1 );
 TMP$2281$1 = (vr$31 * 0x1.E353F7CED9168p-5) + 0x1.999999999999Ap-2;
 goto label$2443;
 label$2430:;
 if( X$1 >= 0x1.147AE147AE148p-1 ) goto label$2429;
 double vr$34 = _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEddd( THIS$1, 0x1.147AE147AE148p-1, 0x1.6666666666666p-2, X$1 );
 TMP$2280$1 = (vr$34 * 0x1.5604189374BC7p-2) + 0x1.p-3;
 goto label$2444;
 label$2429:;
 if( X$1 >= 0x1.3333333333333p-1 ) goto label$2428;
 double vr$37 = _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEddd( THIS$1, 0x1.147AE147AE148p-1, 0x1.3333333333333p-1, X$1 );
 TMP$2279$1 = (vr$37 * 0x1.5A1CAC083126Fp-3) + 0x1.p-3;
 goto label$2445;
 label$2428:;
 if( X$1 >= 0x1.6147AE147AE14p-1 ) goto label$2427;
 double vr$40 = _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEddd( THIS$1, 0x1.6147AE147AE14p-1, 0x1.3333333333333p-1, X$1 );
 TMP$2278$1 = (vr$40 * 0x1.F1A9FBE76C8B4p-3) + 0x1.A1CAC083126E9p-5;
 goto label$2446;
 label$2427:;
 if( X$1 >= 0x1.70A3D70A3D70Ap-1 ) goto label$2426;
 double vr$43 = _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEddd( THIS$1, 0x1.6147AE147AE14p-1, 0x1.70A3D70A3D70Ap-1, X$1 );
 TMP$2277$1 = (vr$43 * 0x1.604189374BC6Ap-5) + 0x1.A1CAC083126E9p-5;
 goto label$2447;
 label$2426:;
 if( X$1 >= 0x1.C7AE147AE147Bp-1 ) goto label$2425;
 double vr$46 = _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEddd( THIS$1, 0x1.C7AE147AE147Bp-1, 0x1.70A3D70A3D70Ap-1, X$1 );
 TMP$2276$1 = vr$46 * 0x1.810624DD2F1AAp-4;
 goto label$2448;
 label$2425:;
 TMP$2276$1 = 0x0p+0;
 label$2448:;
 TMP$2277$1 = TMP$2276$1;
 label$2447:;
 TMP$2278$1 = TMP$2277$1;
 label$2446:;
 TMP$2279$1 = TMP$2278$1;
 label$2445:;
 TMP$2280$1 = TMP$2279$1;
 label$2444:;
 TMP$2281$1 = TMP$2280$1;
 label$2443:;
 TMP$2282$1 = TMP$2281$1;
 label$2442:;
 TMP$2283$1 = TMP$2282$1;
 label$2441:;
 B$1 = TMP$2283$1;
 _ZN7VECTOR3C1Eddd( tmp$2267$1, R$1, G$1, B$1 );
 goto label$2416;
 label$2416:;
 return tmp$2267$1;
}

struct $7VECTOR3* _ZN12SYSTEM_BUS_T12SPECTRUMPOLYEd( struct $7VECTOR3* tmp$2285$1, struct $12SYSTEM_BUS_T* THIS$1, double X$1 )
{
 struct $7VECTOR3 TMP$2286$1;
 struct $7VECTOR3 TMP$2287$1;
 struct $7VECTOR3 TMP$2288$1;
 struct $7VECTOR3 TMP$2289$1;
 struct $7VECTOR3 TMP$2290$1;
 struct $7VECTOR3 TMP$2291$1;
 struct $7VECTOR3 TMP$2292$1;
 struct $7VECTOR3 TMP$2293$1;
 struct $7VECTOR3 TMP$2294$1;
 struct $7VECTOR3 TMP$2295$1;
 struct $7VECTOR3 TMP$2296$1;
 struct $7VECTOR3 TMP$2297$1;
 struct $7VECTOR3 TMP$2298$1;
 struct $7VECTOR3 TMP$2299$1;
 struct $7VECTOR3 TMP$2300$1;
 struct $7VECTOR3 TMP$2301$1;
 struct $7VECTOR3 TMP$2302$1;
 struct $7VECTOR3 TMP$2303$1;
 struct $7VECTOR3 TMP$2304$1;
 struct $7VECTOR3 TMP$2305$1;
 struct $7VECTOR3 TMP$2306$1;
 struct $7VECTOR3 TMP$2307$1;
 struct $7VECTOR3 TMP$2308$1;
 struct $7VECTOR3 TMP$2309$1;
 struct $7VECTOR3 TMP$2310$1;
 struct $7VECTOR3 TMP$2311$1;
 label$2449:;
 _ZN7VECTOR3C1Eddd( &TMP$2294$1, 0x1.CF6DFBE76C8B4p+11, -0x1.558B333333333p+10, 0x1.2898ED916872Bp+11 );
 struct $7VECTOR3* vr$3 = _ZmlR7VECTOR3d( &TMP$2295$1, &TMP$2294$1, X$1 );
 _ZN7VECTOR3C1Eddd( &TMP$2293$1, -0x1.05C95C28F5C29p+14, 0x1.DAA7851EB851Fp+12, -0x1.61B2147AE147Bp+13 );
 struct $7VECTOR3* vr$7 = _ZplR7VECTOR3S0_( &TMP$2296$1, &TMP$2293$1, vr$3 );
 struct $7VECTOR3* vr$9 = _ZmlR7VECTOR3d( &TMP$2297$1, vr$7, X$1 );
 _ZN7VECTOR3C1Eddd( &TMP$2292$1, 0x1.DF688F5C28F5Cp+14, -0x1.096070A3D70A4p+14, 0x1.5C68666666666p+14 );
 struct $7VECTOR3* vr$13 = _ZplR7VECTOR3S0_( &TMP$2298$1, &TMP$2292$1, vr$9 );
 struct $7VECTOR3* vr$15 = _ZmlR7VECTOR3d( &TMP$2299$1, vr$13, X$1 );
 _ZN7VECTOR3C1Eddd( &TMP$2291$1, -0x1.C5DDC28F5C28Fp+14, 0x1.33BFA3D70A3D7p+14, -0x1.6C213D70A3D71p+14 );
 struct $7VECTOR3* vr$19 = _ZplR7VECTOR3S0_( &TMP$2300$1, &TMP$2291$1, vr$15 );
 struct $7VECTOR3* vr$21 = _ZmlR7VECTOR3d( &TMP$2301$1, vr$19, X$1 );
 _ZN7VECTOR3C1Eddd( &TMP$2290$1, 0x1.D544666666666p+13, -0x1.8B31AE147AE14p+13, 0x1.ADC4CCCCCCCCDp+13 );
 struct $7VECTOR3* vr$25 = _ZplR7VECTOR3S0_( &TMP$2302$1, &TMP$2290$1, vr$21 );
 struct $7VECTOR3* vr$27 = _ZmlR7VECTOR3d( &TMP$2303$1, vr$25, X$1 );
 _ZN7VECTOR3C1Eddd( &TMP$2289$1, -0x1.0190D916872Bp+12, 0x1.1502AC083126Fp+12, -0x1.16F283126E979p+12 );
 struct $7VECTOR3* vr$31 = _ZplR7VECTOR3S0_( &TMP$2304$1, &TMP$2289$1, vr$27 );
 struct $7VECTOR3* vr$33 = _ZmlR7VECTOR3d( &TMP$2305$1, vr$31, X$1 );
 _ZN7VECTOR3C1Eddd( &TMP$2288$1, 0x1.109178D4FDF3Bp+9, -0x1.8C1683E425AEEp+9, 0x1.5C5837B4A233Ap+9 );
 struct $7VECTOR3* vr$37 = _ZplR7VECTOR3S0_( &TMP$2306$1, &TMP$2288$1, vr$33 );
 struct $7VECTOR3* vr$39 = _ZmlR7VECTOR3d( &TMP$2307$1, vr$37, X$1 );
 _ZN7VECTOR3C1Eddd( &TMP$2287$1, -0x1.DA66666666666p+4, 0x1.10433EFF19503p+6, -0x1.2080639D5E4A4p+5 );
 struct $7VECTOR3* vr$43 = _ZplR7VECTOR3S0_( &TMP$2308$1, &TMP$2287$1, vr$39 );
 struct $7VECTOR3* vr$45 = _ZmlR7VECTOR3d( &TMP$2309$1, vr$43, X$1 );
 _ZN7VECTOR3C1Eddd( &TMP$2286$1, 0x1.38536D655E28Bp+0, -0x1.EEEB3DD11BE6Ep+0, 0x1.9FAFC8B0079A3p+0 );
 struct $7VECTOR3* vr$49 = _ZplR7VECTOR3S0_( &TMP$2310$1, &TMP$2286$1, vr$45 );
 struct $7VECTOR3* vr$51 = _ZmlR7VECTOR3d( &TMP$2311$1, vr$49, X$1 );
 _ZN7VECTOR3C1ERS_( tmp$2285$1, vr$51 );
 goto label$2450;
 label$2450:;
 return tmp$2285$1;
}

void _ZN12SYSTEM_BUS_T9MAINIMAGEER7VECTOR4RK7VECTOR2( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR4* FRAGCOLOR$1, struct $7VECTOR2* FRAGCOORD$1 )
{
 struct $7VECTOR2 TMP$2312$1;
 struct $7VECTOR2 TMP$2313$1;
 struct $7VECTOR2 TMP$2314$1;
 double TMP$2315$1;
 struct $7VECTOR2 TMP$2316$1;
 double TMP$2317$1;
 struct $7VECTOR3 TMP$2318$1;
 struct $7VECTOR3 TMP$2319$1;
 struct $4MAT3 TMP$2320$1;
 struct $7VECTOR3 TMP$2321$1;
 struct $7VECTOR2 TMP$2322$1;
 struct $7VECTOR3 TMP$2323$1;
 struct $7VECTOR3 TMP$2324$1;
 struct $7VECTOR3 TMP$2325$1;
 struct $7VECTOR4 TMP$2326$1;
 struct $7VECTOR3 TMP$2327$1;
 struct $7VECTOR3 TMP$2328$1;
 label$2451:;
 RTIME$ = IGLOBALTIME$;
 struct $7VECTOR2* vr$1 = _ZN7VECTOR32XYEv( &TMP$2312$1, &IRESOLUTION$ );
 struct $7VECTOR2* vr$5 = _ZdvR7VECTOR2S0_( &TMP$2313$1, (struct $7VECTOR2*)FRAGCOORD$1, vr$1 );
 _ZN7VECTOR2aSERS_( &Q$, vr$5 );
 TMP$2317$1 = 0x1.p+0;
 TMP$2315$1 = 0x1.p+1;
 struct $7VECTOR2* vr$9 = _ZmlR7VECTOR2Rd( &TMP$2314$1, &Q$, &TMP$2315$1 );
 struct $7VECTOR2* vr$11 = _ZmiR7VECTOR2Rd( &TMP$2316$1, vr$9, &TMP$2317$1 );
 _ZN7VECTOR2aSERS_( &P2$, vr$11 );
 *(double*)&P2$ = *(double*)&P2$ * (*(double*)((uint8*)&IRESOLUTION$ + 16ll) / *(double*)((uint8*)&IRESOLUTION$ + 24ll));
 _ZN7VECTOR3C1Eddd( &TMP$2318$1, __builtin_cos( RTIME$ ) * 0x1.p+1, 0x1.p+0, __builtin_sin( RTIME$ ) * 0x1.p+1 );
 _ZN7VECTOR3aSERS_( &RO$, &TMP$2318$1 );
 _ZN7VECTOR3C1Eddd( &TMP$2319$1, -0x1.p-1, -0x1.999999999999Ap-2, 0x1.p-1 );
 _ZN7VECTOR3aSERS_( &TA$, &TMP$2319$1 );
 CR$ = 0x0p+0;
 struct $4MAT3 vr$22 = _ZN12SYSTEM_BUS_T9SETCAMERAEv( THIS$1 );
 TMP$2320$1 = vr$22;
 _ZN4MAT3aSERKS_( &CA$, (struct $4MAT3*)&TMP$2320$1 );
 struct $7VECTOR2* vr$25 = _ZN7VECTOR22XYEv( &TMP$2322$1, &P2$ );
 _ZN7VECTOR3C1ER7VECTOR2d( &TMP$2321$1, vr$25, 0x1.p+1 );
 struct $7VECTOR3* vr$29 = _ZN12SYSTEM_BUS_T11K_NORMALIZEER7VECTOR3( &TMP$2323$1, THIS$1, &TMP$2321$1 );
 struct $7VECTOR3* vr$31 = _ZmlR4MAT3R7VECTOR3( &TMP$2324$1, &CA$, vr$29 );
 _ZN7VECTOR3aSERS_( &RD$, vr$31 );
 struct $7VECTOR3 COL$1;
 struct $7VECTOR3* vr$33 = _ZN12SYSTEM_BUS_T11RENDER_GLSLEv( &TMP$2325$1, THIS$1 );
 _ZN7VECTOR3C1ERS_( &COL$1, vr$33 );
 _ZN7VECTOR3C1Ed( &TMP$2327$1, 0x1.D16872B020C4Ap-2 );
 struct $7VECTOR3* vr$39 = _ZN12SYSTEM_BUS_T5K_POWER7VECTOR3S1_( &TMP$2328$1, THIS$1, &COL$1, &TMP$2327$1 );
 _ZN7VECTOR4C1ER7VECTOR3d( &TMP$2326$1, vr$39, 0x1.p+0 );
 _ZN7VECTOR4aSERS_( FRAGCOLOR$1, &TMP$2326$1 );
 label$2452:;
}

void _ZN12SYSTEM_BUS_T10_MAINIMAGEER7VECTOR4RK7VECTOR2( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR4* FRAGCOLOR$1, struct $7VECTOR2* FRAGCOORD$1 )
{
 struct $7VECTOR2 TMP$2330$1;
 struct $7VECTOR2 TMP$2331$1;
 struct $7VECTOR3 TMP$2332$1;
 struct $7VECTOR3 TMP$2333$1;
 struct $7VECTOR3 TMP$2334$1;
 struct $7VECTOR3 TMP$2335$1;
 struct $7VECTOR3 TMP$2336$1;
 struct $7VECTOR3 TMP$2337$1;
 struct $7VECTOR3 TMP$2338$1;
 struct $7VECTOR4 TMP$2339$1;
 label$2453:;
 struct $7VECTOR3 UV$1;
 struct $7VECTOR2* vr$1 = _ZN7VECTOR32XYEv( &TMP$2330$1, &IRESOLUTION$ );
 struct $7VECTOR2* vr$5 = _ZdvR7VECTOR2S0_( &TMP$2331$1, (struct $7VECTOR2*)FRAGCOORD$1, vr$1 );
 _ZN7VECTOR3C1ER7VECTOR2d( &UV$1, vr$5, 0x1.p+0 );
 struct $7VECTOR3 COL$1;
 _ZN7VECTOR3C1Eddd( &TMP$2334$1, 0x0p+0, 0x1.p+1, 0x1.p+2 );
 struct $7VECTOR3* vr$11 = _ZN7VECTOR33XYXEv( &TMP$2332$1, &UV$1 );
 struct $7VECTOR3* vr$13 = _ZpldR7VECTOR3( &TMP$2333$1, IGLOBALTIME$, vr$11 );
 struct $7VECTOR3* vr$15 = _ZplR7VECTOR3S0_( &TMP$2335$1, vr$13, &TMP$2334$1 );
 struct $7VECTOR3* vr$17 = _Zv13cosR7VECTOR3( &TMP$2336$1, vr$15 );
 struct $7VECTOR3* vr$19 = _ZmldR7VECTOR3( &TMP$2337$1, 0x1.p-1, vr$17 );
 struct $7VECTOR3* vr$21 = _ZpldR7VECTOR3( &TMP$2338$1, 0x1.p-1, vr$19 );
 _ZN7VECTOR3C1ERS_( &COL$1, vr$21 );
 _ZN7VECTOR4C1ER7VECTOR3d( &TMP$2339$1, &COL$1, 0x1.p+0 );
 _ZN7VECTOR4aSERS_( FRAGCOLOR$1, &TMP$2339$1 );
 label$2454:;
}

void _ZN12SYSTEM_BUS_T9EXEC_GLSLEv( struct $12SYSTEM_BUS_T* THIS$1 )
{
 label$2455:;
 uint64 FRAMES$1;
 __builtin_memset( &FRAMES$1, 0, 8ll );
 uint64 MX$1;
 __builtin_memset( &MX$1, 0, 8ll );
 uint64 MY$1;
 __builtin_memset( &MY$1, 0, 8ll );
 uint64 MB$1;
 __builtin_memset( &MB$1, 0, 8ll );
 SCR_W$ = 1920ull;
 SCR_H$ = 1080ull;
 *(double*)((uint8*)&IRESOLUTION$ + 16ll) = (double)SCR_W$;
 *(double*)((uint8*)&IRESOLUTION$ + 24ll) = (double)SCR_H$;
 *(double*)((uint8*)&IRESOLUTION$ + 32ll) = *(double*)((uint8*)&IRESOLUTION$ + 16ll) / *(double*)((uint8*)&IRESOLUTION$ + 24ll);
 struct $7VECTOR2 FRAGCOORD$1;
 _ZN7VECTOR2C1Ev( &FRAGCOORD$1 );
 struct $7VECTOR4 FRAGCOLOR$1;
 _ZN7VECTOR4C1Ev( &FRAGCOLOR$1 );
 double TFRAMESTART$1;
 TFRAMESTART$1 = 0x0p+0;
 uint64 COLOUR$1;
 __builtin_memset( &COLOUR$1, 0, 8ll );
 label$2457:;
 if( (double)FRAMES$1 == *(double*)((int64)(double*)MEM64$ + 394912ll) ) goto label$2458;
 {
  FBSTRING TMP$2344$2;
  *(double*)((uint8*)&FRAGCOORD$1 + 8ll) = (double)(SCR_H$ + 18446744073709551615ull);
  {
   uint64 Y$3;
   Y$3 = 0ull;
   uint64 TMP$2340$3;
   TMP$2340$3 = SCR_H$ + 18446744073709551615ull;
   goto label$2459;
   label$2462:;
   {
    fb_GfxLock( );
    {
     uint64 X$5;
     X$5 = 0ull;
     uint64 TMP$2341$5;
     TMP$2341$5 = SCR_W$ + 18446744073709551615ull;
     goto label$2463;
     label$2466:;
     {
      *(double*)&FRAGCOORD$1 = (double)X$5;
      _ZN12SYSTEM_BUS_T9MAINIMAGEER7VECTOR4RK7VECTOR2( THIS$1, &FRAGCOLOR$1, (struct $7VECTOR2*)&FRAGCOORD$1 );
      *(double*)((int64)(double*)MEM64$ + 394888ll) = (double)X$5;
      *(double*)((int64)(double*)MEM64$ + 394896ll) = (double)Y$3;
      uint64 vr$21 = _ZN7VECTOR4cvyEv( &FRAGCOLOR$1 );
      *(double*)((int64)(double*)MEM64$ + 394824ll) = (double)vr$21;
      _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.820Cp+15, 0x0p+0 );
     }
     label$2464:;
     X$5 = X$5 + 1ull;
     label$2463:;
     if( X$5 <= TMP$2341$5 ) goto label$2466;
     label$2465:;
    }
    fb_GfxUnlock( (int32)Y$3, (int32)Y$3 );
    fb_Sleep( 1 );
    *(double*)((uint8*)&FRAGCOORD$1 + 8ll) = *(double*)((uint8*)&FRAGCOORD$1 + 8ll) + -0x1.p+0;
    fb_GfxPut( (void*)0ull, 0x0p+0f, 0x0p+0f, (void*)FGIMAGE$, -65536, -65536, -65536, -65536, 0, 6, (void*)&fb_hPutAlpha, -1, (void*)0ull, (void*)0ull );
   }
   label$2460:;
   Y$3 = Y$3 + 1ull;
   label$2459:;
   if( Y$3 <= TMP$2340$3 ) goto label$2462;
   label$2461:;
  }
  IGLOBALTIME$ = IGLOBALTIME$ + 0x1.5555555555555p-5;
  double FPS$2;
  FPS$2 = 0x1.p+0 / (IGLOBALTIME$ - TFRAMESTART$1);
  FBSTRING* vr$32 = fb_ULongintToStr( FRAMES$1 + 1ull );
  __builtin_memset( &TMP$2344$2, 0, 24ll );
  FBSTRING* vr$35 = fb_StrConcat( &TMP$2344$2, (void*)"frame: ", 8ll, (void*)vr$32, -1ll );
  fb_GfxSetWindowTitle( (FBSTRING*)vr$35 );
  TFRAMESTART$1 = IGLOBALTIME$;
  FRAMES$1 = FRAMES$1 + 1ull;
 }
 goto label$2457;
 label$2458:;
 label$2456:;
}

void _ZN12SYSTEM_BUS_T12EXEC_GLSL_40Ev( struct $12SYSTEM_BUS_T* THIS$1 )
{
 label$2467:;
 uint64 FRAMES$1;
 __builtin_memset( &FRAMES$1, 0, 8ll );
 uint64 MX$1;
 __builtin_memset( &MX$1, 0, 8ll );
 uint64 MY$1;
 __builtin_memset( &MY$1, 0, 8ll );
 uint64 MB$1;
 __builtin_memset( &MB$1, 0, 8ll );
 SCR_W$ = 40ull;
 SCR_H$ = 25ull;
 *(double*)((uint8*)&IRESOLUTION$ + 16ll) = (double)SCR_W$;
 *(double*)((uint8*)&IRESOLUTION$ + 24ll) = (double)SCR_H$;
 *(double*)((uint8*)&IRESOLUTION$ + 32ll) = *(double*)((uint8*)&IRESOLUTION$ + 16ll) / *(double*)((uint8*)&IRESOLUTION$ + 24ll);
 struct $7VECTOR2 FRAGCOORD$1;
 _ZN7VECTOR2C1Ev( &FRAGCOORD$1 );
 struct $7VECTOR4 FRAGCOLOR$1;
 _ZN7VECTOR4C1Ev( &FRAGCOLOR$1 );
 double TFRAMESTART$1;
 TFRAMESTART$1 = 0x0p+0;
 uint64 COLOUR$1;
 __builtin_memset( &COLOUR$1, 0, 8ll );
 label$2469:;
 if( (double)FRAMES$1 == *(double*)((int64)(double*)MEM64$ + 394912ll) ) goto label$2470;
 {
  FBSTRING TMP$2348$2;
  *(double*)((uint8*)&FRAGCOORD$1 + 8ll) = (double)(SCR_H$ + 18446744073709551615ull);
  {
   uint64 Y$3;
   Y$3 = 0ull;
   uint64 TMP$2345$3;
   TMP$2345$3 = SCR_H$ + 18446744073709551615ull;
   goto label$2471;
   label$2474:;
   {
    fb_GfxLock( );
    {
     uint64 X$5;
     X$5 = 0ull;
     uint64 TMP$2346$5;
     TMP$2346$5 = SCR_W$ + 18446744073709551615ull;
     goto label$2475;
     label$2478:;
     {
      *(double*)&FRAGCOORD$1 = (double)X$5;
      _ZN12SYSTEM_BUS_T9MAINIMAGEER7VECTOR4RK7VECTOR2( THIS$1, &FRAGCOLOR$1, (struct $7VECTOR2*)&FRAGCOORD$1 );
      *(double*)((int64)(double*)MEM64$ + 394888ll) = (double)X$5;
      *(double*)((int64)(double*)MEM64$ + 394896ll) = (double)Y$3;
      uint64 vr$21 = _ZN7VECTOR4cvyEv( &FRAGCOLOR$1 );
      *(double*)((int64)(double*)MEM64$ + 394824ll) = (double)vr$21;
      _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.83D6p+15, 0x0p+0 );
     }
     label$2476:;
     X$5 = X$5 + 1ull;
     label$2475:;
     if( X$5 <= TMP$2346$5 ) goto label$2478;
     label$2477:;
    }
    fb_GfxUnlock( (int32)Y$3, (int32)Y$3 );
    fb_Sleep( 1 );
    *(double*)((uint8*)&FRAGCOORD$1 + 8ll) = *(double*)((uint8*)&FRAGCOORD$1 + 8ll) + -0x1.p+0;
   }
   label$2472:;
   Y$3 = Y$3 + 1ull;
   label$2471:;
   if( Y$3 <= TMP$2345$3 ) goto label$2474;
   label$2473:;
  }
  *(double*)((int64)(double*)MEM64$ + 426128ll) = (double)(((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 426128ll) + 0x1.p+0 )) % 1079ll);
  fb_GfxPut( (void*)0ull, 0x0p+0f, 0x0p+0f, (void*)FGIMAGE$, -65536, -65536, -65536, -65536, 0, 6, (void*)&fb_hPutAlpha, -1, (void*)0ull, (void*)0ull );
  IGLOBALTIME$ = IGLOBALTIME$ + 0x1.5555555555555p-5;
  double FPS$2;
  FPS$2 = 0x1.p+0 / (IGLOBALTIME$ - TFRAMESTART$1);
  FBSTRING* vr$36 = fb_ULongintToStr( FRAMES$1 + 1ull );
  __builtin_memset( &TMP$2348$2, 0, 24ll );
  FBSTRING* vr$39 = fb_StrConcat( &TMP$2348$2, (void*)"frame: ", 8ll, (void*)vr$36, -1ll );
  fb_GfxSetWindowTitle( (FBSTRING*)vr$39 );
  TFRAMESTART$1 = IGLOBALTIME$;
  FRAMES$1 = FRAMES$1 + 1ull;
 }
 goto label$2469;
 label$2470:;
 label$2468:;
}

void _ZN12SYSTEM_BUS_T12EXEC_GLSL_90Ev( struct $12SYSTEM_BUS_T* THIS$1 )
{
 label$2479:;
 uint64 FRAMES$1;
 __builtin_memset( &FRAMES$1, 0, 8ll );
 uint64 MX$1;
 __builtin_memset( &MX$1, 0, 8ll );
 uint64 MY$1;
 __builtin_memset( &MY$1, 0, 8ll );
 uint64 MB$1;
 __builtin_memset( &MB$1, 0, 8ll );
 SCR_W$ = 90ull;
 SCR_H$ = 60ull;
 *(double*)((uint8*)&IRESOLUTION$ + 16ll) = (double)SCR_W$;
 *(double*)((uint8*)&IRESOLUTION$ + 24ll) = (double)SCR_H$;
 *(double*)((uint8*)&IRESOLUTION$ + 32ll) = *(double*)((uint8*)&IRESOLUTION$ + 16ll) / *(double*)((uint8*)&IRESOLUTION$ + 24ll);
 struct $7VECTOR2 FRAGCOORD$1;
 _ZN7VECTOR2C1Ev( &FRAGCOORD$1 );
 struct $7VECTOR4 FRAGCOLOR$1;
 _ZN7VECTOR4C1Ev( &FRAGCOLOR$1 );
 double TFRAMESTART$1;
 TFRAMESTART$1 = 0x0p+0;
 uint64 COLOUR$1;
 __builtin_memset( &COLOUR$1, 0, 8ll );
 label$2481:;
 if( (double)FRAMES$1 == *(double*)((int64)(double*)MEM64$ + 394912ll) ) goto label$2482;
 {
  FBSTRING TMP$2352$2;
  *(double*)((uint8*)&FRAGCOORD$1 + 8ll) = (double)(SCR_H$ + 18446744073709551615ull);
  {
   uint64 Y$3;
   Y$3 = 0ull;
   uint64 TMP$2349$3;
   TMP$2349$3 = SCR_H$ + 18446744073709551615ull;
   goto label$2483;
   label$2486:;
   {
    fb_GfxLock( );
    {
     uint64 X$5;
     X$5 = 0ull;
     uint64 TMP$2350$5;
     TMP$2350$5 = SCR_W$ + 18446744073709551615ull;
     goto label$2487;
     label$2490:;
     {
      *(double*)&FRAGCOORD$1 = (double)X$5;
      _ZN12SYSTEM_BUS_T9MAINIMAGEER7VECTOR4RK7VECTOR2( THIS$1, &FRAGCOLOR$1, (struct $7VECTOR2*)&FRAGCOORD$1 );
      *(double*)((int64)(double*)MEM64$ + 394888ll) = (double)X$5;
      *(double*)((int64)(double*)MEM64$ + 394896ll) = (double)Y$3;
      uint64 vr$21 = _ZN7VECTOR4cvyEv( &FRAGCOLOR$1 );
      *(double*)((int64)(double*)MEM64$ + 394824ll) = (double)vr$21;
      _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.83D8p+15, 0x0p+0 );
     }
     label$2488:;
     X$5 = X$5 + 1ull;
     label$2487:;
     if( X$5 <= TMP$2350$5 ) goto label$2490;
     label$2489:;
    }
    fb_GfxUnlock( (int32)Y$3, (int32)Y$3 );
    fb_Sleep( 1 );
    *(double*)((uint8*)&FRAGCOORD$1 + 8ll) = *(double*)((uint8*)&FRAGCOORD$1 + 8ll) + -0x1.p+0;
    *(double*)((int64)(double*)MEM64$ + 426128ll) = (double)(((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 426128ll) + 0x1.p+0 )) % 1079ll);
   }
   label$2484:;
   Y$3 = Y$3 + 1ull;
   label$2483:;
   if( Y$3 <= TMP$2349$3 ) goto label$2486;
   label$2485:;
  }
  fb_GfxPut( (void*)0ull, 0x0p+0f, 0x0p+0f, (void*)FGIMAGE$, -65536, -65536, -65536, -65536, 0, 6, (void*)&fb_hPutAlpha, -1, (void*)0ull, (void*)0ull );
  IGLOBALTIME$ = IGLOBALTIME$ + 0x1.5555555555555p-5;
  double FPS$2;
  FPS$2 = 0x1.p+0 / (IGLOBALTIME$ - TFRAMESTART$1);
  FBSTRING* vr$36 = fb_ULongintToStr( FRAMES$1 + 1ull );
  __builtin_memset( &TMP$2352$2, 0, 24ll );
  FBSTRING* vr$39 = fb_StrConcat( &TMP$2352$2, (void*)"frame: ", 8ll, (void*)vr$36, -1ll );
  fb_GfxSetWindowTitle( (FBSTRING*)vr$39 );
  TFRAMESTART$1 = IGLOBALTIME$;
  FRAMES$1 = FRAMES$1 + 1ull;
 }
 goto label$2481;
 label$2482:;
 label$2480:;
}

void _ZN12SYSTEM_BUS_T13EXEC_GLSL_120Ev( struct $12SYSTEM_BUS_T* THIS$1 )
{
 label$2491:;
 uint64 FRAMES$1;
 __builtin_memset( &FRAMES$1, 0, 8ll );
 uint64 MX$1;
 __builtin_memset( &MX$1, 0, 8ll );
 uint64 MY$1;
 __builtin_memset( &MY$1, 0, 8ll );
 uint64 MB$1;
 __builtin_memset( &MB$1, 0, 8ll );
 SCR_W$ = 120ull;
 SCR_H$ = 60ull;
 *(double*)((uint8*)&IRESOLUTION$ + 16ll) = (double)SCR_W$;
 *(double*)((uint8*)&IRESOLUTION$ + 24ll) = (double)SCR_H$;
 *(double*)((uint8*)&IRESOLUTION$ + 32ll) = *(double*)((uint8*)&IRESOLUTION$ + 16ll) / *(double*)((uint8*)&IRESOLUTION$ + 24ll);
 struct $7VECTOR2 FRAGCOORD$1;
 _ZN7VECTOR2C1Ev( &FRAGCOORD$1 );
 struct $7VECTOR4 FRAGCOLOR$1;
 _ZN7VECTOR4C1Ev( &FRAGCOLOR$1 );
 double TFRAMESTART$1;
 TFRAMESTART$1 = 0x0p+0;
 uint64 COLOUR$1;
 __builtin_memset( &COLOUR$1, 0, 8ll );
 label$2493:;
 if( (double)FRAMES$1 == *(double*)((int64)(double*)MEM64$ + 394912ll) ) goto label$2494;
 {
  FBSTRING TMP$2356$2;
  *(double*)((uint8*)&FRAGCOORD$1 + 8ll) = (double)(SCR_H$ + 18446744073709551615ull);
  {
   uint64 Y$3;
   Y$3 = 0ull;
   uint64 TMP$2353$3;
   TMP$2353$3 = SCR_H$ + 18446744073709551615ull;
   goto label$2495;
   label$2498:;
   {
    fb_GfxLock( );
    {
     uint64 X$5;
     X$5 = 0ull;
     uint64 TMP$2354$5;
     TMP$2354$5 = SCR_W$ + 18446744073709551615ull;
     goto label$2499;
     label$2502:;
     {
      *(double*)&FRAGCOORD$1 = (double)X$5;
      _ZN12SYSTEM_BUS_T9MAINIMAGEER7VECTOR4RK7VECTOR2( THIS$1, &FRAGCOLOR$1, (struct $7VECTOR2*)&FRAGCOORD$1 );
      *(double*)((int64)(double*)MEM64$ + 394888ll) = (double)X$5;
      *(double*)((int64)(double*)MEM64$ + 394896ll) = (double)Y$3;
      uint64 vr$21 = _ZN7VECTOR4cvyEv( &FRAGCOLOR$1 );
      *(double*)((int64)(double*)MEM64$ + 394824ll) = (double)vr$21;
      _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.83DAp+15, 0x0p+0 );
     }
     label$2500:;
     X$5 = X$5 + 1ull;
     label$2499:;
     if( X$5 <= TMP$2354$5 ) goto label$2502;
     label$2501:;
    }
    fb_GfxUnlock( (int32)Y$3, (int32)Y$3 );
    fb_Sleep( 1 );
    *(double*)((uint8*)&FRAGCOORD$1 + 8ll) = *(double*)((uint8*)&FRAGCOORD$1 + 8ll) + -0x1.p+0;
    *(double*)((int64)(double*)MEM64$ + 426128ll) = (double)(((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 426128ll) + 0x1.p+0 )) % 1079ll);
   }
   label$2496:;
   Y$3 = Y$3 + 1ull;
   label$2495:;
   if( Y$3 <= TMP$2353$3 ) goto label$2498;
   label$2497:;
  }
  fb_GfxPut( (void*)0ull, 0x0p+0f, 0x0p+0f, (void*)FGIMAGE$, -65536, -65536, -65536, -65536, 0, 6, (void*)&fb_hPutAlpha, -1, (void*)0ull, (void*)0ull );
  IGLOBALTIME$ = IGLOBALTIME$ + 0x1.5555555555555p-5;
  double FPS$2;
  FPS$2 = 0x1.p+0 / (IGLOBALTIME$ - TFRAMESTART$1);
  FBSTRING* vr$36 = fb_ULongintToStr( FRAMES$1 + 1ull );
  __builtin_memset( &TMP$2356$2, 0, 24ll );
  FBSTRING* vr$39 = fb_StrConcat( &TMP$2356$2, (void*)"frame: ", 8ll, (void*)vr$36, -1ll );
  fb_GfxSetWindowTitle( (FBSTRING*)vr$39 );
  TFRAMESTART$1 = IGLOBALTIME$;
  FRAMES$1 = FRAMES$1 + 1ull;
 }
 goto label$2493;
 label$2494:;
 label$2492:;
}

double _ZN12SYSTEM_BUS_T7POV_MINEdd( struct $12SYSTEM_BUS_T* THIS$1, double X$1, double Y$1 )
{
 double TMP$2357$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2503:;
 if( X$1 <= Y$1 ) goto label$2505;
 TMP$2357$1 = Y$1;
 goto label$2506;
 label$2505:;
 TMP$2357$1 = X$1;
 label$2506:;
 fb$result$1 = TMP$2357$1;
 goto label$2504;
 label$2504:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7POV_MAXEdd( struct $12SYSTEM_BUS_T* THIS$1, double X$1, double Y$1 )
{
 double TMP$2358$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2507:;
 if( X$1 >= Y$1 ) goto label$2509;
 TMP$2358$1 = Y$1;
 goto label$2510;
 label$2509:;
 TMP$2358$1 = X$1;
 label$2510:;
 fb$result$1 = TMP$2358$1;
 goto label$2508;
 label$2508:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8POV_MIN3Eddd( struct $12SYSTEM_BUS_T* THIS$1, double X$1, double Y$1, double Z$1 )
{
 double TMP$2359$1;
 double TMP$2360$1;
 double TMP$2361$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2511:;
 if( X$1 >= Y$1 ) goto label$2515;
 if( X$1 >= Z$1 ) goto label$2513;
 TMP$2359$1 = X$1;
 goto label$2517;
 label$2513:;
 TMP$2359$1 = Z$1;
 label$2517:;
 TMP$2361$1 = TMP$2359$1;
 goto label$2516;
 label$2515:;
 if( Y$1 >= Z$1 ) goto label$2514;
 TMP$2360$1 = Y$1;
 goto label$2518;
 label$2514:;
 TMP$2360$1 = Z$1;
 label$2518:;
 TMP$2361$1 = TMP$2360$1;
 label$2516:;
 fb$result$1 = TMP$2361$1;
 goto label$2512;
 label$2512:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8POV_MAX3Eddd( struct $12SYSTEM_BUS_T* THIS$1, double X$1, double Y$1, double Z$1 )
{
 double TMP$2362$1;
 double TMP$2363$1;
 double TMP$2364$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2519:;
 if( X$1 <= Y$1 ) goto label$2523;
 if( X$1 <= Z$1 ) goto label$2521;
 TMP$2362$1 = X$1;
 goto label$2525;
 label$2521:;
 TMP$2362$1 = Z$1;
 label$2525:;
 TMP$2364$1 = TMP$2362$1;
 goto label$2524;
 label$2523:;
 if( Y$1 <= Z$1 ) goto label$2522;
 TMP$2363$1 = Y$1;
 goto label$2526;
 label$2522:;
 TMP$2363$1 = Z$1;
 label$2526:;
 TMP$2364$1 = TMP$2363$1;
 label$2524:;
 fb$result$1 = TMP$2364$1;
 goto label$2520;
 label$2520:;
 return fb$result$1;
}

int32 _ZN12SYSTEM_BUS_T8POV_LABSEd( struct $12SYSTEM_BUS_T* THIS$1, double X$1 )
{
 double TMP$2365$1;
 int32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$2527:;
 if( X$1 >= 0x0p+0 ) goto label$2529;
 TMP$2365$1 = -X$1;
 goto label$2530;
 label$2529:;
 TMP$2365$1 = X$1;
 label$2530:;
 fb$result$1 = ((int32)__builtin_nearbyint( TMP$2365$1 ));
 goto label$2528;
 label$2528:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8POV_FABSEd( struct $12SYSTEM_BUS_T* THIS$1, double X$1 )
{
 double TMP$2366$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2531:;
 if( X$1 >= 0x0p+0 ) goto label$2533;
 TMP$2366$1 = -X$1;
 goto label$2534;
 label$2533:;
 TMP$2366$1 = X$1;
 label$2534:;
 fb$result$1 = TMP$2366$1;
 goto label$2532;
 label$2532:;
 return fb$result$1;
}

void _ZN12SYSTEM_BUS_T8MEM_INITEv( struct $12SYSTEM_BUS_T* THIS$1 )
{
 label$2535:;
 LEAK_MSG$ = 0ll;
 label$2536:;
}

void* _ZN12SYSTEM_BUS_T10POV_MALLOCEyPalS0_( struct $12SYSTEM_BUS_T* THIS$1, uint64 SIZE$1, int8* FILE$1, int64 _LINE$1, int8* MSG$1 )
{
 void* fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2537:;
 void* BLOCK$1;
 __builtin_memset( &BLOCK$1, 0, 8ll );
 uint64 TOTALSIZE$1;
 __builtin_memset( &TOTALSIZE$1, 0, 8ll );
 void* NODE$1;
 __builtin_memset( &NODE$1, 0, 8ll );
 TOTALSIZE$1 = SIZE$1;
 void* vr$4 = malloc( TOTALSIZE$1 );
 BLOCK$1 = vr$4;
 if( BLOCK$1 != (void*)0ull ) goto label$2540;
 {
 }
 label$2540:;
 label$2539:;
 fb$result$1 = BLOCK$1;
 goto label$2538;
 label$2538:;
 return fb$result$1;
}

void* _ZN12SYSTEM_BUS_T10POV_CALLOCEyyPalS0_( struct $12SYSTEM_BUS_T* THIS$1, uint64 NITEMS$1, uint64 SIZE$1, int8* FILE$1, int64 _LINE$1, int8* MSG$1 )
{
 void* fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2541:;
 void* BLOCK$1;
 __builtin_memset( &BLOCK$1, 0, 8ll );
 uint64 ACTSIZE$1;
 __builtin_memset( &ACTSIZE$1, 0, 8ll );
 uint64 TOTALSIZE$1;
 __builtin_memset( &TOTALSIZE$1, 0, 8ll );
 ACTSIZE$1 = NITEMS$1 * SIZE$1;
 TOTALSIZE$1 = ACTSIZE$1;
 void* vr$5 = malloc( TOTALSIZE$1 );
 BLOCK$1 = vr$5;
 if( BLOCK$1 != (void*)0ull ) goto label$2544;
 {
 }
 label$2544:;
 label$2543:;
 memset( BLOCK$1, 0, TOTALSIZE$1 );
 fb$result$1 = BLOCK$1;
 goto label$2542;
 label$2542:;
 return fb$result$1;
}

void _ZN12SYSTEM_BUS_T16ASSIGN_BBOX_VECTEPdS0_( struct $12SYSTEM_BUS_T* THIS$1, double* D$1, double* S$1 )
{
 label$2545:;
 double X$1;
 double vr$0 = _ZN7CPU65104PULLEv( *(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) );
 X$1 = vr$0;
 double Y$1;
 double vr$1 = _ZN7CPU65104PULLEv( *(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) );
 Y$1 = vr$1;
 double Z$1;
 double vr$2 = _ZN7CPU65104PULLEv( *(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) );
 Z$1 = vr$2;
 *(double*)((uint8*)D$1 + (((int64)__builtin_nearbyint( X$1 )) << (3ll & 63ll))) = *(double*)((uint8*)S$1 + (((int64)__builtin_nearbyint( X$1 )) << (3ll & 63ll)));
 *(double*)((uint8*)D$1 + (((int64)__builtin_nearbyint( Y$1 )) << (3ll & 63ll))) = *(double*)((uint8*)S$1 + (((int64)__builtin_nearbyint( Y$1 )) << (3ll & 63ll)));
 *(double*)((uint8*)D$1 + (((int64)__builtin_nearbyint( Z$1 )) << (3ll & 63ll))) = *(double*)((uint8*)S$1 + (((int64)__builtin_nearbyint( Z$1 )) << (3ll & 63ll)));
 label$2546:;
}

void _ZN12SYSTEM_BUS_T9MAKE_BBOXER7FBARRAYI19BOUNDING_BOX_STRUCTEdddddd( struct $12SYSTEM_BUS_T* THIS$1, struct $7FBARRAYI19BOUNDING_BOX_STRUCTE* BBOX$1, double LLX$1, double LLY$1, double LLZ$1, double LEX$1, double LEY$1, double LEZ$1 )
{
 label$2547:;
 double X$1;
 double vr$0 = _ZN7CPU65104PULLEv( *(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) );
 X$1 = vr$0;
 double Y$1;
 double vr$1 = _ZN7CPU65104PULLEv( *(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) );
 Y$1 = vr$1;
 double Z$1;
 double vr$2 = _ZN7CPU65104PULLEv( *(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) );
 Z$1 = vr$2;
 *(double*)((((int64)__builtin_nearbyint( X$1 )) << (4ll & 63ll)) + *(int64*)BBOX$1) = LLX$1;
 *(double*)((((int64)__builtin_nearbyint( Y$1 )) << (4ll & 63ll)) + *(int64*)BBOX$1) = LLY$1;
 *(double*)((((int64)__builtin_nearbyint( Z$1 )) << (4ll & 63ll)) + *(int64*)BBOX$1) = LLZ$1;
 *(double*)((uint8*)((((int64)__builtin_nearbyint( X$1 )) << (4ll & 63ll)) + *(int64*)BBOX$1) + 8ll) = LEX$1;
 *(double*)((uint8*)((((int64)__builtin_nearbyint( Y$1 )) << (4ll & 63ll)) + *(int64*)BBOX$1) + 8ll) = LEY$1;
 *(double*)((uint8*)((((int64)__builtin_nearbyint( Z$1 )) << (4ll & 63ll)) + *(int64*)BBOX$1) + 8ll) = LEZ$1;
 label$2548:;
}

void _ZN12SYSTEM_BUS_T22MAKE_BBOX_FROM_MIN_MAXER7FBARRAYI19BOUNDING_BOX_STRUCTEPdS3_( struct $12SYSTEM_BUS_T* THIS$1, struct $7FBARRAYI19BOUNDING_BOX_STRUCTE* BBOX$1, double* MINS$1, double* MAXS$1 )
{
 label$2549:;
 double X$1;
 double vr$0 = _ZN7CPU65104PULLEv( *(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) );
 X$1 = vr$0;
 double Y$1;
 double vr$1 = _ZN7CPU65104PULLEv( *(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) );
 Y$1 = vr$1;
 double Z$1;
 double vr$2 = _ZN7CPU65104PULLEv( *(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) );
 Z$1 = vr$2;
 *(double*)((((int64)__builtin_nearbyint( X$1 )) << (4ll & 63ll)) + *(int64*)BBOX$1) = *(double*)((uint8*)MINS$1 + (((int64)__builtin_nearbyint( X$1 )) << (3ll & 63ll)));
 *(double*)((((int64)__builtin_nearbyint( Y$1 )) << (4ll & 63ll)) + *(int64*)BBOX$1) = *(double*)((uint8*)MINS$1 + (((int64)__builtin_nearbyint( Y$1 )) << (3ll & 63ll)));
 *(double*)((((int64)__builtin_nearbyint( Z$1 )) << (4ll & 63ll)) + *(int64*)BBOX$1) = *(double*)((uint8*)MINS$1 + (((int64)__builtin_nearbyint( Z$1 )) << (3ll & 63ll)));
 *(double*)((uint8*)((((int64)__builtin_nearbyint( X$1 )) << (4ll & 63ll)) + *(int64*)BBOX$1) + 8ll) = *(double*)((uint8*)MAXS$1 + (((int64)__builtin_nearbyint( X$1 )) << (3ll & 63ll))) - *(double*)((uint8*)MINS$1 + (((int64)__builtin_nearbyint( X$1 )) << (3ll & 63ll)));
 *(double*)((uint8*)((((int64)__builtin_nearbyint( Y$1 )) << (4ll & 63ll)) + *(int64*)BBOX$1) + 8ll) = *(double*)((uint8*)MAXS$1 + (((int64)__builtin_nearbyint( Y$1 )) << (3ll & 63ll))) - *(double*)((uint8*)MINS$1 + (((int64)__builtin_nearbyint( Y$1 )) << (3ll & 63ll)));
 *(double*)((uint8*)((((int64)__builtin_nearbyint( Z$1 )) << (4ll & 63ll)) + *(int64*)BBOX$1) + 8ll) = *(double*)((uint8*)MAXS$1 + (((int64)__builtin_nearbyint( Z$1 )) << (3ll & 63ll))) - *(double*)((uint8*)MINS$1 + (((int64)__builtin_nearbyint( Z$1 )) << (3ll & 63ll)));
 label$2550:;
}

void _ZN12SYSTEM_BUS_T22MAKE_MIN_MAX_FROM_BBOXEPdS0_R7FBARRAYI19BOUNDING_BOX_STRUCTE( struct $12SYSTEM_BUS_T* THIS$1, double* MINS$1, double* MAXS$1, struct $7FBARRAYI19BOUNDING_BOX_STRUCTE* BBOX$1 )
{
 label$2551:;
 double X$1;
 double vr$0 = _ZN7CPU65104PULLEv( *(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) );
 X$1 = vr$0;
 double Y$1;
 double vr$1 = _ZN7CPU65104PULLEv( *(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) );
 Y$1 = vr$1;
 double Z$1;
 double vr$2 = _ZN7CPU65104PULLEv( *(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) );
 Z$1 = vr$2;
 *(double*)((uint8*)MINS$1 + (((int64)__builtin_nearbyint( X$1 )) << (3ll & 63ll))) = *(double*)((((int64)__builtin_nearbyint( X$1 )) << (4ll & 63ll)) + *(int64*)BBOX$1);
 *(double*)((uint8*)MINS$1 + (((int64)__builtin_nearbyint( Y$1 )) << (3ll & 63ll))) = *(double*)((((int64)__builtin_nearbyint( Y$1 )) << (4ll & 63ll)) + *(int64*)BBOX$1);
 *(double*)((uint8*)MINS$1 + (((int64)__builtin_nearbyint( Z$1 )) << (3ll & 63ll))) = *(double*)((((int64)__builtin_nearbyint( Z$1 )) << (4ll & 63ll)) + *(int64*)BBOX$1);
 *(double*)((uint8*)MAXS$1 + (((int64)__builtin_nearbyint( X$1 )) << (3ll & 63ll))) = *(double*)((uint8*)MINS$1 + (((int64)__builtin_nearbyint( X$1 )) << (3ll & 63ll))) + *(double*)((uint8*)((((int64)__builtin_nearbyint( X$1 )) << (4ll & 63ll)) + *(int64*)BBOX$1) + 8ll);
 *(double*)((uint8*)MAXS$1 + (((int64)__builtin_nearbyint( Y$1 )) << (3ll & 63ll))) = *(double*)((uint8*)MINS$1 + (((int64)__builtin_nearbyint( Y$1 )) << (3ll & 63ll))) + *(double*)((uint8*)((((int64)__builtin_nearbyint( Y$1 )) << (4ll & 63ll)) + *(int64*)BBOX$1) + 8ll);
 *(double*)((uint8*)MAXS$1 + (((int64)__builtin_nearbyint( Z$1 )) << (3ll & 63ll))) = *(double*)((uint8*)MINS$1 + (((int64)__builtin_nearbyint( Z$1 )) << (3ll & 63ll))) + *(double*)((uint8*)((((int64)__builtin_nearbyint( Z$1 )) << (4ll & 63ll)) + *(int64*)BBOX$1) + 8ll);
 label$2552:;
}

void _ZN12SYSTEM_BUS_T16ASSIGN_SNGL_VECTEPdS0_( struct $12SYSTEM_BUS_T* THIS$1, double* D$1, double* S$1 )
{
 label$2553:;
 double X$1;
 double vr$0 = _ZN7CPU65104PULLEv( *(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) );
 X$1 = vr$0;
 double Y$1;
 double vr$1 = _ZN7CPU65104PULLEv( *(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) );
 Y$1 = vr$1;
 double Z$1;
 double vr$2 = _ZN7CPU65104PULLEv( *(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) );
 Z$1 = vr$2;
 *(double*)((uint8*)D$1 + (((int64)__builtin_nearbyint( X$1 )) << (3ll & 63ll))) = *(double*)((uint8*)S$1 + (((int64)__builtin_nearbyint( X$1 )) << (3ll & 63ll)));
 *(double*)((uint8*)D$1 + (((int64)__builtin_nearbyint( Y$1 )) << (3ll & 63ll))) = *(double*)((uint8*)S$1 + (((int64)__builtin_nearbyint( Y$1 )) << (3ll & 63ll)));
 *(double*)((uint8*)D$1 + (((int64)__builtin_nearbyint( Z$1 )) << (3ll & 63ll))) = *(double*)((uint8*)S$1 + (((int64)__builtin_nearbyint( Z$1 )) << (3ll & 63ll)));
 label$2554:;
}

void _ZN12SYSTEM_BUS_T13DESTROY_FLOATEd( struct $12SYSTEM_BUS_T* THIS$1, double X$1 )
{
 label$2555:;
 label$2556:;
}

void _ZN12SYSTEM_BUS_T13ASSIGN_VECTOREPdS0_( struct $12SYSTEM_BUS_T* THIS$1, double* D$1, double* S$1 )
{
 label$2557:;
 memcpy( (void*)D$1, (void*)S$1, 8ull );
 label$2558:;
}

void _ZN12SYSTEM_BUS_T14DESTROY_VECTOREPd( struct $12SYSTEM_BUS_T* THIS$1, double* X$1 )
{
 label$2559:;
 label$2560:;
}

void _ZN12SYSTEM_BUS_T14ASSIGN_UV_VECTEPdS0_( struct $12SYSTEM_BUS_T* THIS$1, double* D$1, double* S$1 )
{
 label$2561:;
 memcpy( (void*)D$1, (void*)S$1, 8ull );
 label$2562:;
}

void _ZN12SYSTEM_BUS_T15DESTROY_UV_VECTEPd( struct $12SYSTEM_BUS_T* THIS$1, double* X$1 )
{
 label$2563:;
 label$2564:;
}

void _ZN12SYSTEM_BUS_T11DRIVER_LOCKEv( struct $12SYSTEM_BUS_T* THIS$1 )
{
 label$2565:;
 label$2567:;
 goto label$2568;
 {
  fb_GfxLock( );
 }
 goto label$2567;
 label$2568:;
 label$2566:;
}

void _ZN12SYSTEM_BUS_T13DRIVER_UNLOCKEv( struct $12SYSTEM_BUS_T* THIS$1 )
{
 label$2569:;
 label$2571:;
 goto label$2572;
 {
  fb_GfxUnlock( -1, -1 );
 }
 goto label$2571;
 label$2572:;
 label$2570:;
}

double* _ZN12SYSTEM_BUS_T19MEM64_STATIC_MALLOCEj( struct $12SYSTEM_BUS_T* THIS$1, uint32 SIZE$1 )
{
 double* fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2573:;
 SIZE$1 = (uint32)((int64)SIZE$1 + 7ll);
 SIZE$1 = (uint32)((int64)SIZE$1 - ((int64)SIZE$1 & 7ll));
 if( (double*)(int64)-(MEM_STATIC_POINTER$ == (double*)((uint8*)MEM_STATIC_POINTER$ + ((int64)SIZE$1 << (3ll & 63ll)))) >= MEM_STATIC_LIMIT$ ) goto label$2576;
 {
  fb$result$1 = (double*)((uint8*)MEM_STATIC_POINTER$ - ((int64)SIZE$1 << (3ll & 63ll)));
  goto label$2574;
 }
 label$2576:;
 label$2575:;
 MEM_STATIC_SIZE$ = (MEM_STATIC_SIZE$ << (1ll & 63ll)) + (uint64)(int64)SIZE$1;
 void* vr$19 = malloc( MEM_STATIC_SIZE$ );
 MEM_STATIC$ = (double*)vr$19;
 if( MEM_STATIC$ == (double*)0ull ) goto label$2578;
 {
  MEM_STATIC_POINTER$ = (double*)((uint8*)MEM_STATIC$ + ((int64)SIZE$1 << (3ll & 63ll)));
  MEM_STATIC_LIMIT$ = (double*)((uint8*)MEM_STATIC$ + ((int64)MEM_STATIC_SIZE$ << (3ll & 63ll)));
  fb$result$1 = (double*)((uint8*)MEM_STATIC_POINTER$ - ((int64)SIZE$1 << (3ll & 63ll)));
  goto label$2574;
 }
 goto label$2577;
 label$2578:;
 {
  label$2579:;
  void* vr$28 = fb_ErrorThrowEx( 504, 1906, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
  goto *vr$28;
  label$2580:;
 }
 label$2577:;
 label$2574:;
 return fb$result$1;
}

void _ZN12SYSTEM_BUS_T20MEM64_STATIC_RESTOREEPd( struct $12SYSTEM_BUS_T* THIS$1, double* RESTORE_POINT$1 )
{
 label$2581:;
 if( ((int64)-(RESTORE_POINT$1 >= MEM_STATIC$) & (int64)-(RESTORE_POINT$1 <= MEM_STATIC_LIMIT$)) == 0ll ) goto label$2584;
 {
  MEM_STATIC_POINTER$ = RESTORE_POINT$1;
 }
 goto label$2583;
 label$2584:;
 {
  MEM_STATIC_POINTER$ = MEM_STATIC$;
 }
 label$2583:;
 label$2582:;
}

double* _ZN12SYSTEM_BUS_T20MEM64_DYNAMIC_MALLOCEj( struct $12SYSTEM_BUS_T* THIS$1, uint32 SIZE$1 )
{
 double* fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2585:;
 static int64 I$1;
 static double* TOP$1;
 static struct $23MEM64_DYNAMIC_LINK_TYPE* LINK$1;
 static struct $23MEM64_DYNAMIC_LINK_TYPE* NEWLINK$1;
 static struct $23MEM64_DYNAMIC_LINK_TYPE* PREV_LINK$1;
 if( (int64)SIZE$1 <= 65536ll ) goto label$2588;
 {
  label$2589:;
  void* vr$2 = fb_ErrorThrowEx( 505, 1936, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
  goto *vr$2;
  label$2590:;
 }
 label$2588:;
 label$2587:;
 if( (int64)SIZE$1 == 0ll ) goto label$2592;
 {
  if( ((int64)SIZE$1 & 15ll) == 0ll ) goto label$2594;
  {
   SIZE$1 = (uint32)(((int64)SIZE$1 - ((int64)SIZE$1 & 15ll)) + 16ll);
  }
  label$2594:;
  label$2593:;
 }
 goto label$2591;
 label$2592:;
 {
  fb$result$1 = (double*)((uint8*)MEM64$ + 5242880ll);
  goto label$2586;
 }
 label$2591:;
 TOP$1 = (double*)((uint8*)MEM64$ + 5242880ll);
 PREV_LINK$1 = (struct $23MEM64_DYNAMIC_LINK_TYPE*)0ull;
 if( LINK$1 != MEM64_DYNAMIC_LINK_FIRST$ ) goto label$2596;
 {
  label$2597:;
  if( (((int64)TOP$1 - *(int64*)((uint8*)LINK$1 + 8ll)) / 8ll) < (int64)SIZE$1 ) goto label$2599;
  {
   goto label$2600;
  }
  label$2599:;
  label$2598:;
  PREV_LINK$1 = LINK$1;
  TOP$1 = *(double**)LINK$1;
  if( LINK$1 != *(struct $23MEM64_DYNAMIC_LINK_TYPE**)((uint8*)LINK$1 + 32ll) ) goto label$2602;
  {
   goto label$2597;
  }
  label$2602:;
  label$2601:;
 }
 label$2596:;
 label$2595:;
 if( (((int64)TOP$1 - (int64)MEM64_STATIC_POINTER$) / 8ll) >= (int64)SIZE$1 ) goto label$2604;
 {
  label$2605:;
  void* vr$21 = fb_ErrorThrowEx( 506, 1965, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
  goto *vr$21;
  label$2606:;
 }
 label$2604:;
 label$2603:;
 MEM64_DYNAMIC_BASE$ = (double*)((uint8*)TOP$1 - ((int64)SIZE$1 << (3ll & 63ll)));
 label$2600:;
 if( MEM64_DYNAMIC_FREE_LINK$ == 0ll ) goto label$2608;
 {
  MEM64_DYNAMIC_FREE_LINK$ = MEM64_DYNAMIC_FREE_LINK$ + -1ll;
  I$1 = *(int64*)((int64)(uint64*)MEM64_DYNAMIC_FREE_LIST$ + (MEM64_DYNAMIC_FREE_LINK$ << (3ll & 63ll)));
 }
 goto label$2607;
 label$2608:;
 {
  MEM64_DYNAMIC_NEXT_LINK$ = MEM64_DYNAMIC_NEXT_LINK$ + 1ll;
  I$1 = MEM64_DYNAMIC_NEXT_LINK$;
  if( I$1 < 147136ll ) goto label$2610;
  {
   label$2611:;
   void* vr$28 = fb_ErrorThrowEx( 507, 1977, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
   goto *vr$28;
   label$2612:;
  }
  label$2610:;
  label$2609:;
 }
 label$2607:;
 NEWLINK$1 = *(struct $23MEM64_DYNAMIC_LINK_TYPE**)((int64)(struct $23MEM64_DYNAMIC_LINK_TYPE*)MEM64_DYNAMIC_LINK$ + (I$1 * 40ll));
 *(uint64*)((uint8*)NEWLINK$1 + 24ll) = (uint64)I$1;
 *(double**)NEWLINK$1 = (double*)((uint8*)TOP$1 - ((int64)SIZE$1 << (3ll & 63ll)));
 *(uint64*)((uint8*)NEWLINK$1 + 16ll) = (uint64)SIZE$1;
 *(double**)((uint8*)NEWLINK$1 + 8ll) = TOP$1;
 if( PREV_LINK$1 == (struct $23MEM64_DYNAMIC_LINK_TYPE*)0ull ) goto label$2614;
 {
  *(struct $23MEM64_DYNAMIC_LINK_TYPE**)((uint8*)NEWLINK$1 + 32ll) = *(struct $23MEM64_DYNAMIC_LINK_TYPE**)((uint8*)PREV_LINK$1 + 32ll);
  *(struct $23MEM64_DYNAMIC_LINK_TYPE**)((uint8*)PREV_LINK$1 + 32ll) = NEWLINK$1;
 }
 goto label$2613;
 label$2614:;
 {
  *(struct $23MEM64_DYNAMIC_LINK_TYPE**)((uint8*)NEWLINK$1 + 32ll) = MEM64_DYNAMIC_LINK_FIRST$;
  MEM64_DYNAMIC_LINK_FIRST$ = NEWLINK$1;
 }
 label$2613:;
 fb$result$1 = *(double**)NEWLINK$1;
 goto label$2586;
 label$2586:;
 return fb$result$1;
}

void _ZN12SYSTEM_BUS_T18MEM64_DYNAMIC_FREEEPd( struct $12SYSTEM_BUS_T* THIS$1, double* BLOCK$1 )
{
 label$2615:;
 static struct $23MEM64_DYNAMIC_LINK_TYPE* LINK$1;
 static struct $23MEM64_DYNAMIC_LINK_TYPE* PREV_LINK$1;
 if( MEM64_DYNAMIC_LINK_FIRST$ == (struct $23MEM64_DYNAMIC_LINK_TYPE*)0ull ) goto label$2618;
 {
  if( BLOCK$1 == (double*)0ull ) goto label$2620;
  {
   if( BLOCK$1 != (double*)((uint8*)MEM64$ + 5242880ll) ) goto label$2622;
   {
    goto label$2616;
   }
   label$2622:;
   label$2621:;
  }
  goto label$2619;
  label$2620:;
  {
   goto label$2616;
  }
  label$2619:;
 }
 goto label$2617;
 label$2618:;
 {
  goto label$2616;
 }
 label$2617:;
 PREV_LINK$1 = (struct $23MEM64_DYNAMIC_LINK_TYPE*)0ull;
 LINK$1 = MEM64_DYNAMIC_LINK_FIRST$;
 label$2623:;
 if( *(double**)LINK$1 != BLOCK$1 ) goto label$2625;
 {
  if( PREV_LINK$1 == (struct $23MEM64_DYNAMIC_LINK_TYPE*)0ull ) goto label$2627;
  {
   *(struct $23MEM64_DYNAMIC_LINK_TYPE**)((uint8*)PREV_LINK$1 + 32ll) = *(struct $23MEM64_DYNAMIC_LINK_TYPE**)((uint8*)LINK$1 + 32ll);
  }
  goto label$2626;
  label$2627:;
  {
   MEM64_DYNAMIC_LINK_FIRST$ = *(struct $23MEM64_DYNAMIC_LINK_TYPE**)((uint8*)LINK$1 + 32ll);
  }
  label$2626:;
  MEM64_DYNAMIC_FREE_LINK$ = MEM64_DYNAMIC_FREE_LINK$ + 1ll;
  *(uint64*)((int64)(uint64*)MEM64_DYNAMIC_FREE_LIST$ + (MEM64_DYNAMIC_FREE_LINK$ << (3ll & 63ll))) = *(uint64*)((uint8*)LINK$1 + 24ll);
  goto label$2616;
 }
 label$2625:;
 label$2624:;
 PREV_LINK$1 = LINK$1;
 if( LINK$1 != *(struct $23MEM64_DYNAMIC_LINK_TYPE**)((uint8*)LINK$1 + 32ll) ) goto label$2629;
 {
  goto label$2623;
 }
 label$2629:;
 label$2628:;
 goto label$2616;
 label$2616:;
}

void _ZN12SYSTEM_BUS_T10SUB_DEFSEGEii( struct $12SYSTEM_BUS_T* THIS$1, int32 SEGMENT$1, int32 PASSED$1 )
{
 label$2630:;
 if( (int64)NEW_ERROR$ == 0ll ) goto label$2633;
 {
  goto label$2631;
 }
 label$2633:;
 label$2632:;
 if( (int64)PASSED$1 == 0ll ) goto label$2635;
 {
  if( ((int64)-((int64)SEGMENT$1 < -65536ll) | (int64)-((int64)SEGMENT$1 > 65535ll)) == 0ll ) goto label$2637;
  {
   label$2638:;
   void* vr$7 = fb_ErrorThrowEx( 6, 2041, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
   goto *vr$7;
   label$2639:;
  }
  goto label$2636;
  label$2637:;
  {
   DEFSEG$ = (double*)((uint8*)MEM64$ + ((int64)(uint16)SEGMENT$1 << (7ll & 63ll)));
  }
  label$2636:;
 }
 goto label$2634;
 label$2635:;
 {
  DEFSEG$ = (double*)((uint8*)MEM64$ + 10240ll);
  goto label$2631;
 }
 label$2634:;
 label$2631:;
}

int32 _ZN12SYSTEM_BUS_T9FUNC_PEEKEi( struct $12SYSTEM_BUS_T* THIS$1, int32 OFFSET$1 )
{
 int32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$2640:;
 if( ((int64)-((int64)OFFSET$1 < -65536ll) | (int64)-((int64)OFFSET$1 > 65535ll)) == 0ll ) goto label$2643;
 {
  label$2644:;
  void* vr$6 = fb_ErrorThrowEx( 6, 2053, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
  goto *vr$6;
  label$2645:;
  fb$result$1 = 0;
  goto label$2641;
 }
 label$2643:;
 label$2642:;
 fb$result$1 = ((int32)__builtin_nearbyint( *(double*)((uint8*)DEFSEG$ + ((int64)(uint16)OFFSET$1 << (3ll & 63ll))) ));
 goto label$2641;
 label$2641:;
 return fb$result$1;
}

void _ZN12SYSTEM_BUS_T8SUB_POKEEii( struct $12SYSTEM_BUS_T* THIS$1, int32 OFFSET$1, int32 VALUE$1 )
{
 label$2646:;
 if( (int64)NEW_ERROR$ == 0ll ) goto label$2649;
 {
  goto label$2647;
 }
 label$2649:;
 label$2648:;
 if( ((int64)-((int64)OFFSET$1 < -65536ll) | (int64)-((int64)OFFSET$1 > 65535ll)) == 0ll ) goto label$2651;
 {
  label$2652:;
  void* vr$6 = fb_ErrorThrowEx( 6, 2065, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
  goto *vr$6;
  label$2653:;
  goto label$2647;
 }
 label$2651:;
 label$2650:;
 *(double*)((uint8*)DEFSEG$ + ((int64)(uint16)OFFSET$1 << (3ll & 63ll))) = (double)VALUE$1;
 label$2647:;
}

void _ZN12SYSTEM_BUS_T18MORE_RETURN_POINTSEv( struct $12SYSTEM_BUS_T* THIS$1 )
{
 label$2654:;
 if( (int64)RETURN_POINTS$ <= 2147483647ll ) goto label$2657;
 {
  label$2658:;
  void* vr$1 = fb_ErrorThrowEx( 256, 2073, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
  goto *vr$1;
  label$2659:;
 }
 label$2657:;
 label$2656:;
 RETURN_POINTS$ = (uint32)((int64)RETURN_POINTS$ << (1ll & 63ll));
 void* vr$7 = realloc( (void*)RETURN_POINT$, (uint64)((int64)RETURN_POINTS$ << (2ll & 63ll)) );
 RETURN_POINT$ = *(uint32**)vr$7;
 if( RETURN_POINT$ != (uint32*)0ull ) goto label$2661;
 {
  label$2662:;
  void* vr$8 = fb_ErrorThrowEx( 256, 2078, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
  goto *vr$8;
  label$2663:;
 }
 label$2661:;
 label$2660:;
 label$2655:;
}

struct $3QBS* _ZN12SYSTEM_BUS_T18QBS_NEW_DESCRIPTOREv( struct $12SYSTEM_BUS_T* THIS$1 )
{
 struct $3QBS* fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2664:;
 if( QBS_MALLOC_FREED_NUM$ == 0ull ) goto label$2667;
 {
  QBS_MALLOC_FREED_NUM$ = QBS_MALLOC_FREED_NUM$ + 18446744073709551615ull;
  void* vr$4 = memset( (void*)((uint8*)QBS_MALLOC_FREED$ + ((int64)QBS_MALLOC_FREED_NUM$ << (3ll & 63ll))), 0, 56ull );
  fb$result$1 = (struct $3QBS*)vr$4;
  goto label$2665;
 }
 label$2667:;
 label$2666:;
 if( QBS_MALLOC_NEXT$ != 65536ull ) goto label$2669;
 {
  void* vr$5 = calloc( 3670016ull, 1ull );
  QBS_MALLOC$ = (struct $3QBS*)vr$5;
  QBS_MALLOC_NEXT$ = 0ull;
 }
 label$2669:;
 label$2668:;
 QBS_MALLOC_NEXT$ = QBS_MALLOC_NEXT$ + 1ull;
 fb$result$1 = (struct $3QBS*)((uint8*)QBS_MALLOC$ + ((int64)QBS_MALLOC_NEXT$ * 56ll));
 goto label$2665;
 label$2665:;
 return fb$result$1;
}

void _ZN12SYSTEM_BUS_T19QBS_FREE_DESCRIPTOREP3QBS( struct $12SYSTEM_BUS_T* THIS$1, struct $3QBS* STR_DATA$1 )
{
 label$2670:;
 if( QBS_MALLOC_FREED_NUM$ != QBS_MALLOC_FREED_SIZE$ ) goto label$2673;
 {
  QBS_MALLOC_FREED_SIZE$ = QBS_MALLOC_FREED_SIZE$ << (1ull & 63ll);
  void* vr$2 = realloc( (void*)QBS_MALLOC_FREED$, QBS_MALLOC_FREED_SIZE$ << (3ull & 63ll) );
  QBS_MALLOC_FREED$ = (int64*)vr$2;
  if( QBS_MALLOC_FREED$ == (int64*)0ull ) goto label$2675;
  {
  }
  goto label$2674;
  label$2675:;
  {
   label$2676:;
   void* vr$3 = fb_ErrorThrowEx( 508, 2117, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
   goto *vr$3;
   label$2677:;
  }
  label$2674:;
 }
 label$2673:;
 label$2672:;
 *(int64*)((uint8*)QBS_MALLOC_FREED$ + ((int64)QBS_MALLOC_FREED_NUM$ << (3ll & 63ll))) = (int64)STR_DATA$1;
 QBS_MALLOC_FREED_NUM$ = QBS_MALLOC_FREED_NUM$ + 1ull;
 goto label$2671;
 label$2671:;
}

int64 _ZN12SYSTEM_BUS_T11FUNC_LBOUNDEPxii( struct $12SYSTEM_BUS_T* THIS$1, int64* ARRAY$1, int32 INDEX$1, int32 NUM_INDEXES$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2678:;
 if( (((int64)-((int64)INDEX$1 < 1ll) | (int64)-((int64)INDEX$1 > (int64)NUM_INDEXES$1)) | (int64)-((*(int64*)((uint8*)ARRAY$1 + 16ll) & 1ll) == 0ll)) == 0ll ) goto label$2681;
 {
  label$2682:;
  void* vr$11 = fb_ErrorThrowEx( 9, 3045, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
  goto *vr$11;
  label$2683:;
  fb$result$1 = 0ll;
  goto label$2679;
 }
 label$2681:;
 label$2680:;
 INDEX$1 = (int32)(((int64)NUM_INDEXES$1 - (int64)INDEX$1) + 1ll);
 fb$result$1 = *(int64*)((uint8*)ARRAY$1 + ((int64)INDEX$1 << (5ll & 63ll)));
 goto label$2679;
 label$2679:;
 return fb$result$1;
}

int64 _ZN12SYSTEM_BUS_T11FUNC_UBOUNDEPxii( struct $12SYSTEM_BUS_T* THIS$1, int64* ARRAY$1, int32 INDEX$1, int32 NUM_INDEXES$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2684:;
 if( (((int64)-((int64)INDEX$1 < 1ll) | (int64)-((int64)INDEX$1 > (int64)NUM_INDEXES$1)) | (int64)-((*(int64*)((uint8*)ARRAY$1 + 16ll) & 1ll) == 0ll)) == 0ll ) goto label$2687;
 {
  label$2688:;
  void* vr$11 = fb_ErrorThrowEx( 9, 3054, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
  goto *vr$11;
  label$2689:;
  fb$result$1 = 0ll;
  goto label$2685;
 }
 label$2687:;
 label$2686:;
 INDEX$1 = (int32)(((int64)NUM_INDEXES$1 - (int64)INDEX$1) + 1ll);
 fb$result$1 = (*(int64*)((uint8*)ARRAY$1 + ((int64)INDEX$1 << (5ll & 63ll))) + *(int64*)((uint8*)((uint8*)ARRAY$1 + ((int64)INDEX$1 << (5ll & 63ll))) + 8ll)) + -1ll;
 goto label$2685;
 label$2685:;
 return fb$result$1;
}

int64 _ZN12SYSTEM_BUS_T3QBREd( struct $12SYSTEM_BUS_T* THIS$1, double F$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2690:;
 int64 I$1;
 __builtin_memset( &I$1, 0, 8ll );
 int64 TEMP$1;
 TEMP$1 = 0ll;
 if( F$1 <= 0x1.p+63 ) goto label$2693;
 {
  TEMP$1 = 1ll;
  F$1 = F$1 + -0x1.p+63;
 }
 label$2693:;
 label$2692:;
 if( F$1 >= 0x0p+0 ) goto label$2695;
 {
  I$1 = ((int64)__builtin_nearbyint( F$1 + -0x1.p-1 ));
 }
 goto label$2694;
 label$2695:;
 {
  I$1 = ((int64)__builtin_nearbyint( F$1 + 0x1.p-1 ));
 }
 label$2694:;
 if( TEMP$1 == 0ll ) goto label$2697;
 {
  fb$result$1 = I$1 | -9223372036854775808ull;
  goto label$2691;
 }
 label$2697:;
 label$2696:;
 fb$result$1 = I$1;
 goto label$2691;
 label$2691:;
 return fb$result$1;
}

uint64 _ZN12SYSTEM_BUS_T24QBR_LONGDOUBLE_TO_UINT64Ed( struct $12SYSTEM_BUS_T* THIS$1, double F$1 )
{
 uint64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2698:;
 if( F$1 >= 0x0p+0 ) goto label$2701;
 {
  fb$result$1 = ((uint64)__builtin_nearbyint( F$1 + -0x1.p-1 ));
  goto label$2699;
 }
 goto label$2700;
 label$2701:;
 {
  fb$result$1 = ((uint64)__builtin_nearbyint( F$1 + 0x1.p-1 ));
  goto label$2699;
 }
 label$2700:;
 label$2699:;
 return fb$result$1;
}

int64 _ZN12SYSTEM_BUS_T17QBR_FLOAT_TO_LONGEd( struct $12SYSTEM_BUS_T* THIS$1, double F$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2702:;
 if( F$1 >= 0x0p+0 ) goto label$2705;
 {
  fb$result$1 = ((int64)__builtin_nearbyint( F$1 + -0x1.p-1 ));
  goto label$2703;
 }
 goto label$2704;
 label$2705:;
 {
  fb$result$1 = ((int64)__builtin_nearbyint( F$1 + 0x1.p-1 ));
  goto label$2703;
 }
 label$2704:;
 label$2703:;
 return fb$result$1;
}

int32 _ZN12SYSTEM_BUS_T18QBR_DOUBLE_TO_LONGEd( struct $12SYSTEM_BUS_T* THIS$1, double F$1 )
{
 int32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$2706:;
 if( F$1 >= 0x0p+0 ) goto label$2709;
 {
  fb$result$1 = ((int32)__builtin_nearbyint( F$1 + -0x1.p-1 ));
  goto label$2707;
 }
 goto label$2708;
 label$2709:;
 {
  fb$result$1 = ((int32)__builtin_nearbyint( F$1 + 0x1.p-1 ));
  goto label$2707;
 }
 label$2708:;
 label$2707:;
 return fb$result$1;
}

void _ZN12SYSTEM_BUS_T10FPU_REINITEv( struct $12SYSTEM_BUS_T* THIS$1 )
{
 label$2710:;
 label$2711:;
}

void _ZN12SYSTEM_BUS_T10SUB__BLINKEi( struct $12SYSTEM_BUS_T* THIS$1, int32 ONOFF$1 )
{
 label$2712:;
 if( (int64)ONOFF$1 != 1ll ) goto label$2715;
 {
  H3C0_BLINK_ENABLE$ = 1ll;
 }
 goto label$2714;
 label$2715:;
 {
  H3C0_BLINK_ENABLE$ = 0ll;
 }
 label$2714:;
 label$2713:;
}

int32 _ZN12SYSTEM_BUS_T11FUNC__BLINKEv( struct $12SYSTEM_BUS_T* THIS$1 )
{
 int32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$2716:;
 fb$result$1 = (int32)-H3C0_BLINK_ENABLE$;
 goto label$2717;
 label$2717:;
 return fb$result$1;
}

void _ZN12SYSTEM_BUS_T7SUB_OUTEii( struct $12SYSTEM_BUS_T* THIS$1, int32 PORT$1, int32 DATA_OUT$1 )
{
 label$2718:;
 if( (int64)NEW_ERROR$ == 0ll ) goto label$2721;
 {
  goto label$2719;
 }
 label$2721:;
 label$2720:;
 UNSUPPORTED_PORT_ACCESSED$ = 0ll;
 PORT$1 = (int32)((int64)PORT$1 & 65535ll);
 DATA_OUT$1 = (int32)((int64)DATA_OUT$1 & 255ll);
 if( (int64)PORT$1 != 960ll ) goto label$2723;
 {
  H3C0_BLINK_ENABLE$ = (int64)DATA_OUT$1 & 8ll;
  goto label$2724;
 }
 label$2723:;
 label$2722:;
 if( (int64)PORT$1 != 967ll ) goto label$2726;
 {
  H3C7_PALETTE_REGISTER_READ_INDEX$ = (int64)DATA_OUT$1;
  H3C9_READ_NEXT$ = 0ll;
  goto label$2724;
 }
 label$2726:;
 label$2725:;
 if( (int64)PORT$1 != 968ll ) goto label$2728;
 {
  H3C8_PALETTE_REGISTER_INDEX$ = (int64)DATA_OUT$1;
  H3C9_NEXT$ = 0ll;
  goto label$2724;
 }
 label$2728:;
 label$2727:;
 if( (int64)PORT$1 != 969ll ) goto label$2730;
 {
  DATA_OUT$1 = (int32)((int64)DATA_OUT$1 & 63ll);
  if( *(uint32**)((uint8*)WRITE_PAGE$ + 80ll) == (uint32*)0ull ) goto label$2732;
  {
   if( H3C9_NEXT$ != 0ll ) goto label$2734;
   {
    *(uint32*)((uint8*)*(uint32**)((uint8*)WRITE_PAGE$ + 80ll) + (H3C8_PALETTE_REGISTER_INDEX$ << (2ll & 63ll))) = (uint32)((int64)*(uint32*)((uint8*)*(uint32**)((uint8*)WRITE_PAGE$ + 80ll) + (H3C8_PALETTE_REGISTER_INDEX$ << (2ll & 63ll))) & 4278255615ll);
    int64 vr$36 = _ZN12SYSTEM_BUS_T3QBREd( THIS$1, ((double)(int64)DATA_OUT$1 * 0x1.041040BFE3B04p+2) + -0x1.FFFFF94A03595p-2 );
    *(uint32*)((uint8*)*(uint32**)((uint8*)WRITE_PAGE$ + 80ll) + (H3C8_PALETTE_REGISTER_INDEX$ << (2ll & 63ll))) = (uint32)((int64)*(uint32*)((uint8*)*(uint32**)((uint8*)WRITE_PAGE$ + 80ll) + (H3C8_PALETTE_REGISTER_INDEX$ << (2ll & 63ll))) + (vr$36 << (16ll & 63ll)));
    _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), 0x1.8004p+15, (double)DATA_OUT$1 );
   }
   label$2734:;
   label$2733:;
   if( H3C9_NEXT$ != 1ll ) goto label$2736;
   {
    *(uint32*)((uint8*)*(uint32**)((uint8*)WRITE_PAGE$ + 80ll) + (H3C8_PALETTE_REGISTER_INDEX$ << (2ll & 63ll))) = (uint32)((int64)*(uint32*)((uint8*)*(uint32**)((uint8*)WRITE_PAGE$ + 80ll) + (H3C8_PALETTE_REGISTER_INDEX$ << (2ll & 63ll))) & 4278255615ll);
    int64 vr$62 = _ZN12SYSTEM_BUS_T3QBREd( THIS$1, ((double)(int64)DATA_OUT$1 * 0x1.041040BFE3B04p+2) + -0x1.FFFFF94A03595p-2 );
    *(uint32*)((uint8*)*(uint32**)((uint8*)WRITE_PAGE$ + 80ll) + (H3C8_PALETTE_REGISTER_INDEX$ << (2ll & 63ll))) = (uint32)((int64)*(uint32*)((uint8*)*(uint32**)((uint8*)WRITE_PAGE$ + 80ll) + (H3C8_PALETTE_REGISTER_INDEX$ << (2ll & 63ll))) + (vr$62 << (8ll & 63ll)));
    _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), 0x1.8006p+15, (double)DATA_OUT$1 );
   }
   label$2736:;
   label$2735:;
   if( H3C9_NEXT$ != 2ll ) goto label$2738;
   {
    *(uint32*)((uint8*)*(uint32**)((uint8*)WRITE_PAGE$ + 80ll) + (H3C8_PALETTE_REGISTER_INDEX$ << (2ll & 63ll))) = (uint32)((int64)*(uint32*)((uint8*)*(uint32**)((uint8*)WRITE_PAGE$ + 80ll) + (H3C8_PALETTE_REGISTER_INDEX$ << (2ll & 63ll))) & 4278255615ll);
    int64 vr$88 = _ZN12SYSTEM_BUS_T3QBREd( THIS$1, ((double)(int64)DATA_OUT$1 * 0x1.041040BFE3B04p+2) + -0x1.FFFFF94A03595p-2 );
    *(uint32*)((uint8*)*(uint32**)((uint8*)WRITE_PAGE$ + 80ll) + (H3C8_PALETTE_REGISTER_INDEX$ << (2ll & 63ll))) = (uint32)((int64)*(uint32*)((uint8*)*(uint32**)((uint8*)WRITE_PAGE$ + 80ll) + (H3C8_PALETTE_REGISTER_INDEX$ << (2ll & 63ll))) + vr$88);
    _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), 0x1.8008p+15, (double)DATA_OUT$1 );
   }
   label$2738:;
   label$2737:;
  }
  label$2732:;
  label$2731:;
  H3C9_NEXT$ = H3C9_NEXT$ + 1ll;
  if( H3C9_NEXT$ != 3ll ) goto label$2740;
  {
   H3C9_NEXT$ = 0ll;
   H3C8_PALETTE_REGISTER_INDEX$ = H3C8_PALETTE_REGISTER_INDEX$ + 1ll;
   H3C8_PALETTE_REGISTER_INDEX$ = H3C8_PALETTE_REGISTER_INDEX$ & 255ll;
  }
  label$2740:;
  label$2739:;
  goto label$2724;
 }
 label$2730:;
 label$2729:;
 UNSUPPORTED_PORT_ACCESSED$ = 1ll;
 label$2724:;
 goto label$2719;
 label$2741:;
 label$2742:;
 void* vr$99 = fb_ErrorThrowEx( 5, 3213, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
 goto *vr$99;
 label$2743:;
 label$2719:;
}

int32 _ZN12SYSTEM_BUS_T8FUNC_INPEi( struct $12SYSTEM_BUS_T* THIS$1, int32 PORT$1 )
{
 int32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$2744:;
 static int32 VALUE$1;
 UNSUPPORTED_PORT_ACCESSED$ = 0ll;
 if( ((int64)-((int64)PORT$1 > 65535ll) | (int64)-((int64)PORT$1 < -65536ll)) == 0ll ) goto label$2747;
 {
  label$2748:;
  void* vr$6 = fb_ErrorThrowEx( 6, 3220, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
  goto *vr$6;
  label$2749:;
  fb$result$1 = 0;
  goto label$2745;
 }
 label$2747:;
 label$2746:;
 PORT$1 = (int32)((int64)PORT$1 & 65535ll);
 if( (int64)PORT$1 != 969ll ) goto label$2751;
 {
  if( *(uint32**)((uint8*)WRITE_PAGE$ + 80ll) == (uint32*)0ull ) goto label$2753;
  {
   if( H3C9_READ_NEXT$ != 0ll ) goto label$2755;
   {
    int32 vr$21 = _ZN12SYSTEM_BUS_T18QBR_DOUBLE_TO_LONGEd( THIS$1, ((double)(((int64)*(uint32*)((uint8*)*(uint32**)((uint8*)WRITE_PAGE$ + 80ll) + (H3C7_PALETTE_REGISTER_READ_INDEX$ << (2ll & 63ll))) >> (16ll & 63ll)) & 255ll) / 0x1.FE0008637BD06p+1) + -0x1.FFFFF94A03595p-2 );
    VALUE$1 = vr$21;
   }
   label$2755:;
   label$2754:;
   if( H3C9_READ_NEXT$ != 1ll ) goto label$2757;
   {
    int32 vr$31 = _ZN12SYSTEM_BUS_T18QBR_DOUBLE_TO_LONGEd( THIS$1, ((double)(((int64)*(uint32*)((uint8*)*(uint32**)((uint8*)WRITE_PAGE$ + 80ll) + (H3C7_PALETTE_REGISTER_READ_INDEX$ << (2ll & 63ll))) >> (8ll & 63ll)) & 255ll) / 0x1.FE0008637BD06p+1) + -0x1.FFFFF94A03595p-2 );
    VALUE$1 = vr$31;
   }
   label$2757:;
   label$2756:;
   if( H3C9_READ_NEXT$ != 2ll ) goto label$2759;
   {
    int32 vr$40 = _ZN12SYSTEM_BUS_T18QBR_DOUBLE_TO_LONGEd( THIS$1, ((double)((int64)*(uint32*)((uint8*)*(uint32**)((uint8*)WRITE_PAGE$ + 80ll) + (H3C7_PALETTE_REGISTER_READ_INDEX$ << (2ll & 63ll))) & 255ll) / 0x1.FE0008637BD06p+1) + -0x1.FFFFF94A03595p-2 );
    VALUE$1 = vr$40;
   }
   label$2759:;
   label$2758:;
   H3C9_READ_NEXT$ = H3C9_READ_NEXT$ + 1ll;
   if( H3C9_READ_NEXT$ != 3ll ) goto label$2761;
   {
    H3C9_READ_NEXT$ = 0ll;
    H3C7_PALETTE_REGISTER_READ_INDEX$ = H3C7_PALETTE_REGISTER_READ_INDEX$ + 1ll;
    H3C7_PALETTE_REGISTER_READ_INDEX$ = H3C7_PALETTE_REGISTER_READ_INDEX$ & 255ll;
   }
   label$2761:;
   label$2760:;
   fb$result$1 = VALUE$1;
   goto label$2745;
  }
  label$2753:;
  label$2752:;
  fb$result$1 = 0;
  goto label$2745;
 }
 label$2751:;
 label$2750:;
 if( (int64)PORT$1 != 986ll ) goto label$2763;
 {
  VALUE$1 = 0;
  if( (VERTICAL_RETRACE_HAPPENED$ | VERTICAL_RETRACE_IN_PROGRESS$) == 0ll ) goto label$2765;
  {
   VERTICAL_RETRACE_HAPPENED$ = 0ll;
   VALUE$1 = (int32)((int64)VALUE$1 | 8ll);
  }
  label$2765:;
  label$2764:;
  fb$result$1 = VALUE$1;
  goto label$2745;
 }
 label$2763:;
 label$2762:;
 UNSUPPORTED_PORT_ACCESSED$ = 1ll;
 fb$result$1 = 0;
 goto label$2745;
 label$2745:;
 return fb$result$1;
}

void _ZN12SYSTEM_BUS_T8SUB_WAITEiiii( struct $12SYSTEM_BUS_T* THIS$1, int32 PORT$1, int32 ANDEXPRESSION$1, int32 XOREXPRESSION$1, int32 PASSED$1 )
{
 label$2766:;
 if( (int64)NEW_ERROR$ == 0ll ) goto label$2769;
 {
  goto label$2767;
 }
 label$2769:;
 label$2768:;
 static int32 VALUE$1;
 if( ((int64)-((int64)PORT$1 > 65535ll) | (int64)-((int64)PORT$1 < -65536ll)) == 0ll ) goto label$2771;
 {
  label$2772:;
  void* vr$6 = fb_ErrorThrowEx( 6, 3303, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
  goto *vr$6;
  label$2773:;
  goto label$2767;
 }
 label$2771:;
 label$2770:;
 PORT$1 = (int32)((int64)PORT$1 & 65535ll);
 if( ((int64)-((int64)ANDEXPRESSION$1 < -32768ll) | (int64)-((int64)ANDEXPRESSION$1 > 65535ll)) == 0ll ) goto label$2775;
 {
  label$2776:;
  void* vr$15 = fb_ErrorThrowEx( 6, 3308, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
  goto *vr$15;
  label$2777:;
  goto label$2767;
 }
 label$2775:;
 label$2774:;
 ANDEXPRESSION$1 = (int32)((int64)ANDEXPRESSION$1 & 255ll);
 if( (int64)PASSED$1 == 0ll ) goto label$2779;
 {
  if( ((int64)-((int64)XOREXPRESSION$1 < -32768ll) | (int64)-((int64)XOREXPRESSION$1 > 65535ll)) == 0ll ) goto label$2781;
  {
   label$2782:;
   void* vr$25 = fb_ErrorThrowEx( 6, 3314, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
   goto *vr$25;
   label$2783:;
   goto label$2767;
  }
  label$2781:;
  label$2780:;
 }
 label$2779:;
 label$2778:;
 XOREXPRESSION$1 = (int32)((int64)XOREXPRESSION$1 & 255ll);
 label$2784:;
 int32 vr$29 = _ZN12SYSTEM_BUS_T8FUNC_INPEi( THIS$1, PORT$1 );
 VALUE$1 = vr$29;
 if( (int64)PASSED$1 == 0ll ) goto label$2786;
 {
  VALUE$1 = (int32)((int64)VALUE$1 ^ (int64)XOREXPRESSION$1);
 }
 label$2786:;
 label$2785:;
 VALUE$1 = (int32)((int64)VALUE$1 & (int64)ANDEXPRESSION$1);
 if( (((int64)VALUE$1 | UNSUPPORTED_PORT_ACCESSED$) | (int64)STOP_PROGRAM$) == 0ll ) goto label$2788;
 {
  goto label$2767;
 }
 label$2788:;
 label$2787:;
 fb_Sleep( 1 );
 goto label$2784;
 label$2767:;
}

void _ZN12SYSTEM_BUS_T6SWAP_8EPvS0_( struct $12SYSTEM_BUS_T* THIS$1, void* A$1, void* B$1 )
{
 label$2789:;
 uint8* X$1;
 __builtin_memset( &X$1, 0, 8ll );
 X$1 = (uint8*)A$1;
 A$1 = (void*)B$1;
 B$1 = (void*)X$1;
 label$2790:;
}

void _ZN12SYSTEM_BUS_T7SWAP_16EPvS0_( struct $12SYSTEM_BUS_T* THIS$1, void* A$1, void* B$1 )
{
 label$2791:;
 uint16* X$1;
 __builtin_memset( &X$1, 0, 8ll );
 A$1 = (void*)B$1;
 B$1 = (void*)X$1;
 label$2792:;
}

void _ZN12SYSTEM_BUS_T7SWAP_32EPvS0_( struct $12SYSTEM_BUS_T* THIS$1, void* A$1, void* B$1 )
{
 label$2793:;
 uint32* X$1;
 __builtin_memset( &X$1, 0, 8ll );
 X$1 = (uint32*)A$1;
 A$1 = (void*)B$1;
 B$1 = (void*)X$1;
 label$2794:;
}

void _ZN12SYSTEM_BUS_T7SWAP_64EPvS0_( struct $12SYSTEM_BUS_T* THIS$1, void* A$1, void* B$1 )
{
 label$2795:;
 uint64* X$1;
 __builtin_memset( &X$1, 0, 8ll );
 X$1 = (uint64*)A$1;
 A$1 = (void*)B$1;
 B$1 = (void*)X$1;
 label$2796:;
}

void _ZN12SYSTEM_BUS_T15SWAP_LONGDOUBLEEPvS0_( struct $12SYSTEM_BUS_T* THIS$1, void* A$1, void* B$1 )
{
 label$2797:;
 double* X$1;
 __builtin_memset( &X$1, 0, 8ll );
 X$1 = (double*)A$1;
 A$1 = (void*)B$1;
 B$1 = (void*)X$1;
 label$2798:;
}

void SWAP_BLOCK( void* A$1, void* B$1, uint32 BYTES$1 )
{
 label$2799:;
 static uint32 QUADS$1;
 QUADS$1 = (uint32)((int64)BYTES$1 >> (2ll & 63ll));
 static uint32* A32$1;
 static uint32* B32$1;
 A32$1 = (uint32*)A$1;
 B32$1 = (uint32*)B$1;
 label$2801:;
 if( (int64)QUADS$1 == 0ll ) goto label$2802;
 {
  static uint32 C$2;
  C$2 = *A32$1;
  *A32$1 = *B32$1;
  *A32$1 = (uint32)((int64)*A32$1 + 1ll);
  *B32$1 = C$2;
  *B32$1 = (uint32)((int64)*B32$1 + 1ll);
  QUADS$1 = (uint32)((int64)QUADS$1 + -1ll);
 }
 goto label$2801;
 label$2802:;
 BYTES$1 = (uint32)((int64)BYTES$1 & 3ll);
 static uint8* A8$1;
 static uint8* B8$1;
 A8$1 = (uint8*)A32$1;
 B8$1 = (uint8*)B32$1;
 label$2803:;
 if( (int64)BYTES$1 == 0ll ) goto label$2804;
 {
  static uint8 C$2;
  C$2 = *A8$1;
  *A8$1 = *B8$1;
  *A8$1 = (uint8)((int64)*A8$1 + 1ll);
  *B8$1 = C$2;
  *B8$1 = (uint8)((int64)*B8$1 + 1ll);
  BYTES$1 = (uint32)((int64)BYTES$1 + -1ll);
 }
 goto label$2803;
 label$2804:;
 label$2800:;
}

uint64 _ZN12SYSTEM_BUS_T9FUNC__SHLEyl( struct $12SYSTEM_BUS_T* THIS$1, uint64 A1$1, int64 B1$1 )
{
 uint64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2805:;
 fb$result$1 = A1$1 << (B1$1 & 63ll);
 goto label$2806;
 label$2806:;
 return fb$result$1;
}

uint64 _ZN12SYSTEM_BUS_T9FUNC__SHREyl( struct $12SYSTEM_BUS_T* THIS$1, uint64 A1$1, int64 B1$1 )
{
 uint64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2807:;
 fb$result$1 = A1$1 >> (B1$1 & 63ll);
 goto label$2808;
 label$2808:;
 return fb$result$1;
}

uint64 _ZN12SYSTEM_BUS_T13FUNC__READBITEyl( struct $12SYSTEM_BUS_T* THIS$1, uint64 A1$1, int64 B1$1 )
{
 uint64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2809:;
 if( (A1$1 & (1ull << (B1$1 & 63ll))) == 0ull ) goto label$2812;
 {
  fb$result$1 = 18446744073709551615ull;
  goto label$2810;
 }
 goto label$2811;
 label$2812:;
 {
  fb$result$1 = 0ull;
  goto label$2810;
 }
 label$2811:;
 label$2810:;
 return fb$result$1;
}

uint64 _ZN12SYSTEM_BUS_T12FUNC__SETBITEyl( struct $12SYSTEM_BUS_T* THIS$1, uint64 A1$1, int64 B1$1 )
{
 uint64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2813:;
 fb$result$1 = A1$1 | (1ull << (B1$1 & 63ll));
 goto label$2814;
 label$2814:;
 return fb$result$1;
}

uint64 _ZN12SYSTEM_BUS_T14FUNC__RESETBITEyl( struct $12SYSTEM_BUS_T* THIS$1, uint64 A1$1, int64 B1$1 )
{
 uint64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2815:;
 fb$result$1 = A1$1 & ~(1ull << (B1$1 & 63ll));
 goto label$2816;
 label$2816:;
 return fb$result$1;
}

uint64 _ZN12SYSTEM_BUS_T15FUNC__TOGGLEBITEyl( struct $12SYSTEM_BUS_T* THIS$1, uint64 A1$1, int64 B1$1 )
{
 uint64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2817:;
 fb$result$1 = A1$1 ^ (1ull << (B1$1 & 63ll));
 goto label$2818;
 label$2818:;
 return fb$result$1;
}

uint64 _ZN12SYSTEM_BUS_T8GETUBITSEjPhx( struct $12SYSTEM_BUS_T* THIS$1, uint32 BSIZE$1, uint8* _BASE$1, int64 I$1 )
{
 uint64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2819:;
 static int64 BMASK$1;
 static int64 N$1 = 1ll;
 BMASK$1 = ~(-N$1 << ((int64)BSIZE$1 & 63ll));
 I$1 = I$1 * (int64)BSIZE$1;
 fb$result$1 = (*(uint64*)(_BASE$1 + (I$1 >> (3ll & 63ll))) >> ((I$1 & 7ll) & 63ll)) & (uint64)BMASK$1;
 goto label$2820;
 label$2820:;
 return fb$result$1;
}

int64 _ZN12SYSTEM_BUS_T7GETBITSEjPhx( struct $12SYSTEM_BUS_T* THIS$1, uint32 BSIZE$1, uint8* _BASE$1, int64 I$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2821:;
 static int64 BMASK$1;
 static int64 BVAL64$1;
 static int64 N$1 = 1ll;
 BMASK$1 = ~(-(N$1 << ((int64)BSIZE$1 & 63ll)));
 I$1 = I$1 * (int64)BSIZE$1;
 BVAL64$1 = (int64)((*(uint64*)(_BASE$1 + (I$1 >> (3ll & 63ll))) >> ((I$1 & 7ll) & 63ll)) & (uint64)BMASK$1);
 if( (BVAL64$1 & (N$1 << (((int64)BSIZE$1 + -1ll) & 63ll))) == 0ll ) goto label$2824;
 {
  fb$result$1 = BVAL64$1 | ~BMASK$1;
  goto label$2822;
 }
 label$2824:;
 label$2823:;
 fb$result$1 = BVAL64$1;
 goto label$2822;
 label$2822:;
 return fb$result$1;
}

uint64 _ZN12SYSTEM_BUS_T13CALL_GETUBITSEjPxx( struct $12SYSTEM_BUS_T* THIS$1, uint32 BSIZE$1, int64* ARRAY$1, int64 I$1 )
{
 uint64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2825:;
 uint64 vr$3 = _ZN12SYSTEM_BUS_T8GETUBITSEjPhx( THIS$1, BSIZE$1, *(uint8**)*ARRAY$1, I$1 );
 fb$result$1 = vr$3;
 goto label$2826;
 label$2826:;
 return fb$result$1;
}

int64 _ZN12SYSTEM_BUS_T12CALL_GETBITSEjPxx( struct $12SYSTEM_BUS_T* THIS$1, uint32 BSIZE$1, int64* ARRAY$1, int64 I$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2827:;
 int64 vr$3 = _ZN12SYSTEM_BUS_T7GETBITSEjPhx( THIS$1, BSIZE$1, *(uint8**)*ARRAY$1, I$1 );
 fb$result$1 = vr$3;
 goto label$2828;
 label$2828:;
 return fb$result$1;
}

void _ZN12SYSTEM_BUS_T12CALL_SETBITSEjPxxx( struct $12SYSTEM_BUS_T* THIS$1, uint32 BSIZE$1, int64* ARRAY$1, int64 I$1, int64 _VAL$1 )
{
 label$2829:;
 _ZN12SYSTEM_BUS_T7SETBITSEjPhxx( THIS$1, BSIZE$1, *(uint8**)*ARRAY$1, I$1, _VAL$1 );
 label$2830:;
}

void _ZN12SYSTEM_BUS_T7SETBITSEjPhxx( struct $12SYSTEM_BUS_T* THIS$1, uint32 BSIZE$1, uint8* _BASE$1, int64 I$1, int64 _VAL$1 )
{
 label$2831:;
 static int64 BMASK$1;
 static int64 N$1 = 1ll;
 static uint64* BPTR64$1;
 BMASK$1 = (int64)(((uint64)N$1 << ((int64)BSIZE$1 & 63ll)) + 18446744073709551615ull);
 I$1 = I$1 * (int64)BSIZE$1;
 BPTR64$1 = *(uint64**)(_BASE$1 + (I$1 >> (3ll & 63ll)));
 *BPTR64$1 = (*(uint64*)BPTR64$1 & (uint64)((BMASK$1 << ((I$1 & 7ll) & 63ll)) ^ -1ll)) | (uint64)((_VAL$1 & BMASK$1) << ((I$1 & 7ll) & 63ll));
 label$2832:;
}

double _ZN12SYSTEM_BUS_T15FUNC_CSNG_FLOATEf( struct $12SYSTEM_BUS_T* THIS$1, float VALUE$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2833:;
 if( ((int64)-((double)VALUE$1 <= 0x1.FFFFFDFF07036p+127) & (int64)-((double)VALUE$1 >= -0x1.FFFFFDFF07036p+127)) == 0ll ) goto label$2836;
 {
  fb$result$1 = (double)VALUE$1;
  goto label$2834;
 }
 label$2836:;
 label$2835:;
 label$2837:;
 void* vr$7 = fb_ErrorThrowEx( 6, 3467, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
 goto *vr$7;
 label$2838:;
 fb$result$1 = 0x0p+0;
 goto label$2834;
 label$2834:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T16FUNC_CSNG_DOUBLEEd( struct $12SYSTEM_BUS_T* THIS$1, double VALUE$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2839:;
 if( ((int64)-(VALUE$1 <= 0x1.FFFFFDFF07036p+127) & (int64)-(VALUE$1 >= -0x1.FFFFFDFF07036p+127)) == 0ll ) goto label$2842;
 {
  fb$result$1 = VALUE$1;
  goto label$2840;
 }
 label$2842:;
 label$2841:;
 label$2843:;
 void* vr$4 = fb_ErrorThrowEx( 6, 3475, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
 goto *vr$4;
 label$2844:;
 fb$result$1 = 0x0p+0;
 goto label$2840;
 label$2840:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T15FUNC_CDBL_FLOATEd( struct $12SYSTEM_BUS_T* THIS$1, double VALUE$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2845:;
 if( ((int64)-(VALUE$1 <= 0x1.FFFFFFFFFFFFFp+1023) & (int64)-(VALUE$1 >= -0x1.FFFFFFFFFFFFFp+1023)) == 0ll ) goto label$2848;
 {
  fb$result$1 = VALUE$1;
  goto label$2846;
 }
 label$2848:;
 label$2847:;
 label$2849:;
 void* vr$4 = fb_ErrorThrowEx( 6, 3485, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
 goto *vr$4;
 label$2850:;
 fb$result$1 = 0x0p+0;
 goto label$2846;
 label$2846:;
 return fb$result$1;
}

int32 _ZN12SYSTEM_BUS_T16FUNC_CINT_DOUBLEEd( struct $12SYSTEM_BUS_T* THIS$1, double VALUE$1 )
{
 int32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$2851:;
 if( ((int64)-(VALUE$1 < 0x1.FFFEp+14) & (int64)-(VALUE$1 >= -0x1.0001p+15)) == 0ll ) goto label$2854;
 {
  int32 vr$4 = _ZN12SYSTEM_BUS_T18QBR_DOUBLE_TO_LONGEd( THIS$1, VALUE$1 );
  fb$result$1 = vr$4;
  goto label$2852;
 }
 label$2854:;
 label$2853:;
 label$2855:;
 void* vr$5 = fb_ErrorThrowEx( 6, 3495, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
 goto *vr$5;
 label$2856:;
 fb$result$1 = 0;
 goto label$2852;
 label$2852:;
 return fb$result$1;
}

int64 _ZN12SYSTEM_BUS_T15FUNC_CINT_FLOATEd( struct $12SYSTEM_BUS_T* THIS$1, double VALUE$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2857:;
 if( ((int64)-(VALUE$1 < 0x1.FFFEp+14) & (int64)-(VALUE$1 >= -0x1.0001p+15)) == 0ll ) goto label$2860;
 {
  int64 vr$4 = _ZN12SYSTEM_BUS_T3QBREd( THIS$1, VALUE$1 );
  fb$result$1 = vr$4;
  goto label$2858;
 }
 label$2860:;
 label$2859:;
 label$2861:;
 void* vr$5 = fb_ErrorThrowEx( 6, 3503, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
 goto *vr$5;
 label$2862:;
 fb$result$1 = 0ll;
 goto label$2858;
 label$2858:;
 return fb$result$1;
}

int16 _ZN12SYSTEM_BUS_T14FUNC_CINT_LONGEi( struct $12SYSTEM_BUS_T* THIS$1, int32 VALUE$1 )
{
 int16 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 2ll );
 label$2863:;
 if( ((int64)-((int64)VALUE$1 >= -32768ll) & (int64)-((int64)VALUE$1 <= 32767ll)) == 0ll ) goto label$2866;
 {
  fb$result$1 = (int16)VALUE$1;
  goto label$2864;
 }
 label$2866:;
 label$2865:;
 label$2867:;
 void* vr$7 = fb_ErrorThrowEx( 6, 3511, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
 goto *vr$7;
 label$2868:;
 fb$result$1 = (int16)0;
 goto label$2864;
 label$2864:;
 return fb$result$1;
}

int16 _ZN12SYSTEM_BUS_T15FUNC_CINT_ULONGEj( struct $12SYSTEM_BUS_T* THIS$1, uint32 VALUE$1 )
{
 int16 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 2ll );
 label$2869:;
 if( (int64)VALUE$1 > 32767ll ) goto label$2872;
 {
  fb$result$1 = (int16)VALUE$1;
  goto label$2870;
 }
 label$2872:;
 label$2871:;
 label$2873:;
 void* vr$3 = fb_ErrorThrowEx( 6, 3519, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
 goto *vr$3;
 label$2874:;
 fb$result$1 = (int16)0;
 goto label$2870;
 label$2870:;
 return fb$result$1;
}

int16 _ZN12SYSTEM_BUS_T15FUNC_CINT_INT64Ex( struct $12SYSTEM_BUS_T* THIS$1, int64 VALUE$1 )
{
 int16 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 2ll );
 label$2875:;
 if( ((int64)-(VALUE$1 >= -32768ll) & (int64)-(VALUE$1 <= 32767ll)) == 0ll ) goto label$2878;
 {
  fb$result$1 = (int16)VALUE$1;
  goto label$2876;
 }
 label$2878:;
 label$2877:;
 label$2879:;
 void* vr$5 = fb_ErrorThrowEx( 6, 3527, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
 goto *vr$5;
 label$2880:;
 fb$result$1 = (int16)0;
 goto label$2876;
 label$2876:;
 return fb$result$1;
}

int16 _ZN12SYSTEM_BUS_T16FUNC_CINT_UINT64Ey( struct $12SYSTEM_BUS_T* THIS$1, uint64 VALUE$1 )
{
 int16 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 2ll );
 label$2881:;
 if( VALUE$1 > 32767ull ) goto label$2884;
 {
  fb$result$1 = (int16)VALUE$1;
  goto label$2882;
 }
 label$2884:;
 label$2883:;
 label$2885:;
 void* vr$2 = fb_ErrorThrowEx( 6, 3535, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
 goto *vr$2;
 label$2886:;
 fb$result$1 = (int16)0;
 goto label$2882;
 label$2882:;
 return fb$result$1;
}

int32 _ZN12SYSTEM_BUS_T16FUNC_CLNG_DOUBLEEd( struct $12SYSTEM_BUS_T* THIS$1, double VALUE$1 )
{
 int32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$2887:;
 if( ((int64)-(VALUE$1 < 0x1.FFFFFFFEp+30) & (int64)-(VALUE$1 >= -0x1.00000001p+31)) == 0ll ) goto label$2890;
 {
  int32 vr$4 = _ZN12SYSTEM_BUS_T18QBR_DOUBLE_TO_LONGEd( THIS$1, VALUE$1 );
  fb$result$1 = vr$4;
  goto label$2888;
 }
 label$2890:;
 label$2889:;
 label$2891:;
 void* vr$5 = fb_ErrorThrowEx( 6, 3546, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
 goto *vr$5;
 label$2892:;
 fb$result$1 = 0;
 goto label$2888;
 label$2888:;
 return fb$result$1;
}

int64 _ZN12SYSTEM_BUS_T15FUNC_CLNG_FLOATEd( struct $12SYSTEM_BUS_T* THIS$1, double VALUE$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2893:;
 if( ((int64)-(VALUE$1 < 0x1.FFFFFFFEp+30) & (int64)-(VALUE$1 >= -0x1.00000001p+31)) == 0ll ) goto label$2896;
 {
  int64 vr$4 = _ZN12SYSTEM_BUS_T3QBREd( THIS$1, VALUE$1 );
  fb$result$1 = vr$4;
  goto label$2894;
 }
 label$2896:;
 label$2895:;
 label$2897:;
 void* vr$5 = fb_ErrorThrowEx( 6, 3554, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
 goto *vr$5;
 label$2898:;
 fb$result$1 = 0ll;
 goto label$2894;
 label$2894:;
 return fb$result$1;
}

int32 _ZN12SYSTEM_BUS_T15FUNC_CLNG_ULONGEj( struct $12SYSTEM_BUS_T* THIS$1, uint32 VALUE$1 )
{
 int32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$2899:;
 if( (int64)VALUE$1 > 2147483647ll ) goto label$2902;
 {
  fb$result$1 = (int32)VALUE$1;
  goto label$2900;
 }
 label$2902:;
 label$2901:;
 label$2903:;
 void* vr$2 = fb_ErrorThrowEx( 6, 3562, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
 goto *vr$2;
 label$2904:;
 fb$result$1 = 0;
 goto label$2900;
 label$2900:;
 return fb$result$1;
}

int32 _ZN12SYSTEM_BUS_T15FUNC_CLNG_INT64Ex( struct $12SYSTEM_BUS_T* THIS$1, int64 VALUE$1 )
{
 int32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$2905:;
 if( ((int64)-(VALUE$1 >= -2147483648ll) & (int64)-(VALUE$1 <= 2147483647ll)) == 0ll ) goto label$2908;
 {
  fb$result$1 = (int32)VALUE$1;
  goto label$2906;
 }
 label$2908:;
 label$2907:;
 label$2909:;
 void* vr$5 = fb_ErrorThrowEx( 6, 3570, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
 goto *vr$5;
 label$2910:;
 fb$result$1 = 0;
 goto label$2906;
 label$2906:;
 return fb$result$1;
}

int32 _ZN12SYSTEM_BUS_T16FUNC_CLNG_UINT64Ey( struct $12SYSTEM_BUS_T* THIS$1, uint64 VALUE$1 )
{
 int32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$2911:;
 if( VALUE$1 > 2147483647ull ) goto label$2914;
 {
  fb$result$1 = (int32)VALUE$1;
  goto label$2912;
 }
 label$2914:;
 label$2913:;
 label$2915:;
 void* vr$2 = fb_ErrorThrowEx( 6, 3578, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
 goto *vr$2;
 label$2916:;
 fb$result$1 = 0;
 goto label$2912;
 label$2912:;
 return fb$result$1;
}

int64 _ZN12SYSTEM_BUS_T17FUNC_ROUND_DOUBLEEd( struct $12SYSTEM_BUS_T* THIS$1, double VALUE$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2917:;
 int64 vr$1 = _ZN12SYSTEM_BUS_T3QBREd( THIS$1, VALUE$1 );
 fb$result$1 = vr$1;
 goto label$2918;
 label$2918:;
 return fb$result$1;
}

int64 _ZN12SYSTEM_BUS_T16FUNC_ROUND_FLOATEd( struct $12SYSTEM_BUS_T* THIS$1, double VALUE$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2919:;
 int64 vr$1 = _ZN12SYSTEM_BUS_T3QBREd( THIS$1, VALUE$1 );
 fb$result$1 = vr$1;
 goto label$2920;
 label$2920:;
 return fb$result$1;
}

float _ZN12SYSTEM_BUS_T8FUNC_ABSEf( struct $12SYSTEM_BUS_T* THIS$1, float D$1 )
{
 float fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$2921:;
 double vr$2 = fabs( (double)D$1 );
 fb$result$1 = (float)vr$2;
 goto label$2922;
 label$2922:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8FUNC_ABSEd( struct $12SYSTEM_BUS_T* THIS$1, double D$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2923:;
 double vr$1 = fabs( D$1 );
 fb$result$1 = vr$1;
 goto label$2924;
 label$2924:;
 return fb$result$1;
}

void _ZN12SYSTEM_BUS_T8FUNC_ABSER9_FLOAT128( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* D$1 )
{
 label$2925:;
 _ZN12SYSTEM_BUS_T14K_FLOAT128_ABSEP9_FLOAT128S1_( THIS$1, D$1, D$1 );
 label$2926:;
}

void _ZN12SYSTEM_BUS_T8FUNC_ABSER9_FLOAT256( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* D$1 )
{
 label$2927:;
 _ZN12SYSTEM_BUS_T14K_FLOAT256_ABSEP9_FLOAT256S1_( THIS$1, D$1, D$1 );
 label$2928:;
}

void _ZN12SYSTEM_BUS_T8FUNC_ABSER9_FLOAT512( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* D$1 )
{
 label$2929:;
 _ZN12SYSTEM_BUS_T14K_FLOAT512_ABSEP9_FLOAT512S1_( THIS$1, D$1, D$1 );
 label$2930:;
}

uint8 _ZN12SYSTEM_BUS_T8FUNC_ABSEh( struct $12SYSTEM_BUS_T* THIS$1, uint8 D$1 )
{
 uint8 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 1ll );
 label$2931:;
 fb$result$1 = D$1;
 goto label$2932;
 label$2932:;
 return fb$result$1;
}

uint16 _ZN12SYSTEM_BUS_T8FUNC_ABSEt( struct $12SYSTEM_BUS_T* THIS$1, uint16 D$1 )
{
 uint16 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 2ll );
 label$2933:;
 fb$result$1 = D$1;
 goto label$2934;
 label$2934:;
 return fb$result$1;
}

uint32 _ZN12SYSTEM_BUS_T8FUNC_ABSEj( struct $12SYSTEM_BUS_T* THIS$1, uint32 D$1 )
{
 uint32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$2935:;
 fb$result$1 = D$1;
 goto label$2936;
 label$2936:;
 return fb$result$1;
}

uint64 _ZN12SYSTEM_BUS_T8FUNC_ABSEy( struct $12SYSTEM_BUS_T* THIS$1, uint64 D$1 )
{
 uint64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2937:;
 fb$result$1 = D$1;
 goto label$2938;
 label$2938:;
 return fb$result$1;
}

int8 _ZN12SYSTEM_BUS_T8FUNC_ABSEa( struct $12SYSTEM_BUS_T* THIS$1, int8 D$1 )
{
 int8 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 1ll );
 label$2939:;
 fb$result$1 = (int8)__builtin_llabs( (int64)D$1 );
 goto label$2940;
 label$2940:;
 return fb$result$1;
}

int16 _ZN12SYSTEM_BUS_T8FUNC_ABSEs( struct $12SYSTEM_BUS_T* THIS$1, int16 D$1 )
{
 int16 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 2ll );
 label$2941:;
 fb$result$1 = (int16)__builtin_llabs( (int64)D$1 );
 goto label$2942;
 label$2942:;
 return fb$result$1;
}

int32 _ZN12SYSTEM_BUS_T8FUNC_ABSEi( struct $12SYSTEM_BUS_T* THIS$1, int32 D$1 )
{
 int32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$2943:;
 fb$result$1 = (int32)__builtin_llabs( (int64)D$1 );
 goto label$2944;
 label$2944:;
 return fb$result$1;
}

int64 _ZN12SYSTEM_BUS_T8FUNC_ABSEx( struct $12SYSTEM_BUS_T* THIS$1, int64 D$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2945:;
 int64 vr$1 = llabs( D$1 );
 fb$result$1 = vr$1;
 goto label$2946;
 label$2946:;
 return fb$result$1;
}

int64 _ZN12SYSTEM_BUS_T12CHECK_LBOUNDEPxii( struct $12SYSTEM_BUS_T* THIS$1, int64* ARRAY$1, int32 INDEX$1, int32 NUM_INDEXES$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2947:;
 static int64 RET$1;
 DISABLEEVENTS$ = 1;
 int64 vr$1 = _ZN12SYSTEM_BUS_T11FUNC_LBOUNDEPxii( THIS$1, ARRAY$1, INDEX$1, NUM_INDEXES$1 );
 RET$1 = vr$1;
 NEW_ERROR$ = 0u;
 DISABLEEVENTS$ = 0;
 fb$result$1 = RET$1;
 goto label$2948;
 label$2948:;
 return fb$result$1;
}

int64 _ZN12SYSTEM_BUS_T12CHECK_UBOUNDEPxii( struct $12SYSTEM_BUS_T* THIS$1, int64* ARRAY$1, int32 INDEX$1, int32 NUM_INDEXES$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2949:;
 static int64 RET$1;
 DISABLEEVENTS$ = 1;
 int64 vr$1 = _ZN12SYSTEM_BUS_T11FUNC_UBOUNDEPxii( THIS$1, ARRAY$1, INDEX$1, NUM_INDEXES$1 );
 RET$1 = vr$1;
 NEW_ERROR$ = 0u;
 DISABLEEVENTS$ = 0;
 fb$result$1 = RET$1;
 goto label$2950;
 label$2950:;
 return fb$result$1;
}

int32 _ZN12SYSTEM_BUS_T14LOGICAL_DRIVESEv( struct $12SYSTEM_BUS_T* THIS$1 )
{
 int32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$2951:;
 fb$result$1 = 0;
 goto label$2952;
 label$2952:;
 return fb$result$1;
}

int32 _ZN12SYSTEM_BUS_T8FUNC_SGNEh( struct $12SYSTEM_BUS_T* THIS$1, uint8 V$1 )
{
 int32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$2953:;
 if( (int64)V$1 == 0ll ) goto label$2956;
 {
  fb$result$1 = 1;
  goto label$2954;
 }
 goto label$2955;
 label$2956:;
 {
  fb$result$1 = 0;
  goto label$2954;
 }
 label$2955:;
 label$2954:;
 return fb$result$1;
}

int32 _ZN12SYSTEM_BUS_T8FUNC_SGNEa( struct $12SYSTEM_BUS_T* THIS$1, int8 V$1 )
{
 int32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$2957:;
 if( (int64)V$1 == 0ll ) goto label$2960;
 {
  if( (int64)V$1 <= 0ll ) goto label$2962;
  {
   fb$result$1 = 1;
   goto label$2958;
  }
  goto label$2961;
  label$2962:;
  {
   fb$result$1 = -1;
   goto label$2958;
  }
  label$2961:;
 }
 label$2960:;
 label$2959:;
 fb$result$1 = 0;
 goto label$2958;
 label$2958:;
 return fb$result$1;
}

int32 _ZN12SYSTEM_BUS_T8FUNC_SGNEt( struct $12SYSTEM_BUS_T* THIS$1, uint16 V$1 )
{
 int32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$2963:;
 if( (int64)V$1 == 0ll ) goto label$2966;
 {
  fb$result$1 = 1;
  goto label$2964;
 }
 goto label$2965;
 label$2966:;
 {
  fb$result$1 = 0;
  goto label$2964;
 }
 label$2965:;
 label$2964:;
 return fb$result$1;
}

int32 _ZN12SYSTEM_BUS_T8FUNC_SGNEs( struct $12SYSTEM_BUS_T* THIS$1, int16 V$1 )
{
 int32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$2967:;
 if( (int64)V$1 == 0ll ) goto label$2970;
 {
  if( (int64)V$1 <= 0ll ) goto label$2972;
  {
   fb$result$1 = 1;
   goto label$2968;
  }
  goto label$2971;
  label$2972:;
  {
   fb$result$1 = -1;
   goto label$2968;
  }
  label$2971:;
 }
 label$2970:;
 label$2969:;
 fb$result$1 = 0;
 goto label$2968;
 label$2968:;
 return fb$result$1;
}

int32 _ZN12SYSTEM_BUS_T8FUNC_SGNEj( struct $12SYSTEM_BUS_T* THIS$1, uint32 V$1 )
{
 int32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$2973:;
 if( (int64)V$1 == 0ll ) goto label$2976;
 {
  fb$result$1 = 1;
  goto label$2974;
 }
 goto label$2975;
 label$2976:;
 {
  fb$result$1 = 0;
  goto label$2974;
 }
 label$2975:;
 label$2974:;
 return fb$result$1;
}

int32 _ZN12SYSTEM_BUS_T8FUNC_SGNEi( struct $12SYSTEM_BUS_T* THIS$1, int32 V$1 )
{
 int32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$2977:;
 if( (int64)V$1 == 0ll ) goto label$2980;
 {
  if( (int64)V$1 <= 0ll ) goto label$2982;
  {
   fb$result$1 = 1;
   goto label$2978;
  }
  goto label$2981;
  label$2982:;
  {
   fb$result$1 = -1;
   goto label$2978;
  }
  label$2981:;
 }
 label$2980:;
 label$2979:;
 fb$result$1 = 0;
 goto label$2978;
 label$2978:;
 return fb$result$1;
}

int32 _ZN12SYSTEM_BUS_T8FUNC_SGNEy( struct $12SYSTEM_BUS_T* THIS$1, uint64 V$1 )
{
 int32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$2983:;
 if( V$1 == 0ull ) goto label$2986;
 {
  fb$result$1 = 1;
  goto label$2984;
 }
 goto label$2985;
 label$2986:;
 {
  fb$result$1 = 0;
  goto label$2984;
 }
 label$2985:;
 label$2984:;
 return fb$result$1;
}

int32 _ZN12SYSTEM_BUS_T8FUNC_SGNEx( struct $12SYSTEM_BUS_T* THIS$1, int64 V$1 )
{
 int32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$2987:;
 if( V$1 == 0ll ) goto label$2990;
 {
  if( V$1 <= 0ll ) goto label$2992;
  {
   fb$result$1 = 1;
   goto label$2988;
  }
  goto label$2991;
  label$2992:;
  {
   fb$result$1 = -1;
   goto label$2988;
  }
  label$2991:;
 }
 label$2990:;
 label$2989:;
 fb$result$1 = 0;
 goto label$2988;
 label$2988:;
 return fb$result$1;
}

int32 _ZN12SYSTEM_BUS_T8FUNC_SGNEf( struct $12SYSTEM_BUS_T* THIS$1, float V$1 )
{
 int32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$2993:;
 if( V$1 == 0x0p+0f ) goto label$2996;
 {
  if( V$1 <= 0x0p+0f ) goto label$2998;
  {
   fb$result$1 = 1;
   goto label$2994;
  }
  goto label$2997;
  label$2998:;
  {
   fb$result$1 = -1;
   goto label$2994;
  }
  label$2997:;
 }
 label$2996:;
 label$2995:;
 fb$result$1 = 0;
 goto label$2994;
 label$2994:;
 return fb$result$1;
}

int32 _ZN12SYSTEM_BUS_T8FUNC_SGNEd( struct $12SYSTEM_BUS_T* THIS$1, double V$1 )
{
 int32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$2999:;
 if( V$1 == 0x0p+0 ) goto label$3002;
 {
  if( V$1 <= 0x0p+0 ) goto label$3004;
  {
   fb$result$1 = 1;
   goto label$3000;
  }
  goto label$3003;
  label$3004:;
  {
   fb$result$1 = -1;
   goto label$3000;
  }
  label$3003:;
 }
 label$3002:;
 label$3001:;
 fb$result$1 = 0;
 goto label$3000;
 label$3000:;
 return fb$result$1;
}

int32 _ZN12SYSTEM_BUS_T8FUNC_SGNER9_FLOAT128( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* V$1 )
{
 int32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$3005:;
 uint64 vr$1 = _ZN9_FLOAT128cvyEv( V$1 );
 if( vr$1 == 0ull ) goto label$3008;
 {
  uint64 vr$2 = _ZN9_FLOAT128cvyEv( V$1 );
  if( vr$2 <= 0ull ) goto label$3010;
  {
   fb$result$1 = 1;
   goto label$3006;
  }
  goto label$3009;
  label$3010:;
  {
   fb$result$1 = -1;
   goto label$3006;
  }
  label$3009:;
 }
 label$3008:;
 label$3007:;
 fb$result$1 = 0;
 goto label$3006;
 label$3006:;
 return fb$result$1;
}

int32 _ZN12SYSTEM_BUS_T8FUNC_SGNER9_FLOAT256( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* V$1 )
{
 int32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$3011:;
 uint64 vr$1 = _ZN9_FLOAT256cvyEv( V$1 );
 if( vr$1 == 0ull ) goto label$3014;
 {
  uint64 vr$2 = _ZN9_FLOAT256cvyEv( V$1 );
  if( vr$2 <= 0ull ) goto label$3016;
  {
   fb$result$1 = 1;
   goto label$3012;
  }
  goto label$3015;
  label$3016:;
  {
   fb$result$1 = -1;
   goto label$3012;
  }
  label$3015:;
 }
 label$3014:;
 label$3013:;
 fb$result$1 = 0;
 goto label$3012;
 label$3012:;
 return fb$result$1;
}

int32 _ZN12SYSTEM_BUS_T8FUNC_SGNER9_FLOAT512( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* V$1 )
{
 int32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$3017:;
 uint64 vr$1 = _ZN9_FLOAT512cvyEv( V$1 );
 if( vr$1 == 0ull ) goto label$3020;
 {
  uint64 vr$2 = _ZN9_FLOAT512cvyEv( V$1 );
  if( vr$2 <= 0ull ) goto label$3022;
  {
   fb$result$1 = 1;
   goto label$3018;
  }
  goto label$3021;
  label$3022:;
  {
   fb$result$1 = -1;
   goto label$3018;
  }
  label$3021:;
 }
 label$3020:;
 label$3019:;
 fb$result$1 = 0;
 goto label$3018;
 label$3018:;
 return fb$result$1;
}

uint32 _ZN12SYSTEM_BUS_T11FUNC__RGB32Eiiii( struct $12SYSTEM_BUS_T* THIS$1, int32 R$1, int32 G$1, int32 B$1, int32 A$1 )
{
 uint32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$3023:;
 if( (int64)R$1 >= 0ll ) goto label$3026;
 {
  R$1 = 0;
  label$3026:;
 }
 if( (int64)R$1 <= 255ll ) goto label$3028;
 {
  R$1 = 255;
  label$3028:;
 }
 if( (int64)G$1 >= 0ll ) goto label$3030;
 {
  G$1 = 0;
  label$3030:;
 }
 if( (int64)G$1 <= 255ll ) goto label$3032;
 {
  G$1 = 255;
  label$3032:;
 }
 if( (int64)B$1 >= 0ll ) goto label$3034;
 {
  B$1 = 0;
  label$3034:;
 }
 if( (int64)B$1 <= 255ll ) goto label$3036;
 {
  B$1 = 255;
  label$3036:;
 }
 if( (int64)A$1 >= 0ll ) goto label$3038;
 {
  A$1 = 0;
  label$3038:;
 }
 if( (int64)A$1 <= 255ll ) goto label$3040;
 {
  A$1 = 255;
  label$3040:;
 }
 fb$result$1 = (uint32)(((((int64)A$1 << (24ll & 63ll)) + ((int64)R$1 << (16ll & 63ll))) + ((int64)G$1 << (8ll & 63ll))) + (int64)B$1);
 goto label$3024;
 label$3024:;
 return fb$result$1;
}

uint32 _ZN12SYSTEM_BUS_T11FUNC__RGB32Eiii( struct $12SYSTEM_BUS_T* THIS$1, int32 R$1, int32 G$1, int32 B$1 )
{
 uint32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$3041:;
 if( (int64)R$1 >= 0ll ) goto label$3044;
 {
  R$1 = 0;
  label$3044:;
 }
 if( (int64)R$1 <= 255ll ) goto label$3046;
 {
  R$1 = 255;
  label$3046:;
 }
 if( (int64)G$1 >= 0ll ) goto label$3048;
 {
  G$1 = 0;
  label$3048:;
 }
 if( (int64)G$1 <= 255ll ) goto label$3050;
 {
  G$1 = 255;
  label$3050:;
 }
 if( (int64)B$1 >= 0ll ) goto label$3052;
 {
  B$1 = 0;
  label$3052:;
 }
 if( (int64)B$1 <= 255ll ) goto label$3054;
 {
  B$1 = 255;
  label$3054:;
 }
 fb$result$1 = (uint32)(((((int64)R$1 << (16ll & 63ll)) + ((int64)G$1 << (8ll & 63ll))) + (int64)B$1) | 4278190080ll);
 goto label$3042;
 label$3042:;
 return fb$result$1;
}

uint32 _ZN12SYSTEM_BUS_T11FUNC__RGB32Eii( struct $12SYSTEM_BUS_T* THIS$1, int32 I$1, int32 A$1 )
{
 uint32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$3055:;
 if( (int64)I$1 >= 0ll ) goto label$3058;
 {
  I$1 = 0;
  label$3058:;
 }
 if( (int64)I$1 <= 255ll ) goto label$3060;
 {
  I$1 = 255;
  label$3060:;
 }
 if( (int64)A$1 >= 0ll ) goto label$3062;
 {
  A$1 = 0;
  label$3062:;
 }
 if( (int64)A$1 <= 255ll ) goto label$3064;
 {
  A$1 = 255;
  label$3064:;
 }
 fb$result$1 = (uint32)(((((int64)A$1 << (24ll & 63ll)) + ((int64)I$1 << (16ll & 63ll))) + ((int64)I$1 << (8ll & 63ll))) + (int64)I$1);
 goto label$3056;
 label$3056:;
 return fb$result$1;
}

uint32 _ZN12SYSTEM_BUS_T11FUNC__RGB32Ei( struct $12SYSTEM_BUS_T* THIS$1, int32 I$1 )
{
 uint32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$3065:;
 if( (int64)I$1 >= 0ll ) goto label$3068;
 {
  I$1 = 0;
  label$3068:;
 }
 if( (int64)I$1 <= 255ll ) goto label$3070;
 {
  I$1 = 255;
  label$3070:;
 }
 fb$result$1 = (uint32)(((((int64)I$1 << (16ll & 63ll)) + ((int64)I$1 << (8ll & 63ll))) + (int64)I$1) | 4278190080ll);
 goto label$3066;
 label$3066:;
 return fb$result$1;
}

uint32 _ZN12SYSTEM_BUS_T12FUNC__RGBA32Eiiii( struct $12SYSTEM_BUS_T* THIS$1, int32 R$1, int32 G$1, int32 B$1, int32 A$1 )
{
 uint32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$3071:;
 if( (int64)R$1 >= 0ll ) goto label$3074;
 {
  R$1 = 0;
  label$3074:;
 }
 if( (int64)R$1 <= 255ll ) goto label$3076;
 {
  R$1 = 255;
  label$3076:;
 }
 if( (int64)G$1 >= 0ll ) goto label$3078;
 {
  G$1 = 0;
  label$3078:;
 }
 if( (int64)G$1 <= 255ll ) goto label$3080;
 {
  G$1 = 255;
  label$3080:;
 }
 if( (int64)B$1 >= 0ll ) goto label$3082;
 {
  B$1 = 0;
  label$3082:;
 }
 if( (int64)B$1 <= 255ll ) goto label$3084;
 {
  B$1 = 255;
  label$3084:;
 }
 if( (int64)A$1 >= 0ll ) goto label$3086;
 {
  A$1 = 0;
  label$3086:;
 }
 if( (int64)A$1 <= 255ll ) goto label$3088;
 {
  A$1 = 255;
  label$3088:;
 }
 fb$result$1 = (uint32)(((((int64)A$1 << (24ll & 63ll)) + ((int64)R$1 << (16ll & 63ll))) + ((int64)G$1 << (8ll & 63ll))) + (int64)B$1);
 goto label$3072;
 label$3072:;
 return fb$result$1;
}

int32 _ZN12SYSTEM_BUS_T13FUNC__ALPHA32Ej( struct $12SYSTEM_BUS_T* THIS$1, uint32 COL$1 )
{
 int32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$3089:;
 fb$result$1 = (int32)((int64)COL$1 >> (24ll & 63ll));
 goto label$3090;
 label$3090:;
 return fb$result$1;
}

int32 _ZN12SYSTEM_BUS_T11FUNC__RED32Ej( struct $12SYSTEM_BUS_T* THIS$1, uint32 COL$1 )
{
 int32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$3091:;
 fb$result$1 = (int32)(((int64)COL$1 >> (16ll & 63ll)) & 255ll);
 goto label$3092;
 label$3092:;
 return fb$result$1;
}

int32 _ZN12SYSTEM_BUS_T13FUNC__GREEN32Ej( struct $12SYSTEM_BUS_T* THIS$1, uint32 COL$1 )
{
 int32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$3093:;
 fb$result$1 = (int32)(((int64)COL$1 << (8ll & 63ll)) & 255ll);
 goto label$3094;
 label$3094:;
 return fb$result$1;
}

int32 _ZN12SYSTEM_BUS_T12FUNC__BLUE32Ej( struct $12SYSTEM_BUS_T* THIS$1, uint32 COL$1 )
{
 int32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$3095:;
 fb$result$1 = (int32)((int64)COL$1 & 255ll);
 goto label$3096;
 label$3096:;
 return fb$result$1;
}

uint16 _ZN12SYSTEM_BUS_T19VARPTR_DBLOCK_CHECKEPh( struct $12SYSTEM_BUS_T* THIS$1, uint8* OFF$1 )
{
 uint16 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 2ll );
 label$3097:;
 if( OFF$1 >= *(uint8**)((int64)(double*)MEM64$ + 534528ll) ) goto label$3100;
 {
  fb$result$1 = (uint16)((int64)OFF$1 - *(int64*)((int64)(double*)MEM64$ + 10240ll));
  goto label$3098;
 }
 goto label$3099;
 label$3100:;
 {
  fb$result$1 = (uint16)(((int64)OFF$1 - *(int64*)MEM64$) & 15ll);
  goto label$3098;
 }
 label$3099:;
 label$3098:;
 return fb$result$1;
}

uint16 _ZN12SYSTEM_BUS_T19VARSEG_DBLOCK_CHECKEPh( struct $12SYSTEM_BUS_T* THIS$1, uint8* OFF$1 )
{
 uint16 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 2ll );
 label$3101:;
 if( OFF$1 >= *(uint8**)((int64)(double*)MEM64$ + 534528ll) ) goto label$3104;
 {
  fb$result$1 = (uint16)80u;
  goto label$3102;
 }
 goto label$3103;
 label$3104:;
 {
  fb$result$1 = (uint16)((int32)__builtin_nearbyint( (double)((int64)OFF$1 - *(int64*)MEM64$) / 0x1.p+4 ));
  goto label$3102;
 }
 label$3103:;
 label$3102:;
 return fb$result$1;
}

void _ZN12SYSTEM_BUS_T22K_FLOAT128_FROM_DOUBLEEP9_FLOAT128Pd( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* A$1, double* B$1 )
{
 label$3105:;
 _ZN9_FLOAT128aSEd( A$1, *B$1 );
 label$3106:;
}

void _ZN12SYSTEM_BUS_T20K_FLOAT128_TO_DOUBLEEP9_FLOAT128Pd( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* A$1, double* B$1 )
{
 label$3107:;
 uint64 vr$0 = _ZN9_FLOAT128cvyEv( A$1 );
 *B$1 = (double)vr$0;
 label$3108:;
}

void _ZN12SYSTEM_BUS_T14K_FLOAT128_ADDEP9_FLOAT128S1_S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* A$1, struct $9_FLOAT128* B$1, struct $9_FLOAT128* C$1 )
{
 struct $9_FLOAT128 TMP$2368$1;
 label$3109:;
 struct $9_FLOAT128* vr$1 = _ZplR9_FLOAT128S0_( &TMP$2368$1, A$1, B$1 );
 _ZN9_FLOAT128aSERS_( C$1, vr$1 );
 label$3110:;
}

void _ZN12SYSTEM_BUS_T14K_FLOAT128_SUBEP9_FLOAT128S1_S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* A$1, struct $9_FLOAT128* B$1, struct $9_FLOAT128* C$1 )
{
 struct $9_FLOAT128 TMP$2369$1;
 label$3111:;
 struct $9_FLOAT128* vr$1 = _ZmiR9_FLOAT128S0_( &TMP$2369$1, A$1, B$1 );
 _ZN9_FLOAT128aSERS_( C$1, vr$1 );
 label$3112:;
}

void _ZN12SYSTEM_BUS_T14K_FLOAT128_ABSEP9_FLOAT128S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* A$1, struct $9_FLOAT128* B$1 )
{
 label$3113:;
 uint64 vr$0 = _ZN9_FLOAT128cvyEv( A$1 );
 if( vr$0 <= 0ull ) goto label$3116;
 {
  _ZN9_FLOAT128aSERS_( B$1, A$1 );
 }
 goto label$3115;
 label$3116:;
 {
  struct $9_FLOAT128 TMP$2370$2;
  struct $9_FLOAT128* vr$2 = _ZngR9_FLOAT128( &TMP$2370$2, A$1 );
  _ZN9_FLOAT128aSERS_( B$1, vr$2 );
 }
 label$3115:;
 label$3114:;
}

void _ZN12SYSTEM_BUS_T14K_FLOAT128_MULEP9_FLOAT128S1_S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* A$1, struct $9_FLOAT128* B$1, struct $9_FLOAT128* C$1 )
{
 struct $9_FLOAT128 TMP$2371$1;
 label$3117:;
 struct $9_FLOAT128* vr$1 = _ZmlR9_FLOAT128S0_( &TMP$2371$1, A$1, B$1 );
 _ZN9_FLOAT128aSERS_( C$1, vr$1 );
 label$3118:;
}

void _ZN12SYSTEM_BUS_T14K_FLOAT128_DIVEP9_FLOAT128S1_S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* A$1, struct $9_FLOAT128* B$1, struct $9_FLOAT128* C$1 )
{
 struct $9_FLOAT128 TMP$2372$1;
 label$3119:;
 struct $9_FLOAT128* vr$1 = _ZdvR9_FLOAT128S0_( &TMP$2372$1, A$1, B$1 );
 _ZN9_FLOAT128aSERS_( C$1, vr$1 );
 label$3120:;
}

int64 _ZN12SYSTEM_BUS_T14K_FLOAT128_CMPEP9_FLOAT128S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* A$1, struct $9_FLOAT128* B$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3121:;
 uint64 vr$1 = _ZN9_FLOAT128cvyEv( A$1 );
 uint64 vr$2 = _ZN9_FLOAT128cvyEv( B$1 );
 if( vr$1 <= vr$2 ) goto label$3124;
 {
  fb$result$1 = 1ll;
  goto label$3122;
 }
 goto label$3123;
 label$3124:;
 uint64 vr$3 = _ZN9_FLOAT128cvyEv( A$1 );
 uint64 vr$4 = _ZN9_FLOAT128cvyEv( B$1 );
 if( vr$3 >= vr$4 ) goto label$3125;
 {
  fb$result$1 = -1ll;
  goto label$3122;
 }
 goto label$3123;
 label$3125:;
 {
  fb$result$1 = 0ll;
  goto label$3122;
 }
 label$3123:;
 label$3122:;
 return fb$result$1;
}

void _ZN12SYSTEM_BUS_T22K_FLOAT256_FROM_DOUBLEEP9_FLOAT256Pd( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* A$1, double* B$1 )
{
 label$3126:;
 _ZN9_FLOAT256aSEd( A$1, *B$1 );
 label$3127:;
}

void _ZN12SYSTEM_BUS_T20K_FLOAT256_TO_DOUBLEEP9_FLOAT256Pd( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* A$1, double* B$1 )
{
 label$3128:;
 uint64 vr$0 = _ZN9_FLOAT256cvyEv( A$1 );
 *B$1 = (double)vr$0;
 label$3129:;
}

void _ZN12SYSTEM_BUS_T14K_FLOAT256_ADDEP9_FLOAT256S1_S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* A$1, struct $9_FLOAT256* B$1, struct $9_FLOAT256* C$1 )
{
 struct $9_FLOAT256 TMP$2373$1;
 label$3130:;
 struct $9_FLOAT256* vr$1 = _ZplR9_FLOAT256S0_( &TMP$2373$1, A$1, B$1 );
 _ZN9_FLOAT256aSERS_( C$1, vr$1 );
 label$3131:;
}

void _ZN12SYSTEM_BUS_T14K_FLOAT256_SUBEP9_FLOAT256S1_S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* A$1, struct $9_FLOAT256* B$1, struct $9_FLOAT256* C$1 )
{
 struct $9_FLOAT256 TMP$2374$1;
 label$3132:;
 struct $9_FLOAT256* vr$1 = _ZmiR9_FLOAT256S0_( &TMP$2374$1, A$1, B$1 );
 _ZN9_FLOAT256aSERS_( C$1, vr$1 );
 label$3133:;
}

void _ZN12SYSTEM_BUS_T14K_FLOAT256_ABSEP9_FLOAT256S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* A$1, struct $9_FLOAT256* B$1 )
{
 label$3134:;
 uint64 vr$0 = _ZN9_FLOAT256cvyEv( A$1 );
 if( vr$0 <= 0ull ) goto label$3137;
 {
  _ZN9_FLOAT256aSERS_( B$1, A$1 );
 }
 goto label$3136;
 label$3137:;
 {
  struct $9_FLOAT256 TMP$2375$2;
  struct $9_FLOAT256* vr$2 = _ZngR9_FLOAT256( &TMP$2375$2, A$1 );
  _ZN9_FLOAT256aSERS_( B$1, vr$2 );
 }
 label$3136:;
 label$3135:;
}

void _ZN12SYSTEM_BUS_T14K_FLOAT256_MULEP9_FLOAT256S1_S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* A$1, struct $9_FLOAT256* B$1, struct $9_FLOAT256* C$1 )
{
 struct $9_FLOAT256 TMP$2376$1;
 label$3138:;
 struct $9_FLOAT256* vr$1 = _ZmlR9_FLOAT256S0_( &TMP$2376$1, A$1, B$1 );
 _ZN9_FLOAT256aSERS_( C$1, vr$1 );
 label$3139:;
}

void _ZN12SYSTEM_BUS_T14K_FLOAT256_DIVEP9_FLOAT256S1_S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* A$1, struct $9_FLOAT256* B$1, struct $9_FLOAT256* C$1 )
{
 struct $9_FLOAT256 TMP$2377$1;
 label$3140:;
 struct $9_FLOAT256* vr$1 = _ZdvR9_FLOAT256S0_( &TMP$2377$1, A$1, B$1 );
 _ZN9_FLOAT256aSERS_( C$1, vr$1 );
 label$3141:;
}

int64 _ZN12SYSTEM_BUS_T14K_FLOAT256_CMPEP9_FLOAT256S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* A$1, struct $9_FLOAT256* B$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3142:;
 uint64 vr$1 = _ZN9_FLOAT256cvyEv( A$1 );
 uint64 vr$2 = _ZN9_FLOAT256cvyEv( B$1 );
 if( vr$1 <= vr$2 ) goto label$3145;
 {
  fb$result$1 = 1ll;
  goto label$3143;
 }
 goto label$3144;
 label$3145:;
 uint64 vr$3 = _ZN9_FLOAT256cvyEv( A$1 );
 uint64 vr$4 = _ZN9_FLOAT256cvyEv( B$1 );
 if( vr$3 >= vr$4 ) goto label$3146;
 {
  fb$result$1 = -1ll;
  goto label$3143;
 }
 goto label$3144;
 label$3146:;
 {
  fb$result$1 = 0ll;
  goto label$3143;
 }
 label$3144:;
 label$3143:;
 return fb$result$1;
}

void _ZN12SYSTEM_BUS_T22K_FLOAT512_FROM_DOUBLEEP9_FLOAT512Pd( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* A$1, double* B$1 )
{
 label$3147:;
 _ZN9_FLOAT512aSEd( A$1, *B$1 );
 label$3148:;
}

void _ZN12SYSTEM_BUS_T20K_FLOAT512_TO_DOUBLEEP9_FLOAT512Pd( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* A$1, double* B$1 )
{
 label$3149:;
 uint64 vr$0 = _ZN9_FLOAT512cvyEv( A$1 );
 *B$1 = (double)vr$0;
 label$3150:;
}

void _ZN12SYSTEM_BUS_T14K_FLOAT512_ADDEP9_FLOAT512S1_S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* A$1, struct $9_FLOAT512* B$1, struct $9_FLOAT512* C$1 )
{
 struct $9_FLOAT512 TMP$2378$1;
 label$3151:;
 struct $9_FLOAT512* vr$1 = _ZplR9_FLOAT512S0_( &TMP$2378$1, A$1, B$1 );
 _ZN9_FLOAT512aSERS_( C$1, vr$1 );
 label$3152:;
}

void _ZN12SYSTEM_BUS_T14K_FLOAT512_SUBEP9_FLOAT512S1_S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* A$1, struct $9_FLOAT512* B$1, struct $9_FLOAT512* C$1 )
{
 struct $9_FLOAT512 TMP$2379$1;
 label$3153:;
 struct $9_FLOAT512* vr$1 = _ZmiR9_FLOAT512S0_( &TMP$2379$1, A$1, B$1 );
 _ZN9_FLOAT512aSERS_( C$1, vr$1 );
 label$3154:;
}

void _ZN12SYSTEM_BUS_T14K_FLOAT512_ABSEP9_FLOAT512S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* A$1, struct $9_FLOAT512* B$1 )
{
 label$3155:;
 uint64 vr$0 = _ZN9_FLOAT512cvyEv( A$1 );
 if( vr$0 <= 0ull ) goto label$3158;
 {
  _ZN9_FLOAT512aSERS_( B$1, A$1 );
 }
 goto label$3157;
 label$3158:;
 {
  struct $9_FLOAT512 TMP$2380$2;
  struct $9_FLOAT512* vr$2 = _ZngR9_FLOAT512( &TMP$2380$2, A$1 );
  _ZN9_FLOAT512aSERS_( B$1, vr$2 );
 }
 label$3157:;
 label$3156:;
}

void _ZN12SYSTEM_BUS_T14K_FLOAT512_MULEP9_FLOAT512S1_S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* A$1, struct $9_FLOAT512* B$1, struct $9_FLOAT512* C$1 )
{
 struct $9_FLOAT512 TMP$2381$1;
 label$3159:;
 struct $9_FLOAT512* vr$1 = _ZmlR9_FLOAT512S0_( &TMP$2381$1, A$1, B$1 );
 _ZN9_FLOAT512aSERS_( C$1, vr$1 );
 label$3160:;
}

void _ZN12SYSTEM_BUS_T14K_FLOAT512_DIVEP9_FLOAT512S1_S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* A$1, struct $9_FLOAT512* B$1, struct $9_FLOAT512* C$1 )
{
 struct $9_FLOAT512 TMP$2382$1;
 label$3161:;
 struct $9_FLOAT512* vr$1 = _ZdvR9_FLOAT512S0_( &TMP$2382$1, A$1, B$1 );
 _ZN9_FLOAT512aSERS_( C$1, vr$1 );
 label$3162:;
}

int64 _ZN12SYSTEM_BUS_T14K_FLOAT512_CMPEP9_FLOAT512S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* A$1, struct $9_FLOAT512* B$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3163:;
 uint64 vr$1 = _ZN9_FLOAT512cvyEv( A$1 );
 uint64 vr$2 = _ZN9_FLOAT512cvyEv( B$1 );
 if( vr$1 <= vr$2 ) goto label$3166;
 {
  fb$result$1 = 1ll;
  goto label$3164;
 }
 goto label$3165;
 label$3166:;
 uint64 vr$3 = _ZN9_FLOAT512cvyEv( A$1 );
 uint64 vr$4 = _ZN9_FLOAT512cvyEv( B$1 );
 if( vr$3 >= vr$4 ) goto label$3167;
 {
  fb$result$1 = -1ll;
  goto label$3164;
 }
 goto label$3165;
 label$3167:;
 {
  fb$result$1 = 0ll;
  goto label$3164;
 }
 label$3165:;
 label$3164:;
 return fb$result$1;
}

void _ZN12SYSTEM_BUS_T8K_MEMSETEPhhh( struct $12SYSTEM_BUS_T* THIS$1, uint8* DE$1, uint8 SZ$1, uint8 V$1 )
{
 label$3168:;
 SZ$1 = (uint8)((int64)SZ$1 - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 {
  uint8 MEM_LOC$2;
  MEM_LOC$2 = *(uint8*)NIBBLES$;
  uint8 TMP$2383$2;
  TMP$2383$2 = SZ$1;
  goto label$3170;
  label$3173:;
  {
   *(uint8*)(DE$1 + (int64)MEM_LOC$2) = V$1;
  }
  label$3171:;
  MEM_LOC$2 = (uint8)((int64)MEM_LOC$2 + 1ll);
  label$3170:;
  if( (int64)MEM_LOC$2 <= (int64)TMP$2383$2 ) goto label$3173;
  label$3172:;
 }
 label$3169:;
}

void _ZN12SYSTEM_BUS_T8K_MEMSETEPaaa( struct $12SYSTEM_BUS_T* THIS$1, int8* DE$1, int8 SZ$1, int8 V$1 )
{
 label$3174:;
 SZ$1 = (int8)((int64)SZ$1 - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 {
  int8 MEM_LOC$2;
  MEM_LOC$2 = *(int8*)NIBBLES$;
  int8 TMP$2384$2;
  TMP$2384$2 = SZ$1;
  goto label$3176;
  label$3179:;
  {
   *(int8*)((uint8*)DE$1 + (int64)MEM_LOC$2) = V$1;
  }
  label$3177:;
  MEM_LOC$2 = (int8)((int64)MEM_LOC$2 + 1ll);
  label$3176:;
  if( (int64)MEM_LOC$2 <= (int64)TMP$2384$2 ) goto label$3179;
  label$3178:;
 }
 label$3175:;
}

void _ZN12SYSTEM_BUS_T8K_MEMSETEPttt( struct $12SYSTEM_BUS_T* THIS$1, uint16* DE$1, uint16 SZ$1, uint16 V$1 )
{
 label$3180:;
 SZ$1 = (uint16)((int64)SZ$1 - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 {
  uint16 MEM_LOC$2;
  MEM_LOC$2 = (uint16)*(uint8*)NIBBLES$;
  uint16 TMP$2385$2;
  TMP$2385$2 = SZ$1;
  goto label$3182;
  label$3185:;
  {
   *(uint16*)((uint8*)DE$1 + ((int64)MEM_LOC$2 << (1ll & 63ll))) = V$1;
  }
  label$3183:;
  MEM_LOC$2 = (uint16)((int64)MEM_LOC$2 + 1ll);
  label$3182:;
  if( (int64)MEM_LOC$2 <= (int64)TMP$2385$2 ) goto label$3185;
  label$3184:;
 }
 label$3181:;
}

void _ZN12SYSTEM_BUS_T8K_MEMSETEPsss( struct $12SYSTEM_BUS_T* THIS$1, int16* DE$1, int16 SZ$1, int16 V$1 )
{
 label$3186:;
 SZ$1 = (int16)((int64)SZ$1 - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 {
  int16 MEM_LOC$2;
  MEM_LOC$2 = (int16)*(uint8*)NIBBLES$;
  int16 TMP$2386$2;
  TMP$2386$2 = SZ$1;
  goto label$3188;
  label$3191:;
  {
   *(int16*)((uint8*)DE$1 + ((int64)MEM_LOC$2 << (1ll & 63ll))) = V$1;
  }
  label$3189:;
  MEM_LOC$2 = (int16)((int64)MEM_LOC$2 + 1ll);
  label$3188:;
  if( (int64)MEM_LOC$2 <= (int64)TMP$2386$2 ) goto label$3191;
  label$3190:;
 }
 label$3187:;
}

void _ZN12SYSTEM_BUS_T8K_MEMSETEPjjj( struct $12SYSTEM_BUS_T* THIS$1, uint32* DE$1, uint32 SZ$1, uint32 V$1 )
{
 label$3192:;
 SZ$1 = (uint32)((int64)SZ$1 - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 {
  uint32 MEM_LOC$2;
  MEM_LOC$2 = (uint32)*(uint8*)NIBBLES$;
  uint32 TMP$2387$2;
  TMP$2387$2 = SZ$1;
  goto label$3194;
  label$3197:;
  {
   *(uint32*)((uint8*)DE$1 + ((int64)MEM_LOC$2 << (2ll & 63ll))) = V$1;
  }
  label$3195:;
  MEM_LOC$2 = (uint32)((int64)MEM_LOC$2 + 1ll);
  label$3194:;
  if( (int64)MEM_LOC$2 <= (int64)TMP$2387$2 ) goto label$3197;
  label$3196:;
 }
 label$3193:;
}

void _ZN12SYSTEM_BUS_T8K_MEMSETEPiii( struct $12SYSTEM_BUS_T* THIS$1, int32* DE$1, int32 SZ$1, int32 V$1 )
{
 label$3198:;
 SZ$1 = (int32)((int64)SZ$1 - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 {
  int32 MEM_LOC$2;
  MEM_LOC$2 = (int32)*(uint8*)NIBBLES$;
  int32 TMP$2388$2;
  TMP$2388$2 = SZ$1;
  goto label$3200;
  label$3203:;
  {
   *(int32*)((uint8*)DE$1 + ((int64)MEM_LOC$2 << (2ll & 63ll))) = V$1;
  }
  label$3201:;
  MEM_LOC$2 = (int32)((int64)MEM_LOC$2 + 1ll);
  label$3200:;
  if( (int64)MEM_LOC$2 <= (int64)TMP$2388$2 ) goto label$3203;
  label$3202:;
 }
 label$3199:;
}

void _ZN12SYSTEM_BUS_T8K_MEMSETEPyyy( struct $12SYSTEM_BUS_T* THIS$1, uint64* DE$1, uint64 SZ$1, uint64 V$1 )
{
 label$3204:;
 SZ$1 = SZ$1 - (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 {
  uint64 MEM_LOC$2;
  MEM_LOC$2 = (uint64)*(uint8*)NIBBLES$;
  uint64 TMP$2389$2;
  TMP$2389$2 = SZ$1;
  goto label$3206;
  label$3209:;
  {
   *(uint64*)((uint8*)DE$1 + ((int64)MEM_LOC$2 << (3ll & 63ll))) = V$1;
  }
  label$3207:;
  MEM_LOC$2 = MEM_LOC$2 + 1ull;
  label$3206:;
  if( MEM_LOC$2 <= TMP$2389$2 ) goto label$3209;
  label$3208:;
 }
 label$3205:;
}

void _ZN12SYSTEM_BUS_T8K_MEMSETEPxxx( struct $12SYSTEM_BUS_T* THIS$1, int64* DE$1, int64 SZ$1, int64 V$1 )
{
 label$3210:;
 SZ$1 = SZ$1 - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 {
  int64 MEM_LOC$2;
  MEM_LOC$2 = (int64)*(uint8*)NIBBLES$;
  int64 TMP$2390$2;
  TMP$2390$2 = SZ$1;
  goto label$3212;
  label$3215:;
  {
   *(int64*)((uint8*)DE$1 + (MEM_LOC$2 << (3ll & 63ll))) = V$1;
  }
  label$3213:;
  MEM_LOC$2 = MEM_LOC$2 + 1ll;
  label$3212:;
  if( MEM_LOC$2 <= TMP$2390$2 ) goto label$3215;
  label$3214:;
 }
 label$3211:;
}

void _ZN12SYSTEM_BUS_T8K_MEMSETEPfff( struct $12SYSTEM_BUS_T* THIS$1, float* DE$1, float SZ$1, float V$1 )
{
 label$3216:;
 SZ$1 = SZ$1 - (float)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 {
  float MEM_LOC$2;
  MEM_LOC$2 = (float)*(uint8*)NIBBLES$;
  float TMP$2391$2;
  TMP$2391$2 = SZ$1;
  goto label$3218;
  label$3221:;
  {
   *(float*)((uint8*)DE$1 + (((int64)__builtin_nearbyintf( MEM_LOC$2 )) << (2ll & 63ll))) = V$1;
  }
  label$3219:;
  MEM_LOC$2 = MEM_LOC$2 + 0x1.p+0f;
  label$3218:;
  if( MEM_LOC$2 <= TMP$2391$2 ) goto label$3221;
  label$3220:;
 }
 label$3217:;
}

void _ZN12SYSTEM_BUS_T8K_MEMSETEPddd( struct $12SYSTEM_BUS_T* THIS$1, double* DE$1, double SZ$1, double V$1 )
{
 label$3222:;
 SZ$1 = SZ$1 - (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 {
  double MEM_LOC$2;
  MEM_LOC$2 = (double)*(uint8*)NIBBLES$;
  double TMP$2392$2;
  TMP$2392$2 = SZ$1;
  goto label$3224;
  label$3227:;
  {
   *(double*)((uint8*)DE$1 + (((int64)__builtin_nearbyint( MEM_LOC$2 )) << (3ll & 63ll))) = V$1;
  }
  label$3225:;
  MEM_LOC$2 = MEM_LOC$2 + 0x1.p+0;
  label$3224:;
  if( MEM_LOC$2 <= TMP$2392$2 ) goto label$3227;
  label$3226:;
 }
 label$3223:;
}

void _ZN12SYSTEM_BUS_T8K_MEMSETEP9_FLOAT128RS0_S2_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* DE$1, struct $9_FLOAT128* SZ$1, struct $9_FLOAT128* V$1 )
{
 struct $9_FLOAT128 TMP$2393$1;
 label$3228:;
 struct $9_FLOAT128* vr$2 = _ZmiR9_FLOAT128d( &TMP$2393$1, SZ$1, (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 _ZN9_FLOAT128aSERS_( SZ$1, vr$2 );
 {
  double MEM_LOC$2;
  MEM_LOC$2 = (double)*(uint8*)NIBBLES$;
  double TMP$2394$2;
  uint64 vr$4 = _ZN9_FLOAT128cvyEv( SZ$1 );
  TMP$2394$2 = (double)vr$4;
  goto label$3230;
  label$3233:;
  {
   _ZN9_FLOAT128aSERS_( (struct $9_FLOAT128*)((uint8*)DE$1 + (((int64)__builtin_nearbyint( MEM_LOC$2 )) << (4ll & 63ll))), V$1 );
  }
  label$3231:;
  MEM_LOC$2 = MEM_LOC$2 + 0x1.p+0;
  label$3230:;
  if( MEM_LOC$2 <= TMP$2394$2 ) goto label$3233;
  label$3232:;
 }
 label$3229:;
}

void _ZN12SYSTEM_BUS_T8K_MEMSETEP9_FLOAT256RS0_S2_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* DE$1, struct $9_FLOAT256* SZ$1, struct $9_FLOAT256* V$1 )
{
 struct $9_FLOAT256 TMP$2395$1;
 label$3234:;
 struct $9_FLOAT256* vr$2 = _ZmiR9_FLOAT256d( &TMP$2395$1, SZ$1, (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 _ZN9_FLOAT256aSERS_( SZ$1, vr$2 );
 {
  double MEM_LOC$2;
  MEM_LOC$2 = (double)*(uint8*)NIBBLES$;
  double TMP$2396$2;
  uint64 vr$4 = _ZN9_FLOAT256cvyEv( SZ$1 );
  TMP$2396$2 = (double)vr$4;
  goto label$3236;
  label$3239:;
  {
   _ZN9_FLOAT256aSERS_( (struct $9_FLOAT256*)((uint8*)DE$1 + (((int64)__builtin_nearbyint( MEM_LOC$2 )) << (3ll & 63ll))), V$1 );
  }
  label$3237:;
  MEM_LOC$2 = MEM_LOC$2 + 0x1.p+0;
  label$3236:;
  if( MEM_LOC$2 <= TMP$2396$2 ) goto label$3239;
  label$3238:;
 }
 label$3235:;
}

void _ZN12SYSTEM_BUS_T8K_MEMSETEP9_FLOAT512RS0_S2_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* DE$1, struct $9_FLOAT512* SZ$1, struct $9_FLOAT512* V$1 )
{
 struct $9_FLOAT512 TMP$2397$1;
 label$3240:;
 struct $9_FLOAT512* vr$2 = _ZmiR9_FLOAT512d( &TMP$2397$1, SZ$1, (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 _ZN9_FLOAT512aSERS_( SZ$1, vr$2 );
 {
  double MEM_LOC$2;
  MEM_LOC$2 = (double)*(uint8*)NIBBLES$;
  double TMP$2398$2;
  uint64 vr$4 = _ZN9_FLOAT512cvyEv( SZ$1 );
  TMP$2398$2 = (double)vr$4;
  goto label$3242;
  label$3245:;
  {
   _ZN9_FLOAT512aSERS_( (struct $9_FLOAT512*)((uint8*)DE$1 + (((int64)__builtin_nearbyint( MEM_LOC$2 )) << (3ll & 63ll))), V$1 );
  }
  label$3243:;
  MEM_LOC$2 = MEM_LOC$2 + 0x1.p+0;
  label$3242:;
  if( MEM_LOC$2 <= TMP$2398$2 ) goto label$3245;
  label$3244:;
 }
 label$3241:;
}

void _ZN12SYSTEM_BUS_T8K_MEMSETEhhh( struct $12SYSTEM_BUS_T* THIS$1, uint8 DE$1, uint8 SZ$1, uint8 V$1 )
{
 label$3246:;
 SZ$1 = (uint8)((int64)SZ$1 - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 {
  uint8 MEM_LOC$2;
  MEM_LOC$2 = *(uint8*)NIBBLES$;
  uint8 TMP$2399$2;
  TMP$2399$2 = SZ$1;
  goto label$3248;
  label$3251:;
  {
   *(uint8*)((int64)(double*)MEM64$ + (((int64)DE$1 + (int64)MEM_LOC$2) << (3ll & 63ll))) = V$1;
  }
  label$3249:;
  MEM_LOC$2 = (uint8)((int64)MEM_LOC$2 + 1ll);
  label$3248:;
  if( (int64)MEM_LOC$2 <= (int64)TMP$2399$2 ) goto label$3251;
  label$3250:;
 }
 label$3247:;
}

void _ZN12SYSTEM_BUS_T8K_MEMSETEaaa( struct $12SYSTEM_BUS_T* THIS$1, int8 DE$1, int8 SZ$1, int8 V$1 )
{
 label$3252:;
 SZ$1 = (int8)((int64)SZ$1 - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 {
  int8 MEM_LOC$2;
  MEM_LOC$2 = *(int8*)NIBBLES$;
  int8 TMP$2400$2;
  TMP$2400$2 = SZ$1;
  goto label$3254;
  label$3257:;
  {
   *(int8*)((int64)(double*)MEM64$ + (((int64)DE$1 + (int64)MEM_LOC$2) << (3ll & 63ll))) = V$1;
  }
  label$3255:;
  MEM_LOC$2 = (int8)((int64)MEM_LOC$2 + 1ll);
  label$3254:;
  if( (int64)MEM_LOC$2 <= (int64)TMP$2400$2 ) goto label$3257;
  label$3256:;
 }
 label$3253:;
}

void _ZN12SYSTEM_BUS_T8K_MEMSETEttt( struct $12SYSTEM_BUS_T* THIS$1, uint16 DE$1, uint16 SZ$1, uint16 V$1 )
{
 label$3258:;
 SZ$1 = (uint16)((int64)SZ$1 - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 {
  uint16 MEM_LOC$2;
  MEM_LOC$2 = (uint16)*(uint8*)NIBBLES$;
  uint16 TMP$2401$2;
  TMP$2401$2 = SZ$1;
  goto label$3260;
  label$3263:;
  {
   *(uint16*)((int64)(double*)MEM64$ + (((int64)DE$1 + (int64)MEM_LOC$2) << (3ll & 63ll))) = V$1;
  }
  label$3261:;
  MEM_LOC$2 = (uint16)((int64)MEM_LOC$2 + 1ll);
  label$3260:;
  if( (int64)MEM_LOC$2 <= (int64)TMP$2401$2 ) goto label$3263;
  label$3262:;
 }
 label$3259:;
}

void _ZN12SYSTEM_BUS_T8K_MEMSETEsss( struct $12SYSTEM_BUS_T* THIS$1, int16 DE$1, int16 SZ$1, int16 V$1 )
{
 label$3264:;
 SZ$1 = (int16)((int64)SZ$1 - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 {
  int16 MEM_LOC$2;
  MEM_LOC$2 = (int16)*(uint8*)NIBBLES$;
  int16 TMP$2402$2;
  TMP$2402$2 = SZ$1;
  goto label$3266;
  label$3269:;
  {
   *(int16*)((int64)(double*)MEM64$ + (((int64)DE$1 + (int64)MEM_LOC$2) << (3ll & 63ll))) = V$1;
  }
  label$3267:;
  MEM_LOC$2 = (int16)((int64)MEM_LOC$2 + 1ll);
  label$3266:;
  if( (int64)MEM_LOC$2 <= (int64)TMP$2402$2 ) goto label$3269;
  label$3268:;
 }
 label$3265:;
}

void _ZN12SYSTEM_BUS_T8K_MEMSETEjjj( struct $12SYSTEM_BUS_T* THIS$1, uint32 DE$1, uint32 SZ$1, uint32 V$1 )
{
 label$3270:;
 SZ$1 = (uint32)((int64)SZ$1 - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 {
  uint32 MEM_LOC$2;
  MEM_LOC$2 = (uint32)*(uint8*)NIBBLES$;
  uint32 TMP$2403$2;
  TMP$2403$2 = SZ$1;
  goto label$3272;
  label$3275:;
  {
   *(uint32*)((int64)(double*)MEM64$ + (((int64)DE$1 + (int64)MEM_LOC$2) << (3ll & 63ll))) = V$1;
  }
  label$3273:;
  MEM_LOC$2 = (uint32)((int64)MEM_LOC$2 + 1ll);
  label$3272:;
  if( (int64)MEM_LOC$2 <= (int64)TMP$2403$2 ) goto label$3275;
  label$3274:;
 }
 label$3271:;
}

void _ZN12SYSTEM_BUS_T8K_MEMSETEiii( struct $12SYSTEM_BUS_T* THIS$1, int32 DE$1, int32 SZ$1, int32 V$1 )
{
 label$3276:;
 SZ$1 = (int32)((int64)SZ$1 - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 {
  int32 MEM_LOC$2;
  MEM_LOC$2 = (int32)*(uint8*)NIBBLES$;
  int32 TMP$2404$2;
  TMP$2404$2 = SZ$1;
  goto label$3278;
  label$3281:;
  {
   *(int32*)((int64)(double*)MEM64$ + (((int64)DE$1 + (int64)MEM_LOC$2) << (3ll & 63ll))) = V$1;
  }
  label$3279:;
  MEM_LOC$2 = (int32)((int64)MEM_LOC$2 + 1ll);
  label$3278:;
  if( (int64)MEM_LOC$2 <= (int64)TMP$2404$2 ) goto label$3281;
  label$3280:;
 }
 label$3277:;
}

void _ZN12SYSTEM_BUS_T8K_MEMSETEyyy( struct $12SYSTEM_BUS_T* THIS$1, uint64 DE$1, uint64 SZ$1, uint64 V$1 )
{
 label$3282:;
 SZ$1 = SZ$1 - (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 {
  uint64 MEM_LOC$2;
  MEM_LOC$2 = (uint64)*(uint8*)NIBBLES$;
  uint64 TMP$2405$2;
  TMP$2405$2 = SZ$1;
  goto label$3284;
  label$3287:;
  {
   *(uint64*)((int64)(double*)MEM64$ + ((int64)(DE$1 + MEM_LOC$2) << (3ll & 63ll))) = V$1;
  }
  label$3285:;
  MEM_LOC$2 = MEM_LOC$2 + 1ull;
  label$3284:;
  if( MEM_LOC$2 <= TMP$2405$2 ) goto label$3287;
  label$3286:;
 }
 label$3283:;
}

void _ZN12SYSTEM_BUS_T8K_MEMSETExxx( struct $12SYSTEM_BUS_T* THIS$1, int64 DE$1, int64 SZ$1, int64 V$1 )
{
 label$3288:;
 SZ$1 = SZ$1 - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 {
  int64 MEM_LOC$2;
  MEM_LOC$2 = (int64)*(uint8*)NIBBLES$;
  int64 TMP$2406$2;
  TMP$2406$2 = SZ$1;
  goto label$3290;
  label$3293:;
  {
   *(int64*)((int64)(double*)MEM64$ + ((DE$1 + MEM_LOC$2) << (3ll & 63ll))) = V$1;
  }
  label$3291:;
  MEM_LOC$2 = MEM_LOC$2 + 1ll;
  label$3290:;
  if( MEM_LOC$2 <= TMP$2406$2 ) goto label$3293;
  label$3292:;
 }
 label$3289:;
}

void _ZN12SYSTEM_BUS_T8K_MEMSETEfff( struct $12SYSTEM_BUS_T* THIS$1, float DE$1, float SZ$1, float V$1 )
{
 label$3294:;
 SZ$1 = (float)((double)SZ$1 - (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 {
  float MEM_LOC$2;
  MEM_LOC$2 = (float)*(uint8*)NIBBLES$;
  float TMP$2407$2;
  TMP$2407$2 = SZ$1;
  goto label$3296;
  label$3299:;
  {
   *(float*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyintf( DE$1 + MEM_LOC$2 )) << (3ll & 63ll))) = V$1;
  }
  label$3297:;
  MEM_LOC$2 = MEM_LOC$2 + 0x1.p+0f;
  label$3296:;
  if( MEM_LOC$2 <= TMP$2407$2 ) goto label$3299;
  label$3298:;
 }
 label$3295:;
}

void _ZN12SYSTEM_BUS_T8K_MEMSETEddd( struct $12SYSTEM_BUS_T* THIS$1, double DE$1, double SZ$1, double V$1 )
{
 label$3300:;
 SZ$1 = SZ$1 - (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 {
  double MEM_LOC$2;
  MEM_LOC$2 = (double)*(uint8*)NIBBLES$;
  double TMP$2408$2;
  TMP$2408$2 = SZ$1;
  goto label$3302;
  label$3305:;
  {
   *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( DE$1 + MEM_LOC$2 )) << (3ll & 63ll))) = V$1;
  }
  label$3303:;
  MEM_LOC$2 = MEM_LOC$2 + 0x1.p+0;
  label$3302:;
  if( MEM_LOC$2 <= TMP$2408$2 ) goto label$3305;
  label$3304:;
 }
 label$3301:;
}

void _ZN12SYSTEM_BUS_T8K_MEMSETER9_FLOAT128S1_S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* DE$1, struct $9_FLOAT128* SZ$1, struct $9_FLOAT128* V$1 )
{
 struct $9_FLOAT128 TMP$2409$1;
 label$3306:;
 struct $9_FLOAT128* vr$2 = _ZmiR9_FLOAT128d( &TMP$2409$1, SZ$1, (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 _ZN9_FLOAT128aSERS_( SZ$1, vr$2 );
 {
  double MEM_LOC$2;
  MEM_LOC$2 = (double)*(uint8*)NIBBLES$;
  double TMP$2410$2;
  uint64 vr$4 = _ZN9_FLOAT128cvyEv( SZ$1 );
  TMP$2410$2 = (double)vr$4;
  goto label$3308;
  label$3311:;
  {
   struct $9_FLOAT128 TMP$2411$3;
   struct $9_FLOAT128* vr$7 = _ZplR9_FLOAT128d( &TMP$2411$3, DE$1, MEM_LOC$2 );
   uint64 vr$8 = _ZN9_FLOAT128cvyEv( vr$7 );
   _ZN9_FLOAT128aSERS_( (struct $9_FLOAT128*)((int64)(double*)MEM64$ + (vr$8 << (3ull & 63ll))), V$1 );
  }
  label$3309:;
  MEM_LOC$2 = MEM_LOC$2 + 0x1.p+0;
  label$3308:;
  if( MEM_LOC$2 <= TMP$2410$2 ) goto label$3311;
  label$3310:;
 }
 label$3307:;
}

void _ZN12SYSTEM_BUS_T8K_MEMSETER9_FLOAT256S1_S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* DE$1, struct $9_FLOAT256* SZ$1, struct $9_FLOAT256* V$1 )
{
 struct $9_FLOAT256 TMP$2412$1;
 label$3312:;
 struct $9_FLOAT256* vr$2 = _ZmiR9_FLOAT256d( &TMP$2412$1, SZ$1, (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 _ZN9_FLOAT256aSERS_( SZ$1, vr$2 );
 {
  double MEM_LOC$2;
  MEM_LOC$2 = (double)*(uint8*)NIBBLES$;
  double TMP$2413$2;
  uint64 vr$4 = _ZN9_FLOAT256cvyEv( SZ$1 );
  TMP$2413$2 = (double)vr$4;
  goto label$3314;
  label$3317:;
  {
   struct $9_FLOAT256 TMP$2414$3;
   struct $9_FLOAT256* vr$7 = _ZplR9_FLOAT256d( &TMP$2414$3, DE$1, MEM_LOC$2 );
   uint64 vr$8 = _ZN9_FLOAT256cvyEv( vr$7 );
   _ZN9_FLOAT256aSERS_( (struct $9_FLOAT256*)((int64)(double*)MEM64$ + (vr$8 << (3ull & 63ll))), V$1 );
  }
  label$3315:;
  MEM_LOC$2 = MEM_LOC$2 + 0x1.p+0;
  label$3314:;
  if( MEM_LOC$2 <= TMP$2413$2 ) goto label$3317;
  label$3316:;
 }
 label$3313:;
}

void _ZN12SYSTEM_BUS_T8K_MEMSETER9_FLOAT512S1_S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* DE$1, struct $9_FLOAT512* SZ$1, struct $9_FLOAT512* V$1 )
{
 struct $9_FLOAT512 TMP$2415$1;
 label$3318:;
 struct $9_FLOAT512* vr$2 = _ZmiR9_FLOAT512d( &TMP$2415$1, SZ$1, (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 _ZN9_FLOAT512aSERS_( SZ$1, vr$2 );
 {
  double MEM_LOC$2;
  MEM_LOC$2 = (double)*(uint8*)NIBBLES$;
  double TMP$2416$2;
  uint64 vr$4 = _ZN9_FLOAT512cvyEv( SZ$1 );
  TMP$2416$2 = (double)vr$4;
  goto label$3320;
  label$3323:;
  {
   struct $9_FLOAT512 TMP$2417$3;
   struct $9_FLOAT512* vr$7 = _ZplR9_FLOAT512d( &TMP$2417$3, DE$1, MEM_LOC$2 );
   uint64 vr$8 = _ZN9_FLOAT512cvyEv( vr$7 );
   _ZN9_FLOAT512aSERS_( (struct $9_FLOAT512*)((int64)(double*)MEM64$ + (vr$8 << (3ull & 63ll))), V$1 );
  }
  label$3321:;
  MEM_LOC$2 = MEM_LOC$2 + 0x1.p+0;
  label$3320:;
  if( MEM_LOC$2 <= TMP$2416$2 ) goto label$3323;
  label$3322:;
 }
 label$3319:;
}

void _ZN12SYSTEM_BUS_T8K_MEMCPYEPhS0_h( struct $12SYSTEM_BUS_T* THIS$1, uint8* SU$1, uint8* DE$1, uint8 SZ$1 )
{
 label$3324:;
 SZ$1 = (uint8)((int64)SZ$1 - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 {
  uint8 MEM_LOC$2;
  MEM_LOC$2 = *(uint8*)NIBBLES$;
  uint8 TMP$2418$2;
  TMP$2418$2 = SZ$1;
  goto label$3326;
  label$3329:;
  {
   *(uint8*)(DE$1 + (int64)MEM_LOC$2) = *(uint8*)(SU$1 + (int64)MEM_LOC$2);
  }
  label$3327:;
  MEM_LOC$2 = (uint8)((int64)MEM_LOC$2 + 1ll);
  label$3326:;
  if( (int64)MEM_LOC$2 <= (int64)TMP$2418$2 ) goto label$3329;
  label$3328:;
 }
 label$3325:;
}

void _ZN12SYSTEM_BUS_T8K_MEMCPYEPaS0_a( struct $12SYSTEM_BUS_T* THIS$1, int8* SU$1, int8* DE$1, int8 SZ$1 )
{
 label$3330:;
 SZ$1 = (int64)SZ$1 - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 {
  int8 MEM_LOC$2;
  MEM_LOC$2 = *(int8*)NIBBLES$;
  int8 TMP$2419$2;
  TMP$2419$2 = SZ$1;
  goto label$3332;
  label$3335:;
  {
   *(int8*)((uint8*)DE$1 + (int64)MEM_LOC$2) = *(int8*)((uint8*)SU$1 + (int64)MEM_LOC$2);
  }
  label$3333:;
  MEM_LOC$2 = (int8)((int64)MEM_LOC$2 + 1ll);
  label$3332:;
  if( (int64)MEM_LOC$2 <= (int64)TMP$2419$2 ) goto label$3335;
  label$3334:;
 }
 label$3331:;
}

void _ZN12SYSTEM_BUS_T8K_MEMCPYEPtS0_t( struct $12SYSTEM_BUS_T* THIS$1, uint16* SU$1, uint16* DE$1, uint16 SZ$1 )
{
 label$3336:;
 SZ$1 = (uint64)((int64)SZ$1 - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 {
  uint16 MEM_LOC$2;
  MEM_LOC$2 = (uint16)*(uint8*)NIBBLES$;
  uint16 TMP$2420$2;
  TMP$2420$2 = SZ$1;
  goto label$3338;
  label$3341:;
  {
   *(uint16*)((uint8*)DE$1 + ((int64)MEM_LOC$2 << (1ll & 63ll))) = *(uint16*)((uint8*)SU$1 + ((int64)MEM_LOC$2 << (1ll & 63ll)));
  }
  label$3339:;
  MEM_LOC$2 = (uint16)((int64)MEM_LOC$2 + 1ll);
  label$3338:;
  if( (int64)MEM_LOC$2 <= (int64)TMP$2420$2 ) goto label$3341;
  label$3340:;
 }
 label$3337:;
}

void _ZN12SYSTEM_BUS_T8K_MEMCPYEPsS0_s( struct $12SYSTEM_BUS_T* THIS$1, int16* SU$1, int16* DE$1, int16 SZ$1 )
{
 label$3342:;
 SZ$1 = (int16)((int64)SZ$1 - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 {
  int16 MEM_LOC$2;
  MEM_LOC$2 = (int16)*(uint8*)NIBBLES$;
  int16 TMP$2421$2;
  TMP$2421$2 = SZ$1;
  goto label$3344;
  label$3347:;
  {
   *(int16*)((uint8*)DE$1 + ((int64)MEM_LOC$2 << (1ll & 63ll))) = *(int16*)((uint8*)SU$1 + ((int64)MEM_LOC$2 << (1ll & 63ll)));
  }
  label$3345:;
  MEM_LOC$2 = (int16)((int64)MEM_LOC$2 + 1ll);
  label$3344:;
  if( (int64)MEM_LOC$2 <= (int64)TMP$2421$2 ) goto label$3347;
  label$3346:;
 }
 label$3343:;
}

void _ZN12SYSTEM_BUS_T8K_MEMCPYEPjS0_j( struct $12SYSTEM_BUS_T* THIS$1, uint32* SU$1, uint32* DE$1, uint32 SZ$1 )
{
 label$3348:;
 SZ$1 = (uint32)((int64)SZ$1 - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 {
  uint32 MEM_LOC$2;
  MEM_LOC$2 = (uint32)*(uint8*)NIBBLES$;
  uint32 TMP$2422$2;
  TMP$2422$2 = SZ$1;
  goto label$3350;
  label$3353:;
  {
   *(uint32*)((uint8*)DE$1 + ((int64)MEM_LOC$2 << (2ll & 63ll))) = *(uint32*)((uint8*)SU$1 + ((int64)MEM_LOC$2 << (2ll & 63ll)));
  }
  label$3351:;
  MEM_LOC$2 = (uint32)((int64)MEM_LOC$2 + 1ll);
  label$3350:;
  if( (int64)MEM_LOC$2 <= (int64)TMP$2422$2 ) goto label$3353;
  label$3352:;
 }
 label$3349:;
}

void _ZN12SYSTEM_BUS_T8K_MEMCPYEPiS0_i( struct $12SYSTEM_BUS_T* THIS$1, int32* SU$1, int32* DE$1, int32 SZ$1 )
{
 label$3354:;
 SZ$1 = (int32)((int64)SZ$1 - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 {
  int32 MEM_LOC$2;
  MEM_LOC$2 = (int32)*(uint8*)NIBBLES$;
  int32 TMP$2423$2;
  TMP$2423$2 = SZ$1;
  goto label$3356;
  label$3359:;
  {
   *(int32*)((uint8*)DE$1 + ((int64)MEM_LOC$2 << (2ll & 63ll))) = *(int32*)((uint8*)SU$1 + ((int64)MEM_LOC$2 << (2ll & 63ll)));
  }
  label$3357:;
  MEM_LOC$2 = (int32)((int64)MEM_LOC$2 + 1ll);
  label$3356:;
  if( (int64)MEM_LOC$2 <= (int64)TMP$2423$2 ) goto label$3359;
  label$3358:;
 }
 label$3355:;
}

void _ZN12SYSTEM_BUS_T8K_MEMCPYEPyS0_y( struct $12SYSTEM_BUS_T* THIS$1, uint64* SU$1, uint64* DE$1, uint64 SZ$1 )
{
 label$3360:;
 SZ$1 = SZ$1 - (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 {
  uint64 MEM_LOC$2;
  MEM_LOC$2 = (uint64)*(uint8*)NIBBLES$;
  uint64 TMP$2424$2;
  TMP$2424$2 = SZ$1;
  goto label$3362;
  label$3365:;
  {
   *(uint64*)((uint8*)DE$1 + ((int64)MEM_LOC$2 << (3ll & 63ll))) = *(uint64*)((uint8*)SU$1 + ((int64)MEM_LOC$2 << (3ll & 63ll)));
  }
  label$3363:;
  MEM_LOC$2 = MEM_LOC$2 + 1ull;
  label$3362:;
  if( MEM_LOC$2 <= TMP$2424$2 ) goto label$3365;
  label$3364:;
 }
 label$3361:;
}

void _ZN12SYSTEM_BUS_T8K_MEMCPYEPxS0_x( struct $12SYSTEM_BUS_T* THIS$1, int64* SU$1, int64* DE$1, int64 SZ$1 )
{
 label$3366:;
 SZ$1 = SZ$1 - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 {
  int64 MEM_LOC$2;
  MEM_LOC$2 = (int64)*(uint8*)NIBBLES$;
  int64 TMP$2425$2;
  TMP$2425$2 = SZ$1;
  goto label$3368;
  label$3371:;
  {
   *(int64*)((uint8*)DE$1 + (MEM_LOC$2 << (3ll & 63ll))) = *(int64*)((uint8*)SU$1 + (MEM_LOC$2 << (3ll & 63ll)));
  }
  label$3369:;
  MEM_LOC$2 = MEM_LOC$2 + 1ll;
  label$3368:;
  if( MEM_LOC$2 <= TMP$2425$2 ) goto label$3371;
  label$3370:;
 }
 label$3367:;
}

void _ZN12SYSTEM_BUS_T8K_MEMCPYEPfS0_f( struct $12SYSTEM_BUS_T* THIS$1, float* SU$1, float* DE$1, float SZ$1 )
{
 label$3372:;
 SZ$1 = SZ$1 - (float)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 {
  float MEM_LOC$2;
  MEM_LOC$2 = (float)*(uint8*)NIBBLES$;
  float TMP$2426$2;
  TMP$2426$2 = SZ$1;
  goto label$3374;
  label$3377:;
  {
   *(float*)((uint8*)DE$1 + (((int64)__builtin_nearbyintf( MEM_LOC$2 )) << (2ll & 63ll))) = *(float*)((uint8*)SU$1 + (((int64)__builtin_nearbyintf( MEM_LOC$2 )) << (2ll & 63ll)));
  }
  label$3375:;
  MEM_LOC$2 = MEM_LOC$2 + 0x1.p+0f;
  label$3374:;
  if( MEM_LOC$2 <= TMP$2426$2 ) goto label$3377;
  label$3376:;
 }
 label$3373:;
}

void _ZN12SYSTEM_BUS_T8K_MEMCPYEPdS0_d( struct $12SYSTEM_BUS_T* THIS$1, double* SU$1, double* DE$1, double SZ$1 )
{
 label$3378:;
 SZ$1 = SZ$1 - (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 {
  double MEM_LOC$2;
  MEM_LOC$2 = (double)*(uint8*)NIBBLES$;
  double TMP$2427$2;
  TMP$2427$2 = SZ$1;
  goto label$3380;
  label$3383:;
  {
   *(double*)((uint8*)DE$1 + (((int64)__builtin_nearbyint( MEM_LOC$2 )) << (3ll & 63ll))) = *(double*)((uint8*)SU$1 + (((int64)__builtin_nearbyint( MEM_LOC$2 )) << (3ll & 63ll)));
  }
  label$3381:;
  MEM_LOC$2 = MEM_LOC$2 + 0x1.p+0;
  label$3380:;
  if( MEM_LOC$2 <= TMP$2427$2 ) goto label$3383;
  label$3382:;
 }
 label$3379:;
}

void _ZN12SYSTEM_BUS_T8K_MEMCPYEP9_FLOAT128S1_RS0_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* SU$1, struct $9_FLOAT128* DE$1, struct $9_FLOAT128* SZ$1 )
{
 struct $9_FLOAT128 TMP$2428$1;
 label$3384:;
 struct $9_FLOAT128* vr$2 = _ZmiR9_FLOAT128d( &TMP$2428$1, SZ$1, (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 _ZN9_FLOAT128aSERS_( SZ$1, vr$2 );
 {
  double MEM_LOC$2;
  MEM_LOC$2 = (double)*(uint8*)NIBBLES$;
  double TMP$2429$2;
  uint64 vr$4 = _ZN9_FLOAT128cvyEv( SZ$1 );
  TMP$2429$2 = (double)vr$4;
  goto label$3386;
  label$3389:;
  {
   _ZN9_FLOAT128aSERS_( (struct $9_FLOAT128*)((uint8*)DE$1 + (((int64)__builtin_nearbyint( MEM_LOC$2 )) << (4ll & 63ll))), (struct $9_FLOAT128*)((uint8*)SU$1 + (((int64)__builtin_nearbyint( MEM_LOC$2 )) << (4ll & 63ll))) );
  }
  label$3387:;
  MEM_LOC$2 = MEM_LOC$2 + 0x1.p+0;
  label$3386:;
  if( MEM_LOC$2 <= TMP$2429$2 ) goto label$3389;
  label$3388:;
 }
 label$3385:;
}

void _ZN12SYSTEM_BUS_T8K_MEMCPYEP9_FLOAT256S1_RS0_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* SU$1, struct $9_FLOAT256* DE$1, struct $9_FLOAT256* SZ$1 )
{
 struct $9_FLOAT256 TMP$2430$1;
 label$3390:;
 struct $9_FLOAT256* vr$2 = _ZmiR9_FLOAT256d( &TMP$2430$1, SZ$1, (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 _ZN9_FLOAT256aSERS_( SZ$1, vr$2 );
 {
  double MEM_LOC$2;
  MEM_LOC$2 = (double)*(uint8*)NIBBLES$;
  double TMP$2431$2;
  uint64 vr$4 = _ZN9_FLOAT256cvyEv( SZ$1 );
  TMP$2431$2 = (double)vr$4;
  goto label$3392;
  label$3395:;
  {
   _ZN9_FLOAT256aSERS_( (struct $9_FLOAT256*)((uint8*)DE$1 + (((int64)__builtin_nearbyint( MEM_LOC$2 )) << (3ll & 63ll))), (struct $9_FLOAT256*)((uint8*)SU$1 + (((int64)__builtin_nearbyint( MEM_LOC$2 )) << (3ll & 63ll))) );
  }
  label$3393:;
  MEM_LOC$2 = MEM_LOC$2 + 0x1.p+0;
  label$3392:;
  if( MEM_LOC$2 <= TMP$2431$2 ) goto label$3395;
  label$3394:;
 }
 label$3391:;
}

void _ZN12SYSTEM_BUS_T8K_MEMCPYEP9_FLOAT512S1_RS0_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* SU$1, struct $9_FLOAT512* DE$1, struct $9_FLOAT512* SZ$1 )
{
 struct $9_FLOAT512 TMP$2432$1;
 label$3396:;
 struct $9_FLOAT512* vr$2 = _ZmiR9_FLOAT512d( &TMP$2432$1, SZ$1, (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 _ZN9_FLOAT512aSERS_( SZ$1, vr$2 );
 {
  double MEM_LOC$2;
  MEM_LOC$2 = (double)*(uint8*)NIBBLES$;
  double TMP$2433$2;
  uint64 vr$4 = _ZN9_FLOAT512cvyEv( SZ$1 );
  TMP$2433$2 = (double)vr$4;
  goto label$3398;
  label$3401:;
  {
   _ZN9_FLOAT512aSERS_( (struct $9_FLOAT512*)((uint8*)DE$1 + (((int64)__builtin_nearbyint( MEM_LOC$2 )) << (3ll & 63ll))), (struct $9_FLOAT512*)((uint8*)SU$1 + (((int64)__builtin_nearbyint( MEM_LOC$2 )) << (3ll & 63ll))) );
  }
  label$3399:;
  MEM_LOC$2 = MEM_LOC$2 + 0x1.p+0;
  label$3398:;
  if( MEM_LOC$2 <= TMP$2433$2 ) goto label$3401;
  label$3400:;
 }
 label$3397:;
}

void _ZN12SYSTEM_BUS_T8K_MEMCPYEhhh( struct $12SYSTEM_BUS_T* THIS$1, uint8 SU$1, uint8 DE$1, uint8 SZ$1 )
{
 label$3402:;
 SZ$1 = (uint8)((int64)SZ$1 - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 {
  uint8 MEM_LOC$2;
  MEM_LOC$2 = *(uint8*)NIBBLES$;
  uint8 TMP$2434$2;
  TMP$2434$2 = SZ$1;
  goto label$3404;
  label$3407:;
  {
   *(uint8*)((int64)(double*)MEM64$ + (((int64)DE$1 + (int64)MEM_LOC$2) << (3ll & 63ll))) = *(uint8*)((int64)(double*)MEM64$ + (((int64)SU$1 + (int64)MEM_LOC$2) << (3ll & 63ll)));
  }
  label$3405:;
  MEM_LOC$2 = (uint8)((int64)MEM_LOC$2 + 1ll);
  label$3404:;
  if( (int64)MEM_LOC$2 <= (int64)TMP$2434$2 ) goto label$3407;
  label$3406:;
 }
 label$3403:;
}

void _ZN12SYSTEM_BUS_T8K_MEMCPYEaaa( struct $12SYSTEM_BUS_T* THIS$1, int8 SU$1, int8 DE$1, int8 SZ$1 )
{
 label$3408:;
 SZ$1 = (int8)((int64)SZ$1 - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 {
  int16 MEM_LOC$2;
  MEM_LOC$2 = (int16)*(uint8*)NIBBLES$;
  int16 TMP$2435$2;
  TMP$2435$2 = (int16)SZ$1;
  goto label$3410;
  label$3413:;
  {
   *(int8*)((int64)(double*)MEM64$ + (((int64)DE$1 + (int64)MEM_LOC$2) << (3ll & 63ll))) = *(int8*)((int64)(double*)MEM64$ + (((int64)SU$1 + (int64)MEM_LOC$2) << (3ll & 63ll)));
  }
  label$3411:;
  MEM_LOC$2 = (int16)((int64)MEM_LOC$2 + 1ll);
  label$3410:;
  if( (int64)MEM_LOC$2 <= (int64)TMP$2435$2 ) goto label$3413;
  label$3412:;
 }
 label$3409:;
}

void _ZN12SYSTEM_BUS_T8K_MEMCPYEttt( struct $12SYSTEM_BUS_T* THIS$1, uint16 SU$1, uint16 DE$1, uint16 SZ$1 )
{
 label$3414:;
 SZ$1 = (uint16)((int64)SZ$1 - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 {
  uint16 MEM_LOC$2;
  MEM_LOC$2 = (uint16)*(uint8*)NIBBLES$;
  uint16 TMP$2436$2;
  TMP$2436$2 = SZ$1;
  goto label$3416;
  label$3419:;
  {
   *(uint16*)((int64)(double*)MEM64$ + (((int64)DE$1 + (int64)MEM_LOC$2) << (3ll & 63ll))) = *(uint16*)((int64)(double*)MEM64$ + (((int64)SU$1 + (int64)MEM_LOC$2) << (3ll & 63ll)));
  }
  label$3417:;
  MEM_LOC$2 = (uint16)((int64)MEM_LOC$2 + 1ll);
  label$3416:;
  if( (int64)MEM_LOC$2 <= (int64)TMP$2436$2 ) goto label$3419;
  label$3418:;
 }
 label$3415:;
}

void _ZN12SYSTEM_BUS_T8K_MEMCPYEsss( struct $12SYSTEM_BUS_T* THIS$1, int16 SU$1, int16 DE$1, int16 SZ$1 )
{
 label$3420:;
 SZ$1 = (int16)((int64)SZ$1 - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 {
  int16 MEM_LOC$2;
  MEM_LOC$2 = (int16)*(uint8*)NIBBLES$;
  int16 TMP$2437$2;
  TMP$2437$2 = SZ$1;
  goto label$3422;
  label$3425:;
  {
   *(int16*)((int64)(double*)MEM64$ + (((int64)DE$1 + (int64)MEM_LOC$2) << (3ll & 63ll))) = *(int16*)((int64)(double*)MEM64$ + (((int64)SU$1 + (int64)MEM_LOC$2) << (3ll & 63ll)));
  }
  label$3423:;
  MEM_LOC$2 = (int16)((int64)MEM_LOC$2 + 1ll);
  label$3422:;
  if( (int64)MEM_LOC$2 <= (int64)TMP$2437$2 ) goto label$3425;
  label$3424:;
 }
 label$3421:;
}

void _ZN12SYSTEM_BUS_T8K_MEMCPYEjjj( struct $12SYSTEM_BUS_T* THIS$1, uint32 SU$1, uint32 DE$1, uint32 SZ$1 )
{
 label$3426:;
 SZ$1 = (uint32)((int64)SZ$1 - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 {
  uint32 MEM_LOC$2;
  MEM_LOC$2 = (uint32)*(uint8*)NIBBLES$;
  uint32 TMP$2438$2;
  TMP$2438$2 = SZ$1;
  goto label$3428;
  label$3431:;
  {
   *(uint32*)((int64)(double*)MEM64$ + (((int64)DE$1 + (int64)MEM_LOC$2) << (3ll & 63ll))) = *(uint32*)((int64)(double*)MEM64$ + (((int64)SU$1 + (int64)MEM_LOC$2) << (3ll & 63ll)));
  }
  label$3429:;
  MEM_LOC$2 = (uint32)((int64)MEM_LOC$2 + 1ll);
  label$3428:;
  if( (int64)MEM_LOC$2 <= (int64)TMP$2438$2 ) goto label$3431;
  label$3430:;
 }
 label$3427:;
}

void _ZN12SYSTEM_BUS_T8K_MEMCPYEiii( struct $12SYSTEM_BUS_T* THIS$1, int32 SU$1, int32 DE$1, int32 SZ$1 )
{
 label$3432:;
 SZ$1 = (int32)((int64)SZ$1 - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 {
  int32 MEM_LOC$2;
  MEM_LOC$2 = (int32)*(uint8*)NIBBLES$;
  int32 TMP$2439$2;
  TMP$2439$2 = SZ$1;
  goto label$3434;
  label$3437:;
  {
   *(int32*)((int64)(double*)MEM64$ + (((int64)DE$1 + (int64)MEM_LOC$2) << (3ll & 63ll))) = *(int32*)((int64)(double*)MEM64$ + (((int64)SU$1 + (int64)MEM_LOC$2) << (3ll & 63ll)));
  }
  label$3435:;
  MEM_LOC$2 = (int32)((int64)MEM_LOC$2 + 1ll);
  label$3434:;
  if( (int64)MEM_LOC$2 <= (int64)TMP$2439$2 ) goto label$3437;
  label$3436:;
 }
 label$3433:;
}

void _ZN12SYSTEM_BUS_T8K_MEMCPYEyyy( struct $12SYSTEM_BUS_T* THIS$1, uint64 SU$1, uint64 DE$1, uint64 SZ$1 )
{
 label$3438:;
 SZ$1 = SZ$1 - (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 {
  uint64 MEM_LOC$2;
  MEM_LOC$2 = (uint64)*(uint8*)NIBBLES$;
  uint64 TMP$2440$2;
  TMP$2440$2 = SZ$1;
  goto label$3440;
  label$3443:;
  {
   *(uint64*)((int64)(double*)MEM64$ + ((int64)(DE$1 + MEM_LOC$2) << (3ll & 63ll))) = *(uint64*)((int64)(double*)MEM64$ + ((int64)(SU$1 + MEM_LOC$2) << (3ll & 63ll)));
  }
  label$3441:;
  MEM_LOC$2 = MEM_LOC$2 + 1ull;
  label$3440:;
  if( MEM_LOC$2 <= TMP$2440$2 ) goto label$3443;
  label$3442:;
 }
 label$3439:;
}

void _ZN12SYSTEM_BUS_T8K_MEMCPYExxx( struct $12SYSTEM_BUS_T* THIS$1, int64 SU$1, int64 DE$1, int64 SZ$1 )
{
 label$3444:;
 SZ$1 = SZ$1 - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 {
  int64 MEM_LOC$2;
  MEM_LOC$2 = (int64)*(uint8*)NIBBLES$;
  int64 TMP$2441$2;
  TMP$2441$2 = SZ$1;
  goto label$3446;
  label$3449:;
  {
   *(int64*)((int64)(double*)MEM64$ + ((DE$1 + MEM_LOC$2) << (3ll & 63ll))) = *(int64*)((int64)(double*)MEM64$ + ((SU$1 + MEM_LOC$2) << (3ll & 63ll)));
  }
  label$3447:;
  MEM_LOC$2 = MEM_LOC$2 + 1ll;
  label$3446:;
  if( MEM_LOC$2 <= TMP$2441$2 ) goto label$3449;
  label$3448:;
 }
 label$3445:;
}

void _ZN12SYSTEM_BUS_T8K_MEMCPYEfff( struct $12SYSTEM_BUS_T* THIS$1, float SU$1, float DE$1, float SZ$1 )
{
 label$3450:;
 SZ$1 = SZ$1 - (float)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 {
  float MEM_LOC$2;
  MEM_LOC$2 = (float)*(uint8*)NIBBLES$;
  float TMP$2442$2;
  TMP$2442$2 = SZ$1;
  goto label$3452;
  label$3455:;
  {
   *(float*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyintf( DE$1 + MEM_LOC$2 )) << (3ll & 63ll))) = *(float*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyintf( SU$1 + MEM_LOC$2 )) << (3ll & 63ll)));
  }
  label$3453:;
  MEM_LOC$2 = MEM_LOC$2 + 0x1.p+0f;
  label$3452:;
  if( MEM_LOC$2 <= TMP$2442$2 ) goto label$3455;
  label$3454:;
 }
 label$3451:;
}

void _ZN12SYSTEM_BUS_T8K_MEMCPYEddd( struct $12SYSTEM_BUS_T* THIS$1, double SU$1, double DE$1, double SZ$1 )
{
 label$3456:;
 SZ$1 = SZ$1 - (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 {
  double MEM_LOC$2;
  MEM_LOC$2 = (double)*(uint8*)NIBBLES$;
  double TMP$2443$2;
  TMP$2443$2 = SZ$1;
  goto label$3458;
  label$3461:;
  {
   *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( DE$1 + MEM_LOC$2 )) << (3ll & 63ll))) = *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( SU$1 + MEM_LOC$2 )) << (3ll & 63ll)));
  }
  label$3459:;
  MEM_LOC$2 = MEM_LOC$2 + 0x1.p+0;
  label$3458:;
  if( MEM_LOC$2 <= TMP$2443$2 ) goto label$3461;
  label$3460:;
 }
 label$3457:;
}

void _ZN12SYSTEM_BUS_T8K_MEMCPYER9_FLOAT128S1_S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* SU$1, struct $9_FLOAT128* DE$1, struct $9_FLOAT128* SZ$1 )
{
 struct $9_FLOAT128 TMP$2444$1;
 label$3462:;
 struct $9_FLOAT128* vr$2 = _ZmiR9_FLOAT128d( &TMP$2444$1, SZ$1, (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 _ZN9_FLOAT128aSERS_( SZ$1, vr$2 );
 {
  double MEM_LOC$2;
  MEM_LOC$2 = (double)*(uint8*)NIBBLES$;
  double TMP$2445$2;
  uint64 vr$4 = _ZN9_FLOAT128cvyEv( SZ$1 );
  TMP$2445$2 = (double)vr$4;
  goto label$3464;
  label$3467:;
  {
   struct $9_FLOAT128 TMP$2446$3;
   struct $9_FLOAT128 TMP$2447$3;
   struct $9_FLOAT128* vr$7 = _ZplR9_FLOAT128d( &TMP$2447$3, SU$1, MEM_LOC$2 );
   uint64 vr$8 = _ZN9_FLOAT128cvyEv( vr$7 );
   struct $9_FLOAT128* vr$12 = _ZplR9_FLOAT128d( &TMP$2446$3, DE$1, MEM_LOC$2 );
   uint64 vr$13 = _ZN9_FLOAT128cvyEv( vr$12 );
   _ZN9_FLOAT128aSERS_( (struct $9_FLOAT128*)((int64)(double*)MEM64$ + (vr$13 << (3ull & 63ll))), (struct $9_FLOAT128*)((int64)(double*)MEM64$ + (vr$8 << (3ull & 63ll))) );
  }
  label$3465:;
  MEM_LOC$2 = MEM_LOC$2 + 0x1.p+0;
  label$3464:;
  if( MEM_LOC$2 <= TMP$2445$2 ) goto label$3467;
  label$3466:;
 }
 label$3463:;
}

void _ZN12SYSTEM_BUS_T8K_MEMCPYER9_FLOAT256S1_S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* SU$1, struct $9_FLOAT256* DE$1, struct $9_FLOAT256* SZ$1 )
{
 struct $9_FLOAT256 TMP$2448$1;
 label$3468:;
 struct $9_FLOAT256* vr$2 = _ZmiR9_FLOAT256d( &TMP$2448$1, SZ$1, (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 _ZN9_FLOAT256aSERS_( SZ$1, vr$2 );
 {
  double MEM_LOC$2;
  MEM_LOC$2 = (double)*(uint8*)NIBBLES$;
  double TMP$2449$2;
  uint64 vr$4 = _ZN9_FLOAT256cvyEv( SZ$1 );
  TMP$2449$2 = (double)vr$4;
  goto label$3470;
  label$3473:;
  {
   struct $9_FLOAT256 TMP$2450$3;
   struct $9_FLOAT256 TMP$2451$3;
   struct $9_FLOAT256* vr$7 = _ZplR9_FLOAT256d( &TMP$2451$3, SU$1, MEM_LOC$2 );
   uint64 vr$8 = _ZN9_FLOAT256cvyEv( vr$7 );
   struct $9_FLOAT256* vr$12 = _ZplR9_FLOAT256d( &TMP$2450$3, DE$1, MEM_LOC$2 );
   uint64 vr$13 = _ZN9_FLOAT256cvyEv( vr$12 );
   _ZN9_FLOAT256aSERS_( (struct $9_FLOAT256*)((int64)(double*)MEM64$ + (vr$13 << (3ull & 63ll))), (struct $9_FLOAT256*)((int64)(double*)MEM64$ + (vr$8 << (3ull & 63ll))) );
  }
  label$3471:;
  MEM_LOC$2 = MEM_LOC$2 + 0x1.p+0;
  label$3470:;
  if( MEM_LOC$2 <= TMP$2449$2 ) goto label$3473;
  label$3472:;
 }
 label$3469:;
}

void _ZN12SYSTEM_BUS_T8K_MEMCPYER9_FLOAT512S1_S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* SU$1, struct $9_FLOAT512* DE$1, struct $9_FLOAT512* SZ$1 )
{
 struct $9_FLOAT512 TMP$2452$1;
 label$3474:;
 struct $9_FLOAT512* vr$2 = _ZmiR9_FLOAT512d( &TMP$2452$1, SZ$1, (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 _ZN9_FLOAT512aSERS_( SZ$1, vr$2 );
 {
  double MEM_LOC$2;
  MEM_LOC$2 = (double)*(uint8*)NIBBLES$;
  double TMP$2453$2;
  uint64 vr$4 = _ZN9_FLOAT512cvyEv( SZ$1 );
  TMP$2453$2 = (double)vr$4;
  goto label$3476;
  label$3479:;
  {
   struct $9_FLOAT512 TMP$2454$3;
   struct $9_FLOAT512 TMP$2455$3;
   struct $9_FLOAT512* vr$7 = _ZplR9_FLOAT512d( &TMP$2455$3, SU$1, MEM_LOC$2 );
   uint64 vr$8 = _ZN9_FLOAT512cvyEv( vr$7 );
   struct $9_FLOAT512* vr$12 = _ZplR9_FLOAT512d( &TMP$2454$3, DE$1, MEM_LOC$2 );
   uint64 vr$13 = _ZN9_FLOAT512cvyEv( vr$12 );
   _ZN9_FLOAT512aSERS_( (struct $9_FLOAT512*)((int64)(double*)MEM64$ + (vr$13 << (3ull & 63ll))), (struct $9_FLOAT512*)((int64)(double*)MEM64$ + (vr$8 << (3ull & 63ll))) );
  }
  label$3477:;
  MEM_LOC$2 = MEM_LOC$2 + 0x1.p+0;
  label$3476:;
  if( MEM_LOC$2 <= TMP$2453$2 ) goto label$3479;
  label$3478:;
 }
 label$3475:;
}

void _ZN12SYSTEM_BUS_T10K_MEMCPY16EPvS0_j( struct $12SYSTEM_BUS_T* THIS$1, void* DST$1, void* SRC$1, uint32 CPT$1 )
{
 label$3480:;
 _ZN12SYSTEM_BUS_T8K_MEMCPYEPjS0_j( THIS$1, (uint32*)DST$1, (uint32*)SRC$1, CPT$1 );
 label$3481:;
}

void _ZN12SYSTEM_BUS_T10K_MEMCPY32EPvS0_j( struct $12SYSTEM_BUS_T* THIS$1, void* DST$1, void* SRC$1, uint32 CPT$1 )
{
 label$3482:;
 _ZN12SYSTEM_BUS_T8K_MEMCPYEPjS0_j( THIS$1, (uint32*)DST$1, (uint32*)SRC$1, CPT$1 );
 label$3483:;
}

void _ZN12SYSTEM_BUS_T10K_MEMSET16EPvtj( struct $12SYSTEM_BUS_T* THIS$1, void* DST$1, uint16 VALUE$1, uint32 CPT$1 )
{
 label$3484:;
 _ZN12SYSTEM_BUS_T8K_MEMSETEPjjj( THIS$1, (uint32*)DST$1, (uint32)VALUE$1, CPT$1 );
 label$3485:;
}

void _ZN12SYSTEM_BUS_T10K_MEMSET32EPvjj( struct $12SYSTEM_BUS_T* THIS$1, void* DST$1, uint32 VALUE$1, uint32 CPT$1 )
{
 label$3486:;
 _ZN12SYSTEM_BUS_T8K_MEMSETEPjjj( THIS$1, (uint32*)DST$1, VALUE$1, CPT$1 );
 label$3487:;
}

double _ZN12SYSTEM_BUS_T8K_CLAMPFEhhh( struct $12SYSTEM_BUS_T* THIS$1, uint8 X$1, uint8 LOWERLIMIT$1, uint8 UPPERLIMIT$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3488:;
 if( (int64)X$1 >= (int64)LOWERLIMIT$1 ) goto label$3491;
 {
  X$1 = LOWERLIMIT$1;
  label$3491:;
 }
 if( (int64)X$1 <= (int64)UPPERLIMIT$1 ) goto label$3493;
 {
  X$1 = UPPERLIMIT$1;
  label$3493:;
 }
 fb$result$1 = (double)X$1;
 goto label$3489;
 label$3489:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8K_CLAMPFEaaa( struct $12SYSTEM_BUS_T* THIS$1, int8 X$1, int8 LOWERLIMIT$1, int8 UPPERLIMIT$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3494:;
 if( (int64)X$1 >= (int64)LOWERLIMIT$1 ) goto label$3497;
 {
  X$1 = LOWERLIMIT$1;
  label$3497:;
 }
 if( (int64)X$1 <= (int64)UPPERLIMIT$1 ) goto label$3499;
 {
  X$1 = UPPERLIMIT$1;
  label$3499:;
 }
 fb$result$1 = (double)X$1;
 goto label$3495;
 label$3495:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8K_CLAMPFEttt( struct $12SYSTEM_BUS_T* THIS$1, uint16 X$1, uint16 LOWERLIMIT$1, uint16 UPPERLIMIT$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3500:;
 if( (int64)X$1 >= (int64)LOWERLIMIT$1 ) goto label$3503;
 {
  X$1 = LOWERLIMIT$1;
  label$3503:;
 }
 if( (int64)X$1 <= (int64)UPPERLIMIT$1 ) goto label$3505;
 {
  X$1 = UPPERLIMIT$1;
  label$3505:;
 }
 fb$result$1 = (double)X$1;
 goto label$3501;
 label$3501:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8K_CLAMPFEsss( struct $12SYSTEM_BUS_T* THIS$1, int16 X$1, int16 LOWERLIMIT$1, int16 UPPERLIMIT$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3506:;
 if( (int64)X$1 >= (int64)LOWERLIMIT$1 ) goto label$3509;
 {
  X$1 = LOWERLIMIT$1;
  label$3509:;
 }
 if( (int64)X$1 <= (int64)UPPERLIMIT$1 ) goto label$3511;
 {
  X$1 = UPPERLIMIT$1;
  label$3511:;
 }
 fb$result$1 = (double)X$1;
 goto label$3507;
 label$3507:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8K_CLAMPFEjjj( struct $12SYSTEM_BUS_T* THIS$1, uint32 X$1, uint32 LOWERLIMIT$1, uint32 UPPERLIMIT$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3512:;
 if( (int64)X$1 >= (int64)LOWERLIMIT$1 ) goto label$3515;
 {
  X$1 = LOWERLIMIT$1;
  label$3515:;
 }
 if( (int64)X$1 <= (int64)UPPERLIMIT$1 ) goto label$3517;
 {
  X$1 = UPPERLIMIT$1;
  label$3517:;
 }
 fb$result$1 = (double)X$1;
 goto label$3513;
 label$3513:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8K_CLAMPFEiii( struct $12SYSTEM_BUS_T* THIS$1, int32 X$1, int32 LOWERLIMIT$1, int32 UPPERLIMIT$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3518:;
 if( (int64)X$1 >= (int64)LOWERLIMIT$1 ) goto label$3521;
 {
  X$1 = LOWERLIMIT$1;
  label$3521:;
 }
 if( (int64)X$1 <= (int64)UPPERLIMIT$1 ) goto label$3523;
 {
  X$1 = UPPERLIMIT$1;
  label$3523:;
 }
 fb$result$1 = (double)X$1;
 goto label$3519;
 label$3519:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8K_CLAMPFEyyy( struct $12SYSTEM_BUS_T* THIS$1, uint64 X$1, uint64 LOWERLIMIT$1, uint64 UPPERLIMIT$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3524:;
 if( X$1 >= LOWERLIMIT$1 ) goto label$3527;
 {
  X$1 = LOWERLIMIT$1;
  label$3527:;
 }
 if( X$1 <= UPPERLIMIT$1 ) goto label$3529;
 {
  X$1 = UPPERLIMIT$1;
  label$3529:;
 }
 fb$result$1 = (double)X$1;
 goto label$3525;
 label$3525:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8K_CLAMPFExxx( struct $12SYSTEM_BUS_T* THIS$1, int64 X$1, int64 LOWERLIMIT$1, int64 UPPERLIMIT$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3530:;
 if( X$1 >= LOWERLIMIT$1 ) goto label$3533;
 {
  X$1 = LOWERLIMIT$1;
  label$3533:;
 }
 if( X$1 <= UPPERLIMIT$1 ) goto label$3535;
 {
  X$1 = UPPERLIMIT$1;
  label$3535:;
 }
 fb$result$1 = (double)X$1;
 goto label$3531;
 label$3531:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8K_CLAMPFEfff( struct $12SYSTEM_BUS_T* THIS$1, float X$1, float LOWERLIMIT$1, float UPPERLIMIT$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3536:;
 if( X$1 >= LOWERLIMIT$1 ) goto label$3539;
 {
  X$1 = LOWERLIMIT$1;
  label$3539:;
 }
 if( X$1 <= UPPERLIMIT$1 ) goto label$3541;
 {
  X$1 = UPPERLIMIT$1;
  label$3541:;
 }
 fb$result$1 = (double)X$1;
 goto label$3537;
 label$3537:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8K_CLAMPFEddd( struct $12SYSTEM_BUS_T* THIS$1, double X$1, double LOWERLIMIT$1, double UPPERLIMIT$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3542:;
 if( X$1 >= LOWERLIMIT$1 ) goto label$3545;
 {
  X$1 = LOWERLIMIT$1;
  label$3545:;
 }
 if( X$1 <= UPPERLIMIT$1 ) goto label$3547;
 {
  X$1 = UPPERLIMIT$1;
  label$3547:;
 }
 fb$result$1 = X$1;
 goto label$3543;
 label$3543:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8K_CLAMPFER9_FLOAT128S1_S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* X$1, struct $9_FLOAT128* LOWERLIMIT$1, struct $9_FLOAT128* UPPERLIMIT$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3548:;
 uint64 vr$1 = _ZN9_FLOAT128cvyEv( X$1 );
 uint64 vr$2 = _ZN9_FLOAT128cvyEv( LOWERLIMIT$1 );
 if( vr$1 >= vr$2 ) goto label$3551;
 {
  _ZN9_FLOAT128aSERS_( X$1, LOWERLIMIT$1 );
  label$3551:;
 }
 uint64 vr$3 = _ZN9_FLOAT128cvyEv( X$1 );
 uint64 vr$4 = _ZN9_FLOAT128cvyEv( UPPERLIMIT$1 );
 if( vr$3 <= vr$4 ) goto label$3553;
 {
  _ZN9_FLOAT128aSERS_( X$1, UPPERLIMIT$1 );
  label$3553:;
 }
 uint64 vr$5 = _ZN9_FLOAT128cvyEv( X$1 );
 fb$result$1 = (double)vr$5;
 goto label$3549;
 label$3549:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8K_CLAMPFER9_FLOAT256S1_S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* X$1, struct $9_FLOAT256* LOWERLIMIT$1, struct $9_FLOAT256* UPPERLIMIT$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3554:;
 uint64 vr$1 = _ZN9_FLOAT256cvyEv( X$1 );
 uint64 vr$2 = _ZN9_FLOAT256cvyEv( LOWERLIMIT$1 );
 if( vr$1 >= vr$2 ) goto label$3557;
 {
  _ZN9_FLOAT256aSERS_( X$1, LOWERLIMIT$1 );
  label$3557:;
 }
 uint64 vr$3 = _ZN9_FLOAT256cvyEv( X$1 );
 uint64 vr$4 = _ZN9_FLOAT256cvyEv( UPPERLIMIT$1 );
 if( vr$3 <= vr$4 ) goto label$3559;
 {
  _ZN9_FLOAT256aSERS_( X$1, UPPERLIMIT$1 );
  label$3559:;
 }
 uint64 vr$5 = _ZN9_FLOAT256cvyEv( X$1 );
 fb$result$1 = (double)vr$5;
 goto label$3555;
 label$3555:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8K_CLAMPFER9_FLOAT512S1_S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* X$1, struct $9_FLOAT512* LOWERLIMIT$1, struct $9_FLOAT512* UPPERLIMIT$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3560:;
 uint64 vr$1 = _ZN9_FLOAT512cvyEv( X$1 );
 uint64 vr$2 = _ZN9_FLOAT512cvyEv( LOWERLIMIT$1 );
 if( vr$1 >= vr$2 ) goto label$3563;
 {
  _ZN9_FLOAT512aSERS_( X$1, LOWERLIMIT$1 );
  label$3563:;
 }
 uint64 vr$3 = _ZN9_FLOAT512cvyEv( X$1 );
 uint64 vr$4 = _ZN9_FLOAT512cvyEv( UPPERLIMIT$1 );
 if( vr$3 <= vr$4 ) goto label$3565;
 {
  _ZN9_FLOAT512aSERS_( X$1, UPPERLIMIT$1 );
  label$3565:;
 }
 uint64 vr$5 = _ZN9_FLOAT512cvyEv( X$1 );
 fb$result$1 = (double)vr$5;
 goto label$3561;
 label$3561:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_MINFEhh( struct $12SYSTEM_BUS_T* THIS$1, uint8 V1$1, uint8 V2$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3566:;
 if( (int64)V1$1 >= (int64)V2$1 ) goto label$3569;
 {
  fb$result$1 = (double)V1$1;
  goto label$3567;
  label$3569:;
 }
 fb$result$1 = (double)V2$1;
 goto label$3567;
 label$3567:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_MINFEaa( struct $12SYSTEM_BUS_T* THIS$1, int8 V1$1, int8 V2$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3570:;
 if( (int64)V1$1 >= (int64)V2$1 ) goto label$3573;
 {
  fb$result$1 = (double)V1$1;
  goto label$3571;
  label$3573:;
 }
 fb$result$1 = (double)V2$1;
 goto label$3571;
 label$3571:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_MINFEtt( struct $12SYSTEM_BUS_T* THIS$1, uint16 V1$1, uint16 V2$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3574:;
 if( (int64)V1$1 >= (int64)V2$1 ) goto label$3577;
 {
  fb$result$1 = (double)V1$1;
  goto label$3575;
  label$3577:;
 }
 fb$result$1 = (double)V2$1;
 goto label$3575;
 label$3575:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_MINFEss( struct $12SYSTEM_BUS_T* THIS$1, int16 V1$1, int16 V2$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3578:;
 if( (int64)V1$1 >= (int64)V2$1 ) goto label$3581;
 {
  fb$result$1 = (double)V1$1;
  goto label$3579;
  label$3581:;
 }
 fb$result$1 = (double)V2$1;
 goto label$3579;
 label$3579:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_MINFEjj( struct $12SYSTEM_BUS_T* THIS$1, uint32 V1$1, uint32 V2$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3582:;
 if( (int64)V1$1 >= (int64)V2$1 ) goto label$3585;
 {
  fb$result$1 = (double)V1$1;
  goto label$3583;
  label$3585:;
 }
 fb$result$1 = (double)V2$1;
 goto label$3583;
 label$3583:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_MINFEii( struct $12SYSTEM_BUS_T* THIS$1, int32 V1$1, int32 V2$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3586:;
 if( (int64)V1$1 >= (int64)V2$1 ) goto label$3589;
 {
  fb$result$1 = (double)V1$1;
  goto label$3587;
  label$3589:;
 }
 fb$result$1 = (double)V2$1;
 goto label$3587;
 label$3587:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_MINFEyy( struct $12SYSTEM_BUS_T* THIS$1, uint64 V1$1, uint64 V2$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3590:;
 if( V1$1 >= V2$1 ) goto label$3593;
 {
  fb$result$1 = (double)V1$1;
  goto label$3591;
  label$3593:;
 }
 fb$result$1 = (double)V2$1;
 goto label$3591;
 label$3591:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_MINFExx( struct $12SYSTEM_BUS_T* THIS$1, int64 V1$1, int64 V2$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3594:;
 if( V1$1 >= V2$1 ) goto label$3597;
 {
  fb$result$1 = (double)V1$1;
  goto label$3595;
  label$3597:;
 }
 fb$result$1 = (double)V2$1;
 goto label$3595;
 label$3595:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_MINFEff( struct $12SYSTEM_BUS_T* THIS$1, float V1$1, float V2$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3598:;
 if( V1$1 >= V2$1 ) goto label$3601;
 {
  fb$result$1 = (double)V1$1;
  goto label$3599;
  label$3601:;
 }
 fb$result$1 = (double)V2$1;
 goto label$3599;
 label$3599:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_MINFEdd( struct $12SYSTEM_BUS_T* THIS$1, double V1$1, double V2$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3602:;
 if( V1$1 >= V2$1 ) goto label$3605;
 {
  fb$result$1 = V1$1;
  goto label$3603;
  label$3605:;
 }
 fb$result$1 = V2$1;
 goto label$3603;
 label$3603:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_MINFER9_FLOAT128S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* V1$1, struct $9_FLOAT128* V2$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3606:;
 uint64 vr$1 = _ZN9_FLOAT128cvyEv( V1$1 );
 uint64 vr$2 = _ZN9_FLOAT128cvyEv( V2$1 );
 if( vr$1 >= vr$2 ) goto label$3609;
 {
  uint64 vr$3 = _ZN9_FLOAT128cvyEv( V1$1 );
  fb$result$1 = (double)vr$3;
  goto label$3607;
  label$3609:;
 }
 uint64 vr$5 = _ZN9_FLOAT128cvyEv( V2$1 );
 fb$result$1 = (double)vr$5;
 goto label$3607;
 label$3607:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_MINFER9_FLOAT256S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* V1$1, struct $9_FLOAT256* V2$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3610:;
 uint64 vr$1 = _ZN9_FLOAT256cvyEv( V1$1 );
 uint64 vr$2 = _ZN9_FLOAT256cvyEv( V2$1 );
 if( vr$1 >= vr$2 ) goto label$3613;
 {
  uint64 vr$3 = _ZN9_FLOAT256cvyEv( V1$1 );
  fb$result$1 = (double)vr$3;
  goto label$3611;
  label$3613:;
 }
 uint64 vr$5 = _ZN9_FLOAT256cvyEv( V2$1 );
 fb$result$1 = (double)vr$5;
 goto label$3611;
 label$3611:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_MINFER9_FLOAT512S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* V1$1, struct $9_FLOAT512* V2$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3614:;
 uint64 vr$1 = _ZN9_FLOAT512cvyEv( V1$1 );
 uint64 vr$2 = _ZN9_FLOAT512cvyEv( V2$1 );
 if( vr$1 >= vr$2 ) goto label$3617;
 {
  uint64 vr$3 = _ZN9_FLOAT512cvyEv( V1$1 );
  fb$result$1 = (double)vr$3;
  goto label$3615;
  label$3617:;
 }
 uint64 vr$5 = _ZN9_FLOAT512cvyEv( V2$1 );
 fb$result$1 = (double)vr$5;
 goto label$3615;
 label$3615:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_MAXFEhh( struct $12SYSTEM_BUS_T* THIS$1, uint8 V1$1, uint8 V2$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3618:;
 if( (int64)V1$1 <= (int64)V2$1 ) goto label$3621;
 {
  fb$result$1 = (double)V1$1;
  goto label$3619;
  label$3621:;
 }
 fb$result$1 = (double)V2$1;
 goto label$3619;
 label$3619:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_MAXFEaa( struct $12SYSTEM_BUS_T* THIS$1, int8 V1$1, int8 V2$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3622:;
 if( (int64)V1$1 <= (int64)V2$1 ) goto label$3625;
 {
  fb$result$1 = (double)V1$1;
  goto label$3623;
  label$3625:;
 }
 fb$result$1 = (double)V2$1;
 goto label$3623;
 label$3623:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_MAXFEtt( struct $12SYSTEM_BUS_T* THIS$1, uint16 V1$1, uint16 V2$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3626:;
 if( (int64)V1$1 <= (int64)V2$1 ) goto label$3629;
 {
  fb$result$1 = (double)V1$1;
  goto label$3627;
  label$3629:;
 }
 fb$result$1 = (double)V2$1;
 goto label$3627;
 label$3627:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_MAXFEss( struct $12SYSTEM_BUS_T* THIS$1, int16 V1$1, int16 V2$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3630:;
 if( (int64)V1$1 <= (int64)V2$1 ) goto label$3633;
 {
  fb$result$1 = (double)V1$1;
  goto label$3631;
  label$3633:;
 }
 fb$result$1 = (double)V2$1;
 goto label$3631;
 label$3631:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_MAXFEjj( struct $12SYSTEM_BUS_T* THIS$1, uint32 V1$1, uint32 V2$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3634:;
 if( (int64)V1$1 <= (int64)V2$1 ) goto label$3637;
 {
  fb$result$1 = (double)V1$1;
  goto label$3635;
  label$3637:;
 }
 fb$result$1 = (double)V2$1;
 goto label$3635;
 label$3635:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_MAXFEii( struct $12SYSTEM_BUS_T* THIS$1, int32 V1$1, int32 V2$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3638:;
 if( (int64)V1$1 <= (int64)V2$1 ) goto label$3641;
 {
  fb$result$1 = (double)V1$1;
  goto label$3639;
  label$3641:;
 }
 fb$result$1 = (double)V2$1;
 goto label$3639;
 label$3639:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_MAXFEyy( struct $12SYSTEM_BUS_T* THIS$1, uint64 V1$1, uint64 V2$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3642:;
 if( V1$1 <= V2$1 ) goto label$3645;
 {
  fb$result$1 = (double)V1$1;
  goto label$3643;
  label$3645:;
 }
 fb$result$1 = (double)V2$1;
 goto label$3643;
 label$3643:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_MAXFExx( struct $12SYSTEM_BUS_T* THIS$1, int64 V1$1, int64 V2$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3646:;
 if( V1$1 <= V2$1 ) goto label$3649;
 {
  fb$result$1 = (double)V1$1;
  goto label$3647;
  label$3649:;
 }
 fb$result$1 = (double)V2$1;
 goto label$3647;
 label$3647:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_MAXFEff( struct $12SYSTEM_BUS_T* THIS$1, float V1$1, float V2$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3650:;
 if( V1$1 <= V2$1 ) goto label$3653;
 {
  fb$result$1 = (double)V1$1;
  goto label$3651;
  label$3653:;
 }
 fb$result$1 = (double)V2$1;
 goto label$3651;
 label$3651:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_MAXFEdd( struct $12SYSTEM_BUS_T* THIS$1, double V1$1, double V2$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3654:;
 if( V1$1 <= V2$1 ) goto label$3657;
 {
  fb$result$1 = V1$1;
  goto label$3655;
  label$3657:;
 }
 fb$result$1 = V2$1;
 goto label$3655;
 label$3655:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_MAXFER9_FLOAT128S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* V1$1, struct $9_FLOAT128* V2$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3658:;
 uint64 vr$1 = _ZN9_FLOAT128cvyEv( V1$1 );
 uint64 vr$2 = _ZN9_FLOAT128cvyEv( V2$1 );
 if( vr$1 <= vr$2 ) goto label$3661;
 {
  uint64 vr$3 = _ZN9_FLOAT128cvyEv( V1$1 );
  fb$result$1 = (double)vr$3;
  goto label$3659;
  label$3661:;
 }
 uint64 vr$5 = _ZN9_FLOAT128cvyEv( V2$1 );
 fb$result$1 = (double)vr$5;
 goto label$3659;
 label$3659:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_MAXFER9_FLOAT256S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* V1$1, struct $9_FLOAT256* V2$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3662:;
 uint64 vr$1 = _ZN9_FLOAT256cvyEv( V1$1 );
 uint64 vr$2 = _ZN9_FLOAT256cvyEv( V2$1 );
 if( vr$1 <= vr$2 ) goto label$3665;
 {
  uint64 vr$3 = _ZN9_FLOAT256cvyEv( V1$1 );
  fb$result$1 = (double)vr$3;
  goto label$3663;
  label$3665:;
 }
 uint64 vr$5 = _ZN9_FLOAT256cvyEv( V2$1 );
 fb$result$1 = (double)vr$5;
 goto label$3663;
 label$3663:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_MAXFER9_FLOAT512S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* V1$1, struct $9_FLOAT512* V2$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3666:;
 uint64 vr$1 = _ZN9_FLOAT512cvyEv( V1$1 );
 uint64 vr$2 = _ZN9_FLOAT512cvyEv( V2$1 );
 if( vr$1 <= vr$2 ) goto label$3669;
 {
  uint64 vr$3 = _ZN9_FLOAT512cvyEv( V1$1 );
  fb$result$1 = (double)vr$3;
  goto label$3667;
  label$3669:;
 }
 uint64 vr$5 = _ZN9_FLOAT512cvyEv( V2$1 );
 fb$result$1 = (double)vr$5;
 goto label$3667;
 label$3667:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8K_STRLENEPh( struct $12SYSTEM_BUS_T* THIS$1, uint8* S$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3670:;
 double RETVAL$1;
 __builtin_memset( &RETVAL$1, 0, 8ll );
 RETVAL$1 = 0x0p+0;
 label$3672:;
 if( (int64)*(uint8*)(S$1 + ((int64)__builtin_nearbyint( RETVAL$1 ))) == 0ll ) goto label$3673;
 {
  RETVAL$1 = RETVAL$1 + 0x1.p+0;
 }
 goto label$3672;
 label$3673:;
 fb$result$1 = RETVAL$1;
 goto label$3671;
 label$3671:;
 return fb$result$1;
}

uint8* _ZN12SYSTEM_BUS_T9K_STRTRIMEPh( struct $12SYSTEM_BUS_T* THIS$1, uint8* S$1 )
{
 uint8* fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3674:;
 uint8* RETVAL$1;
 RETVAL$1 = (uint8*)((uint8*)THIS$1 + 16865648ll);
 *RETVAL$1 = (uint8)0u;
 int64 I$1;
 I$1 = 0ll;
 int64 J$1;
 J$1 = 0ll;
 label$3676:;
 if( (((((int64)-((int64)*(uint8*)(S$1 + I$1) != 0ll) & (int64)-((int64)*(uint8*)(S$1 + I$1) == 32ll)) & (int64)-((int64)*(uint8*)(S$1 + I$1) != 9ll)) & (int64)-((int64)*(uint8*)(S$1 + I$1) != 10ll)) & (int64)-((int64)*(uint8*)(S$1 + I$1) != 13ll)) == 0ll ) goto label$3677;
 {
  I$1 = I$1 + 1ll;
 }
 goto label$3676;
 label$3677:;
 label$3678:;
 if( (int64)*(uint8*)(S$1 + I$1) == 0ll ) goto label$3679;
 {
  *(uint8*)(RETVAL$1 + J$1) = *(uint8*)(S$1 + I$1);
  I$1 = I$1 + 1ll;
  J$1 = J$1 + 1ll;
 }
 goto label$3678;
 label$3679:;
 *(uint8*)(RETVAL$1 + J$1) = (uint8)0u;
 _ZN12SYSTEM_BUS_T8K_STRREVEPh( THIS$1, RETVAL$1 );
 I$1 = 0ll;
 J$1 = 0ll;
 label$3680:;
 if( (((((int64)-((int64)*(uint8*)(RETVAL$1 + I$1) != 0ll) & (int64)-((int64)*(uint8*)(RETVAL$1 + I$1) == 32ll)) & (int64)-((int64)*(uint8*)(RETVAL$1 + I$1) == 9ll)) & (int64)-((int64)*(uint8*)(RETVAL$1 + I$1) == 10ll)) & (int64)-((int64)*(uint8*)(RETVAL$1 + I$1) == 13ll)) == 0ll ) goto label$3681;
 {
  I$1 = I$1 + 1ll;
 }
 goto label$3680;
 label$3681:;
 label$3682:;
 if( (int64)*(uint8*)(RETVAL$1 + I$1) == 0ll ) goto label$3683;
 {
  *(uint8*)(RETVAL$1 + J$1) = *(uint8*)(RETVAL$1 + I$1);
  I$1 = I$1 + 1ll;
  J$1 = J$1 + 1ll;
 }
 goto label$3682;
 label$3683:;
 *(uint8*)(RETVAL$1 + J$1) = (uint8)0u;
 _ZN12SYSTEM_BUS_T8K_STRREVEPh( THIS$1, RETVAL$1 );
 fb$result$1 = RETVAL$1;
 goto label$3675;
 label$3675:;
 return fb$result$1;
}

uint8* _ZN12SYSTEM_BUS_T12K_STRTOUPPEREPh( struct $12SYSTEM_BUS_T* THIS$1, uint8* S$1 )
{
 uint8* fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3684:;
 double I$1;
 __builtin_memset( &I$1, 0, 8ll );
 uint8* DST$1;
 DST$1 = (uint8*)((uint8*)THIS$1 + 16865648ll);
 I$1 = 0x0p+0;
 label$3686:;
 if( ((int64)-((int64)*(uint8*)(S$1 + ((int64)__builtin_nearbyint( I$1 ))) != 0ll) & (int64)-(I$1 < 0x1.FFp+9)) == 0ll ) goto label$3687;
 {
  if( ((int64)-((int64)*(uint8*)(S$1 + ((int64)__builtin_nearbyint( I$1 ))) >= 97ll) & (int64)-((int64)*(uint8*)(S$1 + ((int64)__builtin_nearbyint( I$1 ))) <= 122ll)) == 0ll ) goto label$3689;
  {
   *(uint8*)(DST$1 + ((int64)__builtin_nearbyint( I$1 ))) = (uint8)((int64)*(uint8*)(S$1 + ((int64)__builtin_nearbyint( I$1 ))) + -32ll);
  }
  goto label$3688;
  label$3689:;
  {
   *(uint8*)(DST$1 + ((int64)__builtin_nearbyint( I$1 ))) = *(uint8*)(S$1 + ((int64)__builtin_nearbyint( I$1 )));
  }
  label$3688:;
  I$1 = I$1 + 0x1.p+0;
 }
 goto label$3686;
 label$3687:;
 *(uint8*)(DST$1 + ((int64)__builtin_nearbyint( I$1 ))) = (uint8)0u;
 fb$result$1 = DST$1;
 goto label$3685;
 label$3685:;
 return fb$result$1;
}

uint8* _ZN12SYSTEM_BUS_T12K_STRTOLOWEREPh( struct $12SYSTEM_BUS_T* THIS$1, uint8* S$1 )
{
 uint8* fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3690:;
 double I$1;
 __builtin_memset( &I$1, 0, 8ll );
 uint8* DST$1;
 DST$1 = (uint8*)((uint8*)THIS$1 + 16865648ll);
 I$1 = 0x0p+0;
 label$3692:;
 if( ((int64)-((int64)*(uint8*)(S$1 + ((int64)__builtin_nearbyint( I$1 ))) != 0ll) & (int64)-(I$1 < 0x1.FFp+9)) == 0ll ) goto label$3693;
 {
  if( ((int64)-((int64)*(uint8*)(S$1 + ((int64)__builtin_nearbyint( I$1 ))) >= 65ll) & (int64)-((int64)*(uint8*)(S$1 + ((int64)__builtin_nearbyint( I$1 ))) <= 90ll)) == 0ll ) goto label$3695;
  {
   *(uint8*)(DST$1 + ((int64)__builtin_nearbyint( I$1 ))) = (uint8)((int64)*(uint8*)(S$1 + ((int64)__builtin_nearbyint( I$1 ))) + 32ll);
  }
  goto label$3694;
  label$3695:;
  {
   *(uint8*)(DST$1 + ((int64)__builtin_nearbyint( I$1 ))) = *(uint8*)(S$1 + ((int64)__builtin_nearbyint( I$1 )));
  }
  label$3694:;
  I$1 = I$1 + 0x1.p+0;
 }
 goto label$3692;
 label$3693:;
 *(uint8*)(DST$1 + ((int64)__builtin_nearbyint( I$1 ))) = (uint8)0u;
 fb$result$1 = DST$1;
 goto label$3691;
 label$3691:;
 return fb$result$1;
}

uint8* _ZN12SYSTEM_BUS_T11K_SUBSTRINGEPhdd( struct $12SYSTEM_BUS_T* THIS$1, uint8* S$1, double INDEX$1, double COUNT$1 )
{
 uint8* fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3696:;
 double I$1;
 __builtin_memset( &I$1, 0, 8ll );
 uint8* DST$1;
 DST$1 = (uint8*)((uint8*)THIS$1 + 16865648ll);
 double L$1;
 double vr$4 = _ZN12SYSTEM_BUS_T8K_STRLENEPh( THIS$1, S$1 );
 L$1 = vr$4;
 I$1 = 0x0p+0;
 label$3698:;
 if( ((((int64)-((int64)*(uint8*)(S$1 + ((int64)__builtin_nearbyint( I$1 + INDEX$1 ))) != 0ll) & (int64)-((I$1 + INDEX$1) < 0x1.FFp+9)) & (int64)-((I$1 + INDEX$1) < L$1)) & ((int64)-(I$1 < COUNT$1) | (int64)-(COUNT$1 == -0x1.p+0))) == 0ll ) goto label$3699;
 {
  *(uint8*)(DST$1 + ((int64)__builtin_nearbyint( I$1 ))) = *(uint8*)(S$1 + ((int64)__builtin_nearbyint( I$1 + INDEX$1 )));
  I$1 = I$1 + 0x1.p+0;
 }
 goto label$3698;
 label$3699:;
 *(uint8*)(DST$1 + ((int64)__builtin_nearbyint( I$1 ))) = (uint8)0u;
 fb$result$1 = DST$1;
 goto label$3697;
 label$3697:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T9K_STRNCMPEPhS0_d( struct $12SYSTEM_BUS_T* THIS$1, uint8* S1$1, uint8* S2$1, double COUNT$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3700:;
 double RETVAL$1;
 RETVAL$1 = 0x0p+0;
 double I$1;
 I$1 = 0x0p+0;
 label$3702:;
 if( I$1 >= COUNT$1 ) goto label$3703;
 {
  if( (int64)*(uint8*)(S1$1 + ((int64)__builtin_nearbyint( I$1 ))) == (int64)*(uint8*)(S2$1 + ((int64)__builtin_nearbyint( I$1 ))) ) goto label$3705;
  {
   fb$result$1 = (double)((int64)*(uint8*)(S1$1 + ((int64)__builtin_nearbyint( I$1 ))) - (int64)*(uint8*)(S2$1 + ((int64)__builtin_nearbyint( I$1 ))));
   goto label$3701;
   label$3705:;
  }
  I$1 = I$1 + 0x1.p+0;
 }
 goto label$3702;
 label$3703:;
 fb$result$1 = 0x0p+0;
 goto label$3701;
 label$3701:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T16K_STRLASTINDEXOFEPhS0_( struct $12SYSTEM_BUS_T* THIS$1, uint8* S$1, uint8* S2$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3706:;
 double L1$1;
 double vr$1 = _ZN12SYSTEM_BUS_T8K_STRLENEPh( THIS$1, S$1 );
 L1$1 = vr$1;
 double L2$1;
 double vr$2 = _ZN12SYSTEM_BUS_T8K_STRLENEPh( THIS$1, S2$1 );
 L2$1 = vr$2;
 double I$1;
 __builtin_memset( &I$1, 0, 8ll );
 double J$1;
 __builtin_memset( &J$1, 0, 8ll );
 int64 OK$1;
 OK$1 = 0ll;
 {
  I$1 = L1$1 - L2$1;
  goto label$3708;
  label$3711:;
  {
   if( (int64)*(uint8*)(S$1 + ((int64)__builtin_nearbyint( I$1 ))) != (int64)*S2$1 ) goto label$3713;
   {
    OK$1 = 1ll;
    {
     J$1 = 0x0p+0;
     double TMP$2456$5;
     TMP$2456$5 = L2$1 + -0x1.p+0;
     goto label$3714;
     label$3717:;
     {
      if( (int64)*(uint8*)(S$1 + ((int64)__builtin_nearbyint( I$1 + J$1 ))) == (int64)*(uint8*)(S2$1 + ((int64)__builtin_nearbyint( J$1 ))) ) goto label$3719;
      {
       OK$1 = 0ll;
       goto label$3716;
      }
      label$3719:;
      label$3718:;
     }
     label$3715:;
     J$1 = J$1 + 0x1.p+0;
     label$3714:;
     if( J$1 <= TMP$2456$5 ) goto label$3717;
     label$3716:;
    }
    if( OK$1 == 0ll ) goto label$3721;
    {
     fb$result$1 = I$1;
     goto label$3707;
     label$3721:;
    }
   }
   label$3713:;
   label$3712:;
  }
  label$3709:;
  I$1 = I$1 + -0x1.p+0;
  label$3708:;
  if( I$1 >= 0x0p+0 ) goto label$3711;
  label$3710:;
 }
 fb$result$1 = -0x1.p+0;
 goto label$3707;
 label$3707:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T13K_STRENDSWITHEPhS0_( struct $12SYSTEM_BUS_T* THIS$1, uint8* SRC$1, uint8* SEARCH$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3722:;
 double vr$1 = _ZN12SYSTEM_BUS_T16K_STRLASTINDEXOFEPhS0_( THIS$1, SRC$1, SEARCH$1 );
 double vr$2 = _ZN12SYSTEM_BUS_T8K_STRLENEPh( THIS$1, SRC$1 );
 double vr$3 = _ZN12SYSTEM_BUS_T8K_STRLENEPh( THIS$1, SEARCH$1 );
 if( vr$1 != (vr$2 - vr$3) ) goto label$3725;
 {
  fb$result$1 = 0x1.p+0;
  goto label$3723;
 }
 goto label$3724;
 label$3725:;
 {
  fb$result$1 = 0x0p+0;
  goto label$3723;
 }
 label$3724:;
 label$3723:;
 return fb$result$1;
}

void _ZN12SYSTEM_BUS_T8K_STRREVEPh( struct $12SYSTEM_BUS_T* THIS$1, uint8* S$1 )
{
 label$3726:;
 int64 L$1;
 double vr$0 = _ZN12SYSTEM_BUS_T8K_STRLENEPh( THIS$1, S$1 );
 L$1 = ((int64)__builtin_nearbyint( vr$0 ));
 int64 I$1;
 __builtin_memset( &I$1, 0, 8ll );
 uint8 TMP$1;
 __builtin_memset( &TMP$1, 0, 1ll );
 uint8 TMP2$1;
 __builtin_memset( &TMP2$1, 0, 1ll );
 {
  I$1 = 0ll;
  int64 TMP$2457$2;
  TMP$2457$2 = ((int64)__builtin_nearbyint( ((double)L$1 / 0x1.p+1) + -0x1.p+0 ));
  goto label$3728;
  label$3731:;
  {
   TMP$1 = *(uint8*)(S$1 + I$1);
   TMP2$1 = *(uint8*)((uint8*)(S$1 + (L$1 - I$1)) + -1ll);
   *(uint8*)(S$1 + I$1) = TMP2$1;
   *(uint8*)((uint8*)(S$1 + (L$1 - I$1)) + -1ll) = TMP$1;
  }
  label$3729:;
  I$1 = I$1 + 1ll;
  label$3728:;
  if( I$1 <= TMP$2457$2 ) goto label$3731;
  label$3730:;
 }
 label$3727:;
}

double _ZN12SYSTEM_BUS_T13K_STRCONTAINSEPhS0_( struct $12SYSTEM_BUS_T* THIS$1, uint8* S$1, uint8* S2$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3732:;
 fb$result$1 = 0x0p+0;
 goto label$3733;
 label$3733:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T12K_STRINDEXOFEPhS0_( struct $12SYSTEM_BUS_T* THIS$1, uint8* S$1, uint8* S2$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3734:;
 double L1$1;
 double vr$1 = _ZN12SYSTEM_BUS_T8K_STRLENEPh( THIS$1, S$1 );
 L1$1 = vr$1;
 double L2$1;
 double vr$2 = _ZN12SYSTEM_BUS_T8K_STRLENEPh( THIS$1, S2$1 );
 L2$1 = vr$2;
 int64 I$1;
 __builtin_memset( &I$1, 0, 8ll );
 int64 J$1;
 __builtin_memset( &J$1, 0, 8ll );
 int64 OK$1;
 OK$1 = 0ll;
 {
  I$1 = 0ll;
  int64 TMP$2458$2;
  TMP$2458$2 = ((int64)__builtin_nearbyint( L1$1 - L2$1 ));
  goto label$3736;
  label$3739:;
  {
   if( (int64)*(uint8*)(S$1 + I$1) != (int64)*S2$1 ) goto label$3741;
   {
    OK$1 = 1ll;
    {
     J$1 = 0ll;
     int64 TMP$2459$5;
     TMP$2459$5 = ((int64)__builtin_nearbyint( L2$1 + -0x1.p+0 ));
     goto label$3742;
     label$3745:;
     {
      if( (int64)*(uint8*)((uint8*)(S$1 + I$1) + J$1) == (int64)*(uint8*)(S2$1 + J$1) ) goto label$3747;
      {
       OK$1 = 0ll;
       goto label$3744;
      }
      label$3747:;
      label$3746:;
     }
     label$3743:;
     J$1 = J$1 + 1ll;
     label$3742:;
     if( J$1 <= TMP$2459$5 ) goto label$3745;
     label$3744:;
    }
    if( OK$1 == 0ll ) goto label$3749;
    {
     fb$result$1 = (double)I$1;
     goto label$3735;
     label$3749:;
    }
   }
   label$3741:;
   label$3740:;
  }
  label$3737:;
  I$1 = I$1 + 1ll;
  label$3736:;
  if( I$1 <= TMP$2458$2 ) goto label$3739;
  label$3738:;
 }
 fb$result$1 = -0x1.p+0;
 goto label$3735;
 label$3735:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8K_STRCMPEPhS0_( struct $12SYSTEM_BUS_T* THIS$1, uint8* S1$1, uint8* S2$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3750:;
 double RETVAL$1;
 RETVAL$1 = 0x0p+0;
 double I$1;
 I$1 = 0x0p+0;
 label$3752:;
 if( (((int64)-((int64)*(uint8*)(S1$1 + ((int64)__builtin_nearbyint( I$1 ))) == (int64)*(uint8*)(S2$1 + ((int64)__builtin_nearbyint( I$1 )))) & (int64)-((int64)*(uint8*)(S1$1 + ((int64)__builtin_nearbyint( I$1 ))) != 0ll)) & (int64)-((int64)*(uint8*)(S2$1 + ((int64)__builtin_nearbyint( I$1 ))) != 0ll)) == 0ll ) goto label$3753;
 {
  I$1 = I$1 + 0x1.p+0;
 }
 goto label$3752;
 label$3753:;
 fb$result$1 = (double)((int64)*(uint8*)(S1$1 + ((int64)__builtin_nearbyint( I$1 ))) - (int64)*(uint8*)(S2$1 + ((int64)__builtin_nearbyint( I$1 ))));
 goto label$3751;
 label$3751:;
 return fb$result$1;
}

uint8* _ZN12SYSTEM_BUS_T8K_STRCATEPhS0_( struct $12SYSTEM_BUS_T* THIS$1, uint8* S1$1, uint8* S2$1 )
{
 uint8* fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3754:;
 double I1$1;
 I1$1 = 0x0p+0;
 double I2$1;
 I2$1 = 0x0p+0;
 uint8* DST$1;
 DST$1 = (uint8*)((uint8*)THIS$1 + 16865648ll);
 label$3756:;
 if( ((int64)-((int64)*(uint8*)(S1$1 + ((int64)__builtin_nearbyint( I1$1 ))) != 0ll) & (int64)-(I1$1 < 0x1.FFp+9)) == 0ll ) goto label$3757;
 {
  *(uint8*)(DST$1 + ((int64)__builtin_nearbyint( I1$1 ))) = *(uint8*)(S1$1 + ((int64)__builtin_nearbyint( I1$1 )));
  I1$1 = I1$1 + 0x1.p+0;
 }
 goto label$3756;
 label$3757:;
 label$3758:;
 if( ((int64)-((int64)*(uint8*)(S2$1 + ((int64)__builtin_nearbyint( I2$1 ))) != 0ll) & (int64)-((I1$1 + I2$1) < 0x1.FFp+9)) == 0ll ) goto label$3759;
 {
  *(uint8*)(DST$1 + ((int64)__builtin_nearbyint( I1$1 + I2$1 ))) = *(uint8*)(S2$1 + ((int64)__builtin_nearbyint( I2$1 )));
  I2$1 = I2$1 + 0x1.p+0;
 }
 goto label$3758;
 label$3759:;
 *(uint8*)(DST$1 + ((int64)__builtin_nearbyint( I1$1 + I2$1 ))) = (uint8)0u;
 fb$result$1 = DST$1;
 goto label$3755;
 label$3755:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T3K_FEh( struct $12SYSTEM_BUS_T* THIS$1, uint8 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3760:;
 fb$result$1 = (double)((int64)X$1 * (int64)X$1);
 goto label$3761;
 label$3761:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T3K_FEa( struct $12SYSTEM_BUS_T* THIS$1, int8 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3762:;
 fb$result$1 = (double)((int64)X$1 * (int64)X$1);
 goto label$3763;
 label$3763:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T3K_FEt( struct $12SYSTEM_BUS_T* THIS$1, uint16 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3764:;
 fb$result$1 = (double)((int64)X$1 * (int64)X$1);
 goto label$3765;
 label$3765:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T3K_FEs( struct $12SYSTEM_BUS_T* THIS$1, int16 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3766:;
 fb$result$1 = (double)((int64)X$1 * (int64)X$1);
 goto label$3767;
 label$3767:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T3K_FEj( struct $12SYSTEM_BUS_T* THIS$1, uint32 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3768:;
 fb$result$1 = (double)((int64)X$1 * (int64)X$1);
 goto label$3769;
 label$3769:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T3K_FEi( struct $12SYSTEM_BUS_T* THIS$1, int32 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3770:;
 fb$result$1 = (double)((int64)X$1 * (int64)X$1);
 goto label$3771;
 label$3771:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T3K_FEy( struct $12SYSTEM_BUS_T* THIS$1, uint64 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3772:;
 fb$result$1 = (double)(X$1 * X$1);
 goto label$3773;
 label$3773:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T3K_FEx( struct $12SYSTEM_BUS_T* THIS$1, int64 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3774:;
 fb$result$1 = (double)(X$1 * X$1);
 goto label$3775;
 label$3775:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T3K_FEf( struct $12SYSTEM_BUS_T* THIS$1, float X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3776:;
 fb$result$1 = (double)(X$1 * X$1);
 goto label$3777;
 label$3777:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T3K_FEd( struct $12SYSTEM_BUS_T* THIS$1, double X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3778:;
 fb$result$1 = X$1 * X$1;
 goto label$3779;
 label$3779:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T3K_FER9_FLOAT128( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* X$1 )
{
 struct $9_FLOAT128 TMP$2460$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3780:;
 struct $9_FLOAT128* vr$2 = _ZmlR9_FLOAT128S0_( &TMP$2460$1, X$1, X$1 );
 uint64 vr$3 = _ZN9_FLOAT128cvyEv( vr$2 );
 fb$result$1 = (double)vr$3;
 goto label$3781;
 label$3781:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T3K_FER9_FLOAT256( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* X$1 )
{
 struct $9_FLOAT256 TMP$2461$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3782:;
 struct $9_FLOAT256* vr$2 = _ZmlR9_FLOAT256S0_( &TMP$2461$1, X$1, X$1 );
 uint64 vr$3 = _ZN9_FLOAT256cvyEv( vr$2 );
 fb$result$1 = (double)vr$3;
 goto label$3783;
 label$3783:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T3K_FER9_FLOAT512( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* X$1 )
{
 struct $9_FLOAT512 TMP$2462$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3784:;
 struct $9_FLOAT512* vr$2 = _ZmlR9_FLOAT512S0_( &TMP$2462$1, X$1, X$1 );
 uint64 vr$3 = _ZN9_FLOAT512cvyEv( vr$2 );
 fb$result$1 = (double)vr$3;
 goto label$3785;
 label$3785:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_FREXPEhPh( struct $12SYSTEM_BUS_T* THIS$1, uint8 D$1, uint8* EP$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3786:;
 static union $5CHEAT X$1;
 if( (int64)D$1 != 0ll ) goto label$3789;
 {
  *EP$1 = (uint8)0u;
  fb$result$1 = 0x0p+0;
  goto label$3787;
 }
 label$3789:;
 label$3788:;
 *(double*)&X$1 = (double)D$1;
 *EP$1 = (uint8)((((int64)*(int32*)((uint8*)&X$1 + 4ll) >> (20ll & 63ll)) & 2047ll) + -1022ll);
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) & -2146435073ll);
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) | 1071644672ll);
 fb$result$1 = *(double*)&X$1;
 goto label$3787;
 label$3787:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_FREXPEaPa( struct $12SYSTEM_BUS_T* THIS$1, int8 D$1, int8* EP$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3790:;
 static union $5CHEAT X$1;
 if( (int64)D$1 != 0ll ) goto label$3793;
 {
  *EP$1 = (int8)0;
  fb$result$1 = 0x0p+0;
  goto label$3791;
 }
 label$3793:;
 label$3792:;
 *(double*)&X$1 = (double)D$1;
 *EP$1 = (int8)((((int64)*(int32*)((uint8*)&X$1 + 4ll) >> (20ll & 63ll)) & 2047ll) + -1022ll);
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) & -2146435073ll);
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) | 1071644672ll);
 fb$result$1 = *(double*)&X$1;
 goto label$3791;
 label$3791:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_FREXPEtPt( struct $12SYSTEM_BUS_T* THIS$1, uint16 D$1, uint16* EP$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3794:;
 static union $5CHEAT X$1;
 if( (int64)D$1 != 0ll ) goto label$3797;
 {
  *EP$1 = (uint16)0u;
  fb$result$1 = 0x0p+0;
  goto label$3795;
 }
 label$3797:;
 label$3796:;
 *(double*)&X$1 = (double)D$1;
 *EP$1 = (uint16)((((int64)*(int32*)((uint8*)&X$1 + 4ll) >> (20ll & 63ll)) & 2047ll) + -1022ll);
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) & -2146435073ll);
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) | 1071644672ll);
 fb$result$1 = *(double*)&X$1;
 goto label$3795;
 label$3795:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_FREXPEsPs( struct $12SYSTEM_BUS_T* THIS$1, int16 D$1, int16* EP$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3798:;
 static union $5CHEAT X$1;
 if( (int64)D$1 != 0ll ) goto label$3801;
 {
  *EP$1 = (int16)0;
  fb$result$1 = 0x0p+0;
  goto label$3799;
 }
 label$3801:;
 label$3800:;
 *(double*)&X$1 = (double)D$1;
 *EP$1 = (int16)((((int64)*(int32*)((uint8*)&X$1 + 4ll) >> (20ll & 63ll)) & 2047ll) + -1022ll);
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) & -2146435073ll);
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) | 1071644672ll);
 fb$result$1 = *(double*)&X$1;
 goto label$3799;
 label$3799:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_FREXPEjPj( struct $12SYSTEM_BUS_T* THIS$1, uint32 D$1, uint32* EP$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3802:;
 static union $5CHEAT X$1;
 if( (int64)D$1 != 0ll ) goto label$3805;
 {
  *EP$1 = 0u;
  fb$result$1 = 0x0p+0;
  goto label$3803;
 }
 label$3805:;
 label$3804:;
 *(double*)&X$1 = (double)D$1;
 *EP$1 = (uint32)((((int64)*(int32*)((uint8*)&X$1 + 4ll) >> (20ll & 63ll)) & 2047ll) + -1022ll);
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) & -2146435073ll);
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) | 1071644672ll);
 fb$result$1 = *(double*)&X$1;
 goto label$3803;
 label$3803:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_FREXPEiPi( struct $12SYSTEM_BUS_T* THIS$1, int32 D$1, int32* EP$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3806:;
 static union $5CHEAT X$1;
 if( (int64)D$1 != 0ll ) goto label$3809;
 {
  *EP$1 = 0;
  fb$result$1 = 0x0p+0;
  goto label$3807;
 }
 label$3809:;
 label$3808:;
 *(double*)&X$1 = (double)D$1;
 *EP$1 = (int32)((((int64)*(int32*)((uint8*)&X$1 + 4ll) >> (20ll & 63ll)) & 2047ll) + -1022ll);
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) & -2146435073ll);
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) | 1071644672ll);
 fb$result$1 = *(double*)&X$1;
 goto label$3807;
 label$3807:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_FREXPEyPy( struct $12SYSTEM_BUS_T* THIS$1, uint64 D$1, uint64* EP$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3810:;
 static union $5CHEAT X$1;
 if( D$1 != 0ull ) goto label$3813;
 {
  *EP$1 = 0ull;
  fb$result$1 = 0x0p+0;
  goto label$3811;
 }
 label$3813:;
 label$3812:;
 *(double*)&X$1 = (double)D$1;
 *EP$1 = (uint64)((((int64)*(int32*)((uint8*)&X$1 + 4ll) >> (20ll & 63ll)) & 2047ll) + -1022ll);
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) & -2146435073ll);
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) | 1071644672ll);
 fb$result$1 = *(double*)&X$1;
 goto label$3811;
 label$3811:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_FREXPExPx( struct $12SYSTEM_BUS_T* THIS$1, int64 D$1, int64* EP$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3814:;
 static union $5CHEAT X$1;
 if( D$1 != 0ll ) goto label$3817;
 {
  *EP$1 = 0ll;
  fb$result$1 = 0x0p+0;
  goto label$3815;
 }
 label$3817:;
 label$3816:;
 *(double*)&X$1 = (double)D$1;
 *EP$1 = (((int64)*(int32*)((uint8*)&X$1 + 4ll) >> (20ll & 63ll)) & 2047ll) + -1022ll;
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) & -2146435073ll);
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) | 1071644672ll);
 fb$result$1 = *(double*)&X$1;
 goto label$3815;
 label$3815:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_FREXPEfPf( struct $12SYSTEM_BUS_T* THIS$1, float D$1, float* EP$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3818:;
 static union $5CHEAT X$1;
 if( D$1 != 0x0p+0f ) goto label$3821;
 {
  *EP$1 = 0x0p+0f;
  fb$result$1 = 0x0p+0;
  goto label$3819;
 }
 label$3821:;
 label$3820:;
 *(double*)&X$1 = (double)D$1;
 *EP$1 = (float)((((int64)*(int32*)((uint8*)&X$1 + 4ll) >> (20ll & 63ll)) & 2047ll) + -1022ll);
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) & -2146435073ll);
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) | 1071644672ll);
 fb$result$1 = *(double*)&X$1;
 goto label$3819;
 label$3819:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_FREXPEdPd( struct $12SYSTEM_BUS_T* THIS$1, double D$1, double* EP$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3822:;
 static union $5CHEAT X$1;
 if( D$1 != 0x0p+0 ) goto label$3825;
 {
  *EP$1 = 0x0p+0;
  fb$result$1 = 0x0p+0;
  goto label$3823;
 }
 label$3825:;
 label$3824:;
 *(double*)&X$1 = D$1;
 *EP$1 = (double)((((int64)*(int32*)((uint8*)&X$1 + 4ll) >> (20ll & 63ll)) & 2047ll) + -1022ll);
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) & -2146435073ll);
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) | 1071644672ll);
 fb$result$1 = *(double*)&X$1;
 goto label$3823;
 label$3823:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_FREXPER9_FLOAT128PS0_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* D$1, struct $9_FLOAT128* EP$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3826:;
 static union $5CHEAT X$1;
 uint64 vr$1 = _ZN9_FLOAT128cvyEv( D$1 );
 if( vr$1 != 0ull ) goto label$3829;
 {
  _ZN9_FLOAT128aSEy( EP$1, 0ull );
  fb$result$1 = 0x0p+0;
  goto label$3827;
 }
 label$3829:;
 label$3828:;
 uint64 vr$2 = _ZN9_FLOAT128cvyEv( D$1 );
 *(double*)&X$1 = (double)vr$2;
 _ZN9_FLOAT128aSEy( EP$1, (uint64)((((int64)*(int32*)((uint8*)&X$1 + 4ll) >> (20ll & 63ll)) & 2047ll) + -1022ll) );
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) & -2146435073ll);
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) | 1071644672ll);
 fb$result$1 = *(double*)&X$1;
 goto label$3827;
 label$3827:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_FREXPER9_FLOAT256PS0_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* D$1, struct $9_FLOAT256* EP$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3830:;
 static union $5CHEAT X$1;
 uint64 vr$1 = _ZN9_FLOAT256cvyEv( D$1 );
 if( vr$1 != 0ull ) goto label$3833;
 {
  _ZN9_FLOAT256aSEy( EP$1, 0ull );
  fb$result$1 = 0x0p+0;
  goto label$3831;
 }
 label$3833:;
 label$3832:;
 uint64 vr$2 = _ZN9_FLOAT256cvyEv( D$1 );
 *(double*)&X$1 = (double)vr$2;
 _ZN9_FLOAT256aSEy( EP$1, (uint64)((((int64)*(int32*)((uint8*)&X$1 + 4ll) >> (20ll & 63ll)) & 2047ll) + -1022ll) );
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) & -2146435073ll);
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) | 1071644672ll);
 fb$result$1 = *(double*)&X$1;
 goto label$3831;
 label$3831:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_FREXPER9_FLOAT512PS0_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* D$1, struct $9_FLOAT512* EP$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3834:;
 static union $5CHEAT X$1;
 uint64 vr$1 = _ZN9_FLOAT512cvyEv( D$1 );
 if( vr$1 != 0ull ) goto label$3837;
 {
  _ZN9_FLOAT512aSEy( EP$1, 0ull );
  fb$result$1 = 0x0p+0;
  goto label$3835;
 }
 label$3837:;
 label$3836:;
 uint64 vr$2 = _ZN9_FLOAT512cvyEv( D$1 );
 *(double*)&X$1 = (double)vr$2;
 _ZN9_FLOAT512aSEy( EP$1, (uint64)((((int64)*(int32*)((uint8*)&X$1 + 4ll) >> (20ll & 63ll)) & 2047ll) + -1022ll) );
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) & -2146435073ll);
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) | 1071644672ll);
 fb$result$1 = *(double*)&X$1;
 goto label$3835;
 label$3835:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_LDEXPEhh( struct $12SYSTEM_BUS_T* THIS$1, uint8 D$1, uint8 E$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3838:;
 static union $5CHEAT X$1;
 if( (int64)D$1 != 0ll ) goto label$3841;
 {
  fb$result$1 = 0x0p+0;
  goto label$3839;
 }
 label$3841:;
 label$3840:;
 *(double*)&X$1 = (double)D$1;
 E$1 = (uint8)((int64)E$1 + (((int64)*(int32*)((uint8*)&X$1 + 4ll) >> (20ll & 63ll)) & 2047ll));
 if( (int64)E$1 > 0ll ) goto label$3843;
 {
  fb$result$1 = 0x0p+0;
  goto label$3839;
 }
 label$3843:;
 label$3842:;
 if( (int64)E$1 < 2047ll ) goto label$3845;
 {
  if( (int64)D$1 >= 0ll ) goto label$3847;
  {
   fb$result$1 = NEG_INF$;
   goto label$3839;
  }
  label$3847:;
  label$3846:;
  fb$result$1 = POS_INF$;
  goto label$3839;
 }
 label$3845:;
 label$3844:;
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) & -2146435073ll);
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) | ((int64)E$1 << (20ll & 63ll)));
 fb$result$1 = *(double*)&X$1;
 goto label$3839;
 label$3839:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_LDEXPEaa( struct $12SYSTEM_BUS_T* THIS$1, int8 D$1, int8 E$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3848:;
 static union $5CHEAT X$1;
 if( (int64)D$1 != 0ll ) goto label$3851;
 {
  fb$result$1 = 0x0p+0;
  goto label$3849;
 }
 label$3851:;
 label$3850:;
 *(double*)&X$1 = (double)D$1;
 E$1 = (int8)((int64)E$1 + (((int64)*(int32*)((uint8*)&X$1 + 4ll) >> (20ll & 63ll)) & 2047ll));
 if( (int64)E$1 > 0ll ) goto label$3853;
 {
  fb$result$1 = 0x0p+0;
  goto label$3849;
 }
 label$3853:;
 label$3852:;
 if( (int64)E$1 < 2047ll ) goto label$3855;
 {
  if( (int64)D$1 >= 0ll ) goto label$3857;
  {
   fb$result$1 = NEG_INF$;
   goto label$3849;
  }
  label$3857:;
  label$3856:;
  fb$result$1 = POS_INF$;
  goto label$3849;
 }
 label$3855:;
 label$3854:;
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) & -2146435073ll);
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) | ((int64)E$1 << (20ll & 63ll)));
 fb$result$1 = *(double*)&X$1;
 goto label$3849;
 label$3849:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_LDEXPEtt( struct $12SYSTEM_BUS_T* THIS$1, uint16 D$1, uint16 E$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3858:;
 static union $5CHEAT X$1;
 if( (int64)D$1 != 0ll ) goto label$3861;
 {
  fb$result$1 = 0x0p+0;
  goto label$3859;
 }
 label$3861:;
 label$3860:;
 *(double*)&X$1 = (double)D$1;
 E$1 = (uint16)((int64)E$1 + (((int64)*(int32*)((uint8*)&X$1 + 4ll) >> (20ll & 63ll)) & 2047ll));
 if( (int64)E$1 > 0ll ) goto label$3863;
 {
  fb$result$1 = 0x0p+0;
  goto label$3859;
 }
 label$3863:;
 label$3862:;
 if( (int64)E$1 < 2047ll ) goto label$3865;
 {
  if( (int64)D$1 >= 0ll ) goto label$3867;
  {
   fb$result$1 = NEG_INF$;
   goto label$3859;
  }
  label$3867:;
  label$3866:;
  fb$result$1 = POS_INF$;
  goto label$3859;
 }
 label$3865:;
 label$3864:;
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) & -2146435073ll);
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) | ((int64)E$1 << (20ll & 63ll)));
 fb$result$1 = *(double*)&X$1;
 goto label$3859;
 label$3859:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_LDEXPEss( struct $12SYSTEM_BUS_T* THIS$1, int16 D$1, int16 E$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3868:;
 static union $5CHEAT X$1;
 if( (int64)D$1 != 0ll ) goto label$3871;
 {
  fb$result$1 = 0x0p+0;
  goto label$3869;
 }
 label$3871:;
 label$3870:;
 *(double*)&X$1 = (double)D$1;
 E$1 = (int16)((int64)E$1 + (((int64)*(int32*)((uint8*)&X$1 + 4ll) >> (20ll & 63ll)) & 2047ll));
 if( (int64)E$1 > 0ll ) goto label$3873;
 {
  fb$result$1 = 0x0p+0;
  goto label$3869;
 }
 label$3873:;
 label$3872:;
 if( (int64)E$1 < 2047ll ) goto label$3875;
 {
  if( (int64)D$1 >= 0ll ) goto label$3877;
  {
   fb$result$1 = NEG_INF$;
   goto label$3869;
  }
  label$3877:;
  label$3876:;
  fb$result$1 = POS_INF$;
  goto label$3869;
 }
 label$3875:;
 label$3874:;
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) & -2146435073ll);
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) | ((int64)E$1 << (20ll & 63ll)));
 fb$result$1 = *(double*)&X$1;
 goto label$3869;
 label$3869:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_LDEXPEjj( struct $12SYSTEM_BUS_T* THIS$1, uint32 D$1, uint32 E$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3878:;
 static union $5CHEAT X$1;
 if( (int64)D$1 != 0ll ) goto label$3881;
 {
  fb$result$1 = 0x0p+0;
  goto label$3879;
 }
 label$3881:;
 label$3880:;
 *(double*)&X$1 = (double)D$1;
 E$1 = (uint32)((int64)E$1 + (((int64)*(int32*)((uint8*)&X$1 + 4ll) >> (20ll & 63ll)) & 2047ll));
 if( (int64)E$1 > 0ll ) goto label$3883;
 {
  fb$result$1 = 0x0p+0;
  goto label$3879;
 }
 label$3883:;
 label$3882:;
 if( (int64)E$1 < 2047ll ) goto label$3885;
 {
  if( (int64)D$1 >= 0ll ) goto label$3887;
  {
   fb$result$1 = NEG_INF$;
   goto label$3879;
  }
  label$3887:;
  label$3886:;
  fb$result$1 = POS_INF$;
  goto label$3879;
 }
 label$3885:;
 label$3884:;
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) & -2146435073ll);
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) | ((int64)E$1 << (20ll & 63ll)));
 fb$result$1 = *(double*)&X$1;
 goto label$3879;
 label$3879:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_LDEXPEii( struct $12SYSTEM_BUS_T* THIS$1, int32 D$1, int32 E$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3888:;
 static union $5CHEAT X$1;
 if( (int64)D$1 != 0ll ) goto label$3891;
 {
  fb$result$1 = 0x0p+0;
  goto label$3889;
 }
 label$3891:;
 label$3890:;
 *(double*)&X$1 = (double)D$1;
 E$1 = (int32)((int64)E$1 + (((int64)*(int32*)((uint8*)&X$1 + 4ll) >> (20ll & 63ll)) & 2047ll));
 if( (int64)E$1 > 0ll ) goto label$3893;
 {
  fb$result$1 = 0x0p+0;
  goto label$3889;
 }
 label$3893:;
 label$3892:;
 if( (int64)E$1 < 2047ll ) goto label$3895;
 {
  if( (int64)D$1 >= 0ll ) goto label$3897;
  {
   fb$result$1 = NEG_INF$;
   goto label$3889;
  }
  label$3897:;
  label$3896:;
  fb$result$1 = POS_INF$;
  goto label$3889;
 }
 label$3895:;
 label$3894:;
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) & -2146435073ll);
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) | ((int64)E$1 << (20ll & 63ll)));
 fb$result$1 = *(double*)&X$1;
 goto label$3889;
 label$3889:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_LDEXPEyy( struct $12SYSTEM_BUS_T* THIS$1, uint64 D$1, uint64 E$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3898:;
 static union $5CHEAT X$1;
 if( D$1 != 0ull ) goto label$3901;
 {
  fb$result$1 = 0x0p+0;
  goto label$3899;
 }
 label$3901:;
 label$3900:;
 *(double*)&X$1 = (double)D$1;
 E$1 = E$1 + (uint64)(((int64)*(int32*)((uint8*)&X$1 + 4ll) >> (20ll & 63ll)) & 2047ll);
 if( E$1 > 0ull ) goto label$3903;
 {
  fb$result$1 = 0x0p+0;
  goto label$3899;
 }
 label$3903:;
 label$3902:;
 if( E$1 < 2047ull ) goto label$3905;
 {
  if( D$1 >= 0ull ) goto label$3907;
  {
   fb$result$1 = NEG_INF$;
   goto label$3899;
  }
  label$3907:;
  label$3906:;
  fb$result$1 = POS_INF$;
  goto label$3899;
 }
 label$3905:;
 label$3904:;
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) & -2146435073ll);
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((uint64)(int64)*(int32*)((uint8*)&X$1 + 4ll) | (E$1 << (20ll & 63ll)));
 fb$result$1 = *(double*)&X$1;
 goto label$3899;
 label$3899:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_LDEXPExx( struct $12SYSTEM_BUS_T* THIS$1, int64 D$1, int64 E$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3908:;
 static union $5CHEAT X$1;
 if( D$1 != 0ll ) goto label$3911;
 {
  fb$result$1 = 0x0p+0;
  goto label$3909;
 }
 label$3911:;
 label$3910:;
 *(double*)&X$1 = (double)D$1;
 E$1 = E$1 + (((int64)*(int32*)((uint8*)&X$1 + 4ll) >> (20ll & 63ll)) & 2047ll);
 if( E$1 > 0ll ) goto label$3913;
 {
  fb$result$1 = 0x0p+0;
  goto label$3909;
 }
 label$3913:;
 label$3912:;
 if( E$1 < 2047ll ) goto label$3915;
 {
  if( D$1 >= 0ll ) goto label$3917;
  {
   fb$result$1 = NEG_INF$;
   goto label$3909;
  }
  label$3917:;
  label$3916:;
  fb$result$1 = POS_INF$;
  goto label$3909;
 }
 label$3915:;
 label$3914:;
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) & -2146435073ll);
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) | (E$1 << (20ll & 63ll)));
 fb$result$1 = *(double*)&X$1;
 goto label$3909;
 label$3909:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_LDEXPEff( struct $12SYSTEM_BUS_T* THIS$1, float D$1, float E$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3918:;
 static union $5CHEAT X$1;
 if( D$1 != 0x0p+0f ) goto label$3921;
 {
  fb$result$1 = 0x0p+0;
  goto label$3919;
 }
 label$3921:;
 label$3920:;
 *(double*)&X$1 = (double)D$1;
 E$1 = E$1 + (float)(((int64)*(int32*)((uint8*)&X$1 + 4ll) >> (20ll & 63ll)) & 2047ll);
 if( E$1 > 0x0p+0f ) goto label$3923;
 {
  fb$result$1 = 0x0p+0;
  goto label$3919;
 }
 label$3923:;
 label$3922:;
 if( E$1 < 0x1.FFCp+10f ) goto label$3925;
 {
  if( D$1 >= 0x0p+0f ) goto label$3927;
  {
   fb$result$1 = NEG_INF$;
   goto label$3919;
  }
  label$3927:;
  label$3926:;
  fb$result$1 = POS_INF$;
  goto label$3919;
 }
 label$3925:;
 label$3924:;
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) & -2146435073ll);
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) | (((int64)__builtin_nearbyintf( E$1 )) << (20ll & 63ll)));
 fb$result$1 = *(double*)&X$1;
 goto label$3919;
 label$3919:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_LDEXPEdd( struct $12SYSTEM_BUS_T* THIS$1, double D$1, double E$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3928:;
 static union $5CHEAT X$1;
 if( D$1 != 0x0p+0 ) goto label$3931;
 {
  fb$result$1 = 0x0p+0;
  goto label$3929;
 }
 label$3931:;
 label$3930:;
 *(double*)&X$1 = D$1;
 E$1 = E$1 + (double)(((int64)*(int32*)((uint8*)&X$1 + 4ll) >> (20ll & 63ll)) & 2047ll);
 if( E$1 > 0x0p+0 ) goto label$3933;
 {
  fb$result$1 = 0x0p+0;
  goto label$3929;
 }
 label$3933:;
 label$3932:;
 if( E$1 < 0x1.FFCp+10 ) goto label$3935;
 {
  if( D$1 >= 0x0p+0 ) goto label$3937;
  {
   fb$result$1 = NEG_INF$;
   goto label$3929;
  }
  label$3937:;
  label$3936:;
  fb$result$1 = POS_INF$;
  goto label$3929;
 }
 label$3935:;
 label$3934:;
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) & -2146435073ll);
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) | (((int64)__builtin_nearbyint( E$1 )) << (20ll & 63ll)));
 fb$result$1 = *(double*)&X$1;
 goto label$3929;
 label$3929:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_LDEXPER9_FLOAT128S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* D$1, struct $9_FLOAT128* E$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3938:;
 static union $5CHEAT X$1;
 uint64 vr$1 = _ZN9_FLOAT128cvyEv( D$1 );
 if( vr$1 != 0ull ) goto label$3941;
 {
  fb$result$1 = 0x0p+0;
  goto label$3939;
 }
 label$3941:;
 label$3940:;
 uint64 vr$2 = _ZN9_FLOAT128cvyEv( D$1 );
 *(double*)&X$1 = (double)vr$2;
 _ZN9_FLOAT128pLEy( E$1, (uint64)(((int64)*(int32*)((uint8*)&X$1 + 4ll) >> (20ll & 63ll)) & 2047ll) );
 uint64 vr$7 = _ZN9_FLOAT128cvyEv( E$1 );
 if( vr$7 > 0ull ) goto label$3943;
 {
  fb$result$1 = 0x0p+0;
  goto label$3939;
 }
 label$3943:;
 label$3942:;
 uint64 vr$8 = _ZN9_FLOAT128cvyEv( E$1 );
 if( vr$8 < 2047ull ) goto label$3945;
 {
  uint64 vr$9 = _ZN9_FLOAT128cvyEv( D$1 );
  if( vr$9 >= 0ull ) goto label$3947;
  {
   fb$result$1 = NEG_INF$;
   goto label$3939;
  }
  label$3947:;
  label$3946:;
  fb$result$1 = POS_INF$;
  goto label$3939;
 }
 label$3945:;
 label$3944:;
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) & -2146435073ll);
 uint64 vr$14 = _ZN9_FLOAT128cvyEv( E$1 );
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((uint64)(int64)*(int32*)((uint8*)&X$1 + 4ll) | (vr$14 << (20ll & 63ll)));
 fb$result$1 = *(double*)&X$1;
 goto label$3939;
 label$3939:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_LDEXPER9_FLOAT256S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* D$1, struct $9_FLOAT256* E$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3948:;
 static union $5CHEAT X$1;
 uint64 vr$1 = _ZN9_FLOAT256cvyEv( D$1 );
 if( vr$1 != 0ull ) goto label$3951;
 {
  fb$result$1 = 0x0p+0;
  goto label$3949;
 }
 label$3951:;
 label$3950:;
 uint64 vr$2 = _ZN9_FLOAT256cvyEv( D$1 );
 *(double*)&X$1 = (double)vr$2;
 _ZN9_FLOAT256pLEy( E$1, (uint64)(((int64)*(int32*)((uint8*)&X$1 + 4ll) >> (20ll & 63ll)) & 2047ll) );
 uint64 vr$7 = _ZN9_FLOAT256cvyEv( E$1 );
 if( vr$7 > 0ull ) goto label$3953;
 {
  fb$result$1 = 0x0p+0;
  goto label$3949;
 }
 label$3953:;
 label$3952:;
 uint64 vr$8 = _ZN9_FLOAT256cvyEv( E$1 );
 if( vr$8 < 2047ull ) goto label$3955;
 {
  uint64 vr$9 = _ZN9_FLOAT256cvyEv( D$1 );
  if( vr$9 >= 0ull ) goto label$3957;
  {
   fb$result$1 = NEG_INF$;
   goto label$3949;
  }
  label$3957:;
  label$3956:;
  fb$result$1 = POS_INF$;
  goto label$3949;
 }
 label$3955:;
 label$3954:;
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) & -2146435073ll);
 uint64 vr$14 = _ZN9_FLOAT256cvyEv( E$1 );
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((uint64)(int64)*(int32*)((uint8*)&X$1 + 4ll) | (vr$14 << (20ll & 63ll)));
 fb$result$1 = *(double*)&X$1;
 goto label$3949;
 label$3949:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_LDEXPER9_FLOAT512S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* D$1, struct $9_FLOAT512* E$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3958:;
 static union $5CHEAT X$1;
 uint64 vr$1 = _ZN9_FLOAT512cvyEv( D$1 );
 if( vr$1 != 0ull ) goto label$3961;
 {
  fb$result$1 = 0x0p+0;
  goto label$3959;
 }
 label$3961:;
 label$3960:;
 uint64 vr$2 = _ZN9_FLOAT512cvyEv( D$1 );
 *(double*)&X$1 = (double)vr$2;
 _ZN9_FLOAT512pLEy( E$1, (uint64)(((int64)*(int32*)((uint8*)&X$1 + 4ll) >> (20ll & 63ll)) & 2047ll) );
 uint64 vr$7 = _ZN9_FLOAT512cvyEv( E$1 );
 if( vr$7 > 0ull ) goto label$3963;
 {
  fb$result$1 = 0x0p+0;
  goto label$3959;
 }
 label$3963:;
 label$3962:;
 uint64 vr$8 = _ZN9_FLOAT512cvyEv( E$1 );
 if( vr$8 < 2047ull ) goto label$3965;
 {
  uint64 vr$9 = _ZN9_FLOAT512cvyEv( D$1 );
  if( vr$9 >= 0ull ) goto label$3967;
  {
   fb$result$1 = NEG_INF$;
   goto label$3959;
  }
  label$3967:;
  label$3966:;
  fb$result$1 = POS_INF$;
  goto label$3959;
 }
 label$3965:;
 label$3964:;
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) & -2146435073ll);
 uint64 vr$14 = _ZN9_FLOAT512cvyEv( E$1 );
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((uint64)(int64)*(int32*)((uint8*)&X$1 + 4ll) | (vr$14 << (20ll & 63ll)));
 fb$result$1 = *(double*)&X$1;
 goto label$3959;
 label$3959:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_SQRTFEh( struct $12SYSTEM_BUS_T* THIS$1, uint8 ARG$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3968:;
 static double X$1;
 static double TEMP$1;
 static double _EXP$1;
 static double I$1;
 if( (int64)ARG$1 > 0ll ) goto label$3971;
 {
  if( (int64)ARG$1 >= 0ll ) goto label$3973;
  {
   fb$result$1 = 0x0p+0;
   goto label$3969;
  }
  label$3973:;
  label$3972:;
  fb$result$1 = 0x0p+0;
  goto label$3969;
 }
 label$3971:;
 label$3970:;
 double vr$4 = _ZN12SYSTEM_BUS_T7K_FREXPEdPd( THIS$1, (double)ARG$1, &_EXP$1 );
 X$1 = vr$4;
 label$3974:;
 if( X$1 >= 0x1.p-1 ) goto label$3975;
 {
  X$1 = X$1 * 0x1.p+1;
  _EXP$1 = _EXP$1 + -0x1.p+0;
 }
 goto label$3974;
 label$3975:;
 if( (((int64)__builtin_nearbyint( _EXP$1 )) & 1ll) == 0ll ) goto label$3977;
 {
  X$1 = X$1 * 0x1.p+1;
  _EXP$1 = _EXP$1 + -0x1.p+0;
 }
 label$3977:;
 label$3976:;
 TEMP$1 = (X$1 * 0x1.p-1) + 0x1.p-1;
 label$3978:;
 if( _EXP$1 <= 0x1.Ep+5 ) goto label$3979;
 {
  TEMP$1 = TEMP$1 * 0x1.p+30;
  _EXP$1 = _EXP$1 + -0x1.Ep+5;
 }
 goto label$3978;
 label$3979:;
 label$3980:;
 if( _EXP$1 >= -0x1.Ep+5 ) goto label$3981;
 {
  TEMP$1 = TEMP$1 / 0x1.p+30;
  _EXP$1 = _EXP$1 + 0x1.Ep+5;
 }
 goto label$3980;
 label$3981:;
 if( _EXP$1 < 0x0p+0 ) goto label$3983;
 {
  TEMP$1 = TEMP$1 * (double)(1ll << (((int64)__builtin_nearbyint( _EXP$1 / 0x1.p+1 )) & 63ll));
 }
 goto label$3982;
 label$3983:;
 {
  TEMP$1 = TEMP$1 / (double)(1ll << (((int64)__builtin_nearbyint( -_EXP$1 / 0x1.p+1 )) & 63ll));
 }
 label$3982:;
 {
  I$1 = 0x0p+0;
  label$3987:;
  {
   TEMP$1 = (TEMP$1 + ((double)(int64)ARG$1 / TEMP$1)) * 0x1.p-1;
  }
  label$3985:;
  I$1 = I$1 + 0x1.p+0;
  label$3984:;
  if( I$1 <= 0x1.p+2 ) goto label$3987;
  label$3986:;
 }
 fb$result$1 = TEMP$1;
 goto label$3969;
 label$3969:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_SQRTFEa( struct $12SYSTEM_BUS_T* THIS$1, int8 ARG$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3988:;
 static double X$1;
 static double TEMP$1;
 static double _EXP$1;
 static double I$1;
 if( (int64)ARG$1 > 0ll ) goto label$3991;
 {
  if( (int64)ARG$1 >= 0ll ) goto label$3993;
  {
   fb$result$1 = 0x0p+0;
   goto label$3989;
  }
  label$3993:;
  label$3992:;
  fb$result$1 = 0x0p+0;
  goto label$3989;
 }
 label$3991:;
 label$3990:;
 double vr$4 = _ZN12SYSTEM_BUS_T7K_FREXPEdPd( THIS$1, (double)ARG$1, &_EXP$1 );
 X$1 = vr$4;
 label$3994:;
 if( X$1 >= 0x1.p-1 ) goto label$3995;
 {
  X$1 = X$1 * 0x1.p+1;
  _EXP$1 = _EXP$1 + -0x1.p+0;
 }
 goto label$3994;
 label$3995:;
 if( (((int64)__builtin_nearbyint( _EXP$1 )) & 1ll) == 0ll ) goto label$3997;
 {
  X$1 = X$1 * 0x1.p+1;
  _EXP$1 = _EXP$1 + -0x1.p+0;
 }
 label$3997:;
 label$3996:;
 TEMP$1 = (X$1 * 0x1.p-1) + 0x1.p-1;
 label$3998:;
 if( _EXP$1 <= 0x1.Ep+5 ) goto label$3999;
 {
  TEMP$1 = TEMP$1 * 0x1.p+30;
  _EXP$1 = _EXP$1 + -0x1.Ep+5;
 }
 goto label$3998;
 label$3999:;
 label$4000:;
 if( _EXP$1 >= -0x1.Ep+5 ) goto label$4001;
 {
  TEMP$1 = TEMP$1 / 0x1.p+30;
  _EXP$1 = _EXP$1 + 0x1.Ep+5;
 }
 goto label$4000;
 label$4001:;
 if( _EXP$1 < 0x0p+0 ) goto label$4003;
 {
  TEMP$1 = TEMP$1 * (double)(1ll << (((int64)__builtin_nearbyint( _EXP$1 / 0x1.p+1 )) & 63ll));
 }
 goto label$4002;
 label$4003:;
 {
  TEMP$1 = TEMP$1 / (double)(1ll << (((int64)__builtin_nearbyint( -_EXP$1 / 0x1.p+1 )) & 63ll));
 }
 label$4002:;
 {
  I$1 = 0x0p+0;
  label$4007:;
  {
   TEMP$1 = (TEMP$1 + ((double)(int64)ARG$1 / TEMP$1)) * 0x1.p-1;
  }
  label$4005:;
  I$1 = I$1 + 0x1.p+0;
  label$4004:;
  if( I$1 <= 0x1.p+2 ) goto label$4007;
  label$4006:;
 }
 fb$result$1 = TEMP$1;
 goto label$3989;
 label$3989:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_SQRTFEt( struct $12SYSTEM_BUS_T* THIS$1, uint16 ARG$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4008:;
 static double X$1;
 static double TEMP$1;
 static double _EXP$1;
 static double I$1;
 if( (int64)ARG$1 > 0ll ) goto label$4011;
 {
  if( (int64)ARG$1 >= 0ll ) goto label$4013;
  {
   fb$result$1 = 0x0p+0;
   goto label$4009;
  }
  label$4013:;
  label$4012:;
  fb$result$1 = 0x0p+0;
  goto label$4009;
 }
 label$4011:;
 label$4010:;
 double vr$4 = _ZN12SYSTEM_BUS_T7K_FREXPEdPd( THIS$1, (double)ARG$1, &_EXP$1 );
 X$1 = vr$4;
 label$4014:;
 if( X$1 >= 0x1.p-1 ) goto label$4015;
 {
  X$1 = X$1 * 0x1.p+1;
  _EXP$1 = _EXP$1 + -0x1.p+0;
 }
 goto label$4014;
 label$4015:;
 if( (((int64)__builtin_nearbyint( _EXP$1 )) & 1ll) == 0ll ) goto label$4017;
 {
  X$1 = X$1 * 0x1.p+1;
  _EXP$1 = _EXP$1 + -0x1.p+0;
 }
 label$4017:;
 label$4016:;
 TEMP$1 = (X$1 * 0x1.p-1) + 0x1.p-1;
 label$4018:;
 if( _EXP$1 <= 0x1.Ep+5 ) goto label$4019;
 {
  TEMP$1 = TEMP$1 * 0x1.p+30;
  _EXP$1 = _EXP$1 + -0x1.Ep+5;
 }
 goto label$4018;
 label$4019:;
 label$4020:;
 if( _EXP$1 >= -0x1.Ep+5 ) goto label$4021;
 {
  TEMP$1 = TEMP$1 / 0x1.p+30;
  _EXP$1 = _EXP$1 + 0x1.Ep+5;
 }
 goto label$4020;
 label$4021:;
 if( _EXP$1 < 0x0p+0 ) goto label$4023;
 {
  TEMP$1 = TEMP$1 * (double)(1ll << (((int64)__builtin_nearbyint( _EXP$1 / 0x1.p+1 )) & 63ll));
 }
 goto label$4022;
 label$4023:;
 {
  TEMP$1 = TEMP$1 / (double)(1ll << (((int64)__builtin_nearbyint( -_EXP$1 / 0x1.p+1 )) & 63ll));
 }
 label$4022:;
 {
  I$1 = 0x0p+0;
  label$4027:;
  {
   TEMP$1 = (TEMP$1 + ((double)(int64)ARG$1 / TEMP$1)) * 0x1.p-1;
  }
  label$4025:;
  I$1 = I$1 + 0x1.p+0;
  label$4024:;
  if( I$1 <= 0x1.p+2 ) goto label$4027;
  label$4026:;
 }
 fb$result$1 = TEMP$1;
 goto label$4009;
 label$4009:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_SQRTFEs( struct $12SYSTEM_BUS_T* THIS$1, int16 ARG$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4028:;
 static double X$1;
 static double TEMP$1;
 static double _EXP$1;
 static double I$1;
 if( (int64)ARG$1 > 0ll ) goto label$4031;
 {
  if( (int64)ARG$1 >= 0ll ) goto label$4033;
  {
   fb$result$1 = 0x0p+0;
   goto label$4029;
  }
  label$4033:;
  label$4032:;
  fb$result$1 = 0x0p+0;
  goto label$4029;
 }
 label$4031:;
 label$4030:;
 double vr$4 = _ZN12SYSTEM_BUS_T7K_FREXPEdPd( THIS$1, (double)ARG$1, &_EXP$1 );
 X$1 = vr$4;
 label$4034:;
 if( X$1 >= 0x1.p-1 ) goto label$4035;
 {
  X$1 = X$1 * 0x1.p+1;
  _EXP$1 = _EXP$1 + -0x1.p+0;
 }
 goto label$4034;
 label$4035:;
 if( (((int64)__builtin_nearbyint( _EXP$1 )) & 1ll) == 0ll ) goto label$4037;
 {
  X$1 = X$1 * 0x1.p+1;
  _EXP$1 = _EXP$1 + -0x1.p+0;
 }
 label$4037:;
 label$4036:;
 TEMP$1 = (X$1 * 0x1.p-1) + 0x1.p-1;
 label$4038:;
 if( _EXP$1 <= 0x1.Ep+5 ) goto label$4039;
 {
  TEMP$1 = TEMP$1 * 0x1.p+30;
  _EXP$1 = _EXP$1 + -0x1.Ep+5;
 }
 goto label$4038;
 label$4039:;
 label$4040:;
 if( _EXP$1 >= -0x1.Ep+5 ) goto label$4041;
 {
  TEMP$1 = TEMP$1 / 0x1.p+30;
  _EXP$1 = _EXP$1 + 0x1.Ep+5;
 }
 goto label$4040;
 label$4041:;
 if( _EXP$1 < 0x0p+0 ) goto label$4043;
 {
  TEMP$1 = TEMP$1 * (double)(1ll << (((int64)__builtin_nearbyint( _EXP$1 / 0x1.p+1 )) & 63ll));
 }
 goto label$4042;
 label$4043:;
 {
  TEMP$1 = TEMP$1 / (double)(1ll << (((int64)__builtin_nearbyint( -_EXP$1 / 0x1.p+1 )) & 63ll));
 }
 label$4042:;
 {
  I$1 = 0x0p+0;
  label$4047:;
  {
   TEMP$1 = (TEMP$1 + ((double)(int64)ARG$1 / TEMP$1)) * 0x1.p-1;
  }
  label$4045:;
  I$1 = I$1 + 0x1.p+0;
  label$4044:;
  if( I$1 <= 0x1.p+2 ) goto label$4047;
  label$4046:;
 }
 fb$result$1 = TEMP$1;
 goto label$4029;
 label$4029:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_SQRTFEj( struct $12SYSTEM_BUS_T* THIS$1, uint32 ARG$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4048:;
 static double X$1;
 static double TEMP$1;
 static double _EXP$1;
 static double I$1;
 if( (int64)ARG$1 > 0ll ) goto label$4051;
 {
  if( (int64)ARG$1 >= 0ll ) goto label$4053;
  {
   fb$result$1 = 0x0p+0;
   goto label$4049;
  }
  label$4053:;
  label$4052:;
  fb$result$1 = 0x0p+0;
  goto label$4049;
 }
 label$4051:;
 label$4050:;
 double vr$4 = _ZN12SYSTEM_BUS_T7K_FREXPEdPd( THIS$1, (double)ARG$1, &_EXP$1 );
 X$1 = vr$4;
 label$4054:;
 if( X$1 >= 0x1.p-1 ) goto label$4055;
 {
  X$1 = X$1 * 0x1.p+1;
  _EXP$1 = _EXP$1 + -0x1.p+0;
 }
 goto label$4054;
 label$4055:;
 if( (((int64)__builtin_nearbyint( _EXP$1 )) & 1ll) == 0ll ) goto label$4057;
 {
  X$1 = X$1 * 0x1.p+1;
  _EXP$1 = _EXP$1 + -0x1.p+0;
 }
 label$4057:;
 label$4056:;
 TEMP$1 = (X$1 * 0x1.p-1) + 0x1.p-1;
 label$4058:;
 if( _EXP$1 <= 0x1.Ep+5 ) goto label$4059;
 {
  TEMP$1 = TEMP$1 * 0x1.p+30;
  _EXP$1 = _EXP$1 + -0x1.Ep+5;
 }
 goto label$4058;
 label$4059:;
 label$4060:;
 if( _EXP$1 >= -0x1.Ep+5 ) goto label$4061;
 {
  TEMP$1 = TEMP$1 / 0x1.p+30;
  _EXP$1 = _EXP$1 + 0x1.Ep+5;
 }
 goto label$4060;
 label$4061:;
 if( _EXP$1 < 0x0p+0 ) goto label$4063;
 {
  TEMP$1 = TEMP$1 * (double)(1ll << (((int64)__builtin_nearbyint( _EXP$1 / 0x1.p+1 )) & 63ll));
 }
 goto label$4062;
 label$4063:;
 {
  TEMP$1 = TEMP$1 / (double)(1ll << (((int64)__builtin_nearbyint( -_EXP$1 / 0x1.p+1 )) & 63ll));
 }
 label$4062:;
 {
  I$1 = 0x0p+0;
  label$4067:;
  {
   TEMP$1 = (TEMP$1 + ((double)(int64)ARG$1 / TEMP$1)) * 0x1.p-1;
  }
  label$4065:;
  I$1 = I$1 + 0x1.p+0;
  label$4064:;
  if( I$1 <= 0x1.p+2 ) goto label$4067;
  label$4066:;
 }
 fb$result$1 = TEMP$1;
 goto label$4049;
 label$4049:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_SQRTFEi( struct $12SYSTEM_BUS_T* THIS$1, int32 ARG$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4068:;
 static double X$1;
 static double TEMP$1;
 static double _EXP$1;
 static double I$1;
 if( (int64)ARG$1 > 0ll ) goto label$4071;
 {
  if( (int64)ARG$1 >= 0ll ) goto label$4073;
  {
   fb$result$1 = 0x0p+0;
   goto label$4069;
  }
  label$4073:;
  label$4072:;
  fb$result$1 = 0x0p+0;
  goto label$4069;
 }
 label$4071:;
 label$4070:;
 double vr$4 = _ZN12SYSTEM_BUS_T7K_FREXPEdPd( THIS$1, (double)ARG$1, &_EXP$1 );
 X$1 = vr$4;
 label$4074:;
 if( X$1 >= 0x1.p-1 ) goto label$4075;
 {
  X$1 = X$1 * 0x1.p+1;
  _EXP$1 = _EXP$1 + -0x1.p+0;
 }
 goto label$4074;
 label$4075:;
 if( (((int64)__builtin_nearbyint( _EXP$1 )) & 1ll) == 0ll ) goto label$4077;
 {
  X$1 = X$1 * 0x1.p+1;
  _EXP$1 = _EXP$1 + -0x1.p+0;
 }
 label$4077:;
 label$4076:;
 TEMP$1 = (X$1 * 0x1.p-1) + 0x1.p-1;
 label$4078:;
 if( _EXP$1 <= 0x1.Ep+5 ) goto label$4079;
 {
  TEMP$1 = TEMP$1 * 0x1.p+30;
  _EXP$1 = _EXP$1 + -0x1.Ep+5;
 }
 goto label$4078;
 label$4079:;
 label$4080:;
 if( _EXP$1 >= -0x1.Ep+5 ) goto label$4081;
 {
  TEMP$1 = TEMP$1 / 0x1.p+30;
  _EXP$1 = _EXP$1 + 0x1.Ep+5;
 }
 goto label$4080;
 label$4081:;
 if( _EXP$1 < 0x0p+0 ) goto label$4083;
 {
  TEMP$1 = TEMP$1 * (double)(1ll << (((int64)__builtin_nearbyint( _EXP$1 / 0x1.p+1 )) & 63ll));
 }
 goto label$4082;
 label$4083:;
 {
  TEMP$1 = TEMP$1 / (double)(1ll << (((int64)__builtin_nearbyint( -_EXP$1 / 0x1.p+1 )) & 63ll));
 }
 label$4082:;
 {
  I$1 = 0x0p+0;
  label$4087:;
  {
   TEMP$1 = (TEMP$1 + ((double)(int64)ARG$1 / TEMP$1)) * 0x1.p-1;
  }
  label$4085:;
  I$1 = I$1 + 0x1.p+0;
  label$4084:;
  if( I$1 <= 0x1.p+2 ) goto label$4087;
  label$4086:;
 }
 fb$result$1 = TEMP$1;
 goto label$4069;
 label$4069:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_SQRTFEy( struct $12SYSTEM_BUS_T* THIS$1, uint64 ARG$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4088:;
 static double X$1;
 static double TEMP$1;
 static double _EXP$1;
 static double I$1;
 if( ARG$1 > 0ull ) goto label$4091;
 {
  if( ARG$1 >= 0ull ) goto label$4093;
  {
   fb$result$1 = 0x0p+0;
   goto label$4089;
  }
  label$4093:;
  label$4092:;
  fb$result$1 = 0x0p+0;
  goto label$4089;
 }
 label$4091:;
 label$4090:;
 double vr$2 = _ZN12SYSTEM_BUS_T7K_FREXPEdPd( THIS$1, (double)ARG$1, &_EXP$1 );
 X$1 = vr$2;
 label$4094:;
 if( X$1 >= 0x1.p-1 ) goto label$4095;
 {
  X$1 = X$1 * 0x1.p+1;
  _EXP$1 = _EXP$1 + -0x1.p+0;
 }
 goto label$4094;
 label$4095:;
 if( (((int64)__builtin_nearbyint( _EXP$1 )) & 1ll) == 0ll ) goto label$4097;
 {
  X$1 = X$1 * 0x1.p+1;
  _EXP$1 = _EXP$1 + -0x1.p+0;
 }
 label$4097:;
 label$4096:;
 TEMP$1 = (X$1 * 0x1.p-1) + 0x1.p-1;
 label$4098:;
 if( _EXP$1 <= 0x1.Ep+5 ) goto label$4099;
 {
  TEMP$1 = TEMP$1 * 0x1.p+30;
  _EXP$1 = _EXP$1 + -0x1.Ep+5;
 }
 goto label$4098;
 label$4099:;
 label$4100:;
 if( _EXP$1 >= -0x1.Ep+5 ) goto label$4101;
 {
  TEMP$1 = TEMP$1 / 0x1.p+30;
  _EXP$1 = _EXP$1 + 0x1.Ep+5;
 }
 goto label$4100;
 label$4101:;
 if( _EXP$1 < 0x0p+0 ) goto label$4103;
 {
  TEMP$1 = TEMP$1 * (double)(1ll << (((int64)__builtin_nearbyint( _EXP$1 / 0x1.p+1 )) & 63ll));
 }
 goto label$4102;
 label$4103:;
 {
  TEMP$1 = TEMP$1 / (double)(1ll << (((int64)__builtin_nearbyint( -_EXP$1 / 0x1.p+1 )) & 63ll));
 }
 label$4102:;
 {
  I$1 = 0x0p+0;
  label$4107:;
  {
   TEMP$1 = (TEMP$1 + ((double)ARG$1 / TEMP$1)) * 0x1.p-1;
  }
  label$4105:;
  I$1 = I$1 + 0x1.p+0;
  label$4104:;
  if( I$1 <= 0x1.p+2 ) goto label$4107;
  label$4106:;
 }
 fb$result$1 = TEMP$1;
 goto label$4089;
 label$4089:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_SQRTFEx( struct $12SYSTEM_BUS_T* THIS$1, int64 ARG$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4108:;
 static double X$1;
 static double TEMP$1;
 static double _EXP$1;
 static double I$1;
 if( ARG$1 > 0ll ) goto label$4111;
 {
  if( ARG$1 >= 0ll ) goto label$4113;
  {
   fb$result$1 = 0x0p+0;
   goto label$4109;
  }
  label$4113:;
  label$4112:;
  fb$result$1 = 0x0p+0;
  goto label$4109;
 }
 label$4111:;
 label$4110:;
 double vr$2 = _ZN12SYSTEM_BUS_T7K_FREXPEdPd( THIS$1, (double)ARG$1, &_EXP$1 );
 X$1 = vr$2;
 label$4114:;
 if( X$1 >= 0x1.p-1 ) goto label$4115;
 {
  X$1 = X$1 * 0x1.p+1;
  _EXP$1 = _EXP$1 + -0x1.p+0;
 }
 goto label$4114;
 label$4115:;
 if( (((int64)__builtin_nearbyint( _EXP$1 )) & 1ll) == 0ll ) goto label$4117;
 {
  X$1 = X$1 * 0x1.p+1;
  _EXP$1 = _EXP$1 + -0x1.p+0;
 }
 label$4117:;
 label$4116:;
 TEMP$1 = (X$1 * 0x1.p-1) + 0x1.p-1;
 label$4118:;
 if( _EXP$1 <= 0x1.Ep+5 ) goto label$4119;
 {
  TEMP$1 = TEMP$1 * 0x1.p+30;
  _EXP$1 = _EXP$1 + -0x1.Ep+5;
 }
 goto label$4118;
 label$4119:;
 label$4120:;
 if( _EXP$1 >= -0x1.Ep+5 ) goto label$4121;
 {
  TEMP$1 = TEMP$1 / 0x1.p+30;
  _EXP$1 = _EXP$1 + 0x1.Ep+5;
 }
 goto label$4120;
 label$4121:;
 if( _EXP$1 < 0x0p+0 ) goto label$4123;
 {
  TEMP$1 = TEMP$1 * (double)(1ll << (((int64)__builtin_nearbyint( _EXP$1 / 0x1.p+1 )) & 63ll));
 }
 goto label$4122;
 label$4123:;
 {
  TEMP$1 = TEMP$1 / (double)(1ll << (((int64)__builtin_nearbyint( -_EXP$1 / 0x1.p+1 )) & 63ll));
 }
 label$4122:;
 {
  I$1 = 0x0p+0;
  label$4127:;
  {
   TEMP$1 = (TEMP$1 + ((double)ARG$1 / TEMP$1)) * 0x1.p-1;
  }
  label$4125:;
  I$1 = I$1 + 0x1.p+0;
  label$4124:;
  if( I$1 <= 0x1.p+2 ) goto label$4127;
  label$4126:;
 }
 fb$result$1 = TEMP$1;
 goto label$4109;
 label$4109:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_SQRTFEf( struct $12SYSTEM_BUS_T* THIS$1, float ARG$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4128:;
 static double X$1;
 static double TEMP$1;
 static double _EXP$1;
 static double I$1;
 if( ARG$1 > 0x0p+0f ) goto label$4131;
 {
  if( ARG$1 >= 0x0p+0f ) goto label$4133;
  {
   fb$result$1 = 0x0p+0;
   goto label$4129;
  }
  label$4133:;
  label$4132:;
  fb$result$1 = 0x0p+0;
  goto label$4129;
 }
 label$4131:;
 label$4130:;
 double vr$2 = _ZN12SYSTEM_BUS_T7K_FREXPEdPd( THIS$1, (double)ARG$1, &_EXP$1 );
 X$1 = vr$2;
 label$4134:;
 if( X$1 >= 0x1.p-1 ) goto label$4135;
 {
  X$1 = X$1 * 0x1.p+1;
  _EXP$1 = _EXP$1 + -0x1.p+0;
 }
 goto label$4134;
 label$4135:;
 if( (((int64)__builtin_nearbyint( _EXP$1 )) & 1ll) == 0ll ) goto label$4137;
 {
  X$1 = X$1 * 0x1.p+1;
  _EXP$1 = _EXP$1 + -0x1.p+0;
 }
 label$4137:;
 label$4136:;
 TEMP$1 = (X$1 * 0x1.p-1) + 0x1.p-1;
 label$4138:;
 if( _EXP$1 <= 0x1.Ep+5 ) goto label$4139;
 {
  TEMP$1 = TEMP$1 * 0x1.p+30;
  _EXP$1 = _EXP$1 + -0x1.Ep+5;
 }
 goto label$4138;
 label$4139:;
 label$4140:;
 if( _EXP$1 >= -0x1.Ep+5 ) goto label$4141;
 {
  TEMP$1 = TEMP$1 / 0x1.p+30;
  _EXP$1 = _EXP$1 + 0x1.Ep+5;
 }
 goto label$4140;
 label$4141:;
 if( _EXP$1 < 0x0p+0 ) goto label$4143;
 {
  TEMP$1 = TEMP$1 * (double)(1ll << (((int64)__builtin_nearbyint( _EXP$1 / 0x1.p+1 )) & 63ll));
 }
 goto label$4142;
 label$4143:;
 {
  TEMP$1 = TEMP$1 / (double)(1ll << (((int64)__builtin_nearbyint( -_EXP$1 / 0x1.p+1 )) & 63ll));
 }
 label$4142:;
 {
  I$1 = 0x0p+0;
  label$4147:;
  {
   TEMP$1 = (TEMP$1 + ((double)ARG$1 / TEMP$1)) * 0x1.p-1;
  }
  label$4145:;
  I$1 = I$1 + 0x1.p+0;
  label$4144:;
  if( I$1 <= 0x1.p+2 ) goto label$4147;
  label$4146:;
 }
 fb$result$1 = TEMP$1;
 goto label$4129;
 label$4129:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_SQRTFEd( struct $12SYSTEM_BUS_T* THIS$1, double ARG$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4148:;
 static double X$1;
 static double TEMP$1;
 static double _EXP$1;
 static double I$1;
 if( ARG$1 > 0x0p+0 ) goto label$4151;
 {
  if( ARG$1 >= 0x0p+0 ) goto label$4153;
  {
   fb$result$1 = 0x0p+0;
   goto label$4149;
  }
  label$4153:;
  label$4152:;
  fb$result$1 = 0x0p+0;
  goto label$4149;
 }
 label$4151:;
 label$4150:;
 double vr$1 = _ZN12SYSTEM_BUS_T7K_FREXPEdPd( THIS$1, ARG$1, &_EXP$1 );
 X$1 = vr$1;
 label$4154:;
 if( X$1 >= 0x1.p-1 ) goto label$4155;
 {
  X$1 = X$1 * 0x1.p+1;
  _EXP$1 = _EXP$1 + -0x1.p+0;
 }
 goto label$4154;
 label$4155:;
 if( (((int64)__builtin_nearbyint( _EXP$1 )) & 1ll) == 0ll ) goto label$4157;
 {
  X$1 = X$1 * 0x1.p+1;
  _EXP$1 = _EXP$1 + -0x1.p+0;
 }
 label$4157:;
 label$4156:;
 TEMP$1 = (X$1 * 0x1.p-1) + 0x1.p-1;
 label$4158:;
 if( _EXP$1 <= 0x1.Ep+5 ) goto label$4159;
 {
  TEMP$1 = TEMP$1 * 0x1.p+30;
  _EXP$1 = _EXP$1 + -0x1.Ep+5;
 }
 goto label$4158;
 label$4159:;
 label$4160:;
 if( _EXP$1 >= -0x1.Ep+5 ) goto label$4161;
 {
  TEMP$1 = TEMP$1 / 0x1.p+30;
  _EXP$1 = _EXP$1 + 0x1.Ep+5;
 }
 goto label$4160;
 label$4161:;
 if( _EXP$1 < 0x0p+0 ) goto label$4163;
 {
  TEMP$1 = TEMP$1 * (double)(1ll << (((int64)__builtin_nearbyint( _EXP$1 / 0x1.p+1 )) & 63ll));
 }
 goto label$4162;
 label$4163:;
 {
  TEMP$1 = TEMP$1 / (double)(1ll << (((int64)__builtin_nearbyint( -_EXP$1 / 0x1.p+1 )) & 63ll));
 }
 label$4162:;
 {
  I$1 = 0x0p+0;
  label$4167:;
  {
   TEMP$1 = (TEMP$1 + (ARG$1 / TEMP$1)) * 0x1.p-1;
  }
  label$4165:;
  I$1 = I$1 + 0x1.p+0;
  label$4164:;
  if( I$1 <= 0x1.p+2 ) goto label$4167;
  label$4166:;
 }
 fb$result$1 = TEMP$1;
 goto label$4149;
 label$4149:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T10K_RADIANCEEh( struct $12SYSTEM_BUS_T* THIS$1, uint8 DEG$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4168:;
 fb$result$1 = ((double)(int64)DEG$1 * 0x1.921FB54442D18p+1) / 0x1.68p+7;
 goto label$4169;
 label$4169:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T10K_RADIANCEEa( struct $12SYSTEM_BUS_T* THIS$1, int8 DEG$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4170:;
 fb$result$1 = ((double)(int64)DEG$1 * 0x1.921FB54442D18p+1) / 0x1.68p+7;
 goto label$4171;
 label$4171:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T10K_RADIANCEEt( struct $12SYSTEM_BUS_T* THIS$1, uint16 DEG$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4172:;
 fb$result$1 = ((double)(int64)DEG$1 * 0x1.921FB54442D18p+1) / 0x1.68p+7;
 goto label$4173;
 label$4173:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T10K_RADIANCEEs( struct $12SYSTEM_BUS_T* THIS$1, int16 DEG$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4174:;
 fb$result$1 = ((double)(int64)DEG$1 * 0x1.921FB54442D18p+1) / 0x1.68p+7;
 goto label$4175;
 label$4175:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T10K_RADIANCEEj( struct $12SYSTEM_BUS_T* THIS$1, uint32 DEG$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4176:;
 fb$result$1 = ((double)(int64)DEG$1 * 0x1.921FB54442D18p+1) / 0x1.68p+7;
 goto label$4177;
 label$4177:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T10K_RADIANCEEi( struct $12SYSTEM_BUS_T* THIS$1, int32 DEG$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4178:;
 fb$result$1 = ((double)(int64)DEG$1 * 0x1.921FB54442D18p+1) / 0x1.68p+7;
 goto label$4179;
 label$4179:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T10K_RADIANCEEy( struct $12SYSTEM_BUS_T* THIS$1, uint64 DEG$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4180:;
 fb$result$1 = ((double)DEG$1 * 0x1.921FB54442D18p+1) / 0x1.68p+7;
 goto label$4181;
 label$4181:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T10K_RADIANCEEx( struct $12SYSTEM_BUS_T* THIS$1, int64 DEG$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4182:;
 fb$result$1 = ((double)DEG$1 * 0x1.921FB54442D18p+1) / 0x1.68p+7;
 goto label$4183;
 label$4183:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T10K_RADIANCEEf( struct $12SYSTEM_BUS_T* THIS$1, float DEG$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4184:;
 fb$result$1 = ((double)DEG$1 * 0x1.921FB54442D18p+1) / 0x1.68p+7;
 goto label$4185;
 label$4185:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T10K_RADIANCEEd( struct $12SYSTEM_BUS_T* THIS$1, double DEG$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4186:;
 fb$result$1 = (DEG$1 * 0x1.921FB54442D18p+1) / 0x1.68p+7;
 goto label$4187;
 label$4187:;
 return fb$result$1;
}

struct $7VECTOR2* _ZN12SYSTEM_BUS_T10K_RADIANCEER7VECTOR2( struct $7VECTOR2* tmp$2463$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR2* V$1 )
{
 label$4188:;
 _ZN7VECTOR2C1Edd( tmp$2463$1, (*(double*)V$1 * 0x1.921FB54442D18p+1) / 0x1.68p+7, (*(double*)((uint8*)V$1 + 8ll) * 0x1.921FB54442D18p+1) / 0x1.68p+7 );
 goto label$4189;
 label$4189:;
 return tmp$2463$1;
}

struct $7VECTOR3* _ZN12SYSTEM_BUS_T10K_RADIANCEER7VECTOR3( struct $7VECTOR3* tmp$2465$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* V$1 )
{
 label$4190:;
 _ZN7VECTOR3C1Eddd( tmp$2465$1, (*(double*)((uint8*)V$1 + 16ll) * 0x1.921FB54442D18p+1) / 0x1.68p+7, (*(double*)((uint8*)V$1 + 24ll) * 0x1.921FB54442D18p+1) / 0x1.68p+7, (*(double*)((uint8*)V$1 + 24ll) * 0x1.921FB54442D18p+1) / 0x1.68p+7 );
 goto label$4191;
 label$4191:;
 return tmp$2465$1;
}

struct $7VECTOR4* _ZN12SYSTEM_BUS_T10K_RADIANCEER7VECTOR4( struct $7VECTOR4* tmp$2467$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR4* V$1 )
{
 label$4192:;
 _ZN7VECTOR4C1Edddd( tmp$2467$1, (*(double*)((uint8*)V$1 + 40ll) * 0x1.921FB54442D18p+1) / 0x1.68p+7, (*(double*)((uint8*)V$1 + 48ll) * 0x1.921FB54442D18p+1) / 0x1.68p+7, (*(double*)((uint8*)V$1 + 48ll) * 0x1.921FB54442D18p+1) / 0x1.68p+7, (*(double*)((uint8*)V$1 + 64ll) * 0x1.921FB54442D18p+1) / 0x1.68p+7 );
 goto label$4193;
 label$4193:;
 return tmp$2467$1;
}

double _ZN12SYSTEM_BUS_T9K_DEGREESEh( struct $12SYSTEM_BUS_T* THIS$1, uint8 RAD$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4194:;
 fb$result$1 = ((double)(int64)RAD$1 * 0x1.68p+7) / 0x1.921FB54442D18p+1;
 goto label$4195;
 label$4195:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T9K_DEGREESEa( struct $12SYSTEM_BUS_T* THIS$1, int8 RAD$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4196:;
 fb$result$1 = ((double)(int64)RAD$1 * 0x1.68p+7) / 0x1.921FB54442D18p+1;
 goto label$4197;
 label$4197:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T9K_DEGREESEt( struct $12SYSTEM_BUS_T* THIS$1, uint16 RAD$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4198:;
 fb$result$1 = ((double)(int64)RAD$1 * 0x1.68p+7) / 0x1.921FB54442D18p+1;
 goto label$4199;
 label$4199:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T9K_DEGREESEs( struct $12SYSTEM_BUS_T* THIS$1, int16 RAD$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4200:;
 fb$result$1 = ((double)(int64)RAD$1 * 0x1.68p+7) / 0x1.921FB54442D18p+1;
 goto label$4201;
 label$4201:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T9K_DEGREESEj( struct $12SYSTEM_BUS_T* THIS$1, uint32 RAD$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4202:;
 fb$result$1 = ((double)(int64)RAD$1 * 0x1.68p+7) / 0x1.921FB54442D18p+1;
 goto label$4203;
 label$4203:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T9K_DEGREESEi( struct $12SYSTEM_BUS_T* THIS$1, int32 RAD$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4204:;
 fb$result$1 = ((double)(int64)RAD$1 * 0x1.68p+7) / 0x1.921FB54442D18p+1;
 goto label$4205;
 label$4205:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T9K_DEGREESEy( struct $12SYSTEM_BUS_T* THIS$1, uint64 RAD$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4206:;
 fb$result$1 = ((double)RAD$1 * 0x1.68p+7) / 0x1.921FB54442D18p+1;
 goto label$4207;
 label$4207:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T9K_DEGREESEx( struct $12SYSTEM_BUS_T* THIS$1, int64 RAD$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4208:;
 fb$result$1 = ((double)RAD$1 * 0x1.68p+7) / 0x1.921FB54442D18p+1;
 goto label$4209;
 label$4209:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T9K_DEGREESEf( struct $12SYSTEM_BUS_T* THIS$1, float RAD$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4210:;
 fb$result$1 = ((double)RAD$1 * 0x1.68p+7) / 0x1.921FB54442D18p+1;
 goto label$4211;
 label$4211:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T9K_DEGREESEd( struct $12SYSTEM_BUS_T* THIS$1, double RAD$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4212:;
 fb$result$1 = (RAD$1 * 0x1.68p+7) / 0x1.921FB54442D18p+1;
 goto label$4213;
 label$4213:;
 return fb$result$1;
}

struct $7VECTOR2* _ZN12SYSTEM_BUS_T9K_DEGREESER7VECTOR2( struct $7VECTOR2* tmp$2469$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR2* V$1 )
{
 label$4214:;
 _ZN7VECTOR2C1Edd( tmp$2469$1, (*(double*)V$1 * 0x1.68p+7) / 0x1.921FB54442D18p+1, (*(double*)((uint8*)V$1 + 8ll) * 0x1.68p+7) / 0x1.921FB54442D18p+1 );
 goto label$4215;
 label$4215:;
 return tmp$2469$1;
}

struct $7VECTOR3* _ZN12SYSTEM_BUS_T9K_DEGREESER7VECTOR3( struct $7VECTOR3* tmp$2471$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* V$1 )
{
 label$4216:;
 _ZN7VECTOR3C1Eddd( tmp$2471$1, (*(double*)((uint8*)V$1 + 16ll) * 0x1.68p+7) / 0x1.921FB54442D18p+1, (*(double*)((uint8*)V$1 + 24ll) * 0x1.68p+7) / 0x1.921FB54442D18p+1, (*(double*)((uint8*)V$1 + 24ll) * 0x1.68p+7) / 0x1.921FB54442D18p+1 );
 goto label$4217;
 label$4217:;
 return tmp$2471$1;
}

struct $7VECTOR4* _ZN12SYSTEM_BUS_T9K_DEGREESER7VECTOR4( struct $7VECTOR4* tmp$2473$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR4* V$1 )
{
 label$4218:;
 _ZN7VECTOR4C1Edddd( tmp$2473$1, (*(double*)((uint8*)V$1 + 40ll) * 0x1.68p+7) / 0x1.921FB54442D18p+1, (*(double*)((uint8*)V$1 + 48ll) * 0x1.68p+7) / 0x1.921FB54442D18p+1, (*(double*)((uint8*)V$1 + 48ll) * 0x1.68p+7) / 0x1.921FB54442D18p+1, (*(double*)((uint8*)V$1 + 64ll) * 0x1.68p+7) / 0x1.921FB54442D18p+1 );
 goto label$4219;
 label$4219:;
 return tmp$2473$1;
}

double _ZN12SYSTEM_BUS_T6K_ATANEhh( struct $12SYSTEM_BUS_T* THIS$1, uint8 X$1, uint8 Y$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4220:;
 float vr$3 = atan2f( (float)X$1, (float)Y$1 );
 fb$result$1 = (double)vr$3;
 goto label$4221;
 label$4221:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_ATANEaa( struct $12SYSTEM_BUS_T* THIS$1, int8 X$1, int8 Y$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4222:;
 float vr$3 = atan2f( (float)X$1, (float)Y$1 );
 fb$result$1 = (double)vr$3;
 goto label$4223;
 label$4223:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_ATANEtt( struct $12SYSTEM_BUS_T* THIS$1, uint16 X$1, uint16 Y$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4224:;
 float vr$3 = atan2f( (float)X$1, (float)Y$1 );
 fb$result$1 = (double)vr$3;
 goto label$4225;
 label$4225:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_ATANEss( struct $12SYSTEM_BUS_T* THIS$1, int16 X$1, int16 Y$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4226:;
 float vr$3 = atan2f( (float)X$1, (float)Y$1 );
 fb$result$1 = (double)vr$3;
 goto label$4227;
 label$4227:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_ATANEjj( struct $12SYSTEM_BUS_T* THIS$1, uint32 X$1, uint32 Y$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4228:;
 float vr$3 = atan2f( (float)X$1, (float)Y$1 );
 fb$result$1 = (double)vr$3;
 goto label$4229;
 label$4229:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_ATANEii( struct $12SYSTEM_BUS_T* THIS$1, int32 X$1, int32 Y$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4230:;
 float vr$3 = atan2f( (float)X$1, (float)Y$1 );
 fb$result$1 = (double)vr$3;
 goto label$4231;
 label$4231:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_ATANEyy( struct $12SYSTEM_BUS_T* THIS$1, uint64 X$1, uint64 Y$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4232:;
 float vr$3 = atan2f( (float)X$1, (float)Y$1 );
 fb$result$1 = (double)vr$3;
 goto label$4233;
 label$4233:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_ATANExx( struct $12SYSTEM_BUS_T* THIS$1, int64 X$1, int64 Y$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4234:;
 float vr$3 = atan2f( (float)X$1, (float)Y$1 );
 fb$result$1 = (double)vr$3;
 goto label$4235;
 label$4235:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_ATANEff( struct $12SYSTEM_BUS_T* THIS$1, float X$1, float Y$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4236:;
 float vr$1 = atan2f( X$1, Y$1 );
 fb$result$1 = (double)vr$1;
 goto label$4237;
 label$4237:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_ATANEdd( struct $12SYSTEM_BUS_T* THIS$1, double X$1, double Y$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4238:;
 float vr$3 = atan2f( (float)X$1, (float)Y$1 );
 fb$result$1 = (double)vr$3;
 goto label$4239;
 label$4239:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_ATANER9_FLOAT128S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* X$1, struct $9_FLOAT128* Y$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4240:;
 uint64 vr$1 = _ZN9_FLOAT128cvyEv( Y$1 );
 uint64 vr$3 = _ZN9_FLOAT128cvyEv( X$1 );
 float vr$5 = atan2f( (float)vr$3, (float)vr$1 );
 fb$result$1 = (double)vr$5;
 goto label$4241;
 label$4241:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_ATANER9_FLOAT256S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* X$1, struct $9_FLOAT256* Y$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4242:;
 uint64 vr$1 = _ZN9_FLOAT256cvyEv( Y$1 );
 uint64 vr$3 = _ZN9_FLOAT256cvyEv( X$1 );
 float vr$5 = atan2f( (float)vr$3, (float)vr$1 );
 fb$result$1 = (double)vr$5;
 goto label$4243;
 label$4243:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_ATANER9_FLOAT512S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* X$1, struct $9_FLOAT512* Y$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4244:;
 uint64 vr$1 = _ZN9_FLOAT512cvyEv( Y$1 );
 uint64 vr$3 = _ZN9_FLOAT512cvyEv( X$1 );
 float vr$5 = atan2f( (float)vr$3, (float)vr$1 );
 fb$result$1 = (double)vr$5;
 goto label$4245;
 label$4245:;
 return fb$result$1;
}

struct $7VECTOR2* _ZN12SYSTEM_BUS_T6K_ATANER7VECTOR2S1_( struct $7VECTOR2* tmp$2475$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR2* X$1, struct $7VECTOR2* Y$1 )
{
 label$4246:;
 float vr$4 = atan2f( (float)*(double*)((uint8*)X$1 + 8ll), (float)*(double*)((uint8*)Y$1 + 8ll) );
 float vr$10 = atan2f( (float)*(double*)X$1, (float)*(double*)Y$1 );
 _ZN7VECTOR2C1Edd( tmp$2475$1, (double)vr$10, (double)vr$4 );
 goto label$4247;
 label$4247:;
 return tmp$2475$1;
}

struct $7VECTOR3* _ZN12SYSTEM_BUS_T6K_ATANER7VECTOR3S1_( struct $7VECTOR3* tmp$2477$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* X$1, struct $7VECTOR3* Y$1 )
{
 label$4248:;
 float vr$4 = atan2f( (float)*(double*)((uint8*)X$1 + 32ll), (float)*(double*)((uint8*)Y$1 + 32ll) );
 float vr$10 = atan2f( (float)*(double*)((uint8*)X$1 + 24ll), (float)*(double*)((uint8*)Y$1 + 24ll) );
 float vr$16 = atan2f( (float)*(double*)((uint8*)X$1 + 16ll), (float)*(double*)((uint8*)Y$1 + 16ll) );
 _ZN7VECTOR3C1Eddd( tmp$2477$1, (double)vr$16, (double)vr$10, (double)vr$4 );
 goto label$4249;
 label$4249:;
 return tmp$2477$1;
}

struct $7VECTOR4* _ZN12SYSTEM_BUS_T6K_ATANER7VECTOR4S1_( struct $7VECTOR4* tmp$2479$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR4* X$1, struct $7VECTOR4* Y$1 )
{
 label$4250:;
 float vr$4 = atan2f( (float)*(double*)((uint8*)X$1 + 64ll), (float)*(double*)((uint8*)Y$1 + 64ll) );
 float vr$10 = atan2f( (float)*(double*)((uint8*)X$1 + 56ll), (float)*(double*)((uint8*)Y$1 + 56ll) );
 float vr$16 = atan2f( (float)*(double*)((uint8*)X$1 + 48ll), (float)*(double*)((uint8*)Y$1 + 48ll) );
 float vr$22 = atan2f( (float)*(double*)((uint8*)X$1 + 40ll), (float)*(double*)((uint8*)Y$1 + 40ll) );
 _ZN7VECTOR4C1Edddd( tmp$2479$1, (double)vr$22, (double)vr$16, (double)vr$10, (double)vr$4 );
 goto label$4251;
 label$4251:;
 return tmp$2479$1;
}

double _ZN12SYSTEM_BUS_T5K_POWEhh( struct $12SYSTEM_BUS_T* THIS$1, uint8 A$1, uint8 B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4252:;
 float vr$3 = powf( (float)A$1, (float)B$1 );
 fb$result$1 = (double)vr$3;
 goto label$4253;
 label$4253:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_POWEaa( struct $12SYSTEM_BUS_T* THIS$1, int8 A$1, int8 B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4254:;
 float vr$3 = powf( (float)A$1, (float)B$1 );
 fb$result$1 = (double)vr$3;
 goto label$4255;
 label$4255:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_POWEtt( struct $12SYSTEM_BUS_T* THIS$1, uint16 A$1, uint16 B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4256:;
 float vr$3 = powf( (float)A$1, (float)B$1 );
 fb$result$1 = (double)vr$3;
 goto label$4257;
 label$4257:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_POWEss( struct $12SYSTEM_BUS_T* THIS$1, int16 A$1, int16 B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4258:;
 float vr$3 = powf( (float)A$1, (float)B$1 );
 fb$result$1 = (double)vr$3;
 goto label$4259;
 label$4259:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_POWEjj( struct $12SYSTEM_BUS_T* THIS$1, uint32 A$1, uint32 B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4260:;
 float vr$3 = powf( (float)A$1, (float)B$1 );
 fb$result$1 = (double)vr$3;
 goto label$4261;
 label$4261:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_POWEii( struct $12SYSTEM_BUS_T* THIS$1, int32 A$1, int32 B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4262:;
 float vr$3 = powf( (float)A$1, (float)B$1 );
 fb$result$1 = (double)vr$3;
 goto label$4263;
 label$4263:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_POWEyy( struct $12SYSTEM_BUS_T* THIS$1, uint64 A$1, uint64 B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4264:;
 float vr$3 = powf( (float)A$1, (float)B$1 );
 fb$result$1 = (double)vr$3;
 goto label$4265;
 label$4265:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_POWExx( struct $12SYSTEM_BUS_T* THIS$1, int64 A$1, int64 B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4266:;
 float vr$3 = powf( (float)A$1, (float)B$1 );
 fb$result$1 = (double)vr$3;
 goto label$4267;
 label$4267:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_POWEff( struct $12SYSTEM_BUS_T* THIS$1, float A$1, float B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4268:;
 float vr$1 = powf( A$1, B$1 );
 fb$result$1 = (double)vr$1;
 goto label$4269;
 label$4269:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_POWEdd( struct $12SYSTEM_BUS_T* THIS$1, double A$1, double B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4270:;
 float vr$3 = powf( (float)A$1, (float)B$1 );
 fb$result$1 = (double)vr$3;
 goto label$4271;
 label$4271:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_POWER9_FLOAT128S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* A$1, struct $9_FLOAT128* B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4272:;
 uint64 vr$1 = _ZN9_FLOAT128cvyEv( B$1 );
 uint64 vr$3 = _ZN9_FLOAT128cvyEv( A$1 );
 float vr$5 = powf( (float)vr$3, (float)vr$1 );
 fb$result$1 = (double)vr$5;
 goto label$4273;
 label$4273:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_POWER9_FLOAT256S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* A$1, struct $9_FLOAT256* B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4274:;
 uint64 vr$1 = _ZN9_FLOAT256cvyEv( B$1 );
 uint64 vr$3 = _ZN9_FLOAT256cvyEv( A$1 );
 float vr$5 = powf( (float)vr$3, (float)vr$1 );
 fb$result$1 = (double)vr$5;
 goto label$4275;
 label$4275:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_POWER9_FLOAT512S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* A$1, struct $9_FLOAT512* B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4276:;
 uint64 vr$1 = _ZN9_FLOAT512cvyEv( B$1 );
 uint64 vr$3 = _ZN9_FLOAT512cvyEv( A$1 );
 float vr$5 = powf( (float)vr$3, (float)vr$1 );
 fb$result$1 = (double)vr$5;
 goto label$4277;
 label$4277:;
 return fb$result$1;
}

struct $7VECTOR2* _ZN12SYSTEM_BUS_T5K_POWER7VECTOR2S1_( struct $7VECTOR2* tmp$2481$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR2* A$1, struct $7VECTOR2* B$1 )
{
 label$4278:;
 float vr$4 = powf( (float)*(double*)((uint8*)A$1 + 8ll), (float)*(double*)((uint8*)B$1 + 8ll) );
 float vr$10 = powf( (float)*(double*)A$1, (float)*(double*)B$1 );
 _ZN7VECTOR2C1Edd( tmp$2481$1, (double)vr$10, (double)vr$4 );
 goto label$4279;
 label$4279:;
 return tmp$2481$1;
}

struct $7VECTOR3* _ZN12SYSTEM_BUS_T5K_POWER7VECTOR3S1_( struct $7VECTOR3* tmp$2483$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* A$1, struct $7VECTOR3* B$1 )
{
 label$4280:;
 float vr$4 = powf( (float)*(double*)((uint8*)A$1 + 32ll), (float)*(double*)((uint8*)B$1 + 32ll) );
 float vr$10 = powf( (float)*(double*)((uint8*)A$1 + 24ll), (float)*(double*)((uint8*)B$1 + 24ll) );
 float vr$16 = powf( (float)*(double*)((uint8*)A$1 + 16ll), (float)*(double*)((uint8*)B$1 + 16ll) );
 _ZN7VECTOR3C1Eddd( tmp$2483$1, (double)vr$16, (double)vr$10, (double)vr$4 );
 goto label$4281;
 label$4281:;
 return tmp$2483$1;
}

struct $7VECTOR4* _ZN12SYSTEM_BUS_T5K_POWER7VECTOR4S1_( struct $7VECTOR4* tmp$2485$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR4* A$1, struct $7VECTOR4* B$1 )
{
 label$4282:;
 float vr$4 = powf( (float)*(double*)((uint8*)A$1 + 64ll), (float)*(double*)((uint8*)B$1 + 64ll) );
 float vr$10 = powf( (float)*(double*)((uint8*)A$1 + 56ll), (float)*(double*)((uint8*)B$1 + 56ll) );
 float vr$16 = powf( (float)*(double*)((uint8*)A$1 + 48ll), (float)*(double*)((uint8*)B$1 + 48ll) );
 float vr$22 = powf( (float)*(double*)((uint8*)A$1 + 40ll), (float)*(double*)((uint8*)B$1 + 40ll) );
 _ZN7VECTOR4C1Edddd( tmp$2485$1, (double)vr$22, (double)vr$16, (double)vr$10, (double)vr$4 );
 goto label$4283;
 label$4283:;
 return tmp$2485$1;
}

double _ZN12SYSTEM_BUS_T7K_EXP2FEh( struct $12SYSTEM_BUS_T* THIS$1, uint8 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4284:;
 float vr$2 = powf( 0x1.p+1f, (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4285;
 label$4285:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_EXP2FEa( struct $12SYSTEM_BUS_T* THIS$1, int8 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4286:;
 float vr$2 = powf( 0x1.p+1f, (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4287;
 label$4287:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_EXP2FEt( struct $12SYSTEM_BUS_T* THIS$1, uint16 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4288:;
 float vr$2 = powf( 0x1.p+1f, (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4289;
 label$4289:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_EXP2FEs( struct $12SYSTEM_BUS_T* THIS$1, int16 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4290:;
 float vr$2 = powf( 0x1.p+1f, (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4291;
 label$4291:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_EXP2FEj( struct $12SYSTEM_BUS_T* THIS$1, uint32 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4292:;
 float vr$2 = powf( 0x1.p+1f, (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4293;
 label$4293:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_EXP2FEi( struct $12SYSTEM_BUS_T* THIS$1, int32 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4294:;
 float vr$2 = powf( 0x1.p+1f, (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4295;
 label$4295:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_EXP2FEy( struct $12SYSTEM_BUS_T* THIS$1, uint64 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4296:;
 float vr$2 = powf( 0x1.p+1f, (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4297;
 label$4297:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_EXP2FEx( struct $12SYSTEM_BUS_T* THIS$1, int64 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4298:;
 float vr$2 = powf( 0x1.p+1f, (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4299;
 label$4299:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_EXP2FEf( struct $12SYSTEM_BUS_T* THIS$1, float A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4300:;
 float vr$1 = powf( 0x1.p+1f, A$1 );
 fb$result$1 = (double)vr$1;
 goto label$4301;
 label$4301:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_EXP2FEd( struct $12SYSTEM_BUS_T* THIS$1, double A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4302:;
 float vr$2 = powf( 0x1.p+1f, (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4303;
 label$4303:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_EXP2FER9_FLOAT128( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4304:;
 uint64 vr$1 = _ZN9_FLOAT128cvyEv( A$1 );
 float vr$3 = powf( 0x1.p+1f, (float)vr$1 );
 fb$result$1 = (double)vr$3;
 goto label$4305;
 label$4305:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_EXP2FER9_FLOAT256( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4306:;
 uint64 vr$1 = _ZN9_FLOAT256cvyEv( A$1 );
 float vr$3 = powf( 0x1.p+1f, (float)vr$1 );
 fb$result$1 = (double)vr$3;
 goto label$4307;
 label$4307:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_EXP2FER9_FLOAT512( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4308:;
 uint64 vr$1 = _ZN9_FLOAT512cvyEv( A$1 );
 float vr$3 = powf( 0x1.p+1f, (float)vr$1 );
 fb$result$1 = (double)vr$3;
 goto label$4309;
 label$4309:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_EXPEh( struct $12SYSTEM_BUS_T* THIS$1, uint8 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4310:;
 float vr$2 = expf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4311;
 label$4311:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_EXPEa( struct $12SYSTEM_BUS_T* THIS$1, int8 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4312:;
 float vr$2 = expf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4313;
 label$4313:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_EXPEt( struct $12SYSTEM_BUS_T* THIS$1, uint16 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4314:;
 float vr$2 = expf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4315;
 label$4315:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_EXPEs( struct $12SYSTEM_BUS_T* THIS$1, int16 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4316:;
 float vr$2 = expf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4317;
 label$4317:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_EXPEj( struct $12SYSTEM_BUS_T* THIS$1, uint32 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4318:;
 float vr$2 = expf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4319;
 label$4319:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_EXPEi( struct $12SYSTEM_BUS_T* THIS$1, int32 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4320:;
 float vr$2 = expf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4321;
 label$4321:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_EXPEy( struct $12SYSTEM_BUS_T* THIS$1, uint64 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4322:;
 float vr$2 = expf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4323;
 label$4323:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_EXPEx( struct $12SYSTEM_BUS_T* THIS$1, int64 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4324:;
 float vr$2 = expf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4325;
 label$4325:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_EXPEf( struct $12SYSTEM_BUS_T* THIS$1, float A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4326:;
 float vr$1 = expf( A$1 );
 fb$result$1 = (double)vr$1;
 goto label$4327;
 label$4327:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_EXPEd( struct $12SYSTEM_BUS_T* THIS$1, double A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4328:;
 float vr$2 = expf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4329;
 label$4329:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_EXPER9_FLOAT128( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4330:;
 uint64 vr$1 = _ZN9_FLOAT128cvyEv( A$1 );
 float vr$3 = expf( (float)vr$1 );
 fb$result$1 = (double)vr$3;
 goto label$4331;
 label$4331:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_EXPER9_FLOAT256( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4332:;
 uint64 vr$1 = _ZN9_FLOAT256cvyEv( A$1 );
 float vr$3 = expf( (float)vr$1 );
 fb$result$1 = (double)vr$3;
 goto label$4333;
 label$4333:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_EXPER9_FLOAT512( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4334:;
 uint64 vr$1 = _ZN9_FLOAT512cvyEv( A$1 );
 float vr$3 = expf( (float)vr$1 );
 fb$result$1 = (double)vr$3;
 goto label$4335;
 label$4335:;
 return fb$result$1;
}

struct $7VECTOR2* _ZN12SYSTEM_BUS_T5K_EXPER7VECTOR2( struct $7VECTOR2* tmp$2487$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR2* A$1 )
{
 label$4336:;
 float vr$2 = expf( (float)*(double*)((uint8*)A$1 + 8ll) );
 float vr$6 = expf( (float)*(double*)A$1 );
 _ZN7VECTOR2C1Edd( tmp$2487$1, (double)vr$6, (double)vr$2 );
 goto label$4337;
 label$4337:;
 return tmp$2487$1;
}

struct $7VECTOR3* _ZN12SYSTEM_BUS_T5K_EXPER7VECTOR3( struct $7VECTOR3* tmp$2489$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* A$1 )
{
 label$4338:;
 float vr$2 = expf( (float)*(double*)((uint8*)A$1 + 32ll) );
 float vr$6 = expf( (float)*(double*)((uint8*)A$1 + 24ll) );
 float vr$10 = expf( (float)*(double*)((uint8*)A$1 + 16ll) );
 _ZN7VECTOR3C1Eddd( tmp$2489$1, (double)vr$10, (double)vr$6, (double)vr$2 );
 goto label$4339;
 label$4339:;
 return tmp$2489$1;
}

struct $7VECTOR4* _ZN12SYSTEM_BUS_T5K_EXPER7VECTOR4( struct $7VECTOR4* tmp$2491$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR4* A$1 )
{
 label$4340:;
 float vr$2 = expf( (float)*(double*)((uint8*)A$1 + 64ll) );
 float vr$6 = expf( (float)*(double*)((uint8*)A$1 + 56ll) );
 float vr$10 = expf( (float)*(double*)((uint8*)A$1 + 48ll) );
 float vr$14 = expf( (float)*(double*)((uint8*)A$1 + 40ll) );
 _ZN7VECTOR4C1Edddd( tmp$2491$1, (double)vr$14, (double)vr$10, (double)vr$6, (double)vr$2 );
 goto label$4341;
 label$4341:;
 return tmp$2491$1;
}

double _ZN12SYSTEM_BUS_T5K_LOGEh( struct $12SYSTEM_BUS_T* THIS$1, uint8 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4342:;
 float vr$2 = logf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4343;
 label$4343:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_LOGEa( struct $12SYSTEM_BUS_T* THIS$1, int8 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4344:;
 float vr$2 = logf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4345;
 label$4345:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_LOGEt( struct $12SYSTEM_BUS_T* THIS$1, uint16 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4346:;
 float vr$2 = logf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4347;
 label$4347:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_LOGEs( struct $12SYSTEM_BUS_T* THIS$1, int16 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4348:;
 float vr$2 = logf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4349;
 label$4349:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_LOGEj( struct $12SYSTEM_BUS_T* THIS$1, uint32 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4350:;
 float vr$2 = logf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4351;
 label$4351:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_LOGEi( struct $12SYSTEM_BUS_T* THIS$1, int32 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4352:;
 float vr$2 = logf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4353;
 label$4353:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_LOGEy( struct $12SYSTEM_BUS_T* THIS$1, uint64 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4354:;
 float vr$2 = logf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4355;
 label$4355:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_LOGEx( struct $12SYSTEM_BUS_T* THIS$1, int64 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4356:;
 float vr$2 = logf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4357;
 label$4357:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_LOGEf( struct $12SYSTEM_BUS_T* THIS$1, float A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4358:;
 float vr$1 = logf( A$1 );
 fb$result$1 = (double)vr$1;
 goto label$4359;
 label$4359:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_LOGEd( struct $12SYSTEM_BUS_T* THIS$1, double A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4360:;
 float vr$2 = logf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4361;
 label$4361:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_LOGER9_FLOAT128( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4362:;
 uint64 vr$1 = _ZN9_FLOAT128cvyEv( A$1 );
 float vr$3 = logf( (float)vr$1 );
 fb$result$1 = (double)vr$3;
 goto label$4363;
 label$4363:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_LOGER9_FLOAT256( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4364:;
 uint64 vr$1 = _ZN9_FLOAT256cvyEv( A$1 );
 float vr$3 = logf( (float)vr$1 );
 fb$result$1 = (double)vr$3;
 goto label$4365;
 label$4365:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_LOGER9_FLOAT512( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4366:;
 uint64 vr$1 = _ZN9_FLOAT512cvyEv( A$1 );
 float vr$3 = logf( (float)vr$1 );
 fb$result$1 = (double)vr$3;
 goto label$4367;
 label$4367:;
 return fb$result$1;
}

struct $7VECTOR2* _ZN12SYSTEM_BUS_T5K_LOGER7VECTOR2( struct $7VECTOR2* tmp$2493$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR2* A$1 )
{
 label$4368:;
 float vr$2 = logf( (float)*(double*)((uint8*)A$1 + 8ll) );
 float vr$6 = logf( (float)*(double*)A$1 );
 _ZN7VECTOR2C1Edd( tmp$2493$1, (double)vr$6, (double)vr$2 );
 goto label$4369;
 label$4369:;
 return tmp$2493$1;
}

struct $7VECTOR3* _ZN12SYSTEM_BUS_T5K_LOGER7VECTOR3( struct $7VECTOR3* tmp$2495$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* A$1 )
{
 label$4370:;
 float vr$2 = logf( (float)*(double*)((uint8*)A$1 + 32ll) );
 float vr$6 = logf( (float)*(double*)((uint8*)A$1 + 24ll) );
 float vr$10 = logf( (float)*(double*)((uint8*)A$1 + 16ll) );
 _ZN7VECTOR3C1Eddd( tmp$2495$1, (double)vr$10, (double)vr$6, (double)vr$2 );
 goto label$4371;
 label$4371:;
 return tmp$2495$1;
}

struct $7VECTOR4* _ZN12SYSTEM_BUS_T5K_LOGER7VECTOR4( struct $7VECTOR4* tmp$2497$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR4* A$1 )
{
 label$4372:;
 float vr$2 = logf( (float)*(double*)((uint8*)A$1 + 64ll) );
 float vr$6 = logf( (float)*(double*)((uint8*)A$1 + 56ll) );
 float vr$10 = logf( (float)*(double*)((uint8*)A$1 + 48ll) );
 float vr$14 = logf( (float)*(double*)((uint8*)A$1 + 40ll) );
 _ZN7VECTOR4C1Edddd( tmp$2497$1, (double)vr$14, (double)vr$10, (double)vr$6, (double)vr$2 );
 goto label$4373;
 label$4373:;
 return tmp$2497$1;
}

double _ZN12SYSTEM_BUS_T6K_EXP2ERh( struct $12SYSTEM_BUS_T* THIS$1, uint8* A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4374:;
 double vr$2 = _ZN12SYSTEM_BUS_T7K_EXP2FEh( THIS$1, *A$1 );
 fb$result$1 = vr$2;
 goto label$4375;
 label$4375:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_EXP2ERa( struct $12SYSTEM_BUS_T* THIS$1, int8* A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4376:;
 double vr$2 = _ZN12SYSTEM_BUS_T7K_EXP2FEa( THIS$1, *A$1 );
 fb$result$1 = vr$2;
 goto label$4377;
 label$4377:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_EXP2ERt( struct $12SYSTEM_BUS_T* THIS$1, uint16* A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4378:;
 double vr$2 = _ZN12SYSTEM_BUS_T7K_EXP2FEt( THIS$1, *A$1 );
 fb$result$1 = vr$2;
 goto label$4379;
 label$4379:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_EXP2ERs( struct $12SYSTEM_BUS_T* THIS$1, int16* A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4380:;
 double vr$2 = _ZN12SYSTEM_BUS_T7K_EXP2FEs( THIS$1, *A$1 );
 fb$result$1 = vr$2;
 goto label$4381;
 label$4381:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_EXP2ERj( struct $12SYSTEM_BUS_T* THIS$1, uint32* A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4382:;
 double vr$2 = _ZN12SYSTEM_BUS_T7K_EXP2FEj( THIS$1, *A$1 );
 fb$result$1 = vr$2;
 goto label$4383;
 label$4383:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_EXP2ERi( struct $12SYSTEM_BUS_T* THIS$1, int32* A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4384:;
 double vr$2 = _ZN12SYSTEM_BUS_T7K_EXP2FEi( THIS$1, *A$1 );
 fb$result$1 = vr$2;
 goto label$4385;
 label$4385:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_EXP2ERy( struct $12SYSTEM_BUS_T* THIS$1, uint64* A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4386:;
 double vr$2 = _ZN12SYSTEM_BUS_T7K_EXP2FEy( THIS$1, *A$1 );
 fb$result$1 = vr$2;
 goto label$4387;
 label$4387:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_EXP2ERx( struct $12SYSTEM_BUS_T* THIS$1, int64* A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4388:;
 double vr$2 = _ZN12SYSTEM_BUS_T7K_EXP2FEx( THIS$1, *A$1 );
 fb$result$1 = vr$2;
 goto label$4389;
 label$4389:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_EXP2ERf( struct $12SYSTEM_BUS_T* THIS$1, float* A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4390:;
 double vr$2 = _ZN12SYSTEM_BUS_T7K_EXP2FEf( THIS$1, *A$1 );
 fb$result$1 = vr$2;
 goto label$4391;
 label$4391:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_EXP2ERd( struct $12SYSTEM_BUS_T* THIS$1, double* A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4392:;
 double vr$2 = _ZN12SYSTEM_BUS_T7K_EXP2FEd( THIS$1, *A$1 );
 fb$result$1 = vr$2;
 goto label$4393;
 label$4393:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_EXP2ER9_FLOAT128( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4394:;
 double vr$1 = _ZN12SYSTEM_BUS_T7K_EXP2FER9_FLOAT128( THIS$1, A$1 );
 fb$result$1 = vr$1;
 goto label$4395;
 label$4395:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_EXP2ER9_FLOAT256( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4396:;
 double vr$1 = _ZN12SYSTEM_BUS_T7K_EXP2FER9_FLOAT256( THIS$1, A$1 );
 fb$result$1 = vr$1;
 goto label$4397;
 label$4397:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_EXP2ER9_FLOAT512( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4398:;
 double vr$1 = _ZN12SYSTEM_BUS_T7K_EXP2FER9_FLOAT512( THIS$1, A$1 );
 fb$result$1 = vr$1;
 goto label$4399;
 label$4399:;
 return fb$result$1;
}

struct $7VECTOR2* _ZN12SYSTEM_BUS_T6K_EXP2ER7VECTOR2( struct $7VECTOR2* tmp$2499$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR2* A$1 )
{
 label$4400:;
 double vr$1 = _ZN12SYSTEM_BUS_T7K_EXP2FEd( THIS$1, *(double*)((uint8*)A$1 + 8ll) );
 double vr$3 = _ZN12SYSTEM_BUS_T7K_EXP2FEd( THIS$1, *(double*)A$1 );
 _ZN7VECTOR2C1Edd( tmp$2499$1, vr$3, vr$1 );
 goto label$4401;
 label$4401:;
 return tmp$2499$1;
}

struct $7VECTOR3* _ZN12SYSTEM_BUS_T6K_EXP2ER7VECTOR3( struct $7VECTOR3* tmp$2501$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* A$1 )
{
 label$4402:;
 double vr$1 = _ZN12SYSTEM_BUS_T7K_EXP2FEd( THIS$1, *(double*)((uint8*)A$1 + 32ll) );
 double vr$3 = _ZN12SYSTEM_BUS_T7K_EXP2FEd( THIS$1, *(double*)((uint8*)A$1 + 24ll) );
 double vr$5 = _ZN12SYSTEM_BUS_T7K_EXP2FEd( THIS$1, *(double*)((uint8*)A$1 + 16ll) );
 _ZN7VECTOR3C1Eddd( tmp$2501$1, vr$5, vr$3, vr$1 );
 goto label$4403;
 label$4403:;
 return tmp$2501$1;
}

struct $7VECTOR4* _ZN12SYSTEM_BUS_T6K_EXP2ER7VECTOR4( struct $7VECTOR4* tmp$2503$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR4* A$1 )
{
 label$4404:;
 double vr$1 = _ZN12SYSTEM_BUS_T7K_EXP2FEd( THIS$1, *(double*)((uint8*)A$1 + 64ll) );
 double vr$3 = _ZN12SYSTEM_BUS_T7K_EXP2FEd( THIS$1, *(double*)((uint8*)A$1 + 56ll) );
 double vr$5 = _ZN12SYSTEM_BUS_T7K_EXP2FEd( THIS$1, *(double*)((uint8*)A$1 + 48ll) );
 double vr$7 = _ZN12SYSTEM_BUS_T7K_EXP2FEd( THIS$1, *(double*)((uint8*)A$1 + 40ll) );
 _ZN7VECTOR4C1Edddd( tmp$2503$1, vr$7, vr$5, vr$3, vr$1 );
 goto label$4405;
 label$4405:;
 return tmp$2503$1;
}

double _ZN12SYSTEM_BUS_T6K_LOG2Eh( struct $12SYSTEM_BUS_T* THIS$1, uint8 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4406:;
 float vr$2 = log2f( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4407;
 label$4407:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_LOG2Ea( struct $12SYSTEM_BUS_T* THIS$1, int8 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4408:;
 float vr$2 = log2f( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4409;
 label$4409:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_LOG2Et( struct $12SYSTEM_BUS_T* THIS$1, uint16 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4410:;
 float vr$2 = log2f( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4411;
 label$4411:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_LOG2Es( struct $12SYSTEM_BUS_T* THIS$1, int16 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4412:;
 float vr$2 = log2f( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4413;
 label$4413:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_LOG2Ej( struct $12SYSTEM_BUS_T* THIS$1, uint32 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4414:;
 float vr$2 = log2f( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4415;
 label$4415:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_LOG2Ei( struct $12SYSTEM_BUS_T* THIS$1, int32 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4416:;
 float vr$2 = log2f( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4417;
 label$4417:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_LOG2Ey( struct $12SYSTEM_BUS_T* THIS$1, uint64 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4418:;
 float vr$2 = log2f( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4419;
 label$4419:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_LOG2Ex( struct $12SYSTEM_BUS_T* THIS$1, int64 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4420:;
 float vr$2 = log2f( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4421;
 label$4421:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_LOG2Ef( struct $12SYSTEM_BUS_T* THIS$1, float A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4422:;
 float vr$1 = log2f( A$1 );
 fb$result$1 = (double)vr$1;
 goto label$4423;
 label$4423:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_LOG2Ed( struct $12SYSTEM_BUS_T* THIS$1, double A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4424:;
 float vr$2 = log2f( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4425;
 label$4425:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_LOG2ER9_FLOAT128( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4426:;
 uint64 vr$1 = _ZN9_FLOAT128cvyEv( A$1 );
 float vr$3 = log2f( (float)vr$1 );
 fb$result$1 = (double)vr$3;
 goto label$4427;
 label$4427:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_LOG2ER9_FLOAT256( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4428:;
 uint64 vr$1 = _ZN9_FLOAT256cvyEv( A$1 );
 float vr$3 = log2f( (float)vr$1 );
 fb$result$1 = (double)vr$3;
 goto label$4429;
 label$4429:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_LOG2ER9_FLOAT512( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4430:;
 uint64 vr$1 = _ZN9_FLOAT512cvyEv( A$1 );
 float vr$3 = log2f( (float)vr$1 );
 fb$result$1 = (double)vr$3;
 goto label$4431;
 label$4431:;
 return fb$result$1;
}

struct $7VECTOR2* _ZN12SYSTEM_BUS_T6K_LOG2ER7VECTOR2( struct $7VECTOR2* tmp$2505$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR2* A$1 )
{
 label$4432:;
 float vr$2 = log2f( (float)*(double*)((uint8*)A$1 + 8ll) );
 float vr$6 = log2f( (float)*(double*)A$1 );
 _ZN7VECTOR2C1Edd( tmp$2505$1, (double)vr$6, (double)vr$2 );
 goto label$4433;
 label$4433:;
 return tmp$2505$1;
}

struct $7VECTOR3* _ZN12SYSTEM_BUS_T6K_LOG2ER7VECTOR3( struct $7VECTOR3* tmp$2507$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* A$1 )
{
 label$4434:;
 float vr$2 = logf( (float)*(double*)((uint8*)A$1 + 32ll) );
 float vr$6 = log2f( (float)*(double*)((uint8*)A$1 + 24ll) );
 float vr$10 = log2f( (float)*(double*)((uint8*)A$1 + 16ll) );
 _ZN7VECTOR3C1Eddd( tmp$2507$1, (double)vr$10, (double)vr$6, (double)vr$2 );
 goto label$4435;
 label$4435:;
 return tmp$2507$1;
}

struct $7VECTOR4* _ZN12SYSTEM_BUS_T6K_LOG2ER7VECTOR4( struct $7VECTOR4* tmp$2509$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR4* A$1 )
{
 label$4436:;
 float vr$2 = log2f( (float)*(double*)((uint8*)A$1 + 64ll) );
 float vr$6 = log2f( (float)*(double*)((uint8*)A$1 + 56ll) );
 float vr$10 = log2f( (float)*(double*)((uint8*)A$1 + 48ll) );
 float vr$14 = log2f( (float)*(double*)((uint8*)A$1 + 40ll) );
 _ZN7VECTOR4C1Edddd( tmp$2509$1, (double)vr$14, (double)vr$10, (double)vr$6, (double)vr$2 );
 goto label$4437;
 label$4437:;
 return tmp$2509$1;
}

double _ZN12SYSTEM_BUS_T6K_SQRTEh( struct $12SYSTEM_BUS_T* THIS$1, uint8 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4438:;
 float vr$2 = sqrtf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4439;
 label$4439:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_SQRTEa( struct $12SYSTEM_BUS_T* THIS$1, int8 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4440:;
 float vr$2 = sqrtf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4441;
 label$4441:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_SQRTEt( struct $12SYSTEM_BUS_T* THIS$1, uint16 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4442:;
 float vr$2 = sqrtf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4443;
 label$4443:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_SQRTEs( struct $12SYSTEM_BUS_T* THIS$1, int16 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4444:;
 float vr$2 = sqrtf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4445;
 label$4445:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_SQRTEj( struct $12SYSTEM_BUS_T* THIS$1, uint32 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4446:;
 float vr$2 = sqrtf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4447;
 label$4447:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_SQRTEi( struct $12SYSTEM_BUS_T* THIS$1, int32 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4448:;
 float vr$2 = sqrtf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4449;
 label$4449:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_SQRTEy( struct $12SYSTEM_BUS_T* THIS$1, uint64 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4450:;
 float vr$2 = sqrtf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4451;
 label$4451:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_SQRTEx( struct $12SYSTEM_BUS_T* THIS$1, int64 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4452:;
 float vr$2 = sqrtf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4453;
 label$4453:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_SQRTEf( struct $12SYSTEM_BUS_T* THIS$1, float A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4454:;
 float vr$1 = sqrtf( A$1 );
 fb$result$1 = (double)vr$1;
 goto label$4455;
 label$4455:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_SQRTEd( struct $12SYSTEM_BUS_T* THIS$1, double A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4456:;
 float vr$2 = sqrtf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4457;
 label$4457:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_SQRTER9_FLOAT128( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4458:;
 uint64 vr$1 = _ZN9_FLOAT128cvyEv( A$1 );
 float vr$3 = sqrtf( (float)vr$1 );
 fb$result$1 = (double)vr$3;
 goto label$4459;
 label$4459:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_SQRTER9_FLOAT256( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4460:;
 uint64 vr$1 = _ZN9_FLOAT256cvyEv( A$1 );
 float vr$3 = sqrtf( (float)vr$1 );
 fb$result$1 = (double)vr$3;
 goto label$4461;
 label$4461:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_SQRTER9_FLOAT512( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4462:;
 uint64 vr$1 = _ZN9_FLOAT512cvyEv( A$1 );
 float vr$3 = sqrtf( (float)vr$1 );
 fb$result$1 = (double)vr$3;
 goto label$4463;
 label$4463:;
 return fb$result$1;
}

struct $7VECTOR2* _ZN12SYSTEM_BUS_T6K_SQRTER7VECTOR2( struct $7VECTOR2* tmp$2511$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR2* A$1 )
{
 label$4464:;
 float vr$2 = sqrtf( (float)*(double*)((uint8*)A$1 + 8ll) );
 float vr$6 = sqrtf( (float)*(double*)A$1 );
 _ZN7VECTOR2C1Edd( tmp$2511$1, (double)vr$6, (double)vr$2 );
 goto label$4465;
 label$4465:;
 return tmp$2511$1;
}

struct $7VECTOR3* _ZN12SYSTEM_BUS_T6K_SQRTER7VECTOR3( struct $7VECTOR3* tmp$2513$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* A$1 )
{
 label$4466:;
 float vr$2 = sqrtf( (float)*(double*)((uint8*)A$1 + 32ll) );
 float vr$6 = sqrtf( (float)*(double*)((uint8*)A$1 + 24ll) );
 float vr$10 = sqrtf( (float)*(double*)((uint8*)A$1 + 16ll) );
 _ZN7VECTOR3C1Eddd( tmp$2513$1, (double)vr$10, (double)vr$6, (double)vr$2 );
 goto label$4467;
 label$4467:;
 return tmp$2513$1;
}

struct $7VECTOR4* _ZN12SYSTEM_BUS_T6K_SQRTER7VECTOR4( struct $7VECTOR4* tmp$2515$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR4* A$1 )
{
 label$4468:;
 float vr$2 = sqrtf( (float)*(double*)((uint8*)A$1 + 64ll) );
 float vr$6 = sqrtf( (float)*(double*)((uint8*)A$1 + 56ll) );
 float vr$10 = sqrtf( (float)*(double*)((uint8*)A$1 + 48ll) );
 float vr$14 = sqrtf( (float)*(double*)((uint8*)A$1 + 40ll) );
 _ZN7VECTOR4C1Edddd( tmp$2515$1, (double)vr$14, (double)vr$10, (double)vr$6, (double)vr$2 );
 goto label$4469;
 label$4469:;
 return tmp$2515$1;
}

double _ZN12SYSTEM_BUS_T13K_INVERSESQRTEh( struct $12SYSTEM_BUS_T* THIS$1, uint8 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4470:;
 float vr$2 = sqrtf( (float)A$1 );
 fb$result$1 = 0x1.p+0 / (double)vr$2;
 goto label$4471;
 label$4471:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T13K_INVERSESQRTEa( struct $12SYSTEM_BUS_T* THIS$1, int8 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4472:;
 float vr$2 = sqrtf( (float)A$1 );
 fb$result$1 = 0x1.p+0 / (double)vr$2;
 goto label$4473;
 label$4473:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T13K_INVERSESQRTEt( struct $12SYSTEM_BUS_T* THIS$1, uint16 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4474:;
 float vr$2 = sqrtf( (float)A$1 );
 fb$result$1 = 0x1.p+0 / (double)vr$2;
 goto label$4475;
 label$4475:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T13K_INVERSESQRTEs( struct $12SYSTEM_BUS_T* THIS$1, int16 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4476:;
 float vr$2 = sqrtf( (float)A$1 );
 fb$result$1 = 0x1.p+0 / (double)vr$2;
 goto label$4477;
 label$4477:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T13K_INVERSESQRTEj( struct $12SYSTEM_BUS_T* THIS$1, uint32 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4478:;
 float vr$2 = sqrtf( (float)A$1 );
 fb$result$1 = 0x1.p+0 / (double)vr$2;
 goto label$4479;
 label$4479:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T13K_INVERSESQRTEi( struct $12SYSTEM_BUS_T* THIS$1, int32 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4480:;
 float vr$2 = sqrtf( (float)A$1 );
 fb$result$1 = 0x1.p+0 / (double)vr$2;
 goto label$4481;
 label$4481:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T13K_INVERSESQRTEy( struct $12SYSTEM_BUS_T* THIS$1, uint64 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4482:;
 float vr$2 = sqrtf( (float)A$1 );
 fb$result$1 = 0x1.p+0 / (double)vr$2;
 goto label$4483;
 label$4483:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T13K_INVERSESQRTEx( struct $12SYSTEM_BUS_T* THIS$1, int64 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4484:;
 float vr$2 = sqrtf( (float)A$1 );
 fb$result$1 = 0x1.p+0 / (double)vr$2;
 goto label$4485;
 label$4485:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T13K_INVERSESQRTEf( struct $12SYSTEM_BUS_T* THIS$1, float A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4486:;
 float vr$1 = sqrtf( A$1 );
 fb$result$1 = 0x1.p+0 / (double)vr$1;
 goto label$4487;
 label$4487:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T13K_INVERSESQRTEd( struct $12SYSTEM_BUS_T* THIS$1, double A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4488:;
 float vr$2 = sqrtf( (float)A$1 );
 fb$result$1 = 0x1.p+0 / (double)vr$2;
 goto label$4489;
 label$4489:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T13K_INVERSESQRTER9_FLOAT128( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4490:;
 uint64 vr$1 = _ZN9_FLOAT128cvyEv( A$1 );
 float vr$3 = sqrtf( (float)vr$1 );
 fb$result$1 = 0x1.p+0 / (double)vr$3;
 goto label$4491;
 label$4491:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T13K_INVERSESQRTER9_FLOAT256( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4492:;
 uint64 vr$1 = _ZN9_FLOAT256cvyEv( A$1 );
 float vr$3 = sqrtf( (float)vr$1 );
 fb$result$1 = 0x1.p+0 / (double)vr$3;
 goto label$4493;
 label$4493:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T13K_INVERSESQRTER9_FLOAT512( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4494:;
 uint64 vr$1 = _ZN9_FLOAT512cvyEv( A$1 );
 float vr$3 = sqrtf( (float)vr$1 );
 fb$result$1 = 0x1.p+0 / (double)vr$3;
 goto label$4495;
 label$4495:;
 return fb$result$1;
}

struct $7VECTOR2* _ZN12SYSTEM_BUS_T13K_INVERSESQRTER7VECTOR2( struct $7VECTOR2* tmp$2517$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR2* A$1 )
{
 label$4496:;
 float vr$2 = sqrtf( (float)*(double*)((uint8*)A$1 + 8ll) );
 float vr$7 = sqrtf( (float)*(double*)A$1 );
 _ZN7VECTOR2C1Edd( tmp$2517$1, 0x1.p+0 / (double)vr$7, 0x1.p+0 / (double)vr$2 );
 goto label$4497;
 label$4497:;
 return tmp$2517$1;
}

struct $7VECTOR3* _ZN12SYSTEM_BUS_T13K_INVERSESQRTER7VECTOR3( struct $7VECTOR3* tmp$2519$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* A$1 )
{
 label$4498:;
 float vr$2 = sqrtf( (float)*(double*)((uint8*)A$1 + 32ll) );
 float vr$7 = sqrtf( (float)*(double*)((uint8*)A$1 + 24ll) );
 float vr$12 = sqrtf( (float)*(double*)((uint8*)A$1 + 16ll) );
 _ZN7VECTOR3C1Eddd( tmp$2519$1, 0x1.p+0 / (double)vr$12, 0x1.p+0 / (double)vr$7, 0x1.p+0 / (double)vr$2 );
 goto label$4499;
 label$4499:;
 return tmp$2519$1;
}

struct $7VECTOR4* _ZN12SYSTEM_BUS_T13K_INVERSESQRTER7VECTOR4( struct $7VECTOR4* tmp$2521$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR4* A$1 )
{
 label$4500:;
 float vr$2 = sqrtf( (float)*(double*)((uint8*)A$1 + 64ll) );
 float vr$7 = sqrtf( (float)*(double*)((uint8*)A$1 + 56ll) );
 float vr$12 = sqrtf( (float)*(double*)((uint8*)A$1 + 48ll) );
 float vr$17 = sqrtf( (float)*(double*)((uint8*)A$1 + 40ll) );
 _ZN7VECTOR4C1Edddd( tmp$2521$1, 0x1.p+0 / (double)vr$17, 0x1.p+0 / (double)vr$12, 0x1.p+0 / (double)vr$7, 0x1.p+0 / (double)vr$2 );
 goto label$4501;
 label$4501:;
 return tmp$2521$1;
}

double _ZN12SYSTEM_BUS_T6K_SIGNEh( struct $12SYSTEM_BUS_T* THIS$1, uint8 A$1 )
{
 int64 TMP$2523$1;
 int64 TMP$2524$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4502:;
 if( (int64)A$1 <= 0ll ) goto label$4505;
 TMP$2524$1 = 1ll;
 goto label$4506;
 label$4505:;
 if( (int64)A$1 >= 0ll ) goto label$4504;
 TMP$2523$1 = -1ll;
 goto label$4507;
 label$4504:;
 TMP$2523$1 = 0ll;
 label$4507:;
 TMP$2524$1 = TMP$2523$1;
 label$4506:;
 fb$result$1 = (double)TMP$2524$1;
 goto label$4503;
 label$4503:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_SIGNEa( struct $12SYSTEM_BUS_T* THIS$1, int8 A$1 )
{
 int64 TMP$2525$1;
 int64 TMP$2526$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4508:;
 if( (int64)A$1 <= 0ll ) goto label$4511;
 TMP$2526$1 = 1ll;
 goto label$4512;
 label$4511:;
 if( (int64)A$1 >= 0ll ) goto label$4510;
 TMP$2525$1 = -1ll;
 goto label$4513;
 label$4510:;
 TMP$2525$1 = 0ll;
 label$4513:;
 TMP$2526$1 = TMP$2525$1;
 label$4512:;
 fb$result$1 = (double)TMP$2526$1;
 goto label$4509;
 label$4509:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_SIGNEt( struct $12SYSTEM_BUS_T* THIS$1, uint16 A$1 )
{
 int64 TMP$2527$1;
 int64 TMP$2528$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4514:;
 if( (int64)A$1 <= 0ll ) goto label$4517;
 TMP$2528$1 = 1ll;
 goto label$4518;
 label$4517:;
 if( (int64)A$1 >= 0ll ) goto label$4516;
 TMP$2527$1 = -1ll;
 goto label$4519;
 label$4516:;
 TMP$2527$1 = 0ll;
 label$4519:;
 TMP$2528$1 = TMP$2527$1;
 label$4518:;
 fb$result$1 = (double)TMP$2528$1;
 goto label$4515;
 label$4515:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_SIGNEs( struct $12SYSTEM_BUS_T* THIS$1, int16 A$1 )
{
 int64 TMP$2529$1;
 int64 TMP$2530$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4520:;
 if( (int64)A$1 <= 0ll ) goto label$4523;
 TMP$2530$1 = 1ll;
 goto label$4524;
 label$4523:;
 if( (int64)A$1 >= 0ll ) goto label$4522;
 TMP$2529$1 = -1ll;
 goto label$4525;
 label$4522:;
 TMP$2529$1 = 0ll;
 label$4525:;
 TMP$2530$1 = TMP$2529$1;
 label$4524:;
 fb$result$1 = (double)TMP$2530$1;
 goto label$4521;
 label$4521:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_SIGNEj( struct $12SYSTEM_BUS_T* THIS$1, uint32 A$1 )
{
 int64 TMP$2531$1;
 int64 TMP$2532$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4526:;
 if( (int64)A$1 <= 0ll ) goto label$4529;
 TMP$2532$1 = 1ll;
 goto label$4530;
 label$4529:;
 if( (int64)A$1 >= 0ll ) goto label$4528;
 TMP$2531$1 = -1ll;
 goto label$4531;
 label$4528:;
 TMP$2531$1 = 0ll;
 label$4531:;
 TMP$2532$1 = TMP$2531$1;
 label$4530:;
 fb$result$1 = (double)TMP$2532$1;
 goto label$4527;
 label$4527:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_SIGNEi( struct $12SYSTEM_BUS_T* THIS$1, int32 A$1 )
{
 int64 TMP$2533$1;
 int64 TMP$2534$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4532:;
 if( (int64)A$1 <= 0ll ) goto label$4535;
 TMP$2534$1 = 1ll;
 goto label$4536;
 label$4535:;
 if( (int64)A$1 >= 0ll ) goto label$4534;
 TMP$2533$1 = -1ll;
 goto label$4537;
 label$4534:;
 TMP$2533$1 = 0ll;
 label$4537:;
 TMP$2534$1 = TMP$2533$1;
 label$4536:;
 fb$result$1 = (double)TMP$2534$1;
 goto label$4533;
 label$4533:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_SIGNEy( struct $12SYSTEM_BUS_T* THIS$1, uint64 A$1 )
{
 int64 TMP$2535$1;
 int64 TMP$2536$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4538:;
 if( A$1 <= 0ull ) goto label$4541;
 TMP$2536$1 = 1ll;
 goto label$4542;
 label$4541:;
 if( A$1 >= 0ull ) goto label$4540;
 TMP$2535$1 = -1ll;
 goto label$4543;
 label$4540:;
 TMP$2535$1 = 0ll;
 label$4543:;
 TMP$2536$1 = TMP$2535$1;
 label$4542:;
 fb$result$1 = (double)TMP$2536$1;
 goto label$4539;
 label$4539:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_SIGNEx( struct $12SYSTEM_BUS_T* THIS$1, int64 A$1 )
{
 int64 TMP$2537$1;
 int64 TMP$2538$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4544:;
 if( A$1 <= 0ll ) goto label$4547;
 TMP$2538$1 = 1ll;
 goto label$4548;
 label$4547:;
 if( A$1 >= 0ll ) goto label$4546;
 TMP$2537$1 = -1ll;
 goto label$4549;
 label$4546:;
 TMP$2537$1 = 0ll;
 label$4549:;
 TMP$2538$1 = TMP$2537$1;
 label$4548:;
 fb$result$1 = (double)TMP$2538$1;
 goto label$4545;
 label$4545:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_SIGNEf( struct $12SYSTEM_BUS_T* THIS$1, float A$1 )
{
 int64 TMP$2539$1;
 int64 TMP$2540$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4550:;
 if( A$1 <= 0x0p+0f ) goto label$4553;
 TMP$2540$1 = 1ll;
 goto label$4554;
 label$4553:;
 if( A$1 >= 0x0p+0f ) goto label$4552;
 TMP$2539$1 = -1ll;
 goto label$4555;
 label$4552:;
 TMP$2539$1 = 0ll;
 label$4555:;
 TMP$2540$1 = TMP$2539$1;
 label$4554:;
 fb$result$1 = (double)TMP$2540$1;
 goto label$4551;
 label$4551:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_SIGNEd( struct $12SYSTEM_BUS_T* THIS$1, double A$1 )
{
 int64 TMP$2541$1;
 int64 TMP$2542$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4556:;
 if( A$1 <= 0x0p+0 ) goto label$4559;
 TMP$2542$1 = 1ll;
 goto label$4560;
 label$4559:;
 if( A$1 >= 0x0p+0 ) goto label$4558;
 TMP$2541$1 = -1ll;
 goto label$4561;
 label$4558:;
 TMP$2541$1 = 0ll;
 label$4561:;
 TMP$2542$1 = TMP$2541$1;
 label$4560:;
 fb$result$1 = (double)TMP$2542$1;
 goto label$4557;
 label$4557:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_SIGNER9_FLOAT128( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* A$1 )
{
 int64 TMP$2543$1;
 int64 TMP$2544$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4562:;
 uint64 vr$1 = _ZN9_FLOAT128cvyEv( A$1 );
 if( vr$1 <= 0ull ) goto label$4565;
 TMP$2544$1 = 1ll;
 goto label$4566;
 label$4565:;
 uint64 vr$2 = _ZN9_FLOAT128cvyEv( A$1 );
 if( vr$2 >= 0ull ) goto label$4564;
 TMP$2543$1 = -1ll;
 goto label$4567;
 label$4564:;
 TMP$2543$1 = 0ll;
 label$4567:;
 TMP$2544$1 = TMP$2543$1;
 label$4566:;
 fb$result$1 = (double)TMP$2544$1;
 goto label$4563;
 label$4563:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_SIGNER9_FLOAT256( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* A$1 )
{
 int64 TMP$2545$1;
 int64 TMP$2546$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4568:;
 uint64 vr$1 = _ZN9_FLOAT256cvyEv( A$1 );
 if( vr$1 <= 0ull ) goto label$4571;
 TMP$2546$1 = 1ll;
 goto label$4572;
 label$4571:;
 uint64 vr$2 = _ZN9_FLOAT256cvyEv( A$1 );
 if( vr$2 >= 0ull ) goto label$4570;
 TMP$2545$1 = -1ll;
 goto label$4573;
 label$4570:;
 TMP$2545$1 = 0ll;
 label$4573:;
 TMP$2546$1 = TMP$2545$1;
 label$4572:;
 fb$result$1 = (double)TMP$2546$1;
 goto label$4569;
 label$4569:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_SIGNER9_FLOAT512( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* A$1 )
{
 int64 TMP$2547$1;
 int64 TMP$2548$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4574:;
 uint64 vr$1 = _ZN9_FLOAT512cvyEv( A$1 );
 if( vr$1 <= 0ull ) goto label$4577;
 TMP$2548$1 = 1ll;
 goto label$4578;
 label$4577:;
 uint64 vr$2 = _ZN9_FLOAT512cvyEv( A$1 );
 if( vr$2 >= 0ull ) goto label$4576;
 TMP$2547$1 = -1ll;
 goto label$4579;
 label$4576:;
 TMP$2547$1 = 0ll;
 label$4579:;
 TMP$2548$1 = TMP$2547$1;
 label$4578:;
 fb$result$1 = (double)TMP$2548$1;
 goto label$4575;
 label$4575:;
 return fb$result$1;
}

struct $7VECTOR2* _ZN12SYSTEM_BUS_T6K_SIGNER7VECTOR2( struct $7VECTOR2* tmp$2549$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR2* A$1 )
{
 int64 TMP$2551$1;
 int64 TMP$2552$1;
 int64 TMP$2553$1;
 int64 TMP$2554$1;
 label$4580:;
 if( *(double*)((uint8*)A$1 + 8ll) <= 0x0p+0 ) goto label$4585;
 TMP$2554$1 = 1ll;
 goto label$4586;
 label$4585:;
 if( *(double*)((uint8*)A$1 + 8ll) >= 0x0p+0 ) goto label$4584;
 TMP$2553$1 = -1ll;
 goto label$4587;
 label$4584:;
 TMP$2553$1 = 0ll;
 label$4587:;
 TMP$2554$1 = TMP$2553$1;
 label$4586:;
 if( *(double*)A$1 <= 0x0p+0 ) goto label$4583;
 TMP$2552$1 = 1ll;
 goto label$4588;
 label$4583:;
 if( *(double*)A$1 >= 0x0p+0 ) goto label$4582;
 TMP$2551$1 = -1ll;
 goto label$4589;
 label$4582:;
 TMP$2551$1 = 0ll;
 label$4589:;
 TMP$2552$1 = TMP$2551$1;
 label$4588:;
 _ZN7VECTOR2C1Edd( tmp$2549$1, (double)TMP$2552$1, (double)TMP$2554$1 );
 goto label$4581;
 label$4581:;
 return tmp$2549$1;
}

struct $7VECTOR3* _ZN12SYSTEM_BUS_T6K_SIGNER7VECTOR3( struct $7VECTOR3* tmp$2555$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* A$1 )
{
 int64 TMP$2557$1;
 int64 TMP$2558$1;
 int64 TMP$2559$1;
 int64 TMP$2560$1;
 int64 TMP$2561$1;
 int64 TMP$2562$1;
 label$4590:;
 if( *(double*)((uint8*)A$1 + 32ll) <= 0x0p+0 ) goto label$4597;
 TMP$2562$1 = 1ll;
 goto label$4598;
 label$4597:;
 if( *(double*)((uint8*)A$1 + 32ll) >= 0x0p+0 ) goto label$4596;
 TMP$2561$1 = -1ll;
 goto label$4599;
 label$4596:;
 TMP$2561$1 = 0ll;
 label$4599:;
 TMP$2562$1 = TMP$2561$1;
 label$4598:;
 if( *(double*)((uint8*)A$1 + 24ll) <= 0x0p+0 ) goto label$4595;
 TMP$2560$1 = 1ll;
 goto label$4600;
 label$4595:;
 if( *(double*)((uint8*)A$1 + 24ll) >= 0x0p+0 ) goto label$4594;
 TMP$2559$1 = -1ll;
 goto label$4601;
 label$4594:;
 TMP$2559$1 = 0ll;
 label$4601:;
 TMP$2560$1 = TMP$2559$1;
 label$4600:;
 if( *(double*)((uint8*)A$1 + 16ll) <= 0x0p+0 ) goto label$4593;
 TMP$2558$1 = 1ll;
 goto label$4602;
 label$4593:;
 if( *(double*)((uint8*)A$1 + 16ll) >= 0x0p+0 ) goto label$4592;
 TMP$2557$1 = -1ll;
 goto label$4603;
 label$4592:;
 TMP$2557$1 = 0ll;
 label$4603:;
 TMP$2558$1 = TMP$2557$1;
 label$4602:;
 _ZN7VECTOR3C1Eddd( tmp$2555$1, (double)TMP$2558$1, (double)TMP$2560$1, (double)TMP$2562$1 );
 goto label$4591;
 label$4591:;
 return tmp$2555$1;
}

struct $7VECTOR4* _ZN12SYSTEM_BUS_T6K_SIGNER7VECTOR4( struct $7VECTOR4* tmp$2563$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR4* A$1 )
{
 int64 TMP$2565$1;
 int64 TMP$2566$1;
 int64 TMP$2567$1;
 int64 TMP$2568$1;
 int64 TMP$2569$1;
 int64 TMP$2570$1;
 int64 TMP$2571$1;
 int64 TMP$2572$1;
 label$4604:;
 if( *(double*)((uint8*)A$1 + 64ll) <= 0x0p+0 ) goto label$4613;
 TMP$2572$1 = 1ll;
 goto label$4614;
 label$4613:;
 if( *(double*)((uint8*)A$1 + 64ll) >= 0x0p+0 ) goto label$4612;
 TMP$2571$1 = -1ll;
 goto label$4615;
 label$4612:;
 TMP$2571$1 = 0ll;
 label$4615:;
 TMP$2572$1 = TMP$2571$1;
 label$4614:;
 if( *(double*)((uint8*)A$1 + 56ll) <= 0x0p+0 ) goto label$4611;
 TMP$2570$1 = 1ll;
 goto label$4616;
 label$4611:;
 if( *(double*)((uint8*)A$1 + 56ll) >= 0x0p+0 ) goto label$4610;
 TMP$2569$1 = -1ll;
 goto label$4617;
 label$4610:;
 TMP$2569$1 = 0ll;
 label$4617:;
 TMP$2570$1 = TMP$2569$1;
 label$4616:;
 if( *(double*)((uint8*)A$1 + 48ll) <= 0x0p+0 ) goto label$4609;
 TMP$2568$1 = 1ll;
 goto label$4618;
 label$4609:;
 if( *(double*)((uint8*)A$1 + 48ll) >= 0x0p+0 ) goto label$4608;
 TMP$2567$1 = -1ll;
 goto label$4619;
 label$4608:;
 TMP$2567$1 = 0ll;
 label$4619:;
 TMP$2568$1 = TMP$2567$1;
 label$4618:;
 if( *(double*)((uint8*)A$1 + 40ll) <= 0x0p+0 ) goto label$4607;
 TMP$2566$1 = 1ll;
 goto label$4620;
 label$4607:;
 if( *(double*)((uint8*)A$1 + 40ll) >= 0x0p+0 ) goto label$4606;
 TMP$2565$1 = -1ll;
 goto label$4621;
 label$4606:;
 TMP$2565$1 = 0ll;
 label$4621:;
 TMP$2566$1 = TMP$2565$1;
 label$4620:;
 _ZN7VECTOR4C1Edddd( tmp$2563$1, (double)TMP$2566$1, (double)TMP$2568$1, (double)TMP$2570$1, (double)TMP$2572$1 );
 goto label$4605;
 label$4605:;
 return tmp$2563$1;
}

double _ZN12SYSTEM_BUS_T7K_FLOOREh( struct $12SYSTEM_BUS_T* THIS$1, uint8 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4622:;
 float vr$2 = floorf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4623;
 label$4623:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_FLOOREa( struct $12SYSTEM_BUS_T* THIS$1, int8 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4624:;
 float vr$2 = floorf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4625;
 label$4625:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_FLOOREt( struct $12SYSTEM_BUS_T* THIS$1, uint16 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4626:;
 float vr$2 = floorf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4627;
 label$4627:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_FLOOREs( struct $12SYSTEM_BUS_T* THIS$1, int16 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4628:;
 float vr$2 = floorf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4629;
 label$4629:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_FLOOREj( struct $12SYSTEM_BUS_T* THIS$1, uint32 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4630:;
 float vr$2 = floorf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4631;
 label$4631:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_FLOOREi( struct $12SYSTEM_BUS_T* THIS$1, int32 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4632:;
 float vr$2 = floorf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4633;
 label$4633:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_FLOOREy( struct $12SYSTEM_BUS_T* THIS$1, uint64 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4634:;
 float vr$2 = floorf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4635;
 label$4635:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_FLOOREx( struct $12SYSTEM_BUS_T* THIS$1, int64 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4636:;
 float vr$2 = floorf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4637;
 label$4637:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_FLOOREf( struct $12SYSTEM_BUS_T* THIS$1, float A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4638:;
 float vr$1 = floorf( A$1 );
 fb$result$1 = (double)vr$1;
 goto label$4639;
 label$4639:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_FLOOREd( struct $12SYSTEM_BUS_T* THIS$1, double A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4640:;
 float vr$2 = floorf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4641;
 label$4641:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_FLOORER9_FLOAT128( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4642:;
 uint64 vr$1 = _ZN9_FLOAT128cvyEv( A$1 );
 float vr$3 = floorf( (float)vr$1 );
 fb$result$1 = (double)vr$3;
 goto label$4643;
 label$4643:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_FLOORER9_FLOAT256( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4644:;
 uint64 vr$1 = _ZN9_FLOAT256cvyEv( A$1 );
 float vr$3 = floorf( (float)vr$1 );
 fb$result$1 = (double)vr$3;
 goto label$4645;
 label$4645:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_FLOORER9_FLOAT512( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4646:;
 uint64 vr$1 = _ZN9_FLOAT512cvyEv( A$1 );
 float vr$3 = floorf( (float)vr$1 );
 fb$result$1 = (double)vr$3;
 goto label$4647;
 label$4647:;
 return fb$result$1;
}

struct $7VECTOR2* _ZN12SYSTEM_BUS_T7K_FLOORER7VECTOR2( struct $7VECTOR2* tmp$2573$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR2* A$1 )
{
 label$4648:;
 float vr$2 = floorf( (float)*(double*)((uint8*)A$1 + 8ll) );
 float vr$6 = floorf( (float)*(double*)A$1 );
 _ZN7VECTOR2C1Edd( tmp$2573$1, (double)vr$6, (double)vr$2 );
 goto label$4649;
 label$4649:;
 return tmp$2573$1;
}

struct $7VECTOR3* _ZN12SYSTEM_BUS_T7K_FLOORER7VECTOR3( struct $7VECTOR3* tmp$2575$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* A$1 )
{
 label$4650:;
 float vr$2 = floorf( (float)*(double*)((uint8*)A$1 + 32ll) );
 float vr$6 = floorf( (float)*(double*)((uint8*)A$1 + 24ll) );
 float vr$10 = floorf( (float)*(double*)((uint8*)A$1 + 16ll) );
 _ZN7VECTOR3C1Eddd( tmp$2575$1, (double)vr$10, (double)vr$6, (double)vr$2 );
 goto label$4651;
 label$4651:;
 return tmp$2575$1;
}

struct $7VECTOR4* _ZN12SYSTEM_BUS_T7K_FLOORER7VECTOR4( struct $7VECTOR4* tmp$2577$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR4* A$1 )
{
 label$4652:;
 float vr$2 = floorf( (float)*(double*)((uint8*)A$1 + 64ll) );
 float vr$6 = floorf( (float)*(double*)((uint8*)A$1 + 56ll) );
 float vr$10 = floorf( (float)*(double*)((uint8*)A$1 + 48ll) );
 float vr$14 = floorf( (float)*(double*)((uint8*)A$1 + 40ll) );
 _ZN7VECTOR4C1Edddd( tmp$2577$1, (double)vr$14, (double)vr$10, (double)vr$6, (double)vr$2 );
 goto label$4653;
 label$4653:;
 return tmp$2577$1;
}

double _ZN12SYSTEM_BUS_T6K_CEILEh( struct $12SYSTEM_BUS_T* THIS$1, uint8 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4654:;
 float vr$2 = ceilf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4655;
 label$4655:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_CEILEa( struct $12SYSTEM_BUS_T* THIS$1, int8 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4656:;
 float vr$2 = ceilf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4657;
 label$4657:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_CEILEt( struct $12SYSTEM_BUS_T* THIS$1, uint16 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4658:;
 float vr$2 = ceilf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4659;
 label$4659:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_CEILEs( struct $12SYSTEM_BUS_T* THIS$1, int16 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4660:;
 float vr$2 = ceilf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4661;
 label$4661:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_CEILEj( struct $12SYSTEM_BUS_T* THIS$1, uint32 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4662:;
 float vr$2 = ceilf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4663;
 label$4663:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_CEILEi( struct $12SYSTEM_BUS_T* THIS$1, int32 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4664:;
 float vr$2 = ceilf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4665;
 label$4665:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_CEILEy( struct $12SYSTEM_BUS_T* THIS$1, uint64 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4666:;
 float vr$2 = ceilf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4667;
 label$4667:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_CEILEx( struct $12SYSTEM_BUS_T* THIS$1, int64 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4668:;
 float vr$2 = ceilf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4669;
 label$4669:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_CEILEf( struct $12SYSTEM_BUS_T* THIS$1, float A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4670:;
 float vr$1 = ceilf( A$1 );
 fb$result$1 = (double)vr$1;
 goto label$4671;
 label$4671:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_CEILEd( struct $12SYSTEM_BUS_T* THIS$1, double A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4672:;
 float vr$2 = ceilf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4673;
 label$4673:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_CEILER9_FLOAT128( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4674:;
 uint64 vr$1 = _ZN9_FLOAT128cvyEv( A$1 );
 float vr$3 = ceilf( (float)vr$1 );
 fb$result$1 = (double)vr$3;
 goto label$4675;
 label$4675:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_CEILER9_FLOAT256( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4676:;
 uint64 vr$1 = _ZN9_FLOAT256cvyEv( A$1 );
 float vr$3 = ceilf( (float)vr$1 );
 fb$result$1 = (double)vr$3;
 goto label$4677;
 label$4677:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_CEILER9_FLOAT512( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4678:;
 uint64 vr$1 = _ZN9_FLOAT512cvyEv( A$1 );
 float vr$3 = ceilf( (float)vr$1 );
 fb$result$1 = (double)vr$3;
 goto label$4679;
 label$4679:;
 return fb$result$1;
}

struct $7VECTOR2* _ZN12SYSTEM_BUS_T6K_CEILER7VECTOR2( struct $7VECTOR2* tmp$2579$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR2* A$1 )
{
 label$4680:;
 float vr$2 = ceilf( (float)*(double*)((uint8*)A$1 + 8ll) );
 float vr$6 = ceilf( (float)*(double*)A$1 );
 _ZN7VECTOR2C1Edd( tmp$2579$1, (double)vr$6, (double)vr$2 );
 goto label$4681;
 label$4681:;
 return tmp$2579$1;
}

struct $7VECTOR3* _ZN12SYSTEM_BUS_T6K_CEILER7VECTOR3( struct $7VECTOR3* tmp$2581$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* A$1 )
{
 label$4682:;
 float vr$2 = ceilf( (float)*(double*)((uint8*)A$1 + 32ll) );
 float vr$6 = ceilf( (float)*(double*)((uint8*)A$1 + 24ll) );
 float vr$10 = ceilf( (float)*(double*)((uint8*)A$1 + 16ll) );
 _ZN7VECTOR3C1Eddd( tmp$2581$1, (double)vr$10, (double)vr$6, (double)vr$2 );
 goto label$4683;
 label$4683:;
 return tmp$2581$1;
}

struct $7VECTOR4* _ZN12SYSTEM_BUS_T6K_CEILER7VECTOR4( struct $7VECTOR4* tmp$2583$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR4* A$1 )
{
 label$4684:;
 float vr$2 = ceilf( (float)*(double*)((uint8*)A$1 + 64ll) );
 float vr$6 = ceilf( (float)*(double*)((uint8*)A$1 + 56ll) );
 float vr$10 = ceilf( (float)*(double*)((uint8*)A$1 + 48ll) );
 float vr$14 = ceilf( (float)*(double*)((uint8*)A$1 + 40ll) );
 _ZN7VECTOR4C1Edddd( tmp$2583$1, (double)vr$14, (double)vr$10, (double)vr$6, (double)vr$2 );
 goto label$4685;
 label$4685:;
 return tmp$2583$1;
}

double _ZN12SYSTEM_BUS_T7K_FRACTEh( struct $12SYSTEM_BUS_T* THIS$1, uint8 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4686:;
 double vr$3 = _ZN12SYSTEM_BUS_T7K_FLOOREh( THIS$1, X$1 );
 fb$result$1 = (double)(int64)X$1 - vr$3;
 goto label$4687;
 label$4687:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_FRACTEa( struct $12SYSTEM_BUS_T* THIS$1, int8 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4688:;
 double vr$3 = _ZN12SYSTEM_BUS_T7K_FLOOREa( THIS$1, X$1 );
 fb$result$1 = (double)(int64)X$1 - vr$3;
 goto label$4689;
 label$4689:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_FRACTEt( struct $12SYSTEM_BUS_T* THIS$1, uint16 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4690:;
 double vr$3 = _ZN12SYSTEM_BUS_T7K_FLOOREt( THIS$1, X$1 );
 fb$result$1 = (double)(int64)X$1 - vr$3;
 goto label$4691;
 label$4691:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_FRACTEs( struct $12SYSTEM_BUS_T* THIS$1, int16 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4692:;
 double vr$3 = _ZN12SYSTEM_BUS_T7K_FLOOREs( THIS$1, X$1 );
 fb$result$1 = (double)(int64)X$1 - vr$3;
 goto label$4693;
 label$4693:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_FRACTEj( struct $12SYSTEM_BUS_T* THIS$1, uint32 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4694:;
 double vr$3 = _ZN12SYSTEM_BUS_T7K_FLOOREj( THIS$1, X$1 );
 fb$result$1 = (double)(int64)X$1 - vr$3;
 goto label$4695;
 label$4695:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_FRACTEi( struct $12SYSTEM_BUS_T* THIS$1, int32 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4696:;
 double vr$3 = _ZN12SYSTEM_BUS_T7K_FLOOREi( THIS$1, X$1 );
 fb$result$1 = (double)(int64)X$1 - vr$3;
 goto label$4697;
 label$4697:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_FRACTEy( struct $12SYSTEM_BUS_T* THIS$1, uint64 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4698:;
 double vr$2 = _ZN12SYSTEM_BUS_T7K_FLOOREy( THIS$1, X$1 );
 fb$result$1 = (double)X$1 - vr$2;
 goto label$4699;
 label$4699:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_FRACTEx( struct $12SYSTEM_BUS_T* THIS$1, int64 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4700:;
 double vr$2 = _ZN12SYSTEM_BUS_T7K_FLOOREx( THIS$1, X$1 );
 fb$result$1 = (double)X$1 - vr$2;
 goto label$4701;
 label$4701:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_FRACTEf( struct $12SYSTEM_BUS_T* THIS$1, float X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4702:;
 double vr$2 = _ZN12SYSTEM_BUS_T7K_FLOOREf( THIS$1, X$1 );
 fb$result$1 = (double)X$1 - vr$2;
 goto label$4703;
 label$4703:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_FRACTEd( struct $12SYSTEM_BUS_T* THIS$1, double X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4704:;
 double vr$1 = _ZN12SYSTEM_BUS_T7K_FLOOREd( THIS$1, X$1 );
 fb$result$1 = X$1 - vr$1;
 goto label$4705;
 label$4705:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_FRACTER9_FLOAT128( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* X$1 )
{
 struct $9_FLOAT128 TMP$2585$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4706:;
 double vr$1 = _ZN12SYSTEM_BUS_T7K_FLOORER9_FLOAT128( THIS$1, X$1 );
 struct $9_FLOAT128* vr$3 = _ZmiR9_FLOAT128d( &TMP$2585$1, X$1, vr$1 );
 uint64 vr$4 = _ZN9_FLOAT128cvyEv( vr$3 );
 fb$result$1 = (double)vr$4;
 goto label$4707;
 label$4707:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_FRACTER9_FLOAT256( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* X$1 )
{
 struct $9_FLOAT256 TMP$2586$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4708:;
 double vr$1 = _ZN12SYSTEM_BUS_T7K_FLOORER9_FLOAT256( THIS$1, X$1 );
 struct $9_FLOAT256* vr$3 = _ZmiR9_FLOAT256d( &TMP$2586$1, X$1, vr$1 );
 uint64 vr$4 = _ZN9_FLOAT256cvyEv( vr$3 );
 fb$result$1 = (double)vr$4;
 goto label$4709;
 label$4709:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_FRACTER9_FLOAT512( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* X$1 )
{
 struct $9_FLOAT512 TMP$2587$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4710:;
 double vr$1 = _ZN12SYSTEM_BUS_T7K_FLOORER9_FLOAT512( THIS$1, X$1 );
 struct $9_FLOAT512* vr$3 = _ZmiR9_FLOAT512d( &TMP$2587$1, X$1, vr$1 );
 uint64 vr$4 = _ZN9_FLOAT512cvyEv( vr$3 );
 fb$result$1 = (double)vr$4;
 goto label$4711;
 label$4711:;
 return fb$result$1;
}

struct $7VECTOR2* _ZN12SYSTEM_BUS_T7K_FRACTER7VECTOR2( struct $7VECTOR2* tmp$2588$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR2* X$1 )
{
 label$4712:;
 double vr$2 = _ZN12SYSTEM_BUS_T7K_FLOOREd( THIS$1, *(double*)((uint8*)X$1 + 8ll) );
 double vr$6 = _ZN12SYSTEM_BUS_T7K_FLOOREd( THIS$1, *(double*)X$1 );
 _ZN7VECTOR2C1Edd( tmp$2588$1, *(double*)X$1 - vr$6, *(double*)((uint8*)X$1 + 8ll) - vr$2 );
 goto label$4713;
 label$4713:;
 return tmp$2588$1;
}

struct $7VECTOR3* _ZN12SYSTEM_BUS_T7K_FRACTER7VECTOR3( struct $7VECTOR3* tmp$2590$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* X$1 )
{
 label$4714:;
 double vr$2 = _ZN12SYSTEM_BUS_T7K_FLOOREd( THIS$1, *(double*)((uint8*)X$1 + 32ll) );
 double vr$6 = _ZN12SYSTEM_BUS_T7K_FLOOREd( THIS$1, *(double*)((uint8*)X$1 + 24ll) );
 double vr$10 = _ZN12SYSTEM_BUS_T7K_FLOOREd( THIS$1, *(double*)((uint8*)X$1 + 16ll) );
 _ZN7VECTOR3C1Eddd( tmp$2590$1, *(double*)((uint8*)X$1 + 16ll) - vr$10, *(double*)((uint8*)X$1 + 24ll) - vr$6, *(double*)((uint8*)X$1 + 32ll) - vr$2 );
 goto label$4715;
 label$4715:;
 return tmp$2590$1;
}

struct $7VECTOR4* _ZN12SYSTEM_BUS_T7K_FRACTER7VECTOR4( struct $7VECTOR4* tmp$2592$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR4* X$1 )
{
 label$4716:;
 double vr$2 = _ZN12SYSTEM_BUS_T7K_FLOOREd( THIS$1, *(double*)((uint8*)X$1 + 64ll) );
 double vr$6 = _ZN12SYSTEM_BUS_T7K_FLOOREd( THIS$1, *(double*)((uint8*)X$1 + 56ll) );
 double vr$10 = _ZN12SYSTEM_BUS_T7K_FLOOREd( THIS$1, *(double*)((uint8*)X$1 + 48ll) );
 double vr$14 = _ZN12SYSTEM_BUS_T7K_FLOOREd( THIS$1, *(double*)((uint8*)X$1 + 40ll) );
 _ZN7VECTOR4C1Edddd( tmp$2592$1, *(double*)((uint8*)X$1 + 40ll) - vr$14, *(double*)((uint8*)X$1 + 48ll) - vr$10, *(double*)((uint8*)X$1 + 56ll) - vr$6, *(double*)((uint8*)X$1 + 64ll) - vr$2 );
 goto label$4717;
 label$4717:;
 return tmp$2592$1;
}

double _ZN12SYSTEM_BUS_T8K_MODULOEhh( struct $12SYSTEM_BUS_T* THIS$1, uint8 X$1, uint8 Y$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4718:;
 fb$result$1 = (double)((int64)X$1 - ((int64)Y$1 * ((int64)X$1 / (int64)Y$1)));
 goto label$4719;
 label$4719:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8K_MODULOEaa( struct $12SYSTEM_BUS_T* THIS$1, int8 X$1, int8 Y$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4720:;
 fb$result$1 = (double)((int64)X$1 - ((int64)Y$1 * ((int64)X$1 / (int64)Y$1)));
 goto label$4721;
 label$4721:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8K_MODULOEtt( struct $12SYSTEM_BUS_T* THIS$1, uint16 X$1, uint16 Y$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4722:;
 fb$result$1 = (double)((int64)X$1 - ((int64)Y$1 * ((int64)X$1 / (int64)Y$1)));
 goto label$4723;
 label$4723:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8K_MODULOEss( struct $12SYSTEM_BUS_T* THIS$1, int16 X$1, int16 Y$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4724:;
 fb$result$1 = (double)((int64)X$1 - ((int64)Y$1 * ((int64)X$1 / (int64)Y$1)));
 goto label$4725;
 label$4725:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8K_MODULOEjj( struct $12SYSTEM_BUS_T* THIS$1, uint32 X$1, uint32 Y$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4726:;
 fb$result$1 = (double)((int64)X$1 - ((int64)Y$1 * ((int64)X$1 / (int64)Y$1)));
 goto label$4727;
 label$4727:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8K_MODULOEii( struct $12SYSTEM_BUS_T* THIS$1, int32 X$1, int32 Y$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4728:;
 fb$result$1 = (double)((int64)X$1 - ((int64)Y$1 * ((int64)X$1 / (int64)Y$1)));
 goto label$4729;
 label$4729:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8K_MODULOEyy( struct $12SYSTEM_BUS_T* THIS$1, uint64 X$1, uint64 Y$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4730:;
 fb$result$1 = (double)(X$1 - (Y$1 * (X$1 / Y$1)));
 goto label$4731;
 label$4731:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8K_MODULOExx( struct $12SYSTEM_BUS_T* THIS$1, int64 X$1, int64 Y$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4732:;
 fb$result$1 = (double)(X$1 - (Y$1 * (X$1 / Y$1)));
 goto label$4733;
 label$4733:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8K_MODULOEff( struct $12SYSTEM_BUS_T* THIS$1, float X$1, float Y$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4734:;
 double vr$4 = _ZN12SYSTEM_BUS_T7K_FLOOREf( THIS$1, (float)((double)X$1 / (double)Y$1) );
 fb$result$1 = (double)X$1 - ((double)Y$1 * vr$4);
 goto label$4735;
 label$4735:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8K_MODULOEdd( struct $12SYSTEM_BUS_T* THIS$1, double X$1, double Y$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4736:;
 double vr$2 = _ZN12SYSTEM_BUS_T7K_FLOOREd( THIS$1, X$1 / Y$1 );
 fb$result$1 = X$1 - (Y$1 * vr$2);
 goto label$4737;
 label$4737:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8K_MODULOER9_FLOAT128S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* X$1, struct $9_FLOAT128* Y$1 )
{
 struct $9_FLOAT128 TMP$2594$1;
 struct $9_FLOAT128 TMP$2595$1;
 struct $9_FLOAT128 TMP$2596$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4738:;
 struct $9_FLOAT128* vr$2 = _ZdvR9_FLOAT128S0_( &TMP$2594$1, X$1, Y$1 );
 double vr$3 = _ZN12SYSTEM_BUS_T7K_FLOORER9_FLOAT128( THIS$1, vr$2 );
 struct $9_FLOAT128* vr$5 = _ZmlR9_FLOAT128d( &TMP$2595$1, Y$1, vr$3 );
 struct $9_FLOAT128* vr$7 = _ZmiR9_FLOAT128S0_( &TMP$2596$1, X$1, vr$5 );
 uint64 vr$8 = _ZN9_FLOAT128cvyEv( vr$7 );
 fb$result$1 = (double)vr$8;
 goto label$4739;
 label$4739:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8K_MODULOER9_FLOAT256S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* X$1, struct $9_FLOAT256* Y$1 )
{
 struct $9_FLOAT256 TMP$2597$1;
 struct $9_FLOAT256 TMP$2598$1;
 struct $9_FLOAT256 TMP$2599$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4740:;
 struct $9_FLOAT256* vr$2 = _ZdvR9_FLOAT256S0_( &TMP$2597$1, X$1, Y$1 );
 double vr$3 = _ZN12SYSTEM_BUS_T7K_FLOORER9_FLOAT256( THIS$1, vr$2 );
 struct $9_FLOAT256* vr$5 = _ZmlR9_FLOAT256d( &TMP$2598$1, Y$1, vr$3 );
 struct $9_FLOAT256* vr$7 = _ZmiR9_FLOAT256S0_( &TMP$2599$1, X$1, vr$5 );
 uint64 vr$8 = _ZN9_FLOAT256cvyEv( vr$7 );
 fb$result$1 = (double)vr$8;
 goto label$4741;
 label$4741:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8K_MODULOER9_FLOAT512S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* X$1, struct $9_FLOAT512* Y$1 )
{
 struct $9_FLOAT512 TMP$2600$1;
 struct $9_FLOAT512 TMP$2601$1;
 struct $9_FLOAT512 TMP$2602$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4742:;
 struct $9_FLOAT512* vr$2 = _ZdvR9_FLOAT512S0_( &TMP$2600$1, X$1, Y$1 );
 double vr$3 = _ZN12SYSTEM_BUS_T7K_FLOORER9_FLOAT512( THIS$1, vr$2 );
 struct $9_FLOAT512* vr$5 = _ZmlR9_FLOAT512d( &TMP$2601$1, Y$1, vr$3 );
 struct $9_FLOAT512* vr$7 = _ZmiR9_FLOAT512S0_( &TMP$2602$1, X$1, vr$5 );
 uint64 vr$8 = _ZN9_FLOAT512cvyEv( vr$7 );
 fb$result$1 = (double)vr$8;
 goto label$4743;
 label$4743:;
 return fb$result$1;
}

struct $7VECTOR2* _ZN12SYSTEM_BUS_T8K_MODULOER7VECTOR2S1_( struct $7VECTOR2* tmp$2603$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR2* X$1, struct $7VECTOR2* Y$1 )
{
 label$4744:;
 double vr$5 = _ZN12SYSTEM_BUS_T7K_FLOOREd( THIS$1, *(double*)((uint8*)X$1 + 8ll) / *(double*)((uint8*)Y$1 + 8ll) );
 double vr$13 = _ZN12SYSTEM_BUS_T7K_FLOOREd( THIS$1, *(double*)X$1 / *(double*)Y$1 );
 _ZN7VECTOR2C1Edd( tmp$2603$1, *(double*)X$1 - (*(double*)Y$1 * vr$13), *(double*)((uint8*)X$1 + 8ll) - (*(double*)((uint8*)Y$1 + 8ll) * vr$5) );
 goto label$4745;
 label$4745:;
 return tmp$2603$1;
}

struct $7VECTOR3* _ZN12SYSTEM_BUS_T8K_MODULOER7VECTOR3S1_( struct $7VECTOR3* tmp$2605$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* X$1, struct $7VECTOR3* Y$1 )
{
 label$4746:;
 double vr$5 = _ZN12SYSTEM_BUS_T7K_FLOOREd( THIS$1, *(double*)((uint8*)X$1 + 32ll) / *(double*)((uint8*)Y$1 + 32ll) );
 double vr$13 = _ZN12SYSTEM_BUS_T7K_FLOOREd( THIS$1, *(double*)((uint8*)X$1 + 24ll) / *(double*)((uint8*)Y$1 + 24ll) );
 double vr$21 = _ZN12SYSTEM_BUS_T7K_FLOOREd( THIS$1, *(double*)((uint8*)X$1 + 16ll) / *(double*)((uint8*)Y$1 + 16ll) );
 _ZN7VECTOR3C1Eddd( tmp$2605$1, *(double*)((uint8*)X$1 + 16ll) - (*(double*)((uint8*)Y$1 + 16ll) * vr$21), *(double*)((uint8*)X$1 + 24ll) - (*(double*)((uint8*)Y$1 + 24ll) * vr$13), *(double*)((uint8*)X$1 + 32ll) - (*(double*)((uint8*)Y$1 + 32ll) * vr$5) );
 goto label$4747;
 label$4747:;
 return tmp$2605$1;
}

struct $7VECTOR4* _ZN12SYSTEM_BUS_T8K_MODULOER7VECTOR4S1_( struct $7VECTOR4* tmp$2607$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR4* X$1, struct $7VECTOR4* Y$1 )
{
 label$4748:;
 double vr$5 = _ZN12SYSTEM_BUS_T7K_FLOOREd( THIS$1, *(double*)((uint8*)X$1 + 64ll) / *(double*)((uint8*)Y$1 + 64ll) );
 double vr$13 = _ZN12SYSTEM_BUS_T7K_FLOOREd( THIS$1, *(double*)((uint8*)X$1 + 56ll) / *(double*)((uint8*)Y$1 + 56ll) );
 double vr$21 = _ZN12SYSTEM_BUS_T7K_FLOOREd( THIS$1, *(double*)((uint8*)X$1 + 48ll) / *(double*)((uint8*)Y$1 + 48ll) );
 double vr$29 = _ZN12SYSTEM_BUS_T7K_FLOOREd( THIS$1, *(double*)((uint8*)X$1 + 40ll) / *(double*)((uint8*)Y$1 + 40ll) );
 _ZN7VECTOR4C1Edddd( tmp$2607$1, *(double*)((uint8*)X$1 + 40ll) - (*(double*)((uint8*)Y$1 + 40ll) * vr$29), *(double*)((uint8*)X$1 + 48ll) - (*(double*)((uint8*)Y$1 + 48ll) * vr$21), *(double*)((uint8*)X$1 + 56ll) - (*(double*)((uint8*)Y$1 + 56ll) * vr$13), *(double*)((uint8*)X$1 + 64ll) - (*(double*)((uint8*)Y$1 + 64ll) * vr$5) );
 goto label$4749;
 label$4749:;
 return tmp$2607$1;
}

double _ZN12SYSTEM_BUS_T5K_MINEhh( struct $12SYSTEM_BUS_T* THIS$1, uint8 A$1, uint8 B$1 )
{
 uint8 TMP$2609$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4750:;
 if( (int64)A$1 >= (int64)B$1 ) goto label$4752;
 TMP$2609$1 = A$1;
 goto label$4753;
 label$4752:;
 TMP$2609$1 = B$1;
 label$4753:;
 fb$result$1 = (double)TMP$2609$1;
 goto label$4751;
 label$4751:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_MINEaa( struct $12SYSTEM_BUS_T* THIS$1, int8 A$1, int8 B$1 )
{
 int8 TMP$2610$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4754:;
 if( (int64)A$1 >= (int64)B$1 ) goto label$4756;
 TMP$2610$1 = A$1;
 goto label$4757;
 label$4756:;
 TMP$2610$1 = B$1;
 label$4757:;
 fb$result$1 = (double)TMP$2610$1;
 goto label$4755;
 label$4755:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_MINEtt( struct $12SYSTEM_BUS_T* THIS$1, uint16 A$1, uint16 B$1 )
{
 uint16 TMP$2611$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4758:;
 if( (int64)A$1 >= (int64)B$1 ) goto label$4760;
 TMP$2611$1 = A$1;
 goto label$4761;
 label$4760:;
 TMP$2611$1 = B$1;
 label$4761:;
 fb$result$1 = (double)TMP$2611$1;
 goto label$4759;
 label$4759:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_MINEss( struct $12SYSTEM_BUS_T* THIS$1, int16 A$1, int16 B$1 )
{
 int16 TMP$2612$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4762:;
 if( (int64)A$1 >= (int64)B$1 ) goto label$4764;
 TMP$2612$1 = A$1;
 goto label$4765;
 label$4764:;
 TMP$2612$1 = B$1;
 label$4765:;
 fb$result$1 = (double)TMP$2612$1;
 goto label$4763;
 label$4763:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_MINEjj( struct $12SYSTEM_BUS_T* THIS$1, uint32 A$1, uint32 B$1 )
{
 uint32 TMP$2613$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4766:;
 if( (int64)A$1 >= (int64)B$1 ) goto label$4768;
 TMP$2613$1 = A$1;
 goto label$4769;
 label$4768:;
 TMP$2613$1 = B$1;
 label$4769:;
 fb$result$1 = (double)TMP$2613$1;
 goto label$4767;
 label$4767:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_MINEii( struct $12SYSTEM_BUS_T* THIS$1, int32 A$1, int32 B$1 )
{
 int32 TMP$2614$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4770:;
 if( (int64)A$1 >= (int64)B$1 ) goto label$4772;
 TMP$2614$1 = A$1;
 goto label$4773;
 label$4772:;
 TMP$2614$1 = B$1;
 label$4773:;
 fb$result$1 = (double)TMP$2614$1;
 goto label$4771;
 label$4771:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_MINEyy( struct $12SYSTEM_BUS_T* THIS$1, uint64 A$1, uint64 B$1 )
{
 uint64 TMP$2615$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4774:;
 if( A$1 >= B$1 ) goto label$4776;
 TMP$2615$1 = A$1;
 goto label$4777;
 label$4776:;
 TMP$2615$1 = B$1;
 label$4777:;
 fb$result$1 = (double)TMP$2615$1;
 goto label$4775;
 label$4775:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_MINExx( struct $12SYSTEM_BUS_T* THIS$1, int64 A$1, int64 B$1 )
{
 int64 TMP$2616$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4778:;
 if( A$1 >= B$1 ) goto label$4780;
 TMP$2616$1 = A$1;
 goto label$4781;
 label$4780:;
 TMP$2616$1 = B$1;
 label$4781:;
 fb$result$1 = (double)TMP$2616$1;
 goto label$4779;
 label$4779:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_MINEff( struct $12SYSTEM_BUS_T* THIS$1, float A$1, float B$1 )
{
 float TMP$2617$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4782:;
 if( A$1 >= B$1 ) goto label$4784;
 TMP$2617$1 = A$1;
 goto label$4785;
 label$4784:;
 TMP$2617$1 = B$1;
 label$4785:;
 fb$result$1 = (double)TMP$2617$1;
 goto label$4783;
 label$4783:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_MINEdd( struct $12SYSTEM_BUS_T* THIS$1, double A$1, double B$1 )
{
 double TMP$2618$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4786:;
 if( A$1 >= B$1 ) goto label$4788;
 TMP$2618$1 = A$1;
 goto label$4789;
 label$4788:;
 TMP$2618$1 = B$1;
 label$4789:;
 fb$result$1 = TMP$2618$1;
 goto label$4787;
 label$4787:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_MINER9_FLOAT128S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* A$1, struct $9_FLOAT128* B$1 )
{
 struct $9_FLOAT128 TMP$2619$1;
 double TMP$2620$1;
 double TMP$2621$1;
 double TMP$2622$1;
 double TMP$2623$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4790:;
 if( *(double*)((uint8*)A$1 + 8ll) >= *(double*)((uint8*)B$1 + 8ll) ) goto label$4795;
 TMP$2623$1 = *(double*)((uint8*)A$1 + 8ll);
 goto label$4796;
 label$4795:;
 TMP$2623$1 = *(double*)((uint8*)B$1 + 8ll);
 label$4796:;
 if( *(double*)A$1 >= *(double*)B$1 ) goto label$4794;
 TMP$2622$1 = *(double*)A$1;
 goto label$4797;
 label$4794:;
 TMP$2622$1 = *(double*)B$1;
 label$4797:;
 if( *(double*)((uint8*)A$1 + 8ll) >= *(double*)((uint8*)B$1 + 8ll) ) goto label$4793;
 TMP$2621$1 = *(double*)((uint8*)A$1 + 8ll);
 goto label$4798;
 label$4793:;
 TMP$2621$1 = *(double*)((uint8*)B$1 + 8ll);
 label$4798:;
 if( *(double*)A$1 >= *(double*)B$1 ) goto label$4792;
 TMP$2620$1 = *(double*)A$1;
 goto label$4799;
 label$4792:;
 TMP$2620$1 = *(double*)B$1;
 label$4799:;
 _ZN9_FLOAT128C1Edddd( &TMP$2619$1, TMP$2620$1, TMP$2621$1, TMP$2622$1, TMP$2623$1 );
 uint64 vr$19 = _ZN9_FLOAT128cvyEv( &TMP$2619$1 );
 fb$result$1 = (double)vr$19;
 goto label$4791;
 label$4791:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_MINER9_FLOAT256S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* A$1, struct $9_FLOAT256* B$1 )
{
 struct $9_FLOAT256 TMP$2624$1;
 double TMP$2625$1;
 double TMP$2626$1;
 double TMP$2627$1;
 double TMP$2628$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4800:;
 if( *(double*)A$1 >= *(double*)B$1 ) goto label$4805;
 TMP$2628$1 = *(double*)A$1;
 goto label$4806;
 label$4805:;
 TMP$2628$1 = *(double*)B$1;
 label$4806:;
 if( *(double*)A$1 >= *(double*)B$1 ) goto label$4804;
 TMP$2627$1 = *(double*)A$1;
 goto label$4807;
 label$4804:;
 TMP$2627$1 = *(double*)B$1;
 label$4807:;
 if( *(double*)A$1 >= *(double*)B$1 ) goto label$4803;
 TMP$2626$1 = *(double*)A$1;
 goto label$4808;
 label$4803:;
 TMP$2626$1 = *(double*)B$1;
 label$4808:;
 if( *(double*)A$1 >= *(double*)B$1 ) goto label$4802;
 TMP$2625$1 = *(double*)A$1;
 goto label$4809;
 label$4802:;
 TMP$2625$1 = *(double*)B$1;
 label$4809:;
 _ZN9_FLOAT256C1Edddd( &TMP$2624$1, TMP$2625$1, TMP$2626$1, TMP$2627$1, TMP$2628$1 );
 uint64 vr$19 = _ZN9_FLOAT256cvyEv( &TMP$2624$1 );
 fb$result$1 = (double)vr$19;
 goto label$4801;
 label$4801:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_MINER9_FLOAT512S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* A$1, struct $9_FLOAT512* B$1 )
{
 struct $9_FLOAT512 TMP$2629$1;
 double TMP$2630$1;
 double TMP$2631$1;
 double TMP$2632$1;
 double TMP$2633$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4810:;
 if( *(double*)A$1 >= *(double*)B$1 ) goto label$4815;
 TMP$2633$1 = *(double*)A$1;
 goto label$4816;
 label$4815:;
 TMP$2633$1 = *(double*)B$1;
 label$4816:;
 if( *(double*)A$1 >= *(double*)B$1 ) goto label$4814;
 TMP$2632$1 = *(double*)A$1;
 goto label$4817;
 label$4814:;
 TMP$2632$1 = *(double*)B$1;
 label$4817:;
 if( *(double*)A$1 >= *(double*)B$1 ) goto label$4813;
 TMP$2631$1 = *(double*)A$1;
 goto label$4818;
 label$4813:;
 TMP$2631$1 = *(double*)B$1;
 label$4818:;
 if( *(double*)A$1 >= *(double*)B$1 ) goto label$4812;
 TMP$2630$1 = *(double*)A$1;
 goto label$4819;
 label$4812:;
 TMP$2630$1 = *(double*)B$1;
 label$4819:;
 _ZN9_FLOAT512C1Edddd( &TMP$2629$1, TMP$2630$1, TMP$2631$1, TMP$2632$1, TMP$2633$1 );
 uint64 vr$19 = _ZN9_FLOAT512cvyEv( &TMP$2629$1 );
 fb$result$1 = (double)vr$19;
 goto label$4811;
 label$4811:;
 return fb$result$1;
}

struct $7VECTOR2* _ZN12SYSTEM_BUS_T5K_MINER7VECTOR2S1_( struct $7VECTOR2* tmp$2634$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR2* A$1, struct $7VECTOR2* B$1 )
{
 double TMP$2636$1;
 double TMP$2637$1;
 label$4820:;
 if( *(double*)((uint8*)A$1 + 8ll) >= *(double*)((uint8*)B$1 + 8ll) ) goto label$4823;
 TMP$2637$1 = *(double*)((uint8*)A$1 + 8ll);
 goto label$4824;
 label$4823:;
 TMP$2637$1 = *(double*)((uint8*)B$1 + 8ll);
 label$4824:;
 if( *(double*)A$1 >= *(double*)B$1 ) goto label$4822;
 TMP$2636$1 = *(double*)A$1;
 goto label$4825;
 label$4822:;
 TMP$2636$1 = *(double*)B$1;
 label$4825:;
 _ZN7VECTOR2C1Edd( tmp$2634$1, TMP$2636$1, TMP$2637$1 );
 goto label$4821;
 label$4821:;
 return tmp$2634$1;
}

struct $7VECTOR3* _ZN12SYSTEM_BUS_T5K_MINER7VECTOR3S1_( struct $7VECTOR3* tmp$2638$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* A$1, struct $7VECTOR3* B$1 )
{
 double TMP$2640$1;
 double TMP$2641$1;
 double TMP$2642$1;
 label$4826:;
 if( *(double*)((uint8*)A$1 + 32ll) >= *(double*)((uint8*)B$1 + 32ll) ) goto label$4830;
 TMP$2642$1 = *(double*)((uint8*)A$1 + 32ll);
 goto label$4831;
 label$4830:;
 TMP$2642$1 = *(double*)((uint8*)B$1 + 32ll);
 label$4831:;
 if( *(double*)((uint8*)A$1 + 24ll) >= *(double*)((uint8*)B$1 + 24ll) ) goto label$4829;
 TMP$2641$1 = *(double*)((uint8*)A$1 + 24ll);
 goto label$4832;
 label$4829:;
 TMP$2641$1 = *(double*)((uint8*)B$1 + 24ll);
 label$4832:;
 if( *(double*)((uint8*)A$1 + 16ll) >= *(double*)((uint8*)B$1 + 16ll) ) goto label$4828;
 TMP$2640$1 = *(double*)((uint8*)A$1 + 16ll);
 goto label$4833;
 label$4828:;
 TMP$2640$1 = *(double*)((uint8*)B$1 + 16ll);
 label$4833:;
 _ZN7VECTOR3C1Eddd( tmp$2638$1, TMP$2640$1, TMP$2641$1, TMP$2642$1 );
 goto label$4827;
 label$4827:;
 return tmp$2638$1;
}

struct $7VECTOR4* _ZN12SYSTEM_BUS_T5K_MINER7VECTOR4S1_( struct $7VECTOR4* tmp$2643$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR4* A$1, struct $7VECTOR4* B$1 )
{
 double TMP$2645$1;
 double TMP$2646$1;
 double TMP$2647$1;
 double TMP$2648$1;
 label$4834:;
 if( *(double*)((uint8*)A$1 + 64ll) >= *(double*)((uint8*)B$1 + 64ll) ) goto label$4839;
 TMP$2648$1 = *(double*)((uint8*)A$1 + 64ll);
 goto label$4840;
 label$4839:;
 TMP$2648$1 = *(double*)((uint8*)B$1 + 64ll);
 label$4840:;
 if( *(double*)((uint8*)A$1 + 56ll) >= *(double*)((uint8*)B$1 + 56ll) ) goto label$4838;
 TMP$2647$1 = *(double*)((uint8*)A$1 + 56ll);
 goto label$4841;
 label$4838:;
 TMP$2647$1 = *(double*)((uint8*)B$1 + 56ll);
 label$4841:;
 if( *(double*)((uint8*)A$1 + 48ll) >= *(double*)((uint8*)B$1 + 48ll) ) goto label$4837;
 TMP$2646$1 = *(double*)((uint8*)A$1 + 48ll);
 goto label$4842;
 label$4837:;
 TMP$2646$1 = *(double*)((uint8*)B$1 + 48ll);
 label$4842:;
 if( *(double*)((uint8*)A$1 + 40ll) >= *(double*)((uint8*)B$1 + 40ll) ) goto label$4836;
 TMP$2645$1 = *(double*)((uint8*)A$1 + 40ll);
 goto label$4843;
 label$4836:;
 TMP$2645$1 = *(double*)((uint8*)B$1 + 40ll);
 label$4843:;
 _ZN7VECTOR4C1Edddd( tmp$2643$1, TMP$2645$1, TMP$2646$1, TMP$2647$1, TMP$2648$1 );
 goto label$4835;
 label$4835:;
 return tmp$2643$1;
}

struct $7VECTOR2* _ZN12SYSTEM_BUS_T5K_MINER7VECTOR2Rd( struct $7VECTOR2* tmp$2649$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR2* A$1, double* B$1 )
{
 double TMP$2651$1;
 double TMP$2652$1;
 label$4844:;
 if( *(double*)((uint8*)A$1 + 8ll) >= *B$1 ) goto label$4847;
 TMP$2652$1 = *(double*)((uint8*)A$1 + 8ll);
 goto label$4848;
 label$4847:;
 TMP$2652$1 = *B$1;
 label$4848:;
 if( *(double*)A$1 >= *B$1 ) goto label$4846;
 TMP$2651$1 = *(double*)A$1;
 goto label$4849;
 label$4846:;
 TMP$2651$1 = *B$1;
 label$4849:;
 _ZN7VECTOR2C1Edd( tmp$2649$1, TMP$2651$1, TMP$2652$1 );
 goto label$4845;
 label$4845:;
 return tmp$2649$1;
}

struct $7VECTOR3* _ZN12SYSTEM_BUS_T5K_MINER7VECTOR3Rd( struct $7VECTOR3* tmp$2653$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* A$1, double* B$1 )
{
 double TMP$2655$1;
 double TMP$2656$1;
 double TMP$2657$1;
 label$4850:;
 if( *(double*)((uint8*)A$1 + 32ll) >= *B$1 ) goto label$4854;
 TMP$2657$1 = *(double*)((uint8*)A$1 + 32ll);
 goto label$4855;
 label$4854:;
 TMP$2657$1 = *B$1;
 label$4855:;
 if( *(double*)((uint8*)A$1 + 24ll) >= *B$1 ) goto label$4853;
 TMP$2656$1 = *(double*)((uint8*)A$1 + 24ll);
 goto label$4856;
 label$4853:;
 TMP$2656$1 = *B$1;
 label$4856:;
 if( *(double*)((uint8*)A$1 + 16ll) >= *B$1 ) goto label$4852;
 TMP$2655$1 = *(double*)((uint8*)A$1 + 16ll);
 goto label$4857;
 label$4852:;
 TMP$2655$1 = *B$1;
 label$4857:;
 _ZN7VECTOR3C1Eddd( tmp$2653$1, TMP$2655$1, TMP$2656$1, TMP$2657$1 );
 goto label$4851;
 label$4851:;
 return tmp$2653$1;
}

struct $7VECTOR4* _ZN12SYSTEM_BUS_T5K_MINER7VECTOR4Rd( struct $7VECTOR4* tmp$2658$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR4* A$1, double* B$1 )
{
 double TMP$2660$1;
 double TMP$2661$1;
 double TMP$2662$1;
 double TMP$2663$1;
 label$4858:;
 if( *(double*)((uint8*)A$1 + 64ll) >= *B$1 ) goto label$4863;
 TMP$2663$1 = *(double*)((uint8*)A$1 + 64ll);
 goto label$4864;
 label$4863:;
 TMP$2663$1 = *B$1;
 label$4864:;
 if( *(double*)((uint8*)A$1 + 56ll) >= *B$1 ) goto label$4862;
 TMP$2662$1 = *(double*)((uint8*)A$1 + 56ll);
 goto label$4865;
 label$4862:;
 TMP$2662$1 = *B$1;
 label$4865:;
 if( *(double*)((uint8*)A$1 + 48ll) >= *B$1 ) goto label$4861;
 TMP$2661$1 = *(double*)((uint8*)A$1 + 48ll);
 goto label$4866;
 label$4861:;
 TMP$2661$1 = *B$1;
 label$4866:;
 if( *(double*)((uint8*)A$1 + 40ll) >= *B$1 ) goto label$4860;
 TMP$2660$1 = *(double*)((uint8*)A$1 + 40ll);
 goto label$4867;
 label$4860:;
 TMP$2660$1 = *B$1;
 label$4867:;
 _ZN7VECTOR4C1Edddd( tmp$2658$1, TMP$2660$1, TMP$2661$1, TMP$2662$1, TMP$2663$1 );
 goto label$4859;
 label$4859:;
 return tmp$2658$1;
}

double _ZN12SYSTEM_BUS_T5K_MAXEhh( struct $12SYSTEM_BUS_T* THIS$1, uint8 A$1, uint8 B$1 )
{
 uint8 TMP$2664$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4868:;
 if( (int64)A$1 >= (int64)B$1 ) goto label$4870;
 TMP$2664$1 = A$1;
 goto label$4871;
 label$4870:;
 TMP$2664$1 = B$1;
 label$4871:;
 fb$result$1 = (double)TMP$2664$1;
 goto label$4869;
 label$4869:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_MAXEaa( struct $12SYSTEM_BUS_T* THIS$1, int8 A$1, int8 B$1 )
{
 int8 TMP$2665$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4872:;
 if( (int64)A$1 >= (int64)B$1 ) goto label$4874;
 TMP$2665$1 = A$1;
 goto label$4875;
 label$4874:;
 TMP$2665$1 = B$1;
 label$4875:;
 fb$result$1 = (double)TMP$2665$1;
 goto label$4873;
 label$4873:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_MAXEtt( struct $12SYSTEM_BUS_T* THIS$1, uint16 A$1, uint16 B$1 )
{
 uint16 TMP$2666$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4876:;
 if( (int64)A$1 >= (int64)B$1 ) goto label$4878;
 TMP$2666$1 = A$1;
 goto label$4879;
 label$4878:;
 TMP$2666$1 = B$1;
 label$4879:;
 fb$result$1 = (double)TMP$2666$1;
 goto label$4877;
 label$4877:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_MAXEss( struct $12SYSTEM_BUS_T* THIS$1, int16 A$1, int16 B$1 )
{
 int16 TMP$2667$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4880:;
 if( (int64)A$1 >= (int64)B$1 ) goto label$4882;
 TMP$2667$1 = A$1;
 goto label$4883;
 label$4882:;
 TMP$2667$1 = B$1;
 label$4883:;
 fb$result$1 = (double)TMP$2667$1;
 goto label$4881;
 label$4881:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_MAXEjj( struct $12SYSTEM_BUS_T* THIS$1, uint32 A$1, uint32 B$1 )
{
 uint32 TMP$2668$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4884:;
 if( (int64)A$1 >= (int64)B$1 ) goto label$4886;
 TMP$2668$1 = A$1;
 goto label$4887;
 label$4886:;
 TMP$2668$1 = B$1;
 label$4887:;
 fb$result$1 = (double)TMP$2668$1;
 goto label$4885;
 label$4885:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_MAXEii( struct $12SYSTEM_BUS_T* THIS$1, int32 A$1, int32 B$1 )
{
 int32 TMP$2669$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4888:;
 if( (int64)A$1 >= (int64)B$1 ) goto label$4890;
 TMP$2669$1 = A$1;
 goto label$4891;
 label$4890:;
 TMP$2669$1 = B$1;
 label$4891:;
 fb$result$1 = (double)TMP$2669$1;
 goto label$4889;
 label$4889:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_MAXEyy( struct $12SYSTEM_BUS_T* THIS$1, uint64 A$1, uint64 B$1 )
{
 uint64 TMP$2670$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4892:;
 if( A$1 >= B$1 ) goto label$4894;
 TMP$2670$1 = A$1;
 goto label$4895;
 label$4894:;
 TMP$2670$1 = B$1;
 label$4895:;
 fb$result$1 = (double)TMP$2670$1;
 goto label$4893;
 label$4893:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_MAXExx( struct $12SYSTEM_BUS_T* THIS$1, int64 A$1, int64 B$1 )
{
 int64 TMP$2671$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4896:;
 if( A$1 >= B$1 ) goto label$4898;
 TMP$2671$1 = A$1;
 goto label$4899;
 label$4898:;
 TMP$2671$1 = B$1;
 label$4899:;
 fb$result$1 = (double)TMP$2671$1;
 goto label$4897;
 label$4897:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_MAXEff( struct $12SYSTEM_BUS_T* THIS$1, float A$1, float B$1 )
{
 float TMP$2672$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4900:;
 if( A$1 >= B$1 ) goto label$4902;
 TMP$2672$1 = A$1;
 goto label$4903;
 label$4902:;
 TMP$2672$1 = B$1;
 label$4903:;
 fb$result$1 = (double)TMP$2672$1;
 goto label$4901;
 label$4901:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_MAXEdd( struct $12SYSTEM_BUS_T* THIS$1, double A$1, double B$1 )
{
 double TMP$2673$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4904:;
 if( A$1 <= B$1 ) goto label$4906;
 TMP$2673$1 = A$1;
 goto label$4907;
 label$4906:;
 TMP$2673$1 = B$1;
 label$4907:;
 fb$result$1 = TMP$2673$1;
 goto label$4905;
 label$4905:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_MAXER9_FLOAT128S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* A$1, struct $9_FLOAT128* B$1 )
{
 struct $9_FLOAT128 TMP$2674$1;
 double TMP$2675$1;
 double TMP$2676$1;
 double TMP$2677$1;
 double TMP$2678$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4908:;
 if( *(double*)((uint8*)A$1 + 8ll) >= *(double*)((uint8*)B$1 + 8ll) ) goto label$4913;
 TMP$2678$1 = *(double*)((uint8*)A$1 + 8ll);
 goto label$4914;
 label$4913:;
 TMP$2678$1 = *(double*)((uint8*)B$1 + 8ll);
 label$4914:;
 if( *(double*)A$1 >= *(double*)B$1 ) goto label$4912;
 TMP$2677$1 = *(double*)A$1;
 goto label$4915;
 label$4912:;
 TMP$2677$1 = *(double*)B$1;
 label$4915:;
 if( *(double*)((uint8*)A$1 + 8ll) >= *(double*)((uint8*)B$1 + 8ll) ) goto label$4911;
 TMP$2676$1 = *(double*)((uint8*)A$1 + 8ll);
 goto label$4916;
 label$4911:;
 TMP$2676$1 = *(double*)((uint8*)B$1 + 8ll);
 label$4916:;
 if( *(double*)A$1 >= *(double*)B$1 ) goto label$4910;
 TMP$2675$1 = *(double*)A$1;
 goto label$4917;
 label$4910:;
 TMP$2675$1 = *(double*)B$1;
 label$4917:;
 _ZN9_FLOAT128C1Edddd( &TMP$2674$1, TMP$2675$1, TMP$2676$1, TMP$2677$1, TMP$2678$1 );
 uint64 vr$19 = _ZN9_FLOAT128cvyEv( &TMP$2674$1 );
 fb$result$1 = (double)vr$19;
 goto label$4909;
 label$4909:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_MAXER9_FLOAT256S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* A$1, struct $9_FLOAT256* B$1 )
{
 struct $9_FLOAT256 TMP$2679$1;
 double TMP$2680$1;
 double TMP$2681$1;
 double TMP$2682$1;
 double TMP$2683$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4918:;
 if( *(double*)A$1 >= *(double*)B$1 ) goto label$4923;
 TMP$2683$1 = *(double*)A$1;
 goto label$4924;
 label$4923:;
 TMP$2683$1 = *(double*)B$1;
 label$4924:;
 if( *(double*)A$1 >= *(double*)B$1 ) goto label$4922;
 TMP$2682$1 = *(double*)A$1;
 goto label$4925;
 label$4922:;
 TMP$2682$1 = *(double*)B$1;
 label$4925:;
 if( *(double*)A$1 >= *(double*)B$1 ) goto label$4921;
 TMP$2681$1 = *(double*)A$1;
 goto label$4926;
 label$4921:;
 TMP$2681$1 = *(double*)B$1;
 label$4926:;
 if( *(double*)A$1 >= *(double*)B$1 ) goto label$4920;
 TMP$2680$1 = *(double*)A$1;
 goto label$4927;
 label$4920:;
 TMP$2680$1 = *(double*)B$1;
 label$4927:;
 _ZN9_FLOAT256C1Edddd( &TMP$2679$1, TMP$2680$1, TMP$2681$1, TMP$2682$1, TMP$2683$1 );
 uint64 vr$19 = _ZN9_FLOAT256cvyEv( &TMP$2679$1 );
 fb$result$1 = (double)vr$19;
 goto label$4919;
 label$4919:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_MAXER9_FLOAT512S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* A$1, struct $9_FLOAT512* B$1 )
{
 struct $9_FLOAT512 TMP$2684$1;
 double TMP$2685$1;
 double TMP$2686$1;
 double TMP$2687$1;
 double TMP$2688$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4928:;
 if( *(double*)A$1 >= *(double*)B$1 ) goto label$4933;
 TMP$2688$1 = *(double*)A$1;
 goto label$4934;
 label$4933:;
 TMP$2688$1 = *(double*)B$1;
 label$4934:;
 if( *(double*)A$1 >= *(double*)B$1 ) goto label$4932;
 TMP$2687$1 = *(double*)A$1;
 goto label$4935;
 label$4932:;
 TMP$2687$1 = *(double*)B$1;
 label$4935:;
 if( *(double*)A$1 >= *(double*)B$1 ) goto label$4931;
 TMP$2686$1 = *(double*)A$1;
 goto label$4936;
 label$4931:;
 TMP$2686$1 = *(double*)B$1;
 label$4936:;
 if( *(double*)A$1 >= *(double*)B$1 ) goto label$4930;
 TMP$2685$1 = *(double*)A$1;
 goto label$4937;
 label$4930:;
 TMP$2685$1 = *(double*)B$1;
 label$4937:;
 _ZN9_FLOAT512C1Edddd( &TMP$2684$1, TMP$2685$1, TMP$2686$1, TMP$2687$1, TMP$2688$1 );
 uint64 vr$19 = _ZN9_FLOAT512cvyEv( &TMP$2684$1 );
 fb$result$1 = (double)vr$19;
 goto label$4929;
 label$4929:;
 return fb$result$1;
}

struct $7VECTOR2* _ZN12SYSTEM_BUS_T5K_MAXER7VECTOR2S1_( struct $7VECTOR2* tmp$2689$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR2* A$1, struct $7VECTOR2* B$1 )
{
 double TMP$2691$1;
 double TMP$2692$1;
 label$4938:;
 if( *(double*)((uint8*)A$1 + 8ll) <= *(double*)((uint8*)B$1 + 8ll) ) goto label$4941;
 TMP$2692$1 = *(double*)((uint8*)A$1 + 8ll);
 goto label$4942;
 label$4941:;
 TMP$2692$1 = *(double*)((uint8*)B$1 + 8ll);
 label$4942:;
 if( *(double*)A$1 <= *(double*)B$1 ) goto label$4940;
 TMP$2691$1 = *(double*)A$1;
 goto label$4943;
 label$4940:;
 TMP$2691$1 = *(double*)B$1;
 label$4943:;
 _ZN7VECTOR2C1Edd( tmp$2689$1, TMP$2691$1, TMP$2692$1 );
 goto label$4939;
 label$4939:;
 return tmp$2689$1;
}

struct $7VECTOR3* _ZN12SYSTEM_BUS_T5K_MAXER7VECTOR3S1_( struct $7VECTOR3* tmp$2693$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* A$1, struct $7VECTOR3* B$1 )
{
 double TMP$2695$1;
 double TMP$2696$1;
 double TMP$2697$1;
 label$4944:;
 if( *(double*)((uint8*)A$1 + 32ll) <= *(double*)((uint8*)B$1 + 32ll) ) goto label$4948;
 TMP$2697$1 = *(double*)((uint8*)A$1 + 32ll);
 goto label$4949;
 label$4948:;
 TMP$2697$1 = *(double*)((uint8*)B$1 + 32ll);
 label$4949:;
 if( *(double*)((uint8*)A$1 + 24ll) <= *(double*)((uint8*)B$1 + 24ll) ) goto label$4947;
 TMP$2696$1 = *(double*)((uint8*)A$1 + 24ll);
 goto label$4950;
 label$4947:;
 TMP$2696$1 = *(double*)((uint8*)B$1 + 24ll);
 label$4950:;
 if( *(double*)((uint8*)A$1 + 16ll) <= *(double*)((uint8*)B$1 + 16ll) ) goto label$4946;
 TMP$2695$1 = *(double*)((uint8*)A$1 + 16ll);
 goto label$4951;
 label$4946:;
 TMP$2695$1 = *(double*)((uint8*)B$1 + 16ll);
 label$4951:;
 _ZN7VECTOR3C1Eddd( tmp$2693$1, TMP$2695$1, TMP$2696$1, TMP$2697$1 );
 goto label$4945;
 label$4945:;
 return tmp$2693$1;
}

struct $7VECTOR4* _ZN12SYSTEM_BUS_T5K_MAXER7VECTOR4S1_( struct $7VECTOR4* tmp$2698$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR4* A$1, struct $7VECTOR4* B$1 )
{
 double TMP$2700$1;
 double TMP$2701$1;
 double TMP$2702$1;
 double TMP$2703$1;
 label$4952:;
 if( *(double*)((uint8*)A$1 + 64ll) <= *(double*)((uint8*)B$1 + 64ll) ) goto label$4957;
 TMP$2703$1 = *(double*)((uint8*)A$1 + 64ll);
 goto label$4958;
 label$4957:;
 TMP$2703$1 = *(double*)((uint8*)B$1 + 64ll);
 label$4958:;
 if( *(double*)((uint8*)A$1 + 56ll) <= *(double*)((uint8*)B$1 + 56ll) ) goto label$4956;
 TMP$2702$1 = *(double*)((uint8*)A$1 + 56ll);
 goto label$4959;
 label$4956:;
 TMP$2702$1 = *(double*)((uint8*)B$1 + 56ll);
 label$4959:;
 if( *(double*)((uint8*)A$1 + 48ll) <= *(double*)((uint8*)B$1 + 48ll) ) goto label$4955;
 TMP$2701$1 = *(double*)((uint8*)A$1 + 48ll);
 goto label$4960;
 label$4955:;
 TMP$2701$1 = *(double*)((uint8*)B$1 + 48ll);
 label$4960:;
 if( *(double*)((uint8*)A$1 + 40ll) <= *(double*)((uint8*)B$1 + 40ll) ) goto label$4954;
 TMP$2700$1 = *(double*)((uint8*)A$1 + 40ll);
 goto label$4961;
 label$4954:;
 TMP$2700$1 = *(double*)((uint8*)B$1 + 40ll);
 label$4961:;
 _ZN7VECTOR4C1Edddd( tmp$2698$1, TMP$2700$1, TMP$2701$1, TMP$2702$1, TMP$2703$1 );
 goto label$4953;
 label$4953:;
 return tmp$2698$1;
}

struct $7VECTOR2* _ZN12SYSTEM_BUS_T5K_MAXER7VECTOR2Rd( struct $7VECTOR2* tmp$2704$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR2* A$1, double* B$1 )
{
 double TMP$2706$1;
 double TMP$2707$1;
 label$4962:;
 if( *(double*)((uint8*)A$1 + 8ll) <= *B$1 ) goto label$4965;
 TMP$2707$1 = *(double*)((uint8*)A$1 + 8ll);
 goto label$4966;
 label$4965:;
 TMP$2707$1 = *B$1;
 label$4966:;
 if( *(double*)A$1 <= *B$1 ) goto label$4964;
 TMP$2706$1 = *(double*)A$1;
 goto label$4967;
 label$4964:;
 TMP$2706$1 = *B$1;
 label$4967:;
 _ZN7VECTOR2C1Edd( tmp$2704$1, TMP$2706$1, TMP$2707$1 );
 goto label$4963;
 label$4963:;
 return tmp$2704$1;
}

struct $7VECTOR3* _ZN12SYSTEM_BUS_T5K_MAXER7VECTOR3Rd( struct $7VECTOR3* tmp$2708$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* A$1, double* B$1 )
{
 double TMP$2710$1;
 double TMP$2711$1;
 double TMP$2712$1;
 label$4968:;
 if( *(double*)((uint8*)A$1 + 32ll) <= *B$1 ) goto label$4972;
 TMP$2712$1 = *(double*)((uint8*)A$1 + 32ll);
 goto label$4973;
 label$4972:;
 TMP$2712$1 = *B$1;
 label$4973:;
 if( *(double*)((uint8*)A$1 + 24ll) <= *B$1 ) goto label$4971;
 TMP$2711$1 = *(double*)((uint8*)A$1 + 24ll);
 goto label$4974;
 label$4971:;
 TMP$2711$1 = *B$1;
 label$4974:;
 if( *(double*)((uint8*)A$1 + 16ll) <= *B$1 ) goto label$4970;
 TMP$2710$1 = *(double*)((uint8*)A$1 + 16ll);
 goto label$4975;
 label$4970:;
 TMP$2710$1 = *B$1;
 label$4975:;
 _ZN7VECTOR3C1Eddd( tmp$2708$1, TMP$2710$1, TMP$2711$1, TMP$2712$1 );
 goto label$4969;
 label$4969:;
 return tmp$2708$1;
}

struct $7VECTOR4* _ZN12SYSTEM_BUS_T5K_MAXER7VECTOR4Rd( struct $7VECTOR4* tmp$2713$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR4* A$1, double* B$1 )
{
 double TMP$2715$1;
 double TMP$2716$1;
 double TMP$2717$1;
 double TMP$2718$1;
 label$4976:;
 if( *(double*)((uint8*)A$1 + 64ll) <= *B$1 ) goto label$4981;
 TMP$2718$1 = *(double*)((uint8*)A$1 + 64ll);
 goto label$4982;
 label$4981:;
 TMP$2718$1 = *B$1;
 label$4982:;
 if( *(double*)((uint8*)A$1 + 56ll) <= *B$1 ) goto label$4980;
 TMP$2717$1 = *(double*)((uint8*)A$1 + 56ll);
 goto label$4983;
 label$4980:;
 TMP$2717$1 = *B$1;
 label$4983:;
 if( *(double*)((uint8*)A$1 + 48ll) <= *B$1 ) goto label$4979;
 TMP$2716$1 = *(double*)((uint8*)A$1 + 48ll);
 goto label$4984;
 label$4979:;
 TMP$2716$1 = *B$1;
 label$4984:;
 if( *(double*)((uint8*)A$1 + 40ll) <= *B$1 ) goto label$4978;
 TMP$2715$1 = *(double*)((uint8*)A$1 + 40ll);
 goto label$4985;
 label$4978:;
 TMP$2715$1 = *B$1;
 label$4985:;
 _ZN7VECTOR4C1Edddd( tmp$2713$1, TMP$2715$1, TMP$2716$1, TMP$2717$1, TMP$2718$1 );
 goto label$4977;
 label$4977:;
 return tmp$2713$1;
}

double _ZN12SYSTEM_BUS_T16K_PASCALTRIANGLEEhh( struct $12SYSTEM_BUS_T* THIS$1, uint8 A$1, uint8 B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4986:;
 double RESULT$1;
 RESULT$1 = 0x1.p+0;
 double I$1;
 __builtin_memset( &I$1, 0, 8ll );
 {
  I$1 = 0x0p+0;
  double TMP$2719$2;
  TMP$2719$2 = (double)B$1;
  goto label$4988;
  label$4991:;
  {
   RESULT$1 = RESULT$1 * (((double)(int64)A$1 - I$1) / (I$1 + 0x1.p+0));
  }
  label$4989:;
  I$1 = I$1 + 0x1.p+0;
  label$4988:;
  if( I$1 <= TMP$2719$2 ) goto label$4991;
  label$4990:;
 }
 fb$result$1 = RESULT$1;
 goto label$4987;
 label$4987:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T16K_PASCALTRIANGLEEaa( struct $12SYSTEM_BUS_T* THIS$1, int8 A$1, int8 B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4992:;
 double RESULT$1;
 RESULT$1 = 0x1.p+0;
 double I$1;
 __builtin_memset( &I$1, 0, 8ll );
 {
  I$1 = 0x0p+0;
  double TMP$2720$2;
  TMP$2720$2 = (double)B$1;
  goto label$4994;
  label$4997:;
  {
   RESULT$1 = RESULT$1 * (((double)(int64)A$1 - I$1) / (I$1 + 0x1.p+0));
  }
  label$4995:;
  I$1 = I$1 + 0x1.p+0;
  label$4994:;
  if( I$1 <= TMP$2720$2 ) goto label$4997;
  label$4996:;
 }
 fb$result$1 = RESULT$1;
 goto label$4993;
 label$4993:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T16K_PASCALTRIANGLEEtt( struct $12SYSTEM_BUS_T* THIS$1, uint16 A$1, uint16 B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4998:;
 double RESULT$1;
 RESULT$1 = 0x1.p+0;
 double I$1;
 __builtin_memset( &I$1, 0, 8ll );
 {
  I$1 = 0x0p+0;
  double TMP$2721$2;
  TMP$2721$2 = (double)B$1;
  goto label$5000;
  label$5003:;
  {
   RESULT$1 = RESULT$1 * (((double)(int64)A$1 - I$1) / (I$1 + 0x1.p+0));
  }
  label$5001:;
  I$1 = I$1 + 0x1.p+0;
  label$5000:;
  if( I$1 <= TMP$2721$2 ) goto label$5003;
  label$5002:;
 }
 fb$result$1 = RESULT$1;
 goto label$4999;
 label$4999:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T16K_PASCALTRIANGLEEss( struct $12SYSTEM_BUS_T* THIS$1, int16 A$1, int16 B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5004:;
 double RESULT$1;
 RESULT$1 = 0x1.p+0;
 double I$1;
 __builtin_memset( &I$1, 0, 8ll );
 {
  I$1 = 0x0p+0;
  double TMP$2722$2;
  TMP$2722$2 = (double)B$1;
  goto label$5006;
  label$5009:;
  {
   RESULT$1 = RESULT$1 * (((double)(int64)A$1 - I$1) / (I$1 + 0x1.p+0));
  }
  label$5007:;
  I$1 = I$1 + 0x1.p+0;
  label$5006:;
  if( I$1 <= TMP$2722$2 ) goto label$5009;
  label$5008:;
 }
 fb$result$1 = RESULT$1;
 goto label$5005;
 label$5005:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T16K_PASCALTRIANGLEEjj( struct $12SYSTEM_BUS_T* THIS$1, uint32 A$1, uint32 B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5010:;
 double RESULT$1;
 RESULT$1 = 0x1.p+0;
 double I$1;
 __builtin_memset( &I$1, 0, 8ll );
 {
  I$1 = 0x0p+0;
  double TMP$2723$2;
  TMP$2723$2 = (double)B$1;
  goto label$5012;
  label$5015:;
  {
   RESULT$1 = RESULT$1 * (((double)(int64)A$1 - I$1) / (I$1 + 0x1.p+0));
  }
  label$5013:;
  I$1 = I$1 + 0x1.p+0;
  label$5012:;
  if( I$1 <= TMP$2723$2 ) goto label$5015;
  label$5014:;
 }
 fb$result$1 = RESULT$1;
 goto label$5011;
 label$5011:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T16K_PASCALTRIANGLEEii( struct $12SYSTEM_BUS_T* THIS$1, int32 A$1, int32 B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5016:;
 double RESULT$1;
 RESULT$1 = 0x1.p+0;
 double I$1;
 __builtin_memset( &I$1, 0, 8ll );
 {
  I$1 = 0x0p+0;
  double TMP$2724$2;
  TMP$2724$2 = (double)B$1;
  goto label$5018;
  label$5021:;
  {
   RESULT$1 = RESULT$1 * (((double)(int64)A$1 - I$1) / (I$1 + 0x1.p+0));
  }
  label$5019:;
  I$1 = I$1 + 0x1.p+0;
  label$5018:;
  if( I$1 <= TMP$2724$2 ) goto label$5021;
  label$5020:;
 }
 fb$result$1 = RESULT$1;
 goto label$5017;
 label$5017:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T16K_PASCALTRIANGLEEyy( struct $12SYSTEM_BUS_T* THIS$1, uint64 A$1, uint64 B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5022:;
 double RESULT$1;
 RESULT$1 = 0x1.p+0;
 double I$1;
 __builtin_memset( &I$1, 0, 8ll );
 {
  I$1 = 0x0p+0;
  double TMP$2725$2;
  TMP$2725$2 = (double)B$1;
  goto label$5024;
  label$5027:;
  {
   RESULT$1 = RESULT$1 * (((double)A$1 - I$1) / (I$1 + 0x1.p+0));
  }
  label$5025:;
  I$1 = I$1 + 0x1.p+0;
  label$5024:;
  if( I$1 <= TMP$2725$2 ) goto label$5027;
  label$5026:;
 }
 fb$result$1 = RESULT$1;
 goto label$5023;
 label$5023:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T16K_PASCALTRIANGLEExx( struct $12SYSTEM_BUS_T* THIS$1, int64 A$1, int64 B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5028:;
 double RESULT$1;
 RESULT$1 = 0x1.p+0;
 double I$1;
 __builtin_memset( &I$1, 0, 8ll );
 {
  I$1 = 0x0p+0;
  double TMP$2726$2;
  TMP$2726$2 = (double)B$1;
  goto label$5030;
  label$5033:;
  {
   RESULT$1 = RESULT$1 * (((double)A$1 - I$1) / (I$1 + 0x1.p+0));
  }
  label$5031:;
  I$1 = I$1 + 0x1.p+0;
  label$5030:;
  if( I$1 <= TMP$2726$2 ) goto label$5033;
  label$5032:;
 }
 fb$result$1 = RESULT$1;
 goto label$5029;
 label$5029:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T16K_PASCALTRIANGLEEff( struct $12SYSTEM_BUS_T* THIS$1, float A$1, float B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5034:;
 double RESULT$1;
 RESULT$1 = 0x1.p+0;
 double I$1;
 __builtin_memset( &I$1, 0, 8ll );
 {
  I$1 = 0x0p+0;
  double TMP$2727$2;
  TMP$2727$2 = (double)B$1;
  goto label$5036;
  label$5039:;
  {
   RESULT$1 = RESULT$1 * (((double)A$1 - I$1) / (I$1 + 0x1.p+0));
  }
  label$5037:;
  I$1 = I$1 + 0x1.p+0;
  label$5036:;
  if( I$1 <= TMP$2727$2 ) goto label$5039;
  label$5038:;
 }
 fb$result$1 = RESULT$1;
 goto label$5035;
 label$5035:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T16K_PASCALTRIANGLEEdd( struct $12SYSTEM_BUS_T* THIS$1, double A$1, double B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5040:;
 double RESULT$1;
 RESULT$1 = 0x1.p+0;
 double I$1;
 __builtin_memset( &I$1, 0, 8ll );
 {
  I$1 = 0x0p+0;
  double TMP$2728$2;
  TMP$2728$2 = B$1;
  goto label$5042;
  label$5045:;
  {
   RESULT$1 = RESULT$1 * ((A$1 - I$1) / (I$1 + 0x1.p+0));
  }
  label$5043:;
  I$1 = I$1 + 0x1.p+0;
  label$5042:;
  if( I$1 <= TMP$2728$2 ) goto label$5045;
  label$5044:;
 }
 fb$result$1 = RESULT$1;
 goto label$5041;
 label$5041:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_CLAMPEhhh( struct $12SYSTEM_BUS_T* THIS$1, uint8 A$1, uint8 B$1, uint8 C$1 )
{
 uint8 TMP$2729$1;
 uint8 TMP$2730$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5046:;
 if( (int64)A$1 >= (int64)B$1 ) goto label$5049;
 TMP$2730$1 = B$1;
 goto label$5050;
 label$5049:;
 if( (int64)A$1 <= (int64)C$1 ) goto label$5048;
 TMP$2729$1 = C$1;
 goto label$5051;
 label$5048:;
 TMP$2729$1 = A$1;
 label$5051:;
 TMP$2730$1 = TMP$2729$1;
 label$5050:;
 fb$result$1 = (double)TMP$2730$1;
 goto label$5047;
 label$5047:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_CLAMPEaaa( struct $12SYSTEM_BUS_T* THIS$1, int8 A$1, int8 B$1, int8 C$1 )
{
 int8 TMP$2731$1;
 int8 TMP$2732$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5052:;
 if( (int64)A$1 >= (int64)B$1 ) goto label$5055;
 TMP$2732$1 = B$1;
 goto label$5056;
 label$5055:;
 if( (int64)A$1 <= (int64)C$1 ) goto label$5054;
 TMP$2731$1 = C$1;
 goto label$5057;
 label$5054:;
 TMP$2731$1 = A$1;
 label$5057:;
 TMP$2732$1 = TMP$2731$1;
 label$5056:;
 fb$result$1 = (double)TMP$2732$1;
 goto label$5053;
 label$5053:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_CLAMPEttt( struct $12SYSTEM_BUS_T* THIS$1, uint16 A$1, uint16 B$1, uint16 C$1 )
{
 uint16 TMP$2733$1;
 uint16 TMP$2734$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5058:;
 if( (int64)A$1 >= (int64)B$1 ) goto label$5061;
 TMP$2734$1 = B$1;
 goto label$5062;
 label$5061:;
 if( (int64)A$1 <= (int64)C$1 ) goto label$5060;
 TMP$2733$1 = C$1;
 goto label$5063;
 label$5060:;
 TMP$2733$1 = A$1;
 label$5063:;
 TMP$2734$1 = TMP$2733$1;
 label$5062:;
 fb$result$1 = (double)TMP$2734$1;
 goto label$5059;
 label$5059:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_CLAMPEsss( struct $12SYSTEM_BUS_T* THIS$1, int16 A$1, int16 B$1, int16 C$1 )
{
 int16 TMP$2735$1;
 int16 TMP$2736$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5064:;
 if( (int64)A$1 >= (int64)B$1 ) goto label$5067;
 TMP$2736$1 = B$1;
 goto label$5068;
 label$5067:;
 if( (int64)A$1 <= (int64)C$1 ) goto label$5066;
 TMP$2735$1 = C$1;
 goto label$5069;
 label$5066:;
 TMP$2735$1 = A$1;
 label$5069:;
 TMP$2736$1 = TMP$2735$1;
 label$5068:;
 fb$result$1 = (double)TMP$2736$1;
 goto label$5065;
 label$5065:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_CLAMPEjjj( struct $12SYSTEM_BUS_T* THIS$1, uint32 A$1, uint32 B$1, uint32 C$1 )
{
 uint32 TMP$2737$1;
 uint32 TMP$2738$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5070:;
 if( (int64)A$1 >= (int64)B$1 ) goto label$5073;
 TMP$2738$1 = B$1;
 goto label$5074;
 label$5073:;
 if( (int64)A$1 <= (int64)C$1 ) goto label$5072;
 TMP$2737$1 = C$1;
 goto label$5075;
 label$5072:;
 TMP$2737$1 = A$1;
 label$5075:;
 TMP$2738$1 = TMP$2737$1;
 label$5074:;
 fb$result$1 = (double)TMP$2738$1;
 goto label$5071;
 label$5071:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_CLAMPEiii( struct $12SYSTEM_BUS_T* THIS$1, int32 A$1, int32 B$1, int32 C$1 )
{
 int32 TMP$2739$1;
 int32 TMP$2740$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5076:;
 if( (int64)A$1 >= (int64)B$1 ) goto label$5079;
 TMP$2740$1 = B$1;
 goto label$5080;
 label$5079:;
 if( (int64)A$1 <= (int64)C$1 ) goto label$5078;
 TMP$2739$1 = C$1;
 goto label$5081;
 label$5078:;
 TMP$2739$1 = A$1;
 label$5081:;
 TMP$2740$1 = TMP$2739$1;
 label$5080:;
 fb$result$1 = (double)TMP$2740$1;
 goto label$5077;
 label$5077:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_CLAMPEyyy( struct $12SYSTEM_BUS_T* THIS$1, uint64 A$1, uint64 B$1, uint64 C$1 )
{
 uint64 TMP$2741$1;
 uint64 TMP$2742$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5082:;
 if( A$1 >= B$1 ) goto label$5085;
 TMP$2742$1 = B$1;
 goto label$5086;
 label$5085:;
 if( A$1 <= C$1 ) goto label$5084;
 TMP$2741$1 = C$1;
 goto label$5087;
 label$5084:;
 TMP$2741$1 = A$1;
 label$5087:;
 TMP$2742$1 = TMP$2741$1;
 label$5086:;
 fb$result$1 = (double)TMP$2742$1;
 goto label$5083;
 label$5083:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_CLAMPExxx( struct $12SYSTEM_BUS_T* THIS$1, int64 A$1, int64 B$1, int64 C$1 )
{
 int64 TMP$2743$1;
 int64 TMP$2744$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5088:;
 if( A$1 >= B$1 ) goto label$5091;
 TMP$2744$1 = B$1;
 goto label$5092;
 label$5091:;
 if( A$1 <= C$1 ) goto label$5090;
 TMP$2743$1 = C$1;
 goto label$5093;
 label$5090:;
 TMP$2743$1 = A$1;
 label$5093:;
 TMP$2744$1 = TMP$2743$1;
 label$5092:;
 fb$result$1 = (double)TMP$2744$1;
 goto label$5089;
 label$5089:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_CLAMPEfff( struct $12SYSTEM_BUS_T* THIS$1, float A$1, float B$1, float C$1 )
{
 float TMP$2745$1;
 float TMP$2746$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5094:;
 if( A$1 >= B$1 ) goto label$5097;
 TMP$2746$1 = B$1;
 goto label$5098;
 label$5097:;
 if( A$1 <= C$1 ) goto label$5096;
 TMP$2745$1 = C$1;
 goto label$5099;
 label$5096:;
 TMP$2745$1 = A$1;
 label$5099:;
 TMP$2746$1 = TMP$2745$1;
 label$5098:;
 fb$result$1 = (double)TMP$2746$1;
 goto label$5095;
 label$5095:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_CLAMPEddd( struct $12SYSTEM_BUS_T* THIS$1, double A$1, double B$1, double C$1 )
{
 double TMP$2747$1;
 double TMP$2748$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5100:;
 if( A$1 >= B$1 ) goto label$5103;
 TMP$2748$1 = B$1;
 goto label$5104;
 label$5103:;
 if( A$1 <= C$1 ) goto label$5102;
 TMP$2747$1 = C$1;
 goto label$5105;
 label$5102:;
 TMP$2747$1 = A$1;
 label$5105:;
 TMP$2748$1 = TMP$2747$1;
 label$5104:;
 fb$result$1 = TMP$2748$1;
 goto label$5101;
 label$5101:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_CLAMPER9_FLOAT128S1_S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* A$1, struct $9_FLOAT128* B$1, struct $9_FLOAT128* C$1 )
{
 struct $9_FLOAT128 TMP$2749$1;
 double TMP$2750$1;
 double TMP$2751$1;
 double TMP$2752$1;
 double TMP$2753$1;
 double TMP$2754$1;
 double TMP$2755$1;
 double TMP$2756$1;
 double TMP$2757$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5106:;
 if( *(double*)((uint8*)A$1 + 8ll) >= *(double*)((uint8*)B$1 + 8ll) ) goto label$5115;
 TMP$2757$1 = *(double*)((uint8*)B$1 + 8ll);
 goto label$5116;
 label$5115:;
 if( *(double*)A$1 <= *(double*)((uint8*)C$1 + 8ll) ) goto label$5114;
 TMP$2756$1 = *(double*)((uint8*)C$1 + 8ll);
 goto label$5117;
 label$5114:;
 TMP$2756$1 = *(double*)((uint8*)A$1 + 8ll);
 label$5117:;
 TMP$2757$1 = TMP$2756$1;
 label$5116:;
 if( *(double*)A$1 >= *(double*)B$1 ) goto label$5113;
 TMP$2755$1 = *(double*)B$1;
 goto label$5118;
 label$5113:;
 if( *(double*)A$1 <= *(double*)C$1 ) goto label$5112;
 TMP$2754$1 = *(double*)C$1;
 goto label$5119;
 label$5112:;
 TMP$2754$1 = *(double*)A$1;
 label$5119:;
 TMP$2755$1 = TMP$2754$1;
 label$5118:;
 if( *(double*)((uint8*)A$1 + 8ll) >= *(double*)((uint8*)B$1 + 8ll) ) goto label$5111;
 TMP$2753$1 = *(double*)((uint8*)B$1 + 8ll);
 goto label$5120;
 label$5111:;
 if( *(double*)((uint8*)A$1 + 8ll) <= *(double*)((uint8*)C$1 + 8ll) ) goto label$5110;
 TMP$2752$1 = *(double*)((uint8*)C$1 + 8ll);
 goto label$5121;
 label$5110:;
 TMP$2752$1 = *(double*)((uint8*)A$1 + 8ll);
 label$5121:;
 TMP$2753$1 = TMP$2752$1;
 label$5120:;
 if( *(double*)A$1 >= *(double*)B$1 ) goto label$5109;
 TMP$2751$1 = *(double*)B$1;
 goto label$5122;
 label$5109:;
 if( *(double*)A$1 <= *(double*)C$1 ) goto label$5108;
 TMP$2750$1 = *(double*)C$1;
 goto label$5123;
 label$5108:;
 TMP$2750$1 = *(double*)A$1;
 label$5123:;
 TMP$2751$1 = TMP$2750$1;
 label$5122:;
 _ZN9_FLOAT128C1Edddd( &TMP$2749$1, TMP$2751$1, TMP$2753$1, TMP$2755$1, TMP$2757$1 );
 uint64 vr$31 = _ZN9_FLOAT128cvyEv( &TMP$2749$1 );
 fb$result$1 = (double)vr$31;
 goto label$5107;
 label$5107:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_CLAMPER9_FLOAT256S1_S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* A$1, struct $9_FLOAT256* B$1, struct $9_FLOAT256* C$1 )
{
 struct $9_FLOAT256 TMP$2758$1;
 double TMP$2759$1;
 double TMP$2760$1;
 double TMP$2761$1;
 double TMP$2762$1;
 double TMP$2763$1;
 double TMP$2764$1;
 double TMP$2765$1;
 double TMP$2766$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5124:;
 if( *(double*)A$1 >= *(double*)B$1 ) goto label$5133;
 TMP$2766$1 = *(double*)B$1;
 goto label$5134;
 label$5133:;
 if( *(double*)A$1 <= *(double*)C$1 ) goto label$5132;
 TMP$2765$1 = *(double*)C$1;
 goto label$5135;
 label$5132:;
 TMP$2765$1 = *(double*)A$1;
 label$5135:;
 TMP$2766$1 = TMP$2765$1;
 label$5134:;
 if( *(double*)A$1 >= *(double*)B$1 ) goto label$5131;
 TMP$2764$1 = *(double*)B$1;
 goto label$5136;
 label$5131:;
 if( *(double*)A$1 <= *(double*)C$1 ) goto label$5130;
 TMP$2763$1 = *(double*)C$1;
 goto label$5137;
 label$5130:;
 TMP$2763$1 = *(double*)A$1;
 label$5137:;
 TMP$2764$1 = TMP$2763$1;
 label$5136:;
 if( *(double*)A$1 >= *(double*)B$1 ) goto label$5129;
 TMP$2762$1 = *(double*)B$1;
 goto label$5138;
 label$5129:;
 if( *(double*)A$1 <= *(double*)C$1 ) goto label$5128;
 TMP$2761$1 = *(double*)C$1;
 goto label$5139;
 label$5128:;
 TMP$2761$1 = *(double*)A$1;
 label$5139:;
 TMP$2762$1 = TMP$2761$1;
 label$5138:;
 if( *(double*)A$1 >= *(double*)B$1 ) goto label$5127;
 TMP$2760$1 = *(double*)B$1;
 goto label$5140;
 label$5127:;
 if( *(double*)A$1 <= *(double*)C$1 ) goto label$5126;
 TMP$2759$1 = *(double*)C$1;
 goto label$5141;
 label$5126:;
 TMP$2759$1 = *(double*)A$1;
 label$5141:;
 TMP$2760$1 = TMP$2759$1;
 label$5140:;
 _ZN9_FLOAT256C1Edddd( &TMP$2758$1, TMP$2760$1, TMP$2762$1, TMP$2764$1, TMP$2766$1 );
 uint64 vr$31 = _ZN9_FLOAT256cvyEv( &TMP$2758$1 );
 fb$result$1 = (double)vr$31;
 goto label$5125;
 label$5125:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_CLAMPER9_FLOAT512S1_S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* A$1, struct $9_FLOAT512* B$1, struct $9_FLOAT512* C$1 )
{
 struct $9_FLOAT512 TMP$2767$1;
 double TMP$2768$1;
 double TMP$2769$1;
 double TMP$2770$1;
 double TMP$2771$1;
 double TMP$2772$1;
 double TMP$2773$1;
 double TMP$2774$1;
 double TMP$2775$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5142:;
 if( *(double*)A$1 >= *(double*)B$1 ) goto label$5151;
 TMP$2775$1 = *(double*)B$1;
 goto label$5152;
 label$5151:;
 if( *(double*)A$1 <= *(double*)C$1 ) goto label$5150;
 TMP$2774$1 = *(double*)C$1;
 goto label$5153;
 label$5150:;
 TMP$2774$1 = *(double*)A$1;
 label$5153:;
 TMP$2775$1 = TMP$2774$1;
 label$5152:;
 if( *(double*)A$1 >= *(double*)B$1 ) goto label$5149;
 TMP$2773$1 = *(double*)B$1;
 goto label$5154;
 label$5149:;
 if( *(double*)A$1 <= *(double*)C$1 ) goto label$5148;
 TMP$2772$1 = *(double*)C$1;
 goto label$5155;
 label$5148:;
 TMP$2772$1 = *(double*)A$1;
 label$5155:;
 TMP$2773$1 = TMP$2772$1;
 label$5154:;
 if( *(double*)A$1 >= *(double*)B$1 ) goto label$5147;
 TMP$2771$1 = *(double*)B$1;
 goto label$5156;
 label$5147:;
 if( *(double*)A$1 <= *(double*)C$1 ) goto label$5146;
 TMP$2770$1 = *(double*)C$1;
 goto label$5157;
 label$5146:;
 TMP$2770$1 = *(double*)A$1;
 label$5157:;
 TMP$2771$1 = TMP$2770$1;
 label$5156:;
 if( *(double*)A$1 >= *(double*)B$1 ) goto label$5145;
 TMP$2769$1 = *(double*)B$1;
 goto label$5158;
 label$5145:;
 if( *(double*)A$1 <= *(double*)C$1 ) goto label$5144;
 TMP$2768$1 = *(double*)C$1;
 goto label$5159;
 label$5144:;
 TMP$2768$1 = *(double*)A$1;
 label$5159:;
 TMP$2769$1 = TMP$2768$1;
 label$5158:;
 _ZN9_FLOAT512C1Edddd( &TMP$2767$1, TMP$2769$1, TMP$2771$1, TMP$2773$1, TMP$2775$1 );
 uint64 vr$31 = _ZN9_FLOAT512cvyEv( &TMP$2767$1 );
 fb$result$1 = (double)vr$31;
 goto label$5143;
 label$5143:;
 return fb$result$1;
}

struct $7VECTOR2* _ZN12SYSTEM_BUS_T7K_CLAMPER7VECTOR2S1_S1_( struct $7VECTOR2* tmp$2776$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR2* A$1, struct $7VECTOR2* B$1, struct $7VECTOR2* C$1 )
{
 double TMP$2778$1;
 double TMP$2779$1;
 double TMP$2780$1;
 double TMP$2781$1;
 label$5160:;
 if( *(double*)((uint8*)A$1 + 8ll) >= *(double*)((uint8*)B$1 + 8ll) ) goto label$5165;
 TMP$2781$1 = *(double*)((uint8*)B$1 + 8ll);
 goto label$5166;
 label$5165:;
 if( *(double*)((uint8*)A$1 + 8ll) <= *(double*)((uint8*)C$1 + 8ll) ) goto label$5164;
 TMP$2780$1 = *(double*)((uint8*)C$1 + 8ll);
 goto label$5167;
 label$5164:;
 TMP$2780$1 = *(double*)((uint8*)A$1 + 8ll);
 label$5167:;
 TMP$2781$1 = TMP$2780$1;
 label$5166:;
 if( *(double*)A$1 >= *(double*)B$1 ) goto label$5163;
 TMP$2779$1 = *(double*)B$1;
 goto label$5168;
 label$5163:;
 if( *(double*)A$1 <= *(double*)C$1 ) goto label$5162;
 TMP$2778$1 = *(double*)C$1;
 goto label$5169;
 label$5162:;
 TMP$2778$1 = *(double*)A$1;
 label$5169:;
 TMP$2779$1 = TMP$2778$1;
 label$5168:;
 _ZN7VECTOR2C1Edd( tmp$2776$1, TMP$2779$1, TMP$2781$1 );
 goto label$5161;
 label$5161:;
 return tmp$2776$1;
}

struct $7VECTOR3* _ZN12SYSTEM_BUS_T7K_CLAMPER7VECTOR3S1_S1_( struct $7VECTOR3* tmp$2782$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* A$1, struct $7VECTOR3* B$1, struct $7VECTOR3* C$1 )
{
 double TMP$2784$1;
 double TMP$2785$1;
 double TMP$2786$1;
 double TMP$2787$1;
 double TMP$2788$1;
 double TMP$2789$1;
 label$5170:;
 if( *(double*)((uint8*)A$1 + 32ll) >= *(double*)((uint8*)B$1 + 32ll) ) goto label$5177;
 TMP$2789$1 = *(double*)((uint8*)B$1 + 32ll);
 goto label$5178;
 label$5177:;
 if( *(double*)((uint8*)A$1 + 32ll) <= *(double*)((uint8*)C$1 + 32ll) ) goto label$5176;
 TMP$2788$1 = *(double*)((uint8*)C$1 + 32ll);
 goto label$5179;
 label$5176:;
 TMP$2788$1 = *(double*)((uint8*)A$1 + 32ll);
 label$5179:;
 TMP$2789$1 = TMP$2788$1;
 label$5178:;
 if( *(double*)((uint8*)A$1 + 24ll) >= *(double*)((uint8*)B$1 + 24ll) ) goto label$5175;
 TMP$2787$1 = *(double*)((uint8*)B$1 + 24ll);
 goto label$5180;
 label$5175:;
 if( *(double*)((uint8*)A$1 + 24ll) <= *(double*)((uint8*)C$1 + 24ll) ) goto label$5174;
 TMP$2786$1 = *(double*)((uint8*)C$1 + 24ll);
 goto label$5181;
 label$5174:;
 TMP$2786$1 = *(double*)((uint8*)A$1 + 24ll);
 label$5181:;
 TMP$2787$1 = TMP$2786$1;
 label$5180:;
 if( *(double*)((uint8*)A$1 + 16ll) >= *(double*)((uint8*)B$1 + 16ll) ) goto label$5173;
 TMP$2785$1 = *(double*)((uint8*)B$1 + 16ll);
 goto label$5182;
 label$5173:;
 if( *(double*)((uint8*)A$1 + 16ll) <= *(double*)((uint8*)C$1 + 16ll) ) goto label$5172;
 TMP$2784$1 = *(double*)((uint8*)C$1 + 16ll);
 goto label$5183;
 label$5172:;
 TMP$2784$1 = *(double*)((uint8*)A$1 + 16ll);
 label$5183:;
 TMP$2785$1 = TMP$2784$1;
 label$5182:;
 _ZN7VECTOR3C1Eddd( tmp$2782$1, TMP$2785$1, TMP$2787$1, TMP$2789$1 );
 goto label$5171;
 label$5171:;
 return tmp$2782$1;
}

struct $7VECTOR4* _ZN12SYSTEM_BUS_T7K_CLAMPER7VECTOR4S1_S1_( struct $7VECTOR4* tmp$2790$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR4* A$1, struct $7VECTOR4* B$1, struct $7VECTOR4* C$1 )
{
 double TMP$2792$1;
 double TMP$2793$1;
 double TMP$2794$1;
 double TMP$2795$1;
 double TMP$2796$1;
 double TMP$2797$1;
 double TMP$2798$1;
 double TMP$2799$1;
 label$5184:;
 if( *(double*)((uint8*)A$1 + 64ll) >= *(double*)((uint8*)B$1 + 64ll) ) goto label$5193;
 TMP$2799$1 = *(double*)((uint8*)B$1 + 64ll);
 goto label$5194;
 label$5193:;
 if( *(double*)((uint8*)A$1 + 56ll) <= *(double*)((uint8*)C$1 + 64ll) ) goto label$5192;
 TMP$2798$1 = *(double*)((uint8*)C$1 + 64ll);
 goto label$5195;
 label$5192:;
 TMP$2798$1 = *(double*)((uint8*)A$1 + 64ll);
 label$5195:;
 TMP$2799$1 = TMP$2798$1;
 label$5194:;
 if( *(double*)((uint8*)A$1 + 56ll) >= *(double*)((uint8*)B$1 + 56ll) ) goto label$5191;
 TMP$2797$1 = *(double*)((uint8*)B$1 + 56ll);
 goto label$5196;
 label$5191:;
 if( *(double*)((uint8*)A$1 + 56ll) <= *(double*)((uint8*)C$1 + 56ll) ) goto label$5190;
 TMP$2796$1 = *(double*)((uint8*)C$1 + 56ll);
 goto label$5197;
 label$5190:;
 TMP$2796$1 = *(double*)((uint8*)A$1 + 56ll);
 label$5197:;
 TMP$2797$1 = TMP$2796$1;
 label$5196:;
 if( *(double*)((uint8*)A$1 + 48ll) >= *(double*)((uint8*)B$1 + 48ll) ) goto label$5189;
 TMP$2795$1 = *(double*)((uint8*)B$1 + 48ll);
 goto label$5198;
 label$5189:;
 if( *(double*)((uint8*)A$1 + 48ll) <= *(double*)((uint8*)C$1 + 48ll) ) goto label$5188;
 TMP$2794$1 = *(double*)((uint8*)C$1 + 48ll);
 goto label$5199;
 label$5188:;
 TMP$2794$1 = *(double*)((uint8*)A$1 + 48ll);
 label$5199:;
 TMP$2795$1 = TMP$2794$1;
 label$5198:;
 if( *(double*)((uint8*)A$1 + 40ll) >= *(double*)((uint8*)B$1 + 40ll) ) goto label$5187;
 TMP$2793$1 = *(double*)((uint8*)B$1 + 40ll);
 goto label$5200;
 label$5187:;
 if( *(double*)((uint8*)A$1 + 40ll) <= *(double*)((uint8*)C$1 + 40ll) ) goto label$5186;
 TMP$2792$1 = *(double*)((uint8*)C$1 + 40ll);
 goto label$5201;
 label$5186:;
 TMP$2792$1 = *(double*)((uint8*)A$1 + 40ll);
 label$5201:;
 TMP$2793$1 = TMP$2792$1;
 label$5200:;
 _ZN7VECTOR4C1Edddd( tmp$2790$1, TMP$2793$1, TMP$2795$1, TMP$2797$1, TMP$2799$1 );
 goto label$5185;
 label$5185:;
 return tmp$2790$1;
}

struct $7VECTOR2* _ZN12SYSTEM_BUS_T7K_CLAMPER7VECTOR2dd( struct $7VECTOR2* tmp$2800$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR2* A$1, double B$1, double C$1 )
{
 double TMP$2802$1;
 double TMP$2803$1;
 double TMP$2804$1;
 double TMP$2805$1;
 label$5202:;
 if( *(double*)((uint8*)A$1 + 8ll) >= B$1 ) goto label$5207;
 TMP$2805$1 = B$1;
 goto label$5208;
 label$5207:;
 if( *(double*)((uint8*)A$1 + 8ll) <= C$1 ) goto label$5206;
 TMP$2804$1 = C$1;
 goto label$5209;
 label$5206:;
 TMP$2804$1 = *(double*)((uint8*)A$1 + 8ll);
 label$5209:;
 TMP$2805$1 = TMP$2804$1;
 label$5208:;
 if( *(double*)A$1 >= B$1 ) goto label$5205;
 TMP$2803$1 = B$1;
 goto label$5210;
 label$5205:;
 if( *(double*)A$1 <= C$1 ) goto label$5204;
 TMP$2802$1 = C$1;
 goto label$5211;
 label$5204:;
 TMP$2802$1 = *(double*)A$1;
 label$5211:;
 TMP$2803$1 = TMP$2802$1;
 label$5210:;
 _ZN7VECTOR2C1Edd( tmp$2800$1, TMP$2803$1, TMP$2805$1 );
 goto label$5203;
 label$5203:;
 return tmp$2800$1;
}

struct $7VECTOR3* _ZN12SYSTEM_BUS_T7K_CLAMPER7VECTOR3dd( struct $7VECTOR3* tmp$2806$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* A$1, double B$1, double C$1 )
{
 double TMP$2808$1;
 double TMP$2809$1;
 double TMP$2810$1;
 double TMP$2811$1;
 double TMP$2812$1;
 double TMP$2813$1;
 label$5212:;
 if( *(double*)((uint8*)A$1 + 32ll) >= B$1 ) goto label$5219;
 TMP$2813$1 = B$1;
 goto label$5220;
 label$5219:;
 if( *(double*)((uint8*)A$1 + 32ll) <= C$1 ) goto label$5218;
 TMP$2812$1 = C$1;
 goto label$5221;
 label$5218:;
 TMP$2812$1 = *(double*)((uint8*)A$1 + 32ll);
 label$5221:;
 TMP$2813$1 = TMP$2812$1;
 label$5220:;
 if( *(double*)((uint8*)A$1 + 24ll) >= B$1 ) goto label$5217;
 TMP$2811$1 = B$1;
 goto label$5222;
 label$5217:;
 if( *(double*)((uint8*)A$1 + 24ll) <= C$1 ) goto label$5216;
 TMP$2810$1 = C$1;
 goto label$5223;
 label$5216:;
 TMP$2810$1 = *(double*)((uint8*)A$1 + 24ll);
 label$5223:;
 TMP$2811$1 = TMP$2810$1;
 label$5222:;
 if( *(double*)((uint8*)A$1 + 16ll) >= B$1 ) goto label$5215;
 TMP$2809$1 = B$1;
 goto label$5224;
 label$5215:;
 if( *(double*)((uint8*)A$1 + 16ll) <= C$1 ) goto label$5214;
 TMP$2808$1 = C$1;
 goto label$5225;
 label$5214:;
 TMP$2808$1 = *(double*)((uint8*)A$1 + 16ll);
 label$5225:;
 TMP$2809$1 = TMP$2808$1;
 label$5224:;
 _ZN7VECTOR3C1Eddd( tmp$2806$1, TMP$2809$1, TMP$2811$1, TMP$2813$1 );
 goto label$5213;
 label$5213:;
 return tmp$2806$1;
}

struct $7VECTOR4* _ZN12SYSTEM_BUS_T7K_CLAMPER7VECTOR4dd( struct $7VECTOR4* tmp$2814$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR4* A$1, double B$1, double C$1 )
{
 double TMP$2816$1;
 double TMP$2817$1;
 double TMP$2818$1;
 double TMP$2819$1;
 double TMP$2820$1;
 double TMP$2821$1;
 double TMP$2822$1;
 double TMP$2823$1;
 label$5226:;
 if( *(double*)((uint8*)A$1 + 64ll) >= B$1 ) goto label$5235;
 TMP$2823$1 = B$1;
 goto label$5236;
 label$5235:;
 if( *(double*)((uint8*)A$1 + 56ll) <= C$1 ) goto label$5234;
 TMP$2822$1 = C$1;
 goto label$5237;
 label$5234:;
 TMP$2822$1 = *(double*)((uint8*)A$1 + 64ll);
 label$5237:;
 TMP$2823$1 = TMP$2822$1;
 label$5236:;
 if( *(double*)((uint8*)A$1 + 56ll) >= B$1 ) goto label$5233;
 TMP$2821$1 = B$1;
 goto label$5238;
 label$5233:;
 if( *(double*)((uint8*)A$1 + 56ll) <= C$1 ) goto label$5232;
 TMP$2820$1 = C$1;
 goto label$5239;
 label$5232:;
 TMP$2820$1 = *(double*)((uint8*)A$1 + 56ll);
 label$5239:;
 TMP$2821$1 = TMP$2820$1;
 label$5238:;
 if( *(double*)((uint8*)A$1 + 48ll) >= B$1 ) goto label$5231;
 TMP$2819$1 = B$1;
 goto label$5240;
 label$5231:;
 if( *(double*)((uint8*)A$1 + 48ll) <= C$1 ) goto label$5230;
 TMP$2818$1 = C$1;
 goto label$5241;
 label$5230:;
 TMP$2818$1 = *(double*)((uint8*)A$1 + 48ll);
 label$5241:;
 TMP$2819$1 = TMP$2818$1;
 label$5240:;
 if( *(double*)((uint8*)A$1 + 40ll) >= B$1 ) goto label$5229;
 TMP$2817$1 = B$1;
 goto label$5242;
 label$5229:;
 if( *(double*)((uint8*)A$1 + 40ll) <= C$1 ) goto label$5228;
 TMP$2816$1 = C$1;
 goto label$5243;
 label$5228:;
 TMP$2816$1 = *(double*)((uint8*)A$1 + 40ll);
 label$5243:;
 TMP$2817$1 = TMP$2816$1;
 label$5242:;
 _ZN7VECTOR4C1Edddd( tmp$2814$1, TMP$2817$1, TMP$2819$1, TMP$2821$1, TMP$2823$1 );
 goto label$5227;
 label$5227:;
 return tmp$2814$1;
}

double _ZN12SYSTEM_BUS_T19K_GENERALSMOOTHSTEPEhh( struct $12SYSTEM_BUS_T* THIS$1, uint8 N$1, uint8 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5244:;
 double vr$1 = _ZN12SYSTEM_BUS_T7K_CLAMPEhhh( THIS$1, X$1, (uint8)0u, (uint8)1u );
 X$1 = (uint8)((int32)__builtin_nearbyint( vr$1 ));
 double RESULT$1;
 RESULT$1 = 0x0p+0;
 double NA$1;
 __builtin_memset( &NA$1, 0, 8ll );
 {
  NA$1 = 0x0p+0;
  double TMP$2824$2;
  TMP$2824$2 = (double)N$1;
  goto label$5246;
  label$5249:;
  {
   double vr$9 = _ZN12SYSTEM_BUS_T16K_PASCALTRIANGLEEhh( THIS$1, (uint8)(-(int64)N$1 + -1ll), N$1 );
   double vr$16 = _ZN12SYSTEM_BUS_T16K_PASCALTRIANGLEExx( THIS$1, ((int64)N$1 << (1ll & 63ll)) + 1ll, (int64)N$1 - (int64)N$1 );
   double vr$23 = _ZN12SYSTEM_BUS_T5K_POWEhh( THIS$1, X$1, (uint8)(((int64)N$1 + (int64)N$1) + 1ll) );
   RESULT$1 = RESULT$1 + ((vr$9 * vr$16) * vr$23);
  }
  label$5247:;
  NA$1 = NA$1 + 0x1.p+0;
  label$5246:;
  if( NA$1 <= TMP$2824$2 ) goto label$5249;
  label$5248:;
 }
 fb$result$1 = RESULT$1;
 goto label$5245;
 label$5245:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T19K_GENERALSMOOTHSTEPEaa( struct $12SYSTEM_BUS_T* THIS$1, int8 N$1, int8 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5250:;
 double vr$1 = _ZN12SYSTEM_BUS_T7K_CLAMPEaaa( THIS$1, X$1, (int8)0, (int8)1 );
 X$1 = (int8)((int32)__builtin_nearbyint( vr$1 ));
 double RESULT$1;
 RESULT$1 = 0x0p+0;
 double NA$1;
 __builtin_memset( &NA$1, 0, 8ll );
 {
  NA$1 = 0x0p+0;
  double TMP$2825$2;
  TMP$2825$2 = (double)N$1;
  goto label$5252;
  label$5255:;
  {
   double vr$9 = _ZN12SYSTEM_BUS_T16K_PASCALTRIANGLEEaa( THIS$1, (int8)(-(int64)N$1 + -1ll), N$1 );
   double vr$16 = _ZN12SYSTEM_BUS_T16K_PASCALTRIANGLEExx( THIS$1, ((int64)N$1 << (1ll & 63ll)) + 1ll, (int64)N$1 - (int64)N$1 );
   double vr$23 = _ZN12SYSTEM_BUS_T5K_POWEaa( THIS$1, X$1, (int8)(((int64)N$1 + (int64)N$1) + 1ll) );
   RESULT$1 = RESULT$1 + ((vr$9 * vr$16) * vr$23);
  }
  label$5253:;
  NA$1 = NA$1 + 0x1.p+0;
  label$5252:;
  if( NA$1 <= TMP$2825$2 ) goto label$5255;
  label$5254:;
 }
 fb$result$1 = RESULT$1;
 goto label$5251;
 label$5251:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T19K_GENERALSMOOTHSTEPEtt( struct $12SYSTEM_BUS_T* THIS$1, uint16 N$1, uint16 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5256:;
 double vr$1 = _ZN12SYSTEM_BUS_T7K_CLAMPEttt( THIS$1, X$1, (uint16)0u, (uint16)1u );
 X$1 = (uint16)((int32)__builtin_nearbyint( vr$1 ));
 double RESULT$1;
 RESULT$1 = 0x0p+0;
 double NA$1;
 __builtin_memset( &NA$1, 0, 8ll );
 {
  NA$1 = 0x0p+0;
  double TMP$2826$2;
  TMP$2826$2 = (double)N$1;
  goto label$5258;
  label$5261:;
  {
   double vr$9 = _ZN12SYSTEM_BUS_T16K_PASCALTRIANGLEEtt( THIS$1, (uint16)(-(int64)N$1 + -1ll), N$1 );
   double vr$16 = _ZN12SYSTEM_BUS_T16K_PASCALTRIANGLEExx( THIS$1, ((int64)N$1 << (1ll & 63ll)) + 1ll, (int64)N$1 - (int64)N$1 );
   double vr$23 = _ZN12SYSTEM_BUS_T5K_POWEtt( THIS$1, X$1, (uint16)(((int64)N$1 + (int64)N$1) + 1ll) );
   RESULT$1 = RESULT$1 + ((vr$9 * vr$16) * vr$23);
  }
  label$5259:;
  NA$1 = NA$1 + 0x1.p+0;
  label$5258:;
  if( NA$1 <= TMP$2826$2 ) goto label$5261;
  label$5260:;
 }
 fb$result$1 = RESULT$1;
 goto label$5257;
 label$5257:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T19K_GENERALSMOOTHSTEPEss( struct $12SYSTEM_BUS_T* THIS$1, int16 N$1, int16 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5262:;
 double vr$1 = _ZN12SYSTEM_BUS_T7K_CLAMPEsss( THIS$1, X$1, (int16)0, (int16)1 );
 X$1 = (int16)((int32)__builtin_nearbyint( vr$1 ));
 double RESULT$1;
 RESULT$1 = 0x0p+0;
 double NA$1;
 __builtin_memset( &NA$1, 0, 8ll );
 {
  NA$1 = 0x0p+0;
  double TMP$2827$2;
  TMP$2827$2 = (double)N$1;
  goto label$5264;
  label$5267:;
  {
   double vr$9 = _ZN12SYSTEM_BUS_T16K_PASCALTRIANGLEEss( THIS$1, (int16)(-(int64)N$1 + -1ll), N$1 );
   double vr$16 = _ZN12SYSTEM_BUS_T16K_PASCALTRIANGLEExx( THIS$1, ((int64)N$1 << (1ll & 63ll)) + 1ll, (int64)N$1 - (int64)N$1 );
   double vr$23 = _ZN12SYSTEM_BUS_T5K_POWEss( THIS$1, X$1, (int16)(((int64)N$1 + (int64)N$1) + 1ll) );
   RESULT$1 = RESULT$1 + ((vr$9 * vr$16) * vr$23);
  }
  label$5265:;
  NA$1 = NA$1 + 0x1.p+0;
  label$5264:;
  if( NA$1 <= TMP$2827$2 ) goto label$5267;
  label$5266:;
 }
 fb$result$1 = RESULT$1;
 goto label$5263;
 label$5263:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T19K_GENERALSMOOTHSTEPEjj( struct $12SYSTEM_BUS_T* THIS$1, uint32 N$1, uint32 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5268:;
 double vr$1 = _ZN12SYSTEM_BUS_T7K_CLAMPEjjj( THIS$1, X$1, 0u, 1u );
 X$1 = (uint32)((int64)__builtin_nearbyint( vr$1 ));
 double RESULT$1;
 RESULT$1 = 0x0p+0;
 double NA$1;
 __builtin_memset( &NA$1, 0, 8ll );
 {
  NA$1 = 0x0p+0;
  double TMP$2828$2;
  TMP$2828$2 = (double)N$1;
  goto label$5270;
  label$5273:;
  {
   double vr$9 = _ZN12SYSTEM_BUS_T16K_PASCALTRIANGLEEjj( THIS$1, (uint32)(-(int64)N$1 + -1ll), N$1 );
   double vr$16 = _ZN12SYSTEM_BUS_T16K_PASCALTRIANGLEExx( THIS$1, ((int64)N$1 << (1ll & 63ll)) + 1ll, (int64)N$1 - (int64)N$1 );
   double vr$23 = _ZN12SYSTEM_BUS_T5K_POWEjj( THIS$1, X$1, (uint32)(((int64)N$1 + (int64)N$1) + 1ll) );
   RESULT$1 = RESULT$1 + ((vr$9 * vr$16) * vr$23);
  }
  label$5271:;
  NA$1 = NA$1 + 0x1.p+0;
  label$5270:;
  if( NA$1 <= TMP$2828$2 ) goto label$5273;
  label$5272:;
 }
 fb$result$1 = RESULT$1;
 goto label$5269;
 label$5269:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T19K_GENERALSMOOTHSTEPEii( struct $12SYSTEM_BUS_T* THIS$1, int32 N$1, int32 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5274:;
 double vr$1 = _ZN12SYSTEM_BUS_T7K_CLAMPEiii( THIS$1, X$1, 0, 1 );
 X$1 = ((int32)__builtin_nearbyint( vr$1 ));
 double RESULT$1;
 RESULT$1 = 0x0p+0;
 double NA$1;
 __builtin_memset( &NA$1, 0, 8ll );
 {
  NA$1 = 0x0p+0;
  double TMP$2829$2;
  TMP$2829$2 = (double)N$1;
  goto label$5276;
  label$5279:;
  {
   double vr$9 = _ZN12SYSTEM_BUS_T16K_PASCALTRIANGLEEii( THIS$1, (int32)(-(int64)N$1 + -1ll), N$1 );
   double vr$16 = _ZN12SYSTEM_BUS_T16K_PASCALTRIANGLEExx( THIS$1, ((int64)N$1 << (1ll & 63ll)) + 1ll, (int64)N$1 - (int64)N$1 );
   double vr$23 = _ZN12SYSTEM_BUS_T5K_POWEii( THIS$1, X$1, (int32)(((int64)N$1 + (int64)N$1) + 1ll) );
   RESULT$1 = RESULT$1 + ((vr$9 * vr$16) * vr$23);
  }
  label$5277:;
  NA$1 = NA$1 + 0x1.p+0;
  label$5276:;
  if( NA$1 <= TMP$2829$2 ) goto label$5279;
  label$5278:;
 }
 fb$result$1 = RESULT$1;
 goto label$5275;
 label$5275:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T19K_GENERALSMOOTHSTEPEyy( struct $12SYSTEM_BUS_T* THIS$1, uint64 N$1, uint64 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5280:;
 double vr$1 = _ZN12SYSTEM_BUS_T7K_CLAMPEyyy( THIS$1, X$1, 0ull, 1ull );
 X$1 = ((uint64)__builtin_nearbyint( vr$1 ));
 double RESULT$1;
 RESULT$1 = 0x0p+0;
 double NA$1;
 __builtin_memset( &NA$1, 0, 8ll );
 {
  NA$1 = 0x0p+0;
  double TMP$2830$2;
  TMP$2830$2 = (double)N$1;
  goto label$5282;
  label$5285:;
  {
   double vr$7 = _ZN12SYSTEM_BUS_T16K_PASCALTRIANGLEEyy( THIS$1, (uint64)(int64)(-N$1 + -1ll), N$1 );
   double vr$11 = _ZN12SYSTEM_BUS_T16K_PASCALTRIANGLEEyy( THIS$1, (N$1 << (1ull & 63ll)) + 1ull, N$1 - N$1 );
   double vr$15 = _ZN12SYSTEM_BUS_T5K_POWEyy( THIS$1, X$1, (N$1 + N$1) + 1ull );
   RESULT$1 = RESULT$1 + ((vr$7 * vr$11) * vr$15);
  }
  label$5283:;
  NA$1 = NA$1 + 0x1.p+0;
  label$5282:;
  if( NA$1 <= TMP$2830$2 ) goto label$5285;
  label$5284:;
 }
 fb$result$1 = RESULT$1;
 goto label$5281;
 label$5281:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T19K_GENERALSMOOTHSTEPExx( struct $12SYSTEM_BUS_T* THIS$1, int64 N$1, int64 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5286:;
 double vr$1 = _ZN12SYSTEM_BUS_T7K_CLAMPExxx( THIS$1, X$1, 0ll, 1ll );
 X$1 = ((int64)__builtin_nearbyint( vr$1 ));
 double RESULT$1;
 RESULT$1 = 0x0p+0;
 double NA$1;
 __builtin_memset( &NA$1, 0, 8ll );
 {
  NA$1 = 0x0p+0;
  double TMP$2831$2;
  TMP$2831$2 = (double)N$1;
  goto label$5288;
  label$5291:;
  {
   double vr$7 = _ZN12SYSTEM_BUS_T16K_PASCALTRIANGLEExx( THIS$1, -N$1 + -1ll, N$1 );
   double vr$11 = _ZN12SYSTEM_BUS_T16K_PASCALTRIANGLEExx( THIS$1, (N$1 << (1ll & 63ll)) + 1ll, N$1 - N$1 );
   double vr$15 = _ZN12SYSTEM_BUS_T5K_POWExx( THIS$1, X$1, (N$1 + N$1) + 1ll );
   RESULT$1 = RESULT$1 + ((vr$7 * vr$11) * vr$15);
  }
  label$5289:;
  NA$1 = NA$1 + 0x1.p+0;
  label$5288:;
  if( NA$1 <= TMP$2831$2 ) goto label$5291;
  label$5290:;
 }
 fb$result$1 = RESULT$1;
 goto label$5287;
 label$5287:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T19K_GENERALSMOOTHSTEPEff( struct $12SYSTEM_BUS_T* THIS$1, float N$1, float X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5292:;
 double vr$1 = _ZN12SYSTEM_BUS_T7K_CLAMPEfff( THIS$1, X$1, 0x0p+0f, 0x1.p+0f );
 X$1 = (float)vr$1;
 double RESULT$1;
 RESULT$1 = 0x0p+0;
 double NA$1;
 __builtin_memset( &NA$1, 0, 8ll );
 {
  NA$1 = 0x0p+0;
  double TMP$2832$2;
  TMP$2832$2 = (double)N$1;
  goto label$5294;
  label$5297:;
  {
   double vr$6 = _ZN12SYSTEM_BUS_T16K_PASCALTRIANGLEEff( THIS$1, -0x1.p+0f - N$1, N$1 );
   double vr$10 = _ZN12SYSTEM_BUS_T16K_PASCALTRIANGLEEff( THIS$1, (N$1 * 0x1.p+1f) + 0x1.p+0f, N$1 - N$1 );
   double vr$14 = _ZN12SYSTEM_BUS_T5K_POWEff( THIS$1, X$1, (N$1 + N$1) + 0x1.p+0f );
   RESULT$1 = RESULT$1 + ((vr$6 * vr$10) * vr$14);
  }
  label$5295:;
  NA$1 = NA$1 + 0x1.p+0;
  label$5294:;
  if( NA$1 <= TMP$2832$2 ) goto label$5297;
  label$5296:;
 }
 fb$result$1 = RESULT$1;
 goto label$5293;
 label$5293:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T19K_GENERALSMOOTHSTEPEdd( struct $12SYSTEM_BUS_T* THIS$1, double N$1, double X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5298:;
 double vr$1 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, X$1, 0x0p+0, 0x1.p+0 );
 X$1 = vr$1;
 double RESULT$1;
 RESULT$1 = 0x0p+0;
 double NA$1;
 __builtin_memset( &NA$1, 0, 8ll );
 {
  NA$1 = 0x0p+0;
  double TMP$2833$2;
  TMP$2833$2 = N$1;
  goto label$5300;
  label$5303:;
  {
   double vr$4 = _ZN12SYSTEM_BUS_T16K_PASCALTRIANGLEEdd( THIS$1, -0x1.p+0 - N$1, N$1 );
   double vr$8 = _ZN12SYSTEM_BUS_T16K_PASCALTRIANGLEEdd( THIS$1, (N$1 * 0x1.p+1) + 0x1.p+0, N$1 - N$1 );
   double vr$12 = _ZN12SYSTEM_BUS_T5K_POWEdd( THIS$1, X$1, (N$1 + N$1) + 0x1.p+0 );
   RESULT$1 = RESULT$1 + ((vr$4 * vr$8) * vr$12);
  }
  label$5301:;
  NA$1 = NA$1 + 0x1.p+0;
  label$5300:;
  if( NA$1 <= TMP$2833$2 ) goto label$5303;
  label$5302:;
 }
 fb$result$1 = RESULT$1;
 goto label$5299;
 label$5299:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_MIXEhhh( struct $12SYSTEM_BUS_T* THIS$1, uint8 A$1, uint8 B$1, uint8 C$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5304:;
 fb$result$1 = (double)(((int64)A$1 * (-(int64)C$1 + 1ll)) + ((int64)B$1 * (int64)C$1));
 goto label$5305;
 label$5305:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_MIXEaaa( struct $12SYSTEM_BUS_T* THIS$1, int8 A$1, int8 B$1, int8 C$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5306:;
 fb$result$1 = (double)(((int64)A$1 * (-(int64)C$1 + 1ll)) + ((int64)B$1 * (int64)C$1));
 goto label$5307;
 label$5307:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_MIXEttt( struct $12SYSTEM_BUS_T* THIS$1, uint16 A$1, uint16 B$1, uint16 C$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5308:;
 fb$result$1 = (double)(((int64)A$1 * (-(int64)C$1 + 1ll)) + ((int64)B$1 * (int64)C$1));
 goto label$5309;
 label$5309:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_MIXEsss( struct $12SYSTEM_BUS_T* THIS$1, int16 A$1, int16 B$1, int16 C$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5310:;
 fb$result$1 = (double)(((int64)A$1 * (-(int64)C$1 + 1ll)) + ((int64)B$1 * (int64)C$1));
 goto label$5311;
 label$5311:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_MIXEjjj( struct $12SYSTEM_BUS_T* THIS$1, uint32 A$1, uint32 B$1, uint32 C$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5312:;
 fb$result$1 = (double)(((int64)A$1 * (-(int64)C$1 + 1ll)) + ((int64)B$1 * (int64)C$1));
 goto label$5313;
 label$5313:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_MIXEiii( struct $12SYSTEM_BUS_T* THIS$1, int32 A$1, int32 B$1, int32 C$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5314:;
 fb$result$1 = (double)(((int64)A$1 * (-(int64)C$1 + 1ll)) + ((int64)B$1 * (int64)C$1));
 goto label$5315;
 label$5315:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_MIXEyyy( struct $12SYSTEM_BUS_T* THIS$1, uint64 A$1, uint64 B$1, uint64 C$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5316:;
 fb$result$1 = (double)((A$1 * (-C$1 + 1ull)) + (B$1 * C$1));
 goto label$5317;
 label$5317:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_MIXExxx( struct $12SYSTEM_BUS_T* THIS$1, int64 A$1, int64 B$1, int64 C$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5318:;
 fb$result$1 = (double)((A$1 * (-C$1 + 1ll)) + (B$1 * C$1));
 goto label$5319;
 label$5319:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_MIXEfff( struct $12SYSTEM_BUS_T* THIS$1, float A$1, float B$1, float C$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5320:;
 fb$result$1 = (double)((A$1 * (0x1.p+0f - C$1)) + (B$1 * C$1));
 goto label$5321;
 label$5321:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_MIXEddd( struct $12SYSTEM_BUS_T* THIS$1, double A$1, double B$1, double C$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5322:;
 fb$result$1 = (A$1 * (0x1.p+0 - C$1)) + (B$1 * C$1);
 goto label$5323;
 label$5323:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_MIXER9_FLOAT128S1_S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* A$1, struct $9_FLOAT128* B$1, struct $9_FLOAT128* C$1 )
{
 struct $9_FLOAT128 TMP$2834$1;
 struct $9_FLOAT128 TMP$2835$1;
 struct $9_FLOAT128 TMP$2836$1;
 struct $9_FLOAT128 TMP$2837$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5324:;
 struct $9_FLOAT128* vr$2 = _ZmlR9_FLOAT128S0_( &TMP$2836$1, B$1, C$1 );
 struct $9_FLOAT128* vr$4 = _ZmidR9_FLOAT128( &TMP$2834$1, 0x1.p+0, C$1 );
 struct $9_FLOAT128* vr$6 = _ZmlR9_FLOAT128S0_( &TMP$2835$1, A$1, vr$4 );
 struct $9_FLOAT128* vr$8 = _ZplR9_FLOAT128S0_( &TMP$2837$1, vr$6, vr$2 );
 uint64 vr$9 = _ZN9_FLOAT128cvyEv( vr$8 );
 fb$result$1 = (double)vr$9;
 goto label$5325;
 label$5325:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_MIXER9_FLOAT256S1_S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* A$1, struct $9_FLOAT256* B$1, struct $9_FLOAT256* C$1 )
{
 struct $9_FLOAT256 TMP$2838$1;
 struct $9_FLOAT256 TMP$2839$1;
 struct $9_FLOAT256 TMP$2840$1;
 struct $9_FLOAT256 TMP$2841$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5326:;
 struct $9_FLOAT256* vr$2 = _ZmlR9_FLOAT256S0_( &TMP$2840$1, B$1, C$1 );
 struct $9_FLOAT256* vr$4 = _ZmidR9_FLOAT256( &TMP$2838$1, 0x1.p+0, C$1 );
 struct $9_FLOAT256* vr$6 = _ZmlR9_FLOAT256S0_( &TMP$2839$1, A$1, vr$4 );
 struct $9_FLOAT256* vr$8 = _ZplR9_FLOAT256S0_( &TMP$2841$1, vr$6, vr$2 );
 uint64 vr$9 = _ZN9_FLOAT256cvyEv( vr$8 );
 fb$result$1 = (double)vr$9;
 goto label$5327;
 label$5327:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_MIXER9_FLOAT512S1_S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* A$1, struct $9_FLOAT512* B$1, struct $9_FLOAT512* C$1 )
{
 struct $9_FLOAT512 TMP$2842$1;
 struct $9_FLOAT512 TMP$2843$1;
 struct $9_FLOAT512 TMP$2844$1;
 struct $9_FLOAT512 TMP$2845$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5328:;
 struct $9_FLOAT512* vr$2 = _ZmlR9_FLOAT512S0_( &TMP$2844$1, B$1, C$1 );
 struct $9_FLOAT512* vr$4 = _ZmidR9_FLOAT512( &TMP$2842$1, 0x1.p+0, C$1 );
 struct $9_FLOAT512* vr$6 = _ZmlR9_FLOAT512S0_( &TMP$2843$1, A$1, vr$4 );
 struct $9_FLOAT512* vr$8 = _ZplR9_FLOAT512S0_( &TMP$2845$1, vr$6, vr$2 );
 uint64 vr$9 = _ZN9_FLOAT512cvyEv( vr$8 );
 fb$result$1 = (double)vr$9;
 goto label$5329;
 label$5329:;
 return fb$result$1;
}

struct $7VECTOR2* _ZN12SYSTEM_BUS_T5K_MIXER7VECTOR2S1_S1_( struct $7VECTOR2* tmp$2846$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR2* A$1, struct $7VECTOR2* B$1, struct $7VECTOR2* C$1 )
{
 label$5330:;
 _ZN7VECTOR2C1Edd( tmp$2846$1, (*(double*)A$1 * (-(*(double*)C$1) + 0x1.p+0)) + (*(double*)B$1 * *(double*)C$1), (*(double*)((uint8*)A$1 + 8ll) * (-(*(double*)((uint8*)C$1 + 8ll)) + 0x1.p+0)) + (*(double*)((uint8*)B$1 + 8ll) * *(double*)((uint8*)C$1 + 8ll)) );
 goto label$5331;
 label$5331:;
 return tmp$2846$1;
}

struct $7VECTOR3* _ZN12SYSTEM_BUS_T5K_MIXER7VECTOR3S1_S1_( struct $7VECTOR3* tmp$2848$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* A$1, struct $7VECTOR3* B$1, struct $7VECTOR3* C$1 )
{
 label$5332:;
 _ZN7VECTOR3C1Eddd( tmp$2848$1, (*(double*)((uint8*)A$1 + 16ll) * (-(*(double*)((uint8*)C$1 + 16ll)) + 0x1.p+0)) + (*(double*)((uint8*)B$1 + 16ll) * *(double*)((uint8*)C$1 + 16ll)), (*(double*)((uint8*)A$1 + 24ll) * (-(*(double*)((uint8*)C$1 + 24ll)) + 0x1.p+0)) + (*(double*)((uint8*)B$1 + 24ll) * *(double*)((uint8*)C$1 + 24ll)), (*(double*)((uint8*)A$1 + 32ll) * (-(*(double*)((uint8*)C$1 + 32ll)) + 0x1.p+0)) + (*(double*)((uint8*)B$1 + 32ll) * *(double*)((uint8*)C$1 + 32ll)) );
 goto label$5333;
 label$5333:;
 return tmp$2848$1;
}

struct $7VECTOR4* _ZN12SYSTEM_BUS_T5K_MIXER7VECTOR4S1_S1_( struct $7VECTOR4* tmp$2850$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR4* A$1, struct $7VECTOR4* B$1, struct $7VECTOR4* C$1 )
{
 label$5334:;
 _ZN7VECTOR4C1Edddd( tmp$2850$1, (*(double*)((uint8*)A$1 + 40ll) * (-(*(double*)((uint8*)C$1 + 40ll)) + 0x1.p+0)) + (*(double*)((uint8*)B$1 + 40ll) * *(double*)((uint8*)C$1 + 40ll)), (*(double*)((uint8*)A$1 + 48ll) * (-(*(double*)((uint8*)C$1 + 48ll)) + 0x1.p+0)) + (*(double*)((uint8*)B$1 + 48ll) * *(double*)((uint8*)C$1 + 48ll)), (*(double*)((uint8*)A$1 + 56ll) * (-(*(double*)((uint8*)C$1 + 56ll)) + 0x1.p+0)) + (*(double*)((uint8*)B$1 + 56ll) * *(double*)((uint8*)C$1 + 56ll)), (*(double*)((uint8*)A$1 + 64ll) * (-(*(double*)((uint8*)C$1 + 64ll)) + 0x1.p+0)) + (*(double*)((uint8*)B$1 + 64ll) * *(double*)((uint8*)C$1 + 64ll)) );
 goto label$5335;
 label$5335:;
 return tmp$2850$1;
}

struct $7VECTOR2* _ZN12SYSTEM_BUS_T5K_MIXER7VECTOR2S1_d( struct $7VECTOR2* tmp$2852$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR2* A$1, struct $7VECTOR2* B$1, double C$1 )
{
 label$5336:;
 _ZN7VECTOR2C1Edd( tmp$2852$1, (*(double*)A$1 * (0x1.p+0 - C$1)) + (*(double*)B$1 * C$1), (*(double*)((uint8*)A$1 + 8ll) * (0x1.p+0 - C$1)) + (*(double*)((uint8*)B$1 + 8ll) * C$1) );
 goto label$5337;
 label$5337:;
 return tmp$2852$1;
}

struct $7VECTOR3* _ZN12SYSTEM_BUS_T5K_MIXER7VECTOR3S1_d( struct $7VECTOR3* tmp$2854$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* A$1, struct $7VECTOR3* B$1, double C$1 )
{
 label$5338:;
 _ZN7VECTOR3C1Eddd( tmp$2854$1, (*(double*)((uint8*)A$1 + 16ll) * (0x1.p+0 - C$1)) + (*(double*)((uint8*)B$1 + 16ll) * C$1), (*(double*)((uint8*)A$1 + 24ll) * (0x1.p+0 - C$1)) + (*(double*)((uint8*)B$1 + 24ll) * C$1), (*(double*)((uint8*)A$1 + 32ll) * (0x1.p+0 - C$1)) + (*(double*)((uint8*)B$1 + 32ll) * C$1) );
 goto label$5339;
 label$5339:;
 return tmp$2854$1;
}

struct $7VECTOR4* _ZN12SYSTEM_BUS_T5K_MIXER7VECTOR4S1_d( struct $7VECTOR4* tmp$2856$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR4* A$1, struct $7VECTOR4* B$1, double C$1 )
{
 label$5340:;
 _ZN7VECTOR4C1Edddd( tmp$2856$1, (*(double*)((uint8*)A$1 + 40ll) * (0x1.p+0 - C$1)) + (*(double*)((uint8*)B$1 + 40ll) * C$1), (*(double*)((uint8*)A$1 + 48ll) * (0x1.p+0 - C$1)) + (*(double*)((uint8*)B$1 + 48ll) * C$1), (*(double*)((uint8*)A$1 + 56ll) * (0x1.p+0 - C$1)) + (*(double*)((uint8*)B$1 + 56ll) * C$1), (*(double*)((uint8*)A$1 + 64ll) * (0x1.p+0 - C$1)) + (*(double*)((uint8*)B$1 + 64ll) * C$1) );
 goto label$5341;
 label$5341:;
 return tmp$2856$1;
}

double _ZN12SYSTEM_BUS_T6K_STEPEhh( struct $12SYSTEM_BUS_T* THIS$1, uint8 EDGE$1, uint8 X$1 )
{
 int64 TMP$2858$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5342:;
 if( (int64)X$1 >= (int64)EDGE$1 ) goto label$5344;
 TMP$2858$1 = 0ll;
 goto label$5345;
 label$5344:;
 TMP$2858$1 = 1ll;
 label$5345:;
 fb$result$1 = (double)TMP$2858$1;
 goto label$5343;
 label$5343:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_STEPEaa( struct $12SYSTEM_BUS_T* THIS$1, int8 EDGE$1, int8 X$1 )
{
 int64 TMP$2859$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5346:;
 if( (int64)X$1 >= (int64)EDGE$1 ) goto label$5348;
 TMP$2859$1 = 0ll;
 goto label$5349;
 label$5348:;
 TMP$2859$1 = 1ll;
 label$5349:;
 fb$result$1 = (double)TMP$2859$1;
 goto label$5347;
 label$5347:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_STEPEtt( struct $12SYSTEM_BUS_T* THIS$1, uint16 EDGE$1, uint16 X$1 )
{
 int64 TMP$2860$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5350:;
 if( (int64)X$1 >= (int64)EDGE$1 ) goto label$5352;
 TMP$2860$1 = 0ll;
 goto label$5353;
 label$5352:;
 TMP$2860$1 = 1ll;
 label$5353:;
 fb$result$1 = (double)TMP$2860$1;
 goto label$5351;
 label$5351:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_STEPEss( struct $12SYSTEM_BUS_T* THIS$1, int16 EDGE$1, int16 X$1 )
{
 int64 TMP$2861$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5354:;
 if( (int64)X$1 >= (int64)EDGE$1 ) goto label$5356;
 TMP$2861$1 = 0ll;
 goto label$5357;
 label$5356:;
 TMP$2861$1 = 1ll;
 label$5357:;
 fb$result$1 = (double)TMP$2861$1;
 goto label$5355;
 label$5355:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_STEPEjj( struct $12SYSTEM_BUS_T* THIS$1, uint32 EDGE$1, uint32 X$1 )
{
 int64 TMP$2862$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5358:;
 if( (int64)X$1 >= (int64)EDGE$1 ) goto label$5360;
 TMP$2862$1 = 0ll;
 goto label$5361;
 label$5360:;
 TMP$2862$1 = 1ll;
 label$5361:;
 fb$result$1 = (double)TMP$2862$1;
 goto label$5359;
 label$5359:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_STEPEii( struct $12SYSTEM_BUS_T* THIS$1, int32 EDGE$1, int32 X$1 )
{
 int64 TMP$2863$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5362:;
 if( (int64)X$1 >= (int64)EDGE$1 ) goto label$5364;
 TMP$2863$1 = 0ll;
 goto label$5365;
 label$5364:;
 TMP$2863$1 = 1ll;
 label$5365:;
 fb$result$1 = (double)TMP$2863$1;
 goto label$5363;
 label$5363:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_STEPEyy( struct $12SYSTEM_BUS_T* THIS$1, uint64 EDGE$1, uint64 X$1 )
{
 int64 TMP$2864$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5366:;
 if( X$1 >= EDGE$1 ) goto label$5368;
 TMP$2864$1 = 0ll;
 goto label$5369;
 label$5368:;
 TMP$2864$1 = 1ll;
 label$5369:;
 fb$result$1 = (double)TMP$2864$1;
 goto label$5367;
 label$5367:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_STEPExx( struct $12SYSTEM_BUS_T* THIS$1, int64 EDGE$1, int64 X$1 )
{
 int64 TMP$2865$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5370:;
 if( X$1 >= EDGE$1 ) goto label$5372;
 TMP$2865$1 = 0ll;
 goto label$5373;
 label$5372:;
 TMP$2865$1 = 1ll;
 label$5373:;
 fb$result$1 = (double)TMP$2865$1;
 goto label$5371;
 label$5371:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_STEPEdd( struct $12SYSTEM_BUS_T* THIS$1, double EDGE$1, double X$1 )
{
 int64 TMP$2866$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5374:;
 if( X$1 >= EDGE$1 ) goto label$5376;
 TMP$2866$1 = 0ll;
 goto label$5377;
 label$5376:;
 TMP$2866$1 = 1ll;
 label$5377:;
 fb$result$1 = (double)TMP$2866$1;
 goto label$5375;
 label$5375:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_STEPER9_FLOAT128S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* EDGE$1, struct $9_FLOAT128* X$1 )
{
 int64 TMP$2867$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5378:;
 uint64 vr$1 = _ZN9_FLOAT128cvyEv( X$1 );
 uint64 vr$2 = _ZN9_FLOAT128cvyEv( EDGE$1 );
 if( vr$1 >= vr$2 ) goto label$5380;
 TMP$2867$1 = 0ll;
 goto label$5381;
 label$5380:;
 TMP$2867$1 = 1ll;
 label$5381:;
 fb$result$1 = (double)TMP$2867$1;
 goto label$5379;
 label$5379:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_STEPER9_FLOAT256S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* EDGE$1, struct $9_FLOAT256* X$1 )
{
 int64 TMP$2868$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5382:;
 uint64 vr$1 = _ZN9_FLOAT256cvyEv( X$1 );
 uint64 vr$2 = _ZN9_FLOAT256cvyEv( EDGE$1 );
 if( vr$1 >= vr$2 ) goto label$5384;
 TMP$2868$1 = 0ll;
 goto label$5385;
 label$5384:;
 TMP$2868$1 = 1ll;
 label$5385:;
 fb$result$1 = (double)TMP$2868$1;
 goto label$5383;
 label$5383:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_STEPER9_FLOAT512S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* EDGE$1, struct $9_FLOAT512* X$1 )
{
 int64 TMP$2869$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5386:;
 uint64 vr$1 = _ZN9_FLOAT512cvyEv( X$1 );
 uint64 vr$2 = _ZN9_FLOAT512cvyEv( EDGE$1 );
 if( vr$1 >= vr$2 ) goto label$5388;
 TMP$2869$1 = 0ll;
 goto label$5389;
 label$5388:;
 TMP$2869$1 = 1ll;
 label$5389:;
 fb$result$1 = (double)TMP$2869$1;
 goto label$5387;
 label$5387:;
 return fb$result$1;
}

struct $7VECTOR2* _ZN12SYSTEM_BUS_T6K_STEPER7VECTOR2S1_( struct $7VECTOR2* tmp$2870$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR2* EDGE$1, struct $7VECTOR2* X$1 )
{
 int64 TMP$2872$1;
 int64 TMP$2873$1;
 label$5390:;
 if( *(double*)((uint8*)X$1 + 8ll) >= *(double*)((uint8*)EDGE$1 + 8ll) ) goto label$5393;
 TMP$2873$1 = 0ll;
 goto label$5394;
 label$5393:;
 TMP$2873$1 = 1ll;
 label$5394:;
 if( *(double*)X$1 >= *(double*)EDGE$1 ) goto label$5392;
 TMP$2872$1 = 0ll;
 goto label$5395;
 label$5392:;
 TMP$2872$1 = 1ll;
 label$5395:;
 _ZN7VECTOR2C1Edd( tmp$2870$1, (double)TMP$2872$1, (double)TMP$2873$1 );
 goto label$5391;
 label$5391:;
 return tmp$2870$1;
}

struct $7VECTOR3* _ZN12SYSTEM_BUS_T6K_STEPER7VECTOR3S1_( struct $7VECTOR3* tmp$2874$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* EDGE$1, struct $7VECTOR3* X$1 )
{
 int64 TMP$2876$1;
 int64 TMP$2877$1;
 int64 TMP$2878$1;
 label$5396:;
 if( *(double*)((uint8*)X$1 + 32ll) >= *(double*)((uint8*)EDGE$1 + 32ll) ) goto label$5400;
 TMP$2878$1 = 0ll;
 goto label$5401;
 label$5400:;
 TMP$2878$1 = 1ll;
 label$5401:;
 if( *(double*)((uint8*)X$1 + 24ll) >= *(double*)((uint8*)EDGE$1 + 24ll) ) goto label$5399;
 TMP$2877$1 = 0ll;
 goto label$5402;
 label$5399:;
 TMP$2877$1 = 1ll;
 label$5402:;
 if( *(double*)((uint8*)X$1 + 16ll) >= *(double*)((uint8*)EDGE$1 + 16ll) ) goto label$5398;
 TMP$2876$1 = 0ll;
 goto label$5403;
 label$5398:;
 TMP$2876$1 = 1ll;
 label$5403:;
 _ZN7VECTOR3C1Eddd( tmp$2874$1, (double)TMP$2876$1, (double)TMP$2877$1, (double)TMP$2878$1 );
 goto label$5397;
 label$5397:;
 return tmp$2874$1;
}

struct $7VECTOR4* _ZN12SYSTEM_BUS_T6K_STEPER7VECTOR4S1_( struct $7VECTOR4* tmp$2879$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR4* EDGE$1, struct $7VECTOR4* X$1 )
{
 int64 TMP$2881$1;
 int64 TMP$2882$1;
 int64 TMP$2883$1;
 int64 TMP$2884$1;
 label$5404:;
 if( *(double*)((uint8*)X$1 + 64ll) >= *(double*)((uint8*)EDGE$1 + 64ll) ) goto label$5409;
 TMP$2884$1 = 0ll;
 goto label$5410;
 label$5409:;
 TMP$2884$1 = 1ll;
 label$5410:;
 if( *(double*)((uint8*)X$1 + 56ll) >= *(double*)((uint8*)EDGE$1 + 56ll) ) goto label$5408;
 TMP$2883$1 = 0ll;
 goto label$5411;
 label$5408:;
 TMP$2883$1 = 1ll;
 label$5411:;
 if( *(double*)((uint8*)X$1 + 48ll) >= *(double*)((uint8*)EDGE$1 + 48ll) ) goto label$5407;
 TMP$2882$1 = 0ll;
 goto label$5412;
 label$5407:;
 TMP$2882$1 = 1ll;
 label$5412:;
 if( *(double*)((uint8*)X$1 + 40ll) >= *(double*)((uint8*)EDGE$1 + 40ll) ) goto label$5406;
 TMP$2881$1 = 0ll;
 goto label$5413;
 label$5406:;
 TMP$2881$1 = 1ll;
 label$5413:;
 _ZN7VECTOR4C1Edddd( tmp$2879$1, (double)TMP$2881$1, (double)TMP$2882$1, (double)TMP$2883$1, (double)TMP$2884$1 );
 goto label$5405;
 label$5405:;
 return tmp$2879$1;
}

struct $7VECTOR2* _ZN12SYSTEM_BUS_T6K_STEPEdR7VECTOR2( struct $7VECTOR2* tmp$2885$1, struct $12SYSTEM_BUS_T* THIS$1, double EDGE$1, struct $7VECTOR2* X$1 )
{
 int64 TMP$2887$1;
 int64 TMP$2888$1;
 label$5414:;
 if( *(double*)((uint8*)X$1 + 8ll) >= EDGE$1 ) goto label$5417;
 TMP$2888$1 = 0ll;
 goto label$5418;
 label$5417:;
 TMP$2888$1 = 1ll;
 label$5418:;
 if( *(double*)X$1 >= EDGE$1 ) goto label$5416;
 TMP$2887$1 = 0ll;
 goto label$5419;
 label$5416:;
 TMP$2887$1 = 1ll;
 label$5419:;
 _ZN7VECTOR2C1Edd( tmp$2885$1, (double)TMP$2887$1, (double)TMP$2888$1 );
 goto label$5415;
 label$5415:;
 return tmp$2885$1;
}

struct $7VECTOR3* _ZN12SYSTEM_BUS_T6K_STEPEdR7VECTOR3( struct $7VECTOR3* tmp$2889$1, struct $12SYSTEM_BUS_T* THIS$1, double EDGE$1, struct $7VECTOR3* X$1 )
{
 int64 TMP$2891$1;
 int64 TMP$2892$1;
 int64 TMP$2893$1;
 label$5420:;
 if( *(double*)((uint8*)X$1 + 32ll) >= EDGE$1 ) goto label$5424;
 TMP$2893$1 = 0ll;
 goto label$5425;
 label$5424:;
 TMP$2893$1 = 1ll;
 label$5425:;
 if( *(double*)((uint8*)X$1 + 24ll) >= EDGE$1 ) goto label$5423;
 TMP$2892$1 = 0ll;
 goto label$5426;
 label$5423:;
 TMP$2892$1 = 1ll;
 label$5426:;
 if( *(double*)((uint8*)X$1 + 16ll) >= EDGE$1 ) goto label$5422;
 TMP$2891$1 = 0ll;
 goto label$5427;
 label$5422:;
 TMP$2891$1 = 1ll;
 label$5427:;
 _ZN7VECTOR3C1Eddd( tmp$2889$1, (double)TMP$2891$1, (double)TMP$2892$1, (double)TMP$2893$1 );
 goto label$5421;
 label$5421:;
 return tmp$2889$1;
}

struct $7VECTOR4* _ZN12SYSTEM_BUS_T6K_STEPEdR7VECTOR4( struct $7VECTOR4* tmp$2894$1, struct $12SYSTEM_BUS_T* THIS$1, double EDGE$1, struct $7VECTOR4* X$1 )
{
 int64 TMP$2896$1;
 int64 TMP$2897$1;
 int64 TMP$2898$1;
 int64 TMP$2899$1;
 label$5428:;
 if( *(double*)((uint8*)X$1 + 64ll) >= EDGE$1 ) goto label$5433;
 TMP$2899$1 = 0ll;
 goto label$5434;
 label$5433:;
 TMP$2899$1 = 1ll;
 label$5434:;
 if( *(double*)((uint8*)X$1 + 56ll) >= EDGE$1 ) goto label$5432;
 TMP$2898$1 = 0ll;
 goto label$5435;
 label$5432:;
 TMP$2898$1 = 1ll;
 label$5435:;
 if( *(double*)((uint8*)X$1 + 48ll) >= EDGE$1 ) goto label$5431;
 TMP$2897$1 = 0ll;
 goto label$5436;
 label$5431:;
 TMP$2897$1 = 1ll;
 label$5436:;
 if( *(double*)((uint8*)X$1 + 40ll) >= EDGE$1 ) goto label$5430;
 TMP$2896$1 = 0ll;
 goto label$5437;
 label$5430:;
 TMP$2896$1 = 1ll;
 label$5437:;
 _ZN7VECTOR4C1Edddd( tmp$2894$1, (double)TMP$2896$1, (double)TMP$2897$1, (double)TMP$2898$1, (double)TMP$2899$1 );
 goto label$5429;
 label$5429:;
 return tmp$2894$1;
}

double _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEhhh( struct $12SYSTEM_BUS_T* THIS$1, uint8 EDGE0$1, uint8 EDGE1$1, uint8 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5438:;
 if( (int64)X$1 >= (int64)EDGE0$1 ) goto label$5441;
 {
  fb$result$1 = 0x0p+0;
  goto label$5439;
  label$5441:;
 }
 if( (int64)X$1 < (int64)EDGE1$1 ) goto label$5443;
 {
  fb$result$1 = 0x1.p+0;
  goto label$5439;
  label$5443:;
 }
 X$1 = (uint8)((int32)__builtin_nearbyint( (double)((int64)X$1 - (int64)EDGE0$1) / (double)((int64)EDGE1$1 - (int64)EDGE0$1) ));
 fb$result$1 = (double)((int64)X$1 * (int64)X$1) * (-((double)(int64)X$1 * 0x1.p+1) + 0x1.8p+1);
 goto label$5439;
 label$5439:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEaaa( struct $12SYSTEM_BUS_T* THIS$1, int8 EDGE0$1, int8 EDGE1$1, int8 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5444:;
 if( (int64)X$1 >= (int64)EDGE0$1 ) goto label$5447;
 {
  fb$result$1 = 0x0p+0;
  goto label$5445;
  label$5447:;
 }
 if( (int64)X$1 < (int64)EDGE1$1 ) goto label$5449;
 {
  fb$result$1 = 0x1.p+0;
  goto label$5445;
  label$5449:;
 }
 X$1 = (int8)((int32)__builtin_nearbyint( (double)((int64)X$1 - (int64)EDGE0$1) / (double)((int64)EDGE1$1 - (int64)EDGE0$1) ));
 fb$result$1 = (double)((int64)X$1 * (int64)X$1) * (-((double)(int64)X$1 * 0x1.p+1) + 0x1.8p+1);
 goto label$5445;
 label$5445:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEttt( struct $12SYSTEM_BUS_T* THIS$1, uint16 EDGE0$1, uint16 EDGE1$1, uint16 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5450:;
 if( (int64)X$1 >= (int64)EDGE0$1 ) goto label$5453;
 {
  fb$result$1 = 0x0p+0;
  goto label$5451;
  label$5453:;
 }
 if( (int64)X$1 < (int64)EDGE1$1 ) goto label$5455;
 {
  fb$result$1 = 0x1.p+0;
  goto label$5451;
  label$5455:;
 }
 X$1 = (uint16)((int32)__builtin_nearbyint( (double)((int64)X$1 - (int64)EDGE0$1) / (double)((int64)EDGE1$1 - (int64)EDGE0$1) ));
 fb$result$1 = (double)((int64)X$1 * (int64)X$1) * (-((double)(int64)X$1 * 0x1.p+1) + 0x1.8p+1);
 goto label$5451;
 label$5451:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEsss( struct $12SYSTEM_BUS_T* THIS$1, int16 EDGE0$1, int16 EDGE1$1, int16 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5456:;
 if( (int64)X$1 >= (int64)EDGE0$1 ) goto label$5459;
 {
  fb$result$1 = 0x0p+0;
  goto label$5457;
  label$5459:;
 }
 if( (int64)X$1 < (int64)EDGE1$1 ) goto label$5461;
 {
  fb$result$1 = 0x1.p+0;
  goto label$5457;
  label$5461:;
 }
 X$1 = (int16)((int32)__builtin_nearbyint( (double)((int64)X$1 - (int64)EDGE0$1) / (double)((int64)EDGE1$1 - (int64)EDGE0$1) ));
 fb$result$1 = (double)((int64)X$1 * (int64)X$1) * (-((double)(int64)X$1 * 0x1.p+1) + 0x1.8p+1);
 goto label$5457;
 label$5457:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEjjj( struct $12SYSTEM_BUS_T* THIS$1, uint32 EDGE0$1, uint32 EDGE1$1, uint32 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5462:;
 if( (int64)X$1 >= (int64)EDGE0$1 ) goto label$5465;
 {
  fb$result$1 = 0x0p+0;
  goto label$5463;
  label$5465:;
 }
 if( (int64)X$1 < (int64)EDGE1$1 ) goto label$5467;
 {
  fb$result$1 = 0x1.p+0;
  goto label$5463;
  label$5467:;
 }
 X$1 = (uint32)((int64)__builtin_nearbyint( (double)((int64)X$1 - (int64)EDGE0$1) / (double)((int64)EDGE1$1 - (int64)EDGE0$1) ));
 fb$result$1 = (double)((int64)X$1 * (int64)X$1) * (-((double)(int64)X$1 * 0x1.p+1) + 0x1.8p+1);
 goto label$5463;
 label$5463:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEiii( struct $12SYSTEM_BUS_T* THIS$1, int32 EDGE0$1, int32 EDGE1$1, int32 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5468:;
 if( (int64)X$1 >= (int64)EDGE0$1 ) goto label$5471;
 {
  fb$result$1 = 0x0p+0;
  goto label$5469;
  label$5471:;
 }
 if( (int64)X$1 < (int64)EDGE1$1 ) goto label$5473;
 {
  fb$result$1 = 0x1.p+0;
  goto label$5469;
  label$5473:;
 }
 X$1 = ((int32)__builtin_nearbyint( (double)((int64)X$1 - (int64)EDGE0$1) / (double)((int64)EDGE1$1 - (int64)EDGE0$1) ));
 fb$result$1 = (double)((int64)X$1 * (int64)X$1) * (-((double)(int64)X$1 * 0x1.p+1) + 0x1.8p+1);
 goto label$5469;
 label$5469:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEyyy( struct $12SYSTEM_BUS_T* THIS$1, uint64 EDGE0$1, uint64 EDGE1$1, uint64 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5474:;
 if( X$1 >= EDGE0$1 ) goto label$5477;
 {
  fb$result$1 = 0x0p+0;
  goto label$5475;
  label$5477:;
 }
 if( X$1 < EDGE1$1 ) goto label$5479;
 {
  fb$result$1 = 0x1.p+0;
  goto label$5475;
  label$5479:;
 }
 X$1 = ((uint64)__builtin_nearbyint( (double)(X$1 - EDGE0$1) / (double)(EDGE1$1 - EDGE0$1) ));
 fb$result$1 = (double)(X$1 * X$1) * (-((double)X$1 * 0x1.p+1) + 0x1.8p+1);
 goto label$5475;
 label$5475:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPExxx( struct $12SYSTEM_BUS_T* THIS$1, int64 EDGE0$1, int64 EDGE1$1, int64 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5480:;
 if( X$1 >= EDGE0$1 ) goto label$5483;
 {
  fb$result$1 = 0x0p+0;
  goto label$5481;
  label$5483:;
 }
 if( X$1 < EDGE1$1 ) goto label$5485;
 {
  fb$result$1 = 0x1.p+0;
  goto label$5481;
  label$5485:;
 }
 X$1 = ((int64)__builtin_nearbyint( (double)(X$1 - EDGE0$1) / (double)(EDGE1$1 - EDGE0$1) ));
 fb$result$1 = (double)(X$1 * X$1) * (-((double)X$1 * 0x1.p+1) + 0x1.8p+1);
 goto label$5481;
 label$5481:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEfff( struct $12SYSTEM_BUS_T* THIS$1, float EDGE0$1, float EDGE1$1, float X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5486:;
 if( X$1 >= EDGE0$1 ) goto label$5489;
 {
  fb$result$1 = 0x0p+0;
  goto label$5487;
  label$5489:;
 }
 if( X$1 < EDGE1$1 ) goto label$5491;
 {
  fb$result$1 = 0x1.p+0;
  goto label$5487;
  label$5491:;
 }
 X$1 = (float)((double)(X$1 - EDGE0$1) / (double)(EDGE1$1 - EDGE0$1));
 fb$result$1 = (double)(X$1 * X$1) * (-((double)X$1 * 0x1.p+1) + 0x1.8p+1);
 goto label$5487;
 label$5487:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEddd( struct $12SYSTEM_BUS_T* THIS$1, double EDGE0$1, double EDGE1$1, double X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5492:;
 if( X$1 >= EDGE0$1 ) goto label$5495;
 {
  fb$result$1 = 0x0p+0;
  goto label$5493;
  label$5495:;
 }
 if( X$1 < EDGE1$1 ) goto label$5497;
 {
  fb$result$1 = 0x1.p+0;
  goto label$5493;
  label$5497:;
 }
 X$1 = (X$1 - EDGE0$1) / (EDGE1$1 - EDGE0$1);
 fb$result$1 = (X$1 * X$1) * (-(X$1 * 0x1.p+1) + 0x1.8p+1);
 goto label$5493;
 label$5493:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPER9_FLOAT128S1_S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* EDGE0$1, struct $9_FLOAT128* EDGE1$1, struct $9_FLOAT128* X$1 )
{
 struct $9_FLOAT128 TMP$2900$1;
 struct $9_FLOAT128 TMP$2901$1;
 struct $9_FLOAT128 TMP$2902$1;
 struct $9_FLOAT128 TMP$2903$1;
 struct $9_FLOAT128 TMP$2904$1;
 struct $9_FLOAT128 TMP$2905$1;
 struct $9_FLOAT128 TMP$2906$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5498:;
 uint64 vr$1 = _ZN9_FLOAT128cvyEv( X$1 );
 uint64 vr$2 = _ZN9_FLOAT128cvyEv( EDGE0$1 );
 if( vr$1 >= vr$2 ) goto label$5501;
 {
  fb$result$1 = 0x0p+0;
  goto label$5499;
  label$5501:;
 }
 uint64 vr$3 = _ZN9_FLOAT128cvyEv( X$1 );
 uint64 vr$4 = _ZN9_FLOAT128cvyEv( EDGE1$1 );
 if( vr$3 < vr$4 ) goto label$5503;
 {
  fb$result$1 = 0x1.p+0;
  goto label$5499;
  label$5503:;
 }
 struct $9_FLOAT128* vr$6 = _ZmiR9_FLOAT128S0_( &TMP$2901$1, EDGE1$1, EDGE0$1 );
 struct $9_FLOAT128* vr$8 = _ZmiR9_FLOAT128S0_( &TMP$2900$1, X$1, EDGE0$1 );
 struct $9_FLOAT128* vr$10 = _ZdvR9_FLOAT128S0_( &TMP$2902$1, vr$8, vr$6 );
 _ZN9_FLOAT128aSERS_( X$1, vr$10 );
 struct $9_FLOAT128* vr$12 = _ZmldR9_FLOAT128( &TMP$2904$1, 0x1.p+1, X$1 );
 struct $9_FLOAT128* vr$14 = _ZmidR9_FLOAT128( &TMP$2905$1, 0x1.8p+1, vr$12 );
 struct $9_FLOAT128* vr$16 = _ZmlR9_FLOAT128S0_( &TMP$2903$1, X$1, X$1 );
 struct $9_FLOAT128* vr$18 = _ZmlR9_FLOAT128S0_( &TMP$2906$1, vr$16, vr$14 );
 uint64 vr$19 = _ZN9_FLOAT128cvyEv( vr$18 );
 fb$result$1 = (double)vr$19;
 goto label$5499;
 label$5499:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPER9_FLOAT256S1_S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* EDGE0$1, struct $9_FLOAT256* EDGE1$1, struct $9_FLOAT256* X$1 )
{
 struct $9_FLOAT256 TMP$2907$1;
 struct $9_FLOAT256 TMP$2908$1;
 struct $9_FLOAT256 TMP$2909$1;
 struct $9_FLOAT256 TMP$2910$1;
 struct $9_FLOAT256 TMP$2911$1;
 struct $9_FLOAT256 TMP$2912$1;
 struct $9_FLOAT256 TMP$2913$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5504:;
 uint64 vr$1 = _ZN9_FLOAT256cvyEv( X$1 );
 uint64 vr$2 = _ZN9_FLOAT256cvyEv( EDGE0$1 );
 if( vr$1 >= vr$2 ) goto label$5507;
 {
  fb$result$1 = 0x0p+0;
  goto label$5505;
  label$5507:;
 }
 uint64 vr$3 = _ZN9_FLOAT256cvyEv( X$1 );
 uint64 vr$4 = _ZN9_FLOAT256cvyEv( EDGE1$1 );
 if( vr$3 < vr$4 ) goto label$5509;
 {
  fb$result$1 = 0x1.p+0;
  goto label$5505;
  label$5509:;
 }
 struct $9_FLOAT256* vr$6 = _ZmiR9_FLOAT256S0_( &TMP$2908$1, EDGE1$1, EDGE0$1 );
 struct $9_FLOAT256* vr$8 = _ZmiR9_FLOAT256S0_( &TMP$2907$1, X$1, EDGE0$1 );
 struct $9_FLOAT256* vr$10 = _ZdvR9_FLOAT256S0_( &TMP$2909$1, vr$8, vr$6 );
 _ZN9_FLOAT256aSERS_( X$1, vr$10 );
 struct $9_FLOAT256* vr$12 = _ZmldR9_FLOAT256( &TMP$2911$1, 0x1.p+1, X$1 );
 struct $9_FLOAT256* vr$14 = _ZmidR9_FLOAT256( &TMP$2912$1, 0x1.8p+1, vr$12 );
 struct $9_FLOAT256* vr$16 = _ZmlR9_FLOAT256S0_( &TMP$2910$1, X$1, X$1 );
 struct $9_FLOAT256* vr$18 = _ZmlR9_FLOAT256S0_( &TMP$2913$1, vr$16, vr$14 );
 uint64 vr$19 = _ZN9_FLOAT256cvyEv( vr$18 );
 fb$result$1 = (double)vr$19;
 goto label$5505;
 label$5505:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPER9_FLOAT512S1_S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* EDGE0$1, struct $9_FLOAT512* EDGE1$1, struct $9_FLOAT512* X$1 )
{
 struct $9_FLOAT512 TMP$2914$1;
 struct $9_FLOAT512 TMP$2915$1;
 struct $9_FLOAT512 TMP$2916$1;
 struct $9_FLOAT512 TMP$2917$1;
 struct $9_FLOAT512 TMP$2918$1;
 struct $9_FLOAT512 TMP$2919$1;
 struct $9_FLOAT512 TMP$2920$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5510:;
 uint64 vr$1 = _ZN9_FLOAT512cvyEv( X$1 );
 uint64 vr$2 = _ZN9_FLOAT512cvyEv( EDGE0$1 );
 if( vr$1 >= vr$2 ) goto label$5513;
 {
  fb$result$1 = 0x0p+0;
  goto label$5511;
  label$5513:;
 }
 uint64 vr$3 = _ZN9_FLOAT512cvyEv( X$1 );
 uint64 vr$4 = _ZN9_FLOAT512cvyEv( EDGE1$1 );
 if( vr$3 < vr$4 ) goto label$5515;
 {
  fb$result$1 = 0x1.p+0;
  goto label$5511;
  label$5515:;
 }
 struct $9_FLOAT512* vr$6 = _ZmiR9_FLOAT512S0_( &TMP$2915$1, EDGE1$1, EDGE0$1 );
 struct $9_FLOAT512* vr$8 = _ZmiR9_FLOAT512S0_( &TMP$2914$1, X$1, EDGE0$1 );
 struct $9_FLOAT512* vr$10 = _ZdvR9_FLOAT512S0_( &TMP$2916$1, vr$8, vr$6 );
 _ZN9_FLOAT512aSERS_( X$1, vr$10 );
 struct $9_FLOAT512* vr$12 = _ZmldR9_FLOAT512( &TMP$2918$1, 0x1.p+1, X$1 );
 struct $9_FLOAT512* vr$14 = _ZmidR9_FLOAT512( &TMP$2919$1, 0x1.8p+1, vr$12 );
 struct $9_FLOAT512* vr$16 = _ZmlR9_FLOAT512S0_( &TMP$2917$1, X$1, X$1 );
 struct $9_FLOAT512* vr$18 = _ZmlR9_FLOAT512S0_( &TMP$2920$1, vr$16, vr$14 );
 uint64 vr$19 = _ZN9_FLOAT512cvyEv( vr$18 );
 fb$result$1 = (double)vr$19;
 goto label$5511;
 label$5511:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T14K_SMOOTHERSTEPEhhh( struct $12SYSTEM_BUS_T* THIS$1, uint8 EDGE0$1, uint8 EDGE1$1, uint8 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5516:;
 double vr$10 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, (double)((int64)X$1 - (int64)EDGE0$1) / (double)((int64)EDGE1$1 - (int64)EDGE0$1), 0x0p+0, 0x1.p+0 );
 X$1 = (uint8)((int32)__builtin_nearbyint( vr$10 ));
 fb$result$1 = (double)((((int64)X$1 * (int64)X$1) * (int64)X$1) * (((int64)X$1 * (((int64)X$1 * 6ll) + -15ll)) + 10ll));
 goto label$5517;
 label$5517:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T14K_SMOOTHERSTEPEaaa( struct $12SYSTEM_BUS_T* THIS$1, int8 EDGE0$1, int8 EDGE1$1, int8 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5518:;
 double vr$10 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, (double)((int64)X$1 - (int64)EDGE0$1) / (double)((int64)EDGE1$1 - (int64)EDGE0$1), 0x0p+0, 0x1.p+0 );
 X$1 = (int8)((int32)__builtin_nearbyint( vr$10 ));
 fb$result$1 = (double)((((int64)X$1 * (int64)X$1) * (int64)X$1) * (((int64)X$1 * (((int64)X$1 * 6ll) + -15ll)) + 10ll));
 goto label$5519;
 label$5519:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T14K_SMOOTHERSTEPEttt( struct $12SYSTEM_BUS_T* THIS$1, uint16 EDGE0$1, uint16 EDGE1$1, uint16 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5520:;
 double vr$10 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, (double)((int64)X$1 - (int64)EDGE0$1) / (double)((int64)EDGE1$1 - (int64)EDGE0$1), 0x0p+0, 0x1.p+0 );
 X$1 = (uint16)((int32)__builtin_nearbyint( vr$10 ));
 fb$result$1 = (double)((((int64)X$1 * (int64)X$1) * (int64)X$1) * (((int64)X$1 * (((int64)X$1 * 6ll) + -15ll)) + 10ll));
 goto label$5521;
 label$5521:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T14K_SMOOTHERSTEPEsss( struct $12SYSTEM_BUS_T* THIS$1, int16 EDGE0$1, int16 EDGE1$1, int16 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5522:;
 double vr$10 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, (double)((int64)X$1 - (int64)EDGE0$1) / (double)((int64)EDGE1$1 - (int64)EDGE0$1), 0x0p+0, 0x1.p+0 );
 X$1 = (int16)((int32)__builtin_nearbyint( vr$10 ));
 fb$result$1 = (double)((((int64)X$1 * (int64)X$1) * (int64)X$1) * (((int64)X$1 * (((int64)X$1 * 6ll) + -15ll)) + 10ll));
 goto label$5523;
 label$5523:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T14K_SMOOTHERSTEPEjjj( struct $12SYSTEM_BUS_T* THIS$1, uint32 EDGE0$1, uint32 EDGE1$1, uint32 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5524:;
 double vr$10 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, (double)((int64)X$1 - (int64)EDGE0$1) / (double)((int64)EDGE1$1 - (int64)EDGE0$1), 0x0p+0, 0x1.p+0 );
 X$1 = (uint32)((int64)__builtin_nearbyint( vr$10 ));
 fb$result$1 = (double)((((int64)X$1 * (int64)X$1) * (int64)X$1) * (((int64)X$1 * (((int64)X$1 * 6ll) + -15ll)) + 10ll));
 goto label$5525;
 label$5525:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T14K_SMOOTHERSTEPEiii( struct $12SYSTEM_BUS_T* THIS$1, int32 EDGE0$1, int32 EDGE1$1, int32 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5526:;
 double vr$10 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, (double)((int64)X$1 - (int64)EDGE0$1) / (double)((int64)EDGE1$1 - (int64)EDGE0$1), 0x0p+0, 0x1.p+0 );
 X$1 = ((int32)__builtin_nearbyint( vr$10 ));
 fb$result$1 = (double)((((int64)X$1 * (int64)X$1) * (int64)X$1) * (((int64)X$1 * (((int64)X$1 * 6ll) + -15ll)) + 10ll));
 goto label$5527;
 label$5527:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T14K_SMOOTHERSTEPEyyy( struct $12SYSTEM_BUS_T* THIS$1, uint64 EDGE0$1, uint64 EDGE1$1, uint64 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5528:;
 double vr$6 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, (double)(X$1 - EDGE0$1) / (double)(EDGE1$1 - EDGE0$1), 0x0p+0, 0x1.p+0 );
 X$1 = ((uint64)__builtin_nearbyint( vr$6 ));
 fb$result$1 = (double)(((X$1 * X$1) * X$1) * ((X$1 * ((X$1 * 6ull) + 18446744073709551601ull)) + 10ull));
 goto label$5529;
 label$5529:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T14K_SMOOTHERSTEPExxx( struct $12SYSTEM_BUS_T* THIS$1, int64 EDGE0$1, int64 EDGE1$1, int64 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5530:;
 double vr$6 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, (double)(X$1 - EDGE0$1) / (double)(EDGE1$1 - EDGE0$1), 0x0p+0, 0x1.p+0 );
 X$1 = ((int64)__builtin_nearbyint( vr$6 ));
 fb$result$1 = (double)(((X$1 * X$1) * X$1) * ((X$1 * ((X$1 * 6ll) + -15ll)) + 10ll));
 goto label$5531;
 label$5531:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T14K_SMOOTHERSTEPEfff( struct $12SYSTEM_BUS_T* THIS$1, float EDGE0$1, float EDGE1$1, float X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5532:;
 double vr$5 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, (double)(float)((double)(X$1 - EDGE0$1) / (double)(EDGE1$1 - EDGE0$1)), 0x0p+0, 0x1.p+0 );
 X$1 = (float)vr$5;
 fb$result$1 = (double)(((X$1 * X$1) * X$1) * ((X$1 * ((X$1 * 0x1.8p+2f) + -0x1.Ep+3f)) + 0x1.4p+3f));
 goto label$5533;
 label$5533:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T14K_SMOOTHERSTEPEddd( struct $12SYSTEM_BUS_T* THIS$1, double EDGE0$1, double EDGE1$1, double X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5534:;
 double vr$4 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, (X$1 - EDGE0$1) / (EDGE1$1 - EDGE0$1), 0x0p+0, 0x1.p+0 );
 X$1 = vr$4;
 fb$result$1 = ((X$1 * X$1) * X$1) * ((X$1 * ((X$1 * 0x1.8p+2) + -0x1.Ep+3)) + 0x1.4p+3);
 goto label$5535;
 label$5535:;
 return fb$result$1;
}

struct $7VECTOR2* _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPER7VECTOR2S1_S1_( struct $7VECTOR2* tmp$2921$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR2* EDGE0$1, struct $7VECTOR2* EDGE1$1, struct $7VECTOR2* X$1 )
{
 label$5536:;
 double vr$3 = _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEddd( THIS$1, *(double*)((uint8*)EDGE0$1 + 8ll), *(double*)((uint8*)EDGE1$1 + 8ll), *(double*)((uint8*)X$1 + 8ll) );
 double vr$7 = _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEddd( THIS$1, *(double*)EDGE0$1, *(double*)EDGE1$1, *(double*)X$1 );
 _ZN7VECTOR2C1Edd( tmp$2921$1, vr$7, vr$3 );
 goto label$5537;
 label$5537:;
 return tmp$2921$1;
}

struct $7VECTOR3* _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPER7VECTOR3S1_S1_( struct $7VECTOR3* tmp$2923$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* EDGE0$1, struct $7VECTOR3* EDGE1$1, struct $7VECTOR3* X$1 )
{
 label$5538:;
 double vr$3 = _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEddd( THIS$1, *(double*)((uint8*)EDGE0$1 + 32ll), *(double*)((uint8*)EDGE1$1 + 32ll), *(double*)((uint8*)X$1 + 32ll) );
 double vr$7 = _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEddd( THIS$1, *(double*)((uint8*)EDGE0$1 + 24ll), *(double*)((uint8*)EDGE1$1 + 24ll), *(double*)((uint8*)X$1 + 24ll) );
 double vr$11 = _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEddd( THIS$1, *(double*)((uint8*)EDGE0$1 + 16ll), *(double*)((uint8*)EDGE1$1 + 16ll), *(double*)((uint8*)X$1 + 16ll) );
 _ZN7VECTOR3C1Eddd( tmp$2923$1, vr$11, vr$7, vr$3 );
 goto label$5539;
 label$5539:;
 return tmp$2923$1;
}

struct $7VECTOR4* _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPER7VECTOR4S1_S1_( struct $7VECTOR4* tmp$2925$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR4* EDGE0$1, struct $7VECTOR4* EDGE1$1, struct $7VECTOR4* X$1 )
{
 label$5540:;
 double vr$3 = _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEddd( THIS$1, *(double*)((uint8*)EDGE0$1 + 64ll), *(double*)((uint8*)EDGE1$1 + 64ll), *(double*)((uint8*)X$1 + 64ll) );
 double vr$7 = _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEddd( THIS$1, *(double*)((uint8*)EDGE0$1 + 56ll), *(double*)((uint8*)EDGE1$1 + 56ll), *(double*)((uint8*)X$1 + 56ll) );
 double vr$11 = _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEddd( THIS$1, *(double*)((uint8*)EDGE0$1 + 48ll), *(double*)((uint8*)EDGE1$1 + 48ll), *(double*)((uint8*)X$1 + 48ll) );
 double vr$15 = _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEddd( THIS$1, *(double*)((uint8*)EDGE0$1 + 40ll), *(double*)((uint8*)EDGE1$1 + 40ll), *(double*)((uint8*)X$1 + 40ll) );
 _ZN7VECTOR4C1Edddd( tmp$2925$1, vr$15, vr$11, vr$7, vr$3 );
 goto label$5541;
 label$5541:;
 return tmp$2925$1;
}

struct $7VECTOR2* _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEddR7VECTOR2( struct $7VECTOR2* tmp$2927$1, struct $12SYSTEM_BUS_T* THIS$1, double EDGE0$1, double EDGE1$1, struct $7VECTOR2* X$1 )
{
 label$5542:;
 double vr$1 = _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEddd( THIS$1, EDGE0$1, EDGE1$1, *(double*)((uint8*)X$1 + 8ll) );
 double vr$3 = _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEddd( THIS$1, EDGE0$1, EDGE1$1, *(double*)X$1 );
 _ZN7VECTOR2C1Edd( tmp$2927$1, vr$3, vr$1 );
 goto label$5543;
 label$5543:;
 return tmp$2927$1;
}

struct $7VECTOR3* _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEddR7VECTOR3( struct $7VECTOR3* tmp$2929$1, struct $12SYSTEM_BUS_T* THIS$1, double EDGE0$1, double EDGE1$1, struct $7VECTOR3* X$1 )
{
 label$5544:;
 double vr$1 = _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEddd( THIS$1, EDGE0$1, EDGE1$1, *(double*)((uint8*)X$1 + 32ll) );
 double vr$3 = _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEddd( THIS$1, EDGE0$1, EDGE1$1, *(double*)((uint8*)X$1 + 24ll) );
 double vr$5 = _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEddd( THIS$1, EDGE0$1, EDGE1$1, *(double*)((uint8*)X$1 + 16ll) );
 _ZN7VECTOR3C1Eddd( tmp$2929$1, vr$5, vr$3, vr$1 );
 goto label$5545;
 label$5545:;
 return tmp$2929$1;
}

struct $7VECTOR4* _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEddR7VECTOR4( struct $7VECTOR4* tmp$2931$1, struct $12SYSTEM_BUS_T* THIS$1, double EDGE0$1, double EDGE1$1, struct $7VECTOR4* X$1 )
{
 label$5546:;
 double vr$1 = _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEddd( THIS$1, EDGE0$1, EDGE1$1, *(double*)((uint8*)X$1 + 64ll) );
 double vr$3 = _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEddd( THIS$1, EDGE0$1, EDGE1$1, *(double*)((uint8*)X$1 + 56ll) );
 double vr$5 = _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEddd( THIS$1, EDGE0$1, EDGE1$1, *(double*)((uint8*)X$1 + 48ll) );
 double vr$7 = _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEddd( THIS$1, EDGE0$1, EDGE1$1, *(double*)((uint8*)X$1 + 40ll) );
 _ZN7VECTOR4C1Edddd( tmp$2931$1, vr$7, vr$5, vr$3, vr$1 );
 goto label$5547;
 label$5547:;
 return tmp$2931$1;
}

double _ZN12SYSTEM_BUS_T20K_INVERSE_SMOOTHSTEPEh( struct $12SYSTEM_BUS_T* THIS$1, uint8 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5548:;
 fb$result$1 = -(__builtin_sin( (__builtin_asin( (-((double)(int64)X$1 * 0x1.p+1) + 0x1.p+0) ) / 0x1.8p+1) )) + 0x1.p-1;
 goto label$5549;
 label$5549:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T20K_INVERSE_SMOOTHSTEPEa( struct $12SYSTEM_BUS_T* THIS$1, int8 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5550:;
 fb$result$1 = -(__builtin_sin( (__builtin_asin( (-((double)(int64)X$1 * 0x1.p+1) + 0x1.p+0) ) / 0x1.8p+1) )) + 0x1.p-1;
 goto label$5551;
 label$5551:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T20K_INVERSE_SMOOTHSTEPEt( struct $12SYSTEM_BUS_T* THIS$1, uint16 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5552:;
 fb$result$1 = -(__builtin_sin( (__builtin_asin( (-((double)(int64)X$1 * 0x1.p+1) + 0x1.p+0) ) / 0x1.8p+1) )) + 0x1.p-1;
 goto label$5553;
 label$5553:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T20K_INVERSE_SMOOTHSTEPEs( struct $12SYSTEM_BUS_T* THIS$1, int16 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5554:;
 fb$result$1 = -(__builtin_sin( (__builtin_asin( (-((double)(int64)X$1 * 0x1.p+1) + 0x1.p+0) ) / 0x1.8p+1) )) + 0x1.p-1;
 goto label$5555;
 label$5555:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T20K_INVERSE_SMOOTHSTEPEj( struct $12SYSTEM_BUS_T* THIS$1, uint32 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5556:;
 fb$result$1 = -(__builtin_sin( (__builtin_asin( (-((double)(int64)X$1 * 0x1.p+1) + 0x1.p+0) ) / 0x1.8p+1) )) + 0x1.p-1;
 goto label$5557;
 label$5557:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T20K_INVERSE_SMOOTHSTEPEi( struct $12SYSTEM_BUS_T* THIS$1, int32 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5558:;
 fb$result$1 = -(__builtin_sin( (__builtin_asin( (-((double)(int64)X$1 * 0x1.p+1) + 0x1.p+0) ) / 0x1.8p+1) )) + 0x1.p-1;
 goto label$5559;
 label$5559:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T20K_INVERSE_SMOOTHSTEPEy( struct $12SYSTEM_BUS_T* THIS$1, uint64 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5560:;
 fb$result$1 = -(__builtin_sin( (__builtin_asin( (-((double)X$1 * 0x1.p+1) + 0x1.p+0) ) / 0x1.8p+1) )) + 0x1.p-1;
 goto label$5561;
 label$5561:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T20K_INVERSE_SMOOTHSTEPEx( struct $12SYSTEM_BUS_T* THIS$1, int64 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5562:;
 fb$result$1 = -(__builtin_sin( (__builtin_asin( (-((double)X$1 * 0x1.p+1) + 0x1.p+0) ) / 0x1.8p+1) )) + 0x1.p-1;
 goto label$5563;
 label$5563:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T20K_INVERSE_SMOOTHSTEPEf( struct $12SYSTEM_BUS_T* THIS$1, float X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5564:;
 fb$result$1 = -(__builtin_sin( (__builtin_asin( (-((double)X$1 * 0x1.p+1) + 0x1.p+0) ) / 0x1.8p+1) )) + 0x1.p-1;
 goto label$5565;
 label$5565:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T20K_INVERSE_SMOOTHSTEPEd( struct $12SYSTEM_BUS_T* THIS$1, double X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5566:;
 fb$result$1 = -(__builtin_sin( (__builtin_asin( (-(X$1 * 0x1.p+1) + 0x1.p+0) ) / 0x1.8p+1) )) + 0x1.p-1;
 goto label$5567;
 label$5567:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T9K_LENGTH2Eh( struct $12SYSTEM_BUS_T* THIS$1, uint8 A$1 )
{
 int64 TMP$2933$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5568:;
 if( (int64)A$1 >= 0ll ) goto label$5570;
 TMP$2933$1 = -(int64)A$1;
 goto label$5571;
 label$5570:;
 TMP$2933$1 = (int64)A$1;
 label$5571:;
 fb$result$1 = (double)TMP$2933$1;
 goto label$5569;
 label$5569:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T9K_LENGTH2Ea( struct $12SYSTEM_BUS_T* THIS$1, int8 A$1 )
{
 int64 TMP$2934$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5572:;
 if( (int64)A$1 >= 0ll ) goto label$5574;
 TMP$2934$1 = -(int64)A$1;
 goto label$5575;
 label$5574:;
 TMP$2934$1 = (int64)A$1;
 label$5575:;
 fb$result$1 = (double)TMP$2934$1;
 goto label$5573;
 label$5573:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T9K_LENGTH2Et( struct $12SYSTEM_BUS_T* THIS$1, uint16 A$1 )
{
 int64 TMP$2935$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5576:;
 if( (int64)A$1 >= 0ll ) goto label$5578;
 TMP$2935$1 = -(int64)A$1;
 goto label$5579;
 label$5578:;
 TMP$2935$1 = (int64)A$1;
 label$5579:;
 fb$result$1 = (double)TMP$2935$1;
 goto label$5577;
 label$5577:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T9K_LENGTH2Es( struct $12SYSTEM_BUS_T* THIS$1, int16 A$1 )
{
 int64 TMP$2936$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5580:;
 if( (int64)A$1 >= 0ll ) goto label$5582;
 TMP$2936$1 = -(int64)A$1;
 goto label$5583;
 label$5582:;
 TMP$2936$1 = (int64)A$1;
 label$5583:;
 fb$result$1 = (double)TMP$2936$1;
 goto label$5581;
 label$5581:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T9K_LENGTH2Ej( struct $12SYSTEM_BUS_T* THIS$1, uint32 A$1 )
{
 int64 TMP$2937$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5584:;
 if( (int64)A$1 >= 0ll ) goto label$5586;
 TMP$2937$1 = -(int64)A$1;
 goto label$5587;
 label$5586:;
 TMP$2937$1 = (int64)A$1;
 label$5587:;
 fb$result$1 = (double)TMP$2937$1;
 goto label$5585;
 label$5585:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T9K_LENGTH2Ei( struct $12SYSTEM_BUS_T* THIS$1, int32 A$1 )
{
 int64 TMP$2938$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5588:;
 if( (int64)A$1 >= 0ll ) goto label$5590;
 TMP$2938$1 = -(int64)A$1;
 goto label$5591;
 label$5590:;
 TMP$2938$1 = (int64)A$1;
 label$5591:;
 fb$result$1 = (double)TMP$2938$1;
 goto label$5589;
 label$5589:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T9K_LENGTH2Ey( struct $12SYSTEM_BUS_T* THIS$1, uint64 A$1 )
{
 uint64 TMP$2939$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5592:;
 if( A$1 >= 0ull ) goto label$5594;
 TMP$2939$1 = -A$1;
 goto label$5595;
 label$5594:;
 TMP$2939$1 = A$1;
 label$5595:;
 fb$result$1 = (double)TMP$2939$1;
 goto label$5593;
 label$5593:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T9K_LENGTH2Ex( struct $12SYSTEM_BUS_T* THIS$1, int64 A$1 )
{
 int64 TMP$2940$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5596:;
 if( A$1 >= 0ll ) goto label$5598;
 TMP$2940$1 = -A$1;
 goto label$5599;
 label$5598:;
 TMP$2940$1 = A$1;
 label$5599:;
 fb$result$1 = (double)TMP$2940$1;
 goto label$5597;
 label$5597:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T9K_LENGTH2Ef( struct $12SYSTEM_BUS_T* THIS$1, float A$1 )
{
 float TMP$2941$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5600:;
 if( A$1 >= 0x0p+0f ) goto label$5602;
 TMP$2941$1 = -A$1;
 goto label$5603;
 label$5602:;
 TMP$2941$1 = A$1;
 label$5603:;
 fb$result$1 = (double)TMP$2941$1;
 goto label$5601;
 label$5601:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T9K_LENGTH2Ed( struct $12SYSTEM_BUS_T* THIS$1, double A$1 )
{
 double TMP$2942$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5604:;
 if( A$1 >= 0x0p+0 ) goto label$5606;
 TMP$2942$1 = -A$1;
 goto label$5607;
 label$5606:;
 TMP$2942$1 = A$1;
 label$5607:;
 fb$result$1 = TMP$2942$1;
 goto label$5605;
 label$5605:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T9K_LENGTH2ERK9_FLOAT128( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* V$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5608:;
 fb$result$1 = (((*(double*)V$1 * *(double*)V$1) + (*(double*)((uint8*)V$1 + 8ll) * *(double*)((uint8*)V$1 + 8ll))) + (*(double*)V$1 * *(double*)V$1)) + (*(double*)((uint8*)V$1 + 8ll) * *(double*)((uint8*)V$1 + 8ll));
 goto label$5609;
 label$5609:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T9K_LENGTH2ERK9_FLOAT256( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* V$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5610:;
 fb$result$1 = (((*(double*)V$1 * *(double*)V$1) + (*(double*)V$1 * *(double*)V$1)) + (*(double*)V$1 * *(double*)V$1)) + (*(double*)V$1 * *(double*)V$1);
 goto label$5611;
 label$5611:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T9K_LENGTH2ERK9_FLOAT512( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* V$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5612:;
 fb$result$1 = (((*(double*)V$1 * *(double*)V$1) + (*(double*)V$1 * *(double*)V$1)) + (*(double*)V$1 * *(double*)V$1)) + (*(double*)V$1 * *(double*)V$1);
 goto label$5613;
 label$5613:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T9K_LENGTH2ERK7VECTOR2( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR2* V$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5614:;
 fb$result$1 = (*(double*)V$1 * *(double*)V$1) + (*(double*)((uint8*)V$1 + 8ll) * *(double*)((uint8*)V$1 + 8ll));
 goto label$5615;
 label$5615:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T9K_LENGTH2ERK7VECTOR3( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* V$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5616:;
 fb$result$1 = ((*(double*)((uint8*)V$1 + 16ll) * *(double*)((uint8*)V$1 + 16ll)) + (*(double*)((uint8*)V$1 + 24ll) * *(double*)((uint8*)V$1 + 24ll))) + (*(double*)((uint8*)V$1 + 32ll) * *(double*)((uint8*)V$1 + 32ll));
 goto label$5617;
 label$5617:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T9K_LENGTH2ERK7VECTOR4( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR4* V$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5618:;
 fb$result$1 = (((*(double*)((uint8*)V$1 + 40ll) * *(double*)((uint8*)V$1 + 40ll)) + (*(double*)((uint8*)V$1 + 48ll) * *(double*)((uint8*)V$1 + 48ll))) + (*(double*)((uint8*)V$1 + 56ll) * *(double*)((uint8*)V$1 + 56ll))) + (*(double*)((uint8*)V$1 + 64ll) * *(double*)((uint8*)V$1 + 64ll));
 goto label$5619;
 label$5619:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8K_LENGTHEh( struct $12SYSTEM_BUS_T* THIS$1, uint8 A$1 )
{
 int64 TMP$2943$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5620:;
 if( (int64)A$1 >= 0ll ) goto label$5622;
 TMP$2943$1 = -(int64)A$1;
 goto label$5623;
 label$5622:;
 TMP$2943$1 = (int64)A$1;
 label$5623:;
 fb$result$1 = (double)TMP$2943$1;
 goto label$5621;
 label$5621:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8K_LENGTHEa( struct $12SYSTEM_BUS_T* THIS$1, int8 A$1 )
{
 int64 TMP$2944$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5624:;
 if( (int64)A$1 >= 0ll ) goto label$5626;
 TMP$2944$1 = -(int64)A$1;
 goto label$5627;
 label$5626:;
 TMP$2944$1 = (int64)A$1;
 label$5627:;
 fb$result$1 = (double)TMP$2944$1;
 goto label$5625;
 label$5625:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8K_LENGTHEt( struct $12SYSTEM_BUS_T* THIS$1, uint16 A$1 )
{
 int64 TMP$2945$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5628:;
 if( (int64)A$1 >= 0ll ) goto label$5630;
 TMP$2945$1 = -(int64)A$1;
 goto label$5631;
 label$5630:;
 TMP$2945$1 = (int64)A$1;
 label$5631:;
 fb$result$1 = (double)TMP$2945$1;
 goto label$5629;
 label$5629:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8K_LENGTHEs( struct $12SYSTEM_BUS_T* THIS$1, int16 A$1 )
{
 int64 TMP$2946$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5632:;
 if( (int64)A$1 >= 0ll ) goto label$5634;
 TMP$2946$1 = -(int64)A$1;
 goto label$5635;
 label$5634:;
 TMP$2946$1 = (int64)A$1;
 label$5635:;
 fb$result$1 = (double)TMP$2946$1;
 goto label$5633;
 label$5633:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8K_LENGTHEj( struct $12SYSTEM_BUS_T* THIS$1, uint32 A$1 )
{
 int64 TMP$2947$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5636:;
 if( (int64)A$1 >= 0ll ) goto label$5638;
 TMP$2947$1 = -(int64)A$1;
 goto label$5639;
 label$5638:;
 TMP$2947$1 = (int64)A$1;
 label$5639:;
 fb$result$1 = (double)TMP$2947$1;
 goto label$5637;
 label$5637:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8K_LENGTHEi( struct $12SYSTEM_BUS_T* THIS$1, int32 A$1 )
{
 int64 TMP$2948$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5640:;
 if( (int64)A$1 >= 0ll ) goto label$5642;
 TMP$2948$1 = -(int64)A$1;
 goto label$5643;
 label$5642:;
 TMP$2948$1 = (int64)A$1;
 label$5643:;
 fb$result$1 = (double)TMP$2948$1;
 goto label$5641;
 label$5641:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8K_LENGTHEy( struct $12SYSTEM_BUS_T* THIS$1, uint64 A$1 )
{
 uint64 TMP$2949$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5644:;
 if( A$1 >= 0ull ) goto label$5646;
 TMP$2949$1 = -A$1;
 goto label$5647;
 label$5646:;
 TMP$2949$1 = A$1;
 label$5647:;
 fb$result$1 = (double)TMP$2949$1;
 goto label$5645;
 label$5645:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8K_LENGTHEx( struct $12SYSTEM_BUS_T* THIS$1, int64 A$1 )
{
 int64 TMP$2950$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5648:;
 if( A$1 >= 0ll ) goto label$5650;
 TMP$2950$1 = -A$1;
 goto label$5651;
 label$5650:;
 TMP$2950$1 = A$1;
 label$5651:;
 fb$result$1 = (double)TMP$2950$1;
 goto label$5649;
 label$5649:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8K_LENGTHEf( struct $12SYSTEM_BUS_T* THIS$1, float A$1 )
{
 float TMP$2951$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5652:;
 if( A$1 >= 0x0p+0f ) goto label$5654;
 TMP$2951$1 = -A$1;
 goto label$5655;
 label$5654:;
 TMP$2951$1 = A$1;
 label$5655:;
 fb$result$1 = (double)TMP$2951$1;
 goto label$5653;
 label$5653:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8K_LENGTHEd( struct $12SYSTEM_BUS_T* THIS$1, double A$1 )
{
 double TMP$2952$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5656:;
 if( A$1 >= 0x0p+0 ) goto label$5658;
 TMP$2952$1 = -A$1;
 goto label$5659;
 label$5658:;
 TMP$2952$1 = A$1;
 label$5659:;
 fb$result$1 = TMP$2952$1;
 goto label$5657;
 label$5657:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8K_LENGTHERK9_FLOAT128( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* V$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5660:;
 float vr$17 = sqrtf( (float)((((*(double*)V$1 * *(double*)V$1) + (*(double*)((uint8*)V$1 + 8ll) * *(double*)((uint8*)V$1 + 8ll))) + (*(double*)V$1 * *(double*)V$1)) + (*(double*)((uint8*)V$1 + 8ll) * *(double*)((uint8*)V$1 + 8ll))) );
 fb$result$1 = (double)vr$17;
 goto label$5661;
 label$5661:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8K_LENGTHERK9_FLOAT256( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* V$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5662:;
 float vr$17 = sqrtf( (float)((((*(double*)V$1 * *(double*)V$1) + (*(double*)V$1 * *(double*)V$1)) + (*(double*)V$1 * *(double*)V$1)) + (*(double*)V$1 * *(double*)V$1)) );
 fb$result$1 = (double)vr$17;
 goto label$5663;
 label$5663:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8K_LENGTHERK9_FLOAT512( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* V$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5664:;
 float vr$17 = sqrtf( (float)((((*(double*)V$1 * *(double*)V$1) + (*(double*)V$1 * *(double*)V$1)) + (*(double*)V$1 * *(double*)V$1)) + (*(double*)V$1 * *(double*)V$1)) );
 fb$result$1 = (double)vr$17;
 goto label$5665;
 label$5665:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR2( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR2* V$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5666:;
 float vr$9 = sqrtf( (float)((*(double*)V$1 * *(double*)V$1) + (*(double*)((uint8*)V$1 + 8ll) * *(double*)((uint8*)V$1 + 8ll))) );
 fb$result$1 = (double)vr$9;
 goto label$5667;
 label$5667:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR3( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* V$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5668:;
 float vr$13 = sqrtf( (float)(((*(double*)((uint8*)V$1 + 16ll) * *(double*)((uint8*)V$1 + 16ll)) + (*(double*)((uint8*)V$1 + 24ll) * *(double*)((uint8*)V$1 + 24ll))) + (*(double*)((uint8*)V$1 + 32ll) * *(double*)((uint8*)V$1 + 32ll))) );
 fb$result$1 = (double)vr$13;
 goto label$5669;
 label$5669:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR4( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR4* V$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5670:;
 float vr$17 = sqrtf( (float)((((*(double*)((uint8*)V$1 + 40ll) * *(double*)((uint8*)V$1 + 40ll)) + (*(double*)((uint8*)V$1 + 48ll) * *(double*)((uint8*)V$1 + 48ll))) + (*(double*)((uint8*)V$1 + 56ll) * *(double*)((uint8*)V$1 + 56ll))) + (*(double*)((uint8*)V$1 + 64ll) * *(double*)((uint8*)V$1 + 64ll))) );
 fb$result$1 = (double)vr$17;
 goto label$5671;
 label$5671:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T10K_DISTANCEEhh( struct $12SYSTEM_BUS_T* THIS$1, uint8 A$1, uint8 B$1 )
{
 int64 TMP$2953$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5672:;
 double D$1;
 D$1 = (double)((int64)A$1 - (int64)B$1);
 if( (int64)A$1 >= 0ll ) goto label$5674;
 TMP$2953$1 = -(int64)A$1;
 goto label$5675;
 label$5674:;
 TMP$2953$1 = (int64)A$1;
 label$5675:;
 fb$result$1 = (double)TMP$2953$1;
 goto label$5673;
 label$5673:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T10K_DISTANCEEaa( struct $12SYSTEM_BUS_T* THIS$1, int8 A$1, int8 B$1 )
{
 int64 TMP$2954$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5676:;
 double D$1;
 D$1 = (double)((int64)A$1 - (int64)B$1);
 if( (int64)A$1 >= 0ll ) goto label$5678;
 TMP$2954$1 = -(int64)A$1;
 goto label$5679;
 label$5678:;
 TMP$2954$1 = (int64)A$1;
 label$5679:;
 fb$result$1 = (double)TMP$2954$1;
 goto label$5677;
 label$5677:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T10K_DISTANCEEtt( struct $12SYSTEM_BUS_T* THIS$1, uint16 A$1, uint16 B$1 )
{
 int64 TMP$2955$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5680:;
 double D$1;
 D$1 = (double)((int64)A$1 - (int64)B$1);
 if( (int64)A$1 >= 0ll ) goto label$5682;
 TMP$2955$1 = -(int64)A$1;
 goto label$5683;
 label$5682:;
 TMP$2955$1 = (int64)A$1;
 label$5683:;
 fb$result$1 = (double)TMP$2955$1;
 goto label$5681;
 label$5681:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T10K_DISTANCEEss( struct $12SYSTEM_BUS_T* THIS$1, int16 A$1, int16 B$1 )
{
 int64 TMP$2956$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5684:;
 double D$1;
 D$1 = (double)((int64)A$1 - (int64)B$1);
 if( (int64)A$1 >= 0ll ) goto label$5686;
 TMP$2956$1 = -(int64)A$1;
 goto label$5687;
 label$5686:;
 TMP$2956$1 = (int64)A$1;
 label$5687:;
 fb$result$1 = (double)TMP$2956$1;
 goto label$5685;
 label$5685:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T10K_DISTANCEEjj( struct $12SYSTEM_BUS_T* THIS$1, uint32 A$1, uint32 B$1 )
{
 int64 TMP$2957$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5688:;
 double D$1;
 D$1 = (double)((int64)A$1 - (int64)B$1);
 if( (int64)A$1 >= 0ll ) goto label$5690;
 TMP$2957$1 = -(int64)A$1;
 goto label$5691;
 label$5690:;
 TMP$2957$1 = (int64)A$1;
 label$5691:;
 fb$result$1 = (double)TMP$2957$1;
 goto label$5689;
 label$5689:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T10K_DISTANCEEii( struct $12SYSTEM_BUS_T* THIS$1, int32 A$1, int32 B$1 )
{
 int64 TMP$2958$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5692:;
 double D$1;
 D$1 = (double)((int64)A$1 - (int64)B$1);
 if( (int64)A$1 >= 0ll ) goto label$5694;
 TMP$2958$1 = -(int64)A$1;
 goto label$5695;
 label$5694:;
 TMP$2958$1 = (int64)A$1;
 label$5695:;
 fb$result$1 = (double)TMP$2958$1;
 goto label$5693;
 label$5693:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T10K_DISTANCEEyy( struct $12SYSTEM_BUS_T* THIS$1, uint64 A$1, uint64 B$1 )
{
 uint64 TMP$2959$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5696:;
 double D$1;
 D$1 = (double)(A$1 - B$1);
 if( A$1 >= 0ull ) goto label$5698;
 TMP$2959$1 = -A$1;
 goto label$5699;
 label$5698:;
 TMP$2959$1 = A$1;
 label$5699:;
 fb$result$1 = (double)TMP$2959$1;
 goto label$5697;
 label$5697:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T10K_DISTANCEExx( struct $12SYSTEM_BUS_T* THIS$1, int64 A$1, int64 B$1 )
{
 int64 TMP$2960$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5700:;
 double D$1;
 D$1 = (double)(A$1 - B$1);
 if( A$1 >= 0ll ) goto label$5702;
 TMP$2960$1 = -A$1;
 goto label$5703;
 label$5702:;
 TMP$2960$1 = A$1;
 label$5703:;
 fb$result$1 = (double)TMP$2960$1;
 goto label$5701;
 label$5701:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T10K_DISTANCEEff( struct $12SYSTEM_BUS_T* THIS$1, float A$1, float B$1 )
{
 float TMP$2961$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5704:;
 double D$1;
 D$1 = (double)(A$1 - B$1);
 if( A$1 >= 0x0p+0f ) goto label$5706;
 TMP$2961$1 = -A$1;
 goto label$5707;
 label$5706:;
 TMP$2961$1 = A$1;
 label$5707:;
 fb$result$1 = (double)TMP$2961$1;
 goto label$5705;
 label$5705:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T10K_DISTANCEEdd( struct $12SYSTEM_BUS_T* THIS$1, double A$1, double B$1 )
{
 double TMP$2962$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5708:;
 double D$1;
 D$1 = A$1 - B$1;
 if( A$1 >= 0x0p+0 ) goto label$5710;
 TMP$2962$1 = -A$1;
 goto label$5711;
 label$5710:;
 TMP$2962$1 = A$1;
 label$5711:;
 fb$result$1 = TMP$2962$1;
 goto label$5709;
 label$5709:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T10K_DISTANCEER9_FLOAT128S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* A$1, struct $9_FLOAT128* B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5712:;
 double X$1;
 X$1 = *(double*)A$1 - *(double*)B$1;
 double Y$1;
 Y$1 = *(double*)((uint8*)A$1 + 8ll) - *(double*)((uint8*)B$1 + 8ll);
 double Z$1;
 Z$1 = *(double*)A$1 - *(double*)B$1;
 double W$1;
 W$1 = *(double*)((uint8*)A$1 + 8ll) - *(double*)((uint8*)B$1 + 8ll);
 double D$1;
 D$1 = (((X$1 * X$1) + (Y$1 * Y$1)) + (Z$1 * Z$1)) + (W$1 * W$1);
 if( D$1 != 0x0p+0 ) goto label$5715;
 {
  fb$result$1 = 0x0p+0;
  goto label$5713;
  label$5715:;
 }
 float vr$21 = sqrtf( (float)D$1 );
 fb$result$1 = (double)vr$21;
 goto label$5713;
 label$5713:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T10K_DISTANCEER9_FLOAT256S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* A$1, struct $9_FLOAT256* B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5716:;
 double X$1;
 X$1 = *(double*)A$1 - *(double*)B$1;
 double Y$1;
 Y$1 = *(double*)A$1 - *(double*)B$1;
 double Z$1;
 Z$1 = *(double*)A$1 - *(double*)B$1;
 double W$1;
 W$1 = *(double*)A$1 - *(double*)B$1;
 double D$1;
 D$1 = (((X$1 * X$1) + (Y$1 * Y$1)) + (Z$1 * Z$1)) + (W$1 * W$1);
 if( D$1 != 0x0p+0 ) goto label$5719;
 {
  fb$result$1 = 0x0p+0;
  goto label$5717;
  label$5719:;
 }
 float vr$21 = sqrtf( (float)D$1 );
 fb$result$1 = (double)vr$21;
 goto label$5717;
 label$5717:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T10K_DISTANCEER9_FLOAT512S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* A$1, struct $9_FLOAT512* B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5720:;
 double X$1;
 X$1 = *(double*)A$1 - *(double*)B$1;
 double Y$1;
 Y$1 = *(double*)A$1 - *(double*)B$1;
 double Z$1;
 Z$1 = *(double*)A$1 - *(double*)B$1;
 double W$1;
 W$1 = *(double*)A$1 - *(double*)B$1;
 double D$1;
 D$1 = (((X$1 * X$1) + (Y$1 * Y$1)) + (Z$1 * Z$1)) + (W$1 * W$1);
 if( D$1 != 0x0p+0 ) goto label$5723;
 {
  fb$result$1 = 0x0p+0;
  goto label$5721;
  label$5723:;
 }
 float vr$21 = sqrtf( (float)D$1 );
 fb$result$1 = (double)vr$21;
 goto label$5721;
 label$5721:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T10K_DISTANCEER7VECTOR2S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR2* A$1, struct $7VECTOR2* B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5724:;
 double X$1;
 X$1 = *(double*)A$1 - *(double*)B$1;
 double Y$1;
 Y$1 = *(double*)((uint8*)A$1 + 8ll) - *(double*)((uint8*)B$1 + 8ll);
 double D$1;
 D$1 = (X$1 * X$1) + (Y$1 * Y$1);
 if( D$1 != 0x0p+0 ) goto label$5727;
 {
  fb$result$1 = 0x0p+0;
  goto label$5725;
  label$5727:;
 }
 float vr$11 = sqrtf( (float)D$1 );
 fb$result$1 = (double)vr$11;
 goto label$5725;
 label$5725:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T10K_DISTANCEER7VECTOR3S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* A$1, struct $7VECTOR3* B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5728:;
 double X$1;
 X$1 = *(double*)((uint8*)A$1 + 16ll) - *(double*)((uint8*)B$1 + 16ll);
 double Y$1;
 Y$1 = *(double*)((uint8*)A$1 + 24ll) - *(double*)((uint8*)B$1 + 24ll);
 double Z$1;
 Z$1 = *(double*)((uint8*)A$1 + 32ll) - *(double*)((uint8*)B$1 + 32ll);
 double D$1;
 D$1 = ((X$1 * X$1) + (Y$1 * Y$1)) + (Z$1 * Z$1);
 if( D$1 != 0x0p+0 ) goto label$5731;
 {
  fb$result$1 = 0x0p+0;
  goto label$5729;
  label$5731:;
 }
 float vr$16 = sqrtf( (float)D$1 );
 fb$result$1 = (double)vr$16;
 goto label$5729;
 label$5729:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T10K_DISTANCEER7VECTOR4S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR4* A$1, struct $7VECTOR4* B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5732:;
 double X$1;
 X$1 = *(double*)((uint8*)A$1 + 40ll) - *(double*)((uint8*)B$1 + 40ll);
 double Y$1;
 Y$1 = *(double*)((uint8*)A$1 + 48ll) - *(double*)((uint8*)B$1 + 48ll);
 double Z$1;
 Z$1 = *(double*)((uint8*)A$1 + 56ll) - *(double*)((uint8*)B$1 + 56ll);
 double W$1;
 W$1 = *(double*)((uint8*)A$1 + 64ll) - *(double*)((uint8*)B$1 + 64ll);
 double D$1;
 D$1 = (((X$1 * X$1) + (Y$1 * Y$1)) + (Z$1 * Z$1)) + (W$1 * W$1);
 if( D$1 != 0x0p+0 ) goto label$5735;
 {
  fb$result$1 = 0x0p+0;
  goto label$5733;
  label$5735:;
 }
 float vr$21 = sqrtf( (float)D$1 );
 fb$result$1 = (double)vr$21;
 goto label$5733;
 label$5733:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_DOTEhh( struct $12SYSTEM_BUS_T* THIS$1, uint8 A$1, uint8 B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5736:;
 fb$result$1 = (double)((int64)A$1 * (int64)B$1);
 goto label$5737;
 label$5737:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_DOTEaa( struct $12SYSTEM_BUS_T* THIS$1, int8 A$1, int8 B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5738:;
 fb$result$1 = (double)((int64)A$1 * (int64)B$1);
 goto label$5739;
 label$5739:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_DOTEtt( struct $12SYSTEM_BUS_T* THIS$1, uint16 A$1, uint16 B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5740:;
 fb$result$1 = (double)((int64)A$1 * (int64)B$1);
 goto label$5741;
 label$5741:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_DOTEss( struct $12SYSTEM_BUS_T* THIS$1, int16 A$1, int16 B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5742:;
 fb$result$1 = (double)((int64)A$1 * (int64)B$1);
 goto label$5743;
 label$5743:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_DOTEjj( struct $12SYSTEM_BUS_T* THIS$1, uint32 A$1, uint32 B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5744:;
 fb$result$1 = (double)((int64)A$1 * (int64)B$1);
 goto label$5745;
 label$5745:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_DOTEii( struct $12SYSTEM_BUS_T* THIS$1, int32 A$1, int32 B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5746:;
 fb$result$1 = (double)((int64)A$1 * (int64)B$1);
 goto label$5747;
 label$5747:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_DOTEyy( struct $12SYSTEM_BUS_T* THIS$1, uint64 A$1, uint64 B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5748:;
 fb$result$1 = (double)(A$1 * B$1);
 goto label$5749;
 label$5749:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_DOTExx( struct $12SYSTEM_BUS_T* THIS$1, int64 A$1, int64 B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5750:;
 fb$result$1 = (double)(A$1 * B$1);
 goto label$5751;
 label$5751:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_DOTEff( struct $12SYSTEM_BUS_T* THIS$1, float A$1, float B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5752:;
 fb$result$1 = (double)(A$1 * B$1);
 goto label$5753;
 label$5753:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_DOTEdd( struct $12SYSTEM_BUS_T* THIS$1, double A$1, double B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5754:;
 fb$result$1 = A$1 * B$1;
 goto label$5755;
 label$5755:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_DOTER9_FLOAT128S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* A$1, struct $9_FLOAT128* B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5756:;
 fb$result$1 = (((*(double*)A$1 * *(double*)B$1) + (*(double*)((uint8*)A$1 + 8ll) * *(double*)((uint8*)B$1 + 8ll))) + (*(double*)A$1 * *(double*)B$1)) + (*(double*)((uint8*)A$1 + 8ll) * *(double*)((uint8*)B$1 + 8ll));
 goto label$5757;
 label$5757:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_DOTER9_FLOAT256S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* A$1, struct $9_FLOAT256* B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5758:;
 fb$result$1 = (((*(double*)A$1 * *(double*)B$1) + (*(double*)A$1 * *(double*)B$1)) + (*(double*)A$1 * *(double*)B$1)) + (*(double*)A$1 * *(double*)B$1);
 goto label$5759;
 label$5759:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_DOTER9_FLOAT512S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* A$1, struct $9_FLOAT512* B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5760:;
 fb$result$1 = (((*(double*)A$1 * *(double*)B$1) + (*(double*)A$1 * *(double*)B$1)) + (*(double*)A$1 * *(double*)B$1)) + (*(double*)A$1 * *(double*)B$1);
 goto label$5761;
 label$5761:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR2S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR2* A$1, struct $7VECTOR2* B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5762:;
 fb$result$1 = (*(double*)A$1 * *(double*)B$1) + (*(double*)((uint8*)A$1 + 8ll) * *(double*)((uint8*)B$1 + 8ll));
 goto label$5763;
 label$5763:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* A$1, struct $7VECTOR3* B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5764:;
 fb$result$1 = ((*(double*)((uint8*)A$1 + 16ll) * *(double*)((uint8*)B$1 + 16ll)) + (*(double*)((uint8*)A$1 + 24ll) * *(double*)((uint8*)B$1 + 24ll))) + (*(double*)((uint8*)A$1 + 32ll) * *(double*)((uint8*)B$1 + 32ll));
 goto label$5765;
 label$5765:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR4S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR4* A$1, struct $7VECTOR4* B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5766:;
 fb$result$1 = (((*(double*)((uint8*)A$1 + 40ll) * *(double*)((uint8*)B$1 + 40ll)) + (*(double*)((uint8*)A$1 + 48ll) * *(double*)((uint8*)B$1 + 48ll))) + (*(double*)((uint8*)A$1 + 56ll) * *(double*)((uint8*)B$1 + 56ll))) + (*(double*)((uint8*)A$1 + 64ll) * *(double*)((uint8*)B$1 + 64ll));
 goto label$5767;
 label$5767:;
 return fb$result$1;
}

struct $7VECTOR3* _ZN12SYSTEM_BUS_T7K_CROSSER7VECTOR3S1_( struct $7VECTOR3* tmp$2963$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* A$1, struct $7VECTOR3* B$1 )
{
 label$5768:;
 _ZN7VECTOR3C1Eddd( tmp$2963$1, (*(double*)((uint8*)A$1 + 24ll) * *(double*)((uint8*)B$1 + 32ll)) - (*(double*)((uint8*)A$1 + 32ll) * *(double*)((uint8*)B$1 + 24ll)), (*(double*)((uint8*)A$1 + 32ll) * *(double*)((uint8*)B$1 + 16ll)) - (*(double*)((uint8*)A$1 + 16ll) * *(double*)((uint8*)B$1 + 32ll)), (*(double*)((uint8*)A$1 + 16ll) * *(double*)((uint8*)B$1 + 24ll)) - (*(double*)((uint8*)A$1 + 24ll) * *(double*)((uint8*)B$1 + 16ll)) );
 goto label$5769;
 label$5769:;
 return tmp$2963$1;
}

double _ZN12SYSTEM_BUS_T11K_NORMALIZEEh( struct $12SYSTEM_BUS_T* THIS$1, uint8 V$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5770:;
 fb$result$1 = 0x1.p+0;
 goto label$5771;
 label$5771:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T11K_NORMALIZEEa( struct $12SYSTEM_BUS_T* THIS$1, int8 V$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5772:;
 fb$result$1 = 0x1.p+0;
 goto label$5773;
 label$5773:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T11K_NORMALIZEEt( struct $12SYSTEM_BUS_T* THIS$1, uint16 V$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5774:;
 fb$result$1 = 0x1.p+0;
 goto label$5775;
 label$5775:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T11K_NORMALIZEEs( struct $12SYSTEM_BUS_T* THIS$1, int16 V$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5776:;
 fb$result$1 = 0x1.p+0;
 goto label$5777;
 label$5777:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T11K_NORMALIZEEj( struct $12SYSTEM_BUS_T* THIS$1, uint32 V$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5778:;
 fb$result$1 = 0x1.p+0;
 goto label$5779;
 label$5779:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T11K_NORMALIZEEi( struct $12SYSTEM_BUS_T* THIS$1, int32 V$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5780:;
 fb$result$1 = 0x1.p+0;
 goto label$5781;
 label$5781:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T11K_NORMALIZEEy( struct $12SYSTEM_BUS_T* THIS$1, uint64 V$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5782:;
 fb$result$1 = 0x1.p+0;
 goto label$5783;
 label$5783:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T11K_NORMALIZEEx( struct $12SYSTEM_BUS_T* THIS$1, int64 V$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5784:;
 fb$result$1 = 0x1.p+0;
 goto label$5785;
 label$5785:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T11K_NORMALIZEEf( struct $12SYSTEM_BUS_T* THIS$1, float V$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5786:;
 fb$result$1 = 0x1.p+0;
 goto label$5787;
 label$5787:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T11K_NORMALIZEEd( struct $12SYSTEM_BUS_T* THIS$1, double V$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5788:;
 fb$result$1 = 0x1.p+0;
 goto label$5789;
 label$5789:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T11K_NORMALIZEER9_FLOAT128( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* V$1 )
{
 struct $9_FLOAT128 TMP$2965$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5790:;
 double D$1;
 D$1 = (((*(double*)V$1 * *(double*)V$1) + (*(double*)((uint8*)V$1 + 8ll) * *(double*)((uint8*)V$1 + 8ll))) + (*(double*)V$1 * *(double*)V$1)) + (*(double*)((uint8*)V$1 + 8ll) * *(double*)((uint8*)V$1 + 8ll));
 if( D$1 == 0x0p+0 ) goto label$5793;
 {
  float vr$17 = sqrtf( (float)D$1 );
  D$1 = 0x1.p+0 / (double)vr$17;
  label$5793:;
 }
 _ZN9_FLOAT128C1Edddd( &TMP$2965$1, *(double*)V$1 * D$1, *(double*)((uint8*)V$1 + 8ll) * D$1, *(double*)V$1 * D$1, *(double*)((uint8*)V$1 + 8ll) * D$1 );
 uint64 vr$30 = _ZN9_FLOAT128cvyEv( &TMP$2965$1 );
 fb$result$1 = (double)vr$30;
 goto label$5791;
 label$5791:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T11K_NORMALIZEER9_FLOAT256( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* V$1 )
{
 struct $9_FLOAT256 TMP$2966$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5794:;
 double D$1;
 D$1 = (((*(double*)V$1 * *(double*)V$1) + (*(double*)V$1 * *(double*)V$1)) + (*(double*)V$1 * *(double*)V$1)) + (*(double*)V$1 * *(double*)V$1);
 if( D$1 == 0x0p+0 ) goto label$5797;
 {
  float vr$17 = sqrtf( (float)D$1 );
  D$1 = 0x1.p+0 / (double)vr$17;
  label$5797:;
 }
 _ZN9_FLOAT256C1Edddd( &TMP$2966$1, *(double*)V$1 * D$1, *(double*)V$1 * D$1, *(double*)V$1 * D$1, *(double*)V$1 * D$1 );
 uint64 vr$30 = _ZN9_FLOAT256cvyEv( &TMP$2966$1 );
 fb$result$1 = (double)vr$30;
 goto label$5795;
 label$5795:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T11K_NORMALIZEER9_FLOAT512( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* V$1 )
{
 struct $9_FLOAT512 TMP$2967$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5798:;
 double D$1;
 D$1 = (((*(double*)V$1 * *(double*)V$1) + (*(double*)V$1 * *(double*)V$1)) + (*(double*)V$1 * *(double*)V$1)) + (*(double*)V$1 * *(double*)V$1);
 if( D$1 == 0x0p+0 ) goto label$5801;
 {
  float vr$17 = sqrtf( (float)D$1 );
  D$1 = 0x1.p+0 / (double)vr$17;
  label$5801:;
 }
 _ZN9_FLOAT512C1Edddd( &TMP$2967$1, *(double*)V$1 * D$1, *(double*)V$1 * D$1, *(double*)V$1 * D$1, *(double*)V$1 * D$1 );
 uint64 vr$30 = _ZN9_FLOAT512cvyEv( &TMP$2967$1 );
 fb$result$1 = (double)vr$30;
 goto label$5799;
 label$5799:;
 return fb$result$1;
}

struct $7VECTOR2* _ZN12SYSTEM_BUS_T11K_NORMALIZEER7VECTOR2( struct $7VECTOR2* tmp$2968$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR2* V$1 )
{
 label$5802:;
 double D$1;
 D$1 = (*(double*)V$1 * *(double*)V$1) + (*(double*)((uint8*)V$1 + 8ll) * *(double*)((uint8*)V$1 + 8ll));
 if( D$1 == 0x0p+0 ) goto label$5805;
 {
  float vr$8 = sqrtf( (float)D$1 );
  D$1 = 0x1.p+0 / (double)vr$8;
  label$5805:;
 }
 _ZN7VECTOR2C1Edd( tmp$2968$1, *(double*)V$1 * D$1, *(double*)((uint8*)V$1 + 8ll) * D$1 );
 goto label$5803;
 label$5803:;
 return tmp$2968$1;
}

struct $7VECTOR3* _ZN12SYSTEM_BUS_T11K_NORMALIZEER7VECTOR3( struct $7VECTOR3* tmp$2970$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* V$1 )
{
 label$5806:;
 double D$1;
 D$1 = ((*(double*)((uint8*)V$1 + 16ll) * *(double*)((uint8*)V$1 + 16ll)) + (*(double*)((uint8*)V$1 + 24ll) * *(double*)((uint8*)V$1 + 24ll))) + (*(double*)((uint8*)V$1 + 32ll) * *(double*)((uint8*)V$1 + 32ll));
 if( D$1 == 0x0p+0 ) goto label$5809;
 {
  float vr$12 = sqrtf( (float)D$1 );
  D$1 = 0x1.p+0 / (double)vr$12;
  label$5809:;
 }
 _ZN7VECTOR3C1Eddd( tmp$2970$1, *(double*)((uint8*)V$1 + 16ll) * D$1, *(double*)((uint8*)V$1 + 24ll) * D$1, *(double*)((uint8*)V$1 + 32ll) * D$1 );
 goto label$5807;
 label$5807:;
 return tmp$2970$1;
}

struct $7VECTOR4* _ZN12SYSTEM_BUS_T11K_NORMALIZEER7VECTOR4( struct $7VECTOR4* tmp$2972$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR4* V$1 )
{
 label$5810:;
 double D$1;
 D$1 = (((*(double*)((uint8*)V$1 + 40ll) * *(double*)((uint8*)V$1 + 40ll)) + (*(double*)((uint8*)V$1 + 48ll) * *(double*)((uint8*)V$1 + 48ll))) + (*(double*)((uint8*)V$1 + 56ll) * *(double*)((uint8*)V$1 + 56ll))) + (*(double*)((uint8*)V$1 + 64ll) * *(double*)((uint8*)V$1 + 64ll));
 if( D$1 == 0x0p+0 ) goto label$5813;
 {
  float vr$16 = sqrtf( (float)D$1 );
  D$1 = 0x1.p+0 / (double)vr$16;
  label$5813:;
 }
 _ZN7VECTOR4C1Edddd( tmp$2972$1, *(double*)((uint8*)V$1 + 40ll) * D$1, *(double*)((uint8*)V$1 + 48ll) * D$1, *(double*)((uint8*)V$1 + 56ll) * D$1, *(double*)((uint8*)V$1 + 64ll) * D$1 );
 goto label$5811;
 label$5811:;
 return tmp$2972$1;
}

double _ZN12SYSTEM_BUS_T13K_FACEFORWARDEhhh( struct $12SYSTEM_BUS_T* THIS$1, uint8 N$1, uint8 I$1, uint8 NREF$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5814:;
 double D$1;
 D$1 = (double)((int64)I$1 * (int64)NREF$1);
 if( D$1 >= 0x0p+0 ) goto label$5817;
 {
  fb$result$1 = (double)N$1;
  goto label$5815;
 }
 goto label$5816;
 label$5817:;
 {
  fb$result$1 = (double)-(int64)N$1;
  goto label$5815;
  label$5816:;
 }
 label$5815:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T13K_FACEFORWARDEaaa( struct $12SYSTEM_BUS_T* THIS$1, int8 N$1, int8 I$1, int8 NREF$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5818:;
 double D$1;
 D$1 = (double)((int64)I$1 * (int64)NREF$1);
 if( D$1 >= 0x0p+0 ) goto label$5821;
 {
  fb$result$1 = (double)N$1;
  goto label$5819;
 }
 goto label$5820;
 label$5821:;
 {
  fb$result$1 = (double)-(int64)N$1;
  goto label$5819;
  label$5820:;
 }
 label$5819:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T13K_FACEFORWARDEttt( struct $12SYSTEM_BUS_T* THIS$1, uint16 N$1, uint16 I$1, uint16 NREF$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5822:;
 double D$1;
 D$1 = (double)((int64)I$1 * (int64)NREF$1);
 if( D$1 >= 0x0p+0 ) goto label$5825;
 {
  fb$result$1 = (double)N$1;
  goto label$5823;
 }
 goto label$5824;
 label$5825:;
 {
  fb$result$1 = (double)-(int64)N$1;
  goto label$5823;
  label$5824:;
 }
 label$5823:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T13K_FACEFORWARDEsss( struct $12SYSTEM_BUS_T* THIS$1, int16 N$1, int16 I$1, int16 NREF$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5826:;
 double D$1;
 D$1 = (double)((int64)I$1 * (int64)NREF$1);
 if( D$1 >= 0x0p+0 ) goto label$5829;
 {
  fb$result$1 = (double)N$1;
  goto label$5827;
 }
 goto label$5828;
 label$5829:;
 {
  fb$result$1 = (double)-(int64)N$1;
  goto label$5827;
  label$5828:;
 }
 label$5827:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T13K_FACEFORWARDEjjj( struct $12SYSTEM_BUS_T* THIS$1, uint32 N$1, uint32 I$1, uint32 NREF$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5830:;
 double D$1;
 D$1 = (double)((int64)I$1 * (int64)NREF$1);
 if( D$1 >= 0x0p+0 ) goto label$5833;
 {
  fb$result$1 = (double)N$1;
  goto label$5831;
 }
 goto label$5832;
 label$5833:;
 {
  fb$result$1 = (double)-(int64)N$1;
  goto label$5831;
  label$5832:;
 }
 label$5831:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T13K_FACEFORWARDEiii( struct $12SYSTEM_BUS_T* THIS$1, int32 N$1, int32 I$1, int32 NREF$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5834:;
 double D$1;
 D$1 = (double)((int64)I$1 * (int64)NREF$1);
 if( D$1 >= 0x0p+0 ) goto label$5837;
 {
  fb$result$1 = (double)N$1;
  goto label$5835;
 }
 goto label$5836;
 label$5837:;
 {
  fb$result$1 = (double)-(int64)N$1;
  goto label$5835;
  label$5836:;
 }
 label$5835:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T13K_FACEFORWARDEyyy( struct $12SYSTEM_BUS_T* THIS$1, uint64 N$1, uint64 I$1, uint64 NREF$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5838:;
 double D$1;
 D$1 = (double)(I$1 * NREF$1);
 if( D$1 >= 0x0p+0 ) goto label$5841;
 {
  fb$result$1 = (double)N$1;
  goto label$5839;
 }
 goto label$5840;
 label$5841:;
 {
  fb$result$1 = (double)-N$1;
  goto label$5839;
  label$5840:;
 }
 label$5839:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T13K_FACEFORWARDExxx( struct $12SYSTEM_BUS_T* THIS$1, int64 N$1, int64 I$1, int64 NREF$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5842:;
 double D$1;
 D$1 = (double)(I$1 * NREF$1);
 if( D$1 >= 0x0p+0 ) goto label$5845;
 {
  fb$result$1 = (double)N$1;
  goto label$5843;
 }
 goto label$5844;
 label$5845:;
 {
  fb$result$1 = (double)-N$1;
  goto label$5843;
  label$5844:;
 }
 label$5843:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T13K_FACEFORWARDEfff( struct $12SYSTEM_BUS_T* THIS$1, float N$1, float I$1, float NREF$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5846:;
 double D$1;
 D$1 = (double)(I$1 * NREF$1);
 if( D$1 >= 0x0p+0 ) goto label$5849;
 {
  fb$result$1 = (double)N$1;
  goto label$5847;
 }
 goto label$5848;
 label$5849:;
 {
  fb$result$1 = (double)-N$1;
  goto label$5847;
  label$5848:;
 }
 label$5847:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T13K_FACEFORWARDEddd( struct $12SYSTEM_BUS_T* THIS$1, double N$1, double I$1, double NREF$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5850:;
 double D$1;
 D$1 = I$1 * NREF$1;
 if( D$1 >= 0x0p+0 ) goto label$5853;
 {
  fb$result$1 = N$1;
  goto label$5851;
 }
 goto label$5852;
 label$5853:;
 {
  fb$result$1 = -N$1;
  goto label$5851;
  label$5852:;
 }
 label$5851:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T13K_FACEFORWARDER9_FLOAT128S1_S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* N$1, struct $9_FLOAT128* I$1, struct $9_FLOAT128* NREF$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5854:;
 double D$1;
 D$1 = (((*(double*)I$1 * *(double*)NREF$1) + (*(double*)((uint8*)I$1 + 8ll) * *(double*)((uint8*)NREF$1 + 8ll))) + (*(double*)I$1 * *(double*)NREF$1)) + (*(double*)((uint8*)I$1 + 8ll) * *(double*)((uint8*)NREF$1 + 8ll));
 if( D$1 >= 0x0p+0 ) goto label$5857;
 {
  uint64 vr$16 = _ZN9_FLOAT128cvyEv( N$1 );
  fb$result$1 = (double)vr$16;
  goto label$5855;
 }
 goto label$5856;
 label$5857:;
 {
  struct $9_FLOAT128 TMP$2974$2;
  struct $9_FLOAT128* vr$19 = _ZngR9_FLOAT128( &TMP$2974$2, N$1 );
  uint64 vr$20 = _ZN9_FLOAT128cvyEv( vr$19 );
  fb$result$1 = (double)vr$20;
  goto label$5855;
  label$5856:;
 }
 label$5855:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T13K_FACEFORWARDER9_FLOAT256S1_S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* N$1, struct $9_FLOAT256* I$1, struct $9_FLOAT256* NREF$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5858:;
 double D$1;
 D$1 = (((*(double*)I$1 * *(double*)NREF$1) + (*(double*)I$1 * *(double*)NREF$1)) + (*(double*)I$1 * *(double*)NREF$1)) + (*(double*)I$1 * *(double*)NREF$1);
 if( D$1 >= 0x0p+0 ) goto label$5861;
 {
  uint64 vr$16 = _ZN9_FLOAT256cvyEv( N$1 );
  fb$result$1 = (double)vr$16;
  goto label$5859;
 }
 goto label$5860;
 label$5861:;
 {
  struct $9_FLOAT256 TMP$2975$2;
  struct $9_FLOAT256* vr$19 = _ZngR9_FLOAT256( &TMP$2975$2, N$1 );
  uint64 vr$20 = _ZN9_FLOAT256cvyEv( vr$19 );
  fb$result$1 = (double)vr$20;
  goto label$5859;
  label$5860:;
 }
 label$5859:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T13K_FACEFORWARDER9_FLOAT512S1_S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* N$1, struct $9_FLOAT512* I$1, struct $9_FLOAT512* NREF$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5862:;
 double D$1;
 D$1 = (((*(double*)I$1 * *(double*)NREF$1) + (*(double*)I$1 * *(double*)NREF$1)) + (*(double*)I$1 * *(double*)NREF$1)) + (*(double*)I$1 * *(double*)NREF$1);
 if( D$1 >= 0x0p+0 ) goto label$5865;
 {
  uint64 vr$16 = _ZN9_FLOAT512cvyEv( N$1 );
  fb$result$1 = (double)vr$16;
  goto label$5863;
 }
 goto label$5864;
 label$5865:;
 {
  struct $9_FLOAT512 TMP$2976$2;
  struct $9_FLOAT512* vr$19 = _ZngR9_FLOAT512( &TMP$2976$2, N$1 );
  uint64 vr$20 = _ZN9_FLOAT512cvyEv( vr$19 );
  fb$result$1 = (double)vr$20;
  goto label$5863;
  label$5864:;
 }
 label$5863:;
 return fb$result$1;
}

struct $7VECTOR2* _ZN12SYSTEM_BUS_T13K_FACEFORWARDER7VECTOR2S1_S1_( struct $7VECTOR2* tmp$2977$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR2* N$1, struct $7VECTOR2* I$1, struct $7VECTOR2* NREF$1 )
{
 label$5866:;
 double D$1;
 D$1 = (*(double*)I$1 * *(double*)NREF$1) + (*(double*)((uint8*)I$1 + 8ll) * *(double*)((uint8*)NREF$1 + 8ll));
 if( D$1 >= 0x0p+0 ) goto label$5869;
 {
  _ZN7VECTOR2C1ERS_( tmp$2977$1, N$1 );
  goto label$5867;
 }
 goto label$5868;
 label$5869:;
 {
  struct $7VECTOR2 TMP$2978$2;
  struct $7VECTOR2* vr$8 = _ZngR7VECTOR2( &TMP$2978$2, N$1 );
  _ZN7VECTOR2C1ERS_( tmp$2977$1, vr$8 );
  goto label$5867;
  label$5868:;
 }
 label$5867:;
 return tmp$2977$1;
}

struct $7VECTOR3* _ZN12SYSTEM_BUS_T13K_FACEFORWARDER7VECTOR3S1_S1_( struct $7VECTOR3* tmp$2979$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* N$1, struct $7VECTOR3* I$1, struct $7VECTOR3* NREF$1 )
{
 label$5870:;
 double D$1;
 D$1 = ((*(double*)((uint8*)I$1 + 16ll) * *(double*)((uint8*)NREF$1 + 16ll)) + (*(double*)((uint8*)I$1 + 24ll) * *(double*)((uint8*)NREF$1 + 24ll))) + (*(double*)((uint8*)I$1 + 32ll) * *(double*)((uint8*)NREF$1 + 32ll));
 if( D$1 >= 0x0p+0 ) goto label$5873;
 {
  _ZN7VECTOR3C1ERS_( tmp$2979$1, N$1 );
  goto label$5871;
 }
 goto label$5872;
 label$5873:;
 {
  struct $7VECTOR3 TMP$2980$2;
  struct $7VECTOR3* vr$12 = _ZngR7VECTOR3( &TMP$2980$2, N$1 );
  _ZN7VECTOR3C1ERS_( tmp$2979$1, vr$12 );
  goto label$5871;
  label$5872:;
 }
 label$5871:;
 return tmp$2979$1;
}

struct $7VECTOR4* _ZN12SYSTEM_BUS_T13K_FACEFORWARDER7VECTOR4S1_S1_( struct $7VECTOR4* tmp$2981$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR4* N$1, struct $7VECTOR4* I$1, struct $7VECTOR4* NREF$1 )
{
 label$5874:;
 double D$1;
 D$1 = (((*(double*)((uint8*)I$1 + 40ll) * *(double*)((uint8*)NREF$1 + 40ll)) + (*(double*)((uint8*)I$1 + 48ll) * *(double*)((uint8*)NREF$1 + 48ll))) + (*(double*)((uint8*)I$1 + 56ll) * *(double*)((uint8*)NREF$1 + 56ll))) + (*(double*)((uint8*)I$1 + 64ll) * *(double*)((uint8*)NREF$1 + 64ll));
 if( D$1 >= 0x0p+0 ) goto label$5877;
 {
  _ZN7VECTOR4C1ERS_( tmp$2981$1, N$1 );
  goto label$5875;
 }
 goto label$5876;
 label$5877:;
 {
  struct $7VECTOR4 TMP$2982$2;
  struct $7VECTOR4* vr$16 = _ZngR7VECTOR4( &TMP$2982$2, N$1 );
  _ZN7VECTOR4C1ERS_( tmp$2981$1, vr$16 );
  goto label$5875;
  label$5876:;
 }
 label$5875:;
 return tmp$2981$1;
}

double _ZN12SYSTEM_BUS_T9K_REFLECTEhh( struct $12SYSTEM_BUS_T* THIS$1, uint8 I$1, uint8 N$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5878:;
 double D$1;
 D$1 = (double)(((int64)I$1 * (int64)N$1) << (1ll & 63ll));
 fb$result$1 = (double)(int64)I$1 - ((double)(int64)N$1 * D$1);
 goto label$5879;
 label$5879:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T9K_REFLECTEaa( struct $12SYSTEM_BUS_T* THIS$1, int8 I$1, int8 N$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5880:;
 double D$1;
 D$1 = (double)(((int64)I$1 * (int64)N$1) << (1ll & 63ll));
 fb$result$1 = (double)(int64)I$1 - ((double)(int64)N$1 * D$1);
 goto label$5881;
 label$5881:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T9K_REFLECTEtt( struct $12SYSTEM_BUS_T* THIS$1, uint16 I$1, uint16 N$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5882:;
 double D$1;
 D$1 = (double)(((int64)I$1 * (int64)N$1) << (1ll & 63ll));
 fb$result$1 = (double)(int64)I$1 - ((double)(int64)N$1 * D$1);
 goto label$5883;
 label$5883:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T9K_REFLECTEss( struct $12SYSTEM_BUS_T* THIS$1, int16 I$1, int16 N$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5884:;
 double D$1;
 D$1 = (double)(((int64)I$1 * (int64)N$1) << (1ll & 63ll));
 fb$result$1 = (double)(int64)I$1 - ((double)(int64)N$1 * D$1);
 goto label$5885;
 label$5885:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T9K_REFLECTEjj( struct $12SYSTEM_BUS_T* THIS$1, uint32 I$1, uint32 N$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5886:;
 double D$1;
 D$1 = (double)(((int64)I$1 * (int64)N$1) << (1ll & 63ll));
 fb$result$1 = (double)(int64)I$1 - ((double)(int64)N$1 * D$1);
 goto label$5887;
 label$5887:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T9K_REFLECTEii( struct $12SYSTEM_BUS_T* THIS$1, int32 I$1, int32 N$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5888:;
 double D$1;
 D$1 = (double)(((int64)I$1 * (int64)N$1) << (1ll & 63ll));
 fb$result$1 = (double)(int64)I$1 - ((double)(int64)N$1 * D$1);
 goto label$5889;
 label$5889:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T9K_REFLECTEyy( struct $12SYSTEM_BUS_T* THIS$1, uint64 I$1, uint64 N$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5890:;
 double D$1;
 D$1 = (double)((I$1 * N$1) << (1ull & 63ll));
 fb$result$1 = (double)I$1 - ((double)N$1 * D$1);
 goto label$5891;
 label$5891:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T9K_REFLECTExx( struct $12SYSTEM_BUS_T* THIS$1, int64 I$1, int64 N$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5892:;
 double D$1;
 D$1 = (double)((I$1 * N$1) << (1ll & 63ll));
 fb$result$1 = (double)I$1 - ((double)N$1 * D$1);
 goto label$5893;
 label$5893:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T9K_REFLECTEff( struct $12SYSTEM_BUS_T* THIS$1, float I$1, float N$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5894:;
 double D$1;
 D$1 = (double)((I$1 * N$1) * 0x1.p+1f);
 fb$result$1 = (double)I$1 - ((double)N$1 * D$1);
 goto label$5895;
 label$5895:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T9K_REFLECTEdd( struct $12SYSTEM_BUS_T* THIS$1, double I$1, double N$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5896:;
 double D$1;
 D$1 = (I$1 * N$1) * 0x1.p+1;
 fb$result$1 = I$1 - (N$1 * D$1);
 goto label$5897;
 label$5897:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T9K_REFLECTER9_FLOAT128S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* I$1, struct $9_FLOAT128* N$1 )
{
 struct $9_FLOAT128 TMP$2983$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5898:;
 double D$1;
 D$1 = ((((*(double*)I$1 * *(double*)N$1) + (*(double*)((uint8*)I$1 + 8ll) * *(double*)((uint8*)N$1 + 8ll))) + (*(double*)I$1 * *(double*)N$1)) + (*(double*)((uint8*)I$1 + 8ll) * *(double*)((uint8*)N$1 + 8ll))) * 0x1.p+1;
 _ZN9_FLOAT128C1Edddd( &TMP$2983$1, *(double*)I$1 - (*(double*)N$1 * D$1), *(double*)((uint8*)I$1 + 8ll) - (*(double*)((uint8*)N$1 + 8ll) * D$1), *(double*)I$1 - (*(double*)N$1 * D$1), *(double*)((uint8*)I$1 + 8ll) - (*(double*)((uint8*)N$1 + 8ll) * D$1) );
 uint64 vr$35 = _ZN9_FLOAT128cvyEv( &TMP$2983$1 );
 fb$result$1 = (double)vr$35;
 goto label$5899;
 label$5899:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T9K_REFLECTER9_FLOAT256S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* I$1, struct $9_FLOAT256* N$1 )
{
 struct $9_FLOAT256 TMP$2984$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5900:;
 double D$1;
 D$1 = ((((*(double*)I$1 * *(double*)N$1) + (*(double*)I$1 * *(double*)N$1)) + (*(double*)I$1 * *(double*)N$1)) + (*(double*)I$1 * *(double*)N$1)) * 0x1.p+1;
 _ZN9_FLOAT256C1Edddd( &TMP$2984$1, *(double*)I$1 - (*(double*)N$1 * D$1), *(double*)I$1 - (*(double*)N$1 * D$1), *(double*)I$1 - (*(double*)N$1 * D$1), *(double*)I$1 - (*(double*)N$1 * D$1) );
 uint64 vr$35 = _ZN9_FLOAT256cvyEv( &TMP$2984$1 );
 fb$result$1 = (double)vr$35;
 goto label$5901;
 label$5901:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T9K_REFLECTER9_FLOAT512S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* I$1, struct $9_FLOAT512* N$1 )
{
 struct $9_FLOAT512 TMP$2985$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5902:;
 double D$1;
 D$1 = ((((*(double*)I$1 * *(double*)N$1) + (*(double*)I$1 * *(double*)N$1)) + (*(double*)I$1 * *(double*)N$1)) + (*(double*)I$1 * *(double*)N$1)) * 0x1.p+1;
 _ZN9_FLOAT512C1Edddd( &TMP$2985$1, *(double*)I$1 - (*(double*)N$1 * D$1), *(double*)I$1 - (*(double*)N$1 * D$1), *(double*)I$1 - (*(double*)N$1 * D$1), *(double*)I$1 - (*(double*)N$1 * D$1) );
 uint64 vr$35 = _ZN9_FLOAT512cvyEv( &TMP$2985$1 );
 fb$result$1 = (double)vr$35;
 goto label$5903;
 label$5903:;
 return fb$result$1;
}

struct $7VECTOR2* _ZN12SYSTEM_BUS_T9K_REFLECTER7VECTOR2S1_( struct $7VECTOR2* tmp$2986$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR2* I$1, struct $7VECTOR2* N$1 )
{
 label$5904:;
 double D$1;
 D$1 = ((*(double*)I$1 * *(double*)N$1) + (*(double*)((uint8*)I$1 + 8ll) * *(double*)((uint8*)N$1 + 8ll))) * 0x1.p+1;
 _ZN7VECTOR2C1Edd( tmp$2986$1, *(double*)I$1 - (*(double*)N$1 * D$1), *(double*)((uint8*)I$1 + 8ll) - (*(double*)((uint8*)N$1 + 8ll) * D$1) );
 goto label$5905;
 label$5905:;
 return tmp$2986$1;
}

struct $7VECTOR3* _ZN12SYSTEM_BUS_T9K_REFLECTER7VECTOR3S1_( struct $7VECTOR3* tmp$2988$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* I$1, struct $7VECTOR3* N$1 )
{
 label$5906:;
 double D$1;
 D$1 = (((*(double*)((uint8*)I$1 + 16ll) * *(double*)((uint8*)N$1 + 16ll)) + (*(double*)((uint8*)I$1 + 24ll) * *(double*)((uint8*)N$1 + 24ll))) + (*(double*)((uint8*)I$1 + 32ll) * *(double*)((uint8*)N$1 + 32ll))) * 0x1.p+1;
 _ZN7VECTOR3C1Eddd( tmp$2988$1, *(double*)((uint8*)I$1 + 16ll) - (*(double*)((uint8*)N$1 + 16ll) * D$1), *(double*)((uint8*)I$1 + 24ll) - (*(double*)((uint8*)N$1 + 24ll) * D$1), *(double*)((uint8*)I$1 + 32ll) - (*(double*)((uint8*)N$1 + 32ll) * D$1) );
 goto label$5907;
 label$5907:;
 return tmp$2988$1;
}

struct $7VECTOR4* _ZN12SYSTEM_BUS_T9K_REFLECTER7VECTOR4S1_( struct $7VECTOR4* tmp$2990$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR4* I$1, struct $7VECTOR4* N$1 )
{
 label$5908:;
 double D$1;
 D$1 = ((((*(double*)((uint8*)I$1 + 40ll) * *(double*)((uint8*)N$1 + 40ll)) + (*(double*)((uint8*)I$1 + 48ll) * *(double*)((uint8*)N$1 + 48ll))) + (*(double*)((uint8*)I$1 + 56ll) * *(double*)((uint8*)N$1 + 56ll))) + (*(double*)((uint8*)I$1 + 64ll) * *(double*)((uint8*)N$1 + 64ll))) * 0x1.p+1;
 _ZN7VECTOR4C1Edddd( tmp$2990$1, *(double*)((uint8*)I$1 + 40ll) - (*(double*)((uint8*)N$1 + 40ll) * D$1), *(double*)((uint8*)I$1 + 48ll) - (*(double*)((uint8*)N$1 + 48ll) * D$1), *(double*)((uint8*)I$1 + 56ll) - (*(double*)((uint8*)N$1 + 56ll) * D$1), *(double*)((uint8*)I$1 + 64ll) - (*(double*)((uint8*)N$1 + 64ll) * D$1) );
 goto label$5909;
 label$5909:;
 return tmp$2990$1;
}

struct $7VECTOR2* _ZN12SYSTEM_BUS_T9K_REFRACTER7VECTOR2S1_d( struct $7VECTOR2* tmp$2992$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR2* I$1, struct $7VECTOR2* N$1, double ETA$1 )
{
 label$5910:;
 struct $7VECTOR2 R$1;
 _ZN7VECTOR2C1Ev( &R$1 );
 double DOTNI$1;
 DOTNI$1 = (*(double*)I$1 * *(double*)N$1) + (*(double*)((uint8*)I$1 + 8ll) * *(double*)((uint8*)N$1 + 8ll));
 double K$1;
 K$1 = -((ETA$1 * ETA$1) * (-(DOTNI$1 * DOTNI$1) + 0x1.p+0)) + 0x1.p+0;
 if( K$1 >= 0x0p+0 ) goto label$5913;
 {
  _ZN7VECTOR2C1ERS_( tmp$2992$1, &R$1 );
  goto label$5911;
 }
 goto label$5912;
 label$5913:;
 if( K$1 != 0x0p+0 ) goto label$5914;
 {
  struct $7VECTOR2 TMP$2993$2;
  struct $7VECTOR2 TMP$2994$2;
  double TMP$2995$2;
  struct $7VECTOR2 TMP$2996$2;
  TMP$2995$2 = ETA$1 * DOTNI$1;
  struct $7VECTOR2* vr$19 = _ZmlRdR7VECTOR2( &TMP$2994$2, &TMP$2995$2, N$1 );
  struct $7VECTOR2* vr$22 = _ZmlRdR7VECTOR2( &TMP$2993$2, &ETA$1, I$1 );
  struct $7VECTOR2* vr$24 = _ZmiR7VECTOR2S0_( &TMP$2996$2, vr$22, vr$19 );
  _ZN7VECTOR2aSERS_( &R$1, vr$24 );
 }
 goto label$5912;
 label$5914:;
 {
  struct $7VECTOR2 TMP$2997$2;
  struct $7VECTOR2 TMP$2998$2;
  double TMP$2999$2;
  struct $7VECTOR2 TMP$3000$2;
  double vr$26 = _ZN12SYSTEM_BUS_T6K_SQRTEd( THIS$1, K$1 );
  K$1 = vr$26;
  TMP$2999$2 = (ETA$1 * DOTNI$1) + K$1;
  struct $7VECTOR2* vr$31 = _ZmlRdR7VECTOR2( &TMP$2998$2, &TMP$2999$2, N$1 );
  struct $7VECTOR2* vr$34 = _ZmlRdR7VECTOR2( &TMP$2997$2, &ETA$1, I$1 );
  struct $7VECTOR2* vr$36 = _ZmiR7VECTOR2S0_( &TMP$3000$2, vr$34, vr$31 );
  _ZN7VECTOR2aSERS_( &R$1, vr$36 );
 }
 label$5912:;
 _ZN7VECTOR2C1ERS_( tmp$2992$1, &R$1 );
 goto label$5911;
 label$5911:;
 return tmp$2992$1;
}

struct $7VECTOR3* _ZN12SYSTEM_BUS_T9K_REFRACTER7VECTOR3S1_d( struct $7VECTOR3* tmp$3001$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* I$1, struct $7VECTOR3* N$1, double ETA$1 )
{
 label$5915:;
 struct $7VECTOR3 R$1;
 _ZN7VECTOR3C1Ev( &R$1 );
 double DOTNI$1;
 DOTNI$1 = ((*(double*)((uint8*)I$1 + 16ll) * *(double*)((uint8*)N$1 + 16ll)) + (*(double*)((uint8*)I$1 + 24ll) * *(double*)((uint8*)N$1 + 24ll))) + (*(double*)((uint8*)I$1 + 32ll) * *(double*)((uint8*)N$1 + 32ll));
 double K$1;
 K$1 = -((ETA$1 * ETA$1) * (-(DOTNI$1 * DOTNI$1) + 0x1.p+0)) + 0x1.p+0;
 if( K$1 >= 0x0p+0 ) goto label$5918;
 {
  _ZN7VECTOR3C1ERS_( tmp$3001$1, &R$1 );
  goto label$5916;
 }
 goto label$5917;
 label$5918:;
 if( K$1 != 0x0p+0 ) goto label$5919;
 {
  struct $7VECTOR3 TMP$3002$2;
  struct $7VECTOR3 TMP$3003$2;
  struct $7VECTOR3 TMP$3004$2;
  struct $7VECTOR3* vr$22 = _ZmldR7VECTOR3( &TMP$3003$2, ETA$1 * DOTNI$1, N$1 );
  struct $7VECTOR3* vr$24 = _ZmldR7VECTOR3( &TMP$3002$2, ETA$1, I$1 );
  struct $7VECTOR3* vr$26 = _ZmiR7VECTOR3S0_( &TMP$3004$2, vr$24, vr$22 );
  _ZN7VECTOR3aSERS_( &R$1, vr$26 );
 }
 goto label$5917;
 label$5919:;
 {
  struct $7VECTOR3 TMP$3005$2;
  struct $7VECTOR3 TMP$3006$2;
  struct $7VECTOR3 TMP$3007$2;
  double vr$28 = _ZN12SYSTEM_BUS_T6K_SQRTEd( THIS$1, K$1 );
  K$1 = vr$28;
  struct $7VECTOR3* vr$32 = _ZmldR7VECTOR3( &TMP$3006$2, (ETA$1 * DOTNI$1) + K$1, N$1 );
  struct $7VECTOR3* vr$34 = _ZmldR7VECTOR3( &TMP$3005$2, ETA$1, I$1 );
  struct $7VECTOR3* vr$36 = _ZmiR7VECTOR3S0_( &TMP$3007$2, vr$34, vr$32 );
  _ZN7VECTOR3aSERS_( &R$1, vr$36 );
 }
 label$5917:;
 _ZN7VECTOR3C1ERS_( tmp$3001$1, &R$1 );
 goto label$5916;
 label$5916:;
 return tmp$3001$1;
}

struct $7VECTOR4* _ZN12SYSTEM_BUS_T9K_REFRACTER7VECTOR4S1_d( struct $7VECTOR4* tmp$3008$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR4* I$1, struct $7VECTOR4* N$1, double ETA$1 )
{
 label$5920:;
 struct $7VECTOR4 R$1;
 _ZN7VECTOR4C1Ev( &R$1 );
 double DOTNI$1;
 DOTNI$1 = (((*(double*)((uint8*)I$1 + 40ll) * *(double*)((uint8*)N$1 + 40ll)) + (*(double*)((uint8*)I$1 + 48ll) * *(double*)((uint8*)N$1 + 48ll))) + (*(double*)((uint8*)I$1 + 56ll) * *(double*)((uint8*)N$1 + 56ll))) + (*(double*)((uint8*)I$1 + 64ll) * *(double*)((uint8*)N$1 + 64ll));
 double K$1;
 K$1 = -((ETA$1 * ETA$1) * (-(DOTNI$1 * DOTNI$1) + 0x1.p+0)) + 0x1.p+0;
 if( K$1 >= 0x0p+0 ) goto label$5923;
 {
  _ZN7VECTOR4C1ERS_( tmp$3008$1, &R$1 );
  goto label$5921;
 }
 goto label$5922;
 label$5923:;
 if( K$1 != 0x0p+0 ) goto label$5924;
 {
  struct $7VECTOR4 TMP$3009$2;
  struct $7VECTOR4 TMP$3010$2;
  struct $7VECTOR4 TMP$3011$2;
  struct $7VECTOR4* vr$26 = _ZmldR7VECTOR4( &TMP$3010$2, ETA$1 * DOTNI$1, N$1 );
  struct $7VECTOR4* vr$28 = _ZmldR7VECTOR4( &TMP$3009$2, ETA$1, I$1 );
  struct $7VECTOR4* vr$30 = _ZmiR7VECTOR4S0_( &TMP$3011$2, vr$28, vr$26 );
  _ZN7VECTOR4aSERS_( &R$1, vr$30 );
 }
 goto label$5922;
 label$5924:;
 {
  struct $7VECTOR4 TMP$3012$2;
  struct $7VECTOR4 TMP$3013$2;
  struct $7VECTOR4 TMP$3014$2;
  double vr$32 = _ZN12SYSTEM_BUS_T6K_SQRTEd( THIS$1, K$1 );
  K$1 = vr$32;
  struct $7VECTOR4* vr$36 = _ZmldR7VECTOR4( &TMP$3013$2, (ETA$1 * DOTNI$1) + K$1, N$1 );
  struct $7VECTOR4* vr$38 = _ZmldR7VECTOR4( &TMP$3012$2, ETA$1, I$1 );
  struct $7VECTOR4* vr$40 = _ZmiR7VECTOR4S0_( &TMP$3014$2, vr$38, vr$36 );
  _ZN7VECTOR4aSERS_( &R$1, vr$40 );
 }
 label$5922:;
 _ZN7VECTOR4C1ERS_( tmp$3008$1, &R$1 );
 goto label$5921;
 label$5921:;
 return tmp$3008$1;
}

double _ZN12SYSTEM_BUS_T10SCREENCODEEd( struct $12SYSTEM_BUS_T* THIS$1, double CODE$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5925:;
 {
  FBSTRING TMP$3015$2;
  FBSTRING* vr$2 = fb_CHR( 1, ((int64)__builtin_nearbyint( CODE$1 )) );
  fb_StrInit( (void*)&TMP$3015$2, -1ll, (void*)vr$2, -1ll, 0 );
  int32 vr$5 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)" ", 2ll );
  if( (int64)vr$5 != 0ll ) goto label$5928;
  label$5929:;
  {
   fb$result$1 = 0x1.p+5;
  }
  goto label$5927;
  label$5928:;
  int32 vr$8 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"!", 2ll );
  if( (int64)vr$8 != 0ll ) goto label$5930;
  label$5931:;
  {
   fb$result$1 = 0x1.08p+5;
  }
  goto label$5927;
  label$5930:;
  int32 vr$11 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"\x16", 2ll );
  if( (int64)vr$11 != 0ll ) goto label$5932;
  label$5933:;
  {
   fb$result$1 = 0x1.1p+5;
  }
  goto label$5927;
  label$5932:;
  int32 vr$14 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"#", 2ll );
  if( (int64)vr$14 != 0ll ) goto label$5934;
  label$5935:;
  {
   fb$result$1 = 0x1.18p+5;
  }
  goto label$5927;
  label$5934:;
  int32 vr$17 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"$", 2ll );
  if( (int64)vr$17 != 0ll ) goto label$5936;
  label$5937:;
  {
   fb$result$1 = 0x1.2p+5;
  }
  goto label$5927;
  label$5936:;
  int32 vr$20 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"%", 2ll );
  if( (int64)vr$20 != 0ll ) goto label$5938;
  label$5939:;
  {
   fb$result$1 = 0x1.28p+5;
  }
  goto label$5927;
  label$5938:;
  int32 vr$23 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"&", 2ll );
  if( (int64)vr$23 != 0ll ) goto label$5940;
  label$5941:;
  {
   fb$result$1 = 0x1.3p+5;
  }
  goto label$5927;
  label$5940:;
  int32 vr$26 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"'", 2ll );
  if( (int64)vr$26 != 0ll ) goto label$5942;
  label$5943:;
  {
   fb$result$1 = 0x1.38p+5;
  }
  goto label$5927;
  label$5942:;
  int32 vr$29 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"(", 2ll );
  if( (int64)vr$29 != 0ll ) goto label$5944;
  label$5945:;
  {
   fb$result$1 = 0x1.4p+5;
  }
  goto label$5927;
  label$5944:;
  int32 vr$32 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)")", 2ll );
  if( (int64)vr$32 != 0ll ) goto label$5946;
  label$5947:;
  {
   fb$result$1 = 0x1.48p+5;
  }
  goto label$5927;
  label$5946:;
  int32 vr$35 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"*", 2ll );
  if( (int64)vr$35 != 0ll ) goto label$5948;
  label$5949:;
  {
   fb$result$1 = 0x1.5p+5;
  }
  goto label$5927;
  label$5948:;
  int32 vr$38 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"+", 2ll );
  if( (int64)vr$38 != 0ll ) goto label$5950;
  label$5951:;
  {
   fb$result$1 = 0x1.58p+5;
  }
  goto label$5927;
  label$5950:;
  int32 vr$41 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)",", 2ll );
  if( (int64)vr$41 != 0ll ) goto label$5952;
  label$5953:;
  {
   fb$result$1 = 0x1.6p+5;
  }
  goto label$5927;
  label$5952:;
  int32 vr$44 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"-", 2ll );
  if( (int64)vr$44 != 0ll ) goto label$5954;
  label$5955:;
  {
   fb$result$1 = 0x1.68p+5;
  }
  goto label$5927;
  label$5954:;
  int32 vr$47 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)".", 2ll );
  if( (int64)vr$47 != 0ll ) goto label$5956;
  label$5957:;
  {
   fb$result$1 = 0x1.7p+5;
  }
  goto label$5927;
  label$5956:;
  int32 vr$50 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"/", 2ll );
  if( (int64)vr$50 != 0ll ) goto label$5958;
  label$5959:;
  {
   fb$result$1 = 0x1.78p+5;
  }
  goto label$5927;
  label$5958:;
  int32 vr$53 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"0", 2ll );
  if( (int64)vr$53 != 0ll ) goto label$5960;
  label$5961:;
  {
   fb$result$1 = 0x1.8p+5;
  }
  goto label$5927;
  label$5960:;
  int32 vr$56 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"1", 2ll );
  if( (int64)vr$56 != 0ll ) goto label$5962;
  label$5963:;
  {
   fb$result$1 = 0x1.88p+5;
  }
  goto label$5927;
  label$5962:;
  int32 vr$59 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"2", 2ll );
  if( (int64)vr$59 != 0ll ) goto label$5964;
  label$5965:;
  {
   fb$result$1 = 0x1.9p+5;
  }
  goto label$5927;
  label$5964:;
  int32 vr$62 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"3", 2ll );
  if( (int64)vr$62 != 0ll ) goto label$5966;
  label$5967:;
  {
   fb$result$1 = 0x1.98p+5;
  }
  goto label$5927;
  label$5966:;
  int32 vr$65 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"4", 2ll );
  if( (int64)vr$65 != 0ll ) goto label$5968;
  label$5969:;
  {
   fb$result$1 = 0x1.Ap+5;
  }
  goto label$5927;
  label$5968:;
  int32 vr$68 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"5", 2ll );
  if( (int64)vr$68 != 0ll ) goto label$5970;
  label$5971:;
  {
   fb$result$1 = 0x1.A8p+5;
  }
  goto label$5927;
  label$5970:;
  int32 vr$71 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"6", 2ll );
  if( (int64)vr$71 != 0ll ) goto label$5972;
  label$5973:;
  {
   fb$result$1 = 0x1.Bp+5;
  }
  goto label$5927;
  label$5972:;
  int32 vr$74 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"7", 2ll );
  if( (int64)vr$74 != 0ll ) goto label$5974;
  label$5975:;
  {
   fb$result$1 = 0x1.B8p+5;
  }
  goto label$5927;
  label$5974:;
  int32 vr$77 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"8", 2ll );
  if( (int64)vr$77 != 0ll ) goto label$5976;
  label$5977:;
  {
   fb$result$1 = 0x1.Cp+5;
  }
  goto label$5927;
  label$5976:;
  int32 vr$80 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"9", 2ll );
  if( (int64)vr$80 != 0ll ) goto label$5978;
  label$5979:;
  {
   fb$result$1 = 0x1.C8p+5;
  }
  goto label$5927;
  label$5978:;
  int32 vr$83 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)":", 2ll );
  if( (int64)vr$83 != 0ll ) goto label$5980;
  label$5981:;
  {
   fb$result$1 = 0x1.Dp+5;
  }
  goto label$5927;
  label$5980:;
  int32 vr$86 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)";", 2ll );
  if( (int64)vr$86 != 0ll ) goto label$5982;
  label$5983:;
  {
   fb$result$1 = 0x1.D8p+5;
  }
  goto label$5927;
  label$5982:;
  int32 vr$89 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"<", 2ll );
  if( (int64)vr$89 != 0ll ) goto label$5984;
  label$5985:;
  {
   fb$result$1 = 0x1.Ep+5;
  }
  goto label$5927;
  label$5984:;
  int32 vr$92 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"=", 2ll );
  if( (int64)vr$92 != 0ll ) goto label$5986;
  label$5987:;
  {
   fb$result$1 = 0x1.E8p+5;
  }
  goto label$5927;
  label$5986:;
  int32 vr$95 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)">", 2ll );
  if( (int64)vr$95 != 0ll ) goto label$5988;
  label$5989:;
  {
   fb$result$1 = 0x1.Fp+5;
  }
  goto label$5927;
  label$5988:;
  int32 vr$98 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"?", 2ll );
  if( (int64)vr$98 != 0ll ) goto label$5990;
  label$5991:;
  {
   fb$result$1 = 0x1.F8p+5;
  }
  goto label$5927;
  label$5990:;
  int32 vr$101 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"@", 2ll );
  if( (int64)vr$101 != 0ll ) goto label$5992;
  label$5993:;
  {
   fb$result$1 = 0x0p+0;
  }
  goto label$5927;
  label$5992:;
  int32 vr$104 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"A", 2ll );
  if( (int64)vr$104 != 0ll ) goto label$5994;
  label$5995:;
  {
   fb$result$1 = 0x1.p+0;
  }
  goto label$5927;
  label$5994:;
  int32 vr$107 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"B", 2ll );
  if( (int64)vr$107 != 0ll ) goto label$5996;
  label$5997:;
  {
   fb$result$1 = 0x1.p+1;
  }
  goto label$5927;
  label$5996:;
  int32 vr$110 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"C", 2ll );
  if( (int64)vr$110 != 0ll ) goto label$5998;
  label$5999:;
  {
   fb$result$1 = 0x1.8p+1;
  }
  goto label$5927;
  label$5998:;
  int32 vr$113 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"D", 2ll );
  if( (int64)vr$113 != 0ll ) goto label$6000;
  label$6001:;
  {
   fb$result$1 = 0x1.p+2;
  }
  goto label$5927;
  label$6000:;
  int32 vr$116 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"E", 2ll );
  if( (int64)vr$116 != 0ll ) goto label$6002;
  label$6003:;
  {
   fb$result$1 = 0x1.4p+2;
  }
  goto label$5927;
  label$6002:;
  int32 vr$119 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"F", 2ll );
  if( (int64)vr$119 != 0ll ) goto label$6004;
  label$6005:;
  {
   fb$result$1 = 0x1.8p+2;
  }
  goto label$5927;
  label$6004:;
  int32 vr$122 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"G", 2ll );
  if( (int64)vr$122 != 0ll ) goto label$6006;
  label$6007:;
  {
   fb$result$1 = 0x1.Cp+2;
  }
  goto label$5927;
  label$6006:;
  int32 vr$125 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"H", 2ll );
  if( (int64)vr$125 != 0ll ) goto label$6008;
  label$6009:;
  {
   fb$result$1 = 0x1.p+3;
  }
  goto label$5927;
  label$6008:;
  int32 vr$128 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"I", 2ll );
  if( (int64)vr$128 != 0ll ) goto label$6010;
  label$6011:;
  {
   fb$result$1 = 0x1.2p+3;
  }
  goto label$5927;
  label$6010:;
  int32 vr$131 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"J", 2ll );
  if( (int64)vr$131 != 0ll ) goto label$6012;
  label$6013:;
  {
   fb$result$1 = 0x1.4p+3;
  }
  goto label$5927;
  label$6012:;
  int32 vr$134 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"K", 2ll );
  if( (int64)vr$134 != 0ll ) goto label$6014;
  label$6015:;
  {
   fb$result$1 = 0x1.6p+3;
  }
  goto label$5927;
  label$6014:;
  int32 vr$137 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"L", 2ll );
  if( (int64)vr$137 != 0ll ) goto label$6016;
  label$6017:;
  {
   fb$result$1 = 0x1.8p+3;
  }
  goto label$5927;
  label$6016:;
  int32 vr$140 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"M", 2ll );
  if( (int64)vr$140 != 0ll ) goto label$6018;
  label$6019:;
  {
   fb$result$1 = 0x1.Ap+3;
  }
  goto label$5927;
  label$6018:;
  int32 vr$143 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"N", 2ll );
  if( (int64)vr$143 != 0ll ) goto label$6020;
  label$6021:;
  {
   fb$result$1 = 0x1.Cp+3;
  }
  goto label$5927;
  label$6020:;
  int32 vr$146 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"O", 2ll );
  if( (int64)vr$146 != 0ll ) goto label$6022;
  label$6023:;
  {
   fb$result$1 = 0x1.Ep+3;
  }
  goto label$5927;
  label$6022:;
  int32 vr$149 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"P", 2ll );
  if( (int64)vr$149 != 0ll ) goto label$6024;
  label$6025:;
  {
   fb$result$1 = 0x1.p+4;
  }
  goto label$5927;
  label$6024:;
  int32 vr$152 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"Q", 2ll );
  if( (int64)vr$152 != 0ll ) goto label$6026;
  label$6027:;
  {
   fb$result$1 = 0x1.1p+4;
  }
  goto label$5927;
  label$6026:;
  int32 vr$155 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"R", 2ll );
  if( (int64)vr$155 != 0ll ) goto label$6028;
  label$6029:;
  {
   fb$result$1 = 0x1.2p+4;
  }
  goto label$5927;
  label$6028:;
  int32 vr$158 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"S", 2ll );
  if( (int64)vr$158 != 0ll ) goto label$6030;
  label$6031:;
  {
   fb$result$1 = 0x1.3p+4;
  }
  goto label$5927;
  label$6030:;
  int32 vr$161 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"T", 2ll );
  if( (int64)vr$161 != 0ll ) goto label$6032;
  label$6033:;
  {
   fb$result$1 = 0x1.4p+4;
  }
  goto label$5927;
  label$6032:;
  int32 vr$164 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"U", 2ll );
  if( (int64)vr$164 != 0ll ) goto label$6034;
  label$6035:;
  {
   fb$result$1 = 0x1.5p+4;
  }
  goto label$5927;
  label$6034:;
  int32 vr$167 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"V", 2ll );
  if( (int64)vr$167 != 0ll ) goto label$6036;
  label$6037:;
  {
   fb$result$1 = 0x1.6p+4;
  }
  goto label$5927;
  label$6036:;
  int32 vr$170 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"W", 2ll );
  if( (int64)vr$170 != 0ll ) goto label$6038;
  label$6039:;
  {
   fb$result$1 = 0x1.7p+4;
  }
  goto label$5927;
  label$6038:;
  int32 vr$173 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"X", 2ll );
  if( (int64)vr$173 != 0ll ) goto label$6040;
  label$6041:;
  {
   fb$result$1 = 0x1.8p+4;
  }
  goto label$5927;
  label$6040:;
  int32 vr$176 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"Y", 2ll );
  if( (int64)vr$176 != 0ll ) goto label$6042;
  label$6043:;
  {
   fb$result$1 = 0x1.9p+4;
  }
  goto label$5927;
  label$6042:;
  int32 vr$179 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"Z", 2ll );
  if( (int64)vr$179 != 0ll ) goto label$6044;
  label$6045:;
  {
   fb$result$1 = 0x1.Ap+4;
  }
  goto label$5927;
  label$6044:;
  int32 vr$182 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"[", 2ll );
  if( (int64)vr$182 != 0ll ) goto label$6046;
  label$6047:;
  {
   fb$result$1 = 0x1.Bp+4;
  }
  goto label$5927;
  label$6046:;
  int32 vr$185 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"\x5C", 2ll );
  if( (int64)vr$185 != 0ll ) goto label$6048;
  label$6049:;
  {
   fb$result$1 = 0x1.Cp+4;
  }
  goto label$5927;
  label$6048:;
  int32 vr$188 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"]", 2ll );
  if( (int64)vr$188 != 0ll ) goto label$6050;
  label$6051:;
  {
   fb$result$1 = 0x1.Dp+4;
  }
  goto label$5927;
  label$6050:;
  int32 vr$191 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"^", 2ll );
  if( (int64)vr$191 != 0ll ) goto label$6052;
  label$6053:;
  {
   fb$result$1 = 0x1.Ep+4;
  }
  goto label$5927;
  label$6052:;
  int32 vr$194 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"_", 2ll );
  if( (int64)vr$194 != 0ll ) goto label$6054;
  label$6055:;
  {
   fb$result$1 = 0x1.Fp+4;
  }
  goto label$5927;
  label$6054:;
  int32 vr$197 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"`", 2ll );
  if( (int64)vr$197 != 0ll ) goto label$6056;
  label$6057:;
  {
   fb$result$1 = 0x1.p+7;
  }
  goto label$5927;
  label$6056:;
  int32 vr$200 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"a", 2ll );
  if( (int64)vr$200 != 0ll ) goto label$6058;
  label$6059:;
  {
   fb$result$1 = 0x1.02p+7;
  }
  goto label$5927;
  label$6058:;
  int32 vr$203 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"b", 2ll );
  if( (int64)vr$203 != 0ll ) goto label$6060;
  label$6061:;
  {
   fb$result$1 = 0x1.04p+7;
  }
  goto label$5927;
  label$6060:;
  int32 vr$206 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"c", 2ll );
  if( (int64)vr$206 != 0ll ) goto label$6062;
  label$6063:;
  {
   fb$result$1 = 0x1.06p+7;
  }
  goto label$5927;
  label$6062:;
  int32 vr$209 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"d", 2ll );
  if( (int64)vr$209 != 0ll ) goto label$6064;
  label$6065:;
  {
   fb$result$1 = 0x1.08p+7;
  }
  goto label$5927;
  label$6064:;
  int32 vr$212 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"e", 2ll );
  if( (int64)vr$212 != 0ll ) goto label$6066;
  label$6067:;
  {
   fb$result$1 = 0x1.0Ap+7;
  }
  goto label$5927;
  label$6066:;
  int32 vr$215 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"f", 2ll );
  if( (int64)vr$215 != 0ll ) goto label$6068;
  label$6069:;
  {
   fb$result$1 = 0x1.0Cp+7;
  }
  goto label$5927;
  label$6068:;
  int32 vr$218 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"g", 2ll );
  if( (int64)vr$218 != 0ll ) goto label$6070;
  label$6071:;
  {
   fb$result$1 = 0x1.0Ep+7;
  }
  goto label$5927;
  label$6070:;
  int32 vr$221 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"h", 2ll );
  if( (int64)vr$221 != 0ll ) goto label$6072;
  label$6073:;
  {
   fb$result$1 = 0x1.1p+7;
  }
  goto label$5927;
  label$6072:;
  int32 vr$224 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"i", 2ll );
  if( (int64)vr$224 != 0ll ) goto label$6074;
  label$6075:;
  {
   fb$result$1 = 0x1.12p+7;
  }
  goto label$5927;
  label$6074:;
  int32 vr$227 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"j", 2ll );
  if( (int64)vr$227 != 0ll ) goto label$6076;
  label$6077:;
  {
   fb$result$1 = 0x1.14p+7;
  }
  goto label$5927;
  label$6076:;
  int32 vr$230 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"k", 2ll );
  if( (int64)vr$230 != 0ll ) goto label$6078;
  label$6079:;
  {
   fb$result$1 = 0x1.16p+7;
  }
  goto label$5927;
  label$6078:;
  int32 vr$233 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"l", 2ll );
  if( (int64)vr$233 != 0ll ) goto label$6080;
  label$6081:;
  {
   fb$result$1 = 0x1.18p+7;
  }
  goto label$5927;
  label$6080:;
  int32 vr$236 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"m", 2ll );
  if( (int64)vr$236 != 0ll ) goto label$6082;
  label$6083:;
  {
   fb$result$1 = 0x1.1Ap+7;
  }
  goto label$5927;
  label$6082:;
  int32 vr$239 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"n", 2ll );
  if( (int64)vr$239 != 0ll ) goto label$6084;
  label$6085:;
  {
   fb$result$1 = 0x1.1Cp+7;
  }
  goto label$5927;
  label$6084:;
  int32 vr$242 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"o", 2ll );
  if( (int64)vr$242 != 0ll ) goto label$6086;
  label$6087:;
  {
   fb$result$1 = 0x1.1Ep+7;
  }
  goto label$5927;
  label$6086:;
  int32 vr$245 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"p", 2ll );
  if( (int64)vr$245 != 0ll ) goto label$6088;
  label$6089:;
  {
   fb$result$1 = 0x1.2p+7;
  }
  goto label$5927;
  label$6088:;
  int32 vr$248 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"q", 2ll );
  if( (int64)vr$248 != 0ll ) goto label$6090;
  label$6091:;
  {
   fb$result$1 = 0x1.22p+7;
  }
  goto label$5927;
  label$6090:;
  int32 vr$251 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"r", 2ll );
  if( (int64)vr$251 != 0ll ) goto label$6092;
  label$6093:;
  {
   fb$result$1 = 0x1.24p+7;
  }
  goto label$5927;
  label$6092:;
  int32 vr$254 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"s", 2ll );
  if( (int64)vr$254 != 0ll ) goto label$6094;
  label$6095:;
  {
   fb$result$1 = 0x1.26p+7;
  }
  goto label$5927;
  label$6094:;
  int32 vr$257 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"t", 2ll );
  if( (int64)vr$257 != 0ll ) goto label$6096;
  label$6097:;
  {
   fb$result$1 = 0x1.28p+7;
  }
  goto label$5927;
  label$6096:;
  int32 vr$260 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"u", 2ll );
  if( (int64)vr$260 != 0ll ) goto label$6098;
  label$6099:;
  {
   fb$result$1 = 0x1.2Ap+7;
  }
  goto label$5927;
  label$6098:;
  int32 vr$263 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"v", 2ll );
  if( (int64)vr$263 != 0ll ) goto label$6100;
  label$6101:;
  {
   fb$result$1 = 0x1.2Cp+7;
  }
  goto label$5927;
  label$6100:;
  int32 vr$266 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"w", 2ll );
  if( (int64)vr$266 != 0ll ) goto label$6102;
  label$6103:;
  {
   fb$result$1 = 0x1.2Ep+7;
  }
  goto label$5927;
  label$6102:;
  int32 vr$269 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"x", 2ll );
  if( (int64)vr$269 != 0ll ) goto label$6104;
  label$6105:;
  {
   fb$result$1 = 0x1.3p+7;
  }
  goto label$5927;
  label$6104:;
  int32 vr$272 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"y", 2ll );
  if( (int64)vr$272 != 0ll ) goto label$6106;
  label$6107:;
  {
   fb$result$1 = 0x1.32p+7;
  }
  goto label$5927;
  label$6106:;
  int32 vr$275 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"z", 2ll );
  if( (int64)vr$275 != 0ll ) goto label$6108;
  label$6109:;
  {
   fb$result$1 = 0x1.34p+7;
  }
  goto label$5927;
  label$6108:;
  int32 vr$278 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"{", 2ll );
  if( (int64)vr$278 != 0ll ) goto label$6110;
  label$6111:;
  {
   fb$result$1 = 0x1.36p+7;
  }
  goto label$5927;
  label$6110:;
  int32 vr$281 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"|", 2ll );
  if( (int64)vr$281 != 0ll ) goto label$6112;
  label$6113:;
  {
   fb$result$1 = 0x1.38p+7;
  }
  goto label$5927;
  label$6112:;
  int32 vr$284 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"}", 2ll );
  if( (int64)vr$284 != 0ll ) goto label$6114;
  label$6115:;
  {
   fb$result$1 = 0x1.3Ap+7;
  }
  goto label$5927;
  label$6114:;
  int32 vr$287 = fb_StrCompare( (void*)&TMP$3015$2, -1ll, (void*)"~", 2ll );
  if( (int64)vr$287 != 0ll ) goto label$6116;
  label$6117:;
  {
   fb$result$1 = 0x1.3Cp+7;
  }
  label$6116:;
  label$5927:;
  fb_StrDelete( (FBSTRING*)&TMP$3015$2 );
 }
 label$5926:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5PEEKBEd( struct $12SYSTEM_BUS_T* THIS$1, double ADR$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6118:;
 fb$result$1 = *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( ADR$1 )) << (3ll & 63ll)));
 label$6119:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5PEEKWEd( struct $12SYSTEM_BUS_T* THIS$1, double ADR$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6120:;
 double vr$1 = _ZN12SYSTEM_BUS_T5PEEKBEd( THIS$1, ADR$1 );
 double vr$4 = _ZN12SYSTEM_BUS_T5PEEKBEd( THIS$1, ADR$1 + 0x1.p+0 );
 fb$result$1 = (double)(((int64)__builtin_nearbyint( vr$1 )) | (((int64)__builtin_nearbyint( vr$4 )) << (8ll & 63ll)));
 label$6121:;
 return fb$result$1;
}

void _ZN12SYSTEM_BUS_T5POKEBEdd( struct $12SYSTEM_BUS_T* THIS$1, double ADR$1, double V$1 )
{
 label$6122:;
 *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( ADR$1 )) << (3ll & 63ll))) = V$1;
 {
  if( ADR$1 != 0x1.p+0 ) goto label$6125;
  label$6126:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = V$1;
  }
  goto label$6124;
  label$6125:;
  if( ADR$1 != 0x1.p+1 ) goto label$6127;
  label$6128:;
  {
   *(double*)((int64)(double*)MEM64$ + 394896ll) = V$1;
  }
  goto label$6124;
  label$6127:;
  if( ADR$1 != 0x1.8p+1 ) goto label$6129;
  label$6130:;
  {
   *(double*)((int64)(double*)MEM64$ + 394904ll) = V$1;
  }
  goto label$6124;
  label$6129:;
  if( ADR$1 != 0x1.p+2 ) goto label$6131;
  label$6132:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = *(double*)((int64)(double*)MEM64$ + 394896ll);
  }
  goto label$6124;
  label$6131:;
  if( ADR$1 != 0x1.4p+2 ) goto label$6133;
  label$6134:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = *(double*)((int64)(double*)MEM64$ + 394904ll);
  }
  goto label$6124;
  label$6133:;
  if( ADR$1 != 0x1.8p+2 ) goto label$6135;
  label$6136:;
  {
   *(double*)((int64)(double*)MEM64$ + 394896ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$6124;
  label$6135:;
  if( ADR$1 != 0x1.Cp+2 ) goto label$6137;
  label$6138:;
  {
   *(double*)((int64)(double*)MEM64$ + 394896ll) = *(double*)((int64)(double*)MEM64$ + 394904ll);
  }
  goto label$6124;
  label$6137:;
  if( ADR$1 != 0x1.p+3 ) goto label$6139;
  label$6140:;
  {
   *(double*)((int64)(double*)MEM64$ + 394904ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$6124;
  label$6139:;
  if( ADR$1 != 0x1.2p+3 ) goto label$6141;
  label$6142:;
  {
   *(double*)((int64)(double*)MEM64$ + 394904ll) = *(double*)((int64)(double*)MEM64$ + 394896ll);
  }
  goto label$6124;
  label$6141:;
  if( ADR$1 != 0x1.4p+3 ) goto label$6143;
  label$6144:;
  {
   *(double*)((int64)(double*)MEM64$ + 395344ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$6124;
  label$6143:;
  if( ADR$1 != 0x1.6p+3 ) goto label$6145;
  label$6146:;
  {
   *(double*)((int64)(double*)MEM64$ + 395344ll) = *(double*)((int64)(double*)MEM64$ + 394896ll);
  }
  goto label$6124;
  label$6145:;
  if( ADR$1 != 0x1.8p+3 ) goto label$6147;
  label$6148:;
  {
   *(double*)((int64)(double*)MEM64$ + 395344ll) = *(double*)((int64)(double*)MEM64$ + 394904ll);
  }
  goto label$6124;
  label$6147:;
  if( ADR$1 != 0x1.Ap+3 ) goto label$6149;
  label$6150:;
  {
   *(double*)((int64)(double*)MEM64$ + 395400ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$6124;
  label$6149:;
  if( ADR$1 != 0x1.Cp+3 ) goto label$6151;
  label$6152:;
  {
   *(double*)((int64)(double*)MEM64$ + 395400ll) = *(double*)((int64)(double*)MEM64$ + 394896ll);
  }
  goto label$6124;
  label$6151:;
  if( ADR$1 != 0x1.Ep+3 ) goto label$6153;
  label$6154:;
  {
   *(double*)((int64)(double*)MEM64$ + 395400ll) = *(double*)((int64)(double*)MEM64$ + 394904ll);
  }
  goto label$6124;
  label$6153:;
  if( ADR$1 != 0x1.p+4 ) goto label$6155;
  label$6156:;
  {
   *(double*)((int64)(double*)MEM64$ + 395456ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$6124;
  label$6155:;
  if( ADR$1 != 0x1.1p+4 ) goto label$6157;
  label$6158:;
  {
   *(double*)((int64)(double*)MEM64$ + 395456ll) = *(double*)((int64)(double*)MEM64$ + 394896ll);
  }
  goto label$6124;
  label$6157:;
  if( ADR$1 != 0x1.2p+4 ) goto label$6159;
  label$6160:;
  {
   *(double*)((int64)(double*)MEM64$ + 395456ll) = *(double*)((int64)(double*)MEM64$ + 394904ll);
  }
  goto label$6124;
  label$6159:;
  if( ADR$1 != 0x1.3p+4 ) goto label$6161;
  label$6162:;
  {
   *(double*)((int64)(double*)MEM64$ + 395568ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$6124;
  label$6161:;
  if( ADR$1 != 0x1.4p+4 ) goto label$6163;
  label$6164:;
  {
   *(double*)((int64)(double*)MEM64$ + 395568ll) = *(double*)((int64)(double*)MEM64$ + 394896ll);
  }
  goto label$6124;
  label$6163:;
  if( ADR$1 != 0x1.5p+4 ) goto label$6165;
  label$6166:;
  {
   *(double*)((int64)(double*)MEM64$ + 395568ll) = *(double*)((int64)(double*)MEM64$ + 394904ll);
  }
  goto label$6124;
  label$6165:;
  if( ADR$1 != 0x1.6p+4 ) goto label$6167;
  label$6168:;
  {
   *(double*)((int64)(double*)MEM64$ + 393232ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$6124;
  label$6167:;
  if( ADR$1 != 0x1.7p+4 ) goto label$6169;
  label$6170:;
  {
   *(double*)((int64)(double*)MEM64$ + 393232ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$6124;
  label$6169:;
  if( ADR$1 != 0x1.8p+4 ) goto label$6171;
  label$6172:;
  {
   *(double*)((int64)(double*)MEM64$ + 393232ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$6124;
  label$6171:;
  if( ADR$1 != 0x1.9p+4 ) goto label$6173;
  label$6174:;
  {
   *(double*)((int64)(double*)MEM64$ + 393240ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$6124;
  label$6173:;
  if( ADR$1 != 0x1.Ap+4 ) goto label$6175;
  label$6176:;
  {
   *(double*)((int64)(double*)MEM64$ + 393240ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$6124;
  label$6175:;
  if( ADR$1 != 0x1.Bp+4 ) goto label$6177;
  label$6178:;
  {
   *(double*)((int64)(double*)MEM64$ + 393240ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$6124;
  label$6177:;
  if( ADR$1 != 0x1.Cp+4 ) goto label$6179;
  label$6180:;
  {
   *(double*)((int64)(double*)MEM64$ + 393248ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$6124;
  label$6179:;
  if( ADR$1 != 0x1.Dp+4 ) goto label$6181;
  label$6182:;
  {
   *(double*)((int64)(double*)MEM64$ + 393248ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$6124;
  label$6181:;
  if( ADR$1 != 0x1.Ep+4 ) goto label$6183;
  label$6184:;
  {
   *(double*)((int64)(double*)MEM64$ + 393248ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$6124;
  label$6183:;
  if( ADR$1 != 0x1.Fp+4 ) goto label$6185;
  label$6186:;
  {
   *(double*)((int64)(double*)MEM64$ + 393256ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$6124;
  label$6185:;
  if( ADR$1 != 0x1.p+5 ) goto label$6187;
  label$6188:;
  {
   *(double*)((int64)(double*)MEM64$ + 393256ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$6124;
  label$6187:;
  if( ADR$1 != 0x1.08p+5 ) goto label$6189;
  label$6190:;
  {
   *(double*)((int64)(double*)MEM64$ + 393256ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$6124;
  label$6189:;
  if( ADR$1 != 0x1.1p+5 ) goto label$6191;
  label$6192:;
  {
   *(double*)((int64)(double*)MEM64$ + 394840ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$6124;
  label$6191:;
  if( ADR$1 != 0x1.18p+5 ) goto label$6193;
  label$6194:;
  {
   *(double*)((int64)(double*)MEM64$ + 394864ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$6124;
  label$6193:;
  if( ADR$1 != 0x1.2p+5 ) goto label$6195;
  label$6196:;
  {
   *(double*)((int64)(double*)MEM64$ + 394848ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$6124;
  label$6195:;
  if( ADR$1 != 0x1.28p+5 ) goto label$6197;
  label$6198:;
  {
   *(double*)((int64)(double*)MEM64$ + 394872ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$6124;
  label$6197:;
  if( ADR$1 != 0x1.3p+5 ) goto label$6199;
  label$6200:;
  {
   *(double*)((int64)(double*)MEM64$ + 394856ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$6124;
  label$6199:;
  if( ADR$1 != 0x1.38p+5 ) goto label$6201;
  label$6202:;
  {
   *(double*)((int64)(double*)MEM64$ + 394880ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$6124;
  label$6201:;
  if( ADR$1 != 0x1.4p+5 ) goto label$6203;
  label$6204:;
  {
   *(double*)((int64)(double*)MEM64$ + 394824ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$6124;
  label$6203:;
  if( ADR$1 != 0x1.48p+5 ) goto label$6205;
  label$6206:;
  {
   *(double*)((int64)(double*)MEM64$ + 394832ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$6124;
  label$6205:;
  if( ADR$1 != 0x1.5p+5 ) goto label$6207;
  label$6208:;
  {
   CHAR_H$ = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$6124;
  label$6207:;
  if( ADR$1 != 0x1.58p+5 ) goto label$6209;
  label$6210:;
  {
   CHAR_W$ = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$6124;
  label$6209:;
  if( ADR$1 != 0x1.6p+5 ) goto label$6211;
  label$6212:;
  {
   CHAR_PTR$ = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$6124;
  label$6211:;
  if( ADR$1 != 0x1.68p+5 ) goto label$6213;
  label$6214:;
  {
   CHAR_BUFFER$ = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$6124;
  label$6213:;
  if( ADR$1 != 0x1.7p+5 ) goto label$6215;
  label$6216:;
  {
   BITMASK$ = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$6124;
  label$6215:;
  if( ADR$1 != 0x1.78p+5 ) goto label$6217;
  label$6218:;
  {
   PIXEL_SIZE$ = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$6124;
  label$6217:;
  if( ADR$1 != 0x1.8p+5 ) goto label$6219;
  label$6220:;
  {
   RADIUS$ = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$6124;
  label$6219:;
  if( ADR$1 != 0x1.88p+5 ) goto label$6221;
  label$6222:;
  {
   STRING_ADR$ = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$6124;
  label$6221:;
  if( ADR$1 != 0x1.9p+5 ) goto label$6223;
  label$6224:;
  {
   STRING_LEN$ = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$6124;
  label$6223:;
  if( ADR$1 != 0x1.98p+5 ) goto label$6225;
  label$6226:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = *(double*)((int64)(double*)MEM64$ + 394840ll);
  }
  goto label$6124;
  label$6225:;
  if( ADR$1 != 0x1.Ap+5 ) goto label$6227;
  label$6228:;
  {
   *(double*)((int64)(double*)MEM64$ + 394840ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$6124;
  label$6227:;
  if( ADR$1 != 0x1.A8p+5 ) goto label$6229;
  label$6230:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = *(double*)((int64)(double*)MEM64$ + 394848ll);
  }
  goto label$6124;
  label$6229:;
  if( ADR$1 != 0x1.Bp+5 ) goto label$6231;
  label$6232:;
  {
   *(double*)((int64)(double*)MEM64$ + 394848ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$6124;
  label$6231:;
  if( ADR$1 != 0x1.B8p+5 ) goto label$6233;
  label$6234:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = *(double*)((int64)(double*)MEM64$ + 394856ll);
  }
  goto label$6124;
  label$6233:;
  if( ADR$1 != 0x1.Cp+5 ) goto label$6235;
  label$6236:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = *(double*)((int64)(double*)MEM64$ + 394864ll);
  }
  goto label$6124;
  label$6235:;
  if( ADR$1 != 0x1.C8p+5 ) goto label$6237;
  label$6238:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = *(double*)((int64)(double*)MEM64$ + 394872ll);
  }
  goto label$6124;
  label$6237:;
  if( ADR$1 != 0x1.Dp+5 ) goto label$6239;
  label$6240:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = *(double*)((int64)(double*)MEM64$ + 394880ll);
  }
  goto label$6124;
  label$6239:;
  if( ADR$1 != 0x1.D8p+5 ) goto label$6241;
  label$6242:;
  {
   *(double*)((int64)(double*)MEM64$ + 394880ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$6124;
  label$6241:;
  if( ADR$1 != 0x1.Ep+5 ) goto label$6243;
  label$6244:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = *(double*)((int64)(double*)MEM64$ + 394872ll);
  }
  goto label$6124;
  label$6243:;
  if( ADR$1 != 0x1.E8p+5 ) goto label$6245;
  label$6246:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = *(double*)((int64)(double*)MEM64$ + 394880ll);
  }
  goto label$6124;
  label$6245:;
  if( ADR$1 != 0x1.Fp+5 ) goto label$6247;
  label$6248:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = A1$;
  }
  goto label$6124;
  label$6247:;
  if( ADR$1 != 0x1.F8p+5 ) goto label$6249;
  label$6250:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = A2$;
  }
  goto label$6124;
  label$6249:;
  if( ADR$1 != 0x1.p+6 ) goto label$6251;
  label$6252:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = A3$;
  }
  goto label$6124;
  label$6251:;
  if( ADR$1 != 0x1.04p+6 ) goto label$6253;
  label$6254:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = A4$;
  }
  goto label$6124;
  label$6253:;
  if( ADR$1 != 0x1.08p+6 ) goto label$6255;
  label$6256:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = A5$;
  }
  goto label$6124;
  label$6255:;
  if( ADR$1 != 0x1.0Cp+6 ) goto label$6257;
  label$6258:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = A6$;
  }
  goto label$6124;
  label$6257:;
  if( ADR$1 != 0x1.1p+6 ) goto label$6259;
  label$6260:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = A7$;
  }
  goto label$6124;
  label$6259:;
  if( ADR$1 != 0x1.14p+6 ) goto label$6261;
  label$6262:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = A8$;
  }
  goto label$6124;
  label$6261:;
  if( ADR$1 != 0x1.18p+6 ) goto label$6263;
  label$6264:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = *(double*)((int64)(double*)MEM64$ + 394880ll);
  }
  goto label$6124;
  label$6263:;
  if( ADR$1 != 0x1.1Cp+6 ) goto label$6265;
  label$6266:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = *(double*)((int64)(double*)MEM64$ + 394896ll) + *(double*)((int64)(double*)MEM64$ + 394904ll);
  }
  goto label$6124;
  label$6265:;
  if( ADR$1 != 0x1.2p+6 ) goto label$6267;
  label$6268:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = *(double*)((int64)(double*)MEM64$ + 394896ll) - *(double*)((int64)(double*)MEM64$ + 394904ll);
  }
  goto label$6124;
  label$6267:;
  if( ADR$1 != 0x1.24p+6 ) goto label$6269;
  label$6270:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = *(double*)((int64)(double*)MEM64$ + 394896ll) * *(double*)((int64)(double*)MEM64$ + 394904ll);
  }
  goto label$6124;
  label$6269:;
  if( ADR$1 != 0x1.28p+6 ) goto label$6271;
  label$6272:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = *(double*)((int64)(double*)MEM64$ + 394896ll) / *(double*)((int64)(double*)MEM64$ + 394904ll);
  }
  goto label$6124;
  label$6271:;
  if( ADR$1 != 0x1.2Cp+6 ) goto label$6273;
  label$6274:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = (double)(((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394896ll) )) / ((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394904ll) )));
  }
  goto label$6124;
  label$6273:;
  if( ADR$1 != 0x1.3p+6 ) goto label$6275;
  label$6276:;
  {
   double vr$10 = pow( *(double*)((int64)(double*)MEM64$ + 394896ll), *(double*)((int64)(double*)MEM64$ + 394904ll) );
   *(double*)((int64)(double*)MEM64$ + 394888ll) = vr$10;
  }
  goto label$6124;
  label$6275:;
  if( ADR$1 != 0x1.34p+6 ) goto label$6277;
  label$6278:;
  {
   double vr$11 = _ZN12SYSTEM_BUS_T8K_MODULOEdd( THIS$1, *(double*)((int64)(double*)MEM64$ + 394896ll), *(double*)((int64)(double*)MEM64$ + 394904ll) );
   *(double*)((int64)(double*)MEM64$ + 394888ll) = vr$11;
  }
  goto label$6124;
  label$6277:;
  if( ADR$1 != 0x1.38p+6 ) goto label$6279;
  label$6280:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = -(*(double*)((int64)(double*)MEM64$ + 394888ll));
  }
  goto label$6124;
  label$6279:;
  if( ADR$1 != 0x1.3Cp+6 ) goto label$6281;
  label$6282:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = (double)(((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394896ll) )) << (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394904ll) )) & 63ll));
  }
  goto label$6124;
  label$6281:;
  if( ADR$1 != 0x1.4p+6 ) goto label$6283;
  label$6284:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = (double)(((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394896ll) )) >> (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394904ll) )) & 63ll));
  }
  goto label$6124;
  label$6283:;
  if( ADR$1 != 0x1.44p+6 ) goto label$6285;
  label$6286:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = (double)(int64)-(*(double*)((int64)(double*)MEM64$ + 394896ll) == *(double*)((int64)(double*)MEM64$ + 394904ll));
  }
  goto label$6124;
  label$6285:;
  if( ADR$1 != 0x1.48p+6 ) goto label$6287;
  label$6288:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = (double)(int64)-(*(double*)((int64)(double*)MEM64$ + 394896ll) != *(double*)((int64)(double*)MEM64$ + 394904ll));
  }
  goto label$6124;
  label$6287:;
  if( ADR$1 != 0x1.4Cp+6 ) goto label$6289;
  label$6290:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = (double)(int64)-(*(double*)((int64)(double*)MEM64$ + 394896ll) < *(double*)((int64)(double*)MEM64$ + 394904ll));
  }
  goto label$6124;
  label$6289:;
  if( ADR$1 != 0x1.5p+6 ) goto label$6291;
  label$6292:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = (double)(int64)-(*(double*)((int64)(double*)MEM64$ + 394896ll) <= *(double*)((int64)(double*)MEM64$ + 394904ll));
  }
  goto label$6124;
  label$6291:;
  if( ADR$1 != 0x1.54p+6 ) goto label$6293;
  label$6294:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = (double)(int64)-(*(double*)((int64)(double*)MEM64$ + 394896ll) >= *(double*)((int64)(double*)MEM64$ + 394904ll));
  }
  goto label$6124;
  label$6293:;
  if( ADR$1 != 0x1.58p+6 ) goto label$6295;
  label$6296:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = (double)(int64)-(*(double*)((int64)(double*)MEM64$ + 394896ll) > *(double*)((int64)(double*)MEM64$ + 394904ll));
  }
  goto label$6124;
  label$6295:;
  if( ADR$1 != 0x1.5Cp+6 ) goto label$6297;
  label$6298:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = (double)(((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394896ll) )) & ((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394904ll) )));
  }
  goto label$6124;
  label$6297:;
  if( ADR$1 != 0x1.6p+6 ) goto label$6299;
  label$6300:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = (double)~(((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394896ll) )) ^ ((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394904ll) )));
  }
  goto label$6124;
  label$6299:;
  if( ADR$1 != 0x1.64p+6 ) goto label$6301;
  label$6302:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = (double)(~((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394896ll) )) | ((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394904ll) )));
  }
  goto label$6124;
  label$6301:;
  if( ADR$1 != 0x1.68p+6 ) goto label$6303;
  label$6304:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = (double)(((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394896ll) )) | ((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394904ll) )));
  }
  goto label$6124;
  label$6303:;
  if( ADR$1 != 0x1.6Cp+6 ) goto label$6305;
  label$6306:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = (double)(((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394896ll) )) ^ ((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394904ll) )));
  }
  goto label$6124;
  label$6305:;
  if( ADR$1 != 0x1.7p+6 ) goto label$6307;
  label$6308:;
  {
   *(double*)((int64)(double*)MEM64$ + 394896ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$6124;
  label$6307:;
  if( ADR$1 != 0x1.74p+6 ) goto label$6309;
  label$6310:;
  {
   *(double*)((int64)(double*)MEM64$ + 394904ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$6124;
  label$6309:;
  if( ADR$1 != 0x1.78p+6 ) goto label$6311;
  label$6312:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = *(double*)((int64)(double*)MEM64$ + 394888ll) + 0x1.p+0;
  }
  goto label$6124;
  label$6311:;
  if( ADR$1 != 0x1.7Cp+6 ) goto label$6313;
  label$6314:;
  {
   *(double*)((int64)(double*)MEM64$ + 394896ll) = *(double*)((int64)(double*)MEM64$ + 394896ll) + 0x1.p+0;
  }
  goto label$6124;
  label$6313:;
  if( ADR$1 != 0x1.8p+6 ) goto label$6315;
  label$6316:;
  {
   *(double*)((int64)(double*)MEM64$ + 394904ll) = *(double*)((int64)(double*)MEM64$ + 394904ll) + 0x1.p+0;
  }
  goto label$6124;
  label$6315:;
  if( ADR$1 != 0x1.84p+6 ) goto label$6317;
  label$6318:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = *(double*)((int64)(double*)MEM64$ + 394888ll) + -0x1.p+0;
  }
  goto label$6124;
  label$6317:;
  if( ADR$1 != 0x1.88p+6 ) goto label$6319;
  label$6320:;
  {
   *(double*)((int64)(double*)MEM64$ + 394896ll) = *(double*)((int64)(double*)MEM64$ + 394896ll) + -0x1.p+0;
  }
  goto label$6124;
  label$6319:;
  if( ADR$1 != 0x1.8Cp+6 ) goto label$6321;
  label$6322:;
  {
   *(double*)((int64)(double*)MEM64$ + 394904ll) = *(double*)((int64)(double*)MEM64$ + 394904ll) + -0x1.p+0;
  }
  goto label$6124;
  label$6321:;
  if( ADR$1 != 0x1.9p+6 ) goto label$6323;
  label$6324:;
  {
   if( *(double*)((int64)(double*)MEM64$ + 394896ll) != *(double*)((int64)(double*)MEM64$ + 394904ll) ) goto label$6326;
   {
    *(double*)((int64)(double*)MEM64$ + 395344ll) = V$1;
    label$6326:;
   }
  }
  goto label$6124;
  label$6323:;
  if( ADR$1 != 0x1.94p+6 ) goto label$6327;
  label$6328:;
  {
   if( *(double*)((int64)(double*)MEM64$ + 394896ll) == *(double*)((int64)(double*)MEM64$ + 394904ll) ) goto label$6330;
   {
    *(double*)((int64)(double*)MEM64$ + 395344ll) = V$1;
    label$6330:;
   }
  }
  goto label$6124;
  label$6327:;
  if( ADR$1 != 0x1.98p+6 ) goto label$6331;
  label$6332:;
  {
   if( *(double*)((int64)(double*)MEM64$ + 394896ll) <= *(double*)((int64)(double*)MEM64$ + 394904ll) ) goto label$6334;
   {
    *(double*)((int64)(double*)MEM64$ + 395344ll) = V$1;
    label$6334:;
   }
  }
  goto label$6124;
  label$6331:;
  if( ADR$1 != 0x1.9Cp+6 ) goto label$6335;
  label$6336:;
  {
   if( *(double*)((int64)(double*)MEM64$ + 394896ll) < *(double*)((int64)(double*)MEM64$ + 394904ll) ) goto label$6338;
   {
    *(double*)((int64)(double*)MEM64$ + 395344ll) = V$1;
    label$6338:;
   }
  }
  goto label$6124;
  label$6335:;
  if( ADR$1 != 0x1.Ap+6 ) goto label$6339;
  label$6340:;
  {
   if( *(double*)((int64)(double*)MEM64$ + 394896ll) > *(double*)((int64)(double*)MEM64$ + 394904ll) ) goto label$6342;
   {
    *(double*)((int64)(double*)MEM64$ + 395344ll) = V$1;
    label$6342:;
   }
  }
  goto label$6124;
  label$6339:;
  if( ADR$1 != 0x1.A4p+6 ) goto label$6343;
  label$6344:;
  {
   if( *(double*)((int64)(double*)MEM64$ + 394896ll) >= *(double*)((int64)(double*)MEM64$ + 394904ll) ) goto label$6346;
   {
    *(double*)((int64)(double*)MEM64$ + 395344ll) = V$1;
    label$6346:;
   }
  }
  goto label$6124;
  label$6343:;
  if( ADR$1 != 0x1.A8p+6 ) goto label$6347;
  label$6348:;
  {
   *(double*)((int64)(double*)MEM64$ + 395344ll) = V$1;
  }
  goto label$6124;
  label$6347:;
  if( ADR$1 != 0x1.ACp+6 ) goto label$6349;
  label$6350:;
  {
   double vr$59 = _ZN12SYSTEM_BUS_T5PEEKBEd( THIS$1, V$1 );
   *(double*)((int64)(double*)MEM64$ + 394888ll) = vr$59;
  }
  goto label$6124;
  label$6349:;
  if( ADR$1 != 0x1.Bp+6 ) goto label$6351;
  label$6352:;
  {
   _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, V$1, *(double*)((int64)(double*)MEM64$ + 394888ll) );
  }
  goto label$6124;
  label$6351:;
  if( ADR$1 != 0x1.B4p+6 ) goto label$6353;
  label$6354:;
  {
   uint64 TMP$3;
   __builtin_memset( &TMP$3, 0, 8ll );
   uint64 TIMES$3;
   __builtin_memset( &TIMES$3, 0, 8ll );
   *(double*)((int64)(double*)MEM64$ + 397040ll) = *(double*)((int64)(double*)MEM64$ + 395344ll);
   *(double*)((int64)(double*)MEM64$ + 395400ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+0 )) << (3ll & 63ll))) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+1 )) << (3ll & 63ll))) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.8p+1 )) << (3ll & 63ll))) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+2 )) << (3ll & 63ll))) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.4p+2 )) << (3ll & 63ll)));
   *(double*)((int64)(double*)MEM64$ + 395456ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.8p+2 )) << (3ll & 63ll))) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.Cp+2 )) << (3ll & 63ll))) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+3 )) << (3ll & 63ll))) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.2p+3 )) << (3ll & 63ll))) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.4p+3 )) << (3ll & 63ll)));
   *(double*)((int64)(double*)MEM64$ + 396968ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.6p+3 )) << (3ll & 63ll))) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.8p+3 )) << (3ll & 63ll))) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.Ap+3 )) << (3ll & 63ll))) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.Cp+3 )) << (3ll & 63ll))) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.Ep+3 )) << (3ll & 63ll)));
   label$6355:;
   if( (double)TMP$3 == *(double*)((int64)(double*)MEM64$ + 396968ll) ) goto label$6356;
   {
    {
     PC$ = *(double*)((int64)(double*)MEM64$ + 395400ll);
     double TMP$3107$5;
     TMP$3107$5 = *(double*)((int64)(double*)MEM64$ + 395456ll);
     goto label$6357;
     label$6360:;
     {
      _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( PC$ )) << (3ll & 63ll))), 0x0p+0 );
     }
     label$6358:;
     PC$ = PC$ + 0x1.p+0;
     label$6357:;
     if( PC$ <= TMP$3107$5 ) goto label$6360;
     label$6359:;
    }
    double vr$152 = _ZN12SYSTEM_BUS_T8K_MODULOEdd( THIS$1, (double)(TMP$3 + 1ull), *(double*)((int64)(double*)MEM64$ + 396968ll) );
    TMP$3 = ((uint64)__builtin_nearbyint( vr$152 ));
   }
   goto label$6355;
   label$6356:;
  }
  goto label$6124;
  label$6353:;
  if( ADR$1 != 0x1.B8p+6 ) goto label$6361;
  label$6362:;
  {
   fb_Cls( -65536 );
   FBSTRING TMP$3;
   __builtin_memset( &TMP$3, 0, 24ll );
   FBSTRING* vr$155 = fb_StrAllocTempDescZEx( (uint8*)"cobc -x -free tmp.cob", 21ll );
   fb_Shell( (FBSTRING*)vr$155 );
   FBSTRING* vr$156 = fb_StrAllocTempDescZEx( (uint8*)"./tmp > tmp.txt", 15ll );
   fb_Shell( (FBSTRING*)vr$156 );
   FBSTRING* vr$157 = fb_StrAllocTempDescZEx( (uint8*)"tmp.txt", 7ll );
   fb_FileOpen( (FBSTRING*)vr$157, 2u, 0u, 0u, 1, 0 );
   label$6363:;
   int32 vr$158 = fb_FileEof( 1 );
   if( (int64)vr$158 != 0ll ) goto label$6364;
   {
    fb_FileInput( 1 );
    fb_InputString( (void*)&TMP$3, -1ll, 0 );
    fb_PrintString( 0, (FBSTRING*)&TMP$3, 1 );
   }
   goto label$6363;
   label$6364:;
   fb_FileClose( 1 );
   FBSTRING* vr$162 = fb_StrAllocTempDescZEx( (uint8*)"press any key to contiune.", 26ll );
   fb_PrintString( 0, (FBSTRING*)vr$162, 1 );
   fb_Sleep( -1 );
   fb_StrDelete( (FBSTRING*)&TMP$3 );
  }
  goto label$6124;
  label$6361:;
  if( ADR$1 != 0x1.BCp+6 ) goto label$6365;
  label$6366:;
  {
   *(double*)((int64)(double*)MEM64$ + 395400ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+0 )) << (3ll & 63ll))) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+1 )) << (3ll & 63ll))) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.8p+1 )) << (3ll & 63ll))) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+2 )) << (3ll & 63ll))) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.4p+2 )) << (3ll & 63ll)));
   double vr$192 = _ZN12SYSTEM_BUS_T5PEEKBEd( THIS$1, *(double*)((int64)(double*)MEM64$ + 395400ll) );
   *(double*)((int64)(double*)MEM64$ + 394912ll) = vr$192;
  }
  goto label$6124;
  label$6365:;
  if( ADR$1 != 0x1.Cp+6 ) goto label$6367;
  label$6368:;
  {
   *(double*)((int64)(double*)MEM64$ + 395400ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+0 )) << (3ll & 63ll))) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+1 )) << (3ll & 63ll))) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.8p+1 )) << (3ll & 63ll))) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+2 )) << (3ll & 63ll))) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.4p+2 )) << (3ll & 63ll)));
   *(double*)((int64)(double*)MEM64$ + 394912ll) = *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.8p+2 )) << (3ll & 63ll)));
   _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, *(double*)((int64)(double*)MEM64$ + 395400ll), *(double*)((int64)(double*)MEM64$ + 394912ll) );
  }
  goto label$6124;
  label$6367:;
  if( ADR$1 != 0x1.C4p+6 ) goto label$6369;
  label$6370:;
  {
   *(double*)((int64)(double*)MEM64$ + 395400ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+0 )) << (3ll & 63ll))) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+1 )) << (3ll & 63ll))) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.8p+1 )) << (3ll & 63ll))) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+2 )) << (3ll & 63ll))) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.4p+2 )) << (3ll & 63ll)));
   double vr$252 = _ZN12SYSTEM_BUS_T5PEEKWEd( THIS$1, *(double*)((int64)(double*)MEM64$ + 395400ll) );
   *(double*)((int64)(double*)MEM64$ + 394912ll) = vr$252;
  }
  goto label$6124;
  label$6369:;
  if( ADR$1 != 0x1.C8p+6 ) goto label$6371;
  label$6372:;
  {
   *(double*)((int64)(double*)MEM64$ + 395400ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+0 )) << (3ll & 63ll))) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+1 )) << (3ll & 63ll))) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.8p+1 )) << (3ll & 63ll))) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+2 )) << (3ll & 63ll))) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.4p+2 )) << (3ll & 63ll)));
   *(double*)((int64)(double*)MEM64$ + 394912ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.8p+2 )) << (3ll & 63ll))) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.Cp+2 )) << (3ll & 63ll))) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+3 )) << (3ll & 63ll))) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.2p+3 )) << (3ll & 63ll))) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.4p+3 )) << (3ll & 63ll)));
   _ZN12SYSTEM_BUS_T5POKEWEdd( THIS$1, *(double*)((int64)(double*)MEM64$ + 395400ll), *(double*)((int64)(double*)MEM64$ + 394912ll) );
  }
  goto label$6124;
  label$6371:;
  if( ADR$1 != 0x1.CCp+6 ) goto label$6373;
  label$6374:;
  {
   *(double*)((int64)(double*)MEM64$ + 395400ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+0 )) << (3ll & 63ll))) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+1 )) << (3ll & 63ll))) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.8p+1 )) << (3ll & 63ll))) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+2 )) << (3ll & 63ll))) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.4p+2 )) << (3ll & 63ll)));
   *(double*)((int64)(double*)MEM64$ + 395456ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.8p+2 )) << (3ll & 63ll))) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.Cp+2 )) << (3ll & 63ll))) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+3 )) << (3ll & 63ll))) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.2p+3 )) << (3ll & 63ll))) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.4p+3 )) << (3ll & 63ll)));
   double vr$365 = _ZN12SYSTEM_BUS_T5PEEKBEd( THIS$1, *(double*)((int64)(double*)MEM64$ + 395456ll) );
   _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, *(double*)((int64)(double*)MEM64$ + 395400ll), vr$365 );
  }
  goto label$6124;
  label$6373:;
  if( ADR$1 != 0x1.Dp+6 ) goto label$6375;
  label$6376:;
  {
   *(double*)((int64)(double*)MEM64$ + 395400ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+0 )) << (3ll & 63ll))) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+1 )) << (3ll & 63ll))) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.8p+1 )) << (3ll & 63ll))) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+2 )) << (3ll & 63ll))) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.4p+2 )) << (3ll & 63ll)));
   *(double*)((int64)(double*)MEM64$ + 395456ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.8p+2 )) << (3ll & 63ll))) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.Cp+2 )) << (3ll & 63ll))) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+3 )) << (3ll & 63ll))) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.2p+3 )) << (3ll & 63ll))) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.4p+3 )) << (3ll & 63ll)));
   *(double*)((int64)(double*)MEM64$ + 395344ll) = *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.6p+3;
   double vr$423 = _ZN12SYSTEM_BUS_T5PEEKWEd( THIS$1, *(double*)((int64)(double*)MEM64$ + 395456ll) );
   _ZN12SYSTEM_BUS_T5POKEWEdd( THIS$1, *(double*)((int64)(double*)MEM64$ + 395400ll), vr$423 );
  }
  goto label$6124;
  label$6375:;
  if( ADR$1 != 0x1.D4p+6 ) goto label$6377;
  label$6378:;
  {
   *(double*)((int64)(double*)MEM64$ + 395400ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+0 )) << (3ll & 63ll))) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+1 )) << (3ll & 63ll))) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.8p+1 )) << (3ll & 63ll))) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+2 )) << (3ll & 63ll))) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.4p+2 )) << (3ll & 63ll)));
   FBSTRING* vr$452 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394888ll) );
   fb_StrAssign( (void*)&STRING_DATA$, -1ll, (void*)vr$452, -1ll, 0 );
   {
    R3$ = 0x1.p+0;
    double TMP$3112$4;
    int64 vr$453 = fb_StrLen( (void*)&STRING_DATA$, -1ll );
    TMP$3112$4 = (double)vr$453;
    goto label$6379;
    label$6382:;
    {
     FBSTRING* vr$456 = fb_StrMid( (FBSTRING*)&STRING_DATA$, ((int64)__builtin_nearbyint( R3$ )), 1ll );
     uint32 vr$457 = fb_ASC( (FBSTRING*)vr$456, 1ll );
     double vr$459 = _ZN12SYSTEM_BUS_T10SCREENCODEEd( THIS$1, (double)vr$457 );
     _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, ((CHAR_BUFFER$ + ADR0$) + R3$) + -0x1.p+0, vr$459 );
    }
    label$6380:;
    R3$ = R3$ + 0x1.p+0;
    label$6379:;
    if( R3$ <= TMP$3112$4 ) goto label$6382;
    label$6381:;
   }
  }
  goto label$6124;
  label$6377:;
  if( ADR$1 != 0x1.D8p+6 ) goto label$6383;
  label$6384:;
  {
   STRING_ADR$ = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+0 )) << (3ll & 63ll))) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+1 )) << (3ll & 63ll))) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.8p+1 )) << (3ll & 63ll))) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+2 )) << (3ll & 63ll))) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.4p+2 )) << (3ll & 63ll)));
   STRING_LEN$ = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.8p+2 )) << (3ll & 63ll))) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.Cp+2 )) << (3ll & 63ll))) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+3 )) << (3ll & 63ll))) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.2p+3 )) << (3ll & 63ll))) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.4p+3 )) << (3ll & 63ll)));
   *(double*)((int64)(double*)MEM64$ + 395400ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.6p+3 )) << (3ll & 63ll))) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.8p+3 )) << (3ll & 63ll))) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.Ap+3 )) << (3ll & 63ll))) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.Cp+3 )) << (3ll & 63ll))) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.Ep+3 )) << (3ll & 63ll)));
   *(double*)((int64)(double*)MEM64$ + 395344ll) = *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+4;
   {
    R3$ = 0x0p+0;
    double TMP$3113$4;
    TMP$3113$4 = STRING_LEN$;
    goto label$6385;
    label$6388:;
    {
     double vr$552 = _ZN12SYSTEM_BUS_T10SCREENCODEEd( THIS$1, *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( STRING_ADR$ + R3$ )) << (3ll & 63ll))) );
     _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, (CHAR_BUFFER$ + *(double*)((int64)(double*)MEM64$ + 395400ll)) + R3$, vr$552 );
    }
    label$6386:;
    R3$ = R3$ + 0x1.p+0;
    label$6385:;
    if( R3$ <= TMP$3113$4 ) goto label$6388;
    label$6387:;
   }
  }
  goto label$6124;
  label$6383:;
  if( ADR$1 < 0x1.p+14 ) goto label$6389;
  if( ADR$1 > 0x1.F9Cp+14 ) goto label$6389;
  label$6390:;
  {
   ADR$1 = ADR$1 + -0x1.p+14;
   C$ = ((int64)__builtin_nearbyint( V$1 ));
   C$ = C$ << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) & 63ll);
   C$ = ((int64)__builtin_nearbyint( (double)C$ + *(double*)((int64)(double*)MEM64$ + 395072ll) ));
   double vr$563 = _ZN12SYSTEM_BUS_T8K_MODULOEdd( THIS$1, ADR$1, 0x1.68p+6 );
   XS$ = ((int64)__builtin_nearbyint( vr$563 ));
   XS$ = XS$ << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) & 63ll);
   XS$ = ((int64)__builtin_nearbyint( (double)XS$ + ((double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) * 0x1.Cp+1) ));
   YS$ = ((int64)__builtin_nearbyint( ADR$1 )) / 90ll;
   YS$ = YS$ << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) & 63ll);
   YS$ = ((int64)__builtin_nearbyint( (double)YS$ + ((double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) * 0x1.Cp+1) ));
   if( *(double*)((int64)(double*)MEM64$ + ((int64)RVS$ << (3ll & 63ll))) == (double)(int64)*(uint8*)NIBBLES$ ) goto label$6392;
   {
    C$ = C$ & (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll));
   }
   label$6392:;
   label$6391:;
   if( *(double*)((int64)(double*)MEM64$ + 394856ll) > (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$6394;
   {
    *(double*)((int64)(double*)MEM64$ + 394856ll) = (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
   }
   label$6394:;
   label$6393:;
   _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), 0x1.8204p+15, (double)*(uint8*)NIBBLES$ );
   *(double*)&Y$ = (double)*(uint8*)NIBBLES$;
   *(double*)&X$ = (double)*(uint8*)NIBBLES$;
   label$6395:;
   if( ((int64)-((double)Y$ == *(double*)((int64)(double*)MEM64$ + 395088ll)) & (int64)-((double)X$ == *(double*)((int64)(double*)MEM64$ + 395080ll))) != 0ll ) goto label$6396;
   {
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), 0x1.p+1, (double)XS$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), 0x1.8p+1, (double)X$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), 0x1.1Cp+6, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), 0x1.8p+2, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), 0x1.8p+1, (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), 0x1.24p+6, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), 0x1.8p+2, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), 0x1.8p+1, (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), 0x1.2Cp+6, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), 0x1.8p+2, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), 0x1.8p+1, *(double*)((int64)(double*)MEM64$ + 395032ll) );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), 0x1.1Cp+6, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), 0x1.1p+5, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), 0x1.p+1, (double)YS$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), 0x1.8p+1, (double)Y$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), 0x1.1Cp+6, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), 0x1.8p+2, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), 0x1.8p+1, 0x1.Cp+1 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), 0x1.24p+6, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), 0x1.8p+2, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), 0x1.8p+1, (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), 0x1.2Cp+6, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), 0x1.8p+2, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), 0x1.8p+1, *(double*)((int64)(double*)MEM64$ + 395040ll) );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), 0x1.1Cp+6, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), 0x1.2p+5, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), 0x1.p+1, (double)XS$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), 0x1.8p+1, (double)X$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), 0x1.1Cp+6, (double)*(uint8*)NIBBLES$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), 0x1.8p+2, (double)*(uint8*)NIBBLES$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), 0x1.8p+1, (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), 0x1.24p+6, (double)*(uint8*)NIBBLES$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), 0x1.8p+2, (double)*(uint8*)NIBBLES$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), 0x1.8p+1, (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), 0x1.1Cp+6, (double)*(uint8*)NIBBLES$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), 0x1.8p+2, (double)*(uint8*)NIBBLES$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), 0x1.8p+1, (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), 0x1.2Cp+6, (double)*(uint8*)NIBBLES$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), 0x1.8p+2, (double)*(uint8*)NIBBLES$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), 0x1.8p+1, *(double*)((int64)(double*)MEM64$ + 395032ll) );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), 0x1.1Cp+6, (double)*(uint8*)NIBBLES$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), 0x1.18p+5, (double)*(uint8*)NIBBLES$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), 0x1.p+1, (double)YS$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), 0x1.8p+1, (double)Y$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), 0x1.1Cp+6, (double)*(uint8*)NIBBLES$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), 0x1.8p+2, (double)*(uint8*)NIBBLES$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), 0x1.8p+1, 0x1.Cp+1 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), 0x1.24p+6, (double)*(uint8*)NIBBLES$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), 0x1.8p+2, (double)*(uint8*)NIBBLES$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), 0x1.8p+1, (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), 0x1.1Cp+6, (double)*(uint8*)NIBBLES$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), 0x1.8p+2, (double)*(uint8*)NIBBLES$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), 0x1.8p+1, (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), 0x1.2Cp+6, (double)*(uint8*)NIBBLES$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), 0x1.8p+2, (double)*(uint8*)NIBBLES$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), 0x1.8p+1, *(double*)((int64)(double*)MEM64$ + 395040ll) );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), 0x1.1Cp+6, (double)*(uint8*)NIBBLES$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), 0x1.28p+5, (double)*(uint8*)NIBBLES$ );
    double vr$699 = _ZN12SYSTEM_BUS_T6PEEK64Ed( THIS$1, 0x1.81F8p+15 );
    _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), 0x1.81F8p+15, vr$699 );
    X$ = X$ + 1ll;
    if( (double)X$ <= *(double*)((int64)(double*)MEM64$ + 395080ll) ) goto label$6398;
    {
     X$ = 0ll;
     Y$ = Y$ + 1ll;
     C$ = C$ + 1ll;
    }
    label$6398:;
    label$6397:;
   }
   goto label$6395;
   label$6396:;
   _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), 0x1.8208p+15, 0x0p+0 );
   ADR$1 = ADR$1 + 0x1.p+14;
   V$1 = *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( ADR$1 )) << (3ll & 63ll)));
  }
  goto label$6124;
  label$6389:;
  if( ADR$1 != 0x1.4p+19 ) goto label$6399;
  label$6400:;
  {
   fb_GfxLine( FGIMAGE$, (float)X_AXIS0$, (float)Y_AXIS0$, (float)(X_AXIS0$ + PIXEL_SIZE$), (float)(Y_AXIS0$ + PIXEL_SIZE$), (uint32)(((((int64)(uint32)(uint8)((int32)__builtin_nearbyint( RED2$ )) << (16ll & 63ll)) | ((int64)(uint32)(uint8)((int32)__builtin_nearbyint( GREEN2$ )) << (8ll & 63ll))) | (int64)(uint32)(uint8)((int32)__builtin_nearbyint( BLUE2$ ))) | ((int64)(uint32)(uint8)((int32)__builtin_nearbyint( XALPHA2$ )) << (24ll & 63ll))), 2, 65535u, 0 );
  }
  goto label$6124;
  label$6399:;
  if( ADR$1 != 0x1.40002p+19 ) goto label$6401;
  label$6402:;
  {
   fb_GfxLine( FGIMAGE$, (float)X_AXIS0$, (float)Y_AXIS0$, (float)X_AXIS1$, (float)Y_AXIS1$, (uint32)(((((int64)(uint32)(uint8)((int32)__builtin_nearbyint( RED2$ )) << (16ll & 63ll)) | ((int64)(uint32)(uint8)((int32)__builtin_nearbyint( GREEN2$ )) << (8ll & 63ll))) | (int64)(uint32)(uint8)((int32)__builtin_nearbyint( BLUE2$ ))) | ((int64)(uint32)(uint8)((int32)__builtin_nearbyint( XALPHA2$ )) << (24ll & 63ll))), 0, (uint32)((int64)__builtin_nearbyint( BITMASK$ )), 0 );
  }
  goto label$6124;
  label$6401:;
  if( ADR$1 != 0x1.40004p+19 ) goto label$6403;
  label$6404:;
  {
   fb_GfxEllipse( FGIMAGE$, (float)X_AXIS0$, (float)Y_AXIS1$, (float)RADIUS$, (uint32)(((((int64)(uint32)(uint8)((int32)__builtin_nearbyint( RED2$ )) << (16ll & 63ll)) | ((int64)(uint32)(uint8)((int32)__builtin_nearbyint( GREEN2$ )) << (8ll & 63ll))) | (int64)(uint32)(uint8)((int32)__builtin_nearbyint( BLUE2$ ))) | ((int64)(uint32)(uint8)((int32)__builtin_nearbyint( XALPHA2$ )) << (24ll & 63ll))), 0x0p+0f, 0x0p+0f, 0x1.921FB8p+2f, 0, 4 );
  }
  goto label$6124;
  label$6403:;
  if( ADR$1 < 0x1.8p+19 ) goto label$6405;
  if( ADR$1 > 0x1.8FFEp+19 ) goto label$6405;
  label$6406:;
  {
   ADR$1 = ADR$1 + -0x1.8p+19;
   *(double*)((uint8*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( ADR$1 )) << (3ll & 63ll))) + 262144ll) = V$1;
   ADR$1 = ADR$1 + 0x1.8p+19;
  }
  goto label$6124;
  label$6405:;
  if( ADR$1 < 0x1.Ap+19 ) goto label$6407;
  if( ADR$1 > 0x1.A7CEp+19 ) goto label$6407;
  label$6408:;
  {
   ADR$1 = ADR$1 + -0x1.Ap+19;
   C$ = ((int64)__builtin_nearbyint( V$1 ));
   C$ = C$ << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) & 63ll);
   C$ = ((int64)__builtin_nearbyint( (double)C$ + *(double*)((int64)(double*)MEM64$ + 395072ll) ));
   double vr$792 = _ZN12SYSTEM_BUS_T8K_MODULOEdd( THIS$1, ADR$1, 0x1.4p+7 );
   XS$ = ((int64)__builtin_nearbyint( vr$792 ));
   XS$ = XS$ << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) & 63ll);
   XS$ = XS$ + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) * (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll));
   YS$ = ((int64)__builtin_nearbyint( ADR$1 )) / 160ll;
   YS$ = YS$ << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) & 63ll);
   YS$ = YS$ + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) * (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll));
   if( *(double*)((int64)(double*)MEM64$ + ((int64)RVS$ << (3ll & 63ll))) == (double)(int64)*(uint8*)NIBBLES$ ) goto label$6410;
   {
    C$ = C$ & (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll));
   }
   label$6410:;
   label$6409:;
   if( *(double*)((int64)(double*)MEM64$ + 394856ll) > (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$6412;
   {
    *(double*)((int64)(double*)MEM64$ + 394856ll) = (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
   }
   label$6412:;
   label$6411:;
   _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), 0x1.8204p+15, (double)*(uint8*)NIBBLES$ );
   *(double*)&Y$ = (double)*(uint8*)NIBBLES$;
   *(double*)&X$ = (double)*(uint8*)NIBBLES$;
   label$6413:;
   if( ((int64)-((double)Y$ == *(double*)((int64)(double*)MEM64$ + 395088ll)) & (int64)-((double)X$ == *(double*)((int64)(double*)MEM64$ + 395080ll))) != 0ll ) goto label$6414;
   {
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.p+1, (double)XS$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+1, (double)X$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.1Cp+6, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+2, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+1, 0x1.Ep+1 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.24p+6, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+2, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+1, 0x1.p+1 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.2Cp+6, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+2, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+1, *(double*)((int64)(double*)MEM64$ + 395032ll) );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.1Cp+6, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.1p+5, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.p+1, (double)YS$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+1, (double)Y$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.1Cp+6, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+2, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+1, 0x1.Ep+1 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.24p+6, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+2, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+1, 0x1.p+1 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.2Cp+6, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+2, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+1, *(double*)((int64)(double*)MEM64$ + 395040ll) );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.1Cp+6, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.2p+5, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.p+1, (double)XS$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+1, (double)X$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.1Cp+6, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+2, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+1, 0x1.Ep+1 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.24p+6, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+2, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+1, 0x1.Cp+2 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.1Cp+6, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+2, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+1, 0x1.p+1 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.2Cp+6, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+2, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+1, *(double*)((int64)(double*)MEM64$ + 395032ll) );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.1Cp+6, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.18p+5, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.p+1, (double)YS$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+1, (double)Y$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.1Cp+6, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+2, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+1, 0x1.Ep+1 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.24p+6, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+2, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+1, 0x1.p+2 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.1Cp+6, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+2, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+1, 0x1.p+1 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.2Cp+6, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+2, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+1, *(double*)((int64)(double*)MEM64$ + 395040ll) );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.1Cp+6, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.28p+5, 0x0p+0 );
    double vr$838 = _ZN12SYSTEM_BUS_T6PEEK64Ed( THIS$1, 0x1.81F8p+15 );
    _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), 0x1.81F8p+15, vr$838 );
    X$ = X$ + 1ll;
    if( (double)X$ <= *(double*)((int64)(double*)MEM64$ + 395080ll) ) goto label$6416;
    {
     X$ = 0ll;
     Y$ = Y$ + 1ll;
     C$ = C$ + 1ll;
    }
    label$6416:;
    label$6415:;
   }
   goto label$6413;
   label$6414:;
   _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), 0x1.8208p+15, 0x0p+0 );
   ADR$1 = ADR$1 + 0x1.Ap+19;
   V$1 = *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( ADR$1 )) << (3ll & 63ll)));
  }
  goto label$6124;
  label$6407:;
  if( ADR$1 < 0x1.BFEp+23 ) goto label$6417;
  if( ADR$1 > 0x1.BFFFFEp+23 ) goto label$6417;
  label$6418:;
  {
   {
    if( ADR$1 != 0x1.BFE004p+23 ) goto label$6420;
    label$6421:;
    {
    }
    goto label$6419;
    label$6420:;
    if( ADR$1 != 0x1.BFE008p+23 ) goto label$6422;
    label$6423:;
    {
    }
    goto label$6419;
    label$6422:;
    if( ADR$1 != 0x1.BFE01Cp+23 ) goto label$6424;
    label$6425:;
    {
    }
    goto label$6419;
    label$6424:;
    if( ADR$1 != 0x1.BFE02p+23 ) goto label$6426;
    label$6427:;
    {
    }
    goto label$6419;
    label$6426:;
    if( ADR$1 != 0x1.BFE024p+23 ) goto label$6428;
    label$6429:;
    {
    }
    goto label$6419;
    label$6428:;
    if( ADR$1 != 0x1.BFE028p+23 ) goto label$6430;
    label$6431:;
    {
    }
    goto label$6419;
    label$6430:;
    if( ADR$1 != 0x1.BFE034p+23 ) goto label$6432;
    label$6433:;
    {
    }
    goto label$6419;
    label$6432:;
    if( ADR$1 != 0x1.BFE04p+23 ) goto label$6434;
    label$6435:;
    {
    }
    goto label$6419;
    label$6434:;
    if( ADR$1 != 0x1.BFE05Cp+23 ) goto label$6436;
    label$6437:;
    {
    }
    goto label$6419;
    label$6436:;
    if( ADR$1 != 0x1.BFE07Cp+23 ) goto label$6438;
    label$6439:;
    {
    }
    goto label$6419;
    label$6438:;
    if( ADR$1 != 0x1.BFE08p+23 ) goto label$6440;
    label$6441:;
    {
    }
    goto label$6419;
    label$6440:;
    if( ADR$1 != 0x1.BFE084p+23 ) goto label$6442;
    label$6443:;
    {
    }
    goto label$6419;
    label$6442:;
    if( ADR$1 != 0x1.BFE088p+23 ) goto label$6444;
    label$6445:;
    {
    }
    goto label$6419;
    label$6444:;
    if( ADR$1 != 0x1.BFE08Cp+23 ) goto label$6446;
    label$6447:;
    {
    }
    goto label$6419;
    label$6446:;
    if( ADR$1 != 0x1.BFE0Ap+23 ) goto label$6448;
    label$6449:;
    {
    }
    goto label$6419;
    label$6448:;
    if( ADR$1 != 0x1.BFE0A4p+23 ) goto label$6450;
    label$6451:;
    {
    }
    goto label$6419;
    label$6450:;
    if( ADR$1 != 0x1.BFE0Bp+23 ) goto label$6452;
    label$6453:;
    {
    }
    goto label$6419;
    label$6452:;
    if( ADR$1 != 0x1.BFE0B4p+23 ) goto label$6454;
    label$6455:;
    {
    }
    goto label$6419;
    label$6454:;
    if( ADR$1 != 0x1.BFE0B8p+23 ) goto label$6456;
    label$6457:;
    {
    }
    goto label$6419;
    label$6456:;
    if( ADR$1 != 0x1.BFE0BCp+23 ) goto label$6458;
    label$6459:;
    {
    }
    goto label$6419;
    label$6458:;
    if( ADR$1 != 0x1.BFE0C8p+23 ) goto label$6460;
    label$6461:;
    {
    }
    goto label$6419;
    label$6460:;
    if( ADR$1 != 0x1.BFE0E8p+23 ) goto label$6462;
    label$6463:;
    {
    }
    goto label$6419;
    label$6462:;
    if( ADR$1 != 0x1.BFE0F8p+23 ) goto label$6464;
    label$6465:;
    {
    }
    goto label$6419;
    label$6464:;
    if( ADR$1 != 0x1.BFE1p+23 ) goto label$6466;
    label$6467:;
    {
    }
    goto label$6419;
    label$6466:;
    if( ADR$1 != 0x1.BFE104p+23 ) goto label$6468;
    label$6469:;
    {
    }
    goto label$6419;
    label$6468:;
    if( ADR$1 != 0x1.BFE108p+23 ) goto label$6470;
    label$6471:;
    {
    }
    goto label$6419;
    label$6470:;
    if( ADR$1 != 0x1.BFE10Cp+23 ) goto label$6472;
    label$6473:;
    {
    }
    goto label$6419;
    label$6472:;
    if( ADR$1 != 0x1.BFE11p+23 ) goto label$6474;
    label$6475:;
    {
    }
    goto label$6419;
    label$6474:;
    if( ADR$1 != 0x1.BFE114p+23 ) goto label$6476;
    label$6477:;
    {
    }
    goto label$6419;
    label$6476:;
    if( ADR$1 != 0x1.BFE118p+23 ) goto label$6478;
    label$6479:;
    {
    }
    goto label$6419;
    label$6478:;
    if( ADR$1 != 0x1.BFE11Cp+23 ) goto label$6480;
    label$6481:;
    {
    }
    goto label$6419;
    label$6480:;
    if( ADR$1 != 0x1.BFE12p+23 ) goto label$6482;
    label$6483:;
    {
    }
    goto label$6419;
    label$6482:;
    if( ADR$1 != 0x1.BFE124p+23 ) goto label$6484;
    label$6485:;
    {
    }
    goto label$6419;
    label$6484:;
    if( ADR$1 != 0x1.BFE128p+23 ) goto label$6486;
    label$6487:;
    {
    }
    goto label$6419;
    label$6486:;
    if( ADR$1 != 0x1.BFE12Cp+23 ) goto label$6488;
    label$6489:;
    {
    }
    goto label$6419;
    label$6488:;
    if( ADR$1 != 0x1.BFE13p+23 ) goto label$6490;
    label$6491:;
    {
    }
    goto label$6419;
    label$6490:;
    if( ADR$1 != 0x1.BFE13Cp+23 ) goto label$6492;
    label$6493:;
    {
    }
    goto label$6419;
    label$6492:;
    if( ADR$1 != 0x1.BFE14p+23 ) goto label$6494;
    label$6495:;
    {
    }
    goto label$6419;
    label$6494:;
    if( ADR$1 != 0x1.BFE144p+23 ) goto label$6496;
    label$6497:;
    {
    }
    goto label$6419;
    label$6496:;
    if( ADR$1 != 0x1.BFE148p+23 ) goto label$6498;
    label$6499:;
    {
    }
    goto label$6419;
    label$6498:;
    if( ADR$1 != 0x1.BFE14Cp+23 ) goto label$6500;
    label$6501:;
    {
    }
    goto label$6419;
    label$6500:;
    if( ADR$1 != 0x1.BFE15p+23 ) goto label$6502;
    label$6503:;
    {
    }
    goto label$6419;
    label$6502:;
    if( ADR$1 != 0x1.BFE154p+23 ) goto label$6504;
    label$6505:;
    {
    }
    goto label$6419;
    label$6504:;
    if( ADR$1 != 0x1.BFE1Cp+23 ) goto label$6506;
    label$6507:;
    {
    }
    goto label$6419;
    label$6506:;
    if( ADR$1 != 0x1.BFE1C4p+23 ) goto label$6508;
    label$6509:;
    {
    }
    goto label$6419;
    label$6508:;
    if( ADR$1 != 0x1.BFE2p+23 ) goto label$6510;
    label$6511:;
    {
    }
    goto label$6419;
    label$6510:;
    if( ADR$1 != 0x1.BFE204p+23 ) goto label$6512;
    label$6513:;
    {
    }
    goto label$6419;
    label$6512:;
    if( ADR$1 != 0x1.BFE208p+23 ) goto label$6514;
    label$6515:;
    {
    }
    goto label$6419;
    label$6514:;
    if( ADR$1 != 0x1.BFE20Cp+23 ) goto label$6516;
    label$6517:;
    {
    }
    goto label$6419;
    label$6516:;
    if( ADR$1 != 0x1.BFE21p+23 ) goto label$6518;
    label$6519:;
    {
    }
    goto label$6419;
    label$6518:;
    if( ADR$1 != 0x1.BFE22p+23 ) goto label$6520;
    label$6521:;
    {
    }
    goto label$6419;
    label$6520:;
    if( ADR$1 != 0x1.BFE214p+23 ) goto label$6522;
    label$6523:;
    {
    }
    goto label$6419;
    label$6522:;
    if( ADR$1 != 0x1.BFE284p+23 ) goto label$6524;
    label$6525:;
    {
    }
    goto label$6419;
    label$6524:;
    if( ADR$1 != 0x1.BFE3p+23 ) goto label$6526;
    label$6527:;
    {
    }
    goto label$6419;
    label$6526:;
    if( ADR$1 != 0x1.BFE38p+23 ) goto label$6528;
    label$6529:;
    {
    }
    goto label$6419;
    label$6528:;
    if( ADR$1 != 0x1.BFE384p+23 ) goto label$6530;
    label$6531:;
    {
    }
    goto label$6419;
    label$6530:;
    if( ADR$1 != 0x1.BFE388p+23 ) goto label$6532;
    label$6533:;
    {
    }
    goto label$6419;
    label$6532:;
    if( ADR$1 != 0x1.BFE38Cp+23 ) goto label$6534;
    label$6535:;
    {
    }
    goto label$6419;
    label$6534:;
    if( ADR$1 != 0x1.BFE39p+23 ) goto label$6536;
    label$6537:;
    {
    }
    goto label$6419;
    label$6536:;
    if( ADR$1 != 0x1.BFE394p+23 ) goto label$6538;
    label$6539:;
    {
    }
    goto label$6419;
    label$6538:;
    if( ADR$1 != 0x1.BFE398p+23 ) goto label$6540;
    label$6541:;
    {
    }
    goto label$6419;
    label$6540:;
    if( ADR$1 != 0x1.BFE39Cp+23 ) goto label$6542;
    label$6543:;
    {
    }
    goto label$6419;
    label$6542:;
    if( ADR$1 != 0x1.BFE3B8p+23 ) goto label$6544;
    label$6545:;
    {
    }
    goto label$6419;
    label$6544:;
    if( ADR$1 != 0x1.BFE3BCp+23 ) goto label$6546;
    label$6547:;
    {
    }
    goto label$6419;
    label$6546:;
    if( ADR$1 != 0x1.BFE3Cp+23 ) goto label$6548;
    label$6549:;
    {
    }
    goto label$6419;
    label$6548:;
    if( ADR$1 != 0x1.BFE3C4p+23 ) goto label$6550;
    label$6551:;
    {
    }
    goto label$6419;
    label$6550:;
    if( ADR$1 != 0x1.BFE3C8p+23 ) goto label$6552;
    label$6553:;
    {
    }
    label$6552:;
    label$6419:;
   }
  }
  label$6417:;
  label$6124:;
 }
 label$6123:;
}

void _ZN12SYSTEM_BUS_T5POKEWEdd( struct $12SYSTEM_BUS_T* THIS$1, double ADR$1, double V$1 )
{
 label$6554:;
 _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, ADR$1, (double)(((uint64)__builtin_nearbyint( V$1 )) & 255ull) );
 _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, ADR$1 + 0x1.p+0, (double)((((uint64)__builtin_nearbyint( V$1 )) & 65280ull) >> (8ll & 63ll)) );
 label$6555:;
}

double _ZN12SYSTEM_BUS_T8ISSYMBOLE8FBSTRINGd( struct $12SYSTEM_BUS_T* THIS$1, FBSTRING* S$1, double START$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6556:;
 label$6558:;
 {
  {
   uint64 TMP$3114$3;
   FBSTRING* vr$2 = fb_StrMid( (FBSTRING*)S$1, ((int64)__builtin_nearbyint( START$1 )), 1ll );
   uint32 vr$3 = fb_ASC( (FBSTRING*)vr$2, 1ll );
   TMP$3114$3 = (uint64)vr$3;
   goto label$6562;
   label$6563:;
   {
    goto label$6559;
   }
   goto label$6561;
   label$6564:;
   {
    START$1 = START$1 + 0x1.p+0;
   }
   goto label$6561;
   label$6562:;
   static const void* tmp$3115[10ll] = {
    &&label$6563,
    &&label$6563,
    &&label$6563,
    &&label$6563,
    &&label$6563,
    &&label$6563,
    &&label$6563,
    &&label$6563,
    &&label$6563,
    &&label$6563,
   };
   if( (TMP$3114$3 - 48ull) > 9ull ) goto label$6564;
   goto *tmp$3115[TMP$3114$3 - 48ull];
   label$6561:;
  }
 }
 label$6560:;
 goto label$6558;
 label$6559:;
 fb$result$1 = START$1;
 label$6557:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8ISNUMBERE8FBSTRINGd( struct $12SYSTEM_BUS_T* THIS$1, FBSTRING* S$1, double START$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6565:;
 int64 TMP$1;
 __builtin_memset( &TMP$1, 0, 8ll );
 TMP$1 = ((int64)__builtin_nearbyint( START$1 ));
 label$6567:;
 {
  {
   uint64 TMP$3116$3;
   FBSTRING* vr$3 = fb_StrMid( (FBSTRING*)&GET_DATA$, TMP$1, 1ll );
   uint32 vr$4 = fb_ASC( (FBSTRING*)vr$3, 1ll );
   TMP$3116$3 = (uint64)vr$4;
   goto label$6571;
   label$6572:;
   {
    TMP$1 = TMP$1 + 1ll;
   }
   goto label$6570;
   label$6573:;
   {
    TMP$1 = TMP$1 + 1ll;
   }
   goto label$6570;
   label$6574:;
   {
    TMP$1 = TMP$1 + 1ll;
   }
   goto label$6570;
   label$6575:;
   {
    goto label$6568;
   }
   goto label$6570;
   label$6571:;
   static const void* tmp$3117[67ll] = {
    &&label$6573,
    &&label$6575,
    &&label$6575,
    &&label$6575,
    &&label$6575,
    &&label$6573,
    &&label$6575,
    &&label$6573,
    &&label$6573,
    &&label$6575,
    &&label$6572,
    &&label$6572,
    &&label$6572,
    &&label$6572,
    &&label$6572,
    &&label$6572,
    &&label$6572,
    &&label$6572,
    &&label$6572,
    &&label$6572,
    &&label$6575,
    &&label$6575,
    &&label$6575,
    &&label$6575,
    &&label$6575,
    &&label$6575,
    &&label$6575,
    &&label$6575,
    &&label$6573,
    &&label$6575,
    &&label$6575,
    &&label$6575,
    &&label$6575,
    &&label$6575,
    &&label$6574,
    &&label$6575,
    &&label$6575,
    &&label$6575,
    &&label$6575,
    &&label$6575,
    &&label$6575,
    &&label$6575,
    &&label$6575,
    &&label$6575,
    &&label$6575,
    &&label$6575,
    &&label$6575,
    &&label$6575,
    &&label$6575,
    &&label$6575,
    &&label$6575,
    &&label$6575,
    &&label$6575,
    &&label$6575,
    &&label$6575,
    &&label$6575,
    &&label$6575,
    &&label$6575,
    &&label$6575,
    &&label$6575,
    &&label$6574,
    &&label$6575,
    &&label$6575,
    &&label$6575,
    &&label$6575,
    &&label$6575,
    &&label$6574,
   };
   if( (TMP$3116$3 - 38ull) > 66ull ) goto label$6575;
   goto *tmp$3117[TMP$3116$3 - 38ull];
   label$6570:;
  }
 }
 label$6569:;
 goto label$6567;
 label$6568:;
 FBSTRING* vr$10 = fb_StrMid( (FBSTRING*)&GET_DATA$, ((int64)__builtin_nearbyint( START$1 )), TMP$1 );
 double vr$11 = fb_VAL( (FBSTRING*)vr$10 );
 if( vr$11 <= 0x0p+0 ) goto label$6577;
 {
  FBSTRING* vr$13 = fb_StrMid( (FBSTRING*)&GET_DATA$, ((int64)__builtin_nearbyint( START$1 )), TMP$1 );
  double vr$14 = fb_VAL( (FBSTRING*)vr$13 );
  fb$result$1 = vr$14;
 }
 goto label$6576;
 label$6577:;
 {
  fb$result$1 = 0x0p+0;
 }
 label$6576:;
 label$6566:;
 return fb$result$1;
}

void _ZN12SYSTEM_BUS_T6GETXYZEv( struct $12SYSTEM_BUS_T* THIS$1 )
{
 FBSTRING TMP$3118$1;
 FBSTRING TMP$3121$1;
 FBSTRING TMP$3123$1;
 label$6578:;
 __builtin_memset( &TMP$3118$1, 0, 24ll );
 fb_StrAssign( (void*)&TMP$3118$1, -1ll, (void*)&GET_DATA$, -1ll, 0 );
 double vr$3 = _ZN12SYSTEM_BUS_T8ISNUMBERE8FBSTRINGd( THIS$1, &TMP$3118$1, 0x1.Cp+2 );
 *(double*)((int64)(double*)MEM64$ + 394840ll) = vr$3;
 fb_StrDelete( (FBSTRING*)&TMP$3118$1 );
 if( *(double*)((int64)(double*)MEM64$ + 394840ll) != 0x0p+0 ) goto label$6581;
 {
  FBSTRING TMP$3119$2;
  FBSTRING* vr$5 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394840ll) );
  int64 vr$6 = fb_StrLen( (void*)vr$5, -1ll );
  __builtin_memset( &TMP$3119$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$3119$2, -1ll, (void*)&GET_DATA$, -1ll, 0 );
  double vr$12 = _ZN12SYSTEM_BUS_T8ISNUMBERE8FBSTRINGd( THIS$1, &TMP$3119$2, (double)(vr$6 + 7ll) );
  *(double*)((int64)(double*)MEM64$ + 394840ll) = -vr$12 + 0x0p+0;
  fb_StrDelete( (FBSTRING*)&TMP$3119$2 );
 }
 goto label$6580;
 label$6581:;
 FBSTRING* vr$16 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394840ll) );
 int64 vr$17 = fb_StrLen( (void*)vr$16, -1ll );
 FBSTRING* vr$19 = fb_StrMid( (FBSTRING*)&GET_DATA$, vr$17 + 7ll, 1ll );
 int32 vr$20 = fb_StrCompare( (void*)vr$19, -1ll, (void*)"-", 2ll );
 if( (int64)vr$20 != 0ll ) goto label$6582;
 {
  FBSTRING TMP$3120$2;
  FBSTRING* vr$22 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394840ll) );
  int64 vr$23 = fb_StrLen( (void*)vr$22, -1ll );
  __builtin_memset( &TMP$3120$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$3120$2, -1ll, (void*)&GET_DATA$, -1ll, 0 );
  double vr$29 = _ZN12SYSTEM_BUS_T8ISNUMBERE8FBSTRINGd( THIS$1, &TMP$3120$2, (double)(vr$23 + 8ll) );
  *(double*)((int64)(double*)MEM64$ + 394840ll) = -vr$29 + 0x0p+0;
  fb_StrDelete( (FBSTRING*)&TMP$3120$2 );
 }
 label$6582:;
 label$6580:;
 FBSTRING* vr$33 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394840ll) );
 int64 vr$34 = fb_StrLen( (void*)vr$33, -1ll );
 __builtin_memset( &TMP$3121$1, 0, 24ll );
 fb_StrAssign( (void*)&TMP$3121$1, -1ll, (void*)&GET_DATA$, -1ll, 0 );
 double vr$40 = _ZN12SYSTEM_BUS_T8ISNUMBERE8FBSTRINGd( THIS$1, &TMP$3121$1, (double)(vr$34 + 9ll) );
 *(double*)((int64)(double*)MEM64$ + 394848ll) = vr$40;
 fb_StrDelete( (FBSTRING*)&TMP$3121$1 );
 FBSTRING* vr$42 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394840ll) );
 int64 vr$43 = fb_StrLen( (void*)vr$42, -1ll );
 FBSTRING* vr$45 = fb_StrMid( (FBSTRING*)&GET_DATA$, vr$43 + 9ll, 1ll );
 int32 vr$46 = fb_StrCompare( (void*)vr$45, -1ll, (void*)"-", 2ll );
 if( (int64)vr$46 != 0ll ) goto label$6584;
 {
  FBSTRING TMP$3122$2;
  FBSTRING* vr$48 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394840ll) );
  int64 vr$49 = fb_StrLen( (void*)vr$48, -1ll );
  __builtin_memset( &TMP$3122$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$3122$2, -1ll, (void*)&GET_DATA$, -1ll, 0 );
  double vr$55 = _ZN12SYSTEM_BUS_T8ISNUMBERE8FBSTRINGd( THIS$1, &TMP$3122$2, (double)(vr$49 + 10ll) );
  *(double*)((int64)(double*)MEM64$ + 394848ll) = -vr$55 + 0x0p+0;
  fb_StrDelete( (FBSTRING*)&TMP$3122$2 );
 }
 label$6584:;
 label$6583:;
 FBSTRING* vr$59 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394848ll) );
 int64 vr$60 = fb_StrLen( (void*)vr$59, -1ll );
 __builtin_memset( &TMP$3123$1, 0, 24ll );
 fb_StrAssign( (void*)&TMP$3123$1, -1ll, (void*)&GET_DATA$, -1ll, 0 );
 double vr$66 = _ZN12SYSTEM_BUS_T8ISNUMBERE8FBSTRINGd( THIS$1, &TMP$3123$1, (double)(vr$60 + 13ll) );
 *(double*)((int64)(double*)MEM64$ + 394856ll) = vr$66;
 fb_StrDelete( (FBSTRING*)&TMP$3123$1 );
 FBSTRING* vr$68 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394848ll) );
 int64 vr$69 = fb_StrLen( (void*)vr$68, -1ll );
 FBSTRING* vr$71 = fb_StrMid( (FBSTRING*)&GET_DATA$, vr$69 + 13ll, 1ll );
 int32 vr$72 = fb_StrCompare( (void*)vr$71, -1ll, (void*)"-", 2ll );
 if( (int64)vr$72 != 0ll ) goto label$6586;
 {
  FBSTRING TMP$3124$2;
  FBSTRING* vr$74 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394848ll) );
  int64 vr$75 = fb_StrLen( (void*)vr$74, -1ll );
  __builtin_memset( &TMP$3124$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$3124$2, -1ll, (void*)&GET_DATA$, -1ll, 0 );
  double vr$81 = _ZN12SYSTEM_BUS_T8ISNUMBERE8FBSTRINGd( THIS$1, &TMP$3124$2, (double)(vr$75 + 14ll) );
  *(double*)((int64)(double*)MEM64$ + 394856ll) = vr$81 + 0x0p+0;
  fb_StrDelete( (FBSTRING*)&TMP$3124$2 );
 }
 label$6586:;
 label$6585:;
 label$6579:;
}

double _ZN12SYSTEM_BUS_T6PEEK64Ed( struct $12SYSTEM_BUS_T* THIS$1, double ADR$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6587:;
 {
  if( ADR$1 < 0x1.Cp+15 ) goto label$6590;
  if( ADR$1 > 0x1.FFFEp+15 ) goto label$6590;
  label$6591:;
  {
   fb$result$1 = *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( ADR$1 + -0x1.Cp+15 )) << (3ll & 63ll)));
  }
  goto label$6589;
  label$6590:;
  if( ADR$1 < 0x1.4p+15 ) goto label$6592;
  if( ADR$1 > 0x1.7FFEp+15 ) goto label$6592;
  label$6593:;
  {
   fb$result$1 = *(double*)((uint8*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( ADR$1 + -0x1.4p+15 )) << (3ll & 63ll))) + 131072ll);
  }
  goto label$6589;
  label$6592:;
  if( ADR$1 < 0x1.Bp+15 ) goto label$6594;
  if( ADR$1 > 0x1.B7FEp+15 ) goto label$6594;
  label$6595:;
  {
   fb$result$1 = *(double*)((uint8*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( ADR$1 + -0x1.Bp+15 )) << (3ll & 63ll))) + 262144ll);
  }
  goto label$6589;
  label$6594:;
  if( ADR$1 < 0x1.Ap+15 ) goto label$6596;
  if( ADR$1 > 0x1.A7FEp+15 ) goto label$6596;
  label$6597:;
  {
   int64 REG$3;
   REG$3 = ((int64)__builtin_nearbyint( ADR$1 )) & 63ll;
   if( REG$3 != 18ll ) goto label$6599;
   {
    fb$result$1 = 0x0p+0;
   }
   goto label$6598;
   label$6599:;
   {
    fb$result$1 = 0x1.FEp+7;
    label$6598:;
   }
  }
  goto label$6589;
  label$6596:;
  {
   fb$result$1 = *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( ADR$1 )) << (3ll & 63ll)));
  }
  label$6600:;
  label$6589:;
 }
 label$6588:;
 return fb$result$1;
}

void _ZN12SYSTEM_BUS_T6POKE64Edd( struct $12SYSTEM_BUS_T* THIS$1, double ADR$1, double V$1 )
{
 label$6601:;
 *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( ADR$1 )) << (3ll & 63ll))) = V$1;
 if( ((int64)-(ADR$1 >= 0x1.Bp+15) & (int64)-(ADR$1 <= 0x1.B7FEp+15)) == 0ll ) goto label$6604;
 goto label$6605;
 label$6604:;
 goto label$6606;
 label$6605:;
 ADR$1 = ADR$1 + -0x1.Bp+15;
 *(double*)((uint8*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( ADR$1 )) << (3ll & 63ll))) + 16850952ll) = V$1;
 ADR$1 = ADR$1 + *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll)));
 V$1 = *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( ADR$1 )) << (3ll & 63ll)));
 label$6606:;
 if( ADR$1 != 0x1.8Ep+7 ) goto label$6608;
 goto label$6609;
 label$6608:;
 goto label$6610;
 label$6609:;
 label$6610:;
 if( ADR$1 != (double)(int64)FCOLOR$ ) goto label$6612;
 goto label$6613;
 label$6612:;
 goto label$6614;
 label$6613:;
 if( V$1 != (double)(int64)*(uint8*)NIBBLES$ ) goto label$6616;
 goto label$6617;
 label$6616:;
 if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$6619;
 goto label$6620;
 label$6619:;
 if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) ) goto label$6622;
 goto label$6623;
 label$6622:;
 if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) ) goto label$6625;
 goto label$6626;
 label$6625:;
 if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) ) goto label$6628;
 goto label$6629;
 label$6628:;
 if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) ) goto label$6631;
 goto label$6632;
 label$6631:;
 if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) ) goto label$6634;
 goto label$6635;
 label$6634:;
 if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) ) goto label$6637;
 goto label$6638;
 label$6637:;
 if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) ) goto label$6640;
 goto label$6641;
 label$6640:;
 if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) ) goto label$6643;
 goto label$6644;
 label$6643:;
 if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) ) goto label$6646;
 goto label$6647;
 label$6646:;
 if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) ) goto label$6649;
 goto label$6650;
 label$6649:;
 if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) ) goto label$6652;
 goto label$6653;
 label$6652:;
 if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) ) goto label$6655;
 goto label$6656;
 label$6655:;
 if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) ) goto label$6658;
 goto label$6659;
 label$6658:;
 if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) ) goto label$6661;
 goto label$6662;
 label$6661:;
 if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$6664;
 goto label$6665;
 label$6664:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$6667;
 goto label$6668;
 label$6667:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$6670;
 goto label$6671;
 label$6670:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$6673;
 goto label$6674;
 label$6673:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$6676;
 goto label$6677;
 label$6676:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$6679;
 goto label$6680;
 label$6679:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$6682;
 goto label$6683;
 label$6682:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$6685;
 goto label$6686;
 label$6685:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$6688;
 goto label$6689;
 label$6688:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$6691;
 goto label$6692;
 label$6691:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$6694;
 goto label$6695;
 label$6694:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$6697;
 goto label$6698;
 label$6697:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$6700;
 goto label$6701;
 label$6700:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$6703;
 goto label$6704;
 label$6703:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$6706;
 goto label$6707;
 label$6706:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$6709;
 goto label$6710;
 label$6709:;
 if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$6712;
 goto label$6713;
 label$6712:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$6715;
 goto label$6716;
 label$6715:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$6718;
 goto label$6719;
 label$6718:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$6721;
 goto label$6722;
 label$6721:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$6724;
 goto label$6725;
 label$6724:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$6727;
 goto label$6728;
 label$6727:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$6730;
 goto label$6731;
 label$6730:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$6733;
 goto label$6734;
 label$6733:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$6736;
 goto label$6737;
 label$6736:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$6739;
 goto label$6740;
 label$6739:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$6742;
 goto label$6743;
 label$6742:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$6745;
 goto label$6746;
 label$6745:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$6748;
 goto label$6749;
 label$6748:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$6751;
 goto label$6752;
 label$6751:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$6754;
 goto label$6755;
 label$6754:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$6757;
 goto label$6758;
 label$6757:;
 if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$6760;
 goto label$6761;
 label$6760:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$6763;
 goto label$6764;
 label$6763:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$6766;
 goto label$6767;
 label$6766:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$6769;
 goto label$6770;
 label$6769:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$6772;
 goto label$6773;
 label$6772:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$6775;
 goto label$6776;
 label$6775:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$6778;
 goto label$6779;
 label$6778:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$6781;
 goto label$6782;
 label$6781:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$6784;
 goto label$6785;
 label$6784:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$6787;
 goto label$6788;
 label$6787:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$6790;
 goto label$6791;
 label$6790:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$6793;
 goto label$6794;
 label$6793:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$6796;
 goto label$6797;
 label$6796:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$6799;
 goto label$6800;
 label$6799:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$6802;
 goto label$6803;
 label$6802:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$6805;
 goto label$6806;
 label$6805:;
 if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$6808;
 goto label$6809;
 label$6808:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$6811;
 goto label$6812;
 label$6811:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$6814;
 goto label$6815;
 label$6814:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$6817;
 goto label$6818;
 label$6817:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$6820;
 goto label$6821;
 label$6820:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$6823;
 goto label$6824;
 label$6823:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$6826;
 goto label$6827;
 label$6826:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$6829;
 goto label$6830;
 label$6829:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$6832;
 goto label$6833;
 label$6832:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$6835;
 goto label$6836;
 label$6835:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$6838;
 goto label$6839;
 label$6838:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$6841;
 goto label$6842;
 label$6841:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$6844;
 goto label$6845;
 label$6844:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$6847;
 goto label$6848;
 label$6847:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$6850;
 goto label$6851;
 label$6850:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$6853;
 goto label$6854;
 label$6853:;
 if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$6856;
 goto label$6857;
 label$6856:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$6859;
 goto label$6860;
 label$6859:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$6862;
 goto label$6863;
 label$6862:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$6865;
 goto label$6866;
 label$6865:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$6868;
 goto label$6869;
 label$6868:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$6871;
 goto label$6872;
 label$6871:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$6874;
 goto label$6875;
 label$6874:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$6877;
 goto label$6878;
 label$6877:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$6880;
 goto label$6881;
 label$6880:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$6883;
 goto label$6884;
 label$6883:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$6886;
 goto label$6887;
 label$6886:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$6889;
 goto label$6890;
 label$6889:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$6892;
 goto label$6893;
 label$6892:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$6895;
 goto label$6896;
 label$6895:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$6898;
 goto label$6899;
 label$6898:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$6901;
 goto label$6902;
 label$6901:;
 label$6903:;
 if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$6905;
 goto label$6906;
 label$6905:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$6908;
 goto label$6909;
 label$6908:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$6911;
 goto label$6912;
 label$6911:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$6914;
 goto label$6915;
 label$6914:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$6917;
 goto label$6918;
 label$6917:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$6920;
 goto label$6921;
 label$6920:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$6923;
 goto label$6924;
 label$6923:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$6926;
 goto label$6927;
 label$6926:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$6929;
 goto label$6930;
 label$6929:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$6932;
 goto label$6933;
 label$6932:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$6935;
 goto label$6936;
 label$6935:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$6938;
 goto label$6939;
 label$6938:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$6941;
 goto label$6942;
 label$6941:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$6944;
 goto label$6945;
 label$6944:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$6947;
 goto label$6948;
 label$6947:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$6950;
 goto label$6951;
 label$6950:;
 if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) ) goto label$6953;
 goto label$6954;
 label$6953:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$6956;
 goto label$6957;
 label$6956:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$6959;
 goto label$6960;
 label$6959:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$6962;
 goto label$6963;
 label$6962:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$6965;
 goto label$6966;
 label$6965:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$6968;
 goto label$6969;
 label$6968:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$6971;
 goto label$6972;
 label$6971:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$6974;
 goto label$6975;
 label$6974:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$6977;
 goto label$6978;
 label$6977:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$6980;
 goto label$6981;
 label$6980:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$6983;
 goto label$6984;
 label$6983:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$6986;
 goto label$6987;
 label$6986:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$6989;
 goto label$6990;
 label$6989:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$6992;
 goto label$6993;
 label$6992:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$6995;
 goto label$6996;
 label$6995:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$6998;
 goto label$6999;
 label$6998:;
 if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$7001;
 goto label$7002;
 label$7001:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$7004;
 goto label$7005;
 label$7004:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$7007;
 goto label$7008;
 label$7007:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$7010;
 goto label$7011;
 label$7010:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$7013;
 goto label$7014;
 label$7013:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$7016;
 goto label$7017;
 label$7016:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$7019;
 goto label$7020;
 label$7019:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$7022;
 goto label$7023;
 label$7022:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$7025;
 goto label$7026;
 label$7025:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$7028;
 goto label$7029;
 label$7028:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$7031;
 goto label$7032;
 label$7031:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$7034;
 goto label$7035;
 label$7034:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$7037;
 goto label$7038;
 label$7037:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$7040;
 goto label$7041;
 label$7040:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$7043;
 goto label$7044;
 label$7043:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$7046;
 goto label$7047;
 label$7046:;
 if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$7049;
 goto label$7050;
 label$7049:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$7052;
 goto label$7053;
 label$7052:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$7055;
 goto label$7056;
 label$7055:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$7058;
 goto label$7059;
 label$7058:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$7061;
 goto label$7062;
 label$7061:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$7064;
 goto label$7065;
 label$7064:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$7067;
 goto label$7068;
 label$7067:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$7070;
 goto label$7071;
 label$7070:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$7073;
 goto label$7074;
 label$7073:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$7076;
 goto label$7077;
 label$7076:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$7079;
 goto label$7080;
 label$7079:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$7082;
 goto label$7083;
 label$7082:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$7085;
 goto label$7086;
 label$7085:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$7088;
 goto label$7089;
 label$7088:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$7091;
 goto label$7092;
 label$7091:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$7094;
 goto label$7095;
 label$7094:;
 if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$7097;
 goto label$7098;
 label$7097:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$7100;
 goto label$7101;
 label$7100:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$7103;
 goto label$7104;
 label$7103:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$7106;
 goto label$7107;
 label$7106:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$7109;
 goto label$7110;
 label$7109:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$7112;
 goto label$7113;
 label$7112:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$7115;
 goto label$7116;
 label$7115:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$7118;
 goto label$7119;
 label$7118:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$7121;
 goto label$7122;
 label$7121:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$7124;
 goto label$7125;
 label$7124:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$7127;
 goto label$7128;
 label$7127:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$7130;
 goto label$7131;
 label$7130:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$7133;
 goto label$7134;
 label$7133:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$7136;
 goto label$7137;
 label$7136:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$7139;
 goto label$7140;
 label$7139:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$7142;
 goto label$7143;
 label$7142:;
 if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) ) goto label$7145;
 goto label$7146;
 label$7145:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$7148;
 goto label$7149;
 label$7148:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$7151;
 goto label$7152;
 label$7151:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$7154;
 goto label$7155;
 label$7154:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$7157;
 goto label$7158;
 label$7157:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$7160;
 goto label$7161;
 label$7160:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$7163;
 goto label$7164;
 label$7163:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$7166;
 goto label$7167;
 label$7166:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$7169;
 goto label$7170;
 label$7169:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$7172;
 goto label$7173;
 label$7172:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$7175;
 goto label$7176;
 label$7175:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$7178;
 goto label$7179;
 label$7178:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$7181;
 goto label$7182;
 label$7181:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$7184;
 goto label$7185;
 label$7184:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$7187;
 goto label$7188;
 label$7187:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$7190;
 goto label$7191;
 label$7190:;
 if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$7193;
 goto label$7194;
 label$7193:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$7196;
 goto label$7197;
 label$7196:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$7199;
 goto label$7200;
 label$7199:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$7202;
 goto label$7203;
 label$7202:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$7205;
 goto label$7206;
 label$7205:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$7208;
 goto label$7209;
 label$7208:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$7211;
 goto label$7212;
 label$7211:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$7214;
 goto label$7215;
 label$7214:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$7217;
 goto label$7218;
 label$7217:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$7220;
 goto label$7221;
 label$7220:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$7223;
 goto label$7224;
 label$7223:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$7226;
 goto label$7227;
 label$7226:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$7229;
 goto label$7230;
 label$7229:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$7232;
 goto label$7233;
 label$7232:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$7235;
 goto label$7236;
 label$7235:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$7238;
 goto label$7239;
 label$7238:;
 if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$7241;
 goto label$7242;
 label$7241:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$7244;
 goto label$7245;
 label$7244:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$7247;
 goto label$7248;
 label$7247:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$7250;
 goto label$7251;
 label$7250:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$7253;
 goto label$7254;
 label$7253:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$7256;
 goto label$7257;
 label$7256:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$7259;
 goto label$7260;
 label$7259:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$7262;
 goto label$7263;
 label$7262:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$7265;
 goto label$7266;
 label$7265:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$7268;
 goto label$7269;
 label$7268:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$7271;
 goto label$7272;
 label$7271:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$7274;
 goto label$7275;
 label$7274:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$7277;
 goto label$7278;
 label$7277:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$7280;
 goto label$7281;
 label$7280:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$7283;
 goto label$7284;
 label$7283:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$7286;
 goto label$7287;
 label$7286:;
 if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$7289;
 goto label$7290;
 label$7289:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$7292;
 goto label$7293;
 label$7292:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$7295;
 goto label$7296;
 label$7295:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$7298;
 goto label$7299;
 label$7298:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$7301;
 goto label$7302;
 label$7301:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$7304;
 goto label$7305;
 label$7304:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$7307;
 goto label$7308;
 label$7307:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$7310;
 goto label$7311;
 label$7310:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$7313;
 goto label$7314;
 label$7313:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$7316;
 goto label$7317;
 label$7316:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$7319;
 goto label$7320;
 label$7319:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$7322;
 goto label$7323;
 label$7322:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$7325;
 goto label$7326;
 label$7325:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$7328;
 goto label$7329;
 label$7328:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$7331;
 goto label$7332;
 label$7331:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$7334;
 goto label$7335;
 label$7334:;
 if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$7337;
 goto label$7338;
 label$7337:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$7340;
 goto label$7341;
 label$7340:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$7343;
 goto label$7344;
 label$7343:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$7346;
 goto label$7347;
 label$7346:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$7349;
 goto label$7350;
 label$7349:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$7352;
 goto label$7353;
 label$7352:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$7355;
 goto label$7356;
 label$7355:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$7358;
 goto label$7359;
 label$7358:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$7361;
 goto label$7362;
 label$7361:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$7364;
 goto label$7365;
 label$7364:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$7367;
 goto label$7368;
 label$7367:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$7370;
 goto label$7371;
 label$7370:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$7373;
 goto label$7374;
 label$7373:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$7376;
 goto label$7377;
 label$7376:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$7379;
 goto label$7380;
 label$7379:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$7382;
 goto label$7383;
 label$7382:;
 goto label$6614;
 label$6617:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$6614;
 label$6620:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$6614;
 label$6623:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$6614;
 label$6626:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$6614;
 label$6629:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$6614;
 label$6632:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$6614;
 label$6635:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$6614;
 label$6638:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$6614;
 label$6641:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$6614;
 label$6644:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$6614;
 label$6647:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$6614;
 label$6650:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$6614;
 label$6653:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$6614;
 label$6656:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$6614;
 label$6659:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$6614;
 label$6662:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$6614;
 label$6665:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$6614;
 label$6668:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$6614;
 label$6671:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$6614;
 label$6674:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$6614;
 label$6677:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$6614;
 label$6680:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$6614;
 label$6683:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$6614;
 label$6686:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$6614;
 label$6689:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$6614;
 label$6692:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$6614;
 label$6695:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$6614;
 label$6698:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$6614;
 label$6701:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$6614;
 label$6704:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$6614;
 label$6707:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$6614;
 label$6710:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$6614;
 label$6713:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$6614;
 label$6716:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$6614;
 label$6719:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$6614;
 label$6722:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$6614;
 label$6725:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$6614;
 label$6728:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$6614;
 label$6731:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$6614;
 label$6734:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$6614;
 label$6737:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$6614;
 label$6740:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$6614;
 label$6743:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$6614;
 label$6746:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$6614;
 label$6749:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$6614;
 label$6752:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$6614;
 label$6755:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$6614;
 label$6758:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$6614;
 label$6761:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$6614;
 label$6764:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$6614;
 label$6767:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$6614;
 label$6770:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$6614;
 label$6773:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$6614;
 label$6776:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$6614;
 label$6779:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$6614;
 label$6782:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$6614;
 label$6785:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$6614;
 label$6788:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$6614;
 label$6791:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$6614;
 label$6794:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$6614;
 label$6797:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$6614;
 label$6800:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$6614;
 label$6803:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$6614;
 label$6806:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$6614;
 label$6809:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$6614;
 label$6812:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$6614;
 label$6815:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$6614;
 label$6818:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$6614;
 label$6821:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$6614;
 label$6824:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$6614;
 label$6827:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$6614;
 label$6830:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$6614;
 label$6833:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$6614;
 label$6836:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$6614;
 label$6839:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$6614;
 label$6842:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$6614;
 label$6845:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$6614;
 label$6848:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$6614;
 label$6851:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$6614;
 label$6854:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$6614;
 label$6857:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$6614;
 label$6860:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$6614;
 label$6863:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$6614;
 label$6866:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$6614;
 label$6869:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$6614;
 label$6872:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$6614;
 label$6875:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$6614;
 label$6878:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$6614;
 label$6881:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$6614;
 label$6884:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$6614;
 label$6887:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$6614;
 label$6890:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$6614;
 label$6893:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$6614;
 label$6896:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$6614;
 label$6899:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$6614;
 label$6902:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$6614;
 label$6906:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$6614;
 label$6909:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$6614;
 label$6912:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$6614;
 label$6915:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$6614;
 label$6918:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$6614;
 label$6921:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$6614;
 label$6924:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$6614;
 label$6927:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$6614;
 label$6930:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$6614;
 label$6933:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$6614;
 label$6936:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$6614;
 label$6939:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$6614;
 label$6942:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$6614;
 label$6945:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$6614;
 label$6948:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$6614;
 label$6951:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$6614;
 label$6954:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$6614;
 label$6957:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$6614;
 label$6960:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$6614;
 label$6963:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$6614;
 label$6966:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$6614;
 label$6969:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$6614;
 label$6972:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$6614;
 label$6975:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$6614;
 label$6978:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$6614;
 label$6981:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$6614;
 label$6984:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$6614;
 label$6987:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$6614;
 label$6990:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$6614;
 label$6993:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$6614;
 label$6996:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$6614;
 label$6999:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$6614;
 label$7002:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$6614;
 label$7005:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$6614;
 label$7008:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$6614;
 label$7011:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$6614;
 label$7014:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$6614;
 label$7017:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$6614;
 label$7020:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$6614;
 label$7023:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$6614;
 label$7026:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$6614;
 label$7029:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$6614;
 label$7032:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$6614;
 label$7035:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$6614;
 label$7038:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$6614;
 label$7041:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$6614;
 label$7044:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$6614;
 label$7047:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$6614;
 label$7050:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$6614;
 label$7053:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$6614;
 label$7056:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$6614;
 label$7059:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$6614;
 label$7062:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$6614;
 label$7065:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$6614;
 label$7068:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$6614;
 label$7071:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$6614;
 label$7074:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$6614;
 label$7077:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$6614;
 label$7080:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$6614;
 label$7083:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$6614;
 label$7086:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$6614;
 label$7089:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$6614;
 label$7092:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$6614;
 label$7095:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$6614;
 label$7098:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$6614;
 label$7101:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$6614;
 label$7104:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$6614;
 label$7107:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$6614;
 label$7110:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$6614;
 label$7113:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$6614;
 label$7116:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$6614;
 label$7119:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$6614;
 label$7122:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$6614;
 label$7125:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$6614;
 label$7128:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$6614;
 label$7131:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$6614;
 label$7134:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$6614;
 label$7137:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$6614;
 label$7140:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$6614;
 label$7143:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$6614;
 label$7146:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$6614;
 label$7149:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$6614;
 label$7152:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$6614;
 label$7155:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$6614;
 label$7158:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$6614;
 label$7161:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$6614;
 label$7164:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$6614;
 label$7167:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$6614;
 label$7170:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$6614;
 label$7173:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$6614;
 label$7176:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$6614;
 label$7179:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$6614;
 label$7182:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$6614;
 label$7185:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$6614;
 label$7188:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$6614;
 label$7191:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$6614;
 label$7194:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$6614;
 label$7197:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$6614;
 label$7200:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$6614;
 label$7203:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$6614;
 label$7206:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$6614;
 label$7209:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$6614;
 label$7212:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$6614;
 label$7215:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$6614;
 label$7218:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$6614;
 label$7221:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$6614;
 label$7224:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$6614;
 label$7227:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$6614;
 label$7230:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$6614;
 label$7233:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$6614;
 label$7236:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$6614;
 label$7239:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$6614;
 label$7242:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$6614;
 label$7245:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$6614;
 label$7248:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$6614;
 label$7251:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$6614;
 label$7254:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$6614;
 label$7257:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$6614;
 label$7260:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$6614;
 label$7263:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.Cp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.Cp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.Cp+7 );
 goto label$6614;
 label$7266:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.82p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.82p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.82p+7 );
 goto label$6614;
 label$7269:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.44p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.44p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.44p+7 );
 goto label$6614;
 label$7272:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.06p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.06p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.06p+7 );
 goto label$6614;
 label$7275:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.9p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.9p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.9p+6 );
 goto label$6614;
 label$7278:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.14p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.14p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.14p+6 );
 goto label$6614;
 label$7281:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.3p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.3p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.3p+5 );
 goto label$6614;
 label$7284:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.Cp+2 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.Cp+2 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.Cp+2 );
 goto label$6614;
 label$7287:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$6614;
 label$7290:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$6614;
 label$7293:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$6614;
 label$7296:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$6614;
 label$7299:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$6614;
 label$7302:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$6614;
 label$7305:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$6614;
 label$7308:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$6614;
 label$7311:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$6614;
 label$7314:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$6614;
 label$7317:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$6614;
 label$7320:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$6614;
 label$7323:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$6614;
 label$7326:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$6614;
 label$7329:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$6614;
 label$7332:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$6614;
 label$7335:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$6614;
 label$7338:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$6614;
 label$7341:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$6614;
 label$7344:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$6614;
 label$7347:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$6614;
 label$7350:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$6614;
 label$7353:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$6614;
 label$7356:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$6614;
 label$7359:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$6614;
 label$7362:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.76p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$6614;
 label$7365:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$6614;
 label$7368:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$6614;
 label$7371:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$6614;
 label$7374:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$6614;
 label$7377:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$6614;
 label$7380:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$6614;
 label$7383:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.4p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.4p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.4p+5 );
 goto label$6614;
 label$6614:;
 if( ADR$1 != (double)(int64)VMCSB$ ) goto label$7385;
 {
  {
   if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) ) goto label$7387;
   label$7388:;
   {
    *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) = (double)*(uint8*)NIBBLES$;
    *(double*)((int64)(double*)MEM64$ + ((int64)HIBASE$ << (3ll & 63ll))) = (double)((((uint64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) )) & 65280ull) >> (8ll & 63ll));
   }
   goto label$7386;
   label$7387:;
   if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$7389;
   label$7390:;
   {
    *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) = (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll));
    *(double*)((int64)(double*)MEM64$ + ((int64)HIBASE$ << (3ll & 63ll))) = (double)((((uint64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) )) & 65280ull) >> (8ll & 63ll));
   }
   goto label$7386;
   label$7389:;
   if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$7391;
   label$7392:;
   {
    *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) = (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll));
    *(double*)((int64)(double*)MEM64$ + ((int64)HIBASE$ << (3ll & 63ll))) = (double)((((uint64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) )) & 65280ull) >> (8ll & 63ll));
   }
   goto label$7386;
   label$7391:;
   if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$7393;
   label$7394:;
   {
    *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) = (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll));
    *(double*)((int64)(double*)MEM64$ + ((int64)HIBASE$ << (3ll & 63ll))) = (double)((((uint64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) )) & 65280ull) >> (8ll & 63ll));
   }
   goto label$7386;
   label$7393:;
   if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$7395;
   label$7396:;
   {
    *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) = (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll));
    *(double*)((int64)(double*)MEM64$ + ((int64)HIBASE$ << (3ll & 63ll))) = (double)((((uint64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) )) & 65280ull) >> (8ll & 63ll));
   }
   goto label$7386;
   label$7395:;
   if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$7397;
   label$7398:;
   {
    *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) = (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)));
    *(double*)((int64)(double*)MEM64$ + ((int64)HIBASE$ << (3ll & 63ll))) = (double)((((uint64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) )) & 65280ull) >> (8ll & 63ll));
   }
   goto label$7386;
   label$7397:;
   if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$7399;
   label$7400:;
   {
    *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) = (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)));
    *(double*)((int64)(double*)MEM64$ + ((int64)HIBASE$ << (3ll & 63ll))) = (double)((((uint64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) )) & 65280ull) >> (8ll & 63ll));
   }
   goto label$7386;
   label$7399:;
   if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$7401;
   label$7402:;
   {
    *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) = (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)));
    *(double*)((int64)(double*)MEM64$ + ((int64)HIBASE$ << (3ll & 63ll))) = (double)((((uint64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) )) & 65280ull) >> (8ll & 63ll));
   }
   goto label$7386;
   label$7401:;
   if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$7403;
   label$7404:;
   {
    *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) = (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll));
    *(double*)((int64)(double*)MEM64$ + ((int64)HIBASE$ << (3ll & 63ll))) = (double)((((uint64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) )) & 65280ull) >> (8ll & 63ll));
   }
   goto label$7386;
   label$7403:;
   if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$7405;
   label$7406:;
   {
    *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) = (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)));
    *(double*)((int64)(double*)MEM64$ + ((int64)HIBASE$ << (3ll & 63ll))) = (double)((((uint64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) )) & 65280ull) >> (8ll & 63ll));
   }
   goto label$7386;
   label$7405:;
   if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$7407;
   label$7408:;
   {
    *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) = (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)));
    *(double*)((int64)(double*)MEM64$ + ((int64)HIBASE$ << (3ll & 63ll))) = (double)((((uint64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) )) & 65280ull) >> (8ll & 63ll));
   }
   goto label$7386;
   label$7407:;
   if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$7409;
   label$7410:;
   {
    *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) = (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)));
    *(double*)((int64)(double*)MEM64$ + ((int64)HIBASE$ << (3ll & 63ll))) = (double)((((uint64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) )) & 65280ull) >> (8ll & 63ll));
   }
   goto label$7386;
   label$7409:;
   if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$7411;
   label$7412:;
   {
    *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) = (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll));
    *(double*)((int64)(double*)MEM64$ + ((int64)HIBASE$ << (3ll & 63ll))) = (double)((((uint64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) )) & 65280ull) >> (8ll & 63ll));
   }
   goto label$7386;
   label$7411:;
   if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$7413;
   label$7414:;
   {
    *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) = (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)));
    *(double*)((int64)(double*)MEM64$ + ((int64)HIBASE$ << (3ll & 63ll))) = (double)((((uint64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) )) & 65280ull) >> (8ll & 63ll));
   }
   goto label$7386;
   label$7413:;
   if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$7415;
   label$7416:;
   {
    *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) = (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)));
    *(double*)((int64)(double*)MEM64$ + 5184ll) = (double)((((uint64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) )) & 65280ull) >> (8ll & 63ll));
   }
   goto label$7386;
   label$7415:;
   if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$7417;
   label$7418:;
   {
    *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) = (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)));
    *(double*)((int64)(double*)MEM64$ + ((int64)HIBASE$ << (3ll & 63ll))) = (double)((((uint64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) )) & 65280ull) >> (8ll & 63ll));
   }
   label$7417:;
   label$7386:;
  }
 }
 goto label$7384;
 label$7385:;
 if( ((((((((int64)-(ADR$1 == (double)(int64)SP0X$) | (int64)-(ADR$1 == (double)(int64)SP1X$)) | (int64)-(ADR$1 == (double)(int64)SP2X$)) | (int64)-(ADR$1 == (double)(int64)SP3X$)) | (int64)-(ADR$1 == (double)(int64)SP4X$)) | (int64)-(ADR$1 == (double)(int64)SP5X$)) | (int64)-(ADR$1 == (double)(int64)SP6X$)) | (int64)-(ADR$1 == (double)(int64)SP7X$)) == 0ll ) goto label$7419;
 {
  *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( ADR$1 )) << (3ll & 63ll))) = V$1;
 }
 goto label$7384;
 label$7419:;
 if( ((((((((int64)-(ADR$1 == (double)(int64)SP0Y$) | (int64)-(ADR$1 == (double)(int64)SP1Y$)) | (int64)-(ADR$1 == (double)(int64)SP2Y$)) | (int64)-(ADR$1 == (double)(int64)SP3Y$)) | (int64)-(ADR$1 == (double)(int64)SP4Y$)) | (int64)-(ADR$1 == (double)(int64)SP5Y$)) | (int64)-(ADR$1 == (double)(int64)SP6Y$)) | (int64)-(ADR$1 == (double)(int64)SP7Y$)) == 0ll ) goto label$7420;
 {
  *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( ADR$1 )) << (3ll & 63ll))) = V$1;
 }
 goto label$7384;
 label$7420:;
 if( ((((((((int64)-(ADR$1 == (double)(int64)SP0COL$) | (int64)-(ADR$1 == (double)(int64)SP1COL$)) | (int64)-(ADR$1 == (double)(int64)SP2COL$)) | (int64)-(ADR$1 == (double)(int64)SP3COL$)) | (int64)-(ADR$1 == (double)(int64)SP4COL$)) | (int64)-(ADR$1 == (double)(int64)SP5COL$)) | (int64)-(ADR$1 == (double)(int64)SP6COL$)) | (int64)-(ADR$1 == (double)(int64)SP7COL$)) == 0ll ) goto label$7421;
 {
  _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), (double)FCOLOR$, V$1 );
 }
 goto label$7384;
 label$7421:;
 if( ADR$1 != (double)(int64)EXTCOL$ ) goto label$7422;
 {
  if( V$1 != (double)(int64)*(uint8*)NIBBLES$ ) goto label$7424;
  goto label$7425;
  label$7424:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$7427;
  goto label$7428;
  label$7427:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) ) goto label$7430;
  goto label$7431;
  label$7430:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) ) goto label$7433;
  goto label$7434;
  label$7433:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) ) goto label$7436;
  goto label$7437;
  label$7436:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) ) goto label$7439;
  goto label$7440;
  label$7439:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) ) goto label$7442;
  goto label$7443;
  label$7442:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) ) goto label$7445;
  goto label$7446;
  label$7445:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) ) goto label$7448;
  goto label$7449;
  label$7448:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) ) goto label$7451;
  goto label$7452;
  label$7451:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) ) goto label$7454;
  goto label$7455;
  label$7454:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) ) goto label$7457;
  goto label$7458;
  label$7457:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) ) goto label$7460;
  goto label$7461;
  label$7460:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) ) goto label$7463;
  goto label$7464;
  label$7463:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) ) goto label$7466;
  goto label$7467;
  label$7466:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) ) goto label$7469;
  goto label$7470;
  label$7469:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$7472;
  goto label$7473;
  label$7472:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$7475;
  goto label$7476;
  label$7475:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$7478;
  goto label$7479;
  label$7478:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$7481;
  goto label$7482;
  label$7481:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$7484;
  goto label$7485;
  label$7484:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$7487;
  goto label$7488;
  label$7487:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$7490;
  goto label$7491;
  label$7490:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$7493;
  goto label$7494;
  label$7493:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$7496;
  goto label$7497;
  label$7496:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$7499;
  goto label$7500;
  label$7499:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$7502;
  goto label$7503;
  label$7502:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$7505;
  goto label$7506;
  label$7505:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$7508;
  goto label$7509;
  label$7508:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$7511;
  goto label$7512;
  label$7511:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$7514;
  goto label$7515;
  label$7514:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$7517;
  goto label$7518;
  label$7517:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$7520;
  goto label$7521;
  label$7520:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$7523;
  goto label$7524;
  label$7523:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$7526;
  goto label$7527;
  label$7526:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$7529;
  goto label$7530;
  label$7529:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$7532;
  goto label$7533;
  label$7532:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$7535;
  goto label$7536;
  label$7535:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$7538;
  goto label$7539;
  label$7538:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$7541;
  goto label$7542;
  label$7541:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$7544;
  goto label$7545;
  label$7544:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$7547;
  goto label$7548;
  label$7547:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$7550;
  goto label$7551;
  label$7550:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$7553;
  goto label$7554;
  label$7553:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$7556;
  goto label$7557;
  label$7556:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$7559;
  goto label$7560;
  label$7559:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$7562;
  goto label$7563;
  label$7562:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$7565;
  goto label$7566;
  label$7565:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$7568;
  goto label$7569;
  label$7568:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$7571;
  goto label$7572;
  label$7571:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$7574;
  goto label$7575;
  label$7574:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$7577;
  goto label$7578;
  label$7577:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$7580;
  goto label$7581;
  label$7580:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$7583;
  goto label$7584;
  label$7583:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$7586;
  goto label$7587;
  label$7586:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$7589;
  goto label$7590;
  label$7589:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$7592;
  goto label$7593;
  label$7592:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$7595;
  goto label$7596;
  label$7595:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$7598;
  goto label$7599;
  label$7598:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$7601;
  goto label$7602;
  label$7601:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$7604;
  goto label$7605;
  label$7604:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$7607;
  goto label$7608;
  label$7607:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$7610;
  goto label$7611;
  label$7610:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$7613;
  goto label$7614;
  label$7613:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$7616;
  goto label$7617;
  label$7616:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$7619;
  goto label$7620;
  label$7619:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$7622;
  goto label$7623;
  label$7622:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$7625;
  goto label$7626;
  label$7625:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$7628;
  goto label$7629;
  label$7628:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$7631;
  goto label$7632;
  label$7631:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$7634;
  goto label$7635;
  label$7634:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$7637;
  goto label$7638;
  label$7637:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$7640;
  goto label$7641;
  label$7640:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$7643;
  goto label$7644;
  label$7643:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$7646;
  goto label$7647;
  label$7646:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$7649;
  goto label$7650;
  label$7649:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$7652;
  goto label$7653;
  label$7652:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$7655;
  goto label$7656;
  label$7655:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$7658;
  goto label$7659;
  label$7658:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$7661;
  goto label$7662;
  label$7661:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$7664;
  goto label$7665;
  label$7664:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$7667;
  goto label$7668;
  label$7667:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$7670;
  goto label$7671;
  label$7670:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$7673;
  goto label$7674;
  label$7673:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$7676;
  goto label$7677;
  label$7676:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$7679;
  goto label$7680;
  label$7679:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$7682;
  goto label$7683;
  label$7682:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$7685;
  goto label$7686;
  label$7685:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$7688;
  goto label$7689;
  label$7688:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$7691;
  goto label$7692;
  label$7691:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$7694;
  goto label$7695;
  label$7694:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$7697;
  goto label$7698;
  label$7697:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$7700;
  goto label$7701;
  label$7700:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$7703;
  goto label$7704;
  label$7703:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$7706;
  goto label$7707;
  label$7706:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$7709;
  goto label$7710;
  label$7709:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$7712;
  goto label$7713;
  label$7712:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$7715;
  goto label$7716;
  label$7715:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$7718;
  goto label$7719;
  label$7718:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$7721;
  goto label$7722;
  label$7721:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$7724;
  goto label$7725;
  label$7724:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$7727;
  goto label$7728;
  label$7727:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$7730;
  goto label$7731;
  label$7730:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$7733;
  goto label$7734;
  label$7733:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$7736;
  goto label$7737;
  label$7736:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$7739;
  goto label$7740;
  label$7739:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$7742;
  goto label$7743;
  label$7742:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$7745;
  goto label$7746;
  label$7745:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$7748;
  goto label$7749;
  label$7748:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$7751;
  goto label$7752;
  label$7751:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$7754;
  goto label$7755;
  label$7754:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$7757;
  goto label$7758;
  label$7757:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$7760;
  goto label$7761;
  label$7760:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$7763;
  goto label$7764;
  label$7763:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$7766;
  goto label$7767;
  label$7766:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$7769;
  goto label$7770;
  label$7769:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$7772;
  goto label$7773;
  label$7772:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$7775;
  goto label$7776;
  label$7775:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$7778;
  goto label$7779;
  label$7778:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$7781;
  goto label$7782;
  label$7781:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$7784;
  goto label$7785;
  label$7784:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$7787;
  goto label$7788;
  label$7787:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$7790;
  goto label$7791;
  label$7790:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$7793;
  goto label$7794;
  label$7793:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$7796;
  goto label$7797;
  label$7796:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$7799;
  goto label$7800;
  label$7799:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$7802;
  goto label$7803;
  label$7802:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$7805;
  goto label$7806;
  label$7805:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$7808;
  goto label$7809;
  label$7808:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$7811;
  goto label$7812;
  label$7811:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$7814;
  goto label$7815;
  label$7814:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$7817;
  goto label$7818;
  label$7817:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$7820;
  goto label$7821;
  label$7820:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$7823;
  goto label$7824;
  label$7823:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$7826;
  goto label$7827;
  label$7826:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$7829;
  goto label$7830;
  label$7829:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$7832;
  goto label$7833;
  label$7832:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$7835;
  goto label$7836;
  label$7835:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$7838;
  goto label$7839;
  label$7838:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$7841;
  goto label$7842;
  label$7841:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$7844;
  goto label$7845;
  label$7844:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$7847;
  goto label$7848;
  label$7847:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$7850;
  goto label$7851;
  label$7850:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$7853;
  goto label$7854;
  label$7853:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$7856;
  goto label$7857;
  label$7856:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$7859;
  goto label$7860;
  label$7859:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$7862;
  goto label$7863;
  label$7862:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$7865;
  goto label$7866;
  label$7865:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$7868;
  goto label$7869;
  label$7868:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$7871;
  goto label$7872;
  label$7871:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$7874;
  goto label$7875;
  label$7874:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$7877;
  goto label$7878;
  label$7877:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$7880;
  goto label$7881;
  label$7880:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$7883;
  goto label$7884;
  label$7883:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$7886;
  goto label$7887;
  label$7886:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$7889;
  goto label$7890;
  label$7889:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$7892;
  goto label$7893;
  label$7892:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$7895;
  goto label$7896;
  label$7895:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$7898;
  goto label$7899;
  label$7898:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$7901;
  goto label$7902;
  label$7901:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$7904;
  goto label$7905;
  label$7904:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$7907;
  goto label$7908;
  label$7907:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$7910;
  goto label$7911;
  label$7910:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$7913;
  goto label$7914;
  label$7913:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$7916;
  goto label$7917;
  label$7916:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$7919;
  goto label$7920;
  label$7919:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$7922;
  goto label$7923;
  label$7922:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$7925;
  goto label$7926;
  label$7925:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$7928;
  goto label$7929;
  label$7928:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$7931;
  goto label$7932;
  label$7931:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$7934;
  goto label$7935;
  label$7934:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$7937;
  goto label$7938;
  label$7937:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$7940;
  goto label$7941;
  label$7940:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$7943;
  goto label$7944;
  label$7943:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$7946;
  goto label$7947;
  label$7946:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$7949;
  goto label$7950;
  label$7949:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$7952;
  goto label$7953;
  label$7952:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$7955;
  goto label$7956;
  label$7955:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$7958;
  goto label$7959;
  label$7958:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$7961;
  goto label$7962;
  label$7961:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$7964;
  goto label$7965;
  label$7964:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$7967;
  goto label$7968;
  label$7967:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$7970;
  goto label$7971;
  label$7970:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$7973;
  goto label$7974;
  label$7973:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$7976;
  goto label$7977;
  label$7976:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$7979;
  goto label$7980;
  label$7979:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$7982;
  goto label$7983;
  label$7982:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$7985;
  goto label$7986;
  label$7985:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$7988;
  goto label$7989;
  label$7988:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$7991;
  goto label$7992;
  label$7991:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$7994;
  goto label$7995;
  label$7994:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$7997;
  goto label$7998;
  label$7997:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$8000;
  goto label$8001;
  label$8000:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$8003;
  goto label$8004;
  label$8003:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$8006;
  goto label$8007;
  label$8006:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$8009;
  goto label$8010;
  label$8009:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$8012;
  goto label$8013;
  label$8012:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$8015;
  goto label$8016;
  label$8015:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$8018;
  goto label$8019;
  label$8018:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$8021;
  goto label$8022;
  label$8021:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$8024;
  goto label$8025;
  label$8024:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$8027;
  goto label$8028;
  label$8027:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$8030;
  goto label$8031;
  label$8030:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$8033;
  goto label$8034;
  label$8033:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$8036;
  goto label$8037;
  label$8036:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$8039;
  goto label$8040;
  label$8039:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$8042;
  goto label$8043;
  label$8042:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$8045;
  goto label$8046;
  label$8045:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$8048;
  goto label$8049;
  label$8048:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$8051;
  goto label$8052;
  label$8051:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$8054;
  goto label$8055;
  label$8054:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$8057;
  goto label$8058;
  label$8057:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$8060;
  goto label$8061;
  label$8060:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$8063;
  goto label$8064;
  label$8063:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$8066;
  goto label$8067;
  label$8066:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$8069;
  goto label$8070;
  label$8069:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$8072;
  goto label$8073;
  label$8072:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$8075;
  goto label$8076;
  label$8075:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$8078;
  goto label$8079;
  label$8078:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$8081;
  goto label$8082;
  label$8081:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$8084;
  goto label$8085;
  label$8084:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$8087;
  goto label$8088;
  label$8087:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$8090;
  goto label$8091;
  label$8090:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$8093;
  goto label$8094;
  label$8093:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$8096;
  goto label$8097;
  label$8096:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$8099;
  goto label$8100;
  label$8099:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$8102;
  goto label$8103;
  label$8102:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$8105;
  goto label$8106;
  label$8105:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$8108;
  goto label$8109;
  label$8108:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$8111;
  goto label$8112;
  label$8111:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$8114;
  goto label$8115;
  label$8114:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$8117;
  goto label$8118;
  label$8117:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$8120;
  goto label$8121;
  label$8120:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$8123;
  goto label$8124;
  label$8123:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$8126;
  goto label$8127;
  label$8126:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$8129;
  goto label$8130;
  label$8129:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$8132;
  goto label$8133;
  label$8132:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$8135;
  goto label$8136;
  label$8135:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$8138;
  goto label$8139;
  label$8138:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$8141;
  goto label$8142;
  label$8141:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$8144;
  goto label$8145;
  label$8144:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$8147;
  goto label$8148;
  label$8147:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$8150;
  goto label$8151;
  label$8150:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$8153;
  goto label$8154;
  label$8153:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$8156;
  goto label$8157;
  label$8156:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$8159;
  goto label$8160;
  label$8159:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$8162;
  goto label$8163;
  label$8162:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$8165;
  goto label$8166;
  label$8165:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$8168;
  goto label$8169;
  label$8168:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$8171;
  goto label$8172;
  label$8171:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$8174;
  goto label$8175;
  label$8174:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$8177;
  goto label$8178;
  label$8177:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$8180;
  goto label$8181;
  label$8180:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$8183;
  goto label$8184;
  label$8183:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$8186;
  goto label$8187;
  label$8186:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$8189;
  goto label$8190;
  label$8189:;
  goto label$8191;
  label$7425:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)(((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll));
  goto label$8192;
  label$7428:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 51ll);
  goto label$8192;
  label$7431:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 102ll);
  goto label$8192;
  label$7434:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 153ll);
  goto label$8192;
  label$7437:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 204ll);
  goto label$8192;
  label$7440:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 255ll);
  goto label$8192;
  label$7443:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13056ll);
  goto label$8192;
  label$7446:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13107ll);
  goto label$8192;
  label$7449:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13158ll);
  goto label$8192;
  label$7452:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13209ll);
  goto label$8192;
  label$7455:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13260ll);
  goto label$8192;
  label$7458:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13311ll);
  goto label$8192;
  label$7461:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 26112ll);
  goto label$8192;
  label$7464:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 26163ll);
  goto label$8192;
  label$7467:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 26214ll);
  goto label$8192;
  label$7470:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 26265ll);
  goto label$8192;
  label$7473:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 26316ll);
  goto label$8192;
  label$7476:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 26367ll);
  goto label$8192;
  label$7479:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 39168ll);
  goto label$8192;
  label$7482:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 39219ll);
  goto label$8192;
  label$7485:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 39270ll);
  goto label$8192;
  label$7488:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 39321ll);
  goto label$8192;
  label$7491:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 39372ll);
  goto label$8192;
  label$7494:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 39423ll);
  goto label$8192;
  label$7497:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 52224ll);
  goto label$8192;
  label$7500:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 52275ll);
  goto label$8192;
  label$7503:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 52326ll);
  goto label$8192;
  label$7506:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 52377ll);
  goto label$8192;
  label$7509:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 52428ll);
  goto label$8192;
  label$7512:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 52479ll);
  goto label$8192;
  label$7515:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 65280ll);
  goto label$8192;
  label$7518:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 65331ll);
  goto label$8192;
  label$7521:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 65382ll);
  goto label$8192;
  label$7524:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 65433ll);
  goto label$8192;
  label$7527:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 65484ll);
  goto label$8192;
  label$7530:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 65535ll);
  goto label$8192;
  label$7533:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3342336ll);
  goto label$8192;
  label$7536:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3342387ll);
  goto label$8192;
  label$7539:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3342438ll);
  goto label$8192;
  label$7542:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3342489ll);
  goto label$8192;
  label$7545:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3342540ll);
  goto label$8192;
  label$7548:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3342591ll);
  goto label$8192;
  label$7551:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3355392ll);
  goto label$8192;
  label$7554:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3355443ll);
  goto label$8192;
  label$7557:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3355494ll);
  goto label$8192;
  label$7560:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3355545ll);
  goto label$8192;
  label$7563:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3355596ll);
  goto label$8192;
  label$7566:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3355647ll);
  goto label$8192;
  label$7569:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3368448ll);
  goto label$8192;
  label$7572:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3368499ll);
  goto label$8192;
  label$7575:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3368550ll);
  goto label$8192;
  label$7578:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3368601ll);
  goto label$8192;
  label$7581:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3368652ll);
  goto label$8192;
  label$7584:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3368703ll);
  goto label$8192;
  label$7587:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3381504ll);
  goto label$8192;
  label$7590:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3381555ll);
  goto label$8192;
  label$7593:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3381606ll);
  goto label$8192;
  label$7596:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3381657ll);
  goto label$8192;
  label$7599:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3381708ll);
  goto label$8192;
  label$7602:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3381759ll);
  goto label$8192;
  label$7605:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3394560ll);
  goto label$8192;
  label$7608:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3394611ll);
  goto label$8192;
  label$7611:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3394662ll);
  goto label$8192;
  label$7614:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3394713ll);
  goto label$8192;
  label$7617:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3394764ll);
  goto label$8192;
  label$7620:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3394815ll);
  goto label$8192;
  label$7623:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3407616ll);
  goto label$8192;
  label$7626:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3407667ll);
  goto label$8192;
  label$7629:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3407718ll);
  goto label$8192;
  label$7632:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3407769ll);
  goto label$8192;
  label$7635:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3407820ll);
  goto label$8192;
  label$7638:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3407871ll);
  goto label$8192;
  label$7641:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6684672ll);
  goto label$8192;
  label$7644:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6684723ll);
  goto label$8192;
  label$7647:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6684774ll);
  goto label$8192;
  label$7650:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6684825ll);
  goto label$8192;
  label$7653:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6684876ll);
  goto label$8192;
  label$7656:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6684927ll);
  goto label$8192;
  label$7659:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6697728ll);
  goto label$8192;
  label$7662:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6697779ll);
  goto label$8192;
  label$7665:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6697830ll);
  goto label$8192;
  label$7668:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6697881ll);
  goto label$8192;
  label$7671:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6697932ll);
  goto label$8192;
  label$7674:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6697983ll);
  goto label$8192;
  label$7677:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6710784ll);
  goto label$8192;
  label$7680:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6710835ll);
  goto label$8192;
  label$7683:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6710886ll);
  goto label$8192;
  label$7686:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6710937ll);
  goto label$8192;
  label$7689:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6710988ll);
  goto label$8192;
  label$7692:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6711039ll);
  goto label$8192;
  label$7695:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6723840ll);
  goto label$8192;
  label$7698:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6723891ll);
  goto label$8192;
  label$7701:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6723942ll);
  goto label$8192;
  label$7704:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6723993ll);
  goto label$8192;
  label$7707:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6724095ll);
  goto label$8192;
  label$7710:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6736896ll);
  goto label$8192;
  label$7713:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6736947ll);
  goto label$8192;
  label$7716:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6736998ll);
  goto label$8192;
  label$7719:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6737049ll);
  goto label$8192;
  label$7722:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6737100ll);
  goto label$8192;
  label$7725:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6737151ll);
  goto label$8192;
  label$7728:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6749952ll);
  goto label$8192;
  label$7731:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6750003ll);
  goto label$8192;
  label$7734:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6750054ll);
  goto label$8192;
  label$7737:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6750105ll);
  goto label$8192;
  label$7740:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6750156ll);
  goto label$8192;
  label$7743:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6750207ll);
  goto label$8192;
  label$7746:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10027008ll);
  goto label$8192;
  label$7749:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10027059ll);
  goto label$8192;
  label$7752:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10027110ll);
  goto label$8192;
  label$7755:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10027161ll);
  goto label$8192;
  label$7758:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10027212ll);
  goto label$8192;
  label$7761:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10027263ll);
  goto label$8192;
  label$7764:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10040064ll);
  goto label$8192;
  label$7767:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10040115ll);
  goto label$8192;
  label$7770:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10040166ll);
  goto label$8192;
  label$7773:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10040217ll);
  goto label$8192;
  label$7776:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10040268ll);
  goto label$8192;
  label$7779:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10040319ll);
  goto label$8192;
  label$7782:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10053120ll);
  goto label$8192;
  label$7785:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10053171ll);
  goto label$8192;
  label$7788:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10053222ll);
  goto label$8192;
  label$7791:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10053273ll);
  goto label$8192;
  label$7794:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10053324ll);
  goto label$8192;
  label$7797:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10053375ll);
  goto label$8192;
  label$7800:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10066176ll);
  goto label$8192;
  label$7803:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10066227ll);
  goto label$8192;
  label$7806:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10066278ll);
  goto label$8192;
  label$7809:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10066329ll);
  goto label$8192;
  label$7812:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10066380ll);
  goto label$8192;
  label$7815:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10066431ll);
  goto label$8192;
  label$7818:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10079232ll);
  goto label$8192;
  label$7821:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10079283ll);
  goto label$8192;
  label$7824:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10079334ll);
  goto label$8192;
  label$7827:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10079385ll);
  goto label$8192;
  label$7830:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10079436ll);
  goto label$8192;
  label$7833:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10079487ll);
  goto label$8192;
  label$7836:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10092288ll);
  goto label$8192;
  label$7839:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10092339ll);
  goto label$8192;
  label$7842:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10092390ll);
  goto label$8192;
  label$7845:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10092441ll);
  goto label$8192;
  label$7848:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10092492ll);
  goto label$8192;
  label$7851:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10092543ll);
  goto label$8192;
  label$7854:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13369344ll);
  goto label$8192;
  label$7857:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13369395ll);
  goto label$8192;
  label$7860:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13369446ll);
  goto label$8192;
  label$7863:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13369497ll);
  goto label$8192;
  label$7866:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13369548ll);
  goto label$8192;
  label$7869:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13369599ll);
  goto label$8192;
  label$7872:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13382400ll);
  goto label$8192;
  label$7875:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13382451ll);
  goto label$8192;
  label$7878:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13382502ll);
  goto label$8192;
  label$7881:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13382553ll);
  goto label$8192;
  label$7884:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13382604ll);
  goto label$8192;
  label$7887:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13382655ll);
  goto label$8192;
  label$7890:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13395456ll);
  goto label$8192;
  label$7893:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13395507ll);
  goto label$8192;
  label$7896:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13395558ll);
  goto label$8192;
  label$7899:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13395609ll);
  goto label$8192;
  label$7902:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13395660ll);
  goto label$8192;
  label$7905:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13395711ll);
  goto label$8192;
  label$7908:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13408512ll);
  goto label$8192;
  label$7911:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13408563ll);
  goto label$8192;
  label$7914:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13408614ll);
  goto label$8192;
  label$7917:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13408665ll);
  goto label$8192;
  label$7920:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13408716ll);
  goto label$8192;
  label$7923:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13408767ll);
  goto label$8192;
  label$7926:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13421568ll);
  goto label$8192;
  label$7929:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13421619ll);
  goto label$8192;
  label$7932:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13421670ll);
  goto label$8192;
  label$7935:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13421721ll);
  goto label$8192;
  label$7938:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13421772ll);
  goto label$8192;
  label$7941:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13421823ll);
  goto label$8192;
  label$7944:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13434624ll);
  goto label$8192;
  label$7947:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13434675ll);
  goto label$8192;
  label$7950:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13434726ll);
  goto label$8192;
  label$7953:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13434777ll);
  goto label$8192;
  label$7956:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13434828ll);
  goto label$8192;
  label$7959:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13434879ll);
  goto label$8192;
  label$7962:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16711680ll);
  goto label$8192;
  label$7965:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16711731ll);
  goto label$8192;
  label$7968:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16711782ll);
  goto label$8192;
  label$7971:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16711833ll);
  goto label$8192;
  label$7974:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16711884ll);
  goto label$8192;
  label$7977:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16711935ll);
  goto label$8192;
  label$7980:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16724736ll);
  goto label$8192;
  label$7983:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16724787ll);
  goto label$8192;
  label$7986:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16724838ll);
  goto label$8192;
  label$7989:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16724889ll);
  goto label$8192;
  label$7992:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16724940ll);
  goto label$8192;
  label$7995:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16724991ll);
  goto label$8192;
  label$7998:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16737792ll);
  goto label$8192;
  label$8001:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16737843ll);
  goto label$8192;
  label$8004:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16737894ll);
  goto label$8192;
  label$8007:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16737945ll);
  goto label$8192;
  label$8010:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16737996ll);
  goto label$8192;
  label$8013:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16738047ll);
  goto label$8192;
  label$8016:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16750848ll);
  goto label$8192;
  label$8019:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16750899ll);
  goto label$8192;
  label$8022:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16750950ll);
  goto label$8192;
  label$8025:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16751001ll);
  goto label$8192;
  label$8028:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16751052ll);
  goto label$8192;
  label$8031:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16763904ll);
  goto label$8192;
  label$8034:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16763955ll);
  goto label$8192;
  label$8037:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16764006ll);
  goto label$8192;
  label$8040:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16764057ll);
  goto label$8192;
  label$8043:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16764108ll);
  goto label$8192;
  label$8046:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16764159ll);
  goto label$8192;
  label$8049:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16776960ll);
  goto label$8192;
  label$8052:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16777011ll);
  goto label$8192;
  label$8055:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16777062ll);
  goto label$8192;
  label$8058:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16777113ll);
  goto label$8192;
  label$8061:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16777164ll);
  goto label$8192;
  label$8064:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16777215ll);
  goto label$8192;
  label$8067:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 14737632ll);
  goto label$8192;
  label$8070:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 12698049ll);
  goto label$8192;
  label$8073:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10658466ll);
  goto label$8192;
  label$8076:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 8618883ll);
  goto label$8192;
  label$8079:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6579300ll);
  goto label$8192;
  label$8082:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 4539717ll);
  goto label$8192;
  label$8085:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 4605510ll);
  goto label$8192;
  label$8088:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 460551ll);
  goto label$8192;
  label$8091:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3342336ll);
  goto label$8192;
  label$8094:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)(((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll));
  goto label$8192;
  label$8097:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6684672ll);
  goto label$8192;
  label$8100:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10027008ll);
  goto label$8192;
  label$8103:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13369344ll);
  goto label$8192;
  label$8106:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16711680ll);
  goto label$8192;
  label$8109:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13382400ll);
  goto label$8192;
  label$8112:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10053120ll);
  goto label$8192;
  label$8115:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6723840ll);
  goto label$8192;
  label$8118:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3394560ll);
  goto label$8192;
  label$8121:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 65280ll);
  goto label$8192;
  label$8124:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 52275ll);
  goto label$8192;
  label$8127:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 39270ll);
  goto label$8192;
  label$8130:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 26265ll);
  goto label$8192;
  label$8133:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13260ll);
  goto label$8192;
  label$8136:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 255ll);
  goto label$8192;
  label$8139:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3342540ll);
  goto label$8192;
  label$8142:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6684825ll);
  goto label$8192;
  label$8145:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10027110ll);
  goto label$8192;
  label$8148:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13369395ll);
  goto label$8192;
  label$8151:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16711680ll);
  goto label$8192;
  label$8154:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13382400ll);
  goto label$8192;
  label$8157:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10053120ll);
  goto label$8192;
  label$8160:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6723840ll);
  goto label$8192;
  label$8163:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3394560ll);
  goto label$8192;
  label$8166:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16756736ll);
  goto label$8192;
  label$8169:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16760832ll);
  goto label$8192;
  label$8172:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3407616ll);
  goto label$8192;
  label$8175:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3407667ll);
  goto label$8192;
  label$8178:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 65331ll);
  goto label$8192;
  label$8181:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6750054ll);
  goto label$8192;
  label$8184:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 65382ll);
  goto label$8192;
  label$8187:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 2631720ll);
  goto label$8192;
  label$8190:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 2631720ll);
  goto label$8192;
  label$8192:;
  fb_GfxLine( BGIMAGE$, 0x0p+0f, 0x0p+0f, 0x1.DFCp+10f, 0x1.0DCp+10f, (uint32)((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395656ll) )), 2, 65535u, 0 );
  label$8193:;
 }
 goto label$7384;
 label$7422:;
 if( ((((int64)-(ADR$1 == (double)(int64)BGCOL0$) | (int64)-(ADR$1 == (double)(int64)BGCOL1$)) | (int64)-(ADR$1 == (double)(int64)BGCOL2$)) | (int64)-(ADR$1 == (double)(int64)BGCOL3$)) == 0ll ) goto label$8194;
 {
  if( V$1 != (double)(int64)*(uint8*)NIBBLES$ ) goto label$8196;
  goto label$8197;
  label$8196:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$8199;
  goto label$8200;
  label$8199:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) ) goto label$8202;
  goto label$8203;
  label$8202:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) ) goto label$8205;
  goto label$8206;
  label$8205:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) ) goto label$8208;
  goto label$8209;
  label$8208:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) ) goto label$8211;
  goto label$8212;
  label$8211:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) ) goto label$8214;
  goto label$8215;
  label$8214:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) ) goto label$8217;
  goto label$8218;
  label$8217:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) ) goto label$8220;
  goto label$8221;
  label$8220:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) ) goto label$8223;
  goto label$8224;
  label$8223:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) ) goto label$8226;
  goto label$8227;
  label$8226:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) ) goto label$8229;
  goto label$8230;
  label$8229:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) ) goto label$8232;
  goto label$8233;
  label$8232:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) ) goto label$8235;
  goto label$8236;
  label$8235:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) ) goto label$8238;
  goto label$8239;
  label$8238:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) ) goto label$8241;
  goto label$8242;
  label$8241:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$8244;
  goto label$8245;
  label$8244:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$8247;
  goto label$8248;
  label$8247:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$8250;
  goto label$8251;
  label$8250:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$8253;
  goto label$8254;
  label$8253:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$8256;
  goto label$8257;
  label$8256:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$8259;
  goto label$8260;
  label$8259:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$8262;
  goto label$8263;
  label$8262:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$8265;
  goto label$8266;
  label$8265:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$8268;
  goto label$8269;
  label$8268:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$8271;
  goto label$8272;
  label$8271:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$8274;
  goto label$8275;
  label$8274:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$8277;
  goto label$8278;
  label$8277:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$8280;
  goto label$8281;
  label$8280:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$8283;
  goto label$8284;
  label$8283:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$8286;
  goto label$8287;
  label$8286:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$8289;
  goto label$8290;
  label$8289:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$8292;
  goto label$8293;
  label$8292:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$8295;
  goto label$8296;
  label$8295:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$8298;
  goto label$8299;
  label$8298:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$8301;
  goto label$8302;
  label$8301:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$8304;
  goto label$8305;
  label$8304:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$8307;
  goto label$8308;
  label$8307:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$8310;
  goto label$8311;
  label$8310:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$8313;
  goto label$8314;
  label$8313:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$8316;
  goto label$8317;
  label$8316:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$8319;
  goto label$8320;
  label$8319:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$8322;
  goto label$8323;
  label$8322:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$8325;
  goto label$8326;
  label$8325:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$8328;
  goto label$8329;
  label$8328:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$8331;
  goto label$8332;
  label$8331:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$8334;
  goto label$8335;
  label$8334:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$8337;
  goto label$8338;
  label$8337:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$8340;
  goto label$8341;
  label$8340:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$8343;
  goto label$8344;
  label$8343:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$8346;
  goto label$8347;
  label$8346:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$8349;
  goto label$8350;
  label$8349:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$8352;
  goto label$8353;
  label$8352:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$8355;
  goto label$8356;
  label$8355:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$8358;
  goto label$8359;
  label$8358:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$8361;
  goto label$8362;
  label$8361:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$8364;
  goto label$8365;
  label$8364:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$8367;
  goto label$8368;
  label$8367:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$8370;
  goto label$8371;
  label$8370:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$8373;
  goto label$8374;
  label$8373:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$8376;
  goto label$8377;
  label$8376:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$8379;
  goto label$8380;
  label$8379:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$8382;
  goto label$8383;
  label$8382:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$8385;
  goto label$8386;
  label$8385:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$8388;
  goto label$8389;
  label$8388:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$8391;
  goto label$8392;
  label$8391:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$8394;
  goto label$8395;
  label$8394:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$8397;
  goto label$8398;
  label$8397:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$8400;
  goto label$8401;
  label$8400:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$8403;
  goto label$8404;
  label$8403:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$8406;
  goto label$8407;
  label$8406:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$8409;
  goto label$8410;
  label$8409:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$8412;
  goto label$8413;
  label$8412:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$8415;
  goto label$8416;
  label$8415:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$8418;
  goto label$8419;
  label$8418:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$8421;
  goto label$8422;
  label$8421:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$8424;
  goto label$8425;
  label$8424:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$8427;
  goto label$8428;
  label$8427:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$8430;
  goto label$8431;
  label$8430:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$8433;
  goto label$8434;
  label$8433:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$8436;
  goto label$8437;
  label$8436:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$8439;
  goto label$8440;
  label$8439:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$8442;
  goto label$8443;
  label$8442:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$8445;
  goto label$8446;
  label$8445:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$8448;
  goto label$8449;
  label$8448:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$8451;
  goto label$8452;
  label$8451:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$8454;
  goto label$8455;
  label$8454:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$8457;
  goto label$8458;
  label$8457:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$8460;
  goto label$8461;
  label$8460:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$8463;
  goto label$8464;
  label$8463:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$8466;
  goto label$8467;
  label$8466:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$8469;
  goto label$8470;
  label$8469:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$8472;
  goto label$8473;
  label$8472:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$8475;
  goto label$8476;
  label$8475:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$8478;
  goto label$8479;
  label$8478:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$8481;
  goto label$8482;
  label$8481:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$8484;
  goto label$8485;
  label$8484:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$8487;
  goto label$8488;
  label$8487:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$8490;
  goto label$8491;
  label$8490:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$8493;
  goto label$8494;
  label$8493:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$8496;
  goto label$8497;
  label$8496:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$8499;
  goto label$8500;
  label$8499:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$8502;
  goto label$8503;
  label$8502:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$8505;
  goto label$8506;
  label$8505:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$8508;
  goto label$8509;
  label$8508:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$8511;
  goto label$8512;
  label$8511:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$8514;
  goto label$8515;
  label$8514:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$8517;
  goto label$8518;
  label$8517:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$8520;
  goto label$8521;
  label$8520:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$8523;
  goto label$8524;
  label$8523:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$8526;
  goto label$8527;
  label$8526:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$8529;
  goto label$8530;
  label$8529:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$8532;
  goto label$8533;
  label$8532:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$8535;
  goto label$8536;
  label$8535:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$8538;
  goto label$8539;
  label$8538:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$8541;
  goto label$8542;
  label$8541:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$8544;
  goto label$8545;
  label$8544:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$8547;
  goto label$8548;
  label$8547:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$8550;
  goto label$8551;
  label$8550:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$8553;
  goto label$8554;
  label$8553:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$8556;
  goto label$8557;
  label$8556:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$8559;
  goto label$8560;
  label$8559:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$8562;
  goto label$8563;
  label$8562:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$8565;
  goto label$8566;
  label$8565:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$8568;
  goto label$8569;
  label$8568:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$8571;
  goto label$8572;
  label$8571:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$8574;
  goto label$8575;
  label$8574:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$8577;
  goto label$8578;
  label$8577:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$8580;
  goto label$8581;
  label$8580:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$8583;
  goto label$8584;
  label$8583:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$8586;
  goto label$8587;
  label$8586:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$8589;
  goto label$8590;
  label$8589:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$8592;
  goto label$8593;
  label$8592:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$8595;
  goto label$8596;
  label$8595:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$8598;
  goto label$8599;
  label$8598:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$8601;
  goto label$8602;
  label$8601:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$8604;
  goto label$8605;
  label$8604:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$8607;
  goto label$8608;
  label$8607:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$8610;
  goto label$8611;
  label$8610:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$8613;
  goto label$8614;
  label$8613:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$8616;
  goto label$8617;
  label$8616:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$8619;
  goto label$8620;
  label$8619:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$8622;
  goto label$8623;
  label$8622:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$8625;
  goto label$8626;
  label$8625:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$8628;
  goto label$8629;
  label$8628:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$8631;
  goto label$8632;
  label$8631:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$8634;
  goto label$8635;
  label$8634:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$8637;
  goto label$8638;
  label$8637:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$8640;
  goto label$8641;
  label$8640:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$8643;
  goto label$8644;
  label$8643:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$8646;
  goto label$8647;
  label$8646:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$8649;
  goto label$8650;
  label$8649:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$8652;
  goto label$8653;
  label$8652:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$8655;
  goto label$8656;
  label$8655:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$8658;
  goto label$8659;
  label$8658:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$8661;
  goto label$8662;
  label$8661:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$8664;
  goto label$8665;
  label$8664:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$8667;
  goto label$8668;
  label$8667:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$8670;
  goto label$8671;
  label$8670:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$8673;
  goto label$8674;
  label$8673:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$8676;
  goto label$8677;
  label$8676:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$8679;
  goto label$8680;
  label$8679:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$8682;
  goto label$8683;
  label$8682:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$8685;
  goto label$8686;
  label$8685:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$8688;
  goto label$8689;
  label$8688:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$8691;
  goto label$8692;
  label$8691:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$8694;
  goto label$8695;
  label$8694:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$8697;
  goto label$8698;
  label$8697:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$8700;
  goto label$8701;
  label$8700:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$8703;
  goto label$8704;
  label$8703:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$8706;
  goto label$8707;
  label$8706:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$8709;
  goto label$8710;
  label$8709:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$8712;
  goto label$8713;
  label$8712:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$8715;
  goto label$8716;
  label$8715:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$8718;
  goto label$8719;
  label$8718:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$8721;
  goto label$8722;
  label$8721:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$8724;
  goto label$8725;
  label$8724:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$8727;
  goto label$8728;
  label$8727:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$8730;
  goto label$8731;
  label$8730:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$8733;
  goto label$8734;
  label$8733:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$8736;
  goto label$8737;
  label$8736:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$8739;
  goto label$8740;
  label$8739:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$8742;
  goto label$8743;
  label$8742:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$8745;
  goto label$8746;
  label$8745:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$8748;
  goto label$8749;
  label$8748:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$8751;
  goto label$8752;
  label$8751:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$8754;
  goto label$8755;
  label$8754:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$8757;
  goto label$8758;
  label$8757:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$8760;
  goto label$8761;
  label$8760:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$8763;
  goto label$8764;
  label$8763:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$8766;
  goto label$8767;
  label$8766:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$8769;
  goto label$8770;
  label$8769:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$8772;
  goto label$8773;
  label$8772:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$8775;
  goto label$8776;
  label$8775:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$8778;
  goto label$8779;
  label$8778:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$8781;
  goto label$8782;
  label$8781:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$8784;
  goto label$8785;
  label$8784:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$8787;
  goto label$8788;
  label$8787:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$8790;
  goto label$8791;
  label$8790:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$8793;
  goto label$8794;
  label$8793:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$8796;
  goto label$8797;
  label$8796:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$8799;
  goto label$8800;
  label$8799:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$8802;
  goto label$8803;
  label$8802:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$8805;
  goto label$8806;
  label$8805:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$8808;
  goto label$8809;
  label$8808:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$8811;
  goto label$8812;
  label$8811:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$8814;
  goto label$8815;
  label$8814:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$8817;
  goto label$8818;
  label$8817:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$8820;
  goto label$8821;
  label$8820:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$8823;
  goto label$8824;
  label$8823:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$8826;
  goto label$8827;
  label$8826:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$8829;
  goto label$8830;
  label$8829:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$8832;
  goto label$8833;
  label$8832:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$8835;
  goto label$8836;
  label$8835:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$8838;
  goto label$8839;
  label$8838:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$8841;
  goto label$8842;
  label$8841:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$8844;
  goto label$8845;
  label$8844:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$8847;
  goto label$8848;
  label$8847:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$8850;
  goto label$8851;
  label$8850:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$8853;
  goto label$8854;
  label$8853:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$8856;
  goto label$8857;
  label$8856:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$8859;
  goto label$8860;
  label$8859:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$8862;
  goto label$8863;
  label$8862:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$8865;
  goto label$8866;
  label$8865:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$8868;
  goto label$8869;
  label$8868:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$8871;
  goto label$8872;
  label$8871:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$8874;
  goto label$8875;
  label$8874:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$8877;
  goto label$8878;
  label$8877:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$8880;
  goto label$8881;
  label$8880:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$8883;
  goto label$8884;
  label$8883:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$8886;
  goto label$8887;
  label$8886:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$8889;
  goto label$8890;
  label$8889:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$8892;
  goto label$8893;
  label$8892:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$8895;
  goto label$8896;
  label$8895:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$8898;
  goto label$8899;
  label$8898:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$8901;
  goto label$8902;
  label$8901:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$8904;
  goto label$8905;
  label$8904:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$8907;
  goto label$8908;
  label$8907:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$8910;
  goto label$8911;
  label$8910:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$8913;
  goto label$8914;
  label$8913:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$8916;
  goto label$8917;
  label$8916:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$8919;
  goto label$8920;
  label$8919:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$8922;
  goto label$8923;
  label$8922:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$8925;
  goto label$8926;
  label$8925:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$8928;
  goto label$8929;
  label$8928:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$8931;
  goto label$8932;
  label$8931:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$8934;
  goto label$8935;
  label$8934:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$8937;
  goto label$8938;
  label$8937:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$8940;
  goto label$8941;
  label$8940:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$8943;
  goto label$8944;
  label$8943:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$8946;
  goto label$8947;
  label$8946:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$8949;
  goto label$8950;
  label$8949:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$8952;
  goto label$8953;
  label$8952:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$8955;
  goto label$8956;
  label$8955:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$8958;
  goto label$8959;
  label$8958:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$8961;
  goto label$8962;
  label$8961:;
  goto label$8191;
  label$8197:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8191;
  label$8200:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$8191;
  label$8203:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$8191;
  label$8206:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$8191;
  label$8209:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$8191;
  label$8212:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$8191;
  label$8215:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8191;
  label$8218:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$8191;
  label$8221:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$8191;
  label$8224:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$8191;
  label$8227:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$8191;
  label$8230:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$8191;
  label$8233:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8191;
  label$8236:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$8191;
  label$8239:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$8191;
  label$8242:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$8191;
  label$8245:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$8191;
  label$8248:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$8191;
  label$8251:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8191;
  label$8254:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$8191;
  label$8257:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$8191;
  label$8260:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$8191;
  label$8263:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$8191;
  label$8266:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$8191;
  label$8269:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8191;
  label$8272:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$8191;
  label$8275:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$8191;
  label$8278:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$8191;
  label$8281:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$8191;
  label$8284:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$8191;
  label$8287:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8191;
  label$8290:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$8191;
  label$8293:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$8191;
  label$8296:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$8191;
  label$8299:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$8191;
  label$8302:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$8191;
  label$8305:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8191;
  label$8308:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$8191;
  label$8311:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$8191;
  label$8314:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$8191;
  label$8317:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$8191;
  label$8320:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$8191;
  label$8323:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8191;
  label$8326:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$8191;
  label$8329:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$8191;
  label$8332:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$8191;
  label$8335:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$8191;
  label$8338:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$8191;
  label$8341:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8191;
  label$8344:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$8191;
  label$8347:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$8191;
  label$8350:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$8191;
  label$8353:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$8191;
  label$8356:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$8191;
  label$8359:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8191;
  label$8362:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$8191;
  label$8365:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$8191;
  label$8368:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$8191;
  label$8371:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$8191;
  label$8374:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$8191;
  label$8377:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8191;
  label$8380:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$8191;
  label$8383:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$8191;
  label$8386:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$8191;
  label$8389:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$8191;
  label$8392:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$8191;
  label$8395:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8191;
  label$8398:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$8191;
  label$8401:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$8191;
  label$8404:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$8191;
  label$8407:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$8191;
  label$8410:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$8191;
  label$8413:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8191;
  label$8416:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$8191;
  label$8419:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$8191;
  label$8422:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$8191;
  label$8425:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$8191;
  label$8428:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$8191;
  label$8431:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8191;
  label$8434:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$8191;
  label$8437:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$8191;
  label$8440:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$8191;
  label$8443:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$8191;
  label$8446:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$8191;
  label$8449:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8191;
  label$8452:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$8191;
  label$8455:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$8191;
  label$8458:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$8191;
  label$8461:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$8191;
  label$8464:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$8191;
  label$8467:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8191;
  label$8470:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$8191;
  label$8473:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$8191;
  label$8476:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$8191;
  label$8479:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$8191;
  label$8482:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8191;
  label$8485:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$8191;
  label$8488:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$8191;
  label$8491:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$8191;
  label$8494:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$8191;
  label$8497:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$8191;
  label$8500:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8191;
  label$8503:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$8191;
  label$8506:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$8191;
  label$8509:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$8191;
  label$8512:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$8191;
  label$8515:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$8191;
  label$8518:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8191;
  label$8521:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$8191;
  label$8524:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$8191;
  label$8527:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$8191;
  label$8530:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$8191;
  label$8533:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$8191;
  label$8536:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8191;
  label$8539:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$8191;
  label$8542:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$8191;
  label$8545:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$8191;
  label$8548:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$8191;
  label$8551:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$8191;
  label$8554:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8191;
  label$8557:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$8191;
  label$8560:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$8191;
  label$8563:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$8191;
  label$8566:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$8191;
  label$8569:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$8191;
  label$8572:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8191;
  label$8575:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$8191;
  label$8578:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$8191;
  label$8581:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$8191;
  label$8584:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$8191;
  label$8587:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$8191;
  label$8590:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8191;
  label$8593:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$8191;
  label$8596:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$8191;
  label$8599:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$8191;
  label$8602:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$8191;
  label$8605:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$8191;
  label$8608:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8191;
  label$8611:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$8191;
  label$8614:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$8191;
  label$8617:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$8191;
  label$8620:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$8191;
  label$8623:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$8191;
  label$8626:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8191;
  label$8629:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$8191;
  label$8632:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$8191;
  label$8635:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$8191;
  label$8638:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$8191;
  label$8641:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$8191;
  label$8644:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8191;
  label$8647:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$8191;
  label$8650:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$8191;
  label$8653:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$8191;
  label$8656:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$8191;
  label$8659:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$8191;
  label$8662:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8191;
  label$8665:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$8191;
  label$8668:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$8191;
  label$8671:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$8191;
  label$8674:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$8191;
  label$8677:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$8191;
  label$8680:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8191;
  label$8683:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$8191;
  label$8686:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$8191;
  label$8689:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$8191;
  label$8692:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$8191;
  label$8695:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$8191;
  label$8698:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8191;
  label$8701:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$8191;
  label$8704:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$8191;
  label$8707:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$8191;
  label$8710:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$8191;
  label$8713:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$8191;
  label$8716:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8191;
  label$8719:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$8191;
  label$8722:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$8191;
  label$8725:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$8191;
  label$8728:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$8191;
  label$8731:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$8191;
  label$8734:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8191;
  label$8737:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$8191;
  label$8740:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$8191;
  label$8743:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$8191;
  label$8746:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$8191;
  label$8749:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$8191;
  label$8752:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8191;
  label$8755:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$8191;
  label$8758:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$8191;
  label$8761:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$8191;
  label$8764:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$8191;
  label$8767:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$8191;
  label$8770:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8191;
  label$8773:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$8191;
  label$8776:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$8191;
  label$8779:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$8191;
  label$8782:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$8191;
  label$8785:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$8191;
  label$8788:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8191;
  label$8791:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$8191;
  label$8794:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$8191;
  label$8797:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$8191;
  label$8800:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$8191;
  label$8803:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$8191;
  label$8806:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8191;
  label$8809:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$8191;
  label$8812:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$8191;
  label$8815:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$8191;
  label$8818:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$8191;
  label$8821:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$8191;
  label$8824:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8191;
  label$8827:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$8191;
  label$8830:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$8191;
  label$8833:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$8191;
  label$8836:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$8191;
  label$8839:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$8191;
  label$8842:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.Cp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.Cp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.Cp+7 );
  goto label$8191;
  label$8845:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.82p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.82p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.82p+7 );
  goto label$8191;
  label$8848:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.44p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.44p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.44p+7 );
  goto label$8191;
  label$8851:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.06p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.06p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.06p+7 );
  goto label$8191;
  label$8854:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.9p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.9p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.9p+6 );
  goto label$8191;
  label$8857:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.14p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.14p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.14p+6 );
  goto label$8191;
  label$8860:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.3p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.3p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.3p+5 );
  goto label$8191;
  label$8863:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.Cp+2 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.Cp+2 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.Cp+2 );
  goto label$8191;
  label$8866:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8191;
  label$8869:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8191;
  label$8872:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8191;
  label$8875:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8191;
  label$8878:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8191;
  label$8881:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8191;
  label$8884:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8191;
  label$8887:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8191;
  label$8890:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8191;
  label$8893:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8191;
  label$8896:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8191;
  label$8899:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$8191;
  label$8902:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$8191;
  label$8905:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$8191;
  label$8908:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$8191;
  label$8911:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$8191;
  label$8914:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$8191;
  label$8917:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$8191;
  label$8920:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$8191;
  label$8923:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$8191;
  label$8926:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8191;
  label$8929:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8191;
  label$8932:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8191;
  label$8935:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8191;
  label$8938:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8191;
  label$8941:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.6p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8191;
  label$8944:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.8p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8191;
  label$8947:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8191;
  label$8950:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$8191;
  label$8953:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$8191;
  label$8956:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$8191;
  label$8959:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$8191;
  label$8962:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.4p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.4p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.4p+5 );
  goto label$8191;
  label$8191:;
 }
 label$8194:;
 label$7384:;
 {
  if( ADR$1 != (double)(int64)*(uint8*)NIBBLES$ ) goto label$8964;
  label$8965:;
  {
  }
  goto label$8963;
  label$8964:;
  if( ADR$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) ) goto label$8966;
  label$8967:;
  {
   FBSTRING TMP$3127$3;
   FBSTRING TMP$3128$3;
   fb_GfxScreen( 0, 8, 0, 0, 0 );
   FBSTRING* vr$6228 = fb_DoubleToStr( V$1 );
   __builtin_memset( &TMP$3127$3, 0, 24ll );
   FBSTRING* vr$6231 = fb_StrConcat( &TMP$3127$3, (void*)"mplayer -vo xv -fs -alang en dv://", 35ll, (void*)vr$6228, -1ll );
   __builtin_memset( &TMP$3128$3, 0, 24ll );
   FBSTRING* vr$6234 = fb_StrConcat( &TMP$3128$3, (void*)vr$6231, -1ll, (void*)" -dvd-device /dev/sr0", 22ll );
   fb_Shell( (FBSTRING*)vr$6234 );
   fb_GfxScreenRes( 1920, 1080, 32, 7, 64, 0 );
   fb_Cls( -65536 );
   FBSTRING* vr$6235 = fb_StrAllocTempDescZEx( (uint8*)"", 0ll );
   fb_GfxPaint( (void*)0ull, 0x0p+0f, 0x0p+0f, 4278190080u, 0u, (FBSTRING*)vr$6235, 0, 1073741828 );
  }
  goto label$8963;
  label$8966:;
  if( ADR$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$8968;
  label$8969:;
  {
   fb_GfxScreen( 0, 8, 0, 0, 0 );
   FBSTRING* vr$6242 = fb_StrAllocTempDescZEx( (uint8*)"mplayer -vo xv -fs dvdnav:// -mouse-movements -dvd-device /dev/sr0", 66ll );
   fb_Shell( (FBSTRING*)vr$6242 );
   fb_GfxScreenRes( 1920, 1080, 32, 7, 64, 0 );
   fb_Cls( -65536 );
   FBSTRING* vr$6243 = fb_StrAllocTempDescZEx( (uint8*)"", 0ll );
   fb_GfxPaint( (void*)0ull, 0x0p+0f, 0x0p+0f, 4278190080u, 0u, (FBSTRING*)vr$6243, 0, 1073741828 );
  }
  goto label$8963;
  label$8968:;
  if( ADR$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$8970;
  label$8971:;
  {
   *(double*)((int64)(double*)MEM64$ + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) << (3ll & 63ll))) = (double)(((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) << (3ll & 63ll))) )) << ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) << (3ll & 63ll))) )) << (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) << (3ll & 63ll))) )) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + *(double*)((int64)(double*)MEM64$ + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) << (3ll & 63ll)));
  }
  goto label$8963;
  label$8970:;
  if( ADR$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$8972;
  label$8973:;
  {
   *(double*)((int64)(double*)MEM64$ + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) << (3ll & 63ll))) = (double)(((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) << (3ll & 63ll))) )) << ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) << (3ll & 63ll))) )) << (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) << (3ll & 63ll))) )) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + *(double*)((int64)(double*)MEM64$ + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) << (3ll & 63ll)));
  }
  goto label$8963;
  label$8972:;
  if( ADR$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$8974;
  label$8975:;
  {
   *(double*)((int64)(double*)MEM64$ + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) << (3ll & 63ll))) = (double)(((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) << (3ll & 63ll))) )) << ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) << (3ll & 63ll))) )) << (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) << (3ll & 63ll))) )) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + *(double*)((int64)(double*)MEM64$ + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) << (3ll & 63ll)));
  }
  goto label$8963;
  label$8974:;
  if( ADR$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$8976;
  label$8977:;
  {
   *(double*)((int64)(double*)MEM64$ + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) << (3ll & 63ll))) = (double)(((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) << (3ll & 63ll))) )) << ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) << (3ll & 63ll))) )) << (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) << (3ll & 63ll))) )) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + *(double*)((int64)(double*)MEM64$ + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) << (3ll & 63ll)));
  }
  goto label$8963;
  label$8976:;
  if( ADR$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$8978;
  label$8979:;
  {
   *(double*)((int64)(double*)MEM64$ + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) << (3ll & 63ll))) = (double)(((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) << (3ll & 63ll))) )) << ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) << (3ll & 63ll))) )) << (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) << (3ll & 63ll))) )) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + *(double*)((int64)(double*)MEM64$ + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) << (3ll & 63ll)));
  }
  goto label$8963;
  label$8978:;
  if( ADR$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$8980;
  label$8981:;
  {
   *(double*)((int64)(double*)MEM64$ + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) << (3ll & 63ll))) = (double)(((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) << (3ll & 63ll))) )) << ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) << (3ll & 63ll))) )) << (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) << (3ll & 63ll))) )) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + *(double*)((int64)(double*)MEM64$ + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) << (3ll & 63ll)));
  }
  goto label$8963;
  label$8980:;
  if( ADR$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$8982;
  label$8983:;
  {
   *(double*)((int64)(double*)MEM64$ + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) << (3ll & 63ll))) = (double)(((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) << (3ll & 63ll))) )) << ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) << (3ll & 63ll))) )) << (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) << (3ll & 63ll))) )) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + *(double*)((int64)(double*)MEM64$ + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) << (3ll & 63ll)));
  }
  goto label$8963;
  label$8982:;
  if( ADR$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$8984;
  label$8985:;
  {
   *(double*)((int64)(double*)MEM64$ + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) << (3ll & 63ll))) = (double)(((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) << (3ll & 63ll))) )) << ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) << (3ll & 63ll))) )) << (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) << (3ll & 63ll))) )) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + *(double*)((int64)(double*)MEM64$ + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) << (3ll & 63ll)));
  }
  goto label$8963;
  label$8984:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$8986;
  label$8987:;
  {
   *(double*)((int64)(double*)MEM64$ + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393304ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393312ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393320ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393328ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 393336ll);
  }
  goto label$8963;
  label$8986:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$8988;
  label$8989:;
  {
   *(double*)((int64)(double*)MEM64$ + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) << (3ll & 63ll))) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393352ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393360ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393368ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393376ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 393384ll);
  }
  goto label$8963;
  label$8988:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$8990;
  label$8991:;
  {
   *(double*)((int64)(double*)MEM64$ + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) << (3ll & 63ll))) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393400ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393408ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393416ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393424ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 393432ll);
  }
  goto label$8963;
  label$8990:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$8992;
  label$8993:;
  {
   *(double*)((int64)(double*)MEM64$ + 394864ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393448ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393456ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393464ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393472ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 393480ll);
  }
  goto label$8963;
  label$8992:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$8994;
  label$8995:;
  {
   *(double*)((int64)(double*)MEM64$ + 394872ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393496ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393504ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393512ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393520ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 393528ll);
  }
  goto label$8963;
  label$8994:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$8996;
  label$8997:;
  {
   *(double*)((int64)(double*)MEM64$ + 394880ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393544ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393552ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393560ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393568ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 393576ll);
  }
  goto label$8963;
  label$8996:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$8998;
  label$8999:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393592ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393600ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393608ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393616ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 393624ll);
  }
  goto label$8963;
  label$8998:;
  if( ADR$1 != 0x1.8068p+15 ) goto label$9000;
  label$9001:;
  {
   *(double*)((int64)(double*)MEM64$ + 394896ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393640ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393648ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393656ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393664ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 393672ll);
  }
  goto label$8963;
  label$9000:;
  if( ADR$1 != 0x1.8074p+15 ) goto label$9002;
  label$9003:;
  {
   *(double*)((int64)(double*)MEM64$ + 394904ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393688ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393696ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393704ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393712ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 393720ll);
  }
  goto label$8963;
  label$9002:;
  if( ADR$1 != 0x1.808p+15 ) goto label$9004;
  label$9005:;
  {
   *(double*)((int64)(double*)MEM64$ + 394912ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393736ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393744ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393752ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393768ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 393776ll);
  }
  goto label$8963;
  label$9004:;
  if( ADR$1 != 0x1.808Ep+15 ) goto label$9006;
  label$9007:;
  {
   *(double*)((int64)(double*)MEM64$ + 394920ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393792ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393800ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393808ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393816ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 393824ll);
  }
  goto label$8963;
  label$9006:;
  if( ADR$1 != 0x1.8096p+15 ) goto label$9008;
  label$9009:;
  {
   *(double*)((int64)(double*)MEM64$ + 394928ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393832ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393840ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393848ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393856ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 393864ll);
  }
  goto label$8963;
  label$9008:;
  if( ADR$1 != 0x1.80A4p+15 ) goto label$9010;
  label$9011:;
  {
   *(double*)((int64)(double*)MEM64$ + 394936ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393880ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393888ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393896ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393904ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 393912ll);
  }
  goto label$8963;
  label$9010:;
  if( ADR$1 != 0x1.80Bp+15 ) goto label$9012;
  label$9013:;
  {
   *(double*)((int64)(double*)MEM64$ + 394944ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393928ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393936ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393944ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393952ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 393960ll);
  }
  goto label$8963;
  label$9012:;
  if( ADR$1 != 0x1.80BCp+15 ) goto label$9014;
  label$9015:;
  {
   *(double*)((int64)(double*)MEM64$ + 394952ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393976ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393984ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393992ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394000ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 394008ll);
  }
  goto label$8963;
  label$9014:;
  if( ADR$1 != 0x1.80C8p+15 ) goto label$9016;
  label$9017:;
  {
   *(double*)((int64)(double*)MEM64$ + 394960ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394024ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394032ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 386040ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394048ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 394056ll);
  }
  goto label$8963;
  label$9016:;
  if( ADR$1 != 0x1.80D4p+15 ) goto label$9018;
  label$9019:;
  {
   *(double*)((int64)(double*)MEM64$ + 394968ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394072ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394080ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394088ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394096ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 394104ll);
  }
  goto label$8963;
  label$9018:;
  if( ADR$1 != 0x1.80Ep+15 ) goto label$9020;
  label$9021:;
  {
   *(double*)((int64)(double*)MEM64$ + 394976ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394120ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394128ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394136ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394144ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 394152ll);
  }
  goto label$8963;
  label$9020:;
  if( ADR$1 != 0x1.80ECp+15 ) goto label$9022;
  label$9023:;
  {
   *(double*)((int64)(double*)MEM64$ + 394984ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394168ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394176ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394184ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394192ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 394200ll);
  }
  goto label$8963;
  label$9022:;
  if( ADR$1 != 0x1.80F8p+15 ) goto label$9024;
  label$9025:;
  {
   *(double*)((int64)(double*)MEM64$ + 394992ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394216ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394224ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394232ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394240ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 394248ll);
  }
  goto label$8963;
  label$9024:;
  if( ADR$1 != 0x1.8104p+15 ) goto label$9026;
  label$9027:;
  {
   *(double*)((int64)(double*)MEM64$ + 395000ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394264ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394272ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394280ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394288ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 394296ll);
  }
  goto label$8963;
  label$9026:;
  if( ADR$1 != 0x1.811p+15 ) goto label$9028;
  label$9029:;
  {
   *(double*)((int64)(double*)MEM64$ + 395008ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394312ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394320ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394328ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394336ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 394344ll);
  }
  goto label$8963;
  label$9028:;
  if( ADR$1 != 0x1.811Cp+15 ) goto label$9030;
  label$9031:;
  {
   *(double*)((int64)(double*)MEM64$ + 395016ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394360ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394368ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394376ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394384ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 394392ll);
  }
  goto label$8963;
  label$9030:;
  if( ADR$1 != 0x1.8128p+15 ) goto label$9032;
  label$9033:;
  {
   *(double*)((int64)(double*)MEM64$ + 395024ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394408ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394416ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394424ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394432ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 394440ll);
  }
  goto label$8963;
  label$9032:;
  if( ADR$1 != 0x1.8134p+15 ) goto label$9034;
  label$9035:;
  {
   *(double*)((int64)(double*)MEM64$ + 395032ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394456ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394464ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394472ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394480ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 394488ll);
  }
  goto label$8963;
  label$9034:;
  if( ADR$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) ) goto label$9036;
  label$9037:;
  {
   typedef void (*_ZN12SYSTEM_BUS_T8tmp$3130Elllla)( int64, int64, int64, int64, int8 );
   ((_ZN12SYSTEM_BUS_T8tmp$3130Elllla)&GLSCREEN)( ((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394952ll) )), ((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394960ll) )), -1ll, -1ll, (int8)-1 );
  }
  goto label$8963;
  label$9036:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$9038;
  label$9039:;
  {
   {
    uint64 TMP$3131$4;
    TMP$3131$4 = ((uint64)__builtin_nearbyint( V$1 ));
    goto label$9041;
    label$9042:;
    {
     FBSTRING TMP$3140$5;
     int8 BFULLSCREEN$5;
     __builtin_memset( &BFULLSCREEN$5, 0, 1ll );
     int8 BTEXTURED$5;
     __builtin_memset( &BTEXTURED$5, 0, 1ll );
     int8 BNOISE$5;
     __builtin_memset( &BNOISE$5, 0, 1ll );
     int8 BLINEAR$5;
     __builtin_memset( &BLINEAR$5, 0, 1ll );
     int8 BNEAREST$5;
     __builtin_memset( &BNEAREST$5, 0, 1ll );
     int8 BNEARESTLINEAR$5;
     __builtin_memset( &BNEARESTLINEAR$5, 0, 1ll );
     int8 BLINEARNEAREST$5;
     __builtin_memset( &BLINEARNEAREST$5, 0, 1ll );
     int8 BMIPMAP$5;
     __builtin_memset( &BMIPMAP$5, 0, 1ll );
     int8 BREPEAT$5;
     __builtin_memset( &BREPEAT$5, 0, 1ll );
     *(double*)((int64)(double*)MEM64$ + 394952ll) = 0x1.Ep+10;
     *(double*)((int64)(double*)MEM64$ + 394960ll) = 0x1.0Ep+10;
     _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.814p+15, 0x0p+0 );
     struct $4VEC3 V3$5;
     __builtin_memset( &V3$5, 0, 12ll );
     *(float*)&V3$5 = 0x1.Ep+10f;
     *(float*)((uint8*)&V3$5 + 4ll) = 0x1.0Ep+10f;
     *(float*)((uint8*)&V3$5 + 8ll) = (float)((double)*(float*)&V3$5 / (double)*(float*)((uint8*)&V3$5 + 4ll));
     struct $9SHADERTOY SHADER$5;
     _ZN9SHADERTOYC1Ev( &SHADER$5 );
     int64 vr$7174 = fb_StrLen( (void*)&FILENAME$, -1ll );
     if( vr$7174 != 0ll ) goto label$9044;
     {
      BTEXTURED$5 = (int8)-1;
      fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"./shaders/pc/demo.glsl", 23ll, 0 );
     }
     label$9044:;
     label$9043:;
     int8 vr$7176 = _ZN9SHADERTOY11COMPILEFILEER8FBSTRING( &SHADER$5, &FILENAME$ );
     if( (int64)vr$7176 != 0ll ) goto label$9046;
     {
      FBSTRING TMP$3135$6;
      FBSTRING TMP$3136$6;
      FBSTRING TMP$3137$6;
      FBSTRING TMP$3138$6;
      __builtin_memset( &TMP$3138$6, 0, 24ll );
      __builtin_memset( &TMP$3135$6, 0, 24ll );
      FBSTRING* vr$7182 = fb_StrConcat( &TMP$3135$6, (void*)"file: ", 7ll, (void*)&FILENAME$, -1ll );
      __builtin_memset( &TMP$3136$6, 0, 24ll );
      FBSTRING* vr$7185 = fb_StrConcat( &TMP$3136$6, (void*)vr$7182, -1ll, (void*)"\x0A\x0A", 3ll );
      __builtin_memset( &TMP$3137$6, 0, 24ll );
      FBSTRING* vr$7188 = fb_StrConcat( &TMP$3137$6, (void*)vr$7185, -1ll, (void*)((uint8*)&SHADER$5 + 8ll), -1ll );
      fb_StrAssign( (void*)&TMP$3138$6, -1ll, (void*)vr$7188, -1ll, 0 );
      ERROREXIT( &TMP$3138$6 );
      fb_StrDelete( (FBSTRING*)&TMP$3138$6 );
     }
     label$9046:;
     label$9045:;
     __builtin_memset( &TMP$3140$5, 0, 24ll );
     FBSTRING* vr$7194 = fb_StrConcat( &TMP$3140$5, (void*)&FILENAME$, -1ll, (void*)" ok ...", 8ll );
     fb_GfxSetWindowTitle( (FBSTRING*)vr$7194 );
     (GLUSEPROGRAM$)( *(uint32*)((uint8*)&SHADER$5 + 4ll) );
     int32 TEXTURES$5[4];
     __builtin_memset( (int32*)TEXTURES$5, 0, 16ll );
     struct $N12SYSTEM_BUS_T8FBARRAY1IiEE {
      int32* DATA;
      int32* PTR;
      int64 SIZE;
      int64 ELEMENT_LEN;
      int64 DIMENSIONS;
      int64 FLAGS;
      struct $16__FB_ARRAYDIMTB$ DIMTB[1];
     };
     extern int __$fb_structsizecheck[(sizeof( struct $N12SYSTEM_BUS_T8FBARRAY1IiEE ) == 72) ? 1 : -1];
     struct $N12SYSTEM_BUS_T8FBARRAY1IiEE tmp$3141$5;
     *(int32**)&tmp$3141$5 = (int32*)TEXTURES$5;
     *(int32**)((uint8*)&tmp$3141$5 + 8ll) = (int32*)TEXTURES$5;
     *(int64*)((uint8*)&tmp$3141$5 + 16ll) = 16ll;
     *(int64*)((uint8*)&tmp$3141$5 + 24ll) = 4ll;
     *(int64*)((uint8*)&tmp$3141$5 + 32ll) = 1ll;
     *(int64*)((uint8*)&tmp$3141$5 + 40ll) = 49ll;
     *(int64*)((uint8*)&tmp$3141$5 + 48ll) = 4ll;
     *(int64*)((uint8*)&tmp$3141$5 + 56ll) = 0ll;
     *(int64*)((uint8*)&tmp$3141$5 + 64ll) = 3ll;
     glGenTextures( 4, (uint32*)TEXTURES$5 );
     if( (int64)BTEXTURED$5 == 0ll ) goto label$9048;
     {
      int64 TMP$3145$6;
      if( FGIMAGE$ != (void*)0ull ) goto label$9050;
      {
       void* vr$7200 = fb_GfxImageCreate( 512, 512, 4278190080u, 32, 0 );
       FGIMAGE$ = vr$7200;
       if( (int64)BNOISE$5 != -1ll ) goto label$9052;
       {
        {
         int64 Y$9;
         Y$9 = 0ll;
         label$9056:;
         {
          {
           int64 X$11;
           X$11 = 0ll;
           label$9060:;
           {
            double vr$7202 = fb_Rnd( 0x1.p+0f );
            double vr$7208 = fb_Rnd( 0x1.p+0f );
            double vr$7215 = fb_Rnd( 0x1.p+0f );
            fb_GfxPset( FGIMAGE$, (float)X$11, (float)Y$9, (uint32)(((((int64)(uint32)(uint8)((int32)__builtin_nearbyint( vr$7202 * 0x1.FEp+7 )) << (16ll & 63ll)) | ((int64)(uint32)(uint8)((int32)__builtin_nearbyint( vr$7208 * 0x1.FEp+7 )) << (8ll & 63ll))) | (int64)(uint32)(uint8)((int32)__builtin_nearbyint( vr$7215 * 0x1.FEp+7 ))) | 4278190080ll), 4, 0 );
           }
           label$9058:;
           X$11 = X$11 + 1ll;
           label$9057:;
           if( X$11 <= 512ll ) goto label$9060;
           label$9059:;
          }
         }
         label$9054:;
         Y$9 = Y$9 + 1ll;
         label$9053:;
         if( Y$9 <= 512ll ) goto label$9056;
         label$9055:;
        }
       }
       goto label$9051;
       label$9052:;
       {
        {
         int64 Y$9;
         Y$9 = 0ll;
         label$9064:;
         {
          {
           int64 X$11;
           X$11 = 0ll;
           label$9068:;
           {
            uint32 TMP$3142$12;
            if( ((X$11 + Y$9) % 2ll) != 0ll ) goto label$9069;
            TMP$3142$12 = 4294967295u;
            goto label$11962;
            label$9069:;
            TMP$3142$12 = 4278190080u;
            label$11962:;
            fb_GfxLine( FGIMAGE$, (float)((double)(X$11 << (9ll & 63ll)) / 0x1.p+4), (float)((double)(Y$9 << (9ll & 63ll)) / 0x1.p+4), 0x1.Fp+4f, 0x1.Fp+4f, TMP$3142$12, 2, 65535u, 1 );
           }
           label$9066:;
           X$11 = X$11 + 1ll;
           label$9065:;
           if( X$11 <= 32ll ) goto label$9068;
           label$9067:;
          }
         }
         label$9062:;
         Y$9 = Y$9 + 1ll;
         label$9061:;
         if( Y$9 <= 32ll ) goto label$9064;
         label$9063:;
        }
        FBSTRING* vr$7239 = fb_StrAllocTempDescZEx( (uint8*)"FreeBASIC", 9ll );
        fb_GfxDrawString( FGIMAGE$, 0x0p+0f, 0x0p+0f, 4, (FBSTRING*)vr$7239, 4294901760u, (void*)0ull, 0, (void*)0ull, (void*)0ull, (void*)0ull );
        FBSTRING* vr$7240 = fb_StrAllocTempDescZEx( (uint8*)"Shadertoy.com", 13ll );
        fb_GfxDrawString( FGIMAGE$, 0x1.8p+4f, 0x1.8p+4f, 4, (FBSTRING*)vr$7240, 4278255360u, (void*)0ull, 0, (void*)0ull, (void*)0ull, (void*)0ull );
       }
       label$9051:;
      }
      label$9050:;
      label$9049:;
      int64 TW$6;
      __builtin_memset( &TW$6, 0, 8ll );
      int64 TH$6;
      __builtin_memset( &TH$6, 0, 8ll );
      int64 TB$6;
      __builtin_memset( &TB$6, 0, 8ll );
      int64 TP$6;
      __builtin_memset( &TP$6, 0, 8ll );
      void* PIXELS$6;
      __builtin_memset( &PIXELS$6, 0, 8ll );
      TMP$3145$6 = 0ll;
      fb_GfxImageInfo64( (void*)FGIMAGE$, (int64*)&TW$6, (int64*)&TH$6, (int64*)&TB$6, (int64*)&TP$6, &PIXELS$6, &TMP$3145$6 );
      glBindTexture( 3553u, *(uint32*)TEXTURES$5 );
      if( (int64)BMIPMAP$5 == 0ll ) goto label$9071;
      {
       glTexParameteri( 3553u, 33169u, 1 );
       glTexParameteri( 3553u, 10240u, 9728 );
       glTexParameteri( 3553u, 10241u, 9987 );
      }
      label$9071:;
      label$9070:;
      if( (int64)BREPEAT$5 == 0ll ) goto label$9073;
      {
       glTexParameteri( 3553u, 10242u, 10497 );
       glTexParameteri( 3553u, 10243u, 10497 );
      }
      label$9073:;
      label$9072:;
      if( (int64)BLINEAR$5 == 0ll ) goto label$9075;
      {
       glTexParameteri( 3553u, 10241u, 9729 );
       glTexParameteri( 3553u, 10240u, 9729 );
      }
      goto label$9074;
      label$9075:;
      if( (int64)BNEAREST$5 == 0ll ) goto label$9076;
      {
       glTexParameteri( 3553u, 10241u, 9728 );
       glTexParameteri( 3553u, 10240u, 9728 );
      }
      goto label$9074;
      label$9076:;
      if( (int64)BNEARESTLINEAR$5 == 0ll ) goto label$9077;
      {
       glTexParameteri( 3553u, 10241u, 9728 );
       glTexParameteri( 3553u, 10240u, 9729 );
      }
      goto label$9074;
      label$9077:;
      if( (int64)BLINEARNEAREST$5 == 0ll ) goto label$9078;
      {
       glTexParameteri( 3553u, 10241u, 9729 );
       glTexParameteri( 3553u, 10240u, 9728 );
      }
      label$9078:;
      label$9074:;
      glTexImage2D( 3553u, 0, 6408, (int32)TW$6, (int32)TH$6, 0, 32993u, 5121u, (void*)PIXELS$6 );
      glBindTexture( 3553u, 0u );
     }
     label$9048:;
     label$9047:;
     int32 ICHANNEL0$5;
     int32 vr$7260 = (GLGETUNIFORMLOCATION$)( *(uint32*)((uint8*)&SHADER$5 + 4ll), (uint8*)"iChannel0" );
     ICHANNEL0$5 = vr$7260;
     if( (int64)ICHANNEL0$5 <= -1ll ) goto label$9080;
     {
      (GLUNIFORM1I$)( ICHANNEL0$5, 0 );
      glActiveTexture( 33984u );
      glBindTexture( 3553u, *(uint32*)TEXTURES$5 );
     }
     label$9080:;
     label$9079:;
     int32 IGLOBALTIME$5;
     int32 vr$7262 = (GLGETUNIFORMLOCATION$)( *(uint32*)((uint8*)&SHADER$5 + 4ll), (uint8*)"iGlobalTime" );
     IGLOBALTIME$5 = vr$7262;
     int32 ITIME$5;
     int32 vr$7263 = (GLGETUNIFORMLOCATION$)( *(uint32*)((uint8*)&SHADER$5 + 4ll), (uint8*)"iTime" );
     ITIME$5 = vr$7263;
     int32 IRESOLUTION$5;
     int32 vr$7264 = (GLGETUNIFORMLOCATION$)( *(uint32*)((uint8*)&SHADER$5 + 4ll), (uint8*)"iResolution" );
     IRESOLUTION$5 = vr$7264;
     int32 IMOUSE$5;
     int32 vr$7265 = (GLGETUNIFORMLOCATION$)( *(uint32*)((uint8*)&SHADER$5 + 4ll), (uint8*)"iMouse" );
     IMOUSE$5 = vr$7265;
     int32 IFRAME$5;
     int32 vr$7266 = (GLGETUNIFORMLOCATION$)( *(uint32*)((uint8*)&SHADER$5 + 4ll), (uint8*)"iFrame" );
     IFRAME$5 = vr$7266;
     if( (int64)IRESOLUTION$5 <= -1ll ) goto label$9082;
     {
      (GLUNIFORM3F$)( IRESOLUTION$5, *(float*)&V3$5, *(float*)((uint8*)&V3$5 + 4ll), *(float*)((uint8*)&V3$5 + 8ll) );
      label$9082:;
     }
     int64 OX$5;
     OX$5 = -1ll;
     int64 OY$5;
     OY$5 = -1ll;
     int64 OB$5;
     OB$5 = -1ll;
     int64 MX$5;
     __builtin_memset( &MX$5, 0, 8ll );
     int64 MY$5;
     __builtin_memset( &MY$5, 0, 8ll );
     int64 MB$5;
     __builtin_memset( &MB$5, 0, 8ll );
     int64 FRAMES$5;
     __builtin_memset( &FRAMES$5, 0, 8ll );
     int64 FPS$5;
     __builtin_memset( &FPS$5, 0, 8ll );
     double TRUNTIME$5;
     __builtin_memset( &TRUNTIME$5, 0, 8ll );
     double TSTART$5;
     double vr$7274 = fb_Timer( );
     TSTART$5 = vr$7274;
     double TNOW$5;
     __builtin_memset( &TNOW$5, 0, 8ll );
     double TLAST$5;
     TLAST$5 = TSTART$5;
     label$9083:;
     FBSTRING* vr$7276 = fb_Inkey( );
     int32 vr$7277 = fb_StrCompare( (void*)vr$7276, -1ll, (void*)"", 1ll );
     if( (int64)vr$7277 != 0ll ) goto label$9084;
     {
      double vr$7279 = fb_Timer( );
      TNOW$5 = vr$7279;
      TRUNTIME$5 = TNOW$5 - TSTART$5;
      if( (int64)ITIME$5 <= -1ll ) goto label$9086;
      {
       (GLUNIFORM1F$)( ITIME$5, (float)TRUNTIME$5 );
      }
      goto label$9085;
      label$9086:;
      if( (int64)IGLOBALTIME$5 <= -1ll ) goto label$9087;
      {
       (GLUNIFORM1F$)( IGLOBALTIME$5, (float)TRUNTIME$5 );
      }
      label$9087:;
      label$9085:;
      if( (int64)IFRAME$5 <= -1ll ) goto label$9089;
      {
       (GLUNIFORM1F$)( IFRAME$5, (float)FRAMES$5 );
       label$9089:;
      }
      if( (int64)IMOUSE$5 <= -1ll ) goto label$9091;
      {
       int64 TMP$3152$7;
       int64 TMP$3153$7;
       TMP$3153$7 = 0ll;
       TMP$3152$7 = 0ll;
       int32 vr$7293 = fb_GetMouse64( (int64*)&MX$5, (int64*)&MY$5, &TMP$3152$7, (int64*)&MB$5, &TMP$3153$7 );
       if( (int64)vr$7293 != 0ll ) goto label$9093;
       {
        int64 TMP$3154$8;
        int64 TMP$3155$8;
        if( OX$5 != MX$5 ) goto label$9094;
        TMP$3154$8 = (int64)-(OY$5 != MY$5);
        goto label$11963;
        label$9094:;
        TMP$3154$8 = -1ll;
        label$11963:;
        if( TMP$3154$8 != 0ll ) goto label$9095;
        TMP$3155$8 = (int64)-(OB$5 != MB$5);
        goto label$11964;
        label$9095:;
        TMP$3155$8 = -1ll;
        label$11964:;
        if( TMP$3155$8 == 0ll ) goto label$9097;
        {
         (GLUNIFORM4F$)( IMOUSE$5, (float)MX$5, (float)(SCR_H$ - (uint64)MY$5), (float)MB$5, 0x1.p+0f );
         OX$5 = MX$5;
         OY$5 = MY$5;
         OB$5 = MB$5;
        }
        label$9097:;
        label$9096:;
       }
       label$9093:;
       label$9092:;
      }
      label$9091:;
      label$9090:;
      glRectf( -0x1.p+0f, -0x1.p+0f, 0x1.p+0f, 0x1.p+0f );
      fb_GfxFlip( -1, -1 );
      FRAMES$5 = FRAMES$5 + 1ll;
      if( (FRAMES$5 % 60ll) != 0ll ) goto label$9099;
      {
       FBSTRING TMP$3157$7;
       FBSTRING TMP$3158$7;
       double vr$7303 = fb_Timer( );
       TNOW$5 = vr$7303;
       FPS$5 = ((int64)__builtin_nearbyint( 0x1.Ep+5 / (TNOW$5 - TLAST$5) ));
       TLAST$5 = TNOW$5;
       FBSTRING* vr$7307 = fb_LongintToStr( FPS$5 );
       __builtin_memset( &TMP$3157$7, 0, 24ll );
       FBSTRING* vr$7310 = fb_StrConcat( &TMP$3157$7, (void*)&FILENAME$, -1ll, (void*)" fps: ", 7ll );
       __builtin_memset( &TMP$3158$7, 0, 24ll );
       FBSTRING* vr$7313 = fb_StrConcat( &TMP$3158$7, (void*)vr$7310, -1ll, (void*)vr$7307, -1ll );
       fb_GfxDrawString( (void*)0ull, 0x0p+0f, 0x0p+0f, -2147483644, (FBSTRING*)vr$7313, 0u, (void*)0ull, 0, (void*)0ull, (void*)0ull, (void*)0ull );
      }
      label$9099:;
      label$9098:;
     }
     goto label$9083;
     label$9084:;
     fb_StrAssign( (void*)&STRCODE$, -1ll, (void*)"", 1ll, 0 );
     fb_GfxScreenRes( 1920, 1080, 32, 7, 64, 0 );
     fb_Cls( -65536 );
     {
      OFFSET$ = 0x0p+0;
      label$9103:;
      {
       _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( SYS_OFFSET$ + 0x1.2Bp+8 )) << (3ll & 63ll))) + OFFSET$, 0x1.p+5 );
      }
      label$9101:;
      OFFSET$ = OFFSET$ + 0x1.p+0;
      label$9100:;
      if( OFFSET$ <= 0x1.p+10 ) goto label$9103;
      label$9102:;
     }
     _ZN9SHADERTOYD1Ev( &SHADER$5 );
    }
    goto label$9040;
    label$9104:;
    {
     FBSTRING* vr$7320 = fb_StrAllocTempDescZEx( (uint8*)"tmp.pov", 7ll );
     fb_FileOpen( (FBSTRING*)vr$7320, 3u, 0u, 0u, 1, 0 );
     FBSTRING* vr$7321 = fb_StrAllocTempDescZEx( (uint8*)"// Start of file", 16ll );
     fb_PrintString( 1, (FBSTRING*)vr$7321, 1 );
    }
    goto label$9040;
    label$9105:;
    {
     FBSTRING* vr$7322 = fb_StrAllocTempDescZEx( (uint8*)"// End of file", 14ll );
     fb_PrintString( 1, (FBSTRING*)vr$7322, 1 );
     fb_FileClose( 1 );
    }
    goto label$9040;
    label$9106:;
    {
     FBSTRING TMP$3166$5;
     FBSTRING TMP$3167$5;
     FBSTRING TMP$3170$5;
     FBSTRING TMP$3171$5;
     FBSTRING* vr$7323 = fb_StrAllocTempDescZEx( (uint8*)"povray -d -H600 -W800 tmp.pov", 29ll );
     fb_Shell( (FBSTRING*)vr$7323 );
     FBSTRING* vr$7324 = fb_StrAllocTempDescZEx( (uint8*)"convert tmp.png -w --o tmp.bmp", 30ll );
     fb_Shell( (FBSTRING*)vr$7324 );
     FBSTRING* vr$7325 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394952ll) );
     __builtin_memset( &TMP$3166$5, 0, 24ll );
     FBSTRING* vr$7328 = fb_StrConcat( &TMP$3166$5, (void*)"cp tmp.bmp ./vram/", 19ll, (void*)vr$7325, -1ll );
     __builtin_memset( &TMP$3167$5, 0, 24ll );
     FBSTRING* vr$7331 = fb_StrConcat( &TMP$3167$5, (void*)vr$7328, -1ll, (void*)".bmp", 5ll );
     fb_Shell( (FBSTRING*)vr$7331 );
     FBSTRING* vr$7332 = fb_StrAllocTempDescZEx( (uint8*)"rm tmp.pov tmp.png", 18ll );
     fb_Shell( (FBSTRING*)vr$7332 );
     fb_Cls( -65536 );
     FBSTRING* vr$7333 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394952ll) );
     __builtin_memset( &TMP$3170$5, 0, 24ll );
     FBSTRING* vr$7336 = fb_StrConcat( &TMP$3170$5, (void*)"./vram/", 8ll, (void*)vr$7333, -1ll );
     __builtin_memset( &TMP$3171$5, 0, 24ll );
     FBSTRING* vr$7339 = fb_StrConcat( &TMP$3171$5, (void*)vr$7336, -1ll, (void*)".bmp", 5ll );
     fb_GfxBload( (FBSTRING*)vr$7339, FGIMAGE$, (void*)0ull );
     fb_GfxPut( FGIMAGE$, 0x0p+0f, 0x0p+0f, (void*)_RENDER$, -65536, -65536, -65536, -65536, 0, 1, (void*)&fb_hPutPSet, -1, (void*)0ull, (void*)0ull );
    }
    goto label$9040;
    label$9107:;
    {
     *(double*)((int64)(double*)MEM64$ + 394952ll) = V$1;
    }
    goto label$9040;
    label$9108:;
    {
     {
      uint8 FRAME$6;
      FRAME$6 = (uint8)((int32)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394952ll) ));
      uint8 TMP$3173$6;
      TMP$3173$6 = (uint8)((int32)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394960ll) ));
      goto label$9109;
      label$9112:;
      {
       FBSTRING TMP$3175$7;
       FBSTRING TMP$3176$7;
       FBSTRING* vr$7343 = fb_UIntToStr( (uint32)FRAME$6 );
       __builtin_memset( &TMP$3175$7, 0, 24ll );
       FBSTRING* vr$7346 = fb_StrConcat( &TMP$3175$7, (void*)".\x5Cvram\x5C", 8ll, (void*)vr$7343, -1ll );
       __builtin_memset( &TMP$3176$7, 0, 24ll );
       FBSTRING* vr$7349 = fb_StrConcat( &TMP$3176$7, (void*)vr$7346, -1ll, (void*)".bmp", 5ll );
       fb_GfxBload( (FBSTRING*)vr$7349, _RENDER$, (void*)0ull );
       fb_SleepEx( 10, 1 );
       fb_GfxPut( FGIMAGE$, 0x0p+0f, 0x0p+0f, (void*)_RENDER$, -65536, -65536, -65536, -65536, 0, 1, (void*)&fb_hPutPSet, -1, (void*)0ull, (void*)0ull );
      }
      label$9110:;
      FRAME$6 = (uint8)((int64)FRAME$6 + 1ll);
      label$9109:;
      if( (int64)FRAME$6 <= (int64)TMP$3173$6 ) goto label$9112;
      label$9111:;
     }
    }
    goto label$9040;
    label$9113:;
    {
     {
      uint64 TMP$3178$6;
      TMP$3178$6 = ((uint64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394968ll) ));
      goto label$9115;
      label$9116:;
      {
       FBSTRING* vr$7356 = fb_StrAllocTempDescZEx( (uint8*)"a", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$7356, 0 );
      }
      goto label$9114;
      label$9117:;
      {
       FBSTRING* vr$7357 = fb_StrAllocTempDescZEx( (uint8*)"aa_level", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7357, 0 );
      }
      goto label$9114;
      label$9118:;
      {
       FBSTRING* vr$7358 = fb_StrAllocTempDescZEx( (uint8*)"aastep", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7358, 0 );
      }
      goto label$9114;
      label$9119:;
      {
       FBSTRING* vr$7359 = fb_StrAllocTempDescZEx( (uint8*)"aa_threshold", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$7359, 0 );
      }
      goto label$9114;
      label$9120:;
      {
       FBSTRING* vr$7360 = fb_StrAllocTempDescZEx( (uint8*)"abs", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7360, 0 );
      }
      goto label$9114;
      label$9121:;
      {
       FBSTRING* vr$7361 = fb_StrAllocTempDescZEx( (uint8*)"absolute", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7361, 0 );
      }
      goto label$9114;
      label$9122:;
      {
       FBSTRING* vr$7362 = fb_StrAllocTempDescZEx( (uint8*)"absorption", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7362, 0 );
      }
      goto label$9114;
      label$9123:;
      {
       FBSTRING* vr$7363 = fb_StrAllocTempDescZEx( (uint8*)"abstract", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7363, 0 );
      }
      goto label$9114;
      label$9124:;
      {
       FBSTRING* vr$7364 = fb_StrAllocTempDescZEx( (uint8*)"accept", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7364, 0 );
      }
      goto label$9114;
      label$9125:;
      {
       FBSTRING* vr$7365 = fb_StrAllocTempDescZEx( (uint8*)"access", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7365, 0 );
      }
      goto label$9114;
      label$9126:;
      {
       FBSTRING* vr$7366 = fb_StrAllocTempDescZEx( (uint8*)"accuracy", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7366, 0 );
      }
      goto label$9114;
      label$9127:;
      {
       FBSTRING* vr$7367 = fb_StrAllocTempDescZEx( (uint8*)"acos", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7367, 0 );
      }
      goto label$9114;
      label$9128:;
      {
       FBSTRING* vr$7368 = fb_StrAllocTempDescZEx( (uint8*)"acosh", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7368, 0 );
      }
      goto label$9114;
      label$9129:;
      {
       FBSTRING* vr$7369 = fb_StrAllocTempDescZEx( (uint8*)"active", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7369, 0 );
      }
      goto label$9114;
      label$9130:;
      {
       FBSTRING* vr$7370 = fb_StrAllocTempDescZEx( (uint8*)"adaptive", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7370, 0 );
      }
      goto label$9114;
      label$9131:;
      {
       FBSTRING* vr$7371 = fb_StrAllocTempDescZEx( (uint8*)"adc_bailout", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7371, 0 );
      }
      goto label$9114;
      label$9132:;
      {
       FBSTRING* vr$7372 = fb_StrAllocTempDescZEx( (uint8*)"add", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7372, 0 );
      }
      goto label$9114;
      label$9133:;
      {
       FBSTRING* vr$7373 = fb_StrAllocTempDescZEx( (uint8*)"address", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7373, 0 );
      }
      goto label$9114;
      label$9134:;
      {
       FBSTRING* vr$7374 = fb_StrAllocTempDescZEx( (uint8*)"advancing", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7374, 0 );
      }
      goto label$9114;
      label$9135:;
      {
       FBSTRING* vr$7375 = fb_StrAllocTempDescZEx( (uint8*)"after", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7375, 0 );
      }
      goto label$9114;
      label$9136:;
      {
       FBSTRING* vr$7376 = fb_StrAllocTempDescZEx( (uint8*)"agate", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7376, 0 );
      }
      goto label$9114;
      label$9137:;
      {
       FBSTRING* vr$7377 = fb_StrAllocTempDescZEx( (uint8*)"agate_turb", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7377, 0 );
      }
      goto label$9114;
      label$9138:;
      {
       FBSTRING* vr$7378 = fb_StrAllocTempDescZEx( (uint8*)"alias", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7378, 0 );
      }
      goto label$9114;
      label$9139:;
      {
       FBSTRING* vr$7379 = fb_StrAllocTempDescZEx( (uint8*)"all", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7379, 0 );
      }
      goto label$9114;
      label$9140:;
      {
       FBSTRING* vr$7380 = fb_StrAllocTempDescZEx( (uint8*)"all_intersections", 17ll );
       fb_PrintString( 1, (FBSTRING*)vr$7380, 0 );
      }
      goto label$9114;
      label$9141:;
      {
       FBSTRING* vr$7381 = fb_StrAllocTempDescZEx( (uint8*)"alpha", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7381, 0 );
      }
      goto label$9114;
      label$9142:;
      {
       FBSTRING* vr$7382 = fb_StrAllocTempDescZEx( (uint8*)"alphabet", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7382, 0 );
      }
      goto label$9114;
      label$9143:;
      {
       FBSTRING* vr$7383 = fb_StrAllocTempDescZEx( (uint8*)"alphabetic", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7383, 0 );
      }
      goto label$9114;
      label$9144:;
      {
       FBSTRING* vr$7384 = fb_StrAllocTempDescZEx( (uint8*)"alphabetic-lower", 16ll );
       fb_PrintString( 1, (FBSTRING*)vr$7384, 0 );
      }
      goto label$9114;
      label$9145:;
      {
       FBSTRING* vr$7385 = fb_StrAllocTempDescZEx( (uint8*)"alphabetic-upper", 16ll );
       fb_PrintString( 1, (FBSTRING*)vr$7385, 0 );
      }
      goto label$9114;
      label$9146:;
      {
       FBSTRING* vr$7386 = fb_StrAllocTempDescZEx( (uint8*)"alphanumeric", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$7386, 0 );
      }
      goto label$9114;
      label$9147:;
      {
       FBSTRING* vr$7387 = fb_StrAllocTempDescZEx( (uint8*)"alphanumeric-edited", 19ll );
       fb_PrintString( 1, (FBSTRING*)vr$7387, 0 );
      }
      goto label$9114;
      label$9148:;
      {
       FBSTRING* vr$7388 = fb_StrAllocTempDescZEx( (uint8*)"also", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7388, 0 );
      }
      goto label$9114;
      label$9149:;
      {
       FBSTRING* vr$7389 = fb_StrAllocTempDescZEx( (uint8*)"alter", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7389, 0 );
      }
      goto label$9114;
      label$9150:;
      {
       FBSTRING* vr$7390 = fb_StrAllocTempDescZEx( (uint8*)"alternate", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7390, 0 );
      }
      goto label$9114;
      label$9151:;
      {
       FBSTRING* vr$7391 = fb_StrAllocTempDescZEx( (uint8*)"altitude", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7391, 0 );
      }
      goto label$9114;
      label$9152:;
      {
       FBSTRING* vr$7392 = fb_StrAllocTempDescZEx( (uint8*)"always_sample", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$7392, 0 );
      }
      goto label$9114;
      label$9153:;
      {
       FBSTRING* vr$7393 = fb_StrAllocTempDescZEx( (uint8*)"ambient", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7393, 0 );
      }
      goto label$9114;
      label$9154:;
      {
       FBSTRING* vr$7394 = fb_StrAllocTempDescZEx( (uint8*)"ambient_light", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$7394, 0 );
      }
      goto label$9114;
      label$9155:;
      {
       FBSTRING* vr$7395 = fb_StrAllocTempDescZEx( (uint8*)"and", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7395, 0 );
      }
      goto label$9114;
      label$9156:;
      {
       FBSTRING* vr$7396 = fb_StrAllocTempDescZEx( (uint8*)"and_bits", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7396, 0 );
      }
      goto label$9114;
      label$9157:;
      {
       FBSTRING* vr$7397 = fb_StrAllocTempDescZEx( (uint8*)"angle", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7397, 0 );
      }
      goto label$9114;
      label$9158:;
      {
       FBSTRING* vr$7398 = fb_StrAllocTempDescZEx( (uint8*)"any", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7398, 0 );
      }
      goto label$9114;
      label$9159:;
      {
       FBSTRING* vr$7399 = fb_StrAllocTempDescZEx( (uint8*)"aperture", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7399, 0 );
      }
      goto label$9114;
      label$9160:;
      {
       FBSTRING* vr$7400 = fb_StrAllocTempDescZEx( (uint8*)"append", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7400, 0 );
      }
      goto label$9114;
      label$9161:;
      {
       FBSTRING* vr$7401 = fb_StrAllocTempDescZEx( (uint8*)"apply", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7401, 0 );
      }
      goto label$9114;
      label$9162:;
      {
       FBSTRING* vr$7402 = fb_StrAllocTempDescZEx( (uint8*)"arc_angle", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7402, 0 );
      }
      goto label$9114;
      label$9163:;
      {
       FBSTRING* vr$7403 = fb_StrAllocTempDescZEx( (uint8*)"are", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7403, 0 );
      }
      goto label$9114;
      label$9164:;
      {
       FBSTRING* vr$7404 = fb_StrAllocTempDescZEx( (uint8*)"area", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7404, 0 );
      }
      goto label$9114;
      label$9165:;
      {
       FBSTRING* vr$7405 = fb_StrAllocTempDescZEx( (uint8*)"area_light", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7405, 0 );
      }
      goto label$9114;
      label$9166:;
      {
       FBSTRING* vr$7406 = fb_StrAllocTempDescZEx( (uint8*)"areas", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7406, 0 );
      }
      goto label$9114;
      label$9167:;
      {
       FBSTRING* vr$7407 = fb_StrAllocTempDescZEx( (uint8*)"array", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7407, 0 );
      }
      goto label$9114;
      label$9168:;
      {
       FBSTRING* vr$7408 = fb_StrAllocTempDescZEx( (uint8*)"arraylength", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7408, 0 );
      }
      goto label$9114;
      label$9169:;
      {
       FBSTRING* vr$7409 = fb_StrAllocTempDescZEx( (uint8*)"as", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7409, 0 );
      }
      goto label$9114;
      label$9170:;
      {
       FBSTRING* vr$7410 = fb_StrAllocTempDescZEx( (uint8*)"asc", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7410, 0 );
      }
      goto label$9114;
      label$9171:;
      {
       FBSTRING* vr$7411 = fb_StrAllocTempDescZEx( (uint8*)"ascending", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7411, 0 );
      }
      goto label$9114;
      label$9172:;
      {
       FBSTRING* vr$7412 = fb_StrAllocTempDescZEx( (uint8*)"ascii", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7412, 0 );
      }
      goto label$9114;
      label$9173:;
      {
       FBSTRING* vr$7413 = fb_StrAllocTempDescZEx( (uint8*)"asin", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7413, 0 );
      }
      goto label$9114;
      label$9174:;
      {
       FBSTRING* vr$7414 = fb_StrAllocTempDescZEx( (uint8*)"asinh", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7414, 0 );
      }
      goto label$9114;
      label$9175:;
      {
       FBSTRING* vr$7415 = fb_StrAllocTempDescZEx( (uint8*)"asm", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7415, 0 );
      }
      goto label$9114;
      label$9176:;
      {
       FBSTRING* vr$7416 = fb_StrAllocTempDescZEx( (uint8*)"assembler", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7416, 0 );
      }
      goto label$9114;
      label$9177:;
      {
       FBSTRING* vr$7417 = fb_StrAllocTempDescZEx( (uint8*)"assert", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7417, 0 );
      }
      goto label$9114;
      label$9178:;
      {
       FBSTRING* vr$7418 = fb_StrAllocTempDescZEx( (uint8*)"assign", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7418, 0 );
      }
      goto label$9114;
      label$9179:;
      {
       FBSTRING* vr$7419 = fb_StrAllocTempDescZEx( (uint8*)"assumed_gamma", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$7419, 0 );
      }
      goto label$9114;
      label$9180:;
      {
       FBSTRING* vr$7420 = fb_StrAllocTempDescZEx( (uint8*)"async", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7420, 0 );
      }
      goto label$9114;
      label$9181:;
      {
       FBSTRING* vr$7421 = fb_StrAllocTempDescZEx( (uint8*)"at", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7421, 0 );
      }
      goto label$9114;
      label$9182:;
      {
       FBSTRING* vr$7422 = fb_StrAllocTempDescZEx( (uint8*)"atan", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7422, 0 );
      }
      goto label$9114;
      label$9183:;
      {
       FBSTRING* vr$7423 = fb_StrAllocTempDescZEx( (uint8*)"atan2", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7423, 0 );
      }
      goto label$9114;
      label$9184:;
      {
       FBSTRING* vr$7424 = fb_StrAllocTempDescZEx( (uint8*)"atanh", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7424, 0 );
      }
      goto label$9114;
      label$9185:;
      {
       FBSTRING* vr$7425 = fb_StrAllocTempDescZEx( (uint8*)"atn", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7425, 0 );
      }
      goto label$9114;
      label$9186:;
      {
       FBSTRING* vr$7426 = fb_StrAllocTempDescZEx( (uint8*)"attribute", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7426, 0 );
      }
      goto label$9114;
      label$9187:;
      {
       FBSTRING* vr$7427 = fb_StrAllocTempDescZEx( (uint8*)"author", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7427, 0 );
      }
      goto label$9114;
      label$9188:;
      {
       FBSTRING* vr$7428 = fb_StrAllocTempDescZEx( (uint8*)"auto", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7428, 0 );
      }
      goto label$9114;
      label$9189:;
      {
       FBSTRING* vr$7429 = fb_StrAllocTempDescZEx( (uint8*)"automatic", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7429, 0 );
      }
      goto label$9114;
      label$9190:;
      {
       FBSTRING* vr$7430 = fb_StrAllocTempDescZEx( (uint8*)"autostop", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7430, 0 );
      }
      goto label$9114;
      label$9191:;
      {
       FBSTRING* vr$7431 = fb_StrAllocTempDescZEx( (uint8*)"average", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7431, 0 );
      }
      goto label$9114;
      label$9192:;
      {
       FBSTRING* vr$7432 = fb_StrAllocTempDescZEx( (uint8*)"avg", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7432, 0 );
      }
      goto label$9114;
      label$9193:;
      {
       FBSTRING* vr$7433 = fb_StrAllocTempDescZEx( (uint8*)"await", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7433, 0 );
      }
      goto label$9114;
      label$9194:;
      {
       FBSTRING* vr$7434 = fb_StrAllocTempDescZEx( (uint8*)"b", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$7434, 0 );
      }
      goto label$9114;
      label$9195:;
      {
       FBSTRING* vr$7435 = fb_StrAllocTempDescZEx( (uint8*)"backfacing", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7435, 0 );
      }
      goto label$9114;
      label$9196:;
      {
       FBSTRING* vr$7436 = fb_StrAllocTempDescZEx( (uint8*)"background", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7436, 0 );
      }
      goto label$9114;
      label$9197:;
      {
       FBSTRING* vr$7437 = fb_StrAllocTempDescZEx( (uint8*)"backspace", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7437, 0 );
      }
      goto label$9114;
      label$9198:;
      {
       FBSTRING* vr$7438 = fb_StrAllocTempDescZEx( (uint8*)"basis", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7438, 0 );
      }
      goto label$9114;
      label$9199:;
      {
       FBSTRING* vr$7439 = fb_StrAllocTempDescZEx( (uint8*)"beep", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7439, 0 );
      }
      goto label$9114;
      label$9200:;
      {
       FBSTRING* vr$7440 = fb_StrAllocTempDescZEx( (uint8*)"before", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7440, 0 );
      }
      goto label$9114;
      label$9201:;
      {
       FBSTRING* vr$7441 = fb_StrAllocTempDescZEx( (uint8*)"begin", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7441, 0 );
      }
      goto label$9114;
      label$9202:;
      {
       FBSTRING* vr$7442 = fb_StrAllocTempDescZEx( (uint8*)"beginning", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7442, 0 );
      }
      goto label$9114;
      label$9203:;
      {
       FBSTRING* vr$7443 = fb_StrAllocTempDescZEx( (uint8*)"between", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7443, 0 );
      }
      goto label$9114;
      label$9204:;
      {
       FBSTRING* vr$7444 = fb_StrAllocTempDescZEx( (uint8*)"bezier_spline", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$7444, 0 );
      }
      goto label$9114;
      label$9205:;
      {
       FBSTRING* vr$7445 = fb_StrAllocTempDescZEx( (uint8*)"bicubic_patch", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$7445, 0 );
      }
      goto label$9114;
      label$9206:;
      {
       FBSTRING* vr$7446 = fb_StrAllocTempDescZEx( (uint8*)"binary", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7446, 0 );
      }
      goto label$9114;
      label$9207:;
      {
       FBSTRING* vr$7447 = fb_StrAllocTempDescZEx( (uint8*)"bind", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7447, 0 );
      }
      goto label$9114;
      label$9208:;
      {
       FBSTRING* vr$7448 = fb_StrAllocTempDescZEx( (uint8*)"blackbody", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7448, 0 );
      }
      goto label$9114;
      label$9209:;
      {
       FBSTRING* vr$7449 = fb_StrAllocTempDescZEx( (uint8*)"black_hole", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7449, 0 );
      }
      goto label$9114;
      label$9210:;
      {
       FBSTRING* vr$7450 = fb_StrAllocTempDescZEx( (uint8*)"blank", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7450, 0 );
      }
      goto label$9114;
      label$9211:;
      {
       FBSTRING* vr$7451 = fb_StrAllocTempDescZEx( (uint8*)"bload", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7451, 0 );
      }
      goto label$9114;
      label$9212:;
      {
       FBSTRING* vr$7452 = fb_StrAllocTempDescZEx( (uint8*)"blob", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7452, 0 );
      }
      goto label$9114;
      label$9213:;
      {
       FBSTRING* vr$7453 = fb_StrAllocTempDescZEx( (uint8*)"block", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7453, 0 );
      }
      goto label$9114;
      label$9214:;
      {
       FBSTRING* vr$7454 = fb_StrAllocTempDescZEx( (uint8*)"blue", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7454, 0 );
      }
      goto label$9114;
      label$9215:;
      {
       FBSTRING* vr$7455 = fb_StrAllocTempDescZEx( (uint8*)"blur_samples", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$7455, 0 );
      }
      goto label$9114;
      label$9216:;
      {
       FBSTRING* vr$7456 = fb_StrAllocTempDescZEx( (uint8*)"bool", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7456, 0 );
      }
      goto label$9114;
      label$9217:;
      {
       FBSTRING* vr$7457 = fb_StrAllocTempDescZEx( (uint8*)"both", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7457, 0 );
      }
      goto label$9114;
      label$9218:;
      {
       FBSTRING* vr$7458 = fb_StrAllocTempDescZEx( (uint8*)"bottom", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7458, 0 );
      }
      goto label$9114;
      label$9219:;
      {
       FBSTRING* vr$7459 = fb_StrAllocTempDescZEx( (uint8*)"bounded_by", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7459, 0 );
      }
      goto label$9114;
      label$9220:;
      {
       FBSTRING* vr$7460 = fb_StrAllocTempDescZEx( (uint8*)"box", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7460, 0 );
      }
      goto label$9114;
      label$9221:;
      {
       FBSTRING* vr$7461 = fb_StrAllocTempDescZEx( (uint8*)"boxed", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7461, 0 );
      }
      goto label$9114;
      label$9222:;
      {
       FBSTRING* vr$7462 = fb_StrAllocTempDescZEx( (uint8*)"bozo", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7462, 0 );
      }
      goto label$9114;
      label$9223:;
      {
       FBSTRING* vr$7463 = fb_StrAllocTempDescZEx( (uint8*)"break", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7463, 0 );
      }
      goto label$9114;
      label$9224:;
      {
       FBSTRING* vr$7464 = fb_StrAllocTempDescZEx( (uint8*)"brick", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7464, 0 );
      }
      goto label$9114;
      label$9225:;
      {
       FBSTRING* vr$7465 = fb_StrAllocTempDescZEx( (uint8*)"brick_size", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7465, 0 );
      }
      goto label$9114;
      label$9226:;
      {
       FBSTRING* vr$7466 = fb_StrAllocTempDescZEx( (uint8*)"brightness", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7466, 0 );
      }
      goto label$9114;
      label$9227:;
      {
       FBSTRING* vr$7467 = fb_StrAllocTempDescZEx( (uint8*)"brilliance", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7467, 0 );
      }
      goto label$9114;
      label$9228:;
      {
       FBSTRING* vr$7468 = fb_StrAllocTempDescZEx( (uint8*)"bsave", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7468, 0 );
      }
      goto label$9114;
      label$9229:;
      {
       FBSTRING* vr$7469 = fb_StrAllocTempDescZEx( (uint8*)"b_spline", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7469, 0 );
      }
      goto label$9114;
      label$9230:;
      {
       FBSTRING* vr$7470 = fb_StrAllocTempDescZEx( (uint8*)"bump", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7470, 0 );
      }
      goto label$9114;
      label$9231:;
      {
       FBSTRING* vr$7471 = fb_StrAllocTempDescZEx( (uint8*)"bump_map", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7471, 0 );
      }
      goto label$9114;
      label$9232:;
      {
       FBSTRING* vr$7472 = fb_StrAllocTempDescZEx( (uint8*)"bumps", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7472, 0 );
      }
      goto label$9114;
      label$9233:;
      {
       FBSTRING* vr$7473 = fb_StrAllocTempDescZEx( (uint8*)"bump_size", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7473, 0 );
      }
      goto label$9114;
      label$9234:;
      {
       FBSTRING* vr$7474 = fb_StrAllocTempDescZEx( (uint8*)"bvec2", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7474, 0 );
      }
      goto label$9114;
      label$9235:;
      {
       FBSTRING* vr$7475 = fb_StrAllocTempDescZEx( (uint8*)"bvec3", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7475, 0 );
      }
      goto label$9114;
      label$9236:;
      {
       FBSTRING* vr$7476 = fb_StrAllocTempDescZEx( (uint8*)"bvec4", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7476, 0 );
      }
      goto label$9114;
      label$9237:;
      {
       FBSTRING* vr$7477 = fb_StrAllocTempDescZEx( (uint8*)"by", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7477, 0 );
      }
      goto label$9114;
      label$9238:;
      {
       FBSTRING* vr$7478 = fb_StrAllocTempDescZEx( (uint8*)"byte", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7478, 0 );
      }
      goto label$9114;
      label$9239:;
      {
       FBSTRING* vr$7479 = fb_StrAllocTempDescZEx( (uint8*)"c", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$7479, 0 );
      }
      goto label$9114;
      label$9240:;
      {
       FBSTRING* vr$7480 = fb_StrAllocTempDescZEx( (uint8*)"cache", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7480, 0 );
      }
      goto label$9114;
      label$9241:;
      {
       FBSTRING* vr$7481 = fb_StrAllocTempDescZEx( (uint8*)"calculatenormal", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$7481, 0 );
      }
      goto label$9114;
      label$9242:;
      {
       FBSTRING* vr$7482 = fb_StrAllocTempDescZEx( (uint8*)"call", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7482, 0 );
      }
      goto label$9114;
      label$9243:;
      {
       FBSTRING* vr$7483 = fb_StrAllocTempDescZEx( (uint8*)"calls", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7483, 0 );
      }
      goto label$9114;
      label$9244:;
      {
       FBSTRING* vr$7484 = fb_StrAllocTempDescZEx( (uint8*)"camera", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7484, 0 );
      }
      goto label$9114;
      label$9245:;
      {
       FBSTRING* vr$7485 = fb_StrAllocTempDescZEx( (uint8*)"cancel", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7485, 0 );
      }
      goto label$9114;
      label$9246:;
      {
       FBSTRING* vr$7486 = fb_StrAllocTempDescZEx( (uint8*)"cardinality", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7486, 0 );
      }
      goto label$9114;
      label$9247:;
      {
       FBSTRING* vr$7487 = fb_StrAllocTempDescZEx( (uint8*)"case", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7487, 0 );
      }
      goto label$9114;
      label$9248:;
      {
       FBSTRING* vr$7488 = fb_StrAllocTempDescZEx( (uint8*)"cast", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7488, 0 );
      }
      goto label$9114;
      label$9249:;
      {
       FBSTRING* vr$7489 = fb_StrAllocTempDescZEx( (uint8*)"castnamespace", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$7489, 0 );
      }
      goto label$9114;
      label$9250:;
      {
       FBSTRING* vr$7490 = fb_StrAllocTempDescZEx( (uint8*)"caustics", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7490, 0 );
      }
      goto label$9114;
      label$9251:;
      {
       FBSTRING* vr$7491 = fb_StrAllocTempDescZEx( (uint8*)"cbl", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7491, 0 );
      }
      goto label$9114;
      label$9252:;
      {
       FBSTRING* vr$7492 = fb_StrAllocTempDescZEx( (uint8*)"cbrt", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7492, 0 );
      }
      goto label$9114;
      label$9253:;
      {
       FBSTRING* vr$7493 = fb_StrAllocTempDescZEx( (uint8*)"cd", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7493, 0 );
      }
      goto label$9114;
      label$9254:;
      {
       FBSTRING* vr$7494 = fb_StrAllocTempDescZEx( (uint8*)"cdbl", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7494, 0 );
      }
      goto label$9114;
      label$9255:;
      {
       FBSTRING* vr$7495 = fb_StrAllocTempDescZEx( (uint8*)"cdecl", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7495, 0 );
      }
      goto label$9114;
      label$9256:;
      {
       FBSTRING* vr$7496 = fb_StrAllocTempDescZEx( (uint8*)"ceil", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7496, 0 );
      }
      goto label$9114;
      label$9257:;
      {
       FBSTRING* vr$7497 = fb_StrAllocTempDescZEx( (uint8*)"cellnoise", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7497, 0 );
      }
      goto label$9114;
      label$9258:;
      {
       FBSTRING* vr$7498 = fb_StrAllocTempDescZEx( (uint8*)"cells", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7498, 0 );
      }
      goto label$9114;
      label$9259:;
      {
       FBSTRING* vr$7499 = fb_StrAllocTempDescZEx( (uint8*)"centroid", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7499, 0 );
      }
      goto label$9114;
      label$9260:;
      {
       FBSTRING* vr$7500 = fb_StrAllocTempDescZEx( (uint8*)"cf", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7500, 0 );
      }
      goto label$9114;
      label$9261:;
      {
       FBSTRING* vr$7501 = fb_StrAllocTempDescZEx( (uint8*)"ch", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7501, 0 );
      }
      goto label$9114;
      label$9262:;
      {
       FBSTRING* vr$7502 = fb_StrAllocTempDescZEx( (uint8*)"chain", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7502, 0 );
      }
      goto label$9114;
      label$9263:;
      {
       FBSTRING* vr$7503 = fb_StrAllocTempDescZEx( (uint8*)"char", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7503, 0 );
      }
      goto label$9114;
      label$9264:;
      {
       FBSTRING* vr$7504 = fb_StrAllocTempDescZEx( (uint8*)"character", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7504, 0 );
      }
      goto label$9114;
      label$9265:;
      {
       FBSTRING* vr$7505 = fb_StrAllocTempDescZEx( (uint8*)"character_length", 16ll );
       fb_PrintString( 1, (FBSTRING*)vr$7505, 0 );
      }
      goto label$9114;
      label$9266:;
      {
       FBSTRING* vr$7506 = fb_StrAllocTempDescZEx( (uint8*)"character_length_b", 18ll );
       fb_PrintString( 1, (FBSTRING*)vr$7506, 0 );
      }
      goto label$9114;
      label$9267:;
      {
       FBSTRING* vr$7507 = fb_StrAllocTempDescZEx( (uint8*)"character_length_mb", 19ll );
       fb_PrintString( 1, (FBSTRING*)vr$7507, 0 );
      }
      goto label$9114;
      label$9268:;
      {
       FBSTRING* vr$7508 = fb_StrAllocTempDescZEx( (uint8*)"characters", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7508, 0 );
      }
      goto label$9114;
      label$9269:;
      {
       FBSTRING* vr$7509 = fb_StrAllocTempDescZEx( (uint8*)"char_length", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7509, 0 );
      }
      goto label$9114;
      label$9270:;
      {
       FBSTRING* vr$7510 = fb_StrAllocTempDescZEx( (uint8*)"char_length_b", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$7510, 0 );
      }
      goto label$9114;
      label$9271:;
      {
       FBSTRING* vr$7511 = fb_StrAllocTempDescZEx( (uint8*)"char_length_mb", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$7511, 0 );
      }
      goto label$9114;
      label$9272:;
      {
       FBSTRING* vr$7512 = fb_StrAllocTempDescZEx( (uint8*)"charset", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7512, 0 );
      }
      goto label$9114;
      label$9273:;
      {
       FBSTRING* vr$7513 = fb_StrAllocTempDescZEx( (uint8*)"chdir", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7513, 0 );
      }
      goto label$9114;
      label$9274:;
      {
       FBSTRING* vr$7514 = fb_StrAllocTempDescZEx( (uint8*)"check", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7514, 0 );
      }
      goto label$9114;
      label$9275:;
      {
       FBSTRING* vr$7515 = fb_StrAllocTempDescZEx( (uint8*)"checker", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7515, 0 );
      }
      goto label$9114;
      label$9276:;
      {
       FBSTRING* vr$7516 = fb_StrAllocTempDescZEx( (uint8*)"chr", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7516, 0 );
      }
      goto label$9114;
      label$9277:;
      {
       FBSTRING* vr$7517 = fb_StrAllocTempDescZEx( (uint8*)"cint", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7517, 0 );
      }
      goto label$9114;
      label$9278:;
      {
       FBSTRING* vr$7518 = fb_StrAllocTempDescZEx( (uint8*)"circle", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7518, 0 );
      }
      goto label$9114;
      label$9279:;
      {
       FBSTRING* vr$7519 = fb_StrAllocTempDescZEx( (uint8*)"circular", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7519, 0 );
      }
      goto label$9114;
      label$9280:;
      {
       FBSTRING* vr$7520 = fb_StrAllocTempDescZEx( (uint8*)"clamp", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7520, 0 );
      }
      goto label$9114;
      label$9281:;
      {
       FBSTRING* vr$7521 = fb_StrAllocTempDescZEx( (uint8*)"class", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7521, 0 );
      }
      goto label$9114;
      label$9282:;
      {
       FBSTRING* vr$7522 = fb_StrAllocTempDescZEx( (uint8*)"class-id", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7522, 0 );
      }
      goto label$9114;
      label$9283:;
      {
       FBSTRING* vr$7523 = fb_StrAllocTempDescZEx( (uint8*)"clear", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7523, 0 );
      }
      goto label$9114;
      label$9284:;
      {
       FBSTRING* vr$7524 = fb_StrAllocTempDescZEx( (uint8*)"clipped_by", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7524, 0 );
      }
      goto label$9114;
      label$9285:;
      {
       FBSTRING* vr$7525 = fb_StrAllocTempDescZEx( (uint8*)"clock", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7525, 0 );
      }
      goto label$9114;
      label$9286:;
      {
       FBSTRING* vr$7526 = fb_StrAllocTempDescZEx( (uint8*)"clock_delta", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7526, 0 );
      }
      goto label$9114;
      label$9287:;
      {
       FBSTRING* vr$7527 = fb_StrAllocTempDescZEx( (uint8*)"clock_on", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7527, 0 );
      }
      goto label$9114;
      label$9288:;
      {
       FBSTRING* vr$7528 = fb_StrAllocTempDescZEx( (uint8*)"clock-units", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7528, 0 );
      }
      goto label$9114;
      label$9289:;
      {
       FBSTRING* vr$7529 = fb_StrAllocTempDescZEx( (uint8*)"close", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7529, 0 );
      }
      goto label$9114;
      label$9290:;
      {
       FBSTRING* vr$7530 = fb_StrAllocTempDescZEx( (uint8*)"closure", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7530, 0 );
      }
      goto label$9114;
      label$9291:;
      {
       FBSTRING* vr$7531 = fb_StrAllocTempDescZEx( (uint8*)"cls", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7531, 0 );
      }
      goto label$9114;
      label$9292:;
      {
       FBSTRING* vr$7532 = fb_StrAllocTempDescZEx( (uint8*)"cobol", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7532, 0 );
      }
      goto label$9114;
      label$9293:;
      {
       FBSTRING* vr$7533 = fb_StrAllocTempDescZEx( (uint8*)"code", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7533, 0 );
      }
      goto label$9114;
      label$9294:;
      {
       FBSTRING* vr$7534 = fb_StrAllocTempDescZEx( (uint8*)"code-set", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7534, 0 );
      }
      goto label$9114;
      label$9295:;
      {
       FBSTRING* vr$7535 = fb_StrAllocTempDescZEx( (uint8*)"collating", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7535, 0 );
      }
      goto label$9114;
      label$9296:;
      {
       FBSTRING* vr$7536 = fb_StrAllocTempDescZEx( (uint8*)"collect", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7536, 0 );
      }
      goto label$9114;
      label$9297:;
      {
       FBSTRING* vr$7537 = fb_StrAllocTempDescZEx( (uint8*)"color", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7537, 0 );
      }
      goto label$9114;
      label$9298:;
      {
       FBSTRING* vr$7538 = fb_StrAllocTempDescZEx( (uint8*)"color_map", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7538, 0 );
      }
      goto label$9114;
      label$9299:;
      {
       FBSTRING* vr$7539 = fb_StrAllocTempDescZEx( (uint8*)"color.w", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7539, 0 );
      }
      goto label$9114;
      label$9300:;
      {
       FBSTRING* vr$7540 = fb_StrAllocTempDescZEx( (uint8*)"colour", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7540, 0 );
      }
      goto label$9114;
      label$9301:;
      {
       FBSTRING* vr$7541 = fb_StrAllocTempDescZEx( (uint8*)"colour_map", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7541, 0 );
      }
      goto label$9114;
      label$9302:;
      {
       FBSTRING* vr$7542 = fb_StrAllocTempDescZEx( (uint8*)"column", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7542, 0 );
      }
      goto label$9114;
      label$9303:;
      {
       FBSTRING* vr$7543 = fb_StrAllocTempDescZEx( (uint8*)"com", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7543, 0 );
      }
      goto label$9114;
      label$9304:;
      {
       FBSTRING* vr$7544 = fb_StrAllocTempDescZEx( (uint8*)"comma", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7544, 0 );
      }
      goto label$9114;
      label$9305:;
      {
       FBSTRING* vr$7545 = fb_StrAllocTempDescZEx( (uint8*)"comment", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7545, 0 );
      }
      goto label$9114;
      label$9306:;
      {
       FBSTRING* vr$7546 = fb_StrAllocTempDescZEx( (uint8*)"commit", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7546, 0 );
      }
      goto label$9114;
      label$9307:;
      {
       FBSTRING* vr$7547 = fb_StrAllocTempDescZEx( (uint8*)"common", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7547, 0 );
      }
      goto label$9114;
      label$9308:;
      {
       FBSTRING* vr$7548 = fb_StrAllocTempDescZEx( (uint8*)"communication", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$7548, 0 );
      }
      goto label$9114;
      label$9309:;
      {
       FBSTRING* vr$7549 = fb_StrAllocTempDescZEx( (uint8*)"comp", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7549, 0 );
      }
      goto label$9114;
      label$9310:;
      {
       FBSTRING* vr$7550 = fb_StrAllocTempDescZEx( (uint8*)"comp-1", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7550, 0 );
      }
      goto label$9114;
      label$9311:;
      {
       FBSTRING* vr$7551 = fb_StrAllocTempDescZEx( (uint8*)"comp-2", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7551, 0 );
      }
      goto label$9114;
      label$9312:;
      {
       FBSTRING* vr$7552 = fb_StrAllocTempDescZEx( (uint8*)"comp-3", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7552, 0 );
      }
      goto label$9114;
      label$9313:;
      {
       FBSTRING* vr$7553 = fb_StrAllocTempDescZEx( (uint8*)"comp-4", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7553, 0 );
      }
      goto label$9114;
      label$9314:;
      {
       FBSTRING* vr$7554 = fb_StrAllocTempDescZEx( (uint8*)"comp-5", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7554, 0 );
      }
      goto label$9114;
      label$9315:;
      {
       FBSTRING* vr$7555 = fb_StrAllocTempDescZEx( (uint8*)"complex", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7555, 0 );
      }
      goto label$9114;
      label$9316:;
      {
       FBSTRING* vr$7556 = fb_StrAllocTempDescZEx( (uint8*)"component", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7556, 0 );
      }
      goto label$9114;
      label$9317:;
      {
       FBSTRING* vr$7557 = fb_StrAllocTempDescZEx( (uint8*)"composite", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7557, 0 );
      }
      goto label$9114;
      label$9318:;
      {
       FBSTRING* vr$7558 = fb_StrAllocTempDescZEx( (uint8*)"computational", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$7558, 0 );
      }
      goto label$9114;
      label$9319:;
      {
       FBSTRING* vr$7559 = fb_StrAllocTempDescZEx( (uint8*)"computational-1", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$7559, 0 );
      }
      goto label$9114;
      label$9320:;
      {
       FBSTRING* vr$7560 = fb_StrAllocTempDescZEx( (uint8*)"computational-2", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$7560, 0 );
      }
      goto label$9114;
      label$9321:;
      {
       FBSTRING* vr$7561 = fb_StrAllocTempDescZEx( (uint8*)"computational-3", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$7561, 0 );
      }
      goto label$9114;
      label$9322:;
      {
       FBSTRING* vr$7562 = fb_StrAllocTempDescZEx( (uint8*)"computational-4", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$7562, 0 );
      }
      goto label$9114;
      label$9323:;
      {
       FBSTRING* vr$7563 = fb_StrAllocTempDescZEx( (uint8*)"computational-5", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$7563, 0 );
      }
      goto label$9114;
      label$9324:;
      {
       FBSTRING* vr$7564 = fb_StrAllocTempDescZEx( (uint8*)"compute", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7564, 0 );
      }
      goto label$9114;
      label$9325:;
      {
       FBSTRING* vr$7565 = fb_StrAllocTempDescZEx( (uint8*)"com-reg", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7565, 0 );
      }
      goto label$9114;
      label$9326:;
      {
       FBSTRING* vr$7566 = fb_StrAllocTempDescZEx( (uint8*)"concat", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7566, 0 );
      }
      goto label$9114;
      label$9327:;
      {
       FBSTRING* vr$7567 = fb_StrAllocTempDescZEx( (uint8*)"concatenate", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7567, 0 );
      }
      goto label$9114;
      label$9328:;
      {
       FBSTRING* vr$7568 = fb_StrAllocTempDescZEx( (uint8*)"cond", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7568, 0 );
      }
      goto label$9114;
      label$9329:;
      {
       FBSTRING* vr$7569 = fb_StrAllocTempDescZEx( (uint8*)"cone", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7569, 0 );
      }
      goto label$9114;
      label$9330:;
      {
       FBSTRING* vr$7570 = fb_StrAllocTempDescZEx( (uint8*)"confidence", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7570, 0 );
      }
      goto label$9114;
      label$9331:;
      {
       FBSTRING* vr$7571 = fb_StrAllocTempDescZEx( (uint8*)"configuration", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$7571, 0 );
      }
      goto label$9114;
      label$9332:;
      {
       FBSTRING* vr$7572 = fb_StrAllocTempDescZEx( (uint8*)"conic_sweep", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7572, 0 );
      }
      goto label$9114;
      label$9333:;
      {
       FBSTRING* vr$7573 = fb_StrAllocTempDescZEx( (uint8*)"conserve_energy", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$7573, 0 );
      }
      goto label$9114;
      label$9334:;
      {
       FBSTRING* vr$7574 = fb_StrAllocTempDescZEx( (uint8*)"const", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7574, 0 );
      }
      goto label$9114;
      label$9335:;
      {
       FBSTRING* vr$7575 = fb_StrAllocTempDescZEx( (uint8*)"constref", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7575, 0 );
      }
      goto label$9114;
      label$9336:;
      {
       FBSTRING* vr$7576 = fb_StrAllocTempDescZEx( (uint8*)"constructor", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7576, 0 );
      }
      goto label$9114;
      label$9337:;
      {
       FBSTRING* vr$7577 = fb_StrAllocTempDescZEx( (uint8*)"cont", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7577, 0 );
      }
      goto label$9114;
      label$9338:;
      {
       FBSTRING* vr$7578 = fb_StrAllocTempDescZEx( (uint8*)"contained_by", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$7578, 0 );
      }
      goto label$9114;
      label$9339:;
      {
       FBSTRING* vr$7579 = fb_StrAllocTempDescZEx( (uint8*)"contains", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7579, 0 );
      }
      goto label$9114;
      label$9340:;
      {
       FBSTRING* vr$7580 = fb_StrAllocTempDescZEx( (uint8*)"content", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7580, 0 );
      }
      goto label$9114;
      label$9341:;
      {
       FBSTRING* vr$7581 = fb_StrAllocTempDescZEx( (uint8*)"continue", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7581, 0 );
      }
      goto label$9114;
      label$9342:;
      {
       FBSTRING* vr$7582 = fb_StrAllocTempDescZEx( (uint8*)"control", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7582, 0 );
      }
      goto label$9114;
      label$9343:;
      {
       FBSTRING* vr$7583 = fb_StrAllocTempDescZEx( (uint8*)"control0", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7583, 0 );
      }
      goto label$9114;
      label$9344:;
      {
       FBSTRING* vr$7584 = fb_StrAllocTempDescZEx( (uint8*)"control1", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7584, 0 );
      }
      goto label$9114;
      label$9345:;
      {
       FBSTRING* vr$7585 = fb_StrAllocTempDescZEx( (uint8*)"controls", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7585, 0 );
      }
      goto label$9114;
      label$9346:;
      {
       FBSTRING* vr$7586 = fb_StrAllocTempDescZEx( (uint8*)"converting", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7586, 0 );
      }
      goto label$9114;
      label$9347:;
      {
       FBSTRING* vr$7587 = fb_StrAllocTempDescZEx( (uint8*)"coords", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7587, 0 );
      }
      goto label$9114;
      label$9348:;
      {
       FBSTRING* vr$7588 = fb_StrAllocTempDescZEx( (uint8*)"corr", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7588, 0 );
      }
      goto label$9114;
      label$9349:;
      {
       FBSTRING* vr$7589 = fb_StrAllocTempDescZEx( (uint8*)"corresponding", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$7589, 0 );
      }
      goto label$9114;
      label$9350:;
      {
       FBSTRING* vr$7590 = fb_StrAllocTempDescZEx( (uint8*)"cos", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7590, 0 );
      }
      goto label$9114;
      label$9351:;
      {
       FBSTRING* vr$7591 = fb_StrAllocTempDescZEx( (uint8*)"cosh", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7591, 0 );
      }
      goto label$9114;
      label$9352:;
      {
       FBSTRING* vr$7592 = fb_StrAllocTempDescZEx( (uint8*)"count", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7592, 0 );
      }
      goto label$9114;
      label$9353:;
      {
       FBSTRING* vr$7593 = fb_StrAllocTempDescZEx( (uint8*)"cppdecl", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7593, 0 );
      }
      goto label$9114;
      label$9354:;
      {
       FBSTRING* vr$7594 = fb_StrAllocTempDescZEx( (uint8*)"crackle", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7594, 0 );
      }
      goto label$9114;
      label$9355:;
      {
       FBSTRING* vr$7595 = fb_StrAllocTempDescZEx( (uint8*)"crand", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7595, 0 );
      }
      goto label$9114;
      label$9356:;
      {
       FBSTRING* vr$7596 = fb_StrAllocTempDescZEx( (uint8*)"cross", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7596, 0 );
      }
      goto label$9114;
      label$9357:;
      {
       FBSTRING* vr$7597 = fb_StrAllocTempDescZEx( (uint8*)"csng", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7597, 0 );
      }
      goto label$9114;
      label$9358:;
      {
       FBSTRING* vr$7598 = fb_StrAllocTempDescZEx( (uint8*)"csrlin", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7598, 0 );
      }
      goto label$9114;
      label$9359:;
      {
       FBSTRING* vr$7599 = fb_StrAllocTempDescZEx( (uint8*)"cube", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7599, 0 );
      }
      goto label$9114;
      label$9360:;
      {
       FBSTRING* vr$7600 = fb_StrAllocTempDescZEx( (uint8*)"cubic", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7600, 0 );
      }
      goto label$9114;
      label$9361:;
      {
       FBSTRING* vr$7601 = fb_StrAllocTempDescZEx( (uint8*)"cubic_spline", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$7601, 0 );
      }
      goto label$9114;
      label$9362:;
      {
       FBSTRING* vr$7602 = fb_StrAllocTempDescZEx( (uint8*)"cubic_wave", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7602, 0 );
      }
      goto label$9114;
      label$9363:;
      {
       FBSTRING* vr$7603 = fb_StrAllocTempDescZEx( (uint8*)"currency", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7603, 0 );
      }
      goto label$9114;
      label$9364:;
      {
       FBSTRING* vr$7604 = fb_StrAllocTempDescZEx( (uint8*)"current_date", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$7604, 0 );
      }
      goto label$9114;
      label$9365:;
      {
       FBSTRING* vr$7605 = fb_StrAllocTempDescZEx( (uint8*)"current_time", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$7605, 0 );
      }
      goto label$9114;
      label$9366:;
      {
       FBSTRING* vr$7606 = fb_StrAllocTempDescZEx( (uint8*)"current_timestamp", 17ll );
       fb_PrintString( 1, (FBSTRING*)vr$7606, 0 );
      }
      goto label$9114;
      label$9367:;
      {
       FBSTRING* vr$7607 = fb_StrAllocTempDescZEx( (uint8*)"cursor", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7607, 0 );
      }
      goto label$9114;
      label$9368:;
      {
       FBSTRING* vr$7608 = fb_StrAllocTempDescZEx( (uint8*)"cutaway_textures", 16ll );
       fb_PrintString( 1, (FBSTRING*)vr$7608, 0 );
      }
      goto label$9114;
      label$9369:;
      {
       FBSTRING* vr$7609 = fb_StrAllocTempDescZEx( (uint8*)"cvd", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7609, 0 );
      }
      goto label$9114;
      label$9370:;
      {
       FBSTRING* vr$7610 = fb_StrAllocTempDescZEx( (uint8*)"cvi", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7610, 0 );
      }
      goto label$9114;
      label$9371:;
      {
       FBSTRING* vr$7611 = fb_StrAllocTempDescZEx( (uint8*)"cvs", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7611, 0 );
      }
      goto label$9114;
      label$9115:;
      static const void* tmp$5314[256ll] = {
       &&label$9116,
       &&label$9117,
       &&label$9118,
       &&label$9119,
       &&label$9120,
       &&label$9121,
       &&label$9122,
       &&label$9123,
       &&label$9124,
       &&label$9125,
       &&label$9126,
       &&label$9127,
       &&label$9128,
       &&label$9129,
       &&label$9130,
       &&label$9131,
       &&label$9132,
       &&label$9133,
       &&label$9134,
       &&label$9135,
       &&label$9136,
       &&label$9137,
       &&label$9138,
       &&label$9139,
       &&label$9140,
       &&label$9141,
       &&label$9142,
       &&label$9143,
       &&label$9144,
       &&label$9145,
       &&label$9146,
       &&label$9147,
       &&label$9148,
       &&label$9149,
       &&label$9150,
       &&label$9151,
       &&label$9152,
       &&label$9153,
       &&label$9154,
       &&label$9155,
       &&label$9156,
       &&label$9157,
       &&label$9158,
       &&label$9159,
       &&label$9160,
       &&label$9161,
       &&label$9162,
       &&label$9163,
       &&label$9164,
       &&label$9165,
       &&label$9166,
       &&label$9167,
       &&label$9168,
       &&label$9169,
       &&label$9170,
       &&label$9171,
       &&label$9172,
       &&label$9173,
       &&label$9174,
       &&label$9175,
       &&label$9176,
       &&label$9177,
       &&label$9178,
       &&label$9179,
       &&label$9180,
       &&label$9181,
       &&label$9182,
       &&label$9183,
       &&label$9184,
       &&label$9185,
       &&label$9186,
       &&label$9187,
       &&label$9188,
       &&label$9189,
       &&label$9190,
       &&label$9191,
       &&label$9192,
       &&label$9193,
       &&label$9194,
       &&label$9195,
       &&label$9196,
       &&label$9197,
       &&label$9198,
       &&label$9199,
       &&label$9200,
       &&label$9201,
       &&label$9202,
       &&label$9203,
       &&label$9204,
       &&label$9205,
       &&label$9206,
       &&label$9207,
       &&label$9208,
       &&label$9209,
       &&label$9210,
       &&label$9211,
       &&label$9212,
       &&label$9213,
       &&label$9214,
       &&label$9215,
       &&label$9216,
       &&label$9217,
       &&label$9218,
       &&label$9219,
       &&label$9220,
       &&label$9221,
       &&label$9222,
       &&label$9223,
       &&label$9224,
       &&label$9225,
       &&label$9226,
       &&label$9227,
       &&label$9228,
       &&label$9229,
       &&label$9230,
       &&label$9231,
       &&label$9232,
       &&label$9233,
       &&label$9234,
       &&label$9235,
       &&label$9236,
       &&label$9237,
       &&label$9238,
       &&label$9239,
       &&label$9240,
       &&label$9241,
       &&label$9242,
       &&label$9243,
       &&label$9244,
       &&label$9245,
       &&label$9246,
       &&label$9247,
       &&label$9248,
       &&label$9249,
       &&label$9250,
       &&label$9251,
       &&label$9252,
       &&label$9253,
       &&label$9254,
       &&label$9255,
       &&label$9256,
       &&label$9257,
       &&label$9258,
       &&label$9259,
       &&label$9260,
       &&label$9261,
       &&label$9262,
       &&label$9263,
       &&label$9264,
       &&label$9265,
       &&label$9266,
       &&label$9267,
       &&label$9268,
       &&label$9269,
       &&label$9270,
       &&label$9271,
       &&label$9272,
       &&label$9273,
       &&label$9274,
       &&label$9275,
       &&label$9276,
       &&label$9277,
       &&label$9278,
       &&label$9279,
       &&label$9280,
       &&label$9281,
       &&label$9282,
       &&label$9283,
       &&label$9284,
       &&label$9285,
       &&label$9286,
       &&label$9287,
       &&label$9288,
       &&label$9289,
       &&label$9290,
       &&label$9291,
       &&label$9292,
       &&label$9293,
       &&label$9294,
       &&label$9295,
       &&label$9296,
       &&label$9297,
       &&label$9298,
       &&label$9299,
       &&label$9300,
       &&label$9301,
       &&label$9302,
       &&label$9303,
       &&label$9304,
       &&label$9305,
       &&label$9306,
       &&label$9307,
       &&label$9308,
       &&label$9309,
       &&label$9310,
       &&label$9311,
       &&label$9312,
       &&label$9313,
       &&label$9314,
       &&label$9315,
       &&label$9316,
       &&label$9317,
       &&label$9318,
       &&label$9319,
       &&label$9320,
       &&label$9321,
       &&label$9322,
       &&label$9323,
       &&label$9324,
       &&label$9325,
       &&label$9326,
       &&label$9327,
       &&label$9328,
       &&label$9329,
       &&label$9330,
       &&label$9331,
       &&label$9332,
       &&label$9333,
       &&label$9334,
       &&label$9335,
       &&label$9336,
       &&label$9337,
       &&label$9338,
       &&label$9339,
       &&label$9340,
       &&label$9341,
       &&label$9342,
       &&label$9343,
       &&label$9344,
       &&label$9345,
       &&label$9346,
       &&label$9347,
       &&label$9348,
       &&label$9349,
       &&label$9350,
       &&label$9351,
       &&label$9352,
       &&label$9353,
       &&label$9354,
       &&label$9355,
       &&label$9356,
       &&label$9357,
       &&label$9358,
       &&label$9359,
       &&label$9360,
       &&label$9361,
       &&label$9362,
       &&label$9363,
       &&label$9364,
       &&label$9365,
       &&label$9366,
       &&label$9367,
       &&label$9368,
       &&label$9369,
       &&label$9370,
       &&label$9371,
      };
      if( TMP$3178$6 > 255ull ) goto label$9114;
      goto *tmp$5314[TMP$3178$6 - 0ull];
      label$9114:;
     }
    }
    goto label$9040;
    label$9372:;
    {
     {
      uint64 TMP$3432$6;
      TMP$3432$6 = ((uint64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394968ll) ));
      goto label$9374;
      label$9375:;
      {
       FBSTRING* vr$7613 = fb_StrAllocTempDescZEx( (uint8*)"cylinder", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7613, 0 );
      }
      goto label$9373;
      label$9376:;
      {
       FBSTRING* vr$7614 = fb_StrAllocTempDescZEx( (uint8*)"cylindrical", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7614, 0 );
      }
      goto label$9373;
      label$9377:;
      {
       FBSTRING* vr$7615 = fb_StrAllocTempDescZEx( (uint8*)"d", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$7615, 0 );
      }
      goto label$9373;
      label$9378:;
      {
       FBSTRING* vr$7616 = fb_StrAllocTempDescZEx( (uint8*)"data", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7616, 0 );
      }
      goto label$9373;
      label$9379:;
      {
       FBSTRING* vr$7617 = fb_StrAllocTempDescZEx( (uint8*)"dataxel", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7617, 0 );
      }
      goto label$9373;
      label$9380:;
      {
       FBSTRING* vr$7618 = fb_StrAllocTempDescZEx( (uint8*)"date", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7618, 0 );
      }
      goto label$9373;
      label$9381:;
      {
       FBSTRING* vr$7619 = fb_StrAllocTempDescZEx( (uint8*)"date-compiled", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$7619, 0 );
      }
      goto label$9373;
      label$9382:;
      {
       FBSTRING* vr$7620 = fb_StrAllocTempDescZEx( (uint8*)"date-written", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$7620, 0 );
      }
      goto label$9373;
      label$9383:;
      {
       FBSTRING* vr$7621 = fb_StrAllocTempDescZEx( (uint8*)"day", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7621, 0 );
      }
      goto label$9373;
      label$9384:;
      {
       FBSTRING* vr$7622 = fb_StrAllocTempDescZEx( (uint8*)"day-of-week", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7622, 0 );
      }
      goto label$9373;
      label$9385:;
      {
       FBSTRING* vr$7623 = fb_StrAllocTempDescZEx( (uint8*)"dbcs", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7623, 0 );
      }
      goto label$9373;
      label$9386:;
      {
       FBSTRING* vr$7624 = fb_StrAllocTempDescZEx( (uint8*)"dbms_in_memory", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$7624, 0 );
      }
      goto label$9373;
      label$9387:;
      {
       FBSTRING* vr$7625 = fb_StrAllocTempDescZEx( (uint8*)"de", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7625, 0 );
      }
      goto label$9373;
      label$9388:;
      {
       FBSTRING* vr$7626 = fb_StrAllocTempDescZEx( (uint8*)"debug", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7626, 0 );
      }
      goto label$9373;
      label$9389:;
      {
       FBSTRING* vr$7627 = fb_StrAllocTempDescZEx( (uint8*)"debug-contents", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$7627, 0 );
      }
      goto label$9373;
      label$9390:;
      {
       FBSTRING* vr$7628 = fb_StrAllocTempDescZEx( (uint8*)"debugging", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7628, 0 );
      }
      goto label$9373;
      label$9391:;
      {
       FBSTRING* vr$7629 = fb_StrAllocTempDescZEx( (uint8*)"debug-item", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7629, 0 );
      }
      goto label$9373;
      label$9392:;
      {
       FBSTRING* vr$7630 = fb_StrAllocTempDescZEx( (uint8*)"debug-line", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7630, 0 );
      }
      goto label$9373;
      label$9393:;
      {
       FBSTRING* vr$7631 = fb_StrAllocTempDescZEx( (uint8*)"debug-name", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7631, 0 );
      }
      goto label$9373;
      label$9394:;
      {
       FBSTRING* vr$7632 = fb_StrAllocTempDescZEx( (uint8*)"debug-sub-1", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7632, 0 );
      }
      goto label$9373;
      label$9395:;
      {
       FBSTRING* vr$7633 = fb_StrAllocTempDescZEx( (uint8*)"debug-sub-2", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7633, 0 );
      }
      goto label$9373;
      label$9396:;
      {
       FBSTRING* vr$7634 = fb_StrAllocTempDescZEx( (uint8*)"debug-sub-3", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7634, 0 );
      }
      goto label$9373;
      label$9397:;
      {
       FBSTRING* vr$7635 = fb_StrAllocTempDescZEx( (uint8*)"dec", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7635, 0 );
      }
      goto label$9373;
      label$9398:;
      {
       FBSTRING* vr$7636 = fb_StrAllocTempDescZEx( (uint8*)"decimal", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7636, 0 );
      }
      goto label$9373;
      label$9399:;
      {
       FBSTRING* vr$7637 = fb_StrAllocTempDescZEx( (uint8*)"decimal-point", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$7637, 0 );
      }
      goto label$9373;
      label$9400:;
      {
       FBSTRING* vr$7638 = fb_StrAllocTempDescZEx( (uint8*)"declaratives", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$7638, 0 );
      }
      goto label$9373;
      label$9401:;
      {
       FBSTRING* vr$7639 = fb_StrAllocTempDescZEx( (uint8*)"declare", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7639, 0 );
      }
      goto label$9373;
      label$9402:;
      {
       FBSTRING* vr$7640 = fb_StrAllocTempDescZEx( (uint8*)"decode", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7640, 0 );
      }
      goto label$9373;
      label$9403:;
      {
       FBSTRING* vr$7641 = fb_StrAllocTempDescZEx( (uint8*)"def", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7641, 0 );
      }
      goto label$9373;
      label$9404:;
      {
       FBSTRING* vr$7642 = fb_StrAllocTempDescZEx( (uint8*)"default", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7642, 0 );
      }
      goto label$9373;
      label$9405:;
      {
       FBSTRING* vr$7643 = fb_StrAllocTempDescZEx( (uint8*)"defdbl", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7643, 0 );
      }
      goto label$9373;
      label$9406:;
      {
       FBSTRING* vr$7644 = fb_StrAllocTempDescZEx( (uint8*)"define", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7644, 0 );
      }
      goto label$9373;
      label$9407:;
      {
       FBSTRING* vr$7645 = fb_StrAllocTempDescZEx( (uint8*)"defined", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7645, 0 );
      }
      goto label$9373;
      label$9408:;
      {
       FBSTRING* vr$7646 = fb_StrAllocTempDescZEx( (uint8*)"defint", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7646, 0 );
      }
      goto label$9373;
      label$9409:;
      {
       FBSTRING* vr$7647 = fb_StrAllocTempDescZEx( (uint8*)"defsng", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7647, 0 );
      }
      goto label$9373;
      label$9410:;
      {
       FBSTRING* vr$7648 = fb_StrAllocTempDescZEx( (uint8*)"defstr", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7648, 0 );
      }
      goto label$9373;
      label$9411:;
      {
       FBSTRING* vr$7649 = fb_StrAllocTempDescZEx( (uint8*)"degrees", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7649, 0 );
      }
      goto label$9373;
      label$9412:;
      {
       FBSTRING* vr$7650 = fb_StrAllocTempDescZEx( (uint8*)"delete", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7650, 0 );
      }
      goto label$9373;
      label$9413:;
      {
       FBSTRING* vr$7651 = fb_StrAllocTempDescZEx( (uint8*)"delimited", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7651, 0 );
      }
      goto label$9373;
      label$9414:;
      {
       FBSTRING* vr$7652 = fb_StrAllocTempDescZEx( (uint8*)"delimiter", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7652, 0 );
      }
      goto label$9373;
      label$9415:;
      {
       FBSTRING* vr$7653 = fb_StrAllocTempDescZEx( (uint8*)"density", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7653, 0 );
      }
      goto label$9373;
      label$9416:;
      {
       FBSTRING* vr$7654 = fb_StrAllocTempDescZEx( (uint8*)"density_file", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$7654, 0 );
      }
      goto label$9373;
      label$9417:;
      {
       FBSTRING* vr$7655 = fb_StrAllocTempDescZEx( (uint8*)"density_map", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7655, 0 );
      }
      goto label$9373;
      label$9418:;
      {
       FBSTRING* vr$7656 = fb_StrAllocTempDescZEx( (uint8*)"dents", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7656, 0 );
      }
      goto label$9373;
      label$9419:;
      {
       FBSTRING* vr$7657 = fb_StrAllocTempDescZEx( (uint8*)"depending", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7657, 0 );
      }
      goto label$9373;
      label$9420:;
      {
       FBSTRING* vr$7658 = fb_StrAllocTempDescZEx( (uint8*)"desc", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7658, 0 );
      }
      goto label$9373;
      label$9421:;
      {
       FBSTRING* vr$7659 = fb_StrAllocTempDescZEx( (uint8*)"descending", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7659, 0 );
      }
      goto label$9373;
      label$9422:;
      {
       FBSTRING* vr$7660 = fb_StrAllocTempDescZEx( (uint8*)"destination", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7660, 0 );
      }
      goto label$9373;
      label$9423:;
      {
       FBSTRING* vr$7661 = fb_StrAllocTempDescZEx( (uint8*)"destructor", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7661, 0 );
      }
      goto label$9373;
      label$9424:;
      {
       FBSTRING* vr$7662 = fb_StrAllocTempDescZEx( (uint8*)"detail", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7662, 0 );
      }
      goto label$9373;
      label$9425:;
      {
       FBSTRING* vr$7663 = fb_StrAllocTempDescZEx( (uint8*)"determinant", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7663, 0 );
      }
      goto label$9373;
      label$9426:;
      {
       FBSTRING* vr$7664 = fb_StrAllocTempDescZEx( (uint8*)"df3", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7664, 0 );
      }
      goto label$9373;
      label$9427:;
      {
       FBSTRING* vr$7665 = fb_StrAllocTempDescZEx( (uint8*)"dict_find", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7665, 0 );
      }
      goto label$9373;
      label$9428:;
      {
       FBSTRING* vr$7666 = fb_StrAllocTempDescZEx( (uint8*)"dict_next", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7666, 0 );
      }
      goto label$9373;
      label$9429:;
      {
       FBSTRING* vr$7667 = fb_StrAllocTempDescZEx( (uint8*)"dict_value", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7667, 0 );
      }
      goto label$9373;
      label$9430:;
      {
       FBSTRING* vr$7668 = fb_StrAllocTempDescZEx( (uint8*)"difference", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7668, 0 );
      }
      goto label$9373;
      label$9431:;
      {
       FBSTRING* vr$7669 = fb_StrAllocTempDescZEx( (uint8*)"diffuse", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7669, 0 );
      }
      goto label$9373;
      label$9432:;
      {
       FBSTRING* vr$7670 = fb_StrAllocTempDescZEx( (uint8*)"dim", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7670, 0 );
      }
      goto label$9373;
      label$9433:;
      {
       FBSTRING* vr$7671 = fb_StrAllocTempDescZEx( (uint8*)"dimension", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7671, 0 );
      }
      goto label$9373;
      label$9434:;
      {
       FBSTRING* vr$7672 = fb_StrAllocTempDescZEx( (uint8*)"dimensions", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7672, 0 );
      }
      goto label$9373;
      label$9435:;
      {
       FBSTRING* vr$7673 = fb_StrAllocTempDescZEx( (uint8*)"dimension_size", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$7673, 0 );
      }
      goto label$9373;
      label$9436:;
      {
       FBSTRING* vr$7674 = fb_StrAllocTempDescZEx( (uint8*)"direction", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7674, 0 );
      }
      goto label$9373;
      label$9437:;
      {
       FBSTRING* vr$7675 = fb_StrAllocTempDescZEx( (uint8*)"directive_error", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$7675, 0 );
      }
      goto label$9373;
      label$9438:;
      {
       FBSTRING* vr$7676 = fb_StrAllocTempDescZEx( (uint8*)"disc", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7676, 0 );
      }
      goto label$9373;
      label$9439:;
      {
       FBSTRING* vr$7677 = fb_StrAllocTempDescZEx( (uint8*)"discard", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7677, 0 );
      }
      goto label$9373;
      label$9440:;
      {
       FBSTRING* vr$7678 = fb_StrAllocTempDescZEx( (uint8*)"dispersion", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7678, 0 );
      }
      goto label$9373;
      label$9441:;
      {
       FBSTRING* vr$7679 = fb_StrAllocTempDescZEx( (uint8*)"dispersion_samples", 18ll );
       fb_PrintString( 1, (FBSTRING*)vr$7679, 0 );
      }
      goto label$9373;
      label$9442:;
      {
       FBSTRING* vr$7680 = fb_StrAllocTempDescZEx( (uint8*)"displace", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7680, 0 );
      }
      goto label$9373;
      label$9443:;
      {
       FBSTRING* vr$7681 = fb_StrAllocTempDescZEx( (uint8*)"display", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7681, 0 );
      }
      goto label$9373;
      label$9444:;
      {
       FBSTRING* vr$7682 = fb_StrAllocTempDescZEx( (uint8*)"display-1", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7682, 0 );
      }
      goto label$9373;
      label$9445:;
      {
       FBSTRING* vr$7683 = fb_StrAllocTempDescZEx( (uint8*)"dispose", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7683, 0 );
      }
      goto label$9373;
      label$9446:;
      {
       FBSTRING* vr$7684 = fb_StrAllocTempDescZEx( (uint8*)"distance", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7684, 0 );
      }
      goto label$9373;
      label$9447:;
      {
       FBSTRING* vr$7685 = fb_StrAllocTempDescZEx( (uint8*)"dist_exp", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7685, 0 );
      }
      goto label$9373;
      label$9448:;
      {
       FBSTRING* vr$7686 = fb_StrAllocTempDescZEx( (uint8*)"distinct", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7686, 0 );
      }
      goto label$9373;
      label$9449:;
      {
       FBSTRING* vr$7687 = fb_StrAllocTempDescZEx( (uint8*)"div", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7687, 0 );
      }
      goto label$9373;
      label$9450:;
      {
       FBSTRING* vr$7688 = fb_StrAllocTempDescZEx( (uint8*)"divide", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7688, 0 );
      }
      goto label$9373;
      label$9451:;
      {
       FBSTRING* vr$7689 = fb_StrAllocTempDescZEx( (uint8*)"division", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7689, 0 );
      }
      goto label$9373;
      label$9452:;
      {
       FBSTRING* vr$7690 = fb_StrAllocTempDescZEx( (uint8*)"do", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7690, 0 );
      }
      goto label$9373;
      label$9453:;
      {
       FBSTRING* vr$7691 = fb_StrAllocTempDescZEx( (uint8*)"dot", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7691, 0 );
      }
      goto label$9373;
      label$9454:;
      {
       FBSTRING* vr$7692 = fb_StrAllocTempDescZEx( (uint8*)"double", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7692, 0 );
      }
      goto label$9373;
      label$9455:;
      {
       FBSTRING* vr$7693 = fb_StrAllocTempDescZEx( (uint8*)"doublegreatethan", 16ll );
       fb_PrintString( 1, (FBSTRING*)vr$7693, 0 );
      }
      goto label$9373;
      label$9456:;
      {
       FBSTRING* vr$7694 = fb_StrAllocTempDescZEx( (uint8*)"double_illuminate", 17ll );
       fb_PrintString( 1, (FBSTRING*)vr$7694, 0 );
      }
      goto label$9373;
      label$9457:;
      {
       FBSTRING* vr$7695 = fb_StrAllocTempDescZEx( (uint8*)"down", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7695, 0 );
      }
      goto label$9373;
      label$9458:;
      {
       FBSTRING* vr$7696 = fb_StrAllocTempDescZEx( (uint8*)"downto", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7696, 0 );
      }
      goto label$9373;
      label$9459:;
      {
       FBSTRING* vr$7697 = fb_StrAllocTempDescZEx( (uint8*)"draw", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7697, 0 );
      }
      goto label$9373;
      label$9460:;
      {
       FBSTRING* vr$7698 = fb_StrAllocTempDescZEx( (uint8*)"duplicates", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7698, 0 );
      }
      goto label$9373;
      label$9461:;
      {
       FBSTRING* vr$7699 = fb_StrAllocTempDescZEx( (uint8*)"dvec2", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7699, 0 );
      }
      goto label$9373;
      label$9462:;
      {
       FBSTRING* vr$7700 = fb_StrAllocTempDescZEx( (uint8*)"dvec3", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7700, 0 );
      }
      goto label$9373;
      label$9463:;
      {
       FBSTRING* vr$7701 = fb_StrAllocTempDescZEx( (uint8*)"dvec4", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7701, 0 );
      }
      goto label$9373;
      label$9464:;
      {
       FBSTRING* vr$7702 = fb_StrAllocTempDescZEx( (uint8*)"dx", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7702, 0 );
      }
      goto label$9373;
      label$9465:;
      {
       FBSTRING* vr$7703 = fb_StrAllocTempDescZEx( (uint8*)"dy", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7703, 0 );
      }
      goto label$9373;
      label$9466:;
      {
       FBSTRING* vr$7704 = fb_StrAllocTempDescZEx( (uint8*)"dynamic", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7704, 0 );
      }
      goto label$9373;
      label$9467:;
      {
       FBSTRING* vr$7705 = fb_StrAllocTempDescZEx( (uint8*)"dz", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7705, 0 );
      }
      goto label$9373;
      label$9468:;
      {
       FBSTRING* vr$7706 = fb_StrAllocTempDescZEx( (uint8*)"e", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$7706, 0 );
      }
      goto label$9373;
      label$9469:;
      {
       FBSTRING* vr$7707 = fb_StrAllocTempDescZEx( (uint8*)"eccentricity", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$7707, 0 );
      }
      goto label$9373;
      label$9470:;
      {
       FBSTRING* vr$7708 = fb_StrAllocTempDescZEx( (uint8*)"edit", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7708, 0 );
      }
      goto label$9373;
      label$9471:;
      {
       FBSTRING* vr$7709 = fb_StrAllocTempDescZEx( (uint8*)"egcs", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7709, 0 );
      }
      goto label$9373;
      label$9472:;
      {
       FBSTRING* vr$7710 = fb_StrAllocTempDescZEx( (uint8*)"egi", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7710, 0 );
      }
      goto label$9373;
      label$9473:;
      {
       FBSTRING* vr$7711 = fb_StrAllocTempDescZEx( (uint8*)"eject", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7711, 0 );
      }
      goto label$9373;
      label$9474:;
      {
       FBSTRING* vr$7712 = fb_StrAllocTempDescZEx( (uint8*)"elif", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7712, 0 );
      }
      goto label$9373;
      label$9475:;
      {
       FBSTRING* vr$7713 = fb_StrAllocTempDescZEx( (uint8*)"else", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7713, 0 );
      }
      goto label$9373;
      label$9476:;
      {
       FBSTRING* vr$7714 = fb_StrAllocTempDescZEx( (uint8*)"elseif", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7714, 0 );
      }
      goto label$9373;
      label$9477:;
      {
       FBSTRING* vr$7715 = fb_StrAllocTempDescZEx( (uint8*)"emi", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7715, 0 );
      }
      goto label$9373;
      label$9478:;
      {
       FBSTRING* vr$7716 = fb_StrAllocTempDescZEx( (uint8*)"emission", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7716, 0 );
      }
      goto label$9373;
      label$9479:;
      {
       FBSTRING* vr$7717 = fb_StrAllocTempDescZEx( (uint8*)"enable", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7717, 0 );
      }
      goto label$9373;
      label$9480:;
      {
       FBSTRING* vr$7718 = fb_StrAllocTempDescZEx( (uint8*)"encode", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7718, 0 );
      }
      goto label$9373;
      label$9481:;
      {
       FBSTRING* vr$7719 = fb_StrAllocTempDescZEx( (uint8*)"end", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7719, 0 );
      }
      goto label$9373;
      label$9482:;
      {
       FBSTRING* vr$7720 = fb_StrAllocTempDescZEx( (uint8*)"end-add", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7720, 0 );
      }
      goto label$9373;
      label$9483:;
      {
       FBSTRING* vr$7721 = fb_StrAllocTempDescZEx( (uint8*)"end-call", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7721, 0 );
      }
      goto label$9373;
      label$9484:;
      {
       FBSTRING* vr$7722 = fb_StrAllocTempDescZEx( (uint8*)"end-compute", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7722, 0 );
      }
      goto label$9373;
      label$9485:;
      {
       FBSTRING* vr$7723 = fb_StrAllocTempDescZEx( (uint8*)"end-delete", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7723, 0 );
      }
      goto label$9373;
      label$9486:;
      {
       FBSTRING* vr$7724 = fb_StrAllocTempDescZEx( (uint8*)"end-divide", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7724, 0 );
      }
      goto label$9373;
      label$9487:;
      {
       FBSTRING* vr$7725 = fb_StrAllocTempDescZEx( (uint8*)"end-evaluate", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$7725, 0 );
      }
      goto label$9373;
      label$9488:;
      {
       FBSTRING* vr$7726 = fb_StrAllocTempDescZEx( (uint8*)"end-if", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7726, 0 );
      }
      goto label$9373;
      label$9489:;
      {
       FBSTRING* vr$7727 = fb_StrAllocTempDescZEx( (uint8*)"ending", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7727, 0 );
      }
      goto label$9373;
      label$9490:;
      {
       FBSTRING* vr$7728 = fb_StrAllocTempDescZEx( (uint8*)"end-invoke", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7728, 0 );
      }
      goto label$9373;
      label$9491:;
      {
       FBSTRING* vr$7729 = fb_StrAllocTempDescZEx( (uint8*)"end-multiply", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$7729, 0 );
      }
      goto label$9373;
      label$9492:;
      {
       FBSTRING* vr$7730 = fb_StrAllocTempDescZEx( (uint8*)"endofdata", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7730, 0 );
      }
      goto label$9373;
      label$9493:;
      {
       FBSTRING* vr$7731 = fb_StrAllocTempDescZEx( (uint8*)"end-of-page", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7731, 0 );
      }
      goto label$9373;
      label$9494:;
      {
       FBSTRING* vr$7732 = fb_StrAllocTempDescZEx( (uint8*)"end-perform", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7732, 0 );
      }
      goto label$9373;
      label$9495:;
      {
       FBSTRING* vr$7733 = fb_StrAllocTempDescZEx( (uint8*)"end-read", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7733, 0 );
      }
      goto label$9373;
      label$9496:;
      {
       FBSTRING* vr$7734 = fb_StrAllocTempDescZEx( (uint8*)"end-receive", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7734, 0 );
      }
      goto label$9373;
      label$9497:;
      {
       FBSTRING* vr$7735 = fb_StrAllocTempDescZEx( (uint8*)"end-return", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7735, 0 );
      }
      goto label$9373;
      label$9498:;
      {
       FBSTRING* vr$7736 = fb_StrAllocTempDescZEx( (uint8*)"end-rewrite", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7736, 0 );
      }
      goto label$9373;
      label$9499:;
      {
       FBSTRING* vr$7737 = fb_StrAllocTempDescZEx( (uint8*)"end-search", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7737, 0 );
      }
      goto label$9373;
      label$9500:;
      {
       FBSTRING* vr$7738 = fb_StrAllocTempDescZEx( (uint8*)"end-start", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7738, 0 );
      }
      goto label$9373;
      label$9501:;
      {
       FBSTRING* vr$7739 = fb_StrAllocTempDescZEx( (uint8*)"end-string", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7739, 0 );
      }
      goto label$9373;
      label$9502:;
      {
       FBSTRING* vr$7740 = fb_StrAllocTempDescZEx( (uint8*)"end-subtract", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$7740, 0 );
      }
      goto label$9373;
      label$9503:;
      {
       FBSTRING* vr$7741 = fb_StrAllocTempDescZEx( (uint8*)"endswith", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7741, 0 );
      }
      goto label$9373;
      label$9504:;
      {
       FBSTRING* vr$7742 = fb_StrAllocTempDescZEx( (uint8*)"end-unstring", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$7742, 0 );
      }
      goto label$9373;
      label$9505:;
      {
       FBSTRING* vr$7743 = fb_StrAllocTempDescZEx( (uint8*)"end-write", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7743, 0 );
      }
      goto label$9373;
      label$9506:;
      {
       FBSTRING* vr$7744 = fb_StrAllocTempDescZEx( (uint8*)"enter", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7744, 0 );
      }
      goto label$9373;
      label$9507:;
      {
       FBSTRING* vr$7745 = fb_StrAllocTempDescZEx( (uint8*)"entry", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7745, 0 );
      }
      goto label$9373;
      label$9508:;
      {
       FBSTRING* vr$7746 = fb_StrAllocTempDescZEx( (uint8*)"enum", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7746, 0 );
      }
      goto label$9373;
      label$9509:;
      {
       FBSTRING* vr$7747 = fb_StrAllocTempDescZEx( (uint8*)"environ", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7747, 0 );
      }
      goto label$9373;
      label$9510:;
      {
       FBSTRING* vr$7748 = fb_StrAllocTempDescZEx( (uint8*)"environment", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7748, 0 );
      }
      goto label$9373;
      label$9511:;
      {
       FBSTRING* vr$7749 = fb_StrAllocTempDescZEx( (uint8*)"eof", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7749, 0 );
      }
      goto label$9373;
      label$9512:;
      {
       FBSTRING* vr$7750 = fb_StrAllocTempDescZEx( (uint8*)"eop", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7750, 0 );
      }
      goto label$9373;
      label$9513:;
      {
       FBSTRING* vr$7751 = fb_StrAllocTempDescZEx( (uint8*)"equal", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7751, 0 );
      }
      goto label$9373;
      label$9514:;
      {
       FBSTRING* vr$7752 = fb_StrAllocTempDescZEx( (uint8*)"equivalence", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7752, 0 );
      }
      goto label$9373;
      label$9515:;
      {
       FBSTRING* vr$7753 = fb_StrAllocTempDescZEx( (uint8*)"eqv", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7753, 0 );
      }
      goto label$9373;
      label$9516:;
      {
       FBSTRING* vr$7754 = fb_StrAllocTempDescZEx( (uint8*)"erase", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7754, 0 );
      }
      goto label$9373;
      label$9517:;
      {
       FBSTRING* vr$7755 = fb_StrAllocTempDescZEx( (uint8*)"erdev", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7755, 0 );
      }
      goto label$9373;
      label$9518:;
      {
       FBSTRING* vr$7756 = fb_StrAllocTempDescZEx( (uint8*)"erf", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7756, 0 );
      }
      goto label$9373;
      label$9519:;
      {
       FBSTRING* vr$7757 = fb_StrAllocTempDescZEx( (uint8*)"erfc", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7757, 0 );
      }
      goto label$9373;
      label$9520:;
      {
       FBSTRING* vr$7758 = fb_StrAllocTempDescZEx( (uint8*)"erl", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7758, 0 );
      }
      goto label$9373;
      label$9521:;
      {
       FBSTRING* vr$7759 = fb_StrAllocTempDescZEx( (uint8*)"err", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7759, 0 );
      }
      goto label$9373;
      label$9522:;
      {
       FBSTRING* vr$7760 = fb_StrAllocTempDescZEx( (uint8*)"error", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7760, 0 );
      }
      goto label$9373;
      label$9523:;
      {
       FBSTRING* vr$7761 = fb_StrAllocTempDescZEx( (uint8*)"error_bound", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7761, 0 );
      }
      goto label$9373;
      label$9524:;
      {
       FBSTRING* vr$7762 = fb_StrAllocTempDescZEx( (uint8*)"escape", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7762, 0 );
      }
      goto label$9373;
      label$9525:;
      {
       FBSTRING* vr$7763 = fb_StrAllocTempDescZEx( (uint8*)"esi", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7763, 0 );
      }
      goto label$9373;
      label$9526:;
      {
       FBSTRING* vr$7764 = fb_StrAllocTempDescZEx( (uint8*)"evaluate", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7764, 0 );
      }
      goto label$9373;
      label$9527:;
      {
       FBSTRING* vr$7765 = fb_StrAllocTempDescZEx( (uint8*)"every", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7765, 0 );
      }
      goto label$9373;
      label$9528:;
      {
       FBSTRING* vr$7766 = fb_StrAllocTempDescZEx( (uint8*)"except", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7766, 0 );
      }
      goto label$9373;
      label$9529:;
      {
       FBSTRING* vr$7767 = fb_StrAllocTempDescZEx( (uint8*)"exception", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7767, 0 );
      }
      goto label$9373;
      label$9530:;
      {
       FBSTRING* vr$7768 = fb_StrAllocTempDescZEx( (uint8*)"exit", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7768, 0 );
      }
      goto label$9373;
      label$9531:;
      {
       FBSTRING* vr$7769 = fb_StrAllocTempDescZEx( (uint8*)"exp", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7769, 0 );
      }
      goto label$9373;
      label$9532:;
      {
       FBSTRING* vr$7770 = fb_StrAllocTempDescZEx( (uint8*)"exp2", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7770, 0 );
      }
      goto label$9373;
      label$9533:;
      {
       FBSTRING* vr$7771 = fb_StrAllocTempDescZEx( (uint8*)"expand", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7771, 0 );
      }
      goto label$9373;
      label$9534:;
      {
       FBSTRING* vr$7772 = fb_StrAllocTempDescZEx( (uint8*)"expand_thresholds", 17ll );
       fb_PrintString( 1, (FBSTRING*)vr$7772, 0 );
      }
      goto label$9373;
      label$9535:;
      {
       FBSTRING* vr$7773 = fb_StrAllocTempDescZEx( (uint8*)"expm1", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7773, 0 );
      }
      goto label$9373;
      label$9536:;
      {
       FBSTRING* vr$7774 = fb_StrAllocTempDescZEx( (uint8*)"exponent", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7774, 0 );
      }
      goto label$9373;
      label$9537:;
      {
       FBSTRING* vr$7775 = fb_StrAllocTempDescZEx( (uint8*)"export", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7775, 0 );
      }
      goto label$9373;
      label$9538:;
      {
       FBSTRING* vr$7776 = fb_StrAllocTempDescZEx( (uint8*)"exports", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7776, 0 );
      }
      goto label$9373;
      label$9539:;
      {
       FBSTRING* vr$7777 = fb_StrAllocTempDescZEx( (uint8*)"extend", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7777, 0 );
      }
      goto label$9373;
      label$9540:;
      {
       FBSTRING* vr$7778 = fb_StrAllocTempDescZEx( (uint8*)"exterior", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7778, 0 );
      }
      goto label$9373;
      label$9541:;
      {
       FBSTRING* vr$7779 = fb_StrAllocTempDescZEx( (uint8*)"extern", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7779, 0 );
      }
      goto label$9373;
      label$9542:;
      {
       FBSTRING* vr$7780 = fb_StrAllocTempDescZEx( (uint8*)"external", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7780, 0 );
      }
      goto label$9373;
      label$9543:;
      {
       FBSTRING* vr$7781 = fb_StrAllocTempDescZEx( (uint8*)"exterr", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7781, 0 );
      }
      goto label$9373;
      label$9544:;
      {
       FBSTRING* vr$7782 = fb_StrAllocTempDescZEx( (uint8*)"extinction", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7782, 0 );
      }
      goto label$9373;
      label$9545:;
      {
       FBSTRING* vr$7783 = fb_StrAllocTempDescZEx( (uint8*)"extract", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7783, 0 );
      }
      goto label$9373;
      label$9546:;
      {
       FBSTRING* vr$7784 = fb_StrAllocTempDescZEx( (uint8*)"f", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$7784, 0 );
      }
      goto label$9373;
      label$9547:;
      {
       FBSTRING* vr$7785 = fb_StrAllocTempDescZEx( (uint8*)"fabs", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7785, 0 );
      }
      goto label$9373;
      label$9548:;
      {
       FBSTRING* vr$7786 = fb_StrAllocTempDescZEx( (uint8*)"faceforward", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7786, 0 );
      }
      goto label$9373;
      label$9549:;
      {
       FBSTRING* vr$7787 = fb_StrAllocTempDescZEx( (uint8*)"face_indices", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$7787, 0 );
      }
      goto label$9373;
      label$9550:;
      {
       FBSTRING* vr$7788 = fb_StrAllocTempDescZEx( (uint8*)"facets", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7788, 0 );
      }
      goto label$9373;
      label$9551:;
      {
       FBSTRING* vr$7789 = fb_StrAllocTempDescZEx( (uint8*)"fade_color", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7789, 0 );
      }
      goto label$9373;
      label$9552:;
      {
       FBSTRING* vr$7790 = fb_StrAllocTempDescZEx( (uint8*)"fade_colour", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7790, 0 );
      }
      goto label$9373;
      label$9553:;
      {
       FBSTRING* vr$7791 = fb_StrAllocTempDescZEx( (uint8*)"fade_distance", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$7791, 0 );
      }
      goto label$9373;
      label$9554:;
      {
       FBSTRING* vr$7792 = fb_StrAllocTempDescZEx( (uint8*)"fade_power", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7792, 0 );
      }
      goto label$9373;
      label$9555:;
      {
       FBSTRING* vr$7793 = fb_StrAllocTempDescZEx( (uint8*)"falloff", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7793, 0 );
      }
      goto label$9373;
      label$9556:;
      {
       FBSTRING* vr$7794 = fb_StrAllocTempDescZEx( (uint8*)"falloff_angle", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$7794, 0 );
      }
      goto label$9373;
      label$9557:;
      {
       FBSTRING* vr$7795 = fb_StrAllocTempDescZEx( (uint8*)"false", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7795, 0 );
      }
      goto label$9373;
      label$9558:;
      {
       FBSTRING* vr$7796 = fb_StrAllocTempDescZEx( (uint8*)"far", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7796, 0 );
      }
      goto label$9373;
      label$9559:;
      {
       FBSTRING* vr$7797 = fb_StrAllocTempDescZEx( (uint8*)"fclose", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7797, 0 );
      }
      goto label$9373;
      label$9560:;
      {
       FBSTRING* vr$7798 = fb_StrAllocTempDescZEx( (uint8*)"fd", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7798, 0 );
      }
      goto label$9373;
      label$9561:;
      {
       FBSTRING* vr$7799 = fb_StrAllocTempDescZEx( (uint8*)"field", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7799, 0 );
      }
      goto label$9373;
      label$9562:;
      {
       FBSTRING* vr$7800 = fb_StrAllocTempDescZEx( (uint8*)"file", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7800, 0 );
      }
      goto label$9373;
      label$9563:;
      {
       FBSTRING* vr$7801 = fb_StrAllocTempDescZEx( (uint8*)"file-control", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$7801, 0 );
      }
      goto label$9373;
      label$9564:;
      {
       FBSTRING* vr$7802 = fb_StrAllocTempDescZEx( (uint8*)"file_exists", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7802, 0 );
      }
      goto label$9373;
      label$9565:;
      {
       FBSTRING* vr$7803 = fb_StrAllocTempDescZEx( (uint8*)"files", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7803, 0 );
      }
      goto label$9373;
      label$9566:;
      {
       FBSTRING* vr$7804 = fb_StrAllocTempDescZEx( (uint8*)"filler", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7804, 0 );
      }
      goto label$9373;
      label$9567:;
      {
       FBSTRING* vr$7805 = fb_StrAllocTempDescZEx( (uint8*)"filter", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7805, 0 );
      }
      goto label$9373;
      label$9568:;
      {
       FBSTRING* vr$7806 = fb_StrAllocTempDescZEx( (uint8*)"filterwidth", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7806, 0 );
      }
      goto label$9373;
      label$9569:;
      {
       FBSTRING* vr$7807 = fb_StrAllocTempDescZEx( (uint8*)"final", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7807, 0 );
      }
      goto label$9373;
      label$9570:;
      {
       FBSTRING* vr$7808 = fb_StrAllocTempDescZEx( (uint8*)"final_clock", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7808, 0 );
      }
      goto label$9373;
      label$9571:;
      {
       FBSTRING* vr$7809 = fb_StrAllocTempDescZEx( (uint8*)"final_frame", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7809, 0 );
      }
      goto label$9373;
      label$9572:;
      {
       FBSTRING* vr$7810 = fb_StrAllocTempDescZEx( (uint8*)"finalization", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$7810, 0 );
      }
      goto label$9373;
      label$9573:;
      {
       FBSTRING* vr$7811 = fb_StrAllocTempDescZEx( (uint8*)"finally", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7811, 0 );
      }
      goto label$9373;
      label$9574:;
      {
       FBSTRING* vr$7812 = fb_StrAllocTempDescZEx( (uint8*)"finish", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7812, 0 );
      }
      goto label$9373;
      label$9575:;
      {
       FBSTRING* vr$7813 = fb_StrAllocTempDescZEx( (uint8*)"first", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7813, 0 );
      }
      goto label$9373;
      label$9576:;
      {
       FBSTRING* vr$7814 = fb_StrAllocTempDescZEx( (uint8*)"fisheye", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7814, 0 );
      }
      goto label$9373;
      label$9577:;
      {
       FBSTRING* vr$7815 = fb_StrAllocTempDescZEx( (uint8*)"fix", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7815, 0 );
      }
      goto label$9373;
      label$9578:;
      {
       FBSTRING* vr$7816 = fb_StrAllocTempDescZEx( (uint8*)"fixed", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7816, 0 );
      }
      goto label$9373;
      label$9579:;
      {
       FBSTRING* vr$7817 = fb_StrAllocTempDescZEx( (uint8*)"flat", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7817, 0 );
      }
      goto label$9373;
      label$9580:;
      {
       FBSTRING* vr$7818 = fb_StrAllocTempDescZEx( (uint8*)"flatness", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7818, 0 );
      }
      goto label$9373;
      label$9581:;
      {
       FBSTRING* vr$7819 = fb_StrAllocTempDescZEx( (uint8*)"flip", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7819, 0 );
      }
      goto label$9373;
      label$9582:;
      {
       FBSTRING* vr$7820 = fb_StrAllocTempDescZEx( (uint8*)"float", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7820, 0 );
      }
      goto label$9373;
      label$9583:;
      {
       FBSTRING* vr$7821 = fb_StrAllocTempDescZEx( (uint8*)"floor", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7821, 0 );
      }
      goto label$9373;
      label$9584:;
      {
       FBSTRING* vr$7822 = fb_StrAllocTempDescZEx( (uint8*)"fmod", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7822, 0 );
      }
      goto label$9373;
      label$9585:;
      {
       FBSTRING* vr$7823 = fb_StrAllocTempDescZEx( (uint8*)"fn", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7823, 0 );
      }
      goto label$9373;
      label$9586:;
      {
       FBSTRING* vr$7824 = fb_StrAllocTempDescZEx( (uint8*)"focal_point", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7824, 0 );
      }
      goto label$9373;
      label$9587:;
      {
       FBSTRING* vr$7825 = fb_StrAllocTempDescZEx( (uint8*)"fog", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7825, 0 );
      }
      goto label$9373;
      label$9588:;
      {
       FBSTRING* vr$7826 = fb_StrAllocTempDescZEx( (uint8*)"fog_alt", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7826, 0 );
      }
      goto label$9373;
      label$9589:;
      {
       FBSTRING* vr$7827 = fb_StrAllocTempDescZEx( (uint8*)"fog_offset", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7827, 0 );
      }
      goto label$9373;
      label$9590:;
      {
       FBSTRING* vr$7828 = fb_StrAllocTempDescZEx( (uint8*)"fog_type", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7828, 0 );
      }
      goto label$9373;
      label$9591:;
      {
       FBSTRING* vr$7829 = fb_StrAllocTempDescZEx( (uint8*)"footing", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7829, 0 );
      }
      goto label$9373;
      label$9592:;
      {
       FBSTRING* vr$7830 = fb_StrAllocTempDescZEx( (uint8*)"fopen", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7830, 0 );
      }
      goto label$9373;
      label$9593:;
      {
       FBSTRING* vr$7831 = fb_StrAllocTempDescZEx( (uint8*)"for", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7831, 0 );
      }
      goto label$9373;
      label$9594:;
      {
       FBSTRING* vr$7832 = fb_StrAllocTempDescZEx( (uint8*)"form", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7832, 0 );
      }
      goto label$9373;
      label$9595:;
      {
       FBSTRING* vr$7833 = fb_StrAllocTempDescZEx( (uint8*)"format", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7833, 0 );
      }
      goto label$9373;
      label$9596:;
      {
       FBSTRING* vr$7834 = fb_StrAllocTempDescZEx( (uint8*)"forward", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7834, 0 );
      }
      goto label$9373;
      label$9597:;
      {
       FBSTRING* vr$7835 = fb_StrAllocTempDescZEx( (uint8*)"fprintf", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7835, 0 );
      }
      goto label$9373;
      label$9598:;
      {
       FBSTRING* vr$7836 = fb_StrAllocTempDescZEx( (uint8*)"frag_color", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7836, 0 );
      }
      goto label$9373;
      label$9599:;
      {
       FBSTRING* vr$7837 = fb_StrAllocTempDescZEx( (uint8*)"fragcolor", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7837, 0 );
      }
      goto label$9373;
      label$9600:;
      {
       FBSTRING* vr$7838 = fb_StrAllocTempDescZEx( (uint8*)"frag_coord", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7838, 0 );
      }
      goto label$9373;
      label$9601:;
      {
       FBSTRING* vr$7839 = fb_StrAllocTempDescZEx( (uint8*)"fragcoord", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7839, 0 );
      }
      goto label$9373;
      label$9602:;
      {
       FBSTRING* vr$7840 = fb_StrAllocTempDescZEx( (uint8*)"frame_number", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$7840, 0 );
      }
      goto label$9373;
      label$9603:;
      {
       FBSTRING* vr$7841 = fb_StrAllocTempDescZEx( (uint8*)"fre", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7841, 0 );
      }
      goto label$9373;
      label$9604:;
      {
       FBSTRING* vr$7842 = fb_StrAllocTempDescZEx( (uint8*)"frequency", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7842, 0 );
      }
      goto label$9373;
      label$9605:;
      {
       FBSTRING* vr$7843 = fb_StrAllocTempDescZEx( (uint8*)"fresnel", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7843, 0 );
      }
      goto label$9373;
      label$9606:;
      {
       FBSTRING* vr$7844 = fb_StrAllocTempDescZEx( (uint8*)"from", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7844, 0 );
      }
      goto label$9373;
      label$9607:;
      {
       FBSTRING* vr$7845 = fb_StrAllocTempDescZEx( (uint8*)"full", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7845, 0 );
      }
      goto label$9373;
      label$9608:;
      {
       FBSTRING* vr$7846 = fb_StrAllocTempDescZEx( (uint8*)"function", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7846, 0 );
      }
      goto label$9373;
      label$9609:;
      {
       FBSTRING* vr$7847 = fb_StrAllocTempDescZEx( (uint8*)"fvec2", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7847, 0 );
      }
      goto label$9373;
      label$9610:;
      {
       FBSTRING* vr$7848 = fb_StrAllocTempDescZEx( (uint8*)"fvec3", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7848, 0 );
      }
      goto label$9373;
      label$9611:;
      {
       FBSTRING* vr$7849 = fb_StrAllocTempDescZEx( (uint8*)"fvec4", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7849, 0 );
      }
      goto label$9373;
      label$9612:;
      {
       FBSTRING* vr$7850 = fb_StrAllocTempDescZEx( (uint8*)"g", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$7850, 0 );
      }
      goto label$9373;
      label$9613:;
      {
       FBSTRING* vr$7851 = fb_StrAllocTempDescZEx( (uint8*)"gather", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7851, 0 );
      }
      goto label$9373;
      label$9614:;
      {
       FBSTRING* vr$7852 = fb_StrAllocTempDescZEx( (uint8*)"generate", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7852, 0 );
      }
      goto label$9373;
      label$9615:;
      {
       FBSTRING* vr$7853 = fb_StrAllocTempDescZEx( (uint8*)"generic", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7853, 0 );
      }
      goto label$9373;
      label$9616:;
      {
       FBSTRING* vr$7854 = fb_StrAllocTempDescZEx( (uint8*)"get", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7854, 0 );
      }
      goto label$9373;
      label$9617:;
      {
       FBSTRING* vr$7855 = fb_StrAllocTempDescZEx( (uint8*)"getattribute", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$7855, 0 );
      }
      goto label$9373;
      label$9618:;
      {
       FBSTRING* vr$7856 = fb_StrAllocTempDescZEx( (uint8*)"getchar", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7856, 0 );
      }
      goto label$9373;
      label$9619:;
      {
       FBSTRING* vr$7857 = fb_StrAllocTempDescZEx( (uint8*)"getmatrix", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7857, 0 );
      }
      goto label$9373;
      label$9620:;
      {
       FBSTRING* vr$7858 = fb_StrAllocTempDescZEx( (uint8*)"getmessage", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7858, 0 );
      }
      goto label$9373;
      label$9621:;
      {
       FBSTRING* vr$7859 = fb_StrAllocTempDescZEx( (uint8*)"gettextureinfo", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$7859, 0 );
      }
      goto label$9373;
      label$9622:;
      {
       FBSTRING* vr$7860 = fb_StrAllocTempDescZEx( (uint8*)"gif", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7860, 0 );
      }
      goto label$9373;
      label$9623:;
      {
       FBSTRING* vr$7861 = fb_StrAllocTempDescZEx( (uint8*)"giving", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7861, 0 );
      }
      goto label$9373;
      label$9624:;
      {
       FBSTRING* vr$7862 = fb_StrAllocTempDescZEx( (uint8*)"gl_fragcolor", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$7862, 0 );
      }
      goto label$9373;
      label$9625:;
      {
       FBSTRING* vr$7863 = fb_StrAllocTempDescZEx( (uint8*)"gl_fragcoord.xy", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$7863, 0 );
      }
      goto label$9373;
      label$9626:;
      {
       FBSTRING* vr$7864 = fb_StrAllocTempDescZEx( (uint8*)"global", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7864, 0 );
      }
      goto label$9373;
      label$9627:;
      {
       FBSTRING* vr$7865 = fb_StrAllocTempDescZEx( (uint8*)"global_lights", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$7865, 0 );
      }
      goto label$9373;
      label$9628:;
      {
       FBSTRING* vr$7866 = fb_StrAllocTempDescZEx( (uint8*)"global_settings", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$7866, 0 );
      }
      goto label$9373;
      label$9629:;
      {
       FBSTRING* vr$7867 = fb_StrAllocTempDescZEx( (uint8*)"go", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7867, 0 );
      }
      goto label$9373;
      label$9630:;
      {
       FBSTRING* vr$7868 = fb_StrAllocTempDescZEx( (uint8*)"goback", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7868, 0 );
      }
      goto label$9373;
      label$9374:;
      static const void* tmp$5315[256ll] = {
       &&label$9375,
       &&label$9376,
       &&label$9377,
       &&label$9378,
       &&label$9379,
       &&label$9380,
       &&label$9381,
       &&label$9382,
       &&label$9383,
       &&label$9384,
       &&label$9385,
       &&label$9386,
       &&label$9387,
       &&label$9388,
       &&label$9389,
       &&label$9390,
       &&label$9391,
       &&label$9392,
       &&label$9393,
       &&label$9394,
       &&label$9395,
       &&label$9396,
       &&label$9397,
       &&label$9398,
       &&label$9399,
       &&label$9400,
       &&label$9401,
       &&label$9402,
       &&label$9403,
       &&label$9404,
       &&label$9405,
       &&label$9406,
       &&label$9407,
       &&label$9408,
       &&label$9409,
       &&label$9410,
       &&label$9411,
       &&label$9412,
       &&label$9413,
       &&label$9414,
       &&label$9415,
       &&label$9416,
       &&label$9417,
       &&label$9418,
       &&label$9419,
       &&label$9420,
       &&label$9421,
       &&label$9422,
       &&label$9423,
       &&label$9424,
       &&label$9425,
       &&label$9426,
       &&label$9427,
       &&label$9428,
       &&label$9429,
       &&label$9430,
       &&label$9431,
       &&label$9432,
       &&label$9433,
       &&label$9434,
       &&label$9435,
       &&label$9436,
       &&label$9437,
       &&label$9438,
       &&label$9439,
       &&label$9440,
       &&label$9441,
       &&label$9442,
       &&label$9443,
       &&label$9444,
       &&label$9445,
       &&label$9446,
       &&label$9447,
       &&label$9448,
       &&label$9449,
       &&label$9450,
       &&label$9451,
       &&label$9452,
       &&label$9453,
       &&label$9454,
       &&label$9455,
       &&label$9456,
       &&label$9457,
       &&label$9458,
       &&label$9459,
       &&label$9460,
       &&label$9461,
       &&label$9462,
       &&label$9463,
       &&label$9464,
       &&label$9465,
       &&label$9466,
       &&label$9467,
       &&label$9468,
       &&label$9469,
       &&label$9470,
       &&label$9471,
       &&label$9472,
       &&label$9473,
       &&label$9474,
       &&label$9475,
       &&label$9476,
       &&label$9477,
       &&label$9478,
       &&label$9479,
       &&label$9480,
       &&label$9481,
       &&label$9482,
       &&label$9483,
       &&label$9484,
       &&label$9485,
       &&label$9486,
       &&label$9487,
       &&label$9488,
       &&label$9489,
       &&label$9490,
       &&label$9491,
       &&label$9492,
       &&label$9493,
       &&label$9494,
       &&label$9495,
       &&label$9496,
       &&label$9497,
       &&label$9498,
       &&label$9499,
       &&label$9500,
       &&label$9501,
       &&label$9502,
       &&label$9503,
       &&label$9504,
       &&label$9505,
       &&label$9506,
       &&label$9507,
       &&label$9508,
       &&label$9509,
       &&label$9510,
       &&label$9511,
       &&label$9512,
       &&label$9513,
       &&label$9514,
       &&label$9515,
       &&label$9516,
       &&label$9517,
       &&label$9518,
       &&label$9519,
       &&label$9520,
       &&label$9521,
       &&label$9522,
       &&label$9523,
       &&label$9524,
       &&label$9525,
       &&label$9526,
       &&label$9527,
       &&label$9528,
       &&label$9529,
       &&label$9530,
       &&label$9531,
       &&label$9532,
       &&label$9533,
       &&label$9534,
       &&label$9535,
       &&label$9536,
       &&label$9537,
       &&label$9538,
       &&label$9539,
       &&label$9540,
       &&label$9541,
       &&label$9542,
       &&label$9543,
       &&label$9544,
       &&label$9545,
       &&label$9546,
       &&label$9547,
       &&label$9548,
       &&label$9549,
       &&label$9550,
       &&label$9551,
       &&label$9552,
       &&label$9553,
       &&label$9554,
       &&label$9555,
       &&label$9556,
       &&label$9557,
       &&label$9558,
       &&label$9559,
       &&label$9560,
       &&label$9561,
       &&label$9562,
       &&label$9563,
       &&label$9564,
       &&label$9565,
       &&label$9566,
       &&label$9567,
       &&label$9568,
       &&label$9569,
       &&label$9570,
       &&label$9571,
       &&label$9572,
       &&label$9573,
       &&label$9574,
       &&label$9575,
       &&label$9576,
       &&label$9577,
       &&label$9578,
       &&label$9579,
       &&label$9580,
       &&label$9581,
       &&label$9582,
       &&label$9583,
       &&label$9584,
       &&label$9585,
       &&label$9586,
       &&label$9587,
       &&label$9588,
       &&label$9589,
       &&label$9590,
       &&label$9591,
       &&label$9592,
       &&label$9593,
       &&label$9594,
       &&label$9595,
       &&label$9596,
       &&label$9597,
       &&label$9598,
       &&label$9599,
       &&label$9600,
       &&label$9601,
       &&label$9602,
       &&label$9603,
       &&label$9604,
       &&label$9605,
       &&label$9606,
       &&label$9607,
       &&label$9608,
       &&label$9609,
       &&label$9610,
       &&label$9611,
       &&label$9612,
       &&label$9613,
       &&label$9614,
       &&label$9615,
       &&label$9616,
       &&label$9617,
       &&label$9618,
       &&label$9619,
       &&label$9620,
       &&label$9621,
       &&label$9622,
       &&label$9623,
       &&label$9624,
       &&label$9625,
       &&label$9626,
       &&label$9627,
       &&label$9628,
       &&label$9629,
       &&label$9630,
      };
      if( TMP$3432$6 > 255ull ) goto label$9373;
      goto *tmp$5315[TMP$3432$6 - 0ull];
      label$9373:;
     }
    }
    goto label$9040;
    label$9631:;
    {
     {
      uint64 TMP$3685$6;
      TMP$3685$6 = ((uint64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394968ll) ));
      goto label$9633;
      label$9634:;
      {
       FBSTRING* vr$7870 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394968ll) );
       fb_PrintString( 1, (FBSTRING*)vr$7870, 0 );
      }
      goto label$9632;
      label$9635:;
      {
       FBSTRING* vr$7871 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394968ll) );
       fb_PrintString( 1, (FBSTRING*)vr$7871, 1 );
      }
      goto label$9632;
      label$9636:;
      {
       FBSTRING* vr$7874 = fb_DoubleToStr( -(*(double*)((int64)(double*)MEM64$ + 394968ll)) + 0x0p+0 );
       fb_PrintString( 1, (FBSTRING*)vr$7874, 0 );
      }
      goto label$9632;
      label$9637:;
      {
       FBSTRING* vr$7877 = fb_DoubleToStr( -(*(double*)((int64)(double*)MEM64$ + 394968ll)) + 0x0p+0 );
       fb_PrintString( 1, (FBSTRING*)vr$7877, 1 );
      }
      goto label$9632;
      label$9638:;
      {
       FBSTRING* vr$7878 = fb_StrAllocTempDescZEx( (uint8*)"\x0D\x0A", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7878, 1 );
      }
      goto label$9632;
      label$9639:;
      {
       FBSTRING* vr$7880 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394968ll) * 0x1.999999999999Ap-4 );
       fb_PrintString( 1, (FBSTRING*)vr$7880, 0 );
      }
      goto label$9632;
      label$9640:;
      {
       FBSTRING* vr$7882 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394968ll) * 0x1.999999999999Ap-4 );
       fb_PrintString( 1, (FBSTRING*)vr$7882, 1 );
      }
      goto label$9632;
      label$9641:;
      {
       FBSTRING* vr$7884 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394968ll) * 0x1.47AE147AE147Bp-7 );
       fb_PrintString( 1, (FBSTRING*)vr$7884, 0 );
      }
      goto label$9632;
      label$9642:;
      {
       FBSTRING* vr$7886 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394968ll) * 0x1.47AE147AE147Bp-7 );
       fb_PrintString( 1, (FBSTRING*)vr$7886, 1 );
      }
      goto label$9632;
      label$9643:;
      {
       FBSTRING* vr$7888 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394968ll) * 0x1.0624DD2F1A9FCp-10 );
       fb_PrintString( 1, (FBSTRING*)vr$7888, 0 );
      }
      goto label$9632;
      label$9644:;
      {
       FBSTRING* vr$7890 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394968ll) * 0x1.0624DD2F1A9FCp-10 );
       fb_PrintString( 1, (FBSTRING*)vr$7890, 1 );
      }
      goto label$9632;
      label$9633:;
      static const void* tmp$5316[11ll] = {
       &&label$9634,
       &&label$9635,
       &&label$9636,
       &&label$9637,
       &&label$9638,
       &&label$9639,
       &&label$9640,
       &&label$9641,
       &&label$9642,
       &&label$9643,
       &&label$9644,
      };
      if( TMP$3685$6 > 10ull ) goto label$9632;
      goto *tmp$5316[TMP$3685$6 - 0ull];
      label$9632:;
     }
    }
    goto label$9040;
    label$9645:;
    {
     FBSTRING* vr$7892 = fb_CHR( 1, ((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394968ll) )) );
     fb_StrAssign( (void*)&MSG$, -1ll, (void*)vr$7892, -1ll, 0 );
     fb_PrintString( 1, (FBSTRING*)&MSG$, 0 );
     fb_StrAssign( (void*)&MSG$, -1ll, (void*)"", 1ll, 0 );
    }
    goto label$9040;
    label$9646:;
    {
     FBSTRING* vr$7894 = fb_CHR( 1, ((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394968ll) )) );
     fb_StrAssign( (void*)&MSG$, -1ll, (void*)vr$7894, -1ll, 0 );
     fb_PrintString( 1, (FBSTRING*)&MSG$, 1 );
     fb_StrAssign( (void*)&MSG$, -1ll, (void*)"", 1ll, 0 );
    }
    goto label$9040;
    label$9647:;
    {
     FBSTRING* vr$7895 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394968ll) );
     fb_StrAssign( (void*)&MSG$, -1ll, (void*)vr$7895, -1ll, 0 );
     fb_PrintString( 1, (FBSTRING*)&MSG$, 0 );
     fb_StrAssign( (void*)&MSG$, -1ll, (void*)"", 1ll, 0 );
    }
    goto label$9040;
    label$9648:;
    {
     FBSTRING* vr$7896 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394968ll) );
     fb_StrAssign( (void*)&MSG$, -1ll, (void*)vr$7896, -1ll, 0 );
     fb_PrintString( 1, (FBSTRING*)&MSG$, 1 );
     fb_StrAssign( (void*)&MSG$, -1ll, (void*)"", 1ll, 0 );
    }
    goto label$9040;
    label$9649:;
    {
     FBSTRING* vr$7898 = fb_HEX_l( ((uint64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394968ll) )) );
     fb_StrAssign( (void*)&MSG$, -1ll, (void*)vr$7898, -1ll, 0 );
     fb_PrintString( 1, (FBSTRING*)&MSG$, 0 );
     fb_StrAssign( (void*)&MSG$, -1ll, (void*)"", 1ll, 0 );
    }
    goto label$9040;
    label$9650:;
    {
     FBSTRING* vr$7900 = fb_HEX_l( ((uint64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394968ll) )) );
     fb_StrAssign( (void*)&MSG$, -1ll, (void*)vr$7900, -1ll, 0 );
     fb_PrintString( 1, (FBSTRING*)&MSG$, 1 );
     fb_StrAssign( (void*)&MSG$, -1ll, (void*)"", 1ll, 0 );
    }
    goto label$9040;
    label$9651:;
    {
     {
      uint64 TMP$3689$6;
      TMP$3689$6 = ((uint64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394968ll) ));
      goto label$9653;
      label$9654:;
      {
       FBSTRING TMP$3693$7;
       FBSTRING TMP$3694$7;
       FBSTRING* vr$7902 = fb_StrAllocTempDescZEx( (uint8*)"CHARS.INC", 9ll );
       FBSTRING* vr$7903 = fb_StrLcase2( (FBSTRING*)vr$7902, 0 );
       __builtin_memset( &TMP$3693$7, 0, 24ll );
       FBSTRING* vr$7906 = fb_StrConcat( &TMP$3693$7, (void*)"#include \x0D", 11ll, (void*)vr$7903, -1ll );
       __builtin_memset( &TMP$3694$7, 0, 24ll );
       FBSTRING* vr$7909 = fb_StrConcat( &TMP$3694$7, (void*)vr$7906, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7909, 1 );
      }
      goto label$9652;
      label$9655:;
      {
       FBSTRING TMP$3696$7;
       FBSTRING TMP$3697$7;
       FBSTRING* vr$7910 = fb_StrAllocTempDescZEx( (uint8*)"COLORS.INC", 10ll );
       FBSTRING* vr$7911 = fb_StrLcase2( (FBSTRING*)vr$7910, 0 );
       __builtin_memset( &TMP$3696$7, 0, 24ll );
       FBSTRING* vr$7914 = fb_StrConcat( &TMP$3696$7, (void*)"#include \x0D", 11ll, (void*)vr$7911, -1ll );
       __builtin_memset( &TMP$3697$7, 0, 24ll );
       FBSTRING* vr$7917 = fb_StrConcat( &TMP$3697$7, (void*)vr$7914, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7917, 1 );
      }
      goto label$9652;
      label$9656:;
      {
       FBSTRING TMP$3699$7;
       FBSTRING TMP$3700$7;
       FBSTRING* vr$7918 = fb_StrAllocTempDescZEx( (uint8*)"CONSTS.INC", 10ll );
       FBSTRING* vr$7919 = fb_StrLcase2( (FBSTRING*)vr$7918, 0 );
       __builtin_memset( &TMP$3699$7, 0, 24ll );
       FBSTRING* vr$7922 = fb_StrConcat( &TMP$3699$7, (void*)"#include \x0D", 11ll, (void*)vr$7919, -1ll );
       __builtin_memset( &TMP$3700$7, 0, 24ll );
       FBSTRING* vr$7925 = fb_StrConcat( &TMP$3700$7, (void*)vr$7922, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7925, 1 );
      }
      goto label$9652;
      label$9657:;
      {
       FBSTRING TMP$3702$7;
       FBSTRING TMP$3703$7;
       FBSTRING* vr$7926 = fb_StrAllocTempDescZEx( (uint8*)"DEBUG.INC", 9ll );
       FBSTRING* vr$7927 = fb_StrLcase2( (FBSTRING*)vr$7926, 0 );
       __builtin_memset( &TMP$3702$7, 0, 24ll );
       FBSTRING* vr$7930 = fb_StrConcat( &TMP$3702$7, (void*)"#include \x0D", 11ll, (void*)vr$7927, -1ll );
       __builtin_memset( &TMP$3703$7, 0, 24ll );
       FBSTRING* vr$7933 = fb_StrConcat( &TMP$3703$7, (void*)vr$7930, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7933, 1 );
      }
      goto label$9652;
      label$9658:;
      {
       FBSTRING TMP$3705$7;
       FBSTRING TMP$3706$7;
       FBSTRING* vr$7934 = fb_StrAllocTempDescZEx( (uint8*)"FINISH.INC", 10ll );
       FBSTRING* vr$7935 = fb_StrLcase2( (FBSTRING*)vr$7934, 0 );
       __builtin_memset( &TMP$3705$7, 0, 24ll );
       FBSTRING* vr$7938 = fb_StrConcat( &TMP$3705$7, (void*)"#include \x0D", 11ll, (void*)vr$7935, -1ll );
       __builtin_memset( &TMP$3706$7, 0, 24ll );
       FBSTRING* vr$7941 = fb_StrConcat( &TMP$3706$7, (void*)vr$7938, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7941, 1 );
      }
      goto label$9652;
      label$9659:;
      {
       FBSTRING TMP$3708$7;
       FBSTRING TMP$3709$7;
       FBSTRING* vr$7942 = fb_StrAllocTempDescZEx( (uint8*)"GLASS.INC", 9ll );
       FBSTRING* vr$7943 = fb_StrLcase2( (FBSTRING*)vr$7942, 0 );
       __builtin_memset( &TMP$3708$7, 0, 24ll );
       FBSTRING* vr$7946 = fb_StrConcat( &TMP$3708$7, (void*)"#include \x0D", 11ll, (void*)vr$7943, -1ll );
       __builtin_memset( &TMP$3709$7, 0, 24ll );
       FBSTRING* vr$7949 = fb_StrConcat( &TMP$3709$7, (void*)vr$7946, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7949, 1 );
      }
      goto label$9652;
      label$9660:;
      {
       FBSTRING TMP$3711$7;
       FBSTRING TMP$3712$7;
       FBSTRING* vr$7950 = fb_StrAllocTempDescZEx( (uint8*)"GOLDS.INC", 9ll );
       FBSTRING* vr$7951 = fb_StrLcase2( (FBSTRING*)vr$7950, 0 );
       __builtin_memset( &TMP$3711$7, 0, 24ll );
       FBSTRING* vr$7954 = fb_StrConcat( &TMP$3711$7, (void*)"#include \x0D", 11ll, (void*)vr$7951, -1ll );
       __builtin_memset( &TMP$3712$7, 0, 24ll );
       FBSTRING* vr$7957 = fb_StrConcat( &TMP$3712$7, (void*)vr$7954, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7957, 1 );
      }
      goto label$9652;
      label$9661:;
      {
       FBSTRING TMP$3714$7;
       FBSTRING TMP$3715$7;
       FBSTRING* vr$7958 = fb_StrAllocTempDescZEx( (uint8*)"METALS.INC", 10ll );
       FBSTRING* vr$7959 = fb_StrLcase2( (FBSTRING*)vr$7958, 0 );
       __builtin_memset( &TMP$3714$7, 0, 24ll );
       FBSTRING* vr$7962 = fb_StrConcat( &TMP$3714$7, (void*)"#include \x0D", 11ll, (void*)vr$7959, -1ll );
       __builtin_memset( &TMP$3715$7, 0, 24ll );
       FBSTRING* vr$7965 = fb_StrConcat( &TMP$3715$7, (void*)vr$7962, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7965, 1 );
      }
      goto label$9652;
      label$9662:;
      {
       FBSTRING TMP$3717$7;
       FBSTRING TMP$3718$7;
       FBSTRING* vr$7966 = fb_StrAllocTempDescZEx( (uint8*)"RAD_DEF.INC", 11ll );
       FBSTRING* vr$7967 = fb_StrLcase2( (FBSTRING*)vr$7966, 0 );
       __builtin_memset( &TMP$3717$7, 0, 24ll );
       FBSTRING* vr$7970 = fb_StrConcat( &TMP$3717$7, (void*)"#include \x0D", 11ll, (void*)vr$7967, -1ll );
       __builtin_memset( &TMP$3718$7, 0, 24ll );
       FBSTRING* vr$7973 = fb_StrConcat( &TMP$3718$7, (void*)vr$7970, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7973, 1 );
      }
      goto label$9652;
      label$9663:;
      {
       FBSTRING TMP$3720$7;
       FBSTRING TMP$3721$7;
       FBSTRING* vr$7974 = fb_StrAllocTempDescZEx( (uint8*)"SHAPES2.INC", 11ll );
       FBSTRING* vr$7975 = fb_StrLcase2( (FBSTRING*)vr$7974, 0 );
       __builtin_memset( &TMP$3720$7, 0, 24ll );
       FBSTRING* vr$7978 = fb_StrConcat( &TMP$3720$7, (void*)"#include \x0D", 11ll, (void*)vr$7975, -1ll );
       __builtin_memset( &TMP$3721$7, 0, 24ll );
       FBSTRING* vr$7981 = fb_StrConcat( &TMP$3721$7, (void*)vr$7978, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7981, 1 );
      }
      goto label$9652;
      label$9664:;
      {
       FBSTRING TMP$3723$7;
       FBSTRING TMP$3724$7;
       FBSTRING* vr$7982 = fb_StrAllocTempDescZEx( (uint8*)"SHAPES.INC", 10ll );
       FBSTRING* vr$7983 = fb_StrLcase2( (FBSTRING*)vr$7982, 0 );
       __builtin_memset( &TMP$3723$7, 0, 24ll );
       FBSTRING* vr$7986 = fb_StrConcat( &TMP$3723$7, (void*)"#include \x0D", 11ll, (void*)vr$7983, -1ll );
       __builtin_memset( &TMP$3724$7, 0, 24ll );
       FBSTRING* vr$7989 = fb_StrConcat( &TMP$3724$7, (void*)vr$7986, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7989, 1 );
      }
      goto label$9652;
      label$9665:;
      {
       FBSTRING TMP$3726$7;
       FBSTRING TMP$3727$7;
       FBSTRING* vr$7990 = fb_StrAllocTempDescZEx( (uint8*)"SHAPESQ.INC", 11ll );
       FBSTRING* vr$7991 = fb_StrLcase2( (FBSTRING*)vr$7990, 0 );
       __builtin_memset( &TMP$3726$7, 0, 24ll );
       FBSTRING* vr$7994 = fb_StrConcat( &TMP$3726$7, (void*)"#include \x0D", 11ll, (void*)vr$7991, -1ll );
       __builtin_memset( &TMP$3727$7, 0, 24ll );
       FBSTRING* vr$7997 = fb_StrConcat( &TMP$3727$7, (void*)vr$7994, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7997, 1 );
      }
      goto label$9652;
      label$9666:;
      {
       FBSTRING TMP$3729$7;
       FBSTRING TMP$3730$7;
       FBSTRING* vr$7998 = fb_StrAllocTempDescZEx( (uint8*)"SKIES.INC", 9ll );
       FBSTRING* vr$7999 = fb_StrLcase2( (FBSTRING*)vr$7998, 0 );
       __builtin_memset( &TMP$3729$7, 0, 24ll );
       FBSTRING* vr$8002 = fb_StrConcat( &TMP$3729$7, (void*)"#include \x0D", 11ll, (void*)vr$7999, -1ll );
       __builtin_memset( &TMP$3730$7, 0, 24ll );
       FBSTRING* vr$8005 = fb_StrConcat( &TMP$3730$7, (void*)vr$8002, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8005, 1 );
      }
      goto label$9652;
      label$9667:;
      {
       FBSTRING TMP$3732$7;
       FBSTRING TMP$3733$7;
       FBSTRING* vr$8006 = fb_StrAllocTempDescZEx( (uint8*)"STAGE1.INC", 10ll );
       FBSTRING* vr$8007 = fb_StrLcase2( (FBSTRING*)vr$8006, 0 );
       __builtin_memset( &TMP$3732$7, 0, 24ll );
       FBSTRING* vr$8010 = fb_StrConcat( &TMP$3732$7, (void*)"#include \x0D", 11ll, (void*)vr$8007, -1ll );
       __builtin_memset( &TMP$3733$7, 0, 24ll );
       FBSTRING* vr$8013 = fb_StrConcat( &TMP$3733$7, (void*)vr$8010, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8013, 1 );
      }
      goto label$9652;
      label$9668:;
      {
       FBSTRING TMP$3735$7;
       FBSTRING TMP$3736$7;
       FBSTRING* vr$8014 = fb_StrAllocTempDescZEx( (uint8*)"STARS.INC", 9ll );
       FBSTRING* vr$8015 = fb_StrLcase2( (FBSTRING*)vr$8014, 0 );
       __builtin_memset( &TMP$3735$7, 0, 24ll );
       FBSTRING* vr$8018 = fb_StrConcat( &TMP$3735$7, (void*)"#include \x0D", 11ll, (void*)vr$8015, -1ll );
       __builtin_memset( &TMP$3736$7, 0, 24ll );
       FBSTRING* vr$8021 = fb_StrConcat( &TMP$3736$7, (void*)vr$8018, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8021, 1 );
      }
      goto label$9652;
      label$9669:;
      {
       FBSTRING TMP$3738$7;
       FBSTRING TMP$3739$7;
       FBSTRING* vr$8022 = fb_StrAllocTempDescZEx( (uint8*)"STDCAM.INC", 10ll );
       FBSTRING* vr$8023 = fb_StrLcase2( (FBSTRING*)vr$8022, 0 );
       __builtin_memset( &TMP$3738$7, 0, 24ll );
       FBSTRING* vr$8026 = fb_StrConcat( &TMP$3738$7, (void*)"#include \x0D", 11ll, (void*)vr$8023, -1ll );
       __builtin_memset( &TMP$3739$7, 0, 24ll );
       FBSTRING* vr$8029 = fb_StrConcat( &TMP$3739$7, (void*)vr$8026, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8029, 1 );
      }
      goto label$9652;
      label$9670:;
      {
       FBSTRING TMP$3741$7;
       FBSTRING TMP$3742$7;
       FBSTRING* vr$8030 = fb_StrAllocTempDescZEx( (uint8*)"STONEOLD.INC", 12ll );
       FBSTRING* vr$8031 = fb_StrLcase2( (FBSTRING*)vr$8030, 0 );
       __builtin_memset( &TMP$3741$7, 0, 24ll );
       FBSTRING* vr$8034 = fb_StrConcat( &TMP$3741$7, (void*)"#include \x0D", 11ll, (void*)vr$8031, -1ll );
       __builtin_memset( &TMP$3742$7, 0, 24ll );
       FBSTRING* vr$8037 = fb_StrConcat( &TMP$3742$7, (void*)vr$8034, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8037, 1 );
      }
      goto label$9652;
      label$9671:;
      {
       FBSTRING TMP$3744$7;
       FBSTRING TMP$3745$7;
       FBSTRING* vr$8038 = fb_StrAllocTempDescZEx( (uint8*)"STONES1.INC", 11ll );
       FBSTRING* vr$8039 = fb_StrLcase2( (FBSTRING*)vr$8038, 0 );
       __builtin_memset( &TMP$3744$7, 0, 24ll );
       FBSTRING* vr$8042 = fb_StrConcat( &TMP$3744$7, (void*)"#include \x0D", 11ll, (void*)vr$8039, -1ll );
       __builtin_memset( &TMP$3745$7, 0, 24ll );
       FBSTRING* vr$8045 = fb_StrConcat( &TMP$3745$7, (void*)vr$8042, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8045, 1 );
      }
      goto label$9652;
      label$9672:;
      {
       FBSTRING TMP$3747$7;
       FBSTRING TMP$3748$7;
       FBSTRING* vr$8046 = fb_StrAllocTempDescZEx( (uint8*)"STONES2.INC", 11ll );
       FBSTRING* vr$8047 = fb_StrLcase2( (FBSTRING*)vr$8046, 0 );
       __builtin_memset( &TMP$3747$7, 0, 24ll );
       FBSTRING* vr$8050 = fb_StrConcat( &TMP$3747$7, (void*)"#include \x0D", 11ll, (void*)vr$8047, -1ll );
       __builtin_memset( &TMP$3748$7, 0, 24ll );
       FBSTRING* vr$8053 = fb_StrConcat( &TMP$3748$7, (void*)vr$8050, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8053, 1 );
      }
      goto label$9652;
      label$9673:;
      {
       FBSTRING TMP$3750$7;
       FBSTRING TMP$3751$7;
       FBSTRING* vr$8054 = fb_StrAllocTempDescZEx( (uint8*)"STONES.INC", 10ll );
       FBSTRING* vr$8055 = fb_StrLcase2( (FBSTRING*)vr$8054, 0 );
       __builtin_memset( &TMP$3750$7, 0, 24ll );
       FBSTRING* vr$8058 = fb_StrConcat( &TMP$3750$7, (void*)"#include \x0D", 11ll, (void*)vr$8055, -1ll );
       __builtin_memset( &TMP$3751$7, 0, 24ll );
       FBSTRING* vr$8061 = fb_StrConcat( &TMP$3751$7, (void*)vr$8058, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8061, 1 );
      }
      goto label$9652;
      label$9674:;
      {
       FBSTRING TMP$3753$7;
       FBSTRING TMP$3754$7;
       FBSTRING* vr$8062 = fb_StrAllocTempDescZEx( (uint8*)"TEXTURES.INC", 12ll );
       FBSTRING* vr$8063 = fb_StrLcase2( (FBSTRING*)vr$8062, 0 );
       __builtin_memset( &TMP$3753$7, 0, 24ll );
       FBSTRING* vr$8066 = fb_StrConcat( &TMP$3753$7, (void*)"#include \x0D", 11ll, (void*)vr$8063, -1ll );
       __builtin_memset( &TMP$3754$7, 0, 24ll );
       FBSTRING* vr$8069 = fb_StrConcat( &TMP$3754$7, (void*)vr$8066, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8069, 1 );
      }
      goto label$9652;
      label$9675:;
      {
       FBSTRING TMP$3756$7;
       FBSTRING TMP$3757$7;
       FBSTRING* vr$8070 = fb_StrAllocTempDescZEx( (uint8*)"WOODMAPS.INC", 12ll );
       FBSTRING* vr$8071 = fb_StrLcase2( (FBSTRING*)vr$8070, 0 );
       __builtin_memset( &TMP$3756$7, 0, 24ll );
       FBSTRING* vr$8074 = fb_StrConcat( &TMP$3756$7, (void*)"#include \x0D", 11ll, (void*)vr$8071, -1ll );
       __builtin_memset( &TMP$3757$7, 0, 24ll );
       FBSTRING* vr$8077 = fb_StrConcat( &TMP$3757$7, (void*)vr$8074, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8077, 1 );
      }
      goto label$9652;
      label$9676:;
      {
       FBSTRING TMP$3759$7;
       FBSTRING TMP$3760$7;
       FBSTRING* vr$8078 = fb_StrAllocTempDescZEx( (uint8*)"WOODS.INC", 9ll );
       FBSTRING* vr$8079 = fb_StrLcase2( (FBSTRING*)vr$8078, 0 );
       __builtin_memset( &TMP$3759$7, 0, 24ll );
       FBSTRING* vr$8082 = fb_StrConcat( &TMP$3759$7, (void*)"#include \x0D", 11ll, (void*)vr$8079, -1ll );
       __builtin_memset( &TMP$3760$7, 0, 24ll );
       FBSTRING* vr$8085 = fb_StrConcat( &TMP$3760$7, (void*)vr$8082, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8085, 1 );
      }
      goto label$9652;
      label$9653:;
      static const void* tmp$5317[23ll] = {
       &&label$9654,
       &&label$9655,
       &&label$9656,
       &&label$9657,
       &&label$9658,
       &&label$9659,
       &&label$9660,
       &&label$9661,
       &&label$9662,
       &&label$9663,
       &&label$9664,
       &&label$9665,
       &&label$9666,
       &&label$9667,
       &&label$9668,
       &&label$9669,
       &&label$9670,
       &&label$9671,
       &&label$9672,
       &&label$9673,
       &&label$9674,
       &&label$9675,
       &&label$9676,
      };
      if( TMP$3689$6 > 22ull ) goto label$9652;
      goto *tmp$5317[TMP$3689$6 - 0ull];
      label$9652:;
     }
    }
    goto label$9040;
    label$9677:;
    {
     {
      uint64 TMP$3761$6;
      TMP$3761$6 = ((uint64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394968ll) ));
      goto label$9679;
      label$9680:;
      {
       FBSTRING* vr$8087 = fb_StrAllocTempDescZEx( (uint8*)"gosub", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8087, 0 );
      }
      goto label$9678;
      label$9681:;
      {
       FBSTRING* vr$8088 = fb_StrAllocTempDescZEx( (uint8*)"goto", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8088, 0 );
      }
      goto label$9678;
      label$9682:;
      {
       FBSTRING* vr$8089 = fb_StrAllocTempDescZEx( (uint8*)"gradient", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8089, 0 );
      }
      goto label$9678;
      label$9683:;
      {
       FBSTRING* vr$8090 = fb_StrAllocTempDescZEx( (uint8*)"granite", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8090, 0 );
      }
      goto label$9678;
      label$9684:;
      {
       FBSTRING* vr$8091 = fb_StrAllocTempDescZEx( (uint8*)"gray", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8091, 0 );
      }
      goto label$9678;
      label$9685:;
      {
       FBSTRING* vr$8092 = fb_StrAllocTempDescZEx( (uint8*)"gray_threshold", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$8092, 0 );
      }
      goto label$9678;
      label$9686:;
      {
       FBSTRING* vr$8093 = fb_StrAllocTempDescZEx( (uint8*)"greateeq", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8093, 0 );
      }
      goto label$9678;
      label$9687:;
      {
       FBSTRING* vr$8094 = fb_StrAllocTempDescZEx( (uint8*)"greater", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8094, 0 );
      }
      goto label$9678;
      label$9688:;
      {
       FBSTRING* vr$8095 = fb_StrAllocTempDescZEx( (uint8*)"green", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8095, 0 );
      }
      goto label$9678;
      label$9689:;
      {
       FBSTRING* vr$8096 = fb_StrAllocTempDescZEx( (uint8*)"group", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8096, 0 );
      }
      goto label$9678;
      label$9690:;
      {
       FBSTRING* vr$8097 = fb_StrAllocTempDescZEx( (uint8*)"group_by", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8097, 0 );
      }
      goto label$9678;
      label$9691:;
      {
       FBSTRING* vr$8098 = fb_StrAllocTempDescZEx( (uint8*)"h", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$8098, 0 );
      }
      goto label$9678;
      label$9692:;
      {
       FBSTRING* vr$8099 = fb_StrAllocTempDescZEx( (uint8*)"half", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8099, 0 );
      }
      goto label$9678;
      label$9693:;
      {
       FBSTRING* vr$8100 = fb_StrAllocTempDescZEx( (uint8*)"hash", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8100, 0 );
      }
      goto label$9678;
      label$9694:;
      {
       FBSTRING* vr$8101 = fb_StrAllocTempDescZEx( (uint8*)"hashnoise", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8101, 0 );
      }
      goto label$9678;
      label$9695:;
      {
       FBSTRING* vr$8102 = fb_StrAllocTempDescZEx( (uint8*)"having", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8102, 0 );
      }
      goto label$9678;
      label$9696:;
      {
       FBSTRING* vr$8103 = fb_StrAllocTempDescZEx( (uint8*)"header", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8103, 0 );
      }
      goto label$9678;
      label$9697:;
      {
       FBSTRING* vr$8104 = fb_StrAllocTempDescZEx( (uint8*)"heading", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8104, 0 );
      }
      goto label$9678;
      label$9698:;
      {
       FBSTRING* vr$8105 = fb_StrAllocTempDescZEx( (uint8*)"height_field", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8105, 0 );
      }
      goto label$9678;
      label$9699:;
      {
       FBSTRING* vr$8106 = fb_StrAllocTempDescZEx( (uint8*)"henyey_greenstein", 17ll );
       fb_PrintString( 1, (FBSTRING*)vr$8106, 0 );
      }
      goto label$9678;
      label$9700:;
      {
       FBSTRING* vr$8107 = fb_StrAllocTempDescZEx( (uint8*)"hex", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8107, 0 );
      }
      goto label$9678;
      label$9701:;
      {
       FBSTRING* vr$8108 = fb_StrAllocTempDescZEx( (uint8*)"hexagon", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8108, 0 );
      }
      goto label$9678;
      label$9702:;
      {
       FBSTRING* vr$8109 = fb_StrAllocTempDescZEx( (uint8*)"hf_gray_16", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8109, 0 );
      }
      goto label$9678;
      label$9703:;
      {
       FBSTRING* vr$8110 = fb_StrAllocTempDescZEx( (uint8*)"hierarchy", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8110, 0 );
      }
      goto label$9678;
      label$9704:;
      {
       FBSTRING* vr$8111 = fb_StrAllocTempDescZEx( (uint8*)"highp", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8111, 0 );
      }
      goto label$9678;
      label$9705:;
      {
       FBSTRING* vr$8112 = fb_StrAllocTempDescZEx( (uint8*)"high-value", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8112, 0 );
      }
      goto label$9678;
      label$9706:;
      {
       FBSTRING* vr$8113 = fb_StrAllocTempDescZEx( (uint8*)"high-values", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8113, 0 );
      }
      goto label$9678;
      label$9707:;
      {
       FBSTRING* vr$8114 = fb_StrAllocTempDescZEx( (uint8*)"hintend", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8114, 0 );
      }
      goto label$9678;
      label$9708:;
      {
       FBSTRING* vr$8115 = fb_StrAllocTempDescZEx( (uint8*)"hint_error", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8115, 0 );
      }
      goto label$9678;
      label$9709:;
      {
       FBSTRING* vr$8116 = fb_StrAllocTempDescZEx( (uint8*)"hintstart", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8116, 0 );
      }
      goto label$9678;
      label$9710:;
      {
       FBSTRING* vr$8117 = fb_StrAllocTempDescZEx( (uint8*)"holdout", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8117, 0 );
      }
      goto label$9678;
      label$9711:;
      {
       FBSTRING* vr$8118 = fb_StrAllocTempDescZEx( (uint8*)"hollow", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8118, 0 );
      }
      goto label$9678;
      label$9712:;
      {
       FBSTRING* vr$8119 = fb_StrAllocTempDescZEx( (uint8*)"hour", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8119, 0 );
      }
      goto label$9678;
      label$9713:;
      {
       FBSTRING* vr$8120 = fb_StrAllocTempDescZEx( (uint8*)"hvec2", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8120, 0 );
      }
      goto label$9678;
      label$9714:;
      {
       FBSTRING* vr$8121 = fb_StrAllocTempDescZEx( (uint8*)"hvec3", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8121, 0 );
      }
      goto label$9678;
      label$9715:;
      {
       FBSTRING* vr$8122 = fb_StrAllocTempDescZEx( (uint8*)"hvec4", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8122, 0 );
      }
      goto label$9678;
      label$9716:;
      {
       FBSTRING* vr$8123 = fb_StrAllocTempDescZEx( (uint8*)"hypercomplex", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8123, 0 );
      }
      goto label$9678;
      label$9717:;
      {
       FBSTRING* vr$8124 = fb_StrAllocTempDescZEx( (uint8*)"hypot", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8124, 0 );
      }
      goto label$9678;
      label$9718:;
      {
       FBSTRING* vr$8125 = fb_StrAllocTempDescZEx( (uint8*)"i", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$8125, 0 );
      }
      goto label$9678;
      label$9719:;
      {
       FBSTRING* vr$8126 = fb_StrAllocTempDescZEx( (uint8*)"iChannel0", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8126, 0 );
      }
      goto label$9678;
      label$9720:;
      {
       FBSTRING* vr$8127 = fb_StrAllocTempDescZEx( (uint8*)"iChannel1", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8127, 0 );
      }
      goto label$9678;
      label$9721:;
      {
       FBSTRING* vr$8128 = fb_StrAllocTempDescZEx( (uint8*)"iChannel2", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8128, 0 );
      }
      goto label$9678;
      label$9722:;
      {
       FBSTRING* vr$8129 = fb_StrAllocTempDescZEx( (uint8*)"iChannel3", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8129, 0 );
      }
      goto label$9678;
      label$9723:;
      {
       FBSTRING* vr$8130 = fb_StrAllocTempDescZEx( (uint8*)"iChannelResolution", 18ll );
       fb_PrintString( 1, (FBSTRING*)vr$8130, 0 );
      }
      goto label$9678;
      label$9724:;
      {
       FBSTRING* vr$8131 = fb_StrAllocTempDescZEx( (uint8*)"iChannelTime", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8131, 0 );
      }
      goto label$9678;
      label$9725:;
      {
       FBSTRING* vr$8132 = fb_StrAllocTempDescZEx( (uint8*)"iCube", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8132, 0 );
      }
      goto label$9678;
      label$9726:;
      {
       FBSTRING* vr$8133 = fb_StrAllocTempDescZEx( (uint8*)"id", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8133, 0 );
      }
      goto label$9678;
      label$9727:;
      {
       FBSTRING* vr$8134 = fb_StrAllocTempDescZEx( (uint8*)"iDate", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8134, 0 );
      }
      goto label$9678;
      label$9728:;
      {
       FBSTRING* vr$8135 = fb_StrAllocTempDescZEx( (uint8*)"identification", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$8135, 0 );
      }
      goto label$9678;
      label$9729:;
      {
       FBSTRING* vr$8136 = fb_StrAllocTempDescZEx( (uint8*)"if", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8136, 0 );
      }
      goto label$9678;
      label$9730:;
      {
       FBSTRING* vr$8137 = fb_StrAllocTempDescZEx( (uint8*)"ifdef", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8137, 0 );
      }
      goto label$9678;
      label$9731:;
      {
       FBSTRING* vr$8138 = fb_StrAllocTempDescZEx( (uint8*)"ifelse", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8138, 0 );
      }
      goto label$9678;
      label$9732:;
      {
       FBSTRING* vr$8139 = fb_StrAllocTempDescZEx( (uint8*)"iff", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8139, 0 );
      }
      goto label$9678;
      label$9733:;
      {
       FBSTRING* vr$8140 = fb_StrAllocTempDescZEx( (uint8*)"ifndef", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8140, 0 );
      }
      goto label$9678;
      label$9734:;
      {
       FBSTRING* vr$8141 = fb_StrAllocTempDescZEx( (uint8*)"iframe", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8141, 0 );
      }
      goto label$9678;
      label$9735:;
      {
       FBSTRING* vr$8142 = fb_StrAllocTempDescZEx( (uint8*)"iframerate", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8142, 0 );
      }
      goto label$9678;
      label$9736:;
      {
       FBSTRING* vr$8143 = fb_StrAllocTempDescZEx( (uint8*)"iGlobalTime", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8143, 0 );
      }
      goto label$9678;
      label$9737:;
      {
       FBSTRING* vr$8144 = fb_StrAllocTempDescZEx( (uint8*)"iimage1D", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8144, 0 );
      }
      goto label$9678;
      label$9738:;
      {
       FBSTRING* vr$8145 = fb_StrAllocTempDescZEx( (uint8*)"iimage1DArray", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8145, 0 );
      }
      goto label$9678;
      label$9739:;
      {
       FBSTRING* vr$8146 = fb_StrAllocTempDescZEx( (uint8*)"iimage2D", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8146, 0 );
      }
      goto label$9678;
      label$9740:;
      {
       FBSTRING* vr$8147 = fb_StrAllocTempDescZEx( (uint8*)"iimage2DArray", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8147, 0 );
      }
      goto label$9678;
      label$9741:;
      {
       FBSTRING* vr$8148 = fb_StrAllocTempDescZEx( (uint8*)"iimage3D", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8148, 0 );
      }
      goto label$9678;
      label$9742:;
      {
       FBSTRING* vr$8149 = fb_StrAllocTempDescZEx( (uint8*)"iimageBuffer", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8149, 0 );
      }
      goto label$9678;
      label$9743:;
      {
       FBSTRING* vr$8150 = fb_StrAllocTempDescZEx( (uint8*)"iimageCube", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8150, 0 );
      }
      goto label$9678;
      label$9744:;
      {
       FBSTRING* vr$8151 = fb_StrAllocTempDescZEx( (uint8*)"image", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8151, 0 );
      }
      goto label$9678;
      label$9745:;
      {
       FBSTRING* vr$8152 = fb_StrAllocTempDescZEx( (uint8*)"image1D", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8152, 0 );
      }
      goto label$9678;
      label$9746:;
      {
       FBSTRING* vr$8153 = fb_StrAllocTempDescZEx( (uint8*)"image1DArray", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8153, 0 );
      }
      goto label$9678;
      label$9747:;
      {
       FBSTRING* vr$8154 = fb_StrAllocTempDescZEx( (uint8*)"image1DArrayShadow", 18ll );
       fb_PrintString( 1, (FBSTRING*)vr$8154, 0 );
      }
      goto label$9678;
      label$9748:;
      {
       FBSTRING* vr$8155 = fb_StrAllocTempDescZEx( (uint8*)"image1DShadow", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8155, 0 );
      }
      goto label$9678;
      label$9749:;
      {
       FBSTRING* vr$8156 = fb_StrAllocTempDescZEx( (uint8*)"image2D", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8156, 0 );
      }
      goto label$9678;
      label$9750:;
      {
       FBSTRING* vr$8157 = fb_StrAllocTempDescZEx( (uint8*)"image2DArray", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8157, 0 );
      }
      goto label$9678;
      label$9751:;
      {
       FBSTRING* vr$8158 = fb_StrAllocTempDescZEx( (uint8*)"image2DArrayShadow", 18ll );
       fb_PrintString( 1, (FBSTRING*)vr$8158, 0 );
      }
      goto label$9678;
      label$9752:;
      {
       FBSTRING* vr$8159 = fb_StrAllocTempDescZEx( (uint8*)"image2DShadow", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8159, 0 );
      }
      goto label$9678;
      label$9753:;
      {
       FBSTRING* vr$8160 = fb_StrAllocTempDescZEx( (uint8*)"image3D", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8160, 0 );
      }
      goto label$9678;
      label$9754:;
      {
       FBSTRING* vr$8161 = fb_StrAllocTempDescZEx( (uint8*)"imageBuffer", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8161, 0 );
      }
      goto label$9678;
      label$9755:;
      {
       FBSTRING* vr$8162 = fb_StrAllocTempDescZEx( (uint8*)"imageCube", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8162, 0 );
      }
      goto label$9678;
      label$9756:;
      {
       FBSTRING* vr$8163 = fb_StrAllocTempDescZEx( (uint8*)"image_height", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8163, 0 );
      }
      goto label$9678;
      label$9757:;
      {
       FBSTRING* vr$8164 = fb_StrAllocTempDescZEx( (uint8*)"image_map", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8164, 0 );
      }
      goto label$9678;
      label$9758:;
      {
       FBSTRING* vr$8165 = fb_StrAllocTempDescZEx( (uint8*)"image_pattern", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8165, 0 );
      }
      goto label$9678;
      label$9759:;
      {
       FBSTRING* vr$8166 = fb_StrAllocTempDescZEx( (uint8*)"image_width", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8166, 0 );
      }
      goto label$9678;
      label$9760:;
      {
       FBSTRING* vr$8167 = fb_StrAllocTempDescZEx( (uint8*)"imouse", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8167, 0 );
      }
      goto label$9678;
      label$9761:;
      {
       FBSTRING* vr$8168 = fb_StrAllocTempDescZEx( (uint8*)"imp", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8168, 0 );
      }
      goto label$9678;
      label$9762:;
      {
       FBSTRING* vr$8169 = fb_StrAllocTempDescZEx( (uint8*)"implementation", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$8169, 0 );
      }
      goto label$9678;
      label$9763:;
      {
       FBSTRING* vr$8170 = fb_StrAllocTempDescZEx( (uint8*)"import", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8170, 0 );
      }
      goto label$9678;
      label$9764:;
      {
       FBSTRING* vr$8171 = fb_StrAllocTempDescZEx( (uint8*)"in", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8171, 0 );
      }
      goto label$9678;
      label$9765:;
      {
       FBSTRING* vr$8172 = fb_StrAllocTempDescZEx( (uint8*)"include", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8172, 0 );
      }
      goto label$9678;
      label$9766:;
      {
       FBSTRING* vr$8173 = fb_StrAllocTempDescZEx( (uint8*)"index", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8173, 0 );
      }
      goto label$9678;
      label$9767:;
      {
       FBSTRING* vr$8174 = fb_StrAllocTempDescZEx( (uint8*)"indexed", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8174, 0 );
      }
      goto label$9678;
      label$9768:;
      {
       FBSTRING* vr$8175 = fb_StrAllocTempDescZEx( (uint8*)"indicate", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8175, 0 );
      }
      goto label$9678;
      label$9769:;
      {
       FBSTRING* vr$8176 = fb_StrAllocTempDescZEx( (uint8*)"inherited", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8176, 0 );
      }
      goto label$9678;
      label$9770:;
      {
       FBSTRING* vr$8177 = fb_StrAllocTempDescZEx( (uint8*)"inherits", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8177, 0 );
      }
      goto label$9678;
      label$9771:;
      {
       FBSTRING* vr$8178 = fb_StrAllocTempDescZEx( (uint8*)"initial", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8178, 0 );
      }
      goto label$9678;
      label$9772:;
      {
       FBSTRING* vr$8179 = fb_StrAllocTempDescZEx( (uint8*)"initial_clock", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8179, 0 );
      }
      goto label$9678;
      label$9773:;
      {
       FBSTRING* vr$8180 = fb_StrAllocTempDescZEx( (uint8*)"initial_frame", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8180, 0 );
      }
      goto label$9678;
      label$9774:;
      {
       FBSTRING* vr$8181 = fb_StrAllocTempDescZEx( (uint8*)"initialization", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$8181, 0 );
      }
      goto label$9678;
      label$9775:;
      {
       FBSTRING* vr$8182 = fb_StrAllocTempDescZEx( (uint8*)"initialize", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8182, 0 );
      }
      goto label$9678;
      label$9776:;
      {
       FBSTRING* vr$8183 = fb_StrAllocTempDescZEx( (uint8*)"initiate", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8183, 0 );
      }
      goto label$9678;
      label$9777:;
      {
       FBSTRING* vr$8184 = fb_StrAllocTempDescZEx( (uint8*)"inkey", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8184, 0 );
      }
      goto label$9678;
      label$9778:;
      {
       FBSTRING* vr$8185 = fb_StrAllocTempDescZEx( (uint8*)"inline", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8185, 0 );
      }
      goto label$9678;
      label$9779:;
      {
       FBSTRING* vr$8186 = fb_StrAllocTempDescZEx( (uint8*)"inlinenoinline", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$8186, 0 );
      }
      goto label$9678;
      label$9780:;
      {
       FBSTRING* vr$8187 = fb_StrAllocTempDescZEx( (uint8*)"in_memory", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8187, 0 );
      }
      goto label$9678;
      label$9781:;
      {
       FBSTRING* vr$8188 = fb_StrAllocTempDescZEx( (uint8*)"inner", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8188, 0 );
      }
      goto label$9678;
      label$9782:;
      {
       FBSTRING* vr$8189 = fb_StrAllocTempDescZEx( (uint8*)"inout", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8189, 0 );
      }
      goto label$9678;
      label$9783:;
      {
       FBSTRING* vr$8190 = fb_StrAllocTempDescZEx( (uint8*)"inp", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8190, 0 );
      }
      goto label$9678;
      label$9784:;
      {
       FBSTRING* vr$8191 = fb_StrAllocTempDescZEx( (uint8*)"input", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8191, 0 );
      }
      goto label$9678;
      label$9785:;
      {
       FBSTRING* vr$8192 = fb_StrAllocTempDescZEx( (uint8*)"input-output", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8192, 0 );
      }
      goto label$9678;
      label$9786:;
      {
       FBSTRING* vr$8193 = fb_StrAllocTempDescZEx( (uint8*)"inquire", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8193, 0 );
      }
      goto label$9678;
      label$9787:;
      {
       FBSTRING* vr$8194 = fb_StrAllocTempDescZEx( (uint8*)"insert", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8194, 0 );
      }
      goto label$9678;
      label$9788:;
      {
       FBSTRING* vr$8195 = fb_StrAllocTempDescZEx( (uint8*)"inside", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8195, 0 );
      }
      goto label$9678;
      label$9789:;
      {
       FBSTRING* vr$8196 = fb_StrAllocTempDescZEx( (uint8*)"inside_vector", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8196, 0 );
      }
      goto label$9678;
      label$9790:;
      {
       FBSTRING* vr$8197 = fb_StrAllocTempDescZEx( (uint8*)"inspect", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8197, 0 );
      }
      goto label$9678;
      label$9791:;
      {
       FBSTRING* vr$8198 = fb_StrAllocTempDescZEx( (uint8*)"installation", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8198, 0 );
      }
      goto label$9678;
      label$9792:;
      {
       FBSTRING* vr$8199 = fb_StrAllocTempDescZEx( (uint8*)"instr", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8199, 0 );
      }
      goto label$9678;
      label$9793:;
      {
       FBSTRING* vr$8200 = fb_StrAllocTempDescZEx( (uint8*)"int", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8200, 0 );
      }
      goto label$9678;
      label$9794:;
      {
       FBSTRING* vr$8201 = fb_StrAllocTempDescZEx( (uint8*)"integer", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8201, 0 );
      }
      goto label$9678;
      label$9795:;
      {
       FBSTRING* vr$8202 = fb_StrAllocTempDescZEx( (uint8*)"interface", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8202, 0 );
      }
      goto label$9678;
      label$9796:;
      {
       FBSTRING* vr$8203 = fb_StrAllocTempDescZEx( (uint8*)"interior", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8203, 0 );
      }
      goto label$9678;
      label$9797:;
      {
       FBSTRING* vr$8204 = fb_StrAllocTempDescZEx( (uint8*)"interior_texture", 16ll );
       fb_PrintString( 1, (FBSTRING*)vr$8204, 0 );
      }
      goto label$9678;
      label$9798:;
      {
       FBSTRING* vr$8205 = fb_StrAllocTempDescZEx( (uint8*)"internal", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8205, 0 );
      }
      goto label$9678;
      label$9799:;
      {
       FBSTRING* vr$8206 = fb_StrAllocTempDescZEx( (uint8*)"interpolate", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8206, 0 );
      }
      goto label$9678;
      label$9800:;
      {
       FBSTRING* vr$8207 = fb_StrAllocTempDescZEx( (uint8*)"intersect", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8207, 0 );
      }
      goto label$9678;
      label$9801:;
      {
       FBSTRING* vr$8208 = fb_StrAllocTempDescZEx( (uint8*)"intersection", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8208, 0 );
      }
      goto label$9678;
      label$9802:;
      {
       FBSTRING* vr$8209 = fb_StrAllocTempDescZEx( (uint8*)"interval", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8209, 0 );
      }
      goto label$9678;
      label$9803:;
      {
       FBSTRING* vr$8210 = fb_StrAllocTempDescZEx( (uint8*)"intervals", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8210, 0 );
      }
      goto label$9678;
      label$9804:;
      {
       FBSTRING* vr$8211 = fb_StrAllocTempDescZEx( (uint8*)"into", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8211, 0 );
      }
      goto label$9678;
      label$9805:;
      {
       FBSTRING* vr$8212 = fb_StrAllocTempDescZEx( (uint8*)"intrinsic", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8212, 0 );
      }
      goto label$9678;
      label$9806:;
      {
       FBSTRING* vr$8213 = fb_StrAllocTempDescZEx( (uint8*)"invalid", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8213, 0 );
      }
      goto label$9678;
      label$9807:;
      {
       FBSTRING* vr$8214 = fb_StrAllocTempDescZEx( (uint8*)"invariant", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8214, 0 );
      }
      goto label$9678;
      label$9808:;
      {
       FBSTRING* vr$8215 = fb_StrAllocTempDescZEx( (uint8*)"inverse", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8215, 0 );
      }
      goto label$9678;
      label$9809:;
      {
       FBSTRING* vr$8216 = fb_StrAllocTempDescZEx( (uint8*)"inversesqr", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8216, 0 );
      }
      goto label$9678;
      label$9810:;
      {
       FBSTRING* vr$8217 = fb_StrAllocTempDescZEx( (uint8*)"invoke", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8217, 0 );
      }
      goto label$9678;
      label$9811:;
      {
       FBSTRING* vr$8218 = fb_StrAllocTempDescZEx( (uint8*)"i-o", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8218, 0 );
      }
      goto label$9678;
      label$9812:;
      {
       FBSTRING* vr$8219 = fb_StrAllocTempDescZEx( (uint8*)"i-o-control", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8219, 0 );
      }
      goto label$9678;
      label$9813:;
      {
       FBSTRING* vr$8220 = fb_StrAllocTempDescZEx( (uint8*)"ioctl", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8220, 0 );
      }
      goto label$9678;
      label$9814:;
      {
       FBSTRING* vr$8221 = fb_StrAllocTempDescZEx( (uint8*)"ior", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8221, 0 );
      }
      goto label$9678;
      label$9815:;
      {
       FBSTRING* vr$8222 = fb_StrAllocTempDescZEx( (uint8*)"i_resolution", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8222, 0 );
      }
      goto label$9678;
      label$9816:;
      {
       FBSTRING* vr$8223 = fb_StrAllocTempDescZEx( (uint8*)"iResolution", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8223, 0 );
      }
      goto label$9678;
      label$9817:;
      {
       FBSTRING* vr$8224 = fb_StrAllocTempDescZEx( (uint8*)"irid", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8224, 0 );
      }
      goto label$9678;
      label$9818:;
      {
       FBSTRING* vr$8225 = fb_StrAllocTempDescZEx( (uint8*)"irid_wavelength", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$8225, 0 );
      }
      goto label$9678;
      label$9819:;
      {
       FBSTRING* vr$8226 = fb_StrAllocTempDescZEx( (uint8*)"is", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8226, 0 );
      }
      goto label$9678;
      label$9820:;
      {
       FBSTRING* vr$8227 = fb_StrAllocTempDescZEx( (uint8*)"isampler1D", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8227, 0 );
      }
      goto label$9678;
      label$9821:;
      {
       FBSTRING* vr$8228 = fb_StrAllocTempDescZEx( (uint8*)"isampler1DArray", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$8228, 0 );
      }
      goto label$9678;
      label$9822:;
      {
       FBSTRING* vr$8229 = fb_StrAllocTempDescZEx( (uint8*)"isampler2D", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8229, 0 );
      }
      goto label$9678;
      label$9823:;
      {
       FBSTRING* vr$8230 = fb_StrAllocTempDescZEx( (uint8*)"isampler2DArray", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$8230, 0 );
      }
      goto label$9678;
      label$9824:;
      {
       FBSTRING* vr$8231 = fb_StrAllocTempDescZEx( (uint8*)"isampler2DRect", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$8231, 0 );
      }
      goto label$9678;
      label$9825:;
      {
       FBSTRING* vr$8232 = fb_StrAllocTempDescZEx( (uint8*)"isampler3D", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8232, 0 );
      }
      goto label$9678;
      label$9826:;
      {
       FBSTRING* vr$8233 = fb_StrAllocTempDescZEx( (uint8*)"iSampleRate", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8233, 0 );
      }
      goto label$9678;
      label$9827:;
      {
       FBSTRING* vr$8234 = fb_StrAllocTempDescZEx( (uint8*)"glsl ", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8234, 0 );
      }
      goto label$9678;
      label$9828:;
      {
       FBSTRING* vr$8235 = fb_StrAllocTempDescZEx( (uint8*)"isamplerCube", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8235, 0 );
      }
      goto label$9678;
      label$9829:;
      {
       FBSTRING* vr$8236 = fb_StrAllocTempDescZEx( (uint8*)"isconnected", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8236, 0 );
      }
      goto label$9678;
      label$9830:;
      {
       FBSTRING* vr$8237 = fb_StrAllocTempDescZEx( (uint8*)"isconstant", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8237, 0 );
      }
      goto label$9678;
      label$9831:;
      {
       FBSTRING* vr$8238 = fb_StrAllocTempDescZEx( (uint8*)"isfinite", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8238, 0 );
      }
      goto label$9678;
      label$9832:;
      {
       FBSTRING* vr$8239 = fb_StrAllocTempDescZEx( (uint8*)"isinf", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8239, 0 );
      }
      goto label$9678;
      label$9833:;
      {
       FBSTRING* vr$8240 = fb_StrAllocTempDescZEx( (uint8*)"isnan", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8240, 0 );
      }
      goto label$9678;
      label$9834:;
      {
       FBSTRING* vr$8241 = fb_StrAllocTempDescZEx( (uint8*)"isosurface", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8241, 0 );
      }
      goto label$9678;
      label$9835:;
      {
       FBSTRING* vr$8242 = fb_StrAllocTempDescZEx( (uint8*)"isotropic", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8242, 0 );
      }
      goto label$9678;
      label$9836:;
      {
       FBSTRING* vr$8243 = fb_StrAllocTempDescZEx( (uint8*)"iterate", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8243, 0 );
      }
      goto label$9678;
      label$9837:;
      {
       FBSTRING* vr$8244 = fb_StrAllocTempDescZEx( (uint8*)"i_time", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8244, 0 );
      }
      goto label$9678;
      label$9838:;
      {
       FBSTRING* vr$8245 = fb_StrAllocTempDescZEx( (uint8*)"itime", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8245, 0 );
      }
      goto label$9678;
      label$9839:;
      {
       FBSTRING* vr$8246 = fb_StrAllocTempDescZEx( (uint8*)"itimedelta", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8246, 0 );
      }
      goto label$9678;
      label$9840:;
      {
       FBSTRING* vr$8247 = fb_StrAllocTempDescZEx( (uint8*)"ivec2", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8247, 0 );
      }
      goto label$9678;
      label$9841:;
      {
       FBSTRING* vr$8248 = fb_StrAllocTempDescZEx( (uint8*)"ivec3", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8248, 0 );
      }
      goto label$9678;
      label$9842:;
      {
       FBSTRING* vr$8249 = fb_StrAllocTempDescZEx( (uint8*)"ivec4", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8249, 0 );
      }
      goto label$9678;
      label$9843:;
      {
       FBSTRING* vr$8250 = fb_StrAllocTempDescZEx( (uint8*)"j", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$8250, 0 );
      }
      goto label$9678;
      label$9844:;
      {
       FBSTRING* vr$8251 = fb_StrAllocTempDescZEx( (uint8*)"jitter", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8251, 0 );
      }
      goto label$9678;
      label$9845:;
      {
       FBSTRING* vr$8252 = fb_StrAllocTempDescZEx( (uint8*)"join", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8252, 0 );
      }
      goto label$9678;
      label$9846:;
      {
       FBSTRING* vr$8253 = fb_StrAllocTempDescZEx( (uint8*)"jpeg", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8253, 0 );
      }
      goto label$9678;
      label$9847:;
      {
       FBSTRING* vr$8254 = fb_StrAllocTempDescZEx( (uint8*)"julia", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8254, 0 );
      }
      goto label$9678;
      label$9848:;
      {
       FBSTRING* vr$8255 = fb_StrAllocTempDescZEx( (uint8*)"julia_fractal", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8255, 0 );
      }
      goto label$9678;
      label$9849:;
      {
       FBSTRING* vr$8256 = fb_StrAllocTempDescZEx( (uint8*)"just", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8256, 0 );
      }
      goto label$9678;
      label$9850:;
      {
       FBSTRING* vr$8257 = fb_StrAllocTempDescZEx( (uint8*)"justified", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8257, 0 );
      }
      goto label$9678;
      label$9851:;
      {
       FBSTRING* vr$8258 = fb_StrAllocTempDescZEx( (uint8*)"k", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$8258, 0 );
      }
      goto label$9678;
      label$9852:;
      {
       FBSTRING* vr$8259 = fb_StrAllocTempDescZEx( (uint8*)"kanji", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8259, 0 );
      }
      goto label$9678;
      label$9853:;
      {
       FBSTRING* vr$8260 = fb_StrAllocTempDescZEx( (uint8*)"key", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8260, 0 );
      }
      goto label$9678;
      label$9854:;
      {
       FBSTRING* vr$8261 = fb_StrAllocTempDescZEx( (uint8*)"kill", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8261, 0 );
      }
      goto label$9678;
      label$9855:;
      {
       FBSTRING* vr$8262 = fb_StrAllocTempDescZEx( (uint8*)"l", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$8262, 0 );
      }
      goto label$9678;
      label$9856:;
      {
       FBSTRING* vr$8263 = fb_StrAllocTempDescZEx( (uint8*)"label", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8263, 0 );
      }
      goto label$9678;
      label$9857:;
      {
       FBSTRING* vr$8264 = fb_StrAllocTempDescZEx( (uint8*)"lambda", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8264, 0 );
      }
      goto label$9678;
      label$9858:;
      {
       FBSTRING* vr$8265 = fb_StrAllocTempDescZEx( (uint8*)"last", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8265, 0 );
      }
      goto label$9678;
      label$9859:;
      {
       FBSTRING* vr$8266 = fb_StrAllocTempDescZEx( (uint8*)"lathe", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8266, 0 );
      }
      goto label$9678;
      label$9860:;
      {
       FBSTRING* vr$8267 = fb_StrAllocTempDescZEx( (uint8*)"layout", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8267, 0 );
      }
      goto label$9678;
      label$9861:;
      {
       FBSTRING* vr$8268 = fb_StrAllocTempDescZEx( (uint8*)"lcopy", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8268, 0 );
      }
      goto label$9678;
      label$9862:;
      {
       FBSTRING* vr$8269 = fb_StrAllocTempDescZEx( (uint8*)"leading", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8269, 0 );
      }
      goto label$9678;
      label$9863:;
      {
       FBSTRING* vr$8270 = fb_StrAllocTempDescZEx( (uint8*)"leave", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8270, 0 );
      }
      goto label$9678;
      label$9864:;
      {
       FBSTRING* vr$8271 = fb_StrAllocTempDescZEx( (uint8*)"left", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8271, 0 );
      }
      goto label$9678;
      label$9865:;
      {
      }
      goto label$9678;
      label$9866:;
      {
       FBSTRING* vr$8272 = fb_StrAllocTempDescZEx( (uint8*)"len", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8272, 0 );
      }
      goto label$9678;
      label$9867:;
      {
       FBSTRING* vr$8273 = fb_StrAllocTempDescZEx( (uint8*)"length", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8273, 0 );
      }
      goto label$9678;
      label$9868:;
      {
       FBSTRING* vr$8274 = fb_StrAllocTempDescZEx( (uint8*)"leopard", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8274, 0 );
      }
      goto label$9678;
      label$9869:;
      {
       FBSTRING* vr$8275 = fb_StrAllocTempDescZEx( (uint8*)"less", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8275, 0 );
      }
      goto label$9678;
      label$9870:;
      {
       FBSTRING* vr$8276 = fb_StrAllocTempDescZEx( (uint8*)"lesseq", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8276, 0 );
      }
      goto label$9678;
      label$9871:;
      {
       FBSTRING* vr$8277 = fb_StrAllocTempDescZEx( (uint8*)"let", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8277, 0 );
      }
      goto label$9678;
      label$9872:;
      {
       FBSTRING* vr$8278 = fb_StrAllocTempDescZEx( (uint8*)"libraryt", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8278, 0 );
      }
      goto label$9678;
      label$9873:;
      {
       FBSTRING* vr$8279 = fb_StrAllocTempDescZEx( (uint8*)"light_group", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8279, 0 );
      }
      goto label$9678;
      label$9874:;
      {
       FBSTRING* vr$8280 = fb_StrAllocTempDescZEx( (uint8*)"light_source", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8280, 0 );
      }
      goto label$9678;
      label$9875:;
      {
       FBSTRING* vr$8281 = fb_StrAllocTempDescZEx( (uint8*)"like", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8281, 0 );
      }
      goto label$9678;
      label$9876:;
      {
       FBSTRING* vr$8282 = fb_StrAllocTempDescZEx( (uint8*)"limit", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8282, 0 );
      }
      goto label$9678;
      label$9877:;
      {
       FBSTRING* vr$8283 = fb_StrAllocTempDescZEx( (uint8*)"limits", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8283, 0 );
      }
      goto label$9678;
      label$9878:;
      {
       FBSTRING* vr$8284 = fb_StrAllocTempDescZEx( (uint8*)"linage", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8284, 0 );
      }
      goto label$9678;
      label$9879:;
      {
       FBSTRING* vr$8285 = fb_StrAllocTempDescZEx( (uint8*)"linage-counter", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$8285, 0 );
      }
      goto label$9678;
      label$9880:;
      {
       FBSTRING* vr$8286 = fb_StrAllocTempDescZEx( (uint8*)"line", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8286, 0 );
      }
      goto label$9678;
      label$9881:;
      {
       FBSTRING* vr$8287 = fb_StrAllocTempDescZEx( (uint8*)"linear_spline", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8287, 0 );
      }
      goto label$9678;
      label$9882:;
      {
       FBSTRING* vr$8288 = fb_StrAllocTempDescZEx( (uint8*)"linearstep", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8288, 0 );
      }
      goto label$9678;
      label$9883:;
      {
       FBSTRING* vr$8289 = fb_StrAllocTempDescZEx( (uint8*)"linear_sweep", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8289, 0 );
      }
      goto label$9678;
      label$9884:;
      {
       FBSTRING* vr$8290 = fb_StrAllocTempDescZEx( (uint8*)"line-counter", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8290, 0 );
      }
      goto label$9678;
      label$9885:;
      {
       FBSTRING* vr$8291 = fb_StrAllocTempDescZEx( (uint8*)"lines", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8291, 0 );
      }
      goto label$9678;
      label$9886:;
      {
       FBSTRING* vr$8292 = fb_StrAllocTempDescZEx( (uint8*)"linkage", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8292, 0 );
      }
      goto label$9678;
      label$9887:;
      {
       FBSTRING* vr$8293 = fb_StrAllocTempDescZEx( (uint8*)"list", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8293, 0 );
      }
      goto label$9678;
      label$9888:;
      {
       FBSTRING* vr$8294 = fb_StrAllocTempDescZEx( (uint8*)"llist", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8294, 0 );
      }
      goto label$9678;
      label$9889:;
      {
       FBSTRING* vr$8295 = fb_StrAllocTempDescZEx( (uint8*)"ln", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8295, 0 );
      }
      goto label$9678;
      label$9890:;
      {
       FBSTRING* vr$8296 = fb_StrAllocTempDescZEx( (uint8*)"load", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8296, 0 );
      }
      goto label$9678;
      label$9891:;
      {
       FBSTRING* vr$8297 = fb_StrAllocTempDescZEx( (uint8*)"load_file", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8297, 0 );
      }
      goto label$9678;
      label$9892:;
      {
       FBSTRING* vr$8298 = fb_StrAllocTempDescZEx( (uint8*)"loc", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8298, 0 );
      }
      goto label$9678;
      label$9893:;
      {
       FBSTRING* vr$8299 = fb_StrAllocTempDescZEx( (uint8*)"local", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8299, 0 );
      }
      goto label$9678;
      label$9894:;
      {
       FBSTRING* vr$8300 = fb_StrAllocTempDescZEx( (uint8*)"local-storage", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8300, 0 );
      }
      goto label$9678;
      label$9895:;
      {
       FBSTRING* vr$8301 = fb_StrAllocTempDescZEx( (uint8*)"locate", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8301, 0 );
      }
      goto label$9678;
      label$9896:;
      {
       FBSTRING* vr$8302 = fb_StrAllocTempDescZEx( (uint8*)"location", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8302, 0 );
      }
      goto label$9678;
      label$9897:;
      {
       FBSTRING* vr$8303 = fb_StrAllocTempDescZEx( (uint8*)"lock", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8303, 0 );
      }
      goto label$9678;
      label$9898:;
      {
       FBSTRING* vr$8304 = fb_StrAllocTempDescZEx( (uint8*)"lof", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8304, 0 );
      }
      goto label$9678;
      label$9899:;
      {
       FBSTRING* vr$8305 = fb_StrAllocTempDescZEx( (uint8*)"log", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8305, 0 );
      }
      goto label$9678;
      label$9900:;
      {
       FBSTRING* vr$8306 = fb_StrAllocTempDescZEx( (uint8*)"log10", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8306, 0 );
      }
      goto label$9678;
      label$9901:;
      {
       FBSTRING* vr$8307 = fb_StrAllocTempDescZEx( (uint8*)"log2", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8307, 0 );
      }
      goto label$9678;
      label$9902:;
      {
       FBSTRING* vr$8308 = fb_StrAllocTempDescZEx( (uint8*)"logb", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8308, 0 );
      }
      goto label$9678;
      label$9903:;
      {
       FBSTRING* vr$8309 = fb_StrAllocTempDescZEx( (uint8*)"logical", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8309, 0 );
      }
      goto label$9678;
      label$9904:;
      {
       FBSTRING* vr$8310 = fb_StrAllocTempDescZEx( (uint8*)"long", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8310, 0 );
      }
      goto label$9678;
      label$9905:;
      {
       FBSTRING* vr$8311 = fb_StrAllocTempDescZEx( (uint8*)"look_at", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8311, 0 );
      }
      goto label$9678;
      label$9906:;
      {
       FBSTRING* vr$8312 = fb_StrAllocTempDescZEx( (uint8*)"looks_like", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8312, 0 );
      }
      goto label$9678;
      label$9907:;
      {
       FBSTRING* vr$8313 = fb_StrAllocTempDescZEx( (uint8*)"loop", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8313, 0 );
      }
      goto label$9678;
      label$9908:;
      {
       FBSTRING* vr$8314 = fb_StrAllocTempDescZEx( (uint8*)"lower", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8314, 0 );
      }
      goto label$9678;
      label$9909:;
      {
       FBSTRING* vr$8315 = fb_StrAllocTempDescZEx( (uint8*)"lower_mb", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8315, 0 );
      }
      goto label$9678;
      label$9910:;
      {
       FBSTRING* vr$8316 = fb_StrAllocTempDescZEx( (uint8*)"low_error_factor", 16ll );
       fb_PrintString( 1, (FBSTRING*)vr$8316, 0 );
      }
      goto label$9678;
      label$9911:;
      {
       FBSTRING* vr$8317 = fb_StrAllocTempDescZEx( (uint8*)"lowp", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8317, 0 );
      }
      goto label$9678;
      label$9912:;
      {
       FBSTRING* vr$8318 = fb_StrAllocTempDescZEx( (uint8*)"low-value", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8318, 0 );
      }
      goto label$9678;
      label$9913:;
      {
       FBSTRING* vr$8319 = fb_StrAllocTempDescZEx( (uint8*)"low-values", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8319, 0 );
      }
      goto label$9678;
      label$9914:;
      {
       FBSTRING* vr$8320 = fb_StrAllocTempDescZEx( (uint8*)"lpad", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8320, 0 );
      }
      goto label$9678;
      label$9915:;
      {
       FBSTRING* vr$8321 = fb_StrAllocTempDescZEx( (uint8*)"lpos", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8321, 0 );
      }
      goto label$9678;
      label$9916:;
      {
       FBSTRING* vr$8322 = fb_StrAllocTempDescZEx( (uint8*)"lprint", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8322, 0 );
      }
      goto label$9678;
      label$9917:;
      {
       FBSTRING* vr$8323 = fb_StrAllocTempDescZEx( (uint8*)"lset", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8323, 0 );
      }
      goto label$9678;
      label$9918:;
      {
       FBSTRING* vr$8324 = fb_StrAllocTempDescZEx( (uint8*)"luminance", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8324, 0 );
      }
      goto label$9678;
      label$9919:;
      {
       FBSTRING* vr$8325 = fb_StrAllocTempDescZEx( (uint8*)"m", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$8325, 0 );
      }
      goto label$9678;
      label$9920:;
      {
       FBSTRING* vr$8326 = fb_StrAllocTempDescZEx( (uint8*)"m_2_pi", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8326, 0 );
      }
      goto label$9678;
      label$9921:;
      {
       FBSTRING* vr$8327 = fb_StrAllocTempDescZEx( (uint8*)"m_2_sqrtpi", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8327, 0 );
      }
      goto label$9678;
      label$9922:;
      {
       FBSTRING* vr$8328 = fb_StrAllocTempDescZEx( (uint8*)"m_4_pi", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8328, 0 );
      }
      goto label$9678;
      label$9923:;
      {
       FBSTRING* vr$8329 = fb_StrAllocTempDescZEx( (uint8*)"macro", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8329, 0 );
      }
      goto label$9678;
      label$9924:;
      {
       FBSTRING* vr$8330 = fb_StrAllocTempDescZEx( (uint8*)"magnet", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8330, 0 );
      }
      goto label$9678;
      label$9925:;
      {
       FBSTRING* vr$8331 = fb_StrAllocTempDescZEx( (uint8*)"main", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8331, 0 );
      }
      goto label$9678;
      label$9926:;
      {
       FBSTRING* vr$8332 = fb_StrAllocTempDescZEx( (uint8*)"main_image", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8332, 0 );
      }
      goto label$9678;
      label$9927:;
      {
       FBSTRING* vr$8333 = fb_StrAllocTempDescZEx( (uint8*)"mainImage", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8333, 0 );
      }
      goto label$9678;
      label$9928:;
      {
       FBSTRING* vr$8334 = fb_StrAllocTempDescZEx( (uint8*)"major_radius", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8334, 0 );
      }
      goto label$9678;
      label$9929:;
      {
       FBSTRING* vr$8335 = fb_StrAllocTempDescZEx( (uint8*)"mandel", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8335, 0 );
      }
      goto label$9678;
      label$9930:;
      {
       FBSTRING* vr$8336 = fb_StrAllocTempDescZEx( (uint8*)"map", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8336, 0 );
      }
      goto label$9678;
      label$9931:;
      {
       FBSTRING* vr$8337 = fb_StrAllocTempDescZEx( (uint8*)"map_type", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8337, 0 );
      }
      goto label$9678;
      label$9932:;
      {
       FBSTRING* vr$8338 = fb_StrAllocTempDescZEx( (uint8*)"marble", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8338, 0 );
      }
      goto label$9678;
      label$9933:;
      {
       FBSTRING* vr$8339 = fb_StrAllocTempDescZEx( (uint8*)"mat2", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8339, 0 );
      }
      goto label$9678;
      label$9934:;
      {
       FBSTRING* vr$8340 = fb_StrAllocTempDescZEx( (uint8*)"mat2x2", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8340, 0 );
      }
      goto label$9678;
      label$9679:;
      static const void* tmp$5318[256ll] = {
       &&label$9680,
       &&label$9681,
       &&label$9682,
       &&label$9683,
       &&label$9684,
       &&label$9685,
       &&label$9686,
       &&label$9687,
       &&label$9688,
       &&label$9689,
       &&label$9690,
       &&label$9691,
       &&label$9692,
       &&label$9693,
       &&label$9694,
       &&label$9695,
       &&label$9696,
       &&label$9697,
       &&label$9698,
       &&label$9699,
       &&label$9700,
       &&label$9701,
       &&label$9702,
       &&label$9703,
       &&label$9704,
       &&label$9705,
       &&label$9706,
       &&label$9678,
       &&label$9707,
       &&label$9708,
       &&label$9709,
       &&label$9710,
       &&label$9711,
       &&label$9712,
       &&label$9713,
       &&label$9714,
       &&label$9715,
       &&label$9716,
       &&label$9717,
       &&label$9718,
       &&label$9719,
       &&label$9720,
       &&label$9721,
       &&label$9722,
       &&label$9723,
       &&label$9724,
       &&label$9725,
       &&label$9726,
       &&label$9727,
       &&label$9728,
       &&label$9729,
       &&label$9730,
       &&label$9731,
       &&label$9732,
       &&label$9733,
       &&label$9734,
       &&label$9735,
       &&label$9736,
       &&label$9737,
       &&label$9738,
       &&label$9739,
       &&label$9740,
       &&label$9741,
       &&label$9742,
       &&label$9743,
       &&label$9744,
       &&label$9745,
       &&label$9746,
       &&label$9747,
       &&label$9748,
       &&label$9749,
       &&label$9750,
       &&label$9751,
       &&label$9752,
       &&label$9753,
       &&label$9754,
       &&label$9755,
       &&label$9756,
       &&label$9757,
       &&label$9758,
       &&label$9759,
       &&label$9760,
       &&label$9761,
       &&label$9762,
       &&label$9763,
       &&label$9764,
       &&label$9765,
       &&label$9766,
       &&label$9767,
       &&label$9768,
       &&label$9769,
       &&label$9770,
       &&label$9771,
       &&label$9772,
       &&label$9773,
       &&label$9774,
       &&label$9775,
       &&label$9776,
       &&label$9777,
       &&label$9778,
       &&label$9779,
       &&label$9780,
       &&label$9781,
       &&label$9782,
       &&label$9783,
       &&label$9784,
       &&label$9785,
       &&label$9786,
       &&label$9787,
       &&label$9788,
       &&label$9789,
       &&label$9790,
       &&label$9791,
       &&label$9792,
       &&label$9793,
       &&label$9794,
       &&label$9795,
       &&label$9796,
       &&label$9797,
       &&label$9798,
       &&label$9799,
       &&label$9800,
       &&label$9801,
       &&label$9802,
       &&label$9803,
       &&label$9804,
       &&label$9805,
       &&label$9806,
       &&label$9807,
       &&label$9808,
       &&label$9809,
       &&label$9810,
       &&label$9811,
       &&label$9812,
       &&label$9813,
       &&label$9814,
       &&label$9815,
       &&label$9816,
       &&label$9817,
       &&label$9818,
       &&label$9819,
       &&label$9820,
       &&label$9821,
       &&label$9822,
       &&label$9823,
       &&label$9824,
       &&label$9825,
       &&label$9826,
       &&label$9827,
       &&label$9828,
       &&label$9829,
       &&label$9830,
       &&label$9831,
       &&label$9832,
       &&label$9833,
       &&label$9834,
       &&label$9835,
       &&label$9836,
       &&label$9837,
       &&label$9838,
       &&label$9839,
       &&label$9840,
       &&label$9841,
       &&label$9842,
       &&label$9843,
       &&label$9844,
       &&label$9845,
       &&label$9846,
       &&label$9847,
       &&label$9848,
       &&label$9849,
       &&label$9850,
       &&label$9851,
       &&label$9852,
       &&label$9853,
       &&label$9854,
       &&label$9855,
       &&label$9856,
       &&label$9857,
       &&label$9858,
       &&label$9859,
       &&label$9860,
       &&label$9861,
       &&label$9862,
       &&label$9863,
       &&label$9864,
       &&label$9865,
       &&label$9866,
       &&label$9867,
       &&label$9868,
       &&label$9869,
       &&label$9870,
       &&label$9871,
       &&label$9872,
       &&label$9873,
       &&label$9874,
       &&label$9875,
       &&label$9876,
       &&label$9877,
       &&label$9878,
       &&label$9879,
       &&label$9880,
       &&label$9881,
       &&label$9882,
       &&label$9883,
       &&label$9884,
       &&label$9885,
       &&label$9886,
       &&label$9887,
       &&label$9888,
       &&label$9889,
       &&label$9890,
       &&label$9891,
       &&label$9892,
       &&label$9893,
       &&label$9894,
       &&label$9895,
       &&label$9896,
       &&label$9897,
       &&label$9898,
       &&label$9899,
       &&label$9900,
       &&label$9901,
       &&label$9902,
       &&label$9903,
       &&label$9904,
       &&label$9905,
       &&label$9906,
       &&label$9907,
       &&label$9908,
       &&label$9909,
       &&label$9910,
       &&label$9911,
       &&label$9912,
       &&label$9913,
       &&label$9914,
       &&label$9915,
       &&label$9916,
       &&label$9917,
       &&label$9918,
       &&label$9919,
       &&label$9920,
       &&label$9921,
       &&label$9922,
       &&label$9923,
       &&label$9924,
       &&label$9925,
       &&label$9926,
       &&label$9927,
       &&label$9928,
       &&label$9929,
       &&label$9930,
       &&label$9931,
       &&label$9932,
       &&label$9933,
       &&label$9934,
      };
      if( TMP$3761$6 > 255ull ) goto label$9678;
      goto *tmp$5318[TMP$3761$6 - 0ull];
      label$9678:;
     }
    }
    goto label$9040;
    label$9935:;
    {
     {
      uint64 TMP$4007$6;
      TMP$4007$6 = ((uint64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394968ll) ));
      goto label$9937;
      label$9938:;
      {
       FBSTRING* vr$8342 = fb_StrAllocTempDescZEx( (uint8*)"mat2x3", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8342, 0 );
      }
      goto label$9936;
      label$9939:;
      {
       FBSTRING* vr$8343 = fb_StrAllocTempDescZEx( (uint8*)"mat2x4", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8343, 0 );
      }
      goto label$9936;
      label$9940:;
      {
       FBSTRING* vr$8344 = fb_StrAllocTempDescZEx( (uint8*)"mat3", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8344, 0 );
      }
      goto label$9936;
      label$9941:;
      {
       FBSTRING* vr$8345 = fb_StrAllocTempDescZEx( (uint8*)"mat3x2", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8345, 0 );
      }
      goto label$9936;
      label$9942:;
      {
       FBSTRING* vr$8346 = fb_StrAllocTempDescZEx( (uint8*)"mat3x3", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8346, 0 );
      }
      goto label$9936;
      label$9943:;
      {
       FBSTRING* vr$8347 = fb_StrAllocTempDescZEx( (uint8*)"mat3x4", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8347, 0 );
      }
      goto label$9936;
      label$9944:;
      {
       FBSTRING* vr$8348 = fb_StrAllocTempDescZEx( (uint8*)"mat4", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8348, 0 );
      }
      goto label$9936;
      label$9945:;
      {
       FBSTRING* vr$8349 = fb_StrAllocTempDescZEx( (uint8*)"mat4x2", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8349, 0 );
      }
      goto label$9936;
      label$9946:;
      {
       FBSTRING* vr$8350 = fb_StrAllocTempDescZEx( (uint8*)"mat4x3", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8350, 0 );
      }
      goto label$9936;
      label$9947:;
      {
       FBSTRING* vr$8351 = fb_StrAllocTempDescZEx( (uint8*)"mat4x4", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8351, 0 );
      }
      goto label$9936;
      label$9948:;
      {
       FBSTRING* vr$8352 = fb_StrAllocTempDescZEx( (uint8*)"material", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8352, 0 );
      }
      goto label$9936;
      label$9949:;
      {
       FBSTRING* vr$8353 = fb_StrAllocTempDescZEx( (uint8*)"material_map", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8353, 0 );
      }
      goto label$9936;
      label$9950:;
      {
       FBSTRING* vr$8354 = fb_StrAllocTempDescZEx( (uint8*)"matrix", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8354, 0 );
      }
      goto label$9936;
      label$9951:;
      {
       FBSTRING* vr$8355 = fb_StrAllocTempDescZEx( (uint8*)"max", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8355, 0 );
      }
      goto label$9936;
      label$9952:;
      {
       FBSTRING* vr$8356 = fb_StrAllocTempDescZEx( (uint8*)"max_extent", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8356, 0 );
      }
      goto label$9936;
      label$9953:;
      {
       FBSTRING* vr$8357 = fb_StrAllocTempDescZEx( (uint8*)"max_gradient", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8357, 0 );
      }
      goto label$9936;
      label$9954:;
      {
       FBSTRING* vr$8358 = fb_StrAllocTempDescZEx( (uint8*)"max_intersections", 17ll );
       fb_PrintString( 1, (FBSTRING*)vr$8358, 0 );
      }
      goto label$9936;
      label$9955:;
      {
       FBSTRING* vr$8359 = fb_StrAllocTempDescZEx( (uint8*)"max_iteration", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8359, 0 );
      }
      goto label$9936;
      label$9956:;
      {
       FBSTRING* vr$8360 = fb_StrAllocTempDescZEx( (uint8*)"max_sample", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8360, 0 );
      }
      goto label$9936;
      label$9957:;
      {
       FBSTRING* vr$8361 = fb_StrAllocTempDescZEx( (uint8*)"max_trace", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8361, 0 );
      }
      goto label$9936;
      label$9958:;
      {
       FBSTRING* vr$8362 = fb_StrAllocTempDescZEx( (uint8*)"max_trace_level", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$8362, 0 );
      }
      goto label$9936;
      label$9959:;
      {
       FBSTRING* vr$8363 = fb_StrAllocTempDescZEx( (uint8*)"m_e", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8363, 0 );
      }
      goto label$9936;
      label$9960:;
      {
       FBSTRING* vr$8364 = fb_StrAllocTempDescZEx( (uint8*)"media", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8364, 0 );
      }
      goto label$9936;
      label$9961:;
      {
       FBSTRING* vr$8365 = fb_StrAllocTempDescZEx( (uint8*)"media_attenuation", 17ll );
       fb_PrintString( 1, (FBSTRING*)vr$8365, 0 );
      }
      goto label$9936;
      label$9962:;
      {
       FBSTRING* vr$8366 = fb_StrAllocTempDescZEx( (uint8*)"media_interaction", 17ll );
       fb_PrintString( 1, (FBSTRING*)vr$8366, 0 );
      }
      goto label$9936;
      label$9963:;
      {
       FBSTRING* vr$8367 = fb_StrAllocTempDescZEx( (uint8*)"mediump", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8367, 0 );
      }
      goto label$9936;
      label$9964:;
      {
       FBSTRING* vr$8368 = fb_StrAllocTempDescZEx( (uint8*)"memory", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8368, 0 );
      }
      goto label$9936;
      label$9965:;
      {
       FBSTRING* vr$8369 = fb_StrAllocTempDescZEx( (uint8*)"memory_size", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8369, 0 );
      }
      goto label$9936;
      label$9966:;
      {
       FBSTRING* vr$8370 = fb_StrAllocTempDescZEx( (uint8*)"merge", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8370, 0 );
      }
      goto label$9936;
      label$9967:;
      {
       FBSTRING* vr$8371 = fb_StrAllocTempDescZEx( (uint8*)"mesh", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8371, 0 );
      }
      goto label$9936;
      label$9968:;
      {
       FBSTRING* vr$8372 = fb_StrAllocTempDescZEx( (uint8*)"mesh2", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8372, 0 );
      }
      goto label$9936;
      label$9969:;
      {
       FBSTRING* vr$8373 = fb_StrAllocTempDescZEx( (uint8*)"message", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8373, 0 );
      }
      goto label$9936;
      label$9970:;
      {
       FBSTRING* vr$8374 = fb_StrAllocTempDescZEx( (uint8*)"metaclass", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8374, 0 );
      }
      goto label$9936;
      label$9971:;
      {
       FBSTRING* vr$8375 = fb_StrAllocTempDescZEx( (uint8*)"meta_hint", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8375, 0 );
      }
      goto label$9936;
      label$9972:;
      {
       FBSTRING* vr$8376 = fb_StrAllocTempDescZEx( (uint8*)"metallic", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8376, 0 );
      }
      goto label$9936;
      label$9973:;
      {
       FBSTRING* vr$8377 = fb_StrAllocTempDescZEx( (uint8*)"method", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8377, 0 );
      }
      goto label$9936;
      label$9974:;
      {
       FBSTRING* vr$8378 = fb_StrAllocTempDescZEx( (uint8*)"method-id", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8378, 0 );
      }
      goto label$9936;
      label$9975:;
      {
       FBSTRING* vr$8379 = fb_StrAllocTempDescZEx( (uint8*)"metric", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8379, 0 );
      }
      goto label$9936;
      label$9976:;
      {
       FBSTRING* vr$8380 = fb_StrAllocTempDescZEx( (uint8*)"microfacet", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8380, 0 );
      }
      goto label$9936;
      label$9977:;
      {
       FBSTRING* vr$8381 = fb_StrAllocTempDescZEx( (uint8*)"mid", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8381, 0 );
      }
      goto label$9936;
      label$9978:;
      {
       FBSTRING* vr$8382 = fb_StrAllocTempDescZEx( (uint8*)"min", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8382, 0 );
      }
      goto label$9936;
      label$9979:;
      {
       FBSTRING* vr$8383 = fb_StrAllocTempDescZEx( (uint8*)"min_extent", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8383, 0 );
      }
      goto label$9936;
      label$9980:;
      {
       FBSTRING* vr$8384 = fb_StrAllocTempDescZEx( (uint8*)"minimum_reuse", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8384, 0 );
      }
      goto label$9936;
      label$9981:;
      {
       FBSTRING* vr$8385 = fb_StrAllocTempDescZEx( (uint8*)"minute", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8385, 0 );
      }
      goto label$9936;
      label$9982:;
      {
       FBSTRING* vr$8386 = fb_StrAllocTempDescZEx( (uint8*)"mkd", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8386, 0 );
      }
      goto label$9936;
      label$9983:;
      {
       FBSTRING* vr$8387 = fb_StrAllocTempDescZEx( (uint8*)"mkdir", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8387, 0 );
      }
      goto label$9936;
      label$9984:;
      {
       FBSTRING* vr$8388 = fb_StrAllocTempDescZEx( (uint8*)"mki", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8388, 0 );
      }
      goto label$9936;
      label$9985:;
      {
       FBSTRING* vr$8389 = fb_StrAllocTempDescZEx( (uint8*)"mks", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8389, 0 );
      }
      goto label$9936;
      label$9986:;
      {
       FBSTRING* vr$8390 = fb_StrAllocTempDescZEx( (uint8*)"M_LN", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8390, 0 );
      }
      goto label$9936;
      label$9987:;
      {
       FBSTRING* vr$8391 = fb_StrAllocTempDescZEx( (uint8*)"M_LN2", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8391, 0 );
      }
      goto label$9936;
      label$9988:;
      {
       FBSTRING* vr$8392 = fb_StrAllocTempDescZEx( (uint8*)"M_LOG10E", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8392, 0 );
      }
      goto label$9936;
      label$9989:;
      {
       FBSTRING* vr$8393 = fb_StrAllocTempDescZEx( (uint8*)"M_LOG2E", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8393, 0 );
      }
      goto label$9936;
      label$9990:;
      {
       FBSTRING* vr$8394 = fb_StrAllocTempDescZEx( (uint8*)"mod", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8394, 0 );
      }
      goto label$9936;
      label$9991:;
      {
       FBSTRING* vr$8395 = fb_StrAllocTempDescZEx( (uint8*)"mode", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8395, 0 );
      }
      goto label$9936;
      label$9992:;
      {
       FBSTRING* vr$8396 = fb_StrAllocTempDescZEx( (uint8*)"modules", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8396, 0 );
      }
      goto label$9936;
      label$9993:;
      {
       FBSTRING* vr$8397 = fb_StrAllocTempDescZEx( (uint8*)"month", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8397, 0 );
      }
      goto label$9936;
      label$9994:;
      {
       FBSTRING* vr$8398 = fb_StrAllocTempDescZEx( (uint8*)"more-labels", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8398, 0 );
      }
      goto label$9936;
      label$9995:;
      {
       FBSTRING* vr$8399 = fb_StrAllocTempDescZEx( (uint8*)"mortar", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8399, 0 );
      }
      goto label$9936;
      label$9996:;
      {
       FBSTRING* vr$8400 = fb_StrAllocTempDescZEx( (uint8*)"motor", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8400, 0 );
      }
      goto label$9936;
      label$9997:;
      {
       FBSTRING* vr$8401 = fb_StrAllocTempDescZEx( (uint8*)"move", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8401, 0 );
      }
      goto label$9936;
      label$9998:;
      {
       FBSTRING* vr$8402 = fb_StrAllocTempDescZEx( (uint8*)"M_PI", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8402, 0 );
      }
      goto label$9936;
      label$9999:;
      {
       FBSTRING* vr$8403 = fb_StrAllocTempDescZEx( (uint8*)"M_PI_2", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8403, 0 );
      }
      goto label$9936;
      label$10000:;
      {
       FBSTRING* vr$8404 = fb_StrAllocTempDescZEx( (uint8*)"M_PI_4", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8404, 0 );
      }
      goto label$9936;
      label$10001:;
      {
       FBSTRING* vr$8405 = fb_StrAllocTempDescZEx( (uint8*)"M_SQRT", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8405, 0 );
      }
      goto label$9936;
      label$10002:;
      {
       FBSTRING* vr$8406 = fb_StrAllocTempDescZEx( (uint8*)"M_SQRT2", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8406, 0 );
      }
      goto label$9936;
      label$10003:;
      {
       FBSTRING* vr$8407 = fb_StrAllocTempDescZEx( (uint8*)"multiple", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8407, 0 );
      }
      goto label$9936;
      label$10004:;
      {
       FBSTRING* vr$8408 = fb_StrAllocTempDescZEx( (uint8*)"multiply", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8408, 0 );
      }
      goto label$9936;
      label$10005:;
      {
       FBSTRING* vr$8409 = fb_StrAllocTempDescZEx( (uint8*)"n", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$8409, 0 );
      }
      goto label$9936;
      label$10006:;
      {
       FBSTRING* vr$8410 = fb_StrAllocTempDescZEx( (uint8*)"name", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8410, 0 );
      }
      goto label$9936;
      label$10007:;
      {
       FBSTRING* vr$8411 = fb_StrAllocTempDescZEx( (uint8*)"namelist", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8411, 0 );
      }
      goto label$9936;
      label$10008:;
      {
       FBSTRING* vr$8412 = fb_StrAllocTempDescZEx( (uint8*)"native", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8412, 0 );
      }
      goto label$9936;
      label$10009:;
      {
       FBSTRING* vr$8413 = fb_StrAllocTempDescZEx( (uint8*)"native_binary", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8413, 0 );
      }
      goto label$9936;
      label$10010:;
      {
       FBSTRING* vr$8414 = fb_StrAllocTempDescZEx( (uint8*)"natural", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8414, 0 );
      }
      goto label$9936;
      label$10011:;
      {
       FBSTRING* vr$8415 = fb_StrAllocTempDescZEx( (uint8*)"natural_spline", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$8415, 0 );
      }
      goto label$9936;
      label$10012:;
      {
       FBSTRING* vr$8416 = fb_StrAllocTempDescZEx( (uint8*)"nchar", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8416, 0 );
      }
      goto label$9936;
      label$10013:;
      {
       FBSTRING* vr$8417 = fb_StrAllocTempDescZEx( (uint8*)"near", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8417, 0 );
      }
      goto label$9936;
      label$10014:;
      {
       FBSTRING* vr$8418 = fb_StrAllocTempDescZEx( (uint8*)"nearest_count", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8418, 0 );
      }
      goto label$9936;
      label$10015:;
      {
       FBSTRING* vr$8419 = fb_StrAllocTempDescZEx( (uint8*)"negative", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8419, 0 );
      }
      goto label$9936;
      label$10016:;
      {
       FBSTRING* vr$8420 = fb_StrAllocTempDescZEx( (uint8*)"nested_loop", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8420, 0 );
      }
      goto label$9936;
      label$10017:;
      {
       FBSTRING* vr$8421 = fb_StrAllocTempDescZEx( (uint8*)"new", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8421, 0 );
      }
      goto label$9936;
      label$10018:;
      {
       FBSTRING* vr$8422 = fb_StrAllocTempDescZEx( (uint8*)"next", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8422, 0 );
      }
      goto label$9936;
      label$10019:;
      {
       FBSTRING* vr$8423 = fb_StrAllocTempDescZEx( (uint8*)"nil", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8423, 0 );
      }
      goto label$9936;
      label$10020:;
      {
       FBSTRING* vr$8424 = fb_StrAllocTempDescZEx( (uint8*)"no", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8424, 0 );
      }
      goto label$9936;
      label$10021:;
      {
       FBSTRING* vr$8425 = fb_StrAllocTempDescZEx( (uint8*)"no_bump_scale", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8425, 0 );
      }
      goto label$9936;
      label$10022:;
      {
       FBSTRING* vr$8426 = fb_StrAllocTempDescZEx( (uint8*)"no_cache", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8426, 0 );
      }
      goto label$9936;
      label$10023:;
      {
       FBSTRING* vr$8427 = fb_StrAllocTempDescZEx( (uint8*)"no_image", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8427, 0 );
      }
      goto label$9936;
      label$10024:;
      {
       FBSTRING* vr$8428 = fb_StrAllocTempDescZEx( (uint8*)"noise", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8428, 0 );
      }
      goto label$9936;
      label$10025:;
      {
       FBSTRING* vr$8429 = fb_StrAllocTempDescZEx( (uint8*)"noise_generator", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$8429, 0 );
      }
      goto label$9936;
      label$10026:;
      {
       FBSTRING* vr$8430 = fb_StrAllocTempDescZEx( (uint8*)"none", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8430, 0 );
      }
      goto label$9936;
      label$10027:;
      {
       FBSTRING* vr$8431 = fb_StrAllocTempDescZEx( (uint8*)"nonlocal", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8431, 0 );
      }
      goto label$9936;
      label$10028:;
      {
       FBSTRING* vr$8432 = fb_StrAllocTempDescZEx( (uint8*)"noperspective", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8432, 0 );
      }
      goto label$9936;
      label$10029:;
      {
       FBSTRING* vr$8433 = fb_StrAllocTempDescZEx( (uint8*)"no_reflection", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8433, 0 );
      }
      goto label$9936;
      label$10030:;
      {
       FBSTRING* vr$8434 = fb_StrAllocTempDescZEx( (uint8*)"normal", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8434, 0 );
      }
      goto label$9936;
      label$10031:;
      {
       FBSTRING* vr$8435 = fb_StrAllocTempDescZEx( (uint8*)"normal_indices", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$8435, 0 );
      }
      goto label$9936;
      label$10032:;
      {
       FBSTRING* vr$8436 = fb_StrAllocTempDescZEx( (uint8*)"normalize", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8436, 0 );
      }
      goto label$9936;
      label$10033:;
      {
       FBSTRING* vr$8437 = fb_StrAllocTempDescZEx( (uint8*)"normal_map", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8437, 0 );
      }
      goto label$9936;
      label$10034:;
      {
       FBSTRING* vr$8438 = fb_StrAllocTempDescZEx( (uint8*)"normal_vectors", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$8438, 0 );
      }
      goto label$9936;
      label$10035:;
      {
       FBSTRING* vr$8439 = fb_StrAllocTempDescZEx( (uint8*)"no_shadow", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8439, 0 );
      }
      goto label$9936;
      label$10036:;
      {
       FBSTRING* vr$8440 = fb_StrAllocTempDescZEx( (uint8*)"nostackframe", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8440, 0 );
      }
      goto label$9936;
      label$10037:;
      {
       FBSTRING* vr$8441 = fb_StrAllocTempDescZEx( (uint8*)"not", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8441, 0 );
      }
      goto label$9936;
      label$10038:;
      {
       FBSTRING* vr$8442 = fb_StrAllocTempDescZEx( (uint8*)"noteq", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8442, 0 );
      }
      goto label$9936;
      label$10039:;
      {
       FBSTRING* vr$8443 = fb_StrAllocTempDescZEx( (uint8*)"null", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8443, 0 );
      }
      goto label$9936;
      label$10040:;
      {
       FBSTRING* vr$8444 = fb_StrAllocTempDescZEx( (uint8*)"nulls", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8444, 0 );
      }
      goto label$9936;
      label$10041:;
      {
       FBSTRING* vr$8445 = fb_StrAllocTempDescZEx( (uint8*)"number", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8445, 1 );
      }
      goto label$9936;
      label$10042:;
      {
       FBSTRING* vr$8446 = fb_StrAllocTempDescZEx( (uint8*)"number_of_waves", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$8446, 0 );
      }
      goto label$9936;
      label$10043:;
      {
       FBSTRING* vr$8447 = fb_StrAllocTempDescZEx( (uint8*)"numeric", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8447, 0 );
      }
      goto label$9936;
      label$10044:;
      {
       FBSTRING* vr$8448 = fb_StrAllocTempDescZEx( (uint8*)"numeric-edited", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$8448, 0 );
      }
      goto label$9936;
      label$10045:;
      {
       FBSTRING* vr$8449 = fb_StrAllocTempDescZEx( (uint8*)"o", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$8449, 0 );
      }
      goto label$9936;
      label$10046:;
      {
       FBSTRING* vr$8450 = fb_StrAllocTempDescZEx( (uint8*)"object", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8450, 0 );
      }
      goto label$9936;
      label$10047:;
      {
       FBSTRING* vr$8451 = fb_StrAllocTempDescZEx( (uint8*)"object-computer", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$8451, 0 );
      }
      goto label$9936;
      label$10048:;
      {
       FBSTRING* vr$8452 = fb_StrAllocTempDescZEx( (uint8*)"occurs", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8452, 0 );
      }
      goto label$9936;
      label$10049:;
      {
       FBSTRING* vr$8453 = fb_StrAllocTempDescZEx( (uint8*)"oct", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8453, 0 );
      }
      goto label$9936;
      label$10050:;
      {
       FBSTRING* vr$8454 = fb_StrAllocTempDescZEx( (uint8*)"octaves", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8454, 0 );
      }
      goto label$9936;
      label$10051:;
      {
       FBSTRING* vr$8455 = fb_StrAllocTempDescZEx( (uint8*)"octet_length", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8455, 0 );
      }
      goto label$9936;
      label$10052:;
      {
       FBSTRING* vr$8456 = fb_StrAllocTempDescZEx( (uint8*)"of", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8456, 0 );
      }
      goto label$9936;
      label$10053:;
      {
       FBSTRING* vr$8457 = fb_StrAllocTempDescZEx( (uint8*)"off", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8457, 0 );
      }
      goto label$9936;
      label$10054:;
      {
       FBSTRING* vr$8458 = fb_StrAllocTempDescZEx( (uint8*)"offset", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8458, 0 );
      }
      goto label$9936;
      label$10055:;
      {
       FBSTRING* vr$8459 = fb_StrAllocTempDescZEx( (uint8*)"oldfpccall", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8459, 0 );
      }
      goto label$9936;
      label$10056:;
      {
       FBSTRING* vr$8460 = fb_StrAllocTempDescZEx( (uint8*)"omega", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8460, 0 );
      }
      goto label$9936;
      label$10057:;
      {
       FBSTRING* vr$8461 = fb_StrAllocTempDescZEx( (uint8*)"omitted", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8461, 0 );
      }
      goto label$9936;
      label$10058:;
      {
       FBSTRING* vr$8462 = fb_StrAllocTempDescZEx( (uint8*)"omnimax", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8462, 0 );
      }
      goto label$9936;
      label$10059:;
      {
       FBSTRING* vr$8463 = fb_StrAllocTempDescZEx( (uint8*)"on", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8463, 0 );
      }
      goto label$9936;
      label$10060:;
      {
       FBSTRING* vr$8464 = fb_StrAllocTempDescZEx( (uint8*)"once", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8464, 0 );
      }
      goto label$9936;
      label$10061:;
      {
       FBSTRING* vr$8465 = fb_StrAllocTempDescZEx( (uint8*)"onion", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8465, 0 );
      }
      goto label$9936;
      label$10062:;
      {
       FBSTRING* vr$8466 = fb_StrAllocTempDescZEx( (uint8*)"open", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8466, 0 );
      }
      goto label$9936;
      label$10063:;
      {
       FBSTRING* vr$8467 = fb_StrAllocTempDescZEx( (uint8*)"operator", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8467, 0 );
      }
      goto label$9936;
      label$10064:;
      {
       FBSTRING* vr$8468 = fb_StrAllocTempDescZEx( (uint8*)"option", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8468, 0 );
      }
      goto label$9936;
      label$10065:;
      {
       FBSTRING* vr$8469 = fb_StrAllocTempDescZEx( (uint8*)"optional", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8469, 0 );
      }
      goto label$9936;
      label$10066:;
      {
       FBSTRING* vr$8470 = fb_StrAllocTempDescZEx( (uint8*)"options", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8470, 0 );
      }
      goto label$9936;
      label$10067:;
      {
       FBSTRING* vr$8471 = fb_StrAllocTempDescZEx( (uint8*)"or", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8471, 0 );
      }
      goto label$9936;
      label$10068:;
      {
       FBSTRING* vr$8472 = fb_StrAllocTempDescZEx( (uint8*)"or_bits", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8472, 0 );
      }
      goto label$9936;
      label$10069:;
      {
       FBSTRING* vr$8473 = fb_StrAllocTempDescZEx( (uint8*)"order", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8473, 0 );
      }
      goto label$9936;
      label$10070:;
      {
       FBSTRING* vr$8474 = fb_StrAllocTempDescZEx( (uint8*)"ordered", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8474, 0 );
      }
      goto label$9936;
      label$10071:;
      {
       FBSTRING* vr$8475 = fb_StrAllocTempDescZEx( (uint8*)"oren_nayar", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8475, 0 );
      }
      goto label$9936;
      label$10072:;
      {
       FBSTRING* vr$8476 = fb_StrAllocTempDescZEx( (uint8*)"organization", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8476, 0 );
      }
      goto label$9936;
      label$10073:;
      {
       FBSTRING* vr$8477 = fb_StrAllocTempDescZEx( (uint8*)"orient", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8477, 0 );
      }
      goto label$9936;
      label$10074:;
      {
       FBSTRING* vr$8478 = fb_StrAllocTempDescZEx( (uint8*)"orientation", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8478, 0 );
      }
      goto label$9936;
      label$10075:;
      {
       FBSTRING* vr$8479 = fb_StrAllocTempDescZEx( (uint8*)"orthographic", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8479, 0 );
      }
      goto label$9936;
      label$10076:;
      {
       FBSTRING* vr$8480 = fb_StrAllocTempDescZEx( (uint8*)"other", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8480, 0 );
      }
      goto label$9936;
      label$10077:;
      {
       FBSTRING* vr$8481 = fb_StrAllocTempDescZEx( (uint8*)"out", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8481, 0 );
      }
      goto label$9936;
      label$10078:;
      {
       FBSTRING* vr$8482 = fb_StrAllocTempDescZEx( (uint8*)"outer", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8482, 0 );
      }
      goto label$9936;
      label$10079:;
      {
       FBSTRING* vr$8483 = fb_StrAllocTempDescZEx( (uint8*)"output", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8483, 0 );
      }
      goto label$9936;
      label$10080:;
      {
       FBSTRING* vr$8484 = fb_StrAllocTempDescZEx( (uint8*)"overflow", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8484, 0 );
      }
      goto label$9936;
      label$10081:;
      {
       FBSTRING* vr$8485 = fb_StrAllocTempDescZEx( (uint8*)"overlaps", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8485, 0 );
      }
      goto label$9936;
      label$10082:;
      {
       FBSTRING* vr$8486 = fb_StrAllocTempDescZEx( (uint8*)"override", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8486, 0 );
      }
      goto label$9936;
      label$10083:;
      {
       FBSTRING* vr$8487 = fb_StrAllocTempDescZEx( (uint8*)"p", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$8487, 0 );
      }
      goto label$9936;
      label$10084:;
      {
       FBSTRING* vr$8488 = fb_StrAllocTempDescZEx( (uint8*)"packed", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8488, 0 );
      }
      goto label$9936;
      label$10085:;
      {
       FBSTRING* vr$8489 = fb_StrAllocTempDescZEx( (uint8*)"packed-decimal", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$8489, 0 );
      }
      goto label$9936;
      label$10086:;
      {
       FBSTRING* vr$8490 = fb_StrAllocTempDescZEx( (uint8*)"padding", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8490, 0 );
      }
      goto label$9936;
      label$10087:;
      {
       FBSTRING* vr$8491 = fb_StrAllocTempDescZEx( (uint8*)"page", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8491, 0 );
      }
      goto label$9936;
      label$10088:;
      {
       FBSTRING* vr$8492 = fb_StrAllocTempDescZEx( (uint8*)"page-counter", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8492, 0 );
      }
      goto label$9936;
      label$10089:;
      {
       FBSTRING* vr$8493 = fb_StrAllocTempDescZEx( (uint8*)"paint", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8493, 0 );
      }
      goto label$9936;
      label$10090:;
      {
       FBSTRING* vr$8494 = fb_StrAllocTempDescZEx( (uint8*)"palette", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8494, 0 );
      }
      goto label$9936;
      label$10091:;
      {
       FBSTRING* vr$8495 = fb_StrAllocTempDescZEx( (uint8*)"panoramic", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8495, 0 );
      }
      goto label$9936;
      label$10092:;
      {
       FBSTRING* vr$8496 = fb_StrAllocTempDescZEx( (uint8*)"parallel", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8496, 0 );
      }
      goto label$9936;
      label$10093:;
      {
       FBSTRING* vr$8497 = fb_StrAllocTempDescZEx( (uint8*)"parameter", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8497, 0 );
      }
      goto label$9936;
      label$10094:;
      {
       FBSTRING* vr$8498 = fb_StrAllocTempDescZEx( (uint8*)"parametric", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8498, 0 );
      }
      goto label$9936;
      label$10095:;
      {
       FBSTRING* vr$8499 = fb_StrAllocTempDescZEx( (uint8*)"partition", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8499, 0 );
      }
      goto label$9936;
      label$10096:;
      {
       FBSTRING* vr$8500 = fb_StrAllocTempDescZEx( (uint8*)"pascal", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8500, 0 );
      }
      goto label$9936;
      label$10097:;
      {
       FBSTRING* vr$8501 = fb_StrAllocTempDescZEx( (uint8*)"pass", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8501, 0 );
      }
      goto label$9936;
      label$10098:;
      {
       FBSTRING* vr$8502 = fb_StrAllocTempDescZEx( (uint8*)"pass_through", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8502, 0 );
      }
      goto label$9936;
      label$10099:;
      {
       FBSTRING* vr$8503 = fb_StrAllocTempDescZEx( (uint8*)"password", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8503, 0 );
      }
      goto label$9936;
      label$10100:;
      {
       FBSTRING* vr$8504 = fb_StrAllocTempDescZEx( (uint8*)"pattern", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8504, 0 );
      }
      goto label$9936;
      label$10101:;
      {
       FBSTRING* vr$8505 = fb_StrAllocTempDescZEx( (uint8*)"pause", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8505, 0 );
      }
      goto label$9936;
      label$10102:;
      {
       FBSTRING* vr$8506 = fb_StrAllocTempDescZEx( (uint8*)"pcopy", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8506, 0 );
      }
      goto label$9936;
      label$10103:;
      {
       FBSTRING* vr$8507 = fb_StrAllocTempDescZEx( (uint8*)"peek", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8507, 0 );
      }
      goto label$9936;
      label$10104:;
      {
       FBSTRING* vr$8508 = fb_StrAllocTempDescZEx( (uint8*)"pen", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8508, 0 );
      }
      goto label$9936;
      label$10105:;
      {
       FBSTRING* vr$8509 = fb_StrAllocTempDescZEx( (uint8*)"perform", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8509, 0 );
      }
      goto label$9936;
      label$10106:;
      {
       FBSTRING* vr$8510 = fb_StrAllocTempDescZEx( (uint8*)"perspective", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8510, 0 );
      }
      goto label$9936;
      label$10107:;
      {
       FBSTRING* vr$8511 = fb_StrAllocTempDescZEx( (uint8*)"pf", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8511, 0 );
      }
      goto label$9936;
      label$10108:;
      {
       FBSTRING* vr$8512 = fb_StrAllocTempDescZEx( (uint8*)"pgm", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8512, 0 );
      }
      goto label$9936;
      label$10109:;
      {
       FBSTRING* vr$8513 = fb_StrAllocTempDescZEx( (uint8*)"ph", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8513, 0 );
      }
      goto label$9936;
      label$10110:;
      {
       FBSTRING* vr$8514 = fb_StrAllocTempDescZEx( (uint8*)"phase", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8514, 0 );
      }
      goto label$9936;
      label$10111:;
      {
       FBSTRING* vr$8515 = fb_StrAllocTempDescZEx( (uint8*)"phong", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8515, 0 );
      }
      goto label$9936;
      label$10112:;
      {
       FBSTRING* vr$8516 = fb_StrAllocTempDescZEx( (uint8*)"phong_size", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8516, 0 );
      }
      goto label$9936;
      label$10113:;
      {
       FBSTRING* vr$8517 = fb_StrAllocTempDescZEx( (uint8*)"photons", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8517, 0 );
      }
      goto label$9936;
      label$10114:;
      {
       FBSTRING* vr$8518 = fb_StrAllocTempDescZEx( (uint8*)"pi", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8518, 0 );
      }
      goto label$9936;
      label$10115:;
      {
       FBSTRING* vr$8519 = fb_StrAllocTempDescZEx( (uint8*)"pic", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8519, 0 );
      }
      goto label$9936;
      label$10116:;
      {
       FBSTRING* vr$8520 = fb_StrAllocTempDescZEx( (uint8*)"picture", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8520, 0 );
      }
      goto label$9936;
      label$10117:;
      {
       FBSTRING* vr$8521 = fb_StrAllocTempDescZEx( (uint8*)"pigment", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8521, 0 );
      }
      goto label$9936;
      label$10118:;
      {
       FBSTRING* vr$8522 = fb_StrAllocTempDescZEx( (uint8*)"pigment_map", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8522, 0 );
      }
      goto label$9936;
      label$10119:;
      {
       FBSTRING* vr$8523 = fb_StrAllocTempDescZEx( (uint8*)"pigment_pattern", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$8523, 0 );
      }
      goto label$9936;
      label$10120:;
      {
       FBSTRING* vr$8524 = fb_StrAllocTempDescZEx( (uint8*)"planar", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8524, 0 );
      }
      goto label$9936;
      label$10121:;
      {
       FBSTRING* vr$8525 = fb_StrAllocTempDescZEx( (uint8*)"plane", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8525, 0 );
      }
      goto label$9936;
      label$10122:;
      {
       FBSTRING* vr$8526 = fb_StrAllocTempDescZEx( (uint8*)"play", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8526, 0 );
      }
      goto label$9936;
      label$10123:;
      {
       FBSTRING* vr$8527 = fb_StrAllocTempDescZEx( (uint8*)"plus", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8527, 0 );
      }
      goto label$9936;
      label$10124:;
      {
       FBSTRING* vr$8528 = fb_StrAllocTempDescZEx( (uint8*)"pmap", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8528, 0 );
      }
      goto label$9936;
      label$10125:;
      {
       FBSTRING* vr$8529 = fb_StrAllocTempDescZEx( (uint8*)"png", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8529, 0 );
      }
      goto label$9936;
      label$10126:;
      {
       FBSTRING* vr$8530 = fb_StrAllocTempDescZEx( (uint8*)"pnoise", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8530, 0 );
      }
      goto label$9936;
      label$10127:;
      {
       FBSTRING* vr$8531 = fb_StrAllocTempDescZEx( (uint8*)"point", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8531, 0 );
      }
      goto label$9936;
      label$10128:;
      {
       FBSTRING* vr$8532 = fb_StrAllocTempDescZEx( (uint8*)"point_at", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8532, 0 );
      }
      goto label$9936;
      label$10129:;
      {
       FBSTRING* vr$8533 = fb_StrAllocTempDescZEx( (uint8*)"pointcloud_get", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$8533, 0 );
      }
      goto label$9936;
      label$10130:;
      {
       FBSTRING* vr$8534 = fb_StrAllocTempDescZEx( (uint8*)"pointcloud_search", 17ll );
       fb_PrintString( 1, (FBSTRING*)vr$8534, 0 );
      }
      goto label$9936;
      label$10131:;
      {
       FBSTRING* vr$8535 = fb_StrAllocTempDescZEx( (uint8*)"pointcloud_write", 16ll );
       fb_PrintString( 1, (FBSTRING*)vr$8535, 0 );
      }
      goto label$9936;
      label$10132:;
      {
       FBSTRING* vr$8536 = fb_StrAllocTempDescZEx( (uint8*)"pointer", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8536, 0 );
      }
      goto label$9936;
      label$10133:;
      {
       FBSTRING* vr$8537 = fb_StrAllocTempDescZEx( (uint8*)"poke", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8537, 0 );
      }
      goto label$9936;
      label$10134:;
      {
       FBSTRING* vr$8538 = fb_StrAllocTempDescZEx( (uint8*)"poly", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8538, 0 );
      }
      goto label$9936;
      label$10135:;
      {
       FBSTRING* vr$8539 = fb_StrAllocTempDescZEx( (uint8*)"polygon", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8539, 0 );
      }
      goto label$9936;
      label$10136:;
      {
       FBSTRING* vr$8540 = fb_StrAllocTempDescZEx( (uint8*)"poly_wave", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8540, 0 );
      }
      goto label$9936;
      label$10137:;
      {
       FBSTRING* vr$8541 = fb_StrAllocTempDescZEx( (uint8*)"pos", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8541, 0 );
      }
      goto label$9936;
      label$10138:;
      {
       FBSTRING* vr$8542 = fb_StrAllocTempDescZEx( (uint8*)"position", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8542, 0 );
      }
      goto label$9936;
      label$10139:;
      {
       FBSTRING* vr$8543 = fb_StrAllocTempDescZEx( (uint8*)"position_b", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8543, 0 );
      }
      goto label$9936;
      label$10140:;
      {
       FBSTRING* vr$8544 = fb_StrAllocTempDescZEx( (uint8*)"position_mb", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8544, 0 );
      }
      goto label$9936;
      label$10141:;
      {
       FBSTRING* vr$8545 = fb_StrAllocTempDescZEx( (uint8*)"positive", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8545, 0 );
      }
      goto label$9936;
      label$10142:;
      {
       FBSTRING* vr$8546 = fb_StrAllocTempDescZEx( (uint8*)"pot", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8546, 0 );
      }
      goto label$9936;
      label$10143:;
      {
       FBSTRING* vr$8547 = fb_StrAllocTempDescZEx( (uint8*)"pow", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8547, 0 );
      }
      goto label$9936;
      label$10144:;
      {
       FBSTRING* vr$8548 = fb_StrAllocTempDescZEx( (uint8*)"ppm", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8548, 0 );
      }
      goto label$9936;
      label$10145:;
      {
       FBSTRING* vr$8549 = fb_StrAllocTempDescZEx( (uint8*)"precision", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8549, 0 );
      }
      goto label$9936;
      label$10146:;
      {
       FBSTRING* vr$8550 = fb_StrAllocTempDescZEx( (uint8*)"precompute", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8550, 0 );
      }
      goto label$9936;
      label$10147:;
      {
       FBSTRING* vr$8551 = fb_StrAllocTempDescZEx( (uint8*)"preset", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8551, 0 );
      }
      goto label$9936;
      label$10148:;
      {
       FBSTRING* vr$8552 = fb_StrAllocTempDescZEx( (uint8*)"pretrace_end", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8552, 0 );
      }
      goto label$9936;
      label$10149:;
      {
       FBSTRING* vr$8553 = fb_StrAllocTempDescZEx( (uint8*)"pretrace_start", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$8553, 0 );
      }
      goto label$9936;
      label$10150:;
      {
       FBSTRING* vr$8554 = fb_StrAllocTempDescZEx( (uint8*)"print", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8554, 0 );
      }
      goto label$9936;
      label$10151:;
      {
       FBSTRING* vr$8555 = fb_StrAllocTempDescZEx( (uint8*)"printf", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8555, 0 );
      }
      goto label$9936;
      label$10152:;
      {
       FBSTRING* vr$8556 = fb_StrAllocTempDescZEx( (uint8*)"printing", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8556, 0 );
      }
      goto label$9936;
      label$10153:;
      {
       FBSTRING* vr$8557 = fb_StrAllocTempDescZEx( (uint8*)"prism", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8557, 0 );
      }
      goto label$9936;
      label$10154:;
      {
       FBSTRING* vr$8558 = fb_StrAllocTempDescZEx( (uint8*)"private", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8558, 0 );
      }
      goto label$9936;
      label$10155:;
      {
       FBSTRING* vr$8559 = fb_StrAllocTempDescZEx( (uint8*)"procedure", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8559, 0 );
      }
      goto label$9936;
      label$10156:;
      {
       FBSTRING* vr$8560 = fb_StrAllocTempDescZEx( (uint8*)"procedure-pointer", 17ll );
       fb_PrintString( 1, (FBSTRING*)vr$8560, 0 );
      }
      goto label$9936;
      label$10157:;
      {
       FBSTRING* vr$8561 = fb_StrAllocTempDescZEx( (uint8*)"procedures", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8561, 0 );
      }
      goto label$9936;
      label$10158:;
      {
       FBSTRING* vr$8562 = fb_StrAllocTempDescZEx( (uint8*)"proceed", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8562, 0 );
      }
      goto label$9936;
      label$10159:;
      {
       FBSTRING* vr$8563 = fb_StrAllocTempDescZEx( (uint8*)"processing", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8563, 0 );
      }
      goto label$9936;
      label$10160:;
      {
       FBSTRING* vr$8564 = fb_StrAllocTempDescZEx( (uint8*)"prod", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8564, 0 );
      }
      goto label$9936;
      label$10161:;
      {
       FBSTRING* vr$8565 = fb_StrAllocTempDescZEx( (uint8*)"program", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8565, 0 );
      }
      goto label$9936;
      label$10162:;
      {
       FBSTRING* vr$8566 = fb_StrAllocTempDescZEx( (uint8*)"program-id", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8566, 0 );
      }
      goto label$9936;
      label$10163:;
      {
       FBSTRING* vr$8567 = fb_StrAllocTempDescZEx( (uint8*)"projected_through", 17ll );
       fb_PrintString( 1, (FBSTRING*)vr$8567, 0 );
      }
      goto label$9936;
      label$10164:;
      {
       FBSTRING* vr$8568 = fb_StrAllocTempDescZEx( (uint8*)"property", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8568, 0 );
      }
      goto label$9936;
      label$10165:;
      {
       FBSTRING* vr$8569 = fb_StrAllocTempDescZEx( (uint8*)"protected", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8569, 0 );
      }
      goto label$9936;
      label$10166:;
      {
       FBSTRING* vr$8570 = fb_StrAllocTempDescZEx( (uint8*)"pset", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8570, 0 );
      }
      goto label$9936;
      label$10167:;
      {
       FBSTRING* vr$8571 = fb_StrAllocTempDescZEx( (uint8*)"psnoise", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8571, 0 );
      }
      goto label$9936;
      label$10168:;
      {
       FBSTRING* vr$8572 = fb_StrAllocTempDescZEx( (uint8*)"ptype", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8572, 0 );
      }
      goto label$9936;
      label$10169:;
      {
       FBSTRING* vr$8573 = fb_StrAllocTempDescZEx( (uint8*)"public", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8573, 0 );
      }
      goto label$9936;
      label$10170:;
      {
       FBSTRING* vr$8574 = fb_StrAllocTempDescZEx( (uint8*)"published", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8574, 0 );
      }
      goto label$9936;
      label$10171:;
      {
       FBSTRING* vr$8575 = fb_StrAllocTempDescZEx( (uint8*)"purge", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8575, 0 );
      }
      goto label$9936;
      label$10172:;
      {
       FBSTRING* vr$8576 = fb_StrAllocTempDescZEx( (uint8*)"put", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8576, 0 );
      }
      goto label$9936;
      label$10173:;
      {
       FBSTRING* vr$8577 = fb_StrAllocTempDescZEx( (uint8*)"pwr", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8577, 0 );
      }
      goto label$9936;
      label$10174:;
      {
       FBSTRING* vr$8578 = fb_StrAllocTempDescZEx( (uint8*)"q", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$8578, 0 );
      }
      goto label$9936;
      label$10175:;
      {
       FBSTRING* vr$8579 = fb_StrAllocTempDescZEx( (uint8*)"quadratic_spline", 16ll );
       fb_PrintString( 1, (FBSTRING*)vr$8579, 0 );
      }
      goto label$9936;
      label$10176:;
      {
       FBSTRING* vr$8580 = fb_StrAllocTempDescZEx( (uint8*)"quadric", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8580, 0 );
      }
      goto label$9936;
      label$10177:;
      {
       FBSTRING* vr$8581 = fb_StrAllocTempDescZEx( (uint8*)"quartic", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8581, 0 );
      }
      goto label$9936;
      label$10178:;
      {
       FBSTRING* vr$8582 = fb_StrAllocTempDescZEx( (uint8*)"quaternion", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8582, 0 );
      }
      goto label$9936;
      label$10179:;
      {
       FBSTRING* vr$8583 = fb_StrAllocTempDescZEx( (uint8*)"queue", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8583, 0 );
      }
      goto label$9936;
      label$10180:;
      {
       FBSTRING* vr$8584 = fb_StrAllocTempDescZEx( (uint8*)"quick_color", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8584, 0 );
      }
      goto label$9936;
      label$10181:;
      {
       FBSTRING* vr$8585 = fb_StrAllocTempDescZEx( (uint8*)"quick_colour", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8585, 0 );
      }
      goto label$9936;
      label$10182:;
      {
       FBSTRING* vr$8586 = fb_StrAllocTempDescZEx( (uint8*)"quilted", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8586, 0 );
      }
      goto label$9936;
      label$10183:;
      {
       FBSTRING* vr$8587 = fb_StrAllocTempDescZEx( (uint8*)"quote", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8587, 0 );
      }
      goto label$9936;
      label$10184:;
      {
       FBSTRING* vr$8588 = fb_StrAllocTempDescZEx( (uint8*)"quotes", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8588, 0 );
      }
      goto label$9936;
      label$10185:;
      {
       FBSTRING* vr$8589 = fb_StrAllocTempDescZEx( (uint8*)"r", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$8589, 0 );
      }
      goto label$9936;
      label$10186:;
      {
       FBSTRING* vr$8590 = fb_StrAllocTempDescZEx( (uint8*)"radial", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8590, 0 );
      }
      goto label$9936;
      label$10187:;
      {
       FBSTRING* vr$8591 = fb_StrAllocTempDescZEx( (uint8*)"radians", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8591, 0 );
      }
      goto label$9936;
      label$10188:;
      {
       FBSTRING* vr$8592 = fb_StrAllocTempDescZEx( (uint8*)"radiosity", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8592, 0 );
      }
      goto label$9936;
      label$10189:;
      {
       FBSTRING* vr$8593 = fb_StrAllocTempDescZEx( (uint8*)"radius", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8593, 0 );
      }
      goto label$9936;
      label$10190:;
      {
       FBSTRING* vr$8594 = fb_StrAllocTempDescZEx( (uint8*)"rainbow", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8594, 0 );
      }
      goto label$9936;
      label$10191:;
      {
       FBSTRING* vr$8595 = fb_StrAllocTempDescZEx( (uint8*)"raise", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8595, 0 );
      }
      goto label$9936;
      label$10192:;
      {
       FBSTRING* vr$8596 = fb_StrAllocTempDescZEx( (uint8*)"ramp_wave", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8596, 0 );
      }
      goto label$9936;
      label$10193:;
      {
       FBSTRING* vr$8597 = fb_StrAllocTempDescZEx( (uint8*)"rand", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8597, 0 );
      }
      goto label$9936;
      label$9937:;
      static const void* tmp$5319[256ll] = {
       &&label$9938,
       &&label$9939,
       &&label$9940,
       &&label$9941,
       &&label$9942,
       &&label$9943,
       &&label$9944,
       &&label$9945,
       &&label$9946,
       &&label$9947,
       &&label$9948,
       &&label$9949,
       &&label$9950,
       &&label$9951,
       &&label$9952,
       &&label$9953,
       &&label$9954,
       &&label$9955,
       &&label$9956,
       &&label$9957,
       &&label$9958,
       &&label$9959,
       &&label$9960,
       &&label$9961,
       &&label$9962,
       &&label$9963,
       &&label$9964,
       &&label$9965,
       &&label$9966,
       &&label$9967,
       &&label$9968,
       &&label$9969,
       &&label$9970,
       &&label$9971,
       &&label$9972,
       &&label$9973,
       &&label$9974,
       &&label$9975,
       &&label$9976,
       &&label$9977,
       &&label$9978,
       &&label$9979,
       &&label$9980,
       &&label$9981,
       &&label$9982,
       &&label$9983,
       &&label$9984,
       &&label$9985,
       &&label$9986,
       &&label$9987,
       &&label$9988,
       &&label$9989,
       &&label$9990,
       &&label$9991,
       &&label$9992,
       &&label$9993,
       &&label$9994,
       &&label$9995,
       &&label$9996,
       &&label$9997,
       &&label$9998,
       &&label$9999,
       &&label$10000,
       &&label$10001,
       &&label$10002,
       &&label$10003,
       &&label$10004,
       &&label$10005,
       &&label$10006,
       &&label$10007,
       &&label$10008,
       &&label$10009,
       &&label$10010,
       &&label$10011,
       &&label$10012,
       &&label$10013,
       &&label$10014,
       &&label$10015,
       &&label$10016,
       &&label$10017,
       &&label$10018,
       &&label$10019,
       &&label$10020,
       &&label$10021,
       &&label$10022,
       &&label$10023,
       &&label$10024,
       &&label$10025,
       &&label$10026,
       &&label$10027,
       &&label$10028,
       &&label$10029,
       &&label$10030,
       &&label$10031,
       &&label$10032,
       &&label$10033,
       &&label$10034,
       &&label$10035,
       &&label$10036,
       &&label$10037,
       &&label$10038,
       &&label$10039,
       &&label$10040,
       &&label$10041,
       &&label$10042,
       &&label$10043,
       &&label$10044,
       &&label$10045,
       &&label$10046,
       &&label$10047,
       &&label$10048,
       &&label$10049,
       &&label$10050,
       &&label$10051,
       &&label$10052,
       &&label$10053,
       &&label$10054,
       &&label$10055,
       &&label$10056,
       &&label$10057,
       &&label$10058,
       &&label$10059,
       &&label$10060,
       &&label$10061,
       &&label$10062,
       &&label$10063,
       &&label$10064,
       &&label$10065,
       &&label$10066,
       &&label$10067,
       &&label$10068,
       &&label$10069,
       &&label$10070,
       &&label$10071,
       &&label$10072,
       &&label$10073,
       &&label$10074,
       &&label$10075,
       &&label$10076,
       &&label$10077,
       &&label$10078,
       &&label$10079,
       &&label$10080,
       &&label$10081,
       &&label$10082,
       &&label$10083,
       &&label$10084,
       &&label$10085,
       &&label$10086,
       &&label$10087,
       &&label$10088,
       &&label$10089,
       &&label$10090,
       &&label$10091,
       &&label$10092,
       &&label$10093,
       &&label$10094,
       &&label$10095,
       &&label$10096,
       &&label$10097,
       &&label$10098,
       &&label$10099,
       &&label$10100,
       &&label$10101,
       &&label$10102,
       &&label$10103,
       &&label$10104,
       &&label$10105,
       &&label$10106,
       &&label$10107,
       &&label$10108,
       &&label$10109,
       &&label$10110,
       &&label$10111,
       &&label$10112,
       &&label$10113,
       &&label$10114,
       &&label$10115,
       &&label$10116,
       &&label$10117,
       &&label$10118,
       &&label$10119,
       &&label$10120,
       &&label$10121,
       &&label$10122,
       &&label$10123,
       &&label$10124,
       &&label$10125,
       &&label$10126,
       &&label$10127,
       &&label$10128,
       &&label$10129,
       &&label$10130,
       &&label$10131,
       &&label$10132,
       &&label$10133,
       &&label$10134,
       &&label$10135,
       &&label$10136,
       &&label$10137,
       &&label$10138,
       &&label$10139,
       &&label$10140,
       &&label$10141,
       &&label$10142,
       &&label$10143,
       &&label$10144,
       &&label$10145,
       &&label$10146,
       &&label$10147,
       &&label$10148,
       &&label$10149,
       &&label$10150,
       &&label$10151,
       &&label$10152,
       &&label$10153,
       &&label$10154,
       &&label$10155,
       &&label$10156,
       &&label$10157,
       &&label$10158,
       &&label$10159,
       &&label$10160,
       &&label$10161,
       &&label$10162,
       &&label$10163,
       &&label$10164,
       &&label$10165,
       &&label$10166,
       &&label$10167,
       &&label$10168,
       &&label$10169,
       &&label$10170,
       &&label$10171,
       &&label$10172,
       &&label$10173,
       &&label$10174,
       &&label$10175,
       &&label$10176,
       &&label$10177,
       &&label$10178,
       &&label$10179,
       &&label$10180,
       &&label$10181,
       &&label$10182,
       &&label$10183,
       &&label$10184,
       &&label$10185,
       &&label$10186,
       &&label$10187,
       &&label$10188,
       &&label$10189,
       &&label$10190,
       &&label$10191,
       &&label$10192,
       &&label$10193,
      };
      if( TMP$4007$6 > 255ull ) goto label$9936;
      goto *tmp$5319[TMP$4007$6 - 0ull];
      label$9936:;
     }
    }
    goto label$9040;
    label$10194:;
    {
     {
      uint64 TMP$4259$6;
      TMP$4259$6 = ((uint64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394888ll) ));
      if( TMP$4259$6 != 0ull ) goto label$10196;
      label$10197:;
      {
       FBSTRING* vr$8599 = fb_StrAllocTempDescZEx( (uint8*)"random", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8599, 0 );
      }
      goto label$10195;
      label$10196:;
      if( TMP$4259$6 != 1ull ) goto label$10198;
      label$10199:;
      {
       FBSTRING* vr$8600 = fb_StrAllocTempDescZEx( (uint8*)"randomize", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8600, 0 );
      }
      goto label$10195;
      label$10198:;
      if( TMP$4259$6 != 2ull ) goto label$10200;
      label$10201:;
      {
       FBSTRING* vr$8601 = fb_StrAllocTempDescZEx( (uint8*)"range", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8601, 0 );
      }
      goto label$10195;
      label$10200:;
      if( TMP$4259$6 != 3ull ) goto label$10202;
      label$10203:;
      {
       FBSTRING* vr$8602 = fb_StrAllocTempDescZEx( (uint8*)"ratio", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8602, 0 );
      }
      goto label$10195;
      label$10202:;
      if( TMP$4259$6 != 4ull ) goto label$10204;
      label$10205:;
      {
       FBSTRING* vr$8603 = fb_StrAllocTempDescZEx( (uint8*)"raytype", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8603, 0 );
      }
      goto label$10195;
      label$10204:;
      if( TMP$4259$6 != 5ull ) goto label$10206;
      label$10207:;
      {
       FBSTRING* vr$8604 = fb_StrAllocTempDescZEx( (uint8*)"rd", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8604, 0 );
      }
      goto label$10195;
      label$10206:;
      if( TMP$4259$6 != 6ull ) goto label$10208;
      label$10209:;
      {
       FBSTRING* vr$8605 = fb_StrAllocTempDescZEx( (uint8*)"read", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8605, 0 );
      }
      goto label$10195;
      label$10208:;
      if( TMP$4259$6 != 7ull ) goto label$10210;
      label$10211:;
      {
       FBSTRING* vr$8606 = fb_StrAllocTempDescZEx( (uint8*)"ready", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8606, 0 );
      }
      goto label$10195;
      label$10210:;
      if( TMP$4259$6 != 8ull ) goto label$10212;
      label$10213:;
      {
       FBSTRING* vr$8607 = fb_StrAllocTempDescZEx( (uint8*)"real", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8607, 0 );
      }
      goto label$10195;
      label$10212:;
      if( TMP$4259$6 != 9ull ) goto label$10214;
      label$10215:;
      {
       FBSTRING* vr$8608 = fb_StrAllocTempDescZEx( (uint8*)"receive", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8608, 0 );
      }
      goto label$10195;
      label$10214:;
      if( TMP$4259$6 != 10ull ) goto label$10216;
      label$10217:;
      {
       FBSTRING* vr$8609 = fb_StrAllocTempDescZEx( (uint8*)"reciprocal", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8609, 0 );
      }
      goto label$10195;
      label$10216:;
      if( TMP$4259$6 != 11ull ) goto label$10218;
      label$10219:;
      {
       FBSTRING* vr$8610 = fb_StrAllocTempDescZEx( (uint8*)"record", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8610, 0 );
      }
      goto label$10195;
      label$10218:;
      if( TMP$4259$6 != 12ull ) goto label$10220;
      label$10221:;
      {
       FBSTRING* vr$8611 = fb_StrAllocTempDescZEx( (uint8*)"recording", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8611, 0 );
      }
      goto label$10195;
      label$10220:;
      if( TMP$4259$6 != 13ull ) goto label$10222;
      label$10223:;
      {
       FBSTRING* vr$8612 = fb_StrAllocTempDescZEx( (uint8*)"records", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8612, 0 );
      }
      goto label$10195;
      label$10222:;
      if( TMP$4259$6 != 14ull ) goto label$10224;
      label$10225:;
      {
       FBSTRING* vr$8613 = fb_StrAllocTempDescZEx( (uint8*)"recursion_limit", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$8613, 0 );
      }
      goto label$10195;
      label$10224:;
      if( TMP$4259$6 != 15ull ) goto label$10226;
      label$10227:;
      {
       FBSTRING* vr$8614 = fb_StrAllocTempDescZEx( (uint8*)"recursive", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8614, 0 );
      }
      goto label$10195;
      label$10226:;
      if( TMP$4259$6 != 16ull ) goto label$10228;
      label$10229:;
      {
       FBSTRING* vr$8615 = fb_StrAllocTempDescZEx( (uint8*)"red", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8615, 0 );
      }
      goto label$10195;
      label$10228:;
      if( TMP$4259$6 != 17ull ) goto label$10230;
      label$10231:;
      {
       FBSTRING* vr$8616 = fb_StrAllocTempDescZEx( (uint8*)"redefines", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8616, 0 );
      }
      goto label$10195;
      label$10230:;
      if( TMP$4259$6 != 18ull ) goto label$10232;
      label$10233:;
      {
       FBSTRING* vr$8617 = fb_StrAllocTempDescZEx( (uint8*)"reel", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8617, 0 );
      }
      goto label$10195;
      label$10232:;
      if( TMP$4259$6 != 19ull ) goto label$10234;
      label$10235:;
      {
       FBSTRING* vr$8618 = fb_StrAllocTempDescZEx( (uint8*)"reference", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8618, 0 );
      }
      goto label$10195;
      label$10234:;
      if( TMP$4259$6 != 20ull ) goto label$10236;
      label$10237:;
      {
       FBSTRING* vr$8619 = fb_StrAllocTempDescZEx( (uint8*)"references", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8619, 0 );
      }
      goto label$10195;
      label$10236:;
      if( TMP$4259$6 != 21ull ) goto label$10238;
      label$10239:;
      {
       FBSTRING* vr$8620 = fb_StrAllocTempDescZEx( (uint8*)"reflect", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8620, 0 );
      }
      goto label$10195;
      label$10238:;
      if( TMP$4259$6 != 22ull ) goto label$10240;
      label$10241:;
      {
       FBSTRING* vr$8621 = fb_StrAllocTempDescZEx( (uint8*)"reflection", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8621, 0 );
      }
      goto label$10195;
      label$10240:;
      if( TMP$4259$6 != 23ull ) goto label$10242;
      label$10243:;
      {
       FBSTRING* vr$8622 = fb_StrAllocTempDescZEx( (uint8*)"reflection_exponent", 19ll );
       fb_PrintString( 1, (FBSTRING*)vr$8622, 0 );
      }
      goto label$10195;
      label$10242:;
      if( TMP$4259$6 != 24ull ) goto label$10244;
      label$10245:;
      {
       FBSTRING* vr$8623 = fb_StrAllocTempDescZEx( (uint8*)"refract", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8623, 0 );
      }
      goto label$10195;
      label$10244:;
      if( TMP$4259$6 != 25ull ) goto label$10246;
      label$10247:;
      {
       FBSTRING* vr$8624 = fb_StrAllocTempDescZEx( (uint8*)"refraction", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8624, 0 );
      }
      goto label$10195;
      label$10246:;
      if( TMP$4259$6 != 26ull ) goto label$10248;
      label$10249:;
      {
       FBSTRING* vr$8625 = fb_StrAllocTempDescZEx( (uint8*)"regex_match", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8625, 0 );
      }
      goto label$10195;
      label$10248:;
      if( TMP$4259$6 != 27ull ) goto label$10250;
      label$10251:;
      {
       FBSTRING* vr$8626 = fb_StrAllocTempDescZEx( (uint8*)"regex_search", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8626, 0 );
      }
      goto label$10195;
      label$10250:;
      if( TMP$4259$6 != 28ull ) goto label$10252;
      label$10253:;
      {
       FBSTRING* vr$8627 = fb_StrAllocTempDescZEx( (uint8*)"register", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8627, 0 );
      }
      goto label$10195;
      label$10252:;
      if( TMP$4259$6 != 29ull ) goto label$10254;
      label$10255:;
      {
       FBSTRING* vr$8628 = fb_StrAllocTempDescZEx( (uint8*)"reintroduce", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8628, 0 );
      }
      goto label$10195;
      label$10254:;
      if( TMP$4259$6 != 30ull ) goto label$10256;
      label$10257:;
      {
       FBSTRING* vr$8629 = fb_StrAllocTempDescZEx( (uint8*)"relative", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8629, 0 );
      }
      goto label$10195;
      label$10256:;
      if( TMP$4259$6 != 31ull ) goto label$10258;
      label$10259:;
      {
       FBSTRING* vr$8630 = fb_StrAllocTempDescZEx( (uint8*)"release", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8630, 0 );
      }
      goto label$10195;
      label$10258:;
      if( TMP$4259$6 != 32ull ) goto label$10260;
      label$10261:;
      {
       FBSTRING* vr$8631 = fb_StrAllocTempDescZEx( (uint8*)"reload", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8631, 0 );
      }
      goto label$10195;
      label$10260:;
      if( TMP$4259$6 != 33ull ) goto label$10262;
      label$10263:;
      {
       FBSTRING* vr$8632 = fb_StrAllocTempDescZEx( (uint8*)"rem", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8632, 0 );
      }
      goto label$10195;
      label$10262:;
      if( TMP$4259$6 != 34ull ) goto label$10264;
      label$10265:;
      {
       FBSTRING* vr$8633 = fb_StrAllocTempDescZEx( (uint8*)"remainder", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8633, 0 );
      }
      goto label$10195;
      label$10264:;
      if( TMP$4259$6 != 35ull ) goto label$10266;
      label$10267:;
      {
       FBSTRING* vr$8634 = fb_StrAllocTempDescZEx( (uint8*)"removal", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8634, 0 );
      }
      goto label$10195;
      label$10266:;
      if( TMP$4259$6 != 36ull ) goto label$10268;
      label$10269:;
      {
       FBSTRING* vr$8635 = fb_StrAllocTempDescZEx( (uint8*)"renames", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8635, 0 );
      }
      goto label$10195;
      label$10268:;
      if( TMP$4259$6 != 37ull ) goto label$10270;
      label$10271:;
      {
       FBSTRING* vr$8636 = fb_StrAllocTempDescZEx( (uint8*)"render", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8636, 0 );
      }
      goto label$10195;
      label$10270:;
      if( TMP$4259$6 != 38ull ) goto label$10272;
      label$10273:;
      {
       FBSTRING* vr$8637 = fb_StrAllocTempDescZEx( (uint8*)"renum", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8637, 0 );
      }
      goto label$10195;
      label$10272:;
      if( TMP$4259$6 != 39ull ) goto label$10274;
      label$10275:;
      {
       FBSTRING* vr$8638 = fb_StrAllocTempDescZEx( (uint8*)"repeat", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8638, 0 );
      }
      goto label$10195;
      label$10274:;
      if( TMP$4259$6 != 40ull ) goto label$10276;
      label$10277:;
      {
       FBSTRING* vr$8639 = fb_StrAllocTempDescZEx( (uint8*)"replace", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8639, 0 );
      }
      goto label$10195;
      label$10276:;
      if( TMP$4259$6 != 41ull ) goto label$10278;
      label$10279:;
      {
       FBSTRING* vr$8640 = fb_StrAllocTempDescZEx( (uint8*)"replacing", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8640, 0 );
      }
      goto label$10195;
      label$10278:;
      if( TMP$4259$6 != 42ull ) goto label$10280;
      label$10281:;
      {
       FBSTRING* vr$8641 = fb_StrAllocTempDescZEx( (uint8*)"report", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8641, 0 );
      }
      goto label$10195;
      label$10280:;
      if( TMP$4259$6 != 43ull ) goto label$10282;
      label$10283:;
      {
       FBSTRING* vr$8642 = fb_StrAllocTempDescZEx( (uint8*)"reporting", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8642, 0 );
      }
      goto label$10195;
      label$10282:;
      if( TMP$4259$6 != 44ull ) goto label$10284;
      label$10285:;
      {
       FBSTRING* vr$8643 = fb_StrAllocTempDescZEx( (uint8*)"reports", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8643, 0 );
      }
      goto label$10195;
      label$10284:;
      if( TMP$4259$6 != 45ull ) goto label$10286;
      label$10287:;
      {
       FBSTRING* vr$8644 = fb_StrAllocTempDescZEx( (uint8*)"repository", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8644, 0 );
      }
      goto label$10195;
      label$10286:;
      if( TMP$4259$6 != 46ull ) goto label$10288;
      label$10289:;
      {
       FBSTRING* vr$8645 = fb_StrAllocTempDescZEx( (uint8*)"rerun", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8645, 0 );
      }
      goto label$10195;
      label$10288:;
      if( TMP$4259$6 != 47ull ) goto label$10290;
      label$10291:;
      {
       FBSTRING* vr$8646 = fb_StrAllocTempDescZEx( (uint8*)"reserve", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8646, 0 );
      }
      goto label$10195;
      label$10290:;
      if( TMP$4259$6 != 48ull ) goto label$10292;
      label$10293:;
      {
       FBSTRING* vr$8647 = fb_StrAllocTempDescZEx( (uint8*)"reset", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8647, 0 );
      }
      goto label$10195;
      label$10292:;
      if( TMP$4259$6 != 49ull ) goto label$10294;
      label$10295:;
      {
       FBSTRING* vr$8648 = fb_StrAllocTempDescZEx( (uint8*)"restore", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8648, 0 );
      }
      goto label$10195;
      label$10294:;
      if( TMP$4259$6 != 50ull ) goto label$10296;
      label$10297:;
      {
       FBSTRING* vr$8649 = fb_StrAllocTempDescZEx( (uint8*)"resume", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8649, 0 );
      }
      goto label$10195;
      label$10296:;
      if( TMP$4259$6 != 51ull ) goto label$10298;
      label$10299:;
      {
       FBSTRING* vr$8650 = fb_StrAllocTempDescZEx( (uint8*)"return", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8650, 0 );
      }
      goto label$10195;
      label$10298:;
      if( TMP$4259$6 != 52ull ) goto label$10300;
      label$10301:;
      {
       FBSTRING* vr$8651 = fb_StrAllocTempDescZEx( (uint8*)"return-code", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8651, 0 );
      }
      goto label$10195;
      label$10300:;
      if( TMP$4259$6 != 53ull ) goto label$10302;
      label$10303:;
      {
       FBSTRING* vr$8652 = fb_StrAllocTempDescZEx( (uint8*)"returning", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8652, 0 );
      }
      goto label$10195;
      label$10302:;
      if( TMP$4259$6 != 54ull ) goto label$10304;
      label$10305:;
      {
       FBSTRING* vr$8653 = fb_StrAllocTempDescZEx( (uint8*)"reversed", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8653, 0 );
      }
      goto label$10195;
      label$10304:;
      if( TMP$4259$6 != 55ull ) goto label$10306;
      label$10307:;
      {
       FBSTRING* vr$8654 = fb_StrAllocTempDescZEx( (uint8*)"rewind", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8654, 0 );
      }
      goto label$10195;
      label$10306:;
      if( TMP$4259$6 != 56ull ) goto label$10308;
      label$10309:;
      {
       FBSTRING* vr$8655 = fb_StrAllocTempDescZEx( (uint8*)"rewrite", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8655, 0 );
      }
      goto label$10195;
      label$10308:;
      if( TMP$4259$6 != 57ull ) goto label$10310;
      label$10311:;
      {
       FBSTRING* vr$8656 = fb_StrAllocTempDescZEx( (uint8*)"rf", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8656, 0 );
      }
      goto label$10195;
      label$10310:;
      if( TMP$4259$6 != 58ull ) goto label$10312;
      label$10313:;
      {
       FBSTRING* vr$8657 = fb_StrAllocTempDescZEx( (uint8*)"rgb", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8657, 0 );
      }
      goto label$10195;
      label$10312:;
      if( TMP$4259$6 != 59ull ) goto label$10314;
      label$10315:;
      {
       FBSTRING* vr$8658 = fb_StrAllocTempDescZEx( (uint8*)"rgbf", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8658, 0 );
      }
      goto label$10195;
      label$10314:;
      if( TMP$4259$6 != 60ull ) goto label$10316;
      label$10317:;
      {
       FBSTRING* vr$8659 = fb_StrAllocTempDescZEx( (uint8*)"rgbft", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8659, 0 );
      }
      goto label$10195;
      label$10316:;
      if( TMP$4259$6 != 61ull ) goto label$10318;
      label$10319:;
      {
       FBSTRING* vr$8660 = fb_StrAllocTempDescZEx( (uint8*)"rgbt", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8660, 0 );
      }
      goto label$10195;
      label$10318:;
      if( TMP$4259$6 != 62ull ) goto label$10320;
      label$10321:;
      {
       FBSTRING* vr$8661 = fb_StrAllocTempDescZEx( (uint8*)"rh", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8661, 0 );
      }
      goto label$10195;
      label$10320:;
      if( TMP$4259$6 != 63ull ) goto label$10322;
      label$10323:;
      {
       FBSTRING* vr$8662 = fb_StrAllocTempDescZEx( (uint8*)"right", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8662, 0 );
      }
      goto label$10195;
      label$10322:;
      if( TMP$4259$6 != 65ull ) goto label$10324;
      label$10325:;
      {
       FBSTRING* vr$8663 = fb_StrAllocTempDescZEx( (uint8*)"ripples", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8663, 0 );
      }
      goto label$10195;
      label$10324:;
      if( TMP$4259$6 != 66ull ) goto label$10326;
      label$10327:;
      {
       FBSTRING* vr$8664 = fb_StrAllocTempDescZEx( (uint8*)"rmdir", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8664, 0 );
      }
      goto label$10195;
      label$10326:;
      if( TMP$4259$6 != 67ull ) goto label$10328;
      label$10329:;
      {
       FBSTRING* vr$8665 = fb_StrAllocTempDescZEx( (uint8*)"rnd", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8665, 0 );
      }
      goto label$10195;
      label$10328:;
      if( TMP$4259$6 != 68ull ) goto label$10330;
      label$10331:;
      {
       FBSTRING* vr$8666 = fb_StrAllocTempDescZEx( (uint8*)"rotate", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8666, 0 );
      }
      goto label$10195;
      label$10330:;
      if( TMP$4259$6 != 69ull ) goto label$10332;
      label$10333:;
      {
       FBSTRING* vr$8667 = fb_StrAllocTempDescZEx( (uint8*)"roughness", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8667, 0 );
      }
      goto label$10195;
      label$10332:;
      if( TMP$4259$6 != 70ull ) goto label$10334;
      label$10335:;
      {
       FBSTRING* vr$8668 = fb_StrAllocTempDescZEx( (uint8*)"round", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8668, 0 );
      }
      goto label$10195;
      label$10334:;
      if( TMP$4259$6 != 71ull ) goto label$10336;
      label$10337:;
      {
       FBSTRING* vr$8669 = fb_StrAllocTempDescZEx( (uint8*)"rounded", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8669, 0 );
      }
      goto label$10195;
      label$10336:;
      if( TMP$4259$6 != 72ull ) goto label$10338;
      label$10339:;
      {
       FBSTRING* vr$8670 = fb_StrAllocTempDescZEx( (uint8*)"row", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8670, 0 );
      }
      goto label$10195;
      label$10338:;
      if( TMP$4259$6 != 73ull ) goto label$10340;
      label$10341:;
      {
       FBSTRING* vr$8671 = fb_StrAllocTempDescZEx( (uint8*)"row_major", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8671, 0 );
      }
      goto label$10195;
      label$10340:;
      if( TMP$4259$6 != 74ull ) goto label$10342;
      label$10343:;
      {
       FBSTRING* vr$8672 = fb_StrAllocTempDescZEx( (uint8*)"rpad", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8672, 0 );
      }
      goto label$10195;
      label$10342:;
      if( TMP$4259$6 != 75ull ) goto label$10344;
      label$10345:;
      {
       FBSTRING* vr$8673 = fb_StrAllocTempDescZEx( (uint8*)"rset", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8673, 0 );
      }
      goto label$10195;
      label$10344:;
      if( TMP$4259$6 != 76ull ) goto label$10346;
      label$10347:;
      {
       FBSTRING* vr$8674 = fb_StrAllocTempDescZEx( (uint8*)"run", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8674, 0 );
      }
      goto label$10195;
      label$10346:;
      if( TMP$4259$6 != 77ull ) goto label$10348;
      label$10349:;
      {
       FBSTRING* vr$8675 = fb_StrAllocTempDescZEx( (uint8*)"s", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$8675, 0 );
      }
      goto label$10195;
      label$10348:;
      if( TMP$4259$6 != 78ull ) goto label$10350;
      label$10351:;
      {
       FBSTRING* vr$8676 = fb_StrAllocTempDescZEx( (uint8*)"safecall", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8676, 0 );
      }
      goto label$10195;
      label$10350:;
      if( TMP$4259$6 != 79ull ) goto label$10352;
      label$10353:;
      {
       FBSTRING* vr$8677 = fb_StrAllocTempDescZEx( (uint8*)"same", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8677, 0 );
      }
      goto label$10195;
      label$10352:;
      if( TMP$4259$6 != 80ull ) goto label$10354;
      label$10355:;
      {
       FBSTRING* vr$8678 = fb_StrAllocTempDescZEx( (uint8*)"same_source", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8678, 0 );
      }
      goto label$10195;
      label$10354:;
      if( TMP$4259$6 != 81ull ) goto label$10356;
      label$10357:;
      {
       FBSTRING* vr$8679 = fb_StrAllocTempDescZEx( (uint8*)"sampler1D", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8679, 0 );
      }
      goto label$10195;
      label$10356:;
      if( TMP$4259$6 != 82ull ) goto label$10358;
      label$10359:;
      {
       FBSTRING* vr$8680 = fb_StrAllocTempDescZEx( (uint8*)"sampler1DArray", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$8680, 0 );
      }
      goto label$10195;
      label$10358:;
      if( TMP$4259$6 != 83ull ) goto label$10360;
      label$10361:;
      {
       FBSTRING* vr$8681 = fb_StrAllocTempDescZEx( (uint8*)"sampler1DArrayShadow", 20ll );
       fb_PrintString( 1, (FBSTRING*)vr$8681, 0 );
      }
      goto label$10195;
      label$10360:;
      if( TMP$4259$6 != 84ull ) goto label$10362;
      label$10363:;
      {
       FBSTRING* vr$8682 = fb_StrAllocTempDescZEx( (uint8*)"sampler1DShadow", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$8682, 0 );
      }
      goto label$10195;
      label$10362:;
      if( TMP$4259$6 != 95ull ) goto label$10364;
      label$10365:;
      {
       FBSTRING* vr$8683 = fb_StrAllocTempDescZEx( (uint8*)"sampler2D", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8683, 0 );
      }
      goto label$10195;
      label$10364:;
      if( TMP$4259$6 != 86ull ) goto label$10366;
      label$10367:;
      {
       FBSTRING* vr$8684 = fb_StrAllocTempDescZEx( (uint8*)"sampler2DArray", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$8684, 0 );
      }
      goto label$10195;
      label$10366:;
      if( TMP$4259$6 != 87ull ) goto label$10368;
      label$10369:;
      {
       FBSTRING* vr$8685 = fb_StrAllocTempDescZEx( (uint8*)"sampler2DArrayShadow", 20ll );
       fb_PrintString( 1, (FBSTRING*)vr$8685, 0 );
      }
      goto label$10195;
      label$10368:;
      if( TMP$4259$6 != 88ull ) goto label$10370;
      label$10371:;
      {
       FBSTRING* vr$8686 = fb_StrAllocTempDescZEx( (uint8*)"sampler2DRect", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8686, 0 );
      }
      goto label$10195;
      label$10370:;
      if( TMP$4259$6 != 89ull ) goto label$10372;
      label$10373:;
      {
       FBSTRING* vr$8687 = fb_StrAllocTempDescZEx( (uint8*)"sampler2DRectShadow", 19ll );
       fb_PrintString( 1, (FBSTRING*)vr$8687, 0 );
      }
      goto label$10195;
      label$10372:;
      if( TMP$4259$6 != 90ull ) goto label$10374;
      label$10375:;
      {
       FBSTRING* vr$8688 = fb_StrAllocTempDescZEx( (uint8*)"sampler2DShadow", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$8688, 0 );
      }
      goto label$10195;
      label$10374:;
      if( TMP$4259$6 != 91ull ) goto label$10376;
      label$10377:;
      {
       FBSTRING* vr$8689 = fb_StrAllocTempDescZEx( (uint8*)"sampler3D", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8689, 0 );
      }
      goto label$10195;
      label$10376:;
      if( TMP$4259$6 != 92ull ) goto label$10378;
      label$10379:;
      {
       FBSTRING* vr$8690 = fb_StrAllocTempDescZEx( (uint8*)"sampler3DRect", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8690, 0 );
      }
      goto label$10195;
      label$10378:;
      if( TMP$4259$6 != 93ull ) goto label$10380;
      label$10381:;
      {
       FBSTRING* vr$8691 = fb_StrAllocTempDescZEx( (uint8*)"samplerBuffer", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8691, 0 );
      }
      goto label$10195;
      label$10380:;
      if( TMP$4259$6 != 94ull ) goto label$10382;
      label$10383:;
      {
       FBSTRING* vr$8692 = fb_StrAllocTempDescZEx( (uint8*)"samplerCube", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8692, 0 );
      }
      goto label$10195;
      label$10382:;
      if( TMP$4259$6 != 95ull ) goto label$10384;
      label$10385:;
      {
       FBSTRING* vr$8693 = fb_StrAllocTempDescZEx( (uint8*)"samplerCubeShadow", 17ll );
       fb_PrintString( 1, (FBSTRING*)vr$8693, 0 );
      }
      goto label$10195;
      label$10384:;
      if( TMP$4259$6 != 96ull ) goto label$10386;
      label$10387:;
      {
       FBSTRING* vr$8694 = fb_StrAllocTempDescZEx( (uint8*)"samples", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8694, 0 );
      }
      goto label$10195;
      label$10386:;
      if( TMP$4259$6 != 97ull ) goto label$10388;
      label$10389:;
      {
       FBSTRING* vr$8695 = fb_StrAllocTempDescZEx( (uint8*)"save", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8695, 0 );
      }
      goto label$10195;
      label$10388:;
      if( TMP$4259$6 != 98ull ) goto label$10390;
      label$10391:;
      {
       FBSTRING* vr$8696 = fb_StrAllocTempDescZEx( (uint8*)"save_file", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8696, 0 );
      }
      goto label$10195;
      label$10390:;
      if( TMP$4259$6 != 99ull ) goto label$10392;
      label$10393:;
      {
       FBSTRING* vr$8697 = fb_StrAllocTempDescZEx( (uint8*)"scale", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8697, 0 );
      }
      goto label$10195;
      label$10392:;
      if( TMP$4259$6 != 100ull ) goto label$10394;
      label$10395:;
      {
       FBSTRING* vr$8698 = fb_StrAllocTempDescZEx( (uint8*)"scallop_wave", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8698, 0 );
      }
      goto label$10195;
      label$10394:;
      if( TMP$4259$6 != 101ull ) goto label$10396;
      label$10397:;
      {
       FBSTRING* vr$8699 = fb_StrAllocTempDescZEx( (uint8*)"scattering", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8699, 0 );
      }
      goto label$10195;
      label$10396:;
      if( TMP$4259$6 != 102ull ) goto label$10398;
      label$10399:;
      {
       FBSTRING* vr$8700 = fb_StrAllocTempDescZEx( (uint8*)"screen", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8700, 0 );
      }
      goto label$10195;
      label$10398:;
      if( TMP$4259$6 != 103ull ) goto label$10400;
      label$10401:;
      {
       FBSTRING* vr$8701 = fb_StrAllocTempDescZEx( (uint8*)"sd", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8701, 0 );
      }
      goto label$10195;
      label$10400:;
      if( TMP$4259$6 != 104ull ) goto label$10402;
      label$10403:;
      {
       FBSTRING* vr$8702 = fb_StrAllocTempDescZEx( (uint8*)"search", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8702, 0 );
      }
      goto label$10195;
      label$10402:;
      if( TMP$4259$6 != 105ull ) goto label$10404;
      label$10405:;
      {
       FBSTRING* vr$8703 = fb_StrAllocTempDescZEx( (uint8*)"second", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8703, 0 );
      }
      goto label$10195;
      label$10404:;
      if( TMP$4259$6 != 106ull ) goto label$10406;
      label$10407:;
      {
       FBSTRING* vr$8704 = fb_StrAllocTempDescZEx( (uint8*)"section", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8704, 0 );
      }
      goto label$10195;
      label$10406:;
      if( TMP$4259$6 != 107ull ) goto label$10408;
      label$10409:;
      {
       FBSTRING* vr$8705 = fb_StrAllocTempDescZEx( (uint8*)"security", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8705, 0 );
      }
      goto label$10195;
      label$10408:;
      if( TMP$4259$6 != 108ull ) goto label$10410;
      label$10411:;
      {
       FBSTRING* vr$8706 = fb_StrAllocTempDescZEx( (uint8*)"seed", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8706, 0 );
      }
      goto label$10195;
      label$10410:;
      if( TMP$4259$6 != 109ull ) goto label$10412;
      label$10413:;
      {
       FBSTRING* vr$8707 = fb_StrAllocTempDescZEx( (uint8*)"segment", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8707, 0 );
      }
      goto label$10195;
      label$10412:;
      if( TMP$4259$6 != 110ull ) goto label$10414;
      label$10415:;
      {
       FBSTRING* vr$8708 = fb_StrAllocTempDescZEx( (uint8*)"segment-limit", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8708, 0 );
      }
      goto label$10195;
      label$10414:;
      if( TMP$4259$6 != 111ull ) goto label$10416;
      label$10417:;
      {
       FBSTRING* vr$8709 = fb_StrAllocTempDescZEx( (uint8*)"section", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8709, 0 );
      }
      goto label$10195;
      label$10416:;
      if( TMP$4259$6 != 112ull ) goto label$10418;
      label$10419:;
      {
       FBSTRING* vr$8710 = fb_StrAllocTempDescZEx( (uint8*)"select", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8710, 0 );
      }
      goto label$10195;
      label$10418:;
      if( TMP$4259$6 != 113ull ) goto label$10420;
      label$10421:;
      {
       FBSTRING* vr$8711 = fb_StrAllocTempDescZEx( (uint8*)"selector", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8711, 0 );
      }
      goto label$10195;
      label$10420:;
      if( TMP$4259$6 != 114ull ) goto label$10422;
      label$10423:;
      {
       FBSTRING* vr$8712 = fb_StrAllocTempDescZEx( (uint8*)"selection", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8712, 0 );
      }
      goto label$10195;
      label$10422:;
      if( TMP$4259$6 != 115ull ) goto label$10424;
      label$10425:;
      {
       FBSTRING* vr$8713 = fb_StrAllocTempDescZEx( (uint8*)"self", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8713, 0 );
      }
      goto label$10195;
      label$10424:;
      if( TMP$4259$6 != 116ull ) goto label$10426;
      label$10427:;
      {
       FBSTRING* vr$8714 = fb_StrAllocTempDescZEx( (uint8*)"send", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8714, 0 );
      }
      goto label$10195;
      label$10426:;
      if( TMP$4259$6 != 117ull ) goto label$10428;
      label$10429:;
      {
       FBSTRING* vr$8715 = fb_StrAllocTempDescZEx( (uint8*)"sentence", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8715, 0 );
      }
      goto label$10195;
      label$10428:;
      if( TMP$4259$6 != 118ull ) goto label$10430;
      label$10431:;
      {
       FBSTRING* vr$8716 = fb_StrAllocTempDescZEx( (uint8*)"separate", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8716, 0 );
      }
      goto label$10195;
      label$10430:;
      if( TMP$4259$6 != 119ull ) goto label$10432;
      label$10433:;
      {
       FBSTRING* vr$8717 = fb_StrAllocTempDescZEx( (uint8*)"sequence", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8717, 0 );
      }
      goto label$10195;
      label$10432:;
      if( TMP$4259$6 != 120ull ) goto label$10434;
      label$10435:;
      {
       FBSTRING* vr$8718 = fb_StrAllocTempDescZEx( (uint8*)"sequential", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8718, 0 );
      }
      goto label$10195;
      label$10434:;
      if( TMP$4259$6 != 121ull ) goto label$10436;
      label$10437:;
      {
       FBSTRING* vr$8719 = fb_StrAllocTempDescZEx( (uint8*)"sequentially", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8719, 0 );
      }
      goto label$10195;
      label$10436:;
      if( TMP$4259$6 != 122ull ) goto label$10438;
      label$10439:;
      {
       FBSTRING* vr$8720 = fb_StrAllocTempDescZEx( (uint8*)"service", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8720, 0 );
      }
      goto label$10195;
      label$10438:;
      if( TMP$4259$6 != 123ull ) goto label$10440;
      label$10441:;
      {
       FBSTRING* vr$8721 = fb_StrAllocTempDescZEx( (uint8*)"set", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8721, 0 );
      }
      goto label$10195;
      label$10440:;
      if( TMP$4259$6 != 124ull ) goto label$10442;
      label$10443:;
      {
       FBSTRING* vr$8722 = fb_StrAllocTempDescZEx( (uint8*)"sgn", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8722, 0 );
      }
      goto label$10195;
      label$10442:;
      if( TMP$4259$6 != 125ull ) goto label$10444;
      label$10445:;
      {
       FBSTRING* vr$8723 = fb_StrAllocTempDescZEx( (uint8*)"shadowless", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8723, 0 );
      }
      goto label$10195;
      label$10444:;
      if( TMP$4259$6 != 126ull ) goto label$10446;
      label$10447:;
      {
       FBSTRING* vr$8724 = fb_StrAllocTempDescZEx( (uint8*)"shell", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8724, 0 );
      }
      goto label$10195;
      label$10446:;
      if( TMP$4259$6 != 127ull ) goto label$10448;
      label$10449:;
      {
       FBSTRING* vr$8725 = fb_StrAllocTempDescZEx( (uint8*)"shift-in", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8725, 0 );
      }
      goto label$10195;
      label$10448:;
      if( TMP$4259$6 != 128ull ) goto label$10450;
      label$10451:;
      {
       FBSTRING* vr$8726 = fb_StrAllocTempDescZEx( (uint8*)"shift-out", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8726, 0 );
      }
      goto label$10195;
      label$10450:;
      if( TMP$4259$6 != 129ull ) goto label$10452;
      label$10453:;
      {
       FBSTRING* vr$8727 = fb_StrAllocTempDescZEx( (uint8*)"shl", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8727, 0 );
      }
      goto label$10195;
      label$10452:;
      if( TMP$4259$6 != 130ull ) goto label$10454;
      label$10455:;
      {
       FBSTRING* vr$8728 = fb_StrAllocTempDescZEx( (uint8*)"short", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8728, 0 );
      }
      goto label$10195;
      label$10454:;
      if( TMP$4259$6 != 131ull ) goto label$10456;
      label$10457:;
      {
       FBSTRING* vr$8729 = fb_StrAllocTempDescZEx( (uint8*)"shr", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8729, 0 );
      }
      goto label$10195;
      label$10456:;
      if( TMP$4259$6 != 132ull ) goto label$10458;
      label$10459:;
      {
       FBSTRING* vr$8730 = fb_StrAllocTempDescZEx( (uint8*)"sign", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8730, 0 );
      }
      goto label$10195;
      label$10458:;
      if( TMP$4259$6 != 133ull ) goto label$10460;
      label$10461:;
      {
       FBSTRING* vr$8731 = fb_StrAllocTempDescZEx( (uint8*)"simple_nested_loop", 18ll );
       fb_PrintString( 1, (FBSTRING*)vr$8731, 0 );
      }
      goto label$10195;
      label$10460:;
      if( TMP$4259$6 != 134ull ) goto label$10462;
      label$10463:;
      {
       FBSTRING* vr$8732 = fb_StrAllocTempDescZEx( (uint8*)"sin", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8732, 0 );
      }
      goto label$10195;
      label$10462:;
      if( TMP$4259$6 != 135ull ) goto label$10464;
      label$10465:;
      {
       FBSTRING* vr$8733 = fb_StrAllocTempDescZEx( (uint8*)"sine_wave", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8733, 0 );
      }
      goto label$10195;
      label$10464:;
      if( TMP$4259$6 != 136ull ) goto label$10466;
      label$10467:;
      {
       FBSTRING* vr$8734 = fb_StrAllocTempDescZEx( (uint8*)"sinh", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8734, 0 );
      }
      goto label$10195;
      label$10466:;
      if( TMP$4259$6 != 137ull ) goto label$10468;
      label$10469:;
      {
       FBSTRING* vr$8735 = fb_StrAllocTempDescZEx( (uint8*)"size", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8735, 0 );
      }
      goto label$10195;
      label$10468:;
      if( TMP$4259$6 != 138ull ) goto label$10470;
      label$10471:;
      {
       FBSTRING* vr$8736 = fb_StrAllocTempDescZEx( (uint8*)"sizeof", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8736, 0 );
      }
      goto label$10195;
      label$10470:;
      if( TMP$4259$6 != 139ull ) goto label$10472;
      label$10473:;
      {
       FBSTRING* vr$8737 = fb_StrAllocTempDescZEx( (uint8*)"skip1", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8737, 0 );
      }
      goto label$10195;
      label$10472:;
      if( TMP$4259$6 != 140ull ) goto label$10474;
      label$10475:;
      {
       FBSTRING* vr$8738 = fb_StrAllocTempDescZEx( (uint8*)"skip2", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8738, 0 );
      }
      goto label$10195;
      label$10474:;
      if( TMP$4259$6 != 141ull ) goto label$10476;
      label$10477:;
      {
       FBSTRING* vr$8739 = fb_StrAllocTempDescZEx( (uint8*)"skip3", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8739, 0 );
      }
      goto label$10195;
      label$10476:;
      if( TMP$4259$6 != 142ull ) goto label$10478;
      label$10479:;
      {
       FBSTRING* vr$8740 = fb_StrAllocTempDescZEx( (uint8*)"sky", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8740, 0 );
      }
      goto label$10195;
      label$10478:;
      if( TMP$4259$6 != 143ull ) goto label$10480;
      label$10481:;
      {
       FBSTRING* vr$8741 = fb_StrAllocTempDescZEx( (uint8*)"sky_sphere", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8741, 0 );
      }
      goto label$10195;
      label$10480:;
      if( TMP$4259$6 != 144ull ) goto label$10482;
      label$10483:;
      {
       FBSTRING* vr$8742 = fb_StrAllocTempDescZEx( (uint8*)"slice", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8742, 0 );
      }
      goto label$10195;
      label$10482:;
      if( TMP$4259$6 != 145ull ) goto label$10484;
      label$10485:;
      {
       FBSTRING* vr$8743 = fb_StrAllocTempDescZEx( (uint8*)"slope", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8743, 0 );
      }
      goto label$10195;
      label$10484:;
      if( TMP$4259$6 != 146ull ) goto label$10486;
      label$10487:;
      {
       FBSTRING* vr$8744 = fb_StrAllocTempDescZEx( (uint8*)"slope_map", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8744, 0 );
      }
      goto label$10195;
      label$10486:;
      if( TMP$4259$6 != 147ull ) goto label$10488;
      label$10489:;
      {
       FBSTRING* vr$8745 = fb_StrAllocTempDescZEx( (uint8*)"smallint", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8745, 0 );
      }
      goto label$10195;
      label$10488:;
      if( TMP$4259$6 != 148ull ) goto label$10490;
      label$10491:;
      {
       FBSTRING* vr$8746 = fb_StrAllocTempDescZEx( (uint8*)"smooth", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8746, 0 );
      }
      goto label$10195;
      label$10490:;
      if( TMP$4259$6 != 149ull ) goto label$10492;
      label$10493:;
      {
       FBSTRING* vr$8747 = fb_StrAllocTempDescZEx( (uint8*)"smooth_linearstep", 17ll );
       fb_PrintString( 1, (FBSTRING*)vr$8747, 0 );
      }
      goto label$10195;
      label$10492:;
      if( TMP$4259$6 != 150ull ) goto label$10494;
      label$10495:;
      {
       FBSTRING* vr$8748 = fb_StrAllocTempDescZEx( (uint8*)"smoothstep", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8748, 0 );
      }
      goto label$10195;
      label$10494:;
      if( TMP$4259$6 != 151ull ) goto label$10496;
      label$10497:;
      {
       FBSTRING* vr$8749 = fb_StrAllocTempDescZEx( (uint8*)"smooth_triangle", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$8749, 0 );
      }
      goto label$10195;
      label$10496:;
      if( TMP$4259$6 != 152ull ) goto label$10498;
      label$10499:;
      {
       FBSTRING* vr$8750 = fb_StrAllocTempDescZEx( (uint8*)"snoise", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8750, 0 );
      }
      goto label$10195;
      label$10498:;
      if( TMP$4259$6 != 153ull ) goto label$10500;
      label$10501:;
      {
       FBSTRING* vr$8751 = fb_StrAllocTempDescZEx( (uint8*)"softfloat", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8751, 0 );
      }
      goto label$10195;
      label$10500:;
      if( TMP$4259$6 != 154ull ) goto label$10502;
      label$10503:;
      {
       FBSTRING* vr$8752 = fb_StrAllocTempDescZEx( (uint8*)"solid", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8752, 0 );
      }
      goto label$10195;
      label$10502:;
      if( TMP$4259$6 != 155ull ) goto label$10504;
      label$10505:;
      {
       FBSTRING* vr$8753 = fb_StrAllocTempDescZEx( (uint8*)"sor", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8753, 0 );
      }
      goto label$10195;
      label$10504:;
      if( TMP$4259$6 != 156ull ) goto label$10506;
      label$10507:;
      {
       FBSTRING* vr$8754 = fb_StrAllocTempDescZEx( (uint8*)"sort", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8754, 0 );
      }
      goto label$10195;
      label$10506:;
      if( TMP$4259$6 != 157ull ) goto label$10508;
      label$10509:;
      {
       FBSTRING* vr$8755 = fb_StrAllocTempDescZEx( (uint8*)"sort-control", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8755, 0 );
      }
      goto label$10195;
      label$10508:;
      if( TMP$4259$6 != 158ull ) goto label$10510;
      label$10511:;
      {
       FBSTRING* vr$8756 = fb_StrAllocTempDescZEx( (uint8*)"sort-core-size", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$8756, 0 );
      }
      goto label$10195;
      label$10510:;
      if( TMP$4259$6 != 159ull ) goto label$10512;
      label$10513:;
      {
       FBSTRING* vr$8757 = fb_StrAllocTempDescZEx( (uint8*)"sort-file-size", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$8757, 0 );
      }
      goto label$10195;
      label$10512:;
      if( TMP$4259$6 != 160ull ) goto label$10514;
      label$10515:;
      {
       FBSTRING* vr$8758 = fb_StrAllocTempDescZEx( (uint8*)"sort-merge", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8758, 0 );
      }
      goto label$10195;
      label$10514:;
      if( TMP$4259$6 != 161ull ) goto label$10516;
      label$10517:;
      {
       FBSTRING* vr$8759 = fb_StrAllocTempDescZEx( (uint8*)"sort-message", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8759, 0 );
      }
      goto label$10195;
      label$10516:;
      if( TMP$4259$6 != 162ull ) goto label$10518;
      label$10519:;
      {
       FBSTRING* vr$8760 = fb_StrAllocTempDescZEx( (uint8*)"sort-mode-size", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$8760, 0 );
      }
      goto label$10195;
      label$10518:;
      if( TMP$4259$6 != 163ull ) goto label$10520;
      label$10521:;
      {
       FBSTRING* vr$8761 = fb_StrAllocTempDescZEx( (uint8*)"sort-return", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8761, 0 );
      }
      goto label$10195;
      label$10520:;
      if( TMP$4259$6 != 164ull ) goto label$10522;
      label$10523:;
      {
       FBSTRING* vr$8762 = fb_StrAllocTempDescZEx( (uint8*)"sound", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8762, 0 );
      }
      goto label$10195;
      label$10522:;
      if( TMP$4259$6 != 165ull ) goto label$10524;
      label$10525:;
      {
       FBSTRING* vr$8763 = fb_StrAllocTempDescZEx( (uint8*)"source", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8763, 0 );
      }
      goto label$10195;
      label$10524:;
      if( TMP$4259$6 != 166ull ) goto label$10526;
      label$10527:;
      {
       FBSTRING* vr$8764 = fb_StrAllocTempDescZEx( (uint8*)"source-computer", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$8764, 0 );
      }
      goto label$10195;
      label$10526:;
      if( TMP$4259$6 != 167ull ) goto label$10528;
      label$10529:;
      {
       FBSTRING* vr$8765 = fb_StrAllocTempDescZEx( (uint8*)"space", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8765, 0 );
      }
      goto label$10195;
      label$10528:;
      if( TMP$4259$6 != 169ull ) goto label$10530;
      label$10531:;
      {
       FBSTRING* vr$8766 = fb_StrAllocTempDescZEx( (uint8*)"spaces", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8766, 0 );
      }
      goto label$10195;
      label$10530:;
      if( TMP$4259$6 != 170ull ) goto label$10532;
      label$10533:;
      {
       FBSTRING* vr$8767 = fb_StrAllocTempDescZEx( (uint8*)"spacing", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8767, 0 );
      }
      goto label$10195;
      label$10532:;
      if( TMP$4259$6 != 171ull ) goto label$10534;
      label$10535:;
      {
       FBSTRING* vr$8768 = fb_StrAllocTempDescZEx( (uint8*)"spc", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8768, 0 );
      }
      goto label$10195;
      label$10534:;
      if( TMP$4259$6 != 172ull ) goto label$10536;
      label$10537:;
      {
       FBSTRING* vr$8769 = fb_StrAllocTempDescZEx( (uint8*)"specialize", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8769, 0 );
      }
      goto label$10195;
      label$10536:;
      if( TMP$4259$6 != 173ull ) goto label$10538;
      label$10539:;
      {
       FBSTRING* vr$8770 = fb_StrAllocTempDescZEx( (uint8*)"special-names", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8770, 0 );
      }
      goto label$10195;
      label$10538:;
      if( TMP$4259$6 != 174ull ) goto label$10540;
      label$10541:;
      {
       FBSTRING* vr$8771 = fb_StrAllocTempDescZEx( (uint8*)"specular", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8771, 0 );
      }
      goto label$10195;
      label$10540:;
      if( TMP$4259$6 != 175ull ) goto label$10542;
      label$10543:;
      {
       FBSTRING* vr$8772 = fb_StrAllocTempDescZEx( (uint8*)"sphere", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8772, 0 );
      }
      goto label$10195;
      label$10542:;
      if( TMP$4259$6 != 176ull ) goto label$10544;
      label$10545:;
      {
       FBSTRING* vr$8773 = fb_StrAllocTempDescZEx( (uint8*)"sphere_sweep", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8773, 0 );
      }
      goto label$10195;
      label$10544:;
      if( TMP$4259$6 != 177ull ) goto label$10546;
      label$10547:;
      {
       FBSTRING* vr$8774 = fb_StrAllocTempDescZEx( (uint8*)"spherical", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8774, 0 );
      }
      goto label$10195;
      label$10546:;
      if( TMP$4259$6 != 178ull ) goto label$10548;
      label$10549:;
      {
       FBSTRING* vr$8775 = fb_StrAllocTempDescZEx( (uint8*)"spiral1", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8775, 0 );
      }
      goto label$10195;
      label$10548:;
      if( TMP$4259$6 != 179ull ) goto label$10550;
      label$10551:;
      {
       FBSTRING* vr$8776 = fb_StrAllocTempDescZEx( (uint8*)"spiral2", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8776, 0 );
      }
      goto label$10195;
      label$10550:;
      if( TMP$4259$6 != 180ull ) goto label$10552;
      label$10553:;
      {
       FBSTRING* vr$8777 = fb_StrAllocTempDescZEx( (uint8*)"spline", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8777, 0 );
      }
      goto label$10195;
      label$10552:;
      if( TMP$4259$6 != 181ull ) goto label$10554;
      label$10555:;
      {
       FBSTRING* vr$8778 = fb_StrAllocTempDescZEx( (uint8*)"splineinverse", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8778, 0 );
      }
      goto label$10195;
      label$10554:;
      if( TMP$4259$6 != 182ull ) goto label$10556;
      label$10557:;
      {
       FBSTRING* vr$8779 = fb_StrAllocTempDescZEx( (uint8*)"split", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8779, 0 );
      }
      goto label$10195;
      label$10556:;
      if( TMP$4259$6 != 183ull ) goto label$10558;
      label$10559:;
      {
       FBSTRING* vr$8780 = fb_StrAllocTempDescZEx( (uint8*)"split_union", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8780, 0 );
      }
      goto label$10195;
      label$10558:;
      if( TMP$4259$6 != 184ull ) goto label$10560;
      label$10561:;
      {
       FBSTRING* vr$8781 = fb_StrAllocTempDescZEx( (uint8*)"spotlight", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8781, 0 );
      }
      goto label$10195;
      label$10560:;
      if( TMP$4259$6 != 185ull ) goto label$10562;
      label$10563:;
      {
       FBSTRING* vr$8782 = fb_StrAllocTempDescZEx( (uint8*)"spotted", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8782, 0 );
      }
      goto label$10195;
      label$10562:;
      if( TMP$4259$6 != 186ull ) goto label$10564;
      label$10565:;
      {
       FBSTRING* vr$8783 = fb_StrAllocTempDescZEx( (uint8*)"sqr", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8783, 0 );
      }
      goto label$10195;
      label$10564:;
      if( TMP$4259$6 != 187ull ) goto label$10566;
      label$10567:;
      {
       FBSTRING* vr$8784 = fb_StrAllocTempDescZEx( (uint8*)"sqrt", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8784, 0 );
      }
      goto label$10195;
      label$10566:;
      if( TMP$4259$6 != 188ull ) goto label$10568;
      label$10569:;
      {
       FBSTRING* vr$8785 = fb_StrAllocTempDescZEx( (uint8*)"standard", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8785, 0 );
      }
      goto label$10195;
      label$10568:;
      if( TMP$4259$6 != 189ull ) goto label$10570;
      label$10571:;
      {
       FBSTRING* vr$8786 = fb_StrAllocTempDescZEx( (uint8*)"standard-1", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8786, 0 );
      }
      goto label$10195;
      label$10570:;
      if( TMP$4259$6 != 190ull ) goto label$10572;
      label$10573:;
      {
       FBSTRING* vr$8787 = fb_StrAllocTempDescZEx( (uint8*)"standard-2", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8787, 0 );
      }
      goto label$10195;
      label$10572:;
      if( TMP$4259$6 != 191ull ) goto label$10574;
      label$10575:;
      {
       FBSTRING* vr$8788 = fb_StrAllocTempDescZEx( (uint8*)"start", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8788, 0 );
      }
      goto label$10195;
      label$10574:;
      if( TMP$4259$6 != 192ull ) goto label$10576;
      label$10577:;
      {
       FBSTRING* vr$8789 = fb_StrAllocTempDescZEx( (uint8*)"startswith", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8789, 0 );
      }
      goto label$10195;
      label$10576:;
      if( TMP$4259$6 != 193ull ) goto label$10578;
      label$10579:;
      {
       FBSTRING* vr$8790 = fb_StrAllocTempDescZEx( (uint8*)"static", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8790, 0 );
      }
      goto label$10195;
      label$10578:;
      if( TMP$4259$6 != 194ull ) goto label$10580;
      label$10581:;
      {
       FBSTRING* vr$8791 = fb_StrAllocTempDescZEx( (uint8*)"statistics", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8791, 0 );
      }
      goto label$10195;
      label$10580:;
      if( TMP$4259$6 != 195ull ) goto label$10582;
      label$10583:;
      {
       FBSTRING* vr$8792 = fb_StrAllocTempDescZEx( (uint8*)"status", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8792, 0 );
      }
      goto label$10195;
      label$10582:;
      if( TMP$4259$6 != 196ull ) goto label$10584;
      label$10585:;
      {
       FBSTRING* vr$8793 = fb_StrAllocTempDescZEx( (uint8*)"stdcall", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8793, 0 );
      }
      goto label$10195;
      label$10584:;
      if( TMP$4259$6 != 197ull ) goto label$10586;
      label$10587:;
      {
       FBSTRING* vr$8794 = fb_StrAllocTempDescZEx( (uint8*)"stdout", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8794, 0 );
      }
      goto label$10195;
      label$10586:;
      if( TMP$4259$6 != 198ull ) goto label$10588;
      label$10589:;
      {
       FBSTRING* vr$8795 = fb_StrAllocTempDescZEx( (uint8*)"step", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8795, 0 );
      }
      goto label$10195;
      label$10588:;
      if( TMP$4259$6 != 199ull ) goto label$10590;
      label$10591:;
      {
       FBSTRING* vr$8796 = fb_StrAllocTempDescZEx( (uint8*)"stick", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8796, 0 );
      }
      goto label$10195;
      label$10590:;
      if( TMP$4259$6 != 200ull ) goto label$10592;
      label$10593:;
      {
       FBSTRING* vr$8797 = fb_StrAllocTempDescZEx( (uint8*)"stof", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8797, 0 );
      }
      goto label$10195;
      label$10592:;
      if( TMP$4259$6 != 201ull ) goto label$10594;
      label$10595:;
      {
       FBSTRING* vr$8798 = fb_StrAllocTempDescZEx( (uint8*)"stoi", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8798, 0 );
      }
      goto label$10195;
      label$10594:;
      if( TMP$4259$6 != 202ull ) goto label$10596;
      label$10597:;
      {
       FBSTRING* vr$8799 = fb_StrAllocTempDescZEx( (uint8*)"stop", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8799, 0 );
      }
      goto label$10195;
      label$10596:;
      if( TMP$4259$6 != 203ull ) goto label$10598;
      label$10599:;
      {
       FBSTRING* vr$8800 = fb_StrAllocTempDescZEx( (uint8*)"str", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8800, 0 );
      }
      goto label$10195;
      label$10598:;
      if( TMP$4259$6 != 205ull ) goto label$10600;
      label$10601:;
      {
       FBSTRING* vr$8801 = fb_StrAllocTempDescZEx( (uint8*)"strcmp", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8801, 0 );
      }
      goto label$10195;
      label$10600:;
      if( TMP$4259$6 != 206ull ) goto label$10602;
      label$10603:;
      {
       FBSTRING* vr$8802 = fb_StrAllocTempDescZEx( (uint8*)"strength", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8802, 0 );
      }
      goto label$10195;
      label$10602:;
      if( TMP$4259$6 != 207ull ) goto label$10604;
      label$10605:;
      {
       FBSTRING* vr$8803 = fb_StrAllocTempDescZEx( (uint8*)"strig", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8803, 0 );
      }
      goto label$10195;
      label$10604:;
      if( TMP$4259$6 != 208ull ) goto label$10606;
      label$10607:;
      {
       FBSTRING* vr$8804 = fb_StrAllocTempDescZEx( (uint8*)"string", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8804, 0 );
      }
      goto label$10195;
      label$10606:;
      if( TMP$4259$6 != 209ull ) goto label$10608;
      label$10609:;
      {
       FBSTRING* vr$8805 = fb_StrAllocTempDescZEx( (uint8*)"strptr", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8805, 0 );
      }
      goto label$10195;
      label$10608:;
      if( TMP$4259$6 != 210ull ) goto label$10610;
      label$10611:;
      {
       FBSTRING* vr$8806 = fb_StrAllocTempDescZEx( (uint8*)"strlen", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8806, 0 );
      }
      goto label$10195;
      label$10610:;
      if( TMP$4259$6 != 211ull ) goto label$10612;
      label$10613:;
      {
       FBSTRING* vr$8807 = fb_StrAllocTempDescZEx( (uint8*)"strlwr", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8807, 0 );
      }
      goto label$10195;
      label$10612:;
      if( TMP$4259$6 != 212ull ) goto label$10614;
      label$10615:;
      {
       FBSTRING* vr$8808 = fb_StrAllocTempDescZEx( (uint8*)"structure", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8808, 0 );
      }
      goto label$10195;
      label$10614:;
      if( TMP$4259$6 != 213ull ) goto label$10616;
      label$10617:;
      {
       FBSTRING* vr$8809 = fb_StrAllocTempDescZEx( (uint8*)"strupr", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8809, 0 );
      }
      goto label$10195;
      label$10616:;
      if( TMP$4259$6 != 214ull ) goto label$10618;
      label$10619:;
      {
       FBSTRING* vr$8810 = fb_StrAllocTempDescZEx( (uint8*)"sturm", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8810, 0 );
      }
      goto label$10195;
      label$10618:;
      if( TMP$4259$6 != 215ull ) goto label$10620;
      label$10621:;
      {
       FBSTRING* vr$8811 = fb_StrAllocTempDescZEx( (uint8*)"subarray", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8811, 0 );
      }
      goto label$10195;
      label$10620:;
      if( TMP$4259$6 != 216ull ) goto label$10622;
      label$10623:;
      {
       FBSTRING* vr$8812 = fb_StrAllocTempDescZEx( (uint8*)"sub-queue-1", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8812, 0 );
      }
      goto label$10195;
      label$10622:;
      if( TMP$4259$6 != 217ull ) goto label$10624;
      label$10625:;
      {
       FBSTRING* vr$8813 = fb_StrAllocTempDescZEx( (uint8*)"sub-queue-2", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8813, 0 );
      }
      goto label$10195;
      label$10624:;
      if( TMP$4259$6 != 218ull ) goto label$10626;
      label$10627:;
      {
       FBSTRING* vr$8814 = fb_StrAllocTempDescZEx( (uint8*)"sub-queue-3", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8814, 0 );
      }
      goto label$10195;
      label$10626:;
      if( TMP$4259$6 != 219ull ) goto label$10628;
      label$10629:;
      {
       FBSTRING* vr$8815 = fb_StrAllocTempDescZEx( (uint8*)"subroutine", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8815, 0 );
      }
      goto label$10195;
      label$10628:;
      if( TMP$4259$6 != 220ull ) goto label$10630;
      label$10631:;
      {
       FBSTRING* vr$8816 = fb_StrAllocTempDescZEx( (uint8*)"substr", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8816, 0 );
      }
      goto label$10195;
      label$10630:;
      if( TMP$4259$6 != 221ull ) goto label$10632;
      label$10633:;
      {
       FBSTRING* vr$8817 = fb_StrAllocTempDescZEx( (uint8*)"substring", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8817, 0 );
      }
      goto label$10195;
      label$10632:;
      if( TMP$4259$6 != 222ull ) goto label$10634;
      label$10635:;
      {
       FBSTRING* vr$8818 = fb_StrAllocTempDescZEx( (uint8*)"substring_mb", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8818, 0 );
      }
      goto label$10195;
      label$10634:;
      if( TMP$4259$6 != 223ull ) goto label$10636;
      label$10637:;
      {
       FBSTRING* vr$8819 = fb_StrAllocTempDescZEx( (uint8*)"subtract", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8819, 0 );
      }
      goto label$10195;
      label$10636:;
      if( TMP$4259$6 != 224ull ) goto label$10638;
      label$10639:;
      {
       FBSTRING* vr$8820 = fb_StrAllocTempDescZEx( (uint8*)"sum", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8820, 0 );
      }
      goto label$10195;
      label$10638:;
      if( TMP$4259$6 != 225ull ) goto label$10640;
      label$10641:;
      {
       FBSTRING* vr$8821 = fb_StrAllocTempDescZEx( (uint8*)"super", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8821, 0 );
      }
      goto label$10195;
      label$10640:;
      if( TMP$4259$6 != 226ull ) goto label$10642;
      label$10643:;
      {
       FBSTRING* vr$8822 = fb_StrAllocTempDescZEx( (uint8*)"superellipsoid", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$8822, 0 );
      }
      goto label$10195;
      label$10642:;
      if( TMP$4259$6 != 227ull ) goto label$10644;
      label$10645:;
      {
       FBSTRING* vr$8823 = fb_StrAllocTempDescZEx( (uint8*)"superp", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8823, 0 );
      }
      goto label$10195;
      label$10644:;
      if( TMP$4259$6 != 228ull ) goto label$10646;
      label$10647:;
      {
       FBSTRING* vr$8824 = fb_StrAllocTempDescZEx( (uint8*)"suppress", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8824, 0 );
      }
      goto label$10195;
      label$10646:;
      if( TMP$4259$6 != 229ull ) goto label$10648;
      label$10649:;
      {
       FBSTRING* vr$8825 = fb_StrAllocTempDescZEx( (uint8*)"surfacearea", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8825, 0 );
      }
      goto label$10195;
      label$10648:;
      if( TMP$4259$6 != 230ull ) goto label$10650;
      label$10651:;
      {
       FBSTRING* vr$8826 = fb_StrAllocTempDescZEx( (uint8*)"swap", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8826, 0 );
      }
      goto label$10195;
      label$10650:;
      if( TMP$4259$6 != 231ull ) goto label$10652;
      label$10653:;
      {
       FBSTRING* vr$8827 = fb_StrAllocTempDescZEx( (uint8*)"switch", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8827, 0 );
      }
      goto label$10195;
      label$10652:;
      if( TMP$4259$6 != 232ull ) goto label$10654;
      label$10655:;
      {
       FBSTRING* vr$8828 = fb_StrAllocTempDescZEx( (uint8*)"symbolic", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8828, 0 );
      }
      goto label$10195;
      label$10654:;
      if( TMP$4259$6 != 233ull ) goto label$10656;
      label$10657:;
      {
       FBSTRING* vr$8829 = fb_StrAllocTempDescZEx( (uint8*)"sync", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8829, 0 );
      }
      goto label$10195;
      label$10656:;
      if( TMP$4259$6 != 234ull ) goto label$10658;
      label$10659:;
      {
       FBSTRING* vr$8830 = fb_StrAllocTempDescZEx( (uint8*)"synchronized", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8830, 0 );
      }
      goto label$10195;
      label$10658:;
      if( TMP$4259$6 != 235ull ) goto label$10660;
      label$10661:;
      {
       FBSTRING* vr$8831 = fb_StrAllocTempDescZEx( (uint8*)"sys", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8831, 0 );
      }
      goto label$10195;
      label$10660:;
      if( TMP$4259$6 != 236ull ) goto label$10662;
      label$10663:;
      {
       FBSTRING* vr$8832 = fb_StrAllocTempDescZEx( (uint8*)"system", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8832, 0 );
      }
      goto label$10195;
      label$10662:;
      if( TMP$4259$6 != 237ull ) goto label$10664;
      label$10665:;
      {
       FBSTRING* vr$8833 = fb_StrAllocTempDescZEx( (uint8*)"t", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$8833, 0 );
      }
      goto label$10195;
      label$10664:;
      if( TMP$4259$6 != 238ull ) goto label$10666;
      label$10667:;
      {
       FBSTRING* vr$8834 = fb_StrAllocTempDescZEx( (uint8*)"tab", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8834, 0 );
      }
      goto label$10195;
      label$10666:;
      if( TMP$4259$6 != 239ull ) goto label$10668;
      label$10669:;
      {
       FBSTRING* vr$8835 = fb_StrAllocTempDescZEx( (uint8*)"table", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8835, 0 );
      }
      goto label$10195;
      label$10668:;
      if( TMP$4259$6 != 240ull ) goto label$10670;
      label$10671:;
      {
       FBSTRING* vr$8836 = fb_StrAllocTempDescZEx( (uint8*)"tally", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8836, 0 );
      }
      goto label$10195;
      label$10670:;
      if( TMP$4259$6 != 241ull ) goto label$10672;
      label$10673:;
      {
       FBSTRING* vr$8837 = fb_StrAllocTempDescZEx( (uint8*)"tallying", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8837, 0 );
      }
      goto label$10195;
      label$10672:;
      if( TMP$4259$6 != 242ull ) goto label$10674;
      label$10675:;
      {
       FBSTRING* vr$8838 = fb_StrAllocTempDescZEx( (uint8*)"tan", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8838, 0 );
      }
      goto label$10195;
      label$10674:;
      if( TMP$4259$6 != 243ull ) goto label$10676;
      label$10677:;
      {
       FBSTRING* vr$8839 = fb_StrAllocTempDescZEx( (uint8*)"tanh", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8839, 0 );
      }
      goto label$10195;
      label$10676:;
      if( TMP$4259$6 != 244ull ) goto label$10678;
      label$10679:;
      {
       FBSTRING* vr$8840 = fb_StrAllocTempDescZEx( (uint8*)"tape", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8840, 0 );
      }
      goto label$10195;
      label$10678:;
      if( TMP$4259$6 != 245ull ) goto label$10680;
      label$10681:;
      {
       FBSTRING* vr$8841 = fb_StrAllocTempDescZEx( (uint8*)"target", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8841, 0 );
      }
      goto label$10195;
      label$10680:;
      if( TMP$4259$6 != 246ull ) goto label$10682;
      label$10683:;
      {
       FBSTRING* vr$8842 = fb_StrAllocTempDescZEx( (uint8*)"template", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8842, 0 );
      }
      goto label$10195;
      label$10682:;
      if( TMP$4259$6 != 247ull ) goto label$10684;
      label$10685:;
      {
       FBSTRING* vr$8843 = fb_StrAllocTempDescZEx( (uint8*)"term", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8843, 0 );
      }
      goto label$10195;
      label$10684:;
      if( TMP$4259$6 != 248ull ) goto label$10686;
      label$10687:;
      {
       FBSTRING* vr$8844 = fb_StrAllocTempDescZEx( (uint8*)"terminal", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8844, 0 );
      }
      goto label$10195;
      label$10686:;
      if( TMP$4259$6 != 249ull ) goto label$10688;
      label$10689:;
      {
       FBSTRING* vr$8845 = fb_StrAllocTempDescZEx( (uint8*)"terminate", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8845, 0 );
      }
      goto label$10195;
      label$10688:;
      if( TMP$4259$6 != 250ull ) goto label$10690;
      label$10691:;
      {
       FBSTRING* vr$8846 = fb_StrAllocTempDescZEx( (uint8*)"test", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8846, 0 );
      }
      goto label$10195;
      label$10690:;
      if( TMP$4259$6 != 251ull ) goto label$10692;
      label$10693:;
      {
       FBSTRING* vr$8847 = fb_StrAllocTempDescZEx( (uint8*)"text", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8847, 0 );
      }
      goto label$10195;
      label$10692:;
      if( TMP$4259$6 != 252ull ) goto label$10694;
      label$10695:;
      {
       FBSTRING* vr$8848 = fb_StrAllocTempDescZEx( (uint8*)"texture", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8848, 0 );
      }
      goto label$10195;
      label$10694:;
      if( TMP$4259$6 != 253ull ) goto label$10696;
      label$10697:;
      {
       FBSTRING* vr$8849 = fb_StrAllocTempDescZEx( (uint8*)"texture3d", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8849, 0 );
      }
      goto label$10195;
      label$10696:;
      if( TMP$4259$6 != 254ull ) goto label$10698;
      label$10699:;
      {
       FBSTRING* vr$8850 = fb_StrAllocTempDescZEx( (uint8*)"texture_list", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8850, 0 );
      }
      goto label$10195;
      label$10698:;
      if( TMP$4259$6 != 255ull ) goto label$10700;
      label$10701:;
      {
       FBSTRING* vr$8851 = fb_StrAllocTempDescZEx( (uint8*)"texture_map", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8851, 0 );
      }
      label$10700:;
      label$10195:;
     }
    }
    goto label$9040;
    label$10702:;
    {
     {
      uint64 TMP$4510$6;
      TMP$4510$6 = ((uint64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394888ll) ));
      goto label$10704;
      label$10705:;
      {
       FBSTRING* vr$8853 = fb_StrAllocTempDescZEx( (uint8*)"tga", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8853, 0 );
      }
      goto label$10703;
      label$10706:;
      {
       FBSTRING* vr$8854 = fb_StrAllocTempDescZEx( (uint8*)"than", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8854, 0 );
      }
      goto label$10703;
      label$10707:;
      {
       FBSTRING* vr$8855 = fb_StrAllocTempDescZEx( (uint8*)"then", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8855, 0 );
      }
      goto label$10703;
      label$10708:;
      {
       FBSTRING* vr$8856 = fb_StrAllocTempDescZEx( (uint8*)"thickness", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8856, 0 );
      }
      goto label$10703;
      label$10709:;
      {
       FBSTRING* vr$8857 = fb_StrAllocTempDescZEx( (uint8*)"this", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8857, 0 );
      }
      goto label$10703;
      label$10710:;
      {
       FBSTRING* vr$8858 = fb_StrAllocTempDescZEx( (uint8*)"threadvar", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8858, 0 );
      }
      goto label$10703;
      label$10711:;
      {
       FBSTRING* vr$8859 = fb_StrAllocTempDescZEx( (uint8*)"threshold", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8859, 0 );
      }
      goto label$10703;
      label$10712:;
      {
       FBSTRING* vr$8860 = fb_StrAllocTempDescZEx( (uint8*)"through", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8860, 0 );
      }
      goto label$10703;
      label$10713:;
      {
       FBSTRING* vr$8861 = fb_StrAllocTempDescZEx( (uint8*)"thru", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8861, 0 );
      }
      goto label$10703;
      label$10714:;
      {
       FBSTRING* vr$8862 = fb_StrAllocTempDescZEx( (uint8*)"tiff", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8862, 0 );
      }
      goto label$10703;
      label$10715:;
      {
       FBSTRING* vr$8863 = fb_StrAllocTempDescZEx( (uint8*)"tightness", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8863, 0 );
      }
      goto label$10703;
      label$10716:;
      {
       FBSTRING* vr$8864 = fb_StrAllocTempDescZEx( (uint8*)"tile2", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8864, 0 );
      }
      goto label$10703;
      label$10717:;
      {
       FBSTRING* vr$8865 = fb_StrAllocTempDescZEx( (uint8*)"tiles", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8865, 0 );
      }
      goto label$10703;
      label$10718:;
      {
       FBSTRING* vr$8866 = fb_StrAllocTempDescZEx( (uint8*)"time", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8866, 0 );
      }
      goto label$10703;
      label$10719:;
      {
       FBSTRING* vr$8867 = fb_StrAllocTempDescZEx( (uint8*)"timer", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8867, 0 );
      }
      goto label$10703;
      label$10720:;
      {
       FBSTRING* vr$8868 = fb_StrAllocTempDescZEx( (uint8*)"times", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8868, 0 );
      }
      goto label$10703;
      label$10721:;
      {
       FBSTRING* vr$8869 = fb_StrAllocTempDescZEx( (uint8*)"timestamp", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8869, 0 );
      }
      goto label$10703;
      label$10722:;
      {
       FBSTRING* vr$8870 = fb_StrAllocTempDescZEx( (uint8*)"timesten", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8870, 0 );
      }
      goto label$10703;
      label$10723:;
      {
       FBSTRING* vr$8871 = fb_StrAllocTempDescZEx( (uint8*)"title", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8871, 0 );
      }
      goto label$10703;
      label$10724:;
      {
       FBSTRING* vr$8872 = fb_StrAllocTempDescZEx( (uint8*)"to", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8872, 0 );
      }
      goto label$10703;
      label$10725:;
      {
       FBSTRING* vr$8873 = fb_StrAllocTempDescZEx( (uint8*)"tolerance", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8873, 0 );
      }
      goto label$10703;
      label$10726:;
      {
       FBSTRING* vr$8874 = fb_StrAllocTempDescZEx( (uint8*)"top", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8874, 0 );
      }
      goto label$10703;
      label$10727:;
      {
       FBSTRING* vr$8875 = fb_StrAllocTempDescZEx( (uint8*)"toroidal", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8875, 0 );
      }
      goto label$10703;
      label$10728:;
      {
       FBSTRING* vr$8876 = fb_StrAllocTempDescZEx( (uint8*)"torus", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8876, 0 );
      }
      goto label$10703;
      label$10729:;
      {
       FBSTRING* vr$8877 = fb_StrAllocTempDescZEx( (uint8*)"trace", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8877, 0 );
      }
      goto label$10703;
      label$10730:;
      {
       FBSTRING* vr$8878 = fb_StrAllocTempDescZEx( (uint8*)"trailing", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8878, 0 );
      }
      goto label$10703;
      label$10731:;
      {
       FBSTRING* vr$8879 = fb_StrAllocTempDescZEx( (uint8*)"transform", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8879, 0 );
      }
      goto label$10703;
      label$10732:;
      {
       FBSTRING* vr$8880 = fb_StrAllocTempDescZEx( (uint8*)"transformc", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8880, 0 );
      }
      goto label$10703;
      label$10733:;
      {
       FBSTRING* vr$8881 = fb_StrAllocTempDescZEx( (uint8*)"transformu", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8881, 0 );
      }
      goto label$10703;
      label$10734:;
      {
       FBSTRING* vr$8882 = fb_StrAllocTempDescZEx( (uint8*)"translate", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8882, 0 );
      }
      goto label$10703;
      label$10735:;
      {
       FBSTRING* vr$8883 = fb_StrAllocTempDescZEx( (uint8*)"translucent", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8883, 0 );
      }
      goto label$10703;
      label$10736:;
      {
       FBSTRING* vr$8884 = fb_StrAllocTempDescZEx( (uint8*)"transmit", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8884, 0 );
      }
      goto label$10703;
      label$10737:;
      {
       FBSTRING* vr$8885 = fb_StrAllocTempDescZEx( (uint8*)"transparent", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8885, 0 );
      }
      goto label$10703;
      label$10738:;
      {
       FBSTRING* vr$8886 = fb_StrAllocTempDescZEx( (uint8*)"transpose", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8886, 0 );
      }
      goto label$10703;
      label$10739:;
      {
       FBSTRING* vr$8887 = fb_StrAllocTempDescZEx( (uint8*)"triangle", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8887, 0 );
      }
      goto label$10703;
      label$10740:;
      {
       FBSTRING* vr$8888 = fb_StrAllocTempDescZEx( (uint8*)"triangle_wave", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8888, 0 );
      }
      goto label$10703;
      label$10741:;
      {
       FBSTRING* vr$8889 = fb_StrAllocTempDescZEx( (uint8*)"trim", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8889, 0 );
      }
      goto label$10703;
      label$10742:;
      {
       FBSTRING* vr$8890 = fb_StrAllocTempDescZEx( (uint8*)"trim_b", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8890, 0 );
      }
      goto label$10703;
      label$10743:;
      {
       FBSTRING* vr$8891 = fb_StrAllocTempDescZEx( (uint8*)"trim_mb", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8891, 0 );
      }
      goto label$10703;
      label$10744:;
      {
       FBSTRING* vr$8892 = fb_StrAllocTempDescZEx( (uint8*)"troff", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8892, 0 );
      }
      goto label$10703;
      label$10745:;
      {
       FBSTRING* vr$8893 = fb_StrAllocTempDescZEx( (uint8*)"tron", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8893, 0 );
      }
      goto label$10703;
      label$10746:;
      {
       FBSTRING* vr$8894 = fb_StrAllocTempDescZEx( (uint8*)"true", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8894, 0 );
      }
      goto label$10703;
      label$10747:;
      {
       FBSTRING* vr$8895 = fb_StrAllocTempDescZEx( (uint8*)"trunc", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8895, 0 );
      }
      goto label$10703;
      label$10748:;
      {
       FBSTRING* vr$8896 = fb_StrAllocTempDescZEx( (uint8*)"try", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8896, 0 );
      }
      goto label$10703;
      label$10749:;
      {
       FBSTRING* vr$8897 = fb_StrAllocTempDescZEx( (uint8*)"ttf", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8897, 0 );
      }
      goto label$10703;
      label$10750:;
      {
       FBSTRING* vr$8898 = fb_StrAllocTempDescZEx( (uint8*)"turb_depth", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8898, 0 );
      }
      goto label$10703;
      label$10751:;
      {
       FBSTRING* vr$8899 = fb_StrAllocTempDescZEx( (uint8*)"turbulence", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8899, 0 );
      }
      goto label$10703;
      label$10752:;
      {
       FBSTRING* vr$8900 = fb_StrAllocTempDescZEx( (uint8*)"type", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8900, 0 );
      }
      goto label$10703;
      label$10753:;
      {
       FBSTRING* vr$8901 = fb_StrAllocTempDescZEx( (uint8*)"typedef", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8901, 0 );
      }
      goto label$10703;
      label$10754:;
      {
       FBSTRING* vr$8902 = fb_StrAllocTempDescZEx( (uint8*)"u", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$8902, 0 );
      }
      goto label$10703;
      label$10755:;
      {
       FBSTRING* vr$8903 = fb_StrAllocTempDescZEx( (uint8*)"uimage1D", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8903, 0 );
      }
      goto label$10703;
      label$10756:;
      {
       FBSTRING* vr$8904 = fb_StrAllocTempDescZEx( (uint8*)"uimage1DArray", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8904, 0 );
      }
      goto label$10703;
      label$10757:;
      {
       FBSTRING* vr$8905 = fb_StrAllocTempDescZEx( (uint8*)"uimage2D", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8905, 0 );
      }
      goto label$10703;
      label$10758:;
      {
       FBSTRING* vr$8906 = fb_StrAllocTempDescZEx( (uint8*)"uimage2DArray", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8906, 0 );
      }
      goto label$10703;
      label$10759:;
      {
       FBSTRING* vr$8907 = fb_StrAllocTempDescZEx( (uint8*)"uimage3D", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8907, 0 );
      }
      goto label$10703;
      label$10760:;
      {
       FBSTRING* vr$8908 = fb_StrAllocTempDescZEx( (uint8*)"uimageBuffer", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8908, 0 );
      }
      goto label$10703;
      label$10761:;
      {
       FBSTRING* vr$8909 = fb_StrAllocTempDescZEx( (uint8*)"uimageCube", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8909, 0 );
      }
      goto label$10703;
      label$10762:;
      {
       FBSTRING* vr$8910 = fb_StrAllocTempDescZEx( (uint8*)"uint", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8910, 0 );
      }
      goto label$10703;
      label$10763:;
      {
       FBSTRING* vr$8911 = fb_StrAllocTempDescZEx( (uint8*)"ultra_wide_angle", 16ll );
       fb_PrintString( 1, (FBSTRING*)vr$8911, 0 );
      }
      goto label$10703;
      label$10764:;
      {
       FBSTRING* vr$8912 = fb_StrAllocTempDescZEx( (uint8*)"undef", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8912, 0 );
      }
      goto label$10703;
      label$10765:;
      {
       FBSTRING* vr$8913 = fb_StrAllocTempDescZEx( (uint8*)"uniform", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8913, 0 );
      }
      goto label$10703;
      label$10766:;
      {
       FBSTRING* vr$8914 = fb_StrAllocTempDescZEx( (uint8*)"union", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8914, 0 );
      }
      goto label$10703;
      label$10767:;
      {
       FBSTRING* vr$8915 = fb_StrAllocTempDescZEx( (uint8*)"unit", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8915, 0 );
      }
      goto label$10703;
      label$10768:;
      {
       FBSTRING* vr$8916 = fb_StrAllocTempDescZEx( (uint8*)"unknown", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8916, 0 );
      }
      goto label$10703;
      label$10769:;
      {
       FBSTRING* vr$8917 = fb_StrAllocTempDescZEx( (uint8*)"unlock", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8917, 0 );
      }
      goto label$10703;
      label$10770:;
      {
       FBSTRING* vr$8918 = fb_StrAllocTempDescZEx( (uint8*)"unsigned", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8918, 0 );
      }
      goto label$10703;
      label$10771:;
      {
       FBSTRING* vr$8919 = fb_StrAllocTempDescZEx( (uint8*)"unstring", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8919, 0 );
      }
      goto label$10703;
      label$10772:;
      {
       FBSTRING* vr$8920 = fb_StrAllocTempDescZEx( (uint8*)"until", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8920, 0 );
      }
      goto label$10703;
      label$10773:;
      {
       FBSTRING* vr$8921 = fb_StrAllocTempDescZEx( (uint8*)"up", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8921, 0 );
      }
      goto label$10703;
      label$10774:;
      {
       FBSTRING* vr$8922 = fb_StrAllocTempDescZEx( (uint8*)"update", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8922, 0 );
      }
      goto label$10703;
      label$10775:;
      {
       FBSTRING* vr$8923 = fb_StrAllocTempDescZEx( (uint8*)"upon", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8923, 0 );
      }
      goto label$10703;
      label$10776:;
      {
       FBSTRING* vr$8924 = fb_StrAllocTempDescZEx( (uint8*)"upper", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8924, 0 );
      }
      goto label$10703;
      label$10777:;
      {
       FBSTRING* vr$8925 = fb_StrAllocTempDescZEx( (uint8*)"upper_mb", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8925, 0 );
      }
      goto label$10703;
      label$10778:;
      {
       FBSTRING* vr$8926 = fb_StrAllocTempDescZEx( (uint8*)"usage", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8926, 0 );
      }
      goto label$10703;
      label$10779:;
      {
       FBSTRING* vr$8927 = fb_StrAllocTempDescZEx( (uint8*)"usampler1D", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8927, 0 );
      }
      goto label$10703;
      label$10780:;
      {
       FBSTRING* vr$8928 = fb_StrAllocTempDescZEx( (uint8*)"usampler1DArray", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$8928, 0 );
      }
      goto label$10703;
      label$10781:;
      {
       FBSTRING* vr$8929 = fb_StrAllocTempDescZEx( (uint8*)"usampler2D", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8929, 0 );
      }
      goto label$10703;
      label$10782:;
      {
       FBSTRING* vr$8930 = fb_StrAllocTempDescZEx( (uint8*)"usampler2DArray", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$8930, 0 );
      }
      goto label$10703;
      label$10783:;
      {
       FBSTRING* vr$8931 = fb_StrAllocTempDescZEx( (uint8*)"usampler2drect", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$8931, 0 );
      }
      goto label$10703;
      label$10784:;
      {
       FBSTRING* vr$8932 = fb_StrAllocTempDescZEx( (uint8*)"usampler3D", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8932, 0 );
      }
      goto label$10703;
      label$10785:;
      {
       FBSTRING* vr$8933 = fb_StrAllocTempDescZEx( (uint8*)"usamplerBufferStruct", 20ll );
       fb_PrintString( 1, (FBSTRING*)vr$8933, 0 );
      }
      goto label$10703;
      label$10786:;
      {
       FBSTRING* vr$8934 = fb_StrAllocTempDescZEx( (uint8*)"usamplerCube", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8934, 0 );
      }
      goto label$10703;
      label$10787:;
      {
       FBSTRING* vr$8935 = fb_StrAllocTempDescZEx( (uint8*)"use", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8935, 0 );
      }
      goto label$10703;
      label$10788:;
      {
       FBSTRING* vr$8936 = fb_StrAllocTempDescZEx( (uint8*)"use_alpha", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8936, 0 );
      }
      goto label$10703;
      label$10789:;
      {
       FBSTRING* vr$8937 = fb_StrAllocTempDescZEx( (uint8*)"use_color", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8937, 0 );
      }
      goto label$10703;
      label$10790:;
      {
       FBSTRING* vr$8938 = fb_StrAllocTempDescZEx( (uint8*)"use_colour", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8938, 0 );
      }
      goto label$10703;
      label$10791:;
      {
       FBSTRING* vr$8939 = fb_StrAllocTempDescZEx( (uint8*)"use_index", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8939, 0 );
      }
      goto label$10703;
      label$10792:;
      {
       FBSTRING* vr$8940 = fb_StrAllocTempDescZEx( (uint8*)"uses", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8940, 0 );
      }
      goto label$10703;
      label$10793:;
      {
       FBSTRING* vr$8941 = fb_StrAllocTempDescZEx( (uint8*)"using", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8941, 0 );
      }
      goto label$10703;
      label$10794:;
      {
       FBSTRING* vr$8942 = fb_StrAllocTempDescZEx( (uint8*)"usr", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8942, 0 );
      }
      goto label$10703;
      label$10795:;
      {
       FBSTRING* vr$8943 = fb_StrAllocTempDescZEx( (uint8*)"u_steps", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8943, 0 );
      }
      goto label$10703;
      label$10796:;
      {
       FBSTRING* vr$8944 = fb_StrAllocTempDescZEx( (uint8*)"utf8", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8944, 0 );
      }
      goto label$10703;
      label$10797:;
      {
       FBSTRING* vr$8945 = fb_StrAllocTempDescZEx( (uint8*)"utf16", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8945, 0 );
      }
      goto label$10703;
      label$10798:;
      {
       FBSTRING* vr$8946 = fb_StrAllocTempDescZEx( (uint8*)"utf32", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8946, 0 );
      }
      goto label$10703;
      label$10799:;
      {
       FBSTRING* vr$8947 = fb_StrAllocTempDescZEx( (uint8*)"uvec2", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8947, 0 );
      }
      goto label$10703;
      label$10800:;
      {
       FBSTRING* vr$8948 = fb_StrAllocTempDescZEx( (uint8*)"uvec3", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8948, 0 );
      }
      goto label$10703;
      label$10801:;
      {
       FBSTRING* vr$8949 = fb_StrAllocTempDescZEx( (uint8*)"uvec4", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8949, 0 );
      }
      goto label$10703;
      label$10802:;
      {
       FBSTRING* vr$8950 = fb_StrAllocTempDescZEx( (uint8*)"uv_indices", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8950, 0 );
      }
      goto label$10703;
      label$10803:;
      {
       FBSTRING* vr$8951 = fb_StrAllocTempDescZEx( (uint8*)"uv_mapping", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8951, 0 );
      }
      goto label$10703;
      label$10804:;
      {
       FBSTRING* vr$8952 = fb_StrAllocTempDescZEx( (uint8*)"uv_vectors", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8952, 0 );
      }
      goto label$10703;
      label$10805:;
      {
       FBSTRING* vr$8953 = fb_StrAllocTempDescZEx( (uint8*)"v", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$8953, 0 );
      }
      goto label$10703;
      label$10806:;
      {
       FBSTRING* vr$8954 = fb_StrAllocTempDescZEx( (uint8*)"val", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8954, 0 );
      }
      goto label$10703;
      label$10807:;
      {
       FBSTRING* vr$8955 = fb_StrAllocTempDescZEx( (uint8*)"value", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8955, 0 );
      }
      goto label$10703;
      label$10808:;
      {
       FBSTRING* vr$8956 = fb_StrAllocTempDescZEx( (uint8*)"values", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8956, 0 );
      }
      goto label$10703;
      label$10809:;
      {
       FBSTRING* vr$8957 = fb_StrAllocTempDescZEx( (uint8*)"var", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8957, 0 );
      }
      goto label$10703;
      label$10810:;
      {
       FBSTRING* vr$8958 = fb_StrAllocTempDescZEx( (uint8*)"varchar", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8958, 0 );
      }
      goto label$10703;
      label$10811:;
      {
       FBSTRING* vr$8959 = fb_StrAllocTempDescZEx( (uint8*)"variance", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8959, 0 );
      }
      goto label$10703;
      label$10812:;
      {
       FBSTRING* vr$8960 = fb_StrAllocTempDescZEx( (uint8*)"varptr", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8960, 0 );
      }
      goto label$10703;
      label$10813:;
      {
       FBSTRING* vr$8961 = fb_StrAllocTempDescZEx( (uint8*)"varying", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8961, 0 );
      }
      goto label$10703;
      label$10814:;
      {
       FBSTRING* vr$8962 = fb_StrAllocTempDescZEx( (uint8*)"vaxis_rotate", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8962, 0 );
      }
      goto label$10703;
      label$10815:;
      {
       FBSTRING* vr$8963 = fb_StrAllocTempDescZEx( (uint8*)"vcross", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8963, 0 );
      }
      goto label$10703;
      label$10816:;
      {
       FBSTRING* vr$8964 = fb_StrAllocTempDescZEx( (uint8*)"vdot", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8964, 0 );
      }
      goto label$10703;
      label$10817:;
      {
       FBSTRING* vr$8965 = fb_StrAllocTempDescZEx( (uint8*)"vec2", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8965, 0 );
      }
      goto label$10703;
      label$10818:;
      {
       FBSTRING* vr$8966 = fb_StrAllocTempDescZEx( (uint8*)"vec3", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8966, 0 );
      }
      goto label$10703;
      label$10819:;
      {
       FBSTRING* vr$8967 = fb_StrAllocTempDescZEx( (uint8*)"vec4", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8967, 0 );
      }
      goto label$10703;
      label$10820:;
      {
       FBSTRING* vr$8968 = fb_StrAllocTempDescZEx( (uint8*)"vector", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8968, 0 );
      }
      goto label$10703;
      label$10821:;
      {
       FBSTRING* vr$8969 = fb_StrAllocTempDescZEx( (uint8*)"version", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8969, 0 );
      }
      goto label$10703;
      label$10822:;
      {
       FBSTRING* vr$8970 = fb_StrAllocTempDescZEx( (uint8*)"vertex_vectors", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$8970, 0 );
      }
      goto label$10703;
      label$10823:;
      {
       FBSTRING* vr$8971 = fb_StrAllocTempDescZEx( (uint8*)"view", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8971, 0 );
      }
      goto label$10703;
      label$10824:;
      {
       FBSTRING* vr$8972 = fb_StrAllocTempDescZEx( (uint8*)"virtual", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8972, 0 );
      }
      goto label$10703;
      label$10825:;
      {
       FBSTRING* vr$8973 = fb_StrAllocTempDescZEx( (uint8*)"vlength", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8973, 0 );
      }
      goto label$10703;
      label$10826:;
      {
       FBSTRING* vr$8974 = fb_StrAllocTempDescZEx( (uint8*)"vnormalize", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8974, 0 );
      }
      goto label$10703;
      label$10827:;
      {
       FBSTRING* vr$8975 = fb_StrAllocTempDescZEx( (uint8*)"void", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8975, 0 );
      }
      goto label$10703;
      label$10828:;
      {
       FBSTRING* vr$8976 = fb_StrAllocTempDescZEx( (uint8*)"volatile", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8976, 0 );
      }
      goto label$10703;
      label$10829:;
      {
       FBSTRING* vr$8977 = fb_StrAllocTempDescZEx( (uint8*)"vrotate", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8977, 0 );
      }
      goto label$10703;
      label$10830:;
      {
       FBSTRING* vr$8978 = fb_StrAllocTempDescZEx( (uint8*)"v_steps", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8978, 0 );
      }
      goto label$10703;
      label$10831:;
      {
       FBSTRING* vr$8979 = fb_StrAllocTempDescZEx( (uint8*)"vstr", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8979, 0 );
      }
      goto label$10703;
      label$10832:;
      {
       FBSTRING* vr$8980 = fb_StrAllocTempDescZEx( (uint8*)"vturbulence", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8980, 0 );
      }
      goto label$10703;
      label$10833:;
      {
       FBSTRING* vr$8981 = fb_StrAllocTempDescZEx( (uint8*)"w", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$8981, 0 );
      }
      goto label$10703;
      label$10834:;
      {
       FBSTRING* vr$8982 = fb_StrAllocTempDescZEx( (uint8*)"wait", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8982, 0 );
      }
      goto label$10703;
      label$10835:;
      {
       FBSTRING* vr$8983 = fb_StrAllocTempDescZEx( (uint8*)"ward", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8983, 0 );
      }
      goto label$10703;
      label$10836:;
      {
       FBSTRING* vr$8984 = fb_StrAllocTempDescZEx( (uint8*)"warning", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8984, 0 );
      }
      goto label$10703;
      label$10837:;
      {
       FBSTRING* vr$8985 = fb_StrAllocTempDescZEx( (uint8*)"warp", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8985, 0 );
      }
      goto label$10703;
      label$10838:;
      {
       FBSTRING* vr$8986 = fb_StrAllocTempDescZEx( (uint8*)"water_level", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8986, 0 );
      }
      goto label$10703;
      label$10839:;
      {
       FBSTRING* vr$8987 = fb_StrAllocTempDescZEx( (uint8*)"wavelength_color", 16ll );
       fb_PrintString( 1, (FBSTRING*)vr$8987, 0 );
      }
      goto label$10703;
      label$10840:;
      {
       FBSTRING* vr$8988 = fb_StrAllocTempDescZEx( (uint8*)"waves", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8988, 0 );
      }
      goto label$10703;
      label$10841:;
      {
       FBSTRING* vr$8989 = fb_StrAllocTempDescZEx( (uint8*)"wend", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8989, 0 );
      }
      goto label$10703;
      label$10842:;
      {
       FBSTRING* vr$8990 = fb_StrAllocTempDescZEx( (uint8*)"when", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8990, 0 );
      }
      goto label$10703;
      label$10843:;
      {
       FBSTRING* vr$8991 = fb_StrAllocTempDescZEx( (uint8*)"when-compiled", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8991, 0 );
      }
      goto label$10703;
      label$10844:;
      {
       FBSTRING* vr$8992 = fb_StrAllocTempDescZEx( (uint8*)"where", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8992, 0 );
      }
      goto label$10703;
      label$10845:;
      {
       FBSTRING* vr$8993 = fb_StrAllocTempDescZEx( (uint8*)"while", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8993, 0 );
      }
      goto label$10703;
      label$10846:;
      {
       FBSTRING* vr$8994 = fb_StrAllocTempDescZEx( (uint8*)"width", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8994, 0 );
      }
      goto label$10703;
      label$10847:;
      {
       FBSTRING* vr$8995 = fb_StrAllocTempDescZEx( (uint8*)"window", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8995, 0 );
      }
      goto label$10703;
      label$10848:;
      {
       FBSTRING* vr$8996 = fb_StrAllocTempDescZEx( (uint8*)"with", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8996, 0 );
      }
      goto label$10703;
      label$10849:;
      {
       FBSTRING* vr$8997 = fb_StrAllocTempDescZEx( (uint8*)"wood", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8997, 0 );
      }
      goto label$10703;
      label$10850:;
      {
       FBSTRING* vr$8998 = fb_StrAllocTempDescZEx( (uint8*)"words", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8998, 0 );
      }
      goto label$10703;
      label$10851:;
      {
       FBSTRING* vr$8999 = fb_StrAllocTempDescZEx( (uint8*)"working-storage", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$8999, 0 );
      }
      goto label$10703;
      label$10852:;
      {
       FBSTRING* vr$9000 = fb_StrAllocTempDescZEx( (uint8*)"wrinkles", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9000, 0 );
      }
      goto label$10703;
      label$10853:;
      {
       FBSTRING* vr$9001 = fb_StrAllocTempDescZEx( (uint8*)"write", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9001, 0 );
      }
      goto label$10703;
      label$10854:;
      {
       FBSTRING* vr$9002 = fb_StrAllocTempDescZEx( (uint8*)"write-only", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9002, 0 );
      }
      goto label$10703;
      label$10855:;
      {
       FBSTRING* vr$9003 = fb_StrAllocTempDescZEx( (uint8*)"x", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$9003, 0 );
      }
      goto label$10703;
      label$10856:;
      {
       FBSTRING* vr$9004 = fb_StrAllocTempDescZEx( (uint8*)"xor", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9004, 0 );
      }
      goto label$10703;
      label$10857:;
      {
       FBSTRING* vr$9005 = fb_StrAllocTempDescZEx( (uint8*)"xor_bits", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9005, 0 );
      }
      goto label$10703;
      label$10858:;
      {
       FBSTRING* vr$9006 = fb_StrAllocTempDescZEx( (uint8*)"y", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$9006, 1 );
      }
      goto label$10703;
      label$10859:;
      {
       FBSTRING* vr$9007 = fb_StrAllocTempDescZEx( (uint8*)"year", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9007, 0 );
      }
      goto label$10703;
      label$10860:;
      {
       FBSTRING* vr$9008 = fb_StrAllocTempDescZEx( (uint8*)"yes", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9008, 0 );
      }
      goto label$10703;
      label$10861:;
      {
       FBSTRING* vr$9009 = fb_StrAllocTempDescZEx( (uint8*)"yield", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9009, 0 );
      }
      goto label$10703;
      label$10862:;
      {
       FBSTRING* vr$9010 = fb_StrAllocTempDescZEx( (uint8*)"z", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$9010, 0 );
      }
      goto label$10703;
      label$10863:;
      {
       FBSTRING* vr$9011 = fb_StrAllocTempDescZEx( (uint8*)"zero", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9011, 0 );
      }
      goto label$10703;
      label$10864:;
      {
       FBSTRING* vr$9012 = fb_StrAllocTempDescZEx( (uint8*)"zeroes", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9012, 0 );
      }
      goto label$10703;
      label$10865:;
      {
       FBSTRING* vr$9013 = fb_StrAllocTempDescZEx( (uint8*)"zeros", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9013, 0 );
      }
      goto label$10703;
      label$10704:;
      static const void* tmp$5320[162ll] = {
       &&label$10705,
       &&label$10706,
       &&label$10707,
       &&label$10708,
       &&label$10709,
       &&label$10710,
       &&label$10711,
       &&label$10712,
       &&label$10713,
       &&label$10714,
       &&label$10715,
       &&label$10716,
       &&label$10717,
       &&label$10718,
       &&label$10703,
       &&label$10719,
       &&label$10720,
       &&label$10721,
       &&label$10722,
       &&label$10723,
       &&label$10724,
       &&label$10725,
       &&label$10726,
       &&label$10727,
       &&label$10728,
       &&label$10729,
       &&label$10730,
       &&label$10731,
       &&label$10732,
       &&label$10733,
       &&label$10734,
       &&label$10735,
       &&label$10736,
       &&label$10737,
       &&label$10738,
       &&label$10739,
       &&label$10740,
       &&label$10741,
       &&label$10742,
       &&label$10743,
       &&label$10744,
       &&label$10745,
       &&label$10746,
       &&label$10747,
       &&label$10748,
       &&label$10749,
       &&label$10750,
       &&label$10751,
       &&label$10752,
       &&label$10753,
       &&label$10754,
       &&label$10755,
       &&label$10756,
       &&label$10757,
       &&label$10758,
       &&label$10759,
       &&label$10760,
       &&label$10761,
       &&label$10762,
       &&label$10763,
       &&label$10764,
       &&label$10765,
       &&label$10766,
       &&label$10767,
       &&label$10768,
       &&label$10769,
       &&label$10770,
       &&label$10771,
       &&label$10772,
       &&label$10773,
       &&label$10774,
       &&label$10775,
       &&label$10776,
       &&label$10777,
       &&label$10778,
       &&label$10779,
       &&label$10780,
       &&label$10781,
       &&label$10782,
       &&label$10783,
       &&label$10784,
       &&label$10785,
       &&label$10786,
       &&label$10787,
       &&label$10788,
       &&label$10789,
       &&label$10790,
       &&label$10791,
       &&label$10792,
       &&label$10793,
       &&label$10794,
       &&label$10795,
       &&label$10796,
       &&label$10797,
       &&label$10798,
       &&label$10799,
       &&label$10800,
       &&label$10801,
       &&label$10802,
       &&label$10803,
       &&label$10804,
       &&label$10805,
       &&label$10806,
       &&label$10807,
       &&label$10808,
       &&label$10809,
       &&label$10810,
       &&label$10811,
       &&label$10812,
       &&label$10813,
       &&label$10814,
       &&label$10815,
       &&label$10816,
       &&label$10817,
       &&label$10818,
       &&label$10819,
       &&label$10820,
       &&label$10821,
       &&label$10822,
       &&label$10823,
       &&label$10824,
       &&label$10825,
       &&label$10826,
       &&label$10827,
       &&label$10828,
       &&label$10829,
       &&label$10830,
       &&label$10831,
       &&label$10832,
       &&label$10833,
       &&label$10834,
       &&label$10835,
       &&label$10836,
       &&label$10837,
       &&label$10838,
       &&label$10839,
       &&label$10840,
       &&label$10841,
       &&label$10842,
       &&label$10843,
       &&label$10844,
       &&label$10845,
       &&label$10846,
       &&label$10847,
       &&label$10848,
       &&label$10849,
       &&label$10850,
       &&label$10851,
       &&label$10852,
       &&label$10853,
       &&label$10854,
       &&label$10855,
       &&label$10856,
       &&label$10857,
       &&label$10858,
       &&label$10859,
       &&label$10860,
       &&label$10861,
       &&label$10862,
       &&label$10863,
       &&label$10864,
       &&label$10865,
      };
      if( TMP$4510$6 > 161ull ) goto label$10703;
      goto *tmp$5320[TMP$4510$6 - 0ull];
      label$10703:;
     }
    }
    goto label$9040;
    label$10866:;
    {
     {
      uint64 TMP$4666$6;
      TMP$4666$6 = ((uint64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394888ll) ));
      goto label$10868;
      label$10869:;
      {
       FBSTRING* vr$9015 = fb_StrAllocTempDescZEx( (uint8*)"buffer", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9015, 0 );
      }
      goto label$10867;
      label$10870:;
      {
       FBSTRING* vr$9016 = fb_StrAllocTempDescZEx( (uint8*)"shared", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9016, 0 );
      }
      goto label$10867;
      label$10871:;
      {
       FBSTRING* vr$9017 = fb_StrAllocTempDescZEx( (uint8*)"coherent", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9017, 0 );
      }
      goto label$10867;
      label$10872:;
      {
       FBSTRING* vr$9018 = fb_StrAllocTempDescZEx( (uint8*)"restrict", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9018, 0 );
      }
      goto label$10867;
      label$10873:;
      {
       FBSTRING* vr$9019 = fb_StrAllocTempDescZEx( (uint8*)"readonly", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9019, 0 );
      }
      goto label$10867;
      label$10874:;
      {
       FBSTRING* vr$9020 = fb_StrAllocTempDescZEx( (uint8*)"writeonly", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9020, 0 );
      }
      goto label$10867;
      label$10875:;
      {
       FBSTRING* vr$9021 = fb_StrAllocTempDescZEx( (uint8*)"atomic_uint", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$9021, 0 );
      }
      goto label$10867;
      label$10876:;
      {
       FBSTRING* vr$9022 = fb_StrAllocTempDescZEx( (uint8*)"patch", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9022, 0 );
      }
      goto label$10867;
      label$10877:;
      {
       FBSTRING* vr$9023 = fb_StrAllocTempDescZEx( (uint8*)"sample", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9023, 0 );
      }
      goto label$10867;
      label$10878:;
      {
       FBSTRING* vr$9024 = fb_StrAllocTempDescZEx( (uint8*)"precise", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9024, 0 );
      }
      goto label$10867;
      label$10879:;
      {
       FBSTRING* vr$9025 = fb_StrAllocTempDescZEx( (uint8*)"dmat2", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9025, 0 );
      }
      goto label$10867;
      label$10880:;
      {
       FBSTRING* vr$9026 = fb_StrAllocTempDescZEx( (uint8*)"dmat3", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9026, 0 );
      }
      goto label$10867;
      label$10881:;
      {
       FBSTRING* vr$9027 = fb_StrAllocTempDescZEx( (uint8*)"dmat4", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9027, 0 );
      }
      goto label$10867;
      label$10882:;
      {
       FBSTRING* vr$9028 = fb_StrAllocTempDescZEx( (uint8*)"dmat2x2", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9028, 0 );
      }
      goto label$10867;
      label$10883:;
      {
       FBSTRING* vr$9029 = fb_StrAllocTempDescZEx( (uint8*)"dmat2x3", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9029, 0 );
      }
      goto label$10867;
      label$10884:;
      {
       FBSTRING* vr$9030 = fb_StrAllocTempDescZEx( (uint8*)"dmat2x4", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9030, 0 );
      }
      goto label$10867;
      label$10885:;
      {
       FBSTRING* vr$9031 = fb_StrAllocTempDescZEx( (uint8*)"dmat3x2", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9031, 0 );
      }
      goto label$10867;
      label$10886:;
      {
       FBSTRING* vr$9032 = fb_StrAllocTempDescZEx( (uint8*)"dmat3x3", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9032, 0 );
      }
      goto label$10867;
      label$10887:;
      {
       FBSTRING* vr$9033 = fb_StrAllocTempDescZEx( (uint8*)"dmat3x4", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9033, 0 );
      }
      goto label$10867;
      label$10888:;
      {
       FBSTRING* vr$9034 = fb_StrAllocTempDescZEx( (uint8*)"dmat4x2", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9034, 0 );
      }
      goto label$10867;
      label$10889:;
      {
       FBSTRING* vr$9035 = fb_StrAllocTempDescZEx( (uint8*)"dmat4x3", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9035, 0 );
      }
      goto label$10867;
      label$10890:;
      {
       FBSTRING* vr$9036 = fb_StrAllocTempDescZEx( (uint8*)"dmat4x4", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9036, 0 );
      }
      goto label$10867;
      label$10891:;
      {
       FBSTRING* vr$9037 = fb_StrAllocTempDescZEx( (uint8*)"image2DMS", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9037, 0 );
      }
      goto label$10867;
      label$10892:;
      {
       FBSTRING* vr$9038 = fb_StrAllocTempDescZEx( (uint8*)"iimage2DMS", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9038, 0 );
      }
      goto label$10867;
      label$10893:;
      {
       FBSTRING* vr$9039 = fb_StrAllocTempDescZEx( (uint8*)"uimage2DMS", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9039, 0 );
      }
      goto label$10867;
      label$10894:;
      {
       FBSTRING* vr$9040 = fb_StrAllocTempDescZEx( (uint8*)"image2DMSArray", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$9040, 0 );
      }
      goto label$10867;
      label$10895:;
      {
       FBSTRING* vr$9041 = fb_StrAllocTempDescZEx( (uint8*)"iimage2DMSArray", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$9041, 0 );
      }
      goto label$10867;
      label$10896:;
      {
       FBSTRING* vr$9042 = fb_StrAllocTempDescZEx( (uint8*)"uimage2DMSArray", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$9042, 0 );
      }
      goto label$10867;
      label$10897:;
      {
       FBSTRING* vr$9043 = fb_StrAllocTempDescZEx( (uint8*)"struct", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9043, 0 );
      }
      goto label$10867;
      label$10898:;
      {
       FBSTRING* vr$9044 = fb_StrAllocTempDescZEx( (uint8*)"sampler2DRect", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$9044, 0 );
      }
      goto label$10867;
      label$10899:;
      {
       FBSTRING* vr$9045 = fb_StrAllocTempDescZEx( (uint8*)"resource", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9045, 0 );
      }
      goto label$10867;
      label$10900:;
      {
       FBSTRING* vr$9046 = fb_StrAllocTempDescZEx( (uint8*)"M_PI", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9046, 0 );
      }
      goto label$10867;
      label$10901:;
      {
       FBSTRING* vr$9047 = fb_StrAllocTempDescZEx( (uint8*)"M_PI_2", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9047, 0 );
      }
      goto label$10867;
      label$10902:;
      {
       FBSTRING* vr$9048 = fb_StrAllocTempDescZEx( (uint8*)"M_PI_4", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9048, 0 );
      }
      goto label$10867;
      label$10903:;
      {
       FBSTRING* vr$9049 = fb_StrAllocTempDescZEx( (uint8*)"M_2PI", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9049, 0 );
      }
      goto label$10867;
      label$10904:;
      {
       FBSTRING* vr$9050 = fb_StrAllocTempDescZEx( (uint8*)"M_4PI", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9050, 0 );
      }
      goto label$10867;
      label$10905:;
      {
       FBSTRING* vr$9051 = fb_StrAllocTempDescZEx( (uint8*)"M_2_SQRTPI", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9051, 0 );
      }
      goto label$10867;
      label$10906:;
      {
       FBSTRING* vr$9052 = fb_StrAllocTempDescZEx( (uint8*)"M_E", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9052, 0 );
      }
      goto label$10867;
      label$10907:;
      {
       FBSTRING* vr$9053 = fb_StrAllocTempDescZEx( (uint8*)"M_LN2", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9053, 0 );
      }
      goto label$10867;
      label$10908:;
      {
       FBSTRING* vr$9054 = fb_StrAllocTempDescZEx( (uint8*)"M_LN10", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9054, 0 );
      }
      goto label$10867;
      label$10909:;
      {
       FBSTRING* vr$9055 = fb_StrAllocTempDescZEx( (uint8*)"M_LOG2E", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9055, 0 );
      }
      goto label$10867;
      label$10910:;
      {
       FBSTRING* vr$9056 = fb_StrAllocTempDescZEx( (uint8*)"M_LOG10E", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9056, 0 );
      }
      goto label$10867;
      label$10911:;
      {
       FBSTRING* vr$9057 = fb_StrAllocTempDescZEx( (uint8*)"M_SQRT2", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9057, 0 );
      }
      goto label$10867;
      label$10912:;
      {
       FBSTRING* vr$9058 = fb_StrAllocTempDescZEx( (uint8*)"M_SQRT1_2", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9058, 0 );
      }
      goto label$10867;
      label$10913:;
      {
       FBSTRING* vr$9059 = fb_StrAllocTempDescZEx( (uint8*)"sincos", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9059, 0 );
      }
      goto label$10867;
      label$10914:;
      {
       FBSTRING* vr$9060 = fb_StrAllocTempDescZEx( (uint8*)"inversesqrt", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$9060, 0 );
      }
      goto label$10867;
      label$10915:;
      {
       FBSTRING* vr$9061 = fb_StrAllocTempDescZEx( (uint8*)"seg", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9061, 0 );
      }
      goto label$10867;
      label$10916:;
      {
       FBSTRING* vr$9062 = fb_StrAllocTempDescZEx( (uint8*)"seek", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9062, 0 );
      }
      goto label$10867;
      label$10917:;
      {
       FBSTRING* vr$9063 = fb_StrAllocTempDescZEx( (uint8*)"sleep", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9063, 0 );
      }
      goto label$10867;
      label$10918:;
      {
       FBSTRING* vr$9064 = fb_StrAllocTempDescZEx( (uint8*)"console", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9064, 0 );
      }
      goto label$10867;
      label$10919:;
      {
       FBSTRING* vr$9065 = fb_StrAllocTempDescZEx( (uint8*)"COB_SWITCH_1", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$9065, 0 );
      }
      goto label$10867;
      label$10920:;
      {
       FBSTRING* vr$9066 = fb_StrAllocTempDescZEx( (uint8*)"COB_SWITCH_2", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$9066, 0 );
      }
      goto label$10867;
      label$10921:;
      {
       FBSTRING* vr$9067 = fb_StrAllocTempDescZEx( (uint8*)"COB_SWITCH_3", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$9067, 0 );
      }
      goto label$10867;
      label$10922:;
      {
       FBSTRING* vr$9068 = fb_StrAllocTempDescZEx( (uint8*)"COB_SWITCH_4", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$9068, 0 );
      }
      goto label$10867;
      label$10923:;
      {
       FBSTRING* vr$9069 = fb_StrAllocTempDescZEx( (uint8*)"COB_SWITCH_5", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$9069, 0 );
      }
      goto label$10867;
      label$10924:;
      {
       FBSTRING* vr$9070 = fb_StrAllocTempDescZEx( (uint8*)"COB_SWITCH_6", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$9070, 0 );
      }
      goto label$10867;
      label$10925:;
      {
       FBSTRING* vr$9071 = fb_StrAllocTempDescZEx( (uint8*)"COB_SWITCH_7", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$9071, 0 );
      }
      goto label$10867;
      label$10926:;
      {
       FBSTRING* vr$9072 = fb_StrAllocTempDescZEx( (uint8*)"COB_SWITCH_8", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$9072, 0 );
      }
      goto label$10867;
      label$10927:;
      {
       FBSTRING* vr$9073 = fb_StrAllocTempDescZEx( (uint8*)"abort", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9073, 0 );
      }
      goto label$10867;
      label$10928:;
      {
       FBSTRING* vr$9074 = fb_StrAllocTempDescZEx( (uint8*)"achar", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9074, 0 );
      }
      goto label$10867;
      label$10929:;
      {
       FBSTRING* vr$9075 = fb_StrAllocTempDescZEx( (uint8*)"acosd", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9075, 0 );
      }
      goto label$10867;
      label$10930:;
      {
       FBSTRING* vr$9076 = fb_StrAllocTempDescZEx( (uint8*)"adjustl", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9076, 0 );
      }
      goto label$10867;
      label$10931:;
      {
       FBSTRING* vr$9077 = fb_StrAllocTempDescZEx( (uint8*)"adjustr", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9077, 0 );
      }
      goto label$10867;
      label$10932:;
      {
       FBSTRING* vr$9078 = fb_StrAllocTempDescZEx( (uint8*)"aimag", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9078, 0 );
      }
      goto label$10867;
      label$10933:;
      {
       FBSTRING* vr$9079 = fb_StrAllocTempDescZEx( (uint8*)"aint", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9079, 0 );
      }
      goto label$10867;
      label$10934:;
      {
       FBSTRING* vr$9080 = fb_StrAllocTempDescZEx( (uint8*)"alarm", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9080, 0 );
      }
      goto label$10867;
      label$10935:;
      {
       FBSTRING* vr$9081 = fb_StrAllocTempDescZEx( (uint8*)"alocated", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9081, 0 );
      }
      goto label$10867;
      label$10936:;
      {
       FBSTRING* vr$9082 = fb_StrAllocTempDescZEx( (uint8*)"implicit", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9082, 0 );
      }
      goto label$10867;
      label$10937:;
      {
       FBSTRING* vr$9083 = fb_StrAllocTempDescZEx( (uint8*)"find", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9083, 0 );
      }
      goto label$10867;
      label$10938:;
      {
       FBSTRING* vr$9084 = fb_StrAllocTempDescZEx( (uint8*)"inquire", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9084, 0 );
      }
      goto label$10867;
      label$10939:;
      {
       FBSTRING* vr$9085 = fb_StrAllocTempDescZEx( (uint8*)"image2DRect", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$9085, 0 );
      }
      goto label$10867;
      label$10940:;
      {
       FBSTRING* vr$9086 = fb_StrAllocTempDescZEx( (uint8*)"smpler2DMS", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9086, 0 );
      }
      goto label$10867;
      label$10941:;
      {
       FBSTRING* vr$9087 = fb_StrAllocTempDescZEx( (uint8*)"shortint", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9087, 0 );
      }
      goto label$10867;
      label$10942:;
      {
       FBSTRING* vr$9088 = fb_StrAllocTempDescZEx( (uint8*)"word", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9088, 0 );
      }
      goto label$10867;
      label$10943:;
      {
       FBSTRING* vr$9089 = fb_StrAllocTempDescZEx( (uint8*)"cardinal", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9089, 0 );
      }
      goto label$10867;
      label$10944:;
      {
       FBSTRING* vr$9090 = fb_StrAllocTempDescZEx( (uint8*)"longint", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9090, 0 );
      }
      goto label$10867;
      label$10945:;
      {
       FBSTRING* vr$9091 = fb_StrAllocTempDescZEx( (uint8*)"longword", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9091, 0 );
      }
      goto label$10867;
      label$10946:;
      {
       FBSTRING* vr$9092 = fb_StrAllocTempDescZEx( (uint8*)"int64", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9092, 0 );
      }
      goto label$10867;
      label$10947:;
      {
       FBSTRING* vr$9093 = fb_StrAllocTempDescZEx( (uint8*)"qword", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9093, 0 );
      }
      goto label$10867;
      label$10948:;
      {
       FBSTRING* vr$9094 = fb_StrAllocTempDescZEx( (uint8*)"single", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9094, 0 );
      }
      goto label$10867;
      label$10949:;
      {
       FBSTRING* vr$9095 = fb_StrAllocTempDescZEx( (uint8*)"extended", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9095, 0 );
      }
      goto label$10867;
      label$10950:;
      {
       FBSTRING* vr$9096 = fb_StrAllocTempDescZEx( (uint8*)"boolean", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9096, 0 );
      }
      goto label$10867;
      label$10951:;
      {
       FBSTRING* vr$9097 = fb_StrAllocTempDescZEx( (uint8*)"inherited", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9097, 0 );
      }
      goto label$10867;
      label$10952:;
      {
       FBSTRING* vr$9098 = fb_StrAllocTempDescZEx( (uint8*)"base", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9098, 0 );
      }
      goto label$10867;
      label$10953:;
      {
       FBSTRING* vr$9099 = fb_StrAllocTempDescZEx( (uint8*)"sbyte", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9099, 0 );
      }
      goto label$10867;
      label$10954:;
      {
       FBSTRING* vr$9100 = fb_StrAllocTempDescZEx( (uint8*)"ushort", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9100, 0 );
      }
      goto label$10867;
      label$10955:;
      {
       FBSTRING* vr$9101 = fb_StrAllocTempDescZEx( (uint8*)"ulong", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9101, 0 );
      }
      goto label$10867;
      label$10956:;
      {
       FBSTRING* vr$9102 = fb_StrAllocTempDescZEx( (uint8*)"catch", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9102, 0 );
      }
      goto label$10867;
      label$10957:;
      {
       FBSTRING* vr$9103 = fb_StrAllocTempDescZEx( (uint8*)"checked", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9103, 0 );
      }
      goto label$10867;
      label$10958:;
      {
       FBSTRING* vr$9104 = fb_StrAllocTempDescZEx( (uint8*)"decimal", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9104, 0 );
      }
      goto label$10867;
      label$10959:;
      {
       FBSTRING* vr$9105 = fb_StrAllocTempDescZEx( (uint8*)"delegate", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9105, 0 );
      }
      goto label$10867;
      label$10960:;
      {
       FBSTRING* vr$9106 = fb_StrAllocTempDescZEx( (uint8*)"event", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9106, 0 );
      }
      goto label$10867;
      label$10961:;
      {
       FBSTRING* vr$9107 = fb_StrAllocTempDescZEx( (uint8*)"foreach", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9107, 0 );
      }
      goto label$10867;
      label$10962:;
      {
       FBSTRING* vr$9108 = fb_StrAllocTempDescZEx( (uint8*)"namespace", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9108, 0 );
      }
      goto label$10867;
      label$10963:;
      {
       FBSTRING* vr$9109 = fb_StrAllocTempDescZEx( (uint8*)"params", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9109, 0 );
      }
      goto label$10867;
      label$10964:;
      {
       FBSTRING* vr$9110 = fb_StrAllocTempDescZEx( (uint8*)"ref", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9110, 0 );
      }
      goto label$10867;
      label$10965:;
      {
       FBSTRING* vr$9111 = fb_StrAllocTempDescZEx( (uint8*)"sealed", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9111, 0 );
      }
      goto label$10867;
      label$10966:;
      {
       FBSTRING* vr$9112 = fb_StrAllocTempDescZEx( (uint8*)"stackalloc", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9112, 0 );
      }
      goto label$10867;
      label$10967:;
      {
       FBSTRING* vr$9113 = fb_StrAllocTempDescZEx( (uint8*)"typeof", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9113, 0 );
      }
      goto label$10867;
      label$10968:;
      {
       FBSTRING* vr$9114 = fb_StrAllocTempDescZEx( (uint8*)"throw", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9114, 0 );
      }
      goto label$10867;
      label$10969:;
      {
       FBSTRING* vr$9115 = fb_StrAllocTempDescZEx( (uint8*)"unchecked", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9115, 0 );
      }
      goto label$10867;
      label$10970:;
      {
       FBSTRING* vr$9116 = fb_StrAllocTempDescZEx( (uint8*)"unsafe", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9116, 0 );
      }
      goto label$10867;
      label$10971:;
      {
       FBSTRING* vr$9117 = fb_StrAllocTempDescZEx( (uint8*)"equals", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9117, 0 );
      }
      goto label$10867;
      label$10972:;
      {
       FBSTRING* vr$9118 = fb_StrAllocTempDescZEx( (uint8*)"into", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9118, 0 );
      }
      goto label$10867;
      label$10973:;
      {
       FBSTRING* vr$9119 = fb_StrAllocTempDescZEx( (uint8*)"nameof", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9119, 0 );
      }
      goto label$10867;
      label$10974:;
      {
       FBSTRING* vr$9120 = fb_StrAllocTempDescZEx( (uint8*)"notnull", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9120, 0 );
      }
      goto label$10867;
      label$10975:;
      {
       FBSTRING* vr$9121 = fb_StrAllocTempDescZEx( (uint8*)"orderby", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9121, 0 );
      }
      goto label$10867;
      label$10976:;
      {
       FBSTRING* vr$9122 = fb_StrAllocTempDescZEx( (uint8*)"partial", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9122, 0 );
      }
      goto label$10867;
      label$10977:;
      {
       FBSTRING* vr$9123 = fb_StrAllocTempDescZEx( (uint8*)"remove", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9123, 0 );
      }
      goto label$10867;
      label$10978:;
      {
       FBSTRING* vr$9124 = fb_StrAllocTempDescZEx( (uint8*)"unmanaged", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9124, 0 );
      }
      goto label$10867;
      label$10979:;
      {
       FBSTRING* vr$9125 = fb_StrAllocTempDescZEx( (uint8*)"inf", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9125, 0 );
      }
      goto label$10867;
      label$10980:;
      {
       FBSTRING* vr$9126 = fb_StrAllocTempDescZEx( (uint8*)"NaN", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9126, 0 );
      }
      goto label$10867;
      label$10981:;
      {
       FBSTRING* vr$9127 = fb_StrAllocTempDescZEx( (uint8*)"NA", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$9127, 0 );
      }
      goto label$10867;
      label$10982:;
      {
       FBSTRING* vr$9128 = fb_StrAllocTempDescZEx( (uint8*)"as?", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9128, 0 );
      }
      goto label$10867;
      label$10983:;
      {
       FBSTRING* vr$9129 = fb_StrAllocTempDescZEx( (uint8*)"fun", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9129, 0 );
      }
      goto label$10867;
      label$10984:;
      {
       FBSTRING* vr$9130 = fb_StrAllocTempDescZEx( (uint8*)"!in", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9130, 0 );
      }
      goto label$10867;
      label$10985:;
      {
       FBSTRING* vr$9131 = fb_StrAllocTempDescZEx( (uint8*)"!is", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9131, 0 );
      }
      goto label$10867;
      label$10986:;
      {
       FBSTRING* vr$9132 = fb_StrAllocTempDescZEx( (uint8*)"package", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9132, 0 );
      }
      goto label$10867;
      label$10987:;
      {
       FBSTRING* vr$9133 = fb_StrAllocTempDescZEx( (uint8*)"typealias", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9133, 0 );
      }
      goto label$10867;
      label$10988:;
      {
       FBSTRING* vr$9134 = fb_StrAllocTempDescZEx( (uint8*)"init", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9134, 0 );
      }
      goto label$10867;
      label$10989:;
      {
       FBSTRING* vr$9135 = fb_StrAllocTempDescZEx( (uint8*)"param", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9135, 0 );
      }
      goto label$10867;
      label$10990:;
      {
       FBSTRING* vr$9136 = fb_StrAllocTempDescZEx( (uint8*)"receiver", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9136, 0 );
      }
      goto label$10867;
      label$10991:;
      {
       FBSTRING* vr$9137 = fb_StrAllocTempDescZEx( (uint8*)"setparam", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9137, 0 );
      }
      goto label$10867;
      label$10992:;
      {
       FBSTRING* vr$9138 = fb_StrAllocTempDescZEx( (uint8*)"actual", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9138, 0 );
      }
      goto label$10867;
      label$10993:;
      {
       FBSTRING* vr$9139 = fb_StrAllocTempDescZEx( (uint8*)"annotation", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9139, 0 );
      }
      goto label$10867;
      label$10994:;
      {
       FBSTRING* vr$9140 = fb_StrAllocTempDescZEx( (uint8*)"companion", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9140, 0 );
      }
      goto label$10867;
      label$10995:;
      {
       FBSTRING* vr$9141 = fb_StrAllocTempDescZEx( (uint8*)"crossinline", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$9141, 0 );
      }
      goto label$10867;
      label$10996:;
      {
       FBSTRING* vr$9142 = fb_StrAllocTempDescZEx( (uint8*)"expect", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9142, 0 );
      }
      goto label$10867;
      label$10997:;
      {
       FBSTRING* vr$9143 = fb_StrAllocTempDescZEx( (uint8*)"infix", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9143, 0 );
      }
      goto label$10867;
      label$10998:;
      {
       FBSTRING* vr$9144 = fb_StrAllocTempDescZEx( (uint8*)"lateinit", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9144, 0 );
      }
      goto label$10867;
      label$10999:;
      {
       FBSTRING* vr$9145 = fb_StrAllocTempDescZEx( (uint8*)"noinline", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9145, 0 );
      }
      goto label$10867;
      label$11000:;
      {
       FBSTRING* vr$9146 = fb_StrAllocTempDescZEx( (uint8*)"reified", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9146, 0 );
      }
      goto label$10867;
      label$11001:;
      {
       FBSTRING* vr$9147 = fb_StrAllocTempDescZEx( (uint8*)"suspend", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9147, 0 );
      }
      goto label$10867;
      label$11002:;
      {
       FBSTRING* vr$9148 = fb_StrAllocTempDescZEx( (uint8*)"tailrec", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9148, 0 );
      }
      goto label$10867;
      label$11003:;
      {
       FBSTRING* vr$9149 = fb_StrAllocTempDescZEx( (uint8*)"vararg", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9149, 0 );
      }
      goto label$10867;
      label$11004:;
      {
       FBSTRING* vr$9150 = fb_StrAllocTempDescZEx( (uint8*)"it", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$9150, 0 );
      }
      goto label$10867;
      label$11005:;
      {
       FBSTRING* vr$9151 = fb_StrAllocTempDescZEx( (uint8*)"callable", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9151, 0 );
      }
      goto label$10867;
      label$11006:;
      {
       FBSTRING* vr$9152 = fb_StrAllocTempDescZEx( (uint8*)"clone", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9152, 0 );
      }
      goto label$10867;
      label$11007:;
      {
       FBSTRING* vr$9153 = fb_StrAllocTempDescZEx( (uint8*)"echo", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9153, 0 );
      }
      goto label$10867;
      label$11008:;
      {
       FBSTRING* vr$9154 = fb_StrAllocTempDescZEx( (uint8*)"empty", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9154, 0 );
      }
      goto label$10867;
      label$11009:;
      {
       FBSTRING* vr$9155 = fb_StrAllocTempDescZEx( (uint8*)"enddeclare", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9155, 0 );
      }
      goto label$10867;
      label$11010:;
      {
       FBSTRING* vr$9156 = fb_StrAllocTempDescZEx( (uint8*)"endfor", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9156, 0 );
      }
      goto label$10867;
      label$11011:;
      {
       FBSTRING* vr$9157 = fb_StrAllocTempDescZEx( (uint8*)"endforeach", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9157, 0 );
      }
      goto label$10867;
      label$11012:;
      {
       FBSTRING* vr$9158 = fb_StrAllocTempDescZEx( (uint8*)"endif", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9158, 0 );
      }
      goto label$10867;
      label$11013:;
      {
       FBSTRING* vr$9159 = fb_StrAllocTempDescZEx( (uint8*)"endswitch", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9159, 0 );
      }
      goto label$10867;
      label$11014:;
      {
       FBSTRING* vr$9160 = fb_StrAllocTempDescZEx( (uint8*)"endwile", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9160, 0 );
      }
      goto label$10867;
      label$11015:;
      {
       FBSTRING* vr$9161 = fb_StrAllocTempDescZEx( (uint8*)"extends", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9161, 0 );
      }
      goto label$10867;
      label$11016:;
      {
       FBSTRING* vr$9162 = fb_StrAllocTempDescZEx( (uint8*)"instanceof", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9162, 0 );
      }
      goto label$10867;
      label$11017:;
      {
       FBSTRING* vr$9163 = fb_StrAllocTempDescZEx( (uint8*)"isset", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9163, 0 );
      }
      goto label$10867;
      label$11018:;
      {
       FBSTRING* vr$9164 = fb_StrAllocTempDescZEx( (uint8*)"require", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9164, 0 );
      }
      goto label$10867;
      label$11019:;
      {
       FBSTRING* vr$9165 = fb_StrAllocTempDescZEx( (uint8*)"trait", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9165, 0 );
      }
      goto label$10867;
      label$11020:;
      {
       FBSTRING* vr$9166 = fb_StrAllocTempDescZEx( (uint8*)"unset", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9166, 0 );
      }
      goto label$10867;
      label$11021:;
      {
       FBSTRING* vr$9167 = fb_StrAllocTempDescZEx( (uint8*)"del", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9167, 0 );
      }
      goto label$10867;
      label$11022:;
      {
       FBSTRING* vr$9168 = fb_StrAllocTempDescZEx( (uint8*)"yield", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9168, 0 );
      }
      goto label$10867;
      label$11023:;
      {
       FBSTRING* vr$9169 = fb_StrAllocTempDescZEx( (uint8*)"signed", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9169, 0 );
      }
      goto label$10867;
      label$11024:;
      {
       FBSTRING* vr$9170 = fb_StrAllocTempDescZEx( (uint8*)"final", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9170, 0 );
      }
      goto label$10867;
      label$11025:;
      {
       FBSTRING* vr$9171 = fb_StrAllocTempDescZEx( (uint8*)"implements", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9171, 0 );
      }
      goto label$10867;
      label$11026:;
      {
       FBSTRING* vr$9172 = fb_StrAllocTempDescZEx( (uint8*)"strictfp", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9172, 0 );
      }
      goto label$10867;
      label$11027:;
      {
       FBSTRING* vr$9173 = fb_StrAllocTempDescZEx( (uint8*)"throws", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9173, 0 );
      }
      goto label$10867;
      label$11028:;
      {
       FBSTRING* vr$9174 = fb_StrAllocTempDescZEx( (uint8*)"transient", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9174, 0 );
      }
      goto label$10867;
      label$11029:;
      {
       FBSTRING* vr$9175 = fb_StrAllocTempDescZEx( (uint8*)"allocate", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9175, 0 );
      }
      goto label$10867;
      label$11030:;
      {
       FBSTRING* vr$9176 = fb_StrAllocTempDescZEx( (uint8*)"andalso", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9176, 0 );
      }
      goto label$10867;
      label$11031:;
      {
       FBSTRING* vr$9177 = fb_StrAllocTempDescZEx( (uint8*)"assertwarn", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9177, 0 );
      }
      goto label$10867;
      label$11032:;
      {
       FBSTRING* vr$9178 = fb_StrAllocTempDescZEx( (uint8*)"bin", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9178, 0 );
      }
      goto label$10867;
      label$11033:;
      {
       FBSTRING* vr$9179 = fb_StrAllocTempDescZEx( (uint8*)"bit", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9179, 0 );
      }
      goto label$10867;
      label$11034:;
      {
       FBSTRING* vr$9180 = fb_StrAllocTempDescZEx( (uint8*)"bitreset", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9180, 0 );
      }
      goto label$10867;
      label$11035:;
      {
       FBSTRING* vr$9181 = fb_StrAllocTempDescZEx( (uint8*)"bitset", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9181, 0 );
      }
      goto label$10867;
      label$11036:;
      {
       FBSTRING* vr$9182 = fb_StrAllocTempDescZEx( (uint8*)"byref", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9182, 0 );
      }
      goto label$10867;
      label$11037:;
      {
       FBSTRING* vr$9183 = fb_StrAllocTempDescZEx( (uint8*)"byval", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9183, 0 );
      }
      goto label$10867;
      label$11038:;
      {
       FBSTRING* vr$9184 = fb_StrAllocTempDescZEx( (uint8*)"callocate", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9184, 0 );
      }
      goto label$10867;
      label$11039:;
      {
       FBSTRING* vr$9185 = fb_StrAllocTempDescZEx( (uint8*)"cbool", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9185, 0 );
      }
      goto label$10867;
      label$11040:;
      {
       FBSTRING* vr$9186 = fb_StrAllocTempDescZEx( (uint8*)"cbyte", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9186, 0 );
      }
      goto label$10867;
      label$11041:;
      {
       FBSTRING* vr$9187 = fb_StrAllocTempDescZEx( (uint8*)"clng", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9187, 0 );
      }
      goto label$10867;
      label$11042:;
      {
       FBSTRING* vr$9188 = fb_StrAllocTempDescZEx( (uint8*)"clongint", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9188, 0 );
      }
      goto label$10867;
      label$11043:;
      {
       FBSTRING* vr$9189 = fb_StrAllocTempDescZEx( (uint8*)"command", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9189, 0 );
      }
      goto label$10867;
      label$11044:;
      {
       FBSTRING* vr$9190 = fb_StrAllocTempDescZEx( (uint8*)"condbroadcast", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$9190, 0 );
      }
      goto label$10867;
      label$11045:;
      {
       FBSTRING* vr$9191 = fb_StrAllocTempDescZEx( (uint8*)"condcreate", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9191, 0 );
      }
      goto label$10867;
      label$11046:;
      {
       FBSTRING* vr$9192 = fb_StrAllocTempDescZEx( (uint8*)"conddestroy", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$9192, 0 );
      }
      goto label$10867;
      label$11047:;
      {
       FBSTRING* vr$9193 = fb_StrAllocTempDescZEx( (uint8*)"condsignal", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9193, 0 );
      }
      goto label$10867;
      label$11048:;
      {
       FBSTRING* vr$9194 = fb_StrAllocTempDescZEx( (uint8*)"condwait", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9194, 0 );
      }
      goto label$10867;
      label$11049:;
      {
       FBSTRING* vr$9195 = fb_StrAllocTempDescZEx( (uint8*)"cptr", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9195, 0 );
      }
      goto label$10867;
      label$11050:;
      {
       FBSTRING* vr$9196 = fb_StrAllocTempDescZEx( (uint8*)"cshort", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9196, 0 );
      }
      goto label$10867;
      label$11051:;
      {
       FBSTRING* vr$9197 = fb_StrAllocTempDescZEx( (uint8*)"csign", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9197, 0 );
      }
      goto label$10867;
      label$11052:;
      {
       FBSTRING* vr$9198 = fb_StrAllocTempDescZEx( (uint8*)"cubyte", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9198, 0 );
      }
      goto label$10867;
      label$11053:;
      {
       FBSTRING* vr$9199 = fb_StrAllocTempDescZEx( (uint8*)"cuint", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9199, 0 );
      }
      goto label$10867;
      label$11054:;
      {
       FBSTRING* vr$9200 = fb_StrAllocTempDescZEx( (uint8*)"culng", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9200, 0 );
      }
      goto label$10867;
      label$11055:;
      {
       FBSTRING* vr$9201 = fb_StrAllocTempDescZEx( (uint8*)"culngint", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9201, 0 );
      }
      goto label$10867;
      label$11056:;
      {
       FBSTRING* vr$9202 = fb_StrAllocTempDescZEx( (uint8*)"cunsg", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9202, 0 );
      }
      goto label$10867;
      label$11057:;
      {
       FBSTRING* vr$9203 = fb_StrAllocTempDescZEx( (uint8*)"curdir", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9203, 0 );
      }
      goto label$10867;
      label$11058:;
      {
       FBSTRING* vr$9204 = fb_StrAllocTempDescZEx( (uint8*)"cushort", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9204, 0 );
      }
      goto label$10867;
      label$11059:;
      {
       FBSTRING* vr$9205 = fb_StrAllocTempDescZEx( (uint8*)"custom", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9205, 0 );
      }
      goto label$10867;
      label$11060:;
      {
       FBSTRING* vr$9206 = fb_StrAllocTempDescZEx( (uint8*)"cva_arg", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9206, 0 );
      }
      goto label$10867;
      label$11061:;
      {
       FBSTRING* vr$9207 = fb_StrAllocTempDescZEx( (uint8*)"cva_copy", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9207, 0 );
      }
      goto label$10867;
      label$11062:;
      {
       FBSTRING* vr$9208 = fb_StrAllocTempDescZEx( (uint8*)"cva_list", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9208, 0 );
      }
      goto label$10867;
      label$11063:;
      {
       FBSTRING* vr$9209 = fb_StrAllocTempDescZEx( (uint8*)"cva_end", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9209, 0 );
      }
      goto label$10867;
      label$11064:;
      {
       FBSTRING* vr$9210 = fb_StrAllocTempDescZEx( (uint8*)"cva_start", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9210, 0 );
      }
      goto label$10867;
      label$11065:;
      {
       FBSTRING* vr$9211 = fb_StrAllocTempDescZEx( (uint8*)"cvl", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9211, 0 );
      }
      goto label$10867;
      label$11066:;
      {
       FBSTRING* vr$9212 = fb_StrAllocTempDescZEx( (uint8*)"cvlongint", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9212, 0 );
      }
      goto label$10867;
      label$11067:;
      {
       FBSTRING* vr$9213 = fb_StrAllocTempDescZEx( (uint8*)"cvshort", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9213, 0 );
      }
      goto label$10867;
      label$11068:;
      {
       FBSTRING* vr$9214 = fb_StrAllocTempDescZEx( (uint8*)"dateadd", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9214, 0 );
      }
      goto label$10867;
      label$11069:;
      {
       FBSTRING* vr$9215 = fb_StrAllocTempDescZEx( (uint8*)"datediff", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9215, 0 );
      }
      goto label$10867;
      label$11070:;
      {
       FBSTRING* vr$9216 = fb_StrAllocTempDescZEx( (uint8*)"datepart", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9216, 0 );
      }
      goto label$10867;
      label$11071:;
      {
       FBSTRING* vr$9217 = fb_StrAllocTempDescZEx( (uint8*)"dateserial", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9217, 0 );
      }
      goto label$10867;
      label$11072:;
      {
       FBSTRING* vr$9218 = fb_StrAllocTempDescZEx( (uint8*)"datevalue", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9218, 0 );
      }
      goto label$10867;
      label$11073:;
      {
       FBSTRING* vr$9219 = fb_StrAllocTempDescZEx( (uint8*)"deallocate", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9219, 0 );
      }
      goto label$10867;
      label$11074:;
      {
       FBSTRING* vr$9220 = fb_StrAllocTempDescZEx( (uint8*)"defbyte", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9220, 0 );
      }
      goto label$10867;
      label$11075:;
      {
       FBSTRING* vr$9221 = fb_StrAllocTempDescZEx( (uint8*)"deflng", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9221, 0 );
      }
      goto label$10867;
      label$11076:;
      {
       FBSTRING* vr$9222 = fb_StrAllocTempDescZEx( (uint8*)"deflongint", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9222, 0 );
      }
      goto label$10867;
      label$11077:;
      {
       FBSTRING* vr$9223 = fb_StrAllocTempDescZEx( (uint8*)"defshort", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9223, 0 );
      }
      goto label$10867;
      label$11078:;
      {
       FBSTRING* vr$9224 = fb_StrAllocTempDescZEx( (uint8*)"defubyte", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9224, 0 );
      }
      goto label$10867;
      label$11079:;
      {
       FBSTRING* vr$9225 = fb_StrAllocTempDescZEx( (uint8*)"defuint", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9225, 0 );
      }
      goto label$10867;
      label$11080:;
      {
       FBSTRING* vr$9226 = fb_StrAllocTempDescZEx( (uint8*)"defulongint", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$9226, 0 );
      }
      goto label$10867;
      label$11081:;
      {
       FBSTRING* vr$9227 = fb_StrAllocTempDescZEx( (uint8*)"defushort", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9227, 0 );
      }
      goto label$10867;
      label$11082:;
      {
       FBSTRING* vr$9228 = fb_StrAllocTempDescZEx( (uint8*)"dir", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9228, 0 );
      }
      goto label$10867;
      label$11083:;
      {
       FBSTRING* vr$9229 = fb_StrAllocTempDescZEx( (uint8*)"dylibfree", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9229, 0 );
      }
      goto label$10867;
      label$11084:;
      {
       FBSTRING* vr$9230 = fb_StrAllocTempDescZEx( (uint8*)"dylibload", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9230, 0 );
      }
      goto label$10867;
      label$11085:;
      {
       FBSTRING* vr$9231 = fb_StrAllocTempDescZEx( (uint8*)"dylibsymbol", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$9231, 1 );
      }
      goto label$10867;
      label$11086:;
      {
       FBSTRING* vr$9232 = fb_StrAllocTempDescZEx( (uint8*)"encoding", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9232, 0 );
      }
      goto label$10867;
      label$11087:;
      {
       FBSTRING* vr$9233 = fb_StrAllocTempDescZEx( (uint8*)"erfn", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9233, 0 );
      }
      goto label$10867;
      label$11088:;
      {
       FBSTRING* vr$9234 = fb_StrAllocTempDescZEx( (uint8*)"ermn", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9234, 0 );
      }
      goto label$10867;
      label$11089:;
      {
       FBSTRING* vr$9235 = fb_StrAllocTempDescZEx( (uint8*)"exec", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9235, 0 );
      }
      goto label$10867;
      label$11090:;
      {
       FBSTRING* vr$9236 = fb_StrAllocTempDescZEx( (uint8*)"exepath", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9236, 0 );
      }
      goto label$10867;
      label$11091:;
      {
       FBSTRING* vr$9237 = fb_StrAllocTempDescZEx( (uint8*)"compile", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9237, 0 );
      }
      goto label$10867;
      label$11092:;
      {
       FBSTRING* vr$9238 = fb_StrAllocTempDescZEx( (uint8*)"help", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9238, 0 );
      }
      goto label$10867;
      label$11093:;
      {
       FBSTRING* vr$9239 = fb_StrAllocTempDescZEx( (uint8*)"identify", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9239, 0 );
      }
      goto label$10867;
      label$11094:;
      {
       FBSTRING* vr$9240 = fb_StrAllocTempDescZEx( (uint8*)"listnh", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9240, 0 );
      }
      goto label$10867;
      label$11095:;
      {
       FBSTRING* vr$9241 = fb_StrAllocTempDescZEx( (uint8*)"old", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9241, 0 );
      }
      goto label$10867;
      label$11096:;
      {
       FBSTRING* vr$9242 = fb_StrAllocTempDescZEx( (uint8*)"rename", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9242, 0 );
      }
      goto label$10867;
      label$11097:;
      {
       FBSTRING* vr$9243 = fb_StrAllocTempDescZEx( (uint8*)"resequence", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9243, 0 );
      }
      goto label$10867;
      label$11098:;
      {
       FBSTRING* vr$9244 = fb_StrAllocTempDescZEx( (uint8*)"scratch", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9244, 0 );
      }
      goto label$10867;
      label$11099:;
      {
       FBSTRING* vr$9245 = fb_StrAllocTempDescZEx( (uint8*)"show", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9245, 0 );
      }
      goto label$10867;
      label$11100:;
      {
       FBSTRING* vr$9246 = fb_StrAllocTempDescZEx( (uint8*)"unsave", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9246, 0 );
      }
      goto label$10867;
      label$11101:;
      {
       FBSTRING* vr$9247 = fb_StrAllocTempDescZEx( (uint8*)"bufsiz", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9247, 0 );
      }
      goto label$10867;
      label$11102:;
      {
       FBSTRING* vr$9248 = fb_StrAllocTempDescZEx( (uint8*)"ccpos", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9248, 0 );
      }
      goto label$10867;
      label$11103:;
      {
       FBSTRING* vr$9249 = fb_StrAllocTempDescZEx( (uint8*)"change", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9249, 0 );
      }
      goto label$10867;
      label$11104:;
      {
       FBSTRING* vr$9250 = fb_StrAllocTempDescZEx( (uint8*)"ctrlc", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9250, 0 );
      }
      goto label$10867;
      label$11105:;
      {
       FBSTRING* vr$9251 = fb_StrAllocTempDescZEx( (uint8*)"det", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9251, 0 );
      }
      goto label$10867;
      label$11106:;
      {
       FBSTRING* vr$9252 = fb_StrAllocTempDescZEx( (uint8*)"dif", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9252, 0 );
      }
      goto label$10867;
      label$11107:;
      {
       FBSTRING* vr$9253 = fb_StrAllocTempDescZEx( (uint8*)"ern", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9253, 0 );
      }
      goto label$10867;
      label$11108:;
      {
       FBSTRING* vr$9254 = fb_StrAllocTempDescZEx( (uint8*)"fileattr", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9254, 0 );
      }
      goto label$10867;
      label$11109:;
      {
       FBSTRING* vr$9255 = fb_StrAllocTempDescZEx( (uint8*)"filecopy", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9255, 0 );
      }
      goto label$10867;
      label$11110:;
      {
       FBSTRING* vr$9256 = fb_StrAllocTempDescZEx( (uint8*)"filedatetime", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$9256, 0 );
      }
      goto label$10867;
      label$11111:;
      {
       FBSTRING* vr$9257 = fb_StrAllocTempDescZEx( (uint8*)"fileexists", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9257, 0 );
      }
      goto label$10867;
      label$11112:;
      {
       FBSTRING* vr$9258 = fb_StrAllocTempDescZEx( (uint8*)"filelen", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9258, 0 );
      }
      goto label$10867;
      label$11113:;
      {
       FBSTRING* vr$9259 = fb_StrAllocTempDescZEx( (uint8*)"freefile", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9259, 0 );
      }
      goto label$10867;
      label$11114:;
      {
       FBSTRING* vr$9260 = fb_StrAllocTempDescZEx( (uint8*)"frac", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9260, 0 );
      }
      goto label$10867;
      label$11115:;
      {
       FBSTRING* vr$9261 = fb_StrAllocTempDescZEx( (uint8*)"getjoystick", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$9261, 0 );
      }
      goto label$10867;
      label$11116:;
      {
       FBSTRING* vr$9262 = fb_StrAllocTempDescZEx( (uint8*)"getkey", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9262, 0 );
      }
      goto label$10867;
      label$11117:;
      {
       FBSTRING* vr$9263 = fb_StrAllocTempDescZEx( (uint8*)"getmouse", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9263, 0 );
      }
      goto label$10867;
      label$11118:;
      {
       FBSTRING* vr$9264 = fb_StrAllocTempDescZEx( (uint8*)"hibyte", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9264, 0 );
      }
      goto label$10867;
      label$11119:;
      {
       FBSTRING* vr$9265 = fb_StrAllocTempDescZEx( (uint8*)"hiword", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9265, 0 );
      }
      goto label$10867;
      label$10868:;
      static const void* tmp$5321[256ll] = {
       &&label$10869,
       &&label$10870,
       &&label$10871,
       &&label$10867,
       &&label$10872,
       &&label$10873,
       &&label$10874,
       &&label$10875,
       &&label$10876,
       &&label$10877,
       &&label$10878,
       &&label$10879,
       &&label$10880,
       &&label$10881,
       &&label$10882,
       &&label$10883,
       &&label$10884,
       &&label$10885,
       &&label$10886,
       &&label$10887,
       &&label$10867,
       &&label$10888,
       &&label$10889,
       &&label$10890,
       &&label$10891,
       &&label$10892,
       &&label$10893,
       &&label$10894,
       &&label$10895,
       &&label$10896,
       &&label$10897,
       &&label$10898,
       &&label$10899,
       &&label$10900,
       &&label$10901,
       &&label$10902,
       &&label$10903,
       &&label$10904,
       &&label$10905,
       &&label$10906,
       &&label$10907,
       &&label$10908,
       &&label$10909,
       &&label$10910,
       &&label$10911,
       &&label$10912,
       &&label$10913,
       &&label$10914,
       &&label$10915,
       &&label$10916,
       &&label$10917,
       &&label$10918,
       &&label$10919,
       &&label$10920,
       &&label$10921,
       &&label$10922,
       &&label$10923,
       &&label$10924,
       &&label$10925,
       &&label$10926,
       &&label$10927,
       &&label$10928,
       &&label$10929,
       &&label$10930,
       &&label$10931,
       &&label$10932,
       &&label$10933,
       &&label$10934,
       &&label$10935,
       &&label$10936,
       &&label$10937,
       &&label$10938,
       &&label$10939,
       &&label$10940,
       &&label$10941,
       &&label$10942,
       &&label$10943,
       &&label$10944,
       &&label$10945,
       &&label$10946,
       &&label$10947,
       &&label$10948,
       &&label$10949,
       &&label$10950,
       &&label$10951,
       &&label$10952,
       &&label$10953,
       &&label$10954,
       &&label$10955,
       &&label$10956,
       &&label$10957,
       &&label$10958,
       &&label$10959,
       &&label$10960,
       &&label$10961,
       &&label$10962,
       &&label$10963,
       &&label$10964,
       &&label$10965,
       &&label$10966,
       &&label$10967,
       &&label$10968,
       &&label$10969,
       &&label$10970,
       &&label$10971,
       &&label$10972,
       &&label$10867,
       &&label$10973,
       &&label$10974,
       &&label$10975,
       &&label$10976,
       &&label$10977,
       &&label$10978,
       &&label$10979,
       &&label$10980,
       &&label$10981,
       &&label$10982,
       &&label$10983,
       &&label$10984,
       &&label$10985,
       &&label$10986,
       &&label$10987,
       &&label$10988,
       &&label$10989,
       &&label$10990,
       &&label$10991,
       &&label$10992,
       &&label$10867,
       &&label$10867,
       &&label$10993,
       &&label$10994,
       &&label$10995,
       &&label$10996,
       &&label$10997,
       &&label$10998,
       &&label$10999,
       &&label$11000,
       &&label$11001,
       &&label$11002,
       &&label$11003,
       &&label$11004,
       &&label$11005,
       &&label$11006,
       &&label$11007,
       &&label$11008,
       &&label$11009,
       &&label$11010,
       &&label$11011,
       &&label$11012,
       &&label$11013,
       &&label$11014,
       &&label$11015,
       &&label$11016,
       &&label$11017,
       &&label$11018,
       &&label$11019,
       &&label$11020,
       &&label$11021,
       &&label$11022,
       &&label$11023,
       &&label$11024,
       &&label$11025,
       &&label$11026,
       &&label$11027,
       &&label$11028,
       &&label$11029,
       &&label$11030,
       &&label$11031,
       &&label$11032,
       &&label$11033,
       &&label$11034,
       &&label$11035,
       &&label$11036,
       &&label$11037,
       &&label$11038,
       &&label$11039,
       &&label$11040,
       &&label$11041,
       &&label$11042,
       &&label$11043,
       &&label$11044,
       &&label$11045,
       &&label$11046,
       &&label$11047,
       &&label$11048,
       &&label$11049,
       &&label$11050,
       &&label$11051,
       &&label$11052,
       &&label$11053,
       &&label$11054,
       &&label$11055,
       &&label$11056,
       &&label$11057,
       &&label$11058,
       &&label$11059,
       &&label$11060,
       &&label$11061,
       &&label$11062,
       &&label$11063,
       &&label$11064,
       &&label$11065,
       &&label$11066,
       &&label$11067,
       &&label$11068,
       &&label$11069,
       &&label$11070,
       &&label$11071,
       &&label$11072,
       &&label$11073,
       &&label$11074,
       &&label$11075,
       &&label$11076,
       &&label$11077,
       &&label$11078,
       &&label$11079,
       &&label$11080,
       &&label$11081,
       &&label$11082,
       &&label$11083,
       &&label$11084,
       &&label$11085,
       &&label$11086,
       &&label$11087,
       &&label$11088,
       &&label$11089,
       &&label$11090,
       &&label$11091,
       &&label$11092,
       &&label$11093,
       &&label$11094,
       &&label$11095,
       &&label$11096,
       &&label$11097,
       &&label$11098,
       &&label$11099,
       &&label$11100,
       &&label$11101,
       &&label$11102,
       &&label$11103,
       &&label$11104,
       &&label$11105,
       &&label$11106,
       &&label$11107,
       &&label$11108,
       &&label$11109,
       &&label$11110,
       &&label$11111,
       &&label$11112,
       &&label$11113,
       &&label$11114,
       &&label$11115,
       &&label$11116,
       &&label$11117,
       &&label$11118,
       &&label$11119,
      };
      if( TMP$4666$6 > 255ull ) goto label$10867;
      goto *tmp$5321[TMP$4666$6 - 0ull];
      label$10867:;
     }
    }
    goto label$9040;
    label$11120:;
    {
     {
      uint64 TMP$4904$6;
      TMP$4904$6 = ((uint64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394968ll) ));
      goto label$11122;
      label$11123:;
      {
       FBSTRING* vr$9267 = fb_StrAllocTempDescZEx( (uint8*)"imageconvertrow", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$9267, 0 );
      }
      goto label$11121;
      label$11124:;
      {
       FBSTRING* vr$9268 = fb_StrAllocTempDescZEx( (uint8*)"imagecreate", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$9268, 0 );
      }
      goto label$11121;
      label$11125:;
      {
       FBSTRING* vr$9269 = fb_StrAllocTempDescZEx( (uint8*)"imagedestroy", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$9269, 0 );
      }
      goto label$11121;
      label$11126:;
      {
       FBSTRING* vr$9270 = fb_StrAllocTempDescZEx( (uint8*)"imageinfo", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9270, 0 );
      }
      goto label$11121;
      label$11127:;
      {
       FBSTRING* vr$9271 = fb_StrAllocTempDescZEx( (uint8*)"instrrev", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9271, 0 );
      }
      goto label$11121;
      label$11128:;
      {
       FBSTRING* vr$9272 = fb_StrAllocTempDescZEx( (uint8*)"isdate", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9272, 0 );
      }
      goto label$11121;
      label$11129:;
      {
       FBSTRING* vr$9273 = fb_StrAllocTempDescZEx( (uint8*)"isredirected", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$9273, 0 );
      }
      goto label$11121;
      label$11130:;
      {
       FBSTRING* vr$9274 = fb_StrAllocTempDescZEx( (uint8*)"lbound", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9274, 0 );
      }
      goto label$11121;
      label$11131:;
      {
       FBSTRING* vr$9275 = fb_StrAllocTempDescZEx( (uint8*)"lcase", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9275, 0 );
      }
      goto label$11121;
      label$11132:;
      {
       FBSTRING* vr$9276 = fb_StrAllocTempDescZEx( (uint8*)"lib", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9276, 0 );
      }
      goto label$11121;
      label$11133:;
      {
       FBSTRING* vr$9277 = fb_StrAllocTempDescZEx( (uint8*)"lobyte", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9277, 0 );
      }
      goto label$11121;
      label$11134:;
      {
       FBSTRING* vr$9278 = fb_StrAllocTempDescZEx( (uint8*)"loword", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9278, 0 );
      }
      goto label$11121;
      label$11135:;
      {
       FBSTRING* vr$9279 = fb_StrAllocTempDescZEx( (uint8*)"ltrim", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9279, 0 );
      }
      goto label$11121;
      label$11136:;
      {
       FBSTRING* vr$9280 = fb_StrAllocTempDescZEx( (uint8*)"mkl", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9280, 0 );
      }
      goto label$11121;
      label$11137:;
      {
       FBSTRING* vr$9281 = fb_StrAllocTempDescZEx( (uint8*)"mklongint", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9281, 0 );
      }
      goto label$11121;
      label$11138:;
      {
       FBSTRING* vr$9282 = fb_StrAllocTempDescZEx( (uint8*)"mkshort", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9282, 0 );
      }
      goto label$11121;
      label$11139:;
      {
       FBSTRING* vr$9283 = fb_StrAllocTempDescZEx( (uint8*)"monthname", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9283, 1 );
      }
      goto label$11121;
      label$11140:;
      {
       FBSTRING* vr$9284 = fb_StrAllocTempDescZEx( (uint8*)"multikey", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9284, 0 );
      }
      goto label$11121;
      label$11141:;
      {
       FBSTRING* vr$9285 = fb_StrAllocTempDescZEx( (uint8*)"mutexcreate", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$9285, 0 );
      }
      goto label$11121;
      label$11142:;
      {
       FBSTRING* vr$9286 = fb_StrAllocTempDescZEx( (uint8*)"mutexdestroy", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$9286, 0 );
      }
      goto label$11121;
      label$11143:;
      {
       FBSTRING* vr$9287 = fb_StrAllocTempDescZEx( (uint8*)"mutexlock", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9287, 0 );
      }
      goto label$11121;
      label$11144:;
      {
       FBSTRING* vr$9288 = fb_StrAllocTempDescZEx( (uint8*)"mutexunlock", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$9288, 0 );
      }
      goto label$11121;
      label$11145:;
      {
       FBSTRING* vr$9289 = fb_StrAllocTempDescZEx( (uint8*)"naked", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9289, 0 );
      }
      goto label$11121;
      label$11146:;
      {
       FBSTRING* vr$9290 = fb_StrAllocTempDescZEx( (uint8*)"now", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9290, 1 );
      }
      goto label$11121;
      label$11147:;
      {
       FBSTRING* vr$9291 = fb_StrAllocTempDescZEx( (uint8*)"offsetof", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9291, 0 );
      }
      goto label$11121;
      label$11148:;
      {
       FBSTRING* vr$9292 = fb_StrAllocTempDescZEx( (uint8*)"orelse", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9292, 0 );
      }
      goto label$11121;
      label$11149:;
      {
       FBSTRING* vr$9293 = fb_StrAllocTempDescZEx( (uint8*)"overload", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9293, 0 );
      }
      goto label$11121;
      label$11150:;
      {
       FBSTRING* vr$9294 = fb_StrAllocTempDescZEx( (uint8*)"pointcoord", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9294, 0 );
      }
      goto label$11121;
      label$11151:;
      {
       FBSTRING* vr$9295 = fb_StrAllocTempDescZEx( (uint8*)"ptr", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9295, 0 );
      }
      goto label$11121;
      label$11152:;
      {
       FBSTRING* vr$9296 = fb_StrAllocTempDescZEx( (uint8*)"preserve", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9296, 0 );
      }
      goto label$11121;
      label$11153:;
      {
       FBSTRING* vr$9297 = fb_StrAllocTempDescZEx( (uint8*)"procptr", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9297, 0 );
      }
      goto label$11121;
      label$11154:;
      {
       FBSTRING* vr$9298 = fb_StrAllocTempDescZEx( (uint8*)"redim", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9298, 0 );
      }
      goto label$11121;
      label$11155:;
      {
       FBSTRING* vr$9299 = fb_StrAllocTempDescZEx( (uint8*)"rgba", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9299, 0 );
      }
      goto label$11121;
      label$11156:;
      {
       FBSTRING* vr$9300 = fb_StrAllocTempDescZEx( (uint8*)"rtrim", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9300, 0 );
      }
      goto label$11121;
      label$11157:;
      {
       FBSTRING* vr$9301 = fb_StrAllocTempDescZEx( (uint8*)"sadd", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9301, 0 );
      }
      goto label$11121;
      label$11158:;
      {
       FBSTRING* vr$9302 = fb_StrAllocTempDescZEx( (uint8*)"scope", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9302, 0 );
      }
      goto label$11121;
      label$11159:;
      {
       FBSTRING* vr$9303 = fb_StrAllocTempDescZEx( (uint8*)"screencopy", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9303, 0 );
      }
      goto label$11121;
      label$11160:;
      {
       FBSTRING* vr$9304 = fb_StrAllocTempDescZEx( (uint8*)"screencontrol", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$9304, 0 );
      }
      goto label$11121;
      label$11161:;
      {
       FBSTRING* vr$9305 = fb_StrAllocTempDescZEx( (uint8*)"screenevent", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$9305, 0 );
      }
      goto label$11121;
      label$11162:;
      {
       FBSTRING* vr$9306 = fb_StrAllocTempDescZEx( (uint8*)"screenglproc", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$9306, 0 );
      }
      goto label$11121;
      label$11163:;
      {
       FBSTRING* vr$9307 = fb_StrAllocTempDescZEx( (uint8*)"screeninfo", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9307, 0 );
      }
      goto label$11121;
      label$11164:;
      {
       FBSTRING* vr$9308 = fb_StrAllocTempDescZEx( (uint8*)"screenlist", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9308, 0 );
      }
      goto label$11121;
      label$11165:;
      {
       FBSTRING* vr$9309 = fb_StrAllocTempDescZEx( (uint8*)"screenlock", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9309, 0 );
      }
      goto label$11121;
      label$11166:;
      {
       FBSTRING* vr$9310 = fb_StrAllocTempDescZEx( (uint8*)"screenptr", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9310, 0 );
      }
      goto label$11121;
      label$11167:;
      {
       FBSTRING* vr$9311 = fb_StrAllocTempDescZEx( (uint8*)"screenres", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9311, 0 );
      }
      goto label$11121;
      label$11168:;
      {
       FBSTRING* vr$9312 = fb_StrAllocTempDescZEx( (uint8*)"screenset", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9312, 0 );
      }
      goto label$11121;
      label$11169:;
      {
       FBSTRING* vr$9313 = fb_StrAllocTempDescZEx( (uint8*)"screensync", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9313, 0 );
      }
      goto label$11121;
      label$11170:;
      {
       FBSTRING* vr$9314 = fb_StrAllocTempDescZEx( (uint8*)"screenunlock", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$9314, 0 );
      }
      goto label$11121;
      label$11171:;
      {
       FBSTRING* vr$9315 = fb_StrAllocTempDescZEx( (uint8*)"setdate", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9315, 0 );
      }
      goto label$11121;
      label$11172:;
      {
       FBSTRING* vr$9316 = fb_StrAllocTempDescZEx( (uint8*)"setenviron", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9316, 0 );
      }
      goto label$11121;
      label$11173:;
      {
       FBSTRING* vr$9317 = fb_StrAllocTempDescZEx( (uint8*)"setmouse", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9317, 0 );
      }
      goto label$11121;
      label$11174:;
      {
       FBSTRING* vr$9318 = fb_StrAllocTempDescZEx( (uint8*)"settime", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9318, 0 );
      }
      goto label$11121;
      label$11175:;
      {
       FBSTRING* vr$9319 = fb_StrAllocTempDescZEx( (uint8*)"sub", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9319, 0 );
      }
      goto label$11121;
      label$11176:;
      {
       FBSTRING* vr$9320 = fb_StrAllocTempDescZEx( (uint8*)"threadcall", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9320, 0 );
      }
      goto label$11121;
      label$11177:;
      {
       FBSTRING* vr$9321 = fb_StrAllocTempDescZEx( (uint8*)"threadcreate", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$9321, 0 );
      }
      goto label$11121;
      label$11178:;
      {
       FBSTRING* vr$9322 = fb_StrAllocTempDescZEx( (uint8*)"threaddetach", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$9322, 0 );
      }
      goto label$11121;
      label$11179:;
      {
       FBSTRING* vr$9323 = fb_StrAllocTempDescZEx( (uint8*)"threadwait", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9323, 0 );
      }
      goto label$11121;
      label$11180:;
      {
       FBSTRING* vr$9324 = fb_StrAllocTempDescZEx( (uint8*)"trans", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9324, 0 );
      }
      goto label$11121;
      label$11181:;
      {
       FBSTRING* vr$9325 = fb_StrAllocTempDescZEx( (uint8*)"ubound", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9325, 0 );
      }
      goto label$11121;
      label$11182:;
      {
       FBSTRING* vr$9326 = fb_StrAllocTempDescZEx( (uint8*)"ubyte", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9326, 0 );
      }
      goto label$11121;
      label$11183:;
      {
       FBSTRING* vr$9327 = fb_StrAllocTempDescZEx( (uint8*)"ucase", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9327, 0 );
      }
      goto label$11121;
      label$11184:;
      {
       FBSTRING* vr$9328 = fb_StrAllocTempDescZEx( (uint8*)"uinteger", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9328, 0 );
      }
      goto label$11121;
      label$11185:;
      {
       FBSTRING* vr$9329 = fb_StrAllocTempDescZEx( (uint8*)"ulongint", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9329, 0 );
      }
      goto label$11121;
      label$11186:;
      {
       FBSTRING* vr$9330 = fb_StrAllocTempDescZEx( (uint8*)"va_arg", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9330, 0 );
      }
      goto label$11121;
      label$11187:;
      {
       FBSTRING* vr$9331 = fb_StrAllocTempDescZEx( (uint8*)"va_first", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9331, 0 );
      }
      goto label$11121;
      label$11188:;
      {
       FBSTRING* vr$9332 = fb_StrAllocTempDescZEx( (uint8*)"va_next", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9332, 0 );
      }
      goto label$11121;
      label$11189:;
      {
       FBSTRING* vr$9333 = fb_StrAllocTempDescZEx( (uint8*)"vallng", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9333, 0 );
      }
      goto label$11121;
      label$11190:;
      {
       FBSTRING* vr$9334 = fb_StrAllocTempDescZEx( (uint8*)"valint", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9334, 0 );
      }
      goto label$11121;
      label$11191:;
      {
       FBSTRING* vr$9335 = fb_StrAllocTempDescZEx( (uint8*)"view", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9335, 0 );
      }
      goto label$11121;
      label$11192:;
      {
       FBSTRING* vr$9336 = fb_StrAllocTempDescZEx( (uint8*)"wbin", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9336, 0 );
      }
      goto label$11121;
      label$11193:;
      {
       FBSTRING* vr$9337 = fb_StrAllocTempDescZEx( (uint8*)"wchr", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9337, 0 );
      }
      goto label$11121;
      label$11194:;
      {
       FBSTRING* vr$9338 = fb_StrAllocTempDescZEx( (uint8*)"weekday", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9338, 0 );
      }
      goto label$11121;
      label$11195:;
      {
       FBSTRING* vr$9339 = fb_StrAllocTempDescZEx( (uint8*)"weekdayname", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$9339, 0 );
      }
      goto label$11121;
      label$11196:;
      {
       FBSTRING* vr$9340 = fb_StrAllocTempDescZEx( (uint8*)"whex", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9340, 0 );
      }
      goto label$11121;
      label$11197:;
      {
       FBSTRING* vr$9341 = fb_StrAllocTempDescZEx( (uint8*)"windowtitle", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$9341, 0 );
      }
      goto label$11121;
      label$11198:;
      {
       FBSTRING* vr$9342 = fb_StrAllocTempDescZEx( (uint8*)"winput", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9342, 0 );
      }
      goto label$11121;
      label$11199:;
      {
       FBSTRING* vr$9343 = fb_StrAllocTempDescZEx( (uint8*)"woct", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9343, 0 );
      }
      goto label$11121;
      label$11200:;
      {
       FBSTRING* vr$9344 = fb_StrAllocTempDescZEx( (uint8*)"wspace", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9344, 0 );
      }
      goto label$11121;
      label$11201:;
      {
       FBSTRING* vr$9345 = fb_StrAllocTempDescZEx( (uint8*)"wstr", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9345, 0 );
      }
      goto label$11121;
      label$11202:;
      {
       FBSTRING* vr$9346 = fb_StrAllocTempDescZEx( (uint8*)"wstring", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9346, 0 );
      }
      goto label$11121;
      label$11203:;
      {
       FBSTRING* vr$9347 = fb_StrAllocTempDescZEx( (uint8*)"zstring", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9347, 0 );
      }
      goto label$11121;
      label$11204:;
      {
       FBSTRING* vr$9348 = fb_StrAllocTempDescZEx( (uint8*)"ert", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9348, 0 );
      }
      goto label$11121;
      label$11205:;
      {
       FBSTRING* vr$9349 = fb_StrAllocTempDescZEx( (uint8*)"endifle", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9349, 0 );
      }
      goto label$11121;
      label$11206:;
      {
       FBSTRING* vr$9350 = fb_StrAllocTempDescZEx( (uint8*)"fnend", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9350, 0 );
      }
      goto label$11121;
      label$11207:;
      {
       FBSTRING* vr$9351 = fb_StrAllocTempDescZEx( (uint8*)"fnexit", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9351, 0 );
      }
      goto label$11121;
      label$11208:;
      {
       FBSTRING* vr$9352 = fb_StrAllocTempDescZEx( (uint8*)"free", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9352, 0 );
      }
      goto label$11121;
      label$11209:;
      {
       FBSTRING* vr$9353 = fb_StrAllocTempDescZEx( (uint8*)"fsp", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9353, 0 );
      }
      goto label$11121;
      label$11210:;
      {
       FBSTRING* vr$9354 = fb_StrAllocTempDescZEx( (uint8*)"functionend", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$9354, 0 );
      }
      goto label$11121;
      label$11211:;
      {
       FBSTRING* vr$9355 = fb_StrAllocTempDescZEx( (uint8*)"functionexit", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$9355, 0 );
      }
      goto label$11121;
      label$11212:;
      {
       FBSTRING* vr$9356 = fb_StrAllocTempDescZEx( (uint8*)"getrfa", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9356, 0 );
      }
      goto label$11121;
      label$11213:;
      {
       FBSTRING* vr$9357 = fb_StrAllocTempDescZEx( (uint8*)"handler", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9357, 0 );
      }
      goto label$11121;
      label$11214:;
      {
       FBSTRING* vr$9358 = fb_StrAllocTempDescZEx( (uint8*)"linput", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9358, 0 );
      }
      goto label$11121;
      label$11215:;
      {
       FBSTRING* vr$9359 = fb_StrAllocTempDescZEx( (uint8*)"mag", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9359, 0 );
      }
      goto label$11121;
      label$11216:;
      {
       FBSTRING* vr$9360 = fb_StrAllocTempDescZEx( (uint8*)"magtape", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9360, 0 );
      }
      goto label$11121;
      label$11217:;
      {
       FBSTRING* vr$9361 = fb_StrAllocTempDescZEx( (uint8*)"mar", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9361, 0 );
      }
      goto label$11121;
      label$11218:;
      {
       FBSTRING* vr$9362 = fb_StrAllocTempDescZEx( (uint8*)"margin", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9362, 0 );
      }
      goto label$11121;
      label$11219:;
      {
       FBSTRING* vr$9363 = fb_StrAllocTempDescZEx( (uint8*)"mat", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9363, 0 );
      }
      goto label$11121;
      label$11220:;
      {
       FBSTRING* vr$9364 = fb_StrAllocTempDescZEx( (uint8*)"noecho", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9364, 0 );
      }
      goto label$11121;
      label$11221:;
      {
       FBSTRING* vr$9365 = fb_StrAllocTempDescZEx( (uint8*)"nomargin", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9365, 0 );
      }
      goto label$11121;
      label$11222:;
      {
       FBSTRING* vr$9366 = fb_StrAllocTempDescZEx( (uint8*)"num", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9366, 0 );
      }
      goto label$11121;
      label$11223:;
      {
       FBSTRING* vr$9367 = fb_StrAllocTempDescZEx( (uint8*)"num2", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9367, 0 );
      }
      goto label$11121;
      label$11224:;
      {
       FBSTRING* vr$9368 = fb_StrAllocTempDescZEx( (uint8*)"num1", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9368, 0 );
      }
      goto label$11121;
      label$11225:;
      {
       FBSTRING* vr$9369 = fb_StrAllocTempDescZEx( (uint8*)"place", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9369, 0 );
      }
      goto label$11121;
      label$11226:;
      {
       FBSTRING* vr$9370 = fb_StrAllocTempDescZEx( (uint8*)"quo", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9370, 0 );
      }
      goto label$11121;
      label$11227:;
      {
       FBSTRING* vr$9371 = fb_StrAllocTempDescZEx( (uint8*)"rad", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9371, 0 );
      }
      goto label$11121;
      label$11228:;
      {
       FBSTRING* vr$9372 = fb_StrAllocTempDescZEx( (uint8*)"rctrlc", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9372, 0 );
      }
      goto label$11121;
      label$11229:;
      {
       FBSTRING* vr$9373 = fb_StrAllocTempDescZEx( (uint8*)"rctrl0", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9373, 0 );
      }
      goto label$11121;
      label$11230:;
      {
       FBSTRING* vr$9374 = fb_StrAllocTempDescZEx( (uint8*)"recount", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9374, 0 );
      }
      goto label$11121;
      label$11231:;
      {
       FBSTRING* vr$9375 = fb_StrAllocTempDescZEx( (uint8*)"remap", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9375, 0 );
      }
      goto label$11121;
      label$11232:;
      {
       FBSTRING* vr$9376 = fb_StrAllocTempDescZEx( (uint8*)"retry", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9376, 0 );
      }
      goto label$11121;
      label$11233:;
      {
       FBSTRING* vr$9377 = fb_StrAllocTempDescZEx( (uint8*)"rmsstatus", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9377, 0 );
      }
      goto label$11121;
      label$11234:;
      {
       FBSTRING* vr$9378 = fb_StrAllocTempDescZEx( (uint8*)"prompt", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9378, 0 );
      }
      goto label$11121;
      label$11235:;
      {
       FBSTRING* vr$9379 = fb_StrAllocTempDescZEx( (uint8*)"subend", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9379, 0 );
      }
      goto label$11121;
      label$11236:;
      {
       FBSTRING* vr$9380 = fb_StrAllocTempDescZEx( (uint8*)"exitsub", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9380, 0 );
      }
      goto label$11121;
      label$11237:;
      {
       FBSTRING* vr$9381 = fb_StrAllocTempDescZEx( (uint8*)"trm", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9381, 0 );
      }
      goto label$11121;
      label$11238:;
      {
       FBSTRING* vr$9382 = fb_StrAllocTempDescZEx( (uint8*)"unless", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9382, 0 );
      }
      goto label$11121;
      label$11239:;
      {
       FBSTRING* vr$9383 = fb_StrAllocTempDescZEx( (uint8*)"vmsstatus", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9383, 0 );
      }
      goto label$11121;
      label$11240:;
      {
       FBSTRING* vr$9384 = fb_StrAllocTempDescZEx( (uint8*)"xlate", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9384, 0 );
      }
      goto label$11121;
      label$11241:;
      {
       FBSTRING* vr$9385 = fb_StrAllocTempDescZEx( (uint8*)"allocated", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9385, 0 );
      }
      goto label$11121;
      label$11242:;
      {
       FBSTRING* vr$9386 = fb_StrAllocTempDescZEx( (uint8*)"anint", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9386, 0 );
      }
      goto label$11121;
      label$11243:;
      {
       FBSTRING* vr$9387 = fb_StrAllocTempDescZEx( (uint8*)"asind", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9387, 0 );
      }
      goto label$11121;
      label$11244:;
      {
       FBSTRING* vr$9388 = fb_StrAllocTempDescZEx( (uint8*)"associated", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9388, 0 );
      }
      goto label$11121;
      label$11245:;
      {
       FBSTRING* vr$9389 = fb_StrAllocTempDescZEx( (uint8*)"atand", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9389, 0 );
      }
      goto label$11121;
      label$11246:;
      {
       FBSTRING* vr$9390 = fb_StrAllocTempDescZEx( (uint8*)"atan2d", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9390, 0 );
      }
      goto label$11121;
      label$11247:;
      {
       FBSTRING* vr$9391 = fb_StrAllocTempDescZEx( (uint8*)"atomic_add", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9391, 0 );
      }
      goto label$11121;
      label$11248:;
      {
       FBSTRING* vr$9392 = fb_StrAllocTempDescZEx( (uint8*)"atomic_and", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9392, 0 );
      }
      goto label$11121;
      label$11249:;
      {
       FBSTRING* vr$9393 = fb_StrAllocTempDescZEx( (uint8*)"atomic_cas", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9393, 0 );
      }
      goto label$11121;
      label$11250:;
      {
       FBSTRING* vr$9394 = fb_StrAllocTempDescZEx( (uint8*)"atomic_define", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$9394, 0 );
      }
      goto label$11121;
      label$11251:;
      {
       FBSTRING* vr$9395 = fb_StrAllocTempDescZEx( (uint8*)"atomic_fetch_add", 16ll );
       fb_PrintString( 1, (FBSTRING*)vr$9395, 0 );
      }
      goto label$11121;
      label$11252:;
      {
       FBSTRING* vr$9396 = fb_StrAllocTempDescZEx( (uint8*)"atomic_fetch and", 16ll );
       fb_PrintString( 1, (FBSTRING*)vr$9396, 0 );
      }
      goto label$11121;
      label$11253:;
      {
       FBSTRING* vr$9397 = fb_StrAllocTempDescZEx( (uint8*)"atomic_fetch_or", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$9397, 0 );
      }
      goto label$11121;
      label$11254:;
      {
       FBSTRING* vr$9398 = fb_StrAllocTempDescZEx( (uint8*)"atomic_fetch_xor", 16ll );
       fb_PrintString( 1, (FBSTRING*)vr$9398, 0 );
      }
      goto label$11121;
      label$11255:;
      {
       FBSTRING* vr$9399 = fb_StrAllocTempDescZEx( (uint8*)"atomic_or", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9399, 0 );
      }
      goto label$11121;
      label$11256:;
      {
       FBSTRING* vr$9400 = fb_StrAllocTempDescZEx( (uint8*)"atomic_ref", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9400, 0 );
      }
      goto label$11121;
      label$11257:;
      {
       FBSTRING* vr$9401 = fb_StrAllocTempDescZEx( (uint8*)"atomic_xor", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9401, 0 );
      }
      goto label$11121;
      label$11258:;
      {
       FBSTRING* vr$9402 = fb_StrAllocTempDescZEx( (uint8*)"backtrace", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9402, 0 );
      }
      goto label$11121;
      label$11259:;
      {
       FBSTRING* vr$9403 = fb_StrAllocTempDescZEx( (uint8*)"bessel_j0", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9403, 0 );
      }
      goto label$11121;
      label$11260:;
      {
       FBSTRING* vr$9404 = fb_StrAllocTempDescZEx( (uint8*)"bessel_j1", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9404, 0 );
      }
      goto label$11121;
      label$11261:;
      {
       FBSTRING* vr$9405 = fb_StrAllocTempDescZEx( (uint8*)"bessel_jn", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9405, 0 );
      }
      goto label$11121;
      label$11262:;
      {
       FBSTRING* vr$9406 = fb_StrAllocTempDescZEx( (uint8*)"bessel_y0", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9406, 0 );
      }
      goto label$11121;
      label$11263:;
      {
       FBSTRING* vr$9407 = fb_StrAllocTempDescZEx( (uint8*)"bassel_y1", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9407, 0 );
      }
      goto label$11121;
      label$11264:;
      {
       FBSTRING* vr$9408 = fb_StrAllocTempDescZEx( (uint8*)"bessel_yn", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9408, 0 );
      }
      goto label$11121;
      label$11265:;
      {
       FBSTRING* vr$9409 = fb_StrAllocTempDescZEx( (uint8*)"bge", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9409, 0 );
      }
      goto label$11121;
      label$11266:;
      {
       FBSTRING* vr$9410 = fb_StrAllocTempDescZEx( (uint8*)"bgt", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9410, 0 );
      }
      goto label$11121;
      label$11267:;
      {
       FBSTRING* vr$9411 = fb_StrAllocTempDescZEx( (uint8*)"bit_size", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9411, 0 );
      }
      goto label$11121;
      label$11268:;
      {
       FBSTRING* vr$9412 = fb_StrAllocTempDescZEx( (uint8*)"ble", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9412, 0 );
      }
      goto label$11121;
      label$11269:;
      {
       FBSTRING* vr$9413 = fb_StrAllocTempDescZEx( (uint8*)"blt", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9413, 0 );
      }
      goto label$11121;
      label$11270:;
      {
       FBSTRING* vr$9414 = fb_StrAllocTempDescZEx( (uint8*)"btest", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9414, 0 );
      }
      goto label$11121;
      label$11271:;
      {
       FBSTRING* vr$9415 = fb_StrAllocTempDescZEx( (uint8*)"c_associated", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$9415, 0 );
      }
      goto label$11121;
      label$11272:;
      {
       FBSTRING* vr$9416 = fb_StrAllocTempDescZEx( (uint8*)"c_f_pointer", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$9416, 0 );
      }
      goto label$11121;
      label$11122:;
      static const void* tmp$5322[151ll] = {
       &&label$11123,
       &&label$11124,
       &&label$11125,
       &&label$11126,
       &&label$11127,
       &&label$11128,
       &&label$11129,
       &&label$11130,
       &&label$11131,
       &&label$11132,
       &&label$11133,
       &&label$11121,
       &&label$11134,
       &&label$11135,
       &&label$11136,
       &&label$11137,
       &&label$11138,
       &&label$11139,
       &&label$11140,
       &&label$11141,
       &&label$11142,
       &&label$11143,
       &&label$11144,
       &&label$11145,
       &&label$11146,
       &&label$11147,
       &&label$11148,
       &&label$11149,
       &&label$11150,
       &&label$11151,
       &&label$11152,
       &&label$11153,
       &&label$11154,
       &&label$11155,
       &&label$11156,
       &&label$11157,
       &&label$11158,
       &&label$11159,
       &&label$11160,
       &&label$11161,
       &&label$11162,
       &&label$11163,
       &&label$11164,
       &&label$11165,
       &&label$11166,
       &&label$11167,
       &&label$11168,
       &&label$11169,
       &&label$11170,
       &&label$11171,
       &&label$11172,
       &&label$11173,
       &&label$11174,
       &&label$11175,
       &&label$11176,
       &&label$11177,
       &&label$11178,
       &&label$11179,
       &&label$11180,
       &&label$11181,
       &&label$11182,
       &&label$11183,
       &&label$11184,
       &&label$11185,
       &&label$11186,
       &&label$11187,
       &&label$11188,
       &&label$11189,
       &&label$11190,
       &&label$11191,
       &&label$11192,
       &&label$11193,
       &&label$11194,
       &&label$11195,
       &&label$11196,
       &&label$11197,
       &&label$11198,
       &&label$11199,
       &&label$11200,
       &&label$11201,
       &&label$11202,
       &&label$11203,
       &&label$11204,
       &&label$11205,
       &&label$11206,
       &&label$11207,
       &&label$11208,
       &&label$11209,
       &&label$11210,
       &&label$11211,
       &&label$11212,
       &&label$11213,
       &&label$11214,
       &&label$11215,
       &&label$11216,
       &&label$11217,
       &&label$11218,
       &&label$11219,
       &&label$11220,
       &&label$11221,
       &&label$11222,
       &&label$11223,
       &&label$11224,
       &&label$11225,
       &&label$11226,
       &&label$11227,
       &&label$11228,
       &&label$11229,
       &&label$11230,
       &&label$11231,
       &&label$11232,
       &&label$11233,
       &&label$11234,
       &&label$11235,
       &&label$11236,
       &&label$11237,
       &&label$11238,
       &&label$11239,
       &&label$11240,
       &&label$11241,
       &&label$11242,
       &&label$11243,
       &&label$11244,
       &&label$11245,
       &&label$11246,
       &&label$11247,
       &&label$11248,
       &&label$11249,
       &&label$11250,
       &&label$11251,
       &&label$11252,
       &&label$11253,
       &&label$11254,
       &&label$11255,
       &&label$11256,
       &&label$11257,
       &&label$11258,
       &&label$11259,
       &&label$11260,
       &&label$11261,
       &&label$11262,
       &&label$11263,
       &&label$11264,
       &&label$11265,
       &&label$11266,
       &&label$11267,
       &&label$11268,
       &&label$11269,
       &&label$11270,
       &&label$11271,
       &&label$11272,
      };
      if( TMP$4904$6 > 150ull ) goto label$11121;
      goto *tmp$5322[TMP$4904$6 - 0ull];
      label$11121:;
     }
    }
    goto label$9040;
    label$9041:;
    static const void* tmp$5323[23ll] = {
     &&label$9042,
     &&label$9104,
     &&label$9105,
     &&label$9106,
     &&label$9107,
     &&label$9108,
     &&label$9113,
     &&label$9372,
     &&label$9040,
     &&label$9631,
     &&label$9645,
     &&label$9646,
     &&label$9647,
     &&label$9648,
     &&label$9649,
     &&label$9650,
     &&label$9651,
     &&label$9677,
     &&label$9935,
     &&label$10194,
     &&label$10702,
     &&label$10866,
     &&label$11120,
    };
    if( TMP$3131$4 > 22ull ) goto label$9040;
    goto *tmp$5323[TMP$3131$4 - 0ull];
    label$9040:;
   }
  }
  goto label$8963;
  label$9038:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$11273;
  label$11274:;
  {
   {
    if( V$1 != (double)(int64)*(uint8*)NIBBLES$ ) goto label$11276;
    label$11277:;
    {
     uint8 TMP$5057$5;
     uint8 TMP$5059$5;
     uint8 TMP$5061$5;
     uint8 TMP$5063$5;
     uint8 TMP$5065$5;
     uint8 TMP$5067$5;
     uint8 TMP$5069$5;
     uint8 TMP$5071$5;
     uint8 TMP$5073$5;
     uint8 TMP$5075$5;
     uint8 TMP$5077$5;
     uint8 TMP$5079$5;
     uint8 TMP$5081$5;
     uint8 TMP$5083$5;
     uint8 TMP$5085$5;
     uint8 TMP$5087$5;
     uint8 TMP$5089$5;
     uint8 TMP$5091$5;
     uint8 TMP$5093$5;
     uint8 TMP$5095$5;
     uint8 TMP$5097$5;
     uint8 TMP$5099$5;
     uint8 TMP$5101$5;
     uint8 TMP$5103$5;
     uint8 TMP$5105$5;
     uint8 TMP$5107$5;
     uint8 TMP$5109$5;
     uint8 TMP$5111$5;
     uint8 TMP$5113$5;
     uint8 TMP$5115$5;
     uint8 TMP$5117$5;
     uint8 TMP$5119$5;
     uint8 TMP$5121$5;
     uint8 TMP$5123$5;
     uint8 TMP$5125$5;
     uint8 TMP$5127$5;
     uint8 TMP$5129$5;
     uint8 TMP$5131$5;
     uint8 TMP$5133$5;
     uint8 TMP$5135$5;
     uint8 TMP$5137$5;
     uint8 TMP$5139$5;
     uint8 TMP$5148$5;
     uint8 TMP$5150$5;
     uint8 TMP$5152$5;
     fb_GfxScreenRes( 640, 480, 32, 0, 0, 0 );
     fb_Cls( -65536 );
     FBSTRING* vr$9429 = fb_StrAllocTempDescZEx( (uint8*)"blender --version > err.txt", 27ll );
     fb_Shell( (FBSTRING*)vr$9429 );
     FBSTRING* vr$9431 = fb_StrAllocTempDescZEx( (uint8*)"err.txt", 7ll );
     fb_FileOpen( (FBSTRING*)vr$9431, 2u, 0u, 0u, (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll), 0 );
     label$11278:;
     int32 vr$9433 = fb_FileEof( (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
     if( (int64)vr$9433 != 0ll ) goto label$11279;
     {
      fb_FileLineInput( (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll), (void*)&STRCODE$, -1ll, 0 );
      fb_PrintString( 0, (FBSTRING*)&STRCODE$, 1 );
     }
     goto label$11278;
     label$11279:;
     fb_FileClose( (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
     FBSTRING* vr$9438 = fb_StrAllocTempDescZEx( (uint8*)"tmp.py", 6ll );
     fb_FileOpen( (FBSTRING*)vr$9438, 3u, 0u, 0u, (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll), 0 );
     TMP$5057$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9439 = fb_StrAllocTempDescZEx( (uint8*)"# Start of file", 15ll );
     fb_PrintString( (int32)TMP$5057$5, (FBSTRING*)vr$9439, 1 );
     TMP$5059$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9441 = fb_StrAllocTempDescZEx( (uint8*)"import bpy,math,mathutils,bmesh,bgl,blf", 39ll );
     fb_PrintString( (int32)TMP$5059$5, (FBSTRING*)vr$9441, 1 );
     TMP$5061$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9443 = fb_StrAllocTempDescZEx( (uint8*)"from math import radians", 24ll );
     fb_PrintString( (int32)TMP$5061$5, (FBSTRING*)vr$9443, 1 );
     TMP$5063$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9445 = fb_StrAllocTempDescZEx( (uint8*)"from random import randint", 26ll );
     fb_PrintString( (int32)TMP$5063$5, (FBSTRING*)vr$9445, 1 );
     TMP$5065$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9447 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.render.engine = 'CYCLES'", 42ll );
     fb_PrintString( (int32)TMP$5065$5, (FBSTRING*)vr$9447, 1 );
     TMP$5067$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9449 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.render.resolution_x = 640", 43ll );
     fb_PrintString( (int32)TMP$5067$5, (FBSTRING*)vr$9449, 1 );
     TMP$5069$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9451 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.render.resolution_y = 480", 43ll );
     fb_PrintString( (int32)TMP$5069$5, (FBSTRING*)vr$9451, 1 );
     TMP$5071$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9453 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.render.resolution_percentage = 100", 52ll );
     fb_PrintString( (int32)TMP$5071$5, (FBSTRING*)vr$9453, 1 );
     TMP$5073$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9455 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.render.image_settings.file_format = 'BMP'", 59ll );
     fb_PrintString( (int32)TMP$5073$5, (FBSTRING*)vr$9455, 1 );
     TMP$5075$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9457 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.render.tile_x = 32", 36ll );
     fb_PrintString( (int32)TMP$5075$5, (FBSTRING*)vr$9457, 1 );
     TMP$5077$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9459 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.render.tile_y = 32", 36ll );
     fb_PrintString( (int32)TMP$5077$5, (FBSTRING*)vr$9459, 1 );
     TMP$5079$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9461 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.cycles.preview_samples = 1", 44ll );
     fb_PrintString( (int32)TMP$5079$5, (FBSTRING*)vr$9461, 1 );
     TMP$5081$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9463 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.render.use_persistent_data = True", 51ll );
     fb_PrintString( (int32)TMP$5081$5, (FBSTRING*)vr$9463, 1 );
     TMP$5083$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9465 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.cycles.use_progressive_refine = True", 54ll );
     fb_PrintString( (int32)TMP$5083$5, (FBSTRING*)vr$9465, 1 );
     TMP$5085$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9467 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.render.use_save_buffers = True", 48ll );
     fb_PrintString( (int32)TMP$5085$5, (FBSTRING*)vr$9467, 1 );
     TMP$5087$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9469 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.render.use_border = True", 42ll );
     fb_PrintString( (int32)TMP$5087$5, (FBSTRING*)vr$9469, 1 );
     TMP$5089$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9471 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.cycles.device = 'CPU'", 39ll );
     fb_PrintString( (int32)TMP$5089$5, (FBSTRING*)vr$9471, 1 );
     TMP$5091$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9473 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.cycles.max_bounces = 3", 40ll );
     fb_PrintString( (int32)TMP$5091$5, (FBSTRING*)vr$9473, 1 );
     TMP$5093$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9475 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.cycles.min_bounces = 0", 40ll );
     fb_PrintString( (int32)TMP$5093$5, (FBSTRING*)vr$9475, 1 );
     TMP$5095$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9477 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.cycles.diffuse_bounces = 3", 44ll );
     fb_PrintString( (int32)TMP$5095$5, (FBSTRING*)vr$9477, 1 );
     TMP$5097$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9479 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.cycles.glossy_bounces = 3", 43ll );
     fb_PrintString( (int32)TMP$5097$5, (FBSTRING*)vr$9479, 1 );
     TMP$5099$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9481 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.cycles.transmission_bounces = 1", 49ll );
     fb_PrintString( (int32)TMP$5099$5, (FBSTRING*)vr$9481, 1 );
     TMP$5101$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9483 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.cycles.transparent_max_bounces = 4", 52ll );
     fb_PrintString( (int32)TMP$5101$5, (FBSTRING*)vr$9483, 1 );
     TMP$5103$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9485 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.cycles.transparent_min_bounces = 0", 52ll );
     fb_PrintString( (int32)TMP$5103$5, (FBSTRING*)vr$9485, 1 );
     TMP$5105$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9487 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.cycles.caustics_reflective = False", 52ll );
     fb_PrintString( (int32)TMP$5105$5, (FBSTRING*)vr$9487, 1 );
     TMP$5107$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9489 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.cycles.caustics_refractive = False", 52ll );
     fb_PrintString( (int32)TMP$5107$5, (FBSTRING*)vr$9489, 1 );
     TMP$5109$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9491 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.cycles.use_square_samples = True", 50ll );
     fb_PrintString( (int32)TMP$5109$5, (FBSTRING*)vr$9491, 1 );
     TMP$5111$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9493 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.cycles.samples = 4", 36ll );
     fb_PrintString( (int32)TMP$5111$5, (FBSTRING*)vr$9493, 1 );
     TMP$5113$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9495 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.cycles.debug_use_spatial_splits = True", 56ll );
     fb_PrintString( (int32)TMP$5113$5, (FBSTRING*)vr$9495, 1 );
     TMP$5115$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9497 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.world.cycles.max_bounces = 1", 46ll );
     fb_PrintString( (int32)TMP$5115$5, (FBSTRING*)vr$9497, 1 );
     TMP$5117$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9499 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.cycles.volume_bounces = 0", 43ll );
     fb_PrintString( (int32)TMP$5117$5, (FBSTRING*)vr$9499, 1 );
     TMP$5119$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9501 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.object.data.cycles.is_portal = True", 47ll );
     fb_PrintString( (int32)TMP$5119$5, (FBSTRING*)vr$9501, 1 );
     TMP$5121$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9503 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.cycles.debug_use_hair_bvh = False", 51ll );
     fb_PrintString( (int32)TMP$5121$5, (FBSTRING*)vr$9503, 1 );
     TMP$5123$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9505 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.cycles.shading_system = True", 46ll );
     fb_PrintString( (int32)TMP$5123$5, (FBSTRING*)vr$9505, 1 );
     TMP$5125$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9507 = fb_StrAllocTempDescZEx( (uint8*)"bpy.data.objects['Light'].select_set(True)", 42ll );
     fb_PrintString( (int32)TMP$5125$5, (FBSTRING*)vr$9507, 1 );
     TMP$5127$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9509 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.view_layer.objects.active = bpy.data.objects['Light']", 65ll );
     fb_PrintString( (int32)TMP$5127$5, (FBSTRING*)vr$9509, 1 );
     TMP$5129$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9511 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.object.data.type = 'SUN'", 36ll );
     fb_PrintString( (int32)TMP$5129$5, (FBSTRING*)vr$9511, 1 );
     TMP$5131$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9513 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.object.data.energy = 1", 34ll );
     fb_PrintString( (int32)TMP$5131$5, (FBSTRING*)vr$9513, 1 );
     TMP$5133$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9515 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.object.data.use_shadow = True", 41ll );
     fb_PrintString( (int32)TMP$5133$5, (FBSTRING*)vr$9515, 1 );
     TMP$5135$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9517 = fb_StrAllocTempDescZEx( (uint8*)"bpy.data.objects['Cube'].select_set(True)", 41ll );
     fb_PrintString( (int32)TMP$5135$5, (FBSTRING*)vr$9517, 1 );
     TMP$5137$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9519 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.view_layer.objects.active = bpy.data.objects['Cube']", 64ll );
     fb_PrintString( (int32)TMP$5137$5, (FBSTRING*)vr$9519, 1 );
     TMP$5139$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9521 = fb_StrAllocTempDescZEx( (uint8*)"scene = bpy.data.scenes[\x22Scene\x22]", 32ll );
     fb_PrintString( (int32)TMP$5139$5, (FBSTRING*)vr$9521, 1 );
     label$11280:;
     {
      FBSTRING* vr$9523 = fb_StrAllocTempDescZEx( (uint8*)"BLENDER:\x5C> ", 11ll );
      fb_LineInput( (FBSTRING*)vr$9523, (void*)&STRCODE$, -1ll, 0, 0, -1 );
      int32 vr$9524 = fb_StrCompare( (void*)&STRCODE$, -1ll, (void*)"", 1ll );
      if( (int64)vr$9524 == 0ll ) goto label$11284;
      {
       uint8 TMP$5147$7;
       TMP$5147$7 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
       fb_PrintString( (int32)TMP$5147$7, (FBSTRING*)&STRCODE$, 1 );
      }
      goto label$11283;
      label$11284:;
      {
       goto label$11281;
       label$11283:;
      }
     }
     label$11282:;
     goto label$11280;
     label$11281:;
     TMP$5148$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9527 = fb_StrAllocTempDescZEx( (uint8*)"bpy.data.scenes['Scene'].render.filepath = './tmp'", 50ll );
     fb_PrintString( (int32)TMP$5148$5, (FBSTRING*)vr$9527, 1 );
     TMP$5150$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9529 = fb_StrAllocTempDescZEx( (uint8*)"bpy.ops.render.render(use_viewport = True, write_still=True)", 60ll );
     fb_PrintString( (int32)TMP$5150$5, (FBSTRING*)vr$9529, 1 );
     TMP$5152$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9531 = fb_StrAllocTempDescZEx( (uint8*)"# End of file", 13ll );
     fb_PrintString( (int32)TMP$5152$5, (FBSTRING*)vr$9531, 1 );
     fb_FileClose( (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
     fb_Cls( -65536 );
     FBSTRING* vr$9534 = fb_StrAllocTempDescZEx( (uint8*)"blender -b -P tmp.py", 20ll );
     fb_Shell( (FBSTRING*)vr$9534 );
     FBSTRING* vr$9535 = fb_StrAllocTempDescZEx( (uint8*)"tmp.bmp", 7ll );
     fb_GfxBload( (FBSTRING*)vr$9535, (void*)0ull, (void*)0ull );
     FBSTRING* vr$9536 = fb_StrAllocTempDescZEx( (uint8*)"rm tmp.py tmp.bmp", 17ll );
     fb_Shell( (FBSTRING*)vr$9536 );
     fb_Locate( 60, 1, -1, 0, 0 );
     FBSTRING* vr$9537 = fb_StrAllocTempDescZEx( (uint8*)"Press any key to continue.", 26ll );
     fb_PrintString( 0, (FBSTRING*)vr$9537, 1 );
     fb_Sleep( -1 );
     fb_GfxScreenRes( 1920, 1080, 32, 0, 0, 0 );
     fb_Cls( -65536 );
    }
    goto label$11275;
    label$11276:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$11285;
    label$11286:;
    {
     fb_GfxScreenRes( 640, 480, 32, 0, 0, 0 );
     fb_Cls( -65536 );
     FBSTRING* vr$9540 = fb_StrAllocTempDescZEx( (uint8*)"cobc -V > err.txt", 17ll );
     fb_Shell( (FBSTRING*)vr$9540 );
     FBSTRING* vr$9542 = fb_StrAllocTempDescZEx( (uint8*)"err.txt", 7ll );
     fb_FileOpen( (FBSTRING*)vr$9542, 2u, 0u, 0u, (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll), 0 );
     label$11287:;
     int32 vr$9544 = fb_FileEof( (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
     if( (int64)vr$9544 != 0ll ) goto label$11288;
     {
      fb_FileLineInput( (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll), (void*)&STRCODE$, -1ll, 0 );
      fb_PrintString( 0, (FBSTRING*)&STRCODE$, 1 );
     }
     goto label$11287;
     label$11288:;
     fb_FileClose( (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
     FBSTRING* vr$9548 = fb_StrAllocTempDescZEx( (uint8*)"tmp.cob", 7ll );
     fb_FileOpen( (FBSTRING*)vr$9548, 3u, 0u, 0u, 2, 0 );
     label$11289:;
     {
      FBSTRING* vr$9549 = fb_StrAllocTempDescZEx( (uint8*)"COBOL:\x5C> ", 9ll );
      fb_LineInput( (FBSTRING*)vr$9549, (void*)&STRCODE$, -1ll, 0, 0, -1 );
      int32 vr$9550 = fb_StrCompare( (void*)&STRCODE$, -1ll, (void*)"", 1ll );
      if( (int64)vr$9550 == 0ll ) goto label$11293;
      {
       uint8 TMP$5161$7;
       TMP$5161$7 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
       fb_PrintString( (int32)TMP$5161$7, (FBSTRING*)&STRCODE$, 1 );
      }
      goto label$11292;
      label$11293:;
      {
       goto label$11290;
       label$11292:;
      }
     }
     label$11291:;
     goto label$11289;
     label$11290:;
     fb_FileClose( (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
     fb_Cls( -65536 );
     FBSTRING* vr$9554 = fb_StrAllocTempDescZEx( (uint8*)"cobc -x -free tmp.cob -o tmp", 28ll );
     fb_Shell( (FBSTRING*)vr$9554 );
     FBSTRING* vr$9555 = fb_StrAllocTempDescZEx( (uint8*)"./tmp > tmp.txt", 15ll );
     fb_Shell( (FBSTRING*)vr$9555 );
     FBSTRING* vr$9556 = fb_StrAllocTempDescZEx( (uint8*)"tmp.txt", 7ll );
     fb_FileOpen( (FBSTRING*)vr$9556, 2u, 0u, 0u, 2, 0 );
     label$11294:;
     int32 vr$9558 = fb_FileEof( (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
     if( (int64)vr$9558 != 0ll ) goto label$11295;
     {
      fb_FileLineInput( 2, (void*)&STRCODE$, -1ll, 0 );
      fb_PrintString( 0, (FBSTRING*)&STRCODE$, 1 );
     }
     goto label$11294;
     label$11295:;
     fb_FileClose( (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
     FBSTRING* vr$9561 = fb_StrAllocTempDescZEx( (uint8*)"rm tmp tmp.cob tmp.txt err.txt", 30ll );
     fb_Shell( (FBSTRING*)vr$9561 );
     FBSTRING* vr$9562 = fb_StrAllocTempDescZEx( (uint8*)"Press any key to continue.", 26ll );
     fb_PrintString( 0, (FBSTRING*)vr$9562, 1 );
     fb_Sleep( -1 );
     fb_GfxScreenRes( 1920, 1080, 32, 0, 0, 0 );
     fb_Cls( -65536 );
    }
    goto label$11275;
    label$11285:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) ) goto label$11296;
    label$11297:;
    {
     fb_GfxScreenRes( 800, 600, 32, 0, 0, 0 );
     fb_Cls( -65536 );
     FBSTRING* vr$9565 = fb_StrAllocTempDescZEx( (uint8*)"Persistence of Vision(tm) Ray Tracer 3.7.0.9", 44ll );
     fb_PrintString( 0, (FBSTRING*)vr$9565, 1 );
     FBSTRING* vr$9566 = fb_StrAllocTempDescZEx( (uint8*)"POV-Ray is based on DKBTrace 2.12 by David K. Buck & Aaron A. Collins", 69ll );
     fb_PrintString( 0, (FBSTRING*)vr$9566, 1 );
     FBSTRING* vr$9567 = fb_StrAllocTempDescZEx( (uint8*)"(C) 1991-2013 Persistence of Vision Raytracer Pty. Ltd.", 55ll );
     fb_PrintString( 0, (FBSTRING*)vr$9567, 1 );
     FBSTRING* vr$9569 = fb_StrAllocTempDescZEx( (uint8*)"tmp.pov", 7ll );
     fb_FileOpen( (FBSTRING*)vr$9569, 3u, 0u, 0u, (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll), 0 );
     label$11298:;
     {
      FBSTRING* vr$9570 = fb_StrAllocTempDescZEx( (uint8*)"POVRAY:\x5C> ", 10ll );
      fb_LineInput( (FBSTRING*)vr$9570, (void*)&STRCODE$, -1ll, 0, 0, -1 );
      int32 vr$9571 = fb_StrCompare( (void*)&STRCODE$, -1ll, (void*)"", 1ll );
      if( (int64)vr$9571 == 0ll ) goto label$11302;
      {
       uint8 TMP$5168$7;
       TMP$5168$7 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
       fb_PrintString( (int32)TMP$5168$7, (FBSTRING*)&STRCODE$, 1 );
      }
      goto label$11301;
      label$11302:;
      {
       goto label$11299;
       label$11301:;
      }
     }
     label$11300:;
     goto label$11298;
     label$11299:;
     fb_FileClose( (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
     FBSTRING* vr$9575 = fb_StrAllocTempDescZEx( (uint8*)"povray tmp.pov", 14ll );
     fb_Shell( (FBSTRING*)vr$9575 );
     FBSTRING* vr$9576 = fb_StrAllocTempDescZEx( (uint8*)"convert tmp.png 0.bmp", 21ll );
     fb_Shell( (FBSTRING*)vr$9576 );
     FBSTRING* vr$9577 = fb_StrAllocTempDescZEx( (uint8*)"mv 0.bmp ./vram/0.bmp", 21ll );
     fb_Shell( (FBSTRING*)vr$9577 );
     FBSTRING* vr$9578 = fb_StrAllocTempDescZEx( (uint8*)"./vram/0.bmp", 12ll );
     fb_GfxBload( (FBSTRING*)vr$9578, (void*)0ull, (void*)0ull );
     fb_Locate( 60, 1, -1, 0, 0 );
     FBSTRING* vr$9579 = fb_StrAllocTempDescZEx( (uint8*)"Press any key to continue.", 26ll );
     fb_PrintString( 0, (FBSTRING*)vr$9579, 1 );
     fb_Sleep( -1 );
     fb_GfxScreenRes( 1920, 1080, 32, 0, 0, 0 );
     fb_Cls( -65536 );
    }
    goto label$11275;
    label$11296:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) ) goto label$11303;
    label$11304:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.bas", 8ll, 0 );
     fb_StrAssign( (void*)&COMPILER$, -1ll, (void*)"fbc ", 5ll, 0 );
    }
    goto label$11275;
    label$11303:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) ) goto label$11305;
    label$11306:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.bas", 8ll, 0 );
     fb_StrAssign( (void*)&COMPILER$, -1ll, (void*)"fbc -lang qb ", 14ll, 0 );
    }
    goto label$11275;
    label$11305:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) ) goto label$11307;
    label$11308:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.glsl", 9ll, 0 );
     fb_StrAssign( (void*)&COMPILER$, -1ll, (void*)"", 1ll, 0 );
    }
    goto label$11275;
    label$11307:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) ) goto label$11309;
    label$11310:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.cob", 8ll, 0 );
     fb_StrAssign( (void*)&COMPILER$, -1ll, (void*)"cobc -x -free ", 15ll, 0 );
    }
    goto label$11275;
    label$11309:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) ) goto label$11311;
    label$11312:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.f77", 8ll, 0 );
     fb_StrAssign( (void*)&COMPILER$, -1ll, (void*)"gfortran -std=legacy ", 22ll, 0 );
    }
    goto label$11275;
    label$11311:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) ) goto label$11313;
    label$11314:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.pas", 8ll, 0 );
     fb_StrAssign( (void*)&COMPILER$, -1ll, (void*)"fpc ", 5ll, 0 );
    }
    goto label$11275;
    label$11313:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) ) goto label$11315;
    label$11316:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.osl", 8ll, 0 );
     fb_StrAssign( (void*)&COMPILER$, -1ll, (void*)"", 1ll, 0 );
    }
    goto label$11275;
    label$11315:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) ) goto label$11317;
    label$11318:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.pov", 8ll, 0 );
     fb_StrAssign( (void*)&COMPILER$, -1ll, (void*)"povray ", 8ll, 0 );
    }
    goto label$11275;
    label$11317:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) ) goto label$11319;
    label$11320:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.java", 9ll, 0 );
     fb_StrAssign( (void*)&COMPILER$, -1ll, (void*)"java ", 6ll, 0 );
    }
    goto label$11275;
    label$11319:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) ) goto label$11321;
    label$11322:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.c", 6ll, 0 );
     fb_StrAssign( (void*)&COMPILER$, -1ll, (void*)"gcc ", 5ll, 0 );
    }
    goto label$11275;
    label$11321:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) ) goto label$11323;
    label$11324:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.cpp", 8ll, 0 );
     fb_StrAssign( (void*)&COMPILER$, -1ll, (void*)"g++ ", 5ll, 0 );
    }
    goto label$11275;
    label$11323:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) ) goto label$11325;
    label$11326:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.cs", 7ll, 0 );
     fb_StrAssign( (void*)&COMPILER$, -1ll, (void*)"csc ", 5ll, 0 );
    }
    goto label$11275;
    label$11325:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) ) goto label$11327;
    label$11328:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.js", 7ll, 0 );
     fb_StrAssign( (void*)&COMPILER$, -1ll, (void*)"node ", 6ll, 0 );
    }
    goto label$11275;
    label$11327:;
    if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$11329;
    label$11330:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.php", 8ll, 0 );
     fb_StrAssign( (void*)&COMPILER$, -1ll, (void*)"php -f ", 8ll, 0 );
    }
    goto label$11275;
    label$11329:;
    if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$11331;
    label$11332:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.py", 7ll, 0 );
     fb_StrAssign( (void*)&COMPILER$, -1ll, (void*)"python ", 8ll, 0 );
    }
    goto label$11275;
    label$11331:;
    if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$11333;
    label$11334:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.swift", 10ll, 0 );
     fb_StrAssign( (void*)&COMPILER$, -1ll, (void*)"swift ", 7ll, 0 );
    }
    goto label$11275;
    label$11333:;
    if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$11335;
    label$11336:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.m", 6ll, 0 );
     fb_StrAssign( (void*)&COMPILER$, -1ll, (void*)"octave --persist ", 18ll, 0 );
    }
    goto label$11275;
    label$11335:;
    if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$11337;
    label$11338:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.kt", 7ll, 0 );
     fb_StrAssign( (void*)&COMPILER$, -1ll, (void*)"kotlinc ", 9ll, 0 );
    }
    goto label$11275;
    label$11337:;
    if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$11339;
    label$11340:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.r", 6ll, 0 );
     fb_StrAssign( (void*)&COMPILER$, -1ll, (void*)"rscript ", 9ll, 0 );
    }
    goto label$11275;
    label$11339:;
    if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$11341;
    label$11342:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.dart", 9ll, 0 );
     fb_StrAssign( (void*)&COMPILER$, -1ll, (void*)"dart ", 6ll, 0 );
    }
    goto label$11275;
    label$11341:;
    if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$11343;
    label$11344:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.scala", 10ll, 0 );
     fb_StrAssign( (void*)&COMPILER$, -1ll, (void*)"scalac ", 8ll, 0 );
    }
    goto label$11275;
    label$11343:;
    if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$11345;
    label$11346:;
    {
     fb_FileOpen( (FBSTRING*)&FILENAME$, 3u, 0u, 0u, 1, 0 );
    }
    goto label$11275;
    label$11345:;
    if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$11347;
    label$11348:;
    {
     fb_FileClose( 1 );
    }
    goto label$11275;
    label$11347:;
    if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$11349;
    label$11350:;
    {
     FBSTRING TMP$5209$5;
     FBSTRING TMP$5214$5;
     fb_GfxLine( FGIMAGE$, 0x0p+0f, 0x0p+0f, (float)SCR_W$, (float)SCR_H$, 4278190080u, 2, 65535u, 0 );
     __builtin_memset( &TMP$5209$5, 0, 24ll );
     FBSTRING* vr$9674 = fb_StrConcat( &TMP$5209$5, (void*)&COMPILER$, -1ll, (void*)&FILENAME$, -1ll );
     fb_Shell( (FBSTRING*)vr$9674 );
     FBSTRING* vr$9675 = fb_StrAllocTempDescZEx( (uint8*)"./tmp > tmp.txt", 15ll );
     fb_Shell( (FBSTRING*)vr$9675 );
     FBSTRING* vr$9676 = fb_StrAllocTempDescZEx( (uint8*)"tmp.txt", 7ll );
     fb_FileOpen( (FBSTRING*)vr$9676, 2u, 0u, 0u, 1, 0 );
     SCR_POS$ = 0ull;
     *(double*)((int64)(double*)MEM64$ + 394896ll) = 0x0p+0;
     *(double*)((int64)(double*)MEM64$ + 394904ll) = 0x0p+0;
     *(double*)((int64)(double*)MEM64$ + 394912ll) = 0x0p+0;
     label$11351:;
     int32 vr$9677 = fb_FileEof( 1 );
     if( (int64)vr$9677 != 0ll ) goto label$11352;
     {
      fb_FileLineInput( 1, (void*)&STRCODE$, -1ll, 0 );
      {
       INDEX$ = (uint16)1u;
       uint16 TMP$5210$7;
       int64 vr$9679 = fb_StrLen( (void*)&STRCODE$, -1ll );
       TMP$5210$7 = (uint16)vr$9679;
       goto label$11353;
       label$11356:;
       {
        FBSTRING* vr$9682 = fb_StrMid( (FBSTRING*)&STRCODE$, (int64)INDEX$, 1ll );
        uint32 vr$9683 = fb_ASC( (FBSTRING*)vr$9682, 1ll );
        *(double*)((int64)(double*)MEM64$ + 394888ll) = (double)vr$9683;
        if( ((int64)-(*(double*)((int64)(double*)MEM64$ + 394888ll) > 0x1.Fp+4) & (int64)-(*(double*)((int64)(double*)MEM64$ + 394888ll) < 0x1.p+6)) == 0ll ) goto label$11358;
        {
         *(double*)((int64)(double*)MEM64$ + 394888ll) = *(double*)((int64)(double*)MEM64$ + 394888ll) + 0x1.p+5;
         label$11358:;
        }
        _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, (double)((uint64)((int64)INDEX$ + 16383ll) + SCR_POS$), (double)(((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394888ll) + 0x1.p+5 )) & 63ll) );
       }
       label$11354:;
       INDEX$ = (uint16)((int64)INDEX$ + 1ll);
       label$11353:;
       if( (int64)INDEX$ <= (int64)TMP$5210$7 ) goto label$11356;
       label$11355:;
      }
      SCR_POS$ = SCR_POS$ + 90ull;
     }
     goto label$11351;
     label$11352:;
     SCR_POS$ = 5400ull;
     *(double*)((int64)(double*)MEM64$ + 394912ll) = 0x0p+0;
     fb_FileClose( 1 );
     fb_StrAssign( (void*)&STRCODE$, -1ll, (void*)"press any key to continue.", 27ll, 0 );
     {
      INDEX$ = (uint16)1u;
      uint16 TMP$5212$6;
      int64 vr$9703 = fb_StrLen( (void*)&STRCODE$, -1ll );
      TMP$5212$6 = (uint16)vr$9703;
      goto label$11359;
      label$11362:;
      {
       FBSTRING* vr$9706 = fb_StrMid( (FBSTRING*)&STRCODE$, (int64)INDEX$, 1ll );
       uint32 vr$9707 = fb_ASC( (FBSTRING*)vr$9706, 1ll );
       *(double*)((int64)(double*)MEM64$ + 394888ll) = (double)vr$9707;
       if( ((int64)-(*(double*)((int64)(double*)MEM64$ + 394888ll) > 0x1.Fp+4) & (int64)-(*(double*)((int64)(double*)MEM64$ + 394888ll) < 0x1.p+6)) == 0ll ) goto label$11364;
       {
        *(double*)((int64)(double*)MEM64$ + 394888ll) = *(double*)((int64)(double*)MEM64$ + 394888ll) + 0x1.p+5;
        label$11364:;
       }
       _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, (double)((uint64)((int64)INDEX$ + 16383ll) + SCR_POS$), (double)(((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394888ll) + 0x1.p+5 )) & 63ll) );
      }
      label$11360:;
      INDEX$ = (uint16)((int64)INDEX$ + 1ll);
      label$11359:;
      if( (int64)INDEX$ <= (int64)TMP$5212$6 ) goto label$11362;
      label$11361:;
     }
     __builtin_memset( &TMP$5214$5, 0, 24ll );
     FBSTRING* vr$9728 = fb_StrConcat( &TMP$5214$5, (void*)"rm ./tmp; ./", 13ll, (void*)&FILENAME$, -1ll );
     fb_Shell( (FBSTRING*)vr$9728 );
     SCR_POS$ = 0ull;
     fb_StrAssign( (void*)&STRCODE$, -1ll, (void*)"", 1ll, 0 );
     fb_GfxPut( (void*)0ull, 0x0p+0f, 0x0p+0f, (void*)FGIMAGE$, -65536, -65536, -65536, -65536, 0, 1, (void*)&fb_hPutPSet, -1, (void*)0ull, (void*)0ull );
     fb_Sleep( -1 );
     fb_GfxLine( FGIMAGE$, 0x0p+0f, 0x0p+0f, (float)SCR_W$, (float)SCR_H$, 4278190080u, 2, 65535u, 0 );
     fb_GfxPut( (void*)0ull, 0x0p+0f, 0x0p+0f, (void*)FGIMAGE$, -65536, -65536, -65536, -65536, 0, 1, (void*)&fb_hPutPSet, -1, (void*)0ull, (void*)0ull );
    }
    goto label$11275;
    label$11349:;
    if( V$1 != 0x1.Bp+4 ) goto label$11365;
    label$11366:;
    {
     *(double*)((int64)(double*)MEM64$ + 394840ll) = 0x0p+0;
     *(double*)((int64)(double*)MEM64$ + 394848ll) = 0x0p+0;
     fb_GfxLine( FGIMAGE$, 0x0p+0f, 0x0p+0f, (float)SCR_W$, (float)SCR_H$, 4278190080u, 2, 65535u, 0 );
     fb_FileOpen( (FBSTRING*)&FILENAME$, 0u, 0u, 0u, 1, 0 );
     SCR_POS$ = 0ull;
     *(double*)((int64)(double*)MEM64$ + 394896ll) = 0x0p+0;
     *(double*)((int64)(double*)MEM64$ + 394904ll) = 0x0p+0;
     *(double*)((int64)(double*)MEM64$ + 394912ll) = 0x0p+0;
     label$11367:;
     int32 vr$9733 = fb_FileEof( 1 );
     if( (int64)vr$9733 != 0ll ) goto label$11368;
     {
      fb_FileLineInput( 1, (void*)&STRCODE$, -1ll, 0 );
      {
       INDEX$ = (uint16)1u;
       uint16 TMP$5216$7;
       int64 vr$9735 = fb_StrLen( (void*)&STRCODE$, -1ll );
       TMP$5216$7 = (uint16)vr$9735;
       goto label$11369;
       label$11372:;
       {
        FBSTRING* vr$9738 = fb_StrMid( (FBSTRING*)&STRCODE$, (int64)INDEX$, 1ll );
        uint32 vr$9739 = fb_ASC( (FBSTRING*)vr$9738, 1ll );
        *(double*)((int64)(double*)MEM64$ + 394888ll) = (double)vr$9739;
        if( ((int64)-(*(double*)((int64)(double*)MEM64$ + 394888ll) > 0x1.Fp+4) & (int64)-(*(double*)((int64)(double*)MEM64$ + 394888ll) < 0x1.p+6)) == 0ll ) goto label$11374;
        {
         *(double*)((int64)(double*)MEM64$ + 394888ll) = *(double*)((int64)(double*)MEM64$ + 394888ll) + 0x1.p+5;
         label$11374:;
        }
        _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, (double)((uint64)((int64)INDEX$ + 16383ll) + SCR_POS$), (double)(((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394888ll) + 0x1.p+5 )) & 63ll) );
       }
       label$11370:;
       INDEX$ = (uint16)((int64)INDEX$ + 1ll);
       label$11369:;
       if( (int64)INDEX$ <= (int64)TMP$5216$7 ) goto label$11372;
       label$11371:;
      }
      SCR_POS$ = SCR_POS$ + 90ull;
     }
     goto label$11367;
     label$11368:;
     SCR_POS$ = 5400ull;
     *(double*)((int64)(double*)MEM64$ + 394912ll) = 0x0p+0;
     fb_FileClose( 1 );
     fb_StrAssign( (void*)&STRCODE$, -1ll, (void*)"press any key to continue.", 27ll, 0 );
     {
      INDEX$ = (uint16)1u;
      uint16 TMP$5217$6;
      int64 vr$9759 = fb_StrLen( (void*)&STRCODE$, -1ll );
      TMP$5217$6 = (uint16)vr$9759;
      goto label$11375;
      label$11378:;
      {
       FBSTRING* vr$9762 = fb_StrMid( (FBSTRING*)&STRCODE$, (int64)INDEX$, 1ll );
       uint32 vr$9763 = fb_ASC( (FBSTRING*)vr$9762, 1ll );
       *(double*)((int64)(double*)MEM64$ + 394888ll) = (double)vr$9763;
       if( ((int64)-(*(double*)((int64)(double*)MEM64$ + 394888ll) > 0x1.Fp+4) & (int64)-(*(double*)((int64)(double*)MEM64$ + 394888ll) < 0x1.p+6)) == 0ll ) goto label$11380;
       {
        *(double*)((int64)(double*)MEM64$ + 394888ll) = *(double*)((int64)(double*)MEM64$ + 394888ll) + 0x1.p+5;
        label$11380:;
       }
       _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, (double)((uint64)((int64)INDEX$ + 16383ll) + SCR_POS$), (double)(((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394888ll) + 0x1.p+5 )) & 63ll) );
      }
      label$11376:;
      INDEX$ = (uint16)((int64)INDEX$ + 1ll);
      label$11375:;
      if( (int64)INDEX$ <= (int64)TMP$5217$6 ) goto label$11378;
      label$11377:;
     }
     SCR_POS$ = 0ull;
     fb_StrAssign( (void*)&STRCODE$, -1ll, (void*)"", 1ll, 0 );
     fb_GfxPut( (void*)0ull, 0x0p+0f, 0x0p+0f, (void*)FGIMAGE$, -65536, -65536, -65536, -65536, 0, 1, (void*)&fb_hPutPSet, -1, (void*)0ull, (void*)0ull );
     fb_Sleep( -1 );
     fb_GfxLine( FGIMAGE$, 0x0p+0f, 0x0p+0f, (float)SCR_W$, (float)SCR_H$, 4278190080u, 2, 65535u, 0 );
     fb_GfxPut( (void*)0ull, 0x0p+0f, 0x0p+0f, (void*)FGIMAGE$, -65536, -65536, -65536, -65536, 0, 1, (void*)&fb_hPutPSet, -1, (void*)0ull, (void*)0ull );
    }
    goto label$11275;
    label$11365:;
    if( V$1 != 0x1.Cp+4 ) goto label$11381;
    label$11382:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"", 1ll, 0 );
    }
    label$11381:;
    label$11275:;
   }
  }
  goto label$8963;
  label$11273:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$11383;
  label$11384:;
  {
   fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.glsl", 9ll, 0 );
   _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), 0x1.8142p+15, 0x0p+0 );
  }
  goto label$8963;
  label$11383:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$11385;
  label$11386:;
  {
   int64 TMP$5219$3;
   int64 TMP$5220$3;
   int64 X$3;
   __builtin_memset( &X$3, 0, 8ll );
   int64 Y$3;
   __builtin_memset( &Y$3, 0, 8ll );
   int64 WHEEL$3;
   __builtin_memset( &WHEEL$3, 0, 8ll );
   int64 BUTTONS$3;
   __builtin_memset( &BUTTONS$3, 0, 8ll );
   int64 RES$3;
   __builtin_memset( &RES$3, 0, 8ll );
   TMP$5220$3 = 0ll;
   TMP$5219$3 = 0ll;
   int32 vr$9815 = fb_GetMouse64( (int64*)&X$3, (int64*)&Y$3, &TMP$5219$3, (int64*)&BUTTONS$3, &TMP$5220$3 );
   *(double*)((int64)(double*)MEM64$ + 394576ll) = (double)vr$9815;
   *(double*)((int64)(double*)MEM64$ + 394840ll) = (double)X$3;
   *(double*)((int64)(double*)MEM64$ + 394848ll) = (double)Y$3;
   *(double*)((int64)(double*)MEM64$ + 394856ll) = (double)WHEEL$3;
   if( (BUTTONS$3 & 1ll) == 0ll ) goto label$11388;
   {
    *(double*)((int64)(double*)MEM64$ + 394864ll) = 0x1.p+0;
    label$11388:;
   }
   if( (BUTTONS$3 & 2ll) == 0ll ) goto label$11390;
   {
    *(double*)((int64)(double*)MEM64$ + 394864ll) = 0x1.p+1;
    label$11390:;
   }
   if( (BUTTONS$3 & 4ll) == 0ll ) goto label$11392;
   {
    *(double*)((int64)(double*)MEM64$ + 394864ll) = 0x1.p+2;
    label$11392:;
   }
  }
  goto label$8963;
  label$11385:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$11393;
  label$11394:;
  {
   fb_PageCopy( ((int32)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394840ll) )), ((int32)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394848ll) )) );
  }
  goto label$8963;
  label$11393:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$11395;
  label$11396:;
  {
   FBSTRING TMP$5223$3;
   FBSTRING TMP$5224$3;
   uint8 TMP$3;
   __builtin_memset( &TMP$3, 0, 1ll );
   {
    int64 C$4;
    C$4 = 0ll;
    label$11400:;
    {
     *(double*)((uint8*)((uint8*)THIS$1 + (C$4 << (3ll & 63ll))) + 262144ll) = 0x0p+0;
    }
    label$11398:;
    C$4 = C$4 + 1ll;
    label$11397:;
    if( C$4 <= 8191ll ) goto label$11400;
    label$11399:;
   }
   FBSTRING* vr$9849 = fb_DoubleToStr( V$1 );
   __builtin_memset( &TMP$5223$3, 0, 24ll );
   FBSTRING* vr$9852 = fb_StrConcat( &TMP$5223$3, (void*)"./chargen/", 11ll, (void*)vr$9849, -1ll );
   __builtin_memset( &TMP$5224$3, 0, 24ll );
   FBSTRING* vr$9855 = fb_StrConcat( &TMP$5224$3, (void*)vr$9852, -1ll, (void*)".c64", 5ll );
   fb_FileOpen( (FBSTRING*)vr$9855, 0u, 0u, 0u, 1, 0 );
   {
    int64 I$4;
    I$4 = 0ll;
    int64 TMP$5225$4;
    int64 vr$9856 = fb_FileSize( 1 );
    TMP$5225$4 = vr$9856;
    goto label$11401;
    label$11404:;
    {
     fb_FileGetLarge( 1, 0ll, (void*)&TMP$3, 1ull );
     *(double*)((uint8*)((uint8*)THIS$1 + (I$4 << (3ll & 63ll))) + 262144ll) = (double)TMP$3;
    }
    label$11402:;
    I$4 = I$4 + 1ll;
    label$11401:;
    if( I$4 <= TMP$5225$4 ) goto label$11404;
    label$11403:;
   }
   fb_FileClose( 1 );
  }
  goto label$8963;
  label$11395:;
  if( ADR$1 == (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$11406;
  label$11407:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$11405;
  label$11406:;
  {
   {
    if( V$1 < (double)(int64)*(uint8*)NIBBLES$ ) goto label$11409;
    if( V$1 > (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) ) goto label$11409;
    label$11410:;
    {
     double vr$9892 = _ZN12SYSTEM_BUS_T8K_MODULOEdd( THIS$1, V$1, (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) );
     _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), (double)FCOLOR$, vr$9892 );
    }
    goto label$11408;
    label$11409:;
    if( V$1 < (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$11411;
    if( V$1 > (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$11411;
    label$11412:;
    {
     _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)), (double)(((((int64)__builtin_nearbyint( V$1 - (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) )) % (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) * (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll))) % (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) );
    }
    goto label$11408;
    label$11411:;
    if( V$1 < (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$11413;
    if( V$1 > (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$11413;
    label$11414:;
    {
     _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)), (double)(((((int64)__builtin_nearbyint( V$1 - (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) )) % (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) * (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll))) % (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) );
    }
    goto label$11408;
    label$11413:;
    if( V$1 < (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$11415;
    if( V$1 > (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$11415;
    label$11416:;
    {
     _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)), (double)(((((int64)__builtin_nearbyint( V$1 - (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) )) % (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) * (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll))) % (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) );
    }
    goto label$11408;
    label$11415:;
    {
     _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)), (double)(((((int64)__builtin_nearbyint( V$1 - (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) )) % (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) * (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll))) % (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) );
    }
    label$11417:;
    label$11408:;
   }
   if( ADR$1 != 0x1.81D8p+15 ) goto label$11419;
   {
    double vr$10053 = _ZN12SYSTEM_BUS_T6PEEK64Ed( THIS$1, 0x1.8192p+15 );
    _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), 0x1.A04p+15, vr$10053 );
    double vr$10055 = _ZN12SYSTEM_BUS_T6PEEK64Ed( THIS$1, 0x1.8192p+15 );
    _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), 0x1.A042p+15, vr$10055 );
   }
   label$11419:;
   label$11418:;
  }
  goto label$8963;
  label$11405:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$11420;
  label$11421:;
  {
   {
    if( V$1 < (double)(int64)*(uint8*)NIBBLES$ ) goto label$11423;
    if( V$1 > (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) ) goto label$11423;
    label$11424:;
    {
     double vr$10077 = _ZN12SYSTEM_BUS_T8K_MODULOEdd( THIS$1, V$1, (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) );
     _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), (double)BGCOL0$, vr$10077 );
    }
    goto label$11422;
    label$11423:;
    if( V$1 < (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$11425;
    if( V$1 > (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$11425;
    label$11426:;
    {
     _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)), (double)(((((int64)__builtin_nearbyint( V$1 - (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) )) % (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) * (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll))) % (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) );
    }
    goto label$11422;
    label$11425:;
    if( V$1 < (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$11427;
    if( V$1 > (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$11427;
    label$11428:;
    {
     _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)), (double)(((((int64)__builtin_nearbyint( V$1 - (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) )) % (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) * (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll))) % (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) );
    }
    goto label$11422;
    label$11427:;
    if( V$1 < (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$11429;
    if( V$1 > (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$11429;
    label$11430:;
    {
     _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)), (double)(((((int64)__builtin_nearbyint( V$1 - (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) )) % (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) * (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll))) % (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) );
    }
    goto label$11422;
    label$11429:;
    {
     _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)), (double)(((((int64)__builtin_nearbyint( V$1 - (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) )) % (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) * (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll))) % (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) );
    }
    label$11431:;
    label$11422:;
   }
  }
  goto label$8963;
  label$11420:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$11432;
  label$11433:;
  {
   fb_GfxLine( FGIMAGE$, (float)*(double*)((int64)(double*)MEM64$ + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))), (float)*(double*)((int64)(double*)MEM64$ + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) << (3ll & 63ll))), (float)*(double*)((int64)(double*)MEM64$ + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) << (3ll & 63ll))), (float)*(double*)((int64)(double*)MEM64$ + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) << (3ll & 63ll))), (uint32)((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) << (3ll & 63ll))) )), 2, 65535u, 0 );
  }
  goto label$8963;
  label$11432:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$11434;
  label$11435:;
  {
   fb_GfxLine( FGIMAGE$, (float)*(double*)((int64)(double*)MEM64$ + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))), (float)*(double*)((int64)(double*)MEM64$ + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) << (3ll & 63ll))), (float)*(double*)((int64)(double*)MEM64$ + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) << (3ll & 63ll))), (float)*(double*)((int64)(double*)MEM64$ + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) << (3ll & 63ll))), (uint32)((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) << (3ll & 63ll))) )), 2, 65535u, 0 );
  }
  goto label$8963;
  label$11434:;
  if( ADR$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) ) goto label$11436;
  label$11437:;
  {
   fb_GfxScreen( 0, 8, 0, 0, 0 );
   fb_Chain( (FBSTRING*)&STRCODE$ );
   fb_StrAssign( (void*)&STRCODE$, -1ll, (void*)"", 1ll, 0 );
   fb_GfxScreenRes( 1920, 1080, 32, 0, 65, 0 );
   fb_Cls( -65536 );
   FBSTRING* vr$10376 = fb_StrAllocTempDescZEx( (uint8*)"", 0ll );
   fb_GfxPaint( (void*)0ull, 0x0p+0f, 0x0p+0f, 4278190080u, 0u, (FBSTRING*)vr$10376, 0, 1073741828 );
   {
    OFFSET$ = 0x0p+0;
    label$11441:;
    {
     _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, *(double*)((int64)(double*)MEM64$ + 395608ll) + OFFSET$, 0x1.p+5 );
    }
    label$11439:;
    OFFSET$ = OFFSET$ + 0x1.p+0;
    label$11438:;
    if( OFFSET$ <= 0x1.p+10 ) goto label$11441;
    label$11440:;
   }
  }
  goto label$8963;
  label$11436:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$11442;
  label$11443:;
  {
   FBSTRING TMP$5227$3;
   fb_GfxScreen( 0, 8, 0, 0, 0 );
   __builtin_memset( &TMP$5227$3, 0, 24ll );
   FBSTRING* vr$10391 = fb_StrConcat( &TMP$5227$3, (void*)"wine ", 6ll, (void*)&STRCODE$, -1ll );
   fb_Shell( (FBSTRING*)vr$10391 );
   fb_StrAssign( (void*)&STRCODE$, -1ll, (void*)"", 1ll, 0 );
   fb_GfxScreenRes( 1920, 1080, 32, 0, 65, 0 );
   fb_Cls( -65536 );
   FBSTRING* vr$10392 = fb_StrAllocTempDescZEx( (uint8*)"", 0ll );
   fb_GfxPaint( (void*)0ull, 0x0p+0f, 0x0p+0f, 4278190080u, 0u, (FBSTRING*)vr$10392, 0, 1073741828 );
   {
    OFFSET$ = 0x0p+0;
    label$11447:;
    {
     _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, *(double*)((int64)(double*)MEM64$ + 395608ll) + OFFSET$, 0x1.p+5 );
    }
    label$11445:;
    OFFSET$ = OFFSET$ + 0x1.p+0;
    label$11444:;
    if( OFFSET$ <= 0x1.p+10 ) goto label$11447;
    label$11446:;
   }
  }
  goto label$8963;
  label$11442:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$11448;
  label$11449:;
  {
   FBSTRING TMP$5230$3;
   FBSTRING TMP$5231$3;
   fb_GfxScreen( 0, 8, 0, 0, 0 );
   __builtin_memset( &TMP$5230$3, 0, 24ll );
   FBSTRING* vr$10407 = fb_StrConcat( &TMP$5230$3, (void*)"dosbox-x ", 10ll, (void*)&STRCODE$, -1ll );
   __builtin_memset( &TMP$5231$3, 0, 24ll );
   FBSTRING* vr$10410 = fb_StrConcat( &TMP$5231$3, (void*)vr$10407, -1ll, (void*)" -fullscreen -exit", 19ll );
   fb_Shell( (FBSTRING*)vr$10410 );
   fb_StrAssign( (void*)&STRCODE$, -1ll, (void*)"", 1ll, 0 );
   fb_GfxScreenRes( 1920, 1080, 32, 0, 65, 0 );
   fb_Cls( -65536 );
   FBSTRING* vr$10411 = fb_StrAllocTempDescZEx( (uint8*)"", 0ll );
   fb_GfxPaint( (void*)0ull, 0x0p+0f, 0x0p+0f, 4278190080u, 0u, (FBSTRING*)vr$10411, 0, 1073741828 );
  }
  goto label$8963;
  label$11448:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$11450;
  label$11451:;
  {
   FBSTRING TMP$5233$3;
   __builtin_memset( &TMP$5233$3, 0, 24ll );
   FBSTRING* vr$10424 = fb_StrConcat( &TMP$5233$3, (void*)&STRCODE$, -1ll, (void*)".asm", 5ll );
   fb_FileOpen( (FBSTRING*)vr$10424, 3u, 0u, 0u, 1, 0 );
   fb_StrAssign( (void*)&STRCODE$, -1ll, (void*)"", 1ll, 0 );
  }
  goto label$8963;
  label$11450:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$11452;
  label$11453:;
  {
   fb_PrintString( 1, (FBSTRING*)&STRCODE$, 1 );
   fb_StrAssign( (void*)&STRCODE$, -1ll, (void*)"", 1ll, 0 );
  }
  goto label$8963;
  label$11452:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$11454;
  label$11455:;
  {
   fb_FileClose( 1 );
   fb_StrAssign( (void*)&STRCODE$, -1ll, (void*)"", 1ll, 0 );
  }
  goto label$8963;
  label$11454:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$11456;
  label$11457:;
  {
   FBSTRING TMP$5237$3;
   FBSTRING TMP$5238$3;
   FBSTRING TMP$5239$3;
   FBSTRING TMP$5240$3;
   __builtin_memset( &TMP$5237$3, 0, 24ll );
   FBSTRING* vr$10457 = fb_StrConcat( &TMP$5237$3, (void*)"nasm ", 6ll, (void*)&STRCODE$, -1ll );
   __builtin_memset( &TMP$5238$3, 0, 24ll );
   FBSTRING* vr$10460 = fb_StrConcat( &TMP$5238$3, (void*)vr$10457, -1ll, (void*)".asm -f bin -o", 15ll );
   __builtin_memset( &TMP$5239$3, 0, 24ll );
   FBSTRING* vr$10463 = fb_StrConcat( &TMP$5239$3, (void*)vr$10460, -1ll, (void*)&STRCODE$, -1ll );
   __builtin_memset( &TMP$5240$3, 0, 24ll );
   FBSTRING* vr$10466 = fb_StrConcat( &TMP$5240$3, (void*)vr$10463, -1ll, (void*)".bin", 5ll );
   fb_Shell( (FBSTRING*)vr$10466 );
   fb_StrAssign( (void*)&STRCODE$, -1ll, (void*)"", 1ll, 0 );
  }
  goto label$8963;
  label$11456:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$11458;
  label$11459:;
  {
   FBSTRING TMP$5243$3;
   FBSTRING TMP$5244$3;
   FBSTRING TMP$5245$3;
   FBSTRING TMP$5247$3;
   fb_GfxScreen( 0, 8, 0, 0, 0 );
   __builtin_memset( &TMP$5243$3, 0, 24ll );
   FBSTRING* vr$10479 = fb_StrConcat( &TMP$5243$3, (void*)"dosbox-x -c 'boot ", 19ll, (void*)&STRCODE$, -1ll );
   __builtin_memset( &TMP$5244$3, 0, 24ll );
   FBSTRING* vr$10482 = fb_StrConcat( &TMP$5244$3, (void*)vr$10479, -1ll, (void*)"'", 2ll );
   __builtin_memset( &TMP$5245$3, 0, 24ll );
   FBSTRING* vr$10485 = fb_StrConcat( &TMP$5245$3, (void*)vr$10482, -1ll, (void*)" -exit", 7ll );
   fb_Shell( (FBSTRING*)vr$10485 );
   __builtin_memset( &TMP$5247$3, 0, 24ll );
   FBSTRING* vr$10488 = fb_StrConcat( &TMP$5247$3, (void*)"rm ", 4ll, (void*)&STRCODE$, -1ll );
   fb_Shell( (FBSTRING*)vr$10488 );
   fb_StrAssign( (void*)&STRCODE$, -1ll, (void*)"", 1ll, 0 );
   fb_GfxScreenRes( 1920, 1080, 32, 0, 65, 0 );
   fb_Cls( -65536 );
   FBSTRING* vr$10489 = fb_StrAllocTempDescZEx( (uint8*)"", 0ll );
   fb_GfxPaint( (void*)0ull, 0x0p+0f, 0x0p+0f, 4278190080u, 0u, (FBSTRING*)vr$10489, 0, 1073741828 );
   {
    OFFSET$ = 0x0p+0;
    label$11463:;
    {
     _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( SYS_OFFSET$ + 0x1.2Bp+8 )) << (3ll & 63ll))) + OFFSET$, 0x1.p+5 );
    }
    label$11461:;
    OFFSET$ = OFFSET$ + 0x1.p+0;
    label$11460:;
    if( OFFSET$ <= 0x1.p+10 ) goto label$11463;
    label$11462:;
   }
  }
  goto label$8963;
  label$11458:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$11464;
  label$11465:;
  {
   fb_Shell( (FBSTRING*)&STRCODE$ );
   fb_StrAssign( (void*)&STRCODE$, -1ll, (void*)"", 1ll, 0 );
  }
  goto label$8963;
  label$11464:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$11466;
  label$11467:;
  {
   SWCH$ = V$1;
  }
  goto label$8963;
  label$11466:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$11468;
  label$11469:;
  {
   FBSTRING* vr$10526 = fb_CHR( 1, ((int64)__builtin_nearbyint( V$1 )) );
   FBSTRING* vr$10527 = fb_StrLcase2( (FBSTRING*)vr$10526, 0 );
   fb_StrConcatAssign( (void*)&STRCODE$, -1ll, (void*)vr$10527, -1ll, 0 );
  }
  goto label$8963;
  label$11468:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$11470;
  label$11471:;
  {
   fb_PrintString( 1, (FBSTRING*)&STRCODE$, 1 );
   fb_StrAssign( (void*)&STRCODE$, -1ll, (void*)"", 1ll, 0 );
  }
  goto label$8963;
  label$11470:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$11472;
  label$11473:;
  {
   *(double*)((int64)(double*)MEM64$ + ((int64)RVS$ << (3ll & 63ll))) = V$1;
   if( (((int64)__builtin_nearbyint( *(double*)((uint8*)((uint8*)THIS$1 + (C$ << (3ll & 63ll))) + 262144ll) )) & (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) >> (X$ & 63ll))) == 0ll ) goto label$11475;
   {
    if( *(double*)((int64)(double*)MEM64$ + ((int64)RVS$ << (3ll & 63ll))) == (double)(int64)*(uint8*)NIBBLES$ ) goto label$11477;
    {
     _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)), (double)*(uint8*)NIBBLES$ );
    }
    goto label$11476;
    label$11477:;
    {
     _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)), (double)*(uint8*)NIBBLES$ );
    }
    label$11476:;
   }
   goto label$11474;
   label$11475:;
   {
    if( *(double*)((int64)(double*)MEM64$ + ((int64)RVS$ << (3ll & 63ll))) == (double)(int64)*(uint8*)NIBBLES$ ) goto label$11479;
    {
     _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)), (double)*(uint8*)NIBBLES$ );
    }
    goto label$11478;
    label$11479:;
    {
     _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)), (double)*(uint8*)NIBBLES$ );
    }
    label$11478:;
   }
   label$11474:;
  }
  goto label$8963;
  label$11472:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$11480;
  label$11481:;
  {
   fb_FileClose( 1 );
  }
  goto label$8963;
  label$11480:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$11482;
  label$11483:;
  {
   FBSTRING* vr$10635 = fb_CHR( 1, ((int64)__builtin_nearbyint( V$1 )) );
   FBSTRING* vr$10636 = fb_StrLcase2( (FBSTRING*)vr$10635, 0 );
   fb_StrConcatAssign( (void*)&FILENAME$, -1ll, (void*)vr$10636, -1ll, 0 );
  }
  goto label$8963;
  label$11482:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$11484;
  label$11485:;
  {
   _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), 0x1.8142p+15, 0x0p+0 );
   fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"", 1ll, 0 );
  }
  goto label$8963;
  label$11484:;
  if( ADR$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) ) goto label$11486;
  label$11487:;
  {
   {
    if( V$1 != (double)(int64)*(uint8*)NIBBLES$ ) goto label$11489;
    label$11490:;
    {
     *(double*)((int64)(double*)MEM64$ + 395032ll) = 0x0p+0;
     *(double*)((int64)(double*)MEM64$ + 395040ll) = 0x0p+0;
    }
    goto label$11488;
    label$11489:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$11491;
    label$11492:;
    {
     *(double*)((int64)(double*)MEM64$ + 395032ll) = 0x1.91p+9;
     *(double*)((int64)(double*)MEM64$ + 395040ll) = 0x0p+0;
    }
    goto label$11488;
    label$11491:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) ) goto label$11493;
    label$11494:;
    {
     *(double*)((int64)(double*)MEM64$ + 395032ll) = 0x0p+0;
     *(double*)((int64)(double*)MEM64$ + 395040ll) = 0x1.86p+8;
    }
    goto label$11488;
    label$11493:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) ) goto label$11495;
    label$11496:;
    {
     *(double*)((int64)(double*)MEM64$ + 395032ll) = 0x1.91p+9;
     *(double*)((int64)(double*)MEM64$ + 395040ll) = 0x1.86p+8;
    }
    label$11495:;
    label$11488:;
   }
  }
  goto label$8963;
  label$11486:;
  if( ADR$1 != 0x1.8202p+15 ) goto label$11497;
  label$11498:;
  {
   {
    if( V$1 != (double)(int64)*(uint8*)NIBBLES$ ) goto label$11500;
    label$11501:;
    {
     {
      X$ = ((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394952ll) ));
      int64 TMP$5248$6;
      TMP$5248$6 = ((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394960ll) ));
      goto label$11502;
      label$11505:;
      {
       {
        Y$ = ((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394168ll) ));
        int64 TMP$5249$8;
        TMP$5249$8 = ((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394976ll) ));
        goto label$11506;
        label$11509:;
        {
         _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), 0x1.8004p+15, ((double)X$ / __builtin_fabs( (*(double*)((int64)(double*)MEM64$ + 394952ll) - *(double*)((int64)(double*)MEM64$ + 394960ll)) )) * 0x1.FEp+7 );
         _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), 0x1.8006p+15, (double)G$ );
         _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), 0x1.8008p+15, ((double)Y$ / __builtin_fabs( (*(double*)((int64)(double*)MEM64$ + 394168ll) - *(double*)((int64)(double*)MEM64$ + 394976ll)) )) * 0x1.FEp+7 );
         fb_GfxPset( FGIMAGE$, (float)X$, (float)Y$, (uint32)((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394824ll) )), 4, 0 );
        }
        label$11507:;
        Y$ = Y$ + 1ll;
        label$11506:;
        if( Y$ <= TMP$5249$8 ) goto label$11509;
        label$11508:;
       }
       G$ = ((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394928ll) ));
      }
      label$11503:;
      X$ = X$ + 1ll;
      label$11502:;
      if( X$ <= TMP$5248$6 ) goto label$11505;
      label$11504:;
     }
     fb_GfxPut( (void*)0ull, 0x0p+0f, 0x0p+0f, (void*)FGIMAGE$, -65536, -65536, -65536, -65536, 0, 6, (void*)&fb_hPutAlpha, -1, (void*)0ull, (void*)0ull );
    }
    goto label$11499;
    label$11500:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$11510;
    label$11511:;
    {
     double vr$10692 = _ZN12SYSTEM_BUS_T7K_SQRTFEd( THIS$1, 0x1.9p+4 );
     FBSTRING* vr$10693 = fb_DoubleToStr( vr$10692 );
     uint32 vr$10694 = fb_ASC( (FBSTRING*)vr$10693, 1ll );
     _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.p+10, (double)(((int64)vr$10694 + 2ll) & 63ll) );
    }
    goto label$11499;
    label$11510:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) ) goto label$11512;
    label$11513:;
    {
    }
    goto label$11499;
    label$11512:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) ) goto label$11514;
    label$11515:;
    {
     uint32 COLOUR$5;
     __builtin_memset( &COLOUR$5, 0, 4ll );
     double XPOS$5;
     __builtin_memset( &XPOS$5, 0, 8ll );
     double YPOS$5;
     __builtin_memset( &YPOS$5, 0, 8ll );
     uint8 R$5;
     __builtin_memset( &R$5, 0, 1ll );
     uint8 G$5;
     __builtin_memset( &G$5, 0, 1ll );
     uint8 B$5;
     __builtin_memset( &B$5, 0, 1ll );
     uint8 A$5;
     __builtin_memset( &A$5, 0, 1ll );
     {
      int32 XX$6;
      XX$6 = 0;
      label$11519:;
      {
       double PS$7;
       double vr$10711 = _ZN12SYSTEM_BUS_T3MAPEddddd( THIS$1, 0x0p+0, 0x1.Ep+10, (double)XX$6, 0x1.4p+6, 0x1.9p+8 );
       PS$7 = vr$10711;
       uint32 vr$10713 = _ZN12SYSTEM_BUS_T10RAINBOWISHEfa( THIS$1, (float)PS$7, (int8)0 );
       COLOUR$5 = vr$10713;
       {
        int32 YY$8;
        YY$8 = 0;
        label$11523:;
        {
         R$5 = *(uint8*)((uint8*)&COLOUR$5 + 2ll);
         G$5 = *(uint8*)((uint8*)&COLOUR$5 + 1ll);
         B$5 = *(uint8*)&COLOUR$5;
         double vr$10718 = _ZN12SYSTEM_BUS_T3MAPEddddd( THIS$1, 0x1.0Ep+9, 0x0p+0, (double)YY$8, 0x0p+0, 0x1.FEp+7 );
         A$5 = (uint8)((int32)__builtin_nearbyint( vr$10718 ));
         fb_GfxPset( FGIMAGE$, (float)XX$6, (float)YY$8, (uint32)(((((int64)(uint32)R$5 << (16ll & 63ll)) | ((int64)(uint32)G$5 << (8ll & 63ll))) | (int64)(uint32)B$5) | ((int64)(uint32)A$5 << (24ll & 63ll))), 4, 0 );
        }
        label$11521:;
        YY$8 = (int32)((int64)YY$8 + 1ll);
        label$11520:;
        if( (int64)YY$8 <= 540ll ) goto label$11523;
        label$11522:;
       }
      }
      label$11517:;
      XX$6 = (int32)((int64)XX$6 + 1ll);
      label$11516:;
      if( (int64)XX$6 <= 1920ll ) goto label$11519;
      label$11518:;
     }
    }
    goto label$11499;
    label$11514:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) ) goto label$11524;
    label$11525:;
    {
     uint32 COLOUR$5;
     __builtin_memset( &COLOUR$5, 0, 4ll );
     double XPOS$5;
     __builtin_memset( &XPOS$5, 0, 8ll );
     double YPOS$5;
     __builtin_memset( &YPOS$5, 0, 8ll );
     uint8 R$5;
     __builtin_memset( &R$5, 0, 1ll );
     uint8 G$5;
     __builtin_memset( &G$5, 0, 1ll );
     uint8 B$5;
     __builtin_memset( &B$5, 0, 1ll );
     uint8 A$5;
     __builtin_memset( &A$5, 0, 1ll );
     {
      int32 XX$6;
      XX$6 = 0;
      label$11529:;
      {
       double PS$7;
       double vr$10755 = _ZN12SYSTEM_BUS_T3MAPEddddd( THIS$1, 0x0p+0, 0x1.Ep+10, (double)XX$6, 0x1.4p+6, 0x1.9p+8 );
       PS$7 = vr$10755;
       uint32 vr$10757 = _ZN12SYSTEM_BUS_T10RAINBOWISHEfa( THIS$1, (float)PS$7, (int8)0 );
       COLOUR$5 = vr$10757;
       {
        int32 YY$8;
        YY$8 = 0;
        label$11533:;
        {
         R$5 = *(uint8*)((uint8*)&COLOUR$5 + 2ll);
         G$5 = *(uint8*)((uint8*)&COLOUR$5 + 1ll);
         B$5 = *(uint8*)&COLOUR$5;
         double vr$10762 = _ZN12SYSTEM_BUS_T3MAPEddddd( THIS$1, 0x1.0Ep+9, 0x0p+0, (double)YY$8, 0x0p+0, 0x1.FEp+7 );
         A$5 = (uint8)((int32)__builtin_nearbyint( vr$10762 ));
         fb_GfxPset( FGIMAGE$, (float)XX$6, (float)YY$8, (uint32)(((((int64)(uint32)R$5 << (16ll & 63ll)) | ((int64)(uint32)G$5 << (8ll & 63ll))) | (int64)(uint32)B$5) | ((int64)(uint32)A$5 << (24ll & 63ll))), 4, 0 );
        }
        label$11531:;
        YY$8 = (int32)((int64)YY$8 + 1ll);
        label$11530:;
        if( (int64)YY$8 <= 540ll ) goto label$11533;
        label$11532:;
       }
      }
      label$11527:;
      XX$6 = (int32)((int64)XX$6 + 1ll);
      label$11526:;
      if( (int64)XX$6 <= 1920ll ) goto label$11529;
      label$11528:;
     }
     _ZN12SYSTEM_BUS_T10RAINBOWISHEfa( THIS$1, 0x0p+0f, (int8)-1 );
     {
      int32 XX$6;
      XX$6 = 0;
      label$11537:;
      {
       double PS$7;
       double vr$10790 = _ZN12SYSTEM_BUS_T3MAPEddddd( THIS$1, 0x0p+0, 0x1.Ep+10, (double)XX$6, 0x1.4p+6, 0x1.9p+8 );
       PS$7 = vr$10790;
       uint32 vr$10792 = _ZN12SYSTEM_BUS_T10RAINBOWISHEfa( THIS$1, (float)PS$7, (int8)0 );
       COLOUR$5 = vr$10792;
       R$5 = *(uint8*)((uint8*)&COLOUR$5 + 2ll);
       G$5 = *(uint8*)((uint8*)&COLOUR$5 + 1ll);
       B$5 = *(uint8*)&COLOUR$5;
       double RVAL$7;
       double vr$10797 = _ZN12SYSTEM_BUS_T3MAPEddddd( THIS$1, 0x0p+0, 0x1.FEp+7, (double)R$5, 0x1.F4p+9, 0x1.9p+8 );
       RVAL$7 = vr$10797;
       double RAD$7;
       double vr$10799 = _ZN12SYSTEM_BUS_T3MAPEddddd( THIS$1, 0x0p+0, 0x1.FEp+7, (double)R$5, 0x1.p+0, 0x1.p+2 );
       RAD$7 = vr$10799;
       fb_GfxEllipse( FGIMAGE$, (float)XX$6, (float)RVAL$7, (float)RAD$7, 4294901760u, 0x0p+0f, 0x0p+0f, 0x1.921FB8p+2f, -1, 4 );
       double GVAL$7;
       double vr$10804 = _ZN12SYSTEM_BUS_T3MAPEddddd( THIS$1, 0x0p+0, 0x1.FEp+7, (double)G$5, 0x1.F4p+9, 0x1.9p+8 );
       GVAL$7 = vr$10804;
       double vr$10806 = _ZN12SYSTEM_BUS_T3MAPEddddd( THIS$1, 0x0p+0, 0x1.FEp+7, (double)G$5, 0x1.p+0, 0x1.p+2 );
       RAD$7 = vr$10806;
       fb_GfxEllipse( FGIMAGE$, (float)XX$6, (float)GVAL$7, (float)RAD$7, 4278255360u, 0x0p+0f, 0x0p+0f, 0x1.921FB8p+2f, -1, 4 );
       double BVAL$7;
       double vr$10811 = _ZN12SYSTEM_BUS_T3MAPEddddd( THIS$1, 0x0p+0, 0x1.FEp+7, (double)B$5, 0x1.F4p+9, 0x1.9p+8 );
       BVAL$7 = vr$10811;
       double vr$10813 = _ZN12SYSTEM_BUS_T3MAPEddddd( THIS$1, 0x0p+0, 0x1.FEp+7, (double)B$5, 0x1.p+0, 0x1.p+2 );
       RAD$7 = vr$10813;
       fb_GfxEllipse( FGIMAGE$, (float)XX$6, (float)BVAL$7, (float)RAD$7, 4278190335u, 0x0p+0f, 0x0p+0f, 0x1.921FB8p+2f, -1, 4 );
      }
      label$11535:;
      XX$6 = (int32)((int64)XX$6 + 1ll);
      label$11534:;
      if( (int64)XX$6 <= 1920ll ) goto label$11537;
      label$11536:;
     }
     _ZN12SYSTEM_BUS_T6FILTEREPvi( THIS$1, FGIMAGE$, 5 );
     fb_GfxPut( (void*)0ull, 0x0p+0f, 0x0p+0f, (void*)FGIMAGE$, -65536, -65536, -65536, -65536, 0, 6, (void*)&fb_hPutAlpha, -1, (void*)0ull, (void*)0ull );
    }
    goto label$11499;
    label$11524:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) ) goto label$11538;
    label$11539:;
    {
     _ZN12SYSTEM_BUS_T13EXEC_GLSL_120Ev( THIS$1 );
    }
    goto label$11499;
    label$11538:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) ) goto label$11540;
    label$11541:;
    {
     _ZN12SYSTEM_BUS_T12EXEC_GLSL_40Ev( THIS$1 );
    }
    goto label$11499;
    label$11540:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) ) goto label$11542;
    label$11543:;
    {
     _ZN12SYSTEM_BUS_T12EXEC_GLSL_90Ev( THIS$1 );
    }
    goto label$11499;
    label$11542:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) ) goto label$11544;
    label$11545:;
    {
     _ZN12SYSTEM_BUS_T9EXEC_GLSLEv( THIS$1 );
    }
    label$11544:;
    label$11499:;
   }
  }
  goto label$8963;
  label$11497:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$11546;
  label$11547:;
  {
   fb_GfxLock( );
  }
  goto label$8963;
  label$11546:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$11548;
  label$11549:;
  {
   fb_GfxUnlock( ((int32)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) << (3ll & 63ll))) )), ((int32)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) << (3ll & 63ll))) + (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) )) );
  }
  goto label$8963;
  label$11548:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$11550;
  label$11551:;
  {
   fb_GfxUnlock( (int32)YS$, (int32)(YS$ + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) );
  }
  goto label$8963;
  label$11550:;
  if( ADR$1 != 0x1.820Ap+15 ) goto label$11552;
  label$11553:;
  {
   {
    uint64 TMP$5252$4;
    TMP$5252$4 = ((uint64)__builtin_nearbyint( V$1 ));
    goto label$11555;
    label$11556:;
    {
     fb_GfxPset( RASTER$, (float)*(double*)((int64)(double*)MEM64$ + 394840ll), 0x0p+0f, (uint32)((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394824ll) )), 4, 0 );
    }
    goto label$11554;
    label$11557:;
    {
     fb_GfxPset( RASTER$, (float)*(double*)((int64)(double*)MEM64$ + 394840ll), 0x0p+0f, (uint32)((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394832ll) )), 4, 0 );
    }
    goto label$11554;
    label$11558:;
    {
     fb_GfxLine( RASTER$, (float)*(double*)((int64)(double*)MEM64$ + 394840ll), 0x0p+0f, (float)*(double*)((int64)(double*)MEM64$ + 394864ll), 0x0p+0f, (uint32)((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394824ll) )), 0, 65535u, 0 );
    }
    goto label$11554;
    label$11559:;
    {
     fb_GfxLine( RASTER$, (float)*(double*)((int64)(double*)MEM64$ + 394840ll), 0x0p+0f, (float)*(double*)((int64)(double*)MEM64$ + 394864ll), 0x0p+0f, (uint32)((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394832ll) )), 0, 65535u, 0 );
    }
    goto label$11554;
    label$11560:;
    {
     fb_GfxLine( RASTER$, (float)*(double*)((int64)(double*)MEM64$ + 394840ll), 0x0p+0f, (float)*(double*)((int64)(double*)MEM64$ + 394864ll), 0x0p+0f, (uint32)((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394824ll) )), 0, (uint32)((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393584ll) )), 0 );
    }
    goto label$11554;
    label$11561:;
    {
     fb_GfxLine( RASTER$, (float)*(double*)((int64)(double*)MEM64$ + 394840ll), 0x0p+0f, (float)*(double*)((int64)(double*)MEM64$ + 394864ll), 0x0p+0f, (uint32)((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394832ll) )), 0, (uint32)((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393584ll) )), 0 );
    }
    goto label$11554;
    label$11555:;
    static const void* tmp$5324[6ll] = {
     &&label$11556,
     &&label$11557,
     &&label$11558,
     &&label$11559,
     &&label$11560,
     &&label$11561,
    };
    if( TMP$5252$4 > 5ull ) goto label$11554;
    goto *tmp$5324[TMP$5252$4 - 0ull];
    label$11554:;
   }
  }
  goto label$8963;
  label$11552:;
  if( ADR$1 != 0x1.820Cp+15 ) goto label$11562;
  label$11563:;
  {
   {
    if( V$1 != 0x0p+0 ) goto label$11565;
    label$11566:;
    {
     fb_GfxPset( FGIMAGE$, (float)*(double*)((int64)(double*)MEM64$ + 394888ll), (float)*(double*)((int64)(double*)MEM64$ + 394896ll), (uint32)((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394824ll) )), 4, 0 );
    }
    goto label$11564;
    label$11565:;
    if( V$1 != 0x1.p+0 ) goto label$11567;
    label$11568:;
    {
     fb_GfxPset( BGIMAGE$, (float)*(double*)((int64)(double*)MEM64$ + 394888ll), (float)*(double*)((int64)(double*)MEM64$ + 394896ll), (uint32)((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394832ll) )), 4, 0 );
    }
    goto label$11564;
    label$11567:;
    if( V$1 != 0x1.p+1 ) goto label$11569;
    label$11570:;
    {
     fb_GfxLine( FGIMAGE$, (float)*(double*)((int64)(double*)MEM64$ + 394888ll), (float)*(double*)((int64)(double*)MEM64$ + 394896ll), (float)*(double*)((int64)(double*)MEM64$ + 394904ll), (float)*(double*)((int64)(double*)MEM64$ + 394912ll), (uint32)((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394824ll) )), 0, 65535u, 0 );
    }
    goto label$11564;
    label$11569:;
    if( V$1 != 0x1.8p+1 ) goto label$11571;
    label$11572:;
    {
     fb_GfxLine( BGIMAGE$, (float)*(double*)((int64)(double*)MEM64$ + 394888ll), (float)*(double*)((int64)(double*)MEM64$ + 394896ll), (float)*(double*)((int64)(double*)MEM64$ + 394904ll), (float)*(double*)((int64)(double*)MEM64$ + 394912ll), (uint32)((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394832ll) )), 0, 65535u, 0 );
    }
    goto label$11564;
    label$11571:;
    if( V$1 != 0x1.p+2 ) goto label$11573;
    label$11574:;
    {
     fb_GfxLine( FGIMAGE$, (float)*(double*)((int64)(double*)MEM64$ + 394888ll), (float)*(double*)((int64)(double*)MEM64$ + 394896ll), (float)*(double*)((int64)(double*)MEM64$ + 394904ll), (float)*(double*)((int64)(double*)MEM64$ + 394912ll), (uint32)((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394824ll) )), 1, 65535u, 0 );
    }
    goto label$11564;
    label$11573:;
    if( V$1 != 0x1.4p+2 ) goto label$11575;
    label$11576:;
    {
     fb_GfxLine( BGIMAGE$, (float)*(double*)((int64)(double*)MEM64$ + 394888ll), (float)*(double*)((int64)(double*)MEM64$ + 394896ll), (float)*(double*)((int64)(double*)MEM64$ + 394904ll), (float)*(double*)((int64)(double*)MEM64$ + 394920ll), (uint32)((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394832ll) )), 1, 65535u, 0 );
    }
    goto label$11564;
    label$11575:;
    if( V$1 != 0x1.8p+2 ) goto label$11577;
    label$11578:;
    {
     fb_GfxLine( FGIMAGE$, (float)*(double*)((int64)(double*)MEM64$ + 394888ll), (float)*(double*)((int64)(double*)MEM64$ + 394896ll), (float)*(double*)((int64)(double*)MEM64$ + 394904ll), (float)*(double*)((int64)(double*)MEM64$ + 394912ll), (uint32)((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394824ll) )), 2, 65535u, 0 );
    }
    goto label$11564;
    label$11577:;
    if( V$1 != 0x1.Cp+2 ) goto label$11579;
    label$11580:;
    {
     fb_GfxLine( BGIMAGE$, (float)*(double*)((int64)(double*)MEM64$ + 394888ll), (float)*(double*)((int64)(double*)MEM64$ + 394896ll), (float)*(double*)((int64)(double*)MEM64$ + 394904ll), (float)*(double*)((int64)(double*)MEM64$ + 394912ll), (uint32)((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394832ll) )), 2, 65535u, 0 );
    }
    goto label$11564;
    label$11579:;
    if( V$1 != 0x1.p+3 ) goto label$11581;
    label$11582:;
    {
     fb_GfxEllipse( FGIMAGE$, (float)*(double*)((int64)(double*)MEM64$ + 394888ll), (float)*(double*)((int64)(double*)MEM64$ + 394896ll), (float)*(double*)((int64)(double*)MEM64$ + 394904ll), (uint32)((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394824ll) )), 0x0p+0f, 0x0p+0f, 0x1.921FB8p+2f, 0, 4 );
    }
    goto label$11564;
    label$11581:;
    if( V$1 != 0x1.2p+3 ) goto label$11583;
    label$11584:;
    {
     fb_GfxEllipse( BGIMAGE$, (float)*(double*)((int64)(double*)MEM64$ + 394888ll), (float)*(double*)((int64)(double*)MEM64$ + 394896ll), (float)*(double*)((int64)(double*)MEM64$ + 394904ll), (uint32)((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394832ll) )), 0x0p+0f, 0x0p+0f, 0x1.921FB8p+2f, 0, 4 );
    }
    goto label$11564;
    label$11583:;
    if( V$1 != 0x1.4p+3 ) goto label$11585;
    label$11586:;
    {
     fb_GfxLine( FGIMAGE$, (float)*(double*)((int64)(double*)MEM64$ + 394888ll), (float)*(double*)((int64)(double*)MEM64$ + 394896ll), (float)*(double*)((int64)(double*)MEM64$ + 394904ll), (float)*(double*)((int64)(double*)MEM64$ + 394912ll), (uint32)((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394824ll) )), 0, (uint32)((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394920ll) )), 0 );
    }
    goto label$11564;
    label$11585:;
    if( V$1 != 0x1.6p+3 ) goto label$11587;
    label$11588:;
    {
     fb_GfxLine( BGIMAGE$, (float)*(double*)((int64)(double*)MEM64$ + 394888ll), (float)*(double*)((int64)(double*)MEM64$ + 394896ll), (float)*(double*)((int64)(double*)MEM64$ + 394904ll), (float)*(double*)((int64)(double*)MEM64$ + 394912ll), (uint32)((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394832ll) )), 0, (uint32)((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394920ll) )), 0 );
    }
    label$11587:;
    label$11564:;
   }
  }
  goto label$8963;
  label$11562:;
  if( ADR$1 != 0x1.820Ep+15 ) goto label$11589;
  label$11590:;
  {
   fb_PrintString( 1, (FBSTRING*)&STRCODE$, 0 );
   fb_GfxDrawString( FGIMAGE$, 0x0p+0f, 0x0p+0f, -2147483644, (FBSTRING*)&STRCODE$, 0u, (void*)0ull, 0, (void*)0ull, (void*)0ull, (void*)0ull );
   fb_StrAssign( (void*)&STRCODE$, -1ll, (void*)"", 1ll, 0 );
  }
  goto label$8963;
  label$11589:;
  if( ADR$1 != 0x1.821p+15 ) goto label$11591;
  label$11592:;
  {
   {
    double TMP$5253$4;
    TMP$5253$4 = *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) )) << (3ll & 63ll)));
    if( TMP$5253$4 < 0x1.p+0 ) goto label$11594;
    if( TMP$5253$4 > 0x1.DCp+6 ) goto label$11594;
    label$11595:;
    {
     *(double*)((int64)(double*)MEM64$ + 394912ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+0 )) << (3ll & 63ll))) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+1 )) << (3ll & 63ll))) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.8p+1 )) << (3ll & 63ll))) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+2 )) << (3ll & 63ll))) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.4p+2 )) << (3ll & 63ll)));
     _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) )) << (3ll & 63ll))), *(double*)((int64)(double*)MEM64$ + 394912ll) );
     *(double*)((int64)(double*)MEM64$ + 395344ll) = *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.8p+2;
    }
    goto label$11593;
    label$11594:;
    if( TMP$5253$4 < 0x1.DCp+6 ) goto label$11596;
    if( TMP$5253$4 > 0x1.FCp+6 ) goto label$11596;
    label$11597:;
    {
     _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) )) << (3ll & 63ll))), 0x0p+0 );
     *(double*)((int64)(double*)MEM64$ + 395344ll) = *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+2;
    }
    goto label$11593;
    label$11596:;
    if( TMP$5253$4 < 0x1.p+7 ) goto label$11598;
    if( TMP$5253$4 > 0x1.0Cp+7 ) goto label$11598;
    label$11599:;
    {
     _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) )) << (3ll & 63ll))), 0x0p+0 );
     *(double*)((int64)(double*)MEM64$ + 395344ll) = *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+2;
    }
    goto label$11593;
    label$11598:;
    if( TMP$5253$4 < 0x1.0Ep+7 ) goto label$11600;
    if( TMP$5253$4 > 0x1.44p+7 ) goto label$11600;
    label$11601:;
    {
     _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) )) << (3ll & 63ll))), 0x0p+0 );
     *(double*)((int64)(double*)MEM64$ + 395344ll) = *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+2;
    }
    label$11600:;
    label$11593:;
   }
   *(double*)((int64)(double*)MEM64$ + 395400ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+0 )) << (3ll & 63ll))) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+1 )) << (3ll & 63ll))) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.8p+1 )) << (3ll & 63ll))) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+2 )) << (3ll & 63ll))) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.4p+2 )) << (3ll & 63ll)));
   {
    double TMP$5254$4;
    TMP$5254$4 = *(double*)((int64)(double*)MEM64$ + 395400ll);
    if( TMP$5254$4 < 0x1.p+14 ) goto label$11603;
    if( TMP$5254$4 > 0x1.F9Cp+14 ) goto label$11603;
    label$11604:;
    {
     *(double*)((int64)(double*)MEM64$ + 394912ll) = *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( ADR0$ + 0x1.p+0 )) << (3ll & 63ll)));
     _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, ADR0$, *(double*)((int64)(double*)MEM64$ + 394912ll) );
     *(double*)((int64)(double*)MEM64$ + 395344ll) = *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.8p+1;
    }
    goto label$11602;
    label$11603:;
    if( TMP$5254$4 < 0x1.4p+19 ) goto label$11605;
    if( TMP$5254$4 > 0x1.5FFFEp+19 ) goto label$11605;
    label$11606:;
    {
     _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, *(double*)((int64)(double*)MEM64$ + 395400ll), 0x0p+0 );
     *(double*)((int64)(double*)MEM64$ + 395344ll) = *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+2;
    }
    label$11605:;
    label$11602:;
   }
   *(double*)((int64)(double*)MEM64$ + 395344ll) = (double)0ll;
  }
  goto label$8963;
  label$11591:;
  if( ADR$1 != 0x1.8212p+15 ) goto label$11607;
  label$11608:;
  {
   *(double*)((int64)(double*)MEM64$ + 395344ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395352ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395360ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395368ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395376ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 395384ll);
  }
  goto label$8963;
  label$11607:;
  if( ADR$1 != 0x1.822p+15 ) goto label$11609;
  label$11610:;
  {
   *(double*)((int64)(double*)MEM64$ + 395400ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395408ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395416ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395424ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395432ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 395440ll);
  }
  goto label$8963;
  label$11609:;
  if( ADR$1 != 0x1.822Ep+15 ) goto label$11611;
  label$11612:;
  {
   *(double*)((int64)(double*)MEM64$ + 395456ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395464ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395472ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395480ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395488ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 395496ll);
  }
  goto label$8963;
  label$11611:;
  if( ADR$1 != 0x1.823Cp+15 ) goto label$11613;
  label$11614:;
  {
   *(double*)((int64)(double*)MEM64$ + 395512ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395520ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395528ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395536ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395544ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 395552ll);
  }
  goto label$8963;
  label$11613:;
  if( ADR$1 != 0x1.824Ap+15 ) goto label$11615;
  label$11616:;
  {
   *(double*)((int64)(double*)MEM64$ + 395568ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395576ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395584ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395592ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395600ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 395608ll);
  }
  goto label$8963;
  label$11615:;
  if( ADR$1 != 0x1.8258p+15 ) goto label$11617;
  label$11618:;
  {
   *(double*)((int64)(double*)MEM64$ + 395624ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395632ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395640ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395656ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 395664ll);
  }
  goto label$8963;
  label$11617:;
  if( ADR$1 != 0x1.8266p+15 ) goto label$11619;
  label$11620:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = (double)(((((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395688ll) )) << (56ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395696ll) )) << (48ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395704ll) )) << (40ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395712ll) )) << (32ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395720ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395728ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395736ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 395744ll);
  }
  goto label$8963;
  label$11619:;
  if( ADR$1 != 0x1.827Ap+15 ) goto label$11621;
  label$11622:;
  {
   *(double*)((int64)(double*)MEM64$ + 395760ll) = (double)(((((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395768ll) )) << (56ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395776ll) )) << (48ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395784ll) )) << (40ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395792ll) )) << (32ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395800ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395808ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395816ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 395824ll);
  }
  goto label$8963;
  label$11621:;
  if( ADR$1 != 0x1.828Ep+15 ) goto label$11623;
  label$11624:;
  {
   *(double*)((int64)(double*)MEM64$ + 395840ll) = (double)(((((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395848ll) )) << (56ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395856ll) )) << (48ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395864ll) )) << (40ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395872ll) )) << (32ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395880ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395888ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395896ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 395904ll);
  }
  goto label$8963;
  label$11623:;
  if( ADR$1 != 0x1.82A2p+15 ) goto label$11625;
  label$11626:;
  {
   *(double*)((int64)(double*)MEM64$ + 395920ll) = (double)(((((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395928ll) )) << (56ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395936ll) )) << (48ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395944ll) )) << (40ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395952ll) )) << (32ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395960ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395968ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395976ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 395984ll);
  }
  goto label$8963;
  label$11625:;
  if( ADR$1 != 0x1.82B6p+15 ) goto label$11627;
  label$11628:;
  {
   *(double*)((int64)(double*)MEM64$ + 396000ll) = (double)(((((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396008ll) )) << (56ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396016ll) )) << (48ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396024ll) )) << (40ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396032ll) )) << (32ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396040ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396048ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396056ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 396064ll);
  }
  goto label$8963;
  label$11627:;
  if( ADR$1 != 0x1.82CAp+15 ) goto label$11629;
  label$11630:;
  {
   *(double*)((int64)(double*)MEM64$ + 396080ll) = (double)(((((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396088ll) )) << (56ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396096ll) )) << (48ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396104ll) )) << (40ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396112ll) )) << (32ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396120ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396128ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396136ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 396144ll);
  }
  goto label$8963;
  label$11629:;
  if( ADR$1 != 0x1.82DEp+15 ) goto label$11631;
  label$11632:;
  {
   *(double*)((int64)(double*)MEM64$ + 396000ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$8963;
  label$11631:;
  if( ADR$1 != 0x1.82Ep+15 ) goto label$11633;
  label$11634:;
  {
   *(double*)((int64)(double*)MEM64$ + 396000ll) = *(double*)((int64)(double*)MEM64$ + 394896ll);
  }
  goto label$8963;
  label$11633:;
  if( ADR$1 != 0x1.82E2p+15 ) goto label$11635;
  label$11636:;
  {
   *(double*)((int64)(double*)MEM64$ + 396000ll) = *(double*)((int64)(double*)MEM64$ + 394904ll);
  }
  goto label$8963;
  label$11635:;
  if( ADR$1 != 0x1.82E4p+15 ) goto label$11637;
  label$11638:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$8963;
  label$11637:;
  if( ADR$1 != 0x1.82E6p+15 ) goto label$11639;
  label$11640:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = *(double*)((int64)(double*)MEM64$ + 394896ll);
  }
  goto label$8963;
  label$11639:;
  if( ADR$1 != 0x1.82E8p+15 ) goto label$11641;
  label$11642:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = *(double*)((int64)(double*)MEM64$ + 394904ll);
  }
  goto label$8963;
  label$11641:;
  if( ADR$1 != 0x1.82EAp+15 ) goto label$11643;
  label$11644:;
  {
   *(double*)((int64)(double*)MEM64$ + 395760ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$8963;
  label$11643:;
  if( ADR$1 != 0x1.82ECp+15 ) goto label$11645;
  label$11646:;
  {
   *(double*)((int64)(double*)MEM64$ + 395760ll) = *(double*)((int64)(double*)MEM64$ + 394896ll);
  }
  goto label$8963;
  label$11645:;
  if( ADR$1 != 0x1.82EEp+15 ) goto label$11647;
  label$11648:;
  {
   *(double*)((int64)(double*)MEM64$ + 395760ll) = *(double*)((int64)(double*)MEM64$ + 394904ll);
  }
  goto label$8963;
  label$11647:;
  if( ADR$1 != 0x1.82Fp+15 ) goto label$11649;
  label$11650:;
  {
   *(double*)((int64)(double*)MEM64$ + 395920ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$8963;
  label$11649:;
  if( ADR$1 != 0x1.82F2p+15 ) goto label$11651;
  label$11652:;
  {
   {
    if( V$1 != (double)(int64)*(uint8*)NIBBLES$ ) goto label$11654;
    label$11655:;
    {
     *(double*)((int64)(double*)MEM64$ + 395920ll) = *(double*)((int64)(double*)MEM64$ + 395120ll);
    }
    goto label$11653;
    label$11654:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$11656;
    label$11657:;
    {
     *(double*)((int64)(double*)MEM64$ + 395920ll) = *(double*)((int64)(double*)MEM64$ + 394904ll);
    }
    label$11656:;
    label$11653:;
   }
  }
  goto label$8963;
  label$11651:;
  if( ADR$1 != 0x1.82F4p+15 ) goto label$11658;
  label$11659:;
  {
   *(double*)((int64)(double*)MEM64$ + 393232ll) = *(double*)((int64)(double*)MEM64$ + 395680ll);
  }
  goto label$8963;
  label$11658:;
  if( ADR$1 != 0x1.82F6p+15 ) goto label$11660;
  label$11661:;
  {
   *(double*)((int64)(double*)MEM64$ + 393232ll) = *(double*)((int64)(double*)MEM64$ + 395680ll);
  }
  goto label$8963;
  label$11660:;
  if( ADR$1 != 0x1.82F8p+15 ) goto label$11662;
  label$11663:;
  {
   *(double*)((int64)(double*)MEM64$ + 393232ll) = *(double*)((int64)(double*)MEM64$ + 395680ll);
  }
  goto label$8963;
  label$11662:;
  if( ADR$1 != 0x1.82FAp+15 ) goto label$11664;
  label$11665:;
  {
   *(double*)((int64)(double*)MEM64$ + 393240ll) = *(double*)((int64)(double*)MEM64$ + 395680ll);
  }
  goto label$8963;
  label$11664:;
  if( ADR$1 != 0x1.82FCp+15 ) goto label$11666;
  label$11667:;
  {
   *(double*)((int64)(double*)MEM64$ + 393240ll) = *(double*)((int64)(double*)MEM64$ + 395680ll);
  }
  goto label$8963;
  label$11666:;
  if( ADR$1 != 0x1.82FEp+15 ) goto label$11668;
  label$11669:;
  {
   *(double*)((int64)(double*)MEM64$ + 393240ll) = *(double*)((int64)(double*)MEM64$ + 395680ll);
  }
  goto label$8963;
  label$11668:;
  if( ADR$1 != 0x1.83p+15 ) goto label$11670;
  label$11671:;
  {
   *(double*)((int64)(double*)MEM64$ + 393248ll) = *(double*)((int64)(double*)MEM64$ + 395680ll);
  }
  goto label$8963;
  label$11670:;
  if( ADR$1 != 0x1.D122p+15 ) goto label$11672;
  label$11673:;
  {
   *(double*)((int64)(double*)MEM64$ + 393248ll) = *(double*)((int64)(double*)MEM64$ + 395680ll);
  }
  goto label$8963;
  label$11672:;
  if( ADR$1 != 0x1.8304p+15 ) goto label$11674;
  label$11675:;
  {
   *(double*)((int64)(double*)MEM64$ + 393248ll) = *(double*)((int64)(double*)MEM64$ + 395680ll);
  }
  goto label$8963;
  label$11674:;
  if( ADR$1 != 0x1.8306p+15 ) goto label$11676;
  label$11677:;
  {
   *(double*)((int64)(double*)MEM64$ + 393256ll) = *(double*)((int64)(double*)MEM64$ + 395680ll);
  }
  goto label$8963;
  label$11676:;
  if( ADR$1 != 0x1.8308p+15 ) goto label$11678;
  label$11679:;
  {
   *(double*)((int64)(double*)MEM64$ + 393256ll) = *(double*)((int64)(double*)MEM64$ + 395680ll);
  }
  goto label$8963;
  label$11678:;
  if( ADR$1 != 0x1.830Ap+15 ) goto label$11680;
  label$11681:;
  {
   *(double*)((int64)(double*)MEM64$ + 393256ll) = *(double*)((int64)(double*)MEM64$ + 395680ll);
  }
  goto label$8963;
  label$11680:;
  if( ADR$1 != 0x1.830Cp+15 ) goto label$11682;
  label$11683:;
  {
   *(double*)((int64)(double*)MEM64$ + 394840ll) = *(double*)((int64)(double*)MEM64$ + 395680ll);
  }
  goto label$8963;
  label$11682:;
  if( ADR$1 != 0x1.830Ep+15 ) goto label$11684;
  label$11685:;
  {
   *(double*)((int64)(double*)MEM64$ + 394864ll) = *(double*)((int64)(double*)MEM64$ + 395680ll);
  }
  goto label$8963;
  label$11684:;
  if( ADR$1 != 0x1.831p+15 ) goto label$11686;
  label$11687:;
  {
   *(double*)((int64)(double*)MEM64$ + 394848ll) = *(double*)((int64)(double*)MEM64$ + 395680ll);
  }
  goto label$8963;
  label$11686:;
  if( ADR$1 != 0x1.8312p+15 ) goto label$11688;
  label$11689:;
  {
   *(double*)((int64)(double*)MEM64$ + 394872ll) = *(double*)((int64)(double*)MEM64$ + 395680ll);
  }
  goto label$8963;
  label$11688:;
  if( ADR$1 != 0x1.8314p+15 ) goto label$11690;
  label$11691:;
  {
   *(double*)((int64)(double*)MEM64$ + 394856ll) = *(double*)((int64)(double*)MEM64$ + 395680ll);
  }
  goto label$8963;
  label$11690:;
  if( ADR$1 != 0x1.8316p+15 ) goto label$11692;
  label$11693:;
  {
   *(double*)((int64)(double*)MEM64$ + 394880ll) = *(double*)((int64)(double*)MEM64$ + 395680ll);
  }
  goto label$8963;
  label$11692:;
  if( ADR$1 != 0x1.8318p+15 ) goto label$11694;
  label$11695:;
  {
   *(double*)((int64)(double*)MEM64$ + 394824ll) = *(double*)((int64)(double*)MEM64$ + 395680ll);
  }
  goto label$8963;
  label$11694:;
  if( ADR$1 != 0x1.831Ap+15 ) goto label$11696;
  label$11697:;
  {
   *(double*)((int64)(double*)MEM64$ + 394832ll) = *(double*)((int64)(double*)MEM64$ + 395680ll);
  }
  goto label$8963;
  label$11696:;
  if( ADR$1 != 0x1.831Cp+15 ) goto label$11698;
  label$11699:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = *(double*)((int64)(double*)MEM64$ + 394840ll);
  }
  goto label$8963;
  label$11698:;
  if( ADR$1 != 0x1.831Ep+15 ) goto label$11700;
  label$11701:;
  {
   *(double*)((int64)(double*)MEM64$ + 394840ll) = *(double*)((int64)(double*)MEM64$ + 395680ll);
  }
  goto label$8963;
  label$11700:;
  if( ADR$1 != 0x1.832p+15 ) goto label$11702;
  label$11703:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = *(double*)((int64)(double*)MEM64$ + 394848ll);
  }
  goto label$8963;
  label$11702:;
  if( ADR$1 != 0x1.8322p+15 ) goto label$11704;
  label$11705:;
  {
   *(double*)((int64)(double*)MEM64$ + 394848ll) = *(double*)((int64)(double*)MEM64$ + 395680ll);
  }
  goto label$8963;
  label$11704:;
  if( ADR$1 != 0x1.8324p+15 ) goto label$11706;
  label$11707:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = *(double*)((int64)(double*)MEM64$ + 394856ll);
  }
  goto label$8963;
  label$11706:;
  if( ADR$1 != 0x1.8326p+15 ) goto label$11708;
  label$11709:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = *(double*)((int64)(double*)MEM64$ + 394864ll);
  }
  goto label$8963;
  label$11708:;
  if( ADR$1 != 0x1.8328p+15 ) goto label$11710;
  label$11711:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = *(double*)((int64)(double*)MEM64$ + 394872ll);
  }
  goto label$8963;
  label$11710:;
  if( ADR$1 != 0x1.832Ap+15 ) goto label$11712;
  label$11713:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = *(double*)((int64)(double*)MEM64$ + 394880ll);
  }
  goto label$8963;
  label$11712:;
  if( ADR$1 != 0x1.832Cp+15 ) goto label$11714;
  label$11715:;
  {
   *(double*)((int64)(double*)MEM64$ + 394880ll) = *(double*)((int64)(double*)MEM64$ + 395680ll);
  }
  goto label$8963;
  label$11714:;
  if( ADR$1 != 0x1.832Ep+15 ) goto label$11716;
  label$11717:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = *(double*)((int64)(double*)MEM64$ + 394872ll);
  }
  goto label$8963;
  label$11716:;
  if( ADR$1 != 0x1.833p+15 ) goto label$11718;
  label$11719:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = *(double*)((int64)(double*)MEM64$ + 394880ll);
  }
  goto label$8963;
  label$11718:;
  if( ADR$1 != 0x1.8332p+15 ) goto label$11720;
  label$11721:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = *(double*)((int64)(double*)MEM64$ + 394880ll);
  }
  goto label$8963;
  label$11720:;
  if( ADR$1 != 0x1.8334p+15 ) goto label$11722;
  label$11723:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = *(double*)((int64)(double*)MEM64$ + 395760ll) + *(double*)((int64)(double*)MEM64$ + 395840ll);
  }
  goto label$8963;
  label$11722:;
  if( ADR$1 != 0x1.8336p+15 ) goto label$11724;
  label$11725:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = *(double*)((int64)(double*)MEM64$ + 395760ll) - *(double*)((int64)(double*)MEM64$ + 395840ll);
  }
  goto label$8963;
  label$11724:;
  if( ADR$1 != 0x1.8338p+15 ) goto label$11726;
  label$11727:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = *(double*)((int64)(double*)MEM64$ + 395760ll) * *(double*)((int64)(double*)MEM64$ + 395840ll);
  }
  goto label$8963;
  label$11726:;
  if( ADR$1 != 0x1.833Ap+15 ) goto label$11728;
  label$11729:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = *(double*)((int64)(double*)MEM64$ + 395760ll) / *(double*)((int64)(double*)MEM64$ + 395840ll);
  }
  goto label$8963;
  label$11728:;
  if( ADR$1 != 0x1.833Cp+15 ) goto label$11730;
  label$11731:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = (double)(((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395760ll) )) / ((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395840ll) )));
  }
  goto label$8963;
  label$11730:;
  if( ADR$1 != 0x1.833Ep+15 ) goto label$11732;
  label$11733:;
  {
   double vr$11261 = pow( *(double*)((int64)(double*)MEM64$ + 395760ll), *(double*)((int64)(double*)MEM64$ + 395840ll) );
   *(double*)((int64)(double*)MEM64$ + 395680ll) = vr$11261;
  }
  goto label$8963;
  label$11732:;
  if( ADR$1 != 0x1.834p+15 ) goto label$11734;
  label$11735:;
  {
   double vr$11262 = _ZN12SYSTEM_BUS_T8K_MODULOEdd( THIS$1, *(double*)((int64)(double*)MEM64$ + 395760ll), *(double*)((int64)(double*)MEM64$ + 395840ll) );
   *(double*)((int64)(double*)MEM64$ + 395680ll) = vr$11262;
  }
  goto label$8963;
  label$11734:;
  if( ADR$1 != 0x1.8342p+15 ) goto label$11736;
  label$11737:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = -(*(double*)((int64)(double*)MEM64$ + 395680ll));
  }
  goto label$8963;
  label$11736:;
  if( ADR$1 != 0x1.8344p+15 ) goto label$11738;
  label$11739:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = (double)(((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395760ll) )) << (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395840ll) )) & 63ll));
  }
  goto label$8963;
  label$11738:;
  if( ADR$1 != 0x1.8346p+15 ) goto label$11740;
  label$11741:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = (double)(((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395760ll) )) >> (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395840ll) )) & 63ll));
  }
  goto label$8963;
  label$11740:;
  if( ADR$1 != 0x1.8348p+15 ) goto label$11742;
  label$11743:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = (double)(int64)-(*(double*)((int64)(double*)MEM64$ + 395760ll) == *(double*)((int64)(double*)MEM64$ + 395840ll));
  }
  goto label$8963;
  label$11742:;
  if( ADR$1 != 0x1.834Ap+15 ) goto label$11744;
  label$11745:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = (double)(int64)-(*(double*)((int64)(double*)MEM64$ + 395760ll) != *(double*)((int64)(double*)MEM64$ + 395840ll));
  }
  goto label$8963;
  label$11744:;
  if( ADR$1 != 0x1.834Cp+15 ) goto label$11746;
  label$11747:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = (double)(int64)-(*(double*)((int64)(double*)MEM64$ + 395760ll) < *(double*)((int64)(double*)MEM64$ + 395840ll));
  }
  goto label$8963;
  label$11746:;
  if( ADR$1 != 0x1.834Ep+15 ) goto label$11748;
  label$11749:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = (double)(int64)-(*(double*)((int64)(double*)MEM64$ + 395760ll) <= *(double*)((int64)(double*)MEM64$ + 395840ll));
  }
  goto label$8963;
  label$11748:;
  if( ADR$1 != 0x1.835p+15 ) goto label$11750;
  label$11751:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = (double)(int64)-(*(double*)((int64)(double*)MEM64$ + 395760ll) >= *(double*)((int64)(double*)MEM64$ + 395840ll));
  }
  goto label$8963;
  label$11750:;
  if( ADR$1 != 0x1.8352p+15 ) goto label$11752;
  label$11753:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = (double)(int64)-(*(double*)((int64)(double*)MEM64$ + 395760ll) > *(double*)((int64)(double*)MEM64$ + 395840ll));
  }
  goto label$8963;
  label$11752:;
  if( ADR$1 != 0x1.8354p+15 ) goto label$11754;
  label$11755:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = (double)(((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395760ll) )) & ((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395840ll) )));
  }
  goto label$8963;
  label$11754:;
  if( ADR$1 != 0x1.8356p+15 ) goto label$11756;
  label$11757:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = (double)~(((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394960ll) )) ^ ((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395040ll) )));
  }
  goto label$8963;
  label$11756:;
  if( ADR$1 != 0x1.8358p+15 ) goto label$11758;
  label$11759:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = (double)(~((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394960ll) )) | ((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395040ll) )));
  }
  goto label$8963;
  label$11758:;
  if( ADR$1 != 0x1.835Ap+15 ) goto label$11760;
  label$11761:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = (double)(((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395760ll) )) | ((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395840ll) )));
  }
  goto label$8963;
  label$11760:;
  if( ADR$1 != 0x1.835Cp+15 ) goto label$11762;
  label$11763:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = (double)(((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395760ll) )) ^ ((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395840ll) )));
  }
  goto label$8963;
  label$11762:;
  if( ADR$1 != 0x1.835Ep+15 ) goto label$11764;
  label$11765:;
  {
   *(double*)((int64)(double*)MEM64$ + 395760ll) = *(double*)((int64)(double*)MEM64$ + 395680ll);
  }
  goto label$8963;
  label$11764:;
  if( ADR$1 != 0x1.836p+15 ) goto label$11766;
  label$11767:;
  {
   *(double*)((int64)(double*)MEM64$ + 395840ll) = *(double*)((int64)(double*)MEM64$ + 395680ll);
  }
  goto label$8963;
  label$11766:;
  if( ADR$1 != 0x1.8362p+15 ) goto label$11768;
  label$11769:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = *(double*)((int64)(double*)MEM64$ + 395680ll) + 0x1.p+0;
  }
  goto label$8963;
  label$11768:;
  if( ADR$1 != 0x1.8364p+15 ) goto label$11770;
  label$11771:;
  {
   *(double*)((int64)(double*)MEM64$ + 395760ll) = *(double*)((int64)(double*)MEM64$ + 395760ll) + 0x1.p+0;
  }
  goto label$8963;
  label$11770:;
  if( ADR$1 != 0x1.8366p+15 ) goto label$11772;
  label$11773:;
  {
   *(double*)((int64)(double*)MEM64$ + 395840ll) = *(double*)((int64)(double*)MEM64$ + 395840ll) + 0x1.p+0;
  }
  goto label$8963;
  label$11772:;
  if( ADR$1 != 0x1.8368p+15 ) goto label$11774;
  label$11775:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = *(double*)((int64)(double*)MEM64$ + 395680ll) + -0x1.p+0;
  }
  goto label$8963;
  label$11774:;
  if( ADR$1 != 0x1.836Ap+15 ) goto label$11776;
  label$11777:;
  {
   *(double*)((int64)(double*)MEM64$ + 395760ll) = *(double*)((int64)(double*)MEM64$ + 395760ll) + -0x1.p+0;
  }
  goto label$8963;
  label$11776:;
  if( ADR$1 != 0x1.836Cp+15 ) goto label$11778;
  label$11779:;
  {
   *(double*)((int64)(double*)MEM64$ + 395840ll) = *(double*)((int64)(double*)MEM64$ + 395840ll) + -0x1.p+0;
  }
  goto label$8963;
  label$11778:;
  if( ADR$1 != 0x1.836Ep+15 ) goto label$11780;
  label$11781:;
  {
   if( *(double*)((int64)(double*)MEM64$ + 395760ll) != *(double*)((int64)(double*)MEM64$ + 395840ll) ) goto label$11783;
   {
    *(double*)((int64)(double*)MEM64$ + 396000ll) = V$1;
    label$11783:;
   }
  }
  goto label$8963;
  label$11780:;
  if( ADR$1 != 0x1.837p+15 ) goto label$11784;
  label$11785:;
  {
   if( *(double*)((int64)(double*)MEM64$ + 395760ll) == *(double*)((int64)(double*)MEM64$ + 395840ll) ) goto label$11787;
   {
    *(double*)((int64)(double*)MEM64$ + 396000ll) = V$1;
    label$11787:;
   }
  }
  goto label$8963;
  label$11784:;
  if( ADR$1 != 0x1.8372p+15 ) goto label$11788;
  label$11789:;
  {
   if( *(double*)((int64)(double*)MEM64$ + 395760ll) <= *(double*)((int64)(double*)MEM64$ + 395840ll) ) goto label$11791;
   {
    *(double*)((int64)(double*)MEM64$ + 396000ll) = V$1;
    label$11791:;
   }
  }
  goto label$8963;
  label$11788:;
  if( ADR$1 != 0x1.8374p+15 ) goto label$11792;
  label$11793:;
  {
   if( *(double*)((int64)(double*)MEM64$ + 395760ll) < *(double*)((int64)(double*)MEM64$ + 395840ll) ) goto label$11795;
   {
    *(double*)((int64)(double*)MEM64$ + 396000ll) = V$1;
    label$11795:;
   }
  }
  goto label$8963;
  label$11792:;
  if( ADR$1 != 0x1.8376p+15 ) goto label$11796;
  label$11797:;
  {
   if( *(double*)((int64)(double*)MEM64$ + 395760ll) > *(double*)((int64)(double*)MEM64$ + 395840ll) ) goto label$11799;
   {
    *(double*)((int64)(double*)MEM64$ + 396000ll) = V$1;
    label$11799:;
   }
  }
  goto label$8963;
  label$11796:;
  if( ADR$1 != 0x1.8378p+15 ) goto label$11800;
  label$11801:;
  {
   if( *(double*)((int64)(double*)MEM64$ + 395760ll) <= *(double*)((int64)(double*)MEM64$ + 395840ll) ) goto label$11803;
   {
    *(double*)((int64)(double*)MEM64$ + 396000ll) = V$1;
    label$11803:;
   }
  }
  goto label$8963;
  label$11800:;
  if( ADR$1 != 0x1.837Ap+15 ) goto label$11804;
  label$11805:;
  {
   *(double*)((int64)(double*)MEM64$ + 396000ll) = V$1;
  }
  goto label$8963;
  label$11804:;
  if( ADR$1 != 0x1.837Cp+15 ) goto label$11806;
  label$11807:;
  {
   double vr$11310 = _ZN12SYSTEM_BUS_T5PEEKBEd( THIS$1, V$1 );
   *(double*)((int64)(double*)MEM64$ + 395680ll) = vr$11310;
  }
  goto label$8963;
  label$11806:;
  if( ADR$1 != 0x1.837Ep+15 ) goto label$11808;
  label$11809:;
  {
   _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, V$1, *(double*)((int64)(double*)MEM64$ + 395680ll) );
  }
  goto label$8963;
  label$11808:;
  if( ADR$1 != 0x1.838p+15 ) goto label$11810;
  label$11811:;
  {
   uint64 TMP$3;
   __builtin_memset( &TMP$3, 0, 8ll );
   uint64 TIMES$3;
   __builtin_memset( &TIMES$3, 0, 8ll );
   *(double*)((int64)(double*)MEM64$ + 397040ll) = *(double*)((int64)(double*)MEM64$ + 396000ll);
   *(double*)((int64)(double*)MEM64$ + 395680ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396000ll) + 0x1.p+0 )) << (3ll & 63ll))) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396000ll) + 0x1.p+1 )) << (3ll & 63ll))) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396000ll) + 0x1.8p+1 )) << (3ll & 63ll))) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396000ll) + 0x1.p+2 )) << (3ll & 63ll))) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396000ll) + 0x1.4p+2 )) << (3ll & 63ll)));
   *(double*)((int64)(double*)MEM64$ + 395760ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396000ll) + 0x1.8p+2 )) << (3ll & 63ll))) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396000ll) + 0x1.Cp+2 )) << (3ll & 63ll))) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396000ll) + 0x1.p+3 )) << (3ll & 63ll))) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396000ll) + 0x1.2p+3 )) << (3ll & 63ll))) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396000ll) + 0x1.4p+3 )) << (3ll & 63ll)));
   *(double*)((int64)(double*)MEM64$ + 396968ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396000ll) + 0x1.6p+3 )) << (3ll & 63ll))) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396000ll) + 0x1.8p+3 )) << (3ll & 63ll))) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396000ll) + 0x1.Ap+3 )) << (3ll & 63ll))) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396000ll) + 0x1.Cp+3 )) << (3ll & 63ll))) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.Ep+3 )) << (3ll & 63ll)));
   label$11812:;
   if( (double)TMP$3 == *(double*)((int64)(double*)MEM64$ + 396968ll) ) goto label$11813;
   {
    {
     PC$ = *(double*)((int64)(double*)MEM64$ + 395680ll);
     double TMP$5255$5;
     TMP$5255$5 = *(double*)((int64)(double*)MEM64$ + 395760ll);
     goto label$11814;
     label$11817:;
     {
      _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( PC$ )) << (3ll & 63ll))), 0x0p+0 );
     }
     label$11815:;
     PC$ = PC$ + 0x1.p+0;
     label$11814:;
     if( PC$ <= TMP$5255$5 ) goto label$11817;
     label$11816:;
    }
    TMP$3 = (TMP$3 + 1ull) % ((uint64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396968ll) ));
   }
   goto label$11812;
   label$11813:;
  }
  goto label$8963;
  label$11810:;
  if( ADR$1 != 0x1.8382p+15 ) goto label$11818;
  label$11819:;
  {
   *(double*)((int64)(double*)MEM64$ + 396968ll) = (double)(((((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396976ll) )) << (56ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396984ll) )) << (48ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396992ll) )) << (40ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 397000ll) )) << (32ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 397008ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 397016ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 397024ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 397032ll);
  }
  goto label$8963;
  label$11818:;
  if( ADR$1 != 0x1.8384p+15 ) goto label$11820;
  label$11821:;
  {
   *(double*)((int64)(double*)MEM64$ + 397040ll) = (double)(((((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 397048ll) )) << (56ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 397048ll) )) << (48ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 397064ll) )) << (40ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 397072ll) )) << (32ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 397080ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 397088ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 397096ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 397104ll);
   *(double*)((int64)(double*)MEM64$ + 396000ll) = (double)0ll;
  }
  goto label$8963;
  label$11820:;
  if( ADR$1 != 0x1.8386p+15 ) goto label$11822;
  label$11823:;
  {
   *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)(((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395624ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395632ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 395640ll);
  }
  goto label$8963;
  label$11822:;
  if( ADR$1 != 0x1.8388p+15 ) goto label$11824;
  label$11825:;
  {
   *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)(((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395624ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395632ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 395640ll);
  }
  goto label$8963;
  label$11824:;
  if( ADR$1 != 0x1.838Ap+15 ) goto label$11826;
  label$11827:;
  {
   *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)(((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395624ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395632ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 395640ll);
  }
  goto label$8963;
  label$11826:;
  if( ADR$1 != 0x1.838Cp+15 ) goto label$11828;
  label$11829:;
  {
   *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)(((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395624ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395632ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 395640ll);
  }
  goto label$8963;
  label$11828:;
  if( ADR$1 != 0x1.838Ep+15 ) goto label$11830;
  label$11831:;
  {
   fb_GfxLine( FGIMAGE$, (float)*(double*)((int64)(double*)MEM64$ + 394840ll), (float)*(double*)((int64)(double*)MEM64$ + 394848ll), (float)*(double*)((int64)(double*)MEM64$ + 394864ll), (float)*(double*)((int64)(double*)MEM64$ + 394872ll), (uint32)((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394824ll) )), 2, 65535u, 0 );
  }
  goto label$8963;
  label$11830:;
  if( ADR$1 != 0x1.83CEp+15 ) goto label$11832;
  label$11833:;
  {
   {
    if( V$1 != (double)(int64)*(uint8*)NIBBLES$ ) goto label$11835;
    label$11836:;
    {
     fb_GfxLine( FGIMAGE$, 0x0p+0f, 0x0p+0f, 0x1.DFCp+10f, 0x1.0DCp+10f, (uint32)*(uint8*)NIBBLES$, 2, 65535u, 0 );
    }
    goto label$11834;
    label$11835:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$11837;
    label$11838:;
    {
     fb_GfxLine( BGIMAGE$, 0x0p+0f, 0x0p+0f, 0x1.DFCp+10f, 0x1.0DCp+10f, (uint32)*(uint8*)NIBBLES$, 2, 65535u, 0 );
    }
    label$11837:;
    label$11834:;
   }
  }
  goto label$8963;
  label$11832:;
  if( ADR$1 != 0x1.83Dp+15 ) goto label$11839;
  label$11840:;
  {
   FBSTRING TMP$5256$3;
   FBSTRING TMP$5257$3;
   uint8 TMP$3;
   __builtin_memset( &TMP$3, 0, 1ll );
   {
    uint64 C$4;
    C$4 = 0ull;
    label$11844:;
    {
     *(double*)((uint8*)((uint8*)THIS$1 + ((int64)C$4 << (3ll & 63ll))) + 262144ll) = 0x0p+0;
    }
    label$11842:;
    C$4 = C$4 + 1ull;
    label$11841:;
    if( C$4 <= 8191ull ) goto label$11844;
    label$11843:;
   }
   FBSTRING* vr$11505 = fb_DoubleToStr( V$1 + 0x1.FEp+7 );
   __builtin_memset( &TMP$5256$3, 0, 24ll );
   FBSTRING* vr$11508 = fb_StrConcat( &TMP$5256$3, (void*)"./chargen/", 11ll, (void*)vr$11505, -1ll );
   __builtin_memset( &TMP$5257$3, 0, 24ll );
   FBSTRING* vr$11511 = fb_StrConcat( &TMP$5257$3, (void*)vr$11508, -1ll, (void*)".c64", 5ll );
   fb_FileOpen( (FBSTRING*)vr$11511, 0u, 0u, 0u, 1, 0 );
   {
    uint64 I$4;
    I$4 = 0ull;
    uint64 TMP$5258$4;
    int64 vr$11512 = fb_FileSize( 1 );
    TMP$5258$4 = (uint64)vr$11512;
    goto label$11845;
    label$11848:;
    {
     fb_FileGetLarge( 1, 0ll, (void*)&TMP$3, 1ull );
     *(double*)((uint8*)((uint8*)THIS$1 + ((int64)I$4 << (3ll & 63ll))) + 262144ll) = (double)TMP$3;
    }
    label$11846:;
    I$4 = I$4 + 1ull;
    label$11845:;
    if( I$4 <= TMP$5258$4 ) goto label$11848;
    label$11847:;
   }
   fb_FileClose( 1 );
  }
  goto label$8963;
  label$11839:;
  if( ADR$1 != 0x1.83D2p+15 ) goto label$11849;
  label$11850:;
  {
   FBSTRING TMP$5259$3;
   FBSTRING TMP$5260$3;
   uint8 TMP$3;
   __builtin_memset( &TMP$3, 0, 1ll );
   {
    uint64 C$4;
    C$4 = 0ull;
    label$11854:;
    {
     *(double*)((uint8*)((uint8*)THIS$1 + ((int64)C$4 << (3ll & 63ll))) + 262144ll) = 0x0p+0;
    }
    label$11852:;
    C$4 = C$4 + 1ull;
    label$11851:;
    if( C$4 <= 8191ull ) goto label$11854;
    label$11853:;
   }
   FBSTRING* vr$11523 = fb_DoubleToStr( V$1 + 0x1.FEp+8 );
   __builtin_memset( &TMP$5259$3, 0, 24ll );
   FBSTRING* vr$11526 = fb_StrConcat( &TMP$5259$3, (void*)"./chargen/", 11ll, (void*)vr$11523, -1ll );
   __builtin_memset( &TMP$5260$3, 0, 24ll );
   FBSTRING* vr$11529 = fb_StrConcat( &TMP$5260$3, (void*)vr$11526, -1ll, (void*)".c64", 5ll );
   fb_FileOpen( (FBSTRING*)vr$11529, 0u, 0u, 0u, 1, 0 );
   {
    uint64 I$4;
    I$4 = 0ull;
    uint64 TMP$5261$4;
    int64 vr$11530 = fb_FileSize( 1 );
    TMP$5261$4 = (uint64)vr$11530;
    goto label$11855;
    label$11858:;
    {
     fb_FileGetLarge( 1, 0ll, (void*)&TMP$3, 1ull );
     *(double*)((uint8*)((uint8*)THIS$1 + ((int64)I$4 << (3ll & 63ll))) + 262144ll) = (double)TMP$3;
    }
    label$11856:;
    I$4 = I$4 + 1ull;
    label$11855:;
    if( I$4 <= TMP$5261$4 ) goto label$11858;
    label$11857:;
   }
   fb_FileClose( 1 );
  }
  goto label$8963;
  label$11849:;
  if( ADR$1 != 0x1.83D4p+15 ) goto label$11859;
  label$11860:;
  {
   {
    if( V$1 != 0x0p+0 ) goto label$11862;
    label$11863:;
    {
     FBSTRING TMP$5262$5;
     FBSTRING TMP$5263$5;
     FBSTRING TMP$5264$5;
     FBSTRING TMP$5265$5;
     FBSTRING TMP$5266$5;
     FBSTRING* vr$11536 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394896ll) );
     FBSTRING* vr$11537 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394888ll) );
     FBSTRING* vr$11538 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394824ll) );
     __builtin_memset( &TMP$5262$5, 0, 24ll );
     FBSTRING* vr$11541 = fb_StrConcat( &TMP$5262$5, (void*)"c", 2ll, (void*)vr$11538, -1ll );
     __builtin_memset( &TMP$5263$5, 0, 24ll );
     FBSTRING* vr$11544 = fb_StrConcat( &TMP$5263$5, (void*)vr$11541, -1ll, (void*)"M", 2ll );
     __builtin_memset( &TMP$5264$5, 0, 24ll );
     FBSTRING* vr$11547 = fb_StrConcat( &TMP$5264$5, (void*)vr$11544, -1ll, (void*)vr$11537, -1ll );
     __builtin_memset( &TMP$5265$5, 0, 24ll );
     FBSTRING* vr$11550 = fb_StrConcat( &TMP$5265$5, (void*)vr$11547, -1ll, (void*)",", 2ll );
     __builtin_memset( &TMP$5266$5, 0, 24ll );
     FBSTRING* vr$11553 = fb_StrConcat( &TMP$5266$5, (void*)vr$11550, -1ll, (void*)vr$11536, -1ll );
     fb_GfxDraw( FGIMAGE$, (FBSTRING*)vr$11553 );
    }
    goto label$11861;
    label$11862:;
    if( V$1 != 0x1.p+0 ) goto label$11864;
    label$11865:;
    {
     FBSTRING TMP$5267$5;
     FBSTRING TMP$5268$5;
     FBSTRING TMP$5269$5;
     FBSTRING* vr$11554 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394888ll) );
     FBSTRING* vr$11555 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394824ll) );
     __builtin_memset( &TMP$5267$5, 0, 24ll );
     FBSTRING* vr$11558 = fb_StrConcat( &TMP$5267$5, (void*)"c", 2ll, (void*)vr$11555, -1ll );
     __builtin_memset( &TMP$5268$5, 0, 24ll );
     FBSTRING* vr$11561 = fb_StrConcat( &TMP$5268$5, (void*)vr$11558, -1ll, (void*)"u", 2ll );
     __builtin_memset( &TMP$5269$5, 0, 24ll );
     FBSTRING* vr$11564 = fb_StrConcat( &TMP$5269$5, (void*)vr$11561, -1ll, (void*)vr$11554, -1ll );
     fb_GfxDraw( FGIMAGE$, (FBSTRING*)vr$11564 );
    }
    goto label$11861;
    label$11864:;
    if( V$1 != 0x1.p+1 ) goto label$11866;
    label$11867:;
    {
     FBSTRING TMP$5270$5;
     FBSTRING TMP$5271$5;
     FBSTRING TMP$5272$5;
     FBSTRING* vr$11565 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 386888ll) );
     FBSTRING* vr$11566 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394824ll) );
     __builtin_memset( &TMP$5270$5, 0, 24ll );
     FBSTRING* vr$11569 = fb_StrConcat( &TMP$5270$5, (void*)"c", 2ll, (void*)vr$11566, -1ll );
     __builtin_memset( &TMP$5271$5, 0, 24ll );
     FBSTRING* vr$11572 = fb_StrConcat( &TMP$5271$5, (void*)vr$11569, -1ll, (void*)"d", 2ll );
     __builtin_memset( &TMP$5272$5, 0, 24ll );
     FBSTRING* vr$11575 = fb_StrConcat( &TMP$5272$5, (void*)vr$11572, -1ll, (void*)vr$11565, -1ll );
     fb_GfxDraw( FGIMAGE$, (FBSTRING*)vr$11575 );
    }
    goto label$11861;
    label$11866:;
    if( V$1 != 0x1.8p+1 ) goto label$11868;
    label$11869:;
    {
     FBSTRING TMP$5273$5;
     FBSTRING TMP$5274$5;
     FBSTRING TMP$5275$5;
     FBSTRING* vr$11576 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 386888ll) );
     FBSTRING* vr$11577 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394824ll) );
     __builtin_memset( &TMP$5273$5, 0, 24ll );
     FBSTRING* vr$11580 = fb_StrConcat( &TMP$5273$5, (void*)"c", 2ll, (void*)vr$11577, -1ll );
     __builtin_memset( &TMP$5274$5, 0, 24ll );
     FBSTRING* vr$11583 = fb_StrConcat( &TMP$5274$5, (void*)vr$11580, -1ll, (void*)"l", 2ll );
     __builtin_memset( &TMP$5275$5, 0, 24ll );
     FBSTRING* vr$11586 = fb_StrConcat( &TMP$5275$5, (void*)vr$11583, -1ll, (void*)vr$11576, -1ll );
     fb_GfxDraw( FGIMAGE$, (FBSTRING*)vr$11586 );
    }
    goto label$11861;
    label$11868:;
    if( V$1 != 0x1.p+2 ) goto label$11870;
    label$11871:;
    {
     FBSTRING TMP$5276$5;
     FBSTRING TMP$5277$5;
     FBSTRING TMP$5278$5;
     FBSTRING* vr$11587 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394888ll) );
     FBSTRING* vr$11588 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394824ll) );
     __builtin_memset( &TMP$5276$5, 0, 24ll );
     FBSTRING* vr$11591 = fb_StrConcat( &TMP$5276$5, (void*)"c", 2ll, (void*)vr$11588, -1ll );
     __builtin_memset( &TMP$5277$5, 0, 24ll );
     FBSTRING* vr$11594 = fb_StrConcat( &TMP$5277$5, (void*)vr$11591, -1ll, (void*)"r", 2ll );
     __builtin_memset( &TMP$5278$5, 0, 24ll );
     FBSTRING* vr$11597 = fb_StrConcat( &TMP$5278$5, (void*)vr$11594, -1ll, (void*)vr$11587, -1ll );
     fb_GfxDraw( FGIMAGE$, (FBSTRING*)vr$11597 );
    }
    goto label$11861;
    label$11870:;
    if( V$1 != 0x1.4p+2 ) goto label$11872;
    label$11873:;
    {
     FBSTRING TMP$5279$5;
     FBSTRING TMP$5280$5;
     FBSTRING TMP$5281$5;
     FBSTRING* vr$11598 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394888ll) );
     FBSTRING* vr$11599 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394824ll) );
     __builtin_memset( &TMP$5279$5, 0, 24ll );
     FBSTRING* vr$11602 = fb_StrConcat( &TMP$5279$5, (void*)"c", 2ll, (void*)vr$11599, -1ll );
     __builtin_memset( &TMP$5280$5, 0, 24ll );
     FBSTRING* vr$11605 = fb_StrConcat( &TMP$5280$5, (void*)vr$11602, -1ll, (void*)"e", 2ll );
     __builtin_memset( &TMP$5281$5, 0, 24ll );
     FBSTRING* vr$11608 = fb_StrConcat( &TMP$5281$5, (void*)vr$11605, -1ll, (void*)vr$11598, -1ll );
     fb_GfxDraw( FGIMAGE$, (FBSTRING*)vr$11608 );
    }
    goto label$11861;
    label$11872:;
    if( V$1 != 0x1.8p+2 ) goto label$11874;
    label$11875:;
    {
     FBSTRING TMP$5282$5;
     FBSTRING TMP$5283$5;
     FBSTRING TMP$5284$5;
     FBSTRING* vr$11609 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394888ll) );
     FBSTRING* vr$11610 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394824ll) );
     __builtin_memset( &TMP$5282$5, 0, 24ll );
     FBSTRING* vr$11613 = fb_StrConcat( &TMP$5282$5, (void*)"c", 2ll, (void*)vr$11610, -1ll );
     __builtin_memset( &TMP$5283$5, 0, 24ll );
     FBSTRING* vr$11616 = fb_StrConcat( &TMP$5283$5, (void*)vr$11613, -1ll, (void*)"f", 2ll );
     __builtin_memset( &TMP$5284$5, 0, 24ll );
     FBSTRING* vr$11619 = fb_StrConcat( &TMP$5284$5, (void*)vr$11616, -1ll, (void*)vr$11609, -1ll );
     fb_GfxDraw( FGIMAGE$, (FBSTRING*)vr$11619 );
    }
    goto label$11861;
    label$11874:;
    if( V$1 != 0x1.Cp+2 ) goto label$11876;
    label$11877:;
    {
     FBSTRING TMP$5285$5;
     FBSTRING TMP$5286$5;
     FBSTRING TMP$5287$5;
     FBSTRING* vr$11620 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394888ll) );
     FBSTRING* vr$11621 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394824ll) );
     __builtin_memset( &TMP$5285$5, 0, 24ll );
     FBSTRING* vr$11624 = fb_StrConcat( &TMP$5285$5, (void*)"c", 2ll, (void*)vr$11621, -1ll );
     __builtin_memset( &TMP$5286$5, 0, 24ll );
     FBSTRING* vr$11627 = fb_StrConcat( &TMP$5286$5, (void*)vr$11624, -1ll, (void*)"g", 2ll );
     __builtin_memset( &TMP$5287$5, 0, 24ll );
     FBSTRING* vr$11630 = fb_StrConcat( &TMP$5287$5, (void*)vr$11627, -1ll, (void*)vr$11620, -1ll );
     fb_GfxDraw( FGIMAGE$, (FBSTRING*)vr$11630 );
    }
    goto label$11861;
    label$11876:;
    if( V$1 != 0x1.p+3 ) goto label$11878;
    label$11879:;
    {
     FBSTRING TMP$5288$5;
     FBSTRING TMP$5289$5;
     FBSTRING TMP$5290$5;
     FBSTRING* vr$11631 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394888ll) );
     FBSTRING* vr$11632 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394824ll) );
     __builtin_memset( &TMP$5288$5, 0, 24ll );
     FBSTRING* vr$11635 = fb_StrConcat( &TMP$5288$5, (void*)"c", 2ll, (void*)vr$11632, -1ll );
     __builtin_memset( &TMP$5289$5, 0, 24ll );
     FBSTRING* vr$11638 = fb_StrConcat( &TMP$5289$5, (void*)vr$11635, -1ll, (void*)"h", 2ll );
     __builtin_memset( &TMP$5290$5, 0, 24ll );
     FBSTRING* vr$11641 = fb_StrConcat( &TMP$5290$5, (void*)vr$11638, -1ll, (void*)vr$11631, -1ll );
     fb_GfxDraw( FGIMAGE$, (FBSTRING*)vr$11641 );
    }
    goto label$11861;
    label$11878:;
    if( V$1 != 0x1.2p+3 ) goto label$11880;
    label$11881:;
    {
     FBSTRING TMP$5291$5;
     FBSTRING* vr$11642 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394824ll) );
     __builtin_memset( &TMP$5291$5, 0, 24ll );
     FBSTRING* vr$11645 = fb_StrConcat( &TMP$5291$5, (void*)"c", 2ll, (void*)vr$11642, -1ll );
     fb_GfxDraw( FGIMAGE$, (FBSTRING*)vr$11645 );
    }
    goto label$11861;
    label$11880:;
    if( V$1 != 0x1.4p+3 ) goto label$11882;
    label$11883:;
    {
     FBSTRING TMP$5292$5;
     FBSTRING TMP$5293$5;
     FBSTRING TMP$5294$5;
     FBSTRING TMP$5295$5;
     FBSTRING TMP$5296$5;
     FBSTRING* vr$11646 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394896ll) );
     FBSTRING* vr$11647 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394888ll) );
     FBSTRING* vr$11648 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394824ll) );
     __builtin_memset( &TMP$5292$5, 0, 24ll );
     FBSTRING* vr$11651 = fb_StrConcat( &TMP$5292$5, (void*)"c", 2ll, (void*)vr$11648, -1ll );
     __builtin_memset( &TMP$5293$5, 0, 24ll );
     FBSTRING* vr$11654 = fb_StrConcat( &TMP$5293$5, (void*)vr$11651, -1ll, (void*)"p", 2ll );
     __builtin_memset( &TMP$5294$5, 0, 24ll );
     FBSTRING* vr$11657 = fb_StrConcat( &TMP$5294$5, (void*)vr$11654, -1ll, (void*)vr$11647, -1ll );
     __builtin_memset( &TMP$5295$5, 0, 24ll );
     FBSTRING* vr$11660 = fb_StrConcat( &TMP$5295$5, (void*)vr$11657, -1ll, (void*)",", 2ll );
     __builtin_memset( &TMP$5296$5, 0, 24ll );
     FBSTRING* vr$11663 = fb_StrConcat( &TMP$5296$5, (void*)vr$11660, -1ll, (void*)vr$11646, -1ll );
     fb_GfxDraw( FGIMAGE$, (FBSTRING*)vr$11663 );
    }
    goto label$11861;
    label$11882:;
    if( V$1 != 0x1.6p+3 ) goto label$11884;
    label$11885:;
    {
     FBSTRING TMP$5297$5;
     FBSTRING TMP$5298$5;
     FBSTRING TMP$5299$5;
     FBSTRING* vr$11664 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394888ll) );
     FBSTRING* vr$11665 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394824ll) );
     __builtin_memset( &TMP$5297$5, 0, 24ll );
     FBSTRING* vr$11668 = fb_StrConcat( &TMP$5297$5, (void*)"c", 2ll, (void*)vr$11665, -1ll );
     __builtin_memset( &TMP$5298$5, 0, 24ll );
     FBSTRING* vr$11671 = fb_StrConcat( &TMP$5298$5, (void*)vr$11668, -1ll, (void*)"s", 2ll );
     __builtin_memset( &TMP$5299$5, 0, 24ll );
     FBSTRING* vr$11674 = fb_StrConcat( &TMP$5299$5, (void*)vr$11671, -1ll, (void*)vr$11664, -1ll );
     fb_GfxDraw( FGIMAGE$, (FBSTRING*)vr$11674 );
    }
    goto label$11861;
    label$11884:;
    if( V$1 != 0x1.8p+3 ) goto label$11886;
    label$11887:;
    {
     FBSTRING TMP$5300$5;
     FBSTRING TMP$5301$5;
     FBSTRING TMP$5302$5;
     FBSTRING* vr$11675 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394888ll) );
     FBSTRING* vr$11676 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394824ll) );
     __builtin_memset( &TMP$5300$5, 0, 24ll );
     FBSTRING* vr$11679 = fb_StrConcat( &TMP$5300$5, (void*)"c", 2ll, (void*)vr$11676, -1ll );
     __builtin_memset( &TMP$5301$5, 0, 24ll );
     FBSTRING* vr$11682 = fb_StrConcat( &TMP$5301$5, (void*)vr$11679, -1ll, (void*)"a", 2ll );
     __builtin_memset( &TMP$5302$5, 0, 24ll );
     FBSTRING* vr$11685 = fb_StrConcat( &TMP$5302$5, (void*)vr$11682, -1ll, (void*)vr$11675, -1ll );
     fb_GfxDraw( FGIMAGE$, (FBSTRING*)vr$11685 );
    }
    goto label$11861;
    label$11886:;
    if( V$1 != 0x1.Ap+3 ) goto label$11888;
    label$11889:;
    {
     FBSTRING TMP$5304$5;
     FBSTRING TMP$5305$5;
     FBSTRING TMP$5306$5;
     FBSTRING* vr$11686 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394888ll) );
     FBSTRING* vr$11687 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394824ll) );
     __builtin_memset( &TMP$5304$5, 0, 24ll );
     FBSTRING* vr$11690 = fb_StrConcat( &TMP$5304$5, (void*)"c", 2ll, (void*)vr$11687, -1ll );
     __builtin_memset( &TMP$5305$5, 0, 24ll );
     FBSTRING* vr$11693 = fb_StrConcat( &TMP$5305$5, (void*)vr$11690, -1ll, (void*)"ta", 3ll );
     __builtin_memset( &TMP$5306$5, 0, 24ll );
     FBSTRING* vr$11696 = fb_StrConcat( &TMP$5306$5, (void*)vr$11693, -1ll, (void*)vr$11686, -1ll );
     fb_GfxDraw( FGIMAGE$, (FBSTRING*)vr$11696 );
    }
    goto label$11861;
    label$11888:;
    if( V$1 != 0x1.Cp+3 ) goto label$11890;
    label$11891:;
    {
     FBSTRING TMP$5307$5;
     FBSTRING TMP$5308$5;
     FBSTRING* vr$11697 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394824ll) );
     __builtin_memset( &TMP$5307$5, 0, 24ll );
     FBSTRING* vr$11700 = fb_StrConcat( &TMP$5307$5, (void*)"c", 2ll, (void*)vr$11697, -1ll );
     __builtin_memset( &TMP$5308$5, 0, 24ll );
     FBSTRING* vr$11703 = fb_StrConcat( &TMP$5308$5, (void*)vr$11700, -1ll, (void*)&STRCODE$, -1ll );
     fb_GfxDraw( FGIMAGE$, (FBSTRING*)vr$11703 );
     fb_StrAssign( (void*)&STRCODE$, -1ll, (void*)"", 1ll, 0 );
    }
    goto label$11861;
    label$11890:;
    if( V$1 != 0x1.Ep+3 ) goto label$11892;
    label$11893:;
    {
     FBSTRING TMP$5309$5;
     __builtin_memset( &TMP$5309$5, 0, 24ll );
     FBSTRING* vr$11706 = fb_StrConcat( &TMP$5309$5, (void*)"b", 2ll, (void*)&STRCODE$, -1ll );
     fb_GfxDraw( FGIMAGE$, (FBSTRING*)vr$11706 );
     fb_StrAssign( (void*)&STRCODE$, -1ll, (void*)"", 1ll, 0 );
    }
    goto label$11861;
    label$11892:;
    if( V$1 != 0x1.p+4 ) goto label$11894;
    label$11895:;
    {
     FBSTRING TMP$5310$5;
     FBSTRING TMP$5311$5;
     FBSTRING TMP$5312$5;
     FBSTRING* vr$11707 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394824ll) );
     __builtin_memset( &TMP$5310$5, 0, 24ll );
     FBSTRING* vr$11710 = fb_StrConcat( &TMP$5310$5, (void*)"c", 2ll, (void*)vr$11707, -1ll );
     __builtin_memset( &TMP$5311$5, 0, 24ll );
     FBSTRING* vr$11713 = fb_StrConcat( &TMP$5311$5, (void*)vr$11710, -1ll, (void*)"n", 2ll );
     __builtin_memset( &TMP$5312$5, 0, 24ll );
     FBSTRING* vr$11716 = fb_StrConcat( &TMP$5312$5, (void*)vr$11713, -1ll, (void*)&STRCODE$, -1ll );
     fb_GfxDraw( FGIMAGE$, (FBSTRING*)vr$11716 );
     fb_StrAssign( (void*)&STRCODE$, -1ll, (void*)"", 1ll, 0 );
    }
    label$11894:;
    label$11861:;
   }
  }
  goto label$8963;
  label$11859:;
  if( ADR$1 != 0x1.83D6p+15 ) goto label$11896;
  label$11897:;
  {
   {
    if( V$1 != 0x0p+0 ) goto label$11899;
    label$11900:;
    {
     _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (*(double*)((int64)(double*)MEM64$ + 395608ll) + *(double*)((int64)(double*)MEM64$ + 394888ll)) + (*(double*)((int64)(double*)MEM64$ + 394896ll) * 0x1.4p+5), *(double*)((int64)(double*)MEM64$ + 394944ll) );
    }
    label$11899:;
    label$11898:;
   }
  }
  goto label$8963;
  label$11896:;
  if( ADR$1 != 0x1.83D8p+15 ) goto label$11901;
  label$11902:;
  {
   {
    if( V$1 != 0x0p+0 ) goto label$11904;
    label$11905:;
    {
     _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (*(double*)((int64)(double*)MEM64$ + 394888ll) + (*(double*)((int64)(double*)MEM64$ + 394896ll) * 0x1.68p+6)) + 0x1.p+14, *(double*)((int64)(double*)MEM64$ + 394944ll) );
    }
    label$11904:;
    label$11903:;
   }
  }
  goto label$8963;
  label$11901:;
  if( ADR$1 != 0x1.83DAp+15 ) goto label$11906;
  label$11907:;
  {
   {
    if( V$1 != 0x0p+0 ) goto label$11909;
    label$11910:;
    {
     _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, (*(double*)((int64)(double*)MEM64$ + 394888ll) + (*(double*)((int64)(double*)MEM64$ + 394896ll) * 0x1.4p+7)) + 0x1.Ap+19, *(double*)((int64)(double*)MEM64$ + 394944ll) );
    }
    label$11909:;
    label$11908:;
   }
  }
  goto label$8963;
  label$11906:;
  if( ADR$1 < *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) ) goto label$11911;
  if( ADR$1 > (*(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) + (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) ) goto label$11911;
  label$11912:;
  {
   ADR$1 = ADR$1 - *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll)));
   C$ = ((uint64)__builtin_nearbyint( V$1 ));
   C$ = (uint64)C$ << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) & 63ll);
   C$ = ((uint64)__builtin_nearbyint( (double)(uint64)C$ + *(double*)((int64)(double*)MEM64$ + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) << (3ll & 63ll))) ));
   if( *(double*)((int64)(double*)MEM64$ + ((int64)RVS$ << (3ll & 63ll))) == (double)(int64)*(uint8*)NIBBLES$ ) goto label$11914;
   {
    *(double*)&C$ = (double)(((int64)__builtin_nearbyint( *(double*)&C$ )) & (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)));
    label$11914:;
   }
   if( *(double*)((int64)(double*)MEM64$ + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) << (3ll & 63ll))) > (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$11916;
   {
    *(double*)((int64)(double*)MEM64$ + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) << (3ll & 63ll))) = (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
    label$11916:;
   }
   _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)), (double)*(uint8*)NIBBLES$ );
   if( *(double*)((int64)(double*)MEM64$ + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) << (3ll & 63ll))) != (double)(int64)*(uint8*)NIBBLES$ ) goto label$11918;
   {
    XS$ = (uint64)(((int64)__builtin_nearbyint( ADR$1 )) % (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)));
    XS$ = (uint64)XS$ << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) & 63ll);
    XS$ = ((uint64)__builtin_nearbyint( ((double)(uint64)XS$ + (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll))) + 0x1.Cp+1 ));
    YS$ = (uint64)(((int64)__builtin_nearbyint( ADR$1 )) / (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)));
    YS$ = (uint64)YS$ << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) & 63ll);
    YS$ = ((uint64)__builtin_nearbyint( ((double)(uint64)YS$ + (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll))) + 0x1.Cp+1 ));
    *(double*)&Y$ = (double)*(uint8*)NIBBLES$;
    *(double*)&X$ = (double)*(uint8*)NIBBLES$;
    label$11919:;
    if( ((int64)-((double)Y$ == *(double*)((int64)(double*)MEM64$ + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) << (3ll & 63ll)))) & (int64)-((double)X$ == *(double*)((int64)(double*)MEM64$ + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) << (3ll & 63ll))))) != 0ll ) goto label$11920;
    {
     *(double*)((int64)(double*)MEM64$ + 394840ll) = ((double)(XS$ + X$) * 0x1.5p+2) + *(double*)((int64)(double*)MEM64$ + 395032ll);
     *(double*)((int64)(double*)MEM64$ + 394848ll) = ((double)(YS$ + Y$) * 0x1.1p+2) + *(double*)((int64)(double*)MEM64$ + 395040ll);
     *(double*)((int64)(double*)MEM64$ + 394864ll) = (((double)(XS$ + X$) * 0x1.5p+2) + *(double*)((int64)(double*)MEM64$ + 395032ll)) + 0x1.Cp+2;
     *(double*)((int64)(double*)MEM64$ + 394872ll) = (((double)(YS$ + Y$) * 0x1.1p+2) + *(double*)((int64)(double*)MEM64$ + 395040ll)) + 0x1.Cp+2;
     double vr$11937 = _ZN12SYSTEM_BUS_T6PEEK64Ed( THIS$1, 0x1.81F8p+15 );
     _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), 0x1.81F8p+15, vr$11937 );
     X$ = (uint64)X$ + (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
     if( (double)(uint64)X$ <= *(double*)((int64)(double*)MEM64$ + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) << (3ll & 63ll))) ) goto label$11922;
     {
      X$ = (uint64)*(uint8*)NIBBLES$;
      Y$ = (uint64)Y$ + (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
      C$ = (uint64)C$ + (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
      *(double*)((int64)(double*)MEM64$ + 426128ll) = (double)(((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 426128ll) + 0x1.p+0 )) % 1079ll);
     }
     label$11922:;
     label$11921:;
    }
    goto label$11919;
    label$11920:;
    _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)), (double)*(uint8*)NIBBLES$ );
   }
   goto label$11917;
   label$11918:;
   if( *(double*)((int64)(double*)MEM64$ + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) << (3ll & 63ll))) != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$11923;
   {
    XS$ = ((int64)__builtin_nearbyint( ADR$1 )) % 40ll;
    XS$ = XS$ << (3ll & 63ll);
    XS$ = XS$ + 32ll;
    YS$ = ((int64)__builtin_nearbyint( ADR$1 )) / 40ll;
    YS$ = YS$ << (3ll & 63ll);
    YS$ = YS$ + 32ll;
    Y$ = ((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395088ll) ));
    X$ = ((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395080ll) ));
    label$11924:;
    if( ((int64)-(Y$ == 0ll) & (int64)-(X$ == 0ll)) != 0ll ) goto label$11925;
    {
     *(double*)((int64)(double*)MEM64$ + 394864ll) = (double)(((XS$ - X$) * 5ll) + 2ll) + *(double*)((int64)(double*)MEM64$ + 395032ll);
     *(double*)((int64)(double*)MEM64$ + 394872ll) = (double)(((YS$ - Y$) << (2ll & 63ll)) + 2ll) + *(double*)((int64)(double*)MEM64$ + 395040ll);
     *(double*)((int64)(double*)MEM64$ + 394840ll) = (double)(((XS$ - X$) * 5ll) + -2ll) + *(double*)((int64)(double*)MEM64$ + 395032ll);
     *(double*)((int64)(double*)MEM64$ + 394848ll) = (double)(((YS$ - Y$) << (2ll & 63ll)) + -2ll) + *(double*)((int64)(double*)MEM64$ + 395040ll);
     double vr$12017 = _ZN12SYSTEM_BUS_T6PEEK64Ed( THIS$1, 0x1.81F8p+15 );
     _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.81F8p+15, vr$12017 );
     X$ = X$ + -1ll;
     if( X$ >= 0ll ) goto label$11927;
     {
      X$ = ((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395080ll) ));
      Y$ = Y$ + -1ll;
      C$ = C$ + 1ll;
      *(double*)((int64)(double*)MEM64$ + 426128ll) = (double)(((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 426128ll) + 0x1.p+0 )) % 1079ll);
     }
     label$11927:;
     label$11926:;
    }
    goto label$11924;
    label$11925:;
    fb_GfxUnlock( (int32)YS$, (int32)(YS$ + 8ll) );
   }
   goto label$11917;
   label$11923:;
   if( *(double*)((int64)(double*)MEM64$ + 395064ll) != 0x1.p+1 ) goto label$11928;
   {
    XS$ = ((int64)__builtin_nearbyint( ADR$1 )) % 40ll;
    XS$ = XS$ << (3ll & 63ll);
    XS$ = ((int64)__builtin_nearbyint( (double)XS$ + 0x1.88p+4 ));
    YS$ = ((int64)__builtin_nearbyint( ADR$1 )) / 40ll;
    YS$ = YS$ << (3ll & 63ll);
    YS$ = ((int64)__builtin_nearbyint( (double)YS$ + 0x1.88p+4 ));
    Y$ = 0ll;
    X$ = 0ll;
    label$11929:;
    if( ((int64)-((double)Y$ == *(double*)((int64)(double*)MEM64$ + 395088ll)) & (int64)-((double)X$ == *(double*)((int64)(double*)MEM64$ + 395080ll))) != 0ll ) goto label$11930;
    {
     *(double*)((int64)(double*)MEM64$ + 394840ll) = ((double)((XS$ + X$) * 5ll) / 0x1.p+1) + *(double*)((int64)(double*)MEM64$ + 395032ll);
     *(double*)((int64)(double*)MEM64$ + 394848ll) = ((double)((YS$ + Y$) << (2ll & 63ll)) / 0x1.p+1) + *(double*)((int64)(double*)MEM64$ + 395040ll);
     *(double*)((int64)(double*)MEM64$ + 394864ll) = ((double)(((XS$ + X$) * 5ll) + 7ll) / 0x1.p+1) + *(double*)((int64)(double*)MEM64$ + 395032ll);
     *(double*)((int64)(double*)MEM64$ + 394872ll) = ((double)(((YS$ + Y$) << (2ll & 63ll)) + 4ll) / 0x1.p+1) + *(double*)((int64)(double*)MEM64$ + 395040ll);
     double vr$12068 = _ZN12SYSTEM_BUS_T6PEEK64Ed( THIS$1, 0x1.81F8p+15 );
     _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.81F8p+15, vr$12068 );
     X$ = X$ + 1ll;
     if( (double)X$ <= *(double*)((int64)(double*)MEM64$ + 395080ll) ) goto label$11932;
     {
      X$ = 0ll;
      Y$ = Y$ + 1ll;
      C$ = C$ + 1ll;
      *(double*)((int64)(double*)MEM64$ + 426128ll) = (double)(((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 426128ll) + 0x1.p+0 )) % 1079ll);
     }
     label$11932:;
     label$11931:;
    }
    goto label$11929;
    label$11930:;
    _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8208p+15, 0x0p+0 );
   }
   goto label$11917;
   label$11928:;
   if( *(double*)((int64)(double*)MEM64$ + 395064ll) != 0x1.8p+1 ) goto label$11933;
   {
    XS$ = ((int64)__builtin_nearbyint( ADR$1 )) % 80ll;
    XS$ = XS$ << (3ll & 63ll);
    XS$ = XS$ + 32ll;
    YS$ = ((int64)__builtin_nearbyint( ADR$1 )) / 80ll;
    YS$ = YS$ << (3ll & 63ll);
    YS$ = YS$ + 32ll;
    {
     Y$ = ((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395088ll) ));
     goto label$11934;
     label$11937:;
     {
      {
       X$ = 0ll;
       int64 TMP$5313$7;
       TMP$5313$7 = ((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395080ll) ));
       goto label$11938;
       label$11941:;
       {
        *(double*)((int64)(double*)MEM64$ + 394864ll) = ((((double)(XS$ - X$) * 0x1.4p+2) + 0x1.p+1) / 0x1.p+1) + *(double*)((int64)(double*)MEM64$ + 395032ll);
        *(double*)((int64)(double*)MEM64$ + 394872ll) = ((((double)(YS$ - Y$) * 0x1.p+2) + 0x1.p+1) / 0x1.p+1) + *(double*)((int64)(double*)MEM64$ + 395040ll);
        *(double*)((int64)(double*)MEM64$ + 394840ll) = ((((double)(XS$ - X$) * 0x1.4p+2) + -0x1.p+1) / 0x1.p+1) + *(double*)((int64)(double*)MEM64$ + 395032ll);
        *(double*)((int64)(double*)MEM64$ + 394848ll) = ((((double)(YS$ - Y$) * 0x1.p+2) + -0x1.p+1) / 0x1.p+1) + *(double*)((int64)(double*)MEM64$ + 395040ll);
        double vr$12111 = _ZN12SYSTEM_BUS_T6PEEK64Ed( THIS$1, 0x1.81F8p+15 );
        _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.81F8p+15, vr$12111 );
       }
       label$11939:;
       X$ = X$ + 1ll;
       label$11938:;
       if( X$ <= TMP$5313$7 ) goto label$11941;
       label$11940:;
      }
      *(double*)((int64)(double*)MEM64$ + 426128ll) = (double)(((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 426128ll) + 0x1.p+0 )) % 1079ll);
      C$ = ((int64)__builtin_nearbyint( (double)C$ + 0x1.p+0 ));
     }
     label$11935:;
     Y$ = Y$ + -1ll;
     label$11934:;
     if( Y$ >= 0ll ) goto label$11937;
     label$11936:;
    }
    fb_GfxUnlock( (int32)YS$, ((int32)__builtin_nearbyint( (double)YS$ + 0x1.p+3 )) );
   }
   label$11933:;
   label$11917:;
  }
  goto label$8963;
  label$11911:;
  if( ADR$1 < (*(double*)((int64)(double*)MEM64$ + 395608ll) + 0x1.p+10) ) goto label$11942;
  if( ADR$1 > (*(double*)((int64)(double*)MEM64$ + 395608ll) + 0x1.01Cp+10) ) goto label$11942;
  label$11943:;
  {
   {
    if( ADR$1 != (*(double*)((int64)(double*)MEM64$ + 395608ll) + 0x1.p+10) ) goto label$11945;
    label$11946:;
    {
    }
    goto label$11944;
    label$11945:;
    if( ADR$1 != (*(double*)((int64)(double*)MEM64$ + 395608ll) + 0x1.01p+10) ) goto label$11947;
    label$11948:;
    {
    }
    goto label$11944;
    label$11947:;
    if( ADR$1 != (*(double*)((int64)(double*)MEM64$ + 395608ll) + 0x1.014p+10) ) goto label$11949;
    label$11950:;
    {
    }
    goto label$11944;
    label$11949:;
    if( ADR$1 != (*(double*)((int64)(double*)MEM64$ + 395608ll) + 0x1.018p+10) ) goto label$11951;
    label$11952:;
    {
    }
    goto label$11944;
    label$11951:;
    if( ADR$1 != (*(double*)((int64)(double*)MEM64$ + 395608ll) + 0x1.01Cp+10) ) goto label$11953;
    label$11954:;
    {
    }
    label$11953:;
    label$11944:;
   }
  }
  goto label$8963;
  label$11942:;
  if( ADR$1 < (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) ) goto label$11955;
  if( ADR$1 > (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) ) goto label$11955;
  label$11956:;
  {
   _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, ADR$1, V$1 );
  }
  goto label$8963;
  label$11955:;
  if( ADR$1 < 0x1.Cp+15 ) goto label$11959;
  if( ADR$1 <= 0x1.FFFEp+15 ) goto label$11958;
  label$11959:;
  if( ADR$1 < 0x1.4p+15 ) goto label$11960;
  if( ADR$1 <= 0x1.7FFEp+15 ) goto label$11958;
  label$11960:;
  if( ADR$1 < 0x1.Bp+15 ) goto label$11957;
  if( ADR$1 > 0x1.B7FEp+15 ) goto label$11957;
  label$11958:;
  {
   *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( ADR$1 )) << (3ll & 63ll))) = V$1;
  }
  label$11957:;
  label$8963:;
 }
 label$11961:;
 label$6602:;
}

int8 _ZN12SYSTEM_BUS_T8READBYTEEh( struct $12SYSTEM_BUS_T* THIS$1, uint8 ADR$1 )
{
 int8 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 1ll );
 label$11965:;
 double vr$2 = _ZN12SYSTEM_BUS_T6PEEK64Ed( THIS$1, (double)ADR$1 );
 fb$result$1 = (int8)((int32)__builtin_nearbyint( vr$2 ));
 goto label$11966;
 label$11966:;
 return fb$result$1;
}

int8 _ZN12SYSTEM_BUS_T8READBYTEEa( struct $12SYSTEM_BUS_T* THIS$1, int8 ADR$1 )
{
 int8 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 1ll );
 label$11967:;
 double vr$2 = _ZN12SYSTEM_BUS_T6PEEK64Ed( THIS$1, (double)ADR$1 );
 fb$result$1 = (int8)((int32)__builtin_nearbyint( vr$2 ));
 goto label$11968;
 label$11968:;
 return fb$result$1;
}

int8 _ZN12SYSTEM_BUS_T8READBYTEEt( struct $12SYSTEM_BUS_T* THIS$1, uint16 ADR$1 )
{
 int8 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 1ll );
 label$11969:;
 double vr$2 = _ZN12SYSTEM_BUS_T6PEEK64Ed( THIS$1, (double)ADR$1 );
 fb$result$1 = (int8)((int32)__builtin_nearbyint( vr$2 ));
 goto label$11970;
 label$11970:;
 return fb$result$1;
}

int8 _ZN12SYSTEM_BUS_T8READBYTEEs( struct $12SYSTEM_BUS_T* THIS$1, int16 ADR$1 )
{
 int8 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 1ll );
 label$11971:;
 double vr$2 = _ZN12SYSTEM_BUS_T6PEEK64Ed( THIS$1, (double)ADR$1 );
 fb$result$1 = (int8)((int32)__builtin_nearbyint( vr$2 ));
 goto label$11972;
 label$11972:;
 return fb$result$1;
}

int8 _ZN12SYSTEM_BUS_T8READBYTEEj( struct $12SYSTEM_BUS_T* THIS$1, uint32 ADR$1 )
{
 int8 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 1ll );
 label$11973:;
 double vr$2 = _ZN12SYSTEM_BUS_T6PEEK64Ed( THIS$1, (double)ADR$1 );
 fb$result$1 = (int8)((int32)__builtin_nearbyint( vr$2 ));
 goto label$11974;
 label$11974:;
 return fb$result$1;
}

int8 _ZN12SYSTEM_BUS_T8READBYTEEi( struct $12SYSTEM_BUS_T* THIS$1, int32 ADR$1 )
{
 int8 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 1ll );
 label$11975:;
 double vr$2 = _ZN12SYSTEM_BUS_T6PEEK64Ed( THIS$1, (double)ADR$1 );
 fb$result$1 = (int8)((int32)__builtin_nearbyint( vr$2 ));
 goto label$11976;
 label$11976:;
 return fb$result$1;
}

int8 _ZN12SYSTEM_BUS_T8READBYTEEy( struct $12SYSTEM_BUS_T* THIS$1, uint64 ADR$1 )
{
 int8 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 1ll );
 label$11977:;
 double vr$2 = _ZN12SYSTEM_BUS_T6PEEK64Ed( THIS$1, (double)ADR$1 );
 fb$result$1 = (int8)((int32)__builtin_nearbyint( vr$2 ));
 goto label$11978;
 label$11978:;
 return fb$result$1;
}

int8 _ZN12SYSTEM_BUS_T8READBYTEEx( struct $12SYSTEM_BUS_T* THIS$1, int64 ADR$1 )
{
 int8 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 1ll );
 label$11979:;
 double vr$2 = _ZN12SYSTEM_BUS_T6PEEK64Ed( THIS$1, (double)ADR$1 );
 fb$result$1 = (int8)((int32)__builtin_nearbyint( vr$2 ));
 goto label$11980;
 label$11980:;
 return fb$result$1;
}

int8 _ZN12SYSTEM_BUS_T8READBYTEEf( struct $12SYSTEM_BUS_T* THIS$1, float ADR$1 )
{
 int8 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 1ll );
 label$11981:;
 double vr$2 = _ZN12SYSTEM_BUS_T6PEEK64Ed( THIS$1, (double)ADR$1 );
 fb$result$1 = (int8)((int32)__builtin_nearbyint( vr$2 ));
 goto label$11982;
 label$11982:;
 return fb$result$1;
}

int8 _ZN12SYSTEM_BUS_T8READBYTEEd( struct $12SYSTEM_BUS_T* THIS$1, double ADR$1 )
{
 int8 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 1ll );
 label$11983:;
 double vr$1 = _ZN12SYSTEM_BUS_T6PEEK64Ed( THIS$1, ADR$1 );
 fb$result$1 = (int8)((int32)__builtin_nearbyint( vr$1 ));
 goto label$11984;
 label$11984:;
 return fb$result$1;
}

int8 _ZN12SYSTEM_BUS_T8READBYTEE9_FLOAT128( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* ADR$1 )
{
 int8 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 1ll );
 label$11985:;
 uint64 vr$1 = _ZN9_FLOAT128cvyEv( ADR$1 );
 double vr$3 = _ZN12SYSTEM_BUS_T6PEEK64Ed( THIS$1, (double)vr$1 );
 fb$result$1 = (int8)((int32)__builtin_nearbyint( vr$3 ));
 goto label$11986;
 label$11986:;
 return fb$result$1;
}

int8 _ZN12SYSTEM_BUS_T8READBYTEE9_FLOAT256( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* ADR$1 )
{
 int8 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 1ll );
 label$11987:;
 uint64 vr$1 = _ZN9_FLOAT256cvyEv( ADR$1 );
 double vr$3 = _ZN12SYSTEM_BUS_T6PEEK64Ed( THIS$1, (double)vr$1 );
 fb$result$1 = (int8)((int32)__builtin_nearbyint( vr$3 ));
 goto label$11988;
 label$11988:;
 return fb$result$1;
}

int8 _ZN12SYSTEM_BUS_T8READBYTEE9_FLOAT512( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* ADR$1 )
{
 int8 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 1ll );
 label$11989:;
 uint64 vr$1 = _ZN9_FLOAT512cvyEv( ADR$1 );
 double vr$3 = _ZN12SYSTEM_BUS_T6PEEK64Ed( THIS$1, (double)vr$1 );
 fb$result$1 = (int8)((int32)__builtin_nearbyint( vr$3 ));
 goto label$11990;
 label$11990:;
 return fb$result$1;
}

uint8 _ZN12SYSTEM_BUS_T9READUBYTEEd( struct $12SYSTEM_BUS_T* THIS$1, double ADR$1 )
{
 uint8 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 1ll );
 label$11991:;
 double vr$1 = _ZN12SYSTEM_BUS_T6PEEK64Ed( THIS$1, ADR$1 );
 fb$result$1 = (uint8)((int32)__builtin_nearbyint( vr$1 ));
 goto label$11992;
 label$11992:;
 return fb$result$1;
}

uint16 _ZN12SYSTEM_BUS_T10READUSHORTEd( struct $12SYSTEM_BUS_T* THIS$1, double ADR$1 )
{
 uint16 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 2ll );
 label$11993:;
 double vr$1 = _ZN12SYSTEM_BUS_T6PEEK64Ed( THIS$1, ADR$1 );
 double vr$6 = _ZN12SYSTEM_BUS_T6PEEK64Ed( THIS$1, ADR$1 + (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 fb$result$1 = (uint16)(((int64)__builtin_nearbyint( vr$1 )) | (((int64)__builtin_nearbyint( vr$6 )) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)));
 goto label$11994;
 label$11994:;
 return fb$result$1;
}

void _ZN12SYSTEM_BUS_T9WRITEBYTEEhh( struct $12SYSTEM_BUS_T* THIS$1, uint8 ADR$1, uint8 B8$1 )
{
 label$11995:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (double)ADR$1, (double)B8$1 );
 label$11996:;
}

void _ZN12SYSTEM_BUS_T9WRITEBYTEEaa( struct $12SYSTEM_BUS_T* THIS$1, int8 ADR$1, int8 B8$1 )
{
 label$11997:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (double)ADR$1, (double)B8$1 );
 label$11998:;
}

void _ZN12SYSTEM_BUS_T9WRITEBYTEEtt( struct $12SYSTEM_BUS_T* THIS$1, uint16 ADR$1, uint16 B8$1 )
{
 label$11999:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (double)ADR$1, (double)B8$1 );
 label$12000:;
}

void _ZN12SYSTEM_BUS_T9WRITEBYTEEss( struct $12SYSTEM_BUS_T* THIS$1, int16 ADR$1, int16 B8$1 )
{
 label$12001:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (double)ADR$1, (double)B8$1 );
 label$12002:;
}

void _ZN12SYSTEM_BUS_T9WRITEBYTEEjj( struct $12SYSTEM_BUS_T* THIS$1, uint32 ADR$1, uint32 B8$1 )
{
 label$12003:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (double)ADR$1, (double)B8$1 );
 label$12004:;
}

void _ZN12SYSTEM_BUS_T9WRITEBYTEEii( struct $12SYSTEM_BUS_T* THIS$1, int32 ADR$1, int32 B8$1 )
{
 label$12005:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (double)ADR$1, (double)B8$1 );
 label$12006:;
}

void _ZN12SYSTEM_BUS_T9WRITEBYTEEyy( struct $12SYSTEM_BUS_T* THIS$1, uint64 ADR$1, uint64 B8$1 )
{
 label$12007:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (double)ADR$1, (double)B8$1 );
 label$12008:;
}

void _ZN12SYSTEM_BUS_T9WRITEBYTEExx( struct $12SYSTEM_BUS_T* THIS$1, int64 ADR$1, int64 B8$1 )
{
 label$12009:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (double)ADR$1, (double)B8$1 );
 label$12010:;
}

void _ZN12SYSTEM_BUS_T9WRITEBYTEEff( struct $12SYSTEM_BUS_T* THIS$1, float ADR$1, float B8$1 )
{
 label$12011:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (double)ADR$1, (double)B8$1 );
 label$12012:;
}

void _ZN12SYSTEM_BUS_T9WRITEBYTEEdd( struct $12SYSTEM_BUS_T* THIS$1, double ADR$1, double B8$1 )
{
 label$12013:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, ADR$1, B8$1 );
 label$12014:;
}

void _ZN12SYSTEM_BUS_T10WRITEUBYTEEdd( struct $12SYSTEM_BUS_T* THIS$1, double ADR$1, double B8$1 )
{
 label$12015:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, ADR$1, B8$1 );
 label$12016:;
}

void _ZN12SYSTEM_BUS_T11WRITEUSHORTEdd( struct $12SYSTEM_BUS_T* THIS$1, double ADR$1, double W16$1 )
{
 label$12017:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, ADR$1, (double)(((uint64)__builtin_nearbyint( W16$1 )) & 255ull) );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, ADR$1 + (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll), (double)((((uint64)__builtin_nearbyint( W16$1 )) & 65280ull) >> (8ll & 63ll)) );
 label$12018:;
}

void _ZN7CPU6510C1EP12SYSTEM_BUS_T( struct $7CPU6510* THIS$1, struct $12SYSTEM_BUS_T* LPMEM$1 )
{
 label$12019:;
 __builtin_memset( (uint8*)THIS$1, 0, 1ll );
 __builtin_memset( (uint8*)((uint8*)THIS$1 + 1ll), 0, 1ll );
 __builtin_memset( (uint8*)((uint8*)THIS$1 + 2ll), 0, 1ll );
 __builtin_memset( (uint8*)((uint8*)THIS$1 + 3ll), 0, 1ll );
 __builtin_memset( (uint16*)((uint8*)THIS$1 + 4ll), 0, 2ll );
 __builtin_memset( (uint16*)((uint8*)THIS$1 + 6ll), 0, 2ll );
 __builtin_memset( (struct $12SYSTEM_BUS_T**)((uint8*)THIS$1 + 8ll), 0, 8ll );
 __builtin_memset( (struct $6OPCODE*)((uint8*)THIS$1 + 16ll), 0, 56ll );
 __builtin_memset( (struct $6OPCODE*)((uint8*)THIS$1 + 72ll), 0, 14336ll );
 __builtin_memset( (FBSTRING*)((uint8*)THIS$1 + 14408ll), 0, 312ll );
 *(struct $12SYSTEM_BUS_T**)((uint8*)THIS$1 + 8ll) = LPMEM$1;
 int64 I$1;
 I$1 = 0ll;
 fb_DataRestore( (void*)label$12022 );
 {
  I$1 = 0ll;
  label$12026:;
  {
   {
    struct $6OPCODE* TMP$5326$4;
    TMP$5326$4 = (struct $6OPCODE*)((uint8*)((uint8*)THIS$1 + (I$1 * 56ll)) + 72ll);
    fb_DataReadULongint( (uint64*)TMP$5326$4 );
    fb_DataReadStr( (void*)((uint8*)TMP$5326$4 + 8ll), 4ll, 0 );
    fb_DataReadULongint( (uint64*)((uint8*)TMP$5326$4 + 16ll) );
    fb_DataReadULongint( (uint64*)((uint8*)TMP$5326$4 + 24ll) );
    fb_DataReadULongint( (uint64*)((uint8*)TMP$5326$4 + 32ll) );
    fb_DataReadULongint( (uint64*)((uint8*)TMP$5326$4 + 48ll) );
   }
  }
  label$12024:;
  I$1 = I$1 + 1ll;
  label$12023:;
  if( I$1 <= 255ll ) goto label$12026;
  label$12025:;
 }
 fb_DataRestore( (void*)label$12028 );
 {
  I$1 = 0ll;
  label$12032:;
  {
   fb_DataReadStr( (void*)((uint8*)((uint8*)THIS$1 + (I$1 * 24ll)) + 14408ll), -1ll, 0 );
  }
  label$12030:;
  I$1 = I$1 + 1ll;
  label$12029:;
  if( I$1 <= 12ll ) goto label$12032;
  label$12031:;
 }
 *(uint8*)((uint8*)THIS$1 + 7ll) = (uint8)1u;
 *(uint16*)((uint8*)THIS$1 + 4ll) = (uint16)64738u;
 label$12020:;
}

void _ZN7CPU6510D1Ev( struct $7CPU6510* THIS$1 )
{
 label$12033:;
 label$12034:;
 struct $N7CPU65108FBARRAY1I8FBSTRINGEE {
  FBSTRING* DATA;
  FBSTRING* PTR;
  int64 SIZE;
  int64 ELEMENT_LEN;
  int64 DIMENSIONS;
  int64 FLAGS;
  struct $16__FB_ARRAYDIMTB$ DIMTB[1];
 };
 extern int __$fb_structsizecheck[(sizeof( struct $N7CPU65108FBARRAY1I8FBSTRINGEE ) == 72) ? 1 : -1];
 struct $N7CPU65108FBARRAY1I8FBSTRINGEE tmp$5328$1;
 *(FBSTRING**)&tmp$5328$1 = (FBSTRING*)((uint8*)THIS$1 + 14408ll);
 *(FBSTRING**)((uint8*)&tmp$5328$1 + 8ll) = (FBSTRING*)((uint8*)THIS$1 + 14408ll);
 *(int64*)((uint8*)&tmp$5328$1 + 16ll) = 312ll;
 *(int64*)((uint8*)&tmp$5328$1 + 24ll) = 24ll;
 *(int64*)((uint8*)&tmp$5328$1 + 32ll) = 1ll;
 *(int64*)((uint8*)&tmp$5328$1 + 40ll) = 49ll;
 *(int64*)((uint8*)&tmp$5328$1 + 48ll) = 13ll;
 *(int64*)((uint8*)&tmp$5328$1 + 56ll) = 0ll;
 *(int64*)((uint8*)&tmp$5328$1 + 64ll) = 12ll;
 fb_ArrayDestructStr( (struct $7FBARRAYIvE*)&tmp$5328$1 );
}

FBSTRING* _ZN7CPU6510cv8FBSTRINGEv( struct $7CPU6510* THIS$1 )
{
 FBSTRING TMP$5342$1;
 FBSTRING TMP$5343$1;
 FBSTRING TMP$5344$1;
 FBSTRING TMP$5345$1;
 FBSTRING TMP$5346$1;
 FBSTRING TMP$5347$1;
 FBSTRING TMP$5348$1;
 FBSTRING TMP$5349$1;
 FBSTRING TMP$5350$1;
 FBSTRING TMP$5351$1;
 FBSTRING TMP$5352$1;
 FBSTRING TMP$5353$1;
 FBSTRING TMP$5354$1;
 FBSTRING TMP$5355$1;
 FBSTRING TMP$5356$1;
 FBSTRING TMP$5357$1;
 FBSTRING TMP$5358$1;
 FBSTRING TMP$5359$1;
 FBSTRING TMP$5360$1;
 FBSTRING TMP$5361$1;
 FBSTRING TMP$5362$1;
 FBSTRING TMP$5363$1;
 FBSTRING TMP$5364$1;
 FBSTRING TMP$5365$1;
 FBSTRING fb$result$1;
 __builtin_memset( &fb$result$1, 0, 24ll );
 label$12035:;
 FBSTRING* vr$4 = fb_ULongintToStr( (uint64)(int64)*(uint8*)THIS$1 & 1ull );
 FBSTRING* vr$9 = fb_ULongintToStr( (uint64)((int64)*(uint8*)THIS$1 >> (1ll & 63ll)) & 1ull );
 FBSTRING* vr$14 = fb_ULongintToStr( (uint64)((int64)*(uint8*)THIS$1 >> (2ll & 63ll)) & 1ull );
 FBSTRING* vr$19 = fb_ULongintToStr( (uint64)((int64)*(uint8*)THIS$1 >> (3ll & 63ll)) & 1ull );
 FBSTRING* vr$24 = fb_ULongintToStr( (uint64)((int64)*(uint8*)THIS$1 >> (4ll & 63ll)) & 1ull );
 FBSTRING* vr$29 = fb_ULongintToStr( (uint64)((int64)*(uint8*)THIS$1 >> (6ll & 63ll)) & 1ull );
 FBSTRING* vr$34 = fb_ULongintToStr( (uint64)((int64)*(uint8*)THIS$1 >> (7ll & 63ll)) & 1ull );
 FBSTRING* vr$37 = fb_HEXEx_b( *(uint8*)((uint8*)THIS$1 + 6ll), (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
 FBSTRING* vr$40 = fb_HEXEx_b( *(uint8*)((uint8*)THIS$1 + 3ll), (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
 FBSTRING* vr$43 = fb_HEXEx_b( *(uint8*)((uint8*)THIS$1 + 2ll), (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
 FBSTRING* vr$46 = fb_HEXEx_b( *(uint8*)((uint8*)THIS$1 + 1ll), (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
 FBSTRING* vr$49 = fb_HEXEx_s( *(uint16*)((uint8*)THIS$1 + 4ll), (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) );
 __builtin_memset( &TMP$5342$1, 0, 24ll );
 FBSTRING* vr$52 = fb_StrConcat( &TMP$5342$1, (void*)"PC:", 4ll, (void*)vr$49, -1ll );
 __builtin_memset( &TMP$5343$1, 0, 24ll );
 FBSTRING* vr$55 = fb_StrConcat( &TMP$5343$1, (void*)vr$52, -1ll, (void*)" A:", 4ll );
 __builtin_memset( &TMP$5344$1, 0, 24ll );
 FBSTRING* vr$58 = fb_StrConcat( &TMP$5344$1, (void*)vr$55, -1ll, (void*)vr$46, -1ll );
 __builtin_memset( &TMP$5345$1, 0, 24ll );
 FBSTRING* vr$61 = fb_StrConcat( &TMP$5345$1, (void*)vr$58, -1ll, (void*)" X:", 4ll );
 __builtin_memset( &TMP$5346$1, 0, 24ll );
 FBSTRING* vr$64 = fb_StrConcat( &TMP$5346$1, (void*)vr$61, -1ll, (void*)vr$43, -1ll );
 __builtin_memset( &TMP$5347$1, 0, 24ll );
 FBSTRING* vr$67 = fb_StrConcat( &TMP$5347$1, (void*)vr$64, -1ll, (void*)" Y:", 4ll );
 __builtin_memset( &TMP$5348$1, 0, 24ll );
 FBSTRING* vr$70 = fb_StrConcat( &TMP$5348$1, (void*)vr$67, -1ll, (void*)vr$40, -1ll );
 __builtin_memset( &TMP$5349$1, 0, 24ll );
 FBSTRING* vr$73 = fb_StrConcat( &TMP$5349$1, (void*)vr$70, -1ll, (void*)" S:", 4ll );
 __builtin_memset( &TMP$5350$1, 0, 24ll );
 FBSTRING* vr$76 = fb_StrConcat( &TMP$5350$1, (void*)vr$73, -1ll, (void*)vr$37, -1ll );
 __builtin_memset( &TMP$5351$1, 0, 24ll );
 FBSTRING* vr$79 = fb_StrConcat( &TMP$5351$1, (void*)vr$76, -1ll, (void*)" N:", 4ll );
 __builtin_memset( &TMP$5352$1, 0, 24ll );
 FBSTRING* vr$82 = fb_StrConcat( &TMP$5352$1, (void*)vr$79, -1ll, (void*)vr$34, -1ll );
 __builtin_memset( &TMP$5353$1, 0, 24ll );
 FBSTRING* vr$85 = fb_StrConcat( &TMP$5353$1, (void*)vr$82, -1ll, (void*)" V:", 4ll );
 __builtin_memset( &TMP$5354$1, 0, 24ll );
 FBSTRING* vr$88 = fb_StrConcat( &TMP$5354$1, (void*)vr$85, -1ll, (void*)vr$29, -1ll );
 __builtin_memset( &TMP$5355$1, 0, 24ll );
 FBSTRING* vr$91 = fb_StrConcat( &TMP$5355$1, (void*)vr$88, -1ll, (void*)" -", 3ll );
 __builtin_memset( &TMP$5356$1, 0, 24ll );
 FBSTRING* vr$94 = fb_StrConcat( &TMP$5356$1, (void*)vr$91, -1ll, (void*)" B:", 4ll );
 __builtin_memset( &TMP$5357$1, 0, 24ll );
 FBSTRING* vr$97 = fb_StrConcat( &TMP$5357$1, (void*)vr$94, -1ll, (void*)vr$24, -1ll );
 __builtin_memset( &TMP$5358$1, 0, 24ll );
 FBSTRING* vr$100 = fb_StrConcat( &TMP$5358$1, (void*)vr$97, -1ll, (void*)" D:", 4ll );
 __builtin_memset( &TMP$5359$1, 0, 24ll );
 FBSTRING* vr$103 = fb_StrConcat( &TMP$5359$1, (void*)vr$100, -1ll, (void*)vr$19, -1ll );
 __builtin_memset( &TMP$5360$1, 0, 24ll );
 FBSTRING* vr$106 = fb_StrConcat( &TMP$5360$1, (void*)vr$103, -1ll, (void*)" I:", 4ll );
 __builtin_memset( &TMP$5361$1, 0, 24ll );
 FBSTRING* vr$109 = fb_StrConcat( &TMP$5361$1, (void*)vr$106, -1ll, (void*)vr$14, -1ll );
 __builtin_memset( &TMP$5362$1, 0, 24ll );
 FBSTRING* vr$112 = fb_StrConcat( &TMP$5362$1, (void*)vr$109, -1ll, (void*)" Z:", 4ll );
 __builtin_memset( &TMP$5363$1, 0, 24ll );
 FBSTRING* vr$115 = fb_StrConcat( &TMP$5363$1, (void*)vr$112, -1ll, (void*)vr$9, -1ll );
 __builtin_memset( &TMP$5364$1, 0, 24ll );
 FBSTRING* vr$118 = fb_StrConcat( &TMP$5364$1, (void*)vr$115, -1ll, (void*)" C:", 4ll );
 __builtin_memset( &TMP$5365$1, 0, 24ll );
 FBSTRING* vr$121 = fb_StrConcat( &TMP$5365$1, (void*)vr$118, -1ll, (void*)vr$4, -1ll );
 fb_StrAssign( (void*)&fb$result$1, -1ll, (void*)vr$121, -1ll, 0 );
 label$12036:;
 FBSTRING* vr$124 = fb_StrAllocTempResult( (FBSTRING*)&fb$result$1 );
 return vr$124;
}

double _ZN7CPU65104TICKEd( struct $7CPU6510* THIS$1, double FLG$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$12037:;
 uint8 TICKS$1;
 TICKS$1 = *(uint8*)NIBBLES$;
 FBSTRING MSG$1;
 FBSTRING* vr$2 = fb_CHR( 1, (int64)*(uint8*)NIBBLES$ );
 fb_StrInit( (void*)&MSG$1, -1ll, (void*)vr$2, -1ll, 0 );
 static struct $5MULTI V$1;
 uint8 vr$9 = _ZN12SYSTEM_BUS_T9READUBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)THIS$1 + 8ll), (double)*(uint16*)((uint8*)THIS$1 + 4ll) );
 __builtin_memcpy( (struct $6OPCODE*)((uint8*)THIS$1 + 16ll), (struct $6OPCODE*)((uint8*)((uint8*)THIS$1 + ((int64)vr$9 * 56ll)) + 72ll), 56 );
 *(double*)((uint8*)THIS$1 + 56ll) = (double)*(uint8*)NIBBLES$;
 TICKS$1 = (uint8)((int64)TICKS$1 + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 *(uint16*)((uint8*)THIS$1 + 4ll) = (uint16)((int64)*(uint16*)((uint8*)THIS$1 + 4ll) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 {
  uint64 TMP$5366$2;
  TMP$5366$2 = *(uint64*)((uint8*)THIS$1 + 32ll);
  goto label$12040;
  label$12041:;
  {
  }
  goto label$12039;
  label$12042:;
  {
   (*(tmp$1793*)((uint8*)THIS$1 + 64ll))( THIS$1 );
  }
  goto label$12039;
  label$12043:;
  {
   double vr$28 = _ZN7CPU65107ADR_IMMEv( THIS$1 );
   *(uint16*)((uint8*)THIS$1 + 56ll) = (uint16)((int32)__builtin_nearbyint( vr$28 ));
   (*(tmp$1793*)((uint8*)THIS$1 + 64ll))( THIS$1 );
  }
  goto label$12039;
  label$12044:;
  {
   double vr$32 = _ZN7CPU65107ADR_ABSEv( THIS$1 );
   *(uint16*)((uint8*)THIS$1 + 56ll) = (uint16)((int32)__builtin_nearbyint( vr$32 ));
   (*(tmp$1793*)((uint8*)THIS$1 + 64ll))( THIS$1 );
  }
  goto label$12039;
  label$12045:;
  {
   double vr$36 = _ZN7CPU65108ADR_ZEROEv( THIS$1 );
   *(uint16*)((uint8*)THIS$1 + 56ll) = (uint16)((int32)__builtin_nearbyint( vr$36 ));
   (*(tmp$1793*)((uint8*)THIS$1 + 64ll))( THIS$1 );
  }
  goto label$12039;
  label$12046:;
  {
   double vr$40 = _ZN7CPU65109ADR_ZEROXEv( THIS$1 );
   *(uint16*)((uint8*)THIS$1 + 56ll) = (uint16)((int32)__builtin_nearbyint( vr$40 ));
   (*(tmp$1793*)((uint8*)THIS$1 + 64ll))( THIS$1 );
  }
  goto label$12039;
  label$12047:;
  {
   double vr$44 = _ZN7CPU65109ADR_ZEROYEv( THIS$1 );
   *(uint16*)((uint8*)THIS$1 + 56ll) = (uint16)((int32)__builtin_nearbyint( vr$44 ));
   (*(tmp$1793*)((uint8*)THIS$1 + 64ll))( THIS$1 );
  }
  goto label$12039;
  label$12048:;
  {
   double vr$48 = _ZN7CPU65108ADR_ABSXEv( THIS$1 );
   *(uint16*)((uint8*)THIS$1 + 56ll) = (uint16)((int32)__builtin_nearbyint( vr$48 ));
   (*(tmp$1793*)((uint8*)THIS$1 + 64ll))( THIS$1 );
  }
  goto label$12039;
  label$12049:;
  {
   double vr$52 = _ZN7CPU65108ADR_ABSYEv( THIS$1 );
   *(uint16*)((uint8*)THIS$1 + 56ll) = (uint16)((int32)__builtin_nearbyint( vr$52 ));
   (*(tmp$1793*)((uint8*)THIS$1 + 64ll))( THIS$1 );
  }
  goto label$12039;
  label$12050:;
  {
   double vr$56 = _ZN7CPU65107ADR_RELEv( THIS$1 );
   *(uint16*)((uint8*)THIS$1 + 56ll) = (uint16)((int32)__builtin_nearbyint( vr$56 ));
   (*(tmp$1793*)((uint8*)THIS$1 + 64ll))( THIS$1 );
  }
  goto label$12039;
  label$12051:;
  {
   double vr$60 = _ZN7CPU65108ADR_INDXEv( THIS$1 );
   *(uint16*)((uint8*)THIS$1 + 56ll) = (uint16)((int32)__builtin_nearbyint( vr$60 ));
   (*(tmp$1793*)((uint8*)THIS$1 + 64ll))( THIS$1 );
  }
  goto label$12039;
  label$12052:;
  {
   double vr$64 = _ZN7CPU65108ADR_INDYEv( THIS$1 );
   *(uint16*)((uint8*)THIS$1 + 56ll) = (uint16)((int32)__builtin_nearbyint( vr$64 ));
   (*(tmp$1793*)((uint8*)THIS$1 + 64ll))( THIS$1 );
  }
  goto label$12039;
  label$12053:;
  {
   double vr$68 = _ZN7CPU65107ADR_INDEv( THIS$1 );
   *(uint16*)((uint8*)THIS$1 + 56ll) = (uint16)((int32)__builtin_nearbyint( vr$68 ));
   (*(tmp$1793*)((uint8*)THIS$1 + 64ll))( THIS$1 );
  }
  goto label$12039;
  label$12040:;
  static const void* tmp$5367[13ll] = {
   &&label$12041,
   &&label$12042,
   &&label$12043,
   &&label$12044,
   &&label$12045,
   &&label$12046,
   &&label$12047,
   &&label$12048,
   &&label$12049,
   &&label$12050,
   &&label$12051,
   &&label$12052,
   &&label$12053,
  };
  if( TMP$5366$2 > 12ull ) goto label$12039;
  goto *tmp$5367[TMP$5366$2 - 0ull];
  label$12039:;
 }
 fb$result$1 = (double)*(uint8*)NIBBLES$;
 fb_StrDelete( (FBSTRING*)&MSG$1 );
 label$12038:;
 return fb$result$1;
}

double _ZN7CPU65107ADR_UNKEv( struct $7CPU6510* THIS$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$12054:;
 fb_Sleep( -1 );
 fb$result$1 = (double)*(uint8*)NIBBLES$;
 goto label$12055;
 label$12055:;
 return fb$result$1;
}

double _ZN7CPU65107ADR_IMMEv( struct $7CPU6510* THIS$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$12056:;
 fb$result$1 = (double)*(uint16*)((uint8*)THIS$1 + 4ll);
 *(uint16*)((uint8*)THIS$1 + 4ll) = (uint16)((int64)*(uint16*)((uint8*)THIS$1 + 4ll) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 label$12057:;
 return fb$result$1;
}

double _ZN7CPU65107ADR_RELEv( struct $7CPU6510* THIS$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$12058:;
 fb$result$1 = (double)*(uint16*)((uint8*)THIS$1 + 4ll);
 *(uint16*)((uint8*)THIS$1 + 4ll) = (uint16)((int64)*(uint16*)((uint8*)THIS$1 + 4ll) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 label$12059:;
 return fb$result$1;
}

double _ZN7CPU65107ADR_ABSEv( struct $7CPU6510* THIS$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$12060:;
 uint16 vr$4 = _ZN12SYSTEM_BUS_T10READUSHORTEd( *(struct $12SYSTEM_BUS_T**)((uint8*)THIS$1 + 8ll), (double)*(uint16*)((uint8*)THIS$1 + 4ll) );
 fb$result$1 = (double)vr$4;
 *(uint16*)((uint8*)THIS$1 + 4ll) = (uint16)((int64)*(uint16*)((uint8*)THIS$1 + 4ll) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll));
 label$12061:;
 return fb$result$1;
}

double _ZN7CPU65108ADR_ZEROEv( struct $7CPU6510* THIS$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$12062:;
 uint8 vr$4 = _ZN12SYSTEM_BUS_T9READUBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)THIS$1 + 8ll), (double)*(uint16*)((uint8*)THIS$1 + 4ll) );
 fb$result$1 = (double)((int64)vr$4 & (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)));
 *(uint16*)((uint8*)THIS$1 + 4ll) = (uint16)((int64)*(uint16*)((uint8*)THIS$1 + 4ll) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 label$12063:;
 return fb$result$1;
}

double _ZN7CPU65109ADR_ZEROXEv( struct $7CPU6510* THIS$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$12064:;
 uint8 vr$4 = _ZN12SYSTEM_BUS_T9READUBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)THIS$1 + 8ll), (double)*(uint16*)((uint8*)THIS$1 + 4ll) );
 fb$result$1 = (double)(((int64)vr$4 + (int64)*(uint8*)((uint8*)THIS$1 + 2ll)) & (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)));
 *(uint16*)((uint8*)THIS$1 + 4ll) = (uint16)((int64)*(uint16*)((uint8*)THIS$1 + 4ll) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 label$12065:;
 return fb$result$1;
}

double _ZN7CPU65109ADR_ZEROYEv( struct $7CPU6510* THIS$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$12066:;
 uint8 vr$4 = _ZN12SYSTEM_BUS_T9READUBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)THIS$1 + 8ll), (double)*(uint16*)((uint8*)THIS$1 + 4ll) );
 fb$result$1 = (double)(((int64)vr$4 + (int64)*(uint8*)((uint8*)THIS$1 + 3ll)) & (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)));
 *(uint16*)((uint8*)THIS$1 + 4ll) = (uint16)((int64)*(uint16*)((uint8*)THIS$1 + 4ll) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 label$12067:;
 return fb$result$1;
}

double _ZN7CPU65108ADR_ABSXEv( struct $7CPU6510* THIS$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$12068:;
 uint16 vr$4 = _ZN12SYSTEM_BUS_T10READUSHORTEd( *(struct $12SYSTEM_BUS_T**)((uint8*)THIS$1 + 8ll), (double)*(uint16*)((uint8*)THIS$1 + 4ll) );
 fb$result$1 = (double)((int64)vr$4 + (int64)*(uint8*)((uint8*)THIS$1 + 2ll));
 *(uint16*)((uint8*)THIS$1 + 4ll) = (uint16)((int64)*(uint16*)((uint8*)THIS$1 + 4ll) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll));
 label$12069:;
 return fb$result$1;
}

double _ZN7CPU65108ADR_ABSYEv( struct $7CPU6510* THIS$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$12070:;
 uint16 vr$4 = _ZN12SYSTEM_BUS_T10READUSHORTEd( *(struct $12SYSTEM_BUS_T**)((uint8*)THIS$1 + 8ll), (double)*(uint16*)((uint8*)THIS$1 + 4ll) );
 fb$result$1 = (double)((int64)vr$4 + (int64)*(uint8*)((uint8*)THIS$1 + 3ll));
 *(uint16*)((uint8*)THIS$1 + 4ll) = (uint16)((int64)*(uint16*)((uint8*)THIS$1 + 4ll) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll));
 label$12071:;
 return fb$result$1;
}

double _ZN7CPU65108ADR_INDXEv( struct $7CPU6510* THIS$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$12072:;
 static struct $5MULTI V$1;
 uint8 vr$4 = _ZN12SYSTEM_BUS_T9READUBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)THIS$1 + 8ll), (double)*(uint16*)((uint8*)THIS$1 + 4ll) );
 *(uint16*)&V$1 = (uint16)(((int64)vr$4 + (int64)*(uint8*)((uint8*)THIS$1 + 2ll)) & (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)));
 uint16 vr$18 = _ZN12SYSTEM_BUS_T10READUSHORTEd( *(struct $12SYSTEM_BUS_T**)((uint8*)THIS$1 + 8ll), (double)*(uint16*)&V$1 );
 *(uint16*)&V$1 = vr$18;
 *(uint16*)((uint8*)THIS$1 + 4ll) = (uint16)((int64)*(uint16*)((uint8*)THIS$1 + 4ll) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 fb$result$1 = (double)*(uint16*)&V$1;
 label$12073:;
 return fb$result$1;
}

double _ZN7CPU65108ADR_INDYEv( struct $7CPU6510* THIS$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$12074:;
 uint8 vr$4 = _ZN12SYSTEM_BUS_T9READUBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)THIS$1 + 8ll), (double)*(uint16*)((uint8*)THIS$1 + 4ll) );
 uint16 vr$7 = _ZN12SYSTEM_BUS_T10READUSHORTEd( *(struct $12SYSTEM_BUS_T**)((uint8*)THIS$1 + 8ll), (double)vr$4 );
 *(uint16*)&V$ = vr$7;
 *(uint16*)&V$ = (uint16)((int64)*(uint16*)&V$ + (int64)*(uint8*)((uint8*)THIS$1 + 3ll));
 fb$result$1 = (double)*(uint16*)&V$;
 *(uint16*)((uint8*)THIS$1 + 4ll) = (uint16)((int64)*(uint16*)((uint8*)THIS$1 + 4ll) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 label$12075:;
 return fb$result$1;
}

double _ZN7CPU65107ADR_INDEv( struct $7CPU6510* THIS$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$12076:;
 uint16 vr$4 = _ZN12SYSTEM_BUS_T10READUSHORTEd( *(struct $12SYSTEM_BUS_T**)((uint8*)THIS$1 + 8ll), (double)*(uint16*)((uint8*)THIS$1 + 4ll) );
 *(uint16*)&V$ = vr$4;
 uint16 vr$7 = _ZN12SYSTEM_BUS_T10READUSHORTEd( *(struct $12SYSTEM_BUS_T**)((uint8*)THIS$1 + 8ll), (double)*(uint16*)&V$ );
 *(uint16*)&V$ = vr$7;
 *(uint16*)((uint8*)THIS$1 + 4ll) = (uint16)((int64)*(uint16*)((uint8*)THIS$1 + 4ll) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll));
 fb$result$1 = (double)*(uint16*)&V$;
 label$12077:;
 return fb$result$1;
}

void _ZN7CPU65104PUSHEd( struct $7CPU6510* THIS$1, double B$1 )
{
 label$12078:;
 _ZN12SYSTEM_BUS_T10WRITEUBYTEEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)THIS$1 + 8ll), (double)*(uint16*)((uint8*)THIS$1 + 6ll), B$1 );
 *(uint8*)((uint8*)THIS$1 + 6ll) = (uint8)((int64)*(uint8*)((uint8*)THIS$1 + 6ll) - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 label$12079:;
}

double _ZN7CPU65104PULLEv( struct $7CPU6510* THIS$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$12080:;
 *(uint8*)((uint8*)THIS$1 + 6ll) = (uint8)((int64)*(uint8*)((uint8*)THIS$1 + 6ll) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 uint8 vr$10 = _ZN12SYSTEM_BUS_T9READUBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)THIS$1 + 8ll), (double)*(uint16*)((uint8*)THIS$1 + 6ll) );
 fb$result$1 = (double)vr$10;
 label$12081:;
 return fb$result$1;
}

void INS_UNK( struct $7CPU6510* CPU$1 )
{
 label$12082:;
 label$12083:;
}

void INS_ADC( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$5368$1;
 uint8 TMP$5369$1;
 uint8 TMP$5370$1;
 uint8 TMP$5371$1;
 label$12084:;
 uint8 UB$1;
 UB$1 = *(uint8*)NIBBLES$;
 uint8 vr$3 = _ZN12SYSTEM_BUS_T9READUBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll) );
 UB$1 = vr$3;
 *(uint16*)&V$ = (uint16)((int64)*(uint8*)((uint8*)CPU$1 + 1ll) + (int64)UB$1);
 if( ((uint64)(int64)*(uint8*)CPU$1 & 1ull) != (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$12087;
 {
  *(uint16*)&V$ = (uint16)((int64)*(uint16*)&V$ + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
  label$12087:;
 }
 if( ((~((int64)*(uint8*)((uint8*)CPU$1 + 1ll) ^ (int64)UB$1) & ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) & (((int64)*(uint8*)((uint8*)CPU$1 + 1ll) ^ (int64)*(uint8*)&V$) & ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)))) == 0ll ) goto label$12088;
 TMP$5368$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12092;
 label$12088:;
 TMP$5368$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 label$12092:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551551ull) | (((uint64)TMP$5368$1 & 1ull) << (6ll & 63ll)));
 *(uint8*)((uint8*)CPU$1 + 1ll) = *(uint8*)&V$;
 if( (int64)*(uint16*)&V$ <= (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$12089;
 TMP$5369$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12093;
 label$12089:;
 TMP$5369$1 = *(uint8*)NIBBLES$;
 label$12093:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551614ull) | ((uint64)TMP$5369$1 & 1ull));
 if( (int64)*(uint8*)&V$ != (int64)*(uint8*)NIBBLES$ ) goto label$12090;
 TMP$5370$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12094;
 label$12090:;
 TMP$5370$1 = *(uint8*)NIBBLES$;
 label$12094:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$5370$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)&V$ >= (int64)*(uint8*)NIBBLES$ ) goto label$12091;
 TMP$5371$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12095;
 label$12091:;
 TMP$5371$1 = *(uint8*)NIBBLES$;
 label$12095:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$5371$1 & 1ull) << (7ll & 63ll)));
 label$12085:;
}

void INS_AND( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$5372$1;
 uint8 TMP$5373$1;
 label$12096:;
 uint8 vr$5 = _ZN12SYSTEM_BUS_T9READUBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll) );
 *(uint8*)((uint8*)CPU$1 + 1ll) = (uint8)((int64)*(uint8*)((uint8*)CPU$1 + 1ll) & (int64)vr$5);
 if( (int64)*(uint8*)((uint8*)CPU$1 + 1ll) != (int64)*(uint8*)NIBBLES$ ) goto label$12098;
 TMP$5372$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12100;
 label$12098:;
 TMP$5372$1 = *(uint8*)NIBBLES$;
 label$12100:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$5372$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)((uint8*)CPU$1 + 1ll) >= (int64)*(uint8*)NIBBLES$ ) goto label$12099;
 TMP$5373$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12101;
 label$12099:;
 TMP$5373$1 = *(uint8*)NIBBLES$;
 label$12101:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$5373$1 & 1ull) << (7ll & 63ll)));
 label$12097:;
}

void INS_ASL( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$5374$1;
 uint8 TMP$5375$1;
 uint8 TMP$5376$1;
 label$12102:;
 uint8 vr$3 = _ZN12SYSTEM_BUS_T9READUBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll) );
 *(uint8*)&V$ = vr$3;
 if( ((int64)*(uint8*)&V$ & ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) == 0ll ) goto label$12104;
 TMP$5374$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12107;
 label$12104:;
 TMP$5374$1 = *(uint8*)NIBBLES$;
 label$12107:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551614ull) | ((uint64)TMP$5374$1 & 1ull));
 *(uint8*)&V$ = (uint8)((int64)*(uint8*)&V$ << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) & 63ll));
 _ZN12SYSTEM_BUS_T10WRITEUBYTEEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll), (double)*(uint8*)&V$ );
 if( (int64)*(uint8*)&V$ != (int64)*(uint8*)NIBBLES$ ) goto label$12105;
 TMP$5375$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12108;
 label$12105:;
 TMP$5375$1 = *(uint8*)NIBBLES$;
 label$12108:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$5375$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)&V$ >= (int64)*(uint8*)NIBBLES$ ) goto label$12106;
 TMP$5376$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12109;
 label$12106:;
 TMP$5376$1 = *(uint8*)NIBBLES$;
 label$12109:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$5376$1 & 1ull) << (7ll & 63ll)));
 label$12103:;
}

void INS_ASLA( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$5377$1;
 uint8 TMP$5378$1;
 uint8 TMP$5379$1;
 label$12110:;
 if( ((int64)*(uint8*)((uint8*)CPU$1 + 1ll) & ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) == 0ll ) goto label$12112;
 TMP$5377$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12115;
 label$12112:;
 TMP$5377$1 = *(uint8*)NIBBLES$;
 label$12115:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551614ull) | ((uint64)TMP$5377$1 & 1ull));
 *(uint8*)((uint8*)CPU$1 + 1ll) = (uint8)((int64)*(uint8*)((uint8*)CPU$1 + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) & 63ll));
 if( (int64)*(uint8*)((uint8*)CPU$1 + 1ll) != (int64)*(uint8*)NIBBLES$ ) goto label$12113;
 TMP$5378$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12116;
 label$12113:;
 TMP$5378$1 = *(uint8*)NIBBLES$;
 label$12116:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$5378$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)((uint8*)CPU$1 + 1ll) >= (int64)*(uint8*)NIBBLES$ ) goto label$12114;
 TMP$5379$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12117;
 label$12114:;
 TMP$5379$1 = *(uint8*)NIBBLES$;
 label$12117:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$5379$1 & 1ull) << (7ll & 63ll)));
 label$12111:;
}

void INS_BCC( struct $7CPU6510* CPU$1 )
{
 label$12118:;
 if( ((uint64)(int64)*(uint8*)CPU$1 & 1ull) != (uint64)(int64)*(uint8*)NIBBLES$ ) goto label$12121;
 {
  *(uint16*)&V$ = *(uint16*)((uint8*)CPU$1 + 4ll);
  *(int16*)&V$ = (int16)((int64)*(int16*)&V$ - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
  int8 vr$12 = _ZN12SYSTEM_BUS_T8READBYTEEt( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), *(uint16*)((uint8*)CPU$1 + 56ll) );
  *(int16*)&V$ = (int16)(((int64)*(int16*)&V$ + (int64)vr$12) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
  *(uint16*)((uint8*)CPU$1 + 4ll) = *(uint16*)&V$;
 }
 label$12121:;
 label$12120:;
 label$12119:;
}

void INS_BCS( struct $7CPU6510* CPU$1 )
{
 label$12122:;
 if( ((uint64)(int64)*(uint8*)CPU$1 & 1ull) == 0ull ) goto label$12125;
 {
  *(uint16*)&V$ = *(uint16*)((uint8*)CPU$1 + 4ll);
  *(int16*)&V$ = (int16)((int64)*(int16*)&V$ - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
  int8 vr$11 = _ZN12SYSTEM_BUS_T8READBYTEEt( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), *(uint16*)((uint8*)CPU$1 + 56ll) );
  *(int16*)&V$ = (int16)(((int64)*(int16*)&V$ + (int64)vr$11) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
  *(uint16*)((uint8*)CPU$1 + 4ll) = *(uint16*)&V$;
 }
 label$12125:;
 label$12124:;
 label$12123:;
}

void INS_BEQ( struct $7CPU6510* CPU$1 )
{
 label$12126:;
 if( ((uint64)((int64)*(uint8*)CPU$1 >> (1ll & 63ll)) & 1ull) != (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$12129;
 {
  *(uint16*)&V$ = *(uint16*)((uint8*)CPU$1 + 4ll);
  *(int16*)&V$ = (int16)((int64)*(int16*)&V$ - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
  int8 vr$13 = _ZN12SYSTEM_BUS_T8READBYTEEt( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), *(uint16*)((uint8*)CPU$1 + 56ll) );
  *(int16*)&V$ = (int16)(((int64)*(int16*)&V$ + (int64)vr$13) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
  *(uint16*)((uint8*)CPU$1 + 4ll) = *(uint16*)&V$;
 }
 label$12129:;
 label$12128:;
 label$12127:;
}

void INS_BIT( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$5380$1;
 uint8 TMP$5381$1;
 uint8 TMP$5382$1;
 label$12130:;
 static int8 B$1;
 int8 vr$2 = _ZN12SYSTEM_BUS_T8READBYTEEt( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), *(uint16*)((uint8*)CPU$1 + 56ll) );
 B$1 = vr$2;
 if( ((int64)B$1 & ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) == 0ll ) goto label$12132;
 TMP$5380$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12135;
 label$12132:;
 TMP$5380$1 = *(uint8*)NIBBLES$;
 label$12135:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$5380$1 & 1ull) << (7ll & 63ll)));
 if( ((int64)B$1 & ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) == 0ll ) goto label$12133;
 TMP$5381$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12136;
 label$12133:;
 TMP$5381$1 = *(uint8*)NIBBLES$;
 label$12136:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551551ull) | (((uint64)TMP$5381$1 & 1ull) << (6ll & 63ll)));
 if( (int64)*(uint8*)NIBBLES$ != ((int64)B$1 & (int64)*(int8*)((uint8*)CPU$1 + 2ll)) ) goto label$12134;
 TMP$5382$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12137;
 label$12134:;
 TMP$5382$1 = *(uint8*)NIBBLES$;
 label$12137:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$5382$1 & 1ull) << (1ll & 63ll)));
 label$12131:;
}

void INS_BMI( struct $7CPU6510* CPU$1 )
{
 label$12138:;
 if( ((uint64)((int64)*(uint8*)CPU$1 >> (7ll & 63ll)) & 1ull) == 0ull ) goto label$12141;
 {
  *(uint16*)&V$ = *(uint16*)((uint8*)CPU$1 + 4ll);
  *(int16*)&V$ = (int16)((int64)*(int16*)&V$ - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
  int8 vr$12 = _ZN12SYSTEM_BUS_T8READBYTEEt( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), *(uint16*)((uint8*)CPU$1 + 56ll) );
  *(int16*)&V$ = (int16)(((int64)*(int16*)&V$ + (int64)vr$12) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
  *(uint16*)((uint8*)CPU$1 + 4ll) = *(uint16*)&V$;
 }
 label$12141:;
 label$12140:;
 label$12139:;
}

void INS_BNE( struct $7CPU6510* CPU$1 )
{
 label$12142:;
 if( ((uint64)((int64)*(uint8*)CPU$1 >> (1ll & 63ll)) & 1ull) != (uint64)(int64)*(uint8*)NIBBLES$ ) goto label$12145;
 {
  *(uint16*)&V$ = *(uint16*)((uint8*)CPU$1 + 4ll);
  *(int16*)&V$ = (int16)((int64)*(int16*)&V$ - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
  int8 vr$13 = _ZN12SYSTEM_BUS_T8READBYTEEt( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), *(uint16*)((uint8*)CPU$1 + 56ll) );
  *(int16*)&V$ = (int16)(((int64)*(int16*)&V$ + (int64)vr$13) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
  *(uint16*)((uint8*)CPU$1 + 4ll) = *(uint16*)&V$;
 }
 label$12145:;
 label$12144:;
 label$12143:;
}

void INS_BPL( struct $7CPU6510* CPU$1 )
{
 label$12146:;
 if( ((uint64)((int64)*(uint8*)CPU$1 >> (7ll & 63ll)) & 1ull) != 0ull ) goto label$12149;
 {
  *(uint16*)&V$ = *(uint16*)((uint8*)CPU$1 + 4ll);
  *(int16*)&V$ = (int16)((int64)*(int16*)&V$ - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
  int8 vr$12 = _ZN12SYSTEM_BUS_T8READBYTEEt( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), *(uint16*)((uint8*)CPU$1 + 56ll) );
  *(int16*)&V$ = (int16)(((int64)*(int16*)&V$ + (int64)vr$12) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
  *(uint16*)((uint8*)CPU$1 + 4ll) = *(uint16*)&V$;
 }
 label$12149:;
 label$12148:;
 label$12147:;
}

void INS_BRK( struct $7CPU6510* CPU$1 )
{
 label$12150:;
 *(uint16*)((uint8*)CPU$1 + 4ll) = (uint16)((int64)*(uint16*)((uint8*)CPU$1 + 4ll) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 _ZN7CPU65104PUSHEd( CPU$1, (double)*(uint8*)((uint8*)CPU$1 + 5ll) );
 _ZN7CPU65104PUSHEd( CPU$1, (double)*(uint8*)((uint8*)CPU$1 + 4ll) );
 _ZN7CPU65104PUSHEd( CPU$1, (double)*(uint8*)CPU$1 );
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551599ull) | (((uint64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) & 1ull) << (4ll & 63ll)));
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551611ull) | (((uint64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) & 1ull) << (2ll & 63ll)));
 uint16 vr$29 = _ZN12SYSTEM_BUS_T10READUSHORTEd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), 0x1.FFFCp+15 );
 *(uint16*)((uint8*)CPU$1 + 4ll) = vr$29;
 label$12151:;
}

void INS_BVC( struct $7CPU6510* CPU$1 )
{
 label$12152:;
 if( ((uint64)((int64)*(uint8*)CPU$1 >> (6ll & 63ll)) & 1ull) != (uint64)(int64)*(uint8*)NIBBLES$ ) goto label$12155;
 {
  *(uint16*)&V$ = *(uint16*)((uint8*)CPU$1 + 4ll);
  *(int16*)&V$ = (int16)((int64)*(int16*)&V$ - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
  int8 vr$13 = _ZN12SYSTEM_BUS_T8READBYTEEt( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), *(uint16*)((uint8*)CPU$1 + 56ll) );
  *(int16*)&V$ = (int16)(((int64)*(int16*)&V$ + (int64)vr$13) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
  *(uint16*)((uint8*)CPU$1 + 4ll) = *(uint16*)&V$;
 }
 label$12155:;
 label$12154:;
 label$12153:;
}

void INS_BVS( struct $7CPU6510* CPU$1 )
{
 label$12156:;
 if( ((uint64)((int64)*(uint8*)CPU$1 >> (6ll & 63ll)) & 1ull) == 0ull ) goto label$12159;
 {
  *(uint16*)&V$ = *(uint16*)((uint8*)CPU$1 + 4ll);
  *(int16*)&V$ = (int16)((int64)*(int16*)&V$ - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
  int8 vr$12 = _ZN12SYSTEM_BUS_T8READBYTEEt( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), *(uint16*)((uint8*)CPU$1 + 56ll) );
  *(int16*)&V$ = (int16)(((int64)*(int16*)&V$ + (int64)vr$12) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
  *(uint16*)((uint8*)CPU$1 + 4ll) = *(uint16*)&V$;
 }
 label$12159:;
 label$12158:;
 label$12157:;
}

void INS_CLC( struct $7CPU6510* CPU$1 )
{
 label$12160:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551614ull) | ((uint64)*(uint8*)NIBBLES$ & 1ull));
 label$12161:;
}

void INS_CLD( struct $7CPU6510* CPU$1 )
{
 label$12162:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551607ull) | (((uint64)*(uint8*)NIBBLES$ & 1ull) << (3ll & 63ll)));
 label$12163:;
}

void INS_CLI( struct $7CPU6510* CPU$1 )
{
 label$12164:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551611ull) | (((uint64)*(uint8*)NIBBLES$ & 1ull) << (2ll & 63ll)));
 label$12165:;
}

void INS_CLV( struct $7CPU6510* CPU$1 )
{
 label$12166:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551551ull) | (((uint64)*(uint8*)NIBBLES$ & 1ull) << (6ll & 63ll)));
 label$12167:;
}

void INS_CMP( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$5383$1;
 uint8 TMP$5384$1;
 uint8 TMP$5385$1;
 label$12168:;
 uint8 vr$5 = _ZN12SYSTEM_BUS_T9READUBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll) );
 *(uint16*)&V$ = (uint16)((int64)*(uint8*)((uint8*)CPU$1 + 1ll) - (int64)vr$5);
 if( (int64)*(uint16*)&V$ > (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$12170;
 TMP$5383$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12173;
 label$12170:;
 TMP$5383$1 = *(uint8*)NIBBLES$;
 label$12173:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551614ull) | ((uint64)TMP$5383$1 & 1ull));
 if( (int64)*(uint8*)&V$ != (int64)*(uint8*)NIBBLES$ ) goto label$12171;
 TMP$5384$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12174;
 label$12171:;
 TMP$5384$1 = *(uint8*)NIBBLES$;
 label$12174:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$5384$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)&V$ >= (int64)*(uint8*)NIBBLES$ ) goto label$12172;
 TMP$5385$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12175;
 label$12172:;
 TMP$5385$1 = *(uint8*)NIBBLES$;
 label$12175:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$5385$1 & 1ull) << (7ll & 63ll)));
 label$12169:;
}

void INS_CPX( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$5386$1;
 uint8 TMP$5387$1;
 uint8 TMP$5388$1;
 label$12176:;
 uint8 vr$5 = _ZN12SYSTEM_BUS_T9READUBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll) );
 *(uint16*)&V$ = (uint16)((int64)*(uint8*)((uint8*)CPU$1 + 2ll) - (int64)vr$5);
 if( (int64)*(uint16*)&V$ > (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$12178;
 TMP$5386$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12181;
 label$12178:;
 TMP$5386$1 = *(uint8*)NIBBLES$;
 label$12181:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551614ull) | ((uint64)TMP$5386$1 & 1ull));
 if( (int64)*(uint8*)&V$ != (int64)*(uint8*)NIBBLES$ ) goto label$12179;
 TMP$5387$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12182;
 label$12179:;
 TMP$5387$1 = *(uint8*)NIBBLES$;
 label$12182:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$5387$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)&V$ >= (int64)*(uint8*)NIBBLES$ ) goto label$12180;
 TMP$5388$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12183;
 label$12180:;
 TMP$5388$1 = *(uint8*)NIBBLES$;
 label$12183:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$5388$1 & 1ull) << (7ll & 63ll)));
 label$12177:;
}

void INS_CPY( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$5389$1;
 uint8 TMP$5390$1;
 uint8 TMP$5391$1;
 label$12184:;
 uint8 vr$5 = _ZN12SYSTEM_BUS_T9READUBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll) );
 *(uint16*)&V$ = (uint16)((int64)*(uint8*)((uint8*)CPU$1 + 3ll) - (int64)vr$5);
 if( (int64)*(uint16*)&V$ > (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$12186;
 TMP$5389$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12189;
 label$12186:;
 TMP$5389$1 = *(uint8*)NIBBLES$;
 label$12189:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551614ull) | ((uint64)TMP$5389$1 & 1ull));
 if( (int64)*(uint8*)&V$ != (int64)*(uint8*)NIBBLES$ ) goto label$12187;
 TMP$5390$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12190;
 label$12187:;
 TMP$5390$1 = *(uint8*)NIBBLES$;
 label$12190:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$5390$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)&V$ >= (int64)*(uint8*)NIBBLES$ ) goto label$12188;
 TMP$5391$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12191;
 label$12188:;
 TMP$5391$1 = *(uint8*)NIBBLES$;
 label$12191:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$5391$1 & 1ull) << (7ll & 63ll)));
 label$12185:;
}

void INS_DEC( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$5392$1;
 uint8 TMP$5393$1;
 label$12192:;
 uint8 vr$3 = _ZN12SYSTEM_BUS_T9READUBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll) );
 *(uint8*)&V$ = vr$3;
 *(int8*)&V$ = (int8)((int64)*(int8*)&V$ - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 if( (int64)*(int8*)&V$ != (int64)*(uint8*)NIBBLES$ ) goto label$12194;
 TMP$5392$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12196;
 label$12194:;
 TMP$5392$1 = *(uint8*)NIBBLES$;
 label$12196:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$5392$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)&V$ >= (int64)*(uint8*)NIBBLES$ ) goto label$12195;
 TMP$5393$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12197;
 label$12195:;
 TMP$5393$1 = *(uint8*)NIBBLES$;
 label$12197:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$5393$1 & 1ull) << (7ll & 63ll)));
 _ZN12SYSTEM_BUS_T10WRITEUBYTEEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll), (double)*(uint8*)&V$ );
 label$12193:;
}

void INS_DEX( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$5394$1;
 uint8 TMP$5395$1;
 label$12198:;
 *(int8*)((uint8*)CPU$1 + 2ll) = (int8)((int32)__builtin_nearbyint( (double)(int64)*(int8*)((uint8*)CPU$1 + 2ll) + -0x1.p+0 ));
 if( (int64)*(uint8*)((uint8*)CPU$1 + 2ll) != (int64)*(uint8*)NIBBLES$ ) goto label$12200;
 TMP$5394$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12202;
 label$12200:;
 TMP$5394$1 = *(uint8*)NIBBLES$;
 label$12202:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$5394$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)((uint8*)CPU$1 + 2ll) >= (int64)*(uint8*)NIBBLES$ ) goto label$12201;
 TMP$5395$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12203;
 label$12201:;
 TMP$5395$1 = *(uint8*)NIBBLES$;
 label$12203:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$5395$1 & 1ull) << (7ll & 63ll)));
 label$12199:;
}

void INS_DEY( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$5396$1;
 uint8 TMP$5397$1;
 label$12204:;
 *(int8*)((uint8*)CPU$1 + 3ll) = (int8)((int64)*(int8*)((uint8*)CPU$1 + 3ll) - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 if( (int64)*(uint8*)((uint8*)CPU$1 + 3ll) != (int64)*(uint8*)NIBBLES$ ) goto label$12206;
 TMP$5396$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12208;
 label$12206:;
 TMP$5396$1 = *(uint8*)NIBBLES$;
 label$12208:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$5396$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)((uint8*)CPU$1 + 3ll) >= (int64)*(uint8*)NIBBLES$ ) goto label$12207;
 TMP$5397$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12209;
 label$12207:;
 TMP$5397$1 = *(uint8*)NIBBLES$;
 label$12209:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$5397$1 & 1ull) << (7ll & 63ll)));
 label$12205:;
}

void INS_EOR( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$5398$1;
 uint8 TMP$5399$1;
 label$12210:;
 uint8 vr$5 = _ZN12SYSTEM_BUS_T9READUBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll) );
 *(uint8*)((uint8*)CPU$1 + 1ll) = (uint8)((int64)*(uint8*)((uint8*)CPU$1 + 1ll) ^ (int64)vr$5);
 if( (int64)*(uint8*)((uint8*)CPU$1 + 1ll) != (int64)*(uint8*)NIBBLES$ ) goto label$12212;
 TMP$5398$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12214;
 label$12212:;
 TMP$5398$1 = *(uint8*)NIBBLES$;
 label$12214:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$5398$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)((uint8*)CPU$1 + 1ll) >= (int64)*(uint8*)NIBBLES$ ) goto label$12213;
 TMP$5399$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12215;
 label$12213:;
 TMP$5399$1 = *(uint8*)NIBBLES$;
 label$12215:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$5399$1 & 1ull) << (7ll & 63ll)));
 label$12211:;
}

void INS_INC( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$5400$1;
 uint8 TMP$5401$1;
 label$12216:;
 uint8 vr$3 = _ZN12SYSTEM_BUS_T9READUBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll) );
 *(uint8*)&V$ = vr$3;
 *(int16*)&V$ = (int16)((int64)*(int16*)&V$ + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 _ZN12SYSTEM_BUS_T9WRITEBYTEEtt( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), *(uint16*)((uint8*)CPU$1 + 56ll), (uint16)*(uint8*)&V$ );
 if( (int64)*(uint8*)&V$ != (int64)*(uint8*)NIBBLES$ ) goto label$12218;
 TMP$5400$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12220;
 label$12218:;
 TMP$5400$1 = *(uint8*)NIBBLES$;
 label$12220:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$5400$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)&V$ >= (int64)*(uint8*)NIBBLES$ ) goto label$12219;
 TMP$5401$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12221;
 label$12219:;
 TMP$5401$1 = *(uint8*)NIBBLES$;
 label$12221:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$5401$1 & 1ull) << (7ll & 63ll)));
 label$12217:;
}

void INS_INX( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$5402$1;
 uint8 TMP$5403$1;
 label$12222:;
 *(uint8*)&V$ = *(uint8*)((uint8*)CPU$1 + 2ll);
 *(int16*)&V$ = (int16)((int64)*(int16*)&V$ + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 *(uint8*)((uint8*)CPU$1 + 2ll) = *(uint8*)&V$;
 if( (int64)*(uint8*)&V$ != (int64)*(uint8*)NIBBLES$ ) goto label$12224;
 TMP$5402$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12226;
 label$12224:;
 TMP$5402$1 = *(uint8*)NIBBLES$;
 label$12226:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$5402$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)&V$ >= (int64)*(uint8*)NIBBLES$ ) goto label$12225;
 TMP$5403$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12227;
 label$12225:;
 TMP$5403$1 = *(uint8*)NIBBLES$;
 label$12227:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$5403$1 & 1ull) << (7ll & 63ll)));
 label$12223:;
}

void INS_INY( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$5404$1;
 uint8 TMP$5405$1;
 label$12228:;
 *(uint8*)&V$ = *(uint8*)((uint8*)CPU$1 + 3ll);
 *(int16*)&V$ = (int16)((int64)*(int16*)&V$ + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 *(uint8*)((uint8*)CPU$1 + 3ll) = *(uint8*)&V$;
 if( (int64)*(uint8*)&V$ != (int64)*(uint8*)NIBBLES$ ) goto label$12230;
 TMP$5404$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12232;
 label$12230:;
 TMP$5404$1 = *(uint8*)NIBBLES$;
 label$12232:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$5404$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)&V$ >= (int64)*(uint8*)NIBBLES$ ) goto label$12231;
 TMP$5405$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12233;
 label$12231:;
 TMP$5405$1 = *(uint8*)NIBBLES$;
 label$12233:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$5405$1 & 1ull) << (7ll & 63ll)));
 label$12229:;
}

void INS_JMP( struct $7CPU6510* CPU$1 )
{
 label$12234:;
 *(uint16*)((uint8*)CPU$1 + 4ll) = *(uint16*)((uint8*)CPU$1 + 56ll);
 label$12235:;
}

void INS_JSR( struct $7CPU6510* CPU$1 )
{
 label$12236:;
 *(uint16*)((uint8*)CPU$1 + 4ll) = (uint16)((int64)*(uint16*)((uint8*)CPU$1 + 4ll) - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 _ZN7CPU65104PUSHEd( CPU$1, (double)*(uint8*)((uint8*)CPU$1 + 5ll) );
 _ZN7CPU65104PUSHEd( CPU$1, (double)*(uint8*)((uint8*)CPU$1 + 4ll) );
 *(uint16*)((uint8*)CPU$1 + 4ll) = *(uint16*)((uint8*)CPU$1 + 56ll);
 label$12237:;
}

void INS_LDA( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$5406$1;
 uint8 TMP$5407$1;
 label$12238:;
 uint8 vr$3 = _ZN12SYSTEM_BUS_T9READUBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll) );
 *(uint8*)((uint8*)CPU$1 + 1ll) = vr$3;
 if( (int64)*(uint8*)((uint8*)CPU$1 + 1ll) != (int64)*(uint8*)NIBBLES$ ) goto label$12240;
 TMP$5406$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12242;
 label$12240:;
 TMP$5406$1 = *(uint8*)NIBBLES$;
 label$12242:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$5406$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)((uint8*)CPU$1 + 1ll) >= (int64)*(uint8*)NIBBLES$ ) goto label$12241;
 TMP$5407$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12243;
 label$12241:;
 TMP$5407$1 = *(uint8*)NIBBLES$;
 label$12243:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$5407$1 & 1ull) << (7ll & 63ll)));
 label$12239:;
}

void INS_LDX( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$5408$1;
 uint8 TMP$5409$1;
 label$12244:;
 uint8 vr$3 = _ZN12SYSTEM_BUS_T9READUBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll) );
 *(uint8*)((uint8*)CPU$1 + 2ll) = vr$3;
 if( (int64)*(uint8*)((uint8*)CPU$1 + 2ll) != (int64)*(uint8*)NIBBLES$ ) goto label$12246;
 TMP$5408$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12248;
 label$12246:;
 TMP$5408$1 = *(uint8*)NIBBLES$;
 label$12248:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$5408$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)((uint8*)CPU$1 + 2ll) >= (int64)*(uint8*)NIBBLES$ ) goto label$12247;
 TMP$5409$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12249;
 label$12247:;
 TMP$5409$1 = *(uint8*)NIBBLES$;
 label$12249:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$5409$1 & 1ull) << (7ll & 63ll)));
 label$12245:;
}

void INS_LDY( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$5410$1;
 uint8 TMP$5411$1;
 label$12250:;
 uint8 vr$3 = _ZN12SYSTEM_BUS_T9READUBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll) );
 *(uint8*)((uint8*)CPU$1 + 3ll) = vr$3;
 if( (int64)*(uint8*)((uint8*)CPU$1 + 3ll) != (int64)*(uint8*)NIBBLES$ ) goto label$12252;
 TMP$5410$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12254;
 label$12252:;
 TMP$5410$1 = *(uint8*)NIBBLES$;
 label$12254:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$5410$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)((uint8*)CPU$1 + 3ll) >= (int64)*(uint8*)NIBBLES$ ) goto label$12253;
 TMP$5411$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12255;
 label$12253:;
 TMP$5411$1 = *(uint8*)NIBBLES$;
 label$12255:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$5411$1 & 1ull) << (7ll & 63ll)));
 label$12251:;
}

void INS_LSR( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$5412$1;
 uint8 TMP$5413$1;
 uint8 TMP$5414$1;
 label$12256:;
 uint8 vr$3 = _ZN12SYSTEM_BUS_T9READUBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll) );
 *(uint8*)&V$ = vr$3;
 if( ((int64)*(uint8*)&V$ & (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) == 0ll ) goto label$12258;
 TMP$5412$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12261;
 label$12258:;
 TMP$5412$1 = *(uint8*)NIBBLES$;
 label$12261:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551614ull) | ((uint64)TMP$5412$1 & 1ull));
 *(uint8*)&V$ = (uint8)((int64)*(uint8*)&V$ >> ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) & 63ll));
 _ZN12SYSTEM_BUS_T10WRITEUBYTEEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll), (double)*(uint8*)&V$ );
 if( (int64)*(uint8*)&V$ != (int64)*(uint8*)NIBBLES$ ) goto label$12259;
 TMP$5413$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12262;
 label$12259:;
 TMP$5413$1 = *(uint8*)NIBBLES$;
 label$12262:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$5413$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)&V$ >= (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$12260;
 TMP$5414$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12263;
 label$12260:;
 TMP$5414$1 = *(uint8*)NIBBLES$;
 label$12263:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$5414$1 & 1ull) << (7ll & 63ll)));
 label$12257:;
}

void INS_LSRA( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$5415$1;
 uint8 TMP$5416$1;
 uint8 TMP$5417$1;
 label$12264:;
 if( ((int64)*(uint8*)((uint8*)CPU$1 + 1ll) & (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) == 0ll ) goto label$12266;
 TMP$5415$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12269;
 label$12266:;
 TMP$5415$1 = *(uint8*)NIBBLES$;
 label$12269:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551614ull) | ((uint64)TMP$5415$1 & 1ull));
 *(uint8*)((uint8*)CPU$1 + 1ll) = (uint8)((int64)*(uint8*)((uint8*)CPU$1 + 1ll) >> ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) & 63ll));
 if( (int64)*(uint8*)((uint8*)CPU$1 + 1ll) != (int64)*(uint8*)NIBBLES$ ) goto label$12267;
 TMP$5416$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12270;
 label$12267:;
 TMP$5416$1 = *(uint8*)NIBBLES$;
 label$12270:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$5416$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)((uint8*)CPU$1 + 1ll) >= (int64)*(uint8*)NIBBLES$ ) goto label$12268;
 TMP$5417$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12271;
 label$12268:;
 TMP$5417$1 = *(uint8*)NIBBLES$;
 label$12271:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$5417$1 & 1ull) << (7ll & 63ll)));
 label$12265:;
}

void INS_NOP( struct $7CPU6510* CPU$1 )
{
 label$12272:;
 label$12273:;
}

void INS_ORA( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$5418$1;
 uint8 TMP$5419$1;
 label$12274:;
 uint8 vr$5 = _ZN12SYSTEM_BUS_T9READUBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll) );
 *(uint8*)((uint8*)CPU$1 + 1ll) = (uint8)((int64)*(uint8*)((uint8*)CPU$1 + 1ll) | (int64)vr$5);
 if( (int64)*(uint8*)((uint8*)CPU$1 + 1ll) != (int64)*(uint8*)NIBBLES$ ) goto label$12276;
 TMP$5418$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12278;
 label$12276:;
 TMP$5418$1 = *(uint8*)NIBBLES$;
 label$12278:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$5418$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)((uint8*)CPU$1 + 1ll) >= (int64)*(uint8*)NIBBLES$ ) goto label$12277;
 TMP$5419$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12279;
 label$12277:;
 TMP$5419$1 = *(uint8*)NIBBLES$;
 label$12279:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$5419$1 & 1ull) << (7ll & 63ll)));
 label$12275:;
}

void INS_PHA( struct $7CPU6510* CPU$1 )
{
 label$12280:;
 _ZN7CPU65104PUSHEd( CPU$1, (double)*(uint8*)((uint8*)CPU$1 + 1ll) );
 label$12281:;
}

void INS_PHP( struct $7CPU6510* CPU$1 )
{
 label$12282:;
 _ZN7CPU65104PUSHEd( CPU$1, (double)*(uint8*)CPU$1 );
 label$12283:;
}

void INS_PLA( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$5420$1;
 uint8 TMP$5421$1;
 label$12284:;
 double vr$0 = _ZN7CPU65104PULLEv( CPU$1 );
 *(uint8*)((uint8*)CPU$1 + 1ll) = (uint8)((int32)__builtin_nearbyint( vr$0 ));
 if( (int64)*(uint8*)((uint8*)CPU$1 + 1ll) != (int64)*(uint8*)NIBBLES$ ) goto label$12286;
 TMP$5420$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12288;
 label$12286:;
 TMP$5420$1 = *(uint8*)NIBBLES$;
 label$12288:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$5420$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)((uint8*)CPU$1 + 1ll) >= (int64)*(uint8*)NIBBLES$ ) goto label$12287;
 TMP$5421$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12289;
 label$12287:;
 TMP$5421$1 = *(uint8*)NIBBLES$;
 label$12289:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$5421$1 & 1ull) << (7ll & 63ll)));
 label$12285:;
}

void INS_PLP( struct $7CPU6510* CPU$1 )
{
 label$12290:;
 double vr$0 = _ZN7CPU65104PULLEv( CPU$1 );
 *(uint8*)CPU$1 = (uint8)((int32)__builtin_nearbyint( vr$0 ));
 label$12291:;
}

void INS_ROL( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$5422$1;
 uint8 TMP$5423$1;
 uint8 TMP$5424$1;
 uint8 TMP$5425$1;
 label$12292:;
 uint8 vr$3 = _ZN12SYSTEM_BUS_T9READUBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll) );
 *(uint8*)&V$ = vr$3;
 if( ((uint64)(int64)*(uint8*)CPU$1 & 1ull) != (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$12294;
 TMP$5422$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12300;
 label$12294:;
 TMP$5422$1 = *(uint8*)NIBBLES$;
 label$12300:;
 CARY$ = (int64)TMP$5422$1;
 if( ((int64)*(uint8*)&V$ & ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) == 0ll ) goto label$12295;
 TMP$5423$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12301;
 label$12295:;
 TMP$5423$1 = *(uint8*)NIBBLES$;
 label$12301:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551614ull) | ((uint64)TMP$5423$1 & 1ull));
 *(uint8*)&V$ = (uint8)((int64)*(uint8*)&V$ << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) & 63ll));
 if( CARY$ == 0ll ) goto label$12297;
 {
  *(uint8*)&V$ = (uint8)((int64)*(uint8*)&V$ | (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
  label$12297:;
 }
 _ZN12SYSTEM_BUS_T10WRITEUBYTEEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll), (double)*(uint8*)&V$ );
 if( (int64)*(uint8*)&V$ != (int64)*(uint8*)NIBBLES$ ) goto label$12298;
 TMP$5424$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12302;
 label$12298:;
 TMP$5424$1 = *(uint8*)NIBBLES$;
 label$12302:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$5424$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)&V$ >= (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$12299;
 TMP$5425$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12303;
 label$12299:;
 TMP$5425$1 = *(uint8*)NIBBLES$;
 label$12303:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$5425$1 & 1ull) << (7ll & 63ll)));
 label$12293:;
}

void INS_ROLA( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$5426$1;
 uint8 TMP$5427$1;
 uint8 TMP$5428$1;
 uint8 TMP$5429$1;
 label$12304:;
 if( ((uint64)(int64)*(uint8*)CPU$1 & 1ull) != (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$12306;
 TMP$5426$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12312;
 label$12306:;
 TMP$5426$1 = *(uint8*)NIBBLES$;
 label$12312:;
 CARY$ = (int64)TMP$5426$1;
 if( ((int64)*(uint8*)((uint8*)CPU$1 + 1ll) & ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) == 0ll ) goto label$12307;
 TMP$5427$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12313;
 label$12307:;
 TMP$5427$1 = *(uint8*)NIBBLES$;
 label$12313:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551614ull) | ((uint64)TMP$5427$1 & 1ull));
 *(uint8*)((uint8*)CPU$1 + 1ll) = (uint8)((int64)*(uint8*)((uint8*)CPU$1 + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) & 63ll));
 if( CARY$ == 0ll ) goto label$12309;
 {
  *(uint8*)((uint8*)CPU$1 + 1ll) = (uint8)((int64)*(uint8*)((uint8*)CPU$1 + 1ll) | (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
  label$12309:;
 }
 if( (int64)*(uint8*)((uint8*)CPU$1 + 1ll) != (int64)*(uint8*)NIBBLES$ ) goto label$12310;
 TMP$5428$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12314;
 label$12310:;
 TMP$5428$1 = *(uint8*)NIBBLES$;
 label$12314:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$5428$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)((uint8*)CPU$1 + 1ll) >= (int64)*(uint8*)NIBBLES$ ) goto label$12311;
 TMP$5429$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12315;
 label$12311:;
 TMP$5429$1 = *(uint8*)NIBBLES$;
 label$12315:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$5429$1 & 1ull) << (7ll & 63ll)));
 label$12305:;
}

void INS_ROR( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$5430$1;
 uint8 TMP$5431$1;
 uint8 TMP$5432$1;
 uint8 TMP$5433$1;
 label$12316:;
 if( ((uint64)(int64)*(uint8*)CPU$1 & 1ull) != (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$12318;
 TMP$5430$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12324;
 label$12318:;
 TMP$5430$1 = *(uint8*)NIBBLES$;
 label$12324:;
 CARY$ = (int64)TMP$5430$1;
 uint8 vr$8 = _ZN12SYSTEM_BUS_T9READUBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll) );
 *(uint8*)&V$ = vr$8;
 if( ((int64)*(uint8*)&V$ & (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) == 0ll ) goto label$12319;
 TMP$5431$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12325;
 label$12319:;
 TMP$5431$1 = *(uint8*)NIBBLES$;
 label$12325:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551614ull) | ((uint64)TMP$5431$1 & 1ull));
 *(uint8*)&V$ = (uint8)((int64)*(uint8*)&V$ >> ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) & 63ll));
 if( CARY$ == 0ll ) goto label$12321;
 {
  *(uint8*)&V$ = (uint8)((int64)*(uint8*)&V$ | ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)));
  label$12321:;
 }
 _ZN12SYSTEM_BUS_T10WRITEUBYTEEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll), (double)*(uint8*)&V$ );
 if( (int64)*(uint8*)&V$ != (int64)*(uint8*)NIBBLES$ ) goto label$12322;
 TMP$5432$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12326;
 label$12322:;
 TMP$5432$1 = *(uint8*)NIBBLES$;
 label$12326:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$5432$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)&V$ >= (int64)*(uint8*)NIBBLES$ ) goto label$12323;
 TMP$5433$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12327;
 label$12323:;
 TMP$5433$1 = *(uint8*)NIBBLES$;
 label$12327:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$5433$1 & 1ull) << (7ll & 63ll)));
 label$12317:;
}

void INS_RORA( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$5434$1;
 uint8 TMP$5435$1;
 uint8 TMP$5436$1;
 uint8 TMP$5437$1;
 label$12328:;
 if( ((uint64)(int64)*(uint8*)CPU$1 & 1ull) != (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$12330;
 TMP$5434$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12336;
 label$12330:;
 TMP$5434$1 = *(uint8*)NIBBLES$;
 label$12336:;
 CARY$ = (int64)TMP$5434$1;
 if( ((int64)*(uint8*)((uint8*)CPU$1 + 1ll) & (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) == 0ll ) goto label$12331;
 TMP$5435$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12337;
 label$12331:;
 TMP$5435$1 = *(uint8*)NIBBLES$;
 label$12337:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551614ull) | ((uint64)TMP$5435$1 & 1ull));
 *(uint8*)((uint8*)CPU$1 + 1ll) = (uint8)((int64)*(uint8*)((uint8*)CPU$1 + 1ll) >> ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) & 63ll));
 if( CARY$ == 0ll ) goto label$12333;
 {
  *(uint8*)((uint8*)CPU$1 + 1ll) = (uint8)((int64)*(uint8*)((uint8*)CPU$1 + 1ll) | ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)));
  label$12333:;
 }
 if( (int64)*(uint8*)((uint8*)CPU$1 + 1ll) != (int64)*(uint8*)NIBBLES$ ) goto label$12334;
 TMP$5436$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12338;
 label$12334:;
 TMP$5436$1 = *(uint8*)NIBBLES$;
 label$12338:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$5436$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)((uint8*)CPU$1 + 1ll) >= (int64)*(uint8*)NIBBLES$ ) goto label$12335;
 TMP$5437$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12339;
 label$12335:;
 TMP$5437$1 = *(uint8*)NIBBLES$;
 label$12339:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$5437$1 & 1ull) << (7ll & 63ll)));
 label$12329:;
}

void INS_RTI( struct $7CPU6510* CPU$1 )
{
 label$12340:;
 double vr$0 = _ZN7CPU65104PULLEv( CPU$1 );
 *(uint8*)CPU$1 = (uint8)((int32)__builtin_nearbyint( vr$0 ));
 double vr$3 = _ZN7CPU65104PULLEv( CPU$1 );
 *(uint8*)((uint8*)CPU$1 + 4ll) = (uint8)((int32)__builtin_nearbyint( vr$3 ));
 double vr$6 = _ZN7CPU65104PULLEv( CPU$1 );
 *(uint8*)((uint8*)CPU$1 + 5ll) = (uint8)((int32)__builtin_nearbyint( vr$6 ));
 *(uint16*)((uint8*)CPU$1 + 4ll) = (uint16)((int64)*(uint16*)((uint8*)CPU$1 + 4ll) + 1ll);
 label$12341:;
}

void INS_RTS( struct $7CPU6510* CPU$1 )
{
 label$12342:;
 double vr$0 = _ZN7CPU65104PULLEv( CPU$1 );
 *(uint8*)((uint8*)CPU$1 + 4ll) = (uint8)((int32)__builtin_nearbyint( vr$0 ));
 double vr$3 = _ZN7CPU65104PULLEv( CPU$1 );
 *(uint8*)((uint8*)CPU$1 + 5ll) = (uint8)((int32)__builtin_nearbyint( vr$3 ));
 *(uint16*)((uint8*)CPU$1 + 4ll) = (uint16)((int64)*(uint16*)((uint8*)CPU$1 + 4ll) + 1ll);
 label$12343:;
}

void INS_SBC( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$5438$1;
 uint8 TMP$5439$1;
 uint8 TMP$5440$1;
 uint8 TMP$5441$1;
 label$12344:;
 static struct $5MULTI B$1;
 uint8 vr$3 = _ZN12SYSTEM_BUS_T9READUBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll) );
 *(uint8*)&B$1 = vr$3;
 *(uint16*)&V$ = (uint16)((int64)*(uint8*)((uint8*)CPU$1 + 1ll) - (int64)*(uint8*)&B$1);
 if( ((uint64)(int64)*(uint8*)CPU$1 & 1ull) != (uint64)(int64)*(uint8*)NIBBLES$ ) goto label$12347;
 {
  *(int16*)&V$ = (int16)((int64)*(int16*)&V$ - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
  label$12347:;
 }
 if( ((((int64)*(uint8*)((uint8*)CPU$1 + 1ll) ^ (int64)*(uint8*)&B$1) & ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) & (((int64)*(uint8*)((uint8*)CPU$1 + 1ll) ^ (int64)*(uint8*)&V$) & ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)))) == 0ll ) goto label$12348;
 TMP$5438$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12352;
 label$12348:;
 TMP$5438$1 = *(uint8*)NIBBLES$;
 label$12352:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551551ull) | (((uint64)TMP$5438$1 & 1ull) << (6ll & 63ll)));
 *(uint8*)((uint8*)CPU$1 + 1ll) = *(uint8*)&V$;
 if( (int64)*(uint16*)&V$ > (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$12349;
 TMP$5439$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12353;
 label$12349:;
 TMP$5439$1 = *(uint8*)NIBBLES$;
 label$12353:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551614ull) | ((uint64)TMP$5439$1 & 1ull));
 if( (int64)*(uint8*)&V$ != (int64)*(uint8*)NIBBLES$ ) goto label$12350;
 TMP$5440$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12354;
 label$12350:;
 TMP$5440$1 = *(uint8*)NIBBLES$;
 label$12354:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$5440$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)&V$ >= (int64)*(uint8*)NIBBLES$ ) goto label$12351;
 TMP$5441$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12355;
 label$12351:;
 TMP$5441$1 = *(uint8*)NIBBLES$;
 label$12355:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$5441$1 & 1ull) << (7ll & 63ll)));
 label$12345:;
}

void INS_SEC( struct $7CPU6510* CPU$1 )
{
 label$12356:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551614ull) | ((uint64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) & 1ull));
 label$12357:;
}

void INS_SED( struct $7CPU6510* CPU$1 )
{
 label$12358:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551607ull) | (((uint64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) & 1ull) << (3ll & 63ll)));
 label$12359:;
}

void INS_SEI( struct $7CPU6510* CPU$1 )
{
 label$12360:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551611ull) | (((uint64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) & 1ull) << (2ll & 63ll)));
 label$12361:;
}

void INS_STA( struct $7CPU6510* CPU$1 )
{
 label$12362:;
 _ZN12SYSTEM_BUS_T10WRITEUBYTEEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll), (double)*(uint8*)((uint8*)CPU$1 + 1ll) );
 label$12363:;
}

void INS_STX( struct $7CPU6510* CPU$1 )
{
 label$12364:;
 _ZN12SYSTEM_BUS_T10WRITEUBYTEEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll), (double)*(uint8*)((uint8*)CPU$1 + 2ll) );
 label$12365:;
}

void INS_STY( struct $7CPU6510* CPU$1 )
{
 label$12366:;
 _ZN12SYSTEM_BUS_T10WRITEUBYTEEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll), (double)*(uint8*)((uint8*)CPU$1 + 3ll) );
 label$12367:;
}

void INS_TAX( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$5442$1;
 uint8 TMP$5443$1;
 label$12368:;
 *(uint8*)((uint8*)CPU$1 + 2ll) = *(uint8*)((uint8*)CPU$1 + 1ll);
 if( (int64)*(uint8*)((uint8*)CPU$1 + 2ll) != (int64)*(uint8*)NIBBLES$ ) goto label$12370;
 TMP$5442$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12372;
 label$12370:;
 TMP$5442$1 = *(uint8*)NIBBLES$;
 label$12372:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$5442$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)((uint8*)CPU$1 + 2ll) >= (int64)*(uint8*)NIBBLES$ ) goto label$12371;
 TMP$5443$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12373;
 label$12371:;
 TMP$5443$1 = *(uint8*)NIBBLES$;
 label$12373:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$5443$1 & 1ull) << (7ll & 63ll)));
 label$12369:;
}

void INS_TAY( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$5444$1;
 uint8 TMP$5445$1;
 label$12374:;
 *(uint8*)((uint8*)CPU$1 + 3ll) = *(uint8*)((uint8*)CPU$1 + 1ll);
 if( (int64)*(uint8*)((uint8*)CPU$1 + 3ll) != (int64)*(uint8*)NIBBLES$ ) goto label$12376;
 TMP$5444$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12378;
 label$12376:;
 TMP$5444$1 = *(uint8*)NIBBLES$;
 label$12378:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$5444$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)((uint8*)CPU$1 + 3ll) >= (int64)*(uint8*)NIBBLES$ ) goto label$12377;
 TMP$5445$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12379;
 label$12377:;
 TMP$5445$1 = *(uint8*)NIBBLES$;
 label$12379:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$5445$1 & 1ull) << (7ll & 63ll)));
 label$12375:;
}

void INS_TSX( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$5446$1;
 uint8 TMP$5447$1;
 label$12380:;
 *(uint8*)((uint8*)CPU$1 + 2ll) = *(uint8*)((uint8*)CPU$1 + 6ll);
 if( (int64)*(uint8*)((uint8*)CPU$1 + 2ll) != (int64)*(uint8*)NIBBLES$ ) goto label$12382;
 TMP$5446$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12384;
 label$12382:;
 TMP$5446$1 = *(uint8*)NIBBLES$;
 label$12384:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$5446$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)((uint8*)CPU$1 + 2ll) >= (int64)*(uint8*)NIBBLES$ ) goto label$12383;
 TMP$5447$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12385;
 label$12383:;
 TMP$5447$1 = *(uint8*)NIBBLES$;
 label$12385:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$5447$1 & 1ull) << (7ll & 63ll)));
 label$12381:;
}

void INS_TXA( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$5448$1;
 uint8 TMP$5449$1;
 label$12386:;
 *(uint8*)((uint8*)CPU$1 + 1ll) = *(uint8*)((uint8*)CPU$1 + 2ll);
 if( (int64)*(uint8*)((uint8*)CPU$1 + 1ll) != (int64)*(uint8*)NIBBLES$ ) goto label$12388;
 TMP$5448$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12390;
 label$12388:;
 TMP$5448$1 = *(uint8*)NIBBLES$;
 label$12390:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$5448$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)((uint8*)CPU$1 + 1ll) >= (int64)*(uint8*)NIBBLES$ ) goto label$12389;
 TMP$5449$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12391;
 label$12389:;
 TMP$5449$1 = *(uint8*)NIBBLES$;
 label$12391:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$5449$1 & 1ull) << (7ll & 63ll)));
 label$12387:;
}

void INS_TXS( struct $7CPU6510* CPU$1 )
{
 label$12392:;
 *(uint8*)((uint8*)CPU$1 + 6ll) = *(uint8*)((uint8*)CPU$1 + 2ll);
 label$12393:;
}

void INS_TYA( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$5450$1;
 uint8 TMP$5451$1;
 label$12394:;
 *(uint8*)((uint8*)CPU$1 + 1ll) = *(uint8*)((uint8*)CPU$1 + 3ll);
 if( (int64)*(uint8*)((uint8*)CPU$1 + 1ll) != (int64)*(uint8*)NIBBLES$ ) goto label$12396;
 TMP$5450$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12398;
 label$12396:;
 TMP$5450$1 = *(uint8*)NIBBLES$;
 label$12398:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$5450$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)((uint8*)CPU$1 + 1ll) >= (int64)*(uint8*)NIBBLES$ ) goto label$12397;
 TMP$5451$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12399;
 label$12397:;
 TMP$5451$1 = *(uint8*)NIBBLES$;
 label$12399:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$5451$1 & 1ull) << (7ll & 63ll)));
 label$12395:;
}

void INS_R32( struct $7CPU6510* CPU$1 )
{
 label$12400:;
 double vr$3 = _ZN12SYSTEM_BUS_T6PEEK64Ed( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), (double)*(uint32*)((uint8*)CPU$1 + 56ll) );
 *(uint8*)((uint8*)CPU$1 + 1ll) = (uint8)((int32)__builtin_nearbyint( vr$3 ));
 label$12401:;
}

void INS_W32( struct $7CPU6510* CPU$1 )
{
 label$12402:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), (double)*(uint32*)((uint8*)CPU$1 + 56ll), (double)*(uint8*)((uint8*)CPU$1 + 1ll) );
 label$12403:;
}

void INS_R64( struct $7CPU6510* CPU$1 )
{
 label$12404:;
 double vr$3 = _ZN12SYSTEM_BUS_T6PEEK64Ed( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), (double)*(uint64*)((uint8*)CPU$1 + 56ll) );
 *(uint8*)((uint8*)CPU$1 + 1ll) = (uint8)((int32)__builtin_nearbyint( vr$3 ));
 label$12405:;
}

void INS_W64( struct $7CPU6510* CPU$1 )
{
 label$12406:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), (double)*(uint64*)((uint8*)CPU$1 + 56ll), (double)*(uint8*)((uint8*)CPU$1 + 1ll) );
 label$12407:;
}

int64 INTERRUPTSERVICE( struct $7CPU6510* CPU$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$13004:;
 static FBSTRING S$1;
 static int64 KEY$1;
 static int64 IRQTICKS$1;
 if( ((uint64)((int64)*(uint8*)CPU$1 >> (2ll & 63ll)) & 1ull) != (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$13007;
 {
  fb$result$1 = (int64)*(uint8*)NIBBLES$;
  goto label$13005;
  label$13007:;
 }
 int64 NCHARS$1;
 uint8 vr$8 = _ZN12SYSTEM_BUS_T9READUBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), 0x1.8Cp+7 );
 NCHARS$1 = (int64)vr$8;
 if( NCHARS$1 >= (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) ) goto label$13009;
 {
  FBSTRING STRKEY$2;
  FBSTRING* vr$11 = fb_Inkey( );
  fb_StrInit( (void*)&STRKEY$2, -1ll, (void*)vr$11, -1ll, 0 );
  int64 vr$14 = fb_StrLen( (void*)&STRKEY$2, -1ll );
  KEY$1 = vr$14;
  if( KEY$1 == 0ll ) goto label$13011;
  {
   KEY$1 = (int64)*(uint8*)((uint8*)((uint8*)*(uint8**)&STRKEY$2 + KEY$1) - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) + ((KEY$1 - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) * ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)));
   {
    if( KEY$1 != (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$13013;
    label$13014:;
    {
     fb_End( 0 );
    }
    goto label$13012;
    label$13013:;
    if( KEY$1 < 65ll ) goto label$13015;
    if( KEY$1 > 90ll ) goto label$13015;
    label$13016:;
    {
     KEY$1 = KEY$1 + 32ll;
     FBSTRING* vr$32 = fb_CHR( 1, KEY$1 );
     fb_StrConcatAssign( (void*)&S$1, -1ll, (void*)vr$32, -1ll, 0 );
    }
    goto label$13012;
    label$13015:;
    if( KEY$1 < 97ll ) goto label$13017;
    if( KEY$1 > 122ll ) goto label$13017;
    label$13018:;
    {
     KEY$1 = KEY$1 + -32ll;
     FBSTRING* vr$34 = fb_CHR( 1, KEY$1 );
     fb_StrConcatAssign( (void*)&S$1, -1ll, (void*)vr$34, -1ll, 0 );
    }
    goto label$13012;
    label$13017:;
    if( KEY$1 != 316ll ) goto label$13019;
    label$13020:;
    {
     fb_Locate( 1, 1, -1, 0, 0 );
     FBSTRING* vr$35 = fb_SPACE( 48ll );
     fb_PrintString( 0, (FBSTRING*)vr$35, 1 );
     fb_Locate( 1, 1, -1, 0, 0 );
     FBSTRING* vr$36 = fb_StrAllocTempDescZEx( (uint8*)"save filename:", 14ll );
     fb_ConsoleInput( (FBSTRING*)vr$36, -1, -1 );
     fb_InputString( (void*)&STRKEY$2, -1ll, 0 );
     int64 vr$39 = fb_StrLen( (void*)&STRKEY$2, -1ll );
     if( vr$39 == 0ll ) goto label$13022;
     {
      int32 vr$40 = fb_FileFree( );
      KEY$1 = (int64)vr$40;
      int32 vr$44 = fb_FileOpen( (FBSTRING*)&STRKEY$2, 0u, 2u, 0u, (int32)KEY$1, 0 );
      if( (int64)vr$44 != 0ll ) goto label$13024;
      {
       static uint8 U8$7;
       int64 NBYTES$7;
       uint16 vr$47 = _ZN12SYSTEM_BUS_T10READUSHORTEd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), 0x1.68p+5 );
       NBYTES$7 = (int64)vr$47;
       NBYTES$7 = NBYTES$7 + -2048ll;
       fb_FilePutLarge( (int32)KEY$1, 0ll, (void*)&NBYTES$7, 8ull );
       {
        int64 I$8;
        I$8 = 0ll;
        int64 TMP$6068$8;
        TMP$6068$8 = NBYTES$7 + -1ll;
        goto label$13025;
        label$13028:;
        {
         uint8 vr$56 = _ZN12SYSTEM_BUS_T9READUBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), (double)(I$8 + 2048ll) );
         U8$7 = vr$56;
         fb_FilePutLarge( (int32)KEY$1, 0ll, (void*)&U8$7, 1ull );
        }
        label$13026:;
        I$8 = I$8 + 1ll;
        label$13025:;
        if( I$8 <= TMP$6068$8 ) goto label$13028;
        label$13027:;
       }
       fb_FileClose( (int32)KEY$1 );
      }
      goto label$13023;
      label$13024:;
      {
       FBSTRING TMP$6070$7;
       fb_Locate( 1, 1, -1, 0, 0 );
       FBSTRING* vr$60 = fb_SPACE( 48ll );
       fb_PrintString( 0, (FBSTRING*)vr$60, 1 );
       fb_Locate( 1, 1, -1, 0, 0 );
       __builtin_memset( &TMP$6070$7, 0, 24ll );
       FBSTRING* vr$64 = fb_StrConcat( &TMP$6070$7, (void*)"can't create: ", 15ll, (void*)&STRKEY$2, -1ll );
       fb_PrintString( 0, (FBSTRING*)vr$64, 1 );
       fb_Beep( );
       fb_Sleep( -1 );
      }
      label$13023:;
     }
     label$13022:;
     label$13021:;
     KEY$1 = 0ll;
    }
    goto label$13012;
    label$13019:;
    if( KEY$1 != 317ll ) goto label$13029;
    label$13030:;
    {
     fb_Locate( 1, 1, -1, 0, 0 );
     FBSTRING* vr$65 = fb_SPACE( 48ll );
     fb_PrintString( 0, (FBSTRING*)vr$65, 1 );
     fb_Locate( 1, 1, -1, 0, 0 );
     FBSTRING* vr$66 = fb_StrAllocTempDescZEx( (uint8*)"load filename:", 14ll );
     fb_ConsoleInput( (FBSTRING*)vr$66, -1, -1 );
     fb_InputString( (void*)&STRKEY$2, -1ll, 0 );
     int64 vr$69 = fb_StrLen( (void*)&STRKEY$2, -1ll );
     if( vr$69 == 0ll ) goto label$13032;
     {
      int32 vr$70 = fb_FileFree( );
      KEY$1 = (int64)vr$70;
      int32 vr$74 = fb_FileOpen( (FBSTRING*)&STRKEY$2, 0u, 1u, 0u, (int32)KEY$1, 0 );
      if( (int64)vr$74 != 0ll ) goto label$13034;
      {
       static uint8 U8$7;
       static int64 NBYTES$7;
       fb_FileGetLarge( (int32)KEY$1, 0ll, (void*)&NBYTES$7, 8ull );
       {
        int64 I$8;
        I$8 = 0ll;
        int64 TMP$6072$8;
        TMP$6072$8 = NBYTES$7 + -1ll;
        goto label$13035;
        label$13038:;
        {
         fb_FileGetLarge( (int32)KEY$1, 0ll, (void*)&U8$7, 1ull );
         _ZN12SYSTEM_BUS_T10WRITEUBYTEEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), (double)(I$8 + 2048ll), (double)U8$7 );
        }
        label$13036:;
        I$8 = I$8 + 1ll;
        label$13035:;
        if( I$8 <= TMP$6072$8 ) goto label$13038;
        label$13037:;
       }
       fb_FileClose( (int32)KEY$1 );
       NBYTES$7 = NBYTES$7 + 2048ll;
       _ZN12SYSTEM_BUS_T11WRITEUSHORTEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), 0x1.68p+5, (double)NBYTES$7 );
       *(uint16*)((uint8*)CPU$1 + 4ll) = (uint16)42282u;
      }
      goto label$13033;
      label$13034:;
      {
       FBSTRING TMP$6074$7;
       fb_Locate( 1, 1, -1, 0, 0 );
       FBSTRING* vr$89 = fb_SPACE( 48ll );
       fb_PrintString( 0, (FBSTRING*)vr$89, 1 );
       fb_Locate( 1, 1, -1, 0, 0 );
       __builtin_memset( &TMP$6074$7, 0, 24ll );
       FBSTRING* vr$93 = fb_StrConcat( &TMP$6074$7, (void*)"can't open: ", 13ll, (void*)&STRKEY$2, -1ll );
       fb_PrintString( 0, (FBSTRING*)vr$93, 1 );
       fb_Beep( );
       fb_Sleep( -1 );
      }
      label$13033:;
     }
     label$13032:;
     label$13031:;
     KEY$1 = 0ll;
    }
    goto label$13012;
    label$13029:;
    if( KEY$1 != 327ll ) goto label$13039;
    label$13040:;
    {
     KEY$1 = 19ll;
    }
    goto label$13012;
    label$13039:;
    if( KEY$1 != 8ll ) goto label$13041;
    label$13042:;
    {
     KEY$1 = 20ll;
    }
    goto label$13012;
    label$13041:;
    if( KEY$1 != 331ll ) goto label$13043;
    label$13044:;
    {
     KEY$1 = 157ll;
    }
    goto label$13012;
    label$13043:;
    if( KEY$1 != 328ll ) goto label$13045;
    label$13046:;
    {
     KEY$1 = 145ll;
    }
    goto label$13012;
    label$13045:;
    if( KEY$1 != 333ll ) goto label$13047;
    label$13048:;
    {
     KEY$1 = 29ll;
    }
    goto label$13012;
    label$13047:;
    if( KEY$1 != 336ll ) goto label$13049;
    label$13050:;
    {
     KEY$1 = 17ll;
    }
    label$13049:;
    label$13012:;
   }
   if( KEY$1 == 0ll ) goto label$13052;
   {
    _ZN12SYSTEM_BUS_T10WRITEUBYTEEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), (double)(NCHARS$1 + 631ll), (double)KEY$1 );
    _ZN12SYSTEM_BUS_T10WRITEUBYTEEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), 0x1.8Cp+7, (double)(NCHARS$1 + 1ll) );
   }
   label$13052:;
   label$13051:;
  }
  label$13011:;
  label$13010:;
  fb_StrDelete( (FBSTRING*)&STRKEY$2 );
 }
 label$13009:;
 label$13008:;
 _ZN7CPU65104PUSHEd( CPU$1, (double)*(uint8*)((uint8*)CPU$1 + 5ll) );
 _ZN7CPU65104PUSHEd( CPU$1, (double)*(uint8*)((uint8*)CPU$1 + 4ll) );
 _ZN7CPU65104PUSHEd( CPU$1, (double)*(uint8*)CPU$1 );
 uint8 vr$109 = _ZN12SYSTEM_BUS_T9READUBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), 0x1.FFFCp+15 );
 *(uint8*)((uint8*)CPU$1 + 5ll) = vr$109;
 uint8 vr$112 = _ZN12SYSTEM_BUS_T9READUBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 8ll), 0x1.FFFEp+15 );
 *(uint8*)((uint8*)CPU$1 + 4ll) = vr$112;
 *(uint8*)CPU$1 = (uint8)((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551599ull);
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551611ull) | 4ull);
 label$13053:;
 if( *(uint64*)((uint8*)CPU$1 + 16ll) == 64ull ) goto label$13054;
 {
  _ZN7CPU65104TICKEd( CPU$1, __builtin_inf() );
  IRQTICKS$1 = IRQTICKS$1 + 1ll;
 }
 goto label$13053;
 label$13054:;
 double vr$125 = _ZN7CPU65104PULLEv( CPU$1 );
 *(uint8*)CPU$1 = (uint8)((int32)__builtin_nearbyint( vr$125 ));
 double vr$128 = _ZN7CPU65104PULLEv( CPU$1 );
 *(uint8*)((uint8*)CPU$1 + 4ll) = (uint8)((int32)__builtin_nearbyint( vr$128 ));
 double vr$131 = _ZN7CPU65104PULLEv( CPU$1 );
 *(uint8*)((uint8*)CPU$1 + 5ll) = (uint8)((int32)__builtin_nearbyint( vr$131 ));
 if( KEY$1 != 13ll ) goto label$13056;
 {
  FLAG$ = 1ll;
 }
 goto label$13055;
 label$13056:;
 {
  FLAG$ = 0ll;
 }
 label$13055:;
 fb$result$1 = IRQTICKS$1;
 label$13005:;
 return fb$result$1;
}

void RASTERLINE( void* PARAM$1 )
{
 label$13057:;
 static struct $7VECTOR2 FRAGCOORD$1;
 static int64 LABEL$13059$1;
 if( LABEL$13059$1 != 0ll ) goto label$13060;
 LABEL$13059$1 = 1ll;
 _ZN7VECTOR2C1Ev( &FRAGCOORD$1 );
 label$13060:;
 static struct $7VECTOR4 FRAGCOLOR$1;
 static int64 LABEL$13061$1;
 if( LABEL$13061$1 != 0ll ) goto label$13062;
 LABEL$13061$1 = 1ll;
 _ZN7VECTOR4C1Ev( &FRAGCOLOR$1 );
 label$13062:;
 struct $10THREADSCAN* SCANPARAMS$1;
 SCANPARAMS$1 = (struct $10THREADSCAN*)PARAM$1;
 {
  uint64 X$2;
  X$2 = 0ull;
  uint64 TMP$6075$2;
  TMP$6075$2 = ((uint64)__builtin_nearbyint( *(double*)((uint8*)SCANPARAMS$1 + 8ll) ));
  goto label$13063;
  label$13066:;
  {
   *(double*)&FRAGCOORD$1 = (double)X$2;
   *(double*)((uint8*)&FRAGCOORD$1 + 8ll) = *(double*)((uint8*)SCANPARAMS$1 + 16ll) - *(double*)SCANPARAMS$1;
   _ZN12SYSTEM_BUS_T9MAINIMAGEER7VECTOR4RK7VECTOR2( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 8ll), &FRAGCOLOR$1, (struct $7VECTOR2*)&FRAGCOORD$1 );
   uint64 vr$7 = _ZN7VECTOR4cvyEv( &FRAGCOLOR$1 );
   fb_GfxPset( FGIMAGE$, (float)X$2, (float)*(double*)SCANPARAMS$1, (uint32)vr$7, 4, 0 );
  }
  label$13064:;
  X$2 = X$2 + 1ull;
  label$13063:;
  if( X$2 <= TMP$6075$2 ) goto label$13066;
  label$13065:;
 }
 label$13058:;
}

void KMAIN( struct $14MULTIBOOT_INFO* MB_INFO$1 )
{
 label$13067:;
 TICKS$ = (uint64)*(uint8*)NIBBLES$;
 RES$ = (uint64)*(uint8*)NIBBLES$;
 label$13069:;
 {
  TICKS$ = TICKS$ + (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
  if( FLAG$ != (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$13073;
  {
   _ZN7CPU65104TICKEd( *(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll), (double)TICKS$ );
   *(double*)((int64)(double*)MEM64$ + 395344ll) = (double)0ll;
   *(double*)((int64)(double*)MEM64$ + 396000ll) = (double)0ll;
  }
  goto label$13072;
  label$13073:;
  {
   _ZN7CPU65104TICKEd( *(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll), __builtin_inf() );
  }
  label$13072:;
  if( (TICKS$ % (uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)))) != (uint64)(int64)*(uint8*)NIBBLES$ ) goto label$13075;
  {
   int64 vr$21 = INTERRUPTSERVICE( *(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) );
   TICKS$ = TICKS$ + (uint64)vr$21;
   fb_GfxLock( );
   fb_GfxPut( (void*)0ull, (float)*(uint8*)NIBBLES$, (float)*(uint8*)NIBBLES$, (void*)BGIMAGE$, -65536, -65536, -65536, -65536, 0, 1, (void*)&fb_hPutPSet, -1, (void*)0ull, (void*)0ull );
   fb_GfxPut( (void*)0ull, (float)*(uint8*)NIBBLES$, (float)*(uint8*)NIBBLES$, (void*)FGIMAGE$, -65536, -65536, -65536, -65536, 0, 6, (void*)&fb_hPutAlpha, -1, (void*)0ull, (void*)0ull );
   fb_GfxWaitVSync( );
   fb_GfxUnlock( -1, -1 );
   *(double*)((int64)(double*)MEM64$ + 426128ll) = (double)(((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 426128ll) + 0x1.p+0 )) % 1079ll);
  }
  label$13075:;
  label$13074:;
 }
 label$13071:;
 goto label$13069;
 label$13070:;
 free( (void*)MEM64$ );
 free( (void*)&RETURN_POINT$ );
 label$13068:;
}

int32 main( int32 __FB_ARGC__$0, char** __FB_ARGV__$0 )
{
 int32 fb$result$0;
 __builtin_memset( &fb$result$0, 0, 4ll );
 fb_Init( __FB_ARGC__$0, (uint8**)__FB_ARGV__$0, 0 );
 fb_DataRestore( (void*)label$12022 );
 label$0:;
 uint64 __JMP_BUF$0[9];
 __builtin_memset( (uint64*)__JMP_BUF$0, 0, 72ll );
 struct $8FBARRAY1IyE tmp$5$0;
 *(uint64**)&tmp$5$0 = (uint64*)__JMP_BUF$0;
 *(uint64**)((uint8*)&tmp$5$0 + 8ll) = (uint64*)__JMP_BUF$0;
 *(int64*)((uint8*)&tmp$5$0 + 16ll) = 72ll;
 *(int64*)((uint8*)&tmp$5$0 + 24ll) = 8ll;
 *(int64*)((uint8*)&tmp$5$0 + 32ll) = 1ll;
 *(int64*)((uint8*)&tmp$5$0 + 40ll) = 49ll;
 *(int64*)((uint8*)&tmp$5$0 + 48ll) = 9ll;
 *(int64*)((uint8*)&tmp$5$0 + 56ll) = 0ll;
 *(int64*)((uint8*)&tmp$5$0 + 64ll) = 8ll;
 void* vr$4 = malloc( 65536ull );
 RETURN_POINT$ = *(uint32**)vr$4;
 void* vr$5 = calloc( 3670016ull, 1ull );
 QBS_MALLOC$ = (struct $3QBS*)vr$5;
 void* vr$6 = malloc( 524288ull );
 QBS_MALLOC_FREED$ = (int64*)vr$6;
 void* vr$7 = malloc( 524288ull );
 QBS_MEM64_LIST$ = (int64*)vr$7;
 void* vr$8 = malloc( 524288ull );
 QBS_LIST$ = (int64*)vr$8;
 void* vr$9 = calloc( 524288ull, 1ull );
 QBS_TMP_LIST$ = (int64*)vr$9;
 uint8* QBS_DATA$0;
 void* vr$10 = malloc( 1048576ull );
 QBS_DATA$0 = (uint8*)vr$10;
 struct $4LIST* MOUSE_MESSAGE_QUEUE_HANDLES$0;
 MOUSE_MESSAGE_QUEUE_HANDLES$0 = (struct $4LIST*)0ull;
 int64 MOUSE_MESSAGE_QUEUE_FIRST$0;
 __builtin_memset( &MOUSE_MESSAGE_QUEUE_FIRST$0, 0, 8ll );
 int64 MOUSE_MESSAGE_QUEUE_DEFAULT$0;
 __builtin_memset( &MOUSE_MESSAGE_QUEUE_DEFAULT$0, 0, 8ll );
 struct $10CPU_STRUCT CPU_X86$0;
 __builtin_memset( &CPU_X86$0, 0, 88ll );
 static int64 IDX$0 = 0ll;
 static int64 SHIFT$0 = 2ll;
 static int64 COLOR_DATA$0 = 0ll;
 label$12021:;
 label$12027:;
 label$2138:;
 KMAIN( MB_INFO$ );
 label$1:;
 fb_End( 0 );
 return fb$result$0;
}

static void _ZN5FBGFXaSERKS_( struct $5FBGFX* THIS$1, struct $5FBGFX* __FB_RHS__$1 )
{
 label$538:;
 *(int64*)THIS$1 = *(int64*)__FB_RHS__$1;
 *(int64*)((uint8*)THIS$1 + 8ll) = *(int64*)((uint8*)__FB_RHS__$1 + 8ll);
 *(uint8**)((uint8*)THIS$1 + 16ll) = *(uint8**)((uint8*)__FB_RHS__$1 + 16ll);
 *(int64*)((uint8*)THIS$1 + 24ll) = *(int64*)((uint8*)__FB_RHS__$1 + 24ll);
 *(int64*)((uint8*)THIS$1 + 32ll) = *(int64*)((uint8*)__FB_RHS__$1 + 32ll);
 *(uint8**)((uint8*)THIS$1 + 40ll) = *(uint8**)((uint8*)__FB_RHS__$1 + 40ll);
 *(int64*)((uint8*)THIS$1 + 48ll) = *(int64*)((uint8*)__FB_RHS__$1 + 48ll);
 *(int64*)((uint8*)THIS$1 + 56ll) = *(int64*)((uint8*)__FB_RHS__$1 + 56ll);
 *(int64*)((uint8*)THIS$1 + 64ll) = *(int64*)((uint8*)__FB_RHS__$1 + 64ll);
 *(int64*)((uint8*)THIS$1 + 72ll) = *(int64*)((uint8*)__FB_RHS__$1 + 72ll);
 *(int64*)((uint8*)THIS$1 + 80ll) = *(int64*)((uint8*)__FB_RHS__$1 + 80ll);
 *(uint64*)((uint8*)THIS$1 + 88ll) = *(uint64*)((uint8*)__FB_RHS__$1 + 88ll);
 *(uint64**)((uint8*)THIS$1 + 96ll) = *(uint64**)((uint8*)__FB_RHS__$1 + 96ll);
 *(uint8**)((uint8*)THIS$1 + 104ll) = *(uint8**)((uint8*)__FB_RHS__$1 + 104ll);
 *(int8**)((uint8*)THIS$1 + 112ll) = *(int8**)((uint8*)__FB_RHS__$1 + 112ll);
 *(struct $9GFXDRIVER**)((uint8*)THIS$1 + 120ll) = *(struct $9GFXDRIVER**)((uint8*)__FB_RHS__$1 + 120ll);
 *(int64*)((uint8*)THIS$1 + 128ll) = *(int64*)((uint8*)__FB_RHS__$1 + 128ll);
 *(struct $9PALETTE_T**)((uint8*)THIS$1 + 136ll) = *(struct $9PALETTE_T**)((uint8*)__FB_RHS__$1 + 136ll);
 *(int64*)((uint8*)THIS$1 + 144ll) = *(int64*)((uint8*)__FB_RHS__$1 + 144ll);
 *(int64*)((uint8*)THIS$1 + 152ll) = *(int64*)((uint8*)__FB_RHS__$1 + 152ll);
 *(int64*)((uint8*)THIS$1 + 160ll) = *(int64*)((uint8*)__FB_RHS__$1 + 160ll);
 *(struct $4FONT**)((uint8*)THIS$1 + 168ll) = *(struct $4FONT**)((uint8*)__FB_RHS__$1 + 168ll);
 *(int64*)((uint8*)THIS$1 + 176ll) = *(int64*)((uint8*)__FB_RHS__$1 + 176ll);
 *(int64*)((uint8*)THIS$1 + 184ll) = *(int64*)((uint8*)__FB_RHS__$1 + 184ll);
 _ZN9_FLOAT128aSERS_( (struct $9_FLOAT128*)((uint8*)THIS$1 + 192ll), (struct $9_FLOAT128*)((uint8*)__FB_RHS__$1 + 192ll) );
 *(int8**)((uint8*)THIS$1 + 208ll) = *(int8**)((uint8*)__FB_RHS__$1 + 208ll);
 *(int64*)((uint8*)THIS$1 + 216ll) = *(int64*)((uint8*)__FB_RHS__$1 + 216ll);
 *(struct $14_GFX_CHAR_CELL**)((uint8*)THIS$1 + 224ll) = *(struct $14_GFX_CHAR_CELL**)((uint8*)__FB_RHS__$1 + 224ll);
 *(struct $6_EVENT**)((uint8*)THIS$1 + 232ll) = *(struct $6_EVENT**)((uint8*)__FB_RHS__$1 + 232ll);
 *(int64*)((uint8*)THIS$1 + 240ll) = *(int64*)((uint8*)__FB_RHS__$1 + 240ll);
 *(int64*)((uint8*)THIS$1 + 248ll) = *(int64*)((uint8*)__FB_RHS__$1 + 248ll);
 *(void***)((uint8*)THIS$1 + 256ll) = *(void***)((uint8*)__FB_RHS__$1 + 256ll);
 *(int64*)((uint8*)THIS$1 + 264ll) = *(int64*)((uint8*)__FB_RHS__$1 + 264ll);
 *(int64*)((uint8*)THIS$1 + 272ll) = *(int64*)((uint8*)__FB_RHS__$1 + 272ll);
 label$539:;
}

static void _ZN9SHADERTOYC1Ev( struct $9SHADERTOY* THIS$1 )
{
 __builtin_memset( (uint32*)THIS$1, 0, 4ll );
 __builtin_memset( (uint32*)((uint8*)THIS$1 + 4ll), 0, 4ll );
 __builtin_memset( (FBSTRING*)((uint8*)THIS$1 + 8ll), 0, 24ll );
 label$641:;
 label$642:;
}

static void _ZN9SHADERTOYaSERKS_( struct $9SHADERTOY* THIS$1, struct $9SHADERTOY* __FB_RHS__$1 )
{
 label$643:;
 *(uint32*)THIS$1 = *(uint32*)__FB_RHS__$1;
 *(uint32*)((uint8*)THIS$1 + 4ll) = *(uint32*)((uint8*)__FB_RHS__$1 + 4ll);
 fb_StrAssign( (void*)((uint8*)THIS$1 + 8ll), -1ll, (void*)((uint8*)__FB_RHS__$1 + 8ll), -1ll, 0 );
 label$644:;
}

static void _ZN9RECTANGLEC1Ev( struct $9RECTANGLE* THIS$1 )
{
 _ZN6VECTORC1Ev( (struct $6VECTOR*)THIS$1 );
 _ZN6VECTORC1Ev( (struct $6VECTOR*)((uint8*)THIS$1 + 32ll) );
 _ZN6VECTORC1Ev( (struct $6VECTOR*)((uint8*)THIS$1 + 64ll) );
 label$742:;
 label$743:;
}

static void _ZN9RECTANGLEaSERKS_( struct $9RECTANGLE* THIS$1, struct $9RECTANGLE* __FB_RHS__$1 )
{
 label$744:;
 __builtin_memcpy( (struct $6VECTOR*)THIS$1, (struct $6VECTOR*)__FB_RHS__$1, 32 );
 __builtin_memcpy( (struct $6VECTOR*)((uint8*)THIS$1 + 32ll), (struct $6VECTOR*)((uint8*)__FB_RHS__$1 + 32ll), 32 );
 __builtin_memcpy( (struct $6VECTOR*)((uint8*)THIS$1 + 64ll), (struct $6VECTOR*)((uint8*)__FB_RHS__$1 + 64ll), 32 );
 label$745:;
}

static void _ZN9BMPHEADERC1Ev( struct $9BMPHEADER* THIS$1 )
{
 _ZN9RECTANGLEC1Ev( (struct $9RECTANGLE*)THIS$1 );
 __builtin_memset( (uint16*)((uint8*)THIS$1 + 96ll), 0, 2ll );
 __builtin_memset( (int32*)((uint8*)THIS$1 + 98ll), 0, 4ll );
 __builtin_memset( (uint16*)((uint8*)THIS$1 + 102ll), 0, 2ll );
 __builtin_memset( (uint16*)((uint8*)THIS$1 + 104ll), 0, 2ll );
 __builtin_memset( (int32*)((uint8*)THIS$1 + 106ll), 0, 4ll );
 __builtin_memset( (int32*)((uint8*)THIS$1 + 110ll), 0, 4ll );
 __builtin_memset( (int32*)((uint8*)THIS$1 + 114ll), 0, 4ll );
 __builtin_memset( (int32*)((uint8*)THIS$1 + 118ll), 0, 4ll );
 __builtin_memset( (int16*)((uint8*)THIS$1 + 122ll), 0, 2ll );
 __builtin_memset( (int16*)((uint8*)THIS$1 + 124ll), 0, 2ll );
 __builtin_memset( (int32*)((uint8*)THIS$1 + 126ll), 0, 4ll );
 __builtin_memset( (int32*)((uint8*)THIS$1 + 130ll), 0, 4ll );
 __builtin_memset( (int32*)((uint8*)THIS$1 + 134ll), 0, 4ll );
 __builtin_memset( (int32*)((uint8*)THIS$1 + 138ll), 0, 4ll );
 __builtin_memset( (int32*)((uint8*)THIS$1 + 142ll), 0, 4ll );
 __builtin_memset( (int32*)((uint8*)THIS$1 + 146ll), 0, 4ll );
 label$748:;
 label$749:;
}

static void _ZN9BMPHEADERaSERKS_( struct $9BMPHEADER* THIS$1, struct $9BMPHEADER* __FB_RHS__$1 )
{
 label$750:;
 _ZN9RECTANGLEaSERKS_( (struct $9RECTANGLE*)THIS$1, (struct $9RECTANGLE*)__FB_RHS__$1 );
 *(uint16*)((uint8*)THIS$1 + 96ll) = *(uint16*)((uint8*)__FB_RHS__$1 + 96ll);
 *(int32*)((uint8*)THIS$1 + 98ll) = *(int32*)((uint8*)__FB_RHS__$1 + 98ll);
 *(uint16*)((uint8*)THIS$1 + 102ll) = *(uint16*)((uint8*)__FB_RHS__$1 + 102ll);
 *(uint16*)((uint8*)THIS$1 + 104ll) = *(uint16*)((uint8*)__FB_RHS__$1 + 104ll);
 *(int32*)((uint8*)THIS$1 + 106ll) = *(int32*)((uint8*)__FB_RHS__$1 + 106ll);
 *(int32*)((uint8*)THIS$1 + 110ll) = *(int32*)((uint8*)__FB_RHS__$1 + 110ll);
 *(int32*)((uint8*)THIS$1 + 114ll) = *(int32*)((uint8*)__FB_RHS__$1 + 114ll);
 *(int32*)((uint8*)THIS$1 + 118ll) = *(int32*)((uint8*)__FB_RHS__$1 + 118ll);
 *(int16*)((uint8*)THIS$1 + 122ll) = *(int16*)((uint8*)__FB_RHS__$1 + 122ll);
 *(int16*)((uint8*)THIS$1 + 124ll) = *(int16*)((uint8*)__FB_RHS__$1 + 124ll);
 *(int32*)((uint8*)THIS$1 + 126ll) = *(int32*)((uint8*)__FB_RHS__$1 + 126ll);
 *(int32*)((uint8*)THIS$1 + 130ll) = *(int32*)((uint8*)__FB_RHS__$1 + 130ll);
 *(int32*)((uint8*)THIS$1 + 134ll) = *(int32*)((uint8*)__FB_RHS__$1 + 134ll);
 *(int32*)((uint8*)THIS$1 + 138ll) = *(int32*)((uint8*)__FB_RHS__$1 + 138ll);
 *(int32*)((uint8*)THIS$1 + 142ll) = *(int32*)((uint8*)__FB_RHS__$1 + 142ll);
 *(int32*)((uint8*)THIS$1 + 146ll) = *(int32*)((uint8*)__FB_RHS__$1 + 146ll);
 label$751:;
}

static void _ZN8PALENTRYC1Ev( struct $8PALENTRY* THIS$1 )
{
 _ZN9BMPHEADERC1Ev( (struct $9BMPHEADER*)THIS$1 );
 __builtin_memset( (uint8*)((uint8*)THIS$1 + 150ll), 0, 1ll );
 __builtin_memset( (uint8*)((uint8*)THIS$1 + 151ll), 0, 1ll );
 __builtin_memset( (uint8*)((uint8*)THIS$1 + 152ll), 0, 1ll );
 __builtin_memset( (uint8*)((uint8*)THIS$1 + 153ll), 0, 1ll );
 label$754:;
 label$755:;
}

static void _ZN8PALENTRYaSERKS_( struct $8PALENTRY* THIS$1, struct $8PALENTRY* __FB_RHS__$1 )
{
 label$756:;
 _ZN9BMPHEADERaSERKS_( (struct $9BMPHEADER*)THIS$1, (struct $9BMPHEADER*)__FB_RHS__$1 );
 *(uint8*)((uint8*)THIS$1 + 150ll) = *(uint8*)((uint8*)__FB_RHS__$1 + 150ll);
 *(uint8*)((uint8*)THIS$1 + 151ll) = *(uint8*)((uint8*)__FB_RHS__$1 + 151ll);
 *(uint8*)((uint8*)THIS$1 + 152ll) = *(uint8*)((uint8*)__FB_RHS__$1 + 152ll);
 *(uint8*)((uint8*)THIS$1 + 153ll) = *(uint8*)((uint8*)__FB_RHS__$1 + 153ll);
 label$757:;
}

static void _ZN5MAP2DaSERKS_( struct $5MAP2D* THIS$1, struct $5MAP2D* __FB_RHS__$1 )
{
 label$762:;
 *(int64*)THIS$1 = *(int64*)__FB_RHS__$1;
 *($11MAP2D_TYPES*)((uint8*)THIS$1 + 8ll) = *($11MAP2D_TYPES*)((uint8*)__FB_RHS__$1 + 8ll);
 _ZN9BMPHEADERaSERKS_( (struct $9BMPHEADER*)((uint8*)THIS$1 + 16ll), (struct $9BMPHEADER*)((uint8*)__FB_RHS__$1 + 16ll) );
 *(uint8**)((uint8*)THIS$1 + 168ll) = *(uint8**)((uint8*)__FB_RHS__$1 + 168ll);
 __builtin_memcpy( (struct $6VECTOR*)((uint8*)THIS$1 + 176ll), (struct $6VECTOR*)((uint8*)__FB_RHS__$1 + 176ll), 32 );
 label$763:;
}

static void _ZN8MATERIALC1Ev( struct $8MATERIAL* THIS$1 )
{
 _ZN8PALENTRYC1Ev( (struct $8PALENTRY*)THIS$1 );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 160ll), 0, 8ll );
 _ZN6VECTORC1Ev( (struct $6VECTOR*)((uint8*)THIS$1 + 168ll) );
 __builtin_memset( (double*)((uint8*)THIS$1 + 200ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 208ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 216ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 224ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 232ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 240ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 248ll), 0, 8ll );
 __builtin_memset( (int8*)((uint8*)THIS$1 + 256ll), 0, 1ll );
 __builtin_memset( (int8*)((uint8*)THIS$1 + 257ll), 0, 1ll );
 __builtin_memset( (int8*)((uint8*)THIS$1 + 258ll), 0, 1ll );
 __builtin_memset( (int8*)((uint8*)THIS$1 + 259ll), 0, 1ll );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 264ll), 0, 8ll );
 _ZN6VECTORC1Ev( (struct $6VECTOR*)((uint8*)THIS$1 + 272ll) );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 304ll), 0, 8ll );
 _ZN6VECTORC1Ev( (struct $6VECTOR*)((uint8*)THIS$1 + 312ll) );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 344ll), 0, 8ll );
 _ZN6VECTORC1Ev( (struct $6VECTOR*)((uint8*)THIS$1 + 352ll) );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 384ll), 0, 8ll );
 _ZN6VECTORC1Ev( (struct $6VECTOR*)((uint8*)THIS$1 + 392ll) );
 label$766:;
 label$767:;
}

static void _ZN8MATERIALaSERKS_( struct $8MATERIAL* THIS$1, struct $8MATERIAL* __FB_RHS__$1 )
{
 label$768:;
 _ZN8PALENTRYaSERKS_( (struct $8PALENTRY*)THIS$1, (struct $8PALENTRY*)__FB_RHS__$1 );
 *(int64*)((uint8*)THIS$1 + 160ll) = *(int64*)((uint8*)__FB_RHS__$1 + 160ll);
 __builtin_memcpy( (struct $6VECTOR*)((uint8*)THIS$1 + 168ll), (struct $6VECTOR*)((uint8*)__FB_RHS__$1 + 168ll), 32 );
 *(double*)((uint8*)THIS$1 + 200ll) = *(double*)((uint8*)__FB_RHS__$1 + 200ll);
 *(double*)((uint8*)THIS$1 + 208ll) = *(double*)((uint8*)__FB_RHS__$1 + 208ll);
 *(double*)((uint8*)THIS$1 + 216ll) = *(double*)((uint8*)__FB_RHS__$1 + 216ll);
 *(double*)((uint8*)THIS$1 + 224ll) = *(double*)((uint8*)__FB_RHS__$1 + 224ll);
 *(double*)((uint8*)THIS$1 + 232ll) = *(double*)((uint8*)__FB_RHS__$1 + 232ll);
 *(double*)((uint8*)THIS$1 + 240ll) = *(double*)((uint8*)__FB_RHS__$1 + 240ll);
 *(double*)((uint8*)THIS$1 + 248ll) = *(double*)((uint8*)__FB_RHS__$1 + 248ll);
 *(int8*)((uint8*)THIS$1 + 256ll) = *(int8*)((uint8*)__FB_RHS__$1 + 256ll);
 *(int8*)((uint8*)THIS$1 + 257ll) = *(int8*)((uint8*)__FB_RHS__$1 + 257ll);
 *(int8*)((uint8*)THIS$1 + 258ll) = *(int8*)((uint8*)__FB_RHS__$1 + 258ll);
 *(int8*)((uint8*)THIS$1 + 259ll) = *(int8*)((uint8*)__FB_RHS__$1 + 259ll);
 *(int64*)((uint8*)THIS$1 + 264ll) = *(int64*)((uint8*)__FB_RHS__$1 + 264ll);
 __builtin_memcpy( (struct $6VECTOR*)((uint8*)THIS$1 + 272ll), (struct $6VECTOR*)((uint8*)__FB_RHS__$1 + 272ll), 32 );
 *(int64*)((uint8*)THIS$1 + 304ll) = *(int64*)((uint8*)__FB_RHS__$1 + 304ll);
 __builtin_memcpy( (struct $6VECTOR*)((uint8*)THIS$1 + 312ll), (struct $6VECTOR*)((uint8*)__FB_RHS__$1 + 312ll), 32 );
 *(int64*)((uint8*)THIS$1 + 344ll) = *(int64*)((uint8*)__FB_RHS__$1 + 344ll);
 __builtin_memcpy( (struct $6VECTOR*)((uint8*)THIS$1 + 352ll), (struct $6VECTOR*)((uint8*)__FB_RHS__$1 + 352ll), 32 );
 *(int64*)((uint8*)THIS$1 + 384ll) = *(int64*)((uint8*)__FB_RHS__$1 + 384ll);
 __builtin_memcpy( (struct $6VECTOR*)((uint8*)THIS$1 + 392ll), (struct $6VECTOR*)((uint8*)__FB_RHS__$1 + 392ll), 32 );
 label$769:;
}

static void _ZN5LIGHTaSERKS_( struct $5LIGHT* THIS$1, struct $5LIGHT* __FB_RHS__$1 )
{
 label$774:;
 *($11LIGHT_TYPES*)THIS$1 = *($11LIGHT_TYPES*)__FB_RHS__$1;
 *(int64*)((uint8*)THIS$1 + 8ll) = *(int64*)((uint8*)__FB_RHS__$1 + 8ll);
 __builtin_memcpy( (struct $6VECTOR*)((uint8*)THIS$1 + 16ll), (struct $6VECTOR*)((uint8*)__FB_RHS__$1 + 16ll), 32 );
 __builtin_memcpy( (struct $6VECTOR*)((uint8*)THIS$1 + 48ll), (struct $6VECTOR*)((uint8*)__FB_RHS__$1 + 48ll), 32 );
 __builtin_memcpy( (struct $6VECTOR*)((uint8*)THIS$1 + 80ll), (struct $6VECTOR*)((uint8*)__FB_RHS__$1 + 80ll), 32 );
 __builtin_memcpy( (struct $6VECTOR*)((uint8*)THIS$1 + 112ll), (struct $6VECTOR*)((uint8*)__FB_RHS__$1 + 112ll), 32 );
 __builtin_memcpy( (struct $6VECTOR*)((uint8*)THIS$1 + 144ll), (struct $6VECTOR*)((uint8*)__FB_RHS__$1 + 144ll), 32 );
 *(double*)((uint8*)THIS$1 + 176ll) = *(double*)((uint8*)__FB_RHS__$1 + 176ll);
 *(double*)((uint8*)THIS$1 + 184ll) = *(double*)((uint8*)__FB_RHS__$1 + 184ll);
 *(int8*)((uint8*)THIS$1 + 192ll) = *(int8*)((uint8*)__FB_RHS__$1 + 192ll);
 label$775:;
}

static void _ZN4POLYaSERKS_( struct $4POLY* THIS$1, struct $4POLY* __FB_RHS__$1 )
{
 label$780:;
 _ZN8MATERIALaSERKS_( (struct $8MATERIAL*)THIS$1, (struct $8MATERIAL*)__FB_RHS__$1 );
 *(int64*)((uint8*)THIS$1 + 424ll) = *(int64*)((uint8*)__FB_RHS__$1 + 424ll);
 _ZN9RECTANGLEaSERKS_( (struct $9RECTANGLE*)((uint8*)THIS$1 + 432ll), (struct $9RECTANGLE*)((uint8*)__FB_RHS__$1 + 432ll) );
 *(int64*)((uint8*)THIS$1 + 528ll) = *(int64*)((uint8*)__FB_RHS__$1 + 528ll);
 *(struct $6VECTOR***)((uint8*)THIS$1 + 536ll) = *(struct $6VECTOR***)((uint8*)__FB_RHS__$1 + 536ll);
 __builtin_memcpy( (struct $6VECTOR*)((uint8*)THIS$1 + 544ll), (struct $6VECTOR*)((uint8*)__FB_RHS__$1 + 544ll), 32 );
 __builtin_memcpy( (struct $6VECTOR*)((uint8*)THIS$1 + 576ll), (struct $6VECTOR*)((uint8*)__FB_RHS__$1 + 576ll), 32 );
 *(double*)((uint8*)THIS$1 + 608ll) = *(double*)((uint8*)__FB_RHS__$1 + 608ll);
 label$781:;
}

static void _ZN8OBJECT3DaSERKS_( struct $8OBJECT3D* THIS$1, struct $8OBJECT3D* __FB_RHS__$1 )
{
 label$786:;
 *($14OBJECT3D_TYPES*)THIS$1 = *($14OBJECT3D_TYPES*)__FB_RHS__$1;
 *(int64*)((uint8*)THIS$1 + 8ll) = *(int64*)((uint8*)__FB_RHS__$1 + 8ll);
 _ZN9RECTANGLEaSERKS_( (struct $9RECTANGLE*)((uint8*)THIS$1 + 16ll), (struct $9RECTANGLE*)((uint8*)__FB_RHS__$1 + 16ll) );
 __builtin_memcpy( (struct $6VECTOR*)((uint8*)THIS$1 + 112ll), (struct $6VECTOR*)((uint8*)__FB_RHS__$1 + 112ll), 32 );
 *(int64*)((uint8*)THIS$1 + 144ll) = *(int64*)((uint8*)__FB_RHS__$1 + 144ll);
 *(double*)((uint8*)THIS$1 + 152ll) = *(double*)((uint8*)__FB_RHS__$1 + 152ll);
 *(int64*)((uint8*)THIS$1 + 160ll) = *(int64*)((uint8*)__FB_RHS__$1 + 160ll);
 *(struct $6VECTOR***)((uint8*)THIS$1 + 168ll) = *(struct $6VECTOR***)((uint8*)__FB_RHS__$1 + 168ll);
 *(int64*)((uint8*)THIS$1 + 176ll) = *(int64*)((uint8*)__FB_RHS__$1 + 176ll);
 *(struct $4POLY***)((uint8*)THIS$1 + 184ll) = *(struct $4POLY***)((uint8*)__FB_RHS__$1 + 184ll);
 label$787:;
}

static void _ZN7AAPIXELaSERKS_( struct $7AAPIXEL* THIS$1, struct $7AAPIXEL* __FB_RHS__$1 )
{
 label$792:;
 _ZN8MATERIALaSERKS_( (struct $8MATERIAL*)THIS$1, (struct $8MATERIAL*)__FB_RHS__$1 );
 *(int64*)((uint8*)THIS$1 + 424ll) = *(int64*)((uint8*)__FB_RHS__$1 + 424ll);
 *(int64*)((uint8*)THIS$1 + 432ll) = *(int64*)((uint8*)__FB_RHS__$1 + 432ll);
 *(int64*)((uint8*)THIS$1 + 440ll) = *(int64*)((uint8*)__FB_RHS__$1 + 440ll);
 label$793:;
}

static void _ZN9RAYTRACERaSERKS_( struct $9RAYTRACER* THIS$1, struct $9RAYTRACER* __FB_RHS__$1 )
{
 label$798:;
 _ZN8MATERIALaSERKS_( (struct $8MATERIAL*)THIS$1, (struct $8MATERIAL*)__FB_RHS__$1 );
 *(int64*)((uint8*)THIS$1 + 424ll) = *(int64*)((uint8*)__FB_RHS__$1 + 424ll);
 *(int64*)((uint8*)THIS$1 + 432ll) = *(int64*)((uint8*)__FB_RHS__$1 + 432ll);
 *(int64*)((uint8*)THIS$1 + 440ll) = *(int64*)((uint8*)__FB_RHS__$1 + 440ll);
 *(int64*)((uint8*)THIS$1 + 448ll) = *(int64*)((uint8*)__FB_RHS__$1 + 448ll);
 *(double*)((uint8*)THIS$1 + 456ll) = *(double*)((uint8*)__FB_RHS__$1 + 456ll);
 *(double*)((uint8*)THIS$1 + 464ll) = *(double*)((uint8*)__FB_RHS__$1 + 464ll);
 __builtin_memcpy( (struct $6VECTOR*)((uint8*)THIS$1 + 472ll), (struct $6VECTOR*)((uint8*)__FB_RHS__$1 + 472ll), 32 );
 *(double*)((uint8*)THIS$1 + 504ll) = *(double*)((uint8*)__FB_RHS__$1 + 504ll);
 __builtin_memcpy( (struct $6VECTOR*)((uint8*)THIS$1 + 512ll), (struct $6VECTOR*)((uint8*)__FB_RHS__$1 + 512ll), 32 );
 *(double*)((uint8*)THIS$1 + 544ll) = *(double*)((uint8*)__FB_RHS__$1 + 544ll);
 *(int64*)((uint8*)THIS$1 + 552ll) = *(int64*)((uint8*)__FB_RHS__$1 + 552ll);
 *(int64*)((uint8*)THIS$1 + 560ll) = *(int64*)((uint8*)__FB_RHS__$1 + 560ll);
 __builtin_memcpy( (struct $6VECTOR*)((uint8*)THIS$1 + 568ll), (struct $6VECTOR*)((uint8*)__FB_RHS__$1 + 568ll), 32 );
 __builtin_memcpy( (struct $6VECTOR*)((uint8*)THIS$1 + 600ll), (struct $6VECTOR*)((uint8*)__FB_RHS__$1 + 600ll), 32 );
 __builtin_memcpy( (struct $6VECTOR*)((uint8*)THIS$1 + 632ll), (struct $6VECTOR*)((uint8*)__FB_RHS__$1 + 632ll), 32 );
 *(int64*)((uint8*)THIS$1 + 664ll) = *(int64*)((uint8*)__FB_RHS__$1 + 664ll);
 *(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) = *(struct $8MATERIAL***)((uint8*)__FB_RHS__$1 + 672ll);
 *(int64*)((uint8*)THIS$1 + 680ll) = *(int64*)((uint8*)__FB_RHS__$1 + 680ll);
 *(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) = *(struct $8OBJECT3D***)((uint8*)__FB_RHS__$1 + 688ll);
 *(int64*)((uint8*)THIS$1 + 696ll) = *(int64*)((uint8*)__FB_RHS__$1 + 696ll);
 *(struct $5LIGHT***)((uint8*)THIS$1 + 704ll) = *(struct $5LIGHT***)((uint8*)__FB_RHS__$1 + 704ll);
 *(int64*)((uint8*)THIS$1 + 712ll) = *(int64*)((uint8*)__FB_RHS__$1 + 712ll);
 *(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) = *(struct $5MAP2D***)((uint8*)__FB_RHS__$1 + 720ll);
 *(int64*)((uint8*)THIS$1 + 728ll) = *(int64*)((uint8*)__FB_RHS__$1 + 728ll);
 *(struct $7AAPIXEL***)((uint8*)THIS$1 + 736ll) = *(struct $7AAPIXEL***)((uint8*)__FB_RHS__$1 + 736ll);
 label$799:;
}

static void _ZN7VECTOR3aSERKS_( struct $7VECTOR3* THIS$1, struct $7VECTOR3* __FB_RHS__$1 )
{
 label$1566:;
 _ZN7VECTOR2aSERS_( (struct $7VECTOR2*)THIS$1, (struct $7VECTOR2*)__FB_RHS__$1 );
 __builtin_memcpy( (double*)((uint8*)THIS$1 + 16ll), (double*)((uint8*)__FB_RHS__$1 + 16ll), 8 );
 __builtin_memcpy( (double*)((uint8*)THIS$1 + 24ll), (double*)((uint8*)__FB_RHS__$1 + 24ll), 8 );
 __builtin_memcpy( (double*)((uint8*)THIS$1 + 32ll), (double*)((uint8*)__FB_RHS__$1 + 32ll), 8 );
 label$1567:;
}

static void _ZN7VECTOR4aSERKS_( struct $7VECTOR4* THIS$1, struct $7VECTOR4* __FB_RHS__$1 )
{
 label$1725:;
 _ZN7VECTOR3aSERS_( (struct $7VECTOR3*)THIS$1, (struct $7VECTOR3*)__FB_RHS__$1 );
 __builtin_memcpy( (double*)((uint8*)THIS$1 + 40ll), (double*)((uint8*)__FB_RHS__$1 + 40ll), 8 );
 __builtin_memcpy( (double*)((uint8*)THIS$1 + 48ll), (double*)((uint8*)__FB_RHS__$1 + 48ll), 8 );
 __builtin_memcpy( (double*)((uint8*)THIS$1 + 56ll), (double*)((uint8*)__FB_RHS__$1 + 56ll), 8 );
 __builtin_memcpy( (double*)((uint8*)THIS$1 + 64ll), (double*)((uint8*)__FB_RHS__$1 + 64ll), 8 );
 label$1726:;
}

static void _ZN5PLANEaSERKS_( struct $5PLANE* THIS$1, struct $5PLANE* __FB_RHS__$1 )
{
 label$1919:;
 _ZN7VECTOR4aSERS_( (struct $7VECTOR4*)THIS$1, (struct $7VECTOR4*)__FB_RHS__$1 );
 _ZN7VECTOR3aSERS_( (struct $7VECTOR3*)((uint8*)THIS$1 + 72ll), (struct $7VECTOR3*)((uint8*)__FB_RHS__$1 + 72ll) );
 *(double*)((uint8*)THIS$1 + 112ll) = *(double*)((uint8*)__FB_RHS__$1 + 112ll);
 label$1920:;
}

static void _ZN4MAT2aSERKS_( struct $4MAT2* THIS$1, struct $4MAT2* __FB_RHS__$1 )
{
 label$1995:;
 _ZN5PLANEaSERKS_( (struct $5PLANE*)THIS$1, (struct $5PLANE*)__FB_RHS__$1 );
 *(double*)((uint8*)THIS$1 + 120ll) = *(double*)((uint8*)__FB_RHS__$1 + 120ll);
 *(double*)((uint8*)THIS$1 + 128ll) = *(double*)((uint8*)__FB_RHS__$1 + 128ll);
 *(double*)((uint8*)THIS$1 + 136ll) = *(double*)((uint8*)__FB_RHS__$1 + 136ll);
 *(double*)((uint8*)THIS$1 + 144ll) = *(double*)((uint8*)__FB_RHS__$1 + 144ll);
 label$1996:;
}

static void _ZN4MAT2C1ERKS_( struct $4MAT2* THIS$1, struct $4MAT2* __FB_RHS__$1 )
{
 label$1997:;
 _ZN5PLANEC1Ev( (struct $5PLANE*)THIS$1 );
 _ZN4MAT2aSERKS_( THIS$1, __FB_RHS__$1 );
 label$1998:;
}

static void _ZN4MAT3aSERKS_( struct $4MAT3* THIS$1, struct $4MAT3* __FB_RHS__$1 )
{
 label$2011:;
 _ZN4MAT2aSERKS_( (struct $4MAT2*)THIS$1, (struct $4MAT2*)__FB_RHS__$1 );
 *(double*)((uint8*)THIS$1 + 152ll) = *(double*)((uint8*)__FB_RHS__$1 + 152ll);
 *(double*)((uint8*)THIS$1 + 160ll) = *(double*)((uint8*)__FB_RHS__$1 + 160ll);
 *(double*)((uint8*)THIS$1 + 168ll) = *(double*)((uint8*)__FB_RHS__$1 + 168ll);
 *(double*)((uint8*)THIS$1 + 176ll) = *(double*)((uint8*)__FB_RHS__$1 + 176ll);
 *(double*)((uint8*)THIS$1 + 184ll) = *(double*)((uint8*)__FB_RHS__$1 + 184ll);
 *(double*)((uint8*)THIS$1 + 192ll) = *(double*)((uint8*)__FB_RHS__$1 + 192ll);
 *(double*)((uint8*)THIS$1 + 200ll) = *(double*)((uint8*)__FB_RHS__$1 + 200ll);
 *(double*)((uint8*)THIS$1 + 208ll) = *(double*)((uint8*)__FB_RHS__$1 + 208ll);
 *(double*)((uint8*)THIS$1 + 216ll) = *(double*)((uint8*)__FB_RHS__$1 + 216ll);
 label$2012:;
}

static void _ZN4MAT3C1ERKS_( struct $4MAT3* THIS$1, struct $4MAT3* __FB_RHS__$1 )
{
 label$2013:;
 _ZN4MAT2C1Ed( (struct $4MAT2*)THIS$1, 0x1.p+0 );
 _ZN4MAT3aSERKS_( THIS$1, __FB_RHS__$1 );
 label$2014:;
}

static void _ZN4MAT4aSERKS_( struct $4MAT4* THIS$1, struct $4MAT4* __FB_RHS__$1 )
{
 label$2043:;
 _ZN4MAT3aSERKS_( (struct $4MAT3*)THIS$1, (struct $4MAT3*)__FB_RHS__$1 );
 *(double*)((uint8*)THIS$1 + 224ll) = *(double*)((uint8*)__FB_RHS__$1 + 224ll);
 *(double*)((uint8*)THIS$1 + 232ll) = *(double*)((uint8*)__FB_RHS__$1 + 232ll);
 *(double*)((uint8*)THIS$1 + 240ll) = *(double*)((uint8*)__FB_RHS__$1 + 240ll);
 *(double*)((uint8*)THIS$1 + 248ll) = *(double*)((uint8*)__FB_RHS__$1 + 248ll);
 *(double*)((uint8*)THIS$1 + 256ll) = *(double*)((uint8*)__FB_RHS__$1 + 256ll);
 *(double*)((uint8*)THIS$1 + 264ll) = *(double*)((uint8*)__FB_RHS__$1 + 264ll);
 *(double*)((uint8*)THIS$1 + 272ll) = *(double*)((uint8*)__FB_RHS__$1 + 272ll);
 *(double*)((uint8*)THIS$1 + 280ll) = *(double*)((uint8*)__FB_RHS__$1 + 280ll);
 *(double*)((uint8*)THIS$1 + 288ll) = *(double*)((uint8*)__FB_RHS__$1 + 288ll);
 *(double*)((uint8*)THIS$1 + 296ll) = *(double*)((uint8*)__FB_RHS__$1 + 296ll);
 *(double*)((uint8*)THIS$1 + 304ll) = *(double*)((uint8*)__FB_RHS__$1 + 304ll);
 *(double*)((uint8*)THIS$1 + 312ll) = *(double*)((uint8*)__FB_RHS__$1 + 312ll);
 *(double*)((uint8*)THIS$1 + 320ll) = *(double*)((uint8*)__FB_RHS__$1 + 320ll);
 *(double*)((uint8*)THIS$1 + 328ll) = *(double*)((uint8*)__FB_RHS__$1 + 328ll);
 *(double*)((uint8*)THIS$1 + 336ll) = *(double*)((uint8*)__FB_RHS__$1 + 336ll);
 *(double*)((uint8*)THIS$1 + 344ll) = *(double*)((uint8*)__FB_RHS__$1 + 344ll);
 label$2044:;
}

static void _ZN4MAT4C1ERKS_( struct $4MAT4* THIS$1, struct $4MAT4* __FB_RHS__$1 )
{
 label$2045:;
 _ZN4MAT3C1Ed( (struct $4MAT3*)THIS$1, 0x1.p+0 );
 _ZN4MAT4aSERKS_( THIS$1, __FB_RHS__$1 );
 label$2046:;
}

static void _ZN12SYSTEM_BUS_TaSERKS_( struct $12SYSTEM_BUS_T* THIS$1, struct $12SYSTEM_BUS_T* __FB_RHS__$1 )
{
 int64 TMP$1755$1;
 double* TMP$1756$1;
 double* TMP$1757$1;
 int64 TMP$1758$1;
 double* TMP$1759$1;
 double* TMP$1760$1;
 int64 TMP$1761$1;
 double* TMP$1762$1;
 double* TMP$1763$1;
 int64 TMP$1764$1;
 double* TMP$1765$1;
 double* TMP$1766$1;
 int64 TMP$1767$1;
 double* TMP$1768$1;
 double* TMP$1769$1;
 int64 TMP$1770$1;
 double* TMP$1771$1;
 double* TMP$1772$1;
 int64 TMP$1773$1;
 uint8* TMP$1774$1;
 uint8* TMP$1775$1;
 int64 TMP$1776$1;
 uint8* TMP$1777$1;
 uint8* TMP$1778$1;
 label$2097:;
 TMP$1756$1 = (double*)THIS$1;
 TMP$1757$1 = (double*)__FB_RHS__$1;
 TMP$1755$1 = 0ll;
 label$2099:;
 *TMP$1756$1 = *TMP$1757$1;
 TMP$1756$1 = (double*)((uint8*)TMP$1756$1 + 8ll);
 TMP$1757$1 = (double*)((uint8*)TMP$1757$1 + 8ll);
 TMP$1755$1 = TMP$1755$1 + 1ll;
 if( TMP$1755$1 != 16384ll ) goto label$2099;
 TMP$1759$1 = (double*)((uint8*)THIS$1 + 131072ll);
 TMP$1760$1 = (double*)((uint8*)__FB_RHS__$1 + 131072ll);
 TMP$1758$1 = 0ll;
 label$2100:;
 *TMP$1759$1 = *TMP$1760$1;
 TMP$1759$1 = (double*)((uint8*)TMP$1759$1 + 8ll);
 TMP$1760$1 = (double*)((uint8*)TMP$1760$1 + 8ll);
 TMP$1758$1 = TMP$1758$1 + 1ll;
 if( TMP$1758$1 != 16384ll ) goto label$2100;
 TMP$1762$1 = (double*)((uint8*)THIS$1 + 262144ll);
 TMP$1763$1 = (double*)((uint8*)__FB_RHS__$1 + 262144ll);
 TMP$1761$1 = 0ll;
 label$2101:;
 *TMP$1762$1 = *TMP$1763$1;
 TMP$1762$1 = (double*)((uint8*)TMP$1762$1 + 8ll);
 TMP$1763$1 = (double*)((uint8*)TMP$1763$1 + 8ll);
 TMP$1761$1 = TMP$1761$1 + 1ll;
 if( TMP$1761$1 != 2073601ll ) goto label$2101;
 TMP$1765$1 = (double*)((uint8*)THIS$1 + 16850952ll);
 TMP$1766$1 = (double*)((uint8*)__FB_RHS__$1 + 16850952ll);
 TMP$1764$1 = 0ll;
 label$2102:;
 *TMP$1765$1 = *TMP$1766$1;
 TMP$1765$1 = (double*)((uint8*)TMP$1765$1 + 8ll);
 TMP$1766$1 = (double*)((uint8*)TMP$1766$1 + 8ll);
 TMP$1764$1 = TMP$1764$1 + 1ll;
 if( TMP$1764$1 != 1024ll ) goto label$2102;
 TMP$1768$1 = (double*)((uint8*)THIS$1 + 16859144ll);
 TMP$1769$1 = (double*)((uint8*)__FB_RHS__$1 + 16859144ll);
 TMP$1767$1 = 0ll;
 label$2103:;
 *TMP$1768$1 = *TMP$1769$1;
 TMP$1768$1 = (double*)((uint8*)TMP$1768$1 + 8ll);
 TMP$1769$1 = (double*)((uint8*)TMP$1769$1 + 8ll);
 TMP$1767$1 = TMP$1767$1 + 1ll;
 if( TMP$1767$1 != 360ll ) goto label$2103;
 TMP$1771$1 = (double*)((uint8*)THIS$1 + 16862024ll);
 TMP$1772$1 = (double*)((uint8*)__FB_RHS__$1 + 16862024ll);
 TMP$1770$1 = 0ll;
 label$2104:;
 *TMP$1771$1 = *TMP$1772$1;
 TMP$1771$1 = (double*)((uint8*)TMP$1771$1 + 8ll);
 TMP$1772$1 = (double*)((uint8*)TMP$1772$1 + 8ll);
 TMP$1770$1 = TMP$1770$1 + 1ll;
 if( TMP$1770$1 != 360ll ) goto label$2104;
 _ZN9RAYTRACERaSERKS_( (struct $9RAYTRACER*)((uint8*)THIS$1 + 16864904ll), (struct $9RAYTRACER*)((uint8*)__FB_RHS__$1 + 16864904ll) );
 TMP$1774$1 = (uint8*)((uint8*)THIS$1 + 16865648ll);
 TMP$1775$1 = (uint8*)((uint8*)__FB_RHS__$1 + 16865648ll);
 TMP$1773$1 = 0ll;
 label$2105:;
 *TMP$1774$1 = *TMP$1775$1;
 TMP$1774$1 = (uint8*)(TMP$1774$1 + 1ll);
 TMP$1775$1 = (uint8*)(TMP$1775$1 + 1ll);
 TMP$1773$1 = TMP$1773$1 + 1ll;
 if( TMP$1773$1 != 2048ll ) goto label$2105;
 TMP$1777$1 = (uint8*)((uint8*)THIS$1 + 16867696ll);
 TMP$1778$1 = (uint8*)((uint8*)__FB_RHS__$1 + 16867696ll);
 TMP$1776$1 = 0ll;
 label$2106:;
 *TMP$1777$1 = *TMP$1778$1;
 TMP$1777$1 = (uint8*)(TMP$1777$1 + 1ll);
 TMP$1778$1 = (uint8*)(TMP$1778$1 + 1ll);
 TMP$1776$1 = TMP$1776$1 + 1ll;
 if( TMP$1776$1 != 2048ll ) goto label$2106;
 label$2098:;
}

static void _ZN7CPU6510aSERKS_( struct $7CPU6510* THIS$1, struct $7CPU6510* __FB_RHS__$1 )
{
 int64 TMP$1802$1;
 struct $6OPCODE* TMP$1803$1;
 struct $6OPCODE* TMP$1804$1;
 int64 TMP$1805$1;
 FBSTRING* TMP$1806$1;
 FBSTRING* TMP$1807$1;
 label$2109:;
 __builtin_memcpy( (uint8*)THIS$1, (uint8*)__FB_RHS__$1, 1 );
 __builtin_memcpy( (uint8*)((uint8*)THIS$1 + 1ll), (uint8*)((uint8*)__FB_RHS__$1 + 1ll), 1 );
 __builtin_memcpy( (uint8*)((uint8*)THIS$1 + 2ll), (uint8*)((uint8*)__FB_RHS__$1 + 2ll), 1 );
 __builtin_memcpy( (uint8*)((uint8*)THIS$1 + 3ll), (uint8*)((uint8*)__FB_RHS__$1 + 3ll), 1 );
 __builtin_memcpy( (uint16*)((uint8*)THIS$1 + 4ll), (uint16*)((uint8*)__FB_RHS__$1 + 4ll), 2 );
 __builtin_memcpy( (uint16*)((uint8*)THIS$1 + 6ll), (uint16*)((uint8*)__FB_RHS__$1 + 6ll), 2 );
 *(struct $12SYSTEM_BUS_T**)((uint8*)THIS$1 + 8ll) = *(struct $12SYSTEM_BUS_T**)((uint8*)__FB_RHS__$1 + 8ll);
 __builtin_memcpy( (struct $6OPCODE*)((uint8*)THIS$1 + 16ll), (struct $6OPCODE*)((uint8*)__FB_RHS__$1 + 16ll), 56 );
 TMP$1803$1 = (struct $6OPCODE*)((uint8*)THIS$1 + 72ll);
 TMP$1804$1 = (struct $6OPCODE*)((uint8*)__FB_RHS__$1 + 72ll);
 TMP$1802$1 = 0ll;
 label$2111:;
 __builtin_memcpy( TMP$1803$1, TMP$1804$1, 56 );
 TMP$1803$1 = (struct $6OPCODE*)((uint8*)TMP$1803$1 + 56ll);
 TMP$1804$1 = (struct $6OPCODE*)((uint8*)TMP$1804$1 + 56ll);
 TMP$1802$1 = TMP$1802$1 + 1ll;
 if( TMP$1802$1 != 256ll ) goto label$2111;
 TMP$1806$1 = (FBSTRING*)((uint8*)THIS$1 + 14408ll);
 TMP$1807$1 = (FBSTRING*)((uint8*)__FB_RHS__$1 + 14408ll);
 TMP$1805$1 = 0ll;
 label$2112:;
 fb_StrAssign( (void*)TMP$1806$1, -1ll, (void*)TMP$1807$1, -1ll, 0 );
 TMP$1806$1 = (FBSTRING*)((uint8*)TMP$1806$1 + 24ll);
 TMP$1807$1 = (FBSTRING*)((uint8*)TMP$1807$1 + 24ll);
 TMP$1805$1 = TMP$1805$1 + 1ll;
 if( TMP$1805$1 != 13ll ) goto label$2112;
 label$2110:;
}

static void _ZN5C64_TaSERKS_( struct $5C64_T* THIS$1, struct $5C64_T* __FB_RHS__$1 )
{
 label$2115:;
 _ZN4MAT4aSERKS_( (struct $4MAT4*)THIS$1, (struct $4MAT4*)__FB_RHS__$1 );
 *(struct $12SYSTEM_BUS_T**)((uint8*)THIS$1 + 352ll) = *(struct $12SYSTEM_BUS_T**)((uint8*)__FB_RHS__$1 + 352ll);
 *(struct $7CPU6510**)((uint8*)THIS$1 + 360ll) = *(struct $7CPU6510**)((uint8*)__FB_RHS__$1 + 360ll);
 label$2116:;
}

__attribute__(( constructor )) static void _GLOBAL__I( void )
{
 label$13077:;
 _ZN4MAT2C1Ed( &M2$, 0x1.p+0 );
 _ZN7VECTOR3C1Ev( &IRESOLUTION$ );
 _ZN7VECTOR4C1Ev( &IMOUSE$ );
 _ZN7VECTOR4C1Ev( &FRAGCOLOR$ );
 _ZN7VECTOR2C1Ev( &FRAGCOORD$ );
 _ZN7VECTOR2C1Ev( &Q$ );
 _ZN7VECTOR2C1Ev( &P2$ );
 _ZN7VECTOR3C1Ev( &RO$ );
 _ZN7VECTOR3C1Ev( &TA$ );
 _ZN4MAT3C1Ed( &CA$, 0x1.p+0 );
 _ZN7VECTOR3C1Ev( &RD$ );
 _ZN7VECTOR3C1Ev( &COL$ );
 _ZN7VECTOR2C1Ev( &UV$ );
 _ZN7VECTOR3C1Ev( &CW$ );
 _ZN7VECTOR3C1Ev( &CP$ );
 _ZN7VECTOR3C1Ev( &CU$ );
 _ZN7VECTOR3C1Ev( &CV$ );
 _ZN7VECTOR3C1Ev( &LIN$ );
 _ZN7VECTOR3C1Ev( &REF$ );
 _ZN7VECTOR3C1Ev( &LIGHT$ );
 _ZN7VECTOR3C1Ev( &P3$ );
 _ZN7VECTOR3C1Ev( &NOR$ );
 _ZN7VECTOR2C1Ev( &RES2$ );
 _ZN7VECTOR3C1Ev( &AOPOS$ );
 _ZN7VECTOR2C1Ev( &RV2$ );
 _ZN5C64_TC1Ev( &COMPUTER$ );
 label$13078:;
}

__attribute__(( destructor )) static void _GLOBAL__D( void )
{
 label$13080:;
 _ZN5C64_TD1Ev( &COMPUTER$ );
 label$13081:;
}
