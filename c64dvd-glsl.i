# 0 "c64dvd-glsl.c"
# 0 "<built-in>"
# 0 "<command-line>"
# 1 "c64dvd-glsl.c"
typedef signed char int8;
typedef unsigned char uint8;
typedef signed short int16;
typedef unsigned short uint16;
typedef signed int int32;
typedef unsigned int uint32;
typedef signed long long int64;
typedef unsigned long long uint64;
typedef struct { char *data; int64 len; int64 size; } FBSTRING;
typedef int8 boolean;
struct $9_FLOAT128 {
 union {
  int64 LOWPART;
  struct {
   union {
    double X;
    double R;
    double S;
   };
   union {
    double Y;
    double G;
    double T;
   };
  };
  int64 HIGHPART;
  struct {
   union {
    double Z;
    double B;
    double P;
   };
   union {
    double W;
    double A;
    double Q;
   };
  };
 };
};

extern int __$fb_structsizecheck[(sizeof( struct $9_FLOAT128 ) == 16) ? 1 : -1];
struct $9_FLOAT256 {
 union {
  int64 LOWPART1;
  struct {
   union {
    double X;
    double R;
    double S;
   };
  };
  int64 HIGHPART1;
  struct {
   union {
    double Y;
    double G;
    double T;
   };
  };
  int64 LOWPART2;
  struct {
   union {
    double Z;
    double B;
    double P;
   };
  };
  int64 HIGHPART2;
  struct {
   union {
    double W;
    double A;
    double Q;
   };
  };
 };
};
extern int __$fb_structsizecheck[(sizeof( struct $9_FLOAT256 ) == 8) ? 1 : -1];
struct $9_FLOAT512 {
 union {
  int64 LOWPART1;
  struct {
   union {
    double X;
   };
  };
  int64 HIGHPART1;
  struct {
   union {
    double R;
    double S;
   };
  };
  int64 LOWPART2;
  struct {
   union {
    double Y;
   };
  };
  int64 HIGHPART2;
  struct {
   union {
    double G;
    double T;
   };
  };
  int64 LOWPART3;
  struct {
   union {
    double Z;
   };
  };
  int64 HIGHPART3;
  struct {
   union {
    double B;
    double P;
   };
  };
  int64 LOWPART4;
  struct {
   union {
    double W;
   };
  };
  int64 HIGHPART4;
  struct {
   union {
    double A;
    double Q;
   };
  };
 };
};
extern int __$fb_structsizecheck[(sizeof( struct $9_FLOAT512 ) == 8) ? 1 : -1];
struct $16__FB_ARRAYDIMTB$ {
 int64 ELEMENTS;
 int64 LBOUND;
 int64 UBOUND;
};
extern int __$fb_structsizecheck[(sizeof( struct $16__FB_ARRAYDIMTB$ ) == 24) ? 1 : -1];
struct $8FBARRAY1IiE {
 int32* DATA;
 int32* PTR;
 int64 SIZE;
 int64 ELEMENT_LEN;
 int64 DIMENSIONS;
 int64 FLAGS;
 struct $16__FB_ARRAYDIMTB$ DIMTB[1];
};
extern int __$fb_structsizecheck[(sizeof( struct $8FBARRAY1IiE ) == 72) ? 1 : -1];
typedef uint32 (*tmp$532)( uint32 );
typedef void (*tmp$461)( uint32 );
typedef void (*tmp$541)( uint32, int32, uint8**, int32* );
typedef void (*tmp$522)( uint32, uint32, int32* );
typedef void (*tmp$536)( uint32, int32, int32*, uint8* );
typedef uint32 (*tmp$531)( void );
typedef void (*tmp$521)( uint32, uint32 );
typedef int32 (*tmp$535)( uint32, uint8* );
typedef void (*tmp$515)( int32, int32 );
typedef void (*tmp$542)( int32, float );
typedef void (*tmp$544)( int32, float, float, float );
typedef void (*tmp$548)( int32, int32, float* );
typedef void (*tmp$545)( int32, float, float, float, float );
struct $9SHADERTOY {
 uint32 FRAGMENTSHADER;
 uint32 PROGRAMOBJECT;
 FBSTRING SHADERLOG;
};
extern int __$fb_structsizecheck[(sizeof( struct $9SHADERTOY ) == 32) ? 1 : -1];
struct $6VECTOR {
 union {
  double X;
  double R;
 };
 union {
  double Y;
  double G;
 };
 union {
  double Z;
  double B;
 };
 union {
  double W;
  double A;
 };
};
extern int __$fb_structsizecheck[(sizeof( struct $6VECTOR ) == 32) ? 1 : -1];
struct $9RECTANGLE {
 struct $6VECTOR BASE$;
 struct $6VECTOR LEFTTOP;
 struct $6VECTOR RIGHTBOTTOM;
};
extern int __$fb_structsizecheck[(sizeof( struct $9RECTANGLE ) == 96) ? 1 : -1];
struct $9BMPHEADER {
 struct $9RECTANGLE BASE$ __attribute__((packed, aligned(1)));
 uint16 FILEID __attribute__((packed, aligned(1)));
 int32 FILESIZE __attribute__((packed, aligned(1)));
 uint16 RES1 __attribute__((packed, aligned(1)));
 uint16 RES2 __attribute__((packed, aligned(1)));
 int32 OFFSET __attribute__((packed, aligned(1)));
 int32 HEADERSIZE __attribute__((packed, aligned(1)));
 int32 W __attribute__((packed, aligned(1)));
 int32 H __attribute__((packed, aligned(1)));
 int16 PLANES __attribute__((packed, aligned(1)));
 int16 BITCOUNT __attribute__((packed, aligned(1)));
 int32 COMPRESSION __attribute__((packed, aligned(1)));
 int32 IMAGESIZE __attribute__((packed, aligned(1)));
 int32 PELSPERX __attribute__((packed, aligned(1)));
 int32 PELSPERY __attribute__((packed, aligned(1)));
 int32 COLORSINUSE __attribute__((packed, aligned(1)));
 int32 COLORSINPORTANT __attribute__((packed, aligned(1)));
};
extern int __$fb_structsizecheck[(sizeof( struct $9BMPHEADER ) == 150) ? 1 : -1];
struct $8PALENTRY {
 struct $9BMPHEADER BASE$;
 uint8 R;
 uint8 G;
 uint8 B;
 uint8 FLAG;
};
extern int __$fb_structsizecheck[(sizeof( struct $8PALENTRY ) == 154) ? 1 : -1];
struct $8MATERIAL {
 struct $8PALENTRY BASE$ __attribute__((aligned(8)));
 int64 ID;
 struct $6VECTOR COLOR;
 double ROUGH_REFLECTION;
 double MIRROR_REFLECTION;
 double CONCENTRIC_REFLECTION;
 double PORTION_OF_MATERIAL;
 double PORTION_OF_MIRROR;
 double TRANSPARENCY;
 double REFRACTIVE_INDEX;
 int8 BUILDSHADOW;
 int8 RECEIVESHADOW;
 int8 MIXCOLORS;
 int8 NEEDCOORDS;
 int64 COLORMAPID;
 struct $6VECTOR COLORMAPFACTOR;
 int64 BUMPMAPID;
 struct $6VECTOR BUMPMAPFACTOR;
 int64 STAMPMAPID;
 struct $6VECTOR STAMPMAPFACTOR;
 int64 TRANSMAPID;
 struct $6VECTOR TRANSMAPFACTOR;
};
extern int __$fb_structsizecheck[(sizeof( struct $8MATERIAL ) == 424) ? 1 : -1];
typedef int64 $14OBJECT3D_TYPES;
struct $4POLY {
 struct $8MATERIAL BASE$;
 int64 ID;
 struct $9RECTANGLE SCREENREC;
 int64 NVERTICES;
 struct $6VECTOR** VERTICES;
 struct $6VECTOR NORMALE;
 struct $6VECTOR CROSS;
 double DOTV0VP;
};
extern int __$fb_structsizecheck[(sizeof( struct $4POLY ) == 616) ? 1 : -1];
struct $8OBJECT3D {
 $14OBJECT3D_TYPES TYPE;
 int64 ID;
 struct $9RECTANGLE SCREENREC;
 struct $6VECTOR POSITION;
 int64 MATERIALID;
 double RADIUS;
 int64 NVERTICES;
 struct $6VECTOR** VERTICES;
 int64 NPOLYS;
 struct $4POLY** POLYS;
};
extern int __$fb_structsizecheck[(sizeof( struct $8OBJECT3D ) == 192) ? 1 : -1];
typedef int64 $11LIGHT_TYPES;
struct $5LIGHT {
 $11LIGHT_TYPES TYPE;
 int64 ID;
 struct $6VECTOR POSITION;
 struct $6VECTOR DIRECTION;
 struct $6VECTOR NORMALE;
 struct $6VECTOR RNORMALE;
 struct $6VECTOR COLOR;
 double MAXWIDTH;
 double SPOTANGLE;
 int8 BUILDSHADOW;
};
extern int __$fb_structsizecheck[(sizeof( struct $5LIGHT ) == 200) ? 1 : -1];
typedef int64 $11MAP2D_TYPES;
struct $5MAP2D {
 int64 MAPID;
 $11MAP2D_TYPES TYPE;
 struct $9BMPHEADER HEADER __attribute__((aligned(8)));
 uint8* PCOLORPIXELS;
 struct $6VECTOR FACTOR;
};
extern int __$fb_structsizecheck[(sizeof( struct $5MAP2D ) == 208) ? 1 : -1];
struct $7AAPIXEL {
 struct $8MATERIAL BASE$;
 int64 V;
 int64 X;
 int64 Y;
};
extern int __$fb_structsizecheck[(sizeof( struct $7AAPIXEL ) == 448) ? 1 : -1];
struct $9RAYTRACER {
 struct $8MATERIAL BASE$;
 int64 SCREENWIDTH;
 int64 SCREENHEIGHT;
 int64 XCENTER;
 int64 YCENTER;
 double SCALE;
 double SCALEINV;
 struct $6VECTOR AMBIENT;
 double PORTION_OF_AMBIENT;
 struct $6VECTOR BACKGROUND;
 double PORTION_OF_BACKGROUND;
 int64 MAXRAYDEPTH;
 int64 RAYDEPTH;
 struct $6VECTOR SRC;
 struct $6VECTOR DES;
 struct $6VECTOR HITPOINT;
 int64 NMATERIALS;
 struct $8MATERIAL** MATERIALS;
 int64 NOBJECTS;
 struct $8OBJECT3D** OBJECTS;
 int64 NLIGHTS;
 struct $5LIGHT** LIGHTS;
 int64 NMAPS;
 struct $5MAP2D** MAPS;
 int64 NAAPIXELS;
 struct $7AAPIXEL** AAPIXELS;
};
extern int __$fb_structsizecheck[(sizeof( struct $9RAYTRACER ) == 744) ? 1 : -1];
struct $7FBARRAYIvE {
 void* DATA;
 void* PTR;
 int64 SIZE;
 int64 ELEMENT_LEN;
 int64 DIMENSIONS;
 int64 FLAGS;
 struct $16__FB_ARRAYDIMTB$ DIMTB[8];
};
extern int __$fb_structsizecheck[(sizeof( struct $7FBARRAYIvE ) == 240) ? 1 : -1];
typedef int64 $13BUMP_METHODES;
typedef int64 $6AATYPE;
struct $7VECTOR2 {
 union {
  double X;
  double U;
  double S;
 };
 union {
  double Y;
  double V;
  double T;
 };
};
extern int __$fb_structsizecheck[(sizeof( struct $7VECTOR2 ) == 16) ? 1 : -1];
struct $7VECTOR3 {
 struct $7VECTOR2 BASE$;
 union {
  double X;
  double R;
  double S;
 };
 union {
  double Y;
  double G;
  double T;
 };
 union {
  double Z;
  double B;
  double P;
 };
};
extern int __$fb_structsizecheck[(sizeof( struct $7VECTOR3 ) == 40) ? 1 : -1];
struct $7VECTOR4 {
 struct $7VECTOR3 BASE$;
 union {
  double X;
  double R;
  double S;
 };
 union {
  double Y;
  double G;
  double T;
 };
 union {
  double Z;
  double B;
  double P;
 };
 union {
  double W;
  double A;
  double Q;
 };
};
extern int __$fb_structsizecheck[(sizeof( struct $7VECTOR4 ) == 72) ? 1 : -1];
struct $5PLANE {
 struct $7VECTOR4 BASE$;
 struct $7VECTOR3 N;
 double D;
};
extern int __$fb_structsizecheck[(sizeof( struct $5PLANE ) == 120) ? 1 : -1];
typedef int64 $10EPLANESIDE;
struct $4MAT2 {
 struct $5PLANE BASE$;
 double M00;
 double M10;
 double M01;
 double M11;
};
extern int __$fb_structsizecheck[(sizeof( struct $4MAT2 ) == 152) ? 1 : -1];
struct $4MAT3 {
 struct $4MAT2 BASE$;
 double M00;
 double M10;
 double M20;
 double M01;
 double M11;
 double M21;
 double M02;
 double M12;
 double M22;
};
extern int __$fb_structsizecheck[(sizeof( struct $4MAT3 ) == 224) ? 1 : -1];
struct $4MAT4 {
 struct $4MAT3 BASE$;
 double M00;
 double M10;
 double M20;
 double M30;
 double M01;
 double M11;
 double M21;
 double M31;
 double M02;
 double M12;
 double M22;
 double M32;
 double M03;
 double M13;
 double M23;
 double M33;
};
extern int __$fb_structsizecheck[(sizeof( struct $4MAT4 ) == 352) ? 1 : -1];
struct $9SAMPLER2D {
 int32 WIDTH;
 int32 HEIGHT;
 int32 BYTESPERPIXEL;
 int32 PITCH;
 void* PIXELDATA;
};
extern int __$fb_structsizecheck[(sizeof( struct $9SAMPLER2D ) == 24) ? 1 : -1];
struct $12SYSTEM_BUS_T {
 double KERNAL[16384];
 double BASIC[16384];
 double CHAR[2073601];
 double COL[1024];
 double SINTABLE[360];
 double COSTABLE[360];
 struct $9RAYTRACER RAYTRACER;
 uint8 RESULT[2048];
 uint8 RESULT2[2048];
};
extern int __$fb_structsizecheck[(sizeof( struct $12SYSTEM_BUS_T ) == 16869744) ? 1 : -1];
struct $5FLAGS {
 uint8 __fb_struct_body[8];
};
extern int __$fb_structsizecheck[(sizeof( struct $5FLAGS ) == 8) ? 1 : -1];
struct $5MULTI {
 union {
  void* ADR0;
  void* ADR1;
  struct {
   union {
    double UFPU64;
    double SFPU64;
    struct {
     union {
      uint64 U64;
      int64 S64;
      struct {
       union {
        float UFPU32;
        float SFPU32;
        struct {
         union {
          uint32 U32;
          int32 S32;
          struct {
           union {
            uint16 U16;
            int16 S16;
            struct {
             union {
              uint8 ULO;
              int8 SLO;
             };
             union {
              uint8 UHI;
              int8 SHI;
             };
            };
           };
          };
         };
        };
       };
      };
     };
    };
   };
  };
 };
};
extern int __$fb_structsizecheck[(sizeof( struct $5MULTI ) == 8) ? 1 : -1];
struct $7CPU6510;
typedef void (*tmp$1799)( struct $7CPU6510* );
struct $6OPCODE {
 uint64 CODE;
 uint8 NAM[4];
 uint64 ADRMODE;
 uint64 BYTES;
 uint64 TICKS;
 struct $5MULTI OP;
 tmp$1799 DECODE;
};
extern int __$fb_structsizecheck[(sizeof( struct $6OPCODE ) == 56) ? 1 : -1];
struct $7CPU6510 {
 union {
  uint8 P;
  struct $5FLAGS F;
 };
 union {
  uint8 A;
  int8 SA;
 };
 union {
  uint8 X;
  int8 SX;
 };
 union {
  uint8 Y;
  int8 SY;
 };
 union {
  uint16 PC;
  struct {
   uint8 PL;
   uint8 PH;
  };
 };
 union {
  uint16 SP;
  struct {
   uint8 S;
   uint8 MSB;
  };
 };
 struct $12SYSTEM_BUS_T* MEM;
 struct $6OPCODE CODE;
 struct $6OPCODE OPCODES[256];
 FBSTRING STRADRMODES[13];
};
extern int __$fb_structsizecheck[(sizeof( struct $7CPU6510 ) == 14728) ? 1 : -1];
struct $5C64_T {
 struct $4MAT4 BASE$;
 struct $12SYSTEM_BUS_T* MEM;
 struct $7CPU6510* CPU_MOS6510;
};
extern int __$fb_structsizecheck[(sizeof( struct $5C64_T ) == 368) ? 1 : -1];
struct $7FBARRAYI8FBSTRINGE {
 FBSTRING* DATA;
 FBSTRING* PTR;
 int64 SIZE;
 int64 ELEMENT_LEN;
 int64 DIMENSIONS;
 int64 FLAGS;
 struct $16__FB_ARRAYDIMTB$ DIMTB[8];
};
extern int __$fb_structsizecheck[(sizeof( struct $7FBARRAYI8FBSTRINGE ) == 240) ? 1 : -1];
struct $7FBARRAYIKvE {
 void* DATA;
 void* PTR;
 int64 SIZE;
 int64 ELEMENT_LEN;
 int64 DIMENSIONS;
 int64 FLAGS;
 struct $16__FB_ARRAYDIMTB$ DIMTB[8];
};
extern int __$fb_structsizecheck[(sizeof( struct $7FBARRAYIKvE ) == 240) ? 1 : -1];
struct $19BOUNDING_BOX_STRUCT {
 double LOWER_LEFT;
 double LENGTHS;
};
extern int __$fb_structsizecheck[(sizeof( struct $19BOUNDING_BOX_STRUCT ) == 16) ? 1 : -1];
struct $7FBARRAYI19BOUNDING_BOX_STRUCTE {
 struct $19BOUNDING_BOX_STRUCT* DATA;
 struct $19BOUNDING_BOX_STRUCT* PTR;
 int64 SIZE;
 int64 ELEMENT_LEN;
 int64 DIMENSIONS;
 int64 FLAGS;
 struct $16__FB_ARRAYDIMTB$ DIMTB[8];
};
extern int __$fb_structsizecheck[(sizeof( struct $7FBARRAYI19BOUNDING_BOX_STRUCTE ) == 240) ? 1 : -1];
struct $9QBS_FIELD {
 int64 FILENO;
 int64 FILEID;
 int64 SIZE;
 int64 OFFSET;
};
extern int __$fb_structsizecheck[(sizeof( struct $9QBS_FIELD ) == 32) ? 1 : -1];
struct $3QBS {
 uint8* CHR;
 int32 LEN;
 uint8 IN_MEM64;
 uint16* MEM64_DESCRIPTOR;
 uint16 MEM64_DESCRIPTOR_OFFSET;
 uint32 LISTI;
 uint8 TMP;
 uint32 TMPLISTI;
 uint8 FIXED;
 uint8 READONLY;
 struct $9QBS_FIELD* FIELD;
};
extern int __$fb_structsizecheck[(sizeof( struct $3QBS ) == 56) ? 1 : -1];
struct $23MEM64_DYNAMIC_LINK_TYPE;
struct $23MEM64_DYNAMIC_LINK_TYPE {
 double* OFFSET;
 double* TOP;
 uint64 SIZE;
 uint64 I;
 struct $23MEM64_DYNAMIC_LINK_TYPE* NEXT_PTR;
};
extern int __$fb_structsizecheck[(sizeof( struct $23MEM64_DYNAMIC_LINK_TYPE ) == 40) ? 1 : -1];
struct $15GFS_FILE_STRUCT {
 int64 ID;
 uint8 OPEN;
 uint8 READ;
 uint8 WRITE;
 uint8 LOCK_READ_VAR;
 uint8 LOCK_WRITE_VAR;
 int64 POS;
 uint8 EOF_REACHED;
 uint8 EOF_PASSED;
 int32 FILENO;
 uint8 TYPE;
 int64 RECORD_LENGTH;
 uint8* FIELD_BUFFER;
 struct $3QBS** FIELD_STRINGS;
 int32 FIELD_STRINGS_N;
 int64 COLUMN;
 uint32* FILE_HANDLE;
 uint32* FILE_HANDLE_O;
 uint8 COM_PORT;
 int32 COM_BAUD_RATE;
 int8 COM_PARITY;
 int8 COM_DATA_BITS_PER_BYTE;
 int8 COM_STOP_BITS;
 int8 COM_BIN_ASC;
 int8 COM_ASC_LF;
 int8 COM_RS;
 int32 COM_CD_X;
 int32 COM_CS_X;
 int32 COM_DS_X;
 int32 COM_OP_X;
 uint8 SCRN;
};
extern int __$fb_structsizecheck[(sizeof( struct $15GFS_FILE_STRUCT ) == 136) ? 1 : -1];
union $5CHEAT {
 double D;
 struct {
  int32 LS;
  int32 MS;
 };
};
extern int __$fb_structsizecheck[(sizeof( union $5CHEAT ) == 8) ? 1 : -1];
struct $4VEC3 {
 float X;
 float Y;
 float Z;
};
extern int __$fb_structsizecheck[(sizeof( struct $4VEC3 ) == 12) ? 1 : -1];
struct $10THREADSCAN {
 double YSCAN;
 double XEND;
 double YEND;
 void* THREAD_HANDLE;
};
extern int __$fb_structsizecheck[(sizeof( struct $10THREADSCAN ) == 32) ? 1 : -1];
struct $21MULTIBOOT_MODULE_INFO {
 uint64 MOD_START __attribute__((packed, aligned(1)));
 uint64 MOD_END __attribute__((packed, aligned(1)));
 uint64 MOD_STRING __attribute__((packed, aligned(1)));
 uint64 RESERVED __attribute__((packed, aligned(1)));
};
extern int __$fb_structsizecheck[(sizeof( struct $21MULTIBOOT_MODULE_INFO ) == 32) ? 1 : -1];
struct $14MULTIBOOT_INFO {
 uint64 FLAGS __attribute__((packed, aligned(1)));
 uint64 MEM_LOWER __attribute__((packed, aligned(1)));
 uint64 MEM_UPPER __attribute__((packed, aligned(1)));
 uint64 BOOT_DEVICE __attribute__((packed, aligned(1)));
 int8* CMDLINE __attribute__((packed, aligned(1)));
 uint64 MODS_COUNT __attribute__((packed, aligned(1)));
 struct $21MULTIBOOT_MODULE_INFO* MODS_ADDR __attribute__((packed, aligned(1)));
 uint64 SYMS[5] __attribute__((packed, aligned(1)));
 uint64 MMAP_LENGTH __attribute__((packed, aligned(1)));
 uint64 MMAP_ADDR __attribute__((packed, aligned(1)));
 uint64 DRIVES_LENGTH __attribute__((packed, aligned(1)));
 uint64 DRIVES_ADDR __attribute__((packed, aligned(1)));
 uint64 CONFIG_TABLE __attribute__((packed, aligned(1)));
 int8* BOOT_LOADER_NAME __attribute__((packed, aligned(1)));
 uint64 APM_TABLE __attribute__((packed, aligned(1)));
 uint64 VBE_CONTROL_INFO __attribute__((packed, aligned(1)));
 uint64 VBE_MODE_INFO __attribute__((packed, aligned(1)));
 uint16 VBE_MODE __attribute__((packed, aligned(1)));
 uint16 VBE_INTERFACE_SEG __attribute__((packed, aligned(1)));
 uint16 VBE_INTERFACE_OFF __attribute__((packed, aligned(1)));
 uint16 VBE_INTERFACE_LEN __attribute__((packed, aligned(1)));
};
extern int __$fb_structsizecheck[(sizeof( struct $14MULTIBOOT_INFO ) == 176) ? 1 : -1];
struct $8FBARRAY1IyE {
 uint64* DATA;
 uint64* PTR;
 int64 SIZE;
 int64 ELEMENT_LEN;
 int64 DIMENSIONS;
 int64 FLAGS;
 struct $16__FB_ARRAYDIMTB$ DIMTB[1];
};
extern int __$fb_structsizecheck[(sizeof( struct $8FBARRAY1IyE ) == 72) ? 1 : -1];
struct $4LIST {
 int64 USER_STRUCTURE_SIZE;
 int64 INTERNAL_STRUCTURE_SIZE;
 uint8* STRUCTURE;
 int64 STRUCTURES;
 int64 STRUCTURES_LAST;
 int64* STRUCTURE_FREED;
 int64* STRUCTURE_FREED_CLEANUP;
 int64 STRUCTURES_FREED;
 int64 STRUCTURES_FREED_LAST;
 int64 STRUCTURE_BASE[65];
 int64 STRUCTURE_BASES;
 int64* INDEX;
 int64* INDEX_CLEANUP;
 int64 INDEXES;
 int64 INDEXES_LAST;
};
extern int __$fb_structsizecheck[(sizeof( struct $4LIST ) == 632) ? 1 : -1];
struct $10CPU_STRUCT {
 union {
  struct {
   union {
    uint8 AL;
    int8 AL_SIGNED;
   };
   union {
    uint8 AH;
    int8 AH_SIGNED;
   };
  };
  uint16 AX;
  int16 AX_SIGNED;
  uint64 EAX;
  int64 EAX_SIGNED;
  uint64 RAX;
  int64 RAX_SIGNED;
 };
 union {
  struct {
   union {
    uint8 BL;
    int8 BL_SIGNED;
   };
   union {
    uint8 BH;
    int8 BH_SIGNED;
   };
  };
  uint16 BX;
  int16 BX_SIGNED;
  uint64 EBX;
  int64 EBX_SIGNED;
  uint64 RBX;
  int64 RBX_SIGNED;
 };
 union {
  struct {
   union {
    uint8 CL;
    int8 CL_SIGNED;
   };
   union {
    uint8 CH;
    int8 CH_SIGNED;
   };
  };
  uint16 CX;
  int16 CX_SIGNED;
  uint64 ECX;
  int64 ECX_SIGNED;
  uint64 RCX;
  int64 RCX_SIGNED;
 };
 union {
  struct {
   union {
    uint8 DL;
    int8 DL_SIGNED;
   };
   union {
    uint8 DH;
    int8 DH_SIGNED;
   };
  };
  uint16 DX;
  int16 DX_SIGNED;
  uint64 EDX;
  int64 EDX_SIGNED;
  uint64 RDX;
  int64 RDX_SIGNED;
 };
 union {
  uint16 SI;
  int16 SI_SIGNED;
  uint64 ESI;
  int64 ESI_SIGNED;
  uint64 RSI;
  int64 RSI_SIGNED;
 };
 union {
  uint16 DI;
  int16 DI_SIGNED;
  uint64 EDI;
  int64 EDI_SIGNED;
  uint64 RDI;
  int64 RDI_SIGNED;
 };
 union {
  uint16 BP;
  int16 BP_SIGNED;
  uint64 EBP;
  int64 EBP_SIGNED;
  uint64 RBP;
  int64 RBP_SIGNED;
 };
 union {
  uint16 SP;
  int16 SP_SIGNED;
  uint64 ESP;
  int64 ESP_SIGNED;
 };
 union {
  uint16 CS;
  uint16 CS_SIGNED;
 };
 union {
  uint16 SS;
  uint16 SS_SIGNED;
 };
 union {
  uint16 DS;
  uint16 DS_SIGNED;
 };
 union {
  uint16 ES;
  uint16 ES_SIGNED;
 };
 union {
  uint16 FS;
  uint16 FS_SIGNED;
 };
 union {
  uint16 GS;
  uint16 GS_SIGNED;
 };
 union {
  uint16 IP;
  uint16 IP_SIGNED;
  uint16 EIP;
  uint16 EIP_SIGNED;
  uint16 RIP;
  uint16 RIP_SIGNED;
 };
 uint8 OVERFLOW_FLAG;
 uint8 DIRECTION_FLAG;
 uint8 INTERRUPT_FLAG;
 uint8 TRAP_FLAG;
 uint8 SIGN_FLAG;
 uint8 ZERO_FLAG;
 uint8 AUXILIARY_FLAG;
 uint8 PARITY_FLAG;
 uint8 CARRY_FLAG;
};
extern int __$fb_structsizecheck[(sizeof( struct $10CPU_STRUCT ) == 88) ? 1 : -1];
typedef int64 (*tmp$407)( int8*, int64, int64, int64, int64, int64 );
typedef void (*tmp$2)( void );
typedef int64 (*tmp$408)( int64, int64, int64, int64 );
typedef int64 (*tmp$409)( int64*, int64*, int64*, int64*, int64* );
typedef void (*tmp$410)( int64, int64, int64, int64 );
typedef void (*tmp$411)( int8* );
typedef int64 (*tmp$412)( int64, int64 );
typedef int64* (*tmp$413)( int64, int64* );
struct $9GFXDRIVER {
 int8* NAME_DATA;
 tmp$407 INIT;
 tmp$2 EXIT;
 tmp$2 LOCK;
 tmp$2 UNLOCK;
 tmp$408 SET_PALETTE;
 tmp$2 WAIT_VSYNC;
 tmp$409 GET_MOUSE;
 tmp$410 SET_MOUSE;
 tmp$411 SET_WINDOW_TITLE;
 tmp$412 SET_WINDOW_POS;
 tmp$413 FETCH_MODES;
 tmp$2 FLIP;
 tmp$2 POLL_EVENTS;
};
extern int __$fb_structsizecheck[(sizeof( struct $9GFXDRIVER ) == 112) ? 1 : -1];
struct $9PALETTE_T {
 int64 COLORS;
 uint8* PAL_DATA;
};
extern int __$fb_structsizecheck[(sizeof( struct $9PALETTE_T ) == 16) ? 1 : -1];
struct $4FONT {
 int64 W;
 int64 H;
 uint8* FONT_DATA;
};
extern int __$fb_structsizecheck[(sizeof( struct $4FONT ) == 24) ? 1 : -1];
struct $14_GFX_CHAR_CELL {
 int8 CH;
 uint64 FG;
 uint64 BG;
};
extern int __$fb_structsizecheck[(sizeof( struct $14_GFX_CHAR_CELL ) == 24) ? 1 : -1];
struct $6_EVENT {
 int64 TYPE_DATA;
 union {
  struct {
   int64 SCANCODE;
   int64 ASCII;
  };
  int64 Z;
  int64 W;
 };
};
extern int __$fb_structsizecheck[(sizeof( struct $6_EVENT ) == 24) ? 1 : -1];
struct $5FBGFX {
 int64 ID;
 int64 MODE_NUM;
 uint8* PAGE;
 int64 NUM_PAGES;
 int64 VISIBLE_PAGE;
 uint8* FRAMEBUFFER;
 int64 W;
 int64 H;
 int64 DEPTH;
 int64 BPP;
 int64 PITCH;
 uint64 PALETTE_DATA;
 uint64* DEVICE_PALETTE;
 uint8* COLOR_ASSOCIATION;
 int8* DIRTY;
 struct $9GFXDRIVER* DRIVER;
 int64 COLOR_MASK;
 struct $9PALETTE_T* DEFAULT_PALETTE;
 int64 SCANLINE_SIZE;
 int64 CURSOR_X;
 int64 CURSOR_Y;
 struct $4FONT* FONT;
 int64 TEXT_W;
 int64 TEXT_H;
 struct $9_FLOAT128 ASPECT;
 int8* KEY;
 int64 REFRESH_RATE;
 struct $14_GFX_CHAR_CELL* CON_PAGES;
 struct $6_EVENT* EVENT_QUEUE;
 int64 EVENT_HEAD;
 int64 EVENT_TAIL;
 void** EVENT_MUTEX;
 int64 FLAGS;
 int64 LOCK_COUNT;
};
extern int __$fb_structsizecheck[(sizeof( struct $5FBGFX ) == 280) ? 1 : -1];
struct $9_XPRIVATE {
 int64 DUMMY1;
 FBSTRING DUMMY2;
};
extern int __$fb_structsizecheck[(sizeof( struct $9_XPRIVATE ) == 32) ? 1 : -1];
typedef uint32 (*tmp$397)( uint32, uint32, void* );
typedef void (*tmp$398)( uint8*, uint8*, int32, int32, int32, int32, int32, tmp$397, void* );
struct $9_XDISPLAY {
 int32* EXT_DATA;
 int32* PRIVATE1;
 int64 FD;
 int64 PRIVATE2;
 int64 PROTO_MAJOR_VERSION;
 int64 PROTO_MINOR_VERSION;
 FBSTRING VENDOR;
 uint32 PRIVATE3;
 uint32 PRIVATE4;
 uint32 PRIVATE5;
 int64 PRIVATE6;
 int32* RESOURCE_ALLOC;
 int64 BYTE_ORDER;
 int64 BITMAP_UNIT;
 int64 BITMAP_PAD;
 int64 BITMAP_BIT_ORDER;
 int64 NFORMATS;
 int32* PIXMAP_FORMAT;
 int64 PRIVATE8;
 int64 RELEASE;
 int32* PRIVATE9;
 int32* PRIVATE10;
 int64 QLEN;
 uint32 LAST_REQUEST_READ;
 uint32 REQUEST;
 int32* PRIVATE11;
 int32* PRIVATE12;
 int32* PRIVATE13;
 int32* PRIVATE14;
 uint64 MAX_REQUEST_SIZE;
 int32* DATA;
 int32* PRIVATE15;
 FBSTRING DISPLAY_NAME;
 int64 DEFAULT_SCREEN;
 int64 NSCREENS;
 int32* SCREENS;
 uint32 MOTION_BUFFER;
 uint32 PRIVATE16;
 int64 MIN_KEYCODE;
 int64 MAX_KEYCODE;
 int32* PRIVATE17;
 int32* PRIVATE18;
 int64 PRIVATE19;
 FBSTRING XDEFAULTS;
 int32 HANDLE;
 tmp$397 BLENDFUNC;
 tmp$398 PUTFUNC;
 int32 WIDTH;
 int32 HEIGHT;
 int32 BPP;
 int32 REFRESH_RATE;
 int32 FLAGS;
 int32 COLOR;
};
extern int __$fb_structsizecheck[(sizeof( struct $9_XDISPLAY ) == 424) ? 1 : -1];




int32 fb_ArrayRedimEx( struct $7FBARRAYIvE*, uint64, int32, int32, uint64, ... );
int32 fb_ArrayRedimPresvEx( struct $7FBARRAYIvE*, uint64, int32, int32, uint64, ... );
int32 fb_ArrayRedimObj( struct $7FBARRAYIvE*, uint64, void*, void*, uint64, ... );
void fb_ArrayDestructStr( struct $7FBARRAYIvE* );
int32 fb_ArrayErase( struct $7FBARRAYIvE* );
int32 fb_ArrayEraseObj( struct $7FBARRAYIvE*, void*, void* );
void fb_ArrayStrErase( struct $7FBARRAYIvE* );
int64 fb_ArrayUBound( struct $7FBARRAYIKvE*, int64 );
int32 fb_Locate( int32, int32, int32, int32, int32 );
void fb_Cls( int32 );
FBSTRING* fb_Inkey( void );
int32 fb_PageCopy( int32, int32 );
void fb_DataRestore( void* );
void fb_DataReadStr( void*, int64, int32 );
void fb_DataReadInt( int32* );
void fb_DataReadLongint( int64* );
void fb_DataReadULongint( uint64* );
void* fb_ErrorThrowEx( int32, int32, uint8*, void*, void* );
int32 fb_FileOpen( FBSTRING*, uint32, uint32, uint32, int32, int32 );
int32 fb_FileClose( int32 );
int32 fb_FilePutLarge( int32, int64, void*, uint64 );
int32 fb_FileGetLarge( int32, int64, void*, uint64 );
int32 fb_FileGetArrayLarge( int32, int64, struct $7FBARRAYIvE* );
int32 fb_FileSeek( int32, int32 );
int32 fb_FileLineInput( int32, void*, int64, int32 );
int32 fb_LineInput( FBSTRING*, void*, int64, int32, int32, int32 );
int32 fb_FileInput( int32 );
int32 fb_ConsoleInput( FBSTRING*, int32, int32 );
int32 fb_InputString( void*, int64, int32 );
int32 fb_FileFree( void );
int32 fb_FileEof( int32 );
int64 fb_FileSize( int32 );
void fb_GfxPset( void*, float, float, uint32, int32, int32 );
uint32 fb_GfxPoint( void*, float, float );
void fb_GfxLine( void*, float, float, float, float, uint32, int32, uint32, int32 );
void fb_GfxEllipse( void*, float, float, float, uint32, float, float, float, int32, int32 );
void fb_GfxPaint( void*, float, float, uint32, uint32, FBSTRING*, int32, int32 );
void fb_GfxDraw( void*, FBSTRING* );
int64 fb_GfxDrawString( void*, float, float, int32, FBSTRING*, uint32, void*, int32, void*, void*, void* );
void fb_GfxPalette( int32, int32, int32, int32 );
int32 fb_GfxPut( void*, float, float, void*, int32, int32, int32, int32, int32, int32, void*, int32, void*, void* );
int32 fb_GfxScreen( int32, int32, int32, int32, int32 );
int32 fb_GfxScreenRes( int32, int32, int32, int32, int32, int32 );
int32 fb_GfxBload( FBSTRING*, void*, void* );
int32 fb_GfxBsave( FBSTRING*, void*, uint32, void* );
int32 fb_GfxFlip( int32, int32 );
int32 fb_GfxWaitVSync( void );
void fb_GfxLock( void );
void fb_GfxUnlock( int32, int32 );
void* fb_GfxScreenPtr( void );
void fb_GfxSetWindowTitle( FBSTRING* );
int32 fb_GetMouse64( int64*, int64*, int64*, int64*, int64* );
void fb_GfxScreenInfo32( int32*, int32*, int32*, int32*, int32*, int32*, FBSTRING* );
void fb_GfxScreenInfo64( int64*, int64*, int64*, int64*, int64*, int64*, FBSTRING* );
int32 fb_GfxScreenList( int32 );
void* fb_GfxImageCreate( int32, int32, uint32, int32, int32 );
void fb_GfxImageDestroy( void* );
int32 fb_GfxImageInfo32( void*, int32*, int32*, int32*, int32*, void**, int32* );
int32 fb_GfxImageInfo64( void*, int64*, int64*, int64*, int64*, void**, int64* );
void fb_GfxControl_i64( int32, int64*, int64*, int64*, int64* );
void* fb_GfxGetGLProcAddress( uint8* );
void fb_hPutPSet( uint8*, uint8*, int32, int32, int32, int32, int32, void*, void* );
void fb_hPutAlpha( uint8*, uint8*, int32, int32, int32, int32, int32, void*, void* );
double pow( double, double );
double fb_Rnd( float );
uint64 fb_GetMemAvail( int32 );
void* malloc( uint64 );
void* calloc( uint64, uint64 );
void* realloc( void*, uint64 );
void free( void* );
void fb_PrintVoid( int32, int32 );
void fb_PrintULongint( int32, uint64, int32 );
void fb_PrintString( int32, FBSTRING*, int32 );
FBSTRING* fb_StrInit( void*, int64, void*, int64, int32 );
FBSTRING* fb_StrAssign( void*, int64, void*, int64, int32 );
void fb_StrDelete( FBSTRING* );
FBSTRING* fb_StrConcat( FBSTRING*, void*, int64, void*, int64 );
int32 fb_StrCompare( void*, int64, void*, int64 );
FBSTRING* fb_StrConcatAssign( void*, int64, void*, int64, int32 );
FBSTRING* fb_StrAllocTempResult( FBSTRING* );
FBSTRING* fb_StrAllocTempDescZEx( uint8*, int64 );
FBSTRING* fb_UIntToStr( uint32 );
FBSTRING* fb_LongintToStr( int64 );
FBSTRING* fb_ULongintToStr( uint64 );
FBSTRING* fb_DoubleToStr( double );
FBSTRING* fb_StrMid( FBSTRING*, int64, int64 );
int64 fb_StrLen( void*, int64 );
uint32 fb_ASC( FBSTRING*, int64 );
FBSTRING* fb_CHR( int32, ... );
double fb_VAL( FBSTRING* );
FBSTRING* fb_HEX_l( uint64 );
FBSTRING* fb_HEXEx_b( uint8, int32 );
FBSTRING* fb_HEXEx_s( uint16, int32 );
FBSTRING* fb_SPACE( int64 );
FBSTRING* fb_StrLcase2( FBSTRING*, int32 );
void fb_Init( int32, uint8**, int32 );
void fb_End( int32 );
double fb_Timer( void );
int32 fb_Shell( FBSTRING* );
int32 fb_Chain( FBSTRING* );
void fb_Sleep( int32 );
int32 fb_SleepEx( int32, int32 );
void fb_Beep( void );
int32 memcmp( void*, void*, uint64 );
void* memcpy( void*, void*, uint64 );
void* memmove( void*, void*, uint64 );
void* memset( void*, int32, uint64 );
double fabs( double );
float sinf( float );
float cosf( float );
float tanf( float );
float asinf( float );
float acosf( float );
float atan2f( float, float );
float expf( float );
float logf( float );
float log2f( float );
float powf( float, float );
float sqrtf( float );
float ceilf( float );
float floorf( float );
void* calloc( uint64, uint64 );
void* malloc( uint64 );
void* realloc( void*, uint64 );
void free( void* );
int64 llabs( int64 );
void _ZN9_FLOAT128C1Ev( struct $9_FLOAT128* );
void _ZN9_FLOAT128C1Edd( struct $9_FLOAT128*, double, double );
void _ZN9_FLOAT128C1Edddd( struct $9_FLOAT128*, double, double, double, double );
void _ZN9_FLOAT128aSEd( struct $9_FLOAT128*, double );
void _ZN9_FLOAT128aSEy( struct $9_FLOAT128*, uint64 );
void _ZN9_FLOAT128aSERS_( struct $9_FLOAT128*, struct $9_FLOAT128* );
uint64 _ZN9_FLOAT128cvyEv( struct $9_FLOAT128* );
void _ZN9_FLOAT128pLEy( struct $9_FLOAT128*, uint64 );
struct $9_FLOAT128* _ZngR9_FLOAT128( struct $9_FLOAT128*, struct $9_FLOAT128* );
struct $9_FLOAT128* _ZplR9_FLOAT128S0_( struct $9_FLOAT128*, struct $9_FLOAT128*, struct $9_FLOAT128* );
struct $9_FLOAT128* _ZmiR9_FLOAT128S0_( struct $9_FLOAT128*, struct $9_FLOAT128*, struct $9_FLOAT128* );
struct $9_FLOAT128* _ZmlR9_FLOAT128S0_( struct $9_FLOAT128*, struct $9_FLOAT128*, struct $9_FLOAT128* );
struct $9_FLOAT128* _ZdvR9_FLOAT128S0_( struct $9_FLOAT128*, struct $9_FLOAT128*, struct $9_FLOAT128* );
struct $9_FLOAT128* _ZplR9_FLOAT128d( struct $9_FLOAT128*, struct $9_FLOAT128*, double );
struct $9_FLOAT128* _ZmiR9_FLOAT128d( struct $9_FLOAT128*, struct $9_FLOAT128*, double );
struct $9_FLOAT128* _ZmidR9_FLOAT128( struct $9_FLOAT128*, double, struct $9_FLOAT128* );
struct $9_FLOAT128* _ZmlR9_FLOAT128d( struct $9_FLOAT128*, struct $9_FLOAT128*, double );
struct $9_FLOAT128* _ZmldR9_FLOAT128( struct $9_FLOAT128*, double, struct $9_FLOAT128* );
void _ZN9_FLOAT256C1Edd( struct $9_FLOAT256*, double, double );
void _ZN9_FLOAT256C1Edddd( struct $9_FLOAT256*, double, double, double, double );
void _ZN9_FLOAT256aSEd( struct $9_FLOAT256*, double );
void _ZN9_FLOAT256aSEy( struct $9_FLOAT256*, uint64 );
void _ZN9_FLOAT256aSERS_( struct $9_FLOAT256*, struct $9_FLOAT256* );
uint64 _ZN9_FLOAT256cvyEv( struct $9_FLOAT256* );
void _ZN9_FLOAT256pLEy( struct $9_FLOAT256*, uint64 );
struct $9_FLOAT256* _ZngR9_FLOAT256( struct $9_FLOAT256*, struct $9_FLOAT256* );
struct $9_FLOAT256* _ZplR9_FLOAT256S0_( struct $9_FLOAT256*, struct $9_FLOAT256*, struct $9_FLOAT256* );
struct $9_FLOAT256* _ZmiR9_FLOAT256S0_( struct $9_FLOAT256*, struct $9_FLOAT256*, struct $9_FLOAT256* );
struct $9_FLOAT256* _ZmlR9_FLOAT256S0_( struct $9_FLOAT256*, struct $9_FLOAT256*, struct $9_FLOAT256* );
struct $9_FLOAT256* _ZdvR9_FLOAT256S0_( struct $9_FLOAT256*, struct $9_FLOAT256*, struct $9_FLOAT256* );
struct $9_FLOAT256* _ZplR9_FLOAT256d( struct $9_FLOAT256*, struct $9_FLOAT256*, double );
struct $9_FLOAT256* _ZmiR9_FLOAT256d( struct $9_FLOAT256*, struct $9_FLOAT256*, double );
struct $9_FLOAT256* _ZmidR9_FLOAT256( struct $9_FLOAT256*, double, struct $9_FLOAT256* );
struct $9_FLOAT256* _ZmlR9_FLOAT256d( struct $9_FLOAT256*, struct $9_FLOAT256*, double );
struct $9_FLOAT256* _ZmldR9_FLOAT256( struct $9_FLOAT256*, double, struct $9_FLOAT256* );
void _ZN9_FLOAT512C1Edd( struct $9_FLOAT512*, double, double );
void _ZN9_FLOAT512C1Edddd( struct $9_FLOAT512*, double, double, double, double );
void _ZN9_FLOAT512aSEd( struct $9_FLOAT512*, double );
void _ZN9_FLOAT512aSEy( struct $9_FLOAT512*, uint64 );
void _ZN9_FLOAT512aSERS_( struct $9_FLOAT512*, struct $9_FLOAT512* );
uint64 _ZN9_FLOAT512cvyEv( struct $9_FLOAT512* );
void _ZN9_FLOAT512pLEy( struct $9_FLOAT512*, uint64 );
struct $9_FLOAT512* _ZngR9_FLOAT512( struct $9_FLOAT512*, struct $9_FLOAT512* );
struct $9_FLOAT512* _ZplR9_FLOAT512S0_( struct $9_FLOAT512*, struct $9_FLOAT512*, struct $9_FLOAT512* );
struct $9_FLOAT512* _ZmiR9_FLOAT512S0_( struct $9_FLOAT512*, struct $9_FLOAT512*, struct $9_FLOAT512* );
struct $9_FLOAT512* _ZmlR9_FLOAT512S0_( struct $9_FLOAT512*, struct $9_FLOAT512*, struct $9_FLOAT512* );
struct $9_FLOAT512* _ZdvR9_FLOAT512S0_( struct $9_FLOAT512*, struct $9_FLOAT512*, struct $9_FLOAT512* );
struct $9_FLOAT512* _ZplR9_FLOAT512d( struct $9_FLOAT512*, struct $9_FLOAT512*, double );
struct $9_FLOAT512* _ZmiR9_FLOAT512d( struct $9_FLOAT512*, struct $9_FLOAT512*, double );
struct $9_FLOAT512* _ZmidR9_FLOAT512( struct $9_FLOAT512*, double, struct $9_FLOAT512* );
struct $9_FLOAT512* _ZmlR9_FLOAT512d( struct $9_FLOAT512*, struct $9_FLOAT512*, double );
struct $9_FLOAT512* _ZmldR9_FLOAT512( struct $9_FLOAT512*, double, struct $9_FLOAT512* );
static void _ZN5FBGFXaSERKS_( struct $5FBGFX*, struct $5FBGFX* );
void glRectf( float, float, float, float );
void glTexParameteri( uint32, uint32, int32 );
void glTexImage2D( uint32, int32, int32, int32, int32, int32, uint32, uint32, void* );
void glGenTextures( int32, uint32* );
void glBindTexture( uint32, uint32 );
void glActiveTexture( uint32 );
void ERROREXIT( FBSTRING* );
void GLSCREEN( int64, int64, int64, int64, int8 );
void _ZN9SHADERTOYD1Ev( struct $9SHADERTOY* );
int8 _ZN9SHADERTOY11COMPILEFILEER8FBSTRING( struct $9SHADERTOY*, FBSTRING* );
int8 _ZN9SHADERTOY11COMPILECODEER8FBSTRING( struct $9SHADERTOY*, FBSTRING* );
static void _ZN9SHADERTOYC1Ev( struct $9SHADERTOY* );
static void _ZN9SHADERTOYaSERKS_( struct $9SHADERTOY*, struct $9SHADERTOY* );
void _ZN6VECTORC1Ev( struct $6VECTOR* );
void _ZN6VECTORC1Ej( struct $6VECTOR*, uint32 );
void _ZN6VECTORC1ERS_( struct $6VECTOR*, struct $6VECTOR* );
void _ZN6VECTORC1Edddd( struct $6VECTOR*, double, double, double, double );
void _ZN6VECTORpLERS_( struct $6VECTOR*, struct $6VECTOR* );
void _ZN6VECTORmIERS_( struct $6VECTOR*, struct $6VECTOR* );
void _ZN6VECTORmLEd( struct $6VECTOR*, double );
uint32 _ZN6VECTORcvjEv( struct $6VECTOR* );
double _ZN6VECTOR6LENGTHEv( struct $6VECTOR* );
void _ZN6VECTOR9NORMALIZEEv( struct $6VECTOR* );
struct $6VECTOR* _ZN6VECTOR10NORMALIZEDEv( struct $6VECTOR*, struct $6VECTOR* );
struct $6VECTOR* _ZmiR6VECTORS0_( struct $6VECTOR*, struct $6VECTOR*, struct $6VECTOR* );
struct $6VECTOR* _ZplR6VECTORS0_( struct $6VECTOR*, struct $6VECTOR*, struct $6VECTOR* );
struct $6VECTOR* _ZmlR6VECTORd( struct $6VECTOR*, struct $6VECTOR*, double );
struct $6VECTOR* _ZmldR6VECTOR( struct $6VECTOR*, double, struct $6VECTOR* );
double _ZmlR6VECTORS0_( struct $6VECTOR*, struct $6VECTOR* );
struct $6VECTOR* _Zv24idivR6VECTORS0_( struct $6VECTOR*, struct $6VECTOR*, struct $6VECTOR* );
static void _ZN9RECTANGLEC1Ev( struct $9RECTANGLE* );
static void _ZN9RECTANGLEaSERKS_( struct $9RECTANGLE*, struct $9RECTANGLE* );
static void _ZN9BMPHEADERC1Ev( struct $9BMPHEADER* );
static void _ZN9BMPHEADERaSERKS_( struct $9BMPHEADER*, struct $9BMPHEADER* );
static void _ZN8PALENTRYC1Ev( struct $8PALENTRY* );
static void _ZN8PALENTRYaSERKS_( struct $8PALENTRY*, struct $8PALENTRY* );
static void _ZN5MAP2DaSERKS_( struct $5MAP2D*, struct $5MAP2D* );
static void _ZN8MATERIALC1Ev( struct $8MATERIAL* );
static void _ZN8MATERIALaSERKS_( struct $8MATERIAL*, struct $8MATERIAL* );
static void _ZN5LIGHTaSERKS_( struct $5LIGHT*, struct $5LIGHT* );
static void _ZN4POLYaSERKS_( struct $4POLY*, struct $4POLY* );
static void _ZN8OBJECT3DaSERKS_( struct $8OBJECT3D*, struct $8OBJECT3D* );
static void _ZN7AAPIXELaSERKS_( struct $7AAPIXEL*, struct $7AAPIXEL* );
void _ZN9RAYTRACERC1Ev( struct $9RAYTRACER* );
void _ZN9RAYTRACERD1Ev( struct $9RAYTRACER* );
int64 _ZN9RAYTRACER11ADDMATERIALEddddddddddaaallll( struct $9RAYTRACER*, double, double, double, double, double, double, double, double, double, double, int8, int8, int8, int64, int64, int64, int64 );
void _ZN9RAYTRACER15RENDERRECTANGLEEllll( struct $9RAYTRACER*, int64, int64, int64, int64 );
void _ZN9RAYTRACER8EDGEBLUREv( struct $9RAYTRACER* );
void _ZN9RAYTRACER4BLUREv( struct $9RAYTRACER* );
struct $6VECTOR* _ZN9RAYTRACER2AVEddd( struct $9RAYTRACER*, double, double, double );
struct $6VECTOR** _ZN9RAYTRACER4APV4EPP6VECTORllll( struct $9RAYTRACER*, struct $6VECTOR**, int64, int64, int64, int64 );
void _ZN9RAYTRACER6ADJUSTEPddd( struct $9RAYTRACER*, double*, double, double );
void _ZN9RAYTRACER4INITElll( struct $9RAYTRACER*, int64, int64, int64 );
int8 _ZN9RAYTRACER13ISPOLYONPIXELElldd( struct $9RAYTRACER*, int64, int64, double, double );
int8 _ZN9RAYTRACER18ISANYOBJECTONPIXELEll( struct $9RAYTRACER*, int64, int64 );
uint32 _ZN9RAYTRACER9SHOWPOINTEll( struct $9RAYTRACER*, int64, int64 );
void _ZN9RAYTRACER15BACKGROUNDCOLORER6VECTORS1_( struct $9RAYTRACER*, struct $6VECTOR*, struct $6VECTOR* );
void _ZN9RAYTRACER9VECMIRRORER6VECTORS1_S1_S1_( struct $9RAYTRACER*, struct $6VECTOR*, struct $6VECTOR*, struct $6VECTOR*, struct $6VECTOR* );
void _ZN9RAYTRACER9VECBROKENElR6VECTORS1_S1_S1_( struct $9RAYTRACER*, int64, struct $6VECTOR*, struct $6VECTOR*, struct $6VECTOR*, struct $6VECTOR* );
void _ZN9RAYTRACER8GETMAPXYEllR6VECTORS1_( struct $9RAYTRACER*, int64, int64, struct $6VECTOR*, struct $6VECTOR* );
double _ZN9RAYTRACER18GETHIGHTFIELDVALUEElll13BUMP_METHODESa( struct $9RAYTRACER*, int64, int64, int64, $13BUMP_METHODES, int8 );
int8 _ZN9RAYTRACER19ISVISIBLEONSTAMPMAPElR6VECTOR( struct $9RAYTRACER*, int64, struct $6VECTOR* );
void _ZN9RAYTRACER9DOBUMPMAPEllR6VECTORS1_S1_( struct $9RAYTRACER*, int64, int64, struct $6VECTOR*, struct $6VECTOR*, struct $6VECTOR* );
void _ZN9RAYTRACER12SURFACECOLORElR6VECTORS1_( struct $9RAYTRACER*, int64, struct $6VECTOR*, struct $6VECTOR* );
void _ZN9RAYTRACER10LOCALCOLOREllR6VECTORS1_S1_S1_S1_S1_( struct $9RAYTRACER*, int64, int64, struct $6VECTOR*, struct $6VECTOR*, struct $6VECTOR*, struct $6VECTOR*, struct $6VECTOR*, struct $6VECTOR* );
void _ZN9RAYTRACER16GETPOLYSCREENRECEll( struct $9RAYTRACER*, int64, int64 );
void _ZN9RAYTRACER10POLYHELPEREl( struct $9RAYTRACER*, int64 );
void _ZN9RAYTRACER18GETOBJECTSCREENRECEl( struct $9RAYTRACER*, int64 );
int8 _ZN9RAYTRACER13ISOBJECTONRAYER6VECTORS1_lRlS1_S1_S1_S1_( struct $9RAYTRACER*, struct $6VECTOR*, struct $6VECTOR*, int64, int64*, struct $6VECTOR*, struct $6VECTOR*, struct $6VECTOR*, struct $6VECTOR* );
int8 _ZN9RAYTRACER14ISPOLYGONONRAYER6VECTORS1_lRlS1_S1_S1_( struct $9RAYTRACER*, struct $6VECTOR*, struct $6VECTOR*, int64, int64*, struct $6VECTOR*, struct $6VECTOR*, struct $6VECTOR* );
int8 _ZN9RAYTRACER17ISMATHSPHEREONRAYER6VECTORS1_lS1_S1_S1_( struct $9RAYTRACER*, struct $6VECTOR*, struct $6VECTOR*, int64, struct $6VECTOR*, struct $6VECTOR*, struct $6VECTOR* );
int8 _ZN9RAYTRACER9LINETRACEER6VECTORS1_RlS2_S1_S1_S1_S1_( struct $9RAYTRACER*, struct $6VECTOR*, struct $6VECTOR*, int64*, int64*, struct $6VECTOR*, struct $6VECTOR*, struct $6VECTOR*, struct $6VECTOR* );
void _ZN9RAYTRACER8RAYTRACEERK6VECTORS2_lRS0_( struct $9RAYTRACER*, struct $6VECTOR*, struct $6VECTOR*, int64, struct $6VECTOR* );
void _ZN9RAYTRACER5VBLUREll( struct $9RAYTRACER*, int64, int64 );
void _ZN9RAYTRACER5HBLUREll( struct $9RAYTRACER*, int64, int64 );
static void _ZN9RAYTRACERaSERKS_( struct $9RAYTRACER*, struct $9RAYTRACER* );
void _ZN7VECTOR2C1Ev( struct $7VECTOR2* );
void _ZN7VECTOR2C1Ed( struct $7VECTOR2*, double );
void _ZN7VECTOR2C1Edd( struct $7VECTOR2*, double, double );
void _ZN7VECTOR2C1ERS_( struct $7VECTOR2*, struct $7VECTOR2* );
void _ZN7VECTOR2aSEd( struct $7VECTOR2*, double );
void _ZN7VECTOR2aSERS_( struct $7VECTOR2*, struct $7VECTOR2* );
struct $7VECTOR2* _ZN7VECTOR22XYEv( struct $7VECTOR2*, struct $7VECTOR2* );
struct $7VECTOR2* _ZngR7VECTOR2( struct $7VECTOR2*, struct $7VECTOR2* );
struct $7VECTOR2* _ZplR7VECTOR2S0_( struct $7VECTOR2*, struct $7VECTOR2*, struct $7VECTOR2* );
struct $7VECTOR2* _ZmiR7VECTOR2S0_( struct $7VECTOR2*, struct $7VECTOR2*, struct $7VECTOR2* );
struct $7VECTOR2* _ZmiR7VECTOR2Rd( struct $7VECTOR2*, struct $7VECTOR2*, double* );
struct $7VECTOR2* _ZmlR7VECTOR2S0_( struct $7VECTOR2*, struct $7VECTOR2*, struct $7VECTOR2* );
struct $7VECTOR2* _ZmlR7VECTOR2Rd( struct $7VECTOR2*, struct $7VECTOR2*, double* );
struct $7VECTOR2* _ZmlRdR7VECTOR2( struct $7VECTOR2*, double*, struct $7VECTOR2* );
struct $7VECTOR2* _ZdvR7VECTOR2S0_( struct $7VECTOR2*, struct $7VECTOR2*, struct $7VECTOR2* );
void _ZN7VECTOR3C1Ev( struct $7VECTOR3* );
void _ZN7VECTOR3C1Ed( struct $7VECTOR3*, double );
void _ZN7VECTOR3C1Eddd( struct $7VECTOR3*, double, double, double );
void _ZN7VECTOR3C1ER7VECTOR2d( struct $7VECTOR3*, struct $7VECTOR2*, double );
void _ZN7VECTOR3C1ERS_( struct $7VECTOR3*, struct $7VECTOR3* );
void _ZN7VECTOR3aSERS_( struct $7VECTOR3*, struct $7VECTOR3* );
void _ZN7VECTOR3pLERS_( struct $7VECTOR3*, struct $7VECTOR3* );
struct $7VECTOR2* _ZN7VECTOR32XYEv( struct $7VECTOR2*, struct $7VECTOR3* );
struct $7VECTOR2* _ZN7VECTOR32XZEv( struct $7VECTOR2*, struct $7VECTOR3* );
struct $7VECTOR2* _ZN7VECTOR32YZEv( struct $7VECTOR2*, struct $7VECTOR3* );
struct $7VECTOR3* _ZN7VECTOR33XYXEv( struct $7VECTOR3*, struct $7VECTOR3* );
static void _ZN7VECTOR3aSERKS_( struct $7VECTOR3*, struct $7VECTOR3* );
struct $7VECTOR3* _ZngR7VECTOR3( struct $7VECTOR3*, struct $7VECTOR3* );
struct $7VECTOR3* _ZplR7VECTOR3d( struct $7VECTOR3*, struct $7VECTOR3*, double );
struct $7VECTOR3* _ZpldR7VECTOR3( struct $7VECTOR3*, double, struct $7VECTOR3* );
struct $7VECTOR3* _ZmidR7VECTOR3( struct $7VECTOR3*, double, struct $7VECTOR3* );
struct $7VECTOR3* _ZmlR7VECTOR3d( struct $7VECTOR3*, struct $7VECTOR3*, double );
struct $7VECTOR3* _ZmldR7VECTOR3( struct $7VECTOR3*, double, struct $7VECTOR3* );
struct $7VECTOR3* _ZdvR7VECTOR3d( struct $7VECTOR3*, struct $7VECTOR3*, double );
struct $7VECTOR3* _ZplR7VECTOR3S0_( struct $7VECTOR3*, struct $7VECTOR3*, struct $7VECTOR3* );
struct $7VECTOR3* _ZmiR7VECTOR3S0_( struct $7VECTOR3*, struct $7VECTOR3*, struct $7VECTOR3* );
struct $7VECTOR3* _ZmlR7VECTOR3S0_( struct $7VECTOR3*, struct $7VECTOR3*, struct $7VECTOR3* );
struct $7VECTOR3* _ZdvR7VECTOR3S0_( struct $7VECTOR3*, struct $7VECTOR3*, struct $7VECTOR3* );
void _ZN7VECTOR4C1Ev( struct $7VECTOR4* );
void _ZN7VECTOR4C1Edddd( struct $7VECTOR4*, double, double, double, double );
void _ZN7VECTOR4C1ER7VECTOR3d( struct $7VECTOR4*, struct $7VECTOR3*, double );
void _ZN7VECTOR4C1ERS_( struct $7VECTOR4*, struct $7VECTOR4* );
void _ZN7VECTOR4aSERS_( struct $7VECTOR4*, struct $7VECTOR4* );
uint64 _ZN7VECTOR4cvyEv( struct $7VECTOR4* );
static void _ZN7VECTOR4aSERKS_( struct $7VECTOR4*, struct $7VECTOR4* );
struct $7VECTOR4* _ZngR7VECTOR4( struct $7VECTOR4*, struct $7VECTOR4* );
struct $7VECTOR4* _ZmiR7VECTOR4S0_( struct $7VECTOR4*, struct $7VECTOR4*, struct $7VECTOR4* );
struct $7VECTOR4* _ZmldR7VECTOR4( struct $7VECTOR4*, double, struct $7VECTOR4* );
void _ZN5PLANEC1Ev( struct $5PLANE* );
static void _ZN5PLANEaSERKS_( struct $5PLANE*, struct $5PLANE* );
struct $7VECTOR3* _Zv13sinR7VECTOR3( struct $7VECTOR3*, struct $7VECTOR3* );
struct $7VECTOR3* _Zv13cosR7VECTOR3( struct $7VECTOR3*, struct $7VECTOR3* );
struct $7VECTOR2* _Zv13absRK7VECTOR2( struct $7VECTOR2*, struct $7VECTOR2* );
struct $7VECTOR3* _Zv13absRK7VECTOR3( struct $7VECTOR3*, struct $7VECTOR3* );
void _ZN4MAT2C1Ed( struct $4MAT2*, double );
void _ZN4MAT2C1Edddd( struct $4MAT2*, double, double, double, double );
static void _ZN4MAT2aSERKS_( struct $4MAT2*, struct $4MAT2* );
static void _ZN4MAT2C1ERKS_( struct $4MAT2*, struct $4MAT2* );
struct $7VECTOR2* _ZmlR4MAT2R7VECTOR2( struct $7VECTOR2*, struct $4MAT2*, struct $7VECTOR2* );
void _ZN4MAT3C1Ed( struct $4MAT3*, double );
void _ZN4MAT3C1Eddddddddd( struct $4MAT3*, double, double, double, double, double, double, double, double, double );
void _ZN4MAT3C1ER7VECTOR3S1_S1_( struct $4MAT3*, struct $7VECTOR3*, struct $7VECTOR3*, struct $7VECTOR3* );
void _ZN4MAT313SETZROTATIONREd( struct $4MAT3*, double );
void _ZN4MAT312SETROTATIONRER7VECTOR3d( struct $4MAT3*, struct $7VECTOR3*, double );
void _ZN4MAT310SETSCALINGEdd( struct $4MAT3*, double, double );
static void _ZN4MAT3aSERKS_( struct $4MAT3*, struct $4MAT3* );
static void _ZN4MAT3C1ERKS_( struct $4MAT3*, struct $4MAT3* );
struct $7VECTOR3* _ZmlR4MAT3R7VECTOR3( struct $7VECTOR3*, struct $4MAT3*, struct $7VECTOR3* );
void _ZN4MAT4C1Ed( struct $4MAT4*, double );
void _ZN4MAT4C1Edddddddddddddddd( struct $4MAT4*, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double );
void _ZN4MAT48SETORTHOEdddddd( struct $4MAT4*, double, double, double, double, double, double );
static void _ZN4MAT4aSERKS_( struct $4MAT4*, struct $4MAT4* );
static void _ZN4MAT4C1ERKS_( struct $4MAT4*, struct $4MAT4* );
void _ZN9SAMPLER2D4LOCKEv( struct $9SAMPLER2D* );
void _ZN9SAMPLER2D6UNLOCKEv( struct $9SAMPLER2D* );
void _ZN9SAMPLER2D10WRITEPIXELEllj( struct $9SAMPLER2D*, int64, int64, uint32 );
uint32 _ZN9SAMPLER2D9READPIXELEll( struct $9SAMPLER2D*, int64, int64 );
void _ZN9SAMPLER2D6CREATEEv( struct $9SAMPLER2D* );
void _ZN9SAMPLER2D7DESTROYEv( struct $9SAMPLER2D* );
void _ZN9SAMPLER2D11FASTFILLBOXEllllj( struct $9SAMPLER2D*, int64, int64, int64, int64, uint32 );
void _ZN12SYSTEM_BUS_TC1Ev( struct $12SYSTEM_BUS_T* );
void _ZN12SYSTEM_BUS_TD1Ev( struct $12SYSTEM_BUS_T* );
int8 _ZN12SYSTEM_BUS_T8READBYTEEt( struct $12SYSTEM_BUS_T*, uint16 );
uint8 _ZN12SYSTEM_BUS_T9READUBYTEEd( struct $12SYSTEM_BUS_T*, double );
uint16 _ZN12SYSTEM_BUS_T10READUSHORTEd( struct $12SYSTEM_BUS_T*, double );
void _ZN12SYSTEM_BUS_T9WRITEBYTEEtt( struct $12SYSTEM_BUS_T*, uint16, uint16 );
void _ZN12SYSTEM_BUS_T10WRITEUBYTEEdd( struct $12SYSTEM_BUS_T*, double, double );
void _ZN12SYSTEM_BUS_T11WRITEUSHORTEdd( struct $12SYSTEM_BUS_T*, double, double );
double _ZN12SYSTEM_BUS_T6PEEK64Ed( struct $12SYSTEM_BUS_T*, double );
void _ZN12SYSTEM_BUS_T6POKE64Edd( struct $12SYSTEM_BUS_T*, double, double );
double _ZN12SYSTEM_BUS_T10SCREENCODEEd( struct $12SYSTEM_BUS_T*, double );
double _ZN12SYSTEM_BUS_T5PEEKBEd( struct $12SYSTEM_BUS_T*, double );
void _ZN12SYSTEM_BUS_T5POKEBEdd( struct $12SYSTEM_BUS_T*, double, double );
void _ZN12SYSTEM_BUS_T5POKEWEdd( struct $12SYSTEM_BUS_T*, double, double );
double _ZN12SYSTEM_BUS_T5PEEKWEd( struct $12SYSTEM_BUS_T*, double );
double _ZN12SYSTEM_BUS_T8ISNUMBERE8FBSTRINGd( struct $12SYSTEM_BUS_T*, FBSTRING*, double );
double _ZN12SYSTEM_BUS_T7LENGTH6ER7VECTOR2( struct $12SYSTEM_BUS_T*, struct $7VECTOR2* );
double _ZN12SYSTEM_BUS_T7LENGTH8ER7VECTOR2( struct $12SYSTEM_BUS_T*, struct $7VECTOR2* );
double _ZN12SYSTEM_BUS_T7SDPLANEER7VECTOR3( struct $12SYSTEM_BUS_T*, struct $7VECTOR3* );
double _ZN12SYSTEM_BUS_T8SDSPHEREER7VECTOR3d( struct $12SYSTEM_BUS_T*, struct $7VECTOR3*, double );
double _ZN12SYSTEM_BUS_T5SDBOXER7VECTOR3S1_( struct $12SYSTEM_BUS_T*, struct $7VECTOR3*, struct $7VECTOR3* );
double _ZN12SYSTEM_BUS_T11SDELLIPSOIDER7VECTOR3S1_( struct $12SYSTEM_BUS_T*, struct $7VECTOR3*, struct $7VECTOR3* );
double _ZN12SYSTEM_BUS_T10UDROUNDBOXER7VECTOR3S1_d( struct $12SYSTEM_BUS_T*, struct $7VECTOR3*, struct $7VECTOR3*, double );
double _ZN12SYSTEM_BUS_T7SDTORUSER7VECTOR3R7VECTOR2( struct $12SYSTEM_BUS_T*, struct $7VECTOR3*, struct $7VECTOR2* );
double _ZN12SYSTEM_BUS_T9SDTORUS82ER7VECTOR3R7VECTOR2( struct $12SYSTEM_BUS_T*, struct $7VECTOR3*, struct $7VECTOR2* );
double _ZN12SYSTEM_BUS_T9SDTORUS88ER7VECTOR3R7VECTOR2( struct $12SYSTEM_BUS_T*, struct $7VECTOR3*, struct $7VECTOR2* );
double _ZN12SYSTEM_BUS_T10SDHEXPRISMER7VECTOR3R7VECTOR2( struct $12SYSTEM_BUS_T*, struct $7VECTOR3*, struct $7VECTOR2* );
double _ZN12SYSTEM_BUS_T9SDCAPSULEER7VECTOR3S1_S1_d( struct $12SYSTEM_BUS_T*, struct $7VECTOR3*, struct $7VECTOR3*, struct $7VECTOR3*, double );
double _ZN12SYSTEM_BUS_T10SDTRIPRISMER7VECTOR3R7VECTOR2( struct $12SYSTEM_BUS_T*, struct $7VECTOR3*, struct $7VECTOR2* );
double _ZN12SYSTEM_BUS_T10SDCYLINDERER7VECTOR3R7VECTOR2( struct $12SYSTEM_BUS_T*, struct $7VECTOR3*, struct $7VECTOR2* );
double _ZN12SYSTEM_BUS_T11SDCYLINDER6ER7VECTOR3R7VECTOR2( struct $12SYSTEM_BUS_T*, struct $7VECTOR3*, struct $7VECTOR2* );
double _ZN12SYSTEM_BUS_T6SDCONEER7VECTOR3S1_( struct $12SYSTEM_BUS_T*, struct $7VECTOR3*, struct $7VECTOR3* );
double _ZN12SYSTEM_BUS_T13SDCONESECTIONER7VECTOR3ddd( struct $12SYSTEM_BUS_T*, struct $7VECTOR3*, double, double, double );
double _ZN12SYSTEM_BUS_T3OPSEdd( struct $12SYSTEM_BUS_T*, double, double );
struct $7VECTOR2* _ZN12SYSTEM_BUS_T3OPUER7VECTOR2S1_( struct $7VECTOR2*, struct $12SYSTEM_BUS_T*, struct $7VECTOR2*, struct $7VECTOR2* );
struct $7VECTOR3* _ZN12SYSTEM_BUS_T5OPREPER7VECTOR3S1_( struct $7VECTOR3*, struct $12SYSTEM_BUS_T*, struct $7VECTOR3*, struct $7VECTOR3* );
struct $7VECTOR3* _ZN12SYSTEM_BUS_T7OPTWISTER7VECTOR3( struct $7VECTOR3*, struct $12SYSTEM_BUS_T*, struct $7VECTOR3* );
struct $7VECTOR2* _ZN12SYSTEM_BUS_T3MAPER7VECTOR3( struct $7VECTOR2*, struct $12SYSTEM_BUS_T*, struct $7VECTOR3* );
struct $7VECTOR2* _ZN12SYSTEM_BUS_T7CASTRAYEv( struct $7VECTOR2*, struct $12SYSTEM_BUS_T* );
double _ZN12SYSTEM_BUS_T10SOFTSHADOWEv( struct $12SYSTEM_BUS_T* );
struct $7VECTOR3* _ZN12SYSTEM_BUS_T10CALCNORMALEv( struct $7VECTOR3*, struct $12SYSTEM_BUS_T* );
double _ZN12SYSTEM_BUS_T6CALCAOEv( struct $12SYSTEM_BUS_T* );
struct $7VECTOR3* _ZN12SYSTEM_BUS_T11RENDER_GLSLEv( struct $7VECTOR3*, struct $12SYSTEM_BUS_T* );
struct $4MAT3 _ZN12SYSTEM_BUS_T9SETCAMERAEv( struct $12SYSTEM_BUS_T* );
double _ZN12SYSTEM_BUS_T12HAVERSINEISHEd( struct $12SYSTEM_BUS_T*, double );
uint32 _ZN12SYSTEM_BUS_T10RAINBOWISHEfa( struct $12SYSTEM_BUS_T*, float, int8 );
void _ZN12SYSTEM_BUS_T6FILTEREPvi( struct $12SYSTEM_BUS_T*, void*, int32 );
double _ZN12SYSTEM_BUS_T3MAPEddddd( struct $12SYSTEM_BUS_T*, double, double, double, double, double );
void _ZN12SYSTEM_BUS_T9MAINIMAGEER7VECTOR4RK7VECTOR2( struct $12SYSTEM_BUS_T*, struct $7VECTOR4*, struct $7VECTOR2* );
void _ZN12SYSTEM_BUS_T9EXEC_GLSLEv( struct $12SYSTEM_BUS_T* );
void _ZN12SYSTEM_BUS_T12EXEC_GLSL_40Ev( struct $12SYSTEM_BUS_T* );
void _ZN12SYSTEM_BUS_T12EXEC_GLSL_90Ev( struct $12SYSTEM_BUS_T* );
void _ZN12SYSTEM_BUS_T13EXEC_GLSL_120Ev( struct $12SYSTEM_BUS_T* );
struct $9SAMPLER2D _ZN12SYSTEM_BUS_T15CREATETEXTURE2DEiii( struct $12SYSTEM_BUS_T*, int32, int32, int32 );
float _ZN12SYSTEM_BUS_T3MAXEff( struct $12SYSTEM_BUS_T*, float, float );
float _ZN12SYSTEM_BUS_T3MINEff( struct $12SYSTEM_BUS_T*, float, float );
FBSTRING* _ZN12SYSTEM_BUS_T4JOINER7FBARRAYI8FBSTRINGERS0_( struct $12SYSTEM_BUS_T*, struct $7FBARRAYI8FBSTRINGE*, FBSTRING* );
struct $3QBS* _ZN12SYSTEM_BUS_T8QBS_FREEEP3QBS( struct $12SYSTEM_BUS_T*, struct $3QBS* );
void _ZN12SYSTEM_BUS_T21QBS_MEM64_CONCAT_LISTEv( struct $12SYSTEM_BUS_T* );
void _ZN12SYSTEM_BUS_T16QBS_CONCAT_MEM64Ej( struct $12SYSTEM_BUS_T*, uint32 );
void _ZN12SYSTEM_BUS_T10QBS_CONCATEj( struct $12SYSTEM_BUS_T*, uint32 );
void _ZN12SYSTEM_BUS_T15QBS_CONCAT_LISTEv( struct $12SYSTEM_BUS_T* );
void _ZN12SYSTEM_BUS_T19QBS_TMP_CONCAT_LISTEv( struct $12SYSTEM_BUS_T* );
struct $3QBS* _ZN12SYSTEM_BUS_T7QBS_SETEP3QBSS1_( struct $12SYSTEM_BUS_T*, struct $3QBS*, struct $3QBS* );
struct $3QBS* _ZN12SYSTEM_BUS_T7QBS_NEWEih( struct $12SYSTEM_BUS_T*, int32, uint8 );
struct $3QBS* _ZN12SYSTEM_BUS_T18QBS_NEW_DESCRIPTOREv( struct $12SYSTEM_BUS_T* );
void _ZN12SYSTEM_BUS_T19QBS_FREE_DESCRIPTOREP3QBS( struct $12SYSTEM_BUS_T*, struct $3QBS* );
int64 _ZN12SYSTEM_BUS_T11FUNC_LBOUNDEPxii( struct $12SYSTEM_BUS_T*, int64*, int32, int32 );
int64 _ZN12SYSTEM_BUS_T11FUNC_UBOUNDEPxii( struct $12SYSTEM_BUS_T*, int64*, int32, int32 );
int32 _ZN12SYSTEM_BUS_T16GFS_FILENO_VALIDEi( struct $12SYSTEM_BUS_T*, int32 );
void _ZN12SYSTEM_BUS_T10FIELD_FREEEP3QBS( struct $12SYSTEM_BUS_T*, struct $3QBS* );
void _ZN12SYSTEM_BUS_T12FIELD_UPDATEEi( struct $12SYSTEM_BUS_T*, int32 );
int32 _ZN12SYSTEM_BUS_T8GFS_READEixPhx( struct $12SYSTEM_BUS_T*, int32, int64, uint8*, int64 );
int64 _ZN12SYSTEM_BUS_T3QBREd( struct $12SYSTEM_BUS_T*, double );
int32 _ZN12SYSTEM_BUS_T18QBR_DOUBLE_TO_LONGEd( struct $12SYSTEM_BUS_T*, double );
int32 _ZN12SYSTEM_BUS_T8FUNC_INPEi( struct $12SYSTEM_BUS_T*, int32 );
uint64 _ZN12SYSTEM_BUS_T8GETUBITSEjPhx( struct $12SYSTEM_BUS_T*, uint32, uint8*, int64 );
int64 _ZN12SYSTEM_BUS_T7GETBITSEjPhx( struct $12SYSTEM_BUS_T*, uint32, uint8*, int64 );
void _ZN12SYSTEM_BUS_T7SETBITSEjPhxx( struct $12SYSTEM_BUS_T*, uint32, uint8*, int64, int64 );
double _ZN12SYSTEM_BUS_T7K_FREXPEdPd( struct $12SYSTEM_BUS_T*, double, double* );
double _ZN12SYSTEM_BUS_T7K_SQRTFEd( struct $12SYSTEM_BUS_T*, double );
void _ZN12SYSTEM_BUS_T8K_MEMSETEPjjj( struct $12SYSTEM_BUS_T*, uint32*, uint32, uint32 );
void _ZN12SYSTEM_BUS_T8K_MEMCPYEPjS0_j( struct $12SYSTEM_BUS_T*, uint32*, uint32*, uint32 );
double _ZN12SYSTEM_BUS_T8K_STRLENEPh( struct $12SYSTEM_BUS_T*, uint8* );
double _ZN12SYSTEM_BUS_T16K_STRLASTINDEXOFEPhS0_( struct $12SYSTEM_BUS_T*, uint8*, uint8* );
void _ZN12SYSTEM_BUS_T8K_STRREVEPh( struct $12SYSTEM_BUS_T*, uint8* );
double _ZN12SYSTEM_BUS_T5K_COSEd( struct $12SYSTEM_BUS_T*, double );
double _ZN12SYSTEM_BUS_T5K_SINEd( struct $12SYSTEM_BUS_T*, double );
double _ZN12SYSTEM_BUS_T6K_COSFEd( struct $12SYSTEM_BUS_T*, double );
double _ZN12SYSTEM_BUS_T6K_SINFEd( struct $12SYSTEM_BUS_T*, double );
double _ZN12SYSTEM_BUS_T6K_ATANEdd( struct $12SYSTEM_BUS_T*, double, double );
double _ZN12SYSTEM_BUS_T5K_POWEhh( struct $12SYSTEM_BUS_T*, uint8, uint8 );
double _ZN12SYSTEM_BUS_T5K_POWEaa( struct $12SYSTEM_BUS_T*, int8, int8 );
double _ZN12SYSTEM_BUS_T5K_POWEtt( struct $12SYSTEM_BUS_T*, uint16, uint16 );
double _ZN12SYSTEM_BUS_T5K_POWEss( struct $12SYSTEM_BUS_T*, int16, int16 );
double _ZN12SYSTEM_BUS_T5K_POWEjj( struct $12SYSTEM_BUS_T*, uint32, uint32 );
double _ZN12SYSTEM_BUS_T5K_POWEii( struct $12SYSTEM_BUS_T*, int32, int32 );
double _ZN12SYSTEM_BUS_T5K_POWEyy( struct $12SYSTEM_BUS_T*, uint64, uint64 );
double _ZN12SYSTEM_BUS_T5K_POWExx( struct $12SYSTEM_BUS_T*, int64, int64 );
double _ZN12SYSTEM_BUS_T5K_POWEff( struct $12SYSTEM_BUS_T*, float, float );
double _ZN12SYSTEM_BUS_T5K_POWEdd( struct $12SYSTEM_BUS_T*, double, double );
struct $7VECTOR3* _ZN12SYSTEM_BUS_T5K_POWER7VECTOR3S1_( struct $7VECTOR3*, struct $12SYSTEM_BUS_T*, struct $7VECTOR3*, struct $7VECTOR3* );
double _ZN12SYSTEM_BUS_T7K_EXP2FEh( struct $12SYSTEM_BUS_T*, uint8 );
double _ZN12SYSTEM_BUS_T7K_EXP2FEa( struct $12SYSTEM_BUS_T*, int8 );
double _ZN12SYSTEM_BUS_T7K_EXP2FEt( struct $12SYSTEM_BUS_T*, uint16 );
double _ZN12SYSTEM_BUS_T7K_EXP2FEs( struct $12SYSTEM_BUS_T*, int16 );
double _ZN12SYSTEM_BUS_T7K_EXP2FEj( struct $12SYSTEM_BUS_T*, uint32 );
double _ZN12SYSTEM_BUS_T7K_EXP2FEi( struct $12SYSTEM_BUS_T*, int32 );
double _ZN12SYSTEM_BUS_T7K_EXP2FEy( struct $12SYSTEM_BUS_T*, uint64 );
double _ZN12SYSTEM_BUS_T7K_EXP2FEx( struct $12SYSTEM_BUS_T*, int64 );
double _ZN12SYSTEM_BUS_T7K_EXP2FEf( struct $12SYSTEM_BUS_T*, float );
double _ZN12SYSTEM_BUS_T7K_EXP2FEd( struct $12SYSTEM_BUS_T*, double );
double _ZN12SYSTEM_BUS_T7K_EXP2FER9_FLOAT128( struct $12SYSTEM_BUS_T*, struct $9_FLOAT128* );
double _ZN12SYSTEM_BUS_T7K_EXP2FER9_FLOAT256( struct $12SYSTEM_BUS_T*, struct $9_FLOAT256* );
double _ZN12SYSTEM_BUS_T7K_EXP2FER9_FLOAT512( struct $12SYSTEM_BUS_T*, struct $9_FLOAT512* );
double _ZN12SYSTEM_BUS_T5K_EXPEd( struct $12SYSTEM_BUS_T*, double );
double _ZN12SYSTEM_BUS_T5K_LOGEd( struct $12SYSTEM_BUS_T*, double );
double _ZN12SYSTEM_BUS_T6K_SQRTEd( struct $12SYSTEM_BUS_T*, double );
double _ZN12SYSTEM_BUS_T6K_SIGNEh( struct $12SYSTEM_BUS_T*, uint8 );
double _ZN12SYSTEM_BUS_T6K_SIGNEa( struct $12SYSTEM_BUS_T*, int8 );
double _ZN12SYSTEM_BUS_T6K_SIGNEt( struct $12SYSTEM_BUS_T*, uint16 );
double _ZN12SYSTEM_BUS_T6K_SIGNEs( struct $12SYSTEM_BUS_T*, int16 );
double _ZN12SYSTEM_BUS_T6K_SIGNEj( struct $12SYSTEM_BUS_T*, uint32 );
double _ZN12SYSTEM_BUS_T6K_SIGNEi( struct $12SYSTEM_BUS_T*, int32 );
double _ZN12SYSTEM_BUS_T6K_SIGNEy( struct $12SYSTEM_BUS_T*, uint64 );
double _ZN12SYSTEM_BUS_T6K_SIGNEx( struct $12SYSTEM_BUS_T*, int64 );
double _ZN12SYSTEM_BUS_T6K_SIGNEf( struct $12SYSTEM_BUS_T*, float );
double _ZN12SYSTEM_BUS_T6K_SIGNEd( struct $12SYSTEM_BUS_T*, double );
double _ZN12SYSTEM_BUS_T6K_SIGNER9_FLOAT128( struct $12SYSTEM_BUS_T*, struct $9_FLOAT128* );
double _ZN12SYSTEM_BUS_T6K_SIGNER9_FLOAT256( struct $12SYSTEM_BUS_T*, struct $9_FLOAT256* );
double _ZN12SYSTEM_BUS_T6K_SIGNER9_FLOAT512( struct $12SYSTEM_BUS_T*, struct $9_FLOAT512* );
double _ZN12SYSTEM_BUS_T7K_FLOOREh( struct $12SYSTEM_BUS_T*, uint8 );
double _ZN12SYSTEM_BUS_T7K_FLOOREa( struct $12SYSTEM_BUS_T*, int8 );
double _ZN12SYSTEM_BUS_T7K_FLOOREt( struct $12SYSTEM_BUS_T*, uint16 );
double _ZN12SYSTEM_BUS_T7K_FLOOREs( struct $12SYSTEM_BUS_T*, int16 );
double _ZN12SYSTEM_BUS_T7K_FLOOREj( struct $12SYSTEM_BUS_T*, uint32 );
double _ZN12SYSTEM_BUS_T7K_FLOOREi( struct $12SYSTEM_BUS_T*, int32 );
double _ZN12SYSTEM_BUS_T7K_FLOOREy( struct $12SYSTEM_BUS_T*, uint64 );
double _ZN12SYSTEM_BUS_T7K_FLOOREx( struct $12SYSTEM_BUS_T*, int64 );
double _ZN12SYSTEM_BUS_T7K_FLOOREf( struct $12SYSTEM_BUS_T*, float );
double _ZN12SYSTEM_BUS_T7K_FLOOREd( struct $12SYSTEM_BUS_T*, double );
double _ZN12SYSTEM_BUS_T7K_FLOORER9_FLOAT128( struct $12SYSTEM_BUS_T*, struct $9_FLOAT128* );
double _ZN12SYSTEM_BUS_T7K_FLOORER9_FLOAT256( struct $12SYSTEM_BUS_T*, struct $9_FLOAT256* );
double _ZN12SYSTEM_BUS_T7K_FLOORER9_FLOAT512( struct $12SYSTEM_BUS_T*, struct $9_FLOAT512* );
struct $7VECTOR2* _ZN12SYSTEM_BUS_T7K_FRACTER7VECTOR2( struct $7VECTOR2*, struct $12SYSTEM_BUS_T*, struct $7VECTOR2* );
double _ZN12SYSTEM_BUS_T8K_MODULOEdd( struct $12SYSTEM_BUS_T*, double, double );
struct $7VECTOR3* _ZN12SYSTEM_BUS_T8K_MODULOER7VECTOR3S1_( struct $7VECTOR3*, struct $12SYSTEM_BUS_T*, struct $7VECTOR3*, struct $7VECTOR3* );
double _ZN12SYSTEM_BUS_T5K_MINEdd( struct $12SYSTEM_BUS_T*, double, double );
struct $7VECTOR2* _ZN12SYSTEM_BUS_T5K_MINER7VECTOR2S1_( struct $7VECTOR2*, struct $12SYSTEM_BUS_T*, struct $7VECTOR2*, struct $7VECTOR2* );
double _ZN12SYSTEM_BUS_T5K_MAXEdd( struct $12SYSTEM_BUS_T*, double, double );
struct $7VECTOR2* _ZN12SYSTEM_BUS_T5K_MAXER7VECTOR2Rd( struct $7VECTOR2*, struct $12SYSTEM_BUS_T*, struct $7VECTOR2*, double* );
struct $7VECTOR3* _ZN12SYSTEM_BUS_T5K_MAXER7VECTOR3Rd( struct $7VECTOR3*, struct $12SYSTEM_BUS_T*, struct $7VECTOR3*, double* );
double _ZN12SYSTEM_BUS_T16K_PASCALTRIANGLEEhh( struct $12SYSTEM_BUS_T*, uint8, uint8 );
double _ZN12SYSTEM_BUS_T16K_PASCALTRIANGLEEaa( struct $12SYSTEM_BUS_T*, int8, int8 );
double _ZN12SYSTEM_BUS_T16K_PASCALTRIANGLEEtt( struct $12SYSTEM_BUS_T*, uint16, uint16 );
double _ZN12SYSTEM_BUS_T16K_PASCALTRIANGLEEss( struct $12SYSTEM_BUS_T*, int16, int16 );
double _ZN12SYSTEM_BUS_T16K_PASCALTRIANGLEEjj( struct $12SYSTEM_BUS_T*, uint32, uint32 );
double _ZN12SYSTEM_BUS_T16K_PASCALTRIANGLEEii( struct $12SYSTEM_BUS_T*, int32, int32 );
double _ZN12SYSTEM_BUS_T16K_PASCALTRIANGLEEyy( struct $12SYSTEM_BUS_T*, uint64, uint64 );
double _ZN12SYSTEM_BUS_T16K_PASCALTRIANGLEExx( struct $12SYSTEM_BUS_T*, int64, int64 );
double _ZN12SYSTEM_BUS_T16K_PASCALTRIANGLEEff( struct $12SYSTEM_BUS_T*, float, float );
double _ZN12SYSTEM_BUS_T16K_PASCALTRIANGLEEdd( struct $12SYSTEM_BUS_T*, double, double );
double _ZN12SYSTEM_BUS_T7K_CLAMPEhhh( struct $12SYSTEM_BUS_T*, uint8, uint8, uint8 );
double _ZN12SYSTEM_BUS_T7K_CLAMPEaaa( struct $12SYSTEM_BUS_T*, int8, int8, int8 );
double _ZN12SYSTEM_BUS_T7K_CLAMPEttt( struct $12SYSTEM_BUS_T*, uint16, uint16, uint16 );
double _ZN12SYSTEM_BUS_T7K_CLAMPEsss( struct $12SYSTEM_BUS_T*, int16, int16, int16 );
double _ZN12SYSTEM_BUS_T7K_CLAMPEjjj( struct $12SYSTEM_BUS_T*, uint32, uint32, uint32 );
double _ZN12SYSTEM_BUS_T7K_CLAMPEiii( struct $12SYSTEM_BUS_T*, int32, int32, int32 );
double _ZN12SYSTEM_BUS_T7K_CLAMPEyyy( struct $12SYSTEM_BUS_T*, uint64, uint64, uint64 );
double _ZN12SYSTEM_BUS_T7K_CLAMPExxx( struct $12SYSTEM_BUS_T*, int64, int64, int64 );
double _ZN12SYSTEM_BUS_T7K_CLAMPEfff( struct $12SYSTEM_BUS_T*, float, float, float );
double _ZN12SYSTEM_BUS_T7K_CLAMPEddd( struct $12SYSTEM_BUS_T*, double, double, double );
struct $7VECTOR3* _ZN12SYSTEM_BUS_T7K_CLAMPER7VECTOR3dd( struct $7VECTOR3*, struct $12SYSTEM_BUS_T*, struct $7VECTOR3*, double, double );
double _ZN12SYSTEM_BUS_T5K_MIXEddd( struct $12SYSTEM_BUS_T*, double, double, double );
struct $7VECTOR3* _ZN12SYSTEM_BUS_T5K_MIXER7VECTOR3S1_d( struct $7VECTOR3*, struct $12SYSTEM_BUS_T*, struct $7VECTOR3*, struct $7VECTOR3*, double );
double _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEddd( struct $12SYSTEM_BUS_T*, double, double, double );
double _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR2( struct $12SYSTEM_BUS_T*, struct $7VECTOR2* );
double _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR3( struct $12SYSTEM_BUS_T*, struct $7VECTOR3* );
double _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR2S1_( struct $12SYSTEM_BUS_T*, struct $7VECTOR2*, struct $7VECTOR2* );
double _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( struct $12SYSTEM_BUS_T*, struct $7VECTOR3*, struct $7VECTOR3* );
struct $7VECTOR3* _ZN12SYSTEM_BUS_T7K_CROSSER7VECTOR3S1_( struct $7VECTOR3*, struct $12SYSTEM_BUS_T*, struct $7VECTOR3*, struct $7VECTOR3* );
struct $7VECTOR3* _ZN12SYSTEM_BUS_T11K_NORMALIZEER7VECTOR3( struct $7VECTOR3*, struct $12SYSTEM_BUS_T*, struct $7VECTOR3* );
struct $7VECTOR3* _ZN12SYSTEM_BUS_T9K_REFLECTER7VECTOR3S1_( struct $7VECTOR3*, struct $12SYSTEM_BUS_T*, struct $7VECTOR3*, struct $7VECTOR3* );
void _ZN12SYSTEM_BUS_T14K_FLOAT128_ABSEP9_FLOAT128S1_( struct $12SYSTEM_BUS_T*, struct $9_FLOAT128*, struct $9_FLOAT128* );
void _ZN12SYSTEM_BUS_T14K_FLOAT256_ABSEP9_FLOAT256S1_( struct $12SYSTEM_BUS_T*, struct $9_FLOAT256*, struct $9_FLOAT256* );
void _ZN12SYSTEM_BUS_T14K_FLOAT512_ABSEP9_FLOAT512S1_( struct $12SYSTEM_BUS_T*, struct $9_FLOAT512*, struct $9_FLOAT512* );
static void _ZN12SYSTEM_BUS_TaSERKS_( struct $12SYSTEM_BUS_T*, struct $12SYSTEM_BUS_T* );
void _ZN7CPU6510C1EP12SYSTEM_BUS_T( struct $7CPU6510*, struct $12SYSTEM_BUS_T* );
void _ZN7CPU6510D1Ev( struct $7CPU6510* );
double _ZN7CPU65104TICKEd( struct $7CPU6510*, double );
double _ZN7CPU65107ADR_IMMEv( struct $7CPU6510* );
double _ZN7CPU65107ADR_RELEv( struct $7CPU6510* );
double _ZN7CPU65108ADR_ZEROEv( struct $7CPU6510* );
double _ZN7CPU65109ADR_ZEROXEv( struct $7CPU6510* );
double _ZN7CPU65109ADR_ZEROYEv( struct $7CPU6510* );
double _ZN7CPU65107ADR_ABSEv( struct $7CPU6510* );
double _ZN7CPU65108ADR_ABSXEv( struct $7CPU6510* );
double _ZN7CPU65108ADR_ABSYEv( struct $7CPU6510* );
double _ZN7CPU65107ADR_INDEv( struct $7CPU6510* );
double _ZN7CPU65108ADR_INDXEv( struct $7CPU6510* );
double _ZN7CPU65108ADR_INDYEv( struct $7CPU6510* );
void _ZN7CPU65104PUSHEd( struct $7CPU6510*, double );
double _ZN7CPU65104PULLEv( struct $7CPU6510* );
static void _ZN7CPU6510aSERKS_( struct $7CPU6510*, struct $7CPU6510* );
void _ZN5C64_TC1Ev( struct $5C64_T* );
void _ZN5C64_TD1Ev( struct $5C64_T* );
static void _ZN5C64_TaSERKS_( struct $5C64_T*, struct $5C64_T* );
static void _ZN9_XPRIVATEaSERKS_( struct $9_XPRIVATE*, struct $9_XPRIVATE* );
static void _ZN9_XDISPLAYaSERKS_( struct $9_XDISPLAY*, struct $9_XDISPLAY* );
void INS_UNK( struct $7CPU6510* );
void INS_ADC( struct $7CPU6510* );
void INS_AND( struct $7CPU6510* );
void INS_ASL( struct $7CPU6510* );
void INS_ASLA( struct $7CPU6510* );
void INS_BCC( struct $7CPU6510* );
void INS_BCS( struct $7CPU6510* );
void INS_BEQ( struct $7CPU6510* );
void INS_BIT( struct $7CPU6510* );
void INS_BMI( struct $7CPU6510* );
void INS_BNE( struct $7CPU6510* );
void INS_BPL( struct $7CPU6510* );
void INS_BRK( struct $7CPU6510* );
void INS_BVC( struct $7CPU6510* );
void INS_BVS( struct $7CPU6510* );
void INS_CLC( struct $7CPU6510* );
void INS_CLD( struct $7CPU6510* );
void INS_CLI( struct $7CPU6510* );
void INS_CLV( struct $7CPU6510* );
void INS_CMP( struct $7CPU6510* );
void INS_CPX( struct $7CPU6510* );
void INS_CPY( struct $7CPU6510* );
void INS_DEC( struct $7CPU6510* );
void INS_DEX( struct $7CPU6510* );
void INS_DEY( struct $7CPU6510* );
void INS_EOR( struct $7CPU6510* );
void INS_INC( struct $7CPU6510* );
void INS_INX( struct $7CPU6510* );
void INS_INY( struct $7CPU6510* );
void INS_JMP( struct $7CPU6510* );
void INS_JSR( struct $7CPU6510* );
void INS_LDA( struct $7CPU6510* );
void INS_LDX( struct $7CPU6510* );
void INS_LDY( struct $7CPU6510* );
void INS_LSR( struct $7CPU6510* );
void INS_LSRA( struct $7CPU6510* );
void INS_NOP( struct $7CPU6510* );
void INS_ORA( struct $7CPU6510* );
void INS_PHA( struct $7CPU6510* );
void INS_PHP( struct $7CPU6510* );
void INS_PLA( struct $7CPU6510* );
void INS_PLP( struct $7CPU6510* );
void INS_ROL( struct $7CPU6510* );
void INS_ROLA( struct $7CPU6510* );
void INS_ROR( struct $7CPU6510* );
void INS_RORA( struct $7CPU6510* );
void INS_RTI( struct $7CPU6510* );
void INS_RTS( struct $7CPU6510* );
void INS_SBC( struct $7CPU6510* );
void INS_SEC( struct $7CPU6510* );
void INS_SED( struct $7CPU6510* );
void INS_SEI( struct $7CPU6510* );
void INS_STA( struct $7CPU6510* );
void INS_STX( struct $7CPU6510* );
void INS_STY( struct $7CPU6510* );
void INS_TAX( struct $7CPU6510* );
void INS_TAY( struct $7CPU6510* );
void INS_TSX( struct $7CPU6510* );
void INS_TXA( struct $7CPU6510* );
void INS_TXS( struct $7CPU6510* );
void INS_TYA( struct $7CPU6510* );
void INS_R32( struct $7CPU6510* );
void INS_W32( struct $7CPU6510* );
void INS_R64( struct $7CPU6510* );
void INS_W64( struct $7CPU6510* );
int64 INTERRUPTSERVICE( struct $7CPU6510* );
void KMAIN( struct $14MULTIBOOT_INFO* );
static void _GLOBAL__I( void ) __attribute__(( constructor ));
static void _GLOBAL__D( void ) __attribute__(( destructor ));
static double POS_INF$ = __builtin_inf();
static double NEG_INF$ = (-__builtin_inf());
static struct $14MULTIBOOT_INFO* MB_INFO$;
static uint16 INDEX$ = (uint16)34u;
static uint16 RVS$ = (uint16)199u;
static uint16 FCOLOR$ = (uint16)646u;
static uint16 HIBASE$ = (uint16)648u;
static uint16 SP0X$ = (uint16)53248u;
static uint16 SP0Y$ = (uint16)53249u;
static uint16 SP1X$ = (uint16)53250u;
static uint16 SP1Y$ = (uint16)53251u;
static uint16 SP2X$ = (uint16)53252u;
static uint16 SP2Y$ = (uint16)53253u;
static uint16 SP3X$ = (uint16)53254u;
static uint16 SP3Y$ = (uint16)53255u;
static uint16 SP4X$ = (uint16)53256u;
static uint16 SP4Y$ = (uint16)53257u;
static uint16 SP5X$ = (uint16)53258u;
static uint16 SP5Y$ = (uint16)53259u;
static uint16 SP6X$ = (uint16)53260u;
static uint16 SP6Y$ = (uint16)53261u;
static uint16 SP7X$ = (uint16)53262u;
static uint16 SP7Y$ = (uint16)53263u;
static uint16 VMCSB$ = (uint16)53272u;
static uint16 EXTCOL$ = (uint16)53280u;
static uint16 BGCOL0$ = (uint16)53281u;
static uint16 BGCOL1$ = (uint16)53282u;
static uint16 BGCOL2$ = (uint16)53283u;
static uint16 BGCOL3$ = (uint16)53284u;
static uint16 SP0COL$ = (uint16)53287u;
static uint16 SP1COL$ = (uint16)53288u;
static uint16 SP2COL$ = (uint16)53289u;
static uint16 SP3COL$ = (uint16)53290u;
static uint16 SP4COL$ = (uint16)53291u;
static uint16 SP5COL$ = (uint16)53309u;
static uint16 SP6COL$ = (uint16)53310u;
static uint16 SP7COL$ = (uint16)53311u;
static double MEM64$[16777216];
static int16 NOT_IN_DEFAULT$;
static int16 OK_TO_DECLARE$;
static int16 LVALUE_OK$;
struct $16BBOX_TREE_STRUCT;
struct $16BBOX_TREE_STRUCT {
 int16 INFINITE;
 int16 ENTRIES;
 struct $19BOUNDING_BOX_STRUCT BBOX;
 struct $16BBOX_TREE_STRUCT** NODE;
};
extern int __$fb_structsizecheck[(sizeof( struct $16BBOX_TREE_STRUCT ) == 32) ? 1 : -1];
static struct $16BBOX_TREE_STRUCT* ROOT_OBJECT$;
struct $14PROJECT_STRUCT {
 int64 X1;
 int64 Y1;
 int64 X2;
 int64 Y2;
};
extern int __$fb_structsizecheck[(sizeof( struct $14PROJECT_STRUCT ) == 32) ? 1 : -1];
struct $24PROJECT_TREE_NODE_STRUCT;
struct $24PROJECT_TREE_NODE_STRUCT {
 uint16 IS_LEAF;
 struct $16BBOX_TREE_STRUCT* NODE;
 struct $14PROJECT_STRUCT PROJECT;
 uint16 ENTRIES;
 struct $24PROJECT_TREE_NODE_STRUCT** ENTRY;
};
extern int __$fb_structsizecheck[(sizeof( struct $24PROJECT_TREE_NODE_STRUCT ) == 64) ? 1 : -1];
struct $20PROJECT_QUEUE_STRUCT {
 uint64 QSIZE;
 uint64 MAX_QSIZE;
 struct $24PROJECT_TREE_NODE_STRUCT** QUEUE;
};
extern int __$fb_structsizecheck[(sizeof( struct $20PROJECT_QUEUE_STRUCT ) == 24) ? 1 : -1];
static struct $20PROJECT_QUEUE_STRUCT* NODE_QUEUE$;
struct $12QELEM_STRUCT {
 double DEPTH;
 struct $16BBOX_TREE_STRUCT* NODE;
};
extern int __$fb_structsizecheck[(sizeof( struct $12QELEM_STRUCT ) == 16) ? 1 : -1];
struct $21PRIORITY_QUEUE_STRUCT {
 uint64 QSIZE;
 uint64 MAX_QSIZE;
 struct $12QELEM_STRUCT* QUEUE;
};
extern int __$fb_structsizecheck[(sizeof( struct $21PRIORITY_QUEUE_STRUCT ) == 24) ? 1 : -1];
static struct $21PRIORITY_QUEUE_STRUCT* VLBUFFER_QUEUE$;
static int64 TRACE_LEVEL$;
static int64 MAX_TRACE_LEVEL$;
static int64 HIGHEST_TRACE_LEVEL$;
static double ADC_BAILOUT$;
static uint32* HISTOGRAM_GRID$;
static uint32 MAX_HISTOGRAM_VALUE$;
struct $18FILE_HANDLE_STRUCT {
 int8* FILENAME;
 int64 MODE;
 int64 _WIDTH;
 int64 _HEIGHT;
 int64 BUFFER_SIZE;
 int8* BUFFER;
 void* FILE;
 int64 FILE_TYPE;
};
extern int __$fb_structsizecheck[(sizeof( struct $18FILE_HANDLE_STRUCT ) == 64) ? 1 : -1];
static struct $18FILE_HANDLE_STRUCT* HISTOGRAM_FILE_HANDLE$;
struct $14PATTERN_STRUCT;
struct $16BLEND_MAP_STRUCT;
struct $24DENSITY_FILE_DATA_STRUCT {
 int64 REFERENCES;
 int8* _NAME;
 int64 SX;
 int64 SY;
 int64 SZ;
 uint8*** DENSITY;
};
extern int __$fb_structsizecheck[(sizeof( struct $24DENSITY_FILE_DATA_STRUCT ) == 48) ? 1 : -1];
struct $19DENSITY_FILE_STRUCT {
 int64 INTERPOLATION;
 struct $24DENSITY_FILE_DATA_STRUCT* _DATA;
};
extern int __$fb_structsizecheck[(sizeof( struct $19DENSITY_FILE_STRUCT ) == 16) ? 1 : -1];
struct $19IMAGE_COLOUR_STRUCT {
 uint16 RED;
 uint16 GREEN;
 uint16 BLUE;
 uint16 FILTER;
 uint16 TRANSMIT;
};
extern int __$fb_structsizecheck[(sizeof( struct $19IMAGE_COLOUR_STRUCT ) == 10) ? 1 : -1];
struct $17IMAGE_LINE_STRUCT {
 uint8* RED;
 uint8* GREEN;
 uint8* BLUE;
 uint8* TRANSM;
};
extern int __$fb_structsizecheck[(sizeof( struct $17IMAGE_LINE_STRUCT ) == 32) ? 1 : -1];
struct $12IMAGE_STRUCT {
 int64 REFERENCES;
 int64 MAP_TYPE;
 int64 FILE_TYPE;
 int64 IMAGE_TYPE;
 int64 INTERPOLATION_TYPE;
 int16 ONCE_FLAG;
 int16 USE_COLOUR_FLAG;
 double GRADIENT;
 double _WIDTH;
 double _HEIGHT;
 int64 IWIDTH;
 int64 IHEIGHT;
 int16 COLOUR_MAP_SIZE;
 struct $19IMAGE_COLOUR_STRUCT* COLOUR_MAP;
 union {
  struct $17IMAGE_LINE_STRUCT* RGB_LINES;
  uint8** MAP_LINES;
 };
};
extern int __$fb_structsizecheck[(sizeof( struct $12IMAGE_STRUCT ) == 112) ? 1 : -1];
struct $14PIGMENT_STRUCT {
 uint16 _TYPE;
 uint16 WAVE_TYPE;
 uint16 FLAGS;
 int64 REFERENCES;
 double FREQUENCY;
 double PHASE;
 double EXPONENT;
 struct $14PATTERN_STRUCT* _NEXT;
 struct $16BLEND_MAP_STRUCT* BLEND_MAP;
 union {
  struct $19DENSITY_FILE_STRUCT* DENSITY_FILE;
  struct $12IMAGE_STRUCT* IMAGE;
  double GRADIENT;
  double AGATE_TURB_SCALE;
  int16 NUM_OF_WAVES;
  int16 ITERATIONS;
  int16 ARMS;
  struct {
   double MORTAR;
   double SIZE;
  };
  struct {
   double CONTROL0;
   double CONTROL1;
  };
  double COLOUR;
 };
};
extern int __$fb_structsizecheck[(sizeof( struct $14PIGMENT_STRUCT ) == 72) ? 1 : -1];
struct $14TNORMAL_STRUCT;
struct $13FINISH_STRUCT {
 double DIFFUSE;
 double BRILLIANCE;
 double SPECULAR;
 double ROUGHNESS;
 double PHONG;
 double PHONG_SIZE;
 double IRID;
 double IRID_FILM_THICKNESS;
 double IRID_TURB;
 double CRAND;
 double METALLIC;
 double TEMP_CAUSTICS;
 double TEMP_IOR;
 double TEMP_REFRACT;
 double REFLECT_EXP;
 double AMBIENT;
 double REFLECTION;
};
extern int __$fb_structsizecheck[(sizeof( struct $13FINISH_STRUCT ) == 136) ? 1 : -1];
struct $14TEXTURE_STRUCT;
struct $14TEXTURE_STRUCT {
 uint16 _TYPE;
 uint16 WAVE_TYPE;
 uint16 FLAGS;
 int64 REFERENCES;
 double FREQUENCY;
 double PHASE;
 double EXPONENT;
 struct $14PATTERN_STRUCT* _NEXT;
 struct $16BLEND_MAP_STRUCT* BLEND_MAP;
 union {
  struct $19DENSITY_FILE_STRUCT* DENSITY_FILE;
  struct $12IMAGE_STRUCT* IMAGE;
  double GRADIENT;
  double AGATE_TURB_SCALE;
  int16 NUM_OF_WAVES;
  int16 ITERATIONS;
  int16 ARMS;
  struct {
   double MORTAR;
   double SIZE;
  };
  struct {
   double CONTROL0;
   double CONTROL1;
  };
 };
 struct $14PIGMENT_STRUCT* PIGMENT;
 struct $14TNORMAL_STRUCT* TNORMAL;
 struct $13FINISH_STRUCT* FINISH;
 struct $14TEXTURE_STRUCT* MATERIALS;
 int64 NUM_OF_MATS;
 struct $14TEXTURE_STRUCT* NEXT_MATERIAL;
};
extern int __$fb_structsizecheck[(sizeof( struct $14TEXTURE_STRUCT ) == 120) ? 1 : -1];
struct $15BLEND_MAP_ENTRY {
 double VALUE;
 uint8 SAME;
 union {
  double COLOUR;
  struct $14PIGMENT_STRUCT* PIGMENT;
  struct $14TNORMAL_STRUCT* TNORMAL;
  struct $14TEXTURE_STRUCT* TEXTURE;
  double POINT_SLOPE;
 };
};
extern int __$fb_structsizecheck[(sizeof( struct $15BLEND_MAP_ENTRY ) == 24) ? 1 : -1];
struct $16BLEND_MAP_STRUCT {
 int16 NUMBER_OF_ENTRIES;
 int16 TRANSPARENCY_FLAG;
 int16 _TYPE;
 int32 USERS;
 struct $15BLEND_MAP_ENTRY* BLEND_MAP_ENTRIES;
};
extern int __$fb_structsizecheck[(sizeof( struct $16BLEND_MAP_STRUCT ) == 24) ? 1 : -1];
struct $14PATTERN_STRUCT {
 uint16 _TYPE;
 uint16 WAVE_TYPE;
 uint16 FLAGS;
 int64 REFERENCES;
 double FREQUENCY;
 double PHASE;
 double EXPONENT;
 struct $14PATTERN_STRUCT* _NEXT;
 struct $16BLEND_MAP_STRUCT* BLEND_MAP;
 union {
  struct $19DENSITY_FILE_STRUCT* DENSITY_FILE;
  struct $12IMAGE_STRUCT* IMAGE;
  double GRADIENT;
  double AGATE_TURB_SCALE;
  int16 NUM_OF_WAVES;
  int16 ITERATIONS;
  int16 ARMS;
  struct {
   double MORTAR;
   double SIZE;
  };
  struct {
   double CONTROL0;
   double CONTROL1;
  };
 };
};
extern int __$fb_structsizecheck[(sizeof( struct $14PATTERN_STRUCT ) == 72) ? 1 : -1];
struct $14TNORMAL_STRUCT {
 uint16 _TYPE;
 uint16 WAVE_TYPE;
 uint16 FLAGS;
 int64 REFERENCES;
 double FREQUENCY;
 double PHASE;
 double EXPONENT;
 struct $14PATTERN_STRUCT* _NEXT;
 struct $16BLEND_MAP_STRUCT* BLEND_MAP;
 union {
  struct $19DENSITY_FILE_STRUCT* DENSITY_FILE;
  struct $12IMAGE_STRUCT* IMAGE;
  double GRADIENT;
  double AGATE_TURB_SCALE;
  int16 NUM_OF_WAVES;
  int16 ITERATIONS;
  int16 ARMS;
  struct {
   double MORTAR;
   double SIZE;
  };
  struct {
   double CONTROL0;
   double CONTROL1;
  };
  double AMOUNT;
 };
};
extern int __$fb_structsizecheck[(sizeof( struct $14TNORMAL_STRUCT ) == 72) ? 1 : -1];
struct $13CAMERA_STRUCT {
 double LOCATION;
 double DIRECTION;
 double UP;
 double _RIGHT;
 double SKY;
 double LOOK_AT;
 double FOCAL_DISTANCE;
 double APERTURE;
 int64 BLUR_SAMPLES;
 double CONFIDENCE;
 double VARIANCE;
 int64 _TYPE;
 double ANGLE;
 struct $14TNORMAL_STRUCT* TNORMAL;
};
extern int __$fb_structsizecheck[(sizeof( struct $13CAMERA_STRUCT ) == 112) ? 1 : -1];
struct $13OBJECT_STRUCT;
struct $12MEDIA_STRUCT;
struct $12MEDIA_STRUCT {
 int64 _TYPE;
 int64 INTERVALS;
 int64 MIN_SAMPLES;
 int64 MAX_SAMPLES;
 int64 IS_CONSTANT;
 double ECCENTRICITY;
 double SC_EXT;
 int64 USE_ABSORPTION;
 int64 USE_EMISSION;
 int64 USE_EXTINCTION;
 int64 USE_SCATTERING;
 double ABSORPTION;
 double EMISSION;
 double EXTINCTION;
 double SCATTERING;
 double RATIO;
 double CONFIDENCE;
 double VARIANCE;
 double* SAMPLE_THRESHOLD;
 struct $14PIGMENT_STRUCT* DENSITY;
 struct $12MEDIA_STRUCT* NEXT_MEDIA;
};
extern int __$fb_structsizecheck[(sizeof( struct $12MEDIA_STRUCT ) == 168) ? 1 : -1];
struct $15INTERIOR_STRUCT {
 int32 REFERENCES;
 int64 HOLLOW;
 double IOR;
 double CAUSTICS;
 double OLD_REFRACT;
 double FADE_DISTANCE;
 double FADE_POWER;
 struct $12MEDIA_STRUCT* IMEDIA;
};
extern int __$fb_structsizecheck[(sizeof( struct $15INTERIOR_STRUCT ) == 64) ? 1 : -1];
struct $14_OBJECT_FIELDS {
 void* METHODS;
 int64 _TYPE;
 struct $13OBJECT_STRUCT* SIBLING;
 struct $14TEXTURE_STRUCT* TEXTURE;
 struct $15INTERIOR_STRUCT* INTERIOR;
 struct $13OBJECT_STRUCT* BOUND;
 struct $13OBJECT_STRUCT* CLIP;
 struct $19BOUNDING_BOX_STRUCT BBOX;
 uint32 FLAGS;
};
extern int __$fb_structsizecheck[(sizeof( struct $14_OBJECT_FIELDS ) == 80) ? 1 : -1];
struct $13OBJECT_STRUCT {
 struct $14_OBJECT_FIELDS OBJECT_FIELDS;
};
extern int __$fb_structsizecheck[(sizeof( struct $13OBJECT_STRUCT ) == 80) ? 1 : -1];
struct $16_COMPOUND_FIELDS {
 struct $14_OBJECT_FIELDS OBJECT_FIELDS;
 struct $13OBJECT_STRUCT* CHILDREN;
};
extern int __$fb_structsizecheck[(sizeof( struct $16_COMPOUND_FIELDS ) == 88) ? 1 : -1];
struct $19LIGHT_SOURCE_STRUCT;
struct $19LIGHT_SOURCE_STRUCT {
 struct $16_COMPOUND_FIELDS COMPOUND_FIELDS;
 double COLOUR;
 double DIRECTION;
 double CENTER;
 double POINTS_AT;
 double _AXIS1;
 double _AXIS2;
 double COEFF;
 double RADIUS;
 double FALLOFF;
 double FADE_DISTANCE;
 double FADE_POWER;
 struct $19LIGHT_SOURCE_STRUCT* NEXT_LIGHT_SOURCE;
 uint8 LIGHT_TYPE;
 uint8 AREA_LIGHT;
 uint8 JITTER;
 uint8 TRACK;
 int64 AREA_SIZE1;
 int64 AREA_SIZE2;
 int64 ADAPTIVE_LEVEL;
 int64 MEDIA_ATTENUATION;
 int64 MEDIA_INTERACTION;
 double** LIGHT_GRID;
 struct $13OBJECT_STRUCT* SHADOW_CACHED_OBJECT;
 struct $24PROJECT_TREE_NODE_STRUCT* LIGHT_BUFFER;
};
extern int __$fb_structsizecheck[(sizeof( struct $19LIGHT_SOURCE_STRUCT ) == 256) ? 1 : -1];
struct $12WARPS_STRUCT;
struct $12WARPS_STRUCT {
 uint16 WARP_TYPE;
 struct $12WARPS_STRUCT* NEXT_WARP;
};
extern int __$fb_structsizecheck[(sizeof( struct $12WARPS_STRUCT ) == 16) ? 1 : -1];
struct $11TURB_STRUCT {
 uint16 WARP_TYPE;
 struct $12WARPS_STRUCT* NEXT_WARP;
 double TURBULENCE;
 int64 OCTAVES;
 double LAMBDA;
 double OMEGA;
};
extern int __$fb_structsizecheck[(sizeof( struct $11TURB_STRUCT ) == 48) ? 1 : -1];
struct $10FOG_STRUCT;
struct $10FOG_STRUCT {
 int64 _TYPE;
 double DISTANCE;
 double ALT;
 double OFFSET;
 double COLOUR;
 double UP;
 struct $11TURB_STRUCT* TURB;
 double TURB_DEPTH;
 struct $10FOG_STRUCT* _NEXT;
};
extern int __$fb_structsizecheck[(sizeof( struct $10FOG_STRUCT ) == 72) ? 1 : -1];
struct $14RAINBOW_STRUCT;
struct $14RAINBOW_STRUCT {
 double DISTANCE;
 double JITTER;
 double ANGLE;
 double _WIDTH;
 double ARC_ANGLE;
 double FALLOFF_ANGLE;
 double FALLOFF_WIDTH;
 double ANTISOLAR_VECTOR;
 double UP_VECTOR;
 double RIGHT_VECTOR;
 struct $14PIGMENT_STRUCT* PIGMENT;
 struct $14RAINBOW_STRUCT* _NEXT;
};
extern int __$fb_structsizecheck[(sizeof( struct $14RAINBOW_STRUCT ) == 96) ? 1 : -1];
struct $16TRANSFORM_STRUCT {
 double MATRIX;
 double INVERSE;
};
extern int __$fb_structsizecheck[(sizeof( struct $16TRANSFORM_STRUCT ) == 16) ? 1 : -1];
struct $16SKYSPHERE_STRUCT {
 int64 COUNT;
 struct $14PIGMENT_STRUCT** PIGMENTS;
 struct $16TRANSFORM_STRUCT* TRANS;
};
extern int __$fb_structsizecheck[(sizeof( struct $16SKYSPHERE_STRUCT ) == 24) ? 1 : -1];
struct $12FRAME_STRUCT {
 struct $13CAMERA_STRUCT* CAMERA;
 int64 SCREEN_HEIGHT;
 int64 SCREEN_WIDTH;
 int64 NUMBER_OF_LIGHT_SOURCES;
 struct $19LIGHT_SOURCE_STRUCT* LIGHT_SOURCES;
 struct $13OBJECT_STRUCT* OBJECTS;
 double ATMOSPHERE_IOR;
 double ANTIALIAS_THRESHOLD;
 double BACKGROUND_COLOUR;
 double AMBIENT_LIGHT;
 double IRID_WAVELENGTHS;
 struct $12MEDIA_STRUCT* ATMOSPHERE;
 struct $10FOG_STRUCT* FOG;
 struct $14RAINBOW_STRUCT* RAINBOW;
 struct $16SKYSPHERE_STRUCT* SKYSPHERE;
};
extern int __$fb_structsizecheck[(sizeof( struct $12FRAME_STRUCT ) == 120) ? 1 : -1];
static struct $12FRAME_STRUCT FRAME$;
struct $14COUNTER_STRUCT {
 uint32 HIGH;
 uint32 LOW;
};
extern int __$fb_structsizecheck[(sizeof( struct $14COUNTER_STRUCT ) == 8) ? 1 : -1];
static struct $14COUNTER_STRUCT _STATS$[99];
static struct $14COUNTER_STRUCT TOTALSTATS$[99];
static int64 TSTART$;
static int64 TSTOP$;
static double TPARSE$;
static double TRENDER$;
static double TPARSE_TOTAL$;
static double TRENDER_TOTAL$;
static int8 COLOR_BITS$;
static int64 NUMBER_OF_FILES$;
struct $8FRAMESEQ {
 double CLOCK_VALUE;
 int64 FRAMENUMBER;
 int64 INITIALFRAME;
 double INITIALCLOCK;
 int64 FINALFRAME;
 int64 FRAMENUMWIDTH;
 double FINALCLOCK;
 int64 SUBSETSTARTFRAME;
 double SUBSETSTARTPERCENT;
 int64 SUBSETENDFRAME;
 double SUBSETENDPERCENT;
 uint64 FIELD_RENDER_FLAG;
 uint64 ODD_FIELD_FLAG;
};
extern int __$fb_structsizecheck[(sizeof( struct $8FRAMESEQ ) == 104) ? 1 : -1];
typedef int64 $15HISTOGRAM_TYPES;
typedef int64 $9_SHELLRET;
struct $10_SHELLDATA {
 $9_SHELLRET RET;
 int64 INVERSE;
 int8 _COMMAND[251];
};
extern int __$fb_structsizecheck[(sizeof( struct $10_SHELLDATA ) == 272) ? 1 : -1];
struct $15_OPTIONS_STRUCT {
 int64 FILE_BUFFER_SIZE;
 uint32 OPTIONS;
 int8 DISPLAYFORMAT;
 int8 PALETTEOPTION;
 int8 OUTPUTFORMAT;
 int64 OUTPUTQUALITY;
 int8 INPUT_FILE_NAME[151];
 int8 OUTPUT_FILE_NAME[151];
 int8 OUTPUT_PATH[151];
 int8 OUTPUT_NUMBERED_NAME[151];
 int8 SCENE_NAME[151];
 double DISPLAYGAMMA;
 double GAMMAFACTOR;
 uint32 QUALITY_FLAGS;
 int32 ANTIALIASDEPTH;
 double ANTIALIAS_THRESHOLD;
 double JITTERSCALE;
 int64 ABORT_TEST_COUNTER;
 int8* LIBRARY_PATHS[26];
 int64 LIBRARY_PATH_INDEX;
 int64 FIRST_COLUMN;
 int64 LAST_COLUMN;
 double FIRST_COLUMN_PERCENT;
 double LAST_COLUMN_PERCENT;
 int64 FIRST_LINE;
 int64 LAST_LINE;
 double FIRST_LINE_PERCENT;
 double LAST_LINE_PERCENT;
 double LANGUAGE_VERSION;
 int64 USE_SLABS;
 int32 BBOX_THRESHOLD;
 int64 QUALITY;
 int64 PREVIEWGRIDSIZE_START;
 int64 PREVIEWGRIDSIZE_END;
 struct $8FRAMESEQ FRAMESEQ;
 double RADIOSITY_BRIGHTNESS;
 int32 RADIOSITY_COUNT;
 double RADIOSITY_DIST_MAX;
 double RADIOSITY_ERROR_BOUND;
 double RADIOSITY_GRAY;
 double RADIOSITY_LOW_ERROR_FACTOR;
 double RADIOSITY_MIN_REUSE;
 int32 RADIOSITY_NEAREST_COUNT;
 int64 RADIOSITY_RECURSION_LIMIT;
 int32 RADIOSITY_QUALITY;
 int64 RADIOSITY_FILE_READONCONTINUE;
 int64 RADIOSITY_FILE_SAVEWHILERENDERING;
 int64 RADIOSITY_FILE_ALWAYSREADATSTART;
 int64 RADIOSITY_FILE_KEEPONABORT;
 int64 RADIOSITY_FILE_KEEPALWAYS;
 int64 RADIOSITY_PREVIEW_DONE;
 int64 HISTOGRAM_X;
 int64 HISTOGRAM_Y;
 int64 HISTOGRAM_ON;
 $15HISTOGRAM_TYPES HISTOGRAM_TYPE;
 int8 HISTOGRAM_FILE_NAME[151];
 struct $10_SHELLDATA* SHELLOUTS;
 int8 INI_OUTPUT_FILE_NAME[151];
 int64 TRACING_METHOD;
 int64 DO_STATS;
};
extern int __$fb_structsizecheck[(sizeof( struct $15_OPTIONS_STRUCT ) == 1752) ? 1 : -1];
static struct $15_OPTIONS_STRUCT OPTS$;
static void* STAT_FILE$;
struct $11file_handle {
 uint32 HANDLE_BYTES;
 int32 HANDLE_TYPE;
 uint8* F_HANDLE;
};
extern int __$fb_structsizecheck[(sizeof( struct $11file_handle ) == 16) ? 1 : -1];
static struct $11file_handle* OUTPUT_FILE_HANDLE$;
static int64 HELP_AVAILABLE$;
static int64 ABORT_TEST_EVERY$;
static int64 DISPLAY_STARTED$;
static int64 STAGE$;
static int64 STOP_FLAG$;
static int64 PRE_INIT_FLAG$;
static int64 EXPERIMENTAL_FLAG$;
static int64 NUM_ECHO_LINES$;
static int64 ECHO_LINE_LENGTH$;
static int8* OPTION_STRING_PTR$;
static double CLOCK_DELTA$;
static int64 LEAK_MSG$ = 0ll;
struct $8FBARRAY1IPPFvPhS_iiiiiPFjjjPvES0_EE {
 tmp$398** DATA;
 tmp$398** PTR;
 int64 SIZE;
 int64 ELEMENT_LEN;
 int64 DIMENSIONS;
 int64 FLAGS;
 struct $16__FB_ARRAYDIMTB$ DIMTB[1];
};
extern int __$fb_structsizecheck[(sizeof( struct $8FBARRAY1IPPFvPhS_iiiiiPFjjjPvES0_EE ) == 72) ? 1 : -1];
static struct $8FBARRAY1IPPFvPhS_iiiiiPFjjjPvES0_EE _ZN9FB_GFXCTX8tmp$406$E;
static uint32 NEW_ERROR$ = 0u;
static int64 KEYHIT$[8193];
static int32 KEYHIT_NEXTFREE$;
static int32 KEYHIT_NEXT$;
static uint8 PORT60H_EVENT$[257];
static int32 PORT60H_EVENTS$;
static int32 WINDOW_EXISTS$;
static int32 NO_CONTROL_CHARACTERS2$;
static int32 DISABLEEVENTS$ = 0;
static int32 CONSOLEKEY$;
static int32 CONSOLEMOUSEX$;
static int32 CONSOLEMOUSEY$;
static int32 CONSOLEBUTTON$;
static int32 SLEEP_BREAK$;
static uint64 MEM_LOCK_ID$;
struct $8MEM_LOCK {
 uint64 ID;
 int32 TYPE;
 void* OFFSET;
};
extern int __$fb_structsizecheck[(sizeof( struct $8MEM_LOCK ) == 24) ? 1 : -1];
static struct $8MEM_LOCK* MEM_LOCK_TMP$;
static int64 EXIT_CODE$;
static int32 LOCK_MAINLOOP$;
static int64 DEVICE_EVENT_INDEX$;
static int32 EXIT_OK$;
static struct $3QBS* FUNC_COMMAND_STR$;
static uint32 ERCL$;
static uint32 INCLERCL$;
static int8* INCLUDEDFILENAME$;
static uint16 CALL_ABSOLUTE_OFFSETS$[257];
static uint32 DBGLINE$;
static uint32 QBS_MEM64_SP$ = 256u;
static uint32 MEM64_SP$ = 65536u;
static int64 DBLOCK$;
static uint64* NOTHINGVALUE$;
static uint32 QBS_TMP_LIST_NEXTI$ = 1u;
static struct $3QBS* NOTHINGSTRING$;
static uint8 STOP_PROGRAM$ = (uint8)0u;
static double* MEM64_STATIC_POINTER$ = (double*)((uint8*)MEM64$ + 534528ll);
static double* MEM64_DYNAMIC_BASE$ = (double*)((uint8*)MEM64$ + 5242880ll);
static double* MEM_STATIC$;
static double* MEM_STATIC_POINTER$;
static double* MEM_STATIC_LIMIT$;
static uint32* RETURN_POINT$ = (uint32*)0ull;
static uint32 RETURN_POINTS$ = 16384u;
static void* QBS_INPUT_VARIABLEOFFSETS$[258];
static int32 QBS_INPUT_VARIABLETYPES$[258];
static int8 G_TMP_CHAR$;
static uint8 G_TMP_UCHAR$;
static int16 G_TMP_SHORT$;
static uint16 G_TMP_USHORT$;
static int32 G_TMP_LONG$;
static uint32 G_TMP_ULONG$;
static int8 G_TMP_INT8$;
static uint8 G_TMP_UINT8$;
static int16 G_TMP_INT16$;
static uint16 G_TMP_UINT16$;
static int32 G_TMP_INT32$;
static uint32 G_TMP_UINT32$;
static int64 G_TMP_INT64$;
static uint64 G_TMP_UINT64$;
static double G_TMP_FLOAT$;
static double G_TMP_DOUBLE$;
static double G_TMP_LONGDOUBLE$;
static struct $3QBS* G_TMP_STR$;
static struct $3QBS* G_SWAP_STR$;
static struct $3QBS* PASS_STR$;
static uint64 MEM_STATIC_SIZE$;
static struct $23MEM64_DYNAMIC_LINK_TYPE MEM64_DYNAMIC_LINK$[147138];
static struct $23MEM64_DYNAMIC_LINK_TYPE* MEM64_DYNAMIC_LINK_FIRST$ = (struct $23MEM64_DYNAMIC_LINK_TYPE*)0ull;
static int64 MEM64_DYNAMIC_NEXT_LINK$ = 0ll;
static int64 MEM64_DYNAMIC_FREE_LINK$ = 0ll;
static uint64 MEM64_DYNAMIC_FREE_LIST$[147137];
static double* DEFSEG$ = (double*)((uint8*)MEM64$ + 10240ll);
static uint8 KEYON$[65537];
static struct $3QBS* SINGLESPACE$;
static struct $3QBS* QBS_MALLOC$;
static uint64 QBS_MALLOC_NEXT$ = 0ull;
static int64* QBS_MALLOC_FREED$;
static uint64 QBS_MALLOC_FREED_SIZE$ = 65536ull;
static uint64 QBS_MALLOC_FREED_NUM$ = 0ull;
static int64* QBS_MEM64_LIST$;
static uint64 QBS_MEM64_LIST_LASTI$ = 65535ull;
static uint64 QBS_MEM64_LIST_NEXTI$ = 0ull;
static int64* QBS_LIST$;
static uint64 QBS_LIST_LASTI$ = 65535ull;
static uint64 QBS_LIST_NEXTI$ = 0ull;
static int64* QBS_TMP_LIST$;
static uint64 QBS_TMP_LIST_LASTI$ = 65535ull;
static uint8* QBS_DATA$;
static uint64 QBS_DATA_SIZE$ = 1048576ull;
static uint64 QBS_SP$ = 0ull;
static struct $15GFS_FILE_STRUCT* GFS_FILE$;
static int32 GFS_N$ = 0;
static int32* GFS_FREED$;
static int32* GFS_FILENO$;
static int32 GFS_FILENO_N$ = 0;
static int32 FIELD_FAILED$ = 1;
static int32 FIELD_FILENO$;
static int32 FIELD_TOTALSIZE$;
static int32 FIELD_MAXSIZE$;
static int64 GFS_READ_BYTES_VALUE$;
static uint8* IP$;
static uint8* SEG$;
static uint8* SEG_BP$;
static uint8* REG8$[9];
static uint16* REG16$[9];
static uint64* REG32$[9];
static uint64* REG64$[9];
static uint16* SEGREG$[9];
static int64 A32$;
static int64 B32$;
struct $10IMG_STRUCT {
 void* LOCK_OFFSET;
 int64 LOCK_ID;
 uint8 VALID;
 uint8 TEXT;
 uint8 CONSOLE;
 uint16 WIDTH;
 uint16 HEIGHT;
 uint8 BYTES_PER_PIXEL;
 uint8 BITS_PER_PIXEL;
 uint32 MASK;
 uint16 COMPATIBLE_MODE;
 uint32 COLOR;
 uint32 BACKGROUND_COLOR;
 uint32 DRAW_COLOR;
 uint32 FONT;
 int16 TOP_ROW;
 int16 BOTTOM_ROW;
 int16 CURSOR_X;
 int16 CURSOR_Y;
 uint8 CURSOR_SHOW;
 uint8 CURSOR_FIRSTVALUE;
 uint8 CURSOR_LASTVALUE;
 union {
  uint8* OFFSET;
  uint32* OFFSET32;
 };
 uint32 FLAGS;
 uint32* PAL;
 int32 TRANSPARENT_COLOR;
 uint8 ALPHA_DISABLED;
 uint8 HOLDING_CURSOR;
 uint8 PRINT_MODE;
 uint8 APM_P1;
 int32 VIEW_X1;
 int32 VIEW_Y1;
 int32 VIEW_X2;
 int32 VIEW_Y2;
 int32 VIEW_OFFSET_X;
 int32 VIEW_OFFSET_Y;
 double X;
 double Y;
 uint8 CLIPPING_OR_SCALING;
 double SCALING_X;
 double SCALING_Y;
 double SCALING_OFFSET_X;
 double SCALING_OFFSET_Y;
 double WINDOW_X1;
 double WINDOW_Y1;
 double WINDOW_X2;
 double WINDOW_Y2;
 double DRAW_TA;
 double DRAW_SCALE;
 uint8 APM_P2;
};
extern int __$fb_structsizecheck[(sizeof( struct $10IMG_STRUCT ) == 232) ? 1 : -1];
static struct $10IMG_STRUCT* WRITE_PAGE$ = (struct $10IMG_STRUCT*)0ull;
static int64 UNSUPPORTED_PORT_ACCESSED$ = 0ll;
static int64 H3C7_PALETTE_REGISTER_READ_INDEX$ = 0ll;
static int64 H3C8_PALETTE_REGISTER_INDEX$ = 0ll;
static int64 H3C9_NEXT$ = 0ll;
static int64 H3C9_READ_NEXT$ = 0ll;
static int64 H3C0_BLINK_ENABLE$ = 1ll;
static uint64 QB64_FIRSTTIMERVALUE$;
static uint64 CLOCK_FIRSTTIMERVALUE$;
static int64 VERTICAL_RETRACE_IN_PROGRESS$ = 0ll;
static int64 VERTICAL_RETRACE_HAPPENED$ = 0ll;
static int32 CONSOLE$;
static int32 SCREEN_HIDE_STARTUP$;
static int32 ASSERTS$;
static int32 VWATCH$;
static int32 REQUESTEDKEYBOARDOVERLAYIMAGE$;
static uint32 QBS_MEM64_DESCRIPTOR_SPACE$ = 256u;
extern double SWCH$;
extern double OFFSET$;
extern void* IMAGE$;
extern FBSTRING STRCODE$;
extern FBSTRING FILENAME$;
static tmp$532 GLCREATESHADER$;
static tmp$461 GLDELETESHADER$;
static tmp$541 GLSHADERSOURCE$;
static tmp$461 GLCOMPILESHADER$;
static tmp$522 GLGETSHADERIV$;
static tmp$536 GLGETSHADERINFOLOG$;
static tmp$531 GLCREATEPROGRAM$;
static tmp$461 GLDELETEPROGRAM$;
static tmp$521 GLATTACHSHADER$;
static tmp$521 GLDETACHSHADER$;
static tmp$461 GLLINKPROGRAM$;
static tmp$522 GLGETPROGRAMIV$;
static tmp$536 GLGETPROGRAMINFOLOG$;
static tmp$461 GLUSEPROGRAM$;
static tmp$535 GLGETUNIFORMLOCATION$;
static tmp$542 GLUNIFORM1F$;
typedef void (*tmp$543)( int32, float, float );
static tmp$543 GLUNIFORM2F$;
static tmp$544 GLUNIFORM3F$;
static tmp$548 GLUNIFORM3FV$;
static tmp$545 GLUNIFORM4F$;
static tmp$548 GLUNIFORM4FV$;
static tmp$515 GLUNIFORM1I$;
static double PC$;
static double ADR0$;
static double ADR1$;
static double ADR2$;
static double ADR3$;
static double PC_STATUS$;
static double R0$;
static double R1$;
static double R2$;
static double R3$;
static double R4$;
static double R5$;
static double RADIUS$;
static double RED2$ = 0x1.FEp+7;
static double GREEN2$ = 0x1.FEp+7;
static double BLUE2$ = 0x1.FEp+7;
static double XALPHA2$ = 0x1.FEp+7;
static double X_AXIS0$;
static double Y_AXIS0$;
static double Z_AXIS0$;
static double COL0$;
static double COL1$;
static double CHAR_H$ = 0x1.68p+6;
static double X_AXIS1$;
static double Y_AXIS1$;
static double Z_AXIS1$;
static double CHAR_PTR$;
static double CHAR_W$ = 0x1.68p+6;
static double CHAR_BUFFER$ = 0x1.p+14;
static double BITMASK$ = 0x1.FEp+7;
static double PIXEL_SIZE$;
static double OCC$;
static double AMBIENT$;
static double DIFFUSE$;
static double BAC$;
static double DOM$;
static double FR$;
static double SPECULAR$;
static double IGLOBALTIME$;
static double RTIME$;
static double ITIME$;
static double CR$;
static double T$;
static double M$;
static double SCA$;
static double HR$;
static double DD2$;
static double EPS$;
static double RESF$;
static double H$;
static double MINT$;
static double TMAX$;
static double TMIN$;
static double PRECIS$;
static double S$;
static struct $4MAT2 M2$;
static struct $7VECTOR3 IRESOLUTION$;
static struct $7VECTOR4 IMOUSE$;
static struct $7VECTOR4 FRAGCOLOR$;
static struct $7VECTOR2 FRAGCOORD$;
static struct $7VECTOR2 Q$;
static struct $7VECTOR2 P2$;
static struct $7VECTOR3 RO$;
static struct $7VECTOR3 TA$;
static struct $4MAT3 CA$;
static struct $7VECTOR3 RD$;
static struct $7VECTOR3 COL$;
static struct $7VECTOR2 UV$;
static struct $7VECTOR3 CW$;
static struct $7VECTOR3 CP$;
static struct $7VECTOR3 CU$;
static struct $7VECTOR3 CV$;
static struct $7VECTOR3 LIN$;
static struct $7VECTOR3 REF$;
static struct $7VECTOR3 LIGHT$;
static struct $7VECTOR3 P3$;
static struct $7VECTOR3 NOR$;
static struct $7VECTOR2 RES2$;
static struct $7VECTOR3 AOPOS$;
static struct $7VECTOR2 RV2$;
static double STRING_ADR$;
static double STRING_LEN$;
static FBSTRING DRIVER_NAME$;
static FBSTRING STRING_DATA$;
static double A1$;
static double A2$;
static double A3$;
static double A4$;
static double A5$;
static double A6$;
static double A7$;
static double A8$;
static FBSTRING GET_KEY$;
static FBSTRING GET_DATA$;
static FBSTRING OLD_DATA$[10001];
static uint64 I$;
static uint8 NIBBLES$[16];
static int64 C$ = 0ll;
static int64 X$ = 0ll;
static int64 Y$ = 0ll;
static int64 XS$ = 0ll;
static int64 YS$ = 0ll;
static int64 CARY$ = 0ll;
static int64 G$ = 0ll;
extern double SYS_OFFSET$;
extern double STR_LEN$;
extern double CNT$;
extern void* BGIMAGE$;
extern void* FGIMAGE$;
extern void* RASTER$;
extern void* _RENDER$;
extern void* PSCRN$;
extern FBSTRING COMPILER$;
extern uint64 SCR_W$;
extern uint64 SCR_H$;
extern uint64 SCR_POS$;
extern uint64 IMGDATA$;
extern uint64 PITCH$;
extern FBSTRING MSG$;
struct $7FBARRAYIdE {
 double* DATA;
 double* PTR;
 int64 SIZE;
 int64 ELEMENT_LEN;
 int64 DIMENSIONS;
 int64 FLAGS;
 struct $16__FB_ARRAYDIMTB$ DIMTB[8];
};
extern int __$fb_structsizecheck[(sizeof( struct $7FBARRAYIdE ) == 240) ? 1 : -1];
extern struct $7FBARRAYIdE POWER2$;
extern double SIZESCREEN$;
extern FBSTRING _SCREENRES$;
extern FBSTRING _NAME$;
extern double SCRWIDTH$;
extern double SCRHEIGHT$;
extern double RED$;
extern double GREEN$;
extern double BLUE$;
extern double XSCRCENTER$;
extern double YSCRCENTER$;
static struct $5MULTI V$;
static struct $5MULTI O$;
static struct $5C64_T COMPUTER$;
static int64 FLAG$;
static uint64 TICKS$;
static uint64 RES$;
struct $14__FB_DATADESC$ {
 int16 TYPE __attribute__((packed, aligned(1)));
 void* NODE __attribute__((packed, aligned(1)));
};
extern int __$fb_structsizecheck[(sizeof( struct $14__FB_DATADESC$ ) == 10) ? 1 : -1];
static struct $14__FB_DATADESC$ label$13524[17] = { { (int16)1, (void*)"0" }, { (int16)2, (void*)"34" }, { (int16)3, (void*)"212" }, { (int16)3, (void*)"229" }, { (int16)1, (void*)"0" }, { (int16)2, (void*)"10" }, { (int16)2, (void*)"20" }, { (int16)3, (void*)"225" }, { (int16)3, (void*)"100" }, { (int16)3, (void*)"165" }, { (int16)3, (void*)"133" }, { (int16)3, (void*)"164" }, { (int16)3, (void*)"121" }, { (int16)3, (void*)"166" }, { (int16)3, (void*)"156" }, { (int16)3, (void*)"227" }, { (int16)-1, (void*)0ull } };
static struct $14__FB_DATADESC$ label$13522[17] = { { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)2, (void*)"63" }, { (int16)3, (void*)"125" }, { (int16)3, (void*)"234" }, { (int16)3, (void*)"125" }, { (int16)3, (void*)"234" }, { (int16)2, (void*)"32" }, { (int16)1, (void*)"7" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"125" }, { (int16)3, (void*)"234" }, { (int16)3, (void*)"133" }, { (int16)1, (void*)"1" }, { (int16)-1, (void*)label$13524 } };
static struct $14__FB_DATADESC$ label$13520[17] = { { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)-1, (void*)label$13522 } };
static struct $14__FB_DATADESC$ label$13518[17] = { { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)-1, (void*)label$13520 } };
static struct $14__FB_DATADESC$ label$13516[17] = { { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)-1, (void*)label$13518 } };
static struct $14__FB_DATADESC$ label$13514[17] = { { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)-1, (void*)label$13516 } };
static struct $14__FB_DATADESC$ label$13512[17] = { { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)-1, (void*)label$13514 } };
static struct $14__FB_DATADESC$ label$13510[17] = { { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)-1, (void*)label$13512 } };
static struct $14__FB_DATADESC$ label$13508[17] = { { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)-1, (void*)label$13510 } };
static struct $14__FB_DATADESC$ label$13506[17] = { { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)-1, (void*)label$13508 } };
static struct $14__FB_DATADESC$ label$13504[17] = { { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)-1, (void*)label$13506 } };
static struct $14__FB_DATADESC$ label$13502[17] = { { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)-1, (void*)label$13504 } };
static struct $14__FB_DATADESC$ label$13500[17] = { { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)-1, (void*)label$13502 } };
static struct $14__FB_DATADESC$ label$13498[17] = { { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)-1, (void*)label$13500 } };
static struct $14__FB_DATADESC$ label$13496[17] = { { (int16)3, (void*)"141" }, { (int16)1, (void*)"0" }, { (int16)3, (void*)"222" }, { (int16)2, (void*)"96" }, { (int16)3, (void*)"160" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)-1, (void*)label$13498 } };
static struct $14__FB_DATADESC$ label$13494[17] = { { (int16)2, (void*)"51" }, { (int16)2, (void*)"56" }, { (int16)2, (void*)"57" }, { (int16)2, (void*)"49" }, { (int16)2, (void*)"49" }, { (int16)1, (void*)"0" }, { (int16)2, (void*)"48" }, { (int16)2, (void*)"48" }, { (int16)2, (void*)"48" }, { (int16)2, (void*)"48" }, { (int16)1, (void*)"3" }, { (int16)3, (void*)"141" }, { (int16)3, (void*)"148" }, { (int16)3, (void*)"158" }, { (int16)3, (void*)"169" }, { (int16)1, (void*)"0" }, { (int16)-1, (void*)label$13496 } };
static struct $14__FB_DATADESC$ label$13492[17] = { { (int16)3, (void*)"135" }, { (int16)3, (void*)"135" }, { (int16)3, (void*)"135" }, { (int16)3, (void*)"240" }, { (int16)3, (void*)"216" }, { (int16)3, (void*)"129" }, { (int16)3, (void*)"235" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)2, (void*)"32" }, { (int16)-1, (void*)label$13494 } };
static struct $14__FB_DATADESC$ label$13490[17] = { { (int16)3, (void*)"133" }, { (int16)3, (void*)"133" }, { (int16)3, (void*)"133" }, { (int16)3, (void*)"133" }, { (int16)3, (void*)"133" }, { (int16)3, (void*)"133" }, { (int16)3, (void*)"134" }, { (int16)3, (void*)"134" }, { (int16)3, (void*)"134" }, { (int16)3, (void*)"134" }, { (int16)3, (void*)"134" }, { (int16)3, (void*)"134" }, { (int16)3, (void*)"134" }, { (int16)3, (void*)"135" }, { (int16)3, (void*)"135" }, { (int16)3, (void*)"135" }, { (int16)-1, (void*)label$13492 } };
static struct $14__FB_DATADESC$ label$13488[17] = { { (int16)1, (void*)"0" }, { (int16)3, (void*)"240" }, { (int16)1, (void*)"4" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)2, (void*)"39" }, { (int16)1, (void*)"6" }, { (int16)3, (void*)"133" }, { (int16)1, (void*)"0" }, { (int16)3, (void*)"132" }, { (int16)3, (void*)"132" }, { (int16)3, (void*)"132" }, { (int16)3, (void*)"132" }, { (int16)3, (void*)"132" }, { (int16)3, (void*)"132" }, { (int16)3, (void*)"132" }, { (int16)-1, (void*)label$13490 } };
static struct $14__FB_DATADESC$ label$13486[17] = { { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)3, (void*)"160" }, { (int16)2, (void*)"48" }, { (int16)3, (void*)"253" }, { (int16)2, (void*)"64" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"6" }, { (int16)1, (void*)"0" }, { (int16)2, (void*)"64" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"1" }, { (int16)2, (void*)"32" }, { (int16)1, (void*)"1" }, { (int16)-1, (void*)label$13488 } };
static struct $14__FB_DATADESC$ label$13484[17] = { { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)2, (void*)"60" }, { (int16)1, (void*)"3" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)-1, (void*)label$13486 } };
static struct $14__FB_DATADESC$ label$13482[17] = { { (int16)1, (void*)"0" }, { (int16)1, (void*)"1" }, { (int16)3, (void*)"191" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)-1, (void*)label$13484 } };
static struct $14__FB_DATADESC$ label$13480[17] = { { (int16)1, (void*)"0" }, { (int16)3, (void*)"255" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"3" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)3, (void*)"128" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)-1, (void*)label$13482 } };
static struct $14__FB_DATADESC$ label$13478[17] = { { (int16)3, (void*)"201" }, { (int16)2, (void*)"32" }, { (int16)3, (void*)"240" }, { (int16)3, (void*)"239" }, { (int16)2, (void*)"56" }, { (int16)3, (void*)"233" }, { (int16)2, (void*)"48" }, { (int16)2, (void*)"56" }, { (int16)3, (void*)"233" }, { (int16)3, (void*)"208" }, { (int16)2, (void*)"96" }, { (int16)3, (void*)"128" }, { (int16)2, (void*)"79" }, { (int16)3, (void*)"199" }, { (int16)2, (void*)"82" }, { (int16)2, (void*)"88" }, { (int16)-1, (void*)label$13480 } };
static struct $14__FB_DATADESC$ label$13476[17] = { { (int16)1, (void*)"0" }, { (int16)3, (void*)"128" }, { (int16)3, (void*)"163" }, { (int16)3, (void*)"230" }, { (int16)3, (void*)"122" }, { (int16)3, (void*)"208" }, { (int16)1, (void*)"2" }, { (int16)3, (void*)"230" }, { (int16)3, (void*)"123" }, { (int16)3, (void*)"173" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"8" }, { (int16)3, (void*)"201" }, { (int16)2, (void*)"58" }, { (int16)3, (void*)"176" }, { (int16)2, (void*)"10" }, { (int16)-1, (void*)label$13478 } };
static struct $14__FB_DATADESC$ label$13474[17] = { { (int16)1, (void*)"0" }, { (int16)2, (void*)"10" }, { (int16)3, (void*)"118" }, { (int16)3, (void*)"163" }, { (int16)2, (void*)"25" }, { (int16)1, (void*)"0" }, { (int16)2, (void*)"32" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)3, (void*)"128" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"4" }, { (int16)1, (void*)"0" }, { (int16)3, (void*)"118" }, { (int16)-1, (void*)label$13476 } };
static struct $14__FB_DATADESC$ label$13472[17] = { { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"3" }, { (int16)2, (void*)"76" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)3, (void*)"252" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)-1, (void*)label$13474 } };
static struct $14__FB_DATADESC$ label$13470[17] = { { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"8" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)2, (void*)"36" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)-1, (void*)label$13472 } };
static struct $14__FB_DATADESC$ label$13468[17] = { { (int16)1, (void*)"8" }, { (int16)1, (void*)"3" }, { (int16)1, (void*)"8" }, { (int16)1, (void*)"0" }, { (int16)3, (void*)"160" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)3, (void*)"160" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)-1, (void*)label$13470 } };
static struct $14__FB_DATADESC$ label$13466[17] = { { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)3, (void*)"118" }, { (int16)3, (void*)"163" }, { (int16)3, (void*)"179" }, { (int16)3, (void*)"189" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"1" }, { (int16)1, (void*)"8" }, { (int16)1, (void*)"3" }, { (int16)1, (void*)"8" }, { (int16)1, (void*)"3" }, { (int16)-1, (void*)label$13468 } };
static struct $14__FB_DATADESC$ label$13464[17] = { { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)2, (void*)"25" }, { (int16)2, (void*)"22" }, { (int16)1, (void*)"0" }, { (int16)2, (void*)"10" }, { (int16)3, (void*)"118" }, { (int16)3, (void*)"163" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)-1, (void*)label$13466 } };
static struct $14__FB_DATADESC$ label$2171[17] = { { (int16)2, (void*)"47" }, { (int16)2, (void*)"55" }, { (int16)1, (void*)"0" }, { (int16)3, (void*)"170" }, { (int16)3, (void*)"177" }, { (int16)3, (void*)"145" }, { (int16)3, (void*)"179" }, { (int16)2, (void*)"34" }, { (int16)2, (void*)"34" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)3, (void*)"255" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)-1, (void*)label$13464 } };
static struct $14__FB_DATADESC$ label$13462[2] = { { (int16)3, (void*)"IND" }, { (int16)-1, (void*)label$2171 } };
static struct $14__FB_DATADESC$ label$13460[2] = { { (int16)4, (void*)"INDY" }, { (int16)-1, (void*)label$13462 } };
static struct $14__FB_DATADESC$ label$13458[2] = { { (int16)4, (void*)"INDX" }, { (int16)-1, (void*)label$13460 } };
static struct $14__FB_DATADESC$ label$13456[2] = { { (int16)3, (void*)"REL" }, { (int16)-1, (void*)label$13458 } };
static struct $14__FB_DATADESC$ label$13454[2] = { { (int16)4, (void*)"ABSY" }, { (int16)-1, (void*)label$13456 } };
static struct $14__FB_DATADESC$ label$13452[2] = { { (int16)4, (void*)"ABSX" }, { (int16)-1, (void*)label$13454 } };
static struct $14__FB_DATADESC$ label$13450[2] = { { (int16)5, (void*)"ZEROY" }, { (int16)-1, (void*)label$13452 } };
static struct $14__FB_DATADESC$ label$13448[2] = { { (int16)5, (void*)"ZEROX" }, { (int16)-1, (void*)label$13450 } };
static struct $14__FB_DATADESC$ label$13446[2] = { { (int16)4, (void*)"ZERO" }, { (int16)-1, (void*)label$13448 } };
static struct $14__FB_DATADESC$ label$13444[2] = { { (int16)3, (void*)"ABS" }, { (int16)-1, (void*)label$13446 } };
static struct $14__FB_DATADESC$ label$13442[2] = { { (int16)3, (void*)"IMM" }, { (int16)-1, (void*)label$13444 } };
static struct $14__FB_DATADESC$ label$13440[2] = { { (int16)3, (void*)"IMP" }, { (int16)-1, (void*)label$13442 } };
static struct $14__FB_DATADESC$ label$12549[2] = { { (int16)3, (void*)"UNK" }, { (int16)-1, (void*)label$13440 } };
static struct $14__FB_DATADESC$ label$13438[7] = { { (int16)3, (void*)"255" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12549 } };
static struct $14__FB_DATADESC$ label$13436[7] = { { (int16)3, (void*)"254" }, { (int16)3, (void*)"INC" }, { (int16)1, (void*)"7" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_INC }, { (int16)-1, (void*)label$13438 } };
static struct $14__FB_DATADESC$ label$13434[7] = { { (int16)3, (void*)"253" }, { (int16)3, (void*)"SBC" }, { (int16)1, (void*)"7" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_SBC }, { (int16)-1, (void*)label$13436 } };
static struct $14__FB_DATADESC$ label$13432[7] = { { (int16)3, (void*)"252" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13434 } };
static struct $14__FB_DATADESC$ label$13430[7] = { { (int16)3, (void*)"251" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13432 } };
static struct $14__FB_DATADESC$ label$13428[7] = { { (int16)3, (void*)"250" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13430 } };
static struct $14__FB_DATADESC$ label$13426[7] = { { (int16)3, (void*)"249" }, { (int16)3, (void*)"SBC" }, { (int16)1, (void*)"8" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_SBC }, { (int16)-1, (void*)label$13428 } };
static struct $14__FB_DATADESC$ label$13424[7] = { { (int16)3, (void*)"248" }, { (int16)3, (void*)"SED" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_SED }, { (int16)-1, (void*)label$13426 } };
static struct $14__FB_DATADESC$ label$13422[7] = { { (int16)3, (void*)"247" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13424 } };
static struct $14__FB_DATADESC$ label$13420[7] = { { (int16)3, (void*)"246" }, { (int16)3, (void*)"INC" }, { (int16)1, (void*)"5" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_INC }, { (int16)-1, (void*)label$13422 } };
static struct $14__FB_DATADESC$ label$13418[7] = { { (int16)3, (void*)"245" }, { (int16)3, (void*)"SBC" }, { (int16)1, (void*)"5" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_SBC }, { (int16)-1, (void*)label$13420 } };
static struct $14__FB_DATADESC$ label$13416[7] = { { (int16)3, (void*)"244" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13418 } };
static struct $14__FB_DATADESC$ label$13414[7] = { { (int16)3, (void*)"243" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13416 } };
static struct $14__FB_DATADESC$ label$13412[7] = { { (int16)3, (void*)"242" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13414 } };
static struct $14__FB_DATADESC$ label$13410[7] = { { (int16)3, (void*)"241" }, { (int16)3, (void*)"SBC" }, { (int16)2, (void*)"11" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_SBC }, { (int16)-1, (void*)label$13412 } };
static struct $14__FB_DATADESC$ label$13408[7] = { { (int16)3, (void*)"240" }, { (int16)3, (void*)"BEQ" }, { (int16)1, (void*)"9" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_BEQ }, { (int16)-1, (void*)label$13410 } };
static struct $14__FB_DATADESC$ label$13406[7] = { { (int16)3, (void*)"239" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13408 } };
static struct $14__FB_DATADESC$ label$13404[7] = { { (int16)3, (void*)"238" }, { (int16)3, (void*)"INC" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_INC }, { (int16)-1, (void*)label$13406 } };
static struct $14__FB_DATADESC$ label$13402[7] = { { (int16)3, (void*)"237" }, { (int16)3, (void*)"SBC" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_SBC }, { (int16)-1, (void*)label$13404 } };
static struct $14__FB_DATADESC$ label$13400[7] = { { (int16)3, (void*)"236" }, { (int16)3, (void*)"CPX" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_CPX }, { (int16)-1, (void*)label$13402 } };
static struct $14__FB_DATADESC$ label$13398[7] = { { (int16)3, (void*)"235" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13400 } };
static struct $14__FB_DATADESC$ label$13396[7] = { { (int16)3, (void*)"234" }, { (int16)3, (void*)"NOP" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_NOP }, { (int16)-1, (void*)label$13398 } };
static struct $14__FB_DATADESC$ label$13394[7] = { { (int16)3, (void*)"233" }, { (int16)3, (void*)"SBC" }, { (int16)1, (void*)"2" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_SBC }, { (int16)-1, (void*)label$13396 } };
static struct $14__FB_DATADESC$ label$13392[7] = { { (int16)3, (void*)"232" }, { (int16)3, (void*)"INX" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_INX }, { (int16)-1, (void*)label$13394 } };
static struct $14__FB_DATADESC$ label$13390[7] = { { (int16)3, (void*)"231" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13392 } };
static struct $14__FB_DATADESC$ label$13388[7] = { { (int16)3, (void*)"230" }, { (int16)3, (void*)"INC" }, { (int16)1, (void*)"4" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_INC }, { (int16)-1, (void*)label$13390 } };
static struct $14__FB_DATADESC$ label$13386[7] = { { (int16)3, (void*)"229" }, { (int16)3, (void*)"SBC" }, { (int16)1, (void*)"4" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_SBC }, { (int16)-1, (void*)label$13388 } };
static struct $14__FB_DATADESC$ label$13384[7] = { { (int16)3, (void*)"228" }, { (int16)3, (void*)"CPX" }, { (int16)1, (void*)"4" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_CPX }, { (int16)-1, (void*)label$13386 } };
static struct $14__FB_DATADESC$ label$13382[7] = { { (int16)3, (void*)"227" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13384 } };
static struct $14__FB_DATADESC$ label$13380[7] = { { (int16)3, (void*)"226" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13382 } };
static struct $14__FB_DATADESC$ label$13378[7] = { { (int16)3, (void*)"225" }, { (int16)3, (void*)"SBC" }, { (int16)2, (void*)"10" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_SBC }, { (int16)-1, (void*)label$13380 } };
static struct $14__FB_DATADESC$ label$13376[7] = { { (int16)3, (void*)"224" }, { (int16)3, (void*)"CPX" }, { (int16)1, (void*)"2" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_CPX }, { (int16)-1, (void*)label$13378 } };
static struct $14__FB_DATADESC$ label$13374[7] = { { (int16)3, (void*)"223" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13376 } };
static struct $14__FB_DATADESC$ label$13372[7] = { { (int16)3, (void*)"222" }, { (int16)3, (void*)"DEC" }, { (int16)1, (void*)"7" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_DEC }, { (int16)-1, (void*)label$13374 } };
static struct $14__FB_DATADESC$ label$13370[7] = { { (int16)3, (void*)"221" }, { (int16)3, (void*)"CMP" }, { (int16)1, (void*)"7" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_CMP }, { (int16)-1, (void*)label$13372 } };
static struct $14__FB_DATADESC$ label$13368[7] = { { (int16)3, (void*)"220" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13370 } };
static struct $14__FB_DATADESC$ label$13366[7] = { { (int16)3, (void*)"219" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13368 } };
static struct $14__FB_DATADESC$ label$13364[7] = { { (int16)3, (void*)"218" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13366 } };
static struct $14__FB_DATADESC$ label$13362[7] = { { (int16)3, (void*)"217" }, { (int16)3, (void*)"CMP" }, { (int16)1, (void*)"8" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_CMP }, { (int16)-1, (void*)label$13364 } };
static struct $14__FB_DATADESC$ label$13360[7] = { { (int16)3, (void*)"216" }, { (int16)3, (void*)"CLD" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_CLD }, { (int16)-1, (void*)label$13362 } };
static struct $14__FB_DATADESC$ label$13358[7] = { { (int16)3, (void*)"215" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13360 } };
static struct $14__FB_DATADESC$ label$13356[7] = { { (int16)3, (void*)"214" }, { (int16)3, (void*)"DEC" }, { (int16)1, (void*)"5" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_DEC }, { (int16)-1, (void*)label$13358 } };
static struct $14__FB_DATADESC$ label$13354[7] = { { (int16)3, (void*)"213" }, { (int16)3, (void*)"CMP" }, { (int16)1, (void*)"5" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_CMP }, { (int16)-1, (void*)label$13356 } };
static struct $14__FB_DATADESC$ label$13352[7] = { { (int16)3, (void*)"212" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13354 } };
static struct $14__FB_DATADESC$ label$13350[7] = { { (int16)3, (void*)"211" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13352 } };
static struct $14__FB_DATADESC$ label$13348[7] = { { (int16)3, (void*)"210" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13350 } };
static struct $14__FB_DATADESC$ label$13346[7] = { { (int16)3, (void*)"209" }, { (int16)3, (void*)"CMP" }, { (int16)2, (void*)"11" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_CMP }, { (int16)-1, (void*)label$13348 } };
static struct $14__FB_DATADESC$ label$13344[7] = { { (int16)3, (void*)"208" }, { (int16)3, (void*)"BNE" }, { (int16)1, (void*)"9" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_BNE }, { (int16)-1, (void*)label$13346 } };
static struct $14__FB_DATADESC$ label$13342[7] = { { (int16)3, (void*)"207" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13344 } };
static struct $14__FB_DATADESC$ label$13340[7] = { { (int16)3, (void*)"206" }, { (int16)3, (void*)"DEC" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_DEC }, { (int16)-1, (void*)label$13342 } };
static struct $14__FB_DATADESC$ label$13338[7] = { { (int16)3, (void*)"205" }, { (int16)3, (void*)"CMP" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_CMP }, { (int16)-1, (void*)label$13340 } };
static struct $14__FB_DATADESC$ label$13336[7] = { { (int16)3, (void*)"204" }, { (int16)3, (void*)"CPY" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_CPY }, { (int16)-1, (void*)label$13338 } };
static struct $14__FB_DATADESC$ label$13334[7] = { { (int16)3, (void*)"203" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13336 } };
static struct $14__FB_DATADESC$ label$13332[7] = { { (int16)3, (void*)"202" }, { (int16)3, (void*)"DEX" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_DEX }, { (int16)-1, (void*)label$13334 } };
static struct $14__FB_DATADESC$ label$13330[7] = { { (int16)3, (void*)"201" }, { (int16)3, (void*)"CMP" }, { (int16)1, (void*)"2" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_CMP }, { (int16)-1, (void*)label$13332 } };
static struct $14__FB_DATADESC$ label$13328[7] = { { (int16)3, (void*)"200" }, { (int16)3, (void*)"INY" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_INY }, { (int16)-1, (void*)label$13330 } };
static struct $14__FB_DATADESC$ label$13326[7] = { { (int16)3, (void*)"199" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13328 } };
static struct $14__FB_DATADESC$ label$13324[7] = { { (int16)3, (void*)"198" }, { (int16)3, (void*)"DEC" }, { (int16)1, (void*)"4" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_DEC }, { (int16)-1, (void*)label$13326 } };
static struct $14__FB_DATADESC$ label$13322[7] = { { (int16)3, (void*)"197" }, { (int16)3, (void*)"CMP" }, { (int16)1, (void*)"4" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_CMP }, { (int16)-1, (void*)label$13324 } };
static struct $14__FB_DATADESC$ label$13320[7] = { { (int16)3, (void*)"196" }, { (int16)3, (void*)"CPY" }, { (int16)1, (void*)"4" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_CPY }, { (int16)-1, (void*)label$13322 } };
static struct $14__FB_DATADESC$ label$13318[7] = { { (int16)3, (void*)"195" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13320 } };
static struct $14__FB_DATADESC$ label$13316[7] = { { (int16)3, (void*)"194" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13318 } };
static struct $14__FB_DATADESC$ label$13314[7] = { { (int16)3, (void*)"193" }, { (int16)3, (void*)"CMP" }, { (int16)2, (void*)"10" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_CMP }, { (int16)-1, (void*)label$13316 } };
static struct $14__FB_DATADESC$ label$13312[7] = { { (int16)3, (void*)"192" }, { (int16)3, (void*)"CPY" }, { (int16)1, (void*)"2" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_CPY }, { (int16)-1, (void*)label$13314 } };
static struct $14__FB_DATADESC$ label$13310[7] = { { (int16)3, (void*)"191" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13312 } };
static struct $14__FB_DATADESC$ label$13308[7] = { { (int16)3, (void*)"190" }, { (int16)3, (void*)"LDX" }, { (int16)1, (void*)"8" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LDX }, { (int16)-1, (void*)label$13310 } };
static struct $14__FB_DATADESC$ label$13306[7] = { { (int16)3, (void*)"189" }, { (int16)3, (void*)"LDA" }, { (int16)1, (void*)"7" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LDA }, { (int16)-1, (void*)label$13308 } };
static struct $14__FB_DATADESC$ label$13304[7] = { { (int16)3, (void*)"188" }, { (int16)3, (void*)"LDY" }, { (int16)1, (void*)"7" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LDY }, { (int16)-1, (void*)label$13306 } };
static struct $14__FB_DATADESC$ label$13302[7] = { { (int16)3, (void*)"187" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13304 } };
static struct $14__FB_DATADESC$ label$13300[7] = { { (int16)3, (void*)"186" }, { (int16)3, (void*)"TSX" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_TSX }, { (int16)-1, (void*)label$13302 } };
static struct $14__FB_DATADESC$ label$13298[7] = { { (int16)3, (void*)"185" }, { (int16)3, (void*)"LDA" }, { (int16)1, (void*)"8" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LDA }, { (int16)-1, (void*)label$13300 } };
static struct $14__FB_DATADESC$ label$13296[7] = { { (int16)3, (void*)"184" }, { (int16)3, (void*)"CLV" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_CLV }, { (int16)-1, (void*)label$13298 } };
static struct $14__FB_DATADESC$ label$13294[7] = { { (int16)3, (void*)"183" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13296 } };
static struct $14__FB_DATADESC$ label$13292[7] = { { (int16)3, (void*)"182" }, { (int16)3, (void*)"LDX" }, { (int16)1, (void*)"6" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LDX }, { (int16)-1, (void*)label$13294 } };
static struct $14__FB_DATADESC$ label$13290[7] = { { (int16)3, (void*)"181" }, { (int16)3, (void*)"LDA" }, { (int16)1, (void*)"5" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LDA }, { (int16)-1, (void*)label$13292 } };
static struct $14__FB_DATADESC$ label$13288[7] = { { (int16)3, (void*)"180" }, { (int16)3, (void*)"LDY" }, { (int16)1, (void*)"5" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LDY }, { (int16)-1, (void*)label$13290 } };
static struct $14__FB_DATADESC$ label$13286[7] = { { (int16)3, (void*)"179" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13288 } };
static struct $14__FB_DATADESC$ label$13284[7] = { { (int16)3, (void*)"178" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13286 } };
static struct $14__FB_DATADESC$ label$13282[7] = { { (int16)3, (void*)"177" }, { (int16)3, (void*)"LDA" }, { (int16)2, (void*)"11" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LDA }, { (int16)-1, (void*)label$13284 } };
static struct $14__FB_DATADESC$ label$13280[7] = { { (int16)3, (void*)"176" }, { (int16)3, (void*)"BCS" }, { (int16)1, (void*)"9" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_BCS }, { (int16)-1, (void*)label$13282 } };
static struct $14__FB_DATADESC$ label$13278[7] = { { (int16)3, (void*)"175" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13280 } };
static struct $14__FB_DATADESC$ label$13276[7] = { { (int16)3, (void*)"174" }, { (int16)3, (void*)"LDX" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LDX }, { (int16)-1, (void*)label$13278 } };
static struct $14__FB_DATADESC$ label$13274[7] = { { (int16)3, (void*)"173" }, { (int16)3, (void*)"LDA" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LDA }, { (int16)-1, (void*)label$13276 } };
static struct $14__FB_DATADESC$ label$13272[7] = { { (int16)3, (void*)"172" }, { (int16)3, (void*)"LDY" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LDY }, { (int16)-1, (void*)label$13274 } };
static struct $14__FB_DATADESC$ label$13270[7] = { { (int16)3, (void*)"171" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13272 } };
static struct $14__FB_DATADESC$ label$13268[7] = { { (int16)3, (void*)"170" }, { (int16)3, (void*)"TAX" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_TAX }, { (int16)-1, (void*)label$13270 } };
static struct $14__FB_DATADESC$ label$13266[7] = { { (int16)3, (void*)"169" }, { (int16)3, (void*)"LDA" }, { (int16)1, (void*)"2" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LDA }, { (int16)-1, (void*)label$13268 } };
static struct $14__FB_DATADESC$ label$13264[7] = { { (int16)3, (void*)"168" }, { (int16)3, (void*)"TAY" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_TAY }, { (int16)-1, (void*)label$13266 } };
static struct $14__FB_DATADESC$ label$13262[7] = { { (int16)3, (void*)"167" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13264 } };
static struct $14__FB_DATADESC$ label$13260[7] = { { (int16)3, (void*)"166" }, { (int16)3, (void*)"LDX" }, { (int16)1, (void*)"4" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LDX }, { (int16)-1, (void*)label$13262 } };
static struct $14__FB_DATADESC$ label$13258[7] = { { (int16)3, (void*)"165" }, { (int16)3, (void*)"LDA" }, { (int16)1, (void*)"4" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LDA }, { (int16)-1, (void*)label$13260 } };
static struct $14__FB_DATADESC$ label$13256[7] = { { (int16)3, (void*)"164" }, { (int16)3, (void*)"LDY" }, { (int16)1, (void*)"4" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LDY }, { (int16)-1, (void*)label$13258 } };
static struct $14__FB_DATADESC$ label$13254[7] = { { (int16)3, (void*)"163" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13256 } };
static struct $14__FB_DATADESC$ label$13252[7] = { { (int16)3, (void*)"162" }, { (int16)3, (void*)"LDX" }, { (int16)1, (void*)"2" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LDX }, { (int16)-1, (void*)label$13254 } };
static struct $14__FB_DATADESC$ label$13250[7] = { { (int16)3, (void*)"161" }, { (int16)3, (void*)"LDA" }, { (int16)2, (void*)"10" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LDA }, { (int16)-1, (void*)label$13252 } };
static struct $14__FB_DATADESC$ label$13248[7] = { { (int16)3, (void*)"160" }, { (int16)3, (void*)"LDY" }, { (int16)1, (void*)"2" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LDY }, { (int16)-1, (void*)label$13250 } };
static struct $14__FB_DATADESC$ label$13246[7] = { { (int16)3, (void*)"159" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13248 } };
static struct $14__FB_DATADESC$ label$13244[7] = { { (int16)3, (void*)"158" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13246 } };
static struct $14__FB_DATADESC$ label$13242[7] = { { (int16)3, (void*)"157" }, { (int16)3, (void*)"STA" }, { (int16)1, (void*)"7" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_STA }, { (int16)-1, (void*)label$13244 } };
static struct $14__FB_DATADESC$ label$13240[7] = { { (int16)3, (void*)"156" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13242 } };
static struct $14__FB_DATADESC$ label$13238[7] = { { (int16)3, (void*)"155" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13240 } };
static struct $14__FB_DATADESC$ label$13236[7] = { { (int16)3, (void*)"154" }, { (int16)3, (void*)"TXS" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_TXS }, { (int16)-1, (void*)label$13238 } };
static struct $14__FB_DATADESC$ label$13234[7] = { { (int16)3, (void*)"153" }, { (int16)3, (void*)"STA" }, { (int16)1, (void*)"8" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_STA }, { (int16)-1, (void*)label$13236 } };
static struct $14__FB_DATADESC$ label$13232[7] = { { (int16)3, (void*)"152" }, { (int16)3, (void*)"TYA" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_TYA }, { (int16)-1, (void*)label$13234 } };
static struct $14__FB_DATADESC$ label$13230[7] = { { (int16)3, (void*)"151" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13232 } };
static struct $14__FB_DATADESC$ label$13228[7] = { { (int16)3, (void*)"150" }, { (int16)3, (void*)"STX" }, { (int16)1, (void*)"6" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_STX }, { (int16)-1, (void*)label$13230 } };
static struct $14__FB_DATADESC$ label$13226[7] = { { (int16)3, (void*)"149" }, { (int16)3, (void*)"STA" }, { (int16)1, (void*)"5" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_STA }, { (int16)-1, (void*)label$13228 } };
static struct $14__FB_DATADESC$ label$13224[7] = { { (int16)3, (void*)"148" }, { (int16)3, (void*)"STY" }, { (int16)1, (void*)"5" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_STY }, { (int16)-1, (void*)label$13226 } };
static struct $14__FB_DATADESC$ label$13222[7] = { { (int16)3, (void*)"147" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13224 } };
static struct $14__FB_DATADESC$ label$13220[7] = { { (int16)3, (void*)"146" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13222 } };
static struct $14__FB_DATADESC$ label$13218[7] = { { (int16)3, (void*)"145" }, { (int16)3, (void*)"STA" }, { (int16)2, (void*)"11" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_STA }, { (int16)-1, (void*)label$13220 } };
static struct $14__FB_DATADESC$ label$13216[7] = { { (int16)3, (void*)"144" }, { (int16)3, (void*)"BCC" }, { (int16)1, (void*)"9" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_BCC }, { (int16)-1, (void*)label$13218 } };
static struct $14__FB_DATADESC$ label$13214[7] = { { (int16)3, (void*)"143" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13216 } };
static struct $14__FB_DATADESC$ label$13212[7] = { { (int16)3, (void*)"142" }, { (int16)3, (void*)"STX" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_STX }, { (int16)-1, (void*)label$13214 } };
static struct $14__FB_DATADESC$ label$13210[7] = { { (int16)3, (void*)"141" }, { (int16)3, (void*)"STA" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_STA }, { (int16)-1, (void*)label$13212 } };
static struct $14__FB_DATADESC$ label$13208[7] = { { (int16)3, (void*)"140" }, { (int16)3, (void*)"STY" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_STY }, { (int16)-1, (void*)label$13210 } };
static struct $14__FB_DATADESC$ label$13206[7] = { { (int16)3, (void*)"139" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13208 } };
static struct $14__FB_DATADESC$ label$13204[7] = { { (int16)3, (void*)"138" }, { (int16)3, (void*)"TXA" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_TXA }, { (int16)-1, (void*)label$13206 } };
static struct $14__FB_DATADESC$ label$13202[7] = { { (int16)3, (void*)"137" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13204 } };
static struct $14__FB_DATADESC$ label$13200[7] = { { (int16)3, (void*)"136" }, { (int16)3, (void*)"DEY" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_DEY }, { (int16)-1, (void*)label$13202 } };
static struct $14__FB_DATADESC$ label$13198[7] = { { (int16)3, (void*)"135" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13200 } };
static struct $14__FB_DATADESC$ label$13196[7] = { { (int16)3, (void*)"134" }, { (int16)3, (void*)"STX" }, { (int16)1, (void*)"4" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_STX }, { (int16)-1, (void*)label$13198 } };
static struct $14__FB_DATADESC$ label$13194[7] = { { (int16)3, (void*)"133" }, { (int16)3, (void*)"STA" }, { (int16)1, (void*)"4" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_STA }, { (int16)-1, (void*)label$13196 } };
static struct $14__FB_DATADESC$ label$13192[7] = { { (int16)3, (void*)"132" }, { (int16)3, (void*)"STY" }, { (int16)1, (void*)"4" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_STY }, { (int16)-1, (void*)label$13194 } };
static struct $14__FB_DATADESC$ label$13190[7] = { { (int16)3, (void*)"131" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13192 } };
static struct $14__FB_DATADESC$ label$13188[7] = { { (int16)3, (void*)"130" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13190 } };
static struct $14__FB_DATADESC$ label$13186[7] = { { (int16)3, (void*)"129" }, { (int16)3, (void*)"STA" }, { (int16)2, (void*)"10" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_STA }, { (int16)-1, (void*)label$13188 } };
static struct $14__FB_DATADESC$ label$13184[7] = { { (int16)3, (void*)"128" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13186 } };
static struct $14__FB_DATADESC$ label$13182[7] = { { (int16)3, (void*)"127" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13184 } };
static struct $14__FB_DATADESC$ label$13180[7] = { { (int16)3, (void*)"126" }, { (int16)3, (void*)"ROR" }, { (int16)1, (void*)"7" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ROR }, { (int16)-1, (void*)label$13182 } };
static struct $14__FB_DATADESC$ label$13178[7] = { { (int16)3, (void*)"125" }, { (int16)3, (void*)"ADC" }, { (int16)1, (void*)"7" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ADC }, { (int16)-1, (void*)label$13180 } };
static struct $14__FB_DATADESC$ label$13176[7] = { { (int16)3, (void*)"124" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13178 } };
static struct $14__FB_DATADESC$ label$13174[7] = { { (int16)3, (void*)"123" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13176 } };
static struct $14__FB_DATADESC$ label$13172[7] = { { (int16)3, (void*)"122" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13174 } };
static struct $14__FB_DATADESC$ label$13170[7] = { { (int16)3, (void*)"121" }, { (int16)3, (void*)"ADC" }, { (int16)1, (void*)"8" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ADC }, { (int16)-1, (void*)label$13172 } };
static struct $14__FB_DATADESC$ label$13168[7] = { { (int16)3, (void*)"120" }, { (int16)3, (void*)"SEI" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_SEI }, { (int16)-1, (void*)label$13170 } };
static struct $14__FB_DATADESC$ label$13166[7] = { { (int16)3, (void*)"119" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13168 } };
static struct $14__FB_DATADESC$ label$13164[7] = { { (int16)3, (void*)"118" }, { (int16)3, (void*)"ROR" }, { (int16)1, (void*)"5" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ROR }, { (int16)-1, (void*)label$13166 } };
static struct $14__FB_DATADESC$ label$13162[7] = { { (int16)3, (void*)"117" }, { (int16)3, (void*)"ADC" }, { (int16)1, (void*)"5" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ADC }, { (int16)-1, (void*)label$13164 } };
static struct $14__FB_DATADESC$ label$13160[7] = { { (int16)3, (void*)"116" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13162 } };
static struct $14__FB_DATADESC$ label$13158[7] = { { (int16)3, (void*)"115" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13160 } };
static struct $14__FB_DATADESC$ label$13156[7] = { { (int16)3, (void*)"114" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13158 } };
static struct $14__FB_DATADESC$ label$13154[7] = { { (int16)3, (void*)"113" }, { (int16)3, (void*)"ADC" }, { (int16)2, (void*)"11" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ADC }, { (int16)-1, (void*)label$13156 } };
static struct $14__FB_DATADESC$ label$13152[7] = { { (int16)3, (void*)"112" }, { (int16)3, (void*)"BVS" }, { (int16)1, (void*)"9" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_BVS }, { (int16)-1, (void*)label$13154 } };
static struct $14__FB_DATADESC$ label$13150[7] = { { (int16)3, (void*)"111" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13152 } };
static struct $14__FB_DATADESC$ label$13148[7] = { { (int16)3, (void*)"110" }, { (int16)3, (void*)"ROR" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ROR }, { (int16)-1, (void*)label$13150 } };
static struct $14__FB_DATADESC$ label$13146[7] = { { (int16)3, (void*)"109" }, { (int16)3, (void*)"ADC" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ADC }, { (int16)-1, (void*)label$13148 } };
static struct $14__FB_DATADESC$ label$13144[7] = { { (int16)3, (void*)"108" }, { (int16)3, (void*)"JMP" }, { (int16)2, (void*)"12" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_JMP }, { (int16)-1, (void*)label$13146 } };
static struct $14__FB_DATADESC$ label$13142[7] = { { (int16)3, (void*)"107" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13144 } };
static struct $14__FB_DATADESC$ label$13140[7] = { { (int16)3, (void*)"106" }, { (int16)3, (void*)"ROR" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_RORA }, { (int16)-1, (void*)label$13142 } };
static struct $14__FB_DATADESC$ label$13138[7] = { { (int16)3, (void*)"105" }, { (int16)3, (void*)"ADC" }, { (int16)1, (void*)"2" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ADC }, { (int16)-1, (void*)label$13140 } };
static struct $14__FB_DATADESC$ label$13136[7] = { { (int16)3, (void*)"104" }, { (int16)3, (void*)"PLA" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_PLA }, { (int16)-1, (void*)label$13138 } };
static struct $14__FB_DATADESC$ label$13134[7] = { { (int16)3, (void*)"103" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13136 } };
static struct $14__FB_DATADESC$ label$13132[7] = { { (int16)3, (void*)"102" }, { (int16)3, (void*)"ROR" }, { (int16)1, (void*)"4" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ROR }, { (int16)-1, (void*)label$13134 } };
static struct $14__FB_DATADESC$ label$13130[7] = { { (int16)3, (void*)"101" }, { (int16)3, (void*)"ADC" }, { (int16)1, (void*)"4" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ADC }, { (int16)-1, (void*)label$13132 } };
static struct $14__FB_DATADESC$ label$13128[7] = { { (int16)3, (void*)"100" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13130 } };
static struct $14__FB_DATADESC$ label$13126[7] = { { (int16)2, (void*)"99" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13128 } };
static struct $14__FB_DATADESC$ label$13124[7] = { { (int16)2, (void*)"98" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13126 } };
static struct $14__FB_DATADESC$ label$13122[7] = { { (int16)2, (void*)"97" }, { (int16)3, (void*)"ADC" }, { (int16)2, (void*)"10" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ADC }, { (int16)-1, (void*)label$13124 } };
static struct $14__FB_DATADESC$ label$13120[7] = { { (int16)2, (void*)"96" }, { (int16)3, (void*)"RTS" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_RTS }, { (int16)-1, (void*)label$13122 } };
static struct $14__FB_DATADESC$ label$13118[7] = { { (int16)2, (void*)"95" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13120 } };
static struct $14__FB_DATADESC$ label$13116[7] = { { (int16)2, (void*)"94" }, { (int16)3, (void*)"LSR" }, { (int16)1, (void*)"7" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LSR }, { (int16)-1, (void*)label$13118 } };
static struct $14__FB_DATADESC$ label$13114[7] = { { (int16)2, (void*)"93" }, { (int16)3, (void*)"EOR" }, { (int16)1, (void*)"7" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_EOR }, { (int16)-1, (void*)label$13116 } };
static struct $14__FB_DATADESC$ label$13112[7] = { { (int16)2, (void*)"92" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13114 } };
static struct $14__FB_DATADESC$ label$13110[7] = { { (int16)2, (void*)"91" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13112 } };
static struct $14__FB_DATADESC$ label$13108[7] = { { (int16)2, (void*)"90" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13110 } };
static struct $14__FB_DATADESC$ label$13106[7] = { { (int16)2, (void*)"89" }, { (int16)3, (void*)"EOR" }, { (int16)1, (void*)"8" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_EOR }, { (int16)-1, (void*)label$13108 } };
static struct $14__FB_DATADESC$ label$13104[7] = { { (int16)2, (void*)"88" }, { (int16)3, (void*)"CLI" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_CLI }, { (int16)-1, (void*)label$13106 } };
static struct $14__FB_DATADESC$ label$13102[7] = { { (int16)2, (void*)"87" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13104 } };
static struct $14__FB_DATADESC$ label$13100[7] = { { (int16)2, (void*)"86" }, { (int16)3, (void*)"LSR" }, { (int16)1, (void*)"5" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LSR }, { (int16)-1, (void*)label$13102 } };
static struct $14__FB_DATADESC$ label$13098[7] = { { (int16)2, (void*)"85" }, { (int16)3, (void*)"EOR" }, { (int16)1, (void*)"5" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_EOR }, { (int16)-1, (void*)label$13100 } };
static struct $14__FB_DATADESC$ label$13096[7] = { { (int16)2, (void*)"84" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13098 } };
static struct $14__FB_DATADESC$ label$13094[7] = { { (int16)2, (void*)"83" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13096 } };
static struct $14__FB_DATADESC$ label$13092[7] = { { (int16)2, (void*)"82" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13094 } };
static struct $14__FB_DATADESC$ label$13090[7] = { { (int16)2, (void*)"81" }, { (int16)3, (void*)"EOR" }, { (int16)2, (void*)"11" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_EOR }, { (int16)-1, (void*)label$13092 } };
static struct $14__FB_DATADESC$ label$13088[7] = { { (int16)2, (void*)"80" }, { (int16)3, (void*)"BVC" }, { (int16)1, (void*)"9" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_BVC }, { (int16)-1, (void*)label$13090 } };
static struct $14__FB_DATADESC$ label$13086[7] = { { (int16)2, (void*)"79" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13088 } };
static struct $14__FB_DATADESC$ label$13084[7] = { { (int16)2, (void*)"78" }, { (int16)3, (void*)"LSR" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LSR }, { (int16)-1, (void*)label$13086 } };
static struct $14__FB_DATADESC$ label$13082[7] = { { (int16)2, (void*)"77" }, { (int16)3, (void*)"EOR" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_EOR }, { (int16)-1, (void*)label$13084 } };
static struct $14__FB_DATADESC$ label$13080[7] = { { (int16)2, (void*)"76" }, { (int16)3, (void*)"JMP" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_JMP }, { (int16)-1, (void*)label$13082 } };
static struct $14__FB_DATADESC$ label$13078[7] = { { (int16)2, (void*)"75" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13080 } };
static struct $14__FB_DATADESC$ label$13076[7] = { { (int16)2, (void*)"74" }, { (int16)3, (void*)"LSR" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LSRA }, { (int16)-1, (void*)label$13078 } };
static struct $14__FB_DATADESC$ label$13074[7] = { { (int16)2, (void*)"73" }, { (int16)3, (void*)"EOR" }, { (int16)1, (void*)"2" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_EOR }, { (int16)-1, (void*)label$13076 } };
static struct $14__FB_DATADESC$ label$13072[7] = { { (int16)2, (void*)"72" }, { (int16)3, (void*)"PHA" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_PHA }, { (int16)-1, (void*)label$13074 } };
static struct $14__FB_DATADESC$ label$13070[7] = { { (int16)2, (void*)"71" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13072 } };
static struct $14__FB_DATADESC$ label$13068[7] = { { (int16)2, (void*)"70" }, { (int16)3, (void*)"LSR" }, { (int16)1, (void*)"4" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LSR }, { (int16)-1, (void*)label$13070 } };
static struct $14__FB_DATADESC$ label$13066[7] = { { (int16)2, (void*)"69" }, { (int16)3, (void*)"EOR" }, { (int16)1, (void*)"4" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_EOR }, { (int16)-1, (void*)label$13068 } };
static struct $14__FB_DATADESC$ label$13064[7] = { { (int16)2, (void*)"68" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13066 } };
static struct $14__FB_DATADESC$ label$13062[7] = { { (int16)2, (void*)"67" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13064 } };
static struct $14__FB_DATADESC$ label$13060[7] = { { (int16)2, (void*)"66" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13062 } };
static struct $14__FB_DATADESC$ label$13058[7] = { { (int16)2, (void*)"65" }, { (int16)3, (void*)"EOR" }, { (int16)2, (void*)"10" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_EOR }, { (int16)-1, (void*)label$13060 } };
static struct $14__FB_DATADESC$ label$13056[7] = { { (int16)2, (void*)"64" }, { (int16)3, (void*)"RTI" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_RTI }, { (int16)-1, (void*)label$13058 } };
static struct $14__FB_DATADESC$ label$13054[7] = { { (int16)2, (void*)"63" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13056 } };
static struct $14__FB_DATADESC$ label$13052[7] = { { (int16)2, (void*)"62" }, { (int16)3, (void*)"ROL" }, { (int16)1, (void*)"7" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ROL }, { (int16)-1, (void*)label$13054 } };
static struct $14__FB_DATADESC$ label$13050[7] = { { (int16)2, (void*)"61" }, { (int16)3, (void*)"AND" }, { (int16)1, (void*)"7" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_AND }, { (int16)-1, (void*)label$13052 } };
static struct $14__FB_DATADESC$ label$13048[7] = { { (int16)2, (void*)"60" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13050 } };
static struct $14__FB_DATADESC$ label$13046[7] = { { (int16)2, (void*)"59" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13048 } };
static struct $14__FB_DATADESC$ label$13044[7] = { { (int16)2, (void*)"58" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13046 } };
static struct $14__FB_DATADESC$ label$13042[7] = { { (int16)2, (void*)"57" }, { (int16)3, (void*)"AND" }, { (int16)1, (void*)"8" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_AND }, { (int16)-1, (void*)label$13044 } };
static struct $14__FB_DATADESC$ label$13040[7] = { { (int16)2, (void*)"56" }, { (int16)3, (void*)"SEC" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_SEC }, { (int16)-1, (void*)label$13042 } };
static struct $14__FB_DATADESC$ label$13038[7] = { { (int16)2, (void*)"55" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13040 } };
static struct $14__FB_DATADESC$ label$13036[7] = { { (int16)2, (void*)"54" }, { (int16)3, (void*)"ROL" }, { (int16)1, (void*)"5" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ROL }, { (int16)-1, (void*)label$13038 } };
static struct $14__FB_DATADESC$ label$13034[7] = { { (int16)2, (void*)"53" }, { (int16)3, (void*)"AND" }, { (int16)1, (void*)"5" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_AND }, { (int16)-1, (void*)label$13036 } };
static struct $14__FB_DATADESC$ label$13032[7] = { { (int16)2, (void*)"52" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13034 } };
static struct $14__FB_DATADESC$ label$13030[7] = { { (int16)2, (void*)"51" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13032 } };
static struct $14__FB_DATADESC$ label$13028[7] = { { (int16)2, (void*)"50" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13030 } };
static struct $14__FB_DATADESC$ label$13026[7] = { { (int16)2, (void*)"49" }, { (int16)3, (void*)"AND" }, { (int16)2, (void*)"11" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_AND }, { (int16)-1, (void*)label$13028 } };
static struct $14__FB_DATADESC$ label$13024[7] = { { (int16)2, (void*)"48" }, { (int16)3, (void*)"BMI" }, { (int16)1, (void*)"9" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_BMI }, { (int16)-1, (void*)label$13026 } };
static struct $14__FB_DATADESC$ label$13022[7] = { { (int16)2, (void*)"47" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13024 } };
static struct $14__FB_DATADESC$ label$13020[7] = { { (int16)2, (void*)"46" }, { (int16)3, (void*)"ROL" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ROL }, { (int16)-1, (void*)label$13022 } };
static struct $14__FB_DATADESC$ label$13018[7] = { { (int16)2, (void*)"45" }, { (int16)3, (void*)"AND" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_AND }, { (int16)-1, (void*)label$13020 } };
static struct $14__FB_DATADESC$ label$13016[7] = { { (int16)2, (void*)"44" }, { (int16)3, (void*)"BIT" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_BIT }, { (int16)-1, (void*)label$13018 } };
static struct $14__FB_DATADESC$ label$13014[7] = { { (int16)2, (void*)"43" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13016 } };
static struct $14__FB_DATADESC$ label$13012[7] = { { (int16)2, (void*)"42" }, { (int16)3, (void*)"ROL" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ROLA }, { (int16)-1, (void*)label$13014 } };
static struct $14__FB_DATADESC$ label$13010[7] = { { (int16)2, (void*)"41" }, { (int16)3, (void*)"AND" }, { (int16)1, (void*)"2" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_AND }, { (int16)-1, (void*)label$13012 } };
static struct $14__FB_DATADESC$ label$13008[7] = { { (int16)2, (void*)"40" }, { (int16)3, (void*)"PLP" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_PLP }, { (int16)-1, (void*)label$13010 } };
static struct $14__FB_DATADESC$ label$13006[7] = { { (int16)2, (void*)"39" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13008 } };
static struct $14__FB_DATADESC$ label$13004[7] = { { (int16)2, (void*)"38" }, { (int16)3, (void*)"ROL" }, { (int16)1, (void*)"4" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ROL }, { (int16)-1, (void*)label$13006 } };
static struct $14__FB_DATADESC$ label$13002[7] = { { (int16)2, (void*)"37" }, { (int16)3, (void*)"AND" }, { (int16)1, (void*)"4" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_AND }, { (int16)-1, (void*)label$13004 } };
static struct $14__FB_DATADESC$ label$13000[7] = { { (int16)2, (void*)"36" }, { (int16)3, (void*)"BIT" }, { (int16)1, (void*)"4" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_BIT }, { (int16)-1, (void*)label$13002 } };
static struct $14__FB_DATADESC$ label$12998[7] = { { (int16)2, (void*)"35" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$13000 } };
static struct $14__FB_DATADESC$ label$12996[7] = { { (int16)2, (void*)"34" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12998 } };
static struct $14__FB_DATADESC$ label$12994[7] = { { (int16)2, (void*)"33" }, { (int16)3, (void*)"AND" }, { (int16)2, (void*)"10" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_AND }, { (int16)-1, (void*)label$12996 } };
static struct $14__FB_DATADESC$ label$12992[7] = { { (int16)2, (void*)"32" }, { (int16)3, (void*)"JSR" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_JSR }, { (int16)-1, (void*)label$12994 } };
static struct $14__FB_DATADESC$ label$12990[7] = { { (int16)2, (void*)"31" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12992 } };
static struct $14__FB_DATADESC$ label$12988[7] = { { (int16)2, (void*)"30" }, { (int16)3, (void*)"ASL" }, { (int16)1, (void*)"7" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ASL }, { (int16)-1, (void*)label$12990 } };
static struct $14__FB_DATADESC$ label$12986[7] = { { (int16)2, (void*)"29" }, { (int16)3, (void*)"ORA" }, { (int16)1, (void*)"7" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ORA }, { (int16)-1, (void*)label$12988 } };
static struct $14__FB_DATADESC$ label$12984[7] = { { (int16)2, (void*)"28" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12986 } };
static struct $14__FB_DATADESC$ label$12982[7] = { { (int16)2, (void*)"27" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12984 } };
static struct $14__FB_DATADESC$ label$12980[7] = { { (int16)2, (void*)"26" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12982 } };
static struct $14__FB_DATADESC$ label$12978[7] = { { (int16)2, (void*)"25" }, { (int16)3, (void*)"ORA" }, { (int16)1, (void*)"8" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ORA }, { (int16)-1, (void*)label$12980 } };
static struct $14__FB_DATADESC$ label$12976[7] = { { (int16)2, (void*)"24" }, { (int16)3, (void*)"CLC" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_CLC }, { (int16)-1, (void*)label$12978 } };
static struct $14__FB_DATADESC$ label$12974[7] = { { (int16)2, (void*)"23" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12976 } };
static struct $14__FB_DATADESC$ label$12972[7] = { { (int16)2, (void*)"22" }, { (int16)3, (void*)"ASL" }, { (int16)1, (void*)"5" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ASL }, { (int16)-1, (void*)label$12974 } };
static struct $14__FB_DATADESC$ label$12970[7] = { { (int16)2, (void*)"21" }, { (int16)3, (void*)"ORA" }, { (int16)1, (void*)"5" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ORA }, { (int16)-1, (void*)label$12972 } };
static struct $14__FB_DATADESC$ label$12968[7] = { { (int16)2, (void*)"20" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12970 } };
static struct $14__FB_DATADESC$ label$12966[7] = { { (int16)2, (void*)"19" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12968 } };
static struct $14__FB_DATADESC$ label$12964[7] = { { (int16)2, (void*)"18" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12966 } };
static struct $14__FB_DATADESC$ label$12962[7] = { { (int16)2, (void*)"17" }, { (int16)3, (void*)"ORA" }, { (int16)2, (void*)"11" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ORA }, { (int16)-1, (void*)label$12964 } };
static struct $14__FB_DATADESC$ label$12960[7] = { { (int16)2, (void*)"16" }, { (int16)3, (void*)"BPL" }, { (int16)1, (void*)"9" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_BPL }, { (int16)-1, (void*)label$12962 } };
static struct $14__FB_DATADESC$ label$12958[7] = { { (int16)-2, (void*)((uint8*)NIBBLES$ + 15ll) }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12960 } };
static struct $14__FB_DATADESC$ label$12956[7] = { { (int16)-2, (void*)((uint8*)NIBBLES$ + 14ll) }, { (int16)3, (void*)"ASL" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ASL }, { (int16)-1, (void*)label$12958 } };
static struct $14__FB_DATADESC$ label$12954[7] = { { (int16)-2, (void*)((uint8*)NIBBLES$ + 13ll) }, { (int16)3, (void*)"ORA" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)((uint8*)NIBBLES$ + 4ll) }, { (int16)-2, (void*)((uint8*)NIBBLES$ + 3ll) }, { (int16)-2, (void*)&INS_ORA }, { (int16)-1, (void*)label$12956 } };
static struct $14__FB_DATADESC$ label$12952[7] = { { (int16)-2, (void*)((uint8*)NIBBLES$ + 12ll) }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12954 } };
static struct $14__FB_DATADESC$ label$12950[7] = { { (int16)-2, (void*)((uint8*)NIBBLES$ + 11ll) }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$12952 } };
static struct $14__FB_DATADESC$ label$12948[7] = { { (int16)-2, (void*)((uint8*)NIBBLES$ + 10ll) }, { (int16)3, (void*)"ASL" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)((uint8*)NIBBLES$ + 2ll) }, { (int16)-2, (void*)((uint8*)NIBBLES$ + 1ll) }, { (int16)-2, (void*)&INS_ASLA }, { (int16)-1, (void*)label$12950 } };
static struct $14__FB_DATADESC$ label$12946[7] = { { (int16)-2, (void*)((uint8*)NIBBLES$ + 9ll) }, { (int16)3, (void*)"ORA" }, { (int16)1, (void*)"2" }, { (int16)-2, (void*)((uint8*)NIBBLES$ + 2ll) }, { (int16)-2, (void*)((uint8*)NIBBLES$ + 2ll) }, { (int16)-2, (void*)&INS_ORA }, { (int16)-1, (void*)label$12948 } };
static struct $14__FB_DATADESC$ label$12944[7] = { { (int16)-2, (void*)((uint8*)NIBBLES$ + 8ll) }, { (int16)3, (void*)"PHP" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)((uint8*)NIBBLES$ + 3ll) }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_PHP }, { (int16)-1, (void*)label$12946 } };
static struct $14__FB_DATADESC$ label$12942[7] = { { (int16)-2, (void*)((uint8*)NIBBLES$ + 7ll) }, { (int16)3, (void*)"W64" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_W64 }, { (int16)-1, (void*)label$12944 } };
static struct $14__FB_DATADESC$ label$12940[7] = { { (int16)-2, (void*)((uint8*)NIBBLES$ + 6ll) }, { (int16)3, (void*)"ASL" }, { (int16)1, (void*)"4" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ASL }, { (int16)-1, (void*)label$12942 } };
static struct $14__FB_DATADESC$ label$12938[7] = { { (int16)-2, (void*)((uint8*)NIBBLES$ + 5ll) }, { (int16)3, (void*)"ORA" }, { (int16)1, (void*)"4" }, { (int16)-2, (void*)((uint8*)NIBBLES$ + 3ll) }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ORA }, { (int16)-1, (void*)label$12940 } };
static struct $14__FB_DATADESC$ label$12936[7] = { { (int16)-2, (void*)((uint8*)NIBBLES$ + 4ll) }, { (int16)3, (void*)"R64" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_R64 }, { (int16)-1, (void*)label$12938 } };
static struct $14__FB_DATADESC$ label$12934[7] = { { (int16)-2, (void*)((uint8*)NIBBLES$ + 3ll) }, { (int16)3, (void*)"W32" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_W32 }, { (int16)-1, (void*)label$12936 } };
static struct $14__FB_DATADESC$ label$12932[7] = { { (int16)-2, (void*)((uint8*)NIBBLES$ + 2ll) }, { (int16)3, (void*)"R32" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_R32 }, { (int16)-1, (void*)label$12934 } };
static struct $14__FB_DATADESC$ label$12930[7] = { { (int16)-2, (void*)((uint8*)NIBBLES$ + 1ll) }, { (int16)3, (void*)"ORA" }, { (int16)2, (void*)"10" }, { (int16)-2, (void*)((uint8*)NIBBLES$ + 14ll) }, { (int16)-2, (void*)((uint8*)NIBBLES$ + 2ll) }, { (int16)-2, (void*)&INS_ORA }, { (int16)-1, (void*)label$12932 } };
static struct $14__FB_DATADESC$ label$12543[7] = { { (int16)-2, (void*)NIBBLES$ }, { (int16)3, (void*)"BRK" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)((uint8*)NIBBLES$ + 15ll) }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_BRK }, { (int16)-1, (void*)label$12930 } };
double SWCH$;
double OFFSET$;
void* IMAGE$;
FBSTRING STRCODE$;
FBSTRING FILENAME$;
double SYS_OFFSET$ __attribute__((common));
double STR_LEN$ __attribute__((common));
double CNT$ __attribute__((common));
void* BGIMAGE$ __attribute__((common));
void* FGIMAGE$ __attribute__((common));
void* RASTER$ __attribute__((common));
void* _RENDER$ __attribute__((common));
void* PSCRN$ __attribute__((common));
FBSTRING COMPILER$ __attribute__((common));
uint64 SCR_W$ __attribute__((common));
uint64 SCR_H$ __attribute__((common));
uint64 SCR_POS$ __attribute__((common));
uint64 IMGDATA$ __attribute__((common));
uint64 PITCH$ __attribute__((common));
FBSTRING MSG$ __attribute__((common));
struct $7FBARRAYIdE POWER2$ __attribute__((common));
double SIZESCREEN$ __attribute__((common));
FBSTRING _SCREENRES$ __attribute__((common));
FBSTRING _NAME$ __attribute__((common));
double SCRWIDTH$ __attribute__((common));
double SCRHEIGHT$ __attribute__((common));
double RED$ __attribute__((common));
double GREEN$ __attribute__((common));
double BLUE$ __attribute__((common));
double XSCRCENTER$ __attribute__((common));
double YSCRCENTER$ __attribute__((common));

void _ZN9_FLOAT128C1Ev( struct $9_FLOAT128* THIS$1 )
{
 label$2:;
 __builtin_memset( (int64*)THIS$1, 0, 16ll );
 *(double*)((uint8*)THIS$1 + 8ll) = 0x1.p+0;
 label$3:;
}

void _ZN9_FLOAT128C1Edd( struct $9_FLOAT128* THIS$1, double PXYZ$1, double PW$1 )
{
 label$4:;
 __builtin_memset( (int64*)THIS$1, 0, 16ll );
 *(double*)THIS$1 = PXYZ$1;
 *(double*)((uint8*)THIS$1 + 8ll) = PXYZ$1;
 *(double*)THIS$1 = PXYZ$1;
 *(double*)((uint8*)THIS$1 + 8ll) = PW$1;
 label$5:;
}

void _ZN9_FLOAT128C1Edddd( struct $9_FLOAT128* THIS$1, double PX$1, double PY$1, double PZ$1, double PW$1 )
{
 label$6:;
 __builtin_memset( (int64*)THIS$1, 0, 16ll );
 *(double*)THIS$1 = PX$1;
 *(double*)((uint8*)THIS$1 + 8ll) = PY$1;
 *(double*)THIS$1 = PZ$1;
 *(double*)((uint8*)THIS$1 + 8ll) = PW$1;
 label$7:;
}

void _ZN9_FLOAT128C1ERS_dd( struct $9_FLOAT128* THIS$1, struct $9_FLOAT128* V1$1, double PZ$1, double PW$1 )
{
 label$8:;
 __builtin_memset( (int64*)THIS$1, 0, 16ll );
 *(double*)THIS$1 = *(double*)V1$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)V1$1 + 8ll);
 *(double*)THIS$1 = PZ$1;
 *(double*)((uint8*)THIS$1 + 8ll) = PW$1;
 label$9:;
}

void _ZN9_FLOAT128C1ERS_S0_( struct $9_FLOAT128* THIS$1, struct $9_FLOAT128* V1$1, struct $9_FLOAT128* V2$1 )
{
 label$10:;
 __builtin_memset( (int64*)THIS$1, 0, 16ll );
 *(double*)THIS$1 = *(double*)V1$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)V1$1 + 8ll);
 *(double*)THIS$1 = *(double*)V2$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)V2$1 + 8ll);
 label$11:;
}

void _ZN9_FLOAT128C1ERS_d( struct $9_FLOAT128* THIS$1, struct $9_FLOAT128* V3$1, double PW$1 )
{
 label$12:;
 __builtin_memset( (int64*)THIS$1, 0, 16ll );
 *(double*)THIS$1 = *(double*)V3$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)V3$1 + 8ll);
 *(double*)THIS$1 = *(double*)V3$1;
 *(double*)((uint8*)THIS$1 + 8ll) = PW$1;
 label$13:;
}

void _ZN9_FLOAT128C1EdRS_( struct $9_FLOAT128* THIS$1, double PX$1, struct $9_FLOAT128* V3$1 )
{
 label$14:;
 __builtin_memset( (int64*)THIS$1, 0, 16ll );
 *(double*)THIS$1 = PX$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)V3$1;
 *(double*)THIS$1 = *(double*)((uint8*)V3$1 + 8ll);
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)V3$1;
 label$15:;
}

void _ZN9_FLOAT128C1ERS_( struct $9_FLOAT128* THIS$1, struct $9_FLOAT128* V4$1 )
{
 label$16:;
 __builtin_memset( (int64*)THIS$1, 0, 16ll );
 *(double*)THIS$1 = *(double*)V4$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)V4$1 + 8ll);
 *(double*)THIS$1 = *(double*)V4$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)V4$1 + 8ll);
 label$17:;
}

void _ZN9_FLOAT128aSEd( struct $9_FLOAT128* THIS$1, double PXYZW$1 )
{
 label$18:;
 *(double*)THIS$1 = PXYZW$1;
 *(double*)((uint8*)THIS$1 + 8ll) = PXYZW$1;
 *(double*)THIS$1 = PXYZW$1;
 *(double*)((uint8*)THIS$1 + 8ll) = PXYZW$1;
 label$19:;
}

void _ZN9_FLOAT128aSEf( struct $9_FLOAT128* THIS$1, float P$1 )
{
 label$20:;
 *(double*)THIS$1 = (double)P$1;
 *(double*)((uint8*)THIS$1 + 8ll) = (double)P$1;
 *(double*)THIS$1 = 0x1.p+0;
 *(double*)((uint8*)THIS$1 + 8ll) = 0x1.p+0;
 label$21:;
}

void _ZN9_FLOAT128aSEy( struct $9_FLOAT128* THIS$1, uint64 P$1 )
{
 label$22:;
 *(double*)THIS$1 = (double)P$1;
 *(double*)((uint8*)THIS$1 + 8ll) = (double)P$1;
 *(double*)THIS$1 = (double)P$1;
 *(double*)((uint8*)THIS$1 + 8ll) = 0x1.p+0;
 label$23:;
}

void _ZN9_FLOAT128aSERS_( struct $9_FLOAT128* THIS$1, struct $9_FLOAT128* P$1 )
{
 label$24:;
 *(double*)THIS$1 = *(double*)P$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)P$1 + 8ll);
 *(double*)THIS$1 = *(double*)P$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)P$1 + 8ll);
 label$25:;
}

FBSTRING* _ZN9_FLOAT128cv8FBSTRINGEv( struct $9_FLOAT128* THIS$1 )
{
 FBSTRING TMP$43$1;
 FBSTRING TMP$44$1;
 FBSTRING TMP$45$1;
 FBSTRING TMP$46$1;
 FBSTRING TMP$47$1;
 FBSTRING TMP$48$1;
 FBSTRING TMP$49$1;
 FBSTRING TMP$50$1;
 FBSTRING fb$result$1;
 __builtin_memset( &fb$result$1, 0, 24ll );
 label$26:;
 FBSTRING* vr$2 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 8ll) );
 FBSTRING* vr$4 = fb_DoubleToStr( *(double*)THIS$1 );
 FBSTRING* vr$6 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 8ll) );
 FBSTRING* vr$8 = fb_DoubleToStr( *(double*)THIS$1 );
 __builtin_memset( &TMP$43$1, 0, 24ll );
 FBSTRING* vr$11 = fb_StrConcat( &TMP$43$1, (void*)"(", 2ll, (void*)vr$8, -1ll );
 __builtin_memset( &TMP$44$1, 0, 24ll );
 FBSTRING* vr$14 = fb_StrConcat( &TMP$44$1, (void*)vr$11, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$45$1, 0, 24ll );
 FBSTRING* vr$17 = fb_StrConcat( &TMP$45$1, (void*)vr$14, -1ll, (void*)vr$6, -1ll );
 __builtin_memset( &TMP$46$1, 0, 24ll );
 FBSTRING* vr$20 = fb_StrConcat( &TMP$46$1, (void*)vr$17, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$47$1, 0, 24ll );
 FBSTRING* vr$23 = fb_StrConcat( &TMP$47$1, (void*)vr$20, -1ll, (void*)vr$4, -1ll );
 __builtin_memset( &TMP$48$1, 0, 24ll );
 FBSTRING* vr$26 = fb_StrConcat( &TMP$48$1, (void*)vr$23, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$49$1, 0, 24ll );
 FBSTRING* vr$29 = fb_StrConcat( &TMP$49$1, (void*)vr$26, -1ll, (void*)vr$2, -1ll );
 __builtin_memset( &TMP$50$1, 0, 24ll );
 FBSTRING* vr$32 = fb_StrConcat( &TMP$50$1, (void*)vr$29, -1ll, (void*)")", 2ll );
 fb_StrInit( (void*)&fb$result$1, -1ll, (void*)vr$32, -1ll, 0 );
 goto label$27;
 label$27:;
 FBSTRING* vr$35 = fb_StrAllocTempResult( (FBSTRING*)&fb$result$1 );
 return vr$35;
}

uint64 _ZN9_FLOAT128cvyEv( struct $9_FLOAT128* THIS$1 )
{
 uint64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$28:;
 uint64 C$1;
 __builtin_memset( &C$1, 0, 8ll );
 C$1 = C$1 << (8ll & 63ll);
 if( *(double*)((uint8*)THIS$1 + 8ll) >= 0x1.010101010101p-8 ) goto label$31;
 {
 }
 goto label$30;
 label$31:;
 if( *(double*)((uint8*)THIS$1 + 8ll) <= 0x1.p+0 ) goto label$32;
 {
  C$1 = C$1 | 255ull;
 }
 goto label$30;
 label$32:;
 {
  C$1 = C$1 | ((uint64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 8ll) * 0x1.FEp+7 ));
 }
 label$30:;
 C$1 = C$1 << (8ll & 63ll);
 if( *(double*)THIS$1 >= 0x1.010101010101p-8 ) goto label$34;
 {
 }
 goto label$33;
 label$34:;
 if( *(double*)THIS$1 <= 0x1.p+0 ) goto label$35;
 {
  C$1 = C$1 | 255ull;
 }
 goto label$33;
 label$35:;
 {
  C$1 = C$1 | ((uint64)__builtin_nearbyint( *(double*)THIS$1 * 0x1.FEp+7 ));
 }
 label$33:;
 C$1 = C$1 << (8ll & 63ll);
 if( *(double*)((uint8*)THIS$1 + 8ll) >= 0x1.010101010101p-8 ) goto label$37;
 {
 }
 goto label$36;
 label$37:;
 if( *(double*)((uint8*)THIS$1 + 8ll) <= 0x1.p+0 ) goto label$38;
 {
  C$1 = C$1 | 255ull;
 }
 goto label$36;
 label$38:;
 {
  C$1 = C$1 | ((uint64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 8ll) * 0x1.FEp+7 ));
 }
 label$36:;
 C$1 = C$1 << (8ll & 63ll);
 if( *(double*)THIS$1 >= 0x1.010101010101p-8 ) goto label$40;
 {
 }
 goto label$39;
 label$40:;
 if( *(double*)THIS$1 <= 0x1.p+0 ) goto label$41;
 {
  C$1 = C$1 | 255ull;
 }
 goto label$39;
 label$41:;
 {
  C$1 = C$1 | ((uint64)__builtin_nearbyint( *(double*)THIS$1 * 0x1.FEp+7 ));
 }
 label$39:;
 fb$result$1 = C$1;
 goto label$29;
 label$29:;
 return fb$result$1;
}

void _ZN9_FLOAT128pLEf( struct $9_FLOAT128* THIS$1, float V$1 )
{
 label$42:;
 *(double*)THIS$1 = *(double*)THIS$1 + (double)V$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) + (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 + (double)V$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) + (double)V$1;
 label$43:;
}

void _ZN9_FLOAT128mIEf( struct $9_FLOAT128* THIS$1, float V$1 )
{
 label$44:;
 *(double*)THIS$1 = *(double*)THIS$1 - (double)V$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) - (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 - (double)V$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) - (double)V$1;
 label$45:;
}

void _ZN9_FLOAT128mLEf( struct $9_FLOAT128* THIS$1, float V$1 )
{
 label$46:;
 *(double*)THIS$1 = *(double*)THIS$1 * (double)V$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) * (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 * (double)V$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) * (double)V$1;
 label$47:;
}

void _ZN9_FLOAT128dVEf( struct $9_FLOAT128* THIS$1, float V$1 )
{
 label$48:;
 *(double*)THIS$1 = *(double*)THIS$1 / (double)V$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) / (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 / (double)V$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) / (double)V$1;
 label$49:;
}

void _ZN9_FLOAT128pLEd( struct $9_FLOAT128* THIS$1, double V$1 )
{
 label$50:;
 *(double*)THIS$1 = *(double*)THIS$1 + V$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) + V$1;
 *(double*)THIS$1 = *(double*)THIS$1 + V$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) + V$1;
 label$51:;
}

void _ZN9_FLOAT128mIEd( struct $9_FLOAT128* THIS$1, double V$1 )
{
 label$52:;
 *(double*)THIS$1 = *(double*)THIS$1 - V$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) - V$1;
 *(double*)THIS$1 = *(double*)THIS$1 - V$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) - V$1;
 label$53:;
}

void _ZN9_FLOAT128mLEd( struct $9_FLOAT128* THIS$1, double V$1 )
{
 label$54:;
 *(double*)THIS$1 = *(double*)THIS$1 * V$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) * V$1;
 *(double*)THIS$1 = *(double*)THIS$1 * V$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) * V$1;
 label$55:;
}

void _ZN9_FLOAT128dVEd( struct $9_FLOAT128* THIS$1, double V$1 )
{
 label$56:;
 *(double*)THIS$1 = *(double*)THIS$1 / V$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) / V$1;
 *(double*)THIS$1 = *(double*)THIS$1 / V$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) / V$1;
 label$57:;
}

void _ZN9_FLOAT128pLEy( struct $9_FLOAT128* THIS$1, uint64 V$1 )
{
 label$58:;
 *(double*)THIS$1 = *(double*)THIS$1 + (double)V$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) + (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 + (double)V$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) + (double)V$1;
 label$59:;
}

void _ZN9_FLOAT128mIEy( struct $9_FLOAT128* THIS$1, uint64 V$1 )
{
 label$60:;
 *(double*)THIS$1 = *(double*)THIS$1 - (double)V$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) - (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 - (double)V$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) - (double)V$1;
 label$61:;
}

void _ZN9_FLOAT128mLEy( struct $9_FLOAT128* THIS$1, uint64 V$1 )
{
 label$62:;
 *(double*)THIS$1 = *(double*)THIS$1 * (double)V$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) * (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 * (double)V$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) * (double)V$1;
 label$63:;
}

void _ZN9_FLOAT128dVEy( struct $9_FLOAT128* THIS$1, uint64 V$1 )
{
 label$64:;
 *(double*)THIS$1 = *(double*)THIS$1 / (double)V$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) / (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 / (double)V$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) / (double)V$1;
 label$65:;
}

void _ZN9_FLOAT128pLERS_( struct $9_FLOAT128* THIS$1, struct $9_FLOAT128* V4$1 )
{
 label$66:;
 *(double*)THIS$1 = *(double*)THIS$1 + *(double*)V4$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) + *(double*)((uint8*)V4$1 + 8ll);
 *(double*)THIS$1 = *(double*)THIS$1 + *(double*)V4$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) + *(double*)((uint8*)V4$1 + 8ll);
 label$67:;
}

void _ZN9_FLOAT128mIERS_( struct $9_FLOAT128* THIS$1, struct $9_FLOAT128* V4$1 )
{
 label$68:;
 *(double*)THIS$1 = *(double*)THIS$1 - *(double*)V4$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) - *(double*)((uint8*)V4$1 + 8ll);
 *(double*)THIS$1 = *(double*)THIS$1 - *(double*)V4$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) - *(double*)((uint8*)V4$1 + 8ll);
 label$69:;
}

void _ZN9_FLOAT128mLERS_( struct $9_FLOAT128* THIS$1, struct $9_FLOAT128* V4$1 )
{
 label$70:;
 *(double*)THIS$1 = *(double*)THIS$1 * *(double*)V4$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) * *(double*)((uint8*)V4$1 + 8ll);
 *(double*)THIS$1 = *(double*)THIS$1 * *(double*)V4$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) * *(double*)((uint8*)V4$1 + 8ll);
 label$71:;
}

void _ZN9_FLOAT128dVERS_( struct $9_FLOAT128* THIS$1, struct $9_FLOAT128* V4$1 )
{
 label$72:;
 *(double*)THIS$1 = *(double*)THIS$1 / *(double*)V4$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) / *(double*)((uint8*)V4$1 + 8ll);
 *(double*)THIS$1 = *(double*)THIS$1 / *(double*)V4$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) / *(double*)((uint8*)V4$1 + 8ll);
 label$73:;
}

struct $9_FLOAT128* _ZN9_FLOAT1282XXEv( struct $9_FLOAT128* tmp$51$1, struct $9_FLOAT128* THIS$1 )
{
 label$74:;
 _ZN9_FLOAT128C1Edd( tmp$51$1, *(double*)THIS$1, *(double*)THIS$1 );
 goto label$75;
 label$75:;
 return tmp$51$1;
}

struct $9_FLOAT128* _ZN9_FLOAT1282XYEv( struct $9_FLOAT128* tmp$53$1, struct $9_FLOAT128* THIS$1 )
{
 label$76:;
 _ZN9_FLOAT128C1Edd( tmp$53$1, *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 8ll) );
 goto label$77;
 label$77:;
 return tmp$53$1;
}

struct $9_FLOAT128* _ZN9_FLOAT1282XZEv( struct $9_FLOAT128* tmp$55$1, struct $9_FLOAT128* THIS$1 )
{
 label$78:;
 _ZN9_FLOAT128C1Edd( tmp$55$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)THIS$1 );
 goto label$79;
 label$79:;
 return tmp$55$1;
}

struct $9_FLOAT128* _ZN9_FLOAT1282YXEv( struct $9_FLOAT128* tmp$57$1, struct $9_FLOAT128* THIS$1 )
{
 label$80:;
 _ZN9_FLOAT128C1Edd( tmp$57$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)THIS$1 );
 goto label$81;
 label$81:;
 return tmp$57$1;
}

struct $9_FLOAT128* _ZN9_FLOAT1282YYEv( struct $9_FLOAT128* tmp$59$1, struct $9_FLOAT128* THIS$1 )
{
 label$82:;
 _ZN9_FLOAT128C1Edd( tmp$59$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)((uint8*)THIS$1 + 8ll) );
 goto label$83;
 label$83:;
 return tmp$59$1;
}

struct $9_FLOAT128* _ZN9_FLOAT1282YZEv( struct $9_FLOAT128* tmp$61$1, struct $9_FLOAT128* THIS$1 )
{
 label$84:;
 _ZN9_FLOAT128C1Edd( tmp$61$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)THIS$1 );
 goto label$85;
 label$85:;
 return tmp$61$1;
}

struct $9_FLOAT128* _ZN9_FLOAT1282ZXEv( struct $9_FLOAT128* tmp$63$1, struct $9_FLOAT128* THIS$1 )
{
 label$86:;
 _ZN9_FLOAT128C1Edd( tmp$63$1, *(double*)THIS$1, *(double*)THIS$1 );
 goto label$87;
 label$87:;
 return tmp$63$1;
}

struct $9_FLOAT128* _ZN9_FLOAT1282ZYEv( struct $9_FLOAT128* tmp$65$1, struct $9_FLOAT128* THIS$1 )
{
 label$88:;
 _ZN9_FLOAT128C1Edd( tmp$65$1, *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 8ll) );
 goto label$89;
 label$89:;
 return tmp$65$1;
}

struct $9_FLOAT128* _ZN9_FLOAT1282ZZEv( struct $9_FLOAT128* tmp$67$1, struct $9_FLOAT128* THIS$1 )
{
 label$90:;
 _ZN9_FLOAT128C1Edd( tmp$67$1, *(double*)THIS$1, *(double*)THIS$1 );
 goto label$91;
 label$91:;
 return tmp$67$1;
}

struct $9_FLOAT128* _ZN9_FLOAT1283XXXEv( struct $9_FLOAT128* tmp$69$1, struct $9_FLOAT128* THIS$1 )
{
 label$92:;
 _ZN9_FLOAT128C1Edddd( tmp$69$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$93;
 label$93:;
 return tmp$69$1;
}

struct $9_FLOAT128* _ZN9_FLOAT1283XXYEv( struct $9_FLOAT128* tmp$71$1, struct $9_FLOAT128* THIS$1 )
{
 label$94:;
 _ZN9_FLOAT128C1Edddd( tmp$71$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 8ll), 0x1.p+0 );
 goto label$95;
 label$95:;
 return tmp$71$1;
}

struct $9_FLOAT128* _ZN9_FLOAT1283XXZEv( struct $9_FLOAT128* tmp$73$1, struct $9_FLOAT128* THIS$1 )
{
 label$96:;
 _ZN9_FLOAT128C1Edddd( tmp$73$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$97;
 label$97:;
 return tmp$73$1;
}

struct $9_FLOAT128* _ZN9_FLOAT1283XYXEv( struct $9_FLOAT128* tmp$75$1, struct $9_FLOAT128* THIS$1 )
{
 label$98:;
 _ZN9_FLOAT128C1Edddd( tmp$75$1, *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)THIS$1, 0x1.p+0 );
 goto label$99;
 label$99:;
 return tmp$75$1;
}

struct $9_FLOAT128* _ZN9_FLOAT1283XYYEv( struct $9_FLOAT128* tmp$77$1, struct $9_FLOAT128* THIS$1 )
{
 label$100:;
 _ZN9_FLOAT128C1Edddd( tmp$77$1, *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)((uint8*)THIS$1 + 8ll), 0x1.p+0 );
 goto label$101;
 label$101:;
 return tmp$77$1;
}

struct $9_FLOAT128* _ZN9_FLOAT1283XYZEv( struct $9_FLOAT128* tmp$79$1, struct $9_FLOAT128* THIS$1 )
{
 label$102:;
 _ZN9_FLOAT128C1Edddd( tmp$79$1, *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)THIS$1, 0x1.p+0 );
 goto label$103;
 label$103:;
 return tmp$79$1;
}

struct $9_FLOAT128* _ZN9_FLOAT1283XZXEv( struct $9_FLOAT128* tmp$81$1, struct $9_FLOAT128* THIS$1 )
{
 label$104:;
 _ZN9_FLOAT128C1Edddd( tmp$81$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$105;
 label$105:;
 return tmp$81$1;
}

struct $9_FLOAT128* _ZN9_FLOAT1283XZYEv( struct $9_FLOAT128* tmp$83$1, struct $9_FLOAT128* THIS$1 )
{
 label$106:;
 _ZN9_FLOAT128C1Edddd( tmp$83$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 8ll), 0x1.p+0 );
 goto label$107;
 label$107:;
 return tmp$83$1;
}

struct $9_FLOAT128* _ZN9_FLOAT1283XZZEv( struct $9_FLOAT128* tmp$85$1, struct $9_FLOAT128* THIS$1 )
{
 label$108:;
 _ZN9_FLOAT128C1Edddd( tmp$85$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$109;
 label$109:;
 return tmp$85$1;
}

struct $9_FLOAT128* _ZN9_FLOAT1283YXXEv( struct $9_FLOAT128* tmp$87$1, struct $9_FLOAT128* THIS$1 )
{
 label$110:;
 _ZN9_FLOAT128C1Edddd( tmp$87$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$111;
 label$111:;
 return tmp$87$1;
}

struct $9_FLOAT128* _ZN9_FLOAT1283YXYEv( struct $9_FLOAT128* tmp$89$1, struct $9_FLOAT128* THIS$1 )
{
 label$112:;
 _ZN9_FLOAT128C1Edddd( tmp$89$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 8ll), 0x1.p+0 );
 goto label$113;
 label$113:;
 return tmp$89$1;
}

struct $9_FLOAT128* _ZN9_FLOAT1283YXZEv( struct $9_FLOAT128* tmp$91$1, struct $9_FLOAT128* THIS$1 )
{
 label$114:;
 _ZN9_FLOAT128C1Edddd( tmp$91$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$115;
 label$115:;
 return tmp$91$1;
}

struct $9_FLOAT128* _ZN9_FLOAT1283YYXEv( struct $9_FLOAT128* tmp$93$1, struct $9_FLOAT128* THIS$1 )
{
 label$116:;
 _ZN9_FLOAT128C1Edddd( tmp$93$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)((uint8*)THIS$1 + 8ll), *(double*)THIS$1, 0x1.p+0 );
 goto label$117;
 label$117:;
 return tmp$93$1;
}

struct $9_FLOAT128* _ZN9_FLOAT1283YYYEv( struct $9_FLOAT128* tmp$95$1, struct $9_FLOAT128* THIS$1 )
{
 label$118:;
 _ZN9_FLOAT128C1Edddd( tmp$95$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)((uint8*)THIS$1 + 8ll), *(double*)((uint8*)THIS$1 + 8ll), 0x1.p+0 );
 goto label$119;
 label$119:;
 return tmp$95$1;
}

struct $9_FLOAT128* _ZN9_FLOAT1283YYZEv( struct $9_FLOAT128* tmp$97$1, struct $9_FLOAT128* THIS$1 )
{
 label$120:;
 _ZN9_FLOAT128C1Edddd( tmp$97$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)((uint8*)THIS$1 + 8ll), *(double*)THIS$1, 0x1.p+0 );
 goto label$121;
 label$121:;
 return tmp$97$1;
}

struct $9_FLOAT128* _ZN9_FLOAT1283YZXEv( struct $9_FLOAT128* tmp$99$1, struct $9_FLOAT128* THIS$1 )
{
 label$122:;
 _ZN9_FLOAT128C1Edddd( tmp$99$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$123;
 label$123:;
 return tmp$99$1;
}

struct $9_FLOAT128* _ZN9_FLOAT1283YZYEv( struct $9_FLOAT128* tmp$101$1, struct $9_FLOAT128* THIS$1 )
{
 label$124:;
 _ZN9_FLOAT128C1Edddd( tmp$101$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 8ll), 0x1.p+0 );
 goto label$125;
 label$125:;
 return tmp$101$1;
}

struct $9_FLOAT128* _ZN9_FLOAT1283YZZEv( struct $9_FLOAT128* tmp$103$1, struct $9_FLOAT128* THIS$1 )
{
 label$126:;
 _ZN9_FLOAT128C1Edddd( tmp$103$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$127;
 label$127:;
 return tmp$103$1;
}

struct $9_FLOAT128* _ZN9_FLOAT1283ZXXEv( struct $9_FLOAT128* tmp$105$1, struct $9_FLOAT128* THIS$1 )
{
 label$128:;
 _ZN9_FLOAT128C1Edddd( tmp$105$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$129;
 label$129:;
 return tmp$105$1;
}

struct $9_FLOAT128* _ZN9_FLOAT1283ZXYEv( struct $9_FLOAT128* tmp$107$1, struct $9_FLOAT128* THIS$1 )
{
 label$130:;
 _ZN9_FLOAT128C1Edddd( tmp$107$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 8ll), 0x1.p+0 );
 goto label$131;
 label$131:;
 return tmp$107$1;
}

struct $9_FLOAT128* _ZN9_FLOAT1283ZXZEv( struct $9_FLOAT128* tmp$109$1, struct $9_FLOAT128* THIS$1 )
{
 label$132:;
 _ZN9_FLOAT128C1Edddd( tmp$109$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$133;
 label$133:;
 return tmp$109$1;
}

struct $9_FLOAT128* _ZN9_FLOAT1283ZYXEv( struct $9_FLOAT128* tmp$111$1, struct $9_FLOAT128* THIS$1 )
{
 label$134:;
 _ZN9_FLOAT128C1Edddd( tmp$111$1, *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)THIS$1, 0x1.p+0 );
 goto label$135;
 label$135:;
 return tmp$111$1;
}

struct $9_FLOAT128* _ZN9_FLOAT1283ZYYEv( struct $9_FLOAT128* tmp$113$1, struct $9_FLOAT128* THIS$1 )
{
 label$136:;
 _ZN9_FLOAT128C1Edddd( tmp$113$1, *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)((uint8*)THIS$1 + 8ll), 0x1.p+0 );
 goto label$137;
 label$137:;
 return tmp$113$1;
}

struct $9_FLOAT128* _ZN9_FLOAT1283ZYZEv( struct $9_FLOAT128* tmp$115$1, struct $9_FLOAT128* THIS$1 )
{
 label$138:;
 _ZN9_FLOAT128C1Edddd( tmp$115$1, *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)THIS$1, 0x1.p+0 );
 goto label$139;
 label$139:;
 return tmp$115$1;
}

struct $9_FLOAT128* _ZN9_FLOAT1283ZZXEv( struct $9_FLOAT128* tmp$117$1, struct $9_FLOAT128* THIS$1 )
{
 label$140:;
 _ZN9_FLOAT128C1Edddd( tmp$117$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$141;
 label$141:;
 return tmp$117$1;
}

struct $9_FLOAT128* _ZN9_FLOAT1283ZZYEv( struct $9_FLOAT128* tmp$119$1, struct $9_FLOAT128* THIS$1 )
{
 label$142:;
 _ZN9_FLOAT128C1Edddd( tmp$119$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 8ll), 0x1.p+0 );
 goto label$143;
 label$143:;
 return tmp$119$1;
}

struct $9_FLOAT128* _ZN9_FLOAT1283ZZZEv( struct $9_FLOAT128* tmp$121$1, struct $9_FLOAT128* THIS$1 )
{
 label$144:;
 _ZN9_FLOAT128C1Edddd( tmp$121$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$145;
 label$145:;
 return tmp$121$1;
}

struct $9_FLOAT128* _ZN9_FLOAT1283RGBEv( struct $9_FLOAT128* tmp$123$1, struct $9_FLOAT128* THIS$1 )
{
 label$146:;
 _ZN9_FLOAT128C1Edddd( tmp$123$1, *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)THIS$1, 0x1.p+0 );
 goto label$147;
 label$147:;
 return tmp$123$1;
}

struct $9_FLOAT128* _ZN9_FLOAT1284RGBAEv( struct $9_FLOAT128* tmp$125$1, struct $9_FLOAT128* THIS$1 )
{
 label$148:;
 _ZN9_FLOAT128C1Edddd( tmp$125$1, *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 8ll) );
 goto label$149;
 label$149:;
 return tmp$125$1;
}

struct $9_FLOAT128* _ZngR9_FLOAT128( struct $9_FLOAT128* tmp$127$1, struct $9_FLOAT128* L$1 )
{
 label$150:;
 _ZN9_FLOAT128C1Edddd( tmp$127$1, -(*(double*)L$1), -(*(double*)((uint8*)L$1 + 8ll)), -(*(double*)L$1), -(*(double*)((uint8*)L$1 + 8ll)) );
 goto label$151;
 label$151:;
 return tmp$127$1;
}

struct $9_FLOAT128* _ZplR9_FLOAT128S0_( struct $9_FLOAT128* tmp$129$1, struct $9_FLOAT128* L$1, struct $9_FLOAT128* R$1 )
{
 label$152:;
 _ZN9_FLOAT128C1Edddd( tmp$129$1, *(double*)L$1 + *(double*)R$1, *(double*)((uint8*)L$1 + 8ll) + *(double*)((uint8*)R$1 + 8ll), *(double*)L$1 + *(double*)R$1, *(double*)((uint8*)L$1 + 8ll) + *(double*)((uint8*)R$1 + 8ll) );
 goto label$153;
 label$153:;
 return tmp$129$1;
}

struct $9_FLOAT128* _ZmiR9_FLOAT128S0_( struct $9_FLOAT128* tmp$131$1, struct $9_FLOAT128* L$1, struct $9_FLOAT128* R$1 )
{
 label$154:;
 _ZN9_FLOAT128C1Edddd( tmp$131$1, *(double*)L$1 - *(double*)R$1, *(double*)((uint8*)L$1 + 8ll) - *(double*)((uint8*)R$1 + 8ll), *(double*)L$1 - *(double*)R$1, *(double*)((uint8*)L$1 + 8ll) - *(double*)((uint8*)R$1 + 8ll) );
 goto label$155;
 label$155:;
 return tmp$131$1;
}

struct $9_FLOAT128* _ZmlR9_FLOAT128S0_( struct $9_FLOAT128* tmp$133$1, struct $9_FLOAT128* L$1, struct $9_FLOAT128* R$1 )
{
 label$156:;
 _ZN9_FLOAT128C1Edddd( tmp$133$1, *(double*)L$1 * *(double*)R$1, *(double*)((uint8*)L$1 + 8ll) * *(double*)((uint8*)R$1 + 8ll), *(double*)L$1 * *(double*)R$1, *(double*)((uint8*)L$1 + 8ll) * *(double*)((uint8*)R$1 + 8ll) );
 goto label$157;
 label$157:;
 return tmp$133$1;
}

struct $9_FLOAT128* _ZdvR9_FLOAT128S0_( struct $9_FLOAT128* tmp$135$1, struct $9_FLOAT128* L$1, struct $9_FLOAT128* R$1 )
{
 label$158:;
 _ZN9_FLOAT128C1Edddd( tmp$135$1, *(double*)L$1 / *(double*)R$1, *(double*)((uint8*)L$1 + 8ll) / *(double*)((uint8*)R$1 + 8ll), *(double*)L$1 / *(double*)R$1, *(double*)((uint8*)L$1 + 8ll) / *(double*)((uint8*)R$1 + 8ll) );
 goto label$159;
 label$159:;
 return tmp$135$1;
}

int64 _ZeqR9_FLOAT128S0_( struct $9_FLOAT128* L$1, struct $9_FLOAT128* R$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$160:;
 if( ((((int64)__builtin_nearbyint( *(double*)L$1 )) ^ ((int64)__builtin_nearbyint( *(double*)R$1 ))) | (((int64)__builtin_nearbyint( *(double*)((uint8*)L$1 + 8ll) )) ^ ((int64)__builtin_nearbyint( *(double*)((uint8*)R$1 + 8ll) )))) == 0ll ) goto label$163;
 {
  fb$result$1 = 0ll;
  goto label$161;
  label$163:;
 }
 fb$result$1 = -1ll;
 goto label$161;
 label$161:;
 return fb$result$1;
}

int64 _ZneR9_FLOAT128S0_( struct $9_FLOAT128* L$1, struct $9_FLOAT128* R$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$164:;
 if( ((((int64)__builtin_nearbyint( *(double*)L$1 )) ^ ((int64)__builtin_nearbyint( *(double*)R$1 ))) | (((int64)__builtin_nearbyint( *(double*)((uint8*)L$1 + 8ll) )) ^ ((int64)__builtin_nearbyint( *(double*)((uint8*)R$1 + 8ll) )))) == 0ll ) goto label$167;
 {
  fb$result$1 = -1ll;
  goto label$165;
  label$167:;
 }
 fb$result$1 = 0ll;
 goto label$165;
 label$165:;
 return fb$result$1;
}

struct $9_FLOAT128* _ZplR9_FLOAT128d( struct $9_FLOAT128* tmp$137$1, struct $9_FLOAT128* L$1, double R$1 )
{
 label$168:;
 _ZN9_FLOAT128C1Edddd( tmp$137$1, *(double*)L$1 + R$1, *(double*)((uint8*)L$1 + 8ll) + R$1, *(double*)L$1 + R$1, *(double*)((uint8*)L$1 + 8ll) + R$1 );
 goto label$169;
 label$169:;
 return tmp$137$1;
}

struct $9_FLOAT128* _ZpldR9_FLOAT128( struct $9_FLOAT128* tmp$139$1, double L$1, struct $9_FLOAT128* R$1 )
{
 label$170:;
 _ZN9_FLOAT128C1Edddd( tmp$139$1, *(double*)R$1 + L$1, *(double*)((uint8*)R$1 + 8ll) + L$1, *(double*)R$1 + L$1, *(double*)((uint8*)R$1 + 8ll) + L$1 );
 goto label$171;
 label$171:;
 return tmp$139$1;
}

struct $9_FLOAT128* _ZmiR9_FLOAT128d( struct $9_FLOAT128* tmp$141$1, struct $9_FLOAT128* L$1, double R$1 )
{
 label$172:;
 _ZN9_FLOAT128C1Edddd( tmp$141$1, *(double*)L$1 - R$1, *(double*)((uint8*)L$1 + 8ll) - R$1, *(double*)L$1 - R$1, *(double*)((uint8*)L$1 + 8ll) - R$1 );
 goto label$173;
 label$173:;
 return tmp$141$1;
}

struct $9_FLOAT128* _ZmidR9_FLOAT128( struct $9_FLOAT128* tmp$143$1, double L$1, struct $9_FLOAT128* R$1 )
{
 label$174:;
 _ZN9_FLOAT128C1Edddd( tmp$143$1, *(double*)R$1 - L$1, *(double*)((uint8*)R$1 + 8ll) - L$1, *(double*)R$1 - L$1, *(double*)((uint8*)R$1 + 8ll) - L$1 );
 goto label$175;
 label$175:;
 return tmp$143$1;
}

struct $9_FLOAT128* _ZmlR9_FLOAT128d( struct $9_FLOAT128* tmp$145$1, struct $9_FLOAT128* L$1, double R$1 )
{
 label$176:;
 _ZN9_FLOAT128C1Edddd( tmp$145$1, *(double*)L$1 * R$1, *(double*)((uint8*)L$1 + 8ll) * R$1, *(double*)L$1 * R$1, *(double*)((uint8*)L$1 + 8ll) * R$1 );
 goto label$177;
 label$177:;
 return tmp$145$1;
}

struct $9_FLOAT128* _ZmldR9_FLOAT128( struct $9_FLOAT128* tmp$147$1, double L$1, struct $9_FLOAT128* R$1 )
{
 label$178:;
 _ZN9_FLOAT128C1Edddd( tmp$147$1, L$1 * *(double*)R$1, L$1 * *(double*)((uint8*)R$1 + 8ll), L$1 * *(double*)R$1, L$1 * *(double*)((uint8*)R$1 + 8ll) );
 goto label$179;
 label$179:;
 return tmp$147$1;
}

void _ZN9_FLOAT256C1Ev( struct $9_FLOAT256* THIS$1 )
{
 label$180:;
 __builtin_memset( (int64*)THIS$1, 0, 8ll );
 *(double*)THIS$1 = 0x1.p+0;
 label$181:;
}

void _ZN9_FLOAT256C1Edd( struct $9_FLOAT256* THIS$1, double PXYZ$1, double PW$1 )
{
 label$182:;
 __builtin_memset( (int64*)THIS$1, 0, 8ll );
 *(double*)THIS$1 = PXYZ$1;
 *(double*)THIS$1 = PXYZ$1;
 *(double*)THIS$1 = PXYZ$1;
 *(double*)THIS$1 = PW$1;
 label$183:;
}

void _ZN9_FLOAT256C1Edddd( struct $9_FLOAT256* THIS$1, double PX$1, double PY$1, double PZ$1, double PW$1 )
{
 label$184:;
 __builtin_memset( (int64*)THIS$1, 0, 8ll );
 *(double*)THIS$1 = PX$1;
 *(double*)THIS$1 = PY$1;
 *(double*)THIS$1 = PZ$1;
 *(double*)THIS$1 = PW$1;
 label$185:;
}

void _ZN9_FLOAT256C1ERS_dd( struct $9_FLOAT256* THIS$1, struct $9_FLOAT256* V1$1, double PZ$1, double PW$1 )
{
 label$186:;
 __builtin_memset( (int64*)THIS$1, 0, 8ll );
 *(double*)THIS$1 = *(double*)V1$1;
 *(double*)THIS$1 = *(double*)V1$1;
 *(double*)THIS$1 = PZ$1;
 *(double*)THIS$1 = PW$1;
 label$187:;
}

void _ZN9_FLOAT256C1ERS_S0_( struct $9_FLOAT256* THIS$1, struct $9_FLOAT256* V1$1, struct $9_FLOAT256* V2$1 )
{
 label$188:;
 __builtin_memset( (int64*)THIS$1, 0, 8ll );
 *(double*)THIS$1 = *(double*)V1$1;
 *(double*)THIS$1 = *(double*)V1$1;
 *(double*)THIS$1 = *(double*)V2$1;
 *(double*)THIS$1 = *(double*)V2$1;
 label$189:;
}

void _ZN9_FLOAT256C1ERS_d( struct $9_FLOAT256* THIS$1, struct $9_FLOAT256* V3$1, double PW$1 )
{
 label$190:;
 __builtin_memset( (int64*)THIS$1, 0, 8ll );
 *(double*)THIS$1 = *(double*)V3$1;
 *(double*)THIS$1 = *(double*)V3$1;
 *(double*)THIS$1 = *(double*)V3$1;
 *(double*)THIS$1 = PW$1;
 label$191:;
}

void _ZN9_FLOAT256C1EdRS_( struct $9_FLOAT256* THIS$1, double PX$1, struct $9_FLOAT256* V3$1 )
{
 label$192:;
 __builtin_memset( (int64*)THIS$1, 0, 8ll );
 *(double*)THIS$1 = PX$1;
 *(double*)THIS$1 = *(double*)V3$1;
 *(double*)THIS$1 = *(double*)V3$1;
 *(double*)THIS$1 = *(double*)V3$1;
 label$193:;
}

void _ZN9_FLOAT256C1ERS_( struct $9_FLOAT256* THIS$1, struct $9_FLOAT256* V4$1 )
{
 label$194:;
 __builtin_memset( (int64*)THIS$1, 0, 8ll );
 *(double*)THIS$1 = *(double*)V4$1;
 *(double*)THIS$1 = *(double*)V4$1;
 *(double*)THIS$1 = *(double*)V4$1;
 *(double*)THIS$1 = *(double*)V4$1;
 label$195:;
}

void _ZN9_FLOAT256aSEd( struct $9_FLOAT256* THIS$1, double PXYZW$1 )
{
 label$196:;
 *(double*)THIS$1 = PXYZW$1;
 *(double*)THIS$1 = PXYZW$1;
 *(double*)THIS$1 = PXYZW$1;
 *(double*)THIS$1 = PXYZW$1;
 label$197:;
}

void _ZN9_FLOAT256aSEf( struct $9_FLOAT256* THIS$1, float P$1 )
{
 label$198:;
 *(double*)THIS$1 = (double)P$1;
 *(double*)THIS$1 = (double)P$1;
 *(double*)THIS$1 = 0x1.p+0;
 *(double*)THIS$1 = 0x1.p+0;
 label$199:;
}

void _ZN9_FLOAT256aSEy( struct $9_FLOAT256* THIS$1, uint64 P$1 )
{
 label$200:;
 *(double*)THIS$1 = (double)P$1;
 *(double*)THIS$1 = (double)P$1;
 *(double*)THIS$1 = (double)P$1;
 *(double*)THIS$1 = 0x1.p+0;
 label$201:;
}

void _ZN9_FLOAT256aSERS_( struct $9_FLOAT256* THIS$1, struct $9_FLOAT256* P$1 )
{
 label$202:;
 *(double*)THIS$1 = *(double*)P$1;
 *(double*)THIS$1 = *(double*)P$1;
 *(double*)THIS$1 = *(double*)P$1;
 *(double*)THIS$1 = *(double*)P$1;
 label$203:;
}

FBSTRING* _ZN9_FLOAT256cv8FBSTRINGEv( struct $9_FLOAT256* THIS$1 )
{
 FBSTRING TMP$158$1;
 FBSTRING TMP$159$1;
 FBSTRING TMP$160$1;
 FBSTRING TMP$161$1;
 FBSTRING TMP$162$1;
 FBSTRING TMP$163$1;
 FBSTRING TMP$164$1;
 FBSTRING TMP$165$1;
 FBSTRING fb$result$1;
 __builtin_memset( &fb$result$1, 0, 24ll );
 label$204:;
 FBSTRING* vr$2 = fb_DoubleToStr( *(double*)THIS$1 );
 FBSTRING* vr$4 = fb_DoubleToStr( *(double*)THIS$1 );
 FBSTRING* vr$6 = fb_DoubleToStr( *(double*)THIS$1 );
 FBSTRING* vr$8 = fb_DoubleToStr( *(double*)THIS$1 );
 __builtin_memset( &TMP$158$1, 0, 24ll );
 FBSTRING* vr$11 = fb_StrConcat( &TMP$158$1, (void*)"(", 2ll, (void*)vr$8, -1ll );
 __builtin_memset( &TMP$159$1, 0, 24ll );
 FBSTRING* vr$14 = fb_StrConcat( &TMP$159$1, (void*)vr$11, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$160$1, 0, 24ll );
 FBSTRING* vr$17 = fb_StrConcat( &TMP$160$1, (void*)vr$14, -1ll, (void*)vr$6, -1ll );
 __builtin_memset( &TMP$161$1, 0, 24ll );
 FBSTRING* vr$20 = fb_StrConcat( &TMP$161$1, (void*)vr$17, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$162$1, 0, 24ll );
 FBSTRING* vr$23 = fb_StrConcat( &TMP$162$1, (void*)vr$20, -1ll, (void*)vr$4, -1ll );
 __builtin_memset( &TMP$163$1, 0, 24ll );
 FBSTRING* vr$26 = fb_StrConcat( &TMP$163$1, (void*)vr$23, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$164$1, 0, 24ll );
 FBSTRING* vr$29 = fb_StrConcat( &TMP$164$1, (void*)vr$26, -1ll, (void*)vr$2, -1ll );
 __builtin_memset( &TMP$165$1, 0, 24ll );
 FBSTRING* vr$32 = fb_StrConcat( &TMP$165$1, (void*)vr$29, -1ll, (void*)")", 2ll );
 fb_StrInit( (void*)&fb$result$1, -1ll, (void*)vr$32, -1ll, 0 );
 goto label$205;
 label$205:;
 FBSTRING* vr$35 = fb_StrAllocTempResult( (FBSTRING*)&fb$result$1 );
 return vr$35;
}

uint64 _ZN9_FLOAT256cvyEv( struct $9_FLOAT256* THIS$1 )
{
 uint64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$206:;
 uint64 C$1;
 __builtin_memset( &C$1, 0, 8ll );
 C$1 = C$1 << (8ll & 63ll);
 if( *(double*)THIS$1 >= 0x1.010101010101p-8 ) goto label$209;
 {
 }
 goto label$208;
 label$209:;
 if( *(double*)THIS$1 <= 0x1.p+0 ) goto label$210;
 {
  C$1 = C$1 | 255ull;
 }
 goto label$208;
 label$210:;
 {
  C$1 = C$1 | ((uint64)__builtin_nearbyint( *(double*)THIS$1 * 0x1.FEp+7 ));
 }
 label$208:;
 C$1 = C$1 << (8ll & 63ll);
 if( *(double*)THIS$1 >= 0x1.010101010101p-8 ) goto label$212;
 {
 }
 goto label$211;
 label$212:;
 if( *(double*)THIS$1 <= 0x1.p+0 ) goto label$213;
 {
  C$1 = C$1 | 255ull;
 }
 goto label$211;
 label$213:;
 {
  C$1 = C$1 | ((uint64)__builtin_nearbyint( *(double*)THIS$1 * 0x1.FEp+7 ));
 }
 label$211:;
 C$1 = C$1 << (8ll & 63ll);
 if( *(double*)THIS$1 >= 0x1.010101010101p-8 ) goto label$215;
 {
 }
 goto label$214;
 label$215:;
 if( *(double*)THIS$1 <= 0x1.p+0 ) goto label$216;
 {
  C$1 = C$1 | 255ull;
 }
 goto label$214;
 label$216:;
 {
  C$1 = C$1 | ((uint64)__builtin_nearbyint( *(double*)THIS$1 * 0x1.FEp+7 ));
 }
 label$214:;
 C$1 = C$1 << (8ll & 63ll);
 if( *(double*)THIS$1 >= 0x1.010101010101p-8 ) goto label$218;
 {
 }
 goto label$217;
 label$218:;
 if( *(double*)THIS$1 <= 0x1.p+0 ) goto label$219;
 {
  C$1 = C$1 | 255ull;
 }
 goto label$217;
 label$219:;
 {
  C$1 = C$1 | ((uint64)__builtin_nearbyint( *(double*)THIS$1 * 0x1.FEp+7 ));
 }
 label$217:;
 fb$result$1 = C$1;
 goto label$207;
 label$207:;
 return fb$result$1;
}

void _ZN9_FLOAT256pLEf( struct $9_FLOAT256* THIS$1, float V$1 )
{
 label$220:;
 *(double*)THIS$1 = *(double*)THIS$1 + (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 + (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 + (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 + (double)V$1;
 label$221:;
}

void _ZN9_FLOAT256mIEf( struct $9_FLOAT256* THIS$1, float V$1 )
{
 label$222:;
 *(double*)THIS$1 = *(double*)THIS$1 - (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 - (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 - (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 - (double)V$1;
 label$223:;
}

void _ZN9_FLOAT256mLEf( struct $9_FLOAT256* THIS$1, float V$1 )
{
 label$224:;
 *(double*)THIS$1 = *(double*)THIS$1 * (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 * (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 * (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 * (double)V$1;
 label$225:;
}

void _ZN9_FLOAT256dVEf( struct $9_FLOAT256* THIS$1, float V$1 )
{
 label$226:;
 *(double*)THIS$1 = *(double*)THIS$1 / (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 / (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 / (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 / (double)V$1;
 label$227:;
}

void _ZN9_FLOAT256pLEd( struct $9_FLOAT256* THIS$1, double V$1 )
{
 label$228:;
 *(double*)THIS$1 = *(double*)THIS$1 + V$1;
 *(double*)THIS$1 = *(double*)THIS$1 + V$1;
 *(double*)THIS$1 = *(double*)THIS$1 + V$1;
 *(double*)THIS$1 = *(double*)THIS$1 + V$1;
 label$229:;
}

void _ZN9_FLOAT256mIEd( struct $9_FLOAT256* THIS$1, double V$1 )
{
 label$230:;
 *(double*)THIS$1 = *(double*)THIS$1 - V$1;
 *(double*)THIS$1 = *(double*)THIS$1 - V$1;
 *(double*)THIS$1 = *(double*)THIS$1 - V$1;
 *(double*)THIS$1 = *(double*)THIS$1 - V$1;
 label$231:;
}

void _ZN9_FLOAT256mLEd( struct $9_FLOAT256* THIS$1, double V$1 )
{
 label$232:;
 *(double*)THIS$1 = *(double*)THIS$1 * V$1;
 *(double*)THIS$1 = *(double*)THIS$1 * V$1;
 *(double*)THIS$1 = *(double*)THIS$1 * V$1;
 *(double*)THIS$1 = *(double*)THIS$1 * V$1;
 label$233:;
}

void _ZN9_FLOAT256dVEd( struct $9_FLOAT256* THIS$1, double V$1 )
{
 label$234:;
 *(double*)THIS$1 = *(double*)THIS$1 / V$1;
 *(double*)THIS$1 = *(double*)THIS$1 / V$1;
 *(double*)THIS$1 = *(double*)THIS$1 / V$1;
 *(double*)THIS$1 = *(double*)THIS$1 / V$1;
 label$235:;
}

void _ZN9_FLOAT256pLEy( struct $9_FLOAT256* THIS$1, uint64 V$1 )
{
 label$236:;
 *(double*)THIS$1 = *(double*)THIS$1 + (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 + (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 + (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 + (double)V$1;
 label$237:;
}

void _ZN9_FLOAT256mIEy( struct $9_FLOAT256* THIS$1, uint64 V$1 )
{
 label$238:;
 *(double*)THIS$1 = *(double*)THIS$1 - (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 - (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 - (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 - (double)V$1;
 label$239:;
}

void _ZN9_FLOAT256mLEy( struct $9_FLOAT256* THIS$1, uint64 V$1 )
{
 label$240:;
 *(double*)THIS$1 = *(double*)THIS$1 * (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 * (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 * (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 * (double)V$1;
 label$241:;
}

void _ZN9_FLOAT256dVEy( struct $9_FLOAT256* THIS$1, uint64 V$1 )
{
 label$242:;
 *(double*)THIS$1 = *(double*)THIS$1 / (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 / (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 / (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 / (double)V$1;
 label$243:;
}

void _ZN9_FLOAT256pLERS_( struct $9_FLOAT256* THIS$1, struct $9_FLOAT256* V4$1 )
{
 label$244:;
 *(double*)THIS$1 = *(double*)THIS$1 + *(double*)V4$1;
 *(double*)THIS$1 = *(double*)THIS$1 + *(double*)V4$1;
 *(double*)THIS$1 = *(double*)THIS$1 + *(double*)V4$1;
 *(double*)THIS$1 = *(double*)THIS$1 + *(double*)V4$1;
 label$245:;
}

void _ZN9_FLOAT256mIERS_( struct $9_FLOAT256* THIS$1, struct $9_FLOAT256* V4$1 )
{
 label$246:;
 *(double*)THIS$1 = *(double*)THIS$1 - *(double*)V4$1;
 *(double*)THIS$1 = *(double*)THIS$1 - *(double*)V4$1;
 *(double*)THIS$1 = *(double*)THIS$1 - *(double*)V4$1;
 *(double*)THIS$1 = *(double*)THIS$1 - *(double*)V4$1;
 label$247:;
}

void _ZN9_FLOAT256mLERS_( struct $9_FLOAT256* THIS$1, struct $9_FLOAT256* V4$1 )
{
 label$248:;
 *(double*)THIS$1 = *(double*)THIS$1 * *(double*)V4$1;
 *(double*)THIS$1 = *(double*)THIS$1 * *(double*)V4$1;
 *(double*)THIS$1 = *(double*)THIS$1 * *(double*)V4$1;
 *(double*)THIS$1 = *(double*)THIS$1 * *(double*)V4$1;
 label$249:;
}

void _ZN9_FLOAT256dVERS_( struct $9_FLOAT256* THIS$1, struct $9_FLOAT256* V4$1 )
{
 label$250:;
 *(double*)THIS$1 = *(double*)THIS$1 / *(double*)V4$1;
 *(double*)THIS$1 = *(double*)THIS$1 / *(double*)V4$1;
 *(double*)THIS$1 = *(double*)THIS$1 / *(double*)V4$1;
 *(double*)THIS$1 = *(double*)THIS$1 / *(double*)V4$1;
 label$251:;
}

struct $9_FLOAT256* _ZN9_FLOAT2562XXEv( struct $9_FLOAT256* tmp$166$1, struct $9_FLOAT256* THIS$1 )
{
 label$252:;
 _ZN9_FLOAT256C1Edd( tmp$166$1, *(double*)THIS$1, *(double*)THIS$1 );
 goto label$253;
 label$253:;
 return tmp$166$1;
}

struct $9_FLOAT256* _ZN9_FLOAT2562XYEv( struct $9_FLOAT256* tmp$168$1, struct $9_FLOAT256* THIS$1 )
{
 label$254:;
 _ZN9_FLOAT256C1Edd( tmp$168$1, *(double*)THIS$1, *(double*)THIS$1 );
 goto label$255;
 label$255:;
 return tmp$168$1;
}

struct $9_FLOAT256* _ZN9_FLOAT2562XZEv( struct $9_FLOAT256* tmp$170$1, struct $9_FLOAT256* THIS$1 )
{
 label$256:;
 _ZN9_FLOAT256C1Edd( tmp$170$1, *(double*)THIS$1, *(double*)THIS$1 );
 goto label$257;
 label$257:;
 return tmp$170$1;
}

struct $9_FLOAT256* _ZN9_FLOAT2562YXEv( struct $9_FLOAT256* tmp$172$1, struct $9_FLOAT256* THIS$1 )
{
 label$258:;
 _ZN9_FLOAT256C1Edd( tmp$172$1, *(double*)THIS$1, *(double*)THIS$1 );
 goto label$259;
 label$259:;
 return tmp$172$1;
}

struct $9_FLOAT256* _ZN9_FLOAT2562YYEv( struct $9_FLOAT256* tmp$174$1, struct $9_FLOAT256* THIS$1 )
{
 label$260:;
 _ZN9_FLOAT256C1Edd( tmp$174$1, *(double*)THIS$1, *(double*)THIS$1 );
 goto label$261;
 label$261:;
 return tmp$174$1;
}

struct $9_FLOAT256* _ZN9_FLOAT2562YZEv( struct $9_FLOAT256* tmp$176$1, struct $9_FLOAT256* THIS$1 )
{
 label$262:;
 _ZN9_FLOAT256C1Edd( tmp$176$1, *(double*)THIS$1, *(double*)THIS$1 );
 goto label$263;
 label$263:;
 return tmp$176$1;
}

struct $9_FLOAT256* _ZN9_FLOAT2562ZXEv( struct $9_FLOAT256* tmp$178$1, struct $9_FLOAT256* THIS$1 )
{
 label$264:;
 _ZN9_FLOAT256C1Edd( tmp$178$1, *(double*)THIS$1, *(double*)THIS$1 );
 goto label$265;
 label$265:;
 return tmp$178$1;
}

struct $9_FLOAT256* _ZN9_FLOAT2562ZYEv( struct $9_FLOAT256* tmp$180$1, struct $9_FLOAT256* THIS$1 )
{
 label$266:;
 _ZN9_FLOAT256C1Edd( tmp$180$1, *(double*)THIS$1, *(double*)THIS$1 );
 goto label$267;
 label$267:;
 return tmp$180$1;
}

struct $9_FLOAT256* _ZN9_FLOAT2562ZZEv( struct $9_FLOAT256* tmp$182$1, struct $9_FLOAT256* THIS$1 )
{
 label$268:;
 _ZN9_FLOAT256C1Edd( tmp$182$1, *(double*)THIS$1, *(double*)THIS$1 );
 goto label$269;
 label$269:;
 return tmp$182$1;
}

struct $9_FLOAT256* _ZN9_FLOAT2563XXXEv( struct $9_FLOAT256* tmp$184$1, struct $9_FLOAT256* THIS$1 )
{
 label$270:;
 _ZN9_FLOAT256C1Edddd( tmp$184$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$271;
 label$271:;
 return tmp$184$1;
}

struct $9_FLOAT256* _ZN9_FLOAT2563XXYEv( struct $9_FLOAT256* tmp$186$1, struct $9_FLOAT256* THIS$1 )
{
 label$272:;
 _ZN9_FLOAT256C1Edddd( tmp$186$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$273;
 label$273:;
 return tmp$186$1;
}

struct $9_FLOAT256* _ZN9_FLOAT2563XXZEv( struct $9_FLOAT256* tmp$188$1, struct $9_FLOAT256* THIS$1 )
{
 label$274:;
 _ZN9_FLOAT256C1Edddd( tmp$188$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$275;
 label$275:;
 return tmp$188$1;
}

struct $9_FLOAT256* _ZN9_FLOAT2563XYXEv( struct $9_FLOAT256* tmp$190$1, struct $9_FLOAT256* THIS$1 )
{
 label$276:;
 _ZN9_FLOAT256C1Edddd( tmp$190$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$277;
 label$277:;
 return tmp$190$1;
}

struct $9_FLOAT256* _ZN9_FLOAT2563XYYEv( struct $9_FLOAT256* tmp$192$1, struct $9_FLOAT256* THIS$1 )
{
 label$278:;
 _ZN9_FLOAT256C1Edddd( tmp$192$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$279;
 label$279:;
 return tmp$192$1;
}

struct $9_FLOAT256* _ZN9_FLOAT2563XYZEv( struct $9_FLOAT256* tmp$194$1, struct $9_FLOAT256* THIS$1 )
{
 label$280:;
 _ZN9_FLOAT256C1Edddd( tmp$194$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$281;
 label$281:;
 return tmp$194$1;
}

struct $9_FLOAT256* _ZN9_FLOAT2563XZXEv( struct $9_FLOAT256* tmp$196$1, struct $9_FLOAT256* THIS$1 )
{
 label$282:;
 _ZN9_FLOAT256C1Edddd( tmp$196$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$283;
 label$283:;
 return tmp$196$1;
}

struct $9_FLOAT256* _ZN9_FLOAT2563XZYEv( struct $9_FLOAT256* tmp$198$1, struct $9_FLOAT256* THIS$1 )
{
 label$284:;
 _ZN9_FLOAT256C1Edddd( tmp$198$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$285;
 label$285:;
 return tmp$198$1;
}

struct $9_FLOAT256* _ZN9_FLOAT2563XZZEv( struct $9_FLOAT256* tmp$200$1, struct $9_FLOAT256* THIS$1 )
{
 label$286:;
 _ZN9_FLOAT256C1Edddd( tmp$200$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$287;
 label$287:;
 return tmp$200$1;
}

struct $9_FLOAT256* _ZN9_FLOAT2563YXXEv( struct $9_FLOAT256* tmp$202$1, struct $9_FLOAT256* THIS$1 )
{
 label$288:;
 _ZN9_FLOAT256C1Edddd( tmp$202$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$289;
 label$289:;
 return tmp$202$1;
}

struct $9_FLOAT256* _ZN9_FLOAT2563YXYEv( struct $9_FLOAT256* tmp$204$1, struct $9_FLOAT256* THIS$1 )
{
 label$290:;
 _ZN9_FLOAT256C1Edddd( tmp$204$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$291;
 label$291:;
 return tmp$204$1;
}

struct $9_FLOAT256* _ZN9_FLOAT2563YXZEv( struct $9_FLOAT256* tmp$206$1, struct $9_FLOAT256* THIS$1 )
{
 label$292:;
 _ZN9_FLOAT256C1Edddd( tmp$206$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$293;
 label$293:;
 return tmp$206$1;
}

struct $9_FLOAT256* _ZN9_FLOAT2563YYXEv( struct $9_FLOAT256* tmp$208$1, struct $9_FLOAT256* THIS$1 )
{
 label$294:;
 _ZN9_FLOAT256C1Edddd( tmp$208$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$295;
 label$295:;
 return tmp$208$1;
}

struct $9_FLOAT256* _ZN9_FLOAT2563YYYEv( struct $9_FLOAT256* tmp$210$1, struct $9_FLOAT256* THIS$1 )
{
 label$296:;
 _ZN9_FLOAT256C1Edddd( tmp$210$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$297;
 label$297:;
 return tmp$210$1;
}

struct $9_FLOAT256* _ZN9_FLOAT2563YYZEv( struct $9_FLOAT256* tmp$212$1, struct $9_FLOAT256* THIS$1 )
{
 label$298:;
 _ZN9_FLOAT256C1Edddd( tmp$212$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$299;
 label$299:;
 return tmp$212$1;
}

struct $9_FLOAT256* _ZN9_FLOAT2563YZXEv( struct $9_FLOAT256* tmp$214$1, struct $9_FLOAT256* THIS$1 )
{
 label$300:;
 _ZN9_FLOAT256C1Edddd( tmp$214$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$301;
 label$301:;
 return tmp$214$1;
}

struct $9_FLOAT256* _ZN9_FLOAT2563YZYEv( struct $9_FLOAT256* tmp$216$1, struct $9_FLOAT256* THIS$1 )
{
 label$302:;
 _ZN9_FLOAT256C1Edddd( tmp$216$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$303;
 label$303:;
 return tmp$216$1;
}

struct $9_FLOAT256* _ZN9_FLOAT2563YZZEv( struct $9_FLOAT256* tmp$218$1, struct $9_FLOAT256* THIS$1 )
{
 label$304:;
 _ZN9_FLOAT256C1Edddd( tmp$218$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$305;
 label$305:;
 return tmp$218$1;
}

struct $9_FLOAT256* _ZN9_FLOAT2563ZXXEv( struct $9_FLOAT256* tmp$220$1, struct $9_FLOAT256* THIS$1 )
{
 label$306:;
 _ZN9_FLOAT256C1Edddd( tmp$220$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$307;
 label$307:;
 return tmp$220$1;
}

struct $9_FLOAT256* _ZN9_FLOAT2563ZXYEv( struct $9_FLOAT256* tmp$222$1, struct $9_FLOAT256* THIS$1 )
{
 label$308:;
 _ZN9_FLOAT256C1Edddd( tmp$222$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$309;
 label$309:;
 return tmp$222$1;
}

struct $9_FLOAT256* _ZN9_FLOAT2563ZXZEv( struct $9_FLOAT256* tmp$224$1, struct $9_FLOAT256* THIS$1 )
{
 label$310:;
 _ZN9_FLOAT256C1Edddd( tmp$224$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$311;
 label$311:;
 return tmp$224$1;
}

struct $9_FLOAT256* _ZN9_FLOAT2563ZYXEv( struct $9_FLOAT256* tmp$226$1, struct $9_FLOAT256* THIS$1 )
{
 label$312:;
 _ZN9_FLOAT256C1Edddd( tmp$226$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$313;
 label$313:;
 return tmp$226$1;
}

struct $9_FLOAT256* _ZN9_FLOAT2563ZYYEv( struct $9_FLOAT256* tmp$228$1, struct $9_FLOAT256* THIS$1 )
{
 label$314:;
 _ZN9_FLOAT256C1Edddd( tmp$228$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$315;
 label$315:;
 return tmp$228$1;
}

struct $9_FLOAT256* _ZN9_FLOAT2563ZYZEv( struct $9_FLOAT256* tmp$230$1, struct $9_FLOAT256* THIS$1 )
{
 label$316:;
 _ZN9_FLOAT256C1Edddd( tmp$230$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$317;
 label$317:;
 return tmp$230$1;
}

struct $9_FLOAT256* _ZN9_FLOAT2563ZZXEv( struct $9_FLOAT256* tmp$232$1, struct $9_FLOAT256* THIS$1 )
{
 label$318:;
 _ZN9_FLOAT256C1Edddd( tmp$232$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$319;
 label$319:;
 return tmp$232$1;
}

struct $9_FLOAT256* _ZN9_FLOAT2563ZZYEv( struct $9_FLOAT256* tmp$234$1, struct $9_FLOAT256* THIS$1 )
{
 label$320:;
 _ZN9_FLOAT256C1Edddd( tmp$234$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$321;
 label$321:;
 return tmp$234$1;
}

struct $9_FLOAT256* _ZN9_FLOAT2563ZZZEv( struct $9_FLOAT256* tmp$236$1, struct $9_FLOAT256* THIS$1 )
{
 label$322:;
 _ZN9_FLOAT256C1Edddd( tmp$236$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$323;
 label$323:;
 return tmp$236$1;
}

struct $9_FLOAT256* _ZN9_FLOAT2563RGBEv( struct $9_FLOAT256* tmp$238$1, struct $9_FLOAT256* THIS$1 )
{
 label$324:;
 _ZN9_FLOAT256C1Edddd( tmp$238$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$325;
 label$325:;
 return tmp$238$1;
}

struct $9_FLOAT256* _ZN9_FLOAT2564RGBAEv( struct $9_FLOAT256* tmp$240$1, struct $9_FLOAT256* THIS$1 )
{
 label$326:;
 _ZN9_FLOAT256C1Edddd( tmp$240$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1 );
 goto label$327;
 label$327:;
 return tmp$240$1;
}

struct $9_FLOAT256* _ZngR9_FLOAT256( struct $9_FLOAT256* tmp$242$1, struct $9_FLOAT256* L$1 )
{
 label$328:;
 _ZN9_FLOAT256C1Edddd( tmp$242$1, -(*(double*)L$1), -(*(double*)L$1), -(*(double*)L$1), -(*(double*)L$1) );
 goto label$329;
 label$329:;
 return tmp$242$1;
}

struct $9_FLOAT256* _ZplR9_FLOAT256S0_( struct $9_FLOAT256* tmp$244$1, struct $9_FLOAT256* L$1, struct $9_FLOAT256* R$1 )
{
 label$330:;
 _ZN9_FLOAT256C1Edddd( tmp$244$1, *(double*)L$1 + *(double*)R$1, *(double*)L$1 + *(double*)R$1, *(double*)L$1 + *(double*)R$1, *(double*)L$1 + *(double*)R$1 );
 goto label$331;
 label$331:;
 return tmp$244$1;
}

struct $9_FLOAT256* _ZmiR9_FLOAT256S0_( struct $9_FLOAT256* tmp$246$1, struct $9_FLOAT256* L$1, struct $9_FLOAT256* R$1 )
{
 label$332:;
 _ZN9_FLOAT256C1Edddd( tmp$246$1, *(double*)L$1 - *(double*)R$1, *(double*)L$1 - *(double*)R$1, *(double*)L$1 - *(double*)R$1, *(double*)L$1 - *(double*)R$1 );
 goto label$333;
 label$333:;
 return tmp$246$1;
}

struct $9_FLOAT256* _ZmlR9_FLOAT256S0_( struct $9_FLOAT256* tmp$248$1, struct $9_FLOAT256* L$1, struct $9_FLOAT256* R$1 )
{
 label$334:;
 _ZN9_FLOAT256C1Edddd( tmp$248$1, *(double*)L$1 * *(double*)R$1, *(double*)L$1 * *(double*)R$1, *(double*)L$1 * *(double*)R$1, *(double*)L$1 * *(double*)R$1 );
 goto label$335;
 label$335:;
 return tmp$248$1;
}

struct $9_FLOAT256* _ZdvR9_FLOAT256S0_( struct $9_FLOAT256* tmp$250$1, struct $9_FLOAT256* L$1, struct $9_FLOAT256* R$1 )
{
 label$336:;
 _ZN9_FLOAT256C1Edddd( tmp$250$1, *(double*)L$1 / *(double*)R$1, *(double*)L$1 / *(double*)R$1, *(double*)L$1 / *(double*)R$1, *(double*)L$1 / *(double*)R$1 );
 goto label$337;
 label$337:;
 return tmp$250$1;
}

int64 _ZeqR9_FLOAT256S0_( struct $9_FLOAT256* L$1, struct $9_FLOAT256* R$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$338:;
 if( ((((int64)__builtin_nearbyint( *(double*)L$1 )) ^ ((int64)__builtin_nearbyint( *(double*)R$1 ))) | (((int64)__builtin_nearbyint( *(double*)L$1 )) ^ ((int64)__builtin_nearbyint( *(double*)R$1 )))) == 0ll ) goto label$341;
 {
  fb$result$1 = 0ll;
  goto label$339;
  label$341:;
 }
 fb$result$1 = -1ll;
 goto label$339;
 label$339:;
 return fb$result$1;
}

int64 _ZneR9_FLOAT256S0_( struct $9_FLOAT256* L$1, struct $9_FLOAT256* R$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$342:;
 if( ((((int64)__builtin_nearbyint( *(double*)L$1 )) ^ ((int64)__builtin_nearbyint( *(double*)R$1 ))) | (((int64)__builtin_nearbyint( *(double*)L$1 )) ^ ((int64)__builtin_nearbyint( *(double*)R$1 )))) == 0ll ) goto label$345;
 {
  fb$result$1 = -1ll;
  goto label$343;
  label$345:;
 }
 fb$result$1 = 0ll;
 goto label$343;
 label$343:;
 return fb$result$1;
}

struct $9_FLOAT256* _ZplR9_FLOAT256d( struct $9_FLOAT256* tmp$252$1, struct $9_FLOAT256* L$1, double R$1 )
{
 label$346:;
 _ZN9_FLOAT256C1Edddd( tmp$252$1, *(double*)L$1 + R$1, *(double*)L$1 + R$1, *(double*)L$1 + R$1, *(double*)L$1 + R$1 );
 goto label$347;
 label$347:;
 return tmp$252$1;
}

struct $9_FLOAT256* _ZpldR9_FLOAT256( struct $9_FLOAT256* tmp$254$1, double L$1, struct $9_FLOAT256* R$1 )
{
 label$348:;
 _ZN9_FLOAT256C1Edddd( tmp$254$1, *(double*)R$1 + L$1, *(double*)R$1 + L$1, *(double*)R$1 + L$1, *(double*)R$1 + L$1 );
 goto label$349;
 label$349:;
 return tmp$254$1;
}

struct $9_FLOAT256* _ZmiR9_FLOAT256d( struct $9_FLOAT256* tmp$256$1, struct $9_FLOAT256* L$1, double R$1 )
{
 label$350:;
 _ZN9_FLOAT256C1Edddd( tmp$256$1, *(double*)L$1 - R$1, *(double*)L$1 - R$1, *(double*)L$1 - R$1, *(double*)L$1 - R$1 );
 goto label$351;
 label$351:;
 return tmp$256$1;
}

struct $9_FLOAT256* _ZmidR9_FLOAT256( struct $9_FLOAT256* tmp$258$1, double L$1, struct $9_FLOAT256* R$1 )
{
 label$352:;
 _ZN9_FLOAT256C1Edddd( tmp$258$1, *(double*)R$1 - L$1, *(double*)R$1 - L$1, *(double*)R$1 - L$1, *(double*)R$1 - L$1 );
 goto label$353;
 label$353:;
 return tmp$258$1;
}

struct $9_FLOAT256* _ZmlR9_FLOAT256d( struct $9_FLOAT256* tmp$260$1, struct $9_FLOAT256* L$1, double R$1 )
{
 label$354:;
 _ZN9_FLOAT256C1Edddd( tmp$260$1, *(double*)L$1 * R$1, *(double*)L$1 * R$1, *(double*)L$1 * R$1, *(double*)L$1 * R$1 );
 goto label$355;
 label$355:;
 return tmp$260$1;
}

struct $9_FLOAT256* _ZmldR9_FLOAT256( struct $9_FLOAT256* tmp$262$1, double L$1, struct $9_FLOAT256* R$1 )
{
 label$356:;
 _ZN9_FLOAT256C1Edddd( tmp$262$1, L$1 * *(double*)R$1, L$1 * *(double*)R$1, L$1 * *(double*)R$1, L$1 * *(double*)R$1 );
 goto label$357;
 label$357:;
 return tmp$262$1;
}

void _ZN9_FLOAT512C1Ev( struct $9_FLOAT512* THIS$1 )
{
 label$358:;
 __builtin_memset( (int64*)THIS$1, 0, 8ll );
 *(double*)THIS$1 = 0x1.p+0;
 label$359:;
}

void _ZN9_FLOAT512C1Edd( struct $9_FLOAT512* THIS$1, double PXYZ$1, double PW$1 )
{
 label$360:;
 __builtin_memset( (int64*)THIS$1, 0, 8ll );
 *(double*)THIS$1 = PXYZ$1;
 *(double*)THIS$1 = PXYZ$1;
 *(double*)THIS$1 = PXYZ$1;
 *(double*)THIS$1 = PW$1;
 label$361:;
}

void _ZN9_FLOAT512C1Edddd( struct $9_FLOAT512* THIS$1, double PX$1, double PY$1, double PZ$1, double PW$1 )
{
 label$362:;
 __builtin_memset( (int64*)THIS$1, 0, 8ll );
 *(double*)THIS$1 = PX$1;
 *(double*)THIS$1 = PY$1;
 *(double*)THIS$1 = PZ$1;
 *(double*)THIS$1 = PW$1;
 label$363:;
}

void _ZN9_FLOAT512C1ERS_dd( struct $9_FLOAT512* THIS$1, struct $9_FLOAT512* V1$1, double PZ$1, double PW$1 )
{
 label$364:;
 __builtin_memset( (int64*)THIS$1, 0, 8ll );
 *(double*)THIS$1 = *(double*)V1$1;
 *(double*)THIS$1 = *(double*)V1$1;
 *(double*)THIS$1 = PZ$1;
 *(double*)THIS$1 = PW$1;
 label$365:;
}

void _ZN9_FLOAT512C1ERS_S0_( struct $9_FLOAT512* THIS$1, struct $9_FLOAT512* V1$1, struct $9_FLOAT512* V2$1 )
{
 label$366:;
 __builtin_memset( (int64*)THIS$1, 0, 8ll );
 *(double*)THIS$1 = *(double*)V1$1;
 *(double*)THIS$1 = *(double*)V1$1;
 *(double*)THIS$1 = *(double*)V2$1;
 *(double*)THIS$1 = *(double*)V2$1;
 label$367:;
}

void _ZN9_FLOAT512C1ERS_d( struct $9_FLOAT512* THIS$1, struct $9_FLOAT512* V3$1, double PW$1 )
{
 label$368:;
 __builtin_memset( (int64*)THIS$1, 0, 8ll );
 *(double*)THIS$1 = *(double*)V3$1;
 *(double*)THIS$1 = *(double*)V3$1;
 *(double*)THIS$1 = *(double*)V3$1;
 *(double*)THIS$1 = PW$1;
 label$369:;
}

void _ZN9_FLOAT512C1EdRS_( struct $9_FLOAT512* THIS$1, double PX$1, struct $9_FLOAT512* V3$1 )
{
 label$370:;
 __builtin_memset( (int64*)THIS$1, 0, 8ll );
 *(double*)THIS$1 = PX$1;
 *(double*)THIS$1 = *(double*)V3$1;
 *(double*)THIS$1 = *(double*)V3$1;
 *(double*)THIS$1 = *(double*)V3$1;
 label$371:;
}

void _ZN9_FLOAT512C1ERS_( struct $9_FLOAT512* THIS$1, struct $9_FLOAT512* V4$1 )
{
 label$372:;
 __builtin_memset( (int64*)THIS$1, 0, 8ll );
 *(double*)THIS$1 = *(double*)V4$1;
 *(double*)THIS$1 = *(double*)V4$1;
 *(double*)THIS$1 = *(double*)V4$1;
 *(double*)THIS$1 = *(double*)V4$1;
 label$373:;
}

void _ZN9_FLOAT512aSEd( struct $9_FLOAT512* THIS$1, double PXYZW$1 )
{
 label$374:;
 *(double*)THIS$1 = PXYZW$1;
 *(double*)THIS$1 = PXYZW$1;
 *(double*)THIS$1 = PXYZW$1;
 *(double*)THIS$1 = PXYZW$1;
 label$375:;
}

void _ZN9_FLOAT512aSEf( struct $9_FLOAT512* THIS$1, float P$1 )
{
 label$376:;
 *(double*)THIS$1 = (double)P$1;
 *(double*)THIS$1 = (double)P$1;
 *(double*)THIS$1 = 0x1.p+0;
 *(double*)THIS$1 = 0x1.p+0;
 label$377:;
}

void _ZN9_FLOAT512aSEy( struct $9_FLOAT512* THIS$1, uint64 P$1 )
{
 label$378:;
 *(double*)THIS$1 = (double)P$1;
 *(double*)THIS$1 = (double)P$1;
 *(double*)THIS$1 = (double)P$1;
 *(double*)THIS$1 = 0x1.p+0;
 label$379:;
}

void _ZN9_FLOAT512aSERS_( struct $9_FLOAT512* THIS$1, struct $9_FLOAT512* P$1 )
{
 label$380:;
 *(double*)THIS$1 = *(double*)P$1;
 *(double*)THIS$1 = *(double*)P$1;
 *(double*)THIS$1 = *(double*)P$1;
 *(double*)THIS$1 = *(double*)P$1;
 label$381:;
}

FBSTRING* _ZN9_FLOAT512cv8FBSTRINGEv( struct $9_FLOAT512* THIS$1 )
{
 FBSTRING TMP$281$1;
 FBSTRING TMP$282$1;
 FBSTRING TMP$283$1;
 FBSTRING TMP$284$1;
 FBSTRING TMP$285$1;
 FBSTRING TMP$286$1;
 FBSTRING TMP$287$1;
 FBSTRING TMP$288$1;
 FBSTRING fb$result$1;
 __builtin_memset( &fb$result$1, 0, 24ll );
 label$382:;
 FBSTRING* vr$2 = fb_DoubleToStr( *(double*)THIS$1 );
 FBSTRING* vr$4 = fb_DoubleToStr( *(double*)THIS$1 );
 FBSTRING* vr$6 = fb_DoubleToStr( *(double*)THIS$1 );
 FBSTRING* vr$8 = fb_DoubleToStr( *(double*)THIS$1 );
 __builtin_memset( &TMP$281$1, 0, 24ll );
 FBSTRING* vr$11 = fb_StrConcat( &TMP$281$1, (void*)"(", 2ll, (void*)vr$8, -1ll );
 __builtin_memset( &TMP$282$1, 0, 24ll );
 FBSTRING* vr$14 = fb_StrConcat( &TMP$282$1, (void*)vr$11, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$283$1, 0, 24ll );
 FBSTRING* vr$17 = fb_StrConcat( &TMP$283$1, (void*)vr$14, -1ll, (void*)vr$6, -1ll );
 __builtin_memset( &TMP$284$1, 0, 24ll );
 FBSTRING* vr$20 = fb_StrConcat( &TMP$284$1, (void*)vr$17, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$285$1, 0, 24ll );
 FBSTRING* vr$23 = fb_StrConcat( &TMP$285$1, (void*)vr$20, -1ll, (void*)vr$4, -1ll );
 __builtin_memset( &TMP$286$1, 0, 24ll );
 FBSTRING* vr$26 = fb_StrConcat( &TMP$286$1, (void*)vr$23, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$287$1, 0, 24ll );
 FBSTRING* vr$29 = fb_StrConcat( &TMP$287$1, (void*)vr$26, -1ll, (void*)vr$2, -1ll );
 __builtin_memset( &TMP$288$1, 0, 24ll );
 FBSTRING* vr$32 = fb_StrConcat( &TMP$288$1, (void*)vr$29, -1ll, (void*)")", 2ll );
 fb_StrInit( (void*)&fb$result$1, -1ll, (void*)vr$32, -1ll, 0 );
 goto label$383;
 label$383:;
 FBSTRING* vr$35 = fb_StrAllocTempResult( (FBSTRING*)&fb$result$1 );
 return vr$35;
}

uint64 _ZN9_FLOAT512cvyEv( struct $9_FLOAT512* THIS$1 )
{
 uint64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$384:;
 uint64 C$1;
 __builtin_memset( &C$1, 0, 8ll );
 C$1 = C$1 << (8ll & 63ll);
 if( *(double*)THIS$1 >= 0x1.010101010101p-8 ) goto label$387;
 {
 }
 goto label$386;
 label$387:;
 if( *(double*)THIS$1 <= 0x1.p+0 ) goto label$388;
 {
  C$1 = C$1 | 255ull;
 }
 goto label$386;
 label$388:;
 {
  C$1 = C$1 | ((uint64)__builtin_nearbyint( *(double*)THIS$1 * 0x1.FEp+7 ));
 }
 label$386:;
 C$1 = C$1 << (8ll & 63ll);
 if( *(double*)THIS$1 >= 0x1.010101010101p-8 ) goto label$390;
 {
 }
 goto label$389;
 label$390:;
 if( *(double*)THIS$1 <= 0x1.p+0 ) goto label$391;
 {
  C$1 = C$1 | 255ull;
 }
 goto label$389;
 label$391:;
 {
  C$1 = C$1 | ((uint64)__builtin_nearbyint( *(double*)THIS$1 * 0x1.FEp+7 ));
 }
 label$389:;
 C$1 = C$1 << (8ll & 63ll);
 if( *(double*)THIS$1 >= 0x1.010101010101p-8 ) goto label$393;
 {
 }
 goto label$392;
 label$393:;
 if( *(double*)THIS$1 <= 0x1.p+0 ) goto label$394;
 {
  C$1 = C$1 | 255ull;
 }
 goto label$392;
 label$394:;
 {
  C$1 = C$1 | ((uint64)__builtin_nearbyint( *(double*)THIS$1 * 0x1.FEp+7 ));
 }
 label$392:;
 C$1 = C$1 << (8ll & 63ll);
 if( *(double*)THIS$1 >= 0x1.010101010101p-8 ) goto label$396;
 {
 }
 goto label$395;
 label$396:;
 if( *(double*)THIS$1 <= 0x1.p+0 ) goto label$397;
 {
  C$1 = C$1 | 255ull;
 }
 goto label$395;
 label$397:;
 {
  C$1 = C$1 | ((uint64)__builtin_nearbyint( *(double*)THIS$1 * 0x1.FEp+7 ));
 }
 label$395:;
 fb$result$1 = C$1;
 goto label$385;
 label$385:;
 return fb$result$1;
}

void _ZN9_FLOAT512pLEf( struct $9_FLOAT512* THIS$1, float V$1 )
{
 label$398:;
 *(double*)THIS$1 = *(double*)THIS$1 + (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 + (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 + (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 + (double)V$1;
 label$399:;
}

void _ZN9_FLOAT512mIEf( struct $9_FLOAT512* THIS$1, float V$1 )
{
 label$400:;
 *(double*)THIS$1 = *(double*)THIS$1 - (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 - (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 - (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 - (double)V$1;
 label$401:;
}

void _ZN9_FLOAT512mLEf( struct $9_FLOAT512* THIS$1, float V$1 )
{
 label$402:;
 *(double*)THIS$1 = *(double*)THIS$1 * (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 * (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 * (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 * (double)V$1;
 label$403:;
}

void _ZN9_FLOAT512dVEf( struct $9_FLOAT512* THIS$1, float V$1 )
{
 label$404:;
 *(double*)THIS$1 = *(double*)THIS$1 / (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 / (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 / (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 / (double)V$1;
 label$405:;
}

void _ZN9_FLOAT512pLEd( struct $9_FLOAT512* THIS$1, double V$1 )
{
 label$406:;
 *(double*)THIS$1 = *(double*)THIS$1 + V$1;
 *(double*)THIS$1 = *(double*)THIS$1 + V$1;
 *(double*)THIS$1 = *(double*)THIS$1 + V$1;
 *(double*)THIS$1 = *(double*)THIS$1 + V$1;
 label$407:;
}

void _ZN9_FLOAT512mIEd( struct $9_FLOAT512* THIS$1, double V$1 )
{
 label$408:;
 *(double*)THIS$1 = *(double*)THIS$1 - V$1;
 *(double*)THIS$1 = *(double*)THIS$1 - V$1;
 *(double*)THIS$1 = *(double*)THIS$1 - V$1;
 *(double*)THIS$1 = *(double*)THIS$1 - V$1;
 label$409:;
}

void _ZN9_FLOAT512mLEd( struct $9_FLOAT512* THIS$1, double V$1 )
{
 label$410:;
 *(double*)THIS$1 = *(double*)THIS$1 * V$1;
 *(double*)THIS$1 = *(double*)THIS$1 * V$1;
 *(double*)THIS$1 = *(double*)THIS$1 * V$1;
 *(double*)THIS$1 = *(double*)THIS$1 * V$1;
 label$411:;
}

void _ZN9_FLOAT512dVEd( struct $9_FLOAT512* THIS$1, double V$1 )
{
 label$412:;
 *(double*)THIS$1 = *(double*)THIS$1 / V$1;
 *(double*)THIS$1 = *(double*)THIS$1 / V$1;
 *(double*)THIS$1 = *(double*)THIS$1 / V$1;
 *(double*)THIS$1 = *(double*)THIS$1 / V$1;
 label$413:;
}

void _ZN9_FLOAT512pLEy( struct $9_FLOAT512* THIS$1, uint64 V$1 )
{
 label$414:;
 *(double*)THIS$1 = *(double*)THIS$1 + (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 + (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 + (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 + (double)V$1;
 label$415:;
}

void _ZN9_FLOAT512mIEy( struct $9_FLOAT512* THIS$1, uint64 V$1 )
{
 label$416:;
 *(double*)THIS$1 = *(double*)THIS$1 - (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 - (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 - (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 - (double)V$1;
 label$417:;
}

void _ZN9_FLOAT512mLEy( struct $9_FLOAT512* THIS$1, uint64 V$1 )
{
 label$418:;
 *(double*)THIS$1 = *(double*)THIS$1 * (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 * (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 * (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 * (double)V$1;
 label$419:;
}

void _ZN9_FLOAT512dVEy( struct $9_FLOAT512* THIS$1, uint64 V$1 )
{
 label$420:;
 *(double*)THIS$1 = *(double*)THIS$1 / (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 / (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 / (double)V$1;
 *(double*)THIS$1 = *(double*)THIS$1 / (double)V$1;
 label$421:;
}

void _ZN9_FLOAT512pLERS_( struct $9_FLOAT512* THIS$1, struct $9_FLOAT512* V4$1 )
{
 label$422:;
 *(double*)THIS$1 = *(double*)THIS$1 + *(double*)V4$1;
 *(double*)THIS$1 = *(double*)THIS$1 + *(double*)V4$1;
 *(double*)THIS$1 = *(double*)THIS$1 + *(double*)V4$1;
 *(double*)THIS$1 = *(double*)THIS$1 + *(double*)V4$1;
 label$423:;
}

void _ZN9_FLOAT512mIERS_( struct $9_FLOAT512* THIS$1, struct $9_FLOAT512* V4$1 )
{
 label$424:;
 *(double*)THIS$1 = *(double*)THIS$1 - *(double*)V4$1;
 *(double*)THIS$1 = *(double*)THIS$1 - *(double*)V4$1;
 *(double*)THIS$1 = *(double*)THIS$1 - *(double*)V4$1;
 *(double*)THIS$1 = *(double*)THIS$1 - *(double*)V4$1;
 label$425:;
}

void _ZN9_FLOAT512mLERS_( struct $9_FLOAT512* THIS$1, struct $9_FLOAT512* V4$1 )
{
 label$426:;
 *(double*)THIS$1 = *(double*)THIS$1 * *(double*)V4$1;
 *(double*)THIS$1 = *(double*)THIS$1 * *(double*)V4$1;
 *(double*)THIS$1 = *(double*)THIS$1 * *(double*)V4$1;
 *(double*)THIS$1 = *(double*)THIS$1 * *(double*)V4$1;
 label$427:;
}

void _ZN9_FLOAT512dVERS_( struct $9_FLOAT512* THIS$1, struct $9_FLOAT512* V4$1 )
{
 label$428:;
 *(double*)THIS$1 = *(double*)THIS$1 / *(double*)V4$1;
 *(double*)THIS$1 = *(double*)THIS$1 / *(double*)V4$1;
 *(double*)THIS$1 = *(double*)THIS$1 / *(double*)V4$1;
 *(double*)THIS$1 = *(double*)THIS$1 / *(double*)V4$1;
 label$429:;
}

struct $9_FLOAT512* _ZN9_FLOAT5122XXEv( struct $9_FLOAT512* tmp$289$1, struct $9_FLOAT512* THIS$1 )
{
 label$430:;
 _ZN9_FLOAT512C1Edd( tmp$289$1, *(double*)THIS$1, *(double*)THIS$1 );
 goto label$431;
 label$431:;
 return tmp$289$1;
}

struct $9_FLOAT512* _ZN9_FLOAT5122XYEv( struct $9_FLOAT512* tmp$291$1, struct $9_FLOAT512* THIS$1 )
{
 label$432:;
 _ZN9_FLOAT512C1Edd( tmp$291$1, *(double*)THIS$1, *(double*)THIS$1 );
 goto label$433;
 label$433:;
 return tmp$291$1;
}

struct $9_FLOAT512* _ZN9_FLOAT5122XZEv( struct $9_FLOAT512* tmp$293$1, struct $9_FLOAT512* THIS$1 )
{
 label$434:;
 _ZN9_FLOAT512C1Edd( tmp$293$1, *(double*)THIS$1, *(double*)THIS$1 );
 goto label$435;
 label$435:;
 return tmp$293$1;
}

struct $9_FLOAT512* _ZN9_FLOAT5122YXEv( struct $9_FLOAT512* tmp$295$1, struct $9_FLOAT512* THIS$1 )
{
 label$436:;
 _ZN9_FLOAT512C1Edd( tmp$295$1, *(double*)THIS$1, *(double*)THIS$1 );
 goto label$437;
 label$437:;
 return tmp$295$1;
}

struct $9_FLOAT512* _ZN9_FLOAT5122YYEv( struct $9_FLOAT512* tmp$297$1, struct $9_FLOAT512* THIS$1 )
{
 label$438:;
 _ZN9_FLOAT512C1Edd( tmp$297$1, *(double*)THIS$1, *(double*)THIS$1 );
 goto label$439;
 label$439:;
 return tmp$297$1;
}

struct $9_FLOAT512* _ZN9_FLOAT5122YZEv( struct $9_FLOAT512* tmp$299$1, struct $9_FLOAT512* THIS$1 )
{
 label$440:;
 _ZN9_FLOAT512C1Edd( tmp$299$1, *(double*)THIS$1, *(double*)THIS$1 );
 goto label$441;
 label$441:;
 return tmp$299$1;
}

struct $9_FLOAT512* _ZN9_FLOAT5122ZXEv( struct $9_FLOAT512* tmp$301$1, struct $9_FLOAT512* THIS$1 )
{
 label$442:;
 _ZN9_FLOAT512C1Edd( tmp$301$1, *(double*)THIS$1, *(double*)THIS$1 );
 goto label$443;
 label$443:;
 return tmp$301$1;
}

struct $9_FLOAT512* _ZN9_FLOAT5122ZYEv( struct $9_FLOAT512* tmp$303$1, struct $9_FLOAT512* THIS$1 )
{
 label$444:;
 _ZN9_FLOAT512C1Edd( tmp$303$1, *(double*)THIS$1, *(double*)THIS$1 );
 goto label$445;
 label$445:;
 return tmp$303$1;
}

struct $9_FLOAT512* _ZN9_FLOAT5122ZZEv( struct $9_FLOAT512* tmp$305$1, struct $9_FLOAT512* THIS$1 )
{
 label$446:;
 _ZN9_FLOAT512C1Edd( tmp$305$1, *(double*)THIS$1, *(double*)THIS$1 );
 goto label$447;
 label$447:;
 return tmp$305$1;
}

struct $9_FLOAT512* _ZN9_FLOAT5123XXXEv( struct $9_FLOAT512* tmp$307$1, struct $9_FLOAT512* THIS$1 )
{
 label$448:;
 _ZN9_FLOAT512C1Edddd( tmp$307$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$449;
 label$449:;
 return tmp$307$1;
}

struct $9_FLOAT512* _ZN9_FLOAT5123XXYEv( struct $9_FLOAT512* tmp$309$1, struct $9_FLOAT512* THIS$1 )
{
 label$450:;
 _ZN9_FLOAT512C1Edddd( tmp$309$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$451;
 label$451:;
 return tmp$309$1;
}

struct $9_FLOAT512* _ZN9_FLOAT5123XXZEv( struct $9_FLOAT512* tmp$311$1, struct $9_FLOAT512* THIS$1 )
{
 label$452:;
 _ZN9_FLOAT512C1Edddd( tmp$311$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$453;
 label$453:;
 return tmp$311$1;
}

struct $9_FLOAT512* _ZN9_FLOAT5123XYXEv( struct $9_FLOAT512* tmp$313$1, struct $9_FLOAT512* THIS$1 )
{
 label$454:;
 _ZN9_FLOAT512C1Edddd( tmp$313$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$455;
 label$455:;
 return tmp$313$1;
}

struct $9_FLOAT512* _ZN9_FLOAT5123XYYEv( struct $9_FLOAT512* tmp$315$1, struct $9_FLOAT512* THIS$1 )
{
 label$456:;
 _ZN9_FLOAT512C1Edddd( tmp$315$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$457;
 label$457:;
 return tmp$315$1;
}

struct $9_FLOAT512* _ZN9_FLOAT5123XYZEv( struct $9_FLOAT512* tmp$317$1, struct $9_FLOAT512* THIS$1 )
{
 label$458:;
 _ZN9_FLOAT512C1Edddd( tmp$317$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$459;
 label$459:;
 return tmp$317$1;
}

struct $9_FLOAT512* _ZN9_FLOAT5123XZXEv( struct $9_FLOAT512* tmp$319$1, struct $9_FLOAT512* THIS$1 )
{
 label$460:;
 _ZN9_FLOAT512C1Edddd( tmp$319$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$461;
 label$461:;
 return tmp$319$1;
}

struct $9_FLOAT512* _ZN9_FLOAT5123XZYEv( struct $9_FLOAT512* tmp$321$1, struct $9_FLOAT512* THIS$1 )
{
 label$462:;
 _ZN9_FLOAT512C1Edddd( tmp$321$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$463;
 label$463:;
 return tmp$321$1;
}

struct $9_FLOAT512* _ZN9_FLOAT5123XZZEv( struct $9_FLOAT512* tmp$323$1, struct $9_FLOAT512* THIS$1 )
{
 label$464:;
 _ZN9_FLOAT512C1Edddd( tmp$323$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$465;
 label$465:;
 return tmp$323$1;
}

struct $9_FLOAT512* _ZN9_FLOAT5123YXXEv( struct $9_FLOAT512* tmp$325$1, struct $9_FLOAT512* THIS$1 )
{
 label$466:;
 _ZN9_FLOAT512C1Edddd( tmp$325$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$467;
 label$467:;
 return tmp$325$1;
}

struct $9_FLOAT512* _ZN9_FLOAT5123YXYEv( struct $9_FLOAT512* tmp$327$1, struct $9_FLOAT512* THIS$1 )
{
 label$468:;
 _ZN9_FLOAT512C1Edddd( tmp$327$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$469;
 label$469:;
 return tmp$327$1;
}

struct $9_FLOAT512* _ZN9_FLOAT5123YXZEv( struct $9_FLOAT512* tmp$329$1, struct $9_FLOAT512* THIS$1 )
{
 label$470:;
 _ZN9_FLOAT512C1Edddd( tmp$329$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$471;
 label$471:;
 return tmp$329$1;
}

struct $9_FLOAT512* _ZN9_FLOAT5123YYXEv( struct $9_FLOAT512* tmp$331$1, struct $9_FLOAT512* THIS$1 )
{
 label$472:;
 _ZN9_FLOAT512C1Edddd( tmp$331$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$473;
 label$473:;
 return tmp$331$1;
}

struct $9_FLOAT512* _ZN9_FLOAT5123YYYEv( struct $9_FLOAT512* tmp$333$1, struct $9_FLOAT512* THIS$1 )
{
 label$474:;
 _ZN9_FLOAT512C1Edddd( tmp$333$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$475;
 label$475:;
 return tmp$333$1;
}

struct $9_FLOAT512* _ZN9_FLOAT5123YYZEv( struct $9_FLOAT512* tmp$335$1, struct $9_FLOAT512* THIS$1 )
{
 label$476:;
 _ZN9_FLOAT512C1Edddd( tmp$335$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$477;
 label$477:;
 return tmp$335$1;
}

struct $9_FLOAT512* _ZN9_FLOAT5123YZXEv( struct $9_FLOAT512* tmp$337$1, struct $9_FLOAT512* THIS$1 )
{
 label$478:;
 _ZN9_FLOAT512C1Edddd( tmp$337$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$479;
 label$479:;
 return tmp$337$1;
}

struct $9_FLOAT512* _ZN9_FLOAT5123YZYEv( struct $9_FLOAT512* tmp$339$1, struct $9_FLOAT512* THIS$1 )
{
 label$480:;
 _ZN9_FLOAT512C1Edddd( tmp$339$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$481;
 label$481:;
 return tmp$339$1;
}

struct $9_FLOAT512* _ZN9_FLOAT5123YZZEv( struct $9_FLOAT512* tmp$341$1, struct $9_FLOAT512* THIS$1 )
{
 label$482:;
 _ZN9_FLOAT512C1Edddd( tmp$341$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$483;
 label$483:;
 return tmp$341$1;
}

struct $9_FLOAT512* _ZN9_FLOAT5123ZXXEv( struct $9_FLOAT512* tmp$343$1, struct $9_FLOAT512* THIS$1 )
{
 label$484:;
 _ZN9_FLOAT512C1Edddd( tmp$343$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$485;
 label$485:;
 return tmp$343$1;
}

struct $9_FLOAT512* _ZN9_FLOAT5123ZXYEv( struct $9_FLOAT512* tmp$345$1, struct $9_FLOAT512* THIS$1 )
{
 label$486:;
 _ZN9_FLOAT512C1Edddd( tmp$345$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$487;
 label$487:;
 return tmp$345$1;
}

struct $9_FLOAT512* _ZN9_FLOAT5123ZXZEv( struct $9_FLOAT512* tmp$347$1, struct $9_FLOAT512* THIS$1 )
{
 label$488:;
 _ZN9_FLOAT512C1Edddd( tmp$347$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$489;
 label$489:;
 return tmp$347$1;
}

struct $9_FLOAT512* _ZN9_FLOAT5123ZYXEv( struct $9_FLOAT512* tmp$349$1, struct $9_FLOAT512* THIS$1 )
{
 label$490:;
 _ZN9_FLOAT512C1Edddd( tmp$349$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$491;
 label$491:;
 return tmp$349$1;
}

struct $9_FLOAT512* _ZN9_FLOAT5123ZYYEv( struct $9_FLOAT512* tmp$351$1, struct $9_FLOAT512* THIS$1 )
{
 label$492:;
 _ZN9_FLOAT512C1Edddd( tmp$351$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$493;
 label$493:;
 return tmp$351$1;
}

struct $9_FLOAT512* _ZN9_FLOAT5123ZYZEv( struct $9_FLOAT512* tmp$353$1, struct $9_FLOAT512* THIS$1 )
{
 label$494:;
 _ZN9_FLOAT512C1Edddd( tmp$353$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$495;
 label$495:;
 return tmp$353$1;
}

struct $9_FLOAT512* _ZN9_FLOAT5123ZZXEv( struct $9_FLOAT512* tmp$355$1, struct $9_FLOAT512* THIS$1 )
{
 label$496:;
 _ZN9_FLOAT512C1Edddd( tmp$355$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$497;
 label$497:;
 return tmp$355$1;
}

struct $9_FLOAT512* _ZN9_FLOAT5123ZZYEv( struct $9_FLOAT512* tmp$357$1, struct $9_FLOAT512* THIS$1 )
{
 label$498:;
 _ZN9_FLOAT512C1Edddd( tmp$357$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$499;
 label$499:;
 return tmp$357$1;
}

struct $9_FLOAT512* _ZN9_FLOAT5123ZZZEv( struct $9_FLOAT512* tmp$359$1, struct $9_FLOAT512* THIS$1 )
{
 label$500:;
 _ZN9_FLOAT512C1Edddd( tmp$359$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$501;
 label$501:;
 return tmp$359$1;
}

struct $9_FLOAT512* _ZN9_FLOAT5123RGBEv( struct $9_FLOAT512* tmp$361$1, struct $9_FLOAT512* THIS$1 )
{
 label$502:;
 _ZN9_FLOAT512C1Edddd( tmp$361$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, 0x1.p+0 );
 goto label$503;
 label$503:;
 return tmp$361$1;
}

struct $9_FLOAT512* _ZN9_FLOAT5124RGBAEv( struct $9_FLOAT512* tmp$363$1, struct $9_FLOAT512* THIS$1 )
{
 label$504:;
 _ZN9_FLOAT512C1Edddd( tmp$363$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1 );
 goto label$505;
 label$505:;
 return tmp$363$1;
}

struct $9_FLOAT512* _ZngR9_FLOAT512( struct $9_FLOAT512* tmp$365$1, struct $9_FLOAT512* L$1 )
{
 label$506:;
 _ZN9_FLOAT512C1Edddd( tmp$365$1, -(*(double*)L$1), -(*(double*)L$1), -(*(double*)L$1), -(*(double*)L$1) );
 goto label$507;
 label$507:;
 return tmp$365$1;
}

struct $9_FLOAT512* _ZplR9_FLOAT512S0_( struct $9_FLOAT512* tmp$367$1, struct $9_FLOAT512* L$1, struct $9_FLOAT512* R$1 )
{
 label$508:;
 _ZN9_FLOAT512C1Edddd( tmp$367$1, *(double*)L$1 + *(double*)R$1, *(double*)L$1 + *(double*)R$1, *(double*)L$1 + *(double*)R$1, *(double*)L$1 + *(double*)R$1 );
 goto label$509;
 label$509:;
 return tmp$367$1;
}

struct $9_FLOAT512* _ZmiR9_FLOAT512S0_( struct $9_FLOAT512* tmp$369$1, struct $9_FLOAT512* L$1, struct $9_FLOAT512* R$1 )
{
 label$510:;
 _ZN9_FLOAT512C1Edddd( tmp$369$1, *(double*)L$1 - *(double*)R$1, *(double*)L$1 - *(double*)R$1, *(double*)L$1 - *(double*)R$1, *(double*)L$1 - *(double*)R$1 );
 goto label$511;
 label$511:;
 return tmp$369$1;
}

struct $9_FLOAT512* _ZmlR9_FLOAT512S0_( struct $9_FLOAT512* tmp$371$1, struct $9_FLOAT512* L$1, struct $9_FLOAT512* R$1 )
{
 label$512:;
 _ZN9_FLOAT512C1Edddd( tmp$371$1, *(double*)L$1 * *(double*)R$1, *(double*)L$1 * *(double*)R$1, *(double*)L$1 * *(double*)R$1, *(double*)L$1 * *(double*)R$1 );
 goto label$513;
 label$513:;
 return tmp$371$1;
}

struct $9_FLOAT512* _ZdvR9_FLOAT512S0_( struct $9_FLOAT512* tmp$373$1, struct $9_FLOAT512* L$1, struct $9_FLOAT512* R$1 )
{
 label$514:;
 _ZN9_FLOAT512C1Edddd( tmp$373$1, *(double*)L$1 / *(double*)R$1, *(double*)L$1 / *(double*)R$1, *(double*)L$1 / *(double*)R$1, *(double*)L$1 / *(double*)R$1 );
 goto label$515;
 label$515:;
 return tmp$373$1;
}

int64 _ZeqR9_FLOAT512S0_( struct $9_FLOAT512* L$1, struct $9_FLOAT512* R$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$516:;
 if( ((((int64)__builtin_nearbyint( *(double*)L$1 )) ^ ((int64)__builtin_nearbyint( *(double*)R$1 ))) | (((int64)__builtin_nearbyint( *(double*)L$1 )) ^ ((int64)__builtin_nearbyint( *(double*)R$1 )))) == 0ll ) goto label$519;
 {
  fb$result$1 = 0ll;
  goto label$517;
  label$519:;
 }
 fb$result$1 = -1ll;
 goto label$517;
 label$517:;
 return fb$result$1;
}

int64 _ZneR9_FLOAT512S0_( struct $9_FLOAT512* L$1, struct $9_FLOAT512* R$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$520:;
 if( ((((int64)__builtin_nearbyint( *(double*)L$1 )) ^ ((int64)__builtin_nearbyint( *(double*)R$1 ))) | (((int64)__builtin_nearbyint( *(double*)L$1 )) ^ ((int64)__builtin_nearbyint( *(double*)R$1 )))) == 0ll ) goto label$523;
 {
  fb$result$1 = -1ll;
  goto label$521;
  label$523:;
 }
 fb$result$1 = 0ll;
 goto label$521;
 label$521:;
 return fb$result$1;
}

struct $9_FLOAT512* _ZplR9_FLOAT512d( struct $9_FLOAT512* tmp$375$1, struct $9_FLOAT512* L$1, double R$1 )
{
 label$524:;
 _ZN9_FLOAT512C1Edddd( tmp$375$1, *(double*)L$1 + R$1, *(double*)L$1 + R$1, *(double*)L$1 + R$1, *(double*)L$1 + R$1 );
 goto label$525;
 label$525:;
 return tmp$375$1;
}

struct $9_FLOAT512* _ZpldR9_FLOAT512( struct $9_FLOAT512* tmp$377$1, double L$1, struct $9_FLOAT512* R$1 )
{
 label$526:;
 _ZN9_FLOAT512C1Edddd( tmp$377$1, *(double*)R$1 + L$1, *(double*)R$1 + L$1, *(double*)R$1 + L$1, *(double*)R$1 + L$1 );
 goto label$527;
 label$527:;
 return tmp$377$1;
}

struct $9_FLOAT512* _ZmiR9_FLOAT512d( struct $9_FLOAT512* tmp$379$1, struct $9_FLOAT512* L$1, double R$1 )
{
 label$528:;
 _ZN9_FLOAT512C1Edddd( tmp$379$1, *(double*)L$1 - R$1, *(double*)L$1 - R$1, *(double*)L$1 - R$1, *(double*)L$1 - R$1 );
 goto label$529;
 label$529:;
 return tmp$379$1;
}

struct $9_FLOAT512* _ZmidR9_FLOAT512( struct $9_FLOAT512* tmp$381$1, double L$1, struct $9_FLOAT512* R$1 )
{
 label$530:;
 _ZN9_FLOAT512C1Edddd( tmp$381$1, *(double*)R$1 - L$1, *(double*)R$1 - L$1, *(double*)R$1 - L$1, *(double*)R$1 - L$1 );
 goto label$531;
 label$531:;
 return tmp$381$1;
}

struct $9_FLOAT512* _ZmlR9_FLOAT512d( struct $9_FLOAT512* tmp$383$1, struct $9_FLOAT512* L$1, double R$1 )
{
 label$532:;
 _ZN9_FLOAT512C1Edddd( tmp$383$1, *(double*)L$1 * R$1, *(double*)L$1 * R$1, *(double*)L$1 * R$1, *(double*)L$1 * R$1 );
 goto label$533;
 label$533:;
 return tmp$383$1;
}

struct $9_FLOAT512* _ZmldR9_FLOAT512( struct $9_FLOAT512* tmp$385$1, double L$1, struct $9_FLOAT512* R$1 )
{
 label$534:;
 _ZN9_FLOAT512C1Edddd( tmp$385$1, L$1 * *(double*)R$1, L$1 * *(double*)R$1, L$1 * *(double*)R$1, L$1 * *(double*)R$1 );
 goto label$535;
 label$535:;
 return tmp$385$1;
}

void ERROREXIT( FBSTRING* MSG$1 )
{
 label$542:;
 void* vr$0 = fb_GfxScreenPtr( );
 if( vr$0 == (void*)0ull ) goto label$545;
 {
  fb_GfxScreen( 0, 8, 0, 0, 0 );
  label$545:;
 }
 int64 W$1;
 __builtin_memset( &W$1, 0, 8ll );
 int64 H$1;
 __builtin_memset( &H$1, 0, 8ll );
 fb_PrintString( 0, (FBSTRING*)MSG$1, 1 );
 fb_PrintVoid( 0, 1 );
 FBSTRING* vr$3 = fb_StrAllocTempDescZEx( (uint8*)"press any key ...", 17ll );
 fb_PrintString( 0, (FBSTRING*)vr$3, 1 );
 fb_Beep( );
 fb_Sleep( -1 );
 fb_End( 1 );
 label$543:;
}

void GLSCREEN( int64 PIXELWIDTH$1, int64 PIXELHEIGHT$1, int64 COLORBITS$1, int64 DEPTHBITS$1, int8 FULLSCREEN$1 )
{
 int64 TMP$1035$1;
 int64 TMP$1036$1;
 int64 TMP$1037$1;
 int64 TMP$1038$1;
 int64 TMP$1039$1;
 int64 TMP$1040$1;
 int64 TMP$1041$1;
 int64 TMP$1042$1;
 int64 TMP$1043$1;
 label$546:;
 int64 W$1;
 __builtin_memset( &W$1, 0, 8ll );
 int64 H$1;
 __builtin_memset( &H$1, 0, 8ll );
 int64 B$1;
 __builtin_memset( &B$1, 0, 8ll );
 void* vr$3 = fb_GfxScreenPtr( );
 if( vr$3 == (void*)0ull ) goto label$549;
 {
  fb_GfxScreen( 0, 8, 0, 0, 0 );
  label$549:;
 }
 FBSTRING* vr$4 = fb_StrAllocTempDescZEx( (uint8*)"", 0ll );
 TMP$1037$1 = 0ll;
 TMP$1036$1 = 0ll;
 TMP$1035$1 = 0ll;
 fb_GfxScreenInfo64( (int64*)&W$1, (int64*)&H$1, (int64*)&B$1, &TMP$1035$1, &TMP$1036$1, &TMP$1037$1, vr$4 );
 if( PIXELWIDTH$1 > 0ll ) goto label$550;
 TMP$1038$1 = (int64)-(PIXELHEIGHT$1 <= 0ll);
 goto label$638;
 label$550:;
 TMP$1038$1 = 0ll;
 label$638:;
 if( TMP$1038$1 == 0ll ) goto label$552;
 {
  PIXELWIDTH$1 = 640ll;
  PIXELHEIGHT$1 = 350ll;
  FULLSCREEN$1 = (int8)0;
 }
 goto label$551;
 label$552:;
 if( PIXELWIDTH$1 <= 0ll ) goto label$554;
 TMP$1039$1 = (int64)-(PIXELHEIGHT$1 <= 0ll);
 goto label$639;
 label$554:;
 TMP$1039$1 = 0ll;
 label$639:;
 if( TMP$1039$1 == 0ll ) goto label$553;
 {
  PIXELHEIGHT$1 = ((int64)__builtin_nearbyint( ((double)PIXELWIDTH$1 / 0x1.p+4) * 0x1.2p+3 ));
 }
 goto label$551;
 label$553:;
 if( PIXELWIDTH$1 > 0ll ) goto label$556;
 TMP$1040$1 = (int64)-(PIXELHEIGHT$1 > 0ll);
 goto label$640;
 label$556:;
 TMP$1040$1 = 0ll;
 label$640:;
 if( TMP$1040$1 == 0ll ) goto label$555;
 {
  PIXELWIDTH$1 = ((int64)__builtin_nearbyint( ((double)PIXELHEIGHT$1 / 0x1.2p+3) * 0x1.p+4 ));
 }
 label$555:;
 label$551:;
 if( COLORBITS$1 >= 16ll ) goto label$558;
 {
  COLORBITS$1 = B$1;
 }
 goto label$557;
 label$558:;
 if( COLORBITS$1 >= 24ll ) goto label$559;
 {
  COLORBITS$1 = 16ll;
 }
 goto label$557;
 label$559:;
 if( COLORBITS$1 >= 32ll ) goto label$560;
 {
  COLORBITS$1 = 24ll;
 }
 goto label$557;
 label$560:;
 {
  COLORBITS$1 = 32ll;
 }
 label$557:;
 if( DEPTHBITS$1 > 0ll ) goto label$562;
 {
  DEPTHBITS$1 = 0ll;
 }
 goto label$561;
 label$562:;
 if( DEPTHBITS$1 >= 16ll ) goto label$563;
 {
  DEPTHBITS$1 = 16ll;
 }
 goto label$561;
 label$563:;
 if( DEPTHBITS$1 >= 32ll ) goto label$564;
 {
  DEPTHBITS$1 = 24ll;
 }
 goto label$561;
 label$564:;
 {
  DEPTHBITS$1 = 32ll;
 }
 label$561:;
 TMP$1043$1 = 2147483648ll;
 TMP$1042$1 = 2147483648ll;
 TMP$1041$1 = 2147483648ll;
 fb_GfxControl_i64( 110, (int64*)&DEPTHBITS$1, &TMP$1041$1, &TMP$1042$1, &TMP$1043$1 );
 if( (int64)FULLSCREEN$1 == 0ll ) goto label$566;
 {
  if( ((int64)-(PIXELWIDTH$1 < 640ll) | (int64)-(PIXELHEIGHT$1 < 480ll)) == 0ll ) goto label$568;
  {
   PIXELWIDTH$1 = 640ll;
   PIXELHEIGHT$1 = 480ll;
  }
  label$568:;
  label$567:;
  int32 FOUNDMODE$2;
  __builtin_memset( &FOUNDMODE$2, 0, 4ll );
  int32 MODE$2;
  int32 vr$32 = fb_GfxScreenList( (int32)COLORBITS$1 );
  MODE$2 = vr$32;
  if( (int64)MODE$2 == 0ll ) goto label$570;
  {
   int64 ERRORVALUE$3;
   ERRORVALUE$3 = 1073741824ll;
   int64 ERRORWIDTH$3;
   __builtin_memset( &ERRORWIDTH$3, 0, 8ll );
   int64 ERRORHEIGHT$3;
   __builtin_memset( &ERRORHEIGHT$3, 0, 8ll );
   label$571:;
   if( (int64)MODE$2 == 0ll ) goto label$572;
   {
    ERRORWIDTH$3 = (int64)__builtin_llabs( ((((uint64)MODE$2 & 4294901760ull) >> (16ll & 63ll)) - (uint64)PIXELWIDTH$1) );
    ERRORHEIGHT$3 = (int64)__builtin_llabs( (((uint64)MODE$2 & 65535ull) - (uint64)PIXELHEIGHT$1) );
    if( (ERRORWIDTH$3 + ERRORHEIGHT$3) >= ERRORVALUE$3 ) goto label$574;
    {
     ERRORVALUE$3 = ERRORWIDTH$3 + ERRORHEIGHT$3;
     FOUNDMODE$2 = MODE$2;
    }
    label$574:;
    label$573:;
    int32 vr$48 = fb_GfxScreenList( 0 );
    MODE$2 = vr$48;
   }
   goto label$571;
   label$572:;
  }
  goto label$569;
  label$570:;
  {
   int32 BITS$3[2];
   __builtin_memset( (int32*)BITS$3, 0, 8ll );
   struct $8FBARRAY1IiE tmp$1044$3;
   *(int32**)&tmp$1044$3 = (int32*)BITS$3;
   *(int32**)((uint8*)&tmp$1044$3 + 8ll) = (int32*)BITS$3;
   *(int64*)((uint8*)&tmp$1044$3 + 16ll) = 8ll;
   *(int64*)((uint8*)&tmp$1044$3 + 24ll) = 4ll;
   *(int64*)((uint8*)&tmp$1044$3 + 32ll) = 1ll;
   *(int64*)((uint8*)&tmp$1044$3 + 40ll) = 49ll;
   *(int64*)((uint8*)&tmp$1044$3 + 48ll) = 2ll;
   *(int64*)((uint8*)&tmp$1044$3 + 56ll) = 0ll;
   *(int64*)((uint8*)&tmp$1044$3 + 64ll) = 1ll;
   if( COLORBITS$1 != 16ll ) goto label$576;
   {
    *(int32*)BITS$3 = 32;
    *(int32*)((int64)(int32*)BITS$3 + 4ll) = 24;
   }
   goto label$575;
   label$576:;
   if( COLORBITS$1 != 24ll ) goto label$577;
   {
    *(int32*)BITS$3 = 32;
    *(int32*)((int64)(int32*)BITS$3 + 4ll) = 16;
   }
   goto label$575;
   label$577:;
   {
    *(int32*)BITS$3 = 24;
    *(int32*)((int64)(int32*)BITS$3 + 4ll) = 16;
   }
   label$575:;
   {
    int64 I$4;
    I$4 = 0ll;
    label$581:;
    {
     COLORBITS$1 = (int64)*(int32*)((int64)(int32*)BITS$3 + (I$4 << (2ll & 63ll)));
     int32 vr$55 = fb_GfxScreenList( (int32)COLORBITS$1 );
     MODE$2 = vr$55;
     if( (int64)MODE$2 == 0ll ) goto label$583;
     {
      int64 ERRORVALUE$6;
      ERRORVALUE$6 = 1073741824ll;
      int64 ERRORWIDTH$6;
      __builtin_memset( &ERRORWIDTH$6, 0, 8ll );
      int64 ERRORHEIGHT$6;
      __builtin_memset( &ERRORHEIGHT$6, 0, 8ll );
      label$584:;
      if( (int64)MODE$2 == 0ll ) goto label$585;
      {
       ERRORWIDTH$6 = (int64)__builtin_llabs( ((((uint64)MODE$2 & 4294901760ull) >> (16ll & 63ll)) - (uint64)PIXELWIDTH$1) );
       ERRORHEIGHT$6 = (int64)__builtin_llabs( (((uint64)MODE$2 & 65535ull) - (uint64)PIXELHEIGHT$1) );
       if( (ERRORWIDTH$6 + ERRORHEIGHT$6) >= ERRORVALUE$6 ) goto label$587;
       {
        ERRORVALUE$6 = ERRORWIDTH$6 + ERRORHEIGHT$6;
        FOUNDMODE$2 = MODE$2;
       }
       label$587:;
       label$586:;
       int32 vr$71 = fb_GfxScreenList( 0 );
       MODE$2 = vr$71;
      }
      goto label$584;
      label$585:;
     }
     label$583:;
     label$582:;
     if( (int64)FOUNDMODE$2 == 0ll ) goto label$589;
     {
      goto label$580;
      label$589:;
     }
    }
    label$579:;
    I$4 = I$4 + 1ll;
    label$578:;
    if( I$4 <= 1ll ) goto label$581;
    label$580:;
   }
  }
  label$569:;
  if( (int64)FOUNDMODE$2 == 0ll ) goto label$591;
  {
   PIXELWIDTH$1 = (int64)(((uint64)FOUNDMODE$2 & 4294901760ull) >> (16ll & 63ll));
   PIXELHEIGHT$1 = (int64)((uint64)FOUNDMODE$2 & 65535ull);
  }
  goto label$590;
  label$591:;
  {
   FULLSCREEN$1 = (int8)0;
  }
  label$590:;
 }
 label$566:;
 label$565:;
 int32 vr$83 = fb_GfxScreenRes( (int32)PIXELWIDTH$1, (int32)PIXELHEIGHT$1, (int32)COLORBITS$1, 1, 2, 0 );
 if( (int64)vr$83 == 0ll ) goto label$593;
 {
  FULLSCREEN$1 = (int8)0;
  int32 vr$86 = fb_GfxScreenRes( 640, 350, (int32)B$1, 1, 2, 0 );
  if( (int64)vr$86 == 0ll ) goto label$595;
  {
   FBSTRING TMP$1048$3;
   FBSTRING TMP$1049$3;
   FBSTRING TMP$1050$3;
   FBSTRING TMP$1051$3;
   FBSTRING TMP$1052$3;
   __builtin_memset( &TMP$1052$3, 0, 24ll );
   FBSTRING* vr$89 = fb_LongintToStr( H$1 );
   FBSTRING* vr$90 = fb_LongintToStr( W$1 );
   __builtin_memset( &TMP$1048$3, 0, 24ll );
   FBSTRING* vr$93 = fb_StrConcat( &TMP$1048$3, (void*)"screenres(", 11ll, (void*)vr$90, -1ll );
   __builtin_memset( &TMP$1049$3, 0, 24ll );
   FBSTRING* vr$96 = fb_StrConcat( &TMP$1049$3, (void*)vr$93, -1ll, (void*)",", 2ll );
   __builtin_memset( &TMP$1050$3, 0, 24ll );
   FBSTRING* vr$99 = fb_StrConcat( &TMP$1050$3, (void*)vr$96, -1ll, (void*)vr$89, -1ll );
   __builtin_memset( &TMP$1051$3, 0, 24ll );
   FBSTRING* vr$102 = fb_StrConcat( &TMP$1051$3, (void*)vr$99, -1ll, (void*)") failed !", 11ll );
   fb_StrAssign( (void*)&TMP$1052$3, -1ll, (void*)vr$102, -1ll, 0 );
   ERROREXIT( &TMP$1052$3 );
   fb_StrDelete( (FBSTRING*)&TMP$1052$3 );
  }
  label$595:;
  label$594:;
 }
 label$593:;
 label$592:;
 fb_GfxFlip( -1, -1 );
 void* vr$106 = fb_GfxGetGLProcAddress( (uint8*)"glCreateShader" );
 GLCREATESHADER$ = (tmp$532)vr$106;
 if( GLCREATESHADER$ != (tmp$532)0ull ) goto label$597;
 {
  FBSTRING TMP$1054$2;
  __builtin_memset( &TMP$1054$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$1054$2, -1ll, (void*)"glCreateShader", 15ll, 0 );
  ERROREXIT( &TMP$1054$2 );
  fb_StrDelete( (FBSTRING*)&TMP$1054$2 );
  label$597:;
 }
 void* vr$111 = fb_GfxGetGLProcAddress( (uint8*)"glDeleteShader" );
 GLDELETESHADER$ = (tmp$461)vr$111;
 if( GLDELETESHADER$ != (tmp$461)0ull ) goto label$599;
 {
  FBSTRING TMP$1056$2;
  __builtin_memset( &TMP$1056$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$1056$2, -1ll, (void*)"glDeleteShader", 15ll, 0 );
  ERROREXIT( &TMP$1056$2 );
  fb_StrDelete( (FBSTRING*)&TMP$1056$2 );
  label$599:;
 }
 void* vr$116 = fb_GfxGetGLProcAddress( (uint8*)"glShaderSource" );
 GLSHADERSOURCE$ = (tmp$541)vr$116;
 if( GLSHADERSOURCE$ != (tmp$541)0ull ) goto label$601;
 {
  FBSTRING TMP$1058$2;
  __builtin_memset( &TMP$1058$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$1058$2, -1ll, (void*)"glShaderSource", 15ll, 0 );
  ERROREXIT( &TMP$1058$2 );
  fb_StrDelete( (FBSTRING*)&TMP$1058$2 );
  label$601:;
 }
 void* vr$121 = fb_GfxGetGLProcAddress( (uint8*)"glCompileShader" );
 GLCOMPILESHADER$ = (tmp$461)vr$121;
 if( GLCOMPILESHADER$ != (tmp$461)0ull ) goto label$603;
 {
  FBSTRING TMP$1060$2;
  __builtin_memset( &TMP$1060$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$1060$2, -1ll, (void*)"glCompileShader", 16ll, 0 );
  ERROREXIT( &TMP$1060$2 );
  fb_StrDelete( (FBSTRING*)&TMP$1060$2 );
  label$603:;
 }
 void* vr$126 = fb_GfxGetGLProcAddress( (uint8*)"glGetShaderiv" );
 GLGETSHADERIV$ = (tmp$522)vr$126;
 if( GLGETSHADERIV$ != (tmp$522)0ull ) goto label$605;
 {
  FBSTRING TMP$1062$2;
  __builtin_memset( &TMP$1062$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$1062$2, -1ll, (void*)"glGetShaderiv", 14ll, 0 );
  ERROREXIT( &TMP$1062$2 );
  fb_StrDelete( (FBSTRING*)&TMP$1062$2 );
  label$605:;
 }
 void* vr$131 = fb_GfxGetGLProcAddress( (uint8*)"glGetShaderInfoLog" );
 GLGETSHADERINFOLOG$ = (tmp$536)vr$131;
 if( GLGETSHADERINFOLOG$ != (tmp$536)0ull ) goto label$607;
 {
  FBSTRING TMP$1064$2;
  __builtin_memset( &TMP$1064$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$1064$2, -1ll, (void*)"glGetShaderInfoLog", 19ll, 0 );
  ERROREXIT( &TMP$1064$2 );
  fb_StrDelete( (FBSTRING*)&TMP$1064$2 );
  label$607:;
 }
 void* vr$136 = fb_GfxGetGLProcAddress( (uint8*)"glCreateProgram" );
 GLCREATEPROGRAM$ = (tmp$531)vr$136;
 if( GLCREATEPROGRAM$ != (tmp$531)0ull ) goto label$609;
 {
  FBSTRING TMP$1066$2;
  __builtin_memset( &TMP$1066$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$1066$2, -1ll, (void*)"glCreateProgram", 16ll, 0 );
  ERROREXIT( &TMP$1066$2 );
  fb_StrDelete( (FBSTRING*)&TMP$1066$2 );
  label$609:;
 }
 void* vr$141 = fb_GfxGetGLProcAddress( (uint8*)"glDeleteProgram" );
 GLDELETEPROGRAM$ = (tmp$461)vr$141;
 if( GLDELETEPROGRAM$ != (tmp$461)0ull ) goto label$611;
 {
  FBSTRING TMP$1068$2;
  __builtin_memset( &TMP$1068$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$1068$2, -1ll, (void*)"glDeleteProgram", 16ll, 0 );
  ERROREXIT( &TMP$1068$2 );
  fb_StrDelete( (FBSTRING*)&TMP$1068$2 );
  label$611:;
 }
 void* vr$146 = fb_GfxGetGLProcAddress( (uint8*)"glAttachShader" );
 GLATTACHSHADER$ = (tmp$521)vr$146;
 if( GLATTACHSHADER$ != (tmp$521)0ull ) goto label$613;
 {
  FBSTRING TMP$1070$2;
  __builtin_memset( &TMP$1070$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$1070$2, -1ll, (void*)"glAttachShader", 15ll, 0 );
  ERROREXIT( &TMP$1070$2 );
  fb_StrDelete( (FBSTRING*)&TMP$1070$2 );
  label$613:;
 }
 void* vr$151 = fb_GfxGetGLProcAddress( (uint8*)"glDetachShader" );
 GLDETACHSHADER$ = (tmp$521)vr$151;
 if( GLDETACHSHADER$ != (tmp$521)0ull ) goto label$615;
 {
  FBSTRING TMP$1072$2;
  __builtin_memset( &TMP$1072$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$1072$2, -1ll, (void*)"glDetachShader", 15ll, 0 );
  ERROREXIT( &TMP$1072$2 );
  fb_StrDelete( (FBSTRING*)&TMP$1072$2 );
  label$615:;
 }
 void* vr$156 = fb_GfxGetGLProcAddress( (uint8*)"glLinkProgram" );
 GLLINKPROGRAM$ = (tmp$461)vr$156;
 if( GLLINKPROGRAM$ != (tmp$461)0ull ) goto label$617;
 {
  FBSTRING TMP$1074$2;
  __builtin_memset( &TMP$1074$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$1074$2, -1ll, (void*)"glLinkProgram", 14ll, 0 );
  ERROREXIT( &TMP$1074$2 );
  fb_StrDelete( (FBSTRING*)&TMP$1074$2 );
  label$617:;
 }
 void* vr$161 = fb_GfxGetGLProcAddress( (uint8*)"glGetProgramiv" );
 GLGETPROGRAMIV$ = (tmp$522)vr$161;
 if( GLGETPROGRAMIV$ != (tmp$522)0ull ) goto label$619;
 {
  FBSTRING TMP$1076$2;
  __builtin_memset( &TMP$1076$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$1076$2, -1ll, (void*)"glGetProgramiv", 15ll, 0 );
  ERROREXIT( &TMP$1076$2 );
  fb_StrDelete( (FBSTRING*)&TMP$1076$2 );
  label$619:;
 }
 void* vr$166 = fb_GfxGetGLProcAddress( (uint8*)"glGetProgramInfoLog" );
 GLGETPROGRAMINFOLOG$ = (tmp$536)vr$166;
 if( GLGETPROGRAMINFOLOG$ != (tmp$536)0ull ) goto label$621;
 {
  FBSTRING TMP$1078$2;
  __builtin_memset( &TMP$1078$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$1078$2, -1ll, (void*)"glGetProgramInfoLog", 20ll, 0 );
  ERROREXIT( &TMP$1078$2 );
  fb_StrDelete( (FBSTRING*)&TMP$1078$2 );
  label$621:;
 }
 void* vr$171 = fb_GfxGetGLProcAddress( (uint8*)"glUseProgram" );
 GLUSEPROGRAM$ = (tmp$461)vr$171;
 if( GLUSEPROGRAM$ != (tmp$461)0ull ) goto label$623;
 {
  FBSTRING TMP$1080$2;
  __builtin_memset( &TMP$1080$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$1080$2, -1ll, (void*)"glUseProgram", 13ll, 0 );
  ERROREXIT( &TMP$1080$2 );
  fb_StrDelete( (FBSTRING*)&TMP$1080$2 );
  label$623:;
 }
 void* vr$176 = fb_GfxGetGLProcAddress( (uint8*)"glGetUniformLocation" );
 GLGETUNIFORMLOCATION$ = (tmp$535)vr$176;
 if( GLGETUNIFORMLOCATION$ != (tmp$535)0ull ) goto label$625;
 {
  FBSTRING TMP$1082$2;
  __builtin_memset( &TMP$1082$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$1082$2, -1ll, (void*)"glGetUniformLocation", 21ll, 0 );
  ERROREXIT( &TMP$1082$2 );
  fb_StrDelete( (FBSTRING*)&TMP$1082$2 );
  label$625:;
 }
 void* vr$181 = fb_GfxGetGLProcAddress( (uint8*)"glUniform1i" );
 GLUNIFORM1I$ = (tmp$515)vr$181;
 if( GLUNIFORM1I$ != (tmp$515)0ull ) goto label$627;
 {
  FBSTRING TMP$1084$2;
  __builtin_memset( &TMP$1084$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$1084$2, -1ll, (void*)"glUniform1i", 12ll, 0 );
  ERROREXIT( &TMP$1084$2 );
  fb_StrDelete( (FBSTRING*)&TMP$1084$2 );
  label$627:;
 }
 void* vr$186 = fb_GfxGetGLProcAddress( (uint8*)"glUniform1f" );
 GLUNIFORM1F$ = (tmp$542)vr$186;
 if( GLUNIFORM1F$ != (tmp$542)0ull ) goto label$629;
 {
  FBSTRING TMP$1086$2;
  __builtin_memset( &TMP$1086$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$1086$2, -1ll, (void*)"glUniform1f", 12ll, 0 );
  ERROREXIT( &TMP$1086$2 );
  fb_StrDelete( (FBSTRING*)&TMP$1086$2 );
  label$629:;
 }
 void* vr$191 = fb_GfxGetGLProcAddress( (uint8*)"glUniform3f" );
 GLUNIFORM3F$ = (tmp$544)vr$191;
 if( GLUNIFORM3F$ != (tmp$544)0ull ) goto label$631;
 {
  FBSTRING TMP$1088$2;
  __builtin_memset( &TMP$1088$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$1088$2, -1ll, (void*)"glUniform3f", 12ll, 0 );
  ERROREXIT( &TMP$1088$2 );
  fb_StrDelete( (FBSTRING*)&TMP$1088$2 );
  label$631:;
 }
 void* vr$196 = fb_GfxGetGLProcAddress( (uint8*)"glUniform3fv" );
 GLUNIFORM3FV$ = (tmp$548)vr$196;
 if( GLUNIFORM3FV$ != (tmp$548)0ull ) goto label$633;
 {
  FBSTRING TMP$1090$2;
  __builtin_memset( &TMP$1090$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$1090$2, -1ll, (void*)"glUniform3fv", 13ll, 0 );
  ERROREXIT( &TMP$1090$2 );
  fb_StrDelete( (FBSTRING*)&TMP$1090$2 );
  label$633:;
 }
 void* vr$201 = fb_GfxGetGLProcAddress( (uint8*)"glUniform4f" );
 GLUNIFORM4F$ = (tmp$545)vr$201;
 if( GLUNIFORM4F$ != (tmp$545)0ull ) goto label$635;
 {
  FBSTRING TMP$1092$2;
  __builtin_memset( &TMP$1092$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$1092$2, -1ll, (void*)"glUniform4f", 12ll, 0 );
  ERROREXIT( &TMP$1092$2 );
  fb_StrDelete( (FBSTRING*)&TMP$1092$2 );
  label$635:;
 }
 void* vr$206 = fb_GfxGetGLProcAddress( (uint8*)"glUniform4fv" );
 GLUNIFORM4FV$ = (tmp$548)vr$206;
 if( GLUNIFORM4FV$ != (tmp$548)0ull ) goto label$637;
 {
  FBSTRING TMP$1094$2;
  __builtin_memset( &TMP$1094$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$1094$2, -1ll, (void*)"glUniform4fv", 13ll, 0 );
  ERROREXIT( &TMP$1094$2 );
  fb_StrDelete( (FBSTRING*)&TMP$1094$2 );
  label$637:;
 }
 FBSTRING* vr$211 = fb_StrAllocTempDescZEx( (uint8*)"Loading and compiling shader. Please wait ...", 45ll );
 fb_GfxSetWindowTitle( (FBSTRING*)vr$211 );
 label$547:;
}

void _ZN9SHADERTOYD1Ev( struct $9SHADERTOY* THIS$1 )
{
 label$647:;
 if( (int64)*(uint32*)((uint8*)THIS$1 + 4ll) == 0ll ) goto label$650;
 {
  (GLUSEPROGRAM$)( 0u );
  if( (int64)*(uint32*)THIS$1 == 0ll ) goto label$652;
  {
   (GLDETACHSHADER$)( *(uint32*)((uint8*)THIS$1 + 4ll), *(uint32*)THIS$1 );
   (GLDELETESHADER$)( *(uint32*)THIS$1 );
  }
  label$652:;
  label$651:;
  (GLDELETEPROGRAM$)( *(uint32*)((uint8*)THIS$1 + 4ll) );
 }
 label$650:;
 label$649:;
 label$648:;
 fb_StrDelete( (FBSTRING*)((uint8*)THIS$1 + 8ll) );
}

int8 _ZN9SHADERTOY11COMPILEFILEER8FBSTRING( struct $9SHADERTOY* THIS$1, FBSTRING* FILENAME$1 )
{
 int8 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 1ll );
 label$653:;
 FBSTRING CODE$1;
 __builtin_memset( &CODE$1, 0, 24ll );
 int32 HFILE$1;
 int32 vr$2 = fb_FileFree( );
 HFILE$1 = vr$2;
 int32 vr$3 = fb_FileOpen( (FBSTRING*)FILENAME$1, 2u, 0u, 0u, HFILE$1, 0 );
 if( (int64)vr$3 == 0ll ) goto label$656;
 {
  FBSTRING TMP$1100$2;
  FBSTRING TMP$1101$2;
  FBSTRING TMP$1102$2;
  __builtin_memset( &TMP$1100$2, 0, 24ll );
  FBSTRING* vr$7 = fb_StrConcat( &TMP$1100$2, (void*)"can't read shader: \x22", 21ll, (void*)FILENAME$1, -1ll );
  __builtin_memset( &TMP$1101$2, 0, 24ll );
  FBSTRING* vr$10 = fb_StrConcat( &TMP$1101$2, (void*)vr$7, -1ll, (void*)"\x22", 2ll );
  __builtin_memset( &TMP$1102$2, 0, 24ll );
  FBSTRING* vr$13 = fb_StrConcat( &TMP$1102$2, (void*)vr$10, -1ll, (void*)" !", 3ll );
  fb_StrAssign( (void*)((uint8*)THIS$1 + 8ll), -1ll, (void*)vr$13, -1ll, 0 );
  fb$result$1 = (int8)0;
  fb_StrDelete( (FBSTRING*)&CODE$1 );
  goto label$654;
 }
 label$656:;
 label$655:;
 label$657:;
 int32 vr$17 = fb_FileEof( HFILE$1 );
 if( ~(int64)vr$17 == 0ll ) goto label$658;
 {
  FBSTRING ALINE$2;
  __builtin_memset( &ALINE$2, 0, 24ll );
  fb_FileLineInput( HFILE$1, (void*)&ALINE$2, -1ll, 0 );
  fb_StrConcatAssign( (void*)&CODE$1, -1ll, (void*)&ALINE$2, -1ll, 0 );
  fb_StrConcatAssign( (void*)&CODE$1, -1ll, (void*)"\x0A", 2ll, 0 );
  fb_StrDelete( (FBSTRING*)&ALINE$2 );
 }
 goto label$657;
 label$658:;
 fb_FileClose( HFILE$1 );
 int8 vr$27 = _ZN9SHADERTOY11COMPILECODEER8FBSTRING( THIS$1, &CODE$1 );
 fb$result$1 = vr$27;
 fb_StrDelete( (FBSTRING*)&CODE$1 );
 goto label$654;
 fb_StrDelete( (FBSTRING*)&CODE$1 );
 label$654:;
 return fb$result$1;
}

int8 _ZN9SHADERTOY11COMPILECODEER8FBSTRING( struct $9SHADERTOY* THIS$1, FBSTRING* USERCODE$1 )
{
 FBSTRING TMP$1134$1;
 FBSTRING TMP$1135$1;
 int8 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 1ll );
 label$659:;
 int32 LOGSIZE$1;
 __builtin_memset( &LOGSIZE$1, 0, 4ll );
 int32 STATUS$1;
 __builtin_memset( &STATUS$1, 0, 4ll );
 FBSTRING FRAGMENTPROLOG$1;
 __builtin_memset( &FRAGMENTPROLOG$1, 0, 24ll );
 FBSTRING VERSION$1;
 __builtin_memset( &VERSION$1, 0, 24ll );
 fb_StrAssign( (void*)&VERSION$1, -1ll, (void*)"#version 460\x0A", 14ll, 0 );
 fb_StrAssign( (void*)&FRAGMENTPROLOG$1, -1ll, (void*)&VERSION$1, -1ll, 0 );
 fb_StrConcatAssign( (void*)&FRAGMENTPROLOG$1, -1ll, (void*)"uniform float     iGlobalTime;\x0A", 32ll, 0 );
 fb_StrConcatAssign( (void*)&FRAGMENTPROLOG$1, -1ll, (void*)"uniform float     iTime;\x0A", 26ll, 0 );
 fb_StrConcatAssign( (void*)&FRAGMENTPROLOG$1, -1ll, (void*)"uniform vec3      iResolution;\x0A", 32ll, 0 );
 fb_StrConcatAssign( (void*)&FRAGMENTPROLOG$1, -1ll, (void*)"uniform float     iTimeDelta;\x0A", 31ll, 0 );
 fb_StrConcatAssign( (void*)&FRAGMENTPROLOG$1, -1ll, (void*)"uniform float     iFrameRate;\x0A", 31ll, 0 );
 fb_StrConcatAssign( (void*)&FRAGMENTPROLOG$1, -1ll, (void*)"uniform int       iFrame;\x0A", 27ll, 0 );
 fb_StrConcatAssign( (void*)&FRAGMENTPROLOG$1, -1ll, (void*)"uniform float     iChannelTime[4];\x0A", 36ll, 0 );
 fb_StrConcatAssign( (void*)&FRAGMENTPROLOG$1, -1ll, (void*)"uniform vec3      iChannelResolution[4];\x0A", 42ll, 0 );
 fb_StrConcatAssign( (void*)&FRAGMENTPROLOG$1, -1ll, (void*)"uniform float     iSampleRate;\x0A", 32ll, 0 );
 fb_StrConcatAssign( (void*)&FRAGMENTPROLOG$1, -1ll, (void*)"uniform vec4      iMouse;\x0A", 27ll, 0 );
 fb_StrConcatAssign( (void*)&FRAGMENTPROLOG$1, -1ll, (void*)"uniform vec4      iDate;\x0A", 26ll, 0 );
 fb_StrConcatAssign( (void*)&FRAGMENTPROLOG$1, -1ll, (void*)"uniform sampler2D iChannel0;\x0A", 30ll, 0 );
 fb_StrConcatAssign( (void*)&FRAGMENTPROLOG$1, -1ll, (void*)"uniform sampler2D iChannel1;\x0A", 30ll, 0 );
 fb_StrConcatAssign( (void*)&FRAGMENTPROLOG$1, -1ll, (void*)"uniform sampler2D iChannel2;\x0A", 30ll, 0 );
 fb_StrConcatAssign( (void*)&FRAGMENTPROLOG$1, -1ll, (void*)"uniform sampler2D iChannel3;\x0A", 30ll, 0 );
 fb_StrConcatAssign( (void*)&FRAGMENTPROLOG$1, -1ll, (void*)"uniform samplerCube iCube;\x0A", 28ll, 0 );
 FBSTRING FRAGMENTEPILOG$1;
 __builtin_memset( &FRAGMENTEPILOG$1, 0, 24ll );
 if( SWCH$ != 0x0p+0 ) goto label$662;
 {
  fb_StrConcatAssign( (void*)&FRAGMENTEPILOG$1, -1ll, (void*)"void main() {\x0A", 15ll, 0 );
  fb_StrConcatAssign( (void*)&FRAGMENTEPILOG$1, -1ll, (void*)"  vec4 color;\x0A", 15ll, 0 );
  fb_StrConcatAssign( (void*)&FRAGMENTEPILOG$1, -1ll, (void*)"  // call user shader\x0A", 23ll, 0 );
  fb_StrConcatAssign( (void*)&FRAGMENTEPILOG$1, -1ll, (void*)"  mainImage(color, gl_FragCoord.xy);\x0A", 38ll, 0 );
  fb_StrConcatAssign( (void*)&FRAGMENTEPILOG$1, -1ll, (void*)"  color.w = 1.0;\x0A", 18ll, 0 );
  fb_StrConcatAssign( (void*)&FRAGMENTEPILOG$1, -1ll, (void*)"  gl_FragColor = color;\x0A", 25ll, 0 );
  fb_StrConcatAssign( (void*)&FRAGMENTEPILOG$1, -1ll, (void*)"}\x0A", 3ll, 0 );
 }
 goto label$661;
 label$662:;
 {
  fb_StrConcatAssign( (void*)&FRAGMENTEPILOG$1, -1ll, (void*)"#define main_image mainImage", 29ll, 0 );
  fb_StrConcatAssign( (void*)&FRAGMENTEPILOG$1, -1ll, (void*)"#define frag_color fragColor", 29ll, 0 );
  fb_StrConcatAssign( (void*)&FRAGMENTEPILOG$1, -1ll, (void*)"#define frag_coord fragCoord", 29ll, 0 );
  fb_StrConcatAssign( (void*)&FRAGMENTEPILOG$1, -1ll, (void*)"#define i_resolution iResolution", 33ll, 0 );
  fb_StrConcatAssign( (void*)&FRAGMENTEPILOG$1, -1ll, (void*)"#define i_time iTime", 21ll, 0 );
  fb_StrConcatAssign( (void*)&FRAGMENTEPILOG$1, -1ll, (void*)"void main() {\x0A", 15ll, 0 );
  fb_StrConcatAssign( (void*)&FRAGMENTEPILOG$1, -1ll, (void*)"  vec4 color;\x0A", 15ll, 0 );
  fb_StrConcatAssign( (void*)&FRAGMENTEPILOG$1, -1ll, (void*)"  // call user shader\x0A", 23ll, 0 );
  fb_StrConcatAssign( (void*)&FRAGMENTEPILOG$1, -1ll, (void*)"  main_image(color, gl_FragCoord.xy);\x0A", 39ll, 0 );
  fb_StrConcatAssign( (void*)&FRAGMENTEPILOG$1, -1ll, (void*)"  color.w = 1.0;\x0A", 18ll, 0 );
  fb_StrConcatAssign( (void*)&FRAGMENTEPILOG$1, -1ll, (void*)"  gl_FragColor = color;\x0A", 25ll, 0 );
  fb_StrConcatAssign( (void*)&FRAGMENTEPILOG$1, -1ll, (void*)"}\x0A", 3ll, 0 );
 }
 label$661:;
 FBSTRING FRAGMENTCODE$1;
 __builtin_memset( &TMP$1134$1, 0, 24ll );
 FBSTRING* vr$48 = fb_StrConcat( &TMP$1134$1, (void*)&FRAGMENTPROLOG$1, -1ll, (void*)USERCODE$1, -1ll );
 __builtin_memset( &TMP$1135$1, 0, 24ll );
 FBSTRING* vr$51 = fb_StrConcat( &TMP$1135$1, (void*)vr$48, -1ll, (void*)&FRAGMENTEPILOG$1, -1ll );
 fb_StrInit( (void*)&FRAGMENTCODE$1, -1ll, (void*)vr$51, -1ll, 0 );
 uint32 vr$53 = (GLCREATESHADER$)( 35632u );
 *(uint32*)THIS$1 = vr$53;
 if( (int64)*(uint32*)THIS$1 != 0ll ) goto label$664;
 {
  fb_StrAssign( (void*)((uint8*)THIS$1 + 8ll), -1ll, (void*)"glCreateShader(GL_FRAGMENT_SHADER) failed !", 44ll, 0 );
  fb$result$1 = (int8)0;
  fb_StrDelete( (FBSTRING*)&FRAGMENTCODE$1 );
  fb_StrDelete( (FBSTRING*)&FRAGMENTEPILOG$1 );
  fb_StrDelete( (FBSTRING*)&VERSION$1 );
  fb_StrDelete( (FBSTRING*)&FRAGMENTPROLOG$1 );
  goto label$660;
 }
 label$664:;
 label$663:;
 uint8* PCODE$1;
 PCODE$1 = (uint8*)*(uint8**)&FRAGMENTCODE$1;
 (GLSHADERSOURCE$)( *(uint32*)THIS$1, 1, (uint8**)&PCODE$1, (int32*)0ull );
 (GLCOMPILESHADER$)( *(uint32*)THIS$1 );
 (GLGETSHADERIV$)( *(uint32*)THIS$1, 35713u, &STATUS$1 );
 if( (int64)STATUS$1 != 0ll ) goto label$666;
 {
  FBSTRING TMP$1138$2;
  (GLGETSHADERIV$)( *(uint32*)THIS$1, 35716u, &LOGSIZE$1 );
  FBSTRING* vr$72 = fb_SPACE( (int64)LOGSIZE$1 );
  fb_StrAssign( (void*)((uint8*)THIS$1 + 8ll), -1ll, (void*)vr$72, -1ll, 0 );
  (GLGETSHADERINFOLOG$)( *(uint32*)THIS$1, LOGSIZE$1, (int32*)0ull, *(uint8**)((uint8*)THIS$1 + 8ll) );
  __builtin_memset( &TMP$1138$2, 0, 24ll );
  FBSTRING* vr$81 = fb_StrConcat( &TMP$1138$2, (void*)"glCompileShader(FragmentShader) failed !\x0A", 42ll, (void*)((uint8*)THIS$1 + 8ll), -1ll );
  fb_StrAssign( (void*)((uint8*)THIS$1 + 8ll), -1ll, (void*)vr$81, -1ll, 0 );
  (GLDELETESHADER$)( *(uint32*)THIS$1 );
  *(uint32*)THIS$1 = 0u;
  fb$result$1 = (int8)0;
  fb_StrDelete( (FBSTRING*)&FRAGMENTCODE$1 );
  fb_StrDelete( (FBSTRING*)&FRAGMENTEPILOG$1 );
  fb_StrDelete( (FBSTRING*)&VERSION$1 );
  fb_StrDelete( (FBSTRING*)&FRAGMENTPROLOG$1 );
  goto label$660;
 }
 label$666:;
 label$665:;
 uint32 vr$90 = (GLCREATEPROGRAM$)( );
 *(uint32*)((uint8*)THIS$1 + 4ll) = vr$90;
 if( (int64)*(uint32*)((uint8*)THIS$1 + 4ll) != 0ll ) goto label$668;
 {
  fb_StrAssign( (void*)((uint8*)THIS$1 + 8ll), -1ll, (void*)"glCreateProgram() failed !", 27ll, 0 );
  (GLDELETESHADER$)( *(uint32*)THIS$1 );
  *(uint32*)THIS$1 = 0u;
  fb$result$1 = (int8)0;
  fb_StrDelete( (FBSTRING*)&FRAGMENTCODE$1 );
  fb_StrDelete( (FBSTRING*)&FRAGMENTEPILOG$1 );
  fb_StrDelete( (FBSTRING*)&VERSION$1 );
  fb_StrDelete( (FBSTRING*)&FRAGMENTPROLOG$1 );
  goto label$660;
 }
 label$668:;
 label$667:;
 (GLATTACHSHADER$)( *(uint32*)((uint8*)THIS$1 + 4ll), *(uint32*)THIS$1 );
 (GLLINKPROGRAM$)( *(uint32*)((uint8*)THIS$1 + 4ll) );
 (GLGETPROGRAMIV$)( *(uint32*)((uint8*)THIS$1 + 4ll), 35714u, &STATUS$1 );
 if( (int64)STATUS$1 != 0ll ) goto label$670;
 {
  FBSTRING TMP$1141$2;
  (GLGETPROGRAMIV$)( *(uint32*)((uint8*)THIS$1 + 4ll), 35716u, &LOGSIZE$1 );
  FBSTRING* vr$111 = fb_SPACE( (int64)LOGSIZE$1 );
  fb_StrAssign( (void*)((uint8*)THIS$1 + 8ll), -1ll, (void*)vr$111, -1ll, 0 );
  (GLGETPROGRAMINFOLOG$)( *(uint32*)((uint8*)THIS$1 + 4ll), LOGSIZE$1, (int32*)0ull, *(uint8**)((uint8*)THIS$1 + 8ll) );
  __builtin_memset( &TMP$1141$2, 0, 24ll );
  FBSTRING* vr$120 = fb_StrConcat( &TMP$1141$2, (void*)"glLinkProgram() failed !\x0A", 26ll, (void*)((uint8*)THIS$1 + 8ll), -1ll );
  fb_StrAssign( (void*)((uint8*)THIS$1 + 8ll), -1ll, (void*)vr$120, -1ll, 0 );
  (GLDELETESHADER$)( *(uint32*)THIS$1 );
  *(uint32*)THIS$1 = 0u;
  fb$result$1 = (int8)0;
  fb_StrDelete( (FBSTRING*)&FRAGMENTCODE$1 );
  fb_StrDelete( (FBSTRING*)&FRAGMENTEPILOG$1 );
  fb_StrDelete( (FBSTRING*)&VERSION$1 );
  fb_StrDelete( (FBSTRING*)&FRAGMENTPROLOG$1 );
  goto label$660;
 }
 label$670:;
 label$669:;
 fb$result$1 = (int8)-1;
 fb_StrDelete( (FBSTRING*)&FRAGMENTCODE$1 );
 fb_StrDelete( (FBSTRING*)&FRAGMENTEPILOG$1 );
 fb_StrDelete( (FBSTRING*)&VERSION$1 );
 fb_StrDelete( (FBSTRING*)&FRAGMENTPROLOG$1 );
 goto label$660;
 fb_StrDelete( (FBSTRING*)&FRAGMENTCODE$1 );
 fb_StrDelete( (FBSTRING*)&FRAGMENTEPILOG$1 );
 fb_StrDelete( (FBSTRING*)&VERSION$1 );
 fb_StrDelete( (FBSTRING*)&FRAGMENTPROLOG$1 );
 label$660:;
 return fb$result$1;
}

void _ZN6VECTORpLERS_( struct $6VECTOR* THIS$1, struct $6VECTOR* R$1 )
{
 label$671:;
 *(double*)THIS$1 = *(double*)THIS$1 + *(double*)R$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) + *(double*)((uint8*)R$1 + 8ll);
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)THIS$1 + 16ll) + *(double*)((uint8*)R$1 + 16ll);
 label$672:;
}

void _ZN6VECTORmIERS_( struct $6VECTOR* THIS$1, struct $6VECTOR* R$1 )
{
 label$673:;
 *(double*)THIS$1 = *(double*)THIS$1 - *(double*)R$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) - *(double*)((uint8*)R$1 + 8ll);
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)THIS$1 + 16ll) - *(double*)((uint8*)R$1 + 16ll);
 label$674:;
}

void _ZN6VECTORmLEd( struct $6VECTOR* THIS$1, double S$1 )
{
 label$675:;
 *(double*)THIS$1 = *(double*)THIS$1 * S$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) * S$1;
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)THIS$1 + 16ll) * S$1;
 label$676:;
}

struct $6VECTOR* _ZmiR6VECTORS0_( struct $6VECTOR* tmp$1148$1, struct $6VECTOR* L$1, struct $6VECTOR* R$1 )
{
 struct $6VECTOR TMP$1149$1;
 label$677:;
 _ZN6VECTORC1Ev( tmp$1148$1 );
 _ZN6VECTORC1Edddd( &TMP$1149$1, *(double*)L$1 - *(double*)R$1, *(double*)((uint8*)L$1 + 8ll) - *(double*)((uint8*)R$1 + 8ll), *(double*)((uint8*)L$1 + 16ll) - *(double*)((uint8*)R$1 + 16ll), 0x1.p+0 );
 __builtin_memcpy( tmp$1148$1, &TMP$1149$1, 32 );
 label$678:;
 return tmp$1148$1;
}

struct $6VECTOR* _ZplR6VECTORS0_( struct $6VECTOR* tmp$1150$1, struct $6VECTOR* L$1, struct $6VECTOR* R$1 )
{
 struct $6VECTOR TMP$1151$1;
 label$679:;
 _ZN6VECTORC1Ev( tmp$1150$1 );
 _ZN6VECTORC1Edddd( &TMP$1151$1, *(double*)L$1 + *(double*)R$1, *(double*)((uint8*)L$1 + 8ll) + *(double*)((uint8*)R$1 + 8ll), *(double*)((uint8*)L$1 + 16ll) + *(double*)((uint8*)R$1 + 16ll), 0x1.p+0 );
 __builtin_memcpy( tmp$1150$1, &TMP$1151$1, 32 );
 label$680:;
 return tmp$1150$1;
}

struct $6VECTOR* _ZmlR6VECTORd( struct $6VECTOR* tmp$1152$1, struct $6VECTOR* L$1, double R$1 )
{
 struct $6VECTOR TMP$1153$1;
 label$681:;
 _ZN6VECTORC1Ev( tmp$1152$1 );
 _ZN6VECTORC1Edddd( &TMP$1153$1, *(double*)L$1 * R$1, *(double*)((uint8*)L$1 + 8ll) * R$1, *(double*)((uint8*)L$1 + 16ll) * R$1, 0x1.p+0 );
 __builtin_memcpy( tmp$1152$1, &TMP$1153$1, 32 );
 label$682:;
 return tmp$1152$1;
}

struct $6VECTOR* _ZmldR6VECTOR( struct $6VECTOR* tmp$1154$1, double L$1, struct $6VECTOR* R$1 )
{
 struct $6VECTOR TMP$1155$1;
 label$683:;
 _ZN6VECTORC1Ev( tmp$1154$1 );
 _ZN6VECTORC1Edddd( &TMP$1155$1, L$1 * *(double*)R$1, L$1 * *(double*)((uint8*)R$1 + 8ll), L$1 * *(double*)((uint8*)R$1 + 16ll), 0x1.p+0 );
 __builtin_memcpy( tmp$1154$1, &TMP$1155$1, 32 );
 label$684:;
 return tmp$1154$1;
}

struct $6VECTOR* _ZdvR6VECTORd( struct $6VECTOR* tmp$1156$1, struct $6VECTOR* L$1, double R$1 )
{
 struct $6VECTOR TMP$1157$1;
 label$685:;
 _ZN6VECTORC1Ev( tmp$1156$1 );
 _ZN6VECTORC1Edddd( &TMP$1157$1, *(double*)L$1 / R$1, *(double*)((uint8*)L$1 + 8ll) / R$1, *(double*)((uint8*)L$1 + 16ll) / R$1, 0x1.p+0 );
 __builtin_memcpy( tmp$1156$1, &TMP$1157$1, 32 );
 label$686:;
 return tmp$1156$1;
}

struct $6VECTOR* _ZdvdR6VECTOR( struct $6VECTOR* tmp$1158$1, double L$1, struct $6VECTOR* R$1 )
{
 struct $6VECTOR TMP$1159$1;
 label$687:;
 _ZN6VECTORC1Ev( tmp$1158$1 );
 _ZN6VECTORC1Edddd( &TMP$1159$1, *(double*)R$1 / L$1, *(double*)((uint8*)R$1 + 8ll) / L$1, *(double*)((uint8*)R$1 + 16ll) / L$1, 0x1.p+0 );
 __builtin_memcpy( tmp$1158$1, &TMP$1159$1, 32 );
 label$688:;
 return tmp$1158$1;
}

double _ZmlR6VECTORS0_( struct $6VECTOR* L$1, struct $6VECTOR* R$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$689:;
 fb$result$1 = ((*(double*)L$1 * *(double*)R$1) + (*(double*)((uint8*)L$1 + 8ll) * *(double*)((uint8*)R$1 + 8ll))) + (*(double*)((uint8*)L$1 + 16ll) * *(double*)((uint8*)R$1 + 16ll));
 goto label$690;
 label$690:;
 return fb$result$1;
}

struct $6VECTOR* _Zv24idivR6VECTORS0_( struct $6VECTOR* tmp$1160$1, struct $6VECTOR* L$1, struct $6VECTOR* R$1 )
{
 struct $6VECTOR TMP$1161$1;
 label$691:;
 _ZN6VECTORC1Ev( tmp$1160$1 );
 _ZN6VECTORC1Edddd( &TMP$1161$1, (*(double*)((uint8*)L$1 + 8ll) * *(double*)((uint8*)R$1 + 16ll)) - (*(double*)((uint8*)L$1 + 16ll) * *(double*)((uint8*)R$1 + 8ll)), (*(double*)((uint8*)L$1 + 16ll) * *(double*)R$1) - (*(double*)L$1 * *(double*)((uint8*)R$1 + 16ll)), (*(double*)L$1 * *(double*)((uint8*)R$1 + 8ll)) - (*(double*)((uint8*)L$1 + 8ll) * *(double*)R$1), 0x1.p+0 );
 __builtin_memcpy( tmp$1160$1, &TMP$1161$1, 32 );
 label$692:;
 return tmp$1160$1;
}

void _ZN6VECTORC1Ev( struct $6VECTOR* THIS$1 )
{
 __builtin_memset( (double*)THIS$1, 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 8ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 16ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 24ll), 0, 8ll );
 label$693:;
 label$694:;
}

void _ZN6VECTORC1ERS_( struct $6VECTOR* THIS$1, struct $6VECTOR* INV$1 )
{
 label$695:;
 __builtin_memset( (double*)THIS$1, 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 8ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 16ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 24ll), 0, 8ll );
 *(double*)THIS$1 = *(double*)INV$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)INV$1 + 8ll);
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)INV$1 + 16ll);
 *(double*)((uint8*)THIS$1 + 24ll) = *(double*)((uint8*)INV$1 + 24ll);
 label$696:;
}

void _ZN6VECTORC1Edddd( struct $6VECTOR* THIS$1, double INX$1, double INY$1, double INZ$1, double INW$1 )
{
 label$697:;
 __builtin_memset( (double*)THIS$1, 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 8ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 16ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 24ll), 0, 8ll );
 *(double*)THIS$1 = INX$1;
 *(double*)((uint8*)THIS$1 + 8ll) = INY$1;
 *(double*)((uint8*)THIS$1 + 16ll) = INZ$1;
 *(double*)((uint8*)THIS$1 + 24ll) = INW$1;
 label$698:;
}

void _ZN6VECTORC1Ej( struct $6VECTOR* THIS$1, uint32 COL$1 )
{
 label$699:;
 uint32 V$1;
 __builtin_memset( (double*)THIS$1, 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 8ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 16ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 24ll), 0, 8ll );
 V$1 = (uint32)((int64)COL$1 & 255ll);
 COL$1 = (uint32)((int64)COL$1 >> (8ll & 63ll));
 *(double*)((uint8*)THIS$1 + 16ll) = (double)(int64)V$1 * 0x1.010101010101p-8;
 V$1 = (uint32)((int64)COL$1 & 255ll);
 COL$1 = (uint32)((int64)COL$1 >> (8ll & 63ll));
 *(double*)((uint8*)THIS$1 + 8ll) = (double)(int64)V$1 * 0x1.010101010101p-8;
 V$1 = (uint32)((int64)COL$1 & 255ll);
 COL$1 = (uint32)((int64)COL$1 >> (8ll & 63ll));
 *(double*)THIS$1 = (double)(int64)V$1 * 0x1.010101010101p-8;
 V$1 = (uint32)((int64)COL$1 & 255ll);
 *(double*)((uint8*)THIS$1 + 24ll) = (double)(int64)V$1 * 0x1.010101010101p-8;
 label$700:;
}

double _ZN6VECTOR10LENGTHSQRDEv( struct $6VECTOR* THIS$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$701:;
 fb$result$1 = ((*(double*)THIS$1 * *(double*)THIS$1) + (*(double*)((uint8*)THIS$1 + 8ll) * *(double*)((uint8*)THIS$1 + 8ll))) + (*(double*)((uint8*)THIS$1 + 16ll) * *(double*)((uint8*)THIS$1 + 16ll));
 goto label$702;
 label$702:;
 return fb$result$1;
}

double _ZN6VECTOR6LENGTHEv( struct $6VECTOR* THIS$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$703:;
 double L$1;
 L$1 = ((*(double*)THIS$1 * *(double*)THIS$1) + (*(double*)((uint8*)THIS$1 + 8ll) * *(double*)((uint8*)THIS$1 + 8ll))) + (*(double*)((uint8*)THIS$1 + 16ll) * *(double*)((uint8*)THIS$1 + 16ll));
 if( L$1 == 0x0p+0 ) goto label$706;
 {
  L$1 = __builtin_sqrt( L$1 );
  label$706:;
 }
 fb$result$1 = L$1;
 goto label$704;
 label$704:;
 return fb$result$1;
}

struct $6VECTOR* _ZN6VECTOR10NORMALIZEDEv( struct $6VECTOR* tmp$1162$1, struct $6VECTOR* THIS$1 )
{
 struct $6VECTOR TMP$1163$1;
 label$707:;
 _ZN6VECTORC1Ev( tmp$1162$1 );
 double L$1;
 L$1 = ((*(double*)THIS$1 * *(double*)THIS$1) + (*(double*)((uint8*)THIS$1 + 8ll) * *(double*)((uint8*)THIS$1 + 8ll))) + (*(double*)((uint8*)THIS$1 + 16ll) * *(double*)((uint8*)THIS$1 + 16ll));
 if( L$1 == 0x0p+0 ) goto label$710;
 {
  L$1 = 0x1.p+0 / __builtin_sqrt( L$1 );
  label$710:;
 }
 _ZN6VECTORC1Edddd( &TMP$1163$1, *(double*)THIS$1 * L$1, *(double*)((uint8*)THIS$1 + 8ll) * L$1, *(double*)((uint8*)THIS$1 + 16ll) * L$1, 0x1.p+0 );
 __builtin_memcpy( tmp$1162$1, &TMP$1163$1, 32 );
 label$708:;
 return tmp$1162$1;
}

void _ZN6VECTOR9NORMALIZEEv( struct $6VECTOR* THIS$1 )
{
 label$711:;
 double L$1;
 L$1 = ((*(double*)THIS$1 * *(double*)THIS$1) + (*(double*)((uint8*)THIS$1 + 8ll) * *(double*)((uint8*)THIS$1 + 8ll))) + (*(double*)((uint8*)THIS$1 + 16ll) * *(double*)((uint8*)THIS$1 + 16ll));
 if( L$1 == 0x0p+0 ) goto label$714;
 {
  L$1 = 0x1.p+0 / __builtin_sqrt( L$1 );
  *(double*)THIS$1 = *(double*)THIS$1 * L$1;
  *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) * L$1;
  *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)THIS$1 + 16ll) * L$1;
 }
 label$714:;
 label$713:;
 label$712:;
}

uint32 _ZN6VECTORcvjEv( struct $6VECTOR* THIS$1 )
{
 int64 TMP$1164$1;
 int64 TMP$1165$1;
 int64 TMP$1166$1;
 int64 TMP$1167$1;
 int64 TMP$1168$1;
 int64 TMP$1169$1;
 int64 TMP$1170$1;
 int64 TMP$1171$1;
 uint32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$715:;
 uint32 UR$1;
 if( *(double*)THIS$1 >= 0x0p+0 ) goto label$718;
 TMP$1165$1 = 0ll;
 goto label$725;
 label$718:;
 if( *(double*)THIS$1 <= 0x1.p+0 ) goto label$717;
 TMP$1164$1 = 255ll;
 goto label$726;
 label$717:;
 TMP$1164$1 = (int64)(uint32)((int64)__builtin_nearbyint( *(double*)THIS$1 * 0x1.FEp+7 ));
 label$726:;
 TMP$1165$1 = TMP$1164$1;
 label$725:;
 UR$1 = (uint32)TMP$1165$1;
 uint32 UG$1;
 if( *(double*)((uint8*)THIS$1 + 8ll) >= 0x0p+0 ) goto label$720;
 TMP$1167$1 = 0ll;
 goto label$727;
 label$720:;
 if( *(double*)((uint8*)THIS$1 + 8ll) <= 0x1.p+0 ) goto label$719;
 TMP$1166$1 = 255ll;
 goto label$728;
 label$719:;
 TMP$1166$1 = (int64)(uint32)((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 8ll) * 0x1.FEp+7 ));
 label$728:;
 TMP$1167$1 = TMP$1166$1;
 label$727:;
 UG$1 = (uint32)TMP$1167$1;
 uint32 UB$1;
 if( *(double*)((uint8*)THIS$1 + 16ll) >= 0x0p+0 ) goto label$722;
 TMP$1169$1 = 0ll;
 goto label$729;
 label$722:;
 if( *(double*)((uint8*)THIS$1 + 16ll) <= 0x1.p+0 ) goto label$721;
 TMP$1168$1 = 255ll;
 goto label$730;
 label$721:;
 TMP$1168$1 = (int64)(uint32)((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 16ll) * 0x1.FEp+7 ));
 label$730:;
 TMP$1169$1 = TMP$1168$1;
 label$729:;
 UB$1 = (uint32)TMP$1169$1;
 uint32 UA$1;
 if( *(double*)((uint8*)THIS$1 + 24ll) >= 0x0p+0 ) goto label$724;
 TMP$1171$1 = 0ll;
 goto label$731;
 label$724:;
 if( *(double*)((uint8*)THIS$1 + 24ll) <= 0x1.p+0 ) goto label$723;
 TMP$1170$1 = 255ll;
 goto label$732;
 label$723:;
 TMP$1170$1 = (int64)(uint32)((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 24ll) * 0x1.FEp+7 ));
 label$732:;
 TMP$1171$1 = TMP$1170$1;
 label$731:;
 UA$1 = (uint32)TMP$1171$1;
 fb$result$1 = (uint32)(((((int64)(uint32)(uint8)UR$1 << (16ll & 63ll)) | ((int64)(uint32)(uint8)UG$1 << (8ll & 63ll))) | (int64)(uint32)(uint8)UB$1) | ((int64)(uint32)(uint8)UA$1 << (24ll & 63ll)));
 label$716:;
 return fb$result$1;
}

struct $6VECTOR* MIX( struct $6VECTOR* tmp$1172$1, struct $6VECTOR* L$1, struct $6VECTOR* R$1, double A$1 )
{
 struct $6VECTOR TMP$1173$1;
 label$733:;
 _ZN6VECTORC1Ev( tmp$1172$1 );
 double V$1;
 V$1 = 0x1.p+0 - A$1;
 _ZN6VECTORC1Edddd( &TMP$1173$1, (*(double*)L$1 * V$1) + (*(double*)R$1 * A$1), (*(double*)((uint8*)L$1 + 8ll) * V$1) + (*(double*)((uint8*)R$1 + 8ll) * A$1), (*(double*)((uint8*)L$1 + 16ll) * V$1) + (*(double*)((uint8*)R$1 + 16ll) * A$1), 0x1.p+0 );
 __builtin_memcpy( tmp$1172$1, &TMP$1173$1, 32 );
 label$734:;
 return tmp$1172$1;
}

struct $6VECTOR* REFLECT( struct $6VECTOR* tmp$1174$1, struct $6VECTOR* I$1, struct $6VECTOR* N$1 )
{
 struct $6VECTOR TMP$1175$1;
 struct $6VECTOR TMP$1176$1;
 label$735:;
 double vr$0 = _ZmlR6VECTORS0_( N$1, I$1 );
 struct $6VECTOR* vr$3 = _ZmldR6VECTOR( &TMP$1175$1, vr$0 * 0x1.p+1, N$1 );
 struct $6VECTOR* vr$5 = _ZmiR6VECTORS0_( &TMP$1176$1, I$1, vr$3 );
 _ZN6VECTORC1ERS_( tmp$1174$1, vr$5 );
 goto label$736;
 label$736:;
 return tmp$1174$1;
}

struct $6VECTOR* REFRACT( struct $6VECTOR* tmp$1177$1, struct $6VECTOR* I$1, struct $6VECTOR* N$1, double ETA$1 )
{
 label$737:;
 struct $6VECTOR R$1;
 _ZN6VECTORC1Ev( &R$1 );
 double DOTNI$1;
 double vr$1 = _ZmlR6VECTORS0_( N$1, I$1 );
 DOTNI$1 = vr$1;
 double K$1;
 K$1 = -((ETA$1 * ETA$1) * (-(DOTNI$1 * DOTNI$1) + 0x1.p+0)) + 0x1.p+0;
 if( K$1 >= 0x0p+0 ) goto label$740;
 {
  _ZN6VECTORC1ERS_( tmp$1177$1, &R$1 );
  goto label$738;
 }
 goto label$739;
 label$740:;
 if( K$1 != 0x0p+0 ) goto label$741;
 {
  struct $6VECTOR TMP$1178$2;
  struct $6VECTOR TMP$1179$2;
  struct $6VECTOR TMP$1180$2;
  struct $6VECTOR* vr$13 = _ZmldR6VECTOR( &TMP$1179$2, ETA$1 * DOTNI$1, N$1 );
  struct $6VECTOR* vr$15 = _ZmldR6VECTOR( &TMP$1178$2, ETA$1, I$1 );
  _ZmiR6VECTORS0_( &TMP$1180$2, vr$15, vr$13 );
  __builtin_memcpy( &R$1, &TMP$1180$2, 32 );
 }
 goto label$739;
 label$741:;
 {
  struct $6VECTOR TMP$1181$2;
  struct $6VECTOR TMP$1182$2;
  struct $6VECTOR TMP$1183$2;
  K$1 = __builtin_sqrt( K$1 );
  struct $6VECTOR* vr$23 = _ZmldR6VECTOR( &TMP$1182$2, (ETA$1 * DOTNI$1) + K$1, N$1 );
  struct $6VECTOR* vr$25 = _ZmldR6VECTOR( &TMP$1181$2, ETA$1, I$1 );
  _ZmiR6VECTORS0_( &TMP$1183$2, vr$25, vr$23 );
  __builtin_memcpy( &R$1, &TMP$1183$2, 32 );
 }
 label$739:;
 _ZN6VECTORC1ERS_( tmp$1177$1, &R$1 );
 goto label$738;
 label$738:;
 return tmp$1177$1;
}

void LATLONTOXYZ( double LAT$1, double LON$1, double* X$1, double* Y$1, double* Z$1 )
{
 label$796:;
 double R$1;
 R$1 = __builtin_cos( (LAT$1 * 0x1.1DF46A2529D39p-6) );
 *X$1 = R$1 * __builtin_cos( (LON$1 * 0x1.1DF46A2529D39p-6) );
 *Y$1 = __builtin_sin( (LAT$1 * 0x1.1DF46A2529D39p-6) );
 *Z$1 = R$1 * __builtin_sin( (LON$1 * 0x1.1DF46A2529D39p-6) );
 label$797:;
}

void _ZN9RAYTRACERC1Ev( struct $9RAYTRACER* THIS$1 )
{
 int64 TMP$1184$1;
 int64 TMP$1185$1;
 int64 TMP$1186$1;
 int64 TMP$1187$1;
 label$802:;
 int64 W$1;
 __builtin_memset( &W$1, 0, 8ll );
 int64 H$1;
 __builtin_memset( &H$1, 0, 8ll );
 _ZN8MATERIALC1Ev( (struct $8MATERIAL*)THIS$1 );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 424ll), 0, 8ll );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 432ll), 0, 8ll );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 440ll), 0, 8ll );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 448ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 456ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 464ll), 0, 8ll );
 _ZN6VECTORC1Ev( (struct $6VECTOR*)((uint8*)THIS$1 + 472ll) );
 __builtin_memset( (double*)((uint8*)THIS$1 + 504ll), 0, 8ll );
 _ZN6VECTORC1Ev( (struct $6VECTOR*)((uint8*)THIS$1 + 512ll) );
 __builtin_memset( (double*)((uint8*)THIS$1 + 544ll), 0, 8ll );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 552ll), 0, 8ll );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 560ll), 0, 8ll );
 _ZN6VECTORC1Ev( (struct $6VECTOR*)((uint8*)THIS$1 + 568ll) );
 _ZN6VECTORC1Ev( (struct $6VECTOR*)((uint8*)THIS$1 + 600ll) );
 _ZN6VECTORC1Ev( (struct $6VECTOR*)((uint8*)THIS$1 + 632ll) );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 664ll), 0, 8ll );
 __builtin_memset( (struct $8MATERIAL***)((uint8*)THIS$1 + 672ll), 0, 8ll );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 680ll), 0, 8ll );
 __builtin_memset( (struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll), 0, 8ll );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 696ll), 0, 8ll );
 __builtin_memset( (struct $5LIGHT***)((uint8*)THIS$1 + 704ll), 0, 8ll );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 712ll), 0, 8ll );
 __builtin_memset( (struct $5MAP2D***)((uint8*)THIS$1 + 720ll), 0, 8ll );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 728ll), 0, 8ll );
 __builtin_memset( (struct $7AAPIXEL***)((uint8*)THIS$1 + 736ll), 0, 8ll );
 FBSTRING* vr$54 = fb_StrAllocTempDescZEx( (uint8*)"", 0ll );
 TMP$1187$1 = 0ll;
 TMP$1186$1 = 0ll;
 TMP$1185$1 = 0ll;
 TMP$1184$1 = 0ll;
 fb_GfxScreenInfo64( (int64*)&W$1, (int64*)&H$1, &TMP$1184$1, &TMP$1185$1, &TMP$1186$1, &TMP$1187$1, vr$54 );
 _ZN9RAYTRACER4INITElll( THIS$1, ((int64)__builtin_nearbyint( (double)W$1 * 0x1.999999999999Ap-1 )), ((int64)__builtin_nearbyint( (double)H$1 * 0x1.999999999999Ap-1 )), 5ll );
 label$803:;
}

void _ZN9RAYTRACERC1Elll( struct $9RAYTRACER* THIS$1, int64 W$1, int64 H$1, int64 MD$1 )
{
 label$804:;
 _ZN8MATERIALC1Ev( (struct $8MATERIAL*)THIS$1 );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 424ll), 0, 8ll );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 432ll), 0, 8ll );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 440ll), 0, 8ll );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 448ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 456ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 464ll), 0, 8ll );
 _ZN6VECTORC1Ev( (struct $6VECTOR*)((uint8*)THIS$1 + 472ll) );
 __builtin_memset( (double*)((uint8*)THIS$1 + 504ll), 0, 8ll );
 _ZN6VECTORC1Ev( (struct $6VECTOR*)((uint8*)THIS$1 + 512ll) );
 __builtin_memset( (double*)((uint8*)THIS$1 + 544ll), 0, 8ll );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 552ll), 0, 8ll );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 560ll), 0, 8ll );
 _ZN6VECTORC1Ev( (struct $6VECTOR*)((uint8*)THIS$1 + 568ll) );
 _ZN6VECTORC1Ev( (struct $6VECTOR*)((uint8*)THIS$1 + 600ll) );
 _ZN6VECTORC1Ev( (struct $6VECTOR*)((uint8*)THIS$1 + 632ll) );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 664ll), 0, 8ll );
 __builtin_memset( (struct $8MATERIAL***)((uint8*)THIS$1 + 672ll), 0, 8ll );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 680ll), 0, 8ll );
 __builtin_memset( (struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll), 0, 8ll );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 696ll), 0, 8ll );
 __builtin_memset( (struct $5LIGHT***)((uint8*)THIS$1 + 704ll), 0, 8ll );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 712ll), 0, 8ll );
 __builtin_memset( (struct $5MAP2D***)((uint8*)THIS$1 + 720ll), 0, 8ll );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 728ll), 0, 8ll );
 __builtin_memset( (struct $7AAPIXEL***)((uint8*)THIS$1 + 736ll), 0, 8ll );
 _ZN9RAYTRACER4INITElll( THIS$1, W$1, H$1, MD$1 );
 label$805:;
}

void _ZN9RAYTRACERD1Ev( struct $9RAYTRACER* THIS$1 )
{
 label$806:;
 if( *(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) == (struct $5MAP2D**)0ull ) goto label$809;
 {
  if( *(int64*)((uint8*)THIS$1 + 712ll) <= 0ll ) goto label$811;
  {
   {
    int64 I$4;
    I$4 = 0ll;
    int64 TMP$1188$4;
    TMP$1188$4 = *(int64*)((uint8*)THIS$1 + 712ll) + -1ll;
    goto label$812;
    label$815:;
    {
     if( *(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (I$4 << (3ll & 63ll))) == (struct $5MAP2D*)0ull ) goto label$817;
     {
      if( *(uint8**)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (I$4 << (3ll & 63ll))) + 168ll) == (uint8*)0ull ) goto label$819;
      {
       free( *(void**)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (I$4 << (3ll & 63ll))) + 168ll) );
       *(uint8**)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (I$4 << (3ll & 63ll))) + 168ll) = (uint8*)0ull;
      }
      label$819:;
      label$818:;
      free( *(void**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (I$4 << (3ll & 63ll))) );
      *(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (I$4 << (3ll & 63ll))) = (struct $5MAP2D*)0ull;
     }
     label$817:;
     label$816:;
    }
    label$813:;
    I$4 = I$4 + 1ll;
    label$812:;
    if( I$4 <= TMP$1188$4 ) goto label$815;
    label$814:;
   }
   *(int64*)((uint8*)THIS$1 + 712ll) = 0ll;
  }
  label$811:;
  label$810:;
  free( *(void**)((uint8*)THIS$1 + 720ll) );
  *(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) = (struct $5MAP2D**)0ull;
 }
 label$809:;
 label$808:;
 if( *(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) == (struct $8MATERIAL**)0ull ) goto label$821;
 {
  if( *(int64*)((uint8*)THIS$1 + 664ll) <= 0ll ) goto label$823;
  {
   {
    int64 MC$4;
    MC$4 = 0ll;
    int64 TMP$1189$4;
    TMP$1189$4 = *(int64*)((uint8*)THIS$1 + 664ll) + -1ll;
    goto label$824;
    label$827:;
    {
     if( *(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MC$4 << (3ll & 63ll))) == (struct $8MATERIAL*)0ull ) goto label$829;
     {
      free( *(void**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MC$4 << (3ll & 63ll))) );
      *(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MC$4 << (3ll & 63ll))) = (struct $8MATERIAL*)0ull;
     }
     label$829:;
     label$828:;
    }
    label$825:;
    MC$4 = MC$4 + 1ll;
    label$824:;
    if( MC$4 <= TMP$1189$4 ) goto label$827;
    label$826:;
   }
   *(int64*)((uint8*)THIS$1 + 664ll) = 0ll;
  }
  label$823:;
  label$822:;
  free( *(void**)((uint8*)THIS$1 + 672ll) );
  *(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) = (struct $8MATERIAL**)0ull;
 }
 label$821:;
 label$820:;
 if( *(struct $5LIGHT***)((uint8*)THIS$1 + 704ll) == (struct $5LIGHT**)0ull ) goto label$831;
 {
  if( *(int64*)((uint8*)THIS$1 + 696ll) <= 0ll ) goto label$833;
  {
   {
    int64 LC$4;
    LC$4 = 0ll;
    int64 TMP$1190$4;
    TMP$1190$4 = *(int64*)((uint8*)THIS$1 + 696ll) + -1ll;
    goto label$834;
    label$837:;
    {
     if( *(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 704ll) + (LC$4 << (3ll & 63ll))) == (struct $5LIGHT*)0ull ) goto label$839;
     {
      free( *(void**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 704ll) + (LC$4 << (3ll & 63ll))) );
      *(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 704ll) + (LC$4 << (3ll & 63ll))) = (struct $5LIGHT*)0ull;
     }
     label$839:;
     label$838:;
    }
    label$835:;
    LC$4 = LC$4 + 1ll;
    label$834:;
    if( LC$4 <= TMP$1190$4 ) goto label$837;
    label$836:;
   }
   *(int64*)((uint8*)THIS$1 + 696ll) = 0ll;
  }
  label$833:;
  label$832:;
  free( *(void**)((uint8*)THIS$1 + 704ll) );
  *(struct $5LIGHT***)((uint8*)THIS$1 + 704ll) = (struct $5LIGHT**)0ull;
 }
 label$831:;
 label$830:;
 if( *(struct $7AAPIXEL***)((uint8*)THIS$1 + 736ll) == (struct $7AAPIXEL**)0ull ) goto label$841;
 {
  if( *(int64*)((uint8*)THIS$1 + 728ll) <= 0ll ) goto label$843;
  {
   {
    int64 I$4;
    I$4 = 0ll;
    int64 TMP$1191$4;
    TMP$1191$4 = *(int64*)((uint8*)THIS$1 + 728ll) + -1ll;
    goto label$844;
    label$847:;
    {
     if( *(struct $7AAPIXEL**)((uint8*)*(struct $7AAPIXEL***)((uint8*)THIS$1 + 736ll) + (I$4 << (3ll & 63ll))) == (struct $7AAPIXEL*)0ull ) goto label$849;
     {
      free( *(void**)((uint8*)*(struct $7AAPIXEL***)((uint8*)THIS$1 + 736ll) + (I$4 << (3ll & 63ll))) );
      *(struct $7AAPIXEL**)((uint8*)*(struct $7AAPIXEL***)((uint8*)THIS$1 + 736ll) + (I$4 << (3ll & 63ll))) = (struct $7AAPIXEL*)0ull;
     }
     label$849:;
     label$848:;
    }
    label$845:;
    I$4 = I$4 + 1ll;
    label$844:;
    if( I$4 <= TMP$1191$4 ) goto label$847;
    label$846:;
   }
   *(int64*)((uint8*)THIS$1 + 728ll) = 0ll;
  }
  label$843:;
  label$842:;
  free( *(void**)((uint8*)THIS$1 + 736ll) );
  *(struct $7AAPIXEL***)((uint8*)THIS$1 + 736ll) = (struct $7AAPIXEL**)0ull;
 }
 label$841:;
 label$840:;
 if( *(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) == (struct $8OBJECT3D**)0ull ) goto label$851;
 {
  if( *(int64*)((uint8*)THIS$1 + 680ll) <= 0ll ) goto label$853;
  {
   {
    int64 OC$4;
    OC$4 = 0ll;
    int64 TMP$1192$4;
    TMP$1192$4 = *(int64*)((uint8*)THIS$1 + 680ll) + -1ll;
    goto label$854;
    label$857:;
    {
     if( *(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OC$4 << (3ll & 63ll))) == (struct $8OBJECT3D*)0ull ) goto label$859;
     {
      if( *(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OC$4 << (3ll & 63ll))) + 184ll) == (struct $4POLY**)0ull ) goto label$861;
      {
       if( *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OC$4 << (3ll & 63ll))) + 176ll) <= 0ll ) goto label$863;
       {
        {
         int64 PC$9;
         PC$9 = 0ll;
         int64 TMP$1193$9;
         TMP$1193$9 = *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OC$4 << (3ll & 63ll))) + 176ll) + -1ll;
         goto label$864;
         label$867:;
         {
          if( *(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OC$4 << (3ll & 63ll))) + 184ll) + (PC$9 << (3ll & 63ll))) == (struct $4POLY*)0ull ) goto label$869;
          {
           free( *(void**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OC$4 << (3ll & 63ll))) + 184ll) + (PC$9 << (3ll & 63ll))) );
           *(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OC$4 << (3ll & 63ll))) + 184ll) + (PC$9 << (3ll & 63ll))) = (struct $4POLY*)0ull;
          }
          label$869:;
          label$868:;
         }
         label$865:;
         PC$9 = PC$9 + 1ll;
         label$864:;
         if( PC$9 <= TMP$1193$9 ) goto label$867;
         label$866:;
        }
        *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OC$4 << (3ll & 63ll))) + 176ll) = 0ll;
       }
       label$863:;
       label$862:;
       free( *(void**)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OC$4 << (3ll & 63ll))) + 184ll) );
       *(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OC$4 << (3ll & 63ll))) + 184ll) = (struct $4POLY**)0ull;
      }
      label$861:;
      label$860:;
      if( *(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OC$4 << (3ll & 63ll))) + 168ll) == (struct $6VECTOR**)0ull ) goto label$871;
      {
       if( *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OC$4 << (3ll & 63ll))) + 160ll) <= 0ll ) goto label$873;
       {
        {
         int64 VC$9;
         VC$9 = 0ll;
         int64 TMP$1194$9;
         TMP$1194$9 = *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OC$4 << (3ll & 63ll))) + 160ll) + -1ll;
         goto label$874;
         label$877:;
         {
          if( *(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OC$4 << (3ll & 63ll))) + 168ll) + (VC$9 << (3ll & 63ll))) == (struct $6VECTOR*)0ull ) goto label$879;
          {
           if( *(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OC$4 << (3ll & 63ll))) + 168ll) + (VC$9 << (3ll & 63ll))) == (struct $6VECTOR*)0ull ) goto label$880;
           free( *(void**)((uint8*)*(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OC$4 << (3ll & 63ll))) + 168ll) + (VC$9 << (3ll & 63ll))) );
           label$880:;
           *(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OC$4 << (3ll & 63ll))) + 168ll) + (VC$9 << (3ll & 63ll))) = (struct $6VECTOR*)0ull;
          }
          label$879:;
          label$878:;
         }
         label$875:;
         VC$9 = VC$9 + 1ll;
         label$874:;
         if( VC$9 <= TMP$1194$9 ) goto label$877;
         label$876:;
        }
       }
       label$873:;
       label$872:;
       if( *(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OC$4 << (3ll & 63ll))) + 168ll) == (struct $6VECTOR**)0ull ) goto label$881;
       free( *(void**)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OC$4 << (3ll & 63ll))) + 168ll) );
       label$881:;
       *(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OC$4 << (3ll & 63ll))) + 168ll) = (struct $6VECTOR**)0ull;
      }
      label$871:;
      label$870:;
      free( *(void**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OC$4 << (3ll & 63ll))) );
      *(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OC$4 << (3ll & 63ll))) = (struct $8OBJECT3D*)0ull;
     }
     label$859:;
     label$858:;
    }
    label$855:;
    OC$4 = OC$4 + 1ll;
    label$854:;
    if( OC$4 <= TMP$1192$4 ) goto label$857;
    label$856:;
   }
   *(int64*)((uint8*)THIS$1 + 680ll) = 0ll;
  }
  label$853:;
  label$852:;
  free( *(void**)((uint8*)THIS$1 + 688ll) );
  *(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) = (struct $8OBJECT3D**)0ull;
 }
 label$851:;
 label$850:;
 label$807:;
}

void _ZN9RAYTRACER4INITElll( struct $9RAYTRACER* THIS$1, int64 W$1, int64 H$1, int64 MAXDEPTH$1 )
{
 int64 TMP$1195$1;
 label$882:;
 if( W$1 >= 4ll ) goto label$885;
 {
  W$1 = 4ll;
  label$885:;
 }
 if( H$1 >= 4ll ) goto label$887;
 {
  H$1 = 4ll;
  label$887:;
 }
 *(int64*)((uint8*)THIS$1 + 424ll) = W$1;
 *(int64*)((uint8*)THIS$1 + 440ll) = ((int64)__builtin_nearbyint( (double)W$1 * 0x1.p-1 ));
 *(int64*)((uint8*)THIS$1 + 432ll) = H$1;
 *(int64*)((uint8*)THIS$1 + 448ll) = ((int64)__builtin_nearbyint( (double)H$1 * 0x1.p-1 ));
 if( W$1 <= H$1 ) goto label$888;
 TMP$1195$1 = W$1;
 goto label$891;
 label$888:;
 TMP$1195$1 = H$1;
 label$891:;
 *(double*)((uint8*)THIS$1 + 456ll) = (double)TMP$1195$1;
 *(double*)((uint8*)THIS$1 + 464ll) = 0x1.p+0 / *(double*)((uint8*)THIS$1 + 456ll);
 *(double*)((uint8*)THIS$1 + 512ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 520ll) = 0x1.p-1;
 *(double*)((uint8*)THIS$1 + 528ll) = 0x1.p-1;
 *(double*)((uint8*)THIS$1 + 472ll) = 0x1.999999999999Ap-4;
 *(double*)((uint8*)THIS$1 + 480ll) = 0x1.999999999999Ap-4;
 *(double*)((uint8*)THIS$1 + 488ll) = 0x1.999999999999Ap-4;
 *(int64*)((uint8*)THIS$1 + 552ll) = MAXDEPTH$1;
 if( *(int64*)((uint8*)THIS$1 + 552ll) >= 0ll ) goto label$890;
 {
  *(int64*)((uint8*)THIS$1 + 552ll) = 0ll;
  label$890:;
 }
 _ZN9RAYTRACER11ADDMATERIALEddddddddddaaallll( THIS$1, 0x1.p-1, 0x1.p-1, 0x1.p-1, 0x1.6666666666666p-1, 0x1.3333333333333p-2, 0x1.p-2, 0x1.999999999999Ap-1, 0x1.999999999999Ap-3, 0x0p+0, 0x0p+0, (int8)-1, (int8)-1, (int8)-1, -1ll, -1ll, -1ll, -1ll );
 label$883:;
}

void _ZN9RAYTRACER6ADJUSTEPddd( struct $9RAYTRACER* THIS$1, double* ADJVALUE$1, double MINVALUE$1, double MAXVALUE$1 )
{
 label$892:;
 if( ADJVALUE$1 == (double*)0ull ) goto label$895;
 {
  if( *ADJVALUE$1 >= MINVALUE$1 ) goto label$897;
  {
   *ADJVALUE$1 = MINVALUE$1;
  }
  goto label$896;
  label$897:;
  if( *ADJVALUE$1 <= MAXVALUE$1 ) goto label$898;
  {
   *ADJVALUE$1 = MAXVALUE$1;
  }
  label$898:;
  label$896:;
 }
 label$895:;
 label$894:;
 label$893:;
}

int64 _ZN9RAYTRACER8ADDMAP2DER8FBSTRING11MAP2D_TYPESddd( struct $9RAYTRACER* THIS$1, FBSTRING* FILENAME$1, $11MAP2D_TYPES MAPTYPE$1, double REPEATX$1, double REPEATY$1, double REPEATZ$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$899:;
 int64 I$1;
 __builtin_memset( &I$1, 0, 8ll );
 int64 C$1;
 __builtin_memset( &C$1, 0, 8ll );
 int64 RR$1;
 __builtin_memset( &RR$1, 0, 8ll );
 int64 REAL_PITCH$1;
 __builtin_memset( &REAL_PITCH$1, 0, 8ll );
 int64 TARGETADD$1;
 __builtin_memset( &TARGETADD$1, 0, 8ll );
 int64 SOURCEADD$1;
 __builtin_memset( &SOURCEADD$1, 0, 8ll );
 int64 HFILE$1;
 __builtin_memset( &HFILE$1, 0, 8ll );
 uint8 ONEBYTE$1;
 __builtin_memset( &ONEBYTE$1, 0, 1ll );
 uint8* LREAL_PIMAGE$1;
 __builtin_memset( &LREAL_PIMAGE$1, 0, 8ll );
 uint8* LPSOURCEROW$1;
 __builtin_memset( &LPSOURCEROW$1, 0, 8ll );
 uint8* LPTARGETROW$1;
 __builtin_memset( &LPTARGETROW$1, 0, 8ll );
 double R$1;
 __builtin_memset( &R$1, 0, 8ll );
 double G$1;
 __builtin_memset( &G$1, 0, 8ll );
 double B$1;
 __builtin_memset( &B$1, 0, 8ll );
 struct $N9RAYTRACER7FBARRAYI8PALENTRYEE {
  struct $8PALENTRY* DATA;
  struct $8PALENTRY* PTR;
  int64 SIZE;
  int64 ELEMENT_LEN;
  int64 DIMENSIONS;
  int64 FLAGS;
  struct $16__FB_ARRAYDIMTB$ DIMTB[8];
 };
 extern int __$fb_structsizecheck[(sizeof( struct $N9RAYTRACER7FBARRAYI8PALENTRYEE ) == 240) ? 1 : -1];
 struct $N9RAYTRACER7FBARRAYI8PALENTRYEE PAL$1;
 *(struct $8PALENTRY**)&PAL$1 = (struct $8PALENTRY*)0ull;
 *(struct $8PALENTRY**)((uint8*)&PAL$1 + 8ll) = (struct $8PALENTRY*)0ull;
 *(int64*)((uint8*)&PAL$1 + 16ll) = 0ll;
 *(int64*)((uint8*)&PAL$1 + 24ll) = 154ll;
 *(int64*)((uint8*)&PAL$1 + 32ll) = 0ll;
 *(int64*)((uint8*)&PAL$1 + 40ll) = 8ll;
 __builtin_memset( (void*)((uint8*)&PAL$1 + 48ll), 0, 192ll );
 struct $9BMPHEADER HEADER$1;
 _ZN9BMPHEADERC1Ev( &HEADER$1 );
 if( REPEATX$1 >= 0x1.0624DD2F1A9FCp-10 ) goto label$902;
 {
  REPEATX$1 = 0x1.0624DD2F1A9FCp-10;
  label$902:;
 }
 if( REPEATY$1 >= 0x1.0624DD2F1A9FCp-10 ) goto label$904;
 {
  REPEATY$1 = 0x1.0624DD2F1A9FCp-10;
  label$904:;
 }
 if( REPEATZ$1 >= 0x1.0624DD2F1A9FCp-10 ) goto label$906;
 {
  REPEATZ$1 = 0x1.0624DD2F1A9FCp-10;
  label$906:;
 }
 int32 vr$17 = fb_FileFree( );
 HFILE$1 = (int64)vr$17;
 int32 vr$20 = fb_FileOpen( (FBSTRING*)FILENAME$1, 0u, 1u, 0u, (int32)HFILE$1, 0 );
 if( (int64)vr$20 != 0ll ) goto label$908;
 {
  int64 vr$23 = fb_FileSize( (int32)HFILE$1 );
  if( vr$23 >= 44ll ) goto label$910;
  {
   fb_FileClose( (int32)HFILE$1 );
   fb$result$1 = -1ll;
   fb_ArrayEraseObj( (struct $7FBARRAYIvE*)&PAL$1, (void*)&_ZN8PALENTRYC1Ev, (void*)0ull );
   goto label$900;
  }
  label$910:;
  label$909:;
  fb_FileGetLarge( (int32)HFILE$1, 0ll, (void*)&HEADER$1, 150ull );
  if( (int64)*(uint16*)((uint8*)&HEADER$1 + 96ll) == 19778ll ) goto label$912;
  {
   fb_FileClose( (int32)HFILE$1 );
   fb$result$1 = -1ll;
   fb_ArrayEraseObj( (struct $7FBARRAYIvE*)&PAL$1, (void*)&_ZN8PALENTRYC1Ev, (void*)0ull );
   goto label$900;
  }
  label$912:;
  label$911:;
  if( (int64)*(int32*)((uint8*)&HEADER$1 + 126ll) == 0ll ) goto label$914;
  {
   fb_FileClose( (int32)HFILE$1 );
   fb$result$1 = -1ll;
   fb_ArrayEraseObj( (struct $7FBARRAYIvE*)&PAL$1, (void*)&_ZN8PALENTRYC1Ev, (void*)0ull );
   goto label$900;
  }
  label$914:;
  label$913:;
  if( (int64)*(int16*)((uint8*)&HEADER$1 + 124ll) >= 8ll ) goto label$916;
  {
   fb_FileClose( (int32)HFILE$1 );
   fb$result$1 = -1ll;
   fb_ArrayEraseObj( (struct $7FBARRAYIvE*)&PAL$1, (void*)&_ZN8PALENTRYC1Ev, (void*)0ull );
   goto label$900;
  }
  label$916:;
  label$915:;
  {
   int64 TMP$1198$3;
   if( (int64)*(int32*)((uint8*)&HEADER$1 + 110ll) <= 40ll ) goto label$918;
   {
    {
     I$1 = 1ll;
     int64 TMP$1196$5;
     TMP$1196$5 = (int64)*(int32*)((uint8*)&HEADER$1 + 110ll) + -40ll;
     goto label$919;
     label$922:;
     {
      fb_FileGetLarge( (int32)HFILE$1, 0ll, (void*)&ONEBYTE$1, 1ull );
     }
     label$920:;
     I$1 = I$1 + 1ll;
     label$919:;
     if( I$1 <= TMP$1196$5 ) goto label$922;
     label$921:;
    }
   }
   label$918:;
   label$917:;
   if( (int64)*(int16*)((uint8*)&HEADER$1 + 124ll) != 8ll ) goto label$924;
   {
    if( (int64)*(int32*)((uint8*)&HEADER$1 + 142ll) != 0ll ) goto label$926;
    {
     *(int32*)((uint8*)&HEADER$1 + 142ll) = 256;
     label$926:;
    }
    fb_ArrayRedimObj( (struct $7FBARRAYIvE*)&PAL$1, 154ull, (void*)&_ZN8PALENTRYC1Ev, (void*)0ull, 1ull, 0ll, (int64)*(int32*)((uint8*)&HEADER$1 + 142ll) + -1ll );
    fb_FileGetArrayLarge( (int32)HFILE$1, 0ll, (struct $7FBARRAYIvE*)&PAL$1 );
   }
   label$924:;
   label$923:;
   fb_FileSeek( (int32)HFILE$1, *(int32*)((uint8*)&HEADER$1 + 106ll) );
   void* vr$52 = calloc( (uint64)*(int32*)((uint8*)&HEADER$1 + 130ll), 1ull );
   LREAL_PIMAGE$1 = (uint8*)vr$52;
   fb_FileGetLarge( (int32)HFILE$1, 0ll, (void*)LREAL_PIMAGE$1, (uint64)(int64)*(int32*)((uint8*)&HEADER$1 + 130ll) );
   fb_FileClose( (int32)HFILE$1 );
   *(int16*)((uint8*)&HEADER$1 + 124ll) = (int16)((int64)*(int16*)((uint8*)&HEADER$1 + 124ll) >> (3ll & 63ll));
   void* vr$63 = realloc( *(void**)((uint8*)THIS$1 + 720ll), (uint64)((*(int64*)((uint8*)THIS$1 + 712ll) << (3ll & 63ll)) + 8ll) );
   *(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) = (struct $5MAP2D**)vr$63;
   void* vr$65 = malloc( 208ull );
   *(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (*(int64*)((uint8*)THIS$1 + 712ll) << (3ll & 63ll))) = (struct $5MAP2D*)vr$65;
   _ZN9BMPHEADERaSERKS_( (struct $9BMPHEADER*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (*(int64*)((uint8*)THIS$1 + 712ll) << (3ll & 63ll))) + 16ll), (struct $9BMPHEADER*)&HEADER$1 );
   *($11MAP2D_TYPES*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (*(int64*)((uint8*)THIS$1 + 712ll) << (3ll & 63ll))) + 8ll) = MAPTYPE$1;
   *(double*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (*(int64*)((uint8*)THIS$1 + 712ll) << (3ll & 63ll))) + 176ll) = REPEATX$1;
   *(double*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (*(int64*)((uint8*)THIS$1 + 712ll) << (3ll & 63ll))) + 184ll) = REPEATY$1;
   *(double*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (*(int64*)((uint8*)THIS$1 + 712ll) << (3ll & 63ll))) + 192ll) = REPEATZ$1;
   if( (int64)*(int32*)((uint8*)&HEADER$1 + 118ll) >= 0ll ) goto label$927;
   TMP$1198$3 = -(int64)*(int32*)((uint8*)&HEADER$1 + 118ll);
   goto label$984;
   label$927:;
   TMP$1198$3 = (int64)*(int32*)((uint8*)&HEADER$1 + 118ll);
   label$984:;
   REAL_PITCH$1 = (int64)*(int32*)((uint8*)&HEADER$1 + 130ll) / TMP$1198$3;
   REAL_PITCH$1 = REAL_PITCH$1 - ((int64)*(int32*)((uint8*)&HEADER$1 + 114ll) * (int64)*(int16*)((uint8*)&HEADER$1 + 124ll));
   {
    if( MAPTYPE$1 != 0ll ) goto label$929;
    label$930:;
    {
     int64 TMP$1199$5;
     if( (int64)*(int32*)((uint8*)&HEADER$1 + 118ll) >= 0ll ) goto label$931;
     TMP$1199$5 = -(int64)*(int32*)((uint8*)&HEADER$1 + 118ll);
     goto label$985;
     label$931:;
     TMP$1199$5 = (int64)*(int32*)((uint8*)&HEADER$1 + 118ll);
     label$985:;
     void* vr$114 = malloc( (uint64)(((int64)*(int32*)((uint8*)&HEADER$1 + 114ll) * TMP$1199$5) * 3ll) );
     *(uint8**)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (*(int64*)((uint8*)THIS$1 + 712ll) << (3ll & 63ll))) + 168ll) = (uint8*)vr$114;
     TARGETADD$1 = (int64)*(int32*)((uint8*)&HEADER$1 + 114ll) * 3ll;
    }
    goto label$928;
    label$929:;
    {
     int64 TMP$1200$5;
     if( (int64)*(int32*)((uint8*)&HEADER$1 + 118ll) >= 0ll ) goto label$933;
     TMP$1200$5 = -(int64)*(int32*)((uint8*)&HEADER$1 + 118ll);
     goto label$986;
     label$933:;
     TMP$1200$5 = (int64)*(int32*)((uint8*)&HEADER$1 + 118ll);
     label$986:;
     void* vr$128 = malloc( (uint64)((int64)*(int32*)((uint8*)&HEADER$1 + 114ll) * TMP$1200$5) );
     *(uint8**)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (*(int64*)((uint8*)THIS$1 + 712ll) << (3ll & 63ll))) + 168ll) = (uint8*)vr$128;
     TARGETADD$1 = (int64)*(int32*)((uint8*)&HEADER$1 + 114ll);
    }
    label$932:;
    label$928:;
   }
   LPSOURCEROW$1 = LREAL_PIMAGE$1;
   SOURCEADD$1 = ((int64)*(int32*)((uint8*)&HEADER$1 + 114ll) * (int64)*(int16*)((uint8*)&HEADER$1 + 124ll)) + REAL_PITCH$1;
   LPTARGETROW$1 = *(uint8**)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (*(int64*)((uint8*)THIS$1 + 712ll) << (3ll & 63ll))) + 168ll);
   if( (int64)*(int32*)((uint8*)&HEADER$1 + 118ll) >= 0ll ) goto label$935;
   {
    int64 TMP$1201$4;
    if( (int64)*(int32*)((uint8*)&HEADER$1 + 118ll) >= 0ll ) goto label$936;
    TMP$1201$4 = -(int64)*(int32*)((uint8*)&HEADER$1 + 118ll);
    goto label$987;
    label$936:;
    TMP$1201$4 = (int64)*(int32*)((uint8*)&HEADER$1 + 118ll);
    label$987:;
    *(int32*)((uint8*)&HEADER$1 + 118ll) = (int32)TMP$1201$4;
    SOURCEADD$1 = SOURCEADD$1 * -1ll;
    LPSOURCEROW$1 = (uint8*)(LREAL_PIMAGE$1 + (((int64)*(int32*)((uint8*)&HEADER$1 + 118ll) + -1ll) * SOURCEADD$1));
   }
   label$935:;
   label$934:;
   {
    int16 TMP$1202$4;
    TMP$1202$4 = *(int16*)((uint8*)&HEADER$1 + 124ll);
    if( (int64)TMP$1202$4 != 1ll ) goto label$938;
    label$939:;
    {
     {
      if( MAPTYPE$1 != 0ll ) goto label$941;
      label$942:;
      {
       {
        RR$1 = 0ll;
        int64 TMP$1203$8;
        TMP$1203$8 = (int64)*(int32*)((uint8*)&HEADER$1 + 118ll) + -1ll;
        goto label$943;
        label$946:;
        {
         {
          C$1 = 0ll;
          int64 TMP$1204$10;
          TMP$1204$10 = (int64)*(int32*)((uint8*)&HEADER$1 + 114ll) + -1ll;
          goto label$947;
          label$950:;
          {
           I$1 = (int64)*(uint8*)(LPSOURCEROW$1 + C$1);
           *(uint8*)(LPTARGETROW$1 + (C$1 * 3ll)) = *(uint8*)((uint8*)((I$1 * 154ll) + *(int64*)&PAL$1) + 152ll);
           *(uint8*)((uint8*)(LPTARGETROW$1 + (C$1 * 3ll)) + 1ll) = *(uint8*)((uint8*)((I$1 * 154ll) + *(int64*)&PAL$1) + 151ll);
           *(uint8*)((uint8*)(LPTARGETROW$1 + (C$1 * 3ll)) + 2ll) = *(uint8*)((uint8*)((I$1 * 154ll) + *(int64*)&PAL$1) + 150ll);
          }
          label$948:;
          C$1 = C$1 + 1ll;
          label$947:;
          if( C$1 <= TMP$1204$10 ) goto label$950;
          label$949:;
         }
         LPTARGETROW$1 = (uint8*)(LPTARGETROW$1 + TARGETADD$1);
         LPSOURCEROW$1 = (uint8*)(LPSOURCEROW$1 + SOURCEADD$1);
        }
        label$944:;
        RR$1 = RR$1 + 1ll;
        label$943:;
        if( RR$1 <= TMP$1203$8 ) goto label$946;
        label$945:;
       }
      }
      goto label$940;
      label$941:;
      {
       {
        RR$1 = 0ll;
        int64 TMP$1205$8;
        TMP$1205$8 = (int64)*(int32*)((uint8*)&HEADER$1 + 118ll) + -1ll;
        goto label$952;
        label$955:;
        {
         {
          C$1 = 0ll;
          int64 TMP$1206$10;
          TMP$1206$10 = (int64)*(int32*)((uint8*)&HEADER$1 + 114ll) + -1ll;
          goto label$956;
          label$959:;
          {
           I$1 = (int64)*(uint8*)(LPSOURCEROW$1 + C$1);
           R$1 = (double)(int64)*(uint8*)((uint8*)((I$1 * 154ll) + *(int64*)&PAL$1) + 150ll) * 0x1.010101010101p-8;
           G$1 = (double)(int64)*(uint8*)((uint8*)((I$1 * 154ll) + *(int64*)&PAL$1) + 151ll) * 0x1.010101010101p-8;
           B$1 = (double)(int64)*(uint8*)((uint8*)((I$1 * 154ll) + *(int64*)&PAL$1) + 152ll) * 0x1.010101010101p-8;
           *(uint8*)(LPTARGETROW$1 + C$1) = (uint8)((int32)__builtin_nearbyint( __builtin_sqrt( (((R$1 * R$1) + (G$1 * G$1)) + (B$1 * B$1)) ) * 0x1.FEp+7 ));
          }
          label$957:;
          C$1 = C$1 + 1ll;
          label$956:;
          if( C$1 <= TMP$1206$10 ) goto label$959;
          label$958:;
         }
         LPTARGETROW$1 = (uint8*)(LPTARGETROW$1 + TARGETADD$1);
         LPSOURCEROW$1 = (uint8*)(LPSOURCEROW$1 + SOURCEADD$1);
        }
        label$953:;
        RR$1 = RR$1 + 1ll;
        label$952:;
        if( RR$1 <= TMP$1205$8 ) goto label$955;
        label$954:;
       }
      }
      label$951:;
      label$940:;
     }
    }
    goto label$937;
    label$938:;
    if( (int64)TMP$1202$4 != 3ll ) goto label$960;
    label$961:;
    {
     {
      if( MAPTYPE$1 != 0ll ) goto label$963;
      label$964:;
      {
       {
        RR$1 = 0ll;
        int64 TMP$1207$8;
        TMP$1207$8 = (int64)*(int32*)((uint8*)&HEADER$1 + 118ll) + -1ll;
        goto label$965;
        label$968:;
        {
         {
          C$1 = 0ll;
          int64 TMP$1208$10;
          TMP$1208$10 = (int64)*(int32*)((uint8*)&HEADER$1 + 114ll) + -1ll;
          goto label$969;
          label$972:;
          {
           *(uint8*)(LPTARGETROW$1 + (C$1 * 3ll)) = *(uint8*)(LPSOURCEROW$1 + (C$1 * (int64)*(int16*)((uint8*)&HEADER$1 + 124ll)));
           *(uint8*)((uint8*)(LPTARGETROW$1 + (C$1 * 3ll)) + 1ll) = *(uint8*)((uint8*)(LPSOURCEROW$1 + (C$1 * (int64)*(int16*)((uint8*)&HEADER$1 + 124ll))) + 2ll);
           *(uint8*)((uint8*)(LPTARGETROW$1 + (C$1 * 3ll)) + 2ll) = *(uint8*)((uint8*)(LPSOURCEROW$1 + (C$1 * (int64)*(int16*)((uint8*)&HEADER$1 + 124ll))) + 1ll);
          }
          label$970:;
          C$1 = C$1 + 1ll;
          label$969:;
          if( C$1 <= TMP$1208$10 ) goto label$972;
          label$971:;
         }
         LPTARGETROW$1 = (uint8*)(LPTARGETROW$1 + TARGETADD$1);
         LPSOURCEROW$1 = (uint8*)(LPSOURCEROW$1 + SOURCEADD$1);
        }
        label$966:;
        RR$1 = RR$1 + 1ll;
        label$965:;
        if( RR$1 <= TMP$1207$8 ) goto label$968;
        label$967:;
       }
      }
      goto label$962;
      label$963:;
      {
       {
        RR$1 = 0ll;
        int64 TMP$1209$8;
        TMP$1209$8 = (int64)*(int32*)((uint8*)&HEADER$1 + 118ll) + -1ll;
        goto label$974;
        label$977:;
        {
         {
          C$1 = 0ll;
          int64 TMP$1210$10;
          TMP$1210$10 = (int64)*(int32*)((uint8*)&HEADER$1 + 114ll) + -1ll;
          goto label$978;
          label$981:;
          {
           R$1 = (double)(int64)*(uint8*)(LPSOURCEROW$1 + (C$1 * (int64)*(int16*)((uint8*)&HEADER$1 + 124ll))) * 0x1.010101010101p-8;
           B$1 = (double)(int64)*(uint8*)((uint8*)(LPSOURCEROW$1 + (C$1 * (int64)*(int16*)((uint8*)&HEADER$1 + 124ll))) + 1ll) * 0x1.010101010101p-8;
           G$1 = (double)(int64)*(uint8*)((uint8*)(LPSOURCEROW$1 + (C$1 * (int64)*(int16*)((uint8*)&HEADER$1 + 124ll))) + 2ll) * 0x1.010101010101p-8;
           *(uint8*)(LPTARGETROW$1 + C$1) = (uint8)((int32)__builtin_nearbyint( __builtin_sqrt( (((R$1 * R$1) + (G$1 * G$1)) + (B$1 * B$1)) ) * 0x1.FEp+7 ));
          }
          label$979:;
          C$1 = C$1 + 1ll;
          label$978:;
          if( C$1 <= TMP$1210$10 ) goto label$981;
          label$980:;
         }
         LPTARGETROW$1 = (uint8*)(LPTARGETROW$1 + TARGETADD$1);
         LPSOURCEROW$1 = (uint8*)(LPSOURCEROW$1 + SOURCEADD$1);
        }
        label$975:;
        RR$1 = RR$1 + 1ll;
        label$974:;
        if( RR$1 <= TMP$1209$8 ) goto label$977;
        label$976:;
       }
      }
      label$973:;
      label$962:;
     }
    }
    label$960:;
    label$937:;
   }
  }
  if( LREAL_PIMAGE$1 == (uint8*)0ull ) goto label$983;
  {
   free( (void*)LREAL_PIMAGE$1 );
   label$983:;
  }
  fb$result$1 = *(int64*)((uint8*)THIS$1 + 712ll);
  *(int64*)((uint8*)THIS$1 + 712ll) = *(int64*)((uint8*)THIS$1 + 712ll) + 1ll;
 }
 goto label$907;
 label$908:;
 {
  fb$result$1 = -1ll;
  fb_ArrayEraseObj( (struct $7FBARRAYIvE*)&PAL$1, (void*)&_ZN8PALENTRYC1Ev, (void*)0ull );
  goto label$900;
 }
 label$907:;
 fb_ArrayEraseObj( (struct $7FBARRAYIvE*)&PAL$1, (void*)&_ZN8PALENTRYC1Ev, (void*)0ull );
 label$900:;
 return fb$result$1;
}

void _ZN9RAYTRACER8GETMAPXYEllR6VECTORS1_( struct $9RAYTRACER* THIS$1, int64 OBJID$1, int64 POLYID$1, struct $6VECTOR* HITPOINT$1, struct $6VECTOR* MAPXY$1 )
{
 label$988:;
 struct $6VECTOR AD$1;
 _ZN6VECTORC1Ev( &AD$1 );
 struct $6VECTOR BD$1;
 _ZN6VECTORC1Ev( &BD$1 );
 struct $6VECTOR B$1;
 _ZN6VECTORC1Ev( &B$1 );
 struct $6VECTOR C$1;
 _ZN6VECTORC1Ev( &C$1 );
 struct $6VECTOR D$1;
 _ZN6VECTORC1Ev( &D$1 );
 double R$1;
 __builtin_memset( &R$1, 0, 8ll );
 double DOTC$1;
 __builtin_memset( &DOTC$1, 0, 8ll );
 double ANGLE$1;
 __builtin_memset( &ANGLE$1, 0, 8ll );
 double X$1;
 __builtin_memset( &X$1, 0, 8ll );
 double Y$1;
 __builtin_memset( &Y$1, 0, 8ll );
 double XDIM$1;
 __builtin_memset( &XDIM$1, 0, 8ll );
 double YDIM$1;
 __builtin_memset( &YDIM$1, 0, 8ll );
 struct $4POLY* LPPOLY$1;
 __builtin_memset( &LPPOLY$1, 0, 8ll );
 {
  $14OBJECT3D_TYPES TMP$1212$2;
  TMP$1212$2 = *($14OBJECT3D_TYPES*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll)));
  if( TMP$1212$2 != 1ll ) goto label$991;
  label$992:;
  {
   struct $6VECTOR TMP$1213$3;
   struct $6VECTOR TMP$1214$3;
   struct $6VECTOR TMP$1215$3;
   struct $6VECTOR TMP$1216$3;
   struct $6VECTOR TMP$1217$3;
   LPPOLY$1 = *(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 184ll) + (POLYID$1 << (3ll & 63ll)));
   _ZmiR6VECTORS0_( &TMP$1213$3, HITPOINT$1, *(*(struct $6VECTOR***)((uint8*)LPPOLY$1 + 536ll)) );
   __builtin_memcpy( &C$1, &TMP$1213$3, 32 );
   double vr$29 = _ZN6VECTOR6LENGTHEv( &C$1 );
   DOTC$1 = vr$29;
   _ZmiR6VECTORS0_( &TMP$1214$3, *(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)LPPOLY$1 + 536ll) + 8ll), *(*(struct $6VECTOR***)((uint8*)LPPOLY$1 + 536ll)) );
   __builtin_memcpy( &AD$1, &TMP$1214$3, 32 );
   double vr$38 = _ZN6VECTOR6LENGTHEv( &AD$1 );
   XDIM$1 = vr$38;
   _ZmiR6VECTORS0_( &TMP$1215$3, *(struct $6VECTOR**)((uint8*)((uint8*)*(struct $6VECTOR***)((uint8*)LPPOLY$1 + 536ll) + (*(int64*)((uint8*)LPPOLY$1 + 528ll) << (3ll & 63ll))) + -8ll), *(*(struct $6VECTOR***)((uint8*)LPPOLY$1 + 536ll)) );
   __builtin_memcpy( &BD$1, &TMP$1215$3, 32 );
   double vr$49 = _ZN6VECTOR6LENGTHEv( &BD$1 );
   YDIM$1 = vr$49;
   _ZmlR6VECTORd( &TMP$1216$3, &AD$1, 0x1.p+0 / XDIM$1 );
   __builtin_memcpy( &B$1, &TMP$1216$3, 32 );
   _ZmlR6VECTORd( &TMP$1217$3, &C$1, 0x1.p+0 / DOTC$1 );
   __builtin_memcpy( &D$1, &TMP$1217$3, 32 );
   double vr$62 = _ZmlR6VECTORS0_( &B$1, &D$1 );
   ANGLE$1 = vr$62;
   Y$1 = DOTC$1 * ANGLE$1;
   ANGLE$1 = __builtin_sin( __builtin_acos( ANGLE$1 ) );
   X$1 = DOTC$1 * ANGLE$1;
   *(double*)MAPXY$1 = ((X$1 * 0x1.p+0) + 0x1.p-1) / XDIM$1;
   *(double*)((uint8*)MAPXY$1 + 8ll) = ((Y$1 * 0x1.p+0) + 0x1.p-1) / YDIM$1;
  }
  goto label$990;
  label$991:;
  if( TMP$1212$2 != 0ll ) goto label$993;
  label$994:;
  {
   X$1 = *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 112ll) - *(double*)HITPOINT$1;
   Y$1 = (*(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 120ll) - *(double*)((uint8*)HITPOINT$1 + 8ll)) * -0x1.p+0;
   R$1 = *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 152ll);
   *(double*)MAPXY$1 = ((X$1 / R$1) * 0x1.p-1) + 0x1.p-1;
   *(double*)((uint8*)MAPXY$1 + 8ll) = ((Y$1 / R$1) * 0x1.p-1) + 0x1.p-1;
  }
  label$993:;
  label$990:;
 }
 label$989:;
}

double _ZN9RAYTRACER18GETHIGHTFIELDVALUEElll13BUMP_METHODESa( struct $9RAYTRACER* THIS$1, int64 MAPID$1, int64 X$1, int64 Y$1, $13BUMP_METHODES METHODE$1, int8 INVERSE$1 )
{
 int64 TMP$1218$1;
 int64 TMP$1219$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$995:;
 int64 PTR1$1;
 __builtin_memset( &PTR1$1, 0, 8ll );
 int64 PTR2$1;
 __builtin_memset( &PTR2$1, 0, 8ll );
 int64 PTR3$1;
 __builtin_memset( &PTR3$1, 0, 8ll );
 double H1$1;
 __builtin_memset( &H1$1, 0, 8ll );
 double H2$1;
 __builtin_memset( &H2$1, 0, 8ll );
 double H3$1;
 __builtin_memset( &H3$1, 0, 8ll );
 double H$1;
 __builtin_memset( &H$1, 0, 8ll );
 if( X$1 >= 0ll ) goto label$997;
 TMP$1218$1 = -X$1;
 goto label$1006;
 label$997:;
 TMP$1218$1 = X$1;
 label$1006:;
 X$1 = TMP$1218$1 % (int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (MAPID$1 << (3ll & 63ll))) + 130ll);
 if( Y$1 >= 0ll ) goto label$998;
 TMP$1219$1 = -Y$1;
 goto label$1007;
 label$998:;
 TMP$1219$1 = Y$1;
 label$1007:;
 Y$1 = TMP$1219$1 % (int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (MAPID$1 << (3ll & 63ll))) + 134ll);
 {
  if( METHODE$1 != 0ll ) goto label$1000;
  label$1001:;
  {
   PTR1$1 = (Y$1 * (int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (MAPID$1 << (3ll & 63ll))) + 130ll)) + X$1;
   PTR2$1 = (Y$1 * (int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (MAPID$1 << (3ll & 63ll))) + 130ll)) + ((X$1 + 1ll) % (int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (MAPID$1 << (3ll & 63ll))) + 130ll));
   H1$1 = (double)(int64)*(uint8*)(*(uint8**)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (MAPID$1 << (3ll & 63ll))) + 168ll) + PTR1$1) * 0x1.010101010101p-8;
   H2$1 = (double)(int64)*(uint8*)(*(uint8**)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (MAPID$1 << (3ll & 63ll))) + 168ll) + PTR2$1) * 0x1.010101010101p-8;
   H$1 = H2$1 - H1$1;
  }
  goto label$999;
  label$1000:;
  if( METHODE$1 != 1ll ) goto label$1002;
  label$1003:;
  {
   PTR1$1 = (Y$1 * (int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (MAPID$1 << (3ll & 63ll))) + 130ll)) + X$1;
   PTR2$1 = (((Y$1 + 1ll) % (int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (MAPID$1 << (3ll & 63ll))) + 134ll)) * (int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (MAPID$1 << (3ll & 63ll))) + 130ll)) + X$1;
   H1$1 = (double)(int64)*(uint8*)(*(uint8**)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (MAPID$1 << (3ll & 63ll))) + 168ll) + PTR1$1) * 0x1.010101010101p-8;
   H2$1 = (double)(int64)*(uint8*)(*(uint8**)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (MAPID$1 << (3ll & 63ll))) + 168ll) + PTR2$1) * 0x1.010101010101p-8;
   H$1 = H2$1 - H1$1;
  }
  goto label$999;
  label$1002:;
  if( METHODE$1 != 2ll ) goto label$1004;
  label$1005:;
  {
   PTR1$1 = (Y$1 * (int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (MAPID$1 << (3ll & 63ll))) + 130ll)) + X$1;
   PTR2$1 = (Y$1 * (int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (MAPID$1 << (3ll & 63ll))) + 130ll)) + ((X$1 + 1ll) % (int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (MAPID$1 << (3ll & 63ll))) + 130ll));
   PTR3$1 = (((Y$1 + 1ll) % (int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (MAPID$1 << (3ll & 63ll))) + 134ll)) * (int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (MAPID$1 << (3ll & 63ll))) + 130ll)) + X$1;
   H1$1 = (double)*(uint8*)(*(uint8**)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (MAPID$1 << (3ll & 63ll))) + 168ll) + PTR1$1);
   H1$1 = H1$1 * 0x1.010101010101p-8;
   H2$1 = (double)*(uint8*)(*(uint8**)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (MAPID$1 << (3ll & 63ll))) + 168ll) + PTR2$1);
   H2$1 = H2$1 * 0x1.010101010101p-8;
   H3$1 = (double)*(uint8*)(*(uint8**)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (MAPID$1 << (3ll & 63ll))) + 168ll) + PTR3$1);
   H3$1 = H3$1 * 0x1.010101010101p-8;
   H$1 = ((H2$1 - H1$1) + H3$1) - H1$1;
  }
  label$1004:;
  label$999:;
 }
 fb$result$1 = H$1;
 goto label$996;
 label$996:;
 return fb$result$1;
}

int8 _ZN9RAYTRACER19ISVISIBLEONSTAMPMAPElR6VECTOR( struct $9RAYTRACER* THIS$1, int64 MATID$1, struct $6VECTOR* MAPXY$1 )
{
 double TMP$1220$1;
 double TMP$1221$1;
 int8 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 1ll );
 label$1008:;
 double X$1;
 __builtin_memset( &X$1, 0, 8ll );
 double Y$1;
 __builtin_memset( &Y$1, 0, 8ll );
 int64 XP$1;
 __builtin_memset( &XP$1, 0, 8ll );
 int64 YP$1;
 __builtin_memset( &YP$1, 0, 8ll );
 int64 PTR1$1;
 __builtin_memset( &PTR1$1, 0, 8ll );
 int64 MAPID$1;
 MAPID$1 = *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 344ll);
 if( (*(double*)MAPXY$1 * *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 352ll)) >= 0x0p+0 ) goto label$1010;
 TMP$1220$1 = -(*(double*)MAPXY$1) * *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 352ll);
 goto label$1014;
 label$1010:;
 TMP$1220$1 = *(double*)MAPXY$1 * *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 352ll);
 label$1014:;
 X$1 = TMP$1220$1;
 if( (*(double*)((uint8*)MAPXY$1 + 8ll) * *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 360ll)) >= 0x0p+0 ) goto label$1011;
 TMP$1221$1 = -(*(double*)((uint8*)MAPXY$1 + 8ll)) * *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 360ll);
 goto label$1015;
 label$1011:;
 TMP$1221$1 = *(double*)((uint8*)MAPXY$1 + 8ll) * *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 360ll);
 label$1015:;
 Y$1 = TMP$1221$1;
 XP$1 = ((int64)__builtin_nearbyint( X$1 * (double)(int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (MAPID$1 << (3ll & 63ll))) + 130ll) ));
 XP$1 = XP$1 % (int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (MAPID$1 << (3ll & 63ll))) + 130ll);
 YP$1 = ((int64)__builtin_nearbyint( Y$1 * (double)(int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (MAPID$1 << (3ll & 63ll))) + 134ll) ));
 YP$1 = YP$1 % (int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (MAPID$1 << (3ll & 63ll))) + 134ll);
 PTR1$1 = (YP$1 * (int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (MAPID$1 << (3ll & 63ll))) + 130ll)) + XP$1;
 if( (int64)*(uint8*)(*(uint8**)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (MAPID$1 << (3ll & 63ll))) + 168ll) + PTR1$1) <= 0ll ) goto label$1013;
 {
  fb$result$1 = (int8)-1;
  goto label$1009;
  label$1013:;
 }
 label$1009:;
 return fb$result$1;
}

void _ZN9RAYTRACER9DOBUMPMAPEllR6VECTORS1_S1_( struct $9RAYTRACER* THIS$1, int64 HITOBJID$1, int64 HITPOLYID$1, struct $6VECTOR* NORMAL$1, struct $6VECTOR* BNORMAL$1, struct $6VECTOR* MAPXY$1 )
{
 label$1016:;
 double X$1;
 __builtin_memset( &X$1, 0, 8ll );
 double Y$1;
 __builtin_memset( &Y$1, 0, 8ll );
 double L$1;
 __builtin_memset( &L$1, 0, 8ll );
 int64 XP$1;
 __builtin_memset( &XP$1, 0, 8ll );
 int64 YP$1;
 __builtin_memset( &YP$1, 0, 8ll );
 int64 MATID$1;
 __builtin_memset( &MATID$1, 0, 8ll );
 int64 MAPID$1;
 __builtin_memset( &MAPID$1, 0, 8ll );
 MATID$1 = *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (HITOBJID$1 << (3ll & 63ll))) + 144ll);
 MAPID$1 = *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 304ll);
 if( MAPID$1 <= -1ll ) goto label$1019;
 {
  X$1 = *(double*)MAPXY$1 * *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 312ll);
  Y$1 = *(double*)((uint8*)MAPXY$1 + 8ll) * *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 320ll);
  XP$1 = ((int64)__builtin_nearbyint( X$1 * (double)(int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (MAPID$1 << (3ll & 63ll))) + 130ll) ));
  XP$1 = XP$1 % (int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (MAPID$1 << (3ll & 63ll))) + 130ll);
  YP$1 = ((int64)__builtin_nearbyint( Y$1 * (double)(int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (MAPID$1 << (3ll & 63ll))) + 134ll) ));
  YP$1 = YP$1 % (int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (MAPID$1 << (3ll & 63ll))) + 134ll);
  double vr$55 = _ZN9RAYTRACER18GETHIGHTFIELDVALUEElll13BUMP_METHODESa( THIS$1, MAPID$1, XP$1, YP$1, 2ll, (int8)0 );
  L$1 = vr$55 * *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 328ll);
  if( L$1 != 0x0p+0 ) goto label$1021;
  {
   __builtin_memcpy( BNORMAL$1, NORMAL$1, 32 );
  }
  goto label$1020;
  label$1021:;
  {
   L$1 = L$1 + 0x1.p+0;
   *(double*)BNORMAL$1 = *(double*)NORMAL$1 * L$1;
   *(double*)((uint8*)BNORMAL$1 + 8ll) = *(double*)((uint8*)NORMAL$1 + 8ll) * L$1;
   *(double*)((uint8*)BNORMAL$1 + 16ll) = *(double*)((uint8*)NORMAL$1 + 16ll) * L$1;
  }
  label$1020:;
 }
 label$1019:;
 label$1018:;
 label$1017:;
}

void _ZN9RAYTRACER12SURFACECOLORElR6VECTORS1_( struct $9RAYTRACER* THIS$1, int64 HITOBJID$1, struct $6VECTOR* MAPXY$1, struct $6VECTOR* RETCOL$1 )
{
 label$1022:;
 int64 MATID$1;
 __builtin_memset( &MATID$1, 0, 8ll );
 int64 MAPID$1;
 __builtin_memset( &MAPID$1, 0, 8ll );
 int64 XP$1;
 __builtin_memset( &XP$1, 0, 8ll );
 int64 YP$1;
 __builtin_memset( &YP$1, 0, 8ll );
 int64 PTR1$1;
 __builtin_memset( &PTR1$1, 0, 8ll );
 double X$1;
 __builtin_memset( &X$1, 0, 8ll );
 double Y$1;
 __builtin_memset( &Y$1, 0, 8ll );
 struct $6VECTOR SURCOL$1;
 _ZN6VECTORC1Ev( &SURCOL$1 );
 MATID$1 = *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (HITOBJID$1 << (3ll & 63ll))) + 144ll);
 MAPID$1 = *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 264ll);
 if( MAPID$1 <= -1ll ) goto label$1025;
 {
  X$1 = *(double*)MAPXY$1 * *(double*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (MAPID$1 << (3ll & 63ll))) + 176ll);
  Y$1 = *(double*)((uint8*)MAPXY$1 + 8ll) * *(double*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (MAPID$1 << (3ll & 63ll))) + 184ll);
  XP$1 = ((int64)__builtin_nearbyint( X$1 * (double)(int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (MAPID$1 << (3ll & 63ll))) + 130ll) ));
  XP$1 = XP$1 % (int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (MAPID$1 << (3ll & 63ll))) + 130ll);
  YP$1 = ((int64)__builtin_nearbyint( Y$1 * (double)(int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (MAPID$1 << (3ll & 63ll))) + 134ll) ));
  YP$1 = YP$1 % (int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (MAPID$1 << (3ll & 63ll))) + 134ll);
  PTR1$1 = ((YP$1 * (int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (MAPID$1 << (3ll & 63ll))) + 130ll)) * 3ll) + (XP$1 * 3ll);
  *(double*)&SURCOL$1 = (double)*(uint8*)(*(uint8**)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (MAPID$1 << (3ll & 63ll))) + 168ll) + PTR1$1);
  *(double*)&SURCOL$1 = *(double*)&SURCOL$1 * 0x1.010101010101p-8;
  *(double*)((uint8*)&SURCOL$1 + 8ll) = (double)*(uint8*)((uint8*)(*(uint8**)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (MAPID$1 << (3ll & 63ll))) + 168ll) + PTR1$1) + 1ll);
  *(double*)((uint8*)&SURCOL$1 + 8ll) = *(double*)((uint8*)&SURCOL$1 + 8ll) * 0x1.010101010101p-8;
  *(double*)((uint8*)&SURCOL$1 + 16ll) = (double)*(uint8*)((uint8*)(*(uint8**)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (MAPID$1 << (3ll & 63ll))) + 168ll) + PTR1$1) + 2ll);
  *(double*)((uint8*)&SURCOL$1 + 16ll) = *(double*)((uint8*)&SURCOL$1 + 16ll) * 0x1.010101010101p-8;
  *(double*)&SURCOL$1 = *(double*)&SURCOL$1 * *(double*)RETCOL$1;
  *(double*)((uint8*)&SURCOL$1 + 8ll) = *(double*)((uint8*)&SURCOL$1 + 8ll) * *(double*)((uint8*)RETCOL$1 + 8ll);
  *(double*)((uint8*)&SURCOL$1 + 16ll) = *(double*)((uint8*)&SURCOL$1 + 16ll) * *(double*)((uint8*)RETCOL$1 + 16ll);
  if( (int64)*(int8*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 258ll) != -1ll ) goto label$1027;
  {
   *(double*)&SURCOL$1 = *(double*)&SURCOL$1 + (*(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 168ll) * *(double*)RETCOL$1);
   *(double*)((uint8*)&SURCOL$1 + 8ll) = *(double*)((uint8*)&SURCOL$1 + 8ll) + (*(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 176ll) * *(double*)((uint8*)RETCOL$1 + 8ll));
   *(double*)((uint8*)&SURCOL$1 + 16ll) = *(double*)((uint8*)&SURCOL$1 + 16ll) + (*(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 184ll) * *(double*)((uint8*)RETCOL$1 + 16ll));
  }
  label$1027:;
  label$1026:;
  *(double*)RETCOL$1 = *(double*)RETCOL$1 + *(double*)&SURCOL$1;
  *(double*)((uint8*)RETCOL$1 + 8ll) = *(double*)((uint8*)RETCOL$1 + 8ll) + *(double*)((uint8*)&SURCOL$1 + 8ll);
  *(double*)((uint8*)RETCOL$1 + 16ll) = *(double*)((uint8*)RETCOL$1 + 16ll) + *(double*)((uint8*)&SURCOL$1 + 16ll);
 }
 goto label$1024;
 label$1025:;
 {
  *(double*)RETCOL$1 = *(double*)RETCOL$1 + (*(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 168ll) * *(double*)RETCOL$1);
  *(double*)((uint8*)RETCOL$1 + 8ll) = *(double*)((uint8*)RETCOL$1 + 8ll) + (*(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 176ll) * *(double*)((uint8*)RETCOL$1 + 8ll));
  *(double*)((uint8*)RETCOL$1 + 16ll) = *(double*)((uint8*)RETCOL$1 + 16ll) + (*(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 184ll) * *(double*)((uint8*)RETCOL$1 + 16ll));
 }
 label$1024:;
 label$1023:;
}

struct $6VECTOR* _ZN9RAYTRACER2AVEddd( struct $9RAYTRACER* THIS$1, double X$1, double Y$1, double Z$1 )
{
 struct $6VECTOR* fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1028:;
 struct $6VECTOR* TMP$1;
 void* vr$1 = malloc( 32ull );
 TMP$1 = (struct $6VECTOR*)vr$1;
 *(double*)TMP$1 = X$1;
 *(double*)((uint8*)TMP$1 + 8ll) = Y$1;
 *(double*)((uint8*)TMP$1 + 16ll) = Z$1;
 fb$result$1 = TMP$1;
 goto label$1029;
 label$1029:;
 return fb$result$1;
}

struct $6VECTOR** _ZN9RAYTRACER4APV3EPP6VECTORlll( struct $9RAYTRACER* THIS$1, struct $6VECTOR** V$1, int64 V0$1, int64 V1$1, int64 V2$1 )
{
 struct $6VECTOR** fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1030:;
 struct $6VECTOR** TMP$1;
 void* vr$1 = malloc( 24ull );
 TMP$1 = (struct $6VECTOR**)vr$1;
 *TMP$1 = *(struct $6VECTOR**)((uint8*)V$1 + (V0$1 << (3ll & 63ll)));
 *(struct $6VECTOR**)((uint8*)TMP$1 + 8ll) = *(struct $6VECTOR**)((uint8*)V$1 + (V1$1 << (3ll & 63ll)));
 *(struct $6VECTOR**)((uint8*)TMP$1 + 16ll) = *(struct $6VECTOR**)((uint8*)V$1 + (V2$1 << (3ll & 63ll)));
 fb$result$1 = TMP$1;
 goto label$1031;
 label$1031:;
 return fb$result$1;
}

struct $6VECTOR** _ZN9RAYTRACER4APV4EPP6VECTORllll( struct $9RAYTRACER* THIS$1, struct $6VECTOR** V$1, int64 V0$1, int64 V1$1, int64 V2$1, int64 V3$1 )
{
 struct $6VECTOR** fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1032:;
 struct $6VECTOR** TMP$1;
 void* vr$1 = malloc( 32ull );
 TMP$1 = (struct $6VECTOR**)vr$1;
 *TMP$1 = *(struct $6VECTOR**)((uint8*)V$1 + (V0$1 << (3ll & 63ll)));
 *(struct $6VECTOR**)((uint8*)TMP$1 + 8ll) = *(struct $6VECTOR**)((uint8*)V$1 + (V1$1 << (3ll & 63ll)));
 *(struct $6VECTOR**)((uint8*)TMP$1 + 16ll) = *(struct $6VECTOR**)((uint8*)V$1 + (V2$1 << (3ll & 63ll)));
 *(struct $6VECTOR**)((uint8*)TMP$1 + 24ll) = *(struct $6VECTOR**)((uint8*)V$1 + (V3$1 << (3ll & 63ll)));
 fb$result$1 = TMP$1;
 goto label$1033;
 label$1033:;
 return fb$result$1;
}

int64 _ZN9RAYTRACER11ADDMATERIALEddddddddddaaallll( struct $9RAYTRACER* THIS$1, double RED$1, double GREEN$1, double BLUE$1, double R_REFLECTION$1, double M_REFLECTION$1, double C_REFLECTION$1, double P_MATERIAL$1, double P_MIRROR$1, double TRANSPARENCY$1, double R_INDEX$1, int8 BUILDSHADOW$1, int8 RECEIVESHADOW$1, int8 MIXCOLORS$1, int64 COLORMAPID$1, int64 BUMPMAPID$1, int64 TRANSMAPID$1, int64 STAMPMAPID$1 )
{
 boolean TMP$1222$1;
 boolean TMP$1223$1;
 boolean TMP$1224$1;
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1034:;
 int8 FLAG$1;
 __builtin_memset( &FLAG$1, 0, 1ll );
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &RED$1, 0x0p+0, 0x1.p+0 );
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &GREEN$1, 0x0p+0, 0x1.p+0 );
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &BLUE$1, 0x0p+0, 0x1.p+0 );
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &R_REFLECTION$1, 0x0p+0, 0x1.p+0 );
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &M_REFLECTION$1, 0x0p+0, 0x1.p+0 );
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &C_REFLECTION$1, 0x1.0624DD2F1A9FCp-10, 0x1.p+0 );
 C_REFLECTION$1 = C_REFLECTION$1 * 0x1.2Cp+7;
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &P_MATERIAL$1, 0x0p+0, 0x1.p+0 );
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &P_MIRROR$1, 0x0p+0, 0x1.p+0 );
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &R_INDEX$1, 0x0p+0, 0x1.p+0 );
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &TRANSPARENCY$1, 0x0p+0, 0x1.p+0 );
 if( (int64)BUILDSHADOW$1 == 0ll ) goto label$1036;
 TMP$1222$1 = (boolean)1ll;
 goto label$1047;
 label$1036:;
 TMP$1222$1 = (boolean)0ll;
 label$1047:;
 BUILDSHADOW$1 = (int8)-TMP$1222$1;
 if( (int64)RECEIVESHADOW$1 == 0ll ) goto label$1037;
 TMP$1223$1 = (boolean)1ll;
 goto label$1048;
 label$1037:;
 TMP$1223$1 = (boolean)0ll;
 label$1048:;
 RECEIVESHADOW$1 = (int8)-TMP$1223$1;
 if( (int64)MIXCOLORS$1 == 0ll ) goto label$1038;
 TMP$1224$1 = (boolean)1ll;
 goto label$1049;
 label$1038:;
 TMP$1224$1 = (boolean)0ll;
 label$1049:;
 MIXCOLORS$1 = (int8)-TMP$1224$1;
 void* vr$23 = realloc( *(void**)((uint8*)THIS$1 + 672ll), (uint64)((*(int64*)((uint8*)THIS$1 + 664ll) << (3ll & 63ll)) + 8ll) );
 *(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) = (struct $8MATERIAL**)vr$23;
 void* vr$25 = calloc( 424ull, 1ull );
 *(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (*(int64*)((uint8*)THIS$1 + 664ll) << (3ll & 63ll))) = (struct $8MATERIAL*)vr$25;
 *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (*(int64*)((uint8*)THIS$1 + 664ll) << (3ll & 63ll))) + 160ll) = *(int64*)((uint8*)THIS$1 + 664ll);
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (*(int64*)((uint8*)THIS$1 + 664ll) << (3ll & 63ll))) + 168ll) = RED$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (*(int64*)((uint8*)THIS$1 + 664ll) << (3ll & 63ll))) + 176ll) = GREEN$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (*(int64*)((uint8*)THIS$1 + 664ll) << (3ll & 63ll))) + 184ll) = BLUE$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (*(int64*)((uint8*)THIS$1 + 664ll) << (3ll & 63ll))) + 200ll) = R_REFLECTION$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (*(int64*)((uint8*)THIS$1 + 664ll) << (3ll & 63ll))) + 208ll) = M_REFLECTION$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (*(int64*)((uint8*)THIS$1 + 664ll) << (3ll & 63ll))) + 216ll) = C_REFLECTION$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (*(int64*)((uint8*)THIS$1 + 664ll) << (3ll & 63ll))) + 224ll) = P_MATERIAL$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (*(int64*)((uint8*)THIS$1 + 664ll) << (3ll & 63ll))) + 232ll) = P_MIRROR$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (*(int64*)((uint8*)THIS$1 + 664ll) << (3ll & 63ll))) + 240ll) = TRANSPARENCY$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (*(int64*)((uint8*)THIS$1 + 664ll) << (3ll & 63ll))) + 248ll) = R_INDEX$1;
 *(int8*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (*(int64*)((uint8*)THIS$1 + 664ll) << (3ll & 63ll))) + 256ll) = BUILDSHADOW$1;
 *(int8*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (*(int64*)((uint8*)THIS$1 + 664ll) << (3ll & 63ll))) + 257ll) = RECEIVESHADOW$1;
 *(int8*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (*(int64*)((uint8*)THIS$1 + 664ll) << (3ll & 63ll))) + 258ll) = MIXCOLORS$1;
 *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (*(int64*)((uint8*)THIS$1 + 664ll) << (3ll & 63ll))) + 264ll) = COLORMAPID$1;
 *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (*(int64*)((uint8*)THIS$1 + 664ll) << (3ll & 63ll))) + 304ll) = BUMPMAPID$1;
 *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (*(int64*)((uint8*)THIS$1 + 664ll) << (3ll & 63ll))) + 384ll) = TRANSMAPID$1;
 *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (*(int64*)((uint8*)THIS$1 + 664ll) << (3ll & 63ll))) + 344ll) = STAMPMAPID$1;
 if( *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (*(int64*)((uint8*)THIS$1 + 664ll) << (3ll & 63ll))) + 264ll) <= -1ll ) goto label$1040;
 {
  __builtin_memcpy( (struct $6VECTOR*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (*(int64*)((uint8*)THIS$1 + 664ll) << (3ll & 63ll))) + 272ll), (struct $6VECTOR*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (*(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (*(int64*)((uint8*)THIS$1 + 664ll) << (3ll & 63ll))) + 264ll) << (3ll & 63ll))) + 176ll), 32 );
  FLAG$1 = (int8)-1;
 }
 label$1040:;
 label$1039:;
 if( *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (*(int64*)((uint8*)THIS$1 + 664ll) << (3ll & 63ll))) + 304ll) <= -1ll ) goto label$1042;
 {
  __builtin_memcpy( (struct $6VECTOR*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (*(int64*)((uint8*)THIS$1 + 664ll) << (3ll & 63ll))) + 312ll), (struct $6VECTOR*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (*(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (*(int64*)((uint8*)THIS$1 + 664ll) << (3ll & 63ll))) + 304ll) << (3ll & 63ll))) + 176ll), 32 );
  FLAG$1 = (int8)-1;
 }
 label$1042:;
 label$1041:;
 if( *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (*(int64*)((uint8*)THIS$1 + 664ll) << (3ll & 63ll))) + 384ll) <= -1ll ) goto label$1044;
 {
  __builtin_memcpy( (struct $6VECTOR*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (*(int64*)((uint8*)THIS$1 + 664ll) << (3ll & 63ll))) + 392ll), (struct $6VECTOR*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (*(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (*(int64*)((uint8*)THIS$1 + 664ll) << (3ll & 63ll))) + 384ll) << (3ll & 63ll))) + 176ll), 32 );
  FLAG$1 = (int8)-1;
 }
 label$1044:;
 label$1043:;
 if( *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (*(int64*)((uint8*)THIS$1 + 664ll) << (3ll & 63ll))) + 344ll) <= -1ll ) goto label$1046;
 {
  __builtin_memcpy( (struct $6VECTOR*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (*(int64*)((uint8*)THIS$1 + 664ll) << (3ll & 63ll))) + 352ll), (struct $6VECTOR*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (*(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (*(int64*)((uint8*)THIS$1 + 664ll) << (3ll & 63ll))) + 344ll) << (3ll & 63ll))) + 176ll), 32 );
  FLAG$1 = (int8)-1;
 }
 label$1046:;
 label$1045:;
 *(int8*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (*(int64*)((uint8*)THIS$1 + 664ll) << (3ll & 63ll))) + 259ll) = FLAG$1;
 fb$result$1 = *(int64*)((uint8*)THIS$1 + 664ll);
 *(int64*)((uint8*)THIS$1 + 664ll) = *(int64*)((uint8*)THIS$1 + 664ll) + 1ll;
 label$1035:;
 return fb$result$1;
}

void _ZN9RAYTRACER14CHANGEMATERIALElddddddddddaaallll( struct $9RAYTRACER* THIS$1, int64 MATID$1, double RED$1, double GREEN$1, double BLUE$1, double R_REFLECTION$1, double M_REFLECTION$1, double C_REFLECTION$1, double P_MATERIAL$1, double P_MIRROR$1, double TRANSPARENCY$1, double R_INDEX$1, int8 BUILDSHADOW$1, int8 RECEIVESHADOW$1, int8 MIXCOLORS$1, int64 COLORMAPID$1, int64 BUMPMAPID$1, int64 TRANSMAPID$1, int64 STAMPMAPID$1 )
{
 boolean TMP$1225$1;
 boolean TMP$1226$1;
 boolean TMP$1227$1;
 label$1050:;
 if( ((int64)-(MATID$1 < 0ll) | (int64)-(MATID$1 >= *(int64*)((uint8*)THIS$1 + 664ll))) == 0ll ) goto label$1053;
 {
  goto label$1051;
  label$1053:;
 }
 int8 FLAG$1;
 __builtin_memset( &FLAG$1, 0, 1ll );
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &RED$1, 0x0p+0, 0x1.p+0 );
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &GREEN$1, 0x0p+0, 0x1.p+0 );
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &BLUE$1, 0x0p+0, 0x1.p+0 );
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &R_REFLECTION$1, 0x0p+0, 0x1.p+0 );
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &M_REFLECTION$1, 0x0p+0, 0x1.p+0 );
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &C_REFLECTION$1, 0x1.0624DD2F1A9FCp-10, 0x1.p+0 );
 C_REFLECTION$1 = C_REFLECTION$1 * 0x1.2Cp+7;
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &P_MATERIAL$1, 0x0p+0, 0x1.p+0 );
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &P_MIRROR$1, 0x0p+0, 0x1.p+0 );
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &R_INDEX$1, 0x0p+0, 0x1.p+0 );
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &TRANSPARENCY$1, 0x0p+0, 0x1.p+0 );
 if( (int64)BUILDSHADOW$1 == 0ll ) goto label$1054;
 TMP$1225$1 = (boolean)1ll;
 goto label$1065;
 label$1054:;
 TMP$1225$1 = (boolean)0ll;
 label$1065:;
 BUILDSHADOW$1 = (int8)-TMP$1225$1;
 if( (int64)RECEIVESHADOW$1 == 0ll ) goto label$1055;
 TMP$1226$1 = (boolean)1ll;
 goto label$1066;
 label$1055:;
 TMP$1226$1 = (boolean)0ll;
 label$1066:;
 RECEIVESHADOW$1 = (int8)-TMP$1226$1;
 if( (int64)MIXCOLORS$1 == 0ll ) goto label$1056;
 TMP$1227$1 = (boolean)1ll;
 goto label$1067;
 label$1056:;
 TMP$1227$1 = (boolean)0ll;
 label$1067:;
 MIXCOLORS$1 = (int8)-TMP$1227$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 168ll) = RED$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 176ll) = GREEN$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 184ll) = BLUE$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 200ll) = R_REFLECTION$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 208ll) = M_REFLECTION$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 216ll) = C_REFLECTION$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 224ll) = P_MATERIAL$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 232ll) = P_MIRROR$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 240ll) = TRANSPARENCY$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 248ll) = R_INDEX$1;
 *(int8*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 256ll) = BUILDSHADOW$1;
 *(int8*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 257ll) = RECEIVESHADOW$1;
 *(int8*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 258ll) = MIXCOLORS$1;
 *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 264ll) = COLORMAPID$1;
 *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 304ll) = BUMPMAPID$1;
 *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 384ll) = TRANSMAPID$1;
 *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 344ll) = STAMPMAPID$1;
 if( *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 264ll) <= -1ll ) goto label$1058;
 {
  __builtin_memcpy( (struct $6VECTOR*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 272ll), (struct $6VECTOR*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (*(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 264ll) << (3ll & 63ll))) + 176ll), 32 );
  FLAG$1 = (int8)-1;
 }
 label$1058:;
 label$1057:;
 if( *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 304ll) <= -1ll ) goto label$1060;
 {
  __builtin_memcpy( (struct $6VECTOR*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 312ll), (struct $6VECTOR*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (*(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 304ll) << (3ll & 63ll))) + 176ll), 32 );
  FLAG$1 = (int8)-1;
 }
 label$1060:;
 label$1059:;
 if( *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 384ll) <= -1ll ) goto label$1062;
 {
  __builtin_memcpy( (struct $6VECTOR*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 392ll), (struct $6VECTOR*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (*(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 384ll) << (3ll & 63ll))) + 176ll), 32 );
  FLAG$1 = (int8)-1;
 }
 label$1062:;
 label$1061:;
 if( *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 344ll) <= -1ll ) goto label$1064;
 {
  __builtin_memcpy( (struct $6VECTOR*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 352ll), (struct $6VECTOR*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) + (*(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 344ll) << (3ll & 63ll))) + 176ll), 32 );
  FLAG$1 = (int8)-1;
 }
 label$1064:;
 label$1063:;
 *(int8*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 259ll) = FLAG$1;
 label$1051:;
}

void _ZN9RAYTRACER17SETCOLORMAPFACTORElddd( struct $9RAYTRACER* THIS$1, int64 MATID$1, double X$1, double Y$1, double Z$1 )
{
 label$1068:;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 272ll) = X$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 280ll) = Y$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 288ll) = Z$1;
 label$1069:;
}

void _ZN9RAYTRACER16SETBUMPMAPFACTORElddd( struct $9RAYTRACER* THIS$1, int64 MATID$1, double X$1, double Y$1, double Z$1 )
{
 label$1070:;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 312ll) = X$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 320ll) = Y$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 328ll) = Z$1;
 label$1071:;
}

void _ZN9RAYTRACER17SETTRANSMAPFACTORElddd( struct $9RAYTRACER* THIS$1, int64 MATID$1, double X$1, double Y$1, double Z$1 )
{
 label$1072:;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 392ll) = X$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 400ll) = Y$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 408ll) = Z$1;
 label$1073:;
}

void _ZN9RAYTRACER17SETSTAMPMAPFACTORElddd( struct $9RAYTRACER* THIS$1, int64 MATID$1, double X$1, double Y$1, double Z$1 )
{
 label$1074:;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 352ll) = X$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 360ll) = Y$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 368ll) = Z$1;
 label$1075:;
}

int64 _ZN9RAYTRACER13ADDMATHSPHEREEddddl( struct $9RAYTRACER* THIS$1, double XPOS$1, double YPOS$1, double ZPOS$1, double RADIUS$1, int64 MATID$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1076:;
 if( ((int64)-(MATID$1 < 0ll) | (int64)-(MATID$1 >= *(int64*)((uint8*)THIS$1 + 664ll))) == 0ll ) goto label$1079;
 {
  MATID$1 = 0ll;
  label$1079:;
 }
 void* vr$9 = realloc( *(void**)((uint8*)THIS$1 + 688ll), (uint64)((*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll)) + 8ll) );
 *(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) = (struct $8OBJECT3D**)vr$9;
 void* vr$11 = calloc( 192ull, 1ull );
 *(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) = (struct $8OBJECT3D*)vr$11;
 *($14OBJECT3D_TYPES*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) = 0ll;
 *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) + 112ll) = XPOS$1;
 *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) + 120ll) = YPOS$1;
 *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) + 128ll) = ZPOS$1;
 *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) + 152ll) = RADIUS$1;
 *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) + 144ll) = MATID$1;
 _ZN9RAYTRACER18GETOBJECTSCREENRECEl( THIS$1, *(int64*)((uint8*)THIS$1 + 680ll) );
 fb$result$1 = *(int64*)((uint8*)THIS$1 + 680ll);
 *(int64*)((uint8*)THIS$1 + 680ll) = *(int64*)((uint8*)THIS$1 + 680ll) + 1ll;
 label$1077:;
 return fb$result$1;
}

int64 _ZN9RAYTRACER6ADDBOXEddddddl( struct $9RAYTRACER* THIS$1, double XPOS$1, double YPOS$1, double ZPOS$1, double XSIZE$1, double YSIZE$1, double ZSIZE$1, int64 MATID$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1080:;
 if( ((int64)-(MATID$1 < 0ll) | (int64)-(MATID$1 >= *(int64*)((uint8*)THIS$1 + 664ll))) == 0ll ) goto label$1083;
 {
  MATID$1 = 0ll;
  label$1083:;
 }
 if( XSIZE$1 >= 0x1.p+0 ) goto label$1085;
 {
  XSIZE$1 = 0x1.p+0;
  label$1085:;
 }
 if( YSIZE$1 >= 0x1.p+0 ) goto label$1087;
 {
  YSIZE$1 = 0x1.p+0;
  label$1087:;
 }
 if( ZSIZE$1 >= 0x1.p+0 ) goto label$1089;
 {
  ZSIZE$1 = 0x1.p+0;
  label$1089:;
 }
 double XM$1;
 XM$1 = XSIZE$1 * 0x1.p-1;
 double YM$1;
 YM$1 = YSIZE$1 * 0x1.p-1;
 double ZM$1;
 ZM$1 = ZSIZE$1 * 0x1.p-1;
 void* vr$12 = realloc( *(void**)((uint8*)THIS$1 + 688ll), (uint64)((*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll)) + 8ll) );
 *(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) = (struct $8OBJECT3D**)vr$12;
 void* vr$14 = calloc( 192ull, 1ull );
 *(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) = (struct $8OBJECT3D*)vr$14;
 *($14OBJECT3D_TYPES*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) = 1ll;
 *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) + 144ll) = MATID$1;
 *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) + 112ll) = XPOS$1;
 *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) + 120ll) = YPOS$1;
 *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) + 128ll) = ZPOS$1;
 *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) + 160ll) = 8ll;
 void* vr$49 = malloc( 64ull );
 *(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) + 168ll) = (struct $6VECTOR**)vr$49;
 struct $6VECTOR* vr$57 = _ZN9RAYTRACER2AVEddd( THIS$1, -XM$1, YM$1, -ZM$1 );
 *(*(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) + 168ll)) = vr$57;
 struct $6VECTOR* vr$67 = _ZN9RAYTRACER2AVEddd( THIS$1, -XM$1, -YM$1, -ZM$1 );
 *(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) + 168ll) + 8ll) = vr$67;
 struct $6VECTOR* vr$76 = _ZN9RAYTRACER2AVEddd( THIS$1, XM$1, -YM$1, -ZM$1 );
 *(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) + 168ll) + 16ll) = vr$76;
 struct $6VECTOR* vr$84 = _ZN9RAYTRACER2AVEddd( THIS$1, XM$1, YM$1, -ZM$1 );
 *(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) + 168ll) + 24ll) = vr$84;
 struct $6VECTOR* vr$91 = _ZN9RAYTRACER2AVEddd( THIS$1, XM$1, YM$1, ZM$1 );
 *(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) + 168ll) + 32ll) = vr$91;
 struct $6VECTOR* vr$99 = _ZN9RAYTRACER2AVEddd( THIS$1, XM$1, -YM$1, ZM$1 );
 *(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) + 168ll) + 40ll) = vr$99;
 struct $6VECTOR* vr$108 = _ZN9RAYTRACER2AVEddd( THIS$1, -XM$1, -YM$1, ZM$1 );
 *(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) + 168ll) + 48ll) = vr$108;
 struct $6VECTOR* vr$116 = _ZN9RAYTRACER2AVEddd( THIS$1, -XM$1, YM$1, ZM$1 );
 *(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) + 168ll) + 56ll) = vr$116;
 {
  int64 I$2;
  I$2 = 0ll;
  int64 TMP$1228$2;
  TMP$1228$2 = *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) + 160ll) + -1ll;
  goto label$1090;
  label$1093:;
  {
   *(double*)*(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) + 168ll) + (I$2 << (3ll & 63ll))) = *(double*)*(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) + 168ll) + (I$2 << (3ll & 63ll))) + XPOS$1;
   *(double*)((uint8*)*(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) + 168ll) + (I$2 << (3ll & 63ll))) + 8ll) = *(double*)((uint8*)*(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) + 168ll) + (I$2 << (3ll & 63ll))) + 8ll) + YPOS$1;
   *(double*)((uint8*)*(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) + 168ll) + (I$2 << (3ll & 63ll))) + 16ll) = *(double*)((uint8*)*(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) + 168ll) + (I$2 << (3ll & 63ll))) + 16ll) + ZPOS$1;
  }
  label$1091:;
  I$2 = I$2 + 1ll;
  label$1090:;
  if( I$2 <= TMP$1228$2 ) goto label$1093;
  label$1092:;
 }
 *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) + 176ll) = 6ll;
 void* vr$186 = malloc( 48ull );
 *(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) + 184ll) = (struct $4POLY**)vr$186;
 {
  int64 I$2;
  I$2 = 0ll;
  int64 TMP$1229$2;
  TMP$1229$2 = *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) + 176ll) + -1ll;
  goto label$1094;
  label$1097:;
  {
   void* vr$198 = malloc( 616ull );
   *(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) + 184ll) + (I$2 << (3ll & 63ll))) = (struct $4POLY*)vr$198;
   *(int64*)((uint8*)*(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) + 184ll) + (I$2 << (3ll & 63ll))) + 528ll) = 4ll;
  }
  label$1095:;
  I$2 = I$2 + 1ll;
  label$1094:;
  if( I$2 <= TMP$1229$2 ) goto label$1097;
  label$1096:;
 }
 struct $6VECTOR** vr$220 = _ZN9RAYTRACER4APV4EPP6VECTORllll( THIS$1, *(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) + 168ll), 0ll, 1ll, 2ll, 3ll );
 *(struct $6VECTOR***)((uint8*)*(*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) + 184ll)) + 536ll) = vr$220;
 struct $6VECTOR** vr$233 = _ZN9RAYTRACER4APV4EPP6VECTORllll( THIS$1, *(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) + 168ll), 3ll, 2ll, 5ll, 4ll );
 *(struct $6VECTOR***)((uint8*)*(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) + 184ll) + 8ll) + 536ll) = vr$233;
 struct $6VECTOR** vr$246 = _ZN9RAYTRACER4APV4EPP6VECTORllll( THIS$1, *(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) + 168ll), 4ll, 5ll, 6ll, 7ll );
 *(struct $6VECTOR***)((uint8*)*(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) + 184ll) + 16ll) + 536ll) = vr$246;
 struct $6VECTOR** vr$259 = _ZN9RAYTRACER4APV4EPP6VECTORllll( THIS$1, *(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) + 168ll), 7ll, 6ll, 1ll, 0ll );
 *(struct $6VECTOR***)((uint8*)*(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) + 184ll) + 24ll) + 536ll) = vr$259;
 struct $6VECTOR** vr$272 = _ZN9RAYTRACER4APV4EPP6VECTORllll( THIS$1, *(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) + 168ll), 7ll, 0ll, 3ll, 4ll );
 *(struct $6VECTOR***)((uint8*)*(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) + 184ll) + 32ll) + 536ll) = vr$272;
 struct $6VECTOR** vr$285 = _ZN9RAYTRACER4APV4EPP6VECTORllll( THIS$1, *(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) + 168ll), 1ll, 6ll, 5ll, 2ll );
 *(struct $6VECTOR***)((uint8*)*(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (*(int64*)((uint8*)THIS$1 + 680ll) << (3ll & 63ll))) + 184ll) + 40ll) + 536ll) = vr$285;
 _ZN9RAYTRACER10POLYHELPEREl( THIS$1, *(int64*)((uint8*)THIS$1 + 680ll) );
 fb$result$1 = *(int64*)((uint8*)THIS$1 + 680ll);
 *(int64*)((uint8*)THIS$1 + 680ll) = *(int64*)((uint8*)THIS$1 + 680ll) + 1ll;
 label$1081:;
 return fb$result$1;
}

void _ZN9RAYTRACER17SETOBJECTPOSITIONElddd( struct $9RAYTRACER* THIS$1, int64 ID$1, double XPOS$1, double YPOS$1, double ZPOS$1 )
{
 label$1098:;
 *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (ID$1 << (3ll & 63ll))) + 112ll) = XPOS$1;
 *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (ID$1 << (3ll & 63ll))) + 120ll) = YPOS$1;
 *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (ID$1 << (3ll & 63ll))) + 128ll) = ZPOS$1;
 _ZN9RAYTRACER18GETOBJECTSCREENRECEl( THIS$1, ID$1 );
 label$1099:;
}

int64 _ZN9RAYTRACER13ADDPOINTLIGHTEddddddda( struct $9RAYTRACER* THIS$1, double XPOS$1, double YPOS$1, double ZPOS$1, double MAXWIDTH$1, double RED$1, double GREEN$1, double BLUE$1, int8 BUILDSHADOW$1 )
{
 boolean TMP$1230$1;
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1100:;
 if( MAXWIDTH$1 >= 0x1.p+0 ) goto label$1103;
 {
  MAXWIDTH$1 = 0x1.p+0;
  label$1103:;
 }
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &RED$1, 0x0p+0, 0x1.p+0 );
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &GREEN$1, 0x0p+0, 0x1.p+0 );
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &BLUE$1, 0x0p+0, 0x1.p+0 );
 if( (int64)BUILDSHADOW$1 == 0ll ) goto label$1104;
 TMP$1230$1 = (boolean)1ll;
 goto label$1105;
 label$1104:;
 TMP$1230$1 = (boolean)0ll;
 label$1105:;
 BUILDSHADOW$1 = (int8)-TMP$1230$1;
 void* vr$10 = realloc( *(void**)((uint8*)THIS$1 + 704ll), (uint64)((*(int64*)((uint8*)THIS$1 + 696ll) << (3ll & 63ll)) + 8ll) );
 *(struct $5LIGHT***)((uint8*)THIS$1 + 704ll) = (struct $5LIGHT**)vr$10;
 void* vr$12 = calloc( 200ull, 1ull );
 *(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 704ll) + (*(int64*)((uint8*)THIS$1 + 696ll) << (3ll & 63ll))) = (struct $5LIGHT*)vr$12;
 *($11LIGHT_TYPES*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 704ll) + (*(int64*)((uint8*)THIS$1 + 696ll) << (3ll & 63ll))) = 0ll;
 *(double*)((uint8*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 704ll) + (*(int64*)((uint8*)THIS$1 + 696ll) << (3ll & 63ll))) + 16ll) = XPOS$1;
 *(double*)((uint8*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 704ll) + (*(int64*)((uint8*)THIS$1 + 696ll) << (3ll & 63ll))) + 24ll) = YPOS$1;
 *(double*)((uint8*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 704ll) + (*(int64*)((uint8*)THIS$1 + 696ll) << (3ll & 63ll))) + 32ll) = ZPOS$1;
 *(double*)((uint8*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 704ll) + (*(int64*)((uint8*)THIS$1 + 696ll) << (3ll & 63ll))) + 176ll) = MAXWIDTH$1;
 *(double*)((uint8*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 704ll) + (*(int64*)((uint8*)THIS$1 + 696ll) << (3ll & 63ll))) + 144ll) = RED$1;
 *(double*)((uint8*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 704ll) + (*(int64*)((uint8*)THIS$1 + 696ll) << (3ll & 63ll))) + 152ll) = GREEN$1;
 *(double*)((uint8*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 704ll) + (*(int64*)((uint8*)THIS$1 + 696ll) << (3ll & 63ll))) + 160ll) = BLUE$1;
 *(int8*)((uint8*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 704ll) + (*(int64*)((uint8*)THIS$1 + 696ll) << (3ll & 63ll))) + 192ll) = BUILDSHADOW$1;
 fb$result$1 = *(int64*)((uint8*)THIS$1 + 696ll);
 *(int64*)((uint8*)THIS$1 + 696ll) = *(int64*)((uint8*)THIS$1 + 696ll) + 1ll;
 label$1101:;
 return fb$result$1;
}

void _ZN9RAYTRACER16SETLIGHTPOSITIONElddd( struct $9RAYTRACER* THIS$1, int64 LIGHTID$1, double XPOS$1, double YPOS$1, double ZPOS$1 )
{
 label$1106:;
 if( ((int64)-(LIGHTID$1 < 0ll) | (int64)-(LIGHTID$1 >= *(int64*)((uint8*)THIS$1 + 696ll))) == 0ll ) goto label$1109;
 {
  goto label$1107;
  label$1109:;
 }
 *(double*)((uint8*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 704ll) + (LIGHTID$1 << (3ll & 63ll))) + 16ll) = XPOS$1;
 *(double*)((uint8*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 704ll) + (LIGHTID$1 << (3ll & 63ll))) + 24ll) = YPOS$1;
 *(double*)((uint8*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 704ll) + (LIGHTID$1 << (3ll & 63ll))) + 32ll) = ZPOS$1;
 label$1107:;
}

void _ZN9RAYTRACER16GETPOLYSCREENRECEll( struct $9RAYTRACER* THIS$1, int64 OBJID$1, int64 POLYID$1 )
{
 label$1110:;
 struct $6VECTOR* TMP$1;
 __builtin_memset( &TMP$1, 0, 8ll );
 double X$1;
 __builtin_memset( &X$1, 0, 8ll );
 double Y$1;
 __builtin_memset( &Y$1, 0, 8ll );
 if( *(int64*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) == 1ll ) goto label$1113;
 {
  goto label$1111;
  label$1113:;
 }
 if( *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 176ll) >= 1ll ) goto label$1115;
 {
  goto label$1111;
  label$1115:;
 }
 {
  struct $9RECTANGLE* TMP$1231$2;
  TMP$1231$2 = (struct $9RECTANGLE*)((uint8*)*(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 184ll) + (POLYID$1 << (3ll & 63ll))) + 432ll);
  *(double*)((uint8*)TMP$1231$2 + 32ll) = (double)*(int64*)((uint8*)THIS$1 + 424ll);
  *(double*)((uint8*)TMP$1231$2 + 40ll) = (double)*(int64*)((uint8*)THIS$1 + 432ll);
  *(double*)((uint8*)TMP$1231$2 + 64ll) = (double)-(*(int64*)((uint8*)THIS$1 + 424ll));
  *(double*)((uint8*)TMP$1231$2 + 72ll) = (double)-(*(int64*)((uint8*)THIS$1 + 432ll));
 }
 {
  int64 VC$2;
  VC$2 = 0ll;
  int64 TMP$1232$2;
  TMP$1232$2 = *(int64*)((uint8*)*(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 184ll) + (POLYID$1 << (3ll & 63ll))) + 528ll) + -1ll;
  goto label$1116;
  label$1119:;
  {
   TMP$1 = *(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)*(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 184ll) + (POLYID$1 << (3ll & 63ll))) + 536ll) + (VC$2 << (3ll & 63ll)));
   if( *(double*)((uint8*)TMP$1 + 16ll) <= 0x0p+0 ) goto label$1121;
   {
    X$1 = (double)*(int64*)((uint8*)THIS$1 + 440ll) + ((*(double*)TMP$1 * *(double*)((uint8*)THIS$1 + 456ll)) / *(double*)((uint8*)TMP$1 + 16ll));
    Y$1 = (double)*(int64*)((uint8*)THIS$1 + 448ll) - ((*(double*)((uint8*)TMP$1 + 8ll) * *(double*)((uint8*)THIS$1 + 456ll)) / *(double*)((uint8*)TMP$1 + 16ll));
    if( X$1 >= *(double*)((uint8*)*(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 184ll) + (POLYID$1 << (3ll & 63ll))) + 464ll) ) goto label$1123;
    {
     *(double*)((uint8*)*(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 184ll) + (POLYID$1 << (3ll & 63ll))) + 464ll) = X$1;
    }
    goto label$1122;
    label$1123:;
    if( X$1 <= *(double*)((uint8*)*(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 184ll) + (POLYID$1 << (3ll & 63ll))) + 496ll) ) goto label$1124;
    {
     *(double*)((uint8*)*(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 184ll) + (POLYID$1 << (3ll & 63ll))) + 496ll) = X$1;
    }
    label$1124:;
    label$1122:;
    if( Y$1 >= *(double*)((uint8*)*(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 184ll) + (POLYID$1 << (3ll & 63ll))) + 472ll) ) goto label$1126;
    {
     *(double*)((uint8*)*(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 184ll) + (POLYID$1 << (3ll & 63ll))) + 472ll) = Y$1;
    }
    goto label$1125;
    label$1126:;
    if( Y$1 <= *(double*)((uint8*)*(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 184ll) + (POLYID$1 << (3ll & 63ll))) + 504ll) ) goto label$1127;
    {
     *(double*)((uint8*)*(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 184ll) + (POLYID$1 << (3ll & 63ll))) + 504ll) = Y$1;
    }
    label$1127:;
    label$1125:;
   }
   label$1121:;
   label$1120:;
  }
  label$1117:;
  VC$2 = VC$2 + 1ll;
  label$1116:;
  if( VC$2 <= TMP$1232$2 ) goto label$1119;
  label$1118:;
 }
 label$1111:;
}

void _ZN9RAYTRACER18GETOBJECTSCREENRECEl( struct $9RAYTRACER* THIS$1, int64 OBJID$1 )
{
 label$1128:;
 double X$1;
 __builtin_memset( &X$1, 0, 8ll );
 double Y$1;
 __builtin_memset( &Y$1, 0, 8ll );
 struct $6VECTOR* LPVEC$1;
 __builtin_memset( &LPVEC$1, 0, 8ll );
 {
  struct $9RECTANGLE* TMP$1233$2;
  TMP$1233$2 = (struct $9RECTANGLE*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 16ll);
  *(double*)((uint8*)TMP$1233$2 + 32ll) = (double)*(int64*)((uint8*)THIS$1 + 424ll);
  *(double*)((uint8*)TMP$1233$2 + 40ll) = (double)*(int64*)((uint8*)THIS$1 + 432ll);
  *(double*)((uint8*)TMP$1233$2 + 64ll) = (double)-(*(int64*)((uint8*)THIS$1 + 424ll));
  *(double*)((uint8*)TMP$1233$2 + 72ll) = (double)-(*(int64*)((uint8*)THIS$1 + 432ll));
 }
 {
  $14OBJECT3D_TYPES TMP$1234$2;
  TMP$1234$2 = *($14OBJECT3D_TYPES*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll)));
  if( TMP$1234$2 != 1ll ) goto label$1131;
  label$1132:;
  {
   {
    int64 VC$4;
    VC$4 = 0ll;
    int64 TMP$1235$4;
    TMP$1235$4 = *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 160ll) + -1ll;
    goto label$1133;
    label$1136:;
    {
     LPVEC$1 = *(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 168ll) + (VC$4 << (3ll & 63ll)));
     if( *(double*)((uint8*)LPVEC$1 + 16ll) == 0x0p+0 ) goto label$1138;
     {
      X$1 = (double)*(int64*)((uint8*)THIS$1 + 440ll) + ((*(double*)LPVEC$1 * *(double*)((uint8*)THIS$1 + 456ll)) / *(double*)((uint8*)LPVEC$1 + 16ll));
      Y$1 = (double)*(int64*)((uint8*)THIS$1 + 448ll) - ((*(double*)((uint8*)LPVEC$1 + 8ll) * *(double*)((uint8*)THIS$1 + 456ll)) / *(double*)((uint8*)LPVEC$1 + 16ll));
      if( X$1 >= *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 48ll) ) goto label$1140;
      {
       *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 48ll) = X$1;
      }
      goto label$1139;
      label$1140:;
      if( X$1 <= *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 80ll) ) goto label$1141;
      {
       *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 80ll) = X$1;
      }
      label$1141:;
      label$1139:;
      if( Y$1 >= *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 56ll) ) goto label$1143;
      {
       *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 56ll) = Y$1;
      }
      goto label$1142;
      label$1143:;
      if( Y$1 <= *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 88ll) ) goto label$1144;
      {
       *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 88ll) = Y$1;
      }
      label$1144:;
      label$1142:;
     }
     label$1138:;
     label$1137:;
    }
    label$1134:;
    VC$4 = VC$4 + 1ll;
    label$1133:;
    if( VC$4 <= TMP$1235$4 ) goto label$1136;
    label$1135:;
   }
  }
  goto label$1130;
  label$1131:;
  if( TMP$1234$2 != 0ll ) goto label$1145;
  label$1146:;
  {
   {
    struct $6VECTOR* TMP$1236$4;
    TMP$1236$4 = (struct $6VECTOR*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 112ll);
    X$1 = (double)*(int64*)((uint8*)THIS$1 + 440ll) + (((*(double*)TMP$1236$4 - (*(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 152ll) * 0x1.199999999999Ap+0)) * *(double*)((uint8*)THIS$1 + 456ll)) / *(double*)((uint8*)TMP$1236$4 + 16ll));
    Y$1 = (double)*(int64*)((uint8*)THIS$1 + 448ll) - (((*(double*)((uint8*)TMP$1236$4 + 8ll) + (*(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 152ll) * 0x1.199999999999Ap+0)) * *(double*)((uint8*)THIS$1 + 456ll)) / *(double*)((uint8*)TMP$1236$4 + 16ll));
   }
   {
    struct $9RECTANGLE* TMP$1237$4;
    TMP$1237$4 = (struct $9RECTANGLE*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 16ll);
    if( X$1 >= *(double*)((uint8*)TMP$1237$4 + 32ll) ) goto label$1148;
    {
     *(double*)((uint8*)TMP$1237$4 + 32ll) = X$1;
    }
    goto label$1147;
    label$1148:;
    if( X$1 <= *(double*)((uint8*)TMP$1237$4 + 64ll) ) goto label$1149;
    {
     *(double*)((uint8*)TMP$1237$4 + 64ll) = X$1;
    }
    label$1149:;
    label$1147:;
    if( Y$1 >= *(double*)((uint8*)TMP$1237$4 + 40ll) ) goto label$1151;
    {
     *(double*)((uint8*)TMP$1237$4 + 40ll) = Y$1;
    }
    goto label$1150;
    label$1151:;
    if( Y$1 <= *(double*)((uint8*)TMP$1237$4 + 72ll) ) goto label$1152;
    {
     *(double*)((uint8*)TMP$1237$4 + 72ll) = Y$1;
    }
    label$1152:;
    label$1150:;
   }
   {
    struct $6VECTOR* TMP$1238$4;
    TMP$1238$4 = (struct $6VECTOR*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 112ll);
    X$1 = (double)*(int64*)((uint8*)THIS$1 + 440ll) + (((*(double*)TMP$1238$4 + (*(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 152ll) * 0x1.199999999999Ap+0)) * *(double*)((uint8*)THIS$1 + 456ll)) / *(double*)((uint8*)TMP$1238$4 + 16ll));
    Y$1 = (double)*(int64*)((uint8*)THIS$1 + 448ll) - (((*(double*)((uint8*)TMP$1238$4 + 8ll) - (*(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 152ll) * 0x1.199999999999Ap+0)) * *(double*)((uint8*)THIS$1 + 456ll)) / *(double*)((uint8*)TMP$1238$4 + 16ll));
   }
   {
    struct $9RECTANGLE* TMP$1239$4;
    TMP$1239$4 = (struct $9RECTANGLE*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 16ll);
    if( X$1 >= *(double*)((uint8*)TMP$1239$4 + 32ll) ) goto label$1154;
    {
     *(double*)((uint8*)TMP$1239$4 + 32ll) = X$1;
    }
    goto label$1153;
    label$1154:;
    if( X$1 <= *(double*)((uint8*)TMP$1239$4 + 64ll) ) goto label$1155;
    {
     *(double*)((uint8*)TMP$1239$4 + 64ll) = X$1;
    }
    label$1155:;
    label$1153:;
    if( Y$1 >= *(double*)((uint8*)TMP$1239$4 + 40ll) ) goto label$1157;
    {
     *(double*)((uint8*)TMP$1239$4 + 40ll) = Y$1;
    }
    goto label$1156;
    label$1157:;
    if( Y$1 <= *(double*)((uint8*)TMP$1239$4 + 72ll) ) goto label$1158;
    {
     *(double*)((uint8*)TMP$1239$4 + 72ll) = Y$1;
    }
    label$1158:;
    label$1156:;
   }
  }
  label$1145:;
  label$1130:;
 }
 label$1129:;
}

void _ZN9RAYTRACER10POLYHELPEREl( struct $9RAYTRACER* THIS$1, int64 OBJID$1 )
{
 label$1159:;
 struct $6VECTOR A$1;
 _ZN6VECTORC1Ev( &A$1 );
 struct $6VECTOR B$1;
 _ZN6VECTORC1Ev( &B$1 );
 struct $6VECTOR VP$1;
 _ZN6VECTORC1Ev( &VP$1 );
 struct $4POLY* LPPOLY$1;
 __builtin_memset( &LPPOLY$1, 0, 8ll );
 double L$1;
 __builtin_memset( &L$1, 0, 8ll );
 int64 N$1;
 __builtin_memset( &N$1, 0, 8ll );
 if( *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 176ll) >= 1ll ) goto label$1162;
 {
  goto label$1160;
  label$1162:;
 }
 {
  int64 PC$2;
  PC$2 = 0ll;
  int64 TMP$1240$2;
  TMP$1240$2 = *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 176ll) + -1ll;
  goto label$1163;
  label$1166:;
  {
   struct $6VECTOR TMP$1241$3;
   struct $6VECTOR TMP$1242$3;
   struct $6VECTOR TMP$1243$3;
   struct $6VECTOR TMP$1244$3;
   LPPOLY$1 = *(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 184ll) + (PC$2 << (3ll & 63ll)));
   N$1 = *(int64*)((uint8*)LPPOLY$1 + 528ll) + -1ll;
   _ZmiR6VECTORS0_( &TMP$1241$3, *(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)LPPOLY$1 + 536ll) + 8ll), *(*(struct $6VECTOR***)((uint8*)LPPOLY$1 + 536ll)) );
   __builtin_memcpy( &A$1, &TMP$1241$3, 32 );
   _ZmiR6VECTORS0_( &TMP$1242$3, *(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)LPPOLY$1 + 536ll) + (N$1 << (3ll & 63ll))), *(*(struct $6VECTOR***)((uint8*)LPPOLY$1 + 536ll)) );
   __builtin_memcpy( &B$1, &TMP$1242$3, 32 );
   _Zv24idivR6VECTORS0_( &TMP$1243$3, &A$1, &B$1 );
   __builtin_memcpy( (struct $6VECTOR*)((uint8*)LPPOLY$1 + 576ll), &TMP$1243$3, 32 );
   double vr$48 = _ZmlR6VECTORS0_( *(*(struct $6VECTOR***)((uint8*)LPPOLY$1 + 536ll)), (struct $6VECTOR*)((uint8*)LPPOLY$1 + 576ll) );
   *(double*)((uint8*)LPPOLY$1 + 608ll) = vr$48;
   _ZN6VECTOR10NORMALIZEDEv( &TMP$1244$3, (struct $6VECTOR*)((uint8*)LPPOLY$1 + 576ll) );
   __builtin_memcpy( (struct $6VECTOR*)((uint8*)LPPOLY$1 + 544ll), &TMP$1244$3, 32 );
   _ZN9RAYTRACER16GETPOLYSCREENRECEll( THIS$1, OBJID$1, PC$2 );
  }
  label$1164:;
  PC$2 = PC$2 + 1ll;
  label$1163:;
  if( PC$2 <= TMP$1240$2 ) goto label$1166;
  label$1165:;
 }
 _ZN9RAYTRACER18GETOBJECTSCREENRECEl( THIS$1, OBJID$1 );
 label$1160:;
}

int8 _ZN9RAYTRACER13ISPOLYONPIXELElldd( struct $9RAYTRACER* THIS$1, int64 OBJID$1, int64 POLYID$1, double X$1, double Y$1 )
{
 int8 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 1ll );
 label$1167:;
 if( *(int64*)((uint8*)THIS$1 + 680ll) >= 1ll ) goto label$1170;
 {
  fb$result$1 = (int8)0;
  goto label$1168;
  label$1170:;
 }
 if( *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 176ll) >= 1ll ) goto label$1172;
 {
  fb$result$1 = (int8)0;
  goto label$1168;
  label$1172:;
 }
 {
  struct $9RECTANGLE* TMP$1245$2;
  TMP$1245$2 = (struct $9RECTANGLE*)((uint8*)*(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 184ll) + (POLYID$1 << (3ll & 63ll))) + 432ll);
  if( ((int64)-(X$1 >= *(double*)((uint8*)TMP$1245$2 + 32ll)) & (int64)-(X$1 <= *(double*)((uint8*)TMP$1245$2 + 64ll))) == 0ll ) goto label$1174;
  {
   if( ((int64)-(Y$1 >= *(double*)((uint8*)TMP$1245$2 + 40ll)) & (int64)-(Y$1 <= *(double*)((uint8*)TMP$1245$2 + 72ll))) == 0ll ) goto label$1176;
   {
    fb$result$1 = (int8)-1;
    goto label$1168;
    label$1176:;
   }
  }
  label$1174:;
  label$1173:;
 }
 label$1168:;
 return fb$result$1;
}

int8 _ZN9RAYTRACER18ISANYOBJECTONPIXELEll( struct $9RAYTRACER* THIS$1, int64 X$1, int64 Y$1 )
{
 int8 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 1ll );
 label$1177:;
 if( *(int64*)((uint8*)THIS$1 + 680ll) != 0ll ) goto label$1180;
 {
  fb$result$1 = (int8)0;
  goto label$1178;
  label$1180:;
 }
 {
  int64 I$2;
  I$2 = 0ll;
  int64 TMP$1246$2;
  TMP$1246$2 = *(int64*)((uint8*)THIS$1 + 680ll) + -1ll;
  goto label$1181;
  label$1184:;
  {
   {
    struct $9RECTANGLE* TMP$1247$4;
    TMP$1247$4 = (struct $9RECTANGLE*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (I$2 << (3ll & 63ll))) + 16ll);
    if( ((int64)-((double)X$1 >= *(double*)((uint8*)TMP$1247$4 + 32ll)) & (int64)-((double)X$1 <= *(double*)((uint8*)TMP$1247$4 + 64ll))) == 0ll ) goto label$1186;
    {
     if( ((int64)-((double)Y$1 >= *(double*)((uint8*)TMP$1247$4 + 40ll)) & (int64)-((double)Y$1 <= *(double*)((uint8*)TMP$1247$4 + 72ll))) == 0ll ) goto label$1188;
     {
      fb$result$1 = (int8)-1;
      goto label$1178;
      label$1188:;
     }
    }
    label$1186:;
    label$1185:;
   }
  }
  label$1182:;
  I$2 = I$2 + 1ll;
  label$1181:;
  if( I$2 <= TMP$1246$2 ) goto label$1184;
  label$1183:;
 }
 fb$result$1 = (int8)0;
 goto label$1178;
 label$1178:;
 return fb$result$1;
}

void _ZN9RAYTRACER15BACKGROUNDCOLORER6VECTORS1_( struct $9RAYTRACER* THIS$1, struct $6VECTOR* RETCOL$1, struct $6VECTOR* RAYDIRECTION$1 )
{
 struct $6VECTOR TMP$1248$1;
 label$1189:;
 double L$1;
 double vr$0 = _ZmlR6VECTORS0_( RAYDIRECTION$1, RAYDIRECTION$1 );
 L$1 = vr$0;
 if( L$1 != 0x0p+0 ) goto label$1192;
 {
  *(double*)((uint8*)RAYDIRECTION$1 + 16ll) = 0x1.p+0;
 }
 goto label$1191;
 label$1192:;
 {
  L$1 = __builtin_sqrt( L$1 );
  *(double*)((uint8*)RAYDIRECTION$1 + 16ll) = *(double*)((uint8*)RAYDIRECTION$1 + 16ll) / L$1;
 }
 label$1191:;
 double vr$8 = pow( *(double*)((uint8*)RAYDIRECTION$1 + 16ll), *(double*)((uint8*)RAYDIRECTION$1 + 16ll) );
 L$1 = vr$8;
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &L$1, 0x0p+0, 0x1.p+0 );
 _ZmlR6VECTORd( &TMP$1248$1, (struct $6VECTOR*)((uint8*)THIS$1 + 512ll), L$1 );
 __builtin_memcpy( RETCOL$1, &TMP$1248$1, 32 );
 label$1190:;
}

uint32 _ZN9RAYTRACER9SHOWPOINTEll( struct $9RAYTRACER* THIS$1, int64 X$1, int64 Y$1 )
{
 uint32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$1193:;
 struct $6VECTOR OSRC$1;
 _ZN6VECTORC1Ev( &OSRC$1 );
 struct $6VECTOR ODES$1;
 _ZN6VECTORC1Ev( &ODES$1 );
 struct $6VECTOR RGBCOL$1;
 _ZN6VECTORC1Ev( &RGBCOL$1 );
 int64 CURREC$1;
 __builtin_memset( &CURREC$1, 0, 8ll );
 {
  *(double*)&ODES$1 = (double)(X$1 - *(int64*)((uint8*)THIS$1 + 440ll)) * *(double*)((uint8*)THIS$1 + 464ll);
  *(double*)((uint8*)&ODES$1 + 8ll) = (double)(*(int64*)((uint8*)THIS$1 + 448ll) - Y$1) * *(double*)((uint8*)THIS$1 + 464ll);
  *(double*)((uint8*)&ODES$1 + 16ll) = 0x1.p+0;
 }
 int8 vr$15 = _ZN9RAYTRACER18ISANYOBJECTONPIXELEll( THIS$1, X$1, Y$1 );
 if( (int64)vr$15 != -1ll ) goto label$1196;
 {
  _ZN9RAYTRACER8RAYTRACEERK6VECTORS2_lRS0_( THIS$1, (struct $6VECTOR*)&OSRC$1, (struct $6VECTOR*)&ODES$1, CURREC$1, &RGBCOL$1 );
 }
 goto label$1195;
 label$1196:;
 {
  _ZN9RAYTRACER15BACKGROUNDCOLORER6VECTORS1_( THIS$1, &RGBCOL$1, &ODES$1 );
 }
 label$1195:;
 uint32 vr$23 = _ZN6VECTORcvjEv( &RGBCOL$1 );
 fb$result$1 = vr$23;
 goto label$1194;
 label$1194:;
 return fb$result$1;
}

int8 _ZN9RAYTRACER17ISMATHSPHEREONRAYER6VECTORS1_lS1_S1_S1_( struct $9RAYTRACER* THIS$1, struct $6VECTOR* RAYORIGIN$1, struct $6VECTOR* RAYDIRECTION$1, int64 OBJID$1, struct $6VECTOR* HITPOINT$1, struct $6VECTOR* NORMALE$1, struct $6VECTOR* MAPXY$1 )
{
 struct $6VECTOR TMP$1260$1;
 struct $6VECTOR TMP$1261$1;
 struct $6VECTOR TMP$1262$1;
 int8 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 1ll );
 label$1197:;
 static struct $6VECTOR A$1;
 static int64 LABEL$1199$1;
 if( LABEL$1199$1 != 0ll ) goto label$1200;
 LABEL$1199$1 = 1ll;
 _ZN6VECTORC1Ev( &A$1 );
 label$1200:;
 static struct $6VECTOR B$1;
 static int64 LABEL$1201$1;
 if( LABEL$1201$1 != 0ll ) goto label$1202;
 LABEL$1201$1 = 1ll;
 _ZN6VECTORC1Ev( &B$1 );
 label$1202:;
 static struct $6VECTOR FOUNDPOINT$1;
 static int64 LABEL$1203$1;
 if( LABEL$1203$1 != 0ll ) goto label$1204;
 LABEL$1203$1 = 1ll;
 _ZN6VECTORC1Ev( &FOUNDPOINT$1 );
 label$1204:;
 static struct $6VECTOR FOUNDNORMALE$1;
 static int64 LABEL$1205$1;
 if( LABEL$1205$1 != 0ll ) goto label$1206;
 LABEL$1205$1 = 1ll;
 _ZN6VECTORC1Ev( &FOUNDNORMALE$1 );
 label$1206:;
 static int8 INSPHERE$1;
 static int8 FLAG$1;
 static double T1$1;
 static double T2$1;
 static double L$1;
 static double L2$1;
 static double M$1;
 static double N$1;
 static double RADIUS$1;
 static int64 MATID$1;
 FLAG$1 = (int8)0;
 INSPHERE$1 = (int8)0;
 MATID$1 = *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 144ll);
 RADIUS$1 = *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 152ll);
 double vr$9 = _ZmlR6VECTORS0_( RAYDIRECTION$1, RAYDIRECTION$1 );
 L$1 = vr$9;
 if( L$1 != 0x0p+0 ) goto label$1208;
 {
  L$1 = 0x1.0624DD2F1A9FCp-10;
  label$1208:;
 }
 M$1 = (((*(double*)RAYDIRECTION$1 * (*(double*)RAYORIGIN$1 - *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 112ll))) * 0x1.p+1) + ((*(double*)((uint8*)RAYDIRECTION$1 + 8ll) * (*(double*)((uint8*)RAYORIGIN$1 + 8ll) - *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 120ll))) * 0x1.p+1)) + ((*(double*)((uint8*)RAYDIRECTION$1 + 16ll) * (*(double*)((uint8*)RAYORIGIN$1 + 16ll) - *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 128ll))) * 0x1.p+1);
 double vr$49 = _ZmlR6VECTORS0_( (struct $6VECTOR*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 112ll), (struct $6VECTOR*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 112ll) );
 double vr$50 = _ZmlR6VECTORS0_( RAYORIGIN$1, RAYORIGIN$1 );
 N$1 = vr$49 + vr$50;
 double vr$57 = _ZmlR6VECTORS0_( (struct $6VECTOR*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 112ll), RAYORIGIN$1 );
 N$1 = (N$1 - (vr$57 * 0x1.p+1)) - (RADIUS$1 * RADIUS$1);
 T1$1 = (M$1 * M$1) - ((L$1 * N$1) * 0x1.p+2);
 if( T1$1 >= 0x0p+0 ) goto label$1210;
 {
  fb$result$1 = (int8)0;
  goto label$1198;
  label$1210:;
 }
 L2$1 = L$1 * 0x1.p+1;
 if( T1$1 != 0x0p+0 ) goto label$1212;
 {
  struct $6VECTOR TMP$1249$2;
  struct $6VECTOR TMP$1250$2;
  T1$1 = -M$1 / L2$1;
  if( T1$1 > 0x0p+0 ) goto label$1214;
  {
   fb$result$1 = (int8)0;
   goto label$1198;
   label$1214:;
  }
  struct $6VECTOR* vr$70 = _ZmldR6VECTOR( &TMP$1249$2, T1$1, RAYDIRECTION$1 );
  _ZplR6VECTORS0_( &TMP$1250$2, RAYORIGIN$1, vr$70 );
  __builtin_memcpy( &FOUNDPOINT$1, &TMP$1250$2, 32 );
  INSPHERE$1 = (int8)0;
  if( (int64)*(int8*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 259ll) != -1ll ) goto label$1216;
  {
   _ZN9RAYTRACER8GETMAPXYEllR6VECTORS1_( THIS$1, OBJID$1, 0ll, &FOUNDPOINT$1, MAPXY$1 );
   if( *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 344ll) <= -1ll ) goto label$1218;
   {
    int8 vr$82 = _ZN9RAYTRACER19ISVISIBLEONSTAMPMAPElR6VECTOR( THIS$1, MATID$1, MAPXY$1 );
    FLAG$1 = vr$82;
   }
   goto label$1217;
   label$1218:;
   {
    FLAG$1 = (int8)-1;
   }
   label$1217:;
  }
  goto label$1215;
  label$1216:;
  {
   FLAG$1 = (int8)-1;
  }
  label$1215:;
 }
 goto label$1211;
 label$1212:;
 {
  T1$1 = (-M$1 - __builtin_sqrt( T1$1 )) / L2$1;
  T2$1 = (-M$1 + __builtin_sqrt( T1$1 )) / L2$1;
  if( T1$1 >= 0x1.0624DD2F1A9FCp-10 ) goto label$1220;
  {
   T1$1 = 0x0p+0;
   label$1220:;
  }
  if( T2$1 >= 0x1.0624DD2F1A9FCp-10 ) goto label$1222;
  {
   T2$1 = 0x0p+0;
   label$1222:;
  }
  if( ((int64)-(T1$1 == 0x0p+0) & (int64)-(T2$1 == 0x0p+0)) == 0ll ) goto label$1224;
  {
   fb$result$1 = (int8)0;
   goto label$1198;
   label$1224:;
  }
  if( ((int64)-(T1$1 > 0x0p+0) & (int64)-(T2$1 > 0x0p+0)) == 0ll ) goto label$1226;
  {
   struct $6VECTOR TMP$1252$3;
   struct $6VECTOR TMP$1253$3;
   if( T2$1 >= T1$1 ) goto label$1228;
   {
    {
     double TMP$1251$5;
     TMP$1251$5 = T1$1;
     T1$1 = T2$1;
     T2$1 = TMP$1251$5;
    }
    label$1228:;
   }
   struct $6VECTOR* vr$98 = _ZmldR6VECTOR( &TMP$1252$3, T1$1, RAYDIRECTION$1 );
   _ZplR6VECTORS0_( &TMP$1253$3, RAYORIGIN$1, vr$98 );
   __builtin_memcpy( &FOUNDPOINT$1, &TMP$1253$3, 32 );
   if( (int64)*(int8*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 259ll) != -1ll ) goto label$1230;
   {
    _ZN9RAYTRACER8GETMAPXYEllR6VECTORS1_( THIS$1, OBJID$1, 0ll, &FOUNDPOINT$1, MAPXY$1 );
    if( *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 344ll) <= -1ll ) goto label$1232;
    {
     int8 vr$110 = _ZN9RAYTRACER19ISVISIBLEONSTAMPMAPElR6VECTOR( THIS$1, MATID$1, MAPXY$1 );
     FLAG$1 = vr$110;
     if( (int64)FLAG$1 != 0ll ) goto label$1234;
     {
      struct $6VECTOR TMP$1254$6;
      struct $6VECTOR TMP$1255$6;
      INSPHERE$1 = (int8)-1;
      struct $6VECTOR* vr$113 = _ZmldR6VECTOR( &TMP$1254$6, T2$1, RAYDIRECTION$1 );
      _ZplR6VECTORS0_( &TMP$1255$6, RAYORIGIN$1, vr$113 );
      __builtin_memcpy( &FOUNDPOINT$1, &TMP$1255$6, 32 );
      _ZN9RAYTRACER8GETMAPXYEllR6VECTORS1_( THIS$1, OBJID$1, 0ll, &FOUNDPOINT$1, MAPXY$1 );
      int8 vr$116 = _ZN9RAYTRACER19ISVISIBLEONSTAMPMAPElR6VECTOR( THIS$1, MATID$1, MAPXY$1 );
      FLAG$1 = vr$116;
     }
     label$1234:;
     label$1233:;
    }
    goto label$1231;
    label$1232:;
    {
     FLAG$1 = (int8)-1;
    }
    label$1231:;
   }
   goto label$1229;
   label$1230:;
   {
    FLAG$1 = (int8)-1;
   }
   label$1229:;
  }
  goto label$1225;
  label$1226:;
  {
   if( T1$1 <= 0x0p+0 ) goto label$1236;
   {
    struct $6VECTOR TMP$1256$4;
    struct $6VECTOR TMP$1257$4;
    struct $6VECTOR* vr$118 = _ZmldR6VECTOR( &TMP$1256$4, T1$1, RAYDIRECTION$1 );
    _ZplR6VECTORS0_( &TMP$1257$4, RAYORIGIN$1, vr$118 );
    __builtin_memcpy( &FOUNDPOINT$1, &TMP$1257$4, 32 );
    INSPHERE$1 = (int8)0;
   }
   goto label$1235;
   label$1236:;
   {
    struct $6VECTOR TMP$1258$4;
    struct $6VECTOR TMP$1259$4;
    struct $6VECTOR* vr$122 = _ZmldR6VECTOR( &TMP$1258$4, T2$1, RAYDIRECTION$1 );
    _ZplR6VECTORS0_( &TMP$1259$4, RAYORIGIN$1, vr$122 );
    __builtin_memcpy( &FOUNDPOINT$1, &TMP$1259$4, 32 );
    INSPHERE$1 = (int8)-1;
   }
   label$1235:;
   if( (int64)*(int8*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 259ll) != -1ll ) goto label$1238;
   {
    _ZN9RAYTRACER8GETMAPXYEllR6VECTORS1_( THIS$1, OBJID$1, 0ll, &FOUNDPOINT$1, MAPXY$1 );
    if( *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 344ll) <= -1ll ) goto label$1240;
    {
     int8 vr$134 = _ZN9RAYTRACER19ISVISIBLEONSTAMPMAPElR6VECTOR( THIS$1, MATID$1, MAPXY$1 );
     FLAG$1 = vr$134;
    }
    goto label$1239;
    label$1240:;
    {
     FLAG$1 = (int8)-1;
    }
    label$1239:;
   }
   goto label$1237;
   label$1238:;
   {
    FLAG$1 = (int8)-1;
   }
   label$1237:;
  }
  label$1225:;
 }
 label$1211:;
 if( (int64)FLAG$1 != 0ll ) goto label$1242;
 {
  fb$result$1 = (int8)0;
  goto label$1198;
  label$1242:;
 }
 _ZmiR6VECTORS0_( &TMP$1260$1, &FOUNDPOINT$1, (struct $6VECTOR*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 112ll) );
 __builtin_memcpy( NORMALE$1, &TMP$1260$1, 32 );
 struct $6VECTOR* vr$149 = _ZmlR6VECTORd( &TMP$1261$1, NORMALE$1, 0x1.004189374BC6Ap+0 );
 _ZplR6VECTORS0_( &TMP$1262$1, vr$149, (struct $6VECTOR*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 112ll) );
 __builtin_memcpy( HITPOINT$1, &TMP$1262$1, 32 );
 _ZN6VECTOR9NORMALIZEEv( NORMALE$1 );
 if( (int64)INSPHERE$1 != -1ll ) goto label$1244;
 {
  _ZN6VECTORmLEd( NORMALE$1, -0x1.p+0 );
  label$1244:;
 }
 fb$result$1 = (int8)-1;
 goto label$1198;
 label$1198:;
 return fb$result$1;
}

int8 _ZN9RAYTRACER14ISPOLYGONONRAYER6VECTORS1_lRlS1_S1_S1_( struct $9RAYTRACER* THIS$1, struct $6VECTOR* RAYORIGIN$1, struct $6VECTOR* RAYDIRECTION$1, int64 OBJID$1, int64* POLYID$1, struct $6VECTOR* HITPOINT$1, struct $6VECTOR* NORMALE$1, struct $6VECTOR* MAPXY$1 )
{
 int8 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 1ll );
 label$1245:;
 int8 FLAG$1;
 __builtin_memset( &FLAG$1, 0, 1ll );
 int64 FOUNDPOLYID$1;
 __builtin_memset( &FOUNDPOLYID$1, 0, 8ll );
 int64 MATID$1;
 __builtin_memset( &MATID$1, 0, 8ll );
 struct $6VECTOR FOUNDHITPOINT$1;
 _ZN6VECTORC1Ev( &FOUNDHITPOINT$1 );
 struct $6VECTOR FOUNDNORMALE$1;
 _ZN6VECTORC1Ev( &FOUNDNORMALE$1 );
 struct $6VECTOR FOUNDMAPXY$1;
 _ZN6VECTORC1Ev( &FOUNDMAPXY$1 );
 double OLDDISTANCE2$1;
 __builtin_memset( &OLDDISTANCE2$1, 0, 8ll );
 double NEWDISTANCE2$1;
 __builtin_memset( &NEWDISTANCE2$1, 0, 8ll );
 struct $6VECTOR A$1;
 _ZN6VECTORC1Ev( &A$1 );
 struct $6VECTOR B$1;
 _ZN6VECTORC1Ev( &B$1 );
 struct $6VECTOR C$1;
 _ZN6VECTORC1Ev( &C$1 );
 double HELP$1;
 __builtin_memset( &HELP$1, 0, 8ll );
 double L$1;
 __builtin_memset( &L$1, 0, 8ll );
 double M$1;
 __builtin_memset( &M$1, 0, 8ll );
 double N$1;
 __builtin_memset( &N$1, 0, 8ll );
 double INSIDE$1;
 __builtin_memset( &INSIDE$1, 0, 8ll );
 double ORIENT$1;
 __builtin_memset( &ORIENT$1, 0, 8ll );
 double T$1;
 __builtin_memset( &T$1, 0, 8ll );
 double X$1;
 __builtin_memset( &X$1, 0, 8ll );
 double Y$1;
 __builtin_memset( &Y$1, 0, 8ll );
 struct $4POLY* LPPOLY$1;
 __builtin_memset( &LPPOLY$1, 0, 8ll );
 if( *(int64*)((uint8*)THIS$1 + 680ll) >= 1ll ) goto label$1248;
 {
  fb$result$1 = (int8)0;
  goto label$1246;
  label$1248:;
 }
 OLDDISTANCE2$1 = 0x1.7D784p+26;
 if( *(int64*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) == 1ll ) goto label$1250;
 {
  fb$result$1 = (int8)0;
  goto label$1246;
  label$1250:;
 }
 if( *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 176ll) >= 1ll ) goto label$1252;
 {
  fb$result$1 = (int8)0;
  goto label$1246;
  label$1252:;
 }
 MATID$1 = *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 144ll);
 {
  int64 PC$2;
  PC$2 = 0ll;
  int64 TMP$1263$2;
  TMP$1263$2 = *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 176ll) + -1ll;
  goto label$1253;
  label$1256:;
  {
   struct $6VECTOR TMP$1265$3;
   struct $6VECTOR TMP$1266$3;
   if( *(int64*)((uint8*)THIS$1 + 560ll) != 0ll ) goto label$1258;
   {
    X$1 = (double)*(int64*)((uint8*)THIS$1 + 440ll) + (*(double*)RAYDIRECTION$1 * *(double*)((uint8*)THIS$1 + 456ll));
    Y$1 = (double)*(int64*)((uint8*)THIS$1 + 448ll) - (*(double*)((uint8*)RAYDIRECTION$1 + 8ll) * *(double*)((uint8*)THIS$1 + 456ll));
    int8 vr$53 = _ZN9RAYTRACER13ISPOLYONPIXELElldd( THIS$1, OBJID$1, PC$2, X$1, Y$1 );
    if( (int64)vr$53 != 0ll ) goto label$1260;
    {
     goto label$1254;
     label$1260:;
    }
   }
   label$1258:;
   label$1257:;
   LPPOLY$1 = *(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 184ll) + (PC$2 << (3ll & 63ll)));
   double vr$63 = _ZmlR6VECTORS0_( (struct $6VECTOR*)((uint8*)LPPOLY$1 + 576ll), RAYORIGIN$1 );
   HELP$1 = vr$63;
   HELP$1 = -(HELP$1 - *(double*)((uint8*)LPPOLY$1 + 608ll));
   if( HELP$1 <= 0x0p+0 ) goto label$1262;
   {
    struct $6VECTOR TMP$1264$4;
    _ZmlR6VECTORd( &TMP$1264$4, (struct $6VECTOR*)((uint8*)LPPOLY$1 + 544ll), -0x1.p+0 );
    __builtin_memcpy( NORMALE$1, &TMP$1264$4, 32 );
   }
   goto label$1261;
   label$1262:;
   {
    __builtin_memcpy( NORMALE$1, (struct $6VECTOR*)((uint8*)LPPOLY$1 + 544ll), 32 );
   }
   label$1261:;
   double vr$73 = _ZmlR6VECTORS0_( NORMALE$1, RAYDIRECTION$1 );
   T$1 = vr$73;
   if( T$1 != 0x0p+0 ) goto label$1264;
   {
    goto label$1254;
    label$1264:;
   }
   double vr$74 = _ZmlR6VECTORS0_( NORMALE$1, RAYORIGIN$1 );
   double vr$83 = _ZmlR6VECTORS0_( *(*(struct $6VECTOR***)((uint8*)*(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 184ll) + (PC$2 << (3ll & 63ll))) + 536ll)), NORMALE$1 );
   T$1 = -(vr$74 - vr$83) / T$1;
   if( T$1 > 0x0p+0 ) goto label$1266;
   {
    goto label$1254;
    label$1266:;
   }
   struct $6VECTOR* vr$88 = _ZmldR6VECTOR( &TMP$1265$3, T$1, RAYDIRECTION$1 );
   _ZplR6VECTORS0_( &TMP$1266$3, RAYORIGIN$1, vr$88 );
   __builtin_memcpy( HITPOINT$1, &TMP$1266$3, 32 );
   T$1 = 0x0p+0;
   {
    int64 VC$4;
    VC$4 = 0ll;
    int64 TMP$1267$4;
    TMP$1267$4 = *(int64*)((uint8*)LPPOLY$1 + 528ll) + -1ll;
    goto label$1267;
    label$1270:;
    {
     struct $6VECTOR TMP$1268$5;
     struct $6VECTOR TMP$1269$5;
     _ZmiR6VECTORS0_( &TMP$1268$5, *(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)LPPOLY$1 + 536ll) + (VC$4 << (3ll & 63ll))), HITPOINT$1 );
     __builtin_memcpy( &A$1, &TMP$1268$5, 32 );
     _ZmiR6VECTORS0_( &TMP$1269$5, *(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)LPPOLY$1 + 536ll) + (((VC$4 + 1ll) % *(int64*)((uint8*)LPPOLY$1 + 528ll)) << (3ll & 63ll))), HITPOINT$1 );
     __builtin_memcpy( &B$1, &TMP$1269$5, 32 );
     _ZN6VECTOR9NORMALIZEEv( &A$1 );
     _ZN6VECTOR9NORMALIZEEv( &B$1 );
     double vr$112 = _ZmlR6VECTORS0_( &A$1, &B$1 );
     INSIDE$1 = vr$112;
     if( INSIDE$1 >= -0x1.p+0 ) goto label$1272;
     {
      goto label$1254;
      label$1272:;
     }
     if( INSIDE$1 <= 0x1.p+0 ) goto label$1274;
     {
      goto label$1254;
      label$1274:;
     }
     T$1 = T$1 + __builtin_acos( INSIDE$1 );
    }
    label$1268:;
    VC$4 = VC$4 + 1ll;
    label$1267:;
    if( VC$4 <= TMP$1267$4 ) goto label$1270;
    label$1269:;
   }
   if( ((int64)-(T$1 > 0x1.921CAC083126Fp+2) & (int64)-(T$1 < 0x1.922339C0EBEEp+2)) == 0ll ) goto label$1276;
   {
    struct $6VECTOR TMP$1270$4;
    if( (int64)*(int8*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 259ll) != -1ll ) goto label$1278;
    {
     _ZN9RAYTRACER8GETMAPXYEllR6VECTORS1_( THIS$1, OBJID$1, PC$2, HITPOINT$1, MAPXY$1 );
     if( *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 344ll) <= -1ll ) goto label$1280;
     {
      int8 vr$128 = _ZN9RAYTRACER19ISVISIBLEONSTAMPMAPElR6VECTOR( THIS$1, MATID$1, MAPXY$1 );
      if( (int64)vr$128 != 0ll ) goto label$1282;
      {
       goto label$1254;
       label$1282:;
      }
     }
     label$1280:;
     label$1279:;
    }
    label$1278:;
    label$1277:;
    FLAG$1 = (int8)-1;
    _ZmiR6VECTORS0_( &TMP$1270$4, HITPOINT$1, RAYORIGIN$1 );
    __builtin_memcpy( &C$1, &TMP$1270$4, 32 );
    if( PC$2 != 0ll ) goto label$1284;
    {
     FOUNDPOLYID$1 = 0ll;
     __builtin_memcpy( &FOUNDHITPOINT$1, HITPOINT$1, 32 );
     __builtin_memcpy( &FOUNDNORMALE$1, NORMALE$1, 32 );
     __builtin_memcpy( &FOUNDMAPXY$1, MAPXY$1, 32 );
     double vr$138 = _ZmlR6VECTORS0_( &C$1, &C$1 );
     OLDDISTANCE2$1 = vr$138;
    }
    goto label$1283;
    label$1284:;
    {
     double vr$141 = _ZmlR6VECTORS0_( &C$1, &C$1 );
     NEWDISTANCE2$1 = vr$141;
     if( NEWDISTANCE2$1 >= OLDDISTANCE2$1 ) goto label$1286;
     {
      FOUNDPOLYID$1 = PC$2;
      __builtin_memcpy( &FOUNDHITPOINT$1, HITPOINT$1, 32 );
      __builtin_memcpy( &FOUNDNORMALE$1, NORMALE$1, 32 );
      __builtin_memcpy( &FOUNDMAPXY$1, MAPXY$1, 32 );
      OLDDISTANCE2$1 = NEWDISTANCE2$1;
     }
     label$1286:;
     label$1285:;
    }
    label$1283:;
   }
   label$1276:;
   label$1275:;
  }
  label$1254:;
  PC$2 = PC$2 + 1ll;
  label$1253:;
  if( PC$2 <= TMP$1263$2 ) goto label$1256;
  label$1255:;
 }
 if( (int64)FLAG$1 != -1ll ) goto label$1288;
 {
  *POLYID$1 = FOUNDPOLYID$1;
  __builtin_memcpy( HITPOINT$1, &FOUNDHITPOINT$1, 32 );
  __builtin_memcpy( NORMALE$1, &FOUNDNORMALE$1, 32 );
  if( (int64)*(int8*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll))) + 259ll) != -1ll ) goto label$1290;
  {
   __builtin_memcpy( MAPXY$1, &FOUNDMAPXY$1, 32 );
   label$1290:;
  }
 }
 goto label$1287;
 label$1288:;
 {
  *POLYID$1 = -1ll;
 }
 label$1287:;
 fb$result$1 = FLAG$1;
 goto label$1246;
 label$1246:;
 return fb$result$1;
}

int8 _ZN9RAYTRACER13ISOBJECTONRAYER6VECTORS1_lRlS1_S1_S1_S1_( struct $9RAYTRACER* THIS$1, struct $6VECTOR* RAYORIGIN$1, struct $6VECTOR* RAYDIRECTION$1, int64 OBJID$1, int64* POLYID$1, struct $6VECTOR* HITPOINT$1, struct $6VECTOR* NORMALE$1, struct $6VECTOR* BNORMALE$1, struct $6VECTOR* MAPXY$1 )
{
 int8 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 1ll );
 label$1291:;
 int8 FLAG$1;
 __builtin_memset( &FLAG$1, 0, 1ll );
 {
  $14OBJECT3D_TYPES TMP$1271$2;
  TMP$1271$2 = *($14OBJECT3D_TYPES*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll)));
  if( TMP$1271$2 != 1ll ) goto label$1294;
  label$1295:;
  {
   int8 vr$6 = _ZN9RAYTRACER14ISPOLYGONONRAYER6VECTORS1_lRlS1_S1_S1_( THIS$1, RAYORIGIN$1, RAYDIRECTION$1, OBJID$1, POLYID$1, HITPOINT$1, NORMALE$1, MAPXY$1 );
   FLAG$1 = vr$6;
  }
  goto label$1293;
  label$1294:;
  if( TMP$1271$2 != 0ll ) goto label$1296;
  label$1297:;
  {
   int8 vr$7 = _ZN9RAYTRACER17ISMATHSPHEREONRAYER6VECTORS1_lS1_S1_S1_( THIS$1, RAYORIGIN$1, RAYDIRECTION$1, OBJID$1, HITPOINT$1, NORMALE$1, MAPXY$1 );
   FLAG$1 = vr$7;
  }
  label$1296:;
  label$1293:;
 }
 if( (int64)FLAG$1 != -1ll ) goto label$1299;
 {
  if( *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (*(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 144ll) << (3ll & 63ll))) + 304ll) <= -1ll ) goto label$1301;
  {
   _ZN9RAYTRACER9DOBUMPMAPEllR6VECTORS1_S1_( THIS$1, OBJID$1, *POLYID$1, NORMALE$1, BNORMALE$1, MAPXY$1 );
  }
  label$1301:;
  label$1300:;
 }
 label$1299:;
 label$1298:;
 fb$result$1 = FLAG$1;
 goto label$1292;
 label$1292:;
 return fb$result$1;
}

int8 _ZN9RAYTRACER9LINETRACEER6VECTORS1_RlS2_S1_S1_S1_S1_( struct $9RAYTRACER* THIS$1, struct $6VECTOR* RAYORIGIN$1, struct $6VECTOR* RAYDIRECTION$1, int64* OBJID$1, int64* POLYID$1, struct $6VECTOR* HITPOINT$1, struct $6VECTOR* NORMALE$1, struct $6VECTOR* BNORMALE$1, struct $6VECTOR* MAPXY$1 )
{
 int8 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 1ll );
 label$1302:;
 static struct $6VECTOR R$1;
 static int64 LABEL$1304$1;
 if( LABEL$1304$1 != 0ll ) goto label$1305;
 LABEL$1304$1 = 1ll;
 _ZN6VECTORC1Ev( &R$1 );
 label$1305:;
 static struct $6VECTOR N$1;
 static int64 LABEL$1306$1;
 if( LABEL$1306$1 != 0ll ) goto label$1307;
 LABEL$1306$1 = 1ll;
 _ZN6VECTORC1Ev( &N$1 );
 label$1307:;
 static struct $6VECTOR N2$1;
 static int64 LABEL$1308$1;
 if( LABEL$1308$1 != 0ll ) goto label$1309;
 LABEL$1308$1 = 1ll;
 _ZN6VECTORC1Ev( &N2$1 );
 label$1309:;
 static struct $6VECTOR C$1;
 static int64 LABEL$1310$1;
 if( LABEL$1310$1 != 0ll ) goto label$1311;
 LABEL$1310$1 = 1ll;
 _ZN6VECTORC1Ev( &C$1 );
 label$1311:;
 static int8 FLAG$1;
 static int8 FLAG2$1;
 static int64 FOUNDOBJID$1;
 static int64 FOUNDPOLYID$1;
 static struct $6VECTOR FOUNDHITPOINT$1;
 static int64 LABEL$1312$1;
 if( LABEL$1312$1 != 0ll ) goto label$1313;
 LABEL$1312$1 = 1ll;
 _ZN6VECTORC1Ev( &FOUNDHITPOINT$1 );
 label$1313:;
 static struct $6VECTOR FOUNDNORMALE$1;
 static int64 LABEL$1314$1;
 if( LABEL$1314$1 != 0ll ) goto label$1315;
 LABEL$1314$1 = 1ll;
 _ZN6VECTORC1Ev( &FOUNDNORMALE$1 );
 label$1315:;
 static struct $6VECTOR FOUNDBNORMALE$1;
 static int64 LABEL$1316$1;
 if( LABEL$1316$1 != 0ll ) goto label$1317;
 LABEL$1316$1 = 1ll;
 _ZN6VECTORC1Ev( &FOUNDBNORMALE$1 );
 label$1317:;
 static struct $6VECTOR FOUNDMAPXY$1;
 static int64 LABEL$1318$1;
 if( LABEL$1318$1 != 0ll ) goto label$1319;
 LABEL$1318$1 = 1ll;
 _ZN6VECTORC1Ev( &FOUNDMAPXY$1 );
 label$1319:;
 static double OLDDISTANCE2$1;
 static double NEWDISTANCE2$1;
 if( *(int64*)((uint8*)THIS$1 + 680ll) >= 1ll ) goto label$1321;
 {
  fb$result$1 = (int8)0;
  goto label$1303;
  label$1321:;
 }
 OLDDISTANCE2$1 = 0x1.7D784p+26;
 FLAG$1 = (int8)0;
 {
  int64 OC$2;
  OC$2 = 0ll;
  int64 TMP$1272$2;
  TMP$1272$2 = *(int64*)((uint8*)THIS$1 + 680ll) + -1ll;
  goto label$1322;
  label$1325:;
  {
   int8 vr$4 = _ZN9RAYTRACER13ISOBJECTONRAYER6VECTORS1_lRlS1_S1_S1_S1_( THIS$1, RAYORIGIN$1, RAYDIRECTION$1, OC$2, POLYID$1, &R$1, &N$1, &N2$1, MAPXY$1 );
   if( (int64)vr$4 != -1ll ) goto label$1327;
   {
    if( OC$2 != 0ll ) goto label$1329;
    {
     struct $6VECTOR TMP$1273$5;
     __builtin_memcpy( &FOUNDHITPOINT$1, &R$1, 32 );
     __builtin_memcpy( &FOUNDNORMALE$1, &N$1, 32 );
     __builtin_memcpy( &FOUNDBNORMALE$1, &N2$1, 32 );
     __builtin_memcpy( &FOUNDMAPXY$1, MAPXY$1, 32 );
     FOUNDOBJID$1 = 0ll;
     FOUNDPOLYID$1 = *POLYID$1;
     _ZmiR6VECTORS0_( &TMP$1273$5, &R$1, RAYORIGIN$1 );
     __builtin_memcpy( &C$1, &TMP$1273$5, 32 );
     double vr$9 = _ZmlR6VECTORS0_( &C$1, &C$1 );
     OLDDISTANCE2$1 = vr$9;
    }
    goto label$1328;
    label$1329:;
    {
     struct $6VECTOR TMP$1274$5;
     _ZmiR6VECTORS0_( &TMP$1274$5, &R$1, RAYORIGIN$1 );
     __builtin_memcpy( &C$1, &TMP$1274$5, 32 );
     double vr$12 = _ZmlR6VECTORS0_( &C$1, &C$1 );
     NEWDISTANCE2$1 = vr$12;
     if( NEWDISTANCE2$1 >= OLDDISTANCE2$1 ) goto label$1331;
     {
      __builtin_memcpy( &FOUNDHITPOINT$1, &R$1, 32 );
      __builtin_memcpy( &FOUNDNORMALE$1, &N$1, 32 );
      __builtin_memcpy( &FOUNDBNORMALE$1, &N2$1, 32 );
      __builtin_memcpy( &FOUNDMAPXY$1, MAPXY$1, 32 );
      FOUNDOBJID$1 = OC$2;
      FOUNDPOLYID$1 = *POLYID$1;
      OLDDISTANCE2$1 = NEWDISTANCE2$1;
     }
     label$1331:;
     label$1330:;
    }
    label$1328:;
    FLAG$1 = (int8)-1;
   }
   label$1327:;
   label$1326:;
  }
  label$1323:;
  OC$2 = OC$2 + 1ll;
  label$1322:;
  if( OC$2 <= TMP$1272$2 ) goto label$1325;
  label$1324:;
 }
 if( (int64)FLAG$1 != -1ll ) goto label$1333;
 {
  *OBJID$1 = FOUNDOBJID$1;
  *POLYID$1 = FOUNDPOLYID$1;
  __builtin_memcpy( HITPOINT$1, &FOUNDHITPOINT$1, 32 );
  __builtin_memcpy( NORMALE$1, &FOUNDNORMALE$1, 32 );
  __builtin_memcpy( BNORMALE$1, &FOUNDBNORMALE$1, 32 );
  __builtin_memcpy( MAPXY$1, &FOUNDMAPXY$1, 32 );
 }
 goto label$1332;
 label$1333:;
 {
  *OBJID$1 = -1ll;
  *POLYID$1 = -1ll;
 }
 label$1332:;
 fb$result$1 = FLAG$1;
 goto label$1303;
 label$1303:;
 return fb$result$1;
}

void _ZN9RAYTRACER10LOCALCOLOREllR6VECTORS1_S1_S1_S1_S1_( struct $9RAYTRACER* THIS$1, int64 HITOBJID$1, int64 HITPOLYID$1, struct $6VECTOR* RAYDIRECTION$1, struct $6VECTOR* HITP$1, struct $6VECTOR* HITN$1, struct $6VECTOR* HITBN$1, struct $6VECTOR* MAPXY$1, struct $6VECTOR* RETCOL$1 )
{
 label$1334:;
 struct $6VECTOR L$1;
 _ZN6VECTORC1Ev( &L$1 );
 struct $6VECTOR V$1;
 _ZN6VECTORC1Ev( &V$1 );
 struct $6VECTOR DUMMY1$1;
 _ZN6VECTORC1Ev( &DUMMY1$1 );
 struct $6VECTOR DUMMY2$1;
 _ZN6VECTORC1Ev( &DUMMY2$1 );
 struct $6VECTOR DUMMY3$1;
 _ZN6VECTORC1Ev( &DUMMY3$1 );
 struct $6VECTOR DUMMY4$1;
 _ZN6VECTORC1Ev( &DUMMY4$1 );
 struct $6VECTOR HNORMAL$1;
 _ZN6VECTORC1Ev( &HNORMAL$1 );
 double VDOT$1;
 __builtin_memset( &VDOT$1, 0, 8ll );
 double LIGHTCOSINUS$1;
 __builtin_memset( &LIGHTCOSINUS$1, 0, 8ll );
 double SPOTANGLE$1;
 __builtin_memset( &SPOTANGLE$1, 0, 8ll );
 double LIGHTSPECULAR$1;
 __builtin_memset( &LIGHTSPECULAR$1, 0, 8ll );
 double LIGHTDISTANCE$1;
 __builtin_memset( &LIGHTDISTANCE$1, 0, 8ll );
 struct $6VECTOR COLLIGHT$1;
 _ZN6VECTORC1Ev( &COLLIGHT$1 );
 struct $6VECTOR COLSPECULAR$1;
 _ZN6VECTORC1Ev( &COLSPECULAR$1 );
 struct $6VECTOR COLDISTANCE$1;
 _ZN6VECTORC1Ev( &COLDISTANCE$1 );
 struct $6VECTOR COLAMBIENT$1;
 _ZN6VECTORC1Ev( &COLAMBIENT$1 );
 int64 OBJID$1;
 __builtin_memset( &OBJID$1, 0, 8ll );
 int64 POLYID$1;
 __builtin_memset( &POLYID$1, 0, 8ll );
 *(double*)RETCOL$1 = 0x0p+0;
 *(double*)((uint8*)RETCOL$1 + 8ll) = 0x0p+0;
 *(double*)((uint8*)RETCOL$1 + 16ll) = 0x0p+0;
 if( *(int64*)((uint8*)THIS$1 + 696ll) >= 0ll ) goto label$1337;
 {
  goto label$1335;
  label$1337:;
 }
 {
  int64 LC$2;
  LC$2 = 0ll;
  int64 TMP$1275$2;
  TMP$1275$2 = *(int64*)((uint8*)THIS$1 + 696ll) + -1ll;
  goto label$1338;
  label$1341:;
  {
   struct $6VECTOR TMP$1276$3;
   int64 TMP$1277$3;
   struct $6VECTOR TMP$1282$3;
   struct $6VECTOR TMP$1283$3;
   _ZmiR6VECTORS0_( &TMP$1276$3, HITP$1, (struct $6VECTOR*)((uint8*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 704ll) + (LC$2 << (3ll & 63ll))) + 16ll) );
   __builtin_memcpy( &L$1, &TMP$1276$3, 32 );
   if( (int64)*(int8*)((uint8*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 704ll) + (LC$2 << (3ll & 63ll))) + 192ll) != -1ll ) goto label$1342;
   TMP$1277$3 = (int64)-((int64)*(int8*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (*(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (HITOBJID$1 << (3ll & 63ll))) + 144ll) << (3ll & 63ll))) + 257ll) == -1ll);
   goto label$1374;
   label$1342:;
   TMP$1277$3 = 0ll;
   label$1374:;
   if( TMP$1277$3 == 0ll ) goto label$1344;
   {
    *(int64*)((uint8*)THIS$1 + 560ll) = 1ll;
    int8 vr$60 = _ZN9RAYTRACER9LINETRACEER6VECTORS1_RlS2_S1_S1_S1_S1_( THIS$1, (struct $6VECTOR*)((uint8*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 704ll) + (LC$2 << (3ll & 63ll))) + 16ll), &L$1, &OBJID$1, &POLYID$1, &DUMMY1$1, &DUMMY2$1, &DUMMY3$1, &DUMMY4$1 );
    if( (int64)vr$60 != -1ll ) goto label$1346;
    {
     if( OBJID$1 == HITOBJID$1 ) goto label$1348;
     {
      if( (int64)*(int8*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (*(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (OBJID$1 << (3ll & 63ll))) + 144ll) << (3ll & 63ll))) + 256ll) != 0ll ) goto label$1350;
      {
       goto label$1339;
       label$1350:;
      }
     }
     label$1348:;
     label$1347:;
    }
    label$1346:;
    label$1345:;
    if( ((int64)-(*(int64*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (HITOBJID$1 << (3ll & 63ll))) == 1ll) & (int64)-(HITPOLYID$1 != POLYID$1)) == 0ll ) goto label$1352;
    {
     goto label$1339;
     label$1352:;
    }
   }
   label$1344:;
   label$1343:;
   if( *(int64*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 704ll) + (LC$2 << (3ll & 63ll))) != 1ll ) goto label$1354;
   {
    struct $6VECTOR TMP$1278$4;
    _ZmiR6VECTORS0_( &TMP$1278$4, (struct $6VECTOR*)((uint8*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 704ll) + (LC$2 << (3ll & 63ll))) + 16ll), HITP$1 );
    __builtin_memcpy( &HNORMAL$1, &TMP$1278$4, 32 );
    _ZN6VECTOR9NORMALIZEEv( &HNORMAL$1 );
    double vr$97 = _ZmlR6VECTORS0_( &HNORMAL$1, (struct $6VECTOR*)((uint8*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 704ll) + (LC$2 << (3ll & 63ll))) + 112ll) );
    SPOTANGLE$1 = vr$97;
    if( SPOTANGLE$1 >= 0x0p+0 ) goto label$1356;
    {
     goto label$1339;
     label$1356:;
    }
    SPOTANGLE$1 = __builtin_acos( SPOTANGLE$1 );
    if( SPOTANGLE$1 <= *(double*)((uint8*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 704ll) + (LC$2 << (3ll & 63ll))) + 184ll) ) goto label$1358;
    {
     goto label$1339;
     label$1358:;
    }
   }
   label$1354:;
   label$1353:;
   _ZN6VECTORmLEd( &L$1, -0x1.p+0 );
   _ZN6VECTOR9NORMALIZEEv( &L$1 );
   if( *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (*(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (HITOBJID$1 << (3ll & 63ll))) + 144ll) << (3ll & 63ll))) + 304ll) <= -1ll ) goto label$1360;
   {
    double vr$114 = _ZmlR6VECTORS0_( &L$1, HITBN$1 );
    LIGHTCOSINUS$1 = vr$114;
   }
   goto label$1359;
   label$1360:;
   {
    double vr$116 = _ZmlR6VECTORS0_( &L$1, HITN$1 );
    LIGHTCOSINUS$1 = vr$116;
   }
   label$1359:;
   LIGHTCOSINUS$1 = LIGHTCOSINUS$1 * *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (*(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (HITOBJID$1 << (3ll & 63ll))) + 144ll) << (3ll & 63ll))) + 200ll);
   if( LIGHTCOSINUS$1 > 0x0p+0 ) goto label$1362;
   {
    goto label$1339;
    label$1362:;
   }
   if( *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (*(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (HITOBJID$1 << (3ll & 63ll))) + 144ll) << (3ll & 63ll))) + 208ll) <= 0x0p+0 ) goto label$1364;
   {
    struct $6VECTOR TMP$1279$4;
    struct $6VECTOR TMP$1280$4;
    double TMP$1281$4;
    struct $6VECTOR* vr$137 = _ZmiR6VECTORS0_( &TMP$1279$4, &L$1, RAYDIRECTION$1 );
    _ZmlR6VECTORd( &TMP$1280$4, vr$137, 0x1.p-1 );
    __builtin_memcpy( &V$1, &TMP$1280$4, 32 );
    _ZN6VECTOR9NORMALIZEEv( &V$1 );
    double vr$142 = _ZmlR6VECTORS0_( &V$1, HITN$1 );
    VDOT$1 = vr$142;
    if( VDOT$1 >= 0x0p+0 ) goto label$1365;
    TMP$1281$4 = -VDOT$1;
    goto label$1375;
    label$1365:;
    TMP$1281$4 = VDOT$1;
    label$1375:;
    double vr$160 = pow( TMP$1281$4, *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (*(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (HITOBJID$1 << (3ll & 63ll))) + 144ll) << (3ll & 63ll))) + 216ll) );
    LIGHTSPECULAR$1 = *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (*(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (HITOBJID$1 << (3ll & 63ll))) + 144ll) << (3ll & 63ll))) + 208ll) * vr$160;
    if( LIGHTSPECULAR$1 <= 0x0p+0 ) goto label$1367;
    {
     LIGHTCOSINUS$1 = LIGHTCOSINUS$1 + LIGHTSPECULAR$1;
     if( LIGHTCOSINUS$1 <= 0x1.p+0 ) goto label$1369;
     {
      LIGHTCOSINUS$1 = 0x1.p+0;
      label$1369:;
     }
    }
    label$1367:;
    label$1366:;
   }
   label$1364:;
   label$1363:;
   _ZmlR6VECTORd( &TMP$1282$3, (struct $6VECTOR*)((uint8*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 704ll) + (LC$2 << (3ll & 63ll))) + 144ll), LIGHTCOSINUS$1 );
   __builtin_memcpy( &COLLIGHT$1, &TMP$1282$3, 32 );
   double vr$176 = _ZmlR6VECTORS0_( HITP$1, (struct $6VECTOR*)((uint8*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 704ll) + (LC$2 << (3ll & 63ll))) + 16ll) );
   LIGHTDISTANCE$1 = __builtin_sqrt( vr$176 );
   LIGHTDISTANCE$1 = __builtin_exp( ((-0x1.62E42FEFA39ECp-1 / *(double*)((uint8*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 704ll) + (LC$2 << (3ll & 63ll))) + 176ll)) * LIGHTDISTANCE$1) );
   if( LIGHTDISTANCE$1 > 0x0p+0 ) goto label$1371;
   {
    goto label$1339;
    label$1371:;
   }
   if( LIGHTDISTANCE$1 <= 0x1.p+0 ) goto label$1373;
   {
    LIGHTDISTANCE$1 = 0x1.p+0;
    label$1373:;
   }
   struct $6VECTOR* vr$187 = _ZmlR6VECTORd( &TMP$1283$3, &COLLIGHT$1, LIGHTDISTANCE$1 );
   _ZN6VECTORpLERS_( RETCOL$1, vr$187 );
  }
  label$1339:;
  LC$2 = LC$2 + 1ll;
  label$1338:;
  if( LC$2 <= TMP$1275$2 ) goto label$1341;
  label$1340:;
 }
 _ZN6VECTORpLERS_( RETCOL$1, (struct $6VECTOR*)((uint8*)THIS$1 + 472ll) );
 label$1335:;
}

void _ZN9RAYTRACER9VECMIRRORER6VECTORS1_S1_S1_( struct $9RAYTRACER* THIS$1, struct $6VECTOR* RETVEC$1, struct $6VECTOR* RAYDIRECTION$1, struct $6VECTOR* HITPOINT$1, struct $6VECTOR* NORMALE$1 )
{
 struct $6VECTOR TMP$1284$1;
 struct $6VECTOR TMP$1285$1;
 struct $6VECTOR TMP$1286$1;
 label$1376:;
 struct $6VECTOR I$1;
 _ZN6VECTORC1Ev( &I$1 );
 struct $6VECTOR I2$1;
 _ZN6VECTORC1Ev( &I2$1 );
 double L$1;
 __builtin_memset( &L$1, 0, 8ll );
 _ZN6VECTOR10NORMALIZEDEv( &TMP$1284$1, RAYDIRECTION$1 );
 __builtin_memcpy( &I$1, &TMP$1284$1, 32 );
 __builtin_memcpy( RETVEC$1, &I$1, 32 );
 _ZN6VECTORmLEd( &I$1, -0x1.p+0 );
 _ZmlR6VECTORd( &TMP$1285$1, &I$1, 0x1.999999999999Ap-4 );
 __builtin_memcpy( &I2$1, &TMP$1285$1, 32 );
 _ZN6VECTORpLERS_( HITPOINT$1, &I2$1 );
 double vr$14 = _ZmlR6VECTORS0_( NORMALE$1, &I$1 );
 L$1 = vr$14;
 L$1 = L$1 * 0x1.p+1;
 _ZmldR6VECTOR( &TMP$1286$1, L$1, NORMALE$1 );
 __builtin_memcpy( &I$1, &TMP$1286$1, 32 );
 _ZN6VECTORpLERS_( RETVEC$1, &I$1 );
 label$1377:;
}

void _ZN9RAYTRACER9VECBROKENElR6VECTORS1_S1_S1_( struct $9RAYTRACER* THIS$1, int64 HITOBJNR$1, struct $6VECTOR* HITPOINT$1, struct $6VECTOR* NORMALE$1, struct $6VECTOR* RAYDIRECTION$1, struct $6VECTOR* TDES$1 )
{
 struct $6VECTOR TMP$1287$1;
 struct $6VECTOR TMP$1288$1;
 struct $6VECTOR TMP$1289$1;
 label$1378:;
 struct $6VECTOR I$1;
 _ZN6VECTORC1Ev( &I$1 );
 struct $6VECTOR I2$1;
 _ZN6VECTORC1Ev( &I2$1 );
 double L$1;
 __builtin_memset( &L$1, 0, 8ll );
 double IOR$1;
 __builtin_memset( &IOR$1, 0, 8ll );
 double COSINUS$1;
 __builtin_memset( &COSINUS$1, 0, 8ll );
 IOR$1 = *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (*(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (HITOBJNR$1 << (3ll & 63ll))) + 144ll) << (3ll & 63ll))) + 248ll);
 if( IOR$1 >= 0x1.47AE147AE147Bp-7 ) goto label$1381;
 {
  IOR$1 = 0x1.47AE147AE147Bp-7;
  label$1381:;
 }
 _ZN6VECTOR10NORMALIZEDEv( &TMP$1287$1, RAYDIRECTION$1 );
 __builtin_memcpy( &I$1, &TMP$1287$1, 32 );
 _ZN6VECTORmLEd( &I$1, -0x1.p+0 );
 double vr$18 = _ZmlR6VECTORS0_( NORMALE$1, &I$1 );
 L$1 = vr$18;
 COSINUS$1 = __builtin_sqrt( (-((-(L$1 * L$1) + 0x1.p+0) / (IOR$1 * IOR$1)) + 0x1.p+0) );
 COSINUS$1 = COSINUS$1 - (L$1 / IOR$1);
 _ZmldR6VECTOR( &TMP$1288$1, COSINUS$1, NORMALE$1 );
 __builtin_memcpy( TDES$1, &TMP$1288$1, 32 );
 _ZN6VECTORmIERS_( TDES$1, &I$1 );
 _ZN6VECTOR10NORMALIZEDEv( &TMP$1289$1, RAYDIRECTION$1 );
 __builtin_memcpy( &I2$1, &TMP$1289$1, 32 );
 _ZN6VECTORmLEd( &I2$1, 0x1.999999999999Ap-4 );
 _ZN6VECTORpLERS_( HITPOINT$1, &I2$1 );
 label$1379:;
}

void _ZN9RAYTRACER8RAYTRACEERK6VECTORS2_lRS0_( struct $9RAYTRACER* THIS$1, struct $6VECTOR* _RAYORIGIN$1, struct $6VECTOR* _RAYDIRECTION$1, int64 CURRAYDEPTH$1, struct $6VECTOR* RETCOL$1 )
{
 label$1382:;
 struct $6VECTOR LCOL$1;
 _ZN6VECTORC1Ev( &LCOL$1 );
 struct $6VECTOR MCOL$1;
 _ZN6VECTORC1Ev( &MCOL$1 );
 struct $6VECTOR TCOL$1;
 _ZN6VECTORC1Ev( &TCOL$1 );
 struct $6VECTOR MIRRORAYDIRECTION$1;
 _ZN6VECTORC1Ev( &MIRRORAYDIRECTION$1 );
 struct $6VECTOR BROKENRAYDIRECTION$1;
 _ZN6VECTORC1Ev( &BROKENRAYDIRECTION$1 );
 struct $6VECTOR HITPOINT$1;
 _ZN6VECTORC1Ev( &HITPOINT$1 );
 struct $6VECTOR NORMALE$1;
 _ZN6VECTORC1Ev( &NORMALE$1 );
 struct $6VECTOR BUMPNORMALE$1;
 _ZN6VECTORC1Ev( &BUMPNORMALE$1 );
 struct $6VECTOR MAPXY$1;
 _ZN6VECTORC1Ev( &MAPXY$1 );
 int64 HITOBJID$1;
 __builtin_memset( &HITOBJID$1, 0, 8ll );
 int64 HITPOLYID$1;
 __builtin_memset( &HITPOLYID$1, 0, 8ll );
 int64 MATID$1;
 __builtin_memset( &MATID$1, 0, 8ll );
 struct $8MATERIAL* PMAT$1;
 __builtin_memset( &PMAT$1, 0, 8ll );
 *(int64*)((uint8*)THIS$1 + 560ll) = CURRAYDEPTH$1;
 struct $6VECTOR RAYORIGIN$1;
 __builtin_memcpy( &RAYORIGIN$1, _RAYORIGIN$1, 32 );
 struct $6VECTOR RAYDIRECTION$1;
 __builtin_memcpy( &RAYDIRECTION$1, _RAYDIRECTION$1, 32 );
 int8 vr$24 = _ZN9RAYTRACER9LINETRACEER6VECTORS1_RlS2_S1_S1_S1_S1_( THIS$1, &RAYORIGIN$1, &RAYDIRECTION$1, &HITOBJID$1, &HITPOLYID$1, &HITPOINT$1, &NORMALE$1, &BUMPNORMALE$1, &MAPXY$1 );
 if( (int64)vr$24 != 0ll ) goto label$1385;
 {
  if( CURRAYDEPTH$1 != 0ll ) goto label$1387;
  {
   _ZN9RAYTRACER15BACKGROUNDCOLORER6VECTORS1_( THIS$1, RETCOL$1, &RAYDIRECTION$1 );
   label$1387:;
  }
 }
 goto label$1384;
 label$1385:;
 {
  struct $6VECTOR TMP$1290$2;
  struct $6VECTOR TMP$1291$2;
  struct $6VECTOR TMP$1292$2;
  struct $6VECTOR TMP$1293$2;
  struct $6VECTOR TMP$1294$2;
  MATID$1 = *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (HITOBJID$1 << (3ll & 63ll))) + 144ll);
  PMAT$1 = *(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll)));
  _ZN9RAYTRACER10LOCALCOLOREllR6VECTORS1_S1_S1_S1_S1_( THIS$1, HITOBJID$1, HITPOLYID$1, &RAYDIRECTION$1, &HITPOINT$1, &NORMALE$1, &BUMPNORMALE$1, &MAPXY$1, &LCOL$1 );
  MATID$1 = *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) + (HITOBJID$1 << (3ll & 63ll))) + 144ll);
  PMAT$1 = *(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) + (MATID$1 << (3ll & 63ll)));
  if( CURRAYDEPTH$1 < *(int64*)((uint8*)THIS$1 + 552ll) ) goto label$1389;
  {
   *(double*)&TCOL$1 = 0x0p+0;
   *(double*)((uint8*)&TCOL$1 + 8ll) = 0x0p+0;
   *(double*)((uint8*)&TCOL$1 + 16ll) = 0x0p+0;
   *(double*)&MCOL$1 = 0x0p+0;
   *(double*)((uint8*)&MCOL$1 + 8ll) = 0x0p+0;
   *(double*)((uint8*)&MCOL$1 + 16ll) = 0x0p+0;
  }
  goto label$1388;
  label$1389:;
  {
   if( *(double*)((uint8*)PMAT$1 + 240ll) <= 0x0p+0 ) goto label$1391;
   {
    _ZN9RAYTRACER9VECBROKENElR6VECTORS1_S1_S1_( THIS$1, HITOBJID$1, &HITPOINT$1, &NORMALE$1, &RAYDIRECTION$1, &BROKENRAYDIRECTION$1 );
    _ZN9RAYTRACER8RAYTRACEERK6VECTORS2_lRS0_( THIS$1, (struct $6VECTOR*)&HITPOINT$1, (struct $6VECTOR*)&BROKENRAYDIRECTION$1, CURRAYDEPTH$1 + 1ll, &TCOL$1 );
   }
   goto label$1390;
   label$1391:;
   {
    *(double*)&TCOL$1 = 0x0p+0;
    *(double*)((uint8*)&TCOL$1 + 8ll) = 0x0p+0;
    *(double*)((uint8*)&TCOL$1 + 16ll) = 0x0p+0;
   }
   label$1390:;
   if( *(double*)((uint8*)PMAT$1 + 232ll) <= 0x0p+0 ) goto label$1393;
   {
    _ZN9RAYTRACER9VECMIRRORER6VECTORS1_S1_S1_( THIS$1, &MIRRORAYDIRECTION$1, &RAYDIRECTION$1, &HITPOINT$1, &NORMALE$1 );
    _ZN9RAYTRACER8RAYTRACEERK6VECTORS2_lRS0_( THIS$1, (struct $6VECTOR*)&HITPOINT$1, (struct $6VECTOR*)&MIRRORAYDIRECTION$1, CURRAYDEPTH$1 + 1ll, &MCOL$1 );
   }
   goto label$1392;
   label$1393:;
   {
    *(double*)&MCOL$1 = 0x0p+0;
    *(double*)((uint8*)&MCOL$1 + 8ll) = 0x0p+0;
    *(double*)((uint8*)&MCOL$1 + 16ll) = 0x0p+0;
   }
   label$1392:;
  }
  label$1388:;
  struct $6VECTOR* vr$69 = _ZmlR6VECTORd( &TMP$1293$2, &TCOL$1, *(double*)((uint8*)PMAT$1 + 240ll) );
  struct $6VECTOR* vr$73 = _ZmlR6VECTORd( &TMP$1291$2, &MCOL$1, *(double*)((uint8*)PMAT$1 + 232ll) );
  struct $6VECTOR* vr$77 = _ZmlR6VECTORd( &TMP$1290$2, &LCOL$1, *(double*)((uint8*)PMAT$1 + 224ll) );
  struct $6VECTOR* vr$79 = _ZplR6VECTORS0_( &TMP$1292$2, vr$77, vr$73 );
  _ZplR6VECTORS0_( &TMP$1294$2, vr$79, vr$69 );
  __builtin_memcpy( RETCOL$1, &TMP$1294$2, 32 );
  _ZN9RAYTRACER12SURFACECOLORElR6VECTORS1_( THIS$1, HITOBJID$1, &MAPXY$1, RETCOL$1 );
 }
 label$1384:;
 label$1383:;
}

void _ZN9RAYTRACER5VBLUREll( struct $9RAYTRACER* THIS$1, int64 XP$1, int64 YP$1 )
{
 struct $6VECTOR TMP$1297$1;
 struct $6VECTOR TMP$1298$1;
 struct $6VECTOR TMP$1299$1;
 label$1394:;
 struct $6VECTOR VA$1;
 uint32 vr$3 = fb_GfxPoint( (void*)0ull, (float)XP$1, (float)(YP$1 + -1ll) );
 _ZN6VECTORC1Ej( &VA$1, vr$3 );
 struct $6VECTOR VB$1;
 uint32 vr$7 = fb_GfxPoint( (void*)0ull, (float)XP$1, (float)YP$1 );
 _ZN6VECTORC1Ej( &VB$1, vr$7 );
 struct $6VECTOR AB$1;
 struct $6VECTOR* vr$11 = _ZmlR6VECTORd( &TMP$1298$1, &VB$1, 0x1.p-1 );
 struct $6VECTOR* vr$14 = _ZmlR6VECTORd( &TMP$1297$1, &VA$1, 0x1.p-1 );
 struct $6VECTOR* vr$16 = _ZplR6VECTORS0_( &TMP$1299$1, vr$14, vr$11 );
 _ZN6VECTORC1ERS_( &AB$1, vr$16 );
 uint32 vr$19 = _ZN6VECTORcvjEv( &AB$1 );
 fb_GfxPset( (void*)0ull, (float)XP$1, (float)(YP$1 + -1ll), vr$19, 4, 0 );
 label$1395:;
}

void _ZN9RAYTRACER5HBLUREll( struct $9RAYTRACER* THIS$1, int64 XP$1, int64 YP$1 )
{
 struct $6VECTOR TMP$1302$1;
 struct $6VECTOR TMP$1303$1;
 struct $6VECTOR TMP$1304$1;
 label$1396:;
 struct $6VECTOR VA$1;
 uint32 vr$3 = fb_GfxPoint( (void*)0ull, (float)(XP$1 + -1ll), (float)YP$1 );
 _ZN6VECTORC1Ej( &VA$1, vr$3 );
 struct $6VECTOR VB$1;
 uint32 vr$7 = fb_GfxPoint( (void*)0ull, (float)XP$1, (float)YP$1 );
 _ZN6VECTORC1Ej( &VB$1, vr$7 );
 struct $6VECTOR AB$1;
 struct $6VECTOR* vr$11 = _ZmlR6VECTORd( &TMP$1303$1, &VB$1, 0x1.p-1 );
 struct $6VECTOR* vr$14 = _ZmlR6VECTORd( &TMP$1302$1, &VA$1, 0x1.p-1 );
 struct $6VECTOR* vr$16 = _ZplR6VECTORS0_( &TMP$1304$1, vr$14, vr$11 );
 _ZN6VECTORC1ERS_( &AB$1, vr$16 );
 uint32 vr$19 = _ZN6VECTORcvjEv( &AB$1 );
 fb_GfxPset( (void*)0ull, (float)(XP$1 + -1ll), (float)YP$1, vr$19, 4, 0 );
 label$1397:;
}

void _ZN9RAYTRACER8EDGEBLUREv( struct $9RAYTRACER* THIS$1 )
{
 label$1398:;
 {
  int64 Y$2;
  Y$2 = 1ll;
  int64 TMP$1305$2;
  TMP$1305$2 = *(int64*)((uint8*)THIS$1 + 432ll) + -1ll;
  goto label$1400;
  label$1403:;
  {
   {
    int64 X$4;
    X$4 = 0ll;
    int64 TMP$1306$4;
    TMP$1306$4 = *(int64*)((uint8*)THIS$1 + 424ll) + -1ll;
    goto label$1404;
    label$1407:;
    {
     struct $6VECTOR TMP$1309$5;
     struct $6VECTOR A$5;
     uint32 vr$7 = fb_GfxPoint( (void*)0ull, (float)X$4, (float)(Y$2 + -1ll) );
     _ZN6VECTORC1Ej( &A$5, vr$7 );
     struct $6VECTOR B$5;
     uint32 vr$11 = fb_GfxPoint( (void*)0ull, (float)X$4, (float)Y$2 );
     _ZN6VECTORC1Ej( &B$5, vr$11 );
     struct $6VECTOR D$5;
     struct $6VECTOR* vr$16 = _ZmiR6VECTORS0_( &TMP$1309$5, &B$5, &A$5 );
     _ZN6VECTORC1ERS_( &D$5, vr$16 );
     double L$5;
     double vr$19 = _ZN6VECTOR6LENGTHEv( &D$5 );
     L$5 = vr$19;
     if( L$5 < 0x1.54FDF3B645A1Dp-2 ) goto label$1409;
     {
      void* vr$24 = realloc( *(void**)((uint8*)THIS$1 + 736ll), (uint64)((*(int64*)((uint8*)THIS$1 + 728ll) << (3ll & 63ll)) + 8ll) );
      *(struct $7AAPIXEL***)((uint8*)THIS$1 + 736ll) = (struct $7AAPIXEL**)vr$24;
      void* vr$26 = malloc( 448ull );
      *(struct $7AAPIXEL**)((uint8*)*(struct $7AAPIXEL***)((uint8*)THIS$1 + 736ll) + (*(int64*)((uint8*)THIS$1 + 728ll) << (3ll & 63ll))) = (struct $7AAPIXEL*)vr$26;
      *(int64*)((uint8*)*(struct $7AAPIXEL**)((uint8*)*(struct $7AAPIXEL***)((uint8*)THIS$1 + 736ll) + (*(int64*)((uint8*)THIS$1 + 728ll) << (3ll & 63ll))) + 424ll) = 1ll;
      *(int64*)((uint8*)*(struct $7AAPIXEL**)((uint8*)*(struct $7AAPIXEL***)((uint8*)THIS$1 + 736ll) + (*(int64*)((uint8*)THIS$1 + 728ll) << (3ll & 63ll))) + 432ll) = X$4;
      *(int64*)((uint8*)*(struct $7AAPIXEL**)((uint8*)*(struct $7AAPIXEL***)((uint8*)THIS$1 + 736ll) + (*(int64*)((uint8*)THIS$1 + 728ll) << (3ll & 63ll))) + 440ll) = Y$2;
      *(int64*)((uint8*)THIS$1 + 728ll) = *(int64*)((uint8*)THIS$1 + 728ll) + 1ll;
     }
     label$1409:;
     label$1408:;
    }
    label$1405:;
    X$4 = X$4 + 1ll;
    label$1404:;
    if( X$4 <= TMP$1306$4 ) goto label$1407;
    label$1406:;
   }
  }
  label$1401:;
  Y$2 = Y$2 + 1ll;
  label$1400:;
  if( Y$2 <= TMP$1305$2 ) goto label$1403;
  label$1402:;
 }
 {
  int64 Y$2;
  Y$2 = 0ll;
  int64 TMP$1310$2;
  TMP$1310$2 = *(int64*)((uint8*)THIS$1 + 432ll) + -1ll;
  goto label$1410;
  label$1413:;
  {
   {
    int64 X$4;
    X$4 = 1ll;
    int64 TMP$1311$4;
    TMP$1311$4 = *(int64*)((uint8*)THIS$1 + 424ll) + -1ll;
    goto label$1414;
    label$1417:;
    {
     struct $6VECTOR TMP$1314$5;
     struct $6VECTOR A$5;
     uint32 vr$58 = fb_GfxPoint( (void*)0ull, (float)(X$4 + -1ll), (float)Y$2 );
     _ZN6VECTORC1Ej( &A$5, vr$58 );
     struct $6VECTOR B$5;
     uint32 vr$62 = fb_GfxPoint( (void*)0ull, (float)X$4, (float)Y$2 );
     _ZN6VECTORC1Ej( &B$5, vr$62 );
     struct $6VECTOR D$5;
     struct $6VECTOR* vr$67 = _ZmiR6VECTORS0_( &TMP$1314$5, &B$5, &A$5 );
     _ZN6VECTORC1ERS_( &D$5, vr$67 );
     double L$5;
     double vr$70 = _ZN6VECTOR6LENGTHEv( &D$5 );
     L$5 = vr$70;
     if( L$5 < 0x1.54FDF3B645A1Dp-2 ) goto label$1419;
     {
      void* vr$75 = realloc( *(void**)((uint8*)THIS$1 + 736ll), (uint64)((*(int64*)((uint8*)THIS$1 + 728ll) << (3ll & 63ll)) + 8ll) );
      *(struct $7AAPIXEL***)((uint8*)THIS$1 + 736ll) = (struct $7AAPIXEL**)vr$75;
      void* vr$77 = malloc( 448ull );
      *(struct $7AAPIXEL**)((uint8*)*(struct $7AAPIXEL***)((uint8*)THIS$1 + 736ll) + (*(int64*)((uint8*)THIS$1 + 728ll) << (3ll & 63ll))) = (struct $7AAPIXEL*)vr$77;
      *(int64*)((uint8*)*(struct $7AAPIXEL**)((uint8*)*(struct $7AAPIXEL***)((uint8*)THIS$1 + 736ll) + (*(int64*)((uint8*)THIS$1 + 728ll) << (3ll & 63ll))) + 424ll) = 0ll;
      *(int64*)((uint8*)*(struct $7AAPIXEL**)((uint8*)*(struct $7AAPIXEL***)((uint8*)THIS$1 + 736ll) + (*(int64*)((uint8*)THIS$1 + 728ll) << (3ll & 63ll))) + 432ll) = X$4;
      *(int64*)((uint8*)*(struct $7AAPIXEL**)((uint8*)*(struct $7AAPIXEL***)((uint8*)THIS$1 + 736ll) + (*(int64*)((uint8*)THIS$1 + 728ll) << (3ll & 63ll))) + 440ll) = Y$2;
      *(int64*)((uint8*)THIS$1 + 728ll) = *(int64*)((uint8*)THIS$1 + 728ll) + 1ll;
     }
     label$1419:;
     label$1418:;
    }
    label$1415:;
    X$4 = X$4 + 1ll;
    label$1414:;
    if( X$4 <= TMP$1311$4 ) goto label$1417;
    label$1416:;
   }
  }
  label$1411:;
  Y$2 = Y$2 + 1ll;
  label$1410:;
  if( Y$2 <= TMP$1310$2 ) goto label$1413;
  label$1412:;
 }
 if( *(struct $7AAPIXEL***)((uint8*)THIS$1 + 736ll) == (struct $7AAPIXEL**)0ull ) goto label$1421;
 {
  if( *(int64*)((uint8*)THIS$1 + 728ll) <= 0ll ) goto label$1423;
  {
   {
    int64 I$4;
    I$4 = 0ll;
    int64 TMP$1315$4;
    TMP$1315$4 = *(int64*)((uint8*)THIS$1 + 728ll) + -1ll;
    goto label$1424;
    label$1427:;
    {
     int64 X$5;
     X$5 = *(int64*)((uint8*)*(struct $7AAPIXEL**)((uint8*)*(struct $7AAPIXEL***)((uint8*)THIS$1 + 736ll) + (I$4 << (3ll & 63ll))) + 432ll);
     int64 Y$5;
     Y$5 = *(int64*)((uint8*)*(struct $7AAPIXEL**)((uint8*)*(struct $7AAPIXEL***)((uint8*)THIS$1 + 736ll) + (I$4 << (3ll & 63ll))) + 440ll);
     if( *(int64*)((uint8*)*(struct $7AAPIXEL**)((uint8*)*(struct $7AAPIXEL***)((uint8*)THIS$1 + 736ll) + (I$4 << (3ll & 63ll))) + 424ll) == 0ll ) goto label$1429;
     {
      _ZN9RAYTRACER5VBLUREll( THIS$1, X$5, Y$5 );
     }
     goto label$1428;
     label$1429:;
     {
      _ZN9RAYTRACER5HBLUREll( THIS$1, X$5, Y$5 );
     }
     label$1428:;
     free( *(void**)((uint8*)*(struct $7AAPIXEL***)((uint8*)THIS$1 + 736ll) + (I$4 << (3ll & 63ll))) );
     *(struct $7AAPIXEL**)((uint8*)*(struct $7AAPIXEL***)((uint8*)THIS$1 + 736ll) + (I$4 << (3ll & 63ll))) = (struct $7AAPIXEL*)0ull;
    }
    label$1425:;
    I$4 = I$4 + 1ll;
    label$1424:;
    if( I$4 <= TMP$1315$4 ) goto label$1427;
    label$1426:;
   }
   *(int64*)((uint8*)THIS$1 + 728ll) = 0ll;
  }
  label$1423:;
  label$1422:;
  free( *(void**)((uint8*)THIS$1 + 736ll) );
  *(struct $7AAPIXEL***)((uint8*)THIS$1 + 736ll) = (struct $7AAPIXEL**)0ull;
 }
 label$1421:;
 label$1420:;
 label$1399:;
}

void _ZN9RAYTRACER4BLUREv( struct $9RAYTRACER* THIS$1 )
{
 label$1430:;
 {
  int64 Y$2;
  Y$2 = 1ll;
  int64 TMP$1316$2;
  TMP$1316$2 = *(int64*)((uint8*)THIS$1 + 432ll) + -2ll;
  goto label$1432;
  label$1435:;
  {
   {
    int64 X$4;
    X$4 = 1ll;
    int64 TMP$1317$4;
    TMP$1317$4 = *(int64*)((uint8*)THIS$1 + 424ll) + -2ll;
    goto label$1436;
    label$1439:;
    {
     struct $6VECTOR TMP$1327$5;
     struct $6VECTOR TMP$1328$5;
     struct $6VECTOR TMP$1329$5;
     struct $6VECTOR TMP$1330$5;
     struct $6VECTOR TMP$1331$5;
     struct $6VECTOR TMP$1332$5;
     struct $6VECTOR TMP$1333$5;
     struct $6VECTOR TMP$1334$5;
     struct $6VECTOR C0$5;
     uint32 vr$8 = fb_GfxPoint( (void*)0ull, (float)(X$4 + -1ll), (float)(Y$2 + -1ll) );
     _ZN6VECTORC1Ej( &C0$5, vr$8 );
     struct $6VECTOR C1$5;
     uint32 vr$13 = fb_GfxPoint( (void*)0ull, (float)X$4, (float)(Y$2 + -1ll) );
     _ZN6VECTORC1Ej( &C1$5, vr$13 );
     struct $6VECTOR C2$5;
     uint32 vr$19 = fb_GfxPoint( (void*)0ull, (float)(X$4 + 1ll), (float)(Y$2 + -1ll) );
     _ZN6VECTORC1Ej( &C2$5, vr$19 );
     struct $6VECTOR C3$5;
     uint32 vr$24 = fb_GfxPoint( (void*)0ull, (float)(X$4 + -1ll), (float)Y$2 );
     _ZN6VECTORC1Ej( &C3$5, vr$24 );
     struct $6VECTOR C4$5;
     uint32 vr$28 = fb_GfxPoint( (void*)0ull, (float)X$4, (float)Y$2 );
     _ZN6VECTORC1Ej( &C4$5, vr$28 );
     struct $6VECTOR C5$5;
     uint32 vr$33 = fb_GfxPoint( (void*)0ull, (float)(X$4 + 1ll), (float)Y$2 );
     _ZN6VECTORC1Ej( &C5$5, vr$33 );
     struct $6VECTOR C6$5;
     uint32 vr$39 = fb_GfxPoint( (void*)0ull, (float)(X$4 + -1ll), (float)(Y$2 + 1ll) );
     _ZN6VECTORC1Ej( &C6$5, vr$39 );
     struct $6VECTOR C7$5;
     uint32 vr$44 = fb_GfxPoint( (void*)0ull, (float)X$4, (float)(Y$2 + 1ll) );
     _ZN6VECTORC1Ej( &C7$5, vr$44 );
     struct $6VECTOR C8$5;
     uint32 vr$50 = fb_GfxPoint( (void*)0ull, (float)(X$4 + 1ll), (float)(Y$2 + 1ll) );
     _ZN6VECTORC1Ej( &C8$5, vr$50 );
     struct $6VECTOR C$5;
     struct $6VECTOR* vr$62 = _ZplR6VECTORS0_( &TMP$1327$5, &C0$5, &C1$5 );
     struct $6VECTOR* vr$64 = _ZplR6VECTORS0_( &TMP$1328$5, vr$62, &C2$5 );
     struct $6VECTOR* vr$66 = _ZplR6VECTORS0_( &TMP$1329$5, vr$64, &C3$5 );
     struct $6VECTOR* vr$68 = _ZplR6VECTORS0_( &TMP$1330$5, vr$66, &C4$5 );
     struct $6VECTOR* vr$70 = _ZplR6VECTORS0_( &TMP$1331$5, vr$68, &C5$5 );
     struct $6VECTOR* vr$72 = _ZplR6VECTORS0_( &TMP$1332$5, vr$70, &C6$5 );
     struct $6VECTOR* vr$74 = _ZplR6VECTORS0_( &TMP$1333$5, vr$72, &C7$5 );
     struct $6VECTOR* vr$76 = _ZplR6VECTORS0_( &TMP$1334$5, vr$74, &C8$5 );
     _ZN6VECTORC1ERS_( &C$5, vr$76 );
     _ZN6VECTORmLEd( &C$5, 0x1.C71C71C71C71Cp-4 );
     uint32 vr$80 = _ZN6VECTORcvjEv( &C$5 );
     fb_GfxPset( (void*)0ull, (float)X$4, (float)Y$2, vr$80, 4, 0 );
    }
    label$1437:;
    X$4 = X$4 + 1ll;
    label$1436:;
    if( X$4 <= TMP$1317$4 ) goto label$1439;
    label$1438:;
   }
  }
  label$1433:;
  Y$2 = Y$2 + 1ll;
  label$1432:;
  if( Y$2 <= TMP$1316$2 ) goto label$1435;
  label$1434:;
 }
 label$1431:;
}

void _ZN9RAYTRACER6RENDERE6AATYPE( struct $9RAYTRACER* THIS$1, $6AATYPE ANTIALIAS$1 )
{
 FBSTRING TMP$1337$1;
 FBSTRING TMP$1338$1;
 FBSTRING TMP$1345$1;
 label$1440:;
 double T1$1;
 __builtin_memset( &T1$1, 0, 8ll );
 uint64* LPSCREEN$1;
 __builtin_memset( &LPSCREEN$1, 0, 8ll );
 void* vr$2 = fb_GfxScreenPtr( );
 if( vr$2 != (void*)0ull ) goto label$1443;
 {
  fb_GfxScreenRes( (int32)*(int64*)((uint8*)THIS$1 + 424ll), (int32)*(int64*)((uint8*)THIS$1 + 432ll), 32, 1, 0, 0 );
 }
 label$1443:;
 label$1442:;
 FBSTRING* vr$8 = fb_LongintToStr( *(int64*)((uint8*)THIS$1 + 432ll) );
 __builtin_memset( &TMP$1337$1, 0, 24ll );
 FBSTRING* vr$11 = fb_StrConcat( &TMP$1337$1, (void*)"render ", 8ll, (void*)vr$8, -1ll );
 __builtin_memset( &TMP$1338$1, 0, 24ll );
 FBSTRING* vr$14 = fb_StrConcat( &TMP$1338$1, (void*)vr$11, -1ll, (void*)" lines. [ESC]=cancel", 21ll );
 fb_GfxSetWindowTitle( (FBSTRING*)vr$14 );
 double vr$15 = fb_Timer( );
 T1$1 = vr$15;
 {
  int64 Y$2;
  Y$2 = 0ll;
  int64 TMP$1339$2;
  TMP$1339$2 = *(int64*)((uint8*)THIS$1 + 432ll) + -1ll;
  goto label$1444;
  label$1447:;
  {
   fb_GfxLock( );
   {
    int64 X$4;
    X$4 = 0ll;
    int64 TMP$1340$4;
    TMP$1340$4 = *(int64*)((uint8*)THIS$1 + 424ll) + -1ll;
    goto label$1448;
    label$1451:;
    {
     uint32 vr$20 = _ZN9RAYTRACER9SHOWPOINTEll( THIS$1, X$4, Y$2 );
     fb_GfxPset( (void*)0ull, (float)X$4, (float)Y$2, vr$20, 4, 0 );
    }
    label$1449:;
    X$4 = X$4 + 1ll;
    label$1448:;
    if( X$4 <= TMP$1340$4 ) goto label$1451;
    label$1450:;
   }
   fb_GfxUnlock( (int32)Y$2, (int32)(Y$2 + 1ll) );
  }
  label$1445:;
  Y$2 = Y$2 + 1ll;
  label$1444:;
  if( Y$2 <= TMP$1339$2 ) goto label$1447;
  label$1446:;
 }
 if( ANTIALIAS$1 == 0ll ) goto label$1453;
 {
  if( ANTIALIAS$1 != 1ll ) goto label$1455;
  {
   FBSTRING* vr$28 = fb_StrAllocTempDescZEx( (uint8*)"edge detection", 14ll );
   fb_GfxSetWindowTitle( (FBSTRING*)vr$28 );
   _ZN9RAYTRACER8EDGEBLUREv( THIS$1 );
  }
  goto label$1454;
  label$1455:;
  if( ANTIALIAS$1 != 2ll ) goto label$1456;
  {
   FBSTRING* vr$29 = fb_StrAllocTempDescZEx( (uint8*)"anitialias", 10ll );
   fb_GfxSetWindowTitle( (FBSTRING*)vr$29 );
   _ZN9RAYTRACER4BLUREv( THIS$1 );
  }
  label$1456:;
  label$1454:;
 }
 label$1453:;
 label$1452:;
 double vr$30 = fb_Timer( );
 T1$1 = vr$30 - T1$1;
 FBSTRING T$1;
 __builtin_memset( &T$1, 0, 24ll );
 int64 _H$1;
 __builtin_memset( &_H$1, 0, 8ll );
 int64 _M$1;
 __builtin_memset( &_M$1, 0, 8ll );
 int64 _S$1;
 __builtin_memset( &_S$1, 0, 8ll );
 if( __builtin_floor( T1$1 ) < 0x1.C2p+11 ) goto label$1458;
 {
  _H$1 = ((int64)__builtin_nearbyint( __builtin_floor( (T1$1 / 0x1.C2p+11) ) ));
  T1$1 = T1$1 - (double)(_H$1 * 3600ll);
  FBSTRING* vr$43 = fb_LongintToStr( _H$1 );
  fb_StrConcatAssign( (void*)&T$1, -1ll, (void*)vr$43, -1ll, 0 );
  fb_StrConcatAssign( (void*)&T$1, -1ll, (void*)":", 2ll, 0 );
  label$1458:;
 }
 if( __builtin_floor( T1$1 ) < 0x1.Ep+5 ) goto label$1460;
 {
  _M$1 = ((int64)__builtin_nearbyint( __builtin_floor( (T1$1 / 0x1.Ep+5) ) ));
  T1$1 = T1$1 - (double)(_M$1 * 60ll);
  FBSTRING* vr$53 = fb_LongintToStr( _M$1 );
  fb_StrConcatAssign( (void*)&T$1, -1ll, (void*)vr$53, -1ll, 0 );
  fb_StrConcatAssign( (void*)&T$1, -1ll, (void*)":", 2ll, 0 );
  label$1460:;
 }
 if( __builtin_floor( T1$1 ) < 0x1.p+0 ) goto label$1462;
 {
  _S$1 = ((int64)__builtin_nearbyint( __builtin_floor( T1$1 ) ));
  T1$1 = T1$1 - (double)_S$1;
  FBSTRING* vr$61 = fb_LongintToStr( _S$1 );
  fb_StrConcatAssign( (void*)&T$1, -1ll, (void*)vr$61, -1ll, 0 );
  label$1462:;
 }
 __builtin_memset( &TMP$1345$1, 0, 24ll );
 FBSTRING* vr$66 = fb_StrConcat( &TMP$1345$1, (void*)"time over all: ", 16ll, (void*)&T$1, -1ll );
 fb_GfxSetWindowTitle( (FBSTRING*)vr$66 );
 fb_StrDelete( (FBSTRING*)&T$1 );
 label$1441:;
}

void _ZN9RAYTRACER15RENDERRECTANGLEEllll( struct $9RAYTRACER* THIS$1, int64 X$1, int64 Y$1, int64 W$1, int64 H$1 )
{
 label$1463:;
 if( ((int64)-(W$1 == 0ll) & (int64)-(H$1 == 0ll)) == 0ll ) goto label$1466;
 {
  goto label$1464;
  label$1466:;
 }
 uint32 vr$3 = _ZN9RAYTRACER9SHOWPOINTEll( THIS$1, X$1, Y$1 );
 fb_GfxLine( (void*)0ull, (float)X$1, (float)Y$1, (float)W$1, (float)H$1, vr$3, 2, 65535u, 1 );
 goto label$1464;
 int64 XD$1;
 XD$1 = (int64)((uint64)W$1 + ((uint64)W$1 >> (63ll & 63ll))) >> (1ll & 63ll);
 int64 YD$1;
 YD$1 = (int64)((uint64)H$1 + ((uint64)H$1 >> (63ll & 63ll))) >> (1ll & 63ll);
 _ZN9RAYTRACER15RENDERRECTANGLEEllll( THIS$1, X$1 + XD$1, Y$1, XD$1, YD$1 );
 _ZN9RAYTRACER15RENDERRECTANGLEEllll( THIS$1, X$1 + XD$1, Y$1 + YD$1, XD$1, YD$1 );
 _ZN9RAYTRACER15RENDERRECTANGLEEllll( THIS$1, X$1, Y$1 + YD$1, XD$1, YD$1 );
 _ZN9RAYTRACER15RENDERRECTANGLEEllll( THIS$1, X$1, Y$1, XD$1, YD$1 );
 label$1464:;
}

void _ZN9RAYTRACER7RENDER2E6AATYPE( struct $9RAYTRACER* THIS$1, $6AATYPE ANTIALIAS$1 )
{
 int64 TMP$1350$1;
 FBSTRING TMP$1357$1;
 label$1467:;
 void* vr$0 = fb_GfxScreenPtr( );
 if( vr$0 != (void*)0ull ) goto label$1470;
 {
  fb_GfxScreenRes( (int32)*(int64*)((uint8*)THIS$1 + 424ll), (int32)*(int64*)((uint8*)THIS$1 + 432ll), 32, 1, 0, 0 );
 }
 label$1470:;
 label$1469:;
 double T1$1;
 double vr$5 = fb_Timer( );
 T1$1 = vr$5;
 FBSTRING* vr$6 = fb_StrAllocTempDescZEx( (uint8*)"render2 1080 lines. [ESC]=cancel", 32ll );
 fb_GfxSetWindowTitle( (FBSTRING*)vr$6 );
 int64 S$1;
 S$1 = 256ll;
 int64 FLAG$1;
 __builtin_memset( &FLAG$1, 0, 8ll );
 label$1471:;
 if( S$1 <= 0ll ) goto label$1473;
 TMP$1350$1 = (int64)-(FLAG$1 == 0ll);
 goto label$1497;
 label$1473:;
 TMP$1350$1 = 0ll;
 label$1497:;
 if( TMP$1350$1 == 0ll ) goto label$1472;
 {
  {
   int64 Y$3;
   Y$3 = 0ll;
   int64 TMP$1351$3;
   TMP$1351$3 = S$1;
   int64 TMP$1352$3;
   TMP$1352$3 = (int64)-(TMP$1351$3 >= 0ll);
   goto label$1474;
   label$1477:;
   {
    fb_GfxLock( );
    fb_GfxLine( (void*)0ull, 0x0p+0f, (float)Y$3, 0x1.DFCp+10f, (float)(S$1 + -1ll), 4294909984u, 2, 65535u, 1 );
    fb_GfxUnlock( (int32)Y$3, (int32)(Y$3 + S$1) );
    {
     int64 X$5;
     X$5 = 0ll;
     int64 TMP$1353$5;
     TMP$1353$5 = S$1;
     int64 TMP$1354$5;
     TMP$1354$5 = (int64)-(TMP$1353$5 >= 0ll);
     goto label$1478;
     label$1481:;
     {
      _ZN9RAYTRACER15RENDERRECTANGLEEllll( THIS$1, X$5, Y$3, S$1, S$1 );
     }
     label$1479:;
     X$5 = X$5 + TMP$1353$5;
     label$1478:;
     if( TMP$1354$5 != 0ll ) goto label$1482;
     if( X$5 >= 1919ll ) goto label$1481;
     goto label$1480;
     label$1482:;
     if( X$5 <= 1919ll ) goto label$1481;
     label$1480:;
    }
    FBSTRING* vr$18 = fb_Inkey( );
    int32 vr$19 = fb_StrCompare( (void*)vr$18, -1ll, (void*)"\x1B", 2ll );
    if( (int64)vr$19 != 0ll ) goto label$1484;
    {
     FLAG$1 = -1ll;
     goto label$1476;
    }
    label$1484:;
    label$1483:;
   }
   label$1475:;
   Y$3 = Y$3 + TMP$1351$3;
   label$1474:;
   if( TMP$1352$3 != 0ll ) goto label$1485;
   if( Y$3 >= 1079ll ) goto label$1477;
   goto label$1476;
   label$1485:;
   if( Y$3 <= 1079ll ) goto label$1477;
   label$1476:;
  }
  S$1 = S$1 >> (1ll & 63ll);
 }
 goto label$1471;
 label$1472:;
 if( ANTIALIAS$1 == 0ll ) goto label$1487;
 {
  if( ANTIALIAS$1 != 1ll ) goto label$1489;
  {
   FBSTRING* vr$23 = fb_StrAllocTempDescZEx( (uint8*)"edge detection", 14ll );
   fb_GfxSetWindowTitle( (FBSTRING*)vr$23 );
   _ZN9RAYTRACER8EDGEBLUREv( THIS$1 );
  }
  goto label$1488;
  label$1489:;
  if( ANTIALIAS$1 != 2ll ) goto label$1490;
  {
   FBSTRING* vr$24 = fb_StrAllocTempDescZEx( (uint8*)"antialias", 9ll );
   fb_GfxSetWindowTitle( (FBSTRING*)vr$24 );
   _ZN9RAYTRACER4BLUREv( THIS$1 );
  }
  label$1490:;
  label$1488:;
 }
 label$1487:;
 label$1486:;
 double vr$25 = fb_Timer( );
 T1$1 = vr$25 - T1$1;
 FBSTRING T$1;
 __builtin_memset( &T$1, 0, 24ll );
 int64 _H$1;
 __builtin_memset( &_H$1, 0, 8ll );
 int64 _M$1;
 __builtin_memset( &_M$1, 0, 8ll );
 int64 _S$1;
 __builtin_memset( &_S$1, 0, 8ll );
 if( __builtin_floor( T1$1 ) <= 0x1.C1Ep+11 ) goto label$1492;
 {
  _H$1 = ((int64)__builtin_nearbyint( __builtin_floor( (T1$1 / 0x1.C2p+11) ) ));
  T1$1 = T1$1 - (double)(_H$1 * 3600ll);
  FBSTRING* vr$38 = fb_LongintToStr( _H$1 );
  fb_StrAssign( (void*)&T$1, -1ll, (void*)vr$38, -1ll, 0 );
  fb_StrConcatAssign( (void*)&T$1, -1ll, (void*)":", 2ll, 0 );
  label$1492:;
 }
 if( __builtin_floor( T1$1 ) <= 0x1.D8p+5 ) goto label$1494;
 {
  _M$1 = ((int64)__builtin_nearbyint( __builtin_floor( (T1$1 / 0x1.Ep+5) ) ));
  T1$1 = T1$1 - (double)(_M$1 * 60ll);
  FBSTRING* vr$48 = fb_LongintToStr( _M$1 );
  fb_StrConcatAssign( (void*)&T$1, -1ll, (void*)vr$48, -1ll, 0 );
  fb_StrConcatAssign( (void*)&T$1, -1ll, (void*)":", 2ll, 0 );
  label$1494:;
 }
 if( __builtin_floor( T1$1 ) < 0x1.p+0 ) goto label$1496;
 {
  _S$1 = ((int64)__builtin_nearbyint( __builtin_floor( T1$1 ) ));
  T1$1 = T1$1 - (double)_S$1;
  FBSTRING* vr$56 = fb_LongintToStr( _S$1 );
  fb_StrConcatAssign( (void*)&T$1, -1ll, (void*)vr$56, -1ll, 0 );
  label$1496:;
 }
 __builtin_memset( &TMP$1357$1, 0, 24ll );
 FBSTRING* vr$61 = fb_StrConcat( &TMP$1357$1, (void*)"time over all: ", 16ll, (void*)&T$1, -1ll );
 fb_GfxSetWindowTitle( (FBSTRING*)vr$61 );
 fb_StrDelete( (FBSTRING*)&T$1 );
 label$1468:;
}

void _ZN7VECTOR2C1Ev( struct $7VECTOR2* THIS$1 )
{
 __builtin_memset( (double*)THIS$1, 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 8ll), 0, 8ll );
 label$1498:;
 label$1499:;
}

void _ZN7VECTOR2C1Ed( struct $7VECTOR2* THIS$1, double PXY$1 )
{
 label$1500:;
 __builtin_memset( (double*)THIS$1, 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 8ll), 0, 8ll );
 *(double*)THIS$1 = PXY$1;
 *(double*)((uint8*)THIS$1 + 8ll) = PXY$1;
 label$1501:;
}

void _ZN7VECTOR2C1Edd( struct $7VECTOR2* THIS$1, double PX$1, double PY$1 )
{
 label$1502:;
 __builtin_memset( (double*)THIS$1, 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 8ll), 0, 8ll );
 *(double*)THIS$1 = PX$1;
 *(double*)((uint8*)THIS$1 + 8ll) = PY$1;
 label$1503:;
}

void _ZN7VECTOR2C1ERS_( struct $7VECTOR2* THIS$1, struct $7VECTOR2* V2$1 )
{
 label$1504:;
 __builtin_memset( (double*)THIS$1, 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 8ll), 0, 8ll );
 *(double*)THIS$1 = *(double*)V2$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)V2$1 + 8ll);
 label$1505:;
}

void _ZN7VECTOR2aSEd( struct $7VECTOR2* THIS$1, double PXY$1 )
{
 label$1506:;
 *(double*)THIS$1 = PXY$1;
 *(double*)((uint8*)THIS$1 + 8ll) = PXY$1;
 label$1507:;
}

void _ZN7VECTOR2aSERS_( struct $7VECTOR2* THIS$1, struct $7VECTOR2* P$1 )
{
 label$1508:;
 *(double*)THIS$1 = *(double*)P$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)P$1 + 8ll);
 label$1509:;
}

FBSTRING* _ZN7VECTOR2cv8FBSTRINGEv( struct $7VECTOR2* THIS$1 )
{
 FBSTRING TMP$1360$1;
 FBSTRING TMP$1361$1;
 FBSTRING TMP$1362$1;
 FBSTRING TMP$1363$1;
 FBSTRING fb$result$1;
 __builtin_memset( &fb$result$1, 0, 24ll );
 label$1510:;
 FBSTRING* vr$2 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 8ll) );
 FBSTRING* vr$4 = fb_DoubleToStr( *(double*)THIS$1 );
 __builtin_memset( &TMP$1360$1, 0, 24ll );
 FBSTRING* vr$7 = fb_StrConcat( &TMP$1360$1, (void*)"(", 2ll, (void*)vr$4, -1ll );
 __builtin_memset( &TMP$1361$1, 0, 24ll );
 FBSTRING* vr$10 = fb_StrConcat( &TMP$1361$1, (void*)vr$7, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1362$1, 0, 24ll );
 FBSTRING* vr$13 = fb_StrConcat( &TMP$1362$1, (void*)vr$10, -1ll, (void*)vr$2, -1ll );
 __builtin_memset( &TMP$1363$1, 0, 24ll );
 FBSTRING* vr$16 = fb_StrConcat( &TMP$1363$1, (void*)vr$13, -1ll, (void*)")", 2ll );
 fb_StrInit( (void*)&fb$result$1, -1ll, (void*)vr$16, -1ll, 0 );
 goto label$1511;
 label$1511:;
 FBSTRING* vr$19 = fb_StrAllocTempResult( (FBSTRING*)&fb$result$1 );
 return vr$19;
}

void _ZN7VECTOR2pLEd( struct $7VECTOR2* THIS$1, double V$1 )
{
 label$1512:;
 *(double*)THIS$1 = *(double*)THIS$1 + V$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) + V$1;
 label$1513:;
}

void _ZN7VECTOR2mIEd( struct $7VECTOR2* THIS$1, double V$1 )
{
 label$1514:;
 *(double*)THIS$1 = *(double*)THIS$1 - V$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) - V$1;
 label$1515:;
}

void _ZN7VECTOR2mLEd( struct $7VECTOR2* THIS$1, double V$1 )
{
 label$1516:;
 *(double*)THIS$1 = *(double*)THIS$1 * V$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) * V$1;
 label$1517:;
}

void _ZN7VECTOR2dVEd( struct $7VECTOR2* THIS$1, double V$1 )
{
 label$1518:;
 *(double*)THIS$1 = *(double*)THIS$1 / V$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) / V$1;
 label$1519:;
}

void _ZN7VECTOR2pLERS_( struct $7VECTOR2* THIS$1, struct $7VECTOR2* V2$1 )
{
 label$1520:;
 *(double*)THIS$1 = *(double*)THIS$1 + *(double*)V2$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) + *(double*)((uint8*)V2$1 + 8ll);
 label$1521:;
}

void _ZN7VECTOR2mIERS_( struct $7VECTOR2* THIS$1, struct $7VECTOR2* V2$1 )
{
 label$1522:;
 *(double*)THIS$1 = *(double*)THIS$1 - *(double*)V2$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) - *(double*)((uint8*)V2$1 + 8ll);
 label$1523:;
}

void _ZN7VECTOR2mLERS_( struct $7VECTOR2* THIS$1, struct $7VECTOR2* V2$1 )
{
 label$1524:;
 *(double*)THIS$1 = *(double*)THIS$1 * *(double*)V2$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) * *(double*)((uint8*)V2$1 + 8ll);
 label$1525:;
}

void _ZN7VECTOR2dVERS_( struct $7VECTOR2* THIS$1, struct $7VECTOR2* V2$1 )
{
 label$1526:;
 *(double*)THIS$1 = *(double*)THIS$1 / *(double*)V2$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) / *(double*)((uint8*)V2$1 + 8ll);
 label$1527:;
}

struct $7VECTOR2* _ZN7VECTOR22XXEv( struct $7VECTOR2* tmp$1364$1, struct $7VECTOR2* THIS$1 )
{
 label$1528:;
 _ZN7VECTOR2C1Edd( tmp$1364$1, *(double*)THIS$1, *(double*)THIS$1 );
 goto label$1529;
 label$1529:;
 return tmp$1364$1;
}

struct $7VECTOR2* _ZN7VECTOR22XYEv( struct $7VECTOR2* tmp$1366$1, struct $7VECTOR2* THIS$1 )
{
 label$1530:;
 _ZN7VECTOR2C1Edd( tmp$1366$1, *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 8ll) );
 goto label$1531;
 label$1531:;
 return tmp$1366$1;
}

struct $7VECTOR2* _ZN7VECTOR22YXEv( struct $7VECTOR2* tmp$1368$1, struct $7VECTOR2* THIS$1 )
{
 label$1532:;
 _ZN7VECTOR2C1Edd( tmp$1368$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)THIS$1 );
 goto label$1533;
 label$1533:;
 return tmp$1368$1;
}

struct $7VECTOR2* _ZN7VECTOR22YYEv( struct $7VECTOR2* tmp$1370$1, struct $7VECTOR2* THIS$1 )
{
 label$1534:;
 _ZN7VECTOR2C1Edd( tmp$1370$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)((uint8*)THIS$1 + 8ll) );
 goto label$1535;
 label$1535:;
 return tmp$1370$1;
}

struct $7VECTOR2* _ZngR7VECTOR2( struct $7VECTOR2* tmp$1372$1, struct $7VECTOR2* L$1 )
{
 label$1536:;
 _ZN7VECTOR2C1Edd( tmp$1372$1, -(*(double*)L$1), -(*(double*)((uint8*)L$1 + 8ll)) );
 goto label$1537;
 label$1537:;
 return tmp$1372$1;
}

struct $7VECTOR2* _ZplR7VECTOR2S0_( struct $7VECTOR2* tmp$1374$1, struct $7VECTOR2* L$1, struct $7VECTOR2* R$1 )
{
 label$1538:;
 _ZN7VECTOR2C1Edd( tmp$1374$1, *(double*)L$1 + *(double*)R$1, *(double*)((uint8*)L$1 + 8ll) + *(double*)((uint8*)R$1 + 8ll) );
 goto label$1539;
 label$1539:;
 return tmp$1374$1;
}

struct $7VECTOR2* _ZplR7VECTOR2Rd( struct $7VECTOR2* tmp$1376$1, struct $7VECTOR2* L$1, double* R$1 )
{
 label$1540:;
 _ZN7VECTOR2C1Edd( tmp$1376$1, *(double*)L$1 + *R$1, *(double*)((uint8*)L$1 + 8ll) + *R$1 );
 goto label$1541;
 label$1541:;
 return tmp$1376$1;
}

struct $7VECTOR2* _ZplRdR7VECTOR2( struct $7VECTOR2* tmp$1378$1, double* L$1, struct $7VECTOR2* R$1 )
{
 label$1542:;
 _ZN7VECTOR2C1Edd( tmp$1378$1, *(double*)R$1 + *L$1, *(double*)((uint8*)R$1 + 8ll) + *L$1 );
 goto label$1543;
 label$1543:;
 return tmp$1378$1;
}

struct $7VECTOR2* _ZmiR7VECTOR2S0_( struct $7VECTOR2* tmp$1380$1, struct $7VECTOR2* L$1, struct $7VECTOR2* R$1 )
{
 label$1544:;
 _ZN7VECTOR2C1Edd( tmp$1380$1, *(double*)L$1 - *(double*)R$1, *(double*)((uint8*)L$1 + 8ll) - *(double*)((uint8*)R$1 + 8ll) );
 goto label$1545;
 label$1545:;
 return tmp$1380$1;
}

struct $7VECTOR2* _ZmiR7VECTOR2Rd( struct $7VECTOR2* tmp$1382$1, struct $7VECTOR2* L$1, double* R$1 )
{
 label$1546:;
 _ZN7VECTOR2C1Edd( tmp$1382$1, *(double*)L$1 - *R$1, *(double*)((uint8*)L$1 + 8ll) - *R$1 );
 goto label$1547;
 label$1547:;
 return tmp$1382$1;
}

struct $7VECTOR2* _ZmiRdR7VECTOR2( struct $7VECTOR2* tmp$1384$1, double* L$1, struct $7VECTOR2* R$1 )
{
 label$1548:;
 _ZN7VECTOR2C1Edd( tmp$1384$1, *(double*)R$1 - *L$1, *(double*)((uint8*)R$1 + 8ll) - *L$1 );
 goto label$1549;
 label$1549:;
 return tmp$1384$1;
}

struct $7VECTOR2* _ZmlR7VECTOR2S0_( struct $7VECTOR2* tmp$1386$1, struct $7VECTOR2* L$1, struct $7VECTOR2* R$1 )
{
 label$1550:;
 _ZN7VECTOR2C1Edd( tmp$1386$1, *(double*)L$1 * *(double*)R$1, *(double*)((uint8*)L$1 + 8ll) * *(double*)((uint8*)R$1 + 8ll) );
 goto label$1551;
 label$1551:;
 return tmp$1386$1;
}

struct $7VECTOR2* _ZmlR7VECTOR2Rd( struct $7VECTOR2* tmp$1388$1, struct $7VECTOR2* L$1, double* R$1 )
{
 label$1552:;
 _ZN7VECTOR2C1Edd( tmp$1388$1, *(double*)L$1 * *R$1, *(double*)((uint8*)L$1 + 8ll) * *R$1 );
 goto label$1553;
 label$1553:;
 return tmp$1388$1;
}

struct $7VECTOR2* _ZmlRdR7VECTOR2( struct $7VECTOR2* tmp$1390$1, double* L$1, struct $7VECTOR2* R$1 )
{
 label$1554:;
 _ZN7VECTOR2C1Edd( tmp$1390$1, *L$1 * *(double*)R$1, *L$1 * *(double*)((uint8*)R$1 + 8ll) );
 goto label$1555;
 label$1555:;
 return tmp$1390$1;
}

struct $7VECTOR2* _ZdvR7VECTOR2S0_( struct $7VECTOR2* tmp$1392$1, struct $7VECTOR2* L$1, struct $7VECTOR2* R$1 )
{
 label$1556:;
 _ZN7VECTOR2C1Edd( tmp$1392$1, *(double*)L$1 / *(double*)R$1, *(double*)((uint8*)L$1 + 8ll) / *(double*)((uint8*)R$1 + 8ll) );
 goto label$1557;
 label$1557:;
 return tmp$1392$1;
}

int64 _ZeqR7VECTOR2S0_( struct $7VECTOR2* L$1, struct $7VECTOR2* R$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1558:;
 if( ((((int64)__builtin_nearbyint( *(double*)L$1 )) ^ ((int64)__builtin_nearbyint( *(double*)R$1 ))) | (((int64)__builtin_nearbyint( *(double*)((uint8*)L$1 + 8ll) )) ^ ((int64)__builtin_nearbyint( *(double*)((uint8*)R$1 + 8ll) )))) == 0ll ) goto label$1561;
 {
  fb$result$1 = 0ll;
  goto label$1559;
  label$1561:;
 }
 fb$result$1 = -1ll;
 goto label$1559;
 label$1559:;
 return fb$result$1;
}

int64 _ZneR7VECTOR2S0_( struct $7VECTOR2* L$1, struct $7VECTOR2* R$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1562:;
 if( ((((int64)__builtin_nearbyint( *(double*)L$1 )) ^ ((int64)__builtin_nearbyint( *(double*)R$1 ))) | (((int64)__builtin_nearbyint( *(double*)((uint8*)L$1 + 8ll) )) ^ ((int64)__builtin_nearbyint( *(double*)((uint8*)R$1 + 8ll) )))) == 0ll ) goto label$1565;
 {
  fb$result$1 = -1ll;
  goto label$1563;
  label$1565:;
 }
 fb$result$1 = 0ll;
 goto label$1563;
 label$1563:;
 return fb$result$1;
}

void _ZN7VECTOR3C1Ev( struct $7VECTOR3* THIS$1 )
{
 _ZN7VECTOR2C1Ev( (struct $7VECTOR2*)THIS$1 );
 __builtin_memset( (double*)((uint8*)THIS$1 + 16ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 24ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 32ll), 0, 8ll );
 label$1570:;
 label$1571:;
}

void _ZN7VECTOR3C1Ed( struct $7VECTOR3* THIS$1, double PXYZ$1 )
{
 label$1572:;
 _ZN7VECTOR2C1Ev( (struct $7VECTOR2*)THIS$1 );
 __builtin_memset( (double*)((uint8*)THIS$1 + 16ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 24ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 32ll), 0, 8ll );
 *(double*)((uint8*)THIS$1 + 16ll) = PXYZ$1;
 *(double*)((uint8*)THIS$1 + 24ll) = PXYZ$1;
 *(double*)((uint8*)THIS$1 + 32ll) = PXYZ$1;
 label$1573:;
}

void _ZN7VECTOR3C1Eddd( struct $7VECTOR3* THIS$1, double PX$1, double PY$1, double PZ$1 )
{
 label$1574:;
 _ZN7VECTOR2C1Ev( (struct $7VECTOR2*)THIS$1 );
 __builtin_memset( (double*)((uint8*)THIS$1 + 16ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 24ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 32ll), 0, 8ll );
 *(double*)((uint8*)THIS$1 + 16ll) = PX$1;
 *(double*)((uint8*)THIS$1 + 24ll) = PY$1;
 *(double*)((uint8*)THIS$1 + 32ll) = PZ$1;
 label$1575:;
}

void _ZN7VECTOR3C1ER7VECTOR2d( struct $7VECTOR3* THIS$1, struct $7VECTOR2* V2$1, double PZ$1 )
{
 label$1576:;
 _ZN7VECTOR2C1Ev( (struct $7VECTOR2*)THIS$1 );
 __builtin_memset( (double*)((uint8*)THIS$1 + 16ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 24ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 32ll), 0, 8ll );
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)V2$1;
 *(double*)((uint8*)THIS$1 + 24ll) = *(double*)((uint8*)V2$1 + 8ll);
 *(double*)((uint8*)THIS$1 + 32ll) = PZ$1;
 label$1577:;
}

void _ZN7VECTOR3C1EdR7VECTOR2( struct $7VECTOR3* THIS$1, double PX$1, struct $7VECTOR2* V2$1 )
{
 label$1578:;
 _ZN7VECTOR2C1Ev( (struct $7VECTOR2*)THIS$1 );
 __builtin_memset( (double*)((uint8*)THIS$1 + 16ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 24ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 32ll), 0, 8ll );
 *(double*)((uint8*)THIS$1 + 16ll) = PX$1;
 *(double*)((uint8*)THIS$1 + 24ll) = *(double*)V2$1;
 *(double*)((uint8*)THIS$1 + 32ll) = *(double*)((uint8*)V2$1 + 8ll);
 label$1579:;
}

void _ZN7VECTOR3C1ERS_( struct $7VECTOR3* THIS$1, struct $7VECTOR3* V3$1 )
{
 label$1580:;
 _ZN7VECTOR2C1Ev( (struct $7VECTOR2*)THIS$1 );
 __builtin_memset( (double*)((uint8*)THIS$1 + 16ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 24ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 32ll), 0, 8ll );
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)V3$1 + 16ll);
 *(double*)((uint8*)THIS$1 + 24ll) = *(double*)((uint8*)V3$1 + 24ll);
 *(double*)((uint8*)THIS$1 + 32ll) = *(double*)((uint8*)V3$1 + 32ll);
 label$1581:;
}

void _ZN7VECTOR3aSEd( struct $7VECTOR3* THIS$1, double PXYZ$1 )
{
 label$1582:;
 *(double*)((uint8*)THIS$1 + 16ll) = PXYZ$1;
 *(double*)((uint8*)THIS$1 + 24ll) = PXYZ$1;
 *(double*)((uint8*)THIS$1 + 32ll) = PXYZ$1;
 label$1583:;
}

void _ZN7VECTOR3aSER7VECTOR2( struct $7VECTOR3* THIS$1, struct $7VECTOR2* P$1 )
{
 label$1584:;
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)P$1;
 *(double*)((uint8*)THIS$1 + 24ll) = *(double*)((uint8*)P$1 + 8ll);
 *(double*)((uint8*)THIS$1 + 32ll) = 0x1.p+0;
 label$1585:;
}

void _ZN7VECTOR3aSERS_( struct $7VECTOR3* THIS$1, struct $7VECTOR3* P$1 )
{
 label$1586:;
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)P$1 + 16ll);
 *(double*)((uint8*)THIS$1 + 24ll) = *(double*)((uint8*)P$1 + 24ll);
 *(double*)((uint8*)THIS$1 + 32ll) = *(double*)((uint8*)P$1 + 32ll);
 label$1587:;
}

FBSTRING* _ZN7VECTOR3cv8FBSTRINGEv( struct $7VECTOR3* THIS$1 )
{
 FBSTRING TMP$1397$1;
 FBSTRING TMP$1398$1;
 FBSTRING TMP$1399$1;
 FBSTRING TMP$1400$1;
 FBSTRING TMP$1401$1;
 FBSTRING TMP$1402$1;
 FBSTRING fb$result$1;
 __builtin_memset( &fb$result$1, 0, 24ll );
 label$1588:;
 FBSTRING* vr$2 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 32ll) );
 FBSTRING* vr$4 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 24ll) );
 FBSTRING* vr$6 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 16ll) );
 __builtin_memset( &TMP$1397$1, 0, 24ll );
 FBSTRING* vr$9 = fb_StrConcat( &TMP$1397$1, (void*)"(", 2ll, (void*)vr$6, -1ll );
 __builtin_memset( &TMP$1398$1, 0, 24ll );
 FBSTRING* vr$12 = fb_StrConcat( &TMP$1398$1, (void*)vr$9, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1399$1, 0, 24ll );
 FBSTRING* vr$15 = fb_StrConcat( &TMP$1399$1, (void*)vr$12, -1ll, (void*)vr$4, -1ll );
 __builtin_memset( &TMP$1400$1, 0, 24ll );
 FBSTRING* vr$18 = fb_StrConcat( &TMP$1400$1, (void*)vr$15, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1401$1, 0, 24ll );
 FBSTRING* vr$21 = fb_StrConcat( &TMP$1401$1, (void*)vr$18, -1ll, (void*)vr$2, -1ll );
 __builtin_memset( &TMP$1402$1, 0, 24ll );
 FBSTRING* vr$24 = fb_StrConcat( &TMP$1402$1, (void*)vr$21, -1ll, (void*)")", 2ll );
 fb_StrInit( (void*)&fb$result$1, -1ll, (void*)vr$24, -1ll, 0 );
 goto label$1589;
 label$1589:;
 FBSTRING* vr$27 = fb_StrAllocTempResult( (FBSTRING*)&fb$result$1 );
 return vr$27;
}

uint64 _ZN7VECTOR3cvyEv( struct $7VECTOR3* THIS$1 )
{
 uint64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1590:;
 uint64 T$1;
 uint64 A$1;
 A$1 = 255ull;
 A$1 = A$1 << (8ll & 63ll);
 if( *(double*)((uint8*)THIS$1 + 16ll) >= 0x0p+0 ) goto label$1593;
 {
 }
 goto label$1592;
 label$1593:;
 if( *(double*)((uint8*)THIS$1 + 16ll) <= 0x1.p+0 ) goto label$1594;
 {
  A$1 = A$1 | 255ull;
 }
 goto label$1592;
 label$1594:;
 {
  T$1 = ((uint64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 16ll) * 0x1.FEp+7 ));
  A$1 = A$1 | T$1;
 }
 label$1592:;
 A$1 = A$1 << (8ll & 63ll);
 if( *(double*)((uint8*)THIS$1 + 24ll) >= 0x0p+0 ) goto label$1596;
 {
 }
 goto label$1595;
 label$1596:;
 if( *(double*)((uint8*)THIS$1 + 24ll) <= 0x1.p+0 ) goto label$1597;
 {
  A$1 = A$1 | 255ull;
 }
 goto label$1595;
 label$1597:;
 {
  T$1 = ((uint64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 24ll) * 0x1.FEp+7 ));
  A$1 = A$1 | T$1;
 }
 label$1595:;
 A$1 = A$1 << (8ll & 63ll);
 if( *(double*)((uint8*)THIS$1 + 32ll) >= 0x0p+0 ) goto label$1599;
 {
 }
 goto label$1598;
 label$1599:;
 if( *(double*)((uint8*)THIS$1 + 32ll) <= 0x1.p+0 ) goto label$1600;
 {
  A$1 = A$1 | 255ull;
 }
 goto label$1598;
 label$1600:;
 {
  T$1 = ((uint64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 32ll) * 0x1.FEp+7 ));
  A$1 = A$1 | T$1;
 }
 label$1598:;
 fb$result$1 = A$1;
 goto label$1591;
 label$1591:;
 return fb$result$1;
}

void _ZN7VECTOR3pLEd( struct $7VECTOR3* THIS$1, double V$1 )
{
 label$1601:;
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)THIS$1 + 16ll) + V$1;
 *(double*)((uint8*)THIS$1 + 24ll) = *(double*)((uint8*)THIS$1 + 24ll) + V$1;
 *(double*)((uint8*)THIS$1 + 32ll) = *(double*)((uint8*)THIS$1 + 32ll) + V$1;
 label$1602:;
}

void _ZN7VECTOR3mIEd( struct $7VECTOR3* THIS$1, double V$1 )
{
 label$1603:;
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)THIS$1 + 16ll) - V$1;
 *(double*)((uint8*)THIS$1 + 24ll) = *(double*)((uint8*)THIS$1 + 24ll) - V$1;
 *(double*)((uint8*)THIS$1 + 32ll) = *(double*)((uint8*)THIS$1 + 32ll) - V$1;
 label$1604:;
}

void _ZN7VECTOR3mLEd( struct $7VECTOR3* THIS$1, double V$1 )
{
 label$1605:;
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)THIS$1 + 16ll) * V$1;
 *(double*)((uint8*)THIS$1 + 24ll) = *(double*)((uint8*)THIS$1 + 24ll) * V$1;
 *(double*)((uint8*)THIS$1 + 32ll) = *(double*)((uint8*)THIS$1 + 32ll) * V$1;
 label$1606:;
}

void _ZN7VECTOR3dVEd( struct $7VECTOR3* THIS$1, double V$1 )
{
 label$1607:;
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)THIS$1 + 16ll) / V$1;
 *(double*)((uint8*)THIS$1 + 24ll) = *(double*)((uint8*)THIS$1 + 24ll) / V$1;
 *(double*)((uint8*)THIS$1 + 32ll) = *(double*)((uint8*)THIS$1 + 32ll) / V$1;
 label$1608:;
}

void _ZN7VECTOR3pLERS_( struct $7VECTOR3* THIS$1, struct $7VECTOR3* V3$1 )
{
 label$1609:;
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)THIS$1 + 16ll) + *(double*)((uint8*)V3$1 + 16ll);
 *(double*)((uint8*)THIS$1 + 24ll) = *(double*)((uint8*)THIS$1 + 24ll) + *(double*)((uint8*)V3$1 + 24ll);
 *(double*)((uint8*)THIS$1 + 32ll) = *(double*)((uint8*)THIS$1 + 32ll) + *(double*)((uint8*)V3$1 + 32ll);
 label$1610:;
}

void _ZN7VECTOR3mIERS_( struct $7VECTOR3* THIS$1, struct $7VECTOR3* V3$1 )
{
 label$1611:;
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)THIS$1 + 16ll) - *(double*)((uint8*)V3$1 + 16ll);
 *(double*)((uint8*)THIS$1 + 24ll) = *(double*)((uint8*)THIS$1 + 24ll) - *(double*)((uint8*)V3$1 + 24ll);
 *(double*)((uint8*)THIS$1 + 32ll) = *(double*)((uint8*)THIS$1 + 32ll) - *(double*)((uint8*)V3$1 + 32ll);
 label$1612:;
}

void _ZN7VECTOR3mLERS_( struct $7VECTOR3* THIS$1, struct $7VECTOR3* V3$1 )
{
 label$1613:;
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)THIS$1 + 16ll) * *(double*)((uint8*)V3$1 + 16ll);
 *(double*)((uint8*)THIS$1 + 24ll) = *(double*)((uint8*)THIS$1 + 24ll) * *(double*)((uint8*)V3$1 + 24ll);
 *(double*)((uint8*)THIS$1 + 32ll) = *(double*)((uint8*)THIS$1 + 32ll) * *(double*)((uint8*)V3$1 + 32ll);
 label$1614:;
}

void _ZN7VECTOR3dVERS_( struct $7VECTOR3* THIS$1, struct $7VECTOR3* V3$1 )
{
 label$1615:;
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)THIS$1 + 16ll) / *(double*)((uint8*)V3$1 + 16ll);
 *(double*)((uint8*)THIS$1 + 24ll) = *(double*)((uint8*)THIS$1 + 24ll) / *(double*)((uint8*)V3$1 + 24ll);
 *(double*)((uint8*)THIS$1 + 32ll) = *(double*)((uint8*)THIS$1 + 32ll) / *(double*)((uint8*)V3$1 + 32ll);
 label$1616:;
}

struct $7VECTOR2* _ZN7VECTOR32XXEv( struct $7VECTOR2* tmp$1403$1, struct $7VECTOR3* THIS$1 )
{
 label$1617:;
 _ZN7VECTOR2C1Edd( tmp$1403$1, *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 16ll) );
 goto label$1618;
 label$1618:;
 return tmp$1403$1;
}

struct $7VECTOR2* _ZN7VECTOR32XYEv( struct $7VECTOR2* tmp$1405$1, struct $7VECTOR3* THIS$1 )
{
 label$1619:;
 _ZN7VECTOR2C1Edd( tmp$1405$1, *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 24ll) );
 goto label$1620;
 label$1620:;
 return tmp$1405$1;
}

struct $7VECTOR2* _ZN7VECTOR32XZEv( struct $7VECTOR2* tmp$1407$1, struct $7VECTOR3* THIS$1 )
{
 label$1621:;
 _ZN7VECTOR2C1Edd( tmp$1407$1, *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 32ll) );
 goto label$1622;
 label$1622:;
 return tmp$1407$1;
}

struct $7VECTOR2* _ZN7VECTOR32YXEv( struct $7VECTOR2* tmp$1409$1, struct $7VECTOR3* THIS$1 )
{
 label$1623:;
 _ZN7VECTOR2C1Edd( tmp$1409$1, *(double*)((uint8*)THIS$1 + 24ll), *(double*)((uint8*)THIS$1 + 16ll) );
 goto label$1624;
 label$1624:;
 return tmp$1409$1;
}

struct $7VECTOR2* _ZN7VECTOR32YYEv( struct $7VECTOR2* tmp$1411$1, struct $7VECTOR3* THIS$1 )
{
 label$1625:;
 _ZN7VECTOR2C1Edd( tmp$1411$1, *(double*)((uint8*)THIS$1 + 24ll), *(double*)((uint8*)THIS$1 + 24ll) );
 goto label$1626;
 label$1626:;
 return tmp$1411$1;
}

struct $7VECTOR2* _ZN7VECTOR32YZEv( struct $7VECTOR2* tmp$1413$1, struct $7VECTOR3* THIS$1 )
{
 label$1627:;
 _ZN7VECTOR2C1Edd( tmp$1413$1, *(double*)((uint8*)THIS$1 + 24ll), *(double*)((uint8*)THIS$1 + 32ll) );
 goto label$1628;
 label$1628:;
 return tmp$1413$1;
}

struct $7VECTOR2* _ZN7VECTOR32ZXEv( struct $7VECTOR2* tmp$1415$1, struct $7VECTOR3* THIS$1 )
{
 label$1629:;
 _ZN7VECTOR2C1Edd( tmp$1415$1, *(double*)((uint8*)THIS$1 + 32ll), *(double*)((uint8*)THIS$1 + 16ll) );
 goto label$1630;
 label$1630:;
 return tmp$1415$1;
}

struct $7VECTOR2* _ZN7VECTOR32ZYEv( struct $7VECTOR2* tmp$1417$1, struct $7VECTOR3* THIS$1 )
{
 label$1631:;
 _ZN7VECTOR2C1Edd( tmp$1417$1, *(double*)((uint8*)THIS$1 + 32ll), *(double*)((uint8*)THIS$1 + 24ll) );
 goto label$1632;
 label$1632:;
 return tmp$1417$1;
}

struct $7VECTOR2* _ZN7VECTOR32ZZEv( struct $7VECTOR2* tmp$1419$1, struct $7VECTOR3* THIS$1 )
{
 label$1633:;
 _ZN7VECTOR2C1Edd( tmp$1419$1, *(double*)((uint8*)THIS$1 + 32ll), *(double*)((uint8*)THIS$1 + 32ll) );
 goto label$1634;
 label$1634:;
 return tmp$1419$1;
}

struct $7VECTOR3* _ZN7VECTOR33XXXEv( struct $7VECTOR3* tmp$1421$1, struct $7VECTOR3* THIS$1 )
{
 label$1635:;
 _ZN7VECTOR3C1Eddd( tmp$1421$1, *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 16ll) );
 goto label$1636;
 label$1636:;
 return tmp$1421$1;
}

struct $7VECTOR3* _ZN7VECTOR33XXYEv( struct $7VECTOR3* tmp$1423$1, struct $7VECTOR3* THIS$1 )
{
 label$1637:;
 _ZN7VECTOR3C1Eddd( tmp$1423$1, *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 24ll) );
 goto label$1638;
 label$1638:;
 return tmp$1423$1;
}

struct $7VECTOR3* _ZN7VECTOR33XXZEv( struct $7VECTOR3* tmp$1425$1, struct $7VECTOR3* THIS$1 )
{
 label$1639:;
 _ZN7VECTOR3C1Eddd( tmp$1425$1, *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 32ll) );
 goto label$1640;
 label$1640:;
 return tmp$1425$1;
}

struct $7VECTOR3* _ZN7VECTOR33XYXEv( struct $7VECTOR3* tmp$1427$1, struct $7VECTOR3* THIS$1 )
{
 label$1641:;
 _ZN7VECTOR3C1Eddd( tmp$1427$1, *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 24ll), *(double*)((uint8*)THIS$1 + 16ll) );
 goto label$1642;
 label$1642:;
 return tmp$1427$1;
}

struct $7VECTOR3* _ZN7VECTOR33XYYEv( struct $7VECTOR3* tmp$1429$1, struct $7VECTOR3* THIS$1 )
{
 label$1643:;
 _ZN7VECTOR3C1Eddd( tmp$1429$1, *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 24ll), *(double*)((uint8*)THIS$1 + 24ll) );
 goto label$1644;
 label$1644:;
 return tmp$1429$1;
}

struct $7VECTOR3* _ZN7VECTOR33XYZEv( struct $7VECTOR3* tmp$1431$1, struct $7VECTOR3* THIS$1 )
{
 label$1645:;
 _ZN7VECTOR3C1Eddd( tmp$1431$1, *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 24ll), *(double*)((uint8*)THIS$1 + 32ll) );
 goto label$1646;
 label$1646:;
 return tmp$1431$1;
}

struct $7VECTOR3* _ZN7VECTOR33XZXEv( struct $7VECTOR3* tmp$1433$1, struct $7VECTOR3* THIS$1 )
{
 label$1647:;
 _ZN7VECTOR3C1Eddd( tmp$1433$1, *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 32ll), *(double*)((uint8*)THIS$1 + 16ll) );
 goto label$1648;
 label$1648:;
 return tmp$1433$1;
}

struct $7VECTOR3* _ZN7VECTOR33XZYEv( struct $7VECTOR3* tmp$1435$1, struct $7VECTOR3* THIS$1 )
{
 label$1649:;
 _ZN7VECTOR3C1Eddd( tmp$1435$1, *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 32ll), *(double*)((uint8*)THIS$1 + 24ll) );
 goto label$1650;
 label$1650:;
 return tmp$1435$1;
}

struct $7VECTOR3* _ZN7VECTOR33XZZEv( struct $7VECTOR3* tmp$1437$1, struct $7VECTOR3* THIS$1 )
{
 label$1651:;
 _ZN7VECTOR3C1Eddd( tmp$1437$1, *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 32ll), *(double*)((uint8*)THIS$1 + 32ll) );
 goto label$1652;
 label$1652:;
 return tmp$1437$1;
}

struct $7VECTOR3* _ZN7VECTOR33YXXEv( struct $7VECTOR3* tmp$1439$1, struct $7VECTOR3* THIS$1 )
{
 label$1653:;
 _ZN7VECTOR3C1Eddd( tmp$1439$1, *(double*)((uint8*)THIS$1 + 24ll), *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 16ll) );
 goto label$1654;
 label$1654:;
 return tmp$1439$1;
}

struct $7VECTOR3* _ZN7VECTOR33YXYEv( struct $7VECTOR3* tmp$1441$1, struct $7VECTOR3* THIS$1 )
{
 label$1655:;
 _ZN7VECTOR3C1Eddd( tmp$1441$1, *(double*)((uint8*)THIS$1 + 24ll), *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 24ll) );
 goto label$1656;
 label$1656:;
 return tmp$1441$1;
}

struct $7VECTOR3* _ZN7VECTOR33YXZEv( struct $7VECTOR3* tmp$1443$1, struct $7VECTOR3* THIS$1 )
{
 label$1657:;
 _ZN7VECTOR3C1Eddd( tmp$1443$1, *(double*)((uint8*)THIS$1 + 24ll), *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 32ll) );
 goto label$1658;
 label$1658:;
 return tmp$1443$1;
}

struct $7VECTOR3* _ZN7VECTOR33YYXEv( struct $7VECTOR3* tmp$1445$1, struct $7VECTOR3* THIS$1 )
{
 label$1659:;
 _ZN7VECTOR3C1Eddd( tmp$1445$1, *(double*)((uint8*)THIS$1 + 24ll), *(double*)((uint8*)THIS$1 + 24ll), *(double*)((uint8*)THIS$1 + 16ll) );
 goto label$1660;
 label$1660:;
 return tmp$1445$1;
}

struct $7VECTOR3* _ZN7VECTOR33YYYEv( struct $7VECTOR3* tmp$1447$1, struct $7VECTOR3* THIS$1 )
{
 label$1661:;
 _ZN7VECTOR3C1Eddd( tmp$1447$1, *(double*)((uint8*)THIS$1 + 24ll), *(double*)((uint8*)THIS$1 + 24ll), *(double*)((uint8*)THIS$1 + 24ll) );
 goto label$1662;
 label$1662:;
 return tmp$1447$1;
}

struct $7VECTOR3* _ZN7VECTOR33YYZEv( struct $7VECTOR3* tmp$1449$1, struct $7VECTOR3* THIS$1 )
{
 label$1663:;
 _ZN7VECTOR3C1Eddd( tmp$1449$1, *(double*)((uint8*)THIS$1 + 24ll), *(double*)((uint8*)THIS$1 + 24ll), *(double*)((uint8*)THIS$1 + 32ll) );
 goto label$1664;
 label$1664:;
 return tmp$1449$1;
}

struct $7VECTOR3* _ZN7VECTOR33YZXEv( struct $7VECTOR3* tmp$1451$1, struct $7VECTOR3* THIS$1 )
{
 label$1665:;
 _ZN7VECTOR3C1Eddd( tmp$1451$1, *(double*)((uint8*)THIS$1 + 24ll), *(double*)((uint8*)THIS$1 + 32ll), *(double*)((uint8*)THIS$1 + 16ll) );
 goto label$1666;
 label$1666:;
 return tmp$1451$1;
}

struct $7VECTOR3* _ZN7VECTOR33YZYEv( struct $7VECTOR3* tmp$1453$1, struct $7VECTOR3* THIS$1 )
{
 label$1667:;
 _ZN7VECTOR3C1Eddd( tmp$1453$1, *(double*)((uint8*)THIS$1 + 24ll), *(double*)((uint8*)THIS$1 + 32ll), *(double*)((uint8*)THIS$1 + 24ll) );
 goto label$1668;
 label$1668:;
 return tmp$1453$1;
}

struct $7VECTOR3* _ZN7VECTOR33YZZEv( struct $7VECTOR3* tmp$1455$1, struct $7VECTOR3* THIS$1 )
{
 label$1669:;
 _ZN7VECTOR3C1Eddd( tmp$1455$1, *(double*)((uint8*)THIS$1 + 24ll), *(double*)((uint8*)THIS$1 + 32ll), *(double*)((uint8*)THIS$1 + 32ll) );
 goto label$1670;
 label$1670:;
 return tmp$1455$1;
}

struct $7VECTOR3* _ZN7VECTOR33ZXXEv( struct $7VECTOR3* tmp$1457$1, struct $7VECTOR3* THIS$1 )
{
 label$1671:;
 _ZN7VECTOR3C1Eddd( tmp$1457$1, *(double*)((uint8*)THIS$1 + 32ll), *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 16ll) );
 goto label$1672;
 label$1672:;
 return tmp$1457$1;
}

struct $7VECTOR3* _ZN7VECTOR33ZXYEv( struct $7VECTOR3* tmp$1459$1, struct $7VECTOR3* THIS$1 )
{
 label$1673:;
 _ZN7VECTOR3C1Eddd( tmp$1459$1, *(double*)((uint8*)THIS$1 + 32ll), *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 24ll) );
 goto label$1674;
 label$1674:;
 return tmp$1459$1;
}

struct $7VECTOR3* _ZN7VECTOR33ZXZEv( struct $7VECTOR3* tmp$1461$1, struct $7VECTOR3* THIS$1 )
{
 label$1675:;
 _ZN7VECTOR3C1Eddd( tmp$1461$1, *(double*)((uint8*)THIS$1 + 32ll), *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 32ll) );
 goto label$1676;
 label$1676:;
 return tmp$1461$1;
}

struct $7VECTOR3* _ZN7VECTOR33ZYXEv( struct $7VECTOR3* tmp$1463$1, struct $7VECTOR3* THIS$1 )
{
 label$1677:;
 _ZN7VECTOR3C1Eddd( tmp$1463$1, *(double*)((uint8*)THIS$1 + 32ll), *(double*)((uint8*)THIS$1 + 24ll), *(double*)((uint8*)THIS$1 + 16ll) );
 goto label$1678;
 label$1678:;
 return tmp$1463$1;
}

struct $7VECTOR3* _ZN7VECTOR33ZYYEv( struct $7VECTOR3* tmp$1465$1, struct $7VECTOR3* THIS$1 )
{
 label$1679:;
 _ZN7VECTOR3C1Eddd( tmp$1465$1, *(double*)((uint8*)THIS$1 + 32ll), *(double*)((uint8*)THIS$1 + 24ll), *(double*)((uint8*)THIS$1 + 24ll) );
 goto label$1680;
 label$1680:;
 return tmp$1465$1;
}

struct $7VECTOR3* _ZN7VECTOR33ZYZEv( struct $7VECTOR3* tmp$1467$1, struct $7VECTOR3* THIS$1 )
{
 label$1681:;
 _ZN7VECTOR3C1Eddd( tmp$1467$1, *(double*)((uint8*)THIS$1 + 32ll), *(double*)((uint8*)THIS$1 + 24ll), *(double*)((uint8*)THIS$1 + 32ll) );
 goto label$1682;
 label$1682:;
 return tmp$1467$1;
}

struct $7VECTOR3* _ZN7VECTOR33ZZXEv( struct $7VECTOR3* tmp$1469$1, struct $7VECTOR3* THIS$1 )
{
 label$1683:;
 _ZN7VECTOR3C1Eddd( tmp$1469$1, *(double*)((uint8*)THIS$1 + 32ll), *(double*)((uint8*)THIS$1 + 32ll), *(double*)((uint8*)THIS$1 + 16ll) );
 goto label$1684;
 label$1684:;
 return tmp$1469$1;
}

struct $7VECTOR3* _ZN7VECTOR33ZZYEv( struct $7VECTOR3* tmp$1471$1, struct $7VECTOR3* THIS$1 )
{
 label$1685:;
 _ZN7VECTOR3C1Eddd( tmp$1471$1, *(double*)((uint8*)THIS$1 + 32ll), *(double*)((uint8*)THIS$1 + 32ll), *(double*)((uint8*)THIS$1 + 24ll) );
 goto label$1686;
 label$1686:;
 return tmp$1471$1;
}

struct $7VECTOR3* _ZN7VECTOR33ZZZEv( struct $7VECTOR3* tmp$1473$1, struct $7VECTOR3* THIS$1 )
{
 label$1687:;
 _ZN7VECTOR3C1Eddd( tmp$1473$1, *(double*)((uint8*)THIS$1 + 32ll), *(double*)((uint8*)THIS$1 + 32ll), *(double*)((uint8*)THIS$1 + 32ll) );
 goto label$1688;
 label$1688:;
 return tmp$1473$1;
}

struct $7VECTOR3* _ZN7VECTOR33RGBEv( struct $7VECTOR3* tmp$1475$1, struct $7VECTOR3* THIS$1 )
{
 label$1689:;
 _ZN7VECTOR3C1Eddd( tmp$1475$1, *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 24ll), *(double*)((uint8*)THIS$1 + 32ll) );
 goto label$1690;
 label$1690:;
 return tmp$1475$1;
}

struct $7VECTOR3* _ZngR7VECTOR3( struct $7VECTOR3* tmp$1477$1, struct $7VECTOR3* L$1 )
{
 label$1691:;
 _ZN7VECTOR3C1Eddd( tmp$1477$1, -(*(double*)((uint8*)L$1 + 16ll)), -(*(double*)((uint8*)L$1 + 24ll)), -(*(double*)((uint8*)L$1 + 32ll)) );
 goto label$1692;
 label$1692:;
 return tmp$1477$1;
}

struct $7VECTOR3* _ZplR7VECTOR3d( struct $7VECTOR3* tmp$1479$1, struct $7VECTOR3* L$1, double R$1 )
{
 label$1693:;
 _ZN7VECTOR3C1Eddd( tmp$1479$1, *(double*)((uint8*)L$1 + 16ll) + R$1, *(double*)((uint8*)L$1 + 24ll) + R$1, *(double*)((uint8*)L$1 + 32ll) + R$1 );
 goto label$1694;
 label$1694:;
 return tmp$1479$1;
}

struct $7VECTOR3* _ZpldR7VECTOR3( struct $7VECTOR3* tmp$1481$1, double L$1, struct $7VECTOR3* R$1 )
{
 label$1695:;
 _ZN7VECTOR3C1Eddd( tmp$1481$1, *(double*)((uint8*)R$1 + 16ll) + L$1, *(double*)((uint8*)R$1 + 24ll) + L$1, *(double*)((uint8*)R$1 + 32ll) + L$1 );
 goto label$1696;
 label$1696:;
 return tmp$1481$1;
}

struct $7VECTOR3* _ZmiR7VECTOR3d( struct $7VECTOR3* tmp$1483$1, struct $7VECTOR3* L$1, double R$1 )
{
 label$1697:;
 _ZN7VECTOR3C1Eddd( tmp$1483$1, *(double*)((uint8*)L$1 + 16ll) - R$1, *(double*)((uint8*)L$1 + 24ll) - R$1, *(double*)((uint8*)L$1 + 32ll) - R$1 );
 goto label$1698;
 label$1698:;
 return tmp$1483$1;
}

struct $7VECTOR3* _ZmidR7VECTOR3( struct $7VECTOR3* tmp$1485$1, double L$1, struct $7VECTOR3* R$1 )
{
 label$1699:;
 _ZN7VECTOR3C1Eddd( tmp$1485$1, *(double*)((uint8*)R$1 + 16ll) - L$1, *(double*)((uint8*)R$1 + 24ll) - L$1, *(double*)((uint8*)R$1 + 32ll) - L$1 );
 goto label$1700;
 label$1700:;
 return tmp$1485$1;
}

struct $7VECTOR3* _ZmlR7VECTOR3d( struct $7VECTOR3* tmp$1487$1, struct $7VECTOR3* L$1, double R$1 )
{
 label$1701:;
 _ZN7VECTOR3C1Eddd( tmp$1487$1, *(double*)((uint8*)L$1 + 16ll) * R$1, *(double*)((uint8*)L$1 + 24ll) * R$1, *(double*)((uint8*)L$1 + 32ll) * R$1 );
 goto label$1702;
 label$1702:;
 return tmp$1487$1;
}

struct $7VECTOR3* _ZmldR7VECTOR3( struct $7VECTOR3* tmp$1489$1, double L$1, struct $7VECTOR3* R$1 )
{
 label$1703:;
 _ZN7VECTOR3C1Eddd( tmp$1489$1, *(double*)((uint8*)R$1 + 16ll) * L$1, *(double*)((uint8*)R$1 + 24ll) * L$1, *(double*)((uint8*)R$1 + 32ll) * L$1 );
 goto label$1704;
 label$1704:;
 return tmp$1489$1;
}

struct $7VECTOR3* _ZdvR7VECTOR3d( struct $7VECTOR3* tmp$1491$1, struct $7VECTOR3* L$1, double R$1 )
{
 label$1705:;
 _ZN7VECTOR3C1Eddd( tmp$1491$1, *(double*)((uint8*)L$1 + 16ll) / R$1, *(double*)((uint8*)L$1 + 24ll) / R$1, *(double*)((uint8*)L$1 + 32ll) / R$1 );
 goto label$1706;
 label$1706:;
 return tmp$1491$1;
}

struct $7VECTOR3* _ZdvdR7VECTOR3( struct $7VECTOR3* tmp$1493$1, double L$1, struct $7VECTOR3* R$1 )
{
 label$1707:;
 _ZN7VECTOR3C1Eddd( tmp$1493$1, *(double*)((uint8*)R$1 + 16ll) / L$1, *(double*)((uint8*)R$1 + 24ll) / L$1, *(double*)((uint8*)R$1 + 32ll) / L$1 );
 goto label$1708;
 label$1708:;
 return tmp$1493$1;
}

struct $7VECTOR3* _ZplR7VECTOR3S0_( struct $7VECTOR3* tmp$1495$1, struct $7VECTOR3* L$1, struct $7VECTOR3* R$1 )
{
 label$1709:;
 _ZN7VECTOR3C1Eddd( tmp$1495$1, *(double*)((uint8*)L$1 + 16ll) + *(double*)((uint8*)R$1 + 16ll), *(double*)((uint8*)L$1 + 24ll) + *(double*)((uint8*)R$1 + 24ll), *(double*)((uint8*)L$1 + 32ll) + *(double*)((uint8*)R$1 + 32ll) );
 goto label$1710;
 label$1710:;
 return tmp$1495$1;
}

struct $7VECTOR3* _ZmiR7VECTOR3S0_( struct $7VECTOR3* tmp$1497$1, struct $7VECTOR3* L$1, struct $7VECTOR3* R$1 )
{
 label$1711:;
 _ZN7VECTOR3C1Eddd( tmp$1497$1, *(double*)((uint8*)L$1 + 16ll) - *(double*)((uint8*)R$1 + 16ll), *(double*)((uint8*)L$1 + 24ll) - *(double*)((uint8*)R$1 + 24ll), *(double*)((uint8*)L$1 + 32ll) - *(double*)((uint8*)R$1 + 32ll) );
 goto label$1712;
 label$1712:;
 return tmp$1497$1;
}

struct $7VECTOR3* _ZmlR7VECTOR3S0_( struct $7VECTOR3* tmp$1499$1, struct $7VECTOR3* L$1, struct $7VECTOR3* R$1 )
{
 label$1713:;
 _ZN7VECTOR3C1Eddd( tmp$1499$1, *(double*)((uint8*)L$1 + 16ll) * *(double*)((uint8*)R$1 + 16ll), *(double*)((uint8*)L$1 + 24ll) * *(double*)((uint8*)R$1 + 24ll), *(double*)((uint8*)L$1 + 32ll) * *(double*)((uint8*)R$1 + 32ll) );
 goto label$1714;
 label$1714:;
 return tmp$1499$1;
}

struct $7VECTOR3* _ZdvR7VECTOR3S0_( struct $7VECTOR3* tmp$1501$1, struct $7VECTOR3* L$1, struct $7VECTOR3* R$1 )
{
 label$1715:;
 _ZN7VECTOR3C1Eddd( tmp$1501$1, *(double*)((uint8*)L$1 + 16ll) / *(double*)((uint8*)R$1 + 16ll), *(double*)((uint8*)L$1 + 24ll) / *(double*)((uint8*)R$1 + 24ll), *(double*)((uint8*)L$1 + 32ll) / *(double*)((uint8*)R$1 + 32ll) );
 goto label$1716;
 label$1716:;
 return tmp$1501$1;
}

int64 _ZeqR7VECTOR3S0_( struct $7VECTOR3* L$1, struct $7VECTOR3* R$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1717:;
 if( (((((int64)__builtin_nearbyint( *(double*)((uint8*)L$1 + 16ll) )) ^ ((int64)__builtin_nearbyint( *(double*)((uint8*)R$1 + 16ll) ))) | (((int64)__builtin_nearbyint( *(double*)((uint8*)L$1 + 24ll) )) ^ ((int64)__builtin_nearbyint( *(double*)((uint8*)R$1 + 24ll) )))) | (((int64)__builtin_nearbyint( *(double*)((uint8*)L$1 + 32ll) )) ^ ((int64)__builtin_nearbyint( *(double*)((uint8*)R$1 + 32ll) )))) == 0ll ) goto label$1720;
 {
  fb$result$1 = 0ll;
  goto label$1718;
  label$1720:;
 }
 fb$result$1 = -1ll;
 goto label$1718;
 label$1718:;
 return fb$result$1;
}

int64 _ZneR7VECTOR3S0_( struct $7VECTOR3* L$1, struct $7VECTOR3* R$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1721:;
 if( (((((int64)__builtin_nearbyint( *(double*)((uint8*)L$1 + 16ll) )) ^ ((int64)__builtin_nearbyint( *(double*)((uint8*)R$1 + 16ll) ))) | (((int64)__builtin_nearbyint( *(double*)((uint8*)L$1 + 24ll) )) ^ ((int64)__builtin_nearbyint( *(double*)((uint8*)R$1 + 24ll) )))) | (((int64)__builtin_nearbyint( *(double*)((uint8*)L$1 + 32ll) )) ^ ((int64)__builtin_nearbyint( *(double*)((uint8*)R$1 + 32ll) )))) == 0ll ) goto label$1724;
 {
  fb$result$1 = -1ll;
  goto label$1722;
  label$1724:;
 }
 fb$result$1 = 0ll;
 goto label$1722;
 label$1722:;
 return fb$result$1;
}

void _ZN7VECTOR4C1Ev( struct $7VECTOR4* THIS$1 )
{
 label$1729:;
 _ZN7VECTOR3C1Ev( (struct $7VECTOR3*)THIS$1 );
 __builtin_memset( (double*)((uint8*)THIS$1 + 40ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 48ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 56ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 64ll), 0, 8ll );
 *(double*)((uint8*)THIS$1 + 64ll) = 0x1.p+0;
 label$1730:;
}

void _ZN7VECTOR4C1Edd( struct $7VECTOR4* THIS$1, double PXYZ$1, double PW$1 )
{
 label$1731:;
 _ZN7VECTOR3C1Ev( (struct $7VECTOR3*)THIS$1 );
 __builtin_memset( (double*)((uint8*)THIS$1 + 40ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 48ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 56ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 64ll), 0, 8ll );
 *(double*)((uint8*)THIS$1 + 40ll) = PXYZ$1;
 *(double*)((uint8*)THIS$1 + 48ll) = PXYZ$1;
 *(double*)((uint8*)THIS$1 + 56ll) = PXYZ$1;
 *(double*)((uint8*)THIS$1 + 64ll) = PW$1;
 label$1732:;
}

void _ZN7VECTOR4C1Edddd( struct $7VECTOR4* THIS$1, double PX$1, double PY$1, double PZ$1, double PW$1 )
{
 label$1733:;
 _ZN7VECTOR3C1Ev( (struct $7VECTOR3*)THIS$1 );
 __builtin_memset( (double*)((uint8*)THIS$1 + 40ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 48ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 56ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 64ll), 0, 8ll );
 *(double*)((uint8*)THIS$1 + 40ll) = PX$1;
 *(double*)((uint8*)THIS$1 + 48ll) = PY$1;
 *(double*)((uint8*)THIS$1 + 56ll) = PZ$1;
 *(double*)((uint8*)THIS$1 + 64ll) = PW$1;
 label$1734:;
}

void _ZN7VECTOR4C1ER7VECTOR2dd( struct $7VECTOR4* THIS$1, struct $7VECTOR2* V1$1, double PZ$1, double PW$1 )
{
 label$1735:;
 _ZN7VECTOR3C1Ev( (struct $7VECTOR3*)THIS$1 );
 __builtin_memset( (double*)((uint8*)THIS$1 + 40ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 48ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 56ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 64ll), 0, 8ll );
 *(double*)((uint8*)THIS$1 + 40ll) = *(double*)V1$1;
 *(double*)((uint8*)THIS$1 + 48ll) = *(double*)((uint8*)V1$1 + 8ll);
 *(double*)((uint8*)THIS$1 + 56ll) = PZ$1;
 *(double*)((uint8*)THIS$1 + 64ll) = PW$1;
 label$1736:;
}

void _ZN7VECTOR4C1ER7VECTOR2S1_( struct $7VECTOR4* THIS$1, struct $7VECTOR2* V1$1, struct $7VECTOR2* V2$1 )
{
 label$1737:;
 _ZN7VECTOR3C1Ev( (struct $7VECTOR3*)THIS$1 );
 __builtin_memset( (double*)((uint8*)THIS$1 + 40ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 48ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 56ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 64ll), 0, 8ll );
 *(double*)((uint8*)THIS$1 + 40ll) = *(double*)V1$1;
 *(double*)((uint8*)THIS$1 + 48ll) = *(double*)((uint8*)V1$1 + 8ll);
 *(double*)((uint8*)THIS$1 + 56ll) = *(double*)V2$1;
 *(double*)((uint8*)THIS$1 + 64ll) = *(double*)((uint8*)V2$1 + 8ll);
 label$1738:;
}

void _ZN7VECTOR4C1ER7VECTOR3d( struct $7VECTOR4* THIS$1, struct $7VECTOR3* V3$1, double PW$1 )
{
 label$1739:;
 _ZN7VECTOR3C1Ev( (struct $7VECTOR3*)THIS$1 );
 __builtin_memset( (double*)((uint8*)THIS$1 + 40ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 48ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 56ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 64ll), 0, 8ll );
 *(double*)((uint8*)THIS$1 + 40ll) = *(double*)((uint8*)V3$1 + 16ll);
 *(double*)((uint8*)THIS$1 + 48ll) = *(double*)((uint8*)V3$1 + 24ll);
 *(double*)((uint8*)THIS$1 + 56ll) = *(double*)((uint8*)V3$1 + 32ll);
 *(double*)((uint8*)THIS$1 + 64ll) = PW$1;
 label$1740:;
}

void _ZN7VECTOR4C1EdR7VECTOR3( struct $7VECTOR4* THIS$1, double PX$1, struct $7VECTOR3* V3$1 )
{
 label$1741:;
 _ZN7VECTOR3C1Ev( (struct $7VECTOR3*)THIS$1 );
 __builtin_memset( (double*)((uint8*)THIS$1 + 40ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 48ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 56ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 64ll), 0, 8ll );
 *(double*)((uint8*)THIS$1 + 40ll) = PX$1;
 *(double*)((uint8*)THIS$1 + 48ll) = *(double*)((uint8*)V3$1 + 16ll);
 *(double*)((uint8*)THIS$1 + 56ll) = *(double*)((uint8*)V3$1 + 24ll);
 *(double*)((uint8*)THIS$1 + 64ll) = *(double*)((uint8*)V3$1 + 32ll);
 label$1742:;
}

void _ZN7VECTOR4C1ERS_( struct $7VECTOR4* THIS$1, struct $7VECTOR4* V4$1 )
{
 label$1743:;
 _ZN7VECTOR3C1Ev( (struct $7VECTOR3*)THIS$1 );
 __builtin_memset( (double*)((uint8*)THIS$1 + 40ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 48ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 56ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 64ll), 0, 8ll );
 *(double*)((uint8*)THIS$1 + 40ll) = *(double*)((uint8*)V4$1 + 40ll);
 *(double*)((uint8*)THIS$1 + 48ll) = *(double*)((uint8*)V4$1 + 48ll);
 *(double*)((uint8*)THIS$1 + 56ll) = *(double*)((uint8*)V4$1 + 56ll);
 *(double*)((uint8*)THIS$1 + 64ll) = *(double*)((uint8*)V4$1 + 64ll);
 label$1744:;
}

void _ZN7VECTOR4aSEd( struct $7VECTOR4* THIS$1, double PXYZW$1 )
{
 label$1745:;
 *(double*)((uint8*)THIS$1 + 40ll) = PXYZW$1;
 *(double*)((uint8*)THIS$1 + 48ll) = PXYZW$1;
 *(double*)((uint8*)THIS$1 + 56ll) = PXYZW$1;
 *(double*)((uint8*)THIS$1 + 64ll) = PXYZW$1;
 label$1746:;
}

void _ZN7VECTOR4aSER7VECTOR2( struct $7VECTOR4* THIS$1, struct $7VECTOR2* P$1 )
{
 label$1747:;
 *(double*)((uint8*)THIS$1 + 40ll) = *(double*)P$1;
 *(double*)((uint8*)THIS$1 + 48ll) = *(double*)((uint8*)P$1 + 8ll);
 *(double*)((uint8*)THIS$1 + 56ll) = 0x1.p+0;
 *(double*)((uint8*)THIS$1 + 64ll) = 0x1.p+0;
 label$1748:;
}

void _ZN7VECTOR4aSER7VECTOR3( struct $7VECTOR4* THIS$1, struct $7VECTOR3* P$1 )
{
 label$1749:;
 *(double*)((uint8*)THIS$1 + 40ll) = *(double*)((uint8*)P$1 + 16ll);
 *(double*)((uint8*)THIS$1 + 48ll) = *(double*)((uint8*)P$1 + 24ll);
 *(double*)((uint8*)THIS$1 + 56ll) = *(double*)((uint8*)P$1 + 32ll);
 *(double*)((uint8*)THIS$1 + 64ll) = 0x1.p+0;
 label$1750:;
}

void _ZN7VECTOR4aSERS_( struct $7VECTOR4* THIS$1, struct $7VECTOR4* P$1 )
{
 label$1751:;
 *(double*)((uint8*)THIS$1 + 40ll) = *(double*)((uint8*)P$1 + 40ll);
 *(double*)((uint8*)THIS$1 + 48ll) = *(double*)((uint8*)P$1 + 48ll);
 *(double*)((uint8*)THIS$1 + 56ll) = *(double*)((uint8*)P$1 + 56ll);
 *(double*)((uint8*)THIS$1 + 64ll) = *(double*)((uint8*)P$1 + 64ll);
 label$1752:;
}

FBSTRING* _ZN7VECTOR4cv8FBSTRINGEv( struct $7VECTOR4* THIS$1 )
{
 FBSTRING TMP$1507$1;
 FBSTRING TMP$1508$1;
 FBSTRING TMP$1509$1;
 FBSTRING TMP$1510$1;
 FBSTRING TMP$1511$1;
 FBSTRING TMP$1512$1;
 FBSTRING TMP$1513$1;
 FBSTRING TMP$1514$1;
 FBSTRING fb$result$1;
 __builtin_memset( &fb$result$1, 0, 24ll );
 label$1753:;
 FBSTRING* vr$2 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 64ll) );
 FBSTRING* vr$4 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 56ll) );
 FBSTRING* vr$6 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 48ll) );
 FBSTRING* vr$8 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 40ll) );
 __builtin_memset( &TMP$1507$1, 0, 24ll );
 FBSTRING* vr$11 = fb_StrConcat( &TMP$1507$1, (void*)"(", 2ll, (void*)vr$8, -1ll );
 __builtin_memset( &TMP$1508$1, 0, 24ll );
 FBSTRING* vr$14 = fb_StrConcat( &TMP$1508$1, (void*)vr$11, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1509$1, 0, 24ll );
 FBSTRING* vr$17 = fb_StrConcat( &TMP$1509$1, (void*)vr$14, -1ll, (void*)vr$6, -1ll );
 __builtin_memset( &TMP$1510$1, 0, 24ll );
 FBSTRING* vr$20 = fb_StrConcat( &TMP$1510$1, (void*)vr$17, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1511$1, 0, 24ll );
 FBSTRING* vr$23 = fb_StrConcat( &TMP$1511$1, (void*)vr$20, -1ll, (void*)vr$4, -1ll );
 __builtin_memset( &TMP$1512$1, 0, 24ll );
 FBSTRING* vr$26 = fb_StrConcat( &TMP$1512$1, (void*)vr$23, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1513$1, 0, 24ll );
 FBSTRING* vr$29 = fb_StrConcat( &TMP$1513$1, (void*)vr$26, -1ll, (void*)vr$2, -1ll );
 __builtin_memset( &TMP$1514$1, 0, 24ll );
 FBSTRING* vr$32 = fb_StrConcat( &TMP$1514$1, (void*)vr$29, -1ll, (void*)")", 2ll );
 fb_StrInit( (void*)&fb$result$1, -1ll, (void*)vr$32, -1ll, 0 );
 goto label$1754;
 label$1754:;
 FBSTRING* vr$35 = fb_StrAllocTempResult( (FBSTRING*)&fb$result$1 );
 return vr$35;
}

uint64 _ZN7VECTOR4cvyEv( struct $7VECTOR4* THIS$1 )
{
 uint64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1755:;
 uint64 C$1;
 __builtin_memset( &C$1, 0, 8ll );
 C$1 = C$1 << (8ll & 63ll);
 if( *(double*)((uint8*)THIS$1 + 64ll) >= 0x1.010101010101p-8 ) goto label$1758;
 {
 }
 goto label$1757;
 label$1758:;
 if( *(double*)((uint8*)THIS$1 + 64ll) <= 0x1.p+0 ) goto label$1759;
 {
  C$1 = C$1 | 255ull;
 }
 goto label$1757;
 label$1759:;
 {
  C$1 = C$1 | ((uint64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 64ll) * 0x1.FEp+7 ));
 }
 label$1757:;
 C$1 = C$1 << (8ll & 63ll);
 if( *(double*)((uint8*)THIS$1 + 40ll) >= 0x1.010101010101p-8 ) goto label$1761;
 {
 }
 goto label$1760;
 label$1761:;
 if( *(double*)((uint8*)THIS$1 + 40ll) <= 0x1.p+0 ) goto label$1762;
 {
  C$1 = C$1 | 255ull;
 }
 goto label$1760;
 label$1762:;
 {
  C$1 = C$1 | ((uint64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 40ll) * 0x1.FEp+7 ));
 }
 label$1760:;
 C$1 = C$1 << (8ll & 63ll);
 if( *(double*)((uint8*)THIS$1 + 48ll) >= 0x1.010101010101p-8 ) goto label$1764;
 {
 }
 goto label$1763;
 label$1764:;
 if( *(double*)((uint8*)THIS$1 + 48ll) <= 0x1.p+0 ) goto label$1765;
 {
  C$1 = C$1 | 255ull;
 }
 goto label$1763;
 label$1765:;
 {
  C$1 = C$1 | ((uint64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 48ll) * 0x1.FEp+7 ));
 }
 label$1763:;
 C$1 = C$1 << (8ll & 63ll);
 if( *(double*)((uint8*)THIS$1 + 56ll) >= 0x1.010101010101p-8 ) goto label$1767;
 {
 }
 goto label$1766;
 label$1767:;
 if( *(double*)((uint8*)THIS$1 + 56ll) <= 0x1.p+0 ) goto label$1768;
 {
  C$1 = C$1 | 255ull;
 }
 goto label$1766;
 label$1768:;
 {
  C$1 = C$1 | ((uint64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 56ll) * 0x1.FEp+7 ));
 }
 label$1766:;
 fb$result$1 = C$1;
 goto label$1756;
 label$1756:;
 return fb$result$1;
}

void _ZN7VECTOR4pLEd( struct $7VECTOR4* THIS$1, double V$1 )
{
 label$1769:;
 *(double*)((uint8*)THIS$1 + 40ll) = *(double*)((uint8*)THIS$1 + 40ll) + V$1;
 *(double*)((uint8*)THIS$1 + 48ll) = *(double*)((uint8*)THIS$1 + 48ll) + V$1;
 *(double*)((uint8*)THIS$1 + 56ll) = *(double*)((uint8*)THIS$1 + 56ll) + V$1;
 *(double*)((uint8*)THIS$1 + 64ll) = *(double*)((uint8*)THIS$1 + 64ll) + V$1;
 label$1770:;
}

void _ZN7VECTOR4mIEd( struct $7VECTOR4* THIS$1, double V$1 )
{
 label$1771:;
 *(double*)((uint8*)THIS$1 + 40ll) = *(double*)((uint8*)THIS$1 + 40ll) - V$1;
 *(double*)((uint8*)THIS$1 + 48ll) = *(double*)((uint8*)THIS$1 + 48ll) - V$1;
 *(double*)((uint8*)THIS$1 + 56ll) = *(double*)((uint8*)THIS$1 + 56ll) - V$1;
 *(double*)((uint8*)THIS$1 + 64ll) = *(double*)((uint8*)THIS$1 + 64ll) - V$1;
 label$1772:;
}

void _ZN7VECTOR4mLEd( struct $7VECTOR4* THIS$1, double V$1 )
{
 label$1773:;
 *(double*)((uint8*)THIS$1 + 40ll) = *(double*)((uint8*)THIS$1 + 40ll) * V$1;
 *(double*)((uint8*)THIS$1 + 48ll) = *(double*)((uint8*)THIS$1 + 48ll) * V$1;
 *(double*)((uint8*)THIS$1 + 56ll) = *(double*)((uint8*)THIS$1 + 56ll) * V$1;
 *(double*)((uint8*)THIS$1 + 64ll) = *(double*)((uint8*)THIS$1 + 64ll) * V$1;
 label$1774:;
}

void _ZN7VECTOR4dVEd( struct $7VECTOR4* THIS$1, double V$1 )
{
 label$1775:;
 *(double*)((uint8*)THIS$1 + 40ll) = *(double*)((uint8*)THIS$1 + 40ll) / V$1;
 *(double*)((uint8*)THIS$1 + 48ll) = *(double*)((uint8*)THIS$1 + 48ll) / V$1;
 *(double*)((uint8*)THIS$1 + 56ll) = *(double*)((uint8*)THIS$1 + 56ll) / V$1;
 *(double*)((uint8*)THIS$1 + 64ll) = *(double*)((uint8*)THIS$1 + 64ll) / V$1;
 label$1776:;
}

void _ZN7VECTOR4pLER7VECTOR3( struct $7VECTOR4* THIS$1, struct $7VECTOR3* V3$1 )
{
 label$1777:;
 *(double*)((uint8*)THIS$1 + 40ll) = *(double*)((uint8*)THIS$1 + 40ll) + *(double*)((uint8*)V3$1 + 16ll);
 *(double*)((uint8*)THIS$1 + 48ll) = *(double*)((uint8*)THIS$1 + 48ll) + *(double*)((uint8*)V3$1 + 24ll);
 *(double*)((uint8*)THIS$1 + 56ll) = *(double*)((uint8*)THIS$1 + 56ll) + *(double*)((uint8*)V3$1 + 32ll);
 label$1778:;
}

void _ZN7VECTOR4mIER7VECTOR3( struct $7VECTOR4* THIS$1, struct $7VECTOR3* V3$1 )
{
 label$1779:;
 *(double*)((uint8*)THIS$1 + 40ll) = *(double*)((uint8*)THIS$1 + 40ll) - *(double*)((uint8*)V3$1 + 16ll);
 *(double*)((uint8*)THIS$1 + 48ll) = *(double*)((uint8*)THIS$1 + 48ll) - *(double*)((uint8*)V3$1 + 24ll);
 *(double*)((uint8*)THIS$1 + 56ll) = *(double*)((uint8*)THIS$1 + 56ll) - *(double*)((uint8*)V3$1 + 32ll);
 label$1780:;
}

void _ZN7VECTOR4mLER7VECTOR3( struct $7VECTOR4* THIS$1, struct $7VECTOR3* V3$1 )
{
 label$1781:;
 *(double*)((uint8*)THIS$1 + 40ll) = *(double*)((uint8*)THIS$1 + 40ll) * *(double*)((uint8*)V3$1 + 16ll);
 *(double*)((uint8*)THIS$1 + 48ll) = *(double*)((uint8*)THIS$1 + 48ll) * *(double*)((uint8*)V3$1 + 24ll);
 *(double*)((uint8*)THIS$1 + 56ll) = *(double*)((uint8*)THIS$1 + 56ll) * *(double*)((uint8*)V3$1 + 32ll);
 label$1782:;
}

void _ZN7VECTOR4dVER7VECTOR3( struct $7VECTOR4* THIS$1, struct $7VECTOR3* V3$1 )
{
 label$1783:;
 *(double*)((uint8*)THIS$1 + 40ll) = *(double*)((uint8*)THIS$1 + 40ll) / *(double*)((uint8*)V3$1 + 16ll);
 *(double*)((uint8*)THIS$1 + 48ll) = *(double*)((uint8*)THIS$1 + 48ll) / *(double*)((uint8*)V3$1 + 24ll);
 *(double*)((uint8*)THIS$1 + 56ll) = *(double*)((uint8*)THIS$1 + 56ll) / *(double*)((uint8*)V3$1 + 32ll);
 label$1784:;
}

void _ZN7VECTOR4pLERS_( struct $7VECTOR4* THIS$1, struct $7VECTOR4* V4$1 )
{
 label$1785:;
 *(double*)((uint8*)THIS$1 + 40ll) = *(double*)((uint8*)THIS$1 + 40ll) + *(double*)((uint8*)V4$1 + 40ll);
 *(double*)((uint8*)THIS$1 + 48ll) = *(double*)((uint8*)THIS$1 + 48ll) + *(double*)((uint8*)V4$1 + 48ll);
 *(double*)((uint8*)THIS$1 + 56ll) = *(double*)((uint8*)THIS$1 + 56ll) + *(double*)((uint8*)V4$1 + 56ll);
 *(double*)((uint8*)THIS$1 + 64ll) = *(double*)((uint8*)THIS$1 + 64ll) + *(double*)((uint8*)V4$1 + 64ll);
 label$1786:;
}

void _ZN7VECTOR4mIERS_( struct $7VECTOR4* THIS$1, struct $7VECTOR4* V4$1 )
{
 label$1787:;
 *(double*)((uint8*)THIS$1 + 40ll) = *(double*)((uint8*)THIS$1 + 40ll) - *(double*)((uint8*)V4$1 + 40ll);
 *(double*)((uint8*)THIS$1 + 48ll) = *(double*)((uint8*)THIS$1 + 48ll) - *(double*)((uint8*)V4$1 + 48ll);
 *(double*)((uint8*)THIS$1 + 56ll) = *(double*)((uint8*)THIS$1 + 56ll) - *(double*)((uint8*)V4$1 + 56ll);
 *(double*)((uint8*)THIS$1 + 64ll) = *(double*)((uint8*)THIS$1 + 64ll) - *(double*)((uint8*)V4$1 + 64ll);
 label$1788:;
}

void _ZN7VECTOR4mLERS_( struct $7VECTOR4* THIS$1, struct $7VECTOR4* V4$1 )
{
 label$1789:;
 *(double*)((uint8*)THIS$1 + 40ll) = *(double*)((uint8*)THIS$1 + 40ll) * *(double*)((uint8*)V4$1 + 40ll);
 *(double*)((uint8*)THIS$1 + 48ll) = *(double*)((uint8*)THIS$1 + 48ll) * *(double*)((uint8*)V4$1 + 48ll);
 *(double*)((uint8*)THIS$1 + 56ll) = *(double*)((uint8*)THIS$1 + 56ll) * *(double*)((uint8*)V4$1 + 56ll);
 *(double*)((uint8*)THIS$1 + 64ll) = *(double*)((uint8*)THIS$1 + 64ll) * *(double*)((uint8*)V4$1 + 64ll);
 label$1790:;
}

void _ZN7VECTOR4dVERS_( struct $7VECTOR4* THIS$1, struct $7VECTOR4* V4$1 )
{
 label$1791:;
 *(double*)((uint8*)THIS$1 + 40ll) = *(double*)((uint8*)THIS$1 + 40ll) / *(double*)((uint8*)V4$1 + 40ll);
 *(double*)((uint8*)THIS$1 + 48ll) = *(double*)((uint8*)THIS$1 + 48ll) / *(double*)((uint8*)V4$1 + 48ll);
 *(double*)((uint8*)THIS$1 + 56ll) = *(double*)((uint8*)THIS$1 + 56ll) / *(double*)((uint8*)V4$1 + 56ll);
 *(double*)((uint8*)THIS$1 + 64ll) = *(double*)((uint8*)THIS$1 + 64ll) / *(double*)((uint8*)V4$1 + 64ll);
 label$1792:;
}

struct $7VECTOR2* _ZN7VECTOR42XXEv( struct $7VECTOR2* tmp$1515$1, struct $7VECTOR4* THIS$1 )
{
 label$1793:;
 _ZN7VECTOR2C1Edd( tmp$1515$1, *(double*)((uint8*)THIS$1 + 40ll), *(double*)((uint8*)THIS$1 + 40ll) );
 goto label$1794;
 label$1794:;
 return tmp$1515$1;
}

struct $7VECTOR2* _ZN7VECTOR42XYEv( struct $7VECTOR2* tmp$1517$1, struct $7VECTOR4* THIS$1 )
{
 label$1795:;
 _ZN7VECTOR2C1Edd( tmp$1517$1, *(double*)((uint8*)THIS$1 + 40ll), *(double*)((uint8*)THIS$1 + 48ll) );
 goto label$1796;
 label$1796:;
 return tmp$1517$1;
}

struct $7VECTOR2* _ZN7VECTOR42XZEv( struct $7VECTOR2* tmp$1519$1, struct $7VECTOR4* THIS$1 )
{
 label$1797:;
 _ZN7VECTOR2C1Edd( tmp$1519$1, *(double*)((uint8*)THIS$1 + 48ll), *(double*)((uint8*)THIS$1 + 56ll) );
 goto label$1798;
 label$1798:;
 return tmp$1519$1;
}

struct $7VECTOR2* _ZN7VECTOR42YXEv( struct $7VECTOR2* tmp$1521$1, struct $7VECTOR4* THIS$1 )
{
 label$1799:;
 _ZN7VECTOR2C1Edd( tmp$1521$1, *(double*)((uint8*)THIS$1 + 48ll), *(double*)((uint8*)THIS$1 + 40ll) );
 goto label$1800;
 label$1800:;
 return tmp$1521$1;
}

struct $7VECTOR2* _ZN7VECTOR42YYEv( struct $7VECTOR2* tmp$1523$1, struct $7VECTOR4* THIS$1 )
{
 label$1801:;
 _ZN7VECTOR2C1Edd( tmp$1523$1, *(double*)((uint8*)THIS$1 + 48ll), *(double*)((uint8*)THIS$1 + 48ll) );
 goto label$1802;
 label$1802:;
 return tmp$1523$1;
}

struct $7VECTOR2* _ZN7VECTOR42YZEv( struct $7VECTOR2* tmp$1525$1, struct $7VECTOR4* THIS$1 )
{
 label$1803:;
 _ZN7VECTOR2C1Edd( tmp$1525$1, *(double*)((uint8*)THIS$1 + 48ll), *(double*)((uint8*)THIS$1 + 56ll) );
 goto label$1804;
 label$1804:;
 return tmp$1525$1;
}

struct $7VECTOR2* _ZN7VECTOR42ZXEv( struct $7VECTOR2* tmp$1527$1, struct $7VECTOR4* THIS$1 )
{
 label$1805:;
 _ZN7VECTOR2C1Edd( tmp$1527$1, *(double*)((uint8*)THIS$1 + 56ll), *(double*)((uint8*)THIS$1 + 40ll) );
 goto label$1806;
 label$1806:;
 return tmp$1527$1;
}

struct $7VECTOR2* _ZN7VECTOR42ZYEv( struct $7VECTOR2* tmp$1529$1, struct $7VECTOR4* THIS$1 )
{
 label$1807:;
 _ZN7VECTOR2C1Edd( tmp$1529$1, *(double*)((uint8*)THIS$1 + 56ll), *(double*)((uint8*)THIS$1 + 48ll) );
 goto label$1808;
 label$1808:;
 return tmp$1529$1;
}

struct $7VECTOR2* _ZN7VECTOR42ZZEv( struct $7VECTOR2* tmp$1531$1, struct $7VECTOR4* THIS$1 )
{
 label$1809:;
 _ZN7VECTOR2C1Edd( tmp$1531$1, *(double*)((uint8*)THIS$1 + 56ll), *(double*)((uint8*)THIS$1 + 56ll) );
 goto label$1810;
 label$1810:;
 return tmp$1531$1;
}

struct $7VECTOR3* _ZN7VECTOR43XXXEv( struct $7VECTOR3* tmp$1533$1, struct $7VECTOR4* THIS$1 )
{
 label$1811:;
 _ZN7VECTOR3C1Eddd( tmp$1533$1, *(double*)((uint8*)THIS$1 + 40ll), *(double*)((uint8*)THIS$1 + 40ll), *(double*)((uint8*)THIS$1 + 40ll) );
 goto label$1812;
 label$1812:;
 return tmp$1533$1;
}

struct $7VECTOR3* _ZN7VECTOR43XXYEv( struct $7VECTOR3* tmp$1535$1, struct $7VECTOR4* THIS$1 )
{
 label$1813:;
 _ZN7VECTOR3C1Eddd( tmp$1535$1, *(double*)((uint8*)THIS$1 + 40ll), *(double*)((uint8*)THIS$1 + 40ll), *(double*)((uint8*)THIS$1 + 48ll) );
 goto label$1814;
 label$1814:;
 return tmp$1535$1;
}

struct $7VECTOR3* _ZN7VECTOR43XXZEv( struct $7VECTOR3* tmp$1537$1, struct $7VECTOR4* THIS$1 )
{
 label$1815:;
 _ZN7VECTOR3C1Eddd( tmp$1537$1, *(double*)((uint8*)THIS$1 + 40ll), *(double*)((uint8*)THIS$1 + 40ll), *(double*)((uint8*)THIS$1 + 56ll) );
 goto label$1816;
 label$1816:;
 return tmp$1537$1;
}

struct $7VECTOR3* _ZN7VECTOR43XYXEv( struct $7VECTOR3* tmp$1539$1, struct $7VECTOR4* THIS$1 )
{
 label$1817:;
 _ZN7VECTOR3C1Eddd( tmp$1539$1, *(double*)((uint8*)THIS$1 + 40ll), *(double*)((uint8*)THIS$1 + 48ll), *(double*)((uint8*)THIS$1 + 40ll) );
 goto label$1818;
 label$1818:;
 return tmp$1539$1;
}

struct $7VECTOR3* _ZN7VECTOR43XYYEv( struct $7VECTOR3* tmp$1541$1, struct $7VECTOR4* THIS$1 )
{
 label$1819:;
 _ZN7VECTOR3C1Eddd( tmp$1541$1, *(double*)((uint8*)THIS$1 + 40ll), *(double*)((uint8*)THIS$1 + 48ll), *(double*)((uint8*)THIS$1 + 48ll) );
 goto label$1820;
 label$1820:;
 return tmp$1541$1;
}

struct $7VECTOR3* _ZN7VECTOR43XYZEv( struct $7VECTOR3* tmp$1543$1, struct $7VECTOR4* THIS$1 )
{
 label$1821:;
 _ZN7VECTOR3C1Eddd( tmp$1543$1, *(double*)((uint8*)THIS$1 + 40ll), *(double*)((uint8*)THIS$1 + 48ll), *(double*)((uint8*)THIS$1 + 56ll) );
 goto label$1822;
 label$1822:;
 return tmp$1543$1;
}

struct $7VECTOR3* _ZN7VECTOR43XZXEv( struct $7VECTOR3* tmp$1545$1, struct $7VECTOR4* THIS$1 )
{
 label$1823:;
 _ZN7VECTOR3C1Eddd( tmp$1545$1, *(double*)((uint8*)THIS$1 + 40ll), *(double*)((uint8*)THIS$1 + 56ll), *(double*)((uint8*)THIS$1 + 40ll) );
 goto label$1824;
 label$1824:;
 return tmp$1545$1;
}

struct $7VECTOR3* _ZN7VECTOR43XZYEv( struct $7VECTOR3* tmp$1547$1, struct $7VECTOR4* THIS$1 )
{
 label$1825:;
 _ZN7VECTOR3C1Eddd( tmp$1547$1, *(double*)((uint8*)THIS$1 + 40ll), *(double*)((uint8*)THIS$1 + 56ll), *(double*)((uint8*)THIS$1 + 48ll) );
 goto label$1826;
 label$1826:;
 return tmp$1547$1;
}

struct $7VECTOR3* _ZN7VECTOR43XZZEv( struct $7VECTOR3* tmp$1549$1, struct $7VECTOR4* THIS$1 )
{
 label$1827:;
 _ZN7VECTOR3C1Eddd( tmp$1549$1, *(double*)((uint8*)THIS$1 + 40ll), *(double*)((uint8*)THIS$1 + 56ll), *(double*)((uint8*)THIS$1 + 56ll) );
 goto label$1828;
 label$1828:;
 return tmp$1549$1;
}

struct $7VECTOR3* _ZN7VECTOR43YXXEv( struct $7VECTOR3* tmp$1551$1, struct $7VECTOR4* THIS$1 )
{
 label$1829:;
 _ZN7VECTOR3C1Eddd( tmp$1551$1, *(double*)((uint8*)THIS$1 + 48ll), *(double*)((uint8*)THIS$1 + 40ll), *(double*)((uint8*)THIS$1 + 40ll) );
 goto label$1830;
 label$1830:;
 return tmp$1551$1;
}

struct $7VECTOR3* _ZN7VECTOR43YXYEv( struct $7VECTOR3* tmp$1553$1, struct $7VECTOR4* THIS$1 )
{
 label$1831:;
 _ZN7VECTOR3C1Eddd( tmp$1553$1, *(double*)((uint8*)THIS$1 + 48ll), *(double*)((uint8*)THIS$1 + 40ll), *(double*)((uint8*)THIS$1 + 48ll) );
 goto label$1832;
 label$1832:;
 return tmp$1553$1;
}

struct $7VECTOR3* _ZN7VECTOR43YXZEv( struct $7VECTOR3* tmp$1555$1, struct $7VECTOR4* THIS$1 )
{
 label$1833:;
 _ZN7VECTOR3C1Eddd( tmp$1555$1, *(double*)((uint8*)THIS$1 + 48ll), *(double*)((uint8*)THIS$1 + 40ll), *(double*)((uint8*)THIS$1 + 56ll) );
 goto label$1834;
 label$1834:;
 return tmp$1555$1;
}

struct $7VECTOR3* _ZN7VECTOR43YYXEv( struct $7VECTOR3* tmp$1557$1, struct $7VECTOR4* THIS$1 )
{
 label$1835:;
 _ZN7VECTOR3C1Eddd( tmp$1557$1, *(double*)((uint8*)THIS$1 + 48ll), *(double*)((uint8*)THIS$1 + 48ll), *(double*)((uint8*)THIS$1 + 40ll) );
 goto label$1836;
 label$1836:;
 return tmp$1557$1;
}

struct $7VECTOR3* _ZN7VECTOR43YYYEv( struct $7VECTOR3* tmp$1559$1, struct $7VECTOR4* THIS$1 )
{
 label$1837:;
 _ZN7VECTOR3C1Eddd( tmp$1559$1, *(double*)((uint8*)THIS$1 + 48ll), *(double*)((uint8*)THIS$1 + 48ll), *(double*)((uint8*)THIS$1 + 48ll) );
 goto label$1838;
 label$1838:;
 return tmp$1559$1;
}

struct $7VECTOR3* _ZN7VECTOR43YYZEv( struct $7VECTOR3* tmp$1561$1, struct $7VECTOR4* THIS$1 )
{
 label$1839:;
 _ZN7VECTOR3C1Eddd( tmp$1561$1, *(double*)((uint8*)THIS$1 + 48ll), *(double*)((uint8*)THIS$1 + 48ll), *(double*)((uint8*)THIS$1 + 56ll) );
 goto label$1840;
 label$1840:;
 return tmp$1561$1;
}

struct $7VECTOR3* _ZN7VECTOR43YZXEv( struct $7VECTOR3* tmp$1563$1, struct $7VECTOR4* THIS$1 )
{
 label$1841:;
 _ZN7VECTOR3C1Eddd( tmp$1563$1, *(double*)((uint8*)THIS$1 + 48ll), *(double*)((uint8*)THIS$1 + 56ll), *(double*)((uint8*)THIS$1 + 40ll) );
 goto label$1842;
 label$1842:;
 return tmp$1563$1;
}

struct $7VECTOR3* _ZN7VECTOR43YZYEv( struct $7VECTOR3* tmp$1565$1, struct $7VECTOR4* THIS$1 )
{
 label$1843:;
 _ZN7VECTOR3C1Eddd( tmp$1565$1, *(double*)((uint8*)THIS$1 + 48ll), *(double*)((uint8*)THIS$1 + 56ll), *(double*)((uint8*)THIS$1 + 48ll) );
 goto label$1844;
 label$1844:;
 return tmp$1565$1;
}

struct $7VECTOR3* _ZN7VECTOR43YZZEv( struct $7VECTOR3* tmp$1567$1, struct $7VECTOR4* THIS$1 )
{
 label$1845:;
 _ZN7VECTOR3C1Eddd( tmp$1567$1, *(double*)((uint8*)THIS$1 + 48ll), *(double*)((uint8*)THIS$1 + 56ll), *(double*)((uint8*)THIS$1 + 56ll) );
 goto label$1846;
 label$1846:;
 return tmp$1567$1;
}

struct $7VECTOR3* _ZN7VECTOR43ZXXEv( struct $7VECTOR3* tmp$1569$1, struct $7VECTOR4* THIS$1 )
{
 label$1847:;
 _ZN7VECTOR3C1Eddd( tmp$1569$1, *(double*)((uint8*)THIS$1 + 56ll), *(double*)((uint8*)THIS$1 + 40ll), *(double*)((uint8*)THIS$1 + 40ll) );
 goto label$1848;
 label$1848:;
 return tmp$1569$1;
}

struct $7VECTOR3* _ZN7VECTOR43ZXYEv( struct $7VECTOR3* tmp$1571$1, struct $7VECTOR4* THIS$1 )
{
 label$1849:;
 _ZN7VECTOR3C1Eddd( tmp$1571$1, *(double*)((uint8*)THIS$1 + 56ll), *(double*)((uint8*)THIS$1 + 40ll), *(double*)((uint8*)THIS$1 + 48ll) );
 goto label$1850;
 label$1850:;
 return tmp$1571$1;
}

struct $7VECTOR3* _ZN7VECTOR43ZXZEv( struct $7VECTOR3* tmp$1573$1, struct $7VECTOR4* THIS$1 )
{
 label$1851:;
 _ZN7VECTOR3C1Eddd( tmp$1573$1, *(double*)((uint8*)THIS$1 + 56ll), *(double*)((uint8*)THIS$1 + 40ll), *(double*)((uint8*)THIS$1 + 56ll) );
 goto label$1852;
 label$1852:;
 return tmp$1573$1;
}

struct $7VECTOR3* _ZN7VECTOR43ZYXEv( struct $7VECTOR3* tmp$1575$1, struct $7VECTOR4* THIS$1 )
{
 label$1853:;
 _ZN7VECTOR3C1Eddd( tmp$1575$1, *(double*)((uint8*)THIS$1 + 56ll), *(double*)((uint8*)THIS$1 + 48ll), *(double*)((uint8*)THIS$1 + 40ll) );
 goto label$1854;
 label$1854:;
 return tmp$1575$1;
}

struct $7VECTOR3* _ZN7VECTOR43ZYYEv( struct $7VECTOR3* tmp$1577$1, struct $7VECTOR4* THIS$1 )
{
 label$1855:;
 _ZN7VECTOR3C1Eddd( tmp$1577$1, *(double*)((uint8*)THIS$1 + 56ll), *(double*)((uint8*)THIS$1 + 48ll), *(double*)((uint8*)THIS$1 + 48ll) );
 goto label$1856;
 label$1856:;
 return tmp$1577$1;
}

struct $7VECTOR3* _ZN7VECTOR43ZYZEv( struct $7VECTOR3* tmp$1579$1, struct $7VECTOR4* THIS$1 )
{
 label$1857:;
 _ZN7VECTOR3C1Eddd( tmp$1579$1, *(double*)((uint8*)THIS$1 + 56ll), *(double*)((uint8*)THIS$1 + 48ll), *(double*)((uint8*)THIS$1 + 56ll) );
 goto label$1858;
 label$1858:;
 return tmp$1579$1;
}

struct $7VECTOR3* _ZN7VECTOR43ZZXEv( struct $7VECTOR3* tmp$1581$1, struct $7VECTOR4* THIS$1 )
{
 label$1859:;
 _ZN7VECTOR3C1Eddd( tmp$1581$1, *(double*)((uint8*)THIS$1 + 56ll), *(double*)((uint8*)THIS$1 + 56ll), *(double*)((uint8*)THIS$1 + 40ll) );
 goto label$1860;
 label$1860:;
 return tmp$1581$1;
}

struct $7VECTOR3* _ZN7VECTOR43ZZYEv( struct $7VECTOR3* tmp$1583$1, struct $7VECTOR4* THIS$1 )
{
 label$1861:;
 _ZN7VECTOR3C1Eddd( tmp$1583$1, *(double*)((uint8*)THIS$1 + 56ll), *(double*)((uint8*)THIS$1 + 56ll), *(double*)((uint8*)THIS$1 + 48ll) );
 goto label$1862;
 label$1862:;
 return tmp$1583$1;
}

struct $7VECTOR3* _ZN7VECTOR43ZZZEv( struct $7VECTOR3* tmp$1585$1, struct $7VECTOR4* THIS$1 )
{
 label$1863:;
 _ZN7VECTOR3C1Eddd( tmp$1585$1, *(double*)((uint8*)THIS$1 + 56ll), *(double*)((uint8*)THIS$1 + 56ll), *(double*)((uint8*)THIS$1 + 56ll) );
 goto label$1864;
 label$1864:;
 return tmp$1585$1;
}

struct $7VECTOR3* _ZN7VECTOR43RGBEv( struct $7VECTOR3* tmp$1587$1, struct $7VECTOR4* THIS$1 )
{
 label$1865:;
 _ZN7VECTOR3C1Eddd( tmp$1587$1, *(double*)((uint8*)THIS$1 + 40ll), *(double*)((uint8*)THIS$1 + 48ll), *(double*)((uint8*)THIS$1 + 56ll) );
 goto label$1866;
 label$1866:;
 return tmp$1587$1;
}

struct $7VECTOR4* _ZN7VECTOR44RGBAEv( struct $7VECTOR4* tmp$1589$1, struct $7VECTOR4* THIS$1 )
{
 label$1867:;
 _ZN7VECTOR4C1Edddd( tmp$1589$1, *(double*)((uint8*)THIS$1 + 40ll), *(double*)((uint8*)THIS$1 + 48ll), *(double*)((uint8*)THIS$1 + 56ll), *(double*)((uint8*)THIS$1 + 64ll) );
 goto label$1868;
 label$1868:;
 return tmp$1589$1;
}

struct $7VECTOR4* _ZngR7VECTOR4( struct $7VECTOR4* tmp$1591$1, struct $7VECTOR4* L$1 )
{
 label$1869:;
 _ZN7VECTOR4C1Edddd( tmp$1591$1, -(*(double*)((uint8*)L$1 + 40ll)), -(*(double*)((uint8*)L$1 + 48ll)), -(*(double*)((uint8*)L$1 + 56ll)), -(*(double*)((uint8*)L$1 + 64ll)) );
 goto label$1870;
 label$1870:;
 return tmp$1591$1;
}

struct $7VECTOR4* _ZplR7VECTOR4S0_( struct $7VECTOR4* tmp$1593$1, struct $7VECTOR4* L$1, struct $7VECTOR4* R$1 )
{
 label$1871:;
 _ZN7VECTOR4C1Edddd( tmp$1593$1, *(double*)((uint8*)L$1 + 40ll) + *(double*)((uint8*)R$1 + 40ll), *(double*)((uint8*)L$1 + 48ll) + *(double*)((uint8*)R$1 + 48ll), *(double*)((uint8*)L$1 + 56ll) + *(double*)((uint8*)R$1 + 56ll), *(double*)((uint8*)L$1 + 64ll) + *(double*)((uint8*)R$1 + 64ll) );
 goto label$1872;
 label$1872:;
 return tmp$1593$1;
}

struct $7VECTOR4* _ZmiR7VECTOR4S0_( struct $7VECTOR4* tmp$1595$1, struct $7VECTOR4* L$1, struct $7VECTOR4* R$1 )
{
 label$1873:;
 _ZN7VECTOR4C1Edddd( tmp$1595$1, *(double*)((uint8*)L$1 + 40ll) - *(double*)((uint8*)R$1 + 40ll), *(double*)((uint8*)L$1 + 48ll) - *(double*)((uint8*)R$1 + 48ll), *(double*)((uint8*)L$1 + 56ll) - *(double*)((uint8*)R$1 + 56ll), *(double*)((uint8*)L$1 + 64ll) - *(double*)((uint8*)R$1 + 64ll) );
 goto label$1874;
 label$1874:;
 return tmp$1595$1;
}

struct $7VECTOR4* _ZmlR7VECTOR4S0_( struct $7VECTOR4* tmp$1597$1, struct $7VECTOR4* L$1, struct $7VECTOR4* R$1 )
{
 label$1875:;
 _ZN7VECTOR4C1Edddd( tmp$1597$1, *(double*)((uint8*)L$1 + 40ll) * *(double*)((uint8*)R$1 + 40ll), *(double*)((uint8*)L$1 + 48ll) * *(double*)((uint8*)R$1 + 48ll), *(double*)((uint8*)L$1 + 56ll) * *(double*)((uint8*)R$1 + 56ll), *(double*)((uint8*)L$1 + 64ll) * *(double*)((uint8*)R$1 + 64ll) );
 goto label$1876;
 label$1876:;
 return tmp$1597$1;
}

struct $7VECTOR4* _ZdvR7VECTOR4S0_( struct $7VECTOR4* tmp$1599$1, struct $7VECTOR4* L$1, struct $7VECTOR4* R$1 )
{
 label$1877:;
 _ZN7VECTOR4C1Edddd( tmp$1599$1, *(double*)((uint8*)L$1 + 40ll) / *(double*)((uint8*)R$1 + 40ll), *(double*)((uint8*)L$1 + 48ll) / *(double*)((uint8*)R$1 + 48ll), *(double*)((uint8*)L$1 + 56ll) / *(double*)((uint8*)R$1 + 56ll), *(double*)((uint8*)L$1 + 64ll) / *(double*)((uint8*)R$1 + 64ll) );
 goto label$1878;
 label$1878:;
 return tmp$1599$1;
}

struct $7VECTOR4* _ZplR7VECTOR4d( struct $7VECTOR4* tmp$1601$1, struct $7VECTOR4* L$1, double R$1 )
{
 label$1879:;
 _ZN7VECTOR4C1Edddd( tmp$1601$1, *(double*)((uint8*)L$1 + 40ll) + R$1, *(double*)((uint8*)L$1 + 48ll) + R$1, *(double*)((uint8*)L$1 + 56ll) + R$1, *(double*)((uint8*)L$1 + 64ll) + R$1 );
 goto label$1880;
 label$1880:;
 return tmp$1601$1;
}

struct $7VECTOR4* _ZpldR7VECTOR4( struct $7VECTOR4* tmp$1603$1, double L$1, struct $7VECTOR4* R$1 )
{
 label$1881:;
 _ZN7VECTOR4C1Edddd( tmp$1603$1, *(double*)((uint8*)R$1 + 40ll) + L$1, *(double*)((uint8*)R$1 + 48ll) + L$1, *(double*)((uint8*)R$1 + 56ll) + L$1, *(double*)((uint8*)R$1 + 64ll) + L$1 );
 goto label$1882;
 label$1882:;
 return tmp$1603$1;
}

struct $7VECTOR4* _ZmiR7VECTOR4d( struct $7VECTOR4* tmp$1605$1, struct $7VECTOR4* L$1, double R$1 )
{
 label$1883:;
 _ZN7VECTOR4C1Edddd( tmp$1605$1, *(double*)((uint8*)L$1 + 40ll) - R$1, *(double*)((uint8*)L$1 + 48ll) - R$1, *(double*)((uint8*)L$1 + 56ll) - R$1, *(double*)((uint8*)L$1 + 64ll) - R$1 );
 goto label$1884;
 label$1884:;
 return tmp$1605$1;
}

struct $7VECTOR4* _ZmidR7VECTOR4( struct $7VECTOR4* tmp$1607$1, double L$1, struct $7VECTOR4* R$1 )
{
 label$1885:;
 _ZN7VECTOR4C1Edddd( tmp$1607$1, *(double*)((uint8*)R$1 + 40ll) - L$1, *(double*)((uint8*)R$1 + 48ll) - L$1, *(double*)((uint8*)R$1 + 56ll) - L$1, *(double*)((uint8*)R$1 + 64ll) - L$1 );
 goto label$1886;
 label$1886:;
 return tmp$1607$1;
}

struct $7VECTOR4* _ZmlR7VECTOR4d( struct $7VECTOR4* tmp$1609$1, struct $7VECTOR4* L$1, double R$1 )
{
 label$1887:;
 _ZN7VECTOR4C1Edddd( tmp$1609$1, *(double*)((uint8*)L$1 + 40ll) * R$1, *(double*)((uint8*)L$1 + 48ll) * R$1, *(double*)((uint8*)L$1 + 56ll) * R$1, *(double*)((uint8*)L$1 + 64ll) * R$1 );
 goto label$1888;
 label$1888:;
 return tmp$1609$1;
}

struct $7VECTOR4* _ZmldR7VECTOR4( struct $7VECTOR4* tmp$1611$1, double L$1, struct $7VECTOR4* R$1 )
{
 label$1889:;
 _ZN7VECTOR4C1Edddd( tmp$1611$1, L$1 * *(double*)((uint8*)R$1 + 40ll), L$1 * *(double*)((uint8*)R$1 + 48ll), L$1 * *(double*)((uint8*)R$1 + 56ll), L$1 * *(double*)((uint8*)R$1 + 64ll) );
 goto label$1890;
 label$1890:;
 return tmp$1611$1;
}

struct $7VECTOR4* _ZdvR7VECTOR4d( struct $7VECTOR4* tmp$1613$1, struct $7VECTOR4* L$1, double R$1 )
{
 label$1891:;
 _ZN7VECTOR4C1Edddd( tmp$1613$1, *(double*)((uint8*)L$1 + 40ll) / R$1, *(double*)((uint8*)L$1 + 48ll) / R$1, *(double*)((uint8*)L$1 + 56ll) / R$1, *(double*)((uint8*)L$1 + 64ll) / R$1 );
 goto label$1892;
 label$1892:;
 return tmp$1613$1;
}

struct $7VECTOR4* _ZdvdR7VECTOR4( struct $7VECTOR4* tmp$1615$1, double L$1, struct $7VECTOR4* R$1 )
{
 label$1893:;
 _ZN7VECTOR4C1Edddd( tmp$1615$1, *(double*)((uint8*)R$1 + 40ll) / L$1, *(double*)((uint8*)R$1 + 48ll) / L$1, *(double*)((uint8*)R$1 + 56ll) / L$1, *(double*)((uint8*)R$1 + 64ll) / L$1 );
 goto label$1894;
 label$1894:;
 return tmp$1615$1;
}

struct $7VECTOR4* _ZplR7VECTOR4R7VECTOR3( struct $7VECTOR4* tmp$1617$1, struct $7VECTOR4* L$1, struct $7VECTOR3* R$1 )
{
 label$1895:;
 _ZN7VECTOR4C1Edddd( tmp$1617$1, *(double*)((uint8*)L$1 + 40ll) + *(double*)((uint8*)R$1 + 16ll), *(double*)((uint8*)L$1 + 48ll) + *(double*)((uint8*)R$1 + 24ll), *(double*)((uint8*)L$1 + 56ll) + *(double*)((uint8*)R$1 + 32ll), *(double*)((uint8*)L$1 + 64ll) );
 goto label$1896;
 label$1896:;
 return tmp$1617$1;
}

struct $7VECTOR4* _ZplR7VECTOR3R7VECTOR4( struct $7VECTOR4* tmp$1619$1, struct $7VECTOR3* L$1, struct $7VECTOR4* R$1 )
{
 label$1897:;
 _ZN7VECTOR4C1Edddd( tmp$1619$1, *(double*)((uint8*)L$1 + 16ll) + *(double*)((uint8*)R$1 + 40ll), *(double*)((uint8*)L$1 + 24ll) + *(double*)((uint8*)R$1 + 48ll), *(double*)((uint8*)L$1 + 32ll) + *(double*)((uint8*)R$1 + 56ll), 0x1.p+0 );
 goto label$1898;
 label$1898:;
 return tmp$1619$1;
}

struct $7VECTOR4* _ZmiR7VECTOR4R7VECTOR3( struct $7VECTOR4* tmp$1621$1, struct $7VECTOR4* L$1, struct $7VECTOR3* R$1 )
{
 label$1899:;
 _ZN7VECTOR4C1Edddd( tmp$1621$1, *(double*)((uint8*)L$1 + 40ll) - *(double*)((uint8*)R$1 + 16ll), *(double*)((uint8*)L$1 + 48ll) - *(double*)((uint8*)R$1 + 24ll), *(double*)((uint8*)L$1 + 56ll) - *(double*)((uint8*)R$1 + 32ll), *(double*)((uint8*)L$1 + 64ll) );
 goto label$1900;
 label$1900:;
 return tmp$1621$1;
}

struct $7VECTOR4* _ZmiR7VECTOR3R7VECTOR4( struct $7VECTOR4* tmp$1623$1, struct $7VECTOR3* L$1, struct $7VECTOR4* R$1 )
{
 label$1901:;
 _ZN7VECTOR4C1Edddd( tmp$1623$1, *(double*)((uint8*)L$1 + 16ll) - *(double*)((uint8*)R$1 + 40ll), *(double*)((uint8*)L$1 + 24ll) - *(double*)((uint8*)R$1 + 48ll), *(double*)((uint8*)L$1 + 32ll) - *(double*)((uint8*)R$1 + 56ll), 0x1.p+0 );
 goto label$1902;
 label$1902:;
 return tmp$1623$1;
}

struct $7VECTOR4* _ZmlR7VECTOR4R7VECTOR3( struct $7VECTOR4* tmp$1625$1, struct $7VECTOR4* L$1, struct $7VECTOR3* R$1 )
{
 label$1903:;
 _ZN7VECTOR4C1Edddd( tmp$1625$1, *(double*)((uint8*)L$1 + 40ll) * *(double*)((uint8*)R$1 + 16ll), *(double*)((uint8*)L$1 + 48ll) * *(double*)((uint8*)R$1 + 24ll), *(double*)((uint8*)L$1 + 56ll) * *(double*)((uint8*)R$1 + 32ll), *(double*)((uint8*)L$1 + 64ll) );
 goto label$1904;
 label$1904:;
 return tmp$1625$1;
}

struct $7VECTOR4* _ZmlR7VECTOR3R7VECTOR4( struct $7VECTOR4* tmp$1627$1, struct $7VECTOR3* L$1, struct $7VECTOR4* R$1 )
{
 label$1905:;
 _ZN7VECTOR4C1Edddd( tmp$1627$1, *(double*)((uint8*)L$1 + 16ll) * *(double*)((uint8*)R$1 + 40ll), *(double*)((uint8*)L$1 + 24ll) * *(double*)((uint8*)R$1 + 48ll), *(double*)((uint8*)L$1 + 32ll) * *(double*)((uint8*)R$1 + 56ll), 0x1.p+0 );
 goto label$1906;
 label$1906:;
 return tmp$1627$1;
}

struct $7VECTOR4* _ZdvR7VECTOR4R7VECTOR3( struct $7VECTOR4* tmp$1629$1, struct $7VECTOR4* L$1, struct $7VECTOR3* R$1 )
{
 label$1907:;
 _ZN7VECTOR4C1Edddd( tmp$1629$1, *(double*)((uint8*)L$1 + 40ll) / *(double*)((uint8*)R$1 + 16ll), *(double*)((uint8*)L$1 + 48ll) / *(double*)((uint8*)R$1 + 24ll), *(double*)((uint8*)L$1 + 56ll) / *(double*)((uint8*)R$1 + 32ll), *(double*)((uint8*)L$1 + 64ll) );
 goto label$1908;
 label$1908:;
 return tmp$1629$1;
}

struct $7VECTOR4* _ZdvR7VECTOR3R7VECTOR4( struct $7VECTOR4* tmp$1631$1, struct $7VECTOR3* L$1, struct $7VECTOR4* R$1 )
{
 label$1909:;
 _ZN7VECTOR4C1Edddd( tmp$1631$1, *(double*)((uint8*)L$1 + 16ll) / *(double*)((uint8*)R$1 + 40ll), *(double*)((uint8*)L$1 + 24ll) / *(double*)((uint8*)R$1 + 48ll), *(double*)((uint8*)L$1 + 32ll) / *(double*)((uint8*)R$1 + 56ll), 0x1.p+0 );
 goto label$1910;
 label$1910:;
 return tmp$1631$1;
}

int64 _ZeqR7VECTOR4S0_( struct $7VECTOR4* L$1, struct $7VECTOR4* R$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1911:;
 if( ((((((int64)__builtin_nearbyint( *(double*)((uint8*)L$1 + 40ll) )) ^ ((int64)__builtin_nearbyint( *(double*)((uint8*)R$1 + 40ll) ))) | (((int64)__builtin_nearbyint( *(double*)((uint8*)L$1 + 48ll) )) ^ ((int64)__builtin_nearbyint( *(double*)((uint8*)R$1 + 48ll) )))) | (((int64)__builtin_nearbyint( *(double*)((uint8*)L$1 + 56ll) )) ^ ((int64)__builtin_nearbyint( *(double*)((uint8*)R$1 + 56ll) )))) | (((int64)__builtin_nearbyint( *(double*)((uint8*)L$1 + 64ll) )) ^ ((int64)__builtin_nearbyint( *(double*)((uint8*)R$1 + 64ll) )))) == 0ll ) goto label$1914;
 {
  fb$result$1 = 0ll;
  goto label$1912;
  label$1914:;
 }
 fb$result$1 = -1ll;
 goto label$1912;
 label$1912:;
 return fb$result$1;
}

int64 _ZneR7VECTOR4S0_( struct $7VECTOR4* L$1, struct $7VECTOR4* R$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1915:;
 if( ((((((int64)__builtin_nearbyint( *(double*)((uint8*)L$1 + 40ll) )) ^ ((int64)__builtin_nearbyint( *(double*)((uint8*)R$1 + 40ll) ))) | (((int64)__builtin_nearbyint( *(double*)((uint8*)L$1 + 48ll) )) ^ ((int64)__builtin_nearbyint( *(double*)((uint8*)R$1 + 48ll) )))) | (((int64)__builtin_nearbyint( *(double*)((uint8*)L$1 + 56ll) )) ^ ((int64)__builtin_nearbyint( *(double*)((uint8*)R$1 + 56ll) )))) | (((int64)__builtin_nearbyint( *(double*)((uint8*)L$1 + 64ll) )) ^ ((int64)__builtin_nearbyint( *(double*)((uint8*)R$1 + 64ll) )))) == 0ll ) goto label$1918;
 {
  fb$result$1 = -1ll;
  goto label$1916;
  label$1918:;
 }
 fb$result$1 = 0ll;
 goto label$1916;
 label$1916:;
 return fb$result$1;
}

void _ZN5PLANEC1Ev( struct $5PLANE* THIS$1 )
{
 label$1923:;
 _ZN7VECTOR4C1Ev( (struct $7VECTOR4*)THIS$1 );
 *(double*)((uint8*)THIS$1 + 88ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 96ll) = 0x1.p+0;
 *(double*)((uint8*)THIS$1 + 104ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 112ll) = 0x0p+0;
 label$1924:;
}

void _ZN5PLANEC1ER7VECTOR3S1_( struct $5PLANE* THIS$1, struct $7VECTOR3* NORMAL$1, struct $7VECTOR3* V$1 )
{
 label$1925:;
 _ZN7VECTOR4C1Ev( (struct $7VECTOR4*)THIS$1 );
 _ZN7VECTOR3aSERS_( (struct $7VECTOR3*)((uint8*)THIS$1 + 72ll), NORMAL$1 );
 *(double*)((uint8*)THIS$1 + 112ll) = -(((*(double*)((uint8*)THIS$1 + 88ll) * *(double*)((uint8*)V$1 + 16ll)) + (*(double*)((uint8*)THIS$1 + 96ll) * *(double*)((uint8*)V$1 + 24ll))) + (*(double*)((uint8*)THIS$1 + 96ll) * *(double*)((uint8*)V$1 + 16ll)));
 label$1926:;
}

double _ZN5PLANE11GETDISTANCEER7VECTOR3( struct $5PLANE* THIS$1, struct $7VECTOR3* V$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1927:;
 fb$result$1 = (((*(double*)((uint8*)THIS$1 + 88ll) * *(double*)((uint8*)V$1 + 16ll)) + (*(double*)((uint8*)THIS$1 + 96ll) * *(double*)((uint8*)V$1 + 24ll))) + (*(double*)((uint8*)THIS$1 + 96ll) * *(double*)((uint8*)V$1 + 16ll))) + *(double*)((uint8*)THIS$1 + 112ll);
 goto label$1928;
 label$1928:;
 return fb$result$1;
}

$10EPLANESIDE _ZN5PLANE7GETSIDEER7VECTOR3( struct $5PLANE* THIS$1, struct $7VECTOR3* V$1 )
{
 $10EPLANESIDE fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1929:;
 double DIST$1;
 DIST$1 = (((*(double*)((uint8*)THIS$1 + 88ll) * *(double*)((uint8*)V$1 + 16ll)) + (*(double*)((uint8*)THIS$1 + 96ll) * *(double*)((uint8*)V$1 + 24ll))) + (*(double*)((uint8*)THIS$1 + 96ll) * *(double*)((uint8*)V$1 + 16ll))) + *(double*)((uint8*)THIS$1 + 112ll);
 if( DIST$1 != 0x0p+0 ) goto label$1932;
 {
  fb$result$1 = 0ll;
  goto label$1930;
  label$1932:;
 }
 if( DIST$1 >= 0x0p+0 ) goto label$1934;
 {
  fb$result$1 = 2ll;
  goto label$1930;
  label$1934:;
 }
 fb$result$1 = 1ll;
 goto label$1930;
 label$1930:;
 return fb$result$1;
}

int8 _ZN5PLANE9INTERSECTER7VECTOR3S1_Rd( struct $5PLANE* THIS$1, struct $7VECTOR3* RAYORIGIN$1, struct $7VECTOR3* RAYDIRECTION$1, double* RESULTT$1 )
{
 int8 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 1ll );
 label$1935:;
 double DENOM$1;
 DENOM$1 = ((*(double*)((uint8*)THIS$1 + 88ll) * *(double*)((uint8*)RAYDIRECTION$1 + 16ll)) + (*(double*)((uint8*)THIS$1 + 96ll) * *(double*)((uint8*)RAYDIRECTION$1 + 24ll))) + (*(double*)((uint8*)THIS$1 + 96ll) * *(double*)((uint8*)RAYDIRECTION$1 + 16ll));
 double vr$12 = fabs( DENOM$1 );
 if( vr$12 >= 0x1.0624DD2F1A9FCp-10 ) goto label$1938;
 {
  fb$result$1 = (int8)0;
  goto label$1936;
  label$1938:;
 }
 struct $7VECTOR3 PLANECENTER$1;
 _ZN7VECTOR3C1Eddd( &PLANECENTER$1, *(double*)((uint8*)THIS$1 + 88ll) * *(double*)((uint8*)THIS$1 + 112ll), *(double*)((uint8*)THIS$1 + 96ll) * *(double*)((uint8*)THIS$1 + 112ll), *(double*)((uint8*)THIS$1 + 104ll) * *(double*)((uint8*)THIS$1 + 112ll) );
 *(double*)((uint8*)&PLANECENTER$1 + 16ll) = *(double*)((uint8*)&PLANECENTER$1 + 16ll) - *(double*)((uint8*)RAYORIGIN$1 + 16ll);
 *(double*)((uint8*)&PLANECENTER$1 + 24ll) = *(double*)((uint8*)&PLANECENTER$1 + 24ll) - *(double*)((uint8*)RAYORIGIN$1 + 24ll);
 *(double*)((uint8*)&PLANECENTER$1 + 32ll) = *(double*)((uint8*)&PLANECENTER$1 + 32ll) - *(double*)((uint8*)RAYORIGIN$1 + 32ll);
 double T$1;
 T$1 = (((*(double*)((uint8*)&PLANECENTER$1 + 16ll) * *(double*)((uint8*)THIS$1 + 88ll)) + (*(double*)((uint8*)&PLANECENTER$1 + 24ll) * *(double*)((uint8*)THIS$1 + 96ll))) + (*(double*)((uint8*)&PLANECENTER$1 + 32ll) * *(double*)((uint8*)THIS$1 + 104ll))) / DENOM$1;
 if( T$1 >= 0x1.0624DD2F1A9FCp-10 ) goto label$1940;
 {
  fb$result$1 = (int8)0;
  goto label$1936;
  label$1940:;
 }
 *RESULTT$1 = T$1;
 fb$result$1 = (int8)-1;
 goto label$1936;
 label$1936:;
 return fb$result$1;
}

struct $7VECTOR2* _Zv13sinR7VECTOR2( struct $7VECTOR2* tmp$1634$1, struct $7VECTOR2* V$1 )
{
 label$1941:;
 float vr$2 = sinf( (float)*(double*)((uint8*)V$1 + 8ll) );
 float vr$6 = sinf( (float)*(double*)V$1 );
 _ZN7VECTOR2C1Edd( tmp$1634$1, (double)vr$6, (double)vr$2 );
 goto label$1942;
 label$1942:;
 return tmp$1634$1;
}

struct $7VECTOR3* _Zv13sinR7VECTOR3( struct $7VECTOR3* tmp$1636$1, struct $7VECTOR3* V$1 )
{
 label$1943:;
 float vr$2 = sinf( (float)*(double*)((uint8*)V$1 + 32ll) );
 float vr$6 = sinf( (float)*(double*)((uint8*)V$1 + 24ll) );
 float vr$10 = sinf( (float)*(double*)((uint8*)V$1 + 16ll) );
 _ZN7VECTOR3C1Eddd( tmp$1636$1, (double)vr$10, (double)vr$6, (double)vr$2 );
 goto label$1944;
 label$1944:;
 return tmp$1636$1;
}

struct $7VECTOR4* _Zv13sinR7VECTOR4( struct $7VECTOR4* tmp$1638$1, struct $7VECTOR4* V$1 )
{
 label$1945:;
 float vr$2 = sinf( (float)*(double*)((uint8*)V$1 + 64ll) );
 float vr$6 = sinf( (float)*(double*)((uint8*)V$1 + 56ll) );
 float vr$10 = sinf( (float)*(double*)((uint8*)V$1 + 48ll) );
 float vr$14 = sinf( (float)*(double*)((uint8*)V$1 + 40ll) );
 _ZN7VECTOR4C1Edddd( tmp$1638$1, (double)vr$14, (double)vr$10, (double)vr$6, (double)vr$2 );
 goto label$1946;
 label$1946:;
 return tmp$1638$1;
}

struct $7VECTOR2* _Zv13cosR7VECTOR2( struct $7VECTOR2* tmp$1640$1, struct $7VECTOR2* V$1 )
{
 label$1947:;
 float vr$2 = cosf( (float)*(double*)((uint8*)V$1 + 8ll) );
 float vr$6 = cosf( (float)*(double*)V$1 );
 _ZN7VECTOR2C1Edd( tmp$1640$1, (double)vr$6, (double)vr$2 );
 goto label$1948;
 label$1948:;
 return tmp$1640$1;
}

struct $7VECTOR3* _Zv13cosR7VECTOR3( struct $7VECTOR3* tmp$1642$1, struct $7VECTOR3* V$1 )
{
 label$1949:;
 float vr$2 = cosf( (float)*(double*)((uint8*)V$1 + 32ll) );
 float vr$6 = cosf( (float)*(double*)((uint8*)V$1 + 24ll) );
 float vr$10 = cosf( (float)*(double*)((uint8*)V$1 + 16ll) );
 _ZN7VECTOR3C1Eddd( tmp$1642$1, (double)vr$10, (double)vr$6, (double)vr$2 );
 goto label$1950;
 label$1950:;
 return tmp$1642$1;
}

struct $7VECTOR4* _Zv13cosR7VECTOR4( struct $7VECTOR4* tmp$1644$1, struct $7VECTOR4* V$1 )
{
 label$1951:;
 float vr$2 = cosf( (float)*(double*)((uint8*)V$1 + 64ll) );
 float vr$6 = cosf( (float)*(double*)((uint8*)V$1 + 56ll) );
 float vr$10 = cosf( (float)*(double*)((uint8*)V$1 + 48ll) );
 float vr$14 = cosf( (float)*(double*)((uint8*)V$1 + 40ll) );
 _ZN7VECTOR4C1Edddd( tmp$1644$1, (double)vr$14, (double)vr$10, (double)vr$6, (double)vr$2 );
 goto label$1952;
 label$1952:;
 return tmp$1644$1;
}

struct $7VECTOR2* _Zv13tanR7VECTOR2( struct $7VECTOR2* tmp$1646$1, struct $7VECTOR2* V$1 )
{
 label$1953:;
 float vr$2 = tanf( (float)*(double*)((uint8*)V$1 + 8ll) );
 float vr$6 = tanf( (float)*(double*)V$1 );
 _ZN7VECTOR2C1Edd( tmp$1646$1, (double)vr$6, (double)vr$2 );
 goto label$1954;
 label$1954:;
 return tmp$1646$1;
}

struct $7VECTOR3* _Zv13tanR7VECTOR3( struct $7VECTOR3* tmp$1648$1, struct $7VECTOR3* V$1 )
{
 label$1955:;
 float vr$2 = tanf( (float)*(double*)((uint8*)V$1 + 32ll) );
 float vr$8 = tanf( (float)*(double*)((uint8*)V$1 + 16ll) );
 _ZN7VECTOR3C1Eddd( tmp$1648$1, (double)vr$8, __builtin_tan( *(double*)((uint8*)V$1 + 24ll) ), (double)vr$2 );
 goto label$1956;
 label$1956:;
 return tmp$1648$1;
}

struct $7VECTOR4* _Zv13tanR7VECTOR4( struct $7VECTOR4* tmp$1650$1, struct $7VECTOR4* V$1 )
{
 label$1957:;
 float vr$2 = tanf( (float)*(double*)((uint8*)V$1 + 64ll) );
 float vr$6 = tanf( (float)*(double*)((uint8*)V$1 + 56ll) );
 float vr$10 = tanf( (float)*(double*)((uint8*)V$1 + 48ll) );
 float vr$14 = tanf( (float)*(double*)((uint8*)V$1 + 40ll) );
 _ZN7VECTOR4C1Edddd( tmp$1650$1, (double)vr$14, (double)vr$10, (double)vr$6, (double)vr$2 );
 goto label$1958;
 label$1958:;
 return tmp$1650$1;
}

struct $7VECTOR2* _Zv14asinR7VECTOR2( struct $7VECTOR2* tmp$1652$1, struct $7VECTOR2* V$1 )
{
 label$1959:;
 float vr$2 = asinf( (float)*(double*)((uint8*)V$1 + 8ll) );
 float vr$6 = asinf( (float)*(double*)V$1 );
 _ZN7VECTOR2C1Edd( tmp$1652$1, (double)vr$6, (double)vr$2 );
 goto label$1960;
 label$1960:;
 return tmp$1652$1;
}

struct $7VECTOR3* _Zv14asinR7VECTOR3( struct $7VECTOR3* tmp$1654$1, struct $7VECTOR3* V$1 )
{
 label$1961:;
 float vr$2 = asinf( (float)*(double*)((uint8*)V$1 + 32ll) );
 float vr$6 = asinf( (float)*(double*)((uint8*)V$1 + 24ll) );
 float vr$10 = asinf( (float)*(double*)((uint8*)V$1 + 16ll) );
 _ZN7VECTOR3C1Eddd( tmp$1654$1, (double)vr$10, (double)vr$6, (double)vr$2 );
 goto label$1962;
 label$1962:;
 return tmp$1654$1;
}

struct $7VECTOR4* _Zv14asinR7VECTOR4( struct $7VECTOR4* tmp$1656$1, struct $7VECTOR4* V$1 )
{
 label$1963:;
 float vr$2 = asinf( (float)*(double*)((uint8*)V$1 + 64ll) );
 float vr$6 = asinf( (float)*(double*)((uint8*)V$1 + 56ll) );
 float vr$10 = asinf( (float)*(double*)((uint8*)V$1 + 48ll) );
 float vr$14 = asinf( (float)*(double*)((uint8*)V$1 + 40ll) );
 _ZN7VECTOR4C1Edddd( tmp$1656$1, (double)vr$14, (double)vr$10, (double)vr$6, (double)vr$2 );
 goto label$1964;
 label$1964:;
 return tmp$1656$1;
}

struct $7VECTOR2* _Zv14acosR7VECTOR2( struct $7VECTOR2* tmp$1658$1, struct $7VECTOR2* V$1 )
{
 label$1965:;
 float vr$2 = acosf( (float)*(double*)((uint8*)V$1 + 8ll) );
 float vr$6 = acosf( (float)*(double*)V$1 );
 _ZN7VECTOR2C1Edd( tmp$1658$1, (double)vr$6, (double)vr$2 );
 goto label$1966;
 label$1966:;
 return tmp$1658$1;
}

struct $7VECTOR3* _Zv14acosR7VECTOR3( struct $7VECTOR3* tmp$1660$1, struct $7VECTOR3* V$1 )
{
 label$1967:;
 float vr$2 = acosf( (float)*(double*)((uint8*)V$1 + 32ll) );
 float vr$6 = acosf( (float)*(double*)((uint8*)V$1 + 24ll) );
 float vr$10 = acosf( (float)*(double*)((uint8*)V$1 + 16ll) );
 _ZN7VECTOR3C1Eddd( tmp$1660$1, (double)vr$10, (double)vr$6, (double)vr$2 );
 goto label$1968;
 label$1968:;
 return tmp$1660$1;
}

struct $7VECTOR4* _Zv14acosR7VECTOR4( struct $7VECTOR4* tmp$1662$1, struct $7VECTOR4* V$1 )
{
 label$1969:;
 float vr$2 = acosf( (float)*(double*)((uint8*)V$1 + 64ll) );
 float vr$6 = acosf( (float)*(double*)((uint8*)V$1 + 56ll) );
 float vr$10 = acosf( (float)*(double*)((uint8*)V$1 + 48ll) );
 float vr$14 = acosf( (float)*(double*)((uint8*)V$1 + 40ll) );
 _ZN7VECTOR4C1Edddd( tmp$1662$1, (double)vr$14, (double)vr$10, (double)vr$6, (double)vr$2 );
 goto label$1970;
 label$1970:;
 return tmp$1662$1;
}

struct $7VECTOR2* _Zv13absRK7VECTOR2( struct $7VECTOR2* tmp$1664$1, struct $7VECTOR2* V$1 )
{
 double TMP$1666$1;
 double TMP$1667$1;
 label$1971:;
 if( *(double*)((uint8*)V$1 + 8ll) >= 0x0p+0 ) goto label$1974;
 TMP$1667$1 = -(*(double*)((uint8*)V$1 + 8ll));
 goto label$1975;
 label$1974:;
 TMP$1667$1 = *(double*)((uint8*)V$1 + 8ll);
 label$1975:;
 if( *(double*)V$1 >= 0x0p+0 ) goto label$1973;
 TMP$1666$1 = -(*(double*)V$1);
 goto label$1976;
 label$1973:;
 TMP$1666$1 = *(double*)V$1;
 label$1976:;
 _ZN7VECTOR2C1Edd( tmp$1664$1, TMP$1666$1, TMP$1667$1 );
 goto label$1972;
 label$1972:;
 return tmp$1664$1;
}

struct $7VECTOR3* _Zv13absRK7VECTOR3( struct $7VECTOR3* tmp$1668$1, struct $7VECTOR3* V$1 )
{
 double TMP$1670$1;
 double TMP$1671$1;
 double TMP$1672$1;
 label$1977:;
 if( *(double*)((uint8*)V$1 + 32ll) >= 0x0p+0 ) goto label$1981;
 TMP$1672$1 = -(*(double*)((uint8*)V$1 + 32ll));
 goto label$1982;
 label$1981:;
 TMP$1672$1 = *(double*)((uint8*)V$1 + 32ll);
 label$1982:;
 if( *(double*)((uint8*)V$1 + 24ll) >= 0x0p+0 ) goto label$1980;
 TMP$1671$1 = -(*(double*)((uint8*)V$1 + 24ll));
 goto label$1983;
 label$1980:;
 TMP$1671$1 = *(double*)((uint8*)V$1 + 24ll);
 label$1983:;
 if( *(double*)((uint8*)V$1 + 16ll) >= 0x0p+0 ) goto label$1979;
 TMP$1670$1 = -(*(double*)((uint8*)V$1 + 16ll));
 goto label$1984;
 label$1979:;
 TMP$1670$1 = *(double*)((uint8*)V$1 + 16ll);
 label$1984:;
 _ZN7VECTOR3C1Eddd( tmp$1668$1, TMP$1670$1, TMP$1671$1, TMP$1672$1 );
 goto label$1978;
 label$1978:;
 return tmp$1668$1;
}

struct $7VECTOR4* _Zv13absRK7VECTOR4( struct $7VECTOR4* tmp$1673$1, struct $7VECTOR4* V$1 )
{
 double TMP$1675$1;
 double TMP$1676$1;
 double TMP$1677$1;
 double TMP$1678$1;
 label$1985:;
 if( *(double*)((uint8*)V$1 + 64ll) >= 0x0p+0 ) goto label$1990;
 TMP$1678$1 = -(*(double*)((uint8*)V$1 + 64ll));
 goto label$1991;
 label$1990:;
 TMP$1678$1 = *(double*)((uint8*)V$1 + 64ll);
 label$1991:;
 if( *(double*)((uint8*)V$1 + 56ll) >= 0x0p+0 ) goto label$1989;
 TMP$1677$1 = -(*(double*)((uint8*)V$1 + 56ll));
 goto label$1992;
 label$1989:;
 TMP$1677$1 = *(double*)((uint8*)V$1 + 56ll);
 label$1992:;
 if( *(double*)((uint8*)V$1 + 48ll) >= 0x0p+0 ) goto label$1988;
 TMP$1676$1 = -(*(double*)((uint8*)V$1 + 48ll));
 goto label$1993;
 label$1988:;
 TMP$1676$1 = *(double*)((uint8*)V$1 + 48ll);
 label$1993:;
 if( *(double*)((uint8*)V$1 + 40ll) >= 0x0p+0 ) goto label$1987;
 TMP$1675$1 = -(*(double*)((uint8*)V$1 + 40ll));
 goto label$1994;
 label$1987:;
 TMP$1675$1 = *(double*)((uint8*)V$1 + 40ll);
 label$1994:;
 _ZN7VECTOR4C1Edddd( tmp$1673$1, TMP$1675$1, TMP$1676$1, TMP$1677$1, TMP$1678$1 );
 goto label$1986;
 label$1986:;
 return tmp$1673$1;
}

void _ZN4MAT2C1Ed( struct $4MAT2* THIS$1, double D$1 )
{
 label$1999:;
 _ZN5PLANEC1Ev( (struct $5PLANE*)THIS$1 );
 *(double*)((uint8*)THIS$1 + 120ll) = D$1;
 *(double*)((uint8*)THIS$1 + 128ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 136ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 144ll) = D$1;
 label$2000:;
}

void _ZN4MAT2C1Edddd( struct $4MAT2* THIS$1, double A$1, double B$1, double C$1, double D$1 )
{
 label$2001:;
 _ZN5PLANEC1Ev( (struct $5PLANE*)THIS$1 );
 *(double*)((uint8*)THIS$1 + 120ll) = A$1;
 *(double*)((uint8*)THIS$1 + 128ll) = B$1;
 *(double*)((uint8*)THIS$1 + 136ll) = C$1;
 *(double*)((uint8*)THIS$1 + 144ll) = D$1;
 label$2002:;
}

FBSTRING* _ZN4MAT2cv8FBSTRINGEv( struct $4MAT2* THIS$1 )
{
 FBSTRING TMP$1680$1;
 FBSTRING TMP$1681$1;
 FBSTRING TMP$1682$1;
 FBSTRING TMP$1683$1;
 FBSTRING TMP$1684$1;
 FBSTRING TMP$1685$1;
 FBSTRING TMP$1686$1;
 FBSTRING TMP$1687$1;
 FBSTRING fb$result$1;
 __builtin_memset( &fb$result$1, 0, 24ll );
 label$2003:;
 FBSTRING* vr$2 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 144ll) );
 FBSTRING* vr$4 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 128ll) );
 FBSTRING* vr$6 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 136ll) );
 FBSTRING* vr$8 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 120ll) );
 __builtin_memset( &TMP$1680$1, 0, 24ll );
 FBSTRING* vr$11 = fb_StrConcat( &TMP$1680$1, (void*)"(", 2ll, (void*)vr$8, -1ll );
 __builtin_memset( &TMP$1681$1, 0, 24ll );
 FBSTRING* vr$14 = fb_StrConcat( &TMP$1681$1, (void*)vr$11, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1682$1, 0, 24ll );
 FBSTRING* vr$17 = fb_StrConcat( &TMP$1682$1, (void*)vr$14, -1ll, (void*)vr$6, -1ll );
 __builtin_memset( &TMP$1683$1, 0, 24ll );
 FBSTRING* vr$20 = fb_StrConcat( &TMP$1683$1, (void*)vr$17, -1ll, (void*)"), (", 5ll );
 __builtin_memset( &TMP$1684$1, 0, 24ll );
 FBSTRING* vr$23 = fb_StrConcat( &TMP$1684$1, (void*)vr$20, -1ll, (void*)vr$4, -1ll );
 __builtin_memset( &TMP$1685$1, 0, 24ll );
 FBSTRING* vr$26 = fb_StrConcat( &TMP$1685$1, (void*)vr$23, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1686$1, 0, 24ll );
 FBSTRING* vr$29 = fb_StrConcat( &TMP$1686$1, (void*)vr$26, -1ll, (void*)vr$2, -1ll );
 __builtin_memset( &TMP$1687$1, 0, 24ll );
 FBSTRING* vr$32 = fb_StrConcat( &TMP$1687$1, (void*)vr$29, -1ll, (void*)")", 2ll );
 fb_StrInit( (void*)&fb$result$1, -1ll, (void*)vr$32, -1ll, 0 );
 goto label$2004;
 label$2004:;
 FBSTRING* vr$35 = fb_StrAllocTempResult( (FBSTRING*)&fb$result$1 );
 return vr$35;
}

struct $7VECTOR2* _ZmlR4MAT2R7VECTOR2( struct $7VECTOR2* tmp$1688$1, struct $4MAT2* L$1, struct $7VECTOR2* R$1 )
{
 label$2005:;
 _ZN7VECTOR2C1Edd( tmp$1688$1, (*(double*)((uint8*)L$1 + 120ll) * *(double*)R$1) + (*(double*)((uint8*)L$1 + 136ll) * *(double*)((uint8*)R$1 + 8ll)), (*(double*)((uint8*)L$1 + 128ll) * *(double*)R$1) + (*(double*)((uint8*)L$1 + 144ll) * *(double*)((uint8*)R$1 + 8ll)) );
 goto label$2006;
 label$2006:;
 return tmp$1688$1;
}

struct $7VECTOR2* _ZmlR7VECTOR2R4MAT2( struct $7VECTOR2* tmp$1690$1, struct $7VECTOR2* R$1, struct $4MAT2* L$1 )
{
 label$2007:;
 _ZN7VECTOR2C1Edd( tmp$1690$1, (*(double*)((uint8*)L$1 + 120ll) * *(double*)R$1) + (*(double*)((uint8*)L$1 + 128ll) * *(double*)((uint8*)R$1 + 8ll)), (*(double*)((uint8*)L$1 + 136ll) * *(double*)R$1) + (*(double*)((uint8*)L$1 + 144ll) * *(double*)((uint8*)R$1 + 8ll)) );
 goto label$2008;
 label$2008:;
 return tmp$1690$1;
}

struct $4MAT2 _ZmlR4MAT2S0_( struct $4MAT2* L$1, struct $4MAT2* R$1 )
{
 struct $4MAT2 fb$result$1;
 label$2009:;
 _ZN4MAT2C1Edddd( &fb$result$1, (*(double*)((uint8*)L$1 + 120ll) * *(double*)((uint8*)R$1 + 120ll)) + (*(double*)((uint8*)L$1 + 136ll) * *(double*)((uint8*)R$1 + 128ll)), (*(double*)((uint8*)L$1 + 128ll) * *(double*)((uint8*)R$1 + 120ll)) + (*(double*)((uint8*)L$1 + 144ll) * *(double*)((uint8*)R$1 + 128ll)), (*(double*)((uint8*)L$1 + 120ll) * *(double*)((uint8*)R$1 + 128ll)) + (*(double*)((uint8*)L$1 + 136ll) * *(double*)((uint8*)R$1 + 144ll)), (*(double*)((uint8*)L$1 + 128ll) * *(double*)((uint8*)R$1 + 136ll)) + (*(double*)((uint8*)L$1 + 144ll) * *(double*)((uint8*)R$1 + 144ll)) );
 goto label$2010;
 label$2010:;
 return fb$result$1;
}

void _ZN4MAT3C1Ed( struct $4MAT3* THIS$1, double D$1 )
{
 label$2015:;
 _ZN4MAT2C1Ed( (struct $4MAT2*)THIS$1, 0x1.p+0 );
 *(double*)((uint8*)THIS$1 + 152ll) = D$1;
 *(double*)((uint8*)THIS$1 + 160ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 168ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 176ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 184ll) = D$1;
 *(double*)((uint8*)THIS$1 + 192ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 200ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 208ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 216ll) = D$1;
 label$2016:;
}

void _ZN4MAT3C1Eddddddddd( struct $4MAT3* THIS$1, double A$1, double B$1, double C$1, double D$1, double E$1, double F$1, double G$1, double H$1, double J$1 )
{
 label$2017:;
 _ZN4MAT2C1Ed( (struct $4MAT2*)THIS$1, 0x1.p+0 );
 *(double*)((uint8*)THIS$1 + 152ll) = A$1;
 *(double*)((uint8*)THIS$1 + 160ll) = B$1;
 *(double*)((uint8*)THIS$1 + 168ll) = C$1;
 *(double*)((uint8*)THIS$1 + 176ll) = D$1;
 *(double*)((uint8*)THIS$1 + 184ll) = E$1;
 *(double*)((uint8*)THIS$1 + 192ll) = F$1;
 *(double*)((uint8*)THIS$1 + 200ll) = G$1;
 *(double*)((uint8*)THIS$1 + 208ll) = H$1;
 *(double*)((uint8*)THIS$1 + 216ll) = J$1;
 label$2018:;
}

void _ZN4MAT3C1ER7VECTOR3S1_S1_( struct $4MAT3* THIS$1, struct $7VECTOR3* A$1, struct $7VECTOR3* B$1, struct $7VECTOR3* C$1 )
{
 label$2019:;
 _ZN4MAT2C1Ed( (struct $4MAT2*)THIS$1, 0x1.p+0 );
 *(double*)((uint8*)THIS$1 + 152ll) = *(double*)((uint8*)A$1 + 16ll);
 *(double*)((uint8*)THIS$1 + 160ll) = *(double*)((uint8*)A$1 + 24ll);
 *(double*)((uint8*)THIS$1 + 168ll) = *(double*)((uint8*)A$1 + 32ll);
 *(double*)((uint8*)THIS$1 + 176ll) = *(double*)((uint8*)B$1 + 16ll);
 *(double*)((uint8*)THIS$1 + 184ll) = *(double*)((uint8*)B$1 + 24ll);
 *(double*)((uint8*)THIS$1 + 192ll) = *(double*)((uint8*)B$1 + 32ll);
 *(double*)((uint8*)THIS$1 + 200ll) = *(double*)((uint8*)C$1 + 16ll);
 *(double*)((uint8*)THIS$1 + 208ll) = *(double*)((uint8*)C$1 + 24ll);
 *(double*)((uint8*)THIS$1 + 216ll) = *(double*)((uint8*)C$1 + 32ll);
 label$2020:;
}

FBSTRING* _ZN4MAT3cv8FBSTRINGEv( struct $4MAT3* THIS$1 )
{
 FBSTRING TMP$1693$1;
 FBSTRING TMP$1694$1;
 FBSTRING TMP$1695$1;
 FBSTRING TMP$1696$1;
 FBSTRING TMP$1697$1;
 FBSTRING TMP$1698$1;
 FBSTRING TMP$1699$1;
 FBSTRING TMP$1700$1;
 FBSTRING TMP$1701$1;
 FBSTRING TMP$1702$1;
 FBSTRING TMP$1703$1;
 FBSTRING TMP$1704$1;
 FBSTRING TMP$1705$1;
 FBSTRING TMP$1706$1;
 FBSTRING TMP$1707$1;
 FBSTRING TMP$1708$1;
 FBSTRING TMP$1709$1;
 FBSTRING TMP$1710$1;
 FBSTRING fb$result$1;
 __builtin_memset( &fb$result$1, 0, 24ll );
 label$2021:;
 FBSTRING* vr$2 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 216ll) );
 FBSTRING* vr$4 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 192ll) );
 FBSTRING* vr$6 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 168ll) );
 FBSTRING* vr$8 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 208ll) );
 FBSTRING* vr$10 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 184ll) );
 FBSTRING* vr$12 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 160ll) );
 FBSTRING* vr$14 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 200ll) );
 FBSTRING* vr$16 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 176ll) );
 FBSTRING* vr$18 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 152ll) );
 __builtin_memset( &TMP$1693$1, 0, 24ll );
 FBSTRING* vr$21 = fb_StrConcat( &TMP$1693$1, (void*)"(", 2ll, (void*)vr$18, -1ll );
 __builtin_memset( &TMP$1694$1, 0, 24ll );
 FBSTRING* vr$24 = fb_StrConcat( &TMP$1694$1, (void*)vr$21, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1695$1, 0, 24ll );
 FBSTRING* vr$27 = fb_StrConcat( &TMP$1695$1, (void*)vr$24, -1ll, (void*)vr$16, -1ll );
 __builtin_memset( &TMP$1696$1, 0, 24ll );
 FBSTRING* vr$30 = fb_StrConcat( &TMP$1696$1, (void*)vr$27, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1697$1, 0, 24ll );
 FBSTRING* vr$33 = fb_StrConcat( &TMP$1697$1, (void*)vr$30, -1ll, (void*)vr$14, -1ll );
 __builtin_memset( &TMP$1698$1, 0, 24ll );
 FBSTRING* vr$36 = fb_StrConcat( &TMP$1698$1, (void*)vr$33, -1ll, (void*)"), (", 5ll );
 __builtin_memset( &TMP$1699$1, 0, 24ll );
 FBSTRING* vr$39 = fb_StrConcat( &TMP$1699$1, (void*)vr$36, -1ll, (void*)vr$12, -1ll );
 __builtin_memset( &TMP$1700$1, 0, 24ll );
 FBSTRING* vr$42 = fb_StrConcat( &TMP$1700$1, (void*)vr$39, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1701$1, 0, 24ll );
 FBSTRING* vr$45 = fb_StrConcat( &TMP$1701$1, (void*)vr$42, -1ll, (void*)vr$10, -1ll );
 __builtin_memset( &TMP$1702$1, 0, 24ll );
 FBSTRING* vr$48 = fb_StrConcat( &TMP$1702$1, (void*)vr$45, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1703$1, 0, 24ll );
 FBSTRING* vr$51 = fb_StrConcat( &TMP$1703$1, (void*)vr$48, -1ll, (void*)vr$8, -1ll );
 __builtin_memset( &TMP$1704$1, 0, 24ll );
 FBSTRING* vr$54 = fb_StrConcat( &TMP$1704$1, (void*)vr$51, -1ll, (void*)"), (", 5ll );
 __builtin_memset( &TMP$1705$1, 0, 24ll );
 FBSTRING* vr$57 = fb_StrConcat( &TMP$1705$1, (void*)vr$54, -1ll, (void*)vr$6, -1ll );
 __builtin_memset( &TMP$1706$1, 0, 24ll );
 FBSTRING* vr$60 = fb_StrConcat( &TMP$1706$1, (void*)vr$57, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1707$1, 0, 24ll );
 FBSTRING* vr$63 = fb_StrConcat( &TMP$1707$1, (void*)vr$60, -1ll, (void*)vr$4, -1ll );
 __builtin_memset( &TMP$1708$1, 0, 24ll );
 FBSTRING* vr$66 = fb_StrConcat( &TMP$1708$1, (void*)vr$63, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1709$1, 0, 24ll );
 FBSTRING* vr$69 = fb_StrConcat( &TMP$1709$1, (void*)vr$66, -1ll, (void*)vr$2, -1ll );
 __builtin_memset( &TMP$1710$1, 0, 24ll );
 FBSTRING* vr$72 = fb_StrConcat( &TMP$1710$1, (void*)vr$69, -1ll, (void*)")", 2ll );
 fb_StrInit( (void*)&fb$result$1, -1ll, (void*)vr$72, -1ll, 0 );
 goto label$2022;
 label$2022:;
 FBSTRING* vr$75 = fb_StrAllocTempResult( (FBSTRING*)&fb$result$1 );
 return vr$75;
}

void _ZN4MAT313SETZROTATIONDEd( struct $4MAT3* THIS$1, double DEG$1 )
{
 label$2023:;
 _ZN4MAT313SETZROTATIONREd( THIS$1, (DEG$1 * 0x1.921FB54442D18p+1) / 0x1.68p+7 );
 label$2024:;
}

void _ZN4MAT313SETZROTATIONREd( struct $4MAT3* THIS$1, double RAD$1 )
{
 label$2025:;
 double CO$1;
 float vr$1 = cosf( (float)RAD$1 );
 CO$1 = (double)vr$1;
 double SI$1;
 float vr$4 = sinf( (float)RAD$1 );
 SI$1 = (double)vr$4;
 *(double*)((uint8*)THIS$1 + 152ll) = CO$1;
 *(double*)((uint8*)THIS$1 + 160ll) = SI$1;
 *(double*)((uint8*)THIS$1 + 168ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 176ll) = -SI$1;
 *(double*)((uint8*)THIS$1 + 184ll) = CO$1;
 *(double*)((uint8*)THIS$1 + 192ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 200ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 208ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 216ll) = 0x1.p+0;
 label$2026:;
}

void _ZN4MAT312SETROTATIONDER7VECTOR3d( struct $4MAT3* THIS$1, struct $7VECTOR3* AXIS$1, double DEG$1 )
{
 label$2027:;
 _ZN4MAT312SETROTATIONRER7VECTOR3d( THIS$1, AXIS$1, (DEG$1 * 0x1.921FB54442D18p+1) / 0x1.68p+7 );
 label$2028:;
}

void _ZN4MAT312SETROTATIONRER7VECTOR3d( struct $4MAT3* THIS$1, struct $7VECTOR3* AXIS$1, double RAD$1 )
{
 label$2029:;
 double CO$1;
 float vr$1 = cosf( (float)RAD$1 );
 CO$1 = (double)vr$1;
 double SI$1;
 float vr$4 = sinf( (float)RAD$1 );
 SI$1 = (double)vr$4;
 double OC$1;
 OC$1 = 0x1.p+0 - CO$1;
 *(double*)((uint8*)THIS$1 + 152ll) = ((OC$1 * *(double*)((uint8*)AXIS$1 + 16ll)) * *(double*)((uint8*)AXIS$1 + 16ll)) + CO$1;
 *(double*)((uint8*)THIS$1 + 160ll) = ((OC$1 * *(double*)((uint8*)AXIS$1 + 16ll)) * *(double*)((uint8*)AXIS$1 + 24ll)) - (*(double*)((uint8*)AXIS$1 + 32ll) * SI$1);
 *(double*)((uint8*)THIS$1 + 168ll) = ((OC$1 * *(double*)((uint8*)AXIS$1 + 32ll)) * *(double*)((uint8*)AXIS$1 + 16ll)) + (*(double*)((uint8*)AXIS$1 + 24ll) * SI$1);
 *(double*)((uint8*)THIS$1 + 176ll) = ((OC$1 * *(double*)((uint8*)AXIS$1 + 16ll)) * *(double*)((uint8*)AXIS$1 + 24ll)) + (*(double*)((uint8*)AXIS$1 + 32ll) * SI$1);
 *(double*)((uint8*)THIS$1 + 184ll) = ((OC$1 * *(double*)((uint8*)AXIS$1 + 24ll)) * *(double*)((uint8*)AXIS$1 + 24ll)) + CO$1;
 *(double*)((uint8*)THIS$1 + 192ll) = ((OC$1 * *(double*)((uint8*)AXIS$1 + 24ll)) * *(double*)((uint8*)AXIS$1 + 32ll)) - (*(double*)((uint8*)AXIS$1 + 16ll) * SI$1);
 *(double*)((uint8*)THIS$1 + 200ll) = ((OC$1 * *(double*)((uint8*)AXIS$1 + 32ll)) * *(double*)((uint8*)AXIS$1 + 16ll)) - (*(double*)((uint8*)AXIS$1 + 24ll) * SI$1);
 *(double*)((uint8*)THIS$1 + 208ll) = ((OC$1 * *(double*)((uint8*)AXIS$1 + 24ll)) * *(double*)((uint8*)AXIS$1 + 32ll)) + (*(double*)((uint8*)AXIS$1 + 16ll) * SI$1);
 *(double*)((uint8*)THIS$1 + 216ll) = ((OC$1 * *(double*)((uint8*)AXIS$1 + 32ll)) * *(double*)((uint8*)AXIS$1 + 32ll)) + CO$1;
 label$2030:;
}

void _ZN4MAT310SETSCALINGER7VECTOR2( struct $4MAT3* THIS$1, struct $7VECTOR2* SCALE$1 )
{
 label$2031:;
 _ZN4MAT310SETSCALINGEdd( THIS$1, *(double*)SCALE$1, *(double*)((uint8*)SCALE$1 + 8ll) );
 label$2032:;
}

void _ZN4MAT310SETSCALINGEd( struct $4MAT3* THIS$1, double SCALE$1 )
{
 label$2033:;
 _ZN4MAT310SETSCALINGEdd( THIS$1, SCALE$1, SCALE$1 );
 label$2034:;
}

void _ZN4MAT310SETSCALINGEdd( struct $4MAT3* THIS$1, double SCALEX$1, double SCALEY$1 )
{
 label$2035:;
 *(double*)((uint8*)THIS$1 + 152ll) = SCALEX$1;
 *(double*)((uint8*)THIS$1 + 160ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 168ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 176ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 184ll) = SCALEY$1;
 *(double*)((uint8*)THIS$1 + 192ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 200ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 208ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 216ll) = 0x1.p+0;
 label$2036:;
}

struct $7VECTOR3* _ZmlR4MAT3R7VECTOR3( struct $7VECTOR3* tmp$1711$1, struct $4MAT3* L$1, struct $7VECTOR3* R$1 )
{
 label$2037:;
 _ZN7VECTOR3C1Eddd( tmp$1711$1, ((*(double*)((uint8*)L$1 + 152ll) * *(double*)((uint8*)R$1 + 16ll)) + (*(double*)((uint8*)L$1 + 176ll) * *(double*)((uint8*)R$1 + 24ll))) + (*(double*)((uint8*)L$1 + 200ll) * *(double*)((uint8*)R$1 + 32ll)), ((*(double*)((uint8*)L$1 + 160ll) * *(double*)((uint8*)R$1 + 16ll)) + (*(double*)((uint8*)L$1 + 184ll) * *(double*)((uint8*)R$1 + 24ll))) + (*(double*)((uint8*)L$1 + 208ll) * *(double*)((uint8*)R$1 + 32ll)), ((*(double*)((uint8*)L$1 + 168ll) * *(double*)((uint8*)R$1 + 16ll)) + (*(double*)((uint8*)L$1 + 192ll) * *(double*)((uint8*)R$1 + 24ll))) + (*(double*)((uint8*)L$1 + 216ll) * *(double*)((uint8*)R$1 + 32ll)) );
 goto label$2038;
 label$2038:;
 return tmp$1711$1;
}

struct $7VECTOR3* _ZmlR7VECTOR3R4MAT3( struct $7VECTOR3* tmp$1713$1, struct $7VECTOR3* R$1, struct $4MAT3* L$1 )
{
 label$2039:;
 _ZN7VECTOR3C1Eddd( tmp$1713$1, ((*(double*)((uint8*)L$1 + 152ll) * *(double*)((uint8*)R$1 + 16ll)) + (*(double*)((uint8*)L$1 + 160ll) * *(double*)((uint8*)R$1 + 24ll))) + (*(double*)((uint8*)L$1 + 168ll) * *(double*)((uint8*)R$1 + 32ll)), ((*(double*)((uint8*)L$1 + 176ll) * *(double*)((uint8*)R$1 + 16ll)) + (*(double*)((uint8*)L$1 + 184ll) * *(double*)((uint8*)R$1 + 24ll))) + (*(double*)((uint8*)L$1 + 192ll) * *(double*)((uint8*)R$1 + 32ll)), ((*(double*)((uint8*)L$1 + 200ll) * *(double*)((uint8*)R$1 + 16ll)) + (*(double*)((uint8*)L$1 + 208ll) * *(double*)((uint8*)R$1 + 24ll))) + (*(double*)((uint8*)L$1 + 216ll) * *(double*)((uint8*)R$1 + 32ll)) );
 goto label$2040;
 label$2040:;
 return tmp$1713$1;
}

struct $4MAT3 _ZmlR4MAT3S0_( struct $4MAT3* L$1, struct $4MAT3* R$1 )
{
 struct $4MAT3 fb$result$1;
 label$2041:;
 _ZN4MAT3C1Eddddddddd( &fb$result$1, ((*(double*)((uint8*)L$1 + 152ll) * *(double*)((uint8*)R$1 + 152ll)) + (*(double*)((uint8*)L$1 + 176ll) * *(double*)((uint8*)R$1 + 160ll))) + (*(double*)((uint8*)L$1 + 200ll) * *(double*)((uint8*)R$1 + 168ll)), ((*(double*)((uint8*)L$1 + 160ll) * *(double*)((uint8*)R$1 + 152ll)) + (*(double*)((uint8*)L$1 + 184ll) * *(double*)((uint8*)R$1 + 160ll))) + (*(double*)((uint8*)L$1 + 208ll) * *(double*)((uint8*)R$1 + 168ll)), ((*(double*)((uint8*)L$1 + 168ll) * *(double*)((uint8*)R$1 + 152ll)) + (*(double*)((uint8*)L$1 + 192ll) * *(double*)((uint8*)R$1 + 160ll))) + (*(double*)((uint8*)L$1 + 216ll) * *(double*)((uint8*)R$1 + 168ll)), ((*(double*)((uint8*)L$1 + 152ll) * *(double*)((uint8*)R$1 + 176ll)) + (*(double*)((uint8*)L$1 + 176ll) * *(double*)((uint8*)R$1 + 184ll))) + (*(double*)((uint8*)L$1 + 200ll) * *(double*)((uint8*)R$1 + 192ll)), ((*(double*)((uint8*)L$1 + 160ll) * *(double*)((uint8*)R$1 + 176ll)) + (*(double*)((uint8*)L$1 + 184ll) * *(double*)((uint8*)R$1 + 184ll))) + (*(double*)((uint8*)L$1 + 208ll) * *(double*)((uint8*)R$1 + 192ll)), ((*(double*)((uint8*)L$1 + 168ll) * *(double*)((uint8*)R$1 + 176ll)) + (*(double*)((uint8*)L$1 + 192ll) * *(double*)((uint8*)R$1 + 184ll))) + (*(double*)((uint8*)L$1 + 216ll) * *(double*)((uint8*)R$1 + 192ll)), ((*(double*)((uint8*)L$1 + 152ll) * *(double*)((uint8*)R$1 + 200ll)) + (*(double*)((uint8*)L$1 + 176ll) * *(double*)((uint8*)R$1 + 208ll))) + (*(double*)((uint8*)L$1 + 200ll) * *(double*)((uint8*)R$1 + 216ll)), ((*(double*)((uint8*)L$1 + 160ll) * *(double*)((uint8*)R$1 + 200ll)) + (*(double*)((uint8*)L$1 + 184ll) * *(double*)((uint8*)R$1 + 208ll))) + (*(double*)((uint8*)L$1 + 208ll) * *(double*)((uint8*)R$1 + 216ll)), ((*(double*)((uint8*)L$1 + 168ll) * *(double*)((uint8*)R$1 + 200ll)) + (*(double*)((uint8*)L$1 + 192ll) * *(double*)((uint8*)R$1 + 208ll))) + (*(double*)((uint8*)L$1 + 216ll) * *(double*)((uint8*)R$1 + 216ll)) );
 goto label$2042;
 label$2042:;
 return fb$result$1;
}

void _ZN4MAT4C1Edddddddddddddddd( struct $4MAT4* THIS$1, double A$1, double B$1, double C$1, double D$1, double E$1, double F$1, double G$1, double H$1, double I$1, double J$1, double K$1, double L$1, double M$1, double N$1, double O$1, double P$1 )
{
 label$2047:;
 _ZN4MAT3C1Ed( (struct $4MAT3*)THIS$1, 0x1.p+0 );
 *(double*)((uint8*)THIS$1 + 224ll) = A$1;
 *(double*)((uint8*)THIS$1 + 232ll) = B$1;
 *(double*)((uint8*)THIS$1 + 240ll) = C$1;
 *(double*)((uint8*)THIS$1 + 248ll) = D$1;
 *(double*)((uint8*)THIS$1 + 256ll) = E$1;
 *(double*)((uint8*)THIS$1 + 264ll) = F$1;
 *(double*)((uint8*)THIS$1 + 272ll) = G$1;
 *(double*)((uint8*)THIS$1 + 280ll) = H$1;
 *(double*)((uint8*)THIS$1 + 288ll) = I$1;
 *(double*)((uint8*)THIS$1 + 296ll) = J$1;
 *(double*)((uint8*)THIS$1 + 304ll) = K$1;
 *(double*)((uint8*)THIS$1 + 312ll) = L$1;
 *(double*)((uint8*)THIS$1 + 320ll) = M$1;
 *(double*)((uint8*)THIS$1 + 328ll) = N$1;
 *(double*)((uint8*)THIS$1 + 336ll) = O$1;
 *(double*)((uint8*)THIS$1 + 344ll) = P$1;
 label$2048:;
}

void _ZN4MAT4C1Ed( struct $4MAT4* THIS$1, double D$1 )
{
 label$2049:;
 _ZN4MAT3C1Ed( (struct $4MAT3*)THIS$1, 0x1.p+0 );
 *(double*)((uint8*)THIS$1 + 224ll) = D$1;
 *(double*)((uint8*)THIS$1 + 232ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 240ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 248ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 256ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 264ll) = D$1;
 *(double*)((uint8*)THIS$1 + 272ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 280ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 288ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 296ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 304ll) = D$1;
 *(double*)((uint8*)THIS$1 + 312ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 320ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 328ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 336ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 344ll) = D$1;
 label$2050:;
}

FBSTRING* _ZN4MAT4cv8FBSTRINGEv( struct $4MAT4* THIS$1 )
{
 FBSTRING TMP$1716$1;
 FBSTRING TMP$1717$1;
 FBSTRING TMP$1718$1;
 FBSTRING TMP$1719$1;
 FBSTRING TMP$1720$1;
 FBSTRING TMP$1721$1;
 FBSTRING TMP$1722$1;
 FBSTRING TMP$1723$1;
 FBSTRING TMP$1724$1;
 FBSTRING TMP$1725$1;
 FBSTRING TMP$1726$1;
 FBSTRING TMP$1727$1;
 FBSTRING TMP$1728$1;
 FBSTRING TMP$1729$1;
 FBSTRING TMP$1730$1;
 FBSTRING TMP$1731$1;
 FBSTRING TMP$1732$1;
 FBSTRING TMP$1733$1;
 FBSTRING TMP$1734$1;
 FBSTRING TMP$1735$1;
 FBSTRING TMP$1736$1;
 FBSTRING TMP$1737$1;
 FBSTRING TMP$1738$1;
 FBSTRING TMP$1739$1;
 FBSTRING TMP$1740$1;
 FBSTRING TMP$1741$1;
 FBSTRING TMP$1742$1;
 FBSTRING TMP$1743$1;
 FBSTRING TMP$1744$1;
 FBSTRING TMP$1745$1;
 FBSTRING TMP$1746$1;
 FBSTRING TMP$1747$1;
 FBSTRING fb$result$1;
 __builtin_memset( &fb$result$1, 0, 24ll );
 label$2051:;
 FBSTRING* vr$2 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 344ll) );
 FBSTRING* vr$4 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 312ll) );
 FBSTRING* vr$6 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 280ll) );
 FBSTRING* vr$8 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 248ll) );
 FBSTRING* vr$10 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 336ll) );
 FBSTRING* vr$12 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 304ll) );
 FBSTRING* vr$14 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 272ll) );
 FBSTRING* vr$16 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 240ll) );
 FBSTRING* vr$18 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 328ll) );
 FBSTRING* vr$20 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 296ll) );
 FBSTRING* vr$22 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 264ll) );
 FBSTRING* vr$24 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 232ll) );
 FBSTRING* vr$26 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 320ll) );
 FBSTRING* vr$28 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 288ll) );
 FBSTRING* vr$30 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 256ll) );
 FBSTRING* vr$32 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 224ll) );
 __builtin_memset( &TMP$1716$1, 0, 24ll );
 FBSTRING* vr$35 = fb_StrConcat( &TMP$1716$1, (void*)"(", 2ll, (void*)vr$32, -1ll );
 __builtin_memset( &TMP$1717$1, 0, 24ll );
 FBSTRING* vr$38 = fb_StrConcat( &TMP$1717$1, (void*)vr$35, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1718$1, 0, 24ll );
 FBSTRING* vr$41 = fb_StrConcat( &TMP$1718$1, (void*)vr$38, -1ll, (void*)vr$30, -1ll );
 __builtin_memset( &TMP$1719$1, 0, 24ll );
 FBSTRING* vr$44 = fb_StrConcat( &TMP$1719$1, (void*)vr$41, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1720$1, 0, 24ll );
 FBSTRING* vr$47 = fb_StrConcat( &TMP$1720$1, (void*)vr$44, -1ll, (void*)vr$28, -1ll );
 __builtin_memset( &TMP$1721$1, 0, 24ll );
 FBSTRING* vr$50 = fb_StrConcat( &TMP$1721$1, (void*)vr$47, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1722$1, 0, 24ll );
 FBSTRING* vr$53 = fb_StrConcat( &TMP$1722$1, (void*)vr$50, -1ll, (void*)vr$26, -1ll );
 __builtin_memset( &TMP$1723$1, 0, 24ll );
 FBSTRING* vr$56 = fb_StrConcat( &TMP$1723$1, (void*)vr$53, -1ll, (void*)"), (", 5ll );
 __builtin_memset( &TMP$1724$1, 0, 24ll );
 FBSTRING* vr$59 = fb_StrConcat( &TMP$1724$1, (void*)vr$56, -1ll, (void*)vr$24, -1ll );
 __builtin_memset( &TMP$1725$1, 0, 24ll );
 FBSTRING* vr$62 = fb_StrConcat( &TMP$1725$1, (void*)vr$59, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1726$1, 0, 24ll );
 FBSTRING* vr$65 = fb_StrConcat( &TMP$1726$1, (void*)vr$62, -1ll, (void*)vr$22, -1ll );
 __builtin_memset( &TMP$1727$1, 0, 24ll );
 FBSTRING* vr$68 = fb_StrConcat( &TMP$1727$1, (void*)vr$65, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1728$1, 0, 24ll );
 FBSTRING* vr$71 = fb_StrConcat( &TMP$1728$1, (void*)vr$68, -1ll, (void*)vr$20, -1ll );
 __builtin_memset( &TMP$1729$1, 0, 24ll );
 FBSTRING* vr$74 = fb_StrConcat( &TMP$1729$1, (void*)vr$71, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1730$1, 0, 24ll );
 FBSTRING* vr$77 = fb_StrConcat( &TMP$1730$1, (void*)vr$74, -1ll, (void*)vr$18, -1ll );
 __builtin_memset( &TMP$1731$1, 0, 24ll );
 FBSTRING* vr$80 = fb_StrConcat( &TMP$1731$1, (void*)vr$77, -1ll, (void*)"), (", 5ll );
 __builtin_memset( &TMP$1732$1, 0, 24ll );
 FBSTRING* vr$83 = fb_StrConcat( &TMP$1732$1, (void*)vr$80, -1ll, (void*)vr$16, -1ll );
 __builtin_memset( &TMP$1733$1, 0, 24ll );
 FBSTRING* vr$86 = fb_StrConcat( &TMP$1733$1, (void*)vr$83, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1734$1, 0, 24ll );
 FBSTRING* vr$89 = fb_StrConcat( &TMP$1734$1, (void*)vr$86, -1ll, (void*)vr$14, -1ll );
 __builtin_memset( &TMP$1735$1, 0, 24ll );
 FBSTRING* vr$92 = fb_StrConcat( &TMP$1735$1, (void*)vr$89, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1736$1, 0, 24ll );
 FBSTRING* vr$95 = fb_StrConcat( &TMP$1736$1, (void*)vr$92, -1ll, (void*)vr$12, -1ll );
 __builtin_memset( &TMP$1737$1, 0, 24ll );
 FBSTRING* vr$98 = fb_StrConcat( &TMP$1737$1, (void*)vr$95, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1738$1, 0, 24ll );
 FBSTRING* vr$101 = fb_StrConcat( &TMP$1738$1, (void*)vr$98, -1ll, (void*)vr$10, -1ll );
 __builtin_memset( &TMP$1739$1, 0, 24ll );
 FBSTRING* vr$104 = fb_StrConcat( &TMP$1739$1, (void*)vr$101, -1ll, (void*)"), (", 5ll );
 __builtin_memset( &TMP$1740$1, 0, 24ll );
 FBSTRING* vr$107 = fb_StrConcat( &TMP$1740$1, (void*)vr$104, -1ll, (void*)vr$8, -1ll );
 __builtin_memset( &TMP$1741$1, 0, 24ll );
 FBSTRING* vr$110 = fb_StrConcat( &TMP$1741$1, (void*)vr$107, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1742$1, 0, 24ll );
 FBSTRING* vr$113 = fb_StrConcat( &TMP$1742$1, (void*)vr$110, -1ll, (void*)vr$6, -1ll );
 __builtin_memset( &TMP$1743$1, 0, 24ll );
 FBSTRING* vr$116 = fb_StrConcat( &TMP$1743$1, (void*)vr$113, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1744$1, 0, 24ll );
 FBSTRING* vr$119 = fb_StrConcat( &TMP$1744$1, (void*)vr$116, -1ll, (void*)vr$4, -1ll );
 __builtin_memset( &TMP$1745$1, 0, 24ll );
 FBSTRING* vr$122 = fb_StrConcat( &TMP$1745$1, (void*)vr$119, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1746$1, 0, 24ll );
 FBSTRING* vr$125 = fb_StrConcat( &TMP$1746$1, (void*)vr$122, -1ll, (void*)vr$2, -1ll );
 __builtin_memset( &TMP$1747$1, 0, 24ll );
 FBSTRING* vr$128 = fb_StrConcat( &TMP$1747$1, (void*)vr$125, -1ll, (void*)")", 2ll );
 fb_StrInit( (void*)&fb$result$1, -1ll, (void*)vr$128, -1ll, 0 );
 goto label$2052;
 label$2052:;
 FBSTRING* vr$131 = fb_StrAllocTempResult( (FBSTRING*)&fb$result$1 );
 return vr$131;
}

void _ZN4MAT413SETPROJECTIONEdddd( struct $4MAT4* THIS$1, double FOV$1, double ASPECTRATIO$1, double NEAR$1, double FAR$1 )
{
 label$2053:;
 double A$1;
 float vr$4 = tanf( (float)(((FOV$1 * 0x1.921FB54442D18p+1) / 0x1.68p+7) * 0x1.p-1) );
 A$1 = 0x1.p+0 / (double)vr$4;
 double B$1;
 B$1 = A$1 / ASPECTRATIO$1;
 double C$1;
 C$1 = (FAR$1 + NEAR$1) / (NEAR$1 - FAR$1);
 double D$1;
 D$1 = ((FAR$1 * NEAR$1) * 0x1.p+1) / (NEAR$1 - FAR$1);
 *(double*)((uint8*)THIS$1 + 224ll) = B$1;
 *(double*)((uint8*)THIS$1 + 232ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 240ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 248ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 256ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 264ll) = B$1;
 *(double*)((uint8*)THIS$1 + 272ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 280ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 288ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 296ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 304ll) = C$1;
 *(double*)((uint8*)THIS$1 + 312ll) = -0x1.p+0;
 *(double*)((uint8*)THIS$1 + 320ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 328ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 336ll) = D$1;
 *(double*)((uint8*)THIS$1 + 344ll) = 0x0p+0;
 label$2054:;
}

void _ZN4MAT410SETORTHO2DEdddd( struct $4MAT4* THIS$1, double X$1, double Y$1, double W$1, double H$1 )
{
 label$2055:;
 _ZN4MAT48SETORTHOEdddddd( THIS$1, X$1, X$1 + W$1, Y$1 + H$1, Y$1, 0x1.p+0, -0x1.p+0 );
 label$2056:;
}

void _ZN4MAT410SETORTHO2DEdddddd( struct $4MAT4* THIS$1, double X$1, double Y$1, double W$1, double H$1, double NEAR$1, double FAR$1 )
{
 label$2057:;
 _ZN4MAT48SETORTHOEdddddd( THIS$1, X$1, X$1 + W$1, Y$1, Y$1 + H$1, NEAR$1, FAR$1 );
 label$2058:;
}

void _ZN4MAT48SETORTHOEdddddd( struct $4MAT4* THIS$1, double LEFT_$1, double RIGHT_$1, double BOTTOM$1, double TOP$1, double NEAR$1, double FAR$1 )
{
 label$2059:;
 double X_ORTH$1;
 X_ORTH$1 = 0x1.p+1 / (RIGHT_$1 - LEFT_$1);
 double Y_ORTH$1;
 Y_ORTH$1 = 0x1.p+1 / (TOP$1 - BOTTOM$1);
 double Z_ORTH$1;
 Z_ORTH$1 = -0x1.p+1 / (FAR$1 - NEAR$1);
 double TX$1;
 TX$1 = -(RIGHT_$1 + LEFT_$1) / (RIGHT_$1 - LEFT_$1);
 double TY$1;
 TY$1 = -(TOP$1 + BOTTOM$1) / (TOP$1 - BOTTOM$1);
 double TZ$1;
 TZ$1 = -(FAR$1 + NEAR$1) / (FAR$1 - NEAR$1);
 *(double*)((uint8*)THIS$1 + 224ll) = X_ORTH$1;
 *(double*)((uint8*)THIS$1 + 232ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 240ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 248ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 256ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 264ll) = Y_ORTH$1;
 *(double*)((uint8*)THIS$1 + 272ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 280ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 288ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 296ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 304ll) = Z_ORTH$1;
 *(double*)((uint8*)THIS$1 + 312ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 320ll) = TX$1;
 *(double*)((uint8*)THIS$1 + 328ll) = TY$1;
 *(double*)((uint8*)THIS$1 + 336ll) = TZ$1;
 *(double*)((uint8*)THIS$1 + 344ll) = 0x1.p+0;
 label$2060:;
}

struct $7VECTOR4* _ZmlR4MAT4R7VECTOR4( struct $7VECTOR4* tmp$1748$1, struct $4MAT4* L$1, struct $7VECTOR4* R$1 )
{
 label$2061:;
 _ZN7VECTOR4C1Edddd( tmp$1748$1, (((*(double*)((uint8*)L$1 + 224ll) * *(double*)((uint8*)R$1 + 40ll)) + (*(double*)((uint8*)L$1 + 256ll) * *(double*)((uint8*)R$1 + 48ll))) + (*(double*)((uint8*)L$1 + 288ll) * *(double*)((uint8*)R$1 + 56ll))) + (*(double*)((uint8*)L$1 + 320ll) * *(double*)((uint8*)R$1 + 64ll)), (((*(double*)((uint8*)L$1 + 232ll) * *(double*)((uint8*)R$1 + 40ll)) + (*(double*)((uint8*)L$1 + 264ll) * *(double*)((uint8*)R$1 + 48ll))) + (*(double*)((uint8*)L$1 + 296ll) * *(double*)((uint8*)R$1 + 56ll))) + (*(double*)((uint8*)L$1 + 328ll) * *(double*)((uint8*)R$1 + 64ll)), (((*(double*)((uint8*)L$1 + 240ll) * *(double*)((uint8*)R$1 + 40ll)) + (*(double*)((uint8*)L$1 + 272ll) * *(double*)((uint8*)R$1 + 48ll))) + (*(double*)((uint8*)L$1 + 304ll) * *(double*)((uint8*)R$1 + 56ll))) + (*(double*)((uint8*)L$1 + 336ll) * *(double*)((uint8*)R$1 + 64ll)), (((*(double*)((uint8*)L$1 + 248ll) * *(double*)((uint8*)R$1 + 40ll)) + (*(double*)((uint8*)L$1 + 280ll) * *(double*)((uint8*)R$1 + 48ll))) + (*(double*)((uint8*)L$1 + 312ll) * *(double*)((uint8*)R$1 + 56ll))) + (*(double*)((uint8*)L$1 + 344ll) * *(double*)((uint8*)R$1 + 64ll)) );
 goto label$2062;
 label$2062:;
 return tmp$1748$1;
}

struct $7VECTOR4* _ZmlR7VECTOR4R4MAT4( struct $7VECTOR4* tmp$1750$1, struct $7VECTOR4* R$1, struct $4MAT4* L$1 )
{
 label$2063:;
 _ZN7VECTOR4C1Edddd( tmp$1750$1, (((*(double*)((uint8*)L$1 + 224ll) * *(double*)((uint8*)R$1 + 40ll)) + (*(double*)((uint8*)L$1 + 232ll) * *(double*)((uint8*)R$1 + 48ll))) + (*(double*)((uint8*)L$1 + 240ll) * *(double*)((uint8*)R$1 + 56ll))) + (*(double*)((uint8*)L$1 + 248ll) * *(double*)((uint8*)R$1 + 64ll)), (((*(double*)((uint8*)L$1 + 256ll) * *(double*)((uint8*)R$1 + 40ll)) + (*(double*)((uint8*)L$1 + 264ll) * *(double*)((uint8*)R$1 + 48ll))) + (*(double*)((uint8*)L$1 + 272ll) * *(double*)((uint8*)R$1 + 56ll))) + (*(double*)((uint8*)L$1 + 280ll) * *(double*)((uint8*)R$1 + 64ll)), (((*(double*)((uint8*)L$1 + 288ll) * *(double*)((uint8*)R$1 + 40ll)) + (*(double*)((uint8*)L$1 + 296ll) * *(double*)((uint8*)R$1 + 48ll))) + (*(double*)((uint8*)L$1 + 304ll) * *(double*)((uint8*)R$1 + 56ll))) + (*(double*)((uint8*)L$1 + 312ll) * *(double*)((uint8*)R$1 + 64ll)), (((*(double*)((uint8*)L$1 + 320ll) * *(double*)((uint8*)R$1 + 40ll)) + (*(double*)((uint8*)L$1 + 328ll) * *(double*)((uint8*)R$1 + 48ll))) + (*(double*)((uint8*)L$1 + 336ll) * *(double*)((uint8*)R$1 + 56ll))) + (*(double*)((uint8*)L$1 + 344ll) * *(double*)((uint8*)R$1 + 64ll)) );
 goto label$2064;
 label$2064:;
 return tmp$1750$1;
}

struct $4MAT4 _ZmlR4MAT4S0_( struct $4MAT4* L$1, struct $4MAT4* R$1 )
{
 struct $4MAT4 fb$result$1;
 label$2065:;
 _ZN4MAT4C1Edddddddddddddddd( &fb$result$1, (((*(double*)((uint8*)L$1 + 224ll) * *(double*)((uint8*)R$1 + 224ll)) + (*(double*)((uint8*)L$1 + 256ll) * *(double*)((uint8*)R$1 + 232ll))) + (*(double*)((uint8*)L$1 + 288ll) * *(double*)((uint8*)R$1 + 240ll))) + (*(double*)((uint8*)L$1 + 320ll) * *(double*)((uint8*)R$1 + 248ll)), (((*(double*)((uint8*)L$1 + 232ll) * *(double*)((uint8*)R$1 + 224ll)) + (*(double*)((uint8*)L$1 + 264ll) * *(double*)((uint8*)R$1 + 232ll))) + (*(double*)((uint8*)L$1 + 296ll) * *(double*)((uint8*)R$1 + 240ll))) + (*(double*)((uint8*)L$1 + 328ll) * *(double*)((uint8*)R$1 + 248ll)), (((*(double*)((uint8*)L$1 + 240ll) * *(double*)((uint8*)R$1 + 224ll)) + (*(double*)((uint8*)L$1 + 272ll) * *(double*)((uint8*)R$1 + 232ll))) + (*(double*)((uint8*)L$1 + 304ll) * *(double*)((uint8*)R$1 + 240ll))) + (*(double*)((uint8*)L$1 + 336ll) * *(double*)((uint8*)R$1 + 248ll)), (((*(double*)((uint8*)L$1 + 248ll) * *(double*)((uint8*)R$1 + 224ll)) + (*(double*)((uint8*)L$1 + 280ll) * *(double*)((uint8*)R$1 + 232ll))) + (*(double*)((uint8*)L$1 + 312ll) * *(double*)((uint8*)R$1 + 240ll))) + (*(double*)((uint8*)L$1 + 344ll) * *(double*)((uint8*)R$1 + 248ll)), (((*(double*)((uint8*)L$1 + 224ll) * *(double*)((uint8*)R$1 + 256ll)) + (*(double*)((uint8*)L$1 + 256ll) * *(double*)((uint8*)R$1 + 264ll))) + (*(double*)((uint8*)L$1 + 288ll) * *(double*)((uint8*)R$1 + 272ll))) + (*(double*)((uint8*)L$1 + 320ll) * *(double*)((uint8*)R$1 + 280ll)), (((*(double*)((uint8*)L$1 + 232ll) * *(double*)((uint8*)R$1 + 256ll)) + (*(double*)((uint8*)L$1 + 264ll) * *(double*)((uint8*)R$1 + 264ll))) + (*(double*)((uint8*)L$1 + 296ll) * *(double*)((uint8*)R$1 + 272ll))) + (*(double*)((uint8*)L$1 + 328ll) * *(double*)((uint8*)R$1 + 280ll)), (((*(double*)((uint8*)L$1 + 240ll) * *(double*)((uint8*)R$1 + 256ll)) + (*(double*)((uint8*)L$1 + 272ll) * *(double*)((uint8*)R$1 + 264ll))) + (*(double*)((uint8*)L$1 + 304ll) * *(double*)((uint8*)R$1 + 272ll))) + (*(double*)((uint8*)L$1 + 336ll) * *(double*)((uint8*)R$1 + 280ll)), (((*(double*)((uint8*)L$1 + 248ll) * *(double*)((uint8*)R$1 + 256ll)) + (*(double*)((uint8*)L$1 + 280ll) * *(double*)((uint8*)R$1 + 264ll))) + (*(double*)((uint8*)L$1 + 312ll) * *(double*)((uint8*)R$1 + 272ll))) + (*(double*)((uint8*)L$1 + 344ll) * *(double*)((uint8*)R$1 + 280ll)), (((*(double*)((uint8*)L$1 + 224ll) * *(double*)((uint8*)R$1 + 288ll)) + (*(double*)((uint8*)L$1 + 256ll) * *(double*)((uint8*)R$1 + 296ll))) + (*(double*)((uint8*)L$1 + 288ll) * *(double*)((uint8*)R$1 + 304ll))) + (*(double*)((uint8*)L$1 + 320ll) * *(double*)((uint8*)R$1 + 312ll)), (((*(double*)((uint8*)L$1 + 232ll) * *(double*)((uint8*)R$1 + 288ll)) + (*(double*)((uint8*)L$1 + 264ll) * *(double*)((uint8*)R$1 + 296ll))) + (*(double*)((uint8*)L$1 + 296ll) * *(double*)((uint8*)R$1 + 304ll))) + (*(double*)((uint8*)L$1 + 328ll) * *(double*)((uint8*)R$1 + 312ll)), (((*(double*)((uint8*)L$1 + 240ll) * *(double*)((uint8*)R$1 + 288ll)) + (*(double*)((uint8*)L$1 + 272ll) * *(double*)((uint8*)R$1 + 296ll))) + (*(double*)((uint8*)L$1 + 304ll) * *(double*)((uint8*)R$1 + 304ll))) + (*(double*)((uint8*)L$1 + 336ll) * *(double*)((uint8*)R$1 + 312ll)), (((*(double*)((uint8*)L$1 + 248ll) * *(double*)((uint8*)R$1 + 288ll)) + (*(double*)((uint8*)L$1 + 280ll) * *(double*)((uint8*)R$1 + 296ll))) + (*(double*)((uint8*)L$1 + 312ll) * *(double*)((uint8*)R$1 + 304ll))) + (*(double*)((uint8*)L$1 + 344ll) * *(double*)((uint8*)R$1 + 312ll)), (((*(double*)((uint8*)L$1 + 224ll) * *(double*)((uint8*)R$1 + 320ll)) + (*(double*)((uint8*)L$1 + 256ll) * *(double*)((uint8*)R$1 + 328ll))) + (*(double*)((uint8*)L$1 + 288ll) * *(double*)((uint8*)R$1 + 336ll))) + (*(double*)((uint8*)L$1 + 320ll) * *(double*)((uint8*)R$1 + 344ll)), (((*(double*)((uint8*)L$1 + 232ll) * *(double*)((uint8*)R$1 + 320ll)) + (*(double*)((uint8*)L$1 + 264ll) * *(double*)((uint8*)R$1 + 328ll))) + (*(double*)((uint8*)L$1 + 296ll) * *(double*)((uint8*)R$1 + 336ll))) + (*(double*)((uint8*)L$1 + 328ll) * *(double*)((uint8*)R$1 + 344ll)), (((*(double*)((uint8*)L$1 + 240ll) * *(double*)((uint8*)R$1 + 320ll)) + (*(double*)((uint8*)L$1 + 272ll) * *(double*)((uint8*)R$1 + 328ll))) + (*(double*)((uint8*)L$1 + 304ll) * *(double*)((uint8*)R$1 + 336ll))) + (*(double*)((uint8*)L$1 + 336ll) * *(double*)((uint8*)R$1 + 344ll)), (((*(double*)((uint8*)L$1 + 248ll) * *(double*)((uint8*)R$1 + 320ll)) + (*(double*)((uint8*)L$1 + 280ll) * *(double*)((uint8*)R$1 + 328ll))) + (*(double*)((uint8*)L$1 + 312ll) * *(double*)((uint8*)R$1 + 336ll))) + (*(double*)((uint8*)L$1 + 344ll) * *(double*)((uint8*)R$1 + 344ll)) );
 goto label$2066;
 label$2066:;
 return fb$result$1;
}

struct $4MAT2 _Z14MATRIXCOMPMULTR4MAT2S0_( struct $4MAT2* X$1, struct $4MAT2* Y$1 )
{
 struct $4MAT2 fb$result$1;
 label$2067:;
 struct $4MAT2 Z$1;
 _ZN4MAT2C1Ed( &Z$1, 0x1.p+0 );
 double* PZ$1;
 PZ$1 = (double*)((uint8*)&Z$1 + 120ll);
 double* PX$1;
 PX$1 = (double*)((uint8*)X$1 + 120ll);
 double* PY$1;
 PY$1 = (double*)((uint8*)Y$1 + 120ll);
 int64 I2$1;
 __builtin_memset( &I2$1, 0, 8ll );
 {
  int64 I$2;
  I$2 = 0ll;
  label$2072:;
  {
   int64 IJ$3;
   IJ$3 = I2$1;
   {
    int64 J$4;
    J$4 = 0ll;
    label$2076:;
    {
     *(double*)((uint8*)PZ$1 + (IJ$3 << (3ll & 63ll))) = *(double*)((uint8*)PX$1 + (IJ$3 << (3ll & 63ll))) * *(double*)((uint8*)PY$1 + (IJ$3 << (3ll & 63ll)));
     IJ$3 = IJ$3 + 1ll;
    }
    label$2074:;
    J$4 = J$4 + 1ll;
    label$2073:;
    if( J$4 <= 1ll ) goto label$2076;
    label$2075:;
   }
   I2$1 = I2$1 + 2ll;
  }
  label$2070:;
  I$2 = I$2 + 1ll;
  label$2069:;
  if( I$2 <= 1ll ) goto label$2072;
  label$2071:;
 }
 _ZN4MAT2C1ERKS_( &fb$result$1, (struct $4MAT2*)&Z$1 );
 goto label$2068;
 label$2068:;
 return fb$result$1;
}

struct $4MAT3 _Z14MATRIXCOMPMULTR4MAT3S0_( struct $4MAT3* X$1, struct $4MAT3* Y$1 )
{
 struct $4MAT3 fb$result$1;
 label$2077:;
 struct $4MAT3 Z$1;
 _ZN4MAT3C1Ed( &Z$1, 0x1.p+0 );
 double* PZ$1;
 PZ$1 = (double*)((uint8*)&Z$1 + 152ll);
 double* PX$1;
 PX$1 = (double*)((uint8*)X$1 + 152ll);
 double* PY$1;
 PY$1 = (double*)((uint8*)Y$1 + 152ll);
 int64 I3$1;
 __builtin_memset( &I3$1, 0, 8ll );
 {
  int64 I$2;
  I$2 = 0ll;
  label$2082:;
  {
   int64 IJ$3;
   IJ$3 = I3$1;
   {
    int64 J$4;
    J$4 = 0ll;
    label$2086:;
    {
     *(double*)((uint8*)PZ$1 + (IJ$3 << (3ll & 63ll))) = *(double*)((uint8*)PX$1 + (IJ$3 << (3ll & 63ll))) * *(double*)((uint8*)PY$1 + (IJ$3 << (3ll & 63ll)));
     IJ$3 = IJ$3 + 1ll;
    }
    label$2084:;
    J$4 = J$4 + 1ll;
    label$2083:;
    if( J$4 <= 1ll ) goto label$2086;
    label$2085:;
   }
   I3$1 = I3$1 + 3ll;
  }
  label$2080:;
  I$2 = I$2 + 1ll;
  label$2079:;
  if( I$2 <= 1ll ) goto label$2082;
  label$2081:;
 }
 _ZN4MAT3C1ERKS_( &fb$result$1, (struct $4MAT3*)&Z$1 );
 goto label$2078;
 label$2078:;
 return fb$result$1;
}

struct $4MAT4 _Z14MATRIXCOMPMULTR4MAT4S0_( struct $4MAT4* X$1, struct $4MAT4* Y$1 )
{
 struct $4MAT4 fb$result$1;
 label$2087:;
 struct $4MAT4 Z$1;
 _ZN4MAT4C1Ed( &Z$1, 0x1.p+0 );
 double* PZ$1;
 PZ$1 = (double*)((uint8*)&Z$1 + 224ll);
 double* PX$1;
 PX$1 = (double*)((uint8*)X$1 + 224ll);
 double* PY$1;
 PY$1 = (double*)((uint8*)Y$1 + 224ll);
 int64 I4$1;
 __builtin_memset( &I4$1, 0, 8ll );
 {
  int64 I$2;
  I$2 = 0ll;
  label$2092:;
  {
   int64 IJ$3;
   IJ$3 = I4$1;
   {
    int64 J$4;
    J$4 = 0ll;
    label$2096:;
    {
     *(double*)((uint8*)PZ$1 + (IJ$3 << (3ll & 63ll))) = *(double*)((uint8*)PX$1 + (IJ$3 << (3ll & 63ll))) * *(double*)((uint8*)PY$1 + (IJ$3 << (3ll & 63ll)));
     IJ$3 = IJ$3 + 1ll;
    }
    label$2094:;
    J$4 = J$4 + 1ll;
    label$2093:;
    if( J$4 <= 1ll ) goto label$2096;
    label$2095:;
   }
   I4$1 = I4$1 + 4ll;
  }
  label$2090:;
  I$2 = I$2 + 1ll;
  label$2089:;
  if( I$2 <= 1ll ) goto label$2092;
  label$2091:;
 }
 _ZN4MAT4C1ERKS_( &fb$result$1, (struct $4MAT4*)&Z$1 );
 goto label$2088;
 label$2088:;
 return fb$result$1;
}

void _ZN9SAMPLER2D4LOCKEv( struct $9SAMPLER2D* THIS$1 )
{
 label$2097:;
 fb_GfxLock( );
 label$2098:;
}

void _ZN9SAMPLER2D6UNLOCKEv( struct $9SAMPLER2D* THIS$1 )
{
 label$2099:;
 fb_GfxUnlock( -1, -1 );
 label$2100:;
}

void _ZN9SAMPLER2D10WRITEPIXELEllj( struct $9SAMPLER2D* THIS$1, int64 X$1, int64 Y$1, uint32 XCOLOR$1 )
{
 label$2101:;
 uint32* PIXEL$1;
 PIXEL$1 = (uint32*)((uint8*)((uint8*)*(void**)((uint8*)THIS$1 + 16ll) + (Y$1 * (int64)*(int32*)((uint8*)THIS$1 + 12ll))) + (X$1 * (int64)*(int32*)((uint8*)THIS$1 + 8ll)));
 *PIXEL$1 = XCOLOR$1;
 label$2102:;
}

uint32 _ZN9SAMPLER2D9READPIXELEll( struct $9SAMPLER2D* THIS$1, int64 X$1, int64 Y$1 )
{
 uint32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$2103:;
 uint32* PIXEL$1;
 PIXEL$1 = (uint32*)((uint8*)((uint8*)*(void**)((uint8*)THIS$1 + 16ll) + (Y$1 * (int64)*(int32*)((uint8*)THIS$1 + 12ll))) + (X$1 * (int64)*(int32*)((uint8*)THIS$1 + 8ll)));
 fb$result$1 = *PIXEL$1;
 goto label$2104;
 label$2104:;
 return fb$result$1;
}

void _ZN9SAMPLER2D6CREATEEv( struct $9SAMPLER2D* THIS$1 )
{
 void* TMP$1753$1;
 int32 TMP$1754$1;
 label$2105:;
 void* vr$3 = fb_GfxImageCreate( *(int32*)THIS$1, *(int32*)((uint8*)THIS$1 + 4ll), 0u, *(int32*)((uint8*)THIS$1 + 8ll), -2147483648u );
 *(void**)((uint8*)THIS$1 + 16ll) = vr$3;
 TMP$1754$1 = 0;
 TMP$1753$1 = (void*)0ull;
 fb_GfxImageInfo32( (void*)*(void**)((uint8*)THIS$1 + 16ll), (int32*)THIS$1, (int32*)((uint8*)THIS$1 + 4ll), (int32*)((uint8*)THIS$1 + 8ll), (int32*)((uint8*)THIS$1 + 12ll), &TMP$1753$1, &TMP$1754$1 );
 label$2106:;
}

void _ZN9SAMPLER2D7DESTROYEv( struct $9SAMPLER2D* THIS$1 )
{
 label$2107:;
 fb_GfxImageDestroy( (void*)*(void**)((uint8*)THIS$1 + 16ll) );
 label$2108:;
}

void _ZN9SAMPLER2D4LOADER8FBSTRING( struct $9SAMPLER2D* THIS$1, FBSTRING* FILE$1 )
{
 label$2109:;
 fb_GfxBload( (FBSTRING*)FILE$1, *(void**)((uint8*)THIS$1 + 16ll), (void*)0ull );
 label$2110:;
}

void _ZN9SAMPLER2D4SAVEER8FBSTRING( struct $9SAMPLER2D* THIS$1, FBSTRING* FILE$1 )
{
 label$2111:;
 fb_GfxBsave( (FBSTRING*)FILE$1, (void*)*(void**)((uint8*)THIS$1 + 16ll), 0u, (void*)0ull );
 label$2112:;
}

void _ZN9SAMPLER2D4FILLEj( struct $9SAMPLER2D* THIS$1, uint32 XCOLOR$1 )
{
 label$2113:;
 _ZN9SAMPLER2D11FASTFILLBOXEllllj( THIS$1, 0ll, 0ll, (int64)*(int32*)THIS$1, (int64)*(int32*)((uint8*)THIS$1 + 4ll), XCOLOR$1 );
 label$2114:;
}

void _ZN9SAMPLER2D11FASTFILLBOXEllllj( struct $9SAMPLER2D* THIS$1, int64 X1$1, int64 Y1$1, int64 X2$1, int64 Y2$1, uint32 XCOLOR$1 )
{
 label$2115:;
 int64 X$1;
 __builtin_memset( &X$1, 0, 8ll );
 int64 Y$1;
 __builtin_memset( &Y$1, 0, 8ll );
 {
  Y$1 = Y1$1;
  int64 TMP$1755$2;
  TMP$1755$2 = Y2$1;
  goto label$2117;
  label$2120:;
  {
   {
    X$1 = X1$1;
    int64 TMP$1756$4;
    TMP$1756$4 = X2$1;
    goto label$2121;
    label$2124:;
    {
     _ZN9SAMPLER2D10WRITEPIXELEllj( THIS$1, X$1, Y$1, XCOLOR$1 );
    }
    label$2122:;
    X$1 = X$1 + 1ll;
    label$2121:;
    if( X$1 <= TMP$1756$4 ) goto label$2124;
    label$2123:;
   }
  }
  label$2118:;
  Y$1 = Y$1 + 1ll;
  label$2117:;
  if( Y$1 <= TMP$1755$2 ) goto label$2120;
  label$2119:;
 }
 label$2116:;
}

struct $9SAMPLER2D _ZN9SAMPLER2D15CREATESAMPLER2DEv( struct $9SAMPLER2D* THIS$1 )
{
 int32 TMP$1757$1;
 int32 TMP$1758$1;
 struct $9SAMPLER2D fb$result$1;
 __builtin_memset( &fb$result$1, 0, 24ll );
 label$2125:;
 struct $9SAMPLER2D RESULT$1;
 __builtin_memset( &RESULT$1, 0, 24ll );
 FBSTRING* vr$2 = fb_StrAllocTempDescZEx( (uint8*)"", 0ll );
 TMP$1758$1 = 0;
 TMP$1757$1 = 0;
 fb_GfxScreenInfo32( (int32*)&RESULT$1, (int32*)((uint8*)&RESULT$1 + 4ll), &TMP$1757$1, (int32*)((uint8*)&RESULT$1 + 8ll), (int32*)((uint8*)&RESULT$1 + 12ll), &TMP$1758$1, vr$2 );
 void* vr$12 = fb_GfxImageCreate( *(int32*)THIS$1, *(int32*)((uint8*)THIS$1 + 4ll), 0u, *(int32*)((uint8*)THIS$1 + 8ll), -2147483648u );
 *(void**)((uint8*)&RESULT$1 + 16ll) = vr$12;
 __builtin_memcpy( &fb$result$1, &RESULT$1, 24 );
 goto label$2126;
 label$2126:;
 return fb$result$1;
}

double _ZN9SAMPLER2D6SAMPLEEdd( struct $9SAMPLER2D* THIS$1, double X$1, double Y$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2127:;
 int64 IX$1;
 IX$1 = ((int64)__builtin_nearbyint( __builtin_floor( (X$1 * (double)(int64)*(int32*)THIS$1) ) ));
 int64 IY$1;
 IY$1 = ((int64)__builtin_nearbyint( __builtin_floor( (Y$1 * (double)(int64)*(int32*)((uint8*)THIS$1 + 4ll)) ) ));
 uint32 vr$13 = _ZN9SAMPLER2D9READPIXELEll( THIS$1, IX$1, IY$1 );
 fb$result$1 = (double)vr$13;
 goto label$2128;
 label$2128:;
 return fb$result$1;
}

void _ZN5C64_TC1Ev( struct $5C64_T* THIS$1 )
{
 uint64 TMP$1815$1;
 int64 TMP$1816$1;
 int64 TMP$1817$1;
 struct $12SYSTEM_BUS_T* TMP$1819$1;
 struct $7CPU6510* TMP$1821$1;
 label$2151:;
 _ZN4MAT4C1Ed( (struct $4MAT4*)THIS$1, 0x1.p+0 );
 __builtin_memset( (struct $12SYSTEM_BUS_T**)((uint8*)THIS$1 + 352ll), 0, 8ll );
 __builtin_memset( (struct $7CPU6510**)((uint8*)THIS$1 + 360ll), 0, 8ll );
 *(uint8*)NIBBLES$ = (uint8)0u;
 *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) = (uint8)1u;
 *(uint8*)((int64)(uint8*)NIBBLES$ + 257ll) = (uint8)5u;
 *(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) = (uint8)8u;
 label$2153:;
 *(uint8*)((uint8*)NIBBLES$ + (int64)I$) = (uint8)I$;
 I$ = I$ + (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 fb_Locate( (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll), (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll), -1, 0, 0 );
 FBSTRING* vr$12 = fb_StrAllocTempDescZEx( (uint8*)"NIBBLES: ", 9ll );
 fb_PrintString( 0, (FBSTRING*)vr$12, 0 );
 if( I$ >= (uint64)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) & 63ll)) ) goto label$2154;
 TMP$1815$1 = I$;
 goto label$2163;
 label$2154:;
 TMP$1815$1 = I$ - (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 label$2163:;
 fb_PrintULongint( 0, TMP$1815$1, 1 );
 if( I$ > (uint64)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) & 63ll)) ) goto label$2156;
 goto label$2153;
 label$2156:;
 I$ = (uint64)*(uint8*)NIBBLES$;
 label$2157:;
 static int32 I$1;
 static int32 C$1;
 fb_GfxScreenRes( (int32)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) & 63ll)), (int32)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)), (int32)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)), (int32)*(uint8*)NIBBLES$, 64, 0 );
 fb_Cls( -65536 );
 FBSTRING* vr$41 = fb_StrAllocTempDescZEx( (uint8*)"", 0ll );
 TMP$1817$1 = 0ll;
 TMP$1816$1 = 0ll;
 fb_GfxScreenInfo64( (int64*)&SCR_W$, (int64*)&SCR_H$, (int64*)&IMGDATA$, (int64*)&PITCH$, &TMP$1816$1, &TMP$1817$1, vr$41 );
 void* vr$51 = fb_GfxImageCreate( (int32)SCR_W$, (int32)SCR_H$, (uint32)*(uint8*)NIBBLES$, (int32)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)), 0 );
 BGIMAGE$ = vr$51;
 void* vr$59 = fb_GfxImageCreate( (int32)SCR_W$, (int32)SCR_H$, (uint32)*(uint8*)NIBBLES$, (int32)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)), 0 );
 FGIMAGE$ = vr$59;
 void* vr$67 = fb_GfxImageCreate( (int32)SCR_W$, (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll), (uint32)*(uint8*)NIBBLES$, (int32)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)), 0 );
 RASTER$ = vr$67;
 void* vr$75 = fb_GfxImageCreate( (int32)SCR_W$, (int32)SCR_H$, (uint32)*(uint8*)NIBBLES$, (int32)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)), 0 );
 _RENDER$ = vr$75;
 I$1 = (uint64)*(uint8*)NIBBLES$;
 label$2158:;
 fb_DataReadInt( &C$1 );
 typedef void (*_ZN5C64_T8tmp$1818Eiiii)( int32, int32, int32, int32 );
 ((_ZN5C64_T8tmp$1818Eiiii)&fb_GfxPalette)( (int32)(uint64)I$1, (int32)(uint64)C$1, (int32)-(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll), (int32)-(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 I$1 = (uint64)I$1 + (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 if( (uint64)I$1 >= (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) ) goto label$2160;
 goto label$2158;
 label$2160:;
 void* vr$88 = malloc( 16869744ull );
 TMP$1819$1 = (struct $12SYSTEM_BUS_T*)vr$88;
 if( TMP$1819$1 == (struct $12SYSTEM_BUS_T*)0ull ) goto label$2161;
 _ZN12SYSTEM_BUS_TC1Ev( TMP$1819$1 );
 label$2161:;
 *(struct $12SYSTEM_BUS_T**)((uint8*)THIS$1 + 352ll) = TMP$1819$1;
 void* vr$90 = malloc( 14728ull );
 TMP$1821$1 = (struct $7CPU6510*)vr$90;
 if( TMP$1821$1 == (struct $7CPU6510*)0ull ) goto label$2162;
 _ZN7CPU6510C1EP12SYSTEM_BUS_T( TMP$1821$1, *(struct $12SYSTEM_BUS_T**)((uint8*)THIS$1 + 352ll) );
 label$2162:;
 *(struct $7CPU6510**)((uint8*)THIS$1 + 360ll) = TMP$1821$1;
 label$2152:;
}

void _ZN5C64_TD1Ev( struct $5C64_T* THIS$1 )
{
 label$2164:;
 if( *(struct $7CPU6510**)((uint8*)THIS$1 + 360ll) == (struct $7CPU6510*)0ull ) goto label$2166;
 _ZN7CPU6510D1Ev( *(struct $7CPU6510**)((uint8*)THIS$1 + 360ll) );
 free( *(void**)((uint8*)THIS$1 + 360ll) );
 label$2166:;
 if( *(struct $12SYSTEM_BUS_T**)((uint8*)THIS$1 + 352ll) == (struct $12SYSTEM_BUS_T*)0ull ) goto label$2167;
 _ZN12SYSTEM_BUS_TD1Ev( *(struct $12SYSTEM_BUS_T**)((uint8*)THIS$1 + 352ll) );
 free( *(void**)((uint8*)THIS$1 + 352ll) );
 label$2167:;
 fb_GfxImageDestroy( (void*)BGIMAGE$ );
 fb_GfxImageDestroy( (void*)FGIMAGE$ );
 fb_GfxImageDestroy( (void*)RASTER$ );
 fb_GfxImageDestroy( (void*)_RENDER$ );
 fb_Sleep( 1 );
 label$2165:;
}

void _ZN12SYSTEM_BUS_TC1Ev( struct $12SYSTEM_BUS_T* THIS$1 )
{
 FBSTRING TMP$1824$1;
 FBSTRING TMP$1825$1;
 FBSTRING TMP$1826$1;
 FBSTRING TMP$1827$1;
 FBSTRING TMP$1828$1;
 FBSTRING TMP$1829$1;
 FBSTRING TMP$1830$1;
 FBSTRING TMP$1831$1;
 FBSTRING TMP$1832$1;
 FBSTRING TMP$1833$1;
 FBSTRING TMP$1834$1;
 FBSTRING TMP$1835$1;
 FBSTRING TMP$1836$1;
 FBSTRING TMP$1837$1;
 FBSTRING TMP$1838$1;
 FBSTRING TMP$1839$1;
 FBSTRING TMP$1840$1;
 FBSTRING TMP$1841$1;
 FBSTRING TMP$1842$1;
 FBSTRING TMP$1843$1;
 FBSTRING TMP$1844$1;
 FBSTRING TMP$1845$1;
 FBSTRING TMP$1846$1;
 FBSTRING TMP$1847$1;
 FBSTRING TMP$1848$1;
 FBSTRING TMP$1849$1;
 FBSTRING TMP$1850$1;
 FBSTRING TMP$1851$1;
 FBSTRING TMP$1852$1;
 FBSTRING TMP$1853$1;
 FBSTRING TMP$1854$1;
 FBSTRING TMP$1855$1;
 FBSTRING TMP$1856$1;
 FBSTRING TMP$1857$1;
 FBSTRING TMP$1858$1;
 label$2168:;
 __builtin_memset( (double*)THIS$1, 0, 131072ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 131072ll), 0, 131072ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 262144ll), 0, 16588808ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 16850952ll), 0, 8192ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 16859144ll), 0, 2880ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 16862024ll), 0, 2880ll );
 _ZN9RAYTRACERC1Ev( (struct $9RAYTRACER*)((uint8*)THIS$1 + 16864904ll) );
 __builtin_memset( (uint8*)((uint8*)THIS$1 + 16865648ll), 0, 2048ll );
 __builtin_memset( (uint8*)((uint8*)THIS$1 + 16867696ll), 0, 2048ll );
 SYS_OFFSET$ = (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll));
 fb_DataRestore( (void*)label$2171 );
 label$2172:;
 fb_DataReadLongint( (int64*)&C$ );
 *(double*)((int64)(double*)MEM64$ + ((int64)I$ << (3ll & 63ll))) = (double)(uint64)C$;
 I$ = I$ + (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 if( I$ > (uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$2174;
 goto label$2172;
 label$2174:;
 I$ = (uint64)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll));
 label$2175:;
 *(double*)((int64)(double*)MEM64$ + ((int64)I$ << (3ll & 63ll))) = (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll));
 I$ = I$ + (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 if( I$ > (uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$2177;
 goto label$2175;
 label$2177:;
 I$ = (uint64)*(uint8*)NIBBLES$;
 label$2178:;
 *(double*)((uint8*)((uint8*)THIS$1 + ((int64)I$ << (3ll & 63ll))) + 16859144ll) = __builtin_sin( (double)((((int64)__builtin_nearbyint( ((double)I$ * 0x1.921FB54442D18p+1) / (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) )) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) );
 *(double*)((uint8*)((uint8*)THIS$1 + ((int64)I$ << (3ll & 63ll))) + 16862024ll) = __builtin_cos( (double)((((int64)__builtin_nearbyint( ((double)I$ * 0x1.921FB54442D18p+1) / (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) )) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) );
 I$ = I$ + (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 if( I$ > (uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$2180;
 goto label$2178;
 label$2180:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)), (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)), (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)), (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)), (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)), (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8264p+15, (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)), (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)), (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)), (double)*(uint8*)NIBBLES$ );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)), (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)), (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)), (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) );
 I$ = (uint64)*(uint8*)NIBBLES$;
 uint8 TMP$1;
 __builtin_memset( &TMP$1, 0, 1ll );
 FBSTRING* vr$241 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) );
 FBSTRING* vr$247 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) );
 FBSTRING* vr$253 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
 FBSTRING* vr$259 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) );
 FBSTRING* vr$265 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
 FBSTRING* vr$269 = fb_CHR( 1, (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll) );
 FBSTRING* vr$275 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) );
 FBSTRING* vr$281 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) );
 FBSTRING* vr$287 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
 FBSTRING* vr$291 = fb_CHR( 1, (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll) );
 FBSTRING* vr$297 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) );
 FBSTRING* vr$303 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 FBSTRING* vr$309 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) );
 FBSTRING* vr$315 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) );
 FBSTRING* vr$321 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) );
 FBSTRING* vr$327 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) );
 FBSTRING* vr$333 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) );
 FBSTRING* vr$339 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) );
 FBSTRING* vr$343 = fb_CHR( 1, (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll) );
 FBSTRING* vr$349 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) );
 FBSTRING* vr$355 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) );
 FBSTRING* vr$361 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) );
 __builtin_memset( &TMP$1824$1, 0, 24ll );
 FBSTRING* vr$364 = fb_StrConcat( &TMP$1824$1, (void*)vr$361, -1ll, (void*)vr$355, -1ll );
 __builtin_memset( &TMP$1825$1, 0, 24ll );
 FBSTRING* vr$367 = fb_StrConcat( &TMP$1825$1, (void*)vr$364, -1ll, (void*)vr$349, -1ll );
 __builtin_memset( &TMP$1826$1, 0, 24ll );
 FBSTRING* vr$370 = fb_StrConcat( &TMP$1826$1, (void*)vr$367, -1ll, (void*)vr$343, -1ll );
 __builtin_memset( &TMP$1827$1, 0, 24ll );
 FBSTRING* vr$373 = fb_StrConcat( &TMP$1827$1, (void*)vr$370, -1ll, (void*)vr$339, -1ll );
 __builtin_memset( &TMP$1828$1, 0, 24ll );
 FBSTRING* vr$376 = fb_StrConcat( &TMP$1828$1, (void*)vr$373, -1ll, (void*)vr$333, -1ll );
 __builtin_memset( &TMP$1829$1, 0, 24ll );
 FBSTRING* vr$379 = fb_StrConcat( &TMP$1829$1, (void*)vr$376, -1ll, (void*)vr$327, -1ll );
 __builtin_memset( &TMP$1830$1, 0, 24ll );
 FBSTRING* vr$382 = fb_StrConcat( &TMP$1830$1, (void*)vr$379, -1ll, (void*)vr$321, -1ll );
 __builtin_memset( &TMP$1831$1, 0, 24ll );
 FBSTRING* vr$385 = fb_StrConcat( &TMP$1831$1, (void*)vr$382, -1ll, (void*)vr$315, -1ll );
 __builtin_memset( &TMP$1832$1, 0, 24ll );
 FBSTRING* vr$388 = fb_StrConcat( &TMP$1832$1, (void*)vr$385, -1ll, (void*)vr$309, -1ll );
 __builtin_memset( &TMP$1833$1, 0, 24ll );
 FBSTRING* vr$391 = fb_StrConcat( &TMP$1833$1, (void*)vr$388, -1ll, (void*)vr$303, -1ll );
 __builtin_memset( &TMP$1834$1, 0, 24ll );
 FBSTRING* vr$394 = fb_StrConcat( &TMP$1834$1, (void*)vr$391, -1ll, (void*)vr$297, -1ll );
 __builtin_memset( &TMP$1835$1, 0, 24ll );
 FBSTRING* vr$397 = fb_StrConcat( &TMP$1835$1, (void*)vr$394, -1ll, (void*)vr$291, -1ll );
 __builtin_memset( &TMP$1836$1, 0, 24ll );
 FBSTRING* vr$400 = fb_StrConcat( &TMP$1836$1, (void*)vr$397, -1ll, (void*)vr$287, -1ll );
 __builtin_memset( &TMP$1837$1, 0, 24ll );
 FBSTRING* vr$403 = fb_StrConcat( &TMP$1837$1, (void*)vr$400, -1ll, (void*)vr$281, -1ll );
 __builtin_memset( &TMP$1838$1, 0, 24ll );
 FBSTRING* vr$406 = fb_StrConcat( &TMP$1838$1, (void*)vr$403, -1ll, (void*)vr$275, -1ll );
 __builtin_memset( &TMP$1839$1, 0, 24ll );
 FBSTRING* vr$409 = fb_StrConcat( &TMP$1839$1, (void*)vr$406, -1ll, (void*)vr$269, -1ll );
 __builtin_memset( &TMP$1840$1, 0, 24ll );
 FBSTRING* vr$412 = fb_StrConcat( &TMP$1840$1, (void*)vr$409, -1ll, (void*)vr$265, -1ll );
 __builtin_memset( &TMP$1841$1, 0, 24ll );
 FBSTRING* vr$415 = fb_StrConcat( &TMP$1841$1, (void*)vr$412, -1ll, (void*)vr$259, -1ll );
 __builtin_memset( &TMP$1842$1, 0, 24ll );
 FBSTRING* vr$418 = fb_StrConcat( &TMP$1842$1, (void*)vr$415, -1ll, (void*)vr$253, -1ll );
 __builtin_memset( &TMP$1843$1, 0, 24ll );
 FBSTRING* vr$421 = fb_StrConcat( &TMP$1843$1, (void*)vr$418, -1ll, (void*)vr$247, -1ll );
 __builtin_memset( &TMP$1844$1, 0, 24ll );
 FBSTRING* vr$424 = fb_StrConcat( &TMP$1844$1, (void*)vr$421, -1ll, (void*)vr$241, -1ll );
 fb_FileOpen( (FBSTRING*)vr$424, 0u, 0u, 0u, (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll), 0 );
 label$2181:;
 fb_FileGetLarge( 1, 0ll, (void*)&TMP$1, 1ull );
 *(double*)((uint8*)((uint8*)THIS$1 + ((int64)I$ << (3ll & 63ll))) + 131072ll) = (double)TMP$1;
 I$ = I$ + (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 if( I$ > (uint64)(((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$2183;
 goto label$2181;
 label$2183:;
 I$ = (uint64)*(uint8*)NIBBLES$;
 label$2184:;
 fb_FileGetLarge( 1, 0ll, (void*)&TMP$1, 1ull );
 *(double*)((uint8*)THIS$1 + ((int64)I$ << (3ll & 63ll))) = (double)TMP$1;
 I$ = I$ + (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 if( I$ > (uint64)(((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$2186;
 goto label$2184;
 label$2186:;
 fb_FileClose( (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 FBSTRING* vr$471 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) );
 FBSTRING* vr$477 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) );
 FBSTRING* vr$483 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) );
 FBSTRING* vr$489 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) );
 FBSTRING* vr$495 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
 FBSTRING* vr$501 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) );
 FBSTRING* vr$507 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) );
 FBSTRING* vr$513 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) );
 FBSTRING* vr$519 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) );
 FBSTRING* vr$525 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
 FBSTRING* vr$531 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 FBSTRING* vr$537 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) );
 FBSTRING* vr$543 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) );
 FBSTRING* vr$549 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) );
 FBSTRING* vr$555 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) );
 __builtin_memset( &TMP$1845$1, 0, 24ll );
 FBSTRING* vr$558 = fb_StrConcat( &TMP$1845$1, (void*)vr$555, -1ll, (void*)vr$549, -1ll );
 __builtin_memset( &TMP$1846$1, 0, 24ll );
 FBSTRING* vr$561 = fb_StrConcat( &TMP$1846$1, (void*)vr$558, -1ll, (void*)vr$543, -1ll );
 __builtin_memset( &TMP$1847$1, 0, 24ll );
 FBSTRING* vr$564 = fb_StrConcat( &TMP$1847$1, (void*)vr$561, -1ll, (void*)vr$537, -1ll );
 __builtin_memset( &TMP$1848$1, 0, 24ll );
 FBSTRING* vr$567 = fb_StrConcat( &TMP$1848$1, (void*)vr$564, -1ll, (void*)vr$531, -1ll );
 __builtin_memset( &TMP$1849$1, 0, 24ll );
 FBSTRING* vr$570 = fb_StrConcat( &TMP$1849$1, (void*)vr$567, -1ll, (void*)vr$525, -1ll );
 __builtin_memset( &TMP$1850$1, 0, 24ll );
 FBSTRING* vr$573 = fb_StrConcat( &TMP$1850$1, (void*)vr$570, -1ll, (void*)vr$519, -1ll );
 __builtin_memset( &TMP$1851$1, 0, 24ll );
 FBSTRING* vr$576 = fb_StrConcat( &TMP$1851$1, (void*)vr$573, -1ll, (void*)vr$513, -1ll );
 __builtin_memset( &TMP$1852$1, 0, 24ll );
 FBSTRING* vr$579 = fb_StrConcat( &TMP$1852$1, (void*)vr$576, -1ll, (void*)vr$507, -1ll );
 __builtin_memset( &TMP$1853$1, 0, 24ll );
 FBSTRING* vr$582 = fb_StrConcat( &TMP$1853$1, (void*)vr$579, -1ll, (void*)vr$501, -1ll );
 __builtin_memset( &TMP$1854$1, 0, 24ll );
 FBSTRING* vr$585 = fb_StrConcat( &TMP$1854$1, (void*)vr$582, -1ll, (void*)vr$495, -1ll );
 __builtin_memset( &TMP$1855$1, 0, 24ll );
 FBSTRING* vr$588 = fb_StrConcat( &TMP$1855$1, (void*)vr$585, -1ll, (void*)vr$489, -1ll );
 __builtin_memset( &TMP$1856$1, 0, 24ll );
 FBSTRING* vr$591 = fb_StrConcat( &TMP$1856$1, (void*)vr$588, -1ll, (void*)vr$483, -1ll );
 __builtin_memset( &TMP$1857$1, 0, 24ll );
 FBSTRING* vr$594 = fb_StrConcat( &TMP$1857$1, (void*)vr$591, -1ll, (void*)vr$477, -1ll );
 __builtin_memset( &TMP$1858$1, 0, 24ll );
 FBSTRING* vr$597 = fb_StrConcat( &TMP$1858$1, (void*)vr$594, -1ll, (void*)vr$471, -1ll );
 fb_FileOpen( (FBSTRING*)vr$597, 0u, 0u, 0u, (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll), 0 );
 I$ = (uint64)*(uint8*)NIBBLES$;
 label$2187:;
 fb_FileGetLarge( 1, 0ll, (void*)&TMP$1, 1ull );
 *(double*)((uint8*)((uint8*)THIS$1 + ((int64)I$ << (3ll & 63ll))) + 262144ll) = (double)TMP$1;
 I$ = I$ + (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 if( I$ > (uint64)(((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$2189;
 goto label$2187;
 label$2189:;
 {
  uint64 TIMES$2;
  TIMES$2 = 0ull;
  label$2193:;
  {
   fb_FileSeek( (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll), (int32)*(uint8*)NIBBLES$ );
   I$ = (uint64)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll));
   label$2194:;
   fb_FileGetLarge( 1, 0ll, (void*)&TMP$1, 1ull );
   *(double*)((uint8*)((uint8*)THIS$1 + ((int64)I$ << (3ll & 63ll))) + 262144ll) = (double)TMP$1;
   I$ = I$ + (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
   if( I$ > (uint64)(((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$2196;
   goto label$2194;
   label$2196:;
  }
  label$2191:;
  TIMES$2 = TIMES$2 + 1ull;
  label$2190:;
  if( TIMES$2 <= 506ull ) goto label$2193;
  label$2192:;
 }
 fb_FileClose( (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (double)*(uint8*)NIBBLES$, __builtin_inf() );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll), __builtin_inf() );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (double)(((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)), __builtin_inf() );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (double)(((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)), __builtin_inf() );
 FBSTRING* vr$674 = fb_StrAllocTempDescZEx( (uint8*)"", 0ll );
 fb_GfxPaint( (void*)0ull, (float)*(uint8*)NIBBLES$, (float)*(uint8*)NIBBLES$, (uint32)(((((int64)(uint32)*(uint8*)NIBBLES$ << (16ll & 63ll)) | ((int64)(uint32)*(uint8*)NIBBLES$ << (8ll & 63ll))) | (int64)(uint32)*(uint8*)NIBBLES$) | ((int64)(uint32)(uint8)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) << (24ll & 63ll))), 0u, (FBSTRING*)vr$674, 0, 1073741828 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (double)(((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)), (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (double)(((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)), (double)*(uint8*)NIBBLES$ );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (double)(((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)), (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (double)(((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)), (double)*(uint8*)NIBBLES$ );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (double)(((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)), (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (double)(((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)), (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) );
 FBSTRING MEM$1;
 FBSTRING* vr$805 = fb_CHR( 1, (int64)*(uint8*)NIBBLES$ );
 fb_StrInit( (void*)&MEM$1, -1ll, (void*)vr$805, -1ll, 0 );
 I$ = (uint64)*(uint8*)NIBBLES$;
 FBSTRING* vr$813 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
 fb_StrAssign( (void*)&MEM$1, -1ll, (void*)vr$813, -1ll, 0 );
 FBSTRING* vr$820 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$820, -1ll, 0 );
 FBSTRING* vr$827 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$827, -1ll, 0 );
 FBSTRING* vr$834 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$834, -1ll, 0 );
 FBSTRING* vr$841 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$841, -1ll, 0 );
 I$ = (uint64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 label$2197:;
 FBSTRING* vr$850 = fb_StrMid( (FBSTRING*)&MEM$1, (int64)I$, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) );
 uint32 vr$851 = fb_ASC( (FBSTRING*)vr$850, 1ll );
 *(double*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) + I$) << (3ll & 63ll))) = (double)vr$851;
 if( ((int64)-(*(double*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) + I$) << (3ll & 63ll))) > (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) & (int64)-(*(double*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) + I$) << (3ll & 63ll))) < (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)))) == 0ll ) goto label$2199;
 goto label$2200;
 label$2199:;
 I$ = I$ + (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 int64 vr$905 = fb_StrLen( (void*)&MEM$1, -1ll );
 if( I$ > (uint64)vr$905 ) goto label$2202;
 goto label$2197;
 label$2202:;
 goto label$2203;
 label$2200:;
 *(double*)((uint8*)THIS$1 + ((int64)((uint64)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + I$) << (3ll & 63ll))) = *(double*)((uint8*)((uint8*)THIS$1 + ((int64)((uint64)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + I$) << (3ll & 63ll))) + (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) << (3ll & 63ll)));
 goto label$2197;
 label$2203:;
 FBSTRING* vr$937 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) );
 fb_StrAssign( (void*)&MEM$1, -1ll, (void*)vr$937, -1ll, 0 );
 FBSTRING* vr$944 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$944, -1ll, 0 );
 FBSTRING* vr$951 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$951, -1ll, 0 );
 FBSTRING* vr$958 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$958, -1ll, 0 );
 I$ = (uint64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 label$2204:;
 FBSTRING* vr$963 = fb_StrMid( (FBSTRING*)&MEM$1, (int64)I$, (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 uint32 vr$964 = fb_ASC( (FBSTRING*)vr$963, 1ll );
 *(double*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) + I$) << (3ll & 63ll))) = (double)vr$964;
 if( ((int64)-(*(double*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) + I$) << (3ll & 63ll))) > (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) & (int64)-(*(double*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) + I$) << (3ll & 63ll))) < (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)))) == 0ll ) goto label$2206;
 goto label$2207;
 label$2206:;
 I$ = I$ + (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 int64 vr$1018 = fb_StrLen( (void*)&MEM$1, -1ll );
 if( I$ > (uint64)vr$1018 ) goto label$2209;
 goto label$2204;
 label$2209:;
 goto label$2210;
 label$2207:;
 *(double*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) + I$) << (3ll & 63ll))) = *(double*)((uint8*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) + I$) << (3ll & 63ll))) + (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) << (3ll & 63ll)));
 goto label$2204;
 label$2210:;
 *(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) << (3ll & 63ll))) = (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll));
 *(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) << (3ll & 63ll))) = (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll));
 *(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) << (3ll & 63ll))) = (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll));
 FBSTRING* vr$1101 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) );
 fb_StrAssign( (void*)&MEM$1, -1ll, (void*)vr$1101, -1ll, 0 );
 FBSTRING* vr$1108 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1108, -1ll, 0 );
 FBSTRING* vr$1115 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1115, -1ll, 0 );
 FBSTRING* vr$1122 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1122, -1ll, 0 );
 FBSTRING* vr$1129 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1129, -1ll, 0 );
 FBSTRING* vr$1136 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1136, -1ll, 0 );
 FBSTRING* vr$1143 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1143, -1ll, 0 );
 FBSTRING* vr$1150 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1150, -1ll, 0 );
 FBSTRING* vr$1157 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1157, -1ll, 0 );
 I$ = (uint64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 label$2211:;
 FBSTRING* vr$1162 = fb_StrMid( (FBSTRING*)&MEM$1, (int64)I$, (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 uint32 vr$1163 = fb_ASC( (FBSTRING*)vr$1162, 1ll );
 *(double*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) + I$) << (3ll & 63ll))) = (double)vr$1163;
 if( ((int64)-(*(double*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) + I$) << (3ll & 63ll))) > (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) & (int64)-(*(double*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) + I$) << (3ll & 63ll))) < (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)))) == 0ll ) goto label$2213;
 goto label$2214;
 label$2213:;
 I$ = I$ + (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 int64 vr$1217 = fb_StrLen( (void*)&MEM$1, -1ll );
 if( I$ > (uint64)vr$1217 ) goto label$2216;
 goto label$2211;
 label$2216:;
 goto label$2217;
 label$2214:;
 *(double*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) + I$) << (3ll & 63ll))) = *(double*)((uint8*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) + I$) << (3ll & 63ll))) + (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) << (3ll & 63ll)));
 goto label$2211;
 label$2217:;
 *(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) << (3ll & 63ll))) = (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll));
 FBSTRING* vr$1268 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
 fb_StrAssign( (void*)&MEM$1, -1ll, (void*)vr$1268, -1ll, 0 );
 FBSTRING* vr$1275 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1275, -1ll, 0 );
 FBSTRING* vr$1282 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1282, -1ll, 0 );
 FBSTRING* vr$1289 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1289, -1ll, 0 );
 FBSTRING* vr$1296 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1296, -1ll, 0 );
 I$ = (uint64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 label$2218:;
 FBSTRING* vr$1301 = fb_StrMid( (FBSTRING*)&MEM$1, (int64)I$, (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 uint32 vr$1302 = fb_ASC( (FBSTRING*)vr$1301, 1ll );
 *(double*)((uint8*)THIS$1 + ((int64)((uint64)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + I$) << (3ll & 63ll))) = (double)vr$1302;
 if( ((int64)-(*(double*)((uint8*)THIS$1 + ((int64)((uint64)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + I$) << (3ll & 63ll))) > (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) & (int64)-(*(double*)((uint8*)THIS$1 + ((int64)((uint64)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + I$) << (3ll & 63ll))) < (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)))) == 0ll ) goto label$2220;
 goto label$2221;
 label$2220:;
 FBSTRING* vr$1349 = fb_StrMid( (FBSTRING*)&MEM$1, (int64)I$, (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 uint32 vr$1350 = fb_ASC( (FBSTRING*)vr$1349, 1ll );
 *(double*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) + I$) << (3ll & 63ll))) = (double)vr$1350;
 if( ((int64)-(*(double*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) + I$) << (3ll & 63ll))) > (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) & (int64)-(*(double*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) + I$) << (3ll & 63ll))) < (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll))) == 0ll ) goto label$2223;
 goto label$2224;
 label$2223:;
 I$ = I$ + (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 int64 vr$1402 = fb_StrLen( (void*)&MEM$1, -1ll );
 if( I$ > (uint64)vr$1402 ) goto label$2226;
 goto label$2218;
 label$2226:;
 goto label$2227;
 label$2221:;
 *(double*)((uint8*)THIS$1 + ((int64)((uint64)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + I$) << (3ll & 63ll))) = *(double*)((uint8*)((uint8*)THIS$1 + ((int64)((uint64)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + I$) << (3ll & 63ll))) + (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) << (3ll & 63ll)));
 goto label$2218;
 label$2224:;
 *(double*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) + I$) << (3ll & 63ll))) = *(double*)((uint8*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) + I$) << (3ll & 63ll))) + (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) << (3ll & 63ll)));
 goto label$2218;
 label$2227:;
 *(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) << (3ll & 63ll))) = (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll));
 *(double*)((uint8*)THIS$1 + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) << (3ll & 63ll))) = (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll));
 *(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) << (3ll & 63ll))) = (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll));
 *(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) << (3ll & 63ll))) = (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll));
 *(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) << (3ll & 63ll))) = (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll));
 FBSTRING* vr$1541 = fb_CHR( 1, (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll) );
 fb_StrAssign( (void*)&MEM$1, -1ll, (void*)vr$1541, -1ll, 0 );
 FBSTRING* vr$1548 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1548, -1ll, 0 );
 FBSTRING* vr$1555 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1555, -1ll, 0 );
 FBSTRING* vr$1562 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1562, -1ll, 0 );
 FBSTRING* vr$1567 = fb_CHR( 1, (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1567, -1ll, 0 );
 FBSTRING* vr$1574 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1574, -1ll, 0 );
 FBSTRING* vr$1581 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1581, -1ll, 0 );
 FBSTRING* vr$1588 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1588, -1ll, 0 );
 FBSTRING* vr$1595 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1595, -1ll, 0 );
 FBSTRING* vr$1602 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1602, -1ll, 0 );
 FBSTRING* vr$1609 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1609, -1ll, 0 );
 I$ = (uint64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 label$2228:;
 FBSTRING* vr$1614 = fb_StrMid( (FBSTRING*)&MEM$1, (int64)I$, (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 uint32 vr$1615 = fb_ASC( (FBSTRING*)vr$1614, 1ll );
 *(double*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) + I$) << (3ll & 63ll))) = (double)vr$1615;
 if( ((int64)-(*(double*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) + I$) << (3ll & 63ll))) > (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) & (int64)-(*(double*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) + I$) << (3ll & 63ll))) < (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)))) == 0ll ) goto label$2230;
 goto label$2231;
 label$2230:;
 label$2231:;
 I$ = I$ + (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 int64 vr$1665 = fb_StrLen( (void*)&MEM$1, -1ll );
 if( I$ > (uint64)vr$1665 ) goto label$2233;
 goto label$2228;
 label$2233:;
 goto label$2234;
 label$2235:;
 *(double*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) + I$) << (3ll & 63ll))) = *(double*)((uint8*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) + I$) << (3ll & 63ll))) + (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) << (3ll & 63ll)));
 goto label$2231;
 label$2234:;
 uint64 vr$1699 = fb_GetMemAvail( ((int32)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((int64)*(uint8*)NIBBLES$ << (3ll & 63ll))) )) );
 double vr$1706 = pow( (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)), (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) );
 FBSTRING* vr$1709 = fb_ULongintToStr( vr$1699 / ((uint64)__builtin_nearbyint( vr$1706 )) );
 fb_StrAssign( (void*)&MEM$1, -1ll, (void*)vr$1709, -1ll, 0 );
 int64 vr$1712 = fb_StrLen( (void*)&MEM$1, -1ll );
 if( vr$1712 != (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$2237;
 goto label$2238;
 label$2237:;
 int64 vr$1715 = fb_StrLen( (void*)&MEM$1, -1ll );
 if( vr$1715 != (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) ) goto label$2240;
 goto label$2241;
 label$2240:;
 label$2238:;
 uint32 vr$1718 = fb_ASC( (FBSTRING*)&MEM$1, 1ll );
 *(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) = (double)vr$1718;
 *(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) << (3ll & 63ll))) = (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll));
 *(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) << (3ll & 63ll))) = (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll));
 goto label$2242;
 label$2241:;
 FBSTRING* vr$1768 = fb_StrMid( (FBSTRING*)&MEM$1, (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll), (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 uint32 vr$1769 = fb_ASC( (FBSTRING*)vr$1768, 1ll );
 *(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) = (double)vr$1769;
 FBSTRING* vr$1785 = fb_StrMid( (FBSTRING*)&MEM$1, (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll), (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 uint32 vr$1786 = fb_ASC( (FBSTRING*)vr$1785, 1ll );
 *(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) << (3ll & 63ll))) = (double)vr$1786;
 *(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) << (3ll & 63ll))) = (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll));
 *(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) << (3ll & 63ll))) = (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll));
 FBSTRING* vr$1836 = fb_CHR( 1, (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll) );
 fb_StrAssign( (void*)&MEM$1, -1ll, (void*)vr$1836, -1ll, 0 );
 FBSTRING* vr$1843 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1843, -1ll, 0 );
 FBSTRING* vr$1850 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1850, -1ll, 0 );
 FBSTRING* vr$1857 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1857, -1ll, 0 );
 FBSTRING* vr$1862 = fb_CHR( 1, (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1862, -1ll, 0 );
 FBSTRING* vr$1869 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1869, -1ll, 0 );
 FBSTRING* vr$1876 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1876, -1ll, 0 );
 FBSTRING* vr$1883 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1883, -1ll, 0 );
 FBSTRING* vr$1890 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1890, -1ll, 0 );
 FBSTRING* vr$1897 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1897, -1ll, 0 );
 FBSTRING* vr$1904 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1904, -1ll, 0 );
 I$ = (uint64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 label$2243:;
 FBSTRING* vr$1909 = fb_StrMid( (FBSTRING*)&MEM$1, (int64)I$, (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 uint32 vr$1910 = fb_ASC( (FBSTRING*)vr$1909, 1ll );
 *(double*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) + I$) << (3ll & 63ll))) = (double)vr$1910;
 I$ = I$ + (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 int64 vr$1927 = fb_StrLen( (void*)&MEM$1, -1ll );
 if( I$ > (uint64)vr$1927 ) goto label$2245;
 goto label$2243;
 label$2245:;
 *(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) << (3ll & 63ll))) = (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll));
 *(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) << (3ll & 63ll))) = (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll));
 goto label$2242;
 label$2242:;
 *(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) << (3ll & 63ll))) = (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll));
 *(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) << (3ll & 63ll))) = (double)*(uint8*)NIBBLES$;
 *(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) << (3ll & 63ll))) = (double)*(uint8*)NIBBLES$;
 fb_StrDelete( (FBSTRING*)&MEM$1 );
 label$2169:;
}

void _ZN12SYSTEM_BUS_TD1Ev( struct $12SYSTEM_BUS_T* THIS$1 )
{
 label$2246:;
 label$2247:;
 _ZN9RAYTRACERD1Ev( (struct $9RAYTRACER*)((uint8*)THIS$1 + 16864904ll) );
}

double _ZN12SYSTEM_BUS_T7LENGTH6ER7VECTOR2( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR2* P$1 )
{
 struct $7VECTOR2 TMP$1859$1;
 struct $7VECTOR2 TMP$1860$1;
 struct $7VECTOR2 TMP$1861$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2248:;
 struct $7VECTOR2* vr$2 = _ZmlR7VECTOR2S0_( &TMP$1859$1, P$1, P$1 );
 struct $7VECTOR2* vr$4 = _ZmlR7VECTOR2S0_( &TMP$1860$1, vr$2, P$1 );
 _ZN7VECTOR2aSERS_( P$1, vr$4 );
 struct $7VECTOR2* vr$6 = _ZmlR7VECTOR2S0_( &TMP$1861$1, P$1, P$1 );
 _ZN7VECTOR2aSERS_( P$1, vr$6 );
 double vr$10 = _ZN12SYSTEM_BUS_T5K_POWEdd( THIS$1, *(double*)P$1 + *(double*)((uint8*)P$1 + 8ll), 0x1.5555555555555p-3 );
 fb$result$1 = vr$10;
 goto label$2249;
 label$2249:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7LENGTH8ER7VECTOR2( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR2* P$1 )
{
 struct $7VECTOR2 TMP$1862$1;
 struct $7VECTOR2 TMP$1863$1;
 struct $7VECTOR2 TMP$1864$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2250:;
 struct $7VECTOR2* vr$2 = _ZmlR7VECTOR2S0_( &TMP$1862$1, P$1, P$1 );
 _ZN7VECTOR2aSERS_( P$1, vr$2 );
 struct $7VECTOR2* vr$4 = _ZmlR7VECTOR2S0_( &TMP$1863$1, P$1, P$1 );
 _ZN7VECTOR2aSERS_( P$1, vr$4 );
 struct $7VECTOR2* vr$6 = _ZmlR7VECTOR2S0_( &TMP$1864$1, P$1, P$1 );
 _ZN7VECTOR2aSERS_( P$1, vr$6 );
 double vr$10 = _ZN12SYSTEM_BUS_T5K_POWEdd( THIS$1, *(double*)P$1 + *(double*)((uint8*)P$1 + 8ll), 0x1.p-3 );
 fb$result$1 = vr$10;
 goto label$2251;
 label$2251:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7SDPLANEER7VECTOR3( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2252:;
 fb$result$1 = *(double*)((uint8*)P$1 + 24ll);
 goto label$2253;
 label$2253:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7SDPLANEER7VECTOR3S1_d( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR3* N$1, double H$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2254:;
 double vr$1 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, P$1, N$1 );
 fb$result$1 = vr$1 + H$1;
 goto label$2255;
 label$2255:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8SDSPHEREER7VECTOR3d( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, double S$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2256:;
 double vr$1 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR3( THIS$1, (struct $7VECTOR3*)P$1 );
 fb$result$1 = vr$1 - S$1;
 goto label$2257;
 label$2257:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5SDBOXER7VECTOR3S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR3* B$1 )
{
 struct $7VECTOR3 TMP$1865$1;
 struct $7VECTOR3 TMP$1866$1;
 struct $7VECTOR3 TMP$1867$1;
 double TMP$1868$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2258:;
 struct $7VECTOR3 Q$1;
 struct $7VECTOR3* vr$2 = _Zv13absRK7VECTOR3( &TMP$1865$1, (struct $7VECTOR3*)P$1 );
 struct $7VECTOR3* vr$4 = _ZmiR7VECTOR3S0_( &TMP$1866$1, vr$2, B$1 );
 _ZN7VECTOR3C1ERS_( &Q$1, vr$4 );
 TMP$1868$1 = 0x0p+0;
 struct $7VECTOR3* vr$9 = _ZN12SYSTEM_BUS_T5K_MAXER7VECTOR3Rd( &TMP$1867$1, THIS$1, &Q$1, &TMP$1868$1 );
 double vr$10 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR3( THIS$1, (struct $7VECTOR3*)vr$9 );
 double vr$11 = _ZN12SYSTEM_BUS_T5K_MAXEdd( THIS$1, *(double*)((uint8*)&Q$1 + 24ll), *(double*)((uint8*)&Q$1 + 32ll) );
 double vr$12 = _ZN12SYSTEM_BUS_T5K_MAXEdd( THIS$1, *(double*)((uint8*)&Q$1 + 16ll), vr$11 );
 double vr$13 = _ZN12SYSTEM_BUS_T5K_MINEdd( THIS$1, vr$12, 0x0p+0 );
 fb$result$1 = vr$10 + vr$13;
 goto label$2259;
 label$2259:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T11SDELLIPSOIDER7VECTOR3S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR3* R$1 )
{
 struct $7VECTOR3 TMP$1869$1;
 struct $7VECTOR3 TMP$1870$1;
 struct $7VECTOR3 TMP$1871$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2260:;
 double K0$1;
 struct $7VECTOR3* vr$2 = _ZdvR7VECTOR3S0_( &TMP$1869$1, P$1, R$1 );
 double vr$3 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR3( THIS$1, (struct $7VECTOR3*)vr$2 );
 K0$1 = vr$3;
 double K1$1;
 struct $7VECTOR3* vr$5 = _ZmlR7VECTOR3S0_( &TMP$1870$1, R$1, R$1 );
 struct $7VECTOR3* vr$7 = _ZdvR7VECTOR3S0_( &TMP$1871$1, P$1, vr$5 );
 double vr$8 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR3( THIS$1, (struct $7VECTOR3*)vr$7 );
 K1$1 = vr$8;
 fb$result$1 = (K0$1 * (K0$1 + -0x1.p+0)) / K1$1;
 goto label$2261;
 label$2261:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T11SDELLIPSOIDER7VECTOR3d( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, double R$1 )
{
 struct $7VECTOR3 TMP$1872$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2262:;
 double D$1;
 struct $7VECTOR3* vr$2 = _ZdvR7VECTOR3d( &TMP$1872$1, P$1, R$1 );
 double vr$3 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR3( THIS$1, (struct $7VECTOR3*)vr$2 );
 D$1 = vr$3 + -0x1.p+0;
 fb$result$1 = D$1 * R$1;
 goto label$2263;
 label$2263:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T10SDROUNDBOXER7VECTOR3S1_d( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR3* B$1, double R$1 )
{
 struct $7VECTOR3 TMP$1873$1;
 struct $7VECTOR3 TMP$1874$1;
 struct $7VECTOR3 TMP$1875$1;
 double TMP$1876$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2264:;
 struct $7VECTOR3 Q$1;
 struct $7VECTOR3* vr$2 = _Zv13absRK7VECTOR3( &TMP$1873$1, (struct $7VECTOR3*)P$1 );
 struct $7VECTOR3* vr$4 = _ZmiR7VECTOR3S0_( &TMP$1874$1, vr$2, B$1 );
 _ZN7VECTOR3C1ERS_( &Q$1, vr$4 );
 TMP$1876$1 = 0x0p+0;
 struct $7VECTOR3* vr$9 = _ZN12SYSTEM_BUS_T5K_MAXER7VECTOR3Rd( &TMP$1875$1, THIS$1, &Q$1, &TMP$1876$1 );
 double vr$10 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR3( THIS$1, (struct $7VECTOR3*)vr$9 );
 double vr$11 = _ZN12SYSTEM_BUS_T5K_MAXEdd( THIS$1, *(double*)((uint8*)&Q$1 + 24ll), *(double*)((uint8*)&Q$1 + 32ll) );
 double vr$12 = _ZN12SYSTEM_BUS_T5K_MAXEdd( THIS$1, *(double*)((uint8*)&Q$1 + 16ll), vr$11 );
 double vr$13 = _ZN12SYSTEM_BUS_T5K_MINEdd( THIS$1, vr$12, 0x0p+0 );
 fb$result$1 = (vr$10 + vr$13) - R$1;
 goto label$2265;
 label$2265:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T10UDROUNDBOXER7VECTOR3S1_d( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR3* B$1, double R$1 )
{
 struct $7VECTOR3 TMP$1877$1;
 struct $7VECTOR3 TMP$1878$1;
 struct $7VECTOR3 TMP$1879$1;
 double TMP$1880$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2266:;
 TMP$1880$1 = 0x0p+0;
 struct $7VECTOR3* vr$3 = _Zv13absRK7VECTOR3( &TMP$1877$1, (struct $7VECTOR3*)P$1 );
 struct $7VECTOR3* vr$5 = _ZmiR7VECTOR3S0_( &TMP$1878$1, vr$3, B$1 );
 struct $7VECTOR3* vr$7 = _ZN12SYSTEM_BUS_T5K_MAXER7VECTOR3Rd( &TMP$1879$1, THIS$1, vr$5, &TMP$1880$1 );
 double vr$8 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR3( THIS$1, (struct $7VECTOR3*)vr$7 );
 fb$result$1 = vr$8 - R$1;
 goto label$2267;
 label$2267:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7SDTORUSER7VECTOR3R7VECTOR2( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR2* T$1 )
{
 struct $7VECTOR2 TMP$1882$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2268:;
 struct $7VECTOR2 Q$1;
 struct $7VECTOR2* vr$3 = _ZN7VECTOR32XZEv( &TMP$1882$1, P$1 );
 double vr$4 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR2( THIS$1, (struct $7VECTOR2*)vr$3 );
 _ZN7VECTOR2C1Edd( &Q$1, vr$4 - *(double*)T$1, *(double*)((uint8*)P$1 + 24ll) );
 double vr$9 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR2( THIS$1, (struct $7VECTOR2*)&Q$1 );
 fb$result$1 = vr$9 - *(double*)((uint8*)T$1 + 8ll);
 goto label$2269;
 label$2269:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T13SDCAPPEDTORUSER7VECTOR3R7VECTOR2dd( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR2* SC$1, double RA$1, double RB$1 )
{
 struct $7VECTOR2 TMP$1883$1;
 struct $7VECTOR2 TMP$1884$1;
 double TMP$1885$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2270:;
 *(double*)((uint8*)P$1 + 16ll) = __builtin_fabs( *(double*)((uint8*)P$1 + 16ll) );
 double K$1;
 if( (*(double*)((uint8*)SC$1 + 8ll) * *(double*)((uint8*)P$1 + 16ll)) <= (*(double*)SC$1 * *(double*)((uint8*)P$1 + 24ll)) ) goto label$2272;
 struct $7VECTOR2* vr$11 = _ZN7VECTOR32XYEv( &TMP$1883$1, P$1 );
 double vr$12 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR2S1_( THIS$1, vr$11, SC$1 );
 TMP$1885$1 = vr$12;
 goto label$2273;
 label$2272:;
 struct $7VECTOR2* vr$14 = _ZN7VECTOR32XYEv( &TMP$1884$1, P$1 );
 double vr$15 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR2( THIS$1, (struct $7VECTOR2*)vr$14 );
 TMP$1885$1 = vr$15;
 label$2273:;
 K$1 = TMP$1885$1;
 double vr$16 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, P$1, P$1 );
 double vr$22 = _ZN12SYSTEM_BUS_T6K_SQRTEd( THIS$1, (vr$16 + (RA$1 * RA$1)) - ((RA$1 * K$1) * 0x1.p+1) );
 fb$result$1 = vr$22 - RB$1;
 goto label$2271;
 label$2271:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T9SDTORUS82ER7VECTOR3R7VECTOR2( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR2* T$1 )
{
 struct $7VECTOR2 TMP$1887$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2274:;
 struct $7VECTOR2 Q$1;
 struct $7VECTOR2* vr$3 = _ZN7VECTOR32XZEv( &TMP$1887$1, P$1 );
 double vr$4 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR2( THIS$1, (struct $7VECTOR2*)vr$3 );
 _ZN7VECTOR2C1Edd( &Q$1, vr$4 - *(double*)T$1, *(double*)((uint8*)P$1 + 24ll) );
 double vr$9 = _ZN12SYSTEM_BUS_T7LENGTH8ER7VECTOR2( THIS$1, &Q$1 );
 fb$result$1 = vr$9 - *(double*)((uint8*)T$1 + 8ll);
 goto label$2275;
 label$2275:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T9SDTORUS88ER7VECTOR3R7VECTOR2( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR2* T$1 )
{
 struct $7VECTOR2 TMP$1889$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2276:;
 struct $7VECTOR2 Q$1;
 struct $7VECTOR2* vr$3 = _ZN7VECTOR32XZEv( &TMP$1889$1, P$1 );
 double vr$4 = _ZN12SYSTEM_BUS_T7LENGTH8ER7VECTOR2( THIS$1, vr$3 );
 _ZN7VECTOR2C1Edd( &Q$1, vr$4 - *(double*)T$1, *(double*)((uint8*)P$1 + 24ll) );
 double vr$9 = _ZN12SYSTEM_BUS_T7LENGTH8ER7VECTOR2( THIS$1, &Q$1 );
 fb$result$1 = vr$9 - *(double*)((uint8*)T$1 + 8ll);
 goto label$2277;
 label$2277:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6SDLINKER7VECTOR3ddd( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, double LE$1, double R1$1, double R2$1 )
{
 struct $7VECTOR2 TMP$1891$1;
 struct $7VECTOR2 TMP$1892$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2278:;
 struct $7VECTOR3 Q$1;
 double vr$5 = _ZN12SYSTEM_BUS_T5K_MAXEdd( THIS$1, __builtin_fabs( *(double*)((uint8*)P$1 + 24ll) ) - LE$1, 0x0p+0 );
 _ZN7VECTOR3C1Eddd( &Q$1, *(double*)((uint8*)P$1 + 16ll), vr$5, *(double*)((uint8*)P$1 + 32ll) );
 struct $7VECTOR2* vr$10 = _ZN7VECTOR32XYEv( &TMP$1892$1, &Q$1 );
 double vr$11 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR2( THIS$1, (struct $7VECTOR2*)vr$10 );
 _ZN7VECTOR2C1Edd( &TMP$1891$1, vr$11 - R1$1, *(double*)((uint8*)&Q$1 + 32ll) );
 double vr$15 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR2( THIS$1, (struct $7VECTOR2*)&TMP$1891$1 );
 fb$result$1 = vr$15 - R2$1;
 goto label$2279;
 label$2279:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T10SDHEXPRISMER7VECTOR3R7VECTOR2( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR2* H$1 )
{
 struct $7VECTOR3 TMP$1893$1;
 struct $7VECTOR2 TMP$1894$1;
 struct $7VECTOR2 TMP$1895$1;
 double TMP$1896$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2280:;
 struct $7VECTOR3 Q$1;
 struct $7VECTOR3* vr$2 = _Zv13absRK7VECTOR3( &TMP$1893$1, (struct $7VECTOR3*)P$1 );
 _ZN7VECTOR3C1ERS_( &Q$1, vr$2 );
 double D1$1;
 D1$1 = *(double*)((uint8*)&Q$1 + 32ll) - *(double*)((uint8*)H$1 + 8ll);
 double D2$1;
 double vr$9 = _ZN12SYSTEM_BUS_T5K_MAXEdd( THIS$1, (*(double*)((uint8*)&Q$1 + 16ll) * 0x1.BB67A0F9096BCp-1) + (*(double*)((uint8*)&Q$1 + 24ll) * 0x1.p-1), *(double*)((uint8*)&Q$1 + 24ll) );
 D2$1 = vr$9 - *(double*)H$1;
 TMP$1896$1 = 0x0p+0;
 _ZN7VECTOR2C1Edd( &TMP$1894$1, D1$1, D2$1 );
 struct $7VECTOR2* vr$16 = _ZN12SYSTEM_BUS_T5K_MAXER7VECTOR2Rd( &TMP$1895$1, THIS$1, &TMP$1894$1, &TMP$1896$1 );
 double vr$17 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR2( THIS$1, (struct $7VECTOR2*)vr$16 );
 double vr$18 = _ZN12SYSTEM_BUS_T5K_MAXEdd( THIS$1, D1$1, D2$1 );
 double vr$19 = _ZN12SYSTEM_BUS_T5K_MINEdd( THIS$1, vr$18, 0x0p+0 );
 fb$result$1 = vr$17 + vr$19;
 goto label$2281;
 label$2281:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T9SDCAPSULEER7VECTOR3S1_S1_d( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR3* A$1, struct $7VECTOR3* B$1, double R$1 )
{
 struct $7VECTOR3 TMP$1897$1;
 struct $7VECTOR3 TMP$1898$1;
 struct $7VECTOR3 TMP$1899$1;
 struct $7VECTOR3 TMP$1900$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2282:;
 struct $7VECTOR3 PA$1;
 struct $7VECTOR3* vr$2 = _ZmiR7VECTOR3S0_( &TMP$1897$1, P$1, A$1 );
 _ZN7VECTOR3C1ERS_( &PA$1, vr$2 );
 struct $7VECTOR3 BA$1;
 struct $7VECTOR3* vr$5 = _ZmiR7VECTOR3S0_( &TMP$1898$1, B$1, A$1 );
 _ZN7VECTOR3C1ERS_( &BA$1, vr$5 );
 double H$1;
 double vr$9 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, &PA$1, &BA$1 );
 double vr$12 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, &BA$1, &BA$1 );
 double vr$14 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, vr$9 / vr$12, 0x0p+0, 0x1.p+0 );
 H$1 = vr$14;
 struct $7VECTOR3* vr$17 = _ZmlR7VECTOR3d( &TMP$1899$1, &BA$1, H$1 );
 struct $7VECTOR3* vr$20 = _ZmiR7VECTOR3S0_( &TMP$1900$1, &PA$1, vr$17 );
 double vr$21 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR3( THIS$1, (struct $7VECTOR3*)vr$20 );
 fb$result$1 = vr$21 - R$1;
 goto label$2283;
 label$2283:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T17SDVERTICALCAPSULEER7VECTOR3dd( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, double H$1, double R$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2284:;
 double vr$3 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, *(double*)((uint8*)P$1 + 24ll), 0x0p+0, H$1 );
 *(double*)((uint8*)P$1 + 24ll) = *(double*)((uint8*)P$1 + 24ll) - vr$3;
 double vr$6 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR3( THIS$1, (struct $7VECTOR3*)P$1 );
 fb$result$1 = vr$6 - R$1;
 goto label$2285;
 label$2285:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T10SDTRIPRISMER7VECTOR3R7VECTOR2( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR2* H$1 )
{
 struct $7VECTOR3 TMP$1901$1;
 struct $7VECTOR2 TMP$1902$1;
 struct $7VECTOR2 TMP$1903$1;
 double TMP$1904$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2286:;
 struct $7VECTOR3 Q$1;
 struct $7VECTOR3* vr$2 = _Zv13absRK7VECTOR3( &TMP$1901$1, (struct $7VECTOR3*)P$1 );
 _ZN7VECTOR3C1ERS_( &Q$1, vr$2 );
 double D1$1;
 D1$1 = *(double*)((uint8*)&Q$1 + 32ll) - *(double*)((uint8*)H$1 + 8ll);
 double D2$1;
 double vr$12 = _ZN12SYSTEM_BUS_T5K_MAXEdd( THIS$1, (*(double*)((uint8*)&Q$1 + 16ll) * 0x1.BB67A0F9096BCp-1) + (*(double*)((uint8*)P$1 + 24ll) * 0x1.p-1), -(*(double*)((uint8*)P$1 + 24ll)) );
 D2$1 = vr$12 - (*(double*)H$1 * 0x1.p-1);
 TMP$1904$1 = 0x0p+0;
 _ZN7VECTOR2C1Edd( &TMP$1902$1, D1$1, D2$1 );
 struct $7VECTOR2* vr$20 = _ZN12SYSTEM_BUS_T5K_MAXER7VECTOR2Rd( &TMP$1903$1, THIS$1, &TMP$1902$1, &TMP$1904$1 );
 double vr$21 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR2( THIS$1, (struct $7VECTOR2*)vr$20 );
 double vr$22 = _ZN12SYSTEM_BUS_T5K_MAXEdd( THIS$1, D1$1, D2$1 );
 double vr$23 = _ZN12SYSTEM_BUS_T5K_MINEdd( THIS$1, vr$22, 0x0p+0 );
 fb$result$1 = vr$21 + vr$23;
 goto label$2287;
 label$2287:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T11SDTRIPRISM2ER7VECTOR3R7VECTOR2( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR2* H$1 )
{
 struct $7VECTOR3 TMP$1905$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2288:;
 struct $7VECTOR3 Q$1;
 struct $7VECTOR3* vr$2 = _Zv13absRK7VECTOR3( &TMP$1905$1, (struct $7VECTOR3*)P$1 );
 _ZN7VECTOR3C1ERS_( &Q$1, vr$2 );
 double vr$10 = _ZN12SYSTEM_BUS_T5K_MAXEdd( THIS$1, (*(double*)((uint8*)&Q$1 + 16ll) * 0x1.BB67A0F9096BCp-1) + (*(double*)((uint8*)P$1 + 24ll) * 0x1.p-1), -(*(double*)((uint8*)P$1 + 24ll)) );
 double vr$16 = _ZN12SYSTEM_BUS_T5K_MAXEdd( THIS$1, *(double*)((uint8*)&Q$1 + 32ll) - *(double*)((uint8*)H$1 + 8ll), vr$10 - (*(double*)H$1 * 0x1.p-1) );
 fb$result$1 = vr$16;
 goto label$2289;
 label$2289:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T10SDCYLINDERER7VECTOR3R7VECTOR2( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR2* H$1 )
{
 struct $7VECTOR2 TMP$1906$1;
 struct $7VECTOR2 TMP$1907$1;
 struct $7VECTOR2 TMP$1908$1;
 struct $7VECTOR2 TMP$1909$1;
 struct $7VECTOR2 TMP$1910$1;
 double TMP$1911$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2290:;
 struct $7VECTOR2 D$1;
 struct $7VECTOR2* vr$3 = _ZN7VECTOR32XZEv( &TMP$1907$1, P$1 );
 double vr$4 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR2( THIS$1, (struct $7VECTOR2*)vr$3 );
 _ZN7VECTOR2C1Edd( &TMP$1906$1, vr$4, *(double*)((uint8*)P$1 + 24ll) );
 struct $7VECTOR2* vr$8 = _Zv13absRK7VECTOR2( &TMP$1908$1, (struct $7VECTOR2*)&TMP$1906$1 );
 struct $7VECTOR2* vr$10 = _ZmiR7VECTOR2S0_( &TMP$1909$1, vr$8, H$1 );
 _ZN7VECTOR2C1ERS_( &D$1, vr$10 );
 double vr$12 = _ZN12SYSTEM_BUS_T5K_MAXEdd( THIS$1, *(double*)&D$1, *(double*)((uint8*)&D$1 + 8ll) );
 double vr$13 = _ZN12SYSTEM_BUS_T5K_MINEdd( THIS$1, vr$12, 0x0p+0 );
 TMP$1911$1 = 0x0p+0;
 struct $7VECTOR2* vr$17 = _ZN12SYSTEM_BUS_T5K_MAXER7VECTOR2Rd( &TMP$1910$1, THIS$1, &D$1, &TMP$1911$1 );
 double vr$18 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR2( THIS$1, (struct $7VECTOR2*)vr$17 );
 fb$result$1 = vr$13 + vr$18;
 goto label$2291;
 label$2291:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T10SDCYLINDERER7VECTOR3S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR3* C$1 )
{
 struct $7VECTOR2 TMP$1912$1;
 struct $7VECTOR2 TMP$1913$1;
 struct $7VECTOR2 TMP$1914$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2292:;
 struct $7VECTOR2* vr$2 = _ZN7VECTOR32XYEv( &TMP$1913$1, C$1 );
 struct $7VECTOR2* vr$4 = _ZN7VECTOR32XZEv( &TMP$1912$1, P$1 );
 struct $7VECTOR2* vr$6 = _ZmiR7VECTOR2S0_( &TMP$1914$1, vr$4, vr$2 );
 double vr$7 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR2( THIS$1, (struct $7VECTOR2*)vr$6 );
 fb$result$1 = vr$7 - *(double*)((uint8*)C$1 + 32ll);
 goto label$2293;
 label$2293:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T11SDCYLINDER6ER7VECTOR3R7VECTOR2( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR2* H$1 )
{
 struct $7VECTOR2 TMP$1915$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2294:;
 struct $7VECTOR2* vr$6 = _ZN7VECTOR32XZEv( &TMP$1915$1, P$1 );
 double vr$7 = _ZN12SYSTEM_BUS_T7LENGTH6ER7VECTOR2( THIS$1, vr$6 );
 double vr$10 = _ZN12SYSTEM_BUS_T5K_MAXEdd( THIS$1, vr$7 - *(double*)H$1, __builtin_fabs( *(double*)((uint8*)P$1 + 24ll) ) - *(double*)((uint8*)H$1 + 8ll) );
 fb$result$1 = vr$10;
 goto label$2295;
 label$2295:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T16SDCAPPEDCYLINDERER7VECTOR3dd( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, double H$1, double R$1 )
{
 struct $7VECTOR2 TMP$1916$1;
 struct $7VECTOR2 TMP$1917$1;
 struct $7VECTOR2 TMP$1918$1;
 struct $7VECTOR2 TMP$1919$1;
 struct $7VECTOR2 TMP$1920$1;
 struct $7VECTOR2 TMP$1921$1;
 double TMP$1922$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2296:;
 struct $7VECTOR2 D$1;
 _ZN7VECTOR2C1Edd( &TMP$1919$1, H$1, R$1 );
 struct $7VECTOR2* vr$5 = _ZN7VECTOR32XZEv( &TMP$1917$1, P$1 );
 double vr$6 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR2( THIS$1, (struct $7VECTOR2*)vr$5 );
 _ZN7VECTOR2C1Edd( &TMP$1916$1, vr$6, *(double*)((uint8*)P$1 + 24ll) );
 struct $7VECTOR2* vr$10 = _Zv13absRK7VECTOR2( &TMP$1918$1, (struct $7VECTOR2*)&TMP$1916$1 );
 struct $7VECTOR2* vr$12 = _ZmiR7VECTOR2S0_( &TMP$1920$1, vr$10, &TMP$1919$1 );
 _ZN7VECTOR2C1ERS_( &D$1, vr$12 );
 double vr$14 = _ZN12SYSTEM_BUS_T5K_MAXEdd( THIS$1, *(double*)&D$1, *(double*)((uint8*)&D$1 + 8ll) );
 double vr$15 = _ZN12SYSTEM_BUS_T5K_MINEdd( THIS$1, vr$14, 0x0p+0 );
 TMP$1922$1 = 0x0p+0;
 struct $7VECTOR2* vr$19 = _ZN12SYSTEM_BUS_T5K_MAXER7VECTOR2Rd( &TMP$1921$1, THIS$1, &D$1, &TMP$1922$1 );
 double vr$20 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR2( THIS$1, (struct $7VECTOR2*)vr$19 );
 fb$result$1 = vr$15 + vr$20;
 goto label$2297;
 label$2297:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T16SDCAPPEDCYLINDERER7VECTOR3S1_S1_d( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR3* A$1, struct $7VECTOR3* B$1, double R$1 )
{
 struct $7VECTOR3 TMP$1923$1;
 struct $7VECTOR3 TMP$1924$1;
 struct $7VECTOR3 TMP$1925$1;
 struct $7VECTOR3 TMP$1926$1;
 struct $7VECTOR3 TMP$1927$1;
 double TMP$1928$1;
 double TMP$1929$1;
 double TMP$1930$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2298:;
 struct $7VECTOR3 BA$1;
 struct $7VECTOR3* vr$2 = _ZmiR7VECTOR3S0_( &TMP$1923$1, B$1, A$1 );
 _ZN7VECTOR3C1ERS_( &BA$1, vr$2 );
 struct $7VECTOR3 PA$1;
 struct $7VECTOR3* vr$5 = _ZmiR7VECTOR3S0_( &TMP$1924$1, P$1, A$1 );
 _ZN7VECTOR3C1ERS_( &PA$1, vr$5 );
 double BABA$1;
 double vr$9 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, &BA$1, &BA$1 );
 BABA$1 = vr$9;
 double PABA$1;
 double vr$12 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, &PA$1, &BA$1 );
 PABA$1 = vr$12;
 double X$1;
 struct $7VECTOR3* vr$15 = _ZmlR7VECTOR3d( &TMP$1926$1, &BA$1, PABA$1 );
 struct $7VECTOR3* vr$18 = _ZmlR7VECTOR3d( &TMP$1925$1, &PA$1, BABA$1 );
 struct $7VECTOR3* vr$20 = _ZmiR7VECTOR3S0_( &TMP$1927$1, vr$18, vr$15 );
 double vr$21 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR3( THIS$1, (struct $7VECTOR3*)vr$20 );
 X$1 = vr$21 - (R$1 * BABA$1);
 double Y$1;
 Y$1 = __builtin_fabs( (PABA$1 - (BABA$1 * 0x1.p-1)) ) - (BABA$1 * 0x1.p-1);
 double X2$1;
 X2$1 = X$1 * X$1;
 double Y2$1;
 Y2$1 = (Y$1 * Y$1) * BABA$1;
 double D$1;
 double vr$32 = _ZN12SYSTEM_BUS_T5K_MAXEdd( THIS$1, X$1, Y$1 );
 if( vr$32 >= 0x0p+0 ) goto label$2302;
 double vr$33 = _ZN12SYSTEM_BUS_T5K_MINEdd( THIS$1, X2$1, Y2$1 );
 TMP$1930$1 = -vr$33;
 goto label$2303;
 label$2302:;
 if( X$1 <= 0x0p+0 ) goto label$2300;
 TMP$1928$1 = X2$1;
 goto label$2304;
 label$2300:;
 TMP$1928$1 = 0x0p+0;
 label$2304:;
 if( Y$1 <= 0x0p+0 ) goto label$2301;
 TMP$1929$1 = Y2$1;
 goto label$2305;
 label$2301:;
 TMP$1929$1 = 0x0p+0;
 label$2305:;
 TMP$1930$1 = TMP$1928$1 + TMP$1929$1;
 label$2303:;
 D$1 = TMP$1930$1;
 double vr$36 = _ZN12SYSTEM_BUS_T6K_SIGNEd( THIS$1, D$1 );
 double vr$38 = _ZN12SYSTEM_BUS_T6K_SQRTEd( THIS$1, __builtin_fabs( D$1 ) );
 fb$result$1 = (vr$36 * vr$38) / BABA$1;
 goto label$2299;
 label$2299:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T17SDROUNDEDCYLINDERER7VECTOR3ddd( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, double RA$1, double RB$1, double H$1 )
{
 struct $7VECTOR2 TMP$1932$1;
 struct $7VECTOR2 TMP$1933$1;
 double TMP$1934$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2306:;
 struct $7VECTOR2 D$1;
 struct $7VECTOR2* vr$5 = _ZN7VECTOR32XZEv( &TMP$1932$1, P$1 );
 double vr$6 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR2( THIS$1, (struct $7VECTOR2*)vr$5 );
 _ZN7VECTOR2C1Edd( &D$1, (vr$6 - (RA$1 * 0x1.p+1)) + RB$1, __builtin_fabs( *(double*)((uint8*)P$1 + 24ll) ) - H$1 );
 double vr$11 = _ZN12SYSTEM_BUS_T5K_MAXEdd( THIS$1, *(double*)&D$1, *(double*)((uint8*)&D$1 + 8ll) );
 double vr$12 = _ZN12SYSTEM_BUS_T5K_MINEdd( THIS$1, vr$11, 0x0p+0 );
 TMP$1934$1 = 0x0p+0;
 struct $7VECTOR2* vr$16 = _ZN12SYSTEM_BUS_T5K_MAXER7VECTOR2Rd( &TMP$1933$1, THIS$1, &D$1, &TMP$1934$1 );
 double vr$17 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR2( THIS$1, (struct $7VECTOR2*)vr$16 );
 fb$result$1 = (vr$12 + vr$17) - RB$1;
 goto label$2307;
 label$2307:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6SDCONEER7VECTOR3S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR3* C$1 )
{
 struct $7VECTOR2 TMP$1936$1;
 struct $7VECTOR2 TMP$1937$1;
 struct $7VECTOR2 TMP$1938$1;
 struct $7VECTOR2 TMP$1939$1;
 double TMP$1940$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2308:;
 struct $7VECTOR2 Q$1;
 struct $7VECTOR2* vr$3 = _ZN7VECTOR32XZEv( &TMP$1936$1, P$1 );
 double vr$4 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR2( THIS$1, (struct $7VECTOR2*)vr$3 );
 _ZN7VECTOR2C1Edd( &Q$1, vr$4, *(double*)((uint8*)P$1 + 24ll) );
 double D1$1;
 D1$1 = -(*(double*)((uint8*)&Q$1 + 8ll)) - *(double*)((uint8*)C$1 + 32ll);
 double D2$1;
 struct $7VECTOR2* vr$10 = _ZN7VECTOR32XYEv( &TMP$1937$1, C$1 );
 double vr$12 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR2S1_( THIS$1, &Q$1, vr$10 );
 double vr$13 = _ZN12SYSTEM_BUS_T5K_MAXEdd( THIS$1, vr$12, *(double*)((uint8*)&Q$1 + 8ll) );
 D2$1 = vr$13;
 TMP$1940$1 = 0x0p+0;
 _ZN7VECTOR2C1Edd( &TMP$1938$1, D1$1, D2$1 );
 struct $7VECTOR2* vr$18 = _ZN12SYSTEM_BUS_T5K_MAXER7VECTOR2Rd( &TMP$1939$1, THIS$1, &TMP$1938$1, &TMP$1940$1 );
 double vr$19 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR2( THIS$1, (struct $7VECTOR2*)vr$18 );
 double vr$20 = _ZN12SYSTEM_BUS_T5K_MAXEdd( THIS$1, D1$1, D2$1 );
 double vr$21 = _ZN12SYSTEM_BUS_T5K_MINEdd( THIS$1, vr$20, 0x0p+0 );
 fb$result$1 = vr$19 + vr$21;
 goto label$2309;
 label$2309:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6SDCONEER7VECTOR3R7VECTOR2d( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR2* C$1, double H$1 )
{
 struct $7VECTOR2 TMP$1941$1;
 struct $7VECTOR2 TMP$1942$1;
 struct $7VECTOR2 TMP$1944$1;
 struct $7VECTOR2 TMP$1945$1;
 double TMP$1946$1;
 struct $7VECTOR2 TMP$1947$1;
 struct $7VECTOR2 TMP$1948$1;
 struct $7VECTOR2 TMP$1949$1;
 struct $7VECTOR2 TMP$1950$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2310:;
 struct $7VECTOR2 Q$1;
 _ZN7VECTOR2C1Edd( &TMP$1941$1, *(double*)C$1 / *(double*)((uint8*)C$1 + 8ll), -0x1.p+0 );
 struct $7VECTOR2* vr$8 = _ZmlRdR7VECTOR2( &TMP$1942$1, &H$1, &TMP$1941$1 );
 _ZN7VECTOR2C1ERS_( &Q$1, vr$8 );
 struct $7VECTOR2 W$1;
 struct $7VECTOR2* vr$12 = _ZN7VECTOR32XZEv( &TMP$1944$1, P$1 );
 double vr$13 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR2( THIS$1, (struct $7VECTOR2*)vr$12 );
 _ZN7VECTOR2C1Edd( &W$1, vr$13, *(double*)((uint8*)P$1 + 24ll) );
 struct $7VECTOR2 A$1;
 double vr$17 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR2S1_( THIS$1, &W$1, &Q$1 );
 double vr$20 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR2S1_( THIS$1, &Q$1, &Q$1 );
 double vr$22 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, vr$17 / vr$20, 0x0p+0, 0x1.p+0 );
 TMP$1946$1 = vr$22;
 struct $7VECTOR2* vr$26 = _ZmlR7VECTOR2Rd( &TMP$1945$1, &Q$1, &TMP$1946$1 );
 struct $7VECTOR2* vr$29 = _ZmiR7VECTOR2S0_( &TMP$1947$1, &W$1, vr$26 );
 _ZN7VECTOR2C1ERS_( &A$1, vr$29 );
 struct $7VECTOR2 B$1;
 double vr$32 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, *(double*)&W$1 / *(double*)&Q$1, 0x0p+0, 0x1.p+0 );
 _ZN7VECTOR2C1Edd( &TMP$1948$1, vr$32, 0x1.p+0 );
 struct $7VECTOR2* vr$37 = _ZmlR7VECTOR2S0_( &TMP$1949$1, &Q$1, &TMP$1948$1 );
 struct $7VECTOR2* vr$40 = _ZmiR7VECTOR2S0_( &TMP$1950$1, &W$1, vr$37 );
 _ZN7VECTOR2C1ERS_( &B$1, vr$40 );
 double K$1;
 double vr$42 = _ZN12SYSTEM_BUS_T6K_SIGNEd( THIS$1, *(double*)((uint8*)&Q$1 + 8ll) );
 K$1 = vr$42;
 double D$1;
 double vr$45 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR2S1_( THIS$1, &B$1, &B$1 );
 double vr$48 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR2S1_( THIS$1, &A$1, &A$1 );
 double vr$49 = _ZN12SYSTEM_BUS_T5K_MINEdd( THIS$1, vr$48, vr$45 );
 D$1 = vr$49;
 double S$1;
 double vr$56 = _ZN12SYSTEM_BUS_T5K_MAXEdd( THIS$1, K$1 * ((*(double*)&W$1 * *(double*)((uint8*)&Q$1 + 8ll)) - (*(double*)((uint8*)&W$1 + 8ll) * *(double*)&Q$1)), K$1 * (*(double*)((uint8*)&W$1 + 8ll) - *(double*)((uint8*)&Q$1 + 8ll)) );
 S$1 = vr$56;
 double vr$57 = _ZN12SYSTEM_BUS_T6K_SQRTEd( THIS$1, D$1 );
 double vr$58 = _ZN12SYSTEM_BUS_T6K_SIGNEd( THIS$1, S$1 );
 fb$result$1 = vr$57 * vr$58;
 goto label$2311;
 label$2311:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6SDCONEER7VECTOR3R7VECTOR2( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR2* C$1 )
{
 struct $7VECTOR2 TMP$1952$1;
 struct $7VECTOR2 TMP$1953$1;
 double TMP$1954$1;
 struct $7VECTOR2 TMP$1955$1;
 double TMP$1956$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2312:;
 struct $7VECTOR2 Q$1;
 struct $7VECTOR2* vr$4 = _ZN7VECTOR32XZEv( &TMP$1952$1, P$1 );
 double vr$5 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR2( THIS$1, (struct $7VECTOR2*)vr$4 );
 _ZN7VECTOR2C1Edd( &Q$1, vr$5, -(*(double*)((uint8*)P$1 + 24ll)) );
 double D$1;
 double vr$8 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR2S1_( THIS$1, &Q$1, C$1 );
 double vr$9 = _ZN12SYSTEM_BUS_T5K_MAXEdd( THIS$1, vr$8, 0x0p+0 );
 TMP$1954$1 = vr$9;
 struct $7VECTOR2* vr$12 = _ZmlR7VECTOR2Rd( &TMP$1953$1, C$1, &TMP$1954$1 );
 struct $7VECTOR2* vr$15 = _ZmiR7VECTOR2S0_( &TMP$1955$1, &Q$1, vr$12 );
 double vr$16 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR2( THIS$1, (struct $7VECTOR2*)vr$15 );
 D$1 = vr$16;
 if( ((*(double*)&Q$1 * *(double*)((uint8*)C$1 + 8ll)) - (*(double*)((uint8*)&Q$1 + 8ll) * *(double*)C$1)) >= 0x0p+0 ) goto label$2314;
 TMP$1956$1 = -0x1.p+0;
 goto label$2315;
 label$2314:;
 TMP$1956$1 = 0x1.p+0;
 label$2315:;
 fb$result$1 = D$1 * TMP$1956$1;
 goto label$2313;
 label$2313:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7SDCONE2ER7VECTOR3R7VECTOR2d( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR2* C$1, double H$1 )
{
 struct $7VECTOR2 TMP$1957$1;
 struct $7VECTOR2 TMP$1958$1;
 struct $7VECTOR2 TMP$1959$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2316:;
 double Q$1;
 struct $7VECTOR2* vr$2 = _ZN7VECTOR32XZEv( &TMP$1957$1, P$1 );
 double vr$3 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR2( THIS$1, (struct $7VECTOR2*)vr$2 );
 Q$1 = vr$3;
 _ZN7VECTOR2C1Edd( &TMP$1959$1, Q$1, *(double*)((uint8*)P$1 + 24ll) );
 struct $7VECTOR2* vr$11 = _ZN7VECTOR22XYEv( &TMP$1958$1, C$1 );
 double vr$12 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR2S1_( THIS$1, vr$11, &TMP$1959$1 );
 double vr$13 = _ZN12SYSTEM_BUS_T5K_MAXEdd( THIS$1, vr$12, -H$1 - *(double*)((uint8*)P$1 + 24ll) );
 fb$result$1 = vr$13;
 goto label$2317;
 label$2317:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7_SDCONEER7VECTOR3S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR3* C$1 )
{
 struct $7VECTOR2 TMP$1961$1;
 struct $7VECTOR2 TMP$1963$1;
 struct $7VECTOR2 TMP$1966$1;
 double TMP$1967$1;
 struct $7VECTOR2 TMP$1968$1;
 struct $7VECTOR2 TMP$1969$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2318:;
 struct $7VECTOR2 Q$1;
 struct $7VECTOR2* vr$3 = _ZN7VECTOR32XZEv( &TMP$1961$1, P$1 );
 double vr$4 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR2( THIS$1, (struct $7VECTOR2*)vr$3 );
 _ZN7VECTOR2C1Edd( &Q$1, vr$4, *(double*)((uint8*)P$1 + 24ll) );
 struct $7VECTOR2 V$1;
 _ZN7VECTOR2C1Edd( &V$1, (*(double*)((uint8*)C$1 + 32ll) * *(double*)((uint8*)C$1 + 24ll)) / *(double*)((uint8*)C$1 + 16ll), -(*(double*)((uint8*)C$1 + 32ll)) );
 struct $7VECTOR2 W$1;
 struct $7VECTOR2* vr$17 = _ZmiR7VECTOR2S0_( &TMP$1963$1, &V$1, &Q$1 );
 _ZN7VECTOR2C1ERS_( &W$1, vr$17 );
 struct $7VECTOR2 VV$1;
 double vr$22 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR2S1_( THIS$1, &V$1, &V$1 );
 _ZN7VECTOR2C1Edd( &VV$1, vr$22, *(double*)&V$1 * *(double*)&V$1 );
 struct $7VECTOR2 QV$1;
 double vr$27 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR2S1_( THIS$1, &V$1, &W$1 );
 _ZN7VECTOR2C1Edd( &QV$1, vr$27, *(double*)&V$1 * *(double*)&W$1 );
 struct $7VECTOR2 D$1;
 TMP$1967$1 = 0x0p+0;
 struct $7VECTOR2* vr$34 = _ZN12SYSTEM_BUS_T5K_MAXER7VECTOR2Rd( &TMP$1966$1, THIS$1, &QV$1, &TMP$1967$1 );
 struct $7VECTOR2* vr$36 = _ZmlR7VECTOR2S0_( &TMP$1968$1, vr$34, &QV$1 );
 struct $7VECTOR2* vr$38 = _ZdvR7VECTOR2S0_( &TMP$1969$1, vr$36, &VV$1 );
 _ZN7VECTOR2C1ERS_( &D$1, vr$38 );
 double vr$42 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR2S1_( THIS$1, &W$1, &W$1 );
 double vr$43 = _ZN12SYSTEM_BUS_T5K_MAXEdd( THIS$1, *(double*)&D$1, *(double*)((uint8*)&D$1 + 8ll) );
 double vr$45 = _ZN12SYSTEM_BUS_T6K_SQRTEd( THIS$1, vr$42 - vr$43 );
 double vr$49 = _ZN12SYSTEM_BUS_T5K_MAXEdd( THIS$1, (*(double*)((uint8*)&Q$1 + 8ll) * *(double*)&V$1) - (*(double*)&Q$1 * *(double*)((uint8*)&V$1 + 8ll)), *(double*)((uint8*)&W$1 + 8ll) );
 double vr$50 = _ZN12SYSTEM_BUS_T6K_SIGNEd( THIS$1, vr$49 );
 fb$result$1 = vr$45 * vr$50;
 goto label$2319;
 label$2319:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8SDCONEHQER7VECTOR3S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR3* C$1 )
{
 struct $7VECTOR2 TMP$1971$1;
 struct $7VECTOR2 TMP$1973$1;
 struct $7VECTOR2 TMP$1976$1;
 struct $7VECTOR2 TMP$1977$1;
 struct $7VECTOR2 TMP$1978$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2320:;
 struct $7VECTOR2 Q$1;
 struct $7VECTOR2* vr$3 = _ZN7VECTOR32XZEv( &TMP$1971$1, P$1 );
 double vr$4 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR2( THIS$1, (struct $7VECTOR2*)vr$3 );
 _ZN7VECTOR2C1Edd( &Q$1, vr$4, *(double*)((uint8*)P$1 + 24ll) );
 struct $7VECTOR2 V$1;
 _ZN7VECTOR2C1Edd( &V$1, (*(double*)((uint8*)C$1 + 32ll) * *(double*)((uint8*)C$1 + 24ll)) / *(double*)((uint8*)C$1 + 16ll), -(*(double*)((uint8*)C$1 + 32ll)) );
 double VVB$1;
 double vr$16 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR2S1_( THIS$1, &V$1, &V$1 );
 VVB$1 = vr$16;
 double QVB$1;
 struct $7VECTOR2* vr$20 = _ZmiR7VECTOR2S0_( &TMP$1973$1, &V$1, &Q$1 );
 double vr$22 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR2S1_( THIS$1, &V$1, vr$20 );
 QVB$1 = vr$22;
 double VVX$1;
 VVX$1 = *(double*)&V$1 * *(double*)&V$1;
 double QVX$1;
 QVX$1 = *(double*)&V$1 * (*(double*)&V$1 - *(double*)&Q$1);
 double HB$1;
 double vr$26 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, QVB$1, 0x0p+0, VVB$1 );
 HB$1 = vr$26;
 double HX$1;
 double vr$27 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, QVX$1, 0x0p+0, VVX$1 );
 HX$1 = vr$27;
 struct $7VECTOR2 D1$1;
 _ZN7VECTOR2C1Edd( &D1$1, (HB$1 * (HB$1 - (QVB$1 * 0x1.p+1))) / VVB$1, (*(double*)&Q$1 * *(double*)((uint8*)&V$1 + 8ll)) - (*(double*)((uint8*)&Q$1 + 8ll) * *(double*)&V$1) );
 struct $7VECTOR2 D2$1;
 _ZN7VECTOR2C1Edd( &D2$1, (HX$1 * (HX$1 - (QVX$1 * 0x1.p+1))) / VVX$1, *(double*)((uint8*)&Q$1 + 8ll) - *(double*)((uint8*)&V$1 + 8ll) );
 struct $7VECTOR2 D$1;
 struct $7VECTOR2* vr$45 = _ZN12SYSTEM_BUS_T5K_MINER7VECTOR2S1_( &TMP$1976$1, THIS$1, &D1$1, &D2$1 );
 _ZN7VECTOR2C1ERS_( &D$1, vr$45 );
 struct $7VECTOR2* vr$50 = _ZmiR7VECTOR2S0_( &TMP$1978$1, &V$1, &Q$1 );
 struct $7VECTOR2* vr$54 = _ZmiR7VECTOR2S0_( &TMP$1977$1, &V$1, &Q$1 );
 double vr$55 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR2S1_( THIS$1, vr$54, vr$50 );
 double vr$57 = _ZN12SYSTEM_BUS_T6K_SQRTEd( THIS$1, vr$55 + *(double*)&D$1 );
 double vr$59 = _ZN12SYSTEM_BUS_T6K_SIGNEd( THIS$1, *(double*)((uint8*)&D$1 + 8ll) );
 fb$result$1 = -vr$57 * vr$59;
 goto label$2321;
 label$2321:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T12SDCAPPEDCONEER7VECTOR3ddd( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, double H$1, double R1$1, double R2$1 )
{
 struct $7VECTOR2 TMP$1980$1;
 double TMP$1984$1;
 struct $7VECTOR2 TMP$1985$1;
 struct $7VECTOR2 TMP$1986$1;
 struct $7VECTOR2 TMP$1987$1;
 double TMP$1988$1;
 struct $7VECTOR2 TMP$1989$1;
 double TMP$1990$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2322:;
 struct $7VECTOR2 Q$1;
 struct $7VECTOR2* vr$3 = _ZN7VECTOR32XZEv( &TMP$1980$1, P$1 );
 double vr$4 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR2( THIS$1, (struct $7VECTOR2*)vr$3 );
 _ZN7VECTOR2C1Edd( &Q$1, vr$4, *(double*)((uint8*)P$1 + 24ll) );
 struct $7VECTOR2 K1$1;
 _ZN7VECTOR2C1Edd( &K1$1, R2$1, H$1 );
 struct $7VECTOR2 K2$1;
 _ZN7VECTOR2C1Edd( &K2$1, R2$1 - R1$1, H$1 * 0x1.p+1 );
 struct $7VECTOR2 CA$1;
 if( *(double*)((uint8*)&Q$1 + 8ll) >= 0x0p+0 ) goto label$2324;
 TMP$1984$1 = R1$1;
 goto label$2326;
 label$2324:;
 TMP$1984$1 = R2$1;
 label$2326:;
 double vr$12 = _ZN12SYSTEM_BUS_T5K_MINEdd( THIS$1, *(double*)&Q$1, TMP$1984$1 );
 _ZN7VECTOR2C1Edd( &CA$1, *(double*)&Q$1 - vr$12, __builtin_fabs( *(double*)((uint8*)&Q$1 + 8ll) ) - H$1 );
 struct $7VECTOR2 CB$1;
 struct $7VECTOR2* vr$19 = _ZmiR7VECTOR2S0_( &TMP$1986$1, &K1$1, &Q$1 );
 double vr$20 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR2S1_( THIS$1, vr$19, &K2$1 );
 double vr$23 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR2S1_( THIS$1, &K2$1, &K2$1 );
 double vr$25 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, vr$20 / vr$23, 0x0p+0, 0x1.p+0 );
 TMP$1988$1 = vr$25;
 struct $7VECTOR2* vr$29 = _ZmlR7VECTOR2Rd( &TMP$1987$1, &K2$1, &TMP$1988$1 );
 struct $7VECTOR2* vr$33 = _ZmiR7VECTOR2S0_( &TMP$1985$1, &Q$1, &K1$1 );
 struct $7VECTOR2* vr$35 = _ZplR7VECTOR2S0_( &TMP$1989$1, vr$33, vr$29 );
 _ZN7VECTOR2C1ERS_( &CB$1, vr$35 );
 double S$1;
 if( ((int64)-(*(double*)&CB$1 < 0x0p+0) & (int64)-(*(double*)((uint8*)&CA$1 + 8ll) < 0x0p+0)) == 0ll ) goto label$2325;
 TMP$1990$1 = -0x1.p+0;
 goto label$2327;
 label$2325:;
 TMP$1990$1 = 0x1.p+0;
 label$2327:;
 S$1 = TMP$1990$1;
 double vr$42 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR2S1_( THIS$1, &CB$1, &CB$1 );
 double vr$45 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR2S1_( THIS$1, &CA$1, &CA$1 );
 double vr$46 = _ZN12SYSTEM_BUS_T5K_MINEdd( THIS$1, vr$45, vr$42 );
 double vr$47 = _ZN12SYSTEM_BUS_T6K_SQRTEd( THIS$1, vr$46 );
 fb$result$1 = S$1 * vr$47;
 goto label$2323;
 label$2323:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T12SDCAPPEDCONEER7VECTOR3S1_S1_dd( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR3* A$1, struct $7VECTOR3* B$1, double RA$1, double RB$1 )
{
 struct $7VECTOR3 TMP$1991$1;
 struct $7VECTOR3 TMP$1992$1;
 struct $7VECTOR3 TMP$1993$1;
 struct $7VECTOR3 TMP$1994$1;
 struct $7VECTOR3 TMP$1995$1;
 struct $7VECTOR3 TMP$1996$1;
 double TMP$1997$1;
 double TMP$1998$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2328:;
 double RBA$1;
 RBA$1 = RB$1 - RA$1;
 double BABA$1;
 struct $7VECTOR3* vr$3 = _ZmiR7VECTOR3S0_( &TMP$1992$1, B$1, A$1 );
 struct $7VECTOR3* vr$5 = _ZmiR7VECTOR3S0_( &TMP$1991$1, B$1, A$1 );
 double vr$6 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, vr$5, vr$3 );
 BABA$1 = vr$6;
 double PAPA$1;
 struct $7VECTOR3* vr$8 = _ZmiR7VECTOR3S0_( &TMP$1994$1, P$1, A$1 );
 struct $7VECTOR3* vr$10 = _ZmiR7VECTOR3S0_( &TMP$1993$1, P$1, A$1 );
 double vr$11 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, vr$10, vr$8 );
 PAPA$1 = vr$11;
 double PABA$1;
 struct $7VECTOR3* vr$13 = _ZmiR7VECTOR3S0_( &TMP$1996$1, B$1, A$1 );
 struct $7VECTOR3* vr$15 = _ZmiR7VECTOR3S0_( &TMP$1995$1, P$1, A$1 );
 double vr$16 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, vr$15, vr$13 );
 PABA$1 = vr$16 / BABA$1;
 double X$1;
 double vr$21 = _ZN12SYSTEM_BUS_T6K_SQRTEd( THIS$1, PAPA$1 - ((PABA$1 * PABA$1) * BABA$1) );
 X$1 = vr$21;
 double CAX$1;
 if( PABA$1 >= 0x1.p-1 ) goto label$2330;
 TMP$1997$1 = RA$1;
 goto label$2332;
 label$2330:;
 TMP$1997$1 = RB$1;
 label$2332:;
 double vr$23 = _ZN12SYSTEM_BUS_T5K_MAXEdd( THIS$1, 0x0p+0, X$1 - TMP$1997$1 );
 CAX$1 = vr$23;
 double CAY$1;
 CAY$1 = __builtin_fabs( (PABA$1 + -0x1.p-1) ) + -0x1.p-1;
 double K$1;
 K$1 = (RBA$1 * RBA$1) + BABA$1;
 double F$1;
 double vr$34 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, ((RBA$1 * (X$1 - RA$1)) + (PABA$1 * BABA$1)) / K$1, 0x0p+0, 0x1.p+0 );
 F$1 = vr$34;
 double CBX$1;
 CBX$1 = (X$1 - RA$1) - (F$1 * RBA$1);
 double CBY$1;
 CBY$1 = PABA$1 - F$1;
 double S$1;
 if( ((int64)-(CBX$1 < 0x0p+0) & (int64)-(CAY$1 < 0x0p+0)) == 0ll ) goto label$2331;
 TMP$1998$1 = -0x1.p+0;
 goto label$2333;
 label$2331:;
 TMP$1998$1 = 0x1.p+0;
 label$2333:;
 S$1 = TMP$1998$1;
 double vr$50 = _ZN12SYSTEM_BUS_T5K_MINEdd( THIS$1, (CAX$1 * CAX$1) + ((CAY$1 * CAY$1) * BABA$1), (CBX$1 * CBX$1) + ((CBY$1 * CBY$1) * BABA$1) );
 double vr$51 = _ZN12SYSTEM_BUS_T6K_SQRTEd( THIS$1, vr$50 );
 fb$result$1 = S$1 * vr$51;
 goto label$2329;
 label$2329:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T13SDCONESECTIONER7VECTOR3ddd( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, double H$1, double R1$1, double R2$1 )
{
 struct $7VECTOR2 TMP$1999$1;
 struct $7VECTOR2 TMP$2000$1;
 struct $7VECTOR2 TMP$2001$1;
 struct $7VECTOR2 TMP$2002$1;
 double TMP$2003$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2334:;
 double D1$1;
 D1$1 = -(*(double*)((uint8*)P$1 + 24ll)) - H$1;
 double Q$1;
 Q$1 = *(double*)((uint8*)P$1 + 24ll) - H$1;
 double SI$1;
 SI$1 = ((R1$1 - R2$1) * 0x1.p-1) / H$1;
 double D2$1;
 struct $7VECTOR2* vr$10 = _ZN7VECTOR32XZEv( &TMP$2000$1, P$1 );
 struct $7VECTOR2* vr$12 = _ZN7VECTOR32XZEv( &TMP$1999$1, P$1 );
 double vr$13 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR2S1_( THIS$1, vr$12, vr$10 );
 double vr$18 = _ZN12SYSTEM_BUS_T6K_SQRTEd( THIS$1, vr$13 * (-(SI$1 * SI$1) + 0x1.p+0) );
 double vr$22 = _ZN12SYSTEM_BUS_T5K_MAXEdd( THIS$1, (vr$18 + (Q$1 * SI$1)) - R2$1, Q$1 );
 D2$1 = vr$22;
 TMP$2003$1 = 0x0p+0;
 _ZN7VECTOR2C1Edd( &TMP$2001$1, D1$1, D2$1 );
 struct $7VECTOR2* vr$27 = _ZN12SYSTEM_BUS_T5K_MAXER7VECTOR2Rd( &TMP$2002$1, THIS$1, &TMP$2001$1, &TMP$2003$1 );
 double vr$28 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR2( THIS$1, (struct $7VECTOR2*)vr$27 );
 double vr$29 = _ZN12SYSTEM_BUS_T5K_MAXEdd( THIS$1, D1$1, D2$1 );
 double vr$30 = _ZN12SYSTEM_BUS_T5K_MINEdd( THIS$1, vr$29, 0x0p+0 );
 fb$result$1 = vr$28 + vr$30;
 goto label$2335;
 label$2335:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T11SDROUNDCONEER7VECTOR3ddd( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, double R1$1, double R2$1, double H$1 )
{
 struct $7VECTOR2 TMP$2005$1;
 struct $7VECTOR2 TMP$2006$1;
 struct $7VECTOR2 TMP$2009$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2336:;
 double B$1;
 B$1 = (R1$1 - R2$1) / H$1;
 double A$1;
 double vr$6 = _ZN12SYSTEM_BUS_T6K_SQRTEd( THIS$1, -(B$1 * B$1) + 0x1.p+0 );
 A$1 = vr$6;
 struct $7VECTOR2 Q$1;
 struct $7VECTOR2* vr$9 = _ZN7VECTOR32XZEv( &TMP$2005$1, P$1 );
 double vr$10 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR2( THIS$1, (struct $7VECTOR2*)vr$9 );
 _ZN7VECTOR2C1Edd( &Q$1, vr$10, *(double*)((uint8*)P$1 + 24ll) );
 double K$1;
 _ZN7VECTOR2C1Edd( &TMP$2006$1, -B$1, A$1 );
 double vr$16 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR2S1_( THIS$1, &Q$1, &TMP$2006$1 );
 K$1 = vr$16;
 if( K$1 >= 0x0p+0 ) goto label$2339;
 {
  double vr$18 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR2( THIS$1, (struct $7VECTOR2*)&Q$1 );
  fb$result$1 = vr$18 - R1$1;
  goto label$2337;
  label$2339:;
 }
 if( K$1 <= (A$1 * H$1) ) goto label$2341;
 {
  struct $7VECTOR2 TMP$2007$2;
  struct $7VECTOR2 TMP$2008$2;
  _ZN7VECTOR2C1Edd( &TMP$2007$2, 0x0p+0, H$1 );
  struct $7VECTOR2* vr$25 = _ZmiR7VECTOR2S0_( &TMP$2008$2, &Q$1, &TMP$2007$2 );
  double vr$26 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR2( THIS$1, (struct $7VECTOR2*)vr$25 );
  fb$result$1 = vr$26 - R2$1;
  goto label$2337;
  label$2341:;
 }
 _ZN7VECTOR2C1Edd( &TMP$2009$1, A$1, B$1 );
 double vr$31 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR2S1_( THIS$1, &Q$1, &TMP$2009$1 );
 fb$result$1 = vr$31 - R1$1;
 goto label$2337;
 label$2337:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T12SDSOLIDANGLEER7VECTOR3R7VECTOR2d( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR2* C$1, double RA$1 )
{
 struct $7VECTOR2 TMP$2011$1;
 struct $7VECTOR2 TMP$2012$1;
 double TMP$2013$1;
 struct $7VECTOR2 TMP$2014$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2342:;
 struct $7VECTOR2 Q$1;
 struct $7VECTOR2* vr$3 = _ZN7VECTOR32XZEv( &TMP$2011$1, P$1 );
 double vr$4 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR2( THIS$1, (struct $7VECTOR2*)vr$3 );
 _ZN7VECTOR2C1Edd( &Q$1, vr$4, *(double*)((uint8*)P$1 + 24ll) );
 double L$1;
 double vr$7 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR2( THIS$1, (struct $7VECTOR2*)&Q$1 );
 L$1 = vr$7 - RA$1;
 double M$1;
 double vr$10 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR2S1_( THIS$1, &Q$1, C$1 );
 double vr$11 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, vr$10, 0x0p+0, RA$1 );
 TMP$2013$1 = vr$11;
 struct $7VECTOR2* vr$14 = _ZmlR7VECTOR2Rd( &TMP$2012$1, C$1, &TMP$2013$1 );
 struct $7VECTOR2* vr$17 = _ZmiR7VECTOR2S0_( &TMP$2014$1, &Q$1, vr$14 );
 double vr$18 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR2( THIS$1, (struct $7VECTOR2*)vr$17 );
 M$1 = vr$18;
 double vr$24 = _ZN12SYSTEM_BUS_T6K_SIGNEd( THIS$1, (*(double*)((uint8*)C$1 + 8ll) * *(double*)&Q$1) - (*(double*)C$1 * *(double*)((uint8*)&Q$1 + 8ll)) );
 double vr$26 = _ZN12SYSTEM_BUS_T5K_MAXEdd( THIS$1, L$1, M$1 * vr$24 );
 fb$result$1 = vr$26;
 goto label$2343;
 label$2343:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T11SDCUTSPHEREER7VECTOR3dd( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, double R$1, double H$1 )
{
 struct $7VECTOR2 TMP$2016$1;
 struct $7VECTOR2 TMP$2017$1;
 struct $7VECTOR2 TMP$2018$1;
 double TMP$2019$1;
 double TMP$2020$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2344:;
 double W$1;
 double vr$4 = _ZN12SYSTEM_BUS_T6K_SQRTEd( THIS$1, (R$1 * R$1) - (H$1 * H$1) );
 W$1 = vr$4;
 struct $7VECTOR2 Q$1;
 struct $7VECTOR2* vr$7 = _ZN7VECTOR32XZEv( &TMP$2016$1, P$1 );
 double vr$8 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR2( THIS$1, (struct $7VECTOR2*)vr$7 );
 _ZN7VECTOR2C1Edd( &Q$1, vr$8, *(double*)((uint8*)P$1 + 24ll) );
 double S$1;
 double vr$22 = _ZN12SYSTEM_BUS_T5K_MAXEdd( THIS$1, (((H$1 - R$1) * *(double*)&Q$1) * *(double*)&Q$1) + ((W$1 * W$1) * ((H$1 + R$1) - (*(double*)((uint8*)&Q$1 + 8ll) * 0x1.p+1))), (H$1 * *(double*)&Q$1) - (W$1 * *(double*)((uint8*)&Q$1 + 8ll)) );
 S$1 = vr$22;
 if( S$1 >= 0x0p+0 ) goto label$2347;
 double vr$24 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR2( THIS$1, (struct $7VECTOR2*)&Q$1 );
 TMP$2020$1 = vr$24 - R$1;
 goto label$2348;
 label$2347:;
 if( *(double*)&Q$1 >= W$1 ) goto label$2346;
 TMP$2019$1 = H$1 - *(double*)((uint8*)&Q$1 + 8ll);
 goto label$2349;
 label$2346:;
 _ZN7VECTOR2C1Edd( &TMP$2017$1, W$1, H$1 );
 struct $7VECTOR2* vr$31 = _ZmiR7VECTOR2S0_( &TMP$2018$1, &Q$1, &TMP$2017$1 );
 double vr$32 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR2( THIS$1, (struct $7VECTOR2*)vr$31 );
 TMP$2019$1 = vr$32;
 label$2349:;
 TMP$2020$1 = TMP$2019$1;
 label$2348:;
 fb$result$1 = TMP$2020$1;
 goto label$2345;
 label$2345:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T17SDCUTHOLLOWSPHEREER7VECTOR3ddd( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, double R$1, double H$1, double T$1 )
{
 struct $7VECTOR2 TMP$2022$1;
 struct $7VECTOR2 TMP$2023$1;
 struct $7VECTOR2 TMP$2024$1;
 double TMP$2025$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2350:;
 double W$1;
 double vr$4 = _ZN12SYSTEM_BUS_T6K_SQRTEd( THIS$1, (R$1 * R$1) - (H$1 * H$1) );
 W$1 = vr$4;
 struct $7VECTOR2 Q$1;
 struct $7VECTOR2* vr$7 = _ZN7VECTOR32XZEv( &TMP$2022$1, P$1 );
 double vr$8 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR2( THIS$1, (struct $7VECTOR2*)vr$7 );
 _ZN7VECTOR2C1Edd( &Q$1, vr$8, *(double*)((uint8*)P$1 + 24ll) );
 if( (H$1 * *(double*)&Q$1) >= (W$1 * *(double*)((uint8*)&Q$1 + 8ll)) ) goto label$2352;
 _ZN7VECTOR2C1Edd( &TMP$2023$1, W$1, H$1 );
 struct $7VECTOR2* vr$16 = _ZmiR7VECTOR2S0_( &TMP$2024$1, &Q$1, &TMP$2023$1 );
 double vr$17 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR2( THIS$1, (struct $7VECTOR2*)vr$16 );
 TMP$2025$1 = vr$17;
 goto label$2353;
 label$2352:;
 double vr$19 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR2( THIS$1, (struct $7VECTOR2*)&Q$1 );
 TMP$2025$1 = __builtin_fabs( (vr$19 - R$1) );
 label$2353:;
 fb$result$1 = TMP$2025$1 - T$1;
 goto label$2351;
 label$2351:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T11SDDEATHSTARER7VECTOR3ddd( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P2$1, double RA$1, double RB$1, double D$1 )
{
 struct $7VECTOR2 TMP$2027$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2354:;
 double A$1;
 A$1 = (((RA$1 * RA$1) - (RB$1 * RB$1)) + (D$1 * D$1)) / (D$1 * 0x1.p+1);
 double B$1;
 double vr$11 = _ZN12SYSTEM_BUS_T5K_MAXEdd( THIS$1, (RA$1 * RA$1) - (A$1 * A$1), 0x0p+0 );
 double vr$12 = _ZN12SYSTEM_BUS_T6K_SQRTEd( THIS$1, vr$11 );
 B$1 = vr$12;
 struct $7VECTOR2 P$1;
 struct $7VECTOR2* vr$14 = _ZN7VECTOR32YZEv( &TMP$2027$1, P2$1 );
 double vr$15 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR2( THIS$1, (struct $7VECTOR2*)vr$14 );
 _ZN7VECTOR2C1Edd( &P$1, *(double*)((uint8*)P2$1 + 16ll), vr$15 );
 double vr$22 = _ZN12SYSTEM_BUS_T5K_MAXEdd( THIS$1, B$1 - *(double*)((uint8*)&P$1 + 8ll), 0x0p+0 );
 if( ((*(double*)&P$1 * B$1) - (*(double*)((uint8*)&P$1 + 8ll) * A$1)) <= (D$1 * vr$22) ) goto label$2357;
 {
  struct $7VECTOR2 TMP$2028$2;
  struct $7VECTOR2 TMP$2029$2;
  _ZN7VECTOR2C1Edd( &TMP$2028$2, A$1, B$1 );
  struct $7VECTOR2* vr$28 = _ZmiR7VECTOR2S0_( &TMP$2029$2, &P$1, &TMP$2028$2 );
  double vr$29 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR2( THIS$1, (struct $7VECTOR2*)vr$28 );
  fb$result$1 = vr$29;
  goto label$2355;
 }
 goto label$2356;
 label$2357:;
 {
  struct $7VECTOR2 TMP$2030$2;
  struct $7VECTOR2 TMP$2031$2;
  _ZN7VECTOR2C1Edd( &TMP$2030$2, D$1, 0x0p+0 );
  struct $7VECTOR2* vr$34 = _ZmiR7VECTOR2S0_( &TMP$2031$2, &P$1, &TMP$2030$2 );
  double vr$35 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR2( THIS$1, (struct $7VECTOR2*)vr$34 );
  double vr$39 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR2( THIS$1, (struct $7VECTOR2*)&P$1 );
  double vr$41 = _ZN12SYSTEM_BUS_T5K_MAXEdd( THIS$1, vr$39 - RA$1, -(vr$35 - RB$1) );
  fb$result$1 = vr$41;
  goto label$2355;
 }
 label$2356:;
 label$2355:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T12SDWOBBLECUBEER7VECTOR3d( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, double S$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2358:;
 double vr$15 = _ZN12SYSTEM_BUS_T5K_MAXEdd( THIS$1, (__builtin_fabs( *(double*)((uint8*)P$1 + 16ll) ) - S$1) + (__builtin_sin( (*(double*)((uint8*)P$1 + 24ll) * 0x1.4p+3) ) * 0x1.999999999999Ap-5), __builtin_fabs( *(double*)((uint8*)P$1 + 24ll) ) - S$1 );
 double vr$16 = _ZN12SYSTEM_BUS_T5K_MAXEdd( THIS$1, vr$15, __builtin_fabs( *(double*)((uint8*)P$1 + 32ll) ) - S$1 );
 fb$result$1 = vr$16;
 goto label$2359;
 label$2359:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T10UDTRIANGLEER7VECTOR3S1_S1_S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR3* A$1, struct $7VECTOR3* B$1, struct $7VECTOR3* C$1 )
{
 struct $7VECTOR3 TMP$2032$1;
 struct $7VECTOR3 TMP$2033$1;
 struct $7VECTOR3 TMP$2034$1;
 struct $7VECTOR3 TMP$2035$1;
 struct $7VECTOR3 TMP$2036$1;
 struct $7VECTOR3 TMP$2037$1;
 struct $7VECTOR3 TMP$2038$1;
 struct $7VECTOR3 TMP$2039$1;
 struct $7VECTOR3 TMP$2040$1;
 struct $7VECTOR3 TMP$2041$1;
 struct $7VECTOR3 TMP$2042$1;
 struct $7VECTOR3 TMP$2043$1;
 struct $7VECTOR3 TMP$2044$1;
 struct $7VECTOR3 TMP$2045$1;
 struct $7VECTOR3 TMP$2046$1;
 struct $7VECTOR3 TMP$2047$1;
 struct $7VECTOR3 TMP$2048$1;
 struct $7VECTOR3 TMP$2049$1;
 struct $7VECTOR3 TMP$2050$1;
 struct $7VECTOR3 TMP$2051$1;
 struct $7VECTOR3 TMP$2052$1;
 struct $7VECTOR3 TMP$2053$1;
 double TMP$2054$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2360:;
 struct $7VECTOR3 BA$1;
 struct $7VECTOR3* vr$2 = _ZmiR7VECTOR3S0_( &TMP$2032$1, B$1, A$1 );
 _ZN7VECTOR3C1ERS_( &BA$1, vr$2 );
 struct $7VECTOR3 CB$1;
 struct $7VECTOR3* vr$5 = _ZmiR7VECTOR3S0_( &TMP$2033$1, C$1, B$1 );
 _ZN7VECTOR3C1ERS_( &CB$1, vr$5 );
 struct $7VECTOR3 AC$1;
 struct $7VECTOR3* vr$8 = _ZmiR7VECTOR3S0_( &TMP$2034$1, A$1, C$1 );
 _ZN7VECTOR3C1ERS_( &AC$1, vr$8 );
 struct $7VECTOR3 PA$1;
 struct $7VECTOR3* vr$11 = _ZmiR7VECTOR3S0_( &TMP$2035$1, P$1, A$1 );
 _ZN7VECTOR3C1ERS_( &PA$1, vr$11 );
 struct $7VECTOR3 PB$1;
 struct $7VECTOR3* vr$14 = _ZmiR7VECTOR3S0_( &TMP$2036$1, P$1, B$1 );
 _ZN7VECTOR3C1ERS_( &PB$1, vr$14 );
 struct $7VECTOR3 PC$1;
 struct $7VECTOR3* vr$17 = _ZmiR7VECTOR3S0_( &TMP$2037$1, P$1, C$1 );
 _ZN7VECTOR3C1ERS_( &PC$1, vr$17 );
 struct $7VECTOR3 NOR$1;
 struct $7VECTOR3* vr$22 = _ZN12SYSTEM_BUS_T7K_CROSSER7VECTOR3S1_( &TMP$2038$1, THIS$1, &BA$1, &AC$1 );
 _ZN7VECTOR3C1ERS_( &NOR$1, vr$22 );
 struct $7VECTOR3* vr$28 = _ZN12SYSTEM_BUS_T7K_CROSSER7VECTOR3S1_( &TMP$2039$1, THIS$1, &BA$1, &NOR$1 );
 double vr$29 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, vr$28, &PA$1 );
 double vr$30 = _ZN12SYSTEM_BUS_T6K_SIGNEd( THIS$1, vr$29 );
 struct $7VECTOR3* vr$35 = _ZN12SYSTEM_BUS_T7K_CROSSER7VECTOR3S1_( &TMP$2040$1, THIS$1, &CB$1, &NOR$1 );
 double vr$36 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, vr$35, &PB$1 );
 double vr$37 = _ZN12SYSTEM_BUS_T6K_SIGNEd( THIS$1, vr$36 );
 struct $7VECTOR3* vr$43 = _ZN12SYSTEM_BUS_T7K_CROSSER7VECTOR3S1_( &TMP$2041$1, THIS$1, &AC$1, &NOR$1 );
 double vr$44 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, vr$43, &PC$1 );
 double vr$45 = _ZN12SYSTEM_BUS_T6K_SIGNEd( THIS$1, vr$44 );
 if( ((vr$30 + vr$37) + vr$45) >= 0x1.p+1 ) goto label$2362;
 double vr$50 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, &AC$1, &PC$1 );
 double vr$53 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, &AC$1, &AC$1 );
 double vr$55 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, vr$50 / vr$53, 0x0p+0, 0x1.p+0 );
 struct $7VECTOR3* vr$58 = _ZmlR7VECTOR3d( &TMP$2052$1, &AC$1, vr$55 );
 struct $7VECTOR3* vr$60 = _ZmiR7VECTOR3S0_( &TMP$2053$1, vr$58, &PC$1 );
 double vr$64 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, &AC$1, &PC$1 );
 double vr$67 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, &AC$1, &AC$1 );
 double vr$69 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, vr$64 / vr$67, 0x0p+0, 0x1.p+0 );
 struct $7VECTOR3* vr$72 = _ZmlR7VECTOR3d( &TMP$2050$1, &AC$1, vr$69 );
 struct $7VECTOR3* vr$74 = _ZmiR7VECTOR3S0_( &TMP$2051$1, vr$72, &PC$1 );
 double vr$75 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, vr$74, vr$60 );
 double vr$79 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, &CB$1, &PB$1 );
 double vr$82 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, &CB$1, &CB$1 );
 double vr$84 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, vr$79 / vr$82, 0x0p+0, 0x1.p+0 );
 struct $7VECTOR3* vr$87 = _ZmlR7VECTOR3d( &TMP$2048$1, &CB$1, vr$84 );
 struct $7VECTOR3* vr$89 = _ZmiR7VECTOR3S0_( &TMP$2049$1, vr$87, &PB$1 );
 double vr$93 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, &CB$1, &PB$1 );
 double vr$96 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, &CB$1, &CB$1 );
 double vr$98 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, vr$93 / vr$96, 0x0p+0, 0x1.p+0 );
 struct $7VECTOR3* vr$101 = _ZmlR7VECTOR3d( &TMP$2046$1, &CB$1, vr$98 );
 struct $7VECTOR3* vr$103 = _ZmiR7VECTOR3S0_( &TMP$2047$1, vr$101, &PB$1 );
 double vr$104 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, vr$103, vr$89 );
 double vr$108 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, &BA$1, &PA$1 );
 double vr$111 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, &BA$1, &BA$1 );
 double vr$113 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, vr$108 / vr$111, 0x0p+0, 0x1.p+0 );
 struct $7VECTOR3* vr$116 = _ZmlR7VECTOR3d( &TMP$2044$1, &BA$1, vr$113 );
 struct $7VECTOR3* vr$118 = _ZmiR7VECTOR3S0_( &TMP$2045$1, vr$116, &PA$1 );
 double vr$122 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, &BA$1, &PA$1 );
 double vr$125 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, &BA$1, &BA$1 );
 double vr$127 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, vr$122 / vr$125, 0x0p+0, 0x1.p+0 );
 struct $7VECTOR3* vr$130 = _ZmlR7VECTOR3d( &TMP$2042$1, &BA$1, vr$127 );
 struct $7VECTOR3* vr$132 = _ZmiR7VECTOR3S0_( &TMP$2043$1, vr$130, &PA$1 );
 double vr$133 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, vr$132, vr$118 );
 double vr$134 = _ZN12SYSTEM_BUS_T5K_MINEdd( THIS$1, vr$133, vr$104 );
 double vr$135 = _ZN12SYSTEM_BUS_T5K_MINEdd( THIS$1, vr$134, vr$75 );
 TMP$2054$1 = vr$135;
 goto label$2363;
 label$2362:;
 double vr$138 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, &NOR$1, &PA$1 );
 double vr$141 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, &NOR$1, &PA$1 );
 double vr$145 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, &NOR$1, &NOR$1 );
 TMP$2054$1 = (vr$138 * vr$141) / vr$145;
 label$2363:;
 double vr$147 = _ZN12SYSTEM_BUS_T6K_SQRTEd( THIS$1, TMP$2054$1 );
 fb$result$1 = vr$147;
 goto label$2361;
 label$2361:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6UDQUADER7VECTOR3S1_S1_S1_S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR3* A$1, struct $7VECTOR3* B$1, struct $7VECTOR3* C$1, struct $7VECTOR3* D$1 )
{
 struct $7VECTOR3 TMP$2055$1;
 struct $7VECTOR3 TMP$2056$1;
 struct $7VECTOR3 TMP$2057$1;
 struct $7VECTOR3 TMP$2058$1;
 struct $7VECTOR3 TMP$2059$1;
 struct $7VECTOR3 TMP$2060$1;
 struct $7VECTOR3 TMP$2061$1;
 struct $7VECTOR3 TMP$2062$1;
 struct $7VECTOR3 TMP$2063$1;
 struct $7VECTOR3 TMP$2064$1;
 struct $7VECTOR3 TMP$2065$1;
 struct $7VECTOR3 TMP$2066$1;
 struct $7VECTOR3 TMP$2067$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2364:;
 struct $7VECTOR3 BA$1;
 struct $7VECTOR3* vr$2 = _ZmiR7VECTOR3S0_( &TMP$2055$1, B$1, A$1 );
 _ZN7VECTOR3C1ERS_( &BA$1, vr$2 );
 struct $7VECTOR3 PA$1;
 struct $7VECTOR3* vr$5 = _ZmiR7VECTOR3S0_( &TMP$2056$1, P$1, A$1 );
 _ZN7VECTOR3C1ERS_( &PA$1, vr$5 );
 struct $7VECTOR3 CB$1;
 struct $7VECTOR3* vr$8 = _ZmiR7VECTOR3S0_( &TMP$2057$1, C$1, B$1 );
 _ZN7VECTOR3C1ERS_( &CB$1, vr$8 );
 struct $7VECTOR3 PB$1;
 struct $7VECTOR3* vr$11 = _ZmiR7VECTOR3S0_( &TMP$2058$1, P$1, B$1 );
 _ZN7VECTOR3C1ERS_( &PB$1, vr$11 );
 struct $7VECTOR3 DC$1;
 struct $7VECTOR3* vr$14 = _ZmiR7VECTOR3S0_( &TMP$2059$1, D$1, C$1 );
 _ZN7VECTOR3C1ERS_( &DC$1, vr$14 );
 struct $7VECTOR3 PC$1;
 struct $7VECTOR3* vr$17 = _ZmiR7VECTOR3S0_( &TMP$2060$1, P$1, C$1 );
 _ZN7VECTOR3C1ERS_( &PC$1, vr$17 );
 struct $7VECTOR3 AD$1;
 struct $7VECTOR3* vr$20 = _ZmiR7VECTOR3S0_( &TMP$2061$1, A$1, D$1 );
 _ZN7VECTOR3C1ERS_( &AD$1, vr$20 );
 struct $7VECTOR3 PD$1;
 struct $7VECTOR3* vr$23 = _ZmiR7VECTOR3S0_( &TMP$2062$1, P$1, D$1 );
 _ZN7VECTOR3C1ERS_( &PD$1, vr$23 );
 struct $7VECTOR3 NOR$1;
 struct $7VECTOR3* vr$28 = _ZN12SYSTEM_BUS_T7K_CROSSER7VECTOR3S1_( &TMP$2063$1, THIS$1, &BA$1, &AD$1 );
 _ZN7VECTOR3C1ERS_( &NOR$1, vr$28 );
 double S$1;
 struct $7VECTOR3* vr$34 = _ZN12SYSTEM_BUS_T7K_CROSSER7VECTOR3S1_( &TMP$2064$1, THIS$1, &BA$1, &NOR$1 );
 double vr$35 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, vr$34, &PA$1 );
 double vr$36 = _ZN12SYSTEM_BUS_T6K_SIGNEd( THIS$1, vr$35 );
 struct $7VECTOR3* vr$41 = _ZN12SYSTEM_BUS_T7K_CROSSER7VECTOR3S1_( &TMP$2065$1, THIS$1, &CB$1, &NOR$1 );
 double vr$42 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, vr$41, &PB$1 );
 double vr$43 = _ZN12SYSTEM_BUS_T6K_SIGNEd( THIS$1, vr$42 );
 struct $7VECTOR3* vr$49 = _ZN12SYSTEM_BUS_T7K_CROSSER7VECTOR3S1_( &TMP$2066$1, THIS$1, &DC$1, &NOR$1 );
 double vr$50 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, vr$49, &PC$1 );
 double vr$51 = _ZN12SYSTEM_BUS_T6K_SIGNEd( THIS$1, vr$50 );
 struct $7VECTOR3* vr$57 = _ZN12SYSTEM_BUS_T7K_CROSSER7VECTOR3S1_( &TMP$2067$1, THIS$1, &AD$1, &NOR$1 );
 double vr$58 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, vr$57, &PD$1 );
 double vr$59 = _ZN12SYSTEM_BUS_T6K_SIGNEd( THIS$1, vr$58 );
 S$1 = ((vr$36 + vr$43) + vr$51) + vr$59;
 if( S$1 >= 0x1.8p+1 ) goto label$2367;
 {
  struct $7VECTOR3 TMP$2068$2;
  struct $7VECTOR3 TMP$2069$2;
  struct $7VECTOR3 TMP$2070$2;
  struct $7VECTOR3 TMP$2071$2;
  struct $7VECTOR3 TMP$2072$2;
  struct $7VECTOR3 TMP$2073$2;
  struct $7VECTOR3 TMP$2074$2;
  struct $7VECTOR3 TMP$2075$2;
  struct $7VECTOR3 TMP$2076$2;
  struct $7VECTOR3 TMP$2077$2;
  struct $7VECTOR3 TMP$2078$2;
  struct $7VECTOR3 TMP$2079$2;
  struct $7VECTOR3 TMP$2080$2;
  struct $7VECTOR3 TMP$2081$2;
  struct $7VECTOR3 TMP$2082$2;
  struct $7VECTOR3 TMP$2083$2;
  double vr$64 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, &AD$1, &PD$1 );
  double vr$67 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, &AD$1, &AD$1 );
  double vr$69 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, vr$64 / vr$67, 0x0p+0, 0x1.p+0 );
  struct $7VECTOR3* vr$72 = _ZmlR7VECTOR3d( &TMP$2082$2, &AD$1, vr$69 );
  struct $7VECTOR3* vr$74 = _ZmiR7VECTOR3S0_( &TMP$2083$2, vr$72, &PD$1 );
  double vr$78 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, &AD$1, &PD$1 );
  double vr$81 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, &AD$1, &AD$1 );
  double vr$83 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, vr$78 / vr$81, 0x0p+0, 0x1.p+0 );
  struct $7VECTOR3* vr$86 = _ZmlR7VECTOR3d( &TMP$2080$2, &AD$1, vr$83 );
  struct $7VECTOR3* vr$88 = _ZmiR7VECTOR3S0_( &TMP$2081$2, vr$86, &PD$1 );
  double vr$89 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, vr$88, vr$74 );
  double vr$93 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, &DC$1, &PC$1 );
  double vr$96 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, &DC$1, &DC$1 );
  double vr$98 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, vr$93 / vr$96, 0x0p+0, 0x1.p+0 );
  struct $7VECTOR3* vr$101 = _ZmlR7VECTOR3d( &TMP$2078$2, &DC$1, vr$98 );
  struct $7VECTOR3* vr$103 = _ZmiR7VECTOR3S0_( &TMP$2079$2, vr$101, &PC$1 );
  double vr$107 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, &DC$1, &PC$1 );
  double vr$110 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, &DC$1, &DC$1 );
  double vr$112 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, vr$107 / vr$110, 0x0p+0, 0x1.p+0 );
  struct $7VECTOR3* vr$115 = _ZmlR7VECTOR3d( &TMP$2076$2, &DC$1, vr$112 );
  struct $7VECTOR3* vr$117 = _ZmiR7VECTOR3S0_( &TMP$2077$2, vr$115, &PC$1 );
  double vr$118 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, vr$117, vr$103 );
  double vr$122 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, &CB$1, &PB$1 );
  double vr$125 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, &CB$1, &CB$1 );
  double vr$127 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, vr$122 / vr$125, 0x0p+0, 0x1.p+0 );
  struct $7VECTOR3* vr$130 = _ZmlR7VECTOR3d( &TMP$2074$2, &CB$1, vr$127 );
  struct $7VECTOR3* vr$132 = _ZmiR7VECTOR3S0_( &TMP$2075$2, vr$130, &PB$1 );
  double vr$136 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, &CB$1, &PB$1 );
  double vr$139 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, &CB$1, &CB$1 );
  double vr$141 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, vr$136 / vr$139, 0x0p+0, 0x1.p+0 );
  struct $7VECTOR3* vr$144 = _ZmlR7VECTOR3d( &TMP$2072$2, &CB$1, vr$141 );
  struct $7VECTOR3* vr$146 = _ZmiR7VECTOR3S0_( &TMP$2073$2, vr$144, &PB$1 );
  double vr$147 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, vr$146, vr$132 );
  double vr$151 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, &BA$1, &PA$1 );
  double vr$154 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, &BA$1, &BA$1 );
  double vr$156 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, vr$151 / vr$154, 0x0p+0, 0x1.p+0 );
  struct $7VECTOR3* vr$159 = _ZmlR7VECTOR3d( &TMP$2070$2, &BA$1, vr$156 );
  struct $7VECTOR3* vr$161 = _ZmiR7VECTOR3S0_( &TMP$2071$2, vr$159, &PA$1 );
  double vr$165 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, &BA$1, &PA$1 );
  double vr$168 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, &BA$1, &BA$1 );
  double vr$170 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, vr$165 / vr$168, 0x0p+0, 0x1.p+0 );
  struct $7VECTOR3* vr$173 = _ZmlR7VECTOR3d( &TMP$2068$2, &BA$1, vr$170 );
  struct $7VECTOR3* vr$175 = _ZmiR7VECTOR3S0_( &TMP$2069$2, vr$173, &PA$1 );
  double vr$176 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, vr$175, vr$161 );
  double vr$177 = _ZN12SYSTEM_BUS_T5K_MINEdd( THIS$1, vr$176, vr$147 );
  double vr$178 = _ZN12SYSTEM_BUS_T5K_MINEdd( THIS$1, vr$177, vr$118 );
  double vr$179 = _ZN12SYSTEM_BUS_T5K_MINEdd( THIS$1, vr$178, vr$89 );
  double vr$180 = _ZN12SYSTEM_BUS_T6K_SQRTEd( THIS$1, vr$179 );
  fb$result$1 = vr$180;
  goto label$2365;
  label$2367:;
 }
 double vr$183 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, &NOR$1, &PA$1 );
 double vr$186 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, &NOR$1, &PA$1 );
 double vr$190 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, &NOR$1, &NOR$1 );
 double vr$192 = _ZN12SYSTEM_BUS_T6K_SQRTEd( THIS$1, (vr$183 * vr$186) / vr$190 );
 fb$result$1 = vr$192;
 goto label$2365;
 label$2365:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T3OPSEdd( struct $12SYSTEM_BUS_T* THIS$1, double D1$1, double D2$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2368:;
 double vr$2 = _ZN12SYSTEM_BUS_T5K_MAXEdd( THIS$1, -D2$1, D1$1 );
 fb$result$1 = vr$2;
 goto label$2369;
 label$2369:;
 return fb$result$1;
}

struct $7VECTOR2* _ZN12SYSTEM_BUS_T3OPUER7VECTOR2S1_( struct $7VECTOR2* tmp$2084$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR2* D1$1, struct $7VECTOR2* D2$1 )
{
 struct $7VECTOR2 TMP$2085$1;
 label$2370:;
 if( *(double*)D1$1 >= *(double*)D2$1 ) goto label$2372;
 _ZN7VECTOR2C1ERS_( &TMP$2085$1, D1$1 );
 goto label$2373;
 label$2372:;
 _ZN7VECTOR2C1ERS_( &TMP$2085$1, D2$1 );
 label$2373:;
 _ZN7VECTOR2C1ERS_( tmp$2084$1, &TMP$2085$1 );
 goto label$2371;
 label$2371:;
 return tmp$2084$1;
}

double _ZN12SYSTEM_BUS_T3OPIEdd( struct $12SYSTEM_BUS_T* THIS$1, double D1$1, double D2$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2374:;
 double vr$1 = _ZN12SYSTEM_BUS_T5K_MAXEdd( THIS$1, D1$1, D2$1 );
 fb$result$1 = vr$1;
 goto label$2375;
 label$2375:;
 return fb$result$1;
}

struct $7VECTOR3* _ZN12SYSTEM_BUS_T5OPREPER7VECTOR3S1_( struct $7VECTOR3* tmp$2086$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR3* C$1 )
{
 struct $7VECTOR3 TMP$2087$1;
 struct $7VECTOR3 TMP$2088$1;
 struct $7VECTOR3 TMP$2089$1;
 label$2376:;
 struct $7VECTOR3* vr$1 = _ZmlR7VECTOR3d( &TMP$2088$1, C$1, 0x1.p-1 );
 struct $7VECTOR3* vr$3 = _ZN12SYSTEM_BUS_T8K_MODULOER7VECTOR3S1_( &TMP$2087$1, THIS$1, P$1, C$1 );
 struct $7VECTOR3* vr$5 = _ZmiR7VECTOR3S0_( &TMP$2089$1, vr$3, vr$1 );
 _ZN7VECTOR3C1ERS_( tmp$2086$1, vr$5 );
 goto label$2377;
 label$2377:;
 return tmp$2086$1;
}

double _ZN12SYSTEM_BUS_T7EXPSMINEddd( struct $12SYSTEM_BUS_T* THIS$1, double A$1, double B$1, double K$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2378:;
 double RES$1;
 double vr$3 = _ZN12SYSTEM_BUS_T5K_EXPEd( THIS$1, -K$1 * A$1 );
 double vr$6 = _ZN12SYSTEM_BUS_T5K_EXPEd( THIS$1, -K$1 * B$1 );
 RES$1 = vr$3 + vr$6;
 double vr$8 = _ZN12SYSTEM_BUS_T5K_LOGEd( THIS$1, RES$1 );
 fb$result$1 = -vr$8 / K$1;
 goto label$2379;
 label$2379:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8POLYSMINEddd( struct $12SYSTEM_BUS_T* THIS$1, double A$1, double B$1, double K$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2380:;
 double H$1;
 double vr$5 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, (((B$1 - A$1) * 0x1.p-1) / K$1) + 0x1.p-1, 0x0p+0, 0x1.p+0 );
 H$1 = vr$5;
 double vr$6 = _ZN12SYSTEM_BUS_T5K_MIXEddd( THIS$1, B$1, A$1, H$1 );
 fb$result$1 = vr$6 - ((K$1 * H$1) * (0x1.p+0 - H$1));
 goto label$2381;
 label$2381:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7POWSMINEddd( struct $12SYSTEM_BUS_T* THIS$1, double A$1, double B$1, double K$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2382:;
 double vr$1 = _ZN12SYSTEM_BUS_T5K_POWEdd( THIS$1, A$1, K$1 );
 A$1 = vr$1;
 double vr$2 = _ZN12SYSTEM_BUS_T5K_POWEdd( THIS$1, B$1, K$1 );
 B$1 = vr$2;
 double vr$7 = _ZN12SYSTEM_BUS_T5K_POWEdd( THIS$1, (A$1 * B$1) / (A$1 + B$1), 0x1.p+0 / K$1 );
 fb$result$1 = vr$7;
 goto label$2383;
 label$2383:;
 return fb$result$1;
}

struct $7VECTOR3* _ZN12SYSTEM_BUS_T7OPTWISTER7VECTOR3( struct $7VECTOR3* tmp$2090$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P$1 )
{
 struct $7VECTOR2 TMP$2093$1;
 struct $7VECTOR2 TMP$2094$1;
 label$2384:;
 double C$1;
 C$1 = __builtin_cos( ((*(double*)((uint8*)P$1 + 24ll) * 0x1.4p+3) + 0x1.4p+3) );
 double S$1;
 S$1 = __builtin_sin( ((*(double*)((uint8*)P$1 + 24ll) * 0x1.4p+3) + 0x1.4p+3) );
 struct $4MAT2 M$1;
 _ZN4MAT2C1Edddd( &M$1, C$1, -S$1, S$1, C$1 );
 struct $7VECTOR2* vr$12 = _ZN7VECTOR32XZEv( &TMP$2093$1, P$1 );
 struct $7VECTOR2* vr$15 = _ZmlR4MAT2R7VECTOR2( &TMP$2094$1, &M$1, vr$12 );
 _ZN7VECTOR3C1ER7VECTOR2d( tmp$2090$1, vr$15, *(double*)((uint8*)P$1 + 24ll) );
 goto label$2385;
 label$2385:;
 return tmp$2090$1;
}

struct $7VECTOR2* _ZN12SYSTEM_BUS_T3MAPER7VECTOR3( struct $7VECTOR2* tmp$2095$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* P3$1 )
{
 struct $7VECTOR2 TMP$2096$1;
 struct $7VECTOR2 TMP$2097$1;
 struct $7VECTOR2 TMP$2098$1;
 struct $7VECTOR3 TMP$2099$1;
 struct $7VECTOR3 TMP$2100$1;
 struct $7VECTOR2 TMP$2101$1;
 struct $7VECTOR2 TMP$2102$1;
 struct $7VECTOR3 TMP$2103$1;
 struct $7VECTOR3 TMP$2104$1;
 struct $7VECTOR3 TMP$2105$1;
 struct $7VECTOR2 TMP$2106$1;
 struct $7VECTOR2 TMP$2107$1;
 struct $7VECTOR3 TMP$2108$1;
 struct $7VECTOR3 TMP$2109$1;
 struct $7VECTOR3 TMP$2110$1;
 struct $7VECTOR2 TMP$2111$1;
 struct $7VECTOR2 TMP$2112$1;
 struct $7VECTOR3 TMP$2113$1;
 struct $7VECTOR3 TMP$2114$1;
 struct $7VECTOR2 TMP$2115$1;
 struct $7VECTOR2 TMP$2116$1;
 struct $7VECTOR2 TMP$2117$1;
 struct $7VECTOR3 TMP$2118$1;
 struct $7VECTOR3 TMP$2119$1;
 struct $7VECTOR2 TMP$2120$1;
 struct $7VECTOR2 TMP$2121$1;
 struct $7VECTOR3 TMP$2122$1;
 struct $7VECTOR3 TMP$2123$1;
 struct $7VECTOR2 TMP$2124$1;
 struct $7VECTOR2 TMP$2125$1;
 struct $7VECTOR2 TMP$2126$1;
 struct $7VECTOR3 TMP$2127$1;
 struct $7VECTOR3 TMP$2128$1;
 struct $7VECTOR2 TMP$2129$1;
 struct $7VECTOR2 TMP$2130$1;
 struct $7VECTOR2 TMP$2131$1;
 struct $7VECTOR3 TMP$2132$1;
 struct $7VECTOR3 TMP$2133$1;
 struct $7VECTOR3 TMP$2134$1;
 struct $7VECTOR2 TMP$2135$1;
 struct $7VECTOR2 TMP$2136$1;
 struct $7VECTOR3 TMP$2137$1;
 struct $7VECTOR3 TMP$2138$1;
 struct $7VECTOR2 TMP$2139$1;
 struct $7VECTOR2 TMP$2140$1;
 struct $7VECTOR2 TMP$2141$1;
 struct $7VECTOR3 TMP$2142$1;
 struct $7VECTOR3 TMP$2143$1;
 struct $7VECTOR2 TMP$2144$1;
 struct $7VECTOR2 TMP$2145$1;
 struct $7VECTOR2 TMP$2146$1;
 struct $7VECTOR3 TMP$2147$1;
 struct $7VECTOR3 TMP$2148$1;
 struct $7VECTOR2 TMP$2149$1;
 struct $7VECTOR2 TMP$2150$1;
 struct $7VECTOR2 TMP$2151$1;
 struct $7VECTOR3 TMP$2152$1;
 struct $7VECTOR3 TMP$2153$1;
 struct $7VECTOR2 TMP$2154$1;
 struct $7VECTOR2 TMP$2155$1;
 struct $7VECTOR2 TMP$2156$1;
 struct $7VECTOR3 TMP$2157$1;
 struct $7VECTOR3 TMP$2158$1;
 struct $7VECTOR3 TMP$2159$1;
 struct $7VECTOR3 TMP$2160$1;
 struct $7VECTOR3 TMP$2161$1;
 struct $7VECTOR2 TMP$2162$1;
 struct $7VECTOR2 TMP$2163$1;
 struct $7VECTOR3 TMP$2164$1;
 struct $7VECTOR3 TMP$2165$1;
 struct $7VECTOR2 TMP$2166$1;
 struct $7VECTOR3 TMP$2167$1;
 struct $7VECTOR3 TMP$2168$1;
 struct $7VECTOR3 TMP$2169$1;
 struct $7VECTOR3 TMP$2170$1;
 struct $7VECTOR3 TMP$2171$1;
 struct $7VECTOR2 TMP$2172$1;
 struct $7VECTOR2 TMP$2173$1;
 struct $7VECTOR2 TMP$2174$1;
 struct $7VECTOR3 TMP$2175$1;
 struct $7VECTOR3 TMP$2176$1;
 struct $7VECTOR2 TMP$2177$1;
 struct $7VECTOR2 TMP$2178$1;
 struct $7VECTOR3 TMP$2179$1;
 struct $7VECTOR3 TMP$2180$1;
 struct $7VECTOR3 TMP$2181$1;
 struct $7VECTOR2 TMP$2182$1;
 struct $7VECTOR2 TMP$2183$1;
 struct $7VECTOR2 TMP$2184$1;
 struct $7VECTOR3 TMP$2185$1;
 struct $7VECTOR3 TMP$2186$1;
 struct $7VECTOR2 TMP$2187$1;
 struct $7VECTOR2 TMP$2188$1;
 struct $7VECTOR3 TMP$2189$1;
 struct $7VECTOR3 TMP$2190$1;
 struct $7VECTOR3 TMP$2191$1;
 label$2386:;
 double vr$0 = _ZN12SYSTEM_BUS_T7SDPLANEER7VECTOR3( THIS$1, P3$1 );
 _ZN7VECTOR2C1Edd( &TMP$2096$1, vr$0, 0x1.p+0 );
 _ZN7VECTOR2aSERS_( &RES2$, &TMP$2096$1 );
 _ZN7VECTOR3C1Eddd( &TMP$2099$1, 0x0p+0, 0x1.p-2, 0x0p+0 );
 struct $7VECTOR3* vr$6 = _ZmiR7VECTOR3S0_( &TMP$2100$1, P3$1, &TMP$2099$1 );
 double vr$7 = _ZN12SYSTEM_BUS_T8SDSPHEREER7VECTOR3d( THIS$1, vr$6, 0x1.p-2 );
 _ZN7VECTOR2C1Edd( &TMP$2098$1, vr$7, 0x1.7733333333333p+5 );
 struct $7VECTOR2* vr$11 = _ZN12SYSTEM_BUS_T3OPUER7VECTOR2S1_( &TMP$2097$1, THIS$1, &RES2$, &TMP$2098$1 );
 _ZN7VECTOR2aSERS_( &RES2$, vr$11 );
 _ZN7VECTOR3C1Ed( &TMP$2105$1, 0x1.p-2 );
 _ZN7VECTOR3C1Eddd( &TMP$2103$1, 0x1.p+0, 0x1.p-2, 0x0p+0 );
 struct $7VECTOR3* vr$17 = _ZmiR7VECTOR3S0_( &TMP$2104$1, P3$1, &TMP$2103$1 );
 double vr$18 = _ZN12SYSTEM_BUS_T5SDBOXER7VECTOR3S1_( THIS$1, vr$17, &TMP$2105$1 );
 _ZN7VECTOR2C1Edd( &TMP$2102$1, vr$18, 0x1.8p+1 );
 struct $7VECTOR2* vr$22 = _ZN12SYSTEM_BUS_T3OPUER7VECTOR2S1_( &TMP$2101$1, THIS$1, &RES2$, &TMP$2102$1 );
 _ZN7VECTOR2aSERS_( &RES2$, vr$22 );
 _ZN7VECTOR3C1Ed( &TMP$2110$1, 0x1.3333333333333p-3 );
 _ZN7VECTOR3C1Eddd( &TMP$2108$1, 0x1.p+0, 0x1.p-2, 0x1.p+0 );
 struct $7VECTOR3* vr$28 = _ZmiR7VECTOR3S0_( &TMP$2109$1, P3$1, &TMP$2108$1 );
 double vr$29 = _ZN12SYSTEM_BUS_T10UDROUNDBOXER7VECTOR3S1_d( THIS$1, vr$28, &TMP$2110$1, 0x1.999999999999Ap-4 );
 _ZN7VECTOR2C1Edd( &TMP$2107$1, vr$29, 0x1.48p+5 );
 struct $7VECTOR2* vr$33 = _ZN12SYSTEM_BUS_T3OPUER7VECTOR2S1_( &TMP$2106$1, THIS$1, &RES2$, &TMP$2107$1 );
 _ZN7VECTOR2aSERS_( &RES2$, vr$33 );
 _ZN7VECTOR2C1Edd( &TMP$2115$1, 0x1.999999999999Ap-3, 0x1.999999999999Ap-5 );
 _ZN7VECTOR3C1Eddd( &TMP$2113$1, 0x0p+0, 0x1.p-2, 0x1.p+0 );
 struct $7VECTOR3* vr$39 = _ZmiR7VECTOR3S0_( &TMP$2114$1, P3$1, &TMP$2113$1 );
 double vr$40 = _ZN12SYSTEM_BUS_T7SDTORUSER7VECTOR3R7VECTOR2( THIS$1, vr$39, &TMP$2115$1 );
 _ZN7VECTOR2C1Edd( &TMP$2112$1, vr$40, 0x1.9p+4 );
 struct $7VECTOR2* vr$44 = _ZN12SYSTEM_BUS_T3OPUER7VECTOR2S1_( &TMP$2111$1, THIS$1, &RES2$, &TMP$2112$1 );
 _ZN7VECTOR2aSERS_( &RES2$, vr$44 );
 _ZN7VECTOR3C1Eddd( &TMP$2119$1, -0x1.999999999999Ap-1, 0x1.p-1, 0x1.999999999999Ap-3 );
 _ZN7VECTOR3C1Eddd( &TMP$2118$1, -0x1.4CCCCCCCCCCCDp+0, 0x1.999999999999Ap-4, -0x1.999999999999Ap-4 );
 double vr$49 = _ZN12SYSTEM_BUS_T9SDCAPSULEER7VECTOR3S1_S1_d( THIS$1, P3$1, &TMP$2118$1, &TMP$2119$1, 0x1.999999999999Ap-4 );
 _ZN7VECTOR2C1Edd( &TMP$2117$1, vr$49, 0x1.FE66666666666p+4 );
 struct $7VECTOR2* vr$53 = _ZN12SYSTEM_BUS_T3OPUER7VECTOR2S1_( &TMP$2116$1, THIS$1, &RES2$, &TMP$2117$1 );
 _ZN7VECTOR2aSERS_( &RES2$, vr$53 );
 _ZN7VECTOR2C1Edd( &TMP$2124$1, 0x1.p-2, 0x1.999999999999Ap-5 );
 _ZN7VECTOR3C1Eddd( &TMP$2122$1, -0x1.p+0, 0x1.p-2, -0x1.p+0 );
 struct $7VECTOR3* vr$59 = _ZmiR7VECTOR3S0_( &TMP$2123$1, P3$1, &TMP$2122$1 );
 double vr$60 = _ZN12SYSTEM_BUS_T10SDTRIPRISMER7VECTOR3R7VECTOR2( THIS$1, vr$59, &TMP$2124$1 );
 _ZN7VECTOR2C1Edd( &TMP$2121$1, vr$60, 0x1.5Cp+5 );
 struct $7VECTOR2* vr$64 = _ZN12SYSTEM_BUS_T3OPUER7VECTOR2S1_( &TMP$2120$1, THIS$1, &RES2$, &TMP$2121$1 );
 _ZN7VECTOR2aSERS_( &RES2$, vr$64 );
 _ZN7VECTOR2C1Edd( &TMP$2129$1, 0x1.999999999999Ap-4, 0x1.999999999999Ap-3 );
 _ZN7VECTOR3C1Eddd( &TMP$2127$1, 0x1.p+0, 0x1.3333333333333p-2, -0x1.p+0 );
 struct $7VECTOR3* vr$70 = _ZmiR7VECTOR3S0_( &TMP$2128$1, P3$1, &TMP$2127$1 );
 double vr$71 = _ZN12SYSTEM_BUS_T10SDCYLINDERER7VECTOR3R7VECTOR2( THIS$1, vr$70, &TMP$2129$1 );
 _ZN7VECTOR2C1Edd( &TMP$2126$1, vr$71, 0x1.p+3 );
 struct $7VECTOR2* vr$75 = _ZN12SYSTEM_BUS_T3OPUER7VECTOR2S1_( &TMP$2125$1, THIS$1, &RES2$, &TMP$2126$1 );
 _ZN7VECTOR2aSERS_( &RES2$, vr$75 );
 _ZN7VECTOR3C1Eddd( &TMP$2134$1, 0x1.999999999999Ap-1, 0x1.3333333333333p-1, 0x1.3333333333333p-2 );
 _ZN7VECTOR3C1Eddd( &TMP$2132$1, 0x0p+0, 0x1.p-1, -0x1.p+0 );
 struct $7VECTOR3* vr$81 = _ZmiR7VECTOR3S0_( &TMP$2133$1, P3$1, &TMP$2132$1 );
 double vr$82 = _ZN12SYSTEM_BUS_T6SDCONEER7VECTOR3S1_( THIS$1, vr$81, &TMP$2134$1 );
 _ZN7VECTOR2C1Edd( &TMP$2131$1, vr$82, 0x1.B8p+5 );
 struct $7VECTOR2* vr$86 = _ZN12SYSTEM_BUS_T3OPUER7VECTOR2S1_( &TMP$2130$1, THIS$1, &RES2$, &TMP$2131$1 );
 _ZN7VECTOR2aSERS_( &RES2$, vr$86 );
 _ZN7VECTOR2C1Edd( &TMP$2139$1, 0x1.999999999999Ap-3, 0x1.999999999999Ap-5 );
 _ZN7VECTOR3C1Eddd( &TMP$2137$1, 0x0p+0, 0x1.p-2, 0x1.p+1 );
 struct $7VECTOR3* vr$92 = _ZmiR7VECTOR3S0_( &TMP$2138$1, P3$1, &TMP$2137$1 );
 double vr$93 = _ZN12SYSTEM_BUS_T9SDTORUS82ER7VECTOR3R7VECTOR2( THIS$1, vr$92, &TMP$2139$1 );
 _ZN7VECTOR2C1Edd( &TMP$2136$1, vr$93, 0x1.9p+5 );
 struct $7VECTOR2* vr$97 = _ZN12SYSTEM_BUS_T3OPUER7VECTOR2S1_( &TMP$2135$1, THIS$1, &RES2$, &TMP$2136$1 );
 _ZN7VECTOR2aSERS_( &RES2$, vr$97 );
 _ZN7VECTOR2C1Edd( &TMP$2144$1, 0x1.999999999999Ap-3, 0x1.999999999999Ap-5 );
 _ZN7VECTOR3C1Eddd( &TMP$2142$1, -0x1.p+0, 0x1.p-2, 0x1.p+1 );
 struct $7VECTOR3* vr$103 = _ZmiR7VECTOR3S0_( &TMP$2143$1, P3$1, &TMP$2142$1 );
 double vr$104 = _ZN12SYSTEM_BUS_T9SDTORUS88ER7VECTOR3R7VECTOR2( THIS$1, vr$103, &TMP$2144$1 );
 _ZN7VECTOR2C1Edd( &TMP$2141$1, vr$104, 0x1.58p+5 );
 struct $7VECTOR2* vr$108 = _ZN12SYSTEM_BUS_T3OPUER7VECTOR2S1_( &TMP$2140$1, THIS$1, &RES2$, &TMP$2141$1 );
 _ZN7VECTOR2aSERS_( &RES2$, vr$108 );
 _ZN7VECTOR2C1Edd( &TMP$2149$1, 0x1.999999999999Ap-4, 0x1.999999999999Ap-3 );
 _ZN7VECTOR3C1Eddd( &TMP$2147$1, 0x1.p+0, 0x1.3333333333333p-2, 0x1.p+1 );
 struct $7VECTOR3* vr$114 = _ZmiR7VECTOR3S0_( &TMP$2148$1, P3$1, &TMP$2147$1 );
 double vr$115 = _ZN12SYSTEM_BUS_T11SDCYLINDER6ER7VECTOR3R7VECTOR2( THIS$1, vr$114, &TMP$2149$1 );
 _ZN7VECTOR2C1Edd( &TMP$2146$1, vr$115, 0x1.8p+3 );
 struct $7VECTOR2* vr$119 = _ZN12SYSTEM_BUS_T3OPUER7VECTOR2S1_( &TMP$2145$1, THIS$1, &RES2$, &TMP$2146$1 );
 _ZN7VECTOR2aSERS_( &RES2$, vr$119 );
 _ZN7VECTOR2C1Edd( &TMP$2154$1, 0x1.p-2, 0x1.999999999999Ap-5 );
 _ZN7VECTOR3C1Eddd( &TMP$2152$1, -0x1.p+0, 0x1.999999999999Ap-3, 0x1.p+0 );
 struct $7VECTOR3* vr$125 = _ZmiR7VECTOR3S0_( &TMP$2153$1, P3$1, &TMP$2152$1 );
 double vr$126 = _ZN12SYSTEM_BUS_T10SDHEXPRISMER7VECTOR3R7VECTOR2( THIS$1, vr$125, &TMP$2154$1 );
 _ZN7VECTOR2C1Edd( &TMP$2151$1, vr$126, 0x1.1p+4 );
 struct $7VECTOR2* vr$130 = _ZN12SYSTEM_BUS_T3OPUER7VECTOR2S1_( &TMP$2150$1, THIS$1, &RES2$, &TMP$2151$1 );
 _ZN7VECTOR2aSERS_( &RES2$, vr$130 );
 _ZN7VECTOR3C1Eddd( &TMP$2160$1, -0x1.p+1, 0x1.999999999999Ap-3, 0x1.p+0 );
 struct $7VECTOR3* vr$134 = _ZmiR7VECTOR3S0_( &TMP$2161$1, P3$1, &TMP$2160$1 );
 double vr$135 = _ZN12SYSTEM_BUS_T8SDSPHEREER7VECTOR3d( THIS$1, vr$134, 0x1.p-2 );
 _ZN7VECTOR3C1Ed( &TMP$2159$1, 0x1.3333333333333p-3 );
 _ZN7VECTOR3C1Eddd( &TMP$2157$1, -0x1.p+1, 0x1.999999999999Ap-3, 0x1.p+0 );
 struct $7VECTOR3* vr$141 = _ZmiR7VECTOR3S0_( &TMP$2158$1, P3$1, &TMP$2157$1 );
 double vr$142 = _ZN12SYSTEM_BUS_T10UDROUNDBOXER7VECTOR3S1_d( THIS$1, vr$141, &TMP$2159$1, 0x1.999999999999Ap-5 );
 double vr$143 = _ZN12SYSTEM_BUS_T3OPSEdd( THIS$1, vr$142, vr$135 );
 _ZN7VECTOR2C1Edd( &TMP$2156$1, vr$143, 0x1.Ap+3 );
 struct $7VECTOR2* vr$147 = _ZN12SYSTEM_BUS_T3OPUER7VECTOR2S1_( &TMP$2155$1, THIS$1, &RES2$, &TMP$2156$1 );
 _ZN7VECTOR2aSERS_( &RES2$, vr$147 );
 _ZN7VECTOR2C1Edd( &TMP$2172$1, 0x1.47AE147AE147Bp-6, 0x1.3333333333333p-1 );
 _ZN7VECTOR3C1Eddd( &TMP$2171$1, 0x1.999999999999Ap-5, 0x1.p+0, 0x1.999999999999Ap-5 );
 _ZN7VECTOR3C1Eddd( &TMP$2169$1, -0x1.p+1, 0x1.999999999999Ap-3, 0x0p+0 );
 struct $7VECTOR3* vr$155 = _ZmiR7VECTOR3S0_( &TMP$2170$1, P3$1, &TMP$2169$1 );
 double vr$156 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR3( THIS$1, (struct $7VECTOR3*)vr$155 );
 double vr$163 = _ZN12SYSTEM_BUS_T6K_ATANEdd( THIS$1, *(double*)((uint8*)P3$1 + 16ll) + 0x1.p+1, *(double*)((uint8*)P3$1 + 32ll) );
 _ZN7VECTOR3C1Eddd( &TMP$2168$1, vr$163 / 0x1.921E4F765FD8Bp+2, *(double*)((uint8*)P3$1 + 24ll), (vr$156 * 0x1.p-1) + 0x1.47AE147AE147Bp-6 );
 struct $7VECTOR3* vr$168 = _ZN12SYSTEM_BUS_T5OPREPER7VECTOR3S1_( &TMP$2167$1, THIS$1, &TMP$2168$1, &TMP$2171$1 );
 double vr$169 = _ZN12SYSTEM_BUS_T10SDCYLINDERER7VECTOR3R7VECTOR2( THIS$1, vr$168, &TMP$2172$1 );
 _ZN7VECTOR2C1Edd( &TMP$2166$1, 0x1.999999999999Ap-3, 0x1.999999999999Ap-4 );
 _ZN7VECTOR3C1Eddd( &TMP$2164$1, -0x1.p+1, 0x1.999999999999Ap-3, 0x0p+0 );
 struct $7VECTOR3* vr$175 = _ZmiR7VECTOR3S0_( &TMP$2165$1, P3$1, &TMP$2164$1 );
 double vr$176 = _ZN12SYSTEM_BUS_T9SDTORUS82ER7VECTOR3R7VECTOR2( THIS$1, vr$175, &TMP$2166$1 );
 double vr$177 = _ZN12SYSTEM_BUS_T3OPSEdd( THIS$1, vr$176, vr$169 );
 _ZN7VECTOR2C1Edd( &TMP$2163$1, vr$177, 0x1.98p+5 );
 struct $7VECTOR2* vr$181 = _ZN12SYSTEM_BUS_T3OPUER7VECTOR2S1_( &TMP$2162$1, THIS$1, &RES2$, &TMP$2163$1 );
 _ZN7VECTOR2aSERS_( &RES2$, vr$181 );
 _ZN7VECTOR3C1Eddd( &TMP$2175$1, -0x1.p+1, 0x1.p-2, -0x1.p+0 );
 struct $7VECTOR3* vr$185 = _ZmiR7VECTOR3S0_( &TMP$2176$1, P3$1, &TMP$2175$1 );
 double vr$186 = _ZN12SYSTEM_BUS_T8SDSPHEREER7VECTOR3d( THIS$1, vr$185, 0x1.999999999999Ap-3 );
 _ZN7VECTOR2C1Edd( &TMP$2174$1, (vr$186 * 0x1.6666666666666p-1) + (((__builtin_sin( (*(double*)((uint8*)P3$1 + 16ll) * 0x1.9p+5) ) * __builtin_sin( (*(double*)((uint8*)P3$1 + 24ll) * 0x1.9p+5) )) * __builtin_sin( (*(double*)((uint8*)P3$1 + 32ll) * 0x1.9p+5) )) * 0x1.EB851EB851EB8p-6), 0x1.04p+6 );
 struct $7VECTOR2* vr$204 = _ZN12SYSTEM_BUS_T3OPUER7VECTOR2S1_( &TMP$2173$1, THIS$1, &RES2$, &TMP$2174$1 );
 _ZN7VECTOR2aSERS_( &RES2$, vr$204 );
 _ZN7VECTOR2C1Edd( &TMP$2182$1, 0x1.999999999999Ap-3, 0x1.999999999999Ap-5 );
 _ZN7VECTOR3C1Eddd( &TMP$2180$1, -0x1.p+1, 0x1.p-2, 0x1.p+1 );
 struct $7VECTOR3* vr$210 = _ZmiR7VECTOR3S0_( &TMP$2181$1, P3$1, &TMP$2180$1 );
 struct $7VECTOR3* vr$212 = _ZN12SYSTEM_BUS_T7OPTWISTER7VECTOR3( &TMP$2179$1, THIS$1, vr$210 );
 double vr$213 = _ZN12SYSTEM_BUS_T7SDTORUSER7VECTOR3R7VECTOR2( THIS$1, vr$212, &TMP$2182$1 );
 _ZN7VECTOR2C1Edd( &TMP$2178$1, vr$213 * 0x1.p-1, 0x1.759999999999Ap+5 );
 struct $7VECTOR2* vr$218 = _ZN12SYSTEM_BUS_T3OPUER7VECTOR2S1_( &TMP$2177$1, THIS$1, &RES2$, &TMP$2178$1 );
 _ZN7VECTOR2aSERS_( &RES2$, vr$218 );
 _ZN7VECTOR3C1Eddd( &TMP$2185$1, 0x0p+0, 0x1.6666666666666p-2, -0x1.p+1 );
 struct $7VECTOR3* vr$222 = _ZmiR7VECTOR3S0_( &TMP$2186$1, P3$1, &TMP$2185$1 );
 double vr$223 = _ZN12SYSTEM_BUS_T13SDCONESECTIONER7VECTOR3ddd( THIS$1, vr$222, 0x1.3333333333333p-3, 0x1.999999999999Ap-3, 0x1.999999999999Ap-4 );
 _ZN7VECTOR2C1Edd( &TMP$2184$1, vr$223, 0x1.B570A3D70A3D7p+3 );
 struct $7VECTOR2* vr$227 = _ZN12SYSTEM_BUS_T3OPUER7VECTOR2S1_( &TMP$2183$1, THIS$1, &RES2$, &TMP$2184$1 );
 _ZN7VECTOR2aSERS_( &RES2$, vr$227 );
 _ZN7VECTOR3C1Eddd( &TMP$2191$1, 0x1.3333333333333p-3, 0x1.999999999999Ap-3, 0x1.999999999999Ap-5 );
 _ZN7VECTOR3C1Eddd( &TMP$2189$1, 0x1.p+0, 0x1.6666666666666p-2, -0x1.p+1 );
 struct $7VECTOR3* vr$233 = _ZmiR7VECTOR3S0_( &TMP$2190$1, P3$1, &TMP$2189$1 );
 double vr$234 = _ZN12SYSTEM_BUS_T11SDELLIPSOIDER7VECTOR3S1_( THIS$1, vr$233, &TMP$2191$1 );
 _ZN7VECTOR2C1Edd( &TMP$2188$1, vr$234, 0x1.595C28F5C28F6p+5 );
 struct $7VECTOR2* vr$238 = _ZN12SYSTEM_BUS_T3OPUER7VECTOR2S1_( &TMP$2187$1, THIS$1, &RES2$, &TMP$2188$1 );
 _ZN7VECTOR2aSERS_( &RES2$, vr$238 );
 _ZN7VECTOR2C1ERS_( tmp$2095$1, &RES2$ );
 goto label$2387;
 label$2387:;
 return tmp$2095$1;
}

double _ZN12SYSTEM_BUS_T3MAPEddddd( struct $12SYSTEM_BUS_T* THIS$1, double A$1, double B$1, double X$1, double C$1, double D$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2388:;
 fb$result$1 = (((D$1 - C$1) * (X$1 - A$1)) / (B$1 - A$1)) + C$1;
 goto label$2389;
 label$2389:;
 return fb$result$1;
}

struct $7VECTOR2* _ZN12SYSTEM_BUS_T7CASTRAYEv( struct $7VECTOR2* tmp$2192$1, struct $12SYSTEM_BUS_T* THIS$1 )
{
 double TMP$2196$1;
 label$2390:;
 TMIN$ = 0x1.999999999999Ap-4;
 TMAX$ = 0x1.4p+4;
 PRECIS$ = 0x1.0624DD2F1A9FCp-9;
 T$ = TMIN$;
 M$ = -0x1.p+0;
 _ZN7VECTOR2aSEd( &RES2$, 0x0p+0 );
 label$2392:;
 {
  struct $7VECTOR3 TMP$2193$2;
  struct $7VECTOR3 TMP$2194$2;
  struct $7VECTOR2 TMP$2195$2;
  struct $7VECTOR3* vr$1 = _ZmlR7VECTOR3d( &TMP$2193$2, &RD$, T$ );
  struct $7VECTOR3* vr$3 = _ZplR7VECTOR3S0_( &TMP$2194$2, &RO$, vr$1 );
  struct $7VECTOR2* vr$5 = _ZN12SYSTEM_BUS_T3MAPER7VECTOR3( &TMP$2195$2, THIS$1, vr$3 );
  _ZN7VECTOR2aSERS_( &RES2$, vr$5 );
  if( T$ <= TMAX$ ) goto label$2396;
  {
   goto label$2393;
   label$2396:;
  }
  if( *(double*)&RES2$ >= PRECIS$ ) goto label$2398;
  {
   goto label$2393;
   label$2398:;
  }
  T$ = T$ + *(double*)&RES2$;
  M$ = *(double*)((uint8*)&RES2$ + 8ll);
 }
 label$2394:;
 goto label$2392;
 label$2393:;
 *(double*)&RES2$ = T$;
 if( T$ <= TMAX$ ) goto label$2399;
 TMP$2196$1 = -0x1.p+0;
 goto label$2400;
 label$2399:;
 TMP$2196$1 = M$;
 label$2400:;
 *(double*)((uint8*)&RES2$ + 8ll) = TMP$2196$1;
 _ZN7VECTOR2C1ERS_( tmp$2192$1, &RES2$ );
 goto label$2391;
 label$2391:;
 return tmp$2192$1;
}

double _ZN12SYSTEM_BUS_T10SOFTSHADOWEv( struct $12SYSTEM_BUS_T* THIS$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2401:;
 RESF$ = 0x1.p+0;
 T$ = MINT$;
 {
  int64 I$2;
  I$2 = 0ll;
  label$2406:;
  {
   struct $7VECTOR3 TMP$2197$3;
   struct $7VECTOR3 TMP$2198$3;
   struct $7VECTOR2 TMP$2199$3;
   struct $7VECTOR3* vr$2 = _ZmlR7VECTOR3d( &TMP$2197$3, &RD$, T$ );
   struct $7VECTOR3* vr$4 = _ZplR7VECTOR3S0_( &TMP$2198$3, &RO$, vr$2 );
   _ZN12SYSTEM_BUS_T3MAPER7VECTOR3( &TMP$2199$3, THIS$1, vr$4 );
   H$ = *(double*)&TMP$2199$3;
   double vr$8 = _ZN12SYSTEM_BUS_T5K_MINEdd( THIS$1, RESF$, (H$ * 0x1.p+3) / T$ );
   RESF$ = vr$8;
   double vr$9 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, H$, 0x1.47AE147AE147Bp-6, 0x1.999999999999Ap-4 );
   T$ = T$ + vr$9;
   if( ((int64)-(H$ < 0x1.0624DD2F1A9FCp-10) | (int64)-(T$ > TMAX$)) == 0ll ) goto label$2408;
   {
    goto label$2405;
    label$2408:;
   }
  }
  label$2404:;
  I$2 = I$2 + 1ll;
  label$2403:;
  if( I$2 <= 15ll ) goto label$2406;
  label$2405:;
 }
 double vr$15 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, RESF$, 0x0p+0, 0x1.p+0 );
 fb$result$1 = vr$15;
 goto label$2402;
 label$2402:;
 return fb$result$1;
}

struct $7VECTOR3* _ZN12SYSTEM_BUS_T10CALCNORMALEv( struct $7VECTOR3* tmp$2200$1, struct $12SYSTEM_BUS_T* THIS$1 )
{
 struct $7VECTOR3 TMP$2201$1;
 struct $7VECTOR3 TMP$2202$1;
 struct $7VECTOR2 TMP$2203$1;
 struct $7VECTOR3 TMP$2204$1;
 struct $7VECTOR2 TMP$2205$1;
 struct $7VECTOR3 TMP$2206$1;
 struct $7VECTOR2 TMP$2207$1;
 struct $7VECTOR3 TMP$2208$1;
 struct $7VECTOR2 TMP$2209$1;
 struct $7VECTOR3 TMP$2210$1;
 struct $7VECTOR2 TMP$2211$1;
 struct $7VECTOR3 TMP$2212$1;
 struct $7VECTOR2 TMP$2213$1;
 struct $7VECTOR3 TMP$2214$1;
 label$2409:;
 EPS$ = 0x1.0624DD2F1A9FCp-10;
 _ZN7VECTOR3C1Eddd( &TMP$2210$1, *(double*)((uint8*)&P3$ + 16ll), *(double*)((uint8*)&P3$ + 24ll), *(double*)((uint8*)&P3$ + 32ll) + EPS$ );
 _ZN12SYSTEM_BUS_T3MAPER7VECTOR3( &TMP$2211$1, THIS$1, &TMP$2210$1 );
 _ZN7VECTOR3C1Eddd( &TMP$2212$1, *(double*)((uint8*)&P3$ + 16ll), *(double*)((uint8*)&P3$ + 24ll), *(double*)((uint8*)&P3$ + 32ll) - EPS$ );
 _ZN12SYSTEM_BUS_T3MAPER7VECTOR3( &TMP$2213$1, THIS$1, &TMP$2212$1 );
 _ZN7VECTOR3C1Eddd( &TMP$2206$1, *(double*)((uint8*)&P3$ + 16ll), *(double*)((uint8*)&P3$ + 24ll) + EPS$, *(double*)((uint8*)&P3$ + 32ll) );
 _ZN12SYSTEM_BUS_T3MAPER7VECTOR3( &TMP$2207$1, THIS$1, &TMP$2206$1 );
 _ZN7VECTOR3C1Eddd( &TMP$2208$1, *(double*)((uint8*)&P3$ + 16ll), *(double*)((uint8*)&P3$ + 24ll) - EPS$, *(double*)((uint8*)&P3$ + 32ll) );
 _ZN12SYSTEM_BUS_T3MAPER7VECTOR3( &TMP$2209$1, THIS$1, &TMP$2208$1 );
 _ZN7VECTOR3C1Eddd( &TMP$2202$1, *(double*)((uint8*)&P3$ + 16ll) + EPS$, *(double*)((uint8*)&P3$ + 24ll), *(double*)((uint8*)&P3$ + 32ll) );
 _ZN12SYSTEM_BUS_T3MAPER7VECTOR3( &TMP$2203$1, THIS$1, &TMP$2202$1 );
 _ZN7VECTOR3C1Eddd( &TMP$2204$1, *(double*)((uint8*)&P3$ + 16ll) - EPS$, *(double*)((uint8*)&P3$ + 24ll), *(double*)((uint8*)&P3$ + 32ll) );
 _ZN12SYSTEM_BUS_T3MAPER7VECTOR3( &TMP$2205$1, THIS$1, &TMP$2204$1 );
 _ZN7VECTOR3C1Eddd( &TMP$2201$1, *(double*)&TMP$2203$1 - *(double*)&TMP$2205$1, *(double*)&TMP$2207$1 - *(double*)&TMP$2209$1, *(double*)&TMP$2211$1 - *(double*)&TMP$2213$1 );
 struct $7VECTOR3* vr$30 = _ZN12SYSTEM_BUS_T11K_NORMALIZEER7VECTOR3( &TMP$2214$1, THIS$1, &TMP$2201$1 );
 _ZN7VECTOR3C1ERS_( tmp$2200$1, vr$30 );
 goto label$2410;
 label$2410:;
 return tmp$2200$1;
}

double _ZN12SYSTEM_BUS_T6CALCAOEv( struct $12SYSTEM_BUS_T* THIS$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2411:;
 OCC$ = 0x0p+0;
 SCA$ = 0x1.p+0;
 {
  int64 I$2;
  I$2 = 0ll;
  label$2416:;
  {
   struct $7VECTOR3 TMP$2215$3;
   struct $7VECTOR3 TMP$2216$3;
   struct $7VECTOR2 TMP$2217$3;
   HR$ = (((double)I$2 * 0x1.EB851EB851EB8p-4) / 0x1.4p+2) + 0x1.47AE147AE147Bp-7;
   struct $7VECTOR3* vr$6 = _ZmlR7VECTOR3d( &TMP$2215$3, &NOR$, HR$ );
   struct $7VECTOR3* vr$8 = _ZplR7VECTOR3S0_( &TMP$2216$3, vr$6, &P3$ );
   _ZN7VECTOR3aSERS_( &AOPOS$, vr$8 );
   _ZN12SYSTEM_BUS_T3MAPER7VECTOR3( &TMP$2217$3, THIS$1, &AOPOS$ );
   DD2$ = *(double*)&TMP$2217$3;
   OCC$ = OCC$ + (-(DD2$ - HR$) * SCA$);
   SCA$ = SCA$ * 0x1.E666666666666p-1;
  }
  label$2414:;
  I$2 = I$2 + 1ll;
  label$2413:;
  if( I$2 <= 4ll ) goto label$2416;
  label$2415:;
 }
 OCC$ = -(OCC$ * 0x1.8p+1) + 0x1.p+0;
 double vr$19 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, OCC$, 0x0p+0, 0x1.p+0 );
 fb$result$1 = vr$19;
 goto label$2412;
 label$2412:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T12HAVERSINEISHEd( struct $12SYSTEM_BUS_T* THIS$1, double X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2417:;
 double vr$5 = _ZN12SYSTEM_BUS_T3MAPEddddd( THIS$1, 0x0p+0, 0x1.p+0, (-(__builtin_cos( X$1 )) + 0x1.p+0) / 0x1.p+1, 0x1.p-1, 0x1.p+0 );
 fb$result$1 = vr$5;
 goto label$2418;
 label$2418:;
 return fb$result$1;
}

uint32 _ZN12SYSTEM_BUS_T10RAINBOWISHEfa( struct $12SYSTEM_BUS_T* THIS$1, float X$1, int8 SET$1 )
{
 uint32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$2419:;
 static double KR$1;
 static double KG$1;
 static double KB$1;
 if( (int64)SET$1 != -1ll ) goto label$2422;
 {
  KR$1 = 0x0p+0;
  KG$1 = 0x0p+0;
  KB$1 = 0x0p+0;
  fb$result$1 = 0u;
  goto label$2420;
  label$2422:;
 }
 KR$1 = KR$1 + 0x1.205BC01A36E2Fp-7;
 KG$1 = KG$1 + 0x1.F8A0902DE00D2p-8;
 KB$1 = KB$1 + 0x1.4467381D7DBF5p-7;
 uint32 R$1;
 __builtin_memset( &R$1, 0, 4ll );
 uint32 G$1;
 __builtin_memset( &G$1, 0, 4ll );
 uint32 B$1;
 __builtin_memset( &B$1, 0, 4ll );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, (__builtin_sin( ((double)X$1 * 0x1.1DF46A2529D39p-6) ) * 0x1.FCp+6) + 0x1.p+7 );
 double vr$13 = _ZN12SYSTEM_BUS_T12HAVERSINEISHEd( THIS$1, KR$1 );
 R$1 = (uint32)((int64)__builtin_nearbyint( vr$13 * *(double*)((int64)(double*)MEM64$ + 393232ll) ));
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, (__builtin_sin( ((double)(X$1 + -0x1.Ep+6f) * 0x1.1DF46A2529D39p-6) ) * 0x1.FCp+6) + 0x1.p+7 );
 double vr$22 = _ZN12SYSTEM_BUS_T12HAVERSINEISHEd( THIS$1, KG$1 );
 G$1 = (uint32)((int64)__builtin_nearbyint( vr$22 * *(double*)((int64)(double*)MEM64$ + 393240ll) ));
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, (__builtin_sin( ((double)(X$1 + 0x1.Ep+6f) * 0x1.1DF46A2529D39p-6) ) * 0x1.FCp+6) + 0x1.p+7 );
 double vr$31 = _ZN12SYSTEM_BUS_T12HAVERSINEISHEd( THIS$1, KB$1 );
 B$1 = (uint32)((int64)__builtin_nearbyint( vr$31 * *(double*)((int64)(double*)MEM64$ + 393248ll) ));
 fb$result$1 = (uint32)(((((int64)(uint32)(uint8)((int64)R$1 & 255ll) << (16ll & 63ll)) | ((int64)(uint32)(uint8)((int64)G$1 & 255ll) << (8ll & 63ll))) | (int64)(uint32)(uint8)((int64)B$1 & 255ll)) | 4278190080ll);
 goto label$2420;
 label$2420:;
 return fb$result$1;
}

void _ZN12SYSTEM_BUS_T6FILTEREPvi( struct $12SYSTEM_BUS_T* THIS$1, void* I$1, int32 N$1 )
{
 int64 TMP$2218$1;
 int64 TMP$2219$1;
 void* TMP$2220$1;
 int64 TMP$2221$1;
 label$2423:;
 int64 IX$1;
 __builtin_memset( &IX$1, 0, 8ll );
 int64 IY$1;
 __builtin_memset( &IY$1, 0, 8ll );
 TMP$2221$1 = 0ll;
 TMP$2220$1 = (void*)0ull;
 TMP$2219$1 = 0ll;
 TMP$2218$1 = 0ll;
 fb_GfxImageInfo64( (void*)I$1, (int64*)&IX$1, (int64*)&IY$1, &TMP$2218$1, &TMP$2219$1, &TMP$2220$1, &TMP$2221$1 );
 int32 P$1[5];
 __builtin_memset( (int32*)P$1, 0, 20ll );
 struct $N12SYSTEM_BUS_T8FBARRAY1IiEE {
  int32* DATA;
  int32* PTR;
  int64 SIZE;
  int64 ELEMENT_LEN;
  int64 DIMENSIONS;
  int64 FLAGS;
  struct $16__FB_ARRAYDIMTB$ DIMTB[1];
 };
 extern int __$fb_structsizecheck[(sizeof( struct $N12SYSTEM_BUS_T8FBARRAY1IiEE ) == 72) ? 1 : -1];
 struct $N12SYSTEM_BUS_T8FBARRAY1IiEE tmp$2222$1;
 *(int32**)&tmp$2222$1 = (int32*)P$1;
 *(int32**)((uint8*)&tmp$2222$1 + 8ll) = (int32*)P$1;
 *(int64*)((uint8*)&tmp$2222$1 + 16ll) = 20ll;
 *(int64*)((uint8*)&tmp$2222$1 + 24ll) = 4ll;
 *(int64*)((uint8*)&tmp$2222$1 + 32ll) = 1ll;
 *(int64*)((uint8*)&tmp$2222$1 + 40ll) = 49ll;
 *(int64*)((uint8*)&tmp$2222$1 + 48ll) = 5ll;
 *(int64*)((uint8*)&tmp$2222$1 + 56ll) = 0ll;
 *(int64*)((uint8*)&tmp$2222$1 + 64ll) = 4ll;
 {
  int32 K$2;
  K$2 = 1;
  int32 TMP$2223$2;
  TMP$2223$2 = N$1;
  goto label$2425;
  label$2428:;
  {
   {
    int32 X$4;
    X$4 = 1;
    label$2432:;
    {
     {
      int32 Y$6;
      Y$6 = 1;
      label$2436:;
      {
       int64 R$7;
       R$7 = 0ll;
       int64 G$7;
       G$7 = 0ll;
       int64 B$7;
       B$7 = 0ll;
       uint32 vr$13 = fb_GfxPoint( I$1, (float)X$4, (float)Y$6 );
       *(int32*)P$1 = (int32)vr$13;
       uint32 vr$18 = fb_GfxPoint( I$1, (float)X$4, (float)((int64)Y$6 + -1ll) );
       *(int32*)((int64)(int32*)P$1 + 4ll) = (int32)vr$18;
       uint32 vr$23 = fb_GfxPoint( I$1, (float)((int64)X$4 + 1ll), (float)Y$6 );
       *(int32*)((int64)(int32*)P$1 + 8ll) = (int32)vr$23;
       uint32 vr$28 = fb_GfxPoint( I$1, (float)X$4, (float)((int64)Y$6 + 1ll) );
       *(int32*)((int64)(int32*)P$1 + 12ll) = (int32)vr$28;
       uint32 vr$33 = fb_GfxPoint( I$1, (float)((int64)X$4 + -1ll), (float)Y$6 );
       *(int32*)((int64)(int32*)P$1 + 16ll) = (int32)vr$33;
       {
        int32 N$8;
        N$8 = 0;
        label$2440:;
        {
         R$7 = (int64)(int8*)((uint8*)R$7 + (int64)*(uint8*)((uint8*)((int64)(int32*)P$1 + ((int64)N$8 << (2ll & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)));
         G$7 = (int64)(int8*)((uint8*)G$7 + (int64)*(uint8*)((uint8*)((int64)(int32*)P$1 + ((int64)N$8 << (2ll & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)));
         B$7 = (int64)(int8*)((uint8*)B$7 + (int64)*(uint8*)((uint8*)((int64)(int32*)P$1 + ((int64)N$8 << (2ll & 63ll))) + (int64)*(uint8*)NIBBLES$));
        }
        label$2438:;
        N$8 = (int32)((int64)N$8 + 1ll);
        label$2437:;
        if( (int64)N$8 <= 4ll ) goto label$2440;
        label$2439:;
       }
       R$7 = ((int64)__builtin_nearbyint( (double)R$7 / 0x1.4p+2 ));
       G$7 = ((int64)__builtin_nearbyint( (double)G$7 / 0x1.4p+2 ));
       B$7 = ((int64)__builtin_nearbyint( (double)B$7 / 0x1.4p+2 ));
       *(double*)((int64)(double*)MEM64$ + 394888ll) = (double)X$4;
       *(double*)((int64)(double*)MEM64$ + 394896ll) = (double)Y$6;
       *(double*)((int64)(double*)MEM64$ + 394824ll) = (double)(uint32)(((((int64)(uint32)(uint8)R$7 << (16ll & 63ll)) | ((int64)(uint32)(uint8)G$7 << (8ll & 63ll))) | (int64)(uint32)(uint8)B$7) | 4278190080ll);
       _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.820Cp+15, 0x0p+0 );
      }
      label$2434:;
      Y$6 = (int32)((int64)Y$6 + 1ll);
      label$2433:;
      if( (int64)Y$6 <= 1078ll ) goto label$2436;
      label$2435:;
     }
     fb_GfxPut( (void*)0ull, 0x0p+0f, 0x0p+0f, (void*)FGIMAGE$, -65536, -65536, -65536, -65536, 0, 6, (void*)&fb_hPutAlpha, -1, (void*)0ull, (void*)0ull );
    }
    label$2430:;
    X$4 = (int32)((int64)X$4 + 1ll);
    label$2429:;
    if( (int64)X$4 <= 1918ll ) goto label$2432;
    label$2431:;
   }
  }
  label$2426:;
  K$2 = (int32)((int64)K$2 + 1ll);
  label$2425:;
  if( (int64)K$2 <= (int64)TMP$2223$2 ) goto label$2428;
  label$2427:;
 }
 label$2424:;
}

struct $7VECTOR3* _ZN12SYSTEM_BUS_T11RENDER_GLSLEv( struct $7VECTOR3* tmp$2225$1, struct $12SYSTEM_BUS_T* THIS$1 )
{
 struct $7VECTOR2 TMP$2226$1;
 struct $7VECTOR3 TMP$2267$1;
 label$2441:;
 struct $7VECTOR3 COL$1;
 _ZN7VECTOR3C1Ev( &COL$1 );
 struct $7VECTOR2* vr$2 = _ZN12SYSTEM_BUS_T7CASTRAYEv( &TMP$2226$1, THIS$1 );
 _ZN7VECTOR2aSERS_( &RES2$, vr$2 );
 T$ = *(double*)&RES2$;
 M$ = *(double*)((uint8*)&RES2$ + 8ll);
 if( M$ >= 0x0p+0 ) goto label$2444;
 {
  struct $7VECTOR3 TMP$2227$2;
  struct $7VECTOR3 TMP$2228$2;
  _ZN7VECTOR3C1Eddd( &TMP$2227$2, 0x1.p-1, 0x1.3333333333333p-1, 0x1.p+0 );
  struct $7VECTOR3* vr$7 = _ZplR7VECTOR3d( &TMP$2228$2, &TMP$2227$2, *(double*)((uint8*)&RD$ + 24ll) * 0x1.999999999999Ap-1 );
  _ZN7VECTOR3aSERS_( &COL$1, vr$7 );
 }
 goto label$2443;
 label$2444:;
 {
  struct $7VECTOR3 TMP$2229$2;
  struct $7VECTOR3 TMP$2230$2;
  struct $7VECTOR3 TMP$2241$2;
  struct $7VECTOR3 TMP$2242$2;
  struct $7VECTOR3 TMP$2243$2;
  struct $7VECTOR3 TMP$2244$2;
  struct $7VECTOR3 TMP$2245$2;
  struct $7VECTOR3 TMP$2246$2;
  struct $7VECTOR3 TMP$2247$2;
  struct $7VECTOR3 TMP$2248$2;
  struct $7VECTOR3 TMP$2249$2;
  struct $7VECTOR3 TMP$2250$2;
  struct $7VECTOR3 TMP$2251$2;
  struct $7VECTOR3 TMP$2252$2;
  struct $7VECTOR3 TMP$2253$2;
  struct $7VECTOR3 TMP$2254$2;
  struct $7VECTOR3 TMP$2255$2;
  struct $7VECTOR3 TMP$2256$2;
  struct $7VECTOR3 TMP$2257$2;
  struct $7VECTOR3 TMP$2258$2;
  struct $7VECTOR3 TMP$2259$2;
  struct $7VECTOR3 TMP$2260$2;
  struct $7VECTOR3 TMP$2261$2;
  struct $7VECTOR3 TMP$2262$2;
  struct $7VECTOR3 TMP$2263$2;
  struct $7VECTOR3 TMP$2264$2;
  struct $7VECTOR3 TMP$2265$2;
  struct $7VECTOR3* vr$10 = _ZmldR7VECTOR3( &TMP$2229$2, T$, &RD$ );
  struct $7VECTOR3* vr$12 = _ZplR7VECTOR3S0_( &TMP$2230$2, &RO$, vr$10 );
  _ZN7VECTOR3aSERS_( &P3$, vr$12 );
  if( M$ != 0x1.p+0 ) goto label$2446;
  {
   struct $7VECTOR3 TMP$2231$3;
   struct $7VECTOR3 TMP$2232$3;
   struct $7VECTOR3 TMP$2233$3;
   struct $7VECTOR3 TMP$2234$3;
   _ZN7VECTOR3C1Eddd( &TMP$2231$3, 0x0p+0, 0x1.p+0, 0x0p+0 );
   _ZN7VECTOR3aSERS_( &NOR$, &TMP$2231$3 );
   _ZN7VECTOR3C1Ed( &TMP$2232$3, 0x1.999999999999Ap-2 );
   double vr$18 = _ZN12SYSTEM_BUS_T7K_FLOOREd( THIS$1, *(double*)((uint8*)&P3$ + 16ll) * 0x1.p+0 );
   double vr$20 = _ZN12SYSTEM_BUS_T7K_FLOOREd( THIS$1, *(double*)((uint8*)&P3$ + 32ll) * 0x1.p+0 );
   double vr$22 = _ZN12SYSTEM_BUS_T8K_MODULOEdd( THIS$1, vr$18 + vr$20, 0x1.p+1 );
   struct $7VECTOR3* vr$24 = _ZmldR7VECTOR3( &TMP$2233$3, vr$22, &TMP$2232$3 );
   struct $7VECTOR3* vr$26 = _ZplR7VECTOR3d( &TMP$2234$3, vr$24, 0x1.999999999999Ap-4 );
   _ZN7VECTOR3aSERS_( &COL$1, vr$26 );
  }
  goto label$2445;
  label$2446:;
  {
   struct $7VECTOR3 TMP$2235$3;
   struct $7VECTOR3 TMP$2236$3;
   struct $7VECTOR3 TMP$2237$3;
   struct $7VECTOR3 TMP$2238$3;
   struct $7VECTOR3 TMP$2239$3;
   struct $7VECTOR3 TMP$2240$3;
   struct $7VECTOR3* vr$29 = _ZN12SYSTEM_BUS_T10CALCNORMALEv( &TMP$2235$3, THIS$1 );
   _ZN7VECTOR3aSERS_( &NOR$, vr$29 );
   _ZN7VECTOR3C1Eddd( &TMP$2236$3, 0x1.999999999999Ap-5, 0x1.47AE147AE147Bp-4, 0x1.999999999999Ap-4 );
   struct $7VECTOR3* vr$34 = _ZmlR7VECTOR3d( &TMP$2237$3, &TMP$2236$3, M$ + -0x1.p+0 );
   struct $7VECTOR3* vr$36 = _Zv13sinR7VECTOR3( &TMP$2238$3, vr$34 );
   struct $7VECTOR3* vr$38 = _ZmldR7VECTOR3( &TMP$2239$3, 0x1.p-1, vr$36 );
   struct $7VECTOR3* vr$40 = _ZpldR7VECTOR3( &TMP$2240$3, 0x1.p-1, vr$38 );
   _ZN7VECTOR3aSERS_( &COL$1, vr$40 );
  }
  label$2445:;
  struct $7VECTOR3* vr$43 = _ZN12SYSTEM_BUS_T9K_REFLECTER7VECTOR3S1_( &TMP$2241$2, THIS$1, &RD$, &NOR$ );
  _ZN7VECTOR3aSERS_( &REF$, vr$43 );
  double vr$44 = _ZN12SYSTEM_BUS_T6CALCAOEv( THIS$1 );
  OCC$ = vr$44;
  _ZN7VECTOR3C1Eddd( &TMP$2242$2, 0x1.p+0, 0x1.p+0, -0x1.p+0 );
  struct $7VECTOR3* vr$48 = _ZN12SYSTEM_BUS_T11K_NORMALIZEER7VECTOR3( &TMP$2243$2, THIS$1, &TMP$2242$2 );
  _ZN7VECTOR3aSERS_( &LIGHT$, vr$48 );
  double vr$51 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, (*(double*)((uint8*)&NOR$ + 24ll) * 0x1.p-1) + 0x1.p-1, 0x0p+0, 0x1.p+0 );
  AMBIENT$ = vr$51;
  double vr$52 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, &NOR$, &LIGHT$ );
  double vr$53 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, vr$52, 0x0p+0, 0x1.p+0 );
  DIFFUSE$ = vr$53;
  _ZN7VECTOR3C1Eddd( &TMP$2244$2, -(*(double*)((uint8*)&LIGHT$ + 16ll)), 0x0p+0, -(*(double*)((uint8*)&LIGHT$ + 32ll)) );
  struct $7VECTOR3* vr$59 = _ZN12SYSTEM_BUS_T11K_NORMALIZEER7VECTOR3( &TMP$2245$2, THIS$1, &TMP$2244$2 );
  double vr$60 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, &NOR$, vr$59 );
  double vr$61 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, vr$60, 0x0p+0, 0x1.p+0 );
  double vr$64 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, -(*(double*)((uint8*)&P3$ + 24ll)) + 0x1.p+0, 0x0p+0, 0x1.p+0 );
  BAC$ = vr$61 * vr$64;
  double vr$66 = _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEddd( THIS$1, -0x1.999999999999Ap-4, 0x1.999999999999Ap-4, *(double*)((uint8*)&REF$ + 24ll) );
  DOM$ = vr$66;
  double vr$67 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, &NOR$, &RD$ );
  double vr$69 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, vr$67 + 0x1.p+0, 0x0p+0, 0x1.p+0 );
  double vr$70 = _ZN12SYSTEM_BUS_T5K_POWEdd( THIS$1, vr$69, 0x1.p+1 );
  FR$ = vr$70;
  double vr$71 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, &REF$, &LIGHT$ );
  double vr$72 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, vr$71, 0x0p+0, 0x1.p+0 );
  double vr$73 = _ZN12SYSTEM_BUS_T5K_POWEdd( THIS$1, vr$72, 0x1.p+4 );
  SPECULAR$ = vr$73;
  MINT$ = 0x1.47AE147AE147Bp-6;
  TMAX$ = 0x1.4p+1;
  _ZN7VECTOR3aSERS_( &RD$, &LIGHT$ );
  double vr$74 = _ZN12SYSTEM_BUS_T10SOFTSHADOWEv( THIS$1 );
  DIFFUSE$ = DIFFUSE$ * vr$74;
  _ZN7VECTOR3aSERS_( &RD$, &REF$ );
  double vr$76 = _ZN12SYSTEM_BUS_T10SOFTSHADOWEv( THIS$1 );
  DOM$ = DOM$ * vr$76;
  _ZN7VECTOR3C1Eddd( &TMP$2246$2, 0x1.p+0, 0x1.B333333333333p-1, 0x1.199999999999Ap-1 );
  struct $7VECTOR3* vr$82 = _ZmldR7VECTOR3( &TMP$2247$2, DIFFUSE$ * 0x1.3333333333333p+0, &TMP$2246$2 );
  _ZN7VECTOR3aSERS_( &LIN$, vr$82 );
  _ZN7VECTOR3C1Eddd( &TMP$2248$2, 0x1.p+0, 0x1.B333333333333p-1, 0x1.199999999999Ap-1 );
  struct $7VECTOR3* vr$87 = _ZmldR7VECTOR3( &TMP$2249$2, SPECULAR$ * 0x1.3333333333333p+0, &TMP$2248$2 );
  struct $7VECTOR3* vr$89 = _ZmlR7VECTOR3d( &TMP$2250$2, vr$87, DIFFUSE$ );
  _ZN7VECTOR3pLERS_( &LIN$, vr$89 );
  _ZN7VECTOR3C1Eddd( &TMP$2251$2, 0x1.p-1, 0x1.6666666666666p-1, 0x1.p+0 );
  struct $7VECTOR3* vr$94 = _ZmldR7VECTOR3( &TMP$2252$2, AMBIENT$ * 0x1.999999999999Ap-3, &TMP$2251$2 );
  struct $7VECTOR3* vr$96 = _ZmlR7VECTOR3d( &TMP$2253$2, vr$94, OCC$ );
  _ZN7VECTOR3pLERS_( &LIN$, vr$96 );
  _ZN7VECTOR3C1Eddd( &TMP$2254$2, 0x1.p-1, 0x1.6666666666666p-1, 0x1.p+0 );
  struct $7VECTOR3* vr$101 = _ZmldR7VECTOR3( &TMP$2255$2, DOM$ * 0x1.3333333333333p-2, &TMP$2254$2 );
  struct $7VECTOR3* vr$103 = _ZmlR7VECTOR3d( &TMP$2256$2, vr$101, OCC$ );
  _ZN7VECTOR3pLERS_( &LIN$, vr$103 );
  _ZN7VECTOR3C1Eddd( &TMP$2257$2, 0x1.p-2, 0x1.p-2, 0x1.p-2 );
  struct $7VECTOR3* vr$108 = _ZmldR7VECTOR3( &TMP$2258$2, BAC$ * 0x1.3333333333333p-2, &TMP$2257$2 );
  struct $7VECTOR3* vr$110 = _ZmlR7VECTOR3d( &TMP$2259$2, vr$108, OCC$ );
  _ZN7VECTOR3pLERS_( &LIN$, vr$110 );
  _ZN7VECTOR3C1Eddd( &TMP$2260$2, 0x1.p+0, 0x1.p+0, 0x1.p+0 );
  struct $7VECTOR3* vr$115 = _ZmldR7VECTOR3( &TMP$2261$2, FR$ * 0x1.999999999999Ap-2, &TMP$2260$2 );
  struct $7VECTOR3* vr$117 = _ZmlR7VECTOR3d( &TMP$2262$2, vr$115, OCC$ );
  _ZN7VECTOR3pLERS_( &LIN$, vr$117 );
  struct $7VECTOR3* vr$120 = _ZmlR7VECTOR3S0_( &TMP$2263$2, &COL$1, &LIN$ );
  _ZN7VECTOR3aSERS_( &COL$1, vr$120 );
  double vr$124 = _ZN12SYSTEM_BUS_T5K_EXPEd( THIS$1, (T$ * T$) * -0x1.0624DD2F1A9FCp-9 );
  _ZN7VECTOR3C1Eddd( &TMP$2264$2, 0x1.999999999999Ap-1, 0x1.CCCCCCCCCCCCDp-1, 0x1.p+0 );
  struct $7VECTOR3* vr$131 = _ZN12SYSTEM_BUS_T5K_MIXER7VECTOR3S1_d( &TMP$2265$2, THIS$1, &COL$1, &TMP$2264$2, -vr$124 + 0x1.p+0 );
  _ZN7VECTOR3aSERS_( &COL$1, vr$131 );
 }
 label$2443:;
 struct $7VECTOR3* vr$135 = _ZN12SYSTEM_BUS_T7K_CLAMPER7VECTOR3dd( &TMP$2267$1, THIS$1, &COL$1, 0x0p+0, 0x1.p+0 );
 _ZN7VECTOR3C1ERS_( tmp$2225$1, vr$135 );
 goto label$2442;
 label$2442:;
 return tmp$2225$1;
}

struct $4MAT3 _ZN12SYSTEM_BUS_T9SETCAMERAEv( struct $12SYSTEM_BUS_T* THIS$1 )
{
 struct $7VECTOR3 TMP$2268$1;
 struct $7VECTOR3 TMP$2269$1;
 struct $7VECTOR3 TMP$2270$1;
 struct $7VECTOR3 TMP$2271$1;
 struct $7VECTOR3 TMP$2272$1;
 struct $7VECTOR3 TMP$2273$1;
 struct $7VECTOR3 TMP$2274$1;
 struct $4MAT3 fb$result$1;
 label$2447:;
 struct $7VECTOR3* vr$1 = _ZmiR7VECTOR3S0_( &TMP$2268$1, &TA$, &RO$ );
 struct $7VECTOR3* vr$3 = _ZN12SYSTEM_BUS_T11K_NORMALIZEER7VECTOR3( &TMP$2269$1, THIS$1, vr$1 );
 _ZN7VECTOR3aSERS_( &CW$, vr$3 );
 _ZN7VECTOR3C1Eddd( &TMP$2270$1, __builtin_sin( CR$ ), __builtin_cos( CR$ ), 0x0p+0 );
 _ZN7VECTOR3aSERS_( &CP$, &TMP$2270$1 );
 struct $7VECTOR3* vr$9 = _ZN12SYSTEM_BUS_T7K_CROSSER7VECTOR3S1_( &TMP$2271$1, THIS$1, &CW$, &CP$ );
 struct $7VECTOR3* vr$11 = _ZN12SYSTEM_BUS_T11K_NORMALIZEER7VECTOR3( &TMP$2272$1, THIS$1, vr$9 );
 _ZN7VECTOR3aSERS_( &CU$, vr$11 );
 struct $7VECTOR3* vr$13 = _ZN12SYSTEM_BUS_T7K_CROSSER7VECTOR3S1_( &TMP$2273$1, THIS$1, &CU$, &CW$ );
 struct $7VECTOR3* vr$15 = _ZN12SYSTEM_BUS_T11K_NORMALIZEER7VECTOR3( &TMP$2274$1, THIS$1, vr$13 );
 _ZN7VECTOR3aSERS_( &CV$, vr$15 );
 _ZN4MAT3C1ER7VECTOR3S1_S1_( &fb$result$1, &CU$, &CV$, &CW$ );
 goto label$2448;
 label$2448:;
 return fb$result$1;
}

struct $7VECTOR3* _ZN12SYSTEM_BUS_T8SPECTRUMEd( struct $7VECTOR3* tmp$2276$1, struct $12SYSTEM_BUS_T* THIS$1, double X$1 )
{
 double TMP$2277$1;
 double TMP$2278$1;
 double TMP$2279$1;
 double TMP$2280$1;
 double TMP$2281$1;
 double TMP$2282$1;
 double TMP$2283$1;
 double TMP$2284$1;
 double TMP$2285$1;
 double TMP$2286$1;
 double TMP$2287$1;
 double TMP$2288$1;
 double TMP$2289$1;
 double TMP$2290$1;
 double TMP$2291$1;
 double TMP$2292$1;
 label$2449:;
 double R$1;
 __builtin_memset( &R$1, 0, 8ll );
 double G$1;
 __builtin_memset( &G$1, 0, 8ll );
 double B$1;
 __builtin_memset( &B$1, 0, 8ll );
 if( X$1 >= 0x1.47AE147AE147Bp-3 ) goto label$2454;
 double vr$3 = _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEddd( THIS$1, 0x0p+0, 0x1.47AE147AE147Bp-3, X$1 );
 TMP$2280$1 = vr$3 * 0x1.5A1CAC083126Fp-3;
 goto label$2467;
 label$2454:;
 if( X$1 >= 0x1.C28F5C28F5C29p-3 ) goto label$2453;
 double vr$5 = _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEddd( THIS$1, 0x1.C28F5C28F5C29p-3, 0x1.47AE147AE147Bp-3, X$1 );
 TMP$2279$1 = (vr$5 * 0x1.126E978D4FDF4p-3) + 0x1.1EB851EB851ECp-5;
 goto label$2468;
 label$2453:;
 if( X$1 >= 0x1.A3D70A3D70A3Dp-2 ) goto label$2452;
 double vr$8 = _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEddd( THIS$1, 0x1.C28F5C28F5C29p-3, 0x1.A3D70A3D70A3Dp-2, X$1 );
 TMP$2278$1 = (vr$8 * 0x1.916872B020C4Ap-4) + 0x1.1EB851EB851ECp-5;
 goto label$2469;
 label$2452:;
 if( X$1 >= 0x1.47AE147AE147Bp-1 ) goto label$2451;
 double vr$11 = _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEddd( THIS$1, 0x1.A3D70A3D70A3Dp-2, 0x1.47AE147AE147Bp-1, X$1 );
 TMP$2277$1 = (vr$11 * 0x1.B3B645A1CAC08p-1) + 0x1.10624DD2F1AAp-3;
 goto label$2470;
 label$2451:;
 double vr$14 = _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEddd( THIS$1, 0x1.p+0, 0x1.47AE147AE147Bp-1, X$1 );
 TMP$2277$1 = vr$14 * 0x1.F7CED916872Bp-1;
 label$2470:;
 TMP$2278$1 = TMP$2277$1;
 label$2469:;
 TMP$2279$1 = TMP$2278$1;
 label$2468:;
 TMP$2280$1 = TMP$2279$1;
 label$2467:;
 R$1 = TMP$2280$1;
 if( X$1 >= 0x1.999999999999Ap-5 ) goto label$2458;
 TMP$2284$1 = 0x0p+0;
 goto label$2471;
 label$2458:;
 if( X$1 >= 0x1.3333333333333p-3 ) goto label$2457;
 double vr$16 = _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEddd( THIS$1, 0x1.999999999999Ap-5, 0x1.3333333333333p-3, X$1 );
 TMP$2283$1 = vr$16 * 0x1.810624DD2F1AAp-5;
 goto label$2472;
 label$2457:;
 if( X$1 >= 0x1.CCCCCCCCCCCCDp-2 ) goto label$2456;
 double vr$18 = _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEddd( THIS$1, 0x1.3333333333333p-3, 0x1.CCCCCCCCCCCCDp-2, X$1 );
 TMP$2282$1 = (vr$18 * 0x1.C395810624DD3p-1) + 0x1.810624DD2F1AAp-5;
 goto label$2473;
 label$2456:;
 if( X$1 >= 0x1.6666666666666p-1 ) goto label$2455;
 double vr$21 = _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEddd( THIS$1, 0x1.6666666666666p-1, 0x1.CCCCCCCCCCCCDp-2, X$1 );
 TMP$2281$1 = (vr$21 * 0x1.978D4FDF3B646p-1) + 0x1.10624DD2F1AAp-3;
 goto label$2474;
 label$2455:;
 double vr$24 = _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEddd( THIS$1, 0x1.p+0, 0x1.6666666666666p-1, X$1 );
 TMP$2281$1 = vr$24 * 0x1.10624DD2F1AAp-3;
 label$2474:;
 TMP$2282$1 = TMP$2281$1;
 label$2473:;
 TMP$2283$1 = TMP$2282$1;
 label$2472:;
 TMP$2284$1 = TMP$2283$1;
 label$2471:;
 G$1 = TMP$2284$1;
 if( X$1 >= 0x1.70A3D70A3D70Ap-3 ) goto label$2466;
 double vr$26 = _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEddd( THIS$1, 0x0p+0, 0x1.70A3D70A3D70Ap-3, X$1 );
 TMP$2292$1 = vr$26 * 0x1.p-1;
 goto label$2475;
 label$2466:;
 if( X$1 >= 0x1.C28F5C28F5C29p-3 ) goto label$2465;
 double vr$28 = _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEddd( THIS$1, 0x1.C28F5C28F5C29p-3, 0x1.70A3D70A3D70Ap-3, X$1 );
 TMP$2291$1 = (vr$28 * 0x1.999999999999Ap-4) + 0x1.999999999999Ap-2;
 goto label$2476;
 label$2465:;
 if( X$1 >= 0x1.6666666666666p-2 ) goto label$2464;
 double vr$31 = _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEddd( THIS$1, 0x1.C28F5C28F5C29p-3, 0x1.6666666666666p-2, X$1 );
 TMP$2290$1 = (vr$31 * 0x1.E353F7CED9168p-5) + 0x1.999999999999Ap-2;
 goto label$2477;
 label$2464:;
 if( X$1 >= 0x1.147AE147AE148p-1 ) goto label$2463;
 double vr$34 = _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEddd( THIS$1, 0x1.147AE147AE148p-1, 0x1.6666666666666p-2, X$1 );
 TMP$2289$1 = (vr$34 * 0x1.5604189374BC7p-2) + 0x1.p-3;
 goto label$2478;
 label$2463:;
 if( X$1 >= 0x1.3333333333333p-1 ) goto label$2462;
 double vr$37 = _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEddd( THIS$1, 0x1.147AE147AE148p-1, 0x1.3333333333333p-1, X$1 );
 TMP$2288$1 = (vr$37 * 0x1.5A1CAC083126Fp-3) + 0x1.p-3;
 goto label$2479;
 label$2462:;
 if( X$1 >= 0x1.6147AE147AE14p-1 ) goto label$2461;
 double vr$40 = _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEddd( THIS$1, 0x1.6147AE147AE14p-1, 0x1.3333333333333p-1, X$1 );
 TMP$2287$1 = (vr$40 * 0x1.F1A9FBE76C8B4p-3) + 0x1.A1CAC083126E9p-5;
 goto label$2480;
 label$2461:;
 if( X$1 >= 0x1.70A3D70A3D70Ap-1 ) goto label$2460;
 double vr$43 = _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEddd( THIS$1, 0x1.6147AE147AE14p-1, 0x1.70A3D70A3D70Ap-1, X$1 );
 TMP$2286$1 = (vr$43 * 0x1.604189374BC6Ap-5) + 0x1.A1CAC083126E9p-5;
 goto label$2481;
 label$2460:;
 if( X$1 >= 0x1.C7AE147AE147Bp-1 ) goto label$2459;
 double vr$46 = _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEddd( THIS$1, 0x1.C7AE147AE147Bp-1, 0x1.70A3D70A3D70Ap-1, X$1 );
 TMP$2285$1 = vr$46 * 0x1.810624DD2F1AAp-4;
 goto label$2482;
 label$2459:;
 TMP$2285$1 = 0x0p+0;
 label$2482:;
 TMP$2286$1 = TMP$2285$1;
 label$2481:;
 TMP$2287$1 = TMP$2286$1;
 label$2480:;
 TMP$2288$1 = TMP$2287$1;
 label$2479:;
 TMP$2289$1 = TMP$2288$1;
 label$2478:;
 TMP$2290$1 = TMP$2289$1;
 label$2477:;
 TMP$2291$1 = TMP$2290$1;
 label$2476:;
 TMP$2292$1 = TMP$2291$1;
 label$2475:;
 B$1 = TMP$2292$1;
 _ZN7VECTOR3C1Eddd( tmp$2276$1, R$1, G$1, B$1 );
 goto label$2450;
 label$2450:;
 return tmp$2276$1;
}

struct $7VECTOR3* _ZN12SYSTEM_BUS_T12SPECTRUMPOLYEd( struct $7VECTOR3* tmp$2294$1, struct $12SYSTEM_BUS_T* THIS$1, double X$1 )
{
 struct $7VECTOR3 TMP$2295$1;
 struct $7VECTOR3 TMP$2296$1;
 struct $7VECTOR3 TMP$2297$1;
 struct $7VECTOR3 TMP$2298$1;
 struct $7VECTOR3 TMP$2299$1;
 struct $7VECTOR3 TMP$2300$1;
 struct $7VECTOR3 TMP$2301$1;
 struct $7VECTOR3 TMP$2302$1;
 struct $7VECTOR3 TMP$2303$1;
 struct $7VECTOR3 TMP$2304$1;
 struct $7VECTOR3 TMP$2305$1;
 struct $7VECTOR3 TMP$2306$1;
 struct $7VECTOR3 TMP$2307$1;
 struct $7VECTOR3 TMP$2308$1;
 struct $7VECTOR3 TMP$2309$1;
 struct $7VECTOR3 TMP$2310$1;
 struct $7VECTOR3 TMP$2311$1;
 struct $7VECTOR3 TMP$2312$1;
 struct $7VECTOR3 TMP$2313$1;
 struct $7VECTOR3 TMP$2314$1;
 struct $7VECTOR3 TMP$2315$1;
 struct $7VECTOR3 TMP$2316$1;
 struct $7VECTOR3 TMP$2317$1;
 struct $7VECTOR3 TMP$2318$1;
 struct $7VECTOR3 TMP$2319$1;
 struct $7VECTOR3 TMP$2320$1;
 label$2483:;
 _ZN7VECTOR3C1Eddd( &TMP$2303$1, 0x1.CF6DFBE76C8B4p+11, -0x1.558B333333333p+10, 0x1.2898ED916872Bp+11 );
 struct $7VECTOR3* vr$3 = _ZmlR7VECTOR3d( &TMP$2304$1, &TMP$2303$1, X$1 );
 _ZN7VECTOR3C1Eddd( &TMP$2302$1, -0x1.05C95C28F5C29p+14, 0x1.DAA7851EB851Fp+12, -0x1.61B2147AE147Bp+13 );
 struct $7VECTOR3* vr$7 = _ZplR7VECTOR3S0_( &TMP$2305$1, &TMP$2302$1, vr$3 );
 struct $7VECTOR3* vr$9 = _ZmlR7VECTOR3d( &TMP$2306$1, vr$7, X$1 );
 _ZN7VECTOR3C1Eddd( &TMP$2301$1, 0x1.DF688F5C28F5Cp+14, -0x1.096070A3D70A4p+14, 0x1.5C68666666666p+14 );
 struct $7VECTOR3* vr$13 = _ZplR7VECTOR3S0_( &TMP$2307$1, &TMP$2301$1, vr$9 );
 struct $7VECTOR3* vr$15 = _ZmlR7VECTOR3d( &TMP$2308$1, vr$13, X$1 );
 _ZN7VECTOR3C1Eddd( &TMP$2300$1, -0x1.C5DDC28F5C28Fp+14, 0x1.33BFA3D70A3D7p+14, -0x1.6C213D70A3D71p+14 );
 struct $7VECTOR3* vr$19 = _ZplR7VECTOR3S0_( &TMP$2309$1, &TMP$2300$1, vr$15 );
 struct $7VECTOR3* vr$21 = _ZmlR7VECTOR3d( &TMP$2310$1, vr$19, X$1 );
 _ZN7VECTOR3C1Eddd( &TMP$2299$1, 0x1.D544666666666p+13, -0x1.8B31AE147AE14p+13, 0x1.ADC4CCCCCCCCDp+13 );
 struct $7VECTOR3* vr$25 = _ZplR7VECTOR3S0_( &TMP$2311$1, &TMP$2299$1, vr$21 );
 struct $7VECTOR3* vr$27 = _ZmlR7VECTOR3d( &TMP$2312$1, vr$25, X$1 );
 _ZN7VECTOR3C1Eddd( &TMP$2298$1, -0x1.0190D916872Bp+12, 0x1.1502AC083126Fp+12, -0x1.16F283126E979p+12 );
 struct $7VECTOR3* vr$31 = _ZplR7VECTOR3S0_( &TMP$2313$1, &TMP$2298$1, vr$27 );
 struct $7VECTOR3* vr$33 = _ZmlR7VECTOR3d( &TMP$2314$1, vr$31, X$1 );
 _ZN7VECTOR3C1Eddd( &TMP$2297$1, 0x1.109178D4FDF3Bp+9, -0x1.8C1683E425AEEp+9, 0x1.5C5837B4A233Ap+9 );
 struct $7VECTOR3* vr$37 = _ZplR7VECTOR3S0_( &TMP$2315$1, &TMP$2297$1, vr$33 );
 struct $7VECTOR3* vr$39 = _ZmlR7VECTOR3d( &TMP$2316$1, vr$37, X$1 );
 _ZN7VECTOR3C1Eddd( &TMP$2296$1, -0x1.DA66666666666p+4, 0x1.10433EFF19503p+6, -0x1.2080639D5E4A4p+5 );
 struct $7VECTOR3* vr$43 = _ZplR7VECTOR3S0_( &TMP$2317$1, &TMP$2296$1, vr$39 );
 struct $7VECTOR3* vr$45 = _ZmlR7VECTOR3d( &TMP$2318$1, vr$43, X$1 );
 _ZN7VECTOR3C1Eddd( &TMP$2295$1, 0x1.38536D655E28Bp+0, -0x1.EEEB3DD11BE6Ep+0, 0x1.9FAFC8B0079A3p+0 );
 struct $7VECTOR3* vr$49 = _ZplR7VECTOR3S0_( &TMP$2319$1, &TMP$2295$1, vr$45 );
 struct $7VECTOR3* vr$51 = _ZmlR7VECTOR3d( &TMP$2320$1, vr$49, X$1 );
 _ZN7VECTOR3C1ERS_( tmp$2294$1, vr$51 );
 goto label$2484;
 label$2484:;
 return tmp$2294$1;
}

void _ZN12SYSTEM_BUS_T9MAINIMAGEER7VECTOR4RK7VECTOR2( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR4* FRAGCOLOR$1, struct $7VECTOR2* FRAGCOORD$1 )
{
 struct $7VECTOR2 TMP$2321$1;
 struct $7VECTOR2 TMP$2322$1;
 struct $7VECTOR2 TMP$2323$1;
 double TMP$2324$1;
 struct $7VECTOR2 TMP$2325$1;
 double TMP$2326$1;
 struct $7VECTOR3 TMP$2327$1;
 struct $7VECTOR3 TMP$2328$1;
 struct $4MAT3 TMP$2329$1;
 struct $7VECTOR3 TMP$2330$1;
 struct $7VECTOR2 TMP$2331$1;
 struct $7VECTOR3 TMP$2332$1;
 struct $7VECTOR3 TMP$2333$1;
 struct $7VECTOR3 TMP$2334$1;
 struct $7VECTOR4 TMP$2335$1;
 struct $7VECTOR3 TMP$2336$1;
 struct $7VECTOR3 TMP$2337$1;
 label$2485:;
 RTIME$ = IGLOBALTIME$;
 struct $7VECTOR2* vr$1 = _ZN7VECTOR32XYEv( &TMP$2321$1, &IRESOLUTION$ );
 struct $7VECTOR2* vr$5 = _ZdvR7VECTOR2S0_( &TMP$2322$1, (struct $7VECTOR2*)FRAGCOORD$1, vr$1 );
 _ZN7VECTOR2aSERS_( &Q$, vr$5 );
 TMP$2326$1 = 0x1.p+0;
 TMP$2324$1 = 0x1.p+1;
 struct $7VECTOR2* vr$9 = _ZmlR7VECTOR2Rd( &TMP$2323$1, &Q$, &TMP$2324$1 );
 struct $7VECTOR2* vr$11 = _ZmiR7VECTOR2Rd( &TMP$2325$1, vr$9, &TMP$2326$1 );
 _ZN7VECTOR2aSERS_( &P2$, vr$11 );
 *(double*)&P2$ = *(double*)&P2$ * (*(double*)((uint8*)&IRESOLUTION$ + 16ll) / *(double*)((uint8*)&IRESOLUTION$ + 24ll));
 _ZN7VECTOR3C1Eddd( &TMP$2327$1, __builtin_cos( RTIME$ ) * 0x1.p+1, 0x1.p+0, __builtin_sin( RTIME$ ) * 0x1.p+1 );
 _ZN7VECTOR3aSERS_( &RO$, &TMP$2327$1 );
 _ZN7VECTOR3C1Eddd( &TMP$2328$1, -0x1.p-1, -0x1.999999999999Ap-2, 0x1.p-1 );
 _ZN7VECTOR3aSERS_( &TA$, &TMP$2328$1 );
 CR$ = 0x0p+0;
 struct $4MAT3 vr$22 = _ZN12SYSTEM_BUS_T9SETCAMERAEv( THIS$1 );
 TMP$2329$1 = vr$22;
 _ZN4MAT3aSERKS_( &CA$, (struct $4MAT3*)&TMP$2329$1 );
 struct $7VECTOR2* vr$25 = _ZN7VECTOR22XYEv( &TMP$2331$1, &P2$ );
 _ZN7VECTOR3C1ER7VECTOR2d( &TMP$2330$1, vr$25, 0x1.p+1 );
 struct $7VECTOR3* vr$29 = _ZN12SYSTEM_BUS_T11K_NORMALIZEER7VECTOR3( &TMP$2332$1, THIS$1, &TMP$2330$1 );
 struct $7VECTOR3* vr$31 = _ZmlR4MAT3R7VECTOR3( &TMP$2333$1, &CA$, vr$29 );
 _ZN7VECTOR3aSERS_( &RD$, vr$31 );
 struct $7VECTOR3 COL$1;
 struct $7VECTOR3* vr$33 = _ZN12SYSTEM_BUS_T11RENDER_GLSLEv( &TMP$2334$1, THIS$1 );
 _ZN7VECTOR3C1ERS_( &COL$1, vr$33 );
 _ZN7VECTOR3C1Ed( &TMP$2336$1, 0x1.D16872B020C4Ap-2 );
 struct $7VECTOR3* vr$39 = _ZN12SYSTEM_BUS_T5K_POWER7VECTOR3S1_( &TMP$2337$1, THIS$1, &COL$1, &TMP$2336$1 );
 _ZN7VECTOR4C1ER7VECTOR3d( &TMP$2335$1, vr$39, 0x1.p+0 );
 _ZN7VECTOR4aSERS_( FRAGCOLOR$1, &TMP$2335$1 );
 label$2486:;
}

void _ZN12SYSTEM_BUS_T10_MAINIMAGEER7VECTOR4RK7VECTOR2( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR4* FRAGCOLOR$1, struct $7VECTOR2* FRAGCOORD$1 )
{
 struct $7VECTOR2 TMP$2339$1;
 struct $7VECTOR2 TMP$2340$1;
 struct $7VECTOR3 TMP$2341$1;
 struct $7VECTOR3 TMP$2342$1;
 struct $7VECTOR3 TMP$2343$1;
 struct $7VECTOR3 TMP$2344$1;
 struct $7VECTOR3 TMP$2345$1;
 struct $7VECTOR3 TMP$2346$1;
 struct $7VECTOR3 TMP$2347$1;
 struct $7VECTOR4 TMP$2348$1;
 label$2487:;
 struct $7VECTOR3 UV$1;
 struct $7VECTOR2* vr$1 = _ZN7VECTOR32XYEv( &TMP$2339$1, &IRESOLUTION$ );
 struct $7VECTOR2* vr$5 = _ZdvR7VECTOR2S0_( &TMP$2340$1, (struct $7VECTOR2*)FRAGCOORD$1, vr$1 );
 _ZN7VECTOR3C1ER7VECTOR2d( &UV$1, vr$5, 0x1.p+0 );
 struct $7VECTOR3 COL$1;
 _ZN7VECTOR3C1Eddd( &TMP$2343$1, 0x0p+0, 0x1.p+1, 0x1.p+2 );
 struct $7VECTOR3* vr$11 = _ZN7VECTOR33XYXEv( &TMP$2341$1, &UV$1 );
 struct $7VECTOR3* vr$13 = _ZpldR7VECTOR3( &TMP$2342$1, IGLOBALTIME$, vr$11 );
 struct $7VECTOR3* vr$15 = _ZplR7VECTOR3S0_( &TMP$2344$1, vr$13, &TMP$2343$1 );
 struct $7VECTOR3* vr$17 = _Zv13cosR7VECTOR3( &TMP$2345$1, vr$15 );
 struct $7VECTOR3* vr$19 = _ZmldR7VECTOR3( &TMP$2346$1, 0x1.p-1, vr$17 );
 struct $7VECTOR3* vr$21 = _ZpldR7VECTOR3( &TMP$2347$1, 0x1.p-1, vr$19 );
 _ZN7VECTOR3C1ERS_( &COL$1, vr$21 );
 _ZN7VECTOR4C1ER7VECTOR3d( &TMP$2348$1, &COL$1, 0x1.p+0 );
 _ZN7VECTOR4aSERS_( FRAGCOLOR$1, &TMP$2348$1 );
 label$2488:;
}

void _ZN12SYSTEM_BUS_T9EXEC_GLSLEv( struct $12SYSTEM_BUS_T* THIS$1 )
{
 label$2489:;
 uint64 FRAMES$1;
 __builtin_memset( &FRAMES$1, 0, 8ll );
 uint64 MX$1;
 __builtin_memset( &MX$1, 0, 8ll );
 uint64 MY$1;
 __builtin_memset( &MY$1, 0, 8ll );
 uint64 MB$1;
 __builtin_memset( &MB$1, 0, 8ll );
 SCR_W$ = 1920ull;
 SCR_H$ = 1080ull;
 *(double*)((uint8*)&IRESOLUTION$ + 16ll) = (double)SCR_W$;
 *(double*)((uint8*)&IRESOLUTION$ + 24ll) = (double)SCR_H$;
 *(double*)((uint8*)&IRESOLUTION$ + 32ll) = *(double*)((uint8*)&IRESOLUTION$ + 16ll) / *(double*)((uint8*)&IRESOLUTION$ + 24ll);
 struct $7VECTOR2 FRAGCOORD$1;
 _ZN7VECTOR2C1Ev( &FRAGCOORD$1 );
 struct $7VECTOR4 FRAGCOLOR$1;
 _ZN7VECTOR4C1Ev( &FRAGCOLOR$1 );
 double TFRAMESTART$1;
 TFRAMESTART$1 = 0x0p+0;
 uint64 COLOUR$1;
 __builtin_memset( &COLOUR$1, 0, 8ll );
 label$2491:;
 if( (double)FRAMES$1 == *(double*)((int64)(double*)MEM64$ + 394912ll) ) goto label$2492;
 {
  FBSTRING TMP$2353$2;
  *(double*)((uint8*)&FRAGCOORD$1 + 8ll) = (double)(SCR_H$ + 18446744073709551615ull);
  {
   uint64 Y$3;
   Y$3 = 0ull;
   uint64 TMP$2349$3;
   TMP$2349$3 = SCR_H$ + 18446744073709551615ull;
   goto label$2493;
   label$2496:;
   {
    fb_GfxLock( );
    {
     uint64 X$5;
     X$5 = 0ull;
     uint64 TMP$2350$5;
     TMP$2350$5 = SCR_W$ + 18446744073709551615ull;
     goto label$2497;
     label$2500:;
     {
      *(double*)&FRAGCOORD$1 = (double)X$5;
      _ZN12SYSTEM_BUS_T9MAINIMAGEER7VECTOR4RK7VECTOR2( THIS$1, &FRAGCOLOR$1, (struct $7VECTOR2*)&FRAGCOORD$1 );
      *(double*)((int64)(double*)MEM64$ + 394888ll) = (double)X$5;
      *(double*)((int64)(double*)MEM64$ + 394896ll) = (double)Y$3;
      uint64 vr$21 = _ZN7VECTOR4cvyEv( &FRAGCOLOR$1 );
      *(double*)((int64)(double*)MEM64$ + 394824ll) = (double)vr$21;
      _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.820Cp+15, 0x0p+0 );
     }
     label$2498:;
     X$5 = X$5 + 1ull;
     label$2497:;
     if( X$5 <= TMP$2350$5 ) goto label$2500;
     label$2499:;
    }
    fb_GfxUnlock( (int32)Y$3, (int32)Y$3 );
    fb_Sleep( 1 );
    *(double*)((uint8*)&FRAGCOORD$1 + 8ll) = *(double*)((uint8*)&FRAGCOORD$1 + 8ll) + -0x1.p+0;
    fb_GfxPut( (void*)0ull, 0x0p+0f, 0x0p+0f, (void*)FGIMAGE$, -65536, -65536, -65536, -65536, 0, 6, (void*)&fb_hPutAlpha, -1, (void*)0ull, (void*)0ull );
   }
   label$2494:;
   Y$3 = Y$3 + 1ull;
   label$2493:;
   if( Y$3 <= TMP$2349$3 ) goto label$2496;
   label$2495:;
  }
  IGLOBALTIME$ = IGLOBALTIME$ + 0x1.5555555555555p-5;
  double FPS$2;
  FPS$2 = 0x1.p+0 / (IGLOBALTIME$ - TFRAMESTART$1);
  FBSTRING* vr$32 = fb_ULongintToStr( FRAMES$1 + 1ull );
  __builtin_memset( &TMP$2353$2, 0, 24ll );
  FBSTRING* vr$35 = fb_StrConcat( &TMP$2353$2, (void*)"frame: ", 8ll, (void*)vr$32, -1ll );
  fb_GfxSetWindowTitle( (FBSTRING*)vr$35 );
  TFRAMESTART$1 = IGLOBALTIME$;
  FRAMES$1 = FRAMES$1 + 1ull;
 }
 goto label$2491;
 label$2492:;
 label$2490:;
}

void _ZN12SYSTEM_BUS_T12EXEC_GLSL_40Ev( struct $12SYSTEM_BUS_T* THIS$1 )
{
 label$2501:;
 uint64 FRAMES$1;
 __builtin_memset( &FRAMES$1, 0, 8ll );
 uint64 MX$1;
 __builtin_memset( &MX$1, 0, 8ll );
 uint64 MY$1;
 __builtin_memset( &MY$1, 0, 8ll );
 uint64 MB$1;
 __builtin_memset( &MB$1, 0, 8ll );
 SCR_W$ = 40ull;
 SCR_H$ = 25ull;
 *(double*)((uint8*)&IRESOLUTION$ + 16ll) = (double)SCR_W$;
 *(double*)((uint8*)&IRESOLUTION$ + 24ll) = (double)SCR_H$;
 *(double*)((uint8*)&IRESOLUTION$ + 32ll) = *(double*)((uint8*)&IRESOLUTION$ + 16ll) / *(double*)((uint8*)&IRESOLUTION$ + 24ll);
 struct $7VECTOR2 FRAGCOORD$1;
 _ZN7VECTOR2C1Ev( &FRAGCOORD$1 );
 struct $7VECTOR4 FRAGCOLOR$1;
 _ZN7VECTOR4C1Ev( &FRAGCOLOR$1 );
 double TFRAMESTART$1;
 TFRAMESTART$1 = 0x0p+0;
 uint64 COLOUR$1;
 __builtin_memset( &COLOUR$1, 0, 8ll );
 label$2503:;
 if( (double)FRAMES$1 == *(double*)((int64)(double*)MEM64$ + 394912ll) ) goto label$2504;
 {
  FBSTRING TMP$2357$2;
  *(double*)((uint8*)&FRAGCOORD$1 + 8ll) = (double)(SCR_H$ + 18446744073709551615ull);
  {
   uint64 Y$3;
   Y$3 = 0ull;
   uint64 TMP$2354$3;
   TMP$2354$3 = SCR_H$ + 18446744073709551615ull;
   goto label$2505;
   label$2508:;
   {
    fb_GfxLock( );
    {
     uint64 X$5;
     X$5 = 0ull;
     uint64 TMP$2355$5;
     TMP$2355$5 = SCR_W$ + 18446744073709551615ull;
     goto label$2509;
     label$2512:;
     {
      *(double*)&FRAGCOORD$1 = (double)X$5;
      _ZN12SYSTEM_BUS_T9MAINIMAGEER7VECTOR4RK7VECTOR2( THIS$1, &FRAGCOLOR$1, (struct $7VECTOR2*)&FRAGCOORD$1 );
      *(double*)((int64)(double*)MEM64$ + 394888ll) = (double)X$5;
      *(double*)((int64)(double*)MEM64$ + 394896ll) = (double)Y$3;
      uint64 vr$21 = _ZN7VECTOR4cvyEv( &FRAGCOLOR$1 );
      *(double*)((int64)(double*)MEM64$ + 394824ll) = (double)vr$21;
      _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.83D6p+15, 0x0p+0 );
     }
     label$2510:;
     X$5 = X$5 + 1ull;
     label$2509:;
     if( X$5 <= TMP$2355$5 ) goto label$2512;
     label$2511:;
    }
    fb_GfxUnlock( (int32)Y$3, (int32)Y$3 );
    fb_Sleep( 1 );
    *(double*)((uint8*)&FRAGCOORD$1 + 8ll) = *(double*)((uint8*)&FRAGCOORD$1 + 8ll) + -0x1.p+0;
   }
   label$2506:;
   Y$3 = Y$3 + 1ull;
   label$2505:;
   if( Y$3 <= TMP$2354$3 ) goto label$2508;
   label$2507:;
  }
  *(double*)((int64)(double*)MEM64$ + 426128ll) = (double)(((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 426128ll) + 0x1.p+0 )) % 1079ll);
  fb_GfxPut( (void*)0ull, 0x0p+0f, 0x0p+0f, (void*)FGIMAGE$, -65536, -65536, -65536, -65536, 0, 6, (void*)&fb_hPutAlpha, -1, (void*)0ull, (void*)0ull );
  IGLOBALTIME$ = IGLOBALTIME$ + 0x1.5555555555555p-5;
  double FPS$2;
  FPS$2 = 0x1.p+0 / (IGLOBALTIME$ - TFRAMESTART$1);
  FBSTRING* vr$36 = fb_ULongintToStr( FRAMES$1 + 1ull );
  __builtin_memset( &TMP$2357$2, 0, 24ll );
  FBSTRING* vr$39 = fb_StrConcat( &TMP$2357$2, (void*)"frame: ", 8ll, (void*)vr$36, -1ll );
  fb_GfxSetWindowTitle( (FBSTRING*)vr$39 );
  TFRAMESTART$1 = IGLOBALTIME$;
  FRAMES$1 = FRAMES$1 + 1ull;
 }
 goto label$2503;
 label$2504:;
 label$2502:;
}

void _ZN12SYSTEM_BUS_T12EXEC_GLSL_90Ev( struct $12SYSTEM_BUS_T* THIS$1 )
{
 label$2513:;
 uint64 FRAMES$1;
 __builtin_memset( &FRAMES$1, 0, 8ll );
 uint64 MX$1;
 __builtin_memset( &MX$1, 0, 8ll );
 uint64 MY$1;
 __builtin_memset( &MY$1, 0, 8ll );
 uint64 MB$1;
 __builtin_memset( &MB$1, 0, 8ll );
 SCR_W$ = 90ull;
 SCR_H$ = 60ull;
 *(double*)((uint8*)&IRESOLUTION$ + 16ll) = (double)SCR_W$;
 *(double*)((uint8*)&IRESOLUTION$ + 24ll) = (double)SCR_H$;
 *(double*)((uint8*)&IRESOLUTION$ + 32ll) = *(double*)((uint8*)&IRESOLUTION$ + 16ll) / *(double*)((uint8*)&IRESOLUTION$ + 24ll);
 struct $7VECTOR2 FRAGCOORD$1;
 _ZN7VECTOR2C1Ev( &FRAGCOORD$1 );
 struct $7VECTOR4 FRAGCOLOR$1;
 _ZN7VECTOR4C1Ev( &FRAGCOLOR$1 );
 double TFRAMESTART$1;
 TFRAMESTART$1 = 0x0p+0;
 uint64 COLOUR$1;
 __builtin_memset( &COLOUR$1, 0, 8ll );
 label$2515:;
 if( (double)FRAMES$1 == *(double*)((int64)(double*)MEM64$ + 394912ll) ) goto label$2516;
 {
  FBSTRING TMP$2361$2;
  *(double*)((uint8*)&FRAGCOORD$1 + 8ll) = (double)(SCR_H$ + 18446744073709551615ull);
  {
   uint64 Y$3;
   Y$3 = 0ull;
   uint64 TMP$2358$3;
   TMP$2358$3 = SCR_H$ + 18446744073709551615ull;
   goto label$2517;
   label$2520:;
   {
    fb_GfxLock( );
    {
     uint64 X$5;
     X$5 = 0ull;
     uint64 TMP$2359$5;
     TMP$2359$5 = SCR_W$ + 18446744073709551615ull;
     goto label$2521;
     label$2524:;
     {
      *(double*)&FRAGCOORD$1 = (double)X$5;
      _ZN12SYSTEM_BUS_T9MAINIMAGEER7VECTOR4RK7VECTOR2( THIS$1, &FRAGCOLOR$1, (struct $7VECTOR2*)&FRAGCOORD$1 );
      *(double*)((int64)(double*)MEM64$ + 394888ll) = (double)X$5;
      *(double*)((int64)(double*)MEM64$ + 394896ll) = (double)Y$3;
      uint64 vr$21 = _ZN7VECTOR4cvyEv( &FRAGCOLOR$1 );
      *(double*)((int64)(double*)MEM64$ + 394824ll) = (double)vr$21;
      _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.83D8p+15, 0x0p+0 );
     }
     label$2522:;
     X$5 = X$5 + 1ull;
     label$2521:;
     if( X$5 <= TMP$2359$5 ) goto label$2524;
     label$2523:;
    }
    fb_GfxUnlock( (int32)Y$3, (int32)Y$3 );
    fb_Sleep( 1 );
    *(double*)((uint8*)&FRAGCOORD$1 + 8ll) = *(double*)((uint8*)&FRAGCOORD$1 + 8ll) + -0x1.p+0;
    *(double*)((int64)(double*)MEM64$ + 426128ll) = (double)(((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 426128ll) + 0x1.p+0 )) % 1079ll);
   }
   label$2518:;
   Y$3 = Y$3 + 1ull;
   label$2517:;
   if( Y$3 <= TMP$2358$3 ) goto label$2520;
   label$2519:;
  }
  fb_GfxPut( (void*)0ull, 0x0p+0f, 0x0p+0f, (void*)FGIMAGE$, -65536, -65536, -65536, -65536, 0, 6, (void*)&fb_hPutAlpha, -1, (void*)0ull, (void*)0ull );
  IGLOBALTIME$ = IGLOBALTIME$ + 0x1.5555555555555p-5;
  double FPS$2;
  FPS$2 = 0x1.p+0 / (IGLOBALTIME$ - TFRAMESTART$1);
  FBSTRING* vr$36 = fb_ULongintToStr( FRAMES$1 + 1ull );
  __builtin_memset( &TMP$2361$2, 0, 24ll );
  FBSTRING* vr$39 = fb_StrConcat( &TMP$2361$2, (void*)"frame: ", 8ll, (void*)vr$36, -1ll );
  fb_GfxSetWindowTitle( (FBSTRING*)vr$39 );
  TFRAMESTART$1 = IGLOBALTIME$;
  FRAMES$1 = FRAMES$1 + 1ull;
 }
 goto label$2515;
 label$2516:;
 label$2514:;
}

void _ZN12SYSTEM_BUS_T13EXEC_GLSL_120Ev( struct $12SYSTEM_BUS_T* THIS$1 )
{
 label$2525:;
 uint64 FRAMES$1;
 __builtin_memset( &FRAMES$1, 0, 8ll );
 uint64 MX$1;
 __builtin_memset( &MX$1, 0, 8ll );
 uint64 MY$1;
 __builtin_memset( &MY$1, 0, 8ll );
 uint64 MB$1;
 __builtin_memset( &MB$1, 0, 8ll );
 SCR_W$ = 120ull;
 SCR_H$ = 60ull;
 *(double*)((uint8*)&IRESOLUTION$ + 16ll) = (double)SCR_W$;
 *(double*)((uint8*)&IRESOLUTION$ + 24ll) = (double)SCR_H$;
 *(double*)((uint8*)&IRESOLUTION$ + 32ll) = *(double*)((uint8*)&IRESOLUTION$ + 16ll) / *(double*)((uint8*)&IRESOLUTION$ + 24ll);
 struct $7VECTOR2 FRAGCOORD$1;
 _ZN7VECTOR2C1Ev( &FRAGCOORD$1 );
 struct $7VECTOR4 FRAGCOLOR$1;
 _ZN7VECTOR4C1Ev( &FRAGCOLOR$1 );
 double TFRAMESTART$1;
 TFRAMESTART$1 = 0x0p+0;
 uint64 COLOUR$1;
 __builtin_memset( &COLOUR$1, 0, 8ll );
 label$2527:;
 if( (double)FRAMES$1 == *(double*)((int64)(double*)MEM64$ + 394912ll) ) goto label$2528;
 {
  FBSTRING TMP$2365$2;
  *(double*)((uint8*)&FRAGCOORD$1 + 8ll) = (double)(SCR_H$ + 18446744073709551615ull);
  {
   uint64 Y$3;
   Y$3 = 0ull;
   uint64 TMP$2362$3;
   TMP$2362$3 = SCR_H$ + 18446744073709551615ull;
   goto label$2529;
   label$2532:;
   {
    fb_GfxLock( );
    {
     uint64 X$5;
     X$5 = 0ull;
     uint64 TMP$2363$5;
     TMP$2363$5 = SCR_W$ + 18446744073709551615ull;
     goto label$2533;
     label$2536:;
     {
      *(double*)&FRAGCOORD$1 = (double)X$5;
      _ZN12SYSTEM_BUS_T9MAINIMAGEER7VECTOR4RK7VECTOR2( THIS$1, &FRAGCOLOR$1, (struct $7VECTOR2*)&FRAGCOORD$1 );
      *(double*)((int64)(double*)MEM64$ + 394888ll) = (double)X$5;
      *(double*)((int64)(double*)MEM64$ + 394896ll) = (double)Y$3;
      uint64 vr$21 = _ZN7VECTOR4cvyEv( &FRAGCOLOR$1 );
      *(double*)((int64)(double*)MEM64$ + 394824ll) = (double)vr$21;
      _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.83DAp+15, 0x0p+0 );
     }
     label$2534:;
     X$5 = X$5 + 1ull;
     label$2533:;
     if( X$5 <= TMP$2363$5 ) goto label$2536;
     label$2535:;
    }
    fb_GfxUnlock( (int32)Y$3, (int32)Y$3 );
    fb_Sleep( 1 );
    *(double*)((uint8*)&FRAGCOORD$1 + 8ll) = *(double*)((uint8*)&FRAGCOORD$1 + 8ll) + -0x1.p+0;
    *(double*)((int64)(double*)MEM64$ + 426128ll) = (double)(((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 426128ll) + 0x1.p+0 )) % 1079ll);
   }
   label$2530:;
   Y$3 = Y$3 + 1ull;
   label$2529:;
   if( Y$3 <= TMP$2362$3 ) goto label$2532;
   label$2531:;
  }
  fb_GfxPut( (void*)0ull, 0x0p+0f, 0x0p+0f, (void*)FGIMAGE$, -65536, -65536, -65536, -65536, 0, 6, (void*)&fb_hPutAlpha, -1, (void*)0ull, (void*)0ull );
  IGLOBALTIME$ = IGLOBALTIME$ + 0x1.5555555555555p-5;
  double FPS$2;
  FPS$2 = 0x1.p+0 / (IGLOBALTIME$ - TFRAMESTART$1);
  FBSTRING* vr$36 = fb_ULongintToStr( FRAMES$1 + 1ull );
  __builtin_memset( &TMP$2365$2, 0, 24ll );
  FBSTRING* vr$39 = fb_StrConcat( &TMP$2365$2, (void*)"frame: ", 8ll, (void*)vr$36, -1ll );
  fb_GfxSetWindowTitle( (FBSTRING*)vr$39 );
  TFRAMESTART$1 = IGLOBALTIME$;
  FRAMES$1 = FRAMES$1 + 1ull;
 }
 goto label$2527;
 label$2528:;
 label$2526:;
}

struct $7VECTOR3* _ZN12SYSTEM_BUS_T19APPLYRASTERIZATION1ER7VECTOR2R7VECTOR3S1_d( struct $7VECTOR3* tmp$2366$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR2* SCREENCOORDS$1, struct $7VECTOR3* TEXEL$1, struct $7VECTOR2* VIRTUALRESOLUTION$1, double INTENSITY$1 )
{
 label$2537:;
 _ZN7VECTOR3C1ERS_( tmp$2366$1, TEXEL$1 );
 goto label$2538;
 label$2538:;
 return tmp$2366$1;
}

struct $7VECTOR3* _ZN12SYSTEM_BUS_T19APPLYRASTERIZATION2ER7VECTOR2R7VECTOR3S1_d( struct $7VECTOR3* tmp$2367$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR2* SCREENCOORDS$1, struct $7VECTOR3* TEXEL$1, struct $7VECTOR2* VIRTUALRESOLUTION$1, double INTENSITY$1 )
{
 struct $7VECTOR3 TMP$2368$1;
 struct $7VECTOR3 TMP$2369$1;
 struct $7VECTOR3 TMP$2370$1;
 struct $7VECTOR3 TMP$2371$1;
 struct $7VECTOR3 TMP$2372$1;
 struct $7VECTOR3 TMP$2373$1;
 struct $7VECTOR2 TMP$2374$1;
 struct $7VECTOR2 TMP$2375$1;
 struct $7VECTOR2 TMP$2376$1;
 double TMP$2377$1;
 struct $7VECTOR2 TMP$2378$1;
 struct $7VECTOR2 TMP$2379$1;
 struct $7VECTOR3 TMP$2380$1;
 struct $7VECTOR3 TMP$2381$1;
 label$2539:;
 struct $7VECTOR3 PIXELHIGH$1;
 struct $7VECTOR3* vr$1 = _ZmldR7VECTOR3( &TMP$2368$1, 0x1.999999999999Ap-3, TEXEL$1 );
 struct $7VECTOR3* vr$3 = _ZmidR7VECTOR3( &TMP$2369$1, 0x1.4CCCCCCCCCCCDp+0, vr$1 );
 struct $7VECTOR3* vr$5 = _ZmlR7VECTOR3S0_( &TMP$2370$1, vr$3, TEXEL$1 );
 _ZN7VECTOR3C1ERS_( &PIXELHIGH$1, vr$5 );
 struct $7VECTOR3 PIXELLOW$1;
 struct $7VECTOR3* vr$8 = _ZmldR7VECTOR3( &TMP$2371$1, 0x1.999999999999Ap-4, TEXEL$1 );
 struct $7VECTOR3* vr$10 = _ZpldR7VECTOR3( &TMP$2372$1, 0x1.6666666666666p-1, vr$8 );
 struct $7VECTOR3* vr$12 = _ZmlR7VECTOR3S0_( &TMP$2373$1, vr$10, TEXEL$1 );
 _ZN7VECTOR3C1ERS_( &PIXELLOW$1, vr$12 );
 struct $7VECTOR2 COORDS$1;
 _ZN7VECTOR2C1Ed( &TMP$2378$1, 0x1.p+0 );
 TMP$2377$1 = 0x1.p+1;
 struct $7VECTOR2* vr$18 = _ZmlR7VECTOR2S0_( &TMP$2374$1, SCREENCOORDS$1, VIRTUALRESOLUTION$1 );
 struct $7VECTOR2* vr$20 = _ZN12SYSTEM_BUS_T7K_FRACTER7VECTOR2( &TMP$2375$1, THIS$1, vr$18 );
 struct $7VECTOR2* vr$22 = _ZmlR7VECTOR2Rd( &TMP$2376$1, vr$20, &TMP$2377$1 );
 struct $7VECTOR2* vr$24 = _ZmiR7VECTOR2S0_( &TMP$2379$1, vr$22, &TMP$2378$1 );
 _ZN7VECTOR2C1ERS_( &COORDS$1, vr$24 );
 double MASK$1;
 MASK$1 = -(__builtin_fabs( *(double*)((uint8*)&COORDS$1 + 8ll) )) + 0x1.p+0;
 struct $7VECTOR3 RASTERIZATIONCOLOR$1;
 struct $7VECTOR3* vr$32 = _ZN12SYSTEM_BUS_T5K_MIXER7VECTOR3S1_d( &TMP$2380$1, THIS$1, &PIXELLOW$1, &PIXELHIGH$1, MASK$1 );
 _ZN7VECTOR3C1ERS_( &RASTERIZATIONCOLOR$1, vr$32 );
 struct $7VECTOR3* vr$36 = _ZN12SYSTEM_BUS_T5K_MIXER7VECTOR3S1_d( &TMP$2381$1, THIS$1, TEXEL$1, &RASTERIZATIONCOLOR$1, INTENSITY$1 );
 _ZN7VECTOR3C1ERS_( tmp$2367$1, vr$36 );
 goto label$2540;
 label$2540:;
 return tmp$2367$1;
}

struct $7VECTOR3* _ZN12SYSTEM_BUS_T19APPLYRASTERIZATION3ER7VECTOR2R7VECTOR3S1_d( struct $7VECTOR3* tmp$2382$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR2* SCREENCOORDS$1, struct $7VECTOR3* TEXEL$1, struct $7VECTOR2* VIRTUALRESOLUTION$1, double INTENSITY$1 )
{
 struct $7VECTOR3 TMP$2383$1;
 struct $7VECTOR3 TMP$2384$1;
 struct $7VECTOR3 TMP$2385$1;
 struct $7VECTOR3 TMP$2386$1;
 struct $7VECTOR3 TMP$2387$1;
 struct $7VECTOR3 TMP$2388$1;
 struct $7VECTOR2 TMP$2389$1;
 struct $7VECTOR2 TMP$2390$1;
 struct $7VECTOR2 TMP$2391$1;
 double TMP$2392$1;
 struct $7VECTOR2 TMP$2393$1;
 struct $7VECTOR2 TMP$2394$1;
 struct $7VECTOR2 TMP$2395$1;
 struct $7VECTOR3 TMP$2396$1;
 struct $7VECTOR3 TMP$2397$1;
 label$2541:;
 struct $7VECTOR3 RESULT$1;
 _ZN7VECTOR3C1ERS_( &RESULT$1, TEXEL$1 );
 struct $7VECTOR3 PIXELHIGH$1;
 struct $7VECTOR3* vr$2 = _ZmldR7VECTOR3( &TMP$2383$1, 0x1.999999999999Ap-3, TEXEL$1 );
 struct $7VECTOR3* vr$4 = _ZmidR7VECTOR3( &TMP$2384$1, 0x1.4CCCCCCCCCCCDp+0, vr$2 );
 struct $7VECTOR3* vr$6 = _ZmlR7VECTOR3S0_( &TMP$2385$1, vr$4, TEXEL$1 );
 _ZN7VECTOR3C1ERS_( &PIXELHIGH$1, vr$6 );
 struct $7VECTOR3 PIXELLOW$1;
 struct $7VECTOR3* vr$9 = _ZmldR7VECTOR3( &TMP$2386$1, 0x1.999999999999Ap-4, TEXEL$1 );
 struct $7VECTOR3* vr$11 = _ZpldR7VECTOR3( &TMP$2387$1, 0x1.6666666666666p-1, vr$9 );
 struct $7VECTOR3* vr$13 = _ZmlR7VECTOR3S0_( &TMP$2388$1, vr$11, TEXEL$1 );
 _ZN7VECTOR3C1ERS_( &PIXELLOW$1, vr$13 );
 struct $7VECTOR2 COORDS$1;
 _ZN7VECTOR2C1Ed( &TMP$2393$1, 0x1.p+0 );
 TMP$2392$1 = 0x1.p+1;
 struct $7VECTOR2* vr$19 = _ZmlR7VECTOR2S0_( &TMP$2389$1, SCREENCOORDS$1, VIRTUALRESOLUTION$1 );
 struct $7VECTOR2* vr$21 = _ZN12SYSTEM_BUS_T7K_FRACTER7VECTOR2( &TMP$2390$1, THIS$1, vr$19 );
 struct $7VECTOR2* vr$23 = _ZmlR7VECTOR2Rd( &TMP$2391$1, vr$21, &TMP$2392$1 );
 struct $7VECTOR2* vr$25 = _ZmiR7VECTOR2S0_( &TMP$2394$1, vr$23, &TMP$2393$1 );
 _ZN7VECTOR2C1ERS_( &COORDS$1, vr$25 );
 struct $7VECTOR2* vr$30 = _ZmlR7VECTOR2S0_( &TMP$2395$1, &COORDS$1, &COORDS$1 );
 _ZN7VECTOR2aSERS_( &COORDS$1, vr$30 );
 double MASK$1;
 MASK$1 = (-(*(double*)&COORDS$1) + 0x1.p+0) - *(double*)((uint8*)&COORDS$1 + 8ll);
 struct $7VECTOR3 RASTERIZATIONCOLOR$1;
 struct $7VECTOR3* vr$38 = _ZN12SYSTEM_BUS_T5K_MIXER7VECTOR3S1_d( &TMP$2396$1, THIS$1, &PIXELLOW$1, &PIXELHIGH$1, MASK$1 );
 _ZN7VECTOR3C1ERS_( &RASTERIZATIONCOLOR$1, vr$38 );
 struct $7VECTOR3* vr$42 = _ZN12SYSTEM_BUS_T5K_MIXER7VECTOR3S1_d( &TMP$2397$1, THIS$1, TEXEL$1, &RASTERIZATIONCOLOR$1, INTENSITY$1 );
 _ZN7VECTOR3C1ERS_( tmp$2382$1, vr$42 );
 goto label$2542;
 label$2542:;
 return tmp$2382$1;
}

double _ZN12SYSTEM_BUS_T4MIN2ER7VECTOR2( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR2* V$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2543:;
 double vr$3 = _ZN12SYSTEM_BUS_T5K_MINEdd( THIS$1, *(double*)V$1, *(double*)((uint8*)V$1 + 8ll) );
 fb$result$1 = vr$3;
 goto label$2544;
 label$2544:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8RGB2GREYER7VECTOR3( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* V$1 )
{
 struct $7VECTOR3 TMP$2398$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2545:;
 _ZN7VECTOR3C1Eddd( &TMP$2398$1, 0x1.AE147AE147AE1p-3, 0x1.70A3D70A3D70Ap-1, 0x1.47AE147AE147Bp-5 );
 double vr$3 = _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( THIS$1, V$1, &TMP$2398$1 );
 fb$result$1 = vr$3;
 goto label$2546;
 label$2546:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T4MAX2ER7VECTOR2( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR2* V$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2547:;
 double vr$3 = _ZN12SYSTEM_BUS_T5K_MAXEdd( THIS$1, *(double*)V$1, *(double*)((uint8*)V$1 + 8ll) );
 fb$result$1 = vr$3;
 goto label$2548;
 label$2548:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5PROD2ER7VECTOR2( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR2* V$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2549:;
 fb$result$1 = *(double*)V$1 * *(double*)((uint8*)V$1 + 8ll);
 goto label$2550;
 label$2550:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T4SUM2ER7VECTOR2( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR2* V$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2551:;
 fb$result$1 = *(double*)V$1 + *(double*)((uint8*)V$1 + 8ll);
 goto label$2552;
 label$2552:;
 return fb$result$1;
}

void _ZN12SYSTEM_BUS_T16DESTROYTEXTURE2DER9SAMPLER2D( struct $12SYSTEM_BUS_T* THIS$1, struct $9SAMPLER2D* TEXTURE$1 )
{
 label$2553:;
 _ZN9SAMPLER2D6UNLOCKEv( TEXTURE$1 );
 _ZN9SAMPLER2D7DESTROYEv( TEXTURE$1 );
 free( (void*)*(void**)((uint8*)TEXTURE$1 + 16ll) );
 *(void**)((uint8*)TEXTURE$1 + 16ll) = (void*)0ull;
 *(int32*)TEXTURE$1 = 0;
 *(int32*)((uint8*)TEXTURE$1 + 4ll) = 0;
 *(int32*)((uint8*)TEXTURE$1 + 8ll) = 0;
 *(int32*)((uint8*)TEXTURE$1 + 12ll) = 0;
 label$2554:;
}

struct $9SAMPLER2D _ZN12SYSTEM_BUS_T15CREATETEXTURE2DEiii( struct $12SYSTEM_BUS_T* THIS$1, int32 XWIDTH$1, int32 XHEIGHT$1, int32 BYTESPERPIXEL$1 )
{
 struct $9SAMPLER2D fb$result$1;
 __builtin_memset( &fb$result$1, 0, 24ll );
 label$2555:;
 struct $9SAMPLER2D RESULT$1;
 __builtin_memset( &RESULT$1, 0, 24ll );
 *(int32*)&RESULT$1 = XWIDTH$1;
 *(int32*)((uint8*)&RESULT$1 + 4ll) = XHEIGHT$1;
 *(int32*)((uint8*)&RESULT$1 + 8ll) = BYTESPERPIXEL$1;
 *(int32*)((uint8*)&RESULT$1 + 12ll) = (int32)((int64)XWIDTH$1 * (int64)BYTESPERPIXEL$1);
 void* vr$9 = malloc( (uint64)((int64)*(int32*)((uint8*)&RESULT$1 + 12ll) * (int64)XHEIGHT$1) );
 *(void**)((uint8*)&RESULT$1 + 16ll) = vr$9;
 _ZN9SAMPLER2D6CREATEEv( &RESULT$1 );
 __builtin_memcpy( &fb$result$1, &RESULT$1, 24 );
 goto label$2556;
 label$2556:;
 return fb$result$1;
}

struct $9SAMPLER2D _ZN12SYSTEM_BUS_T18DRAWRETROCRTCURSORER9SAMPLER2DiiiiR7VECTOR3S3_( struct $12SYSTEM_BUS_T* THIS$1, struct $9SAMPLER2D* TEXTURE$1, int32 MODE$1, int32 X$1, int32 Y$1, int32 VERSION$1, struct $7VECTOR3* CAMERAPOS$1, struct $7VECTOR3* CAMERADIR$1 )
{
 struct $9SAMPLER2D fb$result$1;
 __builtin_memset( &fb$result$1, 0, 24ll );
 label$2557:;
 double CURSOR_RADIUS$1;
 CURSOR_RADIUS$1 = 0x1.4p+3;
 double CURSOR_COLOR$1;
 __builtin_memset( &CURSOR_COLOR$1, 0, 8ll );
 struct $N12SYSTEM_BUS_T8FBARRAY2IdEE {
  double* DATA;
  double* PTR;
  int64 SIZE;
  int64 ELEMENT_LEN;
  int64 DIMENSIONS;
  int64 FLAGS;
  struct $16__FB_ARRAYDIMTB$ DIMTB[2];
 };
 extern int __$fb_structsizecheck[(sizeof( struct $N12SYSTEM_BUS_T8FBARRAY2IdEE ) == 96) ? 1 : -1];
 struct $N12SYSTEM_BUS_T8FBARRAY2IdEE DISTANCEFIELD$1;
 *(double**)&DISTANCEFIELD$1 = (double*)0ull;
 *(double**)((uint8*)&DISTANCEFIELD$1 + 8ll) = (double*)0ull;
 *(int64*)((uint8*)&DISTANCEFIELD$1 + 16ll) = 0ll;
 *(int64*)((uint8*)&DISTANCEFIELD$1 + 24ll) = 8ll;
 *(int64*)((uint8*)&DISTANCEFIELD$1 + 32ll) = 2ll;
 *(int64*)((uint8*)&DISTANCEFIELD$1 + 40ll) = 18ll;
 __builtin_memset( (void*)((uint8*)&DISTANCEFIELD$1 + 48ll), 0, 48ll );
 fb_ArrayRedimEx( (struct $7FBARRAYIvE*)&DISTANCEFIELD$1, 8ull, -1, 0, 2ull, 0ll, (int64)*(int32*)TEXTURE$1, 0ll, (int64)*(int32*)((uint8*)TEXTURE$1 + 4ll) );
 {
  int64 I$2;
  I$2 = 0ll;
  int64 TMP$2399$2;
  TMP$2399$2 = (int64)*(int32*)TEXTURE$1 + -1ll;
  goto label$2559;
  label$2562:;
  {
   {
    int64 J$4;
    J$4 = 0ll;
    int64 TMP$2400$4;
    TMP$2400$4 = (int64)*(int32*)((uint8*)TEXTURE$1 + 4ll) + -1ll;
    goto label$2563;
    label$2566:;
    {
     struct $7VECTOR2 TMP$2401$5;
     struct $7VECTOR2 TMP$2402$5;
     struct $7VECTOR2 TMP$2403$5;
     struct $7VECTOR2 COORDS$5;
     _ZN7VECTOR2C1Ed( &TMP$2402$5, CURSOR_RADIUS$1 );
     _ZN7VECTOR2C1Edd( &TMP$2401$5, (double)((int64)X$1 + J$4), (double)((int64)Y$1 + I$2) );
     struct $7VECTOR2* vr$25 = _ZmiR7VECTOR2S0_( &TMP$2403$5, &TMP$2401$5, &TMP$2402$5 );
     _ZN7VECTOR2C1ERS_( &COORDS$5, vr$25 );
     double vr$28 = _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR2( THIS$1, (struct $7VECTOR2*)&COORDS$5 );
     double vr$29 = _ZN12SYSTEM_BUS_T5K_MINEdd( THIS$1, vr$28, CURSOR_RADIUS$1 );
     *(double*)((((I$2 * *(int64*)((uint8*)&DISTANCEFIELD$1 + 72ll)) + J$4) << (3ll & 63ll)) + *(int64*)&DISTANCEFIELD$1) = vr$29;
    }
    label$2564:;
    J$4 = J$4 + 1ll;
    label$2563:;
    if( J$4 <= TMP$2400$4 ) goto label$2566;
    label$2565:;
   }
  }
  label$2560:;
  I$2 = I$2 + 1ll;
  label$2559:;
  if( I$2 <= TMP$2399$2 ) goto label$2562;
  label$2561:;
 }
 {
  if( (int64)VERSION$1 != 1ll ) goto label$2568;
  label$2569:;
  {
   _ZN12SYSTEM_BUS_T15CREATETEXTURE2DEiii( THIS$1, *(int32*)TEXTURE$1, *(int32*)((uint8*)TEXTURE$1 + 4ll), 4 );
   _ZN9SAMPLER2D4LOCKEv( TEXTURE$1 );
   {
    int64 I$4;
    I$4 = 0ll;
    int64 TMP$2404$4;
    TMP$2404$4 = (int64)*(int32*)TEXTURE$1 + -1ll;
    goto label$2570;
    label$2573:;
    {
     {
      int64 J$6;
      J$6 = 0ll;
      int64 TMP$2405$6;
      TMP$2405$6 = (int64)*(int32*)((uint8*)TEXTURE$1 + 4ll) + -1ll;
      goto label$2574;
      label$2577:;
      {
       if( *(double*)((((I$4 * *(int64*)((uint8*)&DISTANCEFIELD$1 + 72ll)) + J$6) << (3ll & 63ll)) + *(int64*)&DISTANCEFIELD$1) >= 0x0p+0 ) goto label$2579;
       {
        struct $7VECTOR3 TMP$2406$8;
        struct $7VECTOR3 TMP$2407$8;
        struct $7VECTOR3 TMP$2408$8;
        struct $7VECTOR3 CURSORPOS$8;
        _ZN7VECTOR3C1Eddd( &TMP$2406$8, (double)((int64)X$1 + J$6), (double)((int64)Y$1 + I$4), 0x0p+0 );
        struct $7VECTOR3* vr$58 = _ZplR7VECTOR3S0_( &TMP$2407$8, &TMP$2406$8, CAMERAPOS$1 );
        struct $7VECTOR3* vr$60 = _ZplR7VECTOR3S0_( &TMP$2408$8, vr$58, CAMERADIR$1 );
        _ZN7VECTOR3C1ERS_( &CURSORPOS$8, vr$60 );
        _ZN9SAMPLER2D10WRITEPIXELEllj( TEXTURE$1, (int64)X$1, (int64)Y$1, (uint32)((int64)__builtin_nearbyint( CURSOR_COLOR$1 )) );
       }
       label$2579:;
       label$2578:;
      }
      label$2575:;
      J$6 = J$6 + 1ll;
      label$2574:;
      if( J$6 <= TMP$2405$6 ) goto label$2577;
      label$2576:;
     }
    }
    label$2571:;
    I$4 = I$4 + 1ll;
    label$2570:;
    if( I$4 <= TMP$2404$4 ) goto label$2573;
    label$2572:;
   }
   _ZN9SAMPLER2D6UNLOCKEv( TEXTURE$1 );
   _ZN9SAMPLER2D7DESTROYEv( TEXTURE$1 );
  }
  goto label$2567;
  label$2568:;
  if( (int64)VERSION$1 != 2ll ) goto label$2580;
  label$2581:;
  {
   {
    int64 I$4;
    I$4 = 0ll;
    int64 TMP$2409$4;
    TMP$2409$4 = (int64)*(int32*)TEXTURE$1 + -1ll;
    goto label$2582;
    label$2585:;
    {
     {
      int64 J$6;
      J$6 = 0ll;
      int64 TMP$2410$6;
      TMP$2410$6 = (int64)*(int32*)((uint8*)TEXTURE$1 + 4ll) + -1ll;
      goto label$2586;
      label$2589:;
      {
       if( *(double*)((((I$4 * *(int64*)((uint8*)&DISTANCEFIELD$1 + 72ll)) + J$6) << (3ll & 63ll)) + *(int64*)&DISTANCEFIELD$1) >= 0x0p+0 ) goto label$2591;
       {
        struct $7VECTOR3 TMP$2411$8;
        struct $7VECTOR3 TMP$2412$8;
        struct $7VECTOR3 TMP$2413$8;
        struct $7VECTOR3 CURSORPOS$8;
        _ZN7VECTOR3C1Eddd( &TMP$2411$8, (double)((int64)X$1 + J$6), (double)((int64)Y$1 + I$4), 0x0p+0 );
        struct $7VECTOR3* vr$87 = _ZplR7VECTOR3S0_( &TMP$2412$8, &TMP$2411$8, CAMERAPOS$1 );
        struct $7VECTOR3* vr$89 = _ZplR7VECTOR3S0_( &TMP$2413$8, vr$87, CAMERADIR$1 );
        _ZN7VECTOR3C1ERS_( &CURSORPOS$8, vr$89 );
        *(double*)((int64)(double*)MEM64$ + 394888ll) = *(double*)((uint8*)&CURSORPOS$8 + 16ll);
        *(double*)((int64)(double*)MEM64$ + 394896ll) = *(double*)((uint8*)&CURSORPOS$8 + 24ll);
        *(double*)((int64)(double*)MEM64$ + 394824ll) = CURSOR_COLOR$1;
        {
         if( (int64)MODE$1 != 2ll ) goto label$2593;
         label$2594:;
         {
          _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.820Cp+15, 0x0p+0 );
         }
         goto label$2592;
         label$2593:;
         if( (int64)MODE$1 != 3ll ) goto label$2595;
         label$2596:;
         {
          _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.83DAp+15, 0x0p+0 );
         }
         goto label$2592;
         label$2595:;
         if( (int64)MODE$1 != 4ll ) goto label$2597;
         label$2598:;
         {
          _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.83D8p+15, 0x0p+0 );
         }
         goto label$2592;
         label$2597:;
         if( (int64)MODE$1 != 5ll ) goto label$2599;
         label$2600:;
         {
          _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.83DAp+15, 0x0p+0 );
         }
         label$2599:;
         label$2592:;
        }
       }
       label$2591:;
       label$2590:;
      }
      label$2587:;
      J$6 = J$6 + 1ll;
      label$2586:;
      if( J$6 <= TMP$2410$6 ) goto label$2589;
      label$2588:;
     }
    }
    label$2583:;
    I$4 = I$4 + 1ll;
    label$2582:;
    if( I$4 <= TMP$2409$4 ) goto label$2585;
    label$2584:;
   }
  }
  label$2580:;
  label$2567:;
 }
 __builtin_memcpy( &fb$result$1, TEXTURE$1, 24 );
 fb_ArrayErase( (struct $7FBARRAYIvE*)&DISTANCEFIELD$1 );
 goto label$2558;
 fb_ArrayErase( (struct $7FBARRAYIvE*)&DISTANCEFIELD$1 );
 label$2558:;
 return fb$result$1;
}

float _ZN12SYSTEM_BUS_T3MAXEff( struct $12SYSTEM_BUS_T* THIS$1, float A$1, float B$1 )
{
 float fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$2601:;
 if( B$1 <= A$1 ) goto label$2604;
 {
  fb$result$1 = B$1;
  goto label$2602;
 }
 goto label$2603;
 label$2604:;
 {
  fb$result$1 = A$1;
  goto label$2602;
  label$2603:;
 }
 label$2602:;
 return fb$result$1;
}

float _ZN12SYSTEM_BUS_T3MINEff( struct $12SYSTEM_BUS_T* THIS$1, float A$1, float B$1 )
{
 float fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$2605:;
 if( B$1 >= A$1 ) goto label$2608;
 {
  fb$result$1 = B$1;
  goto label$2606;
 }
 goto label$2607;
 label$2608:;
 {
  fb$result$1 = A$1;
  goto label$2606;
  label$2607:;
 }
 label$2606:;
 return fb$result$1;
}

float _ZN12SYSTEM_BUS_T5CLAMPEfff( struct $12SYSTEM_BUS_T* THIS$1, float X$1, float _MIN$1, float _MAX$1 )
{
 float fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$2609:;
 if( X$1 > _MIN$1 ) goto label$2612;
 {
  fb$result$1 = _MIN$1;
  goto label$2610;
 }
 goto label$2611;
 label$2612:;
 if( X$1 < _MAX$1 ) goto label$2613;
 {
  fb$result$1 = _MAX$1;
  goto label$2610;
 }
 goto label$2611;
 label$2613:;
 {
  fb$result$1 = X$1;
  goto label$2610;
 }
 label$2611:;
 label$2610:;
 return fb$result$1;
}

float _ZN12SYSTEM_BUS_T4LINTEfff( struct $12SYSTEM_BUS_T* THIS$1, float A$1, float B$1, float T$1 )
{
 float fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$2614:;
 fb$result$1 = ((0x1.p+0f - T$1) * A$1) + (T$1 * B$1);
 goto label$2615;
 label$2615:;
 return fb$result$1;
}

int32 _ZN12SYSTEM_BUS_T3MIXER7VECTOR3S1_f( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* C1$1, struct $7VECTOR3* C2$1, float _ALPHA$1 )
{
 int32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$2616:;
 fb$result$1 = (int32)(uint32)(((((int64)(uint32)(uint8)((int32)__builtin_nearbyint( (*(double*)((uint8*)C1$1 + 16ll) * (double)_ALPHA$1) + (*(double*)((uint8*)C2$1 + 16ll) * (double)(0x1.p+0f - _ALPHA$1)) )) << (16ll & 63ll)) | ((int64)(uint32)(uint8)((int32)__builtin_nearbyint( (*(double*)((uint8*)C1$1 + 24ll) * (double)_ALPHA$1) + (*(double*)((uint8*)C2$1 + 24ll) * (double)(0x1.p+0f - _ALPHA$1)) )) << (8ll & 63ll))) | (int64)(uint32)(uint8)((int32)__builtin_nearbyint( (*(double*)((uint8*)C1$1 + 32ll) * (double)_ALPHA$1) + (*(double*)((uint8*)C2$1 + 32ll) * (double)(0x1.p+0f - _ALPHA$1)) ))) | 4278190080ll);
 goto label$2617;
 label$2617:;
 return fb$result$1;
}

float _ZN12SYSTEM_BUS_T10SMOOTHSTEPEfff( struct $12SYSTEM_BUS_T* THIS$1, float _MIN$1, float _MAX$1, float VALUE$1 )
{
 float fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$2618:;
 float X$1;
 float vr$4 = _ZN12SYSTEM_BUS_T3MINEff( THIS$1, 0x1.p+0f, (float)((double)(VALUE$1 - _MIN$1) / (double)(_MAX$1 - _MIN$1)) );
 float vr$5 = _ZN12SYSTEM_BUS_T3MAXEff( THIS$1, 0x0p+0f, vr$4 );
 X$1 = vr$5;
 fb$result$1 = (X$1 * X$1) * (-(X$1 * 0x1.p+1f) + 0x1.8p+1f);
 goto label$2619;
 label$2619:;
 return fb$result$1;
}

int32 _ZN12SYSTEM_BUS_T10STRTOCOLORER8FBSTRING( struct $12SYSTEM_BUS_T* THIS$1, FBSTRING* S$1 )
{
 FBSTRING TMP$2415$1;
 FBSTRING TMP$2416$1;
 FBSTRING TMP$2417$1;
 int32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$2620:;
 int64 R$1;
 FBSTRING* vr$1 = fb_StrMid( (FBSTRING*)S$1, 2ll, 2ll );
 __builtin_memset( &TMP$2415$1, 0, 24ll );
 FBSTRING* vr$4 = fb_StrConcat( &TMP$2415$1, (void*)"&H", 3ll, (void*)vr$1, -1ll );
 double vr$5 = fb_VAL( (FBSTRING*)vr$4 );
 R$1 = ((int64)__builtin_nearbyint( vr$5 / 0x1.p+8 ));
 int64 G$1;
 FBSTRING* vr$8 = fb_StrMid( (FBSTRING*)S$1, 4ll, 2ll );
 __builtin_memset( &TMP$2416$1, 0, 24ll );
 FBSTRING* vr$11 = fb_StrConcat( &TMP$2416$1, (void*)"&H", 3ll, (void*)vr$8, -1ll );
 double vr$12 = fb_VAL( (FBSTRING*)vr$11 );
 G$1 = ((int64)__builtin_nearbyint( vr$12 / 0x1.p+8 ));
 int64 B$1;
 FBSTRING* vr$15 = fb_StrMid( (FBSTRING*)S$1, 6ll, 2ll );
 __builtin_memset( &TMP$2417$1, 0, 24ll );
 FBSTRING* vr$18 = fb_StrConcat( &TMP$2417$1, (void*)"&H", 3ll, (void*)vr$15, -1ll );
 double vr$19 = fb_VAL( (FBSTRING*)vr$18 );
 B$1 = ((int64)__builtin_nearbyint( vr$19 / 0x1.p+8 ));
 fb$result$1 = (int32)(uint32)(((((int64)(uint32)(uint8)R$1 << (16ll & 63ll)) | ((int64)(uint32)(uint8)G$1 << (8ll & 63ll))) | (int64)(uint32)(uint8)B$1) | 4278190080ll);
 goto label$2621;
 label$2621:;
 return fb$result$1;
}

FBSTRING* _ZN12SYSTEM_BUS_T4JOINER7FBARRAYI8FBSTRINGERS0_( struct $12SYSTEM_BUS_T* THIS$1, struct $7FBARRAYI8FBSTRINGE* ARR$1, FBSTRING* DELIMITER$1 )
{
 FBSTRING fb$result$1;
 __builtin_memset( &fb$result$1, 0, 24ll );
 label$2622:;
 FBSTRING RESULT$1;
 fb_StrInit( (void*)&RESULT$1, -1ll, (void*)"", 1ll, 0 );
 {
  int64 I$2;
  I$2 = 0ll;
  int64 TMP$2418$2;
  int64 vr$2 = fb_ArrayUBound( (struct $7FBARRAYIKvE*)ARR$1, 1ll );
  TMP$2418$2 = vr$2;
  goto label$2624;
  label$2627:;
  {
   FBSTRING TMP$2419$3;
   __builtin_memset( &TMP$2419$3, 0, 24ll );
   FBSTRING* vr$10 = fb_StrConcat( &TMP$2419$3, (void*)&RESULT$1, -1ll, (void*)((I$2 * 24ll) + *(int64*)ARR$1), -1ll );
   fb_StrAssign( (void*)&RESULT$1, -1ll, (void*)vr$10, -1ll, 0 );
   int64 vr$12 = fb_ArrayUBound( (struct $7FBARRAYIKvE*)ARR$1, 1ll );
   if( I$2 >= vr$12 ) goto label$2629;
   {
    FBSTRING TMP$2420$4;
    __builtin_memset( &TMP$2420$4, 0, 24ll );
    FBSTRING* vr$16 = fb_StrConcat( &TMP$2420$4, (void*)&RESULT$1, -1ll, (void*)DELIMITER$1, -1ll );
    fb_StrAssign( (void*)&RESULT$1, -1ll, (void*)vr$16, -1ll, 0 );
   }
   label$2629:;
   label$2628:;
  }
  label$2625:;
  I$2 = I$2 + 1ll;
  label$2624:;
  if( I$2 <= TMP$2418$2 ) goto label$2627;
  label$2626:;
 }
 fb_StrInit( (void*)&fb$result$1, -1ll, (void*)&RESULT$1, -1ll, 0 );
 fb_StrDelete( (FBSTRING*)&RESULT$1 );
 goto label$2623;
 fb_StrDelete( (FBSTRING*)&RESULT$1 );
 label$2623:;
 FBSTRING* vr$24 = fb_StrAllocTempResult( (FBSTRING*)&fb$result$1 );
 return vr$24;
}

FBSTRING* _ZN12SYSTEM_BUS_T19TOKENIZECOMMANDLINEER8FBSTRING( struct $12SYSTEM_BUS_T* THIS$1, FBSTRING* S$1 )
{
 FBSTRING TMP$2430$1;
 FBSTRING fb$result$1;
 __builtin_memset( &fb$result$1, 0, 24ll );
 label$2630:;
 struct $N12SYSTEM_BUS_T7FBARRAYI8FBSTRINGEE {
  FBSTRING* DATA;
  FBSTRING* PTR;
  int64 SIZE;
  int64 ELEMENT_LEN;
  int64 DIMENSIONS;
  int64 FLAGS;
  struct $16__FB_ARRAYDIMTB$ DIMTB[8];
 };
 extern int __$fb_structsizecheck[(sizeof( struct $N12SYSTEM_BUS_T7FBARRAYI8FBSTRINGEE ) == 240) ? 1 : -1];
 struct $N12SYSTEM_BUS_T7FBARRAYI8FBSTRINGEE ARGS$1;
 *(FBSTRING**)&ARGS$1 = (FBSTRING*)0ull;
 *(FBSTRING**)((uint8*)&ARGS$1 + 8ll) = (FBSTRING*)0ull;
 *(int64*)((uint8*)&ARGS$1 + 16ll) = 0ll;
 *(int64*)((uint8*)&ARGS$1 + 24ll) = 24ll;
 *(int64*)((uint8*)&ARGS$1 + 32ll) = 0ll;
 *(int64*)((uint8*)&ARGS$1 + 40ll) = 8ll;
 __builtin_memset( (void*)((uint8*)&ARGS$1 + 48ll), 0, 192ll );
 FBSTRING CURRENTTOKEN$1;
 fb_StrInit( (void*)&CURRENTTOKEN$1, -1ll, (void*)"", 1ll, 0 );
 FBSTRING QUOTECHAR$1;
 fb_StrInit( (void*)&QUOTECHAR$1, -1ll, (void*)"", 1ll, 0 );
 int8 ESCAPED$1;
 ESCAPED$1 = (int8)0;
 {
  int64 I$2;
  I$2 = 0ll;
  int64 TMP$2421$2;
  int64 vr$4 = fb_StrLen( (void*)S$1, -1ll );
  TMP$2421$2 = vr$4 + -1ll;
  goto label$2632;
  label$2635:;
  {
   if( (int64)ESCAPED$1 == 0ll ) goto label$2637;
   {
    FBSTRING TMP$2422$4;
    ESCAPED$1 = (int8)0;
    FBSTRING* vr$7 = fb_StrMid( (FBSTRING*)S$1, I$2, 1ll );
    __builtin_memset( &TMP$2422$4, 0, 24ll );
    FBSTRING* vr$11 = fb_StrConcat( &TMP$2422$4, (void*)&CURRENTTOKEN$1, -1ll, (void*)vr$7, -1ll );
    fb_StrAssign( (void*)&CURRENTTOKEN$1, -1ll, (void*)vr$11, -1ll, 0 );
   }
   goto label$2636;
   label$2637:;
   int32 vr$14 = fb_StrCompare( (void*)&QUOTECHAR$1, -1ll, (void*)"", 1ll );
   if( (int64)vr$14 == 0ll ) goto label$2638;
   {
    FBSTRING* vr$16 = fb_StrMid( (FBSTRING*)S$1, I$2, 1ll );
    int32 vr$17 = fb_StrCompare( (void*)vr$16, -1ll, (void*)"\x5C", 2ll );
    ESCAPED$1 = (int8)(int64)-((int64)vr$17 == 0ll);
    FBSTRING* vr$21 = fb_StrMid( (FBSTRING*)S$1, I$2, 1ll );
    int32 vr$23 = fb_StrCompare( (void*)&QUOTECHAR$1, -1ll, (void*)vr$21, -1ll );
    if( (int64)vr$23 != 0ll ) goto label$2640;
    {
     fb_StrAssign( (void*)&QUOTECHAR$1, -1ll, (void*)"", 1ll, 0 );
     int64 vr$27 = fb_ArrayUBound( (struct $7FBARRAYIKvE*)&ARGS$1, 1ll );
     fb_ArrayRedimPresvEx( (struct $7FBARRAYIvE*)&ARGS$1, 24ull, -1, -1, 1ull, 0ll, vr$27 + 1ll );
     int64 vr$32 = fb_ArrayUBound( (struct $7FBARRAYIKvE*)&ARGS$1, 1ll );
     fb_StrAssign( (void*)((vr$32 * 24ll) + *(int64*)&ARGS$1), -1ll, (void*)&CURRENTTOKEN$1, -1ll, 0 );
     fb_StrAssign( (void*)&CURRENTTOKEN$1, -1ll, (void*)"", 1ll, 0 );
    }
    goto label$2639;
    label$2640:;
    if( ~(int64)ESCAPED$1 == 0ll ) goto label$2641;
    {
     FBSTRING TMP$2424$5;
     FBSTRING* vr$39 = fb_StrMid( (FBSTRING*)S$1, I$2, 1ll );
     __builtin_memset( &TMP$2424$5, 0, 24ll );
     FBSTRING* vr$43 = fb_StrConcat( &TMP$2424$5, (void*)&CURRENTTOKEN$1, -1ll, (void*)vr$39, -1ll );
     fb_StrAssign( (void*)&CURRENTTOKEN$1, -1ll, (void*)vr$43, -1ll, 0 );
    }
    label$2641:;
    label$2639:;
   }
   goto label$2636;
   label$2638:;
   {
    FBSTRING* vr$45 = fb_StrMid( (FBSTRING*)S$1, I$2, 1ll );
    int32 vr$46 = fb_StrCompare( (void*)vr$45, -1ll, (void*)"\x5C", 2ll );
    ESCAPED$1 = (int8)(int64)-((int64)vr$46 == 0ll);
    FBSTRING* vr$50 = fb_StrMid( (FBSTRING*)S$1, I$2, 1ll );
    int32 vr$51 = fb_StrCompare( (void*)vr$50, -1ll, (void*)"\x5C", 2ll );
    if( (int64)vr$51 != 0ll ) goto label$2643;
    {
    }
    goto label$2642;
    label$2643:;
    FBSTRING* vr$53 = fb_StrMid( (FBSTRING*)S$1, I$2, 1ll );
    int32 vr$54 = fb_StrCompare( (void*)vr$53, -1ll, (void*)"\x0A", 2ll );
    if( (int64)vr$54 != 0ll ) goto label$2644;
    {
     int64 vr$57 = fb_ArrayUBound( (struct $7FBARRAYIKvE*)&ARGS$1, 1ll );
     fb_ArrayRedimPresvEx( (struct $7FBARRAYIvE*)&ARGS$1, 24ull, -1, -1, 1ull, 0ll, vr$57 + 1ll );
     int64 vr$62 = fb_ArrayUBound( (struct $7FBARRAYIKvE*)&ARGS$1, 1ll );
     fb_StrAssign( (void*)((vr$62 * 24ll) + *(int64*)&ARGS$1), -1ll, (void*)&CURRENTTOKEN$1, -1ll, 0 );
     fb_StrAssign( (void*)&CURRENTTOKEN$1, -1ll, (void*)"", 1ll, 0 );
    }
    goto label$2642;
    label$2644:;
    FBSTRING* vr$67 = fb_StrMid( (FBSTRING*)S$1, I$2, 1ll );
    int32 vr$68 = fb_StrCompare( (void*)vr$67, -1ll, (void*)" ", 2ll );
    FBSTRING* vr$71 = fb_StrMid( (FBSTRING*)S$1, I$2, 1ll );
    int32 vr$72 = fb_StrCompare( (void*)vr$71, -1ll, (void*)"\x09", 2ll );
    if( ((int64)-((int64)vr$68 == 0ll) | (int64)-((int64)vr$72 == 0ll)) == 0ll ) goto label$2645;
    {
     int32 vr$77 = fb_StrCompare( (void*)&CURRENTTOKEN$1, -1ll, (void*)"", 1ll );
     if( (int64)vr$77 == 0ll ) goto label$2647;
     {
      int64 vr$80 = fb_ArrayUBound( (struct $7FBARRAYIKvE*)&ARGS$1, 1ll );
      fb_ArrayRedimPresvEx( (struct $7FBARRAYIvE*)&ARGS$1, 24ull, -1, -1, 1ull, 0ll, vr$80 + 1ll );
      int64 vr$85 = fb_ArrayUBound( (struct $7FBARRAYIKvE*)&ARGS$1, 1ll );
      fb_StrAssign( (void*)((vr$85 * 24ll) + *(int64*)&ARGS$1), -1ll, (void*)&CURRENTTOKEN$1, -1ll, 0 );
      fb_StrAssign( (void*)&CURRENTTOKEN$1, -1ll, (void*)"", 1ll, 0 );
     }
     label$2647:;
     label$2646:;
    }
    goto label$2642;
    label$2645:;
    FBSTRING* vr$90 = fb_StrMid( (FBSTRING*)S$1, I$2, 1ll );
    int32 vr$91 = fb_StrCompare( (void*)vr$90, -1ll, (void*)"'", 2ll );
    FBSTRING* vr$94 = fb_StrMid( (FBSTRING*)S$1, I$2, 1ll );
    int32 vr$95 = fb_StrCompare( (void*)vr$94, -1ll, (void*)"\x22", 2ll );
    if( ((int64)-((int64)vr$91 == 0ll) | (int64)-((int64)vr$95 == 0ll)) == 0ll ) goto label$2648;
    {
     FBSTRING* vr$99 = fb_StrMid( (FBSTRING*)S$1, I$2, 1ll );
     fb_StrAssign( (void*)&QUOTECHAR$1, -1ll, (void*)vr$99, -1ll, 0 );
    }
    goto label$2642;
    label$2648:;
    {
     FBSTRING TMP$2429$5;
     FBSTRING* vr$101 = fb_StrMid( (FBSTRING*)S$1, I$2, 1ll );
     __builtin_memset( &TMP$2429$5, 0, 24ll );
     FBSTRING* vr$105 = fb_StrConcat( &TMP$2429$5, (void*)&CURRENTTOKEN$1, -1ll, (void*)vr$101, -1ll );
     fb_StrAssign( (void*)&CURRENTTOKEN$1, -1ll, (void*)vr$105, -1ll, 0 );
    }
    label$2642:;
   }
   label$2636:;
  }
  label$2633:;
  I$2 = I$2 + 1ll;
  label$2632:;
  if( I$2 <= TMP$2421$2 ) goto label$2635;
  label$2634:;
 }
 int32 vr$109 = fb_StrCompare( (void*)&CURRENTTOKEN$1, -1ll, (void*)"", 1ll );
 int32 vr$116 = fb_StrCompare( (void*)&QUOTECHAR$1, -1ll, (void*)"", 1ll );
 if( (((int64)-((int64)vr$109 != 0ll) & ~(int64)ESCAPED$1) & (int64)-((int64)vr$116 == 0ll)) == 0ll ) goto label$2650;
 {
  int64 vr$121 = fb_ArrayUBound( (struct $7FBARRAYIKvE*)&ARGS$1, 1ll );
  fb_ArrayRedimPresvEx( (struct $7FBARRAYIvE*)&ARGS$1, 24ull, -1, -1, 1ull, 0ll, vr$121 + 1ll );
  int64 vr$126 = fb_ArrayUBound( (struct $7FBARRAYIKvE*)&ARGS$1, 1ll );
  fb_StrAssign( (void*)((vr$126 * 24ll) + *(int64*)&ARGS$1), -1ll, (void*)&CURRENTTOKEN$1, -1ll, 0 );
 }
 label$2650:;
 label$2649:;
 __builtin_memset( &TMP$2430$1, 0, 24ll );
 fb_StrAssign( (void*)&TMP$2430$1, -1ll, (void*)" ", 2ll, 0 );
 FBSTRING* vr$134 = _ZN12SYSTEM_BUS_T4JOINER7FBARRAYI8FBSTRINGERS0_( THIS$1, (struct $7FBARRAYI8FBSTRINGE*)&ARGS$1, &TMP$2430$1 );
 fb_StrAssign( (void*)&fb$result$1, -1ll, (void*)vr$134, -1ll, 0 );
 fb_StrDelete( (FBSTRING*)&TMP$2430$1 );
 fb_StrDelete( (FBSTRING*)&QUOTECHAR$1 );
 fb_StrDelete( (FBSTRING*)&CURRENTTOKEN$1 );
 fb_ArrayStrErase( (struct $7FBARRAYIvE*)&ARGS$1 );
 label$2631:;
 FBSTRING* vr$141 = fb_StrAllocTempResult( (FBSTRING*)&fb$result$1 );
 return vr$141;
}

double _ZN12SYSTEM_BUS_T7POV_MINEdd( struct $12SYSTEM_BUS_T* THIS$1, double X$1, double Y$1 )
{
 double TMP$2431$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2667:;
 if( X$1 <= Y$1 ) goto label$2669;
 TMP$2431$1 = Y$1;
 goto label$2670;
 label$2669:;
 TMP$2431$1 = X$1;
 label$2670:;
 fb$result$1 = TMP$2431$1;
 goto label$2668;
 label$2668:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7POV_MAXEdd( struct $12SYSTEM_BUS_T* THIS$1, double X$1, double Y$1 )
{
 double TMP$2432$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2671:;
 if( X$1 >= Y$1 ) goto label$2673;
 TMP$2432$1 = Y$1;
 goto label$2674;
 label$2673:;
 TMP$2432$1 = X$1;
 label$2674:;
 fb$result$1 = TMP$2432$1;
 goto label$2672;
 label$2672:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8POV_MIN3Eddd( struct $12SYSTEM_BUS_T* THIS$1, double X$1, double Y$1, double Z$1 )
{
 double TMP$2433$1;
 double TMP$2434$1;
 double TMP$2435$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2675:;
 if( X$1 >= Y$1 ) goto label$2679;
 if( X$1 >= Z$1 ) goto label$2677;
 TMP$2433$1 = X$1;
 goto label$2681;
 label$2677:;
 TMP$2433$1 = Z$1;
 label$2681:;
 TMP$2435$1 = TMP$2433$1;
 goto label$2680;
 label$2679:;
 if( Y$1 >= Z$1 ) goto label$2678;
 TMP$2434$1 = Y$1;
 goto label$2682;
 label$2678:;
 TMP$2434$1 = Z$1;
 label$2682:;
 TMP$2435$1 = TMP$2434$1;
 label$2680:;
 fb$result$1 = TMP$2435$1;
 goto label$2676;
 label$2676:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8POV_MAX3Eddd( struct $12SYSTEM_BUS_T* THIS$1, double X$1, double Y$1, double Z$1 )
{
 double TMP$2436$1;
 double TMP$2437$1;
 double TMP$2438$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2683:;
 if( X$1 <= Y$1 ) goto label$2687;
 if( X$1 <= Z$1 ) goto label$2685;
 TMP$2436$1 = X$1;
 goto label$2689;
 label$2685:;
 TMP$2436$1 = Z$1;
 label$2689:;
 TMP$2438$1 = TMP$2436$1;
 goto label$2688;
 label$2687:;
 if( Y$1 <= Z$1 ) goto label$2686;
 TMP$2437$1 = Y$1;
 goto label$2690;
 label$2686:;
 TMP$2437$1 = Z$1;
 label$2690:;
 TMP$2438$1 = TMP$2437$1;
 label$2688:;
 fb$result$1 = TMP$2438$1;
 goto label$2684;
 label$2684:;
 return fb$result$1;
}

int32 _ZN12SYSTEM_BUS_T8POV_LABSEd( struct $12SYSTEM_BUS_T* THIS$1, double X$1 )
{
 double TMP$2439$1;
 int32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$2691:;
 if( X$1 >= 0x0p+0 ) goto label$2693;
 TMP$2439$1 = -X$1;
 goto label$2694;
 label$2693:;
 TMP$2439$1 = X$1;
 label$2694:;
 fb$result$1 = ((int32)__builtin_nearbyint( TMP$2439$1 ));
 goto label$2692;
 label$2692:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8POV_FABSEd( struct $12SYSTEM_BUS_T* THIS$1, double X$1 )
{
 double TMP$2440$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2695:;
 if( X$1 >= 0x0p+0 ) goto label$2697;
 TMP$2440$1 = -X$1;
 goto label$2698;
 label$2697:;
 TMP$2440$1 = X$1;
 label$2698:;
 fb$result$1 = TMP$2440$1;
 goto label$2696;
 label$2696:;
 return fb$result$1;
}

void _ZN12SYSTEM_BUS_T8MEM_INITEv( struct $12SYSTEM_BUS_T* THIS$1 )
{
 label$2699:;
 LEAK_MSG$ = 0ll;
 label$2700:;
}

void* _ZN12SYSTEM_BUS_T10POV_MALLOCEyPalS0_( struct $12SYSTEM_BUS_T* THIS$1, uint64 SIZE$1, int8* FILE$1, int64 _LINE$1, int8* MSG$1 )
{
 void* fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2701:;
 void* BLOCK$1;
 __builtin_memset( &BLOCK$1, 0, 8ll );
 uint64 TOTALSIZE$1;
 __builtin_memset( &TOTALSIZE$1, 0, 8ll );
 void* NODE$1;
 __builtin_memset( &NODE$1, 0, 8ll );
 TOTALSIZE$1 = SIZE$1;
 void* vr$4 = malloc( TOTALSIZE$1 );
 BLOCK$1 = vr$4;
 if( BLOCK$1 != (void*)0ull ) goto label$2704;
 {
 }
 label$2704:;
 label$2703:;
 fb$result$1 = BLOCK$1;
 goto label$2702;
 label$2702:;
 return fb$result$1;
}

void* _ZN12SYSTEM_BUS_T10POV_CALLOCEyyPalS0_( struct $12SYSTEM_BUS_T* THIS$1, uint64 NITEMS$1, uint64 SIZE$1, int8* FILE$1, int64 _LINE$1, int8* MSG$1 )
{
 void* fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2705:;
 void* BLOCK$1;
 __builtin_memset( &BLOCK$1, 0, 8ll );
 uint64 ACTSIZE$1;
 __builtin_memset( &ACTSIZE$1, 0, 8ll );
 uint64 TOTALSIZE$1;
 __builtin_memset( &TOTALSIZE$1, 0, 8ll );
 ACTSIZE$1 = NITEMS$1 * SIZE$1;
 TOTALSIZE$1 = ACTSIZE$1;
 void* vr$5 = malloc( TOTALSIZE$1 );
 BLOCK$1 = vr$5;
 if( BLOCK$1 != (void*)0ull ) goto label$2708;
 {
 }
 label$2708:;
 label$2707:;
 memset( BLOCK$1, 0, TOTALSIZE$1 );
 fb$result$1 = BLOCK$1;
 goto label$2706;
 label$2706:;
 return fb$result$1;
}

void _ZN12SYSTEM_BUS_T16ASSIGN_BBOX_VECTEPdS0_( struct $12SYSTEM_BUS_T* THIS$1, double* D$1, double* S$1 )
{
 label$2709:;
 double X$1;
 double vr$0 = _ZN7CPU65104PULLEv( *(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) );
 X$1 = vr$0;
 double Y$1;
 double vr$1 = _ZN7CPU65104PULLEv( *(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) );
 Y$1 = vr$1;
 double Z$1;
 double vr$2 = _ZN7CPU65104PULLEv( *(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) );
 Z$1 = vr$2;
 *(double*)((uint8*)D$1 + (((int64)__builtin_nearbyint( X$1 )) << (3ll & 63ll))) = *(double*)((uint8*)S$1 + (((int64)__builtin_nearbyint( X$1 )) << (3ll & 63ll)));
 *(double*)((uint8*)D$1 + (((int64)__builtin_nearbyint( Y$1 )) << (3ll & 63ll))) = *(double*)((uint8*)S$1 + (((int64)__builtin_nearbyint( Y$1 )) << (3ll & 63ll)));
 *(double*)((uint8*)D$1 + (((int64)__builtin_nearbyint( Z$1 )) << (3ll & 63ll))) = *(double*)((uint8*)S$1 + (((int64)__builtin_nearbyint( Z$1 )) << (3ll & 63ll)));
 label$2710:;
}

void _ZN12SYSTEM_BUS_T9MAKE_BBOXER7FBARRAYI19BOUNDING_BOX_STRUCTEdddddd( struct $12SYSTEM_BUS_T* THIS$1, struct $7FBARRAYI19BOUNDING_BOX_STRUCTE* BBOX$1, double LLX$1, double LLY$1, double LLZ$1, double LEX$1, double LEY$1, double LEZ$1 )
{
 label$2711:;
 double X$1;
 double vr$0 = _ZN7CPU65104PULLEv( *(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) );
 X$1 = vr$0;
 double Y$1;
 double vr$1 = _ZN7CPU65104PULLEv( *(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) );
 Y$1 = vr$1;
 double Z$1;
 double vr$2 = _ZN7CPU65104PULLEv( *(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) );
 Z$1 = vr$2;
 *(double*)((((int64)__builtin_nearbyint( X$1 )) << (4ll & 63ll)) + *(int64*)BBOX$1) = LLX$1;
 *(double*)((((int64)__builtin_nearbyint( Y$1 )) << (4ll & 63ll)) + *(int64*)BBOX$1) = LLY$1;
 *(double*)((((int64)__builtin_nearbyint( Z$1 )) << (4ll & 63ll)) + *(int64*)BBOX$1) = LLZ$1;
 *(double*)((uint8*)((((int64)__builtin_nearbyint( X$1 )) << (4ll & 63ll)) + *(int64*)BBOX$1) + 8ll) = LEX$1;
 *(double*)((uint8*)((((int64)__builtin_nearbyint( Y$1 )) << (4ll & 63ll)) + *(int64*)BBOX$1) + 8ll) = LEY$1;
 *(double*)((uint8*)((((int64)__builtin_nearbyint( Z$1 )) << (4ll & 63ll)) + *(int64*)BBOX$1) + 8ll) = LEZ$1;
 label$2712:;
}

void _ZN12SYSTEM_BUS_T22MAKE_BBOX_FROM_MIN_MAXER7FBARRAYI19BOUNDING_BOX_STRUCTEPdS3_( struct $12SYSTEM_BUS_T* THIS$1, struct $7FBARRAYI19BOUNDING_BOX_STRUCTE* BBOX$1, double* MINS$1, double* MAXS$1 )
{
 label$2713:;
 double X$1;
 double vr$0 = _ZN7CPU65104PULLEv( *(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) );
 X$1 = vr$0;
 double Y$1;
 double vr$1 = _ZN7CPU65104PULLEv( *(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) );
 Y$1 = vr$1;
 double Z$1;
 double vr$2 = _ZN7CPU65104PULLEv( *(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) );
 Z$1 = vr$2;
 *(double*)((((int64)__builtin_nearbyint( X$1 )) << (4ll & 63ll)) + *(int64*)BBOX$1) = *(double*)((uint8*)MINS$1 + (((int64)__builtin_nearbyint( X$1 )) << (3ll & 63ll)));
 *(double*)((((int64)__builtin_nearbyint( Y$1 )) << (4ll & 63ll)) + *(int64*)BBOX$1) = *(double*)((uint8*)MINS$1 + (((int64)__builtin_nearbyint( Y$1 )) << (3ll & 63ll)));
 *(double*)((((int64)__builtin_nearbyint( Z$1 )) << (4ll & 63ll)) + *(int64*)BBOX$1) = *(double*)((uint8*)MINS$1 + (((int64)__builtin_nearbyint( Z$1 )) << (3ll & 63ll)));
 *(double*)((uint8*)((((int64)__builtin_nearbyint( X$1 )) << (4ll & 63ll)) + *(int64*)BBOX$1) + 8ll) = *(double*)((uint8*)MAXS$1 + (((int64)__builtin_nearbyint( X$1 )) << (3ll & 63ll))) - *(double*)((uint8*)MINS$1 + (((int64)__builtin_nearbyint( X$1 )) << (3ll & 63ll)));
 *(double*)((uint8*)((((int64)__builtin_nearbyint( Y$1 )) << (4ll & 63ll)) + *(int64*)BBOX$1) + 8ll) = *(double*)((uint8*)MAXS$1 + (((int64)__builtin_nearbyint( Y$1 )) << (3ll & 63ll))) - *(double*)((uint8*)MINS$1 + (((int64)__builtin_nearbyint( Y$1 )) << (3ll & 63ll)));
 *(double*)((uint8*)((((int64)__builtin_nearbyint( Z$1 )) << (4ll & 63ll)) + *(int64*)BBOX$1) + 8ll) = *(double*)((uint8*)MAXS$1 + (((int64)__builtin_nearbyint( Z$1 )) << (3ll & 63ll))) - *(double*)((uint8*)MINS$1 + (((int64)__builtin_nearbyint( Z$1 )) << (3ll & 63ll)));
 label$2714:;
}

void _ZN12SYSTEM_BUS_T22MAKE_MIN_MAX_FROM_BBOXEPdS0_R7FBARRAYI19BOUNDING_BOX_STRUCTE( struct $12SYSTEM_BUS_T* THIS$1, double* MINS$1, double* MAXS$1, struct $7FBARRAYI19BOUNDING_BOX_STRUCTE* BBOX$1 )
{
 label$2715:;
 double X$1;
 double vr$0 = _ZN7CPU65104PULLEv( *(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) );
 X$1 = vr$0;
 double Y$1;
 double vr$1 = _ZN7CPU65104PULLEv( *(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) );
 Y$1 = vr$1;
 double Z$1;
 double vr$2 = _ZN7CPU65104PULLEv( *(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) );
 Z$1 = vr$2;
 *(double*)((uint8*)MINS$1 + (((int64)__builtin_nearbyint( X$1 )) << (3ll & 63ll))) = *(double*)((((int64)__builtin_nearbyint( X$1 )) << (4ll & 63ll)) + *(int64*)BBOX$1);
 *(double*)((uint8*)MINS$1 + (((int64)__builtin_nearbyint( Y$1 )) << (3ll & 63ll))) = *(double*)((((int64)__builtin_nearbyint( Y$1 )) << (4ll & 63ll)) + *(int64*)BBOX$1);
 *(double*)((uint8*)MINS$1 + (((int64)__builtin_nearbyint( Z$1 )) << (3ll & 63ll))) = *(double*)((((int64)__builtin_nearbyint( Z$1 )) << (4ll & 63ll)) + *(int64*)BBOX$1);
 *(double*)((uint8*)MAXS$1 + (((int64)__builtin_nearbyint( X$1 )) << (3ll & 63ll))) = *(double*)((uint8*)MINS$1 + (((int64)__builtin_nearbyint( X$1 )) << (3ll & 63ll))) + *(double*)((uint8*)((((int64)__builtin_nearbyint( X$1 )) << (4ll & 63ll)) + *(int64*)BBOX$1) + 8ll);
 *(double*)((uint8*)MAXS$1 + (((int64)__builtin_nearbyint( Y$1 )) << (3ll & 63ll))) = *(double*)((uint8*)MINS$1 + (((int64)__builtin_nearbyint( Y$1 )) << (3ll & 63ll))) + *(double*)((uint8*)((((int64)__builtin_nearbyint( Y$1 )) << (4ll & 63ll)) + *(int64*)BBOX$1) + 8ll);
 *(double*)((uint8*)MAXS$1 + (((int64)__builtin_nearbyint( Z$1 )) << (3ll & 63ll))) = *(double*)((uint8*)MINS$1 + (((int64)__builtin_nearbyint( Z$1 )) << (3ll & 63ll))) + *(double*)((uint8*)((((int64)__builtin_nearbyint( Z$1 )) << (4ll & 63ll)) + *(int64*)BBOX$1) + 8ll);
 label$2716:;
}

void _ZN12SYSTEM_BUS_T16ASSIGN_SNGL_VECTEPdS0_( struct $12SYSTEM_BUS_T* THIS$1, double* D$1, double* S$1 )
{
 label$2717:;
 double X$1;
 double vr$0 = _ZN7CPU65104PULLEv( *(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) );
 X$1 = vr$0;
 double Y$1;
 double vr$1 = _ZN7CPU65104PULLEv( *(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) );
 Y$1 = vr$1;
 double Z$1;
 double vr$2 = _ZN7CPU65104PULLEv( *(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) );
 Z$1 = vr$2;
 *(double*)((uint8*)D$1 + (((int64)__builtin_nearbyint( X$1 )) << (3ll & 63ll))) = *(double*)((uint8*)S$1 + (((int64)__builtin_nearbyint( X$1 )) << (3ll & 63ll)));
 *(double*)((uint8*)D$1 + (((int64)__builtin_nearbyint( Y$1 )) << (3ll & 63ll))) = *(double*)((uint8*)S$1 + (((int64)__builtin_nearbyint( Y$1 )) << (3ll & 63ll)));
 *(double*)((uint8*)D$1 + (((int64)__builtin_nearbyint( Z$1 )) << (3ll & 63ll))) = *(double*)((uint8*)S$1 + (((int64)__builtin_nearbyint( Z$1 )) << (3ll & 63ll)));
 label$2718:;
}

void _ZN12SYSTEM_BUS_T13DESTROY_FLOATEd( struct $12SYSTEM_BUS_T* THIS$1, double X$1 )
{
 label$2719:;
 label$2720:;
}

void _ZN12SYSTEM_BUS_T13ASSIGN_VECTOREPdS0_( struct $12SYSTEM_BUS_T* THIS$1, double* D$1, double* S$1 )
{
 label$2721:;
 memcpy( (void*)D$1, (void*)S$1, 8ull );
 label$2722:;
}

void _ZN12SYSTEM_BUS_T14DESTROY_VECTOREPd( struct $12SYSTEM_BUS_T* THIS$1, double* X$1 )
{
 label$2723:;
 label$2724:;
}

void _ZN12SYSTEM_BUS_T14ASSIGN_UV_VECTEPdS0_( struct $12SYSTEM_BUS_T* THIS$1, double* D$1, double* S$1 )
{
 label$2725:;
 memcpy( (void*)D$1, (void*)S$1, 8ull );
 label$2726:;
}

void _ZN12SYSTEM_BUS_T15DESTROY_UV_VECTEPd( struct $12SYSTEM_BUS_T* THIS$1, double* X$1 )
{
 label$2727:;
 label$2728:;
}

void _ZN12SYSTEM_BUS_T11DRIVER_LOCKEv( struct $12SYSTEM_BUS_T* THIS$1 )
{
 label$2729:;
 label$2731:;
 goto label$2732;
 {
  fb_GfxLock( );
 }
 goto label$2731;
 label$2732:;
 label$2730:;
}

void _ZN12SYSTEM_BUS_T13DRIVER_UNLOCKEv( struct $12SYSTEM_BUS_T* THIS$1 )
{
 label$2733:;
 label$2735:;
 goto label$2736;
 {
  fb_GfxUnlock( -1, -1 );
 }
 goto label$2735;
 label$2736:;
 label$2734:;
}

uint32 _ZN12SYSTEM_BUS_T10ROTATELEFTEjj( struct $12SYSTEM_BUS_T* THIS$1, uint32 WORD$1, uint32 SHIFT$1 )
{
 uint32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$2737:;
 fb$result$1 = (uint32)(((int64)WORD$1 << ((int64)SHIFT$1 & 63ll)) | ((int64)WORD$1 >> ((-(int64)SHIFT$1 + 32ll) & 63ll)));
 goto label$2738;
 label$2738:;
 return fb$result$1;
}

void _ZN12SYSTEM_BUS_T10ZEROMEMORYEPvx( struct $12SYSTEM_BUS_T* THIS$1, void* _PTR$1, int64 BYTES$1 )
{
 label$2739:;
 memset( _PTR$1, 0, (uint64)BYTES$1 );
 label$2740:;
}

int32 _ZN12SYSTEM_BUS_T10FUNC__CINPEii( struct $12SYSTEM_BUS_T* THIS$1, int32 TOGGLE$1, int32 PASSED$1 )
{
 int32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$2741:;
 fb$result$1 = 0;
 goto label$2742;
 label$2742:;
 return fb$result$1;
}

int32 _ZN12SYSTEM_BUS_T14FUNC__CAPSLOCKEv( struct $12SYSTEM_BUS_T* THIS$1 )
{
 int32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$2743:;
 fb$result$1 = 0;
 goto label$2744;
 label$2744:;
 return fb$result$1;
}

int32 _ZN12SYSTEM_BUS_T16FUNC__SCROLLLOCKEv( struct $12SYSTEM_BUS_T* THIS$1 )
{
 int32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$2745:;
 fb$result$1 = 0;
 goto label$2746;
 label$2746:;
 return fb$result$1;
}

int32 _ZN12SYSTEM_BUS_T13FUNC__NUMLOCKEv( struct $12SYSTEM_BUS_T* THIS$1 )
{
 int32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$2747:;
 fb$result$1 = 0;
 goto label$2748;
 label$2748:;
 return fb$result$1;
}

void _ZN12SYSTEM_BUS_T15TOGGLE_LOCK_KEYEi( struct $12SYSTEM_BUS_T* THIS$1, int32 KEY_CODE$1 )
{
 label$2749:;
 label$2750:;
}

void SUB__CAPSLOCK( int32 OPTIONS$1 )
{
 label$2751:;
 label$2752:;
}

void SUB__SCROLLLOCK( int32 OPTIONS$1 )
{
 label$2753:;
 label$2754:;
}

void _ZN12SYSTEM_BUS_T12SUB__NUMLOCKEi( struct $12SYSTEM_BUS_T* THIS$1, int32 OPTIONS$1 )
{
 label$2755:;
 label$2756:;
}

void _ZN12SYSTEM_BUS_T16SUB__CONSOLEFONTEP3QBSl( struct $12SYSTEM_BUS_T* THIS$1, struct $3QBS* FONTNAME$1, int64 FONTSIZE$1 )
{
 label$2757:;
 label$2758:;
}

void _ZN12SYSTEM_BUS_T19SUB__CONSOLE_CURSOREiii( struct $12SYSTEM_BUS_T* THIS$1, int32 VISIBLE$1, int32 CURSORSIZE$1, int32 PASSED$1 )
{
 label$2759:;
 label$2760:;
}

int32 _ZN12SYSTEM_BUS_T21FUNC__GETCONSOLEINPUTEv( struct $12SYSTEM_BUS_T* THIS$1 )
{
 int32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$2761:;
 fb$result$1 = 0;
 goto label$2762;
 label$2762:;
 return fb$result$1;
}

void _ZN12SYSTEM_BUS_T18UNLOCKVWATCHHANDLEEv( struct $12SYSTEM_BUS_T* THIS$1 )
{
 label$2763:;
 if( (int64)VWATCH$ <= 0ll ) goto label$2766;
 {
  VWATCH$ = -1;
 }
 label$2766:;
 label$2765:;
 label$2764:;
}

int32 _ZN12SYSTEM_BUS_T12VWATCHHANDLEEv( struct $12SYSTEM_BUS_T* THIS$1 )
{
 int32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$2767:;
 fb$result$1 = VWATCH$;
 goto label$2768;
 label$2768:;
 return fb$result$1;
}

void _ZN12SYSTEM_BUS_T10QBS_CONCATEj( struct $12SYSTEM_BUS_T* THIS$1, uint32 BYTESREQUIRED$1 )
{
 label$2769:;
 static int32 I$1;
 static uint8* DEST$1;
 static struct $3QBS* TQBS$1;
 DEST$1 = *(uint8**)QBS_DATA$;
 if( QBS_LIST_NEXTI$ == 0ull ) goto label$2772;
 {
  QBS_SP$ = 0ull;
  {
   I$1 = 0;
   int32 TMP$2441$3;
   TMP$2441$3 = (int32)QBS_LIST_NEXTI$;
   goto label$2773;
   label$2776:;
   {
    if( *(int64*)((uint8*)QBS_LIST$ + ((int64)I$1 << (3ll & 63ll))) == -1ll ) goto label$2778;
    {
     TQBS$1 = *(struct $3QBS**)((uint8*)QBS_LIST$ + ((int64)I$1 << (3ll & 63ll)));
     if( (*(int64*)TQBS$1 - (int64)DEST$1) <= 32ll ) goto label$2780;
     {
      if( (int64)*(int32*)((uint8*)TQBS$1 + 8ll) == 0ll ) goto label$2782;
      {
       memmove( (void*)DEST$1, *(void**)TQBS$1, (uint64)*(int32*)((uint8*)TQBS$1 + 8ll) );
      }
      label$2782:;
      label$2781:;
      *(uint8**)TQBS$1 = DEST$1;
     }
     label$2780:;
     label$2779:;
     DEST$1 = (uint8*)(*(uint8**)TQBS$1 + (int64)*(int32*)((uint8*)TQBS$1 + 8ll));
     QBS_SP$ = (uint64)((int64)DEST$1 - (int64)QBS_DATA$);
    }
    label$2778:;
    label$2777:;
   }
   label$2774:;
   I$1 = (int32)((int64)I$1 + 1ll);
   label$2773:;
   if( (int64)I$1 <= (int64)TMP$2441$3 ) goto label$2776;
   label$2775:;
  }
 }
 label$2772:;
 label$2771:;
 if( ((QBS_SP$ << (1ull & 63ll)) + (uint64)((int64)BYTESREQUIRED$1 + 32ll)) < QBS_DATA_SIZE$ ) goto label$2784;
 {
  static uint8* OLDBASE$2;
  OLDBASE$2 = QBS_DATA$;
  QBS_DATA_SIZE$ = (QBS_DATA_SIZE$ << (1ull & 63ll)) + (uint64)(int64)BYTESREQUIRED$1;
  void* vr$33 = realloc( (void*)QBS_DATA$, QBS_DATA_SIZE$ );
  QBS_DATA$ = (uint8*)vr$33;
  if( QBS_DATA$ != (uint8*)0ull ) goto label$2786;
  {
   label$2787:;
   void* vr$34 = fb_ErrorThrowEx( 512, 2202, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
   goto *vr$34;
   label$2788:;
  }
  label$2786:;
  label$2785:;
  {
   I$1 = 0;
   int32 TMP$2443$3;
   TMP$2443$3 = (int32)QBS_LIST_NEXTI$;
   goto label$2789;
   label$2792:;
   {
    if( *(int64*)((uint8*)QBS_LIST$ + ((int64)I$1 << (3ll & 63ll))) == -1ll ) goto label$2794;
    {
     TQBS$1 = *(struct $3QBS**)((uint8*)QBS_LIST$ + ((int64)I$1 << (3ll & 63ll)));
     *(uint8**)TQBS$1 = (uint8*)(QBS_DATA$ + (*(int64*)TQBS$1 - (int64)OLDBASE$2));
    }
    label$2794:;
    label$2793:;
   }
   label$2790:;
   I$1 = (int32)((int64)I$1 + 1ll);
   label$2789:;
   if( (int64)I$1 <= (int64)TMP$2443$3 ) goto label$2792;
   label$2791:;
  }
 }
 label$2784:;
 label$2783:;
 goto label$2770;
 label$2770:;
}

struct $3QBS* _ZN12SYSTEM_BUS_T8QBS_FREEEP3QBS( struct $12SYSTEM_BUS_T* THIS$1, struct $3QBS* _STR$1 )
{
 struct $3QBS* fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2795:;
 if( ~(int64)*(int32*)((uint8*)_STR$1 + 8ll) == 0ll ) goto label$2798;
 {
  fb$result$1 = _STR$1;
  goto label$2796;
 }
 label$2798:;
 label$2797:;
 struct $3QBS* TQBS$1;
 TQBS$1 = (struct $3QBS*)0ull;
 if( ((((int64)*(uint8*)((uint8*)_STR$1 + 32ll) & ~(int64)*(uint8*)((uint8*)_STR$1 + 40ll)) & ~(int64)*(uint8*)((uint8*)_STR$1 + 41ll)) & ~(int64)*(uint8*)((uint8*)_STR$1 + 12ll)) == 0ll ) goto label$2800;
 {
  TQBS$1 = _STR$1;
 }
 goto label$2799;
 label$2800:;
 {
  struct $3QBS* vr$19 = _ZN12SYSTEM_BUS_T7QBS_NEWEih( THIS$1, *(int32*)((uint8*)_STR$1 + 8ll), (uint8)1u );
  TQBS$1 = vr$19;
  memcpy( *(void**)TQBS$1, *(void**)_STR$1, (uint64)*(int32*)((uint8*)_STR$1 + 8ll) );
 }
 label$2799:;
 uint8* C$1;
 C$1 = *(uint8**)TQBS$1;
 int32 I$1;
 __builtin_memset( &I$1, 0, 4ll );
 {
  I$1 = 0;
  int32 TMP$2444$2;
  TMP$2444$2 = *(int32*)((uint8*)_STR$1 + 8ll);
  goto label$2801;
  label$2804:;
  {
   if( ((int64)-((int64)*C$1 >= 97ll) & (int64)-((int64)*C$1 <= 122ll)) == 0ll ) goto label$2806;
   {
    *C$1 = (uint8)((int64)*C$1 & 223ll);
   }
   label$2806:;
   label$2805:;
   C$1 = (uint8*)(C$1 + 1ll);
  }
  label$2802:;
  I$1 = (int32)((int64)I$1 + 1ll);
  label$2801:;
  if( (int64)I$1 <= (int64)TMP$2444$2 ) goto label$2804;
  label$2803:;
 }
 if( ~((int64)-(TQBS$1 == _STR$1) & (int64)*(uint8*)((uint8*)_STR$1 + 32ll)) == 0ll ) goto label$2808;
 {
  _ZN12SYSTEM_BUS_T8QBS_FREEEP3QBS( THIS$1, _STR$1 );
 }
 label$2808:;
 label$2807:;
 fb$result$1 = TQBS$1;
 goto label$2796;
 label$2796:;
 return fb$result$1;
}

struct $3QBS* _ZN12SYSTEM_BUS_T7QBS_SETEP3QBSS1_( struct $12SYSTEM_BUS_T* THIS$1, struct $3QBS* DESTSTR$1, struct $3QBS* SRCSTR$1 )
{
 struct $3QBS* fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2809:;
 int32 I$1;
 __builtin_memset( &I$1, 0, 4ll );
 struct $3QBS* TQBS$1;
 __builtin_memset( &TQBS$1, 0, 8ll );
 if( (int64)*(uint8*)((uint8*)DESTSTR$1 + 40ll) == 0ll ) goto label$2812;
 {
  if( (int64)*(int32*)((uint8*)SRCSTR$1 + 8ll) < (int64)*(int32*)((uint8*)DESTSTR$1 + 8ll) ) goto label$2814;
  {
   memcpy( *(void**)DESTSTR$1, *(void**)SRCSTR$1, (uint64)*(int32*)((uint8*)DESTSTR$1 + 8ll) );
  }
  goto label$2813;
  label$2814:;
  {
   memcpy( *(void**)DESTSTR$1, *(void**)SRCSTR$1, (uint64)*(int32*)((uint8*)SRCSTR$1 + 8ll) );
   memset( (void*)(*(uint8**)DESTSTR$1 + (int64)*(int32*)((uint8*)SRCSTR$1 + 8ll)), 32, (uint64)((int64)*(int32*)((uint8*)DESTSTR$1 + 8ll) - (int64)*(int32*)((uint8*)SRCSTR$1 + 8ll)) );
  }
  label$2813:;
  goto label$2815;
 }
 label$2812:;
 label$2811:;
 if( (int64)*(uint8*)((uint8*)SRCSTR$1 + 32ll) == 0ll ) goto label$2817;
 {
  if( (int64)*(uint8*)((uint8*)SRCSTR$1 + 40ll) != 0ll ) goto label$2819;
  {
   if( (int64)*(uint8*)((uint8*)SRCSTR$1 + 41ll) != 0ll ) goto label$2821;
   {
    if( (int64)*(uint8*)((uint8*)SRCSTR$1 + 12ll) != (int64)*(uint8*)((uint8*)DESTSTR$1 + 12ll) ) goto label$2823;
    {
     if( (int64)*(uint8*)((uint8*)DESTSTR$1 + 12ll) == 0ll ) goto label$2825;
     {
      *(int64*)((uint8*)QBS_MEM64_LIST$ + ((int64)*(uint32*)((uint8*)DESTSTR$1 + 28ll) << (3ll & 63ll))) = -1ll;
      *(int64*)((uint8*)QBS_MEM64_LIST$ + ((int64)*(uint32*)((uint8*)SRCSTR$1 + 28ll) << (3ll & 63ll))) = (int64)DESTSTR$1;
      *(uint32*)((uint8*)DESTSTR$1 + 28ll) = *(uint32*)((uint8*)SRCSTR$1 + 28ll);
     }
     goto label$2824;
     label$2825:;
     {
      *(int64*)((uint8*)QBS_LIST$ + ((int64)*(uint32*)((uint8*)DESTSTR$1 + 28ll) << (3ll & 63ll))) = -1ll;
      *(int64*)((uint8*)QBS_LIST$ + ((int64)*(uint32*)((uint8*)SRCSTR$1 + 28ll) << (3ll & 63ll))) = (int64)DESTSTR$1;
      *(uint32*)((uint8*)DESTSTR$1 + 28ll) = *(uint32*)((uint8*)SRCSTR$1 + 28ll);
     }
     label$2824:;
     *(int64*)((uint8*)QBS_TMP_LIST$ + ((int64)*(uint32*)((uint8*)SRCSTR$1 + 36ll) << (3ll & 63ll))) = -1ll;
     if( (int64)*(uint32*)((uint8*)SRCSTR$1 + 36ll) != ((int64)QBS_TMP_LIST_NEXTI$ + -1ll) ) goto label$2827;
     {
      QBS_TMP_LIST_NEXTI$ = (uint32)((int64)QBS_TMP_LIST_NEXTI$ + -1ll);
     }
     label$2827:;
     label$2826:;
     *(uint8**)DESTSTR$1 = *(uint8**)SRCSTR$1;
     *(int32*)((uint8*)DESTSTR$1 + 8ll) = *(int32*)((uint8*)SRCSTR$1 + 8ll);
     _ZN12SYSTEM_BUS_T19QBS_FREE_DESCRIPTOREP3QBS( THIS$1, SRCSTR$1 );
     if( *(uint16**)((uint8*)DESTSTR$1 + 16ll) == (uint16*)0ull ) goto label$2829;
     {
      *(*(uint16**)((uint8*)DESTSTR$1 + 16ll)) = (uint16)*(int32*)((uint8*)DESTSTR$1 + 8ll);
      *(uint16*)((uint8*)*(uint16**)((uint8*)DESTSTR$1 + 16ll) + 2ll) = *(uint16*)*(int64*)((uint8*)DESTSTR$1 - (DBLOCK$ << (3ll & 63ll)));
     }
     label$2829:;
     label$2828:;
     fb$result$1 = DESTSTR$1;
     goto label$2810;
    }
    label$2823:;
    label$2822:;
   }
   label$2821:;
   label$2820:;
  }
  label$2819:;
  label$2818:;
 }
 label$2817:;
 label$2816:;
 if( (int64)*(int32*)((uint8*)SRCSTR$1 + 8ll) > (int64)*(int32*)((uint8*)DESTSTR$1 + 8ll) ) goto label$2831;
 {
  memcpy( *(void**)DESTSTR$1, *(void**)SRCSTR$1, (uint64)*(int32*)((uint8*)SRCSTR$1 + 8ll) );
  *(int32*)((uint8*)DESTSTR$1 + 8ll) = *(int32*)((uint8*)SRCSTR$1 + 8ll);
  goto label$2815;
 }
 label$2831:;
 label$2830:;
 if( (int64)*(uint8*)((uint8*)DESTSTR$1 + 12ll) == 0ll ) goto label$2833;
 {
  if( (uint64)(int64)*(uint32*)((uint8*)DESTSTR$1 + 28ll) != (QBS_MEM64_LIST_NEXTI$ + 18446744073709551615ull) ) goto label$2835;
  {
   if( *(int64*)((uint8*)DESTSTR$1 + ((int64)*(int32*)((uint8*)SRCSTR$1 + 8ll) << (3ll & 63ll))) > (DBLOCK$ + (int64)MEM64_SP$) ) goto label$2837;
   {
    memcpy( *(void**)DESTSTR$1, *(void**)SRCSTR$1, (uint64)*(int32*)((uint8*)SRCSTR$1 + 8ll) );
    *(int32*)((uint8*)DESTSTR$1 + 8ll) = *(int32*)((uint8*)SRCSTR$1 + 8ll);
    QBS_MEM64_SP$ = (uint32)(*(int64*)DESTSTR$1 + *(int64*)((int64)*(int32*)((uint8*)DESTSTR$1 + 8ll) - DBLOCK$));
    goto label$2815;
   }
   label$2837:;
   label$2836:;
   goto label$2838;
  }
  label$2835:;
  label$2834:;
  I$1 = (int32)((int64)*(uint32*)((uint8*)DESTSTR$1 + 28ll) + 1ll);
  label$2839:;
  if( *(int64*)((uint8*)QBS_MEM64_LIST$ + ((int64)I$1 << (3ll & 63ll))) == -1ll ) goto label$2841;
  {
   TQBS$1 = *(struct $3QBS**)((uint8*)QBS_MEM64_LIST$ + ((int64)I$1 << (3ll & 63ll)));
   if( TQBS$1 != SRCSTR$1 ) goto label$2843;
   {
    if( (int64)*(uint8*)((uint8*)SRCSTR$1 + 32ll) != 1ll ) goto label$2845;
    {
     goto label$2846;
    }
    label$2845:;
    label$2844:;
   }
   label$2843:;
   label$2842:;
   if( (uint8*)(*(uint8**)DESTSTR$1 + (int64)*(int32*)((uint8*)SRCSTR$1 + 8ll)) <= *(uint8**)TQBS$1 ) goto label$2848;
   {
    goto label$2838;
   }
   label$2848:;
   label$2847:;
   memcpy( *(void**)DESTSTR$1, *(void**)SRCSTR$1, (uint64)*(int32*)((uint8*)SRCSTR$1 + 8ll) );
   *(int32*)((uint8*)DESTSTR$1 + 8ll) = *(int32*)((uint8*)SRCSTR$1 + 8ll);
   goto label$2815;
  }
  label$2841:;
  label$2840:;
  label$2846:;
  I$1 = (int32)((int64)I$1 + 1ll);
  if( (uint64)(int64)I$1 == QBS_MEM64_LIST_NEXTI$ ) goto label$2850;
  {
   goto label$2839;
  }
  label$2850:;
  label$2849:;
  QBS_MEM64_LIST_NEXTI$ = (uint64)((int64)*(uint32*)((uint8*)DESTSTR$1 + 28ll) + 1ll);
  if( *(int64*)((uint8*)DESTSTR$1 + ((int64)*(int32*)((uint8*)SRCSTR$1 + 8ll) << (3ll & 63ll))) > (DBLOCK$ + (int64)MEM64_SP$) ) goto label$2852;
  {
   memmove( *(void**)DESTSTR$1, *(void**)SRCSTR$1, (uint64)*(int32*)((uint8*)SRCSTR$1 + 8ll) );
   *(int32*)((uint8*)DESTSTR$1 + 8ll) = *(int32*)((uint8*)SRCSTR$1 + 8ll);
   QBS_MEM64_SP$ = (uint32)(*(int64*)DESTSTR$1 + *(int64*)((uint8*)((uint8*)DESTSTR$1 + 8ll) - (DBLOCK$ << (2ll & 63ll))));
   goto label$2815;
  }
  label$2852:;
  label$2851:;
  label$2838:;
  *(int64*)((uint8*)QBS_MEM64_LIST$ + ((int64)*(uint32*)((uint8*)DESTSTR$1 + 28ll) << (3ll & 63ll))) = -1ll;
  if( ((int64)QBS_MEM64_SP$ + (int64)*(int32*)((uint8*)SRCSTR$1 + 8ll)) <= (int64)MEM64_SP$ ) goto label$2854;
  {
   _ZN12SYSTEM_BUS_T16QBS_CONCAT_MEM64Ej( THIS$1, *(uint32*)((uint8*)SRCSTR$1 + 8ll) );
  }
  label$2854:;
  label$2853:;
  if( QBS_MEM64_LIST_NEXTI$ <= QBS_MEM64_LIST_LASTI$ ) goto label$2856;
  {
   _ZN12SYSTEM_BUS_T21QBS_MEM64_CONCAT_LISTEv( THIS$1 );
  }
  label$2856:;
  label$2855:;
  *(uint32*)((uint8*)DESTSTR$1 + 28ll) = (uint32)QBS_MEM64_LIST_NEXTI$;
  *(int64*)((uint8*)QBS_MEM64_LIST$ + ((int64)QBS_MEM64_LIST_NEXTI$ << (3ll & 63ll))) = (int64)DESTSTR$1;
  QBS_MEM64_LIST_NEXTI$ = QBS_MEM64_LIST_NEXTI$ + 1ull;
  *(uint8**)DESTSTR$1 = *(uint8**)(DBLOCK$ + (int64)QBS_MEM64_SP$);
  *(int32*)((uint8*)DESTSTR$1 + 8ll) = *(int32*)((uint8*)SRCSTR$1 + 8ll);
  QBS_MEM64_SP$ = (uint32)((int64)QBS_MEM64_SP$ + (int64)*(int32*)((uint8*)DESTSTR$1 + 8ll));
  memcpy( *(void**)DESTSTR$1, *(void**)SRCSTR$1, (uint64)*(int32*)((uint8*)SRCSTR$1 + 8ll) );
  goto label$2815;
 }
 label$2833:;
 label$2832:;
 if( (uint64)(int64)*(uint32*)((uint8*)DESTSTR$1 + 28ll) != (QBS_LIST_NEXTI$ + 18446744073709551615ull) ) goto label$2858;
 {
  if( *(int64*)((uint8*)DESTSTR$1 + ((int64)*(int32*)((uint8*)SRCSTR$1 + 8ll) << (3ll & 63ll))) > *(int64*)((uint8*)&QBS_DATA$ + ((int64)QBS_DATA_SIZE$ << (3ll & 63ll))) ) goto label$2860;
  {
   memcpy( *(void**)DESTSTR$1, *(void**)SRCSTR$1, (uint64)*(int32*)((uint8*)SRCSTR$1 + 8ll) );
   *(int32*)((uint8*)DESTSTR$1 + 8ll) = *(int32*)((uint8*)SRCSTR$1 + 8ll);
   QBS_SP$ = (uint64)((*(int64*)DESTSTR$1 + *(int64*)((uint8*)DESTSTR$1 + 8ll)) - (int64)QBS_DATA$);
   goto label$2815;
  }
  label$2860:;
  label$2859:;
  goto label$2861;
 }
 label$2858:;
 label$2857:;
 I$1 = (int32)((int64)*(uint32*)((uint8*)DESTSTR$1 + 28ll) + 1ll);
 label$2862:;
 if( *(int64*)((uint8*)QBS_LIST$ + ((int64)I$1 << (3ll & 63ll))) == -1ll ) goto label$2864;
 {
  TQBS$1 = *(struct $3QBS**)((uint8*)QBS_LIST$ + ((int64)I$1 << (3ll & 63ll)));
  if( TQBS$1 != SRCSTR$1 ) goto label$2866;
  {
   if( (int64)*(uint8*)((uint8*)SRCSTR$1 + 32ll) != 1ll ) goto label$2868;
   {
    goto label$2869;
   }
   label$2868:;
   label$2867:;
  }
  label$2866:;
  label$2865:;
  if( (uint8*)(*(uint8**)DESTSTR$1 + (int64)*(int32*)((uint8*)SRCSTR$1 + 8ll)) <= *(uint8**)TQBS$1 ) goto label$2871;
  {
   goto label$2861;
  }
  label$2871:;
  label$2870:;
  memcpy( *(void**)DESTSTR$1, *(void**)SRCSTR$1, (uint64)*(int32*)((uint8*)SRCSTR$1 + 8ll) );
  *(int32*)((uint8*)DESTSTR$1 + 8ll) = *(int32*)((uint8*)SRCSTR$1 + 8ll);
  goto label$2815;
 }
 label$2864:;
 label$2863:;
 label$2869:;
 I$1 = (int32)((int64)I$1 + 1ll);
 if( (uint64)(int64)I$1 == QBS_LIST_NEXTI$ ) goto label$2873;
 {
  goto label$2862;
 }
 label$2873:;
 label$2872:;
 QBS_LIST_NEXTI$ = (uint64)((int64)*(uint32*)((uint8*)DESTSTR$1 + 28ll) + 1ll);
 if( *(int64*)((uint8*)DESTSTR$1 + ((int64)*(int32*)((uint8*)SRCSTR$1 + 8ll) << (3ll & 63ll))) > *(int64*)((uint8*)&QBS_DATA$ + ((int64)QBS_DATA_SIZE$ << (3ll & 63ll))) ) goto label$2875;
 {
  memmove( *(void**)DESTSTR$1, *(void**)SRCSTR$1, (uint64)*(int32*)((uint8*)SRCSTR$1 + 8ll) );
  *(int32*)((uint8*)DESTSTR$1 + 8ll) = *(int32*)((uint8*)SRCSTR$1 + 8ll);
  QBS_SP$ = (uint64)((*(int64*)DESTSTR$1 + *(int64*)((uint8*)DESTSTR$1 + 8ll)) - (int64)QBS_DATA$);
  goto label$2815;
 }
 label$2875:;
 label$2874:;
 label$2861:;
 *(int64*)((uint8*)QBS_LIST$ + ((int64)*(uint32*)((uint8*)DESTSTR$1 + 28ll) << (3ll & 63ll))) = -1ll;
 if( (QBS_SP$ + (uint64)(int64)*(int32*)((uint8*)SRCSTR$1 + 8ll)) <= QBS_DATA_SIZE$ ) goto label$2877;
 {
  _ZN12SYSTEM_BUS_T10QBS_CONCATEj( THIS$1, *(uint32*)((uint8*)SRCSTR$1 + 8ll) );
 }
 label$2877:;
 label$2876:;
 if( QBS_LIST_NEXTI$ <= QBS_LIST_LASTI$ ) goto label$2879;
 {
  _ZN12SYSTEM_BUS_T15QBS_CONCAT_LISTEv( THIS$1 );
 }
 label$2879:;
 label$2878:;
 *(uint32*)((uint8*)DESTSTR$1 + 28ll) = (uint32)QBS_LIST_NEXTI$;
 *(int64*)((uint8*)QBS_LIST$ + ((int64)QBS_LIST_NEXTI$ << (3ll & 63ll))) = (int64)DESTSTR$1;
 QBS_LIST_NEXTI$ = QBS_LIST_NEXTI$ + 1ull;
 *(uint8**)DESTSTR$1 = (uint8*)(QBS_DATA$ + (int64)QBS_SP$);
 *(int32*)((uint8*)DESTSTR$1 + 8ll) = *(int32*)((uint8*)SRCSTR$1 + 8ll);
 QBS_SP$ = QBS_SP$ + (uint64)(int64)*(int32*)((uint8*)DESTSTR$1 + 8ll);
 memcpy( *(void**)DESTSTR$1, *(void**)SRCSTR$1, (uint64)*(int32*)((uint8*)SRCSTR$1 + 8ll) );
 label$2815:;
 if( (int64)*(uint8*)((uint8*)SRCSTR$1 + 32ll) == 0ll ) goto label$2881;
 {
  _ZN12SYSTEM_BUS_T8QBS_FREEEP3QBS( THIS$1, SRCSTR$1 );
 }
 label$2881:;
 label$2880:;
 if( *(uint16**)((uint8*)DESTSTR$1 + 16ll) == (uint16*)0ull ) goto label$2883;
 {
  *(*(uint16**)((uint8*)DESTSTR$1 + 16ll)) = (uint16)*(int32*)((uint8*)DESTSTR$1 + 8ll);
  *(uint16*)((uint8*)*(uint16**)((uint8*)DESTSTR$1 + 16ll) + 2ll) = *(uint16*)((uint8*)DESTSTR$1 - (DBLOCK$ << (3ll & 63ll)));
 }
 label$2883:;
 label$2882:;
 fb$result$1 = DESTSTR$1;
 goto label$2810;
 label$2810:;
 return fb$result$1;
}

void _ZN12SYSTEM_BUS_T19QBS_TMP_CONCAT_LISTEv( struct $12SYSTEM_BUS_T* THIS$1 )
{
 label$2884:;
 if( (double)(int64)QBS_TMP_LIST_NEXTI$ < ((double)QBS_TMP_LIST_LASTI$ / 0x1.p+1) ) goto label$2887;
 {
  QBS_TMP_LIST_LASTI$ = QBS_TMP_LIST_LASTI$ << (1ull & 63ll);
  void* vr$7 = realloc( (void*)QBS_TMP_LIST$, (QBS_TMP_LIST_LASTI$ << (3ull & 63ll)) + 8ull );
  QBS_TMP_LIST$ = (int64*)vr$7;
  if( QBS_TMP_LIST$ != (int64*)0ull ) goto label$2889;
  {
   label$2890:;
   void* vr$8 = fb_ErrorThrowEx( 511, 2442, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
   goto *vr$8;
   label$2891:;
  }
  label$2889:;
  label$2888:;
 }
 label$2887:;
 label$2886:;
 goto label$2885;
 label$2885:;
}

void _ZN12SYSTEM_BUS_T15QBS_CONCAT_LISTEv( struct $12SYSTEM_BUS_T* THIS$1 )
{
 label$2892:;
 uint32 I$1;
 __builtin_memset( &I$1, 0, 4ll );
 uint32 D$1;
 __builtin_memset( &D$1, 0, 4ll );
 struct $3QBS* TQBS$1;
 __builtin_memset( &TQBS$1, 0, 8ll );
 D$1 = 0u;
 {
  I$1 = 0u;
  uint32 TMP$2445$2;
  TMP$2445$2 = (uint32)QBS_LIST_NEXTI$;
  goto label$2894;
  label$2897:;
  {
   if( *(int64*)((uint8*)QBS_LIST$ + ((int64)I$1 << (3ll & 63ll))) == -1ll ) goto label$2899;
   {
    if( (int64)I$1 == (int64)D$1 ) goto label$2901;
    {
     TQBS$1 = *(struct $3QBS**)((uint8*)QBS_LIST$ + ((int64)I$1 << (3ll & 63ll)));
     *(uint32*)((uint8*)TQBS$1 + 28ll) = D$1;
     *(int64*)((uint8*)QBS_LIST$ + ((int64)D$1 << (3ll & 63ll))) = (int64)TQBS$1;
    }
    label$2901:;
    label$2900:;
    D$1 = (uint32)((int64)D$1 + 1ll);
   }
   label$2899:;
   label$2898:;
  }
  label$2895:;
  I$1 = (uint32)((int64)I$1 + 1ll);
  label$2894:;
  if( (int64)I$1 <= (int64)TMP$2445$2 ) goto label$2897;
  label$2896:;
 }
 QBS_LIST_NEXTI$ = (uint64)D$1;
 if( (double)QBS_LIST_NEXTI$ < ((double)QBS_LIST_LASTI$ / 0x1.p+1) ) goto label$2903;
 {
  QBS_LIST_LASTI$ = QBS_LIST_LASTI$ << (1ull & 63ll);
  void* vr$31 = realloc( (void*)QBS_LIST$, (QBS_LIST_LASTI$ << (3ull & 63ll)) + 8ull );
  QBS_LIST$ = *(int64**)vr$31;
  if( QBS_LIST$ != (int64*)0ull ) goto label$2905;
  {
   label$2906:;
   void* vr$32 = fb_ErrorThrowEx( 510, 2469, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
   goto *vr$32;
   label$2907:;
  }
  label$2905:;
  label$2904:;
 }
 label$2903:;
 label$2902:;
 goto label$2893;
 label$2893:;
}

struct $3QBS* _ZN12SYSTEM_BUS_T7QBS_NEWEih( struct $12SYSTEM_BUS_T* THIS$1, int32 SIZE$1, uint8 TMP$1 )
{
 struct $3QBS* fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2908:;
 static struct $3QBS* NEWSTR$1;
 if( ((QBS_SP$ + (uint64)(int64)SIZE$1) + 32ull) <= QBS_DATA_SIZE$ ) goto label$2911;
 {
  _ZN12SYSTEM_BUS_T10QBS_CONCATEj( THIS$1, (uint32)((int64)SIZE$1 + 32ll) );
 }
 label$2911:;
 label$2910:;
 struct $3QBS* vr$7 = _ZN12SYSTEM_BUS_T18QBS_NEW_DESCRIPTOREv( THIS$1 );
 NEWSTR$1 = vr$7;
 *(int32*)((uint8*)NEWSTR$1 + 8ll) = SIZE$1;
 *(uint8**)NEWSTR$1 = (uint8*)(QBS_DATA$ + (int64)QBS_SP$);
 QBS_SP$ = QBS_SP$ + (uint64)((int64)SIZE$1 + 32ll);
 if( QBS_LIST_NEXTI$ <= QBS_LIST_LASTI$ ) goto label$2913;
 {
  _ZN12SYSTEM_BUS_T15QBS_CONCAT_LISTEv( THIS$1 );
 }
 label$2913:;
 label$2912:;
 *(uint32*)((uint8*)NEWSTR$1 + 28ll) = (uint32)QBS_LIST_NEXTI$;
 *(int64*)((uint8*)QBS_LIST$ + ((int64)*(uint32*)((uint8*)NEWSTR$1 + 28ll) << (3ll & 63ll))) = (int64)NEWSTR$1;
 QBS_LIST_NEXTI$ = QBS_LIST_NEXTI$ + 1ull;
 if( (int64)TMP$1 == 0ll ) goto label$2915;
 {
  if( (uint64)(int64)QBS_TMP_LIST_NEXTI$ <= QBS_TMP_LIST_LASTI$ ) goto label$2917;
  {
   _ZN12SYSTEM_BUS_T19QBS_TMP_CONCAT_LISTEv( THIS$1 );
  }
  label$2917:;
  label$2916:;
  *(uint32*)((uint8*)NEWSTR$1 + 36ll) = QBS_TMP_LIST_NEXTI$;
  *(int64*)((uint8*)QBS_TMP_LIST$ + ((int64)*(uint32*)((uint8*)NEWSTR$1 + 36ll) << (3ll & 63ll))) = (int64)NEWSTR$1;
  QBS_TMP_LIST_NEXTI$ = (uint32)((int64)QBS_TMP_LIST_NEXTI$ + 1ll);
  *(uint8*)((uint8*)NEWSTR$1 + 32ll) = (uint8)1u;
 }
 label$2915:;
 label$2914:;
 fb$result$1 = NEWSTR$1;
 goto label$2909;
 label$2909:;
 return fb$result$1;
}

int32 _ZN12SYSTEM_BUS_T9QBS_EQUALEP3QBSS1_( struct $12SYSTEM_BUS_T* THIS$1, struct $3QBS* STR1$1, struct $3QBS* STR2$1 )
{
 int32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$2918:;
 if( (int64)*(int32*)((uint8*)STR1$1 + 8ll) == (int64)*(int32*)((uint8*)STR2$1 + 8ll) ) goto label$2921;
 {
  fb$result$1 = 0;
  goto label$2919;
 }
 label$2921:;
 label$2920:;
 int32 vr$9 = memcmp( *(void**)STR1$1, *(void**)STR2$1, (uint64)*(int32*)((uint8*)STR1$1 + 8ll) );
 if( (int64)vr$9 != 0ll ) goto label$2923;
 {
  fb$result$1 = -1;
  goto label$2919;
 }
 label$2923:;
 label$2922:;
 fb$result$1 = 0;
 goto label$2919;
 label$2919:;
 return fb$result$1;
}

double* _ZN12SYSTEM_BUS_T19MEM64_STATIC_MALLOCEj( struct $12SYSTEM_BUS_T* THIS$1, uint32 SIZE$1 )
{
 double* fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2924:;
 SIZE$1 = (uint32)((int64)SIZE$1 + 7ll);
 SIZE$1 = (uint32)((int64)SIZE$1 - ((int64)SIZE$1 & 7ll));
 if( (double*)(int64)-(MEM_STATIC_POINTER$ == (double*)((uint8*)MEM_STATIC_POINTER$ + ((int64)SIZE$1 << (3ll & 63ll)))) >= MEM_STATIC_LIMIT$ ) goto label$2927;
 {
  fb$result$1 = (double*)((uint8*)MEM_STATIC_POINTER$ - ((int64)SIZE$1 << (3ll & 63ll)));
  goto label$2925;
 }
 label$2927:;
 label$2926:;
 MEM_STATIC_SIZE$ = (MEM_STATIC_SIZE$ << (1ll & 63ll)) + (uint64)(int64)SIZE$1;
 void* vr$19 = malloc( MEM_STATIC_SIZE$ );
 MEM_STATIC$ = (double*)vr$19;
 if( MEM_STATIC$ == (double*)0ull ) goto label$2929;
 {
  MEM_STATIC_POINTER$ = (double*)((uint8*)MEM_STATIC$ + ((int64)SIZE$1 << (3ll & 63ll)));
  MEM_STATIC_LIMIT$ = (double*)((uint8*)MEM_STATIC$ + ((int64)MEM_STATIC_SIZE$ << (3ll & 63ll)));
  fb$result$1 = (double*)((uint8*)MEM_STATIC_POINTER$ - ((int64)SIZE$1 << (3ll & 63ll)));
  goto label$2925;
 }
 goto label$2928;
 label$2929:;
 {
  label$2930:;
  void* vr$28 = fb_ErrorThrowEx( 504, 2714, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
  goto *vr$28;
  label$2931:;
 }
 label$2928:;
 label$2925:;
 return fb$result$1;
}

void _ZN12SYSTEM_BUS_T20MEM64_STATIC_RESTOREEPd( struct $12SYSTEM_BUS_T* THIS$1, double* RESTORE_POINT$1 )
{
 label$2932:;
 if( ((int64)-(RESTORE_POINT$1 >= MEM_STATIC$) & (int64)-(RESTORE_POINT$1 <= MEM_STATIC_LIMIT$)) == 0ll ) goto label$2935;
 {
  MEM_STATIC_POINTER$ = RESTORE_POINT$1;
 }
 goto label$2934;
 label$2935:;
 {
  MEM_STATIC_POINTER$ = MEM_STATIC$;
 }
 label$2934:;
 label$2933:;
}

double* _ZN12SYSTEM_BUS_T20MEM64_DYNAMIC_MALLOCEj( struct $12SYSTEM_BUS_T* THIS$1, uint32 SIZE$1 )
{
 double* fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2936:;
 static int64 I$1;
 static double* TOP$1;
 static struct $23MEM64_DYNAMIC_LINK_TYPE* LINK$1;
 static struct $23MEM64_DYNAMIC_LINK_TYPE* NEWLINK$1;
 static struct $23MEM64_DYNAMIC_LINK_TYPE* PREV_LINK$1;
 if( (int64)SIZE$1 <= 65536ll ) goto label$2939;
 {
  label$2940:;
  void* vr$2 = fb_ErrorThrowEx( 505, 2744, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
  goto *vr$2;
  label$2941:;
 }
 label$2939:;
 label$2938:;
 if( (int64)SIZE$1 == 0ll ) goto label$2943;
 {
  if( ((int64)SIZE$1 & 15ll) == 0ll ) goto label$2945;
  {
   SIZE$1 = (uint32)(((int64)SIZE$1 - ((int64)SIZE$1 & 15ll)) + 16ll);
  }
  label$2945:;
  label$2944:;
 }
 goto label$2942;
 label$2943:;
 {
  fb$result$1 = (double*)((uint8*)MEM64$ + 5242880ll);
  goto label$2937;
 }
 label$2942:;
 TOP$1 = (double*)((uint8*)MEM64$ + 5242880ll);
 PREV_LINK$1 = (struct $23MEM64_DYNAMIC_LINK_TYPE*)0ull;
 if( LINK$1 != MEM64_DYNAMIC_LINK_FIRST$ ) goto label$2947;
 {
  label$2948:;
  if( (((int64)TOP$1 - *(int64*)((uint8*)LINK$1 + 8ll)) / 8ll) < (int64)SIZE$1 ) goto label$2950;
  {
   goto label$2951;
  }
  label$2950:;
  label$2949:;
  PREV_LINK$1 = LINK$1;
  TOP$1 = *(double**)LINK$1;
  if( LINK$1 != *(struct $23MEM64_DYNAMIC_LINK_TYPE**)((uint8*)LINK$1 + 32ll) ) goto label$2953;
  {
   goto label$2948;
  }
  label$2953:;
  label$2952:;
 }
 label$2947:;
 label$2946:;
 if( (((int64)TOP$1 - (int64)MEM64_STATIC_POINTER$) / 8ll) >= (int64)SIZE$1 ) goto label$2955;
 {
  label$2956:;
  void* vr$21 = fb_ErrorThrowEx( 506, 2773, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
  goto *vr$21;
  label$2957:;
 }
 label$2955:;
 label$2954:;
 MEM64_DYNAMIC_BASE$ = (double*)((uint8*)TOP$1 - ((int64)SIZE$1 << (3ll & 63ll)));
 label$2951:;
 if( MEM64_DYNAMIC_FREE_LINK$ == 0ll ) goto label$2959;
 {
  MEM64_DYNAMIC_FREE_LINK$ = MEM64_DYNAMIC_FREE_LINK$ + -1ll;
  I$1 = *(int64*)((int64)(uint64*)MEM64_DYNAMIC_FREE_LIST$ + (MEM64_DYNAMIC_FREE_LINK$ << (3ll & 63ll)));
 }
 goto label$2958;
 label$2959:;
 {
  MEM64_DYNAMIC_NEXT_LINK$ = MEM64_DYNAMIC_NEXT_LINK$ + 1ll;
  I$1 = MEM64_DYNAMIC_NEXT_LINK$;
  if( I$1 < 147136ll ) goto label$2961;
  {
   label$2962:;
   void* vr$28 = fb_ErrorThrowEx( 507, 2785, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
   goto *vr$28;
   label$2963:;
  }
  label$2961:;
  label$2960:;
 }
 label$2958:;
 NEWLINK$1 = *(struct $23MEM64_DYNAMIC_LINK_TYPE**)((int64)(struct $23MEM64_DYNAMIC_LINK_TYPE*)MEM64_DYNAMIC_LINK$ + (I$1 * 40ll));
 *(uint64*)((uint8*)NEWLINK$1 + 24ll) = (uint64)I$1;
 *(double**)NEWLINK$1 = (double*)((uint8*)TOP$1 - ((int64)SIZE$1 << (3ll & 63ll)));
 *(uint64*)((uint8*)NEWLINK$1 + 16ll) = (uint64)SIZE$1;
 *(double**)((uint8*)NEWLINK$1 + 8ll) = TOP$1;
 if( PREV_LINK$1 == (struct $23MEM64_DYNAMIC_LINK_TYPE*)0ull ) goto label$2965;
 {
  *(struct $23MEM64_DYNAMIC_LINK_TYPE**)((uint8*)NEWLINK$1 + 32ll) = *(struct $23MEM64_DYNAMIC_LINK_TYPE**)((uint8*)PREV_LINK$1 + 32ll);
  *(struct $23MEM64_DYNAMIC_LINK_TYPE**)((uint8*)PREV_LINK$1 + 32ll) = NEWLINK$1;
 }
 goto label$2964;
 label$2965:;
 {
  *(struct $23MEM64_DYNAMIC_LINK_TYPE**)((uint8*)NEWLINK$1 + 32ll) = MEM64_DYNAMIC_LINK_FIRST$;
  MEM64_DYNAMIC_LINK_FIRST$ = NEWLINK$1;
 }
 label$2964:;
 fb$result$1 = *(double**)NEWLINK$1;
 goto label$2937;
 label$2937:;
 return fb$result$1;
}

void _ZN12SYSTEM_BUS_T18MEM64_DYNAMIC_FREEEPd( struct $12SYSTEM_BUS_T* THIS$1, double* BLOCK$1 )
{
 label$2966:;
 static struct $23MEM64_DYNAMIC_LINK_TYPE* LINK$1;
 static struct $23MEM64_DYNAMIC_LINK_TYPE* PREV_LINK$1;
 if( MEM64_DYNAMIC_LINK_FIRST$ == (struct $23MEM64_DYNAMIC_LINK_TYPE*)0ull ) goto label$2969;
 {
  if( BLOCK$1 == (double*)0ull ) goto label$2971;
  {
   if( BLOCK$1 != (double*)((uint8*)MEM64$ + 5242880ll) ) goto label$2973;
   {
    goto label$2967;
   }
   label$2973:;
   label$2972:;
  }
  goto label$2970;
  label$2971:;
  {
   goto label$2967;
  }
  label$2970:;
 }
 goto label$2968;
 label$2969:;
 {
  goto label$2967;
 }
 label$2968:;
 PREV_LINK$1 = (struct $23MEM64_DYNAMIC_LINK_TYPE*)0ull;
 LINK$1 = MEM64_DYNAMIC_LINK_FIRST$;
 label$2974:;
 if( *(double**)LINK$1 != BLOCK$1 ) goto label$2976;
 {
  if( PREV_LINK$1 == (struct $23MEM64_DYNAMIC_LINK_TYPE*)0ull ) goto label$2978;
  {
   *(struct $23MEM64_DYNAMIC_LINK_TYPE**)((uint8*)PREV_LINK$1 + 32ll) = *(struct $23MEM64_DYNAMIC_LINK_TYPE**)((uint8*)LINK$1 + 32ll);
  }
  goto label$2977;
  label$2978:;
  {
   MEM64_DYNAMIC_LINK_FIRST$ = *(struct $23MEM64_DYNAMIC_LINK_TYPE**)((uint8*)LINK$1 + 32ll);
  }
  label$2977:;
  MEM64_DYNAMIC_FREE_LINK$ = MEM64_DYNAMIC_FREE_LINK$ + 1ll;
  *(uint64*)((int64)(uint64*)MEM64_DYNAMIC_FREE_LIST$ + (MEM64_DYNAMIC_FREE_LINK$ << (3ll & 63ll))) = *(uint64*)((uint8*)LINK$1 + 24ll);
  goto label$2967;
 }
 label$2976:;
 label$2975:;
 PREV_LINK$1 = LINK$1;
 if( LINK$1 != *(struct $23MEM64_DYNAMIC_LINK_TYPE**)((uint8*)LINK$1 + 32ll) ) goto label$2980;
 {
  goto label$2974;
 }
 label$2980:;
 label$2979:;
 goto label$2967;
 label$2967:;
}

void _ZN12SYSTEM_BUS_T10SUB_DEFSEGEii( struct $12SYSTEM_BUS_T* THIS$1, int32 SEGMENT$1, int32 PASSED$1 )
{
 label$2981:;
 if( (int64)NEW_ERROR$ == 0ll ) goto label$2984;
 {
  goto label$2982;
 }
 label$2984:;
 label$2983:;
 if( (int64)PASSED$1 == 0ll ) goto label$2986;
 {
  if( ((int64)-((int64)SEGMENT$1 < -65536ll) | (int64)-((int64)SEGMENT$1 > 65535ll)) == 0ll ) goto label$2988;
  {
   label$2989:;
   void* vr$7 = fb_ErrorThrowEx( 6, 2849, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
   goto *vr$7;
   label$2990:;
  }
  goto label$2987;
  label$2988:;
  {
   DEFSEG$ = (double*)((uint8*)MEM64$ + ((int64)(uint16)SEGMENT$1 << (7ll & 63ll)));
  }
  label$2987:;
 }
 goto label$2985;
 label$2986:;
 {
  DEFSEG$ = (double*)((uint8*)MEM64$ + 10240ll);
  goto label$2982;
 }
 label$2985:;
 label$2982:;
}

int32 _ZN12SYSTEM_BUS_T9FUNC_PEEKEi( struct $12SYSTEM_BUS_T* THIS$1, int32 OFFSET$1 )
{
 int32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$2991:;
 if( ((int64)-((int64)OFFSET$1 < -65536ll) | (int64)-((int64)OFFSET$1 > 65535ll)) == 0ll ) goto label$2994;
 {
  label$2995:;
  void* vr$6 = fb_ErrorThrowEx( 6, 2861, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
  goto *vr$6;
  label$2996:;
  fb$result$1 = 0;
  goto label$2992;
 }
 label$2994:;
 label$2993:;
 fb$result$1 = ((int32)__builtin_nearbyint( *(double*)((uint8*)DEFSEG$ + ((int64)(uint16)OFFSET$1 << (3ll & 63ll))) ));
 goto label$2992;
 label$2992:;
 return fb$result$1;
}

void _ZN12SYSTEM_BUS_T8SUB_POKEEii( struct $12SYSTEM_BUS_T* THIS$1, int32 OFFSET$1, int32 VALUE$1 )
{
 label$2997:;
 if( (int64)NEW_ERROR$ == 0ll ) goto label$3000;
 {
  goto label$2998;
 }
 label$3000:;
 label$2999:;
 if( ((int64)-((int64)OFFSET$1 < -65536ll) | (int64)-((int64)OFFSET$1 > 65535ll)) == 0ll ) goto label$3002;
 {
  label$3003:;
  void* vr$6 = fb_ErrorThrowEx( 6, 2873, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
  goto *vr$6;
  label$3004:;
  goto label$2998;
 }
 label$3002:;
 label$3001:;
 *(double*)((uint8*)DEFSEG$ + ((int64)(uint16)OFFSET$1 << (3ll & 63ll))) = (double)VALUE$1;
 label$2998:;
}

void _ZN12SYSTEM_BUS_T18MORE_RETURN_POINTSEv( struct $12SYSTEM_BUS_T* THIS$1 )
{
 label$3005:;
 if( (int64)RETURN_POINTS$ <= 2147483647ll ) goto label$3008;
 {
  label$3009:;
  void* vr$1 = fb_ErrorThrowEx( 256, 2881, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
  goto *vr$1;
  label$3010:;
 }
 label$3008:;
 label$3007:;
 RETURN_POINTS$ = (uint32)((int64)RETURN_POINTS$ << (1ll & 63ll));
 void* vr$7 = realloc( (void*)RETURN_POINT$, (uint64)((int64)RETURN_POINTS$ << (2ll & 63ll)) );
 RETURN_POINT$ = *(uint32**)vr$7;
 if( RETURN_POINT$ != (uint32*)0ull ) goto label$3012;
 {
  label$3013:;
  void* vr$8 = fb_ErrorThrowEx( 256, 2886, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
  goto *vr$8;
  label$3014:;
 }
 label$3012:;
 label$3011:;
 label$3006:;
}

struct $3QBS* _ZN12SYSTEM_BUS_T18QBS_NEW_DESCRIPTOREv( struct $12SYSTEM_BUS_T* THIS$1 )
{
 struct $3QBS* fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3015:;
 if( QBS_MALLOC_FREED_NUM$ == 0ull ) goto label$3018;
 {
  QBS_MALLOC_FREED_NUM$ = QBS_MALLOC_FREED_NUM$ + 18446744073709551615ull;
  void* vr$4 = memset( (void*)((uint8*)QBS_MALLOC_FREED$ + ((int64)QBS_MALLOC_FREED_NUM$ << (3ll & 63ll))), 0, 56ull );
  fb$result$1 = (struct $3QBS*)vr$4;
  goto label$3016;
 }
 label$3018:;
 label$3017:;
 if( QBS_MALLOC_NEXT$ != 65536ull ) goto label$3020;
 {
  void* vr$5 = calloc( 3670016ull, 1ull );
  QBS_MALLOC$ = (struct $3QBS*)vr$5;
  QBS_MALLOC_NEXT$ = 0ull;
 }
 label$3020:;
 label$3019:;
 QBS_MALLOC_NEXT$ = QBS_MALLOC_NEXT$ + 1ull;
 fb$result$1 = (struct $3QBS*)((uint8*)QBS_MALLOC$ + ((int64)QBS_MALLOC_NEXT$ * 56ll));
 goto label$3016;
 label$3016:;
 return fb$result$1;
}

void _ZN12SYSTEM_BUS_T19QBS_FREE_DESCRIPTOREP3QBS( struct $12SYSTEM_BUS_T* THIS$1, struct $3QBS* STR_DATA$1 )
{
 label$3021:;
 if( QBS_MALLOC_FREED_NUM$ != QBS_MALLOC_FREED_SIZE$ ) goto label$3024;
 {
  QBS_MALLOC_FREED_SIZE$ = QBS_MALLOC_FREED_SIZE$ << (1ull & 63ll);
  void* vr$2 = realloc( (void*)QBS_MALLOC_FREED$, QBS_MALLOC_FREED_SIZE$ << (3ull & 63ll) );
  QBS_MALLOC_FREED$ = (int64*)vr$2;
  if( QBS_MALLOC_FREED$ == (int64*)0ull ) goto label$3026;
  {
  }
  goto label$3025;
  label$3026:;
  {
   label$3027:;
   void* vr$3 = fb_ErrorThrowEx( 508, 2925, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
   goto *vr$3;
   label$3028:;
  }
  label$3025:;
 }
 label$3024:;
 label$3023:;
 *(int64*)((uint8*)QBS_MALLOC_FREED$ + ((int64)QBS_MALLOC_FREED_NUM$ << (3ll & 63ll))) = (int64)STR_DATA$1;
 QBS_MALLOC_FREED_NUM$ = QBS_MALLOC_FREED_NUM$ + 1ull;
 goto label$3022;
 label$3022:;
}

int32 _ZN12SYSTEM_BUS_T16GFS_FILENO_VALIDEi( struct $12SYSTEM_BUS_T* THIS$1, int32 F$1 )
{
 int32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$3029:;
 if( (int64)F$1 > 0ll ) goto label$3032;
 {
  fb$result$1 = -2;
  goto label$3030;
 }
 label$3032:;
 label$3031:;
 if( (int64)F$1 > (int64)GFS_FILENO_N$ ) goto label$3034;
 {
  if( (int64)*(int32*)((uint8*)GFS_FILENO$ + ((int64)F$1 << (2ll & 63ll))) != -1ll ) goto label$3036;
  {
   fb$result$1 = 0;
   goto label$3030;
  }
  goto label$3035;
  label$3036:;
  {
   fb$result$1 = 1;
   goto label$3030;
  }
  label$3035:;
 }
 label$3034:;
 label$3033:;
 void* vr$11 = realloc( (void*)GFS_FILENO$, (uint64)(((int64)F$1 << (2ll & 63ll)) + 4ll) );
 GFS_FILENO$ = (int32*)vr$11;
 memset( (void*)((uint8*)((uint8*)GFS_FILENO$ + ((int64)GFS_FILENO_N$ << (2ll & 63ll))) + 4ll), -1, (uint64)(((int64)F$1 - (int64)GFS_FILENO_N$) << (2ll & 63ll)) );
 GFS_FILENO_N$ = F$1;
 fb$result$1 = 0;
 goto label$3030;
 label$3030:;
 return fb$result$1;
}

void _ZN12SYSTEM_BUS_T9FIELD_NEWEi( struct $12SYSTEM_BUS_T* THIS$1, int32 FILENO$1 )
{
 label$3037:;
 FIELD_FAILED$ = 1;
 if( (int64)NEW_ERROR$ == 0ll ) goto label$3040;
 {
  goto label$3038;
 }
 label$3040:;
 label$3039:;
 static int32 I$1;
 static struct $15GFS_FILE_STRUCT* GFS$1;
 I$1 = FILENO$1;
 if( (int64)I$1 >= 0ll ) goto label$3042;
 {
  label$3043:;
  void* vr$2 = fb_ErrorThrowEx( 54, 2987, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
  goto *vr$2;
  label$3044:;
  goto label$3038;
 }
 label$3042:;
 label$3041:;
 int32 vr$3 = _ZN12SYSTEM_BUS_T16GFS_FILENO_VALIDEi( THIS$1, I$1 );
 if( (int64)vr$3 == 1ll ) goto label$3046;
 {
  label$3047:;
  void* vr$5 = fb_ErrorThrowEx( 52, 2991, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
  goto *vr$5;
  label$3048:;
  goto label$3038;
 }
 label$3046:;
 label$3045:;
 I$1 = *(int32*)((uint8*)GFS_FILENO$ + ((int64)I$1 << (2ll & 63ll)));
 GFS$1 = (struct $15GFS_FILE_STRUCT*)((uint8*)GFS_FILE$ + ((int64)I$1 * 136ll));
 if( (int64)*(uint8*)((uint8*)GFS$1 + 32ll) == 1ll ) goto label$3050;
 {
  label$3051:;
  void* vr$14 = fb_ErrorThrowEx( 54, 2997, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
  goto *vr$14;
  label$3052:;
  goto label$3038;
 }
 label$3050:;
 label$3049:;
 FIELD_FILENO$ = FILENO$1;
 FIELD_TOTALSIZE$ = 0;
 FIELD_MAXSIZE$ = (int32)*(int64*)((uint8*)GFS$1 + 40ll);
 FIELD_FAILED$ = 0;
 label$3038:;
}

void _ZN12SYSTEM_BUS_T12FIELD_UPDATEEi( struct $12SYSTEM_BUS_T* THIS$1, int32 FILENO$1 )
{
 label$3053:;
 static int32 I$1;
 static struct $15GFS_FILE_STRUCT* GFS$1;
 I$1 = FILENO$1;
 if( (int64)I$1 >= 0ll ) goto label$3056;
 {
  label$3057:;
  void* vr$1 = fb_ErrorThrowEx( 7701, 3014, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
  goto *vr$1;
  label$3058:;
  goto label$3054;
 }
 label$3056:;
 label$3055:;
 int32 vr$2 = _ZN12SYSTEM_BUS_T16GFS_FILENO_VALIDEi( THIS$1, I$1 );
 if( (int64)vr$2 != 1ll ) goto label$3060;
 {
  label$3061:;
  void* vr$4 = fb_ErrorThrowEx( 7702, 3018, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
  goto *vr$4;
  label$3062:;
  goto label$3054;
 }
 label$3060:;
 label$3059:;
 I$1 = *(int32*)((uint8*)GFS_FILENO$ + ((int64)I$1 << (2ll & 63ll)));
 GFS$1 = (struct $15GFS_FILE_STRUCT*)((uint8*)GFS_FILE$ + ((int64)I$1 * 136ll));
 if( (int64)*(uint8*)((uint8*)GFS$1 + 32ll) == 1ll ) goto label$3064;
 {
  label$3065:;
  void* vr$13 = fb_ErrorThrowEx( 7703, 3024, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
  goto *vr$13;
  label$3066:;
  goto label$3054;
 }
 label$3064:;
 label$3063:;
 static struct $3QBS* _STR$1;
 {
  I$1 = 0;
  int32 TMP$2446$2;
  TMP$2446$2 = *(int32*)((uint8*)GFS$1 + 64ll);
  goto label$3067;
  label$3070:;
  {
   _STR$1 = *(struct $3QBS**)((uint8*)*(struct $3QBS***)((uint8*)GFS$1 + 56ll) + ((int64)I$1 << (3ll & 63ll)));
   if( _STR$1 != (struct $3QBS*)0ull ) goto label$3072;
   {
    label$3073:;
    void* vr$19 = fb_ErrorThrowEx( 7704, 3032, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
    goto *vr$19;
    label$3074:;
    goto label$3054;
   }
   label$3072:;
   label$3071:;
   if( (int64)*(int32*)((uint8*)_STR$1 + 8ll) == *(int64*)((uint8*)*(struct $9QBS_FIELD**)((uint8*)_STR$1 + 48ll) + 16ll) ) goto label$3076;
   {
    if( (int64)*(int32*)((uint8*)_STR$1 + 8ll) <= *(int64*)((uint8*)*(struct $9QBS_FIELD**)((uint8*)_STR$1 + 48ll) + 16ll) ) goto label$3078;
    {
     *(int32*)((uint8*)_STR$1 + 8ll) = (int32)*(int64*)((uint8*)*(struct $9QBS_FIELD**)((uint8*)_STR$1 + 48ll) + 16ll);
    }
    goto label$3077;
    label$3078:;
    {
     struct $3QBS* vr$35 = _ZN12SYSTEM_BUS_T7QBS_NEWEih( THIS$1, (int32)*(int64*)((uint8*)*(struct $9QBS_FIELD**)((uint8*)_STR$1 + 48ll) + 16ll), (uint8)1u );
     _ZN12SYSTEM_BUS_T7QBS_SETEP3QBSS1_( THIS$1, _STR$1, vr$35 );
    }
    label$3077:;
   }
   label$3076:;
   label$3075:;
   memmove( *(void**)_STR$1, (void*)(*(uint8**)((uint8*)GFS$1 + 48ll) + *(int64*)((uint8*)*(struct $9QBS_FIELD**)((uint8*)_STR$1 + 48ll) + 24ll)), *(uint64*)((uint8*)*(struct $9QBS_FIELD**)((uint8*)_STR$1 + 48ll) + 16ll) );
  }
  label$3068:;
  I$1 = (int32)((int64)I$1 + 1ll);
  label$3067:;
  if( (int64)I$1 <= (int64)TMP$2446$2 ) goto label$3070;
  label$3069:;
 }
 label$3054:;
}

void _ZN12SYSTEM_BUS_T11LRSET_FIELDEP3QBS( struct $12SYSTEM_BUS_T* THIS$1, struct $3QBS* _STR$1 )
{
 label$3079:;
 static int32 I$1;
 static struct $15GFS_FILE_STRUCT* GFS$1;
 I$1 = (int32)*(int64*)*(struct $9QBS_FIELD**)((uint8*)_STR$1 + 48ll);
 int32 vr$3 = _ZN12SYSTEM_BUS_T16GFS_FILENO_VALIDEi( THIS$1, I$1 );
 if( (int64)vr$3 == 1ll ) goto label$3082;
 {
  goto label$3083;
 }
 label$3082:;
 label$3081:;
 I$1 = *(int32*)((uint8*)GFS_FILENO$ + ((int64)I$1 << (2ll & 63ll)));
 GFS$1 = (struct $15GFS_FILE_STRUCT*)((uint8*)GFS_FILE$ + ((int64)I$1 * 136ll));
 if( (int64)*(uint8*)((uint8*)GFS$1 + 32ll) == 1ll ) goto label$3085;
 {
  goto label$3083;
 }
 label$3085:;
 label$3084:;
 if( *(int64*)GFS$1 == *(int64*)((uint8*)*(struct $9QBS_FIELD**)((uint8*)_STR$1 + 48ll) + 8ll) ) goto label$3087;
 {
  goto label$3083;
 }
 label$3087:;
 label$3086:;
 if( *(int64*)((uint8*)*(struct $9QBS_FIELD**)((uint8*)_STR$1 + 48ll) + 16ll) > (int64)*(int32*)((uint8*)_STR$1 + 8ll) ) goto label$3089;
 {
  memmove( (void*)(*(uint8**)((uint8*)GFS$1 + 48ll) + *(int64*)((uint8*)*(struct $9QBS_FIELD**)((uint8*)_STR$1 + 48ll) + 24ll)), *(void**)_STR$1, *(uint64*)((uint8*)*(struct $9QBS_FIELD**)((uint8*)_STR$1 + 48ll) + 16ll) );
 }
 goto label$3088;
 label$3089:;
 {
  memmove( (void*)(*(uint8**)((uint8*)GFS$1 + 48ll) + *(int64*)((uint8*)*(struct $9QBS_FIELD**)((uint8*)_STR$1 + 48ll) + 24ll)), *(void**)_STR$1, (uint64)*(int32*)((uint8*)_STR$1 + 8ll) );
  memset( (void*)((uint8*)(*(uint8**)((uint8*)GFS$1 + 48ll) + *(int64*)((uint8*)*(struct $9QBS_FIELD**)((uint8*)_STR$1 + 48ll) + 24ll)) + (int64)*(int32*)((uint8*)_STR$1 + 8ll)), 32, (uint64)(*(int64*)((uint8*)*(struct $9QBS_FIELD**)((uint8*)_STR$1 + 48ll) + 16ll) - (int64)*(int32*)((uint8*)_STR$1 + 8ll)) );
 }
 label$3088:;
 _ZN12SYSTEM_BUS_T12FIELD_UPDATEEi( THIS$1, (int32)*(int64*)*(struct $9QBS_FIELD**)((uint8*)_STR$1 + 48ll) );
 goto label$3080;
 label$3083:;
 free( *(void**)((uint8*)_STR$1 + 48ll) );
 *(struct $9QBS_FIELD**)((uint8*)_STR$1 + 48ll) = (struct $9QBS_FIELD*)0ull;
 label$3080:;
}

void _ZN12SYSTEM_BUS_T10FIELD_FREEEP3QBS( struct $12SYSTEM_BUS_T* THIS$1, struct $3QBS* _STR$1 )
{
 label$3090:;
 int64 I$1;
 __builtin_memset( &I$1, 0, 8ll );
 struct $15GFS_FILE_STRUCT* GFS$1;
 __builtin_memset( &GFS$1, 0, 8ll );
 I$1 = *(int64*)*(struct $9QBS_FIELD**)((uint8*)_STR$1 + 48ll);
 int32 vr$5 = _ZN12SYSTEM_BUS_T16GFS_FILENO_VALIDEi( THIS$1, (int32)I$1 );
 if( (int64)vr$5 == 1ll ) goto label$3093;
 {
  goto label$3094;
  label$3093:;
 }
 I$1 = (int64)*(int32*)((uint8*)GFS_FILENO$ + (I$1 << (2ll & 63ll)));
 GFS$1 = (struct $15GFS_FILE_STRUCT*)((uint8*)GFS_FILE$ + (I$1 * 136ll));
 if( (int64)*(uint8*)((uint8*)GFS$1 + 32ll) == 1ll ) goto label$3096;
 {
  goto label$3094;
  label$3096:;
 }
 if( *(int64*)GFS$1 == *(int64*)((uint8*)*(struct $9QBS_FIELD**)((uint8*)_STR$1 + 48ll) + 8ll) ) goto label$3098;
 {
  goto label$3094;
  label$3098:;
 }
 goto label$3099;
 label$3094:;
 free( *(void**)((uint8*)_STR$1 + 48ll) );
 *(struct $9QBS_FIELD**)((uint8*)_STR$1 + 48ll) = (struct $9QBS_FIELD*)0ull;
 goto label$3091;
 label$3099:;
 struct $3QBS* STR2$1;
 __builtin_memset( &STR2$1, 0, 8ll );
 {
  I$1 = 0ll;
  int64 TMP$2447$2;
  TMP$2447$2 = (int64)*(int32*)((uint8*)GFS$1 + 64ll) + -1ll;
  goto label$3100;
  label$3103:;
  {
   STR2$1 = *(struct $3QBS**)((uint8*)*(struct $3QBS***)((uint8*)GFS$1 + 56ll) + (I$1 << (3ll & 63ll)));
   if( _STR$1 != STR2$1 ) goto label$3105;
   {
    memmove( (void*)((uint8*)*(struct $3QBS***)((uint8*)GFS$1 + 56ll) + (I$1 << (3ll & 63ll))), (void*)((uint8*)((uint8*)*(struct $3QBS***)((uint8*)GFS$1 + 56ll) + (I$1 << (3ll & 63ll))) + 8ll), (uint64)((((int64)*(int32*)((uint8*)GFS$1 + 64ll) - I$1) << (3ll & 63ll)) + -8ll) );
    goto label$3094;
   }
   label$3105:;
   label$3104:;
  }
  label$3101:;
  I$1 = I$1 + 1ll;
  label$3100:;
  if( I$1 <= TMP$2447$2 ) goto label$3103;
  label$3102:;
 }
 label$3091:;
}

void _ZN12SYSTEM_BUS_T9FIELD_ADDEP3QBSx( struct $12SYSTEM_BUS_T* THIS$1, struct $3QBS* _STR$1, int64 SIZE$1 )
{
 label$3106:;
 if( (int64)FIELD_FAILED$ == 0ll ) goto label$3109;
 {
  goto label$3107;
 }
 label$3109:;
 label$3108:;
 if( (int64)NEW_ERROR$ == 0ll ) goto label$3111;
 {
  goto label$3112;
 }
 label$3111:;
 label$3110:;
 if( SIZE$1 >= 0ll ) goto label$3114;
 {
  label$3115:;
  void* vr$2 = fb_ErrorThrowEx( 5, 3128, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
  goto *vr$2;
  label$3116:;
  goto label$3112;
 }
 label$3114:;
 label$3113:;
 if( ((int64)FIELD_TOTALSIZE$ + SIZE$1) <= (int64)FIELD_MAXSIZE$ ) goto label$3118;
 {
  label$3119:;
  void* vr$6 = fb_ErrorThrowEx( 50, 3132, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
  goto *vr$6;
  label$3120:;
  goto label$3112;
 }
 label$3118:;
 label$3117:;
 static int32 I$1;
 static struct $15GFS_FILE_STRUCT* GFS$1;
 I$1 = FIELD_FILENO$;
 if( (int64)I$1 >= 0ll ) goto label$3122;
 {
  label$3123:;
  void* vr$8 = fb_ErrorThrowEx( 54, 3142, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
  goto *vr$8;
  label$3124:;
  goto label$3112;
 }
 label$3122:;
 label$3121:;
 int32 vr$9 = _ZN12SYSTEM_BUS_T16GFS_FILENO_VALIDEi( THIS$1, I$1 );
 if( (int64)vr$9 == 1ll ) goto label$3126;
 {
  label$3127:;
  void* vr$11 = fb_ErrorThrowEx( 52, 3146, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
  goto *vr$11;
  label$3128:;
  goto label$3112;
 }
 label$3126:;
 label$3125:;
 I$1 = *(int32*)((uint8*)GFS_FILENO$ + ((int64)I$1 << (2ll & 63ll)));
 GFS$1 = (struct $15GFS_FILE_STRUCT*)((uint8*)GFS_FILE$ + ((int64)I$1 * 136ll));
 if( (int64)*(uint8*)((uint8*)GFS$1 + 32ll) == 1ll ) goto label$3130;
 {
  label$3131:;
  void* vr$20 = fb_ErrorThrowEx( 54, 3152, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
  goto *vr$20;
  label$3132:;
  goto label$3112;
 }
 label$3130:;
 label$3129:;
 if( *(struct $9QBS_FIELD**)((uint8*)_STR$1 + 48ll) == (struct $9QBS_FIELD*)0ull ) goto label$3134;
 {
  _ZN12SYSTEM_BUS_T10FIELD_FREEEP3QBS( THIS$1, _STR$1 );
 }
 label$3134:;
 label$3133:;
 void* vr$22 = malloc( 32ull );
 *(struct $9QBS_FIELD**)((uint8*)_STR$1 + 48ll) = (struct $9QBS_FIELD*)vr$22;
 *(int64*)*(struct $9QBS_FIELD**)((uint8*)_STR$1 + 48ll) = (int64)FIELD_FILENO$;
 *(int64*)((uint8*)*(struct $9QBS_FIELD**)((uint8*)_STR$1 + 48ll) + 8ll) = *(int64*)GFS$1;
 *(int64*)((uint8*)*(struct $9QBS_FIELD**)((uint8*)_STR$1 + 48ll) + 16ll) = SIZE$1;
 *(int64*)((uint8*)*(struct $9QBS_FIELD**)((uint8*)_STR$1 + 48ll) + 24ll) = (int64)FIELD_TOTALSIZE$;
 if( *(struct $3QBS***)((uint8*)GFS$1 + 56ll) == (struct $3QBS**)0ull ) goto label$3136;
 {
  *(int32*)((uint8*)GFS$1 + 64ll) = (int32)((int64)*(int32*)((uint8*)GFS$1 + 64ll) + 1ll);
  void* vr$45 = realloc( *(void**)((uint8*)GFS$1 + 56ll), (uint64)((int64)*(int32*)((uint8*)GFS$1 + 64ll) << (3ll & 63ll)) );
  *(struct $3QBS***)((uint8*)GFS$1 + 56ll) = (struct $3QBS**)vr$45;
  *(struct $3QBS**)((uint8*)((uint8*)*(struct $3QBS***)((uint8*)GFS$1 + 56ll) + ((int64)*(int32*)((uint8*)GFS$1 + 64ll) << (3ll & 63ll))) + -8ll) = _STR$1;
 }
 goto label$3135;
 label$3136:;
 {
  *(int32*)((uint8*)GFS$1 + 64ll) = 1;
  void* vr$53 = malloc( 8ull );
  *(struct $3QBS***)((uint8*)GFS$1 + 56ll) = (struct $3QBS**)vr$53;
  *(*(struct $3QBS***)((uint8*)GFS$1 + 56ll)) = _STR$1;
 }
 label$3135:;
 _ZN12SYSTEM_BUS_T12FIELD_UPDATEEi( THIS$1, FIELD_FILENO$ );
 FIELD_TOTALSIZE$ = (int32)((int64)FIELD_TOTALSIZE$ + SIZE$1);
 goto label$3107;
 label$3112:;
 FIELD_FAILED$ = 1;
 goto label$3107;
 label$3107:;
}

int32 _ZN12SYSTEM_BUS_T15GFS_VALIDHANDLEEi( struct $12SYSTEM_BUS_T* THIS$1, int32 I$1 )
{
 int32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$3137:;
 if( ((int64)-((int64)I$1 < 0ll) | (int64)-((int64)I$1 >= (int64)GFS_N$)) == 0ll ) goto label$3140;
 {
  fb$result$1 = 0;
  goto label$3138;
 }
 label$3140:;
 label$3139:;
 if( (int64)*(uint8*)((uint8*)((uint8*)GFS_FILE$ + ((int64)I$1 * 136ll)) + 128ll) == 0ll ) goto label$3142;
 {
  fb$result$1 = 1;
  goto label$3138;
 }
 label$3142:;
 label$3141:;
 if( (int64)*(uint8*)((uint8*)((uint8*)GFS_FILE$ + ((int64)I$1 * 136ll)) + 8ll) == 0ll ) goto label$3144;
 {
  fb$result$1 = 1;
  goto label$3138;
 }
 label$3144:;
 label$3143:;
 fb$result$1 = 0;
 goto label$3138;
 label$3138:;
 return fb$result$1;
}

void _ZN12SYSTEM_BUS_T9FIELD_GETEiii( struct $12SYSTEM_BUS_T* THIS$1, int32 FILENO$1, int32 OFFSET$1, int32 PASSED$1 )
{
 label$3145:;
 if( (int64)NEW_ERROR$ == 0ll ) goto label$3148;
 {
  goto label$3146;
 }
 label$3148:;
 label$3147:;
 static int32 I$1;
 static struct $15GFS_FILE_STRUCT* GFS$1;
 I$1 = FILENO$1;
 if( (int64)I$1 >= 0ll ) goto label$3150;
 {
  label$3151:;
  void* vr$2 = fb_ErrorThrowEx( 54, 3346, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
  goto *vr$2;
  label$3152:;
  goto label$3146;
 }
 label$3150:;
 label$3149:;
 int32 vr$3 = _ZN12SYSTEM_BUS_T16GFS_FILENO_VALIDEi( THIS$1, I$1 );
 if( (int64)vr$3 == 1ll ) goto label$3154;
 {
  label$3155:;
  void* vr$5 = fb_ErrorThrowEx( 52, 3350, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
  goto *vr$5;
  label$3156:;
  goto label$3146;
 }
 label$3154:;
 label$3153:;
 I$1 = *(int32*)((uint8*)GFS_FILENO$ + ((int64)I$1 << (2ll & 63ll)));
 GFS$1 = (struct $15GFS_FILE_STRUCT*)((uint8*)GFS_FILE$ + ((int64)I$1 * 136ll));
 if( (int64)*(uint8*)((uint8*)GFS$1 + 32ll) == 1ll ) goto label$3158;
 {
  label$3159:;
  void* vr$14 = fb_ErrorThrowEx( 54, 3356, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
  goto *vr$14;
  label$3160:;
  goto label$3146;
 }
 label$3158:;
 label$3157:;
 if( ~(int64)*(uint8*)((uint8*)GFS$1 + 9ll) == 0ll ) goto label$3162;
 {
  label$3163:;
  void* vr$18 = fb_ErrorThrowEx( 75, 3361, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
  goto *vr$18;
  label$3164:;
  goto label$3146;
 }
 label$3162:;
 label$3161:;
 if( (int64)PASSED$1 == 0ll ) goto label$3166;
 {
  OFFSET$1 = (int32)((int64)OFFSET$1 + -1ll);
  if( (int64)OFFSET$1 >= 0ll ) goto label$3168;
  {
   label$3169:;
   void* vr$24 = fb_ErrorThrowEx( 63, 3368, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
   goto *vr$24;
   label$3170:;
   goto label$3146;
  }
  label$3168:;
  label$3167:;
  OFFSET$1 = (int32)((int64)OFFSET$1 * *(int64*)((uint8*)GFS$1 + 40ll));
 }
 goto label$3165;
 label$3166:;
 {
  OFFSET$1 = -1;
 }
 label$3165:;
 static int32 E$1;
 int32 vr$32 = _ZN12SYSTEM_BUS_T8GFS_READEixPhx( THIS$1, I$1, (int64)OFFSET$1, *(uint8**)((uint8*)GFS$1 + 48ll), *(int64*)((uint8*)GFS$1 + 40ll) );
 E$1 = vr$32;
 if( (int64)E$1 == 0ll ) goto label$3172;
 {
  if( (int64)E$1 == -10ll ) goto label$3174;
  {
   if( (int64)E$1 != -2ll ) goto label$3176;
   {
    label$3177:;
    void* vr$36 = fb_ErrorThrowEx( 258, 3381, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
    goto *vr$36;
    label$3178:;
    goto label$3146;
   }
   label$3176:;
   label$3175:;
   if( (int64)E$1 != -3ll ) goto label$3180;
   {
    label$3181:;
    void* vr$38 = fb_ErrorThrowEx( 54, 3385, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
    goto *vr$38;
    label$3182:;
    goto label$3146;
   }
   label$3180:;
   label$3179:;
   if( (int64)E$1 != -4ll ) goto label$3184;
   {
    label$3185:;
    void* vr$40 = fb_ErrorThrowEx( 5, 3389, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
    goto *vr$40;
    label$3186:;
    goto label$3146;
   }
   label$3184:;
   label$3183:;
   if( (int64)E$1 != -7ll ) goto label$3188;
   {
    label$3189:;
    void* vr$42 = fb_ErrorThrowEx( 70, 3393, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
    goto *vr$42;
    label$3190:;
    goto label$3146;
   }
   label$3188:;
   label$3187:;
   label$3191:;
   void* vr$43 = fb_ErrorThrowEx( 75, 3396, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
   goto *vr$43;
   label$3192:;
   goto label$3146;
  }
  label$3174:;
  label$3173:;
 }
 label$3172:;
 label$3171:;
 _ZN12SYSTEM_BUS_T12FIELD_UPDATEEi( THIS$1, FILENO$1 );
 label$3146:;
}

void _ZN12SYSTEM_BUS_T21QBS_MEM64_CONCAT_LISTEv( struct $12SYSTEM_BUS_T* THIS$1 )
{
 label$3193:;
 uint32 I$1;
 __builtin_memset( &I$1, 0, 4ll );
 uint32 D$1;
 __builtin_memset( &D$1, 0, 4ll );
 struct $3QBS* TQBS$1;
 __builtin_memset( &TQBS$1, 0, 8ll );
 D$1 = 0u;
 {
  I$1 = 0u;
  uint32 TMP$2448$2;
  TMP$2448$2 = (uint32)QBS_MEM64_LIST_NEXTI$;
  goto label$3195;
  label$3198:;
  {
   if( *(int64*)((uint8*)QBS_MEM64_LIST$ + ((int64)I$1 << (3ll & 63ll))) == -1ll ) goto label$3200;
   {
    if( (int64)I$1 == (int64)D$1 ) goto label$3202;
    {
     TQBS$1 = *(struct $3QBS**)((uint8*)QBS_MEM64_LIST$ + ((int64)I$1 << (3ll & 63ll)));
     *(uint32*)((uint8*)TQBS$1 + 28ll) = D$1;
     *(int64*)((uint8*)QBS_MEM64_LIST$ + ((int64)D$1 << (3ll & 63ll))) = (int64)TQBS$1;
    }
    label$3202:;
    label$3201:;
    D$1 = (uint32)((int64)D$1 + 1ll);
   }
   label$3200:;
   label$3199:;
  }
  label$3196:;
  I$1 = (uint32)((int64)I$1 + 1ll);
  label$3195:;
  if( (int64)I$1 <= (int64)TMP$2448$2 ) goto label$3198;
  label$3197:;
 }
 QBS_MEM64_LIST_NEXTI$ = (uint64)D$1;
 if( (double)QBS_MEM64_LIST_NEXTI$ < ((double)QBS_MEM64_LIST_LASTI$ / 0x1.p+1) ) goto label$3204;
 {
  QBS_MEM64_LIST_LASTI$ = QBS_MEM64_LIST_LASTI$ << (1ull & 63ll);
  void* vr$31 = realloc( (void*)QBS_MEM64_LIST$, (QBS_MEM64_LIST_LASTI$ << (3ull & 63ll)) + 8ull );
  QBS_MEM64_LIST$ = (int64*)vr$31;
  if( QBS_MEM64_LIST$ != (int64*)0ull ) goto label$3206;
  {
   label$3207:;
   void* vr$32 = fb_ErrorThrowEx( 509, 3552, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
   goto *vr$32;
   label$3208:;
  }
  label$3206:;
  label$3205:;
 }
 label$3204:;
 label$3203:;
 goto label$3194;
 label$3194:;
}

void _ZN12SYSTEM_BUS_T16QBS_CONCAT_MEM64Ej( struct $12SYSTEM_BUS_T* THIS$1, uint32 BYTESREQUIRED$1 )
{
 label$3209:;
 int32 I$1;
 __builtin_memset( &I$1, 0, 4ll );
 uint8* DEST$1;
 __builtin_memset( &DEST$1, 0, 8ll );
 struct $3QBS* TQBS$1;
 __builtin_memset( &TQBS$1, 0, 8ll );
 DEST$1 = (uint8*)DBLOCK$;
 QBS_MEM64_SP$ = QBS_MEM64_DESCRIPTOR_SPACE$;
 if( QBS_MEM64_LIST_NEXTI$ == 0ull ) goto label$3212;
 {
  {
   I$1 = 0;
   int32 TMP$2449$3;
   TMP$2449$3 = (int32)QBS_MEM64_LIST_NEXTI$;
   goto label$3213;
   label$3216:;
   {
    if( *(int64*)((uint8*)QBS_MEM64_LIST$ + ((int64)I$1 << (3ll & 63ll))) == -1ll ) goto label$3218;
    {
     TQBS$1 = *(struct $3QBS**)*(int64*)((uint8*)QBS_MEM64_LIST$ + ((int64)I$1 << (3ll & 63ll)));
     if( *(uint8**)TQBS$1 == DEST$1 ) goto label$3220;
     {
      if( (int64)*(int32*)((uint8*)TQBS$1 + 8ll) == 0ll ) goto label$3222;
      {
       memmove( (void*)DEST$1, *(void**)TQBS$1, (uint64)*(int32*)((uint8*)TQBS$1 + 8ll) );
      }
      label$3222:;
      label$3221:;
      *(uint8**)TQBS$1 = DEST$1;
      if( *(uint16**)((uint8*)TQBS$1 + 16ll) == (uint16*)0ull ) goto label$3224;
      {
       *(*(uint16**)((uint8*)TQBS$1 + 16ll)) = (uint16)*(int32*)((uint8*)TQBS$1 + 8ll);
       *(uint16*)((uint8*)*(uint16**)((uint8*)TQBS$1 + 16ll) + 2ll) = *(uint16*)*(int64*)((uint8*)TQBS$1 - (DBLOCK$ << (3ll & 63ll)));
      }
      label$3224:;
      label$3223:;
     }
     label$3220:;
     label$3219:;
     DEST$1 = (uint8*)(DEST$1 + (int64)*(int32*)((uint8*)TQBS$1 + 8ll));
     QBS_MEM64_SP$ = (uint32)((int64)QBS_MEM64_SP$ + (int64)*(int32*)((uint8*)TQBS$1 + 8ll));
    }
    label$3218:;
    label$3217:;
   }
   label$3214:;
   I$1 = (int32)((int64)I$1 + 1ll);
   label$3213:;
   if( (int64)I$1 <= (int64)TMP$2449$3 ) goto label$3216;
   label$3215:;
  }
 }
 label$3212:;
 label$3211:;
 if( ((int64)QBS_MEM64_SP$ + (int64)BYTESREQUIRED$1) <= (int64)MEM64_SP$ ) goto label$3226;
 {
  label$3227:;
  void* vr$47 = fb_ErrorThrowEx( 513, 3590, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
  goto *vr$47;
  label$3228:;
 }
 label$3226:;
 label$3225:;
 goto label$3210;
 label$3210:;
}

struct $3QBS* _ZN12SYSTEM_BUS_T11QBS_NEW_TXTEPKa( struct $12SYSTEM_BUS_T* THIS$1, int8* _TXT$1 )
{
 struct $3QBS* fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3229:;
 static struct $3QBS* NEWSTR$1;
 struct $3QBS* vr$1 = _ZN12SYSTEM_BUS_T18QBS_NEW_DESCRIPTOREv( THIS$1 );
 NEWSTR$1 = vr$1;
 if( _TXT$1 != (int8*)0ull ) goto label$3232;
 {
  *(int32*)((uint8*)NEWSTR$1 + 8ll) = 0;
 }
 goto label$3231;
 label$3232:;
 {
  double vr$3 = _ZN12SYSTEM_BUS_T8K_STRLENEPh( THIS$1, (uint8*)_TXT$1 );
  *(int32*)((uint8*)NEWSTR$1 + 8ll) = ((int32)__builtin_nearbyint( vr$3 ));
 }
 label$3231:;
 *(uint8**)NEWSTR$1 = (uint8*)_TXT$1;
 if( (uint64)(int64)QBS_TMP_LIST_NEXTI$ <= QBS_TMP_LIST_LASTI$ ) goto label$3234;
 {
  _ZN12SYSTEM_BUS_T19QBS_TMP_CONCAT_LISTEv( THIS$1 );
 }
 label$3234:;
 label$3233:;
 *(uint32*)((uint8*)NEWSTR$1 + 36ll) = QBS_TMP_LIST_NEXTI$;
 *(int64*)((uint8*)QBS_TMP_LIST$ + ((int64)*(uint32*)((uint8*)NEWSTR$1 + 36ll) << (3ll & 63ll))) = (int64)NEWSTR$1;
 QBS_TMP_LIST_NEXTI$ = (uint32)((int64)QBS_TMP_LIST_NEXTI$ + 1ll);
 *(uint8*)((uint8*)NEWSTR$1 + 32ll) = (uint8)1u;
 *(uint8*)((uint8*)NEWSTR$1 + 41ll) = (uint8)1u;
 fb$result$1 = NEWSTR$1;
 goto label$3230;
 label$3230:;
 return fb$result$1;
}

struct $3QBS* _ZN12SYSTEM_BUS_T15QBS_NEW_TXT_LENEPKai( struct $12SYSTEM_BUS_T* THIS$1, int8* _TXT$1, int32 _LEN$1 )
{
 struct $3QBS* fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3235:;
 static struct $3QBS* NEWSTR$1;
 struct $3QBS* vr$1 = _ZN12SYSTEM_BUS_T18QBS_NEW_DESCRIPTOREv( THIS$1 );
 NEWSTR$1 = vr$1;
 *(int32*)((uint8*)NEWSTR$1 + 8ll) = _LEN$1;
 *(uint8**)NEWSTR$1 = (uint8*)_TXT$1;
 if( (uint64)(int64)QBS_TMP_LIST_NEXTI$ <= QBS_TMP_LIST_LASTI$ ) goto label$3238;
 {
  _ZN12SYSTEM_BUS_T19QBS_TMP_CONCAT_LISTEv( THIS$1 );
 }
 label$3238:;
 label$3237:;
 *(uint32*)((uint8*)NEWSTR$1 + 36ll) = QBS_TMP_LIST_NEXTI$;
 *(int64*)((uint8*)QBS_TMP_LIST$ + ((int64)*(uint32*)((uint8*)NEWSTR$1 + 36ll) << (3ll & 63ll))) = (int64)NEWSTR$1;
 QBS_TMP_LIST_NEXTI$ = (uint32)((int64)QBS_TMP_LIST_NEXTI$ + 1ll);
 *(uint8*)((uint8*)NEWSTR$1 + 32ll) = (uint8)1u;
 *(uint8*)((uint8*)NEWSTR$1 + 41ll) = (uint8)1u;
 fb$result$1 = NEWSTR$1;
 goto label$3236;
 label$3236:;
 return fb$result$1;
}

void _ZN12SYSTEM_BUS_T11QBS_MAKETMPEP3QBS( struct $12SYSTEM_BUS_T* THIS$1, struct $3QBS* _STR$1 )
{
 label$3239:;
 if( (uint64)(int64)QBS_TMP_LIST_NEXTI$ <= QBS_TMP_LIST_LASTI$ ) goto label$3242;
 {
  _ZN12SYSTEM_BUS_T19QBS_TMP_CONCAT_LISTEv( THIS$1 );
 }
 label$3242:;
 label$3241:;
 *(uint32*)((uint8*)_STR$1 + 36ll) = QBS_TMP_LIST_NEXTI$;
 *(int64*)((uint8*)QBS_TMP_LIST$ + ((int64)*(uint32*)((uint8*)_STR$1 + 36ll) << (3ll & 63ll))) = (int64)_STR$1;
 QBS_TMP_LIST_NEXTI$ = (uint32)((int64)QBS_TMP_LIST_NEXTI$ + 1ll);
 *(uint8*)((uint8*)_STR$1 + 32ll) = (uint8)1u;
 label$3240:;
}

struct $3QBS* _ZN12SYSTEM_BUS_T7QBS_ADDEP3QBSS1_( struct $12SYSTEM_BUS_T* THIS$1, struct $3QBS* STR1$1, struct $3QBS* STR2$1 )
{
 struct $3QBS* fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3243:;
 struct $3QBS* TQBS$1;
 __builtin_memset( &TQBS$1, 0, 8ll );
 if( (int64)*(int32*)((uint8*)STR2$1 + 8ll) != 0ll ) goto label$3246;
 {
  fb$result$1 = STR1$1;
  goto label$3244;
 }
 label$3246:;
 label$3245:;
 if( (int64)*(int32*)((uint8*)STR1$1 + 8ll) != 0ll ) goto label$3248;
 {
  fb$result$1 = STR2$1;
  goto label$3244;
 }
 label$3248:;
 label$3247:;
 struct $3QBS* vr$12 = _ZN12SYSTEM_BUS_T7QBS_NEWEih( THIS$1, (int32)((int64)*(int32*)((uint8*)STR1$1 + 8ll) + (int64)*(int32*)((uint8*)STR2$1 + 8ll)), (uint8)1u );
 TQBS$1 = vr$12;
 memcpy( *(void**)TQBS$1, *(void**)STR1$1, (uint64)*(int32*)((uint8*)STR1$1 + 8ll) );
 memcpy( (void*)(*(uint8**)TQBS$1 + (int64)*(int32*)((uint8*)STR1$1 + 8ll)), *(void**)STR2$1, (uint64)*(int32*)((uint8*)STR2$1 + 8ll) );
 if( (int64)*(uint8*)((uint8*)STR1$1 + 32ll) == 0ll ) goto label$3250;
 {
  _ZN12SYSTEM_BUS_T8QBS_FREEEP3QBS( THIS$1, STR1$1 );
 }
 label$3250:;
 label$3249:;
 if( (int64)*(uint8*)((uint8*)STR2$1 + 32ll) == 0ll ) goto label$3252;
 {
  _ZN12SYSTEM_BUS_T8QBS_FREEEP3QBS( THIS$1, STR2$1 );
 }
 label$3252:;
 label$3251:;
 fb$result$1 = TQBS$1;
 goto label$3244;
 label$3244:;
 return fb$result$1;
}

void* _ZN12SYSTEM_BUS_T11QBS_CLEANUPEjRPv( struct $12SYSTEM_BUS_T* THIS$1, uint32 _BASE$1, void** PASSVALUE$1 )
{
 void* fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3253:;
 label$3255:;
 if( (int64)QBS_TMP_LIST_NEXTI$ <= (int64)_BASE$1 ) goto label$3256;
 {
  QBS_TMP_LIST_NEXTI$ = (uint32)((int64)QBS_TMP_LIST_NEXTI$ + -1ll);
  if( *(int64*)((uint8*)QBS_TMP_LIST$ + ((int64)QBS_TMP_LIST_NEXTI$ << (3ll & 63ll))) == -1ll ) goto label$3258;
  {
   _ZN12SYSTEM_BUS_T8QBS_FREEEP3QBS( THIS$1, *(struct $3QBS**)((uint8*)QBS_TMP_LIST$ + ((int64)QBS_TMP_LIST_NEXTI$ << (3ll & 63ll))) );
  }
  label$3258:;
  label$3257:;
 }
 goto label$3255;
 label$3256:;
 fb$result$1 = *PASSVALUE$1;
 goto label$3254;
 label$3254:;
 return fb$result$1;
}

int64 _ZN12SYSTEM_BUS_T11FUNC_LBOUNDEPxii( struct $12SYSTEM_BUS_T* THIS$1, int64* ARRAY$1, int32 INDEX$1, int32 NUM_INDEXES$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3259:;
 if( (((int64)-((int64)INDEX$1 < 1ll) | (int64)-((int64)INDEX$1 > (int64)NUM_INDEXES$1)) | (int64)-((*(int64*)((uint8*)ARRAY$1 + 16ll) & 1ll) == 0ll)) == 0ll ) goto label$3262;
 {
  label$3263:;
  void* vr$11 = fb_ErrorThrowEx( 9, 3945, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
  goto *vr$11;
  label$3264:;
  fb$result$1 = 0ll;
  goto label$3260;
 }
 label$3262:;
 label$3261:;
 INDEX$1 = (int32)(((int64)NUM_INDEXES$1 - (int64)INDEX$1) + 1ll);
 fb$result$1 = *(int64*)((uint8*)ARRAY$1 + ((int64)INDEX$1 << (5ll & 63ll)));
 goto label$3260;
 label$3260:;
 return fb$result$1;
}

int64 _ZN12SYSTEM_BUS_T11FUNC_UBOUNDEPxii( struct $12SYSTEM_BUS_T* THIS$1, int64* ARRAY$1, int32 INDEX$1, int32 NUM_INDEXES$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3265:;
 if( (((int64)-((int64)INDEX$1 < 1ll) | (int64)-((int64)INDEX$1 > (int64)NUM_INDEXES$1)) | (int64)-((*(int64*)((uint8*)ARRAY$1 + 16ll) & 1ll) == 0ll)) == 0ll ) goto label$3268;
 {
  label$3269:;
  void* vr$11 = fb_ErrorThrowEx( 9, 3954, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
  goto *vr$11;
  label$3270:;
  fb$result$1 = 0ll;
  goto label$3266;
 }
 label$3268:;
 label$3267:;
 INDEX$1 = (int32)(((int64)NUM_INDEXES$1 - (int64)INDEX$1) + 1ll);
 fb$result$1 = (*(int64*)((uint8*)ARRAY$1 + ((int64)INDEX$1 << (5ll & 63ll))) + *(int64*)((uint8*)((uint8*)ARRAY$1 + ((int64)INDEX$1 << (5ll & 63ll))) + 8ll)) + -1ll;
 goto label$3266;
 label$3266:;
 return fb$result$1;
}

int64 _ZN12SYSTEM_BUS_T3QBREd( struct $12SYSTEM_BUS_T* THIS$1, double F$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3271:;
 int64 I$1;
 __builtin_memset( &I$1, 0, 8ll );
 int64 TEMP$1;
 TEMP$1 = 0ll;
 if( F$1 <= 0x1.p+63 ) goto label$3274;
 {
  TEMP$1 = 1ll;
  F$1 = F$1 + -0x1.p+63;
 }
 label$3274:;
 label$3273:;
 if( F$1 >= 0x0p+0 ) goto label$3276;
 {
  I$1 = ((int64)__builtin_nearbyint( F$1 + -0x1.p-1 ));
 }
 goto label$3275;
 label$3276:;
 {
  I$1 = ((int64)__builtin_nearbyint( F$1 + 0x1.p-1 ));
 }
 label$3275:;
 if( TEMP$1 == 0ll ) goto label$3278;
 {
  fb$result$1 = I$1 | -9223372036854775808ull;
  goto label$3272;
 }
 label$3278:;
 label$3277:;
 fb$result$1 = I$1;
 goto label$3272;
 label$3272:;
 return fb$result$1;
}

uint64 _ZN12SYSTEM_BUS_T24QBR_LONGDOUBLE_TO_UINT64Ed( struct $12SYSTEM_BUS_T* THIS$1, double F$1 )
{
 uint64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3279:;
 int64 I$1;
 I$1 = ((int64)__builtin_nearbyint( __builtin_floor( F$1 ) ));
 if( F$1 < ((double)I$1 + 0x1.p-1) ) goto label$3282;
 {
  I$1 = I$1 + 1ll;
 }
 label$3282:;
 label$3281:;
 fb$result$1 = (uint64)I$1;
 goto label$3280;
 label$3280:;
 return fb$result$1;
}

int64 _ZN12SYSTEM_BUS_T17QBR_FLOAT_TO_LONGEd( struct $12SYSTEM_BUS_T* THIS$1, double F$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3283:;
 int64 I$1;
 I$1 = ((int64)__builtin_nearbyint( __builtin_floor( F$1 ) ));
 if( F$1 < ((double)I$1 + 0x1.p-1) ) goto label$3286;
 {
  I$1 = I$1 + 1ll;
 }
 label$3286:;
 label$3285:;
 fb$result$1 = I$1;
 goto label$3284;
 label$3284:;
 return fb$result$1;
}

int32 _ZN12SYSTEM_BUS_T18QBR_DOUBLE_TO_LONGEd( struct $12SYSTEM_BUS_T* THIS$1, double F$1 )
{
 int32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$3287:;
 int64 I$1;
 I$1 = ((int64)__builtin_nearbyint( __builtin_floor( F$1 ) ));
 if( F$1 < ((double)I$1 + 0x1.p-1) ) goto label$3290;
 {
  I$1 = I$1 + 1ll;
 }
 label$3290:;
 label$3289:;
 fb$result$1 = (int32)I$1;
 goto label$3288;
 label$3288:;
 return fb$result$1;
}

void _ZN12SYSTEM_BUS_T10FPU_REINITEv( struct $12SYSTEM_BUS_T* THIS$1 )
{
 label$3291:;
 label$3292:;
}

void _ZN12SYSTEM_BUS_T10SUB__BLINKEi( struct $12SYSTEM_BUS_T* THIS$1, int32 ONOFF$1 )
{
 label$3293:;
 if( (int64)ONOFF$1 != 1ll ) goto label$3296;
 {
  H3C0_BLINK_ENABLE$ = 1ll;
 }
 goto label$3295;
 label$3296:;
 {
  H3C0_BLINK_ENABLE$ = 0ll;
 }
 label$3295:;
 label$3294:;
}

int32 _ZN12SYSTEM_BUS_T11FUNC__BLINKEv( struct $12SYSTEM_BUS_T* THIS$1 )
{
 int32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$3297:;
 fb$result$1 = (int32)-H3C0_BLINK_ENABLE$;
 goto label$3298;
 label$3298:;
 return fb$result$1;
}

void _ZN12SYSTEM_BUS_T7SUB_OUTEii( struct $12SYSTEM_BUS_T* THIS$1, int32 PORT$1, int32 DATA_OUT$1 )
{
 label$3299:;
 if( (int64)NEW_ERROR$ == 0ll ) goto label$3302;
 {
  goto label$3300;
 }
 label$3302:;
 label$3301:;
 UNSUPPORTED_PORT_ACCESSED$ = 0ll;
 PORT$1 = (int32)((int64)PORT$1 & 65535ll);
 DATA_OUT$1 = (int32)((int64)DATA_OUT$1 & 255ll);
 if( (int64)PORT$1 != 960ll ) goto label$3304;
 {
  H3C0_BLINK_ENABLE$ = (int64)DATA_OUT$1 & 8ll;
  goto label$3305;
 }
 label$3304:;
 label$3303:;
 if( (int64)PORT$1 != 967ll ) goto label$3307;
 {
  H3C7_PALETTE_REGISTER_READ_INDEX$ = (int64)DATA_OUT$1;
  H3C9_READ_NEXT$ = 0ll;
  goto label$3305;
 }
 label$3307:;
 label$3306:;
 if( (int64)PORT$1 != 968ll ) goto label$3309;
 {
  H3C8_PALETTE_REGISTER_INDEX$ = (int64)DATA_OUT$1;
  H3C9_NEXT$ = 0ll;
  goto label$3305;
 }
 label$3309:;
 label$3308:;
 if( (int64)PORT$1 != 969ll ) goto label$3311;
 {
  DATA_OUT$1 = (int32)((int64)DATA_OUT$1 & 63ll);
  if( *(uint32**)((uint8*)WRITE_PAGE$ + 80ll) == (uint32*)0ull ) goto label$3313;
  {
   if( H3C9_NEXT$ != 0ll ) goto label$3315;
   {
    *(uint32*)((uint8*)*(uint32**)((uint8*)WRITE_PAGE$ + 80ll) + (H3C8_PALETTE_REGISTER_INDEX$ << (2ll & 63ll))) = (uint32)((int64)*(uint32*)((uint8*)*(uint32**)((uint8*)WRITE_PAGE$ + 80ll) + (H3C8_PALETTE_REGISTER_INDEX$ << (2ll & 63ll))) & 4278255615ll);
    int64 vr$36 = _ZN12SYSTEM_BUS_T3QBREd( THIS$1, ((double)(int64)DATA_OUT$1 * 0x1.041040BFE3B04p+2) + -0x1.FFFFF94A03595p-2 );
    *(uint32*)((uint8*)*(uint32**)((uint8*)WRITE_PAGE$ + 80ll) + (H3C8_PALETTE_REGISTER_INDEX$ << (2ll & 63ll))) = (uint32)((int64)*(uint32*)((uint8*)*(uint32**)((uint8*)WRITE_PAGE$ + 80ll) + (H3C8_PALETTE_REGISTER_INDEX$ << (2ll & 63ll))) + (vr$36 << (16ll & 63ll)));
    _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), 0x1.8004p+15, (double)DATA_OUT$1 );
   }
   label$3315:;
   label$3314:;
   if( H3C9_NEXT$ != 1ll ) goto label$3317;
   {
    *(uint32*)((uint8*)*(uint32**)((uint8*)WRITE_PAGE$ + 80ll) + (H3C8_PALETTE_REGISTER_INDEX$ << (2ll & 63ll))) = (uint32)((int64)*(uint32*)((uint8*)*(uint32**)((uint8*)WRITE_PAGE$ + 80ll) + (H3C8_PALETTE_REGISTER_INDEX$ << (2ll & 63ll))) & 4278255615ll);
    int64 vr$62 = _ZN12SYSTEM_BUS_T3QBREd( THIS$1, ((double)(int64)DATA_OUT$1 * 0x1.041040BFE3B04p+2) + -0x1.FFFFF94A03595p-2 );
    *(uint32*)((uint8*)*(uint32**)((uint8*)WRITE_PAGE$ + 80ll) + (H3C8_PALETTE_REGISTER_INDEX$ << (2ll & 63ll))) = (uint32)((int64)*(uint32*)((uint8*)*(uint32**)((uint8*)WRITE_PAGE$ + 80ll) + (H3C8_PALETTE_REGISTER_INDEX$ << (2ll & 63ll))) + (vr$62 << (8ll & 63ll)));
    _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), 0x1.8006p+15, (double)DATA_OUT$1 );
   }
   label$3317:;
   label$3316:;
   if( H3C9_NEXT$ != 2ll ) goto label$3319;
   {
    *(uint32*)((uint8*)*(uint32**)((uint8*)WRITE_PAGE$ + 80ll) + (H3C8_PALETTE_REGISTER_INDEX$ << (2ll & 63ll))) = (uint32)((int64)*(uint32*)((uint8*)*(uint32**)((uint8*)WRITE_PAGE$ + 80ll) + (H3C8_PALETTE_REGISTER_INDEX$ << (2ll & 63ll))) & 4278255615ll);
    int64 vr$88 = _ZN12SYSTEM_BUS_T3QBREd( THIS$1, ((double)(int64)DATA_OUT$1 * 0x1.041040BFE3B04p+2) + -0x1.FFFFF94A03595p-2 );
    *(uint32*)((uint8*)*(uint32**)((uint8*)WRITE_PAGE$ + 80ll) + (H3C8_PALETTE_REGISTER_INDEX$ << (2ll & 63ll))) = (uint32)((int64)*(uint32*)((uint8*)*(uint32**)((uint8*)WRITE_PAGE$ + 80ll) + (H3C8_PALETTE_REGISTER_INDEX$ << (2ll & 63ll))) + vr$88);
    _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), 0x1.8008p+15, (double)DATA_OUT$1 );
   }
   label$3319:;
   label$3318:;
  }
  label$3313:;
  label$3312:;
  H3C9_NEXT$ = H3C9_NEXT$ + 1ll;
  if( H3C9_NEXT$ != 3ll ) goto label$3321;
  {
   H3C9_NEXT$ = 0ll;
   H3C8_PALETTE_REGISTER_INDEX$ = H3C8_PALETTE_REGISTER_INDEX$ + 1ll;
   H3C8_PALETTE_REGISTER_INDEX$ = H3C8_PALETTE_REGISTER_INDEX$ & 255ll;
  }
  label$3321:;
  label$3320:;
  goto label$3305;
 }
 label$3311:;
 label$3310:;
 UNSUPPORTED_PORT_ACCESSED$ = 1ll;
 label$3305:;
 goto label$3300;
 label$3322:;
 label$3323:;
 void* vr$99 = fb_ErrorThrowEx( 5, 4160, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
 goto *vr$99;
 label$3324:;
 label$3300:;
}

int32 _ZN12SYSTEM_BUS_T8FUNC_INPEi( struct $12SYSTEM_BUS_T* THIS$1, int32 PORT$1 )
{
 int32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$3325:;
 static int32 VALUE$1;
 UNSUPPORTED_PORT_ACCESSED$ = 0ll;
 if( ((int64)-((int64)PORT$1 > 65535ll) | (int64)-((int64)PORT$1 < -65536ll)) == 0ll ) goto label$3328;
 {
  label$3329:;
  void* vr$6 = fb_ErrorThrowEx( 6, 4167, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
  goto *vr$6;
  label$3330:;
  fb$result$1 = 0;
  goto label$3326;
 }
 label$3328:;
 label$3327:;
 PORT$1 = (int32)((int64)PORT$1 & 65535ll);
 if( (int64)PORT$1 != 969ll ) goto label$3332;
 {
  if( *(uint32**)((uint8*)WRITE_PAGE$ + 80ll) == (uint32*)0ull ) goto label$3334;
  {
   if( H3C9_READ_NEXT$ != 0ll ) goto label$3336;
   {
    int32 vr$21 = _ZN12SYSTEM_BUS_T18QBR_DOUBLE_TO_LONGEd( THIS$1, ((double)(((int64)*(uint32*)((uint8*)*(uint32**)((uint8*)WRITE_PAGE$ + 80ll) + (H3C7_PALETTE_REGISTER_READ_INDEX$ << (2ll & 63ll))) >> (16ll & 63ll)) & 255ll) / 0x1.FE0008637BD06p+1) + -0x1.FFFFF94A03595p-2 );
    VALUE$1 = vr$21;
   }
   label$3336:;
   label$3335:;
   if( H3C9_READ_NEXT$ != 1ll ) goto label$3338;
   {
    int32 vr$31 = _ZN12SYSTEM_BUS_T18QBR_DOUBLE_TO_LONGEd( THIS$1, ((double)(((int64)*(uint32*)((uint8*)*(uint32**)((uint8*)WRITE_PAGE$ + 80ll) + (H3C7_PALETTE_REGISTER_READ_INDEX$ << (2ll & 63ll))) >> (8ll & 63ll)) & 255ll) / 0x1.FE0008637BD06p+1) + -0x1.FFFFF94A03595p-2 );
    VALUE$1 = vr$31;
   }
   label$3338:;
   label$3337:;
   if( H3C9_READ_NEXT$ != 2ll ) goto label$3340;
   {
    int32 vr$40 = _ZN12SYSTEM_BUS_T18QBR_DOUBLE_TO_LONGEd( THIS$1, ((double)((int64)*(uint32*)((uint8*)*(uint32**)((uint8*)WRITE_PAGE$ + 80ll) + (H3C7_PALETTE_REGISTER_READ_INDEX$ << (2ll & 63ll))) & 255ll) / 0x1.FE0008637BD06p+1) + -0x1.FFFFF94A03595p-2 );
    VALUE$1 = vr$40;
   }
   label$3340:;
   label$3339:;
   H3C9_READ_NEXT$ = H3C9_READ_NEXT$ + 1ll;
   if( H3C9_READ_NEXT$ != 3ll ) goto label$3342;
   {
    H3C9_READ_NEXT$ = 0ll;
    H3C7_PALETTE_REGISTER_READ_INDEX$ = H3C7_PALETTE_REGISTER_READ_INDEX$ + 1ll;
    H3C7_PALETTE_REGISTER_READ_INDEX$ = H3C7_PALETTE_REGISTER_READ_INDEX$ & 255ll;
   }
   label$3342:;
   label$3341:;
   fb$result$1 = VALUE$1;
   goto label$3326;
  }
  label$3334:;
  label$3333:;
  fb$result$1 = 0;
  goto label$3326;
 }
 label$3332:;
 label$3331:;
 if( (int64)PORT$1 != 986ll ) goto label$3344;
 {
  VALUE$1 = 0;
  if( (VERTICAL_RETRACE_HAPPENED$ | VERTICAL_RETRACE_IN_PROGRESS$) == 0ll ) goto label$3346;
  {
   VERTICAL_RETRACE_HAPPENED$ = 0ll;
   VALUE$1 = (int32)((int64)VALUE$1 | 8ll);
  }
  label$3346:;
  label$3345:;
  fb$result$1 = VALUE$1;
  goto label$3326;
 }
 label$3344:;
 label$3343:;
 UNSUPPORTED_PORT_ACCESSED$ = 1ll;
 fb$result$1 = 0;
 goto label$3326;
 label$3326:;
 return fb$result$1;
}

void _ZN12SYSTEM_BUS_T8SUB_WAITEiiii( struct $12SYSTEM_BUS_T* THIS$1, int32 PORT$1, int32 ANDEXPRESSION$1, int32 XOREXPRESSION$1, int32 PASSED$1 )
{
 label$3347:;
 if( (int64)NEW_ERROR$ == 0ll ) goto label$3350;
 {
  goto label$3348;
 }
 label$3350:;
 label$3349:;
 static int32 VALUE$1;
 if( ((int64)-((int64)PORT$1 > 65535ll) | (int64)-((int64)PORT$1 < -65536ll)) == 0ll ) goto label$3352;
 {
  label$3353:;
  void* vr$6 = fb_ErrorThrowEx( 6, 4250, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
  goto *vr$6;
  label$3354:;
  goto label$3348;
 }
 label$3352:;
 label$3351:;
 PORT$1 = (int32)((int64)PORT$1 & 65535ll);
 if( ((int64)-((int64)ANDEXPRESSION$1 < -32768ll) | (int64)-((int64)ANDEXPRESSION$1 > 65535ll)) == 0ll ) goto label$3356;
 {
  label$3357:;
  void* vr$15 = fb_ErrorThrowEx( 6, 4255, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
  goto *vr$15;
  label$3358:;
  goto label$3348;
 }
 label$3356:;
 label$3355:;
 ANDEXPRESSION$1 = (int32)((int64)ANDEXPRESSION$1 & 255ll);
 if( (int64)PASSED$1 == 0ll ) goto label$3360;
 {
  if( ((int64)-((int64)XOREXPRESSION$1 < -32768ll) | (int64)-((int64)XOREXPRESSION$1 > 65535ll)) == 0ll ) goto label$3362;
  {
   label$3363:;
   void* vr$25 = fb_ErrorThrowEx( 6, 4261, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
   goto *vr$25;
   label$3364:;
   goto label$3348;
  }
  label$3362:;
  label$3361:;
 }
 label$3360:;
 label$3359:;
 XOREXPRESSION$1 = (int32)((int64)XOREXPRESSION$1 & 255ll);
 label$3365:;
 int32 vr$29 = _ZN12SYSTEM_BUS_T8FUNC_INPEi( THIS$1, PORT$1 );
 VALUE$1 = vr$29;
 if( (int64)PASSED$1 == 0ll ) goto label$3367;
 {
  VALUE$1 = (int32)((int64)VALUE$1 ^ (int64)XOREXPRESSION$1);
 }
 label$3367:;
 label$3366:;
 VALUE$1 = (int32)((int64)VALUE$1 & (int64)ANDEXPRESSION$1);
 if( (((int64)VALUE$1 | UNSUPPORTED_PORT_ACCESSED$) | (int64)STOP_PROGRAM$) == 0ll ) goto label$3369;
 {
  goto label$3348;
 }
 label$3369:;
 label$3368:;
 fb_Sleep( 1 );
 goto label$3365;
 label$3348:;
}

void _ZN12SYSTEM_BUS_T6SWAP_8EPvS0_( struct $12SYSTEM_BUS_T* THIS$1, void* A$1, void* B$1 )
{
 label$3370:;
 uint8* X$1;
 __builtin_memset( &X$1, 0, 8ll );
 X$1 = (uint8*)A$1;
 A$1 = (void*)B$1;
 B$1 = (void*)X$1;
 label$3371:;
}

void _ZN12SYSTEM_BUS_T7SWAP_16EPvS0_( struct $12SYSTEM_BUS_T* THIS$1, void* A$1, void* B$1 )
{
 label$3372:;
 uint16* X$1;
 __builtin_memset( &X$1, 0, 8ll );
 X$1 = (uint16*)A$1;
 A$1 = (void*)B$1;
 B$1 = (void*)X$1;
 label$3373:;
}

void _ZN12SYSTEM_BUS_T7SWAP_32EPvS0_( struct $12SYSTEM_BUS_T* THIS$1, void* A$1, void* B$1 )
{
 label$3374:;
 uint32* X$1;
 __builtin_memset( &X$1, 0, 8ll );
 X$1 = (uint32*)A$1;
 A$1 = (void*)B$1;
 B$1 = (void*)X$1;
 label$3375:;
}

void _ZN12SYSTEM_BUS_T7SWAP_64EPvS0_( struct $12SYSTEM_BUS_T* THIS$1, void* A$1, void* B$1 )
{
 label$3376:;
 uint64* X$1;
 __builtin_memset( &X$1, 0, 8ll );
 X$1 = (uint64*)A$1;
 A$1 = (void*)B$1;
 B$1 = (void*)X$1;
 label$3377:;
}

void _ZN12SYSTEM_BUS_T15SWAP_LONGDOUBLEEPvS0_( struct $12SYSTEM_BUS_T* THIS$1, void* A$1, void* B$1 )
{
 label$3378:;
 double* X$1;
 __builtin_memset( &X$1, 0, 8ll );
 X$1 = (double*)A$1;
 A$1 = (void*)B$1;
 B$1 = (void*)X$1;
 label$3379:;
}

void _ZN12SYSTEM_BUS_T11SWAP_STRINGEP3QBSS1_( struct $12SYSTEM_BUS_T* THIS$1, struct $3QBS* A$1, struct $3QBS* B$1 )
{
 label$3380:;
 static struct $3QBS* C$1;
 struct $3QBS* vr$1 = _ZN12SYSTEM_BUS_T7QBS_NEWEih( THIS$1, *(int32*)((uint8*)A$1 + 8ll), (uint8)0u );
 C$1 = vr$1;
 memcpy( *(void**)C$1, *(void**)A$1, (uint64)*(int32*)((uint8*)A$1 + 8ll) );
 _ZN12SYSTEM_BUS_T7QBS_SETEP3QBSS1_( THIS$1, A$1, B$1 );
 _ZN12SYSTEM_BUS_T7QBS_SETEP3QBSS1_( THIS$1, B$1, C$1 );
 _ZN12SYSTEM_BUS_T8QBS_FREEEP3QBS( THIS$1, C$1 );
 label$3381:;
}

void SYSTEM_BUS_TSWAP_BLOCK( void* A$1, void* B$1, uint32 BYTES$1 )
{
 label$3382:;
 static uint32 QUADS$1;
 QUADS$1 = (uint32)((int64)BYTES$1 >> (2ll & 63ll));
 static uint32* A32$1;
 static uint32* B32$1;
 A32$1 = (uint32*)A$1;
 B32$1 = (uint32*)B$1;
 label$3384:;
 if( (int64)QUADS$1 == 0ll ) goto label$3385;
 {
  static uint32 C$2;
  C$2 = *A32$1;
  *A32$1 = *B32$1;
  *A32$1 = (uint32)((int64)*A32$1 + 1ll);
  *B32$1 = C$2;
  *B32$1 = (uint32)((int64)*B32$1 + 1ll);
  QUADS$1 = (uint32)((int64)QUADS$1 + -1ll);
 }
 goto label$3384;
 label$3385:;
 BYTES$1 = (uint32)((int64)BYTES$1 & 3ll);
 static uint8* A8$1;
 static uint8* B8$1;
 A8$1 = (uint8*)A32$1;
 B8$1 = (uint8*)B32$1;
 label$3386:;
 if( (int64)BYTES$1 == 0ll ) goto label$3387;
 {
  static uint8 C$2;
  C$2 = *A8$1;
  *A8$1 = *B8$1;
  *A8$1 = (uint8)((int64)*A8$1 + 1ll);
  *B8$1 = C$2;
  *B8$1 = (uint8)((int64)*B8$1 + 1ll);
  BYTES$1 = (uint32)((int64)BYTES$1 + -1ll);
 }
 goto label$3386;
 label$3387:;
 label$3383:;
}

uint8 _ZN12SYSTEM_BUS_T10FUNC__ROL8Ehh( struct $12SYSTEM_BUS_T* THIS$1, uint8 VALUE$1, uint8 COUNT$1 )
{
 uint8 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 1ll );
 label$3388:;
 COUNT$1 = (uint8)((int64)COUNT$1 & 7ll);
 fb$result$1 = (uint8)(((int64)VALUE$1 << ((int64)COUNT$1 & 63ll)) | ((int64)VALUE$1 >> (~((int64)COUNT$1 | -8ll) & 63ll)));
 goto label$3389;
 label$3389:;
 return fb$result$1;
}

uint8 _ZN12SYSTEM_BUS_T10FUNC__ROR8Ehh( struct $12SYSTEM_BUS_T* THIS$1, uint8 VALUE$1, uint8 COUNT$1 )
{
 uint8 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 1ll );
 label$3390:;
 COUNT$1 = (uint8)((int64)COUNT$1 & 7ll);
 fb$result$1 = (uint8)(((int64)VALUE$1 >> ((int64)COUNT$1 & 63ll)) | ((int64)VALUE$1 << (~((int64)COUNT$1 | -8ll) & 63ll)));
 goto label$3391;
 label$3391:;
 return fb$result$1;
}

uint16 _ZN12SYSTEM_BUS_T11FUNC__ROL16Ett( struct $12SYSTEM_BUS_T* THIS$1, uint16 VALUE$1, uint16 COUNT$1 )
{
 uint16 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 2ll );
 label$3392:;
 COUNT$1 = (uint16)((int64)COUNT$1 & 15ll);
 fb$result$1 = (uint16)(((int64)VALUE$1 << ((int64)COUNT$1 & 63ll)) | ((int64)VALUE$1 >> (~((int64)COUNT$1 | -16ll) & 63ll)));
 goto label$3393;
 label$3393:;
 return fb$result$1;
}

uint16 _ZN12SYSTEM_BUS_T11FUNC__ROR16Ett( struct $12SYSTEM_BUS_T* THIS$1, uint16 VALUE$1, uint16 COUNT$1 )
{
 uint16 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 2ll );
 label$3394:;
 COUNT$1 = (uint16)((int64)COUNT$1 & 15ll);
 fb$result$1 = (uint16)(((int64)VALUE$1 >> ((int64)COUNT$1 & 63ll)) | ((int64)VALUE$1 << (~((int64)COUNT$1 | -16ll) & 63ll)));
 goto label$3395;
 label$3395:;
 return fb$result$1;
}

uint32 _ZN12SYSTEM_BUS_T11FUNC__ROL32Ejj( struct $12SYSTEM_BUS_T* THIS$1, uint32 VALUE$1, uint32 COUNT$1 )
{
 uint32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$3396:;
 COUNT$1 = (uint32)((int64)COUNT$1 & 31ll);
 fb$result$1 = (uint32)(((int64)VALUE$1 << ((int64)COUNT$1 & 63ll)) | ((int64)VALUE$1 >> (~((int64)COUNT$1 | -32ll) & 63ll)));
 goto label$3397;
 label$3397:;
 return fb$result$1;
}

uint32 _ZN12SYSTEM_BUS_T11FUNC__ROR32Ejj( struct $12SYSTEM_BUS_T* THIS$1, uint32 VALUE$1, uint32 COUNT$1 )
{
 uint32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$3398:;
 COUNT$1 = (uint32)((int64)COUNT$1 & 31ll);
 fb$result$1 = (uint32)(((int64)VALUE$1 >> ((int64)COUNT$1 & 63ll)) | ((int64)VALUE$1 << (~((int64)COUNT$1 | -32ll) & 63ll)));
 goto label$3399;
 label$3399:;
 return fb$result$1;
}

uint64 _ZN12SYSTEM_BUS_T11FUNC__ROL64Eyy( struct $12SYSTEM_BUS_T* THIS$1, uint64 VALUE$1, uint64 COUNT$1 )
{
 uint64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3400:;
 COUNT$1 = COUNT$1 & 63ull;
 fb$result$1 = (VALUE$1 << (COUNT$1 & 63ll)) | (VALUE$1 >> (~(COUNT$1 | 18446744073709551552ull) & 63ll));
 goto label$3401;
 label$3401:;
 return fb$result$1;
}

uint64 _ZN12SYSTEM_BUS_T11FUNC__ROR64Eyy( struct $12SYSTEM_BUS_T* THIS$1, uint64 VALUE$1, uint64 COUNT$1 )
{
 uint64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3402:;
 COUNT$1 = COUNT$1 & 63ull;
 fb$result$1 = (VALUE$1 >> (COUNT$1 & 63ll)) | (VALUE$1 << (~(COUNT$1 | 18446744073709551552ull) & 63ll));
 goto label$3403;
 label$3403:;
 return fb$result$1;
}

uint64 _ZN12SYSTEM_BUS_T9FUNC__SHLEyl( struct $12SYSTEM_BUS_T* THIS$1, uint64 A1$1, int64 B1$1 )
{
 uint64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3404:;
 fb$result$1 = A1$1 << (B1$1 & 63ll);
 goto label$3405;
 label$3405:;
 return fb$result$1;
}

uint64 _ZN12SYSTEM_BUS_T9FUNC__SHREyl( struct $12SYSTEM_BUS_T* THIS$1, uint64 A1$1, int64 B1$1 )
{
 uint64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3406:;
 fb$result$1 = A1$1 >> (B1$1 & 63ll);
 goto label$3407;
 label$3407:;
 return fb$result$1;
}

int64 _ZN12SYSTEM_BUS_T13FUNC__READBITEyl( struct $12SYSTEM_BUS_T* THIS$1, uint64 A1$1, int64 B1$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3408:;
 if( (A1$1 & (1ull << (B1$1 & 63ll))) == 0ull ) goto label$3411;
 {
  fb$result$1 = -1ll;
  goto label$3409;
 }
 goto label$3410;
 label$3411:;
 {
  fb$result$1 = 0ll;
  goto label$3409;
 }
 label$3410:;
 label$3409:;
 return fb$result$1;
}

uint64 _ZN12SYSTEM_BUS_T12FUNC__SETBITEyl( struct $12SYSTEM_BUS_T* THIS$1, uint64 A1$1, int64 B1$1 )
{
 uint64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3412:;
 fb$result$1 = A1$1 | (1ull << (B1$1 & 63ll));
 goto label$3413;
 label$3413:;
 return fb$result$1;
}

uint64 _ZN12SYSTEM_BUS_T14FUNC__RESETBITEyl( struct $12SYSTEM_BUS_T* THIS$1, uint64 A1$1, int64 B1$1 )
{
 uint64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3414:;
 fb$result$1 = A1$1 & ~(1ull << (B1$1 & 63ll));
 goto label$3415;
 label$3415:;
 return fb$result$1;
}

uint64 _ZN12SYSTEM_BUS_T15FUNC__TOGGLEBITEyl( struct $12SYSTEM_BUS_T* THIS$1, uint64 A1$1, int64 B1$1 )
{
 uint64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3416:;
 fb$result$1 = A1$1 ^ (1ull << (B1$1 & 63ll));
 goto label$3417;
 label$3417:;
 return fb$result$1;
}

uint64 _ZN12SYSTEM_BUS_T8GETUBITSEjPhx( struct $12SYSTEM_BUS_T* THIS$1, uint32 BSIZE$1, uint8* _BASE$1, int64 I$1 )
{
 uint64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3418:;
 static int64 BMASK$1;
 static int64 N$1 = 1ll;
 BMASK$1 = ~(-N$1 << ((int64)BSIZE$1 & 63ll));
 I$1 = I$1 * (int64)BSIZE$1;
 fb$result$1 = (*(uint64*)(_BASE$1 + (I$1 >> (3ll & 63ll))) >> ((I$1 & 7ll) & 63ll)) & (uint64)BMASK$1;
 goto label$3419;
 label$3419:;
 return fb$result$1;
}

int64 _ZN12SYSTEM_BUS_T7GETBITSEjPhx( struct $12SYSTEM_BUS_T* THIS$1, uint32 BSIZE$1, uint8* _BASE$1, int64 I$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3420:;
 static int64 BMASK$1;
 static int64 BVAL64$1;
 static int64 N$1 = 1ll;
 BMASK$1 = ~(-(N$1 << ((int64)BSIZE$1 & 63ll)));
 I$1 = I$1 * (int64)BSIZE$1;
 BVAL64$1 = (int64)((*(uint64*)(_BASE$1 + (I$1 >> (3ll & 63ll))) >> ((I$1 & 7ll) & 63ll)) & (uint64)BMASK$1);
 if( (BVAL64$1 & (N$1 << (((int64)BSIZE$1 + -1ll) & 63ll))) == 0ll ) goto label$3423;
 {
  fb$result$1 = BVAL64$1 | ~BMASK$1;
  goto label$3421;
 }
 label$3423:;
 label$3422:;
 fb$result$1 = BVAL64$1;
 goto label$3421;
 label$3421:;
 return fb$result$1;
}

void _ZN12SYSTEM_BUS_T7SETBITSEjPhxx( struct $12SYSTEM_BUS_T* THIS$1, uint32 BSIZE$1, uint8* _BASE$1, int64 I$1, int64 VAL$1 )
{
 label$3424:;
 static int64 BMASK$1 = 1ll;
 static uint64* BPTR64$1;
 BMASK$1 = (int64)(((uint64)BMASK$1 << ((int64)BSIZE$1 & 63ll)) + 18446744073709551615ull);
 I$1 = I$1 * (int64)BSIZE$1;
 BPTR64$1 = (uint64*)(_BASE$1 + (I$1 >> (3ll & 63ll)));
 *BPTR64$1 = (*(uint64*)BPTR64$1 & (uint64)((BMASK$1 << ((I$1 & 7ll) & 63ll)) ^ -1ll)) | (uint64)((VAL$1 & BMASK$1) << ((I$1 & 7ll) & 63ll));
 label$3425:;
}

uint64 _ZN12SYSTEM_BUS_T13CALL_GETUBITSEjPxx( struct $12SYSTEM_BUS_T* THIS$1, uint32 BSIZE$1, int64* ARRAY$1, int64 I$1 )
{
 uint64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3426:;
 uint64 vr$3 = _ZN12SYSTEM_BUS_T8GETUBITSEjPhx( THIS$1, BSIZE$1, *(uint8**)*ARRAY$1, I$1 );
 fb$result$1 = vr$3;
 goto label$3427;
 label$3427:;
 return fb$result$1;
}

int64 _ZN12SYSTEM_BUS_T12CALL_GETBITSEjPxx( struct $12SYSTEM_BUS_T* THIS$1, uint32 BSIZE$1, int64* ARRAY$1, int64 I$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3428:;
 int64 vr$3 = _ZN12SYSTEM_BUS_T7GETBITSEjPhx( THIS$1, BSIZE$1, *(uint8**)*ARRAY$1, I$1 );
 fb$result$1 = vr$3;
 goto label$3429;
 label$3429:;
 return fb$result$1;
}

void _ZN12SYSTEM_BUS_T12CALL_SETBITSEjPxxx( struct $12SYSTEM_BUS_T* THIS$1, uint32 BSIZE$1, int64* ARRAY$1, int64 I$1, int64 _VAL$1 )
{
 label$3430:;
 _ZN12SYSTEM_BUS_T7SETBITSEjPhxx( THIS$1, BSIZE$1, *(uint8**)*ARRAY$1, I$1, _VAL$1 );
 label$3431:;
}

double _ZN12SYSTEM_BUS_T15FUNC_CSNG_FLOATEf( struct $12SYSTEM_BUS_T* THIS$1, float VALUE$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3432:;
 if( ((int64)-((double)VALUE$1 <= 0x1.FFFFFDFF07036p+127) & (int64)-((double)VALUE$1 >= -0x1.FFFFFDFF07036p+127)) == 0ll ) goto label$3435;
 {
  fb$result$1 = (double)VALUE$1;
  goto label$3433;
 }
 label$3435:;
 label$3434:;
 label$3436:;
 void* vr$7 = fb_ErrorThrowEx( 6, 4483, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
 goto *vr$7;
 label$3437:;
 fb$result$1 = 0x0p+0;
 goto label$3433;
 label$3433:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T16FUNC_CSNG_DOUBLEEd( struct $12SYSTEM_BUS_T* THIS$1, double VALUE$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3438:;
 if( ((int64)-(VALUE$1 <= 0x1.FFFFFDFF07036p+127) & (int64)-(VALUE$1 >= -0x1.FFFFFDFF07036p+127)) == 0ll ) goto label$3441;
 {
  fb$result$1 = VALUE$1;
  goto label$3439;
 }
 label$3441:;
 label$3440:;
 label$3442:;
 void* vr$4 = fb_ErrorThrowEx( 6, 4491, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
 goto *vr$4;
 label$3443:;
 fb$result$1 = 0x0p+0;
 goto label$3439;
 label$3439:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T15FUNC_CDBL_FLOATEd( struct $12SYSTEM_BUS_T* THIS$1, double VALUE$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3444:;
 if( ((int64)-(VALUE$1 <= 0x1.FFFFFFFFFFFFFp+1023) & (int64)-(VALUE$1 >= -0x1.FFFFFFFFFFFFFp+1023)) == 0ll ) goto label$3447;
 {
  fb$result$1 = VALUE$1;
  goto label$3445;
 }
 label$3447:;
 label$3446:;
 label$3448:;
 void* vr$4 = fb_ErrorThrowEx( 6, 4501, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
 goto *vr$4;
 label$3449:;
 fb$result$1 = 0x0p+0;
 goto label$3445;
 label$3445:;
 return fb$result$1;
}

int32 _ZN12SYSTEM_BUS_T16FUNC_CINT_DOUBLEEd( struct $12SYSTEM_BUS_T* THIS$1, double VALUE$1 )
{
 int32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$3450:;
 if( ((int64)-(VALUE$1 < 0x1.FFFEp+14) & (int64)-(VALUE$1 >= -0x1.0001p+15)) == 0ll ) goto label$3453;
 {
  int32 vr$4 = _ZN12SYSTEM_BUS_T18QBR_DOUBLE_TO_LONGEd( THIS$1, VALUE$1 );
  fb$result$1 = vr$4;
  goto label$3451;
 }
 label$3453:;
 label$3452:;
 label$3454:;
 void* vr$5 = fb_ErrorThrowEx( 6, 4511, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
 goto *vr$5;
 label$3455:;
 fb$result$1 = 0;
 goto label$3451;
 label$3451:;
 return fb$result$1;
}

int64 _ZN12SYSTEM_BUS_T15FUNC_CINT_FLOATEd( struct $12SYSTEM_BUS_T* THIS$1, double VALUE$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3456:;
 if( ((int64)-(VALUE$1 < 0x1.FFFEp+14) & (int64)-(VALUE$1 >= -0x1.0001p+15)) == 0ll ) goto label$3459;
 {
  int64 vr$4 = _ZN12SYSTEM_BUS_T3QBREd( THIS$1, VALUE$1 );
  fb$result$1 = vr$4;
  goto label$3457;
 }
 label$3459:;
 label$3458:;
 label$3460:;
 void* vr$5 = fb_ErrorThrowEx( 6, 4519, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
 goto *vr$5;
 label$3461:;
 fb$result$1 = 0ll;
 goto label$3457;
 label$3457:;
 return fb$result$1;
}

int16 _ZN12SYSTEM_BUS_T14FUNC_CINT_LONGEi( struct $12SYSTEM_BUS_T* THIS$1, int32 VALUE$1 )
{
 int16 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 2ll );
 label$3462:;
 if( ((int64)-((int64)VALUE$1 >= -32768ll) & (int64)-((int64)VALUE$1 <= 32767ll)) == 0ll ) goto label$3465;
 {
  fb$result$1 = (int16)VALUE$1;
  goto label$3463;
 }
 label$3465:;
 label$3464:;
 label$3466:;
 void* vr$7 = fb_ErrorThrowEx( 6, 4527, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
 goto *vr$7;
 label$3467:;
 fb$result$1 = (int16)0;
 goto label$3463;
 label$3463:;
 return fb$result$1;
}

int16 _ZN12SYSTEM_BUS_T15FUNC_CINT_ULONGEj( struct $12SYSTEM_BUS_T* THIS$1, uint32 VALUE$1 )
{
 int16 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 2ll );
 label$3468:;
 if( (int64)VALUE$1 > 32767ll ) goto label$3471;
 {
  fb$result$1 = (int16)VALUE$1;
  goto label$3469;
 }
 label$3471:;
 label$3470:;
 label$3472:;
 void* vr$3 = fb_ErrorThrowEx( 6, 4535, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
 goto *vr$3;
 label$3473:;
 fb$result$1 = (int16)0;
 goto label$3469;
 label$3469:;
 return fb$result$1;
}

int16 _ZN12SYSTEM_BUS_T15FUNC_CINT_INT64Ex( struct $12SYSTEM_BUS_T* THIS$1, int64 VALUE$1 )
{
 int16 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 2ll );
 label$3474:;
 if( ((int64)-(VALUE$1 >= -32768ll) & (int64)-(VALUE$1 <= 32767ll)) == 0ll ) goto label$3477;
 {
  fb$result$1 = (int16)VALUE$1;
  goto label$3475;
 }
 label$3477:;
 label$3476:;
 label$3478:;
 void* vr$5 = fb_ErrorThrowEx( 6, 4543, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
 goto *vr$5;
 label$3479:;
 fb$result$1 = (int16)0;
 goto label$3475;
 label$3475:;
 return fb$result$1;
}

int16 _ZN12SYSTEM_BUS_T16FUNC_CINT_UINT64Ey( struct $12SYSTEM_BUS_T* THIS$1, uint64 VALUE$1 )
{
 int16 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 2ll );
 label$3480:;
 if( VALUE$1 > 32767ull ) goto label$3483;
 {
  fb$result$1 = (int16)VALUE$1;
  goto label$3481;
 }
 label$3483:;
 label$3482:;
 label$3484:;
 void* vr$2 = fb_ErrorThrowEx( 6, 4551, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
 goto *vr$2;
 label$3485:;
 fb$result$1 = (int16)0;
 goto label$3481;
 label$3481:;
 return fb$result$1;
}

int32 _ZN12SYSTEM_BUS_T16FUNC_CLNG_DOUBLEEd( struct $12SYSTEM_BUS_T* THIS$1, double VALUE$1 )
{
 int32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$3486:;
 if( ((int64)-(VALUE$1 < 0x1.FFFFFFFEp+30) & (int64)-(VALUE$1 >= -0x1.00000001p+31)) == 0ll ) goto label$3489;
 {
  int32 vr$4 = _ZN12SYSTEM_BUS_T18QBR_DOUBLE_TO_LONGEd( THIS$1, VALUE$1 );
  fb$result$1 = vr$4;
  goto label$3487;
 }
 label$3489:;
 label$3488:;
 label$3490:;
 void* vr$5 = fb_ErrorThrowEx( 6, 4562, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
 goto *vr$5;
 label$3491:;
 fb$result$1 = 0;
 goto label$3487;
 label$3487:;
 return fb$result$1;
}

int64 _ZN12SYSTEM_BUS_T15FUNC_CLNG_FLOATEd( struct $12SYSTEM_BUS_T* THIS$1, double VALUE$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3492:;
 if( ((int64)-(VALUE$1 < 0x1.FFFFFFFEp+30) & (int64)-(VALUE$1 >= -0x1.00000001p+31)) == 0ll ) goto label$3495;
 {
  int64 vr$4 = _ZN12SYSTEM_BUS_T3QBREd( THIS$1, VALUE$1 );
  fb$result$1 = vr$4;
  goto label$3493;
 }
 label$3495:;
 label$3494:;
 label$3496:;
 void* vr$5 = fb_ErrorThrowEx( 6, 4570, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
 goto *vr$5;
 label$3497:;
 fb$result$1 = 0ll;
 goto label$3493;
 label$3493:;
 return fb$result$1;
}

int32 _ZN12SYSTEM_BUS_T15FUNC_CLNG_ULONGEj( struct $12SYSTEM_BUS_T* THIS$1, uint32 VALUE$1 )
{
 int32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$3498:;
 if( (int64)VALUE$1 > 2147483647ll ) goto label$3501;
 {
  fb$result$1 = (int32)VALUE$1;
  goto label$3499;
 }
 label$3501:;
 label$3500:;
 label$3502:;
 void* vr$2 = fb_ErrorThrowEx( 6, 4578, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
 goto *vr$2;
 label$3503:;
 fb$result$1 = 0;
 goto label$3499;
 label$3499:;
 return fb$result$1;
}

int32 _ZN12SYSTEM_BUS_T15FUNC_CLNG_INT64Ex( struct $12SYSTEM_BUS_T* THIS$1, int64 VALUE$1 )
{
 int32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$3504:;
 if( ((int64)-(VALUE$1 >= -2147483648ll) & (int64)-(VALUE$1 <= 2147483647ll)) == 0ll ) goto label$3507;
 {
  fb$result$1 = (int32)VALUE$1;
  goto label$3505;
 }
 label$3507:;
 label$3506:;
 label$3508:;
 void* vr$5 = fb_ErrorThrowEx( 6, 4586, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
 goto *vr$5;
 label$3509:;
 fb$result$1 = 0;
 goto label$3505;
 label$3505:;
 return fb$result$1;
}

int32 _ZN12SYSTEM_BUS_T16FUNC_CLNG_UINT64Ey( struct $12SYSTEM_BUS_T* THIS$1, uint64 VALUE$1 )
{
 int32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$3510:;
 if( VALUE$1 > 2147483647ull ) goto label$3513;
 {
  fb$result$1 = (int32)VALUE$1;
  goto label$3511;
 }
 label$3513:;
 label$3512:;
 label$3514:;
 void* vr$2 = fb_ErrorThrowEx( 6, 4594, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
 goto *vr$2;
 label$3515:;
 fb$result$1 = 0;
 goto label$3511;
 label$3511:;
 return fb$result$1;
}

int64 _ZN12SYSTEM_BUS_T17FUNC_ROUND_DOUBLEEd( struct $12SYSTEM_BUS_T* THIS$1, double VALUE$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3516:;
 int64 vr$1 = _ZN12SYSTEM_BUS_T3QBREd( THIS$1, VALUE$1 );
 fb$result$1 = vr$1;
 goto label$3517;
 label$3517:;
 return fb$result$1;
}

int64 _ZN12SYSTEM_BUS_T16FUNC_ROUND_FLOATEd( struct $12SYSTEM_BUS_T* THIS$1, double VALUE$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3518:;
 int64 vr$1 = _ZN12SYSTEM_BUS_T3QBREd( THIS$1, VALUE$1 );
 fb$result$1 = vr$1;
 goto label$3519;
 label$3519:;
 return fb$result$1;
}

float _ZN12SYSTEM_BUS_T8FUNC_ABSEf( struct $12SYSTEM_BUS_T* THIS$1, float D$1 )
{
 float fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$3520:;
 double vr$2 = fabs( (double)D$1 );
 fb$result$1 = (float)vr$2;
 goto label$3521;
 label$3521:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8FUNC_ABSEd( struct $12SYSTEM_BUS_T* THIS$1, double D$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3522:;
 double vr$1 = fabs( D$1 );
 fb$result$1 = vr$1;
 goto label$3523;
 label$3523:;
 return fb$result$1;
}

void _ZN12SYSTEM_BUS_T8FUNC_ABSER9_FLOAT128( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* D$1 )
{
 label$3524:;
 _ZN12SYSTEM_BUS_T14K_FLOAT128_ABSEP9_FLOAT128S1_( THIS$1, D$1, D$1 );
 label$3525:;
}

void _ZN12SYSTEM_BUS_T8FUNC_ABSER9_FLOAT256( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* D$1 )
{
 label$3526:;
 _ZN12SYSTEM_BUS_T14K_FLOAT256_ABSEP9_FLOAT256S1_( THIS$1, D$1, D$1 );
 label$3527:;
}

void _ZN12SYSTEM_BUS_T8FUNC_ABSER9_FLOAT512( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* D$1 )
{
 label$3528:;
 _ZN12SYSTEM_BUS_T14K_FLOAT512_ABSEP9_FLOAT512S1_( THIS$1, D$1, D$1 );
 label$3529:;
}

uint8 _ZN12SYSTEM_BUS_T8FUNC_ABSEh( struct $12SYSTEM_BUS_T* THIS$1, uint8 D$1 )
{
 uint8 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 1ll );
 label$3530:;
 fb$result$1 = D$1;
 goto label$3531;
 label$3531:;
 return fb$result$1;
}

uint16 _ZN12SYSTEM_BUS_T8FUNC_ABSEt( struct $12SYSTEM_BUS_T* THIS$1, uint16 D$1 )
{
 uint16 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 2ll );
 label$3532:;
 fb$result$1 = D$1;
 goto label$3533;
 label$3533:;
 return fb$result$1;
}

uint32 _ZN12SYSTEM_BUS_T8FUNC_ABSEj( struct $12SYSTEM_BUS_T* THIS$1, uint32 D$1 )
{
 uint32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$3534:;
 fb$result$1 = D$1;
 goto label$3535;
 label$3535:;
 return fb$result$1;
}

uint64 _ZN12SYSTEM_BUS_T8FUNC_ABSEy( struct $12SYSTEM_BUS_T* THIS$1, uint64 D$1 )
{
 uint64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3536:;
 fb$result$1 = D$1;
 goto label$3537;
 label$3537:;
 return fb$result$1;
}

int8 _ZN12SYSTEM_BUS_T8FUNC_ABSEa( struct $12SYSTEM_BUS_T* THIS$1, int8 D$1 )
{
 int8 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 1ll );
 label$3538:;
 fb$result$1 = (int8)__builtin_llabs( (int64)D$1 );
 goto label$3539;
 label$3539:;
 return fb$result$1;
}

int16 _ZN12SYSTEM_BUS_T8FUNC_ABSEs( struct $12SYSTEM_BUS_T* THIS$1, int16 D$1 )
{
 int16 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 2ll );
 label$3540:;
 fb$result$1 = (int16)__builtin_llabs( (int64)D$1 );
 goto label$3541;
 label$3541:;
 return fb$result$1;
}

int32 _ZN12SYSTEM_BUS_T8FUNC_ABSEi( struct $12SYSTEM_BUS_T* THIS$1, int32 D$1 )
{
 int32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$3542:;
 fb$result$1 = (int32)__builtin_llabs( (int64)D$1 );
 goto label$3543;
 label$3543:;
 return fb$result$1;
}

int64 _ZN12SYSTEM_BUS_T8FUNC_ABSEx( struct $12SYSTEM_BUS_T* THIS$1, int64 D$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3544:;
 int64 vr$1 = llabs( D$1 );
 fb$result$1 = vr$1;
 goto label$3545;
 label$3545:;
 return fb$result$1;
}

int64 _ZN12SYSTEM_BUS_T12CHECK_LBOUNDEPxii( struct $12SYSTEM_BUS_T* THIS$1, int64* ARRAY$1, int32 INDEX$1, int32 NUM_INDEXES$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3546:;
 static int64 RET$1;
 DISABLEEVENTS$ = 1;
 int64 vr$1 = _ZN12SYSTEM_BUS_T11FUNC_LBOUNDEPxii( THIS$1, ARRAY$1, INDEX$1, NUM_INDEXES$1 );
 RET$1 = vr$1;
 NEW_ERROR$ = 0u;
 DISABLEEVENTS$ = 0;
 fb$result$1 = RET$1;
 goto label$3547;
 label$3547:;
 return fb$result$1;
}

int64 _ZN12SYSTEM_BUS_T12CHECK_UBOUNDEPxii( struct $12SYSTEM_BUS_T* THIS$1, int64* ARRAY$1, int32 INDEX$1, int32 NUM_INDEXES$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3548:;
 static int64 RET$1;
 DISABLEEVENTS$ = 1;
 int64 vr$1 = _ZN12SYSTEM_BUS_T11FUNC_UBOUNDEPxii( THIS$1, ARRAY$1, INDEX$1, NUM_INDEXES$1 );
 RET$1 = vr$1;
 NEW_ERROR$ = 0u;
 DISABLEEVENTS$ = 0;
 fb$result$1 = RET$1;
 goto label$3549;
 label$3549:;
 return fb$result$1;
}

int64 _ZN12SYSTEM_BUS_T11ARRAY_CHECKEyy( struct $12SYSTEM_BUS_T* THIS$1, uint64 INDEX$1, uint64 LIMIT$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3550:;
 if( INDEX$1 >= LIMIT$1 ) goto label$3553;
 {
  fb$result$1 = (int64)INDEX$1;
  goto label$3551;
 }
 goto label$3552;
 label$3553:;
 {
  label$3554:;
  void* vr$1 = fb_ErrorThrowEx( 9, 4703, (uint8*)"/home/main/project-manhattan/memory.bi", (void*)0ull, (void*)0ull );
  goto *vr$1;
  label$3555:;
  fb$result$1 = 0ll;
  goto label$3551;
 }
 label$3552:;
 label$3551:;
 return fb$result$1;
}

int32 _ZN12SYSTEM_BUS_T14LOGICAL_DRIVESEv( struct $12SYSTEM_BUS_T* THIS$1 )
{
 int32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$3556:;
 fb$result$1 = 0;
 goto label$3557;
 label$3557:;
 return fb$result$1;
}

int32 _ZN12SYSTEM_BUS_T8FUNC_SGNEh( struct $12SYSTEM_BUS_T* THIS$1, uint8 V$1 )
{
 int32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$3558:;
 double vr$1 = _ZN12SYSTEM_BUS_T6K_SIGNEh( THIS$1, V$1 );
 fb$result$1 = ((int32)__builtin_nearbyint( vr$1 ));
 goto label$3559;
 label$3559:;
 return fb$result$1;
}

int32 _ZN12SYSTEM_BUS_T8FUNC_SGNEa( struct $12SYSTEM_BUS_T* THIS$1, int8 V$1 )
{
 int32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$3560:;
 double vr$1 = _ZN12SYSTEM_BUS_T6K_SIGNEa( THIS$1, V$1 );
 fb$result$1 = ((int32)__builtin_nearbyint( vr$1 ));
 goto label$3561;
 label$3561:;
 return fb$result$1;
}

int32 _ZN12SYSTEM_BUS_T8FUNC_SGNEt( struct $12SYSTEM_BUS_T* THIS$1, uint16 V$1 )
{
 int32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$3562:;
 double vr$1 = _ZN12SYSTEM_BUS_T6K_SIGNEt( THIS$1, V$1 );
 fb$result$1 = ((int32)__builtin_nearbyint( vr$1 ));
 goto label$3563;
 label$3563:;
 return fb$result$1;
}

int32 _ZN12SYSTEM_BUS_T8FUNC_SGNEs( struct $12SYSTEM_BUS_T* THIS$1, int16 V$1 )
{
 int32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$3564:;
 double vr$1 = _ZN12SYSTEM_BUS_T6K_SIGNEs( THIS$1, V$1 );
 fb$result$1 = ((int32)__builtin_nearbyint( vr$1 ));
 goto label$3565;
 label$3565:;
 return fb$result$1;
}

int32 _ZN12SYSTEM_BUS_T8FUNC_SGNEj( struct $12SYSTEM_BUS_T* THIS$1, uint32 V$1 )
{
 int32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$3566:;
 double vr$1 = _ZN12SYSTEM_BUS_T6K_SIGNEj( THIS$1, V$1 );
 fb$result$1 = ((int32)__builtin_nearbyint( vr$1 ));
 goto label$3567;
 label$3567:;
 return fb$result$1;
}

int32 _ZN12SYSTEM_BUS_T8FUNC_SGNEi( struct $12SYSTEM_BUS_T* THIS$1, int32 V$1 )
{
 int32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$3568:;
 double vr$1 = _ZN12SYSTEM_BUS_T6K_SIGNEi( THIS$1, V$1 );
 fb$result$1 = ((int32)__builtin_nearbyint( vr$1 ));
 goto label$3569;
 label$3569:;
 return fb$result$1;
}

int32 _ZN12SYSTEM_BUS_T8FUNC_SGNEy( struct $12SYSTEM_BUS_T* THIS$1, uint64 V$1 )
{
 int32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$3570:;
 double vr$1 = _ZN12SYSTEM_BUS_T6K_SIGNEy( THIS$1, V$1 );
 fb$result$1 = ((int32)__builtin_nearbyint( vr$1 ));
 goto label$3571;
 label$3571:;
 return fb$result$1;
}

int32 _ZN12SYSTEM_BUS_T8FUNC_SGNEx( struct $12SYSTEM_BUS_T* THIS$1, int64 V$1 )
{
 int32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$3572:;
 double vr$1 = _ZN12SYSTEM_BUS_T6K_SIGNEx( THIS$1, V$1 );
 fb$result$1 = ((int32)__builtin_nearbyint( vr$1 ));
 goto label$3573;
 label$3573:;
 return fb$result$1;
}

int32 _ZN12SYSTEM_BUS_T8FUNC_SGNEf( struct $12SYSTEM_BUS_T* THIS$1, float V$1 )
{
 int32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$3574:;
 double vr$1 = _ZN12SYSTEM_BUS_T6K_SIGNEf( THIS$1, V$1 );
 fb$result$1 = ((int32)__builtin_nearbyint( vr$1 ));
 goto label$3575;
 label$3575:;
 return fb$result$1;
}

int32 _ZN12SYSTEM_BUS_T8FUNC_SGNEd( struct $12SYSTEM_BUS_T* THIS$1, double V$1 )
{
 int32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$3576:;
 double vr$1 = _ZN12SYSTEM_BUS_T6K_SIGNEd( THIS$1, V$1 );
 fb$result$1 = ((int32)__builtin_nearbyint( vr$1 ));
 goto label$3577;
 label$3577:;
 return fb$result$1;
}

int32 _ZN12SYSTEM_BUS_T8FUNC_SGNER9_FLOAT128( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* V$1 )
{
 int32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$3578:;
 double vr$1 = _ZN12SYSTEM_BUS_T6K_SIGNER9_FLOAT128( THIS$1, V$1 );
 fb$result$1 = ((int32)__builtin_nearbyint( vr$1 ));
 goto label$3579;
 label$3579:;
 return fb$result$1;
}

int32 _ZN12SYSTEM_BUS_T8FUNC_SGNER9_FLOAT256( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* V$1 )
{
 int32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$3580:;
 double vr$1 = _ZN12SYSTEM_BUS_T6K_SIGNER9_FLOAT256( THIS$1, V$1 );
 fb$result$1 = ((int32)__builtin_nearbyint( vr$1 ));
 goto label$3581;
 label$3581:;
 return fb$result$1;
}

int32 _ZN12SYSTEM_BUS_T8FUNC_SGNER9_FLOAT512( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* V$1 )
{
 int32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$3582:;
 double vr$1 = _ZN12SYSTEM_BUS_T6K_SIGNER9_FLOAT512( THIS$1, V$1 );
 fb$result$1 = ((int32)__builtin_nearbyint( vr$1 ));
 goto label$3583;
 label$3583:;
 return fb$result$1;
}

uint32 _ZN12SYSTEM_BUS_T11FUNC__RGB32Eiiii( struct $12SYSTEM_BUS_T* THIS$1, int32 R$1, int32 G$1, int32 B$1, int32 A$1 )
{
 uint32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$3584:;
 double vr$1 = _ZN12SYSTEM_BUS_T7K_CLAMPEiii( THIS$1, R$1, 0, 255 );
 R$1 = ((int32)__builtin_nearbyint( vr$1 ));
 double vr$3 = _ZN12SYSTEM_BUS_T7K_CLAMPEiii( THIS$1, G$1, 0, 255 );
 G$1 = ((int32)__builtin_nearbyint( vr$3 ));
 double vr$5 = _ZN12SYSTEM_BUS_T7K_CLAMPEiii( THIS$1, B$1, 0, 255 );
 B$1 = ((int32)__builtin_nearbyint( vr$5 ));
 double vr$7 = _ZN12SYSTEM_BUS_T7K_CLAMPEiii( THIS$1, A$1, 0, 255 );
 A$1 = ((int32)__builtin_nearbyint( vr$7 ));
 fb$result$1 = (uint32)(((((int64)A$1 << (24ll & 63ll)) + ((int64)R$1 << (16ll & 63ll))) + ((int64)G$1 << (8ll & 63ll))) + (int64)B$1);
 goto label$3585;
 label$3585:;
 return fb$result$1;
}

uint32 _ZN12SYSTEM_BUS_T11FUNC__RGB32Eiii( struct $12SYSTEM_BUS_T* THIS$1, int32 R$1, int32 G$1, int32 B$1 )
{
 uint32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$3586:;
 double vr$1 = _ZN12SYSTEM_BUS_T7K_CLAMPEiii( THIS$1, R$1, 0, 255 );
 R$1 = ((int32)__builtin_nearbyint( vr$1 ));
 double vr$3 = _ZN12SYSTEM_BUS_T7K_CLAMPEiii( THIS$1, G$1, 0, 255 );
 G$1 = ((int32)__builtin_nearbyint( vr$3 ));
 double vr$5 = _ZN12SYSTEM_BUS_T7K_CLAMPEiii( THIS$1, B$1, 0, 255 );
 B$1 = ((int32)__builtin_nearbyint( vr$5 ));
 fb$result$1 = (uint32)(((((int64)R$1 << (16ll & 63ll)) + ((int64)G$1 << (8ll & 63ll))) + (int64)B$1) | 4278190080ll);
 goto label$3587;
 label$3587:;
 return fb$result$1;
}

uint32 _ZN12SYSTEM_BUS_T11FUNC__RGB32Eii( struct $12SYSTEM_BUS_T* THIS$1, int32 I$1, int32 A$1 )
{
 uint32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$3588:;
 double vr$1 = _ZN12SYSTEM_BUS_T7K_CLAMPEiii( THIS$1, I$1, 0, 255 );
 I$1 = ((int32)__builtin_nearbyint( vr$1 ));
 double vr$3 = _ZN12SYSTEM_BUS_T7K_CLAMPEiii( THIS$1, A$1, 0, 255 );
 A$1 = ((int32)__builtin_nearbyint( vr$3 ));
 fb$result$1 = (uint32)(((((int64)A$1 << (24ll & 63ll)) + ((int64)I$1 << (16ll & 63ll))) + ((int64)I$1 << (8ll & 63ll))) + (int64)I$1);
 goto label$3589;
 label$3589:;
 return fb$result$1;
}

uint32 _ZN12SYSTEM_BUS_T11FUNC__RGB32Ei( struct $12SYSTEM_BUS_T* THIS$1, int32 I$1 )
{
 uint32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$3590:;
 double vr$1 = _ZN12SYSTEM_BUS_T7K_CLAMPEiii( THIS$1, I$1, 0, 255 );
 I$1 = ((int32)__builtin_nearbyint( vr$1 ));
 fb$result$1 = (uint32)(((((int64)I$1 << (16ll & 63ll)) + ((int64)I$1 << (8ll & 63ll))) + (int64)I$1) | 4278190080ll);
 goto label$3591;
 label$3591:;
 return fb$result$1;
}

uint32 _ZN12SYSTEM_BUS_T12FUNC__RGBA32Eiiii( struct $12SYSTEM_BUS_T* THIS$1, int32 R$1, int32 G$1, int32 B$1, int32 A$1 )
{
 uint32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$3592:;
 double vr$1 = _ZN12SYSTEM_BUS_T7K_CLAMPEiii( THIS$1, R$1, 0, 255 );
 R$1 = ((int32)__builtin_nearbyint( vr$1 ));
 double vr$3 = _ZN12SYSTEM_BUS_T7K_CLAMPEiii( THIS$1, G$1, 0, 255 );
 G$1 = ((int32)__builtin_nearbyint( vr$3 ));
 double vr$5 = _ZN12SYSTEM_BUS_T7K_CLAMPEiii( THIS$1, B$1, 0, 255 );
 B$1 = ((int32)__builtin_nearbyint( vr$5 ));
 double vr$7 = _ZN12SYSTEM_BUS_T7K_CLAMPEiii( THIS$1, A$1, 0, 255 );
 A$1 = ((int32)__builtin_nearbyint( vr$7 ));
 fb$result$1 = (uint32)(((((int64)A$1 << (24ll & 63ll)) + ((int64)R$1 << (16ll & 63ll))) + ((int64)G$1 << (8ll & 63ll))) + (int64)B$1);
 goto label$3593;
 label$3593:;
 return fb$result$1;
}

int32 _ZN12SYSTEM_BUS_T13FUNC__ALPHA32Ej( struct $12SYSTEM_BUS_T* THIS$1, uint32 COL$1 )
{
 int32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$3594:;
 fb$result$1 = (int32)((int64)COL$1 >> (24ll & 63ll));
 goto label$3595;
 label$3595:;
 return fb$result$1;
}

int32 _ZN12SYSTEM_BUS_T11FUNC__RED32Ej( struct $12SYSTEM_BUS_T* THIS$1, uint32 COL$1 )
{
 int32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$3596:;
 fb$result$1 = (int32)(((int64)COL$1 >> (16ll & 63ll)) & 255ll);
 goto label$3597;
 label$3597:;
 return fb$result$1;
}

int32 _ZN12SYSTEM_BUS_T13FUNC__GREEN32Ej( struct $12SYSTEM_BUS_T* THIS$1, uint32 COL$1 )
{
 int32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$3598:;
 fb$result$1 = (int32)(((int64)COL$1 >> (8ll & 63ll)) & 255ll);
 goto label$3599;
 label$3599:;
 return fb$result$1;
}

int32 _ZN12SYSTEM_BUS_T12FUNC__BLUE32Ej( struct $12SYSTEM_BUS_T* THIS$1, uint32 COL$1 )
{
 int32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$3600:;
 fb$result$1 = (int32)((int64)COL$1 & 255ll);
 goto label$3601;
 label$3601:;
 return fb$result$1;
}

uint16 _ZN12SYSTEM_BUS_T19VARPTR_DBLOCK_CHECKEPh( struct $12SYSTEM_BUS_T* THIS$1, uint8* OFF$1 )
{
 uint16 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 2ll );
 label$3602:;
 if( OFF$1 >= *(uint8**)((int64)(double*)MEM64$ + 534528ll) ) goto label$3605;
 {
  fb$result$1 = (uint16)((int64)OFF$1 - *(int64*)((int64)(double*)MEM64$ + 10240ll));
  goto label$3603;
 }
 goto label$3604;
 label$3605:;
 {
  fb$result$1 = (uint16)((int64)(uint16)((int64)OFF$1 - *(int64*)MEM64$) & 15ll);
  goto label$3603;
 }
 label$3604:;
 label$3603:;
 return fb$result$1;
}

uint16 _ZN12SYSTEM_BUS_T19VARSEG_DBLOCK_CHECKEPh( struct $12SYSTEM_BUS_T* THIS$1, uint8* OFF$1 )
{
 uint16 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 2ll );
 label$3606:;
 if( OFF$1 >= *(uint8**)((int64)(double*)MEM64$ + 534528ll) ) goto label$3609;
 {
  fb$result$1 = (uint16)80u;
  goto label$3607;
 }
 goto label$3608;
 label$3609:;
 {
  fb$result$1 = (uint16)((int32)__builtin_nearbyint( (double)((int64)OFF$1 - *(int64*)MEM64$) / 0x1.p+4 ));
  goto label$3607;
 }
 label$3608:;
 label$3607:;
 return fb$result$1;
}

void _ZN12SYSTEM_BUS_T22K_FLOAT128_FROM_DOUBLEEP9_FLOAT128Pd( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* A$1, double* B$1 )
{
 label$3610:;
 _ZN9_FLOAT128aSEd( A$1, *B$1 );
 label$3611:;
}

void _ZN12SYSTEM_BUS_T20K_FLOAT128_TO_DOUBLEEP9_FLOAT128Pd( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* A$1, double* B$1 )
{
 label$3612:;
 uint64 vr$0 = _ZN9_FLOAT128cvyEv( A$1 );
 *B$1 = (double)vr$0;
 label$3613:;
}

void _ZN12SYSTEM_BUS_T14K_FLOAT128_ADDEP9_FLOAT128S1_S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* A$1, struct $9_FLOAT128* B$1, struct $9_FLOAT128* C$1 )
{
 struct $9_FLOAT128 TMP$2450$1;
 label$3614:;
 struct $9_FLOAT128* vr$1 = _ZplR9_FLOAT128S0_( &TMP$2450$1, A$1, B$1 );
 _ZN9_FLOAT128aSERS_( C$1, vr$1 );
 label$3615:;
}

void _ZN12SYSTEM_BUS_T14K_FLOAT128_SUBEP9_FLOAT128S1_S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* A$1, struct $9_FLOAT128* B$1, struct $9_FLOAT128* C$1 )
{
 struct $9_FLOAT128 TMP$2451$1;
 label$3616:;
 struct $9_FLOAT128* vr$1 = _ZmiR9_FLOAT128S0_( &TMP$2451$1, A$1, B$1 );
 _ZN9_FLOAT128aSERS_( C$1, vr$1 );
 label$3617:;
}

void _ZN12SYSTEM_BUS_T14K_FLOAT128_ABSEP9_FLOAT128S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* A$1, struct $9_FLOAT128* B$1 )
{
 label$3618:;
 uint64 vr$0 = _ZN9_FLOAT128cvyEv( A$1 );
 if( vr$0 <= 0ull ) goto label$3621;
 {
  _ZN9_FLOAT128aSERS_( B$1, A$1 );
 }
 goto label$3620;
 label$3621:;
 {
  struct $9_FLOAT128 TMP$2452$2;
  struct $9_FLOAT128* vr$2 = _ZngR9_FLOAT128( &TMP$2452$2, A$1 );
  _ZN9_FLOAT128aSERS_( B$1, vr$2 );
 }
 label$3620:;
 label$3619:;
}

void _ZN12SYSTEM_BUS_T14K_FLOAT128_MULEP9_FLOAT128S1_S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* A$1, struct $9_FLOAT128* B$1, struct $9_FLOAT128* C$1 )
{
 struct $9_FLOAT128 TMP$2453$1;
 label$3622:;
 struct $9_FLOAT128* vr$1 = _ZmlR9_FLOAT128S0_( &TMP$2453$1, A$1, B$1 );
 _ZN9_FLOAT128aSERS_( C$1, vr$1 );
 label$3623:;
}

void _ZN12SYSTEM_BUS_T14K_FLOAT128_DIVEP9_FLOAT128S1_S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* A$1, struct $9_FLOAT128* B$1, struct $9_FLOAT128* C$1 )
{
 struct $9_FLOAT128 TMP$2454$1;
 label$3624:;
 struct $9_FLOAT128* vr$1 = _ZdvR9_FLOAT128S0_( &TMP$2454$1, A$1, B$1 );
 _ZN9_FLOAT128aSERS_( C$1, vr$1 );
 label$3625:;
}

int64 _ZN12SYSTEM_BUS_T14K_FLOAT128_CMPEP9_FLOAT128S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* A$1, struct $9_FLOAT128* B$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3626:;
 uint64 vr$1 = _ZN9_FLOAT128cvyEv( A$1 );
 uint64 vr$2 = _ZN9_FLOAT128cvyEv( B$1 );
 if( vr$1 <= vr$2 ) goto label$3629;
 {
  fb$result$1 = 1ll;
  goto label$3627;
 }
 goto label$3628;
 label$3629:;
 uint64 vr$3 = _ZN9_FLOAT128cvyEv( A$1 );
 uint64 vr$4 = _ZN9_FLOAT128cvyEv( B$1 );
 if( vr$3 >= vr$4 ) goto label$3630;
 {
  fb$result$1 = -1ll;
  goto label$3627;
 }
 goto label$3628;
 label$3630:;
 {
  fb$result$1 = 0ll;
  goto label$3627;
 }
 label$3628:;
 label$3627:;
 return fb$result$1;
}

void _ZN12SYSTEM_BUS_T22K_FLOAT256_FROM_DOUBLEEP9_FLOAT256Pd( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* A$1, double* B$1 )
{
 label$3631:;
 _ZN9_FLOAT256aSEd( A$1, *B$1 );
 label$3632:;
}

void _ZN12SYSTEM_BUS_T20K_FLOAT256_TO_DOUBLEEP9_FLOAT256Pd( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* A$1, double* B$1 )
{
 label$3633:;
 uint64 vr$0 = _ZN9_FLOAT256cvyEv( A$1 );
 *B$1 = (double)vr$0;
 label$3634:;
}

void _ZN12SYSTEM_BUS_T14K_FLOAT256_ADDEP9_FLOAT256S1_S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* A$1, struct $9_FLOAT256* B$1, struct $9_FLOAT256* C$1 )
{
 struct $9_FLOAT256 TMP$2455$1;
 label$3635:;
 struct $9_FLOAT256* vr$1 = _ZplR9_FLOAT256S0_( &TMP$2455$1, A$1, B$1 );
 _ZN9_FLOAT256aSERS_( C$1, vr$1 );
 label$3636:;
}

void _ZN12SYSTEM_BUS_T14K_FLOAT256_SUBEP9_FLOAT256S1_S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* A$1, struct $9_FLOAT256* B$1, struct $9_FLOAT256* C$1 )
{
 struct $9_FLOAT256 TMP$2456$1;
 label$3637:;
 struct $9_FLOAT256* vr$1 = _ZmiR9_FLOAT256S0_( &TMP$2456$1, A$1, B$1 );
 _ZN9_FLOAT256aSERS_( C$1, vr$1 );
 label$3638:;
}

void _ZN12SYSTEM_BUS_T14K_FLOAT256_ABSEP9_FLOAT256S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* A$1, struct $9_FLOAT256* B$1 )
{
 label$3639:;
 uint64 vr$0 = _ZN9_FLOAT256cvyEv( A$1 );
 if( vr$0 <= 0ull ) goto label$3642;
 {
  _ZN9_FLOAT256aSERS_( B$1, A$1 );
 }
 goto label$3641;
 label$3642:;
 {
  struct $9_FLOAT256 TMP$2457$2;
  struct $9_FLOAT256* vr$2 = _ZngR9_FLOAT256( &TMP$2457$2, A$1 );
  _ZN9_FLOAT256aSERS_( B$1, vr$2 );
 }
 label$3641:;
 label$3640:;
}

void _ZN12SYSTEM_BUS_T14K_FLOAT256_MULEP9_FLOAT256S1_S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* A$1, struct $9_FLOAT256* B$1, struct $9_FLOAT256* C$1 )
{
 struct $9_FLOAT256 TMP$2458$1;
 label$3643:;
 struct $9_FLOAT256* vr$1 = _ZmlR9_FLOAT256S0_( &TMP$2458$1, A$1, B$1 );
 _ZN9_FLOAT256aSERS_( C$1, vr$1 );
 label$3644:;
}

void _ZN12SYSTEM_BUS_T14K_FLOAT256_DIVEP9_FLOAT256S1_S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* A$1, struct $9_FLOAT256* B$1, struct $9_FLOAT256* C$1 )
{
 struct $9_FLOAT256 TMP$2459$1;
 label$3645:;
 struct $9_FLOAT256* vr$1 = _ZdvR9_FLOAT256S0_( &TMP$2459$1, A$1, B$1 );
 _ZN9_FLOAT256aSERS_( C$1, vr$1 );
 label$3646:;
}

int64 _ZN12SYSTEM_BUS_T14K_FLOAT256_CMPEP9_FLOAT256S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* A$1, struct $9_FLOAT256* B$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3647:;
 uint64 vr$1 = _ZN9_FLOAT256cvyEv( A$1 );
 uint64 vr$2 = _ZN9_FLOAT256cvyEv( B$1 );
 if( vr$1 <= vr$2 ) goto label$3650;
 {
  fb$result$1 = 1ll;
  goto label$3648;
 }
 goto label$3649;
 label$3650:;
 uint64 vr$3 = _ZN9_FLOAT256cvyEv( A$1 );
 uint64 vr$4 = _ZN9_FLOAT256cvyEv( B$1 );
 if( vr$3 >= vr$4 ) goto label$3651;
 {
  fb$result$1 = -1ll;
  goto label$3648;
 }
 goto label$3649;
 label$3651:;
 {
  fb$result$1 = 0ll;
  goto label$3648;
 }
 label$3649:;
 label$3648:;
 return fb$result$1;
}

void _ZN12SYSTEM_BUS_T22K_FLOAT512_FROM_DOUBLEEP9_FLOAT512Pd( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* A$1, double* B$1 )
{
 label$3652:;
 _ZN9_FLOAT512aSEd( A$1, *B$1 );
 label$3653:;
}

void _ZN12SYSTEM_BUS_T20K_FLOAT512_TO_DOUBLEEP9_FLOAT512Pd( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* A$1, double* B$1 )
{
 label$3654:;
 uint64 vr$0 = _ZN9_FLOAT512cvyEv( A$1 );
 *B$1 = (double)vr$0;
 label$3655:;
}

void _ZN12SYSTEM_BUS_T14K_FLOAT512_ADDEP9_FLOAT512S1_S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* A$1, struct $9_FLOAT512* B$1, struct $9_FLOAT512* C$1 )
{
 struct $9_FLOAT512 TMP$2460$1;
 label$3656:;
 struct $9_FLOAT512* vr$1 = _ZplR9_FLOAT512S0_( &TMP$2460$1, A$1, B$1 );
 _ZN9_FLOAT512aSERS_( C$1, vr$1 );
 label$3657:;
}

void _ZN12SYSTEM_BUS_T14K_FLOAT512_SUBEP9_FLOAT512S1_S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* A$1, struct $9_FLOAT512* B$1, struct $9_FLOAT512* C$1 )
{
 struct $9_FLOAT512 TMP$2461$1;
 label$3658:;
 struct $9_FLOAT512* vr$1 = _ZmiR9_FLOAT512S0_( &TMP$2461$1, A$1, B$1 );
 _ZN9_FLOAT512aSERS_( C$1, vr$1 );
 label$3659:;
}

void _ZN12SYSTEM_BUS_T14K_FLOAT512_ABSEP9_FLOAT512S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* A$1, struct $9_FLOAT512* B$1 )
{
 label$3660:;
 uint64 vr$0 = _ZN9_FLOAT512cvyEv( A$1 );
 if( vr$0 <= 0ull ) goto label$3663;
 {
  _ZN9_FLOAT512aSERS_( B$1, A$1 );
 }
 goto label$3662;
 label$3663:;
 {
  struct $9_FLOAT512 TMP$2462$2;
  struct $9_FLOAT512* vr$2 = _ZngR9_FLOAT512( &TMP$2462$2, A$1 );
  _ZN9_FLOAT512aSERS_( B$1, vr$2 );
 }
 label$3662:;
 label$3661:;
}

void _ZN12SYSTEM_BUS_T14K_FLOAT512_MULEP9_FLOAT512S1_S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* A$1, struct $9_FLOAT512* B$1, struct $9_FLOAT512* C$1 )
{
 struct $9_FLOAT512 TMP$2463$1;
 label$3664:;
 struct $9_FLOAT512* vr$1 = _ZmlR9_FLOAT512S0_( &TMP$2463$1, A$1, B$1 );
 _ZN9_FLOAT512aSERS_( C$1, vr$1 );
 label$3665:;
}

void _ZN12SYSTEM_BUS_T14K_FLOAT512_DIVEP9_FLOAT512S1_S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* A$1, struct $9_FLOAT512* B$1, struct $9_FLOAT512* C$1 )
{
 struct $9_FLOAT512 TMP$2464$1;
 label$3666:;
 struct $9_FLOAT512* vr$1 = _ZdvR9_FLOAT512S0_( &TMP$2464$1, A$1, B$1 );
 _ZN9_FLOAT512aSERS_( C$1, vr$1 );
 label$3667:;
}

int64 _ZN12SYSTEM_BUS_T14K_FLOAT512_CMPEP9_FLOAT512S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* A$1, struct $9_FLOAT512* B$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3668:;
 uint64 vr$1 = _ZN9_FLOAT512cvyEv( A$1 );
 uint64 vr$2 = _ZN9_FLOAT512cvyEv( B$1 );
 if( vr$1 <= vr$2 ) goto label$3671;
 {
  fb$result$1 = 1ll;
  goto label$3669;
 }
 goto label$3670;
 label$3671:;
 uint64 vr$3 = _ZN9_FLOAT512cvyEv( A$1 );
 uint64 vr$4 = _ZN9_FLOAT512cvyEv( B$1 );
 if( vr$3 >= vr$4 ) goto label$3672;
 {
  fb$result$1 = -1ll;
  goto label$3669;
 }
 goto label$3670;
 label$3672:;
 {
  fb$result$1 = 0ll;
  goto label$3669;
 }
 label$3670:;
 label$3669:;
 return fb$result$1;
}

void _ZN12SYSTEM_BUS_T8K_MEMSETEPhhh( struct $12SYSTEM_BUS_T* THIS$1, uint8* DE$1, uint8 SZ$1, uint8 V$1 )
{
 label$3673:;
 SZ$1 = (uint8)((int64)SZ$1 - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 {
  uint8 MEM_LOC$2;
  MEM_LOC$2 = *(uint8*)NIBBLES$;
  uint8 TMP$2465$2;
  TMP$2465$2 = SZ$1;
  goto label$3675;
  label$3678:;
  {
   *(uint8*)(DE$1 + (int64)MEM_LOC$2) = V$1;
  }
  label$3676:;
  MEM_LOC$2 = (uint8)((int64)MEM_LOC$2 + 1ll);
  label$3675:;
  if( (int64)MEM_LOC$2 <= (int64)TMP$2465$2 ) goto label$3678;
  label$3677:;
 }
 label$3674:;
}

void _ZN12SYSTEM_BUS_T8K_MEMSETEPaaa( struct $12SYSTEM_BUS_T* THIS$1, int8* DE$1, int8 SZ$1, int8 V$1 )
{
 label$3679:;
 SZ$1 = (int8)((int64)SZ$1 - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 {
  int8 MEM_LOC$2;
  MEM_LOC$2 = *(int8*)NIBBLES$;
  int8 TMP$2466$2;
  TMP$2466$2 = SZ$1;
  goto label$3681;
  label$3684:;
  {
   *(int8*)((uint8*)DE$1 + (int64)MEM_LOC$2) = V$1;
  }
  label$3682:;
  MEM_LOC$2 = (int8)((int64)MEM_LOC$2 + 1ll);
  label$3681:;
  if( (int64)MEM_LOC$2 <= (int64)TMP$2466$2 ) goto label$3684;
  label$3683:;
 }
 label$3680:;
}

void _ZN12SYSTEM_BUS_T8K_MEMSETEPttt( struct $12SYSTEM_BUS_T* THIS$1, uint16* DE$1, uint16 SZ$1, uint16 V$1 )
{
 label$3685:;
 SZ$1 = (uint16)((int64)SZ$1 - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 {
  uint16 MEM_LOC$2;
  MEM_LOC$2 = (uint16)*(uint8*)NIBBLES$;
  uint16 TMP$2467$2;
  TMP$2467$2 = SZ$1;
  goto label$3687;
  label$3690:;
  {
   *(uint16*)((uint8*)DE$1 + ((int64)MEM_LOC$2 << (1ll & 63ll))) = V$1;
  }
  label$3688:;
  MEM_LOC$2 = (uint16)((int64)MEM_LOC$2 + 1ll);
  label$3687:;
  if( (int64)MEM_LOC$2 <= (int64)TMP$2467$2 ) goto label$3690;
  label$3689:;
 }
 label$3686:;
}

void _ZN12SYSTEM_BUS_T8K_MEMSETEPsss( struct $12SYSTEM_BUS_T* THIS$1, int16* DE$1, int16 SZ$1, int16 V$1 )
{
 label$3691:;
 SZ$1 = (int16)((int64)SZ$1 - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 {
  int16 MEM_LOC$2;
  MEM_LOC$2 = (int16)*(uint8*)NIBBLES$;
  int16 TMP$2468$2;
  TMP$2468$2 = SZ$1;
  goto label$3693;
  label$3696:;
  {
   *(int16*)((uint8*)DE$1 + ((int64)MEM_LOC$2 << (1ll & 63ll))) = V$1;
  }
  label$3694:;
  MEM_LOC$2 = (int16)((int64)MEM_LOC$2 + 1ll);
  label$3693:;
  if( (int64)MEM_LOC$2 <= (int64)TMP$2468$2 ) goto label$3696;
  label$3695:;
 }
 label$3692:;
}

void _ZN12SYSTEM_BUS_T8K_MEMSETEPjjj( struct $12SYSTEM_BUS_T* THIS$1, uint32* DE$1, uint32 SZ$1, uint32 V$1 )
{
 label$3697:;
 SZ$1 = (uint32)((int64)SZ$1 - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 {
  uint32 MEM_LOC$2;
  MEM_LOC$2 = (uint32)*(uint8*)NIBBLES$;
  uint32 TMP$2469$2;
  TMP$2469$2 = SZ$1;
  goto label$3699;
  label$3702:;
  {
   *(uint32*)((uint8*)DE$1 + ((int64)MEM_LOC$2 << (2ll & 63ll))) = V$1;
  }
  label$3700:;
  MEM_LOC$2 = (uint32)((int64)MEM_LOC$2 + 1ll);
  label$3699:;
  if( (int64)MEM_LOC$2 <= (int64)TMP$2469$2 ) goto label$3702;
  label$3701:;
 }
 label$3698:;
}

void _ZN12SYSTEM_BUS_T8K_MEMSETEPiii( struct $12SYSTEM_BUS_T* THIS$1, int32* DE$1, int32 SZ$1, int32 V$1 )
{
 label$3703:;
 SZ$1 = (int32)((int64)SZ$1 - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 {
  int32 MEM_LOC$2;
  MEM_LOC$2 = (int32)*(uint8*)NIBBLES$;
  int32 TMP$2470$2;
  TMP$2470$2 = SZ$1;
  goto label$3705;
  label$3708:;
  {
   *(int32*)((uint8*)DE$1 + ((int64)MEM_LOC$2 << (2ll & 63ll))) = V$1;
  }
  label$3706:;
  MEM_LOC$2 = (int32)((int64)MEM_LOC$2 + 1ll);
  label$3705:;
  if( (int64)MEM_LOC$2 <= (int64)TMP$2470$2 ) goto label$3708;
  label$3707:;
 }
 label$3704:;
}

void _ZN12SYSTEM_BUS_T8K_MEMSETEPyyy( struct $12SYSTEM_BUS_T* THIS$1, uint64* DE$1, uint64 SZ$1, uint64 V$1 )
{
 label$3709:;
 SZ$1 = SZ$1 - (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 {
  uint64 MEM_LOC$2;
  MEM_LOC$2 = (uint64)*(uint8*)NIBBLES$;
  uint64 TMP$2471$2;
  TMP$2471$2 = SZ$1;
  goto label$3711;
  label$3714:;
  {
   *(uint64*)((uint8*)DE$1 + ((int64)MEM_LOC$2 << (3ll & 63ll))) = V$1;
  }
  label$3712:;
  MEM_LOC$2 = MEM_LOC$2 + 1ull;
  label$3711:;
  if( MEM_LOC$2 <= TMP$2471$2 ) goto label$3714;
  label$3713:;
 }
 label$3710:;
}

void _ZN12SYSTEM_BUS_T8K_MEMSETEPxxx( struct $12SYSTEM_BUS_T* THIS$1, int64* DE$1, int64 SZ$1, int64 V$1 )
{
 label$3715:;
 SZ$1 = SZ$1 - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 {
  int64 MEM_LOC$2;
  MEM_LOC$2 = (int64)*(uint8*)NIBBLES$;
  int64 TMP$2472$2;
  TMP$2472$2 = SZ$1;
  goto label$3717;
  label$3720:;
  {
   *(int64*)((uint8*)DE$1 + (MEM_LOC$2 << (3ll & 63ll))) = V$1;
  }
  label$3718:;
  MEM_LOC$2 = MEM_LOC$2 + 1ll;
  label$3717:;
  if( MEM_LOC$2 <= TMP$2472$2 ) goto label$3720;
  label$3719:;
 }
 label$3716:;
}

void _ZN12SYSTEM_BUS_T8K_MEMSETEPfff( struct $12SYSTEM_BUS_T* THIS$1, float* DE$1, float SZ$1, float V$1 )
{
 label$3721:;
 SZ$1 = SZ$1 - (float)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 {
  float MEM_LOC$2;
  MEM_LOC$2 = (float)*(uint8*)NIBBLES$;
  float TMP$2473$2;
  TMP$2473$2 = SZ$1;
  goto label$3723;
  label$3726:;
  {
   *(float*)((uint8*)DE$1 + (((int64)__builtin_nearbyintf( MEM_LOC$2 )) << (2ll & 63ll))) = V$1;
  }
  label$3724:;
  MEM_LOC$2 = MEM_LOC$2 + 0x1.p+0f;
  label$3723:;
  if( MEM_LOC$2 <= TMP$2473$2 ) goto label$3726;
  label$3725:;
 }
 label$3722:;
}

void _ZN12SYSTEM_BUS_T8K_MEMSETEPddd( struct $12SYSTEM_BUS_T* THIS$1, double* DE$1, double SZ$1, double V$1 )
{
 label$3727:;
 SZ$1 = SZ$1 - (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 {
  double MEM_LOC$2;
  MEM_LOC$2 = (double)*(uint8*)NIBBLES$;
  double TMP$2474$2;
  TMP$2474$2 = SZ$1;
  goto label$3729;
  label$3732:;
  {
   *(double*)((uint8*)DE$1 + (((int64)__builtin_nearbyint( MEM_LOC$2 )) << (3ll & 63ll))) = V$1;
  }
  label$3730:;
  MEM_LOC$2 = MEM_LOC$2 + 0x1.p+0;
  label$3729:;
  if( MEM_LOC$2 <= TMP$2474$2 ) goto label$3732;
  label$3731:;
 }
 label$3728:;
}

void _ZN12SYSTEM_BUS_T8K_MEMSETEP9_FLOAT128RS0_S2_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* DE$1, struct $9_FLOAT128* SZ$1, struct $9_FLOAT128* V$1 )
{
 struct $9_FLOAT128 TMP$2475$1;
 label$3733:;
 struct $9_FLOAT128* vr$2 = _ZmiR9_FLOAT128d( &TMP$2475$1, SZ$1, (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 _ZN9_FLOAT128aSERS_( SZ$1, vr$2 );
 {
  double MEM_LOC$2;
  MEM_LOC$2 = (double)*(uint8*)NIBBLES$;
  double TMP$2476$2;
  uint64 vr$4 = _ZN9_FLOAT128cvyEv( SZ$1 );
  TMP$2476$2 = (double)vr$4;
  goto label$3735;
  label$3738:;
  {
   _ZN9_FLOAT128aSERS_( (struct $9_FLOAT128*)((uint8*)DE$1 + (((int64)__builtin_nearbyint( MEM_LOC$2 )) << (4ll & 63ll))), V$1 );
  }
  label$3736:;
  MEM_LOC$2 = MEM_LOC$2 + 0x1.p+0;
  label$3735:;
  if( MEM_LOC$2 <= TMP$2476$2 ) goto label$3738;
  label$3737:;
 }
 label$3734:;
}

void _ZN12SYSTEM_BUS_T8K_MEMSETEP9_FLOAT256RS0_S2_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* DE$1, struct $9_FLOAT256* SZ$1, struct $9_FLOAT256* V$1 )
{
 struct $9_FLOAT256 TMP$2477$1;
 label$3739:;
 struct $9_FLOAT256* vr$2 = _ZmiR9_FLOAT256d( &TMP$2477$1, SZ$1, (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 _ZN9_FLOAT256aSERS_( SZ$1, vr$2 );
 {
  double MEM_LOC$2;
  MEM_LOC$2 = (double)*(uint8*)NIBBLES$;
  double TMP$2478$2;
  uint64 vr$4 = _ZN9_FLOAT256cvyEv( SZ$1 );
  TMP$2478$2 = (double)vr$4;
  goto label$3741;
  label$3744:;
  {
   _ZN9_FLOAT256aSERS_( (struct $9_FLOAT256*)((uint8*)DE$1 + (((int64)__builtin_nearbyint( MEM_LOC$2 )) << (3ll & 63ll))), V$1 );
  }
  label$3742:;
  MEM_LOC$2 = MEM_LOC$2 + 0x1.p+0;
  label$3741:;
  if( MEM_LOC$2 <= TMP$2478$2 ) goto label$3744;
  label$3743:;
 }
 label$3740:;
}

void _ZN12SYSTEM_BUS_T8K_MEMSETEP9_FLOAT512RS0_S2_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* DE$1, struct $9_FLOAT512* SZ$1, struct $9_FLOAT512* V$1 )
{
 struct $9_FLOAT512 TMP$2479$1;
 label$3745:;
 struct $9_FLOAT512* vr$2 = _ZmiR9_FLOAT512d( &TMP$2479$1, SZ$1, (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 _ZN9_FLOAT512aSERS_( SZ$1, vr$2 );
 {
  double MEM_LOC$2;
  MEM_LOC$2 = (double)*(uint8*)NIBBLES$;
  double TMP$2480$2;
  uint64 vr$4 = _ZN9_FLOAT512cvyEv( SZ$1 );
  TMP$2480$2 = (double)vr$4;
  goto label$3747;
  label$3750:;
  {
   _ZN9_FLOAT512aSERS_( (struct $9_FLOAT512*)((uint8*)DE$1 + (((int64)__builtin_nearbyint( MEM_LOC$2 )) << (3ll & 63ll))), V$1 );
  }
  label$3748:;
  MEM_LOC$2 = MEM_LOC$2 + 0x1.p+0;
  label$3747:;
  if( MEM_LOC$2 <= TMP$2480$2 ) goto label$3750;
  label$3749:;
 }
 label$3746:;
}

void _ZN12SYSTEM_BUS_T8K_MEMSETEhhh( struct $12SYSTEM_BUS_T* THIS$1, uint8 DE$1, uint8 SZ$1, uint8 V$1 )
{
 label$3751:;
 SZ$1 = (uint8)((int64)SZ$1 - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 {
  uint8 MEM_LOC$2;
  MEM_LOC$2 = *(uint8*)NIBBLES$;
  uint8 TMP$2481$2;
  TMP$2481$2 = SZ$1;
  goto label$3753;
  label$3756:;
  {
   *(uint8*)((int64)(double*)MEM64$ + (((int64)DE$1 + (int64)MEM_LOC$2) << (3ll & 63ll))) = V$1;
  }
  label$3754:;
  MEM_LOC$2 = (uint8)((int64)MEM_LOC$2 + 1ll);
  label$3753:;
  if( (int64)MEM_LOC$2 <= (int64)TMP$2481$2 ) goto label$3756;
  label$3755:;
 }
 label$3752:;
}

void _ZN12SYSTEM_BUS_T8K_MEMSETEaaa( struct $12SYSTEM_BUS_T* THIS$1, int8 DE$1, int8 SZ$1, int8 V$1 )
{
 label$3757:;
 SZ$1 = (int8)((int64)SZ$1 - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 {
  int8 MEM_LOC$2;
  MEM_LOC$2 = *(int8*)NIBBLES$;
  int8 TMP$2482$2;
  TMP$2482$2 = SZ$1;
  goto label$3759;
  label$3762:;
  {
   *(int8*)((int64)(double*)MEM64$ + (((int64)DE$1 + (int64)MEM_LOC$2) << (3ll & 63ll))) = V$1;
  }
  label$3760:;
  MEM_LOC$2 = (int8)((int64)MEM_LOC$2 + 1ll);
  label$3759:;
  if( (int64)MEM_LOC$2 <= (int64)TMP$2482$2 ) goto label$3762;
  label$3761:;
 }
 label$3758:;
}

void _ZN12SYSTEM_BUS_T8K_MEMSETEttt( struct $12SYSTEM_BUS_T* THIS$1, uint16 DE$1, uint16 SZ$1, uint16 V$1 )
{
 label$3763:;
 SZ$1 = (uint16)((int64)SZ$1 - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 {
  uint16 MEM_LOC$2;
  MEM_LOC$2 = (uint16)*(uint8*)NIBBLES$;
  uint16 TMP$2483$2;
  TMP$2483$2 = SZ$1;
  goto label$3765;
  label$3768:;
  {
   *(uint16*)((int64)(double*)MEM64$ + (((int64)DE$1 + (int64)MEM_LOC$2) << (3ll & 63ll))) = V$1;
  }
  label$3766:;
  MEM_LOC$2 = (uint16)((int64)MEM_LOC$2 + 1ll);
  label$3765:;
  if( (int64)MEM_LOC$2 <= (int64)TMP$2483$2 ) goto label$3768;
  label$3767:;
 }
 label$3764:;
}

void _ZN12SYSTEM_BUS_T8K_MEMSETEsss( struct $12SYSTEM_BUS_T* THIS$1, int16 DE$1, int16 SZ$1, int16 V$1 )
{
 label$3769:;
 SZ$1 = (int16)((int64)SZ$1 - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 {
  int16 MEM_LOC$2;
  MEM_LOC$2 = (int16)*(uint8*)NIBBLES$;
  int16 TMP$2484$2;
  TMP$2484$2 = SZ$1;
  goto label$3771;
  label$3774:;
  {
   *(int16*)((int64)(double*)MEM64$ + (((int64)DE$1 + (int64)MEM_LOC$2) << (3ll & 63ll))) = V$1;
  }
  label$3772:;
  MEM_LOC$2 = (int16)((int64)MEM_LOC$2 + 1ll);
  label$3771:;
  if( (int64)MEM_LOC$2 <= (int64)TMP$2484$2 ) goto label$3774;
  label$3773:;
 }
 label$3770:;
}

void _ZN12SYSTEM_BUS_T8K_MEMSETEjjj( struct $12SYSTEM_BUS_T* THIS$1, uint32 DE$1, uint32 SZ$1, uint32 V$1 )
{
 label$3775:;
 SZ$1 = (uint32)((int64)SZ$1 - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 {
  uint32 MEM_LOC$2;
  MEM_LOC$2 = (uint32)*(uint8*)NIBBLES$;
  uint32 TMP$2485$2;
  TMP$2485$2 = SZ$1;
  goto label$3777;
  label$3780:;
  {
   *(uint32*)((int64)(double*)MEM64$ + (((int64)DE$1 + (int64)MEM_LOC$2) << (3ll & 63ll))) = V$1;
  }
  label$3778:;
  MEM_LOC$2 = (uint32)((int64)MEM_LOC$2 + 1ll);
  label$3777:;
  if( (int64)MEM_LOC$2 <= (int64)TMP$2485$2 ) goto label$3780;
  label$3779:;
 }
 label$3776:;
}

void _ZN12SYSTEM_BUS_T8K_MEMSETEiii( struct $12SYSTEM_BUS_T* THIS$1, int32 DE$1, int32 SZ$1, int32 V$1 )
{
 label$3781:;
 SZ$1 = (int32)((int64)SZ$1 - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 {
  int32 MEM_LOC$2;
  MEM_LOC$2 = (int32)*(uint8*)NIBBLES$;
  int32 TMP$2486$2;
  TMP$2486$2 = SZ$1;
  goto label$3783;
  label$3786:;
  {
   *(int32*)((int64)(double*)MEM64$ + (((int64)DE$1 + (int64)MEM_LOC$2) << (3ll & 63ll))) = V$1;
  }
  label$3784:;
  MEM_LOC$2 = (int32)((int64)MEM_LOC$2 + 1ll);
  label$3783:;
  if( (int64)MEM_LOC$2 <= (int64)TMP$2486$2 ) goto label$3786;
  label$3785:;
 }
 label$3782:;
}

void _ZN12SYSTEM_BUS_T8K_MEMSETEyyy( struct $12SYSTEM_BUS_T* THIS$1, uint64 DE$1, uint64 SZ$1, uint64 V$1 )
{
 label$3787:;
 SZ$1 = SZ$1 - (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 {
  uint64 MEM_LOC$2;
  MEM_LOC$2 = (uint64)*(uint8*)NIBBLES$;
  uint64 TMP$2487$2;
  TMP$2487$2 = SZ$1;
  goto label$3789;
  label$3792:;
  {
   *(uint64*)((int64)(double*)MEM64$ + ((int64)(DE$1 + MEM_LOC$2) << (3ll & 63ll))) = V$1;
  }
  label$3790:;
  MEM_LOC$2 = MEM_LOC$2 + 1ull;
  label$3789:;
  if( MEM_LOC$2 <= TMP$2487$2 ) goto label$3792;
  label$3791:;
 }
 label$3788:;
}

void _ZN12SYSTEM_BUS_T8K_MEMSETExxx( struct $12SYSTEM_BUS_T* THIS$1, int64 DE$1, int64 SZ$1, int64 V$1 )
{
 label$3793:;
 SZ$1 = SZ$1 - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 {
  int64 MEM_LOC$2;
  MEM_LOC$2 = (int64)*(uint8*)NIBBLES$;
  int64 TMP$2488$2;
  TMP$2488$2 = SZ$1;
  goto label$3795;
  label$3798:;
  {
   *(int64*)((int64)(double*)MEM64$ + ((DE$1 + MEM_LOC$2) << (3ll & 63ll))) = V$1;
  }
  label$3796:;
  MEM_LOC$2 = MEM_LOC$2 + 1ll;
  label$3795:;
  if( MEM_LOC$2 <= TMP$2488$2 ) goto label$3798;
  label$3797:;
 }
 label$3794:;
}

void _ZN12SYSTEM_BUS_T8K_MEMSETEfff( struct $12SYSTEM_BUS_T* THIS$1, float DE$1, float SZ$1, float V$1 )
{
 label$3799:;
 SZ$1 = (float)((double)SZ$1 - (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 {
  float MEM_LOC$2;
  MEM_LOC$2 = (float)*(uint8*)NIBBLES$;
  float TMP$2489$2;
  TMP$2489$2 = SZ$1;
  goto label$3801;
  label$3804:;
  {
   *(float*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyintf( DE$1 + MEM_LOC$2 )) << (3ll & 63ll))) = V$1;
  }
  label$3802:;
  MEM_LOC$2 = MEM_LOC$2 + 0x1.p+0f;
  label$3801:;
  if( MEM_LOC$2 <= TMP$2489$2 ) goto label$3804;
  label$3803:;
 }
 label$3800:;
}

void _ZN12SYSTEM_BUS_T8K_MEMSETEddd( struct $12SYSTEM_BUS_T* THIS$1, double DE$1, double SZ$1, double V$1 )
{
 label$3805:;
 SZ$1 = SZ$1 - (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 {
  double MEM_LOC$2;
  MEM_LOC$2 = (double)*(uint8*)NIBBLES$;
  double TMP$2490$2;
  TMP$2490$2 = SZ$1;
  goto label$3807;
  label$3810:;
  {
   *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( DE$1 + MEM_LOC$2 )) << (3ll & 63ll))) = V$1;
  }
  label$3808:;
  MEM_LOC$2 = MEM_LOC$2 + 0x1.p+0;
  label$3807:;
  if( MEM_LOC$2 <= TMP$2490$2 ) goto label$3810;
  label$3809:;
 }
 label$3806:;
}

void _ZN12SYSTEM_BUS_T8K_MEMSETER9_FLOAT128S1_S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* DE$1, struct $9_FLOAT128* SZ$1, struct $9_FLOAT128* V$1 )
{
 struct $9_FLOAT128 TMP$2491$1;
 label$3811:;
 struct $9_FLOAT128* vr$2 = _ZmiR9_FLOAT128d( &TMP$2491$1, SZ$1, (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 _ZN9_FLOAT128aSERS_( SZ$1, vr$2 );
 {
  double MEM_LOC$2;
  MEM_LOC$2 = (double)*(uint8*)NIBBLES$;
  double TMP$2492$2;
  uint64 vr$4 = _ZN9_FLOAT128cvyEv( SZ$1 );
  TMP$2492$2 = (double)vr$4;
  goto label$3813;
  label$3816:;
  {
   struct $9_FLOAT128 TMP$2493$3;
   struct $9_FLOAT128* vr$7 = _ZplR9_FLOAT128d( &TMP$2493$3, DE$1, MEM_LOC$2 );
   uint64 vr$8 = _ZN9_FLOAT128cvyEv( vr$7 );
   _ZN9_FLOAT128aSERS_( (struct $9_FLOAT128*)((int64)(double*)MEM64$ + (vr$8 << (3ull & 63ll))), V$1 );
  }
  label$3814:;
  MEM_LOC$2 = MEM_LOC$2 + 0x1.p+0;
  label$3813:;
  if( MEM_LOC$2 <= TMP$2492$2 ) goto label$3816;
  label$3815:;
 }
 label$3812:;
}

void _ZN12SYSTEM_BUS_T8K_MEMSETER9_FLOAT256S1_S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* DE$1, struct $9_FLOAT256* SZ$1, struct $9_FLOAT256* V$1 )
{
 struct $9_FLOAT256 TMP$2494$1;
 label$3817:;
 struct $9_FLOAT256* vr$2 = _ZmiR9_FLOAT256d( &TMP$2494$1, SZ$1, (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 _ZN9_FLOAT256aSERS_( SZ$1, vr$2 );
 {
  double MEM_LOC$2;
  MEM_LOC$2 = (double)*(uint8*)NIBBLES$;
  double TMP$2495$2;
  uint64 vr$4 = _ZN9_FLOAT256cvyEv( SZ$1 );
  TMP$2495$2 = (double)vr$4;
  goto label$3819;
  label$3822:;
  {
   struct $9_FLOAT256 TMP$2496$3;
   struct $9_FLOAT256* vr$7 = _ZplR9_FLOAT256d( &TMP$2496$3, DE$1, MEM_LOC$2 );
   uint64 vr$8 = _ZN9_FLOAT256cvyEv( vr$7 );
   _ZN9_FLOAT256aSERS_( (struct $9_FLOAT256*)((int64)(double*)MEM64$ + (vr$8 << (3ull & 63ll))), V$1 );
  }
  label$3820:;
  MEM_LOC$2 = MEM_LOC$2 + 0x1.p+0;
  label$3819:;
  if( MEM_LOC$2 <= TMP$2495$2 ) goto label$3822;
  label$3821:;
 }
 label$3818:;
}

void _ZN12SYSTEM_BUS_T8K_MEMSETER9_FLOAT512S1_S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* DE$1, struct $9_FLOAT512* SZ$1, struct $9_FLOAT512* V$1 )
{
 struct $9_FLOAT512 TMP$2497$1;
 label$3823:;
 struct $9_FLOAT512* vr$2 = _ZmiR9_FLOAT512d( &TMP$2497$1, SZ$1, (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 _ZN9_FLOAT512aSERS_( SZ$1, vr$2 );
 {
  double MEM_LOC$2;
  MEM_LOC$2 = (double)*(uint8*)NIBBLES$;
  double TMP$2498$2;
  uint64 vr$4 = _ZN9_FLOAT512cvyEv( SZ$1 );
  TMP$2498$2 = (double)vr$4;
  goto label$3825;
  label$3828:;
  {
   struct $9_FLOAT512 TMP$2499$3;
   struct $9_FLOAT512* vr$7 = _ZplR9_FLOAT512d( &TMP$2499$3, DE$1, MEM_LOC$2 );
   uint64 vr$8 = _ZN9_FLOAT512cvyEv( vr$7 );
   _ZN9_FLOAT512aSERS_( (struct $9_FLOAT512*)((int64)(double*)MEM64$ + (vr$8 << (3ull & 63ll))), V$1 );
  }
  label$3826:;
  MEM_LOC$2 = MEM_LOC$2 + 0x1.p+0;
  label$3825:;
  if( MEM_LOC$2 <= TMP$2498$2 ) goto label$3828;
  label$3827:;
 }
 label$3824:;
}

void _ZN12SYSTEM_BUS_T8K_MEMCPYEPhS0_h( struct $12SYSTEM_BUS_T* THIS$1, uint8* SU$1, uint8* DE$1, uint8 SZ$1 )
{
 label$3829:;
 SZ$1 = (uint8)((int64)SZ$1 - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 {
  uint8 MEM_LOC$2;
  MEM_LOC$2 = *(uint8*)NIBBLES$;
  uint8 TMP$2500$2;
  TMP$2500$2 = SZ$1;
  goto label$3831;
  label$3834:;
  {
   *(uint8*)(DE$1 + (int64)MEM_LOC$2) = *(uint8*)(SU$1 + (int64)MEM_LOC$2);
  }
  label$3832:;
  MEM_LOC$2 = (uint8)((int64)MEM_LOC$2 + 1ll);
  label$3831:;
  if( (int64)MEM_LOC$2 <= (int64)TMP$2500$2 ) goto label$3834;
  label$3833:;
 }
 label$3830:;
}

void _ZN12SYSTEM_BUS_T8K_MEMCPYEPaS0_a( struct $12SYSTEM_BUS_T* THIS$1, int8* SU$1, int8* DE$1, int8 SZ$1 )
{
 label$3835:;
 SZ$1 = (int64)SZ$1 - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 {
  int8 MEM_LOC$2;
  MEM_LOC$2 = *(int8*)NIBBLES$;
  int8 TMP$2501$2;
  TMP$2501$2 = SZ$1;
  goto label$3837;
  label$3840:;
  {
   *(int8*)((uint8*)DE$1 + (int64)MEM_LOC$2) = *(int8*)((uint8*)SU$1 + (int64)MEM_LOC$2);
  }
  label$3838:;
  MEM_LOC$2 = (int8)((int64)MEM_LOC$2 + 1ll);
  label$3837:;
  if( (int64)MEM_LOC$2 <= (int64)TMP$2501$2 ) goto label$3840;
  label$3839:;
 }
 label$3836:;
}

void _ZN12SYSTEM_BUS_T8K_MEMCPYEPtS0_t( struct $12SYSTEM_BUS_T* THIS$1, uint16* SU$1, uint16* DE$1, uint16 SZ$1 )
{
 label$3841:;
 SZ$1 = (uint64)((int64)SZ$1 - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 {
  uint16 MEM_LOC$2;
  MEM_LOC$2 = (uint16)*(uint8*)NIBBLES$;
  uint16 TMP$2502$2;
  TMP$2502$2 = SZ$1;
  goto label$3843;
  label$3846:;
  {
   *(uint16*)((uint8*)DE$1 + ((int64)MEM_LOC$2 << (1ll & 63ll))) = *(uint16*)((uint8*)SU$1 + ((int64)MEM_LOC$2 << (1ll & 63ll)));
  }
  label$3844:;
  MEM_LOC$2 = (uint16)((int64)MEM_LOC$2 + 1ll);
  label$3843:;
  if( (int64)MEM_LOC$2 <= (int64)TMP$2502$2 ) goto label$3846;
  label$3845:;
 }
 label$3842:;
}

void _ZN12SYSTEM_BUS_T8K_MEMCPYEPsS0_s( struct $12SYSTEM_BUS_T* THIS$1, int16* SU$1, int16* DE$1, int16 SZ$1 )
{
 label$3847:;
 SZ$1 = (int16)((int64)SZ$1 - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 {
  int16 MEM_LOC$2;
  MEM_LOC$2 = (int16)*(uint8*)NIBBLES$;
  int16 TMP$2503$2;
  TMP$2503$2 = SZ$1;
  goto label$3849;
  label$3852:;
  {
   *(int16*)((uint8*)DE$1 + ((int64)MEM_LOC$2 << (1ll & 63ll))) = *(int16*)((uint8*)SU$1 + ((int64)MEM_LOC$2 << (1ll & 63ll)));
  }
  label$3850:;
  MEM_LOC$2 = (int16)((int64)MEM_LOC$2 + 1ll);
  label$3849:;
  if( (int64)MEM_LOC$2 <= (int64)TMP$2503$2 ) goto label$3852;
  label$3851:;
 }
 label$3848:;
}

void _ZN12SYSTEM_BUS_T8K_MEMCPYEPjS0_j( struct $12SYSTEM_BUS_T* THIS$1, uint32* SU$1, uint32* DE$1, uint32 SZ$1 )
{
 label$3853:;
 SZ$1 = (uint32)((int64)SZ$1 - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 {
  uint32 MEM_LOC$2;
  MEM_LOC$2 = (uint32)*(uint8*)NIBBLES$;
  uint32 TMP$2504$2;
  TMP$2504$2 = SZ$1;
  goto label$3855;
  label$3858:;
  {
   *(uint32*)((uint8*)DE$1 + ((int64)MEM_LOC$2 << (2ll & 63ll))) = *(uint32*)((uint8*)SU$1 + ((int64)MEM_LOC$2 << (2ll & 63ll)));
  }
  label$3856:;
  MEM_LOC$2 = (uint32)((int64)MEM_LOC$2 + 1ll);
  label$3855:;
  if( (int64)MEM_LOC$2 <= (int64)TMP$2504$2 ) goto label$3858;
  label$3857:;
 }
 label$3854:;
}

void _ZN12SYSTEM_BUS_T8K_MEMCPYEPiS0_i( struct $12SYSTEM_BUS_T* THIS$1, int32* SU$1, int32* DE$1, int32 SZ$1 )
{
 label$3859:;
 SZ$1 = (int32)((int64)SZ$1 - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 {
  int32 MEM_LOC$2;
  MEM_LOC$2 = (int32)*(uint8*)NIBBLES$;
  int32 TMP$2505$2;
  TMP$2505$2 = SZ$1;
  goto label$3861;
  label$3864:;
  {
   *(int32*)((uint8*)DE$1 + ((int64)MEM_LOC$2 << (2ll & 63ll))) = *(int32*)((uint8*)SU$1 + ((int64)MEM_LOC$2 << (2ll & 63ll)));
  }
  label$3862:;
  MEM_LOC$2 = (int32)((int64)MEM_LOC$2 + 1ll);
  label$3861:;
  if( (int64)MEM_LOC$2 <= (int64)TMP$2505$2 ) goto label$3864;
  label$3863:;
 }
 label$3860:;
}

void _ZN12SYSTEM_BUS_T8K_MEMCPYEPyS0_y( struct $12SYSTEM_BUS_T* THIS$1, uint64* SU$1, uint64* DE$1, uint64 SZ$1 )
{
 label$3865:;
 SZ$1 = SZ$1 - (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 {
  uint64 MEM_LOC$2;
  MEM_LOC$2 = (uint64)*(uint8*)NIBBLES$;
  uint64 TMP$2506$2;
  TMP$2506$2 = SZ$1;
  goto label$3867;
  label$3870:;
  {
   *(uint64*)((uint8*)DE$1 + ((int64)MEM_LOC$2 << (3ll & 63ll))) = *(uint64*)((uint8*)SU$1 + ((int64)MEM_LOC$2 << (3ll & 63ll)));
  }
  label$3868:;
  MEM_LOC$2 = MEM_LOC$2 + 1ull;
  label$3867:;
  if( MEM_LOC$2 <= TMP$2506$2 ) goto label$3870;
  label$3869:;
 }
 label$3866:;
}

void _ZN12SYSTEM_BUS_T8K_MEMCPYEPxS0_x( struct $12SYSTEM_BUS_T* THIS$1, int64* SU$1, int64* DE$1, int64 SZ$1 )
{
 label$3871:;
 SZ$1 = SZ$1 - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 {
  int64 MEM_LOC$2;
  MEM_LOC$2 = (int64)*(uint8*)NIBBLES$;
  int64 TMP$2507$2;
  TMP$2507$2 = SZ$1;
  goto label$3873;
  label$3876:;
  {
   *(int64*)((uint8*)DE$1 + (MEM_LOC$2 << (3ll & 63ll))) = *(int64*)((uint8*)SU$1 + (MEM_LOC$2 << (3ll & 63ll)));
  }
  label$3874:;
  MEM_LOC$2 = MEM_LOC$2 + 1ll;
  label$3873:;
  if( MEM_LOC$2 <= TMP$2507$2 ) goto label$3876;
  label$3875:;
 }
 label$3872:;
}

void _ZN12SYSTEM_BUS_T8K_MEMCPYEPfS0_f( struct $12SYSTEM_BUS_T* THIS$1, float* SU$1, float* DE$1, float SZ$1 )
{
 label$3877:;
 SZ$1 = SZ$1 - (float)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 {
  float MEM_LOC$2;
  MEM_LOC$2 = (float)*(uint8*)NIBBLES$;
  float TMP$2508$2;
  TMP$2508$2 = SZ$1;
  goto label$3879;
  label$3882:;
  {
   *(float*)((uint8*)DE$1 + (((int64)__builtin_nearbyintf( MEM_LOC$2 )) << (2ll & 63ll))) = *(float*)((uint8*)SU$1 + (((int64)__builtin_nearbyintf( MEM_LOC$2 )) << (2ll & 63ll)));
  }
  label$3880:;
  MEM_LOC$2 = MEM_LOC$2 + 0x1.p+0f;
  label$3879:;
  if( MEM_LOC$2 <= TMP$2508$2 ) goto label$3882;
  label$3881:;
 }
 label$3878:;
}

void _ZN12SYSTEM_BUS_T8K_MEMCPYEPdS0_d( struct $12SYSTEM_BUS_T* THIS$1, double* SU$1, double* DE$1, double SZ$1 )
{
 label$3883:;
 SZ$1 = SZ$1 - (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 {
  double MEM_LOC$2;
  MEM_LOC$2 = (double)*(uint8*)NIBBLES$;
  double TMP$2509$2;
  TMP$2509$2 = SZ$1;
  goto label$3885;
  label$3888:;
  {
   *(double*)((uint8*)DE$1 + (((int64)__builtin_nearbyint( MEM_LOC$2 )) << (3ll & 63ll))) = *(double*)((uint8*)SU$1 + (((int64)__builtin_nearbyint( MEM_LOC$2 )) << (3ll & 63ll)));
  }
  label$3886:;
  MEM_LOC$2 = MEM_LOC$2 + 0x1.p+0;
  label$3885:;
  if( MEM_LOC$2 <= TMP$2509$2 ) goto label$3888;
  label$3887:;
 }
 label$3884:;
}

void _ZN12SYSTEM_BUS_T8K_MEMCPYEP9_FLOAT128S1_RS0_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* SU$1, struct $9_FLOAT128* DE$1, struct $9_FLOAT128* SZ$1 )
{
 struct $9_FLOAT128 TMP$2510$1;
 label$3889:;
 struct $9_FLOAT128* vr$2 = _ZmiR9_FLOAT128d( &TMP$2510$1, SZ$1, (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 _ZN9_FLOAT128aSERS_( SZ$1, vr$2 );
 {
  double MEM_LOC$2;
  MEM_LOC$2 = (double)*(uint8*)NIBBLES$;
  double TMP$2511$2;
  uint64 vr$4 = _ZN9_FLOAT128cvyEv( SZ$1 );
  TMP$2511$2 = (double)vr$4;
  goto label$3891;
  label$3894:;
  {
   _ZN9_FLOAT128aSERS_( (struct $9_FLOAT128*)((uint8*)DE$1 + (((int64)__builtin_nearbyint( MEM_LOC$2 )) << (4ll & 63ll))), (struct $9_FLOAT128*)((uint8*)SU$1 + (((int64)__builtin_nearbyint( MEM_LOC$2 )) << (4ll & 63ll))) );
  }
  label$3892:;
  MEM_LOC$2 = MEM_LOC$2 + 0x1.p+0;
  label$3891:;
  if( MEM_LOC$2 <= TMP$2511$2 ) goto label$3894;
  label$3893:;
 }
 label$3890:;
}

void _ZN12SYSTEM_BUS_T8K_MEMCPYEP9_FLOAT256S1_RS0_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* SU$1, struct $9_FLOAT256* DE$1, struct $9_FLOAT256* SZ$1 )
{
 struct $9_FLOAT256 TMP$2512$1;
 label$3895:;
 struct $9_FLOAT256* vr$2 = _ZmiR9_FLOAT256d( &TMP$2512$1, SZ$1, (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 _ZN9_FLOAT256aSERS_( SZ$1, vr$2 );
 {
  double MEM_LOC$2;
  MEM_LOC$2 = (double)*(uint8*)NIBBLES$;
  double TMP$2513$2;
  uint64 vr$4 = _ZN9_FLOAT256cvyEv( SZ$1 );
  TMP$2513$2 = (double)vr$4;
  goto label$3897;
  label$3900:;
  {
   _ZN9_FLOAT256aSERS_( (struct $9_FLOAT256*)((uint8*)DE$1 + (((int64)__builtin_nearbyint( MEM_LOC$2 )) << (3ll & 63ll))), (struct $9_FLOAT256*)((uint8*)SU$1 + (((int64)__builtin_nearbyint( MEM_LOC$2 )) << (3ll & 63ll))) );
  }
  label$3898:;
  MEM_LOC$2 = MEM_LOC$2 + 0x1.p+0;
  label$3897:;
  if( MEM_LOC$2 <= TMP$2513$2 ) goto label$3900;
  label$3899:;
 }
 label$3896:;
}

void _ZN12SYSTEM_BUS_T8K_MEMCPYEP9_FLOAT512S1_RS0_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* SU$1, struct $9_FLOAT512* DE$1, struct $9_FLOAT512* SZ$1 )
{
 struct $9_FLOAT512 TMP$2514$1;
 label$3901:;
 struct $9_FLOAT512* vr$2 = _ZmiR9_FLOAT512d( &TMP$2514$1, SZ$1, (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 _ZN9_FLOAT512aSERS_( SZ$1, vr$2 );
 {
  double MEM_LOC$2;
  MEM_LOC$2 = (double)*(uint8*)NIBBLES$;
  double TMP$2515$2;
  uint64 vr$4 = _ZN9_FLOAT512cvyEv( SZ$1 );
  TMP$2515$2 = (double)vr$4;
  goto label$3903;
  label$3906:;
  {
   _ZN9_FLOAT512aSERS_( (struct $9_FLOAT512*)((uint8*)DE$1 + (((int64)__builtin_nearbyint( MEM_LOC$2 )) << (3ll & 63ll))), (struct $9_FLOAT512*)((uint8*)SU$1 + (((int64)__builtin_nearbyint( MEM_LOC$2 )) << (3ll & 63ll))) );
  }
  label$3904:;
  MEM_LOC$2 = MEM_LOC$2 + 0x1.p+0;
  label$3903:;
  if( MEM_LOC$2 <= TMP$2515$2 ) goto label$3906;
  label$3905:;
 }
 label$3902:;
}

void _ZN12SYSTEM_BUS_T8K_MEMCPYEhhh( struct $12SYSTEM_BUS_T* THIS$1, uint8 SU$1, uint8 DE$1, uint8 SZ$1 )
{
 label$3907:;
 SZ$1 = (uint8)((int64)SZ$1 - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 {
  uint8 MEM_LOC$2;
  MEM_LOC$2 = *(uint8*)NIBBLES$;
  uint8 TMP$2516$2;
  TMP$2516$2 = SZ$1;
  goto label$3909;
  label$3912:;
  {
   *(uint8*)((int64)(double*)MEM64$ + (((int64)DE$1 + (int64)MEM_LOC$2) << (3ll & 63ll))) = *(uint8*)((int64)(double*)MEM64$ + (((int64)SU$1 + (int64)MEM_LOC$2) << (3ll & 63ll)));
  }
  label$3910:;
  MEM_LOC$2 = (uint8)((int64)MEM_LOC$2 + 1ll);
  label$3909:;
  if( (int64)MEM_LOC$2 <= (int64)TMP$2516$2 ) goto label$3912;
  label$3911:;
 }
 label$3908:;
}

void _ZN12SYSTEM_BUS_T8K_MEMCPYEaaa( struct $12SYSTEM_BUS_T* THIS$1, int8 SU$1, int8 DE$1, int8 SZ$1 )
{
 label$3913:;
 SZ$1 = (int8)((int64)SZ$1 - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 {
  int16 MEM_LOC$2;
  MEM_LOC$2 = (int16)*(uint8*)NIBBLES$;
  int16 TMP$2517$2;
  TMP$2517$2 = (int16)SZ$1;
  goto label$3915;
  label$3918:;
  {
   *(int8*)((int64)(double*)MEM64$ + (((int64)DE$1 + (int64)MEM_LOC$2) << (3ll & 63ll))) = *(int8*)((int64)(double*)MEM64$ + (((int64)SU$1 + (int64)MEM_LOC$2) << (3ll & 63ll)));
  }
  label$3916:;
  MEM_LOC$2 = (int16)((int64)MEM_LOC$2 + 1ll);
  label$3915:;
  if( (int64)MEM_LOC$2 <= (int64)TMP$2517$2 ) goto label$3918;
  label$3917:;
 }
 label$3914:;
}

void _ZN12SYSTEM_BUS_T8K_MEMCPYEttt( struct $12SYSTEM_BUS_T* THIS$1, uint16 SU$1, uint16 DE$1, uint16 SZ$1 )
{
 label$3919:;
 SZ$1 = (uint16)((int64)SZ$1 - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 {
  uint16 MEM_LOC$2;
  MEM_LOC$2 = (uint16)*(uint8*)NIBBLES$;
  uint16 TMP$2518$2;
  TMP$2518$2 = SZ$1;
  goto label$3921;
  label$3924:;
  {
   *(uint16*)((int64)(double*)MEM64$ + (((int64)DE$1 + (int64)MEM_LOC$2) << (3ll & 63ll))) = *(uint16*)((int64)(double*)MEM64$ + (((int64)SU$1 + (int64)MEM_LOC$2) << (3ll & 63ll)));
  }
  label$3922:;
  MEM_LOC$2 = (uint16)((int64)MEM_LOC$2 + 1ll);
  label$3921:;
  if( (int64)MEM_LOC$2 <= (int64)TMP$2518$2 ) goto label$3924;
  label$3923:;
 }
 label$3920:;
}

void _ZN12SYSTEM_BUS_T8K_MEMCPYEsss( struct $12SYSTEM_BUS_T* THIS$1, int16 SU$1, int16 DE$1, int16 SZ$1 )
{
 label$3925:;
 SZ$1 = (int16)((int64)SZ$1 - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 {
  int16 MEM_LOC$2;
  MEM_LOC$2 = (int16)*(uint8*)NIBBLES$;
  int16 TMP$2519$2;
  TMP$2519$2 = SZ$1;
  goto label$3927;
  label$3930:;
  {
   *(int16*)((int64)(double*)MEM64$ + (((int64)DE$1 + (int64)MEM_LOC$2) << (3ll & 63ll))) = *(int16*)((int64)(double*)MEM64$ + (((int64)SU$1 + (int64)MEM_LOC$2) << (3ll & 63ll)));
  }
  label$3928:;
  MEM_LOC$2 = (int16)((int64)MEM_LOC$2 + 1ll);
  label$3927:;
  if( (int64)MEM_LOC$2 <= (int64)TMP$2519$2 ) goto label$3930;
  label$3929:;
 }
 label$3926:;
}

void _ZN12SYSTEM_BUS_T8K_MEMCPYEjjj( struct $12SYSTEM_BUS_T* THIS$1, uint32 SU$1, uint32 DE$1, uint32 SZ$1 )
{
 label$3931:;
 SZ$1 = (uint32)((int64)SZ$1 - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 {
  uint32 MEM_LOC$2;
  MEM_LOC$2 = (uint32)*(uint8*)NIBBLES$;
  uint32 TMP$2520$2;
  TMP$2520$2 = SZ$1;
  goto label$3933;
  label$3936:;
  {
   *(uint32*)((int64)(double*)MEM64$ + (((int64)DE$1 + (int64)MEM_LOC$2) << (3ll & 63ll))) = *(uint32*)((int64)(double*)MEM64$ + (((int64)SU$1 + (int64)MEM_LOC$2) << (3ll & 63ll)));
  }
  label$3934:;
  MEM_LOC$2 = (uint32)((int64)MEM_LOC$2 + 1ll);
  label$3933:;
  if( (int64)MEM_LOC$2 <= (int64)TMP$2520$2 ) goto label$3936;
  label$3935:;
 }
 label$3932:;
}

void _ZN12SYSTEM_BUS_T8K_MEMCPYEiii( struct $12SYSTEM_BUS_T* THIS$1, int32 SU$1, int32 DE$1, int32 SZ$1 )
{
 label$3937:;
 SZ$1 = (int32)((int64)SZ$1 - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 {
  int32 MEM_LOC$2;
  MEM_LOC$2 = (int32)*(uint8*)NIBBLES$;
  int32 TMP$2521$2;
  TMP$2521$2 = SZ$1;
  goto label$3939;
  label$3942:;
  {
   *(int32*)((int64)(double*)MEM64$ + (((int64)DE$1 + (int64)MEM_LOC$2) << (3ll & 63ll))) = *(int32*)((int64)(double*)MEM64$ + (((int64)SU$1 + (int64)MEM_LOC$2) << (3ll & 63ll)));
  }
  label$3940:;
  MEM_LOC$2 = (int32)((int64)MEM_LOC$2 + 1ll);
  label$3939:;
  if( (int64)MEM_LOC$2 <= (int64)TMP$2521$2 ) goto label$3942;
  label$3941:;
 }
 label$3938:;
}

void _ZN12SYSTEM_BUS_T8K_MEMCPYEyyy( struct $12SYSTEM_BUS_T* THIS$1, uint64 SU$1, uint64 DE$1, uint64 SZ$1 )
{
 label$3943:;
 SZ$1 = SZ$1 - (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 {
  uint64 MEM_LOC$2;
  MEM_LOC$2 = (uint64)*(uint8*)NIBBLES$;
  uint64 TMP$2522$2;
  TMP$2522$2 = SZ$1;
  goto label$3945;
  label$3948:;
  {
   *(uint64*)((int64)(double*)MEM64$ + ((int64)(DE$1 + MEM_LOC$2) << (3ll & 63ll))) = *(uint64*)((int64)(double*)MEM64$ + ((int64)(SU$1 + MEM_LOC$2) << (3ll & 63ll)));
  }
  label$3946:;
  MEM_LOC$2 = MEM_LOC$2 + 1ull;
  label$3945:;
  if( MEM_LOC$2 <= TMP$2522$2 ) goto label$3948;
  label$3947:;
 }
 label$3944:;
}

void _ZN12SYSTEM_BUS_T8K_MEMCPYExxx( struct $12SYSTEM_BUS_T* THIS$1, int64 SU$1, int64 DE$1, int64 SZ$1 )
{
 label$3949:;
 SZ$1 = SZ$1 - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 {
  int64 MEM_LOC$2;
  MEM_LOC$2 = (int64)*(uint8*)NIBBLES$;
  int64 TMP$2523$2;
  TMP$2523$2 = SZ$1;
  goto label$3951;
  label$3954:;
  {
   *(int64*)((int64)(double*)MEM64$ + ((DE$1 + MEM_LOC$2) << (3ll & 63ll))) = *(int64*)((int64)(double*)MEM64$ + ((SU$1 + MEM_LOC$2) << (3ll & 63ll)));
  }
  label$3952:;
  MEM_LOC$2 = MEM_LOC$2 + 1ll;
  label$3951:;
  if( MEM_LOC$2 <= TMP$2523$2 ) goto label$3954;
  label$3953:;
 }
 label$3950:;
}

void _ZN12SYSTEM_BUS_T8K_MEMCPYEfff( struct $12SYSTEM_BUS_T* THIS$1, float SU$1, float DE$1, float SZ$1 )
{
 label$3955:;
 SZ$1 = SZ$1 - (float)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 {
  float MEM_LOC$2;
  MEM_LOC$2 = (float)*(uint8*)NIBBLES$;
  float TMP$2524$2;
  TMP$2524$2 = SZ$1;
  goto label$3957;
  label$3960:;
  {
   *(float*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyintf( DE$1 + MEM_LOC$2 )) << (3ll & 63ll))) = *(float*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyintf( SU$1 + MEM_LOC$2 )) << (3ll & 63ll)));
  }
  label$3958:;
  MEM_LOC$2 = MEM_LOC$2 + 0x1.p+0f;
  label$3957:;
  if( MEM_LOC$2 <= TMP$2524$2 ) goto label$3960;
  label$3959:;
 }
 label$3956:;
}

void _ZN12SYSTEM_BUS_T8K_MEMCPYEddd( struct $12SYSTEM_BUS_T* THIS$1, double SU$1, double DE$1, double SZ$1 )
{
 label$3961:;
 SZ$1 = SZ$1 - (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 {
  double MEM_LOC$2;
  MEM_LOC$2 = (double)*(uint8*)NIBBLES$;
  double TMP$2525$2;
  TMP$2525$2 = SZ$1;
  goto label$3963;
  label$3966:;
  {
   *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( DE$1 + MEM_LOC$2 )) << (3ll & 63ll))) = *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( SU$1 + MEM_LOC$2 )) << (3ll & 63ll)));
  }
  label$3964:;
  MEM_LOC$2 = MEM_LOC$2 + 0x1.p+0;
  label$3963:;
  if( MEM_LOC$2 <= TMP$2525$2 ) goto label$3966;
  label$3965:;
 }
 label$3962:;
}

void _ZN12SYSTEM_BUS_T8K_MEMCPYER9_FLOAT128S1_S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* SU$1, struct $9_FLOAT128* DE$1, struct $9_FLOAT128* SZ$1 )
{
 struct $9_FLOAT128 TMP$2526$1;
 label$3967:;
 struct $9_FLOAT128* vr$2 = _ZmiR9_FLOAT128d( &TMP$2526$1, SZ$1, (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 _ZN9_FLOAT128aSERS_( SZ$1, vr$2 );
 {
  double MEM_LOC$2;
  MEM_LOC$2 = (double)*(uint8*)NIBBLES$;
  double TMP$2527$2;
  uint64 vr$4 = _ZN9_FLOAT128cvyEv( SZ$1 );
  TMP$2527$2 = (double)vr$4;
  goto label$3969;
  label$3972:;
  {
   struct $9_FLOAT128 TMP$2528$3;
   struct $9_FLOAT128 TMP$2529$3;
   struct $9_FLOAT128* vr$7 = _ZplR9_FLOAT128d( &TMP$2529$3, SU$1, MEM_LOC$2 );
   uint64 vr$8 = _ZN9_FLOAT128cvyEv( vr$7 );
   struct $9_FLOAT128* vr$12 = _ZplR9_FLOAT128d( &TMP$2528$3, DE$1, MEM_LOC$2 );
   uint64 vr$13 = _ZN9_FLOAT128cvyEv( vr$12 );
   _ZN9_FLOAT128aSERS_( (struct $9_FLOAT128*)((int64)(double*)MEM64$ + (vr$13 << (3ull & 63ll))), (struct $9_FLOAT128*)((int64)(double*)MEM64$ + (vr$8 << (3ull & 63ll))) );
  }
  label$3970:;
  MEM_LOC$2 = MEM_LOC$2 + 0x1.p+0;
  label$3969:;
  if( MEM_LOC$2 <= TMP$2527$2 ) goto label$3972;
  label$3971:;
 }
 label$3968:;
}

void _ZN12SYSTEM_BUS_T8K_MEMCPYER9_FLOAT256S1_S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* SU$1, struct $9_FLOAT256* DE$1, struct $9_FLOAT256* SZ$1 )
{
 struct $9_FLOAT256 TMP$2530$1;
 label$3973:;
 struct $9_FLOAT256* vr$2 = _ZmiR9_FLOAT256d( &TMP$2530$1, SZ$1, (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 _ZN9_FLOAT256aSERS_( SZ$1, vr$2 );
 {
  double MEM_LOC$2;
  MEM_LOC$2 = (double)*(uint8*)NIBBLES$;
  double TMP$2531$2;
  uint64 vr$4 = _ZN9_FLOAT256cvyEv( SZ$1 );
  TMP$2531$2 = (double)vr$4;
  goto label$3975;
  label$3978:;
  {
   struct $9_FLOAT256 TMP$2532$3;
   struct $9_FLOAT256 TMP$2533$3;
   struct $9_FLOAT256* vr$7 = _ZplR9_FLOAT256d( &TMP$2533$3, SU$1, MEM_LOC$2 );
   uint64 vr$8 = _ZN9_FLOAT256cvyEv( vr$7 );
   struct $9_FLOAT256* vr$12 = _ZplR9_FLOAT256d( &TMP$2532$3, DE$1, MEM_LOC$2 );
   uint64 vr$13 = _ZN9_FLOAT256cvyEv( vr$12 );
   _ZN9_FLOAT256aSERS_( (struct $9_FLOAT256*)((int64)(double*)MEM64$ + (vr$13 << (3ull & 63ll))), (struct $9_FLOAT256*)((int64)(double*)MEM64$ + (vr$8 << (3ull & 63ll))) );
  }
  label$3976:;
  MEM_LOC$2 = MEM_LOC$2 + 0x1.p+0;
  label$3975:;
  if( MEM_LOC$2 <= TMP$2531$2 ) goto label$3978;
  label$3977:;
 }
 label$3974:;
}

void _ZN12SYSTEM_BUS_T8K_MEMCPYER9_FLOAT512S1_S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* SU$1, struct $9_FLOAT512* DE$1, struct $9_FLOAT512* SZ$1 )
{
 struct $9_FLOAT512 TMP$2534$1;
 label$3979:;
 struct $9_FLOAT512* vr$2 = _ZmiR9_FLOAT512d( &TMP$2534$1, SZ$1, (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 _ZN9_FLOAT512aSERS_( SZ$1, vr$2 );
 {
  double MEM_LOC$2;
  MEM_LOC$2 = (double)*(uint8*)NIBBLES$;
  double TMP$2535$2;
  uint64 vr$4 = _ZN9_FLOAT512cvyEv( SZ$1 );
  TMP$2535$2 = (double)vr$4;
  goto label$3981;
  label$3984:;
  {
   struct $9_FLOAT512 TMP$2536$3;
   struct $9_FLOAT512 TMP$2537$3;
   struct $9_FLOAT512* vr$7 = _ZplR9_FLOAT512d( &TMP$2537$3, SU$1, MEM_LOC$2 );
   uint64 vr$8 = _ZN9_FLOAT512cvyEv( vr$7 );
   struct $9_FLOAT512* vr$12 = _ZplR9_FLOAT512d( &TMP$2536$3, DE$1, MEM_LOC$2 );
   uint64 vr$13 = _ZN9_FLOAT512cvyEv( vr$12 );
   _ZN9_FLOAT512aSERS_( (struct $9_FLOAT512*)((int64)(double*)MEM64$ + (vr$13 << (3ull & 63ll))), (struct $9_FLOAT512*)((int64)(double*)MEM64$ + (vr$8 << (3ull & 63ll))) );
  }
  label$3982:;
  MEM_LOC$2 = MEM_LOC$2 + 0x1.p+0;
  label$3981:;
  if( MEM_LOC$2 <= TMP$2535$2 ) goto label$3984;
  label$3983:;
 }
 label$3980:;
}

void _ZN12SYSTEM_BUS_T10K_MEMCPY16EPvS0_j( struct $12SYSTEM_BUS_T* THIS$1, void* DST$1, void* SRC$1, uint32 CPT$1 )
{
 label$3985:;
 _ZN12SYSTEM_BUS_T8K_MEMCPYEPjS0_j( THIS$1, (uint32*)DST$1, (uint32*)SRC$1, CPT$1 );
 label$3986:;
}

void _ZN12SYSTEM_BUS_T10K_MEMCPY32EPvS0_j( struct $12SYSTEM_BUS_T* THIS$1, void* DST$1, void* SRC$1, uint32 CPT$1 )
{
 label$3987:;
 _ZN12SYSTEM_BUS_T8K_MEMCPYEPjS0_j( THIS$1, (uint32*)DST$1, (uint32*)SRC$1, CPT$1 );
 label$3988:;
}

void _ZN12SYSTEM_BUS_T10K_MEMSET16EPvtj( struct $12SYSTEM_BUS_T* THIS$1, void* DST$1, uint16 VALUE$1, uint32 CPT$1 )
{
 label$3989:;
 _ZN12SYSTEM_BUS_T8K_MEMSETEPjjj( THIS$1, (uint32*)DST$1, (uint32)VALUE$1, CPT$1 );
 label$3990:;
}

void _ZN12SYSTEM_BUS_T10K_MEMSET32EPvjj( struct $12SYSTEM_BUS_T* THIS$1, void* DST$1, uint32 VALUE$1, uint32 CPT$1 )
{
 label$3991:;
 _ZN12SYSTEM_BUS_T8K_MEMSETEPjjj( THIS$1, (uint32*)DST$1, VALUE$1, CPT$1 );
 label$3992:;
}

double _ZN12SYSTEM_BUS_T8K_CLAMPFEhhh( struct $12SYSTEM_BUS_T* THIS$1, uint8 X$1, uint8 LOWERLIMIT$1, uint8 UPPERLIMIT$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3993:;
 if( (int64)X$1 >= (int64)LOWERLIMIT$1 ) goto label$3996;
 {
  X$1 = LOWERLIMIT$1;
  label$3996:;
 }
 if( (int64)X$1 <= (int64)UPPERLIMIT$1 ) goto label$3998;
 {
  X$1 = UPPERLIMIT$1;
  label$3998:;
 }
 fb$result$1 = (double)X$1;
 goto label$3994;
 label$3994:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8K_CLAMPFEaaa( struct $12SYSTEM_BUS_T* THIS$1, int8 X$1, int8 LOWERLIMIT$1, int8 UPPERLIMIT$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$3999:;
 if( (int64)X$1 >= (int64)LOWERLIMIT$1 ) goto label$4002;
 {
  X$1 = LOWERLIMIT$1;
  label$4002:;
 }
 if( (int64)X$1 <= (int64)UPPERLIMIT$1 ) goto label$4004;
 {
  X$1 = UPPERLIMIT$1;
  label$4004:;
 }
 fb$result$1 = (double)X$1;
 goto label$4000;
 label$4000:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8K_CLAMPFEttt( struct $12SYSTEM_BUS_T* THIS$1, uint16 X$1, uint16 LOWERLIMIT$1, uint16 UPPERLIMIT$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4005:;
 if( (int64)X$1 >= (int64)LOWERLIMIT$1 ) goto label$4008;
 {
  X$1 = LOWERLIMIT$1;
  label$4008:;
 }
 if( (int64)X$1 <= (int64)UPPERLIMIT$1 ) goto label$4010;
 {
  X$1 = UPPERLIMIT$1;
  label$4010:;
 }
 fb$result$1 = (double)X$1;
 goto label$4006;
 label$4006:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8K_CLAMPFEsss( struct $12SYSTEM_BUS_T* THIS$1, int16 X$1, int16 LOWERLIMIT$1, int16 UPPERLIMIT$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4011:;
 if( (int64)X$1 >= (int64)LOWERLIMIT$1 ) goto label$4014;
 {
  X$1 = LOWERLIMIT$1;
  label$4014:;
 }
 if( (int64)X$1 <= (int64)UPPERLIMIT$1 ) goto label$4016;
 {
  X$1 = UPPERLIMIT$1;
  label$4016:;
 }
 fb$result$1 = (double)X$1;
 goto label$4012;
 label$4012:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8K_CLAMPFEjjj( struct $12SYSTEM_BUS_T* THIS$1, uint32 X$1, uint32 LOWERLIMIT$1, uint32 UPPERLIMIT$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4017:;
 if( (int64)X$1 >= (int64)LOWERLIMIT$1 ) goto label$4020;
 {
  X$1 = LOWERLIMIT$1;
  label$4020:;
 }
 if( (int64)X$1 <= (int64)UPPERLIMIT$1 ) goto label$4022;
 {
  X$1 = UPPERLIMIT$1;
  label$4022:;
 }
 fb$result$1 = (double)X$1;
 goto label$4018;
 label$4018:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8K_CLAMPFEiii( struct $12SYSTEM_BUS_T* THIS$1, int32 X$1, int32 LOWERLIMIT$1, int32 UPPERLIMIT$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4023:;
 if( (int64)X$1 >= (int64)LOWERLIMIT$1 ) goto label$4026;
 {
  X$1 = LOWERLIMIT$1;
  label$4026:;
 }
 if( (int64)X$1 <= (int64)UPPERLIMIT$1 ) goto label$4028;
 {
  X$1 = UPPERLIMIT$1;
  label$4028:;
 }
 fb$result$1 = (double)X$1;
 goto label$4024;
 label$4024:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8K_CLAMPFEyyy( struct $12SYSTEM_BUS_T* THIS$1, uint64 X$1, uint64 LOWERLIMIT$1, uint64 UPPERLIMIT$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4029:;
 if( X$1 >= LOWERLIMIT$1 ) goto label$4032;
 {
  X$1 = LOWERLIMIT$1;
  label$4032:;
 }
 if( X$1 <= UPPERLIMIT$1 ) goto label$4034;
 {
  X$1 = UPPERLIMIT$1;
  label$4034:;
 }
 fb$result$1 = (double)X$1;
 goto label$4030;
 label$4030:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8K_CLAMPFExxx( struct $12SYSTEM_BUS_T* THIS$1, int64 X$1, int64 LOWERLIMIT$1, int64 UPPERLIMIT$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4035:;
 if( X$1 >= LOWERLIMIT$1 ) goto label$4038;
 {
  X$1 = LOWERLIMIT$1;
  label$4038:;
 }
 if( X$1 <= UPPERLIMIT$1 ) goto label$4040;
 {
  X$1 = UPPERLIMIT$1;
  label$4040:;
 }
 fb$result$1 = (double)X$1;
 goto label$4036;
 label$4036:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8K_CLAMPFEfff( struct $12SYSTEM_BUS_T* THIS$1, float X$1, float LOWERLIMIT$1, float UPPERLIMIT$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4041:;
 if( X$1 >= LOWERLIMIT$1 ) goto label$4044;
 {
  X$1 = LOWERLIMIT$1;
  label$4044:;
 }
 if( X$1 <= UPPERLIMIT$1 ) goto label$4046;
 {
  X$1 = UPPERLIMIT$1;
  label$4046:;
 }
 fb$result$1 = (double)X$1;
 goto label$4042;
 label$4042:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8K_CLAMPFEddd( struct $12SYSTEM_BUS_T* THIS$1, double X$1, double LOWERLIMIT$1, double UPPERLIMIT$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4047:;
 if( X$1 >= LOWERLIMIT$1 ) goto label$4050;
 {
  X$1 = LOWERLIMIT$1;
  label$4050:;
 }
 if( X$1 <= UPPERLIMIT$1 ) goto label$4052;
 {
  X$1 = UPPERLIMIT$1;
  label$4052:;
 }
 fb$result$1 = X$1;
 goto label$4048;
 label$4048:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8K_CLAMPFER9_FLOAT128S1_S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* X$1, struct $9_FLOAT128* LOWERLIMIT$1, struct $9_FLOAT128* UPPERLIMIT$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4053:;
 uint64 vr$1 = _ZN9_FLOAT128cvyEv( X$1 );
 uint64 vr$2 = _ZN9_FLOAT128cvyEv( LOWERLIMIT$1 );
 if( vr$1 >= vr$2 ) goto label$4056;
 {
  _ZN9_FLOAT128aSERS_( X$1, LOWERLIMIT$1 );
  label$4056:;
 }
 uint64 vr$3 = _ZN9_FLOAT128cvyEv( X$1 );
 uint64 vr$4 = _ZN9_FLOAT128cvyEv( UPPERLIMIT$1 );
 if( vr$3 <= vr$4 ) goto label$4058;
 {
  _ZN9_FLOAT128aSERS_( X$1, UPPERLIMIT$1 );
  label$4058:;
 }
 uint64 vr$5 = _ZN9_FLOAT128cvyEv( X$1 );
 fb$result$1 = (double)vr$5;
 goto label$4054;
 label$4054:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8K_CLAMPFER9_FLOAT256S1_S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* X$1, struct $9_FLOAT256* LOWERLIMIT$1, struct $9_FLOAT256* UPPERLIMIT$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4059:;
 uint64 vr$1 = _ZN9_FLOAT256cvyEv( X$1 );
 uint64 vr$2 = _ZN9_FLOAT256cvyEv( LOWERLIMIT$1 );
 if( vr$1 >= vr$2 ) goto label$4062;
 {
  _ZN9_FLOAT256aSERS_( X$1, LOWERLIMIT$1 );
  label$4062:;
 }
 uint64 vr$3 = _ZN9_FLOAT256cvyEv( X$1 );
 uint64 vr$4 = _ZN9_FLOAT256cvyEv( UPPERLIMIT$1 );
 if( vr$3 <= vr$4 ) goto label$4064;
 {
  _ZN9_FLOAT256aSERS_( X$1, UPPERLIMIT$1 );
  label$4064:;
 }
 uint64 vr$5 = _ZN9_FLOAT256cvyEv( X$1 );
 fb$result$1 = (double)vr$5;
 goto label$4060;
 label$4060:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8K_CLAMPFER9_FLOAT512S1_S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* X$1, struct $9_FLOAT512* LOWERLIMIT$1, struct $9_FLOAT512* UPPERLIMIT$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4065:;
 uint64 vr$1 = _ZN9_FLOAT512cvyEv( X$1 );
 uint64 vr$2 = _ZN9_FLOAT512cvyEv( LOWERLIMIT$1 );
 if( vr$1 >= vr$2 ) goto label$4068;
 {
  _ZN9_FLOAT512aSERS_( X$1, LOWERLIMIT$1 );
  label$4068:;
 }
 uint64 vr$3 = _ZN9_FLOAT512cvyEv( X$1 );
 uint64 vr$4 = _ZN9_FLOAT512cvyEv( UPPERLIMIT$1 );
 if( vr$3 <= vr$4 ) goto label$4070;
 {
  _ZN9_FLOAT512aSERS_( X$1, UPPERLIMIT$1 );
  label$4070:;
 }
 uint64 vr$5 = _ZN9_FLOAT512cvyEv( X$1 );
 fb$result$1 = (double)vr$5;
 goto label$4066;
 label$4066:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_MINFEhh( struct $12SYSTEM_BUS_T* THIS$1, uint8 V1$1, uint8 V2$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4071:;
 if( (int64)V1$1 >= (int64)V2$1 ) goto label$4074;
 {
  fb$result$1 = (double)V1$1;
  goto label$4072;
  label$4074:;
 }
 fb$result$1 = (double)V2$1;
 goto label$4072;
 label$4072:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_MINFEaa( struct $12SYSTEM_BUS_T* THIS$1, int8 V1$1, int8 V2$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4075:;
 if( (int64)V1$1 >= (int64)V2$1 ) goto label$4078;
 {
  fb$result$1 = (double)V1$1;
  goto label$4076;
  label$4078:;
 }
 fb$result$1 = (double)V2$1;
 goto label$4076;
 label$4076:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_MINFEtt( struct $12SYSTEM_BUS_T* THIS$1, uint16 V1$1, uint16 V2$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4079:;
 if( (int64)V1$1 >= (int64)V2$1 ) goto label$4082;
 {
  fb$result$1 = (double)V1$1;
  goto label$4080;
  label$4082:;
 }
 fb$result$1 = (double)V2$1;
 goto label$4080;
 label$4080:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_MINFEss( struct $12SYSTEM_BUS_T* THIS$1, int16 V1$1, int16 V2$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4083:;
 if( (int64)V1$1 >= (int64)V2$1 ) goto label$4086;
 {
  fb$result$1 = (double)V1$1;
  goto label$4084;
  label$4086:;
 }
 fb$result$1 = (double)V2$1;
 goto label$4084;
 label$4084:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_MINFEjj( struct $12SYSTEM_BUS_T* THIS$1, uint32 V1$1, uint32 V2$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4087:;
 if( (int64)V1$1 >= (int64)V2$1 ) goto label$4090;
 {
  fb$result$1 = (double)V1$1;
  goto label$4088;
  label$4090:;
 }
 fb$result$1 = (double)V2$1;
 goto label$4088;
 label$4088:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_MINFEii( struct $12SYSTEM_BUS_T* THIS$1, int32 V1$1, int32 V2$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4091:;
 if( (int64)V1$1 >= (int64)V2$1 ) goto label$4094;
 {
  fb$result$1 = (double)V1$1;
  goto label$4092;
  label$4094:;
 }
 fb$result$1 = (double)V2$1;
 goto label$4092;
 label$4092:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_MINFEyy( struct $12SYSTEM_BUS_T* THIS$1, uint64 V1$1, uint64 V2$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4095:;
 if( V1$1 >= V2$1 ) goto label$4098;
 {
  fb$result$1 = (double)V1$1;
  goto label$4096;
  label$4098:;
 }
 fb$result$1 = (double)V2$1;
 goto label$4096;
 label$4096:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_MINFExx( struct $12SYSTEM_BUS_T* THIS$1, int64 V1$1, int64 V2$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4099:;
 if( V1$1 >= V2$1 ) goto label$4102;
 {
  fb$result$1 = (double)V1$1;
  goto label$4100;
  label$4102:;
 }
 fb$result$1 = (double)V2$1;
 goto label$4100;
 label$4100:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_MINFEff( struct $12SYSTEM_BUS_T* THIS$1, float V1$1, float V2$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4103:;
 if( V1$1 >= V2$1 ) goto label$4106;
 {
  fb$result$1 = (double)V1$1;
  goto label$4104;
  label$4106:;
 }
 fb$result$1 = (double)V2$1;
 goto label$4104;
 label$4104:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_MINFEdd( struct $12SYSTEM_BUS_T* THIS$1, double V1$1, double V2$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4107:;
 if( V1$1 >= V2$1 ) goto label$4110;
 {
  fb$result$1 = V1$1;
  goto label$4108;
  label$4110:;
 }
 fb$result$1 = V2$1;
 goto label$4108;
 label$4108:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_MINFER9_FLOAT128S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* V1$1, struct $9_FLOAT128* V2$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4111:;
 uint64 vr$1 = _ZN9_FLOAT128cvyEv( V1$1 );
 uint64 vr$2 = _ZN9_FLOAT128cvyEv( V2$1 );
 if( vr$1 >= vr$2 ) goto label$4114;
 {
  uint64 vr$3 = _ZN9_FLOAT128cvyEv( V1$1 );
  fb$result$1 = (double)vr$3;
  goto label$4112;
  label$4114:;
 }
 uint64 vr$5 = _ZN9_FLOAT128cvyEv( V2$1 );
 fb$result$1 = (double)vr$5;
 goto label$4112;
 label$4112:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_MINFER9_FLOAT256S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* V1$1, struct $9_FLOAT256* V2$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4115:;
 uint64 vr$1 = _ZN9_FLOAT256cvyEv( V1$1 );
 uint64 vr$2 = _ZN9_FLOAT256cvyEv( V2$1 );
 if( vr$1 >= vr$2 ) goto label$4118;
 {
  uint64 vr$3 = _ZN9_FLOAT256cvyEv( V1$1 );
  fb$result$1 = (double)vr$3;
  goto label$4116;
  label$4118:;
 }
 uint64 vr$5 = _ZN9_FLOAT256cvyEv( V2$1 );
 fb$result$1 = (double)vr$5;
 goto label$4116;
 label$4116:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_MINFER9_FLOAT512S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* V1$1, struct $9_FLOAT512* V2$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4119:;
 uint64 vr$1 = _ZN9_FLOAT512cvyEv( V1$1 );
 uint64 vr$2 = _ZN9_FLOAT512cvyEv( V2$1 );
 if( vr$1 >= vr$2 ) goto label$4122;
 {
  uint64 vr$3 = _ZN9_FLOAT512cvyEv( V1$1 );
  fb$result$1 = (double)vr$3;
  goto label$4120;
  label$4122:;
 }
 uint64 vr$5 = _ZN9_FLOAT512cvyEv( V2$1 );
 fb$result$1 = (double)vr$5;
 goto label$4120;
 label$4120:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_MAXFEhh( struct $12SYSTEM_BUS_T* THIS$1, uint8 V1$1, uint8 V2$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4123:;
 if( (int64)V1$1 <= (int64)V2$1 ) goto label$4126;
 {
  fb$result$1 = (double)V1$1;
  goto label$4124;
  label$4126:;
 }
 fb$result$1 = (double)V2$1;
 goto label$4124;
 label$4124:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_MAXFEaa( struct $12SYSTEM_BUS_T* THIS$1, int8 V1$1, int8 V2$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4127:;
 if( (int64)V1$1 <= (int64)V2$1 ) goto label$4130;
 {
  fb$result$1 = (double)V1$1;
  goto label$4128;
  label$4130:;
 }
 fb$result$1 = (double)V2$1;
 goto label$4128;
 label$4128:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_MAXFEtt( struct $12SYSTEM_BUS_T* THIS$1, uint16 V1$1, uint16 V2$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4131:;
 if( (int64)V1$1 <= (int64)V2$1 ) goto label$4134;
 {
  fb$result$1 = (double)V1$1;
  goto label$4132;
  label$4134:;
 }
 fb$result$1 = (double)V2$1;
 goto label$4132;
 label$4132:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_MAXFEss( struct $12SYSTEM_BUS_T* THIS$1, int16 V1$1, int16 V2$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4135:;
 if( (int64)V1$1 <= (int64)V2$1 ) goto label$4138;
 {
  fb$result$1 = (double)V1$1;
  goto label$4136;
  label$4138:;
 }
 fb$result$1 = (double)V2$1;
 goto label$4136;
 label$4136:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_MAXFEjj( struct $12SYSTEM_BUS_T* THIS$1, uint32 V1$1, uint32 V2$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4139:;
 if( (int64)V1$1 <= (int64)V2$1 ) goto label$4142;
 {
  fb$result$1 = (double)V1$1;
  goto label$4140;
  label$4142:;
 }
 fb$result$1 = (double)V2$1;
 goto label$4140;
 label$4140:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_MAXFEii( struct $12SYSTEM_BUS_T* THIS$1, int32 V1$1, int32 V2$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4143:;
 if( (int64)V1$1 <= (int64)V2$1 ) goto label$4146;
 {
  fb$result$1 = (double)V1$1;
  goto label$4144;
  label$4146:;
 }
 fb$result$1 = (double)V2$1;
 goto label$4144;
 label$4144:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_MAXFEyy( struct $12SYSTEM_BUS_T* THIS$1, uint64 V1$1, uint64 V2$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4147:;
 if( V1$1 <= V2$1 ) goto label$4150;
 {
  fb$result$1 = (double)V1$1;
  goto label$4148;
  label$4150:;
 }
 fb$result$1 = (double)V2$1;
 goto label$4148;
 label$4148:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_MAXFExx( struct $12SYSTEM_BUS_T* THIS$1, int64 V1$1, int64 V2$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4151:;
 if( V1$1 <= V2$1 ) goto label$4154;
 {
  fb$result$1 = (double)V1$1;
  goto label$4152;
  label$4154:;
 }
 fb$result$1 = (double)V2$1;
 goto label$4152;
 label$4152:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_MAXFEff( struct $12SYSTEM_BUS_T* THIS$1, float V1$1, float V2$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4155:;
 if( V1$1 <= V2$1 ) goto label$4158;
 {
  fb$result$1 = (double)V1$1;
  goto label$4156;
  label$4158:;
 }
 fb$result$1 = (double)V2$1;
 goto label$4156;
 label$4156:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_MAXFEdd( struct $12SYSTEM_BUS_T* THIS$1, double V1$1, double V2$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4159:;
 if( V1$1 <= V2$1 ) goto label$4162;
 {
  fb$result$1 = V1$1;
  goto label$4160;
  label$4162:;
 }
 fb$result$1 = V2$1;
 goto label$4160;
 label$4160:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_MAXFER9_FLOAT128S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* V1$1, struct $9_FLOAT128* V2$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4163:;
 uint64 vr$1 = _ZN9_FLOAT128cvyEv( V1$1 );
 uint64 vr$2 = _ZN9_FLOAT128cvyEv( V2$1 );
 if( vr$1 <= vr$2 ) goto label$4166;
 {
  uint64 vr$3 = _ZN9_FLOAT128cvyEv( V1$1 );
  fb$result$1 = (double)vr$3;
  goto label$4164;
  label$4166:;
 }
 uint64 vr$5 = _ZN9_FLOAT128cvyEv( V2$1 );
 fb$result$1 = (double)vr$5;
 goto label$4164;
 label$4164:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_MAXFER9_FLOAT256S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* V1$1, struct $9_FLOAT256* V2$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4167:;
 uint64 vr$1 = _ZN9_FLOAT256cvyEv( V1$1 );
 uint64 vr$2 = _ZN9_FLOAT256cvyEv( V2$1 );
 if( vr$1 <= vr$2 ) goto label$4170;
 {
  uint64 vr$3 = _ZN9_FLOAT256cvyEv( V1$1 );
  fb$result$1 = (double)vr$3;
  goto label$4168;
  label$4170:;
 }
 uint64 vr$5 = _ZN9_FLOAT256cvyEv( V2$1 );
 fb$result$1 = (double)vr$5;
 goto label$4168;
 label$4168:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_MAXFER9_FLOAT512S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* V1$1, struct $9_FLOAT512* V2$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4171:;
 uint64 vr$1 = _ZN9_FLOAT512cvyEv( V1$1 );
 uint64 vr$2 = _ZN9_FLOAT512cvyEv( V2$1 );
 if( vr$1 <= vr$2 ) goto label$4174;
 {
  uint64 vr$3 = _ZN9_FLOAT512cvyEv( V1$1 );
  fb$result$1 = (double)vr$3;
  goto label$4172;
  label$4174:;
 }
 uint64 vr$5 = _ZN9_FLOAT512cvyEv( V2$1 );
 fb$result$1 = (double)vr$5;
 goto label$4172;
 label$4172:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8K_STRLENEPh( struct $12SYSTEM_BUS_T* THIS$1, uint8* S$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4175:;
 double RETVAL$1;
 __builtin_memset( &RETVAL$1, 0, 8ll );
 RETVAL$1 = 0x0p+0;
 label$4177:;
 if( (int64)*(uint8*)(S$1 + ((int64)__builtin_nearbyint( RETVAL$1 ))) == 0ll ) goto label$4178;
 {
  RETVAL$1 = RETVAL$1 + 0x1.p+0;
 }
 goto label$4177;
 label$4178:;
 fb$result$1 = RETVAL$1;
 goto label$4176;
 label$4176:;
 return fb$result$1;
}

uint8* _ZN12SYSTEM_BUS_T9K_STRTRIMEPh( struct $12SYSTEM_BUS_T* THIS$1, uint8* S$1 )
{
 uint8* fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4179:;
 uint8* RETVAL$1;
 RETVAL$1 = (uint8*)((uint8*)THIS$1 + 16865648ll);
 *RETVAL$1 = (uint8)0u;
 int64 I$1;
 I$1 = 0ll;
 int64 J$1;
 J$1 = 0ll;
 label$4181:;
 if( (((((int64)-((int64)*(uint8*)(S$1 + I$1) != 0ll) & (int64)-((int64)*(uint8*)(S$1 + I$1) == 32ll)) & (int64)-((int64)*(uint8*)(S$1 + I$1) != 9ll)) & (int64)-((int64)*(uint8*)(S$1 + I$1) != 10ll)) & (int64)-((int64)*(uint8*)(S$1 + I$1) != 13ll)) == 0ll ) goto label$4182;
 {
  I$1 = I$1 + 1ll;
 }
 goto label$4181;
 label$4182:;
 label$4183:;
 if( (int64)*(uint8*)(S$1 + I$1) == 0ll ) goto label$4184;
 {
  *(uint8*)(RETVAL$1 + J$1) = *(uint8*)(S$1 + I$1);
  I$1 = I$1 + 1ll;
  J$1 = J$1 + 1ll;
 }
 goto label$4183;
 label$4184:;
 *(uint8*)(RETVAL$1 + J$1) = (uint8)0u;
 _ZN12SYSTEM_BUS_T8K_STRREVEPh( THIS$1, RETVAL$1 );
 I$1 = 0ll;
 J$1 = 0ll;
 label$4185:;
 if( (((((int64)-((int64)*(uint8*)(RETVAL$1 + I$1) != 0ll) & (int64)-((int64)*(uint8*)(RETVAL$1 + I$1) == 32ll)) & (int64)-((int64)*(uint8*)(RETVAL$1 + I$1) == 9ll)) & (int64)-((int64)*(uint8*)(RETVAL$1 + I$1) == 10ll)) & (int64)-((int64)*(uint8*)(RETVAL$1 + I$1) == 13ll)) == 0ll ) goto label$4186;
 {
  I$1 = I$1 + 1ll;
 }
 goto label$4185;
 label$4186:;
 label$4187:;
 if( (int64)*(uint8*)(RETVAL$1 + I$1) == 0ll ) goto label$4188;
 {
  *(uint8*)(RETVAL$1 + J$1) = *(uint8*)(RETVAL$1 + I$1);
  I$1 = I$1 + 1ll;
  J$1 = J$1 + 1ll;
 }
 goto label$4187;
 label$4188:;
 *(uint8*)(RETVAL$1 + J$1) = (uint8)0u;
 _ZN12SYSTEM_BUS_T8K_STRREVEPh( THIS$1, RETVAL$1 );
 fb$result$1 = RETVAL$1;
 goto label$4180;
 label$4180:;
 return fb$result$1;
}

uint8* _ZN12SYSTEM_BUS_T12K_STRTOUPPEREPh( struct $12SYSTEM_BUS_T* THIS$1, uint8* S$1 )
{
 uint8* fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4189:;
 double I$1;
 __builtin_memset( &I$1, 0, 8ll );
 uint8* DST$1;
 DST$1 = (uint8*)((uint8*)THIS$1 + 16865648ll);
 I$1 = 0x0p+0;
 label$4191:;
 if( ((int64)-((int64)*(uint8*)(S$1 + ((int64)__builtin_nearbyint( I$1 ))) != 0ll) & (int64)-(I$1 < 0x1.FFp+9)) == 0ll ) goto label$4192;
 {
  if( ((int64)-((int64)*(uint8*)(S$1 + ((int64)__builtin_nearbyint( I$1 ))) >= 97ll) & (int64)-((int64)*(uint8*)(S$1 + ((int64)__builtin_nearbyint( I$1 ))) <= 122ll)) == 0ll ) goto label$4194;
  {
   *(uint8*)(DST$1 + ((int64)__builtin_nearbyint( I$1 ))) = (uint8)((int64)*(uint8*)(S$1 + ((int64)__builtin_nearbyint( I$1 ))) + -32ll);
  }
  goto label$4193;
  label$4194:;
  {
   *(uint8*)(DST$1 + ((int64)__builtin_nearbyint( I$1 ))) = *(uint8*)(S$1 + ((int64)__builtin_nearbyint( I$1 )));
  }
  label$4193:;
  I$1 = I$1 + 0x1.p+0;
 }
 goto label$4191;
 label$4192:;
 *(uint8*)(DST$1 + ((int64)__builtin_nearbyint( I$1 ))) = (uint8)0u;
 fb$result$1 = DST$1;
 goto label$4190;
 label$4190:;
 return fb$result$1;
}

uint8* _ZN12SYSTEM_BUS_T12K_STRTOLOWEREPh( struct $12SYSTEM_BUS_T* THIS$1, uint8* S$1 )
{
 uint8* fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4195:;
 double I$1;
 __builtin_memset( &I$1, 0, 8ll );
 uint8* DST$1;
 DST$1 = (uint8*)((uint8*)THIS$1 + 16865648ll);
 I$1 = 0x0p+0;
 label$4197:;
 if( ((int64)-((int64)*(uint8*)(S$1 + ((int64)__builtin_nearbyint( I$1 ))) != 0ll) & (int64)-(I$1 < 0x1.FFp+9)) == 0ll ) goto label$4198;
 {
  if( ((int64)-((int64)*(uint8*)(S$1 + ((int64)__builtin_nearbyint( I$1 ))) >= 65ll) & (int64)-((int64)*(uint8*)(S$1 + ((int64)__builtin_nearbyint( I$1 ))) <= 90ll)) == 0ll ) goto label$4200;
  {
   *(uint8*)(DST$1 + ((int64)__builtin_nearbyint( I$1 ))) = (uint8)((int64)*(uint8*)(S$1 + ((int64)__builtin_nearbyint( I$1 ))) + 32ll);
  }
  goto label$4199;
  label$4200:;
  {
   *(uint8*)(DST$1 + ((int64)__builtin_nearbyint( I$1 ))) = *(uint8*)(S$1 + ((int64)__builtin_nearbyint( I$1 )));
  }
  label$4199:;
  I$1 = I$1 + 0x1.p+0;
 }
 goto label$4197;
 label$4198:;
 *(uint8*)(DST$1 + ((int64)__builtin_nearbyint( I$1 ))) = (uint8)0u;
 fb$result$1 = DST$1;
 goto label$4196;
 label$4196:;
 return fb$result$1;
}

uint8* _ZN12SYSTEM_BUS_T11K_SUBSTRINGEPhdd( struct $12SYSTEM_BUS_T* THIS$1, uint8* S$1, double INDEX$1, double COUNT$1 )
{
 uint8* fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4201:;
 double I$1;
 __builtin_memset( &I$1, 0, 8ll );
 uint8* DST$1;
 DST$1 = (uint8*)((uint8*)THIS$1 + 16865648ll);
 double L$1;
 double vr$4 = _ZN12SYSTEM_BUS_T8K_STRLENEPh( THIS$1, S$1 );
 L$1 = vr$4;
 I$1 = 0x0p+0;
 label$4203:;
 if( ((((int64)-((int64)*(uint8*)(S$1 + ((int64)__builtin_nearbyint( I$1 + INDEX$1 ))) != 0ll) & (int64)-((I$1 + INDEX$1) < 0x1.FFp+9)) & (int64)-((I$1 + INDEX$1) < L$1)) & ((int64)-(I$1 < COUNT$1) | (int64)-(COUNT$1 == -0x1.p+0))) == 0ll ) goto label$4204;
 {
  *(uint8*)(DST$1 + ((int64)__builtin_nearbyint( I$1 ))) = *(uint8*)(S$1 + ((int64)__builtin_nearbyint( I$1 + INDEX$1 )));
  I$1 = I$1 + 0x1.p+0;
 }
 goto label$4203;
 label$4204:;
 *(uint8*)(DST$1 + ((int64)__builtin_nearbyint( I$1 ))) = (uint8)0u;
 fb$result$1 = DST$1;
 goto label$4202;
 label$4202:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T9K_STRNCMPEPhS0_d( struct $12SYSTEM_BUS_T* THIS$1, uint8* S1$1, uint8* S2$1, double COUNT$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4205:;
 double RETVAL$1;
 RETVAL$1 = 0x0p+0;
 double I$1;
 I$1 = 0x0p+0;
 label$4207:;
 if( I$1 >= COUNT$1 ) goto label$4208;
 {
  if( (int64)*(uint8*)(S1$1 + ((int64)__builtin_nearbyint( I$1 ))) == (int64)*(uint8*)(S2$1 + ((int64)__builtin_nearbyint( I$1 ))) ) goto label$4210;
  {
   fb$result$1 = (double)((int64)*(uint8*)(S1$1 + ((int64)__builtin_nearbyint( I$1 ))) - (int64)*(uint8*)(S2$1 + ((int64)__builtin_nearbyint( I$1 ))));
   goto label$4206;
   label$4210:;
  }
  I$1 = I$1 + 0x1.p+0;
 }
 goto label$4207;
 label$4208:;
 fb$result$1 = 0x0p+0;
 goto label$4206;
 label$4206:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T16K_STRLASTINDEXOFEPhS0_( struct $12SYSTEM_BUS_T* THIS$1, uint8* S$1, uint8* S2$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4211:;
 double L1$1;
 double vr$1 = _ZN12SYSTEM_BUS_T8K_STRLENEPh( THIS$1, S$1 );
 L1$1 = vr$1;
 double L2$1;
 double vr$2 = _ZN12SYSTEM_BUS_T8K_STRLENEPh( THIS$1, S2$1 );
 L2$1 = vr$2;
 double I$1;
 __builtin_memset( &I$1, 0, 8ll );
 double J$1;
 __builtin_memset( &J$1, 0, 8ll );
 int64 OK$1;
 OK$1 = 0ll;
 {
  I$1 = L1$1 - L2$1;
  goto label$4213;
  label$4216:;
  {
   if( (int64)*(uint8*)(S$1 + ((int64)__builtin_nearbyint( I$1 ))) != (int64)*S2$1 ) goto label$4218;
   {
    OK$1 = 1ll;
    {
     J$1 = 0x0p+0;
     double TMP$2538$5;
     TMP$2538$5 = L2$1 + -0x1.p+0;
     goto label$4219;
     label$4222:;
     {
      if( (int64)*(uint8*)(S$1 + ((int64)__builtin_nearbyint( I$1 + J$1 ))) == (int64)*(uint8*)(S2$1 + ((int64)__builtin_nearbyint( J$1 ))) ) goto label$4224;
      {
       OK$1 = 0ll;
       goto label$4221;
      }
      label$4224:;
      label$4223:;
     }
     label$4220:;
     J$1 = J$1 + 0x1.p+0;
     label$4219:;
     if( J$1 <= TMP$2538$5 ) goto label$4222;
     label$4221:;
    }
    if( OK$1 == 0ll ) goto label$4226;
    {
     fb$result$1 = I$1;
     goto label$4212;
     label$4226:;
    }
   }
   label$4218:;
   label$4217:;
  }
  label$4214:;
  I$1 = I$1 + -0x1.p+0;
  label$4213:;
  if( I$1 >= 0x0p+0 ) goto label$4216;
  label$4215:;
 }
 fb$result$1 = -0x1.p+0;
 goto label$4212;
 label$4212:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T13K_STRENDSWITHEPhS0_( struct $12SYSTEM_BUS_T* THIS$1, uint8* SRC$1, uint8* SEARCH$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4227:;
 double vr$1 = _ZN12SYSTEM_BUS_T16K_STRLASTINDEXOFEPhS0_( THIS$1, SRC$1, SEARCH$1 );
 double vr$2 = _ZN12SYSTEM_BUS_T8K_STRLENEPh( THIS$1, SRC$1 );
 double vr$3 = _ZN12SYSTEM_BUS_T8K_STRLENEPh( THIS$1, SEARCH$1 );
 if( vr$1 != (vr$2 - vr$3) ) goto label$4230;
 {
  fb$result$1 = 0x1.p+0;
  goto label$4228;
 }
 goto label$4229;
 label$4230:;
 {
  fb$result$1 = 0x0p+0;
  goto label$4228;
 }
 label$4229:;
 label$4228:;
 return fb$result$1;
}

void _ZN12SYSTEM_BUS_T8K_STRREVEPh( struct $12SYSTEM_BUS_T* THIS$1, uint8* S$1 )
{
 label$4231:;
 int64 L$1;
 double vr$0 = _ZN12SYSTEM_BUS_T8K_STRLENEPh( THIS$1, S$1 );
 L$1 = ((int64)__builtin_nearbyint( vr$0 ));
 int64 I$1;
 __builtin_memset( &I$1, 0, 8ll );
 uint8 TMP$1;
 __builtin_memset( &TMP$1, 0, 1ll );
 uint8 TMP2$1;
 __builtin_memset( &TMP2$1, 0, 1ll );
 {
  I$1 = 0ll;
  int64 TMP$2539$2;
  TMP$2539$2 = ((int64)__builtin_nearbyint( ((double)L$1 / 0x1.p+1) + -0x1.p+0 ));
  goto label$4233;
  label$4236:;
  {
   TMP$1 = *(uint8*)(S$1 + I$1);
   TMP2$1 = *(uint8*)((uint8*)(S$1 + (L$1 - I$1)) + -1ll);
   *(uint8*)(S$1 + I$1) = TMP2$1;
   *(uint8*)((uint8*)(S$1 + (L$1 - I$1)) + -1ll) = TMP$1;
  }
  label$4234:;
  I$1 = I$1 + 1ll;
  label$4233:;
  if( I$1 <= TMP$2539$2 ) goto label$4236;
  label$4235:;
 }
 label$4232:;
}

double _ZN12SYSTEM_BUS_T13K_STRCONTAINSEPhS0_( struct $12SYSTEM_BUS_T* THIS$1, uint8* S$1, uint8* S2$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4237:;
 fb$result$1 = 0x0p+0;
 goto label$4238;
 label$4238:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T12K_STRINDEXOFEPhS0_( struct $12SYSTEM_BUS_T* THIS$1, uint8* S$1, uint8* S2$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4239:;
 double L1$1;
 double vr$1 = _ZN12SYSTEM_BUS_T8K_STRLENEPh( THIS$1, S$1 );
 L1$1 = vr$1;
 double L2$1;
 double vr$2 = _ZN12SYSTEM_BUS_T8K_STRLENEPh( THIS$1, S2$1 );
 L2$1 = vr$2;
 int64 I$1;
 __builtin_memset( &I$1, 0, 8ll );
 int64 J$1;
 __builtin_memset( &J$1, 0, 8ll );
 int64 OK$1;
 OK$1 = 0ll;
 {
  I$1 = 0ll;
  int64 TMP$2540$2;
  TMP$2540$2 = ((int64)__builtin_nearbyint( L1$1 - L2$1 ));
  goto label$4241;
  label$4244:;
  {
   if( (int64)*(uint8*)(S$1 + I$1) != (int64)*S2$1 ) goto label$4246;
   {
    OK$1 = 1ll;
    {
     J$1 = 0ll;
     int64 TMP$2541$5;
     TMP$2541$5 = ((int64)__builtin_nearbyint( L2$1 + -0x1.p+0 ));
     goto label$4247;
     label$4250:;
     {
      if( (int64)*(uint8*)((uint8*)(S$1 + I$1) + J$1) == (int64)*(uint8*)(S2$1 + J$1) ) goto label$4252;
      {
       OK$1 = 0ll;
       goto label$4249;
      }
      label$4252:;
      label$4251:;
     }
     label$4248:;
     J$1 = J$1 + 1ll;
     label$4247:;
     if( J$1 <= TMP$2541$5 ) goto label$4250;
     label$4249:;
    }
    if( OK$1 == 0ll ) goto label$4254;
    {
     fb$result$1 = (double)I$1;
     goto label$4240;
     label$4254:;
    }
   }
   label$4246:;
   label$4245:;
  }
  label$4242:;
  I$1 = I$1 + 1ll;
  label$4241:;
  if( I$1 <= TMP$2540$2 ) goto label$4244;
  label$4243:;
 }
 fb$result$1 = -0x1.p+0;
 goto label$4240;
 label$4240:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8K_STRCMPEPhS0_( struct $12SYSTEM_BUS_T* THIS$1, uint8* S1$1, uint8* S2$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4255:;
 double RETVAL$1;
 RETVAL$1 = 0x0p+0;
 double I$1;
 I$1 = 0x0p+0;
 label$4257:;
 if( (((int64)-((int64)*(uint8*)(S1$1 + ((int64)__builtin_nearbyint( I$1 ))) == (int64)*(uint8*)(S2$1 + ((int64)__builtin_nearbyint( I$1 )))) & (int64)-((int64)*(uint8*)(S1$1 + ((int64)__builtin_nearbyint( I$1 ))) != 0ll)) & (int64)-((int64)*(uint8*)(S2$1 + ((int64)__builtin_nearbyint( I$1 ))) != 0ll)) == 0ll ) goto label$4258;
 {
  I$1 = I$1 + 0x1.p+0;
 }
 goto label$4257;
 label$4258:;
 fb$result$1 = (double)((int64)*(uint8*)(S1$1 + ((int64)__builtin_nearbyint( I$1 ))) - (int64)*(uint8*)(S2$1 + ((int64)__builtin_nearbyint( I$1 ))));
 goto label$4256;
 label$4256:;
 return fb$result$1;
}

uint8* _ZN12SYSTEM_BUS_T8K_STRCATEPhS0_( struct $12SYSTEM_BUS_T* THIS$1, uint8* S1$1, uint8* S2$1 )
{
 uint8* fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4259:;
 double I1$1;
 I1$1 = 0x0p+0;
 double I2$1;
 I2$1 = 0x0p+0;
 uint8* DST$1;
 DST$1 = (uint8*)((uint8*)THIS$1 + 16865648ll);
 label$4261:;
 if( ((int64)-((int64)*(uint8*)(S1$1 + ((int64)__builtin_nearbyint( I1$1 ))) != 0ll) & (int64)-(I1$1 < 0x1.FFp+9)) == 0ll ) goto label$4262;
 {
  *(uint8*)(DST$1 + ((int64)__builtin_nearbyint( I1$1 ))) = *(uint8*)(S1$1 + ((int64)__builtin_nearbyint( I1$1 )));
  I1$1 = I1$1 + 0x1.p+0;
 }
 goto label$4261;
 label$4262:;
 label$4263:;
 if( ((int64)-((int64)*(uint8*)(S2$1 + ((int64)__builtin_nearbyint( I2$1 ))) != 0ll) & (int64)-((I1$1 + I2$1) < 0x1.FFp+9)) == 0ll ) goto label$4264;
 {
  *(uint8*)(DST$1 + ((int64)__builtin_nearbyint( I1$1 + I2$1 ))) = *(uint8*)(S2$1 + ((int64)__builtin_nearbyint( I2$1 )));
  I2$1 = I2$1 + 0x1.p+0;
 }
 goto label$4263;
 label$4264:;
 *(uint8*)(DST$1 + ((int64)__builtin_nearbyint( I1$1 + I2$1 ))) = (uint8)0u;
 fb$result$1 = DST$1;
 goto label$4260;
 label$4260:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T3K_FEh( struct $12SYSTEM_BUS_T* THIS$1, uint8 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4265:;
 fb$result$1 = (double)((int64)X$1 * (int64)X$1);
 goto label$4266;
 label$4266:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T3K_FEa( struct $12SYSTEM_BUS_T* THIS$1, int8 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4267:;
 fb$result$1 = (double)((int64)X$1 * (int64)X$1);
 goto label$4268;
 label$4268:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T3K_FEt( struct $12SYSTEM_BUS_T* THIS$1, uint16 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4269:;
 fb$result$1 = (double)((int64)X$1 * (int64)X$1);
 goto label$4270;
 label$4270:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T3K_FEs( struct $12SYSTEM_BUS_T* THIS$1, int16 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4271:;
 fb$result$1 = (double)((int64)X$1 * (int64)X$1);
 goto label$4272;
 label$4272:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T3K_FEj( struct $12SYSTEM_BUS_T* THIS$1, uint32 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4273:;
 fb$result$1 = (double)((int64)X$1 * (int64)X$1);
 goto label$4274;
 label$4274:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T3K_FEi( struct $12SYSTEM_BUS_T* THIS$1, int32 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4275:;
 fb$result$1 = (double)((int64)X$1 * (int64)X$1);
 goto label$4276;
 label$4276:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T3K_FEy( struct $12SYSTEM_BUS_T* THIS$1, uint64 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4277:;
 fb$result$1 = (double)(X$1 * X$1);
 goto label$4278;
 label$4278:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T3K_FEx( struct $12SYSTEM_BUS_T* THIS$1, int64 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4279:;
 fb$result$1 = (double)(X$1 * X$1);
 goto label$4280;
 label$4280:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T3K_FEf( struct $12SYSTEM_BUS_T* THIS$1, float X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4281:;
 fb$result$1 = (double)(X$1 * X$1);
 goto label$4282;
 label$4282:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T3K_FEd( struct $12SYSTEM_BUS_T* THIS$1, double X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4283:;
 fb$result$1 = X$1 * X$1;
 goto label$4284;
 label$4284:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T3K_FER9_FLOAT128( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* X$1 )
{
 struct $9_FLOAT128 TMP$2542$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4285:;
 struct $9_FLOAT128* vr$2 = _ZmlR9_FLOAT128S0_( &TMP$2542$1, X$1, X$1 );
 uint64 vr$3 = _ZN9_FLOAT128cvyEv( vr$2 );
 fb$result$1 = (double)vr$3;
 goto label$4286;
 label$4286:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T3K_FER9_FLOAT256( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* X$1 )
{
 struct $9_FLOAT256 TMP$2543$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4287:;
 struct $9_FLOAT256* vr$2 = _ZmlR9_FLOAT256S0_( &TMP$2543$1, X$1, X$1 );
 uint64 vr$3 = _ZN9_FLOAT256cvyEv( vr$2 );
 fb$result$1 = (double)vr$3;
 goto label$4288;
 label$4288:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T3K_FER9_FLOAT512( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* X$1 )
{
 struct $9_FLOAT512 TMP$2544$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4289:;
 struct $9_FLOAT512* vr$2 = _ZmlR9_FLOAT512S0_( &TMP$2544$1, X$1, X$1 );
 uint64 vr$3 = _ZN9_FLOAT512cvyEv( vr$2 );
 fb$result$1 = (double)vr$3;
 goto label$4290;
 label$4290:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_FREXPEhPh( struct $12SYSTEM_BUS_T* THIS$1, uint8 D$1, uint8* EP$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4291:;
 static union $5CHEAT X$1;
 if( (int64)D$1 != 0ll ) goto label$4294;
 {
  *EP$1 = (uint8)0u;
  fb$result$1 = 0x0p+0;
  goto label$4292;
 }
 label$4294:;
 label$4293:;
 *(double*)&X$1 = (double)D$1;
 *EP$1 = (uint8)((((int64)*(int32*)((uint8*)&X$1 + 4ll) >> (20ll & 63ll)) & 2047ll) + -1022ll);
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) & -2146435073ll);
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) | 1071644672ll);
 fb$result$1 = *(double*)&X$1;
 goto label$4292;
 label$4292:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_FREXPEaPa( struct $12SYSTEM_BUS_T* THIS$1, int8 D$1, int8* EP$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4295:;
 static union $5CHEAT X$1;
 if( (int64)D$1 != 0ll ) goto label$4298;
 {
  *EP$1 = (int8)0;
  fb$result$1 = 0x0p+0;
  goto label$4296;
 }
 label$4298:;
 label$4297:;
 *(double*)&X$1 = (double)D$1;
 *EP$1 = (int8)((((int64)*(int32*)((uint8*)&X$1 + 4ll) >> (20ll & 63ll)) & 2047ll) + -1022ll);
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) & -2146435073ll);
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) | 1071644672ll);
 fb$result$1 = *(double*)&X$1;
 goto label$4296;
 label$4296:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_FREXPEtPt( struct $12SYSTEM_BUS_T* THIS$1, uint16 D$1, uint16* EP$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4299:;
 static union $5CHEAT X$1;
 if( (int64)D$1 != 0ll ) goto label$4302;
 {
  *EP$1 = (uint16)0u;
  fb$result$1 = 0x0p+0;
  goto label$4300;
 }
 label$4302:;
 label$4301:;
 *(double*)&X$1 = (double)D$1;
 *EP$1 = (uint16)((((int64)*(int32*)((uint8*)&X$1 + 4ll) >> (20ll & 63ll)) & 2047ll) + -1022ll);
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) & -2146435073ll);
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) | 1071644672ll);
 fb$result$1 = *(double*)&X$1;
 goto label$4300;
 label$4300:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_FREXPEsPs( struct $12SYSTEM_BUS_T* THIS$1, int16 D$1, int16* EP$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4303:;
 static union $5CHEAT X$1;
 if( (int64)D$1 != 0ll ) goto label$4306;
 {
  *EP$1 = (int16)0;
  fb$result$1 = 0x0p+0;
  goto label$4304;
 }
 label$4306:;
 label$4305:;
 *(double*)&X$1 = (double)D$1;
 *EP$1 = (int16)((((int64)*(int32*)((uint8*)&X$1 + 4ll) >> (20ll & 63ll)) & 2047ll) + -1022ll);
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) & -2146435073ll);
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) | 1071644672ll);
 fb$result$1 = *(double*)&X$1;
 goto label$4304;
 label$4304:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_FREXPEjPj( struct $12SYSTEM_BUS_T* THIS$1, uint32 D$1, uint32* EP$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4307:;
 static union $5CHEAT X$1;
 if( (int64)D$1 != 0ll ) goto label$4310;
 {
  *EP$1 = 0u;
  fb$result$1 = 0x0p+0;
  goto label$4308;
 }
 label$4310:;
 label$4309:;
 *(double*)&X$1 = (double)D$1;
 *EP$1 = (uint32)((((int64)*(int32*)((uint8*)&X$1 + 4ll) >> (20ll & 63ll)) & 2047ll) + -1022ll);
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) & -2146435073ll);
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) | 1071644672ll);
 fb$result$1 = *(double*)&X$1;
 goto label$4308;
 label$4308:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_FREXPEiPi( struct $12SYSTEM_BUS_T* THIS$1, int32 D$1, int32* EP$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4311:;
 static union $5CHEAT X$1;
 if( (int64)D$1 != 0ll ) goto label$4314;
 {
  *EP$1 = 0;
  fb$result$1 = 0x0p+0;
  goto label$4312;
 }
 label$4314:;
 label$4313:;
 *(double*)&X$1 = (double)D$1;
 *EP$1 = (int32)((((int64)*(int32*)((uint8*)&X$1 + 4ll) >> (20ll & 63ll)) & 2047ll) + -1022ll);
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) & -2146435073ll);
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) | 1071644672ll);
 fb$result$1 = *(double*)&X$1;
 goto label$4312;
 label$4312:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_FREXPEyPy( struct $12SYSTEM_BUS_T* THIS$1, uint64 D$1, uint64* EP$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4315:;
 static union $5CHEAT X$1;
 if( D$1 != 0ull ) goto label$4318;
 {
  *EP$1 = 0ull;
  fb$result$1 = 0x0p+0;
  goto label$4316;
 }
 label$4318:;
 label$4317:;
 *(double*)&X$1 = (double)D$1;
 *EP$1 = (uint64)((((int64)*(int32*)((uint8*)&X$1 + 4ll) >> (20ll & 63ll)) & 2047ll) + -1022ll);
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) & -2146435073ll);
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) | 1071644672ll);
 fb$result$1 = *(double*)&X$1;
 goto label$4316;
 label$4316:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_FREXPExPx( struct $12SYSTEM_BUS_T* THIS$1, int64 D$1, int64* EP$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4319:;
 static union $5CHEAT X$1;
 if( D$1 != 0ll ) goto label$4322;
 {
  *EP$1 = 0ll;
  fb$result$1 = 0x0p+0;
  goto label$4320;
 }
 label$4322:;
 label$4321:;
 *(double*)&X$1 = (double)D$1;
 *EP$1 = (((int64)*(int32*)((uint8*)&X$1 + 4ll) >> (20ll & 63ll)) & 2047ll) + -1022ll;
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) & -2146435073ll);
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) | 1071644672ll);
 fb$result$1 = *(double*)&X$1;
 goto label$4320;
 label$4320:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_FREXPEfPf( struct $12SYSTEM_BUS_T* THIS$1, float D$1, float* EP$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4323:;
 static union $5CHEAT X$1;
 if( D$1 != 0x0p+0f ) goto label$4326;
 {
  *EP$1 = 0x0p+0f;
  fb$result$1 = 0x0p+0;
  goto label$4324;
 }
 label$4326:;
 label$4325:;
 *(double*)&X$1 = (double)D$1;
 *EP$1 = (float)((((int64)*(int32*)((uint8*)&X$1 + 4ll) >> (20ll & 63ll)) & 2047ll) + -1022ll);
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) & -2146435073ll);
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) | 1071644672ll);
 fb$result$1 = *(double*)&X$1;
 goto label$4324;
 label$4324:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_FREXPEdPd( struct $12SYSTEM_BUS_T* THIS$1, double D$1, double* EP$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4327:;
 static union $5CHEAT X$1;
 if( D$1 != 0x0p+0 ) goto label$4330;
 {
  *EP$1 = 0x0p+0;
  fb$result$1 = 0x0p+0;
  goto label$4328;
 }
 label$4330:;
 label$4329:;
 *(double*)&X$1 = D$1;
 *EP$1 = (double)((((int64)*(int32*)((uint8*)&X$1 + 4ll) >> (20ll & 63ll)) & 2047ll) + -1022ll);
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) & -2146435073ll);
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) | 1071644672ll);
 fb$result$1 = *(double*)&X$1;
 goto label$4328;
 label$4328:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_FREXPER9_FLOAT128PS0_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* D$1, struct $9_FLOAT128* EP$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4331:;
 static union $5CHEAT X$1;
 uint64 vr$1 = _ZN9_FLOAT128cvyEv( D$1 );
 if( vr$1 != 0ull ) goto label$4334;
 {
  _ZN9_FLOAT128aSEy( EP$1, 0ull );
  fb$result$1 = 0x0p+0;
  goto label$4332;
 }
 label$4334:;
 label$4333:;
 uint64 vr$2 = _ZN9_FLOAT128cvyEv( D$1 );
 *(double*)&X$1 = (double)vr$2;
 _ZN9_FLOAT128aSEy( EP$1, (uint64)((((int64)*(int32*)((uint8*)&X$1 + 4ll) >> (20ll & 63ll)) & 2047ll) + -1022ll) );
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) & -2146435073ll);
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) | 1071644672ll);
 fb$result$1 = *(double*)&X$1;
 goto label$4332;
 label$4332:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_FREXPER9_FLOAT256PS0_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* D$1, struct $9_FLOAT256* EP$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4335:;
 static union $5CHEAT X$1;
 uint64 vr$1 = _ZN9_FLOAT256cvyEv( D$1 );
 if( vr$1 != 0ull ) goto label$4338;
 {
  _ZN9_FLOAT256aSEy( EP$1, 0ull );
  fb$result$1 = 0x0p+0;
  goto label$4336;
 }
 label$4338:;
 label$4337:;
 uint64 vr$2 = _ZN9_FLOAT256cvyEv( D$1 );
 *(double*)&X$1 = (double)vr$2;
 _ZN9_FLOAT256aSEy( EP$1, (uint64)((((int64)*(int32*)((uint8*)&X$1 + 4ll) >> (20ll & 63ll)) & 2047ll) + -1022ll) );
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) & -2146435073ll);
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) | 1071644672ll);
 fb$result$1 = *(double*)&X$1;
 goto label$4336;
 label$4336:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_FREXPER9_FLOAT512PS0_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* D$1, struct $9_FLOAT512* EP$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4339:;
 static union $5CHEAT X$1;
 uint64 vr$1 = _ZN9_FLOAT512cvyEv( D$1 );
 if( vr$1 != 0ull ) goto label$4342;
 {
  _ZN9_FLOAT512aSEy( EP$1, 0ull );
  fb$result$1 = 0x0p+0;
  goto label$4340;
 }
 label$4342:;
 label$4341:;
 uint64 vr$2 = _ZN9_FLOAT512cvyEv( D$1 );
 *(double*)&X$1 = (double)vr$2;
 _ZN9_FLOAT512aSEy( EP$1, (uint64)((((int64)*(int32*)((uint8*)&X$1 + 4ll) >> (20ll & 63ll)) & 2047ll) + -1022ll) );
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) & -2146435073ll);
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) | 1071644672ll);
 fb$result$1 = *(double*)&X$1;
 goto label$4340;
 label$4340:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_LDEXPEhh( struct $12SYSTEM_BUS_T* THIS$1, uint8 D$1, uint8 E$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4343:;
 static union $5CHEAT X$1;
 if( (int64)D$1 != 0ll ) goto label$4346;
 {
  fb$result$1 = 0x0p+0;
  goto label$4344;
 }
 label$4346:;
 label$4345:;
 *(double*)&X$1 = (double)D$1;
 E$1 = (uint8)((int64)E$1 + (((int64)*(int32*)((uint8*)&X$1 + 4ll) >> (20ll & 63ll)) & 2047ll));
 if( (int64)E$1 > 0ll ) goto label$4348;
 {
  fb$result$1 = 0x0p+0;
  goto label$4344;
 }
 label$4348:;
 label$4347:;
 if( (int64)E$1 < 2047ll ) goto label$4350;
 {
  if( (int64)D$1 >= 0ll ) goto label$4352;
  {
   fb$result$1 = NEG_INF$;
   goto label$4344;
  }
  label$4352:;
  label$4351:;
  fb$result$1 = POS_INF$;
  goto label$4344;
 }
 label$4350:;
 label$4349:;
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) & -2146435073ll);
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) | ((int64)E$1 << (20ll & 63ll)));
 fb$result$1 = *(double*)&X$1;
 goto label$4344;
 label$4344:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_LDEXPEaa( struct $12SYSTEM_BUS_T* THIS$1, int8 D$1, int8 E$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4353:;
 static union $5CHEAT X$1;
 if( (int64)D$1 != 0ll ) goto label$4356;
 {
  fb$result$1 = 0x0p+0;
  goto label$4354;
 }
 label$4356:;
 label$4355:;
 *(double*)&X$1 = (double)D$1;
 E$1 = (int8)((int64)E$1 + (((int64)*(int32*)((uint8*)&X$1 + 4ll) >> (20ll & 63ll)) & 2047ll));
 if( (int64)E$1 > 0ll ) goto label$4358;
 {
  fb$result$1 = 0x0p+0;
  goto label$4354;
 }
 label$4358:;
 label$4357:;
 if( (int64)E$1 < 2047ll ) goto label$4360;
 {
  if( (int64)D$1 >= 0ll ) goto label$4362;
  {
   fb$result$1 = NEG_INF$;
   goto label$4354;
  }
  label$4362:;
  label$4361:;
  fb$result$1 = POS_INF$;
  goto label$4354;
 }
 label$4360:;
 label$4359:;
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) & -2146435073ll);
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) | ((int64)E$1 << (20ll & 63ll)));
 fb$result$1 = *(double*)&X$1;
 goto label$4354;
 label$4354:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_LDEXPEtt( struct $12SYSTEM_BUS_T* THIS$1, uint16 D$1, uint16 E$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4363:;
 static union $5CHEAT X$1;
 if( (int64)D$1 != 0ll ) goto label$4366;
 {
  fb$result$1 = 0x0p+0;
  goto label$4364;
 }
 label$4366:;
 label$4365:;
 *(double*)&X$1 = (double)D$1;
 E$1 = (uint16)((int64)E$1 + (((int64)*(int32*)((uint8*)&X$1 + 4ll) >> (20ll & 63ll)) & 2047ll));
 if( (int64)E$1 > 0ll ) goto label$4368;
 {
  fb$result$1 = 0x0p+0;
  goto label$4364;
 }
 label$4368:;
 label$4367:;
 if( (int64)E$1 < 2047ll ) goto label$4370;
 {
  if( (int64)D$1 >= 0ll ) goto label$4372;
  {
   fb$result$1 = NEG_INF$;
   goto label$4364;
  }
  label$4372:;
  label$4371:;
  fb$result$1 = POS_INF$;
  goto label$4364;
 }
 label$4370:;
 label$4369:;
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) & -2146435073ll);
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) | ((int64)E$1 << (20ll & 63ll)));
 fb$result$1 = *(double*)&X$1;
 goto label$4364;
 label$4364:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_LDEXPEss( struct $12SYSTEM_BUS_T* THIS$1, int16 D$1, int16 E$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4373:;
 static union $5CHEAT X$1;
 if( (int64)D$1 != 0ll ) goto label$4376;
 {
  fb$result$1 = 0x0p+0;
  goto label$4374;
 }
 label$4376:;
 label$4375:;
 *(double*)&X$1 = (double)D$1;
 E$1 = (int16)((int64)E$1 + (((int64)*(int32*)((uint8*)&X$1 + 4ll) >> (20ll & 63ll)) & 2047ll));
 if( (int64)E$1 > 0ll ) goto label$4378;
 {
  fb$result$1 = 0x0p+0;
  goto label$4374;
 }
 label$4378:;
 label$4377:;
 if( (int64)E$1 < 2047ll ) goto label$4380;
 {
  if( (int64)D$1 >= 0ll ) goto label$4382;
  {
   fb$result$1 = NEG_INF$;
   goto label$4374;
  }
  label$4382:;
  label$4381:;
  fb$result$1 = POS_INF$;
  goto label$4374;
 }
 label$4380:;
 label$4379:;
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) & -2146435073ll);
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) | ((int64)E$1 << (20ll & 63ll)));
 fb$result$1 = *(double*)&X$1;
 goto label$4374;
 label$4374:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_LDEXPEjj( struct $12SYSTEM_BUS_T* THIS$1, uint32 D$1, uint32 E$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4383:;
 static union $5CHEAT X$1;
 if( (int64)D$1 != 0ll ) goto label$4386;
 {
  fb$result$1 = 0x0p+0;
  goto label$4384;
 }
 label$4386:;
 label$4385:;
 *(double*)&X$1 = (double)D$1;
 E$1 = (uint32)((int64)E$1 + (((int64)*(int32*)((uint8*)&X$1 + 4ll) >> (20ll & 63ll)) & 2047ll));
 if( (int64)E$1 > 0ll ) goto label$4388;
 {
  fb$result$1 = 0x0p+0;
  goto label$4384;
 }
 label$4388:;
 label$4387:;
 if( (int64)E$1 < 2047ll ) goto label$4390;
 {
  if( (int64)D$1 >= 0ll ) goto label$4392;
  {
   fb$result$1 = NEG_INF$;
   goto label$4384;
  }
  label$4392:;
  label$4391:;
  fb$result$1 = POS_INF$;
  goto label$4384;
 }
 label$4390:;
 label$4389:;
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) & -2146435073ll);
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) | ((int64)E$1 << (20ll & 63ll)));
 fb$result$1 = *(double*)&X$1;
 goto label$4384;
 label$4384:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_LDEXPEii( struct $12SYSTEM_BUS_T* THIS$1, int32 D$1, int32 E$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4393:;
 static union $5CHEAT X$1;
 if( (int64)D$1 != 0ll ) goto label$4396;
 {
  fb$result$1 = 0x0p+0;
  goto label$4394;
 }
 label$4396:;
 label$4395:;
 *(double*)&X$1 = (double)D$1;
 E$1 = (int32)((int64)E$1 + (((int64)*(int32*)((uint8*)&X$1 + 4ll) >> (20ll & 63ll)) & 2047ll));
 if( (int64)E$1 > 0ll ) goto label$4398;
 {
  fb$result$1 = 0x0p+0;
  goto label$4394;
 }
 label$4398:;
 label$4397:;
 if( (int64)E$1 < 2047ll ) goto label$4400;
 {
  if( (int64)D$1 >= 0ll ) goto label$4402;
  {
   fb$result$1 = NEG_INF$;
   goto label$4394;
  }
  label$4402:;
  label$4401:;
  fb$result$1 = POS_INF$;
  goto label$4394;
 }
 label$4400:;
 label$4399:;
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) & -2146435073ll);
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) | ((int64)E$1 << (20ll & 63ll)));
 fb$result$1 = *(double*)&X$1;
 goto label$4394;
 label$4394:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_LDEXPEyy( struct $12SYSTEM_BUS_T* THIS$1, uint64 D$1, uint64 E$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4403:;
 static union $5CHEAT X$1;
 if( D$1 != 0ull ) goto label$4406;
 {
  fb$result$1 = 0x0p+0;
  goto label$4404;
 }
 label$4406:;
 label$4405:;
 *(double*)&X$1 = (double)D$1;
 E$1 = E$1 + (uint64)(((int64)*(int32*)((uint8*)&X$1 + 4ll) >> (20ll & 63ll)) & 2047ll);
 if( E$1 > 0ull ) goto label$4408;
 {
  fb$result$1 = 0x0p+0;
  goto label$4404;
 }
 label$4408:;
 label$4407:;
 if( E$1 < 2047ull ) goto label$4410;
 {
  if( D$1 >= 0ull ) goto label$4412;
  {
   fb$result$1 = NEG_INF$;
   goto label$4404;
  }
  label$4412:;
  label$4411:;
  fb$result$1 = POS_INF$;
  goto label$4404;
 }
 label$4410:;
 label$4409:;
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) & -2146435073ll);
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((uint64)(int64)*(int32*)((uint8*)&X$1 + 4ll) | (E$1 << (20ll & 63ll)));
 fb$result$1 = *(double*)&X$1;
 goto label$4404;
 label$4404:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_LDEXPExx( struct $12SYSTEM_BUS_T* THIS$1, int64 D$1, int64 E$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4413:;
 static union $5CHEAT X$1;
 if( D$1 != 0ll ) goto label$4416;
 {
  fb$result$1 = 0x0p+0;
  goto label$4414;
 }
 label$4416:;
 label$4415:;
 *(double*)&X$1 = (double)D$1;
 E$1 = E$1 + (((int64)*(int32*)((uint8*)&X$1 + 4ll) >> (20ll & 63ll)) & 2047ll);
 if( E$1 > 0ll ) goto label$4418;
 {
  fb$result$1 = 0x0p+0;
  goto label$4414;
 }
 label$4418:;
 label$4417:;
 if( E$1 < 2047ll ) goto label$4420;
 {
  if( D$1 >= 0ll ) goto label$4422;
  {
   fb$result$1 = NEG_INF$;
   goto label$4414;
  }
  label$4422:;
  label$4421:;
  fb$result$1 = POS_INF$;
  goto label$4414;
 }
 label$4420:;
 label$4419:;
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) & -2146435073ll);
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) | (E$1 << (20ll & 63ll)));
 fb$result$1 = *(double*)&X$1;
 goto label$4414;
 label$4414:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_LDEXPEff( struct $12SYSTEM_BUS_T* THIS$1, float D$1, float E$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4423:;
 static union $5CHEAT X$1;
 if( D$1 != 0x0p+0f ) goto label$4426;
 {
  fb$result$1 = 0x0p+0;
  goto label$4424;
 }
 label$4426:;
 label$4425:;
 *(double*)&X$1 = (double)D$1;
 E$1 = E$1 + (float)(((int64)*(int32*)((uint8*)&X$1 + 4ll) >> (20ll & 63ll)) & 2047ll);
 if( E$1 > 0x0p+0f ) goto label$4428;
 {
  fb$result$1 = 0x0p+0;
  goto label$4424;
 }
 label$4428:;
 label$4427:;
 if( E$1 < 0x1.FFCp+10f ) goto label$4430;
 {
  if( D$1 >= 0x0p+0f ) goto label$4432;
  {
   fb$result$1 = NEG_INF$;
   goto label$4424;
  }
  label$4432:;
  label$4431:;
  fb$result$1 = POS_INF$;
  goto label$4424;
 }
 label$4430:;
 label$4429:;
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) & -2146435073ll);
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) | (((int64)__builtin_nearbyintf( E$1 )) << (20ll & 63ll)));
 fb$result$1 = *(double*)&X$1;
 goto label$4424;
 label$4424:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_LDEXPEdd( struct $12SYSTEM_BUS_T* THIS$1, double D$1, double E$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4433:;
 static union $5CHEAT X$1;
 if( D$1 != 0x0p+0 ) goto label$4436;
 {
  fb$result$1 = 0x0p+0;
  goto label$4434;
 }
 label$4436:;
 label$4435:;
 *(double*)&X$1 = D$1;
 E$1 = E$1 + (double)(((int64)*(int32*)((uint8*)&X$1 + 4ll) >> (20ll & 63ll)) & 2047ll);
 if( E$1 > 0x0p+0 ) goto label$4438;
 {
  fb$result$1 = 0x0p+0;
  goto label$4434;
 }
 label$4438:;
 label$4437:;
 if( E$1 < 0x1.FFCp+10 ) goto label$4440;
 {
  if( D$1 >= 0x0p+0 ) goto label$4442;
  {
   fb$result$1 = NEG_INF$;
   goto label$4434;
  }
  label$4442:;
  label$4441:;
  fb$result$1 = POS_INF$;
  goto label$4434;
 }
 label$4440:;
 label$4439:;
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) & -2146435073ll);
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) | (((int64)__builtin_nearbyint( E$1 )) << (20ll & 63ll)));
 fb$result$1 = *(double*)&X$1;
 goto label$4434;
 label$4434:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_LDEXPER9_FLOAT128S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* D$1, struct $9_FLOAT128* E$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4443:;
 static union $5CHEAT X$1;
 uint64 vr$1 = _ZN9_FLOAT128cvyEv( D$1 );
 if( vr$1 != 0ull ) goto label$4446;
 {
  fb$result$1 = 0x0p+0;
  goto label$4444;
 }
 label$4446:;
 label$4445:;
 uint64 vr$2 = _ZN9_FLOAT128cvyEv( D$1 );
 *(double*)&X$1 = (double)vr$2;
 _ZN9_FLOAT128pLEy( E$1, (uint64)(((int64)*(int32*)((uint8*)&X$1 + 4ll) >> (20ll & 63ll)) & 2047ll) );
 uint64 vr$7 = _ZN9_FLOAT128cvyEv( E$1 );
 if( vr$7 > 0ull ) goto label$4448;
 {
  fb$result$1 = 0x0p+0;
  goto label$4444;
 }
 label$4448:;
 label$4447:;
 uint64 vr$8 = _ZN9_FLOAT128cvyEv( E$1 );
 if( vr$8 < 2047ull ) goto label$4450;
 {
  uint64 vr$9 = _ZN9_FLOAT128cvyEv( D$1 );
  if( vr$9 >= 0ull ) goto label$4452;
  {
   fb$result$1 = NEG_INF$;
   goto label$4444;
  }
  label$4452:;
  label$4451:;
  fb$result$1 = POS_INF$;
  goto label$4444;
 }
 label$4450:;
 label$4449:;
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) & -2146435073ll);
 uint64 vr$14 = _ZN9_FLOAT128cvyEv( E$1 );
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((uint64)(int64)*(int32*)((uint8*)&X$1 + 4ll) | (vr$14 << (20ll & 63ll)));
 fb$result$1 = *(double*)&X$1;
 goto label$4444;
 label$4444:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_LDEXPER9_FLOAT256S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* D$1, struct $9_FLOAT256* E$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4453:;
 static union $5CHEAT X$1;
 uint64 vr$1 = _ZN9_FLOAT256cvyEv( D$1 );
 if( vr$1 != 0ull ) goto label$4456;
 {
  fb$result$1 = 0x0p+0;
  goto label$4454;
 }
 label$4456:;
 label$4455:;
 uint64 vr$2 = _ZN9_FLOAT256cvyEv( D$1 );
 *(double*)&X$1 = (double)vr$2;
 _ZN9_FLOAT256pLEy( E$1, (uint64)(((int64)*(int32*)((uint8*)&X$1 + 4ll) >> (20ll & 63ll)) & 2047ll) );
 uint64 vr$7 = _ZN9_FLOAT256cvyEv( E$1 );
 if( vr$7 > 0ull ) goto label$4458;
 {
  fb$result$1 = 0x0p+0;
  goto label$4454;
 }
 label$4458:;
 label$4457:;
 uint64 vr$8 = _ZN9_FLOAT256cvyEv( E$1 );
 if( vr$8 < 2047ull ) goto label$4460;
 {
  uint64 vr$9 = _ZN9_FLOAT256cvyEv( D$1 );
  if( vr$9 >= 0ull ) goto label$4462;
  {
   fb$result$1 = NEG_INF$;
   goto label$4454;
  }
  label$4462:;
  label$4461:;
  fb$result$1 = POS_INF$;
  goto label$4454;
 }
 label$4460:;
 label$4459:;
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) & -2146435073ll);
 uint64 vr$14 = _ZN9_FLOAT256cvyEv( E$1 );
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((uint64)(int64)*(int32*)((uint8*)&X$1 + 4ll) | (vr$14 << (20ll & 63ll)));
 fb$result$1 = *(double*)&X$1;
 goto label$4454;
 label$4454:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_LDEXPER9_FLOAT512S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* D$1, struct $9_FLOAT512* E$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4463:;
 static union $5CHEAT X$1;
 uint64 vr$1 = _ZN9_FLOAT512cvyEv( D$1 );
 if( vr$1 != 0ull ) goto label$4466;
 {
  fb$result$1 = 0x0p+0;
  goto label$4464;
 }
 label$4466:;
 label$4465:;
 uint64 vr$2 = _ZN9_FLOAT512cvyEv( D$1 );
 *(double*)&X$1 = (double)vr$2;
 _ZN9_FLOAT512pLEy( E$1, (uint64)(((int64)*(int32*)((uint8*)&X$1 + 4ll) >> (20ll & 63ll)) & 2047ll) );
 uint64 vr$7 = _ZN9_FLOAT512cvyEv( E$1 );
 if( vr$7 > 0ull ) goto label$4468;
 {
  fb$result$1 = 0x0p+0;
  goto label$4464;
 }
 label$4468:;
 label$4467:;
 uint64 vr$8 = _ZN9_FLOAT512cvyEv( E$1 );
 if( vr$8 < 2047ull ) goto label$4470;
 {
  uint64 vr$9 = _ZN9_FLOAT512cvyEv( D$1 );
  if( vr$9 >= 0ull ) goto label$4472;
  {
   fb$result$1 = NEG_INF$;
   goto label$4464;
  }
  label$4472:;
  label$4471:;
  fb$result$1 = POS_INF$;
  goto label$4464;
 }
 label$4470:;
 label$4469:;
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((int64)*(int32*)((uint8*)&X$1 + 4ll) & -2146435073ll);
 uint64 vr$14 = _ZN9_FLOAT512cvyEv( E$1 );
 *(int32*)((uint8*)&X$1 + 4ll) = (int32)((uint64)(int64)*(int32*)((uint8*)&X$1 + 4ll) | (vr$14 << (20ll & 63ll)));
 fb$result$1 = *(double*)&X$1;
 goto label$4464;
 label$4464:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_SQRTFEh( struct $12SYSTEM_BUS_T* THIS$1, uint8 ARG$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4473:;
 static double X$1;
 static double TEMP$1;
 static double _EXP$1;
 static double I$1;
 if( (int64)ARG$1 > 0ll ) goto label$4476;
 {
  if( (int64)ARG$1 >= 0ll ) goto label$4478;
  {
   fb$result$1 = 0x0p+0;
   goto label$4474;
  }
  label$4478:;
  label$4477:;
  fb$result$1 = 0x0p+0;
  goto label$4474;
 }
 label$4476:;
 label$4475:;
 double vr$4 = _ZN12SYSTEM_BUS_T7K_FREXPEdPd( THIS$1, (double)ARG$1, &_EXP$1 );
 X$1 = vr$4;
 label$4479:;
 if( X$1 >= 0x1.p-1 ) goto label$4480;
 {
  X$1 = X$1 * 0x1.p+1;
  _EXP$1 = _EXP$1 + -0x1.p+0;
 }
 goto label$4479;
 label$4480:;
 if( (((int64)__builtin_nearbyint( _EXP$1 )) & 1ll) == 0ll ) goto label$4482;
 {
  X$1 = X$1 * 0x1.p+1;
  _EXP$1 = _EXP$1 + -0x1.p+0;
 }
 label$4482:;
 label$4481:;
 TEMP$1 = (X$1 * 0x1.p-1) + 0x1.p-1;
 label$4483:;
 if( _EXP$1 <= 0x1.Ep+5 ) goto label$4484;
 {
  TEMP$1 = TEMP$1 * 0x1.p+30;
  _EXP$1 = _EXP$1 + -0x1.Ep+5;
 }
 goto label$4483;
 label$4484:;
 label$4485:;
 if( _EXP$1 >= -0x1.Ep+5 ) goto label$4486;
 {
  TEMP$1 = TEMP$1 / 0x1.p+30;
  _EXP$1 = _EXP$1 + 0x1.Ep+5;
 }
 goto label$4485;
 label$4486:;
 if( _EXP$1 < 0x0p+0 ) goto label$4488;
 {
  TEMP$1 = TEMP$1 * (double)(1ll << (((int64)__builtin_nearbyint( _EXP$1 / 0x1.p+1 )) & 63ll));
 }
 goto label$4487;
 label$4488:;
 {
  TEMP$1 = TEMP$1 / (double)(1ll << (((int64)__builtin_nearbyint( -_EXP$1 / 0x1.p+1 )) & 63ll));
 }
 label$4487:;
 {
  I$1 = 0x0p+0;
  label$4492:;
  {
   TEMP$1 = (TEMP$1 + ((double)(int64)ARG$1 / TEMP$1)) * 0x1.p-1;
  }
  label$4490:;
  I$1 = I$1 + 0x1.p+0;
  label$4489:;
  if( I$1 <= 0x1.p+2 ) goto label$4492;
  label$4491:;
 }
 fb$result$1 = TEMP$1;
 goto label$4474;
 label$4474:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_SQRTFEa( struct $12SYSTEM_BUS_T* THIS$1, int8 ARG$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4493:;
 static double X$1;
 static double TEMP$1;
 static double _EXP$1;
 static double I$1;
 if( (int64)ARG$1 > 0ll ) goto label$4496;
 {
  if( (int64)ARG$1 >= 0ll ) goto label$4498;
  {
   fb$result$1 = 0x0p+0;
   goto label$4494;
  }
  label$4498:;
  label$4497:;
  fb$result$1 = 0x0p+0;
  goto label$4494;
 }
 label$4496:;
 label$4495:;
 double vr$4 = _ZN12SYSTEM_BUS_T7K_FREXPEdPd( THIS$1, (double)ARG$1, &_EXP$1 );
 X$1 = vr$4;
 label$4499:;
 if( X$1 >= 0x1.p-1 ) goto label$4500;
 {
  X$1 = X$1 * 0x1.p+1;
  _EXP$1 = _EXP$1 + -0x1.p+0;
 }
 goto label$4499;
 label$4500:;
 if( (((int64)__builtin_nearbyint( _EXP$1 )) & 1ll) == 0ll ) goto label$4502;
 {
  X$1 = X$1 * 0x1.p+1;
  _EXP$1 = _EXP$1 + -0x1.p+0;
 }
 label$4502:;
 label$4501:;
 TEMP$1 = (X$1 * 0x1.p-1) + 0x1.p-1;
 label$4503:;
 if( _EXP$1 <= 0x1.Ep+5 ) goto label$4504;
 {
  TEMP$1 = TEMP$1 * 0x1.p+30;
  _EXP$1 = _EXP$1 + -0x1.Ep+5;
 }
 goto label$4503;
 label$4504:;
 label$4505:;
 if( _EXP$1 >= -0x1.Ep+5 ) goto label$4506;
 {
  TEMP$1 = TEMP$1 / 0x1.p+30;
  _EXP$1 = _EXP$1 + 0x1.Ep+5;
 }
 goto label$4505;
 label$4506:;
 if( _EXP$1 < 0x0p+0 ) goto label$4508;
 {
  TEMP$1 = TEMP$1 * (double)(1ll << (((int64)__builtin_nearbyint( _EXP$1 / 0x1.p+1 )) & 63ll));
 }
 goto label$4507;
 label$4508:;
 {
  TEMP$1 = TEMP$1 / (double)(1ll << (((int64)__builtin_nearbyint( -_EXP$1 / 0x1.p+1 )) & 63ll));
 }
 label$4507:;
 {
  I$1 = 0x0p+0;
  label$4512:;
  {
   TEMP$1 = (TEMP$1 + ((double)(int64)ARG$1 / TEMP$1)) * 0x1.p-1;
  }
  label$4510:;
  I$1 = I$1 + 0x1.p+0;
  label$4509:;
  if( I$1 <= 0x1.p+2 ) goto label$4512;
  label$4511:;
 }
 fb$result$1 = TEMP$1;
 goto label$4494;
 label$4494:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_SQRTFEt( struct $12SYSTEM_BUS_T* THIS$1, uint16 ARG$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4513:;
 static double X$1;
 static double TEMP$1;
 static double _EXP$1;
 static double I$1;
 if( (int64)ARG$1 > 0ll ) goto label$4516;
 {
  if( (int64)ARG$1 >= 0ll ) goto label$4518;
  {
   fb$result$1 = 0x0p+0;
   goto label$4514;
  }
  label$4518:;
  label$4517:;
  fb$result$1 = 0x0p+0;
  goto label$4514;
 }
 label$4516:;
 label$4515:;
 double vr$4 = _ZN12SYSTEM_BUS_T7K_FREXPEdPd( THIS$1, (double)ARG$1, &_EXP$1 );
 X$1 = vr$4;
 label$4519:;
 if( X$1 >= 0x1.p-1 ) goto label$4520;
 {
  X$1 = X$1 * 0x1.p+1;
  _EXP$1 = _EXP$1 + -0x1.p+0;
 }
 goto label$4519;
 label$4520:;
 if( (((int64)__builtin_nearbyint( _EXP$1 )) & 1ll) == 0ll ) goto label$4522;
 {
  X$1 = X$1 * 0x1.p+1;
  _EXP$1 = _EXP$1 + -0x1.p+0;
 }
 label$4522:;
 label$4521:;
 TEMP$1 = (X$1 * 0x1.p-1) + 0x1.p-1;
 label$4523:;
 if( _EXP$1 <= 0x1.Ep+5 ) goto label$4524;
 {
  TEMP$1 = TEMP$1 * 0x1.p+30;
  _EXP$1 = _EXP$1 + -0x1.Ep+5;
 }
 goto label$4523;
 label$4524:;
 label$4525:;
 if( _EXP$1 >= -0x1.Ep+5 ) goto label$4526;
 {
  TEMP$1 = TEMP$1 / 0x1.p+30;
  _EXP$1 = _EXP$1 + 0x1.Ep+5;
 }
 goto label$4525;
 label$4526:;
 if( _EXP$1 < 0x0p+0 ) goto label$4528;
 {
  TEMP$1 = TEMP$1 * (double)(1ll << (((int64)__builtin_nearbyint( _EXP$1 / 0x1.p+1 )) & 63ll));
 }
 goto label$4527;
 label$4528:;
 {
  TEMP$1 = TEMP$1 / (double)(1ll << (((int64)__builtin_nearbyint( -_EXP$1 / 0x1.p+1 )) & 63ll));
 }
 label$4527:;
 {
  I$1 = 0x0p+0;
  label$4532:;
  {
   TEMP$1 = (TEMP$1 + ((double)(int64)ARG$1 / TEMP$1)) * 0x1.p-1;
  }
  label$4530:;
  I$1 = I$1 + 0x1.p+0;
  label$4529:;
  if( I$1 <= 0x1.p+2 ) goto label$4532;
  label$4531:;
 }
 fb$result$1 = TEMP$1;
 goto label$4514;
 label$4514:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_SQRTFEs( struct $12SYSTEM_BUS_T* THIS$1, int16 ARG$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4533:;
 static double X$1;
 static double TEMP$1;
 static double _EXP$1;
 static double I$1;
 if( (int64)ARG$1 > 0ll ) goto label$4536;
 {
  if( (int64)ARG$1 >= 0ll ) goto label$4538;
  {
   fb$result$1 = 0x0p+0;
   goto label$4534;
  }
  label$4538:;
  label$4537:;
  fb$result$1 = 0x0p+0;
  goto label$4534;
 }
 label$4536:;
 label$4535:;
 double vr$4 = _ZN12SYSTEM_BUS_T7K_FREXPEdPd( THIS$1, (double)ARG$1, &_EXP$1 );
 X$1 = vr$4;
 label$4539:;
 if( X$1 >= 0x1.p-1 ) goto label$4540;
 {
  X$1 = X$1 * 0x1.p+1;
  _EXP$1 = _EXP$1 + -0x1.p+0;
 }
 goto label$4539;
 label$4540:;
 if( (((int64)__builtin_nearbyint( _EXP$1 )) & 1ll) == 0ll ) goto label$4542;
 {
  X$1 = X$1 * 0x1.p+1;
  _EXP$1 = _EXP$1 + -0x1.p+0;
 }
 label$4542:;
 label$4541:;
 TEMP$1 = (X$1 * 0x1.p-1) + 0x1.p-1;
 label$4543:;
 if( _EXP$1 <= 0x1.Ep+5 ) goto label$4544;
 {
  TEMP$1 = TEMP$1 * 0x1.p+30;
  _EXP$1 = _EXP$1 + -0x1.Ep+5;
 }
 goto label$4543;
 label$4544:;
 label$4545:;
 if( _EXP$1 >= -0x1.Ep+5 ) goto label$4546;
 {
  TEMP$1 = TEMP$1 / 0x1.p+30;
  _EXP$1 = _EXP$1 + 0x1.Ep+5;
 }
 goto label$4545;
 label$4546:;
 if( _EXP$1 < 0x0p+0 ) goto label$4548;
 {
  TEMP$1 = TEMP$1 * (double)(1ll << (((int64)__builtin_nearbyint( _EXP$1 / 0x1.p+1 )) & 63ll));
 }
 goto label$4547;
 label$4548:;
 {
  TEMP$1 = TEMP$1 / (double)(1ll << (((int64)__builtin_nearbyint( -_EXP$1 / 0x1.p+1 )) & 63ll));
 }
 label$4547:;
 {
  I$1 = 0x0p+0;
  label$4552:;
  {
   TEMP$1 = (TEMP$1 + ((double)(int64)ARG$1 / TEMP$1)) * 0x1.p-1;
  }
  label$4550:;
  I$1 = I$1 + 0x1.p+0;
  label$4549:;
  if( I$1 <= 0x1.p+2 ) goto label$4552;
  label$4551:;
 }
 fb$result$1 = TEMP$1;
 goto label$4534;
 label$4534:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_SQRTFEj( struct $12SYSTEM_BUS_T* THIS$1, uint32 ARG$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4553:;
 static double X$1;
 static double TEMP$1;
 static double _EXP$1;
 static double I$1;
 if( (int64)ARG$1 > 0ll ) goto label$4556;
 {
  if( (int64)ARG$1 >= 0ll ) goto label$4558;
  {
   fb$result$1 = 0x0p+0;
   goto label$4554;
  }
  label$4558:;
  label$4557:;
  fb$result$1 = 0x0p+0;
  goto label$4554;
 }
 label$4556:;
 label$4555:;
 double vr$4 = _ZN12SYSTEM_BUS_T7K_FREXPEdPd( THIS$1, (double)ARG$1, &_EXP$1 );
 X$1 = vr$4;
 label$4559:;
 if( X$1 >= 0x1.p-1 ) goto label$4560;
 {
  X$1 = X$1 * 0x1.p+1;
  _EXP$1 = _EXP$1 + -0x1.p+0;
 }
 goto label$4559;
 label$4560:;
 if( (((int64)__builtin_nearbyint( _EXP$1 )) & 1ll) == 0ll ) goto label$4562;
 {
  X$1 = X$1 * 0x1.p+1;
  _EXP$1 = _EXP$1 + -0x1.p+0;
 }
 label$4562:;
 label$4561:;
 TEMP$1 = (X$1 * 0x1.p-1) + 0x1.p-1;
 label$4563:;
 if( _EXP$1 <= 0x1.Ep+5 ) goto label$4564;
 {
  TEMP$1 = TEMP$1 * 0x1.p+30;
  _EXP$1 = _EXP$1 + -0x1.Ep+5;
 }
 goto label$4563;
 label$4564:;
 label$4565:;
 if( _EXP$1 >= -0x1.Ep+5 ) goto label$4566;
 {
  TEMP$1 = TEMP$1 / 0x1.p+30;
  _EXP$1 = _EXP$1 + 0x1.Ep+5;
 }
 goto label$4565;
 label$4566:;
 if( _EXP$1 < 0x0p+0 ) goto label$4568;
 {
  TEMP$1 = TEMP$1 * (double)(1ll << (((int64)__builtin_nearbyint( _EXP$1 / 0x1.p+1 )) & 63ll));
 }
 goto label$4567;
 label$4568:;
 {
  TEMP$1 = TEMP$1 / (double)(1ll << (((int64)__builtin_nearbyint( -_EXP$1 / 0x1.p+1 )) & 63ll));
 }
 label$4567:;
 {
  I$1 = 0x0p+0;
  label$4572:;
  {
   TEMP$1 = (TEMP$1 + ((double)(int64)ARG$1 / TEMP$1)) * 0x1.p-1;
  }
  label$4570:;
  I$1 = I$1 + 0x1.p+0;
  label$4569:;
  if( I$1 <= 0x1.p+2 ) goto label$4572;
  label$4571:;
 }
 fb$result$1 = TEMP$1;
 goto label$4554;
 label$4554:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_SQRTFEi( struct $12SYSTEM_BUS_T* THIS$1, int32 ARG$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4573:;
 static double X$1;
 static double TEMP$1;
 static double _EXP$1;
 static double I$1;
 if( (int64)ARG$1 > 0ll ) goto label$4576;
 {
  if( (int64)ARG$1 >= 0ll ) goto label$4578;
  {
   fb$result$1 = 0x0p+0;
   goto label$4574;
  }
  label$4578:;
  label$4577:;
  fb$result$1 = 0x0p+0;
  goto label$4574;
 }
 label$4576:;
 label$4575:;
 double vr$4 = _ZN12SYSTEM_BUS_T7K_FREXPEdPd( THIS$1, (double)ARG$1, &_EXP$1 );
 X$1 = vr$4;
 label$4579:;
 if( X$1 >= 0x1.p-1 ) goto label$4580;
 {
  X$1 = X$1 * 0x1.p+1;
  _EXP$1 = _EXP$1 + -0x1.p+0;
 }
 goto label$4579;
 label$4580:;
 if( (((int64)__builtin_nearbyint( _EXP$1 )) & 1ll) == 0ll ) goto label$4582;
 {
  X$1 = X$1 * 0x1.p+1;
  _EXP$1 = _EXP$1 + -0x1.p+0;
 }
 label$4582:;
 label$4581:;
 TEMP$1 = (X$1 * 0x1.p-1) + 0x1.p-1;
 label$4583:;
 if( _EXP$1 <= 0x1.Ep+5 ) goto label$4584;
 {
  TEMP$1 = TEMP$1 * 0x1.p+30;
  _EXP$1 = _EXP$1 + -0x1.Ep+5;
 }
 goto label$4583;
 label$4584:;
 label$4585:;
 if( _EXP$1 >= -0x1.Ep+5 ) goto label$4586;
 {
  TEMP$1 = TEMP$1 / 0x1.p+30;
  _EXP$1 = _EXP$1 + 0x1.Ep+5;
 }
 goto label$4585;
 label$4586:;
 if( _EXP$1 < 0x0p+0 ) goto label$4588;
 {
  TEMP$1 = TEMP$1 * (double)(1ll << (((int64)__builtin_nearbyint( _EXP$1 / 0x1.p+1 )) & 63ll));
 }
 goto label$4587;
 label$4588:;
 {
  TEMP$1 = TEMP$1 / (double)(1ll << (((int64)__builtin_nearbyint( -_EXP$1 / 0x1.p+1 )) & 63ll));
 }
 label$4587:;
 {
  I$1 = 0x0p+0;
  label$4592:;
  {
   TEMP$1 = (TEMP$1 + ((double)(int64)ARG$1 / TEMP$1)) * 0x1.p-1;
  }
  label$4590:;
  I$1 = I$1 + 0x1.p+0;
  label$4589:;
  if( I$1 <= 0x1.p+2 ) goto label$4592;
  label$4591:;
 }
 fb$result$1 = TEMP$1;
 goto label$4574;
 label$4574:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_SQRTFEy( struct $12SYSTEM_BUS_T* THIS$1, uint64 ARG$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4593:;
 static double X$1;
 static double TEMP$1;
 static double _EXP$1;
 static double I$1;
 if( ARG$1 > 0ull ) goto label$4596;
 {
  if( ARG$1 >= 0ull ) goto label$4598;
  {
   fb$result$1 = 0x0p+0;
   goto label$4594;
  }
  label$4598:;
  label$4597:;
  fb$result$1 = 0x0p+0;
  goto label$4594;
 }
 label$4596:;
 label$4595:;
 double vr$2 = _ZN12SYSTEM_BUS_T7K_FREXPEdPd( THIS$1, (double)ARG$1, &_EXP$1 );
 X$1 = vr$2;
 label$4599:;
 if( X$1 >= 0x1.p-1 ) goto label$4600;
 {
  X$1 = X$1 * 0x1.p+1;
  _EXP$1 = _EXP$1 + -0x1.p+0;
 }
 goto label$4599;
 label$4600:;
 if( (((int64)__builtin_nearbyint( _EXP$1 )) & 1ll) == 0ll ) goto label$4602;
 {
  X$1 = X$1 * 0x1.p+1;
  _EXP$1 = _EXP$1 + -0x1.p+0;
 }
 label$4602:;
 label$4601:;
 TEMP$1 = (X$1 * 0x1.p-1) + 0x1.p-1;
 label$4603:;
 if( _EXP$1 <= 0x1.Ep+5 ) goto label$4604;
 {
  TEMP$1 = TEMP$1 * 0x1.p+30;
  _EXP$1 = _EXP$1 + -0x1.Ep+5;
 }
 goto label$4603;
 label$4604:;
 label$4605:;
 if( _EXP$1 >= -0x1.Ep+5 ) goto label$4606;
 {
  TEMP$1 = TEMP$1 / 0x1.p+30;
  _EXP$1 = _EXP$1 + 0x1.Ep+5;
 }
 goto label$4605;
 label$4606:;
 if( _EXP$1 < 0x0p+0 ) goto label$4608;
 {
  TEMP$1 = TEMP$1 * (double)(1ll << (((int64)__builtin_nearbyint( _EXP$1 / 0x1.p+1 )) & 63ll));
 }
 goto label$4607;
 label$4608:;
 {
  TEMP$1 = TEMP$1 / (double)(1ll << (((int64)__builtin_nearbyint( -_EXP$1 / 0x1.p+1 )) & 63ll));
 }
 label$4607:;
 {
  I$1 = 0x0p+0;
  label$4612:;
  {
   TEMP$1 = (TEMP$1 + ((double)ARG$1 / TEMP$1)) * 0x1.p-1;
  }
  label$4610:;
  I$1 = I$1 + 0x1.p+0;
  label$4609:;
  if( I$1 <= 0x1.p+2 ) goto label$4612;
  label$4611:;
 }
 fb$result$1 = TEMP$1;
 goto label$4594;
 label$4594:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_SQRTFEx( struct $12SYSTEM_BUS_T* THIS$1, int64 ARG$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4613:;
 static double X$1;
 static double TEMP$1;
 static double _EXP$1;
 static double I$1;
 if( ARG$1 > 0ll ) goto label$4616;
 {
  if( ARG$1 >= 0ll ) goto label$4618;
  {
   fb$result$1 = 0x0p+0;
   goto label$4614;
  }
  label$4618:;
  label$4617:;
  fb$result$1 = 0x0p+0;
  goto label$4614;
 }
 label$4616:;
 label$4615:;
 double vr$2 = _ZN12SYSTEM_BUS_T7K_FREXPEdPd( THIS$1, (double)ARG$1, &_EXP$1 );
 X$1 = vr$2;
 label$4619:;
 if( X$1 >= 0x1.p-1 ) goto label$4620;
 {
  X$1 = X$1 * 0x1.p+1;
  _EXP$1 = _EXP$1 + -0x1.p+0;
 }
 goto label$4619;
 label$4620:;
 if( (((int64)__builtin_nearbyint( _EXP$1 )) & 1ll) == 0ll ) goto label$4622;
 {
  X$1 = X$1 * 0x1.p+1;
  _EXP$1 = _EXP$1 + -0x1.p+0;
 }
 label$4622:;
 label$4621:;
 TEMP$1 = (X$1 * 0x1.p-1) + 0x1.p-1;
 label$4623:;
 if( _EXP$1 <= 0x1.Ep+5 ) goto label$4624;
 {
  TEMP$1 = TEMP$1 * 0x1.p+30;
  _EXP$1 = _EXP$1 + -0x1.Ep+5;
 }
 goto label$4623;
 label$4624:;
 label$4625:;
 if( _EXP$1 >= -0x1.Ep+5 ) goto label$4626;
 {
  TEMP$1 = TEMP$1 / 0x1.p+30;
  _EXP$1 = _EXP$1 + 0x1.Ep+5;
 }
 goto label$4625;
 label$4626:;
 if( _EXP$1 < 0x0p+0 ) goto label$4628;
 {
  TEMP$1 = TEMP$1 * (double)(1ll << (((int64)__builtin_nearbyint( _EXP$1 / 0x1.p+1 )) & 63ll));
 }
 goto label$4627;
 label$4628:;
 {
  TEMP$1 = TEMP$1 / (double)(1ll << (((int64)__builtin_nearbyint( -_EXP$1 / 0x1.p+1 )) & 63ll));
 }
 label$4627:;
 {
  I$1 = 0x0p+0;
  label$4632:;
  {
   TEMP$1 = (TEMP$1 + ((double)ARG$1 / TEMP$1)) * 0x1.p-1;
  }
  label$4630:;
  I$1 = I$1 + 0x1.p+0;
  label$4629:;
  if( I$1 <= 0x1.p+2 ) goto label$4632;
  label$4631:;
 }
 fb$result$1 = TEMP$1;
 goto label$4614;
 label$4614:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_SQRTFEf( struct $12SYSTEM_BUS_T* THIS$1, float ARG$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4633:;
 static double X$1;
 static double TEMP$1;
 static double _EXP$1;
 static double I$1;
 if( ARG$1 > 0x0p+0f ) goto label$4636;
 {
  if( ARG$1 >= 0x0p+0f ) goto label$4638;
  {
   fb$result$1 = 0x0p+0;
   goto label$4634;
  }
  label$4638:;
  label$4637:;
  fb$result$1 = 0x0p+0;
  goto label$4634;
 }
 label$4636:;
 label$4635:;
 double vr$2 = _ZN12SYSTEM_BUS_T7K_FREXPEdPd( THIS$1, (double)ARG$1, &_EXP$1 );
 X$1 = vr$2;
 label$4639:;
 if( X$1 >= 0x1.p-1 ) goto label$4640;
 {
  X$1 = X$1 * 0x1.p+1;
  _EXP$1 = _EXP$1 + -0x1.p+0;
 }
 goto label$4639;
 label$4640:;
 if( (((int64)__builtin_nearbyint( _EXP$1 )) & 1ll) == 0ll ) goto label$4642;
 {
  X$1 = X$1 * 0x1.p+1;
  _EXP$1 = _EXP$1 + -0x1.p+0;
 }
 label$4642:;
 label$4641:;
 TEMP$1 = (X$1 * 0x1.p-1) + 0x1.p-1;
 label$4643:;
 if( _EXP$1 <= 0x1.Ep+5 ) goto label$4644;
 {
  TEMP$1 = TEMP$1 * 0x1.p+30;
  _EXP$1 = _EXP$1 + -0x1.Ep+5;
 }
 goto label$4643;
 label$4644:;
 label$4645:;
 if( _EXP$1 >= -0x1.Ep+5 ) goto label$4646;
 {
  TEMP$1 = TEMP$1 / 0x1.p+30;
  _EXP$1 = _EXP$1 + 0x1.Ep+5;
 }
 goto label$4645;
 label$4646:;
 if( _EXP$1 < 0x0p+0 ) goto label$4648;
 {
  TEMP$1 = TEMP$1 * (double)(1ll << (((int64)__builtin_nearbyint( _EXP$1 / 0x1.p+1 )) & 63ll));
 }
 goto label$4647;
 label$4648:;
 {
  TEMP$1 = TEMP$1 / (double)(1ll << (((int64)__builtin_nearbyint( -_EXP$1 / 0x1.p+1 )) & 63ll));
 }
 label$4647:;
 {
  I$1 = 0x0p+0;
  label$4652:;
  {
   TEMP$1 = (TEMP$1 + ((double)ARG$1 / TEMP$1)) * 0x1.p-1;
  }
  label$4650:;
  I$1 = I$1 + 0x1.p+0;
  label$4649:;
  if( I$1 <= 0x1.p+2 ) goto label$4652;
  label$4651:;
 }
 fb$result$1 = TEMP$1;
 goto label$4634;
 label$4634:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_SQRTFEd( struct $12SYSTEM_BUS_T* THIS$1, double ARG$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4653:;
 static double X$1;
 static double TEMP$1;
 static double _EXP$1;
 static double I$1;
 if( ARG$1 > 0x0p+0 ) goto label$4656;
 {
  if( ARG$1 >= 0x0p+0 ) goto label$4658;
  {
   fb$result$1 = 0x0p+0;
   goto label$4654;
  }
  label$4658:;
  label$4657:;
  fb$result$1 = 0x0p+0;
  goto label$4654;
 }
 label$4656:;
 label$4655:;
 double vr$1 = _ZN12SYSTEM_BUS_T7K_FREXPEdPd( THIS$1, ARG$1, &_EXP$1 );
 X$1 = vr$1;
 label$4659:;
 if( X$1 >= 0x1.p-1 ) goto label$4660;
 {
  X$1 = X$1 * 0x1.p+1;
  _EXP$1 = _EXP$1 + -0x1.p+0;
 }
 goto label$4659;
 label$4660:;
 if( (((int64)__builtin_nearbyint( _EXP$1 )) & 1ll) == 0ll ) goto label$4662;
 {
  X$1 = X$1 * 0x1.p+1;
  _EXP$1 = _EXP$1 + -0x1.p+0;
 }
 label$4662:;
 label$4661:;
 TEMP$1 = (X$1 * 0x1.p-1) + 0x1.p-1;
 label$4663:;
 if( _EXP$1 <= 0x1.Ep+5 ) goto label$4664;
 {
  TEMP$1 = TEMP$1 * 0x1.p+30;
  _EXP$1 = _EXP$1 + -0x1.Ep+5;
 }
 goto label$4663;
 label$4664:;
 label$4665:;
 if( _EXP$1 >= -0x1.Ep+5 ) goto label$4666;
 {
  TEMP$1 = TEMP$1 / 0x1.p+30;
  _EXP$1 = _EXP$1 + 0x1.Ep+5;
 }
 goto label$4665;
 label$4666:;
 if( _EXP$1 < 0x0p+0 ) goto label$4668;
 {
  TEMP$1 = TEMP$1 * (double)(1ll << (((int64)__builtin_nearbyint( _EXP$1 / 0x1.p+1 )) & 63ll));
 }
 goto label$4667;
 label$4668:;
 {
  TEMP$1 = TEMP$1 / (double)(1ll << (((int64)__builtin_nearbyint( -_EXP$1 / 0x1.p+1 )) & 63ll));
 }
 label$4667:;
 {
  I$1 = 0x0p+0;
  label$4672:;
  {
   TEMP$1 = (TEMP$1 + (ARG$1 / TEMP$1)) * 0x1.p-1;
  }
  label$4670:;
  I$1 = I$1 + 0x1.p+0;
  label$4669:;
  if( I$1 <= 0x1.p+2 ) goto label$4672;
  label$4671:;
 }
 fb$result$1 = TEMP$1;
 goto label$4654;
 label$4654:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_COSEd( struct $12SYSTEM_BUS_T* THIS$1, double ARG$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4673:;
 double RESULT$1;
 RESULT$1 = ARG$1;
 int64 I$1;
 __builtin_memset( &I$1, 0, 8ll );
 __asm__ __volatile__( "fld qword ptr [%0]" : "+m" (RESULT$1) : : "cc", "memory", "rax", "rbx", "rcx", "rdx", "rdi", "rsi", "r8", "r9", "r10", "r11", "r12", "r13", "r14", "r15", "mm0", "mm1", "mm2", "mm3", "mm4", "mm5", "mm6", "mm7", "xmm0", "xmm1", "xmm2", "xmm3", "xmm4", "xmm5", "xmm6", "xmm7", "xmm8", "xmm9", "xmm10", "xmm11", "xmm12", "xmm13", "xmm14", "xmm15" );
 __asm__ __volatile__( "fcos" : : : "cc", "memory", "rax", "rbx", "rcx", "rdx", "rdi", "rsi", "r8", "r9", "r10", "r11", "r12", "r13", "r14", "r15", "mm0", "mm1", "mm2", "mm3", "mm4", "mm5", "mm6", "mm7", "xmm0", "xmm1", "xmm2", "xmm3", "xmm4", "xmm5", "xmm6", "xmm7", "xmm8", "xmm9", "xmm10", "xmm11", "xmm12", "xmm13", "xmm14", "xmm15" );
 __asm__ __volatile__( "fst qword ptr [%0]        " : "+m" (RESULT$1) : : "cc", "memory", "rax", "rbx", "rcx", "rdx", "rdi", "rsi", "r8", "r9", "r10", "r11", "r12", "r13", "r14", "r15", "mm0", "mm1", "mm2", "mm3", "mm4", "mm5", "mm6", "mm7", "xmm0", "xmm1", "xmm2", "xmm3", "xmm4", "xmm5", "xmm6", "xmm7", "xmm8", "xmm9", "xmm10", "xmm11", "xmm12", "xmm13", "xmm14", "xmm15" );
 fb$result$1 = RESULT$1;
 goto label$4674;
 label$4674:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_SINEd( struct $12SYSTEM_BUS_T* THIS$1, double ARG$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4675:;
 double RESULT$1;
 RESULT$1 = ARG$1;
 int64 I$1;
 __builtin_memset( &I$1, 0, 8ll );
 __asm__ __volatile__( "fld qword ptr [%0]" : "+m" (RESULT$1) : : "cc", "memory", "rax", "rbx", "rcx", "rdx", "rdi", "rsi", "r8", "r9", "r10", "r11", "r12", "r13", "r14", "r15", "mm0", "mm1", "mm2", "mm3", "mm4", "mm5", "mm6", "mm7", "xmm0", "xmm1", "xmm2", "xmm3", "xmm4", "xmm5", "xmm6", "xmm7", "xmm8", "xmm9", "xmm10", "xmm11", "xmm12", "xmm13", "xmm14", "xmm15" );
 __asm__ __volatile__( "fsin" : : : "cc", "memory", "rax", "rbx", "rcx", "rdx", "rdi", "rsi", "r8", "r9", "r10", "r11", "r12", "r13", "r14", "r15", "mm0", "mm1", "mm2", "mm3", "mm4", "mm5", "mm6", "mm7", "xmm0", "xmm1", "xmm2", "xmm3", "xmm4", "xmm5", "xmm6", "xmm7", "xmm8", "xmm9", "xmm10", "xmm11", "xmm12", "xmm13", "xmm14", "xmm15" );
 __asm__ __volatile__( "fst qword ptr [%0]        " : "+m" (RESULT$1) : : "cc", "memory", "rax", "rbx", "rcx", "rdx", "rdi", "rsi", "r8", "r9", "r10", "r11", "r12", "r13", "r14", "r15", "mm0", "mm1", "mm2", "mm3", "mm4", "mm5", "mm6", "mm7", "xmm0", "xmm1", "xmm2", "xmm3", "xmm4", "xmm5", "xmm6", "xmm7", "xmm8", "xmm9", "xmm10", "xmm11", "xmm12", "xmm13", "xmm14", "xmm15" );
 fb$result$1 = RESULT$1;
 goto label$4676;
 label$4676:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_COSFEd( struct $12SYSTEM_BUS_T* THIS$1, double ARG$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4677:;
 double vr$1 = _ZN12SYSTEM_BUS_T5K_COSEd( THIS$1, ARG$1 );
 fb$result$1 = vr$1;
 goto label$4678;
 label$4678:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_SINFEd( struct $12SYSTEM_BUS_T* THIS$1, double ARG$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4679:;
 double vr$1 = _ZN12SYSTEM_BUS_T5K_SINEd( THIS$1, ARG$1 );
 fb$result$1 = vr$1;
 goto label$4680;
 label$4680:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_FCOSEd( struct $12SYSTEM_BUS_T* THIS$1, double ARG$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4681:;
 double vr$1 = _ZN12SYSTEM_BUS_T6K_COSFEd( THIS$1, ARG$1 );
 fb$result$1 = vr$1;
 goto label$4682;
 label$4682:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_FSINEd( struct $12SYSTEM_BUS_T* THIS$1, double ARG$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4683:;
 double vr$1 = _ZN12SYSTEM_BUS_T6K_SINFEd( THIS$1, ARG$1 );
 fb$result$1 = vr$1;
 goto label$4684;
 label$4684:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T10K_RADIANCEEh( struct $12SYSTEM_BUS_T* THIS$1, uint8 DEG$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4685:;
 fb$result$1 = ((double)(int64)DEG$1 * 0x1.921FB54442D18p+1) / 0x1.68p+7;
 goto label$4686;
 label$4686:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T10K_RADIANCEEa( struct $12SYSTEM_BUS_T* THIS$1, int8 DEG$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4687:;
 fb$result$1 = ((double)(int64)DEG$1 * 0x1.921FB54442D18p+1) / 0x1.68p+7;
 goto label$4688;
 label$4688:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T10K_RADIANCEEt( struct $12SYSTEM_BUS_T* THIS$1, uint16 DEG$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4689:;
 fb$result$1 = ((double)(int64)DEG$1 * 0x1.921FB54442D18p+1) / 0x1.68p+7;
 goto label$4690;
 label$4690:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T10K_RADIANCEEs( struct $12SYSTEM_BUS_T* THIS$1, int16 DEG$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4691:;
 fb$result$1 = ((double)(int64)DEG$1 * 0x1.921FB54442D18p+1) / 0x1.68p+7;
 goto label$4692;
 label$4692:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T10K_RADIANCEEj( struct $12SYSTEM_BUS_T* THIS$1, uint32 DEG$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4693:;
 fb$result$1 = ((double)(int64)DEG$1 * 0x1.921FB54442D18p+1) / 0x1.68p+7;
 goto label$4694;
 label$4694:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T10K_RADIANCEEi( struct $12SYSTEM_BUS_T* THIS$1, int32 DEG$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4695:;
 fb$result$1 = ((double)(int64)DEG$1 * 0x1.921FB54442D18p+1) / 0x1.68p+7;
 goto label$4696;
 label$4696:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T10K_RADIANCEEy( struct $12SYSTEM_BUS_T* THIS$1, uint64 DEG$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4697:;
 fb$result$1 = ((double)DEG$1 * 0x1.921FB54442D18p+1) / 0x1.68p+7;
 goto label$4698;
 label$4698:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T10K_RADIANCEEx( struct $12SYSTEM_BUS_T* THIS$1, int64 DEG$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4699:;
 fb$result$1 = ((double)DEG$1 * 0x1.921FB54442D18p+1) / 0x1.68p+7;
 goto label$4700;
 label$4700:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T10K_RADIANCEEf( struct $12SYSTEM_BUS_T* THIS$1, float DEG$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4701:;
 fb$result$1 = ((double)DEG$1 * 0x1.921FB54442D18p+1) / 0x1.68p+7;
 goto label$4702;
 label$4702:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T10K_RADIANCEEd( struct $12SYSTEM_BUS_T* THIS$1, double DEG$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4703:;
 fb$result$1 = (DEG$1 * 0x1.921FB54442D18p+1) / 0x1.68p+7;
 goto label$4704;
 label$4704:;
 return fb$result$1;
}

struct $7VECTOR2* _ZN12SYSTEM_BUS_T10K_RADIANCEER7VECTOR2( struct $7VECTOR2* tmp$2545$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR2* V$1 )
{
 label$4705:;
 _ZN7VECTOR2C1Edd( tmp$2545$1, (*(double*)V$1 * 0x1.921FB54442D18p+1) / 0x1.68p+7, (*(double*)((uint8*)V$1 + 8ll) * 0x1.921FB54442D18p+1) / 0x1.68p+7 );
 goto label$4706;
 label$4706:;
 return tmp$2545$1;
}

struct $7VECTOR3* _ZN12SYSTEM_BUS_T10K_RADIANCEER7VECTOR3( struct $7VECTOR3* tmp$2547$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* V$1 )
{
 label$4707:;
 _ZN7VECTOR3C1Eddd( tmp$2547$1, (*(double*)((uint8*)V$1 + 16ll) * 0x1.921FB54442D18p+1) / 0x1.68p+7, (*(double*)((uint8*)V$1 + 24ll) * 0x1.921FB54442D18p+1) / 0x1.68p+7, (*(double*)((uint8*)V$1 + 24ll) * 0x1.921FB54442D18p+1) / 0x1.68p+7 );
 goto label$4708;
 label$4708:;
 return tmp$2547$1;
}

struct $7VECTOR4* _ZN12SYSTEM_BUS_T10K_RADIANCEER7VECTOR4( struct $7VECTOR4* tmp$2549$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR4* V$1 )
{
 label$4709:;
 _ZN7VECTOR4C1Edddd( tmp$2549$1, (*(double*)((uint8*)V$1 + 40ll) * 0x1.921FB54442D18p+1) / 0x1.68p+7, (*(double*)((uint8*)V$1 + 48ll) * 0x1.921FB54442D18p+1) / 0x1.68p+7, (*(double*)((uint8*)V$1 + 48ll) * 0x1.921FB54442D18p+1) / 0x1.68p+7, (*(double*)((uint8*)V$1 + 64ll) * 0x1.921FB54442D18p+1) / 0x1.68p+7 );
 goto label$4710;
 label$4710:;
 return tmp$2549$1;
}

double _ZN12SYSTEM_BUS_T9K_DEGREESEh( struct $12SYSTEM_BUS_T* THIS$1, uint8 RAD$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4711:;
 fb$result$1 = ((double)(int64)RAD$1 * 0x1.68p+7) / 0x1.921FB54442D18p+1;
 goto label$4712;
 label$4712:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T9K_DEGREESEa( struct $12SYSTEM_BUS_T* THIS$1, int8 RAD$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4713:;
 fb$result$1 = ((double)(int64)RAD$1 * 0x1.68p+7) / 0x1.921FB54442D18p+1;
 goto label$4714;
 label$4714:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T9K_DEGREESEt( struct $12SYSTEM_BUS_T* THIS$1, uint16 RAD$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4715:;
 fb$result$1 = ((double)(int64)RAD$1 * 0x1.68p+7) / 0x1.921FB54442D18p+1;
 goto label$4716;
 label$4716:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T9K_DEGREESEs( struct $12SYSTEM_BUS_T* THIS$1, int16 RAD$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4717:;
 fb$result$1 = ((double)(int64)RAD$1 * 0x1.68p+7) / 0x1.921FB54442D18p+1;
 goto label$4718;
 label$4718:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T9K_DEGREESEj( struct $12SYSTEM_BUS_T* THIS$1, uint32 RAD$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4719:;
 fb$result$1 = ((double)(int64)RAD$1 * 0x1.68p+7) / 0x1.921FB54442D18p+1;
 goto label$4720;
 label$4720:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T9K_DEGREESEi( struct $12SYSTEM_BUS_T* THIS$1, int32 RAD$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4721:;
 fb$result$1 = ((double)(int64)RAD$1 * 0x1.68p+7) / 0x1.921FB54442D18p+1;
 goto label$4722;
 label$4722:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T9K_DEGREESEy( struct $12SYSTEM_BUS_T* THIS$1, uint64 RAD$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4723:;
 fb$result$1 = ((double)RAD$1 * 0x1.68p+7) / 0x1.921FB54442D18p+1;
 goto label$4724;
 label$4724:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T9K_DEGREESEx( struct $12SYSTEM_BUS_T* THIS$1, int64 RAD$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4725:;
 fb$result$1 = ((double)RAD$1 * 0x1.68p+7) / 0x1.921FB54442D18p+1;
 goto label$4726;
 label$4726:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T9K_DEGREESEf( struct $12SYSTEM_BUS_T* THIS$1, float RAD$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4727:;
 fb$result$1 = ((double)RAD$1 * 0x1.68p+7) / 0x1.921FB54442D18p+1;
 goto label$4728;
 label$4728:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T9K_DEGREESEd( struct $12SYSTEM_BUS_T* THIS$1, double RAD$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4729:;
 fb$result$1 = (RAD$1 * 0x1.68p+7) / 0x1.921FB54442D18p+1;
 goto label$4730;
 label$4730:;
 return fb$result$1;
}

struct $7VECTOR2* _ZN12SYSTEM_BUS_T9K_DEGREESER7VECTOR2( struct $7VECTOR2* tmp$2551$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR2* V$1 )
{
 label$4731:;
 _ZN7VECTOR2C1Edd( tmp$2551$1, (*(double*)V$1 * 0x1.68p+7) / 0x1.921FB54442D18p+1, (*(double*)((uint8*)V$1 + 8ll) * 0x1.68p+7) / 0x1.921FB54442D18p+1 );
 goto label$4732;
 label$4732:;
 return tmp$2551$1;
}

struct $7VECTOR3* _ZN12SYSTEM_BUS_T9K_DEGREESER7VECTOR3( struct $7VECTOR3* tmp$2553$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* V$1 )
{
 label$4733:;
 _ZN7VECTOR3C1Eddd( tmp$2553$1, (*(double*)((uint8*)V$1 + 16ll) * 0x1.68p+7) / 0x1.921FB54442D18p+1, (*(double*)((uint8*)V$1 + 24ll) * 0x1.68p+7) / 0x1.921FB54442D18p+1, (*(double*)((uint8*)V$1 + 24ll) * 0x1.68p+7) / 0x1.921FB54442D18p+1 );
 goto label$4734;
 label$4734:;
 return tmp$2553$1;
}

struct $7VECTOR4* _ZN12SYSTEM_BUS_T9K_DEGREESER7VECTOR4( struct $7VECTOR4* tmp$2555$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR4* V$1 )
{
 label$4735:;
 _ZN7VECTOR4C1Edddd( tmp$2555$1, (*(double*)((uint8*)V$1 + 40ll) * 0x1.68p+7) / 0x1.921FB54442D18p+1, (*(double*)((uint8*)V$1 + 48ll) * 0x1.68p+7) / 0x1.921FB54442D18p+1, (*(double*)((uint8*)V$1 + 48ll) * 0x1.68p+7) / 0x1.921FB54442D18p+1, (*(double*)((uint8*)V$1 + 64ll) * 0x1.68p+7) / 0x1.921FB54442D18p+1 );
 goto label$4736;
 label$4736:;
 return tmp$2555$1;
}

double _ZN12SYSTEM_BUS_T6K_ATANEhh( struct $12SYSTEM_BUS_T* THIS$1, uint8 X$1, uint8 Y$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4737:;
 float vr$3 = atan2f( (float)X$1, (float)Y$1 );
 fb$result$1 = (double)vr$3;
 goto label$4738;
 label$4738:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_ATANEaa( struct $12SYSTEM_BUS_T* THIS$1, int8 X$1, int8 Y$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4739:;
 float vr$3 = atan2f( (float)X$1, (float)Y$1 );
 fb$result$1 = (double)vr$3;
 goto label$4740;
 label$4740:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_ATANEtt( struct $12SYSTEM_BUS_T* THIS$1, uint16 X$1, uint16 Y$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4741:;
 float vr$3 = atan2f( (float)X$1, (float)Y$1 );
 fb$result$1 = (double)vr$3;
 goto label$4742;
 label$4742:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_ATANEss( struct $12SYSTEM_BUS_T* THIS$1, int16 X$1, int16 Y$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4743:;
 float vr$3 = atan2f( (float)X$1, (float)Y$1 );
 fb$result$1 = (double)vr$3;
 goto label$4744;
 label$4744:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_ATANEjj( struct $12SYSTEM_BUS_T* THIS$1, uint32 X$1, uint32 Y$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4745:;
 float vr$3 = atan2f( (float)X$1, (float)Y$1 );
 fb$result$1 = (double)vr$3;
 goto label$4746;
 label$4746:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_ATANEii( struct $12SYSTEM_BUS_T* THIS$1, int32 X$1, int32 Y$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4747:;
 float vr$3 = atan2f( (float)X$1, (float)Y$1 );
 fb$result$1 = (double)vr$3;
 goto label$4748;
 label$4748:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_ATANEyy( struct $12SYSTEM_BUS_T* THIS$1, uint64 X$1, uint64 Y$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4749:;
 float vr$3 = atan2f( (float)X$1, (float)Y$1 );
 fb$result$1 = (double)vr$3;
 goto label$4750;
 label$4750:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_ATANExx( struct $12SYSTEM_BUS_T* THIS$1, int64 X$1, int64 Y$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4751:;
 float vr$3 = atan2f( (float)X$1, (float)Y$1 );
 fb$result$1 = (double)vr$3;
 goto label$4752;
 label$4752:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_ATANEff( struct $12SYSTEM_BUS_T* THIS$1, float X$1, float Y$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4753:;
 float vr$1 = atan2f( X$1, Y$1 );
 fb$result$1 = (double)vr$1;
 goto label$4754;
 label$4754:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_ATANEdd( struct $12SYSTEM_BUS_T* THIS$1, double X$1, double Y$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4755:;
 float vr$3 = atan2f( (float)X$1, (float)Y$1 );
 fb$result$1 = (double)vr$3;
 goto label$4756;
 label$4756:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_ATANER9_FLOAT128S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* X$1, struct $9_FLOAT128* Y$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4757:;
 uint64 vr$1 = _ZN9_FLOAT128cvyEv( Y$1 );
 uint64 vr$3 = _ZN9_FLOAT128cvyEv( X$1 );
 float vr$5 = atan2f( (float)vr$3, (float)vr$1 );
 fb$result$1 = (double)vr$5;
 goto label$4758;
 label$4758:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_ATANER9_FLOAT256S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* X$1, struct $9_FLOAT256* Y$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4759:;
 uint64 vr$1 = _ZN9_FLOAT256cvyEv( Y$1 );
 uint64 vr$3 = _ZN9_FLOAT256cvyEv( X$1 );
 float vr$5 = atan2f( (float)vr$3, (float)vr$1 );
 fb$result$1 = (double)vr$5;
 goto label$4760;
 label$4760:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_ATANER9_FLOAT512S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* X$1, struct $9_FLOAT512* Y$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4761:;
 uint64 vr$1 = _ZN9_FLOAT512cvyEv( Y$1 );
 uint64 vr$3 = _ZN9_FLOAT512cvyEv( X$1 );
 float vr$5 = atan2f( (float)vr$3, (float)vr$1 );
 fb$result$1 = (double)vr$5;
 goto label$4762;
 label$4762:;
 return fb$result$1;
}

struct $7VECTOR2* _ZN12SYSTEM_BUS_T6K_ATANER7VECTOR2S1_( struct $7VECTOR2* tmp$2557$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR2* X$1, struct $7VECTOR2* Y$1 )
{
 label$4763:;
 float vr$4 = atan2f( (float)*(double*)((uint8*)X$1 + 8ll), (float)*(double*)((uint8*)Y$1 + 8ll) );
 float vr$10 = atan2f( (float)*(double*)X$1, (float)*(double*)Y$1 );
 _ZN7VECTOR2C1Edd( tmp$2557$1, (double)vr$10, (double)vr$4 );
 goto label$4764;
 label$4764:;
 return tmp$2557$1;
}

struct $7VECTOR3* _ZN12SYSTEM_BUS_T6K_ATANER7VECTOR3S1_( struct $7VECTOR3* tmp$2559$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* X$1, struct $7VECTOR3* Y$1 )
{
 label$4765:;
 float vr$4 = atan2f( (float)*(double*)((uint8*)X$1 + 32ll), (float)*(double*)((uint8*)Y$1 + 32ll) );
 float vr$10 = atan2f( (float)*(double*)((uint8*)X$1 + 24ll), (float)*(double*)((uint8*)Y$1 + 24ll) );
 float vr$16 = atan2f( (float)*(double*)((uint8*)X$1 + 16ll), (float)*(double*)((uint8*)Y$1 + 16ll) );
 _ZN7VECTOR3C1Eddd( tmp$2559$1, (double)vr$16, (double)vr$10, (double)vr$4 );
 goto label$4766;
 label$4766:;
 return tmp$2559$1;
}

struct $7VECTOR4* _ZN12SYSTEM_BUS_T6K_ATANER7VECTOR4S1_( struct $7VECTOR4* tmp$2561$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR4* X$1, struct $7VECTOR4* Y$1 )
{
 label$4767:;
 float vr$4 = atan2f( (float)*(double*)((uint8*)X$1 + 64ll), (float)*(double*)((uint8*)Y$1 + 64ll) );
 float vr$10 = atan2f( (float)*(double*)((uint8*)X$1 + 56ll), (float)*(double*)((uint8*)Y$1 + 56ll) );
 float vr$16 = atan2f( (float)*(double*)((uint8*)X$1 + 48ll), (float)*(double*)((uint8*)Y$1 + 48ll) );
 float vr$22 = atan2f( (float)*(double*)((uint8*)X$1 + 40ll), (float)*(double*)((uint8*)Y$1 + 40ll) );
 _ZN7VECTOR4C1Edddd( tmp$2561$1, (double)vr$22, (double)vr$16, (double)vr$10, (double)vr$4 );
 goto label$4768;
 label$4768:;
 return tmp$2561$1;
}

double _ZN12SYSTEM_BUS_T5K_POWEhh( struct $12SYSTEM_BUS_T* THIS$1, uint8 A$1, uint8 B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4769:;
 float vr$3 = powf( (float)A$1, (float)B$1 );
 fb$result$1 = (double)vr$3;
 goto label$4770;
 label$4770:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_POWEaa( struct $12SYSTEM_BUS_T* THIS$1, int8 A$1, int8 B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4771:;
 float vr$3 = powf( (float)A$1, (float)B$1 );
 fb$result$1 = (double)vr$3;
 goto label$4772;
 label$4772:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_POWEtt( struct $12SYSTEM_BUS_T* THIS$1, uint16 A$1, uint16 B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4773:;
 float vr$3 = powf( (float)A$1, (float)B$1 );
 fb$result$1 = (double)vr$3;
 goto label$4774;
 label$4774:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_POWEss( struct $12SYSTEM_BUS_T* THIS$1, int16 A$1, int16 B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4775:;
 float vr$3 = powf( (float)A$1, (float)B$1 );
 fb$result$1 = (double)vr$3;
 goto label$4776;
 label$4776:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_POWEjj( struct $12SYSTEM_BUS_T* THIS$1, uint32 A$1, uint32 B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4777:;
 float vr$3 = powf( (float)A$1, (float)B$1 );
 fb$result$1 = (double)vr$3;
 goto label$4778;
 label$4778:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_POWEii( struct $12SYSTEM_BUS_T* THIS$1, int32 A$1, int32 B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4779:;
 float vr$3 = powf( (float)A$1, (float)B$1 );
 fb$result$1 = (double)vr$3;
 goto label$4780;
 label$4780:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_POWEyy( struct $12SYSTEM_BUS_T* THIS$1, uint64 A$1, uint64 B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4781:;
 float vr$3 = powf( (float)A$1, (float)B$1 );
 fb$result$1 = (double)vr$3;
 goto label$4782;
 label$4782:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_POWExx( struct $12SYSTEM_BUS_T* THIS$1, int64 A$1, int64 B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4783:;
 float vr$3 = powf( (float)A$1, (float)B$1 );
 fb$result$1 = (double)vr$3;
 goto label$4784;
 label$4784:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_POWEff( struct $12SYSTEM_BUS_T* THIS$1, float A$1, float B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4785:;
 float vr$1 = powf( A$1, B$1 );
 fb$result$1 = (double)vr$1;
 goto label$4786;
 label$4786:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_POWEdd( struct $12SYSTEM_BUS_T* THIS$1, double A$1, double B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4787:;
 float vr$3 = powf( (float)A$1, (float)B$1 );
 fb$result$1 = (double)vr$3;
 goto label$4788;
 label$4788:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_POWER9_FLOAT128S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* A$1, struct $9_FLOAT128* B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4789:;
 uint64 vr$1 = _ZN9_FLOAT128cvyEv( B$1 );
 uint64 vr$3 = _ZN9_FLOAT128cvyEv( A$1 );
 float vr$5 = powf( (float)vr$3, (float)vr$1 );
 fb$result$1 = (double)vr$5;
 goto label$4790;
 label$4790:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_POWER9_FLOAT256S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* A$1, struct $9_FLOAT256* B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4791:;
 uint64 vr$1 = _ZN9_FLOAT256cvyEv( B$1 );
 uint64 vr$3 = _ZN9_FLOAT256cvyEv( A$1 );
 float vr$5 = powf( (float)vr$3, (float)vr$1 );
 fb$result$1 = (double)vr$5;
 goto label$4792;
 label$4792:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_POWER9_FLOAT512S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* A$1, struct $9_FLOAT512* B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4793:;
 uint64 vr$1 = _ZN9_FLOAT512cvyEv( B$1 );
 uint64 vr$3 = _ZN9_FLOAT512cvyEv( A$1 );
 float vr$5 = powf( (float)vr$3, (float)vr$1 );
 fb$result$1 = (double)vr$5;
 goto label$4794;
 label$4794:;
 return fb$result$1;
}

struct $7VECTOR2* _ZN12SYSTEM_BUS_T5K_POWER7VECTOR2S1_( struct $7VECTOR2* tmp$2563$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR2* A$1, struct $7VECTOR2* B$1 )
{
 label$4795:;
 float vr$4 = powf( (float)*(double*)((uint8*)A$1 + 8ll), (float)*(double*)((uint8*)B$1 + 8ll) );
 float vr$10 = powf( (float)*(double*)A$1, (float)*(double*)B$1 );
 _ZN7VECTOR2C1Edd( tmp$2563$1, (double)vr$10, (double)vr$4 );
 goto label$4796;
 label$4796:;
 return tmp$2563$1;
}

struct $7VECTOR3* _ZN12SYSTEM_BUS_T5K_POWER7VECTOR3S1_( struct $7VECTOR3* tmp$2565$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* A$1, struct $7VECTOR3* B$1 )
{
 label$4797:;
 float vr$4 = powf( (float)*(double*)((uint8*)A$1 + 32ll), (float)*(double*)((uint8*)B$1 + 32ll) );
 float vr$10 = powf( (float)*(double*)((uint8*)A$1 + 24ll), (float)*(double*)((uint8*)B$1 + 24ll) );
 float vr$16 = powf( (float)*(double*)((uint8*)A$1 + 16ll), (float)*(double*)((uint8*)B$1 + 16ll) );
 _ZN7VECTOR3C1Eddd( tmp$2565$1, (double)vr$16, (double)vr$10, (double)vr$4 );
 goto label$4798;
 label$4798:;
 return tmp$2565$1;
}

struct $7VECTOR4* _ZN12SYSTEM_BUS_T5K_POWER7VECTOR4S1_( struct $7VECTOR4* tmp$2567$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR4* A$1, struct $7VECTOR4* B$1 )
{
 label$4799:;
 float vr$4 = powf( (float)*(double*)((uint8*)A$1 + 64ll), (float)*(double*)((uint8*)B$1 + 64ll) );
 float vr$10 = powf( (float)*(double*)((uint8*)A$1 + 56ll), (float)*(double*)((uint8*)B$1 + 56ll) );
 float vr$16 = powf( (float)*(double*)((uint8*)A$1 + 48ll), (float)*(double*)((uint8*)B$1 + 48ll) );
 float vr$22 = powf( (float)*(double*)((uint8*)A$1 + 40ll), (float)*(double*)((uint8*)B$1 + 40ll) );
 _ZN7VECTOR4C1Edddd( tmp$2567$1, (double)vr$22, (double)vr$16, (double)vr$10, (double)vr$4 );
 goto label$4800;
 label$4800:;
 return tmp$2567$1;
}

double _ZN12SYSTEM_BUS_T7K_EXP2FEh( struct $12SYSTEM_BUS_T* THIS$1, uint8 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4801:;
 float vr$2 = powf( 0x1.p+1f, (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4802;
 label$4802:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_EXP2FEa( struct $12SYSTEM_BUS_T* THIS$1, int8 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4803:;
 float vr$2 = powf( 0x1.p+1f, (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4804;
 label$4804:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_EXP2FEt( struct $12SYSTEM_BUS_T* THIS$1, uint16 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4805:;
 float vr$2 = powf( 0x1.p+1f, (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4806;
 label$4806:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_EXP2FEs( struct $12SYSTEM_BUS_T* THIS$1, int16 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4807:;
 float vr$2 = powf( 0x1.p+1f, (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4808;
 label$4808:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_EXP2FEj( struct $12SYSTEM_BUS_T* THIS$1, uint32 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4809:;
 float vr$2 = powf( 0x1.p+1f, (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4810;
 label$4810:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_EXP2FEi( struct $12SYSTEM_BUS_T* THIS$1, int32 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4811:;
 float vr$2 = powf( 0x1.p+1f, (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4812;
 label$4812:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_EXP2FEy( struct $12SYSTEM_BUS_T* THIS$1, uint64 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4813:;
 float vr$2 = powf( 0x1.p+1f, (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4814;
 label$4814:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_EXP2FEx( struct $12SYSTEM_BUS_T* THIS$1, int64 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4815:;
 float vr$2 = powf( 0x1.p+1f, (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4816;
 label$4816:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_EXP2FEf( struct $12SYSTEM_BUS_T* THIS$1, float A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4817:;
 float vr$1 = powf( 0x1.p+1f, A$1 );
 fb$result$1 = (double)vr$1;
 goto label$4818;
 label$4818:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_EXP2FEd( struct $12SYSTEM_BUS_T* THIS$1, double A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4819:;
 float vr$2 = powf( 0x1.p+1f, (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4820;
 label$4820:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_EXP2FER9_FLOAT128( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4821:;
 uint64 vr$1 = _ZN9_FLOAT128cvyEv( A$1 );
 float vr$3 = powf( 0x1.p+1f, (float)vr$1 );
 fb$result$1 = (double)vr$3;
 goto label$4822;
 label$4822:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_EXP2FER9_FLOAT256( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4823:;
 uint64 vr$1 = _ZN9_FLOAT256cvyEv( A$1 );
 float vr$3 = powf( 0x1.p+1f, (float)vr$1 );
 fb$result$1 = (double)vr$3;
 goto label$4824;
 label$4824:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_EXP2FER9_FLOAT512( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4825:;
 uint64 vr$1 = _ZN9_FLOAT512cvyEv( A$1 );
 float vr$3 = powf( 0x1.p+1f, (float)vr$1 );
 fb$result$1 = (double)vr$3;
 goto label$4826;
 label$4826:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_EXPEh( struct $12SYSTEM_BUS_T* THIS$1, uint8 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4827:;
 float vr$2 = expf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4828;
 label$4828:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_EXPEa( struct $12SYSTEM_BUS_T* THIS$1, int8 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4829:;
 float vr$2 = expf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4830;
 label$4830:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_EXPEt( struct $12SYSTEM_BUS_T* THIS$1, uint16 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4831:;
 float vr$2 = expf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4832;
 label$4832:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_EXPEs( struct $12SYSTEM_BUS_T* THIS$1, int16 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4833:;
 float vr$2 = expf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4834;
 label$4834:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_EXPEj( struct $12SYSTEM_BUS_T* THIS$1, uint32 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4835:;
 float vr$2 = expf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4836;
 label$4836:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_EXPEi( struct $12SYSTEM_BUS_T* THIS$1, int32 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4837:;
 float vr$2 = expf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4838;
 label$4838:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_EXPEy( struct $12SYSTEM_BUS_T* THIS$1, uint64 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4839:;
 float vr$2 = expf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4840;
 label$4840:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_EXPEx( struct $12SYSTEM_BUS_T* THIS$1, int64 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4841:;
 float vr$2 = expf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4842;
 label$4842:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_EXPEf( struct $12SYSTEM_BUS_T* THIS$1, float A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4843:;
 float vr$1 = expf( A$1 );
 fb$result$1 = (double)vr$1;
 goto label$4844;
 label$4844:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_EXPEd( struct $12SYSTEM_BUS_T* THIS$1, double A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4845:;
 float vr$2 = expf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4846;
 label$4846:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_EXPER9_FLOAT128( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4847:;
 uint64 vr$1 = _ZN9_FLOAT128cvyEv( A$1 );
 float vr$3 = expf( (float)vr$1 );
 fb$result$1 = (double)vr$3;
 goto label$4848;
 label$4848:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_EXPER9_FLOAT256( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4849:;
 uint64 vr$1 = _ZN9_FLOAT256cvyEv( A$1 );
 float vr$3 = expf( (float)vr$1 );
 fb$result$1 = (double)vr$3;
 goto label$4850;
 label$4850:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_EXPER9_FLOAT512( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4851:;
 uint64 vr$1 = _ZN9_FLOAT512cvyEv( A$1 );
 float vr$3 = expf( (float)vr$1 );
 fb$result$1 = (double)vr$3;
 goto label$4852;
 label$4852:;
 return fb$result$1;
}

struct $7VECTOR2* _ZN12SYSTEM_BUS_T5K_EXPER7VECTOR2( struct $7VECTOR2* tmp$2569$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR2* A$1 )
{
 label$4853:;
 float vr$2 = expf( (float)*(double*)((uint8*)A$1 + 8ll) );
 float vr$6 = expf( (float)*(double*)A$1 );
 _ZN7VECTOR2C1Edd( tmp$2569$1, (double)vr$6, (double)vr$2 );
 goto label$4854;
 label$4854:;
 return tmp$2569$1;
}

struct $7VECTOR3* _ZN12SYSTEM_BUS_T5K_EXPER7VECTOR3( struct $7VECTOR3* tmp$2571$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* A$1 )
{
 label$4855:;
 float vr$2 = expf( (float)*(double*)((uint8*)A$1 + 32ll) );
 float vr$6 = expf( (float)*(double*)((uint8*)A$1 + 24ll) );
 float vr$10 = expf( (float)*(double*)((uint8*)A$1 + 16ll) );
 _ZN7VECTOR3C1Eddd( tmp$2571$1, (double)vr$10, (double)vr$6, (double)vr$2 );
 goto label$4856;
 label$4856:;
 return tmp$2571$1;
}

struct $7VECTOR4* _ZN12SYSTEM_BUS_T5K_EXPER7VECTOR4( struct $7VECTOR4* tmp$2573$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR4* A$1 )
{
 label$4857:;
 float vr$2 = expf( (float)*(double*)((uint8*)A$1 + 64ll) );
 float vr$6 = expf( (float)*(double*)((uint8*)A$1 + 56ll) );
 float vr$10 = expf( (float)*(double*)((uint8*)A$1 + 48ll) );
 float vr$14 = expf( (float)*(double*)((uint8*)A$1 + 40ll) );
 _ZN7VECTOR4C1Edddd( tmp$2573$1, (double)vr$14, (double)vr$10, (double)vr$6, (double)vr$2 );
 goto label$4858;
 label$4858:;
 return tmp$2573$1;
}

double _ZN12SYSTEM_BUS_T5K_LOGEh( struct $12SYSTEM_BUS_T* THIS$1, uint8 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4859:;
 float vr$2 = logf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4860;
 label$4860:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_LOGEa( struct $12SYSTEM_BUS_T* THIS$1, int8 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4861:;
 float vr$2 = logf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4862;
 label$4862:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_LOGEt( struct $12SYSTEM_BUS_T* THIS$1, uint16 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4863:;
 float vr$2 = logf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4864;
 label$4864:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_LOGEs( struct $12SYSTEM_BUS_T* THIS$1, int16 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4865:;
 float vr$2 = logf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4866;
 label$4866:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_LOGEj( struct $12SYSTEM_BUS_T* THIS$1, uint32 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4867:;
 float vr$2 = logf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4868;
 label$4868:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_LOGEi( struct $12SYSTEM_BUS_T* THIS$1, int32 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4869:;
 float vr$2 = logf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4870;
 label$4870:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_LOGEy( struct $12SYSTEM_BUS_T* THIS$1, uint64 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4871:;
 float vr$2 = logf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4872;
 label$4872:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_LOGEx( struct $12SYSTEM_BUS_T* THIS$1, int64 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4873:;
 float vr$2 = logf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4874;
 label$4874:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_LOGEf( struct $12SYSTEM_BUS_T* THIS$1, float A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4875:;
 float vr$1 = logf( A$1 );
 fb$result$1 = (double)vr$1;
 goto label$4876;
 label$4876:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_LOGEd( struct $12SYSTEM_BUS_T* THIS$1, double A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4877:;
 float vr$2 = logf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4878;
 label$4878:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_LOGER9_FLOAT128( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4879:;
 uint64 vr$1 = _ZN9_FLOAT128cvyEv( A$1 );
 float vr$3 = logf( (float)vr$1 );
 fb$result$1 = (double)vr$3;
 goto label$4880;
 label$4880:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_LOGER9_FLOAT256( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4881:;
 uint64 vr$1 = _ZN9_FLOAT256cvyEv( A$1 );
 float vr$3 = logf( (float)vr$1 );
 fb$result$1 = (double)vr$3;
 goto label$4882;
 label$4882:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_LOGER9_FLOAT512( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4883:;
 uint64 vr$1 = _ZN9_FLOAT512cvyEv( A$1 );
 float vr$3 = logf( (float)vr$1 );
 fb$result$1 = (double)vr$3;
 goto label$4884;
 label$4884:;
 return fb$result$1;
}

struct $7VECTOR2* _ZN12SYSTEM_BUS_T5K_LOGER7VECTOR2( struct $7VECTOR2* tmp$2575$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR2* A$1 )
{
 label$4885:;
 float vr$2 = logf( (float)*(double*)((uint8*)A$1 + 8ll) );
 float vr$6 = logf( (float)*(double*)A$1 );
 _ZN7VECTOR2C1Edd( tmp$2575$1, (double)vr$6, (double)vr$2 );
 goto label$4886;
 label$4886:;
 return tmp$2575$1;
}

struct $7VECTOR3* _ZN12SYSTEM_BUS_T5K_LOGER7VECTOR3( struct $7VECTOR3* tmp$2577$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* A$1 )
{
 label$4887:;
 float vr$2 = logf( (float)*(double*)((uint8*)A$1 + 32ll) );
 float vr$6 = logf( (float)*(double*)((uint8*)A$1 + 24ll) );
 float vr$10 = logf( (float)*(double*)((uint8*)A$1 + 16ll) );
 _ZN7VECTOR3C1Eddd( tmp$2577$1, (double)vr$10, (double)vr$6, (double)vr$2 );
 goto label$4888;
 label$4888:;
 return tmp$2577$1;
}

struct $7VECTOR4* _ZN12SYSTEM_BUS_T5K_LOGER7VECTOR4( struct $7VECTOR4* tmp$2579$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR4* A$1 )
{
 label$4889:;
 float vr$2 = logf( (float)*(double*)((uint8*)A$1 + 64ll) );
 float vr$6 = logf( (float)*(double*)((uint8*)A$1 + 56ll) );
 float vr$10 = logf( (float)*(double*)((uint8*)A$1 + 48ll) );
 float vr$14 = logf( (float)*(double*)((uint8*)A$1 + 40ll) );
 _ZN7VECTOR4C1Edddd( tmp$2579$1, (double)vr$14, (double)vr$10, (double)vr$6, (double)vr$2 );
 goto label$4890;
 label$4890:;
 return tmp$2579$1;
}

double _ZN12SYSTEM_BUS_T6K_EXP2ERh( struct $12SYSTEM_BUS_T* THIS$1, uint8* A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4891:;
 double vr$2 = _ZN12SYSTEM_BUS_T7K_EXP2FEh( THIS$1, *A$1 );
 fb$result$1 = vr$2;
 goto label$4892;
 label$4892:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_EXP2ERa( struct $12SYSTEM_BUS_T* THIS$1, int8* A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4893:;
 double vr$2 = _ZN12SYSTEM_BUS_T7K_EXP2FEa( THIS$1, *A$1 );
 fb$result$1 = vr$2;
 goto label$4894;
 label$4894:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_EXP2ERt( struct $12SYSTEM_BUS_T* THIS$1, uint16* A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4895:;
 double vr$2 = _ZN12SYSTEM_BUS_T7K_EXP2FEt( THIS$1, *A$1 );
 fb$result$1 = vr$2;
 goto label$4896;
 label$4896:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_EXP2ERs( struct $12SYSTEM_BUS_T* THIS$1, int16* A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4897:;
 double vr$2 = _ZN12SYSTEM_BUS_T7K_EXP2FEs( THIS$1, *A$1 );
 fb$result$1 = vr$2;
 goto label$4898;
 label$4898:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_EXP2ERj( struct $12SYSTEM_BUS_T* THIS$1, uint32* A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4899:;
 double vr$2 = _ZN12SYSTEM_BUS_T7K_EXP2FEj( THIS$1, *A$1 );
 fb$result$1 = vr$2;
 goto label$4900;
 label$4900:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_EXP2ERi( struct $12SYSTEM_BUS_T* THIS$1, int32* A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4901:;
 double vr$2 = _ZN12SYSTEM_BUS_T7K_EXP2FEi( THIS$1, *A$1 );
 fb$result$1 = vr$2;
 goto label$4902;
 label$4902:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_EXP2ERy( struct $12SYSTEM_BUS_T* THIS$1, uint64* A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4903:;
 double vr$2 = _ZN12SYSTEM_BUS_T7K_EXP2FEy( THIS$1, *A$1 );
 fb$result$1 = vr$2;
 goto label$4904;
 label$4904:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_EXP2ERx( struct $12SYSTEM_BUS_T* THIS$1, int64* A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4905:;
 double vr$2 = _ZN12SYSTEM_BUS_T7K_EXP2FEx( THIS$1, *A$1 );
 fb$result$1 = vr$2;
 goto label$4906;
 label$4906:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_EXP2ERf( struct $12SYSTEM_BUS_T* THIS$1, float* A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4907:;
 double vr$2 = _ZN12SYSTEM_BUS_T7K_EXP2FEf( THIS$1, *A$1 );
 fb$result$1 = vr$2;
 goto label$4908;
 label$4908:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_EXP2ERd( struct $12SYSTEM_BUS_T* THIS$1, double* A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4909:;
 double vr$2 = _ZN12SYSTEM_BUS_T7K_EXP2FEd( THIS$1, *A$1 );
 fb$result$1 = vr$2;
 goto label$4910;
 label$4910:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_EXP2ER9_FLOAT128( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4911:;
 double vr$1 = _ZN12SYSTEM_BUS_T7K_EXP2FER9_FLOAT128( THIS$1, A$1 );
 fb$result$1 = vr$1;
 goto label$4912;
 label$4912:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_EXP2ER9_FLOAT256( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4913:;
 double vr$1 = _ZN12SYSTEM_BUS_T7K_EXP2FER9_FLOAT256( THIS$1, A$1 );
 fb$result$1 = vr$1;
 goto label$4914;
 label$4914:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_EXP2ER9_FLOAT512( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4915:;
 double vr$1 = _ZN12SYSTEM_BUS_T7K_EXP2FER9_FLOAT512( THIS$1, A$1 );
 fb$result$1 = vr$1;
 goto label$4916;
 label$4916:;
 return fb$result$1;
}

struct $7VECTOR2* _ZN12SYSTEM_BUS_T6K_EXP2ER7VECTOR2( struct $7VECTOR2* tmp$2581$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR2* A$1 )
{
 label$4917:;
 double vr$1 = _ZN12SYSTEM_BUS_T7K_EXP2FEd( THIS$1, *(double*)((uint8*)A$1 + 8ll) );
 double vr$3 = _ZN12SYSTEM_BUS_T7K_EXP2FEd( THIS$1, *(double*)A$1 );
 _ZN7VECTOR2C1Edd( tmp$2581$1, vr$3, vr$1 );
 goto label$4918;
 label$4918:;
 return tmp$2581$1;
}

struct $7VECTOR3* _ZN12SYSTEM_BUS_T6K_EXP2ER7VECTOR3( struct $7VECTOR3* tmp$2583$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* A$1 )
{
 label$4919:;
 double vr$1 = _ZN12SYSTEM_BUS_T7K_EXP2FEd( THIS$1, *(double*)((uint8*)A$1 + 32ll) );
 double vr$3 = _ZN12SYSTEM_BUS_T7K_EXP2FEd( THIS$1, *(double*)((uint8*)A$1 + 24ll) );
 double vr$5 = _ZN12SYSTEM_BUS_T7K_EXP2FEd( THIS$1, *(double*)((uint8*)A$1 + 16ll) );
 _ZN7VECTOR3C1Eddd( tmp$2583$1, vr$5, vr$3, vr$1 );
 goto label$4920;
 label$4920:;
 return tmp$2583$1;
}

struct $7VECTOR4* _ZN12SYSTEM_BUS_T6K_EXP2ER7VECTOR4( struct $7VECTOR4* tmp$2585$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR4* A$1 )
{
 label$4921:;
 double vr$1 = _ZN12SYSTEM_BUS_T7K_EXP2FEd( THIS$1, *(double*)((uint8*)A$1 + 64ll) );
 double vr$3 = _ZN12SYSTEM_BUS_T7K_EXP2FEd( THIS$1, *(double*)((uint8*)A$1 + 56ll) );
 double vr$5 = _ZN12SYSTEM_BUS_T7K_EXP2FEd( THIS$1, *(double*)((uint8*)A$1 + 48ll) );
 double vr$7 = _ZN12SYSTEM_BUS_T7K_EXP2FEd( THIS$1, *(double*)((uint8*)A$1 + 40ll) );
 _ZN7VECTOR4C1Edddd( tmp$2585$1, vr$7, vr$5, vr$3, vr$1 );
 goto label$4922;
 label$4922:;
 return tmp$2585$1;
}

double _ZN12SYSTEM_BUS_T6K_LOG2Eh( struct $12SYSTEM_BUS_T* THIS$1, uint8 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4923:;
 float vr$2 = log2f( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4924;
 label$4924:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_LOG2Ea( struct $12SYSTEM_BUS_T* THIS$1, int8 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4925:;
 float vr$2 = log2f( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4926;
 label$4926:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_LOG2Et( struct $12SYSTEM_BUS_T* THIS$1, uint16 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4927:;
 float vr$2 = log2f( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4928;
 label$4928:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_LOG2Es( struct $12SYSTEM_BUS_T* THIS$1, int16 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4929:;
 float vr$2 = log2f( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4930;
 label$4930:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_LOG2Ej( struct $12SYSTEM_BUS_T* THIS$1, uint32 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4931:;
 float vr$2 = log2f( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4932;
 label$4932:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_LOG2Ei( struct $12SYSTEM_BUS_T* THIS$1, int32 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4933:;
 float vr$2 = log2f( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4934;
 label$4934:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_LOG2Ey( struct $12SYSTEM_BUS_T* THIS$1, uint64 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4935:;
 float vr$2 = log2f( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4936;
 label$4936:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_LOG2Ex( struct $12SYSTEM_BUS_T* THIS$1, int64 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4937:;
 float vr$2 = log2f( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4938;
 label$4938:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_LOG2Ef( struct $12SYSTEM_BUS_T* THIS$1, float A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4939:;
 float vr$1 = log2f( A$1 );
 fb$result$1 = (double)vr$1;
 goto label$4940;
 label$4940:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_LOG2Ed( struct $12SYSTEM_BUS_T* THIS$1, double A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4941:;
 float vr$2 = log2f( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4942;
 label$4942:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_LOG2ER9_FLOAT128( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4943:;
 uint64 vr$1 = _ZN9_FLOAT128cvyEv( A$1 );
 float vr$3 = log2f( (float)vr$1 );
 fb$result$1 = (double)vr$3;
 goto label$4944;
 label$4944:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_LOG2ER9_FLOAT256( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4945:;
 uint64 vr$1 = _ZN9_FLOAT256cvyEv( A$1 );
 float vr$3 = log2f( (float)vr$1 );
 fb$result$1 = (double)vr$3;
 goto label$4946;
 label$4946:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_LOG2ER9_FLOAT512( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4947:;
 uint64 vr$1 = _ZN9_FLOAT512cvyEv( A$1 );
 float vr$3 = log2f( (float)vr$1 );
 fb$result$1 = (double)vr$3;
 goto label$4948;
 label$4948:;
 return fb$result$1;
}

struct $7VECTOR2* _ZN12SYSTEM_BUS_T6K_LOG2ER7VECTOR2( struct $7VECTOR2* tmp$2587$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR2* A$1 )
{
 label$4949:;
 float vr$2 = log2f( (float)*(double*)((uint8*)A$1 + 8ll) );
 float vr$6 = log2f( (float)*(double*)A$1 );
 _ZN7VECTOR2C1Edd( tmp$2587$1, (double)vr$6, (double)vr$2 );
 goto label$4950;
 label$4950:;
 return tmp$2587$1;
}

struct $7VECTOR3* _ZN12SYSTEM_BUS_T6K_LOG2ER7VECTOR3( struct $7VECTOR3* tmp$2589$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* A$1 )
{
 label$4951:;
 float vr$2 = logf( (float)*(double*)((uint8*)A$1 + 32ll) );
 float vr$6 = log2f( (float)*(double*)((uint8*)A$1 + 24ll) );
 float vr$10 = log2f( (float)*(double*)((uint8*)A$1 + 16ll) );
 _ZN7VECTOR3C1Eddd( tmp$2589$1, (double)vr$10, (double)vr$6, (double)vr$2 );
 goto label$4952;
 label$4952:;
 return tmp$2589$1;
}

struct $7VECTOR4* _ZN12SYSTEM_BUS_T6K_LOG2ER7VECTOR4( struct $7VECTOR4* tmp$2591$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR4* A$1 )
{
 label$4953:;
 float vr$2 = log2f( (float)*(double*)((uint8*)A$1 + 64ll) );
 float vr$6 = log2f( (float)*(double*)((uint8*)A$1 + 56ll) );
 float vr$10 = log2f( (float)*(double*)((uint8*)A$1 + 48ll) );
 float vr$14 = log2f( (float)*(double*)((uint8*)A$1 + 40ll) );
 _ZN7VECTOR4C1Edddd( tmp$2591$1, (double)vr$14, (double)vr$10, (double)vr$6, (double)vr$2 );
 goto label$4954;
 label$4954:;
 return tmp$2591$1;
}

double _ZN12SYSTEM_BUS_T6K_SQRTEh( struct $12SYSTEM_BUS_T* THIS$1, uint8 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4955:;
 float vr$2 = sqrtf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4956;
 label$4956:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_SQRTEa( struct $12SYSTEM_BUS_T* THIS$1, int8 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4957:;
 float vr$2 = sqrtf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4958;
 label$4958:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_SQRTEt( struct $12SYSTEM_BUS_T* THIS$1, uint16 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4959:;
 float vr$2 = sqrtf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4960;
 label$4960:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_SQRTEs( struct $12SYSTEM_BUS_T* THIS$1, int16 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4961:;
 float vr$2 = sqrtf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4962;
 label$4962:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_SQRTEj( struct $12SYSTEM_BUS_T* THIS$1, uint32 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4963:;
 float vr$2 = sqrtf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4964;
 label$4964:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_SQRTEi( struct $12SYSTEM_BUS_T* THIS$1, int32 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4965:;
 float vr$2 = sqrtf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4966;
 label$4966:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_SQRTEy( struct $12SYSTEM_BUS_T* THIS$1, uint64 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4967:;
 float vr$2 = sqrtf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4968;
 label$4968:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_SQRTEx( struct $12SYSTEM_BUS_T* THIS$1, int64 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4969:;
 float vr$2 = sqrtf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4970;
 label$4970:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_SQRTEf( struct $12SYSTEM_BUS_T* THIS$1, float A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4971:;
 float vr$1 = sqrtf( A$1 );
 fb$result$1 = (double)vr$1;
 goto label$4972;
 label$4972:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_SQRTEd( struct $12SYSTEM_BUS_T* THIS$1, double A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4973:;
 float vr$2 = sqrtf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$4974;
 label$4974:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_SQRTER9_FLOAT128( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4975:;
 uint64 vr$1 = _ZN9_FLOAT128cvyEv( A$1 );
 float vr$3 = sqrtf( (float)vr$1 );
 fb$result$1 = (double)vr$3;
 goto label$4976;
 label$4976:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_SQRTER9_FLOAT256( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4977:;
 uint64 vr$1 = _ZN9_FLOAT256cvyEv( A$1 );
 float vr$3 = sqrtf( (float)vr$1 );
 fb$result$1 = (double)vr$3;
 goto label$4978;
 label$4978:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_SQRTER9_FLOAT512( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4979:;
 uint64 vr$1 = _ZN9_FLOAT512cvyEv( A$1 );
 float vr$3 = sqrtf( (float)vr$1 );
 fb$result$1 = (double)vr$3;
 goto label$4980;
 label$4980:;
 return fb$result$1;
}

struct $7VECTOR2* _ZN12SYSTEM_BUS_T6K_SQRTER7VECTOR2( struct $7VECTOR2* tmp$2593$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR2* A$1 )
{
 label$4981:;
 float vr$2 = sqrtf( (float)*(double*)((uint8*)A$1 + 8ll) );
 float vr$6 = sqrtf( (float)*(double*)A$1 );
 _ZN7VECTOR2C1Edd( tmp$2593$1, (double)vr$6, (double)vr$2 );
 goto label$4982;
 label$4982:;
 return tmp$2593$1;
}

struct $7VECTOR3* _ZN12SYSTEM_BUS_T6K_SQRTER7VECTOR3( struct $7VECTOR3* tmp$2595$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* A$1 )
{
 label$4983:;
 float vr$2 = sqrtf( (float)*(double*)((uint8*)A$1 + 32ll) );
 float vr$6 = sqrtf( (float)*(double*)((uint8*)A$1 + 24ll) );
 float vr$10 = sqrtf( (float)*(double*)((uint8*)A$1 + 16ll) );
 _ZN7VECTOR3C1Eddd( tmp$2595$1, (double)vr$10, (double)vr$6, (double)vr$2 );
 goto label$4984;
 label$4984:;
 return tmp$2595$1;
}

struct $7VECTOR4* _ZN12SYSTEM_BUS_T6K_SQRTER7VECTOR4( struct $7VECTOR4* tmp$2597$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR4* A$1 )
{
 label$4985:;
 float vr$2 = sqrtf( (float)*(double*)((uint8*)A$1 + 64ll) );
 float vr$6 = sqrtf( (float)*(double*)((uint8*)A$1 + 56ll) );
 float vr$10 = sqrtf( (float)*(double*)((uint8*)A$1 + 48ll) );
 float vr$14 = sqrtf( (float)*(double*)((uint8*)A$1 + 40ll) );
 _ZN7VECTOR4C1Edddd( tmp$2597$1, (double)vr$14, (double)vr$10, (double)vr$6, (double)vr$2 );
 goto label$4986;
 label$4986:;
 return tmp$2597$1;
}

double _ZN12SYSTEM_BUS_T13K_INVERSESQRTEh( struct $12SYSTEM_BUS_T* THIS$1, uint8 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4987:;
 float vr$2 = sqrtf( (float)A$1 );
 fb$result$1 = 0x1.p+0 / (double)vr$2;
 goto label$4988;
 label$4988:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T13K_INVERSESQRTEa( struct $12SYSTEM_BUS_T* THIS$1, int8 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4989:;
 float vr$2 = sqrtf( (float)A$1 );
 fb$result$1 = 0x1.p+0 / (double)vr$2;
 goto label$4990;
 label$4990:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T13K_INVERSESQRTEt( struct $12SYSTEM_BUS_T* THIS$1, uint16 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4991:;
 float vr$2 = sqrtf( (float)A$1 );
 fb$result$1 = 0x1.p+0 / (double)vr$2;
 goto label$4992;
 label$4992:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T13K_INVERSESQRTEs( struct $12SYSTEM_BUS_T* THIS$1, int16 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4993:;
 float vr$2 = sqrtf( (float)A$1 );
 fb$result$1 = 0x1.p+0 / (double)vr$2;
 goto label$4994;
 label$4994:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T13K_INVERSESQRTEj( struct $12SYSTEM_BUS_T* THIS$1, uint32 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4995:;
 float vr$2 = sqrtf( (float)A$1 );
 fb$result$1 = 0x1.p+0 / (double)vr$2;
 goto label$4996;
 label$4996:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T13K_INVERSESQRTEi( struct $12SYSTEM_BUS_T* THIS$1, int32 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4997:;
 float vr$2 = sqrtf( (float)A$1 );
 fb$result$1 = 0x1.p+0 / (double)vr$2;
 goto label$4998;
 label$4998:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T13K_INVERSESQRTEy( struct $12SYSTEM_BUS_T* THIS$1, uint64 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$4999:;
 float vr$2 = sqrtf( (float)A$1 );
 fb$result$1 = 0x1.p+0 / (double)vr$2;
 goto label$5000;
 label$5000:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T13K_INVERSESQRTEx( struct $12SYSTEM_BUS_T* THIS$1, int64 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5001:;
 float vr$2 = sqrtf( (float)A$1 );
 fb$result$1 = 0x1.p+0 / (double)vr$2;
 goto label$5002;
 label$5002:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T13K_INVERSESQRTEf( struct $12SYSTEM_BUS_T* THIS$1, float A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5003:;
 float vr$1 = sqrtf( A$1 );
 fb$result$1 = 0x1.p+0 / (double)vr$1;
 goto label$5004;
 label$5004:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T13K_INVERSESQRTEd( struct $12SYSTEM_BUS_T* THIS$1, double A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5005:;
 float vr$2 = sqrtf( (float)A$1 );
 fb$result$1 = 0x1.p+0 / (double)vr$2;
 goto label$5006;
 label$5006:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T13K_INVERSESQRTER9_FLOAT128( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5007:;
 uint64 vr$1 = _ZN9_FLOAT128cvyEv( A$1 );
 float vr$3 = sqrtf( (float)vr$1 );
 fb$result$1 = 0x1.p+0 / (double)vr$3;
 goto label$5008;
 label$5008:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T13K_INVERSESQRTER9_FLOAT256( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5009:;
 uint64 vr$1 = _ZN9_FLOAT256cvyEv( A$1 );
 float vr$3 = sqrtf( (float)vr$1 );
 fb$result$1 = 0x1.p+0 / (double)vr$3;
 goto label$5010;
 label$5010:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T13K_INVERSESQRTER9_FLOAT512( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5011:;
 uint64 vr$1 = _ZN9_FLOAT512cvyEv( A$1 );
 float vr$3 = sqrtf( (float)vr$1 );
 fb$result$1 = 0x1.p+0 / (double)vr$3;
 goto label$5012;
 label$5012:;
 return fb$result$1;
}

struct $7VECTOR2* _ZN12SYSTEM_BUS_T13K_INVERSESQRTER7VECTOR2( struct $7VECTOR2* tmp$2599$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR2* A$1 )
{
 label$5013:;
 float vr$2 = sqrtf( (float)*(double*)((uint8*)A$1 + 8ll) );
 float vr$7 = sqrtf( (float)*(double*)A$1 );
 _ZN7VECTOR2C1Edd( tmp$2599$1, 0x1.p+0 / (double)vr$7, 0x1.p+0 / (double)vr$2 );
 goto label$5014;
 label$5014:;
 return tmp$2599$1;
}

struct $7VECTOR3* _ZN12SYSTEM_BUS_T13K_INVERSESQRTER7VECTOR3( struct $7VECTOR3* tmp$2601$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* A$1 )
{
 label$5015:;
 float vr$2 = sqrtf( (float)*(double*)((uint8*)A$1 + 32ll) );
 float vr$7 = sqrtf( (float)*(double*)((uint8*)A$1 + 24ll) );
 float vr$12 = sqrtf( (float)*(double*)((uint8*)A$1 + 16ll) );
 _ZN7VECTOR3C1Eddd( tmp$2601$1, 0x1.p+0 / (double)vr$12, 0x1.p+0 / (double)vr$7, 0x1.p+0 / (double)vr$2 );
 goto label$5016;
 label$5016:;
 return tmp$2601$1;
}

struct $7VECTOR4* _ZN12SYSTEM_BUS_T13K_INVERSESQRTER7VECTOR4( struct $7VECTOR4* tmp$2603$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR4* A$1 )
{
 label$5017:;
 float vr$2 = sqrtf( (float)*(double*)((uint8*)A$1 + 64ll) );
 float vr$7 = sqrtf( (float)*(double*)((uint8*)A$1 + 56ll) );
 float vr$12 = sqrtf( (float)*(double*)((uint8*)A$1 + 48ll) );
 float vr$17 = sqrtf( (float)*(double*)((uint8*)A$1 + 40ll) );
 _ZN7VECTOR4C1Edddd( tmp$2603$1, 0x1.p+0 / (double)vr$17, 0x1.p+0 / (double)vr$12, 0x1.p+0 / (double)vr$7, 0x1.p+0 / (double)vr$2 );
 goto label$5018;
 label$5018:;
 return tmp$2603$1;
}

double _ZN12SYSTEM_BUS_T6K_SIGNEh( struct $12SYSTEM_BUS_T* THIS$1, uint8 A$1 )
{
 int64 TMP$2605$1;
 int64 TMP$2606$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5019:;
 if( (int64)A$1 <= 0ll ) goto label$5022;
 TMP$2606$1 = 1ll;
 goto label$5023;
 label$5022:;
 if( (int64)A$1 >= 0ll ) goto label$5021;
 TMP$2605$1 = -1ll;
 goto label$5024;
 label$5021:;
 TMP$2605$1 = 0ll;
 label$5024:;
 TMP$2606$1 = TMP$2605$1;
 label$5023:;
 fb$result$1 = (double)TMP$2606$1;
 goto label$5020;
 label$5020:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_SIGNEa( struct $12SYSTEM_BUS_T* THIS$1, int8 A$1 )
{
 int64 TMP$2607$1;
 int64 TMP$2608$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5025:;
 if( (int64)A$1 <= 0ll ) goto label$5028;
 TMP$2608$1 = 1ll;
 goto label$5029;
 label$5028:;
 if( (int64)A$1 >= 0ll ) goto label$5027;
 TMP$2607$1 = -1ll;
 goto label$5030;
 label$5027:;
 TMP$2607$1 = 0ll;
 label$5030:;
 TMP$2608$1 = TMP$2607$1;
 label$5029:;
 fb$result$1 = (double)TMP$2608$1;
 goto label$5026;
 label$5026:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_SIGNEt( struct $12SYSTEM_BUS_T* THIS$1, uint16 A$1 )
{
 int64 TMP$2609$1;
 int64 TMP$2610$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5031:;
 if( (int64)A$1 <= 0ll ) goto label$5034;
 TMP$2610$1 = 1ll;
 goto label$5035;
 label$5034:;
 if( (int64)A$1 >= 0ll ) goto label$5033;
 TMP$2609$1 = -1ll;
 goto label$5036;
 label$5033:;
 TMP$2609$1 = 0ll;
 label$5036:;
 TMP$2610$1 = TMP$2609$1;
 label$5035:;
 fb$result$1 = (double)TMP$2610$1;
 goto label$5032;
 label$5032:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_SIGNEs( struct $12SYSTEM_BUS_T* THIS$1, int16 A$1 )
{
 int64 TMP$2611$1;
 int64 TMP$2612$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5037:;
 if( (int64)A$1 <= 0ll ) goto label$5040;
 TMP$2612$1 = 1ll;
 goto label$5041;
 label$5040:;
 if( (int64)A$1 >= 0ll ) goto label$5039;
 TMP$2611$1 = -1ll;
 goto label$5042;
 label$5039:;
 TMP$2611$1 = 0ll;
 label$5042:;
 TMP$2612$1 = TMP$2611$1;
 label$5041:;
 fb$result$1 = (double)TMP$2612$1;
 goto label$5038;
 label$5038:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_SIGNEj( struct $12SYSTEM_BUS_T* THIS$1, uint32 A$1 )
{
 int64 TMP$2613$1;
 int64 TMP$2614$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5043:;
 if( (int64)A$1 <= 0ll ) goto label$5046;
 TMP$2614$1 = 1ll;
 goto label$5047;
 label$5046:;
 if( (int64)A$1 >= 0ll ) goto label$5045;
 TMP$2613$1 = -1ll;
 goto label$5048;
 label$5045:;
 TMP$2613$1 = 0ll;
 label$5048:;
 TMP$2614$1 = TMP$2613$1;
 label$5047:;
 fb$result$1 = (double)TMP$2614$1;
 goto label$5044;
 label$5044:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_SIGNEi( struct $12SYSTEM_BUS_T* THIS$1, int32 A$1 )
{
 int64 TMP$2615$1;
 int64 TMP$2616$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5049:;
 if( (int64)A$1 <= 0ll ) goto label$5052;
 TMP$2616$1 = 1ll;
 goto label$5053;
 label$5052:;
 if( (int64)A$1 >= 0ll ) goto label$5051;
 TMP$2615$1 = -1ll;
 goto label$5054;
 label$5051:;
 TMP$2615$1 = 0ll;
 label$5054:;
 TMP$2616$1 = TMP$2615$1;
 label$5053:;
 fb$result$1 = (double)TMP$2616$1;
 goto label$5050;
 label$5050:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_SIGNEy( struct $12SYSTEM_BUS_T* THIS$1, uint64 A$1 )
{
 int64 TMP$2617$1;
 int64 TMP$2618$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5055:;
 if( A$1 <= 0ull ) goto label$5058;
 TMP$2618$1 = 1ll;
 goto label$5059;
 label$5058:;
 if( A$1 >= 0ull ) goto label$5057;
 TMP$2617$1 = -1ll;
 goto label$5060;
 label$5057:;
 TMP$2617$1 = 0ll;
 label$5060:;
 TMP$2618$1 = TMP$2617$1;
 label$5059:;
 fb$result$1 = (double)TMP$2618$1;
 goto label$5056;
 label$5056:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_SIGNEx( struct $12SYSTEM_BUS_T* THIS$1, int64 A$1 )
{
 int64 TMP$2619$1;
 int64 TMP$2620$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5061:;
 if( A$1 <= 0ll ) goto label$5064;
 TMP$2620$1 = 1ll;
 goto label$5065;
 label$5064:;
 if( A$1 >= 0ll ) goto label$5063;
 TMP$2619$1 = -1ll;
 goto label$5066;
 label$5063:;
 TMP$2619$1 = 0ll;
 label$5066:;
 TMP$2620$1 = TMP$2619$1;
 label$5065:;
 fb$result$1 = (double)TMP$2620$1;
 goto label$5062;
 label$5062:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_SIGNEf( struct $12SYSTEM_BUS_T* THIS$1, float A$1 )
{
 int64 TMP$2621$1;
 int64 TMP$2622$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5067:;
 if( A$1 <= 0x0p+0f ) goto label$5070;
 TMP$2622$1 = 1ll;
 goto label$5071;
 label$5070:;
 if( A$1 >= 0x0p+0f ) goto label$5069;
 TMP$2621$1 = -1ll;
 goto label$5072;
 label$5069:;
 TMP$2621$1 = 0ll;
 label$5072:;
 TMP$2622$1 = TMP$2621$1;
 label$5071:;
 fb$result$1 = (double)TMP$2622$1;
 goto label$5068;
 label$5068:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_SIGNEd( struct $12SYSTEM_BUS_T* THIS$1, double A$1 )
{
 int64 TMP$2623$1;
 int64 TMP$2624$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5073:;
 if( A$1 <= 0x0p+0 ) goto label$5076;
 TMP$2624$1 = 1ll;
 goto label$5077;
 label$5076:;
 if( A$1 >= 0x0p+0 ) goto label$5075;
 TMP$2623$1 = -1ll;
 goto label$5078;
 label$5075:;
 TMP$2623$1 = 0ll;
 label$5078:;
 TMP$2624$1 = TMP$2623$1;
 label$5077:;
 fb$result$1 = (double)TMP$2624$1;
 goto label$5074;
 label$5074:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_SIGNER9_FLOAT128( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* A$1 )
{
 int64 TMP$2625$1;
 int64 TMP$2626$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5079:;
 uint64 vr$1 = _ZN9_FLOAT128cvyEv( A$1 );
 if( vr$1 <= 0ull ) goto label$5082;
 TMP$2626$1 = 1ll;
 goto label$5083;
 label$5082:;
 uint64 vr$2 = _ZN9_FLOAT128cvyEv( A$1 );
 if( vr$2 >= 0ull ) goto label$5081;
 TMP$2625$1 = -1ll;
 goto label$5084;
 label$5081:;
 TMP$2625$1 = 0ll;
 label$5084:;
 TMP$2626$1 = TMP$2625$1;
 label$5083:;
 fb$result$1 = (double)TMP$2626$1;
 goto label$5080;
 label$5080:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_SIGNER9_FLOAT256( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* A$1 )
{
 int64 TMP$2627$1;
 int64 TMP$2628$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5085:;
 uint64 vr$1 = _ZN9_FLOAT256cvyEv( A$1 );
 if( vr$1 <= 0ull ) goto label$5088;
 TMP$2628$1 = 1ll;
 goto label$5089;
 label$5088:;
 uint64 vr$2 = _ZN9_FLOAT256cvyEv( A$1 );
 if( vr$2 >= 0ull ) goto label$5087;
 TMP$2627$1 = -1ll;
 goto label$5090;
 label$5087:;
 TMP$2627$1 = 0ll;
 label$5090:;
 TMP$2628$1 = TMP$2627$1;
 label$5089:;
 fb$result$1 = (double)TMP$2628$1;
 goto label$5086;
 label$5086:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_SIGNER9_FLOAT512( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* A$1 )
{
 int64 TMP$2629$1;
 int64 TMP$2630$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5091:;
 uint64 vr$1 = _ZN9_FLOAT512cvyEv( A$1 );
 if( vr$1 <= 0ull ) goto label$5094;
 TMP$2630$1 = 1ll;
 goto label$5095;
 label$5094:;
 uint64 vr$2 = _ZN9_FLOAT512cvyEv( A$1 );
 if( vr$2 >= 0ull ) goto label$5093;
 TMP$2629$1 = -1ll;
 goto label$5096;
 label$5093:;
 TMP$2629$1 = 0ll;
 label$5096:;
 TMP$2630$1 = TMP$2629$1;
 label$5095:;
 fb$result$1 = (double)TMP$2630$1;
 goto label$5092;
 label$5092:;
 return fb$result$1;
}

struct $7VECTOR2* _ZN12SYSTEM_BUS_T6K_SIGNER7VECTOR2( struct $7VECTOR2* tmp$2631$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR2* A$1 )
{
 int64 TMP$2633$1;
 int64 TMP$2634$1;
 int64 TMP$2635$1;
 int64 TMP$2636$1;
 label$5097:;
 if( *(double*)((uint8*)A$1 + 8ll) <= 0x0p+0 ) goto label$5102;
 TMP$2636$1 = 1ll;
 goto label$5103;
 label$5102:;
 if( *(double*)((uint8*)A$1 + 8ll) >= 0x0p+0 ) goto label$5101;
 TMP$2635$1 = -1ll;
 goto label$5104;
 label$5101:;
 TMP$2635$1 = 0ll;
 label$5104:;
 TMP$2636$1 = TMP$2635$1;
 label$5103:;
 if( *(double*)A$1 <= 0x0p+0 ) goto label$5100;
 TMP$2634$1 = 1ll;
 goto label$5105;
 label$5100:;
 if( *(double*)A$1 >= 0x0p+0 ) goto label$5099;
 TMP$2633$1 = -1ll;
 goto label$5106;
 label$5099:;
 TMP$2633$1 = 0ll;
 label$5106:;
 TMP$2634$1 = TMP$2633$1;
 label$5105:;
 _ZN7VECTOR2C1Edd( tmp$2631$1, (double)TMP$2634$1, (double)TMP$2636$1 );
 goto label$5098;
 label$5098:;
 return tmp$2631$1;
}

struct $7VECTOR3* _ZN12SYSTEM_BUS_T6K_SIGNER7VECTOR3( struct $7VECTOR3* tmp$2637$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* A$1 )
{
 int64 TMP$2639$1;
 int64 TMP$2640$1;
 int64 TMP$2641$1;
 int64 TMP$2642$1;
 int64 TMP$2643$1;
 int64 TMP$2644$1;
 label$5107:;
 if( *(double*)((uint8*)A$1 + 32ll) <= 0x0p+0 ) goto label$5114;
 TMP$2644$1 = 1ll;
 goto label$5115;
 label$5114:;
 if( *(double*)((uint8*)A$1 + 32ll) >= 0x0p+0 ) goto label$5113;
 TMP$2643$1 = -1ll;
 goto label$5116;
 label$5113:;
 TMP$2643$1 = 0ll;
 label$5116:;
 TMP$2644$1 = TMP$2643$1;
 label$5115:;
 if( *(double*)((uint8*)A$1 + 24ll) <= 0x0p+0 ) goto label$5112;
 TMP$2642$1 = 1ll;
 goto label$5117;
 label$5112:;
 if( *(double*)((uint8*)A$1 + 24ll) >= 0x0p+0 ) goto label$5111;
 TMP$2641$1 = -1ll;
 goto label$5118;
 label$5111:;
 TMP$2641$1 = 0ll;
 label$5118:;
 TMP$2642$1 = TMP$2641$1;
 label$5117:;
 if( *(double*)((uint8*)A$1 + 16ll) <= 0x0p+0 ) goto label$5110;
 TMP$2640$1 = 1ll;
 goto label$5119;
 label$5110:;
 if( *(double*)((uint8*)A$1 + 16ll) >= 0x0p+0 ) goto label$5109;
 TMP$2639$1 = -1ll;
 goto label$5120;
 label$5109:;
 TMP$2639$1 = 0ll;
 label$5120:;
 TMP$2640$1 = TMP$2639$1;
 label$5119:;
 _ZN7VECTOR3C1Eddd( tmp$2637$1, (double)TMP$2640$1, (double)TMP$2642$1, (double)TMP$2644$1 );
 goto label$5108;
 label$5108:;
 return tmp$2637$1;
}

struct $7VECTOR4* _ZN12SYSTEM_BUS_T6K_SIGNER7VECTOR4( struct $7VECTOR4* tmp$2645$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR4* A$1 )
{
 int64 TMP$2647$1;
 int64 TMP$2648$1;
 int64 TMP$2649$1;
 int64 TMP$2650$1;
 int64 TMP$2651$1;
 int64 TMP$2652$1;
 int64 TMP$2653$1;
 int64 TMP$2654$1;
 label$5121:;
 if( *(double*)((uint8*)A$1 + 64ll) <= 0x0p+0 ) goto label$5130;
 TMP$2654$1 = 1ll;
 goto label$5131;
 label$5130:;
 if( *(double*)((uint8*)A$1 + 64ll) >= 0x0p+0 ) goto label$5129;
 TMP$2653$1 = -1ll;
 goto label$5132;
 label$5129:;
 TMP$2653$1 = 0ll;
 label$5132:;
 TMP$2654$1 = TMP$2653$1;
 label$5131:;
 if( *(double*)((uint8*)A$1 + 56ll) <= 0x0p+0 ) goto label$5128;
 TMP$2652$1 = 1ll;
 goto label$5133;
 label$5128:;
 if( *(double*)((uint8*)A$1 + 56ll) >= 0x0p+0 ) goto label$5127;
 TMP$2651$1 = -1ll;
 goto label$5134;
 label$5127:;
 TMP$2651$1 = 0ll;
 label$5134:;
 TMP$2652$1 = TMP$2651$1;
 label$5133:;
 if( *(double*)((uint8*)A$1 + 48ll) <= 0x0p+0 ) goto label$5126;
 TMP$2650$1 = 1ll;
 goto label$5135;
 label$5126:;
 if( *(double*)((uint8*)A$1 + 48ll) >= 0x0p+0 ) goto label$5125;
 TMP$2649$1 = -1ll;
 goto label$5136;
 label$5125:;
 TMP$2649$1 = 0ll;
 label$5136:;
 TMP$2650$1 = TMP$2649$1;
 label$5135:;
 if( *(double*)((uint8*)A$1 + 40ll) <= 0x0p+0 ) goto label$5124;
 TMP$2648$1 = 1ll;
 goto label$5137;
 label$5124:;
 if( *(double*)((uint8*)A$1 + 40ll) >= 0x0p+0 ) goto label$5123;
 TMP$2647$1 = -1ll;
 goto label$5138;
 label$5123:;
 TMP$2647$1 = 0ll;
 label$5138:;
 TMP$2648$1 = TMP$2647$1;
 label$5137:;
 _ZN7VECTOR4C1Edddd( tmp$2645$1, (double)TMP$2648$1, (double)TMP$2650$1, (double)TMP$2652$1, (double)TMP$2654$1 );
 goto label$5122;
 label$5122:;
 return tmp$2645$1;
}

double _ZN12SYSTEM_BUS_T7K_FLOOREh( struct $12SYSTEM_BUS_T* THIS$1, uint8 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5139:;
 float vr$2 = floorf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$5140;
 label$5140:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_FLOOREa( struct $12SYSTEM_BUS_T* THIS$1, int8 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5141:;
 float vr$2 = floorf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$5142;
 label$5142:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_FLOOREt( struct $12SYSTEM_BUS_T* THIS$1, uint16 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5143:;
 float vr$2 = floorf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$5144;
 label$5144:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_FLOOREs( struct $12SYSTEM_BUS_T* THIS$1, int16 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5145:;
 float vr$2 = floorf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$5146;
 label$5146:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_FLOOREj( struct $12SYSTEM_BUS_T* THIS$1, uint32 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5147:;
 float vr$2 = floorf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$5148;
 label$5148:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_FLOOREi( struct $12SYSTEM_BUS_T* THIS$1, int32 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5149:;
 float vr$2 = floorf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$5150;
 label$5150:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_FLOOREy( struct $12SYSTEM_BUS_T* THIS$1, uint64 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5151:;
 float vr$2 = floorf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$5152;
 label$5152:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_FLOOREx( struct $12SYSTEM_BUS_T* THIS$1, int64 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5153:;
 float vr$2 = floorf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$5154;
 label$5154:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_FLOOREf( struct $12SYSTEM_BUS_T* THIS$1, float A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5155:;
 float vr$1 = floorf( A$1 );
 fb$result$1 = (double)vr$1;
 goto label$5156;
 label$5156:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_FLOOREd( struct $12SYSTEM_BUS_T* THIS$1, double A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5157:;
 float vr$2 = floorf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$5158;
 label$5158:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_FLOORER9_FLOAT128( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5159:;
 uint64 vr$1 = _ZN9_FLOAT128cvyEv( A$1 );
 float vr$3 = floorf( (float)vr$1 );
 fb$result$1 = (double)vr$3;
 goto label$5160;
 label$5160:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_FLOORER9_FLOAT256( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5161:;
 uint64 vr$1 = _ZN9_FLOAT256cvyEv( A$1 );
 float vr$3 = floorf( (float)vr$1 );
 fb$result$1 = (double)vr$3;
 goto label$5162;
 label$5162:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_FLOORER9_FLOAT512( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5163:;
 uint64 vr$1 = _ZN9_FLOAT512cvyEv( A$1 );
 float vr$3 = floorf( (float)vr$1 );
 fb$result$1 = (double)vr$3;
 goto label$5164;
 label$5164:;
 return fb$result$1;
}

struct $7VECTOR2* _ZN12SYSTEM_BUS_T7K_FLOORER7VECTOR2( struct $7VECTOR2* tmp$2655$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR2* A$1 )
{
 label$5165:;
 float vr$2 = floorf( (float)*(double*)((uint8*)A$1 + 8ll) );
 float vr$6 = floorf( (float)*(double*)A$1 );
 _ZN7VECTOR2C1Edd( tmp$2655$1, (double)vr$6, (double)vr$2 );
 goto label$5166;
 label$5166:;
 return tmp$2655$1;
}

struct $7VECTOR3* _ZN12SYSTEM_BUS_T7K_FLOORER7VECTOR3( struct $7VECTOR3* tmp$2657$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* A$1 )
{
 label$5167:;
 float vr$2 = floorf( (float)*(double*)((uint8*)A$1 + 32ll) );
 float vr$6 = floorf( (float)*(double*)((uint8*)A$1 + 24ll) );
 float vr$10 = floorf( (float)*(double*)((uint8*)A$1 + 16ll) );
 _ZN7VECTOR3C1Eddd( tmp$2657$1, (double)vr$10, (double)vr$6, (double)vr$2 );
 goto label$5168;
 label$5168:;
 return tmp$2657$1;
}

struct $7VECTOR4* _ZN12SYSTEM_BUS_T7K_FLOORER7VECTOR4( struct $7VECTOR4* tmp$2659$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR4* A$1 )
{
 label$5169:;
 float vr$2 = floorf( (float)*(double*)((uint8*)A$1 + 64ll) );
 float vr$6 = floorf( (float)*(double*)((uint8*)A$1 + 56ll) );
 float vr$10 = floorf( (float)*(double*)((uint8*)A$1 + 48ll) );
 float vr$14 = floorf( (float)*(double*)((uint8*)A$1 + 40ll) );
 _ZN7VECTOR4C1Edddd( tmp$2659$1, (double)vr$14, (double)vr$10, (double)vr$6, (double)vr$2 );
 goto label$5170;
 label$5170:;
 return tmp$2659$1;
}

double _ZN12SYSTEM_BUS_T6K_CEILEh( struct $12SYSTEM_BUS_T* THIS$1, uint8 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5171:;
 float vr$2 = ceilf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$5172;
 label$5172:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_CEILEa( struct $12SYSTEM_BUS_T* THIS$1, int8 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5173:;
 float vr$2 = ceilf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$5174;
 label$5174:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_CEILEt( struct $12SYSTEM_BUS_T* THIS$1, uint16 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5175:;
 float vr$2 = ceilf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$5176;
 label$5176:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_CEILEs( struct $12SYSTEM_BUS_T* THIS$1, int16 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5177:;
 float vr$2 = ceilf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$5178;
 label$5178:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_CEILEj( struct $12SYSTEM_BUS_T* THIS$1, uint32 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5179:;
 float vr$2 = ceilf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$5180;
 label$5180:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_CEILEi( struct $12SYSTEM_BUS_T* THIS$1, int32 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5181:;
 float vr$2 = ceilf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$5182;
 label$5182:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_CEILEy( struct $12SYSTEM_BUS_T* THIS$1, uint64 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5183:;
 float vr$2 = ceilf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$5184;
 label$5184:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_CEILEx( struct $12SYSTEM_BUS_T* THIS$1, int64 A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5185:;
 float vr$2 = ceilf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$5186;
 label$5186:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_CEILEf( struct $12SYSTEM_BUS_T* THIS$1, float A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5187:;
 float vr$1 = ceilf( A$1 );
 fb$result$1 = (double)vr$1;
 goto label$5188;
 label$5188:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_CEILEd( struct $12SYSTEM_BUS_T* THIS$1, double A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5189:;
 float vr$2 = ceilf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$5190;
 label$5190:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_CEILER9_FLOAT128( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5191:;
 uint64 vr$1 = _ZN9_FLOAT128cvyEv( A$1 );
 float vr$3 = ceilf( (float)vr$1 );
 fb$result$1 = (double)vr$3;
 goto label$5192;
 label$5192:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_CEILER9_FLOAT256( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5193:;
 uint64 vr$1 = _ZN9_FLOAT256cvyEv( A$1 );
 float vr$3 = ceilf( (float)vr$1 );
 fb$result$1 = (double)vr$3;
 goto label$5194;
 label$5194:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_CEILER9_FLOAT512( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5195:;
 uint64 vr$1 = _ZN9_FLOAT512cvyEv( A$1 );
 float vr$3 = ceilf( (float)vr$1 );
 fb$result$1 = (double)vr$3;
 goto label$5196;
 label$5196:;
 return fb$result$1;
}

struct $7VECTOR2* _ZN12SYSTEM_BUS_T6K_CEILER7VECTOR2( struct $7VECTOR2* tmp$2661$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR2* A$1 )
{
 label$5197:;
 float vr$2 = ceilf( (float)*(double*)((uint8*)A$1 + 8ll) );
 float vr$6 = ceilf( (float)*(double*)A$1 );
 _ZN7VECTOR2C1Edd( tmp$2661$1, (double)vr$6, (double)vr$2 );
 goto label$5198;
 label$5198:;
 return tmp$2661$1;
}

struct $7VECTOR3* _ZN12SYSTEM_BUS_T6K_CEILER7VECTOR3( struct $7VECTOR3* tmp$2663$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* A$1 )
{
 label$5199:;
 float vr$2 = ceilf( (float)*(double*)((uint8*)A$1 + 32ll) );
 float vr$6 = ceilf( (float)*(double*)((uint8*)A$1 + 24ll) );
 float vr$10 = ceilf( (float)*(double*)((uint8*)A$1 + 16ll) );
 _ZN7VECTOR3C1Eddd( tmp$2663$1, (double)vr$10, (double)vr$6, (double)vr$2 );
 goto label$5200;
 label$5200:;
 return tmp$2663$1;
}

struct $7VECTOR4* _ZN12SYSTEM_BUS_T6K_CEILER7VECTOR4( struct $7VECTOR4* tmp$2665$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR4* A$1 )
{
 label$5201:;
 float vr$2 = ceilf( (float)*(double*)((uint8*)A$1 + 64ll) );
 float vr$6 = ceilf( (float)*(double*)((uint8*)A$1 + 56ll) );
 float vr$10 = ceilf( (float)*(double*)((uint8*)A$1 + 48ll) );
 float vr$14 = ceilf( (float)*(double*)((uint8*)A$1 + 40ll) );
 _ZN7VECTOR4C1Edddd( tmp$2665$1, (double)vr$14, (double)vr$10, (double)vr$6, (double)vr$2 );
 goto label$5202;
 label$5202:;
 return tmp$2665$1;
}

double _ZN12SYSTEM_BUS_T7K_FRACTEh( struct $12SYSTEM_BUS_T* THIS$1, uint8 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5203:;
 double vr$3 = _ZN12SYSTEM_BUS_T7K_FLOOREh( THIS$1, X$1 );
 fb$result$1 = (double)(int64)X$1 - vr$3;
 goto label$5204;
 label$5204:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_FRACTEa( struct $12SYSTEM_BUS_T* THIS$1, int8 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5205:;
 double vr$3 = _ZN12SYSTEM_BUS_T7K_FLOOREa( THIS$1, X$1 );
 fb$result$1 = (double)(int64)X$1 - vr$3;
 goto label$5206;
 label$5206:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_FRACTEt( struct $12SYSTEM_BUS_T* THIS$1, uint16 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5207:;
 double vr$3 = _ZN12SYSTEM_BUS_T7K_FLOOREt( THIS$1, X$1 );
 fb$result$1 = (double)(int64)X$1 - vr$3;
 goto label$5208;
 label$5208:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_FRACTEs( struct $12SYSTEM_BUS_T* THIS$1, int16 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5209:;
 double vr$3 = _ZN12SYSTEM_BUS_T7K_FLOOREs( THIS$1, X$1 );
 fb$result$1 = (double)(int64)X$1 - vr$3;
 goto label$5210;
 label$5210:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_FRACTEj( struct $12SYSTEM_BUS_T* THIS$1, uint32 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5211:;
 double vr$3 = _ZN12SYSTEM_BUS_T7K_FLOOREj( THIS$1, X$1 );
 fb$result$1 = (double)(int64)X$1 - vr$3;
 goto label$5212;
 label$5212:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_FRACTEi( struct $12SYSTEM_BUS_T* THIS$1, int32 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5213:;
 double vr$3 = _ZN12SYSTEM_BUS_T7K_FLOOREi( THIS$1, X$1 );
 fb$result$1 = (double)(int64)X$1 - vr$3;
 goto label$5214;
 label$5214:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_FRACTEy( struct $12SYSTEM_BUS_T* THIS$1, uint64 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5215:;
 double vr$2 = _ZN12SYSTEM_BUS_T7K_FLOOREy( THIS$1, X$1 );
 fb$result$1 = (double)X$1 - vr$2;
 goto label$5216;
 label$5216:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_FRACTEx( struct $12SYSTEM_BUS_T* THIS$1, int64 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5217:;
 double vr$2 = _ZN12SYSTEM_BUS_T7K_FLOOREx( THIS$1, X$1 );
 fb$result$1 = (double)X$1 - vr$2;
 goto label$5218;
 label$5218:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_FRACTEf( struct $12SYSTEM_BUS_T* THIS$1, float X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5219:;
 double vr$2 = _ZN12SYSTEM_BUS_T7K_FLOOREf( THIS$1, X$1 );
 fb$result$1 = (double)X$1 - vr$2;
 goto label$5220;
 label$5220:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_FRACTEd( struct $12SYSTEM_BUS_T* THIS$1, double X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5221:;
 double vr$1 = _ZN12SYSTEM_BUS_T7K_FLOOREd( THIS$1, X$1 );
 fb$result$1 = X$1 - vr$1;
 goto label$5222;
 label$5222:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_FRACTER9_FLOAT128( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* X$1 )
{
 struct $9_FLOAT128 TMP$2667$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5223:;
 double vr$1 = _ZN12SYSTEM_BUS_T7K_FLOORER9_FLOAT128( THIS$1, X$1 );
 struct $9_FLOAT128* vr$3 = _ZmiR9_FLOAT128d( &TMP$2667$1, X$1, vr$1 );
 uint64 vr$4 = _ZN9_FLOAT128cvyEv( vr$3 );
 fb$result$1 = (double)vr$4;
 goto label$5224;
 label$5224:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_FRACTER9_FLOAT256( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* X$1 )
{
 struct $9_FLOAT256 TMP$2668$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5225:;
 double vr$1 = _ZN12SYSTEM_BUS_T7K_FLOORER9_FLOAT256( THIS$1, X$1 );
 struct $9_FLOAT256* vr$3 = _ZmiR9_FLOAT256d( &TMP$2668$1, X$1, vr$1 );
 uint64 vr$4 = _ZN9_FLOAT256cvyEv( vr$3 );
 fb$result$1 = (double)vr$4;
 goto label$5226;
 label$5226:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_FRACTER9_FLOAT512( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* X$1 )
{
 struct $9_FLOAT512 TMP$2669$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5227:;
 double vr$1 = _ZN12SYSTEM_BUS_T7K_FLOORER9_FLOAT512( THIS$1, X$1 );
 struct $9_FLOAT512* vr$3 = _ZmiR9_FLOAT512d( &TMP$2669$1, X$1, vr$1 );
 uint64 vr$4 = _ZN9_FLOAT512cvyEv( vr$3 );
 fb$result$1 = (double)vr$4;
 goto label$5228;
 label$5228:;
 return fb$result$1;
}

struct $7VECTOR2* _ZN12SYSTEM_BUS_T7K_FRACTER7VECTOR2( struct $7VECTOR2* tmp$2670$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR2* X$1 )
{
 label$5229:;
 double vr$2 = _ZN12SYSTEM_BUS_T7K_FLOOREd( THIS$1, *(double*)((uint8*)X$1 + 8ll) );
 double vr$6 = _ZN12SYSTEM_BUS_T7K_FLOOREd( THIS$1, *(double*)X$1 );
 _ZN7VECTOR2C1Edd( tmp$2670$1, *(double*)X$1 - vr$6, *(double*)((uint8*)X$1 + 8ll) - vr$2 );
 goto label$5230;
 label$5230:;
 return tmp$2670$1;
}

struct $7VECTOR3* _ZN12SYSTEM_BUS_T7K_FRACTER7VECTOR3( struct $7VECTOR3* tmp$2672$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* X$1 )
{
 label$5231:;
 double vr$2 = _ZN12SYSTEM_BUS_T7K_FLOOREd( THIS$1, *(double*)((uint8*)X$1 + 32ll) );
 double vr$6 = _ZN12SYSTEM_BUS_T7K_FLOOREd( THIS$1, *(double*)((uint8*)X$1 + 24ll) );
 double vr$10 = _ZN12SYSTEM_BUS_T7K_FLOOREd( THIS$1, *(double*)((uint8*)X$1 + 16ll) );
 _ZN7VECTOR3C1Eddd( tmp$2672$1, *(double*)((uint8*)X$1 + 16ll) - vr$10, *(double*)((uint8*)X$1 + 24ll) - vr$6, *(double*)((uint8*)X$1 + 32ll) - vr$2 );
 goto label$5232;
 label$5232:;
 return tmp$2672$1;
}

struct $7VECTOR4* _ZN12SYSTEM_BUS_T7K_FRACTER7VECTOR4( struct $7VECTOR4* tmp$2674$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR4* X$1 )
{
 label$5233:;
 double vr$2 = _ZN12SYSTEM_BUS_T7K_FLOOREd( THIS$1, *(double*)((uint8*)X$1 + 64ll) );
 double vr$6 = _ZN12SYSTEM_BUS_T7K_FLOOREd( THIS$1, *(double*)((uint8*)X$1 + 56ll) );
 double vr$10 = _ZN12SYSTEM_BUS_T7K_FLOOREd( THIS$1, *(double*)((uint8*)X$1 + 48ll) );
 double vr$14 = _ZN12SYSTEM_BUS_T7K_FLOOREd( THIS$1, *(double*)((uint8*)X$1 + 40ll) );
 _ZN7VECTOR4C1Edddd( tmp$2674$1, *(double*)((uint8*)X$1 + 40ll) - vr$14, *(double*)((uint8*)X$1 + 48ll) - vr$10, *(double*)((uint8*)X$1 + 56ll) - vr$6, *(double*)((uint8*)X$1 + 64ll) - vr$2 );
 goto label$5234;
 label$5234:;
 return tmp$2674$1;
}

double _ZN12SYSTEM_BUS_T8K_MODULOEhh( struct $12SYSTEM_BUS_T* THIS$1, uint8 X$1, uint8 Y$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5235:;
 fb$result$1 = (double)((int64)X$1 - ((int64)Y$1 * ((int64)X$1 / (int64)Y$1)));
 goto label$5236;
 label$5236:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8K_MODULOEaa( struct $12SYSTEM_BUS_T* THIS$1, int8 X$1, int8 Y$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5237:;
 fb$result$1 = (double)((int64)X$1 - ((int64)Y$1 * ((int64)X$1 / (int64)Y$1)));
 goto label$5238;
 label$5238:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8K_MODULOEtt( struct $12SYSTEM_BUS_T* THIS$1, uint16 X$1, uint16 Y$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5239:;
 fb$result$1 = (double)((int64)X$1 - ((int64)Y$1 * ((int64)X$1 / (int64)Y$1)));
 goto label$5240;
 label$5240:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8K_MODULOEss( struct $12SYSTEM_BUS_T* THIS$1, int16 X$1, int16 Y$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5241:;
 fb$result$1 = (double)((int64)X$1 - ((int64)Y$1 * ((int64)X$1 / (int64)Y$1)));
 goto label$5242;
 label$5242:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8K_MODULOEjj( struct $12SYSTEM_BUS_T* THIS$1, uint32 X$1, uint32 Y$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5243:;
 fb$result$1 = (double)((int64)X$1 - ((int64)Y$1 * ((int64)X$1 / (int64)Y$1)));
 goto label$5244;
 label$5244:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8K_MODULOEii( struct $12SYSTEM_BUS_T* THIS$1, int32 X$1, int32 Y$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5245:;
 fb$result$1 = (double)((int64)X$1 - ((int64)Y$1 * ((int64)X$1 / (int64)Y$1)));
 goto label$5246;
 label$5246:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8K_MODULOEyy( struct $12SYSTEM_BUS_T* THIS$1, uint64 X$1, uint64 Y$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5247:;
 fb$result$1 = (double)(X$1 - (Y$1 * (X$1 / Y$1)));
 goto label$5248;
 label$5248:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8K_MODULOExx( struct $12SYSTEM_BUS_T* THIS$1, int64 X$1, int64 Y$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5249:;
 fb$result$1 = (double)(X$1 - (Y$1 * (X$1 / Y$1)));
 goto label$5250;
 label$5250:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8K_MODULOEff( struct $12SYSTEM_BUS_T* THIS$1, float X$1, float Y$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5251:;
 double vr$4 = _ZN12SYSTEM_BUS_T7K_FLOOREf( THIS$1, (float)((double)X$1 / (double)Y$1) );
 fb$result$1 = (double)X$1 - ((double)Y$1 * vr$4);
 goto label$5252;
 label$5252:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8K_MODULOEdd( struct $12SYSTEM_BUS_T* THIS$1, double X$1, double Y$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5253:;
 double vr$2 = _ZN12SYSTEM_BUS_T7K_FLOOREd( THIS$1, X$1 / Y$1 );
 fb$result$1 = X$1 - (Y$1 * vr$2);
 goto label$5254;
 label$5254:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8K_MODULOER9_FLOAT128S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* X$1, struct $9_FLOAT128* Y$1 )
{
 struct $9_FLOAT128 TMP$2676$1;
 struct $9_FLOAT128 TMP$2677$1;
 struct $9_FLOAT128 TMP$2678$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5255:;
 struct $9_FLOAT128* vr$2 = _ZdvR9_FLOAT128S0_( &TMP$2676$1, X$1, Y$1 );
 double vr$3 = _ZN12SYSTEM_BUS_T7K_FLOORER9_FLOAT128( THIS$1, vr$2 );
 struct $9_FLOAT128* vr$5 = _ZmlR9_FLOAT128d( &TMP$2677$1, Y$1, vr$3 );
 struct $9_FLOAT128* vr$7 = _ZmiR9_FLOAT128S0_( &TMP$2678$1, X$1, vr$5 );
 uint64 vr$8 = _ZN9_FLOAT128cvyEv( vr$7 );
 fb$result$1 = (double)vr$8;
 goto label$5256;
 label$5256:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8K_MODULOER9_FLOAT256S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* X$1, struct $9_FLOAT256* Y$1 )
{
 struct $9_FLOAT256 TMP$2679$1;
 struct $9_FLOAT256 TMP$2680$1;
 struct $9_FLOAT256 TMP$2681$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5257:;
 struct $9_FLOAT256* vr$2 = _ZdvR9_FLOAT256S0_( &TMP$2679$1, X$1, Y$1 );
 double vr$3 = _ZN12SYSTEM_BUS_T7K_FLOORER9_FLOAT256( THIS$1, vr$2 );
 struct $9_FLOAT256* vr$5 = _ZmlR9_FLOAT256d( &TMP$2680$1, Y$1, vr$3 );
 struct $9_FLOAT256* vr$7 = _ZmiR9_FLOAT256S0_( &TMP$2681$1, X$1, vr$5 );
 uint64 vr$8 = _ZN9_FLOAT256cvyEv( vr$7 );
 fb$result$1 = (double)vr$8;
 goto label$5258;
 label$5258:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8K_MODULOER9_FLOAT512S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* X$1, struct $9_FLOAT512* Y$1 )
{
 struct $9_FLOAT512 TMP$2682$1;
 struct $9_FLOAT512 TMP$2683$1;
 struct $9_FLOAT512 TMP$2684$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5259:;
 struct $9_FLOAT512* vr$2 = _ZdvR9_FLOAT512S0_( &TMP$2682$1, X$1, Y$1 );
 double vr$3 = _ZN12SYSTEM_BUS_T7K_FLOORER9_FLOAT512( THIS$1, vr$2 );
 struct $9_FLOAT512* vr$5 = _ZmlR9_FLOAT512d( &TMP$2683$1, Y$1, vr$3 );
 struct $9_FLOAT512* vr$7 = _ZmiR9_FLOAT512S0_( &TMP$2684$1, X$1, vr$5 );
 uint64 vr$8 = _ZN9_FLOAT512cvyEv( vr$7 );
 fb$result$1 = (double)vr$8;
 goto label$5260;
 label$5260:;
 return fb$result$1;
}

struct $7VECTOR2* _ZN12SYSTEM_BUS_T8K_MODULOER7VECTOR2S1_( struct $7VECTOR2* tmp$2685$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR2* X$1, struct $7VECTOR2* Y$1 )
{
 label$5261:;
 double vr$5 = _ZN12SYSTEM_BUS_T7K_FLOOREd( THIS$1, *(double*)((uint8*)X$1 + 8ll) / *(double*)((uint8*)Y$1 + 8ll) );
 double vr$13 = _ZN12SYSTEM_BUS_T7K_FLOOREd( THIS$1, *(double*)X$1 / *(double*)Y$1 );
 _ZN7VECTOR2C1Edd( tmp$2685$1, *(double*)X$1 - (*(double*)Y$1 * vr$13), *(double*)((uint8*)X$1 + 8ll) - (*(double*)((uint8*)Y$1 + 8ll) * vr$5) );
 goto label$5262;
 label$5262:;
 return tmp$2685$1;
}

struct $7VECTOR3* _ZN12SYSTEM_BUS_T8K_MODULOER7VECTOR3S1_( struct $7VECTOR3* tmp$2687$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* X$1, struct $7VECTOR3* Y$1 )
{
 label$5263:;
 double vr$5 = _ZN12SYSTEM_BUS_T7K_FLOOREd( THIS$1, *(double*)((uint8*)X$1 + 32ll) / *(double*)((uint8*)Y$1 + 32ll) );
 double vr$13 = _ZN12SYSTEM_BUS_T7K_FLOOREd( THIS$1, *(double*)((uint8*)X$1 + 24ll) / *(double*)((uint8*)Y$1 + 24ll) );
 double vr$21 = _ZN12SYSTEM_BUS_T7K_FLOOREd( THIS$1, *(double*)((uint8*)X$1 + 16ll) / *(double*)((uint8*)Y$1 + 16ll) );
 _ZN7VECTOR3C1Eddd( tmp$2687$1, *(double*)((uint8*)X$1 + 16ll) - (*(double*)((uint8*)Y$1 + 16ll) * vr$21), *(double*)((uint8*)X$1 + 24ll) - (*(double*)((uint8*)Y$1 + 24ll) * vr$13), *(double*)((uint8*)X$1 + 32ll) - (*(double*)((uint8*)Y$1 + 32ll) * vr$5) );
 goto label$5264;
 label$5264:;
 return tmp$2687$1;
}

struct $7VECTOR4* _ZN12SYSTEM_BUS_T8K_MODULOER7VECTOR4S1_( struct $7VECTOR4* tmp$2689$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR4* X$1, struct $7VECTOR4* Y$1 )
{
 label$5265:;
 double vr$5 = _ZN12SYSTEM_BUS_T7K_FLOOREd( THIS$1, *(double*)((uint8*)X$1 + 64ll) / *(double*)((uint8*)Y$1 + 64ll) );
 double vr$13 = _ZN12SYSTEM_BUS_T7K_FLOOREd( THIS$1, *(double*)((uint8*)X$1 + 56ll) / *(double*)((uint8*)Y$1 + 56ll) );
 double vr$21 = _ZN12SYSTEM_BUS_T7K_FLOOREd( THIS$1, *(double*)((uint8*)X$1 + 48ll) / *(double*)((uint8*)Y$1 + 48ll) );
 double vr$29 = _ZN12SYSTEM_BUS_T7K_FLOOREd( THIS$1, *(double*)((uint8*)X$1 + 40ll) / *(double*)((uint8*)Y$1 + 40ll) );
 _ZN7VECTOR4C1Edddd( tmp$2689$1, *(double*)((uint8*)X$1 + 40ll) - (*(double*)((uint8*)Y$1 + 40ll) * vr$29), *(double*)((uint8*)X$1 + 48ll) - (*(double*)((uint8*)Y$1 + 48ll) * vr$21), *(double*)((uint8*)X$1 + 56ll) - (*(double*)((uint8*)Y$1 + 56ll) * vr$13), *(double*)((uint8*)X$1 + 64ll) - (*(double*)((uint8*)Y$1 + 64ll) * vr$5) );
 goto label$5266;
 label$5266:;
 return tmp$2689$1;
}

double _ZN12SYSTEM_BUS_T5K_MINEhh( struct $12SYSTEM_BUS_T* THIS$1, uint8 A$1, uint8 B$1 )
{
 uint8 TMP$2691$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5267:;
 if( (int64)A$1 >= (int64)B$1 ) goto label$5269;
 TMP$2691$1 = A$1;
 goto label$5270;
 label$5269:;
 TMP$2691$1 = B$1;
 label$5270:;
 fb$result$1 = (double)TMP$2691$1;
 goto label$5268;
 label$5268:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_MINEaa( struct $12SYSTEM_BUS_T* THIS$1, int8 A$1, int8 B$1 )
{
 int8 TMP$2692$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5271:;
 if( (int64)A$1 >= (int64)B$1 ) goto label$5273;
 TMP$2692$1 = A$1;
 goto label$5274;
 label$5273:;
 TMP$2692$1 = B$1;
 label$5274:;
 fb$result$1 = (double)TMP$2692$1;
 goto label$5272;
 label$5272:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_MINEtt( struct $12SYSTEM_BUS_T* THIS$1, uint16 A$1, uint16 B$1 )
{
 uint16 TMP$2693$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5275:;
 if( (int64)A$1 >= (int64)B$1 ) goto label$5277;
 TMP$2693$1 = A$1;
 goto label$5278;
 label$5277:;
 TMP$2693$1 = B$1;
 label$5278:;
 fb$result$1 = (double)TMP$2693$1;
 goto label$5276;
 label$5276:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_MINEss( struct $12SYSTEM_BUS_T* THIS$1, int16 A$1, int16 B$1 )
{
 int16 TMP$2694$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5279:;
 if( (int64)A$1 >= (int64)B$1 ) goto label$5281;
 TMP$2694$1 = A$1;
 goto label$5282;
 label$5281:;
 TMP$2694$1 = B$1;
 label$5282:;
 fb$result$1 = (double)TMP$2694$1;
 goto label$5280;
 label$5280:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_MINEjj( struct $12SYSTEM_BUS_T* THIS$1, uint32 A$1, uint32 B$1 )
{
 uint32 TMP$2695$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5283:;
 if( (int64)A$1 >= (int64)B$1 ) goto label$5285;
 TMP$2695$1 = A$1;
 goto label$5286;
 label$5285:;
 TMP$2695$1 = B$1;
 label$5286:;
 fb$result$1 = (double)TMP$2695$1;
 goto label$5284;
 label$5284:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_MINEii( struct $12SYSTEM_BUS_T* THIS$1, int32 A$1, int32 B$1 )
{
 int32 TMP$2696$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5287:;
 if( (int64)A$1 >= (int64)B$1 ) goto label$5289;
 TMP$2696$1 = A$1;
 goto label$5290;
 label$5289:;
 TMP$2696$1 = B$1;
 label$5290:;
 fb$result$1 = (double)TMP$2696$1;
 goto label$5288;
 label$5288:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_MINEyy( struct $12SYSTEM_BUS_T* THIS$1, uint64 A$1, uint64 B$1 )
{
 uint64 TMP$2697$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5291:;
 if( A$1 >= B$1 ) goto label$5293;
 TMP$2697$1 = A$1;
 goto label$5294;
 label$5293:;
 TMP$2697$1 = B$1;
 label$5294:;
 fb$result$1 = (double)TMP$2697$1;
 goto label$5292;
 label$5292:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_MINExx( struct $12SYSTEM_BUS_T* THIS$1, int64 A$1, int64 B$1 )
{
 int64 TMP$2698$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5295:;
 if( A$1 >= B$1 ) goto label$5297;
 TMP$2698$1 = A$1;
 goto label$5298;
 label$5297:;
 TMP$2698$1 = B$1;
 label$5298:;
 fb$result$1 = (double)TMP$2698$1;
 goto label$5296;
 label$5296:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_MINEff( struct $12SYSTEM_BUS_T* THIS$1, float A$1, float B$1 )
{
 float TMP$2699$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5299:;
 if( A$1 >= B$1 ) goto label$5301;
 TMP$2699$1 = A$1;
 goto label$5302;
 label$5301:;
 TMP$2699$1 = B$1;
 label$5302:;
 fb$result$1 = (double)TMP$2699$1;
 goto label$5300;
 label$5300:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_MINEdd( struct $12SYSTEM_BUS_T* THIS$1, double A$1, double B$1 )
{
 double TMP$2700$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5303:;
 if( A$1 >= B$1 ) goto label$5305;
 TMP$2700$1 = A$1;
 goto label$5306;
 label$5305:;
 TMP$2700$1 = B$1;
 label$5306:;
 fb$result$1 = TMP$2700$1;
 goto label$5304;
 label$5304:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_MINER9_FLOAT128S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* A$1, struct $9_FLOAT128* B$1 )
{
 struct $9_FLOAT128 TMP$2701$1;
 double TMP$2702$1;
 double TMP$2703$1;
 double TMP$2704$1;
 double TMP$2705$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5307:;
 if( *(double*)((uint8*)A$1 + 8ll) >= *(double*)((uint8*)B$1 + 8ll) ) goto label$5312;
 TMP$2705$1 = *(double*)((uint8*)A$1 + 8ll);
 goto label$5313;
 label$5312:;
 TMP$2705$1 = *(double*)((uint8*)B$1 + 8ll);
 label$5313:;
 if( *(double*)A$1 >= *(double*)B$1 ) goto label$5311;
 TMP$2704$1 = *(double*)A$1;
 goto label$5314;
 label$5311:;
 TMP$2704$1 = *(double*)B$1;
 label$5314:;
 if( *(double*)((uint8*)A$1 + 8ll) >= *(double*)((uint8*)B$1 + 8ll) ) goto label$5310;
 TMP$2703$1 = *(double*)((uint8*)A$1 + 8ll);
 goto label$5315;
 label$5310:;
 TMP$2703$1 = *(double*)((uint8*)B$1 + 8ll);
 label$5315:;
 if( *(double*)A$1 >= *(double*)B$1 ) goto label$5309;
 TMP$2702$1 = *(double*)A$1;
 goto label$5316;
 label$5309:;
 TMP$2702$1 = *(double*)B$1;
 label$5316:;
 _ZN9_FLOAT128C1Edddd( &TMP$2701$1, TMP$2702$1, TMP$2703$1, TMP$2704$1, TMP$2705$1 );
 uint64 vr$19 = _ZN9_FLOAT128cvyEv( &TMP$2701$1 );
 fb$result$1 = (double)vr$19;
 goto label$5308;
 label$5308:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_MINER9_FLOAT256S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* A$1, struct $9_FLOAT256* B$1 )
{
 struct $9_FLOAT256 TMP$2706$1;
 double TMP$2707$1;
 double TMP$2708$1;
 double TMP$2709$1;
 double TMP$2710$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5317:;
 if( *(double*)A$1 >= *(double*)B$1 ) goto label$5322;
 TMP$2710$1 = *(double*)A$1;
 goto label$5323;
 label$5322:;
 TMP$2710$1 = *(double*)B$1;
 label$5323:;
 if( *(double*)A$1 >= *(double*)B$1 ) goto label$5321;
 TMP$2709$1 = *(double*)A$1;
 goto label$5324;
 label$5321:;
 TMP$2709$1 = *(double*)B$1;
 label$5324:;
 if( *(double*)A$1 >= *(double*)B$1 ) goto label$5320;
 TMP$2708$1 = *(double*)A$1;
 goto label$5325;
 label$5320:;
 TMP$2708$1 = *(double*)B$1;
 label$5325:;
 if( *(double*)A$1 >= *(double*)B$1 ) goto label$5319;
 TMP$2707$1 = *(double*)A$1;
 goto label$5326;
 label$5319:;
 TMP$2707$1 = *(double*)B$1;
 label$5326:;
 _ZN9_FLOAT256C1Edddd( &TMP$2706$1, TMP$2707$1, TMP$2708$1, TMP$2709$1, TMP$2710$1 );
 uint64 vr$19 = _ZN9_FLOAT256cvyEv( &TMP$2706$1 );
 fb$result$1 = (double)vr$19;
 goto label$5318;
 label$5318:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_MINER9_FLOAT512S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* A$1, struct $9_FLOAT512* B$1 )
{
 struct $9_FLOAT512 TMP$2711$1;
 double TMP$2712$1;
 double TMP$2713$1;
 double TMP$2714$1;
 double TMP$2715$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5327:;
 if( *(double*)A$1 >= *(double*)B$1 ) goto label$5332;
 TMP$2715$1 = *(double*)A$1;
 goto label$5333;
 label$5332:;
 TMP$2715$1 = *(double*)B$1;
 label$5333:;
 if( *(double*)A$1 >= *(double*)B$1 ) goto label$5331;
 TMP$2714$1 = *(double*)A$1;
 goto label$5334;
 label$5331:;
 TMP$2714$1 = *(double*)B$1;
 label$5334:;
 if( *(double*)A$1 >= *(double*)B$1 ) goto label$5330;
 TMP$2713$1 = *(double*)A$1;
 goto label$5335;
 label$5330:;
 TMP$2713$1 = *(double*)B$1;
 label$5335:;
 if( *(double*)A$1 >= *(double*)B$1 ) goto label$5329;
 TMP$2712$1 = *(double*)A$1;
 goto label$5336;
 label$5329:;
 TMP$2712$1 = *(double*)B$1;
 label$5336:;
 _ZN9_FLOAT512C1Edddd( &TMP$2711$1, TMP$2712$1, TMP$2713$1, TMP$2714$1, TMP$2715$1 );
 uint64 vr$19 = _ZN9_FLOAT512cvyEv( &TMP$2711$1 );
 fb$result$1 = (double)vr$19;
 goto label$5328;
 label$5328:;
 return fb$result$1;
}

struct $7VECTOR2* _ZN12SYSTEM_BUS_T5K_MINER7VECTOR2S1_( struct $7VECTOR2* tmp$2716$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR2* A$1, struct $7VECTOR2* B$1 )
{
 double TMP$2718$1;
 double TMP$2719$1;
 label$5337:;
 if( *(double*)((uint8*)A$1 + 8ll) >= *(double*)((uint8*)B$1 + 8ll) ) goto label$5340;
 TMP$2719$1 = *(double*)((uint8*)A$1 + 8ll);
 goto label$5341;
 label$5340:;
 TMP$2719$1 = *(double*)((uint8*)B$1 + 8ll);
 label$5341:;
 if( *(double*)A$1 >= *(double*)B$1 ) goto label$5339;
 TMP$2718$1 = *(double*)A$1;
 goto label$5342;
 label$5339:;
 TMP$2718$1 = *(double*)B$1;
 label$5342:;
 _ZN7VECTOR2C1Edd( tmp$2716$1, TMP$2718$1, TMP$2719$1 );
 goto label$5338;
 label$5338:;
 return tmp$2716$1;
}

struct $7VECTOR3* _ZN12SYSTEM_BUS_T5K_MINER7VECTOR3S1_( struct $7VECTOR3* tmp$2720$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* A$1, struct $7VECTOR3* B$1 )
{
 double TMP$2722$1;
 double TMP$2723$1;
 double TMP$2724$1;
 label$5343:;
 if( *(double*)((uint8*)A$1 + 32ll) >= *(double*)((uint8*)B$1 + 32ll) ) goto label$5347;
 TMP$2724$1 = *(double*)((uint8*)A$1 + 32ll);
 goto label$5348;
 label$5347:;
 TMP$2724$1 = *(double*)((uint8*)B$1 + 32ll);
 label$5348:;
 if( *(double*)((uint8*)A$1 + 24ll) >= *(double*)((uint8*)B$1 + 24ll) ) goto label$5346;
 TMP$2723$1 = *(double*)((uint8*)A$1 + 24ll);
 goto label$5349;
 label$5346:;
 TMP$2723$1 = *(double*)((uint8*)B$1 + 24ll);
 label$5349:;
 if( *(double*)((uint8*)A$1 + 16ll) >= *(double*)((uint8*)B$1 + 16ll) ) goto label$5345;
 TMP$2722$1 = *(double*)((uint8*)A$1 + 16ll);
 goto label$5350;
 label$5345:;
 TMP$2722$1 = *(double*)((uint8*)B$1 + 16ll);
 label$5350:;
 _ZN7VECTOR3C1Eddd( tmp$2720$1, TMP$2722$1, TMP$2723$1, TMP$2724$1 );
 goto label$5344;
 label$5344:;
 return tmp$2720$1;
}

struct $7VECTOR4* _ZN12SYSTEM_BUS_T5K_MINER7VECTOR4S1_( struct $7VECTOR4* tmp$2725$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR4* A$1, struct $7VECTOR4* B$1 )
{
 double TMP$2727$1;
 double TMP$2728$1;
 double TMP$2729$1;
 double TMP$2730$1;
 label$5351:;
 if( *(double*)((uint8*)A$1 + 64ll) >= *(double*)((uint8*)B$1 + 64ll) ) goto label$5356;
 TMP$2730$1 = *(double*)((uint8*)A$1 + 64ll);
 goto label$5357;
 label$5356:;
 TMP$2730$1 = *(double*)((uint8*)B$1 + 64ll);
 label$5357:;
 if( *(double*)((uint8*)A$1 + 56ll) >= *(double*)((uint8*)B$1 + 56ll) ) goto label$5355;
 TMP$2729$1 = *(double*)((uint8*)A$1 + 56ll);
 goto label$5358;
 label$5355:;
 TMP$2729$1 = *(double*)((uint8*)B$1 + 56ll);
 label$5358:;
 if( *(double*)((uint8*)A$1 + 48ll) >= *(double*)((uint8*)B$1 + 48ll) ) goto label$5354;
 TMP$2728$1 = *(double*)((uint8*)A$1 + 48ll);
 goto label$5359;
 label$5354:;
 TMP$2728$1 = *(double*)((uint8*)B$1 + 48ll);
 label$5359:;
 if( *(double*)((uint8*)A$1 + 40ll) >= *(double*)((uint8*)B$1 + 40ll) ) goto label$5353;
 TMP$2727$1 = *(double*)((uint8*)A$1 + 40ll);
 goto label$5360;
 label$5353:;
 TMP$2727$1 = *(double*)((uint8*)B$1 + 40ll);
 label$5360:;
 _ZN7VECTOR4C1Edddd( tmp$2725$1, TMP$2727$1, TMP$2728$1, TMP$2729$1, TMP$2730$1 );
 goto label$5352;
 label$5352:;
 return tmp$2725$1;
}

struct $7VECTOR2* _ZN12SYSTEM_BUS_T5K_MINER7VECTOR2Rd( struct $7VECTOR2* tmp$2731$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR2* A$1, double* B$1 )
{
 double TMP$2733$1;
 double TMP$2734$1;
 label$5361:;
 if( *(double*)((uint8*)A$1 + 8ll) >= *B$1 ) goto label$5364;
 TMP$2734$1 = *(double*)((uint8*)A$1 + 8ll);
 goto label$5365;
 label$5364:;
 TMP$2734$1 = *B$1;
 label$5365:;
 if( *(double*)A$1 >= *B$1 ) goto label$5363;
 TMP$2733$1 = *(double*)A$1;
 goto label$5366;
 label$5363:;
 TMP$2733$1 = *B$1;
 label$5366:;
 _ZN7VECTOR2C1Edd( tmp$2731$1, TMP$2733$1, TMP$2734$1 );
 goto label$5362;
 label$5362:;
 return tmp$2731$1;
}

struct $7VECTOR3* _ZN12SYSTEM_BUS_T5K_MINER7VECTOR3Rd( struct $7VECTOR3* tmp$2735$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* A$1, double* B$1 )
{
 double TMP$2737$1;
 double TMP$2738$1;
 double TMP$2739$1;
 label$5367:;
 if( *(double*)((uint8*)A$1 + 32ll) >= *B$1 ) goto label$5371;
 TMP$2739$1 = *(double*)((uint8*)A$1 + 32ll);
 goto label$5372;
 label$5371:;
 TMP$2739$1 = *B$1;
 label$5372:;
 if( *(double*)((uint8*)A$1 + 24ll) >= *B$1 ) goto label$5370;
 TMP$2738$1 = *(double*)((uint8*)A$1 + 24ll);
 goto label$5373;
 label$5370:;
 TMP$2738$1 = *B$1;
 label$5373:;
 if( *(double*)((uint8*)A$1 + 16ll) >= *B$1 ) goto label$5369;
 TMP$2737$1 = *(double*)((uint8*)A$1 + 16ll);
 goto label$5374;
 label$5369:;
 TMP$2737$1 = *B$1;
 label$5374:;
 _ZN7VECTOR3C1Eddd( tmp$2735$1, TMP$2737$1, TMP$2738$1, TMP$2739$1 );
 goto label$5368;
 label$5368:;
 return tmp$2735$1;
}

struct $7VECTOR4* _ZN12SYSTEM_BUS_T5K_MINER7VECTOR4Rd( struct $7VECTOR4* tmp$2740$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR4* A$1, double* B$1 )
{
 double TMP$2742$1;
 double TMP$2743$1;
 double TMP$2744$1;
 double TMP$2745$1;
 label$5375:;
 if( *(double*)((uint8*)A$1 + 64ll) >= *B$1 ) goto label$5380;
 TMP$2745$1 = *(double*)((uint8*)A$1 + 64ll);
 goto label$5381;
 label$5380:;
 TMP$2745$1 = *B$1;
 label$5381:;
 if( *(double*)((uint8*)A$1 + 56ll) >= *B$1 ) goto label$5379;
 TMP$2744$1 = *(double*)((uint8*)A$1 + 56ll);
 goto label$5382;
 label$5379:;
 TMP$2744$1 = *B$1;
 label$5382:;
 if( *(double*)((uint8*)A$1 + 48ll) >= *B$1 ) goto label$5378;
 TMP$2743$1 = *(double*)((uint8*)A$1 + 48ll);
 goto label$5383;
 label$5378:;
 TMP$2743$1 = *B$1;
 label$5383:;
 if( *(double*)((uint8*)A$1 + 40ll) >= *B$1 ) goto label$5377;
 TMP$2742$1 = *(double*)((uint8*)A$1 + 40ll);
 goto label$5384;
 label$5377:;
 TMP$2742$1 = *B$1;
 label$5384:;
 _ZN7VECTOR4C1Edddd( tmp$2740$1, TMP$2742$1, TMP$2743$1, TMP$2744$1, TMP$2745$1 );
 goto label$5376;
 label$5376:;
 return tmp$2740$1;
}

double _ZN12SYSTEM_BUS_T5K_MAXEhh( struct $12SYSTEM_BUS_T* THIS$1, uint8 A$1, uint8 B$1 )
{
 uint8 TMP$2746$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5385:;
 if( (int64)A$1 >= (int64)B$1 ) goto label$5387;
 TMP$2746$1 = A$1;
 goto label$5388;
 label$5387:;
 TMP$2746$1 = B$1;
 label$5388:;
 fb$result$1 = (double)TMP$2746$1;
 goto label$5386;
 label$5386:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_MAXEaa( struct $12SYSTEM_BUS_T* THIS$1, int8 A$1, int8 B$1 )
{
 int8 TMP$2747$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5389:;
 if( (int64)A$1 >= (int64)B$1 ) goto label$5391;
 TMP$2747$1 = A$1;
 goto label$5392;
 label$5391:;
 TMP$2747$1 = B$1;
 label$5392:;
 fb$result$1 = (double)TMP$2747$1;
 goto label$5390;
 label$5390:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_MAXEtt( struct $12SYSTEM_BUS_T* THIS$1, uint16 A$1, uint16 B$1 )
{
 uint16 TMP$2748$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5393:;
 if( (int64)A$1 >= (int64)B$1 ) goto label$5395;
 TMP$2748$1 = A$1;
 goto label$5396;
 label$5395:;
 TMP$2748$1 = B$1;
 label$5396:;
 fb$result$1 = (double)TMP$2748$1;
 goto label$5394;
 label$5394:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_MAXEss( struct $12SYSTEM_BUS_T* THIS$1, int16 A$1, int16 B$1 )
{
 int16 TMP$2749$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5397:;
 if( (int64)A$1 >= (int64)B$1 ) goto label$5399;
 TMP$2749$1 = A$1;
 goto label$5400;
 label$5399:;
 TMP$2749$1 = B$1;
 label$5400:;
 fb$result$1 = (double)TMP$2749$1;
 goto label$5398;
 label$5398:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_MAXEjj( struct $12SYSTEM_BUS_T* THIS$1, uint32 A$1, uint32 B$1 )
{
 uint32 TMP$2750$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5401:;
 if( (int64)A$1 >= (int64)B$1 ) goto label$5403;
 TMP$2750$1 = A$1;
 goto label$5404;
 label$5403:;
 TMP$2750$1 = B$1;
 label$5404:;
 fb$result$1 = (double)TMP$2750$1;
 goto label$5402;
 label$5402:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_MAXEii( struct $12SYSTEM_BUS_T* THIS$1, int32 A$1, int32 B$1 )
{
 int32 TMP$2751$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5405:;
 if( (int64)A$1 >= (int64)B$1 ) goto label$5407;
 TMP$2751$1 = A$1;
 goto label$5408;
 label$5407:;
 TMP$2751$1 = B$1;
 label$5408:;
 fb$result$1 = (double)TMP$2751$1;
 goto label$5406;
 label$5406:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_MAXEyy( struct $12SYSTEM_BUS_T* THIS$1, uint64 A$1, uint64 B$1 )
{
 uint64 TMP$2752$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5409:;
 if( A$1 >= B$1 ) goto label$5411;
 TMP$2752$1 = A$1;
 goto label$5412;
 label$5411:;
 TMP$2752$1 = B$1;
 label$5412:;
 fb$result$1 = (double)TMP$2752$1;
 goto label$5410;
 label$5410:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_MAXExx( struct $12SYSTEM_BUS_T* THIS$1, int64 A$1, int64 B$1 )
{
 int64 TMP$2753$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5413:;
 if( A$1 >= B$1 ) goto label$5415;
 TMP$2753$1 = A$1;
 goto label$5416;
 label$5415:;
 TMP$2753$1 = B$1;
 label$5416:;
 fb$result$1 = (double)TMP$2753$1;
 goto label$5414;
 label$5414:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_MAXEff( struct $12SYSTEM_BUS_T* THIS$1, float A$1, float B$1 )
{
 float TMP$2754$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5417:;
 if( A$1 >= B$1 ) goto label$5419;
 TMP$2754$1 = A$1;
 goto label$5420;
 label$5419:;
 TMP$2754$1 = B$1;
 label$5420:;
 fb$result$1 = (double)TMP$2754$1;
 goto label$5418;
 label$5418:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_MAXEdd( struct $12SYSTEM_BUS_T* THIS$1, double A$1, double B$1 )
{
 double TMP$2755$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5421:;
 if( A$1 <= B$1 ) goto label$5423;
 TMP$2755$1 = A$1;
 goto label$5424;
 label$5423:;
 TMP$2755$1 = B$1;
 label$5424:;
 fb$result$1 = TMP$2755$1;
 goto label$5422;
 label$5422:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_MAXER9_FLOAT128S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* A$1, struct $9_FLOAT128* B$1 )
{
 struct $9_FLOAT128 TMP$2756$1;
 double TMP$2757$1;
 double TMP$2758$1;
 double TMP$2759$1;
 double TMP$2760$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5425:;
 if( *(double*)((uint8*)A$1 + 8ll) >= *(double*)((uint8*)B$1 + 8ll) ) goto label$5430;
 TMP$2760$1 = *(double*)((uint8*)A$1 + 8ll);
 goto label$5431;
 label$5430:;
 TMP$2760$1 = *(double*)((uint8*)B$1 + 8ll);
 label$5431:;
 if( *(double*)A$1 >= *(double*)B$1 ) goto label$5429;
 TMP$2759$1 = *(double*)A$1;
 goto label$5432;
 label$5429:;
 TMP$2759$1 = *(double*)B$1;
 label$5432:;
 if( *(double*)((uint8*)A$1 + 8ll) >= *(double*)((uint8*)B$1 + 8ll) ) goto label$5428;
 TMP$2758$1 = *(double*)((uint8*)A$1 + 8ll);
 goto label$5433;
 label$5428:;
 TMP$2758$1 = *(double*)((uint8*)B$1 + 8ll);
 label$5433:;
 if( *(double*)A$1 >= *(double*)B$1 ) goto label$5427;
 TMP$2757$1 = *(double*)A$1;
 goto label$5434;
 label$5427:;
 TMP$2757$1 = *(double*)B$1;
 label$5434:;
 _ZN9_FLOAT128C1Edddd( &TMP$2756$1, TMP$2757$1, TMP$2758$1, TMP$2759$1, TMP$2760$1 );
 uint64 vr$19 = _ZN9_FLOAT128cvyEv( &TMP$2756$1 );
 fb$result$1 = (double)vr$19;
 goto label$5426;
 label$5426:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_MAXER9_FLOAT256S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* A$1, struct $9_FLOAT256* B$1 )
{
 struct $9_FLOAT256 TMP$2761$1;
 double TMP$2762$1;
 double TMP$2763$1;
 double TMP$2764$1;
 double TMP$2765$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5435:;
 if( *(double*)A$1 >= *(double*)B$1 ) goto label$5440;
 TMP$2765$1 = *(double*)A$1;
 goto label$5441;
 label$5440:;
 TMP$2765$1 = *(double*)B$1;
 label$5441:;
 if( *(double*)A$1 >= *(double*)B$1 ) goto label$5439;
 TMP$2764$1 = *(double*)A$1;
 goto label$5442;
 label$5439:;
 TMP$2764$1 = *(double*)B$1;
 label$5442:;
 if( *(double*)A$1 >= *(double*)B$1 ) goto label$5438;
 TMP$2763$1 = *(double*)A$1;
 goto label$5443;
 label$5438:;
 TMP$2763$1 = *(double*)B$1;
 label$5443:;
 if( *(double*)A$1 >= *(double*)B$1 ) goto label$5437;
 TMP$2762$1 = *(double*)A$1;
 goto label$5444;
 label$5437:;
 TMP$2762$1 = *(double*)B$1;
 label$5444:;
 _ZN9_FLOAT256C1Edddd( &TMP$2761$1, TMP$2762$1, TMP$2763$1, TMP$2764$1, TMP$2765$1 );
 uint64 vr$19 = _ZN9_FLOAT256cvyEv( &TMP$2761$1 );
 fb$result$1 = (double)vr$19;
 goto label$5436;
 label$5436:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_MAXER9_FLOAT512S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* A$1, struct $9_FLOAT512* B$1 )
{
 struct $9_FLOAT512 TMP$2766$1;
 double TMP$2767$1;
 double TMP$2768$1;
 double TMP$2769$1;
 double TMP$2770$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5445:;
 if( *(double*)A$1 >= *(double*)B$1 ) goto label$5450;
 TMP$2770$1 = *(double*)A$1;
 goto label$5451;
 label$5450:;
 TMP$2770$1 = *(double*)B$1;
 label$5451:;
 if( *(double*)A$1 >= *(double*)B$1 ) goto label$5449;
 TMP$2769$1 = *(double*)A$1;
 goto label$5452;
 label$5449:;
 TMP$2769$1 = *(double*)B$1;
 label$5452:;
 if( *(double*)A$1 >= *(double*)B$1 ) goto label$5448;
 TMP$2768$1 = *(double*)A$1;
 goto label$5453;
 label$5448:;
 TMP$2768$1 = *(double*)B$1;
 label$5453:;
 if( *(double*)A$1 >= *(double*)B$1 ) goto label$5447;
 TMP$2767$1 = *(double*)A$1;
 goto label$5454;
 label$5447:;
 TMP$2767$1 = *(double*)B$1;
 label$5454:;
 _ZN9_FLOAT512C1Edddd( &TMP$2766$1, TMP$2767$1, TMP$2768$1, TMP$2769$1, TMP$2770$1 );
 uint64 vr$19 = _ZN9_FLOAT512cvyEv( &TMP$2766$1 );
 fb$result$1 = (double)vr$19;
 goto label$5446;
 label$5446:;
 return fb$result$1;
}

struct $7VECTOR2* _ZN12SYSTEM_BUS_T5K_MAXER7VECTOR2S1_( struct $7VECTOR2* tmp$2771$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR2* A$1, struct $7VECTOR2* B$1 )
{
 double TMP$2773$1;
 double TMP$2774$1;
 label$5455:;
 if( *(double*)((uint8*)A$1 + 8ll) <= *(double*)((uint8*)B$1 + 8ll) ) goto label$5458;
 TMP$2774$1 = *(double*)((uint8*)A$1 + 8ll);
 goto label$5459;
 label$5458:;
 TMP$2774$1 = *(double*)((uint8*)B$1 + 8ll);
 label$5459:;
 if( *(double*)A$1 <= *(double*)B$1 ) goto label$5457;
 TMP$2773$1 = *(double*)A$1;
 goto label$5460;
 label$5457:;
 TMP$2773$1 = *(double*)B$1;
 label$5460:;
 _ZN7VECTOR2C1Edd( tmp$2771$1, TMP$2773$1, TMP$2774$1 );
 goto label$5456;
 label$5456:;
 return tmp$2771$1;
}

struct $7VECTOR3* _ZN12SYSTEM_BUS_T5K_MAXER7VECTOR3S1_( struct $7VECTOR3* tmp$2775$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* A$1, struct $7VECTOR3* B$1 )
{
 double TMP$2777$1;
 double TMP$2778$1;
 double TMP$2779$1;
 label$5461:;
 if( *(double*)((uint8*)A$1 + 32ll) <= *(double*)((uint8*)B$1 + 32ll) ) goto label$5465;
 TMP$2779$1 = *(double*)((uint8*)A$1 + 32ll);
 goto label$5466;
 label$5465:;
 TMP$2779$1 = *(double*)((uint8*)B$1 + 32ll);
 label$5466:;
 if( *(double*)((uint8*)A$1 + 24ll) <= *(double*)((uint8*)B$1 + 24ll) ) goto label$5464;
 TMP$2778$1 = *(double*)((uint8*)A$1 + 24ll);
 goto label$5467;
 label$5464:;
 TMP$2778$1 = *(double*)((uint8*)B$1 + 24ll);
 label$5467:;
 if( *(double*)((uint8*)A$1 + 16ll) <= *(double*)((uint8*)B$1 + 16ll) ) goto label$5463;
 TMP$2777$1 = *(double*)((uint8*)A$1 + 16ll);
 goto label$5468;
 label$5463:;
 TMP$2777$1 = *(double*)((uint8*)B$1 + 16ll);
 label$5468:;
 _ZN7VECTOR3C1Eddd( tmp$2775$1, TMP$2777$1, TMP$2778$1, TMP$2779$1 );
 goto label$5462;
 label$5462:;
 return tmp$2775$1;
}

struct $7VECTOR4* _ZN12SYSTEM_BUS_T5K_MAXER7VECTOR4S1_( struct $7VECTOR4* tmp$2780$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR4* A$1, struct $7VECTOR4* B$1 )
{
 double TMP$2782$1;
 double TMP$2783$1;
 double TMP$2784$1;
 double TMP$2785$1;
 label$5469:;
 if( *(double*)((uint8*)A$1 + 64ll) <= *(double*)((uint8*)B$1 + 64ll) ) goto label$5474;
 TMP$2785$1 = *(double*)((uint8*)A$1 + 64ll);
 goto label$5475;
 label$5474:;
 TMP$2785$1 = *(double*)((uint8*)B$1 + 64ll);
 label$5475:;
 if( *(double*)((uint8*)A$1 + 56ll) <= *(double*)((uint8*)B$1 + 56ll) ) goto label$5473;
 TMP$2784$1 = *(double*)((uint8*)A$1 + 56ll);
 goto label$5476;
 label$5473:;
 TMP$2784$1 = *(double*)((uint8*)B$1 + 56ll);
 label$5476:;
 if( *(double*)((uint8*)A$1 + 48ll) <= *(double*)((uint8*)B$1 + 48ll) ) goto label$5472;
 TMP$2783$1 = *(double*)((uint8*)A$1 + 48ll);
 goto label$5477;
 label$5472:;
 TMP$2783$1 = *(double*)((uint8*)B$1 + 48ll);
 label$5477:;
 if( *(double*)((uint8*)A$1 + 40ll) <= *(double*)((uint8*)B$1 + 40ll) ) goto label$5471;
 TMP$2782$1 = *(double*)((uint8*)A$1 + 40ll);
 goto label$5478;
 label$5471:;
 TMP$2782$1 = *(double*)((uint8*)B$1 + 40ll);
 label$5478:;
 _ZN7VECTOR4C1Edddd( tmp$2780$1, TMP$2782$1, TMP$2783$1, TMP$2784$1, TMP$2785$1 );
 goto label$5470;
 label$5470:;
 return tmp$2780$1;
}

struct $7VECTOR2* _ZN12SYSTEM_BUS_T5K_MAXER7VECTOR2Rd( struct $7VECTOR2* tmp$2786$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR2* A$1, double* B$1 )
{
 double TMP$2788$1;
 double TMP$2789$1;
 label$5479:;
 if( *(double*)((uint8*)A$1 + 8ll) <= *B$1 ) goto label$5482;
 TMP$2789$1 = *(double*)((uint8*)A$1 + 8ll);
 goto label$5483;
 label$5482:;
 TMP$2789$1 = *B$1;
 label$5483:;
 if( *(double*)A$1 <= *B$1 ) goto label$5481;
 TMP$2788$1 = *(double*)A$1;
 goto label$5484;
 label$5481:;
 TMP$2788$1 = *B$1;
 label$5484:;
 _ZN7VECTOR2C1Edd( tmp$2786$1, TMP$2788$1, TMP$2789$1 );
 goto label$5480;
 label$5480:;
 return tmp$2786$1;
}

struct $7VECTOR3* _ZN12SYSTEM_BUS_T5K_MAXER7VECTOR3Rd( struct $7VECTOR3* tmp$2790$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* A$1, double* B$1 )
{
 double TMP$2792$1;
 double TMP$2793$1;
 double TMP$2794$1;
 label$5485:;
 if( *(double*)((uint8*)A$1 + 32ll) <= *B$1 ) goto label$5489;
 TMP$2794$1 = *(double*)((uint8*)A$1 + 32ll);
 goto label$5490;
 label$5489:;
 TMP$2794$1 = *B$1;
 label$5490:;
 if( *(double*)((uint8*)A$1 + 24ll) <= *B$1 ) goto label$5488;
 TMP$2793$1 = *(double*)((uint8*)A$1 + 24ll);
 goto label$5491;
 label$5488:;
 TMP$2793$1 = *B$1;
 label$5491:;
 if( *(double*)((uint8*)A$1 + 16ll) <= *B$1 ) goto label$5487;
 TMP$2792$1 = *(double*)((uint8*)A$1 + 16ll);
 goto label$5492;
 label$5487:;
 TMP$2792$1 = *B$1;
 label$5492:;
 _ZN7VECTOR3C1Eddd( tmp$2790$1, TMP$2792$1, TMP$2793$1, TMP$2794$1 );
 goto label$5486;
 label$5486:;
 return tmp$2790$1;
}

struct $7VECTOR4* _ZN12SYSTEM_BUS_T5K_MAXER7VECTOR4Rd( struct $7VECTOR4* tmp$2795$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR4* A$1, double* B$1 )
{
 double TMP$2797$1;
 double TMP$2798$1;
 double TMP$2799$1;
 double TMP$2800$1;
 label$5493:;
 if( *(double*)((uint8*)A$1 + 64ll) <= *B$1 ) goto label$5498;
 TMP$2800$1 = *(double*)((uint8*)A$1 + 64ll);
 goto label$5499;
 label$5498:;
 TMP$2800$1 = *B$1;
 label$5499:;
 if( *(double*)((uint8*)A$1 + 56ll) <= *B$1 ) goto label$5497;
 TMP$2799$1 = *(double*)((uint8*)A$1 + 56ll);
 goto label$5500;
 label$5497:;
 TMP$2799$1 = *B$1;
 label$5500:;
 if( *(double*)((uint8*)A$1 + 48ll) <= *B$1 ) goto label$5496;
 TMP$2798$1 = *(double*)((uint8*)A$1 + 48ll);
 goto label$5501;
 label$5496:;
 TMP$2798$1 = *B$1;
 label$5501:;
 if( *(double*)((uint8*)A$1 + 40ll) <= *B$1 ) goto label$5495;
 TMP$2797$1 = *(double*)((uint8*)A$1 + 40ll);
 goto label$5502;
 label$5495:;
 TMP$2797$1 = *B$1;
 label$5502:;
 _ZN7VECTOR4C1Edddd( tmp$2795$1, TMP$2797$1, TMP$2798$1, TMP$2799$1, TMP$2800$1 );
 goto label$5494;
 label$5494:;
 return tmp$2795$1;
}

double _ZN12SYSTEM_BUS_T16K_PASCALTRIANGLEEhh( struct $12SYSTEM_BUS_T* THIS$1, uint8 A$1, uint8 B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5503:;
 double RESULT$1;
 RESULT$1 = 0x1.p+0;
 double I$1;
 __builtin_memset( &I$1, 0, 8ll );
 {
  I$1 = 0x0p+0;
  double TMP$2801$2;
  TMP$2801$2 = (double)B$1;
  goto label$5505;
  label$5508:;
  {
   RESULT$1 = RESULT$1 * (((double)(int64)A$1 - I$1) / (I$1 + 0x1.p+0));
  }
  label$5506:;
  I$1 = I$1 + 0x1.p+0;
  label$5505:;
  if( I$1 <= TMP$2801$2 ) goto label$5508;
  label$5507:;
 }
 fb$result$1 = RESULT$1;
 goto label$5504;
 label$5504:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T16K_PASCALTRIANGLEEaa( struct $12SYSTEM_BUS_T* THIS$1, int8 A$1, int8 B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5509:;
 double RESULT$1;
 RESULT$1 = 0x1.p+0;
 double I$1;
 __builtin_memset( &I$1, 0, 8ll );
 {
  I$1 = 0x0p+0;
  double TMP$2802$2;
  TMP$2802$2 = (double)B$1;
  goto label$5511;
  label$5514:;
  {
   RESULT$1 = RESULT$1 * (((double)(int64)A$1 - I$1) / (I$1 + 0x1.p+0));
  }
  label$5512:;
  I$1 = I$1 + 0x1.p+0;
  label$5511:;
  if( I$1 <= TMP$2802$2 ) goto label$5514;
  label$5513:;
 }
 fb$result$1 = RESULT$1;
 goto label$5510;
 label$5510:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T16K_PASCALTRIANGLEEtt( struct $12SYSTEM_BUS_T* THIS$1, uint16 A$1, uint16 B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5515:;
 double RESULT$1;
 RESULT$1 = 0x1.p+0;
 double I$1;
 __builtin_memset( &I$1, 0, 8ll );
 {
  I$1 = 0x0p+0;
  double TMP$2803$2;
  TMP$2803$2 = (double)B$1;
  goto label$5517;
  label$5520:;
  {
   RESULT$1 = RESULT$1 * (((double)(int64)A$1 - I$1) / (I$1 + 0x1.p+0));
  }
  label$5518:;
  I$1 = I$1 + 0x1.p+0;
  label$5517:;
  if( I$1 <= TMP$2803$2 ) goto label$5520;
  label$5519:;
 }
 fb$result$1 = RESULT$1;
 goto label$5516;
 label$5516:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T16K_PASCALTRIANGLEEss( struct $12SYSTEM_BUS_T* THIS$1, int16 A$1, int16 B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5521:;
 double RESULT$1;
 RESULT$1 = 0x1.p+0;
 double I$1;
 __builtin_memset( &I$1, 0, 8ll );
 {
  I$1 = 0x0p+0;
  double TMP$2804$2;
  TMP$2804$2 = (double)B$1;
  goto label$5523;
  label$5526:;
  {
   RESULT$1 = RESULT$1 * (((double)(int64)A$1 - I$1) / (I$1 + 0x1.p+0));
  }
  label$5524:;
  I$1 = I$1 + 0x1.p+0;
  label$5523:;
  if( I$1 <= TMP$2804$2 ) goto label$5526;
  label$5525:;
 }
 fb$result$1 = RESULT$1;
 goto label$5522;
 label$5522:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T16K_PASCALTRIANGLEEjj( struct $12SYSTEM_BUS_T* THIS$1, uint32 A$1, uint32 B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5527:;
 double RESULT$1;
 RESULT$1 = 0x1.p+0;
 double I$1;
 __builtin_memset( &I$1, 0, 8ll );
 {
  I$1 = 0x0p+0;
  double TMP$2805$2;
  TMP$2805$2 = (double)B$1;
  goto label$5529;
  label$5532:;
  {
   RESULT$1 = RESULT$1 * (((double)(int64)A$1 - I$1) / (I$1 + 0x1.p+0));
  }
  label$5530:;
  I$1 = I$1 + 0x1.p+0;
  label$5529:;
  if( I$1 <= TMP$2805$2 ) goto label$5532;
  label$5531:;
 }
 fb$result$1 = RESULT$1;
 goto label$5528;
 label$5528:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T16K_PASCALTRIANGLEEii( struct $12SYSTEM_BUS_T* THIS$1, int32 A$1, int32 B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5533:;
 double RESULT$1;
 RESULT$1 = 0x1.p+0;
 double I$1;
 __builtin_memset( &I$1, 0, 8ll );
 {
  I$1 = 0x0p+0;
  double TMP$2806$2;
  TMP$2806$2 = (double)B$1;
  goto label$5535;
  label$5538:;
  {
   RESULT$1 = RESULT$1 * (((double)(int64)A$1 - I$1) / (I$1 + 0x1.p+0));
  }
  label$5536:;
  I$1 = I$1 + 0x1.p+0;
  label$5535:;
  if( I$1 <= TMP$2806$2 ) goto label$5538;
  label$5537:;
 }
 fb$result$1 = RESULT$1;
 goto label$5534;
 label$5534:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T16K_PASCALTRIANGLEEyy( struct $12SYSTEM_BUS_T* THIS$1, uint64 A$1, uint64 B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5539:;
 double RESULT$1;
 RESULT$1 = 0x1.p+0;
 double I$1;
 __builtin_memset( &I$1, 0, 8ll );
 {
  I$1 = 0x0p+0;
  double TMP$2807$2;
  TMP$2807$2 = (double)B$1;
  goto label$5541;
  label$5544:;
  {
   RESULT$1 = RESULT$1 * (((double)A$1 - I$1) / (I$1 + 0x1.p+0));
  }
  label$5542:;
  I$1 = I$1 + 0x1.p+0;
  label$5541:;
  if( I$1 <= TMP$2807$2 ) goto label$5544;
  label$5543:;
 }
 fb$result$1 = RESULT$1;
 goto label$5540;
 label$5540:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T16K_PASCALTRIANGLEExx( struct $12SYSTEM_BUS_T* THIS$1, int64 A$1, int64 B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5545:;
 double RESULT$1;
 RESULT$1 = 0x1.p+0;
 double I$1;
 __builtin_memset( &I$1, 0, 8ll );
 {
  I$1 = 0x0p+0;
  double TMP$2808$2;
  TMP$2808$2 = (double)B$1;
  goto label$5547;
  label$5550:;
  {
   RESULT$1 = RESULT$1 * (((double)A$1 - I$1) / (I$1 + 0x1.p+0));
  }
  label$5548:;
  I$1 = I$1 + 0x1.p+0;
  label$5547:;
  if( I$1 <= TMP$2808$2 ) goto label$5550;
  label$5549:;
 }
 fb$result$1 = RESULT$1;
 goto label$5546;
 label$5546:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T16K_PASCALTRIANGLEEff( struct $12SYSTEM_BUS_T* THIS$1, float A$1, float B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5551:;
 double RESULT$1;
 RESULT$1 = 0x1.p+0;
 double I$1;
 __builtin_memset( &I$1, 0, 8ll );
 {
  I$1 = 0x0p+0;
  double TMP$2809$2;
  TMP$2809$2 = (double)B$1;
  goto label$5553;
  label$5556:;
  {
   RESULT$1 = RESULT$1 * (((double)A$1 - I$1) / (I$1 + 0x1.p+0));
  }
  label$5554:;
  I$1 = I$1 + 0x1.p+0;
  label$5553:;
  if( I$1 <= TMP$2809$2 ) goto label$5556;
  label$5555:;
 }
 fb$result$1 = RESULT$1;
 goto label$5552;
 label$5552:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T16K_PASCALTRIANGLEEdd( struct $12SYSTEM_BUS_T* THIS$1, double A$1, double B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5557:;
 double RESULT$1;
 RESULT$1 = 0x1.p+0;
 double I$1;
 __builtin_memset( &I$1, 0, 8ll );
 {
  I$1 = 0x0p+0;
  double TMP$2810$2;
  TMP$2810$2 = B$1;
  goto label$5559;
  label$5562:;
  {
   RESULT$1 = RESULT$1 * ((A$1 - I$1) / (I$1 + 0x1.p+0));
  }
  label$5560:;
  I$1 = I$1 + 0x1.p+0;
  label$5559:;
  if( I$1 <= TMP$2810$2 ) goto label$5562;
  label$5561:;
 }
 fb$result$1 = RESULT$1;
 goto label$5558;
 label$5558:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_CLAMPEhhh( struct $12SYSTEM_BUS_T* THIS$1, uint8 A$1, uint8 B$1, uint8 C$1 )
{
 uint8 TMP$2811$1;
 uint8 TMP$2812$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5563:;
 if( (int64)A$1 >= (int64)B$1 ) goto label$5566;
 TMP$2812$1 = B$1;
 goto label$5567;
 label$5566:;
 if( (int64)A$1 <= (int64)C$1 ) goto label$5565;
 TMP$2811$1 = C$1;
 goto label$5568;
 label$5565:;
 TMP$2811$1 = A$1;
 label$5568:;
 TMP$2812$1 = TMP$2811$1;
 label$5567:;
 fb$result$1 = (double)TMP$2812$1;
 goto label$5564;
 label$5564:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_CLAMPEaaa( struct $12SYSTEM_BUS_T* THIS$1, int8 A$1, int8 B$1, int8 C$1 )
{
 int8 TMP$2813$1;
 int8 TMP$2814$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5569:;
 if( (int64)A$1 >= (int64)B$1 ) goto label$5572;
 TMP$2814$1 = B$1;
 goto label$5573;
 label$5572:;
 if( (int64)A$1 <= (int64)C$1 ) goto label$5571;
 TMP$2813$1 = C$1;
 goto label$5574;
 label$5571:;
 TMP$2813$1 = A$1;
 label$5574:;
 TMP$2814$1 = TMP$2813$1;
 label$5573:;
 fb$result$1 = (double)TMP$2814$1;
 goto label$5570;
 label$5570:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_CLAMPEttt( struct $12SYSTEM_BUS_T* THIS$1, uint16 A$1, uint16 B$1, uint16 C$1 )
{
 uint16 TMP$2815$1;
 uint16 TMP$2816$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5575:;
 if( (int64)A$1 >= (int64)B$1 ) goto label$5578;
 TMP$2816$1 = B$1;
 goto label$5579;
 label$5578:;
 if( (int64)A$1 <= (int64)C$1 ) goto label$5577;
 TMP$2815$1 = C$1;
 goto label$5580;
 label$5577:;
 TMP$2815$1 = A$1;
 label$5580:;
 TMP$2816$1 = TMP$2815$1;
 label$5579:;
 fb$result$1 = (double)TMP$2816$1;
 goto label$5576;
 label$5576:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_CLAMPEsss( struct $12SYSTEM_BUS_T* THIS$1, int16 A$1, int16 B$1, int16 C$1 )
{
 int16 TMP$2817$1;
 int16 TMP$2818$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5581:;
 if( (int64)A$1 >= (int64)B$1 ) goto label$5584;
 TMP$2818$1 = B$1;
 goto label$5585;
 label$5584:;
 if( (int64)A$1 <= (int64)C$1 ) goto label$5583;
 TMP$2817$1 = C$1;
 goto label$5586;
 label$5583:;
 TMP$2817$1 = A$1;
 label$5586:;
 TMP$2818$1 = TMP$2817$1;
 label$5585:;
 fb$result$1 = (double)TMP$2818$1;
 goto label$5582;
 label$5582:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_CLAMPEjjj( struct $12SYSTEM_BUS_T* THIS$1, uint32 A$1, uint32 B$1, uint32 C$1 )
{
 uint32 TMP$2819$1;
 uint32 TMP$2820$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5587:;
 if( (int64)A$1 >= (int64)B$1 ) goto label$5590;
 TMP$2820$1 = B$1;
 goto label$5591;
 label$5590:;
 if( (int64)A$1 <= (int64)C$1 ) goto label$5589;
 TMP$2819$1 = C$1;
 goto label$5592;
 label$5589:;
 TMP$2819$1 = A$1;
 label$5592:;
 TMP$2820$1 = TMP$2819$1;
 label$5591:;
 fb$result$1 = (double)TMP$2820$1;
 goto label$5588;
 label$5588:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_CLAMPEiii( struct $12SYSTEM_BUS_T* THIS$1, int32 A$1, int32 B$1, int32 C$1 )
{
 int32 TMP$2821$1;
 int32 TMP$2822$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5593:;
 if( (int64)A$1 >= (int64)B$1 ) goto label$5596;
 TMP$2822$1 = B$1;
 goto label$5597;
 label$5596:;
 if( (int64)A$1 <= (int64)C$1 ) goto label$5595;
 TMP$2821$1 = C$1;
 goto label$5598;
 label$5595:;
 TMP$2821$1 = A$1;
 label$5598:;
 TMP$2822$1 = TMP$2821$1;
 label$5597:;
 fb$result$1 = (double)TMP$2822$1;
 goto label$5594;
 label$5594:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_CLAMPEyyy( struct $12SYSTEM_BUS_T* THIS$1, uint64 A$1, uint64 B$1, uint64 C$1 )
{
 uint64 TMP$2823$1;
 uint64 TMP$2824$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5599:;
 if( A$1 >= B$1 ) goto label$5602;
 TMP$2824$1 = B$1;
 goto label$5603;
 label$5602:;
 if( A$1 <= C$1 ) goto label$5601;
 TMP$2823$1 = C$1;
 goto label$5604;
 label$5601:;
 TMP$2823$1 = A$1;
 label$5604:;
 TMP$2824$1 = TMP$2823$1;
 label$5603:;
 fb$result$1 = (double)TMP$2824$1;
 goto label$5600;
 label$5600:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_CLAMPExxx( struct $12SYSTEM_BUS_T* THIS$1, int64 A$1, int64 B$1, int64 C$1 )
{
 int64 TMP$2825$1;
 int64 TMP$2826$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5605:;
 if( A$1 >= B$1 ) goto label$5608;
 TMP$2826$1 = B$1;
 goto label$5609;
 label$5608:;
 if( A$1 <= C$1 ) goto label$5607;
 TMP$2825$1 = C$1;
 goto label$5610;
 label$5607:;
 TMP$2825$1 = A$1;
 label$5610:;
 TMP$2826$1 = TMP$2825$1;
 label$5609:;
 fb$result$1 = (double)TMP$2826$1;
 goto label$5606;
 label$5606:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_CLAMPEfff( struct $12SYSTEM_BUS_T* THIS$1, float A$1, float B$1, float C$1 )
{
 float TMP$2827$1;
 float TMP$2828$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5611:;
 if( A$1 >= B$1 ) goto label$5614;
 TMP$2828$1 = B$1;
 goto label$5615;
 label$5614:;
 if( A$1 <= C$1 ) goto label$5613;
 TMP$2827$1 = C$1;
 goto label$5616;
 label$5613:;
 TMP$2827$1 = A$1;
 label$5616:;
 TMP$2828$1 = TMP$2827$1;
 label$5615:;
 fb$result$1 = (double)TMP$2828$1;
 goto label$5612;
 label$5612:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_CLAMPEddd( struct $12SYSTEM_BUS_T* THIS$1, double A$1, double B$1, double C$1 )
{
 double TMP$2829$1;
 double TMP$2830$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5617:;
 if( A$1 >= B$1 ) goto label$5620;
 TMP$2830$1 = B$1;
 goto label$5621;
 label$5620:;
 if( A$1 <= C$1 ) goto label$5619;
 TMP$2829$1 = C$1;
 goto label$5622;
 label$5619:;
 TMP$2829$1 = A$1;
 label$5622:;
 TMP$2830$1 = TMP$2829$1;
 label$5621:;
 fb$result$1 = TMP$2830$1;
 goto label$5618;
 label$5618:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_CLAMPER9_FLOAT128S1_S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* A$1, struct $9_FLOAT128* B$1, struct $9_FLOAT128* C$1 )
{
 struct $9_FLOAT128 TMP$2831$1;
 double TMP$2832$1;
 double TMP$2833$1;
 double TMP$2834$1;
 double TMP$2835$1;
 double TMP$2836$1;
 double TMP$2837$1;
 double TMP$2838$1;
 double TMP$2839$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5623:;
 if( *(double*)((uint8*)A$1 + 8ll) >= *(double*)((uint8*)B$1 + 8ll) ) goto label$5632;
 TMP$2839$1 = *(double*)((uint8*)B$1 + 8ll);
 goto label$5633;
 label$5632:;
 if( *(double*)A$1 <= *(double*)((uint8*)C$1 + 8ll) ) goto label$5631;
 TMP$2838$1 = *(double*)((uint8*)C$1 + 8ll);
 goto label$5634;
 label$5631:;
 TMP$2838$1 = *(double*)((uint8*)A$1 + 8ll);
 label$5634:;
 TMP$2839$1 = TMP$2838$1;
 label$5633:;
 if( *(double*)A$1 >= *(double*)B$1 ) goto label$5630;
 TMP$2837$1 = *(double*)B$1;
 goto label$5635;
 label$5630:;
 if( *(double*)A$1 <= *(double*)C$1 ) goto label$5629;
 TMP$2836$1 = *(double*)C$1;
 goto label$5636;
 label$5629:;
 TMP$2836$1 = *(double*)A$1;
 label$5636:;
 TMP$2837$1 = TMP$2836$1;
 label$5635:;
 if( *(double*)((uint8*)A$1 + 8ll) >= *(double*)((uint8*)B$1 + 8ll) ) goto label$5628;
 TMP$2835$1 = *(double*)((uint8*)B$1 + 8ll);
 goto label$5637;
 label$5628:;
 if( *(double*)((uint8*)A$1 + 8ll) <= *(double*)((uint8*)C$1 + 8ll) ) goto label$5627;
 TMP$2834$1 = *(double*)((uint8*)C$1 + 8ll);
 goto label$5638;
 label$5627:;
 TMP$2834$1 = *(double*)((uint8*)A$1 + 8ll);
 label$5638:;
 TMP$2835$1 = TMP$2834$1;
 label$5637:;
 if( *(double*)A$1 >= *(double*)B$1 ) goto label$5626;
 TMP$2833$1 = *(double*)B$1;
 goto label$5639;
 label$5626:;
 if( *(double*)A$1 <= *(double*)C$1 ) goto label$5625;
 TMP$2832$1 = *(double*)C$1;
 goto label$5640;
 label$5625:;
 TMP$2832$1 = *(double*)A$1;
 label$5640:;
 TMP$2833$1 = TMP$2832$1;
 label$5639:;
 _ZN9_FLOAT128C1Edddd( &TMP$2831$1, TMP$2833$1, TMP$2835$1, TMP$2837$1, TMP$2839$1 );
 uint64 vr$31 = _ZN9_FLOAT128cvyEv( &TMP$2831$1 );
 fb$result$1 = (double)vr$31;
 goto label$5624;
 label$5624:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_CLAMPER9_FLOAT256S1_S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* A$1, struct $9_FLOAT256* B$1, struct $9_FLOAT256* C$1 )
{
 struct $9_FLOAT256 TMP$2840$1;
 double TMP$2841$1;
 double TMP$2842$1;
 double TMP$2843$1;
 double TMP$2844$1;
 double TMP$2845$1;
 double TMP$2846$1;
 double TMP$2847$1;
 double TMP$2848$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5641:;
 if( *(double*)A$1 >= *(double*)B$1 ) goto label$5650;
 TMP$2848$1 = *(double*)B$1;
 goto label$5651;
 label$5650:;
 if( *(double*)A$1 <= *(double*)C$1 ) goto label$5649;
 TMP$2847$1 = *(double*)C$1;
 goto label$5652;
 label$5649:;
 TMP$2847$1 = *(double*)A$1;
 label$5652:;
 TMP$2848$1 = TMP$2847$1;
 label$5651:;
 if( *(double*)A$1 >= *(double*)B$1 ) goto label$5648;
 TMP$2846$1 = *(double*)B$1;
 goto label$5653;
 label$5648:;
 if( *(double*)A$1 <= *(double*)C$1 ) goto label$5647;
 TMP$2845$1 = *(double*)C$1;
 goto label$5654;
 label$5647:;
 TMP$2845$1 = *(double*)A$1;
 label$5654:;
 TMP$2846$1 = TMP$2845$1;
 label$5653:;
 if( *(double*)A$1 >= *(double*)B$1 ) goto label$5646;
 TMP$2844$1 = *(double*)B$1;
 goto label$5655;
 label$5646:;
 if( *(double*)A$1 <= *(double*)C$1 ) goto label$5645;
 TMP$2843$1 = *(double*)C$1;
 goto label$5656;
 label$5645:;
 TMP$2843$1 = *(double*)A$1;
 label$5656:;
 TMP$2844$1 = TMP$2843$1;
 label$5655:;
 if( *(double*)A$1 >= *(double*)B$1 ) goto label$5644;
 TMP$2842$1 = *(double*)B$1;
 goto label$5657;
 label$5644:;
 if( *(double*)A$1 <= *(double*)C$1 ) goto label$5643;
 TMP$2841$1 = *(double*)C$1;
 goto label$5658;
 label$5643:;
 TMP$2841$1 = *(double*)A$1;
 label$5658:;
 TMP$2842$1 = TMP$2841$1;
 label$5657:;
 _ZN9_FLOAT256C1Edddd( &TMP$2840$1, TMP$2842$1, TMP$2844$1, TMP$2846$1, TMP$2848$1 );
 uint64 vr$31 = _ZN9_FLOAT256cvyEv( &TMP$2840$1 );
 fb$result$1 = (double)vr$31;
 goto label$5642;
 label$5642:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T7K_CLAMPER9_FLOAT512S1_S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* A$1, struct $9_FLOAT512* B$1, struct $9_FLOAT512* C$1 )
{
 struct $9_FLOAT512 TMP$2849$1;
 double TMP$2850$1;
 double TMP$2851$1;
 double TMP$2852$1;
 double TMP$2853$1;
 double TMP$2854$1;
 double TMP$2855$1;
 double TMP$2856$1;
 double TMP$2857$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5659:;
 if( *(double*)A$1 >= *(double*)B$1 ) goto label$5668;
 TMP$2857$1 = *(double*)B$1;
 goto label$5669;
 label$5668:;
 if( *(double*)A$1 <= *(double*)C$1 ) goto label$5667;
 TMP$2856$1 = *(double*)C$1;
 goto label$5670;
 label$5667:;
 TMP$2856$1 = *(double*)A$1;
 label$5670:;
 TMP$2857$1 = TMP$2856$1;
 label$5669:;
 if( *(double*)A$1 >= *(double*)B$1 ) goto label$5666;
 TMP$2855$1 = *(double*)B$1;
 goto label$5671;
 label$5666:;
 if( *(double*)A$1 <= *(double*)C$1 ) goto label$5665;
 TMP$2854$1 = *(double*)C$1;
 goto label$5672;
 label$5665:;
 TMP$2854$1 = *(double*)A$1;
 label$5672:;
 TMP$2855$1 = TMP$2854$1;
 label$5671:;
 if( *(double*)A$1 >= *(double*)B$1 ) goto label$5664;
 TMP$2853$1 = *(double*)B$1;
 goto label$5673;
 label$5664:;
 if( *(double*)A$1 <= *(double*)C$1 ) goto label$5663;
 TMP$2852$1 = *(double*)C$1;
 goto label$5674;
 label$5663:;
 TMP$2852$1 = *(double*)A$1;
 label$5674:;
 TMP$2853$1 = TMP$2852$1;
 label$5673:;
 if( *(double*)A$1 >= *(double*)B$1 ) goto label$5662;
 TMP$2851$1 = *(double*)B$1;
 goto label$5675;
 label$5662:;
 if( *(double*)A$1 <= *(double*)C$1 ) goto label$5661;
 TMP$2850$1 = *(double*)C$1;
 goto label$5676;
 label$5661:;
 TMP$2850$1 = *(double*)A$1;
 label$5676:;
 TMP$2851$1 = TMP$2850$1;
 label$5675:;
 _ZN9_FLOAT512C1Edddd( &TMP$2849$1, TMP$2851$1, TMP$2853$1, TMP$2855$1, TMP$2857$1 );
 uint64 vr$31 = _ZN9_FLOAT512cvyEv( &TMP$2849$1 );
 fb$result$1 = (double)vr$31;
 goto label$5660;
 label$5660:;
 return fb$result$1;
}

struct $7VECTOR2* _ZN12SYSTEM_BUS_T7K_CLAMPER7VECTOR2S1_S1_( struct $7VECTOR2* tmp$2858$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR2* A$1, struct $7VECTOR2* B$1, struct $7VECTOR2* C$1 )
{
 double TMP$2860$1;
 double TMP$2861$1;
 double TMP$2862$1;
 double TMP$2863$1;
 label$5677:;
 if( *(double*)((uint8*)A$1 + 8ll) >= *(double*)((uint8*)B$1 + 8ll) ) goto label$5682;
 TMP$2863$1 = *(double*)((uint8*)B$1 + 8ll);
 goto label$5683;
 label$5682:;
 if( *(double*)((uint8*)A$1 + 8ll) <= *(double*)((uint8*)C$1 + 8ll) ) goto label$5681;
 TMP$2862$1 = *(double*)((uint8*)C$1 + 8ll);
 goto label$5684;
 label$5681:;
 TMP$2862$1 = *(double*)((uint8*)A$1 + 8ll);
 label$5684:;
 TMP$2863$1 = TMP$2862$1;
 label$5683:;
 if( *(double*)A$1 >= *(double*)B$1 ) goto label$5680;
 TMP$2861$1 = *(double*)B$1;
 goto label$5685;
 label$5680:;
 if( *(double*)A$1 <= *(double*)C$1 ) goto label$5679;
 TMP$2860$1 = *(double*)C$1;
 goto label$5686;
 label$5679:;
 TMP$2860$1 = *(double*)A$1;
 label$5686:;
 TMP$2861$1 = TMP$2860$1;
 label$5685:;
 _ZN7VECTOR2C1Edd( tmp$2858$1, TMP$2861$1, TMP$2863$1 );
 goto label$5678;
 label$5678:;
 return tmp$2858$1;
}

struct $7VECTOR3* _ZN12SYSTEM_BUS_T7K_CLAMPER7VECTOR3S1_S1_( struct $7VECTOR3* tmp$2864$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* A$1, struct $7VECTOR3* B$1, struct $7VECTOR3* C$1 )
{
 double TMP$2866$1;
 double TMP$2867$1;
 double TMP$2868$1;
 double TMP$2869$1;
 double TMP$2870$1;
 double TMP$2871$1;
 label$5687:;
 if( *(double*)((uint8*)A$1 + 32ll) >= *(double*)((uint8*)B$1 + 32ll) ) goto label$5694;
 TMP$2871$1 = *(double*)((uint8*)B$1 + 32ll);
 goto label$5695;
 label$5694:;
 if( *(double*)((uint8*)A$1 + 32ll) <= *(double*)((uint8*)C$1 + 32ll) ) goto label$5693;
 TMP$2870$1 = *(double*)((uint8*)C$1 + 32ll);
 goto label$5696;
 label$5693:;
 TMP$2870$1 = *(double*)((uint8*)A$1 + 32ll);
 label$5696:;
 TMP$2871$1 = TMP$2870$1;
 label$5695:;
 if( *(double*)((uint8*)A$1 + 24ll) >= *(double*)((uint8*)B$1 + 24ll) ) goto label$5692;
 TMP$2869$1 = *(double*)((uint8*)B$1 + 24ll);
 goto label$5697;
 label$5692:;
 if( *(double*)((uint8*)A$1 + 24ll) <= *(double*)((uint8*)C$1 + 24ll) ) goto label$5691;
 TMP$2868$1 = *(double*)((uint8*)C$1 + 24ll);
 goto label$5698;
 label$5691:;
 TMP$2868$1 = *(double*)((uint8*)A$1 + 24ll);
 label$5698:;
 TMP$2869$1 = TMP$2868$1;
 label$5697:;
 if( *(double*)((uint8*)A$1 + 16ll) >= *(double*)((uint8*)B$1 + 16ll) ) goto label$5690;
 TMP$2867$1 = *(double*)((uint8*)B$1 + 16ll);
 goto label$5699;
 label$5690:;
 if( *(double*)((uint8*)A$1 + 16ll) <= *(double*)((uint8*)C$1 + 16ll) ) goto label$5689;
 TMP$2866$1 = *(double*)((uint8*)C$1 + 16ll);
 goto label$5700;
 label$5689:;
 TMP$2866$1 = *(double*)((uint8*)A$1 + 16ll);
 label$5700:;
 TMP$2867$1 = TMP$2866$1;
 label$5699:;
 _ZN7VECTOR3C1Eddd( tmp$2864$1, TMP$2867$1, TMP$2869$1, TMP$2871$1 );
 goto label$5688;
 label$5688:;
 return tmp$2864$1;
}

struct $7VECTOR4* _ZN12SYSTEM_BUS_T7K_CLAMPER7VECTOR4S1_S1_( struct $7VECTOR4* tmp$2872$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR4* A$1, struct $7VECTOR4* B$1, struct $7VECTOR4* C$1 )
{
 double TMP$2874$1;
 double TMP$2875$1;
 double TMP$2876$1;
 double TMP$2877$1;
 double TMP$2878$1;
 double TMP$2879$1;
 double TMP$2880$1;
 double TMP$2881$1;
 label$5701:;
 if( *(double*)((uint8*)A$1 + 64ll) >= *(double*)((uint8*)B$1 + 64ll) ) goto label$5710;
 TMP$2881$1 = *(double*)((uint8*)B$1 + 64ll);
 goto label$5711;
 label$5710:;
 if( *(double*)((uint8*)A$1 + 56ll) <= *(double*)((uint8*)C$1 + 64ll) ) goto label$5709;
 TMP$2880$1 = *(double*)((uint8*)C$1 + 64ll);
 goto label$5712;
 label$5709:;
 TMP$2880$1 = *(double*)((uint8*)A$1 + 64ll);
 label$5712:;
 TMP$2881$1 = TMP$2880$1;
 label$5711:;
 if( *(double*)((uint8*)A$1 + 56ll) >= *(double*)((uint8*)B$1 + 56ll) ) goto label$5708;
 TMP$2879$1 = *(double*)((uint8*)B$1 + 56ll);
 goto label$5713;
 label$5708:;
 if( *(double*)((uint8*)A$1 + 56ll) <= *(double*)((uint8*)C$1 + 56ll) ) goto label$5707;
 TMP$2878$1 = *(double*)((uint8*)C$1 + 56ll);
 goto label$5714;
 label$5707:;
 TMP$2878$1 = *(double*)((uint8*)A$1 + 56ll);
 label$5714:;
 TMP$2879$1 = TMP$2878$1;
 label$5713:;
 if( *(double*)((uint8*)A$1 + 48ll) >= *(double*)((uint8*)B$1 + 48ll) ) goto label$5706;
 TMP$2877$1 = *(double*)((uint8*)B$1 + 48ll);
 goto label$5715;
 label$5706:;
 if( *(double*)((uint8*)A$1 + 48ll) <= *(double*)((uint8*)C$1 + 48ll) ) goto label$5705;
 TMP$2876$1 = *(double*)((uint8*)C$1 + 48ll);
 goto label$5716;
 label$5705:;
 TMP$2876$1 = *(double*)((uint8*)A$1 + 48ll);
 label$5716:;
 TMP$2877$1 = TMP$2876$1;
 label$5715:;
 if( *(double*)((uint8*)A$1 + 40ll) >= *(double*)((uint8*)B$1 + 40ll) ) goto label$5704;
 TMP$2875$1 = *(double*)((uint8*)B$1 + 40ll);
 goto label$5717;
 label$5704:;
 if( *(double*)((uint8*)A$1 + 40ll) <= *(double*)((uint8*)C$1 + 40ll) ) goto label$5703;
 TMP$2874$1 = *(double*)((uint8*)C$1 + 40ll);
 goto label$5718;
 label$5703:;
 TMP$2874$1 = *(double*)((uint8*)A$1 + 40ll);
 label$5718:;
 TMP$2875$1 = TMP$2874$1;
 label$5717:;
 _ZN7VECTOR4C1Edddd( tmp$2872$1, TMP$2875$1, TMP$2877$1, TMP$2879$1, TMP$2881$1 );
 goto label$5702;
 label$5702:;
 return tmp$2872$1;
}

struct $7VECTOR2* _ZN12SYSTEM_BUS_T7K_CLAMPER7VECTOR2dd( struct $7VECTOR2* tmp$2882$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR2* A$1, double B$1, double C$1 )
{
 double TMP$2884$1;
 double TMP$2885$1;
 double TMP$2886$1;
 double TMP$2887$1;
 label$5719:;
 if( *(double*)((uint8*)A$1 + 8ll) >= B$1 ) goto label$5724;
 TMP$2887$1 = B$1;
 goto label$5725;
 label$5724:;
 if( *(double*)((uint8*)A$1 + 8ll) <= C$1 ) goto label$5723;
 TMP$2886$1 = C$1;
 goto label$5726;
 label$5723:;
 TMP$2886$1 = *(double*)((uint8*)A$1 + 8ll);
 label$5726:;
 TMP$2887$1 = TMP$2886$1;
 label$5725:;
 if( *(double*)A$1 >= B$1 ) goto label$5722;
 TMP$2885$1 = B$1;
 goto label$5727;
 label$5722:;
 if( *(double*)A$1 <= C$1 ) goto label$5721;
 TMP$2884$1 = C$1;
 goto label$5728;
 label$5721:;
 TMP$2884$1 = *(double*)A$1;
 label$5728:;
 TMP$2885$1 = TMP$2884$1;
 label$5727:;
 _ZN7VECTOR2C1Edd( tmp$2882$1, TMP$2885$1, TMP$2887$1 );
 goto label$5720;
 label$5720:;
 return tmp$2882$1;
}

struct $7VECTOR3* _ZN12SYSTEM_BUS_T7K_CLAMPER7VECTOR3dd( struct $7VECTOR3* tmp$2888$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* A$1, double B$1, double C$1 )
{
 double TMP$2890$1;
 double TMP$2891$1;
 double TMP$2892$1;
 double TMP$2893$1;
 double TMP$2894$1;
 double TMP$2895$1;
 label$5729:;
 if( *(double*)((uint8*)A$1 + 32ll) >= B$1 ) goto label$5736;
 TMP$2895$1 = B$1;
 goto label$5737;
 label$5736:;
 if( *(double*)((uint8*)A$1 + 32ll) <= C$1 ) goto label$5735;
 TMP$2894$1 = C$1;
 goto label$5738;
 label$5735:;
 TMP$2894$1 = *(double*)((uint8*)A$1 + 32ll);
 label$5738:;
 TMP$2895$1 = TMP$2894$1;
 label$5737:;
 if( *(double*)((uint8*)A$1 + 24ll) >= B$1 ) goto label$5734;
 TMP$2893$1 = B$1;
 goto label$5739;
 label$5734:;
 if( *(double*)((uint8*)A$1 + 24ll) <= C$1 ) goto label$5733;
 TMP$2892$1 = C$1;
 goto label$5740;
 label$5733:;
 TMP$2892$1 = *(double*)((uint8*)A$1 + 24ll);
 label$5740:;
 TMP$2893$1 = TMP$2892$1;
 label$5739:;
 if( *(double*)((uint8*)A$1 + 16ll) >= B$1 ) goto label$5732;
 TMP$2891$1 = B$1;
 goto label$5741;
 label$5732:;
 if( *(double*)((uint8*)A$1 + 16ll) <= C$1 ) goto label$5731;
 TMP$2890$1 = C$1;
 goto label$5742;
 label$5731:;
 TMP$2890$1 = *(double*)((uint8*)A$1 + 16ll);
 label$5742:;
 TMP$2891$1 = TMP$2890$1;
 label$5741:;
 _ZN7VECTOR3C1Eddd( tmp$2888$1, TMP$2891$1, TMP$2893$1, TMP$2895$1 );
 goto label$5730;
 label$5730:;
 return tmp$2888$1;
}

struct $7VECTOR4* _ZN12SYSTEM_BUS_T7K_CLAMPER7VECTOR4dd( struct $7VECTOR4* tmp$2896$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR4* A$1, double B$1, double C$1 )
{
 double TMP$2898$1;
 double TMP$2899$1;
 double TMP$2900$1;
 double TMP$2901$1;
 double TMP$2902$1;
 double TMP$2903$1;
 double TMP$2904$1;
 double TMP$2905$1;
 label$5743:;
 if( *(double*)((uint8*)A$1 + 64ll) >= B$1 ) goto label$5752;
 TMP$2905$1 = B$1;
 goto label$5753;
 label$5752:;
 if( *(double*)((uint8*)A$1 + 56ll) <= C$1 ) goto label$5751;
 TMP$2904$1 = C$1;
 goto label$5754;
 label$5751:;
 TMP$2904$1 = *(double*)((uint8*)A$1 + 64ll);
 label$5754:;
 TMP$2905$1 = TMP$2904$1;
 label$5753:;
 if( *(double*)((uint8*)A$1 + 56ll) >= B$1 ) goto label$5750;
 TMP$2903$1 = B$1;
 goto label$5755;
 label$5750:;
 if( *(double*)((uint8*)A$1 + 56ll) <= C$1 ) goto label$5749;
 TMP$2902$1 = C$1;
 goto label$5756;
 label$5749:;
 TMP$2902$1 = *(double*)((uint8*)A$1 + 56ll);
 label$5756:;
 TMP$2903$1 = TMP$2902$1;
 label$5755:;
 if( *(double*)((uint8*)A$1 + 48ll) >= B$1 ) goto label$5748;
 TMP$2901$1 = B$1;
 goto label$5757;
 label$5748:;
 if( *(double*)((uint8*)A$1 + 48ll) <= C$1 ) goto label$5747;
 TMP$2900$1 = C$1;
 goto label$5758;
 label$5747:;
 TMP$2900$1 = *(double*)((uint8*)A$1 + 48ll);
 label$5758:;
 TMP$2901$1 = TMP$2900$1;
 label$5757:;
 if( *(double*)((uint8*)A$1 + 40ll) >= B$1 ) goto label$5746;
 TMP$2899$1 = B$1;
 goto label$5759;
 label$5746:;
 if( *(double*)((uint8*)A$1 + 40ll) <= C$1 ) goto label$5745;
 TMP$2898$1 = C$1;
 goto label$5760;
 label$5745:;
 TMP$2898$1 = *(double*)((uint8*)A$1 + 40ll);
 label$5760:;
 TMP$2899$1 = TMP$2898$1;
 label$5759:;
 _ZN7VECTOR4C1Edddd( tmp$2896$1, TMP$2899$1, TMP$2901$1, TMP$2903$1, TMP$2905$1 );
 goto label$5744;
 label$5744:;
 return tmp$2896$1;
}

double _ZN12SYSTEM_BUS_T19K_GENERALSMOOTHSTEPEhh( struct $12SYSTEM_BUS_T* THIS$1, uint8 N$1, uint8 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5761:;
 double vr$1 = _ZN12SYSTEM_BUS_T7K_CLAMPEhhh( THIS$1, X$1, (uint8)0u, (uint8)1u );
 X$1 = (uint8)((int32)__builtin_nearbyint( vr$1 ));
 double RESULT$1;
 RESULT$1 = 0x0p+0;
 double NA$1;
 __builtin_memset( &NA$1, 0, 8ll );
 {
  NA$1 = 0x0p+0;
  double TMP$2906$2;
  TMP$2906$2 = (double)N$1;
  goto label$5763;
  label$5766:;
  {
   double vr$9 = _ZN12SYSTEM_BUS_T16K_PASCALTRIANGLEEhh( THIS$1, (uint8)(-(int64)N$1 + -1ll), N$1 );
   double vr$16 = _ZN12SYSTEM_BUS_T16K_PASCALTRIANGLEExx( THIS$1, ((int64)N$1 << (1ll & 63ll)) + 1ll, (int64)N$1 - (int64)N$1 );
   double vr$23 = _ZN12SYSTEM_BUS_T5K_POWEhh( THIS$1, X$1, (uint8)(((int64)N$1 + (int64)N$1) + 1ll) );
   RESULT$1 = RESULT$1 + ((vr$9 * vr$16) * vr$23);
  }
  label$5764:;
  NA$1 = NA$1 + 0x1.p+0;
  label$5763:;
  if( NA$1 <= TMP$2906$2 ) goto label$5766;
  label$5765:;
 }
 fb$result$1 = RESULT$1;
 goto label$5762;
 label$5762:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T19K_GENERALSMOOTHSTEPEaa( struct $12SYSTEM_BUS_T* THIS$1, int8 N$1, int8 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5767:;
 double vr$1 = _ZN12SYSTEM_BUS_T7K_CLAMPEaaa( THIS$1, X$1, (int8)0, (int8)1 );
 X$1 = (int8)((int32)__builtin_nearbyint( vr$1 ));
 double RESULT$1;
 RESULT$1 = 0x0p+0;
 double NA$1;
 __builtin_memset( &NA$1, 0, 8ll );
 {
  NA$1 = 0x0p+0;
  double TMP$2907$2;
  TMP$2907$2 = (double)N$1;
  goto label$5769;
  label$5772:;
  {
   double vr$9 = _ZN12SYSTEM_BUS_T16K_PASCALTRIANGLEEaa( THIS$1, (int8)(-(int64)N$1 + -1ll), N$1 );
   double vr$16 = _ZN12SYSTEM_BUS_T16K_PASCALTRIANGLEExx( THIS$1, ((int64)N$1 << (1ll & 63ll)) + 1ll, (int64)N$1 - (int64)N$1 );
   double vr$23 = _ZN12SYSTEM_BUS_T5K_POWEaa( THIS$1, X$1, (int8)(((int64)N$1 + (int64)N$1) + 1ll) );
   RESULT$1 = RESULT$1 + ((vr$9 * vr$16) * vr$23);
  }
  label$5770:;
  NA$1 = NA$1 + 0x1.p+0;
  label$5769:;
  if( NA$1 <= TMP$2907$2 ) goto label$5772;
  label$5771:;
 }
 fb$result$1 = RESULT$1;
 goto label$5768;
 label$5768:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T19K_GENERALSMOOTHSTEPEtt( struct $12SYSTEM_BUS_T* THIS$1, uint16 N$1, uint16 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5773:;
 double vr$1 = _ZN12SYSTEM_BUS_T7K_CLAMPEttt( THIS$1, X$1, (uint16)0u, (uint16)1u );
 X$1 = (uint16)((int32)__builtin_nearbyint( vr$1 ));
 double RESULT$1;
 RESULT$1 = 0x0p+0;
 double NA$1;
 __builtin_memset( &NA$1, 0, 8ll );
 {
  NA$1 = 0x0p+0;
  double TMP$2908$2;
  TMP$2908$2 = (double)N$1;
  goto label$5775;
  label$5778:;
  {
   double vr$9 = _ZN12SYSTEM_BUS_T16K_PASCALTRIANGLEEtt( THIS$1, (uint16)(-(int64)N$1 + -1ll), N$1 );
   double vr$16 = _ZN12SYSTEM_BUS_T16K_PASCALTRIANGLEExx( THIS$1, ((int64)N$1 << (1ll & 63ll)) + 1ll, (int64)N$1 - (int64)N$1 );
   double vr$23 = _ZN12SYSTEM_BUS_T5K_POWEtt( THIS$1, X$1, (uint16)(((int64)N$1 + (int64)N$1) + 1ll) );
   RESULT$1 = RESULT$1 + ((vr$9 * vr$16) * vr$23);
  }
  label$5776:;
  NA$1 = NA$1 + 0x1.p+0;
  label$5775:;
  if( NA$1 <= TMP$2908$2 ) goto label$5778;
  label$5777:;
 }
 fb$result$1 = RESULT$1;
 goto label$5774;
 label$5774:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T19K_GENERALSMOOTHSTEPEss( struct $12SYSTEM_BUS_T* THIS$1, int16 N$1, int16 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5779:;
 double vr$1 = _ZN12SYSTEM_BUS_T7K_CLAMPEsss( THIS$1, X$1, (int16)0, (int16)1 );
 X$1 = (int16)((int32)__builtin_nearbyint( vr$1 ));
 double RESULT$1;
 RESULT$1 = 0x0p+0;
 double NA$1;
 __builtin_memset( &NA$1, 0, 8ll );
 {
  NA$1 = 0x0p+0;
  double TMP$2909$2;
  TMP$2909$2 = (double)N$1;
  goto label$5781;
  label$5784:;
  {
   double vr$9 = _ZN12SYSTEM_BUS_T16K_PASCALTRIANGLEEss( THIS$1, (int16)(-(int64)N$1 + -1ll), N$1 );
   double vr$16 = _ZN12SYSTEM_BUS_T16K_PASCALTRIANGLEExx( THIS$1, ((int64)N$1 << (1ll & 63ll)) + 1ll, (int64)N$1 - (int64)N$1 );
   double vr$23 = _ZN12SYSTEM_BUS_T5K_POWEss( THIS$1, X$1, (int16)(((int64)N$1 + (int64)N$1) + 1ll) );
   RESULT$1 = RESULT$1 + ((vr$9 * vr$16) * vr$23);
  }
  label$5782:;
  NA$1 = NA$1 + 0x1.p+0;
  label$5781:;
  if( NA$1 <= TMP$2909$2 ) goto label$5784;
  label$5783:;
 }
 fb$result$1 = RESULT$1;
 goto label$5780;
 label$5780:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T19K_GENERALSMOOTHSTEPEjj( struct $12SYSTEM_BUS_T* THIS$1, uint32 N$1, uint32 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5785:;
 double vr$1 = _ZN12SYSTEM_BUS_T7K_CLAMPEjjj( THIS$1, X$1, 0u, 1u );
 X$1 = (uint32)((int64)__builtin_nearbyint( vr$1 ));
 double RESULT$1;
 RESULT$1 = 0x0p+0;
 double NA$1;
 __builtin_memset( &NA$1, 0, 8ll );
 {
  NA$1 = 0x0p+0;
  double TMP$2910$2;
  TMP$2910$2 = (double)N$1;
  goto label$5787;
  label$5790:;
  {
   double vr$9 = _ZN12SYSTEM_BUS_T16K_PASCALTRIANGLEEjj( THIS$1, (uint32)(-(int64)N$1 + -1ll), N$1 );
   double vr$16 = _ZN12SYSTEM_BUS_T16K_PASCALTRIANGLEExx( THIS$1, ((int64)N$1 << (1ll & 63ll)) + 1ll, (int64)N$1 - (int64)N$1 );
   double vr$23 = _ZN12SYSTEM_BUS_T5K_POWEjj( THIS$1, X$1, (uint32)(((int64)N$1 + (int64)N$1) + 1ll) );
   RESULT$1 = RESULT$1 + ((vr$9 * vr$16) * vr$23);
  }
  label$5788:;
  NA$1 = NA$1 + 0x1.p+0;
  label$5787:;
  if( NA$1 <= TMP$2910$2 ) goto label$5790;
  label$5789:;
 }
 fb$result$1 = RESULT$1;
 goto label$5786;
 label$5786:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T19K_GENERALSMOOTHSTEPEii( struct $12SYSTEM_BUS_T* THIS$1, int32 N$1, int32 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5791:;
 double vr$1 = _ZN12SYSTEM_BUS_T7K_CLAMPEiii( THIS$1, X$1, 0, 1 );
 X$1 = ((int32)__builtin_nearbyint( vr$1 ));
 double RESULT$1;
 RESULT$1 = 0x0p+0;
 double NA$1;
 __builtin_memset( &NA$1, 0, 8ll );
 {
  NA$1 = 0x0p+0;
  double TMP$2911$2;
  TMP$2911$2 = (double)N$1;
  goto label$5793;
  label$5796:;
  {
   double vr$9 = _ZN12SYSTEM_BUS_T16K_PASCALTRIANGLEEii( THIS$1, (int32)(-(int64)N$1 + -1ll), N$1 );
   double vr$16 = _ZN12SYSTEM_BUS_T16K_PASCALTRIANGLEExx( THIS$1, ((int64)N$1 << (1ll & 63ll)) + 1ll, (int64)N$1 - (int64)N$1 );
   double vr$23 = _ZN12SYSTEM_BUS_T5K_POWEii( THIS$1, X$1, (int32)(((int64)N$1 + (int64)N$1) + 1ll) );
   RESULT$1 = RESULT$1 + ((vr$9 * vr$16) * vr$23);
  }
  label$5794:;
  NA$1 = NA$1 + 0x1.p+0;
  label$5793:;
  if( NA$1 <= TMP$2911$2 ) goto label$5796;
  label$5795:;
 }
 fb$result$1 = RESULT$1;
 goto label$5792;
 label$5792:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T19K_GENERALSMOOTHSTEPEyy( struct $12SYSTEM_BUS_T* THIS$1, uint64 N$1, uint64 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5797:;
 double vr$1 = _ZN12SYSTEM_BUS_T7K_CLAMPEyyy( THIS$1, X$1, 0ull, 1ull );
 X$1 = ((uint64)__builtin_nearbyint( vr$1 ));
 double RESULT$1;
 RESULT$1 = 0x0p+0;
 double NA$1;
 __builtin_memset( &NA$1, 0, 8ll );
 {
  NA$1 = 0x0p+0;
  double TMP$2912$2;
  TMP$2912$2 = (double)N$1;
  goto label$5799;
  label$5802:;
  {
   double vr$7 = _ZN12SYSTEM_BUS_T16K_PASCALTRIANGLEEyy( THIS$1, (uint64)(int64)(-N$1 + -1ll), N$1 );
   double vr$11 = _ZN12SYSTEM_BUS_T16K_PASCALTRIANGLEEyy( THIS$1, (N$1 << (1ull & 63ll)) + 1ull, N$1 - N$1 );
   double vr$15 = _ZN12SYSTEM_BUS_T5K_POWEyy( THIS$1, X$1, (N$1 + N$1) + 1ull );
   RESULT$1 = RESULT$1 + ((vr$7 * vr$11) * vr$15);
  }
  label$5800:;
  NA$1 = NA$1 + 0x1.p+0;
  label$5799:;
  if( NA$1 <= TMP$2912$2 ) goto label$5802;
  label$5801:;
 }
 fb$result$1 = RESULT$1;
 goto label$5798;
 label$5798:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T19K_GENERALSMOOTHSTEPExx( struct $12SYSTEM_BUS_T* THIS$1, int64 N$1, int64 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5803:;
 double vr$1 = _ZN12SYSTEM_BUS_T7K_CLAMPExxx( THIS$1, X$1, 0ll, 1ll );
 X$1 = ((int64)__builtin_nearbyint( vr$1 ));
 double RESULT$1;
 RESULT$1 = 0x0p+0;
 double NA$1;
 __builtin_memset( &NA$1, 0, 8ll );
 {
  NA$1 = 0x0p+0;
  double TMP$2913$2;
  TMP$2913$2 = (double)N$1;
  goto label$5805;
  label$5808:;
  {
   double vr$7 = _ZN12SYSTEM_BUS_T16K_PASCALTRIANGLEExx( THIS$1, -N$1 + -1ll, N$1 );
   double vr$11 = _ZN12SYSTEM_BUS_T16K_PASCALTRIANGLEExx( THIS$1, (N$1 << (1ll & 63ll)) + 1ll, N$1 - N$1 );
   double vr$15 = _ZN12SYSTEM_BUS_T5K_POWExx( THIS$1, X$1, (N$1 + N$1) + 1ll );
   RESULT$1 = RESULT$1 + ((vr$7 * vr$11) * vr$15);
  }
  label$5806:;
  NA$1 = NA$1 + 0x1.p+0;
  label$5805:;
  if( NA$1 <= TMP$2913$2 ) goto label$5808;
  label$5807:;
 }
 fb$result$1 = RESULT$1;
 goto label$5804;
 label$5804:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T19K_GENERALSMOOTHSTEPEff( struct $12SYSTEM_BUS_T* THIS$1, float N$1, float X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5809:;
 double vr$1 = _ZN12SYSTEM_BUS_T7K_CLAMPEfff( THIS$1, X$1, 0x0p+0f, 0x1.p+0f );
 X$1 = (float)vr$1;
 double RESULT$1;
 RESULT$1 = 0x0p+0;
 double NA$1;
 __builtin_memset( &NA$1, 0, 8ll );
 {
  NA$1 = 0x0p+0;
  double TMP$2914$2;
  TMP$2914$2 = (double)N$1;
  goto label$5811;
  label$5814:;
  {
   double vr$6 = _ZN12SYSTEM_BUS_T16K_PASCALTRIANGLEEff( THIS$1, -0x1.p+0f - N$1, N$1 );
   double vr$10 = _ZN12SYSTEM_BUS_T16K_PASCALTRIANGLEEff( THIS$1, (N$1 * 0x1.p+1f) + 0x1.p+0f, N$1 - N$1 );
   double vr$14 = _ZN12SYSTEM_BUS_T5K_POWEff( THIS$1, X$1, (N$1 + N$1) + 0x1.p+0f );
   RESULT$1 = RESULT$1 + ((vr$6 * vr$10) * vr$14);
  }
  label$5812:;
  NA$1 = NA$1 + 0x1.p+0;
  label$5811:;
  if( NA$1 <= TMP$2914$2 ) goto label$5814;
  label$5813:;
 }
 fb$result$1 = RESULT$1;
 goto label$5810;
 label$5810:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T19K_GENERALSMOOTHSTEPEdd( struct $12SYSTEM_BUS_T* THIS$1, double N$1, double X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5815:;
 double vr$1 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, X$1, 0x0p+0, 0x1.p+0 );
 X$1 = vr$1;
 double RESULT$1;
 RESULT$1 = 0x0p+0;
 double NA$1;
 __builtin_memset( &NA$1, 0, 8ll );
 {
  NA$1 = 0x0p+0;
  double TMP$2915$2;
  TMP$2915$2 = N$1;
  goto label$5817;
  label$5820:;
  {
   double vr$4 = _ZN12SYSTEM_BUS_T16K_PASCALTRIANGLEEdd( THIS$1, -0x1.p+0 - N$1, N$1 );
   double vr$8 = _ZN12SYSTEM_BUS_T16K_PASCALTRIANGLEEdd( THIS$1, (N$1 * 0x1.p+1) + 0x1.p+0, N$1 - N$1 );
   double vr$12 = _ZN12SYSTEM_BUS_T5K_POWEdd( THIS$1, X$1, (N$1 + N$1) + 0x1.p+0 );
   RESULT$1 = RESULT$1 + ((vr$4 * vr$8) * vr$12);
  }
  label$5818:;
  NA$1 = NA$1 + 0x1.p+0;
  label$5817:;
  if( NA$1 <= TMP$2915$2 ) goto label$5820;
  label$5819:;
 }
 fb$result$1 = RESULT$1;
 goto label$5816;
 label$5816:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_MIXEhhh( struct $12SYSTEM_BUS_T* THIS$1, uint8 A$1, uint8 B$1, uint8 C$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5821:;
 fb$result$1 = (double)(((int64)A$1 * (-(int64)C$1 + 1ll)) + ((int64)B$1 * (int64)C$1));
 goto label$5822;
 label$5822:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_MIXEaaa( struct $12SYSTEM_BUS_T* THIS$1, int8 A$1, int8 B$1, int8 C$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5823:;
 fb$result$1 = (double)(((int64)A$1 * (-(int64)C$1 + 1ll)) + ((int64)B$1 * (int64)C$1));
 goto label$5824;
 label$5824:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_MIXEttt( struct $12SYSTEM_BUS_T* THIS$1, uint16 A$1, uint16 B$1, uint16 C$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5825:;
 fb$result$1 = (double)(((int64)A$1 * (-(int64)C$1 + 1ll)) + ((int64)B$1 * (int64)C$1));
 goto label$5826;
 label$5826:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_MIXEsss( struct $12SYSTEM_BUS_T* THIS$1, int16 A$1, int16 B$1, int16 C$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5827:;
 fb$result$1 = (double)(((int64)A$1 * (-(int64)C$1 + 1ll)) + ((int64)B$1 * (int64)C$1));
 goto label$5828;
 label$5828:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_MIXEjjj( struct $12SYSTEM_BUS_T* THIS$1, uint32 A$1, uint32 B$1, uint32 C$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5829:;
 fb$result$1 = (double)(((int64)A$1 * (-(int64)C$1 + 1ll)) + ((int64)B$1 * (int64)C$1));
 goto label$5830;
 label$5830:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_MIXEiii( struct $12SYSTEM_BUS_T* THIS$1, int32 A$1, int32 B$1, int32 C$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5831:;
 fb$result$1 = (double)(((int64)A$1 * (-(int64)C$1 + 1ll)) + ((int64)B$1 * (int64)C$1));
 goto label$5832;
 label$5832:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_MIXEyyy( struct $12SYSTEM_BUS_T* THIS$1, uint64 A$1, uint64 B$1, uint64 C$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5833:;
 fb$result$1 = (double)((A$1 * (-C$1 + 1ull)) + (B$1 * C$1));
 goto label$5834;
 label$5834:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_MIXExxx( struct $12SYSTEM_BUS_T* THIS$1, int64 A$1, int64 B$1, int64 C$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5835:;
 fb$result$1 = (double)((A$1 * (-C$1 + 1ll)) + (B$1 * C$1));
 goto label$5836;
 label$5836:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_MIXEfff( struct $12SYSTEM_BUS_T* THIS$1, float A$1, float B$1, float C$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5837:;
 fb$result$1 = (double)((A$1 * (0x1.p+0f - C$1)) + (B$1 * C$1));
 goto label$5838;
 label$5838:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_MIXEddd( struct $12SYSTEM_BUS_T* THIS$1, double A$1, double B$1, double C$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5839:;
 fb$result$1 = (A$1 * (0x1.p+0 - C$1)) + (B$1 * C$1);
 goto label$5840;
 label$5840:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_MIXER9_FLOAT128S1_S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* A$1, struct $9_FLOAT128* B$1, struct $9_FLOAT128* C$1 )
{
 struct $9_FLOAT128 TMP$2916$1;
 struct $9_FLOAT128 TMP$2917$1;
 struct $9_FLOAT128 TMP$2918$1;
 struct $9_FLOAT128 TMP$2919$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5841:;
 struct $9_FLOAT128* vr$2 = _ZmlR9_FLOAT128S0_( &TMP$2918$1, B$1, C$1 );
 struct $9_FLOAT128* vr$4 = _ZmidR9_FLOAT128( &TMP$2916$1, 0x1.p+0, C$1 );
 struct $9_FLOAT128* vr$6 = _ZmlR9_FLOAT128S0_( &TMP$2917$1, A$1, vr$4 );
 struct $9_FLOAT128* vr$8 = _ZplR9_FLOAT128S0_( &TMP$2919$1, vr$6, vr$2 );
 uint64 vr$9 = _ZN9_FLOAT128cvyEv( vr$8 );
 fb$result$1 = (double)vr$9;
 goto label$5842;
 label$5842:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_MIXER9_FLOAT256S1_S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* A$1, struct $9_FLOAT256* B$1, struct $9_FLOAT256* C$1 )
{
 struct $9_FLOAT256 TMP$2920$1;
 struct $9_FLOAT256 TMP$2921$1;
 struct $9_FLOAT256 TMP$2922$1;
 struct $9_FLOAT256 TMP$2923$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5843:;
 struct $9_FLOAT256* vr$2 = _ZmlR9_FLOAT256S0_( &TMP$2922$1, B$1, C$1 );
 struct $9_FLOAT256* vr$4 = _ZmidR9_FLOAT256( &TMP$2920$1, 0x1.p+0, C$1 );
 struct $9_FLOAT256* vr$6 = _ZmlR9_FLOAT256S0_( &TMP$2921$1, A$1, vr$4 );
 struct $9_FLOAT256* vr$8 = _ZplR9_FLOAT256S0_( &TMP$2923$1, vr$6, vr$2 );
 uint64 vr$9 = _ZN9_FLOAT256cvyEv( vr$8 );
 fb$result$1 = (double)vr$9;
 goto label$5844;
 label$5844:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_MIXER9_FLOAT512S1_S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* A$1, struct $9_FLOAT512* B$1, struct $9_FLOAT512* C$1 )
{
 struct $9_FLOAT512 TMP$2924$1;
 struct $9_FLOAT512 TMP$2925$1;
 struct $9_FLOAT512 TMP$2926$1;
 struct $9_FLOAT512 TMP$2927$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5845:;
 struct $9_FLOAT512* vr$2 = _ZmlR9_FLOAT512S0_( &TMP$2926$1, B$1, C$1 );
 struct $9_FLOAT512* vr$4 = _ZmidR9_FLOAT512( &TMP$2924$1, 0x1.p+0, C$1 );
 struct $9_FLOAT512* vr$6 = _ZmlR9_FLOAT512S0_( &TMP$2925$1, A$1, vr$4 );
 struct $9_FLOAT512* vr$8 = _ZplR9_FLOAT512S0_( &TMP$2927$1, vr$6, vr$2 );
 uint64 vr$9 = _ZN9_FLOAT512cvyEv( vr$8 );
 fb$result$1 = (double)vr$9;
 goto label$5846;
 label$5846:;
 return fb$result$1;
}

struct $7VECTOR2* _ZN12SYSTEM_BUS_T5K_MIXER7VECTOR2S1_S1_( struct $7VECTOR2* tmp$2928$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR2* A$1, struct $7VECTOR2* B$1, struct $7VECTOR2* C$1 )
{
 label$5847:;
 _ZN7VECTOR2C1Edd( tmp$2928$1, (*(double*)A$1 * (-(*(double*)C$1) + 0x1.p+0)) + (*(double*)B$1 * *(double*)C$1), (*(double*)((uint8*)A$1 + 8ll) * (-(*(double*)((uint8*)C$1 + 8ll)) + 0x1.p+0)) + (*(double*)((uint8*)B$1 + 8ll) * *(double*)((uint8*)C$1 + 8ll)) );
 goto label$5848;
 label$5848:;
 return tmp$2928$1;
}

struct $7VECTOR3* _ZN12SYSTEM_BUS_T5K_MIXER7VECTOR3S1_S1_( struct $7VECTOR3* tmp$2930$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* A$1, struct $7VECTOR3* B$1, struct $7VECTOR3* C$1 )
{
 label$5849:;
 _ZN7VECTOR3C1Eddd( tmp$2930$1, (*(double*)((uint8*)A$1 + 16ll) * (-(*(double*)((uint8*)C$1 + 16ll)) + 0x1.p+0)) + (*(double*)((uint8*)B$1 + 16ll) * *(double*)((uint8*)C$1 + 16ll)), (*(double*)((uint8*)A$1 + 24ll) * (-(*(double*)((uint8*)C$1 + 24ll)) + 0x1.p+0)) + (*(double*)((uint8*)B$1 + 24ll) * *(double*)((uint8*)C$1 + 24ll)), (*(double*)((uint8*)A$1 + 32ll) * (-(*(double*)((uint8*)C$1 + 32ll)) + 0x1.p+0)) + (*(double*)((uint8*)B$1 + 32ll) * *(double*)((uint8*)C$1 + 32ll)) );
 goto label$5850;
 label$5850:;
 return tmp$2930$1;
}

struct $7VECTOR4* _ZN12SYSTEM_BUS_T5K_MIXER7VECTOR4S1_S1_( struct $7VECTOR4* tmp$2932$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR4* A$1, struct $7VECTOR4* B$1, struct $7VECTOR4* C$1 )
{
 label$5851:;
 _ZN7VECTOR4C1Edddd( tmp$2932$1, (*(double*)((uint8*)A$1 + 40ll) * (-(*(double*)((uint8*)C$1 + 40ll)) + 0x1.p+0)) + (*(double*)((uint8*)B$1 + 40ll) * *(double*)((uint8*)C$1 + 40ll)), (*(double*)((uint8*)A$1 + 48ll) * (-(*(double*)((uint8*)C$1 + 48ll)) + 0x1.p+0)) + (*(double*)((uint8*)B$1 + 48ll) * *(double*)((uint8*)C$1 + 48ll)), (*(double*)((uint8*)A$1 + 56ll) * (-(*(double*)((uint8*)C$1 + 56ll)) + 0x1.p+0)) + (*(double*)((uint8*)B$1 + 56ll) * *(double*)((uint8*)C$1 + 56ll)), (*(double*)((uint8*)A$1 + 64ll) * (-(*(double*)((uint8*)C$1 + 64ll)) + 0x1.p+0)) + (*(double*)((uint8*)B$1 + 64ll) * *(double*)((uint8*)C$1 + 64ll)) );
 goto label$5852;
 label$5852:;
 return tmp$2932$1;
}

struct $7VECTOR2* _ZN12SYSTEM_BUS_T5K_MIXER7VECTOR2S1_d( struct $7VECTOR2* tmp$2934$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR2* A$1, struct $7VECTOR2* B$1, double C$1 )
{
 label$5853:;
 _ZN7VECTOR2C1Edd( tmp$2934$1, (*(double*)A$1 * (0x1.p+0 - C$1)) + (*(double*)B$1 * C$1), (*(double*)((uint8*)A$1 + 8ll) * (0x1.p+0 - C$1)) + (*(double*)((uint8*)B$1 + 8ll) * C$1) );
 goto label$5854;
 label$5854:;
 return tmp$2934$1;
}

struct $7VECTOR3* _ZN12SYSTEM_BUS_T5K_MIXER7VECTOR3S1_d( struct $7VECTOR3* tmp$2936$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* A$1, struct $7VECTOR3* B$1, double C$1 )
{
 label$5855:;
 _ZN7VECTOR3C1Eddd( tmp$2936$1, (*(double*)((uint8*)A$1 + 16ll) * (0x1.p+0 - C$1)) + (*(double*)((uint8*)B$1 + 16ll) * C$1), (*(double*)((uint8*)A$1 + 24ll) * (0x1.p+0 - C$1)) + (*(double*)((uint8*)B$1 + 24ll) * C$1), (*(double*)((uint8*)A$1 + 32ll) * (0x1.p+0 - C$1)) + (*(double*)((uint8*)B$1 + 32ll) * C$1) );
 goto label$5856;
 label$5856:;
 return tmp$2936$1;
}

struct $7VECTOR4* _ZN12SYSTEM_BUS_T5K_MIXER7VECTOR4S1_d( struct $7VECTOR4* tmp$2938$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR4* A$1, struct $7VECTOR4* B$1, double C$1 )
{
 label$5857:;
 _ZN7VECTOR4C1Edddd( tmp$2938$1, (*(double*)((uint8*)A$1 + 40ll) * (0x1.p+0 - C$1)) + (*(double*)((uint8*)B$1 + 40ll) * C$1), (*(double*)((uint8*)A$1 + 48ll) * (0x1.p+0 - C$1)) + (*(double*)((uint8*)B$1 + 48ll) * C$1), (*(double*)((uint8*)A$1 + 56ll) * (0x1.p+0 - C$1)) + (*(double*)((uint8*)B$1 + 56ll) * C$1), (*(double*)((uint8*)A$1 + 64ll) * (0x1.p+0 - C$1)) + (*(double*)((uint8*)B$1 + 64ll) * C$1) );
 goto label$5858;
 label$5858:;
 return tmp$2938$1;
}

double _ZN12SYSTEM_BUS_T6K_STEPEhh( struct $12SYSTEM_BUS_T* THIS$1, uint8 EDGE$1, uint8 X$1 )
{
 int64 TMP$2940$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5859:;
 if( (int64)X$1 >= (int64)EDGE$1 ) goto label$5861;
 TMP$2940$1 = 0ll;
 goto label$5862;
 label$5861:;
 TMP$2940$1 = 1ll;
 label$5862:;
 fb$result$1 = (double)TMP$2940$1;
 goto label$5860;
 label$5860:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_STEPEaa( struct $12SYSTEM_BUS_T* THIS$1, int8 EDGE$1, int8 X$1 )
{
 int64 TMP$2941$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5863:;
 if( (int64)X$1 >= (int64)EDGE$1 ) goto label$5865;
 TMP$2941$1 = 0ll;
 goto label$5866;
 label$5865:;
 TMP$2941$1 = 1ll;
 label$5866:;
 fb$result$1 = (double)TMP$2941$1;
 goto label$5864;
 label$5864:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_STEPEtt( struct $12SYSTEM_BUS_T* THIS$1, uint16 EDGE$1, uint16 X$1 )
{
 int64 TMP$2942$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5867:;
 if( (int64)X$1 >= (int64)EDGE$1 ) goto label$5869;
 TMP$2942$1 = 0ll;
 goto label$5870;
 label$5869:;
 TMP$2942$1 = 1ll;
 label$5870:;
 fb$result$1 = (double)TMP$2942$1;
 goto label$5868;
 label$5868:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_STEPEss( struct $12SYSTEM_BUS_T* THIS$1, int16 EDGE$1, int16 X$1 )
{
 int64 TMP$2943$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5871:;
 if( (int64)X$1 >= (int64)EDGE$1 ) goto label$5873;
 TMP$2943$1 = 0ll;
 goto label$5874;
 label$5873:;
 TMP$2943$1 = 1ll;
 label$5874:;
 fb$result$1 = (double)TMP$2943$1;
 goto label$5872;
 label$5872:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_STEPEjj( struct $12SYSTEM_BUS_T* THIS$1, uint32 EDGE$1, uint32 X$1 )
{
 int64 TMP$2944$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5875:;
 if( (int64)X$1 >= (int64)EDGE$1 ) goto label$5877;
 TMP$2944$1 = 0ll;
 goto label$5878;
 label$5877:;
 TMP$2944$1 = 1ll;
 label$5878:;
 fb$result$1 = (double)TMP$2944$1;
 goto label$5876;
 label$5876:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_STEPEii( struct $12SYSTEM_BUS_T* THIS$1, int32 EDGE$1, int32 X$1 )
{
 int64 TMP$2945$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5879:;
 if( (int64)X$1 >= (int64)EDGE$1 ) goto label$5881;
 TMP$2945$1 = 0ll;
 goto label$5882;
 label$5881:;
 TMP$2945$1 = 1ll;
 label$5882:;
 fb$result$1 = (double)TMP$2945$1;
 goto label$5880;
 label$5880:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_STEPEyy( struct $12SYSTEM_BUS_T* THIS$1, uint64 EDGE$1, uint64 X$1 )
{
 int64 TMP$2946$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5883:;
 if( X$1 >= EDGE$1 ) goto label$5885;
 TMP$2946$1 = 0ll;
 goto label$5886;
 label$5885:;
 TMP$2946$1 = 1ll;
 label$5886:;
 fb$result$1 = (double)TMP$2946$1;
 goto label$5884;
 label$5884:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_STEPExx( struct $12SYSTEM_BUS_T* THIS$1, int64 EDGE$1, int64 X$1 )
{
 int64 TMP$2947$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5887:;
 if( X$1 >= EDGE$1 ) goto label$5889;
 TMP$2947$1 = 0ll;
 goto label$5890;
 label$5889:;
 TMP$2947$1 = 1ll;
 label$5890:;
 fb$result$1 = (double)TMP$2947$1;
 goto label$5888;
 label$5888:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_STEPEdd( struct $12SYSTEM_BUS_T* THIS$1, double EDGE$1, double X$1 )
{
 int64 TMP$2948$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5891:;
 if( X$1 >= EDGE$1 ) goto label$5893;
 TMP$2948$1 = 0ll;
 goto label$5894;
 label$5893:;
 TMP$2948$1 = 1ll;
 label$5894:;
 fb$result$1 = (double)TMP$2948$1;
 goto label$5892;
 label$5892:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_STEPER9_FLOAT128S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* EDGE$1, struct $9_FLOAT128* X$1 )
{
 int64 TMP$2949$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5895:;
 uint64 vr$1 = _ZN9_FLOAT128cvyEv( X$1 );
 uint64 vr$2 = _ZN9_FLOAT128cvyEv( EDGE$1 );
 if( vr$1 >= vr$2 ) goto label$5897;
 TMP$2949$1 = 0ll;
 goto label$5898;
 label$5897:;
 TMP$2949$1 = 1ll;
 label$5898:;
 fb$result$1 = (double)TMP$2949$1;
 goto label$5896;
 label$5896:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_STEPER9_FLOAT256S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* EDGE$1, struct $9_FLOAT256* X$1 )
{
 int64 TMP$2950$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5899:;
 uint64 vr$1 = _ZN9_FLOAT256cvyEv( X$1 );
 uint64 vr$2 = _ZN9_FLOAT256cvyEv( EDGE$1 );
 if( vr$1 >= vr$2 ) goto label$5901;
 TMP$2950$1 = 0ll;
 goto label$5902;
 label$5901:;
 TMP$2950$1 = 1ll;
 label$5902:;
 fb$result$1 = (double)TMP$2950$1;
 goto label$5900;
 label$5900:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T6K_STEPER9_FLOAT512S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* EDGE$1, struct $9_FLOAT512* X$1 )
{
 int64 TMP$2951$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5903:;
 uint64 vr$1 = _ZN9_FLOAT512cvyEv( X$1 );
 uint64 vr$2 = _ZN9_FLOAT512cvyEv( EDGE$1 );
 if( vr$1 >= vr$2 ) goto label$5905;
 TMP$2951$1 = 0ll;
 goto label$5906;
 label$5905:;
 TMP$2951$1 = 1ll;
 label$5906:;
 fb$result$1 = (double)TMP$2951$1;
 goto label$5904;
 label$5904:;
 return fb$result$1;
}

struct $7VECTOR2* _ZN12SYSTEM_BUS_T6K_STEPER7VECTOR2S1_( struct $7VECTOR2* tmp$2952$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR2* EDGE$1, struct $7VECTOR2* X$1 )
{
 int64 TMP$2954$1;
 int64 TMP$2955$1;
 label$5907:;
 if( *(double*)((uint8*)X$1 + 8ll) >= *(double*)((uint8*)EDGE$1 + 8ll) ) goto label$5910;
 TMP$2955$1 = 0ll;
 goto label$5911;
 label$5910:;
 TMP$2955$1 = 1ll;
 label$5911:;
 if( *(double*)X$1 >= *(double*)EDGE$1 ) goto label$5909;
 TMP$2954$1 = 0ll;
 goto label$5912;
 label$5909:;
 TMP$2954$1 = 1ll;
 label$5912:;
 _ZN7VECTOR2C1Edd( tmp$2952$1, (double)TMP$2954$1, (double)TMP$2955$1 );
 goto label$5908;
 label$5908:;
 return tmp$2952$1;
}

struct $7VECTOR3* _ZN12SYSTEM_BUS_T6K_STEPER7VECTOR3S1_( struct $7VECTOR3* tmp$2956$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* EDGE$1, struct $7VECTOR3* X$1 )
{
 int64 TMP$2958$1;
 int64 TMP$2959$1;
 int64 TMP$2960$1;
 label$5913:;
 if( *(double*)((uint8*)X$1 + 32ll) >= *(double*)((uint8*)EDGE$1 + 32ll) ) goto label$5917;
 TMP$2960$1 = 0ll;
 goto label$5918;
 label$5917:;
 TMP$2960$1 = 1ll;
 label$5918:;
 if( *(double*)((uint8*)X$1 + 24ll) >= *(double*)((uint8*)EDGE$1 + 24ll) ) goto label$5916;
 TMP$2959$1 = 0ll;
 goto label$5919;
 label$5916:;
 TMP$2959$1 = 1ll;
 label$5919:;
 if( *(double*)((uint8*)X$1 + 16ll) >= *(double*)((uint8*)EDGE$1 + 16ll) ) goto label$5915;
 TMP$2958$1 = 0ll;
 goto label$5920;
 label$5915:;
 TMP$2958$1 = 1ll;
 label$5920:;
 _ZN7VECTOR3C1Eddd( tmp$2956$1, (double)TMP$2958$1, (double)TMP$2959$1, (double)TMP$2960$1 );
 goto label$5914;
 label$5914:;
 return tmp$2956$1;
}

struct $7VECTOR4* _ZN12SYSTEM_BUS_T6K_STEPER7VECTOR4S1_( struct $7VECTOR4* tmp$2961$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR4* EDGE$1, struct $7VECTOR4* X$1 )
{
 int64 TMP$2963$1;
 int64 TMP$2964$1;
 int64 TMP$2965$1;
 int64 TMP$2966$1;
 label$5921:;
 if( *(double*)((uint8*)X$1 + 64ll) >= *(double*)((uint8*)EDGE$1 + 64ll) ) goto label$5926;
 TMP$2966$1 = 0ll;
 goto label$5927;
 label$5926:;
 TMP$2966$1 = 1ll;
 label$5927:;
 if( *(double*)((uint8*)X$1 + 56ll) >= *(double*)((uint8*)EDGE$1 + 56ll) ) goto label$5925;
 TMP$2965$1 = 0ll;
 goto label$5928;
 label$5925:;
 TMP$2965$1 = 1ll;
 label$5928:;
 if( *(double*)((uint8*)X$1 + 48ll) >= *(double*)((uint8*)EDGE$1 + 48ll) ) goto label$5924;
 TMP$2964$1 = 0ll;
 goto label$5929;
 label$5924:;
 TMP$2964$1 = 1ll;
 label$5929:;
 if( *(double*)((uint8*)X$1 + 40ll) >= *(double*)((uint8*)EDGE$1 + 40ll) ) goto label$5923;
 TMP$2963$1 = 0ll;
 goto label$5930;
 label$5923:;
 TMP$2963$1 = 1ll;
 label$5930:;
 _ZN7VECTOR4C1Edddd( tmp$2961$1, (double)TMP$2963$1, (double)TMP$2964$1, (double)TMP$2965$1, (double)TMP$2966$1 );
 goto label$5922;
 label$5922:;
 return tmp$2961$1;
}

struct $7VECTOR2* _ZN12SYSTEM_BUS_T6K_STEPEdR7VECTOR2( struct $7VECTOR2* tmp$2967$1, struct $12SYSTEM_BUS_T* THIS$1, double EDGE$1, struct $7VECTOR2* X$1 )
{
 int64 TMP$2969$1;
 int64 TMP$2970$1;
 label$5931:;
 if( *(double*)((uint8*)X$1 + 8ll) >= EDGE$1 ) goto label$5934;
 TMP$2970$1 = 0ll;
 goto label$5935;
 label$5934:;
 TMP$2970$1 = 1ll;
 label$5935:;
 if( *(double*)X$1 >= EDGE$1 ) goto label$5933;
 TMP$2969$1 = 0ll;
 goto label$5936;
 label$5933:;
 TMP$2969$1 = 1ll;
 label$5936:;
 _ZN7VECTOR2C1Edd( tmp$2967$1, (double)TMP$2969$1, (double)TMP$2970$1 );
 goto label$5932;
 label$5932:;
 return tmp$2967$1;
}

struct $7VECTOR3* _ZN12SYSTEM_BUS_T6K_STEPEdR7VECTOR3( struct $7VECTOR3* tmp$2971$1, struct $12SYSTEM_BUS_T* THIS$1, double EDGE$1, struct $7VECTOR3* X$1 )
{
 int64 TMP$2973$1;
 int64 TMP$2974$1;
 int64 TMP$2975$1;
 label$5937:;
 if( *(double*)((uint8*)X$1 + 32ll) >= EDGE$1 ) goto label$5941;
 TMP$2975$1 = 0ll;
 goto label$5942;
 label$5941:;
 TMP$2975$1 = 1ll;
 label$5942:;
 if( *(double*)((uint8*)X$1 + 24ll) >= EDGE$1 ) goto label$5940;
 TMP$2974$1 = 0ll;
 goto label$5943;
 label$5940:;
 TMP$2974$1 = 1ll;
 label$5943:;
 if( *(double*)((uint8*)X$1 + 16ll) >= EDGE$1 ) goto label$5939;
 TMP$2973$1 = 0ll;
 goto label$5944;
 label$5939:;
 TMP$2973$1 = 1ll;
 label$5944:;
 _ZN7VECTOR3C1Eddd( tmp$2971$1, (double)TMP$2973$1, (double)TMP$2974$1, (double)TMP$2975$1 );
 goto label$5938;
 label$5938:;
 return tmp$2971$1;
}

struct $7VECTOR4* _ZN12SYSTEM_BUS_T6K_STEPEdR7VECTOR4( struct $7VECTOR4* tmp$2976$1, struct $12SYSTEM_BUS_T* THIS$1, double EDGE$1, struct $7VECTOR4* X$1 )
{
 int64 TMP$2978$1;
 int64 TMP$2979$1;
 int64 TMP$2980$1;
 int64 TMP$2981$1;
 label$5945:;
 if( *(double*)((uint8*)X$1 + 64ll) >= EDGE$1 ) goto label$5950;
 TMP$2981$1 = 0ll;
 goto label$5951;
 label$5950:;
 TMP$2981$1 = 1ll;
 label$5951:;
 if( *(double*)((uint8*)X$1 + 56ll) >= EDGE$1 ) goto label$5949;
 TMP$2980$1 = 0ll;
 goto label$5952;
 label$5949:;
 TMP$2980$1 = 1ll;
 label$5952:;
 if( *(double*)((uint8*)X$1 + 48ll) >= EDGE$1 ) goto label$5948;
 TMP$2979$1 = 0ll;
 goto label$5953;
 label$5948:;
 TMP$2979$1 = 1ll;
 label$5953:;
 if( *(double*)((uint8*)X$1 + 40ll) >= EDGE$1 ) goto label$5947;
 TMP$2978$1 = 0ll;
 goto label$5954;
 label$5947:;
 TMP$2978$1 = 1ll;
 label$5954:;
 _ZN7VECTOR4C1Edddd( tmp$2976$1, (double)TMP$2978$1, (double)TMP$2979$1, (double)TMP$2980$1, (double)TMP$2981$1 );
 goto label$5946;
 label$5946:;
 return tmp$2976$1;
}

double _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEhhh( struct $12SYSTEM_BUS_T* THIS$1, uint8 EDGE0$1, uint8 EDGE1$1, uint8 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5955:;
 if( (int64)X$1 >= (int64)EDGE0$1 ) goto label$5958;
 {
  fb$result$1 = 0x0p+0;
  goto label$5956;
  label$5958:;
 }
 if( (int64)X$1 < (int64)EDGE1$1 ) goto label$5960;
 {
  fb$result$1 = 0x1.p+0;
  goto label$5956;
  label$5960:;
 }
 X$1 = (uint8)((int32)__builtin_nearbyint( (double)((int64)X$1 - (int64)EDGE0$1) / (double)((int64)EDGE1$1 - (int64)EDGE0$1) ));
 fb$result$1 = (double)((int64)X$1 * (int64)X$1) * (-((double)(int64)X$1 * 0x1.p+1) + 0x1.8p+1);
 goto label$5956;
 label$5956:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEaaa( struct $12SYSTEM_BUS_T* THIS$1, int8 EDGE0$1, int8 EDGE1$1, int8 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5961:;
 if( (int64)X$1 >= (int64)EDGE0$1 ) goto label$5964;
 {
  fb$result$1 = 0x0p+0;
  goto label$5962;
  label$5964:;
 }
 if( (int64)X$1 < (int64)EDGE1$1 ) goto label$5966;
 {
  fb$result$1 = 0x1.p+0;
  goto label$5962;
  label$5966:;
 }
 X$1 = (int8)((int32)__builtin_nearbyint( (double)((int64)X$1 - (int64)EDGE0$1) / (double)((int64)EDGE1$1 - (int64)EDGE0$1) ));
 fb$result$1 = (double)((int64)X$1 * (int64)X$1) * (-((double)(int64)X$1 * 0x1.p+1) + 0x1.8p+1);
 goto label$5962;
 label$5962:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEttt( struct $12SYSTEM_BUS_T* THIS$1, uint16 EDGE0$1, uint16 EDGE1$1, uint16 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5967:;
 if( (int64)X$1 >= (int64)EDGE0$1 ) goto label$5970;
 {
  fb$result$1 = 0x0p+0;
  goto label$5968;
  label$5970:;
 }
 if( (int64)X$1 < (int64)EDGE1$1 ) goto label$5972;
 {
  fb$result$1 = 0x1.p+0;
  goto label$5968;
  label$5972:;
 }
 X$1 = (uint16)((int32)__builtin_nearbyint( (double)((int64)X$1 - (int64)EDGE0$1) / (double)((int64)EDGE1$1 - (int64)EDGE0$1) ));
 fb$result$1 = (double)((int64)X$1 * (int64)X$1) * (-((double)(int64)X$1 * 0x1.p+1) + 0x1.8p+1);
 goto label$5968;
 label$5968:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEsss( struct $12SYSTEM_BUS_T* THIS$1, int16 EDGE0$1, int16 EDGE1$1, int16 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5973:;
 if( (int64)X$1 >= (int64)EDGE0$1 ) goto label$5976;
 {
  fb$result$1 = 0x0p+0;
  goto label$5974;
  label$5976:;
 }
 if( (int64)X$1 < (int64)EDGE1$1 ) goto label$5978;
 {
  fb$result$1 = 0x1.p+0;
  goto label$5974;
  label$5978:;
 }
 X$1 = (int16)((int32)__builtin_nearbyint( (double)((int64)X$1 - (int64)EDGE0$1) / (double)((int64)EDGE1$1 - (int64)EDGE0$1) ));
 fb$result$1 = (double)((int64)X$1 * (int64)X$1) * (-((double)(int64)X$1 * 0x1.p+1) + 0x1.8p+1);
 goto label$5974;
 label$5974:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEjjj( struct $12SYSTEM_BUS_T* THIS$1, uint32 EDGE0$1, uint32 EDGE1$1, uint32 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5979:;
 if( (int64)X$1 >= (int64)EDGE0$1 ) goto label$5982;
 {
  fb$result$1 = 0x0p+0;
  goto label$5980;
  label$5982:;
 }
 if( (int64)X$1 < (int64)EDGE1$1 ) goto label$5984;
 {
  fb$result$1 = 0x1.p+0;
  goto label$5980;
  label$5984:;
 }
 X$1 = (uint32)((int64)__builtin_nearbyint( (double)((int64)X$1 - (int64)EDGE0$1) / (double)((int64)EDGE1$1 - (int64)EDGE0$1) ));
 fb$result$1 = (double)((int64)X$1 * (int64)X$1) * (-((double)(int64)X$1 * 0x1.p+1) + 0x1.8p+1);
 goto label$5980;
 label$5980:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEiii( struct $12SYSTEM_BUS_T* THIS$1, int32 EDGE0$1, int32 EDGE1$1, int32 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5985:;
 if( (int64)X$1 >= (int64)EDGE0$1 ) goto label$5988;
 {
  fb$result$1 = 0x0p+0;
  goto label$5986;
  label$5988:;
 }
 if( (int64)X$1 < (int64)EDGE1$1 ) goto label$5990;
 {
  fb$result$1 = 0x1.p+0;
  goto label$5986;
  label$5990:;
 }
 X$1 = ((int32)__builtin_nearbyint( (double)((int64)X$1 - (int64)EDGE0$1) / (double)((int64)EDGE1$1 - (int64)EDGE0$1) ));
 fb$result$1 = (double)((int64)X$1 * (int64)X$1) * (-((double)(int64)X$1 * 0x1.p+1) + 0x1.8p+1);
 goto label$5986;
 label$5986:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEyyy( struct $12SYSTEM_BUS_T* THIS$1, uint64 EDGE0$1, uint64 EDGE1$1, uint64 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5991:;
 if( X$1 >= EDGE0$1 ) goto label$5994;
 {
  fb$result$1 = 0x0p+0;
  goto label$5992;
  label$5994:;
 }
 if( X$1 < EDGE1$1 ) goto label$5996;
 {
  fb$result$1 = 0x1.p+0;
  goto label$5992;
  label$5996:;
 }
 X$1 = ((uint64)__builtin_nearbyint( (double)(X$1 - EDGE0$1) / (double)(EDGE1$1 - EDGE0$1) ));
 fb$result$1 = (double)(X$1 * X$1) * (-((double)X$1 * 0x1.p+1) + 0x1.8p+1);
 goto label$5992;
 label$5992:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPExxx( struct $12SYSTEM_BUS_T* THIS$1, int64 EDGE0$1, int64 EDGE1$1, int64 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$5997:;
 if( X$1 >= EDGE0$1 ) goto label$6000;
 {
  fb$result$1 = 0x0p+0;
  goto label$5998;
  label$6000:;
 }
 if( X$1 < EDGE1$1 ) goto label$6002;
 {
  fb$result$1 = 0x1.p+0;
  goto label$5998;
  label$6002:;
 }
 X$1 = ((int64)__builtin_nearbyint( (double)(X$1 - EDGE0$1) / (double)(EDGE1$1 - EDGE0$1) ));
 fb$result$1 = (double)(X$1 * X$1) * (-((double)X$1 * 0x1.p+1) + 0x1.8p+1);
 goto label$5998;
 label$5998:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEfff( struct $12SYSTEM_BUS_T* THIS$1, float EDGE0$1, float EDGE1$1, float X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6003:;
 if( X$1 >= EDGE0$1 ) goto label$6006;
 {
  fb$result$1 = 0x0p+0;
  goto label$6004;
  label$6006:;
 }
 if( X$1 < EDGE1$1 ) goto label$6008;
 {
  fb$result$1 = 0x1.p+0;
  goto label$6004;
  label$6008:;
 }
 X$1 = (float)((double)(X$1 - EDGE0$1) / (double)(EDGE1$1 - EDGE0$1));
 fb$result$1 = (double)(X$1 * X$1) * (-((double)X$1 * 0x1.p+1) + 0x1.8p+1);
 goto label$6004;
 label$6004:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEddd( struct $12SYSTEM_BUS_T* THIS$1, double EDGE0$1, double EDGE1$1, double X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6009:;
 if( X$1 >= EDGE0$1 ) goto label$6012;
 {
  fb$result$1 = 0x0p+0;
  goto label$6010;
  label$6012:;
 }
 if( X$1 < EDGE1$1 ) goto label$6014;
 {
  fb$result$1 = 0x1.p+0;
  goto label$6010;
  label$6014:;
 }
 X$1 = (X$1 - EDGE0$1) / (EDGE1$1 - EDGE0$1);
 fb$result$1 = (X$1 * X$1) * (-(X$1 * 0x1.p+1) + 0x1.8p+1);
 goto label$6010;
 label$6010:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPER9_FLOAT128S1_S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* EDGE0$1, struct $9_FLOAT128* EDGE1$1, struct $9_FLOAT128* X$1 )
{
 struct $9_FLOAT128 TMP$2982$1;
 struct $9_FLOAT128 TMP$2983$1;
 struct $9_FLOAT128 TMP$2984$1;
 struct $9_FLOAT128 TMP$2985$1;
 struct $9_FLOAT128 TMP$2986$1;
 struct $9_FLOAT128 TMP$2987$1;
 struct $9_FLOAT128 TMP$2988$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6015:;
 uint64 vr$1 = _ZN9_FLOAT128cvyEv( X$1 );
 uint64 vr$2 = _ZN9_FLOAT128cvyEv( EDGE0$1 );
 if( vr$1 >= vr$2 ) goto label$6018;
 {
  fb$result$1 = 0x0p+0;
  goto label$6016;
  label$6018:;
 }
 uint64 vr$3 = _ZN9_FLOAT128cvyEv( X$1 );
 uint64 vr$4 = _ZN9_FLOAT128cvyEv( EDGE1$1 );
 if( vr$3 < vr$4 ) goto label$6020;
 {
  fb$result$1 = 0x1.p+0;
  goto label$6016;
  label$6020:;
 }
 struct $9_FLOAT128* vr$6 = _ZmiR9_FLOAT128S0_( &TMP$2983$1, EDGE1$1, EDGE0$1 );
 struct $9_FLOAT128* vr$8 = _ZmiR9_FLOAT128S0_( &TMP$2982$1, X$1, EDGE0$1 );
 struct $9_FLOAT128* vr$10 = _ZdvR9_FLOAT128S0_( &TMP$2984$1, vr$8, vr$6 );
 _ZN9_FLOAT128aSERS_( X$1, vr$10 );
 struct $9_FLOAT128* vr$12 = _ZmldR9_FLOAT128( &TMP$2986$1, 0x1.p+1, X$1 );
 struct $9_FLOAT128* vr$14 = _ZmidR9_FLOAT128( &TMP$2987$1, 0x1.8p+1, vr$12 );
 struct $9_FLOAT128* vr$16 = _ZmlR9_FLOAT128S0_( &TMP$2985$1, X$1, X$1 );
 struct $9_FLOAT128* vr$18 = _ZmlR9_FLOAT128S0_( &TMP$2988$1, vr$16, vr$14 );
 uint64 vr$19 = _ZN9_FLOAT128cvyEv( vr$18 );
 fb$result$1 = (double)vr$19;
 goto label$6016;
 label$6016:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPER9_FLOAT256S1_S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* EDGE0$1, struct $9_FLOAT256* EDGE1$1, struct $9_FLOAT256* X$1 )
{
 struct $9_FLOAT256 TMP$2989$1;
 struct $9_FLOAT256 TMP$2990$1;
 struct $9_FLOAT256 TMP$2991$1;
 struct $9_FLOAT256 TMP$2992$1;
 struct $9_FLOAT256 TMP$2993$1;
 struct $9_FLOAT256 TMP$2994$1;
 struct $9_FLOAT256 TMP$2995$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6021:;
 uint64 vr$1 = _ZN9_FLOAT256cvyEv( X$1 );
 uint64 vr$2 = _ZN9_FLOAT256cvyEv( EDGE0$1 );
 if( vr$1 >= vr$2 ) goto label$6024;
 {
  fb$result$1 = 0x0p+0;
  goto label$6022;
  label$6024:;
 }
 uint64 vr$3 = _ZN9_FLOAT256cvyEv( X$1 );
 uint64 vr$4 = _ZN9_FLOAT256cvyEv( EDGE1$1 );
 if( vr$3 < vr$4 ) goto label$6026;
 {
  fb$result$1 = 0x1.p+0;
  goto label$6022;
  label$6026:;
 }
 struct $9_FLOAT256* vr$6 = _ZmiR9_FLOAT256S0_( &TMP$2990$1, EDGE1$1, EDGE0$1 );
 struct $9_FLOAT256* vr$8 = _ZmiR9_FLOAT256S0_( &TMP$2989$1, X$1, EDGE0$1 );
 struct $9_FLOAT256* vr$10 = _ZdvR9_FLOAT256S0_( &TMP$2991$1, vr$8, vr$6 );
 _ZN9_FLOAT256aSERS_( X$1, vr$10 );
 struct $9_FLOAT256* vr$12 = _ZmldR9_FLOAT256( &TMP$2993$1, 0x1.p+1, X$1 );
 struct $9_FLOAT256* vr$14 = _ZmidR9_FLOAT256( &TMP$2994$1, 0x1.8p+1, vr$12 );
 struct $9_FLOAT256* vr$16 = _ZmlR9_FLOAT256S0_( &TMP$2992$1, X$1, X$1 );
 struct $9_FLOAT256* vr$18 = _ZmlR9_FLOAT256S0_( &TMP$2995$1, vr$16, vr$14 );
 uint64 vr$19 = _ZN9_FLOAT256cvyEv( vr$18 );
 fb$result$1 = (double)vr$19;
 goto label$6022;
 label$6022:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPER9_FLOAT512S1_S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* EDGE0$1, struct $9_FLOAT512* EDGE1$1, struct $9_FLOAT512* X$1 )
{
 struct $9_FLOAT512 TMP$2996$1;
 struct $9_FLOAT512 TMP$2997$1;
 struct $9_FLOAT512 TMP$2998$1;
 struct $9_FLOAT512 TMP$2999$1;
 struct $9_FLOAT512 TMP$3000$1;
 struct $9_FLOAT512 TMP$3001$1;
 struct $9_FLOAT512 TMP$3002$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6027:;
 uint64 vr$1 = _ZN9_FLOAT512cvyEv( X$1 );
 uint64 vr$2 = _ZN9_FLOAT512cvyEv( EDGE0$1 );
 if( vr$1 >= vr$2 ) goto label$6030;
 {
  fb$result$1 = 0x0p+0;
  goto label$6028;
  label$6030:;
 }
 uint64 vr$3 = _ZN9_FLOAT512cvyEv( X$1 );
 uint64 vr$4 = _ZN9_FLOAT512cvyEv( EDGE1$1 );
 if( vr$3 < vr$4 ) goto label$6032;
 {
  fb$result$1 = 0x1.p+0;
  goto label$6028;
  label$6032:;
 }
 struct $9_FLOAT512* vr$6 = _ZmiR9_FLOAT512S0_( &TMP$2997$1, EDGE1$1, EDGE0$1 );
 struct $9_FLOAT512* vr$8 = _ZmiR9_FLOAT512S0_( &TMP$2996$1, X$1, EDGE0$1 );
 struct $9_FLOAT512* vr$10 = _ZdvR9_FLOAT512S0_( &TMP$2998$1, vr$8, vr$6 );
 _ZN9_FLOAT512aSERS_( X$1, vr$10 );
 struct $9_FLOAT512* vr$12 = _ZmldR9_FLOAT512( &TMP$3000$1, 0x1.p+1, X$1 );
 struct $9_FLOAT512* vr$14 = _ZmidR9_FLOAT512( &TMP$3001$1, 0x1.8p+1, vr$12 );
 struct $9_FLOAT512* vr$16 = _ZmlR9_FLOAT512S0_( &TMP$2999$1, X$1, X$1 );
 struct $9_FLOAT512* vr$18 = _ZmlR9_FLOAT512S0_( &TMP$3002$1, vr$16, vr$14 );
 uint64 vr$19 = _ZN9_FLOAT512cvyEv( vr$18 );
 fb$result$1 = (double)vr$19;
 goto label$6028;
 label$6028:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T14K_SMOOTHERSTEPEhhh( struct $12SYSTEM_BUS_T* THIS$1, uint8 EDGE0$1, uint8 EDGE1$1, uint8 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6033:;
 double vr$10 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, (double)((int64)X$1 - (int64)EDGE0$1) / (double)((int64)EDGE1$1 - (int64)EDGE0$1), 0x0p+0, 0x1.p+0 );
 X$1 = (uint8)((int32)__builtin_nearbyint( vr$10 ));
 fb$result$1 = (double)((((int64)X$1 * (int64)X$1) * (int64)X$1) * (((int64)X$1 * (((int64)X$1 * 6ll) + -15ll)) + 10ll));
 goto label$6034;
 label$6034:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T14K_SMOOTHERSTEPEaaa( struct $12SYSTEM_BUS_T* THIS$1, int8 EDGE0$1, int8 EDGE1$1, int8 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6035:;
 double vr$10 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, (double)((int64)X$1 - (int64)EDGE0$1) / (double)((int64)EDGE1$1 - (int64)EDGE0$1), 0x0p+0, 0x1.p+0 );
 X$1 = (int8)((int32)__builtin_nearbyint( vr$10 ));
 fb$result$1 = (double)((((int64)X$1 * (int64)X$1) * (int64)X$1) * (((int64)X$1 * (((int64)X$1 * 6ll) + -15ll)) + 10ll));
 goto label$6036;
 label$6036:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T14K_SMOOTHERSTEPEttt( struct $12SYSTEM_BUS_T* THIS$1, uint16 EDGE0$1, uint16 EDGE1$1, uint16 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6037:;
 double vr$10 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, (double)((int64)X$1 - (int64)EDGE0$1) / (double)((int64)EDGE1$1 - (int64)EDGE0$1), 0x0p+0, 0x1.p+0 );
 X$1 = (uint16)((int32)__builtin_nearbyint( vr$10 ));
 fb$result$1 = (double)((((int64)X$1 * (int64)X$1) * (int64)X$1) * (((int64)X$1 * (((int64)X$1 * 6ll) + -15ll)) + 10ll));
 goto label$6038;
 label$6038:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T14K_SMOOTHERSTEPEsss( struct $12SYSTEM_BUS_T* THIS$1, int16 EDGE0$1, int16 EDGE1$1, int16 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6039:;
 double vr$10 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, (double)((int64)X$1 - (int64)EDGE0$1) / (double)((int64)EDGE1$1 - (int64)EDGE0$1), 0x0p+0, 0x1.p+0 );
 X$1 = (int16)((int32)__builtin_nearbyint( vr$10 ));
 fb$result$1 = (double)((((int64)X$1 * (int64)X$1) * (int64)X$1) * (((int64)X$1 * (((int64)X$1 * 6ll) + -15ll)) + 10ll));
 goto label$6040;
 label$6040:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T14K_SMOOTHERSTEPEjjj( struct $12SYSTEM_BUS_T* THIS$1, uint32 EDGE0$1, uint32 EDGE1$1, uint32 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6041:;
 double vr$10 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, (double)((int64)X$1 - (int64)EDGE0$1) / (double)((int64)EDGE1$1 - (int64)EDGE0$1), 0x0p+0, 0x1.p+0 );
 X$1 = (uint32)((int64)__builtin_nearbyint( vr$10 ));
 fb$result$1 = (double)((((int64)X$1 * (int64)X$1) * (int64)X$1) * (((int64)X$1 * (((int64)X$1 * 6ll) + -15ll)) + 10ll));
 goto label$6042;
 label$6042:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T14K_SMOOTHERSTEPEiii( struct $12SYSTEM_BUS_T* THIS$1, int32 EDGE0$1, int32 EDGE1$1, int32 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6043:;
 double vr$10 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, (double)((int64)X$1 - (int64)EDGE0$1) / (double)((int64)EDGE1$1 - (int64)EDGE0$1), 0x0p+0, 0x1.p+0 );
 X$1 = ((int32)__builtin_nearbyint( vr$10 ));
 fb$result$1 = (double)((((int64)X$1 * (int64)X$1) * (int64)X$1) * (((int64)X$1 * (((int64)X$1 * 6ll) + -15ll)) + 10ll));
 goto label$6044;
 label$6044:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T14K_SMOOTHERSTEPEyyy( struct $12SYSTEM_BUS_T* THIS$1, uint64 EDGE0$1, uint64 EDGE1$1, uint64 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6045:;
 double vr$6 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, (double)(X$1 - EDGE0$1) / (double)(EDGE1$1 - EDGE0$1), 0x0p+0, 0x1.p+0 );
 X$1 = ((uint64)__builtin_nearbyint( vr$6 ));
 fb$result$1 = (double)(((X$1 * X$1) * X$1) * ((X$1 * ((X$1 * 6ull) + 18446744073709551601ull)) + 10ull));
 goto label$6046;
 label$6046:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T14K_SMOOTHERSTEPExxx( struct $12SYSTEM_BUS_T* THIS$1, int64 EDGE0$1, int64 EDGE1$1, int64 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6047:;
 double vr$6 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, (double)(X$1 - EDGE0$1) / (double)(EDGE1$1 - EDGE0$1), 0x0p+0, 0x1.p+0 );
 X$1 = ((int64)__builtin_nearbyint( vr$6 ));
 fb$result$1 = (double)(((X$1 * X$1) * X$1) * ((X$1 * ((X$1 * 6ll) + -15ll)) + 10ll));
 goto label$6048;
 label$6048:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T14K_SMOOTHERSTEPEfff( struct $12SYSTEM_BUS_T* THIS$1, float EDGE0$1, float EDGE1$1, float X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6049:;
 double vr$5 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, (double)(float)((double)(X$1 - EDGE0$1) / (double)(EDGE1$1 - EDGE0$1)), 0x0p+0, 0x1.p+0 );
 X$1 = (float)vr$5;
 fb$result$1 = (double)(((X$1 * X$1) * X$1) * ((X$1 * ((X$1 * 0x1.8p+2f) + -0x1.Ep+3f)) + 0x1.4p+3f));
 goto label$6050;
 label$6050:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T14K_SMOOTHERSTEPEddd( struct $12SYSTEM_BUS_T* THIS$1, double EDGE0$1, double EDGE1$1, double X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6051:;
 double vr$4 = _ZN12SYSTEM_BUS_T7K_CLAMPEddd( THIS$1, (X$1 - EDGE0$1) / (EDGE1$1 - EDGE0$1), 0x0p+0, 0x1.p+0 );
 X$1 = vr$4;
 fb$result$1 = ((X$1 * X$1) * X$1) * ((X$1 * ((X$1 * 0x1.8p+2) + -0x1.Ep+3)) + 0x1.4p+3);
 goto label$6052;
 label$6052:;
 return fb$result$1;
}

struct $7VECTOR2* _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPER7VECTOR2S1_S1_( struct $7VECTOR2* tmp$3003$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR2* EDGE0$1, struct $7VECTOR2* EDGE1$1, struct $7VECTOR2* X$1 )
{
 label$6053:;
 double vr$3 = _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEddd( THIS$1, *(double*)((uint8*)EDGE0$1 + 8ll), *(double*)((uint8*)EDGE1$1 + 8ll), *(double*)((uint8*)X$1 + 8ll) );
 double vr$7 = _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEddd( THIS$1, *(double*)EDGE0$1, *(double*)EDGE1$1, *(double*)X$1 );
 _ZN7VECTOR2C1Edd( tmp$3003$1, vr$7, vr$3 );
 goto label$6054;
 label$6054:;
 return tmp$3003$1;
}

struct $7VECTOR3* _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPER7VECTOR3S1_S1_( struct $7VECTOR3* tmp$3005$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* EDGE0$1, struct $7VECTOR3* EDGE1$1, struct $7VECTOR3* X$1 )
{
 label$6055:;
 double vr$3 = _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEddd( THIS$1, *(double*)((uint8*)EDGE0$1 + 32ll), *(double*)((uint8*)EDGE1$1 + 32ll), *(double*)((uint8*)X$1 + 32ll) );
 double vr$7 = _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEddd( THIS$1, *(double*)((uint8*)EDGE0$1 + 24ll), *(double*)((uint8*)EDGE1$1 + 24ll), *(double*)((uint8*)X$1 + 24ll) );
 double vr$11 = _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEddd( THIS$1, *(double*)((uint8*)EDGE0$1 + 16ll), *(double*)((uint8*)EDGE1$1 + 16ll), *(double*)((uint8*)X$1 + 16ll) );
 _ZN7VECTOR3C1Eddd( tmp$3005$1, vr$11, vr$7, vr$3 );
 goto label$6056;
 label$6056:;
 return tmp$3005$1;
}

struct $7VECTOR4* _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPER7VECTOR4S1_S1_( struct $7VECTOR4* tmp$3007$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR4* EDGE0$1, struct $7VECTOR4* EDGE1$1, struct $7VECTOR4* X$1 )
{
 label$6057:;
 double vr$3 = _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEddd( THIS$1, *(double*)((uint8*)EDGE0$1 + 64ll), *(double*)((uint8*)EDGE1$1 + 64ll), *(double*)((uint8*)X$1 + 64ll) );
 double vr$7 = _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEddd( THIS$1, *(double*)((uint8*)EDGE0$1 + 56ll), *(double*)((uint8*)EDGE1$1 + 56ll), *(double*)((uint8*)X$1 + 56ll) );
 double vr$11 = _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEddd( THIS$1, *(double*)((uint8*)EDGE0$1 + 48ll), *(double*)((uint8*)EDGE1$1 + 48ll), *(double*)((uint8*)X$1 + 48ll) );
 double vr$15 = _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEddd( THIS$1, *(double*)((uint8*)EDGE0$1 + 40ll), *(double*)((uint8*)EDGE1$1 + 40ll), *(double*)((uint8*)X$1 + 40ll) );
 _ZN7VECTOR4C1Edddd( tmp$3007$1, vr$15, vr$11, vr$7, vr$3 );
 goto label$6058;
 label$6058:;
 return tmp$3007$1;
}

struct $7VECTOR2* _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEddR7VECTOR2( struct $7VECTOR2* tmp$3009$1, struct $12SYSTEM_BUS_T* THIS$1, double EDGE0$1, double EDGE1$1, struct $7VECTOR2* X$1 )
{
 label$6059:;
 double vr$1 = _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEddd( THIS$1, EDGE0$1, EDGE1$1, *(double*)((uint8*)X$1 + 8ll) );
 double vr$3 = _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEddd( THIS$1, EDGE0$1, EDGE1$1, *(double*)X$1 );
 _ZN7VECTOR2C1Edd( tmp$3009$1, vr$3, vr$1 );
 goto label$6060;
 label$6060:;
 return tmp$3009$1;
}

struct $7VECTOR3* _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEddR7VECTOR3( struct $7VECTOR3* tmp$3011$1, struct $12SYSTEM_BUS_T* THIS$1, double EDGE0$1, double EDGE1$1, struct $7VECTOR3* X$1 )
{
 label$6061:;
 double vr$1 = _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEddd( THIS$1, EDGE0$1, EDGE1$1, *(double*)((uint8*)X$1 + 32ll) );
 double vr$3 = _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEddd( THIS$1, EDGE0$1, EDGE1$1, *(double*)((uint8*)X$1 + 24ll) );
 double vr$5 = _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEddd( THIS$1, EDGE0$1, EDGE1$1, *(double*)((uint8*)X$1 + 16ll) );
 _ZN7VECTOR3C1Eddd( tmp$3011$1, vr$5, vr$3, vr$1 );
 goto label$6062;
 label$6062:;
 return tmp$3011$1;
}

struct $7VECTOR4* _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEddR7VECTOR4( struct $7VECTOR4* tmp$3013$1, struct $12SYSTEM_BUS_T* THIS$1, double EDGE0$1, double EDGE1$1, struct $7VECTOR4* X$1 )
{
 label$6063:;
 double vr$1 = _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEddd( THIS$1, EDGE0$1, EDGE1$1, *(double*)((uint8*)X$1 + 64ll) );
 double vr$3 = _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEddd( THIS$1, EDGE0$1, EDGE1$1, *(double*)((uint8*)X$1 + 56ll) );
 double vr$5 = _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEddd( THIS$1, EDGE0$1, EDGE1$1, *(double*)((uint8*)X$1 + 48ll) );
 double vr$7 = _ZN12SYSTEM_BUS_T12K_SMOOTHSTEPEddd( THIS$1, EDGE0$1, EDGE1$1, *(double*)((uint8*)X$1 + 40ll) );
 _ZN7VECTOR4C1Edddd( tmp$3013$1, vr$7, vr$5, vr$3, vr$1 );
 goto label$6064;
 label$6064:;
 return tmp$3013$1;
}

double _ZN12SYSTEM_BUS_T20K_INVERSE_SMOOTHSTEPEh( struct $12SYSTEM_BUS_T* THIS$1, uint8 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6065:;
 fb$result$1 = -(__builtin_sin( (__builtin_asin( (-((double)(int64)X$1 * 0x1.p+1) + 0x1.p+0) ) / 0x1.8p+1) )) + 0x1.p-1;
 goto label$6066;
 label$6066:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T20K_INVERSE_SMOOTHSTEPEa( struct $12SYSTEM_BUS_T* THIS$1, int8 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6067:;
 fb$result$1 = -(__builtin_sin( (__builtin_asin( (-((double)(int64)X$1 * 0x1.p+1) + 0x1.p+0) ) / 0x1.8p+1) )) + 0x1.p-1;
 goto label$6068;
 label$6068:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T20K_INVERSE_SMOOTHSTEPEt( struct $12SYSTEM_BUS_T* THIS$1, uint16 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6069:;
 fb$result$1 = -(__builtin_sin( (__builtin_asin( (-((double)(int64)X$1 * 0x1.p+1) + 0x1.p+0) ) / 0x1.8p+1) )) + 0x1.p-1;
 goto label$6070;
 label$6070:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T20K_INVERSE_SMOOTHSTEPEs( struct $12SYSTEM_BUS_T* THIS$1, int16 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6071:;
 fb$result$1 = -(__builtin_sin( (__builtin_asin( (-((double)(int64)X$1 * 0x1.p+1) + 0x1.p+0) ) / 0x1.8p+1) )) + 0x1.p-1;
 goto label$6072;
 label$6072:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T20K_INVERSE_SMOOTHSTEPEj( struct $12SYSTEM_BUS_T* THIS$1, uint32 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6073:;
 fb$result$1 = -(__builtin_sin( (__builtin_asin( (-((double)(int64)X$1 * 0x1.p+1) + 0x1.p+0) ) / 0x1.8p+1) )) + 0x1.p-1;
 goto label$6074;
 label$6074:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T20K_INVERSE_SMOOTHSTEPEi( struct $12SYSTEM_BUS_T* THIS$1, int32 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6075:;
 fb$result$1 = -(__builtin_sin( (__builtin_asin( (-((double)(int64)X$1 * 0x1.p+1) + 0x1.p+0) ) / 0x1.8p+1) )) + 0x1.p-1;
 goto label$6076;
 label$6076:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T20K_INVERSE_SMOOTHSTEPEy( struct $12SYSTEM_BUS_T* THIS$1, uint64 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6077:;
 fb$result$1 = -(__builtin_sin( (__builtin_asin( (-((double)X$1 * 0x1.p+1) + 0x1.p+0) ) / 0x1.8p+1) )) + 0x1.p-1;
 goto label$6078;
 label$6078:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T20K_INVERSE_SMOOTHSTEPEx( struct $12SYSTEM_BUS_T* THIS$1, int64 X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6079:;
 fb$result$1 = -(__builtin_sin( (__builtin_asin( (-((double)X$1 * 0x1.p+1) + 0x1.p+0) ) / 0x1.8p+1) )) + 0x1.p-1;
 goto label$6080;
 label$6080:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T20K_INVERSE_SMOOTHSTEPEf( struct $12SYSTEM_BUS_T* THIS$1, float X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6081:;
 fb$result$1 = -(__builtin_sin( (__builtin_asin( (-((double)X$1 * 0x1.p+1) + 0x1.p+0) ) / 0x1.8p+1) )) + 0x1.p-1;
 goto label$6082;
 label$6082:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T20K_INVERSE_SMOOTHSTEPEd( struct $12SYSTEM_BUS_T* THIS$1, double X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6083:;
 fb$result$1 = -(__builtin_sin( (__builtin_asin( (-(X$1 * 0x1.p+1) + 0x1.p+0) ) / 0x1.8p+1) )) + 0x1.p-1;
 goto label$6084;
 label$6084:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T9K_LENGTH2Eh( struct $12SYSTEM_BUS_T* THIS$1, uint8 A$1 )
{
 int64 TMP$3015$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6085:;
 if( (int64)A$1 >= 0ll ) goto label$6087;
 TMP$3015$1 = -(int64)A$1;
 goto label$6088;
 label$6087:;
 TMP$3015$1 = (int64)A$1;
 label$6088:;
 fb$result$1 = (double)TMP$3015$1;
 goto label$6086;
 label$6086:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T9K_LENGTH2Ea( struct $12SYSTEM_BUS_T* THIS$1, int8 A$1 )
{
 int64 TMP$3016$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6089:;
 if( (int64)A$1 >= 0ll ) goto label$6091;
 TMP$3016$1 = -(int64)A$1;
 goto label$6092;
 label$6091:;
 TMP$3016$1 = (int64)A$1;
 label$6092:;
 fb$result$1 = (double)TMP$3016$1;
 goto label$6090;
 label$6090:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T9K_LENGTH2Et( struct $12SYSTEM_BUS_T* THIS$1, uint16 A$1 )
{
 int64 TMP$3017$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6093:;
 if( (int64)A$1 >= 0ll ) goto label$6095;
 TMP$3017$1 = -(int64)A$1;
 goto label$6096;
 label$6095:;
 TMP$3017$1 = (int64)A$1;
 label$6096:;
 fb$result$1 = (double)TMP$3017$1;
 goto label$6094;
 label$6094:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T9K_LENGTH2Es( struct $12SYSTEM_BUS_T* THIS$1, int16 A$1 )
{
 int64 TMP$3018$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6097:;
 if( (int64)A$1 >= 0ll ) goto label$6099;
 TMP$3018$1 = -(int64)A$1;
 goto label$6100;
 label$6099:;
 TMP$3018$1 = (int64)A$1;
 label$6100:;
 fb$result$1 = (double)TMP$3018$1;
 goto label$6098;
 label$6098:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T9K_LENGTH2Ej( struct $12SYSTEM_BUS_T* THIS$1, uint32 A$1 )
{
 int64 TMP$3019$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6101:;
 if( (int64)A$1 >= 0ll ) goto label$6103;
 TMP$3019$1 = -(int64)A$1;
 goto label$6104;
 label$6103:;
 TMP$3019$1 = (int64)A$1;
 label$6104:;
 fb$result$1 = (double)TMP$3019$1;
 goto label$6102;
 label$6102:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T9K_LENGTH2Ei( struct $12SYSTEM_BUS_T* THIS$1, int32 A$1 )
{
 int64 TMP$3020$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6105:;
 if( (int64)A$1 >= 0ll ) goto label$6107;
 TMP$3020$1 = -(int64)A$1;
 goto label$6108;
 label$6107:;
 TMP$3020$1 = (int64)A$1;
 label$6108:;
 fb$result$1 = (double)TMP$3020$1;
 goto label$6106;
 label$6106:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T9K_LENGTH2Ey( struct $12SYSTEM_BUS_T* THIS$1, uint64 A$1 )
{
 uint64 TMP$3021$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6109:;
 if( A$1 >= 0ull ) goto label$6111;
 TMP$3021$1 = -A$1;
 goto label$6112;
 label$6111:;
 TMP$3021$1 = A$1;
 label$6112:;
 fb$result$1 = (double)TMP$3021$1;
 goto label$6110;
 label$6110:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T9K_LENGTH2Ex( struct $12SYSTEM_BUS_T* THIS$1, int64 A$1 )
{
 int64 TMP$3022$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6113:;
 if( A$1 >= 0ll ) goto label$6115;
 TMP$3022$1 = -A$1;
 goto label$6116;
 label$6115:;
 TMP$3022$1 = A$1;
 label$6116:;
 fb$result$1 = (double)TMP$3022$1;
 goto label$6114;
 label$6114:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T9K_LENGTH2Ef( struct $12SYSTEM_BUS_T* THIS$1, float A$1 )
{
 float TMP$3023$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6117:;
 if( A$1 >= 0x0p+0f ) goto label$6119;
 TMP$3023$1 = -A$1;
 goto label$6120;
 label$6119:;
 TMP$3023$1 = A$1;
 label$6120:;
 fb$result$1 = (double)TMP$3023$1;
 goto label$6118;
 label$6118:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T9K_LENGTH2Ed( struct $12SYSTEM_BUS_T* THIS$1, double A$1 )
{
 double TMP$3024$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6121:;
 if( A$1 >= 0x0p+0 ) goto label$6123;
 TMP$3024$1 = -A$1;
 goto label$6124;
 label$6123:;
 TMP$3024$1 = A$1;
 label$6124:;
 fb$result$1 = TMP$3024$1;
 goto label$6122;
 label$6122:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T9K_LENGTH2ERK9_FLOAT128( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* V$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6125:;
 fb$result$1 = (((*(double*)V$1 * *(double*)V$1) + (*(double*)((uint8*)V$1 + 8ll) * *(double*)((uint8*)V$1 + 8ll))) + (*(double*)V$1 * *(double*)V$1)) + (*(double*)((uint8*)V$1 + 8ll) * *(double*)((uint8*)V$1 + 8ll));
 goto label$6126;
 label$6126:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T9K_LENGTH2ERK9_FLOAT256( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* V$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6127:;
 fb$result$1 = (((*(double*)V$1 * *(double*)V$1) + (*(double*)V$1 * *(double*)V$1)) + (*(double*)V$1 * *(double*)V$1)) + (*(double*)V$1 * *(double*)V$1);
 goto label$6128;
 label$6128:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T9K_LENGTH2ERK9_FLOAT512( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* V$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6129:;
 fb$result$1 = (((*(double*)V$1 * *(double*)V$1) + (*(double*)V$1 * *(double*)V$1)) + (*(double*)V$1 * *(double*)V$1)) + (*(double*)V$1 * *(double*)V$1);
 goto label$6130;
 label$6130:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T9K_LENGTH2ERK7VECTOR2( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR2* V$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6131:;
 fb$result$1 = (*(double*)V$1 * *(double*)V$1) + (*(double*)((uint8*)V$1 + 8ll) * *(double*)((uint8*)V$1 + 8ll));
 goto label$6132;
 label$6132:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T9K_LENGTH2ERK7VECTOR3( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* V$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6133:;
 fb$result$1 = ((*(double*)((uint8*)V$1 + 16ll) * *(double*)((uint8*)V$1 + 16ll)) + (*(double*)((uint8*)V$1 + 24ll) * *(double*)((uint8*)V$1 + 24ll))) + (*(double*)((uint8*)V$1 + 32ll) * *(double*)((uint8*)V$1 + 32ll));
 goto label$6134;
 label$6134:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T9K_LENGTH2ERK7VECTOR4( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR4* V$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6135:;
 fb$result$1 = (((*(double*)((uint8*)V$1 + 40ll) * *(double*)((uint8*)V$1 + 40ll)) + (*(double*)((uint8*)V$1 + 48ll) * *(double*)((uint8*)V$1 + 48ll))) + (*(double*)((uint8*)V$1 + 56ll) * *(double*)((uint8*)V$1 + 56ll))) + (*(double*)((uint8*)V$1 + 64ll) * *(double*)((uint8*)V$1 + 64ll));
 goto label$6136;
 label$6136:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8K_LENGTHEh( struct $12SYSTEM_BUS_T* THIS$1, uint8 A$1 )
{
 int64 TMP$3025$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6137:;
 if( (int64)A$1 >= 0ll ) goto label$6139;
 TMP$3025$1 = -(int64)A$1;
 goto label$6140;
 label$6139:;
 TMP$3025$1 = (int64)A$1;
 label$6140:;
 fb$result$1 = (double)TMP$3025$1;
 goto label$6138;
 label$6138:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8K_LENGTHEa( struct $12SYSTEM_BUS_T* THIS$1, int8 A$1 )
{
 int64 TMP$3026$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6141:;
 if( (int64)A$1 >= 0ll ) goto label$6143;
 TMP$3026$1 = -(int64)A$1;
 goto label$6144;
 label$6143:;
 TMP$3026$1 = (int64)A$1;
 label$6144:;
 fb$result$1 = (double)TMP$3026$1;
 goto label$6142;
 label$6142:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8K_LENGTHEt( struct $12SYSTEM_BUS_T* THIS$1, uint16 A$1 )
{
 int64 TMP$3027$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6145:;
 if( (int64)A$1 >= 0ll ) goto label$6147;
 TMP$3027$1 = -(int64)A$1;
 goto label$6148;
 label$6147:;
 TMP$3027$1 = (int64)A$1;
 label$6148:;
 fb$result$1 = (double)TMP$3027$1;
 goto label$6146;
 label$6146:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8K_LENGTHEs( struct $12SYSTEM_BUS_T* THIS$1, int16 A$1 )
{
 int64 TMP$3028$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6149:;
 if( (int64)A$1 >= 0ll ) goto label$6151;
 TMP$3028$1 = -(int64)A$1;
 goto label$6152;
 label$6151:;
 TMP$3028$1 = (int64)A$1;
 label$6152:;
 fb$result$1 = (double)TMP$3028$1;
 goto label$6150;
 label$6150:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8K_LENGTHEj( struct $12SYSTEM_BUS_T* THIS$1, uint32 A$1 )
{
 int64 TMP$3029$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6153:;
 if( (int64)A$1 >= 0ll ) goto label$6155;
 TMP$3029$1 = -(int64)A$1;
 goto label$6156;
 label$6155:;
 TMP$3029$1 = (int64)A$1;
 label$6156:;
 fb$result$1 = (double)TMP$3029$1;
 goto label$6154;
 label$6154:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8K_LENGTHEi( struct $12SYSTEM_BUS_T* THIS$1, int32 A$1 )
{
 int64 TMP$3030$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6157:;
 if( (int64)A$1 >= 0ll ) goto label$6159;
 TMP$3030$1 = -(int64)A$1;
 goto label$6160;
 label$6159:;
 TMP$3030$1 = (int64)A$1;
 label$6160:;
 fb$result$1 = (double)TMP$3030$1;
 goto label$6158;
 label$6158:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8K_LENGTHEy( struct $12SYSTEM_BUS_T* THIS$1, uint64 A$1 )
{
 uint64 TMP$3031$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6161:;
 if( A$1 >= 0ull ) goto label$6163;
 TMP$3031$1 = -A$1;
 goto label$6164;
 label$6163:;
 TMP$3031$1 = A$1;
 label$6164:;
 fb$result$1 = (double)TMP$3031$1;
 goto label$6162;
 label$6162:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8K_LENGTHEx( struct $12SYSTEM_BUS_T* THIS$1, int64 A$1 )
{
 int64 TMP$3032$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6165:;
 if( A$1 >= 0ll ) goto label$6167;
 TMP$3032$1 = -A$1;
 goto label$6168;
 label$6167:;
 TMP$3032$1 = A$1;
 label$6168:;
 fb$result$1 = (double)TMP$3032$1;
 goto label$6166;
 label$6166:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8K_LENGTHEf( struct $12SYSTEM_BUS_T* THIS$1, float A$1 )
{
 float TMP$3033$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6169:;
 if( A$1 >= 0x0p+0f ) goto label$6171;
 TMP$3033$1 = -A$1;
 goto label$6172;
 label$6171:;
 TMP$3033$1 = A$1;
 label$6172:;
 fb$result$1 = (double)TMP$3033$1;
 goto label$6170;
 label$6170:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8K_LENGTHEd( struct $12SYSTEM_BUS_T* THIS$1, double A$1 )
{
 double TMP$3034$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6173:;
 if( A$1 >= 0x0p+0 ) goto label$6175;
 TMP$3034$1 = -A$1;
 goto label$6176;
 label$6175:;
 TMP$3034$1 = A$1;
 label$6176:;
 fb$result$1 = TMP$3034$1;
 goto label$6174;
 label$6174:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8K_LENGTHERK9_FLOAT128( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* V$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6177:;
 float vr$17 = sqrtf( (float)((((*(double*)V$1 * *(double*)V$1) + (*(double*)((uint8*)V$1 + 8ll) * *(double*)((uint8*)V$1 + 8ll))) + (*(double*)V$1 * *(double*)V$1)) + (*(double*)((uint8*)V$1 + 8ll) * *(double*)((uint8*)V$1 + 8ll))) );
 fb$result$1 = (double)vr$17;
 goto label$6178;
 label$6178:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8K_LENGTHERK9_FLOAT256( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* V$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6179:;
 float vr$17 = sqrtf( (float)((((*(double*)V$1 * *(double*)V$1) + (*(double*)V$1 * *(double*)V$1)) + (*(double*)V$1 * *(double*)V$1)) + (*(double*)V$1 * *(double*)V$1)) );
 fb$result$1 = (double)vr$17;
 goto label$6180;
 label$6180:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8K_LENGTHERK9_FLOAT512( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* V$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6181:;
 float vr$17 = sqrtf( (float)((((*(double*)V$1 * *(double*)V$1) + (*(double*)V$1 * *(double*)V$1)) + (*(double*)V$1 * *(double*)V$1)) + (*(double*)V$1 * *(double*)V$1)) );
 fb$result$1 = (double)vr$17;
 goto label$6182;
 label$6182:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR2( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR2* V$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6183:;
 float vr$9 = sqrtf( (float)((*(double*)V$1 * *(double*)V$1) + (*(double*)((uint8*)V$1 + 8ll) * *(double*)((uint8*)V$1 + 8ll))) );
 fb$result$1 = (double)vr$9;
 goto label$6184;
 label$6184:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR3( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* V$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6185:;
 float vr$13 = sqrtf( (float)(((*(double*)((uint8*)V$1 + 16ll) * *(double*)((uint8*)V$1 + 16ll)) + (*(double*)((uint8*)V$1 + 24ll) * *(double*)((uint8*)V$1 + 24ll))) + (*(double*)((uint8*)V$1 + 32ll) * *(double*)((uint8*)V$1 + 32ll))) );
 fb$result$1 = (double)vr$13;
 goto label$6186;
 label$6186:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8K_LENGTHERK7VECTOR4( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR4* V$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6187:;
 float vr$17 = sqrtf( (float)((((*(double*)((uint8*)V$1 + 40ll) * *(double*)((uint8*)V$1 + 40ll)) + (*(double*)((uint8*)V$1 + 48ll) * *(double*)((uint8*)V$1 + 48ll))) + (*(double*)((uint8*)V$1 + 56ll) * *(double*)((uint8*)V$1 + 56ll))) + (*(double*)((uint8*)V$1 + 64ll) * *(double*)((uint8*)V$1 + 64ll))) );
 fb$result$1 = (double)vr$17;
 goto label$6188;
 label$6188:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T10K_DISTANCEEhh( struct $12SYSTEM_BUS_T* THIS$1, uint8 A$1, uint8 B$1 )
{
 int64 TMP$3035$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6189:;
 double D$1;
 D$1 = (double)((int64)A$1 - (int64)B$1);
 if( (int64)A$1 >= 0ll ) goto label$6191;
 TMP$3035$1 = -(int64)A$1;
 goto label$6192;
 label$6191:;
 TMP$3035$1 = (int64)A$1;
 label$6192:;
 fb$result$1 = (double)TMP$3035$1;
 goto label$6190;
 label$6190:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T10K_DISTANCEEaa( struct $12SYSTEM_BUS_T* THIS$1, int8 A$1, int8 B$1 )
{
 int64 TMP$3036$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6193:;
 double D$1;
 D$1 = (double)((int64)A$1 - (int64)B$1);
 if( (int64)A$1 >= 0ll ) goto label$6195;
 TMP$3036$1 = -(int64)A$1;
 goto label$6196;
 label$6195:;
 TMP$3036$1 = (int64)A$1;
 label$6196:;
 fb$result$1 = (double)TMP$3036$1;
 goto label$6194;
 label$6194:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T10K_DISTANCEEtt( struct $12SYSTEM_BUS_T* THIS$1, uint16 A$1, uint16 B$1 )
{
 int64 TMP$3037$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6197:;
 double D$1;
 D$1 = (double)((int64)A$1 - (int64)B$1);
 if( (int64)A$1 >= 0ll ) goto label$6199;
 TMP$3037$1 = -(int64)A$1;
 goto label$6200;
 label$6199:;
 TMP$3037$1 = (int64)A$1;
 label$6200:;
 fb$result$1 = (double)TMP$3037$1;
 goto label$6198;
 label$6198:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T10K_DISTANCEEss( struct $12SYSTEM_BUS_T* THIS$1, int16 A$1, int16 B$1 )
{
 int64 TMP$3038$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6201:;
 double D$1;
 D$1 = (double)((int64)A$1 - (int64)B$1);
 if( (int64)A$1 >= 0ll ) goto label$6203;
 TMP$3038$1 = -(int64)A$1;
 goto label$6204;
 label$6203:;
 TMP$3038$1 = (int64)A$1;
 label$6204:;
 fb$result$1 = (double)TMP$3038$1;
 goto label$6202;
 label$6202:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T10K_DISTANCEEjj( struct $12SYSTEM_BUS_T* THIS$1, uint32 A$1, uint32 B$1 )
{
 int64 TMP$3039$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6205:;
 double D$1;
 D$1 = (double)((int64)A$1 - (int64)B$1);
 if( (int64)A$1 >= 0ll ) goto label$6207;
 TMP$3039$1 = -(int64)A$1;
 goto label$6208;
 label$6207:;
 TMP$3039$1 = (int64)A$1;
 label$6208:;
 fb$result$1 = (double)TMP$3039$1;
 goto label$6206;
 label$6206:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T10K_DISTANCEEii( struct $12SYSTEM_BUS_T* THIS$1, int32 A$1, int32 B$1 )
{
 int64 TMP$3040$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6209:;
 double D$1;
 D$1 = (double)((int64)A$1 - (int64)B$1);
 if( (int64)A$1 >= 0ll ) goto label$6211;
 TMP$3040$1 = -(int64)A$1;
 goto label$6212;
 label$6211:;
 TMP$3040$1 = (int64)A$1;
 label$6212:;
 fb$result$1 = (double)TMP$3040$1;
 goto label$6210;
 label$6210:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T10K_DISTANCEEyy( struct $12SYSTEM_BUS_T* THIS$1, uint64 A$1, uint64 B$1 )
{
 uint64 TMP$3041$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6213:;
 double D$1;
 D$1 = (double)(A$1 - B$1);
 if( A$1 >= 0ull ) goto label$6215;
 TMP$3041$1 = -A$1;
 goto label$6216;
 label$6215:;
 TMP$3041$1 = A$1;
 label$6216:;
 fb$result$1 = (double)TMP$3041$1;
 goto label$6214;
 label$6214:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T10K_DISTANCEExx( struct $12SYSTEM_BUS_T* THIS$1, int64 A$1, int64 B$1 )
{
 int64 TMP$3042$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6217:;
 double D$1;
 D$1 = (double)(A$1 - B$1);
 if( A$1 >= 0ll ) goto label$6219;
 TMP$3042$1 = -A$1;
 goto label$6220;
 label$6219:;
 TMP$3042$1 = A$1;
 label$6220:;
 fb$result$1 = (double)TMP$3042$1;
 goto label$6218;
 label$6218:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T10K_DISTANCEEff( struct $12SYSTEM_BUS_T* THIS$1, float A$1, float B$1 )
{
 float TMP$3043$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6221:;
 double D$1;
 D$1 = (double)(A$1 - B$1);
 if( A$1 >= 0x0p+0f ) goto label$6223;
 TMP$3043$1 = -A$1;
 goto label$6224;
 label$6223:;
 TMP$3043$1 = A$1;
 label$6224:;
 fb$result$1 = (double)TMP$3043$1;
 goto label$6222;
 label$6222:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T10K_DISTANCEEdd( struct $12SYSTEM_BUS_T* THIS$1, double A$1, double B$1 )
{
 double TMP$3044$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6225:;
 double D$1;
 D$1 = A$1 - B$1;
 if( A$1 >= 0x0p+0 ) goto label$6227;
 TMP$3044$1 = -A$1;
 goto label$6228;
 label$6227:;
 TMP$3044$1 = A$1;
 label$6228:;
 fb$result$1 = TMP$3044$1;
 goto label$6226;
 label$6226:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T10K_DISTANCEER9_FLOAT128S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* A$1, struct $9_FLOAT128* B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6229:;
 double X$1;
 X$1 = *(double*)A$1 - *(double*)B$1;
 double Y$1;
 Y$1 = *(double*)((uint8*)A$1 + 8ll) - *(double*)((uint8*)B$1 + 8ll);
 double Z$1;
 Z$1 = *(double*)A$1 - *(double*)B$1;
 double W$1;
 W$1 = *(double*)((uint8*)A$1 + 8ll) - *(double*)((uint8*)B$1 + 8ll);
 double D$1;
 D$1 = (((X$1 * X$1) + (Y$1 * Y$1)) + (Z$1 * Z$1)) + (W$1 * W$1);
 if( D$1 != 0x0p+0 ) goto label$6232;
 {
  fb$result$1 = 0x0p+0;
  goto label$6230;
  label$6232:;
 }
 float vr$21 = sqrtf( (float)D$1 );
 fb$result$1 = (double)vr$21;
 goto label$6230;
 label$6230:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T10K_DISTANCEER9_FLOAT256S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* A$1, struct $9_FLOAT256* B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6233:;
 double X$1;
 X$1 = *(double*)A$1 - *(double*)B$1;
 double Y$1;
 Y$1 = *(double*)A$1 - *(double*)B$1;
 double Z$1;
 Z$1 = *(double*)A$1 - *(double*)B$1;
 double W$1;
 W$1 = *(double*)A$1 - *(double*)B$1;
 double D$1;
 D$1 = (((X$1 * X$1) + (Y$1 * Y$1)) + (Z$1 * Z$1)) + (W$1 * W$1);
 if( D$1 != 0x0p+0 ) goto label$6236;
 {
  fb$result$1 = 0x0p+0;
  goto label$6234;
  label$6236:;
 }
 float vr$21 = sqrtf( (float)D$1 );
 fb$result$1 = (double)vr$21;
 goto label$6234;
 label$6234:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T10K_DISTANCEER9_FLOAT512S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* A$1, struct $9_FLOAT512* B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6237:;
 double X$1;
 X$1 = *(double*)A$1 - *(double*)B$1;
 double Y$1;
 Y$1 = *(double*)A$1 - *(double*)B$1;
 double Z$1;
 Z$1 = *(double*)A$1 - *(double*)B$1;
 double W$1;
 W$1 = *(double*)A$1 - *(double*)B$1;
 double D$1;
 D$1 = (((X$1 * X$1) + (Y$1 * Y$1)) + (Z$1 * Z$1)) + (W$1 * W$1);
 if( D$1 != 0x0p+0 ) goto label$6240;
 {
  fb$result$1 = 0x0p+0;
  goto label$6238;
  label$6240:;
 }
 float vr$21 = sqrtf( (float)D$1 );
 fb$result$1 = (double)vr$21;
 goto label$6238;
 label$6238:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T10K_DISTANCEER7VECTOR2S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR2* A$1, struct $7VECTOR2* B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6241:;
 double X$1;
 X$1 = *(double*)A$1 - *(double*)B$1;
 double Y$1;
 Y$1 = *(double*)((uint8*)A$1 + 8ll) - *(double*)((uint8*)B$1 + 8ll);
 double D$1;
 D$1 = (X$1 * X$1) + (Y$1 * Y$1);
 if( D$1 != 0x0p+0 ) goto label$6244;
 {
  fb$result$1 = 0x0p+0;
  goto label$6242;
  label$6244:;
 }
 float vr$11 = sqrtf( (float)D$1 );
 fb$result$1 = (double)vr$11;
 goto label$6242;
 label$6242:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T10K_DISTANCEER7VECTOR3S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* A$1, struct $7VECTOR3* B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6245:;
 double X$1;
 X$1 = *(double*)((uint8*)A$1 + 16ll) - *(double*)((uint8*)B$1 + 16ll);
 double Y$1;
 Y$1 = *(double*)((uint8*)A$1 + 24ll) - *(double*)((uint8*)B$1 + 24ll);
 double Z$1;
 Z$1 = *(double*)((uint8*)A$1 + 32ll) - *(double*)((uint8*)B$1 + 32ll);
 double D$1;
 D$1 = ((X$1 * X$1) + (Y$1 * Y$1)) + (Z$1 * Z$1);
 if( D$1 != 0x0p+0 ) goto label$6248;
 {
  fb$result$1 = 0x0p+0;
  goto label$6246;
  label$6248:;
 }
 float vr$16 = sqrtf( (float)D$1 );
 fb$result$1 = (double)vr$16;
 goto label$6246;
 label$6246:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T10K_DISTANCEER7VECTOR4S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR4* A$1, struct $7VECTOR4* B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6249:;
 double X$1;
 X$1 = *(double*)((uint8*)A$1 + 40ll) - *(double*)((uint8*)B$1 + 40ll);
 double Y$1;
 Y$1 = *(double*)((uint8*)A$1 + 48ll) - *(double*)((uint8*)B$1 + 48ll);
 double Z$1;
 Z$1 = *(double*)((uint8*)A$1 + 56ll) - *(double*)((uint8*)B$1 + 56ll);
 double W$1;
 W$1 = *(double*)((uint8*)A$1 + 64ll) - *(double*)((uint8*)B$1 + 64ll);
 double D$1;
 D$1 = (((X$1 * X$1) + (Y$1 * Y$1)) + (Z$1 * Z$1)) + (W$1 * W$1);
 if( D$1 != 0x0p+0 ) goto label$6252;
 {
  fb$result$1 = 0x0p+0;
  goto label$6250;
  label$6252:;
 }
 float vr$21 = sqrtf( (float)D$1 );
 fb$result$1 = (double)vr$21;
 goto label$6250;
 label$6250:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_DOTEhh( struct $12SYSTEM_BUS_T* THIS$1, uint8 A$1, uint8 B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6253:;
 fb$result$1 = (double)((int64)A$1 * (int64)B$1);
 goto label$6254;
 label$6254:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_DOTEaa( struct $12SYSTEM_BUS_T* THIS$1, int8 A$1, int8 B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6255:;
 fb$result$1 = (double)((int64)A$1 * (int64)B$1);
 goto label$6256;
 label$6256:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_DOTEtt( struct $12SYSTEM_BUS_T* THIS$1, uint16 A$1, uint16 B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6257:;
 fb$result$1 = (double)((int64)A$1 * (int64)B$1);
 goto label$6258;
 label$6258:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_DOTEss( struct $12SYSTEM_BUS_T* THIS$1, int16 A$1, int16 B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6259:;
 fb$result$1 = (double)((int64)A$1 * (int64)B$1);
 goto label$6260;
 label$6260:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_DOTEjj( struct $12SYSTEM_BUS_T* THIS$1, uint32 A$1, uint32 B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6261:;
 fb$result$1 = (double)((int64)A$1 * (int64)B$1);
 goto label$6262;
 label$6262:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_DOTEii( struct $12SYSTEM_BUS_T* THIS$1, int32 A$1, int32 B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6263:;
 fb$result$1 = (double)((int64)A$1 * (int64)B$1);
 goto label$6264;
 label$6264:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_DOTEyy( struct $12SYSTEM_BUS_T* THIS$1, uint64 A$1, uint64 B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6265:;
 fb$result$1 = (double)(A$1 * B$1);
 goto label$6266;
 label$6266:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_DOTExx( struct $12SYSTEM_BUS_T* THIS$1, int64 A$1, int64 B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6267:;
 fb$result$1 = (double)(A$1 * B$1);
 goto label$6268;
 label$6268:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_DOTEff( struct $12SYSTEM_BUS_T* THIS$1, float A$1, float B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6269:;
 fb$result$1 = (double)(A$1 * B$1);
 goto label$6270;
 label$6270:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_DOTEdd( struct $12SYSTEM_BUS_T* THIS$1, double A$1, double B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6271:;
 fb$result$1 = A$1 * B$1;
 goto label$6272;
 label$6272:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_DOTER9_FLOAT128S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* A$1, struct $9_FLOAT128* B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6273:;
 fb$result$1 = (((*(double*)A$1 * *(double*)B$1) + (*(double*)((uint8*)A$1 + 8ll) * *(double*)((uint8*)B$1 + 8ll))) + (*(double*)A$1 * *(double*)B$1)) + (*(double*)((uint8*)A$1 + 8ll) * *(double*)((uint8*)B$1 + 8ll));
 goto label$6274;
 label$6274:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_DOTER9_FLOAT256S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* A$1, struct $9_FLOAT256* B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6275:;
 fb$result$1 = (((*(double*)A$1 * *(double*)B$1) + (*(double*)A$1 * *(double*)B$1)) + (*(double*)A$1 * *(double*)B$1)) + (*(double*)A$1 * *(double*)B$1);
 goto label$6276;
 label$6276:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_DOTER9_FLOAT512S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* A$1, struct $9_FLOAT512* B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6277:;
 fb$result$1 = (((*(double*)A$1 * *(double*)B$1) + (*(double*)A$1 * *(double*)B$1)) + (*(double*)A$1 * *(double*)B$1)) + (*(double*)A$1 * *(double*)B$1);
 goto label$6278;
 label$6278:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR2S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR2* A$1, struct $7VECTOR2* B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6279:;
 fb$result$1 = (*(double*)A$1 * *(double*)B$1) + (*(double*)((uint8*)A$1 + 8ll) * *(double*)((uint8*)B$1 + 8ll));
 goto label$6280;
 label$6280:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR3S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* A$1, struct $7VECTOR3* B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6281:;
 fb$result$1 = ((*(double*)((uint8*)A$1 + 16ll) * *(double*)((uint8*)B$1 + 16ll)) + (*(double*)((uint8*)A$1 + 24ll) * *(double*)((uint8*)B$1 + 24ll))) + (*(double*)((uint8*)A$1 + 32ll) * *(double*)((uint8*)B$1 + 32ll));
 goto label$6282;
 label$6282:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5K_DOTER7VECTOR4S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR4* A$1, struct $7VECTOR4* B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6283:;
 fb$result$1 = (((*(double*)((uint8*)A$1 + 40ll) * *(double*)((uint8*)B$1 + 40ll)) + (*(double*)((uint8*)A$1 + 48ll) * *(double*)((uint8*)B$1 + 48ll))) + (*(double*)((uint8*)A$1 + 56ll) * *(double*)((uint8*)B$1 + 56ll))) + (*(double*)((uint8*)A$1 + 64ll) * *(double*)((uint8*)B$1 + 64ll));
 goto label$6284;
 label$6284:;
 return fb$result$1;
}

struct $7VECTOR3* _ZN12SYSTEM_BUS_T7K_CROSSER7VECTOR3S1_( struct $7VECTOR3* tmp$3045$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* A$1, struct $7VECTOR3* B$1 )
{
 label$6285:;
 _ZN7VECTOR3C1Eddd( tmp$3045$1, (*(double*)((uint8*)A$1 + 24ll) * *(double*)((uint8*)B$1 + 32ll)) - (*(double*)((uint8*)A$1 + 32ll) * *(double*)((uint8*)B$1 + 24ll)), (*(double*)((uint8*)A$1 + 32ll) * *(double*)((uint8*)B$1 + 16ll)) - (*(double*)((uint8*)A$1 + 16ll) * *(double*)((uint8*)B$1 + 32ll)), (*(double*)((uint8*)A$1 + 16ll) * *(double*)((uint8*)B$1 + 24ll)) - (*(double*)((uint8*)A$1 + 24ll) * *(double*)((uint8*)B$1 + 16ll)) );
 goto label$6286;
 label$6286:;
 return tmp$3045$1;
}

double _ZN12SYSTEM_BUS_T11K_NORMALIZEEh( struct $12SYSTEM_BUS_T* THIS$1, uint8 V$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6287:;
 fb$result$1 = 0x1.p+0;
 goto label$6288;
 label$6288:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T11K_NORMALIZEEa( struct $12SYSTEM_BUS_T* THIS$1, int8 V$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6289:;
 fb$result$1 = 0x1.p+0;
 goto label$6290;
 label$6290:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T11K_NORMALIZEEt( struct $12SYSTEM_BUS_T* THIS$1, uint16 V$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6291:;
 fb$result$1 = 0x1.p+0;
 goto label$6292;
 label$6292:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T11K_NORMALIZEEs( struct $12SYSTEM_BUS_T* THIS$1, int16 V$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6293:;
 fb$result$1 = 0x1.p+0;
 goto label$6294;
 label$6294:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T11K_NORMALIZEEj( struct $12SYSTEM_BUS_T* THIS$1, uint32 V$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6295:;
 fb$result$1 = 0x1.p+0;
 goto label$6296;
 label$6296:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T11K_NORMALIZEEi( struct $12SYSTEM_BUS_T* THIS$1, int32 V$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6297:;
 fb$result$1 = 0x1.p+0;
 goto label$6298;
 label$6298:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T11K_NORMALIZEEy( struct $12SYSTEM_BUS_T* THIS$1, uint64 V$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6299:;
 fb$result$1 = 0x1.p+0;
 goto label$6300;
 label$6300:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T11K_NORMALIZEEx( struct $12SYSTEM_BUS_T* THIS$1, int64 V$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6301:;
 fb$result$1 = 0x1.p+0;
 goto label$6302;
 label$6302:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T11K_NORMALIZEEf( struct $12SYSTEM_BUS_T* THIS$1, float V$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6303:;
 fb$result$1 = 0x1.p+0;
 goto label$6304;
 label$6304:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T11K_NORMALIZEEd( struct $12SYSTEM_BUS_T* THIS$1, double V$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6305:;
 fb$result$1 = 0x1.p+0;
 goto label$6306;
 label$6306:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T11K_NORMALIZEER9_FLOAT128( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* V$1 )
{
 struct $9_FLOAT128 TMP$3047$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6307:;
 double D$1;
 D$1 = (((*(double*)V$1 * *(double*)V$1) + (*(double*)((uint8*)V$1 + 8ll) * *(double*)((uint8*)V$1 + 8ll))) + (*(double*)V$1 * *(double*)V$1)) + (*(double*)((uint8*)V$1 + 8ll) * *(double*)((uint8*)V$1 + 8ll));
 if( D$1 == 0x0p+0 ) goto label$6310;
 {
  float vr$17 = sqrtf( (float)D$1 );
  D$1 = 0x1.p+0 / (double)vr$17;
  label$6310:;
 }
 _ZN9_FLOAT128C1Edddd( &TMP$3047$1, *(double*)V$1 * D$1, *(double*)((uint8*)V$1 + 8ll) * D$1, *(double*)V$1 * D$1, *(double*)((uint8*)V$1 + 8ll) * D$1 );
 uint64 vr$30 = _ZN9_FLOAT128cvyEv( &TMP$3047$1 );
 fb$result$1 = (double)vr$30;
 goto label$6308;
 label$6308:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T11K_NORMALIZEER9_FLOAT256( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* V$1 )
{
 struct $9_FLOAT256 TMP$3048$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6311:;
 double D$1;
 D$1 = (((*(double*)V$1 * *(double*)V$1) + (*(double*)V$1 * *(double*)V$1)) + (*(double*)V$1 * *(double*)V$1)) + (*(double*)V$1 * *(double*)V$1);
 if( D$1 == 0x0p+0 ) goto label$6314;
 {
  float vr$17 = sqrtf( (float)D$1 );
  D$1 = 0x1.p+0 / (double)vr$17;
  label$6314:;
 }
 _ZN9_FLOAT256C1Edddd( &TMP$3048$1, *(double*)V$1 * D$1, *(double*)V$1 * D$1, *(double*)V$1 * D$1, *(double*)V$1 * D$1 );
 uint64 vr$30 = _ZN9_FLOAT256cvyEv( &TMP$3048$1 );
 fb$result$1 = (double)vr$30;
 goto label$6312;
 label$6312:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T11K_NORMALIZEER9_FLOAT512( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* V$1 )
{
 struct $9_FLOAT512 TMP$3049$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6315:;
 double D$1;
 D$1 = (((*(double*)V$1 * *(double*)V$1) + (*(double*)V$1 * *(double*)V$1)) + (*(double*)V$1 * *(double*)V$1)) + (*(double*)V$1 * *(double*)V$1);
 if( D$1 == 0x0p+0 ) goto label$6318;
 {
  float vr$17 = sqrtf( (float)D$1 );
  D$1 = 0x1.p+0 / (double)vr$17;
  label$6318:;
 }
 _ZN9_FLOAT512C1Edddd( &TMP$3049$1, *(double*)V$1 * D$1, *(double*)V$1 * D$1, *(double*)V$1 * D$1, *(double*)V$1 * D$1 );
 uint64 vr$30 = _ZN9_FLOAT512cvyEv( &TMP$3049$1 );
 fb$result$1 = (double)vr$30;
 goto label$6316;
 label$6316:;
 return fb$result$1;
}

struct $7VECTOR2* _ZN12SYSTEM_BUS_T11K_NORMALIZEER7VECTOR2( struct $7VECTOR2* tmp$3050$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR2* V$1 )
{
 label$6319:;
 double D$1;
 D$1 = (*(double*)V$1 * *(double*)V$1) + (*(double*)((uint8*)V$1 + 8ll) * *(double*)((uint8*)V$1 + 8ll));
 if( D$1 == 0x0p+0 ) goto label$6322;
 {
  float vr$8 = sqrtf( (float)D$1 );
  D$1 = 0x1.p+0 / (double)vr$8;
  label$6322:;
 }
 _ZN7VECTOR2C1Edd( tmp$3050$1, *(double*)V$1 * D$1, *(double*)((uint8*)V$1 + 8ll) * D$1 );
 goto label$6320;
 label$6320:;
 return tmp$3050$1;
}

struct $7VECTOR3* _ZN12SYSTEM_BUS_T11K_NORMALIZEER7VECTOR3( struct $7VECTOR3* tmp$3052$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* V$1 )
{
 label$6323:;
 double D$1;
 D$1 = ((*(double*)((uint8*)V$1 + 16ll) * *(double*)((uint8*)V$1 + 16ll)) + (*(double*)((uint8*)V$1 + 24ll) * *(double*)((uint8*)V$1 + 24ll))) + (*(double*)((uint8*)V$1 + 32ll) * *(double*)((uint8*)V$1 + 32ll));
 if( D$1 == 0x0p+0 ) goto label$6326;
 {
  float vr$12 = sqrtf( (float)D$1 );
  D$1 = 0x1.p+0 / (double)vr$12;
  label$6326:;
 }
 _ZN7VECTOR3C1Eddd( tmp$3052$1, *(double*)((uint8*)V$1 + 16ll) * D$1, *(double*)((uint8*)V$1 + 24ll) * D$1, *(double*)((uint8*)V$1 + 32ll) * D$1 );
 goto label$6324;
 label$6324:;
 return tmp$3052$1;
}

struct $7VECTOR4* _ZN12SYSTEM_BUS_T11K_NORMALIZEER7VECTOR4( struct $7VECTOR4* tmp$3054$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR4* V$1 )
{
 label$6327:;
 double D$1;
 D$1 = (((*(double*)((uint8*)V$1 + 40ll) * *(double*)((uint8*)V$1 + 40ll)) + (*(double*)((uint8*)V$1 + 48ll) * *(double*)((uint8*)V$1 + 48ll))) + (*(double*)((uint8*)V$1 + 56ll) * *(double*)((uint8*)V$1 + 56ll))) + (*(double*)((uint8*)V$1 + 64ll) * *(double*)((uint8*)V$1 + 64ll));
 if( D$1 == 0x0p+0 ) goto label$6330;
 {
  float vr$16 = sqrtf( (float)D$1 );
  D$1 = 0x1.p+0 / (double)vr$16;
  label$6330:;
 }
 _ZN7VECTOR4C1Edddd( tmp$3054$1, *(double*)((uint8*)V$1 + 40ll) * D$1, *(double*)((uint8*)V$1 + 48ll) * D$1, *(double*)((uint8*)V$1 + 56ll) * D$1, *(double*)((uint8*)V$1 + 64ll) * D$1 );
 goto label$6328;
 label$6328:;
 return tmp$3054$1;
}

double _ZN12SYSTEM_BUS_T13K_FACEFORWARDEhhh( struct $12SYSTEM_BUS_T* THIS$1, uint8 N$1, uint8 I$1, uint8 NREF$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6331:;
 double D$1;
 D$1 = (double)((int64)I$1 * (int64)NREF$1);
 if( D$1 >= 0x0p+0 ) goto label$6334;
 {
  fb$result$1 = (double)N$1;
  goto label$6332;
 }
 goto label$6333;
 label$6334:;
 {
  fb$result$1 = (double)-(int64)N$1;
  goto label$6332;
  label$6333:;
 }
 label$6332:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T13K_FACEFORWARDEaaa( struct $12SYSTEM_BUS_T* THIS$1, int8 N$1, int8 I$1, int8 NREF$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6335:;
 double D$1;
 D$1 = (double)((int64)I$1 * (int64)NREF$1);
 if( D$1 >= 0x0p+0 ) goto label$6338;
 {
  fb$result$1 = (double)N$1;
  goto label$6336;
 }
 goto label$6337;
 label$6338:;
 {
  fb$result$1 = (double)-(int64)N$1;
  goto label$6336;
  label$6337:;
 }
 label$6336:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T13K_FACEFORWARDEttt( struct $12SYSTEM_BUS_T* THIS$1, uint16 N$1, uint16 I$1, uint16 NREF$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6339:;
 double D$1;
 D$1 = (double)((int64)I$1 * (int64)NREF$1);
 if( D$1 >= 0x0p+0 ) goto label$6342;
 {
  fb$result$1 = (double)N$1;
  goto label$6340;
 }
 goto label$6341;
 label$6342:;
 {
  fb$result$1 = (double)-(int64)N$1;
  goto label$6340;
  label$6341:;
 }
 label$6340:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T13K_FACEFORWARDEsss( struct $12SYSTEM_BUS_T* THIS$1, int16 N$1, int16 I$1, int16 NREF$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6343:;
 double D$1;
 D$1 = (double)((int64)I$1 * (int64)NREF$1);
 if( D$1 >= 0x0p+0 ) goto label$6346;
 {
  fb$result$1 = (double)N$1;
  goto label$6344;
 }
 goto label$6345;
 label$6346:;
 {
  fb$result$1 = (double)-(int64)N$1;
  goto label$6344;
  label$6345:;
 }
 label$6344:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T13K_FACEFORWARDEjjj( struct $12SYSTEM_BUS_T* THIS$1, uint32 N$1, uint32 I$1, uint32 NREF$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6347:;
 double D$1;
 D$1 = (double)((int64)I$1 * (int64)NREF$1);
 if( D$1 >= 0x0p+0 ) goto label$6350;
 {
  fb$result$1 = (double)N$1;
  goto label$6348;
 }
 goto label$6349;
 label$6350:;
 {
  fb$result$1 = (double)-(int64)N$1;
  goto label$6348;
  label$6349:;
 }
 label$6348:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T13K_FACEFORWARDEiii( struct $12SYSTEM_BUS_T* THIS$1, int32 N$1, int32 I$1, int32 NREF$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6351:;
 double D$1;
 D$1 = (double)((int64)I$1 * (int64)NREF$1);
 if( D$1 >= 0x0p+0 ) goto label$6354;
 {
  fb$result$1 = (double)N$1;
  goto label$6352;
 }
 goto label$6353;
 label$6354:;
 {
  fb$result$1 = (double)-(int64)N$1;
  goto label$6352;
  label$6353:;
 }
 label$6352:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T13K_FACEFORWARDEyyy( struct $12SYSTEM_BUS_T* THIS$1, uint64 N$1, uint64 I$1, uint64 NREF$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6355:;
 double D$1;
 D$1 = (double)(I$1 * NREF$1);
 if( D$1 >= 0x0p+0 ) goto label$6358;
 {
  fb$result$1 = (double)N$1;
  goto label$6356;
 }
 goto label$6357;
 label$6358:;
 {
  fb$result$1 = (double)-N$1;
  goto label$6356;
  label$6357:;
 }
 label$6356:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T13K_FACEFORWARDExxx( struct $12SYSTEM_BUS_T* THIS$1, int64 N$1, int64 I$1, int64 NREF$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6359:;
 double D$1;
 D$1 = (double)(I$1 * NREF$1);
 if( D$1 >= 0x0p+0 ) goto label$6362;
 {
  fb$result$1 = (double)N$1;
  goto label$6360;
 }
 goto label$6361;
 label$6362:;
 {
  fb$result$1 = (double)-N$1;
  goto label$6360;
  label$6361:;
 }
 label$6360:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T13K_FACEFORWARDEfff( struct $12SYSTEM_BUS_T* THIS$1, float N$1, float I$1, float NREF$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6363:;
 double D$1;
 D$1 = (double)(I$1 * NREF$1);
 if( D$1 >= 0x0p+0 ) goto label$6366;
 {
  fb$result$1 = (double)N$1;
  goto label$6364;
 }
 goto label$6365;
 label$6366:;
 {
  fb$result$1 = (double)-N$1;
  goto label$6364;
  label$6365:;
 }
 label$6364:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T13K_FACEFORWARDEddd( struct $12SYSTEM_BUS_T* THIS$1, double N$1, double I$1, double NREF$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6367:;
 double D$1;
 D$1 = I$1 * NREF$1;
 if( D$1 >= 0x0p+0 ) goto label$6370;
 {
  fb$result$1 = N$1;
  goto label$6368;
 }
 goto label$6369;
 label$6370:;
 {
  fb$result$1 = -N$1;
  goto label$6368;
  label$6369:;
 }
 label$6368:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T13K_FACEFORWARDER9_FLOAT128S1_S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* N$1, struct $9_FLOAT128* I$1, struct $9_FLOAT128* NREF$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6371:;
 double D$1;
 D$1 = (((*(double*)I$1 * *(double*)NREF$1) + (*(double*)((uint8*)I$1 + 8ll) * *(double*)((uint8*)NREF$1 + 8ll))) + (*(double*)I$1 * *(double*)NREF$1)) + (*(double*)((uint8*)I$1 + 8ll) * *(double*)((uint8*)NREF$1 + 8ll));
 if( D$1 >= 0x0p+0 ) goto label$6374;
 {
  uint64 vr$16 = _ZN9_FLOAT128cvyEv( N$1 );
  fb$result$1 = (double)vr$16;
  goto label$6372;
 }
 goto label$6373;
 label$6374:;
 {
  struct $9_FLOAT128 TMP$3056$2;
  struct $9_FLOAT128* vr$19 = _ZngR9_FLOAT128( &TMP$3056$2, N$1 );
  uint64 vr$20 = _ZN9_FLOAT128cvyEv( vr$19 );
  fb$result$1 = (double)vr$20;
  goto label$6372;
  label$6373:;
 }
 label$6372:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T13K_FACEFORWARDER9_FLOAT256S1_S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* N$1, struct $9_FLOAT256* I$1, struct $9_FLOAT256* NREF$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6375:;
 double D$1;
 D$1 = (((*(double*)I$1 * *(double*)NREF$1) + (*(double*)I$1 * *(double*)NREF$1)) + (*(double*)I$1 * *(double*)NREF$1)) + (*(double*)I$1 * *(double*)NREF$1);
 if( D$1 >= 0x0p+0 ) goto label$6378;
 {
  uint64 vr$16 = _ZN9_FLOAT256cvyEv( N$1 );
  fb$result$1 = (double)vr$16;
  goto label$6376;
 }
 goto label$6377;
 label$6378:;
 {
  struct $9_FLOAT256 TMP$3057$2;
  struct $9_FLOAT256* vr$19 = _ZngR9_FLOAT256( &TMP$3057$2, N$1 );
  uint64 vr$20 = _ZN9_FLOAT256cvyEv( vr$19 );
  fb$result$1 = (double)vr$20;
  goto label$6376;
  label$6377:;
 }
 label$6376:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T13K_FACEFORWARDER9_FLOAT512S1_S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* N$1, struct $9_FLOAT512* I$1, struct $9_FLOAT512* NREF$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6379:;
 double D$1;
 D$1 = (((*(double*)I$1 * *(double*)NREF$1) + (*(double*)I$1 * *(double*)NREF$1)) + (*(double*)I$1 * *(double*)NREF$1)) + (*(double*)I$1 * *(double*)NREF$1);
 if( D$1 >= 0x0p+0 ) goto label$6382;
 {
  uint64 vr$16 = _ZN9_FLOAT512cvyEv( N$1 );
  fb$result$1 = (double)vr$16;
  goto label$6380;
 }
 goto label$6381;
 label$6382:;
 {
  struct $9_FLOAT512 TMP$3058$2;
  struct $9_FLOAT512* vr$19 = _ZngR9_FLOAT512( &TMP$3058$2, N$1 );
  uint64 vr$20 = _ZN9_FLOAT512cvyEv( vr$19 );
  fb$result$1 = (double)vr$20;
  goto label$6380;
  label$6381:;
 }
 label$6380:;
 return fb$result$1;
}

struct $7VECTOR2* _ZN12SYSTEM_BUS_T13K_FACEFORWARDER7VECTOR2S1_S1_( struct $7VECTOR2* tmp$3059$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR2* N$1, struct $7VECTOR2* I$1, struct $7VECTOR2* NREF$1 )
{
 label$6383:;
 double D$1;
 D$1 = (*(double*)I$1 * *(double*)NREF$1) + (*(double*)((uint8*)I$1 + 8ll) * *(double*)((uint8*)NREF$1 + 8ll));
 if( D$1 >= 0x0p+0 ) goto label$6386;
 {
  _ZN7VECTOR2C1ERS_( tmp$3059$1, N$1 );
  goto label$6384;
 }
 goto label$6385;
 label$6386:;
 {
  struct $7VECTOR2 TMP$3060$2;
  struct $7VECTOR2* vr$8 = _ZngR7VECTOR2( &TMP$3060$2, N$1 );
  _ZN7VECTOR2C1ERS_( tmp$3059$1, vr$8 );
  goto label$6384;
  label$6385:;
 }
 label$6384:;
 return tmp$3059$1;
}

struct $7VECTOR3* _ZN12SYSTEM_BUS_T13K_FACEFORWARDER7VECTOR3S1_S1_( struct $7VECTOR3* tmp$3061$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* N$1, struct $7VECTOR3* I$1, struct $7VECTOR3* NREF$1 )
{
 label$6387:;
 double D$1;
 D$1 = ((*(double*)((uint8*)I$1 + 16ll) * *(double*)((uint8*)NREF$1 + 16ll)) + (*(double*)((uint8*)I$1 + 24ll) * *(double*)((uint8*)NREF$1 + 24ll))) + (*(double*)((uint8*)I$1 + 32ll) * *(double*)((uint8*)NREF$1 + 32ll));
 if( D$1 >= 0x0p+0 ) goto label$6390;
 {
  _ZN7VECTOR3C1ERS_( tmp$3061$1, N$1 );
  goto label$6388;
 }
 goto label$6389;
 label$6390:;
 {
  struct $7VECTOR3 TMP$3062$2;
  struct $7VECTOR3* vr$12 = _ZngR7VECTOR3( &TMP$3062$2, N$1 );
  _ZN7VECTOR3C1ERS_( tmp$3061$1, vr$12 );
  goto label$6388;
  label$6389:;
 }
 label$6388:;
 return tmp$3061$1;
}

struct $7VECTOR4* _ZN12SYSTEM_BUS_T13K_FACEFORWARDER7VECTOR4S1_S1_( struct $7VECTOR4* tmp$3063$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR4* N$1, struct $7VECTOR4* I$1, struct $7VECTOR4* NREF$1 )
{
 label$6391:;
 double D$1;
 D$1 = (((*(double*)((uint8*)I$1 + 40ll) * *(double*)((uint8*)NREF$1 + 40ll)) + (*(double*)((uint8*)I$1 + 48ll) * *(double*)((uint8*)NREF$1 + 48ll))) + (*(double*)((uint8*)I$1 + 56ll) * *(double*)((uint8*)NREF$1 + 56ll))) + (*(double*)((uint8*)I$1 + 64ll) * *(double*)((uint8*)NREF$1 + 64ll));
 if( D$1 >= 0x0p+0 ) goto label$6394;
 {
  _ZN7VECTOR4C1ERS_( tmp$3063$1, N$1 );
  goto label$6392;
 }
 goto label$6393;
 label$6394:;
 {
  struct $7VECTOR4 TMP$3064$2;
  struct $7VECTOR4* vr$16 = _ZngR7VECTOR4( &TMP$3064$2, N$1 );
  _ZN7VECTOR4C1ERS_( tmp$3063$1, vr$16 );
  goto label$6392;
  label$6393:;
 }
 label$6392:;
 return tmp$3063$1;
}

double _ZN12SYSTEM_BUS_T9K_REFLECTEhh( struct $12SYSTEM_BUS_T* THIS$1, uint8 I$1, uint8 N$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6395:;
 double D$1;
 D$1 = (double)(((int64)I$1 * (int64)N$1) << (1ll & 63ll));
 fb$result$1 = (double)(int64)I$1 - ((double)(int64)N$1 * D$1);
 goto label$6396;
 label$6396:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T9K_REFLECTEaa( struct $12SYSTEM_BUS_T* THIS$1, int8 I$1, int8 N$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6397:;
 double D$1;
 D$1 = (double)(((int64)I$1 * (int64)N$1) << (1ll & 63ll));
 fb$result$1 = (double)(int64)I$1 - ((double)(int64)N$1 * D$1);
 goto label$6398;
 label$6398:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T9K_REFLECTEtt( struct $12SYSTEM_BUS_T* THIS$1, uint16 I$1, uint16 N$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6399:;
 double D$1;
 D$1 = (double)(((int64)I$1 * (int64)N$1) << (1ll & 63ll));
 fb$result$1 = (double)(int64)I$1 - ((double)(int64)N$1 * D$1);
 goto label$6400;
 label$6400:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T9K_REFLECTEss( struct $12SYSTEM_BUS_T* THIS$1, int16 I$1, int16 N$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6401:;
 double D$1;
 D$1 = (double)(((int64)I$1 * (int64)N$1) << (1ll & 63ll));
 fb$result$1 = (double)(int64)I$1 - ((double)(int64)N$1 * D$1);
 goto label$6402;
 label$6402:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T9K_REFLECTEjj( struct $12SYSTEM_BUS_T* THIS$1, uint32 I$1, uint32 N$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6403:;
 double D$1;
 D$1 = (double)(((int64)I$1 * (int64)N$1) << (1ll & 63ll));
 fb$result$1 = (double)(int64)I$1 - ((double)(int64)N$1 * D$1);
 goto label$6404;
 label$6404:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T9K_REFLECTEii( struct $12SYSTEM_BUS_T* THIS$1, int32 I$1, int32 N$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6405:;
 double D$1;
 D$1 = (double)(((int64)I$1 * (int64)N$1) << (1ll & 63ll));
 fb$result$1 = (double)(int64)I$1 - ((double)(int64)N$1 * D$1);
 goto label$6406;
 label$6406:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T9K_REFLECTEyy( struct $12SYSTEM_BUS_T* THIS$1, uint64 I$1, uint64 N$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6407:;
 double D$1;
 D$1 = (double)((I$1 * N$1) << (1ull & 63ll));
 fb$result$1 = (double)I$1 - ((double)N$1 * D$1);
 goto label$6408;
 label$6408:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T9K_REFLECTExx( struct $12SYSTEM_BUS_T* THIS$1, int64 I$1, int64 N$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6409:;
 double D$1;
 D$1 = (double)((I$1 * N$1) << (1ll & 63ll));
 fb$result$1 = (double)I$1 - ((double)N$1 * D$1);
 goto label$6410;
 label$6410:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T9K_REFLECTEff( struct $12SYSTEM_BUS_T* THIS$1, float I$1, float N$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6411:;
 double D$1;
 D$1 = (double)((I$1 * N$1) * 0x1.p+1f);
 fb$result$1 = (double)I$1 - ((double)N$1 * D$1);
 goto label$6412;
 label$6412:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T9K_REFLECTEdd( struct $12SYSTEM_BUS_T* THIS$1, double I$1, double N$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6413:;
 double D$1;
 D$1 = (I$1 * N$1) * 0x1.p+1;
 fb$result$1 = I$1 - (N$1 * D$1);
 goto label$6414;
 label$6414:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T9K_REFLECTER9_FLOAT128S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* I$1, struct $9_FLOAT128* N$1 )
{
 struct $9_FLOAT128 TMP$3065$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6415:;
 double D$1;
 D$1 = ((((*(double*)I$1 * *(double*)N$1) + (*(double*)((uint8*)I$1 + 8ll) * *(double*)((uint8*)N$1 + 8ll))) + (*(double*)I$1 * *(double*)N$1)) + (*(double*)((uint8*)I$1 + 8ll) * *(double*)((uint8*)N$1 + 8ll))) * 0x1.p+1;
 _ZN9_FLOAT128C1Edddd( &TMP$3065$1, *(double*)I$1 - (*(double*)N$1 * D$1), *(double*)((uint8*)I$1 + 8ll) - (*(double*)((uint8*)N$1 + 8ll) * D$1), *(double*)I$1 - (*(double*)N$1 * D$1), *(double*)((uint8*)I$1 + 8ll) - (*(double*)((uint8*)N$1 + 8ll) * D$1) );
 uint64 vr$35 = _ZN9_FLOAT128cvyEv( &TMP$3065$1 );
 fb$result$1 = (double)vr$35;
 goto label$6416;
 label$6416:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T9K_REFLECTER9_FLOAT256S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* I$1, struct $9_FLOAT256* N$1 )
{
 struct $9_FLOAT256 TMP$3066$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6417:;
 double D$1;
 D$1 = ((((*(double*)I$1 * *(double*)N$1) + (*(double*)I$1 * *(double*)N$1)) + (*(double*)I$1 * *(double*)N$1)) + (*(double*)I$1 * *(double*)N$1)) * 0x1.p+1;
 _ZN9_FLOAT256C1Edddd( &TMP$3066$1, *(double*)I$1 - (*(double*)N$1 * D$1), *(double*)I$1 - (*(double*)N$1 * D$1), *(double*)I$1 - (*(double*)N$1 * D$1), *(double*)I$1 - (*(double*)N$1 * D$1) );
 uint64 vr$35 = _ZN9_FLOAT256cvyEv( &TMP$3066$1 );
 fb$result$1 = (double)vr$35;
 goto label$6418;
 label$6418:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T9K_REFLECTER9_FLOAT512S1_( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* I$1, struct $9_FLOAT512* N$1 )
{
 struct $9_FLOAT512 TMP$3067$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6419:;
 double D$1;
 D$1 = ((((*(double*)I$1 * *(double*)N$1) + (*(double*)I$1 * *(double*)N$1)) + (*(double*)I$1 * *(double*)N$1)) + (*(double*)I$1 * *(double*)N$1)) * 0x1.p+1;
 _ZN9_FLOAT512C1Edddd( &TMP$3067$1, *(double*)I$1 - (*(double*)N$1 * D$1), *(double*)I$1 - (*(double*)N$1 * D$1), *(double*)I$1 - (*(double*)N$1 * D$1), *(double*)I$1 - (*(double*)N$1 * D$1) );
 uint64 vr$35 = _ZN9_FLOAT512cvyEv( &TMP$3067$1 );
 fb$result$1 = (double)vr$35;
 goto label$6420;
 label$6420:;
 return fb$result$1;
}

struct $7VECTOR2* _ZN12SYSTEM_BUS_T9K_REFLECTER7VECTOR2S1_( struct $7VECTOR2* tmp$3068$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR2* I$1, struct $7VECTOR2* N$1 )
{
 label$6421:;
 double D$1;
 D$1 = ((*(double*)I$1 * *(double*)N$1) + (*(double*)((uint8*)I$1 + 8ll) * *(double*)((uint8*)N$1 + 8ll))) * 0x1.p+1;
 _ZN7VECTOR2C1Edd( tmp$3068$1, *(double*)I$1 - (*(double*)N$1 * D$1), *(double*)((uint8*)I$1 + 8ll) - (*(double*)((uint8*)N$1 + 8ll) * D$1) );
 goto label$6422;
 label$6422:;
 return tmp$3068$1;
}

struct $7VECTOR3* _ZN12SYSTEM_BUS_T9K_REFLECTER7VECTOR3S1_( struct $7VECTOR3* tmp$3070$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* I$1, struct $7VECTOR3* N$1 )
{
 label$6423:;
 double D$1;
 D$1 = (((*(double*)((uint8*)I$1 + 16ll) * *(double*)((uint8*)N$1 + 16ll)) + (*(double*)((uint8*)I$1 + 24ll) * *(double*)((uint8*)N$1 + 24ll))) + (*(double*)((uint8*)I$1 + 32ll) * *(double*)((uint8*)N$1 + 32ll))) * 0x1.p+1;
 _ZN7VECTOR3C1Eddd( tmp$3070$1, *(double*)((uint8*)I$1 + 16ll) - (*(double*)((uint8*)N$1 + 16ll) * D$1), *(double*)((uint8*)I$1 + 24ll) - (*(double*)((uint8*)N$1 + 24ll) * D$1), *(double*)((uint8*)I$1 + 32ll) - (*(double*)((uint8*)N$1 + 32ll) * D$1) );
 goto label$6424;
 label$6424:;
 return tmp$3070$1;
}

struct $7VECTOR4* _ZN12SYSTEM_BUS_T9K_REFLECTER7VECTOR4S1_( struct $7VECTOR4* tmp$3072$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR4* I$1, struct $7VECTOR4* N$1 )
{
 label$6425:;
 double D$1;
 D$1 = ((((*(double*)((uint8*)I$1 + 40ll) * *(double*)((uint8*)N$1 + 40ll)) + (*(double*)((uint8*)I$1 + 48ll) * *(double*)((uint8*)N$1 + 48ll))) + (*(double*)((uint8*)I$1 + 56ll) * *(double*)((uint8*)N$1 + 56ll))) + (*(double*)((uint8*)I$1 + 64ll) * *(double*)((uint8*)N$1 + 64ll))) * 0x1.p+1;
 _ZN7VECTOR4C1Edddd( tmp$3072$1, *(double*)((uint8*)I$1 + 40ll) - (*(double*)((uint8*)N$1 + 40ll) * D$1), *(double*)((uint8*)I$1 + 48ll) - (*(double*)((uint8*)N$1 + 48ll) * D$1), *(double*)((uint8*)I$1 + 56ll) - (*(double*)((uint8*)N$1 + 56ll) * D$1), *(double*)((uint8*)I$1 + 64ll) - (*(double*)((uint8*)N$1 + 64ll) * D$1) );
 goto label$6426;
 label$6426:;
 return tmp$3072$1;
}

struct $7VECTOR2* _ZN12SYSTEM_BUS_T9K_REFRACTER7VECTOR2S1_d( struct $7VECTOR2* tmp$3074$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR2* I$1, struct $7VECTOR2* N$1, double ETA$1 )
{
 label$6427:;
 struct $7VECTOR2 R$1;
 _ZN7VECTOR2C1Ev( &R$1 );
 double DOTNI$1;
 DOTNI$1 = (*(double*)I$1 * *(double*)N$1) + (*(double*)((uint8*)I$1 + 8ll) * *(double*)((uint8*)N$1 + 8ll));
 double K$1;
 K$1 = -((ETA$1 * ETA$1) * (-(DOTNI$1 * DOTNI$1) + 0x1.p+0)) + 0x1.p+0;
 if( K$1 >= 0x0p+0 ) goto label$6430;
 {
  _ZN7VECTOR2C1ERS_( tmp$3074$1, &R$1 );
  goto label$6428;
 }
 goto label$6429;
 label$6430:;
 if( K$1 != 0x0p+0 ) goto label$6431;
 {
  struct $7VECTOR2 TMP$3075$2;
  struct $7VECTOR2 TMP$3076$2;
  double TMP$3077$2;
  struct $7VECTOR2 TMP$3078$2;
  TMP$3077$2 = ETA$1 * DOTNI$1;
  struct $7VECTOR2* vr$19 = _ZmlRdR7VECTOR2( &TMP$3076$2, &TMP$3077$2, N$1 );
  struct $7VECTOR2* vr$22 = _ZmlRdR7VECTOR2( &TMP$3075$2, &ETA$1, I$1 );
  struct $7VECTOR2* vr$24 = _ZmiR7VECTOR2S0_( &TMP$3078$2, vr$22, vr$19 );
  _ZN7VECTOR2aSERS_( &R$1, vr$24 );
 }
 goto label$6429;
 label$6431:;
 {
  struct $7VECTOR2 TMP$3079$2;
  struct $7VECTOR2 TMP$3080$2;
  double TMP$3081$2;
  struct $7VECTOR2 TMP$3082$2;
  double vr$26 = _ZN12SYSTEM_BUS_T6K_SQRTEd( THIS$1, K$1 );
  K$1 = vr$26;
  TMP$3081$2 = (ETA$1 * DOTNI$1) + K$1;
  struct $7VECTOR2* vr$31 = _ZmlRdR7VECTOR2( &TMP$3080$2, &TMP$3081$2, N$1 );
  struct $7VECTOR2* vr$34 = _ZmlRdR7VECTOR2( &TMP$3079$2, &ETA$1, I$1 );
  struct $7VECTOR2* vr$36 = _ZmiR7VECTOR2S0_( &TMP$3082$2, vr$34, vr$31 );
  _ZN7VECTOR2aSERS_( &R$1, vr$36 );
 }
 label$6429:;
 _ZN7VECTOR2C1ERS_( tmp$3074$1, &R$1 );
 goto label$6428;
 label$6428:;
 return tmp$3074$1;
}

struct $7VECTOR3* _ZN12SYSTEM_BUS_T9K_REFRACTER7VECTOR3S1_d( struct $7VECTOR3* tmp$3083$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR3* I$1, struct $7VECTOR3* N$1, double ETA$1 )
{
 label$6432:;
 struct $7VECTOR3 R$1;
 _ZN7VECTOR3C1Ev( &R$1 );
 double DOTNI$1;
 DOTNI$1 = ((*(double*)((uint8*)I$1 + 16ll) * *(double*)((uint8*)N$1 + 16ll)) + (*(double*)((uint8*)I$1 + 24ll) * *(double*)((uint8*)N$1 + 24ll))) + (*(double*)((uint8*)I$1 + 32ll) * *(double*)((uint8*)N$1 + 32ll));
 double K$1;
 K$1 = -((ETA$1 * ETA$1) * (-(DOTNI$1 * DOTNI$1) + 0x1.p+0)) + 0x1.p+0;
 if( K$1 >= 0x0p+0 ) goto label$6435;
 {
  _ZN7VECTOR3C1ERS_( tmp$3083$1, &R$1 );
  goto label$6433;
 }
 goto label$6434;
 label$6435:;
 if( K$1 != 0x0p+0 ) goto label$6436;
 {
  struct $7VECTOR3 TMP$3084$2;
  struct $7VECTOR3 TMP$3085$2;
  struct $7VECTOR3 TMP$3086$2;
  struct $7VECTOR3* vr$22 = _ZmldR7VECTOR3( &TMP$3085$2, ETA$1 * DOTNI$1, N$1 );
  struct $7VECTOR3* vr$24 = _ZmldR7VECTOR3( &TMP$3084$2, ETA$1, I$1 );
  struct $7VECTOR3* vr$26 = _ZmiR7VECTOR3S0_( &TMP$3086$2, vr$24, vr$22 );
  _ZN7VECTOR3aSERS_( &R$1, vr$26 );
 }
 goto label$6434;
 label$6436:;
 {
  struct $7VECTOR3 TMP$3087$2;
  struct $7VECTOR3 TMP$3088$2;
  struct $7VECTOR3 TMP$3089$2;
  double vr$28 = _ZN12SYSTEM_BUS_T6K_SQRTEd( THIS$1, K$1 );
  K$1 = vr$28;
  struct $7VECTOR3* vr$32 = _ZmldR7VECTOR3( &TMP$3088$2, (ETA$1 * DOTNI$1) + K$1, N$1 );
  struct $7VECTOR3* vr$34 = _ZmldR7VECTOR3( &TMP$3087$2, ETA$1, I$1 );
  struct $7VECTOR3* vr$36 = _ZmiR7VECTOR3S0_( &TMP$3089$2, vr$34, vr$32 );
  _ZN7VECTOR3aSERS_( &R$1, vr$36 );
 }
 label$6434:;
 _ZN7VECTOR3C1ERS_( tmp$3083$1, &R$1 );
 goto label$6433;
 label$6433:;
 return tmp$3083$1;
}

struct $7VECTOR4* _ZN12SYSTEM_BUS_T9K_REFRACTER7VECTOR4S1_d( struct $7VECTOR4* tmp$3090$1, struct $12SYSTEM_BUS_T* THIS$1, struct $7VECTOR4* I$1, struct $7VECTOR4* N$1, double ETA$1 )
{
 label$6437:;
 struct $7VECTOR4 R$1;
 _ZN7VECTOR4C1Ev( &R$1 );
 double DOTNI$1;
 DOTNI$1 = (((*(double*)((uint8*)I$1 + 40ll) * *(double*)((uint8*)N$1 + 40ll)) + (*(double*)((uint8*)I$1 + 48ll) * *(double*)((uint8*)N$1 + 48ll))) + (*(double*)((uint8*)I$1 + 56ll) * *(double*)((uint8*)N$1 + 56ll))) + (*(double*)((uint8*)I$1 + 64ll) * *(double*)((uint8*)N$1 + 64ll));
 double K$1;
 K$1 = -((ETA$1 * ETA$1) * (-(DOTNI$1 * DOTNI$1) + 0x1.p+0)) + 0x1.p+0;
 if( K$1 >= 0x0p+0 ) goto label$6440;
 {
  _ZN7VECTOR4C1ERS_( tmp$3090$1, &R$1 );
  goto label$6438;
 }
 goto label$6439;
 label$6440:;
 if( K$1 != 0x0p+0 ) goto label$6441;
 {
  struct $7VECTOR4 TMP$3091$2;
  struct $7VECTOR4 TMP$3092$2;
  struct $7VECTOR4 TMP$3093$2;
  struct $7VECTOR4* vr$26 = _ZmldR7VECTOR4( &TMP$3092$2, ETA$1 * DOTNI$1, N$1 );
  struct $7VECTOR4* vr$28 = _ZmldR7VECTOR4( &TMP$3091$2, ETA$1, I$1 );
  struct $7VECTOR4* vr$30 = _ZmiR7VECTOR4S0_( &TMP$3093$2, vr$28, vr$26 );
  _ZN7VECTOR4aSERS_( &R$1, vr$30 );
 }
 goto label$6439;
 label$6441:;
 {
  struct $7VECTOR4 TMP$3094$2;
  struct $7VECTOR4 TMP$3095$2;
  struct $7VECTOR4 TMP$3096$2;
  double vr$32 = _ZN12SYSTEM_BUS_T6K_SQRTEd( THIS$1, K$1 );
  K$1 = vr$32;
  struct $7VECTOR4* vr$36 = _ZmldR7VECTOR4( &TMP$3095$2, (ETA$1 * DOTNI$1) + K$1, N$1 );
  struct $7VECTOR4* vr$38 = _ZmldR7VECTOR4( &TMP$3094$2, ETA$1, I$1 );
  struct $7VECTOR4* vr$40 = _ZmiR7VECTOR4S0_( &TMP$3096$2, vr$38, vr$36 );
  _ZN7VECTOR4aSERS_( &R$1, vr$40 );
 }
 label$6439:;
 _ZN7VECTOR4C1ERS_( tmp$3090$1, &R$1 );
 goto label$6438;
 label$6438:;
 return tmp$3090$1;
}

double _ZN12SYSTEM_BUS_T10SCREENCODEEd( struct $12SYSTEM_BUS_T* THIS$1, double CODE$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6442:;
 {
  FBSTRING TMP$3097$2;
  FBSTRING* vr$2 = fb_CHR( 1, ((int64)__builtin_nearbyint( CODE$1 )) );
  fb_StrInit( (void*)&TMP$3097$2, -1ll, (void*)vr$2, -1ll, 0 );
  int32 vr$5 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)" ", 2ll );
  if( (int64)vr$5 != 0ll ) goto label$6445;
  label$6446:;
  {
   fb$result$1 = 0x1.p+5;
  }
  goto label$6444;
  label$6445:;
  int32 vr$8 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"!", 2ll );
  if( (int64)vr$8 != 0ll ) goto label$6447;
  label$6448:;
  {
   fb$result$1 = 0x1.08p+5;
  }
  goto label$6444;
  label$6447:;
  int32 vr$11 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"\x16", 2ll );
  if( (int64)vr$11 != 0ll ) goto label$6449;
  label$6450:;
  {
   fb$result$1 = 0x1.1p+5;
  }
  goto label$6444;
  label$6449:;
  int32 vr$14 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"#", 2ll );
  if( (int64)vr$14 != 0ll ) goto label$6451;
  label$6452:;
  {
   fb$result$1 = 0x1.18p+5;
  }
  goto label$6444;
  label$6451:;
  int32 vr$17 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"$", 2ll );
  if( (int64)vr$17 != 0ll ) goto label$6453;
  label$6454:;
  {
   fb$result$1 = 0x1.2p+5;
  }
  goto label$6444;
  label$6453:;
  int32 vr$20 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"%", 2ll );
  if( (int64)vr$20 != 0ll ) goto label$6455;
  label$6456:;
  {
   fb$result$1 = 0x1.28p+5;
  }
  goto label$6444;
  label$6455:;
  int32 vr$23 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"&", 2ll );
  if( (int64)vr$23 != 0ll ) goto label$6457;
  label$6458:;
  {
   fb$result$1 = 0x1.3p+5;
  }
  goto label$6444;
  label$6457:;
  int32 vr$26 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"'", 2ll );
  if( (int64)vr$26 != 0ll ) goto label$6459;
  label$6460:;
  {
   fb$result$1 = 0x1.38p+5;
  }
  goto label$6444;
  label$6459:;
  int32 vr$29 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"(", 2ll );
  if( (int64)vr$29 != 0ll ) goto label$6461;
  label$6462:;
  {
   fb$result$1 = 0x1.4p+5;
  }
  goto label$6444;
  label$6461:;
  int32 vr$32 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)")", 2ll );
  if( (int64)vr$32 != 0ll ) goto label$6463;
  label$6464:;
  {
   fb$result$1 = 0x1.48p+5;
  }
  goto label$6444;
  label$6463:;
  int32 vr$35 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"*", 2ll );
  if( (int64)vr$35 != 0ll ) goto label$6465;
  label$6466:;
  {
   fb$result$1 = 0x1.5p+5;
  }
  goto label$6444;
  label$6465:;
  int32 vr$38 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"+", 2ll );
  if( (int64)vr$38 != 0ll ) goto label$6467;
  label$6468:;
  {
   fb$result$1 = 0x1.58p+5;
  }
  goto label$6444;
  label$6467:;
  int32 vr$41 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)",", 2ll );
  if( (int64)vr$41 != 0ll ) goto label$6469;
  label$6470:;
  {
   fb$result$1 = 0x1.6p+5;
  }
  goto label$6444;
  label$6469:;
  int32 vr$44 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"-", 2ll );
  if( (int64)vr$44 != 0ll ) goto label$6471;
  label$6472:;
  {
   fb$result$1 = 0x1.68p+5;
  }
  goto label$6444;
  label$6471:;
  int32 vr$47 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)".", 2ll );
  if( (int64)vr$47 != 0ll ) goto label$6473;
  label$6474:;
  {
   fb$result$1 = 0x1.7p+5;
  }
  goto label$6444;
  label$6473:;
  int32 vr$50 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"/", 2ll );
  if( (int64)vr$50 != 0ll ) goto label$6475;
  label$6476:;
  {
   fb$result$1 = 0x1.78p+5;
  }
  goto label$6444;
  label$6475:;
  int32 vr$53 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"0", 2ll );
  if( (int64)vr$53 != 0ll ) goto label$6477;
  label$6478:;
  {
   fb$result$1 = 0x1.8p+5;
  }
  goto label$6444;
  label$6477:;
  int32 vr$56 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"1", 2ll );
  if( (int64)vr$56 != 0ll ) goto label$6479;
  label$6480:;
  {
   fb$result$1 = 0x1.88p+5;
  }
  goto label$6444;
  label$6479:;
  int32 vr$59 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"2", 2ll );
  if( (int64)vr$59 != 0ll ) goto label$6481;
  label$6482:;
  {
   fb$result$1 = 0x1.9p+5;
  }
  goto label$6444;
  label$6481:;
  int32 vr$62 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"3", 2ll );
  if( (int64)vr$62 != 0ll ) goto label$6483;
  label$6484:;
  {
   fb$result$1 = 0x1.98p+5;
  }
  goto label$6444;
  label$6483:;
  int32 vr$65 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"4", 2ll );
  if( (int64)vr$65 != 0ll ) goto label$6485;
  label$6486:;
  {
   fb$result$1 = 0x1.Ap+5;
  }
  goto label$6444;
  label$6485:;
  int32 vr$68 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"5", 2ll );
  if( (int64)vr$68 != 0ll ) goto label$6487;
  label$6488:;
  {
   fb$result$1 = 0x1.A8p+5;
  }
  goto label$6444;
  label$6487:;
  int32 vr$71 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"6", 2ll );
  if( (int64)vr$71 != 0ll ) goto label$6489;
  label$6490:;
  {
   fb$result$1 = 0x1.Bp+5;
  }
  goto label$6444;
  label$6489:;
  int32 vr$74 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"7", 2ll );
  if( (int64)vr$74 != 0ll ) goto label$6491;
  label$6492:;
  {
   fb$result$1 = 0x1.B8p+5;
  }
  goto label$6444;
  label$6491:;
  int32 vr$77 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"8", 2ll );
  if( (int64)vr$77 != 0ll ) goto label$6493;
  label$6494:;
  {
   fb$result$1 = 0x1.Cp+5;
  }
  goto label$6444;
  label$6493:;
  int32 vr$80 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"9", 2ll );
  if( (int64)vr$80 != 0ll ) goto label$6495;
  label$6496:;
  {
   fb$result$1 = 0x1.C8p+5;
  }
  goto label$6444;
  label$6495:;
  int32 vr$83 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)":", 2ll );
  if( (int64)vr$83 != 0ll ) goto label$6497;
  label$6498:;
  {
   fb$result$1 = 0x1.Dp+5;
  }
  goto label$6444;
  label$6497:;
  int32 vr$86 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)";", 2ll );
  if( (int64)vr$86 != 0ll ) goto label$6499;
  label$6500:;
  {
   fb$result$1 = 0x1.D8p+5;
  }
  goto label$6444;
  label$6499:;
  int32 vr$89 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"<", 2ll );
  if( (int64)vr$89 != 0ll ) goto label$6501;
  label$6502:;
  {
   fb$result$1 = 0x1.Ep+5;
  }
  goto label$6444;
  label$6501:;
  int32 vr$92 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"=", 2ll );
  if( (int64)vr$92 != 0ll ) goto label$6503;
  label$6504:;
  {
   fb$result$1 = 0x1.E8p+5;
  }
  goto label$6444;
  label$6503:;
  int32 vr$95 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)">", 2ll );
  if( (int64)vr$95 != 0ll ) goto label$6505;
  label$6506:;
  {
   fb$result$1 = 0x1.Fp+5;
  }
  goto label$6444;
  label$6505:;
  int32 vr$98 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"?", 2ll );
  if( (int64)vr$98 != 0ll ) goto label$6507;
  label$6508:;
  {
   fb$result$1 = 0x1.F8p+5;
  }
  goto label$6444;
  label$6507:;
  int32 vr$101 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"@", 2ll );
  if( (int64)vr$101 != 0ll ) goto label$6509;
  label$6510:;
  {
   fb$result$1 = 0x0p+0;
  }
  goto label$6444;
  label$6509:;
  int32 vr$104 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"A", 2ll );
  if( (int64)vr$104 != 0ll ) goto label$6511;
  label$6512:;
  {
   fb$result$1 = 0x1.p+0;
  }
  goto label$6444;
  label$6511:;
  int32 vr$107 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"B", 2ll );
  if( (int64)vr$107 != 0ll ) goto label$6513;
  label$6514:;
  {
   fb$result$1 = 0x1.p+1;
  }
  goto label$6444;
  label$6513:;
  int32 vr$110 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"C", 2ll );
  if( (int64)vr$110 != 0ll ) goto label$6515;
  label$6516:;
  {
   fb$result$1 = 0x1.8p+1;
  }
  goto label$6444;
  label$6515:;
  int32 vr$113 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"D", 2ll );
  if( (int64)vr$113 != 0ll ) goto label$6517;
  label$6518:;
  {
   fb$result$1 = 0x1.p+2;
  }
  goto label$6444;
  label$6517:;
  int32 vr$116 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"E", 2ll );
  if( (int64)vr$116 != 0ll ) goto label$6519;
  label$6520:;
  {
   fb$result$1 = 0x1.4p+2;
  }
  goto label$6444;
  label$6519:;
  int32 vr$119 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"F", 2ll );
  if( (int64)vr$119 != 0ll ) goto label$6521;
  label$6522:;
  {
   fb$result$1 = 0x1.8p+2;
  }
  goto label$6444;
  label$6521:;
  int32 vr$122 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"G", 2ll );
  if( (int64)vr$122 != 0ll ) goto label$6523;
  label$6524:;
  {
   fb$result$1 = 0x1.Cp+2;
  }
  goto label$6444;
  label$6523:;
  int32 vr$125 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"H", 2ll );
  if( (int64)vr$125 != 0ll ) goto label$6525;
  label$6526:;
  {
   fb$result$1 = 0x1.p+3;
  }
  goto label$6444;
  label$6525:;
  int32 vr$128 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"I", 2ll );
  if( (int64)vr$128 != 0ll ) goto label$6527;
  label$6528:;
  {
   fb$result$1 = 0x1.2p+3;
  }
  goto label$6444;
  label$6527:;
  int32 vr$131 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"J", 2ll );
  if( (int64)vr$131 != 0ll ) goto label$6529;
  label$6530:;
  {
   fb$result$1 = 0x1.4p+3;
  }
  goto label$6444;
  label$6529:;
  int32 vr$134 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"K", 2ll );
  if( (int64)vr$134 != 0ll ) goto label$6531;
  label$6532:;
  {
   fb$result$1 = 0x1.6p+3;
  }
  goto label$6444;
  label$6531:;
  int32 vr$137 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"L", 2ll );
  if( (int64)vr$137 != 0ll ) goto label$6533;
  label$6534:;
  {
   fb$result$1 = 0x1.8p+3;
  }
  goto label$6444;
  label$6533:;
  int32 vr$140 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"M", 2ll );
  if( (int64)vr$140 != 0ll ) goto label$6535;
  label$6536:;
  {
   fb$result$1 = 0x1.Ap+3;
  }
  goto label$6444;
  label$6535:;
  int32 vr$143 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"N", 2ll );
  if( (int64)vr$143 != 0ll ) goto label$6537;
  label$6538:;
  {
   fb$result$1 = 0x1.Cp+3;
  }
  goto label$6444;
  label$6537:;
  int32 vr$146 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"O", 2ll );
  if( (int64)vr$146 != 0ll ) goto label$6539;
  label$6540:;
  {
   fb$result$1 = 0x1.Ep+3;
  }
  goto label$6444;
  label$6539:;
  int32 vr$149 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"P", 2ll );
  if( (int64)vr$149 != 0ll ) goto label$6541;
  label$6542:;
  {
   fb$result$1 = 0x1.p+4;
  }
  goto label$6444;
  label$6541:;
  int32 vr$152 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"Q", 2ll );
  if( (int64)vr$152 != 0ll ) goto label$6543;
  label$6544:;
  {
   fb$result$1 = 0x1.1p+4;
  }
  goto label$6444;
  label$6543:;
  int32 vr$155 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"R", 2ll );
  if( (int64)vr$155 != 0ll ) goto label$6545;
  label$6546:;
  {
   fb$result$1 = 0x1.2p+4;
  }
  goto label$6444;
  label$6545:;
  int32 vr$158 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"S", 2ll );
  if( (int64)vr$158 != 0ll ) goto label$6547;
  label$6548:;
  {
   fb$result$1 = 0x1.3p+4;
  }
  goto label$6444;
  label$6547:;
  int32 vr$161 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"T", 2ll );
  if( (int64)vr$161 != 0ll ) goto label$6549;
  label$6550:;
  {
   fb$result$1 = 0x1.4p+4;
  }
  goto label$6444;
  label$6549:;
  int32 vr$164 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"U", 2ll );
  if( (int64)vr$164 != 0ll ) goto label$6551;
  label$6552:;
  {
   fb$result$1 = 0x1.5p+4;
  }
  goto label$6444;
  label$6551:;
  int32 vr$167 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"V", 2ll );
  if( (int64)vr$167 != 0ll ) goto label$6553;
  label$6554:;
  {
   fb$result$1 = 0x1.6p+4;
  }
  goto label$6444;
  label$6553:;
  int32 vr$170 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"W", 2ll );
  if( (int64)vr$170 != 0ll ) goto label$6555;
  label$6556:;
  {
   fb$result$1 = 0x1.7p+4;
  }
  goto label$6444;
  label$6555:;
  int32 vr$173 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"X", 2ll );
  if( (int64)vr$173 != 0ll ) goto label$6557;
  label$6558:;
  {
   fb$result$1 = 0x1.8p+4;
  }
  goto label$6444;
  label$6557:;
  int32 vr$176 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"Y", 2ll );
  if( (int64)vr$176 != 0ll ) goto label$6559;
  label$6560:;
  {
   fb$result$1 = 0x1.9p+4;
  }
  goto label$6444;
  label$6559:;
  int32 vr$179 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"Z", 2ll );
  if( (int64)vr$179 != 0ll ) goto label$6561;
  label$6562:;
  {
   fb$result$1 = 0x1.Ap+4;
  }
  goto label$6444;
  label$6561:;
  int32 vr$182 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"[", 2ll );
  if( (int64)vr$182 != 0ll ) goto label$6563;
  label$6564:;
  {
   fb$result$1 = 0x1.Bp+4;
  }
  goto label$6444;
  label$6563:;
  int32 vr$185 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"\x5C", 2ll );
  if( (int64)vr$185 != 0ll ) goto label$6565;
  label$6566:;
  {
   fb$result$1 = 0x1.Cp+4;
  }
  goto label$6444;
  label$6565:;
  int32 vr$188 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"]", 2ll );
  if( (int64)vr$188 != 0ll ) goto label$6567;
  label$6568:;
  {
   fb$result$1 = 0x1.Dp+4;
  }
  goto label$6444;
  label$6567:;
  int32 vr$191 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"^", 2ll );
  if( (int64)vr$191 != 0ll ) goto label$6569;
  label$6570:;
  {
   fb$result$1 = 0x1.Ep+4;
  }
  goto label$6444;
  label$6569:;
  int32 vr$194 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"_", 2ll );
  if( (int64)vr$194 != 0ll ) goto label$6571;
  label$6572:;
  {
   fb$result$1 = 0x1.Fp+4;
  }
  goto label$6444;
  label$6571:;
  int32 vr$197 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"`", 2ll );
  if( (int64)vr$197 != 0ll ) goto label$6573;
  label$6574:;
  {
   fb$result$1 = 0x1.p+7;
  }
  goto label$6444;
  label$6573:;
  int32 vr$200 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"a", 2ll );
  if( (int64)vr$200 != 0ll ) goto label$6575;
  label$6576:;
  {
   fb$result$1 = 0x1.02p+7;
  }
  goto label$6444;
  label$6575:;
  int32 vr$203 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"b", 2ll );
  if( (int64)vr$203 != 0ll ) goto label$6577;
  label$6578:;
  {
   fb$result$1 = 0x1.04p+7;
  }
  goto label$6444;
  label$6577:;
  int32 vr$206 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"c", 2ll );
  if( (int64)vr$206 != 0ll ) goto label$6579;
  label$6580:;
  {
   fb$result$1 = 0x1.06p+7;
  }
  goto label$6444;
  label$6579:;
  int32 vr$209 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"d", 2ll );
  if( (int64)vr$209 != 0ll ) goto label$6581;
  label$6582:;
  {
   fb$result$1 = 0x1.08p+7;
  }
  goto label$6444;
  label$6581:;
  int32 vr$212 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"e", 2ll );
  if( (int64)vr$212 != 0ll ) goto label$6583;
  label$6584:;
  {
   fb$result$1 = 0x1.0Ap+7;
  }
  goto label$6444;
  label$6583:;
  int32 vr$215 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"f", 2ll );
  if( (int64)vr$215 != 0ll ) goto label$6585;
  label$6586:;
  {
   fb$result$1 = 0x1.0Cp+7;
  }
  goto label$6444;
  label$6585:;
  int32 vr$218 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"g", 2ll );
  if( (int64)vr$218 != 0ll ) goto label$6587;
  label$6588:;
  {
   fb$result$1 = 0x1.0Ep+7;
  }
  goto label$6444;
  label$6587:;
  int32 vr$221 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"h", 2ll );
  if( (int64)vr$221 != 0ll ) goto label$6589;
  label$6590:;
  {
   fb$result$1 = 0x1.1p+7;
  }
  goto label$6444;
  label$6589:;
  int32 vr$224 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"i", 2ll );
  if( (int64)vr$224 != 0ll ) goto label$6591;
  label$6592:;
  {
   fb$result$1 = 0x1.12p+7;
  }
  goto label$6444;
  label$6591:;
  int32 vr$227 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"j", 2ll );
  if( (int64)vr$227 != 0ll ) goto label$6593;
  label$6594:;
  {
   fb$result$1 = 0x1.14p+7;
  }
  goto label$6444;
  label$6593:;
  int32 vr$230 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"k", 2ll );
  if( (int64)vr$230 != 0ll ) goto label$6595;
  label$6596:;
  {
   fb$result$1 = 0x1.16p+7;
  }
  goto label$6444;
  label$6595:;
  int32 vr$233 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"l", 2ll );
  if( (int64)vr$233 != 0ll ) goto label$6597;
  label$6598:;
  {
   fb$result$1 = 0x1.18p+7;
  }
  goto label$6444;
  label$6597:;
  int32 vr$236 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"m", 2ll );
  if( (int64)vr$236 != 0ll ) goto label$6599;
  label$6600:;
  {
   fb$result$1 = 0x1.1Ap+7;
  }
  goto label$6444;
  label$6599:;
  int32 vr$239 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"n", 2ll );
  if( (int64)vr$239 != 0ll ) goto label$6601;
  label$6602:;
  {
   fb$result$1 = 0x1.1Cp+7;
  }
  goto label$6444;
  label$6601:;
  int32 vr$242 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"o", 2ll );
  if( (int64)vr$242 != 0ll ) goto label$6603;
  label$6604:;
  {
   fb$result$1 = 0x1.1Ep+7;
  }
  goto label$6444;
  label$6603:;
  int32 vr$245 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"p", 2ll );
  if( (int64)vr$245 != 0ll ) goto label$6605;
  label$6606:;
  {
   fb$result$1 = 0x1.2p+7;
  }
  goto label$6444;
  label$6605:;
  int32 vr$248 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"q", 2ll );
  if( (int64)vr$248 != 0ll ) goto label$6607;
  label$6608:;
  {
   fb$result$1 = 0x1.22p+7;
  }
  goto label$6444;
  label$6607:;
  int32 vr$251 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"r", 2ll );
  if( (int64)vr$251 != 0ll ) goto label$6609;
  label$6610:;
  {
   fb$result$1 = 0x1.24p+7;
  }
  goto label$6444;
  label$6609:;
  int32 vr$254 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"s", 2ll );
  if( (int64)vr$254 != 0ll ) goto label$6611;
  label$6612:;
  {
   fb$result$1 = 0x1.26p+7;
  }
  goto label$6444;
  label$6611:;
  int32 vr$257 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"t", 2ll );
  if( (int64)vr$257 != 0ll ) goto label$6613;
  label$6614:;
  {
   fb$result$1 = 0x1.28p+7;
  }
  goto label$6444;
  label$6613:;
  int32 vr$260 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"u", 2ll );
  if( (int64)vr$260 != 0ll ) goto label$6615;
  label$6616:;
  {
   fb$result$1 = 0x1.2Ap+7;
  }
  goto label$6444;
  label$6615:;
  int32 vr$263 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"v", 2ll );
  if( (int64)vr$263 != 0ll ) goto label$6617;
  label$6618:;
  {
   fb$result$1 = 0x1.2Cp+7;
  }
  goto label$6444;
  label$6617:;
  int32 vr$266 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"w", 2ll );
  if( (int64)vr$266 != 0ll ) goto label$6619;
  label$6620:;
  {
   fb$result$1 = 0x1.2Ep+7;
  }
  goto label$6444;
  label$6619:;
  int32 vr$269 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"x", 2ll );
  if( (int64)vr$269 != 0ll ) goto label$6621;
  label$6622:;
  {
   fb$result$1 = 0x1.3p+7;
  }
  goto label$6444;
  label$6621:;
  int32 vr$272 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"y", 2ll );
  if( (int64)vr$272 != 0ll ) goto label$6623;
  label$6624:;
  {
   fb$result$1 = 0x1.32p+7;
  }
  goto label$6444;
  label$6623:;
  int32 vr$275 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"z", 2ll );
  if( (int64)vr$275 != 0ll ) goto label$6625;
  label$6626:;
  {
   fb$result$1 = 0x1.34p+7;
  }
  goto label$6444;
  label$6625:;
  int32 vr$278 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"{", 2ll );
  if( (int64)vr$278 != 0ll ) goto label$6627;
  label$6628:;
  {
   fb$result$1 = 0x1.36p+7;
  }
  goto label$6444;
  label$6627:;
  int32 vr$281 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"|", 2ll );
  if( (int64)vr$281 != 0ll ) goto label$6629;
  label$6630:;
  {
   fb$result$1 = 0x1.38p+7;
  }
  goto label$6444;
  label$6629:;
  int32 vr$284 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"}", 2ll );
  if( (int64)vr$284 != 0ll ) goto label$6631;
  label$6632:;
  {
   fb$result$1 = 0x1.3Ap+7;
  }
  goto label$6444;
  label$6631:;
  int32 vr$287 = fb_StrCompare( (void*)&TMP$3097$2, -1ll, (void*)"~", 2ll );
  if( (int64)vr$287 != 0ll ) goto label$6633;
  label$6634:;
  {
   fb$result$1 = 0x1.3Cp+7;
  }
  label$6633:;
  label$6444:;
  fb_StrDelete( (FBSTRING*)&TMP$3097$2 );
 }
 label$6443:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5PEEKBEd( struct $12SYSTEM_BUS_T* THIS$1, double ADR$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6635:;
 fb$result$1 = *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( ADR$1 )) << (3ll & 63ll)));
 label$6636:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T5PEEKWEd( struct $12SYSTEM_BUS_T* THIS$1, double ADR$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$6637:;
 double vr$1 = _ZN12SYSTEM_BUS_T5PEEKBEd( THIS$1, ADR$1 );
 double vr$4 = _ZN12SYSTEM_BUS_T5PEEKBEd( THIS$1, ADR$1 + 0x1.p+0 );
 fb$result$1 = (double)(((int64)__builtin_nearbyint( vr$1 )) | (((int64)__builtin_nearbyint( vr$4 )) << (8ll & 63ll)));
 label$6638:;
 return fb$result$1;
}

void _ZN12SYSTEM_BUS_T5POKEBEdd( struct $12SYSTEM_BUS_T* THIS$1, double ADR$1, double V$1 )
{
 label$6639:;
 *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( ADR$1 )) << (3ll & 63ll))) = V$1;
 {
  if( ADR$1 != 0x1.p+0 ) goto label$6642;
  label$6643:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = V$1;
  }
  goto label$6641;
  label$6642:;
  if( ADR$1 != 0x1.p+1 ) goto label$6644;
  label$6645:;
  {
   *(double*)((int64)(double*)MEM64$ + 394896ll) = V$1;
  }
  goto label$6641;
  label$6644:;
  if( ADR$1 != 0x1.8p+1 ) goto label$6646;
  label$6647:;
  {
   *(double*)((int64)(double*)MEM64$ + 394904ll) = V$1;
  }
  goto label$6641;
  label$6646:;
  if( ADR$1 != 0x1.p+2 ) goto label$6648;
  label$6649:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = *(double*)((int64)(double*)MEM64$ + 394896ll);
  }
  goto label$6641;
  label$6648:;
  if( ADR$1 != 0x1.4p+2 ) goto label$6650;
  label$6651:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = *(double*)((int64)(double*)MEM64$ + 394904ll);
  }
  goto label$6641;
  label$6650:;
  if( ADR$1 != 0x1.8p+2 ) goto label$6652;
  label$6653:;
  {
   *(double*)((int64)(double*)MEM64$ + 394896ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$6641;
  label$6652:;
  if( ADR$1 != 0x1.Cp+2 ) goto label$6654;
  label$6655:;
  {
   *(double*)((int64)(double*)MEM64$ + 394896ll) = *(double*)((int64)(double*)MEM64$ + 394904ll);
  }
  goto label$6641;
  label$6654:;
  if( ADR$1 != 0x1.p+3 ) goto label$6656;
  label$6657:;
  {
   *(double*)((int64)(double*)MEM64$ + 394904ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$6641;
  label$6656:;
  if( ADR$1 != 0x1.2p+3 ) goto label$6658;
  label$6659:;
  {
   *(double*)((int64)(double*)MEM64$ + 394904ll) = *(double*)((int64)(double*)MEM64$ + 394896ll);
  }
  goto label$6641;
  label$6658:;
  if( ADR$1 != 0x1.4p+3 ) goto label$6660;
  label$6661:;
  {
   *(double*)((int64)(double*)MEM64$ + 395344ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$6641;
  label$6660:;
  if( ADR$1 != 0x1.6p+3 ) goto label$6662;
  label$6663:;
  {
   *(double*)((int64)(double*)MEM64$ + 395344ll) = *(double*)((int64)(double*)MEM64$ + 394896ll);
  }
  goto label$6641;
  label$6662:;
  if( ADR$1 != 0x1.8p+3 ) goto label$6664;
  label$6665:;
  {
   *(double*)((int64)(double*)MEM64$ + 395344ll) = *(double*)((int64)(double*)MEM64$ + 394904ll);
  }
  goto label$6641;
  label$6664:;
  if( ADR$1 != 0x1.Ap+3 ) goto label$6666;
  label$6667:;
  {
   *(double*)((int64)(double*)MEM64$ + 395400ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$6641;
  label$6666:;
  if( ADR$1 != 0x1.Cp+3 ) goto label$6668;
  label$6669:;
  {
   *(double*)((int64)(double*)MEM64$ + 395400ll) = *(double*)((int64)(double*)MEM64$ + 394896ll);
  }
  goto label$6641;
  label$6668:;
  if( ADR$1 != 0x1.Ep+3 ) goto label$6670;
  label$6671:;
  {
   *(double*)((int64)(double*)MEM64$ + 395400ll) = *(double*)((int64)(double*)MEM64$ + 394904ll);
  }
  goto label$6641;
  label$6670:;
  if( ADR$1 != 0x1.p+4 ) goto label$6672;
  label$6673:;
  {
   *(double*)((int64)(double*)MEM64$ + 395456ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$6641;
  label$6672:;
  if( ADR$1 != 0x1.1p+4 ) goto label$6674;
  label$6675:;
  {
   *(double*)((int64)(double*)MEM64$ + 395456ll) = *(double*)((int64)(double*)MEM64$ + 394896ll);
  }
  goto label$6641;
  label$6674:;
  if( ADR$1 != 0x1.2p+4 ) goto label$6676;
  label$6677:;
  {
   *(double*)((int64)(double*)MEM64$ + 395456ll) = *(double*)((int64)(double*)MEM64$ + 394904ll);
  }
  goto label$6641;
  label$6676:;
  if( ADR$1 != 0x1.3p+4 ) goto label$6678;
  label$6679:;
  {
   *(double*)((int64)(double*)MEM64$ + 395568ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$6641;
  label$6678:;
  if( ADR$1 != 0x1.4p+4 ) goto label$6680;
  label$6681:;
  {
   *(double*)((int64)(double*)MEM64$ + 395568ll) = *(double*)((int64)(double*)MEM64$ + 394896ll);
  }
  goto label$6641;
  label$6680:;
  if( ADR$1 != 0x1.5p+4 ) goto label$6682;
  label$6683:;
  {
   *(double*)((int64)(double*)MEM64$ + 395568ll) = *(double*)((int64)(double*)MEM64$ + 394904ll);
  }
  goto label$6641;
  label$6682:;
  if( ADR$1 != 0x1.6p+4 ) goto label$6684;
  label$6685:;
  {
   *(double*)((int64)(double*)MEM64$ + 393232ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$6641;
  label$6684:;
  if( ADR$1 != 0x1.7p+4 ) goto label$6686;
  label$6687:;
  {
   *(double*)((int64)(double*)MEM64$ + 393232ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$6641;
  label$6686:;
  if( ADR$1 != 0x1.8p+4 ) goto label$6688;
  label$6689:;
  {
   *(double*)((int64)(double*)MEM64$ + 393232ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$6641;
  label$6688:;
  if( ADR$1 != 0x1.9p+4 ) goto label$6690;
  label$6691:;
  {
   *(double*)((int64)(double*)MEM64$ + 393240ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$6641;
  label$6690:;
  if( ADR$1 != 0x1.Ap+4 ) goto label$6692;
  label$6693:;
  {
   *(double*)((int64)(double*)MEM64$ + 393240ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$6641;
  label$6692:;
  if( ADR$1 != 0x1.Bp+4 ) goto label$6694;
  label$6695:;
  {
   *(double*)((int64)(double*)MEM64$ + 393240ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$6641;
  label$6694:;
  if( ADR$1 != 0x1.Cp+4 ) goto label$6696;
  label$6697:;
  {
   *(double*)((int64)(double*)MEM64$ + 393248ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$6641;
  label$6696:;
  if( ADR$1 != 0x1.Dp+4 ) goto label$6698;
  label$6699:;
  {
   *(double*)((int64)(double*)MEM64$ + 393248ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$6641;
  label$6698:;
  if( ADR$1 != 0x1.Ep+4 ) goto label$6700;
  label$6701:;
  {
   *(double*)((int64)(double*)MEM64$ + 393248ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$6641;
  label$6700:;
  if( ADR$1 != 0x1.Fp+4 ) goto label$6702;
  label$6703:;
  {
   *(double*)((int64)(double*)MEM64$ + 393256ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$6641;
  label$6702:;
  if( ADR$1 != 0x1.p+5 ) goto label$6704;
  label$6705:;
  {
   *(double*)((int64)(double*)MEM64$ + 393256ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$6641;
  label$6704:;
  if( ADR$1 != 0x1.08p+5 ) goto label$6706;
  label$6707:;
  {
   *(double*)((int64)(double*)MEM64$ + 393256ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$6641;
  label$6706:;
  if( ADR$1 != 0x1.1p+5 ) goto label$6708;
  label$6709:;
  {
   *(double*)((int64)(double*)MEM64$ + 394840ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$6641;
  label$6708:;
  if( ADR$1 != 0x1.18p+5 ) goto label$6710;
  label$6711:;
  {
   *(double*)((int64)(double*)MEM64$ + 394864ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$6641;
  label$6710:;
  if( ADR$1 != 0x1.2p+5 ) goto label$6712;
  label$6713:;
  {
   *(double*)((int64)(double*)MEM64$ + 394848ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$6641;
  label$6712:;
  if( ADR$1 != 0x1.28p+5 ) goto label$6714;
  label$6715:;
  {
   *(double*)((int64)(double*)MEM64$ + 394872ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$6641;
  label$6714:;
  if( ADR$1 != 0x1.3p+5 ) goto label$6716;
  label$6717:;
  {
   *(double*)((int64)(double*)MEM64$ + 394856ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$6641;
  label$6716:;
  if( ADR$1 != 0x1.38p+5 ) goto label$6718;
  label$6719:;
  {
   *(double*)((int64)(double*)MEM64$ + 394880ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$6641;
  label$6718:;
  if( ADR$1 != 0x1.4p+5 ) goto label$6720;
  label$6721:;
  {
   *(double*)((int64)(double*)MEM64$ + 394824ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$6641;
  label$6720:;
  if( ADR$1 != 0x1.48p+5 ) goto label$6722;
  label$6723:;
  {
   *(double*)((int64)(double*)MEM64$ + 394832ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$6641;
  label$6722:;
  if( ADR$1 != 0x1.5p+5 ) goto label$6724;
  label$6725:;
  {
   CHAR_H$ = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$6641;
  label$6724:;
  if( ADR$1 != 0x1.58p+5 ) goto label$6726;
  label$6727:;
  {
   CHAR_W$ = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$6641;
  label$6726:;
  if( ADR$1 != 0x1.6p+5 ) goto label$6728;
  label$6729:;
  {
   CHAR_PTR$ = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$6641;
  label$6728:;
  if( ADR$1 != 0x1.68p+5 ) goto label$6730;
  label$6731:;
  {
   CHAR_BUFFER$ = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$6641;
  label$6730:;
  if( ADR$1 != 0x1.7p+5 ) goto label$6732;
  label$6733:;
  {
   BITMASK$ = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$6641;
  label$6732:;
  if( ADR$1 != 0x1.78p+5 ) goto label$6734;
  label$6735:;
  {
   PIXEL_SIZE$ = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$6641;
  label$6734:;
  if( ADR$1 != 0x1.8p+5 ) goto label$6736;
  label$6737:;
  {
   RADIUS$ = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$6641;
  label$6736:;
  if( ADR$1 != 0x1.88p+5 ) goto label$6738;
  label$6739:;
  {
   STRING_ADR$ = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$6641;
  label$6738:;
  if( ADR$1 != 0x1.9p+5 ) goto label$6740;
  label$6741:;
  {
   STRING_LEN$ = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$6641;
  label$6740:;
  if( ADR$1 != 0x1.98p+5 ) goto label$6742;
  label$6743:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = *(double*)((int64)(double*)MEM64$ + 394840ll);
  }
  goto label$6641;
  label$6742:;
  if( ADR$1 != 0x1.Ap+5 ) goto label$6744;
  label$6745:;
  {
   *(double*)((int64)(double*)MEM64$ + 394840ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$6641;
  label$6744:;
  if( ADR$1 != 0x1.A8p+5 ) goto label$6746;
  label$6747:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = *(double*)((int64)(double*)MEM64$ + 394848ll);
  }
  goto label$6641;
  label$6746:;
  if( ADR$1 != 0x1.Bp+5 ) goto label$6748;
  label$6749:;
  {
   *(double*)((int64)(double*)MEM64$ + 394848ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$6641;
  label$6748:;
  if( ADR$1 != 0x1.B8p+5 ) goto label$6750;
  label$6751:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = *(double*)((int64)(double*)MEM64$ + 394856ll);
  }
  goto label$6641;
  label$6750:;
  if( ADR$1 != 0x1.Cp+5 ) goto label$6752;
  label$6753:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = *(double*)((int64)(double*)MEM64$ + 394864ll);
  }
  goto label$6641;
  label$6752:;
  if( ADR$1 != 0x1.C8p+5 ) goto label$6754;
  label$6755:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = *(double*)((int64)(double*)MEM64$ + 394872ll);
  }
  goto label$6641;
  label$6754:;
  if( ADR$1 != 0x1.Dp+5 ) goto label$6756;
  label$6757:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = *(double*)((int64)(double*)MEM64$ + 394880ll);
  }
  goto label$6641;
  label$6756:;
  if( ADR$1 != 0x1.D8p+5 ) goto label$6758;
  label$6759:;
  {
   *(double*)((int64)(double*)MEM64$ + 394880ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$6641;
  label$6758:;
  if( ADR$1 != 0x1.Ep+5 ) goto label$6760;
  label$6761:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = *(double*)((int64)(double*)MEM64$ + 394872ll);
  }
  goto label$6641;
  label$6760:;
  if( ADR$1 != 0x1.E8p+5 ) goto label$6762;
  label$6763:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = *(double*)((int64)(double*)MEM64$ + 394880ll);
  }
  goto label$6641;
  label$6762:;
  if( ADR$1 != 0x1.Fp+5 ) goto label$6764;
  label$6765:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = A1$;
  }
  goto label$6641;
  label$6764:;
  if( ADR$1 != 0x1.F8p+5 ) goto label$6766;
  label$6767:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = A2$;
  }
  goto label$6641;
  label$6766:;
  if( ADR$1 != 0x1.p+6 ) goto label$6768;
  label$6769:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = A3$;
  }
  goto label$6641;
  label$6768:;
  if( ADR$1 != 0x1.04p+6 ) goto label$6770;
  label$6771:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = A4$;
  }
  goto label$6641;
  label$6770:;
  if( ADR$1 != 0x1.08p+6 ) goto label$6772;
  label$6773:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = A5$;
  }
  goto label$6641;
  label$6772:;
  if( ADR$1 != 0x1.0Cp+6 ) goto label$6774;
  label$6775:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = A6$;
  }
  goto label$6641;
  label$6774:;
  if( ADR$1 != 0x1.1p+6 ) goto label$6776;
  label$6777:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = A7$;
  }
  goto label$6641;
  label$6776:;
  if( ADR$1 != 0x1.14p+6 ) goto label$6778;
  label$6779:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = A8$;
  }
  goto label$6641;
  label$6778:;
  if( ADR$1 != 0x1.18p+6 ) goto label$6780;
  label$6781:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = *(double*)((int64)(double*)MEM64$ + 394880ll);
  }
  goto label$6641;
  label$6780:;
  if( ADR$1 != 0x1.1Cp+6 ) goto label$6782;
  label$6783:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = *(double*)((int64)(double*)MEM64$ + 394896ll) + *(double*)((int64)(double*)MEM64$ + 394904ll);
  }
  goto label$6641;
  label$6782:;
  if( ADR$1 != 0x1.2p+6 ) goto label$6784;
  label$6785:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = *(double*)((int64)(double*)MEM64$ + 394896ll) - *(double*)((int64)(double*)MEM64$ + 394904ll);
  }
  goto label$6641;
  label$6784:;
  if( ADR$1 != 0x1.24p+6 ) goto label$6786;
  label$6787:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = *(double*)((int64)(double*)MEM64$ + 394896ll) * *(double*)((int64)(double*)MEM64$ + 394904ll);
  }
  goto label$6641;
  label$6786:;
  if( ADR$1 != 0x1.28p+6 ) goto label$6788;
  label$6789:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = *(double*)((int64)(double*)MEM64$ + 394896ll) / *(double*)((int64)(double*)MEM64$ + 394904ll);
  }
  goto label$6641;
  label$6788:;
  if( ADR$1 != 0x1.2Cp+6 ) goto label$6790;
  label$6791:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = (double)(((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394896ll) )) / ((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394904ll) )));
  }
  goto label$6641;
  label$6790:;
  if( ADR$1 != 0x1.3p+6 ) goto label$6792;
  label$6793:;
  {
   double vr$10 = pow( *(double*)((int64)(double*)MEM64$ + 394896ll), *(double*)((int64)(double*)MEM64$ + 394904ll) );
   *(double*)((int64)(double*)MEM64$ + 394888ll) = vr$10;
  }
  goto label$6641;
  label$6792:;
  if( ADR$1 != 0x1.34p+6 ) goto label$6794;
  label$6795:;
  {
   double vr$11 = _ZN12SYSTEM_BUS_T8K_MODULOEdd( THIS$1, *(double*)((int64)(double*)MEM64$ + 394896ll), *(double*)((int64)(double*)MEM64$ + 394904ll) );
   *(double*)((int64)(double*)MEM64$ + 394888ll) = vr$11;
  }
  goto label$6641;
  label$6794:;
  if( ADR$1 != 0x1.38p+6 ) goto label$6796;
  label$6797:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = -(*(double*)((int64)(double*)MEM64$ + 394888ll));
  }
  goto label$6641;
  label$6796:;
  if( ADR$1 != 0x1.3Cp+6 ) goto label$6798;
  label$6799:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = (double)(((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394896ll) )) << (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394904ll) )) & 63ll));
  }
  goto label$6641;
  label$6798:;
  if( ADR$1 != 0x1.4p+6 ) goto label$6800;
  label$6801:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = (double)(((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394896ll) )) >> (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394904ll) )) & 63ll));
  }
  goto label$6641;
  label$6800:;
  if( ADR$1 != 0x1.44p+6 ) goto label$6802;
  label$6803:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = (double)(int64)-(*(double*)((int64)(double*)MEM64$ + 394896ll) == *(double*)((int64)(double*)MEM64$ + 394904ll));
  }
  goto label$6641;
  label$6802:;
  if( ADR$1 != 0x1.48p+6 ) goto label$6804;
  label$6805:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = (double)(int64)-(*(double*)((int64)(double*)MEM64$ + 394896ll) != *(double*)((int64)(double*)MEM64$ + 394904ll));
  }
  goto label$6641;
  label$6804:;
  if( ADR$1 != 0x1.4Cp+6 ) goto label$6806;
  label$6807:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = (double)(int64)-(*(double*)((int64)(double*)MEM64$ + 394896ll) < *(double*)((int64)(double*)MEM64$ + 394904ll));
  }
  goto label$6641;
  label$6806:;
  if( ADR$1 != 0x1.5p+6 ) goto label$6808;
  label$6809:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = (double)(int64)-(*(double*)((int64)(double*)MEM64$ + 394896ll) <= *(double*)((int64)(double*)MEM64$ + 394904ll));
  }
  goto label$6641;
  label$6808:;
  if( ADR$1 != 0x1.54p+6 ) goto label$6810;
  label$6811:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = (double)(int64)-(*(double*)((int64)(double*)MEM64$ + 394896ll) >= *(double*)((int64)(double*)MEM64$ + 394904ll));
  }
  goto label$6641;
  label$6810:;
  if( ADR$1 != 0x1.58p+6 ) goto label$6812;
  label$6813:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = (double)(int64)-(*(double*)((int64)(double*)MEM64$ + 394896ll) > *(double*)((int64)(double*)MEM64$ + 394904ll));
  }
  goto label$6641;
  label$6812:;
  if( ADR$1 != 0x1.5Cp+6 ) goto label$6814;
  label$6815:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = (double)(((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394896ll) )) & ((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394904ll) )));
  }
  goto label$6641;
  label$6814:;
  if( ADR$1 != 0x1.6p+6 ) goto label$6816;
  label$6817:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = (double)~(((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394896ll) )) ^ ((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394904ll) )));
  }
  goto label$6641;
  label$6816:;
  if( ADR$1 != 0x1.64p+6 ) goto label$6818;
  label$6819:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = (double)(~((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394896ll) )) | ((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394904ll) )));
  }
  goto label$6641;
  label$6818:;
  if( ADR$1 != 0x1.68p+6 ) goto label$6820;
  label$6821:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = (double)(((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394896ll) )) | ((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394904ll) )));
  }
  goto label$6641;
  label$6820:;
  if( ADR$1 != 0x1.6Cp+6 ) goto label$6822;
  label$6823:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = (double)(((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394896ll) )) ^ ((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394904ll) )));
  }
  goto label$6641;
  label$6822:;
  if( ADR$1 != 0x1.7p+6 ) goto label$6824;
  label$6825:;
  {
   *(double*)((int64)(double*)MEM64$ + 394896ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$6641;
  label$6824:;
  if( ADR$1 != 0x1.74p+6 ) goto label$6826;
  label$6827:;
  {
   *(double*)((int64)(double*)MEM64$ + 394904ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$6641;
  label$6826:;
  if( ADR$1 != 0x1.78p+6 ) goto label$6828;
  label$6829:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = *(double*)((int64)(double*)MEM64$ + 394888ll) + 0x1.p+0;
  }
  goto label$6641;
  label$6828:;
  if( ADR$1 != 0x1.7Cp+6 ) goto label$6830;
  label$6831:;
  {
   *(double*)((int64)(double*)MEM64$ + 394896ll) = *(double*)((int64)(double*)MEM64$ + 394896ll) + 0x1.p+0;
  }
  goto label$6641;
  label$6830:;
  if( ADR$1 != 0x1.8p+6 ) goto label$6832;
  label$6833:;
  {
   *(double*)((int64)(double*)MEM64$ + 394904ll) = *(double*)((int64)(double*)MEM64$ + 394904ll) + 0x1.p+0;
  }
  goto label$6641;
  label$6832:;
  if( ADR$1 != 0x1.84p+6 ) goto label$6834;
  label$6835:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = *(double*)((int64)(double*)MEM64$ + 394888ll) + -0x1.p+0;
  }
  goto label$6641;
  label$6834:;
  if( ADR$1 != 0x1.88p+6 ) goto label$6836;
  label$6837:;
  {
   *(double*)((int64)(double*)MEM64$ + 394896ll) = *(double*)((int64)(double*)MEM64$ + 394896ll) + -0x1.p+0;
  }
  goto label$6641;
  label$6836:;
  if( ADR$1 != 0x1.8Cp+6 ) goto label$6838;
  label$6839:;
  {
   *(double*)((int64)(double*)MEM64$ + 394904ll) = *(double*)((int64)(double*)MEM64$ + 394904ll) + -0x1.p+0;
  }
  goto label$6641;
  label$6838:;
  if( ADR$1 != 0x1.9p+6 ) goto label$6840;
  label$6841:;
  {
   if( *(double*)((int64)(double*)MEM64$ + 394896ll) != *(double*)((int64)(double*)MEM64$ + 394904ll) ) goto label$6843;
   {
    *(double*)((int64)(double*)MEM64$ + 395344ll) = V$1;
    label$6843:;
   }
  }
  goto label$6641;
  label$6840:;
  if( ADR$1 != 0x1.94p+6 ) goto label$6844;
  label$6845:;
  {
   if( *(double*)((int64)(double*)MEM64$ + 394896ll) == *(double*)((int64)(double*)MEM64$ + 394904ll) ) goto label$6847;
   {
    *(double*)((int64)(double*)MEM64$ + 395344ll) = V$1;
    label$6847:;
   }
  }
  goto label$6641;
  label$6844:;
  if( ADR$1 != 0x1.98p+6 ) goto label$6848;
  label$6849:;
  {
   if( *(double*)((int64)(double*)MEM64$ + 394896ll) <= *(double*)((int64)(double*)MEM64$ + 394904ll) ) goto label$6851;
   {
    *(double*)((int64)(double*)MEM64$ + 395344ll) = V$1;
    label$6851:;
   }
  }
  goto label$6641;
  label$6848:;
  if( ADR$1 != 0x1.9Cp+6 ) goto label$6852;
  label$6853:;
  {
   if( *(double*)((int64)(double*)MEM64$ + 394896ll) < *(double*)((int64)(double*)MEM64$ + 394904ll) ) goto label$6855;
   {
    *(double*)((int64)(double*)MEM64$ + 395344ll) = V$1;
    label$6855:;
   }
  }
  goto label$6641;
  label$6852:;
  if( ADR$1 != 0x1.Ap+6 ) goto label$6856;
  label$6857:;
  {
   if( *(double*)((int64)(double*)MEM64$ + 394896ll) > *(double*)((int64)(double*)MEM64$ + 394904ll) ) goto label$6859;
   {
    *(double*)((int64)(double*)MEM64$ + 395344ll) = V$1;
    label$6859:;
   }
  }
  goto label$6641;
  label$6856:;
  if( ADR$1 != 0x1.A4p+6 ) goto label$6860;
  label$6861:;
  {
   if( *(double*)((int64)(double*)MEM64$ + 394896ll) >= *(double*)((int64)(double*)MEM64$ + 394904ll) ) goto label$6863;
   {
    *(double*)((int64)(double*)MEM64$ + 395344ll) = V$1;
    label$6863:;
   }
  }
  goto label$6641;
  label$6860:;
  if( ADR$1 != 0x1.A8p+6 ) goto label$6864;
  label$6865:;
  {
   *(double*)((int64)(double*)MEM64$ + 395344ll) = V$1;
  }
  goto label$6641;
  label$6864:;
  if( ADR$1 != 0x1.ACp+6 ) goto label$6866;
  label$6867:;
  {
   double vr$59 = _ZN12SYSTEM_BUS_T5PEEKBEd( THIS$1, V$1 );
   *(double*)((int64)(double*)MEM64$ + 394888ll) = vr$59;
  }
  goto label$6641;
  label$6866:;
  if( ADR$1 != 0x1.Bp+6 ) goto label$6868;
  label$6869:;
  {
   _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, V$1, *(double*)((int64)(double*)MEM64$ + 394888ll) );
  }
  goto label$6641;
  label$6868:;
  if( ADR$1 != 0x1.B4p+6 ) goto label$6870;
  label$6871:;
  {
   uint64 TMP$3;
   __builtin_memset( &TMP$3, 0, 8ll );
   uint64 TIMES$3;
   __builtin_memset( &TIMES$3, 0, 8ll );
   *(double*)((int64)(double*)MEM64$ + 397040ll) = *(double*)((int64)(double*)MEM64$ + 395344ll);
   *(double*)((int64)(double*)MEM64$ + 395400ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+0 )) << (3ll & 63ll))) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+1 )) << (3ll & 63ll))) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.8p+1 )) << (3ll & 63ll))) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+2 )) << (3ll & 63ll))) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.4p+2 )) << (3ll & 63ll)));
   *(double*)((int64)(double*)MEM64$ + 395456ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.8p+2 )) << (3ll & 63ll))) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.Cp+2 )) << (3ll & 63ll))) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+3 )) << (3ll & 63ll))) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.2p+3 )) << (3ll & 63ll))) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.4p+3 )) << (3ll & 63ll)));
   *(double*)((int64)(double*)MEM64$ + 396968ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.6p+3 )) << (3ll & 63ll))) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.8p+3 )) << (3ll & 63ll))) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.Ap+3 )) << (3ll & 63ll))) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.Cp+3 )) << (3ll & 63ll))) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.Ep+3 )) << (3ll & 63ll)));
   label$6872:;
   if( (double)TMP$3 == *(double*)((int64)(double*)MEM64$ + 396968ll) ) goto label$6873;
   {
    {
     PC$ = *(double*)((int64)(double*)MEM64$ + 395400ll);
     double TMP$3186$5;
     TMP$3186$5 = *(double*)((int64)(double*)MEM64$ + 395456ll);
     goto label$6874;
     label$6877:;
     {
      _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( PC$ )) << (3ll & 63ll))), 0x0p+0 );
     }
     label$6875:;
     PC$ = PC$ + 0x1.p+0;
     label$6874:;
     if( PC$ <= TMP$3186$5 ) goto label$6877;
     label$6876:;
    }
    double vr$152 = _ZN12SYSTEM_BUS_T8K_MODULOEdd( THIS$1, (double)(TMP$3 + 1ull), *(double*)((int64)(double*)MEM64$ + 396968ll) );
    TMP$3 = ((uint64)__builtin_nearbyint( vr$152 ));
   }
   goto label$6872;
   label$6873:;
  }
  goto label$6641;
  label$6870:;
  if( ADR$1 != 0x1.B8p+6 ) goto label$6878;
  label$6879:;
  {
   fb_Cls( -65536 );
   FBSTRING TMP$3;
   __builtin_memset( &TMP$3, 0, 24ll );
   FBSTRING* vr$155 = fb_StrAllocTempDescZEx( (uint8*)"cobc -x -free tmp.cob", 21ll );
   fb_Shell( (FBSTRING*)vr$155 );
   FBSTRING* vr$156 = fb_StrAllocTempDescZEx( (uint8*)"./tmp > tmp.txt", 15ll );
   fb_Shell( (FBSTRING*)vr$156 );
   FBSTRING* vr$157 = fb_StrAllocTempDescZEx( (uint8*)"tmp.txt", 7ll );
   fb_FileOpen( (FBSTRING*)vr$157, 2u, 0u, 0u, 1, 0 );
   label$6880:;
   int32 vr$158 = fb_FileEof( 1 );
   if( (int64)vr$158 != 0ll ) goto label$6881;
   {
    fb_FileInput( 1 );
    fb_InputString( (void*)&TMP$3, -1ll, 0 );
    fb_PrintString( 0, (FBSTRING*)&TMP$3, 1 );
   }
   goto label$6880;
   label$6881:;
   fb_FileClose( 1 );
   FBSTRING* vr$162 = fb_StrAllocTempDescZEx( (uint8*)"press any key to contiune.", 26ll );
   fb_PrintString( 0, (FBSTRING*)vr$162, 1 );
   fb_Sleep( -1 );
   fb_StrDelete( (FBSTRING*)&TMP$3 );
  }
  goto label$6641;
  label$6878:;
  if( ADR$1 != 0x1.BCp+6 ) goto label$6882;
  label$6883:;
  {
   *(double*)((int64)(double*)MEM64$ + 395400ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+0 )) << (3ll & 63ll))) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+1 )) << (3ll & 63ll))) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.8p+1 )) << (3ll & 63ll))) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+2 )) << (3ll & 63ll))) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.4p+2 )) << (3ll & 63ll)));
   double vr$192 = _ZN12SYSTEM_BUS_T5PEEKBEd( THIS$1, *(double*)((int64)(double*)MEM64$ + 395400ll) );
   *(double*)((int64)(double*)MEM64$ + 394912ll) = vr$192;
  }
  goto label$6641;
  label$6882:;
  if( ADR$1 != 0x1.Cp+6 ) goto label$6884;
  label$6885:;
  {
   *(double*)((int64)(double*)MEM64$ + 395400ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+0 )) << (3ll & 63ll))) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+1 )) << (3ll & 63ll))) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.8p+1 )) << (3ll & 63ll))) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+2 )) << (3ll & 63ll))) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.4p+2 )) << (3ll & 63ll)));
   *(double*)((int64)(double*)MEM64$ + 394912ll) = *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.8p+2 )) << (3ll & 63ll)));
   _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, *(double*)((int64)(double*)MEM64$ + 395400ll), *(double*)((int64)(double*)MEM64$ + 394912ll) );
  }
  goto label$6641;
  label$6884:;
  if( ADR$1 != 0x1.C4p+6 ) goto label$6886;
  label$6887:;
  {
   *(double*)((int64)(double*)MEM64$ + 395400ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+0 )) << (3ll & 63ll))) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+1 )) << (3ll & 63ll))) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.8p+1 )) << (3ll & 63ll))) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+2 )) << (3ll & 63ll))) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.4p+2 )) << (3ll & 63ll)));
   double vr$252 = _ZN12SYSTEM_BUS_T5PEEKWEd( THIS$1, *(double*)((int64)(double*)MEM64$ + 395400ll) );
   *(double*)((int64)(double*)MEM64$ + 394912ll) = vr$252;
  }
  goto label$6641;
  label$6886:;
  if( ADR$1 != 0x1.C8p+6 ) goto label$6888;
  label$6889:;
  {
   *(double*)((int64)(double*)MEM64$ + 395400ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+0 )) << (3ll & 63ll))) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+1 )) << (3ll & 63ll))) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.8p+1 )) << (3ll & 63ll))) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+2 )) << (3ll & 63ll))) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.4p+2 )) << (3ll & 63ll)));
   *(double*)((int64)(double*)MEM64$ + 394912ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.8p+2 )) << (3ll & 63ll))) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.Cp+2 )) << (3ll & 63ll))) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+3 )) << (3ll & 63ll))) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.2p+3 )) << (3ll & 63ll))) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.4p+3 )) << (3ll & 63ll)));
   _ZN12SYSTEM_BUS_T5POKEWEdd( THIS$1, *(double*)((int64)(double*)MEM64$ + 395400ll), *(double*)((int64)(double*)MEM64$ + 394912ll) );
  }
  goto label$6641;
  label$6888:;
  if( ADR$1 != 0x1.CCp+6 ) goto label$6890;
  label$6891:;
  {
   *(double*)((int64)(double*)MEM64$ + 395400ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+0 )) << (3ll & 63ll))) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+1 )) << (3ll & 63ll))) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.8p+1 )) << (3ll & 63ll))) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+2 )) << (3ll & 63ll))) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.4p+2 )) << (3ll & 63ll)));
   *(double*)((int64)(double*)MEM64$ + 395456ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.8p+2 )) << (3ll & 63ll))) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.Cp+2 )) << (3ll & 63ll))) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+3 )) << (3ll & 63ll))) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.2p+3 )) << (3ll & 63ll))) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.4p+3 )) << (3ll & 63ll)));
   double vr$365 = _ZN12SYSTEM_BUS_T5PEEKBEd( THIS$1, *(double*)((int64)(double*)MEM64$ + 395456ll) );
   _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, *(double*)((int64)(double*)MEM64$ + 395400ll), vr$365 );
  }
  goto label$6641;
  label$6890:;
  if( ADR$1 != 0x1.Dp+6 ) goto label$6892;
  label$6893:;
  {
   *(double*)((int64)(double*)MEM64$ + 395400ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+0 )) << (3ll & 63ll))) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+1 )) << (3ll & 63ll))) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.8p+1 )) << (3ll & 63ll))) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+2 )) << (3ll & 63ll))) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.4p+2 )) << (3ll & 63ll)));
   *(double*)((int64)(double*)MEM64$ + 395456ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.8p+2 )) << (3ll & 63ll))) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.Cp+2 )) << (3ll & 63ll))) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+3 )) << (3ll & 63ll))) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.2p+3 )) << (3ll & 63ll))) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.4p+3 )) << (3ll & 63ll)));
   *(double*)((int64)(double*)MEM64$ + 395344ll) = *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.6p+3;
   double vr$423 = _ZN12SYSTEM_BUS_T5PEEKWEd( THIS$1, *(double*)((int64)(double*)MEM64$ + 395456ll) );
   _ZN12SYSTEM_BUS_T5POKEWEdd( THIS$1, *(double*)((int64)(double*)MEM64$ + 395400ll), vr$423 );
  }
  goto label$6641;
  label$6892:;
  if( ADR$1 != 0x1.D4p+6 ) goto label$6894;
  label$6895:;
  {
   *(double*)((int64)(double*)MEM64$ + 395400ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+0 )) << (3ll & 63ll))) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+1 )) << (3ll & 63ll))) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.8p+1 )) << (3ll & 63ll))) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+2 )) << (3ll & 63ll))) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.4p+2 )) << (3ll & 63ll)));
   FBSTRING* vr$452 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394888ll) );
   fb_StrAssign( (void*)&STRING_DATA$, -1ll, (void*)vr$452, -1ll, 0 );
   {
    R3$ = 0x1.p+0;
    double TMP$3191$4;
    int64 vr$453 = fb_StrLen( (void*)&STRING_DATA$, -1ll );
    TMP$3191$4 = (double)vr$453;
    goto label$6896;
    label$6899:;
    {
     FBSTRING* vr$456 = fb_StrMid( (FBSTRING*)&STRING_DATA$, ((int64)__builtin_nearbyint( R3$ )), 1ll );
     uint32 vr$457 = fb_ASC( (FBSTRING*)vr$456, 1ll );
     double vr$459 = _ZN12SYSTEM_BUS_T10SCREENCODEEd( THIS$1, (double)vr$457 );
     _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, ((CHAR_BUFFER$ + ADR0$) + R3$) + -0x1.p+0, vr$459 );
    }
    label$6897:;
    R3$ = R3$ + 0x1.p+0;
    label$6896:;
    if( R3$ <= TMP$3191$4 ) goto label$6899;
    label$6898:;
   }
  }
  goto label$6641;
  label$6894:;
  if( ADR$1 != 0x1.D8p+6 ) goto label$6900;
  label$6901:;
  {
   STRING_ADR$ = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+0 )) << (3ll & 63ll))) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+1 )) << (3ll & 63ll))) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.8p+1 )) << (3ll & 63ll))) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+2 )) << (3ll & 63ll))) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.4p+2 )) << (3ll & 63ll)));
   STRING_LEN$ = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.8p+2 )) << (3ll & 63ll))) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.Cp+2 )) << (3ll & 63ll))) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+3 )) << (3ll & 63ll))) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.2p+3 )) << (3ll & 63ll))) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.4p+3 )) << (3ll & 63ll)));
   *(double*)((int64)(double*)MEM64$ + 395400ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.6p+3 )) << (3ll & 63ll))) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.8p+3 )) << (3ll & 63ll))) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.Ap+3 )) << (3ll & 63ll))) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.Cp+3 )) << (3ll & 63ll))) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.Ep+3 )) << (3ll & 63ll)));
   *(double*)((int64)(double*)MEM64$ + 395344ll) = *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+4;
   {
    R3$ = 0x0p+0;
    double TMP$3192$4;
    TMP$3192$4 = STRING_LEN$;
    goto label$6902;
    label$6905:;
    {
     double vr$552 = _ZN12SYSTEM_BUS_T10SCREENCODEEd( THIS$1, *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( STRING_ADR$ + R3$ )) << (3ll & 63ll))) );
     _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, (CHAR_BUFFER$ + *(double*)((int64)(double*)MEM64$ + 395400ll)) + R3$, vr$552 );
    }
    label$6903:;
    R3$ = R3$ + 0x1.p+0;
    label$6902:;
    if( R3$ <= TMP$3192$4 ) goto label$6905;
    label$6904:;
   }
  }
  goto label$6641;
  label$6900:;
  if( ADR$1 < 0x1.p+14 ) goto label$6906;
  if( ADR$1 > 0x1.F9Cp+14 ) goto label$6906;
  label$6907:;
  {
   ADR$1 = ADR$1 + -0x1.p+14;
   C$ = ((int64)__builtin_nearbyint( V$1 ));
   C$ = C$ << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) & 63ll);
   C$ = ((int64)__builtin_nearbyint( (double)C$ + *(double*)((int64)(double*)MEM64$ + 395072ll) ));
   double vr$563 = _ZN12SYSTEM_BUS_T8K_MODULOEdd( THIS$1, ADR$1, 0x1.68p+6 );
   XS$ = ((int64)__builtin_nearbyint( vr$563 ));
   XS$ = XS$ << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) & 63ll);
   XS$ = ((int64)__builtin_nearbyint( (double)XS$ + ((double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) * 0x1.Cp+1) ));
   YS$ = ((int64)__builtin_nearbyint( ADR$1 )) / 90ll;
   YS$ = YS$ << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) & 63ll);
   YS$ = ((int64)__builtin_nearbyint( (double)YS$ + ((double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) * 0x1.Cp+1) ));
   if( *(double*)((int64)(double*)MEM64$ + ((int64)RVS$ << (3ll & 63ll))) == (double)(int64)*(uint8*)NIBBLES$ ) goto label$6909;
   {
    C$ = C$ & (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll));
   }
   label$6909:;
   label$6908:;
   if( *(double*)((int64)(double*)MEM64$ + 394856ll) > (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$6911;
   {
    *(double*)((int64)(double*)MEM64$ + 394856ll) = (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
   }
   label$6911:;
   label$6910:;
   _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), 0x1.8204p+15, (double)*(uint8*)NIBBLES$ );
   *(double*)&Y$ = (double)*(uint8*)NIBBLES$;
   *(double*)&X$ = (double)*(uint8*)NIBBLES$;
   label$6912:;
   if( ((int64)-((double)Y$ == *(double*)((int64)(double*)MEM64$ + 395088ll)) & (int64)-((double)X$ == *(double*)((int64)(double*)MEM64$ + 395080ll))) != 0ll ) goto label$6913;
   {
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), 0x1.p+1, (double)XS$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), 0x1.8p+1, (double)X$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), 0x1.1Cp+6, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), 0x1.8p+2, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), 0x1.8p+1, (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), 0x1.24p+6, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), 0x1.8p+2, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), 0x1.8p+1, (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), 0x1.2Cp+6, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), 0x1.8p+2, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), 0x1.8p+1, *(double*)((int64)(double*)MEM64$ + 395032ll) );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), 0x1.1Cp+6, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), 0x1.1p+5, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), 0x1.p+1, (double)YS$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), 0x1.8p+1, (double)Y$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), 0x1.1Cp+6, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), 0x1.8p+2, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), 0x1.8p+1, 0x1.Cp+1 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), 0x1.24p+6, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), 0x1.8p+2, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), 0x1.8p+1, (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), 0x1.2Cp+6, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), 0x1.8p+2, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), 0x1.8p+1, *(double*)((int64)(double*)MEM64$ + 395040ll) );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), 0x1.1Cp+6, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), 0x1.2p+5, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), 0x1.p+1, (double)XS$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), 0x1.8p+1, (double)X$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), 0x1.1Cp+6, (double)*(uint8*)NIBBLES$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), 0x1.8p+2, (double)*(uint8*)NIBBLES$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), 0x1.8p+1, (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), 0x1.24p+6, (double)*(uint8*)NIBBLES$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), 0x1.8p+2, (double)*(uint8*)NIBBLES$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), 0x1.8p+1, (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), 0x1.1Cp+6, (double)*(uint8*)NIBBLES$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), 0x1.8p+2, (double)*(uint8*)NIBBLES$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), 0x1.8p+1, (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), 0x1.2Cp+6, (double)*(uint8*)NIBBLES$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), 0x1.8p+2, (double)*(uint8*)NIBBLES$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), 0x1.8p+1, *(double*)((int64)(double*)MEM64$ + 395032ll) );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), 0x1.1Cp+6, (double)*(uint8*)NIBBLES$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), 0x1.18p+5, (double)*(uint8*)NIBBLES$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), 0x1.p+1, (double)YS$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), 0x1.8p+1, (double)Y$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), 0x1.1Cp+6, (double)*(uint8*)NIBBLES$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), 0x1.8p+2, (double)*(uint8*)NIBBLES$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), 0x1.8p+1, 0x1.Cp+1 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), 0x1.24p+6, (double)*(uint8*)NIBBLES$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), 0x1.8p+2, (double)*(uint8*)NIBBLES$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), 0x1.8p+1, (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), 0x1.1Cp+6, (double)*(uint8*)NIBBLES$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), 0x1.8p+2, (double)*(uint8*)NIBBLES$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), 0x1.8p+1, (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), 0x1.2Cp+6, (double)*(uint8*)NIBBLES$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), 0x1.8p+2, (double)*(uint8*)NIBBLES$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), 0x1.8p+1, *(double*)((int64)(double*)MEM64$ + 395040ll) );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), 0x1.1Cp+6, (double)*(uint8*)NIBBLES$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), 0x1.28p+5, (double)*(uint8*)NIBBLES$ );
    double vr$699 = _ZN12SYSTEM_BUS_T6PEEK64Ed( THIS$1, 0x1.81F8p+15 );
    _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), 0x1.81F8p+15, vr$699 );
    X$ = X$ + 1ll;
    if( (double)X$ <= *(double*)((int64)(double*)MEM64$ + 395080ll) ) goto label$6915;
    {
     X$ = 0ll;
     Y$ = Y$ + 1ll;
     C$ = C$ + 1ll;
    }
    label$6915:;
    label$6914:;
   }
   goto label$6912;
   label$6913:;
   _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), 0x1.8208p+15, 0x0p+0 );
   ADR$1 = ADR$1 + 0x1.p+14;
   V$1 = *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( ADR$1 )) << (3ll & 63ll)));
  }
  goto label$6641;
  label$6906:;
  if( ADR$1 != 0x1.4p+19 ) goto label$6916;
  label$6917:;
  {
   fb_GfxLine( FGIMAGE$, (float)X_AXIS0$, (float)Y_AXIS0$, (float)(X_AXIS0$ + PIXEL_SIZE$), (float)(Y_AXIS0$ + PIXEL_SIZE$), (uint32)(((((int64)(uint32)(uint8)((int32)__builtin_nearbyint( RED2$ )) << (16ll & 63ll)) | ((int64)(uint32)(uint8)((int32)__builtin_nearbyint( GREEN2$ )) << (8ll & 63ll))) | (int64)(uint32)(uint8)((int32)__builtin_nearbyint( BLUE2$ ))) | ((int64)(uint32)(uint8)((int32)__builtin_nearbyint( XALPHA2$ )) << (24ll & 63ll))), 2, 65535u, 0 );
  }
  goto label$6641;
  label$6916:;
  if( ADR$1 != 0x1.40002p+19 ) goto label$6918;
  label$6919:;
  {
   fb_GfxLine( FGIMAGE$, (float)X_AXIS0$, (float)Y_AXIS0$, (float)X_AXIS1$, (float)Y_AXIS1$, (uint32)(((((int64)(uint32)(uint8)((int32)__builtin_nearbyint( RED2$ )) << (16ll & 63ll)) | ((int64)(uint32)(uint8)((int32)__builtin_nearbyint( GREEN2$ )) << (8ll & 63ll))) | (int64)(uint32)(uint8)((int32)__builtin_nearbyint( BLUE2$ ))) | ((int64)(uint32)(uint8)((int32)__builtin_nearbyint( XALPHA2$ )) << (24ll & 63ll))), 0, (uint32)((int64)__builtin_nearbyint( BITMASK$ )), 0 );
  }
  goto label$6641;
  label$6918:;
  if( ADR$1 != 0x1.40004p+19 ) goto label$6920;
  label$6921:;
  {
   fb_GfxEllipse( FGIMAGE$, (float)X_AXIS0$, (float)Y_AXIS1$, (float)RADIUS$, (uint32)(((((int64)(uint32)(uint8)((int32)__builtin_nearbyint( RED2$ )) << (16ll & 63ll)) | ((int64)(uint32)(uint8)((int32)__builtin_nearbyint( GREEN2$ )) << (8ll & 63ll))) | (int64)(uint32)(uint8)((int32)__builtin_nearbyint( BLUE2$ ))) | ((int64)(uint32)(uint8)((int32)__builtin_nearbyint( XALPHA2$ )) << (24ll & 63ll))), 0x0p+0f, 0x0p+0f, 0x1.921FB8p+2f, 0, 4 );
  }
  goto label$6641;
  label$6920:;
  if( ADR$1 < 0x1.8p+19 ) goto label$6922;
  if( ADR$1 > 0x1.8FFEp+19 ) goto label$6922;
  label$6923:;
  {
   ADR$1 = ADR$1 + -0x1.8p+19;
   *(double*)((uint8*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( ADR$1 )) << (3ll & 63ll))) + 262144ll) = V$1;
   ADR$1 = ADR$1 + 0x1.8p+19;
  }
  goto label$6641;
  label$6922:;
  if( ADR$1 < 0x1.Ap+19 ) goto label$6924;
  if( ADR$1 > 0x1.A7CEp+19 ) goto label$6924;
  label$6925:;
  {
   ADR$1 = ADR$1 + -0x1.Ap+19;
   C$ = ((int64)__builtin_nearbyint( V$1 ));
   C$ = C$ << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) & 63ll);
   C$ = ((int64)__builtin_nearbyint( (double)C$ + *(double*)((int64)(double*)MEM64$ + 395072ll) ));
   double vr$792 = _ZN12SYSTEM_BUS_T8K_MODULOEdd( THIS$1, ADR$1, 0x1.4p+7 );
   XS$ = ((int64)__builtin_nearbyint( vr$792 ));
   XS$ = XS$ << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) & 63ll);
   XS$ = XS$ + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) * (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll));
   YS$ = ((int64)__builtin_nearbyint( ADR$1 )) / 160ll;
   YS$ = YS$ << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) & 63ll);
   YS$ = YS$ + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) * (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll));
   if( *(double*)((int64)(double*)MEM64$ + ((int64)RVS$ << (3ll & 63ll))) == (double)(int64)*(uint8*)NIBBLES$ ) goto label$6927;
   {
    C$ = C$ & (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll));
   }
   label$6927:;
   label$6926:;
   if( *(double*)((int64)(double*)MEM64$ + 394856ll) > (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$6929;
   {
    *(double*)((int64)(double*)MEM64$ + 394856ll) = (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
   }
   label$6929:;
   label$6928:;
   _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), 0x1.8204p+15, (double)*(uint8*)NIBBLES$ );
   *(double*)&Y$ = (double)*(uint8*)NIBBLES$;
   *(double*)&X$ = (double)*(uint8*)NIBBLES$;
   label$6930:;
   if( ((int64)-((double)Y$ == *(double*)((int64)(double*)MEM64$ + 395088ll)) & (int64)-((double)X$ == *(double*)((int64)(double*)MEM64$ + 395080ll))) != 0ll ) goto label$6931;
   {
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.p+1, (double)XS$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+1, (double)X$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.1Cp+6, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+2, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+1, 0x1.Ep+1 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.24p+6, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+2, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+1, 0x1.p+1 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.2Cp+6, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+2, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+1, *(double*)((int64)(double*)MEM64$ + 395032ll) );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.1Cp+6, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.1p+5, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.p+1, (double)YS$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+1, (double)Y$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.1Cp+6, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+2, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+1, 0x1.Ep+1 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.24p+6, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+2, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+1, 0x1.p+1 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.2Cp+6, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+2, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+1, *(double*)((int64)(double*)MEM64$ + 395040ll) );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.1Cp+6, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.2p+5, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.p+1, (double)XS$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+1, (double)X$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.1Cp+6, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+2, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+1, 0x1.Ep+1 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.24p+6, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+2, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+1, 0x1.Cp+2 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.1Cp+6, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+2, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+1, 0x1.p+1 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.2Cp+6, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+2, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+1, *(double*)((int64)(double*)MEM64$ + 395032ll) );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.1Cp+6, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.18p+5, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.p+1, (double)YS$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+1, (double)Y$ );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.1Cp+6, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+2, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+1, 0x1.Ep+1 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.24p+6, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+2, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+1, 0x1.p+2 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.1Cp+6, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+2, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+1, 0x1.p+1 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.2Cp+6, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+2, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.8p+1, *(double*)((int64)(double*)MEM64$ + 395040ll) );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.1Cp+6, 0x0p+0 );
    _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.28p+5, 0x0p+0 );
    double vr$838 = _ZN12SYSTEM_BUS_T6PEEK64Ed( THIS$1, 0x1.81F8p+15 );
    _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), 0x1.81F8p+15, vr$838 );
    X$ = X$ + 1ll;
    if( (double)X$ <= *(double*)((int64)(double*)MEM64$ + 395080ll) ) goto label$6933;
    {
     X$ = 0ll;
     Y$ = Y$ + 1ll;
     C$ = C$ + 1ll;
    }
    label$6933:;
    label$6932:;
   }
   goto label$6930;
   label$6931:;
   _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), 0x1.8208p+15, 0x0p+0 );
   ADR$1 = ADR$1 + 0x1.Ap+19;
   V$1 = *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( ADR$1 )) << (3ll & 63ll)));
  }
  goto label$6641;
  label$6924:;
  if( ADR$1 < 0x1.BFEp+23 ) goto label$6934;
  if( ADR$1 > 0x1.BFFFFEp+23 ) goto label$6934;
  label$6935:;
  {
   {
    if( ADR$1 != 0x1.BFE004p+23 ) goto label$6937;
    label$6938:;
    {
    }
    goto label$6936;
    label$6937:;
    if( ADR$1 != 0x1.BFE008p+23 ) goto label$6939;
    label$6940:;
    {
    }
    goto label$6936;
    label$6939:;
    if( ADR$1 != 0x1.BFE01Cp+23 ) goto label$6941;
    label$6942:;
    {
    }
    goto label$6936;
    label$6941:;
    if( ADR$1 != 0x1.BFE02p+23 ) goto label$6943;
    label$6944:;
    {
    }
    goto label$6936;
    label$6943:;
    if( ADR$1 != 0x1.BFE024p+23 ) goto label$6945;
    label$6946:;
    {
    }
    goto label$6936;
    label$6945:;
    if( ADR$1 != 0x1.BFE028p+23 ) goto label$6947;
    label$6948:;
    {
    }
    goto label$6936;
    label$6947:;
    if( ADR$1 != 0x1.BFE034p+23 ) goto label$6949;
    label$6950:;
    {
    }
    goto label$6936;
    label$6949:;
    if( ADR$1 != 0x1.BFE04p+23 ) goto label$6951;
    label$6952:;
    {
    }
    goto label$6936;
    label$6951:;
    if( ADR$1 != 0x1.BFE05Cp+23 ) goto label$6953;
    label$6954:;
    {
    }
    goto label$6936;
    label$6953:;
    if( ADR$1 != 0x1.BFE07Cp+23 ) goto label$6955;
    label$6956:;
    {
    }
    goto label$6936;
    label$6955:;
    if( ADR$1 != 0x1.BFE08p+23 ) goto label$6957;
    label$6958:;
    {
    }
    goto label$6936;
    label$6957:;
    if( ADR$1 != 0x1.BFE084p+23 ) goto label$6959;
    label$6960:;
    {
    }
    goto label$6936;
    label$6959:;
    if( ADR$1 != 0x1.BFE088p+23 ) goto label$6961;
    label$6962:;
    {
    }
    goto label$6936;
    label$6961:;
    if( ADR$1 != 0x1.BFE08Cp+23 ) goto label$6963;
    label$6964:;
    {
    }
    goto label$6936;
    label$6963:;
    if( ADR$1 != 0x1.BFE0Ap+23 ) goto label$6965;
    label$6966:;
    {
    }
    goto label$6936;
    label$6965:;
    if( ADR$1 != 0x1.BFE0A4p+23 ) goto label$6967;
    label$6968:;
    {
    }
    goto label$6936;
    label$6967:;
    if( ADR$1 != 0x1.BFE0Bp+23 ) goto label$6969;
    label$6970:;
    {
    }
    goto label$6936;
    label$6969:;
    if( ADR$1 != 0x1.BFE0B4p+23 ) goto label$6971;
    label$6972:;
    {
    }
    goto label$6936;
    label$6971:;
    if( ADR$1 != 0x1.BFE0B8p+23 ) goto label$6973;
    label$6974:;
    {
    }
    goto label$6936;
    label$6973:;
    if( ADR$1 != 0x1.BFE0BCp+23 ) goto label$6975;
    label$6976:;
    {
    }
    goto label$6936;
    label$6975:;
    if( ADR$1 != 0x1.BFE0C8p+23 ) goto label$6977;
    label$6978:;
    {
    }
    goto label$6936;
    label$6977:;
    if( ADR$1 != 0x1.BFE0E8p+23 ) goto label$6979;
    label$6980:;
    {
    }
    goto label$6936;
    label$6979:;
    if( ADR$1 != 0x1.BFE0F8p+23 ) goto label$6981;
    label$6982:;
    {
    }
    goto label$6936;
    label$6981:;
    if( ADR$1 != 0x1.BFE1p+23 ) goto label$6983;
    label$6984:;
    {
    }
    goto label$6936;
    label$6983:;
    if( ADR$1 != 0x1.BFE104p+23 ) goto label$6985;
    label$6986:;
    {
    }
    goto label$6936;
    label$6985:;
    if( ADR$1 != 0x1.BFE108p+23 ) goto label$6987;
    label$6988:;
    {
    }
    goto label$6936;
    label$6987:;
    if( ADR$1 != 0x1.BFE10Cp+23 ) goto label$6989;
    label$6990:;
    {
    }
    goto label$6936;
    label$6989:;
    if( ADR$1 != 0x1.BFE11p+23 ) goto label$6991;
    label$6992:;
    {
    }
    goto label$6936;
    label$6991:;
    if( ADR$1 != 0x1.BFE114p+23 ) goto label$6993;
    label$6994:;
    {
    }
    goto label$6936;
    label$6993:;
    if( ADR$1 != 0x1.BFE118p+23 ) goto label$6995;
    label$6996:;
    {
    }
    goto label$6936;
    label$6995:;
    if( ADR$1 != 0x1.BFE11Cp+23 ) goto label$6997;
    label$6998:;
    {
    }
    goto label$6936;
    label$6997:;
    if( ADR$1 != 0x1.BFE12p+23 ) goto label$6999;
    label$7000:;
    {
    }
    goto label$6936;
    label$6999:;
    if( ADR$1 != 0x1.BFE124p+23 ) goto label$7001;
    label$7002:;
    {
    }
    goto label$6936;
    label$7001:;
    if( ADR$1 != 0x1.BFE128p+23 ) goto label$7003;
    label$7004:;
    {
    }
    goto label$6936;
    label$7003:;
    if( ADR$1 != 0x1.BFE12Cp+23 ) goto label$7005;
    label$7006:;
    {
    }
    goto label$6936;
    label$7005:;
    if( ADR$1 != 0x1.BFE13p+23 ) goto label$7007;
    label$7008:;
    {
    }
    goto label$6936;
    label$7007:;
    if( ADR$1 != 0x1.BFE13Cp+23 ) goto label$7009;
    label$7010:;
    {
    }
    goto label$6936;
    label$7009:;
    if( ADR$1 != 0x1.BFE14p+23 ) goto label$7011;
    label$7012:;
    {
    }
    goto label$6936;
    label$7011:;
    if( ADR$1 != 0x1.BFE144p+23 ) goto label$7013;
    label$7014:;
    {
    }
    goto label$6936;
    label$7013:;
    if( ADR$1 != 0x1.BFE148p+23 ) goto label$7015;
    label$7016:;
    {
    }
    goto label$6936;
    label$7015:;
    if( ADR$1 != 0x1.BFE14Cp+23 ) goto label$7017;
    label$7018:;
    {
    }
    goto label$6936;
    label$7017:;
    if( ADR$1 != 0x1.BFE15p+23 ) goto label$7019;
    label$7020:;
    {
    }
    goto label$6936;
    label$7019:;
    if( ADR$1 != 0x1.BFE154p+23 ) goto label$7021;
    label$7022:;
    {
    }
    goto label$6936;
    label$7021:;
    if( ADR$1 != 0x1.BFE1Cp+23 ) goto label$7023;
    label$7024:;
    {
    }
    goto label$6936;
    label$7023:;
    if( ADR$1 != 0x1.BFE1C4p+23 ) goto label$7025;
    label$7026:;
    {
    }
    goto label$6936;
    label$7025:;
    if( ADR$1 != 0x1.BFE2p+23 ) goto label$7027;
    label$7028:;
    {
    }
    goto label$6936;
    label$7027:;
    if( ADR$1 != 0x1.BFE204p+23 ) goto label$7029;
    label$7030:;
    {
    }
    goto label$6936;
    label$7029:;
    if( ADR$1 != 0x1.BFE208p+23 ) goto label$7031;
    label$7032:;
    {
    }
    goto label$6936;
    label$7031:;
    if( ADR$1 != 0x1.BFE20Cp+23 ) goto label$7033;
    label$7034:;
    {
    }
    goto label$6936;
    label$7033:;
    if( ADR$1 != 0x1.BFE21p+23 ) goto label$7035;
    label$7036:;
    {
    }
    goto label$6936;
    label$7035:;
    if( ADR$1 != 0x1.BFE22p+23 ) goto label$7037;
    label$7038:;
    {
    }
    goto label$6936;
    label$7037:;
    if( ADR$1 != 0x1.BFE214p+23 ) goto label$7039;
    label$7040:;
    {
    }
    goto label$6936;
    label$7039:;
    if( ADR$1 != 0x1.BFE284p+23 ) goto label$7041;
    label$7042:;
    {
    }
    goto label$6936;
    label$7041:;
    if( ADR$1 != 0x1.BFE3p+23 ) goto label$7043;
    label$7044:;
    {
    }
    goto label$6936;
    label$7043:;
    if( ADR$1 != 0x1.BFE38p+23 ) goto label$7045;
    label$7046:;
    {
    }
    goto label$6936;
    label$7045:;
    if( ADR$1 != 0x1.BFE384p+23 ) goto label$7047;
    label$7048:;
    {
    }
    goto label$6936;
    label$7047:;
    if( ADR$1 != 0x1.BFE388p+23 ) goto label$7049;
    label$7050:;
    {
    }
    goto label$6936;
    label$7049:;
    if( ADR$1 != 0x1.BFE38Cp+23 ) goto label$7051;
    label$7052:;
    {
    }
    goto label$6936;
    label$7051:;
    if( ADR$1 != 0x1.BFE39p+23 ) goto label$7053;
    label$7054:;
    {
    }
    goto label$6936;
    label$7053:;
    if( ADR$1 != 0x1.BFE394p+23 ) goto label$7055;
    label$7056:;
    {
    }
    goto label$6936;
    label$7055:;
    if( ADR$1 != 0x1.BFE398p+23 ) goto label$7057;
    label$7058:;
    {
    }
    goto label$6936;
    label$7057:;
    if( ADR$1 != 0x1.BFE39Cp+23 ) goto label$7059;
    label$7060:;
    {
    }
    goto label$6936;
    label$7059:;
    if( ADR$1 != 0x1.BFE3B8p+23 ) goto label$7061;
    label$7062:;
    {
    }
    goto label$6936;
    label$7061:;
    if( ADR$1 != 0x1.BFE3BCp+23 ) goto label$7063;
    label$7064:;
    {
    }
    goto label$6936;
    label$7063:;
    if( ADR$1 != 0x1.BFE3Cp+23 ) goto label$7065;
    label$7066:;
    {
    }
    goto label$6936;
    label$7065:;
    if( ADR$1 != 0x1.BFE3C4p+23 ) goto label$7067;
    label$7068:;
    {
    }
    goto label$6936;
    label$7067:;
    if( ADR$1 != 0x1.BFE3C8p+23 ) goto label$7069;
    label$7070:;
    {
    }
    label$7069:;
    label$6936:;
   }
  }
  goto label$6641;
  label$6934:;
  if( ADR$1 != 0x1.Cp+23 ) goto label$7071;
  label$7072:;
  {
   *(double*)((int64)(double*)MEM64$ + 394824ll) = (double)(((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393256ll) )) << (24ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393232ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393240ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 393248ll);
  }
  goto label$6641;
  label$7071:;
  if( ADR$1 != 0x1.C00002p+23 ) goto label$7073;
  label$7074:;
  {
   *(double*)((int64)(double*)MEM64$ + 394832ll) = (double)(((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393288ll) )) << (24ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393264ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393272ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 393280ll);
  }
  label$7073:;
  label$6641:;
 }
 label$6640:;
}

void _ZN12SYSTEM_BUS_T5POKEWEdd( struct $12SYSTEM_BUS_T* THIS$1, double ADR$1, double V$1 )
{
 label$7075:;
 _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, ADR$1, (double)(((uint64)__builtin_nearbyint( V$1 )) & 255ull) );
 _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, ADR$1 + 0x1.p+0, (double)((((uint64)__builtin_nearbyint( V$1 )) & 65280ull) >> (8ll & 63ll)) );
 label$7076:;
}

double _ZN12SYSTEM_BUS_T8ISSYMBOLE8FBSTRINGd( struct $12SYSTEM_BUS_T* THIS$1, FBSTRING* S$1, double START$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$7077:;
 label$7079:;
 {
  {
   uint64 TMP$3193$3;
   FBSTRING* vr$2 = fb_StrMid( (FBSTRING*)S$1, ((int64)__builtin_nearbyint( START$1 )), 1ll );
   uint32 vr$3 = fb_ASC( (FBSTRING*)vr$2, 1ll );
   TMP$3193$3 = (uint64)vr$3;
   goto label$7083;
   label$7084:;
   {
    goto label$7080;
   }
   goto label$7082;
   label$7085:;
   {
    START$1 = START$1 + 0x1.p+0;
   }
   goto label$7082;
   label$7083:;
   static const void* tmp$3194[10ll] = {
    &&label$7084,
    &&label$7084,
    &&label$7084,
    &&label$7084,
    &&label$7084,
    &&label$7084,
    &&label$7084,
    &&label$7084,
    &&label$7084,
    &&label$7084,
   };
   if( (TMP$3193$3 - 48ull) > 9ull ) goto label$7085;
   goto *tmp$3194[TMP$3193$3 - 48ull];
   label$7082:;
  }
 }
 label$7081:;
 goto label$7079;
 label$7080:;
 fb$result$1 = START$1;
 label$7078:;
 return fb$result$1;
}

double _ZN12SYSTEM_BUS_T8ISNUMBERE8FBSTRINGd( struct $12SYSTEM_BUS_T* THIS$1, FBSTRING* S$1, double START$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$7086:;
 int64 TMP$1;
 __builtin_memset( &TMP$1, 0, 8ll );
 TMP$1 = ((int64)__builtin_nearbyint( START$1 ));
 label$7088:;
 {
  {
   uint64 TMP$3195$3;
   FBSTRING* vr$3 = fb_StrMid( (FBSTRING*)&GET_DATA$, TMP$1, 1ll );
   uint32 vr$4 = fb_ASC( (FBSTRING*)vr$3, 1ll );
   TMP$3195$3 = (uint64)vr$4;
   goto label$7092;
   label$7093:;
   {
    TMP$1 = TMP$1 + 1ll;
   }
   goto label$7091;
   label$7094:;
   {
    TMP$1 = TMP$1 + 1ll;
   }
   goto label$7091;
   label$7095:;
   {
    TMP$1 = TMP$1 + 1ll;
   }
   goto label$7091;
   label$7096:;
   {
    goto label$7089;
   }
   goto label$7091;
   label$7092:;
   static const void* tmp$3196[67ll] = {
    &&label$7094,
    &&label$7096,
    &&label$7096,
    &&label$7096,
    &&label$7096,
    &&label$7094,
    &&label$7096,
    &&label$7094,
    &&label$7094,
    &&label$7096,
    &&label$7093,
    &&label$7093,
    &&label$7093,
    &&label$7093,
    &&label$7093,
    &&label$7093,
    &&label$7093,
    &&label$7093,
    &&label$7093,
    &&label$7093,
    &&label$7096,
    &&label$7096,
    &&label$7096,
    &&label$7096,
    &&label$7096,
    &&label$7096,
    &&label$7096,
    &&label$7096,
    &&label$7094,
    &&label$7096,
    &&label$7096,
    &&label$7096,
    &&label$7096,
    &&label$7096,
    &&label$7095,
    &&label$7096,
    &&label$7096,
    &&label$7096,
    &&label$7096,
    &&label$7096,
    &&label$7096,
    &&label$7096,
    &&label$7096,
    &&label$7096,
    &&label$7096,
    &&label$7096,
    &&label$7096,
    &&label$7096,
    &&label$7096,
    &&label$7096,
    &&label$7096,
    &&label$7096,
    &&label$7096,
    &&label$7096,
    &&label$7096,
    &&label$7096,
    &&label$7096,
    &&label$7096,
    &&label$7096,
    &&label$7096,
    &&label$7095,
    &&label$7096,
    &&label$7096,
    &&label$7096,
    &&label$7096,
    &&label$7096,
    &&label$7095,
   };
   if( (TMP$3195$3 - 38ull) > 66ull ) goto label$7096;
   goto *tmp$3196[TMP$3195$3 - 38ull];
   label$7091:;
  }
 }
 label$7090:;
 goto label$7088;
 label$7089:;
 FBSTRING* vr$10 = fb_StrMid( (FBSTRING*)&GET_DATA$, ((int64)__builtin_nearbyint( START$1 )), TMP$1 );
 double vr$11 = fb_VAL( (FBSTRING*)vr$10 );
 if( vr$11 <= 0x0p+0 ) goto label$7098;
 {
  FBSTRING* vr$13 = fb_StrMid( (FBSTRING*)&GET_DATA$, ((int64)__builtin_nearbyint( START$1 )), TMP$1 );
  double vr$14 = fb_VAL( (FBSTRING*)vr$13 );
  fb$result$1 = vr$14;
 }
 goto label$7097;
 label$7098:;
 {
  fb$result$1 = 0x0p+0;
 }
 label$7097:;
 label$7087:;
 return fb$result$1;
}

void _ZN12SYSTEM_BUS_T6GETXYZEv( struct $12SYSTEM_BUS_T* THIS$1 )
{
 FBSTRING TMP$3197$1;
 FBSTRING TMP$3200$1;
 FBSTRING TMP$3202$1;
 label$7099:;
 __builtin_memset( &TMP$3197$1, 0, 24ll );
 fb_StrAssign( (void*)&TMP$3197$1, -1ll, (void*)&GET_DATA$, -1ll, 0 );
 double vr$3 = _ZN12SYSTEM_BUS_T8ISNUMBERE8FBSTRINGd( THIS$1, &TMP$3197$1, 0x1.Cp+2 );
 *(double*)((int64)(double*)MEM64$ + 394840ll) = vr$3;
 fb_StrDelete( (FBSTRING*)&TMP$3197$1 );
 if( *(double*)((int64)(double*)MEM64$ + 394840ll) != 0x0p+0 ) goto label$7102;
 {
  FBSTRING TMP$3198$2;
  FBSTRING* vr$5 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394840ll) );
  int64 vr$6 = fb_StrLen( (void*)vr$5, -1ll );
  __builtin_memset( &TMP$3198$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$3198$2, -1ll, (void*)&GET_DATA$, -1ll, 0 );
  double vr$12 = _ZN12SYSTEM_BUS_T8ISNUMBERE8FBSTRINGd( THIS$1, &TMP$3198$2, (double)(vr$6 + 7ll) );
  *(double*)((int64)(double*)MEM64$ + 394840ll) = -vr$12 + 0x0p+0;
  fb_StrDelete( (FBSTRING*)&TMP$3198$2 );
 }
 goto label$7101;
 label$7102:;
 FBSTRING* vr$16 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394840ll) );
 int64 vr$17 = fb_StrLen( (void*)vr$16, -1ll );
 FBSTRING* vr$19 = fb_StrMid( (FBSTRING*)&GET_DATA$, vr$17 + 7ll, 1ll );
 int32 vr$20 = fb_StrCompare( (void*)vr$19, -1ll, (void*)"-", 2ll );
 if( (int64)vr$20 != 0ll ) goto label$7103;
 {
  FBSTRING TMP$3199$2;
  FBSTRING* vr$22 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394840ll) );
  int64 vr$23 = fb_StrLen( (void*)vr$22, -1ll );
  __builtin_memset( &TMP$3199$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$3199$2, -1ll, (void*)&GET_DATA$, -1ll, 0 );
  double vr$29 = _ZN12SYSTEM_BUS_T8ISNUMBERE8FBSTRINGd( THIS$1, &TMP$3199$2, (double)(vr$23 + 8ll) );
  *(double*)((int64)(double*)MEM64$ + 394840ll) = -vr$29 + 0x0p+0;
  fb_StrDelete( (FBSTRING*)&TMP$3199$2 );
 }
 label$7103:;
 label$7101:;
 FBSTRING* vr$33 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394840ll) );
 int64 vr$34 = fb_StrLen( (void*)vr$33, -1ll );
 __builtin_memset( &TMP$3200$1, 0, 24ll );
 fb_StrAssign( (void*)&TMP$3200$1, -1ll, (void*)&GET_DATA$, -1ll, 0 );
 double vr$40 = _ZN12SYSTEM_BUS_T8ISNUMBERE8FBSTRINGd( THIS$1, &TMP$3200$1, (double)(vr$34 + 9ll) );
 *(double*)((int64)(double*)MEM64$ + 394848ll) = vr$40;
 fb_StrDelete( (FBSTRING*)&TMP$3200$1 );
 FBSTRING* vr$42 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394840ll) );
 int64 vr$43 = fb_StrLen( (void*)vr$42, -1ll );
 FBSTRING* vr$45 = fb_StrMid( (FBSTRING*)&GET_DATA$, vr$43 + 9ll, 1ll );
 int32 vr$46 = fb_StrCompare( (void*)vr$45, -1ll, (void*)"-", 2ll );
 if( (int64)vr$46 != 0ll ) goto label$7105;
 {
  FBSTRING TMP$3201$2;
  FBSTRING* vr$48 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394840ll) );
  int64 vr$49 = fb_StrLen( (void*)vr$48, -1ll );
  __builtin_memset( &TMP$3201$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$3201$2, -1ll, (void*)&GET_DATA$, -1ll, 0 );
  double vr$55 = _ZN12SYSTEM_BUS_T8ISNUMBERE8FBSTRINGd( THIS$1, &TMP$3201$2, (double)(vr$49 + 10ll) );
  *(double*)((int64)(double*)MEM64$ + 394848ll) = -vr$55 + 0x0p+0;
  fb_StrDelete( (FBSTRING*)&TMP$3201$2 );
 }
 label$7105:;
 label$7104:;
 FBSTRING* vr$59 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394848ll) );
 int64 vr$60 = fb_StrLen( (void*)vr$59, -1ll );
 __builtin_memset( &TMP$3202$1, 0, 24ll );
 fb_StrAssign( (void*)&TMP$3202$1, -1ll, (void*)&GET_DATA$, -1ll, 0 );
 double vr$66 = _ZN12SYSTEM_BUS_T8ISNUMBERE8FBSTRINGd( THIS$1, &TMP$3202$1, (double)(vr$60 + 13ll) );
 *(double*)((int64)(double*)MEM64$ + 394856ll) = vr$66;
 fb_StrDelete( (FBSTRING*)&TMP$3202$1 );
 FBSTRING* vr$68 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394848ll) );
 int64 vr$69 = fb_StrLen( (void*)vr$68, -1ll );
 FBSTRING* vr$71 = fb_StrMid( (FBSTRING*)&GET_DATA$, vr$69 + 13ll, 1ll );
 int32 vr$72 = fb_StrCompare( (void*)vr$71, -1ll, (void*)"-", 2ll );
 if( (int64)vr$72 != 0ll ) goto label$7107;
 {
  FBSTRING TMP$3203$2;
  FBSTRING* vr$74 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394848ll) );
  int64 vr$75 = fb_StrLen( (void*)vr$74, -1ll );
  __builtin_memset( &TMP$3203$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$3203$2, -1ll, (void*)&GET_DATA$, -1ll, 0 );
  double vr$81 = _ZN12SYSTEM_BUS_T8ISNUMBERE8FBSTRINGd( THIS$1, &TMP$3203$2, (double)(vr$75 + 14ll) );
  *(double*)((int64)(double*)MEM64$ + 394856ll) = vr$81 + 0x0p+0;
  fb_StrDelete( (FBSTRING*)&TMP$3203$2 );
 }
 label$7107:;
 label$7106:;
 label$7100:;
}

double _ZN12SYSTEM_BUS_T6PEEK64Ed( struct $12SYSTEM_BUS_T* THIS$1, double ADR$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$7108:;
 {
  if( ADR$1 < 0x1.Cp+15 ) goto label$7111;
  if( ADR$1 > 0x1.FFFEp+15 ) goto label$7111;
  label$7112:;
  {
   fb$result$1 = *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( ADR$1 + -0x1.Cp+15 )) << (3ll & 63ll)));
  }
  goto label$7110;
  label$7111:;
  if( ADR$1 < 0x1.4p+15 ) goto label$7113;
  if( ADR$1 > 0x1.7FFEp+15 ) goto label$7113;
  label$7114:;
  {
   fb$result$1 = *(double*)((uint8*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( ADR$1 + -0x1.4p+15 )) << (3ll & 63ll))) + 131072ll);
  }
  goto label$7110;
  label$7113:;
  if( ADR$1 < 0x1.Bp+15 ) goto label$7115;
  if( ADR$1 > 0x1.B7FEp+15 ) goto label$7115;
  label$7116:;
  {
   fb$result$1 = *(double*)((uint8*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( ADR$1 + -0x1.Bp+15 )) << (3ll & 63ll))) + 262144ll);
  }
  goto label$7110;
  label$7115:;
  if( ADR$1 < 0x1.Ap+15 ) goto label$7117;
  if( ADR$1 > 0x1.A7FEp+15 ) goto label$7117;
  label$7118:;
  {
   int64 REG$3;
   REG$3 = ((int64)__builtin_nearbyint( ADR$1 )) & 63ll;
   if( REG$3 != 18ll ) goto label$7120;
   {
    fb$result$1 = 0x0p+0;
   }
   goto label$7119;
   label$7120:;
   {
    fb$result$1 = 0x1.FEp+7;
    label$7119:;
   }
  }
  goto label$7110;
  label$7117:;
  {
   fb$result$1 = *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( ADR$1 )) << (3ll & 63ll)));
  }
  label$7121:;
  label$7110:;
 }
 label$7109:;
 return fb$result$1;
}

void _ZN12SYSTEM_BUS_T6POKE64Edd( struct $12SYSTEM_BUS_T* THIS$1, double ADR$1, double V$1 )
{
 label$7122:;
 *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( ADR$1 )) << (3ll & 63ll))) = V$1;
 if( ((int64)-(ADR$1 >= 0x1.Bp+15) & (int64)-(ADR$1 <= 0x1.B7FEp+15)) == 0ll ) goto label$7125;
 goto label$7126;
 label$7125:;
 goto label$7127;
 label$7126:;
 ADR$1 = ADR$1 + -0x1.Bp+15;
 *(double*)((uint8*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( ADR$1 )) << (3ll & 63ll))) + 16850952ll) = V$1;
 ADR$1 = ADR$1 + *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll)));
 V$1 = *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( ADR$1 )) << (3ll & 63ll)));
 label$7127:;
 if( ADR$1 != 0x1.8Ep+7 ) goto label$7129;
 goto label$7130;
 label$7129:;
 goto label$7131;
 label$7130:;
 label$7131:;
 if( ADR$1 != (double)(int64)FCOLOR$ ) goto label$7133;
 goto label$7134;
 label$7133:;
 goto label$7135;
 label$7134:;
 if( V$1 != (double)(int64)*(uint8*)NIBBLES$ ) goto label$7137;
 goto label$7138;
 label$7137:;
 if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$7140;
 goto label$7141;
 label$7140:;
 if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) ) goto label$7143;
 goto label$7144;
 label$7143:;
 if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) ) goto label$7146;
 goto label$7147;
 label$7146:;
 if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) ) goto label$7149;
 goto label$7150;
 label$7149:;
 if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) ) goto label$7152;
 goto label$7153;
 label$7152:;
 if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) ) goto label$7155;
 goto label$7156;
 label$7155:;
 if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) ) goto label$7158;
 goto label$7159;
 label$7158:;
 if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) ) goto label$7161;
 goto label$7162;
 label$7161:;
 if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) ) goto label$7164;
 goto label$7165;
 label$7164:;
 if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) ) goto label$7167;
 goto label$7168;
 label$7167:;
 if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) ) goto label$7170;
 goto label$7171;
 label$7170:;
 if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) ) goto label$7173;
 goto label$7174;
 label$7173:;
 if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) ) goto label$7176;
 goto label$7177;
 label$7176:;
 if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) ) goto label$7179;
 goto label$7180;
 label$7179:;
 if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) ) goto label$7182;
 goto label$7183;
 label$7182:;
 if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$7185;
 goto label$7186;
 label$7185:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$7188;
 goto label$7189;
 label$7188:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$7191;
 goto label$7192;
 label$7191:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$7194;
 goto label$7195;
 label$7194:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$7197;
 goto label$7198;
 label$7197:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$7200;
 goto label$7201;
 label$7200:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$7203;
 goto label$7204;
 label$7203:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$7206;
 goto label$7207;
 label$7206:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$7209;
 goto label$7210;
 label$7209:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$7212;
 goto label$7213;
 label$7212:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$7215;
 goto label$7216;
 label$7215:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$7218;
 goto label$7219;
 label$7218:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$7221;
 goto label$7222;
 label$7221:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$7224;
 goto label$7225;
 label$7224:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$7227;
 goto label$7228;
 label$7227:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$7230;
 goto label$7231;
 label$7230:;
 if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$7233;
 goto label$7234;
 label$7233:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$7236;
 goto label$7237;
 label$7236:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$7239;
 goto label$7240;
 label$7239:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$7242;
 goto label$7243;
 label$7242:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$7245;
 goto label$7246;
 label$7245:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$7248;
 goto label$7249;
 label$7248:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$7251;
 goto label$7252;
 label$7251:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$7254;
 goto label$7255;
 label$7254:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$7257;
 goto label$7258;
 label$7257:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$7260;
 goto label$7261;
 label$7260:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$7263;
 goto label$7264;
 label$7263:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$7266;
 goto label$7267;
 label$7266:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$7269;
 goto label$7270;
 label$7269:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$7272;
 goto label$7273;
 label$7272:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$7275;
 goto label$7276;
 label$7275:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$7278;
 goto label$7279;
 label$7278:;
 if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$7281;
 goto label$7282;
 label$7281:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$7284;
 goto label$7285;
 label$7284:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$7287;
 goto label$7288;
 label$7287:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$7290;
 goto label$7291;
 label$7290:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$7293;
 goto label$7294;
 label$7293:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$7296;
 goto label$7297;
 label$7296:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$7299;
 goto label$7300;
 label$7299:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$7302;
 goto label$7303;
 label$7302:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$7305;
 goto label$7306;
 label$7305:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$7308;
 goto label$7309;
 label$7308:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$7311;
 goto label$7312;
 label$7311:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$7314;
 goto label$7315;
 label$7314:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$7317;
 goto label$7318;
 label$7317:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$7320;
 goto label$7321;
 label$7320:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$7323;
 goto label$7324;
 label$7323:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$7326;
 goto label$7327;
 label$7326:;
 if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$7329;
 goto label$7330;
 label$7329:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$7332;
 goto label$7333;
 label$7332:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$7335;
 goto label$7336;
 label$7335:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$7338;
 goto label$7339;
 label$7338:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$7341;
 goto label$7342;
 label$7341:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$7344;
 goto label$7345;
 label$7344:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$7347;
 goto label$7348;
 label$7347:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$7350;
 goto label$7351;
 label$7350:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$7353;
 goto label$7354;
 label$7353:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$7356;
 goto label$7357;
 label$7356:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$7359;
 goto label$7360;
 label$7359:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$7362;
 goto label$7363;
 label$7362:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$7365;
 goto label$7366;
 label$7365:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$7368;
 goto label$7369;
 label$7368:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$7371;
 goto label$7372;
 label$7371:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$7374;
 goto label$7375;
 label$7374:;
 if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$7377;
 goto label$7378;
 label$7377:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$7380;
 goto label$7381;
 label$7380:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$7383;
 goto label$7384;
 label$7383:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$7386;
 goto label$7387;
 label$7386:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$7389;
 goto label$7390;
 label$7389:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$7392;
 goto label$7393;
 label$7392:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$7395;
 goto label$7396;
 label$7395:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$7398;
 goto label$7399;
 label$7398:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$7401;
 goto label$7402;
 label$7401:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$7404;
 goto label$7405;
 label$7404:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$7407;
 goto label$7408;
 label$7407:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$7410;
 goto label$7411;
 label$7410:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$7413;
 goto label$7414;
 label$7413:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$7416;
 goto label$7417;
 label$7416:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$7419;
 goto label$7420;
 label$7419:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$7422;
 goto label$7423;
 label$7422:;
 label$7424:;
 if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$7426;
 goto label$7427;
 label$7426:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$7429;
 goto label$7430;
 label$7429:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$7432;
 goto label$7433;
 label$7432:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$7435;
 goto label$7436;
 label$7435:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$7438;
 goto label$7439;
 label$7438:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$7441;
 goto label$7442;
 label$7441:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$7444;
 goto label$7445;
 label$7444:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$7447;
 goto label$7448;
 label$7447:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$7450;
 goto label$7451;
 label$7450:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$7453;
 goto label$7454;
 label$7453:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$7456;
 goto label$7457;
 label$7456:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$7459;
 goto label$7460;
 label$7459:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$7462;
 goto label$7463;
 label$7462:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$7465;
 goto label$7466;
 label$7465:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$7468;
 goto label$7469;
 label$7468:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$7471;
 goto label$7472;
 label$7471:;
 if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) ) goto label$7474;
 goto label$7475;
 label$7474:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$7477;
 goto label$7478;
 label$7477:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$7480;
 goto label$7481;
 label$7480:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$7483;
 goto label$7484;
 label$7483:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$7486;
 goto label$7487;
 label$7486:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$7489;
 goto label$7490;
 label$7489:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$7492;
 goto label$7493;
 label$7492:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$7495;
 goto label$7496;
 label$7495:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$7498;
 goto label$7499;
 label$7498:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$7501;
 goto label$7502;
 label$7501:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$7504;
 goto label$7505;
 label$7504:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$7507;
 goto label$7508;
 label$7507:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$7510;
 goto label$7511;
 label$7510:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$7513;
 goto label$7514;
 label$7513:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$7516;
 goto label$7517;
 label$7516:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$7519;
 goto label$7520;
 label$7519:;
 if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$7522;
 goto label$7523;
 label$7522:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$7525;
 goto label$7526;
 label$7525:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$7528;
 goto label$7529;
 label$7528:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$7531;
 goto label$7532;
 label$7531:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$7534;
 goto label$7535;
 label$7534:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$7537;
 goto label$7538;
 label$7537:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$7540;
 goto label$7541;
 label$7540:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$7543;
 goto label$7544;
 label$7543:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$7546;
 goto label$7547;
 label$7546:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$7549;
 goto label$7550;
 label$7549:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$7552;
 goto label$7553;
 label$7552:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$7555;
 goto label$7556;
 label$7555:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$7558;
 goto label$7559;
 label$7558:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$7561;
 goto label$7562;
 label$7561:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$7564;
 goto label$7565;
 label$7564:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$7567;
 goto label$7568;
 label$7567:;
 if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$7570;
 goto label$7571;
 label$7570:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$7573;
 goto label$7574;
 label$7573:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$7576;
 goto label$7577;
 label$7576:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$7579;
 goto label$7580;
 label$7579:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$7582;
 goto label$7583;
 label$7582:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$7585;
 goto label$7586;
 label$7585:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$7588;
 goto label$7589;
 label$7588:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$7591;
 goto label$7592;
 label$7591:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$7594;
 goto label$7595;
 label$7594:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$7597;
 goto label$7598;
 label$7597:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$7600;
 goto label$7601;
 label$7600:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$7603;
 goto label$7604;
 label$7603:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$7606;
 goto label$7607;
 label$7606:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$7609;
 goto label$7610;
 label$7609:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$7612;
 goto label$7613;
 label$7612:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$7615;
 goto label$7616;
 label$7615:;
 if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$7618;
 goto label$7619;
 label$7618:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$7621;
 goto label$7622;
 label$7621:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$7624;
 goto label$7625;
 label$7624:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$7627;
 goto label$7628;
 label$7627:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$7630;
 goto label$7631;
 label$7630:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$7633;
 goto label$7634;
 label$7633:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$7636;
 goto label$7637;
 label$7636:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$7639;
 goto label$7640;
 label$7639:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$7642;
 goto label$7643;
 label$7642:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$7645;
 goto label$7646;
 label$7645:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$7648;
 goto label$7649;
 label$7648:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$7651;
 goto label$7652;
 label$7651:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$7654;
 goto label$7655;
 label$7654:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$7657;
 goto label$7658;
 label$7657:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$7660;
 goto label$7661;
 label$7660:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$7663;
 goto label$7664;
 label$7663:;
 if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) ) goto label$7666;
 goto label$7667;
 label$7666:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$7669;
 goto label$7670;
 label$7669:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$7672;
 goto label$7673;
 label$7672:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$7675;
 goto label$7676;
 label$7675:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$7678;
 goto label$7679;
 label$7678:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$7681;
 goto label$7682;
 label$7681:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$7684;
 goto label$7685;
 label$7684:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$7687;
 goto label$7688;
 label$7687:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$7690;
 goto label$7691;
 label$7690:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$7693;
 goto label$7694;
 label$7693:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$7696;
 goto label$7697;
 label$7696:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$7699;
 goto label$7700;
 label$7699:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$7702;
 goto label$7703;
 label$7702:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$7705;
 goto label$7706;
 label$7705:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$7708;
 goto label$7709;
 label$7708:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$7711;
 goto label$7712;
 label$7711:;
 if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$7714;
 goto label$7715;
 label$7714:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$7717;
 goto label$7718;
 label$7717:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$7720;
 goto label$7721;
 label$7720:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$7723;
 goto label$7724;
 label$7723:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$7726;
 goto label$7727;
 label$7726:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$7729;
 goto label$7730;
 label$7729:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$7732;
 goto label$7733;
 label$7732:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$7735;
 goto label$7736;
 label$7735:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$7738;
 goto label$7739;
 label$7738:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$7741;
 goto label$7742;
 label$7741:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$7744;
 goto label$7745;
 label$7744:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$7747;
 goto label$7748;
 label$7747:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$7750;
 goto label$7751;
 label$7750:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$7753;
 goto label$7754;
 label$7753:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$7756;
 goto label$7757;
 label$7756:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$7759;
 goto label$7760;
 label$7759:;
 if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$7762;
 goto label$7763;
 label$7762:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$7765;
 goto label$7766;
 label$7765:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$7768;
 goto label$7769;
 label$7768:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$7771;
 goto label$7772;
 label$7771:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$7774;
 goto label$7775;
 label$7774:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$7777;
 goto label$7778;
 label$7777:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$7780;
 goto label$7781;
 label$7780:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$7783;
 goto label$7784;
 label$7783:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$7786;
 goto label$7787;
 label$7786:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$7789;
 goto label$7790;
 label$7789:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$7792;
 goto label$7793;
 label$7792:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$7795;
 goto label$7796;
 label$7795:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$7798;
 goto label$7799;
 label$7798:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$7801;
 goto label$7802;
 label$7801:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$7804;
 goto label$7805;
 label$7804:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$7807;
 goto label$7808;
 label$7807:;
 if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$7810;
 goto label$7811;
 label$7810:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$7813;
 goto label$7814;
 label$7813:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$7816;
 goto label$7817;
 label$7816:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$7819;
 goto label$7820;
 label$7819:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$7822;
 goto label$7823;
 label$7822:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$7825;
 goto label$7826;
 label$7825:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$7828;
 goto label$7829;
 label$7828:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$7831;
 goto label$7832;
 label$7831:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$7834;
 goto label$7835;
 label$7834:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$7837;
 goto label$7838;
 label$7837:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$7840;
 goto label$7841;
 label$7840:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$7843;
 goto label$7844;
 label$7843:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$7846;
 goto label$7847;
 label$7846:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$7849;
 goto label$7850;
 label$7849:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$7852;
 goto label$7853;
 label$7852:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$7855;
 goto label$7856;
 label$7855:;
 if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$7858;
 goto label$7859;
 label$7858:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$7861;
 goto label$7862;
 label$7861:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$7864;
 goto label$7865;
 label$7864:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$7867;
 goto label$7868;
 label$7867:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$7870;
 goto label$7871;
 label$7870:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$7873;
 goto label$7874;
 label$7873:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$7876;
 goto label$7877;
 label$7876:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$7879;
 goto label$7880;
 label$7879:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$7882;
 goto label$7883;
 label$7882:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$7885;
 goto label$7886;
 label$7885:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$7888;
 goto label$7889;
 label$7888:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$7891;
 goto label$7892;
 label$7891:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$7894;
 goto label$7895;
 label$7894:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$7897;
 goto label$7898;
 label$7897:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$7900;
 goto label$7901;
 label$7900:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$7903;
 goto label$7904;
 label$7903:;
 goto label$7135;
 label$7138:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$7135;
 label$7141:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$7135;
 label$7144:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$7135;
 label$7147:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$7135;
 label$7150:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$7135;
 label$7153:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$7135;
 label$7156:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$7135;
 label$7159:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$7135;
 label$7162:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$7135;
 label$7165:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$7135;
 label$7168:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$7135;
 label$7171:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$7135;
 label$7174:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$7135;
 label$7177:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$7135;
 label$7180:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$7135;
 label$7183:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$7135;
 label$7186:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$7135;
 label$7189:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$7135;
 label$7192:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$7135;
 label$7195:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$7135;
 label$7198:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$7135;
 label$7201:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$7135;
 label$7204:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$7135;
 label$7207:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$7135;
 label$7210:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$7135;
 label$7213:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$7135;
 label$7216:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$7135;
 label$7219:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$7135;
 label$7222:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$7135;
 label$7225:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$7135;
 label$7228:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$7135;
 label$7231:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$7135;
 label$7234:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$7135;
 label$7237:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$7135;
 label$7240:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$7135;
 label$7243:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$7135;
 label$7246:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$7135;
 label$7249:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$7135;
 label$7252:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$7135;
 label$7255:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$7135;
 label$7258:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$7135;
 label$7261:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$7135;
 label$7264:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$7135;
 label$7267:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$7135;
 label$7270:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$7135;
 label$7273:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$7135;
 label$7276:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$7135;
 label$7279:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$7135;
 label$7282:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$7135;
 label$7285:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$7135;
 label$7288:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$7135;
 label$7291:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$7135;
 label$7294:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$7135;
 label$7297:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$7135;
 label$7300:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$7135;
 label$7303:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$7135;
 label$7306:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$7135;
 label$7309:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$7135;
 label$7312:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$7135;
 label$7315:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$7135;
 label$7318:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$7135;
 label$7321:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$7135;
 label$7324:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$7135;
 label$7327:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$7135;
 label$7330:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$7135;
 label$7333:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$7135;
 label$7336:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$7135;
 label$7339:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$7135;
 label$7342:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$7135;
 label$7345:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$7135;
 label$7348:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$7135;
 label$7351:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$7135;
 label$7354:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$7135;
 label$7357:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$7135;
 label$7360:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$7135;
 label$7363:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$7135;
 label$7366:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$7135;
 label$7369:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$7135;
 label$7372:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$7135;
 label$7375:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$7135;
 label$7378:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$7135;
 label$7381:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$7135;
 label$7384:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$7135;
 label$7387:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$7135;
 label$7390:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$7135;
 label$7393:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$7135;
 label$7396:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$7135;
 label$7399:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$7135;
 label$7402:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$7135;
 label$7405:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$7135;
 label$7408:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$7135;
 label$7411:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$7135;
 label$7414:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$7135;
 label$7417:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$7135;
 label$7420:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$7135;
 label$7423:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$7135;
 label$7427:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$7135;
 label$7430:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$7135;
 label$7433:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$7135;
 label$7436:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$7135;
 label$7439:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$7135;
 label$7442:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$7135;
 label$7445:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$7135;
 label$7448:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$7135;
 label$7451:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$7135;
 label$7454:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$7135;
 label$7457:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$7135;
 label$7460:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$7135;
 label$7463:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$7135;
 label$7466:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$7135;
 label$7469:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$7135;
 label$7472:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$7135;
 label$7475:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$7135;
 label$7478:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$7135;
 label$7481:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$7135;
 label$7484:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$7135;
 label$7487:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$7135;
 label$7490:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$7135;
 label$7493:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$7135;
 label$7496:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$7135;
 label$7499:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$7135;
 label$7502:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$7135;
 label$7505:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$7135;
 label$7508:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$7135;
 label$7511:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$7135;
 label$7514:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$7135;
 label$7517:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$7135;
 label$7520:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$7135;
 label$7523:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$7135;
 label$7526:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$7135;
 label$7529:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$7135;
 label$7532:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$7135;
 label$7535:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$7135;
 label$7538:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$7135;
 label$7541:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$7135;
 label$7544:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$7135;
 label$7547:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$7135;
 label$7550:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$7135;
 label$7553:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$7135;
 label$7556:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$7135;
 label$7559:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$7135;
 label$7562:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$7135;
 label$7565:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$7135;
 label$7568:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$7135;
 label$7571:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$7135;
 label$7574:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$7135;
 label$7577:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$7135;
 label$7580:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$7135;
 label$7583:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$7135;
 label$7586:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$7135;
 label$7589:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$7135;
 label$7592:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$7135;
 label$7595:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$7135;
 label$7598:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$7135;
 label$7601:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$7135;
 label$7604:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$7135;
 label$7607:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$7135;
 label$7610:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$7135;
 label$7613:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$7135;
 label$7616:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$7135;
 label$7619:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$7135;
 label$7622:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$7135;
 label$7625:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$7135;
 label$7628:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$7135;
 label$7631:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$7135;
 label$7634:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$7135;
 label$7637:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$7135;
 label$7640:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$7135;
 label$7643:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$7135;
 label$7646:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$7135;
 label$7649:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$7135;
 label$7652:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$7135;
 label$7655:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$7135;
 label$7658:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$7135;
 label$7661:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$7135;
 label$7664:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$7135;
 label$7667:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$7135;
 label$7670:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$7135;
 label$7673:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$7135;
 label$7676:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$7135;
 label$7679:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$7135;
 label$7682:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$7135;
 label$7685:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$7135;
 label$7688:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$7135;
 label$7691:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$7135;
 label$7694:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$7135;
 label$7697:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$7135;
 label$7700:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$7135;
 label$7703:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$7135;
 label$7706:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$7135;
 label$7709:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$7135;
 label$7712:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$7135;
 label$7715:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$7135;
 label$7718:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$7135;
 label$7721:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$7135;
 label$7724:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$7135;
 label$7727:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$7135;
 label$7730:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$7135;
 label$7733:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$7135;
 label$7736:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$7135;
 label$7739:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$7135;
 label$7742:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$7135;
 label$7745:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$7135;
 label$7748:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$7135;
 label$7751:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$7135;
 label$7754:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$7135;
 label$7757:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$7135;
 label$7760:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$7135;
 label$7763:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$7135;
 label$7766:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$7135;
 label$7769:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$7135;
 label$7772:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$7135;
 label$7775:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$7135;
 label$7778:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$7135;
 label$7781:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$7135;
 label$7784:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.Cp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.Cp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.Cp+7 );
 goto label$7135;
 label$7787:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.82p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.82p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.82p+7 );
 goto label$7135;
 label$7790:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.44p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.44p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.44p+7 );
 goto label$7135;
 label$7793:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.06p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.06p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.06p+7 );
 goto label$7135;
 label$7796:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.9p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.9p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.9p+6 );
 goto label$7135;
 label$7799:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.14p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.14p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.14p+6 );
 goto label$7135;
 label$7802:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.3p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.3p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.3p+5 );
 goto label$7135;
 label$7805:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.Cp+2 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.Cp+2 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.Cp+2 );
 goto label$7135;
 label$7808:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$7135;
 label$7811:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$7135;
 label$7814:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$7135;
 label$7817:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$7135;
 label$7820:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$7135;
 label$7823:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$7135;
 label$7826:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$7135;
 label$7829:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$7135;
 label$7832:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$7135;
 label$7835:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$7135;
 label$7838:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$7135;
 label$7841:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$7135;
 label$7844:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$7135;
 label$7847:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$7135;
 label$7850:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$7135;
 label$7853:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$7135;
 label$7856:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$7135;
 label$7859:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$7135;
 label$7862:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$7135;
 label$7865:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$7135;
 label$7868:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$7135;
 label$7871:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$7135;
 label$7874:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$7135;
 label$7877:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$7135;
 label$7880:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$7135;
 label$7883:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.76p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$7135;
 label$7886:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$7135;
 label$7889:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$7135;
 label$7892:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$7135;
 label$7895:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$7135;
 label$7898:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$7135;
 label$7901:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$7135;
 label$7904:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.4p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.4p+5 );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.4p+5 );
 goto label$7135;
 label$7135:;
 if( ADR$1 != (double)(int64)VMCSB$ ) goto label$7906;
 {
  {
   if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) ) goto label$7908;
   label$7909:;
   {
    *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) = (double)*(uint8*)NIBBLES$;
    *(double*)((int64)(double*)MEM64$ + ((int64)HIBASE$ << (3ll & 63ll))) = (double)((((uint64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) )) & 65280ull) >> (8ll & 63ll));
   }
   goto label$7907;
   label$7908:;
   if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$7910;
   label$7911:;
   {
    *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) = (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll));
    *(double*)((int64)(double*)MEM64$ + ((int64)HIBASE$ << (3ll & 63ll))) = (double)((((uint64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) )) & 65280ull) >> (8ll & 63ll));
   }
   goto label$7907;
   label$7910:;
   if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$7912;
   label$7913:;
   {
    *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) = (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll));
    *(double*)((int64)(double*)MEM64$ + ((int64)HIBASE$ << (3ll & 63ll))) = (double)((((uint64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) )) & 65280ull) >> (8ll & 63ll));
   }
   goto label$7907;
   label$7912:;
   if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$7914;
   label$7915:;
   {
    *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) = (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll));
    *(double*)((int64)(double*)MEM64$ + ((int64)HIBASE$ << (3ll & 63ll))) = (double)((((uint64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) )) & 65280ull) >> (8ll & 63ll));
   }
   goto label$7907;
   label$7914:;
   if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$7916;
   label$7917:;
   {
    *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) = (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll));
    *(double*)((int64)(double*)MEM64$ + ((int64)HIBASE$ << (3ll & 63ll))) = (double)((((uint64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) )) & 65280ull) >> (8ll & 63ll));
   }
   goto label$7907;
   label$7916:;
   if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$7918;
   label$7919:;
   {
    *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) = (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)));
    *(double*)((int64)(double*)MEM64$ + ((int64)HIBASE$ << (3ll & 63ll))) = (double)((((uint64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) )) & 65280ull) >> (8ll & 63ll));
   }
   goto label$7907;
   label$7918:;
   if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$7920;
   label$7921:;
   {
    *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) = (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)));
    *(double*)((int64)(double*)MEM64$ + ((int64)HIBASE$ << (3ll & 63ll))) = (double)((((uint64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) )) & 65280ull) >> (8ll & 63ll));
   }
   goto label$7907;
   label$7920:;
   if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$7922;
   label$7923:;
   {
    *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) = (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)));
    *(double*)((int64)(double*)MEM64$ + ((int64)HIBASE$ << (3ll & 63ll))) = (double)((((uint64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) )) & 65280ull) >> (8ll & 63ll));
   }
   goto label$7907;
   label$7922:;
   if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$7924;
   label$7925:;
   {
    *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) = (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll));
    *(double*)((int64)(double*)MEM64$ + ((int64)HIBASE$ << (3ll & 63ll))) = (double)((((uint64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) )) & 65280ull) >> (8ll & 63ll));
   }
   goto label$7907;
   label$7924:;
   if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$7926;
   label$7927:;
   {
    *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) = (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)));
    *(double*)((int64)(double*)MEM64$ + ((int64)HIBASE$ << (3ll & 63ll))) = (double)((((uint64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) )) & 65280ull) >> (8ll & 63ll));
   }
   goto label$7907;
   label$7926:;
   if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$7928;
   label$7929:;
   {
    *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) = (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)));
    *(double*)((int64)(double*)MEM64$ + ((int64)HIBASE$ << (3ll & 63ll))) = (double)((((uint64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) )) & 65280ull) >> (8ll & 63ll));
   }
   goto label$7907;
   label$7928:;
   if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$7930;
   label$7931:;
   {
    *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) = (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)));
    *(double*)((int64)(double*)MEM64$ + ((int64)HIBASE$ << (3ll & 63ll))) = (double)((((uint64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) )) & 65280ull) >> (8ll & 63ll));
   }
   goto label$7907;
   label$7930:;
   if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$7932;
   label$7933:;
   {
    *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) = (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll));
    *(double*)((int64)(double*)MEM64$ + ((int64)HIBASE$ << (3ll & 63ll))) = (double)((((uint64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) )) & 65280ull) >> (8ll & 63ll));
   }
   goto label$7907;
   label$7932:;
   if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$7934;
   label$7935:;
   {
    *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) = (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)));
    *(double*)((int64)(double*)MEM64$ + ((int64)HIBASE$ << (3ll & 63ll))) = (double)((((uint64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) )) & 65280ull) >> (8ll & 63ll));
   }
   goto label$7907;
   label$7934:;
   if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$7936;
   label$7937:;
   {
    *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) = (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)));
    *(double*)((int64)(double*)MEM64$ + 5184ll) = (double)((((uint64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) )) & 65280ull) >> (8ll & 63ll));
   }
   goto label$7907;
   label$7936:;
   if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$7938;
   label$7939:;
   {
    *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) = (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)));
    *(double*)((int64)(double*)MEM64$ + ((int64)HIBASE$ << (3ll & 63ll))) = (double)((((uint64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) )) & 65280ull) >> (8ll & 63ll));
   }
   label$7938:;
   label$7907:;
  }
 }
 goto label$7905;
 label$7906:;
 if( ((((((((int64)-(ADR$1 == (double)(int64)SP0X$) | (int64)-(ADR$1 == (double)(int64)SP1X$)) | (int64)-(ADR$1 == (double)(int64)SP2X$)) | (int64)-(ADR$1 == (double)(int64)SP3X$)) | (int64)-(ADR$1 == (double)(int64)SP4X$)) | (int64)-(ADR$1 == (double)(int64)SP5X$)) | (int64)-(ADR$1 == (double)(int64)SP6X$)) | (int64)-(ADR$1 == (double)(int64)SP7X$)) == 0ll ) goto label$7940;
 {
  *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( ADR$1 )) << (3ll & 63ll))) = V$1;
 }
 goto label$7905;
 label$7940:;
 if( ((((((((int64)-(ADR$1 == (double)(int64)SP0Y$) | (int64)-(ADR$1 == (double)(int64)SP1Y$)) | (int64)-(ADR$1 == (double)(int64)SP2Y$)) | (int64)-(ADR$1 == (double)(int64)SP3Y$)) | (int64)-(ADR$1 == (double)(int64)SP4Y$)) | (int64)-(ADR$1 == (double)(int64)SP5Y$)) | (int64)-(ADR$1 == (double)(int64)SP6Y$)) | (int64)-(ADR$1 == (double)(int64)SP7Y$)) == 0ll ) goto label$7941;
 {
  *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( ADR$1 )) << (3ll & 63ll))) = V$1;
 }
 goto label$7905;
 label$7941:;
 if( ((((((((int64)-(ADR$1 == (double)(int64)SP0COL$) | (int64)-(ADR$1 == (double)(int64)SP1COL$)) | (int64)-(ADR$1 == (double)(int64)SP2COL$)) | (int64)-(ADR$1 == (double)(int64)SP3COL$)) | (int64)-(ADR$1 == (double)(int64)SP4COL$)) | (int64)-(ADR$1 == (double)(int64)SP5COL$)) | (int64)-(ADR$1 == (double)(int64)SP6COL$)) | (int64)-(ADR$1 == (double)(int64)SP7COL$)) == 0ll ) goto label$7942;
 {
  _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), (double)FCOLOR$, V$1 );
 }
 goto label$7905;
 label$7942:;
 if( ADR$1 != (double)(int64)EXTCOL$ ) goto label$7943;
 {
  if( V$1 != (double)(int64)*(uint8*)NIBBLES$ ) goto label$7945;
  goto label$7946;
  label$7945:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$7948;
  goto label$7949;
  label$7948:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) ) goto label$7951;
  goto label$7952;
  label$7951:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) ) goto label$7954;
  goto label$7955;
  label$7954:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) ) goto label$7957;
  goto label$7958;
  label$7957:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) ) goto label$7960;
  goto label$7961;
  label$7960:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) ) goto label$7963;
  goto label$7964;
  label$7963:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) ) goto label$7966;
  goto label$7967;
  label$7966:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) ) goto label$7969;
  goto label$7970;
  label$7969:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) ) goto label$7972;
  goto label$7973;
  label$7972:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) ) goto label$7975;
  goto label$7976;
  label$7975:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) ) goto label$7978;
  goto label$7979;
  label$7978:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) ) goto label$7981;
  goto label$7982;
  label$7981:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) ) goto label$7984;
  goto label$7985;
  label$7984:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) ) goto label$7987;
  goto label$7988;
  label$7987:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) ) goto label$7990;
  goto label$7991;
  label$7990:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$7993;
  goto label$7994;
  label$7993:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$7996;
  goto label$7997;
  label$7996:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$7999;
  goto label$8000;
  label$7999:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$8002;
  goto label$8003;
  label$8002:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$8005;
  goto label$8006;
  label$8005:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$8008;
  goto label$8009;
  label$8008:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$8011;
  goto label$8012;
  label$8011:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$8014;
  goto label$8015;
  label$8014:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$8017;
  goto label$8018;
  label$8017:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$8020;
  goto label$8021;
  label$8020:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$8023;
  goto label$8024;
  label$8023:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$8026;
  goto label$8027;
  label$8026:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$8029;
  goto label$8030;
  label$8029:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$8032;
  goto label$8033;
  label$8032:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$8035;
  goto label$8036;
  label$8035:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$8038;
  goto label$8039;
  label$8038:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$8041;
  goto label$8042;
  label$8041:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$8044;
  goto label$8045;
  label$8044:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$8047;
  goto label$8048;
  label$8047:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$8050;
  goto label$8051;
  label$8050:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$8053;
  goto label$8054;
  label$8053:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$8056;
  goto label$8057;
  label$8056:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$8059;
  goto label$8060;
  label$8059:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$8062;
  goto label$8063;
  label$8062:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$8065;
  goto label$8066;
  label$8065:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$8068;
  goto label$8069;
  label$8068:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$8071;
  goto label$8072;
  label$8071:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$8074;
  goto label$8075;
  label$8074:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$8077;
  goto label$8078;
  label$8077:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$8080;
  goto label$8081;
  label$8080:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$8083;
  goto label$8084;
  label$8083:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$8086;
  goto label$8087;
  label$8086:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$8089;
  goto label$8090;
  label$8089:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$8092;
  goto label$8093;
  label$8092:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$8095;
  goto label$8096;
  label$8095:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$8098;
  goto label$8099;
  label$8098:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$8101;
  goto label$8102;
  label$8101:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$8104;
  goto label$8105;
  label$8104:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$8107;
  goto label$8108;
  label$8107:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$8110;
  goto label$8111;
  label$8110:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$8113;
  goto label$8114;
  label$8113:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$8116;
  goto label$8117;
  label$8116:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$8119;
  goto label$8120;
  label$8119:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$8122;
  goto label$8123;
  label$8122:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$8125;
  goto label$8126;
  label$8125:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$8128;
  goto label$8129;
  label$8128:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$8131;
  goto label$8132;
  label$8131:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$8134;
  goto label$8135;
  label$8134:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$8137;
  goto label$8138;
  label$8137:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$8140;
  goto label$8141;
  label$8140:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$8143;
  goto label$8144;
  label$8143:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$8146;
  goto label$8147;
  label$8146:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$8149;
  goto label$8150;
  label$8149:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$8152;
  goto label$8153;
  label$8152:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$8155;
  goto label$8156;
  label$8155:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$8158;
  goto label$8159;
  label$8158:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$8161;
  goto label$8162;
  label$8161:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$8164;
  goto label$8165;
  label$8164:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$8167;
  goto label$8168;
  label$8167:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$8170;
  goto label$8171;
  label$8170:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$8173;
  goto label$8174;
  label$8173:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$8176;
  goto label$8177;
  label$8176:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$8179;
  goto label$8180;
  label$8179:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$8182;
  goto label$8183;
  label$8182:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$8185;
  goto label$8186;
  label$8185:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$8188;
  goto label$8189;
  label$8188:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$8191;
  goto label$8192;
  label$8191:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$8194;
  goto label$8195;
  label$8194:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$8197;
  goto label$8198;
  label$8197:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$8200;
  goto label$8201;
  label$8200:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$8203;
  goto label$8204;
  label$8203:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$8206;
  goto label$8207;
  label$8206:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$8209;
  goto label$8210;
  label$8209:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$8212;
  goto label$8213;
  label$8212:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$8215;
  goto label$8216;
  label$8215:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$8218;
  goto label$8219;
  label$8218:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$8221;
  goto label$8222;
  label$8221:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$8224;
  goto label$8225;
  label$8224:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$8227;
  goto label$8228;
  label$8227:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$8230;
  goto label$8231;
  label$8230:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$8233;
  goto label$8234;
  label$8233:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$8236;
  goto label$8237;
  label$8236:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$8239;
  goto label$8240;
  label$8239:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$8242;
  goto label$8243;
  label$8242:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$8245;
  goto label$8246;
  label$8245:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$8248;
  goto label$8249;
  label$8248:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$8251;
  goto label$8252;
  label$8251:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$8254;
  goto label$8255;
  label$8254:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$8257;
  goto label$8258;
  label$8257:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$8260;
  goto label$8261;
  label$8260:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$8263;
  goto label$8264;
  label$8263:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$8266;
  goto label$8267;
  label$8266:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$8269;
  goto label$8270;
  label$8269:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$8272;
  goto label$8273;
  label$8272:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$8275;
  goto label$8276;
  label$8275:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$8278;
  goto label$8279;
  label$8278:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$8281;
  goto label$8282;
  label$8281:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$8284;
  goto label$8285;
  label$8284:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$8287;
  goto label$8288;
  label$8287:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$8290;
  goto label$8291;
  label$8290:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$8293;
  goto label$8294;
  label$8293:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$8296;
  goto label$8297;
  label$8296:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$8299;
  goto label$8300;
  label$8299:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$8302;
  goto label$8303;
  label$8302:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$8305;
  goto label$8306;
  label$8305:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$8308;
  goto label$8309;
  label$8308:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$8311;
  goto label$8312;
  label$8311:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$8314;
  goto label$8315;
  label$8314:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$8317;
  goto label$8318;
  label$8317:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$8320;
  goto label$8321;
  label$8320:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$8323;
  goto label$8324;
  label$8323:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$8326;
  goto label$8327;
  label$8326:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$8329;
  goto label$8330;
  label$8329:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$8332;
  goto label$8333;
  label$8332:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$8335;
  goto label$8336;
  label$8335:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$8338;
  goto label$8339;
  label$8338:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$8341;
  goto label$8342;
  label$8341:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$8344;
  goto label$8345;
  label$8344:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$8347;
  goto label$8348;
  label$8347:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$8350;
  goto label$8351;
  label$8350:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$8353;
  goto label$8354;
  label$8353:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$8356;
  goto label$8357;
  label$8356:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$8359;
  goto label$8360;
  label$8359:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$8362;
  goto label$8363;
  label$8362:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$8365;
  goto label$8366;
  label$8365:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$8368;
  goto label$8369;
  label$8368:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$8371;
  goto label$8372;
  label$8371:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$8374;
  goto label$8375;
  label$8374:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$8377;
  goto label$8378;
  label$8377:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$8380;
  goto label$8381;
  label$8380:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$8383;
  goto label$8384;
  label$8383:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$8386;
  goto label$8387;
  label$8386:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$8389;
  goto label$8390;
  label$8389:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$8392;
  goto label$8393;
  label$8392:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$8395;
  goto label$8396;
  label$8395:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$8398;
  goto label$8399;
  label$8398:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$8401;
  goto label$8402;
  label$8401:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$8404;
  goto label$8405;
  label$8404:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$8407;
  goto label$8408;
  label$8407:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$8410;
  goto label$8411;
  label$8410:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$8413;
  goto label$8414;
  label$8413:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$8416;
  goto label$8417;
  label$8416:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$8419;
  goto label$8420;
  label$8419:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$8422;
  goto label$8423;
  label$8422:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$8425;
  goto label$8426;
  label$8425:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$8428;
  goto label$8429;
  label$8428:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$8431;
  goto label$8432;
  label$8431:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$8434;
  goto label$8435;
  label$8434:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$8437;
  goto label$8438;
  label$8437:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$8440;
  goto label$8441;
  label$8440:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$8443;
  goto label$8444;
  label$8443:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$8446;
  goto label$8447;
  label$8446:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$8449;
  goto label$8450;
  label$8449:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$8452;
  goto label$8453;
  label$8452:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$8455;
  goto label$8456;
  label$8455:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$8458;
  goto label$8459;
  label$8458:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$8461;
  goto label$8462;
  label$8461:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$8464;
  goto label$8465;
  label$8464:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$8467;
  goto label$8468;
  label$8467:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$8470;
  goto label$8471;
  label$8470:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$8473;
  goto label$8474;
  label$8473:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$8476;
  goto label$8477;
  label$8476:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$8479;
  goto label$8480;
  label$8479:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$8482;
  goto label$8483;
  label$8482:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$8485;
  goto label$8486;
  label$8485:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$8488;
  goto label$8489;
  label$8488:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$8491;
  goto label$8492;
  label$8491:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$8494;
  goto label$8495;
  label$8494:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$8497;
  goto label$8498;
  label$8497:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$8500;
  goto label$8501;
  label$8500:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$8503;
  goto label$8504;
  label$8503:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$8506;
  goto label$8507;
  label$8506:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$8509;
  goto label$8510;
  label$8509:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$8512;
  goto label$8513;
  label$8512:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$8515;
  goto label$8516;
  label$8515:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$8518;
  goto label$8519;
  label$8518:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$8521;
  goto label$8522;
  label$8521:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$8524;
  goto label$8525;
  label$8524:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$8527;
  goto label$8528;
  label$8527:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$8530;
  goto label$8531;
  label$8530:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$8533;
  goto label$8534;
  label$8533:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$8536;
  goto label$8537;
  label$8536:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$8539;
  goto label$8540;
  label$8539:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$8542;
  goto label$8543;
  label$8542:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$8545;
  goto label$8546;
  label$8545:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$8548;
  goto label$8549;
  label$8548:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$8551;
  goto label$8552;
  label$8551:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$8554;
  goto label$8555;
  label$8554:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$8557;
  goto label$8558;
  label$8557:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$8560;
  goto label$8561;
  label$8560:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$8563;
  goto label$8564;
  label$8563:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$8566;
  goto label$8567;
  label$8566:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$8569;
  goto label$8570;
  label$8569:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$8572;
  goto label$8573;
  label$8572:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$8575;
  goto label$8576;
  label$8575:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$8578;
  goto label$8579;
  label$8578:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$8581;
  goto label$8582;
  label$8581:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$8584;
  goto label$8585;
  label$8584:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$8587;
  goto label$8588;
  label$8587:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$8590;
  goto label$8591;
  label$8590:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$8593;
  goto label$8594;
  label$8593:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$8596;
  goto label$8597;
  label$8596:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$8599;
  goto label$8600;
  label$8599:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$8602;
  goto label$8603;
  label$8602:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$8605;
  goto label$8606;
  label$8605:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$8608;
  goto label$8609;
  label$8608:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$8611;
  goto label$8612;
  label$8611:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$8614;
  goto label$8615;
  label$8614:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$8617;
  goto label$8618;
  label$8617:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$8620;
  goto label$8621;
  label$8620:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$8623;
  goto label$8624;
  label$8623:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$8626;
  goto label$8627;
  label$8626:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$8629;
  goto label$8630;
  label$8629:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$8632;
  goto label$8633;
  label$8632:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$8635;
  goto label$8636;
  label$8635:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$8638;
  goto label$8639;
  label$8638:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$8641;
  goto label$8642;
  label$8641:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$8644;
  goto label$8645;
  label$8644:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$8647;
  goto label$8648;
  label$8647:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$8650;
  goto label$8651;
  label$8650:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$8653;
  goto label$8654;
  label$8653:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$8656;
  goto label$8657;
  label$8656:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$8659;
  goto label$8660;
  label$8659:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$8662;
  goto label$8663;
  label$8662:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$8665;
  goto label$8666;
  label$8665:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$8668;
  goto label$8669;
  label$8668:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$8671;
  goto label$8672;
  label$8671:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$8674;
  goto label$8675;
  label$8674:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$8677;
  goto label$8678;
  label$8677:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$8680;
  goto label$8681;
  label$8680:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$8683;
  goto label$8684;
  label$8683:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$8686;
  goto label$8687;
  label$8686:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$8689;
  goto label$8690;
  label$8689:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$8692;
  goto label$8693;
  label$8692:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$8695;
  goto label$8696;
  label$8695:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$8698;
  goto label$8699;
  label$8698:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$8701;
  goto label$8702;
  label$8701:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$8704;
  goto label$8705;
  label$8704:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$8707;
  goto label$8708;
  label$8707:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$8710;
  goto label$8711;
  label$8710:;
  goto label$8712;
  label$7946:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)(((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll));
  goto label$8713;
  label$7949:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 51ll);
  goto label$8713;
  label$7952:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 102ll);
  goto label$8713;
  label$7955:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 153ll);
  goto label$8713;
  label$7958:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 204ll);
  goto label$8713;
  label$7961:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 255ll);
  goto label$8713;
  label$7964:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13056ll);
  goto label$8713;
  label$7967:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13107ll);
  goto label$8713;
  label$7970:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13158ll);
  goto label$8713;
  label$7973:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13209ll);
  goto label$8713;
  label$7976:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13260ll);
  goto label$8713;
  label$7979:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13311ll);
  goto label$8713;
  label$7982:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 26112ll);
  goto label$8713;
  label$7985:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 26163ll);
  goto label$8713;
  label$7988:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 26214ll);
  goto label$8713;
  label$7991:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 26265ll);
  goto label$8713;
  label$7994:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 26316ll);
  goto label$8713;
  label$7997:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 26367ll);
  goto label$8713;
  label$8000:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 39168ll);
  goto label$8713;
  label$8003:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 39219ll);
  goto label$8713;
  label$8006:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 39270ll);
  goto label$8713;
  label$8009:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 39321ll);
  goto label$8713;
  label$8012:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 39372ll);
  goto label$8713;
  label$8015:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 39423ll);
  goto label$8713;
  label$8018:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 52224ll);
  goto label$8713;
  label$8021:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 52275ll);
  goto label$8713;
  label$8024:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 52326ll);
  goto label$8713;
  label$8027:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 52377ll);
  goto label$8713;
  label$8030:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 52428ll);
  goto label$8713;
  label$8033:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 52479ll);
  goto label$8713;
  label$8036:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 65280ll);
  goto label$8713;
  label$8039:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 65331ll);
  goto label$8713;
  label$8042:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 65382ll);
  goto label$8713;
  label$8045:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 65433ll);
  goto label$8713;
  label$8048:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 65484ll);
  goto label$8713;
  label$8051:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 65535ll);
  goto label$8713;
  label$8054:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3342336ll);
  goto label$8713;
  label$8057:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3342387ll);
  goto label$8713;
  label$8060:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3342438ll);
  goto label$8713;
  label$8063:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3342489ll);
  goto label$8713;
  label$8066:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3342540ll);
  goto label$8713;
  label$8069:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3342591ll);
  goto label$8713;
  label$8072:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3355392ll);
  goto label$8713;
  label$8075:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3355443ll);
  goto label$8713;
  label$8078:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3355494ll);
  goto label$8713;
  label$8081:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3355545ll);
  goto label$8713;
  label$8084:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3355596ll);
  goto label$8713;
  label$8087:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3355647ll);
  goto label$8713;
  label$8090:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3368448ll);
  goto label$8713;
  label$8093:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3368499ll);
  goto label$8713;
  label$8096:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3368550ll);
  goto label$8713;
  label$8099:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3368601ll);
  goto label$8713;
  label$8102:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3368652ll);
  goto label$8713;
  label$8105:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3368703ll);
  goto label$8713;
  label$8108:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3381504ll);
  goto label$8713;
  label$8111:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3381555ll);
  goto label$8713;
  label$8114:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3381606ll);
  goto label$8713;
  label$8117:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3381657ll);
  goto label$8713;
  label$8120:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3381708ll);
  goto label$8713;
  label$8123:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3381759ll);
  goto label$8713;
  label$8126:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3394560ll);
  goto label$8713;
  label$8129:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3394611ll);
  goto label$8713;
  label$8132:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3394662ll);
  goto label$8713;
  label$8135:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3394713ll);
  goto label$8713;
  label$8138:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3394764ll);
  goto label$8713;
  label$8141:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3394815ll);
  goto label$8713;
  label$8144:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3407616ll);
  goto label$8713;
  label$8147:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3407667ll);
  goto label$8713;
  label$8150:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3407718ll);
  goto label$8713;
  label$8153:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3407769ll);
  goto label$8713;
  label$8156:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3407820ll);
  goto label$8713;
  label$8159:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3407871ll);
  goto label$8713;
  label$8162:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6684672ll);
  goto label$8713;
  label$8165:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6684723ll);
  goto label$8713;
  label$8168:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6684774ll);
  goto label$8713;
  label$8171:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6684825ll);
  goto label$8713;
  label$8174:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6684876ll);
  goto label$8713;
  label$8177:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6684927ll);
  goto label$8713;
  label$8180:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6697728ll);
  goto label$8713;
  label$8183:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6697779ll);
  goto label$8713;
  label$8186:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6697830ll);
  goto label$8713;
  label$8189:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6697881ll);
  goto label$8713;
  label$8192:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6697932ll);
  goto label$8713;
  label$8195:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6697983ll);
  goto label$8713;
  label$8198:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6710784ll);
  goto label$8713;
  label$8201:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6710835ll);
  goto label$8713;
  label$8204:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6710886ll);
  goto label$8713;
  label$8207:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6710937ll);
  goto label$8713;
  label$8210:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6710988ll);
  goto label$8713;
  label$8213:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6711039ll);
  goto label$8713;
  label$8216:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6723840ll);
  goto label$8713;
  label$8219:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6723891ll);
  goto label$8713;
  label$8222:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6723942ll);
  goto label$8713;
  label$8225:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6723993ll);
  goto label$8713;
  label$8228:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6724095ll);
  goto label$8713;
  label$8231:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6736896ll);
  goto label$8713;
  label$8234:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6736947ll);
  goto label$8713;
  label$8237:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6736998ll);
  goto label$8713;
  label$8240:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6737049ll);
  goto label$8713;
  label$8243:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6737100ll);
  goto label$8713;
  label$8246:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6737151ll);
  goto label$8713;
  label$8249:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6749952ll);
  goto label$8713;
  label$8252:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6750003ll);
  goto label$8713;
  label$8255:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6750054ll);
  goto label$8713;
  label$8258:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6750105ll);
  goto label$8713;
  label$8261:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6750156ll);
  goto label$8713;
  label$8264:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6750207ll);
  goto label$8713;
  label$8267:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10027008ll);
  goto label$8713;
  label$8270:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10027059ll);
  goto label$8713;
  label$8273:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10027110ll);
  goto label$8713;
  label$8276:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10027161ll);
  goto label$8713;
  label$8279:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10027212ll);
  goto label$8713;
  label$8282:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10027263ll);
  goto label$8713;
  label$8285:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10040064ll);
  goto label$8713;
  label$8288:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10040115ll);
  goto label$8713;
  label$8291:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10040166ll);
  goto label$8713;
  label$8294:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10040217ll);
  goto label$8713;
  label$8297:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10040268ll);
  goto label$8713;
  label$8300:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10040319ll);
  goto label$8713;
  label$8303:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10053120ll);
  goto label$8713;
  label$8306:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10053171ll);
  goto label$8713;
  label$8309:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10053222ll);
  goto label$8713;
  label$8312:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10053273ll);
  goto label$8713;
  label$8315:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10053324ll);
  goto label$8713;
  label$8318:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10053375ll);
  goto label$8713;
  label$8321:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10066176ll);
  goto label$8713;
  label$8324:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10066227ll);
  goto label$8713;
  label$8327:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10066278ll);
  goto label$8713;
  label$8330:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10066329ll);
  goto label$8713;
  label$8333:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10066380ll);
  goto label$8713;
  label$8336:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10066431ll);
  goto label$8713;
  label$8339:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10079232ll);
  goto label$8713;
  label$8342:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10079283ll);
  goto label$8713;
  label$8345:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10079334ll);
  goto label$8713;
  label$8348:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10079385ll);
  goto label$8713;
  label$8351:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10079436ll);
  goto label$8713;
  label$8354:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10079487ll);
  goto label$8713;
  label$8357:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10092288ll);
  goto label$8713;
  label$8360:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10092339ll);
  goto label$8713;
  label$8363:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10092390ll);
  goto label$8713;
  label$8366:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10092441ll);
  goto label$8713;
  label$8369:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10092492ll);
  goto label$8713;
  label$8372:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10092543ll);
  goto label$8713;
  label$8375:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13369344ll);
  goto label$8713;
  label$8378:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13369395ll);
  goto label$8713;
  label$8381:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13369446ll);
  goto label$8713;
  label$8384:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13369497ll);
  goto label$8713;
  label$8387:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13369548ll);
  goto label$8713;
  label$8390:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13369599ll);
  goto label$8713;
  label$8393:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13382400ll);
  goto label$8713;
  label$8396:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13382451ll);
  goto label$8713;
  label$8399:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13382502ll);
  goto label$8713;
  label$8402:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13382553ll);
  goto label$8713;
  label$8405:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13382604ll);
  goto label$8713;
  label$8408:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13382655ll);
  goto label$8713;
  label$8411:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13395456ll);
  goto label$8713;
  label$8414:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13395507ll);
  goto label$8713;
  label$8417:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13395558ll);
  goto label$8713;
  label$8420:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13395609ll);
  goto label$8713;
  label$8423:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13395660ll);
  goto label$8713;
  label$8426:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13395711ll);
  goto label$8713;
  label$8429:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13408512ll);
  goto label$8713;
  label$8432:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13408563ll);
  goto label$8713;
  label$8435:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13408614ll);
  goto label$8713;
  label$8438:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13408665ll);
  goto label$8713;
  label$8441:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13408716ll);
  goto label$8713;
  label$8444:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13408767ll);
  goto label$8713;
  label$8447:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13421568ll);
  goto label$8713;
  label$8450:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13421619ll);
  goto label$8713;
  label$8453:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13421670ll);
  goto label$8713;
  label$8456:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13421721ll);
  goto label$8713;
  label$8459:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13421772ll);
  goto label$8713;
  label$8462:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13421823ll);
  goto label$8713;
  label$8465:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13434624ll);
  goto label$8713;
  label$8468:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13434675ll);
  goto label$8713;
  label$8471:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13434726ll);
  goto label$8713;
  label$8474:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13434777ll);
  goto label$8713;
  label$8477:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13434828ll);
  goto label$8713;
  label$8480:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13434879ll);
  goto label$8713;
  label$8483:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16711680ll);
  goto label$8713;
  label$8486:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16711731ll);
  goto label$8713;
  label$8489:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16711782ll);
  goto label$8713;
  label$8492:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16711833ll);
  goto label$8713;
  label$8495:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16711884ll);
  goto label$8713;
  label$8498:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16711935ll);
  goto label$8713;
  label$8501:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16724736ll);
  goto label$8713;
  label$8504:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16724787ll);
  goto label$8713;
  label$8507:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16724838ll);
  goto label$8713;
  label$8510:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16724889ll);
  goto label$8713;
  label$8513:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16724940ll);
  goto label$8713;
  label$8516:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16724991ll);
  goto label$8713;
  label$8519:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16737792ll);
  goto label$8713;
  label$8522:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16737843ll);
  goto label$8713;
  label$8525:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16737894ll);
  goto label$8713;
  label$8528:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16737945ll);
  goto label$8713;
  label$8531:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16737996ll);
  goto label$8713;
  label$8534:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16738047ll);
  goto label$8713;
  label$8537:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16750848ll);
  goto label$8713;
  label$8540:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16750899ll);
  goto label$8713;
  label$8543:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16750950ll);
  goto label$8713;
  label$8546:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16751001ll);
  goto label$8713;
  label$8549:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16751052ll);
  goto label$8713;
  label$8552:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16763904ll);
  goto label$8713;
  label$8555:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16763955ll);
  goto label$8713;
  label$8558:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16764006ll);
  goto label$8713;
  label$8561:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16764057ll);
  goto label$8713;
  label$8564:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16764108ll);
  goto label$8713;
  label$8567:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16764159ll);
  goto label$8713;
  label$8570:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16776960ll);
  goto label$8713;
  label$8573:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16777011ll);
  goto label$8713;
  label$8576:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16777062ll);
  goto label$8713;
  label$8579:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16777113ll);
  goto label$8713;
  label$8582:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16777164ll);
  goto label$8713;
  label$8585:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16777215ll);
  goto label$8713;
  label$8588:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 14737632ll);
  goto label$8713;
  label$8591:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 12698049ll);
  goto label$8713;
  label$8594:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10658466ll);
  goto label$8713;
  label$8597:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 8618883ll);
  goto label$8713;
  label$8600:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6579300ll);
  goto label$8713;
  label$8603:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 4539717ll);
  goto label$8713;
  label$8606:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 4605510ll);
  goto label$8713;
  label$8609:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 460551ll);
  goto label$8713;
  label$8612:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3342336ll);
  goto label$8713;
  label$8615:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)(((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll));
  goto label$8713;
  label$8618:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6684672ll);
  goto label$8713;
  label$8621:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10027008ll);
  goto label$8713;
  label$8624:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13369344ll);
  goto label$8713;
  label$8627:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16711680ll);
  goto label$8713;
  label$8630:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13382400ll);
  goto label$8713;
  label$8633:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10053120ll);
  goto label$8713;
  label$8636:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6723840ll);
  goto label$8713;
  label$8639:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3394560ll);
  goto label$8713;
  label$8642:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 65280ll);
  goto label$8713;
  label$8645:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 52275ll);
  goto label$8713;
  label$8648:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 39270ll);
  goto label$8713;
  label$8651:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 26265ll);
  goto label$8713;
  label$8654:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13260ll);
  goto label$8713;
  label$8657:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 255ll);
  goto label$8713;
  label$8660:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3342540ll);
  goto label$8713;
  label$8663:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6684825ll);
  goto label$8713;
  label$8666:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10027110ll);
  goto label$8713;
  label$8669:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13369395ll);
  goto label$8713;
  label$8672:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16711680ll);
  goto label$8713;
  label$8675:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 13382400ll);
  goto label$8713;
  label$8678:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 10053120ll);
  goto label$8713;
  label$8681:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6723840ll);
  goto label$8713;
  label$8684:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3394560ll);
  goto label$8713;
  label$8687:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16756736ll);
  goto label$8713;
  label$8690:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 16760832ll);
  goto label$8713;
  label$8693:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3407616ll);
  goto label$8713;
  label$8696:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 3407667ll);
  goto label$8713;
  label$8699:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 65331ll);
  goto label$8713;
  label$8702:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 6750054ll);
  goto label$8713;
  label$8705:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 65382ll);
  goto label$8713;
  label$8708:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 2631720ll);
  goto label$8713;
  label$8711:;
  *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + 2631720ll);
  goto label$8713;
  label$8713:;
  fb_GfxLine( BGIMAGE$, 0x0p+0f, 0x0p+0f, 0x1.DFCp+10f, 0x1.0DCp+10f, (uint32)((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395656ll) )), 2, 65535u, 0 );
  label$8714:;
 }
 goto label$7905;
 label$7943:;
 if( ((((int64)-(ADR$1 == (double)(int64)BGCOL0$) | (int64)-(ADR$1 == (double)(int64)BGCOL1$)) | (int64)-(ADR$1 == (double)(int64)BGCOL2$)) | (int64)-(ADR$1 == (double)(int64)BGCOL3$)) == 0ll ) goto label$8715;
 {
  if( V$1 != (double)(int64)*(uint8*)NIBBLES$ ) goto label$8717;
  goto label$8718;
  label$8717:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$8720;
  goto label$8721;
  label$8720:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) ) goto label$8723;
  goto label$8724;
  label$8723:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) ) goto label$8726;
  goto label$8727;
  label$8726:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) ) goto label$8729;
  goto label$8730;
  label$8729:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) ) goto label$8732;
  goto label$8733;
  label$8732:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) ) goto label$8735;
  goto label$8736;
  label$8735:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) ) goto label$8738;
  goto label$8739;
  label$8738:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) ) goto label$8741;
  goto label$8742;
  label$8741:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) ) goto label$8744;
  goto label$8745;
  label$8744:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) ) goto label$8747;
  goto label$8748;
  label$8747:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) ) goto label$8750;
  goto label$8751;
  label$8750:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) ) goto label$8753;
  goto label$8754;
  label$8753:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) ) goto label$8756;
  goto label$8757;
  label$8756:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) ) goto label$8759;
  goto label$8760;
  label$8759:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) ) goto label$8762;
  goto label$8763;
  label$8762:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$8765;
  goto label$8766;
  label$8765:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$8768;
  goto label$8769;
  label$8768:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$8771;
  goto label$8772;
  label$8771:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$8774;
  goto label$8775;
  label$8774:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$8777;
  goto label$8778;
  label$8777:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$8780;
  goto label$8781;
  label$8780:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$8783;
  goto label$8784;
  label$8783:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$8786;
  goto label$8787;
  label$8786:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$8789;
  goto label$8790;
  label$8789:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$8792;
  goto label$8793;
  label$8792:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$8795;
  goto label$8796;
  label$8795:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$8798;
  goto label$8799;
  label$8798:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$8801;
  goto label$8802;
  label$8801:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$8804;
  goto label$8805;
  label$8804:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$8807;
  goto label$8808;
  label$8807:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$8810;
  goto label$8811;
  label$8810:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$8813;
  goto label$8814;
  label$8813:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$8816;
  goto label$8817;
  label$8816:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$8819;
  goto label$8820;
  label$8819:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$8822;
  goto label$8823;
  label$8822:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$8825;
  goto label$8826;
  label$8825:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$8828;
  goto label$8829;
  label$8828:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$8831;
  goto label$8832;
  label$8831:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$8834;
  goto label$8835;
  label$8834:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$8837;
  goto label$8838;
  label$8837:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$8840;
  goto label$8841;
  label$8840:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$8843;
  goto label$8844;
  label$8843:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$8846;
  goto label$8847;
  label$8846:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$8849;
  goto label$8850;
  label$8849:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$8852;
  goto label$8853;
  label$8852:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$8855;
  goto label$8856;
  label$8855:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$8858;
  goto label$8859;
  label$8858:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$8861;
  goto label$8862;
  label$8861:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$8864;
  goto label$8865;
  label$8864:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$8867;
  goto label$8868;
  label$8867:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$8870;
  goto label$8871;
  label$8870:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$8873;
  goto label$8874;
  label$8873:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$8876;
  goto label$8877;
  label$8876:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$8879;
  goto label$8880;
  label$8879:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$8882;
  goto label$8883;
  label$8882:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$8885;
  goto label$8886;
  label$8885:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$8888;
  goto label$8889;
  label$8888:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$8891;
  goto label$8892;
  label$8891:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$8894;
  goto label$8895;
  label$8894:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$8897;
  goto label$8898;
  label$8897:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$8900;
  goto label$8901;
  label$8900:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$8903;
  goto label$8904;
  label$8903:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$8906;
  goto label$8907;
  label$8906:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$8909;
  goto label$8910;
  label$8909:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$8912;
  goto label$8913;
  label$8912:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$8915;
  goto label$8916;
  label$8915:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$8918;
  goto label$8919;
  label$8918:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$8921;
  goto label$8922;
  label$8921:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$8924;
  goto label$8925;
  label$8924:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$8927;
  goto label$8928;
  label$8927:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$8930;
  goto label$8931;
  label$8930:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$8933;
  goto label$8934;
  label$8933:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$8936;
  goto label$8937;
  label$8936:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$8939;
  goto label$8940;
  label$8939:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$8942;
  goto label$8943;
  label$8942:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$8945;
  goto label$8946;
  label$8945:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$8948;
  goto label$8949;
  label$8948:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$8951;
  goto label$8952;
  label$8951:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$8954;
  goto label$8955;
  label$8954:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$8957;
  goto label$8958;
  label$8957:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$8960;
  goto label$8961;
  label$8960:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$8963;
  goto label$8964;
  label$8963:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$8966;
  goto label$8967;
  label$8966:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$8969;
  goto label$8970;
  label$8969:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$8972;
  goto label$8973;
  label$8972:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$8975;
  goto label$8976;
  label$8975:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$8978;
  goto label$8979;
  label$8978:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$8981;
  goto label$8982;
  label$8981:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$8984;
  goto label$8985;
  label$8984:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$8987;
  goto label$8988;
  label$8987:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$8990;
  goto label$8991;
  label$8990:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$8993;
  goto label$8994;
  label$8993:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$8996;
  goto label$8997;
  label$8996:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$8999;
  goto label$9000;
  label$8999:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$9002;
  goto label$9003;
  label$9002:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$9005;
  goto label$9006;
  label$9005:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$9008;
  goto label$9009;
  label$9008:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$9011;
  goto label$9012;
  label$9011:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$9014;
  goto label$9015;
  label$9014:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$9017;
  goto label$9018;
  label$9017:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$9020;
  goto label$9021;
  label$9020:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$9023;
  goto label$9024;
  label$9023:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$9026;
  goto label$9027;
  label$9026:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$9029;
  goto label$9030;
  label$9029:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$9032;
  goto label$9033;
  label$9032:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$9035;
  goto label$9036;
  label$9035:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$9038;
  goto label$9039;
  label$9038:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$9041;
  goto label$9042;
  label$9041:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$9044;
  goto label$9045;
  label$9044:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$9047;
  goto label$9048;
  label$9047:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$9050;
  goto label$9051;
  label$9050:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$9053;
  goto label$9054;
  label$9053:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$9056;
  goto label$9057;
  label$9056:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$9059;
  goto label$9060;
  label$9059:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$9062;
  goto label$9063;
  label$9062:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$9065;
  goto label$9066;
  label$9065:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$9068;
  goto label$9069;
  label$9068:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$9071;
  goto label$9072;
  label$9071:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$9074;
  goto label$9075;
  label$9074:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$9077;
  goto label$9078;
  label$9077:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$9080;
  goto label$9081;
  label$9080:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$9083;
  goto label$9084;
  label$9083:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$9086;
  goto label$9087;
  label$9086:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$9089;
  goto label$9090;
  label$9089:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$9092;
  goto label$9093;
  label$9092:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$9095;
  goto label$9096;
  label$9095:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$9098;
  goto label$9099;
  label$9098:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$9101;
  goto label$9102;
  label$9101:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$9104;
  goto label$9105;
  label$9104:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$9107;
  goto label$9108;
  label$9107:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$9110;
  goto label$9111;
  label$9110:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$9113;
  goto label$9114;
  label$9113:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$9116;
  goto label$9117;
  label$9116:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$9119;
  goto label$9120;
  label$9119:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$9122;
  goto label$9123;
  label$9122:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$9125;
  goto label$9126;
  label$9125:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$9128;
  goto label$9129;
  label$9128:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$9131;
  goto label$9132;
  label$9131:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$9134;
  goto label$9135;
  label$9134:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$9137;
  goto label$9138;
  label$9137:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$9140;
  goto label$9141;
  label$9140:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$9143;
  goto label$9144;
  label$9143:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$9146;
  goto label$9147;
  label$9146:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$9149;
  goto label$9150;
  label$9149:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$9152;
  goto label$9153;
  label$9152:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$9155;
  goto label$9156;
  label$9155:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$9158;
  goto label$9159;
  label$9158:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$9161;
  goto label$9162;
  label$9161:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$9164;
  goto label$9165;
  label$9164:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$9167;
  goto label$9168;
  label$9167:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$9170;
  goto label$9171;
  label$9170:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$9173;
  goto label$9174;
  label$9173:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$9176;
  goto label$9177;
  label$9176:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$9179;
  goto label$9180;
  label$9179:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$9182;
  goto label$9183;
  label$9182:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$9185;
  goto label$9186;
  label$9185:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$9188;
  goto label$9189;
  label$9188:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$9191;
  goto label$9192;
  label$9191:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$9194;
  goto label$9195;
  label$9194:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$9197;
  goto label$9198;
  label$9197:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$9200;
  goto label$9201;
  label$9200:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$9203;
  goto label$9204;
  label$9203:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$9206;
  goto label$9207;
  label$9206:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$9209;
  goto label$9210;
  label$9209:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$9212;
  goto label$9213;
  label$9212:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$9215;
  goto label$9216;
  label$9215:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$9218;
  goto label$9219;
  label$9218:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$9221;
  goto label$9222;
  label$9221:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$9224;
  goto label$9225;
  label$9224:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$9227;
  goto label$9228;
  label$9227:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$9230;
  goto label$9231;
  label$9230:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$9233;
  goto label$9234;
  label$9233:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$9236;
  goto label$9237;
  label$9236:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$9239;
  goto label$9240;
  label$9239:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$9242;
  goto label$9243;
  label$9242:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$9245;
  goto label$9246;
  label$9245:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$9248;
  goto label$9249;
  label$9248:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$9251;
  goto label$9252;
  label$9251:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$9254;
  goto label$9255;
  label$9254:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$9257;
  goto label$9258;
  label$9257:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$9260;
  goto label$9261;
  label$9260:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$9263;
  goto label$9264;
  label$9263:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$9266;
  goto label$9267;
  label$9266:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$9269;
  goto label$9270;
  label$9269:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$9272;
  goto label$9273;
  label$9272:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$9275;
  goto label$9276;
  label$9275:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$9278;
  goto label$9279;
  label$9278:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$9281;
  goto label$9282;
  label$9281:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$9284;
  goto label$9285;
  label$9284:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$9287;
  goto label$9288;
  label$9287:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$9290;
  goto label$9291;
  label$9290:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$9293;
  goto label$9294;
  label$9293:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$9296;
  goto label$9297;
  label$9296:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$9299;
  goto label$9300;
  label$9299:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$9302;
  goto label$9303;
  label$9302:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$9305;
  goto label$9306;
  label$9305:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$9308;
  goto label$9309;
  label$9308:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$9311;
  goto label$9312;
  label$9311:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$9314;
  goto label$9315;
  label$9314:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$9317;
  goto label$9318;
  label$9317:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$9320;
  goto label$9321;
  label$9320:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$9323;
  goto label$9324;
  label$9323:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$9326;
  goto label$9327;
  label$9326:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$9329;
  goto label$9330;
  label$9329:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$9332;
  goto label$9333;
  label$9332:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$9335;
  goto label$9336;
  label$9335:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$9338;
  goto label$9339;
  label$9338:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$9341;
  goto label$9342;
  label$9341:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$9344;
  goto label$9345;
  label$9344:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$9347;
  goto label$9348;
  label$9347:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$9350;
  goto label$9351;
  label$9350:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$9353;
  goto label$9354;
  label$9353:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$9356;
  goto label$9357;
  label$9356:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$9359;
  goto label$9360;
  label$9359:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$9362;
  goto label$9363;
  label$9362:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$9365;
  goto label$9366;
  label$9365:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$9368;
  goto label$9369;
  label$9368:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$9371;
  goto label$9372;
  label$9371:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$9374;
  goto label$9375;
  label$9374:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$9377;
  goto label$9378;
  label$9377:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$9380;
  goto label$9381;
  label$9380:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$9383;
  goto label$9384;
  label$9383:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$9386;
  goto label$9387;
  label$9386:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$9389;
  goto label$9390;
  label$9389:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$9392;
  goto label$9393;
  label$9392:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$9395;
  goto label$9396;
  label$9395:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$9398;
  goto label$9399;
  label$9398:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$9401;
  goto label$9402;
  label$9401:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$9404;
  goto label$9405;
  label$9404:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$9407;
  goto label$9408;
  label$9407:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$9410;
  goto label$9411;
  label$9410:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$9413;
  goto label$9414;
  label$9413:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$9416;
  goto label$9417;
  label$9416:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$9419;
  goto label$9420;
  label$9419:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$9422;
  goto label$9423;
  label$9422:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$9425;
  goto label$9426;
  label$9425:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$9428;
  goto label$9429;
  label$9428:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$9431;
  goto label$9432;
  label$9431:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$9434;
  goto label$9435;
  label$9434:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$9437;
  goto label$9438;
  label$9437:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$9440;
  goto label$9441;
  label$9440:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$9443;
  goto label$9444;
  label$9443:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$9446;
  goto label$9447;
  label$9446:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$9449;
  goto label$9450;
  label$9449:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$9452;
  goto label$9453;
  label$9452:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$9455;
  goto label$9456;
  label$9455:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$9458;
  goto label$9459;
  label$9458:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$9461;
  goto label$9462;
  label$9461:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$9464;
  goto label$9465;
  label$9464:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$9467;
  goto label$9468;
  label$9467:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$9470;
  goto label$9471;
  label$9470:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$9473;
  goto label$9474;
  label$9473:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$9476;
  goto label$9477;
  label$9476:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$9479;
  goto label$9480;
  label$9479:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$9482;
  goto label$9483;
  label$9482:;
  goto label$8712;
  label$8718:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8712;
  label$8721:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$8712;
  label$8724:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$8712;
  label$8727:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$8712;
  label$8730:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$8712;
  label$8733:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$8712;
  label$8736:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8712;
  label$8739:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$8712;
  label$8742:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$8712;
  label$8745:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$8712;
  label$8748:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$8712;
  label$8751:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$8712;
  label$8754:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8712;
  label$8757:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$8712;
  label$8760:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$8712;
  label$8763:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$8712;
  label$8766:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$8712;
  label$8769:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$8712;
  label$8772:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8712;
  label$8775:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$8712;
  label$8778:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$8712;
  label$8781:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$8712;
  label$8784:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$8712;
  label$8787:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$8712;
  label$8790:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8712;
  label$8793:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$8712;
  label$8796:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$8712;
  label$8799:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$8712;
  label$8802:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$8712;
  label$8805:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$8712;
  label$8808:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8712;
  label$8811:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$8712;
  label$8814:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$8712;
  label$8817:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$8712;
  label$8820:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$8712;
  label$8823:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$8712;
  label$8826:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8712;
  label$8829:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$8712;
  label$8832:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$8712;
  label$8835:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$8712;
  label$8838:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$8712;
  label$8841:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$8712;
  label$8844:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8712;
  label$8847:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$8712;
  label$8850:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$8712;
  label$8853:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$8712;
  label$8856:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$8712;
  label$8859:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$8712;
  label$8862:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8712;
  label$8865:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$8712;
  label$8868:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$8712;
  label$8871:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$8712;
  label$8874:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$8712;
  label$8877:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$8712;
  label$8880:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8712;
  label$8883:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$8712;
  label$8886:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$8712;
  label$8889:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$8712;
  label$8892:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$8712;
  label$8895:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$8712;
  label$8898:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8712;
  label$8901:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$8712;
  label$8904:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$8712;
  label$8907:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$8712;
  label$8910:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$8712;
  label$8913:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$8712;
  label$8916:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8712;
  label$8919:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$8712;
  label$8922:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$8712;
  label$8925:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$8712;
  label$8928:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$8712;
  label$8931:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$8712;
  label$8934:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8712;
  label$8937:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$8712;
  label$8940:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$8712;
  label$8943:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$8712;
  label$8946:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$8712;
  label$8949:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$8712;
  label$8952:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8712;
  label$8955:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$8712;
  label$8958:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$8712;
  label$8961:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$8712;
  label$8964:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$8712;
  label$8967:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$8712;
  label$8970:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8712;
  label$8973:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$8712;
  label$8976:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$8712;
  label$8979:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$8712;
  label$8982:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$8712;
  label$8985:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$8712;
  label$8988:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8712;
  label$8991:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$8712;
  label$8994:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$8712;
  label$8997:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$8712;
  label$9000:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$8712;
  label$9003:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8712;
  label$9006:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$8712;
  label$9009:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$8712;
  label$9012:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$8712;
  label$9015:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$8712;
  label$9018:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$8712;
  label$9021:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8712;
  label$9024:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$8712;
  label$9027:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$8712;
  label$9030:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$8712;
  label$9033:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$8712;
  label$9036:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$8712;
  label$9039:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8712;
  label$9042:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$8712;
  label$9045:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$8712;
  label$9048:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$8712;
  label$9051:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$8712;
  label$9054:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$8712;
  label$9057:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8712;
  label$9060:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$8712;
  label$9063:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$8712;
  label$9066:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$8712;
  label$9069:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$8712;
  label$9072:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$8712;
  label$9075:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8712;
  label$9078:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$8712;
  label$9081:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$8712;
  label$9084:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$8712;
  label$9087:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$8712;
  label$9090:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$8712;
  label$9093:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8712;
  label$9096:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$8712;
  label$9099:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$8712;
  label$9102:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$8712;
  label$9105:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$8712;
  label$9108:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$8712;
  label$9111:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8712;
  label$9114:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$8712;
  label$9117:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$8712;
  label$9120:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$8712;
  label$9123:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$8712;
  label$9126:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$8712;
  label$9129:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8712;
  label$9132:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$8712;
  label$9135:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$8712;
  label$9138:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$8712;
  label$9141:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$8712;
  label$9144:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$8712;
  label$9147:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8712;
  label$9150:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$8712;
  label$9153:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$8712;
  label$9156:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$8712;
  label$9159:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$8712;
  label$9162:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$8712;
  label$9165:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8712;
  label$9168:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$8712;
  label$9171:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$8712;
  label$9174:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$8712;
  label$9177:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$8712;
  label$9180:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$8712;
  label$9183:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8712;
  label$9186:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$8712;
  label$9189:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$8712;
  label$9192:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$8712;
  label$9195:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$8712;
  label$9198:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$8712;
  label$9201:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8712;
  label$9204:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$8712;
  label$9207:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$8712;
  label$9210:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$8712;
  label$9213:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$8712;
  label$9216:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$8712;
  label$9219:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8712;
  label$9222:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$8712;
  label$9225:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$8712;
  label$9228:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$8712;
  label$9231:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$8712;
  label$9234:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$8712;
  label$9237:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8712;
  label$9240:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$8712;
  label$9243:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$8712;
  label$9246:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$8712;
  label$9249:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$8712;
  label$9252:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$8712;
  label$9255:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8712;
  label$9258:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$8712;
  label$9261:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$8712;
  label$9264:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$8712;
  label$9267:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$8712;
  label$9270:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$8712;
  label$9273:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8712;
  label$9276:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$8712;
  label$9279:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$8712;
  label$9282:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$8712;
  label$9285:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$8712;
  label$9288:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$8712;
  label$9291:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8712;
  label$9294:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$8712;
  label$9297:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$8712;
  label$9300:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$8712;
  label$9303:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$8712;
  label$9306:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$8712;
  label$9309:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8712;
  label$9312:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$8712;
  label$9315:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$8712;
  label$9318:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$8712;
  label$9321:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$8712;
  label$9324:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$8712;
  label$9327:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8712;
  label$9330:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$8712;
  label$9333:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$8712;
  label$9336:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$8712;
  label$9339:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$8712;
  label$9342:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$8712;
  label$9345:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8712;
  label$9348:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$8712;
  label$9351:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$8712;
  label$9354:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$8712;
  label$9357:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$8712;
  label$9360:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$8712;
  label$9363:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.Cp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.Cp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.Cp+7 );
  goto label$8712;
  label$9366:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.82p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.82p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.82p+7 );
  goto label$8712;
  label$9369:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.44p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.44p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.44p+7 );
  goto label$8712;
  label$9372:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.06p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.06p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.06p+7 );
  goto label$8712;
  label$9375:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.9p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.9p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.9p+6 );
  goto label$8712;
  label$9378:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.14p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.14p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.14p+6 );
  goto label$8712;
  label$9381:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.3p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.3p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.3p+5 );
  goto label$8712;
  label$9384:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.Cp+2 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.Cp+2 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.Cp+2 );
  goto label$8712;
  label$9387:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8712;
  label$9390:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8712;
  label$9393:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8712;
  label$9396:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8712;
  label$9399:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8712;
  label$9402:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8712;
  label$9405:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8712;
  label$9408:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8712;
  label$9411:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8712;
  label$9414:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8712;
  label$9417:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8712;
  label$9420:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$8712;
  label$9423:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$8712;
  label$9426:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$8712;
  label$9429:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$8712;
  label$9432:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$8712;
  label$9435:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$8712;
  label$9438:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$8712;
  label$9441:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$8712;
  label$9444:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$8712;
  label$9447:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8712;
  label$9450:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8712;
  label$9453:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8712;
  label$9456:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8712;
  label$9459:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8712;
  label$9462:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.6p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8712;
  label$9465:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.8p+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8712;
  label$9468:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$8712;
  label$9471:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$8712;
  label$9474:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$8712;
  label$9477:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$8712;
  label$9480:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$8712;
  label$9483:;
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.4p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.4p+5 );
  _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.4p+5 );
  goto label$8712;
  label$8712:;
 }
 label$8715:;
 label$7905:;
 {
  if( ADR$1 != (double)(int64)*(uint8*)NIBBLES$ ) goto label$9485;
  label$9486:;
  {
  }
  goto label$9484;
  label$9485:;
  if( ADR$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) ) goto label$9487;
  label$9488:;
  {
   FBSTRING TMP$3206$3;
   FBSTRING TMP$3207$3;
   fb_GfxScreen( 0, 8, 0, 0, 0 );
   FBSTRING* vr$6228 = fb_DoubleToStr( V$1 );
   __builtin_memset( &TMP$3206$3, 0, 24ll );
   FBSTRING* vr$6231 = fb_StrConcat( &TMP$3206$3, (void*)"mplayer -vo xv -fs -alang en dv://", 35ll, (void*)vr$6228, -1ll );
   __builtin_memset( &TMP$3207$3, 0, 24ll );
   FBSTRING* vr$6234 = fb_StrConcat( &TMP$3207$3, (void*)vr$6231, -1ll, (void*)" -dvd-device /dev/sr0", 22ll );
   fb_Shell( (FBSTRING*)vr$6234 );
   fb_GfxScreenRes( 1920, 1080, 32, 7, 64, 0 );
   fb_Cls( -65536 );
   FBSTRING* vr$6235 = fb_StrAllocTempDescZEx( (uint8*)"", 0ll );
   fb_GfxPaint( (void*)0ull, 0x0p+0f, 0x0p+0f, 4278190080u, 0u, (FBSTRING*)vr$6235, 0, 1073741828 );
  }
  goto label$9484;
  label$9487:;
  if( ADR$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$9489;
  label$9490:;
  {
   fb_GfxScreen( 0, 8, 0, 0, 0 );
   FBSTRING* vr$6242 = fb_StrAllocTempDescZEx( (uint8*)"mplayer -vo xv -fs dvdnav:// -mouse-movements -dvd-device /dev/sr0", 66ll );
   fb_Shell( (FBSTRING*)vr$6242 );
   fb_GfxScreenRes( 1920, 1080, 32, 7, 64, 0 );
   fb_Cls( -65536 );
   FBSTRING* vr$6243 = fb_StrAllocTempDescZEx( (uint8*)"", 0ll );
   fb_GfxPaint( (void*)0ull, 0x0p+0f, 0x0p+0f, 4278190080u, 0u, (FBSTRING*)vr$6243, 0, 1073741828 );
  }
  goto label$9484;
  label$9489:;
  if( ADR$1 != 0x1.8004p+15 ) goto label$9491;
  label$9492:;
  {
   _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.Cp+23, 0x0p+0 );
  }
  goto label$9484;
  label$9491:;
  if( ADR$1 != 0x1.8006p+15 ) goto label$9493;
  label$9494:;
  {
   _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.Cp+23, 0x0p+0 );
  }
  goto label$9484;
  label$9493:;
  if( ADR$1 != 0x1.8008p+15 ) goto label$9495;
  label$9496:;
  {
   _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.Cp+23, 0x0p+0 );
  }
  goto label$9484;
  label$9495:;
  if( ADR$1 != 0x1.800Ap+15 ) goto label$9497;
  label$9498:;
  {
   _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.Cp+23, 0x0p+0 );
  }
  goto label$9484;
  label$9497:;
  if( ADR$1 != 0x1.800Cp+15 ) goto label$9499;
  label$9500:;
  {
   _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.C00002p+23, 0x0p+0 );
  }
  goto label$9484;
  label$9499:;
  if( ADR$1 != 0x1.800Ep+15 ) goto label$9501;
  label$9502:;
  {
   _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.C00002p+23, 0x0p+0 );
  }
  goto label$9484;
  label$9501:;
  if( ADR$1 != 0x1.801p+15 ) goto label$9503;
  label$9504:;
  {
   _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.C00002p+23, 0x0p+0 );
  }
  goto label$9484;
  label$9503:;
  if( ADR$1 != 0x1.8012p+15 ) goto label$9505;
  label$9506:;
  {
   _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, 0x1.C00002p+23, 0x0p+0 );
  }
  goto label$9484;
  label$9505:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$9507;
  label$9508:;
  {
   *(double*)((int64)(double*)MEM64$ + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393304ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393312ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393320ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393328ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 393336ll);
  }
  goto label$9484;
  label$9507:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$9509;
  label$9510:;
  {
   *(double*)((int64)(double*)MEM64$ + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) << (3ll & 63ll))) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393352ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393360ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393368ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393376ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 393384ll);
  }
  goto label$9484;
  label$9509:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$9511;
  label$9512:;
  {
   *(double*)((int64)(double*)MEM64$ + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) << (3ll & 63ll))) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393400ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393408ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393416ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393424ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 393432ll);
  }
  goto label$9484;
  label$9511:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$9513;
  label$9514:;
  {
   *(double*)((int64)(double*)MEM64$ + 394864ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393448ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393456ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393464ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393472ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 393480ll);
  }
  goto label$9484;
  label$9513:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$9515;
  label$9516:;
  {
   *(double*)((int64)(double*)MEM64$ + 394872ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393496ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393504ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393512ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393520ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 393528ll);
  }
  goto label$9484;
  label$9515:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$9517;
  label$9518:;
  {
   *(double*)((int64)(double*)MEM64$ + 394880ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393544ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393552ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393560ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393568ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 393576ll);
  }
  goto label$9484;
  label$9517:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$9519;
  label$9520:;
  {
   *(double*)((int64)(double*)MEM64$ + 394888ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393592ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393600ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393608ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393616ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 393624ll);
  }
  goto label$9484;
  label$9519:;
  if( ADR$1 != 0x1.8068p+15 ) goto label$9521;
  label$9522:;
  {
   *(double*)((int64)(double*)MEM64$ + 394896ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393640ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393648ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393656ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393664ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 393672ll);
  }
  goto label$9484;
  label$9521:;
  if( ADR$1 != 0x1.8074p+15 ) goto label$9523;
  label$9524:;
  {
   *(double*)((int64)(double*)MEM64$ + 394904ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393688ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393696ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393704ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393712ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 393720ll);
  }
  goto label$9484;
  label$9523:;
  if( ADR$1 != 0x1.808p+15 ) goto label$9525;
  label$9526:;
  {
   *(double*)((int64)(double*)MEM64$ + 394912ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393736ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393744ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393752ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393768ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 393776ll);
  }
  goto label$9484;
  label$9525:;
  if( ADR$1 != 0x1.808Ep+15 ) goto label$9527;
  label$9528:;
  {
   *(double*)((int64)(double*)MEM64$ + 394920ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393792ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393800ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393808ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393816ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 393824ll);
  }
  goto label$9484;
  label$9527:;
  if( ADR$1 != 0x1.8096p+15 ) goto label$9529;
  label$9530:;
  {
   *(double*)((int64)(double*)MEM64$ + 394928ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393832ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393840ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393848ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393856ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 393864ll);
  }
  goto label$9484;
  label$9529:;
  if( ADR$1 != 0x1.80A4p+15 ) goto label$9531;
  label$9532:;
  {
   *(double*)((int64)(double*)MEM64$ + 394936ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393880ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393888ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393896ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393904ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 393912ll);
  }
  goto label$9484;
  label$9531:;
  if( ADR$1 != 0x1.80Bp+15 ) goto label$9533;
  label$9534:;
  {
   *(double*)((int64)(double*)MEM64$ + 394944ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393928ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393936ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393944ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393952ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 393960ll);
  }
  goto label$9484;
  label$9533:;
  if( ADR$1 != 0x1.80BCp+15 ) goto label$9535;
  label$9536:;
  {
   *(double*)((int64)(double*)MEM64$ + 394952ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393976ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393984ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393992ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394000ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 394008ll);
  }
  goto label$9484;
  label$9535:;
  if( ADR$1 != 0x1.80C8p+15 ) goto label$9537;
  label$9538:;
  {
   *(double*)((int64)(double*)MEM64$ + 394960ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394024ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394032ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 386040ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394048ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 394056ll);
  }
  goto label$9484;
  label$9537:;
  if( ADR$1 != 0x1.80D4p+15 ) goto label$9539;
  label$9540:;
  {
   *(double*)((int64)(double*)MEM64$ + 394968ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394072ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394080ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394088ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394096ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 394104ll);
  }
  goto label$9484;
  label$9539:;
  if( ADR$1 != 0x1.80Ep+15 ) goto label$9541;
  label$9542:;
  {
   *(double*)((int64)(double*)MEM64$ + 394976ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394120ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394128ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394136ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394144ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 394152ll);
  }
  goto label$9484;
  label$9541:;
  if( ADR$1 != 0x1.80ECp+15 ) goto label$9543;
  label$9544:;
  {
   *(double*)((int64)(double*)MEM64$ + 394984ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394168ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394176ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394184ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394192ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 394200ll);
  }
  goto label$9484;
  label$9543:;
  if( ADR$1 != 0x1.80F8p+15 ) goto label$9545;
  label$9546:;
  {
   *(double*)((int64)(double*)MEM64$ + 394992ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394216ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394224ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394232ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394240ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 394248ll);
  }
  goto label$9484;
  label$9545:;
  if( ADR$1 != 0x1.8104p+15 ) goto label$9547;
  label$9548:;
  {
   *(double*)((int64)(double*)MEM64$ + 395000ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394264ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394272ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394280ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394288ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 394296ll);
  }
  goto label$9484;
  label$9547:;
  if( ADR$1 != 0x1.811p+15 ) goto label$9549;
  label$9550:;
  {
   *(double*)((int64)(double*)MEM64$ + 395008ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394312ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394320ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394328ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394336ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 394344ll);
  }
  goto label$9484;
  label$9549:;
  if( ADR$1 != 0x1.811Cp+15 ) goto label$9551;
  label$9552:;
  {
   *(double*)((int64)(double*)MEM64$ + 395016ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394360ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394368ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394376ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394384ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 394392ll);
  }
  goto label$9484;
  label$9551:;
  if( ADR$1 != 0x1.8128p+15 ) goto label$9553;
  label$9554:;
  {
   *(double*)((int64)(double*)MEM64$ + 395024ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394408ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394416ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394424ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394432ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 394440ll);
  }
  goto label$9484;
  label$9553:;
  if( ADR$1 != 0x1.8134p+15 ) goto label$9555;
  label$9556:;
  {
   *(double*)((int64)(double*)MEM64$ + 395032ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394456ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394464ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394472ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394480ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 394488ll);
  }
  goto label$9484;
  label$9555:;
  if( ADR$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) ) goto label$9557;
  label$9558:;
  {
   typedef void (*_ZN12SYSTEM_BUS_T8tmp$3209Elllla)( int64, int64, int64, int64, int8 );
   ((_ZN12SYSTEM_BUS_T8tmp$3209Elllla)&GLSCREEN)( ((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394952ll) )), ((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394960ll) )), -1ll, -1ll, (int8)-1 );
  }
  goto label$9484;
  label$9557:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$9559;
  label$9560:;
  {
   {
    uint64 TMP$3210$4;
    TMP$3210$4 = ((uint64)__builtin_nearbyint( V$1 ));
    goto label$9562;
    label$9563:;
    {
     FBSTRING TMP$3219$5;
     int8 BFULLSCREEN$5;
     __builtin_memset( &BFULLSCREEN$5, 0, 1ll );
     int8 BTEXTURED$5;
     __builtin_memset( &BTEXTURED$5, 0, 1ll );
     int8 BNOISE$5;
     __builtin_memset( &BNOISE$5, 0, 1ll );
     int8 BLINEAR$5;
     __builtin_memset( &BLINEAR$5, 0, 1ll );
     int8 BNEAREST$5;
     __builtin_memset( &BNEAREST$5, 0, 1ll );
     int8 BNEARESTLINEAR$5;
     __builtin_memset( &BNEARESTLINEAR$5, 0, 1ll );
     int8 BLINEARNEAREST$5;
     __builtin_memset( &BLINEARNEAREST$5, 0, 1ll );
     int8 BMIPMAP$5;
     __builtin_memset( &BMIPMAP$5, 0, 1ll );
     int8 BREPEAT$5;
     __builtin_memset( &BREPEAT$5, 0, 1ll );
     *(double*)((int64)(double*)MEM64$ + 394952ll) = 0x1.Ep+10;
     *(double*)((int64)(double*)MEM64$ + 394960ll) = 0x1.0Ep+10;
     _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.814p+15, 0x0p+0 );
     struct $4VEC3 V3$5;
     __builtin_memset( &V3$5, 0, 12ll );
     *(float*)&V3$5 = 0x1.Ep+10f;
     *(float*)((uint8*)&V3$5 + 4ll) = 0x1.0Ep+10f;
     *(float*)((uint8*)&V3$5 + 8ll) = (float)((double)*(float*)&V3$5 / (double)*(float*)((uint8*)&V3$5 + 4ll));
     struct $9SHADERTOY SHADER$5;
     _ZN9SHADERTOYC1Ev( &SHADER$5 );
     int64 vr$6702 = fb_StrLen( (void*)&FILENAME$, -1ll );
     if( vr$6702 != 0ll ) goto label$9565;
     {
      BTEXTURED$5 = (int8)-1;
      fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"./shaders/pc/demo.glsl", 23ll, 0 );
     }
     label$9565:;
     label$9564:;
     int8 vr$6704 = _ZN9SHADERTOY11COMPILEFILEER8FBSTRING( &SHADER$5, &FILENAME$ );
     if( (int64)vr$6704 != 0ll ) goto label$9567;
     {
      FBSTRING TMP$3214$6;
      FBSTRING TMP$3215$6;
      FBSTRING TMP$3216$6;
      FBSTRING TMP$3217$6;
      __builtin_memset( &TMP$3217$6, 0, 24ll );
      __builtin_memset( &TMP$3214$6, 0, 24ll );
      FBSTRING* vr$6710 = fb_StrConcat( &TMP$3214$6, (void*)"file: ", 7ll, (void*)&FILENAME$, -1ll );
      __builtin_memset( &TMP$3215$6, 0, 24ll );
      FBSTRING* vr$6713 = fb_StrConcat( &TMP$3215$6, (void*)vr$6710, -1ll, (void*)"\x0A\x0A", 3ll );
      __builtin_memset( &TMP$3216$6, 0, 24ll );
      FBSTRING* vr$6716 = fb_StrConcat( &TMP$3216$6, (void*)vr$6713, -1ll, (void*)((uint8*)&SHADER$5 + 8ll), -1ll );
      fb_StrAssign( (void*)&TMP$3217$6, -1ll, (void*)vr$6716, -1ll, 0 );
      ERROREXIT( &TMP$3217$6 );
      fb_StrDelete( (FBSTRING*)&TMP$3217$6 );
     }
     label$9567:;
     label$9566:;
     __builtin_memset( &TMP$3219$5, 0, 24ll );
     FBSTRING* vr$6722 = fb_StrConcat( &TMP$3219$5, (void*)&FILENAME$, -1ll, (void*)" ok ...", 8ll );
     fb_GfxSetWindowTitle( (FBSTRING*)vr$6722 );
     (GLUSEPROGRAM$)( *(uint32*)((uint8*)&SHADER$5 + 4ll) );
     int32 TEXTURES$5[4];
     __builtin_memset( (int32*)TEXTURES$5, 0, 16ll );
     struct $N12SYSTEM_BUS_T8FBARRAY1IiEE {
      int32* DATA;
      int32* PTR;
      int64 SIZE;
      int64 ELEMENT_LEN;
      int64 DIMENSIONS;
      int64 FLAGS;
      struct $16__FB_ARRAYDIMTB$ DIMTB[1];
     };
     extern int __$fb_structsizecheck[(sizeof( struct $N12SYSTEM_BUS_T8FBARRAY1IiEE ) == 72) ? 1 : -1];
     struct $N12SYSTEM_BUS_T8FBARRAY1IiEE tmp$3220$5;
     *(int32**)&tmp$3220$5 = (int32*)TEXTURES$5;
     *(int32**)((uint8*)&tmp$3220$5 + 8ll) = (int32*)TEXTURES$5;
     *(int64*)((uint8*)&tmp$3220$5 + 16ll) = 16ll;
     *(int64*)((uint8*)&tmp$3220$5 + 24ll) = 4ll;
     *(int64*)((uint8*)&tmp$3220$5 + 32ll) = 1ll;
     *(int64*)((uint8*)&tmp$3220$5 + 40ll) = 49ll;
     *(int64*)((uint8*)&tmp$3220$5 + 48ll) = 4ll;
     *(int64*)((uint8*)&tmp$3220$5 + 56ll) = 0ll;
     *(int64*)((uint8*)&tmp$3220$5 + 64ll) = 3ll;
     glGenTextures( 4, (uint32*)TEXTURES$5 );
     if( (int64)BTEXTURED$5 == 0ll ) goto label$9569;
     {
      int64 TMP$3224$6;
      if( FGIMAGE$ != (void*)0ull ) goto label$9571;
      {
       void* vr$6728 = fb_GfxImageCreate( 512, 512, 4278190080u, 32, 0 );
       FGIMAGE$ = vr$6728;
       if( (int64)BNOISE$5 != -1ll ) goto label$9573;
       {
        {
         int64 Y$9;
         Y$9 = 0ll;
         label$9577:;
         {
          {
           int64 X$11;
           X$11 = 0ll;
           label$9581:;
           {
            double vr$6730 = fb_Rnd( 0x1.p+0f );
            double vr$6736 = fb_Rnd( 0x1.p+0f );
            double vr$6743 = fb_Rnd( 0x1.p+0f );
            fb_GfxPset( FGIMAGE$, (float)X$11, (float)Y$9, (uint32)(((((int64)(uint32)(uint8)((int32)__builtin_nearbyint( vr$6730 * 0x1.FEp+7 )) << (16ll & 63ll)) | ((int64)(uint32)(uint8)((int32)__builtin_nearbyint( vr$6736 * 0x1.FEp+7 )) << (8ll & 63ll))) | (int64)(uint32)(uint8)((int32)__builtin_nearbyint( vr$6743 * 0x1.FEp+7 ))) | 4278190080ll), 4, 0 );
           }
           label$9579:;
           X$11 = X$11 + 1ll;
           label$9578:;
           if( X$11 <= 512ll ) goto label$9581;
           label$9580:;
          }
         }
         label$9575:;
         Y$9 = Y$9 + 1ll;
         label$9574:;
         if( Y$9 <= 512ll ) goto label$9577;
         label$9576:;
        }
       }
       goto label$9572;
       label$9573:;
       {
        {
         int64 Y$9;
         Y$9 = 0ll;
         label$9585:;
         {
          {
           int64 X$11;
           X$11 = 0ll;
           label$9589:;
           {
            uint32 TMP$3221$12;
            if( ((X$11 + Y$9) % 2ll) != 0ll ) goto label$9590;
            TMP$3221$12 = 4294967295u;
            goto label$12483;
            label$9590:;
            TMP$3221$12 = 4278190080u;
            label$12483:;
            fb_GfxLine( FGIMAGE$, (float)((double)(X$11 << (9ll & 63ll)) / 0x1.p+4), (float)((double)(Y$9 << (9ll & 63ll)) / 0x1.p+4), 0x1.Fp+4f, 0x1.Fp+4f, TMP$3221$12, 2, 65535u, 1 );
           }
           label$9587:;
           X$11 = X$11 + 1ll;
           label$9586:;
           if( X$11 <= 32ll ) goto label$9589;
           label$9588:;
          }
         }
         label$9583:;
         Y$9 = Y$9 + 1ll;
         label$9582:;
         if( Y$9 <= 32ll ) goto label$9585;
         label$9584:;
        }
        FBSTRING* vr$6767 = fb_StrAllocTempDescZEx( (uint8*)"FreeBASIC", 9ll );
        fb_GfxDrawString( FGIMAGE$, 0x0p+0f, 0x0p+0f, 4, (FBSTRING*)vr$6767, 4294901760u, (void*)0ull, 0, (void*)0ull, (void*)0ull, (void*)0ull );
        FBSTRING* vr$6768 = fb_StrAllocTempDescZEx( (uint8*)"Shadertoy.com", 13ll );
        fb_GfxDrawString( FGIMAGE$, 0x1.8p+4f, 0x1.8p+4f, 4, (FBSTRING*)vr$6768, 4278255360u, (void*)0ull, 0, (void*)0ull, (void*)0ull, (void*)0ull );
       }
       label$9572:;
      }
      label$9571:;
      label$9570:;
      int64 TW$6;
      __builtin_memset( &TW$6, 0, 8ll );
      int64 TH$6;
      __builtin_memset( &TH$6, 0, 8ll );
      int64 TB$6;
      __builtin_memset( &TB$6, 0, 8ll );
      int64 TP$6;
      __builtin_memset( &TP$6, 0, 8ll );
      void* PIXELS$6;
      __builtin_memset( &PIXELS$6, 0, 8ll );
      TMP$3224$6 = 0ll;
      fb_GfxImageInfo64( (void*)FGIMAGE$, (int64*)&TW$6, (int64*)&TH$6, (int64*)&TB$6, (int64*)&TP$6, &PIXELS$6, &TMP$3224$6 );
      glBindTexture( 3553u, *(uint32*)TEXTURES$5 );
      if( (int64)BMIPMAP$5 == 0ll ) goto label$9592;
      {
       glTexParameteri( 3553u, 33169u, 1 );
       glTexParameteri( 3553u, 10240u, 9728 );
       glTexParameteri( 3553u, 10241u, 9987 );
      }
      label$9592:;
      label$9591:;
      if( (int64)BREPEAT$5 == 0ll ) goto label$9594;
      {
       glTexParameteri( 3553u, 10242u, 10497 );
       glTexParameteri( 3553u, 10243u, 10497 );
      }
      label$9594:;
      label$9593:;
      if( (int64)BLINEAR$5 == 0ll ) goto label$9596;
      {
       glTexParameteri( 3553u, 10241u, 9729 );
       glTexParameteri( 3553u, 10240u, 9729 );
      }
      goto label$9595;
      label$9596:;
      if( (int64)BNEAREST$5 == 0ll ) goto label$9597;
      {
       glTexParameteri( 3553u, 10241u, 9728 );
       glTexParameteri( 3553u, 10240u, 9728 );
      }
      goto label$9595;
      label$9597:;
      if( (int64)BNEARESTLINEAR$5 == 0ll ) goto label$9598;
      {
       glTexParameteri( 3553u, 10241u, 9728 );
       glTexParameteri( 3553u, 10240u, 9729 );
      }
      goto label$9595;
      label$9598:;
      if( (int64)BLINEARNEAREST$5 == 0ll ) goto label$9599;
      {
       glTexParameteri( 3553u, 10241u, 9729 );
       glTexParameteri( 3553u, 10240u, 9728 );
      }
      label$9599:;
      label$9595:;
      glTexImage2D( 3553u, 0, 6408, (int32)TW$6, (int32)TH$6, 0, 32993u, 5121u, (void*)PIXELS$6 );
      glBindTexture( 3553u, 0u );
     }
     label$9569:;
     label$9568:;
     int32 ICHANNEL0$5;
     int32 vr$6788 = (GLGETUNIFORMLOCATION$)( *(uint32*)((uint8*)&SHADER$5 + 4ll), (uint8*)"iChannel0" );
     ICHANNEL0$5 = vr$6788;
     if( (int64)ICHANNEL0$5 <= -1ll ) goto label$9601;
     {
      (GLUNIFORM1I$)( ICHANNEL0$5, 0 );
      glActiveTexture( 33984u );
      glBindTexture( 3553u, *(uint32*)TEXTURES$5 );
     }
     label$9601:;
     label$9600:;
     int32 IGLOBALTIME$5;
     int32 vr$6790 = (GLGETUNIFORMLOCATION$)( *(uint32*)((uint8*)&SHADER$5 + 4ll), (uint8*)"iGlobalTime" );
     IGLOBALTIME$5 = vr$6790;
     int32 ITIME$5;
     int32 vr$6791 = (GLGETUNIFORMLOCATION$)( *(uint32*)((uint8*)&SHADER$5 + 4ll), (uint8*)"iTime" );
     ITIME$5 = vr$6791;
     int32 IRESOLUTION$5;
     int32 vr$6792 = (GLGETUNIFORMLOCATION$)( *(uint32*)((uint8*)&SHADER$5 + 4ll), (uint8*)"iResolution" );
     IRESOLUTION$5 = vr$6792;
     int32 IMOUSE$5;
     int32 vr$6793 = (GLGETUNIFORMLOCATION$)( *(uint32*)((uint8*)&SHADER$5 + 4ll), (uint8*)"iMouse" );
     IMOUSE$5 = vr$6793;
     int32 IFRAME$5;
     int32 vr$6794 = (GLGETUNIFORMLOCATION$)( *(uint32*)((uint8*)&SHADER$5 + 4ll), (uint8*)"iFrame" );
     IFRAME$5 = vr$6794;
     if( (int64)IRESOLUTION$5 <= -1ll ) goto label$9603;
     {
      (GLUNIFORM3F$)( IRESOLUTION$5, *(float*)&V3$5, *(float*)((uint8*)&V3$5 + 4ll), *(float*)((uint8*)&V3$5 + 8ll) );
      label$9603:;
     }
     int64 OX$5;
     OX$5 = -1ll;
     int64 OY$5;
     OY$5 = -1ll;
     int64 OB$5;
     OB$5 = -1ll;
     int64 MX$5;
     __builtin_memset( &MX$5, 0, 8ll );
     int64 MY$5;
     __builtin_memset( &MY$5, 0, 8ll );
     int64 MB$5;
     __builtin_memset( &MB$5, 0, 8ll );
     int64 FRAMES$5;
     __builtin_memset( &FRAMES$5, 0, 8ll );
     int64 FPS$5;
     __builtin_memset( &FPS$5, 0, 8ll );
     double TRUNTIME$5;
     __builtin_memset( &TRUNTIME$5, 0, 8ll );
     double TSTART$5;
     double vr$6802 = fb_Timer( );
     TSTART$5 = vr$6802;
     double TNOW$5;
     __builtin_memset( &TNOW$5, 0, 8ll );
     double TLAST$5;
     TLAST$5 = TSTART$5;
     label$9604:;
     FBSTRING* vr$6804 = fb_Inkey( );
     int32 vr$6805 = fb_StrCompare( (void*)vr$6804, -1ll, (void*)"", 1ll );
     if( (int64)vr$6805 != 0ll ) goto label$9605;
     {
      double vr$6807 = fb_Timer( );
      TNOW$5 = vr$6807;
      TRUNTIME$5 = TNOW$5 - TSTART$5;
      if( (int64)ITIME$5 <= -1ll ) goto label$9607;
      {
       (GLUNIFORM1F$)( ITIME$5, (float)TRUNTIME$5 );
      }
      goto label$9606;
      label$9607:;
      if( (int64)IGLOBALTIME$5 <= -1ll ) goto label$9608;
      {
       (GLUNIFORM1F$)( IGLOBALTIME$5, (float)TRUNTIME$5 );
      }
      label$9608:;
      label$9606:;
      if( (int64)IFRAME$5 <= -1ll ) goto label$9610;
      {
       (GLUNIFORM1F$)( IFRAME$5, (float)FRAMES$5 );
       label$9610:;
      }
      if( (int64)IMOUSE$5 <= -1ll ) goto label$9612;
      {
       int64 TMP$3231$7;
       int64 TMP$3232$7;
       TMP$3232$7 = 0ll;
       TMP$3231$7 = 0ll;
       int32 vr$6821 = fb_GetMouse64( (int64*)&MX$5, (int64*)&MY$5, &TMP$3231$7, (int64*)&MB$5, &TMP$3232$7 );
       if( (int64)vr$6821 != 0ll ) goto label$9614;
       {
        int64 TMP$3233$8;
        int64 TMP$3234$8;
        if( OX$5 != MX$5 ) goto label$9615;
        TMP$3233$8 = (int64)-(OY$5 != MY$5);
        goto label$12484;
        label$9615:;
        TMP$3233$8 = -1ll;
        label$12484:;
        if( TMP$3233$8 != 0ll ) goto label$9616;
        TMP$3234$8 = (int64)-(OB$5 != MB$5);
        goto label$12485;
        label$9616:;
        TMP$3234$8 = -1ll;
        label$12485:;
        if( TMP$3234$8 == 0ll ) goto label$9618;
        {
         (GLUNIFORM4F$)( IMOUSE$5, (float)MX$5, (float)(SCR_H$ - (uint64)MY$5), (float)MB$5, 0x1.p+0f );
         OX$5 = MX$5;
         OY$5 = MY$5;
         OB$5 = MB$5;
        }
        label$9618:;
        label$9617:;
       }
       label$9614:;
       label$9613:;
      }
      label$9612:;
      label$9611:;
      glRectf( -0x1.p+0f, -0x1.p+0f, 0x1.p+0f, 0x1.p+0f );
      fb_GfxFlip( -1, -1 );
      FRAMES$5 = FRAMES$5 + 1ll;
      if( (FRAMES$5 % 60ll) != 0ll ) goto label$9620;
      {
       FBSTRING TMP$3236$7;
       FBSTRING TMP$3237$7;
       double vr$6831 = fb_Timer( );
       TNOW$5 = vr$6831;
       FPS$5 = ((int64)__builtin_nearbyint( 0x1.Ep+5 / (TNOW$5 - TLAST$5) ));
       TLAST$5 = TNOW$5;
       FBSTRING* vr$6835 = fb_LongintToStr( FPS$5 );
       __builtin_memset( &TMP$3236$7, 0, 24ll );
       FBSTRING* vr$6838 = fb_StrConcat( &TMP$3236$7, (void*)&FILENAME$, -1ll, (void*)" fps: ", 7ll );
       __builtin_memset( &TMP$3237$7, 0, 24ll );
       FBSTRING* vr$6841 = fb_StrConcat( &TMP$3237$7, (void*)vr$6838, -1ll, (void*)vr$6835, -1ll );
       fb_GfxDrawString( (void*)0ull, 0x0p+0f, 0x0p+0f, -2147483644, (FBSTRING*)vr$6841, 0u, (void*)0ull, 0, (void*)0ull, (void*)0ull, (void*)0ull );
      }
      label$9620:;
      label$9619:;
     }
     goto label$9604;
     label$9605:;
     fb_StrAssign( (void*)&STRCODE$, -1ll, (void*)"", 1ll, 0 );
     fb_GfxScreenRes( 1920, 1080, 32, 7, 64, 0 );
     fb_Cls( -65536 );
     {
      OFFSET$ = 0x0p+0;
      label$9624:;
      {
       _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( SYS_OFFSET$ + 0x1.2Bp+8 )) << (3ll & 63ll))) + OFFSET$, 0x1.p+5 );
      }
      label$9622:;
      OFFSET$ = OFFSET$ + 0x1.p+0;
      label$9621:;
      if( OFFSET$ <= 0x1.p+10 ) goto label$9624;
      label$9623:;
     }
     _ZN9SHADERTOYD1Ev( &SHADER$5 );
    }
    goto label$9561;
    label$9625:;
    {
     FBSTRING* vr$6848 = fb_StrAllocTempDescZEx( (uint8*)"tmp.pov", 7ll );
     fb_FileOpen( (FBSTRING*)vr$6848, 3u, 0u, 0u, 1, 0 );
     FBSTRING* vr$6849 = fb_StrAllocTempDescZEx( (uint8*)"// Start of file", 16ll );
     fb_PrintString( 1, (FBSTRING*)vr$6849, 1 );
    }
    goto label$9561;
    label$9626:;
    {
     FBSTRING* vr$6850 = fb_StrAllocTempDescZEx( (uint8*)"// End of file", 14ll );
     fb_PrintString( 1, (FBSTRING*)vr$6850, 1 );
     fb_FileClose( 1 );
    }
    goto label$9561;
    label$9627:;
    {
     FBSTRING TMP$3245$5;
     FBSTRING TMP$3246$5;
     FBSTRING TMP$3249$5;
     FBSTRING TMP$3250$5;
     FBSTRING* vr$6851 = fb_StrAllocTempDescZEx( (uint8*)"povray -d -H600 -W800 tmp.pov", 29ll );
     fb_Shell( (FBSTRING*)vr$6851 );
     FBSTRING* vr$6852 = fb_StrAllocTempDescZEx( (uint8*)"convert tmp.png -w --o tmp.bmp", 30ll );
     fb_Shell( (FBSTRING*)vr$6852 );
     FBSTRING* vr$6853 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394952ll) );
     __builtin_memset( &TMP$3245$5, 0, 24ll );
     FBSTRING* vr$6856 = fb_StrConcat( &TMP$3245$5, (void*)"cp tmp.bmp ./vram/", 19ll, (void*)vr$6853, -1ll );
     __builtin_memset( &TMP$3246$5, 0, 24ll );
     FBSTRING* vr$6859 = fb_StrConcat( &TMP$3246$5, (void*)vr$6856, -1ll, (void*)".bmp", 5ll );
     fb_Shell( (FBSTRING*)vr$6859 );
     FBSTRING* vr$6860 = fb_StrAllocTempDescZEx( (uint8*)"rm tmp.pov tmp.png", 18ll );
     fb_Shell( (FBSTRING*)vr$6860 );
     fb_Cls( -65536 );
     FBSTRING* vr$6861 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394952ll) );
     __builtin_memset( &TMP$3249$5, 0, 24ll );
     FBSTRING* vr$6864 = fb_StrConcat( &TMP$3249$5, (void*)"./vram/", 8ll, (void*)vr$6861, -1ll );
     __builtin_memset( &TMP$3250$5, 0, 24ll );
     FBSTRING* vr$6867 = fb_StrConcat( &TMP$3250$5, (void*)vr$6864, -1ll, (void*)".bmp", 5ll );
     fb_GfxBload( (FBSTRING*)vr$6867, FGIMAGE$, (void*)0ull );
     fb_GfxPut( FGIMAGE$, 0x0p+0f, 0x0p+0f, (void*)_RENDER$, -65536, -65536, -65536, -65536, 0, 1, (void*)&fb_hPutPSet, -1, (void*)0ull, (void*)0ull );
    }
    goto label$9561;
    label$9628:;
    {
     *(double*)((int64)(double*)MEM64$ + 394952ll) = V$1;
    }
    goto label$9561;
    label$9629:;
    {
     {
      uint8 FRAME$6;
      FRAME$6 = (uint8)((int32)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394952ll) ));
      uint8 TMP$3252$6;
      TMP$3252$6 = (uint8)((int32)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394960ll) ));
      goto label$9630;
      label$9633:;
      {
       FBSTRING TMP$3254$7;
       FBSTRING TMP$3255$7;
       FBSTRING* vr$6871 = fb_UIntToStr( (uint32)FRAME$6 );
       __builtin_memset( &TMP$3254$7, 0, 24ll );
       FBSTRING* vr$6874 = fb_StrConcat( &TMP$3254$7, (void*)".\x5Cvram\x5C", 8ll, (void*)vr$6871, -1ll );
       __builtin_memset( &TMP$3255$7, 0, 24ll );
       FBSTRING* vr$6877 = fb_StrConcat( &TMP$3255$7, (void*)vr$6874, -1ll, (void*)".bmp", 5ll );
       fb_GfxBload( (FBSTRING*)vr$6877, _RENDER$, (void*)0ull );
       fb_SleepEx( 10, 1 );
       fb_GfxPut( FGIMAGE$, 0x0p+0f, 0x0p+0f, (void*)_RENDER$, -65536, -65536, -65536, -65536, 0, 1, (void*)&fb_hPutPSet, -1, (void*)0ull, (void*)0ull );
      }
      label$9631:;
      FRAME$6 = (uint8)((int64)FRAME$6 + 1ll);
      label$9630:;
      if( (int64)FRAME$6 <= (int64)TMP$3252$6 ) goto label$9633;
      label$9632:;
     }
    }
    goto label$9561;
    label$9634:;
    {
     {
      uint64 TMP$3257$6;
      TMP$3257$6 = ((uint64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394968ll) ));
      goto label$9636;
      label$9637:;
      {
       FBSTRING* vr$6884 = fb_StrAllocTempDescZEx( (uint8*)"a", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$6884, 0 );
      }
      goto label$9635;
      label$9638:;
      {
       FBSTRING* vr$6885 = fb_StrAllocTempDescZEx( (uint8*)"aa_level", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$6885, 0 );
      }
      goto label$9635;
      label$9639:;
      {
       FBSTRING* vr$6886 = fb_StrAllocTempDescZEx( (uint8*)"aastep", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$6886, 0 );
      }
      goto label$9635;
      label$9640:;
      {
       FBSTRING* vr$6887 = fb_StrAllocTempDescZEx( (uint8*)"aa_threshold", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$6887, 0 );
      }
      goto label$9635;
      label$9641:;
      {
       FBSTRING* vr$6888 = fb_StrAllocTempDescZEx( (uint8*)"abs", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$6888, 0 );
      }
      goto label$9635;
      label$9642:;
      {
       FBSTRING* vr$6889 = fb_StrAllocTempDescZEx( (uint8*)"absolute", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$6889, 0 );
      }
      goto label$9635;
      label$9643:;
      {
       FBSTRING* vr$6890 = fb_StrAllocTempDescZEx( (uint8*)"absorption", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$6890, 0 );
      }
      goto label$9635;
      label$9644:;
      {
       FBSTRING* vr$6891 = fb_StrAllocTempDescZEx( (uint8*)"abstract", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$6891, 0 );
      }
      goto label$9635;
      label$9645:;
      {
       FBSTRING* vr$6892 = fb_StrAllocTempDescZEx( (uint8*)"accept", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$6892, 0 );
      }
      goto label$9635;
      label$9646:;
      {
       FBSTRING* vr$6893 = fb_StrAllocTempDescZEx( (uint8*)"access", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$6893, 0 );
      }
      goto label$9635;
      label$9647:;
      {
       FBSTRING* vr$6894 = fb_StrAllocTempDescZEx( (uint8*)"accuracy", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$6894, 0 );
      }
      goto label$9635;
      label$9648:;
      {
       FBSTRING* vr$6895 = fb_StrAllocTempDescZEx( (uint8*)"acos", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$6895, 0 );
      }
      goto label$9635;
      label$9649:;
      {
       FBSTRING* vr$6896 = fb_StrAllocTempDescZEx( (uint8*)"acosh", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$6896, 0 );
      }
      goto label$9635;
      label$9650:;
      {
       FBSTRING* vr$6897 = fb_StrAllocTempDescZEx( (uint8*)"active", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$6897, 0 );
      }
      goto label$9635;
      label$9651:;
      {
       FBSTRING* vr$6898 = fb_StrAllocTempDescZEx( (uint8*)"adaptive", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$6898, 0 );
      }
      goto label$9635;
      label$9652:;
      {
       FBSTRING* vr$6899 = fb_StrAllocTempDescZEx( (uint8*)"adc_bailout", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$6899, 0 );
      }
      goto label$9635;
      label$9653:;
      {
       FBSTRING* vr$6900 = fb_StrAllocTempDescZEx( (uint8*)"add", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$6900, 0 );
      }
      goto label$9635;
      label$9654:;
      {
       FBSTRING* vr$6901 = fb_StrAllocTempDescZEx( (uint8*)"address", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$6901, 0 );
      }
      goto label$9635;
      label$9655:;
      {
       FBSTRING* vr$6902 = fb_StrAllocTempDescZEx( (uint8*)"advancing", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$6902, 0 );
      }
      goto label$9635;
      label$9656:;
      {
       FBSTRING* vr$6903 = fb_StrAllocTempDescZEx( (uint8*)"after", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$6903, 0 );
      }
      goto label$9635;
      label$9657:;
      {
       FBSTRING* vr$6904 = fb_StrAllocTempDescZEx( (uint8*)"agate", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$6904, 0 );
      }
      goto label$9635;
      label$9658:;
      {
       FBSTRING* vr$6905 = fb_StrAllocTempDescZEx( (uint8*)"agate_turb", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$6905, 0 );
      }
      goto label$9635;
      label$9659:;
      {
       FBSTRING* vr$6906 = fb_StrAllocTempDescZEx( (uint8*)"alias", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$6906, 0 );
      }
      goto label$9635;
      label$9660:;
      {
       FBSTRING* vr$6907 = fb_StrAllocTempDescZEx( (uint8*)"all", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$6907, 0 );
      }
      goto label$9635;
      label$9661:;
      {
       FBSTRING* vr$6908 = fb_StrAllocTempDescZEx( (uint8*)"all_intersections", 17ll );
       fb_PrintString( 1, (FBSTRING*)vr$6908, 0 );
      }
      goto label$9635;
      label$9662:;
      {
       FBSTRING* vr$6909 = fb_StrAllocTempDescZEx( (uint8*)"alpha", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$6909, 0 );
      }
      goto label$9635;
      label$9663:;
      {
       FBSTRING* vr$6910 = fb_StrAllocTempDescZEx( (uint8*)"alphabet", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$6910, 0 );
      }
      goto label$9635;
      label$9664:;
      {
       FBSTRING* vr$6911 = fb_StrAllocTempDescZEx( (uint8*)"alphabetic", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$6911, 0 );
      }
      goto label$9635;
      label$9665:;
      {
       FBSTRING* vr$6912 = fb_StrAllocTempDescZEx( (uint8*)"alphabetic-lower", 16ll );
       fb_PrintString( 1, (FBSTRING*)vr$6912, 0 );
      }
      goto label$9635;
      label$9666:;
      {
       FBSTRING* vr$6913 = fb_StrAllocTempDescZEx( (uint8*)"alphabetic-upper", 16ll );
       fb_PrintString( 1, (FBSTRING*)vr$6913, 0 );
      }
      goto label$9635;
      label$9667:;
      {
       FBSTRING* vr$6914 = fb_StrAllocTempDescZEx( (uint8*)"alphanumeric", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$6914, 0 );
      }
      goto label$9635;
      label$9668:;
      {
       FBSTRING* vr$6915 = fb_StrAllocTempDescZEx( (uint8*)"alphanumeric-edited", 19ll );
       fb_PrintString( 1, (FBSTRING*)vr$6915, 0 );
      }
      goto label$9635;
      label$9669:;
      {
       FBSTRING* vr$6916 = fb_StrAllocTempDescZEx( (uint8*)"also", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$6916, 0 );
      }
      goto label$9635;
      label$9670:;
      {
       FBSTRING* vr$6917 = fb_StrAllocTempDescZEx( (uint8*)"alter", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$6917, 0 );
      }
      goto label$9635;
      label$9671:;
      {
       FBSTRING* vr$6918 = fb_StrAllocTempDescZEx( (uint8*)"alternate", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$6918, 0 );
      }
      goto label$9635;
      label$9672:;
      {
       FBSTRING* vr$6919 = fb_StrAllocTempDescZEx( (uint8*)"altitude", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$6919, 0 );
      }
      goto label$9635;
      label$9673:;
      {
       FBSTRING* vr$6920 = fb_StrAllocTempDescZEx( (uint8*)"always_sample", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$6920, 0 );
      }
      goto label$9635;
      label$9674:;
      {
       FBSTRING* vr$6921 = fb_StrAllocTempDescZEx( (uint8*)"ambient", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$6921, 0 );
      }
      goto label$9635;
      label$9675:;
      {
       FBSTRING* vr$6922 = fb_StrAllocTempDescZEx( (uint8*)"ambient_light", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$6922, 0 );
      }
      goto label$9635;
      label$9676:;
      {
       FBSTRING* vr$6923 = fb_StrAllocTempDescZEx( (uint8*)"and", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$6923, 0 );
      }
      goto label$9635;
      label$9677:;
      {
       FBSTRING* vr$6924 = fb_StrAllocTempDescZEx( (uint8*)"and_bits", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$6924, 0 );
      }
      goto label$9635;
      label$9678:;
      {
       FBSTRING* vr$6925 = fb_StrAllocTempDescZEx( (uint8*)"angle", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$6925, 0 );
      }
      goto label$9635;
      label$9679:;
      {
       FBSTRING* vr$6926 = fb_StrAllocTempDescZEx( (uint8*)"any", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$6926, 0 );
      }
      goto label$9635;
      label$9680:;
      {
       FBSTRING* vr$6927 = fb_StrAllocTempDescZEx( (uint8*)"aperture", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$6927, 0 );
      }
      goto label$9635;
      label$9681:;
      {
       FBSTRING* vr$6928 = fb_StrAllocTempDescZEx( (uint8*)"append", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$6928, 0 );
      }
      goto label$9635;
      label$9682:;
      {
       FBSTRING* vr$6929 = fb_StrAllocTempDescZEx( (uint8*)"apply", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$6929, 0 );
      }
      goto label$9635;
      label$9683:;
      {
       FBSTRING* vr$6930 = fb_StrAllocTempDescZEx( (uint8*)"arc_angle", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$6930, 0 );
      }
      goto label$9635;
      label$9684:;
      {
       FBSTRING* vr$6931 = fb_StrAllocTempDescZEx( (uint8*)"are", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$6931, 0 );
      }
      goto label$9635;
      label$9685:;
      {
       FBSTRING* vr$6932 = fb_StrAllocTempDescZEx( (uint8*)"area", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$6932, 0 );
      }
      goto label$9635;
      label$9686:;
      {
       FBSTRING* vr$6933 = fb_StrAllocTempDescZEx( (uint8*)"area_light", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$6933, 0 );
      }
      goto label$9635;
      label$9687:;
      {
       FBSTRING* vr$6934 = fb_StrAllocTempDescZEx( (uint8*)"areas", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$6934, 0 );
      }
      goto label$9635;
      label$9688:;
      {
       FBSTRING* vr$6935 = fb_StrAllocTempDescZEx( (uint8*)"array", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$6935, 0 );
      }
      goto label$9635;
      label$9689:;
      {
       FBSTRING* vr$6936 = fb_StrAllocTempDescZEx( (uint8*)"arraylength", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$6936, 0 );
      }
      goto label$9635;
      label$9690:;
      {
       FBSTRING* vr$6937 = fb_StrAllocTempDescZEx( (uint8*)"as", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$6937, 0 );
      }
      goto label$9635;
      label$9691:;
      {
       FBSTRING* vr$6938 = fb_StrAllocTempDescZEx( (uint8*)"asc", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$6938, 0 );
      }
      goto label$9635;
      label$9692:;
      {
       FBSTRING* vr$6939 = fb_StrAllocTempDescZEx( (uint8*)"ascending", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$6939, 0 );
      }
      goto label$9635;
      label$9693:;
      {
       FBSTRING* vr$6940 = fb_StrAllocTempDescZEx( (uint8*)"ascii", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$6940, 0 );
      }
      goto label$9635;
      label$9694:;
      {
       FBSTRING* vr$6941 = fb_StrAllocTempDescZEx( (uint8*)"asin", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$6941, 0 );
      }
      goto label$9635;
      label$9695:;
      {
       FBSTRING* vr$6942 = fb_StrAllocTempDescZEx( (uint8*)"asinh", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$6942, 0 );
      }
      goto label$9635;
      label$9696:;
      {
       FBSTRING* vr$6943 = fb_StrAllocTempDescZEx( (uint8*)"asm", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$6943, 0 );
      }
      goto label$9635;
      label$9697:;
      {
       FBSTRING* vr$6944 = fb_StrAllocTempDescZEx( (uint8*)"assembler", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$6944, 0 );
      }
      goto label$9635;
      label$9698:;
      {
       FBSTRING* vr$6945 = fb_StrAllocTempDescZEx( (uint8*)"assert", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$6945, 0 );
      }
      goto label$9635;
      label$9699:;
      {
       FBSTRING* vr$6946 = fb_StrAllocTempDescZEx( (uint8*)"assign", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$6946, 0 );
      }
      goto label$9635;
      label$9700:;
      {
       FBSTRING* vr$6947 = fb_StrAllocTempDescZEx( (uint8*)"assumed_gamma", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$6947, 0 );
      }
      goto label$9635;
      label$9701:;
      {
       FBSTRING* vr$6948 = fb_StrAllocTempDescZEx( (uint8*)"async", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$6948, 0 );
      }
      goto label$9635;
      label$9702:;
      {
       FBSTRING* vr$6949 = fb_StrAllocTempDescZEx( (uint8*)"at", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$6949, 0 );
      }
      goto label$9635;
      label$9703:;
      {
       FBSTRING* vr$6950 = fb_StrAllocTempDescZEx( (uint8*)"atan", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$6950, 0 );
      }
      goto label$9635;
      label$9704:;
      {
       FBSTRING* vr$6951 = fb_StrAllocTempDescZEx( (uint8*)"atan2", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$6951, 0 );
      }
      goto label$9635;
      label$9705:;
      {
       FBSTRING* vr$6952 = fb_StrAllocTempDescZEx( (uint8*)"atanh", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$6952, 0 );
      }
      goto label$9635;
      label$9706:;
      {
       FBSTRING* vr$6953 = fb_StrAllocTempDescZEx( (uint8*)"atn", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$6953, 0 );
      }
      goto label$9635;
      label$9707:;
      {
       FBSTRING* vr$6954 = fb_StrAllocTempDescZEx( (uint8*)"attribute", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$6954, 0 );
      }
      goto label$9635;
      label$9708:;
      {
       FBSTRING* vr$6955 = fb_StrAllocTempDescZEx( (uint8*)"author", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$6955, 0 );
      }
      goto label$9635;
      label$9709:;
      {
       FBSTRING* vr$6956 = fb_StrAllocTempDescZEx( (uint8*)"auto", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$6956, 0 );
      }
      goto label$9635;
      label$9710:;
      {
       FBSTRING* vr$6957 = fb_StrAllocTempDescZEx( (uint8*)"automatic", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$6957, 0 );
      }
      goto label$9635;
      label$9711:;
      {
       FBSTRING* vr$6958 = fb_StrAllocTempDescZEx( (uint8*)"autostop", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$6958, 0 );
      }
      goto label$9635;
      label$9712:;
      {
       FBSTRING* vr$6959 = fb_StrAllocTempDescZEx( (uint8*)"average", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$6959, 0 );
      }
      goto label$9635;
      label$9713:;
      {
       FBSTRING* vr$6960 = fb_StrAllocTempDescZEx( (uint8*)"avg", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$6960, 0 );
      }
      goto label$9635;
      label$9714:;
      {
       FBSTRING* vr$6961 = fb_StrAllocTempDescZEx( (uint8*)"await", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$6961, 0 );
      }
      goto label$9635;
      label$9715:;
      {
       FBSTRING* vr$6962 = fb_StrAllocTempDescZEx( (uint8*)"b", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$6962, 0 );
      }
      goto label$9635;
      label$9716:;
      {
       FBSTRING* vr$6963 = fb_StrAllocTempDescZEx( (uint8*)"backfacing", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$6963, 0 );
      }
      goto label$9635;
      label$9717:;
      {
       FBSTRING* vr$6964 = fb_StrAllocTempDescZEx( (uint8*)"background", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$6964, 0 );
      }
      goto label$9635;
      label$9718:;
      {
       FBSTRING* vr$6965 = fb_StrAllocTempDescZEx( (uint8*)"backspace", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$6965, 0 );
      }
      goto label$9635;
      label$9719:;
      {
       FBSTRING* vr$6966 = fb_StrAllocTempDescZEx( (uint8*)"basis", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$6966, 0 );
      }
      goto label$9635;
      label$9720:;
      {
       FBSTRING* vr$6967 = fb_StrAllocTempDescZEx( (uint8*)"beep", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$6967, 0 );
      }
      goto label$9635;
      label$9721:;
      {
       FBSTRING* vr$6968 = fb_StrAllocTempDescZEx( (uint8*)"before", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$6968, 0 );
      }
      goto label$9635;
      label$9722:;
      {
       FBSTRING* vr$6969 = fb_StrAllocTempDescZEx( (uint8*)"begin", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$6969, 0 );
      }
      goto label$9635;
      label$9723:;
      {
       FBSTRING* vr$6970 = fb_StrAllocTempDescZEx( (uint8*)"beginning", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$6970, 0 );
      }
      goto label$9635;
      label$9724:;
      {
       FBSTRING* vr$6971 = fb_StrAllocTempDescZEx( (uint8*)"between", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$6971, 0 );
      }
      goto label$9635;
      label$9725:;
      {
       FBSTRING* vr$6972 = fb_StrAllocTempDescZEx( (uint8*)"bezier_spline", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$6972, 0 );
      }
      goto label$9635;
      label$9726:;
      {
       FBSTRING* vr$6973 = fb_StrAllocTempDescZEx( (uint8*)"bicubic_patch", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$6973, 0 );
      }
      goto label$9635;
      label$9727:;
      {
       FBSTRING* vr$6974 = fb_StrAllocTempDescZEx( (uint8*)"binary", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$6974, 0 );
      }
      goto label$9635;
      label$9728:;
      {
       FBSTRING* vr$6975 = fb_StrAllocTempDescZEx( (uint8*)"bind", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$6975, 0 );
      }
      goto label$9635;
      label$9729:;
      {
       FBSTRING* vr$6976 = fb_StrAllocTempDescZEx( (uint8*)"blackbody", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$6976, 0 );
      }
      goto label$9635;
      label$9730:;
      {
       FBSTRING* vr$6977 = fb_StrAllocTempDescZEx( (uint8*)"black_hole", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$6977, 0 );
      }
      goto label$9635;
      label$9731:;
      {
       FBSTRING* vr$6978 = fb_StrAllocTempDescZEx( (uint8*)"blank", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$6978, 0 );
      }
      goto label$9635;
      label$9732:;
      {
       FBSTRING* vr$6979 = fb_StrAllocTempDescZEx( (uint8*)"bload", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$6979, 0 );
      }
      goto label$9635;
      label$9733:;
      {
       FBSTRING* vr$6980 = fb_StrAllocTempDescZEx( (uint8*)"blob", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$6980, 0 );
      }
      goto label$9635;
      label$9734:;
      {
       FBSTRING* vr$6981 = fb_StrAllocTempDescZEx( (uint8*)"block", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$6981, 0 );
      }
      goto label$9635;
      label$9735:;
      {
       FBSTRING* vr$6982 = fb_StrAllocTempDescZEx( (uint8*)"blue", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$6982, 0 );
      }
      goto label$9635;
      label$9736:;
      {
       FBSTRING* vr$6983 = fb_StrAllocTempDescZEx( (uint8*)"blur_samples", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$6983, 0 );
      }
      goto label$9635;
      label$9737:;
      {
       FBSTRING* vr$6984 = fb_StrAllocTempDescZEx( (uint8*)"bool", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$6984, 0 );
      }
      goto label$9635;
      label$9738:;
      {
       FBSTRING* vr$6985 = fb_StrAllocTempDescZEx( (uint8*)"both", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$6985, 0 );
      }
      goto label$9635;
      label$9739:;
      {
       FBSTRING* vr$6986 = fb_StrAllocTempDescZEx( (uint8*)"bottom", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$6986, 0 );
      }
      goto label$9635;
      label$9740:;
      {
       FBSTRING* vr$6987 = fb_StrAllocTempDescZEx( (uint8*)"bounded_by", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$6987, 0 );
      }
      goto label$9635;
      label$9741:;
      {
       FBSTRING* vr$6988 = fb_StrAllocTempDescZEx( (uint8*)"box", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$6988, 0 );
      }
      goto label$9635;
      label$9742:;
      {
       FBSTRING* vr$6989 = fb_StrAllocTempDescZEx( (uint8*)"boxed", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$6989, 0 );
      }
      goto label$9635;
      label$9743:;
      {
       FBSTRING* vr$6990 = fb_StrAllocTempDescZEx( (uint8*)"bozo", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$6990, 0 );
      }
      goto label$9635;
      label$9744:;
      {
       FBSTRING* vr$6991 = fb_StrAllocTempDescZEx( (uint8*)"break", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$6991, 0 );
      }
      goto label$9635;
      label$9745:;
      {
       FBSTRING* vr$6992 = fb_StrAllocTempDescZEx( (uint8*)"brick", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$6992, 0 );
      }
      goto label$9635;
      label$9746:;
      {
       FBSTRING* vr$6993 = fb_StrAllocTempDescZEx( (uint8*)"brick_size", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$6993, 0 );
      }
      goto label$9635;
      label$9747:;
      {
       FBSTRING* vr$6994 = fb_StrAllocTempDescZEx( (uint8*)"brightness", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$6994, 0 );
      }
      goto label$9635;
      label$9748:;
      {
       FBSTRING* vr$6995 = fb_StrAllocTempDescZEx( (uint8*)"brilliance", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$6995, 0 );
      }
      goto label$9635;
      label$9749:;
      {
       FBSTRING* vr$6996 = fb_StrAllocTempDescZEx( (uint8*)"bsave", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$6996, 0 );
      }
      goto label$9635;
      label$9750:;
      {
       FBSTRING* vr$6997 = fb_StrAllocTempDescZEx( (uint8*)"b_spline", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$6997, 0 );
      }
      goto label$9635;
      label$9751:;
      {
       FBSTRING* vr$6998 = fb_StrAllocTempDescZEx( (uint8*)"bump", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$6998, 0 );
      }
      goto label$9635;
      label$9752:;
      {
       FBSTRING* vr$6999 = fb_StrAllocTempDescZEx( (uint8*)"bump_map", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$6999, 0 );
      }
      goto label$9635;
      label$9753:;
      {
       FBSTRING* vr$7000 = fb_StrAllocTempDescZEx( (uint8*)"bumps", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7000, 0 );
      }
      goto label$9635;
      label$9754:;
      {
       FBSTRING* vr$7001 = fb_StrAllocTempDescZEx( (uint8*)"bump_size", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7001, 0 );
      }
      goto label$9635;
      label$9755:;
      {
       FBSTRING* vr$7002 = fb_StrAllocTempDescZEx( (uint8*)"bvec2", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7002, 0 );
      }
      goto label$9635;
      label$9756:;
      {
       FBSTRING* vr$7003 = fb_StrAllocTempDescZEx( (uint8*)"bvec3", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7003, 0 );
      }
      goto label$9635;
      label$9757:;
      {
       FBSTRING* vr$7004 = fb_StrAllocTempDescZEx( (uint8*)"bvec4", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7004, 0 );
      }
      goto label$9635;
      label$9758:;
      {
       FBSTRING* vr$7005 = fb_StrAllocTempDescZEx( (uint8*)"by", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7005, 0 );
      }
      goto label$9635;
      label$9759:;
      {
       FBSTRING* vr$7006 = fb_StrAllocTempDescZEx( (uint8*)"byte", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7006, 0 );
      }
      goto label$9635;
      label$9760:;
      {
       FBSTRING* vr$7007 = fb_StrAllocTempDescZEx( (uint8*)"c", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$7007, 0 );
      }
      goto label$9635;
      label$9761:;
      {
       FBSTRING* vr$7008 = fb_StrAllocTempDescZEx( (uint8*)"cache", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7008, 0 );
      }
      goto label$9635;
      label$9762:;
      {
       FBSTRING* vr$7009 = fb_StrAllocTempDescZEx( (uint8*)"calculatenormal", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$7009, 0 );
      }
      goto label$9635;
      label$9763:;
      {
       FBSTRING* vr$7010 = fb_StrAllocTempDescZEx( (uint8*)"call", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7010, 0 );
      }
      goto label$9635;
      label$9764:;
      {
       FBSTRING* vr$7011 = fb_StrAllocTempDescZEx( (uint8*)"calls", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7011, 0 );
      }
      goto label$9635;
      label$9765:;
      {
       FBSTRING* vr$7012 = fb_StrAllocTempDescZEx( (uint8*)"camera", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7012, 0 );
      }
      goto label$9635;
      label$9766:;
      {
       FBSTRING* vr$7013 = fb_StrAllocTempDescZEx( (uint8*)"cancel", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7013, 0 );
      }
      goto label$9635;
      label$9767:;
      {
       FBSTRING* vr$7014 = fb_StrAllocTempDescZEx( (uint8*)"cardinality", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7014, 0 );
      }
      goto label$9635;
      label$9768:;
      {
       FBSTRING* vr$7015 = fb_StrAllocTempDescZEx( (uint8*)"case", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7015, 0 );
      }
      goto label$9635;
      label$9769:;
      {
       FBSTRING* vr$7016 = fb_StrAllocTempDescZEx( (uint8*)"cast", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7016, 0 );
      }
      goto label$9635;
      label$9770:;
      {
       FBSTRING* vr$7017 = fb_StrAllocTempDescZEx( (uint8*)"castnamespace", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$7017, 0 );
      }
      goto label$9635;
      label$9771:;
      {
       FBSTRING* vr$7018 = fb_StrAllocTempDescZEx( (uint8*)"caustics", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7018, 0 );
      }
      goto label$9635;
      label$9772:;
      {
       FBSTRING* vr$7019 = fb_StrAllocTempDescZEx( (uint8*)"cbl", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7019, 0 );
      }
      goto label$9635;
      label$9773:;
      {
       FBSTRING* vr$7020 = fb_StrAllocTempDescZEx( (uint8*)"cbrt", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7020, 0 );
      }
      goto label$9635;
      label$9774:;
      {
       FBSTRING* vr$7021 = fb_StrAllocTempDescZEx( (uint8*)"cd", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7021, 0 );
      }
      goto label$9635;
      label$9775:;
      {
       FBSTRING* vr$7022 = fb_StrAllocTempDescZEx( (uint8*)"cdbl", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7022, 0 );
      }
      goto label$9635;
      label$9776:;
      {
       FBSTRING* vr$7023 = fb_StrAllocTempDescZEx( (uint8*)"cdecl", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7023, 0 );
      }
      goto label$9635;
      label$9777:;
      {
       FBSTRING* vr$7024 = fb_StrAllocTempDescZEx( (uint8*)"ceil", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7024, 0 );
      }
      goto label$9635;
      label$9778:;
      {
       FBSTRING* vr$7025 = fb_StrAllocTempDescZEx( (uint8*)"cellnoise", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7025, 0 );
      }
      goto label$9635;
      label$9779:;
      {
       FBSTRING* vr$7026 = fb_StrAllocTempDescZEx( (uint8*)"cells", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7026, 0 );
      }
      goto label$9635;
      label$9780:;
      {
       FBSTRING* vr$7027 = fb_StrAllocTempDescZEx( (uint8*)"centroid", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7027, 0 );
      }
      goto label$9635;
      label$9781:;
      {
       FBSTRING* vr$7028 = fb_StrAllocTempDescZEx( (uint8*)"cf", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7028, 0 );
      }
      goto label$9635;
      label$9782:;
      {
       FBSTRING* vr$7029 = fb_StrAllocTempDescZEx( (uint8*)"ch", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7029, 0 );
      }
      goto label$9635;
      label$9783:;
      {
       FBSTRING* vr$7030 = fb_StrAllocTempDescZEx( (uint8*)"chain", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7030, 0 );
      }
      goto label$9635;
      label$9784:;
      {
       FBSTRING* vr$7031 = fb_StrAllocTempDescZEx( (uint8*)"char", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7031, 0 );
      }
      goto label$9635;
      label$9785:;
      {
       FBSTRING* vr$7032 = fb_StrAllocTempDescZEx( (uint8*)"character", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7032, 0 );
      }
      goto label$9635;
      label$9786:;
      {
       FBSTRING* vr$7033 = fb_StrAllocTempDescZEx( (uint8*)"character_length", 16ll );
       fb_PrintString( 1, (FBSTRING*)vr$7033, 0 );
      }
      goto label$9635;
      label$9787:;
      {
       FBSTRING* vr$7034 = fb_StrAllocTempDescZEx( (uint8*)"character_length_b", 18ll );
       fb_PrintString( 1, (FBSTRING*)vr$7034, 0 );
      }
      goto label$9635;
      label$9788:;
      {
       FBSTRING* vr$7035 = fb_StrAllocTempDescZEx( (uint8*)"character_length_mb", 19ll );
       fb_PrintString( 1, (FBSTRING*)vr$7035, 0 );
      }
      goto label$9635;
      label$9789:;
      {
       FBSTRING* vr$7036 = fb_StrAllocTempDescZEx( (uint8*)"characters", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7036, 0 );
      }
      goto label$9635;
      label$9790:;
      {
       FBSTRING* vr$7037 = fb_StrAllocTempDescZEx( (uint8*)"char_length", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7037, 0 );
      }
      goto label$9635;
      label$9791:;
      {
       FBSTRING* vr$7038 = fb_StrAllocTempDescZEx( (uint8*)"char_length_b", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$7038, 0 );
      }
      goto label$9635;
      label$9792:;
      {
       FBSTRING* vr$7039 = fb_StrAllocTempDescZEx( (uint8*)"char_length_mb", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$7039, 0 );
      }
      goto label$9635;
      label$9793:;
      {
       FBSTRING* vr$7040 = fb_StrAllocTempDescZEx( (uint8*)"charset", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7040, 0 );
      }
      goto label$9635;
      label$9794:;
      {
       FBSTRING* vr$7041 = fb_StrAllocTempDescZEx( (uint8*)"chdir", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7041, 0 );
      }
      goto label$9635;
      label$9795:;
      {
       FBSTRING* vr$7042 = fb_StrAllocTempDescZEx( (uint8*)"check", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7042, 0 );
      }
      goto label$9635;
      label$9796:;
      {
       FBSTRING* vr$7043 = fb_StrAllocTempDescZEx( (uint8*)"checker", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7043, 0 );
      }
      goto label$9635;
      label$9797:;
      {
       FBSTRING* vr$7044 = fb_StrAllocTempDescZEx( (uint8*)"chr", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7044, 0 );
      }
      goto label$9635;
      label$9798:;
      {
       FBSTRING* vr$7045 = fb_StrAllocTempDescZEx( (uint8*)"cint", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7045, 0 );
      }
      goto label$9635;
      label$9799:;
      {
       FBSTRING* vr$7046 = fb_StrAllocTempDescZEx( (uint8*)"circle", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7046, 0 );
      }
      goto label$9635;
      label$9800:;
      {
       FBSTRING* vr$7047 = fb_StrAllocTempDescZEx( (uint8*)"circular", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7047, 0 );
      }
      goto label$9635;
      label$9801:;
      {
       FBSTRING* vr$7048 = fb_StrAllocTempDescZEx( (uint8*)"clamp", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7048, 0 );
      }
      goto label$9635;
      label$9802:;
      {
       FBSTRING* vr$7049 = fb_StrAllocTempDescZEx( (uint8*)"class", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7049, 0 );
      }
      goto label$9635;
      label$9803:;
      {
       FBSTRING* vr$7050 = fb_StrAllocTempDescZEx( (uint8*)"class-id", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7050, 0 );
      }
      goto label$9635;
      label$9804:;
      {
       FBSTRING* vr$7051 = fb_StrAllocTempDescZEx( (uint8*)"clear", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7051, 0 );
      }
      goto label$9635;
      label$9805:;
      {
       FBSTRING* vr$7052 = fb_StrAllocTempDescZEx( (uint8*)"clipped_by", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7052, 0 );
      }
      goto label$9635;
      label$9806:;
      {
       FBSTRING* vr$7053 = fb_StrAllocTempDescZEx( (uint8*)"clock", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7053, 0 );
      }
      goto label$9635;
      label$9807:;
      {
       FBSTRING* vr$7054 = fb_StrAllocTempDescZEx( (uint8*)"clock_delta", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7054, 0 );
      }
      goto label$9635;
      label$9808:;
      {
       FBSTRING* vr$7055 = fb_StrAllocTempDescZEx( (uint8*)"clock_on", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7055, 0 );
      }
      goto label$9635;
      label$9809:;
      {
       FBSTRING* vr$7056 = fb_StrAllocTempDescZEx( (uint8*)"clock-units", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7056, 0 );
      }
      goto label$9635;
      label$9810:;
      {
       FBSTRING* vr$7057 = fb_StrAllocTempDescZEx( (uint8*)"close", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7057, 0 );
      }
      goto label$9635;
      label$9811:;
      {
       FBSTRING* vr$7058 = fb_StrAllocTempDescZEx( (uint8*)"closure", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7058, 0 );
      }
      goto label$9635;
      label$9812:;
      {
       FBSTRING* vr$7059 = fb_StrAllocTempDescZEx( (uint8*)"cls", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7059, 0 );
      }
      goto label$9635;
      label$9813:;
      {
       FBSTRING* vr$7060 = fb_StrAllocTempDescZEx( (uint8*)"cobol", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7060, 0 );
      }
      goto label$9635;
      label$9814:;
      {
       FBSTRING* vr$7061 = fb_StrAllocTempDescZEx( (uint8*)"code", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7061, 0 );
      }
      goto label$9635;
      label$9815:;
      {
       FBSTRING* vr$7062 = fb_StrAllocTempDescZEx( (uint8*)"code-set", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7062, 0 );
      }
      goto label$9635;
      label$9816:;
      {
       FBSTRING* vr$7063 = fb_StrAllocTempDescZEx( (uint8*)"collating", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7063, 0 );
      }
      goto label$9635;
      label$9817:;
      {
       FBSTRING* vr$7064 = fb_StrAllocTempDescZEx( (uint8*)"collect", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7064, 0 );
      }
      goto label$9635;
      label$9818:;
      {
       FBSTRING* vr$7065 = fb_StrAllocTempDescZEx( (uint8*)"color", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7065, 0 );
      }
      goto label$9635;
      label$9819:;
      {
       FBSTRING* vr$7066 = fb_StrAllocTempDescZEx( (uint8*)"color_map", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7066, 0 );
      }
      goto label$9635;
      label$9820:;
      {
       FBSTRING* vr$7067 = fb_StrAllocTempDescZEx( (uint8*)"color.w", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7067, 0 );
      }
      goto label$9635;
      label$9821:;
      {
       FBSTRING* vr$7068 = fb_StrAllocTempDescZEx( (uint8*)"colour", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7068, 0 );
      }
      goto label$9635;
      label$9822:;
      {
       FBSTRING* vr$7069 = fb_StrAllocTempDescZEx( (uint8*)"colour_map", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7069, 0 );
      }
      goto label$9635;
      label$9823:;
      {
       FBSTRING* vr$7070 = fb_StrAllocTempDescZEx( (uint8*)"column", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7070, 0 );
      }
      goto label$9635;
      label$9824:;
      {
       FBSTRING* vr$7071 = fb_StrAllocTempDescZEx( (uint8*)"com", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7071, 0 );
      }
      goto label$9635;
      label$9825:;
      {
       FBSTRING* vr$7072 = fb_StrAllocTempDescZEx( (uint8*)"comma", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7072, 0 );
      }
      goto label$9635;
      label$9826:;
      {
       FBSTRING* vr$7073 = fb_StrAllocTempDescZEx( (uint8*)"comment", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7073, 0 );
      }
      goto label$9635;
      label$9827:;
      {
       FBSTRING* vr$7074 = fb_StrAllocTempDescZEx( (uint8*)"commit", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7074, 0 );
      }
      goto label$9635;
      label$9828:;
      {
       FBSTRING* vr$7075 = fb_StrAllocTempDescZEx( (uint8*)"common", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7075, 0 );
      }
      goto label$9635;
      label$9829:;
      {
       FBSTRING* vr$7076 = fb_StrAllocTempDescZEx( (uint8*)"communication", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$7076, 0 );
      }
      goto label$9635;
      label$9830:;
      {
       FBSTRING* vr$7077 = fb_StrAllocTempDescZEx( (uint8*)"comp", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7077, 0 );
      }
      goto label$9635;
      label$9831:;
      {
       FBSTRING* vr$7078 = fb_StrAllocTempDescZEx( (uint8*)"comp-1", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7078, 0 );
      }
      goto label$9635;
      label$9832:;
      {
       FBSTRING* vr$7079 = fb_StrAllocTempDescZEx( (uint8*)"comp-2", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7079, 0 );
      }
      goto label$9635;
      label$9833:;
      {
       FBSTRING* vr$7080 = fb_StrAllocTempDescZEx( (uint8*)"comp-3", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7080, 0 );
      }
      goto label$9635;
      label$9834:;
      {
       FBSTRING* vr$7081 = fb_StrAllocTempDescZEx( (uint8*)"comp-4", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7081, 0 );
      }
      goto label$9635;
      label$9835:;
      {
       FBSTRING* vr$7082 = fb_StrAllocTempDescZEx( (uint8*)"comp-5", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7082, 0 );
      }
      goto label$9635;
      label$9836:;
      {
       FBSTRING* vr$7083 = fb_StrAllocTempDescZEx( (uint8*)"complex", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7083, 0 );
      }
      goto label$9635;
      label$9837:;
      {
       FBSTRING* vr$7084 = fb_StrAllocTempDescZEx( (uint8*)"component", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7084, 0 );
      }
      goto label$9635;
      label$9838:;
      {
       FBSTRING* vr$7085 = fb_StrAllocTempDescZEx( (uint8*)"composite", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7085, 0 );
      }
      goto label$9635;
      label$9839:;
      {
       FBSTRING* vr$7086 = fb_StrAllocTempDescZEx( (uint8*)"computational", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$7086, 0 );
      }
      goto label$9635;
      label$9840:;
      {
       FBSTRING* vr$7087 = fb_StrAllocTempDescZEx( (uint8*)"computational-1", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$7087, 0 );
      }
      goto label$9635;
      label$9841:;
      {
       FBSTRING* vr$7088 = fb_StrAllocTempDescZEx( (uint8*)"computational-2", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$7088, 0 );
      }
      goto label$9635;
      label$9842:;
      {
       FBSTRING* vr$7089 = fb_StrAllocTempDescZEx( (uint8*)"computational-3", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$7089, 0 );
      }
      goto label$9635;
      label$9843:;
      {
       FBSTRING* vr$7090 = fb_StrAllocTempDescZEx( (uint8*)"computational-4", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$7090, 0 );
      }
      goto label$9635;
      label$9844:;
      {
       FBSTRING* vr$7091 = fb_StrAllocTempDescZEx( (uint8*)"computational-5", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$7091, 0 );
      }
      goto label$9635;
      label$9845:;
      {
       FBSTRING* vr$7092 = fb_StrAllocTempDescZEx( (uint8*)"compute", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7092, 0 );
      }
      goto label$9635;
      label$9846:;
      {
       FBSTRING* vr$7093 = fb_StrAllocTempDescZEx( (uint8*)"com-reg", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7093, 0 );
      }
      goto label$9635;
      label$9847:;
      {
       FBSTRING* vr$7094 = fb_StrAllocTempDescZEx( (uint8*)"concat", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7094, 0 );
      }
      goto label$9635;
      label$9848:;
      {
       FBSTRING* vr$7095 = fb_StrAllocTempDescZEx( (uint8*)"concatenate", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7095, 0 );
      }
      goto label$9635;
      label$9849:;
      {
       FBSTRING* vr$7096 = fb_StrAllocTempDescZEx( (uint8*)"cond", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7096, 0 );
      }
      goto label$9635;
      label$9850:;
      {
       FBSTRING* vr$7097 = fb_StrAllocTempDescZEx( (uint8*)"cone", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7097, 0 );
      }
      goto label$9635;
      label$9851:;
      {
       FBSTRING* vr$7098 = fb_StrAllocTempDescZEx( (uint8*)"confidence", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7098, 0 );
      }
      goto label$9635;
      label$9852:;
      {
       FBSTRING* vr$7099 = fb_StrAllocTempDescZEx( (uint8*)"configuration", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$7099, 0 );
      }
      goto label$9635;
      label$9853:;
      {
       FBSTRING* vr$7100 = fb_StrAllocTempDescZEx( (uint8*)"conic_sweep", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7100, 0 );
      }
      goto label$9635;
      label$9854:;
      {
       FBSTRING* vr$7101 = fb_StrAllocTempDescZEx( (uint8*)"conserve_energy", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$7101, 0 );
      }
      goto label$9635;
      label$9855:;
      {
       FBSTRING* vr$7102 = fb_StrAllocTempDescZEx( (uint8*)"const", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7102, 0 );
      }
      goto label$9635;
      label$9856:;
      {
       FBSTRING* vr$7103 = fb_StrAllocTempDescZEx( (uint8*)"constref", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7103, 0 );
      }
      goto label$9635;
      label$9857:;
      {
       FBSTRING* vr$7104 = fb_StrAllocTempDescZEx( (uint8*)"constructor", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7104, 0 );
      }
      goto label$9635;
      label$9858:;
      {
       FBSTRING* vr$7105 = fb_StrAllocTempDescZEx( (uint8*)"cont", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7105, 0 );
      }
      goto label$9635;
      label$9859:;
      {
       FBSTRING* vr$7106 = fb_StrAllocTempDescZEx( (uint8*)"contained_by", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$7106, 0 );
      }
      goto label$9635;
      label$9860:;
      {
       FBSTRING* vr$7107 = fb_StrAllocTempDescZEx( (uint8*)"contains", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7107, 0 );
      }
      goto label$9635;
      label$9861:;
      {
       FBSTRING* vr$7108 = fb_StrAllocTempDescZEx( (uint8*)"content", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7108, 0 );
      }
      goto label$9635;
      label$9862:;
      {
       FBSTRING* vr$7109 = fb_StrAllocTempDescZEx( (uint8*)"continue", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7109, 0 );
      }
      goto label$9635;
      label$9863:;
      {
       FBSTRING* vr$7110 = fb_StrAllocTempDescZEx( (uint8*)"control", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7110, 0 );
      }
      goto label$9635;
      label$9864:;
      {
       FBSTRING* vr$7111 = fb_StrAllocTempDescZEx( (uint8*)"control0", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7111, 0 );
      }
      goto label$9635;
      label$9865:;
      {
       FBSTRING* vr$7112 = fb_StrAllocTempDescZEx( (uint8*)"control1", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7112, 0 );
      }
      goto label$9635;
      label$9866:;
      {
       FBSTRING* vr$7113 = fb_StrAllocTempDescZEx( (uint8*)"controls", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7113, 0 );
      }
      goto label$9635;
      label$9867:;
      {
       FBSTRING* vr$7114 = fb_StrAllocTempDescZEx( (uint8*)"converting", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7114, 0 );
      }
      goto label$9635;
      label$9868:;
      {
       FBSTRING* vr$7115 = fb_StrAllocTempDescZEx( (uint8*)"coords", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7115, 0 );
      }
      goto label$9635;
      label$9869:;
      {
       FBSTRING* vr$7116 = fb_StrAllocTempDescZEx( (uint8*)"corr", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7116, 0 );
      }
      goto label$9635;
      label$9870:;
      {
       FBSTRING* vr$7117 = fb_StrAllocTempDescZEx( (uint8*)"corresponding", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$7117, 0 );
      }
      goto label$9635;
      label$9871:;
      {
       FBSTRING* vr$7118 = fb_StrAllocTempDescZEx( (uint8*)"cos", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7118, 0 );
      }
      goto label$9635;
      label$9872:;
      {
       FBSTRING* vr$7119 = fb_StrAllocTempDescZEx( (uint8*)"cosh", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7119, 0 );
      }
      goto label$9635;
      label$9873:;
      {
       FBSTRING* vr$7120 = fb_StrAllocTempDescZEx( (uint8*)"count", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7120, 0 );
      }
      goto label$9635;
      label$9874:;
      {
       FBSTRING* vr$7121 = fb_StrAllocTempDescZEx( (uint8*)"cppdecl", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7121, 0 );
      }
      goto label$9635;
      label$9875:;
      {
       FBSTRING* vr$7122 = fb_StrAllocTempDescZEx( (uint8*)"crackle", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7122, 0 );
      }
      goto label$9635;
      label$9876:;
      {
       FBSTRING* vr$7123 = fb_StrAllocTempDescZEx( (uint8*)"crand", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7123, 0 );
      }
      goto label$9635;
      label$9877:;
      {
       FBSTRING* vr$7124 = fb_StrAllocTempDescZEx( (uint8*)"cross", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7124, 0 );
      }
      goto label$9635;
      label$9878:;
      {
       FBSTRING* vr$7125 = fb_StrAllocTempDescZEx( (uint8*)"csng", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7125, 0 );
      }
      goto label$9635;
      label$9879:;
      {
       FBSTRING* vr$7126 = fb_StrAllocTempDescZEx( (uint8*)"csrlin", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7126, 0 );
      }
      goto label$9635;
      label$9880:;
      {
       FBSTRING* vr$7127 = fb_StrAllocTempDescZEx( (uint8*)"cube", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7127, 0 );
      }
      goto label$9635;
      label$9881:;
      {
       FBSTRING* vr$7128 = fb_StrAllocTempDescZEx( (uint8*)"cubic", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7128, 0 );
      }
      goto label$9635;
      label$9882:;
      {
       FBSTRING* vr$7129 = fb_StrAllocTempDescZEx( (uint8*)"cubic_spline", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$7129, 0 );
      }
      goto label$9635;
      label$9883:;
      {
       FBSTRING* vr$7130 = fb_StrAllocTempDescZEx( (uint8*)"cubic_wave", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7130, 0 );
      }
      goto label$9635;
      label$9884:;
      {
       FBSTRING* vr$7131 = fb_StrAllocTempDescZEx( (uint8*)"currency", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7131, 0 );
      }
      goto label$9635;
      label$9885:;
      {
       FBSTRING* vr$7132 = fb_StrAllocTempDescZEx( (uint8*)"current_date", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$7132, 0 );
      }
      goto label$9635;
      label$9886:;
      {
       FBSTRING* vr$7133 = fb_StrAllocTempDescZEx( (uint8*)"current_time", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$7133, 0 );
      }
      goto label$9635;
      label$9887:;
      {
       FBSTRING* vr$7134 = fb_StrAllocTempDescZEx( (uint8*)"current_timestamp", 17ll );
       fb_PrintString( 1, (FBSTRING*)vr$7134, 0 );
      }
      goto label$9635;
      label$9888:;
      {
       FBSTRING* vr$7135 = fb_StrAllocTempDescZEx( (uint8*)"cursor", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7135, 0 );
      }
      goto label$9635;
      label$9889:;
      {
       FBSTRING* vr$7136 = fb_StrAllocTempDescZEx( (uint8*)"cutaway_textures", 16ll );
       fb_PrintString( 1, (FBSTRING*)vr$7136, 0 );
      }
      goto label$9635;
      label$9890:;
      {
       FBSTRING* vr$7137 = fb_StrAllocTempDescZEx( (uint8*)"cvd", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7137, 0 );
      }
      goto label$9635;
      label$9891:;
      {
       FBSTRING* vr$7138 = fb_StrAllocTempDescZEx( (uint8*)"cvi", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7138, 0 );
      }
      goto label$9635;
      label$9892:;
      {
       FBSTRING* vr$7139 = fb_StrAllocTempDescZEx( (uint8*)"cvs", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7139, 0 );
      }
      goto label$9635;
      label$9636:;
      static const void* tmp$5392[256ll] = {
       &&label$9637,
       &&label$9638,
       &&label$9639,
       &&label$9640,
       &&label$9641,
       &&label$9642,
       &&label$9643,
       &&label$9644,
       &&label$9645,
       &&label$9646,
       &&label$9647,
       &&label$9648,
       &&label$9649,
       &&label$9650,
       &&label$9651,
       &&label$9652,
       &&label$9653,
       &&label$9654,
       &&label$9655,
       &&label$9656,
       &&label$9657,
       &&label$9658,
       &&label$9659,
       &&label$9660,
       &&label$9661,
       &&label$9662,
       &&label$9663,
       &&label$9664,
       &&label$9665,
       &&label$9666,
       &&label$9667,
       &&label$9668,
       &&label$9669,
       &&label$9670,
       &&label$9671,
       &&label$9672,
       &&label$9673,
       &&label$9674,
       &&label$9675,
       &&label$9676,
       &&label$9677,
       &&label$9678,
       &&label$9679,
       &&label$9680,
       &&label$9681,
       &&label$9682,
       &&label$9683,
       &&label$9684,
       &&label$9685,
       &&label$9686,
       &&label$9687,
       &&label$9688,
       &&label$9689,
       &&label$9690,
       &&label$9691,
       &&label$9692,
       &&label$9693,
       &&label$9694,
       &&label$9695,
       &&label$9696,
       &&label$9697,
       &&label$9698,
       &&label$9699,
       &&label$9700,
       &&label$9701,
       &&label$9702,
       &&label$9703,
       &&label$9704,
       &&label$9705,
       &&label$9706,
       &&label$9707,
       &&label$9708,
       &&label$9709,
       &&label$9710,
       &&label$9711,
       &&label$9712,
       &&label$9713,
       &&label$9714,
       &&label$9715,
       &&label$9716,
       &&label$9717,
       &&label$9718,
       &&label$9719,
       &&label$9720,
       &&label$9721,
       &&label$9722,
       &&label$9723,
       &&label$9724,
       &&label$9725,
       &&label$9726,
       &&label$9727,
       &&label$9728,
       &&label$9729,
       &&label$9730,
       &&label$9731,
       &&label$9732,
       &&label$9733,
       &&label$9734,
       &&label$9735,
       &&label$9736,
       &&label$9737,
       &&label$9738,
       &&label$9739,
       &&label$9740,
       &&label$9741,
       &&label$9742,
       &&label$9743,
       &&label$9744,
       &&label$9745,
       &&label$9746,
       &&label$9747,
       &&label$9748,
       &&label$9749,
       &&label$9750,
       &&label$9751,
       &&label$9752,
       &&label$9753,
       &&label$9754,
       &&label$9755,
       &&label$9756,
       &&label$9757,
       &&label$9758,
       &&label$9759,
       &&label$9760,
       &&label$9761,
       &&label$9762,
       &&label$9763,
       &&label$9764,
       &&label$9765,
       &&label$9766,
       &&label$9767,
       &&label$9768,
       &&label$9769,
       &&label$9770,
       &&label$9771,
       &&label$9772,
       &&label$9773,
       &&label$9774,
       &&label$9775,
       &&label$9776,
       &&label$9777,
       &&label$9778,
       &&label$9779,
       &&label$9780,
       &&label$9781,
       &&label$9782,
       &&label$9783,
       &&label$9784,
       &&label$9785,
       &&label$9786,
       &&label$9787,
       &&label$9788,
       &&label$9789,
       &&label$9790,
       &&label$9791,
       &&label$9792,
       &&label$9793,
       &&label$9794,
       &&label$9795,
       &&label$9796,
       &&label$9797,
       &&label$9798,
       &&label$9799,
       &&label$9800,
       &&label$9801,
       &&label$9802,
       &&label$9803,
       &&label$9804,
       &&label$9805,
       &&label$9806,
       &&label$9807,
       &&label$9808,
       &&label$9809,
       &&label$9810,
       &&label$9811,
       &&label$9812,
       &&label$9813,
       &&label$9814,
       &&label$9815,
       &&label$9816,
       &&label$9817,
       &&label$9818,
       &&label$9819,
       &&label$9820,
       &&label$9821,
       &&label$9822,
       &&label$9823,
       &&label$9824,
       &&label$9825,
       &&label$9826,
       &&label$9827,
       &&label$9828,
       &&label$9829,
       &&label$9830,
       &&label$9831,
       &&label$9832,
       &&label$9833,
       &&label$9834,
       &&label$9835,
       &&label$9836,
       &&label$9837,
       &&label$9838,
       &&label$9839,
       &&label$9840,
       &&label$9841,
       &&label$9842,
       &&label$9843,
       &&label$9844,
       &&label$9845,
       &&label$9846,
       &&label$9847,
       &&label$9848,
       &&label$9849,
       &&label$9850,
       &&label$9851,
       &&label$9852,
       &&label$9853,
       &&label$9854,
       &&label$9855,
       &&label$9856,
       &&label$9857,
       &&label$9858,
       &&label$9859,
       &&label$9860,
       &&label$9861,
       &&label$9862,
       &&label$9863,
       &&label$9864,
       &&label$9865,
       &&label$9866,
       &&label$9867,
       &&label$9868,
       &&label$9869,
       &&label$9870,
       &&label$9871,
       &&label$9872,
       &&label$9873,
       &&label$9874,
       &&label$9875,
       &&label$9876,
       &&label$9877,
       &&label$9878,
       &&label$9879,
       &&label$9880,
       &&label$9881,
       &&label$9882,
       &&label$9883,
       &&label$9884,
       &&label$9885,
       &&label$9886,
       &&label$9887,
       &&label$9888,
       &&label$9889,
       &&label$9890,
       &&label$9891,
       &&label$9892,
      };
      if( TMP$3257$6 > 255ull ) goto label$9635;
      goto *tmp$5392[TMP$3257$6 - 0ull];
      label$9635:;
     }
    }
    goto label$9561;
    label$9893:;
    {
     {
      uint64 TMP$3511$6;
      TMP$3511$6 = ((uint64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394968ll) ));
      goto label$9895;
      label$9896:;
      {
       FBSTRING* vr$7141 = fb_StrAllocTempDescZEx( (uint8*)"cylinder", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7141, 0 );
      }
      goto label$9894;
      label$9897:;
      {
       FBSTRING* vr$7142 = fb_StrAllocTempDescZEx( (uint8*)"cylindrical", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7142, 0 );
      }
      goto label$9894;
      label$9898:;
      {
       FBSTRING* vr$7143 = fb_StrAllocTempDescZEx( (uint8*)"d", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$7143, 0 );
      }
      goto label$9894;
      label$9899:;
      {
       FBSTRING* vr$7144 = fb_StrAllocTempDescZEx( (uint8*)"data", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7144, 0 );
      }
      goto label$9894;
      label$9900:;
      {
       FBSTRING* vr$7145 = fb_StrAllocTempDescZEx( (uint8*)"dataxel", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7145, 0 );
      }
      goto label$9894;
      label$9901:;
      {
       FBSTRING* vr$7146 = fb_StrAllocTempDescZEx( (uint8*)"date", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7146, 0 );
      }
      goto label$9894;
      label$9902:;
      {
       FBSTRING* vr$7147 = fb_StrAllocTempDescZEx( (uint8*)"date-compiled", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$7147, 0 );
      }
      goto label$9894;
      label$9903:;
      {
       FBSTRING* vr$7148 = fb_StrAllocTempDescZEx( (uint8*)"date-written", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$7148, 0 );
      }
      goto label$9894;
      label$9904:;
      {
       FBSTRING* vr$7149 = fb_StrAllocTempDescZEx( (uint8*)"day", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7149, 0 );
      }
      goto label$9894;
      label$9905:;
      {
       FBSTRING* vr$7150 = fb_StrAllocTempDescZEx( (uint8*)"day-of-week", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7150, 0 );
      }
      goto label$9894;
      label$9906:;
      {
       FBSTRING* vr$7151 = fb_StrAllocTempDescZEx( (uint8*)"dbcs", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7151, 0 );
      }
      goto label$9894;
      label$9907:;
      {
       FBSTRING* vr$7152 = fb_StrAllocTempDescZEx( (uint8*)"dbms_in_memory", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$7152, 0 );
      }
      goto label$9894;
      label$9908:;
      {
       FBSTRING* vr$7153 = fb_StrAllocTempDescZEx( (uint8*)"de", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7153, 0 );
      }
      goto label$9894;
      label$9909:;
      {
       FBSTRING* vr$7154 = fb_StrAllocTempDescZEx( (uint8*)"debug", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7154, 0 );
      }
      goto label$9894;
      label$9910:;
      {
       FBSTRING* vr$7155 = fb_StrAllocTempDescZEx( (uint8*)"debug-contents", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$7155, 0 );
      }
      goto label$9894;
      label$9911:;
      {
       FBSTRING* vr$7156 = fb_StrAllocTempDescZEx( (uint8*)"debugging", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7156, 0 );
      }
      goto label$9894;
      label$9912:;
      {
       FBSTRING* vr$7157 = fb_StrAllocTempDescZEx( (uint8*)"debug-item", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7157, 0 );
      }
      goto label$9894;
      label$9913:;
      {
       FBSTRING* vr$7158 = fb_StrAllocTempDescZEx( (uint8*)"debug-line", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7158, 0 );
      }
      goto label$9894;
      label$9914:;
      {
       FBSTRING* vr$7159 = fb_StrAllocTempDescZEx( (uint8*)"debug-name", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7159, 0 );
      }
      goto label$9894;
      label$9915:;
      {
       FBSTRING* vr$7160 = fb_StrAllocTempDescZEx( (uint8*)"debug-sub-1", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7160, 0 );
      }
      goto label$9894;
      label$9916:;
      {
       FBSTRING* vr$7161 = fb_StrAllocTempDescZEx( (uint8*)"debug-sub-2", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7161, 0 );
      }
      goto label$9894;
      label$9917:;
      {
       FBSTRING* vr$7162 = fb_StrAllocTempDescZEx( (uint8*)"debug-sub-3", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7162, 0 );
      }
      goto label$9894;
      label$9918:;
      {
       FBSTRING* vr$7163 = fb_StrAllocTempDescZEx( (uint8*)"dec", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7163, 0 );
      }
      goto label$9894;
      label$9919:;
      {
       FBSTRING* vr$7164 = fb_StrAllocTempDescZEx( (uint8*)"decimal", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7164, 0 );
      }
      goto label$9894;
      label$9920:;
      {
       FBSTRING* vr$7165 = fb_StrAllocTempDescZEx( (uint8*)"decimal-point", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$7165, 0 );
      }
      goto label$9894;
      label$9921:;
      {
       FBSTRING* vr$7166 = fb_StrAllocTempDescZEx( (uint8*)"declaratives", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$7166, 0 );
      }
      goto label$9894;
      label$9922:;
      {
       FBSTRING* vr$7167 = fb_StrAllocTempDescZEx( (uint8*)"declare", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7167, 0 );
      }
      goto label$9894;
      label$9923:;
      {
       FBSTRING* vr$7168 = fb_StrAllocTempDescZEx( (uint8*)"decode", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7168, 0 );
      }
      goto label$9894;
      label$9924:;
      {
       FBSTRING* vr$7169 = fb_StrAllocTempDescZEx( (uint8*)"def", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7169, 0 );
      }
      goto label$9894;
      label$9925:;
      {
       FBSTRING* vr$7170 = fb_StrAllocTempDescZEx( (uint8*)"default", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7170, 0 );
      }
      goto label$9894;
      label$9926:;
      {
       FBSTRING* vr$7171 = fb_StrAllocTempDescZEx( (uint8*)"defdbl", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7171, 0 );
      }
      goto label$9894;
      label$9927:;
      {
       FBSTRING* vr$7172 = fb_StrAllocTempDescZEx( (uint8*)"define", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7172, 0 );
      }
      goto label$9894;
      label$9928:;
      {
       FBSTRING* vr$7173 = fb_StrAllocTempDescZEx( (uint8*)"defined", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7173, 0 );
      }
      goto label$9894;
      label$9929:;
      {
       FBSTRING* vr$7174 = fb_StrAllocTempDescZEx( (uint8*)"defint", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7174, 0 );
      }
      goto label$9894;
      label$9930:;
      {
       FBSTRING* vr$7175 = fb_StrAllocTempDescZEx( (uint8*)"defsng", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7175, 0 );
      }
      goto label$9894;
      label$9931:;
      {
       FBSTRING* vr$7176 = fb_StrAllocTempDescZEx( (uint8*)"defstr", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7176, 0 );
      }
      goto label$9894;
      label$9932:;
      {
       FBSTRING* vr$7177 = fb_StrAllocTempDescZEx( (uint8*)"degrees", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7177, 0 );
      }
      goto label$9894;
      label$9933:;
      {
       FBSTRING* vr$7178 = fb_StrAllocTempDescZEx( (uint8*)"delete", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7178, 0 );
      }
      goto label$9894;
      label$9934:;
      {
       FBSTRING* vr$7179 = fb_StrAllocTempDescZEx( (uint8*)"delimited", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7179, 0 );
      }
      goto label$9894;
      label$9935:;
      {
       FBSTRING* vr$7180 = fb_StrAllocTempDescZEx( (uint8*)"delimiter", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7180, 0 );
      }
      goto label$9894;
      label$9936:;
      {
       FBSTRING* vr$7181 = fb_StrAllocTempDescZEx( (uint8*)"density", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7181, 0 );
      }
      goto label$9894;
      label$9937:;
      {
       FBSTRING* vr$7182 = fb_StrAllocTempDescZEx( (uint8*)"density_file", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$7182, 0 );
      }
      goto label$9894;
      label$9938:;
      {
       FBSTRING* vr$7183 = fb_StrAllocTempDescZEx( (uint8*)"density_map", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7183, 0 );
      }
      goto label$9894;
      label$9939:;
      {
       FBSTRING* vr$7184 = fb_StrAllocTempDescZEx( (uint8*)"dents", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7184, 0 );
      }
      goto label$9894;
      label$9940:;
      {
       FBSTRING* vr$7185 = fb_StrAllocTempDescZEx( (uint8*)"depending", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7185, 0 );
      }
      goto label$9894;
      label$9941:;
      {
       FBSTRING* vr$7186 = fb_StrAllocTempDescZEx( (uint8*)"desc", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7186, 0 );
      }
      goto label$9894;
      label$9942:;
      {
       FBSTRING* vr$7187 = fb_StrAllocTempDescZEx( (uint8*)"descending", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7187, 0 );
      }
      goto label$9894;
      label$9943:;
      {
       FBSTRING* vr$7188 = fb_StrAllocTempDescZEx( (uint8*)"destination", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7188, 0 );
      }
      goto label$9894;
      label$9944:;
      {
       FBSTRING* vr$7189 = fb_StrAllocTempDescZEx( (uint8*)"destructor", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7189, 0 );
      }
      goto label$9894;
      label$9945:;
      {
       FBSTRING* vr$7190 = fb_StrAllocTempDescZEx( (uint8*)"detail", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7190, 0 );
      }
      goto label$9894;
      label$9946:;
      {
       FBSTRING* vr$7191 = fb_StrAllocTempDescZEx( (uint8*)"determinant", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7191, 0 );
      }
      goto label$9894;
      label$9947:;
      {
       FBSTRING* vr$7192 = fb_StrAllocTempDescZEx( (uint8*)"df3", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7192, 0 );
      }
      goto label$9894;
      label$9948:;
      {
       FBSTRING* vr$7193 = fb_StrAllocTempDescZEx( (uint8*)"dict_find", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7193, 0 );
      }
      goto label$9894;
      label$9949:;
      {
       FBSTRING* vr$7194 = fb_StrAllocTempDescZEx( (uint8*)"dict_next", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7194, 0 );
      }
      goto label$9894;
      label$9950:;
      {
       FBSTRING* vr$7195 = fb_StrAllocTempDescZEx( (uint8*)"dict_value", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7195, 0 );
      }
      goto label$9894;
      label$9951:;
      {
       FBSTRING* vr$7196 = fb_StrAllocTempDescZEx( (uint8*)"difference", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7196, 0 );
      }
      goto label$9894;
      label$9952:;
      {
       FBSTRING* vr$7197 = fb_StrAllocTempDescZEx( (uint8*)"diffuse", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7197, 0 );
      }
      goto label$9894;
      label$9953:;
      {
       FBSTRING* vr$7198 = fb_StrAllocTempDescZEx( (uint8*)"dim", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7198, 0 );
      }
      goto label$9894;
      label$9954:;
      {
       FBSTRING* vr$7199 = fb_StrAllocTempDescZEx( (uint8*)"dimension", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7199, 0 );
      }
      goto label$9894;
      label$9955:;
      {
       FBSTRING* vr$7200 = fb_StrAllocTempDescZEx( (uint8*)"dimensions", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7200, 0 );
      }
      goto label$9894;
      label$9956:;
      {
       FBSTRING* vr$7201 = fb_StrAllocTempDescZEx( (uint8*)"dimension_size", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$7201, 0 );
      }
      goto label$9894;
      label$9957:;
      {
       FBSTRING* vr$7202 = fb_StrAllocTempDescZEx( (uint8*)"direction", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7202, 0 );
      }
      goto label$9894;
      label$9958:;
      {
       FBSTRING* vr$7203 = fb_StrAllocTempDescZEx( (uint8*)"directive_error", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$7203, 0 );
      }
      goto label$9894;
      label$9959:;
      {
       FBSTRING* vr$7204 = fb_StrAllocTempDescZEx( (uint8*)"disc", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7204, 0 );
      }
      goto label$9894;
      label$9960:;
      {
       FBSTRING* vr$7205 = fb_StrAllocTempDescZEx( (uint8*)"discard", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7205, 0 );
      }
      goto label$9894;
      label$9961:;
      {
       FBSTRING* vr$7206 = fb_StrAllocTempDescZEx( (uint8*)"dispersion", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7206, 0 );
      }
      goto label$9894;
      label$9962:;
      {
       FBSTRING* vr$7207 = fb_StrAllocTempDescZEx( (uint8*)"dispersion_samples", 18ll );
       fb_PrintString( 1, (FBSTRING*)vr$7207, 0 );
      }
      goto label$9894;
      label$9963:;
      {
       FBSTRING* vr$7208 = fb_StrAllocTempDescZEx( (uint8*)"displace", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7208, 0 );
      }
      goto label$9894;
      label$9964:;
      {
       FBSTRING* vr$7209 = fb_StrAllocTempDescZEx( (uint8*)"display", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7209, 0 );
      }
      goto label$9894;
      label$9965:;
      {
       FBSTRING* vr$7210 = fb_StrAllocTempDescZEx( (uint8*)"display-1", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7210, 0 );
      }
      goto label$9894;
      label$9966:;
      {
       FBSTRING* vr$7211 = fb_StrAllocTempDescZEx( (uint8*)"dispose", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7211, 0 );
      }
      goto label$9894;
      label$9967:;
      {
       FBSTRING* vr$7212 = fb_StrAllocTempDescZEx( (uint8*)"distance", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7212, 0 );
      }
      goto label$9894;
      label$9968:;
      {
       FBSTRING* vr$7213 = fb_StrAllocTempDescZEx( (uint8*)"dist_exp", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7213, 0 );
      }
      goto label$9894;
      label$9969:;
      {
       FBSTRING* vr$7214 = fb_StrAllocTempDescZEx( (uint8*)"distinct", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7214, 0 );
      }
      goto label$9894;
      label$9970:;
      {
       FBSTRING* vr$7215 = fb_StrAllocTempDescZEx( (uint8*)"div", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7215, 0 );
      }
      goto label$9894;
      label$9971:;
      {
       FBSTRING* vr$7216 = fb_StrAllocTempDescZEx( (uint8*)"divide", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7216, 0 );
      }
      goto label$9894;
      label$9972:;
      {
       FBSTRING* vr$7217 = fb_StrAllocTempDescZEx( (uint8*)"division", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7217, 0 );
      }
      goto label$9894;
      label$9973:;
      {
       FBSTRING* vr$7218 = fb_StrAllocTempDescZEx( (uint8*)"do", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7218, 0 );
      }
      goto label$9894;
      label$9974:;
      {
       FBSTRING* vr$7219 = fb_StrAllocTempDescZEx( (uint8*)"dot", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7219, 0 );
      }
      goto label$9894;
      label$9975:;
      {
       FBSTRING* vr$7220 = fb_StrAllocTempDescZEx( (uint8*)"double", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7220, 0 );
      }
      goto label$9894;
      label$9976:;
      {
       FBSTRING* vr$7221 = fb_StrAllocTempDescZEx( (uint8*)"doublegreatethan", 16ll );
       fb_PrintString( 1, (FBSTRING*)vr$7221, 0 );
      }
      goto label$9894;
      label$9977:;
      {
       FBSTRING* vr$7222 = fb_StrAllocTempDescZEx( (uint8*)"double_illuminate", 17ll );
       fb_PrintString( 1, (FBSTRING*)vr$7222, 0 );
      }
      goto label$9894;
      label$9978:;
      {
       FBSTRING* vr$7223 = fb_StrAllocTempDescZEx( (uint8*)"down", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7223, 0 );
      }
      goto label$9894;
      label$9979:;
      {
       FBSTRING* vr$7224 = fb_StrAllocTempDescZEx( (uint8*)"downto", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7224, 0 );
      }
      goto label$9894;
      label$9980:;
      {
       FBSTRING* vr$7225 = fb_StrAllocTempDescZEx( (uint8*)"draw", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7225, 0 );
      }
      goto label$9894;
      label$9981:;
      {
       FBSTRING* vr$7226 = fb_StrAllocTempDescZEx( (uint8*)"duplicates", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7226, 0 );
      }
      goto label$9894;
      label$9982:;
      {
       FBSTRING* vr$7227 = fb_StrAllocTempDescZEx( (uint8*)"dvec2", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7227, 0 );
      }
      goto label$9894;
      label$9983:;
      {
       FBSTRING* vr$7228 = fb_StrAllocTempDescZEx( (uint8*)"dvec3", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7228, 0 );
      }
      goto label$9894;
      label$9984:;
      {
       FBSTRING* vr$7229 = fb_StrAllocTempDescZEx( (uint8*)"dvec4", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7229, 0 );
      }
      goto label$9894;
      label$9985:;
      {
       FBSTRING* vr$7230 = fb_StrAllocTempDescZEx( (uint8*)"dx", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7230, 0 );
      }
      goto label$9894;
      label$9986:;
      {
       FBSTRING* vr$7231 = fb_StrAllocTempDescZEx( (uint8*)"dy", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7231, 0 );
      }
      goto label$9894;
      label$9987:;
      {
       FBSTRING* vr$7232 = fb_StrAllocTempDescZEx( (uint8*)"dynamic", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7232, 0 );
      }
      goto label$9894;
      label$9988:;
      {
       FBSTRING* vr$7233 = fb_StrAllocTempDescZEx( (uint8*)"dz", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7233, 0 );
      }
      goto label$9894;
      label$9989:;
      {
       FBSTRING* vr$7234 = fb_StrAllocTempDescZEx( (uint8*)"e", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$7234, 0 );
      }
      goto label$9894;
      label$9990:;
      {
       FBSTRING* vr$7235 = fb_StrAllocTempDescZEx( (uint8*)"eccentricity", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$7235, 0 );
      }
      goto label$9894;
      label$9991:;
      {
       FBSTRING* vr$7236 = fb_StrAllocTempDescZEx( (uint8*)"edit", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7236, 0 );
      }
      goto label$9894;
      label$9992:;
      {
       FBSTRING* vr$7237 = fb_StrAllocTempDescZEx( (uint8*)"egcs", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7237, 0 );
      }
      goto label$9894;
      label$9993:;
      {
       FBSTRING* vr$7238 = fb_StrAllocTempDescZEx( (uint8*)"egi", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7238, 0 );
      }
      goto label$9894;
      label$9994:;
      {
       FBSTRING* vr$7239 = fb_StrAllocTempDescZEx( (uint8*)"eject", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7239, 0 );
      }
      goto label$9894;
      label$9995:;
      {
       FBSTRING* vr$7240 = fb_StrAllocTempDescZEx( (uint8*)"elif", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7240, 0 );
      }
      goto label$9894;
      label$9996:;
      {
       FBSTRING* vr$7241 = fb_StrAllocTempDescZEx( (uint8*)"else", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7241, 0 );
      }
      goto label$9894;
      label$9997:;
      {
       FBSTRING* vr$7242 = fb_StrAllocTempDescZEx( (uint8*)"elseif", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7242, 0 );
      }
      goto label$9894;
      label$9998:;
      {
       FBSTRING* vr$7243 = fb_StrAllocTempDescZEx( (uint8*)"emi", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7243, 0 );
      }
      goto label$9894;
      label$9999:;
      {
       FBSTRING* vr$7244 = fb_StrAllocTempDescZEx( (uint8*)"emission", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7244, 0 );
      }
      goto label$9894;
      label$10000:;
      {
       FBSTRING* vr$7245 = fb_StrAllocTempDescZEx( (uint8*)"enable", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7245, 0 );
      }
      goto label$9894;
      label$10001:;
      {
       FBSTRING* vr$7246 = fb_StrAllocTempDescZEx( (uint8*)"encode", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7246, 0 );
      }
      goto label$9894;
      label$10002:;
      {
       FBSTRING* vr$7247 = fb_StrAllocTempDescZEx( (uint8*)"end", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7247, 0 );
      }
      goto label$9894;
      label$10003:;
      {
       FBSTRING* vr$7248 = fb_StrAllocTempDescZEx( (uint8*)"end-add", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7248, 0 );
      }
      goto label$9894;
      label$10004:;
      {
       FBSTRING* vr$7249 = fb_StrAllocTempDescZEx( (uint8*)"end-call", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7249, 0 );
      }
      goto label$9894;
      label$10005:;
      {
       FBSTRING* vr$7250 = fb_StrAllocTempDescZEx( (uint8*)"end-compute", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7250, 0 );
      }
      goto label$9894;
      label$10006:;
      {
       FBSTRING* vr$7251 = fb_StrAllocTempDescZEx( (uint8*)"end-delete", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7251, 0 );
      }
      goto label$9894;
      label$10007:;
      {
       FBSTRING* vr$7252 = fb_StrAllocTempDescZEx( (uint8*)"end-divide", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7252, 0 );
      }
      goto label$9894;
      label$10008:;
      {
       FBSTRING* vr$7253 = fb_StrAllocTempDescZEx( (uint8*)"end-evaluate", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$7253, 0 );
      }
      goto label$9894;
      label$10009:;
      {
       FBSTRING* vr$7254 = fb_StrAllocTempDescZEx( (uint8*)"end-if", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7254, 0 );
      }
      goto label$9894;
      label$10010:;
      {
       FBSTRING* vr$7255 = fb_StrAllocTempDescZEx( (uint8*)"ending", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7255, 0 );
      }
      goto label$9894;
      label$10011:;
      {
       FBSTRING* vr$7256 = fb_StrAllocTempDescZEx( (uint8*)"end-invoke", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7256, 0 );
      }
      goto label$9894;
      label$10012:;
      {
       FBSTRING* vr$7257 = fb_StrAllocTempDescZEx( (uint8*)"end-multiply", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$7257, 0 );
      }
      goto label$9894;
      label$10013:;
      {
       FBSTRING* vr$7258 = fb_StrAllocTempDescZEx( (uint8*)"endofdata", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7258, 0 );
      }
      goto label$9894;
      label$10014:;
      {
       FBSTRING* vr$7259 = fb_StrAllocTempDescZEx( (uint8*)"end-of-page", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7259, 0 );
      }
      goto label$9894;
      label$10015:;
      {
       FBSTRING* vr$7260 = fb_StrAllocTempDescZEx( (uint8*)"end-perform", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7260, 0 );
      }
      goto label$9894;
      label$10016:;
      {
       FBSTRING* vr$7261 = fb_StrAllocTempDescZEx( (uint8*)"end-read", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7261, 0 );
      }
      goto label$9894;
      label$10017:;
      {
       FBSTRING* vr$7262 = fb_StrAllocTempDescZEx( (uint8*)"end-receive", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7262, 0 );
      }
      goto label$9894;
      label$10018:;
      {
       FBSTRING* vr$7263 = fb_StrAllocTempDescZEx( (uint8*)"end-return", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7263, 0 );
      }
      goto label$9894;
      label$10019:;
      {
       FBSTRING* vr$7264 = fb_StrAllocTempDescZEx( (uint8*)"end-rewrite", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7264, 0 );
      }
      goto label$9894;
      label$10020:;
      {
       FBSTRING* vr$7265 = fb_StrAllocTempDescZEx( (uint8*)"end-search", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7265, 0 );
      }
      goto label$9894;
      label$10021:;
      {
       FBSTRING* vr$7266 = fb_StrAllocTempDescZEx( (uint8*)"end-start", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7266, 0 );
      }
      goto label$9894;
      label$10022:;
      {
       FBSTRING* vr$7267 = fb_StrAllocTempDescZEx( (uint8*)"end-string", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7267, 0 );
      }
      goto label$9894;
      label$10023:;
      {
       FBSTRING* vr$7268 = fb_StrAllocTempDescZEx( (uint8*)"end-subtract", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$7268, 0 );
      }
      goto label$9894;
      label$10024:;
      {
       FBSTRING* vr$7269 = fb_StrAllocTempDescZEx( (uint8*)"endswith", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7269, 0 );
      }
      goto label$9894;
      label$10025:;
      {
       FBSTRING* vr$7270 = fb_StrAllocTempDescZEx( (uint8*)"end-unstring", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$7270, 0 );
      }
      goto label$9894;
      label$10026:;
      {
       FBSTRING* vr$7271 = fb_StrAllocTempDescZEx( (uint8*)"end-write", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7271, 0 );
      }
      goto label$9894;
      label$10027:;
      {
       FBSTRING* vr$7272 = fb_StrAllocTempDescZEx( (uint8*)"enter", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7272, 0 );
      }
      goto label$9894;
      label$10028:;
      {
       FBSTRING* vr$7273 = fb_StrAllocTempDescZEx( (uint8*)"entry", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7273, 0 );
      }
      goto label$9894;
      label$10029:;
      {
       FBSTRING* vr$7274 = fb_StrAllocTempDescZEx( (uint8*)"enum", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7274, 0 );
      }
      goto label$9894;
      label$10030:;
      {
       FBSTRING* vr$7275 = fb_StrAllocTempDescZEx( (uint8*)"environ", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7275, 0 );
      }
      goto label$9894;
      label$10031:;
      {
       FBSTRING* vr$7276 = fb_StrAllocTempDescZEx( (uint8*)"environment", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7276, 0 );
      }
      goto label$9894;
      label$10032:;
      {
       FBSTRING* vr$7277 = fb_StrAllocTempDescZEx( (uint8*)"eof", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7277, 0 );
      }
      goto label$9894;
      label$10033:;
      {
       FBSTRING* vr$7278 = fb_StrAllocTempDescZEx( (uint8*)"eop", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7278, 0 );
      }
      goto label$9894;
      label$10034:;
      {
       FBSTRING* vr$7279 = fb_StrAllocTempDescZEx( (uint8*)"equal", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7279, 0 );
      }
      goto label$9894;
      label$10035:;
      {
       FBSTRING* vr$7280 = fb_StrAllocTempDescZEx( (uint8*)"equivalence", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7280, 0 );
      }
      goto label$9894;
      label$10036:;
      {
       FBSTRING* vr$7281 = fb_StrAllocTempDescZEx( (uint8*)"eqv", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7281, 0 );
      }
      goto label$9894;
      label$10037:;
      {
       FBSTRING* vr$7282 = fb_StrAllocTempDescZEx( (uint8*)"erase", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7282, 0 );
      }
      goto label$9894;
      label$10038:;
      {
       FBSTRING* vr$7283 = fb_StrAllocTempDescZEx( (uint8*)"erdev", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7283, 0 );
      }
      goto label$9894;
      label$10039:;
      {
       FBSTRING* vr$7284 = fb_StrAllocTempDescZEx( (uint8*)"erf", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7284, 0 );
      }
      goto label$9894;
      label$10040:;
      {
       FBSTRING* vr$7285 = fb_StrAllocTempDescZEx( (uint8*)"erfc", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7285, 0 );
      }
      goto label$9894;
      label$10041:;
      {
       FBSTRING* vr$7286 = fb_StrAllocTempDescZEx( (uint8*)"erl", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7286, 0 );
      }
      goto label$9894;
      label$10042:;
      {
       FBSTRING* vr$7287 = fb_StrAllocTempDescZEx( (uint8*)"err", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7287, 0 );
      }
      goto label$9894;
      label$10043:;
      {
       FBSTRING* vr$7288 = fb_StrAllocTempDescZEx( (uint8*)"error", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7288, 0 );
      }
      goto label$9894;
      label$10044:;
      {
       FBSTRING* vr$7289 = fb_StrAllocTempDescZEx( (uint8*)"error_bound", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7289, 0 );
      }
      goto label$9894;
      label$10045:;
      {
       FBSTRING* vr$7290 = fb_StrAllocTempDescZEx( (uint8*)"escape", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7290, 0 );
      }
      goto label$9894;
      label$10046:;
      {
       FBSTRING* vr$7291 = fb_StrAllocTempDescZEx( (uint8*)"esi", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7291, 0 );
      }
      goto label$9894;
      label$10047:;
      {
       FBSTRING* vr$7292 = fb_StrAllocTempDescZEx( (uint8*)"evaluate", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7292, 0 );
      }
      goto label$9894;
      label$10048:;
      {
       FBSTRING* vr$7293 = fb_StrAllocTempDescZEx( (uint8*)"every", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7293, 0 );
      }
      goto label$9894;
      label$10049:;
      {
       FBSTRING* vr$7294 = fb_StrAllocTempDescZEx( (uint8*)"except", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7294, 0 );
      }
      goto label$9894;
      label$10050:;
      {
       FBSTRING* vr$7295 = fb_StrAllocTempDescZEx( (uint8*)"exception", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7295, 0 );
      }
      goto label$9894;
      label$10051:;
      {
       FBSTRING* vr$7296 = fb_StrAllocTempDescZEx( (uint8*)"exit", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7296, 0 );
      }
      goto label$9894;
      label$10052:;
      {
       FBSTRING* vr$7297 = fb_StrAllocTempDescZEx( (uint8*)"exp", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7297, 0 );
      }
      goto label$9894;
      label$10053:;
      {
       FBSTRING* vr$7298 = fb_StrAllocTempDescZEx( (uint8*)"exp2", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7298, 0 );
      }
      goto label$9894;
      label$10054:;
      {
       FBSTRING* vr$7299 = fb_StrAllocTempDescZEx( (uint8*)"expand", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7299, 0 );
      }
      goto label$9894;
      label$10055:;
      {
       FBSTRING* vr$7300 = fb_StrAllocTempDescZEx( (uint8*)"expand_thresholds", 17ll );
       fb_PrintString( 1, (FBSTRING*)vr$7300, 0 );
      }
      goto label$9894;
      label$10056:;
      {
       FBSTRING* vr$7301 = fb_StrAllocTempDescZEx( (uint8*)"expm1", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7301, 0 );
      }
      goto label$9894;
      label$10057:;
      {
       FBSTRING* vr$7302 = fb_StrAllocTempDescZEx( (uint8*)"exponent", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7302, 0 );
      }
      goto label$9894;
      label$10058:;
      {
       FBSTRING* vr$7303 = fb_StrAllocTempDescZEx( (uint8*)"export", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7303, 0 );
      }
      goto label$9894;
      label$10059:;
      {
       FBSTRING* vr$7304 = fb_StrAllocTempDescZEx( (uint8*)"exports", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7304, 0 );
      }
      goto label$9894;
      label$10060:;
      {
       FBSTRING* vr$7305 = fb_StrAllocTempDescZEx( (uint8*)"extend", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7305, 0 );
      }
      goto label$9894;
      label$10061:;
      {
       FBSTRING* vr$7306 = fb_StrAllocTempDescZEx( (uint8*)"exterior", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7306, 0 );
      }
      goto label$9894;
      label$10062:;
      {
       FBSTRING* vr$7307 = fb_StrAllocTempDescZEx( (uint8*)"extern", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7307, 0 );
      }
      goto label$9894;
      label$10063:;
      {
       FBSTRING* vr$7308 = fb_StrAllocTempDescZEx( (uint8*)"external", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7308, 0 );
      }
      goto label$9894;
      label$10064:;
      {
       FBSTRING* vr$7309 = fb_StrAllocTempDescZEx( (uint8*)"exterr", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7309, 0 );
      }
      goto label$9894;
      label$10065:;
      {
       FBSTRING* vr$7310 = fb_StrAllocTempDescZEx( (uint8*)"extinction", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7310, 0 );
      }
      goto label$9894;
      label$10066:;
      {
       FBSTRING* vr$7311 = fb_StrAllocTempDescZEx( (uint8*)"extract", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7311, 0 );
      }
      goto label$9894;
      label$10067:;
      {
       FBSTRING* vr$7312 = fb_StrAllocTempDescZEx( (uint8*)"f", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$7312, 0 );
      }
      goto label$9894;
      label$10068:;
      {
       FBSTRING* vr$7313 = fb_StrAllocTempDescZEx( (uint8*)"fabs", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7313, 0 );
      }
      goto label$9894;
      label$10069:;
      {
       FBSTRING* vr$7314 = fb_StrAllocTempDescZEx( (uint8*)"faceforward", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7314, 0 );
      }
      goto label$9894;
      label$10070:;
      {
       FBSTRING* vr$7315 = fb_StrAllocTempDescZEx( (uint8*)"face_indices", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$7315, 0 );
      }
      goto label$9894;
      label$10071:;
      {
       FBSTRING* vr$7316 = fb_StrAllocTempDescZEx( (uint8*)"facets", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7316, 0 );
      }
      goto label$9894;
      label$10072:;
      {
       FBSTRING* vr$7317 = fb_StrAllocTempDescZEx( (uint8*)"fade_color", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7317, 0 );
      }
      goto label$9894;
      label$10073:;
      {
       FBSTRING* vr$7318 = fb_StrAllocTempDescZEx( (uint8*)"fade_colour", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7318, 0 );
      }
      goto label$9894;
      label$10074:;
      {
       FBSTRING* vr$7319 = fb_StrAllocTempDescZEx( (uint8*)"fade_distance", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$7319, 0 );
      }
      goto label$9894;
      label$10075:;
      {
       FBSTRING* vr$7320 = fb_StrAllocTempDescZEx( (uint8*)"fade_power", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7320, 0 );
      }
      goto label$9894;
      label$10076:;
      {
       FBSTRING* vr$7321 = fb_StrAllocTempDescZEx( (uint8*)"falloff", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7321, 0 );
      }
      goto label$9894;
      label$10077:;
      {
       FBSTRING* vr$7322 = fb_StrAllocTempDescZEx( (uint8*)"falloff_angle", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$7322, 0 );
      }
      goto label$9894;
      label$10078:;
      {
       FBSTRING* vr$7323 = fb_StrAllocTempDescZEx( (uint8*)"false", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7323, 0 );
      }
      goto label$9894;
      label$10079:;
      {
       FBSTRING* vr$7324 = fb_StrAllocTempDescZEx( (uint8*)"far", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7324, 0 );
      }
      goto label$9894;
      label$10080:;
      {
       FBSTRING* vr$7325 = fb_StrAllocTempDescZEx( (uint8*)"fclose", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7325, 0 );
      }
      goto label$9894;
      label$10081:;
      {
       FBSTRING* vr$7326 = fb_StrAllocTempDescZEx( (uint8*)"fd", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7326, 0 );
      }
      goto label$9894;
      label$10082:;
      {
       FBSTRING* vr$7327 = fb_StrAllocTempDescZEx( (uint8*)"field", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7327, 0 );
      }
      goto label$9894;
      label$10083:;
      {
       FBSTRING* vr$7328 = fb_StrAllocTempDescZEx( (uint8*)"file", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7328, 0 );
      }
      goto label$9894;
      label$10084:;
      {
       FBSTRING* vr$7329 = fb_StrAllocTempDescZEx( (uint8*)"file-control", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$7329, 0 );
      }
      goto label$9894;
      label$10085:;
      {
       FBSTRING* vr$7330 = fb_StrAllocTempDescZEx( (uint8*)"file_exists", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7330, 0 );
      }
      goto label$9894;
      label$10086:;
      {
       FBSTRING* vr$7331 = fb_StrAllocTempDescZEx( (uint8*)"files", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7331, 0 );
      }
      goto label$9894;
      label$10087:;
      {
       FBSTRING* vr$7332 = fb_StrAllocTempDescZEx( (uint8*)"filler", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7332, 0 );
      }
      goto label$9894;
      label$10088:;
      {
       FBSTRING* vr$7333 = fb_StrAllocTempDescZEx( (uint8*)"filter", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7333, 0 );
      }
      goto label$9894;
      label$10089:;
      {
       FBSTRING* vr$7334 = fb_StrAllocTempDescZEx( (uint8*)"filterwidth", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7334, 0 );
      }
      goto label$9894;
      label$10090:;
      {
       FBSTRING* vr$7335 = fb_StrAllocTempDescZEx( (uint8*)"final", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7335, 0 );
      }
      goto label$9894;
      label$10091:;
      {
       FBSTRING* vr$7336 = fb_StrAllocTempDescZEx( (uint8*)"final_clock", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7336, 0 );
      }
      goto label$9894;
      label$10092:;
      {
       FBSTRING* vr$7337 = fb_StrAllocTempDescZEx( (uint8*)"final_frame", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7337, 0 );
      }
      goto label$9894;
      label$10093:;
      {
       FBSTRING* vr$7338 = fb_StrAllocTempDescZEx( (uint8*)"finalization", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$7338, 0 );
      }
      goto label$9894;
      label$10094:;
      {
       FBSTRING* vr$7339 = fb_StrAllocTempDescZEx( (uint8*)"finally", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7339, 0 );
      }
      goto label$9894;
      label$10095:;
      {
       FBSTRING* vr$7340 = fb_StrAllocTempDescZEx( (uint8*)"finish", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7340, 0 );
      }
      goto label$9894;
      label$10096:;
      {
       FBSTRING* vr$7341 = fb_StrAllocTempDescZEx( (uint8*)"first", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7341, 0 );
      }
      goto label$9894;
      label$10097:;
      {
       FBSTRING* vr$7342 = fb_StrAllocTempDescZEx( (uint8*)"fisheye", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7342, 0 );
      }
      goto label$9894;
      label$10098:;
      {
       FBSTRING* vr$7343 = fb_StrAllocTempDescZEx( (uint8*)"fix", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7343, 0 );
      }
      goto label$9894;
      label$10099:;
      {
       FBSTRING* vr$7344 = fb_StrAllocTempDescZEx( (uint8*)"fixed", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7344, 0 );
      }
      goto label$9894;
      label$10100:;
      {
       FBSTRING* vr$7345 = fb_StrAllocTempDescZEx( (uint8*)"flat", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7345, 0 );
      }
      goto label$9894;
      label$10101:;
      {
       FBSTRING* vr$7346 = fb_StrAllocTempDescZEx( (uint8*)"flatness", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7346, 0 );
      }
      goto label$9894;
      label$10102:;
      {
       FBSTRING* vr$7347 = fb_StrAllocTempDescZEx( (uint8*)"flip", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7347, 0 );
      }
      goto label$9894;
      label$10103:;
      {
       FBSTRING* vr$7348 = fb_StrAllocTempDescZEx( (uint8*)"float", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7348, 0 );
      }
      goto label$9894;
      label$10104:;
      {
       FBSTRING* vr$7349 = fb_StrAllocTempDescZEx( (uint8*)"floor", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7349, 0 );
      }
      goto label$9894;
      label$10105:;
      {
       FBSTRING* vr$7350 = fb_StrAllocTempDescZEx( (uint8*)"fmod", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7350, 0 );
      }
      goto label$9894;
      label$10106:;
      {
       FBSTRING* vr$7351 = fb_StrAllocTempDescZEx( (uint8*)"fn", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7351, 0 );
      }
      goto label$9894;
      label$10107:;
      {
       FBSTRING* vr$7352 = fb_StrAllocTempDescZEx( (uint8*)"focal_point", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7352, 0 );
      }
      goto label$9894;
      label$10108:;
      {
       FBSTRING* vr$7353 = fb_StrAllocTempDescZEx( (uint8*)"fog", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7353, 0 );
      }
      goto label$9894;
      label$10109:;
      {
       FBSTRING* vr$7354 = fb_StrAllocTempDescZEx( (uint8*)"fog_alt", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7354, 0 );
      }
      goto label$9894;
      label$10110:;
      {
       FBSTRING* vr$7355 = fb_StrAllocTempDescZEx( (uint8*)"fog_offset", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7355, 0 );
      }
      goto label$9894;
      label$10111:;
      {
       FBSTRING* vr$7356 = fb_StrAllocTempDescZEx( (uint8*)"fog_type", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7356, 0 );
      }
      goto label$9894;
      label$10112:;
      {
       FBSTRING* vr$7357 = fb_StrAllocTempDescZEx( (uint8*)"footing", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7357, 0 );
      }
      goto label$9894;
      label$10113:;
      {
       FBSTRING* vr$7358 = fb_StrAllocTempDescZEx( (uint8*)"fopen", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7358, 0 );
      }
      goto label$9894;
      label$10114:;
      {
       FBSTRING* vr$7359 = fb_StrAllocTempDescZEx( (uint8*)"for", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7359, 0 );
      }
      goto label$9894;
      label$10115:;
      {
       FBSTRING* vr$7360 = fb_StrAllocTempDescZEx( (uint8*)"form", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7360, 0 );
      }
      goto label$9894;
      label$10116:;
      {
       FBSTRING* vr$7361 = fb_StrAllocTempDescZEx( (uint8*)"format", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7361, 0 );
      }
      goto label$9894;
      label$10117:;
      {
       FBSTRING* vr$7362 = fb_StrAllocTempDescZEx( (uint8*)"forward", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7362, 0 );
      }
      goto label$9894;
      label$10118:;
      {
       FBSTRING* vr$7363 = fb_StrAllocTempDescZEx( (uint8*)"fprintf", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7363, 0 );
      }
      goto label$9894;
      label$10119:;
      {
       FBSTRING* vr$7364 = fb_StrAllocTempDescZEx( (uint8*)"frag_color", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7364, 0 );
      }
      goto label$9894;
      label$10120:;
      {
       FBSTRING* vr$7365 = fb_StrAllocTempDescZEx( (uint8*)"fragcolor", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7365, 0 );
      }
      goto label$9894;
      label$10121:;
      {
       FBSTRING* vr$7366 = fb_StrAllocTempDescZEx( (uint8*)"frag_coord", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7366, 0 );
      }
      goto label$9894;
      label$10122:;
      {
       FBSTRING* vr$7367 = fb_StrAllocTempDescZEx( (uint8*)"fragcoord", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7367, 0 );
      }
      goto label$9894;
      label$10123:;
      {
       FBSTRING* vr$7368 = fb_StrAllocTempDescZEx( (uint8*)"frame_number", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$7368, 0 );
      }
      goto label$9894;
      label$10124:;
      {
       FBSTRING* vr$7369 = fb_StrAllocTempDescZEx( (uint8*)"fre", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7369, 0 );
      }
      goto label$9894;
      label$10125:;
      {
       FBSTRING* vr$7370 = fb_StrAllocTempDescZEx( (uint8*)"frequency", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7370, 0 );
      }
      goto label$9894;
      label$10126:;
      {
       FBSTRING* vr$7371 = fb_StrAllocTempDescZEx( (uint8*)"fresnel", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7371, 0 );
      }
      goto label$9894;
      label$10127:;
      {
       FBSTRING* vr$7372 = fb_StrAllocTempDescZEx( (uint8*)"from", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7372, 0 );
      }
      goto label$9894;
      label$10128:;
      {
       FBSTRING* vr$7373 = fb_StrAllocTempDescZEx( (uint8*)"full", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7373, 0 );
      }
      goto label$9894;
      label$10129:;
      {
       FBSTRING* vr$7374 = fb_StrAllocTempDescZEx( (uint8*)"function", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7374, 0 );
      }
      goto label$9894;
      label$10130:;
      {
       FBSTRING* vr$7375 = fb_StrAllocTempDescZEx( (uint8*)"fvec2", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7375, 0 );
      }
      goto label$9894;
      label$10131:;
      {
       FBSTRING* vr$7376 = fb_StrAllocTempDescZEx( (uint8*)"fvec3", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7376, 0 );
      }
      goto label$9894;
      label$10132:;
      {
       FBSTRING* vr$7377 = fb_StrAllocTempDescZEx( (uint8*)"fvec4", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7377, 0 );
      }
      goto label$9894;
      label$10133:;
      {
       FBSTRING* vr$7378 = fb_StrAllocTempDescZEx( (uint8*)"g", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$7378, 0 );
      }
      goto label$9894;
      label$10134:;
      {
       FBSTRING* vr$7379 = fb_StrAllocTempDescZEx( (uint8*)"gather", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7379, 0 );
      }
      goto label$9894;
      label$10135:;
      {
       FBSTRING* vr$7380 = fb_StrAllocTempDescZEx( (uint8*)"generate", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7380, 0 );
      }
      goto label$9894;
      label$10136:;
      {
       FBSTRING* vr$7381 = fb_StrAllocTempDescZEx( (uint8*)"generic", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7381, 0 );
      }
      goto label$9894;
      label$10137:;
      {
       FBSTRING* vr$7382 = fb_StrAllocTempDescZEx( (uint8*)"get", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7382, 0 );
      }
      goto label$9894;
      label$10138:;
      {
       FBSTRING* vr$7383 = fb_StrAllocTempDescZEx( (uint8*)"getattribute", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$7383, 0 );
      }
      goto label$9894;
      label$10139:;
      {
       FBSTRING* vr$7384 = fb_StrAllocTempDescZEx( (uint8*)"getchar", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7384, 0 );
      }
      goto label$9894;
      label$10140:;
      {
       FBSTRING* vr$7385 = fb_StrAllocTempDescZEx( (uint8*)"getmatrix", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7385, 0 );
      }
      goto label$9894;
      label$10141:;
      {
       FBSTRING* vr$7386 = fb_StrAllocTempDescZEx( (uint8*)"getmessage", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7386, 0 );
      }
      goto label$9894;
      label$10142:;
      {
       FBSTRING* vr$7387 = fb_StrAllocTempDescZEx( (uint8*)"gettextureinfo", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$7387, 0 );
      }
      goto label$9894;
      label$10143:;
      {
       FBSTRING* vr$7388 = fb_StrAllocTempDescZEx( (uint8*)"gif", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7388, 0 );
      }
      goto label$9894;
      label$10144:;
      {
       FBSTRING* vr$7389 = fb_StrAllocTempDescZEx( (uint8*)"giving", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7389, 0 );
      }
      goto label$9894;
      label$10145:;
      {
       FBSTRING* vr$7390 = fb_StrAllocTempDescZEx( (uint8*)"gl_fragcolor", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$7390, 0 );
      }
      goto label$9894;
      label$10146:;
      {
       FBSTRING* vr$7391 = fb_StrAllocTempDescZEx( (uint8*)"gl_fragcoord.xy", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$7391, 0 );
      }
      goto label$9894;
      label$10147:;
      {
       FBSTRING* vr$7392 = fb_StrAllocTempDescZEx( (uint8*)"global", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7392, 0 );
      }
      goto label$9894;
      label$10148:;
      {
       FBSTRING* vr$7393 = fb_StrAllocTempDescZEx( (uint8*)"global_lights", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$7393, 0 );
      }
      goto label$9894;
      label$10149:;
      {
       FBSTRING* vr$7394 = fb_StrAllocTempDescZEx( (uint8*)"global_settings", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$7394, 0 );
      }
      goto label$9894;
      label$10150:;
      {
       FBSTRING* vr$7395 = fb_StrAllocTempDescZEx( (uint8*)"go", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7395, 0 );
      }
      goto label$9894;
      label$10151:;
      {
       FBSTRING* vr$7396 = fb_StrAllocTempDescZEx( (uint8*)"goback", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7396, 0 );
      }
      goto label$9894;
      label$9895:;
      static const void* tmp$5393[256ll] = {
       &&label$9896,
       &&label$9897,
       &&label$9898,
       &&label$9899,
       &&label$9900,
       &&label$9901,
       &&label$9902,
       &&label$9903,
       &&label$9904,
       &&label$9905,
       &&label$9906,
       &&label$9907,
       &&label$9908,
       &&label$9909,
       &&label$9910,
       &&label$9911,
       &&label$9912,
       &&label$9913,
       &&label$9914,
       &&label$9915,
       &&label$9916,
       &&label$9917,
       &&label$9918,
       &&label$9919,
       &&label$9920,
       &&label$9921,
       &&label$9922,
       &&label$9923,
       &&label$9924,
       &&label$9925,
       &&label$9926,
       &&label$9927,
       &&label$9928,
       &&label$9929,
       &&label$9930,
       &&label$9931,
       &&label$9932,
       &&label$9933,
       &&label$9934,
       &&label$9935,
       &&label$9936,
       &&label$9937,
       &&label$9938,
       &&label$9939,
       &&label$9940,
       &&label$9941,
       &&label$9942,
       &&label$9943,
       &&label$9944,
       &&label$9945,
       &&label$9946,
       &&label$9947,
       &&label$9948,
       &&label$9949,
       &&label$9950,
       &&label$9951,
       &&label$9952,
       &&label$9953,
       &&label$9954,
       &&label$9955,
       &&label$9956,
       &&label$9957,
       &&label$9958,
       &&label$9959,
       &&label$9960,
       &&label$9961,
       &&label$9962,
       &&label$9963,
       &&label$9964,
       &&label$9965,
       &&label$9966,
       &&label$9967,
       &&label$9968,
       &&label$9969,
       &&label$9970,
       &&label$9971,
       &&label$9972,
       &&label$9973,
       &&label$9974,
       &&label$9975,
       &&label$9976,
       &&label$9977,
       &&label$9978,
       &&label$9979,
       &&label$9980,
       &&label$9981,
       &&label$9982,
       &&label$9983,
       &&label$9984,
       &&label$9985,
       &&label$9986,
       &&label$9987,
       &&label$9988,
       &&label$9989,
       &&label$9990,
       &&label$9991,
       &&label$9992,
       &&label$9993,
       &&label$9994,
       &&label$9995,
       &&label$9996,
       &&label$9997,
       &&label$9998,
       &&label$9999,
       &&label$10000,
       &&label$10001,
       &&label$10002,
       &&label$10003,
       &&label$10004,
       &&label$10005,
       &&label$10006,
       &&label$10007,
       &&label$10008,
       &&label$10009,
       &&label$10010,
       &&label$10011,
       &&label$10012,
       &&label$10013,
       &&label$10014,
       &&label$10015,
       &&label$10016,
       &&label$10017,
       &&label$10018,
       &&label$10019,
       &&label$10020,
       &&label$10021,
       &&label$10022,
       &&label$10023,
       &&label$10024,
       &&label$10025,
       &&label$10026,
       &&label$10027,
       &&label$10028,
       &&label$10029,
       &&label$10030,
       &&label$10031,
       &&label$10032,
       &&label$10033,
       &&label$10034,
       &&label$10035,
       &&label$10036,
       &&label$10037,
       &&label$10038,
       &&label$10039,
       &&label$10040,
       &&label$10041,
       &&label$10042,
       &&label$10043,
       &&label$10044,
       &&label$10045,
       &&label$10046,
       &&label$10047,
       &&label$10048,
       &&label$10049,
       &&label$10050,
       &&label$10051,
       &&label$10052,
       &&label$10053,
       &&label$10054,
       &&label$10055,
       &&label$10056,
       &&label$10057,
       &&label$10058,
       &&label$10059,
       &&label$10060,
       &&label$10061,
       &&label$10062,
       &&label$10063,
       &&label$10064,
       &&label$10065,
       &&label$10066,
       &&label$10067,
       &&label$10068,
       &&label$10069,
       &&label$10070,
       &&label$10071,
       &&label$10072,
       &&label$10073,
       &&label$10074,
       &&label$10075,
       &&label$10076,
       &&label$10077,
       &&label$10078,
       &&label$10079,
       &&label$10080,
       &&label$10081,
       &&label$10082,
       &&label$10083,
       &&label$10084,
       &&label$10085,
       &&label$10086,
       &&label$10087,
       &&label$10088,
       &&label$10089,
       &&label$10090,
       &&label$10091,
       &&label$10092,
       &&label$10093,
       &&label$10094,
       &&label$10095,
       &&label$10096,
       &&label$10097,
       &&label$10098,
       &&label$10099,
       &&label$10100,
       &&label$10101,
       &&label$10102,
       &&label$10103,
       &&label$10104,
       &&label$10105,
       &&label$10106,
       &&label$10107,
       &&label$10108,
       &&label$10109,
       &&label$10110,
       &&label$10111,
       &&label$10112,
       &&label$10113,
       &&label$10114,
       &&label$10115,
       &&label$10116,
       &&label$10117,
       &&label$10118,
       &&label$10119,
       &&label$10120,
       &&label$10121,
       &&label$10122,
       &&label$10123,
       &&label$10124,
       &&label$10125,
       &&label$10126,
       &&label$10127,
       &&label$10128,
       &&label$10129,
       &&label$10130,
       &&label$10131,
       &&label$10132,
       &&label$10133,
       &&label$10134,
       &&label$10135,
       &&label$10136,
       &&label$10137,
       &&label$10138,
       &&label$10139,
       &&label$10140,
       &&label$10141,
       &&label$10142,
       &&label$10143,
       &&label$10144,
       &&label$10145,
       &&label$10146,
       &&label$10147,
       &&label$10148,
       &&label$10149,
       &&label$10150,
       &&label$10151,
      };
      if( TMP$3511$6 > 255ull ) goto label$9894;
      goto *tmp$5393[TMP$3511$6 - 0ull];
      label$9894:;
     }
    }
    goto label$9561;
    label$10152:;
    {
     {
      uint64 TMP$3764$6;
      TMP$3764$6 = ((uint64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394968ll) ));
      goto label$10154;
      label$10155:;
      {
       FBSTRING* vr$7398 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394968ll) );
       fb_PrintString( 1, (FBSTRING*)vr$7398, 0 );
      }
      goto label$10153;
      label$10156:;
      {
       FBSTRING* vr$7399 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394968ll) );
       fb_PrintString( 1, (FBSTRING*)vr$7399, 1 );
      }
      goto label$10153;
      label$10157:;
      {
       FBSTRING* vr$7402 = fb_DoubleToStr( -(*(double*)((int64)(double*)MEM64$ + 394968ll)) + 0x0p+0 );
       fb_PrintString( 1, (FBSTRING*)vr$7402, 0 );
      }
      goto label$10153;
      label$10158:;
      {
       FBSTRING* vr$7405 = fb_DoubleToStr( -(*(double*)((int64)(double*)MEM64$ + 394968ll)) + 0x0p+0 );
       fb_PrintString( 1, (FBSTRING*)vr$7405, 1 );
      }
      goto label$10153;
      label$10159:;
      {
       FBSTRING* vr$7406 = fb_StrAllocTempDescZEx( (uint8*)"\x0D\x0A", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7406, 1 );
      }
      goto label$10153;
      label$10160:;
      {
       FBSTRING* vr$7408 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394968ll) * 0x1.999999999999Ap-4 );
       fb_PrintString( 1, (FBSTRING*)vr$7408, 0 );
      }
      goto label$10153;
      label$10161:;
      {
       FBSTRING* vr$7410 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394968ll) * 0x1.999999999999Ap-4 );
       fb_PrintString( 1, (FBSTRING*)vr$7410, 1 );
      }
      goto label$10153;
      label$10162:;
      {
       FBSTRING* vr$7412 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394968ll) * 0x1.47AE147AE147Bp-7 );
       fb_PrintString( 1, (FBSTRING*)vr$7412, 0 );
      }
      goto label$10153;
      label$10163:;
      {
       FBSTRING* vr$7414 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394968ll) * 0x1.47AE147AE147Bp-7 );
       fb_PrintString( 1, (FBSTRING*)vr$7414, 1 );
      }
      goto label$10153;
      label$10164:;
      {
       FBSTRING* vr$7416 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394968ll) * 0x1.0624DD2F1A9FCp-10 );
       fb_PrintString( 1, (FBSTRING*)vr$7416, 0 );
      }
      goto label$10153;
      label$10165:;
      {
       FBSTRING* vr$7418 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394968ll) * 0x1.0624DD2F1A9FCp-10 );
       fb_PrintString( 1, (FBSTRING*)vr$7418, 1 );
      }
      goto label$10153;
      label$10154:;
      static const void* tmp$5394[11ll] = {
       &&label$10155,
       &&label$10156,
       &&label$10157,
       &&label$10158,
       &&label$10159,
       &&label$10160,
       &&label$10161,
       &&label$10162,
       &&label$10163,
       &&label$10164,
       &&label$10165,
      };
      if( TMP$3764$6 > 10ull ) goto label$10153;
      goto *tmp$5394[TMP$3764$6 - 0ull];
      label$10153:;
     }
    }
    goto label$9561;
    label$10166:;
    {
     FBSTRING* vr$7420 = fb_CHR( 1, ((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394968ll) )) );
     fb_StrAssign( (void*)&MSG$, -1ll, (void*)vr$7420, -1ll, 0 );
     fb_PrintString( 1, (FBSTRING*)&MSG$, 0 );
     fb_StrAssign( (void*)&MSG$, -1ll, (void*)"", 1ll, 0 );
    }
    goto label$9561;
    label$10167:;
    {
     FBSTRING* vr$7422 = fb_CHR( 1, ((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394968ll) )) );
     fb_StrAssign( (void*)&MSG$, -1ll, (void*)vr$7422, -1ll, 0 );
     fb_PrintString( 1, (FBSTRING*)&MSG$, 1 );
     fb_StrAssign( (void*)&MSG$, -1ll, (void*)"", 1ll, 0 );
    }
    goto label$9561;
    label$10168:;
    {
     FBSTRING* vr$7423 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394968ll) );
     fb_StrAssign( (void*)&MSG$, -1ll, (void*)vr$7423, -1ll, 0 );
     fb_PrintString( 1, (FBSTRING*)&MSG$, 0 );
     fb_StrAssign( (void*)&MSG$, -1ll, (void*)"", 1ll, 0 );
    }
    goto label$9561;
    label$10169:;
    {
     FBSTRING* vr$7424 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394968ll) );
     fb_StrAssign( (void*)&MSG$, -1ll, (void*)vr$7424, -1ll, 0 );
     fb_PrintString( 1, (FBSTRING*)&MSG$, 1 );
     fb_StrAssign( (void*)&MSG$, -1ll, (void*)"", 1ll, 0 );
    }
    goto label$9561;
    label$10170:;
    {
     FBSTRING* vr$7426 = fb_HEX_l( ((uint64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394968ll) )) );
     fb_StrAssign( (void*)&MSG$, -1ll, (void*)vr$7426, -1ll, 0 );
     fb_PrintString( 1, (FBSTRING*)&MSG$, 0 );
     fb_StrAssign( (void*)&MSG$, -1ll, (void*)"", 1ll, 0 );
    }
    goto label$9561;
    label$10171:;
    {
     FBSTRING* vr$7428 = fb_HEX_l( ((uint64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394968ll) )) );
     fb_StrAssign( (void*)&MSG$, -1ll, (void*)vr$7428, -1ll, 0 );
     fb_PrintString( 1, (FBSTRING*)&MSG$, 1 );
     fb_StrAssign( (void*)&MSG$, -1ll, (void*)"", 1ll, 0 );
    }
    goto label$9561;
    label$10172:;
    {
     {
      uint64 TMP$3767$6;
      TMP$3767$6 = ((uint64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394968ll) ));
      goto label$10174;
      label$10175:;
      {
       FBSTRING TMP$3771$7;
       FBSTRING TMP$3772$7;
       FBSTRING* vr$7430 = fb_StrAllocTempDescZEx( (uint8*)"CHARS.INC", 9ll );
       FBSTRING* vr$7431 = fb_StrLcase2( (FBSTRING*)vr$7430, 0 );
       __builtin_memset( &TMP$3771$7, 0, 24ll );
       FBSTRING* vr$7434 = fb_StrConcat( &TMP$3771$7, (void*)"#include \x0D", 11ll, (void*)vr$7431, -1ll );
       __builtin_memset( &TMP$3772$7, 0, 24ll );
       FBSTRING* vr$7437 = fb_StrConcat( &TMP$3772$7, (void*)vr$7434, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7437, 1 );
      }
      goto label$10173;
      label$10176:;
      {
       FBSTRING TMP$3774$7;
       FBSTRING TMP$3775$7;
       FBSTRING* vr$7438 = fb_StrAllocTempDescZEx( (uint8*)"COLORS.INC", 10ll );
       FBSTRING* vr$7439 = fb_StrLcase2( (FBSTRING*)vr$7438, 0 );
       __builtin_memset( &TMP$3774$7, 0, 24ll );
       FBSTRING* vr$7442 = fb_StrConcat( &TMP$3774$7, (void*)"#include \x0D", 11ll, (void*)vr$7439, -1ll );
       __builtin_memset( &TMP$3775$7, 0, 24ll );
       FBSTRING* vr$7445 = fb_StrConcat( &TMP$3775$7, (void*)vr$7442, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7445, 1 );
      }
      goto label$10173;
      label$10177:;
      {
       FBSTRING TMP$3777$7;
       FBSTRING TMP$3778$7;
       FBSTRING* vr$7446 = fb_StrAllocTempDescZEx( (uint8*)"CONSTS.INC", 10ll );
       FBSTRING* vr$7447 = fb_StrLcase2( (FBSTRING*)vr$7446, 0 );
       __builtin_memset( &TMP$3777$7, 0, 24ll );
       FBSTRING* vr$7450 = fb_StrConcat( &TMP$3777$7, (void*)"#include \x0D", 11ll, (void*)vr$7447, -1ll );
       __builtin_memset( &TMP$3778$7, 0, 24ll );
       FBSTRING* vr$7453 = fb_StrConcat( &TMP$3778$7, (void*)vr$7450, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7453, 1 );
      }
      goto label$10173;
      label$10178:;
      {
       FBSTRING TMP$3780$7;
       FBSTRING TMP$3781$7;
       FBSTRING* vr$7454 = fb_StrAllocTempDescZEx( (uint8*)"DEBUG.INC", 9ll );
       FBSTRING* vr$7455 = fb_StrLcase2( (FBSTRING*)vr$7454, 0 );
       __builtin_memset( &TMP$3780$7, 0, 24ll );
       FBSTRING* vr$7458 = fb_StrConcat( &TMP$3780$7, (void*)"#include \x0D", 11ll, (void*)vr$7455, -1ll );
       __builtin_memset( &TMP$3781$7, 0, 24ll );
       FBSTRING* vr$7461 = fb_StrConcat( &TMP$3781$7, (void*)vr$7458, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7461, 1 );
      }
      goto label$10173;
      label$10179:;
      {
       FBSTRING TMP$3783$7;
       FBSTRING TMP$3784$7;
       FBSTRING* vr$7462 = fb_StrAllocTempDescZEx( (uint8*)"FINISH.INC", 10ll );
       FBSTRING* vr$7463 = fb_StrLcase2( (FBSTRING*)vr$7462, 0 );
       __builtin_memset( &TMP$3783$7, 0, 24ll );
       FBSTRING* vr$7466 = fb_StrConcat( &TMP$3783$7, (void*)"#include \x0D", 11ll, (void*)vr$7463, -1ll );
       __builtin_memset( &TMP$3784$7, 0, 24ll );
       FBSTRING* vr$7469 = fb_StrConcat( &TMP$3784$7, (void*)vr$7466, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7469, 1 );
      }
      goto label$10173;
      label$10180:;
      {
       FBSTRING TMP$3786$7;
       FBSTRING TMP$3787$7;
       FBSTRING* vr$7470 = fb_StrAllocTempDescZEx( (uint8*)"GLASS.INC", 9ll );
       FBSTRING* vr$7471 = fb_StrLcase2( (FBSTRING*)vr$7470, 0 );
       __builtin_memset( &TMP$3786$7, 0, 24ll );
       FBSTRING* vr$7474 = fb_StrConcat( &TMP$3786$7, (void*)"#include \x0D", 11ll, (void*)vr$7471, -1ll );
       __builtin_memset( &TMP$3787$7, 0, 24ll );
       FBSTRING* vr$7477 = fb_StrConcat( &TMP$3787$7, (void*)vr$7474, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7477, 1 );
      }
      goto label$10173;
      label$10181:;
      {
       FBSTRING TMP$3789$7;
       FBSTRING TMP$3790$7;
       FBSTRING* vr$7478 = fb_StrAllocTempDescZEx( (uint8*)"GOLDS.INC", 9ll );
       FBSTRING* vr$7479 = fb_StrLcase2( (FBSTRING*)vr$7478, 0 );
       __builtin_memset( &TMP$3789$7, 0, 24ll );
       FBSTRING* vr$7482 = fb_StrConcat( &TMP$3789$7, (void*)"#include \x0D", 11ll, (void*)vr$7479, -1ll );
       __builtin_memset( &TMP$3790$7, 0, 24ll );
       FBSTRING* vr$7485 = fb_StrConcat( &TMP$3790$7, (void*)vr$7482, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7485, 1 );
      }
      goto label$10173;
      label$10182:;
      {
       FBSTRING TMP$3792$7;
       FBSTRING TMP$3793$7;
       FBSTRING* vr$7486 = fb_StrAllocTempDescZEx( (uint8*)"METALS.INC", 10ll );
       FBSTRING* vr$7487 = fb_StrLcase2( (FBSTRING*)vr$7486, 0 );
       __builtin_memset( &TMP$3792$7, 0, 24ll );
       FBSTRING* vr$7490 = fb_StrConcat( &TMP$3792$7, (void*)"#include \x0D", 11ll, (void*)vr$7487, -1ll );
       __builtin_memset( &TMP$3793$7, 0, 24ll );
       FBSTRING* vr$7493 = fb_StrConcat( &TMP$3793$7, (void*)vr$7490, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7493, 1 );
      }
      goto label$10173;
      label$10183:;
      {
       FBSTRING TMP$3795$7;
       FBSTRING TMP$3796$7;
       FBSTRING* vr$7494 = fb_StrAllocTempDescZEx( (uint8*)"RAD_DEF.INC", 11ll );
       FBSTRING* vr$7495 = fb_StrLcase2( (FBSTRING*)vr$7494, 0 );
       __builtin_memset( &TMP$3795$7, 0, 24ll );
       FBSTRING* vr$7498 = fb_StrConcat( &TMP$3795$7, (void*)"#include \x0D", 11ll, (void*)vr$7495, -1ll );
       __builtin_memset( &TMP$3796$7, 0, 24ll );
       FBSTRING* vr$7501 = fb_StrConcat( &TMP$3796$7, (void*)vr$7498, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7501, 1 );
      }
      goto label$10173;
      label$10184:;
      {
       FBSTRING TMP$3798$7;
       FBSTRING TMP$3799$7;
       FBSTRING* vr$7502 = fb_StrAllocTempDescZEx( (uint8*)"SHAPES2.INC", 11ll );
       FBSTRING* vr$7503 = fb_StrLcase2( (FBSTRING*)vr$7502, 0 );
       __builtin_memset( &TMP$3798$7, 0, 24ll );
       FBSTRING* vr$7506 = fb_StrConcat( &TMP$3798$7, (void*)"#include \x0D", 11ll, (void*)vr$7503, -1ll );
       __builtin_memset( &TMP$3799$7, 0, 24ll );
       FBSTRING* vr$7509 = fb_StrConcat( &TMP$3799$7, (void*)vr$7506, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7509, 1 );
      }
      goto label$10173;
      label$10185:;
      {
       FBSTRING TMP$3801$7;
       FBSTRING TMP$3802$7;
       FBSTRING* vr$7510 = fb_StrAllocTempDescZEx( (uint8*)"SHAPES.INC", 10ll );
       FBSTRING* vr$7511 = fb_StrLcase2( (FBSTRING*)vr$7510, 0 );
       __builtin_memset( &TMP$3801$7, 0, 24ll );
       FBSTRING* vr$7514 = fb_StrConcat( &TMP$3801$7, (void*)"#include \x0D", 11ll, (void*)vr$7511, -1ll );
       __builtin_memset( &TMP$3802$7, 0, 24ll );
       FBSTRING* vr$7517 = fb_StrConcat( &TMP$3802$7, (void*)vr$7514, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7517, 1 );
      }
      goto label$10173;
      label$10186:;
      {
       FBSTRING TMP$3804$7;
       FBSTRING TMP$3805$7;
       FBSTRING* vr$7518 = fb_StrAllocTempDescZEx( (uint8*)"SHAPESQ.INC", 11ll );
       FBSTRING* vr$7519 = fb_StrLcase2( (FBSTRING*)vr$7518, 0 );
       __builtin_memset( &TMP$3804$7, 0, 24ll );
       FBSTRING* vr$7522 = fb_StrConcat( &TMP$3804$7, (void*)"#include \x0D", 11ll, (void*)vr$7519, -1ll );
       __builtin_memset( &TMP$3805$7, 0, 24ll );
       FBSTRING* vr$7525 = fb_StrConcat( &TMP$3805$7, (void*)vr$7522, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7525, 1 );
      }
      goto label$10173;
      label$10187:;
      {
       FBSTRING TMP$3807$7;
       FBSTRING TMP$3808$7;
       FBSTRING* vr$7526 = fb_StrAllocTempDescZEx( (uint8*)"SKIES.INC", 9ll );
       FBSTRING* vr$7527 = fb_StrLcase2( (FBSTRING*)vr$7526, 0 );
       __builtin_memset( &TMP$3807$7, 0, 24ll );
       FBSTRING* vr$7530 = fb_StrConcat( &TMP$3807$7, (void*)"#include \x0D", 11ll, (void*)vr$7527, -1ll );
       __builtin_memset( &TMP$3808$7, 0, 24ll );
       FBSTRING* vr$7533 = fb_StrConcat( &TMP$3808$7, (void*)vr$7530, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7533, 1 );
      }
      goto label$10173;
      label$10188:;
      {
       FBSTRING TMP$3810$7;
       FBSTRING TMP$3811$7;
       FBSTRING* vr$7534 = fb_StrAllocTempDescZEx( (uint8*)"STAGE1.INC", 10ll );
       FBSTRING* vr$7535 = fb_StrLcase2( (FBSTRING*)vr$7534, 0 );
       __builtin_memset( &TMP$3810$7, 0, 24ll );
       FBSTRING* vr$7538 = fb_StrConcat( &TMP$3810$7, (void*)"#include \x0D", 11ll, (void*)vr$7535, -1ll );
       __builtin_memset( &TMP$3811$7, 0, 24ll );
       FBSTRING* vr$7541 = fb_StrConcat( &TMP$3811$7, (void*)vr$7538, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7541, 1 );
      }
      goto label$10173;
      label$10189:;
      {
       FBSTRING TMP$3813$7;
       FBSTRING TMP$3814$7;
       FBSTRING* vr$7542 = fb_StrAllocTempDescZEx( (uint8*)"STARS.INC", 9ll );
       FBSTRING* vr$7543 = fb_StrLcase2( (FBSTRING*)vr$7542, 0 );
       __builtin_memset( &TMP$3813$7, 0, 24ll );
       FBSTRING* vr$7546 = fb_StrConcat( &TMP$3813$7, (void*)"#include \x0D", 11ll, (void*)vr$7543, -1ll );
       __builtin_memset( &TMP$3814$7, 0, 24ll );
       FBSTRING* vr$7549 = fb_StrConcat( &TMP$3814$7, (void*)vr$7546, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7549, 1 );
      }
      goto label$10173;
      label$10190:;
      {
       FBSTRING TMP$3816$7;
       FBSTRING TMP$3817$7;
       FBSTRING* vr$7550 = fb_StrAllocTempDescZEx( (uint8*)"STDCAM.INC", 10ll );
       FBSTRING* vr$7551 = fb_StrLcase2( (FBSTRING*)vr$7550, 0 );
       __builtin_memset( &TMP$3816$7, 0, 24ll );
       FBSTRING* vr$7554 = fb_StrConcat( &TMP$3816$7, (void*)"#include \x0D", 11ll, (void*)vr$7551, -1ll );
       __builtin_memset( &TMP$3817$7, 0, 24ll );
       FBSTRING* vr$7557 = fb_StrConcat( &TMP$3817$7, (void*)vr$7554, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7557, 1 );
      }
      goto label$10173;
      label$10191:;
      {
       FBSTRING TMP$3819$7;
       FBSTRING TMP$3820$7;
       FBSTRING* vr$7558 = fb_StrAllocTempDescZEx( (uint8*)"STONEOLD.INC", 12ll );
       FBSTRING* vr$7559 = fb_StrLcase2( (FBSTRING*)vr$7558, 0 );
       __builtin_memset( &TMP$3819$7, 0, 24ll );
       FBSTRING* vr$7562 = fb_StrConcat( &TMP$3819$7, (void*)"#include \x0D", 11ll, (void*)vr$7559, -1ll );
       __builtin_memset( &TMP$3820$7, 0, 24ll );
       FBSTRING* vr$7565 = fb_StrConcat( &TMP$3820$7, (void*)vr$7562, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7565, 1 );
      }
      goto label$10173;
      label$10192:;
      {
       FBSTRING TMP$3822$7;
       FBSTRING TMP$3823$7;
       FBSTRING* vr$7566 = fb_StrAllocTempDescZEx( (uint8*)"STONES1.INC", 11ll );
       FBSTRING* vr$7567 = fb_StrLcase2( (FBSTRING*)vr$7566, 0 );
       __builtin_memset( &TMP$3822$7, 0, 24ll );
       FBSTRING* vr$7570 = fb_StrConcat( &TMP$3822$7, (void*)"#include \x0D", 11ll, (void*)vr$7567, -1ll );
       __builtin_memset( &TMP$3823$7, 0, 24ll );
       FBSTRING* vr$7573 = fb_StrConcat( &TMP$3823$7, (void*)vr$7570, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7573, 1 );
      }
      goto label$10173;
      label$10193:;
      {
       FBSTRING TMP$3825$7;
       FBSTRING TMP$3826$7;
       FBSTRING* vr$7574 = fb_StrAllocTempDescZEx( (uint8*)"STONES2.INC", 11ll );
       FBSTRING* vr$7575 = fb_StrLcase2( (FBSTRING*)vr$7574, 0 );
       __builtin_memset( &TMP$3825$7, 0, 24ll );
       FBSTRING* vr$7578 = fb_StrConcat( &TMP$3825$7, (void*)"#include \x0D", 11ll, (void*)vr$7575, -1ll );
       __builtin_memset( &TMP$3826$7, 0, 24ll );
       FBSTRING* vr$7581 = fb_StrConcat( &TMP$3826$7, (void*)vr$7578, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7581, 1 );
      }
      goto label$10173;
      label$10194:;
      {
       FBSTRING TMP$3828$7;
       FBSTRING TMP$3829$7;
       FBSTRING* vr$7582 = fb_StrAllocTempDescZEx( (uint8*)"STONES.INC", 10ll );
       FBSTRING* vr$7583 = fb_StrLcase2( (FBSTRING*)vr$7582, 0 );
       __builtin_memset( &TMP$3828$7, 0, 24ll );
       FBSTRING* vr$7586 = fb_StrConcat( &TMP$3828$7, (void*)"#include \x0D", 11ll, (void*)vr$7583, -1ll );
       __builtin_memset( &TMP$3829$7, 0, 24ll );
       FBSTRING* vr$7589 = fb_StrConcat( &TMP$3829$7, (void*)vr$7586, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7589, 1 );
      }
      goto label$10173;
      label$10195:;
      {
       FBSTRING TMP$3831$7;
       FBSTRING TMP$3832$7;
       FBSTRING* vr$7590 = fb_StrAllocTempDescZEx( (uint8*)"TEXTURES.INC", 12ll );
       FBSTRING* vr$7591 = fb_StrLcase2( (FBSTRING*)vr$7590, 0 );
       __builtin_memset( &TMP$3831$7, 0, 24ll );
       FBSTRING* vr$7594 = fb_StrConcat( &TMP$3831$7, (void*)"#include \x0D", 11ll, (void*)vr$7591, -1ll );
       __builtin_memset( &TMP$3832$7, 0, 24ll );
       FBSTRING* vr$7597 = fb_StrConcat( &TMP$3832$7, (void*)vr$7594, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7597, 1 );
      }
      goto label$10173;
      label$10196:;
      {
       FBSTRING TMP$3834$7;
       FBSTRING TMP$3835$7;
       FBSTRING* vr$7598 = fb_StrAllocTempDescZEx( (uint8*)"WOODMAPS.INC", 12ll );
       FBSTRING* vr$7599 = fb_StrLcase2( (FBSTRING*)vr$7598, 0 );
       __builtin_memset( &TMP$3834$7, 0, 24ll );
       FBSTRING* vr$7602 = fb_StrConcat( &TMP$3834$7, (void*)"#include \x0D", 11ll, (void*)vr$7599, -1ll );
       __builtin_memset( &TMP$3835$7, 0, 24ll );
       FBSTRING* vr$7605 = fb_StrConcat( &TMP$3835$7, (void*)vr$7602, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7605, 1 );
      }
      goto label$10173;
      label$10197:;
      {
       FBSTRING TMP$3837$7;
       FBSTRING TMP$3838$7;
       FBSTRING* vr$7606 = fb_StrAllocTempDescZEx( (uint8*)"WOODS.INC", 9ll );
       FBSTRING* vr$7607 = fb_StrLcase2( (FBSTRING*)vr$7606, 0 );
       __builtin_memset( &TMP$3837$7, 0, 24ll );
       FBSTRING* vr$7610 = fb_StrConcat( &TMP$3837$7, (void*)"#include \x0D", 11ll, (void*)vr$7607, -1ll );
       __builtin_memset( &TMP$3838$7, 0, 24ll );
       FBSTRING* vr$7613 = fb_StrConcat( &TMP$3838$7, (void*)vr$7610, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7613, 1 );
      }
      goto label$10173;
      label$10174:;
      static const void* tmp$5395[23ll] = {
       &&label$10175,
       &&label$10176,
       &&label$10177,
       &&label$10178,
       &&label$10179,
       &&label$10180,
       &&label$10181,
       &&label$10182,
       &&label$10183,
       &&label$10184,
       &&label$10185,
       &&label$10186,
       &&label$10187,
       &&label$10188,
       &&label$10189,
       &&label$10190,
       &&label$10191,
       &&label$10192,
       &&label$10193,
       &&label$10194,
       &&label$10195,
       &&label$10196,
       &&label$10197,
      };
      if( TMP$3767$6 > 22ull ) goto label$10173;
      goto *tmp$5395[TMP$3767$6 - 0ull];
      label$10173:;
     }
    }
    goto label$9561;
    label$10198:;
    {
     {
      uint64 TMP$3839$6;
      TMP$3839$6 = ((uint64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394968ll) ));
      goto label$10200;
      label$10201:;
      {
       FBSTRING* vr$7615 = fb_StrAllocTempDescZEx( (uint8*)"gosub", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7615, 0 );
      }
      goto label$10199;
      label$10202:;
      {
       FBSTRING* vr$7616 = fb_StrAllocTempDescZEx( (uint8*)"goto", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7616, 0 );
      }
      goto label$10199;
      label$10203:;
      {
       FBSTRING* vr$7617 = fb_StrAllocTempDescZEx( (uint8*)"gradient", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7617, 0 );
      }
      goto label$10199;
      label$10204:;
      {
       FBSTRING* vr$7618 = fb_StrAllocTempDescZEx( (uint8*)"granite", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7618, 0 );
      }
      goto label$10199;
      label$10205:;
      {
       FBSTRING* vr$7619 = fb_StrAllocTempDescZEx( (uint8*)"gray", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7619, 0 );
      }
      goto label$10199;
      label$10206:;
      {
       FBSTRING* vr$7620 = fb_StrAllocTempDescZEx( (uint8*)"gray_threshold", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$7620, 0 );
      }
      goto label$10199;
      label$10207:;
      {
       FBSTRING* vr$7621 = fb_StrAllocTempDescZEx( (uint8*)"greateeq", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7621, 0 );
      }
      goto label$10199;
      label$10208:;
      {
       FBSTRING* vr$7622 = fb_StrAllocTempDescZEx( (uint8*)"greater", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7622, 0 );
      }
      goto label$10199;
      label$10209:;
      {
       FBSTRING* vr$7623 = fb_StrAllocTempDescZEx( (uint8*)"green", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7623, 0 );
      }
      goto label$10199;
      label$10210:;
      {
       FBSTRING* vr$7624 = fb_StrAllocTempDescZEx( (uint8*)"group", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7624, 0 );
      }
      goto label$10199;
      label$10211:;
      {
       FBSTRING* vr$7625 = fb_StrAllocTempDescZEx( (uint8*)"group_by", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7625, 0 );
      }
      goto label$10199;
      label$10212:;
      {
       FBSTRING* vr$7626 = fb_StrAllocTempDescZEx( (uint8*)"h", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$7626, 0 );
      }
      goto label$10199;
      label$10213:;
      {
       FBSTRING* vr$7627 = fb_StrAllocTempDescZEx( (uint8*)"half", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7627, 0 );
      }
      goto label$10199;
      label$10214:;
      {
       FBSTRING* vr$7628 = fb_StrAllocTempDescZEx( (uint8*)"hash", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7628, 0 );
      }
      goto label$10199;
      label$10215:;
      {
       FBSTRING* vr$7629 = fb_StrAllocTempDescZEx( (uint8*)"hashnoise", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7629, 0 );
      }
      goto label$10199;
      label$10216:;
      {
       FBSTRING* vr$7630 = fb_StrAllocTempDescZEx( (uint8*)"having", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7630, 0 );
      }
      goto label$10199;
      label$10217:;
      {
       FBSTRING* vr$7631 = fb_StrAllocTempDescZEx( (uint8*)"header", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7631, 0 );
      }
      goto label$10199;
      label$10218:;
      {
       FBSTRING* vr$7632 = fb_StrAllocTempDescZEx( (uint8*)"heading", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7632, 0 );
      }
      goto label$10199;
      label$10219:;
      {
       FBSTRING* vr$7633 = fb_StrAllocTempDescZEx( (uint8*)"height_field", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$7633, 0 );
      }
      goto label$10199;
      label$10220:;
      {
       FBSTRING* vr$7634 = fb_StrAllocTempDescZEx( (uint8*)"henyey_greenstein", 17ll );
       fb_PrintString( 1, (FBSTRING*)vr$7634, 0 );
      }
      goto label$10199;
      label$10221:;
      {
       FBSTRING* vr$7635 = fb_StrAllocTempDescZEx( (uint8*)"hex", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7635, 0 );
      }
      goto label$10199;
      label$10222:;
      {
       FBSTRING* vr$7636 = fb_StrAllocTempDescZEx( (uint8*)"hexagon", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7636, 0 );
      }
      goto label$10199;
      label$10223:;
      {
       FBSTRING* vr$7637 = fb_StrAllocTempDescZEx( (uint8*)"hf_gray_16", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7637, 0 );
      }
      goto label$10199;
      label$10224:;
      {
       FBSTRING* vr$7638 = fb_StrAllocTempDescZEx( (uint8*)"hierarchy", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7638, 0 );
      }
      goto label$10199;
      label$10225:;
      {
       FBSTRING* vr$7639 = fb_StrAllocTempDescZEx( (uint8*)"highp", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7639, 0 );
      }
      goto label$10199;
      label$10226:;
      {
       FBSTRING* vr$7640 = fb_StrAllocTempDescZEx( (uint8*)"high-value", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7640, 0 );
      }
      goto label$10199;
      label$10227:;
      {
       FBSTRING* vr$7641 = fb_StrAllocTempDescZEx( (uint8*)"high-values", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7641, 0 );
      }
      goto label$10199;
      label$10228:;
      {
       FBSTRING* vr$7642 = fb_StrAllocTempDescZEx( (uint8*)"hintend", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7642, 0 );
      }
      goto label$10199;
      label$10229:;
      {
       FBSTRING* vr$7643 = fb_StrAllocTempDescZEx( (uint8*)"hint_error", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7643, 0 );
      }
      goto label$10199;
      label$10230:;
      {
       FBSTRING* vr$7644 = fb_StrAllocTempDescZEx( (uint8*)"hintstart", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7644, 0 );
      }
      goto label$10199;
      label$10231:;
      {
       FBSTRING* vr$7645 = fb_StrAllocTempDescZEx( (uint8*)"holdout", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7645, 0 );
      }
      goto label$10199;
      label$10232:;
      {
       FBSTRING* vr$7646 = fb_StrAllocTempDescZEx( (uint8*)"hollow", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7646, 0 );
      }
      goto label$10199;
      label$10233:;
      {
       FBSTRING* vr$7647 = fb_StrAllocTempDescZEx( (uint8*)"hour", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7647, 0 );
      }
      goto label$10199;
      label$10234:;
      {
       FBSTRING* vr$7648 = fb_StrAllocTempDescZEx( (uint8*)"hvec2", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7648, 0 );
      }
      goto label$10199;
      label$10235:;
      {
       FBSTRING* vr$7649 = fb_StrAllocTempDescZEx( (uint8*)"hvec3", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7649, 0 );
      }
      goto label$10199;
      label$10236:;
      {
       FBSTRING* vr$7650 = fb_StrAllocTempDescZEx( (uint8*)"hvec4", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7650, 0 );
      }
      goto label$10199;
      label$10237:;
      {
       FBSTRING* vr$7651 = fb_StrAllocTempDescZEx( (uint8*)"hypercomplex", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$7651, 0 );
      }
      goto label$10199;
      label$10238:;
      {
       FBSTRING* vr$7652 = fb_StrAllocTempDescZEx( (uint8*)"hypot", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7652, 0 );
      }
      goto label$10199;
      label$10239:;
      {
       FBSTRING* vr$7653 = fb_StrAllocTempDescZEx( (uint8*)"i", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$7653, 0 );
      }
      goto label$10199;
      label$10240:;
      {
       FBSTRING* vr$7654 = fb_StrAllocTempDescZEx( (uint8*)"iChannel0", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7654, 0 );
      }
      goto label$10199;
      label$10241:;
      {
       FBSTRING* vr$7655 = fb_StrAllocTempDescZEx( (uint8*)"iChannel1", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7655, 0 );
      }
      goto label$10199;
      label$10242:;
      {
       FBSTRING* vr$7656 = fb_StrAllocTempDescZEx( (uint8*)"iChannel2", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7656, 0 );
      }
      goto label$10199;
      label$10243:;
      {
       FBSTRING* vr$7657 = fb_StrAllocTempDescZEx( (uint8*)"iChannel3", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7657, 0 );
      }
      goto label$10199;
      label$10244:;
      {
       FBSTRING* vr$7658 = fb_StrAllocTempDescZEx( (uint8*)"iChannelResolution", 18ll );
       fb_PrintString( 1, (FBSTRING*)vr$7658, 0 );
      }
      goto label$10199;
      label$10245:;
      {
       FBSTRING* vr$7659 = fb_StrAllocTempDescZEx( (uint8*)"iChannelTime", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$7659, 0 );
      }
      goto label$10199;
      label$10246:;
      {
       FBSTRING* vr$7660 = fb_StrAllocTempDescZEx( (uint8*)"iCube", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7660, 0 );
      }
      goto label$10199;
      label$10247:;
      {
       FBSTRING* vr$7661 = fb_StrAllocTempDescZEx( (uint8*)"id", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7661, 0 );
      }
      goto label$10199;
      label$10248:;
      {
       FBSTRING* vr$7662 = fb_StrAllocTempDescZEx( (uint8*)"iDate", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7662, 0 );
      }
      goto label$10199;
      label$10249:;
      {
       FBSTRING* vr$7663 = fb_StrAllocTempDescZEx( (uint8*)"identification", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$7663, 0 );
      }
      goto label$10199;
      label$10250:;
      {
       FBSTRING* vr$7664 = fb_StrAllocTempDescZEx( (uint8*)"if", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7664, 0 );
      }
      goto label$10199;
      label$10251:;
      {
       FBSTRING* vr$7665 = fb_StrAllocTempDescZEx( (uint8*)"ifdef", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7665, 0 );
      }
      goto label$10199;
      label$10252:;
      {
       FBSTRING* vr$7666 = fb_StrAllocTempDescZEx( (uint8*)"ifelse", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7666, 0 );
      }
      goto label$10199;
      label$10253:;
      {
       FBSTRING* vr$7667 = fb_StrAllocTempDescZEx( (uint8*)"iff", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7667, 0 );
      }
      goto label$10199;
      label$10254:;
      {
       FBSTRING* vr$7668 = fb_StrAllocTempDescZEx( (uint8*)"ifndef", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7668, 0 );
      }
      goto label$10199;
      label$10255:;
      {
       FBSTRING* vr$7669 = fb_StrAllocTempDescZEx( (uint8*)"iframe", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7669, 0 );
      }
      goto label$10199;
      label$10256:;
      {
       FBSTRING* vr$7670 = fb_StrAllocTempDescZEx( (uint8*)"iframerate", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7670, 0 );
      }
      goto label$10199;
      label$10257:;
      {
       FBSTRING* vr$7671 = fb_StrAllocTempDescZEx( (uint8*)"iGlobalTime", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7671, 0 );
      }
      goto label$10199;
      label$10258:;
      {
       FBSTRING* vr$7672 = fb_StrAllocTempDescZEx( (uint8*)"iimage1D", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7672, 0 );
      }
      goto label$10199;
      label$10259:;
      {
       FBSTRING* vr$7673 = fb_StrAllocTempDescZEx( (uint8*)"iimage1DArray", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$7673, 0 );
      }
      goto label$10199;
      label$10260:;
      {
       FBSTRING* vr$7674 = fb_StrAllocTempDescZEx( (uint8*)"iimage2D", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7674, 0 );
      }
      goto label$10199;
      label$10261:;
      {
       FBSTRING* vr$7675 = fb_StrAllocTempDescZEx( (uint8*)"iimage2DArray", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$7675, 0 );
      }
      goto label$10199;
      label$10262:;
      {
       FBSTRING* vr$7676 = fb_StrAllocTempDescZEx( (uint8*)"iimage3D", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7676, 0 );
      }
      goto label$10199;
      label$10263:;
      {
       FBSTRING* vr$7677 = fb_StrAllocTempDescZEx( (uint8*)"iimageBuffer", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$7677, 0 );
      }
      goto label$10199;
      label$10264:;
      {
       FBSTRING* vr$7678 = fb_StrAllocTempDescZEx( (uint8*)"iimageCube", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7678, 0 );
      }
      goto label$10199;
      label$10265:;
      {
       FBSTRING* vr$7679 = fb_StrAllocTempDescZEx( (uint8*)"image", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7679, 0 );
      }
      goto label$10199;
      label$10266:;
      {
       FBSTRING* vr$7680 = fb_StrAllocTempDescZEx( (uint8*)"image1D", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7680, 0 );
      }
      goto label$10199;
      label$10267:;
      {
       FBSTRING* vr$7681 = fb_StrAllocTempDescZEx( (uint8*)"image1DArray", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$7681, 0 );
      }
      goto label$10199;
      label$10268:;
      {
       FBSTRING* vr$7682 = fb_StrAllocTempDescZEx( (uint8*)"image1DArrayShadow", 18ll );
       fb_PrintString( 1, (FBSTRING*)vr$7682, 0 );
      }
      goto label$10199;
      label$10269:;
      {
       FBSTRING* vr$7683 = fb_StrAllocTempDescZEx( (uint8*)"image1DShadow", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$7683, 0 );
      }
      goto label$10199;
      label$10270:;
      {
       FBSTRING* vr$7684 = fb_StrAllocTempDescZEx( (uint8*)"image2D", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7684, 0 );
      }
      goto label$10199;
      label$10271:;
      {
       FBSTRING* vr$7685 = fb_StrAllocTempDescZEx( (uint8*)"image2DArray", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$7685, 0 );
      }
      goto label$10199;
      label$10272:;
      {
       FBSTRING* vr$7686 = fb_StrAllocTempDescZEx( (uint8*)"image2DArrayShadow", 18ll );
       fb_PrintString( 1, (FBSTRING*)vr$7686, 0 );
      }
      goto label$10199;
      label$10273:;
      {
       FBSTRING* vr$7687 = fb_StrAllocTempDescZEx( (uint8*)"image2DShadow", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$7687, 0 );
      }
      goto label$10199;
      label$10274:;
      {
       FBSTRING* vr$7688 = fb_StrAllocTempDescZEx( (uint8*)"image3D", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7688, 0 );
      }
      goto label$10199;
      label$10275:;
      {
       FBSTRING* vr$7689 = fb_StrAllocTempDescZEx( (uint8*)"imageBuffer", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7689, 0 );
      }
      goto label$10199;
      label$10276:;
      {
       FBSTRING* vr$7690 = fb_StrAllocTempDescZEx( (uint8*)"imageCube", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7690, 0 );
      }
      goto label$10199;
      label$10277:;
      {
       FBSTRING* vr$7691 = fb_StrAllocTempDescZEx( (uint8*)"image_height", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$7691, 0 );
      }
      goto label$10199;
      label$10278:;
      {
       FBSTRING* vr$7692 = fb_StrAllocTempDescZEx( (uint8*)"image_map", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7692, 0 );
      }
      goto label$10199;
      label$10279:;
      {
       FBSTRING* vr$7693 = fb_StrAllocTempDescZEx( (uint8*)"image_pattern", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$7693, 0 );
      }
      goto label$10199;
      label$10280:;
      {
       FBSTRING* vr$7694 = fb_StrAllocTempDescZEx( (uint8*)"image_width", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7694, 0 );
      }
      goto label$10199;
      label$10281:;
      {
       FBSTRING* vr$7695 = fb_StrAllocTempDescZEx( (uint8*)"imouse", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7695, 0 );
      }
      goto label$10199;
      label$10282:;
      {
       FBSTRING* vr$7696 = fb_StrAllocTempDescZEx( (uint8*)"imp", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7696, 0 );
      }
      goto label$10199;
      label$10283:;
      {
       FBSTRING* vr$7697 = fb_StrAllocTempDescZEx( (uint8*)"implementation", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$7697, 0 );
      }
      goto label$10199;
      label$10284:;
      {
       FBSTRING* vr$7698 = fb_StrAllocTempDescZEx( (uint8*)"import", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7698, 0 );
      }
      goto label$10199;
      label$10285:;
      {
       FBSTRING* vr$7699 = fb_StrAllocTempDescZEx( (uint8*)"in", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7699, 0 );
      }
      goto label$10199;
      label$10286:;
      {
       FBSTRING* vr$7700 = fb_StrAllocTempDescZEx( (uint8*)"include", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7700, 0 );
      }
      goto label$10199;
      label$10287:;
      {
       FBSTRING* vr$7701 = fb_StrAllocTempDescZEx( (uint8*)"index", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7701, 0 );
      }
      goto label$10199;
      label$10288:;
      {
       FBSTRING* vr$7702 = fb_StrAllocTempDescZEx( (uint8*)"indexed", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7702, 0 );
      }
      goto label$10199;
      label$10289:;
      {
       FBSTRING* vr$7703 = fb_StrAllocTempDescZEx( (uint8*)"indicate", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7703, 0 );
      }
      goto label$10199;
      label$10290:;
      {
       FBSTRING* vr$7704 = fb_StrAllocTempDescZEx( (uint8*)"inherited", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7704, 0 );
      }
      goto label$10199;
      label$10291:;
      {
       FBSTRING* vr$7705 = fb_StrAllocTempDescZEx( (uint8*)"inherits", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7705, 0 );
      }
      goto label$10199;
      label$10292:;
      {
       FBSTRING* vr$7706 = fb_StrAllocTempDescZEx( (uint8*)"initial", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7706, 0 );
      }
      goto label$10199;
      label$10293:;
      {
       FBSTRING* vr$7707 = fb_StrAllocTempDescZEx( (uint8*)"initial_clock", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$7707, 0 );
      }
      goto label$10199;
      label$10294:;
      {
       FBSTRING* vr$7708 = fb_StrAllocTempDescZEx( (uint8*)"initial_frame", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$7708, 0 );
      }
      goto label$10199;
      label$10295:;
      {
       FBSTRING* vr$7709 = fb_StrAllocTempDescZEx( (uint8*)"initialization", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$7709, 0 );
      }
      goto label$10199;
      label$10296:;
      {
       FBSTRING* vr$7710 = fb_StrAllocTempDescZEx( (uint8*)"initialize", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7710, 0 );
      }
      goto label$10199;
      label$10297:;
      {
       FBSTRING* vr$7711 = fb_StrAllocTempDescZEx( (uint8*)"initiate", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7711, 0 );
      }
      goto label$10199;
      label$10298:;
      {
       FBSTRING* vr$7712 = fb_StrAllocTempDescZEx( (uint8*)"inkey", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7712, 0 );
      }
      goto label$10199;
      label$10299:;
      {
       FBSTRING* vr$7713 = fb_StrAllocTempDescZEx( (uint8*)"inline", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7713, 0 );
      }
      goto label$10199;
      label$10300:;
      {
       FBSTRING* vr$7714 = fb_StrAllocTempDescZEx( (uint8*)"inlinenoinline", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$7714, 0 );
      }
      goto label$10199;
      label$10301:;
      {
       FBSTRING* vr$7715 = fb_StrAllocTempDescZEx( (uint8*)"in_memory", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7715, 0 );
      }
      goto label$10199;
      label$10302:;
      {
       FBSTRING* vr$7716 = fb_StrAllocTempDescZEx( (uint8*)"inner", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7716, 0 );
      }
      goto label$10199;
      label$10303:;
      {
       FBSTRING* vr$7717 = fb_StrAllocTempDescZEx( (uint8*)"inout", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7717, 0 );
      }
      goto label$10199;
      label$10304:;
      {
       FBSTRING* vr$7718 = fb_StrAllocTempDescZEx( (uint8*)"inp", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7718, 0 );
      }
      goto label$10199;
      label$10305:;
      {
       FBSTRING* vr$7719 = fb_StrAllocTempDescZEx( (uint8*)"input", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7719, 0 );
      }
      goto label$10199;
      label$10306:;
      {
       FBSTRING* vr$7720 = fb_StrAllocTempDescZEx( (uint8*)"input-output", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$7720, 0 );
      }
      goto label$10199;
      label$10307:;
      {
       FBSTRING* vr$7721 = fb_StrAllocTempDescZEx( (uint8*)"inquire", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7721, 0 );
      }
      goto label$10199;
      label$10308:;
      {
       FBSTRING* vr$7722 = fb_StrAllocTempDescZEx( (uint8*)"insert", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7722, 0 );
      }
      goto label$10199;
      label$10309:;
      {
       FBSTRING* vr$7723 = fb_StrAllocTempDescZEx( (uint8*)"inside", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7723, 0 );
      }
      goto label$10199;
      label$10310:;
      {
       FBSTRING* vr$7724 = fb_StrAllocTempDescZEx( (uint8*)"inside_vector", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$7724, 0 );
      }
      goto label$10199;
      label$10311:;
      {
       FBSTRING* vr$7725 = fb_StrAllocTempDescZEx( (uint8*)"inspect", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7725, 0 );
      }
      goto label$10199;
      label$10312:;
      {
       FBSTRING* vr$7726 = fb_StrAllocTempDescZEx( (uint8*)"installation", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$7726, 0 );
      }
      goto label$10199;
      label$10313:;
      {
       FBSTRING* vr$7727 = fb_StrAllocTempDescZEx( (uint8*)"instr", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7727, 0 );
      }
      goto label$10199;
      label$10314:;
      {
       FBSTRING* vr$7728 = fb_StrAllocTempDescZEx( (uint8*)"int", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7728, 0 );
      }
      goto label$10199;
      label$10315:;
      {
       FBSTRING* vr$7729 = fb_StrAllocTempDescZEx( (uint8*)"integer", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7729, 0 );
      }
      goto label$10199;
      label$10316:;
      {
       FBSTRING* vr$7730 = fb_StrAllocTempDescZEx( (uint8*)"interface", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7730, 0 );
      }
      goto label$10199;
      label$10317:;
      {
       FBSTRING* vr$7731 = fb_StrAllocTempDescZEx( (uint8*)"interior", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7731, 0 );
      }
      goto label$10199;
      label$10318:;
      {
       FBSTRING* vr$7732 = fb_StrAllocTempDescZEx( (uint8*)"interior_texture", 16ll );
       fb_PrintString( 1, (FBSTRING*)vr$7732, 0 );
      }
      goto label$10199;
      label$10319:;
      {
       FBSTRING* vr$7733 = fb_StrAllocTempDescZEx( (uint8*)"internal", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7733, 0 );
      }
      goto label$10199;
      label$10320:;
      {
       FBSTRING* vr$7734 = fb_StrAllocTempDescZEx( (uint8*)"interpolate", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7734, 0 );
      }
      goto label$10199;
      label$10321:;
      {
       FBSTRING* vr$7735 = fb_StrAllocTempDescZEx( (uint8*)"intersect", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7735, 0 );
      }
      goto label$10199;
      label$10322:;
      {
       FBSTRING* vr$7736 = fb_StrAllocTempDescZEx( (uint8*)"intersection", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$7736, 0 );
      }
      goto label$10199;
      label$10323:;
      {
       FBSTRING* vr$7737 = fb_StrAllocTempDescZEx( (uint8*)"interval", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7737, 0 );
      }
      goto label$10199;
      label$10324:;
      {
       FBSTRING* vr$7738 = fb_StrAllocTempDescZEx( (uint8*)"intervals", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7738, 0 );
      }
      goto label$10199;
      label$10325:;
      {
       FBSTRING* vr$7739 = fb_StrAllocTempDescZEx( (uint8*)"into", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7739, 0 );
      }
      goto label$10199;
      label$10326:;
      {
       FBSTRING* vr$7740 = fb_StrAllocTempDescZEx( (uint8*)"intrinsic", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7740, 0 );
      }
      goto label$10199;
      label$10327:;
      {
       FBSTRING* vr$7741 = fb_StrAllocTempDescZEx( (uint8*)"invalid", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7741, 0 );
      }
      goto label$10199;
      label$10328:;
      {
       FBSTRING* vr$7742 = fb_StrAllocTempDescZEx( (uint8*)"invariant", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7742, 0 );
      }
      goto label$10199;
      label$10329:;
      {
       FBSTRING* vr$7743 = fb_StrAllocTempDescZEx( (uint8*)"inverse", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7743, 0 );
      }
      goto label$10199;
      label$10330:;
      {
       FBSTRING* vr$7744 = fb_StrAllocTempDescZEx( (uint8*)"inversesqr", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7744, 0 );
      }
      goto label$10199;
      label$10331:;
      {
       FBSTRING* vr$7745 = fb_StrAllocTempDescZEx( (uint8*)"invoke", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7745, 0 );
      }
      goto label$10199;
      label$10332:;
      {
       FBSTRING* vr$7746 = fb_StrAllocTempDescZEx( (uint8*)"i-o", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7746, 0 );
      }
      goto label$10199;
      label$10333:;
      {
       FBSTRING* vr$7747 = fb_StrAllocTempDescZEx( (uint8*)"i-o-control", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7747, 0 );
      }
      goto label$10199;
      label$10334:;
      {
       FBSTRING* vr$7748 = fb_StrAllocTempDescZEx( (uint8*)"ioctl", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7748, 0 );
      }
      goto label$10199;
      label$10335:;
      {
       FBSTRING* vr$7749 = fb_StrAllocTempDescZEx( (uint8*)"ior", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7749, 0 );
      }
      goto label$10199;
      label$10336:;
      {
       FBSTRING* vr$7750 = fb_StrAllocTempDescZEx( (uint8*)"i_resolution", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$7750, 0 );
      }
      goto label$10199;
      label$10337:;
      {
       FBSTRING* vr$7751 = fb_StrAllocTempDescZEx( (uint8*)"iResolution", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7751, 0 );
      }
      goto label$10199;
      label$10338:;
      {
       FBSTRING* vr$7752 = fb_StrAllocTempDescZEx( (uint8*)"irid", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7752, 0 );
      }
      goto label$10199;
      label$10339:;
      {
       FBSTRING* vr$7753 = fb_StrAllocTempDescZEx( (uint8*)"irid_wavelength", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$7753, 0 );
      }
      goto label$10199;
      label$10340:;
      {
       FBSTRING* vr$7754 = fb_StrAllocTempDescZEx( (uint8*)"is", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7754, 0 );
      }
      goto label$10199;
      label$10341:;
      {
       FBSTRING* vr$7755 = fb_StrAllocTempDescZEx( (uint8*)"isampler1D", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7755, 0 );
      }
      goto label$10199;
      label$10342:;
      {
       FBSTRING* vr$7756 = fb_StrAllocTempDescZEx( (uint8*)"isampler1DArray", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$7756, 0 );
      }
      goto label$10199;
      label$10343:;
      {
       FBSTRING* vr$7757 = fb_StrAllocTempDescZEx( (uint8*)"isampler2D", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7757, 0 );
      }
      goto label$10199;
      label$10344:;
      {
       FBSTRING* vr$7758 = fb_StrAllocTempDescZEx( (uint8*)"isampler2DArray", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$7758, 0 );
      }
      goto label$10199;
      label$10345:;
      {
       FBSTRING* vr$7759 = fb_StrAllocTempDescZEx( (uint8*)"isampler2DRect", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$7759, 0 );
      }
      goto label$10199;
      label$10346:;
      {
       FBSTRING* vr$7760 = fb_StrAllocTempDescZEx( (uint8*)"isampler3D", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7760, 0 );
      }
      goto label$10199;
      label$10347:;
      {
       FBSTRING* vr$7761 = fb_StrAllocTempDescZEx( (uint8*)"iSampleRate", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7761, 0 );
      }
      goto label$10199;
      label$10348:;
      {
       FBSTRING* vr$7762 = fb_StrAllocTempDescZEx( (uint8*)"glsl ", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7762, 0 );
      }
      goto label$10199;
      label$10349:;
      {
       FBSTRING* vr$7763 = fb_StrAllocTempDescZEx( (uint8*)"isamplerCube", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$7763, 0 );
      }
      goto label$10199;
      label$10350:;
      {
       FBSTRING* vr$7764 = fb_StrAllocTempDescZEx( (uint8*)"isconnected", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7764, 0 );
      }
      goto label$10199;
      label$10351:;
      {
       FBSTRING* vr$7765 = fb_StrAllocTempDescZEx( (uint8*)"isconstant", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7765, 0 );
      }
      goto label$10199;
      label$10352:;
      {
       FBSTRING* vr$7766 = fb_StrAllocTempDescZEx( (uint8*)"isfinite", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7766, 0 );
      }
      goto label$10199;
      label$10353:;
      {
       FBSTRING* vr$7767 = fb_StrAllocTempDescZEx( (uint8*)"isinf", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7767, 0 );
      }
      goto label$10199;
      label$10354:;
      {
       FBSTRING* vr$7768 = fb_StrAllocTempDescZEx( (uint8*)"isnan", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7768, 0 );
      }
      goto label$10199;
      label$10355:;
      {
       FBSTRING* vr$7769 = fb_StrAllocTempDescZEx( (uint8*)"isosurface", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7769, 0 );
      }
      goto label$10199;
      label$10356:;
      {
       FBSTRING* vr$7770 = fb_StrAllocTempDescZEx( (uint8*)"isotropic", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7770, 0 );
      }
      goto label$10199;
      label$10357:;
      {
       FBSTRING* vr$7771 = fb_StrAllocTempDescZEx( (uint8*)"iterate", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7771, 0 );
      }
      goto label$10199;
      label$10358:;
      {
       FBSTRING* vr$7772 = fb_StrAllocTempDescZEx( (uint8*)"i_time", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7772, 0 );
      }
      goto label$10199;
      label$10359:;
      {
       FBSTRING* vr$7773 = fb_StrAllocTempDescZEx( (uint8*)"itime", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7773, 0 );
      }
      goto label$10199;
      label$10360:;
      {
       FBSTRING* vr$7774 = fb_StrAllocTempDescZEx( (uint8*)"itimedelta", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7774, 0 );
      }
      goto label$10199;
      label$10361:;
      {
       FBSTRING* vr$7775 = fb_StrAllocTempDescZEx( (uint8*)"ivec2", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7775, 0 );
      }
      goto label$10199;
      label$10362:;
      {
       FBSTRING* vr$7776 = fb_StrAllocTempDescZEx( (uint8*)"ivec3", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7776, 0 );
      }
      goto label$10199;
      label$10363:;
      {
       FBSTRING* vr$7777 = fb_StrAllocTempDescZEx( (uint8*)"ivec4", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7777, 0 );
      }
      goto label$10199;
      label$10364:;
      {
       FBSTRING* vr$7778 = fb_StrAllocTempDescZEx( (uint8*)"j", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$7778, 0 );
      }
      goto label$10199;
      label$10365:;
      {
       FBSTRING* vr$7779 = fb_StrAllocTempDescZEx( (uint8*)"jitter", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7779, 0 );
      }
      goto label$10199;
      label$10366:;
      {
       FBSTRING* vr$7780 = fb_StrAllocTempDescZEx( (uint8*)"join", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7780, 0 );
      }
      goto label$10199;
      label$10367:;
      {
       FBSTRING* vr$7781 = fb_StrAllocTempDescZEx( (uint8*)"jpeg", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7781, 0 );
      }
      goto label$10199;
      label$10368:;
      {
       FBSTRING* vr$7782 = fb_StrAllocTempDescZEx( (uint8*)"julia", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7782, 0 );
      }
      goto label$10199;
      label$10369:;
      {
       FBSTRING* vr$7783 = fb_StrAllocTempDescZEx( (uint8*)"julia_fractal", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$7783, 0 );
      }
      goto label$10199;
      label$10370:;
      {
       FBSTRING* vr$7784 = fb_StrAllocTempDescZEx( (uint8*)"just", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7784, 0 );
      }
      goto label$10199;
      label$10371:;
      {
       FBSTRING* vr$7785 = fb_StrAllocTempDescZEx( (uint8*)"justified", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7785, 0 );
      }
      goto label$10199;
      label$10372:;
      {
       FBSTRING* vr$7786 = fb_StrAllocTempDescZEx( (uint8*)"k", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$7786, 0 );
      }
      goto label$10199;
      label$10373:;
      {
       FBSTRING* vr$7787 = fb_StrAllocTempDescZEx( (uint8*)"kanji", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7787, 0 );
      }
      goto label$10199;
      label$10374:;
      {
       FBSTRING* vr$7788 = fb_StrAllocTempDescZEx( (uint8*)"key", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7788, 0 );
      }
      goto label$10199;
      label$10375:;
      {
       FBSTRING* vr$7789 = fb_StrAllocTempDescZEx( (uint8*)"kill", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7789, 0 );
      }
      goto label$10199;
      label$10376:;
      {
       FBSTRING* vr$7790 = fb_StrAllocTempDescZEx( (uint8*)"l", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$7790, 0 );
      }
      goto label$10199;
      label$10377:;
      {
       FBSTRING* vr$7791 = fb_StrAllocTempDescZEx( (uint8*)"label", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7791, 0 );
      }
      goto label$10199;
      label$10378:;
      {
       FBSTRING* vr$7792 = fb_StrAllocTempDescZEx( (uint8*)"lambda", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7792, 0 );
      }
      goto label$10199;
      label$10379:;
      {
       FBSTRING* vr$7793 = fb_StrAllocTempDescZEx( (uint8*)"last", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7793, 0 );
      }
      goto label$10199;
      label$10380:;
      {
       FBSTRING* vr$7794 = fb_StrAllocTempDescZEx( (uint8*)"lathe", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7794, 0 );
      }
      goto label$10199;
      label$10381:;
      {
       FBSTRING* vr$7795 = fb_StrAllocTempDescZEx( (uint8*)"layout", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7795, 0 );
      }
      goto label$10199;
      label$10382:;
      {
       FBSTRING* vr$7796 = fb_StrAllocTempDescZEx( (uint8*)"lcopy", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7796, 0 );
      }
      goto label$10199;
      label$10383:;
      {
       FBSTRING* vr$7797 = fb_StrAllocTempDescZEx( (uint8*)"leading", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7797, 0 );
      }
      goto label$10199;
      label$10384:;
      {
       FBSTRING* vr$7798 = fb_StrAllocTempDescZEx( (uint8*)"leave", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7798, 0 );
      }
      goto label$10199;
      label$10385:;
      {
       FBSTRING* vr$7799 = fb_StrAllocTempDescZEx( (uint8*)"left", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7799, 0 );
      }
      goto label$10199;
      label$10386:;
      {
      }
      goto label$10199;
      label$10387:;
      {
       FBSTRING* vr$7800 = fb_StrAllocTempDescZEx( (uint8*)"len", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7800, 0 );
      }
      goto label$10199;
      label$10388:;
      {
       FBSTRING* vr$7801 = fb_StrAllocTempDescZEx( (uint8*)"length", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7801, 0 );
      }
      goto label$10199;
      label$10389:;
      {
       FBSTRING* vr$7802 = fb_StrAllocTempDescZEx( (uint8*)"leopard", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7802, 0 );
      }
      goto label$10199;
      label$10390:;
      {
       FBSTRING* vr$7803 = fb_StrAllocTempDescZEx( (uint8*)"less", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7803, 0 );
      }
      goto label$10199;
      label$10391:;
      {
       FBSTRING* vr$7804 = fb_StrAllocTempDescZEx( (uint8*)"lesseq", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7804, 0 );
      }
      goto label$10199;
      label$10392:;
      {
       FBSTRING* vr$7805 = fb_StrAllocTempDescZEx( (uint8*)"let", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7805, 0 );
      }
      goto label$10199;
      label$10393:;
      {
       FBSTRING* vr$7806 = fb_StrAllocTempDescZEx( (uint8*)"libraryt", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7806, 0 );
      }
      goto label$10199;
      label$10394:;
      {
       FBSTRING* vr$7807 = fb_StrAllocTempDescZEx( (uint8*)"light_group", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7807, 0 );
      }
      goto label$10199;
      label$10395:;
      {
       FBSTRING* vr$7808 = fb_StrAllocTempDescZEx( (uint8*)"light_source", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$7808, 0 );
      }
      goto label$10199;
      label$10396:;
      {
       FBSTRING* vr$7809 = fb_StrAllocTempDescZEx( (uint8*)"like", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7809, 0 );
      }
      goto label$10199;
      label$10397:;
      {
       FBSTRING* vr$7810 = fb_StrAllocTempDescZEx( (uint8*)"limit", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7810, 0 );
      }
      goto label$10199;
      label$10398:;
      {
       FBSTRING* vr$7811 = fb_StrAllocTempDescZEx( (uint8*)"limits", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7811, 0 );
      }
      goto label$10199;
      label$10399:;
      {
       FBSTRING* vr$7812 = fb_StrAllocTempDescZEx( (uint8*)"linage", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7812, 0 );
      }
      goto label$10199;
      label$10400:;
      {
       FBSTRING* vr$7813 = fb_StrAllocTempDescZEx( (uint8*)"linage-counter", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$7813, 0 );
      }
      goto label$10199;
      label$10401:;
      {
       FBSTRING* vr$7814 = fb_StrAllocTempDescZEx( (uint8*)"line", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7814, 0 );
      }
      goto label$10199;
      label$10402:;
      {
       FBSTRING* vr$7815 = fb_StrAllocTempDescZEx( (uint8*)"linear_spline", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$7815, 0 );
      }
      goto label$10199;
      label$10403:;
      {
       FBSTRING* vr$7816 = fb_StrAllocTempDescZEx( (uint8*)"linearstep", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7816, 0 );
      }
      goto label$10199;
      label$10404:;
      {
       FBSTRING* vr$7817 = fb_StrAllocTempDescZEx( (uint8*)"linear_sweep", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$7817, 0 );
      }
      goto label$10199;
      label$10405:;
      {
       FBSTRING* vr$7818 = fb_StrAllocTempDescZEx( (uint8*)"line-counter", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$7818, 0 );
      }
      goto label$10199;
      label$10406:;
      {
       FBSTRING* vr$7819 = fb_StrAllocTempDescZEx( (uint8*)"lines", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7819, 0 );
      }
      goto label$10199;
      label$10407:;
      {
       FBSTRING* vr$7820 = fb_StrAllocTempDescZEx( (uint8*)"linkage", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7820, 0 );
      }
      goto label$10199;
      label$10408:;
      {
       FBSTRING* vr$7821 = fb_StrAllocTempDescZEx( (uint8*)"list", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7821, 0 );
      }
      goto label$10199;
      label$10409:;
      {
       FBSTRING* vr$7822 = fb_StrAllocTempDescZEx( (uint8*)"llist", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7822, 0 );
      }
      goto label$10199;
      label$10410:;
      {
       FBSTRING* vr$7823 = fb_StrAllocTempDescZEx( (uint8*)"ln", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7823, 0 );
      }
      goto label$10199;
      label$10411:;
      {
       FBSTRING* vr$7824 = fb_StrAllocTempDescZEx( (uint8*)"load", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7824, 0 );
      }
      goto label$10199;
      label$10412:;
      {
       FBSTRING* vr$7825 = fb_StrAllocTempDescZEx( (uint8*)"load_file", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7825, 0 );
      }
      goto label$10199;
      label$10413:;
      {
       FBSTRING* vr$7826 = fb_StrAllocTempDescZEx( (uint8*)"loc", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7826, 0 );
      }
      goto label$10199;
      label$10414:;
      {
       FBSTRING* vr$7827 = fb_StrAllocTempDescZEx( (uint8*)"local", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7827, 0 );
      }
      goto label$10199;
      label$10415:;
      {
       FBSTRING* vr$7828 = fb_StrAllocTempDescZEx( (uint8*)"local-storage", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$7828, 0 );
      }
      goto label$10199;
      label$10416:;
      {
       FBSTRING* vr$7829 = fb_StrAllocTempDescZEx( (uint8*)"locate", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7829, 0 );
      }
      goto label$10199;
      label$10417:;
      {
       FBSTRING* vr$7830 = fb_StrAllocTempDescZEx( (uint8*)"location", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7830, 0 );
      }
      goto label$10199;
      label$10418:;
      {
       FBSTRING* vr$7831 = fb_StrAllocTempDescZEx( (uint8*)"lock", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7831, 0 );
      }
      goto label$10199;
      label$10419:;
      {
       FBSTRING* vr$7832 = fb_StrAllocTempDescZEx( (uint8*)"lof", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7832, 0 );
      }
      goto label$10199;
      label$10420:;
      {
       FBSTRING* vr$7833 = fb_StrAllocTempDescZEx( (uint8*)"log", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7833, 0 );
      }
      goto label$10199;
      label$10421:;
      {
       FBSTRING* vr$7834 = fb_StrAllocTempDescZEx( (uint8*)"log10", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7834, 0 );
      }
      goto label$10199;
      label$10422:;
      {
       FBSTRING* vr$7835 = fb_StrAllocTempDescZEx( (uint8*)"log2", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7835, 0 );
      }
      goto label$10199;
      label$10423:;
      {
       FBSTRING* vr$7836 = fb_StrAllocTempDescZEx( (uint8*)"logb", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7836, 0 );
      }
      goto label$10199;
      label$10424:;
      {
       FBSTRING* vr$7837 = fb_StrAllocTempDescZEx( (uint8*)"logical", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7837, 0 );
      }
      goto label$10199;
      label$10425:;
      {
       FBSTRING* vr$7838 = fb_StrAllocTempDescZEx( (uint8*)"long", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7838, 0 );
      }
      goto label$10199;
      label$10426:;
      {
       FBSTRING* vr$7839 = fb_StrAllocTempDescZEx( (uint8*)"look_at", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7839, 0 );
      }
      goto label$10199;
      label$10427:;
      {
       FBSTRING* vr$7840 = fb_StrAllocTempDescZEx( (uint8*)"looks_like", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7840, 0 );
      }
      goto label$10199;
      label$10428:;
      {
       FBSTRING* vr$7841 = fb_StrAllocTempDescZEx( (uint8*)"loop", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7841, 0 );
      }
      goto label$10199;
      label$10429:;
      {
       FBSTRING* vr$7842 = fb_StrAllocTempDescZEx( (uint8*)"lower", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7842, 0 );
      }
      goto label$10199;
      label$10430:;
      {
       FBSTRING* vr$7843 = fb_StrAllocTempDescZEx( (uint8*)"lower_mb", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7843, 0 );
      }
      goto label$10199;
      label$10431:;
      {
       FBSTRING* vr$7844 = fb_StrAllocTempDescZEx( (uint8*)"low_error_factor", 16ll );
       fb_PrintString( 1, (FBSTRING*)vr$7844, 0 );
      }
      goto label$10199;
      label$10432:;
      {
       FBSTRING* vr$7845 = fb_StrAllocTempDescZEx( (uint8*)"lowp", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7845, 0 );
      }
      goto label$10199;
      label$10433:;
      {
       FBSTRING* vr$7846 = fb_StrAllocTempDescZEx( (uint8*)"low-value", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7846, 0 );
      }
      goto label$10199;
      label$10434:;
      {
       FBSTRING* vr$7847 = fb_StrAllocTempDescZEx( (uint8*)"low-values", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7847, 0 );
      }
      goto label$10199;
      label$10435:;
      {
       FBSTRING* vr$7848 = fb_StrAllocTempDescZEx( (uint8*)"lpad", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7848, 0 );
      }
      goto label$10199;
      label$10436:;
      {
       FBSTRING* vr$7849 = fb_StrAllocTempDescZEx( (uint8*)"lpos", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7849, 0 );
      }
      goto label$10199;
      label$10437:;
      {
       FBSTRING* vr$7850 = fb_StrAllocTempDescZEx( (uint8*)"lprint", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7850, 0 );
      }
      goto label$10199;
      label$10438:;
      {
       FBSTRING* vr$7851 = fb_StrAllocTempDescZEx( (uint8*)"lset", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7851, 0 );
      }
      goto label$10199;
      label$10439:;
      {
       FBSTRING* vr$7852 = fb_StrAllocTempDescZEx( (uint8*)"luminance", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7852, 0 );
      }
      goto label$10199;
      label$10440:;
      {
       FBSTRING* vr$7853 = fb_StrAllocTempDescZEx( (uint8*)"m", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$7853, 0 );
      }
      goto label$10199;
      label$10441:;
      {
       FBSTRING* vr$7854 = fb_StrAllocTempDescZEx( (uint8*)"m_2_pi", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7854, 0 );
      }
      goto label$10199;
      label$10442:;
      {
       FBSTRING* vr$7855 = fb_StrAllocTempDescZEx( (uint8*)"m_2_sqrtpi", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7855, 0 );
      }
      goto label$10199;
      label$10443:;
      {
       FBSTRING* vr$7856 = fb_StrAllocTempDescZEx( (uint8*)"m_4_pi", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7856, 0 );
      }
      goto label$10199;
      label$10444:;
      {
       FBSTRING* vr$7857 = fb_StrAllocTempDescZEx( (uint8*)"macro", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7857, 0 );
      }
      goto label$10199;
      label$10445:;
      {
       FBSTRING* vr$7858 = fb_StrAllocTempDescZEx( (uint8*)"magnet", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7858, 0 );
      }
      goto label$10199;
      label$10446:;
      {
       FBSTRING* vr$7859 = fb_StrAllocTempDescZEx( (uint8*)"main", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7859, 0 );
      }
      goto label$10199;
      label$10447:;
      {
       FBSTRING* vr$7860 = fb_StrAllocTempDescZEx( (uint8*)"main_image", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7860, 0 );
      }
      goto label$10199;
      label$10448:;
      {
       FBSTRING* vr$7861 = fb_StrAllocTempDescZEx( (uint8*)"mainImage", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7861, 0 );
      }
      goto label$10199;
      label$10449:;
      {
       FBSTRING* vr$7862 = fb_StrAllocTempDescZEx( (uint8*)"major_radius", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$7862, 0 );
      }
      goto label$10199;
      label$10450:;
      {
       FBSTRING* vr$7863 = fb_StrAllocTempDescZEx( (uint8*)"mandel", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7863, 0 );
      }
      goto label$10199;
      label$10451:;
      {
       FBSTRING* vr$7864 = fb_StrAllocTempDescZEx( (uint8*)"map", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7864, 0 );
      }
      goto label$10199;
      label$10452:;
      {
       FBSTRING* vr$7865 = fb_StrAllocTempDescZEx( (uint8*)"map_type", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7865, 0 );
      }
      goto label$10199;
      label$10453:;
      {
       FBSTRING* vr$7866 = fb_StrAllocTempDescZEx( (uint8*)"marble", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7866, 0 );
      }
      goto label$10199;
      label$10454:;
      {
       FBSTRING* vr$7867 = fb_StrAllocTempDescZEx( (uint8*)"mat2", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7867, 0 );
      }
      goto label$10199;
      label$10455:;
      {
       FBSTRING* vr$7868 = fb_StrAllocTempDescZEx( (uint8*)"mat2x2", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7868, 0 );
      }
      goto label$10199;
      label$10200:;
      static const void* tmp$5396[256ll] = {
       &&label$10201,
       &&label$10202,
       &&label$10203,
       &&label$10204,
       &&label$10205,
       &&label$10206,
       &&label$10207,
       &&label$10208,
       &&label$10209,
       &&label$10210,
       &&label$10211,
       &&label$10212,
       &&label$10213,
       &&label$10214,
       &&label$10215,
       &&label$10216,
       &&label$10217,
       &&label$10218,
       &&label$10219,
       &&label$10220,
       &&label$10221,
       &&label$10222,
       &&label$10223,
       &&label$10224,
       &&label$10225,
       &&label$10226,
       &&label$10227,
       &&label$10199,
       &&label$10228,
       &&label$10229,
       &&label$10230,
       &&label$10231,
       &&label$10232,
       &&label$10233,
       &&label$10234,
       &&label$10235,
       &&label$10236,
       &&label$10237,
       &&label$10238,
       &&label$10239,
       &&label$10240,
       &&label$10241,
       &&label$10242,
       &&label$10243,
       &&label$10244,
       &&label$10245,
       &&label$10246,
       &&label$10247,
       &&label$10248,
       &&label$10249,
       &&label$10250,
       &&label$10251,
       &&label$10252,
       &&label$10253,
       &&label$10254,
       &&label$10255,
       &&label$10256,
       &&label$10257,
       &&label$10258,
       &&label$10259,
       &&label$10260,
       &&label$10261,
       &&label$10262,
       &&label$10263,
       &&label$10264,
       &&label$10265,
       &&label$10266,
       &&label$10267,
       &&label$10268,
       &&label$10269,
       &&label$10270,
       &&label$10271,
       &&label$10272,
       &&label$10273,
       &&label$10274,
       &&label$10275,
       &&label$10276,
       &&label$10277,
       &&label$10278,
       &&label$10279,
       &&label$10280,
       &&label$10281,
       &&label$10282,
       &&label$10283,
       &&label$10284,
       &&label$10285,
       &&label$10286,
       &&label$10287,
       &&label$10288,
       &&label$10289,
       &&label$10290,
       &&label$10291,
       &&label$10292,
       &&label$10293,
       &&label$10294,
       &&label$10295,
       &&label$10296,
       &&label$10297,
       &&label$10298,
       &&label$10299,
       &&label$10300,
       &&label$10301,
       &&label$10302,
       &&label$10303,
       &&label$10304,
       &&label$10305,
       &&label$10306,
       &&label$10307,
       &&label$10308,
       &&label$10309,
       &&label$10310,
       &&label$10311,
       &&label$10312,
       &&label$10313,
       &&label$10314,
       &&label$10315,
       &&label$10316,
       &&label$10317,
       &&label$10318,
       &&label$10319,
       &&label$10320,
       &&label$10321,
       &&label$10322,
       &&label$10323,
       &&label$10324,
       &&label$10325,
       &&label$10326,
       &&label$10327,
       &&label$10328,
       &&label$10329,
       &&label$10330,
       &&label$10331,
       &&label$10332,
       &&label$10333,
       &&label$10334,
       &&label$10335,
       &&label$10336,
       &&label$10337,
       &&label$10338,
       &&label$10339,
       &&label$10340,
       &&label$10341,
       &&label$10342,
       &&label$10343,
       &&label$10344,
       &&label$10345,
       &&label$10346,
       &&label$10347,
       &&label$10348,
       &&label$10349,
       &&label$10350,
       &&label$10351,
       &&label$10352,
       &&label$10353,
       &&label$10354,
       &&label$10355,
       &&label$10356,
       &&label$10357,
       &&label$10358,
       &&label$10359,
       &&label$10360,
       &&label$10361,
       &&label$10362,
       &&label$10363,
       &&label$10364,
       &&label$10365,
       &&label$10366,
       &&label$10367,
       &&label$10368,
       &&label$10369,
       &&label$10370,
       &&label$10371,
       &&label$10372,
       &&label$10373,
       &&label$10374,
       &&label$10375,
       &&label$10376,
       &&label$10377,
       &&label$10378,
       &&label$10379,
       &&label$10380,
       &&label$10381,
       &&label$10382,
       &&label$10383,
       &&label$10384,
       &&label$10385,
       &&label$10386,
       &&label$10387,
       &&label$10388,
       &&label$10389,
       &&label$10390,
       &&label$10391,
       &&label$10392,
       &&label$10393,
       &&label$10394,
       &&label$10395,
       &&label$10396,
       &&label$10397,
       &&label$10398,
       &&label$10399,
       &&label$10400,
       &&label$10401,
       &&label$10402,
       &&label$10403,
       &&label$10404,
       &&label$10405,
       &&label$10406,
       &&label$10407,
       &&label$10408,
       &&label$10409,
       &&label$10410,
       &&label$10411,
       &&label$10412,
       &&label$10413,
       &&label$10414,
       &&label$10415,
       &&label$10416,
       &&label$10417,
       &&label$10418,
       &&label$10419,
       &&label$10420,
       &&label$10421,
       &&label$10422,
       &&label$10423,
       &&label$10424,
       &&label$10425,
       &&label$10426,
       &&label$10427,
       &&label$10428,
       &&label$10429,
       &&label$10430,
       &&label$10431,
       &&label$10432,
       &&label$10433,
       &&label$10434,
       &&label$10435,
       &&label$10436,
       &&label$10437,
       &&label$10438,
       &&label$10439,
       &&label$10440,
       &&label$10441,
       &&label$10442,
       &&label$10443,
       &&label$10444,
       &&label$10445,
       &&label$10446,
       &&label$10447,
       &&label$10448,
       &&label$10449,
       &&label$10450,
       &&label$10451,
       &&label$10452,
       &&label$10453,
       &&label$10454,
       &&label$10455,
      };
      if( TMP$3839$6 > 255ull ) goto label$10199;
      goto *tmp$5396[TMP$3839$6 - 0ull];
      label$10199:;
     }
    }
    goto label$9561;
    label$10456:;
    {
     {
      uint64 TMP$4085$6;
      TMP$4085$6 = ((uint64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394968ll) ));
      goto label$10458;
      label$10459:;
      {
       FBSTRING* vr$7870 = fb_StrAllocTempDescZEx( (uint8*)"mat2x3", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7870, 0 );
      }
      goto label$10457;
      label$10460:;
      {
       FBSTRING* vr$7871 = fb_StrAllocTempDescZEx( (uint8*)"mat2x4", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7871, 0 );
      }
      goto label$10457;
      label$10461:;
      {
       FBSTRING* vr$7872 = fb_StrAllocTempDescZEx( (uint8*)"mat3", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7872, 0 );
      }
      goto label$10457;
      label$10462:;
      {
       FBSTRING* vr$7873 = fb_StrAllocTempDescZEx( (uint8*)"mat3x2", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7873, 0 );
      }
      goto label$10457;
      label$10463:;
      {
       FBSTRING* vr$7874 = fb_StrAllocTempDescZEx( (uint8*)"mat3x3", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7874, 0 );
      }
      goto label$10457;
      label$10464:;
      {
       FBSTRING* vr$7875 = fb_StrAllocTempDescZEx( (uint8*)"mat3x4", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7875, 0 );
      }
      goto label$10457;
      label$10465:;
      {
       FBSTRING* vr$7876 = fb_StrAllocTempDescZEx( (uint8*)"mat4", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7876, 0 );
      }
      goto label$10457;
      label$10466:;
      {
       FBSTRING* vr$7877 = fb_StrAllocTempDescZEx( (uint8*)"mat4x2", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7877, 0 );
      }
      goto label$10457;
      label$10467:;
      {
       FBSTRING* vr$7878 = fb_StrAllocTempDescZEx( (uint8*)"mat4x3", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7878, 0 );
      }
      goto label$10457;
      label$10468:;
      {
       FBSTRING* vr$7879 = fb_StrAllocTempDescZEx( (uint8*)"mat4x4", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7879, 0 );
      }
      goto label$10457;
      label$10469:;
      {
       FBSTRING* vr$7880 = fb_StrAllocTempDescZEx( (uint8*)"material", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7880, 0 );
      }
      goto label$10457;
      label$10470:;
      {
       FBSTRING* vr$7881 = fb_StrAllocTempDescZEx( (uint8*)"material_map", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$7881, 0 );
      }
      goto label$10457;
      label$10471:;
      {
       FBSTRING* vr$7882 = fb_StrAllocTempDescZEx( (uint8*)"matrix", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7882, 0 );
      }
      goto label$10457;
      label$10472:;
      {
       FBSTRING* vr$7883 = fb_StrAllocTempDescZEx( (uint8*)"max", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7883, 0 );
      }
      goto label$10457;
      label$10473:;
      {
       FBSTRING* vr$7884 = fb_StrAllocTempDescZEx( (uint8*)"max_extent", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7884, 0 );
      }
      goto label$10457;
      label$10474:;
      {
       FBSTRING* vr$7885 = fb_StrAllocTempDescZEx( (uint8*)"max_gradient", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$7885, 0 );
      }
      goto label$10457;
      label$10475:;
      {
       FBSTRING* vr$7886 = fb_StrAllocTempDescZEx( (uint8*)"max_intersections", 17ll );
       fb_PrintString( 1, (FBSTRING*)vr$7886, 0 );
      }
      goto label$10457;
      label$10476:;
      {
       FBSTRING* vr$7887 = fb_StrAllocTempDescZEx( (uint8*)"max_iteration", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$7887, 0 );
      }
      goto label$10457;
      label$10477:;
      {
       FBSTRING* vr$7888 = fb_StrAllocTempDescZEx( (uint8*)"max_sample", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7888, 0 );
      }
      goto label$10457;
      label$10478:;
      {
       FBSTRING* vr$7889 = fb_StrAllocTempDescZEx( (uint8*)"max_trace", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7889, 0 );
      }
      goto label$10457;
      label$10479:;
      {
       FBSTRING* vr$7890 = fb_StrAllocTempDescZEx( (uint8*)"max_trace_level", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$7890, 0 );
      }
      goto label$10457;
      label$10480:;
      {
       FBSTRING* vr$7891 = fb_StrAllocTempDescZEx( (uint8*)"m_e", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7891, 0 );
      }
      goto label$10457;
      label$10481:;
      {
       FBSTRING* vr$7892 = fb_StrAllocTempDescZEx( (uint8*)"media", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7892, 0 );
      }
      goto label$10457;
      label$10482:;
      {
       FBSTRING* vr$7893 = fb_StrAllocTempDescZEx( (uint8*)"media_attenuation", 17ll );
       fb_PrintString( 1, (FBSTRING*)vr$7893, 0 );
      }
      goto label$10457;
      label$10483:;
      {
       FBSTRING* vr$7894 = fb_StrAllocTempDescZEx( (uint8*)"media_interaction", 17ll );
       fb_PrintString( 1, (FBSTRING*)vr$7894, 0 );
      }
      goto label$10457;
      label$10484:;
      {
       FBSTRING* vr$7895 = fb_StrAllocTempDescZEx( (uint8*)"mediump", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7895, 0 );
      }
      goto label$10457;
      label$10485:;
      {
       FBSTRING* vr$7896 = fb_StrAllocTempDescZEx( (uint8*)"memory", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7896, 0 );
      }
      goto label$10457;
      label$10486:;
      {
       FBSTRING* vr$7897 = fb_StrAllocTempDescZEx( (uint8*)"memory_size", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7897, 0 );
      }
      goto label$10457;
      label$10487:;
      {
       FBSTRING* vr$7898 = fb_StrAllocTempDescZEx( (uint8*)"merge", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7898, 0 );
      }
      goto label$10457;
      label$10488:;
      {
       FBSTRING* vr$7899 = fb_StrAllocTempDescZEx( (uint8*)"mesh", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7899, 0 );
      }
      goto label$10457;
      label$10489:;
      {
       FBSTRING* vr$7900 = fb_StrAllocTempDescZEx( (uint8*)"mesh2", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7900, 0 );
      }
      goto label$10457;
      label$10490:;
      {
       FBSTRING* vr$7901 = fb_StrAllocTempDescZEx( (uint8*)"message", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7901, 0 );
      }
      goto label$10457;
      label$10491:;
      {
       FBSTRING* vr$7902 = fb_StrAllocTempDescZEx( (uint8*)"metaclass", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7902, 0 );
      }
      goto label$10457;
      label$10492:;
      {
       FBSTRING* vr$7903 = fb_StrAllocTempDescZEx( (uint8*)"meta_hint", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7903, 0 );
      }
      goto label$10457;
      label$10493:;
      {
       FBSTRING* vr$7904 = fb_StrAllocTempDescZEx( (uint8*)"metallic", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7904, 0 );
      }
      goto label$10457;
      label$10494:;
      {
       FBSTRING* vr$7905 = fb_StrAllocTempDescZEx( (uint8*)"method", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7905, 0 );
      }
      goto label$10457;
      label$10495:;
      {
       FBSTRING* vr$7906 = fb_StrAllocTempDescZEx( (uint8*)"method-id", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7906, 0 );
      }
      goto label$10457;
      label$10496:;
      {
       FBSTRING* vr$7907 = fb_StrAllocTempDescZEx( (uint8*)"metric", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7907, 0 );
      }
      goto label$10457;
      label$10497:;
      {
       FBSTRING* vr$7908 = fb_StrAllocTempDescZEx( (uint8*)"microfacet", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7908, 0 );
      }
      goto label$10457;
      label$10498:;
      {
       FBSTRING* vr$7909 = fb_StrAllocTempDescZEx( (uint8*)"mid", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7909, 0 );
      }
      goto label$10457;
      label$10499:;
      {
       FBSTRING* vr$7910 = fb_StrAllocTempDescZEx( (uint8*)"min", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7910, 0 );
      }
      goto label$10457;
      label$10500:;
      {
       FBSTRING* vr$7911 = fb_StrAllocTempDescZEx( (uint8*)"min_extent", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7911, 0 );
      }
      goto label$10457;
      label$10501:;
      {
       FBSTRING* vr$7912 = fb_StrAllocTempDescZEx( (uint8*)"minimum_reuse", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$7912, 0 );
      }
      goto label$10457;
      label$10502:;
      {
       FBSTRING* vr$7913 = fb_StrAllocTempDescZEx( (uint8*)"minute", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7913, 0 );
      }
      goto label$10457;
      label$10503:;
      {
       FBSTRING* vr$7914 = fb_StrAllocTempDescZEx( (uint8*)"mkd", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7914, 0 );
      }
      goto label$10457;
      label$10504:;
      {
       FBSTRING* vr$7915 = fb_StrAllocTempDescZEx( (uint8*)"mkdir", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7915, 0 );
      }
      goto label$10457;
      label$10505:;
      {
       FBSTRING* vr$7916 = fb_StrAllocTempDescZEx( (uint8*)"mki", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7916, 0 );
      }
      goto label$10457;
      label$10506:;
      {
       FBSTRING* vr$7917 = fb_StrAllocTempDescZEx( (uint8*)"mks", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7917, 0 );
      }
      goto label$10457;
      label$10507:;
      {
       FBSTRING* vr$7918 = fb_StrAllocTempDescZEx( (uint8*)"M_LN", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7918, 0 );
      }
      goto label$10457;
      label$10508:;
      {
       FBSTRING* vr$7919 = fb_StrAllocTempDescZEx( (uint8*)"M_LN2", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7919, 0 );
      }
      goto label$10457;
      label$10509:;
      {
       FBSTRING* vr$7920 = fb_StrAllocTempDescZEx( (uint8*)"M_LOG10E", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7920, 0 );
      }
      goto label$10457;
      label$10510:;
      {
       FBSTRING* vr$7921 = fb_StrAllocTempDescZEx( (uint8*)"M_LOG2E", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7921, 0 );
      }
      goto label$10457;
      label$10511:;
      {
       FBSTRING* vr$7922 = fb_StrAllocTempDescZEx( (uint8*)"mod", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7922, 0 );
      }
      goto label$10457;
      label$10512:;
      {
       FBSTRING* vr$7923 = fb_StrAllocTempDescZEx( (uint8*)"mode", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7923, 0 );
      }
      goto label$10457;
      label$10513:;
      {
       FBSTRING* vr$7924 = fb_StrAllocTempDescZEx( (uint8*)"modules", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7924, 0 );
      }
      goto label$10457;
      label$10514:;
      {
       FBSTRING* vr$7925 = fb_StrAllocTempDescZEx( (uint8*)"month", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7925, 0 );
      }
      goto label$10457;
      label$10515:;
      {
       FBSTRING* vr$7926 = fb_StrAllocTempDescZEx( (uint8*)"more-labels", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7926, 0 );
      }
      goto label$10457;
      label$10516:;
      {
       FBSTRING* vr$7927 = fb_StrAllocTempDescZEx( (uint8*)"mortar", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7927, 0 );
      }
      goto label$10457;
      label$10517:;
      {
       FBSTRING* vr$7928 = fb_StrAllocTempDescZEx( (uint8*)"motor", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7928, 0 );
      }
      goto label$10457;
      label$10518:;
      {
       FBSTRING* vr$7929 = fb_StrAllocTempDescZEx( (uint8*)"move", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7929, 0 );
      }
      goto label$10457;
      label$10519:;
      {
       FBSTRING* vr$7930 = fb_StrAllocTempDescZEx( (uint8*)"M_PI", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7930, 0 );
      }
      goto label$10457;
      label$10520:;
      {
       FBSTRING* vr$7931 = fb_StrAllocTempDescZEx( (uint8*)"M_PI_2", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7931, 0 );
      }
      goto label$10457;
      label$10521:;
      {
       FBSTRING* vr$7932 = fb_StrAllocTempDescZEx( (uint8*)"M_PI_4", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7932, 0 );
      }
      goto label$10457;
      label$10522:;
      {
       FBSTRING* vr$7933 = fb_StrAllocTempDescZEx( (uint8*)"M_SQRT", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7933, 0 );
      }
      goto label$10457;
      label$10523:;
      {
       FBSTRING* vr$7934 = fb_StrAllocTempDescZEx( (uint8*)"M_SQRT2", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7934, 0 );
      }
      goto label$10457;
      label$10524:;
      {
       FBSTRING* vr$7935 = fb_StrAllocTempDescZEx( (uint8*)"multiple", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7935, 0 );
      }
      goto label$10457;
      label$10525:;
      {
       FBSTRING* vr$7936 = fb_StrAllocTempDescZEx( (uint8*)"multiply", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7936, 0 );
      }
      goto label$10457;
      label$10526:;
      {
       FBSTRING* vr$7937 = fb_StrAllocTempDescZEx( (uint8*)"n", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$7937, 0 );
      }
      goto label$10457;
      label$10527:;
      {
       FBSTRING* vr$7938 = fb_StrAllocTempDescZEx( (uint8*)"name", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7938, 0 );
      }
      goto label$10457;
      label$10528:;
      {
       FBSTRING* vr$7939 = fb_StrAllocTempDescZEx( (uint8*)"namelist", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7939, 0 );
      }
      goto label$10457;
      label$10529:;
      {
       FBSTRING* vr$7940 = fb_StrAllocTempDescZEx( (uint8*)"native", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7940, 0 );
      }
      goto label$10457;
      label$10530:;
      {
       FBSTRING* vr$7941 = fb_StrAllocTempDescZEx( (uint8*)"native_binary", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$7941, 0 );
      }
      goto label$10457;
      label$10531:;
      {
       FBSTRING* vr$7942 = fb_StrAllocTempDescZEx( (uint8*)"natural", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7942, 0 );
      }
      goto label$10457;
      label$10532:;
      {
       FBSTRING* vr$7943 = fb_StrAllocTempDescZEx( (uint8*)"natural_spline", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$7943, 0 );
      }
      goto label$10457;
      label$10533:;
      {
       FBSTRING* vr$7944 = fb_StrAllocTempDescZEx( (uint8*)"nchar", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7944, 0 );
      }
      goto label$10457;
      label$10534:;
      {
       FBSTRING* vr$7945 = fb_StrAllocTempDescZEx( (uint8*)"near", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7945, 0 );
      }
      goto label$10457;
      label$10535:;
      {
       FBSTRING* vr$7946 = fb_StrAllocTempDescZEx( (uint8*)"nearest_count", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$7946, 0 );
      }
      goto label$10457;
      label$10536:;
      {
       FBSTRING* vr$7947 = fb_StrAllocTempDescZEx( (uint8*)"negative", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7947, 0 );
      }
      goto label$10457;
      label$10537:;
      {
       FBSTRING* vr$7948 = fb_StrAllocTempDescZEx( (uint8*)"nested_loop", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$7948, 0 );
      }
      goto label$10457;
      label$10538:;
      {
       FBSTRING* vr$7949 = fb_StrAllocTempDescZEx( (uint8*)"new", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7949, 0 );
      }
      goto label$10457;
      label$10539:;
      {
       FBSTRING* vr$7950 = fb_StrAllocTempDescZEx( (uint8*)"next", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7950, 0 );
      }
      goto label$10457;
      label$10540:;
      {
       FBSTRING* vr$7951 = fb_StrAllocTempDescZEx( (uint8*)"nil", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7951, 0 );
      }
      goto label$10457;
      label$10541:;
      {
       FBSTRING* vr$7952 = fb_StrAllocTempDescZEx( (uint8*)"no", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7952, 0 );
      }
      goto label$10457;
      label$10542:;
      {
       FBSTRING* vr$7953 = fb_StrAllocTempDescZEx( (uint8*)"no_bump_scale", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$7953, 0 );
      }
      goto label$10457;
      label$10543:;
      {
       FBSTRING* vr$7954 = fb_StrAllocTempDescZEx( (uint8*)"no_cache", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7954, 0 );
      }
      goto label$10457;
      label$10544:;
      {
       FBSTRING* vr$7955 = fb_StrAllocTempDescZEx( (uint8*)"no_image", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7955, 0 );
      }
      goto label$10457;
      label$10545:;
      {
       FBSTRING* vr$7956 = fb_StrAllocTempDescZEx( (uint8*)"noise", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7956, 0 );
      }
      goto label$10457;
      label$10546:;
      {
       FBSTRING* vr$7957 = fb_StrAllocTempDescZEx( (uint8*)"noise_generator", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$7957, 0 );
      }
      goto label$10457;
      label$10547:;
      {
       FBSTRING* vr$7958 = fb_StrAllocTempDescZEx( (uint8*)"none", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7958, 0 );
      }
      goto label$10457;
      label$10548:;
      {
       FBSTRING* vr$7959 = fb_StrAllocTempDescZEx( (uint8*)"nonlocal", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7959, 0 );
      }
      goto label$10457;
      label$10549:;
      {
       FBSTRING* vr$7960 = fb_StrAllocTempDescZEx( (uint8*)"noperspective", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$7960, 0 );
      }
      goto label$10457;
      label$10550:;
      {
       FBSTRING* vr$7961 = fb_StrAllocTempDescZEx( (uint8*)"no_reflection", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$7961, 0 );
      }
      goto label$10457;
      label$10551:;
      {
       FBSTRING* vr$7962 = fb_StrAllocTempDescZEx( (uint8*)"normal", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7962, 0 );
      }
      goto label$10457;
      label$10552:;
      {
       FBSTRING* vr$7963 = fb_StrAllocTempDescZEx( (uint8*)"normal_indices", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$7963, 0 );
      }
      goto label$10457;
      label$10553:;
      {
       FBSTRING* vr$7964 = fb_StrAllocTempDescZEx( (uint8*)"normalize", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7964, 0 );
      }
      goto label$10457;
      label$10554:;
      {
       FBSTRING* vr$7965 = fb_StrAllocTempDescZEx( (uint8*)"normal_map", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7965, 0 );
      }
      goto label$10457;
      label$10555:;
      {
       FBSTRING* vr$7966 = fb_StrAllocTempDescZEx( (uint8*)"normal_vectors", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$7966, 0 );
      }
      goto label$10457;
      label$10556:;
      {
       FBSTRING* vr$7967 = fb_StrAllocTempDescZEx( (uint8*)"no_shadow", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$7967, 0 );
      }
      goto label$10457;
      label$10557:;
      {
       FBSTRING* vr$7968 = fb_StrAllocTempDescZEx( (uint8*)"nostackframe", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$7968, 0 );
      }
      goto label$10457;
      label$10558:;
      {
       FBSTRING* vr$7969 = fb_StrAllocTempDescZEx( (uint8*)"not", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7969, 0 );
      }
      goto label$10457;
      label$10559:;
      {
       FBSTRING* vr$7970 = fb_StrAllocTempDescZEx( (uint8*)"noteq", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7970, 0 );
      }
      goto label$10457;
      label$10560:;
      {
       FBSTRING* vr$7971 = fb_StrAllocTempDescZEx( (uint8*)"null", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7971, 0 );
      }
      goto label$10457;
      label$10561:;
      {
       FBSTRING* vr$7972 = fb_StrAllocTempDescZEx( (uint8*)"nulls", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7972, 0 );
      }
      goto label$10457;
      label$10562:;
      {
       FBSTRING* vr$7973 = fb_StrAllocTempDescZEx( (uint8*)"number", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7973, 1 );
      }
      goto label$10457;
      label$10563:;
      {
       FBSTRING* vr$7974 = fb_StrAllocTempDescZEx( (uint8*)"number_of_waves", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$7974, 0 );
      }
      goto label$10457;
      label$10564:;
      {
       FBSTRING* vr$7975 = fb_StrAllocTempDescZEx( (uint8*)"numeric", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7975, 0 );
      }
      goto label$10457;
      label$10565:;
      {
       FBSTRING* vr$7976 = fb_StrAllocTempDescZEx( (uint8*)"numeric-edited", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$7976, 0 );
      }
      goto label$10457;
      label$10566:;
      {
       FBSTRING* vr$7977 = fb_StrAllocTempDescZEx( (uint8*)"o", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$7977, 0 );
      }
      goto label$10457;
      label$10567:;
      {
       FBSTRING* vr$7978 = fb_StrAllocTempDescZEx( (uint8*)"object", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7978, 0 );
      }
      goto label$10457;
      label$10568:;
      {
       FBSTRING* vr$7979 = fb_StrAllocTempDescZEx( (uint8*)"object-computer", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$7979, 0 );
      }
      goto label$10457;
      label$10569:;
      {
       FBSTRING* vr$7980 = fb_StrAllocTempDescZEx( (uint8*)"occurs", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7980, 0 );
      }
      goto label$10457;
      label$10570:;
      {
       FBSTRING* vr$7981 = fb_StrAllocTempDescZEx( (uint8*)"oct", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7981, 0 );
      }
      goto label$10457;
      label$10571:;
      {
       FBSTRING* vr$7982 = fb_StrAllocTempDescZEx( (uint8*)"octaves", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7982, 0 );
      }
      goto label$10457;
      label$10572:;
      {
       FBSTRING* vr$7983 = fb_StrAllocTempDescZEx( (uint8*)"octet_length", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$7983, 0 );
      }
      goto label$10457;
      label$10573:;
      {
       FBSTRING* vr$7984 = fb_StrAllocTempDescZEx( (uint8*)"of", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7984, 0 );
      }
      goto label$10457;
      label$10574:;
      {
       FBSTRING* vr$7985 = fb_StrAllocTempDescZEx( (uint8*)"off", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$7985, 0 );
      }
      goto label$10457;
      label$10575:;
      {
       FBSTRING* vr$7986 = fb_StrAllocTempDescZEx( (uint8*)"offset", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7986, 0 );
      }
      goto label$10457;
      label$10576:;
      {
       FBSTRING* vr$7987 = fb_StrAllocTempDescZEx( (uint8*)"oldfpccall", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$7987, 0 );
      }
      goto label$10457;
      label$10577:;
      {
       FBSTRING* vr$7988 = fb_StrAllocTempDescZEx( (uint8*)"omega", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7988, 0 );
      }
      goto label$10457;
      label$10578:;
      {
       FBSTRING* vr$7989 = fb_StrAllocTempDescZEx( (uint8*)"omitted", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7989, 0 );
      }
      goto label$10457;
      label$10579:;
      {
       FBSTRING* vr$7990 = fb_StrAllocTempDescZEx( (uint8*)"omnimax", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7990, 0 );
      }
      goto label$10457;
      label$10580:;
      {
       FBSTRING* vr$7991 = fb_StrAllocTempDescZEx( (uint8*)"on", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7991, 0 );
      }
      goto label$10457;
      label$10581:;
      {
       FBSTRING* vr$7992 = fb_StrAllocTempDescZEx( (uint8*)"once", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7992, 0 );
      }
      goto label$10457;
      label$10582:;
      {
       FBSTRING* vr$7993 = fb_StrAllocTempDescZEx( (uint8*)"onion", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$7993, 0 );
      }
      goto label$10457;
      label$10583:;
      {
       FBSTRING* vr$7994 = fb_StrAllocTempDescZEx( (uint8*)"open", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$7994, 0 );
      }
      goto label$10457;
      label$10584:;
      {
       FBSTRING* vr$7995 = fb_StrAllocTempDescZEx( (uint8*)"operator", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7995, 0 );
      }
      goto label$10457;
      label$10585:;
      {
       FBSTRING* vr$7996 = fb_StrAllocTempDescZEx( (uint8*)"option", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$7996, 0 );
      }
      goto label$10457;
      label$10586:;
      {
       FBSTRING* vr$7997 = fb_StrAllocTempDescZEx( (uint8*)"optional", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$7997, 0 );
      }
      goto label$10457;
      label$10587:;
      {
       FBSTRING* vr$7998 = fb_StrAllocTempDescZEx( (uint8*)"options", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$7998, 0 );
      }
      goto label$10457;
      label$10588:;
      {
       FBSTRING* vr$7999 = fb_StrAllocTempDescZEx( (uint8*)"or", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$7999, 0 );
      }
      goto label$10457;
      label$10589:;
      {
       FBSTRING* vr$8000 = fb_StrAllocTempDescZEx( (uint8*)"or_bits", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8000, 0 );
      }
      goto label$10457;
      label$10590:;
      {
       FBSTRING* vr$8001 = fb_StrAllocTempDescZEx( (uint8*)"order", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8001, 0 );
      }
      goto label$10457;
      label$10591:;
      {
       FBSTRING* vr$8002 = fb_StrAllocTempDescZEx( (uint8*)"ordered", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8002, 0 );
      }
      goto label$10457;
      label$10592:;
      {
       FBSTRING* vr$8003 = fb_StrAllocTempDescZEx( (uint8*)"oren_nayar", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8003, 0 );
      }
      goto label$10457;
      label$10593:;
      {
       FBSTRING* vr$8004 = fb_StrAllocTempDescZEx( (uint8*)"organization", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8004, 0 );
      }
      goto label$10457;
      label$10594:;
      {
       FBSTRING* vr$8005 = fb_StrAllocTempDescZEx( (uint8*)"orient", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8005, 0 );
      }
      goto label$10457;
      label$10595:;
      {
       FBSTRING* vr$8006 = fb_StrAllocTempDescZEx( (uint8*)"orientation", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8006, 0 );
      }
      goto label$10457;
      label$10596:;
      {
       FBSTRING* vr$8007 = fb_StrAllocTempDescZEx( (uint8*)"orthographic", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8007, 0 );
      }
      goto label$10457;
      label$10597:;
      {
       FBSTRING* vr$8008 = fb_StrAllocTempDescZEx( (uint8*)"other", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8008, 0 );
      }
      goto label$10457;
      label$10598:;
      {
       FBSTRING* vr$8009 = fb_StrAllocTempDescZEx( (uint8*)"out", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8009, 0 );
      }
      goto label$10457;
      label$10599:;
      {
       FBSTRING* vr$8010 = fb_StrAllocTempDescZEx( (uint8*)"outer", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8010, 0 );
      }
      goto label$10457;
      label$10600:;
      {
       FBSTRING* vr$8011 = fb_StrAllocTempDescZEx( (uint8*)"output", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8011, 0 );
      }
      goto label$10457;
      label$10601:;
      {
       FBSTRING* vr$8012 = fb_StrAllocTempDescZEx( (uint8*)"overflow", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8012, 0 );
      }
      goto label$10457;
      label$10602:;
      {
       FBSTRING* vr$8013 = fb_StrAllocTempDescZEx( (uint8*)"overlaps", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8013, 0 );
      }
      goto label$10457;
      label$10603:;
      {
       FBSTRING* vr$8014 = fb_StrAllocTempDescZEx( (uint8*)"override", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8014, 0 );
      }
      goto label$10457;
      label$10604:;
      {
       FBSTRING* vr$8015 = fb_StrAllocTempDescZEx( (uint8*)"p", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$8015, 0 );
      }
      goto label$10457;
      label$10605:;
      {
       FBSTRING* vr$8016 = fb_StrAllocTempDescZEx( (uint8*)"packed", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8016, 0 );
      }
      goto label$10457;
      label$10606:;
      {
       FBSTRING* vr$8017 = fb_StrAllocTempDescZEx( (uint8*)"packed-decimal", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$8017, 0 );
      }
      goto label$10457;
      label$10607:;
      {
       FBSTRING* vr$8018 = fb_StrAllocTempDescZEx( (uint8*)"padding", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8018, 0 );
      }
      goto label$10457;
      label$10608:;
      {
       FBSTRING* vr$8019 = fb_StrAllocTempDescZEx( (uint8*)"page", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8019, 0 );
      }
      goto label$10457;
      label$10609:;
      {
       FBSTRING* vr$8020 = fb_StrAllocTempDescZEx( (uint8*)"page-counter", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8020, 0 );
      }
      goto label$10457;
      label$10610:;
      {
       FBSTRING* vr$8021 = fb_StrAllocTempDescZEx( (uint8*)"paint", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8021, 0 );
      }
      goto label$10457;
      label$10611:;
      {
       FBSTRING* vr$8022 = fb_StrAllocTempDescZEx( (uint8*)"palette", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8022, 0 );
      }
      goto label$10457;
      label$10612:;
      {
       FBSTRING* vr$8023 = fb_StrAllocTempDescZEx( (uint8*)"panoramic", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8023, 0 );
      }
      goto label$10457;
      label$10613:;
      {
       FBSTRING* vr$8024 = fb_StrAllocTempDescZEx( (uint8*)"parallel", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8024, 0 );
      }
      goto label$10457;
      label$10614:;
      {
       FBSTRING* vr$8025 = fb_StrAllocTempDescZEx( (uint8*)"parameter", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8025, 0 );
      }
      goto label$10457;
      label$10615:;
      {
       FBSTRING* vr$8026 = fb_StrAllocTempDescZEx( (uint8*)"parametric", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8026, 0 );
      }
      goto label$10457;
      label$10616:;
      {
       FBSTRING* vr$8027 = fb_StrAllocTempDescZEx( (uint8*)"partition", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8027, 0 );
      }
      goto label$10457;
      label$10617:;
      {
       FBSTRING* vr$8028 = fb_StrAllocTempDescZEx( (uint8*)"pascal", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8028, 0 );
      }
      goto label$10457;
      label$10618:;
      {
       FBSTRING* vr$8029 = fb_StrAllocTempDescZEx( (uint8*)"pass", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8029, 0 );
      }
      goto label$10457;
      label$10619:;
      {
       FBSTRING* vr$8030 = fb_StrAllocTempDescZEx( (uint8*)"pass_through", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8030, 0 );
      }
      goto label$10457;
      label$10620:;
      {
       FBSTRING* vr$8031 = fb_StrAllocTempDescZEx( (uint8*)"password", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8031, 0 );
      }
      goto label$10457;
      label$10621:;
      {
       FBSTRING* vr$8032 = fb_StrAllocTempDescZEx( (uint8*)"pattern", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8032, 0 );
      }
      goto label$10457;
      label$10622:;
      {
       FBSTRING* vr$8033 = fb_StrAllocTempDescZEx( (uint8*)"pause", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8033, 0 );
      }
      goto label$10457;
      label$10623:;
      {
       FBSTRING* vr$8034 = fb_StrAllocTempDescZEx( (uint8*)"pcopy", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8034, 0 );
      }
      goto label$10457;
      label$10624:;
      {
       FBSTRING* vr$8035 = fb_StrAllocTempDescZEx( (uint8*)"peek", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8035, 0 );
      }
      goto label$10457;
      label$10625:;
      {
       FBSTRING* vr$8036 = fb_StrAllocTempDescZEx( (uint8*)"pen", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8036, 0 );
      }
      goto label$10457;
      label$10626:;
      {
       FBSTRING* vr$8037 = fb_StrAllocTempDescZEx( (uint8*)"perform", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8037, 0 );
      }
      goto label$10457;
      label$10627:;
      {
       FBSTRING* vr$8038 = fb_StrAllocTempDescZEx( (uint8*)"perspective", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8038, 0 );
      }
      goto label$10457;
      label$10628:;
      {
       FBSTRING* vr$8039 = fb_StrAllocTempDescZEx( (uint8*)"pf", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8039, 0 );
      }
      goto label$10457;
      label$10629:;
      {
       FBSTRING* vr$8040 = fb_StrAllocTempDescZEx( (uint8*)"pgm", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8040, 0 );
      }
      goto label$10457;
      label$10630:;
      {
       FBSTRING* vr$8041 = fb_StrAllocTempDescZEx( (uint8*)"ph", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8041, 0 );
      }
      goto label$10457;
      label$10631:;
      {
       FBSTRING* vr$8042 = fb_StrAllocTempDescZEx( (uint8*)"phase", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8042, 0 );
      }
      goto label$10457;
      label$10632:;
      {
       FBSTRING* vr$8043 = fb_StrAllocTempDescZEx( (uint8*)"phong", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8043, 0 );
      }
      goto label$10457;
      label$10633:;
      {
       FBSTRING* vr$8044 = fb_StrAllocTempDescZEx( (uint8*)"phong_size", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8044, 0 );
      }
      goto label$10457;
      label$10634:;
      {
       FBSTRING* vr$8045 = fb_StrAllocTempDescZEx( (uint8*)"photons", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8045, 0 );
      }
      goto label$10457;
      label$10635:;
      {
       FBSTRING* vr$8046 = fb_StrAllocTempDescZEx( (uint8*)"pi", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8046, 0 );
      }
      goto label$10457;
      label$10636:;
      {
       FBSTRING* vr$8047 = fb_StrAllocTempDescZEx( (uint8*)"pic", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8047, 0 );
      }
      goto label$10457;
      label$10637:;
      {
       FBSTRING* vr$8048 = fb_StrAllocTempDescZEx( (uint8*)"picture", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8048, 0 );
      }
      goto label$10457;
      label$10638:;
      {
       FBSTRING* vr$8049 = fb_StrAllocTempDescZEx( (uint8*)"pigment", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8049, 0 );
      }
      goto label$10457;
      label$10639:;
      {
       FBSTRING* vr$8050 = fb_StrAllocTempDescZEx( (uint8*)"pigment_map", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8050, 0 );
      }
      goto label$10457;
      label$10640:;
      {
       FBSTRING* vr$8051 = fb_StrAllocTempDescZEx( (uint8*)"pigment_pattern", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$8051, 0 );
      }
      goto label$10457;
      label$10641:;
      {
       FBSTRING* vr$8052 = fb_StrAllocTempDescZEx( (uint8*)"planar", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8052, 0 );
      }
      goto label$10457;
      label$10642:;
      {
       FBSTRING* vr$8053 = fb_StrAllocTempDescZEx( (uint8*)"plane", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8053, 0 );
      }
      goto label$10457;
      label$10643:;
      {
       FBSTRING* vr$8054 = fb_StrAllocTempDescZEx( (uint8*)"play", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8054, 0 );
      }
      goto label$10457;
      label$10644:;
      {
       FBSTRING* vr$8055 = fb_StrAllocTempDescZEx( (uint8*)"plus", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8055, 0 );
      }
      goto label$10457;
      label$10645:;
      {
       FBSTRING* vr$8056 = fb_StrAllocTempDescZEx( (uint8*)"pmap", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8056, 0 );
      }
      goto label$10457;
      label$10646:;
      {
       FBSTRING* vr$8057 = fb_StrAllocTempDescZEx( (uint8*)"png", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8057, 0 );
      }
      goto label$10457;
      label$10647:;
      {
       FBSTRING* vr$8058 = fb_StrAllocTempDescZEx( (uint8*)"pnoise", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8058, 0 );
      }
      goto label$10457;
      label$10648:;
      {
       FBSTRING* vr$8059 = fb_StrAllocTempDescZEx( (uint8*)"point", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8059, 0 );
      }
      goto label$10457;
      label$10649:;
      {
       FBSTRING* vr$8060 = fb_StrAllocTempDescZEx( (uint8*)"point_at", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8060, 0 );
      }
      goto label$10457;
      label$10650:;
      {
       FBSTRING* vr$8061 = fb_StrAllocTempDescZEx( (uint8*)"pointcloud_get", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$8061, 0 );
      }
      goto label$10457;
      label$10651:;
      {
       FBSTRING* vr$8062 = fb_StrAllocTempDescZEx( (uint8*)"pointcloud_search", 17ll );
       fb_PrintString( 1, (FBSTRING*)vr$8062, 0 );
      }
      goto label$10457;
      label$10652:;
      {
       FBSTRING* vr$8063 = fb_StrAllocTempDescZEx( (uint8*)"pointcloud_write", 16ll );
       fb_PrintString( 1, (FBSTRING*)vr$8063, 0 );
      }
      goto label$10457;
      label$10653:;
      {
       FBSTRING* vr$8064 = fb_StrAllocTempDescZEx( (uint8*)"pointer", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8064, 0 );
      }
      goto label$10457;
      label$10654:;
      {
       FBSTRING* vr$8065 = fb_StrAllocTempDescZEx( (uint8*)"poke", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8065, 0 );
      }
      goto label$10457;
      label$10655:;
      {
       FBSTRING* vr$8066 = fb_StrAllocTempDescZEx( (uint8*)"poly", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8066, 0 );
      }
      goto label$10457;
      label$10656:;
      {
       FBSTRING* vr$8067 = fb_StrAllocTempDescZEx( (uint8*)"polygon", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8067, 0 );
      }
      goto label$10457;
      label$10657:;
      {
       FBSTRING* vr$8068 = fb_StrAllocTempDescZEx( (uint8*)"poly_wave", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8068, 0 );
      }
      goto label$10457;
      label$10658:;
      {
       FBSTRING* vr$8069 = fb_StrAllocTempDescZEx( (uint8*)"pos", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8069, 0 );
      }
      goto label$10457;
      label$10659:;
      {
       FBSTRING* vr$8070 = fb_StrAllocTempDescZEx( (uint8*)"position", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8070, 0 );
      }
      goto label$10457;
      label$10660:;
      {
       FBSTRING* vr$8071 = fb_StrAllocTempDescZEx( (uint8*)"position_b", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8071, 0 );
      }
      goto label$10457;
      label$10661:;
      {
       FBSTRING* vr$8072 = fb_StrAllocTempDescZEx( (uint8*)"position_mb", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8072, 0 );
      }
      goto label$10457;
      label$10662:;
      {
       FBSTRING* vr$8073 = fb_StrAllocTempDescZEx( (uint8*)"positive", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8073, 0 );
      }
      goto label$10457;
      label$10663:;
      {
       FBSTRING* vr$8074 = fb_StrAllocTempDescZEx( (uint8*)"pot", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8074, 0 );
      }
      goto label$10457;
      label$10664:;
      {
       FBSTRING* vr$8075 = fb_StrAllocTempDescZEx( (uint8*)"pow", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8075, 0 );
      }
      goto label$10457;
      label$10665:;
      {
       FBSTRING* vr$8076 = fb_StrAllocTempDescZEx( (uint8*)"ppm", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8076, 0 );
      }
      goto label$10457;
      label$10666:;
      {
       FBSTRING* vr$8077 = fb_StrAllocTempDescZEx( (uint8*)"precision", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8077, 0 );
      }
      goto label$10457;
      label$10667:;
      {
       FBSTRING* vr$8078 = fb_StrAllocTempDescZEx( (uint8*)"precompute", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8078, 0 );
      }
      goto label$10457;
      label$10668:;
      {
       FBSTRING* vr$8079 = fb_StrAllocTempDescZEx( (uint8*)"preset", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8079, 0 );
      }
      goto label$10457;
      label$10669:;
      {
       FBSTRING* vr$8080 = fb_StrAllocTempDescZEx( (uint8*)"pretrace_end", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8080, 0 );
      }
      goto label$10457;
      label$10670:;
      {
       FBSTRING* vr$8081 = fb_StrAllocTempDescZEx( (uint8*)"pretrace_start", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$8081, 0 );
      }
      goto label$10457;
      label$10671:;
      {
       FBSTRING* vr$8082 = fb_StrAllocTempDescZEx( (uint8*)"print", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8082, 0 );
      }
      goto label$10457;
      label$10672:;
      {
       FBSTRING* vr$8083 = fb_StrAllocTempDescZEx( (uint8*)"printf", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8083, 0 );
      }
      goto label$10457;
      label$10673:;
      {
       FBSTRING* vr$8084 = fb_StrAllocTempDescZEx( (uint8*)"printing", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8084, 0 );
      }
      goto label$10457;
      label$10674:;
      {
       FBSTRING* vr$8085 = fb_StrAllocTempDescZEx( (uint8*)"prism", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8085, 0 );
      }
      goto label$10457;
      label$10675:;
      {
       FBSTRING* vr$8086 = fb_StrAllocTempDescZEx( (uint8*)"private", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8086, 0 );
      }
      goto label$10457;
      label$10676:;
      {
       FBSTRING* vr$8087 = fb_StrAllocTempDescZEx( (uint8*)"procedure", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8087, 0 );
      }
      goto label$10457;
      label$10677:;
      {
       FBSTRING* vr$8088 = fb_StrAllocTempDescZEx( (uint8*)"procedure-pointer", 17ll );
       fb_PrintString( 1, (FBSTRING*)vr$8088, 0 );
      }
      goto label$10457;
      label$10678:;
      {
       FBSTRING* vr$8089 = fb_StrAllocTempDescZEx( (uint8*)"procedures", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8089, 0 );
      }
      goto label$10457;
      label$10679:;
      {
       FBSTRING* vr$8090 = fb_StrAllocTempDescZEx( (uint8*)"proceed", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8090, 0 );
      }
      goto label$10457;
      label$10680:;
      {
       FBSTRING* vr$8091 = fb_StrAllocTempDescZEx( (uint8*)"processing", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8091, 0 );
      }
      goto label$10457;
      label$10681:;
      {
       FBSTRING* vr$8092 = fb_StrAllocTempDescZEx( (uint8*)"prod", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8092, 0 );
      }
      goto label$10457;
      label$10682:;
      {
       FBSTRING* vr$8093 = fb_StrAllocTempDescZEx( (uint8*)"program", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8093, 0 );
      }
      goto label$10457;
      label$10683:;
      {
       FBSTRING* vr$8094 = fb_StrAllocTempDescZEx( (uint8*)"program-id", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8094, 0 );
      }
      goto label$10457;
      label$10684:;
      {
       FBSTRING* vr$8095 = fb_StrAllocTempDescZEx( (uint8*)"projected_through", 17ll );
       fb_PrintString( 1, (FBSTRING*)vr$8095, 0 );
      }
      goto label$10457;
      label$10685:;
      {
       FBSTRING* vr$8096 = fb_StrAllocTempDescZEx( (uint8*)"property", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8096, 0 );
      }
      goto label$10457;
      label$10686:;
      {
       FBSTRING* vr$8097 = fb_StrAllocTempDescZEx( (uint8*)"protected", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8097, 0 );
      }
      goto label$10457;
      label$10687:;
      {
       FBSTRING* vr$8098 = fb_StrAllocTempDescZEx( (uint8*)"pset", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8098, 0 );
      }
      goto label$10457;
      label$10688:;
      {
       FBSTRING* vr$8099 = fb_StrAllocTempDescZEx( (uint8*)"psnoise", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8099, 0 );
      }
      goto label$10457;
      label$10689:;
      {
       FBSTRING* vr$8100 = fb_StrAllocTempDescZEx( (uint8*)"ptype", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8100, 0 );
      }
      goto label$10457;
      label$10690:;
      {
       FBSTRING* vr$8101 = fb_StrAllocTempDescZEx( (uint8*)"public", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8101, 0 );
      }
      goto label$10457;
      label$10691:;
      {
       FBSTRING* vr$8102 = fb_StrAllocTempDescZEx( (uint8*)"published", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8102, 0 );
      }
      goto label$10457;
      label$10692:;
      {
       FBSTRING* vr$8103 = fb_StrAllocTempDescZEx( (uint8*)"purge", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8103, 0 );
      }
      goto label$10457;
      label$10693:;
      {
       FBSTRING* vr$8104 = fb_StrAllocTempDescZEx( (uint8*)"put", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8104, 0 );
      }
      goto label$10457;
      label$10694:;
      {
       FBSTRING* vr$8105 = fb_StrAllocTempDescZEx( (uint8*)"pwr", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8105, 0 );
      }
      goto label$10457;
      label$10695:;
      {
       FBSTRING* vr$8106 = fb_StrAllocTempDescZEx( (uint8*)"q", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$8106, 0 );
      }
      goto label$10457;
      label$10696:;
      {
       FBSTRING* vr$8107 = fb_StrAllocTempDescZEx( (uint8*)"quadratic_spline", 16ll );
       fb_PrintString( 1, (FBSTRING*)vr$8107, 0 );
      }
      goto label$10457;
      label$10697:;
      {
       FBSTRING* vr$8108 = fb_StrAllocTempDescZEx( (uint8*)"quadric", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8108, 0 );
      }
      goto label$10457;
      label$10698:;
      {
       FBSTRING* vr$8109 = fb_StrAllocTempDescZEx( (uint8*)"quartic", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8109, 0 );
      }
      goto label$10457;
      label$10699:;
      {
       FBSTRING* vr$8110 = fb_StrAllocTempDescZEx( (uint8*)"quaternion", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8110, 0 );
      }
      goto label$10457;
      label$10700:;
      {
       FBSTRING* vr$8111 = fb_StrAllocTempDescZEx( (uint8*)"queue", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8111, 0 );
      }
      goto label$10457;
      label$10701:;
      {
       FBSTRING* vr$8112 = fb_StrAllocTempDescZEx( (uint8*)"quick_color", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8112, 0 );
      }
      goto label$10457;
      label$10702:;
      {
       FBSTRING* vr$8113 = fb_StrAllocTempDescZEx( (uint8*)"quick_colour", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8113, 0 );
      }
      goto label$10457;
      label$10703:;
      {
       FBSTRING* vr$8114 = fb_StrAllocTempDescZEx( (uint8*)"quilted", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8114, 0 );
      }
      goto label$10457;
      label$10704:;
      {
       FBSTRING* vr$8115 = fb_StrAllocTempDescZEx( (uint8*)"quote", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8115, 0 );
      }
      goto label$10457;
      label$10705:;
      {
       FBSTRING* vr$8116 = fb_StrAllocTempDescZEx( (uint8*)"quotes", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8116, 0 );
      }
      goto label$10457;
      label$10706:;
      {
       FBSTRING* vr$8117 = fb_StrAllocTempDescZEx( (uint8*)"r", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$8117, 0 );
      }
      goto label$10457;
      label$10707:;
      {
       FBSTRING* vr$8118 = fb_StrAllocTempDescZEx( (uint8*)"radial", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8118, 0 );
      }
      goto label$10457;
      label$10708:;
      {
       FBSTRING* vr$8119 = fb_StrAllocTempDescZEx( (uint8*)"radians", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8119, 0 );
      }
      goto label$10457;
      label$10709:;
      {
       FBSTRING* vr$8120 = fb_StrAllocTempDescZEx( (uint8*)"radiosity", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8120, 0 );
      }
      goto label$10457;
      label$10710:;
      {
       FBSTRING* vr$8121 = fb_StrAllocTempDescZEx( (uint8*)"radius", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8121, 0 );
      }
      goto label$10457;
      label$10711:;
      {
       FBSTRING* vr$8122 = fb_StrAllocTempDescZEx( (uint8*)"rainbow", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8122, 0 );
      }
      goto label$10457;
      label$10712:;
      {
       FBSTRING* vr$8123 = fb_StrAllocTempDescZEx( (uint8*)"raise", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8123, 0 );
      }
      goto label$10457;
      label$10713:;
      {
       FBSTRING* vr$8124 = fb_StrAllocTempDescZEx( (uint8*)"ramp_wave", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8124, 0 );
      }
      goto label$10457;
      label$10714:;
      {
       FBSTRING* vr$8125 = fb_StrAllocTempDescZEx( (uint8*)"rand", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8125, 0 );
      }
      goto label$10457;
      label$10458:;
      static const void* tmp$5397[256ll] = {
       &&label$10459,
       &&label$10460,
       &&label$10461,
       &&label$10462,
       &&label$10463,
       &&label$10464,
       &&label$10465,
       &&label$10466,
       &&label$10467,
       &&label$10468,
       &&label$10469,
       &&label$10470,
       &&label$10471,
       &&label$10472,
       &&label$10473,
       &&label$10474,
       &&label$10475,
       &&label$10476,
       &&label$10477,
       &&label$10478,
       &&label$10479,
       &&label$10480,
       &&label$10481,
       &&label$10482,
       &&label$10483,
       &&label$10484,
       &&label$10485,
       &&label$10486,
       &&label$10487,
       &&label$10488,
       &&label$10489,
       &&label$10490,
       &&label$10491,
       &&label$10492,
       &&label$10493,
       &&label$10494,
       &&label$10495,
       &&label$10496,
       &&label$10497,
       &&label$10498,
       &&label$10499,
       &&label$10500,
       &&label$10501,
       &&label$10502,
       &&label$10503,
       &&label$10504,
       &&label$10505,
       &&label$10506,
       &&label$10507,
       &&label$10508,
       &&label$10509,
       &&label$10510,
       &&label$10511,
       &&label$10512,
       &&label$10513,
       &&label$10514,
       &&label$10515,
       &&label$10516,
       &&label$10517,
       &&label$10518,
       &&label$10519,
       &&label$10520,
       &&label$10521,
       &&label$10522,
       &&label$10523,
       &&label$10524,
       &&label$10525,
       &&label$10526,
       &&label$10527,
       &&label$10528,
       &&label$10529,
       &&label$10530,
       &&label$10531,
       &&label$10532,
       &&label$10533,
       &&label$10534,
       &&label$10535,
       &&label$10536,
       &&label$10537,
       &&label$10538,
       &&label$10539,
       &&label$10540,
       &&label$10541,
       &&label$10542,
       &&label$10543,
       &&label$10544,
       &&label$10545,
       &&label$10546,
       &&label$10547,
       &&label$10548,
       &&label$10549,
       &&label$10550,
       &&label$10551,
       &&label$10552,
       &&label$10553,
       &&label$10554,
       &&label$10555,
       &&label$10556,
       &&label$10557,
       &&label$10558,
       &&label$10559,
       &&label$10560,
       &&label$10561,
       &&label$10562,
       &&label$10563,
       &&label$10564,
       &&label$10565,
       &&label$10566,
       &&label$10567,
       &&label$10568,
       &&label$10569,
       &&label$10570,
       &&label$10571,
       &&label$10572,
       &&label$10573,
       &&label$10574,
       &&label$10575,
       &&label$10576,
       &&label$10577,
       &&label$10578,
       &&label$10579,
       &&label$10580,
       &&label$10581,
       &&label$10582,
       &&label$10583,
       &&label$10584,
       &&label$10585,
       &&label$10586,
       &&label$10587,
       &&label$10588,
       &&label$10589,
       &&label$10590,
       &&label$10591,
       &&label$10592,
       &&label$10593,
       &&label$10594,
       &&label$10595,
       &&label$10596,
       &&label$10597,
       &&label$10598,
       &&label$10599,
       &&label$10600,
       &&label$10601,
       &&label$10602,
       &&label$10603,
       &&label$10604,
       &&label$10605,
       &&label$10606,
       &&label$10607,
       &&label$10608,
       &&label$10609,
       &&label$10610,
       &&label$10611,
       &&label$10612,
       &&label$10613,
       &&label$10614,
       &&label$10615,
       &&label$10616,
       &&label$10617,
       &&label$10618,
       &&label$10619,
       &&label$10620,
       &&label$10621,
       &&label$10622,
       &&label$10623,
       &&label$10624,
       &&label$10625,
       &&label$10626,
       &&label$10627,
       &&label$10628,
       &&label$10629,
       &&label$10630,
       &&label$10631,
       &&label$10632,
       &&label$10633,
       &&label$10634,
       &&label$10635,
       &&label$10636,
       &&label$10637,
       &&label$10638,
       &&label$10639,
       &&label$10640,
       &&label$10641,
       &&label$10642,
       &&label$10643,
       &&label$10644,
       &&label$10645,
       &&label$10646,
       &&label$10647,
       &&label$10648,
       &&label$10649,
       &&label$10650,
       &&label$10651,
       &&label$10652,
       &&label$10653,
       &&label$10654,
       &&label$10655,
       &&label$10656,
       &&label$10657,
       &&label$10658,
       &&label$10659,
       &&label$10660,
       &&label$10661,
       &&label$10662,
       &&label$10663,
       &&label$10664,
       &&label$10665,
       &&label$10666,
       &&label$10667,
       &&label$10668,
       &&label$10669,
       &&label$10670,
       &&label$10671,
       &&label$10672,
       &&label$10673,
       &&label$10674,
       &&label$10675,
       &&label$10676,
       &&label$10677,
       &&label$10678,
       &&label$10679,
       &&label$10680,
       &&label$10681,
       &&label$10682,
       &&label$10683,
       &&label$10684,
       &&label$10685,
       &&label$10686,
       &&label$10687,
       &&label$10688,
       &&label$10689,
       &&label$10690,
       &&label$10691,
       &&label$10692,
       &&label$10693,
       &&label$10694,
       &&label$10695,
       &&label$10696,
       &&label$10697,
       &&label$10698,
       &&label$10699,
       &&label$10700,
       &&label$10701,
       &&label$10702,
       &&label$10703,
       &&label$10704,
       &&label$10705,
       &&label$10706,
       &&label$10707,
       &&label$10708,
       &&label$10709,
       &&label$10710,
       &&label$10711,
       &&label$10712,
       &&label$10713,
       &&label$10714,
      };
      if( TMP$4085$6 > 255ull ) goto label$10457;
      goto *tmp$5397[TMP$4085$6 - 0ull];
      label$10457:;
     }
    }
    goto label$9561;
    label$10715:;
    {
     {
      uint64 TMP$4337$6;
      TMP$4337$6 = ((uint64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394888ll) ));
      if( TMP$4337$6 != 0ull ) goto label$10717;
      label$10718:;
      {
       FBSTRING* vr$8127 = fb_StrAllocTempDescZEx( (uint8*)"random", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8127, 0 );
      }
      goto label$10716;
      label$10717:;
      if( TMP$4337$6 != 1ull ) goto label$10719;
      label$10720:;
      {
       FBSTRING* vr$8128 = fb_StrAllocTempDescZEx( (uint8*)"randomize", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8128, 0 );
      }
      goto label$10716;
      label$10719:;
      if( TMP$4337$6 != 2ull ) goto label$10721;
      label$10722:;
      {
       FBSTRING* vr$8129 = fb_StrAllocTempDescZEx( (uint8*)"range", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8129, 0 );
      }
      goto label$10716;
      label$10721:;
      if( TMP$4337$6 != 3ull ) goto label$10723;
      label$10724:;
      {
       FBSTRING* vr$8130 = fb_StrAllocTempDescZEx( (uint8*)"ratio", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8130, 0 );
      }
      goto label$10716;
      label$10723:;
      if( TMP$4337$6 != 4ull ) goto label$10725;
      label$10726:;
      {
       FBSTRING* vr$8131 = fb_StrAllocTempDescZEx( (uint8*)"raytype", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8131, 0 );
      }
      goto label$10716;
      label$10725:;
      if( TMP$4337$6 != 5ull ) goto label$10727;
      label$10728:;
      {
       FBSTRING* vr$8132 = fb_StrAllocTempDescZEx( (uint8*)"rd", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8132, 0 );
      }
      goto label$10716;
      label$10727:;
      if( TMP$4337$6 != 6ull ) goto label$10729;
      label$10730:;
      {
       FBSTRING* vr$8133 = fb_StrAllocTempDescZEx( (uint8*)"read", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8133, 0 );
      }
      goto label$10716;
      label$10729:;
      if( TMP$4337$6 != 7ull ) goto label$10731;
      label$10732:;
      {
       FBSTRING* vr$8134 = fb_StrAllocTempDescZEx( (uint8*)"ready", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8134, 0 );
      }
      goto label$10716;
      label$10731:;
      if( TMP$4337$6 != 8ull ) goto label$10733;
      label$10734:;
      {
       FBSTRING* vr$8135 = fb_StrAllocTempDescZEx( (uint8*)"real", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8135, 0 );
      }
      goto label$10716;
      label$10733:;
      if( TMP$4337$6 != 9ull ) goto label$10735;
      label$10736:;
      {
       FBSTRING* vr$8136 = fb_StrAllocTempDescZEx( (uint8*)"receive", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8136, 0 );
      }
      goto label$10716;
      label$10735:;
      if( TMP$4337$6 != 10ull ) goto label$10737;
      label$10738:;
      {
       FBSTRING* vr$8137 = fb_StrAllocTempDescZEx( (uint8*)"reciprocal", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8137, 0 );
      }
      goto label$10716;
      label$10737:;
      if( TMP$4337$6 != 11ull ) goto label$10739;
      label$10740:;
      {
       FBSTRING* vr$8138 = fb_StrAllocTempDescZEx( (uint8*)"record", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8138, 0 );
      }
      goto label$10716;
      label$10739:;
      if( TMP$4337$6 != 12ull ) goto label$10741;
      label$10742:;
      {
       FBSTRING* vr$8139 = fb_StrAllocTempDescZEx( (uint8*)"recording", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8139, 0 );
      }
      goto label$10716;
      label$10741:;
      if( TMP$4337$6 != 13ull ) goto label$10743;
      label$10744:;
      {
       FBSTRING* vr$8140 = fb_StrAllocTempDescZEx( (uint8*)"records", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8140, 0 );
      }
      goto label$10716;
      label$10743:;
      if( TMP$4337$6 != 14ull ) goto label$10745;
      label$10746:;
      {
       FBSTRING* vr$8141 = fb_StrAllocTempDescZEx( (uint8*)"recursion_limit", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$8141, 0 );
      }
      goto label$10716;
      label$10745:;
      if( TMP$4337$6 != 15ull ) goto label$10747;
      label$10748:;
      {
       FBSTRING* vr$8142 = fb_StrAllocTempDescZEx( (uint8*)"recursive", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8142, 0 );
      }
      goto label$10716;
      label$10747:;
      if( TMP$4337$6 != 16ull ) goto label$10749;
      label$10750:;
      {
       FBSTRING* vr$8143 = fb_StrAllocTempDescZEx( (uint8*)"red", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8143, 0 );
      }
      goto label$10716;
      label$10749:;
      if( TMP$4337$6 != 17ull ) goto label$10751;
      label$10752:;
      {
       FBSTRING* vr$8144 = fb_StrAllocTempDescZEx( (uint8*)"redefines", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8144, 0 );
      }
      goto label$10716;
      label$10751:;
      if( TMP$4337$6 != 18ull ) goto label$10753;
      label$10754:;
      {
       FBSTRING* vr$8145 = fb_StrAllocTempDescZEx( (uint8*)"reel", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8145, 0 );
      }
      goto label$10716;
      label$10753:;
      if( TMP$4337$6 != 19ull ) goto label$10755;
      label$10756:;
      {
       FBSTRING* vr$8146 = fb_StrAllocTempDescZEx( (uint8*)"reference", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8146, 0 );
      }
      goto label$10716;
      label$10755:;
      if( TMP$4337$6 != 20ull ) goto label$10757;
      label$10758:;
      {
       FBSTRING* vr$8147 = fb_StrAllocTempDescZEx( (uint8*)"references", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8147, 0 );
      }
      goto label$10716;
      label$10757:;
      if( TMP$4337$6 != 21ull ) goto label$10759;
      label$10760:;
      {
       FBSTRING* vr$8148 = fb_StrAllocTempDescZEx( (uint8*)"reflect", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8148, 0 );
      }
      goto label$10716;
      label$10759:;
      if( TMP$4337$6 != 22ull ) goto label$10761;
      label$10762:;
      {
       FBSTRING* vr$8149 = fb_StrAllocTempDescZEx( (uint8*)"reflection", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8149, 0 );
      }
      goto label$10716;
      label$10761:;
      if( TMP$4337$6 != 23ull ) goto label$10763;
      label$10764:;
      {
       FBSTRING* vr$8150 = fb_StrAllocTempDescZEx( (uint8*)"reflection_exponent", 19ll );
       fb_PrintString( 1, (FBSTRING*)vr$8150, 0 );
      }
      goto label$10716;
      label$10763:;
      if( TMP$4337$6 != 24ull ) goto label$10765;
      label$10766:;
      {
       FBSTRING* vr$8151 = fb_StrAllocTempDescZEx( (uint8*)"refract", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8151, 0 );
      }
      goto label$10716;
      label$10765:;
      if( TMP$4337$6 != 25ull ) goto label$10767;
      label$10768:;
      {
       FBSTRING* vr$8152 = fb_StrAllocTempDescZEx( (uint8*)"refraction", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8152, 0 );
      }
      goto label$10716;
      label$10767:;
      if( TMP$4337$6 != 26ull ) goto label$10769;
      label$10770:;
      {
       FBSTRING* vr$8153 = fb_StrAllocTempDescZEx( (uint8*)"regex_match", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8153, 0 );
      }
      goto label$10716;
      label$10769:;
      if( TMP$4337$6 != 27ull ) goto label$10771;
      label$10772:;
      {
       FBSTRING* vr$8154 = fb_StrAllocTempDescZEx( (uint8*)"regex_search", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8154, 0 );
      }
      goto label$10716;
      label$10771:;
      if( TMP$4337$6 != 28ull ) goto label$10773;
      label$10774:;
      {
       FBSTRING* vr$8155 = fb_StrAllocTempDescZEx( (uint8*)"register", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8155, 0 );
      }
      goto label$10716;
      label$10773:;
      if( TMP$4337$6 != 29ull ) goto label$10775;
      label$10776:;
      {
       FBSTRING* vr$8156 = fb_StrAllocTempDescZEx( (uint8*)"reintroduce", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8156, 0 );
      }
      goto label$10716;
      label$10775:;
      if( TMP$4337$6 != 30ull ) goto label$10777;
      label$10778:;
      {
       FBSTRING* vr$8157 = fb_StrAllocTempDescZEx( (uint8*)"relative", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8157, 0 );
      }
      goto label$10716;
      label$10777:;
      if( TMP$4337$6 != 31ull ) goto label$10779;
      label$10780:;
      {
       FBSTRING* vr$8158 = fb_StrAllocTempDescZEx( (uint8*)"release", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8158, 0 );
      }
      goto label$10716;
      label$10779:;
      if( TMP$4337$6 != 32ull ) goto label$10781;
      label$10782:;
      {
       FBSTRING* vr$8159 = fb_StrAllocTempDescZEx( (uint8*)"reload", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8159, 0 );
      }
      goto label$10716;
      label$10781:;
      if( TMP$4337$6 != 33ull ) goto label$10783;
      label$10784:;
      {
       FBSTRING* vr$8160 = fb_StrAllocTempDescZEx( (uint8*)"rem", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8160, 0 );
      }
      goto label$10716;
      label$10783:;
      if( TMP$4337$6 != 34ull ) goto label$10785;
      label$10786:;
      {
       FBSTRING* vr$8161 = fb_StrAllocTempDescZEx( (uint8*)"remainder", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8161, 0 );
      }
      goto label$10716;
      label$10785:;
      if( TMP$4337$6 != 35ull ) goto label$10787;
      label$10788:;
      {
       FBSTRING* vr$8162 = fb_StrAllocTempDescZEx( (uint8*)"removal", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8162, 0 );
      }
      goto label$10716;
      label$10787:;
      if( TMP$4337$6 != 36ull ) goto label$10789;
      label$10790:;
      {
       FBSTRING* vr$8163 = fb_StrAllocTempDescZEx( (uint8*)"renames", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8163, 0 );
      }
      goto label$10716;
      label$10789:;
      if( TMP$4337$6 != 37ull ) goto label$10791;
      label$10792:;
      {
       FBSTRING* vr$8164 = fb_StrAllocTempDescZEx( (uint8*)"render", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8164, 0 );
      }
      goto label$10716;
      label$10791:;
      if( TMP$4337$6 != 38ull ) goto label$10793;
      label$10794:;
      {
       FBSTRING* vr$8165 = fb_StrAllocTempDescZEx( (uint8*)"renum", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8165, 0 );
      }
      goto label$10716;
      label$10793:;
      if( TMP$4337$6 != 39ull ) goto label$10795;
      label$10796:;
      {
       FBSTRING* vr$8166 = fb_StrAllocTempDescZEx( (uint8*)"repeat", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8166, 0 );
      }
      goto label$10716;
      label$10795:;
      if( TMP$4337$6 != 40ull ) goto label$10797;
      label$10798:;
      {
       FBSTRING* vr$8167 = fb_StrAllocTempDescZEx( (uint8*)"replace", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8167, 0 );
      }
      goto label$10716;
      label$10797:;
      if( TMP$4337$6 != 41ull ) goto label$10799;
      label$10800:;
      {
       FBSTRING* vr$8168 = fb_StrAllocTempDescZEx( (uint8*)"replacing", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8168, 0 );
      }
      goto label$10716;
      label$10799:;
      if( TMP$4337$6 != 42ull ) goto label$10801;
      label$10802:;
      {
       FBSTRING* vr$8169 = fb_StrAllocTempDescZEx( (uint8*)"report", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8169, 0 );
      }
      goto label$10716;
      label$10801:;
      if( TMP$4337$6 != 43ull ) goto label$10803;
      label$10804:;
      {
       FBSTRING* vr$8170 = fb_StrAllocTempDescZEx( (uint8*)"reporting", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8170, 0 );
      }
      goto label$10716;
      label$10803:;
      if( TMP$4337$6 != 44ull ) goto label$10805;
      label$10806:;
      {
       FBSTRING* vr$8171 = fb_StrAllocTempDescZEx( (uint8*)"reports", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8171, 0 );
      }
      goto label$10716;
      label$10805:;
      if( TMP$4337$6 != 45ull ) goto label$10807;
      label$10808:;
      {
       FBSTRING* vr$8172 = fb_StrAllocTempDescZEx( (uint8*)"repository", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8172, 0 );
      }
      goto label$10716;
      label$10807:;
      if( TMP$4337$6 != 46ull ) goto label$10809;
      label$10810:;
      {
       FBSTRING* vr$8173 = fb_StrAllocTempDescZEx( (uint8*)"rerun", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8173, 0 );
      }
      goto label$10716;
      label$10809:;
      if( TMP$4337$6 != 47ull ) goto label$10811;
      label$10812:;
      {
       FBSTRING* vr$8174 = fb_StrAllocTempDescZEx( (uint8*)"reserve", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8174, 0 );
      }
      goto label$10716;
      label$10811:;
      if( TMP$4337$6 != 48ull ) goto label$10813;
      label$10814:;
      {
       FBSTRING* vr$8175 = fb_StrAllocTempDescZEx( (uint8*)"reset", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8175, 0 );
      }
      goto label$10716;
      label$10813:;
      if( TMP$4337$6 != 49ull ) goto label$10815;
      label$10816:;
      {
       FBSTRING* vr$8176 = fb_StrAllocTempDescZEx( (uint8*)"restore", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8176, 0 );
      }
      goto label$10716;
      label$10815:;
      if( TMP$4337$6 != 50ull ) goto label$10817;
      label$10818:;
      {
       FBSTRING* vr$8177 = fb_StrAllocTempDescZEx( (uint8*)"resume", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8177, 0 );
      }
      goto label$10716;
      label$10817:;
      if( TMP$4337$6 != 51ull ) goto label$10819;
      label$10820:;
      {
       FBSTRING* vr$8178 = fb_StrAllocTempDescZEx( (uint8*)"return", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8178, 0 );
      }
      goto label$10716;
      label$10819:;
      if( TMP$4337$6 != 52ull ) goto label$10821;
      label$10822:;
      {
       FBSTRING* vr$8179 = fb_StrAllocTempDescZEx( (uint8*)"return-code", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8179, 0 );
      }
      goto label$10716;
      label$10821:;
      if( TMP$4337$6 != 53ull ) goto label$10823;
      label$10824:;
      {
       FBSTRING* vr$8180 = fb_StrAllocTempDescZEx( (uint8*)"returning", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8180, 0 );
      }
      goto label$10716;
      label$10823:;
      if( TMP$4337$6 != 54ull ) goto label$10825;
      label$10826:;
      {
       FBSTRING* vr$8181 = fb_StrAllocTempDescZEx( (uint8*)"reversed", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8181, 0 );
      }
      goto label$10716;
      label$10825:;
      if( TMP$4337$6 != 55ull ) goto label$10827;
      label$10828:;
      {
       FBSTRING* vr$8182 = fb_StrAllocTempDescZEx( (uint8*)"rewind", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8182, 0 );
      }
      goto label$10716;
      label$10827:;
      if( TMP$4337$6 != 56ull ) goto label$10829;
      label$10830:;
      {
       FBSTRING* vr$8183 = fb_StrAllocTempDescZEx( (uint8*)"rewrite", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8183, 0 );
      }
      goto label$10716;
      label$10829:;
      if( TMP$4337$6 != 57ull ) goto label$10831;
      label$10832:;
      {
       FBSTRING* vr$8184 = fb_StrAllocTempDescZEx( (uint8*)"rf", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8184, 0 );
      }
      goto label$10716;
      label$10831:;
      if( TMP$4337$6 != 58ull ) goto label$10833;
      label$10834:;
      {
       FBSTRING* vr$8185 = fb_StrAllocTempDescZEx( (uint8*)"rgb", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8185, 0 );
      }
      goto label$10716;
      label$10833:;
      if( TMP$4337$6 != 59ull ) goto label$10835;
      label$10836:;
      {
       FBSTRING* vr$8186 = fb_StrAllocTempDescZEx( (uint8*)"rgbf", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8186, 0 );
      }
      goto label$10716;
      label$10835:;
      if( TMP$4337$6 != 60ull ) goto label$10837;
      label$10838:;
      {
       FBSTRING* vr$8187 = fb_StrAllocTempDescZEx( (uint8*)"rgbft", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8187, 0 );
      }
      goto label$10716;
      label$10837:;
      if( TMP$4337$6 != 61ull ) goto label$10839;
      label$10840:;
      {
       FBSTRING* vr$8188 = fb_StrAllocTempDescZEx( (uint8*)"rgbt", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8188, 0 );
      }
      goto label$10716;
      label$10839:;
      if( TMP$4337$6 != 62ull ) goto label$10841;
      label$10842:;
      {
       FBSTRING* vr$8189 = fb_StrAllocTempDescZEx( (uint8*)"rh", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8189, 0 );
      }
      goto label$10716;
      label$10841:;
      if( TMP$4337$6 != 63ull ) goto label$10843;
      label$10844:;
      {
       FBSTRING* vr$8190 = fb_StrAllocTempDescZEx( (uint8*)"right", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8190, 0 );
      }
      goto label$10716;
      label$10843:;
      if( TMP$4337$6 != 65ull ) goto label$10845;
      label$10846:;
      {
       FBSTRING* vr$8191 = fb_StrAllocTempDescZEx( (uint8*)"ripples", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8191, 0 );
      }
      goto label$10716;
      label$10845:;
      if( TMP$4337$6 != 66ull ) goto label$10847;
      label$10848:;
      {
       FBSTRING* vr$8192 = fb_StrAllocTempDescZEx( (uint8*)"rmdir", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8192, 0 );
      }
      goto label$10716;
      label$10847:;
      if( TMP$4337$6 != 67ull ) goto label$10849;
      label$10850:;
      {
       FBSTRING* vr$8193 = fb_StrAllocTempDescZEx( (uint8*)"rnd", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8193, 0 );
      }
      goto label$10716;
      label$10849:;
      if( TMP$4337$6 != 68ull ) goto label$10851;
      label$10852:;
      {
       FBSTRING* vr$8194 = fb_StrAllocTempDescZEx( (uint8*)"rotate", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8194, 0 );
      }
      goto label$10716;
      label$10851:;
      if( TMP$4337$6 != 69ull ) goto label$10853;
      label$10854:;
      {
       FBSTRING* vr$8195 = fb_StrAllocTempDescZEx( (uint8*)"roughness", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8195, 0 );
      }
      goto label$10716;
      label$10853:;
      if( TMP$4337$6 != 70ull ) goto label$10855;
      label$10856:;
      {
       FBSTRING* vr$8196 = fb_StrAllocTempDescZEx( (uint8*)"round", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8196, 0 );
      }
      goto label$10716;
      label$10855:;
      if( TMP$4337$6 != 71ull ) goto label$10857;
      label$10858:;
      {
       FBSTRING* vr$8197 = fb_StrAllocTempDescZEx( (uint8*)"rounded", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8197, 0 );
      }
      goto label$10716;
      label$10857:;
      if( TMP$4337$6 != 72ull ) goto label$10859;
      label$10860:;
      {
       FBSTRING* vr$8198 = fb_StrAllocTempDescZEx( (uint8*)"row", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8198, 0 );
      }
      goto label$10716;
      label$10859:;
      if( TMP$4337$6 != 73ull ) goto label$10861;
      label$10862:;
      {
       FBSTRING* vr$8199 = fb_StrAllocTempDescZEx( (uint8*)"row_major", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8199, 0 );
      }
      goto label$10716;
      label$10861:;
      if( TMP$4337$6 != 74ull ) goto label$10863;
      label$10864:;
      {
       FBSTRING* vr$8200 = fb_StrAllocTempDescZEx( (uint8*)"rpad", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8200, 0 );
      }
      goto label$10716;
      label$10863:;
      if( TMP$4337$6 != 75ull ) goto label$10865;
      label$10866:;
      {
       FBSTRING* vr$8201 = fb_StrAllocTempDescZEx( (uint8*)"rset", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8201, 0 );
      }
      goto label$10716;
      label$10865:;
      if( TMP$4337$6 != 76ull ) goto label$10867;
      label$10868:;
      {
       FBSTRING* vr$8202 = fb_StrAllocTempDescZEx( (uint8*)"run", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8202, 0 );
      }
      goto label$10716;
      label$10867:;
      if( TMP$4337$6 != 77ull ) goto label$10869;
      label$10870:;
      {
       FBSTRING* vr$8203 = fb_StrAllocTempDescZEx( (uint8*)"s", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$8203, 0 );
      }
      goto label$10716;
      label$10869:;
      if( TMP$4337$6 != 78ull ) goto label$10871;
      label$10872:;
      {
       FBSTRING* vr$8204 = fb_StrAllocTempDescZEx( (uint8*)"safecall", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8204, 0 );
      }
      goto label$10716;
      label$10871:;
      if( TMP$4337$6 != 79ull ) goto label$10873;
      label$10874:;
      {
       FBSTRING* vr$8205 = fb_StrAllocTempDescZEx( (uint8*)"same", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8205, 0 );
      }
      goto label$10716;
      label$10873:;
      if( TMP$4337$6 != 80ull ) goto label$10875;
      label$10876:;
      {
       FBSTRING* vr$8206 = fb_StrAllocTempDescZEx( (uint8*)"same_source", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8206, 0 );
      }
      goto label$10716;
      label$10875:;
      if( TMP$4337$6 != 81ull ) goto label$10877;
      label$10878:;
      {
       FBSTRING* vr$8207 = fb_StrAllocTempDescZEx( (uint8*)"sampler1D", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8207, 0 );
      }
      goto label$10716;
      label$10877:;
      if( TMP$4337$6 != 82ull ) goto label$10879;
      label$10880:;
      {
       FBSTRING* vr$8208 = fb_StrAllocTempDescZEx( (uint8*)"sampler1DArray", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$8208, 0 );
      }
      goto label$10716;
      label$10879:;
      if( TMP$4337$6 != 83ull ) goto label$10881;
      label$10882:;
      {
       FBSTRING* vr$8209 = fb_StrAllocTempDescZEx( (uint8*)"sampler1DArrayShadow", 20ll );
       fb_PrintString( 1, (FBSTRING*)vr$8209, 0 );
      }
      goto label$10716;
      label$10881:;
      if( TMP$4337$6 != 84ull ) goto label$10883;
      label$10884:;
      {
       FBSTRING* vr$8210 = fb_StrAllocTempDescZEx( (uint8*)"sampler1DShadow", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$8210, 0 );
      }
      goto label$10716;
      label$10883:;
      if( TMP$4337$6 != 95ull ) goto label$10885;
      label$10886:;
      {
       FBSTRING* vr$8211 = fb_StrAllocTempDescZEx( (uint8*)"sampler2D", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8211, 0 );
      }
      goto label$10716;
      label$10885:;
      if( TMP$4337$6 != 86ull ) goto label$10887;
      label$10888:;
      {
       FBSTRING* vr$8212 = fb_StrAllocTempDescZEx( (uint8*)"sampler2DArray", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$8212, 0 );
      }
      goto label$10716;
      label$10887:;
      if( TMP$4337$6 != 87ull ) goto label$10889;
      label$10890:;
      {
       FBSTRING* vr$8213 = fb_StrAllocTempDescZEx( (uint8*)"sampler2DArrayShadow", 20ll );
       fb_PrintString( 1, (FBSTRING*)vr$8213, 0 );
      }
      goto label$10716;
      label$10889:;
      if( TMP$4337$6 != 88ull ) goto label$10891;
      label$10892:;
      {
       FBSTRING* vr$8214 = fb_StrAllocTempDescZEx( (uint8*)"sampler2DRect", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8214, 0 );
      }
      goto label$10716;
      label$10891:;
      if( TMP$4337$6 != 89ull ) goto label$10893;
      label$10894:;
      {
       FBSTRING* vr$8215 = fb_StrAllocTempDescZEx( (uint8*)"sampler2DRectShadow", 19ll );
       fb_PrintString( 1, (FBSTRING*)vr$8215, 0 );
      }
      goto label$10716;
      label$10893:;
      if( TMP$4337$6 != 90ull ) goto label$10895;
      label$10896:;
      {
       FBSTRING* vr$8216 = fb_StrAllocTempDescZEx( (uint8*)"sampler2DShadow", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$8216, 0 );
      }
      goto label$10716;
      label$10895:;
      if( TMP$4337$6 != 91ull ) goto label$10897;
      label$10898:;
      {
       FBSTRING* vr$8217 = fb_StrAllocTempDescZEx( (uint8*)"sampler3D", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8217, 0 );
      }
      goto label$10716;
      label$10897:;
      if( TMP$4337$6 != 92ull ) goto label$10899;
      label$10900:;
      {
       FBSTRING* vr$8218 = fb_StrAllocTempDescZEx( (uint8*)"sampler3DRect", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8218, 0 );
      }
      goto label$10716;
      label$10899:;
      if( TMP$4337$6 != 93ull ) goto label$10901;
      label$10902:;
      {
       FBSTRING* vr$8219 = fb_StrAllocTempDescZEx( (uint8*)"samplerBuffer", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8219, 0 );
      }
      goto label$10716;
      label$10901:;
      if( TMP$4337$6 != 94ull ) goto label$10903;
      label$10904:;
      {
       FBSTRING* vr$8220 = fb_StrAllocTempDescZEx( (uint8*)"samplerCube", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8220, 0 );
      }
      goto label$10716;
      label$10903:;
      if( TMP$4337$6 != 95ull ) goto label$10905;
      label$10906:;
      {
       FBSTRING* vr$8221 = fb_StrAllocTempDescZEx( (uint8*)"samplerCubeShadow", 17ll );
       fb_PrintString( 1, (FBSTRING*)vr$8221, 0 );
      }
      goto label$10716;
      label$10905:;
      if( TMP$4337$6 != 96ull ) goto label$10907;
      label$10908:;
      {
       FBSTRING* vr$8222 = fb_StrAllocTempDescZEx( (uint8*)"samples", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8222, 0 );
      }
      goto label$10716;
      label$10907:;
      if( TMP$4337$6 != 97ull ) goto label$10909;
      label$10910:;
      {
       FBSTRING* vr$8223 = fb_StrAllocTempDescZEx( (uint8*)"save", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8223, 0 );
      }
      goto label$10716;
      label$10909:;
      if( TMP$4337$6 != 98ull ) goto label$10911;
      label$10912:;
      {
       FBSTRING* vr$8224 = fb_StrAllocTempDescZEx( (uint8*)"save_file", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8224, 0 );
      }
      goto label$10716;
      label$10911:;
      if( TMP$4337$6 != 99ull ) goto label$10913;
      label$10914:;
      {
       FBSTRING* vr$8225 = fb_StrAllocTempDescZEx( (uint8*)"scale", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8225, 0 );
      }
      goto label$10716;
      label$10913:;
      if( TMP$4337$6 != 100ull ) goto label$10915;
      label$10916:;
      {
       FBSTRING* vr$8226 = fb_StrAllocTempDescZEx( (uint8*)"scallop_wave", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8226, 0 );
      }
      goto label$10716;
      label$10915:;
      if( TMP$4337$6 != 101ull ) goto label$10917;
      label$10918:;
      {
       FBSTRING* vr$8227 = fb_StrAllocTempDescZEx( (uint8*)"scattering", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8227, 0 );
      }
      goto label$10716;
      label$10917:;
      if( TMP$4337$6 != 102ull ) goto label$10919;
      label$10920:;
      {
       FBSTRING* vr$8228 = fb_StrAllocTempDescZEx( (uint8*)"screen", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8228, 0 );
      }
      goto label$10716;
      label$10919:;
      if( TMP$4337$6 != 103ull ) goto label$10921;
      label$10922:;
      {
       FBSTRING* vr$8229 = fb_StrAllocTempDescZEx( (uint8*)"sd", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8229, 0 );
      }
      goto label$10716;
      label$10921:;
      if( TMP$4337$6 != 104ull ) goto label$10923;
      label$10924:;
      {
       FBSTRING* vr$8230 = fb_StrAllocTempDescZEx( (uint8*)"search", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8230, 0 );
      }
      goto label$10716;
      label$10923:;
      if( TMP$4337$6 != 105ull ) goto label$10925;
      label$10926:;
      {
       FBSTRING* vr$8231 = fb_StrAllocTempDescZEx( (uint8*)"second", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8231, 0 );
      }
      goto label$10716;
      label$10925:;
      if( TMP$4337$6 != 106ull ) goto label$10927;
      label$10928:;
      {
       FBSTRING* vr$8232 = fb_StrAllocTempDescZEx( (uint8*)"section", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8232, 0 );
      }
      goto label$10716;
      label$10927:;
      if( TMP$4337$6 != 107ull ) goto label$10929;
      label$10930:;
      {
       FBSTRING* vr$8233 = fb_StrAllocTempDescZEx( (uint8*)"security", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8233, 0 );
      }
      goto label$10716;
      label$10929:;
      if( TMP$4337$6 != 108ull ) goto label$10931;
      label$10932:;
      {
       FBSTRING* vr$8234 = fb_StrAllocTempDescZEx( (uint8*)"seed", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8234, 0 );
      }
      goto label$10716;
      label$10931:;
      if( TMP$4337$6 != 109ull ) goto label$10933;
      label$10934:;
      {
       FBSTRING* vr$8235 = fb_StrAllocTempDescZEx( (uint8*)"segment", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8235, 0 );
      }
      goto label$10716;
      label$10933:;
      if( TMP$4337$6 != 110ull ) goto label$10935;
      label$10936:;
      {
       FBSTRING* vr$8236 = fb_StrAllocTempDescZEx( (uint8*)"segment-limit", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8236, 0 );
      }
      goto label$10716;
      label$10935:;
      if( TMP$4337$6 != 111ull ) goto label$10937;
      label$10938:;
      {
       FBSTRING* vr$8237 = fb_StrAllocTempDescZEx( (uint8*)"section", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8237, 0 );
      }
      goto label$10716;
      label$10937:;
      if( TMP$4337$6 != 112ull ) goto label$10939;
      label$10940:;
      {
       FBSTRING* vr$8238 = fb_StrAllocTempDescZEx( (uint8*)"select", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8238, 0 );
      }
      goto label$10716;
      label$10939:;
      if( TMP$4337$6 != 113ull ) goto label$10941;
      label$10942:;
      {
       FBSTRING* vr$8239 = fb_StrAllocTempDescZEx( (uint8*)"selector", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8239, 0 );
      }
      goto label$10716;
      label$10941:;
      if( TMP$4337$6 != 114ull ) goto label$10943;
      label$10944:;
      {
       FBSTRING* vr$8240 = fb_StrAllocTempDescZEx( (uint8*)"selection", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8240, 0 );
      }
      goto label$10716;
      label$10943:;
      if( TMP$4337$6 != 115ull ) goto label$10945;
      label$10946:;
      {
       FBSTRING* vr$8241 = fb_StrAllocTempDescZEx( (uint8*)"self", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8241, 0 );
      }
      goto label$10716;
      label$10945:;
      if( TMP$4337$6 != 116ull ) goto label$10947;
      label$10948:;
      {
       FBSTRING* vr$8242 = fb_StrAllocTempDescZEx( (uint8*)"send", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8242, 0 );
      }
      goto label$10716;
      label$10947:;
      if( TMP$4337$6 != 117ull ) goto label$10949;
      label$10950:;
      {
       FBSTRING* vr$8243 = fb_StrAllocTempDescZEx( (uint8*)"sentence", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8243, 0 );
      }
      goto label$10716;
      label$10949:;
      if( TMP$4337$6 != 118ull ) goto label$10951;
      label$10952:;
      {
       FBSTRING* vr$8244 = fb_StrAllocTempDescZEx( (uint8*)"separate", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8244, 0 );
      }
      goto label$10716;
      label$10951:;
      if( TMP$4337$6 != 119ull ) goto label$10953;
      label$10954:;
      {
       FBSTRING* vr$8245 = fb_StrAllocTempDescZEx( (uint8*)"sequence", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8245, 0 );
      }
      goto label$10716;
      label$10953:;
      if( TMP$4337$6 != 120ull ) goto label$10955;
      label$10956:;
      {
       FBSTRING* vr$8246 = fb_StrAllocTempDescZEx( (uint8*)"sequential", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8246, 0 );
      }
      goto label$10716;
      label$10955:;
      if( TMP$4337$6 != 121ull ) goto label$10957;
      label$10958:;
      {
       FBSTRING* vr$8247 = fb_StrAllocTempDescZEx( (uint8*)"sequentially", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8247, 0 );
      }
      goto label$10716;
      label$10957:;
      if( TMP$4337$6 != 122ull ) goto label$10959;
      label$10960:;
      {
       FBSTRING* vr$8248 = fb_StrAllocTempDescZEx( (uint8*)"service", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8248, 0 );
      }
      goto label$10716;
      label$10959:;
      if( TMP$4337$6 != 123ull ) goto label$10961;
      label$10962:;
      {
       FBSTRING* vr$8249 = fb_StrAllocTempDescZEx( (uint8*)"set", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8249, 0 );
      }
      goto label$10716;
      label$10961:;
      if( TMP$4337$6 != 124ull ) goto label$10963;
      label$10964:;
      {
       FBSTRING* vr$8250 = fb_StrAllocTempDescZEx( (uint8*)"sgn", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8250, 0 );
      }
      goto label$10716;
      label$10963:;
      if( TMP$4337$6 != 125ull ) goto label$10965;
      label$10966:;
      {
       FBSTRING* vr$8251 = fb_StrAllocTempDescZEx( (uint8*)"shadowless", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8251, 0 );
      }
      goto label$10716;
      label$10965:;
      if( TMP$4337$6 != 126ull ) goto label$10967;
      label$10968:;
      {
       FBSTRING* vr$8252 = fb_StrAllocTempDescZEx( (uint8*)"shell", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8252, 0 );
      }
      goto label$10716;
      label$10967:;
      if( TMP$4337$6 != 127ull ) goto label$10969;
      label$10970:;
      {
       FBSTRING* vr$8253 = fb_StrAllocTempDescZEx( (uint8*)"shift-in", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8253, 0 );
      }
      goto label$10716;
      label$10969:;
      if( TMP$4337$6 != 128ull ) goto label$10971;
      label$10972:;
      {
       FBSTRING* vr$8254 = fb_StrAllocTempDescZEx( (uint8*)"shift-out", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8254, 0 );
      }
      goto label$10716;
      label$10971:;
      if( TMP$4337$6 != 129ull ) goto label$10973;
      label$10974:;
      {
       FBSTRING* vr$8255 = fb_StrAllocTempDescZEx( (uint8*)"shl", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8255, 0 );
      }
      goto label$10716;
      label$10973:;
      if( TMP$4337$6 != 130ull ) goto label$10975;
      label$10976:;
      {
       FBSTRING* vr$8256 = fb_StrAllocTempDescZEx( (uint8*)"short", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8256, 0 );
      }
      goto label$10716;
      label$10975:;
      if( TMP$4337$6 != 131ull ) goto label$10977;
      label$10978:;
      {
       FBSTRING* vr$8257 = fb_StrAllocTempDescZEx( (uint8*)"shr", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8257, 0 );
      }
      goto label$10716;
      label$10977:;
      if( TMP$4337$6 != 132ull ) goto label$10979;
      label$10980:;
      {
       FBSTRING* vr$8258 = fb_StrAllocTempDescZEx( (uint8*)"sign", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8258, 0 );
      }
      goto label$10716;
      label$10979:;
      if( TMP$4337$6 != 133ull ) goto label$10981;
      label$10982:;
      {
       FBSTRING* vr$8259 = fb_StrAllocTempDescZEx( (uint8*)"simple_nested_loop", 18ll );
       fb_PrintString( 1, (FBSTRING*)vr$8259, 0 );
      }
      goto label$10716;
      label$10981:;
      if( TMP$4337$6 != 134ull ) goto label$10983;
      label$10984:;
      {
       FBSTRING* vr$8260 = fb_StrAllocTempDescZEx( (uint8*)"sin", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8260, 0 );
      }
      goto label$10716;
      label$10983:;
      if( TMP$4337$6 != 135ull ) goto label$10985;
      label$10986:;
      {
       FBSTRING* vr$8261 = fb_StrAllocTempDescZEx( (uint8*)"sine_wave", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8261, 0 );
      }
      goto label$10716;
      label$10985:;
      if( TMP$4337$6 != 136ull ) goto label$10987;
      label$10988:;
      {
       FBSTRING* vr$8262 = fb_StrAllocTempDescZEx( (uint8*)"sinh", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8262, 0 );
      }
      goto label$10716;
      label$10987:;
      if( TMP$4337$6 != 137ull ) goto label$10989;
      label$10990:;
      {
       FBSTRING* vr$8263 = fb_StrAllocTempDescZEx( (uint8*)"size", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8263, 0 );
      }
      goto label$10716;
      label$10989:;
      if( TMP$4337$6 != 138ull ) goto label$10991;
      label$10992:;
      {
       FBSTRING* vr$8264 = fb_StrAllocTempDescZEx( (uint8*)"sizeof", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8264, 0 );
      }
      goto label$10716;
      label$10991:;
      if( TMP$4337$6 != 139ull ) goto label$10993;
      label$10994:;
      {
       FBSTRING* vr$8265 = fb_StrAllocTempDescZEx( (uint8*)"skip1", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8265, 0 );
      }
      goto label$10716;
      label$10993:;
      if( TMP$4337$6 != 140ull ) goto label$10995;
      label$10996:;
      {
       FBSTRING* vr$8266 = fb_StrAllocTempDescZEx( (uint8*)"skip2", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8266, 0 );
      }
      goto label$10716;
      label$10995:;
      if( TMP$4337$6 != 141ull ) goto label$10997;
      label$10998:;
      {
       FBSTRING* vr$8267 = fb_StrAllocTempDescZEx( (uint8*)"skip3", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8267, 0 );
      }
      goto label$10716;
      label$10997:;
      if( TMP$4337$6 != 142ull ) goto label$10999;
      label$11000:;
      {
       FBSTRING* vr$8268 = fb_StrAllocTempDescZEx( (uint8*)"sky", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8268, 0 );
      }
      goto label$10716;
      label$10999:;
      if( TMP$4337$6 != 143ull ) goto label$11001;
      label$11002:;
      {
       FBSTRING* vr$8269 = fb_StrAllocTempDescZEx( (uint8*)"sky_sphere", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8269, 0 );
      }
      goto label$10716;
      label$11001:;
      if( TMP$4337$6 != 144ull ) goto label$11003;
      label$11004:;
      {
       FBSTRING* vr$8270 = fb_StrAllocTempDescZEx( (uint8*)"slice", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8270, 0 );
      }
      goto label$10716;
      label$11003:;
      if( TMP$4337$6 != 145ull ) goto label$11005;
      label$11006:;
      {
       FBSTRING* vr$8271 = fb_StrAllocTempDescZEx( (uint8*)"slope", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8271, 0 );
      }
      goto label$10716;
      label$11005:;
      if( TMP$4337$6 != 146ull ) goto label$11007;
      label$11008:;
      {
       FBSTRING* vr$8272 = fb_StrAllocTempDescZEx( (uint8*)"slope_map", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8272, 0 );
      }
      goto label$10716;
      label$11007:;
      if( TMP$4337$6 != 147ull ) goto label$11009;
      label$11010:;
      {
       FBSTRING* vr$8273 = fb_StrAllocTempDescZEx( (uint8*)"smallint", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8273, 0 );
      }
      goto label$10716;
      label$11009:;
      if( TMP$4337$6 != 148ull ) goto label$11011;
      label$11012:;
      {
       FBSTRING* vr$8274 = fb_StrAllocTempDescZEx( (uint8*)"smooth", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8274, 0 );
      }
      goto label$10716;
      label$11011:;
      if( TMP$4337$6 != 149ull ) goto label$11013;
      label$11014:;
      {
       FBSTRING* vr$8275 = fb_StrAllocTempDescZEx( (uint8*)"smooth_linearstep", 17ll );
       fb_PrintString( 1, (FBSTRING*)vr$8275, 0 );
      }
      goto label$10716;
      label$11013:;
      if( TMP$4337$6 != 150ull ) goto label$11015;
      label$11016:;
      {
       FBSTRING* vr$8276 = fb_StrAllocTempDescZEx( (uint8*)"smoothstep", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8276, 0 );
      }
      goto label$10716;
      label$11015:;
      if( TMP$4337$6 != 151ull ) goto label$11017;
      label$11018:;
      {
       FBSTRING* vr$8277 = fb_StrAllocTempDescZEx( (uint8*)"smooth_triangle", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$8277, 0 );
      }
      goto label$10716;
      label$11017:;
      if( TMP$4337$6 != 152ull ) goto label$11019;
      label$11020:;
      {
       FBSTRING* vr$8278 = fb_StrAllocTempDescZEx( (uint8*)"snoise", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8278, 0 );
      }
      goto label$10716;
      label$11019:;
      if( TMP$4337$6 != 153ull ) goto label$11021;
      label$11022:;
      {
       FBSTRING* vr$8279 = fb_StrAllocTempDescZEx( (uint8*)"softfloat", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8279, 0 );
      }
      goto label$10716;
      label$11021:;
      if( TMP$4337$6 != 154ull ) goto label$11023;
      label$11024:;
      {
       FBSTRING* vr$8280 = fb_StrAllocTempDescZEx( (uint8*)"solid", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8280, 0 );
      }
      goto label$10716;
      label$11023:;
      if( TMP$4337$6 != 155ull ) goto label$11025;
      label$11026:;
      {
       FBSTRING* vr$8281 = fb_StrAllocTempDescZEx( (uint8*)"sor", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8281, 0 );
      }
      goto label$10716;
      label$11025:;
      if( TMP$4337$6 != 156ull ) goto label$11027;
      label$11028:;
      {
       FBSTRING* vr$8282 = fb_StrAllocTempDescZEx( (uint8*)"sort", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8282, 0 );
      }
      goto label$10716;
      label$11027:;
      if( TMP$4337$6 != 157ull ) goto label$11029;
      label$11030:;
      {
       FBSTRING* vr$8283 = fb_StrAllocTempDescZEx( (uint8*)"sort-control", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8283, 0 );
      }
      goto label$10716;
      label$11029:;
      if( TMP$4337$6 != 158ull ) goto label$11031;
      label$11032:;
      {
       FBSTRING* vr$8284 = fb_StrAllocTempDescZEx( (uint8*)"sort-core-size", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$8284, 0 );
      }
      goto label$10716;
      label$11031:;
      if( TMP$4337$6 != 159ull ) goto label$11033;
      label$11034:;
      {
       FBSTRING* vr$8285 = fb_StrAllocTempDescZEx( (uint8*)"sort-file-size", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$8285, 0 );
      }
      goto label$10716;
      label$11033:;
      if( TMP$4337$6 != 160ull ) goto label$11035;
      label$11036:;
      {
       FBSTRING* vr$8286 = fb_StrAllocTempDescZEx( (uint8*)"sort-merge", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8286, 0 );
      }
      goto label$10716;
      label$11035:;
      if( TMP$4337$6 != 161ull ) goto label$11037;
      label$11038:;
      {
       FBSTRING* vr$8287 = fb_StrAllocTempDescZEx( (uint8*)"sort-message", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8287, 0 );
      }
      goto label$10716;
      label$11037:;
      if( TMP$4337$6 != 162ull ) goto label$11039;
      label$11040:;
      {
       FBSTRING* vr$8288 = fb_StrAllocTempDescZEx( (uint8*)"sort-mode-size", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$8288, 0 );
      }
      goto label$10716;
      label$11039:;
      if( TMP$4337$6 != 163ull ) goto label$11041;
      label$11042:;
      {
       FBSTRING* vr$8289 = fb_StrAllocTempDescZEx( (uint8*)"sort-return", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8289, 0 );
      }
      goto label$10716;
      label$11041:;
      if( TMP$4337$6 != 164ull ) goto label$11043;
      label$11044:;
      {
       FBSTRING* vr$8290 = fb_StrAllocTempDescZEx( (uint8*)"sound", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8290, 0 );
      }
      goto label$10716;
      label$11043:;
      if( TMP$4337$6 != 165ull ) goto label$11045;
      label$11046:;
      {
       FBSTRING* vr$8291 = fb_StrAllocTempDescZEx( (uint8*)"source", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8291, 0 );
      }
      goto label$10716;
      label$11045:;
      if( TMP$4337$6 != 166ull ) goto label$11047;
      label$11048:;
      {
       FBSTRING* vr$8292 = fb_StrAllocTempDescZEx( (uint8*)"source-computer", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$8292, 0 );
      }
      goto label$10716;
      label$11047:;
      if( TMP$4337$6 != 167ull ) goto label$11049;
      label$11050:;
      {
       FBSTRING* vr$8293 = fb_StrAllocTempDescZEx( (uint8*)"space", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8293, 0 );
      }
      goto label$10716;
      label$11049:;
      if( TMP$4337$6 != 169ull ) goto label$11051;
      label$11052:;
      {
       FBSTRING* vr$8294 = fb_StrAllocTempDescZEx( (uint8*)"spaces", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8294, 0 );
      }
      goto label$10716;
      label$11051:;
      if( TMP$4337$6 != 170ull ) goto label$11053;
      label$11054:;
      {
       FBSTRING* vr$8295 = fb_StrAllocTempDescZEx( (uint8*)"spacing", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8295, 0 );
      }
      goto label$10716;
      label$11053:;
      if( TMP$4337$6 != 171ull ) goto label$11055;
      label$11056:;
      {
       FBSTRING* vr$8296 = fb_StrAllocTempDescZEx( (uint8*)"spc", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8296, 0 );
      }
      goto label$10716;
      label$11055:;
      if( TMP$4337$6 != 172ull ) goto label$11057;
      label$11058:;
      {
       FBSTRING* vr$8297 = fb_StrAllocTempDescZEx( (uint8*)"specialize", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8297, 0 );
      }
      goto label$10716;
      label$11057:;
      if( TMP$4337$6 != 173ull ) goto label$11059;
      label$11060:;
      {
       FBSTRING* vr$8298 = fb_StrAllocTempDescZEx( (uint8*)"special-names", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8298, 0 );
      }
      goto label$10716;
      label$11059:;
      if( TMP$4337$6 != 174ull ) goto label$11061;
      label$11062:;
      {
       FBSTRING* vr$8299 = fb_StrAllocTempDescZEx( (uint8*)"specular", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8299, 0 );
      }
      goto label$10716;
      label$11061:;
      if( TMP$4337$6 != 175ull ) goto label$11063;
      label$11064:;
      {
       FBSTRING* vr$8300 = fb_StrAllocTempDescZEx( (uint8*)"sphere", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8300, 0 );
      }
      goto label$10716;
      label$11063:;
      if( TMP$4337$6 != 176ull ) goto label$11065;
      label$11066:;
      {
       FBSTRING* vr$8301 = fb_StrAllocTempDescZEx( (uint8*)"sphere_sweep", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8301, 0 );
      }
      goto label$10716;
      label$11065:;
      if( TMP$4337$6 != 177ull ) goto label$11067;
      label$11068:;
      {
       FBSTRING* vr$8302 = fb_StrAllocTempDescZEx( (uint8*)"spherical", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8302, 0 );
      }
      goto label$10716;
      label$11067:;
      if( TMP$4337$6 != 178ull ) goto label$11069;
      label$11070:;
      {
       FBSTRING* vr$8303 = fb_StrAllocTempDescZEx( (uint8*)"spiral1", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8303, 0 );
      }
      goto label$10716;
      label$11069:;
      if( TMP$4337$6 != 179ull ) goto label$11071;
      label$11072:;
      {
       FBSTRING* vr$8304 = fb_StrAllocTempDescZEx( (uint8*)"spiral2", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8304, 0 );
      }
      goto label$10716;
      label$11071:;
      if( TMP$4337$6 != 180ull ) goto label$11073;
      label$11074:;
      {
       FBSTRING* vr$8305 = fb_StrAllocTempDescZEx( (uint8*)"spline", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8305, 0 );
      }
      goto label$10716;
      label$11073:;
      if( TMP$4337$6 != 181ull ) goto label$11075;
      label$11076:;
      {
       FBSTRING* vr$8306 = fb_StrAllocTempDescZEx( (uint8*)"splineinverse", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8306, 0 );
      }
      goto label$10716;
      label$11075:;
      if( TMP$4337$6 != 182ull ) goto label$11077;
      label$11078:;
      {
       FBSTRING* vr$8307 = fb_StrAllocTempDescZEx( (uint8*)"split", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8307, 0 );
      }
      goto label$10716;
      label$11077:;
      if( TMP$4337$6 != 183ull ) goto label$11079;
      label$11080:;
      {
       FBSTRING* vr$8308 = fb_StrAllocTempDescZEx( (uint8*)"split_union", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8308, 0 );
      }
      goto label$10716;
      label$11079:;
      if( TMP$4337$6 != 184ull ) goto label$11081;
      label$11082:;
      {
       FBSTRING* vr$8309 = fb_StrAllocTempDescZEx( (uint8*)"spotlight", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8309, 0 );
      }
      goto label$10716;
      label$11081:;
      if( TMP$4337$6 != 185ull ) goto label$11083;
      label$11084:;
      {
       FBSTRING* vr$8310 = fb_StrAllocTempDescZEx( (uint8*)"spotted", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8310, 0 );
      }
      goto label$10716;
      label$11083:;
      if( TMP$4337$6 != 186ull ) goto label$11085;
      label$11086:;
      {
       FBSTRING* vr$8311 = fb_StrAllocTempDescZEx( (uint8*)"sqr", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8311, 0 );
      }
      goto label$10716;
      label$11085:;
      if( TMP$4337$6 != 187ull ) goto label$11087;
      label$11088:;
      {
       FBSTRING* vr$8312 = fb_StrAllocTempDescZEx( (uint8*)"sqrt", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8312, 0 );
      }
      goto label$10716;
      label$11087:;
      if( TMP$4337$6 != 188ull ) goto label$11089;
      label$11090:;
      {
       FBSTRING* vr$8313 = fb_StrAllocTempDescZEx( (uint8*)"standard", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8313, 0 );
      }
      goto label$10716;
      label$11089:;
      if( TMP$4337$6 != 189ull ) goto label$11091;
      label$11092:;
      {
       FBSTRING* vr$8314 = fb_StrAllocTempDescZEx( (uint8*)"standard-1", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8314, 0 );
      }
      goto label$10716;
      label$11091:;
      if( TMP$4337$6 != 190ull ) goto label$11093;
      label$11094:;
      {
       FBSTRING* vr$8315 = fb_StrAllocTempDescZEx( (uint8*)"standard-2", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8315, 0 );
      }
      goto label$10716;
      label$11093:;
      if( TMP$4337$6 != 191ull ) goto label$11095;
      label$11096:;
      {
       FBSTRING* vr$8316 = fb_StrAllocTempDescZEx( (uint8*)"start", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8316, 0 );
      }
      goto label$10716;
      label$11095:;
      if( TMP$4337$6 != 192ull ) goto label$11097;
      label$11098:;
      {
       FBSTRING* vr$8317 = fb_StrAllocTempDescZEx( (uint8*)"startswith", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8317, 0 );
      }
      goto label$10716;
      label$11097:;
      if( TMP$4337$6 != 193ull ) goto label$11099;
      label$11100:;
      {
       FBSTRING* vr$8318 = fb_StrAllocTempDescZEx( (uint8*)"static", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8318, 0 );
      }
      goto label$10716;
      label$11099:;
      if( TMP$4337$6 != 194ull ) goto label$11101;
      label$11102:;
      {
       FBSTRING* vr$8319 = fb_StrAllocTempDescZEx( (uint8*)"statistics", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8319, 0 );
      }
      goto label$10716;
      label$11101:;
      if( TMP$4337$6 != 195ull ) goto label$11103;
      label$11104:;
      {
       FBSTRING* vr$8320 = fb_StrAllocTempDescZEx( (uint8*)"status", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8320, 0 );
      }
      goto label$10716;
      label$11103:;
      if( TMP$4337$6 != 196ull ) goto label$11105;
      label$11106:;
      {
       FBSTRING* vr$8321 = fb_StrAllocTempDescZEx( (uint8*)"stdcall", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8321, 0 );
      }
      goto label$10716;
      label$11105:;
      if( TMP$4337$6 != 197ull ) goto label$11107;
      label$11108:;
      {
       FBSTRING* vr$8322 = fb_StrAllocTempDescZEx( (uint8*)"stdout", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8322, 0 );
      }
      goto label$10716;
      label$11107:;
      if( TMP$4337$6 != 198ull ) goto label$11109;
      label$11110:;
      {
       FBSTRING* vr$8323 = fb_StrAllocTempDescZEx( (uint8*)"step", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8323, 0 );
      }
      goto label$10716;
      label$11109:;
      if( TMP$4337$6 != 199ull ) goto label$11111;
      label$11112:;
      {
       FBSTRING* vr$8324 = fb_StrAllocTempDescZEx( (uint8*)"stick", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8324, 0 );
      }
      goto label$10716;
      label$11111:;
      if( TMP$4337$6 != 200ull ) goto label$11113;
      label$11114:;
      {
       FBSTRING* vr$8325 = fb_StrAllocTempDescZEx( (uint8*)"stof", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8325, 0 );
      }
      goto label$10716;
      label$11113:;
      if( TMP$4337$6 != 201ull ) goto label$11115;
      label$11116:;
      {
       FBSTRING* vr$8326 = fb_StrAllocTempDescZEx( (uint8*)"stoi", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8326, 0 );
      }
      goto label$10716;
      label$11115:;
      if( TMP$4337$6 != 202ull ) goto label$11117;
      label$11118:;
      {
       FBSTRING* vr$8327 = fb_StrAllocTempDescZEx( (uint8*)"stop", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8327, 0 );
      }
      goto label$10716;
      label$11117:;
      if( TMP$4337$6 != 203ull ) goto label$11119;
      label$11120:;
      {
       FBSTRING* vr$8328 = fb_StrAllocTempDescZEx( (uint8*)"str", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8328, 0 );
      }
      goto label$10716;
      label$11119:;
      if( TMP$4337$6 != 205ull ) goto label$11121;
      label$11122:;
      {
       FBSTRING* vr$8329 = fb_StrAllocTempDescZEx( (uint8*)"strcmp", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8329, 0 );
      }
      goto label$10716;
      label$11121:;
      if( TMP$4337$6 != 206ull ) goto label$11123;
      label$11124:;
      {
       FBSTRING* vr$8330 = fb_StrAllocTempDescZEx( (uint8*)"strength", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8330, 0 );
      }
      goto label$10716;
      label$11123:;
      if( TMP$4337$6 != 207ull ) goto label$11125;
      label$11126:;
      {
       FBSTRING* vr$8331 = fb_StrAllocTempDescZEx( (uint8*)"strig", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8331, 0 );
      }
      goto label$10716;
      label$11125:;
      if( TMP$4337$6 != 208ull ) goto label$11127;
      label$11128:;
      {
       FBSTRING* vr$8332 = fb_StrAllocTempDescZEx( (uint8*)"string", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8332, 0 );
      }
      goto label$10716;
      label$11127:;
      if( TMP$4337$6 != 209ull ) goto label$11129;
      label$11130:;
      {
       FBSTRING* vr$8333 = fb_StrAllocTempDescZEx( (uint8*)"strptr", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8333, 0 );
      }
      goto label$10716;
      label$11129:;
      if( TMP$4337$6 != 210ull ) goto label$11131;
      label$11132:;
      {
       FBSTRING* vr$8334 = fb_StrAllocTempDescZEx( (uint8*)"strlen", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8334, 0 );
      }
      goto label$10716;
      label$11131:;
      if( TMP$4337$6 != 211ull ) goto label$11133;
      label$11134:;
      {
       FBSTRING* vr$8335 = fb_StrAllocTempDescZEx( (uint8*)"strlwr", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8335, 0 );
      }
      goto label$10716;
      label$11133:;
      if( TMP$4337$6 != 212ull ) goto label$11135;
      label$11136:;
      {
       FBSTRING* vr$8336 = fb_StrAllocTempDescZEx( (uint8*)"structure", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8336, 0 );
      }
      goto label$10716;
      label$11135:;
      if( TMP$4337$6 != 213ull ) goto label$11137;
      label$11138:;
      {
       FBSTRING* vr$8337 = fb_StrAllocTempDescZEx( (uint8*)"strupr", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8337, 0 );
      }
      goto label$10716;
      label$11137:;
      if( TMP$4337$6 != 214ull ) goto label$11139;
      label$11140:;
      {
       FBSTRING* vr$8338 = fb_StrAllocTempDescZEx( (uint8*)"sturm", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8338, 0 );
      }
      goto label$10716;
      label$11139:;
      if( TMP$4337$6 != 215ull ) goto label$11141;
      label$11142:;
      {
       FBSTRING* vr$8339 = fb_StrAllocTempDescZEx( (uint8*)"subarray", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8339, 0 );
      }
      goto label$10716;
      label$11141:;
      if( TMP$4337$6 != 216ull ) goto label$11143;
      label$11144:;
      {
       FBSTRING* vr$8340 = fb_StrAllocTempDescZEx( (uint8*)"sub-queue-1", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8340, 0 );
      }
      goto label$10716;
      label$11143:;
      if( TMP$4337$6 != 217ull ) goto label$11145;
      label$11146:;
      {
       FBSTRING* vr$8341 = fb_StrAllocTempDescZEx( (uint8*)"sub-queue-2", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8341, 0 );
      }
      goto label$10716;
      label$11145:;
      if( TMP$4337$6 != 218ull ) goto label$11147;
      label$11148:;
      {
       FBSTRING* vr$8342 = fb_StrAllocTempDescZEx( (uint8*)"sub-queue-3", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8342, 0 );
      }
      goto label$10716;
      label$11147:;
      if( TMP$4337$6 != 219ull ) goto label$11149;
      label$11150:;
      {
       FBSTRING* vr$8343 = fb_StrAllocTempDescZEx( (uint8*)"subroutine", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8343, 0 );
      }
      goto label$10716;
      label$11149:;
      if( TMP$4337$6 != 220ull ) goto label$11151;
      label$11152:;
      {
       FBSTRING* vr$8344 = fb_StrAllocTempDescZEx( (uint8*)"substr", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8344, 0 );
      }
      goto label$10716;
      label$11151:;
      if( TMP$4337$6 != 221ull ) goto label$11153;
      label$11154:;
      {
       FBSTRING* vr$8345 = fb_StrAllocTempDescZEx( (uint8*)"substring", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8345, 0 );
      }
      goto label$10716;
      label$11153:;
      if( TMP$4337$6 != 222ull ) goto label$11155;
      label$11156:;
      {
       FBSTRING* vr$8346 = fb_StrAllocTempDescZEx( (uint8*)"substring_mb", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8346, 0 );
      }
      goto label$10716;
      label$11155:;
      if( TMP$4337$6 != 223ull ) goto label$11157;
      label$11158:;
      {
       FBSTRING* vr$8347 = fb_StrAllocTempDescZEx( (uint8*)"subtract", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8347, 0 );
      }
      goto label$10716;
      label$11157:;
      if( TMP$4337$6 != 224ull ) goto label$11159;
      label$11160:;
      {
       FBSTRING* vr$8348 = fb_StrAllocTempDescZEx( (uint8*)"sum", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8348, 0 );
      }
      goto label$10716;
      label$11159:;
      if( TMP$4337$6 != 225ull ) goto label$11161;
      label$11162:;
      {
       FBSTRING* vr$8349 = fb_StrAllocTempDescZEx( (uint8*)"super", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8349, 0 );
      }
      goto label$10716;
      label$11161:;
      if( TMP$4337$6 != 226ull ) goto label$11163;
      label$11164:;
      {
       FBSTRING* vr$8350 = fb_StrAllocTempDescZEx( (uint8*)"superellipsoid", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$8350, 0 );
      }
      goto label$10716;
      label$11163:;
      if( TMP$4337$6 != 227ull ) goto label$11165;
      label$11166:;
      {
       FBSTRING* vr$8351 = fb_StrAllocTempDescZEx( (uint8*)"superp", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8351, 0 );
      }
      goto label$10716;
      label$11165:;
      if( TMP$4337$6 != 228ull ) goto label$11167;
      label$11168:;
      {
       FBSTRING* vr$8352 = fb_StrAllocTempDescZEx( (uint8*)"suppress", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8352, 0 );
      }
      goto label$10716;
      label$11167:;
      if( TMP$4337$6 != 229ull ) goto label$11169;
      label$11170:;
      {
       FBSTRING* vr$8353 = fb_StrAllocTempDescZEx( (uint8*)"surfacearea", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8353, 0 );
      }
      goto label$10716;
      label$11169:;
      if( TMP$4337$6 != 230ull ) goto label$11171;
      label$11172:;
      {
       FBSTRING* vr$8354 = fb_StrAllocTempDescZEx( (uint8*)"swap", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8354, 0 );
      }
      goto label$10716;
      label$11171:;
      if( TMP$4337$6 != 231ull ) goto label$11173;
      label$11174:;
      {
       FBSTRING* vr$8355 = fb_StrAllocTempDescZEx( (uint8*)"switch", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8355, 0 );
      }
      goto label$10716;
      label$11173:;
      if( TMP$4337$6 != 232ull ) goto label$11175;
      label$11176:;
      {
       FBSTRING* vr$8356 = fb_StrAllocTempDescZEx( (uint8*)"symbolic", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8356, 0 );
      }
      goto label$10716;
      label$11175:;
      if( TMP$4337$6 != 233ull ) goto label$11177;
      label$11178:;
      {
       FBSTRING* vr$8357 = fb_StrAllocTempDescZEx( (uint8*)"sync", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8357, 0 );
      }
      goto label$10716;
      label$11177:;
      if( TMP$4337$6 != 234ull ) goto label$11179;
      label$11180:;
      {
       FBSTRING* vr$8358 = fb_StrAllocTempDescZEx( (uint8*)"synchronized", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8358, 0 );
      }
      goto label$10716;
      label$11179:;
      if( TMP$4337$6 != 235ull ) goto label$11181;
      label$11182:;
      {
       FBSTRING* vr$8359 = fb_StrAllocTempDescZEx( (uint8*)"sys", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8359, 0 );
      }
      goto label$10716;
      label$11181:;
      if( TMP$4337$6 != 236ull ) goto label$11183;
      label$11184:;
      {
       FBSTRING* vr$8360 = fb_StrAllocTempDescZEx( (uint8*)"system", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8360, 0 );
      }
      goto label$10716;
      label$11183:;
      if( TMP$4337$6 != 237ull ) goto label$11185;
      label$11186:;
      {
       FBSTRING* vr$8361 = fb_StrAllocTempDescZEx( (uint8*)"t", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$8361, 0 );
      }
      goto label$10716;
      label$11185:;
      if( TMP$4337$6 != 238ull ) goto label$11187;
      label$11188:;
      {
       FBSTRING* vr$8362 = fb_StrAllocTempDescZEx( (uint8*)"tab", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8362, 0 );
      }
      goto label$10716;
      label$11187:;
      if( TMP$4337$6 != 239ull ) goto label$11189;
      label$11190:;
      {
       FBSTRING* vr$8363 = fb_StrAllocTempDescZEx( (uint8*)"table", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8363, 0 );
      }
      goto label$10716;
      label$11189:;
      if( TMP$4337$6 != 240ull ) goto label$11191;
      label$11192:;
      {
       FBSTRING* vr$8364 = fb_StrAllocTempDescZEx( (uint8*)"tally", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8364, 0 );
      }
      goto label$10716;
      label$11191:;
      if( TMP$4337$6 != 241ull ) goto label$11193;
      label$11194:;
      {
       FBSTRING* vr$8365 = fb_StrAllocTempDescZEx( (uint8*)"tallying", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8365, 0 );
      }
      goto label$10716;
      label$11193:;
      if( TMP$4337$6 != 242ull ) goto label$11195;
      label$11196:;
      {
       FBSTRING* vr$8366 = fb_StrAllocTempDescZEx( (uint8*)"tan", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8366, 0 );
      }
      goto label$10716;
      label$11195:;
      if( TMP$4337$6 != 243ull ) goto label$11197;
      label$11198:;
      {
       FBSTRING* vr$8367 = fb_StrAllocTempDescZEx( (uint8*)"tanh", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8367, 0 );
      }
      goto label$10716;
      label$11197:;
      if( TMP$4337$6 != 244ull ) goto label$11199;
      label$11200:;
      {
       FBSTRING* vr$8368 = fb_StrAllocTempDescZEx( (uint8*)"tape", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8368, 0 );
      }
      goto label$10716;
      label$11199:;
      if( TMP$4337$6 != 245ull ) goto label$11201;
      label$11202:;
      {
       FBSTRING* vr$8369 = fb_StrAllocTempDescZEx( (uint8*)"target", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8369, 0 );
      }
      goto label$10716;
      label$11201:;
      if( TMP$4337$6 != 246ull ) goto label$11203;
      label$11204:;
      {
       FBSTRING* vr$8370 = fb_StrAllocTempDescZEx( (uint8*)"template", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8370, 0 );
      }
      goto label$10716;
      label$11203:;
      if( TMP$4337$6 != 247ull ) goto label$11205;
      label$11206:;
      {
       FBSTRING* vr$8371 = fb_StrAllocTempDescZEx( (uint8*)"term", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8371, 0 );
      }
      goto label$10716;
      label$11205:;
      if( TMP$4337$6 != 248ull ) goto label$11207;
      label$11208:;
      {
       FBSTRING* vr$8372 = fb_StrAllocTempDescZEx( (uint8*)"terminal", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8372, 0 );
      }
      goto label$10716;
      label$11207:;
      if( TMP$4337$6 != 249ull ) goto label$11209;
      label$11210:;
      {
       FBSTRING* vr$8373 = fb_StrAllocTempDescZEx( (uint8*)"terminate", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8373, 0 );
      }
      goto label$10716;
      label$11209:;
      if( TMP$4337$6 != 250ull ) goto label$11211;
      label$11212:;
      {
       FBSTRING* vr$8374 = fb_StrAllocTempDescZEx( (uint8*)"test", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8374, 0 );
      }
      goto label$10716;
      label$11211:;
      if( TMP$4337$6 != 251ull ) goto label$11213;
      label$11214:;
      {
       FBSTRING* vr$8375 = fb_StrAllocTempDescZEx( (uint8*)"text", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8375, 0 );
      }
      goto label$10716;
      label$11213:;
      if( TMP$4337$6 != 252ull ) goto label$11215;
      label$11216:;
      {
       FBSTRING* vr$8376 = fb_StrAllocTempDescZEx( (uint8*)"texture", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8376, 0 );
      }
      goto label$10716;
      label$11215:;
      if( TMP$4337$6 != 253ull ) goto label$11217;
      label$11218:;
      {
       FBSTRING* vr$8377 = fb_StrAllocTempDescZEx( (uint8*)"texture3d", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8377, 0 );
      }
      goto label$10716;
      label$11217:;
      if( TMP$4337$6 != 254ull ) goto label$11219;
      label$11220:;
      {
       FBSTRING* vr$8378 = fb_StrAllocTempDescZEx( (uint8*)"texture_list", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8378, 0 );
      }
      goto label$10716;
      label$11219:;
      if( TMP$4337$6 != 255ull ) goto label$11221;
      label$11222:;
      {
       FBSTRING* vr$8379 = fb_StrAllocTempDescZEx( (uint8*)"texture_map", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8379, 0 );
      }
      label$11221:;
      label$10716:;
     }
    }
    goto label$9561;
    label$11223:;
    {
     {
      uint64 TMP$4588$6;
      TMP$4588$6 = ((uint64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394888ll) ));
      goto label$11225;
      label$11226:;
      {
       FBSTRING* vr$8381 = fb_StrAllocTempDescZEx( (uint8*)"tga", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8381, 0 );
      }
      goto label$11224;
      label$11227:;
      {
       FBSTRING* vr$8382 = fb_StrAllocTempDescZEx( (uint8*)"than", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8382, 0 );
      }
      goto label$11224;
      label$11228:;
      {
       FBSTRING* vr$8383 = fb_StrAllocTempDescZEx( (uint8*)"then", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8383, 0 );
      }
      goto label$11224;
      label$11229:;
      {
       FBSTRING* vr$8384 = fb_StrAllocTempDescZEx( (uint8*)"thickness", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8384, 0 );
      }
      goto label$11224;
      label$11230:;
      {
       FBSTRING* vr$8385 = fb_StrAllocTempDescZEx( (uint8*)"this", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8385, 0 );
      }
      goto label$11224;
      label$11231:;
      {
       FBSTRING* vr$8386 = fb_StrAllocTempDescZEx( (uint8*)"threadvar", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8386, 0 );
      }
      goto label$11224;
      label$11232:;
      {
       FBSTRING* vr$8387 = fb_StrAllocTempDescZEx( (uint8*)"threshold", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8387, 0 );
      }
      goto label$11224;
      label$11233:;
      {
       FBSTRING* vr$8388 = fb_StrAllocTempDescZEx( (uint8*)"through", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8388, 0 );
      }
      goto label$11224;
      label$11234:;
      {
       FBSTRING* vr$8389 = fb_StrAllocTempDescZEx( (uint8*)"thru", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8389, 0 );
      }
      goto label$11224;
      label$11235:;
      {
       FBSTRING* vr$8390 = fb_StrAllocTempDescZEx( (uint8*)"tiff", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8390, 0 );
      }
      goto label$11224;
      label$11236:;
      {
       FBSTRING* vr$8391 = fb_StrAllocTempDescZEx( (uint8*)"tightness", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8391, 0 );
      }
      goto label$11224;
      label$11237:;
      {
       FBSTRING* vr$8392 = fb_StrAllocTempDescZEx( (uint8*)"tile2", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8392, 0 );
      }
      goto label$11224;
      label$11238:;
      {
       FBSTRING* vr$8393 = fb_StrAllocTempDescZEx( (uint8*)"tiles", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8393, 0 );
      }
      goto label$11224;
      label$11239:;
      {
       FBSTRING* vr$8394 = fb_StrAllocTempDescZEx( (uint8*)"time", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8394, 0 );
      }
      goto label$11224;
      label$11240:;
      {
       FBSTRING* vr$8395 = fb_StrAllocTempDescZEx( (uint8*)"timer", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8395, 0 );
      }
      goto label$11224;
      label$11241:;
      {
       FBSTRING* vr$8396 = fb_StrAllocTempDescZEx( (uint8*)"times", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8396, 0 );
      }
      goto label$11224;
      label$11242:;
      {
       FBSTRING* vr$8397 = fb_StrAllocTempDescZEx( (uint8*)"timestamp", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8397, 0 );
      }
      goto label$11224;
      label$11243:;
      {
       FBSTRING* vr$8398 = fb_StrAllocTempDescZEx( (uint8*)"timesten", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8398, 0 );
      }
      goto label$11224;
      label$11244:;
      {
       FBSTRING* vr$8399 = fb_StrAllocTempDescZEx( (uint8*)"title", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8399, 0 );
      }
      goto label$11224;
      label$11245:;
      {
       FBSTRING* vr$8400 = fb_StrAllocTempDescZEx( (uint8*)"to", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8400, 0 );
      }
      goto label$11224;
      label$11246:;
      {
       FBSTRING* vr$8401 = fb_StrAllocTempDescZEx( (uint8*)"tolerance", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8401, 0 );
      }
      goto label$11224;
      label$11247:;
      {
       FBSTRING* vr$8402 = fb_StrAllocTempDescZEx( (uint8*)"top", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8402, 0 );
      }
      goto label$11224;
      label$11248:;
      {
       FBSTRING* vr$8403 = fb_StrAllocTempDescZEx( (uint8*)"toroidal", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8403, 0 );
      }
      goto label$11224;
      label$11249:;
      {
       FBSTRING* vr$8404 = fb_StrAllocTempDescZEx( (uint8*)"torus", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8404, 0 );
      }
      goto label$11224;
      label$11250:;
      {
       FBSTRING* vr$8405 = fb_StrAllocTempDescZEx( (uint8*)"trace", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8405, 0 );
      }
      goto label$11224;
      label$11251:;
      {
       FBSTRING* vr$8406 = fb_StrAllocTempDescZEx( (uint8*)"trailing", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8406, 0 );
      }
      goto label$11224;
      label$11252:;
      {
       FBSTRING* vr$8407 = fb_StrAllocTempDescZEx( (uint8*)"transform", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8407, 0 );
      }
      goto label$11224;
      label$11253:;
      {
       FBSTRING* vr$8408 = fb_StrAllocTempDescZEx( (uint8*)"transformc", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8408, 0 );
      }
      goto label$11224;
      label$11254:;
      {
       FBSTRING* vr$8409 = fb_StrAllocTempDescZEx( (uint8*)"transformu", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8409, 0 );
      }
      goto label$11224;
      label$11255:;
      {
       FBSTRING* vr$8410 = fb_StrAllocTempDescZEx( (uint8*)"translate", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8410, 0 );
      }
      goto label$11224;
      label$11256:;
      {
       FBSTRING* vr$8411 = fb_StrAllocTempDescZEx( (uint8*)"translucent", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8411, 0 );
      }
      goto label$11224;
      label$11257:;
      {
       FBSTRING* vr$8412 = fb_StrAllocTempDescZEx( (uint8*)"transmit", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8412, 0 );
      }
      goto label$11224;
      label$11258:;
      {
       FBSTRING* vr$8413 = fb_StrAllocTempDescZEx( (uint8*)"transparent", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8413, 0 );
      }
      goto label$11224;
      label$11259:;
      {
       FBSTRING* vr$8414 = fb_StrAllocTempDescZEx( (uint8*)"transpose", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8414, 0 );
      }
      goto label$11224;
      label$11260:;
      {
       FBSTRING* vr$8415 = fb_StrAllocTempDescZEx( (uint8*)"triangle", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8415, 0 );
      }
      goto label$11224;
      label$11261:;
      {
       FBSTRING* vr$8416 = fb_StrAllocTempDescZEx( (uint8*)"triangle_wave", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8416, 0 );
      }
      goto label$11224;
      label$11262:;
      {
       FBSTRING* vr$8417 = fb_StrAllocTempDescZEx( (uint8*)"trim", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8417, 0 );
      }
      goto label$11224;
      label$11263:;
      {
       FBSTRING* vr$8418 = fb_StrAllocTempDescZEx( (uint8*)"trim_b", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8418, 0 );
      }
      goto label$11224;
      label$11264:;
      {
       FBSTRING* vr$8419 = fb_StrAllocTempDescZEx( (uint8*)"trim_mb", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8419, 0 );
      }
      goto label$11224;
      label$11265:;
      {
       FBSTRING* vr$8420 = fb_StrAllocTempDescZEx( (uint8*)"troff", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8420, 0 );
      }
      goto label$11224;
      label$11266:;
      {
       FBSTRING* vr$8421 = fb_StrAllocTempDescZEx( (uint8*)"tron", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8421, 0 );
      }
      goto label$11224;
      label$11267:;
      {
       FBSTRING* vr$8422 = fb_StrAllocTempDescZEx( (uint8*)"true", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8422, 0 );
      }
      goto label$11224;
      label$11268:;
      {
       FBSTRING* vr$8423 = fb_StrAllocTempDescZEx( (uint8*)"trunc", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8423, 0 );
      }
      goto label$11224;
      label$11269:;
      {
       FBSTRING* vr$8424 = fb_StrAllocTempDescZEx( (uint8*)"try", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8424, 0 );
      }
      goto label$11224;
      label$11270:;
      {
       FBSTRING* vr$8425 = fb_StrAllocTempDescZEx( (uint8*)"ttf", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8425, 0 );
      }
      goto label$11224;
      label$11271:;
      {
       FBSTRING* vr$8426 = fb_StrAllocTempDescZEx( (uint8*)"turb_depth", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8426, 0 );
      }
      goto label$11224;
      label$11272:;
      {
       FBSTRING* vr$8427 = fb_StrAllocTempDescZEx( (uint8*)"turbulence", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8427, 0 );
      }
      goto label$11224;
      label$11273:;
      {
       FBSTRING* vr$8428 = fb_StrAllocTempDescZEx( (uint8*)"type", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8428, 0 );
      }
      goto label$11224;
      label$11274:;
      {
       FBSTRING* vr$8429 = fb_StrAllocTempDescZEx( (uint8*)"typedef", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8429, 0 );
      }
      goto label$11224;
      label$11275:;
      {
       FBSTRING* vr$8430 = fb_StrAllocTempDescZEx( (uint8*)"u", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$8430, 0 );
      }
      goto label$11224;
      label$11276:;
      {
       FBSTRING* vr$8431 = fb_StrAllocTempDescZEx( (uint8*)"uimage1D", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8431, 0 );
      }
      goto label$11224;
      label$11277:;
      {
       FBSTRING* vr$8432 = fb_StrAllocTempDescZEx( (uint8*)"uimage1DArray", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8432, 0 );
      }
      goto label$11224;
      label$11278:;
      {
       FBSTRING* vr$8433 = fb_StrAllocTempDescZEx( (uint8*)"uimage2D", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8433, 0 );
      }
      goto label$11224;
      label$11279:;
      {
       FBSTRING* vr$8434 = fb_StrAllocTempDescZEx( (uint8*)"uimage2DArray", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8434, 0 );
      }
      goto label$11224;
      label$11280:;
      {
       FBSTRING* vr$8435 = fb_StrAllocTempDescZEx( (uint8*)"uimage3D", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8435, 0 );
      }
      goto label$11224;
      label$11281:;
      {
       FBSTRING* vr$8436 = fb_StrAllocTempDescZEx( (uint8*)"uimageBuffer", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8436, 0 );
      }
      goto label$11224;
      label$11282:;
      {
       FBSTRING* vr$8437 = fb_StrAllocTempDescZEx( (uint8*)"uimageCube", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8437, 0 );
      }
      goto label$11224;
      label$11283:;
      {
       FBSTRING* vr$8438 = fb_StrAllocTempDescZEx( (uint8*)"uint", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8438, 0 );
      }
      goto label$11224;
      label$11284:;
      {
       FBSTRING* vr$8439 = fb_StrAllocTempDescZEx( (uint8*)"ultra_wide_angle", 16ll );
       fb_PrintString( 1, (FBSTRING*)vr$8439, 0 );
      }
      goto label$11224;
      label$11285:;
      {
       FBSTRING* vr$8440 = fb_StrAllocTempDescZEx( (uint8*)"undef", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8440, 0 );
      }
      goto label$11224;
      label$11286:;
      {
       FBSTRING* vr$8441 = fb_StrAllocTempDescZEx( (uint8*)"uniform", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8441, 0 );
      }
      goto label$11224;
      label$11287:;
      {
       FBSTRING* vr$8442 = fb_StrAllocTempDescZEx( (uint8*)"union", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8442, 0 );
      }
      goto label$11224;
      label$11288:;
      {
       FBSTRING* vr$8443 = fb_StrAllocTempDescZEx( (uint8*)"unit", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8443, 0 );
      }
      goto label$11224;
      label$11289:;
      {
       FBSTRING* vr$8444 = fb_StrAllocTempDescZEx( (uint8*)"unknown", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8444, 0 );
      }
      goto label$11224;
      label$11290:;
      {
       FBSTRING* vr$8445 = fb_StrAllocTempDescZEx( (uint8*)"unlock", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8445, 0 );
      }
      goto label$11224;
      label$11291:;
      {
       FBSTRING* vr$8446 = fb_StrAllocTempDescZEx( (uint8*)"unsigned", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8446, 0 );
      }
      goto label$11224;
      label$11292:;
      {
       FBSTRING* vr$8447 = fb_StrAllocTempDescZEx( (uint8*)"unstring", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8447, 0 );
      }
      goto label$11224;
      label$11293:;
      {
       FBSTRING* vr$8448 = fb_StrAllocTempDescZEx( (uint8*)"until", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8448, 0 );
      }
      goto label$11224;
      label$11294:;
      {
       FBSTRING* vr$8449 = fb_StrAllocTempDescZEx( (uint8*)"up", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8449, 0 );
      }
      goto label$11224;
      label$11295:;
      {
       FBSTRING* vr$8450 = fb_StrAllocTempDescZEx( (uint8*)"update", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8450, 0 );
      }
      goto label$11224;
      label$11296:;
      {
       FBSTRING* vr$8451 = fb_StrAllocTempDescZEx( (uint8*)"upon", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8451, 0 );
      }
      goto label$11224;
      label$11297:;
      {
       FBSTRING* vr$8452 = fb_StrAllocTempDescZEx( (uint8*)"upper", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8452, 0 );
      }
      goto label$11224;
      label$11298:;
      {
       FBSTRING* vr$8453 = fb_StrAllocTempDescZEx( (uint8*)"upper_mb", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8453, 0 );
      }
      goto label$11224;
      label$11299:;
      {
       FBSTRING* vr$8454 = fb_StrAllocTempDescZEx( (uint8*)"usage", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8454, 0 );
      }
      goto label$11224;
      label$11300:;
      {
       FBSTRING* vr$8455 = fb_StrAllocTempDescZEx( (uint8*)"usampler1D", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8455, 0 );
      }
      goto label$11224;
      label$11301:;
      {
       FBSTRING* vr$8456 = fb_StrAllocTempDescZEx( (uint8*)"usampler1DArray", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$8456, 0 );
      }
      goto label$11224;
      label$11302:;
      {
       FBSTRING* vr$8457 = fb_StrAllocTempDescZEx( (uint8*)"usampler2D", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8457, 0 );
      }
      goto label$11224;
      label$11303:;
      {
       FBSTRING* vr$8458 = fb_StrAllocTempDescZEx( (uint8*)"usampler2DArray", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$8458, 0 );
      }
      goto label$11224;
      label$11304:;
      {
       FBSTRING* vr$8459 = fb_StrAllocTempDescZEx( (uint8*)"usampler2drect", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$8459, 0 );
      }
      goto label$11224;
      label$11305:;
      {
       FBSTRING* vr$8460 = fb_StrAllocTempDescZEx( (uint8*)"usampler3D", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8460, 0 );
      }
      goto label$11224;
      label$11306:;
      {
       FBSTRING* vr$8461 = fb_StrAllocTempDescZEx( (uint8*)"usamplerBufferStruct", 20ll );
       fb_PrintString( 1, (FBSTRING*)vr$8461, 0 );
      }
      goto label$11224;
      label$11307:;
      {
       FBSTRING* vr$8462 = fb_StrAllocTempDescZEx( (uint8*)"usamplerCube", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8462, 0 );
      }
      goto label$11224;
      label$11308:;
      {
       FBSTRING* vr$8463 = fb_StrAllocTempDescZEx( (uint8*)"use", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8463, 0 );
      }
      goto label$11224;
      label$11309:;
      {
       FBSTRING* vr$8464 = fb_StrAllocTempDescZEx( (uint8*)"use_alpha", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8464, 0 );
      }
      goto label$11224;
      label$11310:;
      {
       FBSTRING* vr$8465 = fb_StrAllocTempDescZEx( (uint8*)"use_color", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8465, 0 );
      }
      goto label$11224;
      label$11311:;
      {
       FBSTRING* vr$8466 = fb_StrAllocTempDescZEx( (uint8*)"use_colour", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8466, 0 );
      }
      goto label$11224;
      label$11312:;
      {
       FBSTRING* vr$8467 = fb_StrAllocTempDescZEx( (uint8*)"use_index", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8467, 0 );
      }
      goto label$11224;
      label$11313:;
      {
       FBSTRING* vr$8468 = fb_StrAllocTempDescZEx( (uint8*)"uses", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8468, 0 );
      }
      goto label$11224;
      label$11314:;
      {
       FBSTRING* vr$8469 = fb_StrAllocTempDescZEx( (uint8*)"using", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8469, 0 );
      }
      goto label$11224;
      label$11315:;
      {
       FBSTRING* vr$8470 = fb_StrAllocTempDescZEx( (uint8*)"usr", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8470, 0 );
      }
      goto label$11224;
      label$11316:;
      {
       FBSTRING* vr$8471 = fb_StrAllocTempDescZEx( (uint8*)"u_steps", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8471, 0 );
      }
      goto label$11224;
      label$11317:;
      {
       FBSTRING* vr$8472 = fb_StrAllocTempDescZEx( (uint8*)"utf8", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8472, 0 );
      }
      goto label$11224;
      label$11318:;
      {
       FBSTRING* vr$8473 = fb_StrAllocTempDescZEx( (uint8*)"utf16", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8473, 0 );
      }
      goto label$11224;
      label$11319:;
      {
       FBSTRING* vr$8474 = fb_StrAllocTempDescZEx( (uint8*)"utf32", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8474, 0 );
      }
      goto label$11224;
      label$11320:;
      {
       FBSTRING* vr$8475 = fb_StrAllocTempDescZEx( (uint8*)"uvec2", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8475, 0 );
      }
      goto label$11224;
      label$11321:;
      {
       FBSTRING* vr$8476 = fb_StrAllocTempDescZEx( (uint8*)"uvec3", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8476, 0 );
      }
      goto label$11224;
      label$11322:;
      {
       FBSTRING* vr$8477 = fb_StrAllocTempDescZEx( (uint8*)"uvec4", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8477, 0 );
      }
      goto label$11224;
      label$11323:;
      {
       FBSTRING* vr$8478 = fb_StrAllocTempDescZEx( (uint8*)"uv_indices", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8478, 0 );
      }
      goto label$11224;
      label$11324:;
      {
       FBSTRING* vr$8479 = fb_StrAllocTempDescZEx( (uint8*)"uv_mapping", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8479, 0 );
      }
      goto label$11224;
      label$11325:;
      {
       FBSTRING* vr$8480 = fb_StrAllocTempDescZEx( (uint8*)"uv_vectors", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8480, 0 );
      }
      goto label$11224;
      label$11326:;
      {
       FBSTRING* vr$8481 = fb_StrAllocTempDescZEx( (uint8*)"v", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$8481, 0 );
      }
      goto label$11224;
      label$11327:;
      {
       FBSTRING* vr$8482 = fb_StrAllocTempDescZEx( (uint8*)"val", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8482, 0 );
      }
      goto label$11224;
      label$11328:;
      {
       FBSTRING* vr$8483 = fb_StrAllocTempDescZEx( (uint8*)"value", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8483, 0 );
      }
      goto label$11224;
      label$11329:;
      {
       FBSTRING* vr$8484 = fb_StrAllocTempDescZEx( (uint8*)"values", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8484, 0 );
      }
      goto label$11224;
      label$11330:;
      {
       FBSTRING* vr$8485 = fb_StrAllocTempDescZEx( (uint8*)"var", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8485, 0 );
      }
      goto label$11224;
      label$11331:;
      {
       FBSTRING* vr$8486 = fb_StrAllocTempDescZEx( (uint8*)"varchar", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8486, 0 );
      }
      goto label$11224;
      label$11332:;
      {
       FBSTRING* vr$8487 = fb_StrAllocTempDescZEx( (uint8*)"variance", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8487, 0 );
      }
      goto label$11224;
      label$11333:;
      {
       FBSTRING* vr$8488 = fb_StrAllocTempDescZEx( (uint8*)"varptr", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8488, 0 );
      }
      goto label$11224;
      label$11334:;
      {
       FBSTRING* vr$8489 = fb_StrAllocTempDescZEx( (uint8*)"varying", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8489, 0 );
      }
      goto label$11224;
      label$11335:;
      {
       FBSTRING* vr$8490 = fb_StrAllocTempDescZEx( (uint8*)"vaxis_rotate", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8490, 0 );
      }
      goto label$11224;
      label$11336:;
      {
       FBSTRING* vr$8491 = fb_StrAllocTempDescZEx( (uint8*)"vcross", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8491, 0 );
      }
      goto label$11224;
      label$11337:;
      {
       FBSTRING* vr$8492 = fb_StrAllocTempDescZEx( (uint8*)"vdot", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8492, 0 );
      }
      goto label$11224;
      label$11338:;
      {
       FBSTRING* vr$8493 = fb_StrAllocTempDescZEx( (uint8*)"vec2", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8493, 0 );
      }
      goto label$11224;
      label$11339:;
      {
       FBSTRING* vr$8494 = fb_StrAllocTempDescZEx( (uint8*)"vec3", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8494, 0 );
      }
      goto label$11224;
      label$11340:;
      {
       FBSTRING* vr$8495 = fb_StrAllocTempDescZEx( (uint8*)"vec4", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8495, 0 );
      }
      goto label$11224;
      label$11341:;
      {
       FBSTRING* vr$8496 = fb_StrAllocTempDescZEx( (uint8*)"vector", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8496, 0 );
      }
      goto label$11224;
      label$11342:;
      {
       FBSTRING* vr$8497 = fb_StrAllocTempDescZEx( (uint8*)"version", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8497, 0 );
      }
      goto label$11224;
      label$11343:;
      {
       FBSTRING* vr$8498 = fb_StrAllocTempDescZEx( (uint8*)"vertex_vectors", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$8498, 0 );
      }
      goto label$11224;
      label$11344:;
      {
       FBSTRING* vr$8499 = fb_StrAllocTempDescZEx( (uint8*)"view", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8499, 0 );
      }
      goto label$11224;
      label$11345:;
      {
       FBSTRING* vr$8500 = fb_StrAllocTempDescZEx( (uint8*)"virtual", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8500, 0 );
      }
      goto label$11224;
      label$11346:;
      {
       FBSTRING* vr$8501 = fb_StrAllocTempDescZEx( (uint8*)"vlength", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8501, 0 );
      }
      goto label$11224;
      label$11347:;
      {
       FBSTRING* vr$8502 = fb_StrAllocTempDescZEx( (uint8*)"vnormalize", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8502, 0 );
      }
      goto label$11224;
      label$11348:;
      {
       FBSTRING* vr$8503 = fb_StrAllocTempDescZEx( (uint8*)"void", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8503, 0 );
      }
      goto label$11224;
      label$11349:;
      {
       FBSTRING* vr$8504 = fb_StrAllocTempDescZEx( (uint8*)"volatile", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8504, 0 );
      }
      goto label$11224;
      label$11350:;
      {
       FBSTRING* vr$8505 = fb_StrAllocTempDescZEx( (uint8*)"vrotate", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8505, 0 );
      }
      goto label$11224;
      label$11351:;
      {
       FBSTRING* vr$8506 = fb_StrAllocTempDescZEx( (uint8*)"v_steps", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8506, 0 );
      }
      goto label$11224;
      label$11352:;
      {
       FBSTRING* vr$8507 = fb_StrAllocTempDescZEx( (uint8*)"vstr", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8507, 0 );
      }
      goto label$11224;
      label$11353:;
      {
       FBSTRING* vr$8508 = fb_StrAllocTempDescZEx( (uint8*)"vturbulence", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8508, 0 );
      }
      goto label$11224;
      label$11354:;
      {
       FBSTRING* vr$8509 = fb_StrAllocTempDescZEx( (uint8*)"w", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$8509, 0 );
      }
      goto label$11224;
      label$11355:;
      {
       FBSTRING* vr$8510 = fb_StrAllocTempDescZEx( (uint8*)"wait", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8510, 0 );
      }
      goto label$11224;
      label$11356:;
      {
       FBSTRING* vr$8511 = fb_StrAllocTempDescZEx( (uint8*)"ward", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8511, 0 );
      }
      goto label$11224;
      label$11357:;
      {
       FBSTRING* vr$8512 = fb_StrAllocTempDescZEx( (uint8*)"warning", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8512, 0 );
      }
      goto label$11224;
      label$11358:;
      {
       FBSTRING* vr$8513 = fb_StrAllocTempDescZEx( (uint8*)"warp", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8513, 0 );
      }
      goto label$11224;
      label$11359:;
      {
       FBSTRING* vr$8514 = fb_StrAllocTempDescZEx( (uint8*)"water_level", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8514, 0 );
      }
      goto label$11224;
      label$11360:;
      {
       FBSTRING* vr$8515 = fb_StrAllocTempDescZEx( (uint8*)"wavelength_color", 16ll );
       fb_PrintString( 1, (FBSTRING*)vr$8515, 0 );
      }
      goto label$11224;
      label$11361:;
      {
       FBSTRING* vr$8516 = fb_StrAllocTempDescZEx( (uint8*)"waves", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8516, 0 );
      }
      goto label$11224;
      label$11362:;
      {
       FBSTRING* vr$8517 = fb_StrAllocTempDescZEx( (uint8*)"wend", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8517, 0 );
      }
      goto label$11224;
      label$11363:;
      {
       FBSTRING* vr$8518 = fb_StrAllocTempDescZEx( (uint8*)"when", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8518, 0 );
      }
      goto label$11224;
      label$11364:;
      {
       FBSTRING* vr$8519 = fb_StrAllocTempDescZEx( (uint8*)"when-compiled", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8519, 0 );
      }
      goto label$11224;
      label$11365:;
      {
       FBSTRING* vr$8520 = fb_StrAllocTempDescZEx( (uint8*)"where", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8520, 0 );
      }
      goto label$11224;
      label$11366:;
      {
       FBSTRING* vr$8521 = fb_StrAllocTempDescZEx( (uint8*)"while", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8521, 0 );
      }
      goto label$11224;
      label$11367:;
      {
       FBSTRING* vr$8522 = fb_StrAllocTempDescZEx( (uint8*)"width", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8522, 0 );
      }
      goto label$11224;
      label$11368:;
      {
       FBSTRING* vr$8523 = fb_StrAllocTempDescZEx( (uint8*)"window", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8523, 0 );
      }
      goto label$11224;
      label$11369:;
      {
       FBSTRING* vr$8524 = fb_StrAllocTempDescZEx( (uint8*)"with", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8524, 0 );
      }
      goto label$11224;
      label$11370:;
      {
       FBSTRING* vr$8525 = fb_StrAllocTempDescZEx( (uint8*)"wood", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8525, 0 );
      }
      goto label$11224;
      label$11371:;
      {
       FBSTRING* vr$8526 = fb_StrAllocTempDescZEx( (uint8*)"words", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8526, 0 );
      }
      goto label$11224;
      label$11372:;
      {
       FBSTRING* vr$8527 = fb_StrAllocTempDescZEx( (uint8*)"working-storage", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$8527, 0 );
      }
      goto label$11224;
      label$11373:;
      {
       FBSTRING* vr$8528 = fb_StrAllocTempDescZEx( (uint8*)"wrinkles", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8528, 0 );
      }
      goto label$11224;
      label$11374:;
      {
       FBSTRING* vr$8529 = fb_StrAllocTempDescZEx( (uint8*)"write", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8529, 0 );
      }
      goto label$11224;
      label$11375:;
      {
       FBSTRING* vr$8530 = fb_StrAllocTempDescZEx( (uint8*)"write-only", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8530, 0 );
      }
      goto label$11224;
      label$11376:;
      {
       FBSTRING* vr$8531 = fb_StrAllocTempDescZEx( (uint8*)"x", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$8531, 0 );
      }
      goto label$11224;
      label$11377:;
      {
       FBSTRING* vr$8532 = fb_StrAllocTempDescZEx( (uint8*)"xor", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8532, 0 );
      }
      goto label$11224;
      label$11378:;
      {
       FBSTRING* vr$8533 = fb_StrAllocTempDescZEx( (uint8*)"xor_bits", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8533, 0 );
      }
      goto label$11224;
      label$11379:;
      {
       FBSTRING* vr$8534 = fb_StrAllocTempDescZEx( (uint8*)"y", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$8534, 1 );
      }
      goto label$11224;
      label$11380:;
      {
       FBSTRING* vr$8535 = fb_StrAllocTempDescZEx( (uint8*)"year", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8535, 0 );
      }
      goto label$11224;
      label$11381:;
      {
       FBSTRING* vr$8536 = fb_StrAllocTempDescZEx( (uint8*)"yes", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8536, 0 );
      }
      goto label$11224;
      label$11382:;
      {
       FBSTRING* vr$8537 = fb_StrAllocTempDescZEx( (uint8*)"yield", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8537, 0 );
      }
      goto label$11224;
      label$11383:;
      {
       FBSTRING* vr$8538 = fb_StrAllocTempDescZEx( (uint8*)"z", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$8538, 0 );
      }
      goto label$11224;
      label$11384:;
      {
       FBSTRING* vr$8539 = fb_StrAllocTempDescZEx( (uint8*)"zero", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8539, 0 );
      }
      goto label$11224;
      label$11385:;
      {
       FBSTRING* vr$8540 = fb_StrAllocTempDescZEx( (uint8*)"zeroes", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8540, 0 );
      }
      goto label$11224;
      label$11386:;
      {
       FBSTRING* vr$8541 = fb_StrAllocTempDescZEx( (uint8*)"zeros", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8541, 0 );
      }
      goto label$11224;
      label$11225:;
      static const void* tmp$5398[162ll] = {
       &&label$11226,
       &&label$11227,
       &&label$11228,
       &&label$11229,
       &&label$11230,
       &&label$11231,
       &&label$11232,
       &&label$11233,
       &&label$11234,
       &&label$11235,
       &&label$11236,
       &&label$11237,
       &&label$11238,
       &&label$11239,
       &&label$11224,
       &&label$11240,
       &&label$11241,
       &&label$11242,
       &&label$11243,
       &&label$11244,
       &&label$11245,
       &&label$11246,
       &&label$11247,
       &&label$11248,
       &&label$11249,
       &&label$11250,
       &&label$11251,
       &&label$11252,
       &&label$11253,
       &&label$11254,
       &&label$11255,
       &&label$11256,
       &&label$11257,
       &&label$11258,
       &&label$11259,
       &&label$11260,
       &&label$11261,
       &&label$11262,
       &&label$11263,
       &&label$11264,
       &&label$11265,
       &&label$11266,
       &&label$11267,
       &&label$11268,
       &&label$11269,
       &&label$11270,
       &&label$11271,
       &&label$11272,
       &&label$11273,
       &&label$11274,
       &&label$11275,
       &&label$11276,
       &&label$11277,
       &&label$11278,
       &&label$11279,
       &&label$11280,
       &&label$11281,
       &&label$11282,
       &&label$11283,
       &&label$11284,
       &&label$11285,
       &&label$11286,
       &&label$11287,
       &&label$11288,
       &&label$11289,
       &&label$11290,
       &&label$11291,
       &&label$11292,
       &&label$11293,
       &&label$11294,
       &&label$11295,
       &&label$11296,
       &&label$11297,
       &&label$11298,
       &&label$11299,
       &&label$11300,
       &&label$11301,
       &&label$11302,
       &&label$11303,
       &&label$11304,
       &&label$11305,
       &&label$11306,
       &&label$11307,
       &&label$11308,
       &&label$11309,
       &&label$11310,
       &&label$11311,
       &&label$11312,
       &&label$11313,
       &&label$11314,
       &&label$11315,
       &&label$11316,
       &&label$11317,
       &&label$11318,
       &&label$11319,
       &&label$11320,
       &&label$11321,
       &&label$11322,
       &&label$11323,
       &&label$11324,
       &&label$11325,
       &&label$11326,
       &&label$11327,
       &&label$11328,
       &&label$11329,
       &&label$11330,
       &&label$11331,
       &&label$11332,
       &&label$11333,
       &&label$11334,
       &&label$11335,
       &&label$11336,
       &&label$11337,
       &&label$11338,
       &&label$11339,
       &&label$11340,
       &&label$11341,
       &&label$11342,
       &&label$11343,
       &&label$11344,
       &&label$11345,
       &&label$11346,
       &&label$11347,
       &&label$11348,
       &&label$11349,
       &&label$11350,
       &&label$11351,
       &&label$11352,
       &&label$11353,
       &&label$11354,
       &&label$11355,
       &&label$11356,
       &&label$11357,
       &&label$11358,
       &&label$11359,
       &&label$11360,
       &&label$11361,
       &&label$11362,
       &&label$11363,
       &&label$11364,
       &&label$11365,
       &&label$11366,
       &&label$11367,
       &&label$11368,
       &&label$11369,
       &&label$11370,
       &&label$11371,
       &&label$11372,
       &&label$11373,
       &&label$11374,
       &&label$11375,
       &&label$11376,
       &&label$11377,
       &&label$11378,
       &&label$11379,
       &&label$11380,
       &&label$11381,
       &&label$11382,
       &&label$11383,
       &&label$11384,
       &&label$11385,
       &&label$11386,
      };
      if( TMP$4588$6 > 161ull ) goto label$11224;
      goto *tmp$5398[TMP$4588$6 - 0ull];
      label$11224:;
     }
    }
    goto label$9561;
    label$11387:;
    {
     {
      uint64 TMP$4744$6;
      TMP$4744$6 = ((uint64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394888ll) ));
      goto label$11389;
      label$11390:;
      {
       FBSTRING* vr$8543 = fb_StrAllocTempDescZEx( (uint8*)"buffer", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8543, 0 );
      }
      goto label$11388;
      label$11391:;
      {
       FBSTRING* vr$8544 = fb_StrAllocTempDescZEx( (uint8*)"shared", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8544, 0 );
      }
      goto label$11388;
      label$11392:;
      {
       FBSTRING* vr$8545 = fb_StrAllocTempDescZEx( (uint8*)"coherent", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8545, 0 );
      }
      goto label$11388;
      label$11393:;
      {
       FBSTRING* vr$8546 = fb_StrAllocTempDescZEx( (uint8*)"restrict", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8546, 0 );
      }
      goto label$11388;
      label$11394:;
      {
       FBSTRING* vr$8547 = fb_StrAllocTempDescZEx( (uint8*)"readonly", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8547, 0 );
      }
      goto label$11388;
      label$11395:;
      {
       FBSTRING* vr$8548 = fb_StrAllocTempDescZEx( (uint8*)"writeonly", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8548, 0 );
      }
      goto label$11388;
      label$11396:;
      {
       FBSTRING* vr$8549 = fb_StrAllocTempDescZEx( (uint8*)"atomic_uint", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8549, 0 );
      }
      goto label$11388;
      label$11397:;
      {
       FBSTRING* vr$8550 = fb_StrAllocTempDescZEx( (uint8*)"patch", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8550, 0 );
      }
      goto label$11388;
      label$11398:;
      {
       FBSTRING* vr$8551 = fb_StrAllocTempDescZEx( (uint8*)"sample", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8551, 0 );
      }
      goto label$11388;
      label$11399:;
      {
       FBSTRING* vr$8552 = fb_StrAllocTempDescZEx( (uint8*)"precise", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8552, 0 );
      }
      goto label$11388;
      label$11400:;
      {
       FBSTRING* vr$8553 = fb_StrAllocTempDescZEx( (uint8*)"dmat2", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8553, 0 );
      }
      goto label$11388;
      label$11401:;
      {
       FBSTRING* vr$8554 = fb_StrAllocTempDescZEx( (uint8*)"dmat3", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8554, 0 );
      }
      goto label$11388;
      label$11402:;
      {
       FBSTRING* vr$8555 = fb_StrAllocTempDescZEx( (uint8*)"dmat4", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8555, 0 );
      }
      goto label$11388;
      label$11403:;
      {
       FBSTRING* vr$8556 = fb_StrAllocTempDescZEx( (uint8*)"dmat2x2", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8556, 0 );
      }
      goto label$11388;
      label$11404:;
      {
       FBSTRING* vr$8557 = fb_StrAllocTempDescZEx( (uint8*)"dmat2x3", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8557, 0 );
      }
      goto label$11388;
      label$11405:;
      {
       FBSTRING* vr$8558 = fb_StrAllocTempDescZEx( (uint8*)"dmat2x4", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8558, 0 );
      }
      goto label$11388;
      label$11406:;
      {
       FBSTRING* vr$8559 = fb_StrAllocTempDescZEx( (uint8*)"dmat3x2", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8559, 0 );
      }
      goto label$11388;
      label$11407:;
      {
       FBSTRING* vr$8560 = fb_StrAllocTempDescZEx( (uint8*)"dmat3x3", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8560, 0 );
      }
      goto label$11388;
      label$11408:;
      {
       FBSTRING* vr$8561 = fb_StrAllocTempDescZEx( (uint8*)"dmat3x4", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8561, 0 );
      }
      goto label$11388;
      label$11409:;
      {
       FBSTRING* vr$8562 = fb_StrAllocTempDescZEx( (uint8*)"dmat4x2", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8562, 0 );
      }
      goto label$11388;
      label$11410:;
      {
       FBSTRING* vr$8563 = fb_StrAllocTempDescZEx( (uint8*)"dmat4x3", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8563, 0 );
      }
      goto label$11388;
      label$11411:;
      {
       FBSTRING* vr$8564 = fb_StrAllocTempDescZEx( (uint8*)"dmat4x4", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8564, 0 );
      }
      goto label$11388;
      label$11412:;
      {
       FBSTRING* vr$8565 = fb_StrAllocTempDescZEx( (uint8*)"image2DMS", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8565, 0 );
      }
      goto label$11388;
      label$11413:;
      {
       FBSTRING* vr$8566 = fb_StrAllocTempDescZEx( (uint8*)"iimage2DMS", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8566, 0 );
      }
      goto label$11388;
      label$11414:;
      {
       FBSTRING* vr$8567 = fb_StrAllocTempDescZEx( (uint8*)"uimage2DMS", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8567, 0 );
      }
      goto label$11388;
      label$11415:;
      {
       FBSTRING* vr$8568 = fb_StrAllocTempDescZEx( (uint8*)"image2DMSArray", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$8568, 0 );
      }
      goto label$11388;
      label$11416:;
      {
       FBSTRING* vr$8569 = fb_StrAllocTempDescZEx( (uint8*)"iimage2DMSArray", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$8569, 0 );
      }
      goto label$11388;
      label$11417:;
      {
       FBSTRING* vr$8570 = fb_StrAllocTempDescZEx( (uint8*)"uimage2DMSArray", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$8570, 0 );
      }
      goto label$11388;
      label$11418:;
      {
       FBSTRING* vr$8571 = fb_StrAllocTempDescZEx( (uint8*)"struct", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8571, 0 );
      }
      goto label$11388;
      label$11419:;
      {
       FBSTRING* vr$8572 = fb_StrAllocTempDescZEx( (uint8*)"sampler2DRect", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8572, 0 );
      }
      goto label$11388;
      label$11420:;
      {
       FBSTRING* vr$8573 = fb_StrAllocTempDescZEx( (uint8*)"resource", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8573, 0 );
      }
      goto label$11388;
      label$11421:;
      {
       FBSTRING* vr$8574 = fb_StrAllocTempDescZEx( (uint8*)"M_PI", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8574, 0 );
      }
      goto label$11388;
      label$11422:;
      {
       FBSTRING* vr$8575 = fb_StrAllocTempDescZEx( (uint8*)"M_PI_2", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8575, 0 );
      }
      goto label$11388;
      label$11423:;
      {
       FBSTRING* vr$8576 = fb_StrAllocTempDescZEx( (uint8*)"M_PI_4", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8576, 0 );
      }
      goto label$11388;
      label$11424:;
      {
       FBSTRING* vr$8577 = fb_StrAllocTempDescZEx( (uint8*)"M_2PI", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8577, 0 );
      }
      goto label$11388;
      label$11425:;
      {
       FBSTRING* vr$8578 = fb_StrAllocTempDescZEx( (uint8*)"M_4PI", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8578, 0 );
      }
      goto label$11388;
      label$11426:;
      {
       FBSTRING* vr$8579 = fb_StrAllocTempDescZEx( (uint8*)"M_2_SQRTPI", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8579, 0 );
      }
      goto label$11388;
      label$11427:;
      {
       FBSTRING* vr$8580 = fb_StrAllocTempDescZEx( (uint8*)"M_E", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8580, 0 );
      }
      goto label$11388;
      label$11428:;
      {
       FBSTRING* vr$8581 = fb_StrAllocTempDescZEx( (uint8*)"M_LN2", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8581, 0 );
      }
      goto label$11388;
      label$11429:;
      {
       FBSTRING* vr$8582 = fb_StrAllocTempDescZEx( (uint8*)"M_LN10", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8582, 0 );
      }
      goto label$11388;
      label$11430:;
      {
       FBSTRING* vr$8583 = fb_StrAllocTempDescZEx( (uint8*)"M_LOG2E", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8583, 0 );
      }
      goto label$11388;
      label$11431:;
      {
       FBSTRING* vr$8584 = fb_StrAllocTempDescZEx( (uint8*)"M_LOG10E", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8584, 0 );
      }
      goto label$11388;
      label$11432:;
      {
       FBSTRING* vr$8585 = fb_StrAllocTempDescZEx( (uint8*)"M_SQRT2", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8585, 0 );
      }
      goto label$11388;
      label$11433:;
      {
       FBSTRING* vr$8586 = fb_StrAllocTempDescZEx( (uint8*)"M_SQRT1_2", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8586, 0 );
      }
      goto label$11388;
      label$11434:;
      {
       FBSTRING* vr$8587 = fb_StrAllocTempDescZEx( (uint8*)"sincos", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8587, 0 );
      }
      goto label$11388;
      label$11435:;
      {
       FBSTRING* vr$8588 = fb_StrAllocTempDescZEx( (uint8*)"inversesqrt", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8588, 0 );
      }
      goto label$11388;
      label$11436:;
      {
       FBSTRING* vr$8589 = fb_StrAllocTempDescZEx( (uint8*)"seg", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8589, 0 );
      }
      goto label$11388;
      label$11437:;
      {
       FBSTRING* vr$8590 = fb_StrAllocTempDescZEx( (uint8*)"seek", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8590, 0 );
      }
      goto label$11388;
      label$11438:;
      {
       FBSTRING* vr$8591 = fb_StrAllocTempDescZEx( (uint8*)"sleep", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8591, 0 );
      }
      goto label$11388;
      label$11439:;
      {
       FBSTRING* vr$8592 = fb_StrAllocTempDescZEx( (uint8*)"console", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8592, 0 );
      }
      goto label$11388;
      label$11440:;
      {
       FBSTRING* vr$8593 = fb_StrAllocTempDescZEx( (uint8*)"COB_SWITCH_1", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8593, 0 );
      }
      goto label$11388;
      label$11441:;
      {
       FBSTRING* vr$8594 = fb_StrAllocTempDescZEx( (uint8*)"COB_SWITCH_2", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8594, 0 );
      }
      goto label$11388;
      label$11442:;
      {
       FBSTRING* vr$8595 = fb_StrAllocTempDescZEx( (uint8*)"COB_SWITCH_3", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8595, 0 );
      }
      goto label$11388;
      label$11443:;
      {
       FBSTRING* vr$8596 = fb_StrAllocTempDescZEx( (uint8*)"COB_SWITCH_4", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8596, 0 );
      }
      goto label$11388;
      label$11444:;
      {
       FBSTRING* vr$8597 = fb_StrAllocTempDescZEx( (uint8*)"COB_SWITCH_5", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8597, 0 );
      }
      goto label$11388;
      label$11445:;
      {
       FBSTRING* vr$8598 = fb_StrAllocTempDescZEx( (uint8*)"COB_SWITCH_6", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8598, 0 );
      }
      goto label$11388;
      label$11446:;
      {
       FBSTRING* vr$8599 = fb_StrAllocTempDescZEx( (uint8*)"COB_SWITCH_7", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8599, 0 );
      }
      goto label$11388;
      label$11447:;
      {
       FBSTRING* vr$8600 = fb_StrAllocTempDescZEx( (uint8*)"COB_SWITCH_8", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8600, 0 );
      }
      goto label$11388;
      label$11448:;
      {
       FBSTRING* vr$8601 = fb_StrAllocTempDescZEx( (uint8*)"abort", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8601, 0 );
      }
      goto label$11388;
      label$11449:;
      {
       FBSTRING* vr$8602 = fb_StrAllocTempDescZEx( (uint8*)"achar", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8602, 0 );
      }
      goto label$11388;
      label$11450:;
      {
       FBSTRING* vr$8603 = fb_StrAllocTempDescZEx( (uint8*)"acosd", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8603, 0 );
      }
      goto label$11388;
      label$11451:;
      {
       FBSTRING* vr$8604 = fb_StrAllocTempDescZEx( (uint8*)"adjustl", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8604, 0 );
      }
      goto label$11388;
      label$11452:;
      {
       FBSTRING* vr$8605 = fb_StrAllocTempDescZEx( (uint8*)"adjustr", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8605, 0 );
      }
      goto label$11388;
      label$11453:;
      {
       FBSTRING* vr$8606 = fb_StrAllocTempDescZEx( (uint8*)"aimag", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8606, 0 );
      }
      goto label$11388;
      label$11454:;
      {
       FBSTRING* vr$8607 = fb_StrAllocTempDescZEx( (uint8*)"aint", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8607, 0 );
      }
      goto label$11388;
      label$11455:;
      {
       FBSTRING* vr$8608 = fb_StrAllocTempDescZEx( (uint8*)"alarm", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8608, 0 );
      }
      goto label$11388;
      label$11456:;
      {
       FBSTRING* vr$8609 = fb_StrAllocTempDescZEx( (uint8*)"alocated", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8609, 0 );
      }
      goto label$11388;
      label$11457:;
      {
       FBSTRING* vr$8610 = fb_StrAllocTempDescZEx( (uint8*)"implicit", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8610, 0 );
      }
      goto label$11388;
      label$11458:;
      {
       FBSTRING* vr$8611 = fb_StrAllocTempDescZEx( (uint8*)"find", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8611, 0 );
      }
      goto label$11388;
      label$11459:;
      {
       FBSTRING* vr$8612 = fb_StrAllocTempDescZEx( (uint8*)"inquire", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8612, 0 );
      }
      goto label$11388;
      label$11460:;
      {
       FBSTRING* vr$8613 = fb_StrAllocTempDescZEx( (uint8*)"image2DRect", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8613, 0 );
      }
      goto label$11388;
      label$11461:;
      {
       FBSTRING* vr$8614 = fb_StrAllocTempDescZEx( (uint8*)"smpler2DMS", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8614, 0 );
      }
      goto label$11388;
      label$11462:;
      {
       FBSTRING* vr$8615 = fb_StrAllocTempDescZEx( (uint8*)"shortint", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8615, 0 );
      }
      goto label$11388;
      label$11463:;
      {
       FBSTRING* vr$8616 = fb_StrAllocTempDescZEx( (uint8*)"word", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8616, 0 );
      }
      goto label$11388;
      label$11464:;
      {
       FBSTRING* vr$8617 = fb_StrAllocTempDescZEx( (uint8*)"cardinal", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8617, 0 );
      }
      goto label$11388;
      label$11465:;
      {
       FBSTRING* vr$8618 = fb_StrAllocTempDescZEx( (uint8*)"longint", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8618, 0 );
      }
      goto label$11388;
      label$11466:;
      {
       FBSTRING* vr$8619 = fb_StrAllocTempDescZEx( (uint8*)"longword", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8619, 0 );
      }
      goto label$11388;
      label$11467:;
      {
       FBSTRING* vr$8620 = fb_StrAllocTempDescZEx( (uint8*)"int64", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8620, 0 );
      }
      goto label$11388;
      label$11468:;
      {
       FBSTRING* vr$8621 = fb_StrAllocTempDescZEx( (uint8*)"qword", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8621, 0 );
      }
      goto label$11388;
      label$11469:;
      {
       FBSTRING* vr$8622 = fb_StrAllocTempDescZEx( (uint8*)"single", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8622, 0 );
      }
      goto label$11388;
      label$11470:;
      {
       FBSTRING* vr$8623 = fb_StrAllocTempDescZEx( (uint8*)"extended", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8623, 0 );
      }
      goto label$11388;
      label$11471:;
      {
       FBSTRING* vr$8624 = fb_StrAllocTempDescZEx( (uint8*)"boolean", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8624, 0 );
      }
      goto label$11388;
      label$11472:;
      {
       FBSTRING* vr$8625 = fb_StrAllocTempDescZEx( (uint8*)"inherited", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8625, 0 );
      }
      goto label$11388;
      label$11473:;
      {
       FBSTRING* vr$8626 = fb_StrAllocTempDescZEx( (uint8*)"base", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8626, 0 );
      }
      goto label$11388;
      label$11474:;
      {
       FBSTRING* vr$8627 = fb_StrAllocTempDescZEx( (uint8*)"sbyte", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8627, 0 );
      }
      goto label$11388;
      label$11475:;
      {
       FBSTRING* vr$8628 = fb_StrAllocTempDescZEx( (uint8*)"ushort", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8628, 0 );
      }
      goto label$11388;
      label$11476:;
      {
       FBSTRING* vr$8629 = fb_StrAllocTempDescZEx( (uint8*)"ulong", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8629, 0 );
      }
      goto label$11388;
      label$11477:;
      {
       FBSTRING* vr$8630 = fb_StrAllocTempDescZEx( (uint8*)"catch", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8630, 0 );
      }
      goto label$11388;
      label$11478:;
      {
       FBSTRING* vr$8631 = fb_StrAllocTempDescZEx( (uint8*)"checked", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8631, 0 );
      }
      goto label$11388;
      label$11479:;
      {
       FBSTRING* vr$8632 = fb_StrAllocTempDescZEx( (uint8*)"decimal", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8632, 0 );
      }
      goto label$11388;
      label$11480:;
      {
       FBSTRING* vr$8633 = fb_StrAllocTempDescZEx( (uint8*)"delegate", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8633, 0 );
      }
      goto label$11388;
      label$11481:;
      {
       FBSTRING* vr$8634 = fb_StrAllocTempDescZEx( (uint8*)"event", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8634, 0 );
      }
      goto label$11388;
      label$11482:;
      {
       FBSTRING* vr$8635 = fb_StrAllocTempDescZEx( (uint8*)"foreach", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8635, 0 );
      }
      goto label$11388;
      label$11483:;
      {
       FBSTRING* vr$8636 = fb_StrAllocTempDescZEx( (uint8*)"namespace", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8636, 0 );
      }
      goto label$11388;
      label$11484:;
      {
       FBSTRING* vr$8637 = fb_StrAllocTempDescZEx( (uint8*)"params", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8637, 0 );
      }
      goto label$11388;
      label$11485:;
      {
       FBSTRING* vr$8638 = fb_StrAllocTempDescZEx( (uint8*)"ref", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8638, 0 );
      }
      goto label$11388;
      label$11486:;
      {
       FBSTRING* vr$8639 = fb_StrAllocTempDescZEx( (uint8*)"sealed", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8639, 0 );
      }
      goto label$11388;
      label$11487:;
      {
       FBSTRING* vr$8640 = fb_StrAllocTempDescZEx( (uint8*)"stackalloc", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8640, 0 );
      }
      goto label$11388;
      label$11488:;
      {
       FBSTRING* vr$8641 = fb_StrAllocTempDescZEx( (uint8*)"typeof", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8641, 0 );
      }
      goto label$11388;
      label$11489:;
      {
       FBSTRING* vr$8642 = fb_StrAllocTempDescZEx( (uint8*)"throw", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8642, 0 );
      }
      goto label$11388;
      label$11490:;
      {
       FBSTRING* vr$8643 = fb_StrAllocTempDescZEx( (uint8*)"unchecked", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8643, 0 );
      }
      goto label$11388;
      label$11491:;
      {
       FBSTRING* vr$8644 = fb_StrAllocTempDescZEx( (uint8*)"unsafe", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8644, 0 );
      }
      goto label$11388;
      label$11492:;
      {
       FBSTRING* vr$8645 = fb_StrAllocTempDescZEx( (uint8*)"equals", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8645, 0 );
      }
      goto label$11388;
      label$11493:;
      {
       FBSTRING* vr$8646 = fb_StrAllocTempDescZEx( (uint8*)"into", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8646, 0 );
      }
      goto label$11388;
      label$11494:;
      {
       FBSTRING* vr$8647 = fb_StrAllocTempDescZEx( (uint8*)"nameof", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8647, 0 );
      }
      goto label$11388;
      label$11495:;
      {
       FBSTRING* vr$8648 = fb_StrAllocTempDescZEx( (uint8*)"notnull", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8648, 0 );
      }
      goto label$11388;
      label$11496:;
      {
       FBSTRING* vr$8649 = fb_StrAllocTempDescZEx( (uint8*)"orderby", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8649, 0 );
      }
      goto label$11388;
      label$11497:;
      {
       FBSTRING* vr$8650 = fb_StrAllocTempDescZEx( (uint8*)"partial", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8650, 0 );
      }
      goto label$11388;
      label$11498:;
      {
       FBSTRING* vr$8651 = fb_StrAllocTempDescZEx( (uint8*)"remove", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8651, 0 );
      }
      goto label$11388;
      label$11499:;
      {
       FBSTRING* vr$8652 = fb_StrAllocTempDescZEx( (uint8*)"unmanaged", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8652, 0 );
      }
      goto label$11388;
      label$11500:;
      {
       FBSTRING* vr$8653 = fb_StrAllocTempDescZEx( (uint8*)"inf", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8653, 0 );
      }
      goto label$11388;
      label$11501:;
      {
       FBSTRING* vr$8654 = fb_StrAllocTempDescZEx( (uint8*)"NaN", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8654, 0 );
      }
      goto label$11388;
      label$11502:;
      {
       FBSTRING* vr$8655 = fb_StrAllocTempDescZEx( (uint8*)"NA", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8655, 0 );
      }
      goto label$11388;
      label$11503:;
      {
       FBSTRING* vr$8656 = fb_StrAllocTempDescZEx( (uint8*)"as?", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8656, 0 );
      }
      goto label$11388;
      label$11504:;
      {
       FBSTRING* vr$8657 = fb_StrAllocTempDescZEx( (uint8*)"fun", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8657, 0 );
      }
      goto label$11388;
      label$11505:;
      {
       FBSTRING* vr$8658 = fb_StrAllocTempDescZEx( (uint8*)"!in", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8658, 0 );
      }
      goto label$11388;
      label$11506:;
      {
       FBSTRING* vr$8659 = fb_StrAllocTempDescZEx( (uint8*)"!is", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8659, 0 );
      }
      goto label$11388;
      label$11507:;
      {
       FBSTRING* vr$8660 = fb_StrAllocTempDescZEx( (uint8*)"package", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8660, 0 );
      }
      goto label$11388;
      label$11508:;
      {
       FBSTRING* vr$8661 = fb_StrAllocTempDescZEx( (uint8*)"typealias", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8661, 0 );
      }
      goto label$11388;
      label$11509:;
      {
       FBSTRING* vr$8662 = fb_StrAllocTempDescZEx( (uint8*)"init", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8662, 0 );
      }
      goto label$11388;
      label$11510:;
      {
       FBSTRING* vr$8663 = fb_StrAllocTempDescZEx( (uint8*)"param", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8663, 0 );
      }
      goto label$11388;
      label$11511:;
      {
       FBSTRING* vr$8664 = fb_StrAllocTempDescZEx( (uint8*)"receiver", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8664, 0 );
      }
      goto label$11388;
      label$11512:;
      {
       FBSTRING* vr$8665 = fb_StrAllocTempDescZEx( (uint8*)"setparam", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8665, 0 );
      }
      goto label$11388;
      label$11513:;
      {
       FBSTRING* vr$8666 = fb_StrAllocTempDescZEx( (uint8*)"actual", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8666, 0 );
      }
      goto label$11388;
      label$11514:;
      {
       FBSTRING* vr$8667 = fb_StrAllocTempDescZEx( (uint8*)"annotation", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8667, 0 );
      }
      goto label$11388;
      label$11515:;
      {
       FBSTRING* vr$8668 = fb_StrAllocTempDescZEx( (uint8*)"companion", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8668, 0 );
      }
      goto label$11388;
      label$11516:;
      {
       FBSTRING* vr$8669 = fb_StrAllocTempDescZEx( (uint8*)"crossinline", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8669, 0 );
      }
      goto label$11388;
      label$11517:;
      {
       FBSTRING* vr$8670 = fb_StrAllocTempDescZEx( (uint8*)"expect", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8670, 0 );
      }
      goto label$11388;
      label$11518:;
      {
       FBSTRING* vr$8671 = fb_StrAllocTempDescZEx( (uint8*)"infix", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8671, 0 );
      }
      goto label$11388;
      label$11519:;
      {
       FBSTRING* vr$8672 = fb_StrAllocTempDescZEx( (uint8*)"lateinit", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8672, 0 );
      }
      goto label$11388;
      label$11520:;
      {
       FBSTRING* vr$8673 = fb_StrAllocTempDescZEx( (uint8*)"noinline", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8673, 0 );
      }
      goto label$11388;
      label$11521:;
      {
       FBSTRING* vr$8674 = fb_StrAllocTempDescZEx( (uint8*)"reified", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8674, 0 );
      }
      goto label$11388;
      label$11522:;
      {
       FBSTRING* vr$8675 = fb_StrAllocTempDescZEx( (uint8*)"suspend", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8675, 0 );
      }
      goto label$11388;
      label$11523:;
      {
       FBSTRING* vr$8676 = fb_StrAllocTempDescZEx( (uint8*)"tailrec", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8676, 0 );
      }
      goto label$11388;
      label$11524:;
      {
       FBSTRING* vr$8677 = fb_StrAllocTempDescZEx( (uint8*)"vararg", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8677, 0 );
      }
      goto label$11388;
      label$11525:;
      {
       FBSTRING* vr$8678 = fb_StrAllocTempDescZEx( (uint8*)"it", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8678, 0 );
      }
      goto label$11388;
      label$11526:;
      {
       FBSTRING* vr$8679 = fb_StrAllocTempDescZEx( (uint8*)"callable", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8679, 0 );
      }
      goto label$11388;
      label$11527:;
      {
       FBSTRING* vr$8680 = fb_StrAllocTempDescZEx( (uint8*)"clone", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8680, 0 );
      }
      goto label$11388;
      label$11528:;
      {
       FBSTRING* vr$8681 = fb_StrAllocTempDescZEx( (uint8*)"echo", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8681, 0 );
      }
      goto label$11388;
      label$11529:;
      {
       FBSTRING* vr$8682 = fb_StrAllocTempDescZEx( (uint8*)"empty", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8682, 0 );
      }
      goto label$11388;
      label$11530:;
      {
       FBSTRING* vr$8683 = fb_StrAllocTempDescZEx( (uint8*)"enddeclare", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8683, 0 );
      }
      goto label$11388;
      label$11531:;
      {
       FBSTRING* vr$8684 = fb_StrAllocTempDescZEx( (uint8*)"endfor", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8684, 0 );
      }
      goto label$11388;
      label$11532:;
      {
       FBSTRING* vr$8685 = fb_StrAllocTempDescZEx( (uint8*)"endforeach", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8685, 0 );
      }
      goto label$11388;
      label$11533:;
      {
       FBSTRING* vr$8686 = fb_StrAllocTempDescZEx( (uint8*)"endif", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8686, 0 );
      }
      goto label$11388;
      label$11534:;
      {
       FBSTRING* vr$8687 = fb_StrAllocTempDescZEx( (uint8*)"endswitch", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8687, 0 );
      }
      goto label$11388;
      label$11535:;
      {
       FBSTRING* vr$8688 = fb_StrAllocTempDescZEx( (uint8*)"endwile", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8688, 0 );
      }
      goto label$11388;
      label$11536:;
      {
       FBSTRING* vr$8689 = fb_StrAllocTempDescZEx( (uint8*)"extends", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8689, 0 );
      }
      goto label$11388;
      label$11537:;
      {
       FBSTRING* vr$8690 = fb_StrAllocTempDescZEx( (uint8*)"instanceof", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8690, 0 );
      }
      goto label$11388;
      label$11538:;
      {
       FBSTRING* vr$8691 = fb_StrAllocTempDescZEx( (uint8*)"isset", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8691, 0 );
      }
      goto label$11388;
      label$11539:;
      {
       FBSTRING* vr$8692 = fb_StrAllocTempDescZEx( (uint8*)"require", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8692, 0 );
      }
      goto label$11388;
      label$11540:;
      {
       FBSTRING* vr$8693 = fb_StrAllocTempDescZEx( (uint8*)"trait", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8693, 0 );
      }
      goto label$11388;
      label$11541:;
      {
       FBSTRING* vr$8694 = fb_StrAllocTempDescZEx( (uint8*)"unset", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8694, 0 );
      }
      goto label$11388;
      label$11542:;
      {
       FBSTRING* vr$8695 = fb_StrAllocTempDescZEx( (uint8*)"del", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8695, 0 );
      }
      goto label$11388;
      label$11543:;
      {
       FBSTRING* vr$8696 = fb_StrAllocTempDescZEx( (uint8*)"yield", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8696, 0 );
      }
      goto label$11388;
      label$11544:;
      {
       FBSTRING* vr$8697 = fb_StrAllocTempDescZEx( (uint8*)"signed", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8697, 0 );
      }
      goto label$11388;
      label$11545:;
      {
       FBSTRING* vr$8698 = fb_StrAllocTempDescZEx( (uint8*)"final", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8698, 0 );
      }
      goto label$11388;
      label$11546:;
      {
       FBSTRING* vr$8699 = fb_StrAllocTempDescZEx( (uint8*)"implements", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8699, 0 );
      }
      goto label$11388;
      label$11547:;
      {
       FBSTRING* vr$8700 = fb_StrAllocTempDescZEx( (uint8*)"strictfp", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8700, 0 );
      }
      goto label$11388;
      label$11548:;
      {
       FBSTRING* vr$8701 = fb_StrAllocTempDescZEx( (uint8*)"throws", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8701, 0 );
      }
      goto label$11388;
      label$11549:;
      {
       FBSTRING* vr$8702 = fb_StrAllocTempDescZEx( (uint8*)"transient", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8702, 0 );
      }
      goto label$11388;
      label$11550:;
      {
       FBSTRING* vr$8703 = fb_StrAllocTempDescZEx( (uint8*)"allocate", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8703, 0 );
      }
      goto label$11388;
      label$11551:;
      {
       FBSTRING* vr$8704 = fb_StrAllocTempDescZEx( (uint8*)"andalso", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8704, 0 );
      }
      goto label$11388;
      label$11552:;
      {
       FBSTRING* vr$8705 = fb_StrAllocTempDescZEx( (uint8*)"assertwarn", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8705, 0 );
      }
      goto label$11388;
      label$11553:;
      {
       FBSTRING* vr$8706 = fb_StrAllocTempDescZEx( (uint8*)"bin", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8706, 0 );
      }
      goto label$11388;
      label$11554:;
      {
       FBSTRING* vr$8707 = fb_StrAllocTempDescZEx( (uint8*)"bit", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8707, 0 );
      }
      goto label$11388;
      label$11555:;
      {
       FBSTRING* vr$8708 = fb_StrAllocTempDescZEx( (uint8*)"bitreset", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8708, 0 );
      }
      goto label$11388;
      label$11556:;
      {
       FBSTRING* vr$8709 = fb_StrAllocTempDescZEx( (uint8*)"bitset", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8709, 0 );
      }
      goto label$11388;
      label$11557:;
      {
       FBSTRING* vr$8710 = fb_StrAllocTempDescZEx( (uint8*)"byref", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8710, 0 );
      }
      goto label$11388;
      label$11558:;
      {
       FBSTRING* vr$8711 = fb_StrAllocTempDescZEx( (uint8*)"byval", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8711, 0 );
      }
      goto label$11388;
      label$11559:;
      {
       FBSTRING* vr$8712 = fb_StrAllocTempDescZEx( (uint8*)"callocate", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8712, 0 );
      }
      goto label$11388;
      label$11560:;
      {
       FBSTRING* vr$8713 = fb_StrAllocTempDescZEx( (uint8*)"cbool", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8713, 0 );
      }
      goto label$11388;
      label$11561:;
      {
       FBSTRING* vr$8714 = fb_StrAllocTempDescZEx( (uint8*)"cbyte", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8714, 0 );
      }
      goto label$11388;
      label$11562:;
      {
       FBSTRING* vr$8715 = fb_StrAllocTempDescZEx( (uint8*)"clng", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8715, 0 );
      }
      goto label$11388;
      label$11563:;
      {
       FBSTRING* vr$8716 = fb_StrAllocTempDescZEx( (uint8*)"clongint", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8716, 0 );
      }
      goto label$11388;
      label$11564:;
      {
       FBSTRING* vr$8717 = fb_StrAllocTempDescZEx( (uint8*)"command", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8717, 0 );
      }
      goto label$11388;
      label$11565:;
      {
       FBSTRING* vr$8718 = fb_StrAllocTempDescZEx( (uint8*)"condbroadcast", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8718, 0 );
      }
      goto label$11388;
      label$11566:;
      {
       FBSTRING* vr$8719 = fb_StrAllocTempDescZEx( (uint8*)"condcreate", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8719, 0 );
      }
      goto label$11388;
      label$11567:;
      {
       FBSTRING* vr$8720 = fb_StrAllocTempDescZEx( (uint8*)"conddestroy", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8720, 0 );
      }
      goto label$11388;
      label$11568:;
      {
       FBSTRING* vr$8721 = fb_StrAllocTempDescZEx( (uint8*)"condsignal", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8721, 0 );
      }
      goto label$11388;
      label$11569:;
      {
       FBSTRING* vr$8722 = fb_StrAllocTempDescZEx( (uint8*)"condwait", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8722, 0 );
      }
      goto label$11388;
      label$11570:;
      {
       FBSTRING* vr$8723 = fb_StrAllocTempDescZEx( (uint8*)"cptr", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8723, 0 );
      }
      goto label$11388;
      label$11571:;
      {
       FBSTRING* vr$8724 = fb_StrAllocTempDescZEx( (uint8*)"cshort", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8724, 0 );
      }
      goto label$11388;
      label$11572:;
      {
       FBSTRING* vr$8725 = fb_StrAllocTempDescZEx( (uint8*)"csign", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8725, 0 );
      }
      goto label$11388;
      label$11573:;
      {
       FBSTRING* vr$8726 = fb_StrAllocTempDescZEx( (uint8*)"cubyte", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8726, 0 );
      }
      goto label$11388;
      label$11574:;
      {
       FBSTRING* vr$8727 = fb_StrAllocTempDescZEx( (uint8*)"cuint", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8727, 0 );
      }
      goto label$11388;
      label$11575:;
      {
       FBSTRING* vr$8728 = fb_StrAllocTempDescZEx( (uint8*)"culng", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8728, 0 );
      }
      goto label$11388;
      label$11576:;
      {
       FBSTRING* vr$8729 = fb_StrAllocTempDescZEx( (uint8*)"culngint", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8729, 0 );
      }
      goto label$11388;
      label$11577:;
      {
       FBSTRING* vr$8730 = fb_StrAllocTempDescZEx( (uint8*)"cunsg", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8730, 0 );
      }
      goto label$11388;
      label$11578:;
      {
       FBSTRING* vr$8731 = fb_StrAllocTempDescZEx( (uint8*)"curdir", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8731, 0 );
      }
      goto label$11388;
      label$11579:;
      {
       FBSTRING* vr$8732 = fb_StrAllocTempDescZEx( (uint8*)"cushort", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8732, 0 );
      }
      goto label$11388;
      label$11580:;
      {
       FBSTRING* vr$8733 = fb_StrAllocTempDescZEx( (uint8*)"custom", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8733, 0 );
      }
      goto label$11388;
      label$11581:;
      {
       FBSTRING* vr$8734 = fb_StrAllocTempDescZEx( (uint8*)"cva_arg", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8734, 0 );
      }
      goto label$11388;
      label$11582:;
      {
       FBSTRING* vr$8735 = fb_StrAllocTempDescZEx( (uint8*)"cva_copy", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8735, 0 );
      }
      goto label$11388;
      label$11583:;
      {
       FBSTRING* vr$8736 = fb_StrAllocTempDescZEx( (uint8*)"cva_list", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8736, 0 );
      }
      goto label$11388;
      label$11584:;
      {
       FBSTRING* vr$8737 = fb_StrAllocTempDescZEx( (uint8*)"cva_end", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8737, 0 );
      }
      goto label$11388;
      label$11585:;
      {
       FBSTRING* vr$8738 = fb_StrAllocTempDescZEx( (uint8*)"cva_start", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8738, 0 );
      }
      goto label$11388;
      label$11586:;
      {
       FBSTRING* vr$8739 = fb_StrAllocTempDescZEx( (uint8*)"cvl", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8739, 0 );
      }
      goto label$11388;
      label$11587:;
      {
       FBSTRING* vr$8740 = fb_StrAllocTempDescZEx( (uint8*)"cvlongint", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8740, 0 );
      }
      goto label$11388;
      label$11588:;
      {
       FBSTRING* vr$8741 = fb_StrAllocTempDescZEx( (uint8*)"cvshort", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8741, 0 );
      }
      goto label$11388;
      label$11589:;
      {
       FBSTRING* vr$8742 = fb_StrAllocTempDescZEx( (uint8*)"dateadd", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8742, 0 );
      }
      goto label$11388;
      label$11590:;
      {
       FBSTRING* vr$8743 = fb_StrAllocTempDescZEx( (uint8*)"datediff", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8743, 0 );
      }
      goto label$11388;
      label$11591:;
      {
       FBSTRING* vr$8744 = fb_StrAllocTempDescZEx( (uint8*)"datepart", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8744, 0 );
      }
      goto label$11388;
      label$11592:;
      {
       FBSTRING* vr$8745 = fb_StrAllocTempDescZEx( (uint8*)"dateserial", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8745, 0 );
      }
      goto label$11388;
      label$11593:;
      {
       FBSTRING* vr$8746 = fb_StrAllocTempDescZEx( (uint8*)"datevalue", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8746, 0 );
      }
      goto label$11388;
      label$11594:;
      {
       FBSTRING* vr$8747 = fb_StrAllocTempDescZEx( (uint8*)"deallocate", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8747, 0 );
      }
      goto label$11388;
      label$11595:;
      {
       FBSTRING* vr$8748 = fb_StrAllocTempDescZEx( (uint8*)"defbyte", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8748, 0 );
      }
      goto label$11388;
      label$11596:;
      {
       FBSTRING* vr$8749 = fb_StrAllocTempDescZEx( (uint8*)"deflng", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8749, 0 );
      }
      goto label$11388;
      label$11597:;
      {
       FBSTRING* vr$8750 = fb_StrAllocTempDescZEx( (uint8*)"deflongint", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8750, 0 );
      }
      goto label$11388;
      label$11598:;
      {
       FBSTRING* vr$8751 = fb_StrAllocTempDescZEx( (uint8*)"defshort", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8751, 0 );
      }
      goto label$11388;
      label$11599:;
      {
       FBSTRING* vr$8752 = fb_StrAllocTempDescZEx( (uint8*)"defubyte", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8752, 0 );
      }
      goto label$11388;
      label$11600:;
      {
       FBSTRING* vr$8753 = fb_StrAllocTempDescZEx( (uint8*)"defuint", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8753, 0 );
      }
      goto label$11388;
      label$11601:;
      {
       FBSTRING* vr$8754 = fb_StrAllocTempDescZEx( (uint8*)"defulongint", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8754, 0 );
      }
      goto label$11388;
      label$11602:;
      {
       FBSTRING* vr$8755 = fb_StrAllocTempDescZEx( (uint8*)"defushort", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8755, 0 );
      }
      goto label$11388;
      label$11603:;
      {
       FBSTRING* vr$8756 = fb_StrAllocTempDescZEx( (uint8*)"dir", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8756, 0 );
      }
      goto label$11388;
      label$11604:;
      {
       FBSTRING* vr$8757 = fb_StrAllocTempDescZEx( (uint8*)"dylibfree", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8757, 0 );
      }
      goto label$11388;
      label$11605:;
      {
       FBSTRING* vr$8758 = fb_StrAllocTempDescZEx( (uint8*)"dylibload", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8758, 0 );
      }
      goto label$11388;
      label$11606:;
      {
       FBSTRING* vr$8759 = fb_StrAllocTempDescZEx( (uint8*)"dylibsymbol", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8759, 1 );
      }
      goto label$11388;
      label$11607:;
      {
       FBSTRING* vr$8760 = fb_StrAllocTempDescZEx( (uint8*)"encoding", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8760, 0 );
      }
      goto label$11388;
      label$11608:;
      {
       FBSTRING* vr$8761 = fb_StrAllocTempDescZEx( (uint8*)"erfn", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8761, 0 );
      }
      goto label$11388;
      label$11609:;
      {
       FBSTRING* vr$8762 = fb_StrAllocTempDescZEx( (uint8*)"ermn", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8762, 0 );
      }
      goto label$11388;
      label$11610:;
      {
       FBSTRING* vr$8763 = fb_StrAllocTempDescZEx( (uint8*)"exec", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8763, 0 );
      }
      goto label$11388;
      label$11611:;
      {
       FBSTRING* vr$8764 = fb_StrAllocTempDescZEx( (uint8*)"exepath", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8764, 0 );
      }
      goto label$11388;
      label$11612:;
      {
       FBSTRING* vr$8765 = fb_StrAllocTempDescZEx( (uint8*)"compile", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8765, 0 );
      }
      goto label$11388;
      label$11613:;
      {
       FBSTRING* vr$8766 = fb_StrAllocTempDescZEx( (uint8*)"help", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8766, 0 );
      }
      goto label$11388;
      label$11614:;
      {
       FBSTRING* vr$8767 = fb_StrAllocTempDescZEx( (uint8*)"identify", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8767, 0 );
      }
      goto label$11388;
      label$11615:;
      {
       FBSTRING* vr$8768 = fb_StrAllocTempDescZEx( (uint8*)"listnh", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8768, 0 );
      }
      goto label$11388;
      label$11616:;
      {
       FBSTRING* vr$8769 = fb_StrAllocTempDescZEx( (uint8*)"old", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8769, 0 );
      }
      goto label$11388;
      label$11617:;
      {
       FBSTRING* vr$8770 = fb_StrAllocTempDescZEx( (uint8*)"rename", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8770, 0 );
      }
      goto label$11388;
      label$11618:;
      {
       FBSTRING* vr$8771 = fb_StrAllocTempDescZEx( (uint8*)"resequence", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8771, 0 );
      }
      goto label$11388;
      label$11619:;
      {
       FBSTRING* vr$8772 = fb_StrAllocTempDescZEx( (uint8*)"scratch", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8772, 0 );
      }
      goto label$11388;
      label$11620:;
      {
       FBSTRING* vr$8773 = fb_StrAllocTempDescZEx( (uint8*)"show", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8773, 0 );
      }
      goto label$11388;
      label$11621:;
      {
       FBSTRING* vr$8774 = fb_StrAllocTempDescZEx( (uint8*)"unsave", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8774, 0 );
      }
      goto label$11388;
      label$11622:;
      {
       FBSTRING* vr$8775 = fb_StrAllocTempDescZEx( (uint8*)"bufsiz", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8775, 0 );
      }
      goto label$11388;
      label$11623:;
      {
       FBSTRING* vr$8776 = fb_StrAllocTempDescZEx( (uint8*)"ccpos", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8776, 0 );
      }
      goto label$11388;
      label$11624:;
      {
       FBSTRING* vr$8777 = fb_StrAllocTempDescZEx( (uint8*)"change", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8777, 0 );
      }
      goto label$11388;
      label$11625:;
      {
       FBSTRING* vr$8778 = fb_StrAllocTempDescZEx( (uint8*)"ctrlc", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8778, 0 );
      }
      goto label$11388;
      label$11626:;
      {
       FBSTRING* vr$8779 = fb_StrAllocTempDescZEx( (uint8*)"det", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8779, 0 );
      }
      goto label$11388;
      label$11627:;
      {
       FBSTRING* vr$8780 = fb_StrAllocTempDescZEx( (uint8*)"dif", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8780, 0 );
      }
      goto label$11388;
      label$11628:;
      {
       FBSTRING* vr$8781 = fb_StrAllocTempDescZEx( (uint8*)"ern", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8781, 0 );
      }
      goto label$11388;
      label$11629:;
      {
       FBSTRING* vr$8782 = fb_StrAllocTempDescZEx( (uint8*)"fileattr", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8782, 0 );
      }
      goto label$11388;
      label$11630:;
      {
       FBSTRING* vr$8783 = fb_StrAllocTempDescZEx( (uint8*)"filecopy", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8783, 0 );
      }
      goto label$11388;
      label$11631:;
      {
       FBSTRING* vr$8784 = fb_StrAllocTempDescZEx( (uint8*)"filedatetime", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8784, 0 );
      }
      goto label$11388;
      label$11632:;
      {
       FBSTRING* vr$8785 = fb_StrAllocTempDescZEx( (uint8*)"fileexists", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8785, 0 );
      }
      goto label$11388;
      label$11633:;
      {
       FBSTRING* vr$8786 = fb_StrAllocTempDescZEx( (uint8*)"filelen", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8786, 0 );
      }
      goto label$11388;
      label$11634:;
      {
       FBSTRING* vr$8787 = fb_StrAllocTempDescZEx( (uint8*)"freefile", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8787, 0 );
      }
      goto label$11388;
      label$11635:;
      {
       FBSTRING* vr$8788 = fb_StrAllocTempDescZEx( (uint8*)"frac", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8788, 0 );
      }
      goto label$11388;
      label$11636:;
      {
       FBSTRING* vr$8789 = fb_StrAllocTempDescZEx( (uint8*)"getjoystick", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8789, 0 );
      }
      goto label$11388;
      label$11637:;
      {
       FBSTRING* vr$8790 = fb_StrAllocTempDescZEx( (uint8*)"getkey", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8790, 0 );
      }
      goto label$11388;
      label$11638:;
      {
       FBSTRING* vr$8791 = fb_StrAllocTempDescZEx( (uint8*)"getmouse", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8791, 0 );
      }
      goto label$11388;
      label$11639:;
      {
       FBSTRING* vr$8792 = fb_StrAllocTempDescZEx( (uint8*)"hibyte", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8792, 0 );
      }
      goto label$11388;
      label$11640:;
      {
       FBSTRING* vr$8793 = fb_StrAllocTempDescZEx( (uint8*)"hiword", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8793, 0 );
      }
      goto label$11388;
      label$11389:;
      static const void* tmp$5399[256ll] = {
       &&label$11390,
       &&label$11391,
       &&label$11392,
       &&label$11388,
       &&label$11393,
       &&label$11394,
       &&label$11395,
       &&label$11396,
       &&label$11397,
       &&label$11398,
       &&label$11399,
       &&label$11400,
       &&label$11401,
       &&label$11402,
       &&label$11403,
       &&label$11404,
       &&label$11405,
       &&label$11406,
       &&label$11407,
       &&label$11408,
       &&label$11388,
       &&label$11409,
       &&label$11410,
       &&label$11411,
       &&label$11412,
       &&label$11413,
       &&label$11414,
       &&label$11415,
       &&label$11416,
       &&label$11417,
       &&label$11418,
       &&label$11419,
       &&label$11420,
       &&label$11421,
       &&label$11422,
       &&label$11423,
       &&label$11424,
       &&label$11425,
       &&label$11426,
       &&label$11427,
       &&label$11428,
       &&label$11429,
       &&label$11430,
       &&label$11431,
       &&label$11432,
       &&label$11433,
       &&label$11434,
       &&label$11435,
       &&label$11436,
       &&label$11437,
       &&label$11438,
       &&label$11439,
       &&label$11440,
       &&label$11441,
       &&label$11442,
       &&label$11443,
       &&label$11444,
       &&label$11445,
       &&label$11446,
       &&label$11447,
       &&label$11448,
       &&label$11449,
       &&label$11450,
       &&label$11451,
       &&label$11452,
       &&label$11453,
       &&label$11454,
       &&label$11455,
       &&label$11456,
       &&label$11457,
       &&label$11458,
       &&label$11459,
       &&label$11460,
       &&label$11461,
       &&label$11462,
       &&label$11463,
       &&label$11464,
       &&label$11465,
       &&label$11466,
       &&label$11467,
       &&label$11468,
       &&label$11469,
       &&label$11470,
       &&label$11471,
       &&label$11472,
       &&label$11473,
       &&label$11474,
       &&label$11475,
       &&label$11476,
       &&label$11477,
       &&label$11478,
       &&label$11479,
       &&label$11480,
       &&label$11481,
       &&label$11482,
       &&label$11483,
       &&label$11484,
       &&label$11485,
       &&label$11486,
       &&label$11487,
       &&label$11488,
       &&label$11489,
       &&label$11490,
       &&label$11491,
       &&label$11492,
       &&label$11493,
       &&label$11388,
       &&label$11494,
       &&label$11495,
       &&label$11496,
       &&label$11497,
       &&label$11498,
       &&label$11499,
       &&label$11500,
       &&label$11501,
       &&label$11502,
       &&label$11503,
       &&label$11504,
       &&label$11505,
       &&label$11506,
       &&label$11507,
       &&label$11508,
       &&label$11509,
       &&label$11510,
       &&label$11511,
       &&label$11512,
       &&label$11513,
       &&label$11388,
       &&label$11388,
       &&label$11514,
       &&label$11515,
       &&label$11516,
       &&label$11517,
       &&label$11518,
       &&label$11519,
       &&label$11520,
       &&label$11521,
       &&label$11522,
       &&label$11523,
       &&label$11524,
       &&label$11525,
       &&label$11526,
       &&label$11527,
       &&label$11528,
       &&label$11529,
       &&label$11530,
       &&label$11531,
       &&label$11532,
       &&label$11533,
       &&label$11534,
       &&label$11535,
       &&label$11536,
       &&label$11537,
       &&label$11538,
       &&label$11539,
       &&label$11540,
       &&label$11541,
       &&label$11542,
       &&label$11543,
       &&label$11544,
       &&label$11545,
       &&label$11546,
       &&label$11547,
       &&label$11548,
       &&label$11549,
       &&label$11550,
       &&label$11551,
       &&label$11552,
       &&label$11553,
       &&label$11554,
       &&label$11555,
       &&label$11556,
       &&label$11557,
       &&label$11558,
       &&label$11559,
       &&label$11560,
       &&label$11561,
       &&label$11562,
       &&label$11563,
       &&label$11564,
       &&label$11565,
       &&label$11566,
       &&label$11567,
       &&label$11568,
       &&label$11569,
       &&label$11570,
       &&label$11571,
       &&label$11572,
       &&label$11573,
       &&label$11574,
       &&label$11575,
       &&label$11576,
       &&label$11577,
       &&label$11578,
       &&label$11579,
       &&label$11580,
       &&label$11581,
       &&label$11582,
       &&label$11583,
       &&label$11584,
       &&label$11585,
       &&label$11586,
       &&label$11587,
       &&label$11588,
       &&label$11589,
       &&label$11590,
       &&label$11591,
       &&label$11592,
       &&label$11593,
       &&label$11594,
       &&label$11595,
       &&label$11596,
       &&label$11597,
       &&label$11598,
       &&label$11599,
       &&label$11600,
       &&label$11601,
       &&label$11602,
       &&label$11603,
       &&label$11604,
       &&label$11605,
       &&label$11606,
       &&label$11607,
       &&label$11608,
       &&label$11609,
       &&label$11610,
       &&label$11611,
       &&label$11612,
       &&label$11613,
       &&label$11614,
       &&label$11615,
       &&label$11616,
       &&label$11617,
       &&label$11618,
       &&label$11619,
       &&label$11620,
       &&label$11621,
       &&label$11622,
       &&label$11623,
       &&label$11624,
       &&label$11625,
       &&label$11626,
       &&label$11627,
       &&label$11628,
       &&label$11629,
       &&label$11630,
       &&label$11631,
       &&label$11632,
       &&label$11633,
       &&label$11634,
       &&label$11635,
       &&label$11636,
       &&label$11637,
       &&label$11638,
       &&label$11639,
       &&label$11640,
      };
      if( TMP$4744$6 > 255ull ) goto label$11388;
      goto *tmp$5399[TMP$4744$6 - 0ull];
      label$11388:;
     }
    }
    goto label$9561;
    label$11641:;
    {
     {
      uint64 TMP$4982$6;
      TMP$4982$6 = ((uint64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394968ll) ));
      goto label$11643;
      label$11644:;
      {
       FBSTRING* vr$8795 = fb_StrAllocTempDescZEx( (uint8*)"imageconvertrow", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$8795, 0 );
      }
      goto label$11642;
      label$11645:;
      {
       FBSTRING* vr$8796 = fb_StrAllocTempDescZEx( (uint8*)"imagecreate", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8796, 0 );
      }
      goto label$11642;
      label$11646:;
      {
       FBSTRING* vr$8797 = fb_StrAllocTempDescZEx( (uint8*)"imagedestroy", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8797, 0 );
      }
      goto label$11642;
      label$11647:;
      {
       FBSTRING* vr$8798 = fb_StrAllocTempDescZEx( (uint8*)"imageinfo", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8798, 0 );
      }
      goto label$11642;
      label$11648:;
      {
       FBSTRING* vr$8799 = fb_StrAllocTempDescZEx( (uint8*)"instrrev", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8799, 0 );
      }
      goto label$11642;
      label$11649:;
      {
       FBSTRING* vr$8800 = fb_StrAllocTempDescZEx( (uint8*)"isdate", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8800, 0 );
      }
      goto label$11642;
      label$11650:;
      {
       FBSTRING* vr$8801 = fb_StrAllocTempDescZEx( (uint8*)"isredirected", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8801, 0 );
      }
      goto label$11642;
      label$11651:;
      {
       FBSTRING* vr$8802 = fb_StrAllocTempDescZEx( (uint8*)"lbound", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8802, 0 );
      }
      goto label$11642;
      label$11652:;
      {
       FBSTRING* vr$8803 = fb_StrAllocTempDescZEx( (uint8*)"lcase", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8803, 0 );
      }
      goto label$11642;
      label$11653:;
      {
       FBSTRING* vr$8804 = fb_StrAllocTempDescZEx( (uint8*)"lib", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8804, 0 );
      }
      goto label$11642;
      label$11654:;
      {
       FBSTRING* vr$8805 = fb_StrAllocTempDescZEx( (uint8*)"lobyte", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8805, 0 );
      }
      goto label$11642;
      label$11655:;
      {
       FBSTRING* vr$8806 = fb_StrAllocTempDescZEx( (uint8*)"loword", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8806, 0 );
      }
      goto label$11642;
      label$11656:;
      {
       FBSTRING* vr$8807 = fb_StrAllocTempDescZEx( (uint8*)"ltrim", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8807, 0 );
      }
      goto label$11642;
      label$11657:;
      {
       FBSTRING* vr$8808 = fb_StrAllocTempDescZEx( (uint8*)"mkl", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8808, 0 );
      }
      goto label$11642;
      label$11658:;
      {
       FBSTRING* vr$8809 = fb_StrAllocTempDescZEx( (uint8*)"mklongint", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8809, 0 );
      }
      goto label$11642;
      label$11659:;
      {
       FBSTRING* vr$8810 = fb_StrAllocTempDescZEx( (uint8*)"mkshort", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8810, 0 );
      }
      goto label$11642;
      label$11660:;
      {
       FBSTRING* vr$8811 = fb_StrAllocTempDescZEx( (uint8*)"monthname", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8811, 1 );
      }
      goto label$11642;
      label$11661:;
      {
       FBSTRING* vr$8812 = fb_StrAllocTempDescZEx( (uint8*)"multikey", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8812, 0 );
      }
      goto label$11642;
      label$11662:;
      {
       FBSTRING* vr$8813 = fb_StrAllocTempDescZEx( (uint8*)"mutexcreate", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8813, 0 );
      }
      goto label$11642;
      label$11663:;
      {
       FBSTRING* vr$8814 = fb_StrAllocTempDescZEx( (uint8*)"mutexdestroy", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8814, 0 );
      }
      goto label$11642;
      label$11664:;
      {
       FBSTRING* vr$8815 = fb_StrAllocTempDescZEx( (uint8*)"mutexlock", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8815, 0 );
      }
      goto label$11642;
      label$11665:;
      {
       FBSTRING* vr$8816 = fb_StrAllocTempDescZEx( (uint8*)"mutexunlock", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8816, 0 );
      }
      goto label$11642;
      label$11666:;
      {
       FBSTRING* vr$8817 = fb_StrAllocTempDescZEx( (uint8*)"naked", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8817, 0 );
      }
      goto label$11642;
      label$11667:;
      {
       FBSTRING* vr$8818 = fb_StrAllocTempDescZEx( (uint8*)"now", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8818, 1 );
      }
      goto label$11642;
      label$11668:;
      {
       FBSTRING* vr$8819 = fb_StrAllocTempDescZEx( (uint8*)"offsetof", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8819, 0 );
      }
      goto label$11642;
      label$11669:;
      {
       FBSTRING* vr$8820 = fb_StrAllocTempDescZEx( (uint8*)"orelse", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8820, 0 );
      }
      goto label$11642;
      label$11670:;
      {
       FBSTRING* vr$8821 = fb_StrAllocTempDescZEx( (uint8*)"overload", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8821, 0 );
      }
      goto label$11642;
      label$11671:;
      {
       FBSTRING* vr$8822 = fb_StrAllocTempDescZEx( (uint8*)"pointcoord", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8822, 0 );
      }
      goto label$11642;
      label$11672:;
      {
       FBSTRING* vr$8823 = fb_StrAllocTempDescZEx( (uint8*)"ptr", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8823, 0 );
      }
      goto label$11642;
      label$11673:;
      {
       FBSTRING* vr$8824 = fb_StrAllocTempDescZEx( (uint8*)"preserve", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8824, 0 );
      }
      goto label$11642;
      label$11674:;
      {
       FBSTRING* vr$8825 = fb_StrAllocTempDescZEx( (uint8*)"procptr", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8825, 0 );
      }
      goto label$11642;
      label$11675:;
      {
       FBSTRING* vr$8826 = fb_StrAllocTempDescZEx( (uint8*)"redim", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8826, 0 );
      }
      goto label$11642;
      label$11676:;
      {
       FBSTRING* vr$8827 = fb_StrAllocTempDescZEx( (uint8*)"rgba", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8827, 0 );
      }
      goto label$11642;
      label$11677:;
      {
       FBSTRING* vr$8828 = fb_StrAllocTempDescZEx( (uint8*)"rtrim", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8828, 0 );
      }
      goto label$11642;
      label$11678:;
      {
       FBSTRING* vr$8829 = fb_StrAllocTempDescZEx( (uint8*)"sadd", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8829, 0 );
      }
      goto label$11642;
      label$11679:;
      {
       FBSTRING* vr$8830 = fb_StrAllocTempDescZEx( (uint8*)"scope", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8830, 0 );
      }
      goto label$11642;
      label$11680:;
      {
       FBSTRING* vr$8831 = fb_StrAllocTempDescZEx( (uint8*)"screencopy", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8831, 0 );
      }
      goto label$11642;
      label$11681:;
      {
       FBSTRING* vr$8832 = fb_StrAllocTempDescZEx( (uint8*)"screencontrol", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8832, 0 );
      }
      goto label$11642;
      label$11682:;
      {
       FBSTRING* vr$8833 = fb_StrAllocTempDescZEx( (uint8*)"screenevent", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8833, 0 );
      }
      goto label$11642;
      label$11683:;
      {
       FBSTRING* vr$8834 = fb_StrAllocTempDescZEx( (uint8*)"screenglproc", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8834, 0 );
      }
      goto label$11642;
      label$11684:;
      {
       FBSTRING* vr$8835 = fb_StrAllocTempDescZEx( (uint8*)"screeninfo", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8835, 0 );
      }
      goto label$11642;
      label$11685:;
      {
       FBSTRING* vr$8836 = fb_StrAllocTempDescZEx( (uint8*)"screenlist", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8836, 0 );
      }
      goto label$11642;
      label$11686:;
      {
       FBSTRING* vr$8837 = fb_StrAllocTempDescZEx( (uint8*)"screenlock", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8837, 0 );
      }
      goto label$11642;
      label$11687:;
      {
       FBSTRING* vr$8838 = fb_StrAllocTempDescZEx( (uint8*)"screenptr", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8838, 0 );
      }
      goto label$11642;
      label$11688:;
      {
       FBSTRING* vr$8839 = fb_StrAllocTempDescZEx( (uint8*)"screenres", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8839, 0 );
      }
      goto label$11642;
      label$11689:;
      {
       FBSTRING* vr$8840 = fb_StrAllocTempDescZEx( (uint8*)"screenset", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8840, 0 );
      }
      goto label$11642;
      label$11690:;
      {
       FBSTRING* vr$8841 = fb_StrAllocTempDescZEx( (uint8*)"screensync", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8841, 0 );
      }
      goto label$11642;
      label$11691:;
      {
       FBSTRING* vr$8842 = fb_StrAllocTempDescZEx( (uint8*)"screenunlock", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8842, 0 );
      }
      goto label$11642;
      label$11692:;
      {
       FBSTRING* vr$8843 = fb_StrAllocTempDescZEx( (uint8*)"setdate", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8843, 0 );
      }
      goto label$11642;
      label$11693:;
      {
       FBSTRING* vr$8844 = fb_StrAllocTempDescZEx( (uint8*)"setenviron", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8844, 0 );
      }
      goto label$11642;
      label$11694:;
      {
       FBSTRING* vr$8845 = fb_StrAllocTempDescZEx( (uint8*)"setmouse", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8845, 0 );
      }
      goto label$11642;
      label$11695:;
      {
       FBSTRING* vr$8846 = fb_StrAllocTempDescZEx( (uint8*)"settime", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8846, 0 );
      }
      goto label$11642;
      label$11696:;
      {
       FBSTRING* vr$8847 = fb_StrAllocTempDescZEx( (uint8*)"sub", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8847, 0 );
      }
      goto label$11642;
      label$11697:;
      {
       FBSTRING* vr$8848 = fb_StrAllocTempDescZEx( (uint8*)"threadcall", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8848, 0 );
      }
      goto label$11642;
      label$11698:;
      {
       FBSTRING* vr$8849 = fb_StrAllocTempDescZEx( (uint8*)"threadcreate", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8849, 0 );
      }
      goto label$11642;
      label$11699:;
      {
       FBSTRING* vr$8850 = fb_StrAllocTempDescZEx( (uint8*)"threaddetach", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8850, 0 );
      }
      goto label$11642;
      label$11700:;
      {
       FBSTRING* vr$8851 = fb_StrAllocTempDescZEx( (uint8*)"threadwait", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8851, 0 );
      }
      goto label$11642;
      label$11701:;
      {
       FBSTRING* vr$8852 = fb_StrAllocTempDescZEx( (uint8*)"trans", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8852, 0 );
      }
      goto label$11642;
      label$11702:;
      {
       FBSTRING* vr$8853 = fb_StrAllocTempDescZEx( (uint8*)"ubound", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8853, 0 );
      }
      goto label$11642;
      label$11703:;
      {
       FBSTRING* vr$8854 = fb_StrAllocTempDescZEx( (uint8*)"ubyte", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8854, 0 );
      }
      goto label$11642;
      label$11704:;
      {
       FBSTRING* vr$8855 = fb_StrAllocTempDescZEx( (uint8*)"ucase", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8855, 0 );
      }
      goto label$11642;
      label$11705:;
      {
       FBSTRING* vr$8856 = fb_StrAllocTempDescZEx( (uint8*)"uinteger", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8856, 0 );
      }
      goto label$11642;
      label$11706:;
      {
       FBSTRING* vr$8857 = fb_StrAllocTempDescZEx( (uint8*)"ulongint", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8857, 0 );
      }
      goto label$11642;
      label$11707:;
      {
       FBSTRING* vr$8858 = fb_StrAllocTempDescZEx( (uint8*)"va_arg", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8858, 0 );
      }
      goto label$11642;
      label$11708:;
      {
       FBSTRING* vr$8859 = fb_StrAllocTempDescZEx( (uint8*)"va_first", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8859, 0 );
      }
      goto label$11642;
      label$11709:;
      {
       FBSTRING* vr$8860 = fb_StrAllocTempDescZEx( (uint8*)"va_next", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8860, 0 );
      }
      goto label$11642;
      label$11710:;
      {
       FBSTRING* vr$8861 = fb_StrAllocTempDescZEx( (uint8*)"vallng", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8861, 0 );
      }
      goto label$11642;
      label$11711:;
      {
       FBSTRING* vr$8862 = fb_StrAllocTempDescZEx( (uint8*)"valint", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8862, 0 );
      }
      goto label$11642;
      label$11712:;
      {
       FBSTRING* vr$8863 = fb_StrAllocTempDescZEx( (uint8*)"view", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8863, 0 );
      }
      goto label$11642;
      label$11713:;
      {
       FBSTRING* vr$8864 = fb_StrAllocTempDescZEx( (uint8*)"wbin", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8864, 0 );
      }
      goto label$11642;
      label$11714:;
      {
       FBSTRING* vr$8865 = fb_StrAllocTempDescZEx( (uint8*)"wchr", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8865, 0 );
      }
      goto label$11642;
      label$11715:;
      {
       FBSTRING* vr$8866 = fb_StrAllocTempDescZEx( (uint8*)"weekday", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8866, 0 );
      }
      goto label$11642;
      label$11716:;
      {
       FBSTRING* vr$8867 = fb_StrAllocTempDescZEx( (uint8*)"weekdayname", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8867, 0 );
      }
      goto label$11642;
      label$11717:;
      {
       FBSTRING* vr$8868 = fb_StrAllocTempDescZEx( (uint8*)"whex", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8868, 0 );
      }
      goto label$11642;
      label$11718:;
      {
       FBSTRING* vr$8869 = fb_StrAllocTempDescZEx( (uint8*)"windowtitle", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8869, 0 );
      }
      goto label$11642;
      label$11719:;
      {
       FBSTRING* vr$8870 = fb_StrAllocTempDescZEx( (uint8*)"winput", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8870, 0 );
      }
      goto label$11642;
      label$11720:;
      {
       FBSTRING* vr$8871 = fb_StrAllocTempDescZEx( (uint8*)"woct", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8871, 0 );
      }
      goto label$11642;
      label$11721:;
      {
       FBSTRING* vr$8872 = fb_StrAllocTempDescZEx( (uint8*)"wspace", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8872, 0 );
      }
      goto label$11642;
      label$11722:;
      {
       FBSTRING* vr$8873 = fb_StrAllocTempDescZEx( (uint8*)"wstr", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8873, 0 );
      }
      goto label$11642;
      label$11723:;
      {
       FBSTRING* vr$8874 = fb_StrAllocTempDescZEx( (uint8*)"wstring", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8874, 0 );
      }
      goto label$11642;
      label$11724:;
      {
       FBSTRING* vr$8875 = fb_StrAllocTempDescZEx( (uint8*)"zstring", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8875, 0 );
      }
      goto label$11642;
      label$11725:;
      {
       FBSTRING* vr$8876 = fb_StrAllocTempDescZEx( (uint8*)"ert", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8876, 0 );
      }
      goto label$11642;
      label$11726:;
      {
       FBSTRING* vr$8877 = fb_StrAllocTempDescZEx( (uint8*)"endifle", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8877, 0 );
      }
      goto label$11642;
      label$11727:;
      {
       FBSTRING* vr$8878 = fb_StrAllocTempDescZEx( (uint8*)"fnend", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8878, 0 );
      }
      goto label$11642;
      label$11728:;
      {
       FBSTRING* vr$8879 = fb_StrAllocTempDescZEx( (uint8*)"fnexit", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8879, 0 );
      }
      goto label$11642;
      label$11729:;
      {
       FBSTRING* vr$8880 = fb_StrAllocTempDescZEx( (uint8*)"free", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8880, 0 );
      }
      goto label$11642;
      label$11730:;
      {
       FBSTRING* vr$8881 = fb_StrAllocTempDescZEx( (uint8*)"fsp", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8881, 0 );
      }
      goto label$11642;
      label$11731:;
      {
       FBSTRING* vr$8882 = fb_StrAllocTempDescZEx( (uint8*)"functionend", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8882, 0 );
      }
      goto label$11642;
      label$11732:;
      {
       FBSTRING* vr$8883 = fb_StrAllocTempDescZEx( (uint8*)"functionexit", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8883, 0 );
      }
      goto label$11642;
      label$11733:;
      {
       FBSTRING* vr$8884 = fb_StrAllocTempDescZEx( (uint8*)"getrfa", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8884, 0 );
      }
      goto label$11642;
      label$11734:;
      {
       FBSTRING* vr$8885 = fb_StrAllocTempDescZEx( (uint8*)"handler", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8885, 0 );
      }
      goto label$11642;
      label$11735:;
      {
       FBSTRING* vr$8886 = fb_StrAllocTempDescZEx( (uint8*)"linput", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8886, 0 );
      }
      goto label$11642;
      label$11736:;
      {
       FBSTRING* vr$8887 = fb_StrAllocTempDescZEx( (uint8*)"mag", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8887, 0 );
      }
      goto label$11642;
      label$11737:;
      {
       FBSTRING* vr$8888 = fb_StrAllocTempDescZEx( (uint8*)"magtape", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8888, 0 );
      }
      goto label$11642;
      label$11738:;
      {
       FBSTRING* vr$8889 = fb_StrAllocTempDescZEx( (uint8*)"mar", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8889, 0 );
      }
      goto label$11642;
      label$11739:;
      {
       FBSTRING* vr$8890 = fb_StrAllocTempDescZEx( (uint8*)"margin", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8890, 0 );
      }
      goto label$11642;
      label$11740:;
      {
       FBSTRING* vr$8891 = fb_StrAllocTempDescZEx( (uint8*)"mat", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8891, 0 );
      }
      goto label$11642;
      label$11741:;
      {
       FBSTRING* vr$8892 = fb_StrAllocTempDescZEx( (uint8*)"noecho", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8892, 0 );
      }
      goto label$11642;
      label$11742:;
      {
       FBSTRING* vr$8893 = fb_StrAllocTempDescZEx( (uint8*)"nomargin", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8893, 0 );
      }
      goto label$11642;
      label$11743:;
      {
       FBSTRING* vr$8894 = fb_StrAllocTempDescZEx( (uint8*)"num", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8894, 0 );
      }
      goto label$11642;
      label$11744:;
      {
       FBSTRING* vr$8895 = fb_StrAllocTempDescZEx( (uint8*)"num2", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8895, 0 );
      }
      goto label$11642;
      label$11745:;
      {
       FBSTRING* vr$8896 = fb_StrAllocTempDescZEx( (uint8*)"num1", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8896, 0 );
      }
      goto label$11642;
      label$11746:;
      {
       FBSTRING* vr$8897 = fb_StrAllocTempDescZEx( (uint8*)"place", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8897, 0 );
      }
      goto label$11642;
      label$11747:;
      {
       FBSTRING* vr$8898 = fb_StrAllocTempDescZEx( (uint8*)"quo", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8898, 0 );
      }
      goto label$11642;
      label$11748:;
      {
       FBSTRING* vr$8899 = fb_StrAllocTempDescZEx( (uint8*)"rad", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8899, 0 );
      }
      goto label$11642;
      label$11749:;
      {
       FBSTRING* vr$8900 = fb_StrAllocTempDescZEx( (uint8*)"rctrlc", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8900, 0 );
      }
      goto label$11642;
      label$11750:;
      {
       FBSTRING* vr$8901 = fb_StrAllocTempDescZEx( (uint8*)"rctrl0", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8901, 0 );
      }
      goto label$11642;
      label$11751:;
      {
       FBSTRING* vr$8902 = fb_StrAllocTempDescZEx( (uint8*)"recount", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8902, 0 );
      }
      goto label$11642;
      label$11752:;
      {
       FBSTRING* vr$8903 = fb_StrAllocTempDescZEx( (uint8*)"remap", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8903, 0 );
      }
      goto label$11642;
      label$11753:;
      {
       FBSTRING* vr$8904 = fb_StrAllocTempDescZEx( (uint8*)"retry", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8904, 0 );
      }
      goto label$11642;
      label$11754:;
      {
       FBSTRING* vr$8905 = fb_StrAllocTempDescZEx( (uint8*)"rmsstatus", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8905, 0 );
      }
      goto label$11642;
      label$11755:;
      {
       FBSTRING* vr$8906 = fb_StrAllocTempDescZEx( (uint8*)"prompt", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8906, 0 );
      }
      goto label$11642;
      label$11756:;
      {
       FBSTRING* vr$8907 = fb_StrAllocTempDescZEx( (uint8*)"subend", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8907, 0 );
      }
      goto label$11642;
      label$11757:;
      {
       FBSTRING* vr$8908 = fb_StrAllocTempDescZEx( (uint8*)"exitsub", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8908, 0 );
      }
      goto label$11642;
      label$11758:;
      {
       FBSTRING* vr$8909 = fb_StrAllocTempDescZEx( (uint8*)"trm", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8909, 0 );
      }
      goto label$11642;
      label$11759:;
      {
       FBSTRING* vr$8910 = fb_StrAllocTempDescZEx( (uint8*)"unless", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8910, 0 );
      }
      goto label$11642;
      label$11760:;
      {
       FBSTRING* vr$8911 = fb_StrAllocTempDescZEx( (uint8*)"vmsstatus", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8911, 0 );
      }
      goto label$11642;
      label$11761:;
      {
       FBSTRING* vr$8912 = fb_StrAllocTempDescZEx( (uint8*)"xlate", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8912, 0 );
      }
      goto label$11642;
      label$11762:;
      {
       FBSTRING* vr$8913 = fb_StrAllocTempDescZEx( (uint8*)"allocated", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8913, 0 );
      }
      goto label$11642;
      label$11763:;
      {
       FBSTRING* vr$8914 = fb_StrAllocTempDescZEx( (uint8*)"anint", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8914, 0 );
      }
      goto label$11642;
      label$11764:;
      {
       FBSTRING* vr$8915 = fb_StrAllocTempDescZEx( (uint8*)"asind", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8915, 0 );
      }
      goto label$11642;
      label$11765:;
      {
       FBSTRING* vr$8916 = fb_StrAllocTempDescZEx( (uint8*)"associated", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8916, 0 );
      }
      goto label$11642;
      label$11766:;
      {
       FBSTRING* vr$8917 = fb_StrAllocTempDescZEx( (uint8*)"atand", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8917, 0 );
      }
      goto label$11642;
      label$11767:;
      {
       FBSTRING* vr$8918 = fb_StrAllocTempDescZEx( (uint8*)"atan2d", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8918, 0 );
      }
      goto label$11642;
      label$11768:;
      {
       FBSTRING* vr$8919 = fb_StrAllocTempDescZEx( (uint8*)"atomic_add", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8919, 0 );
      }
      goto label$11642;
      label$11769:;
      {
       FBSTRING* vr$8920 = fb_StrAllocTempDescZEx( (uint8*)"atomic_and", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8920, 0 );
      }
      goto label$11642;
      label$11770:;
      {
       FBSTRING* vr$8921 = fb_StrAllocTempDescZEx( (uint8*)"atomic_cas", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8921, 0 );
      }
      goto label$11642;
      label$11771:;
      {
       FBSTRING* vr$8922 = fb_StrAllocTempDescZEx( (uint8*)"atomic_define", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8922, 0 );
      }
      goto label$11642;
      label$11772:;
      {
       FBSTRING* vr$8923 = fb_StrAllocTempDescZEx( (uint8*)"atomic_fetch_add", 16ll );
       fb_PrintString( 1, (FBSTRING*)vr$8923, 0 );
      }
      goto label$11642;
      label$11773:;
      {
       FBSTRING* vr$8924 = fb_StrAllocTempDescZEx( (uint8*)"atomic_fetch and", 16ll );
       fb_PrintString( 1, (FBSTRING*)vr$8924, 0 );
      }
      goto label$11642;
      label$11774:;
      {
       FBSTRING* vr$8925 = fb_StrAllocTempDescZEx( (uint8*)"atomic_fetch_or", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$8925, 0 );
      }
      goto label$11642;
      label$11775:;
      {
       FBSTRING* vr$8926 = fb_StrAllocTempDescZEx( (uint8*)"atomic_fetch_xor", 16ll );
       fb_PrintString( 1, (FBSTRING*)vr$8926, 0 );
      }
      goto label$11642;
      label$11776:;
      {
       FBSTRING* vr$8927 = fb_StrAllocTempDescZEx( (uint8*)"atomic_or", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8927, 0 );
      }
      goto label$11642;
      label$11777:;
      {
       FBSTRING* vr$8928 = fb_StrAllocTempDescZEx( (uint8*)"atomic_ref", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8928, 0 );
      }
      goto label$11642;
      label$11778:;
      {
       FBSTRING* vr$8929 = fb_StrAllocTempDescZEx( (uint8*)"atomic_xor", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8929, 0 );
      }
      goto label$11642;
      label$11779:;
      {
       FBSTRING* vr$8930 = fb_StrAllocTempDescZEx( (uint8*)"backtrace", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8930, 0 );
      }
      goto label$11642;
      label$11780:;
      {
       FBSTRING* vr$8931 = fb_StrAllocTempDescZEx( (uint8*)"bessel_j0", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8931, 0 );
      }
      goto label$11642;
      label$11781:;
      {
       FBSTRING* vr$8932 = fb_StrAllocTempDescZEx( (uint8*)"bessel_j1", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8932, 0 );
      }
      goto label$11642;
      label$11782:;
      {
       FBSTRING* vr$8933 = fb_StrAllocTempDescZEx( (uint8*)"bessel_jn", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8933, 0 );
      }
      goto label$11642;
      label$11783:;
      {
       FBSTRING* vr$8934 = fb_StrAllocTempDescZEx( (uint8*)"bessel_y0", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8934, 0 );
      }
      goto label$11642;
      label$11784:;
      {
       FBSTRING* vr$8935 = fb_StrAllocTempDescZEx( (uint8*)"bassel_y1", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8935, 0 );
      }
      goto label$11642;
      label$11785:;
      {
       FBSTRING* vr$8936 = fb_StrAllocTempDescZEx( (uint8*)"bessel_yn", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8936, 0 );
      }
      goto label$11642;
      label$11786:;
      {
       FBSTRING* vr$8937 = fb_StrAllocTempDescZEx( (uint8*)"bge", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8937, 0 );
      }
      goto label$11642;
      label$11787:;
      {
       FBSTRING* vr$8938 = fb_StrAllocTempDescZEx( (uint8*)"bgt", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8938, 0 );
      }
      goto label$11642;
      label$11788:;
      {
       FBSTRING* vr$8939 = fb_StrAllocTempDescZEx( (uint8*)"bit_size", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8939, 0 );
      }
      goto label$11642;
      label$11789:;
      {
       FBSTRING* vr$8940 = fb_StrAllocTempDescZEx( (uint8*)"ble", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8940, 0 );
      }
      goto label$11642;
      label$11790:;
      {
       FBSTRING* vr$8941 = fb_StrAllocTempDescZEx( (uint8*)"blt", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8941, 0 );
      }
      goto label$11642;
      label$11791:;
      {
       FBSTRING* vr$8942 = fb_StrAllocTempDescZEx( (uint8*)"btest", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8942, 0 );
      }
      goto label$11642;
      label$11792:;
      {
       FBSTRING* vr$8943 = fb_StrAllocTempDescZEx( (uint8*)"c_associated", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8943, 0 );
      }
      goto label$11642;
      label$11793:;
      {
       FBSTRING* vr$8944 = fb_StrAllocTempDescZEx( (uint8*)"c_f_pointer", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8944, 0 );
      }
      goto label$11642;
      label$11643:;
      static const void* tmp$5400[151ll] = {
       &&label$11644,
       &&label$11645,
       &&label$11646,
       &&label$11647,
       &&label$11648,
       &&label$11649,
       &&label$11650,
       &&label$11651,
       &&label$11652,
       &&label$11653,
       &&label$11654,
       &&label$11642,
       &&label$11655,
       &&label$11656,
       &&label$11657,
       &&label$11658,
       &&label$11659,
       &&label$11660,
       &&label$11661,
       &&label$11662,
       &&label$11663,
       &&label$11664,
       &&label$11665,
       &&label$11666,
       &&label$11667,
       &&label$11668,
       &&label$11669,
       &&label$11670,
       &&label$11671,
       &&label$11672,
       &&label$11673,
       &&label$11674,
       &&label$11675,
       &&label$11676,
       &&label$11677,
       &&label$11678,
       &&label$11679,
       &&label$11680,
       &&label$11681,
       &&label$11682,
       &&label$11683,
       &&label$11684,
       &&label$11685,
       &&label$11686,
       &&label$11687,
       &&label$11688,
       &&label$11689,
       &&label$11690,
       &&label$11691,
       &&label$11692,
       &&label$11693,
       &&label$11694,
       &&label$11695,
       &&label$11696,
       &&label$11697,
       &&label$11698,
       &&label$11699,
       &&label$11700,
       &&label$11701,
       &&label$11702,
       &&label$11703,
       &&label$11704,
       &&label$11705,
       &&label$11706,
       &&label$11707,
       &&label$11708,
       &&label$11709,
       &&label$11710,
       &&label$11711,
       &&label$11712,
       &&label$11713,
       &&label$11714,
       &&label$11715,
       &&label$11716,
       &&label$11717,
       &&label$11718,
       &&label$11719,
       &&label$11720,
       &&label$11721,
       &&label$11722,
       &&label$11723,
       &&label$11724,
       &&label$11725,
       &&label$11726,
       &&label$11727,
       &&label$11728,
       &&label$11729,
       &&label$11730,
       &&label$11731,
       &&label$11732,
       &&label$11733,
       &&label$11734,
       &&label$11735,
       &&label$11736,
       &&label$11737,
       &&label$11738,
       &&label$11739,
       &&label$11740,
       &&label$11741,
       &&label$11742,
       &&label$11743,
       &&label$11744,
       &&label$11745,
       &&label$11746,
       &&label$11747,
       &&label$11748,
       &&label$11749,
       &&label$11750,
       &&label$11751,
       &&label$11752,
       &&label$11753,
       &&label$11754,
       &&label$11755,
       &&label$11756,
       &&label$11757,
       &&label$11758,
       &&label$11759,
       &&label$11760,
       &&label$11761,
       &&label$11762,
       &&label$11763,
       &&label$11764,
       &&label$11765,
       &&label$11766,
       &&label$11767,
       &&label$11768,
       &&label$11769,
       &&label$11770,
       &&label$11771,
       &&label$11772,
       &&label$11773,
       &&label$11774,
       &&label$11775,
       &&label$11776,
       &&label$11777,
       &&label$11778,
       &&label$11779,
       &&label$11780,
       &&label$11781,
       &&label$11782,
       &&label$11783,
       &&label$11784,
       &&label$11785,
       &&label$11786,
       &&label$11787,
       &&label$11788,
       &&label$11789,
       &&label$11790,
       &&label$11791,
       &&label$11792,
       &&label$11793,
      };
      if( TMP$4982$6 > 150ull ) goto label$11642;
      goto *tmp$5400[TMP$4982$6 - 0ull];
      label$11642:;
     }
    }
    goto label$9561;
    label$9562:;
    static const void* tmp$5401[23ll] = {
     &&label$9563,
     &&label$9625,
     &&label$9626,
     &&label$9627,
     &&label$9628,
     &&label$9629,
     &&label$9634,
     &&label$9893,
     &&label$9561,
     &&label$10152,
     &&label$10166,
     &&label$10167,
     &&label$10168,
     &&label$10169,
     &&label$10170,
     &&label$10171,
     &&label$10172,
     &&label$10198,
     &&label$10456,
     &&label$10715,
     &&label$11223,
     &&label$11387,
     &&label$11641,
    };
    if( TMP$3210$4 > 22ull ) goto label$9561;
    goto *tmp$5401[TMP$3210$4 - 0ull];
    label$9561:;
   }
  }
  goto label$9484;
  label$9559:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$11794;
  label$11795:;
  {
   {
    if( V$1 != (double)(int64)*(uint8*)NIBBLES$ ) goto label$11797;
    label$11798:;
    {
     uint8 TMP$5135$5;
     uint8 TMP$5137$5;
     uint8 TMP$5139$5;
     uint8 TMP$5141$5;
     uint8 TMP$5143$5;
     uint8 TMP$5145$5;
     uint8 TMP$5147$5;
     uint8 TMP$5149$5;
     uint8 TMP$5151$5;
     uint8 TMP$5153$5;
     uint8 TMP$5155$5;
     uint8 TMP$5157$5;
     uint8 TMP$5159$5;
     uint8 TMP$5161$5;
     uint8 TMP$5163$5;
     uint8 TMP$5165$5;
     uint8 TMP$5167$5;
     uint8 TMP$5169$5;
     uint8 TMP$5171$5;
     uint8 TMP$5173$5;
     uint8 TMP$5175$5;
     uint8 TMP$5177$5;
     uint8 TMP$5179$5;
     uint8 TMP$5181$5;
     uint8 TMP$5183$5;
     uint8 TMP$5185$5;
     uint8 TMP$5187$5;
     uint8 TMP$5189$5;
     uint8 TMP$5191$5;
     uint8 TMP$5193$5;
     uint8 TMP$5195$5;
     uint8 TMP$5197$5;
     uint8 TMP$5199$5;
     uint8 TMP$5201$5;
     uint8 TMP$5203$5;
     uint8 TMP$5205$5;
     uint8 TMP$5207$5;
     uint8 TMP$5209$5;
     uint8 TMP$5211$5;
     uint8 TMP$5213$5;
     uint8 TMP$5215$5;
     uint8 TMP$5217$5;
     uint8 TMP$5226$5;
     uint8 TMP$5228$5;
     uint8 TMP$5230$5;
     fb_GfxScreenRes( 640, 480, 32, 0, 0, 0 );
     fb_Cls( -65536 );
     FBSTRING* vr$8957 = fb_StrAllocTempDescZEx( (uint8*)"blender --version > err.txt", 27ll );
     fb_Shell( (FBSTRING*)vr$8957 );
     FBSTRING* vr$8959 = fb_StrAllocTempDescZEx( (uint8*)"err.txt", 7ll );
     fb_FileOpen( (FBSTRING*)vr$8959, 2u, 0u, 0u, (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll), 0 );
     label$11799:;
     int32 vr$8961 = fb_FileEof( (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
     if( (int64)vr$8961 != 0ll ) goto label$11800;
     {
      fb_FileLineInput( (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll), (void*)&STRCODE$, -1ll, 0 );
      fb_PrintString( 0, (FBSTRING*)&STRCODE$, 1 );
     }
     goto label$11799;
     label$11800:;
     fb_FileClose( (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
     FBSTRING* vr$8966 = fb_StrAllocTempDescZEx( (uint8*)"tmp.py", 6ll );
     fb_FileOpen( (FBSTRING*)vr$8966, 3u, 0u, 0u, (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll), 0 );
     TMP$5135$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$8967 = fb_StrAllocTempDescZEx( (uint8*)"# Start of file", 15ll );
     fb_PrintString( (int32)TMP$5135$5, (FBSTRING*)vr$8967, 1 );
     TMP$5137$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$8969 = fb_StrAllocTempDescZEx( (uint8*)"import bpy,math,mathutils,bmesh,bgl,blf", 39ll );
     fb_PrintString( (int32)TMP$5137$5, (FBSTRING*)vr$8969, 1 );
     TMP$5139$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$8971 = fb_StrAllocTempDescZEx( (uint8*)"from math import radians", 24ll );
     fb_PrintString( (int32)TMP$5139$5, (FBSTRING*)vr$8971, 1 );
     TMP$5141$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$8973 = fb_StrAllocTempDescZEx( (uint8*)"from random import randint", 26ll );
     fb_PrintString( (int32)TMP$5141$5, (FBSTRING*)vr$8973, 1 );
     TMP$5143$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$8975 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.render.engine = 'CYCLES'", 42ll );
     fb_PrintString( (int32)TMP$5143$5, (FBSTRING*)vr$8975, 1 );
     TMP$5145$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$8977 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.render.resolution_x = 640", 43ll );
     fb_PrintString( (int32)TMP$5145$5, (FBSTRING*)vr$8977, 1 );
     TMP$5147$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$8979 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.render.resolution_y = 480", 43ll );
     fb_PrintString( (int32)TMP$5147$5, (FBSTRING*)vr$8979, 1 );
     TMP$5149$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$8981 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.render.resolution_percentage = 100", 52ll );
     fb_PrintString( (int32)TMP$5149$5, (FBSTRING*)vr$8981, 1 );
     TMP$5151$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$8983 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.render.image_settings.file_format = 'BMP'", 59ll );
     fb_PrintString( (int32)TMP$5151$5, (FBSTRING*)vr$8983, 1 );
     TMP$5153$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$8985 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.render.tile_x = 32", 36ll );
     fb_PrintString( (int32)TMP$5153$5, (FBSTRING*)vr$8985, 1 );
     TMP$5155$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$8987 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.render.tile_y = 32", 36ll );
     fb_PrintString( (int32)TMP$5155$5, (FBSTRING*)vr$8987, 1 );
     TMP$5157$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$8989 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.cycles.preview_samples = 1", 44ll );
     fb_PrintString( (int32)TMP$5157$5, (FBSTRING*)vr$8989, 1 );
     TMP$5159$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$8991 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.render.use_persistent_data = True", 51ll );
     fb_PrintString( (int32)TMP$5159$5, (FBSTRING*)vr$8991, 1 );
     TMP$5161$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$8993 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.cycles.use_progressive_refine = True", 54ll );
     fb_PrintString( (int32)TMP$5161$5, (FBSTRING*)vr$8993, 1 );
     TMP$5163$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$8995 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.render.use_save_buffers = True", 48ll );
     fb_PrintString( (int32)TMP$5163$5, (FBSTRING*)vr$8995, 1 );
     TMP$5165$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$8997 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.render.use_border = True", 42ll );
     fb_PrintString( (int32)TMP$5165$5, (FBSTRING*)vr$8997, 1 );
     TMP$5167$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$8999 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.cycles.device = 'CPU'", 39ll );
     fb_PrintString( (int32)TMP$5167$5, (FBSTRING*)vr$8999, 1 );
     TMP$5169$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9001 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.cycles.max_bounces = 3", 40ll );
     fb_PrintString( (int32)TMP$5169$5, (FBSTRING*)vr$9001, 1 );
     TMP$5171$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9003 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.cycles.min_bounces = 0", 40ll );
     fb_PrintString( (int32)TMP$5171$5, (FBSTRING*)vr$9003, 1 );
     TMP$5173$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9005 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.cycles.diffuse_bounces = 3", 44ll );
     fb_PrintString( (int32)TMP$5173$5, (FBSTRING*)vr$9005, 1 );
     TMP$5175$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9007 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.cycles.glossy_bounces = 3", 43ll );
     fb_PrintString( (int32)TMP$5175$5, (FBSTRING*)vr$9007, 1 );
     TMP$5177$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9009 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.cycles.transmission_bounces = 1", 49ll );
     fb_PrintString( (int32)TMP$5177$5, (FBSTRING*)vr$9009, 1 );
     TMP$5179$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9011 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.cycles.transparent_max_bounces = 4", 52ll );
     fb_PrintString( (int32)TMP$5179$5, (FBSTRING*)vr$9011, 1 );
     TMP$5181$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9013 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.cycles.transparent_min_bounces = 0", 52ll );
     fb_PrintString( (int32)TMP$5181$5, (FBSTRING*)vr$9013, 1 );
     TMP$5183$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9015 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.cycles.caustics_reflective = False", 52ll );
     fb_PrintString( (int32)TMP$5183$5, (FBSTRING*)vr$9015, 1 );
     TMP$5185$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9017 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.cycles.caustics_refractive = False", 52ll );
     fb_PrintString( (int32)TMP$5185$5, (FBSTRING*)vr$9017, 1 );
     TMP$5187$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9019 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.cycles.use_square_samples = True", 50ll );
     fb_PrintString( (int32)TMP$5187$5, (FBSTRING*)vr$9019, 1 );
     TMP$5189$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9021 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.cycles.samples = 4", 36ll );
     fb_PrintString( (int32)TMP$5189$5, (FBSTRING*)vr$9021, 1 );
     TMP$5191$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9023 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.cycles.debug_use_spatial_splits = True", 56ll );
     fb_PrintString( (int32)TMP$5191$5, (FBSTRING*)vr$9023, 1 );
     TMP$5193$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9025 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.world.cycles.max_bounces = 1", 46ll );
     fb_PrintString( (int32)TMP$5193$5, (FBSTRING*)vr$9025, 1 );
     TMP$5195$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9027 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.cycles.volume_bounces = 0", 43ll );
     fb_PrintString( (int32)TMP$5195$5, (FBSTRING*)vr$9027, 1 );
     TMP$5197$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9029 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.object.data.cycles.is_portal = True", 47ll );
     fb_PrintString( (int32)TMP$5197$5, (FBSTRING*)vr$9029, 1 );
     TMP$5199$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9031 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.cycles.debug_use_hair_bvh = False", 51ll );
     fb_PrintString( (int32)TMP$5199$5, (FBSTRING*)vr$9031, 1 );
     TMP$5201$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9033 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.cycles.shading_system = True", 46ll );
     fb_PrintString( (int32)TMP$5201$5, (FBSTRING*)vr$9033, 1 );
     TMP$5203$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9035 = fb_StrAllocTempDescZEx( (uint8*)"bpy.data.objects['Light'].select_set(True)", 42ll );
     fb_PrintString( (int32)TMP$5203$5, (FBSTRING*)vr$9035, 1 );
     TMP$5205$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9037 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.view_layer.objects.active = bpy.data.objects['Light']", 65ll );
     fb_PrintString( (int32)TMP$5205$5, (FBSTRING*)vr$9037, 1 );
     TMP$5207$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9039 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.object.data.type = 'SUN'", 36ll );
     fb_PrintString( (int32)TMP$5207$5, (FBSTRING*)vr$9039, 1 );
     TMP$5209$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9041 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.object.data.energy = 1", 34ll );
     fb_PrintString( (int32)TMP$5209$5, (FBSTRING*)vr$9041, 1 );
     TMP$5211$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9043 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.object.data.use_shadow = True", 41ll );
     fb_PrintString( (int32)TMP$5211$5, (FBSTRING*)vr$9043, 1 );
     TMP$5213$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9045 = fb_StrAllocTempDescZEx( (uint8*)"bpy.data.objects['Cube'].select_set(True)", 41ll );
     fb_PrintString( (int32)TMP$5213$5, (FBSTRING*)vr$9045, 1 );
     TMP$5215$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9047 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.view_layer.objects.active = bpy.data.objects['Cube']", 64ll );
     fb_PrintString( (int32)TMP$5215$5, (FBSTRING*)vr$9047, 1 );
     TMP$5217$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9049 = fb_StrAllocTempDescZEx( (uint8*)"scene = bpy.data.scenes[\x22Scene\x22]", 32ll );
     fb_PrintString( (int32)TMP$5217$5, (FBSTRING*)vr$9049, 1 );
     label$11801:;
     {
      FBSTRING* vr$9051 = fb_StrAllocTempDescZEx( (uint8*)"BLENDER:\x5C> ", 11ll );
      fb_LineInput( (FBSTRING*)vr$9051, (void*)&STRCODE$, -1ll, 0, 0, -1 );
      int32 vr$9052 = fb_StrCompare( (void*)&STRCODE$, -1ll, (void*)"", 1ll );
      if( (int64)vr$9052 == 0ll ) goto label$11805;
      {
       uint8 TMP$5225$7;
       TMP$5225$7 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
       fb_PrintString( (int32)TMP$5225$7, (FBSTRING*)&STRCODE$, 1 );
      }
      goto label$11804;
      label$11805:;
      {
       goto label$11802;
       label$11804:;
      }
     }
     label$11803:;
     goto label$11801;
     label$11802:;
     TMP$5226$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9055 = fb_StrAllocTempDescZEx( (uint8*)"bpy.data.scenes['Scene'].render.filepath = './tmp'", 50ll );
     fb_PrintString( (int32)TMP$5226$5, (FBSTRING*)vr$9055, 1 );
     TMP$5228$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9057 = fb_StrAllocTempDescZEx( (uint8*)"bpy.ops.render.render(use_viewport = True, write_still=True)", 60ll );
     fb_PrintString( (int32)TMP$5228$5, (FBSTRING*)vr$9057, 1 );
     TMP$5230$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$9059 = fb_StrAllocTempDescZEx( (uint8*)"# End of file", 13ll );
     fb_PrintString( (int32)TMP$5230$5, (FBSTRING*)vr$9059, 1 );
     fb_FileClose( (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
     fb_Cls( -65536 );
     FBSTRING* vr$9062 = fb_StrAllocTempDescZEx( (uint8*)"blender -b -P tmp.py", 20ll );
     fb_Shell( (FBSTRING*)vr$9062 );
     FBSTRING* vr$9063 = fb_StrAllocTempDescZEx( (uint8*)"tmp.bmp", 7ll );
     fb_GfxBload( (FBSTRING*)vr$9063, (void*)0ull, (void*)0ull );
     FBSTRING* vr$9064 = fb_StrAllocTempDescZEx( (uint8*)"rm tmp.py tmp.bmp", 17ll );
     fb_Shell( (FBSTRING*)vr$9064 );
     fb_Locate( 60, 1, -1, 0, 0 );
     FBSTRING* vr$9065 = fb_StrAllocTempDescZEx( (uint8*)"Press any key to continue.", 26ll );
     fb_PrintString( 0, (FBSTRING*)vr$9065, 1 );
     fb_Sleep( -1 );
     fb_GfxScreenRes( 1920, 1080, 32, 0, 0, 0 );
     fb_Cls( -65536 );
    }
    goto label$11796;
    label$11797:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$11806;
    label$11807:;
    {
     fb_GfxScreenRes( 640, 480, 32, 0, 0, 0 );
     fb_Cls( -65536 );
     FBSTRING* vr$9068 = fb_StrAllocTempDescZEx( (uint8*)"cobc -V > err.txt", 17ll );
     fb_Shell( (FBSTRING*)vr$9068 );
     FBSTRING* vr$9070 = fb_StrAllocTempDescZEx( (uint8*)"err.txt", 7ll );
     fb_FileOpen( (FBSTRING*)vr$9070, 2u, 0u, 0u, (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll), 0 );
     label$11808:;
     int32 vr$9072 = fb_FileEof( (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
     if( (int64)vr$9072 != 0ll ) goto label$11809;
     {
      fb_FileLineInput( (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll), (void*)&STRCODE$, -1ll, 0 );
      fb_PrintString( 0, (FBSTRING*)&STRCODE$, 1 );
     }
     goto label$11808;
     label$11809:;
     fb_FileClose( (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
     FBSTRING* vr$9076 = fb_StrAllocTempDescZEx( (uint8*)"tmp.cob", 7ll );
     fb_FileOpen( (FBSTRING*)vr$9076, 3u, 0u, 0u, 2, 0 );
     label$11810:;
     {
      FBSTRING* vr$9077 = fb_StrAllocTempDescZEx( (uint8*)"COBOL:\x5C> ", 9ll );
      fb_LineInput( (FBSTRING*)vr$9077, (void*)&STRCODE$, -1ll, 0, 0, -1 );
      int32 vr$9078 = fb_StrCompare( (void*)&STRCODE$, -1ll, (void*)"", 1ll );
      if( (int64)vr$9078 == 0ll ) goto label$11814;
      {
       uint8 TMP$5239$7;
       TMP$5239$7 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
       fb_PrintString( (int32)TMP$5239$7, (FBSTRING*)&STRCODE$, 1 );
      }
      goto label$11813;
      label$11814:;
      {
       goto label$11811;
       label$11813:;
      }
     }
     label$11812:;
     goto label$11810;
     label$11811:;
     fb_FileClose( (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
     fb_Cls( -65536 );
     FBSTRING* vr$9082 = fb_StrAllocTempDescZEx( (uint8*)"cobc -x -free tmp.cob -o tmp", 28ll );
     fb_Shell( (FBSTRING*)vr$9082 );
     FBSTRING* vr$9083 = fb_StrAllocTempDescZEx( (uint8*)"./tmp > tmp.txt", 15ll );
     fb_Shell( (FBSTRING*)vr$9083 );
     FBSTRING* vr$9084 = fb_StrAllocTempDescZEx( (uint8*)"tmp.txt", 7ll );
     fb_FileOpen( (FBSTRING*)vr$9084, 2u, 0u, 0u, 2, 0 );
     label$11815:;
     int32 vr$9086 = fb_FileEof( (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
     if( (int64)vr$9086 != 0ll ) goto label$11816;
     {
      fb_FileLineInput( 2, (void*)&STRCODE$, -1ll, 0 );
      fb_PrintString( 0, (FBSTRING*)&STRCODE$, 1 );
     }
     goto label$11815;
     label$11816:;
     fb_FileClose( (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
     FBSTRING* vr$9089 = fb_StrAllocTempDescZEx( (uint8*)"rm tmp tmp.cob tmp.txt err.txt", 30ll );
     fb_Shell( (FBSTRING*)vr$9089 );
     FBSTRING* vr$9090 = fb_StrAllocTempDescZEx( (uint8*)"Press any key to continue.", 26ll );
     fb_PrintString( 0, (FBSTRING*)vr$9090, 1 );
     fb_Sleep( -1 );
     fb_GfxScreenRes( 1920, 1080, 32, 0, 0, 0 );
     fb_Cls( -65536 );
    }
    goto label$11796;
    label$11806:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) ) goto label$11817;
    label$11818:;
    {
     fb_GfxScreenRes( 800, 600, 32, 0, 0, 0 );
     fb_Cls( -65536 );
     FBSTRING* vr$9093 = fb_StrAllocTempDescZEx( (uint8*)"Persistence of Vision(tm) Ray Tracer 3.7.0.9", 44ll );
     fb_PrintString( 0, (FBSTRING*)vr$9093, 1 );
     FBSTRING* vr$9094 = fb_StrAllocTempDescZEx( (uint8*)"POV-Ray is based on DKBTrace 2.12 by David K. Buck & Aaron A. Collins", 69ll );
     fb_PrintString( 0, (FBSTRING*)vr$9094, 1 );
     FBSTRING* vr$9095 = fb_StrAllocTempDescZEx( (uint8*)"(C) 1991-2013 Persistence of Vision Raytracer Pty. Ltd.", 55ll );
     fb_PrintString( 0, (FBSTRING*)vr$9095, 1 );
     FBSTRING* vr$9097 = fb_StrAllocTempDescZEx( (uint8*)"tmp.pov", 7ll );
     fb_FileOpen( (FBSTRING*)vr$9097, 3u, 0u, 0u, (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll), 0 );
     label$11819:;
     {
      FBSTRING* vr$9098 = fb_StrAllocTempDescZEx( (uint8*)"POVRAY:\x5C> ", 10ll );
      fb_LineInput( (FBSTRING*)vr$9098, (void*)&STRCODE$, -1ll, 0, 0, -1 );
      int32 vr$9099 = fb_StrCompare( (void*)&STRCODE$, -1ll, (void*)"", 1ll );
      if( (int64)vr$9099 == 0ll ) goto label$11823;
      {
       uint8 TMP$5246$7;
       TMP$5246$7 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
       fb_PrintString( (int32)TMP$5246$7, (FBSTRING*)&STRCODE$, 1 );
      }
      goto label$11822;
      label$11823:;
      {
       goto label$11820;
       label$11822:;
      }
     }
     label$11821:;
     goto label$11819;
     label$11820:;
     fb_FileClose( (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
     FBSTRING* vr$9103 = fb_StrAllocTempDescZEx( (uint8*)"povray tmp.pov", 14ll );
     fb_Shell( (FBSTRING*)vr$9103 );
     FBSTRING* vr$9104 = fb_StrAllocTempDescZEx( (uint8*)"convert tmp.png 0.bmp", 21ll );
     fb_Shell( (FBSTRING*)vr$9104 );
     FBSTRING* vr$9105 = fb_StrAllocTempDescZEx( (uint8*)"mv 0.bmp ./vram/0.bmp", 21ll );
     fb_Shell( (FBSTRING*)vr$9105 );
     FBSTRING* vr$9106 = fb_StrAllocTempDescZEx( (uint8*)"./vram/0.bmp", 12ll );
     fb_GfxBload( (FBSTRING*)vr$9106, (void*)0ull, (void*)0ull );
     fb_Locate( 60, 1, -1, 0, 0 );
     FBSTRING* vr$9107 = fb_StrAllocTempDescZEx( (uint8*)"Press any key to continue.", 26ll );
     fb_PrintString( 0, (FBSTRING*)vr$9107, 1 );
     fb_Sleep( -1 );
     fb_GfxScreenRes( 1920, 1080, 32, 0, 0, 0 );
     fb_Cls( -65536 );
    }
    goto label$11796;
    label$11817:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) ) goto label$11824;
    label$11825:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.bas", 8ll, 0 );
     fb_StrAssign( (void*)&COMPILER$, -1ll, (void*)"fbc ", 5ll, 0 );
    }
    goto label$11796;
    label$11824:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) ) goto label$11826;
    label$11827:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.bas", 8ll, 0 );
     fb_StrAssign( (void*)&COMPILER$, -1ll, (void*)"fbc -lang qb ", 14ll, 0 );
    }
    goto label$11796;
    label$11826:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) ) goto label$11828;
    label$11829:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.glsl", 9ll, 0 );
     fb_StrAssign( (void*)&COMPILER$, -1ll, (void*)"", 1ll, 0 );
    }
    goto label$11796;
    label$11828:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) ) goto label$11830;
    label$11831:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.cob", 8ll, 0 );
     fb_StrAssign( (void*)&COMPILER$, -1ll, (void*)"cobc -x -free ", 15ll, 0 );
    }
    goto label$11796;
    label$11830:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) ) goto label$11832;
    label$11833:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.f77", 8ll, 0 );
     fb_StrAssign( (void*)&COMPILER$, -1ll, (void*)"gfortran -std=legacy ", 22ll, 0 );
    }
    goto label$11796;
    label$11832:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) ) goto label$11834;
    label$11835:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.pas", 8ll, 0 );
     fb_StrAssign( (void*)&COMPILER$, -1ll, (void*)"fpc ", 5ll, 0 );
    }
    goto label$11796;
    label$11834:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) ) goto label$11836;
    label$11837:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.osl", 8ll, 0 );
     fb_StrAssign( (void*)&COMPILER$, -1ll, (void*)"", 1ll, 0 );
    }
    goto label$11796;
    label$11836:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) ) goto label$11838;
    label$11839:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.pov", 8ll, 0 );
     fb_StrAssign( (void*)&COMPILER$, -1ll, (void*)"povray ", 8ll, 0 );
    }
    goto label$11796;
    label$11838:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) ) goto label$11840;
    label$11841:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.java", 9ll, 0 );
     fb_StrAssign( (void*)&COMPILER$, -1ll, (void*)"java ", 6ll, 0 );
    }
    goto label$11796;
    label$11840:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) ) goto label$11842;
    label$11843:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.c", 6ll, 0 );
     fb_StrAssign( (void*)&COMPILER$, -1ll, (void*)"gcc ", 5ll, 0 );
    }
    goto label$11796;
    label$11842:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) ) goto label$11844;
    label$11845:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.cpp", 8ll, 0 );
     fb_StrAssign( (void*)&COMPILER$, -1ll, (void*)"g++ ", 5ll, 0 );
    }
    goto label$11796;
    label$11844:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) ) goto label$11846;
    label$11847:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.cs", 7ll, 0 );
     fb_StrAssign( (void*)&COMPILER$, -1ll, (void*)"csc ", 5ll, 0 );
    }
    goto label$11796;
    label$11846:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) ) goto label$11848;
    label$11849:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.js", 7ll, 0 );
     fb_StrAssign( (void*)&COMPILER$, -1ll, (void*)"node ", 6ll, 0 );
    }
    goto label$11796;
    label$11848:;
    if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$11850;
    label$11851:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.php", 8ll, 0 );
     fb_StrAssign( (void*)&COMPILER$, -1ll, (void*)"php -f ", 8ll, 0 );
    }
    goto label$11796;
    label$11850:;
    if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$11852;
    label$11853:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.py", 7ll, 0 );
     fb_StrAssign( (void*)&COMPILER$, -1ll, (void*)"python ", 8ll, 0 );
    }
    goto label$11796;
    label$11852:;
    if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$11854;
    label$11855:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.swift", 10ll, 0 );
     fb_StrAssign( (void*)&COMPILER$, -1ll, (void*)"swift ", 7ll, 0 );
    }
    goto label$11796;
    label$11854:;
    if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$11856;
    label$11857:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.m", 6ll, 0 );
     fb_StrAssign( (void*)&COMPILER$, -1ll, (void*)"octave --persist ", 18ll, 0 );
    }
    goto label$11796;
    label$11856:;
    if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$11858;
    label$11859:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.kt", 7ll, 0 );
     fb_StrAssign( (void*)&COMPILER$, -1ll, (void*)"kotlinc ", 9ll, 0 );
    }
    goto label$11796;
    label$11858:;
    if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$11860;
    label$11861:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.r", 6ll, 0 );
     fb_StrAssign( (void*)&COMPILER$, -1ll, (void*)"rscript ", 9ll, 0 );
    }
    goto label$11796;
    label$11860:;
    if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$11862;
    label$11863:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.dart", 9ll, 0 );
     fb_StrAssign( (void*)&COMPILER$, -1ll, (void*)"dart ", 6ll, 0 );
    }
    goto label$11796;
    label$11862:;
    if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$11864;
    label$11865:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.scala", 10ll, 0 );
     fb_StrAssign( (void*)&COMPILER$, -1ll, (void*)"scalac ", 8ll, 0 );
    }
    goto label$11796;
    label$11864:;
    if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$11866;
    label$11867:;
    {
     fb_FileOpen( (FBSTRING*)&FILENAME$, 3u, 0u, 0u, 1, 0 );
    }
    goto label$11796;
    label$11866:;
    if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$11868;
    label$11869:;
    {
     fb_FileClose( 1 );
    }
    goto label$11796;
    label$11868:;
    if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$11870;
    label$11871:;
    {
     FBSTRING TMP$5287$5;
     FBSTRING TMP$5292$5;
     fb_GfxLine( FGIMAGE$, 0x0p+0f, 0x0p+0f, (float)SCR_W$, (float)SCR_H$, 4278190080u, 2, 65535u, 0 );
     __builtin_memset( &TMP$5287$5, 0, 24ll );
     FBSTRING* vr$9202 = fb_StrConcat( &TMP$5287$5, (void*)&COMPILER$, -1ll, (void*)&FILENAME$, -1ll );
     fb_Shell( (FBSTRING*)vr$9202 );
     FBSTRING* vr$9203 = fb_StrAllocTempDescZEx( (uint8*)"./tmp > tmp.txt", 15ll );
     fb_Shell( (FBSTRING*)vr$9203 );
     FBSTRING* vr$9204 = fb_StrAllocTempDescZEx( (uint8*)"tmp.txt", 7ll );
     fb_FileOpen( (FBSTRING*)vr$9204, 2u, 0u, 0u, 1, 0 );
     SCR_POS$ = 0ull;
     *(double*)((int64)(double*)MEM64$ + 394896ll) = 0x0p+0;
     *(double*)((int64)(double*)MEM64$ + 394904ll) = 0x0p+0;
     *(double*)((int64)(double*)MEM64$ + 394912ll) = 0x0p+0;
     label$11872:;
     int32 vr$9205 = fb_FileEof( 1 );
     if( (int64)vr$9205 != 0ll ) goto label$11873;
     {
      fb_FileLineInput( 1, (void*)&STRCODE$, -1ll, 0 );
      {
       INDEX$ = (uint16)1u;
       uint16 TMP$5288$7;
       int64 vr$9207 = fb_StrLen( (void*)&STRCODE$, -1ll );
       TMP$5288$7 = (uint16)vr$9207;
       goto label$11874;
       label$11877:;
       {
        FBSTRING* vr$9210 = fb_StrMid( (FBSTRING*)&STRCODE$, (int64)INDEX$, 1ll );
        uint32 vr$9211 = fb_ASC( (FBSTRING*)vr$9210, 1ll );
        *(double*)((int64)(double*)MEM64$ + 394888ll) = (double)vr$9211;
        if( ((int64)-(*(double*)((int64)(double*)MEM64$ + 394888ll) > 0x1.Fp+4) & (int64)-(*(double*)((int64)(double*)MEM64$ + 394888ll) < 0x1.p+6)) == 0ll ) goto label$11879;
        {
         *(double*)((int64)(double*)MEM64$ + 394888ll) = *(double*)((int64)(double*)MEM64$ + 394888ll) + 0x1.p+5;
         label$11879:;
        }
        _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, (double)((uint64)((int64)INDEX$ + 16383ll) + SCR_POS$), (double)(((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394888ll) + 0x1.p+5 )) & 63ll) );
       }
       label$11875:;
       INDEX$ = (uint16)((int64)INDEX$ + 1ll);
       label$11874:;
       if( (int64)INDEX$ <= (int64)TMP$5288$7 ) goto label$11877;
       label$11876:;
      }
      SCR_POS$ = SCR_POS$ + 90ull;
     }
     goto label$11872;
     label$11873:;
     SCR_POS$ = 5400ull;
     *(double*)((int64)(double*)MEM64$ + 394912ll) = 0x0p+0;
     fb_FileClose( 1 );
     fb_StrAssign( (void*)&STRCODE$, -1ll, (void*)"press any key to continue.", 27ll, 0 );
     {
      INDEX$ = (uint16)1u;
      uint16 TMP$5290$6;
      int64 vr$9231 = fb_StrLen( (void*)&STRCODE$, -1ll );
      TMP$5290$6 = (uint16)vr$9231;
      goto label$11880;
      label$11883:;
      {
       FBSTRING* vr$9234 = fb_StrMid( (FBSTRING*)&STRCODE$, (int64)INDEX$, 1ll );
       uint32 vr$9235 = fb_ASC( (FBSTRING*)vr$9234, 1ll );
       *(double*)((int64)(double*)MEM64$ + 394888ll) = (double)vr$9235;
       if( ((int64)-(*(double*)((int64)(double*)MEM64$ + 394888ll) > 0x1.Fp+4) & (int64)-(*(double*)((int64)(double*)MEM64$ + 394888ll) < 0x1.p+6)) == 0ll ) goto label$11885;
       {
        *(double*)((int64)(double*)MEM64$ + 394888ll) = *(double*)((int64)(double*)MEM64$ + 394888ll) + 0x1.p+5;
        label$11885:;
       }
       _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, (double)((uint64)((int64)INDEX$ + 16383ll) + SCR_POS$), (double)(((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394888ll) + 0x1.p+5 )) & 63ll) );
      }
      label$11881:;
      INDEX$ = (uint16)((int64)INDEX$ + 1ll);
      label$11880:;
      if( (int64)INDEX$ <= (int64)TMP$5290$6 ) goto label$11883;
      label$11882:;
     }
     __builtin_memset( &TMP$5292$5, 0, 24ll );
     FBSTRING* vr$9256 = fb_StrConcat( &TMP$5292$5, (void*)"rm ./tmp; ./", 13ll, (void*)&FILENAME$, -1ll );
     fb_Shell( (FBSTRING*)vr$9256 );
     SCR_POS$ = 0ull;
     fb_StrAssign( (void*)&STRCODE$, -1ll, (void*)"", 1ll, 0 );
     fb_GfxPut( (void*)0ull, 0x0p+0f, 0x0p+0f, (void*)FGIMAGE$, -65536, -65536, -65536, -65536, 0, 1, (void*)&fb_hPutPSet, -1, (void*)0ull, (void*)0ull );
     fb_Sleep( -1 );
     fb_GfxLine( FGIMAGE$, 0x0p+0f, 0x0p+0f, (float)SCR_W$, (float)SCR_H$, 4278190080u, 2, 65535u, 0 );
     fb_GfxPut( (void*)0ull, 0x0p+0f, 0x0p+0f, (void*)FGIMAGE$, -65536, -65536, -65536, -65536, 0, 1, (void*)&fb_hPutPSet, -1, (void*)0ull, (void*)0ull );
    }
    goto label$11796;
    label$11870:;
    if( V$1 != 0x1.Bp+4 ) goto label$11886;
    label$11887:;
    {
     *(double*)((int64)(double*)MEM64$ + 394840ll) = 0x0p+0;
     *(double*)((int64)(double*)MEM64$ + 394848ll) = 0x0p+0;
     fb_GfxLine( FGIMAGE$, 0x0p+0f, 0x0p+0f, (float)SCR_W$, (float)SCR_H$, 4278190080u, 2, 65535u, 0 );
     fb_FileOpen( (FBSTRING*)&FILENAME$, 0u, 0u, 0u, 1, 0 );
     SCR_POS$ = 0ull;
     *(double*)((int64)(double*)MEM64$ + 394896ll) = 0x0p+0;
     *(double*)((int64)(double*)MEM64$ + 394904ll) = 0x0p+0;
     *(double*)((int64)(double*)MEM64$ + 394912ll) = 0x0p+0;
     label$11888:;
     int32 vr$9261 = fb_FileEof( 1 );
     if( (int64)vr$9261 != 0ll ) goto label$11889;
     {
      fb_FileLineInput( 1, (void*)&STRCODE$, -1ll, 0 );
      {
       INDEX$ = (uint16)1u;
       uint16 TMP$5294$7;
       int64 vr$9263 = fb_StrLen( (void*)&STRCODE$, -1ll );
       TMP$5294$7 = (uint16)vr$9263;
       goto label$11890;
       label$11893:;
       {
        FBSTRING* vr$9266 = fb_StrMid( (FBSTRING*)&STRCODE$, (int64)INDEX$, 1ll );
        uint32 vr$9267 = fb_ASC( (FBSTRING*)vr$9266, 1ll );
        *(double*)((int64)(double*)MEM64$ + 394888ll) = (double)vr$9267;
        if( ((int64)-(*(double*)((int64)(double*)MEM64$ + 394888ll) > 0x1.Fp+4) & (int64)-(*(double*)((int64)(double*)MEM64$ + 394888ll) < 0x1.p+6)) == 0ll ) goto label$11895;
        {
         *(double*)((int64)(double*)MEM64$ + 394888ll) = *(double*)((int64)(double*)MEM64$ + 394888ll) + 0x1.p+5;
         label$11895:;
        }
        _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, (double)((uint64)((int64)INDEX$ + 16383ll) + SCR_POS$), (double)(((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394888ll) + 0x1.p+5 )) & 63ll) );
       }
       label$11891:;
       INDEX$ = (uint16)((int64)INDEX$ + 1ll);
       label$11890:;
       if( (int64)INDEX$ <= (int64)TMP$5294$7 ) goto label$11893;
       label$11892:;
      }
      SCR_POS$ = SCR_POS$ + 90ull;
     }
     goto label$11888;
     label$11889:;
     SCR_POS$ = 5400ull;
     *(double*)((int64)(double*)MEM64$ + 394912ll) = 0x0p+0;
     fb_FileClose( 1 );
     fb_StrAssign( (void*)&STRCODE$, -1ll, (void*)"press any key to continue.", 27ll, 0 );
     {
      INDEX$ = (uint16)1u;
      uint16 TMP$5295$6;
      int64 vr$9287 = fb_StrLen( (void*)&STRCODE$, -1ll );
      TMP$5295$6 = (uint16)vr$9287;
      goto label$11896;
      label$11899:;
      {
       FBSTRING* vr$9290 = fb_StrMid( (FBSTRING*)&STRCODE$, (int64)INDEX$, 1ll );
       uint32 vr$9291 = fb_ASC( (FBSTRING*)vr$9290, 1ll );
       *(double*)((int64)(double*)MEM64$ + 394888ll) = (double)vr$9291;
       if( ((int64)-(*(double*)((int64)(double*)MEM64$ + 394888ll) > 0x1.Fp+4) & (int64)-(*(double*)((int64)(double*)MEM64$ + 394888ll) < 0x1.p+6)) == 0ll ) goto label$11901;
       {
        *(double*)((int64)(double*)MEM64$ + 394888ll) = *(double*)((int64)(double*)MEM64$ + 394888ll) + 0x1.p+5;
        label$11901:;
       }
       _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, (double)((uint64)((int64)INDEX$ + 16383ll) + SCR_POS$), (double)(((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394888ll) + 0x1.p+5 )) & 63ll) );
      }
      label$11897:;
      INDEX$ = (uint16)((int64)INDEX$ + 1ll);
      label$11896:;
      if( (int64)INDEX$ <= (int64)TMP$5295$6 ) goto label$11899;
      label$11898:;
     }
     SCR_POS$ = 0ull;
     fb_StrAssign( (void*)&STRCODE$, -1ll, (void*)"", 1ll, 0 );
     fb_GfxPut( (void*)0ull, 0x0p+0f, 0x0p+0f, (void*)FGIMAGE$, -65536, -65536, -65536, -65536, 0, 1, (void*)&fb_hPutPSet, -1, (void*)0ull, (void*)0ull );
     fb_Sleep( -1 );
     fb_GfxLine( FGIMAGE$, 0x0p+0f, 0x0p+0f, (float)SCR_W$, (float)SCR_H$, 4278190080u, 2, 65535u, 0 );
     fb_GfxPut( (void*)0ull, 0x0p+0f, 0x0p+0f, (void*)FGIMAGE$, -65536, -65536, -65536, -65536, 0, 1, (void*)&fb_hPutPSet, -1, (void*)0ull, (void*)0ull );
    }
    goto label$11796;
    label$11886:;
    if( V$1 != 0x1.Cp+4 ) goto label$11902;
    label$11903:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"", 1ll, 0 );
    }
    label$11902:;
    label$11796:;
   }
  }
  goto label$9484;
  label$11794:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$11904;
  label$11905:;
  {
   fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.glsl", 9ll, 0 );
   _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), 0x1.8142p+15, 0x0p+0 );
  }
  goto label$9484;
  label$11904:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$11906;
  label$11907:;
  {
   int64 TMP$5297$3;
   int64 TMP$5298$3;
   int64 X$3;
   __builtin_memset( &X$3, 0, 8ll );
   int64 Y$3;
   __builtin_memset( &Y$3, 0, 8ll );
   int64 WHEEL$3;
   __builtin_memset( &WHEEL$3, 0, 8ll );
   int64 BUTTONS$3;
   __builtin_memset( &BUTTONS$3, 0, 8ll );
   int64 RES$3;
   __builtin_memset( &RES$3, 0, 8ll );
   TMP$5298$3 = 0ll;
   TMP$5297$3 = 0ll;
   int32 vr$9343 = fb_GetMouse64( (int64*)&X$3, (int64*)&Y$3, &TMP$5297$3, (int64*)&BUTTONS$3, &TMP$5298$3 );
   *(double*)((int64)(double*)MEM64$ + 394576ll) = (double)vr$9343;
   *(double*)((int64)(double*)MEM64$ + 394840ll) = (double)X$3;
   *(double*)((int64)(double*)MEM64$ + 394848ll) = (double)Y$3;
   *(double*)((int64)(double*)MEM64$ + 394856ll) = (double)WHEEL$3;
   if( (BUTTONS$3 & 1ll) == 0ll ) goto label$11909;
   {
    *(double*)((int64)(double*)MEM64$ + 394864ll) = 0x1.p+0;
    label$11909:;
   }
   if( (BUTTONS$3 & 2ll) == 0ll ) goto label$11911;
   {
    *(double*)((int64)(double*)MEM64$ + 394864ll) = 0x1.p+1;
    label$11911:;
   }
   if( (BUTTONS$3 & 4ll) == 0ll ) goto label$11913;
   {
    *(double*)((int64)(double*)MEM64$ + 394864ll) = 0x1.p+2;
    label$11913:;
   }
  }
  goto label$9484;
  label$11906:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$11914;
  label$11915:;
  {
   fb_PageCopy( ((int32)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394840ll) )), ((int32)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394848ll) )) );
  }
  goto label$9484;
  label$11914:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$11916;
  label$11917:;
  {
   FBSTRING TMP$5301$3;
   FBSTRING TMP$5302$3;
   uint8 TMP$3;
   __builtin_memset( &TMP$3, 0, 1ll );
   {
    int64 C$4;
    C$4 = 0ll;
    label$11921:;
    {
     *(double*)((uint8*)((uint8*)THIS$1 + (C$4 << (3ll & 63ll))) + 262144ll) = 0x0p+0;
    }
    label$11919:;
    C$4 = C$4 + 1ll;
    label$11918:;
    if( C$4 <= 8191ll ) goto label$11921;
    label$11920:;
   }
   FBSTRING* vr$9377 = fb_DoubleToStr( V$1 );
   __builtin_memset( &TMP$5301$3, 0, 24ll );
   FBSTRING* vr$9380 = fb_StrConcat( &TMP$5301$3, (void*)"./chargen/", 11ll, (void*)vr$9377, -1ll );
   __builtin_memset( &TMP$5302$3, 0, 24ll );
   FBSTRING* vr$9383 = fb_StrConcat( &TMP$5302$3, (void*)vr$9380, -1ll, (void*)".c64", 5ll );
   fb_FileOpen( (FBSTRING*)vr$9383, 0u, 0u, 0u, 1, 0 );
   {
    int64 I$4;
    I$4 = 0ll;
    int64 TMP$5303$4;
    int64 vr$9384 = fb_FileSize( 1 );
    TMP$5303$4 = vr$9384;
    goto label$11922;
    label$11925:;
    {
     fb_FileGetLarge( 1, 0ll, (void*)&TMP$3, 1ull );
     *(double*)((uint8*)((uint8*)THIS$1 + (I$4 << (3ll & 63ll))) + 262144ll) = (double)TMP$3;
    }
    label$11923:;
    I$4 = I$4 + 1ll;
    label$11922:;
    if( I$4 <= TMP$5303$4 ) goto label$11925;
    label$11924:;
   }
   fb_FileClose( 1 );
  }
  goto label$9484;
  label$11916:;
  if( ADR$1 == (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$11927;
  label$11928:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$11926;
  label$11927:;
  {
   {
    if( V$1 < (double)(int64)*(uint8*)NIBBLES$ ) goto label$11930;
    if( V$1 > (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) ) goto label$11930;
    label$11931:;
    {
     double vr$9420 = _ZN12SYSTEM_BUS_T8K_MODULOEdd( THIS$1, V$1, (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) );
     _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), (double)FCOLOR$, vr$9420 );
    }
    goto label$11929;
    label$11930:;
    if( V$1 < (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$11932;
    if( V$1 > (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$11932;
    label$11933:;
    {
     _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), 0x1.8004p+15, (double)(((((int64)__builtin_nearbyint( V$1 - (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) )) % (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) * (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll))) % (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) );
    }
    goto label$11929;
    label$11932:;
    if( V$1 < (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$11934;
    if( V$1 > (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$11934;
    label$11935:;
    {
     _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), 0x1.8006p+15, (double)(((((int64)__builtin_nearbyint( V$1 - (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) )) % (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) * (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll))) % (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) );
    }
    goto label$11929;
    label$11934:;
    if( V$1 < (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$11936;
    if( V$1 > (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$11936;
    label$11937:;
    {
     _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), 0x1.8008p+15, (double)(((((int64)__builtin_nearbyint( V$1 - (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) )) % (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) * (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll))) % (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) );
    }
    goto label$11929;
    label$11936:;
    {
     _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), 0x1.800Ap+15, (double)(((((int64)__builtin_nearbyint( V$1 - (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) )) % (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) * (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll))) % (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) );
    }
    label$11938:;
    label$11929:;
   }
   if( ADR$1 != 0x1.81D8p+15 ) goto label$11940;
   {
    double vr$9557 = _ZN12SYSTEM_BUS_T6PEEK64Ed( THIS$1, 0x1.8192p+15 );
    _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), 0x1.A04p+15, vr$9557 );
    double vr$9559 = _ZN12SYSTEM_BUS_T6PEEK64Ed( THIS$1, 0x1.8192p+15 );
    _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), 0x1.A042p+15, vr$9559 );
   }
   label$11940:;
   label$11939:;
  }
  goto label$9484;
  label$11926:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$11941;
  label$11942:;
  {
   {
    if( V$1 < (double)(int64)*(uint8*)NIBBLES$ ) goto label$11944;
    if( V$1 > (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) ) goto label$11944;
    label$11945:;
    {
     double vr$9581 = _ZN12SYSTEM_BUS_T8K_MODULOEdd( THIS$1, V$1, (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) );
     _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), (double)BGCOL0$, vr$9581 );
    }
    goto label$11943;
    label$11944:;
    if( V$1 < (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$11946;
    if( V$1 > (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$11946;
    label$11947:;
    {
     _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), 0x1.800Cp+15, (double)(((((int64)__builtin_nearbyint( V$1 - (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) )) % (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) * (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll))) % (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) );
    }
    goto label$11943;
    label$11946:;
    if( V$1 < (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$11948;
    if( V$1 > (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$11948;
    label$11949:;
    {
     _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), 0x1.800Ep+15, (double)(((((int64)__builtin_nearbyint( V$1 - (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) )) % (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) * (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll))) % (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) );
    }
    goto label$11943;
    label$11948:;
    if( V$1 < (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$11950;
    if( V$1 > (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$11950;
    label$11951:;
    {
     _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), 0x1.801p+15, (double)(((((int64)__builtin_nearbyint( V$1 - (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) )) % (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) * (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll))) % (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) );
    }
    goto label$11943;
    label$11950:;
    {
     _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), 0x1.8012p+15, (double)(((((int64)__builtin_nearbyint( V$1 - (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) )) % (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) * (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll))) % (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) );
    }
    label$11952:;
    label$11943:;
   }
  }
  goto label$9484;
  label$11941:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$11953;
  label$11954:;
  {
   fb_GfxLine( FGIMAGE$, (float)*(double*)((int64)(double*)MEM64$ + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))), (float)*(double*)((int64)(double*)MEM64$ + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) << (3ll & 63ll))), (float)*(double*)((int64)(double*)MEM64$ + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) << (3ll & 63ll))), (float)*(double*)((int64)(double*)MEM64$ + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) << (3ll & 63ll))), (uint32)((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) << (3ll & 63ll))) )), 2, 65535u, 0 );
  }
  goto label$9484;
  label$11953:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$11955;
  label$11956:;
  {
   fb_GfxLine( FGIMAGE$, (float)*(double*)((int64)(double*)MEM64$ + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))), (float)*(double*)((int64)(double*)MEM64$ + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) << (3ll & 63ll))), (float)*(double*)((int64)(double*)MEM64$ + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) << (3ll & 63ll))), (float)*(double*)((int64)(double*)MEM64$ + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) << (3ll & 63ll))), (uint32)((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) << (3ll & 63ll))) )), 2, 65535u, 0 );
  }
  goto label$9484;
  label$11955:;
  if( ADR$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) ) goto label$11957;
  label$11958:;
  {
   fb_GfxScreen( 0, 8, 0, 0, 0 );
   fb_Chain( (FBSTRING*)&STRCODE$ );
   fb_StrAssign( (void*)&STRCODE$, -1ll, (void*)"", 1ll, 0 );
   fb_GfxScreenRes( 1920, 1080, 32, 0, 65, 0 );
   fb_Cls( -65536 );
   FBSTRING* vr$9856 = fb_StrAllocTempDescZEx( (uint8*)"", 0ll );
   fb_GfxPaint( (void*)0ull, 0x0p+0f, 0x0p+0f, 4278190080u, 0u, (FBSTRING*)vr$9856, 0, 1073741828 );
   {
    OFFSET$ = 0x0p+0;
    label$11962:;
    {
     _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, *(double*)((int64)(double*)MEM64$ + 395608ll) + OFFSET$, 0x1.p+5 );
    }
    label$11960:;
    OFFSET$ = OFFSET$ + 0x1.p+0;
    label$11959:;
    if( OFFSET$ <= 0x1.p+10 ) goto label$11962;
    label$11961:;
   }
  }
  goto label$9484;
  label$11957:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$11963;
  label$11964:;
  {
   FBSTRING TMP$5305$3;
   fb_GfxScreen( 0, 8, 0, 0, 0 );
   __builtin_memset( &TMP$5305$3, 0, 24ll );
   FBSTRING* vr$9871 = fb_StrConcat( &TMP$5305$3, (void*)"wine ", 6ll, (void*)&STRCODE$, -1ll );
   fb_Shell( (FBSTRING*)vr$9871 );
   fb_StrAssign( (void*)&STRCODE$, -1ll, (void*)"", 1ll, 0 );
   fb_GfxScreenRes( 1920, 1080, 32, 0, 65, 0 );
   fb_Cls( -65536 );
   FBSTRING* vr$9872 = fb_StrAllocTempDescZEx( (uint8*)"", 0ll );
   fb_GfxPaint( (void*)0ull, 0x0p+0f, 0x0p+0f, 4278190080u, 0u, (FBSTRING*)vr$9872, 0, 1073741828 );
   {
    OFFSET$ = 0x0p+0;
    label$11968:;
    {
     _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, *(double*)((int64)(double*)MEM64$ + 395608ll) + OFFSET$, 0x1.p+5 );
    }
    label$11966:;
    OFFSET$ = OFFSET$ + 0x1.p+0;
    label$11965:;
    if( OFFSET$ <= 0x1.p+10 ) goto label$11968;
    label$11967:;
   }
  }
  goto label$9484;
  label$11963:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$11969;
  label$11970:;
  {
   FBSTRING TMP$5308$3;
   FBSTRING TMP$5309$3;
   fb_GfxScreen( 0, 8, 0, 0, 0 );
   __builtin_memset( &TMP$5308$3, 0, 24ll );
   FBSTRING* vr$9887 = fb_StrConcat( &TMP$5308$3, (void*)"dosbox-x ", 10ll, (void*)&STRCODE$, -1ll );
   __builtin_memset( &TMP$5309$3, 0, 24ll );
   FBSTRING* vr$9890 = fb_StrConcat( &TMP$5309$3, (void*)vr$9887, -1ll, (void*)" -fullscreen -exit", 19ll );
   fb_Shell( (FBSTRING*)vr$9890 );
   fb_StrAssign( (void*)&STRCODE$, -1ll, (void*)"", 1ll, 0 );
   fb_GfxScreenRes( 1920, 1080, 32, 0, 65, 0 );
   fb_Cls( -65536 );
   FBSTRING* vr$9891 = fb_StrAllocTempDescZEx( (uint8*)"", 0ll );
   fb_GfxPaint( (void*)0ull, 0x0p+0f, 0x0p+0f, 4278190080u, 0u, (FBSTRING*)vr$9891, 0, 1073741828 );
  }
  goto label$9484;
  label$11969:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$11971;
  label$11972:;
  {
   FBSTRING TMP$5311$3;
   __builtin_memset( &TMP$5311$3, 0, 24ll );
   FBSTRING* vr$9904 = fb_StrConcat( &TMP$5311$3, (void*)&STRCODE$, -1ll, (void*)".asm", 5ll );
   fb_FileOpen( (FBSTRING*)vr$9904, 3u, 0u, 0u, 1, 0 );
   fb_StrAssign( (void*)&STRCODE$, -1ll, (void*)"", 1ll, 0 );
  }
  goto label$9484;
  label$11971:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$11973;
  label$11974:;
  {
   fb_PrintString( 1, (FBSTRING*)&STRCODE$, 1 );
   fb_StrAssign( (void*)&STRCODE$, -1ll, (void*)"", 1ll, 0 );
  }
  goto label$9484;
  label$11973:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$11975;
  label$11976:;
  {
   fb_FileClose( 1 );
   fb_StrAssign( (void*)&STRCODE$, -1ll, (void*)"", 1ll, 0 );
  }
  goto label$9484;
  label$11975:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$11977;
  label$11978:;
  {
   FBSTRING TMP$5315$3;
   FBSTRING TMP$5316$3;
   FBSTRING TMP$5317$3;
   FBSTRING TMP$5318$3;
   __builtin_memset( &TMP$5315$3, 0, 24ll );
   FBSTRING* vr$9937 = fb_StrConcat( &TMP$5315$3, (void*)"nasm ", 6ll, (void*)&STRCODE$, -1ll );
   __builtin_memset( &TMP$5316$3, 0, 24ll );
   FBSTRING* vr$9940 = fb_StrConcat( &TMP$5316$3, (void*)vr$9937, -1ll, (void*)".asm -f bin -o", 15ll );
   __builtin_memset( &TMP$5317$3, 0, 24ll );
   FBSTRING* vr$9943 = fb_StrConcat( &TMP$5317$3, (void*)vr$9940, -1ll, (void*)&STRCODE$, -1ll );
   __builtin_memset( &TMP$5318$3, 0, 24ll );
   FBSTRING* vr$9946 = fb_StrConcat( &TMP$5318$3, (void*)vr$9943, -1ll, (void*)".bin", 5ll );
   fb_Shell( (FBSTRING*)vr$9946 );
   fb_StrAssign( (void*)&STRCODE$, -1ll, (void*)"", 1ll, 0 );
  }
  goto label$9484;
  label$11977:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$11979;
  label$11980:;
  {
   FBSTRING TMP$5321$3;
   FBSTRING TMP$5322$3;
   FBSTRING TMP$5323$3;
   FBSTRING TMP$5325$3;
   fb_GfxScreen( 0, 8, 0, 0, 0 );
   __builtin_memset( &TMP$5321$3, 0, 24ll );
   FBSTRING* vr$9959 = fb_StrConcat( &TMP$5321$3, (void*)"dosbox-x -c 'boot ", 19ll, (void*)&STRCODE$, -1ll );
   __builtin_memset( &TMP$5322$3, 0, 24ll );
   FBSTRING* vr$9962 = fb_StrConcat( &TMP$5322$3, (void*)vr$9959, -1ll, (void*)"'", 2ll );
   __builtin_memset( &TMP$5323$3, 0, 24ll );
   FBSTRING* vr$9965 = fb_StrConcat( &TMP$5323$3, (void*)vr$9962, -1ll, (void*)" -exit", 7ll );
   fb_Shell( (FBSTRING*)vr$9965 );
   __builtin_memset( &TMP$5325$3, 0, 24ll );
   FBSTRING* vr$9968 = fb_StrConcat( &TMP$5325$3, (void*)"rm ", 4ll, (void*)&STRCODE$, -1ll );
   fb_Shell( (FBSTRING*)vr$9968 );
   fb_StrAssign( (void*)&STRCODE$, -1ll, (void*)"", 1ll, 0 );
   fb_GfxScreenRes( 1920, 1080, 32, 0, 65, 0 );
   fb_Cls( -65536 );
   FBSTRING* vr$9969 = fb_StrAllocTempDescZEx( (uint8*)"", 0ll );
   fb_GfxPaint( (void*)0ull, 0x0p+0f, 0x0p+0f, 4278190080u, 0u, (FBSTRING*)vr$9969, 0, 1073741828 );
   {
    OFFSET$ = 0x0p+0;
    label$11984:;
    {
     _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( SYS_OFFSET$ + 0x1.2Bp+8 )) << (3ll & 63ll))) + OFFSET$, 0x1.p+5 );
    }
    label$11982:;
    OFFSET$ = OFFSET$ + 0x1.p+0;
    label$11981:;
    if( OFFSET$ <= 0x1.p+10 ) goto label$11984;
    label$11983:;
   }
  }
  goto label$9484;
  label$11979:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$11985;
  label$11986:;
  {
   fb_Shell( (FBSTRING*)&STRCODE$ );
   fb_StrAssign( (void*)&STRCODE$, -1ll, (void*)"", 1ll, 0 );
  }
  goto label$9484;
  label$11985:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$11987;
  label$11988:;
  {
   SWCH$ = V$1;
  }
  goto label$9484;
  label$11987:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$11989;
  label$11990:;
  {
   FBSTRING* vr$10006 = fb_CHR( 1, ((int64)__builtin_nearbyint( V$1 )) );
   FBSTRING* vr$10007 = fb_StrLcase2( (FBSTRING*)vr$10006, 0 );
   fb_StrConcatAssign( (void*)&STRCODE$, -1ll, (void*)vr$10007, -1ll, 0 );
  }
  goto label$9484;
  label$11989:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$11991;
  label$11992:;
  {
   fb_PrintString( 1, (FBSTRING*)&STRCODE$, 1 );
   fb_StrAssign( (void*)&STRCODE$, -1ll, (void*)"", 1ll, 0 );
  }
  goto label$9484;
  label$11991:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$11993;
  label$11994:;
  {
   *(double*)((int64)(double*)MEM64$ + ((int64)RVS$ << (3ll & 63ll))) = V$1;
   if( (((int64)__builtin_nearbyint( *(double*)((uint8*)((uint8*)THIS$1 + (C$ << (3ll & 63ll))) + 262144ll) )) & (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) >> (X$ & 63ll))) == 0ll ) goto label$11996;
   {
    if( *(double*)((int64)(double*)MEM64$ + ((int64)RVS$ << (3ll & 63ll))) == (double)(int64)*(uint8*)NIBBLES$ ) goto label$11998;
    {
     _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)), (double)*(uint8*)NIBBLES$ );
    }
    goto label$11997;
    label$11998:;
    {
     _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)), (double)*(uint8*)NIBBLES$ );
    }
    label$11997:;
   }
   goto label$11995;
   label$11996:;
   {
    if( *(double*)((int64)(double*)MEM64$ + ((int64)RVS$ << (3ll & 63ll))) == (double)(int64)*(uint8*)NIBBLES$ ) goto label$12000;
    {
     _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)), (double)*(uint8*)NIBBLES$ );
    }
    goto label$11999;
    label$12000:;
    {
     _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)), (double)*(uint8*)NIBBLES$ );
    }
    label$11999:;
   }
   label$11995:;
  }
  goto label$9484;
  label$11993:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$12001;
  label$12002:;
  {
   fb_FileClose( 1 );
  }
  goto label$9484;
  label$12001:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$12003;
  label$12004:;
  {
   FBSTRING* vr$10115 = fb_CHR( 1, ((int64)__builtin_nearbyint( V$1 )) );
   FBSTRING* vr$10116 = fb_StrLcase2( (FBSTRING*)vr$10115, 0 );
   fb_StrConcatAssign( (void*)&FILENAME$, -1ll, (void*)vr$10116, -1ll, 0 );
  }
  goto label$9484;
  label$12003:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$12005;
  label$12006:;
  {
   _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), 0x1.8142p+15, 0x0p+0 );
   fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"", 1ll, 0 );
  }
  goto label$9484;
  label$12005:;
  if( ADR$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) ) goto label$12007;
  label$12008:;
  {
   {
    if( V$1 != (double)(int64)*(uint8*)NIBBLES$ ) goto label$12010;
    label$12011:;
    {
     *(double*)((int64)(double*)MEM64$ + 395032ll) = 0x0p+0;
     *(double*)((int64)(double*)MEM64$ + 395040ll) = 0x0p+0;
    }
    goto label$12009;
    label$12010:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$12012;
    label$12013:;
    {
     *(double*)((int64)(double*)MEM64$ + 395032ll) = 0x1.91p+9;
     *(double*)((int64)(double*)MEM64$ + 395040ll) = 0x0p+0;
    }
    goto label$12009;
    label$12012:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) ) goto label$12014;
    label$12015:;
    {
     *(double*)((int64)(double*)MEM64$ + 395032ll) = 0x0p+0;
     *(double*)((int64)(double*)MEM64$ + 395040ll) = 0x1.86p+8;
    }
    goto label$12009;
    label$12014:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) ) goto label$12016;
    label$12017:;
    {
     *(double*)((int64)(double*)MEM64$ + 395032ll) = 0x1.91p+9;
     *(double*)((int64)(double*)MEM64$ + 395040ll) = 0x1.86p+8;
    }
    label$12016:;
    label$12009:;
   }
  }
  goto label$9484;
  label$12007:;
  if( ADR$1 != 0x1.8202p+15 ) goto label$12018;
  label$12019:;
  {
   {
    if( V$1 != (double)(int64)*(uint8*)NIBBLES$ ) goto label$12021;
    label$12022:;
    {
     {
      X$ = ((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394952ll) ));
      int64 TMP$5326$6;
      TMP$5326$6 = ((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394960ll) ));
      goto label$12023;
      label$12026:;
      {
       {
        Y$ = ((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394168ll) ));
        int64 TMP$5327$8;
        TMP$5327$8 = ((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394976ll) ));
        goto label$12027;
        label$12030:;
        {
         _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), 0x1.8004p+15, ((double)X$ / __builtin_fabs( (*(double*)((int64)(double*)MEM64$ + 394952ll) - *(double*)((int64)(double*)MEM64$ + 394960ll)) )) * 0x1.FEp+7 );
         _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), 0x1.8006p+15, (double)G$ );
         _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), 0x1.8008p+15, ((double)Y$ / __builtin_fabs( (*(double*)((int64)(double*)MEM64$ + 394168ll) - *(double*)((int64)(double*)MEM64$ + 394976ll)) )) * 0x1.FEp+7 );
         fb_GfxPset( FGIMAGE$, (float)X$, (float)Y$, (uint32)((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394824ll) )), 4, 0 );
        }
        label$12028:;
        Y$ = Y$ + 1ll;
        label$12027:;
        if( Y$ <= TMP$5327$8 ) goto label$12030;
        label$12029:;
       }
       G$ = ((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394928ll) ));
      }
      label$12024:;
      X$ = X$ + 1ll;
      label$12023:;
      if( X$ <= TMP$5326$6 ) goto label$12026;
      label$12025:;
     }
     fb_GfxPut( (void*)0ull, 0x0p+0f, 0x0p+0f, (void*)FGIMAGE$, -65536, -65536, -65536, -65536, 0, 6, (void*)&fb_hPutAlpha, -1, (void*)0ull, (void*)0ull );
    }
    goto label$12020;
    label$12021:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$12031;
    label$12032:;
    {
     double vr$10172 = _ZN12SYSTEM_BUS_T7K_SQRTFEd( THIS$1, 0x1.9p+4 );
     FBSTRING* vr$10173 = fb_DoubleToStr( vr$10172 );
     uint32 vr$10174 = fb_ASC( (FBSTRING*)vr$10173, 1ll );
     _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.p+10, (double)(((int64)vr$10174 + 2ll) & 63ll) );
    }
    goto label$12020;
    label$12031:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) ) goto label$12033;
    label$12034:;
    {
    }
    goto label$12020;
    label$12033:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) ) goto label$12035;
    label$12036:;
    {
     uint32 COLOUR$5;
     __builtin_memset( &COLOUR$5, 0, 4ll );
     double XPOS$5;
     __builtin_memset( &XPOS$5, 0, 8ll );
     double YPOS$5;
     __builtin_memset( &YPOS$5, 0, 8ll );
     uint8 R$5;
     __builtin_memset( &R$5, 0, 1ll );
     uint8 G$5;
     __builtin_memset( &G$5, 0, 1ll );
     uint8 B$5;
     __builtin_memset( &B$5, 0, 1ll );
     uint8 A$5;
     __builtin_memset( &A$5, 0, 1ll );
     {
      int32 XX$6;
      XX$6 = 0;
      label$12040:;
      {
       double PS$7;
       double vr$10191 = _ZN12SYSTEM_BUS_T3MAPEddddd( THIS$1, 0x0p+0, 0x1.Ep+10, (double)XX$6, 0x1.4p+6, 0x1.9p+8 );
       PS$7 = vr$10191;
       uint32 vr$10193 = _ZN12SYSTEM_BUS_T10RAINBOWISHEfa( THIS$1, (float)PS$7, (int8)0 );
       COLOUR$5 = vr$10193;
       {
        int32 YY$8;
        YY$8 = 0;
        label$12044:;
        {
         R$5 = *(uint8*)((uint8*)&COLOUR$5 + 2ll);
         G$5 = *(uint8*)((uint8*)&COLOUR$5 + 1ll);
         B$5 = *(uint8*)&COLOUR$5;
         double vr$10198 = _ZN12SYSTEM_BUS_T3MAPEddddd( THIS$1, 0x1.0Ep+9, 0x0p+0, (double)YY$8, 0x0p+0, 0x1.FEp+7 );
         A$5 = (uint8)((int32)__builtin_nearbyint( vr$10198 ));
         fb_GfxPset( FGIMAGE$, (float)XX$6, (float)YY$8, (uint32)(((((int64)(uint32)R$5 << (16ll & 63ll)) | ((int64)(uint32)G$5 << (8ll & 63ll))) | (int64)(uint32)B$5) | ((int64)(uint32)A$5 << (24ll & 63ll))), 4, 0 );
        }
        label$12042:;
        YY$8 = (int32)((int64)YY$8 + 1ll);
        label$12041:;
        if( (int64)YY$8 <= 540ll ) goto label$12044;
        label$12043:;
       }
      }
      label$12038:;
      XX$6 = (int32)((int64)XX$6 + 1ll);
      label$12037:;
      if( (int64)XX$6 <= 1920ll ) goto label$12040;
      label$12039:;
     }
    }
    goto label$12020;
    label$12035:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) ) goto label$12045;
    label$12046:;
    {
     uint32 COLOUR$5;
     __builtin_memset( &COLOUR$5, 0, 4ll );
     double XPOS$5;
     __builtin_memset( &XPOS$5, 0, 8ll );
     double YPOS$5;
     __builtin_memset( &YPOS$5, 0, 8ll );
     uint8 R$5;
     __builtin_memset( &R$5, 0, 1ll );
     uint8 G$5;
     __builtin_memset( &G$5, 0, 1ll );
     uint8 B$5;
     __builtin_memset( &B$5, 0, 1ll );
     uint8 A$5;
     __builtin_memset( &A$5, 0, 1ll );
     {
      int32 XX$6;
      XX$6 = 0;
      label$12050:;
      {
       double PS$7;
       double vr$10235 = _ZN12SYSTEM_BUS_T3MAPEddddd( THIS$1, 0x0p+0, 0x1.Ep+10, (double)XX$6, 0x1.4p+6, 0x1.9p+8 );
       PS$7 = vr$10235;
       uint32 vr$10237 = _ZN12SYSTEM_BUS_T10RAINBOWISHEfa( THIS$1, (float)PS$7, (int8)0 );
       COLOUR$5 = vr$10237;
       {
        int32 YY$8;
        YY$8 = 0;
        label$12054:;
        {
         R$5 = *(uint8*)((uint8*)&COLOUR$5 + 2ll);
         G$5 = *(uint8*)((uint8*)&COLOUR$5 + 1ll);
         B$5 = *(uint8*)&COLOUR$5;
         double vr$10242 = _ZN12SYSTEM_BUS_T3MAPEddddd( THIS$1, 0x1.0Ep+9, 0x0p+0, (double)YY$8, 0x0p+0, 0x1.FEp+7 );
         A$5 = (uint8)((int32)__builtin_nearbyint( vr$10242 ));
         fb_GfxPset( FGIMAGE$, (float)XX$6, (float)YY$8, (uint32)(((((int64)(uint32)R$5 << (16ll & 63ll)) | ((int64)(uint32)G$5 << (8ll & 63ll))) | (int64)(uint32)B$5) | ((int64)(uint32)A$5 << (24ll & 63ll))), 4, 0 );
        }
        label$12052:;
        YY$8 = (int32)((int64)YY$8 + 1ll);
        label$12051:;
        if( (int64)YY$8 <= 540ll ) goto label$12054;
        label$12053:;
       }
      }
      label$12048:;
      XX$6 = (int32)((int64)XX$6 + 1ll);
      label$12047:;
      if( (int64)XX$6 <= 1920ll ) goto label$12050;
      label$12049:;
     }
     _ZN12SYSTEM_BUS_T10RAINBOWISHEfa( THIS$1, 0x0p+0f, (int8)-1 );
     {
      int32 XX$6;
      XX$6 = 0;
      label$12058:;
      {
       double PS$7;
       double vr$10270 = _ZN12SYSTEM_BUS_T3MAPEddddd( THIS$1, 0x0p+0, 0x1.Ep+10, (double)XX$6, 0x1.4p+6, 0x1.9p+8 );
       PS$7 = vr$10270;
       uint32 vr$10272 = _ZN12SYSTEM_BUS_T10RAINBOWISHEfa( THIS$1, (float)PS$7, (int8)0 );
       COLOUR$5 = vr$10272;
       R$5 = *(uint8*)((uint8*)&COLOUR$5 + 2ll);
       G$5 = *(uint8*)((uint8*)&COLOUR$5 + 1ll);
       B$5 = *(uint8*)&COLOUR$5;
       double RVAL$7;
       double vr$10277 = _ZN12SYSTEM_BUS_T3MAPEddddd( THIS$1, 0x0p+0, 0x1.FEp+7, (double)R$5, 0x1.F4p+9, 0x1.9p+8 );
       RVAL$7 = vr$10277;
       double RAD$7;
       double vr$10279 = _ZN12SYSTEM_BUS_T3MAPEddddd( THIS$1, 0x0p+0, 0x1.FEp+7, (double)R$5, 0x1.p+0, 0x1.p+2 );
       RAD$7 = vr$10279;
       fb_GfxEllipse( FGIMAGE$, (float)XX$6, (float)RVAL$7, (float)RAD$7, 4294901760u, 0x0p+0f, 0x0p+0f, 0x1.921FB8p+2f, -1, 4 );
       double GVAL$7;
       double vr$10284 = _ZN12SYSTEM_BUS_T3MAPEddddd( THIS$1, 0x0p+0, 0x1.FEp+7, (double)G$5, 0x1.F4p+9, 0x1.9p+8 );
       GVAL$7 = vr$10284;
       double vr$10286 = _ZN12SYSTEM_BUS_T3MAPEddddd( THIS$1, 0x0p+0, 0x1.FEp+7, (double)G$5, 0x1.p+0, 0x1.p+2 );
       RAD$7 = vr$10286;
       fb_GfxEllipse( FGIMAGE$, (float)XX$6, (float)GVAL$7, (float)RAD$7, 4278255360u, 0x0p+0f, 0x0p+0f, 0x1.921FB8p+2f, -1, 4 );
       double BVAL$7;
       double vr$10291 = _ZN12SYSTEM_BUS_T3MAPEddddd( THIS$1, 0x0p+0, 0x1.FEp+7, (double)B$5, 0x1.F4p+9, 0x1.9p+8 );
       BVAL$7 = vr$10291;
       double vr$10293 = _ZN12SYSTEM_BUS_T3MAPEddddd( THIS$1, 0x0p+0, 0x1.FEp+7, (double)B$5, 0x1.p+0, 0x1.p+2 );
       RAD$7 = vr$10293;
       fb_GfxEllipse( FGIMAGE$, (float)XX$6, (float)BVAL$7, (float)RAD$7, 4278190335u, 0x0p+0f, 0x0p+0f, 0x1.921FB8p+2f, -1, 4 );
      }
      label$12056:;
      XX$6 = (int32)((int64)XX$6 + 1ll);
      label$12055:;
      if( (int64)XX$6 <= 1920ll ) goto label$12058;
      label$12057:;
     }
     _ZN12SYSTEM_BUS_T6FILTEREPvi( THIS$1, FGIMAGE$, 5 );
     fb_GfxPut( (void*)0ull, 0x0p+0f, 0x0p+0f, (void*)FGIMAGE$, -65536, -65536, -65536, -65536, 0, 6, (void*)&fb_hPutAlpha, -1, (void*)0ull, (void*)0ull );
    }
    goto label$12020;
    label$12045:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) ) goto label$12059;
    label$12060:;
    {
     _ZN12SYSTEM_BUS_T13EXEC_GLSL_120Ev( THIS$1 );
    }
    goto label$12020;
    label$12059:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) ) goto label$12061;
    label$12062:;
    {
     _ZN12SYSTEM_BUS_T12EXEC_GLSL_40Ev( THIS$1 );
    }
    goto label$12020;
    label$12061:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) ) goto label$12063;
    label$12064:;
    {
     _ZN12SYSTEM_BUS_T12EXEC_GLSL_90Ev( THIS$1 );
    }
    goto label$12020;
    label$12063:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) ) goto label$12065;
    label$12066:;
    {
     _ZN12SYSTEM_BUS_T9EXEC_GLSLEv( THIS$1 );
    }
    label$12065:;
    label$12020:;
   }
  }
  goto label$9484;
  label$12018:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$12067;
  label$12068:;
  {
   fb_GfxLock( );
  }
  goto label$9484;
  label$12067:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$12069;
  label$12070:;
  {
   fb_GfxUnlock( ((int32)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) << (3ll & 63ll))) )), ((int32)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) << (3ll & 63ll))) + (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) )) );
  }
  goto label$9484;
  label$12069:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$12071;
  label$12072:;
  {
   fb_GfxUnlock( (int32)YS$, (int32)(YS$ + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) );
  }
  goto label$9484;
  label$12071:;
  if( ADR$1 != 0x1.820Ap+15 ) goto label$12073;
  label$12074:;
  {
   {
    uint64 TMP$5330$4;
    TMP$5330$4 = ((uint64)__builtin_nearbyint( V$1 ));
    goto label$12076;
    label$12077:;
    {
     fb_GfxPset( RASTER$, (float)*(double*)((int64)(double*)MEM64$ + 394840ll), 0x0p+0f, (uint32)((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394824ll) )), 4, 0 );
    }
    goto label$12075;
    label$12078:;
    {
     fb_GfxPset( RASTER$, (float)*(double*)((int64)(double*)MEM64$ + 394840ll), 0x0p+0f, (uint32)((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394832ll) )), 4, 0 );
    }
    goto label$12075;
    label$12079:;
    {
     fb_GfxLine( RASTER$, (float)*(double*)((int64)(double*)MEM64$ + 394840ll), 0x0p+0f, (float)*(double*)((int64)(double*)MEM64$ + 394864ll), 0x0p+0f, (uint32)((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394824ll) )), 0, 65535u, 0 );
    }
    goto label$12075;
    label$12080:;
    {
     fb_GfxLine( RASTER$, (float)*(double*)((int64)(double*)MEM64$ + 394840ll), 0x0p+0f, (float)*(double*)((int64)(double*)MEM64$ + 394864ll), 0x0p+0f, (uint32)((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394832ll) )), 0, 65535u, 0 );
    }
    goto label$12075;
    label$12081:;
    {
     fb_GfxLine( RASTER$, (float)*(double*)((int64)(double*)MEM64$ + 394840ll), 0x0p+0f, (float)*(double*)((int64)(double*)MEM64$ + 394864ll), 0x0p+0f, (uint32)((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394824ll) )), 0, (uint32)((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393584ll) )), 0 );
    }
    goto label$12075;
    label$12082:;
    {
     fb_GfxLine( RASTER$, (float)*(double*)((int64)(double*)MEM64$ + 394840ll), 0x0p+0f, (float)*(double*)((int64)(double*)MEM64$ + 394864ll), 0x0p+0f, (uint32)((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394832ll) )), 0, (uint32)((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 393584ll) )), 0 );
    }
    goto label$12075;
    label$12076:;
    static const void* tmp$5402[6ll] = {
     &&label$12077,
     &&label$12078,
     &&label$12079,
     &&label$12080,
     &&label$12081,
     &&label$12082,
    };
    if( TMP$5330$4 > 5ull ) goto label$12075;
    goto *tmp$5402[TMP$5330$4 - 0ull];
    label$12075:;
   }
  }
  goto label$9484;
  label$12073:;
  if( ADR$1 != 0x1.820Cp+15 ) goto label$12083;
  label$12084:;
  {
   {
    if( V$1 != 0x0p+0 ) goto label$12086;
    label$12087:;
    {
     fb_GfxPset( FGIMAGE$, (float)*(double*)((int64)(double*)MEM64$ + 394888ll), (float)*(double*)((int64)(double*)MEM64$ + 394896ll), (uint32)((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394824ll) )), 4, 0 );
    }
    goto label$12085;
    label$12086:;
    if( V$1 != 0x1.p+0 ) goto label$12088;
    label$12089:;
    {
     fb_GfxPset( BGIMAGE$, (float)*(double*)((int64)(double*)MEM64$ + 394888ll), (float)*(double*)((int64)(double*)MEM64$ + 394896ll), (uint32)((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394832ll) )), 4, 0 );
    }
    goto label$12085;
    label$12088:;
    if( V$1 != 0x1.p+1 ) goto label$12090;
    label$12091:;
    {
     fb_GfxLine( FGIMAGE$, (float)*(double*)((int64)(double*)MEM64$ + 394888ll), (float)*(double*)((int64)(double*)MEM64$ + 394896ll), (float)*(double*)((int64)(double*)MEM64$ + 394904ll), (float)*(double*)((int64)(double*)MEM64$ + 394912ll), (uint32)((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394824ll) )), 0, 65535u, 0 );
    }
    goto label$12085;
    label$12090:;
    if( V$1 != 0x1.8p+1 ) goto label$12092;
    label$12093:;
    {
     fb_GfxLine( BGIMAGE$, (float)*(double*)((int64)(double*)MEM64$ + 394888ll), (float)*(double*)((int64)(double*)MEM64$ + 394896ll), (float)*(double*)((int64)(double*)MEM64$ + 394904ll), (float)*(double*)((int64)(double*)MEM64$ + 394912ll), (uint32)((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394832ll) )), 0, 65535u, 0 );
    }
    goto label$12085;
    label$12092:;
    if( V$1 != 0x1.p+2 ) goto label$12094;
    label$12095:;
    {
     fb_GfxLine( FGIMAGE$, (float)*(double*)((int64)(double*)MEM64$ + 394888ll), (float)*(double*)((int64)(double*)MEM64$ + 394896ll), (float)*(double*)((int64)(double*)MEM64$ + 394904ll), (float)*(double*)((int64)(double*)MEM64$ + 394912ll), (uint32)((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394824ll) )), 1, 65535u, 0 );
    }
    goto label$12085;
    label$12094:;
    if( V$1 != 0x1.4p+2 ) goto label$12096;
    label$12097:;
    {
     fb_GfxLine( BGIMAGE$, (float)*(double*)((int64)(double*)MEM64$ + 394888ll), (float)*(double*)((int64)(double*)MEM64$ + 394896ll), (float)*(double*)((int64)(double*)MEM64$ + 394904ll), (float)*(double*)((int64)(double*)MEM64$ + 394920ll), (uint32)((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394832ll) )), 1, 65535u, 0 );
    }
    goto label$12085;
    label$12096:;
    if( V$1 != 0x1.8p+2 ) goto label$12098;
    label$12099:;
    {
     fb_GfxLine( FGIMAGE$, (float)*(double*)((int64)(double*)MEM64$ + 394888ll), (float)*(double*)((int64)(double*)MEM64$ + 394896ll), (float)*(double*)((int64)(double*)MEM64$ + 394904ll), (float)*(double*)((int64)(double*)MEM64$ + 394912ll), (uint32)((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394824ll) )), 2, 65535u, 0 );
    }
    goto label$12085;
    label$12098:;
    if( V$1 != 0x1.Cp+2 ) goto label$12100;
    label$12101:;
    {
     fb_GfxLine( BGIMAGE$, (float)*(double*)((int64)(double*)MEM64$ + 394888ll), (float)*(double*)((int64)(double*)MEM64$ + 394896ll), (float)*(double*)((int64)(double*)MEM64$ + 394904ll), (float)*(double*)((int64)(double*)MEM64$ + 394912ll), (uint32)((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394832ll) )), 2, 65535u, 0 );
    }
    goto label$12085;
    label$12100:;
    if( V$1 != 0x1.p+3 ) goto label$12102;
    label$12103:;
    {
     fb_GfxEllipse( FGIMAGE$, (float)*(double*)((int64)(double*)MEM64$ + 394888ll), (float)*(double*)((int64)(double*)MEM64$ + 394896ll), (float)*(double*)((int64)(double*)MEM64$ + 394904ll), (uint32)((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394824ll) )), 0x0p+0f, 0x0p+0f, 0x1.921FB8p+2f, 0, 4 );
    }
    goto label$12085;
    label$12102:;
    if( V$1 != 0x1.2p+3 ) goto label$12104;
    label$12105:;
    {
     fb_GfxEllipse( BGIMAGE$, (float)*(double*)((int64)(double*)MEM64$ + 394888ll), (float)*(double*)((int64)(double*)MEM64$ + 394896ll), (float)*(double*)((int64)(double*)MEM64$ + 394904ll), (uint32)((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394832ll) )), 0x0p+0f, 0x0p+0f, 0x1.921FB8p+2f, 0, 4 );
    }
    goto label$12085;
    label$12104:;
    if( V$1 != 0x1.4p+3 ) goto label$12106;
    label$12107:;
    {
     fb_GfxLine( FGIMAGE$, (float)*(double*)((int64)(double*)MEM64$ + 394888ll), (float)*(double*)((int64)(double*)MEM64$ + 394896ll), (float)*(double*)((int64)(double*)MEM64$ + 394904ll), (float)*(double*)((int64)(double*)MEM64$ + 394912ll), (uint32)((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394824ll) )), 0, (uint32)((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394920ll) )), 0 );
    }
    goto label$12085;
    label$12106:;
    if( V$1 != 0x1.6p+3 ) goto label$12108;
    label$12109:;
    {
     fb_GfxLine( BGIMAGE$, (float)*(double*)((int64)(double*)MEM64$ + 394888ll), (float)*(double*)((int64)(double*)MEM64$ + 394896ll), (float)*(double*)((int64)(double*)MEM64$ + 394904ll), (float)*(double*)((int64)(double*)MEM64$ + 394912ll), (uint32)((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394832ll) )), 0, (uint32)((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394920ll) )), 0 );
    }
    label$12108:;
    label$12085:;
   }
  }
  goto label$9484;
  label$12083:;
  if( ADR$1 != 0x1.820Ep+15 ) goto label$12110;
  label$12111:;
  {
   fb_PrintString( 1, (FBSTRING*)&STRCODE$, 0 );
   fb_GfxDrawString( FGIMAGE$, 0x0p+0f, 0x0p+0f, -2147483644, (FBSTRING*)&STRCODE$, 0u, (void*)0ull, 0, (void*)0ull, (void*)0ull, (void*)0ull );
   fb_StrAssign( (void*)&STRCODE$, -1ll, (void*)"", 1ll, 0 );
  }
  goto label$9484;
  label$12110:;
  if( ADR$1 != 0x1.821p+15 ) goto label$12112;
  label$12113:;
  {
   {
    double TMP$5331$4;
    TMP$5331$4 = *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) )) << (3ll & 63ll)));
    if( TMP$5331$4 < 0x1.p+0 ) goto label$12115;
    if( TMP$5331$4 > 0x1.DCp+6 ) goto label$12115;
    label$12116:;
    {
     *(double*)((int64)(double*)MEM64$ + 394912ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+0 )) << (3ll & 63ll))) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+1 )) << (3ll & 63ll))) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.8p+1 )) << (3ll & 63ll))) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+2 )) << (3ll & 63ll))) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.4p+2 )) << (3ll & 63ll)));
     _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) )) << (3ll & 63ll))), *(double*)((int64)(double*)MEM64$ + 394912ll) );
     *(double*)((int64)(double*)MEM64$ + 395344ll) = *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.8p+2;
    }
    goto label$12114;
    label$12115:;
    if( TMP$5331$4 < 0x1.DCp+6 ) goto label$12117;
    if( TMP$5331$4 > 0x1.FCp+6 ) goto label$12117;
    label$12118:;
    {
     _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) )) << (3ll & 63ll))), 0x0p+0 );
     *(double*)((int64)(double*)MEM64$ + 395344ll) = *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+2;
    }
    goto label$12114;
    label$12117:;
    if( TMP$5331$4 < 0x1.p+7 ) goto label$12119;
    if( TMP$5331$4 > 0x1.0Cp+7 ) goto label$12119;
    label$12120:;
    {
     _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) )) << (3ll & 63ll))), 0x0p+0 );
     *(double*)((int64)(double*)MEM64$ + 395344ll) = *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+2;
    }
    goto label$12114;
    label$12119:;
    if( TMP$5331$4 < 0x1.0Ep+7 ) goto label$12121;
    if( TMP$5331$4 > 0x1.44p+7 ) goto label$12121;
    label$12122:;
    {
     _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) )) << (3ll & 63ll))), 0x0p+0 );
     *(double*)((int64)(double*)MEM64$ + 395344ll) = *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+2;
    }
    label$12121:;
    label$12114:;
   }
   *(double*)((int64)(double*)MEM64$ + 395400ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+0 )) << (3ll & 63ll))) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+1 )) << (3ll & 63ll))) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.8p+1 )) << (3ll & 63ll))) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+2 )) << (3ll & 63ll))) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.4p+2 )) << (3ll & 63ll)));
   {
    double TMP$5332$4;
    TMP$5332$4 = *(double*)((int64)(double*)MEM64$ + 395400ll);
    if( TMP$5332$4 < 0x1.p+14 ) goto label$12124;
    if( TMP$5332$4 > 0x1.F9Cp+14 ) goto label$12124;
    label$12125:;
    {
     *(double*)((int64)(double*)MEM64$ + 394912ll) = *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( ADR0$ + 0x1.p+0 )) << (3ll & 63ll)));
     _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, ADR0$, *(double*)((int64)(double*)MEM64$ + 394912ll) );
     *(double*)((int64)(double*)MEM64$ + 395344ll) = *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.8p+1;
    }
    goto label$12123;
    label$12124:;
    if( TMP$5332$4 < 0x1.4p+19 ) goto label$12126;
    if( TMP$5332$4 > 0x1.5FFFEp+19 ) goto label$12126;
    label$12127:;
    {
     _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, *(double*)((int64)(double*)MEM64$ + 395400ll), 0x0p+0 );
     *(double*)((int64)(double*)MEM64$ + 395344ll) = *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.p+2;
    }
    label$12126:;
    label$12123:;
   }
   *(double*)((int64)(double*)MEM64$ + 395344ll) = (double)0ll;
  }
  goto label$9484;
  label$12112:;
  if( ADR$1 != 0x1.8212p+15 ) goto label$12128;
  label$12129:;
  {
   *(double*)((int64)(double*)MEM64$ + 395344ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395352ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395360ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395368ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395376ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 395384ll);
  }
  goto label$9484;
  label$12128:;
  if( ADR$1 != 0x1.822p+15 ) goto label$12130;
  label$12131:;
  {
   *(double*)((int64)(double*)MEM64$ + 395400ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395408ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395416ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395424ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395432ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 395440ll);
  }
  goto label$9484;
  label$12130:;
  if( ADR$1 != 0x1.822Ep+15 ) goto label$12132;
  label$12133:;
  {
   *(double*)((int64)(double*)MEM64$ + 395456ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395464ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395472ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395480ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395488ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 395496ll);
  }
  goto label$9484;
  label$12132:;
  if( ADR$1 != 0x1.823Cp+15 ) goto label$12134;
  label$12135:;
  {
   *(double*)((int64)(double*)MEM64$ + 395512ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395520ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395528ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395536ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395544ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 395552ll);
  }
  goto label$9484;
  label$12134:;
  if( ADR$1 != 0x1.824Ap+15 ) goto label$12136;
  label$12137:;
  {
   *(double*)((int64)(double*)MEM64$ + 395568ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395576ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395584ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395592ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395600ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 395608ll);
  }
  goto label$9484;
  label$12136:;
  if( ADR$1 != 0x1.8258p+15 ) goto label$12138;
  label$12139:;
  {
   *(double*)((int64)(double*)MEM64$ + 395624ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395632ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395640ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395656ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 395664ll);
  }
  goto label$9484;
  label$12138:;
  if( ADR$1 != 0x1.8266p+15 ) goto label$12140;
  label$12141:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = (double)(((((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395688ll) )) << (56ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395696ll) )) << (48ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395704ll) )) << (40ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395712ll) )) << (32ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395720ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395728ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395736ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 395744ll);
  }
  goto label$9484;
  label$12140:;
  if( ADR$1 != 0x1.827Ap+15 ) goto label$12142;
  label$12143:;
  {
   *(double*)((int64)(double*)MEM64$ + 395760ll) = (double)(((((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395768ll) )) << (56ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395776ll) )) << (48ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395784ll) )) << (40ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395792ll) )) << (32ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395800ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395808ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395816ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 395824ll);
  }
  goto label$9484;
  label$12142:;
  if( ADR$1 != 0x1.828Ep+15 ) goto label$12144;
  label$12145:;
  {
   *(double*)((int64)(double*)MEM64$ + 395840ll) = (double)(((((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395848ll) )) << (56ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395856ll) )) << (48ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395864ll) )) << (40ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395872ll) )) << (32ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395880ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395888ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395896ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 395904ll);
  }
  goto label$9484;
  label$12144:;
  if( ADR$1 != 0x1.82A2p+15 ) goto label$12146;
  label$12147:;
  {
   *(double*)((int64)(double*)MEM64$ + 395920ll) = (double)(((((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395928ll) )) << (56ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395936ll) )) << (48ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395944ll) )) << (40ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395952ll) )) << (32ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395960ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395968ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395976ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 395984ll);
  }
  goto label$9484;
  label$12146:;
  if( ADR$1 != 0x1.82B6p+15 ) goto label$12148;
  label$12149:;
  {
   *(double*)((int64)(double*)MEM64$ + 396000ll) = (double)(((((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396008ll) )) << (56ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396016ll) )) << (48ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396024ll) )) << (40ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396032ll) )) << (32ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396040ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396048ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396056ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 396064ll);
  }
  goto label$9484;
  label$12148:;
  if( ADR$1 != 0x1.82CAp+15 ) goto label$12150;
  label$12151:;
  {
   *(double*)((int64)(double*)MEM64$ + 396080ll) = (double)(((((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396088ll) )) << (56ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396096ll) )) << (48ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396104ll) )) << (40ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396112ll) )) << (32ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396120ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396128ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396136ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 396144ll);
  }
  goto label$9484;
  label$12150:;
  if( ADR$1 != 0x1.82DEp+15 ) goto label$12152;
  label$12153:;
  {
   *(double*)((int64)(double*)MEM64$ + 396000ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$9484;
  label$12152:;
  if( ADR$1 != 0x1.82Ep+15 ) goto label$12154;
  label$12155:;
  {
   *(double*)((int64)(double*)MEM64$ + 396000ll) = *(double*)((int64)(double*)MEM64$ + 394896ll);
  }
  goto label$9484;
  label$12154:;
  if( ADR$1 != 0x1.82E2p+15 ) goto label$12156;
  label$12157:;
  {
   *(double*)((int64)(double*)MEM64$ + 396000ll) = *(double*)((int64)(double*)MEM64$ + 394904ll);
  }
  goto label$9484;
  label$12156:;
  if( ADR$1 != 0x1.82E4p+15 ) goto label$12158;
  label$12159:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$9484;
  label$12158:;
  if( ADR$1 != 0x1.82E6p+15 ) goto label$12160;
  label$12161:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = *(double*)((int64)(double*)MEM64$ + 394896ll);
  }
  goto label$9484;
  label$12160:;
  if( ADR$1 != 0x1.82E8p+15 ) goto label$12162;
  label$12163:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = *(double*)((int64)(double*)MEM64$ + 394904ll);
  }
  goto label$9484;
  label$12162:;
  if( ADR$1 != 0x1.82EAp+15 ) goto label$12164;
  label$12165:;
  {
   *(double*)((int64)(double*)MEM64$ + 395760ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$9484;
  label$12164:;
  if( ADR$1 != 0x1.82ECp+15 ) goto label$12166;
  label$12167:;
  {
   *(double*)((int64)(double*)MEM64$ + 395760ll) = *(double*)((int64)(double*)MEM64$ + 394896ll);
  }
  goto label$9484;
  label$12166:;
  if( ADR$1 != 0x1.82EEp+15 ) goto label$12168;
  label$12169:;
  {
   *(double*)((int64)(double*)MEM64$ + 395760ll) = *(double*)((int64)(double*)MEM64$ + 394904ll);
  }
  goto label$9484;
  label$12168:;
  if( ADR$1 != 0x1.82Fp+15 ) goto label$12170;
  label$12171:;
  {
   *(double*)((int64)(double*)MEM64$ + 395920ll) = *(double*)((int64)(double*)MEM64$ + 394888ll);
  }
  goto label$9484;
  label$12170:;
  if( ADR$1 != 0x1.82F2p+15 ) goto label$12172;
  label$12173:;
  {
   {
    if( V$1 != (double)(int64)*(uint8*)NIBBLES$ ) goto label$12175;
    label$12176:;
    {
     *(double*)((int64)(double*)MEM64$ + 395920ll) = *(double*)((int64)(double*)MEM64$ + 395120ll);
    }
    goto label$12174;
    label$12175:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$12177;
    label$12178:;
    {
     *(double*)((int64)(double*)MEM64$ + 395920ll) = *(double*)((int64)(double*)MEM64$ + 394904ll);
    }
    label$12177:;
    label$12174:;
   }
  }
  goto label$9484;
  label$12172:;
  if( ADR$1 != 0x1.82F4p+15 ) goto label$12179;
  label$12180:;
  {
   *(double*)((int64)(double*)MEM64$ + 393232ll) = *(double*)((int64)(double*)MEM64$ + 395680ll);
  }
  goto label$9484;
  label$12179:;
  if( ADR$1 != 0x1.82F6p+15 ) goto label$12181;
  label$12182:;
  {
   *(double*)((int64)(double*)MEM64$ + 393232ll) = *(double*)((int64)(double*)MEM64$ + 395680ll);
  }
  goto label$9484;
  label$12181:;
  if( ADR$1 != 0x1.82F8p+15 ) goto label$12183;
  label$12184:;
  {
   *(double*)((int64)(double*)MEM64$ + 393232ll) = *(double*)((int64)(double*)MEM64$ + 395680ll);
  }
  goto label$9484;
  label$12183:;
  if( ADR$1 != 0x1.82FAp+15 ) goto label$12185;
  label$12186:;
  {
   *(double*)((int64)(double*)MEM64$ + 393240ll) = *(double*)((int64)(double*)MEM64$ + 395680ll);
  }
  goto label$9484;
  label$12185:;
  if( ADR$1 != 0x1.82FCp+15 ) goto label$12187;
  label$12188:;
  {
   *(double*)((int64)(double*)MEM64$ + 393240ll) = *(double*)((int64)(double*)MEM64$ + 395680ll);
  }
  goto label$9484;
  label$12187:;
  if( ADR$1 != 0x1.82FEp+15 ) goto label$12189;
  label$12190:;
  {
   *(double*)((int64)(double*)MEM64$ + 393240ll) = *(double*)((int64)(double*)MEM64$ + 395680ll);
  }
  goto label$9484;
  label$12189:;
  if( ADR$1 != 0x1.83p+15 ) goto label$12191;
  label$12192:;
  {
   *(double*)((int64)(double*)MEM64$ + 393248ll) = *(double*)((int64)(double*)MEM64$ + 395680ll);
  }
  goto label$9484;
  label$12191:;
  if( ADR$1 != 0x1.D122p+15 ) goto label$12193;
  label$12194:;
  {
   *(double*)((int64)(double*)MEM64$ + 393248ll) = *(double*)((int64)(double*)MEM64$ + 395680ll);
  }
  goto label$9484;
  label$12193:;
  if( ADR$1 != 0x1.8304p+15 ) goto label$12195;
  label$12196:;
  {
   *(double*)((int64)(double*)MEM64$ + 393248ll) = *(double*)((int64)(double*)MEM64$ + 395680ll);
  }
  goto label$9484;
  label$12195:;
  if( ADR$1 != 0x1.8306p+15 ) goto label$12197;
  label$12198:;
  {
   *(double*)((int64)(double*)MEM64$ + 393256ll) = *(double*)((int64)(double*)MEM64$ + 395680ll);
  }
  goto label$9484;
  label$12197:;
  if( ADR$1 != 0x1.8308p+15 ) goto label$12199;
  label$12200:;
  {
   *(double*)((int64)(double*)MEM64$ + 393256ll) = *(double*)((int64)(double*)MEM64$ + 395680ll);
  }
  goto label$9484;
  label$12199:;
  if( ADR$1 != 0x1.830Ap+15 ) goto label$12201;
  label$12202:;
  {
   *(double*)((int64)(double*)MEM64$ + 393256ll) = *(double*)((int64)(double*)MEM64$ + 395680ll);
  }
  goto label$9484;
  label$12201:;
  if( ADR$1 != 0x1.830Cp+15 ) goto label$12203;
  label$12204:;
  {
   *(double*)((int64)(double*)MEM64$ + 394840ll) = *(double*)((int64)(double*)MEM64$ + 395680ll);
  }
  goto label$9484;
  label$12203:;
  if( ADR$1 != 0x1.830Ep+15 ) goto label$12205;
  label$12206:;
  {
   *(double*)((int64)(double*)MEM64$ + 394864ll) = *(double*)((int64)(double*)MEM64$ + 395680ll);
  }
  goto label$9484;
  label$12205:;
  if( ADR$1 != 0x1.831p+15 ) goto label$12207;
  label$12208:;
  {
   *(double*)((int64)(double*)MEM64$ + 394848ll) = *(double*)((int64)(double*)MEM64$ + 395680ll);
  }
  goto label$9484;
  label$12207:;
  if( ADR$1 != 0x1.8312p+15 ) goto label$12209;
  label$12210:;
  {
   *(double*)((int64)(double*)MEM64$ + 394872ll) = *(double*)((int64)(double*)MEM64$ + 395680ll);
  }
  goto label$9484;
  label$12209:;
  if( ADR$1 != 0x1.8314p+15 ) goto label$12211;
  label$12212:;
  {
   *(double*)((int64)(double*)MEM64$ + 394856ll) = *(double*)((int64)(double*)MEM64$ + 395680ll);
  }
  goto label$9484;
  label$12211:;
  if( ADR$1 != 0x1.8316p+15 ) goto label$12213;
  label$12214:;
  {
   *(double*)((int64)(double*)MEM64$ + 394880ll) = *(double*)((int64)(double*)MEM64$ + 395680ll);
  }
  goto label$9484;
  label$12213:;
  if( ADR$1 != 0x1.8318p+15 ) goto label$12215;
  label$12216:;
  {
   *(double*)((int64)(double*)MEM64$ + 394824ll) = *(double*)((int64)(double*)MEM64$ + 395680ll);
  }
  goto label$9484;
  label$12215:;
  if( ADR$1 != 0x1.831Ap+15 ) goto label$12217;
  label$12218:;
  {
   *(double*)((int64)(double*)MEM64$ + 394832ll) = *(double*)((int64)(double*)MEM64$ + 395680ll);
  }
  goto label$9484;
  label$12217:;
  if( ADR$1 != 0x1.831Cp+15 ) goto label$12219;
  label$12220:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = *(double*)((int64)(double*)MEM64$ + 394840ll);
  }
  goto label$9484;
  label$12219:;
  if( ADR$1 != 0x1.831Ep+15 ) goto label$12221;
  label$12222:;
  {
   *(double*)((int64)(double*)MEM64$ + 394840ll) = *(double*)((int64)(double*)MEM64$ + 395680ll);
  }
  goto label$9484;
  label$12221:;
  if( ADR$1 != 0x1.832p+15 ) goto label$12223;
  label$12224:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = *(double*)((int64)(double*)MEM64$ + 394848ll);
  }
  goto label$9484;
  label$12223:;
  if( ADR$1 != 0x1.8322p+15 ) goto label$12225;
  label$12226:;
  {
   *(double*)((int64)(double*)MEM64$ + 394848ll) = *(double*)((int64)(double*)MEM64$ + 395680ll);
  }
  goto label$9484;
  label$12225:;
  if( ADR$1 != 0x1.8324p+15 ) goto label$12227;
  label$12228:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = *(double*)((int64)(double*)MEM64$ + 394856ll);
  }
  goto label$9484;
  label$12227:;
  if( ADR$1 != 0x1.8326p+15 ) goto label$12229;
  label$12230:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = *(double*)((int64)(double*)MEM64$ + 394864ll);
  }
  goto label$9484;
  label$12229:;
  if( ADR$1 != 0x1.8328p+15 ) goto label$12231;
  label$12232:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = *(double*)((int64)(double*)MEM64$ + 394872ll);
  }
  goto label$9484;
  label$12231:;
  if( ADR$1 != 0x1.832Ap+15 ) goto label$12233;
  label$12234:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = *(double*)((int64)(double*)MEM64$ + 394880ll);
  }
  goto label$9484;
  label$12233:;
  if( ADR$1 != 0x1.832Cp+15 ) goto label$12235;
  label$12236:;
  {
   *(double*)((int64)(double*)MEM64$ + 394880ll) = *(double*)((int64)(double*)MEM64$ + 395680ll);
  }
  goto label$9484;
  label$12235:;
  if( ADR$1 != 0x1.832Ep+15 ) goto label$12237;
  label$12238:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = *(double*)((int64)(double*)MEM64$ + 394872ll);
  }
  goto label$9484;
  label$12237:;
  if( ADR$1 != 0x1.833p+15 ) goto label$12239;
  label$12240:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = *(double*)((int64)(double*)MEM64$ + 394880ll);
  }
  goto label$9484;
  label$12239:;
  if( ADR$1 != 0x1.8332p+15 ) goto label$12241;
  label$12242:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = *(double*)((int64)(double*)MEM64$ + 394880ll);
  }
  goto label$9484;
  label$12241:;
  if( ADR$1 != 0x1.8334p+15 ) goto label$12243;
  label$12244:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = *(double*)((int64)(double*)MEM64$ + 395760ll) + *(double*)((int64)(double*)MEM64$ + 395840ll);
  }
  goto label$9484;
  label$12243:;
  if( ADR$1 != 0x1.8336p+15 ) goto label$12245;
  label$12246:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = *(double*)((int64)(double*)MEM64$ + 395760ll) - *(double*)((int64)(double*)MEM64$ + 395840ll);
  }
  goto label$9484;
  label$12245:;
  if( ADR$1 != 0x1.8338p+15 ) goto label$12247;
  label$12248:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = *(double*)((int64)(double*)MEM64$ + 395760ll) * *(double*)((int64)(double*)MEM64$ + 395840ll);
  }
  goto label$9484;
  label$12247:;
  if( ADR$1 != 0x1.833Ap+15 ) goto label$12249;
  label$12250:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = *(double*)((int64)(double*)MEM64$ + 395760ll) / *(double*)((int64)(double*)MEM64$ + 395840ll);
  }
  goto label$9484;
  label$12249:;
  if( ADR$1 != 0x1.833Cp+15 ) goto label$12251;
  label$12252:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = (double)(((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395760ll) )) / ((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395840ll) )));
  }
  goto label$9484;
  label$12251:;
  if( ADR$1 != 0x1.833Ep+15 ) goto label$12253;
  label$12254:;
  {
   double vr$10741 = pow( *(double*)((int64)(double*)MEM64$ + 395760ll), *(double*)((int64)(double*)MEM64$ + 395840ll) );
   *(double*)((int64)(double*)MEM64$ + 395680ll) = vr$10741;
  }
  goto label$9484;
  label$12253:;
  if( ADR$1 != 0x1.834p+15 ) goto label$12255;
  label$12256:;
  {
   double vr$10742 = _ZN12SYSTEM_BUS_T8K_MODULOEdd( THIS$1, *(double*)((int64)(double*)MEM64$ + 395760ll), *(double*)((int64)(double*)MEM64$ + 395840ll) );
   *(double*)((int64)(double*)MEM64$ + 395680ll) = vr$10742;
  }
  goto label$9484;
  label$12255:;
  if( ADR$1 != 0x1.8342p+15 ) goto label$12257;
  label$12258:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = -(*(double*)((int64)(double*)MEM64$ + 395680ll));
  }
  goto label$9484;
  label$12257:;
  if( ADR$1 != 0x1.8344p+15 ) goto label$12259;
  label$12260:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = (double)(((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395760ll) )) << (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395840ll) )) & 63ll));
  }
  goto label$9484;
  label$12259:;
  if( ADR$1 != 0x1.8346p+15 ) goto label$12261;
  label$12262:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = (double)(((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395760ll) )) >> (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395840ll) )) & 63ll));
  }
  goto label$9484;
  label$12261:;
  if( ADR$1 != 0x1.8348p+15 ) goto label$12263;
  label$12264:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = (double)(int64)-(*(double*)((int64)(double*)MEM64$ + 395760ll) == *(double*)((int64)(double*)MEM64$ + 395840ll));
  }
  goto label$9484;
  label$12263:;
  if( ADR$1 != 0x1.834Ap+15 ) goto label$12265;
  label$12266:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = (double)(int64)-(*(double*)((int64)(double*)MEM64$ + 395760ll) != *(double*)((int64)(double*)MEM64$ + 395840ll));
  }
  goto label$9484;
  label$12265:;
  if( ADR$1 != 0x1.834Cp+15 ) goto label$12267;
  label$12268:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = (double)(int64)-(*(double*)((int64)(double*)MEM64$ + 395760ll) < *(double*)((int64)(double*)MEM64$ + 395840ll));
  }
  goto label$9484;
  label$12267:;
  if( ADR$1 != 0x1.834Ep+15 ) goto label$12269;
  label$12270:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = (double)(int64)-(*(double*)((int64)(double*)MEM64$ + 395760ll) <= *(double*)((int64)(double*)MEM64$ + 395840ll));
  }
  goto label$9484;
  label$12269:;
  if( ADR$1 != 0x1.835p+15 ) goto label$12271;
  label$12272:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = (double)(int64)-(*(double*)((int64)(double*)MEM64$ + 395760ll) >= *(double*)((int64)(double*)MEM64$ + 395840ll));
  }
  goto label$9484;
  label$12271:;
  if( ADR$1 != 0x1.8352p+15 ) goto label$12273;
  label$12274:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = (double)(int64)-(*(double*)((int64)(double*)MEM64$ + 395760ll) > *(double*)((int64)(double*)MEM64$ + 395840ll));
  }
  goto label$9484;
  label$12273:;
  if( ADR$1 != 0x1.8354p+15 ) goto label$12275;
  label$12276:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = (double)(((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395760ll) )) & ((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395840ll) )));
  }
  goto label$9484;
  label$12275:;
  if( ADR$1 != 0x1.8356p+15 ) goto label$12277;
  label$12278:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = (double)~(((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394960ll) )) ^ ((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395040ll) )));
  }
  goto label$9484;
  label$12277:;
  if( ADR$1 != 0x1.8358p+15 ) goto label$12279;
  label$12280:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = (double)(~((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394960ll) )) | ((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395040ll) )));
  }
  goto label$9484;
  label$12279:;
  if( ADR$1 != 0x1.835Ap+15 ) goto label$12281;
  label$12282:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = (double)(((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395760ll) )) | ((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395840ll) )));
  }
  goto label$9484;
  label$12281:;
  if( ADR$1 != 0x1.835Cp+15 ) goto label$12283;
  label$12284:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = (double)(((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395760ll) )) ^ ((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395840ll) )));
  }
  goto label$9484;
  label$12283:;
  if( ADR$1 != 0x1.835Ep+15 ) goto label$12285;
  label$12286:;
  {
   *(double*)((int64)(double*)MEM64$ + 395760ll) = *(double*)((int64)(double*)MEM64$ + 395680ll);
  }
  goto label$9484;
  label$12285:;
  if( ADR$1 != 0x1.836p+15 ) goto label$12287;
  label$12288:;
  {
   *(double*)((int64)(double*)MEM64$ + 395840ll) = *(double*)((int64)(double*)MEM64$ + 395680ll);
  }
  goto label$9484;
  label$12287:;
  if( ADR$1 != 0x1.8362p+15 ) goto label$12289;
  label$12290:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = *(double*)((int64)(double*)MEM64$ + 395680ll) + 0x1.p+0;
  }
  goto label$9484;
  label$12289:;
  if( ADR$1 != 0x1.8364p+15 ) goto label$12291;
  label$12292:;
  {
   *(double*)((int64)(double*)MEM64$ + 395760ll) = *(double*)((int64)(double*)MEM64$ + 395760ll) + 0x1.p+0;
  }
  goto label$9484;
  label$12291:;
  if( ADR$1 != 0x1.8366p+15 ) goto label$12293;
  label$12294:;
  {
   *(double*)((int64)(double*)MEM64$ + 395840ll) = *(double*)((int64)(double*)MEM64$ + 395840ll) + 0x1.p+0;
  }
  goto label$9484;
  label$12293:;
  if( ADR$1 != 0x1.8368p+15 ) goto label$12295;
  label$12296:;
  {
   *(double*)((int64)(double*)MEM64$ + 395680ll) = *(double*)((int64)(double*)MEM64$ + 395680ll) + -0x1.p+0;
  }
  goto label$9484;
  label$12295:;
  if( ADR$1 != 0x1.836Ap+15 ) goto label$12297;
  label$12298:;
  {
   *(double*)((int64)(double*)MEM64$ + 395760ll) = *(double*)((int64)(double*)MEM64$ + 395760ll) + -0x1.p+0;
  }
  goto label$9484;
  label$12297:;
  if( ADR$1 != 0x1.836Cp+15 ) goto label$12299;
  label$12300:;
  {
   *(double*)((int64)(double*)MEM64$ + 395840ll) = *(double*)((int64)(double*)MEM64$ + 395840ll) + -0x1.p+0;
  }
  goto label$9484;
  label$12299:;
  if( ADR$1 != 0x1.836Ep+15 ) goto label$12301;
  label$12302:;
  {
   if( *(double*)((int64)(double*)MEM64$ + 395760ll) != *(double*)((int64)(double*)MEM64$ + 395840ll) ) goto label$12304;
   {
    *(double*)((int64)(double*)MEM64$ + 396000ll) = V$1;
    label$12304:;
   }
  }
  goto label$9484;
  label$12301:;
  if( ADR$1 != 0x1.837p+15 ) goto label$12305;
  label$12306:;
  {
   if( *(double*)((int64)(double*)MEM64$ + 395760ll) == *(double*)((int64)(double*)MEM64$ + 395840ll) ) goto label$12308;
   {
    *(double*)((int64)(double*)MEM64$ + 396000ll) = V$1;
    label$12308:;
   }
  }
  goto label$9484;
  label$12305:;
  if( ADR$1 != 0x1.8372p+15 ) goto label$12309;
  label$12310:;
  {
   if( *(double*)((int64)(double*)MEM64$ + 395760ll) <= *(double*)((int64)(double*)MEM64$ + 395840ll) ) goto label$12312;
   {
    *(double*)((int64)(double*)MEM64$ + 396000ll) = V$1;
    label$12312:;
   }
  }
  goto label$9484;
  label$12309:;
  if( ADR$1 != 0x1.8374p+15 ) goto label$12313;
  label$12314:;
  {
   if( *(double*)((int64)(double*)MEM64$ + 395760ll) < *(double*)((int64)(double*)MEM64$ + 395840ll) ) goto label$12316;
   {
    *(double*)((int64)(double*)MEM64$ + 396000ll) = V$1;
    label$12316:;
   }
  }
  goto label$9484;
  label$12313:;
  if( ADR$1 != 0x1.8376p+15 ) goto label$12317;
  label$12318:;
  {
   if( *(double*)((int64)(double*)MEM64$ + 395760ll) > *(double*)((int64)(double*)MEM64$ + 395840ll) ) goto label$12320;
   {
    *(double*)((int64)(double*)MEM64$ + 396000ll) = V$1;
    label$12320:;
   }
  }
  goto label$9484;
  label$12317:;
  if( ADR$1 != 0x1.8378p+15 ) goto label$12321;
  label$12322:;
  {
   if( *(double*)((int64)(double*)MEM64$ + 395760ll) <= *(double*)((int64)(double*)MEM64$ + 395840ll) ) goto label$12324;
   {
    *(double*)((int64)(double*)MEM64$ + 396000ll) = V$1;
    label$12324:;
   }
  }
  goto label$9484;
  label$12321:;
  if( ADR$1 != 0x1.837Ap+15 ) goto label$12325;
  label$12326:;
  {
   *(double*)((int64)(double*)MEM64$ + 396000ll) = V$1;
  }
  goto label$9484;
  label$12325:;
  if( ADR$1 != 0x1.837Cp+15 ) goto label$12327;
  label$12328:;
  {
   double vr$10790 = _ZN12SYSTEM_BUS_T5PEEKBEd( THIS$1, V$1 );
   *(double*)((int64)(double*)MEM64$ + 395680ll) = vr$10790;
  }
  goto label$9484;
  label$12327:;
  if( ADR$1 != 0x1.837Ep+15 ) goto label$12329;
  label$12330:;
  {
   _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, V$1, *(double*)((int64)(double*)MEM64$ + 395680ll) );
  }
  goto label$9484;
  label$12329:;
  if( ADR$1 != 0x1.838p+15 ) goto label$12331;
  label$12332:;
  {
   uint64 TMP$3;
   __builtin_memset( &TMP$3, 0, 8ll );
   uint64 TIMES$3;
   __builtin_memset( &TIMES$3, 0, 8ll );
   *(double*)((int64)(double*)MEM64$ + 397040ll) = *(double*)((int64)(double*)MEM64$ + 396000ll);
   *(double*)((int64)(double*)MEM64$ + 395680ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396000ll) + 0x1.p+0 )) << (3ll & 63ll))) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396000ll) + 0x1.p+1 )) << (3ll & 63ll))) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396000ll) + 0x1.8p+1 )) << (3ll & 63ll))) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396000ll) + 0x1.p+2 )) << (3ll & 63ll))) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396000ll) + 0x1.4p+2 )) << (3ll & 63ll)));
   *(double*)((int64)(double*)MEM64$ + 395760ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396000ll) + 0x1.8p+2 )) << (3ll & 63ll))) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396000ll) + 0x1.Cp+2 )) << (3ll & 63ll))) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396000ll) + 0x1.p+3 )) << (3ll & 63ll))) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396000ll) + 0x1.2p+3 )) << (3ll & 63ll))) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396000ll) + 0x1.4p+3 )) << (3ll & 63ll)));
   *(double*)((int64)(double*)MEM64$ + 396968ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396000ll) + 0x1.6p+3 )) << (3ll & 63ll))) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396000ll) + 0x1.8p+3 )) << (3ll & 63ll))) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396000ll) + 0x1.Ap+3 )) << (3ll & 63ll))) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396000ll) + 0x1.Cp+3 )) << (3ll & 63ll))) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395344ll) + 0x1.Ep+3 )) << (3ll & 63ll)));
   label$12333:;
   if( (double)TMP$3 == *(double*)((int64)(double*)MEM64$ + 396968ll) ) goto label$12334;
   {
    {
     PC$ = *(double*)((int64)(double*)MEM64$ + 395680ll);
     double TMP$5333$5;
     TMP$5333$5 = *(double*)((int64)(double*)MEM64$ + 395760ll);
     goto label$12335;
     label$12338:;
     {
      _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( PC$ )) << (3ll & 63ll))), 0x0p+0 );
     }
     label$12336:;
     PC$ = PC$ + 0x1.p+0;
     label$12335:;
     if( PC$ <= TMP$5333$5 ) goto label$12338;
     label$12337:;
    }
    TMP$3 = (TMP$3 + 1ull) % ((uint64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396968ll) ));
   }
   goto label$12333;
   label$12334:;
  }
  goto label$9484;
  label$12331:;
  if( ADR$1 != 0x1.8382p+15 ) goto label$12339;
  label$12340:;
  {
   *(double*)((int64)(double*)MEM64$ + 396968ll) = (double)(((((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396976ll) )) << (56ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396984ll) )) << (48ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 396992ll) )) << (40ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 397000ll) )) << (32ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 397008ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 397016ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 397024ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 397032ll);
  }
  goto label$9484;
  label$12339:;
  if( ADR$1 != 0x1.8384p+15 ) goto label$12341;
  label$12342:;
  {
   *(double*)((int64)(double*)MEM64$ + 397040ll) = (double)(((((((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 397048ll) )) << (56ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 397048ll) )) << (48ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 397064ll) )) << (40ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 397072ll) )) << (32ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 397080ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 397088ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 397096ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 397104ll);
   *(double*)((int64)(double*)MEM64$ + 396000ll) = (double)0ll;
  }
  goto label$9484;
  label$12341:;
  if( ADR$1 != 0x1.8386p+15 ) goto label$12343;
  label$12344:;
  {
   *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)(((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395624ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395632ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 395640ll);
  }
  goto label$9484;
  label$12343:;
  if( ADR$1 != 0x1.8388p+15 ) goto label$12345;
  label$12346:;
  {
   *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)(((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395624ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395632ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 395640ll);
  }
  goto label$9484;
  label$12345:;
  if( ADR$1 != 0x1.838Ap+15 ) goto label$12347;
  label$12348:;
  {
   *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)(((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395624ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395632ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 395640ll);
  }
  goto label$9484;
  label$12347:;
  if( ADR$1 != 0x1.838Cp+15 ) goto label$12349;
  label$12350:;
  {
   *(double*)((int64)(double*)MEM64$ + 395656ll) = (double)(((((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395648ll) )) << (24ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395624ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395632ll) )) << (8ll & 63ll))) + *(double*)((int64)(double*)MEM64$ + 395640ll);
  }
  goto label$9484;
  label$12349:;
  if( ADR$1 != 0x1.838Ep+15 ) goto label$12351;
  label$12352:;
  {
   fb_GfxLine( FGIMAGE$, (float)*(double*)((int64)(double*)MEM64$ + 394840ll), (float)*(double*)((int64)(double*)MEM64$ + 394848ll), (float)*(double*)((int64)(double*)MEM64$ + 394864ll), (float)*(double*)((int64)(double*)MEM64$ + 394872ll), (uint32)((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 394824ll) )), 2, 65535u, 0 );
  }
  goto label$9484;
  label$12351:;
  if( ADR$1 != 0x1.83CEp+15 ) goto label$12353;
  label$12354:;
  {
   {
    if( V$1 != (double)(int64)*(uint8*)NIBBLES$ ) goto label$12356;
    label$12357:;
    {
     fb_GfxLine( FGIMAGE$, 0x0p+0f, 0x0p+0f, 0x1.DFCp+10f, 0x1.0DCp+10f, (uint32)*(uint8*)NIBBLES$, 2, 65535u, 0 );
    }
    goto label$12355;
    label$12356:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$12358;
    label$12359:;
    {
     fb_GfxLine( BGIMAGE$, 0x0p+0f, 0x0p+0f, 0x1.DFCp+10f, 0x1.0DCp+10f, (uint32)*(uint8*)NIBBLES$, 2, 65535u, 0 );
    }
    label$12358:;
    label$12355:;
   }
  }
  goto label$9484;
  label$12353:;
  if( ADR$1 != 0x1.83Dp+15 ) goto label$12360;
  label$12361:;
  {
   FBSTRING TMP$5334$3;
   FBSTRING TMP$5335$3;
   uint8 TMP$3;
   __builtin_memset( &TMP$3, 0, 1ll );
   {
    uint64 C$4;
    C$4 = 0ull;
    label$12365:;
    {
     *(double*)((uint8*)((uint8*)THIS$1 + ((int64)C$4 << (3ll & 63ll))) + 262144ll) = 0x0p+0;
    }
    label$12363:;
    C$4 = C$4 + 1ull;
    label$12362:;
    if( C$4 <= 8191ull ) goto label$12365;
    label$12364:;
   }
   FBSTRING* vr$10985 = fb_DoubleToStr( V$1 + 0x1.FEp+7 );
   __builtin_memset( &TMP$5334$3, 0, 24ll );
   FBSTRING* vr$10988 = fb_StrConcat( &TMP$5334$3, (void*)"./chargen/", 11ll, (void*)vr$10985, -1ll );
   __builtin_memset( &TMP$5335$3, 0, 24ll );
   FBSTRING* vr$10991 = fb_StrConcat( &TMP$5335$3, (void*)vr$10988, -1ll, (void*)".c64", 5ll );
   fb_FileOpen( (FBSTRING*)vr$10991, 0u, 0u, 0u, 1, 0 );
   {
    uint64 I$4;
    I$4 = 0ull;
    uint64 TMP$5336$4;
    int64 vr$10992 = fb_FileSize( 1 );
    TMP$5336$4 = (uint64)vr$10992;
    goto label$12366;
    label$12369:;
    {
     fb_FileGetLarge( 1, 0ll, (void*)&TMP$3, 1ull );
     *(double*)((uint8*)((uint8*)THIS$1 + ((int64)I$4 << (3ll & 63ll))) + 262144ll) = (double)TMP$3;
    }
    label$12367:;
    I$4 = I$4 + 1ull;
    label$12366:;
    if( I$4 <= TMP$5336$4 ) goto label$12369;
    label$12368:;
   }
   fb_FileClose( 1 );
  }
  goto label$9484;
  label$12360:;
  if( ADR$1 != 0x1.83D2p+15 ) goto label$12370;
  label$12371:;
  {
   FBSTRING TMP$5337$3;
   FBSTRING TMP$5338$3;
   uint8 TMP$3;
   __builtin_memset( &TMP$3, 0, 1ll );
   {
    uint64 C$4;
    C$4 = 0ull;
    label$12375:;
    {
     *(double*)((uint8*)((uint8*)THIS$1 + ((int64)C$4 << (3ll & 63ll))) + 262144ll) = 0x0p+0;
    }
    label$12373:;
    C$4 = C$4 + 1ull;
    label$12372:;
    if( C$4 <= 8191ull ) goto label$12375;
    label$12374:;
   }
   FBSTRING* vr$11003 = fb_DoubleToStr( V$1 + 0x1.FEp+8 );
   __builtin_memset( &TMP$5337$3, 0, 24ll );
   FBSTRING* vr$11006 = fb_StrConcat( &TMP$5337$3, (void*)"./chargen/", 11ll, (void*)vr$11003, -1ll );
   __builtin_memset( &TMP$5338$3, 0, 24ll );
   FBSTRING* vr$11009 = fb_StrConcat( &TMP$5338$3, (void*)vr$11006, -1ll, (void*)".c64", 5ll );
   fb_FileOpen( (FBSTRING*)vr$11009, 0u, 0u, 0u, 1, 0 );
   {
    uint64 I$4;
    I$4 = 0ull;
    uint64 TMP$5339$4;
    int64 vr$11010 = fb_FileSize( 1 );
    TMP$5339$4 = (uint64)vr$11010;
    goto label$12376;
    label$12379:;
    {
     fb_FileGetLarge( 1, 0ll, (void*)&TMP$3, 1ull );
     *(double*)((uint8*)((uint8*)THIS$1 + ((int64)I$4 << (3ll & 63ll))) + 262144ll) = (double)TMP$3;
    }
    label$12377:;
    I$4 = I$4 + 1ull;
    label$12376:;
    if( I$4 <= TMP$5339$4 ) goto label$12379;
    label$12378:;
   }
   fb_FileClose( 1 );
  }
  goto label$9484;
  label$12370:;
  if( ADR$1 != 0x1.83D4p+15 ) goto label$12380;
  label$12381:;
  {
   {
    if( V$1 != 0x0p+0 ) goto label$12383;
    label$12384:;
    {
     FBSTRING TMP$5340$5;
     FBSTRING TMP$5341$5;
     FBSTRING TMP$5342$5;
     FBSTRING TMP$5343$5;
     FBSTRING TMP$5344$5;
     FBSTRING* vr$11016 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394896ll) );
     FBSTRING* vr$11017 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394888ll) );
     FBSTRING* vr$11018 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394824ll) );
     __builtin_memset( &TMP$5340$5, 0, 24ll );
     FBSTRING* vr$11021 = fb_StrConcat( &TMP$5340$5, (void*)"c", 2ll, (void*)vr$11018, -1ll );
     __builtin_memset( &TMP$5341$5, 0, 24ll );
     FBSTRING* vr$11024 = fb_StrConcat( &TMP$5341$5, (void*)vr$11021, -1ll, (void*)"M", 2ll );
     __builtin_memset( &TMP$5342$5, 0, 24ll );
     FBSTRING* vr$11027 = fb_StrConcat( &TMP$5342$5, (void*)vr$11024, -1ll, (void*)vr$11017, -1ll );
     __builtin_memset( &TMP$5343$5, 0, 24ll );
     FBSTRING* vr$11030 = fb_StrConcat( &TMP$5343$5, (void*)vr$11027, -1ll, (void*)",", 2ll );
     __builtin_memset( &TMP$5344$5, 0, 24ll );
     FBSTRING* vr$11033 = fb_StrConcat( &TMP$5344$5, (void*)vr$11030, -1ll, (void*)vr$11016, -1ll );
     fb_GfxDraw( FGIMAGE$, (FBSTRING*)vr$11033 );
    }
    goto label$12382;
    label$12383:;
    if( V$1 != 0x1.p+0 ) goto label$12385;
    label$12386:;
    {
     FBSTRING TMP$5345$5;
     FBSTRING TMP$5346$5;
     FBSTRING TMP$5347$5;
     FBSTRING* vr$11034 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394888ll) );
     FBSTRING* vr$11035 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394824ll) );
     __builtin_memset( &TMP$5345$5, 0, 24ll );
     FBSTRING* vr$11038 = fb_StrConcat( &TMP$5345$5, (void*)"c", 2ll, (void*)vr$11035, -1ll );
     __builtin_memset( &TMP$5346$5, 0, 24ll );
     FBSTRING* vr$11041 = fb_StrConcat( &TMP$5346$5, (void*)vr$11038, -1ll, (void*)"u", 2ll );
     __builtin_memset( &TMP$5347$5, 0, 24ll );
     FBSTRING* vr$11044 = fb_StrConcat( &TMP$5347$5, (void*)vr$11041, -1ll, (void*)vr$11034, -1ll );
     fb_GfxDraw( FGIMAGE$, (FBSTRING*)vr$11044 );
    }
    goto label$12382;
    label$12385:;
    if( V$1 != 0x1.p+1 ) goto label$12387;
    label$12388:;
    {
     FBSTRING TMP$5348$5;
     FBSTRING TMP$5349$5;
     FBSTRING TMP$5350$5;
     FBSTRING* vr$11045 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 386888ll) );
     FBSTRING* vr$11046 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394824ll) );
     __builtin_memset( &TMP$5348$5, 0, 24ll );
     FBSTRING* vr$11049 = fb_StrConcat( &TMP$5348$5, (void*)"c", 2ll, (void*)vr$11046, -1ll );
     __builtin_memset( &TMP$5349$5, 0, 24ll );
     FBSTRING* vr$11052 = fb_StrConcat( &TMP$5349$5, (void*)vr$11049, -1ll, (void*)"d", 2ll );
     __builtin_memset( &TMP$5350$5, 0, 24ll );
     FBSTRING* vr$11055 = fb_StrConcat( &TMP$5350$5, (void*)vr$11052, -1ll, (void*)vr$11045, -1ll );
     fb_GfxDraw( FGIMAGE$, (FBSTRING*)vr$11055 );
    }
    goto label$12382;
    label$12387:;
    if( V$1 != 0x1.8p+1 ) goto label$12389;
    label$12390:;
    {
     FBSTRING TMP$5351$5;
     FBSTRING TMP$5352$5;
     FBSTRING TMP$5353$5;
     FBSTRING* vr$11056 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 386888ll) );
     FBSTRING* vr$11057 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394824ll) );
     __builtin_memset( &TMP$5351$5, 0, 24ll );
     FBSTRING* vr$11060 = fb_StrConcat( &TMP$5351$5, (void*)"c", 2ll, (void*)vr$11057, -1ll );
     __builtin_memset( &TMP$5352$5, 0, 24ll );
     FBSTRING* vr$11063 = fb_StrConcat( &TMP$5352$5, (void*)vr$11060, -1ll, (void*)"l", 2ll );
     __builtin_memset( &TMP$5353$5, 0, 24ll );
     FBSTRING* vr$11066 = fb_StrConcat( &TMP$5353$5, (void*)vr$11063, -1ll, (void*)vr$11056, -1ll );
     fb_GfxDraw( FGIMAGE$, (FBSTRING*)vr$11066 );
    }
    goto label$12382;
    label$12389:;
    if( V$1 != 0x1.p+2 ) goto label$12391;
    label$12392:;
    {
     FBSTRING TMP$5354$5;
     FBSTRING TMP$5355$5;
     FBSTRING TMP$5356$5;
     FBSTRING* vr$11067 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394888ll) );
     FBSTRING* vr$11068 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394824ll) );
     __builtin_memset( &TMP$5354$5, 0, 24ll );
     FBSTRING* vr$11071 = fb_StrConcat( &TMP$5354$5, (void*)"c", 2ll, (void*)vr$11068, -1ll );
     __builtin_memset( &TMP$5355$5, 0, 24ll );
     FBSTRING* vr$11074 = fb_StrConcat( &TMP$5355$5, (void*)vr$11071, -1ll, (void*)"r", 2ll );
     __builtin_memset( &TMP$5356$5, 0, 24ll );
     FBSTRING* vr$11077 = fb_StrConcat( &TMP$5356$5, (void*)vr$11074, -1ll, (void*)vr$11067, -1ll );
     fb_GfxDraw( FGIMAGE$, (FBSTRING*)vr$11077 );
    }
    goto label$12382;
    label$12391:;
    if( V$1 != 0x1.4p+2 ) goto label$12393;
    label$12394:;
    {
     FBSTRING TMP$5357$5;
     FBSTRING TMP$5358$5;
     FBSTRING TMP$5359$5;
     FBSTRING* vr$11078 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394888ll) );
     FBSTRING* vr$11079 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394824ll) );
     __builtin_memset( &TMP$5357$5, 0, 24ll );
     FBSTRING* vr$11082 = fb_StrConcat( &TMP$5357$5, (void*)"c", 2ll, (void*)vr$11079, -1ll );
     __builtin_memset( &TMP$5358$5, 0, 24ll );
     FBSTRING* vr$11085 = fb_StrConcat( &TMP$5358$5, (void*)vr$11082, -1ll, (void*)"e", 2ll );
     __builtin_memset( &TMP$5359$5, 0, 24ll );
     FBSTRING* vr$11088 = fb_StrConcat( &TMP$5359$5, (void*)vr$11085, -1ll, (void*)vr$11078, -1ll );
     fb_GfxDraw( FGIMAGE$, (FBSTRING*)vr$11088 );
    }
    goto label$12382;
    label$12393:;
    if( V$1 != 0x1.8p+2 ) goto label$12395;
    label$12396:;
    {
     FBSTRING TMP$5360$5;
     FBSTRING TMP$5361$5;
     FBSTRING TMP$5362$5;
     FBSTRING* vr$11089 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394888ll) );
     FBSTRING* vr$11090 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394824ll) );
     __builtin_memset( &TMP$5360$5, 0, 24ll );
     FBSTRING* vr$11093 = fb_StrConcat( &TMP$5360$5, (void*)"c", 2ll, (void*)vr$11090, -1ll );
     __builtin_memset( &TMP$5361$5, 0, 24ll );
     FBSTRING* vr$11096 = fb_StrConcat( &TMP$5361$5, (void*)vr$11093, -1ll, (void*)"f", 2ll );
     __builtin_memset( &TMP$5362$5, 0, 24ll );
     FBSTRING* vr$11099 = fb_StrConcat( &TMP$5362$5, (void*)vr$11096, -1ll, (void*)vr$11089, -1ll );
     fb_GfxDraw( FGIMAGE$, (FBSTRING*)vr$11099 );
    }
    goto label$12382;
    label$12395:;
    if( V$1 != 0x1.Cp+2 ) goto label$12397;
    label$12398:;
    {
     FBSTRING TMP$5363$5;
     FBSTRING TMP$5364$5;
     FBSTRING TMP$5365$5;
     FBSTRING* vr$11100 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394888ll) );
     FBSTRING* vr$11101 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394824ll) );
     __builtin_memset( &TMP$5363$5, 0, 24ll );
     FBSTRING* vr$11104 = fb_StrConcat( &TMP$5363$5, (void*)"c", 2ll, (void*)vr$11101, -1ll );
     __builtin_memset( &TMP$5364$5, 0, 24ll );
     FBSTRING* vr$11107 = fb_StrConcat( &TMP$5364$5, (void*)vr$11104, -1ll, (void*)"g", 2ll );
     __builtin_memset( &TMP$5365$5, 0, 24ll );
     FBSTRING* vr$11110 = fb_StrConcat( &TMP$5365$5, (void*)vr$11107, -1ll, (void*)vr$11100, -1ll );
     fb_GfxDraw( FGIMAGE$, (FBSTRING*)vr$11110 );
    }
    goto label$12382;
    label$12397:;
    if( V$1 != 0x1.p+3 ) goto label$12399;
    label$12400:;
    {
     FBSTRING TMP$5366$5;
     FBSTRING TMP$5367$5;
     FBSTRING TMP$5368$5;
     FBSTRING* vr$11111 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394888ll) );
     FBSTRING* vr$11112 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394824ll) );
     __builtin_memset( &TMP$5366$5, 0, 24ll );
     FBSTRING* vr$11115 = fb_StrConcat( &TMP$5366$5, (void*)"c", 2ll, (void*)vr$11112, -1ll );
     __builtin_memset( &TMP$5367$5, 0, 24ll );
     FBSTRING* vr$11118 = fb_StrConcat( &TMP$5367$5, (void*)vr$11115, -1ll, (void*)"h", 2ll );
     __builtin_memset( &TMP$5368$5, 0, 24ll );
     FBSTRING* vr$11121 = fb_StrConcat( &TMP$5368$5, (void*)vr$11118, -1ll, (void*)vr$11111, -1ll );
     fb_GfxDraw( FGIMAGE$, (FBSTRING*)vr$11121 );
    }
    goto label$12382;
    label$12399:;
    if( V$1 != 0x1.2p+3 ) goto label$12401;
    label$12402:;
    {
     FBSTRING TMP$5369$5;
     FBSTRING* vr$11122 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394824ll) );
     __builtin_memset( &TMP$5369$5, 0, 24ll );
     FBSTRING* vr$11125 = fb_StrConcat( &TMP$5369$5, (void*)"c", 2ll, (void*)vr$11122, -1ll );
     fb_GfxDraw( FGIMAGE$, (FBSTRING*)vr$11125 );
    }
    goto label$12382;
    label$12401:;
    if( V$1 != 0x1.4p+3 ) goto label$12403;
    label$12404:;
    {
     FBSTRING TMP$5370$5;
     FBSTRING TMP$5371$5;
     FBSTRING TMP$5372$5;
     FBSTRING TMP$5373$5;
     FBSTRING TMP$5374$5;
     FBSTRING* vr$11126 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394896ll) );
     FBSTRING* vr$11127 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394888ll) );
     FBSTRING* vr$11128 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394824ll) );
     __builtin_memset( &TMP$5370$5, 0, 24ll );
     FBSTRING* vr$11131 = fb_StrConcat( &TMP$5370$5, (void*)"c", 2ll, (void*)vr$11128, -1ll );
     __builtin_memset( &TMP$5371$5, 0, 24ll );
     FBSTRING* vr$11134 = fb_StrConcat( &TMP$5371$5, (void*)vr$11131, -1ll, (void*)"p", 2ll );
     __builtin_memset( &TMP$5372$5, 0, 24ll );
     FBSTRING* vr$11137 = fb_StrConcat( &TMP$5372$5, (void*)vr$11134, -1ll, (void*)vr$11127, -1ll );
     __builtin_memset( &TMP$5373$5, 0, 24ll );
     FBSTRING* vr$11140 = fb_StrConcat( &TMP$5373$5, (void*)vr$11137, -1ll, (void*)",", 2ll );
     __builtin_memset( &TMP$5374$5, 0, 24ll );
     FBSTRING* vr$11143 = fb_StrConcat( &TMP$5374$5, (void*)vr$11140, -1ll, (void*)vr$11126, -1ll );
     fb_GfxDraw( FGIMAGE$, (FBSTRING*)vr$11143 );
    }
    goto label$12382;
    label$12403:;
    if( V$1 != 0x1.6p+3 ) goto label$12405;
    label$12406:;
    {
     FBSTRING TMP$5375$5;
     FBSTRING TMP$5376$5;
     FBSTRING TMP$5377$5;
     FBSTRING* vr$11144 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394888ll) );
     FBSTRING* vr$11145 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394824ll) );
     __builtin_memset( &TMP$5375$5, 0, 24ll );
     FBSTRING* vr$11148 = fb_StrConcat( &TMP$5375$5, (void*)"c", 2ll, (void*)vr$11145, -1ll );
     __builtin_memset( &TMP$5376$5, 0, 24ll );
     FBSTRING* vr$11151 = fb_StrConcat( &TMP$5376$5, (void*)vr$11148, -1ll, (void*)"s", 2ll );
     __builtin_memset( &TMP$5377$5, 0, 24ll );
     FBSTRING* vr$11154 = fb_StrConcat( &TMP$5377$5, (void*)vr$11151, -1ll, (void*)vr$11144, -1ll );
     fb_GfxDraw( FGIMAGE$, (FBSTRING*)vr$11154 );
    }
    goto label$12382;
    label$12405:;
    if( V$1 != 0x1.8p+3 ) goto label$12407;
    label$12408:;
    {
     FBSTRING TMP$5378$5;
     FBSTRING TMP$5379$5;
     FBSTRING TMP$5380$5;
     FBSTRING* vr$11155 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394888ll) );
     FBSTRING* vr$11156 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394824ll) );
     __builtin_memset( &TMP$5378$5, 0, 24ll );
     FBSTRING* vr$11159 = fb_StrConcat( &TMP$5378$5, (void*)"c", 2ll, (void*)vr$11156, -1ll );
     __builtin_memset( &TMP$5379$5, 0, 24ll );
     FBSTRING* vr$11162 = fb_StrConcat( &TMP$5379$5, (void*)vr$11159, -1ll, (void*)"a", 2ll );
     __builtin_memset( &TMP$5380$5, 0, 24ll );
     FBSTRING* vr$11165 = fb_StrConcat( &TMP$5380$5, (void*)vr$11162, -1ll, (void*)vr$11155, -1ll );
     fb_GfxDraw( FGIMAGE$, (FBSTRING*)vr$11165 );
    }
    goto label$12382;
    label$12407:;
    if( V$1 != 0x1.Ap+3 ) goto label$12409;
    label$12410:;
    {
     FBSTRING TMP$5382$5;
     FBSTRING TMP$5383$5;
     FBSTRING TMP$5384$5;
     FBSTRING* vr$11166 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394888ll) );
     FBSTRING* vr$11167 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394824ll) );
     __builtin_memset( &TMP$5382$5, 0, 24ll );
     FBSTRING* vr$11170 = fb_StrConcat( &TMP$5382$5, (void*)"c", 2ll, (void*)vr$11167, -1ll );
     __builtin_memset( &TMP$5383$5, 0, 24ll );
     FBSTRING* vr$11173 = fb_StrConcat( &TMP$5383$5, (void*)vr$11170, -1ll, (void*)"ta", 3ll );
     __builtin_memset( &TMP$5384$5, 0, 24ll );
     FBSTRING* vr$11176 = fb_StrConcat( &TMP$5384$5, (void*)vr$11173, -1ll, (void*)vr$11166, -1ll );
     fb_GfxDraw( FGIMAGE$, (FBSTRING*)vr$11176 );
    }
    goto label$12382;
    label$12409:;
    if( V$1 != 0x1.Cp+3 ) goto label$12411;
    label$12412:;
    {
     FBSTRING TMP$5385$5;
     FBSTRING TMP$5386$5;
     FBSTRING* vr$11177 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394824ll) );
     __builtin_memset( &TMP$5385$5, 0, 24ll );
     FBSTRING* vr$11180 = fb_StrConcat( &TMP$5385$5, (void*)"c", 2ll, (void*)vr$11177, -1ll );
     __builtin_memset( &TMP$5386$5, 0, 24ll );
     FBSTRING* vr$11183 = fb_StrConcat( &TMP$5386$5, (void*)vr$11180, -1ll, (void*)&STRCODE$, -1ll );
     fb_GfxDraw( FGIMAGE$, (FBSTRING*)vr$11183 );
     fb_StrAssign( (void*)&STRCODE$, -1ll, (void*)"", 1ll, 0 );
    }
    goto label$12382;
    label$12411:;
    if( V$1 != 0x1.Ep+3 ) goto label$12413;
    label$12414:;
    {
     FBSTRING TMP$5387$5;
     __builtin_memset( &TMP$5387$5, 0, 24ll );
     FBSTRING* vr$11186 = fb_StrConcat( &TMP$5387$5, (void*)"b", 2ll, (void*)&STRCODE$, -1ll );
     fb_GfxDraw( FGIMAGE$, (FBSTRING*)vr$11186 );
     fb_StrAssign( (void*)&STRCODE$, -1ll, (void*)"", 1ll, 0 );
    }
    goto label$12382;
    label$12413:;
    if( V$1 != 0x1.p+4 ) goto label$12415;
    label$12416:;
    {
     FBSTRING TMP$5388$5;
     FBSTRING TMP$5389$5;
     FBSTRING TMP$5390$5;
     FBSTRING* vr$11187 = fb_DoubleToStr( *(double*)((int64)(double*)MEM64$ + 394824ll) );
     __builtin_memset( &TMP$5388$5, 0, 24ll );
     FBSTRING* vr$11190 = fb_StrConcat( &TMP$5388$5, (void*)"c", 2ll, (void*)vr$11187, -1ll );
     __builtin_memset( &TMP$5389$5, 0, 24ll );
     FBSTRING* vr$11193 = fb_StrConcat( &TMP$5389$5, (void*)vr$11190, -1ll, (void*)"n", 2ll );
     __builtin_memset( &TMP$5390$5, 0, 24ll );
     FBSTRING* vr$11196 = fb_StrConcat( &TMP$5390$5, (void*)vr$11193, -1ll, (void*)&STRCODE$, -1ll );
     fb_GfxDraw( FGIMAGE$, (FBSTRING*)vr$11196 );
     fb_StrAssign( (void*)&STRCODE$, -1ll, (void*)"", 1ll, 0 );
    }
    label$12415:;
    label$12382:;
   }
  }
  goto label$9484;
  label$12380:;
  if( ADR$1 != 0x1.83D6p+15 ) goto label$12417;
  label$12418:;
  {
   {
    if( V$1 != 0x0p+0 ) goto label$12420;
    label$12421:;
    {
     _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (*(double*)((int64)(double*)MEM64$ + 395608ll) + *(double*)((int64)(double*)MEM64$ + 394888ll)) + (*(double*)((int64)(double*)MEM64$ + 394896ll) * 0x1.4p+5), *(double*)((int64)(double*)MEM64$ + 394944ll) );
    }
    label$12420:;
    label$12419:;
   }
  }
  goto label$9484;
  label$12417:;
  if( ADR$1 != 0x1.83D8p+15 ) goto label$12422;
  label$12423:;
  {
   {
    if( V$1 != 0x0p+0 ) goto label$12425;
    label$12426:;
    {
     _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (*(double*)((int64)(double*)MEM64$ + 394888ll) + (*(double*)((int64)(double*)MEM64$ + 394896ll) * 0x1.68p+6)) + 0x1.p+14, *(double*)((int64)(double*)MEM64$ + 394944ll) );
    }
    label$12425:;
    label$12424:;
   }
  }
  goto label$9484;
  label$12422:;
  if( ADR$1 != 0x1.83DAp+15 ) goto label$12427;
  label$12428:;
  {
   {
    if( V$1 != 0x0p+0 ) goto label$12430;
    label$12431:;
    {
     _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, (*(double*)((int64)(double*)MEM64$ + 394888ll) + (*(double*)((int64)(double*)MEM64$ + 394896ll) * 0x1.4p+7)) + 0x1.Ap+19, *(double*)((int64)(double*)MEM64$ + 394944ll) );
    }
    label$12430:;
    label$12429:;
   }
  }
  goto label$9484;
  label$12427:;
  if( ADR$1 < *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) ) goto label$12432;
  if( ADR$1 > (*(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) + (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) ) goto label$12432;
  label$12433:;
  {
   ADR$1 = ADR$1 - *(double*)((int64)(double*)MEM64$ + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll)));
   C$ = ((uint64)__builtin_nearbyint( V$1 ));
   C$ = (uint64)C$ << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) & 63ll);
   C$ = ((uint64)__builtin_nearbyint( (double)(uint64)C$ + *(double*)((int64)(double*)MEM64$ + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) << (3ll & 63ll))) ));
   if( *(double*)((int64)(double*)MEM64$ + ((int64)RVS$ << (3ll & 63ll))) == (double)(int64)*(uint8*)NIBBLES$ ) goto label$12435;
   {
    *(double*)&C$ = (double)(((int64)__builtin_nearbyint( *(double*)&C$ )) & (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)));
    label$12435:;
   }
   if( *(double*)((int64)(double*)MEM64$ + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) << (3ll & 63ll))) > (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$12437;
   {
    *(double*)((int64)(double*)MEM64$ + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) << (3ll & 63ll))) = (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
    label$12437:;
   }
   _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)), (double)*(uint8*)NIBBLES$ );
   if( *(double*)((int64)(double*)MEM64$ + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) << (3ll & 63ll))) != (double)(int64)*(uint8*)NIBBLES$ ) goto label$12439;
   {
    XS$ = (uint64)(((int64)__builtin_nearbyint( ADR$1 )) % (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)));
    XS$ = (uint64)XS$ << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) & 63ll);
    XS$ = ((uint64)__builtin_nearbyint( ((double)(uint64)XS$ + (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll))) + 0x1.Cp+1 ));
    YS$ = (uint64)(((int64)__builtin_nearbyint( ADR$1 )) / (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)));
    YS$ = (uint64)YS$ << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) & 63ll);
    YS$ = ((uint64)__builtin_nearbyint( ((double)(uint64)YS$ + (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll))) + 0x1.Cp+1 ));
    *(double*)&Y$ = (double)*(uint8*)NIBBLES$;
    *(double*)&X$ = (double)*(uint8*)NIBBLES$;
    label$12440:;
    if( ((int64)-((double)Y$ == *(double*)((int64)(double*)MEM64$ + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) << (3ll & 63ll)))) & (int64)-((double)X$ == *(double*)((int64)(double*)MEM64$ + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) << (3ll & 63ll))))) != 0ll ) goto label$12441;
    {
     *(double*)((int64)(double*)MEM64$ + 394840ll) = ((double)(XS$ + X$) * 0x1.5p+2) + *(double*)((int64)(double*)MEM64$ + 395032ll);
     *(double*)((int64)(double*)MEM64$ + 394848ll) = ((double)(YS$ + Y$) * 0x1.1p+2) + *(double*)((int64)(double*)MEM64$ + 395040ll);
     *(double*)((int64)(double*)MEM64$ + 394864ll) = (((double)(XS$ + X$) * 0x1.5p+2) + *(double*)((int64)(double*)MEM64$ + 395032ll)) + 0x1.Cp+2;
     *(double*)((int64)(double*)MEM64$ + 394872ll) = (((double)(YS$ + Y$) * 0x1.1p+2) + *(double*)((int64)(double*)MEM64$ + 395040ll)) + 0x1.Cp+2;
     double vr$11417 = _ZN12SYSTEM_BUS_T6PEEK64Ed( THIS$1, 0x1.81F8p+15 );
     _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), 0x1.81F8p+15, vr$11417 );
     X$ = (uint64)X$ + (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
     if( (double)(uint64)X$ <= *(double*)((int64)(double*)MEM64$ + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) << (3ll & 63ll))) ) goto label$12443;
     {
      X$ = (uint64)*(uint8*)NIBBLES$;
      Y$ = (uint64)Y$ + (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
      C$ = (uint64)C$ + (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
      *(double*)((int64)(double*)MEM64$ + 426128ll) = (double)(((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 426128ll) + 0x1.p+0 )) % 1079ll);
     }
     label$12443:;
     label$12442:;
    }
    goto label$12440;
    label$12441:;
    _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)), (double)*(uint8*)NIBBLES$ );
   }
   goto label$12438;
   label$12439:;
   if( *(double*)((int64)(double*)MEM64$ + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) << (3ll & 63ll))) != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$12444;
   {
    XS$ = ((int64)__builtin_nearbyint( ADR$1 )) % 40ll;
    XS$ = XS$ << (3ll & 63ll);
    XS$ = XS$ + 32ll;
    YS$ = ((int64)__builtin_nearbyint( ADR$1 )) / 40ll;
    YS$ = YS$ << (3ll & 63ll);
    YS$ = YS$ + 32ll;
    Y$ = ((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395088ll) ));
    X$ = ((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395080ll) ));
    label$12445:;
    if( ((int64)-(Y$ == 0ll) & (int64)-(X$ == 0ll)) != 0ll ) goto label$12446;
    {
     *(double*)((int64)(double*)MEM64$ + 394864ll) = (double)(((XS$ - X$) * 5ll) + 2ll) + *(double*)((int64)(double*)MEM64$ + 395032ll);
     *(double*)((int64)(double*)MEM64$ + 394872ll) = (double)(((YS$ - Y$) << (2ll & 63ll)) + 2ll) + *(double*)((int64)(double*)MEM64$ + 395040ll);
     *(double*)((int64)(double*)MEM64$ + 394840ll) = (double)(((XS$ - X$) * 5ll) + -2ll) + *(double*)((int64)(double*)MEM64$ + 395032ll);
     *(double*)((int64)(double*)MEM64$ + 394848ll) = (double)(((YS$ - Y$) << (2ll & 63ll)) + -2ll) + *(double*)((int64)(double*)MEM64$ + 395040ll);
     double vr$11497 = _ZN12SYSTEM_BUS_T6PEEK64Ed( THIS$1, 0x1.81F8p+15 );
     _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.81F8p+15, vr$11497 );
     X$ = X$ + -1ll;
     if( X$ >= 0ll ) goto label$12448;
     {
      X$ = ((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395080ll) ));
      Y$ = Y$ + -1ll;
      C$ = C$ + 1ll;
      *(double*)((int64)(double*)MEM64$ + 426128ll) = (double)(((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 426128ll) + 0x1.p+0 )) % 1079ll);
     }
     label$12448:;
     label$12447:;
    }
    goto label$12445;
    label$12446:;
    fb_GfxUnlock( (int32)YS$, (int32)(YS$ + 8ll) );
   }
   goto label$12438;
   label$12444:;
   if( *(double*)((int64)(double*)MEM64$ + 395064ll) != 0x1.p+1 ) goto label$12449;
   {
    XS$ = ((int64)__builtin_nearbyint( ADR$1 )) % 40ll;
    XS$ = XS$ << (3ll & 63ll);
    XS$ = ((int64)__builtin_nearbyint( (double)XS$ + 0x1.88p+4 ));
    YS$ = ((int64)__builtin_nearbyint( ADR$1 )) / 40ll;
    YS$ = YS$ << (3ll & 63ll);
    YS$ = ((int64)__builtin_nearbyint( (double)YS$ + 0x1.88p+4 ));
    Y$ = 0ll;
    X$ = 0ll;
    label$12450:;
    if( ((int64)-((double)Y$ == *(double*)((int64)(double*)MEM64$ + 395088ll)) & (int64)-((double)X$ == *(double*)((int64)(double*)MEM64$ + 395080ll))) != 0ll ) goto label$12451;
    {
     *(double*)((int64)(double*)MEM64$ + 394840ll) = ((double)((XS$ + X$) * 5ll) / 0x1.p+1) + *(double*)((int64)(double*)MEM64$ + 395032ll);
     *(double*)((int64)(double*)MEM64$ + 394848ll) = ((double)((YS$ + Y$) << (2ll & 63ll)) / 0x1.p+1) + *(double*)((int64)(double*)MEM64$ + 395040ll);
     *(double*)((int64)(double*)MEM64$ + 394864ll) = ((double)(((XS$ + X$) * 5ll) + 7ll) / 0x1.p+1) + *(double*)((int64)(double*)MEM64$ + 395032ll);
     *(double*)((int64)(double*)MEM64$ + 394872ll) = ((double)(((YS$ + Y$) << (2ll & 63ll)) + 4ll) / 0x1.p+1) + *(double*)((int64)(double*)MEM64$ + 395040ll);
     double vr$11548 = _ZN12SYSTEM_BUS_T6PEEK64Ed( THIS$1, 0x1.81F8p+15 );
     _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.81F8p+15, vr$11548 );
     X$ = X$ + 1ll;
     if( (double)X$ <= *(double*)((int64)(double*)MEM64$ + 395080ll) ) goto label$12453;
     {
      X$ = 0ll;
      Y$ = Y$ + 1ll;
      C$ = C$ + 1ll;
      *(double*)((int64)(double*)MEM64$ + 426128ll) = (double)(((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 426128ll) + 0x1.p+0 )) % 1079ll);
     }
     label$12453:;
     label$12452:;
    }
    goto label$12450;
    label$12451:;
    _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.8208p+15, 0x0p+0 );
   }
   goto label$12438;
   label$12449:;
   if( *(double*)((int64)(double*)MEM64$ + 395064ll) != 0x1.8p+1 ) goto label$12454;
   {
    XS$ = ((int64)__builtin_nearbyint( ADR$1 )) % 80ll;
    XS$ = XS$ << (3ll & 63ll);
    XS$ = XS$ + 32ll;
    YS$ = ((int64)__builtin_nearbyint( ADR$1 )) / 80ll;
    YS$ = YS$ << (3ll & 63ll);
    YS$ = YS$ + 32ll;
    {
     Y$ = ((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395088ll) ));
     goto label$12455;
     label$12458:;
     {
      {
       X$ = 0ll;
       int64 TMP$5391$7;
       TMP$5391$7 = ((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 395080ll) ));
       goto label$12459;
       label$12462:;
       {
        *(double*)((int64)(double*)MEM64$ + 394864ll) = ((((double)(XS$ - X$) * 0x1.4p+2) + 0x1.p+1) / 0x1.p+1) + *(double*)((int64)(double*)MEM64$ + 395032ll);
        *(double*)((int64)(double*)MEM64$ + 394872ll) = ((((double)(YS$ - Y$) * 0x1.p+2) + 0x1.p+1) / 0x1.p+1) + *(double*)((int64)(double*)MEM64$ + 395040ll);
        *(double*)((int64)(double*)MEM64$ + 394840ll) = ((((double)(XS$ - X$) * 0x1.4p+2) + -0x1.p+1) / 0x1.p+1) + *(double*)((int64)(double*)MEM64$ + 395032ll);
        *(double*)((int64)(double*)MEM64$ + 394848ll) = ((((double)(YS$ - Y$) * 0x1.p+2) + -0x1.p+1) / 0x1.p+1) + *(double*)((int64)(double*)MEM64$ + 395040ll);
        double vr$11591 = _ZN12SYSTEM_BUS_T6PEEK64Ed( THIS$1, 0x1.81F8p+15 );
        _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, 0x1.81F8p+15, vr$11591 );
       }
       label$12460:;
       X$ = X$ + 1ll;
       label$12459:;
       if( X$ <= TMP$5391$7 ) goto label$12462;
       label$12461:;
      }
      *(double*)((int64)(double*)MEM64$ + 426128ll) = (double)(((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 426128ll) + 0x1.p+0 )) % 1079ll);
      C$ = ((int64)__builtin_nearbyint( (double)C$ + 0x1.p+0 ));
     }
     label$12456:;
     Y$ = Y$ + -1ll;
     label$12455:;
     if( Y$ >= 0ll ) goto label$12458;
     label$12457:;
    }
    fb_GfxUnlock( (int32)YS$, ((int32)__builtin_nearbyint( (double)YS$ + 0x1.p+3 )) );
   }
   label$12454:;
   label$12438:;
  }
  goto label$9484;
  label$12432:;
  if( ADR$1 < (*(double*)((int64)(double*)MEM64$ + 395608ll) + 0x1.p+10) ) goto label$12463;
  if( ADR$1 > (*(double*)((int64)(double*)MEM64$ + 395608ll) + 0x1.01Cp+10) ) goto label$12463;
  label$12464:;
  {
   {
    if( ADR$1 != (*(double*)((int64)(double*)MEM64$ + 395608ll) + 0x1.p+10) ) goto label$12466;
    label$12467:;
    {
    }
    goto label$12465;
    label$12466:;
    if( ADR$1 != (*(double*)((int64)(double*)MEM64$ + 395608ll) + 0x1.01p+10) ) goto label$12468;
    label$12469:;
    {
    }
    goto label$12465;
    label$12468:;
    if( ADR$1 != (*(double*)((int64)(double*)MEM64$ + 395608ll) + 0x1.014p+10) ) goto label$12470;
    label$12471:;
    {
    }
    goto label$12465;
    label$12470:;
    if( ADR$1 != (*(double*)((int64)(double*)MEM64$ + 395608ll) + 0x1.018p+10) ) goto label$12472;
    label$12473:;
    {
    }
    goto label$12465;
    label$12472:;
    if( ADR$1 != (*(double*)((int64)(double*)MEM64$ + 395608ll) + 0x1.01Cp+10) ) goto label$12474;
    label$12475:;
    {
    }
    label$12474:;
    label$12465:;
   }
  }
  goto label$9484;
  label$12463:;
  if( ADR$1 < (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) ) goto label$12476;
  if( ADR$1 > (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) ) goto label$12476;
  label$12477:;
  {
   _ZN12SYSTEM_BUS_T5POKEBEdd( THIS$1, ADR$1, V$1 );
  }
  goto label$9484;
  label$12476:;
  if( ADR$1 < 0x1.Cp+15 ) goto label$12480;
  if( ADR$1 <= 0x1.FFFEp+15 ) goto label$12479;
  label$12480:;
  if( ADR$1 < 0x1.4p+15 ) goto label$12481;
  if( ADR$1 <= 0x1.7FFEp+15 ) goto label$12479;
  label$12481:;
  if( ADR$1 < 0x1.Bp+15 ) goto label$12478;
  if( ADR$1 > 0x1.B7FEp+15 ) goto label$12478;
  label$12479:;
  {
   *(double*)((int64)(double*)MEM64$ + (((int64)__builtin_nearbyint( ADR$1 )) << (3ll & 63ll))) = V$1;
  }
  label$12478:;
  label$9484:;
 }
 label$12482:;
 label$7123:;
}

int8 _ZN12SYSTEM_BUS_T8READBYTEEh( struct $12SYSTEM_BUS_T* THIS$1, uint8 ADR$1 )
{
 int8 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 1ll );
 label$12486:;
 double vr$2 = _ZN12SYSTEM_BUS_T6PEEK64Ed( THIS$1, (double)ADR$1 );
 fb$result$1 = (int8)((int32)__builtin_nearbyint( vr$2 ));
 goto label$12487;
 label$12487:;
 return fb$result$1;
}

int8 _ZN12SYSTEM_BUS_T8READBYTEEa( struct $12SYSTEM_BUS_T* THIS$1, int8 ADR$1 )
{
 int8 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 1ll );
 label$12488:;
 double vr$2 = _ZN12SYSTEM_BUS_T6PEEK64Ed( THIS$1, (double)ADR$1 );
 fb$result$1 = (int8)((int32)__builtin_nearbyint( vr$2 ));
 goto label$12489;
 label$12489:;
 return fb$result$1;
}

int8 _ZN12SYSTEM_BUS_T8READBYTEEt( struct $12SYSTEM_BUS_T* THIS$1, uint16 ADR$1 )
{
 int8 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 1ll );
 label$12490:;
 double vr$2 = _ZN12SYSTEM_BUS_T6PEEK64Ed( THIS$1, (double)ADR$1 );
 fb$result$1 = (int8)((int32)__builtin_nearbyint( vr$2 ));
 goto label$12491;
 label$12491:;
 return fb$result$1;
}

int8 _ZN12SYSTEM_BUS_T8READBYTEEs( struct $12SYSTEM_BUS_T* THIS$1, int16 ADR$1 )
{
 int8 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 1ll );
 label$12492:;
 double vr$2 = _ZN12SYSTEM_BUS_T6PEEK64Ed( THIS$1, (double)ADR$1 );
 fb$result$1 = (int8)((int32)__builtin_nearbyint( vr$2 ));
 goto label$12493;
 label$12493:;
 return fb$result$1;
}

int8 _ZN12SYSTEM_BUS_T8READBYTEEj( struct $12SYSTEM_BUS_T* THIS$1, uint32 ADR$1 )
{
 int8 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 1ll );
 label$12494:;
 double vr$2 = _ZN12SYSTEM_BUS_T6PEEK64Ed( THIS$1, (double)ADR$1 );
 fb$result$1 = (int8)((int32)__builtin_nearbyint( vr$2 ));
 goto label$12495;
 label$12495:;
 return fb$result$1;
}

int8 _ZN12SYSTEM_BUS_T8READBYTEEi( struct $12SYSTEM_BUS_T* THIS$1, int32 ADR$1 )
{
 int8 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 1ll );
 label$12496:;
 double vr$2 = _ZN12SYSTEM_BUS_T6PEEK64Ed( THIS$1, (double)ADR$1 );
 fb$result$1 = (int8)((int32)__builtin_nearbyint( vr$2 ));
 goto label$12497;
 label$12497:;
 return fb$result$1;
}

int8 _ZN12SYSTEM_BUS_T8READBYTEEy( struct $12SYSTEM_BUS_T* THIS$1, uint64 ADR$1 )
{
 int8 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 1ll );
 label$12498:;
 double vr$2 = _ZN12SYSTEM_BUS_T6PEEK64Ed( THIS$1, (double)ADR$1 );
 fb$result$1 = (int8)((int32)__builtin_nearbyint( vr$2 ));
 goto label$12499;
 label$12499:;
 return fb$result$1;
}

int8 _ZN12SYSTEM_BUS_T8READBYTEEx( struct $12SYSTEM_BUS_T* THIS$1, int64 ADR$1 )
{
 int8 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 1ll );
 label$12500:;
 double vr$2 = _ZN12SYSTEM_BUS_T6PEEK64Ed( THIS$1, (double)ADR$1 );
 fb$result$1 = (int8)((int32)__builtin_nearbyint( vr$2 ));
 goto label$12501;
 label$12501:;
 return fb$result$1;
}

int8 _ZN12SYSTEM_BUS_T8READBYTEEf( struct $12SYSTEM_BUS_T* THIS$1, float ADR$1 )
{
 int8 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 1ll );
 label$12502:;
 double vr$2 = _ZN12SYSTEM_BUS_T6PEEK64Ed( THIS$1, (double)ADR$1 );
 fb$result$1 = (int8)((int32)__builtin_nearbyint( vr$2 ));
 goto label$12503;
 label$12503:;
 return fb$result$1;
}

int8 _ZN12SYSTEM_BUS_T8READBYTEEd( struct $12SYSTEM_BUS_T* THIS$1, double ADR$1 )
{
 int8 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 1ll );
 label$12504:;
 double vr$1 = _ZN12SYSTEM_BUS_T6PEEK64Ed( THIS$1, ADR$1 );
 fb$result$1 = (int8)((int32)__builtin_nearbyint( vr$1 ));
 goto label$12505;
 label$12505:;
 return fb$result$1;
}

int8 _ZN12SYSTEM_BUS_T8READBYTEE9_FLOAT128( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT128* ADR$1 )
{
 int8 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 1ll );
 label$12506:;
 uint64 vr$1 = _ZN9_FLOAT128cvyEv( ADR$1 );
 double vr$3 = _ZN12SYSTEM_BUS_T6PEEK64Ed( THIS$1, (double)vr$1 );
 fb$result$1 = (int8)((int32)__builtin_nearbyint( vr$3 ));
 goto label$12507;
 label$12507:;
 return fb$result$1;
}

int8 _ZN12SYSTEM_BUS_T8READBYTEE9_FLOAT256( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT256* ADR$1 )
{
 int8 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 1ll );
 label$12508:;
 uint64 vr$1 = _ZN9_FLOAT256cvyEv( ADR$1 );
 double vr$3 = _ZN12SYSTEM_BUS_T6PEEK64Ed( THIS$1, (double)vr$1 );
 fb$result$1 = (int8)((int32)__builtin_nearbyint( vr$3 ));
 goto label$12509;
 label$12509:;
 return fb$result$1;
}

int8 _ZN12SYSTEM_BUS_T8READBYTEE9_FLOAT512( struct $12SYSTEM_BUS_T* THIS$1, struct $9_FLOAT512* ADR$1 )
{
 int8 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 1ll );
 label$12510:;
 uint64 vr$1 = _ZN9_FLOAT512cvyEv( ADR$1 );
 double vr$3 = _ZN12SYSTEM_BUS_T6PEEK64Ed( THIS$1, (double)vr$1 );
 fb$result$1 = (int8)((int32)__builtin_nearbyint( vr$3 ));
 goto label$12511;
 label$12511:;
 return fb$result$1;
}

uint8 _ZN12SYSTEM_BUS_T9READUBYTEEd( struct $12SYSTEM_BUS_T* THIS$1, double ADR$1 )
{
 uint8 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 1ll );
 label$12512:;
 double vr$1 = _ZN12SYSTEM_BUS_T6PEEK64Ed( THIS$1, ADR$1 );
 fb$result$1 = (uint8)((int32)__builtin_nearbyint( vr$1 ));
 goto label$12513;
 label$12513:;
 return fb$result$1;
}

uint16 _ZN12SYSTEM_BUS_T10READUSHORTEd( struct $12SYSTEM_BUS_T* THIS$1, double ADR$1 )
{
 uint16 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 2ll );
 label$12514:;
 double vr$1 = _ZN12SYSTEM_BUS_T6PEEK64Ed( THIS$1, ADR$1 );
 double vr$6 = _ZN12SYSTEM_BUS_T6PEEK64Ed( THIS$1, ADR$1 + (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 fb$result$1 = (uint16)(((int64)__builtin_nearbyint( vr$1 )) | (((int64)__builtin_nearbyint( vr$6 )) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)));
 goto label$12515;
 label$12515:;
 return fb$result$1;
}

void _ZN12SYSTEM_BUS_T9WRITEBYTEEhh( struct $12SYSTEM_BUS_T* THIS$1, uint8 ADR$1, uint8 B8$1 )
{
 label$12516:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (double)ADR$1, (double)B8$1 );
 label$12517:;
}

void _ZN12SYSTEM_BUS_T9WRITEBYTEEaa( struct $12SYSTEM_BUS_T* THIS$1, int8 ADR$1, int8 B8$1 )
{
 label$12518:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (double)ADR$1, (double)B8$1 );
 label$12519:;
}

void _ZN12SYSTEM_BUS_T9WRITEBYTEEtt( struct $12SYSTEM_BUS_T* THIS$1, uint16 ADR$1, uint16 B8$1 )
{
 label$12520:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (double)ADR$1, (double)B8$1 );
 label$12521:;
}

void _ZN12SYSTEM_BUS_T9WRITEBYTEEss( struct $12SYSTEM_BUS_T* THIS$1, int16 ADR$1, int16 B8$1 )
{
 label$12522:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (double)ADR$1, (double)B8$1 );
 label$12523:;
}

void _ZN12SYSTEM_BUS_T9WRITEBYTEEjj( struct $12SYSTEM_BUS_T* THIS$1, uint32 ADR$1, uint32 B8$1 )
{
 label$12524:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (double)ADR$1, (double)B8$1 );
 label$12525:;
}

void _ZN12SYSTEM_BUS_T9WRITEBYTEEii( struct $12SYSTEM_BUS_T* THIS$1, int32 ADR$1, int32 B8$1 )
{
 label$12526:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (double)ADR$1, (double)B8$1 );
 label$12527:;
}

void _ZN12SYSTEM_BUS_T9WRITEBYTEEyy( struct $12SYSTEM_BUS_T* THIS$1, uint64 ADR$1, uint64 B8$1 )
{
 label$12528:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (double)ADR$1, (double)B8$1 );
 label$12529:;
}

void _ZN12SYSTEM_BUS_T9WRITEBYTEExx( struct $12SYSTEM_BUS_T* THIS$1, int64 ADR$1, int64 B8$1 )
{
 label$12530:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (double)ADR$1, (double)B8$1 );
 label$12531:;
}

void _ZN12SYSTEM_BUS_T9WRITEBYTEEff( struct $12SYSTEM_BUS_T* THIS$1, float ADR$1, float B8$1 )
{
 label$12532:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, (double)ADR$1, (double)B8$1 );
 label$12533:;
}

void _ZN12SYSTEM_BUS_T9WRITEBYTEEdd( struct $12SYSTEM_BUS_T* THIS$1, double ADR$1, double B8$1 )
{
 label$12534:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, ADR$1, B8$1 );
 label$12535:;
}

void _ZN12SYSTEM_BUS_T10WRITEUBYTEEdd( struct $12SYSTEM_BUS_T* THIS$1, double ADR$1, double B8$1 )
{
 label$12536:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, ADR$1, B8$1 );
 label$12537:;
}

void _ZN12SYSTEM_BUS_T11WRITEUSHORTEdd( struct $12SYSTEM_BUS_T* THIS$1, double ADR$1, double W16$1 )
{
 label$12538:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, ADR$1, (double)(((uint64)__builtin_nearbyint( W16$1 )) & 255ull) );
 _ZN12SYSTEM_BUS_T6POKE64Edd( THIS$1, ADR$1 + (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll), (double)((((uint64)__builtin_nearbyint( W16$1 )) & 65280ull) >> (8ll & 63ll)) );
 label$12539:;
}

void _ZN7CPU6510C1EP12SYSTEM_BUS_T( struct $7CPU6510* THIS$1, struct $12SYSTEM_BUS_T* LPMEM$1 )
{
 label$12540:;
 __builtin_memset( (uint8*)THIS$1, 0, 8ll );
 __builtin_memset( (uint8*)((uint8*)THIS$1 + 8ll), 0, 1ll );
 __builtin_memset( (uint8*)((uint8*)THIS$1 + 9ll), 0, 1ll );
 __builtin_memset( (uint8*)((uint8*)THIS$1 + 10ll), 0, 1ll );
 __builtin_memset( (uint16*)((uint8*)THIS$1 + 12ll), 0, 2ll );
 __builtin_memset( (uint16*)((uint8*)THIS$1 + 14ll), 0, 2ll );
 __builtin_memset( (struct $12SYSTEM_BUS_T**)((uint8*)THIS$1 + 16ll), 0, 8ll );
 __builtin_memset( (struct $6OPCODE*)((uint8*)THIS$1 + 24ll), 0, 56ll );
 __builtin_memset( (struct $6OPCODE*)((uint8*)THIS$1 + 80ll), 0, 14336ll );
 __builtin_memset( (FBSTRING*)((uint8*)THIS$1 + 14416ll), 0, 312ll );
 *(struct $12SYSTEM_BUS_T**)((uint8*)THIS$1 + 16ll) = LPMEM$1;
 int64 I$1;
 I$1 = 0ll;
 fb_DataRestore( (void*)label$12543 );
 {
  I$1 = 0ll;
  label$12547:;
  {
   {
    struct $6OPCODE* TMP$5404$4;
    TMP$5404$4 = (struct $6OPCODE*)((uint8*)((uint8*)THIS$1 + (I$1 * 56ll)) + 80ll);
    fb_DataReadULongint( (uint64*)TMP$5404$4 );
    fb_DataReadStr( (void*)((uint8*)TMP$5404$4 + 8ll), 4ll, 0 );
    fb_DataReadULongint( (uint64*)((uint8*)TMP$5404$4 + 16ll) );
    fb_DataReadULongint( (uint64*)((uint8*)TMP$5404$4 + 24ll) );
    fb_DataReadULongint( (uint64*)((uint8*)TMP$5404$4 + 32ll) );
    fb_DataReadULongint( (uint64*)((uint8*)TMP$5404$4 + 48ll) );
   }
  }
  label$12545:;
  I$1 = I$1 + 1ll;
  label$12544:;
  if( I$1 <= 255ll ) goto label$12547;
  label$12546:;
 }
 fb_DataRestore( (void*)label$12549 );
 {
  I$1 = 0ll;
  label$12553:;
  {
   fb_DataReadStr( (void*)((uint8*)((uint8*)THIS$1 + (I$1 * 24ll)) + 14416ll), -1ll, 0 );
  }
  label$12551:;
  I$1 = I$1 + 1ll;
  label$12550:;
  if( I$1 <= 12ll ) goto label$12553;
  label$12552:;
 }
 *(uint8*)((uint8*)THIS$1 + 15ll) = (uint8)1u;
 *(uint16*)((uint8*)THIS$1 + 12ll) = (uint16)64738u;
 label$12541:;
}

void _ZN7CPU6510D1Ev( struct $7CPU6510* THIS$1 )
{
 label$12554:;
 label$12555:;
 struct $N7CPU65108FBARRAY1I8FBSTRINGEE {
  FBSTRING* DATA;
  FBSTRING* PTR;
  int64 SIZE;
  int64 ELEMENT_LEN;
  int64 DIMENSIONS;
  int64 FLAGS;
  struct $16__FB_ARRAYDIMTB$ DIMTB[1];
 };
 extern int __$fb_structsizecheck[(sizeof( struct $N7CPU65108FBARRAY1I8FBSTRINGEE ) == 72) ? 1 : -1];
 struct $N7CPU65108FBARRAY1I8FBSTRINGEE tmp$5406$1;
 *(FBSTRING**)&tmp$5406$1 = (FBSTRING*)((uint8*)THIS$1 + 14416ll);
 *(FBSTRING**)((uint8*)&tmp$5406$1 + 8ll) = (FBSTRING*)((uint8*)THIS$1 + 14416ll);
 *(int64*)((uint8*)&tmp$5406$1 + 16ll) = 312ll;
 *(int64*)((uint8*)&tmp$5406$1 + 24ll) = 24ll;
 *(int64*)((uint8*)&tmp$5406$1 + 32ll) = 1ll;
 *(int64*)((uint8*)&tmp$5406$1 + 40ll) = 49ll;
 *(int64*)((uint8*)&tmp$5406$1 + 48ll) = 13ll;
 *(int64*)((uint8*)&tmp$5406$1 + 56ll) = 0ll;
 *(int64*)((uint8*)&tmp$5406$1 + 64ll) = 12ll;
 fb_ArrayDestructStr( (struct $7FBARRAYIvE*)&tmp$5406$1 );
}

FBSTRING* _ZN7CPU6510cv8FBSTRINGEv( struct $7CPU6510* THIS$1 )
{
 FBSTRING TMP$5420$1;
 FBSTRING TMP$5421$1;
 FBSTRING TMP$5422$1;
 FBSTRING TMP$5423$1;
 FBSTRING TMP$5424$1;
 FBSTRING TMP$5425$1;
 FBSTRING TMP$5426$1;
 FBSTRING TMP$5427$1;
 FBSTRING TMP$5428$1;
 FBSTRING TMP$5429$1;
 FBSTRING TMP$5430$1;
 FBSTRING TMP$5431$1;
 FBSTRING TMP$5432$1;
 FBSTRING TMP$5433$1;
 FBSTRING TMP$5434$1;
 FBSTRING TMP$5435$1;
 FBSTRING TMP$5436$1;
 FBSTRING TMP$5437$1;
 FBSTRING TMP$5438$1;
 FBSTRING TMP$5439$1;
 FBSTRING TMP$5440$1;
 FBSTRING TMP$5441$1;
 FBSTRING TMP$5442$1;
 FBSTRING TMP$5443$1;
 FBSTRING fb$result$1;
 __builtin_memset( &fb$result$1, 0, 24ll );
 label$12556:;
 FBSTRING* vr$3 = fb_ULongintToStr( *(uint64*)THIS$1 & 1ull );
 FBSTRING* vr$7 = fb_ULongintToStr( (*(uint64*)THIS$1 >> (1ll & 63ll)) & 1ull );
 FBSTRING* vr$11 = fb_ULongintToStr( (*(uint64*)THIS$1 >> (2ll & 63ll)) & 1ull );
 FBSTRING* vr$15 = fb_ULongintToStr( (*(uint64*)THIS$1 >> (3ll & 63ll)) & 1ull );
 FBSTRING* vr$19 = fb_ULongintToStr( (*(uint64*)THIS$1 >> (4ll & 63ll)) & 1ull );
 FBSTRING* vr$23 = fb_ULongintToStr( (*(uint64*)THIS$1 >> (6ll & 63ll)) & 1ull );
 FBSTRING* vr$27 = fb_ULongintToStr( (*(uint64*)THIS$1 >> (7ll & 63ll)) & 1ull );
 FBSTRING* vr$30 = fb_HEXEx_b( *(uint8*)((uint8*)THIS$1 + 14ll), (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
 FBSTRING* vr$33 = fb_HEXEx_b( *(uint8*)((uint8*)THIS$1 + 10ll), (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
 FBSTRING* vr$36 = fb_HEXEx_b( *(uint8*)((uint8*)THIS$1 + 9ll), (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
 FBSTRING* vr$39 = fb_HEXEx_b( *(uint8*)((uint8*)THIS$1 + 8ll), (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
 FBSTRING* vr$42 = fb_HEXEx_s( *(uint16*)((uint8*)THIS$1 + 12ll), (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) );
 __builtin_memset( &TMP$5420$1, 0, 24ll );
 FBSTRING* vr$45 = fb_StrConcat( &TMP$5420$1, (void*)"PC:", 4ll, (void*)vr$42, -1ll );
 __builtin_memset( &TMP$5421$1, 0, 24ll );
 FBSTRING* vr$48 = fb_StrConcat( &TMP$5421$1, (void*)vr$45, -1ll, (void*)" A:", 4ll );
 __builtin_memset( &TMP$5422$1, 0, 24ll );
 FBSTRING* vr$51 = fb_StrConcat( &TMP$5422$1, (void*)vr$48, -1ll, (void*)vr$39, -1ll );
 __builtin_memset( &TMP$5423$1, 0, 24ll );
 FBSTRING* vr$54 = fb_StrConcat( &TMP$5423$1, (void*)vr$51, -1ll, (void*)" X:", 4ll );
 __builtin_memset( &TMP$5424$1, 0, 24ll );
 FBSTRING* vr$57 = fb_StrConcat( &TMP$5424$1, (void*)vr$54, -1ll, (void*)vr$36, -1ll );
 __builtin_memset( &TMP$5425$1, 0, 24ll );
 FBSTRING* vr$60 = fb_StrConcat( &TMP$5425$1, (void*)vr$57, -1ll, (void*)" Y:", 4ll );
 __builtin_memset( &TMP$5426$1, 0, 24ll );
 FBSTRING* vr$63 = fb_StrConcat( &TMP$5426$1, (void*)vr$60, -1ll, (void*)vr$33, -1ll );
 __builtin_memset( &TMP$5427$1, 0, 24ll );
 FBSTRING* vr$66 = fb_StrConcat( &TMP$5427$1, (void*)vr$63, -1ll, (void*)" S:", 4ll );
 __builtin_memset( &TMP$5428$1, 0, 24ll );
 FBSTRING* vr$69 = fb_StrConcat( &TMP$5428$1, (void*)vr$66, -1ll, (void*)vr$30, -1ll );
 __builtin_memset( &TMP$5429$1, 0, 24ll );
 FBSTRING* vr$72 = fb_StrConcat( &TMP$5429$1, (void*)vr$69, -1ll, (void*)" N:", 4ll );
 __builtin_memset( &TMP$5430$1, 0, 24ll );
 FBSTRING* vr$75 = fb_StrConcat( &TMP$5430$1, (void*)vr$72, -1ll, (void*)vr$27, -1ll );
 __builtin_memset( &TMP$5431$1, 0, 24ll );
 FBSTRING* vr$78 = fb_StrConcat( &TMP$5431$1, (void*)vr$75, -1ll, (void*)" V:", 4ll );
 __builtin_memset( &TMP$5432$1, 0, 24ll );
 FBSTRING* vr$81 = fb_StrConcat( &TMP$5432$1, (void*)vr$78, -1ll, (void*)vr$23, -1ll );
 __builtin_memset( &TMP$5433$1, 0, 24ll );
 FBSTRING* vr$84 = fb_StrConcat( &TMP$5433$1, (void*)vr$81, -1ll, (void*)" -", 3ll );
 __builtin_memset( &TMP$5434$1, 0, 24ll );
 FBSTRING* vr$87 = fb_StrConcat( &TMP$5434$1, (void*)vr$84, -1ll, (void*)" B:", 4ll );
 __builtin_memset( &TMP$5435$1, 0, 24ll );
 FBSTRING* vr$90 = fb_StrConcat( &TMP$5435$1, (void*)vr$87, -1ll, (void*)vr$19, -1ll );
 __builtin_memset( &TMP$5436$1, 0, 24ll );
 FBSTRING* vr$93 = fb_StrConcat( &TMP$5436$1, (void*)vr$90, -1ll, (void*)" D:", 4ll );
 __builtin_memset( &TMP$5437$1, 0, 24ll );
 FBSTRING* vr$96 = fb_StrConcat( &TMP$5437$1, (void*)vr$93, -1ll, (void*)vr$15, -1ll );
 __builtin_memset( &TMP$5438$1, 0, 24ll );
 FBSTRING* vr$99 = fb_StrConcat( &TMP$5438$1, (void*)vr$96, -1ll, (void*)" I:", 4ll );
 __builtin_memset( &TMP$5439$1, 0, 24ll );
 FBSTRING* vr$102 = fb_StrConcat( &TMP$5439$1, (void*)vr$99, -1ll, (void*)vr$11, -1ll );
 __builtin_memset( &TMP$5440$1, 0, 24ll );
 FBSTRING* vr$105 = fb_StrConcat( &TMP$5440$1, (void*)vr$102, -1ll, (void*)" Z:", 4ll );
 __builtin_memset( &TMP$5441$1, 0, 24ll );
 FBSTRING* vr$108 = fb_StrConcat( &TMP$5441$1, (void*)vr$105, -1ll, (void*)vr$7, -1ll );
 __builtin_memset( &TMP$5442$1, 0, 24ll );
 FBSTRING* vr$111 = fb_StrConcat( &TMP$5442$1, (void*)vr$108, -1ll, (void*)" C:", 4ll );
 __builtin_memset( &TMP$5443$1, 0, 24ll );
 FBSTRING* vr$114 = fb_StrConcat( &TMP$5443$1, (void*)vr$111, -1ll, (void*)vr$3, -1ll );
 fb_StrAssign( (void*)&fb$result$1, -1ll, (void*)vr$114, -1ll, 0 );
 label$12557:;
 FBSTRING* vr$117 = fb_StrAllocTempResult( (FBSTRING*)&fb$result$1 );
 return vr$117;
}

double _ZN7CPU65104TICKEd( struct $7CPU6510* THIS$1, double FLG$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$12558:;
 uint8 TICKS$1;
 TICKS$1 = *(uint8*)NIBBLES$;
 FBSTRING MSG$1;
 FBSTRING* vr$2 = fb_CHR( 1, (int64)*(uint8*)NIBBLES$ );
 fb_StrInit( (void*)&MSG$1, -1ll, (void*)vr$2, -1ll, 0 );
 static struct $5MULTI V$1;
 uint8 vr$9 = _ZN12SYSTEM_BUS_T9READUBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)THIS$1 + 16ll), (double)*(uint16*)((uint8*)THIS$1 + 12ll) );
 __builtin_memcpy( (struct $6OPCODE*)((uint8*)THIS$1 + 24ll), (struct $6OPCODE*)((uint8*)((uint8*)THIS$1 + ((int64)vr$9 * 56ll)) + 80ll), 56 );
 *(double*)((uint8*)THIS$1 + 64ll) = (double)*(uint8*)NIBBLES$;
 TICKS$1 = (uint8)((int64)TICKS$1 + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 *(uint16*)((uint8*)THIS$1 + 12ll) = (uint16)((int64)*(uint16*)((uint8*)THIS$1 + 12ll) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 {
  uint64 TMP$5444$2;
  TMP$5444$2 = *(uint64*)((uint8*)THIS$1 + 40ll);
  goto label$12561;
  label$12562:;
  {
  }
  goto label$12560;
  label$12563:;
  {
   (*(tmp$1799*)((uint8*)THIS$1 + 72ll))( THIS$1 );
  }
  goto label$12560;
  label$12564:;
  {
   double vr$28 = _ZN7CPU65107ADR_IMMEv( THIS$1 );
   *(uint16*)((uint8*)THIS$1 + 64ll) = (uint16)((int32)__builtin_nearbyint( vr$28 ));
   (*(tmp$1799*)((uint8*)THIS$1 + 72ll))( THIS$1 );
  }
  goto label$12560;
  label$12565:;
  {
   double vr$32 = _ZN7CPU65107ADR_ABSEv( THIS$1 );
   *(uint16*)((uint8*)THIS$1 + 64ll) = (uint16)((int32)__builtin_nearbyint( vr$32 ));
   (*(tmp$1799*)((uint8*)THIS$1 + 72ll))( THIS$1 );
  }
  goto label$12560;
  label$12566:;
  {
   double vr$36 = _ZN7CPU65108ADR_ZEROEv( THIS$1 );
   *(uint16*)((uint8*)THIS$1 + 64ll) = (uint16)((int32)__builtin_nearbyint( vr$36 ));
   (*(tmp$1799*)((uint8*)THIS$1 + 72ll))( THIS$1 );
  }
  goto label$12560;
  label$12567:;
  {
   double vr$40 = _ZN7CPU65109ADR_ZEROXEv( THIS$1 );
   *(uint16*)((uint8*)THIS$1 + 64ll) = (uint16)((int32)__builtin_nearbyint( vr$40 ));
   (*(tmp$1799*)((uint8*)THIS$1 + 72ll))( THIS$1 );
  }
  goto label$12560;
  label$12568:;
  {
   double vr$44 = _ZN7CPU65109ADR_ZEROYEv( THIS$1 );
   *(uint16*)((uint8*)THIS$1 + 64ll) = (uint16)((int32)__builtin_nearbyint( vr$44 ));
   (*(tmp$1799*)((uint8*)THIS$1 + 72ll))( THIS$1 );
  }
  goto label$12560;
  label$12569:;
  {
   double vr$48 = _ZN7CPU65108ADR_ABSXEv( THIS$1 );
   *(uint16*)((uint8*)THIS$1 + 64ll) = (uint16)((int32)__builtin_nearbyint( vr$48 ));
   (*(tmp$1799*)((uint8*)THIS$1 + 72ll))( THIS$1 );
  }
  goto label$12560;
  label$12570:;
  {
   double vr$52 = _ZN7CPU65108ADR_ABSYEv( THIS$1 );
   *(uint16*)((uint8*)THIS$1 + 64ll) = (uint16)((int32)__builtin_nearbyint( vr$52 ));
   (*(tmp$1799*)((uint8*)THIS$1 + 72ll))( THIS$1 );
  }
  goto label$12560;
  label$12571:;
  {
   double vr$56 = _ZN7CPU65107ADR_RELEv( THIS$1 );
   *(uint16*)((uint8*)THIS$1 + 64ll) = (uint16)((int32)__builtin_nearbyint( vr$56 ));
   (*(tmp$1799*)((uint8*)THIS$1 + 72ll))( THIS$1 );
  }
  goto label$12560;
  label$12572:;
  {
   double vr$60 = _ZN7CPU65108ADR_INDXEv( THIS$1 );
   *(uint16*)((uint8*)THIS$1 + 64ll) = (uint16)((int32)__builtin_nearbyint( vr$60 ));
   (*(tmp$1799*)((uint8*)THIS$1 + 72ll))( THIS$1 );
  }
  goto label$12560;
  label$12573:;
  {
   double vr$64 = _ZN7CPU65108ADR_INDYEv( THIS$1 );
   *(uint16*)((uint8*)THIS$1 + 64ll) = (uint16)((int32)__builtin_nearbyint( vr$64 ));
   (*(tmp$1799*)((uint8*)THIS$1 + 72ll))( THIS$1 );
  }
  goto label$12560;
  label$12574:;
  {
   double vr$68 = _ZN7CPU65107ADR_INDEv( THIS$1 );
   *(uint16*)((uint8*)THIS$1 + 64ll) = (uint16)((int32)__builtin_nearbyint( vr$68 ));
   (*(tmp$1799*)((uint8*)THIS$1 + 72ll))( THIS$1 );
  }
  goto label$12560;
  label$12561:;
  static const void* tmp$5445[13ll] = {
   &&label$12562,
   &&label$12563,
   &&label$12564,
   &&label$12565,
   &&label$12566,
   &&label$12567,
   &&label$12568,
   &&label$12569,
   &&label$12570,
   &&label$12571,
   &&label$12572,
   &&label$12573,
   &&label$12574,
  };
  if( TMP$5444$2 > 12ull ) goto label$12560;
  goto *tmp$5445[TMP$5444$2 - 0ull];
  label$12560:;
 }
 fb$result$1 = (double)*(uint8*)NIBBLES$;
 fb_StrDelete( (FBSTRING*)&MSG$1 );
 label$12559:;
 return fb$result$1;
}

double _ZN7CPU65107ADR_UNKEv( struct $7CPU6510* THIS$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$12575:;
 fb_Sleep( -1 );
 fb$result$1 = (double)*(uint8*)NIBBLES$;
 goto label$12576;
 label$12576:;
 return fb$result$1;
}

double _ZN7CPU65107ADR_IMMEv( struct $7CPU6510* THIS$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$12577:;
 fb$result$1 = (double)*(uint16*)((uint8*)THIS$1 + 12ll);
 *(uint16*)((uint8*)THIS$1 + 12ll) = (uint16)((int64)*(uint16*)((uint8*)THIS$1 + 12ll) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 label$12578:;
 return fb$result$1;
}

double _ZN7CPU65107ADR_RELEv( struct $7CPU6510* THIS$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$12579:;
 fb$result$1 = (double)*(uint16*)((uint8*)THIS$1 + 12ll);
 *(uint16*)((uint8*)THIS$1 + 12ll) = (uint16)((int64)*(uint16*)((uint8*)THIS$1 + 12ll) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 label$12580:;
 return fb$result$1;
}

double _ZN7CPU65107ADR_ABSEv( struct $7CPU6510* THIS$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$12581:;
 uint16 vr$4 = _ZN12SYSTEM_BUS_T10READUSHORTEd( *(struct $12SYSTEM_BUS_T**)((uint8*)THIS$1 + 16ll), (double)*(uint16*)((uint8*)THIS$1 + 12ll) );
 fb$result$1 = (double)vr$4;
 *(uint16*)((uint8*)THIS$1 + 12ll) = (uint16)((int64)*(uint16*)((uint8*)THIS$1 + 12ll) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll));
 label$12582:;
 return fb$result$1;
}

double _ZN7CPU65108ADR_ZEROEv( struct $7CPU6510* THIS$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$12583:;
 uint8 vr$4 = _ZN12SYSTEM_BUS_T9READUBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)THIS$1 + 16ll), (double)*(uint16*)((uint8*)THIS$1 + 12ll) );
 fb$result$1 = (double)((int64)vr$4 & (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)));
 *(uint16*)((uint8*)THIS$1 + 12ll) = (uint16)((int64)*(uint16*)((uint8*)THIS$1 + 12ll) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 label$12584:;
 return fb$result$1;
}

double _ZN7CPU65109ADR_ZEROXEv( struct $7CPU6510* THIS$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$12585:;
 uint8 vr$4 = _ZN12SYSTEM_BUS_T9READUBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)THIS$1 + 16ll), (double)*(uint16*)((uint8*)THIS$1 + 12ll) );
 fb$result$1 = (double)(((int64)vr$4 + (int64)*(uint8*)((uint8*)THIS$1 + 9ll)) & (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)));
 *(uint16*)((uint8*)THIS$1 + 12ll) = (uint16)((int64)*(uint16*)((uint8*)THIS$1 + 12ll) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 label$12586:;
 return fb$result$1;
}

double _ZN7CPU65109ADR_ZEROYEv( struct $7CPU6510* THIS$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$12587:;
 uint8 vr$4 = _ZN12SYSTEM_BUS_T9READUBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)THIS$1 + 16ll), (double)*(uint16*)((uint8*)THIS$1 + 12ll) );
 fb$result$1 = (double)(((int64)vr$4 + (int64)*(uint8*)((uint8*)THIS$1 + 10ll)) & (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)));
 *(uint16*)((uint8*)THIS$1 + 12ll) = (uint16)((int64)*(uint16*)((uint8*)THIS$1 + 12ll) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 label$12588:;
 return fb$result$1;
}

double _ZN7CPU65108ADR_ABSXEv( struct $7CPU6510* THIS$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$12589:;
 uint16 vr$4 = _ZN12SYSTEM_BUS_T10READUSHORTEd( *(struct $12SYSTEM_BUS_T**)((uint8*)THIS$1 + 16ll), (double)*(uint16*)((uint8*)THIS$1 + 12ll) );
 fb$result$1 = (double)((int64)vr$4 + (int64)*(uint8*)((uint8*)THIS$1 + 9ll));
 *(uint16*)((uint8*)THIS$1 + 12ll) = (uint16)((int64)*(uint16*)((uint8*)THIS$1 + 12ll) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll));
 label$12590:;
 return fb$result$1;
}

double _ZN7CPU65108ADR_ABSYEv( struct $7CPU6510* THIS$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$12591:;
 uint16 vr$4 = _ZN12SYSTEM_BUS_T10READUSHORTEd( *(struct $12SYSTEM_BUS_T**)((uint8*)THIS$1 + 16ll), (double)*(uint16*)((uint8*)THIS$1 + 12ll) );
 fb$result$1 = (double)((int64)vr$4 + (int64)*(uint8*)((uint8*)THIS$1 + 10ll));
 *(uint16*)((uint8*)THIS$1 + 12ll) = (uint16)((int64)*(uint16*)((uint8*)THIS$1 + 12ll) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll));
 label$12592:;
 return fb$result$1;
}

double _ZN7CPU65108ADR_INDXEv( struct $7CPU6510* THIS$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$12593:;
 static struct $5MULTI V$1;
 uint8 vr$4 = _ZN12SYSTEM_BUS_T9READUBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)THIS$1 + 16ll), (double)*(uint16*)((uint8*)THIS$1 + 12ll) );
 *(uint16*)&V$1 = (uint16)(((int64)vr$4 + (int64)*(uint8*)((uint8*)THIS$1 + 9ll)) & (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)));
 uint16 vr$18 = _ZN12SYSTEM_BUS_T10READUSHORTEd( *(struct $12SYSTEM_BUS_T**)((uint8*)THIS$1 + 16ll), (double)*(uint16*)&V$1 );
 *(uint16*)&V$1 = vr$18;
 *(uint16*)((uint8*)THIS$1 + 12ll) = (uint16)((int64)*(uint16*)((uint8*)THIS$1 + 12ll) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 fb$result$1 = (double)*(uint16*)&V$1;
 label$12594:;
 return fb$result$1;
}

double _ZN7CPU65108ADR_INDYEv( struct $7CPU6510* THIS$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$12595:;
 uint8 vr$4 = _ZN12SYSTEM_BUS_T9READUBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)THIS$1 + 16ll), (double)*(uint16*)((uint8*)THIS$1 + 12ll) );
 uint16 vr$7 = _ZN12SYSTEM_BUS_T10READUSHORTEd( *(struct $12SYSTEM_BUS_T**)((uint8*)THIS$1 + 16ll), (double)vr$4 );
 *(uint16*)&V$ = vr$7;
 *(uint16*)&V$ = (uint16)((int64)*(uint16*)&V$ + (int64)*(uint8*)((uint8*)THIS$1 + 10ll));
 fb$result$1 = (double)*(uint16*)&V$;
 *(uint16*)((uint8*)THIS$1 + 12ll) = (uint16)((int64)*(uint16*)((uint8*)THIS$1 + 12ll) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 label$12596:;
 return fb$result$1;
}

double _ZN7CPU65107ADR_INDEv( struct $7CPU6510* THIS$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$12597:;
 uint16 vr$4 = _ZN12SYSTEM_BUS_T10READUSHORTEd( *(struct $12SYSTEM_BUS_T**)((uint8*)THIS$1 + 16ll), (double)*(uint16*)((uint8*)THIS$1 + 12ll) );
 *(uint16*)&V$ = vr$4;
 uint16 vr$7 = _ZN12SYSTEM_BUS_T10READUSHORTEd( *(struct $12SYSTEM_BUS_T**)((uint8*)THIS$1 + 16ll), (double)*(uint16*)&V$ );
 *(uint16*)&V$ = vr$7;
 *(uint16*)((uint8*)THIS$1 + 12ll) = (uint16)((int64)*(uint16*)((uint8*)THIS$1 + 12ll) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll));
 fb$result$1 = (double)*(uint16*)&V$;
 label$12598:;
 return fb$result$1;
}

void _ZN7CPU65104PUSHEd( struct $7CPU6510* THIS$1, double B$1 )
{
 label$12599:;
 _ZN12SYSTEM_BUS_T10WRITEUBYTEEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)THIS$1 + 16ll), (double)*(uint16*)((uint8*)THIS$1 + 14ll), B$1 );
 *(uint8*)((uint8*)THIS$1 + 14ll) = (uint8)((int64)*(uint8*)((uint8*)THIS$1 + 14ll) - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 label$12600:;
}

double _ZN7CPU65104PULLEv( struct $7CPU6510* THIS$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$12601:;
 *(uint8*)((uint8*)THIS$1 + 14ll) = (uint8)((int64)*(uint8*)((uint8*)THIS$1 + 14ll) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 uint8 vr$10 = _ZN12SYSTEM_BUS_T9READUBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)THIS$1 + 16ll), (double)*(uint16*)((uint8*)THIS$1 + 14ll) );
 fb$result$1 = (double)vr$10;
 label$12602:;
 return fb$result$1;
}

void INS_UNK( struct $7CPU6510* CPU$1 )
{
 label$12603:;
 label$12604:;
}

void INS_ADC( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$5446$1;
 uint8 TMP$5447$1;
 uint8 TMP$5448$1;
 uint8 TMP$5449$1;
 label$12605:;
 uint8 UB$1;
 UB$1 = *(uint8*)NIBBLES$;
 uint8 vr$3 = _ZN12SYSTEM_BUS_T9READUBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 16ll), (double)*(uint16*)((uint8*)CPU$1 + 64ll) );
 UB$1 = vr$3;
 *(uint16*)&V$ = (uint16)((int64)*(uint8*)((uint8*)CPU$1 + 8ll) + (int64)UB$1);
 if( (*(uint64*)CPU$1 & 1ull) != (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$12608;
 {
  *(uint16*)&V$ = (uint16)((int64)*(uint16*)&V$ + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
  label$12608:;
 }
 if( ((~((int64)*(uint8*)((uint8*)CPU$1 + 8ll) ^ (int64)UB$1) & ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) & (((int64)*(uint8*)((uint8*)CPU$1 + 8ll) ^ (int64)*(uint8*)&V$) & ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)))) == 0ll ) goto label$12609;
 TMP$5446$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12613;
 label$12609:;
 TMP$5446$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 label$12613:;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551551ull) | (((uint64)TMP$5446$1 & 1ull) << (6ll & 63ll));
 *(uint8*)((uint8*)CPU$1 + 8ll) = *(uint8*)&V$;
 if( (int64)*(uint16*)&V$ <= (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$12610;
 TMP$5447$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12614;
 label$12610:;
 TMP$5447$1 = *(uint8*)NIBBLES$;
 label$12614:;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551614ull) | ((uint64)TMP$5447$1 & 1ull);
 if( (int64)*(uint8*)&V$ != (int64)*(uint8*)NIBBLES$ ) goto label$12611;
 TMP$5448$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12615;
 label$12611:;
 TMP$5448$1 = *(uint8*)NIBBLES$;
 label$12615:;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$5448$1 & 1ull) << (1ll & 63ll));
 if( (int64)*(int8*)&V$ >= (int64)*(uint8*)NIBBLES$ ) goto label$12612;
 TMP$5449$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12616;
 label$12612:;
 TMP$5449$1 = *(uint8*)NIBBLES$;
 label$12616:;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$5449$1 & 1ull) << (7ll & 63ll));
 label$12606:;
}

void INS_AND( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$5450$1;
 uint8 TMP$5451$1;
 label$12617:;
 uint8 vr$5 = _ZN12SYSTEM_BUS_T9READUBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 16ll), (double)*(uint16*)((uint8*)CPU$1 + 64ll) );
 *(uint8*)((uint8*)CPU$1 + 8ll) = (uint8)((int64)*(uint8*)((uint8*)CPU$1 + 8ll) & (int64)vr$5);
 if( (int64)*(uint8*)((uint8*)CPU$1 + 8ll) != (int64)*(uint8*)NIBBLES$ ) goto label$12619;
 TMP$5450$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12621;
 label$12619:;
 TMP$5450$1 = *(uint8*)NIBBLES$;
 label$12621:;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$5450$1 & 1ull) << (1ll & 63ll));
 if( (int64)*(int8*)((uint8*)CPU$1 + 8ll) >= (int64)*(uint8*)NIBBLES$ ) goto label$12620;
 TMP$5451$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12622;
 label$12620:;
 TMP$5451$1 = *(uint8*)NIBBLES$;
 label$12622:;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$5451$1 & 1ull) << (7ll & 63ll));
 label$12618:;
}

void INS_ASL( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$5452$1;
 uint8 TMP$5453$1;
 uint8 TMP$5454$1;
 label$12623:;
 uint8 vr$3 = _ZN12SYSTEM_BUS_T9READUBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 16ll), (double)*(uint16*)((uint8*)CPU$1 + 64ll) );
 *(uint8*)&V$ = vr$3;
 if( ((int64)*(uint8*)&V$ & ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) == 0ll ) goto label$12625;
 TMP$5452$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12628;
 label$12625:;
 TMP$5452$1 = *(uint8*)NIBBLES$;
 label$12628:;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551614ull) | ((uint64)TMP$5452$1 & 1ull);
 *(uint8*)&V$ = (uint8)((int64)*(uint8*)&V$ << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) & 63ll));
 _ZN12SYSTEM_BUS_T10WRITEUBYTEEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 16ll), (double)*(uint16*)((uint8*)CPU$1 + 64ll), (double)*(uint8*)&V$ );
 if( (int64)*(uint8*)&V$ != (int64)*(uint8*)NIBBLES$ ) goto label$12626;
 TMP$5453$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12629;
 label$12626:;
 TMP$5453$1 = *(uint8*)NIBBLES$;
 label$12629:;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$5453$1 & 1ull) << (1ll & 63ll));
 if( (int64)*(int8*)&V$ >= (int64)*(uint8*)NIBBLES$ ) goto label$12627;
 TMP$5454$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12630;
 label$12627:;
 TMP$5454$1 = *(uint8*)NIBBLES$;
 label$12630:;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$5454$1 & 1ull) << (7ll & 63ll));
 label$12624:;
}

void INS_ASLA( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$5455$1;
 uint8 TMP$5456$1;
 uint8 TMP$5457$1;
 label$12631:;
 if( ((int64)*(uint8*)((uint8*)CPU$1 + 8ll) & ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) == 0ll ) goto label$12633;
 TMP$5455$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12636;
 label$12633:;
 TMP$5455$1 = *(uint8*)NIBBLES$;
 label$12636:;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551614ull) | ((uint64)TMP$5455$1 & 1ull);
 *(uint8*)((uint8*)CPU$1 + 8ll) = (uint8)((int64)*(uint8*)((uint8*)CPU$1 + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) & 63ll));
 if( (int64)*(uint8*)((uint8*)CPU$1 + 8ll) != (int64)*(uint8*)NIBBLES$ ) goto label$12634;
 TMP$5456$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12637;
 label$12634:;
 TMP$5456$1 = *(uint8*)NIBBLES$;
 label$12637:;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$5456$1 & 1ull) << (1ll & 63ll));
 if( (int64)*(int8*)((uint8*)CPU$1 + 8ll) >= (int64)*(uint8*)NIBBLES$ ) goto label$12635;
 TMP$5457$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12638;
 label$12635:;
 TMP$5457$1 = *(uint8*)NIBBLES$;
 label$12638:;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$5457$1 & 1ull) << (7ll & 63ll));
 label$12632:;
}

void INS_BCC( struct $7CPU6510* CPU$1 )
{
 label$12639:;
 if( (*(uint64*)CPU$1 & 1ull) != (uint64)(int64)*(uint8*)NIBBLES$ ) goto label$12642;
 {
  *(uint16*)&V$ = *(uint16*)((uint8*)CPU$1 + 12ll);
  *(int16*)&V$ = (int16)((int64)*(int16*)&V$ - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
  int8 vr$11 = _ZN12SYSTEM_BUS_T8READBYTEEt( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 16ll), *(uint16*)((uint8*)CPU$1 + 64ll) );
  *(int16*)&V$ = (int16)(((int64)*(int16*)&V$ + (int64)vr$11) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
  *(uint16*)((uint8*)CPU$1 + 12ll) = *(uint16*)&V$;
 }
 label$12642:;
 label$12641:;
 label$12640:;
}

void INS_BCS( struct $7CPU6510* CPU$1 )
{
 label$12643:;
 if( (*(uint64*)CPU$1 & 1ull) == 0ull ) goto label$12646;
 {
  *(uint16*)&V$ = *(uint16*)((uint8*)CPU$1 + 12ll);
  *(int16*)&V$ = (int16)((int64)*(int16*)&V$ - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
  int8 vr$10 = _ZN12SYSTEM_BUS_T8READBYTEEt( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 16ll), *(uint16*)((uint8*)CPU$1 + 64ll) );
  *(int16*)&V$ = (int16)(((int64)*(int16*)&V$ + (int64)vr$10) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
  *(uint16*)((uint8*)CPU$1 + 12ll) = *(uint16*)&V$;
 }
 label$12646:;
 label$12645:;
 label$12644:;
}

void INS_BEQ( struct $7CPU6510* CPU$1 )
{
 label$12647:;
 if( ((*(uint64*)CPU$1 >> (1ll & 63ll)) & 1ull) != (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$12650;
 {
  *(uint16*)&V$ = *(uint16*)((uint8*)CPU$1 + 12ll);
  *(int16*)&V$ = (int16)((int64)*(int16*)&V$ - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
  int8 vr$12 = _ZN12SYSTEM_BUS_T8READBYTEEt( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 16ll), *(uint16*)((uint8*)CPU$1 + 64ll) );
  *(int16*)&V$ = (int16)(((int64)*(int16*)&V$ + (int64)vr$12) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
  *(uint16*)((uint8*)CPU$1 + 12ll) = *(uint16*)&V$;
 }
 label$12650:;
 label$12649:;
 label$12648:;
}

void INS_BIT( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$5458$1;
 uint8 TMP$5459$1;
 uint8 TMP$5460$1;
 label$12651:;
 static int8 B$1;
 int8 vr$2 = _ZN12SYSTEM_BUS_T8READBYTEEt( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 16ll), *(uint16*)((uint8*)CPU$1 + 64ll) );
 B$1 = vr$2;
 if( ((int64)B$1 & ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) == 0ll ) goto label$12653;
 TMP$5458$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12656;
 label$12653:;
 TMP$5458$1 = *(uint8*)NIBBLES$;
 label$12656:;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$5458$1 & 1ull) << (7ll & 63ll));
 if( ((int64)B$1 & ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) == 0ll ) goto label$12654;
 TMP$5459$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12657;
 label$12654:;
 TMP$5459$1 = *(uint8*)NIBBLES$;
 label$12657:;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551551ull) | (((uint64)TMP$5459$1 & 1ull) << (6ll & 63ll));
 if( (int64)*(uint8*)NIBBLES$ != ((int64)B$1 & (int64)*(int8*)((uint8*)CPU$1 + 9ll)) ) goto label$12655;
 TMP$5460$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12658;
 label$12655:;
 TMP$5460$1 = *(uint8*)NIBBLES$;
 label$12658:;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$5460$1 & 1ull) << (1ll & 63ll));
 label$12652:;
}

void INS_BMI( struct $7CPU6510* CPU$1 )
{
 label$12659:;
 if( ((*(uint64*)CPU$1 >> (7ll & 63ll)) & 1ull) == 0ull ) goto label$12662;
 {
  *(uint16*)&V$ = *(uint16*)((uint8*)CPU$1 + 12ll);
  *(int16*)&V$ = (int16)((int64)*(int16*)&V$ - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
  int8 vr$11 = _ZN12SYSTEM_BUS_T8READBYTEEt( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 16ll), *(uint16*)((uint8*)CPU$1 + 64ll) );
  *(int16*)&V$ = (int16)(((int64)*(int16*)&V$ + (int64)vr$11) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
  *(uint16*)((uint8*)CPU$1 + 12ll) = *(uint16*)&V$;
 }
 label$12662:;
 label$12661:;
 label$12660:;
}

void INS_BNE( struct $7CPU6510* CPU$1 )
{
 label$12663:;
 if( ((*(uint64*)CPU$1 >> (1ll & 63ll)) & 1ull) != (uint64)(int64)*(uint8*)NIBBLES$ ) goto label$12666;
 {
  *(uint16*)&V$ = *(uint16*)((uint8*)CPU$1 + 12ll);
  *(int16*)&V$ = (int16)((int64)*(int16*)&V$ - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
  int8 vr$12 = _ZN12SYSTEM_BUS_T8READBYTEEt( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 16ll), *(uint16*)((uint8*)CPU$1 + 64ll) );
  *(int16*)&V$ = (int16)(((int64)*(int16*)&V$ + (int64)vr$12) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
  *(uint16*)((uint8*)CPU$1 + 12ll) = *(uint16*)&V$;
 }
 label$12666:;
 label$12665:;
 label$12664:;
}

void INS_BPL( struct $7CPU6510* CPU$1 )
{
 label$12667:;
 if( ((*(uint64*)CPU$1 >> (7ll & 63ll)) & 1ull) != 0ull ) goto label$12670;
 {
  *(uint16*)&V$ = *(uint16*)((uint8*)CPU$1 + 12ll);
  *(int16*)&V$ = (int16)((int64)*(int16*)&V$ - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
  int8 vr$11 = _ZN12SYSTEM_BUS_T8READBYTEEt( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 16ll), *(uint16*)((uint8*)CPU$1 + 64ll) );
  *(int16*)&V$ = (int16)(((int64)*(int16*)&V$ + (int64)vr$11) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
  *(uint16*)((uint8*)CPU$1 + 12ll) = *(uint16*)&V$;
 }
 label$12670:;
 label$12669:;
 label$12668:;
}

void INS_BRK( struct $7CPU6510* CPU$1 )
{
 label$12671:;
 *(uint16*)((uint8*)CPU$1 + 12ll) = (uint16)((int64)*(uint16*)((uint8*)CPU$1 + 12ll) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 _ZN7CPU65104PUSHEd( CPU$1, (double)*(uint8*)((uint8*)CPU$1 + 13ll) );
 _ZN7CPU65104PUSHEd( CPU$1, (double)*(uint8*)((uint8*)CPU$1 + 12ll) );
 _ZN7CPU65104PUSHEd( CPU$1, (double)*(uint8*)CPU$1 );
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551599ull) | (((uint64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) & 1ull) << (4ll & 63ll));
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551611ull) | (((uint64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) & 1ull) << (2ll & 63ll));
 uint16 vr$27 = _ZN12SYSTEM_BUS_T10READUSHORTEd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 16ll), 0x1.FFFCp+15 );
 *(uint16*)((uint8*)CPU$1 + 12ll) = vr$27;
 label$12672:;
}

void INS_BVC( struct $7CPU6510* CPU$1 )
{
 label$12673:;
 if( ((*(uint64*)CPU$1 >> (6ll & 63ll)) & 1ull) != (uint64)(int64)*(uint8*)NIBBLES$ ) goto label$12676;
 {
  *(uint16*)&V$ = *(uint16*)((uint8*)CPU$1 + 12ll);
  *(int16*)&V$ = (int16)((int64)*(int16*)&V$ - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
  int8 vr$12 = _ZN12SYSTEM_BUS_T8READBYTEEt( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 16ll), *(uint16*)((uint8*)CPU$1 + 64ll) );
  *(int16*)&V$ = (int16)(((int64)*(int16*)&V$ + (int64)vr$12) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
  *(uint16*)((uint8*)CPU$1 + 12ll) = *(uint16*)&V$;
 }
 label$12676:;
 label$12675:;
 label$12674:;
}

void INS_BVS( struct $7CPU6510* CPU$1 )
{
 label$12677:;
 if( ((*(uint64*)CPU$1 >> (6ll & 63ll)) & 1ull) == 0ull ) goto label$12680;
 {
  *(uint16*)&V$ = *(uint16*)((uint8*)CPU$1 + 12ll);
  *(int16*)&V$ = (int16)((int64)*(int16*)&V$ - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
  int8 vr$11 = _ZN12SYSTEM_BUS_T8READBYTEEt( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 16ll), *(uint16*)((uint8*)CPU$1 + 64ll) );
  *(int16*)&V$ = (int16)(((int64)*(int16*)&V$ + (int64)vr$11) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
  *(uint16*)((uint8*)CPU$1 + 12ll) = *(uint16*)&V$;
 }
 label$12680:;
 label$12679:;
 label$12678:;
}

void INS_CLC( struct $7CPU6510* CPU$1 )
{
 label$12681:;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551614ull) | ((uint64)*(uint8*)NIBBLES$ & 1ull);
 label$12682:;
}

void INS_CLD( struct $7CPU6510* CPU$1 )
{
 label$12683:;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551607ull) | (((uint64)*(uint8*)NIBBLES$ & 1ull) << (3ll & 63ll));
 label$12684:;
}

void INS_CLI( struct $7CPU6510* CPU$1 )
{
 label$12685:;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551611ull) | (((uint64)*(uint8*)NIBBLES$ & 1ull) << (2ll & 63ll));
 label$12686:;
}

void INS_CLV( struct $7CPU6510* CPU$1 )
{
 label$12687:;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551551ull) | (((uint64)*(uint8*)NIBBLES$ & 1ull) << (6ll & 63ll));
 label$12688:;
}

void INS_CMP( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$5461$1;
 uint8 TMP$5462$1;
 uint8 TMP$5463$1;
 label$12689:;
 uint8 vr$5 = _ZN12SYSTEM_BUS_T9READUBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 16ll), (double)*(uint16*)((uint8*)CPU$1 + 64ll) );
 *(uint16*)&V$ = (uint16)((int64)*(uint8*)((uint8*)CPU$1 + 8ll) - (int64)vr$5);
 if( (int64)*(uint16*)&V$ > (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$12691;
 TMP$5461$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12694;
 label$12691:;
 TMP$5461$1 = *(uint8*)NIBBLES$;
 label$12694:;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551614ull) | ((uint64)TMP$5461$1 & 1ull);
 if( (int64)*(uint8*)&V$ != (int64)*(uint8*)NIBBLES$ ) goto label$12692;
 TMP$5462$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12695;
 label$12692:;
 TMP$5462$1 = *(uint8*)NIBBLES$;
 label$12695:;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$5462$1 & 1ull) << (1ll & 63ll));
 if( (int64)*(int8*)&V$ >= (int64)*(uint8*)NIBBLES$ ) goto label$12693;
 TMP$5463$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12696;
 label$12693:;
 TMP$5463$1 = *(uint8*)NIBBLES$;
 label$12696:;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$5463$1 & 1ull) << (7ll & 63ll));
 label$12690:;
}

void INS_CPX( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$5464$1;
 uint8 TMP$5465$1;
 uint8 TMP$5466$1;
 label$12697:;
 uint8 vr$5 = _ZN12SYSTEM_BUS_T9READUBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 16ll), (double)*(uint16*)((uint8*)CPU$1 + 64ll) );
 *(uint16*)&V$ = (uint16)((int64)*(uint8*)((uint8*)CPU$1 + 9ll) - (int64)vr$5);
 if( (int64)*(uint16*)&V$ > (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$12699;
 TMP$5464$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12702;
 label$12699:;
 TMP$5464$1 = *(uint8*)NIBBLES$;
 label$12702:;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551614ull) | ((uint64)TMP$5464$1 & 1ull);
 if( (int64)*(uint8*)&V$ != (int64)*(uint8*)NIBBLES$ ) goto label$12700;
 TMP$5465$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12703;
 label$12700:;
 TMP$5465$1 = *(uint8*)NIBBLES$;
 label$12703:;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$5465$1 & 1ull) << (1ll & 63ll));
 if( (int64)*(int8*)&V$ >= (int64)*(uint8*)NIBBLES$ ) goto label$12701;
 TMP$5466$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12704;
 label$12701:;
 TMP$5466$1 = *(uint8*)NIBBLES$;
 label$12704:;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$5466$1 & 1ull) << (7ll & 63ll));
 label$12698:;
}

void INS_CPY( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$5467$1;
 uint8 TMP$5468$1;
 uint8 TMP$5469$1;
 label$12705:;
 uint8 vr$5 = _ZN12SYSTEM_BUS_T9READUBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 16ll), (double)*(uint16*)((uint8*)CPU$1 + 64ll) );
 *(uint16*)&V$ = (uint16)((int64)*(uint8*)((uint8*)CPU$1 + 10ll) - (int64)vr$5);
 if( (int64)*(uint16*)&V$ > (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$12707;
 TMP$5467$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12710;
 label$12707:;
 TMP$5467$1 = *(uint8*)NIBBLES$;
 label$12710:;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551614ull) | ((uint64)TMP$5467$1 & 1ull);
 if( (int64)*(uint8*)&V$ != (int64)*(uint8*)NIBBLES$ ) goto label$12708;
 TMP$5468$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12711;
 label$12708:;
 TMP$5468$1 = *(uint8*)NIBBLES$;
 label$12711:;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$5468$1 & 1ull) << (1ll & 63ll));
 if( (int64)*(int8*)&V$ >= (int64)*(uint8*)NIBBLES$ ) goto label$12709;
 TMP$5469$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12712;
 label$12709:;
 TMP$5469$1 = *(uint8*)NIBBLES$;
 label$12712:;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$5469$1 & 1ull) << (7ll & 63ll));
 label$12706:;
}

void INS_DEC( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$5470$1;
 uint8 TMP$5471$1;
 label$12713:;
 uint8 vr$3 = _ZN12SYSTEM_BUS_T9READUBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 16ll), (double)*(uint16*)((uint8*)CPU$1 + 64ll) );
 *(uint8*)&V$ = vr$3;
 *(int8*)&V$ = (int8)((int64)*(int8*)&V$ - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 if( (int64)*(int8*)&V$ != (int64)*(uint8*)NIBBLES$ ) goto label$12715;
 TMP$5470$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12717;
 label$12715:;
 TMP$5470$1 = *(uint8*)NIBBLES$;
 label$12717:;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$5470$1 & 1ull) << (1ll & 63ll));
 if( (int64)*(int8*)&V$ >= (int64)*(uint8*)NIBBLES$ ) goto label$12716;
 TMP$5471$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12718;
 label$12716:;
 TMP$5471$1 = *(uint8*)NIBBLES$;
 label$12718:;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$5471$1 & 1ull) << (7ll & 63ll));
 _ZN12SYSTEM_BUS_T10WRITEUBYTEEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 16ll), (double)*(uint16*)((uint8*)CPU$1 + 64ll), (double)*(uint8*)&V$ );
 label$12714:;
}

void INS_DEX( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$5472$1;
 uint8 TMP$5473$1;
 label$12719:;
 *(int8*)((uint8*)CPU$1 + 9ll) = (int8)((int32)__builtin_nearbyint( (double)(int64)*(int8*)((uint8*)CPU$1 + 9ll) + -0x1.p+0 ));
 if( (int64)*(uint8*)((uint8*)CPU$1 + 9ll) != (int64)*(uint8*)NIBBLES$ ) goto label$12721;
 TMP$5472$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12723;
 label$12721:;
 TMP$5472$1 = *(uint8*)NIBBLES$;
 label$12723:;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$5472$1 & 1ull) << (1ll & 63ll));
 if( (int64)*(int8*)((uint8*)CPU$1 + 9ll) >= (int64)*(uint8*)NIBBLES$ ) goto label$12722;
 TMP$5473$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12724;
 label$12722:;
 TMP$5473$1 = *(uint8*)NIBBLES$;
 label$12724:;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$5473$1 & 1ull) << (7ll & 63ll));
 label$12720:;
}

void INS_DEY( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$5474$1;
 uint8 TMP$5475$1;
 label$12725:;
 *(int8*)((uint8*)CPU$1 + 10ll) = (int8)((int64)*(int8*)((uint8*)CPU$1 + 10ll) - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 if( (int64)*(uint8*)((uint8*)CPU$1 + 10ll) != (int64)*(uint8*)NIBBLES$ ) goto label$12727;
 TMP$5474$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12729;
 label$12727:;
 TMP$5474$1 = *(uint8*)NIBBLES$;
 label$12729:;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$5474$1 & 1ull) << (1ll & 63ll));
 if( (int64)*(int8*)((uint8*)CPU$1 + 10ll) >= (int64)*(uint8*)NIBBLES$ ) goto label$12728;
 TMP$5475$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12730;
 label$12728:;
 TMP$5475$1 = *(uint8*)NIBBLES$;
 label$12730:;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$5475$1 & 1ull) << (7ll & 63ll));
 label$12726:;
}

void INS_EOR( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$5476$1;
 uint8 TMP$5477$1;
 label$12731:;
 uint8 vr$5 = _ZN12SYSTEM_BUS_T9READUBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 16ll), (double)*(uint16*)((uint8*)CPU$1 + 64ll) );
 *(uint8*)((uint8*)CPU$1 + 8ll) = (uint8)((int64)*(uint8*)((uint8*)CPU$1 + 8ll) ^ (int64)vr$5);
 if( (int64)*(uint8*)((uint8*)CPU$1 + 8ll) != (int64)*(uint8*)NIBBLES$ ) goto label$12733;
 TMP$5476$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12735;
 label$12733:;
 TMP$5476$1 = *(uint8*)NIBBLES$;
 label$12735:;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$5476$1 & 1ull) << (1ll & 63ll));
 if( (int64)*(int8*)((uint8*)CPU$1 + 8ll) >= (int64)*(uint8*)NIBBLES$ ) goto label$12734;
 TMP$5477$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12736;
 label$12734:;
 TMP$5477$1 = *(uint8*)NIBBLES$;
 label$12736:;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$5477$1 & 1ull) << (7ll & 63ll));
 label$12732:;
}

void INS_INC( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$5478$1;
 uint8 TMP$5479$1;
 label$12737:;
 uint8 vr$3 = _ZN12SYSTEM_BUS_T9READUBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 16ll), (double)*(uint16*)((uint8*)CPU$1 + 64ll) );
 *(uint8*)&V$ = vr$3;
 *(int16*)&V$ = (int16)((int64)*(int16*)&V$ + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 _ZN12SYSTEM_BUS_T9WRITEBYTEEtt( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 16ll), *(uint16*)((uint8*)CPU$1 + 64ll), (uint16)*(uint8*)&V$ );
 if( (int64)*(uint8*)&V$ != (int64)*(uint8*)NIBBLES$ ) goto label$12739;
 TMP$5478$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12741;
 label$12739:;
 TMP$5478$1 = *(uint8*)NIBBLES$;
 label$12741:;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$5478$1 & 1ull) << (1ll & 63ll));
 if( (int64)*(int8*)&V$ >= (int64)*(uint8*)NIBBLES$ ) goto label$12740;
 TMP$5479$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12742;
 label$12740:;
 TMP$5479$1 = *(uint8*)NIBBLES$;
 label$12742:;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$5479$1 & 1ull) << (7ll & 63ll));
 label$12738:;
}

void INS_INX( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$5480$1;
 uint8 TMP$5481$1;
 label$12743:;
 *(uint8*)&V$ = *(uint8*)((uint8*)CPU$1 + 9ll);
 *(int16*)&V$ = (int16)((int64)*(int16*)&V$ + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 *(uint8*)((uint8*)CPU$1 + 9ll) = *(uint8*)&V$;
 if( (int64)*(uint8*)&V$ != (int64)*(uint8*)NIBBLES$ ) goto label$12745;
 TMP$5480$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12747;
 label$12745:;
 TMP$5480$1 = *(uint8*)NIBBLES$;
 label$12747:;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$5480$1 & 1ull) << (1ll & 63ll));
 if( (int64)*(int8*)&V$ >= (int64)*(uint8*)NIBBLES$ ) goto label$12746;
 TMP$5481$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12748;
 label$12746:;
 TMP$5481$1 = *(uint8*)NIBBLES$;
 label$12748:;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$5481$1 & 1ull) << (7ll & 63ll));
 label$12744:;
}

void INS_INY( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$5482$1;
 uint8 TMP$5483$1;
 label$12749:;
 *(uint8*)&V$ = *(uint8*)((uint8*)CPU$1 + 10ll);
 *(int16*)&V$ = (int16)((int64)*(int16*)&V$ + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 *(uint8*)((uint8*)CPU$1 + 10ll) = *(uint8*)&V$;
 if( (int64)*(uint8*)&V$ != (int64)*(uint8*)NIBBLES$ ) goto label$12751;
 TMP$5482$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12753;
 label$12751:;
 TMP$5482$1 = *(uint8*)NIBBLES$;
 label$12753:;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$5482$1 & 1ull) << (1ll & 63ll));
 if( (int64)*(int8*)&V$ >= (int64)*(uint8*)NIBBLES$ ) goto label$12752;
 TMP$5483$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12754;
 label$12752:;
 TMP$5483$1 = *(uint8*)NIBBLES$;
 label$12754:;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$5483$1 & 1ull) << (7ll & 63ll));
 label$12750:;
}

void INS_JMP( struct $7CPU6510* CPU$1 )
{
 label$12755:;
 *(uint16*)((uint8*)CPU$1 + 12ll) = *(uint16*)((uint8*)CPU$1 + 64ll);
 label$12756:;
}

void INS_JSR( struct $7CPU6510* CPU$1 )
{
 label$12757:;
 *(uint16*)((uint8*)CPU$1 + 12ll) = (uint16)((int64)*(uint16*)((uint8*)CPU$1 + 12ll) - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 _ZN7CPU65104PUSHEd( CPU$1, (double)*(uint8*)((uint8*)CPU$1 + 13ll) );
 _ZN7CPU65104PUSHEd( CPU$1, (double)*(uint8*)((uint8*)CPU$1 + 12ll) );
 *(uint16*)((uint8*)CPU$1 + 12ll) = *(uint16*)((uint8*)CPU$1 + 64ll);
 label$12758:;
}

void INS_LDA( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$5484$1;
 uint8 TMP$5485$1;
 label$12759:;
 uint8 vr$3 = _ZN12SYSTEM_BUS_T9READUBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 16ll), (double)*(uint16*)((uint8*)CPU$1 + 64ll) );
 *(uint8*)((uint8*)CPU$1 + 8ll) = vr$3;
 if( (int64)*(uint8*)((uint8*)CPU$1 + 8ll) != (int64)*(uint8*)NIBBLES$ ) goto label$12761;
 TMP$5484$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12763;
 label$12761:;
 TMP$5484$1 = *(uint8*)NIBBLES$;
 label$12763:;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$5484$1 & 1ull) << (1ll & 63ll));
 if( (int64)*(int8*)((uint8*)CPU$1 + 8ll) >= (int64)*(uint8*)NIBBLES$ ) goto label$12762;
 TMP$5485$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12764;
 label$12762:;
 TMP$5485$1 = *(uint8*)NIBBLES$;
 label$12764:;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$5485$1 & 1ull) << (7ll & 63ll));
 label$12760:;
}

void INS_LDX( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$5486$1;
 uint8 TMP$5487$1;
 label$12765:;
 uint8 vr$3 = _ZN12SYSTEM_BUS_T9READUBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 16ll), (double)*(uint16*)((uint8*)CPU$1 + 64ll) );
 *(uint8*)((uint8*)CPU$1 + 9ll) = vr$3;
 if( (int64)*(uint8*)((uint8*)CPU$1 + 9ll) != (int64)*(uint8*)NIBBLES$ ) goto label$12767;
 TMP$5486$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12769;
 label$12767:;
 TMP$5486$1 = *(uint8*)NIBBLES$;
 label$12769:;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$5486$1 & 1ull) << (1ll & 63ll));
 if( (int64)*(int8*)((uint8*)CPU$1 + 9ll) >= (int64)*(uint8*)NIBBLES$ ) goto label$12768;
 TMP$5487$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12770;
 label$12768:;
 TMP$5487$1 = *(uint8*)NIBBLES$;
 label$12770:;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$5487$1 & 1ull) << (7ll & 63ll));
 label$12766:;
}

void INS_LDY( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$5488$1;
 uint8 TMP$5489$1;
 label$12771:;
 uint8 vr$3 = _ZN12SYSTEM_BUS_T9READUBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 16ll), (double)*(uint16*)((uint8*)CPU$1 + 64ll) );
 *(uint8*)((uint8*)CPU$1 + 10ll) = vr$3;
 if( (int64)*(uint8*)((uint8*)CPU$1 + 10ll) != (int64)*(uint8*)NIBBLES$ ) goto label$12773;
 TMP$5488$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12775;
 label$12773:;
 TMP$5488$1 = *(uint8*)NIBBLES$;
 label$12775:;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$5488$1 & 1ull) << (1ll & 63ll));
 if( (int64)*(int8*)((uint8*)CPU$1 + 10ll) >= (int64)*(uint8*)NIBBLES$ ) goto label$12774;
 TMP$5489$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12776;
 label$12774:;
 TMP$5489$1 = *(uint8*)NIBBLES$;
 label$12776:;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$5489$1 & 1ull) << (7ll & 63ll));
 label$12772:;
}

void INS_LSR( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$5490$1;
 uint8 TMP$5491$1;
 uint8 TMP$5492$1;
 label$12777:;
 uint8 vr$3 = _ZN12SYSTEM_BUS_T9READUBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 16ll), (double)*(uint16*)((uint8*)CPU$1 + 64ll) );
 *(uint8*)&V$ = vr$3;
 if( ((int64)*(uint8*)&V$ & (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) == 0ll ) goto label$12779;
 TMP$5490$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12782;
 label$12779:;
 TMP$5490$1 = *(uint8*)NIBBLES$;
 label$12782:;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551614ull) | ((uint64)TMP$5490$1 & 1ull);
 *(uint8*)&V$ = (uint8)((int64)*(uint8*)&V$ >> ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) & 63ll));
 _ZN12SYSTEM_BUS_T10WRITEUBYTEEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 16ll), (double)*(uint16*)((uint8*)CPU$1 + 64ll), (double)*(uint8*)&V$ );
 if( (int64)*(uint8*)&V$ != (int64)*(uint8*)NIBBLES$ ) goto label$12780;
 TMP$5491$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12783;
 label$12780:;
 TMP$5491$1 = *(uint8*)NIBBLES$;
 label$12783:;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$5491$1 & 1ull) << (1ll & 63ll));
 if( (int64)*(int8*)&V$ >= (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$12781;
 TMP$5492$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12784;
 label$12781:;
 TMP$5492$1 = *(uint8*)NIBBLES$;
 label$12784:;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$5492$1 & 1ull) << (7ll & 63ll));
 label$12778:;
}

void INS_LSRA( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$5493$1;
 uint8 TMP$5494$1;
 uint8 TMP$5495$1;
 label$12785:;
 if( ((int64)*(uint8*)((uint8*)CPU$1 + 8ll) & (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) == 0ll ) goto label$12787;
 TMP$5493$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12790;
 label$12787:;
 TMP$5493$1 = *(uint8*)NIBBLES$;
 label$12790:;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551614ull) | ((uint64)TMP$5493$1 & 1ull);
 *(uint8*)((uint8*)CPU$1 + 8ll) = (uint8)((int64)*(uint8*)((uint8*)CPU$1 + 8ll) >> ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) & 63ll));
 if( (int64)*(uint8*)((uint8*)CPU$1 + 8ll) != (int64)*(uint8*)NIBBLES$ ) goto label$12788;
 TMP$5494$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12791;
 label$12788:;
 TMP$5494$1 = *(uint8*)NIBBLES$;
 label$12791:;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$5494$1 & 1ull) << (1ll & 63ll));
 if( (int64)*(int8*)((uint8*)CPU$1 + 8ll) >= (int64)*(uint8*)NIBBLES$ ) goto label$12789;
 TMP$5495$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12792;
 label$12789:;
 TMP$5495$1 = *(uint8*)NIBBLES$;
 label$12792:;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$5495$1 & 1ull) << (7ll & 63ll));
 label$12786:;
}

void INS_NOP( struct $7CPU6510* CPU$1 )
{
 label$12793:;
 label$12794:;
}

void INS_ORA( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$5496$1;
 uint8 TMP$5497$1;
 label$12795:;
 uint8 vr$5 = _ZN12SYSTEM_BUS_T9READUBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 16ll), (double)*(uint16*)((uint8*)CPU$1 + 64ll) );
 *(uint8*)((uint8*)CPU$1 + 8ll) = (uint8)((int64)*(uint8*)((uint8*)CPU$1 + 8ll) | (int64)vr$5);
 if( (int64)*(uint8*)((uint8*)CPU$1 + 8ll) != (int64)*(uint8*)NIBBLES$ ) goto label$12797;
 TMP$5496$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12799;
 label$12797:;
 TMP$5496$1 = *(uint8*)NIBBLES$;
 label$12799:;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$5496$1 & 1ull) << (1ll & 63ll));
 if( (int64)*(int8*)((uint8*)CPU$1 + 8ll) >= (int64)*(uint8*)NIBBLES$ ) goto label$12798;
 TMP$5497$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12800;
 label$12798:;
 TMP$5497$1 = *(uint8*)NIBBLES$;
 label$12800:;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$5497$1 & 1ull) << (7ll & 63ll));
 label$12796:;
}

void INS_PHA( struct $7CPU6510* CPU$1 )
{
 label$12801:;
 _ZN7CPU65104PUSHEd( CPU$1, (double)*(uint8*)((uint8*)CPU$1 + 8ll) );
 label$12802:;
}

void INS_PHP( struct $7CPU6510* CPU$1 )
{
 label$12803:;
 _ZN7CPU65104PUSHEd( CPU$1, (double)*(uint8*)CPU$1 );
 label$12804:;
}

void INS_PLA( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$5498$1;
 uint8 TMP$5499$1;
 label$12805:;
 double vr$0 = _ZN7CPU65104PULLEv( CPU$1 );
 *(uint8*)((uint8*)CPU$1 + 8ll) = (uint8)((int32)__builtin_nearbyint( vr$0 ));
 if( (int64)*(uint8*)((uint8*)CPU$1 + 8ll) != (int64)*(uint8*)NIBBLES$ ) goto label$12807;
 TMP$5498$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12809;
 label$12807:;
 TMP$5498$1 = *(uint8*)NIBBLES$;
 label$12809:;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$5498$1 & 1ull) << (1ll & 63ll));
 if( (int64)*(int8*)((uint8*)CPU$1 + 8ll) >= (int64)*(uint8*)NIBBLES$ ) goto label$12808;
 TMP$5499$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12810;
 label$12808:;
 TMP$5499$1 = *(uint8*)NIBBLES$;
 label$12810:;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$5499$1 & 1ull) << (7ll & 63ll));
 label$12806:;
}

void INS_PLP( struct $7CPU6510* CPU$1 )
{
 label$12811:;
 double vr$0 = _ZN7CPU65104PULLEv( CPU$1 );
 *(uint8*)CPU$1 = (uint8)((int32)__builtin_nearbyint( vr$0 ));
 label$12812:;
}

void INS_ROL( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$5500$1;
 uint8 TMP$5501$1;
 uint8 TMP$5502$1;
 uint8 TMP$5503$1;
 label$12813:;
 uint8 vr$3 = _ZN12SYSTEM_BUS_T9READUBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 16ll), (double)*(uint16*)((uint8*)CPU$1 + 64ll) );
 *(uint8*)&V$ = vr$3;
 if( (*(uint64*)CPU$1 & 1ull) != (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$12815;
 TMP$5500$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12821;
 label$12815:;
 TMP$5500$1 = *(uint8*)NIBBLES$;
 label$12821:;
 CARY$ = (int64)TMP$5500$1;
 if( ((int64)*(uint8*)&V$ & ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) == 0ll ) goto label$12816;
 TMP$5501$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12822;
 label$12816:;
 TMP$5501$1 = *(uint8*)NIBBLES$;
 label$12822:;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551614ull) | ((uint64)TMP$5501$1 & 1ull);
 *(uint8*)&V$ = (uint8)((int64)*(uint8*)&V$ << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) & 63ll));
 if( CARY$ == 0ll ) goto label$12818;
 {
  *(uint8*)&V$ = (uint8)((int64)*(uint8*)&V$ | (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
  label$12818:;
 }
 _ZN12SYSTEM_BUS_T10WRITEUBYTEEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 16ll), (double)*(uint16*)((uint8*)CPU$1 + 64ll), (double)*(uint8*)&V$ );
 if( (int64)*(uint8*)&V$ != (int64)*(uint8*)NIBBLES$ ) goto label$12819;
 TMP$5502$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12823;
 label$12819:;
 TMP$5502$1 = *(uint8*)NIBBLES$;
 label$12823:;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$5502$1 & 1ull) << (1ll & 63ll));
 if( (int64)*(int8*)&V$ >= (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$12820;
 TMP$5503$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12824;
 label$12820:;
 TMP$5503$1 = *(uint8*)NIBBLES$;
 label$12824:;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$5503$1 & 1ull) << (7ll & 63ll));
 label$12814:;
}

void INS_ROLA( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$5504$1;
 uint8 TMP$5505$1;
 uint8 TMP$5506$1;
 uint8 TMP$5507$1;
 label$12825:;
 if( (*(uint64*)CPU$1 & 1ull) != (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$12827;
 TMP$5504$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12833;
 label$12827:;
 TMP$5504$1 = *(uint8*)NIBBLES$;
 label$12833:;
 CARY$ = (int64)TMP$5504$1;
 if( ((int64)*(uint8*)((uint8*)CPU$1 + 8ll) & ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) == 0ll ) goto label$12828;
 TMP$5505$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12834;
 label$12828:;
 TMP$5505$1 = *(uint8*)NIBBLES$;
 label$12834:;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551614ull) | ((uint64)TMP$5505$1 & 1ull);
 *(uint8*)((uint8*)CPU$1 + 8ll) = (uint8)((int64)*(uint8*)((uint8*)CPU$1 + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) & 63ll));
 if( CARY$ == 0ll ) goto label$12830;
 {
  *(uint8*)((uint8*)CPU$1 + 8ll) = (uint8)((int64)*(uint8*)((uint8*)CPU$1 + 8ll) | (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
  label$12830:;
 }
 if( (int64)*(uint8*)((uint8*)CPU$1 + 8ll) != (int64)*(uint8*)NIBBLES$ ) goto label$12831;
 TMP$5506$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12835;
 label$12831:;
 TMP$5506$1 = *(uint8*)NIBBLES$;
 label$12835:;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$5506$1 & 1ull) << (1ll & 63ll));
 if( (int64)*(int8*)((uint8*)CPU$1 + 8ll) >= (int64)*(uint8*)NIBBLES$ ) goto label$12832;
 TMP$5507$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12836;
 label$12832:;
 TMP$5507$1 = *(uint8*)NIBBLES$;
 label$12836:;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$5507$1 & 1ull) << (7ll & 63ll));
 label$12826:;
}

void INS_ROR( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$5508$1;
 uint8 TMP$5509$1;
 uint8 TMP$5510$1;
 uint8 TMP$5511$1;
 label$12837:;
 if( (*(uint64*)CPU$1 & 1ull) != (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$12839;
 TMP$5508$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12845;
 label$12839:;
 TMP$5508$1 = *(uint8*)NIBBLES$;
 label$12845:;
 CARY$ = (int64)TMP$5508$1;
 uint8 vr$7 = _ZN12SYSTEM_BUS_T9READUBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 16ll), (double)*(uint16*)((uint8*)CPU$1 + 64ll) );
 *(uint8*)&V$ = vr$7;
 if( ((int64)*(uint8*)&V$ & (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) == 0ll ) goto label$12840;
 TMP$5509$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12846;
 label$12840:;
 TMP$5509$1 = *(uint8*)NIBBLES$;
 label$12846:;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551614ull) | ((uint64)TMP$5509$1 & 1ull);
 *(uint8*)&V$ = (uint8)((int64)*(uint8*)&V$ >> ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) & 63ll));
 if( CARY$ == 0ll ) goto label$12842;
 {
  *(uint8*)&V$ = (uint8)((int64)*(uint8*)&V$ | ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)));
  label$12842:;
 }
 _ZN12SYSTEM_BUS_T10WRITEUBYTEEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 16ll), (double)*(uint16*)((uint8*)CPU$1 + 64ll), (double)*(uint8*)&V$ );
 if( (int64)*(uint8*)&V$ != (int64)*(uint8*)NIBBLES$ ) goto label$12843;
 TMP$5510$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12847;
 label$12843:;
 TMP$5510$1 = *(uint8*)NIBBLES$;
 label$12847:;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$5510$1 & 1ull) << (1ll & 63ll));
 if( (int64)*(int8*)&V$ >= (int64)*(uint8*)NIBBLES$ ) goto label$12844;
 TMP$5511$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12848;
 label$12844:;
 TMP$5511$1 = *(uint8*)NIBBLES$;
 label$12848:;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$5511$1 & 1ull) << (7ll & 63ll));
 label$12838:;
}

void INS_RORA( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$5512$1;
 uint8 TMP$5513$1;
 uint8 TMP$5514$1;
 uint8 TMP$5515$1;
 label$12849:;
 if( (*(uint64*)CPU$1 & 1ull) != (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$12851;
 TMP$5512$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12857;
 label$12851:;
 TMP$5512$1 = *(uint8*)NIBBLES$;
 label$12857:;
 CARY$ = (int64)TMP$5512$1;
 if( ((int64)*(uint8*)((uint8*)CPU$1 + 8ll) & (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) == 0ll ) goto label$12852;
 TMP$5513$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12858;
 label$12852:;
 TMP$5513$1 = *(uint8*)NIBBLES$;
 label$12858:;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551614ull) | ((uint64)TMP$5513$1 & 1ull);
 *(uint8*)((uint8*)CPU$1 + 8ll) = (uint8)((int64)*(uint8*)((uint8*)CPU$1 + 8ll) >> ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) & 63ll));
 if( CARY$ == 0ll ) goto label$12854;
 {
  *(uint8*)((uint8*)CPU$1 + 8ll) = (uint8)((int64)*(uint8*)((uint8*)CPU$1 + 8ll) | ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)));
  label$12854:;
 }
 if( (int64)*(uint8*)((uint8*)CPU$1 + 8ll) != (int64)*(uint8*)NIBBLES$ ) goto label$12855;
 TMP$5514$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12859;
 label$12855:;
 TMP$5514$1 = *(uint8*)NIBBLES$;
 label$12859:;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$5514$1 & 1ull) << (1ll & 63ll));
 if( (int64)*(int8*)((uint8*)CPU$1 + 8ll) >= (int64)*(uint8*)NIBBLES$ ) goto label$12856;
 TMP$5515$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12860;
 label$12856:;
 TMP$5515$1 = *(uint8*)NIBBLES$;
 label$12860:;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$5515$1 & 1ull) << (7ll & 63ll));
 label$12850:;
}

void INS_RTI( struct $7CPU6510* CPU$1 )
{
 label$12861:;
 double vr$0 = _ZN7CPU65104PULLEv( CPU$1 );
 *(uint8*)CPU$1 = (uint8)((int32)__builtin_nearbyint( vr$0 ));
 double vr$3 = _ZN7CPU65104PULLEv( CPU$1 );
 *(uint8*)((uint8*)CPU$1 + 12ll) = (uint8)((int32)__builtin_nearbyint( vr$3 ));
 double vr$6 = _ZN7CPU65104PULLEv( CPU$1 );
 *(uint8*)((uint8*)CPU$1 + 13ll) = (uint8)((int32)__builtin_nearbyint( vr$6 ));
 *(uint16*)((uint8*)CPU$1 + 12ll) = (uint16)((int64)*(uint16*)((uint8*)CPU$1 + 12ll) + 1ll);
 label$12862:;
}

void INS_RTS( struct $7CPU6510* CPU$1 )
{
 label$12863:;
 double vr$0 = _ZN7CPU65104PULLEv( CPU$1 );
 *(uint8*)((uint8*)CPU$1 + 12ll) = (uint8)((int32)__builtin_nearbyint( vr$0 ));
 double vr$3 = _ZN7CPU65104PULLEv( CPU$1 );
 *(uint8*)((uint8*)CPU$1 + 13ll) = (uint8)((int32)__builtin_nearbyint( vr$3 ));
 *(uint16*)((uint8*)CPU$1 + 12ll) = (uint16)((int64)*(uint16*)((uint8*)CPU$1 + 12ll) + 1ll);
 label$12864:;
}

void INS_SBC( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$5516$1;
 uint8 TMP$5517$1;
 uint8 TMP$5518$1;
 uint8 TMP$5519$1;
 label$12865:;
 static struct $5MULTI B$1;
 uint8 vr$3 = _ZN12SYSTEM_BUS_T9READUBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 16ll), (double)*(uint16*)((uint8*)CPU$1 + 64ll) );
 *(uint8*)&B$1 = vr$3;
 *(uint16*)&V$ = (uint16)((int64)*(uint8*)((uint8*)CPU$1 + 8ll) - (int64)*(uint8*)&B$1);
 if( (*(uint64*)CPU$1 & 1ull) != (uint64)(int64)*(uint8*)NIBBLES$ ) goto label$12868;
 {
  *(int16*)&V$ = (int16)((int64)*(int16*)&V$ - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
  label$12868:;
 }
 if( ((((int64)*(uint8*)((uint8*)CPU$1 + 8ll) ^ (int64)*(uint8*)&B$1) & ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) & (((int64)*(uint8*)((uint8*)CPU$1 + 8ll) ^ (int64)*(uint8*)&V$) & ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)))) == 0ll ) goto label$12869;
 TMP$5516$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12873;
 label$12869:;
 TMP$5516$1 = *(uint8*)NIBBLES$;
 label$12873:;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551551ull) | (((uint64)TMP$5516$1 & 1ull) << (6ll & 63ll));
 *(uint8*)((uint8*)CPU$1 + 8ll) = *(uint8*)&V$;
 if( (int64)*(uint16*)&V$ > (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$12870;
 TMP$5517$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12874;
 label$12870:;
 TMP$5517$1 = *(uint8*)NIBBLES$;
 label$12874:;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551614ull) | ((uint64)TMP$5517$1 & 1ull);
 if( (int64)*(uint8*)&V$ != (int64)*(uint8*)NIBBLES$ ) goto label$12871;
 TMP$5518$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12875;
 label$12871:;
 TMP$5518$1 = *(uint8*)NIBBLES$;
 label$12875:;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$5518$1 & 1ull) << (1ll & 63ll));
 if( (int64)*(int8*)&V$ >= (int64)*(uint8*)NIBBLES$ ) goto label$12872;
 TMP$5519$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12876;
 label$12872:;
 TMP$5519$1 = *(uint8*)NIBBLES$;
 label$12876:;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$5519$1 & 1ull) << (7ll & 63ll));
 label$12866:;
}

void INS_SEC( struct $7CPU6510* CPU$1 )
{
 label$12877:;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551614ull) | ((uint64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) & 1ull);
 label$12878:;
}

void INS_SED( struct $7CPU6510* CPU$1 )
{
 label$12879:;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551607ull) | (((uint64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) & 1ull) << (3ll & 63ll));
 label$12880:;
}

void INS_SEI( struct $7CPU6510* CPU$1 )
{
 label$12881:;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551611ull) | (((uint64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) & 1ull) << (2ll & 63ll));
 label$12882:;
}

void INS_STA( struct $7CPU6510* CPU$1 )
{
 label$12883:;
 _ZN12SYSTEM_BUS_T10WRITEUBYTEEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 16ll), (double)*(uint16*)((uint8*)CPU$1 + 64ll), (double)*(uint8*)((uint8*)CPU$1 + 8ll) );
 label$12884:;
}

void INS_STX( struct $7CPU6510* CPU$1 )
{
 label$12885:;
 _ZN12SYSTEM_BUS_T10WRITEUBYTEEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 16ll), (double)*(uint16*)((uint8*)CPU$1 + 64ll), (double)*(uint8*)((uint8*)CPU$1 + 9ll) );
 label$12886:;
}

void INS_STY( struct $7CPU6510* CPU$1 )
{
 label$12887:;
 _ZN12SYSTEM_BUS_T10WRITEUBYTEEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 16ll), (double)*(uint16*)((uint8*)CPU$1 + 64ll), (double)*(uint8*)((uint8*)CPU$1 + 10ll) );
 label$12888:;
}

void INS_TAX( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$5520$1;
 uint8 TMP$5521$1;
 label$12889:;
 *(uint8*)((uint8*)CPU$1 + 9ll) = *(uint8*)((uint8*)CPU$1 + 8ll);
 if( (int64)*(uint8*)((uint8*)CPU$1 + 9ll) != (int64)*(uint8*)NIBBLES$ ) goto label$12891;
 TMP$5520$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12893;
 label$12891:;
 TMP$5520$1 = *(uint8*)NIBBLES$;
 label$12893:;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$5520$1 & 1ull) << (1ll & 63ll));
 if( (int64)*(int8*)((uint8*)CPU$1 + 9ll) >= (int64)*(uint8*)NIBBLES$ ) goto label$12892;
 TMP$5521$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12894;
 label$12892:;
 TMP$5521$1 = *(uint8*)NIBBLES$;
 label$12894:;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$5521$1 & 1ull) << (7ll & 63ll));
 label$12890:;
}

void INS_TAY( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$5522$1;
 uint8 TMP$5523$1;
 label$12895:;
 *(uint8*)((uint8*)CPU$1 + 10ll) = *(uint8*)((uint8*)CPU$1 + 8ll);
 if( (int64)*(uint8*)((uint8*)CPU$1 + 10ll) != (int64)*(uint8*)NIBBLES$ ) goto label$12897;
 TMP$5522$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12899;
 label$12897:;
 TMP$5522$1 = *(uint8*)NIBBLES$;
 label$12899:;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$5522$1 & 1ull) << (1ll & 63ll));
 if( (int64)*(int8*)((uint8*)CPU$1 + 10ll) >= (int64)*(uint8*)NIBBLES$ ) goto label$12898;
 TMP$5523$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12900;
 label$12898:;
 TMP$5523$1 = *(uint8*)NIBBLES$;
 label$12900:;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$5523$1 & 1ull) << (7ll & 63ll));
 label$12896:;
}

void INS_TSX( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$5524$1;
 uint8 TMP$5525$1;
 label$12901:;
 *(uint8*)((uint8*)CPU$1 + 9ll) = *(uint8*)((uint8*)CPU$1 + 14ll);
 if( (int64)*(uint8*)((uint8*)CPU$1 + 9ll) != (int64)*(uint8*)NIBBLES$ ) goto label$12903;
 TMP$5524$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12905;
 label$12903:;
 TMP$5524$1 = *(uint8*)NIBBLES$;
 label$12905:;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$5524$1 & 1ull) << (1ll & 63ll));
 if( (int64)*(int8*)((uint8*)CPU$1 + 9ll) >= (int64)*(uint8*)NIBBLES$ ) goto label$12904;
 TMP$5525$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12906;
 label$12904:;
 TMP$5525$1 = *(uint8*)NIBBLES$;
 label$12906:;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$5525$1 & 1ull) << (7ll & 63ll));
 label$12902:;
}

void INS_TXA( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$5526$1;
 uint8 TMP$5527$1;
 label$12907:;
 *(uint8*)((uint8*)CPU$1 + 8ll) = *(uint8*)((uint8*)CPU$1 + 9ll);
 if( (int64)*(uint8*)((uint8*)CPU$1 + 8ll) != (int64)*(uint8*)NIBBLES$ ) goto label$12909;
 TMP$5526$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12911;
 label$12909:;
 TMP$5526$1 = *(uint8*)NIBBLES$;
 label$12911:;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$5526$1 & 1ull) << (1ll & 63ll));
 if( (int64)*(int8*)((uint8*)CPU$1 + 8ll) >= (int64)*(uint8*)NIBBLES$ ) goto label$12910;
 TMP$5527$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12912;
 label$12910:;
 TMP$5527$1 = *(uint8*)NIBBLES$;
 label$12912:;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$5527$1 & 1ull) << (7ll & 63ll));
 label$12908:;
}

void INS_TXS( struct $7CPU6510* CPU$1 )
{
 label$12913:;
 *(uint8*)((uint8*)CPU$1 + 14ll) = *(uint8*)((uint8*)CPU$1 + 9ll);
 label$12914:;
}

void INS_TYA( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$5528$1;
 uint8 TMP$5529$1;
 label$12915:;
 *(uint8*)((uint8*)CPU$1 + 8ll) = *(uint8*)((uint8*)CPU$1 + 10ll);
 if( (int64)*(uint8*)((uint8*)CPU$1 + 8ll) != (int64)*(uint8*)NIBBLES$ ) goto label$12917;
 TMP$5528$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12919;
 label$12917:;
 TMP$5528$1 = *(uint8*)NIBBLES$;
 label$12919:;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$5528$1 & 1ull) << (1ll & 63ll));
 if( (int64)*(int8*)((uint8*)CPU$1 + 8ll) >= (int64)*(uint8*)NIBBLES$ ) goto label$12918;
 TMP$5529$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$12920;
 label$12918:;
 TMP$5529$1 = *(uint8*)NIBBLES$;
 label$12920:;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$5529$1 & 1ull) << (7ll & 63ll));
 label$12916:;
}

void INS_R32( struct $7CPU6510* CPU$1 )
{
 label$12921:;
 double vr$3 = _ZN12SYSTEM_BUS_T6PEEK64Ed( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 16ll), (double)*(uint32*)((uint8*)CPU$1 + 64ll) );
 *(uint8*)((uint8*)CPU$1 + 8ll) = (uint8)((int32)__builtin_nearbyint( vr$3 ));
 label$12922:;
}

void INS_W32( struct $7CPU6510* CPU$1 )
{
 label$12923:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 16ll), (double)*(uint32*)((uint8*)CPU$1 + 64ll), (double)*(uint8*)((uint8*)CPU$1 + 8ll) );
 label$12924:;
}

void INS_R64( struct $7CPU6510* CPU$1 )
{
 label$12925:;
 double vr$3 = _ZN12SYSTEM_BUS_T6PEEK64Ed( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 16ll), (double)*(uint64*)((uint8*)CPU$1 + 64ll) );
 *(uint8*)((uint8*)CPU$1 + 8ll) = (uint8)((int32)__builtin_nearbyint( vr$3 ));
 label$12926:;
}

void INS_W64( struct $7CPU6510* CPU$1 )
{
 label$12927:;
 _ZN12SYSTEM_BUS_T6POKE64Edd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 16ll), (double)*(uint64*)((uint8*)CPU$1 + 64ll), (double)*(uint8*)((uint8*)CPU$1 + 8ll) );
 label$12928:;
}

int64 INTERRUPTSERVICE( struct $7CPU6510* CPU$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$13525:;
 static FBSTRING S$1;
 static int64 KEY$1;
 static int64 IRQTICKS$1;
 if( ((*(uint64*)CPU$1 >> (2ll & 63ll)) & 1ull) != (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$13528;
 {
  fb$result$1 = (int64)*(uint8*)NIBBLES$;
  goto label$13526;
  label$13528:;
 }
 int64 NCHARS$1;
 uint8 vr$7 = _ZN12SYSTEM_BUS_T9READUBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 16ll), 0x1.8Cp+7 );
 NCHARS$1 = (int64)vr$7;
 if( NCHARS$1 >= (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) ) goto label$13530;
 {
  FBSTRING STRKEY$2;
  FBSTRING* vr$10 = fb_Inkey( );
  fb_StrInit( (void*)&STRKEY$2, -1ll, (void*)vr$10, -1ll, 0 );
  int64 vr$13 = fb_StrLen( (void*)&STRKEY$2, -1ll );
  KEY$1 = vr$13;
  if( KEY$1 == 0ll ) goto label$13532;
  {
   KEY$1 = (int64)*(uint8*)((uint8*)((uint8*)*(uint8**)&STRKEY$2 + KEY$1) - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) + ((KEY$1 - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) * ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)));
   {
    if( KEY$1 != (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$13534;
    label$13535:;
    {
     fb_End( 0 );
    }
    goto label$13533;
    label$13534:;
    if( KEY$1 < 65ll ) goto label$13536;
    if( KEY$1 > 90ll ) goto label$13536;
    label$13537:;
    {
     KEY$1 = KEY$1 + 32ll;
     FBSTRING* vr$31 = fb_CHR( 1, KEY$1 );
     fb_StrConcatAssign( (void*)&S$1, -1ll, (void*)vr$31, -1ll, 0 );
    }
    goto label$13533;
    label$13536:;
    if( KEY$1 < 97ll ) goto label$13538;
    if( KEY$1 > 122ll ) goto label$13538;
    label$13539:;
    {
     KEY$1 = KEY$1 + -32ll;
     FBSTRING* vr$33 = fb_CHR( 1, KEY$1 );
     fb_StrConcatAssign( (void*)&S$1, -1ll, (void*)vr$33, -1ll, 0 );
    }
    goto label$13533;
    label$13538:;
    if( KEY$1 != 316ll ) goto label$13540;
    label$13541:;
    {
     fb_Locate( 1, 1, -1, 0, 0 );
     FBSTRING* vr$34 = fb_SPACE( 48ll );
     fb_PrintString( 0, (FBSTRING*)vr$34, 1 );
     fb_Locate( 1, 1, -1, 0, 0 );
     FBSTRING* vr$35 = fb_StrAllocTempDescZEx( (uint8*)"save filename:", 14ll );
     fb_ConsoleInput( (FBSTRING*)vr$35, -1, -1 );
     fb_InputString( (void*)&STRKEY$2, -1ll, 0 );
     int64 vr$38 = fb_StrLen( (void*)&STRKEY$2, -1ll );
     if( vr$38 == 0ll ) goto label$13543;
     {
      int32 vr$39 = fb_FileFree( );
      KEY$1 = (int64)vr$39;
      int32 vr$43 = fb_FileOpen( (FBSTRING*)&STRKEY$2, 0u, 2u, 0u, (int32)KEY$1, 0 );
      if( (int64)vr$43 != 0ll ) goto label$13545;
      {
       static uint8 U8$7;
       int64 NBYTES$7;
       uint16 vr$46 = _ZN12SYSTEM_BUS_T10READUSHORTEd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 16ll), 0x1.68p+5 );
       NBYTES$7 = (int64)vr$46;
       NBYTES$7 = NBYTES$7 + -2048ll;
       fb_FilePutLarge( (int32)KEY$1, 0ll, (void*)&NBYTES$7, 8ull );
       {
        int64 I$8;
        I$8 = 0ll;
        int64 TMP$6146$8;
        TMP$6146$8 = NBYTES$7 + -1ll;
        goto label$13546;
        label$13549:;
        {
         uint8 vr$55 = _ZN12SYSTEM_BUS_T9READUBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 16ll), (double)(I$8 + 2048ll) );
         U8$7 = vr$55;
         fb_FilePutLarge( (int32)KEY$1, 0ll, (void*)&U8$7, 1ull );
        }
        label$13547:;
        I$8 = I$8 + 1ll;
        label$13546:;
        if( I$8 <= TMP$6146$8 ) goto label$13549;
        label$13548:;
       }
       fb_FileClose( (int32)KEY$1 );
      }
      goto label$13544;
      label$13545:;
      {
       FBSTRING TMP$6148$7;
       fb_Locate( 1, 1, -1, 0, 0 );
       FBSTRING* vr$59 = fb_SPACE( 48ll );
       fb_PrintString( 0, (FBSTRING*)vr$59, 1 );
       fb_Locate( 1, 1, -1, 0, 0 );
       __builtin_memset( &TMP$6148$7, 0, 24ll );
       FBSTRING* vr$63 = fb_StrConcat( &TMP$6148$7, (void*)"can't create: ", 15ll, (void*)&STRKEY$2, -1ll );
       fb_PrintString( 0, (FBSTRING*)vr$63, 1 );
       fb_Beep( );
       fb_Sleep( -1 );
      }
      label$13544:;
     }
     label$13543:;
     label$13542:;
     KEY$1 = 0ll;
    }
    goto label$13533;
    label$13540:;
    if( KEY$1 != 317ll ) goto label$13550;
    label$13551:;
    {
     fb_Locate( 1, 1, -1, 0, 0 );
     FBSTRING* vr$64 = fb_SPACE( 48ll );
     fb_PrintString( 0, (FBSTRING*)vr$64, 1 );
     fb_Locate( 1, 1, -1, 0, 0 );
     FBSTRING* vr$65 = fb_StrAllocTempDescZEx( (uint8*)"load filename:", 14ll );
     fb_ConsoleInput( (FBSTRING*)vr$65, -1, -1 );
     fb_InputString( (void*)&STRKEY$2, -1ll, 0 );
     int64 vr$68 = fb_StrLen( (void*)&STRKEY$2, -1ll );
     if( vr$68 == 0ll ) goto label$13553;
     {
      int32 vr$69 = fb_FileFree( );
      KEY$1 = (int64)vr$69;
      int32 vr$73 = fb_FileOpen( (FBSTRING*)&STRKEY$2, 0u, 1u, 0u, (int32)KEY$1, 0 );
      if( (int64)vr$73 != 0ll ) goto label$13555;
      {
       static uint8 U8$7;
       static int64 NBYTES$7;
       fb_FileGetLarge( (int32)KEY$1, 0ll, (void*)&NBYTES$7, 8ull );
       {
        int64 I$8;
        I$8 = 0ll;
        int64 TMP$6150$8;
        TMP$6150$8 = NBYTES$7 + -1ll;
        goto label$13556;
        label$13559:;
        {
         fb_FileGetLarge( (int32)KEY$1, 0ll, (void*)&U8$7, 1ull );
         _ZN12SYSTEM_BUS_T10WRITEUBYTEEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 16ll), (double)(I$8 + 2048ll), (double)U8$7 );
        }
        label$13557:;
        I$8 = I$8 + 1ll;
        label$13556:;
        if( I$8 <= TMP$6150$8 ) goto label$13559;
        label$13558:;
       }
       fb_FileClose( (int32)KEY$1 );
       NBYTES$7 = NBYTES$7 + 2048ll;
       _ZN12SYSTEM_BUS_T11WRITEUSHORTEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 16ll), 0x1.68p+5, (double)NBYTES$7 );
       *(uint16*)((uint8*)CPU$1 + 12ll) = (uint16)42282u;
      }
      goto label$13554;
      label$13555:;
      {
       FBSTRING TMP$6152$7;
       fb_Locate( 1, 1, -1, 0, 0 );
       FBSTRING* vr$88 = fb_SPACE( 48ll );
       fb_PrintString( 0, (FBSTRING*)vr$88, 1 );
       fb_Locate( 1, 1, -1, 0, 0 );
       __builtin_memset( &TMP$6152$7, 0, 24ll );
       FBSTRING* vr$92 = fb_StrConcat( &TMP$6152$7, (void*)"can't open: ", 13ll, (void*)&STRKEY$2, -1ll );
       fb_PrintString( 0, (FBSTRING*)vr$92, 1 );
       fb_Beep( );
       fb_Sleep( -1 );
      }
      label$13554:;
     }
     label$13553:;
     label$13552:;
     KEY$1 = 0ll;
    }
    goto label$13533;
    label$13550:;
    if( KEY$1 != 327ll ) goto label$13560;
    label$13561:;
    {
     KEY$1 = 19ll;
    }
    goto label$13533;
    label$13560:;
    if( KEY$1 != 8ll ) goto label$13562;
    label$13563:;
    {
     KEY$1 = 20ll;
    }
    goto label$13533;
    label$13562:;
    if( KEY$1 != 331ll ) goto label$13564;
    label$13565:;
    {
     KEY$1 = 157ll;
    }
    goto label$13533;
    label$13564:;
    if( KEY$1 != 328ll ) goto label$13566;
    label$13567:;
    {
     KEY$1 = 145ll;
    }
    goto label$13533;
    label$13566:;
    if( KEY$1 != 333ll ) goto label$13568;
    label$13569:;
    {
     KEY$1 = 29ll;
    }
    goto label$13533;
    label$13568:;
    if( KEY$1 != 336ll ) goto label$13570;
    label$13571:;
    {
     KEY$1 = 17ll;
    }
    label$13570:;
    label$13533:;
   }
   if( KEY$1 == 0ll ) goto label$13573;
   {
    _ZN12SYSTEM_BUS_T10WRITEUBYTEEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 16ll), (double)(NCHARS$1 + 631ll), (double)KEY$1 );
    _ZN12SYSTEM_BUS_T10WRITEUBYTEEdd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 16ll), 0x1.8Cp+7, (double)(NCHARS$1 + 1ll) );
   }
   label$13573:;
   label$13572:;
  }
  label$13532:;
  label$13531:;
  fb_StrDelete( (FBSTRING*)&STRKEY$2 );
 }
 label$13530:;
 label$13529:;
 _ZN7CPU65104PUSHEd( CPU$1, (double)*(uint8*)((uint8*)CPU$1 + 13ll) );
 _ZN7CPU65104PUSHEd( CPU$1, (double)*(uint8*)((uint8*)CPU$1 + 12ll) );
 _ZN7CPU65104PUSHEd( CPU$1, (double)*(uint8*)CPU$1 );
 uint8 vr$108 = _ZN12SYSTEM_BUS_T9READUBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 16ll), 0x1.FFFCp+15 );
 *(uint8*)((uint8*)CPU$1 + 13ll) = vr$108;
 uint8 vr$111 = _ZN12SYSTEM_BUS_T9READUBYTEEd( *(struct $12SYSTEM_BUS_T**)((uint8*)CPU$1 + 16ll), 0x1.FFFEp+15 );
 *(uint8*)((uint8*)CPU$1 + 12ll) = vr$111;
 *(uint64*)CPU$1 = *(uint64*)CPU$1 & 18446744073709551599ull;
 *(uint64*)CPU$1 = (*(uint64*)CPU$1 & 18446744073709551611ull) | 4ull;
 label$13574:;
 if( *(uint64*)((uint8*)CPU$1 + 24ll) == 64ull ) goto label$13575;
 {
  _ZN7CPU65104TICKEd( CPU$1, __builtin_inf() );
  IRQTICKS$1 = IRQTICKS$1 + 1ll;
 }
 goto label$13574;
 label$13575:;
 double vr$122 = _ZN7CPU65104PULLEv( CPU$1 );
 *(uint8*)CPU$1 = (uint8)((int32)__builtin_nearbyint( vr$122 ));
 double vr$125 = _ZN7CPU65104PULLEv( CPU$1 );
 *(uint8*)((uint8*)CPU$1 + 12ll) = (uint8)((int32)__builtin_nearbyint( vr$125 ));
 double vr$128 = _ZN7CPU65104PULLEv( CPU$1 );
 *(uint8*)((uint8*)CPU$1 + 13ll) = (uint8)((int32)__builtin_nearbyint( vr$128 ));
 if( KEY$1 != 13ll ) goto label$13577;
 {
  FLAG$ = 1ll;
 }
 goto label$13576;
 label$13577:;
 {
  FLAG$ = 0ll;
 }
 label$13576:;
 fb$result$1 = IRQTICKS$1;
 label$13526:;
 return fb$result$1;
}

void RASTERLINE( void* PARAM$1 )
{
 label$13578:;
 static struct $7VECTOR2 FRAGCOORD$1;
 static int64 LABEL$13580$1;
 if( LABEL$13580$1 != 0ll ) goto label$13581;
 LABEL$13580$1 = 1ll;
 _ZN7VECTOR2C1Ev( &FRAGCOORD$1 );
 label$13581:;
 static struct $7VECTOR4 FRAGCOLOR$1;
 static int64 LABEL$13582$1;
 if( LABEL$13582$1 != 0ll ) goto label$13583;
 LABEL$13582$1 = 1ll;
 _ZN7VECTOR4C1Ev( &FRAGCOLOR$1 );
 label$13583:;
 struct $10THREADSCAN* SCANPARAMS$1;
 SCANPARAMS$1 = (struct $10THREADSCAN*)PARAM$1;
 {
  uint64 X$2;
  X$2 = 0ull;
  uint64 TMP$6153$2;
  TMP$6153$2 = ((uint64)__builtin_nearbyint( *(double*)((uint8*)SCANPARAMS$1 + 8ll) ));
  goto label$13584;
  label$13587:;
  {
   *(double*)&FRAGCOORD$1 = (double)X$2;
   *(double*)((uint8*)&FRAGCOORD$1 + 8ll) = *(double*)((uint8*)SCANPARAMS$1 + 16ll) - *(double*)SCANPARAMS$1;
   _ZN12SYSTEM_BUS_T9MAINIMAGEER7VECTOR4RK7VECTOR2( *(struct $12SYSTEM_BUS_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) + 16ll), &FRAGCOLOR$1, (struct $7VECTOR2*)&FRAGCOORD$1 );
   uint64 vr$7 = _ZN7VECTOR4cvyEv( &FRAGCOLOR$1 );
   fb_GfxPset( FGIMAGE$, (float)X$2, (float)*(double*)SCANPARAMS$1, (uint32)vr$7, 4, 0 );
  }
  label$13585:;
  X$2 = X$2 + 1ull;
  label$13584:;
  if( X$2 <= TMP$6153$2 ) goto label$13587;
  label$13586:;
 }
 label$13579:;
}

void KMAIN( struct $14MULTIBOOT_INFO* MB_INFO$1 )
{
 label$13588:;
 TICKS$ = (uint64)*(uint8*)NIBBLES$;
 RES$ = (uint64)*(uint8*)NIBBLES$;
 label$13590:;
 {
  TICKS$ = TICKS$ + (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
  if( FLAG$ != (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$13594;
  {
   _ZN7CPU65104TICKEd( *(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll), (double)TICKS$ );
   *(double*)((int64)(double*)MEM64$ + 395344ll) = (double)0ll;
   *(double*)((int64)(double*)MEM64$ + 396000ll) = (double)0ll;
  }
  goto label$13593;
  label$13594:;
  {
   _ZN7CPU65104TICKEd( *(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll), __builtin_inf() );
  }
  label$13593:;
  if( (TICKS$ % (uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)))) != (uint64)(int64)*(uint8*)NIBBLES$ ) goto label$13596;
  {
   int64 vr$21 = INTERRUPTSERVICE( *(struct $7CPU6510**)((uint8*)&COMPUTER$ + 360ll) );
   TICKS$ = TICKS$ + (uint64)vr$21;
   fb_GfxLock( );
   fb_GfxPut( (void*)0ull, (float)*(uint8*)NIBBLES$, (float)*(uint8*)NIBBLES$, (void*)BGIMAGE$, -65536, -65536, -65536, -65536, 0, 1, (void*)&fb_hPutPSet, -1, (void*)0ull, (void*)0ull );
   fb_GfxPut( (void*)0ull, (float)*(uint8*)NIBBLES$, (float)*(uint8*)NIBBLES$, (void*)FGIMAGE$, -65536, -65536, -65536, -65536, 0, 6, (void*)&fb_hPutAlpha, -1, (void*)0ull, (void*)0ull );
   fb_GfxWaitVSync( );
   fb_GfxUnlock( -1, -1 );
   *(double*)((int64)(double*)MEM64$ + 426128ll) = (double)(((int64)__builtin_nearbyint( *(double*)((int64)(double*)MEM64$ + 426128ll) + 0x1.p+0 )) % 1079ll);
  }
  label$13596:;
  label$13595:;
 }
 label$13592:;
 goto label$13590;
 label$13591:;
 free( (void*)MEM64$ );
 free( (void*)&RETURN_POINT$ );
 label$13589:;
}

int32 main( int32 __FB_ARGC__$0, char** __FB_ARGV__$0 )
{
 int32 fb$result$0;
 __builtin_memset( &fb$result$0, 0, 4ll );
 fb_Init( __FB_ARGC__$0, (uint8**)__FB_ARGV__$0, 0 );
 fb_DataRestore( (void*)label$12543 );
 label$0:;
 uint64 __JMP_BUF$0[9];
 __builtin_memset( (uint64*)__JMP_BUF$0, 0, 72ll );
 struct $8FBARRAY1IyE tmp$5$0;
 *(uint64**)&tmp$5$0 = (uint64*)__JMP_BUF$0;
 *(uint64**)((uint8*)&tmp$5$0 + 8ll) = (uint64*)__JMP_BUF$0;
 *(int64*)((uint8*)&tmp$5$0 + 16ll) = 72ll;
 *(int64*)((uint8*)&tmp$5$0 + 24ll) = 8ll;
 *(int64*)((uint8*)&tmp$5$0 + 32ll) = 1ll;
 *(int64*)((uint8*)&tmp$5$0 + 40ll) = 49ll;
 *(int64*)((uint8*)&tmp$5$0 + 48ll) = 9ll;
 *(int64*)((uint8*)&tmp$5$0 + 56ll) = 0ll;
 *(int64*)((uint8*)&tmp$5$0 + 64ll) = 8ll;
 void* vr$4 = malloc( 65536ull );
 RETURN_POINT$ = *(uint32**)vr$4;
 void* vr$5 = calloc( 3670016ull, 1ull );
 QBS_MALLOC$ = (struct $3QBS*)vr$5;
 void* vr$6 = malloc( 524288ull );
 QBS_MALLOC_FREED$ = (int64*)vr$6;
 void* vr$7 = malloc( 524288ull );
 QBS_MEM64_LIST$ = (int64*)vr$7;
 void* vr$8 = malloc( 524288ull );
 QBS_LIST$ = (int64*)vr$8;
 void* vr$9 = calloc( 524288ull, 1ull );
 QBS_TMP_LIST$ = (int64*)vr$9;
 void* vr$10 = malloc( 1048576ull );
 QBS_DATA$ = (uint8*)vr$10;
 void* vr$11 = malloc( 1ull );
 GFS_FILE$ = (struct $15GFS_FILE_STRUCT*)vr$11;
 void* vr$12 = malloc( 1ull );
 GFS_FREED$ = (int32*)vr$12;
 void* vr$13 = malloc( 1ull );
 GFS_FILENO$ = (int32*)vr$13;
 struct $4LIST* MOUSE_MESSAGE_QUEUE_HANDLES$0;
 MOUSE_MESSAGE_QUEUE_HANDLES$0 = (struct $4LIST*)0ull;
 int64 MOUSE_MESSAGE_QUEUE_FIRST$0;
 __builtin_memset( &MOUSE_MESSAGE_QUEUE_FIRST$0, 0, 8ll );
 int64 MOUSE_MESSAGE_QUEUE_DEFAULT$0;
 __builtin_memset( &MOUSE_MESSAGE_QUEUE_DEFAULT$0, 0, 8ll );
 static struct $10CPU_STRUCT CPU_X86$0;
 static int64 IDX$0 = 0ll;
 static int64 SHIFT$0 = 2ll;
 static int64 COLOR_DATA$0 = 0ll;
 label$12542:;
 label$12548:;
 label$2170:;
 KMAIN( MB_INFO$ );
 label$1:;
 fb_End( 0 );
 return fb$result$0;
}

static void _ZN5FBGFXaSERKS_( struct $5FBGFX* THIS$1, struct $5FBGFX* __FB_RHS__$1 )
{
 label$538:;
 *(int64*)THIS$1 = *(int64*)__FB_RHS__$1;
 *(int64*)((uint8*)THIS$1 + 8ll) = *(int64*)((uint8*)__FB_RHS__$1 + 8ll);
 *(uint8**)((uint8*)THIS$1 + 16ll) = *(uint8**)((uint8*)__FB_RHS__$1 + 16ll);
 *(int64*)((uint8*)THIS$1 + 24ll) = *(int64*)((uint8*)__FB_RHS__$1 + 24ll);
 *(int64*)((uint8*)THIS$1 + 32ll) = *(int64*)((uint8*)__FB_RHS__$1 + 32ll);
 *(uint8**)((uint8*)THIS$1 + 40ll) = *(uint8**)((uint8*)__FB_RHS__$1 + 40ll);
 *(int64*)((uint8*)THIS$1 + 48ll) = *(int64*)((uint8*)__FB_RHS__$1 + 48ll);
 *(int64*)((uint8*)THIS$1 + 56ll) = *(int64*)((uint8*)__FB_RHS__$1 + 56ll);
 *(int64*)((uint8*)THIS$1 + 64ll) = *(int64*)((uint8*)__FB_RHS__$1 + 64ll);
 *(int64*)((uint8*)THIS$1 + 72ll) = *(int64*)((uint8*)__FB_RHS__$1 + 72ll);
 *(int64*)((uint8*)THIS$1 + 80ll) = *(int64*)((uint8*)__FB_RHS__$1 + 80ll);
 *(uint64*)((uint8*)THIS$1 + 88ll) = *(uint64*)((uint8*)__FB_RHS__$1 + 88ll);
 *(uint64**)((uint8*)THIS$1 + 96ll) = *(uint64**)((uint8*)__FB_RHS__$1 + 96ll);
 *(uint8**)((uint8*)THIS$1 + 104ll) = *(uint8**)((uint8*)__FB_RHS__$1 + 104ll);
 *(int8**)((uint8*)THIS$1 + 112ll) = *(int8**)((uint8*)__FB_RHS__$1 + 112ll);
 *(struct $9GFXDRIVER**)((uint8*)THIS$1 + 120ll) = *(struct $9GFXDRIVER**)((uint8*)__FB_RHS__$1 + 120ll);
 *(int64*)((uint8*)THIS$1 + 128ll) = *(int64*)((uint8*)__FB_RHS__$1 + 128ll);
 *(struct $9PALETTE_T**)((uint8*)THIS$1 + 136ll) = *(struct $9PALETTE_T**)((uint8*)__FB_RHS__$1 + 136ll);
 *(int64*)((uint8*)THIS$1 + 144ll) = *(int64*)((uint8*)__FB_RHS__$1 + 144ll);
 *(int64*)((uint8*)THIS$1 + 152ll) = *(int64*)((uint8*)__FB_RHS__$1 + 152ll);
 *(int64*)((uint8*)THIS$1 + 160ll) = *(int64*)((uint8*)__FB_RHS__$1 + 160ll);
 *(struct $4FONT**)((uint8*)THIS$1 + 168ll) = *(struct $4FONT**)((uint8*)__FB_RHS__$1 + 168ll);
 *(int64*)((uint8*)THIS$1 + 176ll) = *(int64*)((uint8*)__FB_RHS__$1 + 176ll);
 *(int64*)((uint8*)THIS$1 + 184ll) = *(int64*)((uint8*)__FB_RHS__$1 + 184ll);
 _ZN9_FLOAT128aSERS_( (struct $9_FLOAT128*)((uint8*)THIS$1 + 192ll), (struct $9_FLOAT128*)((uint8*)__FB_RHS__$1 + 192ll) );
 *(int8**)((uint8*)THIS$1 + 208ll) = *(int8**)((uint8*)__FB_RHS__$1 + 208ll);
 *(int64*)((uint8*)THIS$1 + 216ll) = *(int64*)((uint8*)__FB_RHS__$1 + 216ll);
 *(struct $14_GFX_CHAR_CELL**)((uint8*)THIS$1 + 224ll) = *(struct $14_GFX_CHAR_CELL**)((uint8*)__FB_RHS__$1 + 224ll);
 *(struct $6_EVENT**)((uint8*)THIS$1 + 232ll) = *(struct $6_EVENT**)((uint8*)__FB_RHS__$1 + 232ll);
 *(int64*)((uint8*)THIS$1 + 240ll) = *(int64*)((uint8*)__FB_RHS__$1 + 240ll);
 *(int64*)((uint8*)THIS$1 + 248ll) = *(int64*)((uint8*)__FB_RHS__$1 + 248ll);
 *(void***)((uint8*)THIS$1 + 256ll) = *(void***)((uint8*)__FB_RHS__$1 + 256ll);
 *(int64*)((uint8*)THIS$1 + 264ll) = *(int64*)((uint8*)__FB_RHS__$1 + 264ll);
 *(int64*)((uint8*)THIS$1 + 272ll) = *(int64*)((uint8*)__FB_RHS__$1 + 272ll);
 label$539:;
}

static void _ZN9SHADERTOYC1Ev( struct $9SHADERTOY* THIS$1 )
{
 __builtin_memset( (uint32*)THIS$1, 0, 4ll );
 __builtin_memset( (uint32*)((uint8*)THIS$1 + 4ll), 0, 4ll );
 __builtin_memset( (FBSTRING*)((uint8*)THIS$1 + 8ll), 0, 24ll );
 label$641:;
 label$642:;
}

static void _ZN9SHADERTOYaSERKS_( struct $9SHADERTOY* THIS$1, struct $9SHADERTOY* __FB_RHS__$1 )
{
 label$643:;
 *(uint32*)THIS$1 = *(uint32*)__FB_RHS__$1;
 *(uint32*)((uint8*)THIS$1 + 4ll) = *(uint32*)((uint8*)__FB_RHS__$1 + 4ll);
 fb_StrAssign( (void*)((uint8*)THIS$1 + 8ll), -1ll, (void*)((uint8*)__FB_RHS__$1 + 8ll), -1ll, 0 );
 label$644:;
}

static void _ZN9RECTANGLEC1Ev( struct $9RECTANGLE* THIS$1 )
{
 _ZN6VECTORC1Ev( (struct $6VECTOR*)THIS$1 );
 _ZN6VECTORC1Ev( (struct $6VECTOR*)((uint8*)THIS$1 + 32ll) );
 _ZN6VECTORC1Ev( (struct $6VECTOR*)((uint8*)THIS$1 + 64ll) );
 label$742:;
 label$743:;
}

static void _ZN9RECTANGLEaSERKS_( struct $9RECTANGLE* THIS$1, struct $9RECTANGLE* __FB_RHS__$1 )
{
 label$744:;
 __builtin_memcpy( (struct $6VECTOR*)THIS$1, (struct $6VECTOR*)__FB_RHS__$1, 32 );
 __builtin_memcpy( (struct $6VECTOR*)((uint8*)THIS$1 + 32ll), (struct $6VECTOR*)((uint8*)__FB_RHS__$1 + 32ll), 32 );
 __builtin_memcpy( (struct $6VECTOR*)((uint8*)THIS$1 + 64ll), (struct $6VECTOR*)((uint8*)__FB_RHS__$1 + 64ll), 32 );
 label$745:;
}

static void _ZN9BMPHEADERC1Ev( struct $9BMPHEADER* THIS$1 )
{
 _ZN9RECTANGLEC1Ev( (struct $9RECTANGLE*)THIS$1 );
 __builtin_memset( (uint16*)((uint8*)THIS$1 + 96ll), 0, 2ll );
 __builtin_memset( (int32*)((uint8*)THIS$1 + 98ll), 0, 4ll );
 __builtin_memset( (uint16*)((uint8*)THIS$1 + 102ll), 0, 2ll );
 __builtin_memset( (uint16*)((uint8*)THIS$1 + 104ll), 0, 2ll );
 __builtin_memset( (int32*)((uint8*)THIS$1 + 106ll), 0, 4ll );
 __builtin_memset( (int32*)((uint8*)THIS$1 + 110ll), 0, 4ll );
 __builtin_memset( (int32*)((uint8*)THIS$1 + 114ll), 0, 4ll );
 __builtin_memset( (int32*)((uint8*)THIS$1 + 118ll), 0, 4ll );
 __builtin_memset( (int16*)((uint8*)THIS$1 + 122ll), 0, 2ll );
 __builtin_memset( (int16*)((uint8*)THIS$1 + 124ll), 0, 2ll );
 __builtin_memset( (int32*)((uint8*)THIS$1 + 126ll), 0, 4ll );
 __builtin_memset( (int32*)((uint8*)THIS$1 + 130ll), 0, 4ll );
 __builtin_memset( (int32*)((uint8*)THIS$1 + 134ll), 0, 4ll );
 __builtin_memset( (int32*)((uint8*)THIS$1 + 138ll), 0, 4ll );
 __builtin_memset( (int32*)((uint8*)THIS$1 + 142ll), 0, 4ll );
 __builtin_memset( (int32*)((uint8*)THIS$1 + 146ll), 0, 4ll );
 label$748:;
 label$749:;
}

static void _ZN9BMPHEADERaSERKS_( struct $9BMPHEADER* THIS$1, struct $9BMPHEADER* __FB_RHS__$1 )
{
 label$750:;
 _ZN9RECTANGLEaSERKS_( (struct $9RECTANGLE*)THIS$1, (struct $9RECTANGLE*)__FB_RHS__$1 );
 *(uint16*)((uint8*)THIS$1 + 96ll) = *(uint16*)((uint8*)__FB_RHS__$1 + 96ll);
 *(int32*)((uint8*)THIS$1 + 98ll) = *(int32*)((uint8*)__FB_RHS__$1 + 98ll);
 *(uint16*)((uint8*)THIS$1 + 102ll) = *(uint16*)((uint8*)__FB_RHS__$1 + 102ll);
 *(uint16*)((uint8*)THIS$1 + 104ll) = *(uint16*)((uint8*)__FB_RHS__$1 + 104ll);
 *(int32*)((uint8*)THIS$1 + 106ll) = *(int32*)((uint8*)__FB_RHS__$1 + 106ll);
 *(int32*)((uint8*)THIS$1 + 110ll) = *(int32*)((uint8*)__FB_RHS__$1 + 110ll);
 *(int32*)((uint8*)THIS$1 + 114ll) = *(int32*)((uint8*)__FB_RHS__$1 + 114ll);
 *(int32*)((uint8*)THIS$1 + 118ll) = *(int32*)((uint8*)__FB_RHS__$1 + 118ll);
 *(int16*)((uint8*)THIS$1 + 122ll) = *(int16*)((uint8*)__FB_RHS__$1 + 122ll);
 *(int16*)((uint8*)THIS$1 + 124ll) = *(int16*)((uint8*)__FB_RHS__$1 + 124ll);
 *(int32*)((uint8*)THIS$1 + 126ll) = *(int32*)((uint8*)__FB_RHS__$1 + 126ll);
 *(int32*)((uint8*)THIS$1 + 130ll) = *(int32*)((uint8*)__FB_RHS__$1 + 130ll);
 *(int32*)((uint8*)THIS$1 + 134ll) = *(int32*)((uint8*)__FB_RHS__$1 + 134ll);
 *(int32*)((uint8*)THIS$1 + 138ll) = *(int32*)((uint8*)__FB_RHS__$1 + 138ll);
 *(int32*)((uint8*)THIS$1 + 142ll) = *(int32*)((uint8*)__FB_RHS__$1 + 142ll);
 *(int32*)((uint8*)THIS$1 + 146ll) = *(int32*)((uint8*)__FB_RHS__$1 + 146ll);
 label$751:;
}

static void _ZN8PALENTRYC1Ev( struct $8PALENTRY* THIS$1 )
{
 _ZN9BMPHEADERC1Ev( (struct $9BMPHEADER*)THIS$1 );
 __builtin_memset( (uint8*)((uint8*)THIS$1 + 150ll), 0, 1ll );
 __builtin_memset( (uint8*)((uint8*)THIS$1 + 151ll), 0, 1ll );
 __builtin_memset( (uint8*)((uint8*)THIS$1 + 152ll), 0, 1ll );
 __builtin_memset( (uint8*)((uint8*)THIS$1 + 153ll), 0, 1ll );
 label$754:;
 label$755:;
}

static void _ZN8PALENTRYaSERKS_( struct $8PALENTRY* THIS$1, struct $8PALENTRY* __FB_RHS__$1 )
{
 label$756:;
 _ZN9BMPHEADERaSERKS_( (struct $9BMPHEADER*)THIS$1, (struct $9BMPHEADER*)__FB_RHS__$1 );
 *(uint8*)((uint8*)THIS$1 + 150ll) = *(uint8*)((uint8*)__FB_RHS__$1 + 150ll);
 *(uint8*)((uint8*)THIS$1 + 151ll) = *(uint8*)((uint8*)__FB_RHS__$1 + 151ll);
 *(uint8*)((uint8*)THIS$1 + 152ll) = *(uint8*)((uint8*)__FB_RHS__$1 + 152ll);
 *(uint8*)((uint8*)THIS$1 + 153ll) = *(uint8*)((uint8*)__FB_RHS__$1 + 153ll);
 label$757:;
}

static void _ZN5MAP2DaSERKS_( struct $5MAP2D* THIS$1, struct $5MAP2D* __FB_RHS__$1 )
{
 label$762:;
 *(int64*)THIS$1 = *(int64*)__FB_RHS__$1;
 *($11MAP2D_TYPES*)((uint8*)THIS$1 + 8ll) = *($11MAP2D_TYPES*)((uint8*)__FB_RHS__$1 + 8ll);
 _ZN9BMPHEADERaSERKS_( (struct $9BMPHEADER*)((uint8*)THIS$1 + 16ll), (struct $9BMPHEADER*)((uint8*)__FB_RHS__$1 + 16ll) );
 *(uint8**)((uint8*)THIS$1 + 168ll) = *(uint8**)((uint8*)__FB_RHS__$1 + 168ll);
 __builtin_memcpy( (struct $6VECTOR*)((uint8*)THIS$1 + 176ll), (struct $6VECTOR*)((uint8*)__FB_RHS__$1 + 176ll), 32 );
 label$763:;
}

static void _ZN8MATERIALC1Ev( struct $8MATERIAL* THIS$1 )
{
 _ZN8PALENTRYC1Ev( (struct $8PALENTRY*)THIS$1 );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 160ll), 0, 8ll );
 _ZN6VECTORC1Ev( (struct $6VECTOR*)((uint8*)THIS$1 + 168ll) );
 __builtin_memset( (double*)((uint8*)THIS$1 + 200ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 208ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 216ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 224ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 232ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 240ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 248ll), 0, 8ll );
 __builtin_memset( (int8*)((uint8*)THIS$1 + 256ll), 0, 1ll );
 __builtin_memset( (int8*)((uint8*)THIS$1 + 257ll), 0, 1ll );
 __builtin_memset( (int8*)((uint8*)THIS$1 + 258ll), 0, 1ll );
 __builtin_memset( (int8*)((uint8*)THIS$1 + 259ll), 0, 1ll );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 264ll), 0, 8ll );
 _ZN6VECTORC1Ev( (struct $6VECTOR*)((uint8*)THIS$1 + 272ll) );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 304ll), 0, 8ll );
 _ZN6VECTORC1Ev( (struct $6VECTOR*)((uint8*)THIS$1 + 312ll) );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 344ll), 0, 8ll );
 _ZN6VECTORC1Ev( (struct $6VECTOR*)((uint8*)THIS$1 + 352ll) );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 384ll), 0, 8ll );
 _ZN6VECTORC1Ev( (struct $6VECTOR*)((uint8*)THIS$1 + 392ll) );
 label$766:;
 label$767:;
}

static void _ZN8MATERIALaSERKS_( struct $8MATERIAL* THIS$1, struct $8MATERIAL* __FB_RHS__$1 )
{
 label$768:;
 _ZN8PALENTRYaSERKS_( (struct $8PALENTRY*)THIS$1, (struct $8PALENTRY*)__FB_RHS__$1 );
 *(int64*)((uint8*)THIS$1 + 160ll) = *(int64*)((uint8*)__FB_RHS__$1 + 160ll);
 __builtin_memcpy( (struct $6VECTOR*)((uint8*)THIS$1 + 168ll), (struct $6VECTOR*)((uint8*)__FB_RHS__$1 + 168ll), 32 );
 *(double*)((uint8*)THIS$1 + 200ll) = *(double*)((uint8*)__FB_RHS__$1 + 200ll);
 *(double*)((uint8*)THIS$1 + 208ll) = *(double*)((uint8*)__FB_RHS__$1 + 208ll);
 *(double*)((uint8*)THIS$1 + 216ll) = *(double*)((uint8*)__FB_RHS__$1 + 216ll);
 *(double*)((uint8*)THIS$1 + 224ll) = *(double*)((uint8*)__FB_RHS__$1 + 224ll);
 *(double*)((uint8*)THIS$1 + 232ll) = *(double*)((uint8*)__FB_RHS__$1 + 232ll);
 *(double*)((uint8*)THIS$1 + 240ll) = *(double*)((uint8*)__FB_RHS__$1 + 240ll);
 *(double*)((uint8*)THIS$1 + 248ll) = *(double*)((uint8*)__FB_RHS__$1 + 248ll);
 *(int8*)((uint8*)THIS$1 + 256ll) = *(int8*)((uint8*)__FB_RHS__$1 + 256ll);
 *(int8*)((uint8*)THIS$1 + 257ll) = *(int8*)((uint8*)__FB_RHS__$1 + 257ll);
 *(int8*)((uint8*)THIS$1 + 258ll) = *(int8*)((uint8*)__FB_RHS__$1 + 258ll);
 *(int8*)((uint8*)THIS$1 + 259ll) = *(int8*)((uint8*)__FB_RHS__$1 + 259ll);
 *(int64*)((uint8*)THIS$1 + 264ll) = *(int64*)((uint8*)__FB_RHS__$1 + 264ll);
 __builtin_memcpy( (struct $6VECTOR*)((uint8*)THIS$1 + 272ll), (struct $6VECTOR*)((uint8*)__FB_RHS__$1 + 272ll), 32 );
 *(int64*)((uint8*)THIS$1 + 304ll) = *(int64*)((uint8*)__FB_RHS__$1 + 304ll);
 __builtin_memcpy( (struct $6VECTOR*)((uint8*)THIS$1 + 312ll), (struct $6VECTOR*)((uint8*)__FB_RHS__$1 + 312ll), 32 );
 *(int64*)((uint8*)THIS$1 + 344ll) = *(int64*)((uint8*)__FB_RHS__$1 + 344ll);
 __builtin_memcpy( (struct $6VECTOR*)((uint8*)THIS$1 + 352ll), (struct $6VECTOR*)((uint8*)__FB_RHS__$1 + 352ll), 32 );
 *(int64*)((uint8*)THIS$1 + 384ll) = *(int64*)((uint8*)__FB_RHS__$1 + 384ll);
 __builtin_memcpy( (struct $6VECTOR*)((uint8*)THIS$1 + 392ll), (struct $6VECTOR*)((uint8*)__FB_RHS__$1 + 392ll), 32 );
 label$769:;
}

static void _ZN5LIGHTaSERKS_( struct $5LIGHT* THIS$1, struct $5LIGHT* __FB_RHS__$1 )
{
 label$774:;
 *($11LIGHT_TYPES*)THIS$1 = *($11LIGHT_TYPES*)__FB_RHS__$1;
 *(int64*)((uint8*)THIS$1 + 8ll) = *(int64*)((uint8*)__FB_RHS__$1 + 8ll);
 __builtin_memcpy( (struct $6VECTOR*)((uint8*)THIS$1 + 16ll), (struct $6VECTOR*)((uint8*)__FB_RHS__$1 + 16ll), 32 );
 __builtin_memcpy( (struct $6VECTOR*)((uint8*)THIS$1 + 48ll), (struct $6VECTOR*)((uint8*)__FB_RHS__$1 + 48ll), 32 );
 __builtin_memcpy( (struct $6VECTOR*)((uint8*)THIS$1 + 80ll), (struct $6VECTOR*)((uint8*)__FB_RHS__$1 + 80ll), 32 );
 __builtin_memcpy( (struct $6VECTOR*)((uint8*)THIS$1 + 112ll), (struct $6VECTOR*)((uint8*)__FB_RHS__$1 + 112ll), 32 );
 __builtin_memcpy( (struct $6VECTOR*)((uint8*)THIS$1 + 144ll), (struct $6VECTOR*)((uint8*)__FB_RHS__$1 + 144ll), 32 );
 *(double*)((uint8*)THIS$1 + 176ll) = *(double*)((uint8*)__FB_RHS__$1 + 176ll);
 *(double*)((uint8*)THIS$1 + 184ll) = *(double*)((uint8*)__FB_RHS__$1 + 184ll);
 *(int8*)((uint8*)THIS$1 + 192ll) = *(int8*)((uint8*)__FB_RHS__$1 + 192ll);
 label$775:;
}

static void _ZN4POLYaSERKS_( struct $4POLY* THIS$1, struct $4POLY* __FB_RHS__$1 )
{
 label$780:;
 _ZN8MATERIALaSERKS_( (struct $8MATERIAL*)THIS$1, (struct $8MATERIAL*)__FB_RHS__$1 );
 *(int64*)((uint8*)THIS$1 + 424ll) = *(int64*)((uint8*)__FB_RHS__$1 + 424ll);
 _ZN9RECTANGLEaSERKS_( (struct $9RECTANGLE*)((uint8*)THIS$1 + 432ll), (struct $9RECTANGLE*)((uint8*)__FB_RHS__$1 + 432ll) );
 *(int64*)((uint8*)THIS$1 + 528ll) = *(int64*)((uint8*)__FB_RHS__$1 + 528ll);
 *(struct $6VECTOR***)((uint8*)THIS$1 + 536ll) = *(struct $6VECTOR***)((uint8*)__FB_RHS__$1 + 536ll);
 __builtin_memcpy( (struct $6VECTOR*)((uint8*)THIS$1 + 544ll), (struct $6VECTOR*)((uint8*)__FB_RHS__$1 + 544ll), 32 );
 __builtin_memcpy( (struct $6VECTOR*)((uint8*)THIS$1 + 576ll), (struct $6VECTOR*)((uint8*)__FB_RHS__$1 + 576ll), 32 );
 *(double*)((uint8*)THIS$1 + 608ll) = *(double*)((uint8*)__FB_RHS__$1 + 608ll);
 label$781:;
}

static void _ZN8OBJECT3DaSERKS_( struct $8OBJECT3D* THIS$1, struct $8OBJECT3D* __FB_RHS__$1 )
{
 label$786:;
 *($14OBJECT3D_TYPES*)THIS$1 = *($14OBJECT3D_TYPES*)__FB_RHS__$1;
 *(int64*)((uint8*)THIS$1 + 8ll) = *(int64*)((uint8*)__FB_RHS__$1 + 8ll);
 _ZN9RECTANGLEaSERKS_( (struct $9RECTANGLE*)((uint8*)THIS$1 + 16ll), (struct $9RECTANGLE*)((uint8*)__FB_RHS__$1 + 16ll) );
 __builtin_memcpy( (struct $6VECTOR*)((uint8*)THIS$1 + 112ll), (struct $6VECTOR*)((uint8*)__FB_RHS__$1 + 112ll), 32 );
 *(int64*)((uint8*)THIS$1 + 144ll) = *(int64*)((uint8*)__FB_RHS__$1 + 144ll);
 *(double*)((uint8*)THIS$1 + 152ll) = *(double*)((uint8*)__FB_RHS__$1 + 152ll);
 *(int64*)((uint8*)THIS$1 + 160ll) = *(int64*)((uint8*)__FB_RHS__$1 + 160ll);
 *(struct $6VECTOR***)((uint8*)THIS$1 + 168ll) = *(struct $6VECTOR***)((uint8*)__FB_RHS__$1 + 168ll);
 *(int64*)((uint8*)THIS$1 + 176ll) = *(int64*)((uint8*)__FB_RHS__$1 + 176ll);
 *(struct $4POLY***)((uint8*)THIS$1 + 184ll) = *(struct $4POLY***)((uint8*)__FB_RHS__$1 + 184ll);
 label$787:;
}

static void _ZN7AAPIXELaSERKS_( struct $7AAPIXEL* THIS$1, struct $7AAPIXEL* __FB_RHS__$1 )
{
 label$792:;
 _ZN8MATERIALaSERKS_( (struct $8MATERIAL*)THIS$1, (struct $8MATERIAL*)__FB_RHS__$1 );
 *(int64*)((uint8*)THIS$1 + 424ll) = *(int64*)((uint8*)__FB_RHS__$1 + 424ll);
 *(int64*)((uint8*)THIS$1 + 432ll) = *(int64*)((uint8*)__FB_RHS__$1 + 432ll);
 *(int64*)((uint8*)THIS$1 + 440ll) = *(int64*)((uint8*)__FB_RHS__$1 + 440ll);
 label$793:;
}

static void _ZN9RAYTRACERaSERKS_( struct $9RAYTRACER* THIS$1, struct $9RAYTRACER* __FB_RHS__$1 )
{
 label$798:;
 _ZN8MATERIALaSERKS_( (struct $8MATERIAL*)THIS$1, (struct $8MATERIAL*)__FB_RHS__$1 );
 *(int64*)((uint8*)THIS$1 + 424ll) = *(int64*)((uint8*)__FB_RHS__$1 + 424ll);
 *(int64*)((uint8*)THIS$1 + 432ll) = *(int64*)((uint8*)__FB_RHS__$1 + 432ll);
 *(int64*)((uint8*)THIS$1 + 440ll) = *(int64*)((uint8*)__FB_RHS__$1 + 440ll);
 *(int64*)((uint8*)THIS$1 + 448ll) = *(int64*)((uint8*)__FB_RHS__$1 + 448ll);
 *(double*)((uint8*)THIS$1 + 456ll) = *(double*)((uint8*)__FB_RHS__$1 + 456ll);
 *(double*)((uint8*)THIS$1 + 464ll) = *(double*)((uint8*)__FB_RHS__$1 + 464ll);
 __builtin_memcpy( (struct $6VECTOR*)((uint8*)THIS$1 + 472ll), (struct $6VECTOR*)((uint8*)__FB_RHS__$1 + 472ll), 32 );
 *(double*)((uint8*)THIS$1 + 504ll) = *(double*)((uint8*)__FB_RHS__$1 + 504ll);
 __builtin_memcpy( (struct $6VECTOR*)((uint8*)THIS$1 + 512ll), (struct $6VECTOR*)((uint8*)__FB_RHS__$1 + 512ll), 32 );
 *(double*)((uint8*)THIS$1 + 544ll) = *(double*)((uint8*)__FB_RHS__$1 + 544ll);
 *(int64*)((uint8*)THIS$1 + 552ll) = *(int64*)((uint8*)__FB_RHS__$1 + 552ll);
 *(int64*)((uint8*)THIS$1 + 560ll) = *(int64*)((uint8*)__FB_RHS__$1 + 560ll);
 __builtin_memcpy( (struct $6VECTOR*)((uint8*)THIS$1 + 568ll), (struct $6VECTOR*)((uint8*)__FB_RHS__$1 + 568ll), 32 );
 __builtin_memcpy( (struct $6VECTOR*)((uint8*)THIS$1 + 600ll), (struct $6VECTOR*)((uint8*)__FB_RHS__$1 + 600ll), 32 );
 __builtin_memcpy( (struct $6VECTOR*)((uint8*)THIS$1 + 632ll), (struct $6VECTOR*)((uint8*)__FB_RHS__$1 + 632ll), 32 );
 *(int64*)((uint8*)THIS$1 + 664ll) = *(int64*)((uint8*)__FB_RHS__$1 + 664ll);
 *(struct $8MATERIAL***)((uint8*)THIS$1 + 672ll) = *(struct $8MATERIAL***)((uint8*)__FB_RHS__$1 + 672ll);
 *(int64*)((uint8*)THIS$1 + 680ll) = *(int64*)((uint8*)__FB_RHS__$1 + 680ll);
 *(struct $8OBJECT3D***)((uint8*)THIS$1 + 688ll) = *(struct $8OBJECT3D***)((uint8*)__FB_RHS__$1 + 688ll);
 *(int64*)((uint8*)THIS$1 + 696ll) = *(int64*)((uint8*)__FB_RHS__$1 + 696ll);
 *(struct $5LIGHT***)((uint8*)THIS$1 + 704ll) = *(struct $5LIGHT***)((uint8*)__FB_RHS__$1 + 704ll);
 *(int64*)((uint8*)THIS$1 + 712ll) = *(int64*)((uint8*)__FB_RHS__$1 + 712ll);
 *(struct $5MAP2D***)((uint8*)THIS$1 + 720ll) = *(struct $5MAP2D***)((uint8*)__FB_RHS__$1 + 720ll);
 *(int64*)((uint8*)THIS$1 + 728ll) = *(int64*)((uint8*)__FB_RHS__$1 + 728ll);
 *(struct $7AAPIXEL***)((uint8*)THIS$1 + 736ll) = *(struct $7AAPIXEL***)((uint8*)__FB_RHS__$1 + 736ll);
 label$799:;
}

static void _ZN7VECTOR3aSERKS_( struct $7VECTOR3* THIS$1, struct $7VECTOR3* __FB_RHS__$1 )
{
 label$1566:;
 _ZN7VECTOR2aSERS_( (struct $7VECTOR2*)THIS$1, (struct $7VECTOR2*)__FB_RHS__$1 );
 __builtin_memcpy( (double*)((uint8*)THIS$1 + 16ll), (double*)((uint8*)__FB_RHS__$1 + 16ll), 8 );
 __builtin_memcpy( (double*)((uint8*)THIS$1 + 24ll), (double*)((uint8*)__FB_RHS__$1 + 24ll), 8 );
 __builtin_memcpy( (double*)((uint8*)THIS$1 + 32ll), (double*)((uint8*)__FB_RHS__$1 + 32ll), 8 );
 label$1567:;
}

static void _ZN7VECTOR4aSERKS_( struct $7VECTOR4* THIS$1, struct $7VECTOR4* __FB_RHS__$1 )
{
 label$1725:;
 _ZN7VECTOR3aSERS_( (struct $7VECTOR3*)THIS$1, (struct $7VECTOR3*)__FB_RHS__$1 );
 __builtin_memcpy( (double*)((uint8*)THIS$1 + 40ll), (double*)((uint8*)__FB_RHS__$1 + 40ll), 8 );
 __builtin_memcpy( (double*)((uint8*)THIS$1 + 48ll), (double*)((uint8*)__FB_RHS__$1 + 48ll), 8 );
 __builtin_memcpy( (double*)((uint8*)THIS$1 + 56ll), (double*)((uint8*)__FB_RHS__$1 + 56ll), 8 );
 __builtin_memcpy( (double*)((uint8*)THIS$1 + 64ll), (double*)((uint8*)__FB_RHS__$1 + 64ll), 8 );
 label$1726:;
}

static void _ZN5PLANEaSERKS_( struct $5PLANE* THIS$1, struct $5PLANE* __FB_RHS__$1 )
{
 label$1919:;
 _ZN7VECTOR4aSERS_( (struct $7VECTOR4*)THIS$1, (struct $7VECTOR4*)__FB_RHS__$1 );
 _ZN7VECTOR3aSERS_( (struct $7VECTOR3*)((uint8*)THIS$1 + 72ll), (struct $7VECTOR3*)((uint8*)__FB_RHS__$1 + 72ll) );
 *(double*)((uint8*)THIS$1 + 112ll) = *(double*)((uint8*)__FB_RHS__$1 + 112ll);
 label$1920:;
}

static void _ZN4MAT2aSERKS_( struct $4MAT2* THIS$1, struct $4MAT2* __FB_RHS__$1 )
{
 label$1995:;
 _ZN5PLANEaSERKS_( (struct $5PLANE*)THIS$1, (struct $5PLANE*)__FB_RHS__$1 );
 *(double*)((uint8*)THIS$1 + 120ll) = *(double*)((uint8*)__FB_RHS__$1 + 120ll);
 *(double*)((uint8*)THIS$1 + 128ll) = *(double*)((uint8*)__FB_RHS__$1 + 128ll);
 *(double*)((uint8*)THIS$1 + 136ll) = *(double*)((uint8*)__FB_RHS__$1 + 136ll);
 *(double*)((uint8*)THIS$1 + 144ll) = *(double*)((uint8*)__FB_RHS__$1 + 144ll);
 label$1996:;
}

static void _ZN4MAT2C1ERKS_( struct $4MAT2* THIS$1, struct $4MAT2* __FB_RHS__$1 )
{
 label$1997:;
 _ZN5PLANEC1Ev( (struct $5PLANE*)THIS$1 );
 _ZN4MAT2aSERKS_( THIS$1, __FB_RHS__$1 );
 label$1998:;
}

static void _ZN4MAT3aSERKS_( struct $4MAT3* THIS$1, struct $4MAT3* __FB_RHS__$1 )
{
 label$2011:;
 _ZN4MAT2aSERKS_( (struct $4MAT2*)THIS$1, (struct $4MAT2*)__FB_RHS__$1 );
 *(double*)((uint8*)THIS$1 + 152ll) = *(double*)((uint8*)__FB_RHS__$1 + 152ll);
 *(double*)((uint8*)THIS$1 + 160ll) = *(double*)((uint8*)__FB_RHS__$1 + 160ll);
 *(double*)((uint8*)THIS$1 + 168ll) = *(double*)((uint8*)__FB_RHS__$1 + 168ll);
 *(double*)((uint8*)THIS$1 + 176ll) = *(double*)((uint8*)__FB_RHS__$1 + 176ll);
 *(double*)((uint8*)THIS$1 + 184ll) = *(double*)((uint8*)__FB_RHS__$1 + 184ll);
 *(double*)((uint8*)THIS$1 + 192ll) = *(double*)((uint8*)__FB_RHS__$1 + 192ll);
 *(double*)((uint8*)THIS$1 + 200ll) = *(double*)((uint8*)__FB_RHS__$1 + 200ll);
 *(double*)((uint8*)THIS$1 + 208ll) = *(double*)((uint8*)__FB_RHS__$1 + 208ll);
 *(double*)((uint8*)THIS$1 + 216ll) = *(double*)((uint8*)__FB_RHS__$1 + 216ll);
 label$2012:;
}

static void _ZN4MAT3C1ERKS_( struct $4MAT3* THIS$1, struct $4MAT3* __FB_RHS__$1 )
{
 label$2013:;
 _ZN4MAT2C1Ed( (struct $4MAT2*)THIS$1, 0x1.p+0 );
 _ZN4MAT3aSERKS_( THIS$1, __FB_RHS__$1 );
 label$2014:;
}

static void _ZN4MAT4aSERKS_( struct $4MAT4* THIS$1, struct $4MAT4* __FB_RHS__$1 )
{
 label$2043:;
 _ZN4MAT3aSERKS_( (struct $4MAT3*)THIS$1, (struct $4MAT3*)__FB_RHS__$1 );
 *(double*)((uint8*)THIS$1 + 224ll) = *(double*)((uint8*)__FB_RHS__$1 + 224ll);
 *(double*)((uint8*)THIS$1 + 232ll) = *(double*)((uint8*)__FB_RHS__$1 + 232ll);
 *(double*)((uint8*)THIS$1 + 240ll) = *(double*)((uint8*)__FB_RHS__$1 + 240ll);
 *(double*)((uint8*)THIS$1 + 248ll) = *(double*)((uint8*)__FB_RHS__$1 + 248ll);
 *(double*)((uint8*)THIS$1 + 256ll) = *(double*)((uint8*)__FB_RHS__$1 + 256ll);
 *(double*)((uint8*)THIS$1 + 264ll) = *(double*)((uint8*)__FB_RHS__$1 + 264ll);
 *(double*)((uint8*)THIS$1 + 272ll) = *(double*)((uint8*)__FB_RHS__$1 + 272ll);
 *(double*)((uint8*)THIS$1 + 280ll) = *(double*)((uint8*)__FB_RHS__$1 + 280ll);
 *(double*)((uint8*)THIS$1 + 288ll) = *(double*)((uint8*)__FB_RHS__$1 + 288ll);
 *(double*)((uint8*)THIS$1 + 296ll) = *(double*)((uint8*)__FB_RHS__$1 + 296ll);
 *(double*)((uint8*)THIS$1 + 304ll) = *(double*)((uint8*)__FB_RHS__$1 + 304ll);
 *(double*)((uint8*)THIS$1 + 312ll) = *(double*)((uint8*)__FB_RHS__$1 + 312ll);
 *(double*)((uint8*)THIS$1 + 320ll) = *(double*)((uint8*)__FB_RHS__$1 + 320ll);
 *(double*)((uint8*)THIS$1 + 328ll) = *(double*)((uint8*)__FB_RHS__$1 + 328ll);
 *(double*)((uint8*)THIS$1 + 336ll) = *(double*)((uint8*)__FB_RHS__$1 + 336ll);
 *(double*)((uint8*)THIS$1 + 344ll) = *(double*)((uint8*)__FB_RHS__$1 + 344ll);
 label$2044:;
}

static void _ZN4MAT4C1ERKS_( struct $4MAT4* THIS$1, struct $4MAT4* __FB_RHS__$1 )
{
 label$2045:;
 _ZN4MAT3C1Ed( (struct $4MAT3*)THIS$1, 0x1.p+0 );
 _ZN4MAT4aSERKS_( THIS$1, __FB_RHS__$1 );
 label$2046:;
}

static void _ZN12SYSTEM_BUS_TaSERKS_( struct $12SYSTEM_BUS_T* THIS$1, struct $12SYSTEM_BUS_T* __FB_RHS__$1 )
{
 int64 TMP$1761$1;
 double* TMP$1762$1;
 double* TMP$1763$1;
 int64 TMP$1764$1;
 double* TMP$1765$1;
 double* TMP$1766$1;
 int64 TMP$1767$1;
 double* TMP$1768$1;
 double* TMP$1769$1;
 int64 TMP$1770$1;
 double* TMP$1771$1;
 double* TMP$1772$1;
 int64 TMP$1773$1;
 double* TMP$1774$1;
 double* TMP$1775$1;
 int64 TMP$1776$1;
 double* TMP$1777$1;
 double* TMP$1778$1;
 int64 TMP$1779$1;
 uint8* TMP$1780$1;
 uint8* TMP$1781$1;
 int64 TMP$1782$1;
 uint8* TMP$1783$1;
 uint8* TMP$1784$1;
 label$2129:;
 TMP$1762$1 = (double*)THIS$1;
 TMP$1763$1 = (double*)__FB_RHS__$1;
 TMP$1761$1 = 0ll;
 label$2131:;
 *TMP$1762$1 = *TMP$1763$1;
 TMP$1762$1 = (double*)((uint8*)TMP$1762$1 + 8ll);
 TMP$1763$1 = (double*)((uint8*)TMP$1763$1 + 8ll);
 TMP$1761$1 = TMP$1761$1 + 1ll;
 if( TMP$1761$1 != 16384ll ) goto label$2131;
 TMP$1765$1 = (double*)((uint8*)THIS$1 + 131072ll);
 TMP$1766$1 = (double*)((uint8*)__FB_RHS__$1 + 131072ll);
 TMP$1764$1 = 0ll;
 label$2132:;
 *TMP$1765$1 = *TMP$1766$1;
 TMP$1765$1 = (double*)((uint8*)TMP$1765$1 + 8ll);
 TMP$1766$1 = (double*)((uint8*)TMP$1766$1 + 8ll);
 TMP$1764$1 = TMP$1764$1 + 1ll;
 if( TMP$1764$1 != 16384ll ) goto label$2132;
 TMP$1768$1 = (double*)((uint8*)THIS$1 + 262144ll);
 TMP$1769$1 = (double*)((uint8*)__FB_RHS__$1 + 262144ll);
 TMP$1767$1 = 0ll;
 label$2133:;
 *TMP$1768$1 = *TMP$1769$1;
 TMP$1768$1 = (double*)((uint8*)TMP$1768$1 + 8ll);
 TMP$1769$1 = (double*)((uint8*)TMP$1769$1 + 8ll);
 TMP$1767$1 = TMP$1767$1 + 1ll;
 if( TMP$1767$1 != 2073601ll ) goto label$2133;
 TMP$1771$1 = (double*)((uint8*)THIS$1 + 16850952ll);
 TMP$1772$1 = (double*)((uint8*)__FB_RHS__$1 + 16850952ll);
 TMP$1770$1 = 0ll;
 label$2134:;
 *TMP$1771$1 = *TMP$1772$1;
 TMP$1771$1 = (double*)((uint8*)TMP$1771$1 + 8ll);
 TMP$1772$1 = (double*)((uint8*)TMP$1772$1 + 8ll);
 TMP$1770$1 = TMP$1770$1 + 1ll;
 if( TMP$1770$1 != 1024ll ) goto label$2134;
 TMP$1774$1 = (double*)((uint8*)THIS$1 + 16859144ll);
 TMP$1775$1 = (double*)((uint8*)__FB_RHS__$1 + 16859144ll);
 TMP$1773$1 = 0ll;
 label$2135:;
 *TMP$1774$1 = *TMP$1775$1;
 TMP$1774$1 = (double*)((uint8*)TMP$1774$1 + 8ll);
 TMP$1775$1 = (double*)((uint8*)TMP$1775$1 + 8ll);
 TMP$1773$1 = TMP$1773$1 + 1ll;
 if( TMP$1773$1 != 360ll ) goto label$2135;
 TMP$1777$1 = (double*)((uint8*)THIS$1 + 16862024ll);
 TMP$1778$1 = (double*)((uint8*)__FB_RHS__$1 + 16862024ll);
 TMP$1776$1 = 0ll;
 label$2136:;
 *TMP$1777$1 = *TMP$1778$1;
 TMP$1777$1 = (double*)((uint8*)TMP$1777$1 + 8ll);
 TMP$1778$1 = (double*)((uint8*)TMP$1778$1 + 8ll);
 TMP$1776$1 = TMP$1776$1 + 1ll;
 if( TMP$1776$1 != 360ll ) goto label$2136;
 _ZN9RAYTRACERaSERKS_( (struct $9RAYTRACER*)((uint8*)THIS$1 + 16864904ll), (struct $9RAYTRACER*)((uint8*)__FB_RHS__$1 + 16864904ll) );
 TMP$1780$1 = (uint8*)((uint8*)THIS$1 + 16865648ll);
 TMP$1781$1 = (uint8*)((uint8*)__FB_RHS__$1 + 16865648ll);
 TMP$1779$1 = 0ll;
 label$2137:;
 *TMP$1780$1 = *TMP$1781$1;
 TMP$1780$1 = (uint8*)(TMP$1780$1 + 1ll);
 TMP$1781$1 = (uint8*)(TMP$1781$1 + 1ll);
 TMP$1779$1 = TMP$1779$1 + 1ll;
 if( TMP$1779$1 != 2048ll ) goto label$2137;
 TMP$1783$1 = (uint8*)((uint8*)THIS$1 + 16867696ll);
 TMP$1784$1 = (uint8*)((uint8*)__FB_RHS__$1 + 16867696ll);
 TMP$1782$1 = 0ll;
 label$2138:;
 *TMP$1783$1 = *TMP$1784$1;
 TMP$1783$1 = (uint8*)(TMP$1783$1 + 1ll);
 TMP$1784$1 = (uint8*)(TMP$1784$1 + 1ll);
 TMP$1782$1 = TMP$1782$1 + 1ll;
 if( TMP$1782$1 != 2048ll ) goto label$2138;
 label$2130:;
}

static void _ZN7CPU6510aSERKS_( struct $7CPU6510* THIS$1, struct $7CPU6510* __FB_RHS__$1 )
{
 int64 TMP$1808$1;
 struct $6OPCODE* TMP$1809$1;
 struct $6OPCODE* TMP$1810$1;
 int64 TMP$1811$1;
 FBSTRING* TMP$1812$1;
 FBSTRING* TMP$1813$1;
 label$2141:;
 __builtin_memcpy( (uint8*)THIS$1, (uint8*)__FB_RHS__$1, 8 );
 __builtin_memcpy( (uint8*)((uint8*)THIS$1 + 8ll), (uint8*)((uint8*)__FB_RHS__$1 + 8ll), 1 );
 __builtin_memcpy( (uint8*)((uint8*)THIS$1 + 9ll), (uint8*)((uint8*)__FB_RHS__$1 + 9ll), 1 );
 __builtin_memcpy( (uint8*)((uint8*)THIS$1 + 10ll), (uint8*)((uint8*)__FB_RHS__$1 + 10ll), 1 );
 __builtin_memcpy( (uint16*)((uint8*)THIS$1 + 12ll), (uint16*)((uint8*)__FB_RHS__$1 + 12ll), 2 );
 __builtin_memcpy( (uint16*)((uint8*)THIS$1 + 14ll), (uint16*)((uint8*)__FB_RHS__$1 + 14ll), 2 );
 *(struct $12SYSTEM_BUS_T**)((uint8*)THIS$1 + 16ll) = *(struct $12SYSTEM_BUS_T**)((uint8*)__FB_RHS__$1 + 16ll);
 __builtin_memcpy( (struct $6OPCODE*)((uint8*)THIS$1 + 24ll), (struct $6OPCODE*)((uint8*)__FB_RHS__$1 + 24ll), 56 );
 TMP$1809$1 = (struct $6OPCODE*)((uint8*)THIS$1 + 80ll);
 TMP$1810$1 = (struct $6OPCODE*)((uint8*)__FB_RHS__$1 + 80ll);
 TMP$1808$1 = 0ll;
 label$2143:;
 __builtin_memcpy( TMP$1809$1, TMP$1810$1, 56 );
 TMP$1809$1 = (struct $6OPCODE*)((uint8*)TMP$1809$1 + 56ll);
 TMP$1810$1 = (struct $6OPCODE*)((uint8*)TMP$1810$1 + 56ll);
 TMP$1808$1 = TMP$1808$1 + 1ll;
 if( TMP$1808$1 != 256ll ) goto label$2143;
 TMP$1812$1 = (FBSTRING*)((uint8*)THIS$1 + 14416ll);
 TMP$1813$1 = (FBSTRING*)((uint8*)__FB_RHS__$1 + 14416ll);
 TMP$1811$1 = 0ll;
 label$2144:;
 fb_StrAssign( (void*)TMP$1812$1, -1ll, (void*)TMP$1813$1, -1ll, 0 );
 TMP$1812$1 = (FBSTRING*)((uint8*)TMP$1812$1 + 24ll);
 TMP$1813$1 = (FBSTRING*)((uint8*)TMP$1813$1 + 24ll);
 TMP$1811$1 = TMP$1811$1 + 1ll;
 if( TMP$1811$1 != 13ll ) goto label$2144;
 label$2142:;
}

static void _ZN5C64_TaSERKS_( struct $5C64_T* THIS$1, struct $5C64_T* __FB_RHS__$1 )
{
 label$2147:;
 _ZN4MAT4aSERKS_( (struct $4MAT4*)THIS$1, (struct $4MAT4*)__FB_RHS__$1 );
 *(struct $12SYSTEM_BUS_T**)((uint8*)THIS$1 + 352ll) = *(struct $12SYSTEM_BUS_T**)((uint8*)__FB_RHS__$1 + 352ll);
 *(struct $7CPU6510**)((uint8*)THIS$1 + 360ll) = *(struct $7CPU6510**)((uint8*)__FB_RHS__$1 + 360ll);
 label$2148:;
}

static void _ZN9_XPRIVATEaSERKS_( struct $9_XPRIVATE* THIS$1, struct $9_XPRIVATE* __FB_RHS__$1 )
{
 label$2653:;
 *(int64*)THIS$1 = *(int64*)__FB_RHS__$1;
 fb_StrAssign( (void*)((uint8*)THIS$1 + 8ll), -1ll, (void*)((uint8*)__FB_RHS__$1 + 8ll), -1ll, 0 );
 label$2654:;
}

static void _ZN9_XDISPLAYaSERKS_( struct $9_XDISPLAY* THIS$1, struct $9_XDISPLAY* __FB_RHS__$1 )
{
 label$2661:;
 *(int32**)THIS$1 = *(int32**)__FB_RHS__$1;
 *(int32**)((uint8*)THIS$1 + 8ll) = *(int32**)((uint8*)__FB_RHS__$1 + 8ll);
 *(int64*)((uint8*)THIS$1 + 16ll) = *(int64*)((uint8*)__FB_RHS__$1 + 16ll);
 *(int64*)((uint8*)THIS$1 + 24ll) = *(int64*)((uint8*)__FB_RHS__$1 + 24ll);
 *(int64*)((uint8*)THIS$1 + 32ll) = *(int64*)((uint8*)__FB_RHS__$1 + 32ll);
 *(int64*)((uint8*)THIS$1 + 40ll) = *(int64*)((uint8*)__FB_RHS__$1 + 40ll);
 fb_StrAssign( (void*)((uint8*)THIS$1 + 48ll), -1ll, (void*)((uint8*)__FB_RHS__$1 + 48ll), -1ll, 0 );
 *(uint32*)((uint8*)THIS$1 + 72ll) = *(uint32*)((uint8*)__FB_RHS__$1 + 72ll);
 *(uint32*)((uint8*)THIS$1 + 76ll) = *(uint32*)((uint8*)__FB_RHS__$1 + 76ll);
 *(uint32*)((uint8*)THIS$1 + 80ll) = *(uint32*)((uint8*)__FB_RHS__$1 + 80ll);
 *(int64*)((uint8*)THIS$1 + 88ll) = *(int64*)((uint8*)__FB_RHS__$1 + 88ll);
 *(int32**)((uint8*)THIS$1 + 96ll) = *(int32**)((uint8*)__FB_RHS__$1 + 96ll);
 *(int64*)((uint8*)THIS$1 + 104ll) = *(int64*)((uint8*)__FB_RHS__$1 + 104ll);
 *(int64*)((uint8*)THIS$1 + 112ll) = *(int64*)((uint8*)__FB_RHS__$1 + 112ll);
 *(int64*)((uint8*)THIS$1 + 120ll) = *(int64*)((uint8*)__FB_RHS__$1 + 120ll);
 *(int64*)((uint8*)THIS$1 + 128ll) = *(int64*)((uint8*)__FB_RHS__$1 + 128ll);
 *(int64*)((uint8*)THIS$1 + 136ll) = *(int64*)((uint8*)__FB_RHS__$1 + 136ll);
 *(int32**)((uint8*)THIS$1 + 144ll) = *(int32**)((uint8*)__FB_RHS__$1 + 144ll);
 *(int64*)((uint8*)THIS$1 + 152ll) = *(int64*)((uint8*)__FB_RHS__$1 + 152ll);
 *(int64*)((uint8*)THIS$1 + 160ll) = *(int64*)((uint8*)__FB_RHS__$1 + 160ll);
 *(int32**)((uint8*)THIS$1 + 168ll) = *(int32**)((uint8*)__FB_RHS__$1 + 168ll);
 *(int32**)((uint8*)THIS$1 + 176ll) = *(int32**)((uint8*)__FB_RHS__$1 + 176ll);
 *(int64*)((uint8*)THIS$1 + 184ll) = *(int64*)((uint8*)__FB_RHS__$1 + 184ll);
 *(uint32*)((uint8*)THIS$1 + 192ll) = *(uint32*)((uint8*)__FB_RHS__$1 + 192ll);
 *(uint32*)((uint8*)THIS$1 + 196ll) = *(uint32*)((uint8*)__FB_RHS__$1 + 196ll);
 *(int32**)((uint8*)THIS$1 + 200ll) = *(int32**)((uint8*)__FB_RHS__$1 + 200ll);
 *(int32**)((uint8*)THIS$1 + 208ll) = *(int32**)((uint8*)__FB_RHS__$1 + 208ll);
 *(int32**)((uint8*)THIS$1 + 216ll) = *(int32**)((uint8*)__FB_RHS__$1 + 216ll);
 *(int32**)((uint8*)THIS$1 + 224ll) = *(int32**)((uint8*)__FB_RHS__$1 + 224ll);
 *(uint64*)((uint8*)THIS$1 + 232ll) = *(uint64*)((uint8*)__FB_RHS__$1 + 232ll);
 *(int32**)((uint8*)THIS$1 + 240ll) = *(int32**)((uint8*)__FB_RHS__$1 + 240ll);
 *(int32**)((uint8*)THIS$1 + 248ll) = *(int32**)((uint8*)__FB_RHS__$1 + 248ll);
 fb_StrAssign( (void*)((uint8*)THIS$1 + 256ll), -1ll, (void*)((uint8*)__FB_RHS__$1 + 256ll), -1ll, 0 );
 *(int64*)((uint8*)THIS$1 + 280ll) = *(int64*)((uint8*)__FB_RHS__$1 + 280ll);
 *(int64*)((uint8*)THIS$1 + 288ll) = *(int64*)((uint8*)__FB_RHS__$1 + 288ll);
 *(int32**)((uint8*)THIS$1 + 296ll) = *(int32**)((uint8*)__FB_RHS__$1 + 296ll);
 *(uint32*)((uint8*)THIS$1 + 304ll) = *(uint32*)((uint8*)__FB_RHS__$1 + 304ll);
 *(uint32*)((uint8*)THIS$1 + 308ll) = *(uint32*)((uint8*)__FB_RHS__$1 + 308ll);
 *(int64*)((uint8*)THIS$1 + 312ll) = *(int64*)((uint8*)__FB_RHS__$1 + 312ll);
 *(int64*)((uint8*)THIS$1 + 320ll) = *(int64*)((uint8*)__FB_RHS__$1 + 320ll);
 *(int32**)((uint8*)THIS$1 + 328ll) = *(int32**)((uint8*)__FB_RHS__$1 + 328ll);
 *(int32**)((uint8*)THIS$1 + 336ll) = *(int32**)((uint8*)__FB_RHS__$1 + 336ll);
 *(int64*)((uint8*)THIS$1 + 344ll) = *(int64*)((uint8*)__FB_RHS__$1 + 344ll);
 fb_StrAssign( (void*)((uint8*)THIS$1 + 352ll), -1ll, (void*)((uint8*)__FB_RHS__$1 + 352ll), -1ll, 0 );
 *(int32*)((uint8*)THIS$1 + 376ll) = *(int32*)((uint8*)__FB_RHS__$1 + 376ll);
 *(tmp$397*)((uint8*)THIS$1 + 384ll) = *(tmp$397*)((uint8*)__FB_RHS__$1 + 384ll);
 *(tmp$398*)((uint8*)THIS$1 + 392ll) = *(tmp$398*)((uint8*)__FB_RHS__$1 + 392ll);
 *(int32*)((uint8*)THIS$1 + 400ll) = *(int32*)((uint8*)__FB_RHS__$1 + 400ll);
 *(int32*)((uint8*)THIS$1 + 404ll) = *(int32*)((uint8*)__FB_RHS__$1 + 404ll);
 *(int32*)((uint8*)THIS$1 + 408ll) = *(int32*)((uint8*)__FB_RHS__$1 + 408ll);
 *(int32*)((uint8*)THIS$1 + 412ll) = *(int32*)((uint8*)__FB_RHS__$1 + 412ll);
 *(int32*)((uint8*)THIS$1 + 416ll) = *(int32*)((uint8*)__FB_RHS__$1 + 416ll);
 *(int32*)((uint8*)THIS$1 + 420ll) = *(int32*)((uint8*)__FB_RHS__$1 + 420ll);
 label$2662:;
}

__attribute__(( constructor )) static void _GLOBAL__I( void )
{
 label$13598:;
 _ZN4MAT2C1Ed( &M2$, 0x1.p+0 );
 _ZN7VECTOR3C1Ev( &IRESOLUTION$ );
 _ZN7VECTOR4C1Ev( &IMOUSE$ );
 _ZN7VECTOR4C1Ev( &FRAGCOLOR$ );
 _ZN7VECTOR2C1Ev( &FRAGCOORD$ );
 _ZN7VECTOR2C1Ev( &Q$ );
 _ZN7VECTOR2C1Ev( &P2$ );
 _ZN7VECTOR3C1Ev( &RO$ );
 _ZN7VECTOR3C1Ev( &TA$ );
 _ZN4MAT3C1Ed( &CA$, 0x1.p+0 );
 _ZN7VECTOR3C1Ev( &RD$ );
 _ZN7VECTOR3C1Ev( &COL$ );
 _ZN7VECTOR2C1Ev( &UV$ );
 _ZN7VECTOR3C1Ev( &CW$ );
 _ZN7VECTOR3C1Ev( &CP$ );
 _ZN7VECTOR3C1Ev( &CU$ );
 _ZN7VECTOR3C1Ev( &CV$ );
 _ZN7VECTOR3C1Ev( &LIN$ );
 _ZN7VECTOR3C1Ev( &REF$ );
 _ZN7VECTOR3C1Ev( &LIGHT$ );
 _ZN7VECTOR3C1Ev( &P3$ );
 _ZN7VECTOR3C1Ev( &NOR$ );
 _ZN7VECTOR2C1Ev( &RES2$ );
 _ZN7VECTOR3C1Ev( &AOPOS$ );
 _ZN7VECTOR2C1Ev( &RV2$ );
 _ZN5C64_TC1Ev( &COMPUTER$ );
 label$13599:;
}

__attribute__(( destructor )) static void _GLOBAL__D( void )
{
 label$13601:;
 _ZN5C64_TD1Ev( &COMPUTER$ );
 label$13602:;
}
