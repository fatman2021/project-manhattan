# 0 "c64dvd-glsl.c"
# 0 "<built-in>"
# 0 "<command-line>"
# 1 "c64dvd-glsl.c"
typedef signed char int8;
typedef unsigned char uint8;
typedef signed short int16;
typedef unsigned short uint16;
typedef signed int int32;
typedef unsigned int uint32;
typedef signed long long int64;
typedef unsigned long long uint64;
typedef struct { char *data; int64 len; int64 size; } FBSTRING;
typedef int8 boolean;
struct $16__FB_ARRAYDIMTB$ {
 int64 ELEMENTS;
 int64 LBOUND;
 int64 UBOUND;
};

extern int __$fb_structsizecheck[(sizeof( struct $16__FB_ARRAYDIMTB$ ) == 24) ? 1 : -1];
struct $8FBARRAY1IiE {
 int32* DATA;
 int32* PTR;
 int64 SIZE;
 int64 ELEMENT_LEN;
 int64 DIMENSIONS;
 int64 FLAGS;
 struct $16__FB_ARRAYDIMTB$ DIMTB[1];
};
extern int __$fb_structsizecheck[(sizeof( struct $8FBARRAY1IiE ) == 72) ? 1 : -1];
typedef uint32 (*tmp$83)( uint32 );
typedef void (*tmp$12)( uint32 );
typedef void (*tmp$92)( uint32, int32, uint8**, int32* );
typedef void (*tmp$73)( uint32, uint32, int32* );
typedef void (*tmp$87)( uint32, int32, int32*, uint8* );
typedef uint32 (*tmp$82)( void );
typedef void (*tmp$72)( uint32, uint32 );
typedef int32 (*tmp$86)( uint32, uint8* );
typedef void (*tmp$66)( int32, int32 );
typedef void (*tmp$93)( int32, float );
typedef void (*tmp$95)( int32, float, float, float );
typedef void (*tmp$99)( int32, int32, float* );
typedef void (*tmp$96)( int32, float, float, float, float );
struct $9SHADERTOY {
 uint32 FRAGMENTSHADER;
 uint32 PROGRAMOBJECT;
 FBSTRING SHADERLOG;
};
extern int __$fb_structsizecheck[(sizeof( struct $9SHADERTOY ) == 32) ? 1 : -1];
struct $7VECTOR2 {
 union {
  double X;
  double U;
  double S;
 };
 union {
  double Y;
  double V;
  double T;
 };
};
extern int __$fb_structsizecheck[(sizeof( struct $7VECTOR2 ) == 16) ? 1 : -1];
struct $7VECTOR3 {
 union {
  double X;
  double R;
  double S;
 };
 union {
  double Y;
  double G;
  double T;
 };
 union {
  double Z;
  double B;
  double P;
 };
};
extern int __$fb_structsizecheck[(sizeof( struct $7VECTOR3 ) == 24) ? 1 : -1];
struct $7VECTOR4 {
 union {
  double X;
  double R;
  double S;
 };
 union {
  double Y;
  double G;
  double T;
 };
 union {
  double Z;
  double B;
  double P;
 };
 union {
  double W;
  double A;
  double Q;
 };
};
extern int __$fb_structsizecheck[(sizeof( struct $7VECTOR4 ) == 32) ? 1 : -1];
struct $5PLANE {
 struct $7VECTOR3 N;
 double D;
};
extern int __$fb_structsizecheck[(sizeof( struct $5PLANE ) == 32) ? 1 : -1];
typedef int64 $10EPLANESIDE;
struct $4MAT2 {
 double M00;
 double M10;
 double M01;
 double M11;
};
extern int __$fb_structsizecheck[(sizeof( struct $4MAT2 ) == 32) ? 1 : -1];
struct $4MAT3 {
 double M00;
 double M10;
 double M20;
 double M01;
 double M11;
 double M21;
 double M02;
 double M12;
 double M22;
};
extern int __$fb_structsizecheck[(sizeof( struct $4MAT3 ) == 72) ? 1 : -1];
struct $4MAT4 {
 double M00;
 double M10;
 double M20;
 double M30;
 double M01;
 double M11;
 double M21;
 double M31;
 double M02;
 double M12;
 double M22;
 double M32;
 double M03;
 double M13;
 double M23;
 double M33;
};
extern int __$fb_structsizecheck[(sizeof( struct $4MAT4 ) == 128) ? 1 : -1];
struct $6VECTOR {
 union {
  double X;
  double R;
 };
 union {
  double Y;
  double G;
 };
 union {
  double Z;
  double B;
 };
 union {
  double W;
  double A;
 };
};
extern int __$fb_structsizecheck[(sizeof( struct $6VECTOR ) == 32) ? 1 : -1];
struct $8MATERIAL {
 int64 ID;
 struct $6VECTOR COLOR;
 double ROUGH_REFLECTION;
 double MIRROR_REFLECTION;
 double CONCENTRIC_REFLECTION;
 double PORTION_OF_MATERIAL;
 double PORTION_OF_MIRROR;
 double TRANSPARENCY;
 double REFRACTIVE_INDEX;
 boolean BUILDSHADOW;
 boolean RECEIVESHADOW;
 boolean MIXCOLORS;
 boolean NEEDCOORDS;
 int64 COLORMAPID;
 struct $6VECTOR COLORMAPFACTOR;
 int64 BUMPMAPID;
 struct $6VECTOR BUMPMAPFACTOR;
 int64 STAMPMAPID;
 struct $6VECTOR STAMPMAPFACTOR;
 int64 TRANSMAPID;
 struct $6VECTOR TRANSMAPFACTOR;
};
extern int __$fb_structsizecheck[(sizeof( struct $8MATERIAL ) == 264) ? 1 : -1];
typedef int64 $14OBJECT3D_TYPES;
struct $9RECTANGLE {
 struct $6VECTOR LEFTTOP;
 struct $6VECTOR RIGHTBOTTOM;
};
extern int __$fb_structsizecheck[(sizeof( struct $9RECTANGLE ) == 64) ? 1 : -1];
struct $4POLY {
 int64 ID;
 struct $9RECTANGLE SCREENREC;
 int64 NVERTICES;
 struct $6VECTOR** VERTICES;
 struct $6VECTOR NORMALE;
 struct $6VECTOR CROSS;
 double DOTV0VP;
};
extern int __$fb_structsizecheck[(sizeof( struct $4POLY ) == 160) ? 1 : -1];
struct $8OBJECT3D {
 $14OBJECT3D_TYPES TYPE;
 int64 ID;
 struct $9RECTANGLE SCREENREC;
 struct $6VECTOR POSITION;
 int64 MATERIALID;
 double RADIUS;
 int64 NVERTICES;
 struct $6VECTOR** VERTICES;
 int64 NPOLYS;
 struct $4POLY** POLYS;
};
extern int __$fb_structsizecheck[(sizeof( struct $8OBJECT3D ) == 160) ? 1 : -1];
typedef int64 $11LIGHT_TYPES;
struct $5LIGHT {
 $11LIGHT_TYPES TYPE;
 int64 ID;
 struct $6VECTOR POSITION;
 struct $6VECTOR DIRECTION;
 struct $6VECTOR NORMALE;
 struct $6VECTOR RNORMALE;
 struct $6VECTOR COLOR;
 double MAXWIDTH;
 double SPOTANGLE;
 boolean BUILDSHADOW;
};
extern int __$fb_structsizecheck[(sizeof( struct $5LIGHT ) == 200) ? 1 : -1];
typedef int64 $11MAP2D_TYPES;
struct $9BMPHEADER {
 uint16 FILEID __attribute__((packed, aligned(1)));
 int32 FILESIZE __attribute__((packed, aligned(1)));
 uint16 RES1 __attribute__((packed, aligned(1)));
 uint16 RES2 __attribute__((packed, aligned(1)));
 int32 OFFSET __attribute__((packed, aligned(1)));
 int32 HEADERSIZE __attribute__((packed, aligned(1)));
 int32 W __attribute__((packed, aligned(1)));
 int32 H __attribute__((packed, aligned(1)));
 int16 PLANES __attribute__((packed, aligned(1)));
 int16 BITCOUNT __attribute__((packed, aligned(1)));
 int32 COMPRESSION __attribute__((packed, aligned(1)));
 int32 IMAGESIZE __attribute__((packed, aligned(1)));
 int32 PELSPERX __attribute__((packed, aligned(1)));
 int32 PELSPERY __attribute__((packed, aligned(1)));
 int32 COLORSINUSE __attribute__((packed, aligned(1)));
 int32 COLORSINPORTANT __attribute__((packed, aligned(1)));
};
extern int __$fb_structsizecheck[(sizeof( struct $9BMPHEADER ) == 54) ? 1 : -1];
struct $5MAP2D {
 int64 MAPID;
 $11MAP2D_TYPES TYPE;
 struct $9BMPHEADER HEADER __attribute__((aligned(4)));
 uint8* PCOLORPIXELS;
 struct $6VECTOR FACTOR;
};
extern int __$fb_structsizecheck[(sizeof( struct $5MAP2D ) == 112) ? 1 : -1];
struct $7AAPIXEL {
 int64 V;
 int64 X;
 int64 Y;
};
extern int __$fb_structsizecheck[(sizeof( struct $7AAPIXEL ) == 24) ? 1 : -1];
struct $9RAYTRACER {
 int64 SCREENWIDTH;
 int64 SCREENHEIGHT;
 int64 XCENTER;
 int64 YCENTER;
 double SCALE;
 double SCALEINV;
 struct $6VECTOR AMBIENT;
 double PORTION_OF_AMBIENT;
 struct $6VECTOR BACKGROUND;
 double PORTION_OF_BACKGROUND;
 int64 MAXRAYDEPTH;
 int64 RAYDEPTH;
 struct $6VECTOR SRC;
 struct $6VECTOR DES;
 struct $6VECTOR HITPOINT;
 int64 NMATERIALS;
 struct $8MATERIAL** MATERIALS;
 int64 NOBJECTS;
 struct $8OBJECT3D** OBJECTS;
 int64 NLIGHTS;
 struct $5LIGHT** LIGHTS;
 int64 NMAPS;
 struct $5MAP2D** MAPS;
 int64 NAAPIXELS;
 struct $7AAPIXEL** AAPIXELS;
};
extern int __$fb_structsizecheck[(sizeof( struct $9RAYTRACER ) == 320) ? 1 : -1];
struct $8PALENTRY {
 uint8 R;
 uint8 G;
 uint8 B;
 uint8 FLAG;
};
extern int __$fb_structsizecheck[(sizeof( struct $8PALENTRY ) == 4) ? 1 : -1];
struct $7FBARRAYIvE {
 void* DATA;
 void* PTR;
 int64 SIZE;
 int64 ELEMENT_LEN;
 int64 DIMENSIONS;
 int64 FLAGS;
 struct $16__FB_ARRAYDIMTB$ DIMTB[8];
};
extern int __$fb_structsizecheck[(sizeof( struct $7FBARRAYIvE ) == 240) ? 1 : -1];
typedef int64 $13BUMP_METHODES;
typedef int64 $6AATYPE;
struct $8MEMORY_T {
 double MEM64[16777216];
 double KERNAL[16384];
 double BASIC[16384];
 double CHAR[2073601];
 double COL[1024];
 double SINTABLE[360];
 double COSTABLE[360];
 struct $9RAYTRACER RAYTRACER;
 struct $7VECTOR4 FRAGCOLOR;
 struct $7VECTOR2 FRAGCOORD;
 struct $7VECTOR2 RES;
 uint8 RESULT[2048];
 uint8 RESULT2[2048];
};
extern int __$fb_structsizecheck[(sizeof( struct $8MEMORY_T ) == 151087112) ? 1 : -1];
struct $5FLAGS {
 uint8 __fb_struct_body[1];
};
extern int __$fb_structsizecheck[(sizeof( struct $5FLAGS ) == 1) ? 1 : -1];
struct $5MULTI {
 union {
  void* ADR0;
  void* ADR1;
  struct {
   union {
    double UFPU64;
    double SFPU64;
    struct {
     union {
      uint64 U64;
      int64 S64;
      struct {
       union {
        float UFPU32;
        float SFPU32;
        struct {
         union {
          uint32 U32;
          int32 S32;
          struct {
           union {
            uint16 U16;
            int16 S16;
            struct {
             union {
              uint8 ULO;
              int8 SLO;
             };
             union {
              uint8 UHI;
              int8 SHI;
             };
            };
           };
          };
         };
        };
       };
      };
     };
    };
   };
  };
 };
};
extern int __$fb_structsizecheck[(sizeof( struct $5MULTI ) == 8) ? 1 : -1];
struct $7CPU6510;
typedef void (*tmp$1673)( struct $7CPU6510* );
struct $6OPCODE {
 uint64 CODE;
 uint8 NAM[4];
 uint64 ADRMODE;
 uint64 BYTES;
 uint64 TICKS;
 struct $5MULTI OP;
 tmp$1673 DECODE;
};
extern int __$fb_structsizecheck[(sizeof( struct $6OPCODE ) == 56) ? 1 : -1];
struct $7CPU6510 {
 union {
  uint8 P;
  struct $5FLAGS F;
 };
 union {
  uint8 A;
  int8 SA;
 };
 union {
  uint8 X;
  int8 SX;
 };
 union {
  uint8 Y;
  int8 SY;
 };
 union {
  uint16 PC;
  struct {
   uint8 PL;
   uint8 PH;
  };
 };
 union {
  uint16 SP;
  struct {
   uint8 S;
   uint8 MSB;
  };
 };
 struct $8MEMORY_T* MEM;
 struct $6OPCODE CODE;
 struct $6OPCODE OPCODES[256];
 FBSTRING STRADRMODES[13];
};
extern int __$fb_structsizecheck[(sizeof( struct $7CPU6510 ) == 14720) ? 1 : -1];
struct $5C64_T {
 struct $8MEMORY_T* MEM;
 struct $7CPU6510* CPU;
};
extern int __$fb_structsizecheck[(sizeof( struct $5C64_T ) == 16) ? 1 : -1];
struct $4VEC3 {
 float X;
 float Y;
 float Z;
};
extern int __$fb_structsizecheck[(sizeof( struct $4VEC3 ) == 12) ? 1 : -1];
struct $10THREADSCAN {
 double YSCAN;
 double XEND;
 double YEND;
 void* THREAD_HANDLE;
};
extern int __$fb_structsizecheck[(sizeof( struct $10THREADSCAN ) == 32) ? 1 : -1];
struct $21MULTIBOOT_MODULE_INFO {
 uint64 MOD_START __attribute__((packed, aligned(1)));
 uint64 MOD_END __attribute__((packed, aligned(1)));
 uint64 MOD_STRING __attribute__((packed, aligned(1)));
 uint64 RESERVED __attribute__((packed, aligned(1)));
};
extern int __$fb_structsizecheck[(sizeof( struct $21MULTIBOOT_MODULE_INFO ) == 32) ? 1 : -1];
struct $14MULTIBOOT_INFO {
 uint64 FLAGS __attribute__((packed, aligned(1)));
 uint64 MEM_LOWER __attribute__((packed, aligned(1)));
 uint64 MEM_UPPER __attribute__((packed, aligned(1)));
 uint64 BOOT_DEVICE __attribute__((packed, aligned(1)));
 int8* CMDLINE __attribute__((packed, aligned(1)));
 uint64 MODS_COUNT __attribute__((packed, aligned(1)));
 struct $21MULTIBOOT_MODULE_INFO* MODS_ADDR __attribute__((packed, aligned(1)));
 uint64 SYMS[5] __attribute__((packed, aligned(1)));
 uint64 MMAP_LENGTH __attribute__((packed, aligned(1)));
 uint64 MMAP_ADDR __attribute__((packed, aligned(1)));
 uint64 DRIVES_LENGTH __attribute__((packed, aligned(1)));
 uint64 DRIVES_ADDR __attribute__((packed, aligned(1)));
 uint64 CONFIG_TABLE __attribute__((packed, aligned(1)));
 int8* BOOT_LOADER_NAME __attribute__((packed, aligned(1)));
 uint64 APM_TABLE __attribute__((packed, aligned(1)));
 uint64 VBE_CONTROL_INFO __attribute__((packed, aligned(1)));
 uint64 VBE_MODE_INFO __attribute__((packed, aligned(1)));
 uint16 VBE_MODE __attribute__((packed, aligned(1)));
 uint16 VBE_INTERFACE_SEG __attribute__((packed, aligned(1)));
 uint16 VBE_INTERFACE_OFF __attribute__((packed, aligned(1)));
 uint16 VBE_INTERFACE_LEN __attribute__((packed, aligned(1)));
};
extern int __$fb_structsizecheck[(sizeof( struct $14MULTIBOOT_INFO ) == 176) ? 1 : -1];



int32 fb_ArrayRedimEx( struct $7FBARRAYIvE*, uint64, int32, int32, uint64, ... );
void fb_ArrayDestructStr( struct $7FBARRAYIvE* );
int32 fb_ArrayErase( struct $7FBARRAYIvE* );
int32 fb_Locate( int32, int32, int32, int32, int32 );
void fb_Cls( int32 );
FBSTRING* fb_Inkey( void );
int32 fb_PageCopy( int32, int32 );
void fb_DataRestore( void* );
void fb_DataReadStr( void*, int64, int32 );
void fb_DataReadLongint( int64* );
void fb_DataReadULongint( uint64* );
int32 fb_FileOpen( FBSTRING*, uint32, uint32, uint32, int32, int32 );
int32 fb_FileClose( int32 );
int32 fb_FilePutLarge( int32, int64, void*, uint64 );
int32 fb_FileGetLarge( int32, int64, void*, uint64 );
int32 fb_FileGetArrayLarge( int32, int64, struct $7FBARRAYIvE* );
int32 fb_FileSeek( int32, int32 );
int32 fb_FileLineInput( int32, void*, int64, int32 );
int32 fb_LineInput( FBSTRING*, void*, int64, int32, int32, int32 );
int32 fb_FileInput( int32 );
int32 fb_ConsoleInput( FBSTRING*, int32, int32 );
int32 fb_InputString( void*, int64, int32 );
int32 fb_FileFree( void );
int32 fb_FileEof( int32 );
int64 fb_FileSize( int32 );
void fb_GfxPset( void*, float, float, uint32, int32, int32 );
uint32 fb_GfxPoint( void*, float, float );
void fb_GfxLine( void*, float, float, float, float, uint32, int32, uint32, int32 );
void fb_GfxEllipse( void*, float, float, float, uint32, float, float, float, int32, int32 );
void fb_GfxPaint( void*, float, float, uint32, uint32, FBSTRING*, int32, int32 );
void fb_GfxDraw( void*, FBSTRING* );
int64 fb_GfxDrawString( void*, float, float, int32, FBSTRING*, uint32, void*, int32, void*, void*, void* );
void fb_GfxPalette( int32, int32, int32, int32 );
int32 fb_GfxPut( void*, float, float, void*, int32, int32, int32, int32, int32, int32, void*, int32, void*, void* );
int32 fb_GfxScreen( int32, int32, int32, int32, int32 );
int32 fb_GfxScreenRes( int32, int32, int32, int32, int32, int32 );
int32 fb_GfxBload( FBSTRING*, void*, void* );
int32 fb_GfxFlip( int32, int32 );
int32 fb_GfxWaitVSync( void );
void fb_GfxLock( void );
void fb_GfxUnlock( int32, int32 );
void* fb_GfxScreenPtr( void );
void fb_GfxSetWindowTitle( FBSTRING* );
int32 fb_GetMouse64( int64*, int64*, int64*, int64*, int64* );
void fb_GfxScreenInfo64( int64*, int64*, int64*, int64*, int64*, int64*, FBSTRING* );
int32 fb_GfxScreenList( int32 );
void* fb_GfxImageCreate( int32, int32, uint32, int32, int32 );
void fb_GfxImageDestroy( void* );
int32 fb_GfxImageInfo64( void*, int64*, int64*, int64*, int64*, void**, int64* );
void fb_GfxControl_i64( int32, int64*, int64*, int64*, int64* );
void* fb_GfxGetGLProcAddress( uint8* );
void fb_hPutPSet( uint8*, uint8*, int32, int32, int32, int32, int32, void*, void* );
void fb_hPutAlpha( uint8*, uint8*, int32, int32, int32, int32, int32, void*, void* );
double pow( double, double );
double fb_Rnd( float );
uint64 fb_GetMemAvail( int32 );
void* malloc( uint64 );
void* calloc( uint64, uint64 );
void* realloc( void*, uint64 );
void free( void* );
void fb_PrintVoid( int32, int32 );
void fb_PrintULongint( int32, uint64, int32 );
void fb_PrintString( int32, FBSTRING*, int32 );
FBSTRING* fb_StrInit( void*, int64, void*, int64, int32 );
FBSTRING* fb_StrAssign( void*, int64, void*, int64, int32 );
void fb_StrDelete( FBSTRING* );
FBSTRING* fb_StrConcat( FBSTRING*, void*, int64, void*, int64 );
int32 fb_StrCompare( void*, int64, void*, int64 );
FBSTRING* fb_StrConcatAssign( void*, int64, void*, int64, int32 );
FBSTRING* fb_StrAllocTempResult( FBSTRING* );
FBSTRING* fb_StrAllocTempDescZEx( uint8*, int64 );
FBSTRING* fb_UIntToStr( uint32 );
FBSTRING* fb_LongintToStr( int64 );
FBSTRING* fb_ULongintToStr( uint64 );
FBSTRING* fb_DoubleToStr( double );
FBSTRING* fb_StrMid( FBSTRING*, int64, int64 );
int64 fb_StrLen( void*, int64 );
uint32 fb_ASC( FBSTRING*, int64 );
FBSTRING* fb_CHR( int32, ... );
double fb_VAL( FBSTRING* );
FBSTRING* fb_HEX_l( uint64 );
FBSTRING* fb_HEXEx_b( uint8, int32 );
FBSTRING* fb_HEXEx_s( uint16, int32 );
FBSTRING* fb_SPACE( int64 );
FBSTRING* fb_StrLcase2( FBSTRING*, int32 );
void fb_Init( int32, uint8**, int32 );
void fb_End( int32 );
double fb_Timer( void );
int32 fb_Shell( FBSTRING* );
int32 fb_Chain( FBSTRING* );
void fb_Sleep( int32 );
int32 fb_SleepEx( int32, int32 );
void fb_Beep( void );
void glRectf( float, float, float, float );
void glTexParameteri( uint32, uint32, int32 );
void glTexImage2D( uint32, int32, int32, int32, int32, int32, uint32, uint32, void* );
void glGenTextures( int32, uint32* );
void glBindTexture( uint32, uint32 );
void glActiveTexture( uint32 );
void ERROREXIT( FBSTRING* );
void GLSCREEN( int64, int64, int64, int64, boolean );
void _ZN9SHADERTOYD1Ev( struct $9SHADERTOY* );
boolean _ZN9SHADERTOY11COMPILEFILEER8FBSTRING( struct $9SHADERTOY*, FBSTRING* );
boolean _ZN9SHADERTOY11COMPILECODEER8FBSTRING( struct $9SHADERTOY*, FBSTRING* );
static void _ZN9SHADERTOYC1Ev( struct $9SHADERTOY* );
static void _ZN9SHADERTOYaSERKS_( struct $9SHADERTOY*, struct $9SHADERTOY* );
double fabs( double );
float sinf( float );
float cosf( float );
float tanf( float );
float asinf( float );
float acosf( float );
float atan2f( float, float );
float expf( float );
float logf( float );
float log2f( float );
float powf( float, float );
float sqrtf( float );
float ceilf( float );
float floorf( float );
void _ZN7VECTOR2C1Ev( struct $7VECTOR2* );
void _ZN7VECTOR2C1Edd( struct $7VECTOR2*, double, double );
void _ZN7VECTOR2C1ERS_( struct $7VECTOR2*, struct $7VECTOR2* );
void _ZN7VECTOR2aSERS_( struct $7VECTOR2*, struct $7VECTOR2* );
struct $7VECTOR2* _ZN7VECTOR22XYEv( struct $7VECTOR2*, struct $7VECTOR2* );
struct $7VECTOR2* _ZngR7VECTOR2( struct $7VECTOR2*, struct $7VECTOR2* );
struct $7VECTOR2* _ZmiR7VECTOR2S0_( struct $7VECTOR2*, struct $7VECTOR2*, struct $7VECTOR2* );
struct $7VECTOR2* _ZmiR7VECTOR2Rd( struct $7VECTOR2*, struct $7VECTOR2*, double* );
struct $7VECTOR2* _ZmlR7VECTOR2S0_( struct $7VECTOR2*, struct $7VECTOR2*, struct $7VECTOR2* );
struct $7VECTOR2* _ZmlR7VECTOR2Rd( struct $7VECTOR2*, struct $7VECTOR2*, double* );
struct $7VECTOR2* _ZmlRdR7VECTOR2( struct $7VECTOR2*, double*, struct $7VECTOR2* );
struct $7VECTOR2* _ZdvR7VECTOR2S0_( struct $7VECTOR2*, struct $7VECTOR2*, struct $7VECTOR2* );
void _ZN7VECTOR3C1Ev( struct $7VECTOR3* );
void _ZN7VECTOR3C1Ed( struct $7VECTOR3*, double );
void _ZN7VECTOR3C1Eddd( struct $7VECTOR3*, double, double, double );
void _ZN7VECTOR3C1ER7VECTOR2d( struct $7VECTOR3*, struct $7VECTOR2*, double );
void _ZN7VECTOR3C1ERS_( struct $7VECTOR3*, struct $7VECTOR3* );
void _ZN7VECTOR3aSERS_( struct $7VECTOR3*, struct $7VECTOR3* );
void _ZN7VECTOR3pLERS_( struct $7VECTOR3*, struct $7VECTOR3* );
struct $7VECTOR2* _ZN7VECTOR32XYEv( struct $7VECTOR2*, struct $7VECTOR3* );
struct $7VECTOR2* _ZN7VECTOR32XZEv( struct $7VECTOR2*, struct $7VECTOR3* );
struct $7VECTOR3* _ZngR7VECTOR3( struct $7VECTOR3*, struct $7VECTOR3* );
struct $7VECTOR3* _ZplR7VECTOR3d( struct $7VECTOR3*, struct $7VECTOR3*, double );
struct $7VECTOR3* _ZpldR7VECTOR3( struct $7VECTOR3*, double, struct $7VECTOR3* );
struct $7VECTOR3* _ZmlR7VECTOR3d( struct $7VECTOR3*, struct $7VECTOR3*, double );
struct $7VECTOR3* _ZmldR7VECTOR3( struct $7VECTOR3*, double, struct $7VECTOR3* );
struct $7VECTOR3* _ZplR7VECTOR3S0_( struct $7VECTOR3*, struct $7VECTOR3*, struct $7VECTOR3* );
struct $7VECTOR3* _ZmiR7VECTOR3S0_( struct $7VECTOR3*, struct $7VECTOR3*, struct $7VECTOR3* );
struct $7VECTOR3* _ZmlR7VECTOR3S0_( struct $7VECTOR3*, struct $7VECTOR3*, struct $7VECTOR3* );
struct $7VECTOR3* _ZdvR7VECTOR3S0_( struct $7VECTOR3*, struct $7VECTOR3*, struct $7VECTOR3* );
void _ZN7VECTOR4C1Ev( struct $7VECTOR4* );
void _ZN7VECTOR4C1Edddd( struct $7VECTOR4*, double, double, double, double );
void _ZN7VECTOR4C1ER7VECTOR2dd( struct $7VECTOR4*, struct $7VECTOR2*, double, double );
void _ZN7VECTOR4C1ER7VECTOR3d( struct $7VECTOR4*, struct $7VECTOR3*, double );
void _ZN7VECTOR4C1ERS_( struct $7VECTOR4*, struct $7VECTOR4* );
void _ZN7VECTOR4aSERS_( struct $7VECTOR4*, struct $7VECTOR4* );
uint32 _ZN7VECTOR4cvjEv( struct $7VECTOR4* );
struct $7VECTOR4* _ZngR7VECTOR4( struct $7VECTOR4*, struct $7VECTOR4* );
struct $7VECTOR4* _ZmiR7VECTOR4S0_( struct $7VECTOR4*, struct $7VECTOR4*, struct $7VECTOR4* );
struct $7VECTOR4* _ZmldR7VECTOR4( struct $7VECTOR4*, double, struct $7VECTOR4* );
static void _ZN5PLANEaSERKS_( struct $5PLANE*, struct $5PLANE* );
struct $7VECTOR3* _Zv13sinR7VECTOR3( struct $7VECTOR3*, struct $7VECTOR3* );
double _Z4ATANdd( double, double );
double _Z3POWdd( double, double );
struct $7VECTOR3* _Z3POWR7VECTOR3S0_( struct $7VECTOR3*, struct $7VECTOR3*, struct $7VECTOR3* );
double EXP2F( double );
double _Z3EXPd( double );
double _Z3LOGd( double );
double _Z4SQRTd( double );
struct $7VECTOR2* _Zv13absRK7VECTOR2( struct $7VECTOR2*, struct $7VECTOR2* );
struct $7VECTOR3* _Zv13absRK7VECTOR3( struct $7VECTOR3*, struct $7VECTOR3* );
double _Z4SIGNd( double );
double _Z5FLOORd( double );
int64 _Z6MODULOll( int64, int64 );
double _Z6MODULOdd( double, double );
struct $7VECTOR3* _Z6MODULOR7VECTOR3S0_( struct $7VECTOR3*, struct $7VECTOR3*, struct $7VECTOR3* );
double _Z3MINdd( double, double );
struct $7VECTOR2* _Z3MINR7VECTOR2S0_( struct $7VECTOR2*, struct $7VECTOR2*, struct $7VECTOR2* );
double _Z3MAXdd( double, double );
struct $7VECTOR2* _Z3MAXR7VECTOR2Rd( struct $7VECTOR2*, struct $7VECTOR2*, double* );
struct $7VECTOR3* _Z3MAXR7VECTOR3Rd( struct $7VECTOR3*, struct $7VECTOR3*, double* );
double _Z5CLAMPddd( double, double, double );
struct $7VECTOR3* _Z5CLAMPR7VECTOR3dd( struct $7VECTOR3*, struct $7VECTOR3*, double, double );
double _Z3MIXddd( double, double, double );
struct $7VECTOR3* _Z3MIXR7VECTOR3S0_d( struct $7VECTOR3*, struct $7VECTOR3*, struct $7VECTOR3*, double );
double _Z10SMOOTHSTEPddd( double, double, double );
double _Z6LENGTHRK7VECTOR2( struct $7VECTOR2* );
double _Z6LENGTHRK7VECTOR3( struct $7VECTOR3* );
double _Z3DOTR7VECTOR2S0_( struct $7VECTOR2*, struct $7VECTOR2* );
double _Z3DOTR7VECTOR3S0_( struct $7VECTOR3*, struct $7VECTOR3* );
struct $7VECTOR3* CROSS( struct $7VECTOR3*, struct $7VECTOR3*, struct $7VECTOR3* );
struct $7VECTOR3* _Z9NORMALIZER7VECTOR3( struct $7VECTOR3*, struct $7VECTOR3* );
struct $7VECTOR3* _Z7REFLECTR7VECTOR3S0_( struct $7VECTOR3*, struct $7VECTOR3*, struct $7VECTOR3* );
void _ZN4MAT2C1Ed( struct $4MAT2*, double );
void _ZN4MAT2C1Edddd( struct $4MAT2*, double, double, double, double );
struct $7VECTOR2* _ZmlR4MAT2R7VECTOR2( struct $7VECTOR2*, struct $4MAT2*, struct $7VECTOR2* );
void _ZN4MAT3C1Ed( struct $4MAT3*, double );
void _ZN4MAT3C1Eddddddddd( struct $4MAT3*, double, double, double, double, double, double, double, double, double );
void _ZN4MAT3C1ER7VECTOR3S1_S1_( struct $4MAT3*, struct $7VECTOR3*, struct $7VECTOR3*, struct $7VECTOR3* );
void _ZN4MAT313SETZROTATIONREd( struct $4MAT3*, double );
void _ZN4MAT312SETROTATIONRER7VECTOR3d( struct $4MAT3*, struct $7VECTOR3*, double );
void _ZN4MAT310SETSCALINGEdd( struct $4MAT3*, double, double );
struct $7VECTOR3* _ZmlR4MAT3R7VECTOR3( struct $7VECTOR3*, struct $4MAT3*, struct $7VECTOR3* );
void _ZN4MAT4C1Ed( struct $4MAT4*, double );
void _ZN4MAT4C1Edddddddddddddddd( struct $4MAT4*, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double, double );
void _ZN4MAT48SETORTHOEdddddd( struct $4MAT4*, double, double, double, double, double, double );
void _ZN6VECTORC1Ev( struct $6VECTOR* );
void _ZN6VECTORC1Ej( struct $6VECTOR*, uint32 );
void _ZN6VECTORC1ERS_( struct $6VECTOR*, struct $6VECTOR* );
void _ZN6VECTORC1Edddd( struct $6VECTOR*, double, double, double, double );
void _ZN6VECTORpLERS_( struct $6VECTOR*, struct $6VECTOR* );
void _ZN6VECTORmIERS_( struct $6VECTOR*, struct $6VECTOR* );
void _ZN6VECTORmLEd( struct $6VECTOR*, double );
uint32 _ZN6VECTORcvjEv( struct $6VECTOR* );
double _ZN6VECTOR6LENGTHEv( struct $6VECTOR* );
void _ZN6VECTOR9NORMALIZEEv( struct $6VECTOR* );
struct $6VECTOR* _ZN6VECTOR10NORMALIZEDEv( struct $6VECTOR*, struct $6VECTOR* );
struct $6VECTOR* _ZmiR6VECTORS0_( struct $6VECTOR*, struct $6VECTOR*, struct $6VECTOR* );
struct $6VECTOR* _ZplR6VECTORS0_( struct $6VECTOR*, struct $6VECTOR*, struct $6VECTOR* );
struct $6VECTOR* _ZmlR6VECTORd( struct $6VECTOR*, struct $6VECTOR*, double );
struct $6VECTOR* _ZmldR6VECTOR( struct $6VECTOR*, double, struct $6VECTOR* );
double _ZmlR6VECTORS0_( struct $6VECTOR*, struct $6VECTOR* );
struct $6VECTOR* _Zv24idivR6VECTORS0_( struct $6VECTOR*, struct $6VECTOR*, struct $6VECTOR* );
static void _ZN9RECTANGLEC1Ev( struct $9RECTANGLE* );
static void _ZN9RECTANGLEaSERKS_( struct $9RECTANGLE*, struct $9RECTANGLE* );
static void _ZN5MAP2DaSERKS_( struct $5MAP2D*, struct $5MAP2D* );
static void _ZN8MATERIALaSERKS_( struct $8MATERIAL*, struct $8MATERIAL* );
static void _ZN5LIGHTaSERKS_( struct $5LIGHT*, struct $5LIGHT* );
static void _ZN4POLYaSERKS_( struct $4POLY*, struct $4POLY* );
static void _ZN8OBJECT3DaSERKS_( struct $8OBJECT3D*, struct $8OBJECT3D* );
void _ZN9RAYTRACERC1Ev( struct $9RAYTRACER* );
void _ZN9RAYTRACERD1Ev( struct $9RAYTRACER* );
int64 _ZN9RAYTRACER11ADDMATERIALEddddddddddbbbllll( struct $9RAYTRACER*, double, double, double, double, double, double, double, double, double, double, boolean, boolean, boolean, int64, int64, int64, int64 );
void _ZN9RAYTRACER15RENDERRECTANGLEEllll( struct $9RAYTRACER*, int64, int64, int64, int64 );
void _ZN9RAYTRACER8EDGEBLUREv( struct $9RAYTRACER* );
void _ZN9RAYTRACER4BLUREv( struct $9RAYTRACER* );
struct $6VECTOR* _ZN9RAYTRACER2AVEddd( struct $9RAYTRACER*, double, double, double );
struct $6VECTOR** _ZN9RAYTRACER4APV4EPP6VECTORllll( struct $9RAYTRACER*, struct $6VECTOR**, int64, int64, int64, int64 );
void _ZN9RAYTRACER6ADJUSTEPddd( struct $9RAYTRACER*, double*, double, double );
void _ZN9RAYTRACER4INITElll( struct $9RAYTRACER*, int64, int64, int64 );
boolean _ZN9RAYTRACER13ISPOLYONPIXELElldd( struct $9RAYTRACER*, int64, int64, double, double );
boolean _ZN9RAYTRACER18ISANYOBJECTONPIXELEll( struct $9RAYTRACER*, int64, int64 );
uint32 _ZN9RAYTRACER9SHOWPOINTEll( struct $9RAYTRACER*, int64, int64 );
void _ZN9RAYTRACER15BACKGROUNDCOLORER6VECTORS1_( struct $9RAYTRACER*, struct $6VECTOR*, struct $6VECTOR* );
void _ZN9RAYTRACER9VECMIRRORER6VECTORS1_S1_S1_( struct $9RAYTRACER*, struct $6VECTOR*, struct $6VECTOR*, struct $6VECTOR*, struct $6VECTOR* );
void _ZN9RAYTRACER9VECBROKENElR6VECTORS1_S1_S1_( struct $9RAYTRACER*, int64, struct $6VECTOR*, struct $6VECTOR*, struct $6VECTOR*, struct $6VECTOR* );
void _ZN9RAYTRACER8GETMAPXYEllR6VECTORS1_( struct $9RAYTRACER*, int64, int64, struct $6VECTOR*, struct $6VECTOR* );
double _ZN9RAYTRACER18GETHIGHTFIELDVALUEElll13BUMP_METHODESb( struct $9RAYTRACER*, int64, int64, int64, $13BUMP_METHODES, boolean );
boolean _ZN9RAYTRACER19ISVISIBLEONSTAMPMAPElR6VECTOR( struct $9RAYTRACER*, int64, struct $6VECTOR* );
void _ZN9RAYTRACER9DOBUMPMAPEllR6VECTORS1_S1_( struct $9RAYTRACER*, int64, int64, struct $6VECTOR*, struct $6VECTOR*, struct $6VECTOR* );
void _ZN9RAYTRACER12SURFACECOLORElR6VECTORS1_( struct $9RAYTRACER*, int64, struct $6VECTOR*, struct $6VECTOR* );
void _ZN9RAYTRACER10LOCALCOLOREllR6VECTORS1_S1_S1_S1_S1_( struct $9RAYTRACER*, int64, int64, struct $6VECTOR*, struct $6VECTOR*, struct $6VECTOR*, struct $6VECTOR*, struct $6VECTOR*, struct $6VECTOR* );
void _ZN9RAYTRACER16GETPOLYSCREENRECEll( struct $9RAYTRACER*, int64, int64 );
void _ZN9RAYTRACER10POLYHELPEREl( struct $9RAYTRACER*, int64 );
void _ZN9RAYTRACER18GETOBJECTSCREENRECEl( struct $9RAYTRACER*, int64 );
boolean _ZN9RAYTRACER13ISOBJECTONRAYER6VECTORS1_lRlS1_S1_S1_S1_( struct $9RAYTRACER*, struct $6VECTOR*, struct $6VECTOR*, int64, int64*, struct $6VECTOR*, struct $6VECTOR*, struct $6VECTOR*, struct $6VECTOR* );
boolean _ZN9RAYTRACER14ISPOLYGONONRAYER6VECTORS1_lRlS1_S1_S1_( struct $9RAYTRACER*, struct $6VECTOR*, struct $6VECTOR*, int64, int64*, struct $6VECTOR*, struct $6VECTOR*, struct $6VECTOR* );
boolean _ZN9RAYTRACER17ISMATHSPHEREONRAYER6VECTORS1_lS1_S1_S1_( struct $9RAYTRACER*, struct $6VECTOR*, struct $6VECTOR*, int64, struct $6VECTOR*, struct $6VECTOR*, struct $6VECTOR* );
boolean _ZN9RAYTRACER9LINETRACEER6VECTORS1_RlS2_S1_S1_S1_S1_( struct $9RAYTRACER*, struct $6VECTOR*, struct $6VECTOR*, int64*, int64*, struct $6VECTOR*, struct $6VECTOR*, struct $6VECTOR*, struct $6VECTOR* );
void _ZN9RAYTRACER8RAYTRACEERK6VECTORS2_lRS0_( struct $9RAYTRACER*, struct $6VECTOR*, struct $6VECTOR*, int64, struct $6VECTOR* );
void _ZN9RAYTRACER5VBLUREll( struct $9RAYTRACER*, int64, int64 );
void _ZN9RAYTRACER5HBLUREll( struct $9RAYTRACER*, int64, int64 );
static void _ZN9RAYTRACERaSERKS_( struct $9RAYTRACER*, struct $9RAYTRACER* );
void _ZN8MEMORY_TC1Ev( struct $8MEMORY_T* );
void _ZN8MEMORY_TD1Ev( struct $8MEMORY_T* );
int8 _ZN8MEMORY_T8READBYTEEd( struct $8MEMORY_T*, double );
uint8 _ZN8MEMORY_T9READUBYTEEd( struct $8MEMORY_T*, double );
uint16 _ZN8MEMORY_T10READUSHORTEd( struct $8MEMORY_T*, double );
void _ZN8MEMORY_T9WRITEBYTEEdd( struct $8MEMORY_T*, double, double );
void _ZN8MEMORY_T10WRITEUBYTEEdd( struct $8MEMORY_T*, double, double );
void _ZN8MEMORY_T11WRITEUSHORTEdd( struct $8MEMORY_T*, double, double );
double _ZN8MEMORY_T6PEEK64Ed( struct $8MEMORY_T*, double );
void _ZN8MEMORY_T6POKE64Edd( struct $8MEMORY_T*, double, double );
double _ZN8MEMORY_T10SCREENCODEEd( struct $8MEMORY_T*, double );
double _ZN8MEMORY_T5PEEKBEd( struct $8MEMORY_T*, double );
void _ZN8MEMORY_T5POKEBEdd( struct $8MEMORY_T*, double, double );
void _ZN8MEMORY_T5POKEWEdd( struct $8MEMORY_T*, double, double );
double _ZN8MEMORY_T5PEEKWEd( struct $8MEMORY_T*, double );
double _ZN8MEMORY_T8ISNUMBERE8FBSTRINGd( struct $8MEMORY_T*, FBSTRING*, double );
double _ZN8MEMORY_T7LENGTH6ER7VECTOR2( struct $8MEMORY_T*, struct $7VECTOR2* );
double _ZN8MEMORY_T7LENGTH8ER7VECTOR2( struct $8MEMORY_T*, struct $7VECTOR2* );
double _ZN8MEMORY_T7SDPLANEER7VECTOR3( struct $8MEMORY_T*, struct $7VECTOR3* );
double _ZN8MEMORY_T8SDSPHEREER7VECTOR3d( struct $8MEMORY_T*, struct $7VECTOR3*, double );
double _ZN8MEMORY_T5SDBOXER7VECTOR3S1_( struct $8MEMORY_T*, struct $7VECTOR3*, struct $7VECTOR3* );
double _ZN8MEMORY_T11SDELLIPSOIDER7VECTOR3S1_( struct $8MEMORY_T*, struct $7VECTOR3*, struct $7VECTOR3* );
double _ZN8MEMORY_T10UDROUNDBOXER7VECTOR3S1_d( struct $8MEMORY_T*, struct $7VECTOR3*, struct $7VECTOR3*, double );
double _ZN8MEMORY_T7SDTORUSER7VECTOR3R7VECTOR2( struct $8MEMORY_T*, struct $7VECTOR3*, struct $7VECTOR2* );
double _ZN8MEMORY_T9SDTORUS82ER7VECTOR3R7VECTOR2( struct $8MEMORY_T*, struct $7VECTOR3*, struct $7VECTOR2* );
double _ZN8MEMORY_T9SDTORUS88ER7VECTOR3R7VECTOR2( struct $8MEMORY_T*, struct $7VECTOR3*, struct $7VECTOR2* );
double _ZN8MEMORY_T10SDHEXPRISMER7VECTOR3R7VECTOR2( struct $8MEMORY_T*, struct $7VECTOR3*, struct $7VECTOR2* );
double _ZN8MEMORY_T9SDCAPSULEER7VECTOR3S1_S1_d( struct $8MEMORY_T*, struct $7VECTOR3*, struct $7VECTOR3*, struct $7VECTOR3*, double );
double _ZN8MEMORY_T10SDTRIPRISMER7VECTOR3R7VECTOR2( struct $8MEMORY_T*, struct $7VECTOR3*, struct $7VECTOR2* );
double _ZN8MEMORY_T10SDCYLINDERER7VECTOR3R7VECTOR2( struct $8MEMORY_T*, struct $7VECTOR3*, struct $7VECTOR2* );
double _ZN8MEMORY_T11SDCYLINDER6ER7VECTOR3R7VECTOR2( struct $8MEMORY_T*, struct $7VECTOR3*, struct $7VECTOR2* );
double _ZN8MEMORY_T6SDCONEER7VECTOR3S1_( struct $8MEMORY_T*, struct $7VECTOR3*, struct $7VECTOR3* );
double _ZN8MEMORY_T13SDCONESECTIONER7VECTOR3ddd( struct $8MEMORY_T*, struct $7VECTOR3*, double, double, double );
double _ZN8MEMORY_T3OPSEdd( struct $8MEMORY_T*, double, double );
struct $7VECTOR2* _ZN8MEMORY_T3OPUER7VECTOR2S1_( struct $7VECTOR2*, struct $8MEMORY_T*, struct $7VECTOR2*, struct $7VECTOR2* );
struct $7VECTOR3* _ZN8MEMORY_T5OPREPER7VECTOR3S1_( struct $7VECTOR3*, struct $8MEMORY_T*, struct $7VECTOR3*, struct $7VECTOR3* );
struct $7VECTOR3* _ZN8MEMORY_T7OPTWISTER7VECTOR3( struct $7VECTOR3*, struct $8MEMORY_T*, struct $7VECTOR3* );
struct $7VECTOR2* _ZN8MEMORY_T3MAPER7VECTOR3( struct $7VECTOR2*, struct $8MEMORY_T*, struct $7VECTOR3* );
struct $7VECTOR2* _ZN8MEMORY_T7CASTRAYER7VECTOR3S1_( struct $7VECTOR2*, struct $8MEMORY_T*, struct $7VECTOR3*, struct $7VECTOR3* );
double _ZN8MEMORY_T10SOFTSHADOWER7VECTOR3S1_dd( struct $8MEMORY_T*, struct $7VECTOR3*, struct $7VECTOR3*, double, double );
struct $7VECTOR3* _ZN8MEMORY_T10CALCNORMALER7VECTOR3( struct $7VECTOR3*, struct $8MEMORY_T*, struct $7VECTOR3* );
double _ZN8MEMORY_T6CALCAOER7VECTOR3S1_( struct $8MEMORY_T*, struct $7VECTOR3*, struct $7VECTOR3* );
struct $7VECTOR3* _ZN8MEMORY_T11RENDER_GLSLER7VECTOR3S1_( struct $7VECTOR3*, struct $8MEMORY_T*, struct $7VECTOR3*, struct $7VECTOR3* );
struct $4MAT3 _ZN8MEMORY_T9SETCAMERAER7VECTOR3S1_d( struct $8MEMORY_T*, struct $7VECTOR3*, struct $7VECTOR3*, double );
void _ZN8MEMORY_T9MAINIMAGEER7VECTOR4RK7VECTOR2( struct $8MEMORY_T*, struct $7VECTOR4*, struct $7VECTOR2* );
void _ZN8MEMORY_T9EXEC_GLSLEv( struct $8MEMORY_T* );
void _ZN8MEMORY_T12EXEC_GLSL_40Ev( struct $8MEMORY_T* );
void _ZN8MEMORY_T12EXEC_GLSL_90Ev( struct $8MEMORY_T* );
void _ZN8MEMORY_T13EXEC_GLSL_120Ev( struct $8MEMORY_T* );
static void _ZN8MEMORY_TaSERKS_( struct $8MEMORY_T*, struct $8MEMORY_T* );
void _ZN7CPU6510C1EP8MEMORY_T( struct $7CPU6510*, struct $8MEMORY_T* );
void _ZN7CPU6510D1Ev( struct $7CPU6510* );
double _ZN7CPU65104TICKEd( struct $7CPU6510*, double );
double _ZN7CPU65107ADR_IMMEv( struct $7CPU6510* );
double _ZN7CPU65107ADR_RELEv( struct $7CPU6510* );
double _ZN7CPU65108ADR_ZEROEv( struct $7CPU6510* );
double _ZN7CPU65109ADR_ZEROXEv( struct $7CPU6510* );
double _ZN7CPU65109ADR_ZEROYEv( struct $7CPU6510* );
double _ZN7CPU65107ADR_ABSEv( struct $7CPU6510* );
double _ZN7CPU65108ADR_ABSXEv( struct $7CPU6510* );
double _ZN7CPU65108ADR_ABSYEv( struct $7CPU6510* );
double _ZN7CPU65107ADR_INDEv( struct $7CPU6510* );
double _ZN7CPU65108ADR_INDXEv( struct $7CPU6510* );
double _ZN7CPU65108ADR_INDYEv( struct $7CPU6510* );
void _ZN7CPU65104PUSHEd( struct $7CPU6510*, double );
double _ZN7CPU65104PULLEv( struct $7CPU6510* );
static void _ZN7CPU6510aSERKS_( struct $7CPU6510*, struct $7CPU6510* );
void _ZN5C64_TC1Ev( struct $5C64_T* );
void _ZN5C64_TD1Ev( struct $5C64_T* );
void INS_UNK( struct $7CPU6510* );
void INS_ADC( struct $7CPU6510* );
void INS_AND( struct $7CPU6510* );
void INS_ASL( struct $7CPU6510* );
void INS_ASLA( struct $7CPU6510* );
void INS_BCC( struct $7CPU6510* );
void INS_BCS( struct $7CPU6510* );
void INS_BEQ( struct $7CPU6510* );
void INS_BIT( struct $7CPU6510* );
void INS_BMI( struct $7CPU6510* );
void INS_BNE( struct $7CPU6510* );
void INS_BPL( struct $7CPU6510* );
void INS_BRK( struct $7CPU6510* );
void INS_BVC( struct $7CPU6510* );
void INS_BVS( struct $7CPU6510* );
void INS_CLC( struct $7CPU6510* );
void INS_CLD( struct $7CPU6510* );
void INS_CLI( struct $7CPU6510* );
void INS_CLV( struct $7CPU6510* );
void INS_CMP( struct $7CPU6510* );
void INS_CPX( struct $7CPU6510* );
void INS_CPY( struct $7CPU6510* );
void INS_DEC( struct $7CPU6510* );
void INS_DEX( struct $7CPU6510* );
void INS_DEY( struct $7CPU6510* );
void INS_EOR( struct $7CPU6510* );
void INS_INC( struct $7CPU6510* );
void INS_INX( struct $7CPU6510* );
void INS_INY( struct $7CPU6510* );
void INS_JMP( struct $7CPU6510* );
void INS_JSR( struct $7CPU6510* );
void INS_LDA( struct $7CPU6510* );
void INS_LDX( struct $7CPU6510* );
void INS_LDY( struct $7CPU6510* );
void INS_LSR( struct $7CPU6510* );
void INS_LSRA( struct $7CPU6510* );
void INS_NOP( struct $7CPU6510* );
void INS_ORA( struct $7CPU6510* );
void INS_PHA( struct $7CPU6510* );
void INS_PHP( struct $7CPU6510* );
void INS_PLA( struct $7CPU6510* );
void INS_PLP( struct $7CPU6510* );
void INS_ROL( struct $7CPU6510* );
void INS_ROLA( struct $7CPU6510* );
void INS_ROR( struct $7CPU6510* );
void INS_RORA( struct $7CPU6510* );
void INS_RTI( struct $7CPU6510* );
void INS_RTS( struct $7CPU6510* );
void INS_SBC( struct $7CPU6510* );
void INS_SEC( struct $7CPU6510* );
void INS_SED( struct $7CPU6510* );
void INS_SEI( struct $7CPU6510* );
void INS_STA( struct $7CPU6510* );
void INS_STX( struct $7CPU6510* );
void INS_STY( struct $7CPU6510* );
void INS_TAX( struct $7CPU6510* );
void INS_TAY( struct $7CPU6510* );
void INS_TSX( struct $7CPU6510* );
void INS_TXA( struct $7CPU6510* );
void INS_TXS( struct $7CPU6510* );
void INS_TYA( struct $7CPU6510* );
void INS_R32( struct $7CPU6510* );
void INS_W32( struct $7CPU6510* );
void INS_R64( struct $7CPU6510* );
void INS_W64( struct $7CPU6510* );
int64 INTERRUPTSERVICE( struct $7CPU6510* );
void KMAIN( struct $14MULTIBOOT_INFO* );
static void _GLOBAL__I( void ) __attribute__(( constructor ));
static void _GLOBAL__D( void ) __attribute__(( destructor ));
static struct $14MULTIBOOT_INFO* MB_INFO$;
static uint16 INDEX$ = (uint16)34u;
static uint16 RVS$ = (uint16)199u;
static uint16 FCOLOR$ = (uint16)646u;
static uint16 HIBASE$ = (uint16)648u;
static uint16 SP0X$ = (uint16)53248u;
static uint16 SP0Y$ = (uint16)53249u;
static uint16 SP1X$ = (uint16)53250u;
static uint16 SP1Y$ = (uint16)53251u;
static uint16 SP2X$ = (uint16)53252u;
static uint16 SP2Y$ = (uint16)53253u;
static uint16 SP3X$ = (uint16)53254u;
static uint16 SP3Y$ = (uint16)53255u;
static uint16 SP4X$ = (uint16)53256u;
static uint16 SP4Y$ = (uint16)53257u;
static uint16 SP5X$ = (uint16)53258u;
static uint16 SP5Y$ = (uint16)53259u;
static uint16 SP6X$ = (uint16)53260u;
static uint16 SP6Y$ = (uint16)53261u;
static uint16 SP7X$ = (uint16)53262u;
static uint16 SP7Y$ = (uint16)53263u;
static uint16 RASTR$ = (uint16)53266u;
static uint16 SPENA$ = (uint16)53269u;
static uint16 VMCSB$ = (uint16)53272u;
static uint16 EXTCOL$ = (uint16)53280u;
static uint16 BGCOL0$ = (uint16)53281u;
static uint16 BGCOL1$ = (uint16)53282u;
static uint16 BGCOL2$ = (uint16)53283u;
static uint16 BGCOL3$ = (uint16)53284u;
static uint16 SP0COL$ = (uint16)53287u;
static uint16 SP1COL$ = (uint16)53288u;
static uint16 SP2COL$ = (uint16)53289u;
static uint16 SP3COL$ = (uint16)53290u;
static uint16 SP4COL$ = (uint16)53291u;
static uint16 SP5COL$ = (uint16)53309u;
static uint16 SP6COL$ = (uint16)53310u;
static uint16 SP7COL$ = (uint16)53311u;
extern double SWCH$;
extern double OFFSET$;
extern void* IMAGE$;
extern FBSTRING STRCODE$;
extern FBSTRING FILENAME$;
static tmp$83 GLCREATESHADER$;
static tmp$12 GLDELETESHADER$;
static tmp$92 GLSHADERSOURCE$;
static tmp$12 GLCOMPILESHADER$;
static tmp$73 GLGETSHADERIV$;
static tmp$87 GLGETSHADERINFOLOG$;
static tmp$82 GLCREATEPROGRAM$;
static tmp$12 GLDELETEPROGRAM$;
static tmp$72 GLATTACHSHADER$;
static tmp$72 GLDETACHSHADER$;
static tmp$12 GLLINKPROGRAM$;
static tmp$73 GLGETPROGRAMIV$;
static tmp$87 GLGETPROGRAMINFOLOG$;
static tmp$12 GLUSEPROGRAM$;
static tmp$86 GLGETUNIFORMLOCATION$;
static tmp$93 GLUNIFORM1F$;
typedef void (*tmp$94)( int32, float, float );
static tmp$94 GLUNIFORM2F$;
static tmp$95 GLUNIFORM3F$;
static tmp$99 GLUNIFORM3FV$;
static tmp$96 GLUNIFORM4F$;
static tmp$99 GLUNIFORM4FV$;
static tmp$66 GLUNIFORM1I$;
static double PC$;
static double ADR0$;
static double ADR1$;
static double ADR2$;
static double ADR3$;
static double PC_STATUS$;
static double R0$;
static double R1$;
static double R2$;
static double R3$;
static double R4$;
static double R5$;
static double RADIUS$;
static double RED2$ = 0x1.FEp+7;
static double GREEN2$ = 0x1.FEp+7;
static double BLUE2$ = 0x1.FEp+7;
static double XALPHA2$ = 0x1.FEp+7;
static double X_AXIS0$;
static double Y_AXIS0$;
static double Z_AXIS0$;
static double COL0$;
static double COL1$;
static double CHAR_H$ = 0x1.68p+6;
static double X_AXIS1$;
static double Y_AXIS1$;
static double Z_AXIS1$;
static double CHAR_PTR$;
static double CHAR_W$ = 0x1.68p+6;
static double CHAR_BUFFER$ = 0x1.p+14;
static double BITMASK$ = 0x1.FEp+7;
static double PIXEL_SIZE$;
static double IGLOBALTIME$;
static struct $7VECTOR3 IRESOLUTION$;
static struct $7VECTOR4 IMOUSE$;
static double STRING_ADR$;
static double STRING_LEN$;
static FBSTRING DRIVER_NAME$;
static FBSTRING STRING_DATA$;
static double A1$;
static double A2$;
static double A3$;
static double A4$;
static double A5$;
static double A6$;
static double A7$;
static double A8$;
static FBSTRING GET_KEY$;
static FBSTRING GET_DATA$;
static FBSTRING OLD_DATA$[10001];
static uint64 I$;
static uint8 NIBBLES$[16];
static int64 C$ = 0ll;
static int64 X$ = 0ll;
static int64 Y$ = 0ll;
static int64 XS$ = 0ll;
static int64 YS$ = 0ll;
static int64 CARY$ = 0ll;
static int64 G$ = 0ll;
extern double SYS_OFFSET$;
extern double STR_LEN$;
extern double CNT$;
extern void* BGIMAGE$;
extern void* FGIMAGE$;
extern void* RASTER$;
extern void* RENDER$;
extern void* PSCRN$;
extern FBSTRING COMPILER$;
extern uint64 SCR_W$;
extern uint64 SCR_H$;
extern uint64 SCR_POS$;
extern uint64 IMGDATA$;
extern uint64 PITCH$;
extern FBSTRING MSG$;
struct $7FBARRAYIdE {
 double* DATA;
 double* PTR;
 int64 SIZE;
 int64 ELEMENT_LEN;
 int64 DIMENSIONS;
 int64 FLAGS;
 struct $16__FB_ARRAYDIMTB$ DIMTB[8];
};
extern int __$fb_structsizecheck[(sizeof( struct $7FBARRAYIdE ) == 240) ? 1 : -1];
extern struct $7FBARRAYIdE POWER2$;
extern double SIZESCREEN$;
extern FBSTRING _SCREENRES$;
extern FBSTRING _NAME$;
extern double SCRWIDTH$;
extern double SCRHEIGHT$;
extern double RED$;
extern double GREEN$;
extern double BLUE$;
extern double XSCRCENTER$;
extern double YSCRCENTER$;
static struct $5MULTI V$;
static struct $5MULTI O$;
static int64 FLAG$;
static struct $5C64_T COMPUTER$;
static uint64 TICKS$;
static uint64 RES$;
struct $14__FB_DATADESC$ {
 int16 TYPE __attribute__((packed, aligned(1)));
 void* NODE __attribute__((packed, aligned(1)));
};
extern int __$fb_structsizecheck[(sizeof( struct $14__FB_DATADESC$ ) == 10) ? 1 : -1];
static struct $14__FB_DATADESC$ label$9228[17] = { { (int16)1, (void*)"0" }, { (int16)2, (void*)"34" }, { (int16)3, (void*)"212" }, { (int16)3, (void*)"229" }, { (int16)1, (void*)"0" }, { (int16)2, (void*)"10" }, { (int16)2, (void*)"20" }, { (int16)3, (void*)"225" }, { (int16)3, (void*)"100" }, { (int16)3, (void*)"165" }, { (int16)3, (void*)"133" }, { (int16)3, (void*)"164" }, { (int16)3, (void*)"121" }, { (int16)3, (void*)"166" }, { (int16)3, (void*)"156" }, { (int16)3, (void*)"227" }, { (int16)-1, (void*)0ull } };
static struct $14__FB_DATADESC$ label$9226[17] = { { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)2, (void*)"63" }, { (int16)3, (void*)"125" }, { (int16)3, (void*)"234" }, { (int16)3, (void*)"125" }, { (int16)3, (void*)"234" }, { (int16)2, (void*)"32" }, { (int16)1, (void*)"7" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"125" }, { (int16)3, (void*)"234" }, { (int16)3, (void*)"133" }, { (int16)1, (void*)"1" }, { (int16)-1, (void*)label$9228 } };
static struct $14__FB_DATADESC$ label$9224[17] = { { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)-1, (void*)label$9226 } };
static struct $14__FB_DATADESC$ label$9222[17] = { { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)-1, (void*)label$9224 } };
static struct $14__FB_DATADESC$ label$9220[17] = { { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)-1, (void*)label$9222 } };
static struct $14__FB_DATADESC$ label$9218[17] = { { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)-1, (void*)label$9220 } };
static struct $14__FB_DATADESC$ label$9216[17] = { { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)-1, (void*)label$9218 } };
static struct $14__FB_DATADESC$ label$9214[17] = { { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)-1, (void*)label$9216 } };
static struct $14__FB_DATADESC$ label$9212[17] = { { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)-1, (void*)label$9214 } };
static struct $14__FB_DATADESC$ label$9210[17] = { { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)-1, (void*)label$9212 } };
static struct $14__FB_DATADESC$ label$9208[17] = { { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)-1, (void*)label$9210 } };
static struct $14__FB_DATADESC$ label$9206[17] = { { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)3, (void*)"255" }, { (int16)-1, (void*)label$9208 } };
static struct $14__FB_DATADESC$ label$9204[17] = { { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)-1, (void*)label$9206 } };
static struct $14__FB_DATADESC$ label$9202[17] = { { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)-1, (void*)label$9204 } };
static struct $14__FB_DATADESC$ label$9200[17] = { { (int16)3, (void*)"141" }, { (int16)1, (void*)"0" }, { (int16)3, (void*)"222" }, { (int16)2, (void*)"96" }, { (int16)3, (void*)"160" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)-1, (void*)label$9202 } };
static struct $14__FB_DATADESC$ label$9198[17] = { { (int16)2, (void*)"51" }, { (int16)2, (void*)"56" }, { (int16)2, (void*)"57" }, { (int16)2, (void*)"49" }, { (int16)2, (void*)"49" }, { (int16)1, (void*)"0" }, { (int16)2, (void*)"48" }, { (int16)2, (void*)"48" }, { (int16)2, (void*)"48" }, { (int16)2, (void*)"48" }, { (int16)1, (void*)"3" }, { (int16)3, (void*)"141" }, { (int16)3, (void*)"148" }, { (int16)3, (void*)"158" }, { (int16)3, (void*)"169" }, { (int16)1, (void*)"0" }, { (int16)-1, (void*)label$9200 } };
static struct $14__FB_DATADESC$ label$9196[17] = { { (int16)3, (void*)"135" }, { (int16)3, (void*)"135" }, { (int16)3, (void*)"135" }, { (int16)3, (void*)"240" }, { (int16)3, (void*)"216" }, { (int16)3, (void*)"129" }, { (int16)3, (void*)"235" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)2, (void*)"32" }, { (int16)-1, (void*)label$9198 } };
static struct $14__FB_DATADESC$ label$9194[17] = { { (int16)3, (void*)"133" }, { (int16)3, (void*)"133" }, { (int16)3, (void*)"133" }, { (int16)3, (void*)"133" }, { (int16)3, (void*)"133" }, { (int16)3, (void*)"133" }, { (int16)3, (void*)"134" }, { (int16)3, (void*)"134" }, { (int16)3, (void*)"134" }, { (int16)3, (void*)"134" }, { (int16)3, (void*)"134" }, { (int16)3, (void*)"134" }, { (int16)3, (void*)"134" }, { (int16)3, (void*)"135" }, { (int16)3, (void*)"135" }, { (int16)3, (void*)"135" }, { (int16)-1, (void*)label$9196 } };
static struct $14__FB_DATADESC$ label$9192[17] = { { (int16)1, (void*)"0" }, { (int16)3, (void*)"240" }, { (int16)1, (void*)"4" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)2, (void*)"39" }, { (int16)1, (void*)"6" }, { (int16)3, (void*)"133" }, { (int16)1, (void*)"0" }, { (int16)3, (void*)"132" }, { (int16)3, (void*)"132" }, { (int16)3, (void*)"132" }, { (int16)3, (void*)"132" }, { (int16)3, (void*)"132" }, { (int16)3, (void*)"132" }, { (int16)3, (void*)"132" }, { (int16)-1, (void*)label$9194 } };
static struct $14__FB_DATADESC$ label$9190[17] = { { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)3, (void*)"160" }, { (int16)2, (void*)"48" }, { (int16)3, (void*)"253" }, { (int16)2, (void*)"64" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"6" }, { (int16)1, (void*)"0" }, { (int16)2, (void*)"64" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"1" }, { (int16)2, (void*)"32" }, { (int16)1, (void*)"1" }, { (int16)-1, (void*)label$9192 } };
static struct $14__FB_DATADESC$ label$9188[17] = { { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)2, (void*)"60" }, { (int16)1, (void*)"3" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)-1, (void*)label$9190 } };
static struct $14__FB_DATADESC$ label$9186[17] = { { (int16)1, (void*)"0" }, { (int16)1, (void*)"1" }, { (int16)3, (void*)"191" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)-1, (void*)label$9188 } };
static struct $14__FB_DATADESC$ label$9184[17] = { { (int16)1, (void*)"0" }, { (int16)3, (void*)"255" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"3" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)3, (void*)"128" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)-1, (void*)label$9186 } };
static struct $14__FB_DATADESC$ label$9182[17] = { { (int16)3, (void*)"201" }, { (int16)2, (void*)"32" }, { (int16)3, (void*)"240" }, { (int16)3, (void*)"239" }, { (int16)2, (void*)"56" }, { (int16)3, (void*)"233" }, { (int16)2, (void*)"48" }, { (int16)2, (void*)"56" }, { (int16)3, (void*)"233" }, { (int16)3, (void*)"208" }, { (int16)2, (void*)"96" }, { (int16)3, (void*)"128" }, { (int16)2, (void*)"79" }, { (int16)3, (void*)"199" }, { (int16)2, (void*)"82" }, { (int16)2, (void*)"88" }, { (int16)-1, (void*)label$9184 } };
static struct $14__FB_DATADESC$ label$9180[17] = { { (int16)1, (void*)"0" }, { (int16)3, (void*)"128" }, { (int16)3, (void*)"163" }, { (int16)3, (void*)"230" }, { (int16)3, (void*)"122" }, { (int16)3, (void*)"208" }, { (int16)1, (void*)"2" }, { (int16)3, (void*)"230" }, { (int16)3, (void*)"123" }, { (int16)3, (void*)"173" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"8" }, { (int16)3, (void*)"201" }, { (int16)2, (void*)"58" }, { (int16)3, (void*)"176" }, { (int16)2, (void*)"10" }, { (int16)-1, (void*)label$9182 } };
static struct $14__FB_DATADESC$ label$9178[17] = { { (int16)1, (void*)"0" }, { (int16)2, (void*)"10" }, { (int16)3, (void*)"118" }, { (int16)3, (void*)"163" }, { (int16)2, (void*)"25" }, { (int16)1, (void*)"0" }, { (int16)2, (void*)"32" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)3, (void*)"128" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"4" }, { (int16)1, (void*)"0" }, { (int16)3, (void*)"118" }, { (int16)-1, (void*)label$9180 } };
static struct $14__FB_DATADESC$ label$9176[17] = { { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"3" }, { (int16)2, (void*)"76" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)3, (void*)"252" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)-1, (void*)label$9178 } };
static struct $14__FB_DATADESC$ label$9174[17] = { { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"8" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)2, (void*)"36" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)-1, (void*)label$9176 } };
static struct $14__FB_DATADESC$ label$9172[17] = { { (int16)1, (void*)"8" }, { (int16)1, (void*)"3" }, { (int16)1, (void*)"8" }, { (int16)1, (void*)"0" }, { (int16)3, (void*)"160" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)3, (void*)"160" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)-1, (void*)label$9174 } };
static struct $14__FB_DATADESC$ label$9170[17] = { { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)3, (void*)"118" }, { (int16)3, (void*)"163" }, { (int16)3, (void*)"179" }, { (int16)3, (void*)"189" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"1" }, { (int16)1, (void*)"8" }, { (int16)1, (void*)"3" }, { (int16)1, (void*)"8" }, { (int16)1, (void*)"3" }, { (int16)-1, (void*)label$9172 } };
static struct $14__FB_DATADESC$ label$9168[17] = { { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)2, (void*)"25" }, { (int16)2, (void*)"22" }, { (int16)1, (void*)"0" }, { (int16)2, (void*)"10" }, { (int16)3, (void*)"118" }, { (int16)3, (void*)"163" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)-1, (void*)label$9170 } };
static struct $14__FB_DATADESC$ label$2099[17] = { { (int16)2, (void*)"47" }, { (int16)2, (void*)"55" }, { (int16)1, (void*)"0" }, { (int16)3, (void*)"170" }, { (int16)3, (void*)"177" }, { (int16)3, (void*)"145" }, { (int16)3, (void*)"179" }, { (int16)2, (void*)"34" }, { (int16)2, (void*)"34" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)3, (void*)"255" }, { (int16)1, (void*)"0" }, { (int16)1, (void*)"0" }, { (int16)-1, (void*)label$9168 } };
static struct $14__FB_DATADESC$ label$9166[2] = { { (int16)3, (void*)"IND" }, { (int16)-1, (void*)label$2099 } };
static struct $14__FB_DATADESC$ label$9164[2] = { { (int16)4, (void*)"INDY" }, { (int16)-1, (void*)label$9166 } };
static struct $14__FB_DATADESC$ label$9162[2] = { { (int16)4, (void*)"INDX" }, { (int16)-1, (void*)label$9164 } };
static struct $14__FB_DATADESC$ label$9160[2] = { { (int16)3, (void*)"REL" }, { (int16)-1, (void*)label$9162 } };
static struct $14__FB_DATADESC$ label$9158[2] = { { (int16)4, (void*)"ABSY" }, { (int16)-1, (void*)label$9160 } };
static struct $14__FB_DATADESC$ label$9156[2] = { { (int16)4, (void*)"ABSX" }, { (int16)-1, (void*)label$9158 } };
static struct $14__FB_DATADESC$ label$9154[2] = { { (int16)5, (void*)"ZEROY" }, { (int16)-1, (void*)label$9156 } };
static struct $14__FB_DATADESC$ label$9152[2] = { { (int16)5, (void*)"ZEROX" }, { (int16)-1, (void*)label$9154 } };
static struct $14__FB_DATADESC$ label$9150[2] = { { (int16)4, (void*)"ZERO" }, { (int16)-1, (void*)label$9152 } };
static struct $14__FB_DATADESC$ label$9148[2] = { { (int16)3, (void*)"ABS" }, { (int16)-1, (void*)label$9150 } };
static struct $14__FB_DATADESC$ label$9146[2] = { { (int16)3, (void*)"IMM" }, { (int16)-1, (void*)label$9148 } };
static struct $14__FB_DATADESC$ label$9144[2] = { { (int16)3, (void*)"IMP" }, { (int16)-1, (void*)label$9146 } };
static struct $14__FB_DATADESC$ label$8253[2] = { { (int16)3, (void*)"UNK" }, { (int16)-1, (void*)label$9144 } };
static struct $14__FB_DATADESC$ label$9142[7] = { { (int16)3, (void*)"255" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$8253 } };
static struct $14__FB_DATADESC$ label$9140[7] = { { (int16)3, (void*)"254" }, { (int16)3, (void*)"INC" }, { (int16)1, (void*)"7" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_INC }, { (int16)-1, (void*)label$9142 } };
static struct $14__FB_DATADESC$ label$9138[7] = { { (int16)3, (void*)"253" }, { (int16)3, (void*)"SBC" }, { (int16)1, (void*)"7" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_SBC }, { (int16)-1, (void*)label$9140 } };
static struct $14__FB_DATADESC$ label$9136[7] = { { (int16)3, (void*)"252" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9138 } };
static struct $14__FB_DATADESC$ label$9134[7] = { { (int16)3, (void*)"251" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9136 } };
static struct $14__FB_DATADESC$ label$9132[7] = { { (int16)3, (void*)"250" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9134 } };
static struct $14__FB_DATADESC$ label$9130[7] = { { (int16)3, (void*)"249" }, { (int16)3, (void*)"SBC" }, { (int16)1, (void*)"8" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_SBC }, { (int16)-1, (void*)label$9132 } };
static struct $14__FB_DATADESC$ label$9128[7] = { { (int16)3, (void*)"248" }, { (int16)3, (void*)"SED" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_SED }, { (int16)-1, (void*)label$9130 } };
static struct $14__FB_DATADESC$ label$9126[7] = { { (int16)3, (void*)"247" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9128 } };
static struct $14__FB_DATADESC$ label$9124[7] = { { (int16)3, (void*)"246" }, { (int16)3, (void*)"INC" }, { (int16)1, (void*)"5" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_INC }, { (int16)-1, (void*)label$9126 } };
static struct $14__FB_DATADESC$ label$9122[7] = { { (int16)3, (void*)"245" }, { (int16)3, (void*)"SBC" }, { (int16)1, (void*)"5" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_SBC }, { (int16)-1, (void*)label$9124 } };
static struct $14__FB_DATADESC$ label$9120[7] = { { (int16)3, (void*)"244" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9122 } };
static struct $14__FB_DATADESC$ label$9118[7] = { { (int16)3, (void*)"243" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9120 } };
static struct $14__FB_DATADESC$ label$9116[7] = { { (int16)3, (void*)"242" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9118 } };
static struct $14__FB_DATADESC$ label$9114[7] = { { (int16)3, (void*)"241" }, { (int16)3, (void*)"SBC" }, { (int16)2, (void*)"11" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_SBC }, { (int16)-1, (void*)label$9116 } };
static struct $14__FB_DATADESC$ label$9112[7] = { { (int16)3, (void*)"240" }, { (int16)3, (void*)"BEQ" }, { (int16)1, (void*)"9" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_BEQ }, { (int16)-1, (void*)label$9114 } };
static struct $14__FB_DATADESC$ label$9110[7] = { { (int16)3, (void*)"239" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9112 } };
static struct $14__FB_DATADESC$ label$9108[7] = { { (int16)3, (void*)"238" }, { (int16)3, (void*)"INC" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_INC }, { (int16)-1, (void*)label$9110 } };
static struct $14__FB_DATADESC$ label$9106[7] = { { (int16)3, (void*)"237" }, { (int16)3, (void*)"SBC" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_SBC }, { (int16)-1, (void*)label$9108 } };
static struct $14__FB_DATADESC$ label$9104[7] = { { (int16)3, (void*)"236" }, { (int16)3, (void*)"CPX" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_CPX }, { (int16)-1, (void*)label$9106 } };
static struct $14__FB_DATADESC$ label$9102[7] = { { (int16)3, (void*)"235" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9104 } };
static struct $14__FB_DATADESC$ label$9100[7] = { { (int16)3, (void*)"234" }, { (int16)3, (void*)"NOP" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_NOP }, { (int16)-1, (void*)label$9102 } };
static struct $14__FB_DATADESC$ label$9098[7] = { { (int16)3, (void*)"233" }, { (int16)3, (void*)"SBC" }, { (int16)1, (void*)"2" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_SBC }, { (int16)-1, (void*)label$9100 } };
static struct $14__FB_DATADESC$ label$9096[7] = { { (int16)3, (void*)"232" }, { (int16)3, (void*)"INX" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_INX }, { (int16)-1, (void*)label$9098 } };
static struct $14__FB_DATADESC$ label$9094[7] = { { (int16)3, (void*)"231" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9096 } };
static struct $14__FB_DATADESC$ label$9092[7] = { { (int16)3, (void*)"230" }, { (int16)3, (void*)"INC" }, { (int16)1, (void*)"4" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_INC }, { (int16)-1, (void*)label$9094 } };
static struct $14__FB_DATADESC$ label$9090[7] = { { (int16)3, (void*)"229" }, { (int16)3, (void*)"SBC" }, { (int16)1, (void*)"4" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_SBC }, { (int16)-1, (void*)label$9092 } };
static struct $14__FB_DATADESC$ label$9088[7] = { { (int16)3, (void*)"228" }, { (int16)3, (void*)"CPX" }, { (int16)1, (void*)"4" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_CPX }, { (int16)-1, (void*)label$9090 } };
static struct $14__FB_DATADESC$ label$9086[7] = { { (int16)3, (void*)"227" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9088 } };
static struct $14__FB_DATADESC$ label$9084[7] = { { (int16)3, (void*)"226" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9086 } };
static struct $14__FB_DATADESC$ label$9082[7] = { { (int16)3, (void*)"225" }, { (int16)3, (void*)"SBC" }, { (int16)2, (void*)"10" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_SBC }, { (int16)-1, (void*)label$9084 } };
static struct $14__FB_DATADESC$ label$9080[7] = { { (int16)3, (void*)"224" }, { (int16)3, (void*)"CPX" }, { (int16)1, (void*)"2" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_CPX }, { (int16)-1, (void*)label$9082 } };
static struct $14__FB_DATADESC$ label$9078[7] = { { (int16)3, (void*)"223" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9080 } };
static struct $14__FB_DATADESC$ label$9076[7] = { { (int16)3, (void*)"222" }, { (int16)3, (void*)"DEC" }, { (int16)1, (void*)"7" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_DEC }, { (int16)-1, (void*)label$9078 } };
static struct $14__FB_DATADESC$ label$9074[7] = { { (int16)3, (void*)"221" }, { (int16)3, (void*)"CMP" }, { (int16)1, (void*)"7" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_CMP }, { (int16)-1, (void*)label$9076 } };
static struct $14__FB_DATADESC$ label$9072[7] = { { (int16)3, (void*)"220" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9074 } };
static struct $14__FB_DATADESC$ label$9070[7] = { { (int16)3, (void*)"219" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9072 } };
static struct $14__FB_DATADESC$ label$9068[7] = { { (int16)3, (void*)"218" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9070 } };
static struct $14__FB_DATADESC$ label$9066[7] = { { (int16)3, (void*)"217" }, { (int16)3, (void*)"CMP" }, { (int16)1, (void*)"8" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_CMP }, { (int16)-1, (void*)label$9068 } };
static struct $14__FB_DATADESC$ label$9064[7] = { { (int16)3, (void*)"216" }, { (int16)3, (void*)"CLD" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_CLD }, { (int16)-1, (void*)label$9066 } };
static struct $14__FB_DATADESC$ label$9062[7] = { { (int16)3, (void*)"215" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9064 } };
static struct $14__FB_DATADESC$ label$9060[7] = { { (int16)3, (void*)"214" }, { (int16)3, (void*)"DEC" }, { (int16)1, (void*)"5" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_DEC }, { (int16)-1, (void*)label$9062 } };
static struct $14__FB_DATADESC$ label$9058[7] = { { (int16)3, (void*)"213" }, { (int16)3, (void*)"CMP" }, { (int16)1, (void*)"5" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_CMP }, { (int16)-1, (void*)label$9060 } };
static struct $14__FB_DATADESC$ label$9056[7] = { { (int16)3, (void*)"212" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9058 } };
static struct $14__FB_DATADESC$ label$9054[7] = { { (int16)3, (void*)"211" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9056 } };
static struct $14__FB_DATADESC$ label$9052[7] = { { (int16)3, (void*)"210" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9054 } };
static struct $14__FB_DATADESC$ label$9050[7] = { { (int16)3, (void*)"209" }, { (int16)3, (void*)"CMP" }, { (int16)2, (void*)"11" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_CMP }, { (int16)-1, (void*)label$9052 } };
static struct $14__FB_DATADESC$ label$9048[7] = { { (int16)3, (void*)"208" }, { (int16)3, (void*)"BNE" }, { (int16)1, (void*)"9" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_BNE }, { (int16)-1, (void*)label$9050 } };
static struct $14__FB_DATADESC$ label$9046[7] = { { (int16)3, (void*)"207" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9048 } };
static struct $14__FB_DATADESC$ label$9044[7] = { { (int16)3, (void*)"206" }, { (int16)3, (void*)"DEC" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_DEC }, { (int16)-1, (void*)label$9046 } };
static struct $14__FB_DATADESC$ label$9042[7] = { { (int16)3, (void*)"205" }, { (int16)3, (void*)"CMP" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_CMP }, { (int16)-1, (void*)label$9044 } };
static struct $14__FB_DATADESC$ label$9040[7] = { { (int16)3, (void*)"204" }, { (int16)3, (void*)"CPY" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_CPY }, { (int16)-1, (void*)label$9042 } };
static struct $14__FB_DATADESC$ label$9038[7] = { { (int16)3, (void*)"203" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9040 } };
static struct $14__FB_DATADESC$ label$9036[7] = { { (int16)3, (void*)"202" }, { (int16)3, (void*)"DEX" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_DEX }, { (int16)-1, (void*)label$9038 } };
static struct $14__FB_DATADESC$ label$9034[7] = { { (int16)3, (void*)"201" }, { (int16)3, (void*)"CMP" }, { (int16)1, (void*)"2" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_CMP }, { (int16)-1, (void*)label$9036 } };
static struct $14__FB_DATADESC$ label$9032[7] = { { (int16)3, (void*)"200" }, { (int16)3, (void*)"INY" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_INY }, { (int16)-1, (void*)label$9034 } };
static struct $14__FB_DATADESC$ label$9030[7] = { { (int16)3, (void*)"199" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9032 } };
static struct $14__FB_DATADESC$ label$9028[7] = { { (int16)3, (void*)"198" }, { (int16)3, (void*)"DEC" }, { (int16)1, (void*)"4" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_DEC }, { (int16)-1, (void*)label$9030 } };
static struct $14__FB_DATADESC$ label$9026[7] = { { (int16)3, (void*)"197" }, { (int16)3, (void*)"CMP" }, { (int16)1, (void*)"4" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_CMP }, { (int16)-1, (void*)label$9028 } };
static struct $14__FB_DATADESC$ label$9024[7] = { { (int16)3, (void*)"196" }, { (int16)3, (void*)"CPY" }, { (int16)1, (void*)"4" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_CPY }, { (int16)-1, (void*)label$9026 } };
static struct $14__FB_DATADESC$ label$9022[7] = { { (int16)3, (void*)"195" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9024 } };
static struct $14__FB_DATADESC$ label$9020[7] = { { (int16)3, (void*)"194" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9022 } };
static struct $14__FB_DATADESC$ label$9018[7] = { { (int16)3, (void*)"193" }, { (int16)3, (void*)"CMP" }, { (int16)2, (void*)"10" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_CMP }, { (int16)-1, (void*)label$9020 } };
static struct $14__FB_DATADESC$ label$9016[7] = { { (int16)3, (void*)"192" }, { (int16)3, (void*)"CPY" }, { (int16)1, (void*)"2" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_CPY }, { (int16)-1, (void*)label$9018 } };
static struct $14__FB_DATADESC$ label$9014[7] = { { (int16)3, (void*)"191" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9016 } };
static struct $14__FB_DATADESC$ label$9012[7] = { { (int16)3, (void*)"190" }, { (int16)3, (void*)"LDX" }, { (int16)1, (void*)"8" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LDX }, { (int16)-1, (void*)label$9014 } };
static struct $14__FB_DATADESC$ label$9010[7] = { { (int16)3, (void*)"189" }, { (int16)3, (void*)"LDA" }, { (int16)1, (void*)"7" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LDA }, { (int16)-1, (void*)label$9012 } };
static struct $14__FB_DATADESC$ label$9008[7] = { { (int16)3, (void*)"188" }, { (int16)3, (void*)"LDY" }, { (int16)1, (void*)"7" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LDY }, { (int16)-1, (void*)label$9010 } };
static struct $14__FB_DATADESC$ label$9006[7] = { { (int16)3, (void*)"187" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9008 } };
static struct $14__FB_DATADESC$ label$9004[7] = { { (int16)3, (void*)"186" }, { (int16)3, (void*)"TSX" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_TSX }, { (int16)-1, (void*)label$9006 } };
static struct $14__FB_DATADESC$ label$9002[7] = { { (int16)3, (void*)"185" }, { (int16)3, (void*)"LDA" }, { (int16)1, (void*)"8" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LDA }, { (int16)-1, (void*)label$9004 } };
static struct $14__FB_DATADESC$ label$9000[7] = { { (int16)3, (void*)"184" }, { (int16)3, (void*)"CLV" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_CLV }, { (int16)-1, (void*)label$9002 } };
static struct $14__FB_DATADESC$ label$8998[7] = { { (int16)3, (void*)"183" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$9000 } };
static struct $14__FB_DATADESC$ label$8996[7] = { { (int16)3, (void*)"182" }, { (int16)3, (void*)"LDX" }, { (int16)1, (void*)"6" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LDX }, { (int16)-1, (void*)label$8998 } };
static struct $14__FB_DATADESC$ label$8994[7] = { { (int16)3, (void*)"181" }, { (int16)3, (void*)"LDA" }, { (int16)1, (void*)"5" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LDA }, { (int16)-1, (void*)label$8996 } };
static struct $14__FB_DATADESC$ label$8992[7] = { { (int16)3, (void*)"180" }, { (int16)3, (void*)"LDY" }, { (int16)1, (void*)"5" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LDY }, { (int16)-1, (void*)label$8994 } };
static struct $14__FB_DATADESC$ label$8990[7] = { { (int16)3, (void*)"179" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$8992 } };
static struct $14__FB_DATADESC$ label$8988[7] = { { (int16)3, (void*)"178" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$8990 } };
static struct $14__FB_DATADESC$ label$8986[7] = { { (int16)3, (void*)"177" }, { (int16)3, (void*)"LDA" }, { (int16)2, (void*)"11" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LDA }, { (int16)-1, (void*)label$8988 } };
static struct $14__FB_DATADESC$ label$8984[7] = { { (int16)3, (void*)"176" }, { (int16)3, (void*)"BCS" }, { (int16)1, (void*)"9" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_BCS }, { (int16)-1, (void*)label$8986 } };
static struct $14__FB_DATADESC$ label$8982[7] = { { (int16)3, (void*)"175" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$8984 } };
static struct $14__FB_DATADESC$ label$8980[7] = { { (int16)3, (void*)"174" }, { (int16)3, (void*)"LDX" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LDX }, { (int16)-1, (void*)label$8982 } };
static struct $14__FB_DATADESC$ label$8978[7] = { { (int16)3, (void*)"173" }, { (int16)3, (void*)"LDA" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LDA }, { (int16)-1, (void*)label$8980 } };
static struct $14__FB_DATADESC$ label$8976[7] = { { (int16)3, (void*)"172" }, { (int16)3, (void*)"LDY" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LDY }, { (int16)-1, (void*)label$8978 } };
static struct $14__FB_DATADESC$ label$8974[7] = { { (int16)3, (void*)"171" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$8976 } };
static struct $14__FB_DATADESC$ label$8972[7] = { { (int16)3, (void*)"170" }, { (int16)3, (void*)"TAX" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_TAX }, { (int16)-1, (void*)label$8974 } };
static struct $14__FB_DATADESC$ label$8970[7] = { { (int16)3, (void*)"169" }, { (int16)3, (void*)"LDA" }, { (int16)1, (void*)"2" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LDA }, { (int16)-1, (void*)label$8972 } };
static struct $14__FB_DATADESC$ label$8968[7] = { { (int16)3, (void*)"168" }, { (int16)3, (void*)"TAY" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_TAY }, { (int16)-1, (void*)label$8970 } };
static struct $14__FB_DATADESC$ label$8966[7] = { { (int16)3, (void*)"167" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$8968 } };
static struct $14__FB_DATADESC$ label$8964[7] = { { (int16)3, (void*)"166" }, { (int16)3, (void*)"LDX" }, { (int16)1, (void*)"4" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LDX }, { (int16)-1, (void*)label$8966 } };
static struct $14__FB_DATADESC$ label$8962[7] = { { (int16)3, (void*)"165" }, { (int16)3, (void*)"LDA" }, { (int16)1, (void*)"4" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LDA }, { (int16)-1, (void*)label$8964 } };
static struct $14__FB_DATADESC$ label$8960[7] = { { (int16)3, (void*)"164" }, { (int16)3, (void*)"LDY" }, { (int16)1, (void*)"4" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LDY }, { (int16)-1, (void*)label$8962 } };
static struct $14__FB_DATADESC$ label$8958[7] = { { (int16)3, (void*)"163" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$8960 } };
static struct $14__FB_DATADESC$ label$8956[7] = { { (int16)3, (void*)"162" }, { (int16)3, (void*)"LDX" }, { (int16)1, (void*)"2" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LDX }, { (int16)-1, (void*)label$8958 } };
static struct $14__FB_DATADESC$ label$8954[7] = { { (int16)3, (void*)"161" }, { (int16)3, (void*)"LDA" }, { (int16)2, (void*)"10" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LDA }, { (int16)-1, (void*)label$8956 } };
static struct $14__FB_DATADESC$ label$8952[7] = { { (int16)3, (void*)"160" }, { (int16)3, (void*)"LDY" }, { (int16)1, (void*)"2" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LDY }, { (int16)-1, (void*)label$8954 } };
static struct $14__FB_DATADESC$ label$8950[7] = { { (int16)3, (void*)"159" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$8952 } };
static struct $14__FB_DATADESC$ label$8948[7] = { { (int16)3, (void*)"158" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$8950 } };
static struct $14__FB_DATADESC$ label$8946[7] = { { (int16)3, (void*)"157" }, { (int16)3, (void*)"STA" }, { (int16)1, (void*)"7" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_STA }, { (int16)-1, (void*)label$8948 } };
static struct $14__FB_DATADESC$ label$8944[7] = { { (int16)3, (void*)"156" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$8946 } };
static struct $14__FB_DATADESC$ label$8942[7] = { { (int16)3, (void*)"155" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$8944 } };
static struct $14__FB_DATADESC$ label$8940[7] = { { (int16)3, (void*)"154" }, { (int16)3, (void*)"TXS" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_TXS }, { (int16)-1, (void*)label$8942 } };
static struct $14__FB_DATADESC$ label$8938[7] = { { (int16)3, (void*)"153" }, { (int16)3, (void*)"STA" }, { (int16)1, (void*)"8" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_STA }, { (int16)-1, (void*)label$8940 } };
static struct $14__FB_DATADESC$ label$8936[7] = { { (int16)3, (void*)"152" }, { (int16)3, (void*)"TYA" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_TYA }, { (int16)-1, (void*)label$8938 } };
static struct $14__FB_DATADESC$ label$8934[7] = { { (int16)3, (void*)"151" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$8936 } };
static struct $14__FB_DATADESC$ label$8932[7] = { { (int16)3, (void*)"150" }, { (int16)3, (void*)"STX" }, { (int16)1, (void*)"6" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_STX }, { (int16)-1, (void*)label$8934 } };
static struct $14__FB_DATADESC$ label$8930[7] = { { (int16)3, (void*)"149" }, { (int16)3, (void*)"STA" }, { (int16)1, (void*)"5" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_STA }, { (int16)-1, (void*)label$8932 } };
static struct $14__FB_DATADESC$ label$8928[7] = { { (int16)3, (void*)"148" }, { (int16)3, (void*)"STY" }, { (int16)1, (void*)"5" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_STY }, { (int16)-1, (void*)label$8930 } };
static struct $14__FB_DATADESC$ label$8926[7] = { { (int16)3, (void*)"147" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$8928 } };
static struct $14__FB_DATADESC$ label$8924[7] = { { (int16)3, (void*)"146" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$8926 } };
static struct $14__FB_DATADESC$ label$8922[7] = { { (int16)3, (void*)"145" }, { (int16)3, (void*)"STA" }, { (int16)2, (void*)"11" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_STA }, { (int16)-1, (void*)label$8924 } };
static struct $14__FB_DATADESC$ label$8920[7] = { { (int16)3, (void*)"144" }, { (int16)3, (void*)"BCC" }, { (int16)1, (void*)"9" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_BCC }, { (int16)-1, (void*)label$8922 } };
static struct $14__FB_DATADESC$ label$8918[7] = { { (int16)3, (void*)"143" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$8920 } };
static struct $14__FB_DATADESC$ label$8916[7] = { { (int16)3, (void*)"142" }, { (int16)3, (void*)"STX" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_STX }, { (int16)-1, (void*)label$8918 } };
static struct $14__FB_DATADESC$ label$8914[7] = { { (int16)3, (void*)"141" }, { (int16)3, (void*)"STA" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_STA }, { (int16)-1, (void*)label$8916 } };
static struct $14__FB_DATADESC$ label$8912[7] = { { (int16)3, (void*)"140" }, { (int16)3, (void*)"STY" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_STY }, { (int16)-1, (void*)label$8914 } };
static struct $14__FB_DATADESC$ label$8910[7] = { { (int16)3, (void*)"139" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$8912 } };
static struct $14__FB_DATADESC$ label$8908[7] = { { (int16)3, (void*)"138" }, { (int16)3, (void*)"TXA" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_TXA }, { (int16)-1, (void*)label$8910 } };
static struct $14__FB_DATADESC$ label$8906[7] = { { (int16)3, (void*)"137" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$8908 } };
static struct $14__FB_DATADESC$ label$8904[7] = { { (int16)3, (void*)"136" }, { (int16)3, (void*)"DEY" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_DEY }, { (int16)-1, (void*)label$8906 } };
static struct $14__FB_DATADESC$ label$8902[7] = { { (int16)3, (void*)"135" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$8904 } };
static struct $14__FB_DATADESC$ label$8900[7] = { { (int16)3, (void*)"134" }, { (int16)3, (void*)"STX" }, { (int16)1, (void*)"4" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_STX }, { (int16)-1, (void*)label$8902 } };
static struct $14__FB_DATADESC$ label$8898[7] = { { (int16)3, (void*)"133" }, { (int16)3, (void*)"STA" }, { (int16)1, (void*)"4" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_STA }, { (int16)-1, (void*)label$8900 } };
static struct $14__FB_DATADESC$ label$8896[7] = { { (int16)3, (void*)"132" }, { (int16)3, (void*)"STY" }, { (int16)1, (void*)"4" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_STY }, { (int16)-1, (void*)label$8898 } };
static struct $14__FB_DATADESC$ label$8894[7] = { { (int16)3, (void*)"131" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$8896 } };
static struct $14__FB_DATADESC$ label$8892[7] = { { (int16)3, (void*)"130" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$8894 } };
static struct $14__FB_DATADESC$ label$8890[7] = { { (int16)3, (void*)"129" }, { (int16)3, (void*)"STA" }, { (int16)2, (void*)"10" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_STA }, { (int16)-1, (void*)label$8892 } };
static struct $14__FB_DATADESC$ label$8888[7] = { { (int16)3, (void*)"128" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$8890 } };
static struct $14__FB_DATADESC$ label$8886[7] = { { (int16)3, (void*)"127" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$8888 } };
static struct $14__FB_DATADESC$ label$8884[7] = { { (int16)3, (void*)"126" }, { (int16)3, (void*)"ROR" }, { (int16)1, (void*)"7" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ROR }, { (int16)-1, (void*)label$8886 } };
static struct $14__FB_DATADESC$ label$8882[7] = { { (int16)3, (void*)"125" }, { (int16)3, (void*)"ADC" }, { (int16)1, (void*)"7" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ADC }, { (int16)-1, (void*)label$8884 } };
static struct $14__FB_DATADESC$ label$8880[7] = { { (int16)3, (void*)"124" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$8882 } };
static struct $14__FB_DATADESC$ label$8878[7] = { { (int16)3, (void*)"123" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$8880 } };
static struct $14__FB_DATADESC$ label$8876[7] = { { (int16)3, (void*)"122" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$8878 } };
static struct $14__FB_DATADESC$ label$8874[7] = { { (int16)3, (void*)"121" }, { (int16)3, (void*)"ADC" }, { (int16)1, (void*)"8" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ADC }, { (int16)-1, (void*)label$8876 } };
static struct $14__FB_DATADESC$ label$8872[7] = { { (int16)3, (void*)"120" }, { (int16)3, (void*)"SEI" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_SEI }, { (int16)-1, (void*)label$8874 } };
static struct $14__FB_DATADESC$ label$8870[7] = { { (int16)3, (void*)"119" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$8872 } };
static struct $14__FB_DATADESC$ label$8868[7] = { { (int16)3, (void*)"118" }, { (int16)3, (void*)"ROR" }, { (int16)1, (void*)"5" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ROR }, { (int16)-1, (void*)label$8870 } };
static struct $14__FB_DATADESC$ label$8866[7] = { { (int16)3, (void*)"117" }, { (int16)3, (void*)"ADC" }, { (int16)1, (void*)"5" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ADC }, { (int16)-1, (void*)label$8868 } };
static struct $14__FB_DATADESC$ label$8864[7] = { { (int16)3, (void*)"116" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$8866 } };
static struct $14__FB_DATADESC$ label$8862[7] = { { (int16)3, (void*)"115" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$8864 } };
static struct $14__FB_DATADESC$ label$8860[7] = { { (int16)3, (void*)"114" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$8862 } };
static struct $14__FB_DATADESC$ label$8858[7] = { { (int16)3, (void*)"113" }, { (int16)3, (void*)"ADC" }, { (int16)2, (void*)"11" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ADC }, { (int16)-1, (void*)label$8860 } };
static struct $14__FB_DATADESC$ label$8856[7] = { { (int16)3, (void*)"112" }, { (int16)3, (void*)"BVS" }, { (int16)1, (void*)"9" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_BVS }, { (int16)-1, (void*)label$8858 } };
static struct $14__FB_DATADESC$ label$8854[7] = { { (int16)3, (void*)"111" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$8856 } };
static struct $14__FB_DATADESC$ label$8852[7] = { { (int16)3, (void*)"110" }, { (int16)3, (void*)"ROR" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ROR }, { (int16)-1, (void*)label$8854 } };
static struct $14__FB_DATADESC$ label$8850[7] = { { (int16)3, (void*)"109" }, { (int16)3, (void*)"ADC" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ADC }, { (int16)-1, (void*)label$8852 } };
static struct $14__FB_DATADESC$ label$8848[7] = { { (int16)3, (void*)"108" }, { (int16)3, (void*)"JMP" }, { (int16)2, (void*)"12" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_JMP }, { (int16)-1, (void*)label$8850 } };
static struct $14__FB_DATADESC$ label$8846[7] = { { (int16)3, (void*)"107" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$8848 } };
static struct $14__FB_DATADESC$ label$8844[7] = { { (int16)3, (void*)"106" }, { (int16)3, (void*)"ROR" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_RORA }, { (int16)-1, (void*)label$8846 } };
static struct $14__FB_DATADESC$ label$8842[7] = { { (int16)3, (void*)"105" }, { (int16)3, (void*)"ADC" }, { (int16)1, (void*)"2" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ADC }, { (int16)-1, (void*)label$8844 } };
static struct $14__FB_DATADESC$ label$8840[7] = { { (int16)3, (void*)"104" }, { (int16)3, (void*)"PLA" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_PLA }, { (int16)-1, (void*)label$8842 } };
static struct $14__FB_DATADESC$ label$8838[7] = { { (int16)3, (void*)"103" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$8840 } };
static struct $14__FB_DATADESC$ label$8836[7] = { { (int16)3, (void*)"102" }, { (int16)3, (void*)"ROR" }, { (int16)1, (void*)"4" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ROR }, { (int16)-1, (void*)label$8838 } };
static struct $14__FB_DATADESC$ label$8834[7] = { { (int16)3, (void*)"101" }, { (int16)3, (void*)"ADC" }, { (int16)1, (void*)"4" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ADC }, { (int16)-1, (void*)label$8836 } };
static struct $14__FB_DATADESC$ label$8832[7] = { { (int16)3, (void*)"100" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$8834 } };
static struct $14__FB_DATADESC$ label$8830[7] = { { (int16)2, (void*)"99" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$8832 } };
static struct $14__FB_DATADESC$ label$8828[7] = { { (int16)2, (void*)"98" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$8830 } };
static struct $14__FB_DATADESC$ label$8826[7] = { { (int16)2, (void*)"97" }, { (int16)3, (void*)"ADC" }, { (int16)2, (void*)"10" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ADC }, { (int16)-1, (void*)label$8828 } };
static struct $14__FB_DATADESC$ label$8824[7] = { { (int16)2, (void*)"96" }, { (int16)3, (void*)"RTS" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_RTS }, { (int16)-1, (void*)label$8826 } };
static struct $14__FB_DATADESC$ label$8822[7] = { { (int16)2, (void*)"95" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$8824 } };
static struct $14__FB_DATADESC$ label$8820[7] = { { (int16)2, (void*)"94" }, { (int16)3, (void*)"LSR" }, { (int16)1, (void*)"7" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LSR }, { (int16)-1, (void*)label$8822 } };
static struct $14__FB_DATADESC$ label$8818[7] = { { (int16)2, (void*)"93" }, { (int16)3, (void*)"EOR" }, { (int16)1, (void*)"7" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_EOR }, { (int16)-1, (void*)label$8820 } };
static struct $14__FB_DATADESC$ label$8816[7] = { { (int16)2, (void*)"92" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$8818 } };
static struct $14__FB_DATADESC$ label$8814[7] = { { (int16)2, (void*)"91" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$8816 } };
static struct $14__FB_DATADESC$ label$8812[7] = { { (int16)2, (void*)"90" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$8814 } };
static struct $14__FB_DATADESC$ label$8810[7] = { { (int16)2, (void*)"89" }, { (int16)3, (void*)"EOR" }, { (int16)1, (void*)"8" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_EOR }, { (int16)-1, (void*)label$8812 } };
static struct $14__FB_DATADESC$ label$8808[7] = { { (int16)2, (void*)"88" }, { (int16)3, (void*)"CLI" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_CLI }, { (int16)-1, (void*)label$8810 } };
static struct $14__FB_DATADESC$ label$8806[7] = { { (int16)2, (void*)"87" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$8808 } };
static struct $14__FB_DATADESC$ label$8804[7] = { { (int16)2, (void*)"86" }, { (int16)3, (void*)"LSR" }, { (int16)1, (void*)"5" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LSR }, { (int16)-1, (void*)label$8806 } };
static struct $14__FB_DATADESC$ label$8802[7] = { { (int16)2, (void*)"85" }, { (int16)3, (void*)"EOR" }, { (int16)1, (void*)"5" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_EOR }, { (int16)-1, (void*)label$8804 } };
static struct $14__FB_DATADESC$ label$8800[7] = { { (int16)2, (void*)"84" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$8802 } };
static struct $14__FB_DATADESC$ label$8798[7] = { { (int16)2, (void*)"83" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$8800 } };
static struct $14__FB_DATADESC$ label$8796[7] = { { (int16)2, (void*)"82" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$8798 } };
static struct $14__FB_DATADESC$ label$8794[7] = { { (int16)2, (void*)"81" }, { (int16)3, (void*)"EOR" }, { (int16)2, (void*)"11" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_EOR }, { (int16)-1, (void*)label$8796 } };
static struct $14__FB_DATADESC$ label$8792[7] = { { (int16)2, (void*)"80" }, { (int16)3, (void*)"BVC" }, { (int16)1, (void*)"9" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_BVC }, { (int16)-1, (void*)label$8794 } };
static struct $14__FB_DATADESC$ label$8790[7] = { { (int16)2, (void*)"79" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$8792 } };
static struct $14__FB_DATADESC$ label$8788[7] = { { (int16)2, (void*)"78" }, { (int16)3, (void*)"LSR" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LSR }, { (int16)-1, (void*)label$8790 } };
static struct $14__FB_DATADESC$ label$8786[7] = { { (int16)2, (void*)"77" }, { (int16)3, (void*)"EOR" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_EOR }, { (int16)-1, (void*)label$8788 } };
static struct $14__FB_DATADESC$ label$8784[7] = { { (int16)2, (void*)"76" }, { (int16)3, (void*)"JMP" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_JMP }, { (int16)-1, (void*)label$8786 } };
static struct $14__FB_DATADESC$ label$8782[7] = { { (int16)2, (void*)"75" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$8784 } };
static struct $14__FB_DATADESC$ label$8780[7] = { { (int16)2, (void*)"74" }, { (int16)3, (void*)"LSR" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LSRA }, { (int16)-1, (void*)label$8782 } };
static struct $14__FB_DATADESC$ label$8778[7] = { { (int16)2, (void*)"73" }, { (int16)3, (void*)"EOR" }, { (int16)1, (void*)"2" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_EOR }, { (int16)-1, (void*)label$8780 } };
static struct $14__FB_DATADESC$ label$8776[7] = { { (int16)2, (void*)"72" }, { (int16)3, (void*)"PHA" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_PHA }, { (int16)-1, (void*)label$8778 } };
static struct $14__FB_DATADESC$ label$8774[7] = { { (int16)2, (void*)"71" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$8776 } };
static struct $14__FB_DATADESC$ label$8772[7] = { { (int16)2, (void*)"70" }, { (int16)3, (void*)"LSR" }, { (int16)1, (void*)"4" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_LSR }, { (int16)-1, (void*)label$8774 } };
static struct $14__FB_DATADESC$ label$8770[7] = { { (int16)2, (void*)"69" }, { (int16)3, (void*)"EOR" }, { (int16)1, (void*)"4" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_EOR }, { (int16)-1, (void*)label$8772 } };
static struct $14__FB_DATADESC$ label$8768[7] = { { (int16)2, (void*)"68" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$8770 } };
static struct $14__FB_DATADESC$ label$8766[7] = { { (int16)2, (void*)"67" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$8768 } };
static struct $14__FB_DATADESC$ label$8764[7] = { { (int16)2, (void*)"66" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$8766 } };
static struct $14__FB_DATADESC$ label$8762[7] = { { (int16)2, (void*)"65" }, { (int16)3, (void*)"EOR" }, { (int16)2, (void*)"10" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_EOR }, { (int16)-1, (void*)label$8764 } };
static struct $14__FB_DATADESC$ label$8760[7] = { { (int16)2, (void*)"64" }, { (int16)3, (void*)"RTI" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_RTI }, { (int16)-1, (void*)label$8762 } };
static struct $14__FB_DATADESC$ label$8758[7] = { { (int16)2, (void*)"63" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$8760 } };
static struct $14__FB_DATADESC$ label$8756[7] = { { (int16)2, (void*)"62" }, { (int16)3, (void*)"ROL" }, { (int16)1, (void*)"7" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ROL }, { (int16)-1, (void*)label$8758 } };
static struct $14__FB_DATADESC$ label$8754[7] = { { (int16)2, (void*)"61" }, { (int16)3, (void*)"AND" }, { (int16)1, (void*)"7" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_AND }, { (int16)-1, (void*)label$8756 } };
static struct $14__FB_DATADESC$ label$8752[7] = { { (int16)2, (void*)"60" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$8754 } };
static struct $14__FB_DATADESC$ label$8750[7] = { { (int16)2, (void*)"59" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$8752 } };
static struct $14__FB_DATADESC$ label$8748[7] = { { (int16)2, (void*)"58" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$8750 } };
static struct $14__FB_DATADESC$ label$8746[7] = { { (int16)2, (void*)"57" }, { (int16)3, (void*)"AND" }, { (int16)1, (void*)"8" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_AND }, { (int16)-1, (void*)label$8748 } };
static struct $14__FB_DATADESC$ label$8744[7] = { { (int16)2, (void*)"56" }, { (int16)3, (void*)"SEC" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_SEC }, { (int16)-1, (void*)label$8746 } };
static struct $14__FB_DATADESC$ label$8742[7] = { { (int16)2, (void*)"55" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$8744 } };
static struct $14__FB_DATADESC$ label$8740[7] = { { (int16)2, (void*)"54" }, { (int16)3, (void*)"ROL" }, { (int16)1, (void*)"5" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ROL }, { (int16)-1, (void*)label$8742 } };
static struct $14__FB_DATADESC$ label$8738[7] = { { (int16)2, (void*)"53" }, { (int16)3, (void*)"AND" }, { (int16)1, (void*)"5" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_AND }, { (int16)-1, (void*)label$8740 } };
static struct $14__FB_DATADESC$ label$8736[7] = { { (int16)2, (void*)"52" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$8738 } };
static struct $14__FB_DATADESC$ label$8734[7] = { { (int16)2, (void*)"51" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$8736 } };
static struct $14__FB_DATADESC$ label$8732[7] = { { (int16)2, (void*)"50" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$8734 } };
static struct $14__FB_DATADESC$ label$8730[7] = { { (int16)2, (void*)"49" }, { (int16)3, (void*)"AND" }, { (int16)2, (void*)"11" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_AND }, { (int16)-1, (void*)label$8732 } };
static struct $14__FB_DATADESC$ label$8728[7] = { { (int16)2, (void*)"48" }, { (int16)3, (void*)"BMI" }, { (int16)1, (void*)"9" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_BMI }, { (int16)-1, (void*)label$8730 } };
static struct $14__FB_DATADESC$ label$8726[7] = { { (int16)2, (void*)"47" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$8728 } };
static struct $14__FB_DATADESC$ label$8724[7] = { { (int16)2, (void*)"46" }, { (int16)3, (void*)"ROL" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ROL }, { (int16)-1, (void*)label$8726 } };
static struct $14__FB_DATADESC$ label$8722[7] = { { (int16)2, (void*)"45" }, { (int16)3, (void*)"AND" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_AND }, { (int16)-1, (void*)label$8724 } };
static struct $14__FB_DATADESC$ label$8720[7] = { { (int16)2, (void*)"44" }, { (int16)3, (void*)"BIT" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_BIT }, { (int16)-1, (void*)label$8722 } };
static struct $14__FB_DATADESC$ label$8718[7] = { { (int16)2, (void*)"43" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$8720 } };
static struct $14__FB_DATADESC$ label$8716[7] = { { (int16)2, (void*)"42" }, { (int16)3, (void*)"ROL" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ROLA }, { (int16)-1, (void*)label$8718 } };
static struct $14__FB_DATADESC$ label$8714[7] = { { (int16)2, (void*)"41" }, { (int16)3, (void*)"AND" }, { (int16)1, (void*)"2" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_AND }, { (int16)-1, (void*)label$8716 } };
static struct $14__FB_DATADESC$ label$8712[7] = { { (int16)2, (void*)"40" }, { (int16)3, (void*)"PLP" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_PLP }, { (int16)-1, (void*)label$8714 } };
static struct $14__FB_DATADESC$ label$8710[7] = { { (int16)2, (void*)"39" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$8712 } };
static struct $14__FB_DATADESC$ label$8708[7] = { { (int16)2, (void*)"38" }, { (int16)3, (void*)"ROL" }, { (int16)1, (void*)"4" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ROL }, { (int16)-1, (void*)label$8710 } };
static struct $14__FB_DATADESC$ label$8706[7] = { { (int16)2, (void*)"37" }, { (int16)3, (void*)"AND" }, { (int16)1, (void*)"4" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_AND }, { (int16)-1, (void*)label$8708 } };
static struct $14__FB_DATADESC$ label$8704[7] = { { (int16)2, (void*)"36" }, { (int16)3, (void*)"BIT" }, { (int16)1, (void*)"4" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_BIT }, { (int16)-1, (void*)label$8706 } };
static struct $14__FB_DATADESC$ label$8702[7] = { { (int16)2, (void*)"35" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$8704 } };
static struct $14__FB_DATADESC$ label$8700[7] = { { (int16)2, (void*)"34" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$8702 } };
static struct $14__FB_DATADESC$ label$8698[7] = { { (int16)2, (void*)"33" }, { (int16)3, (void*)"AND" }, { (int16)2, (void*)"10" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_AND }, { (int16)-1, (void*)label$8700 } };
static struct $14__FB_DATADESC$ label$8696[7] = { { (int16)2, (void*)"32" }, { (int16)3, (void*)"JSR" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_JSR }, { (int16)-1, (void*)label$8698 } };
static struct $14__FB_DATADESC$ label$8694[7] = { { (int16)2, (void*)"31" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$8696 } };
static struct $14__FB_DATADESC$ label$8692[7] = { { (int16)2, (void*)"30" }, { (int16)3, (void*)"ASL" }, { (int16)1, (void*)"7" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ASL }, { (int16)-1, (void*)label$8694 } };
static struct $14__FB_DATADESC$ label$8690[7] = { { (int16)2, (void*)"29" }, { (int16)3, (void*)"ORA" }, { (int16)1, (void*)"7" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ORA }, { (int16)-1, (void*)label$8692 } };
static struct $14__FB_DATADESC$ label$8688[7] = { { (int16)2, (void*)"28" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$8690 } };
static struct $14__FB_DATADESC$ label$8686[7] = { { (int16)2, (void*)"27" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$8688 } };
static struct $14__FB_DATADESC$ label$8684[7] = { { (int16)2, (void*)"26" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$8686 } };
static struct $14__FB_DATADESC$ label$8682[7] = { { (int16)2, (void*)"25" }, { (int16)3, (void*)"ORA" }, { (int16)1, (void*)"8" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ORA }, { (int16)-1, (void*)label$8684 } };
static struct $14__FB_DATADESC$ label$8680[7] = { { (int16)2, (void*)"24" }, { (int16)3, (void*)"CLC" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_CLC }, { (int16)-1, (void*)label$8682 } };
static struct $14__FB_DATADESC$ label$8678[7] = { { (int16)2, (void*)"23" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$8680 } };
static struct $14__FB_DATADESC$ label$8676[7] = { { (int16)2, (void*)"22" }, { (int16)3, (void*)"ASL" }, { (int16)1, (void*)"5" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ASL }, { (int16)-1, (void*)label$8678 } };
static struct $14__FB_DATADESC$ label$8674[7] = { { (int16)2, (void*)"21" }, { (int16)3, (void*)"ORA" }, { (int16)1, (void*)"5" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ORA }, { (int16)-1, (void*)label$8676 } };
static struct $14__FB_DATADESC$ label$8672[7] = { { (int16)2, (void*)"20" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$8674 } };
static struct $14__FB_DATADESC$ label$8670[7] = { { (int16)2, (void*)"19" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$8672 } };
static struct $14__FB_DATADESC$ label$8668[7] = { { (int16)2, (void*)"18" }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$8670 } };
static struct $14__FB_DATADESC$ label$8666[7] = { { (int16)2, (void*)"17" }, { (int16)3, (void*)"ORA" }, { (int16)2, (void*)"11" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ORA }, { (int16)-1, (void*)label$8668 } };
static struct $14__FB_DATADESC$ label$8664[7] = { { (int16)2, (void*)"16" }, { (int16)3, (void*)"BPL" }, { (int16)1, (void*)"9" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_BPL }, { (int16)-1, (void*)label$8666 } };
static struct $14__FB_DATADESC$ label$8662[7] = { { (int16)-2, (void*)((uint8*)NIBBLES$ + 15ll) }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$8664 } };
static struct $14__FB_DATADESC$ label$8660[7] = { { (int16)-2, (void*)((uint8*)NIBBLES$ + 14ll) }, { (int16)3, (void*)"ASL" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ASL }, { (int16)-1, (void*)label$8662 } };
static struct $14__FB_DATADESC$ label$8658[7] = { { (int16)-2, (void*)((uint8*)NIBBLES$ + 13ll) }, { (int16)3, (void*)"ORA" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)((uint8*)NIBBLES$ + 4ll) }, { (int16)-2, (void*)((uint8*)NIBBLES$ + 3ll) }, { (int16)-2, (void*)&INS_ORA }, { (int16)-1, (void*)label$8660 } };
static struct $14__FB_DATADESC$ label$8656[7] = { { (int16)-2, (void*)((uint8*)NIBBLES$ + 12ll) }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$8658 } };
static struct $14__FB_DATADESC$ label$8654[7] = { { (int16)-2, (void*)((uint8*)NIBBLES$ + 11ll) }, { (int16)3, (void*)"***" }, { (int16)1, (void*)"0" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_UNK }, { (int16)-1, (void*)label$8656 } };
static struct $14__FB_DATADESC$ label$8652[7] = { { (int16)-2, (void*)((uint8*)NIBBLES$ + 10ll) }, { (int16)3, (void*)"ASL" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)((uint8*)NIBBLES$ + 2ll) }, { (int16)-2, (void*)((uint8*)NIBBLES$ + 1ll) }, { (int16)-2, (void*)&INS_ASLA }, { (int16)-1, (void*)label$8654 } };
static struct $14__FB_DATADESC$ label$8650[7] = { { (int16)-2, (void*)((uint8*)NIBBLES$ + 9ll) }, { (int16)3, (void*)"ORA" }, { (int16)1, (void*)"2" }, { (int16)-2, (void*)((uint8*)NIBBLES$ + 2ll) }, { (int16)-2, (void*)((uint8*)NIBBLES$ + 2ll) }, { (int16)-2, (void*)&INS_ORA }, { (int16)-1, (void*)label$8652 } };
static struct $14__FB_DATADESC$ label$8648[7] = { { (int16)-2, (void*)((uint8*)NIBBLES$ + 8ll) }, { (int16)3, (void*)"PHP" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)((uint8*)NIBBLES$ + 3ll) }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_PHP }, { (int16)-1, (void*)label$8650 } };
static struct $14__FB_DATADESC$ label$8646[7] = { { (int16)-2, (void*)((uint8*)NIBBLES$ + 7ll) }, { (int16)3, (void*)"W64" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_W64 }, { (int16)-1, (void*)label$8648 } };
static struct $14__FB_DATADESC$ label$8644[7] = { { (int16)-2, (void*)((uint8*)NIBBLES$ + 6ll) }, { (int16)3, (void*)"ASL" }, { (int16)1, (void*)"4" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ASL }, { (int16)-1, (void*)label$8646 } };
static struct $14__FB_DATADESC$ label$8642[7] = { { (int16)-2, (void*)((uint8*)NIBBLES$ + 5ll) }, { (int16)3, (void*)"ORA" }, { (int16)1, (void*)"4" }, { (int16)-2, (void*)((uint8*)NIBBLES$ + 3ll) }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_ORA }, { (int16)-1, (void*)label$8644 } };
static struct $14__FB_DATADESC$ label$8640[7] = { { (int16)-2, (void*)((uint8*)NIBBLES$ + 4ll) }, { (int16)3, (void*)"R64" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_R64 }, { (int16)-1, (void*)label$8642 } };
static struct $14__FB_DATADESC$ label$8638[7] = { { (int16)-2, (void*)((uint8*)NIBBLES$ + 3ll) }, { (int16)3, (void*)"W32" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_W32 }, { (int16)-1, (void*)label$8640 } };
static struct $14__FB_DATADESC$ label$8636[7] = { { (int16)-2, (void*)((uint8*)NIBBLES$ + 2ll) }, { (int16)3, (void*)"R32" }, { (int16)1, (void*)"3" }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_R32 }, { (int16)-1, (void*)label$8638 } };
static struct $14__FB_DATADESC$ label$8634[7] = { { (int16)-2, (void*)((uint8*)NIBBLES$ + 1ll) }, { (int16)3, (void*)"ORA" }, { (int16)2, (void*)"10" }, { (int16)-2, (void*)((uint8*)NIBBLES$ + 14ll) }, { (int16)-2, (void*)((uint8*)NIBBLES$ + 2ll) }, { (int16)-2, (void*)&INS_ORA }, { (int16)-1, (void*)label$8636 } };
static struct $14__FB_DATADESC$ label$8247[7] = { { (int16)-2, (void*)NIBBLES$ }, { (int16)3, (void*)"BRK" }, { (int16)1, (void*)"1" }, { (int16)-2, (void*)((uint8*)NIBBLES$ + 15ll) }, { (int16)-2, (void*)NIBBLES$ }, { (int16)-2, (void*)&INS_BRK }, { (int16)-1, (void*)label$8634 } };
double SWCH$;
double OFFSET$;
void* IMAGE$;
FBSTRING STRCODE$;
FBSTRING FILENAME$;
double SYS_OFFSET$ __attribute__((common));
double STR_LEN$ __attribute__((common));
double CNT$ __attribute__((common));
void* BGIMAGE$ __attribute__((common));
void* FGIMAGE$ __attribute__((common));
void* RASTER$ __attribute__((common));
void* RENDER$ __attribute__((common));
void* PSCRN$ __attribute__((common));
FBSTRING COMPILER$ __attribute__((common));
uint64 SCR_W$ __attribute__((common));
uint64 SCR_H$ __attribute__((common));
uint64 SCR_POS$ __attribute__((common));
uint64 IMGDATA$ __attribute__((common));
uint64 PITCH$ __attribute__((common));
FBSTRING MSG$ __attribute__((common));
struct $7FBARRAYIdE POWER2$ __attribute__((common));
double SIZESCREEN$ __attribute__((common));
FBSTRING _SCREENRES$ __attribute__((common));
FBSTRING _NAME$ __attribute__((common));
double SCRWIDTH$ __attribute__((common));
double SCRHEIGHT$ __attribute__((common));
double RED$ __attribute__((common));
double GREEN$ __attribute__((common));
double BLUE$ __attribute__((common));
double XSCRCENTER$ __attribute__((common));
double YSCRCENTER$ __attribute__((common));

void ERROREXIT( FBSTRING* MSG$1 )
{
 label$2:;
 void* vr$0 = fb_GfxScreenPtr( );
 if( vr$0 == (void*)0ull ) goto label$5;
 {
  fb_GfxScreen( 0, 8, 0, 0, 0 );
  label$5:;
 }
 int64 W$1;
 __builtin_memset( &W$1, 0, 8ll );
 int64 H$1;
 __builtin_memset( &H$1, 0, 8ll );
 fb_PrintString( 0, (FBSTRING*)MSG$1, 1 );
 fb_PrintVoid( 0, 1 );
 FBSTRING* vr$3 = fb_StrAllocTempDescZEx( (uint8*)"press any key ...", 17ll );
 fb_PrintString( 0, (FBSTRING*)vr$3, 1 );
 fb_Beep( );
 fb_Sleep( -1 );
 fb_End( 1 );
 label$3:;
}

void GLSCREEN( int64 PIXELWIDTH$1, int64 PIXELHEIGHT$1, int64 COLORBITS$1, int64 DEPTHBITS$1, boolean FULLSCREEN$1 )
{
 int64 TMP$587$1;
 int64 TMP$588$1;
 int64 TMP$589$1;
 int64 TMP$590$1;
 int64 TMP$591$1;
 int64 TMP$592$1;
 int64 TMP$593$1;
 int64 TMP$594$1;
 int64 TMP$595$1;
 label$6:;
 int64 W$1;
 __builtin_memset( &W$1, 0, 8ll );
 int64 H$1;
 __builtin_memset( &H$1, 0, 8ll );
 int64 B$1;
 __builtin_memset( &B$1, 0, 8ll );
 void* vr$3 = fb_GfxScreenPtr( );
 if( vr$3 == (void*)0ull ) goto label$9;
 {
  fb_GfxScreen( 0, 8, 0, 0, 0 );
  label$9:;
 }
 FBSTRING* vr$4 = fb_StrAllocTempDescZEx( (uint8*)"", 0ll );
 TMP$589$1 = 0ll;
 TMP$588$1 = 0ll;
 TMP$587$1 = 0ll;
 fb_GfxScreenInfo64( (int64*)&W$1, (int64*)&H$1, (int64*)&B$1, &TMP$587$1, &TMP$588$1, &TMP$589$1, vr$4 );
 if( PIXELWIDTH$1 > 0ll ) goto label$10;
 TMP$590$1 = (int64)-(PIXELHEIGHT$1 <= 0ll);
 goto label$98;
 label$10:;
 TMP$590$1 = 0ll;
 label$98:;
 if( TMP$590$1 == 0ll ) goto label$12;
 {
  PIXELWIDTH$1 = 640ll;
  PIXELHEIGHT$1 = 350ll;
  FULLSCREEN$1 = (boolean)0ll;
 }
 goto label$11;
 label$12:;
 if( PIXELWIDTH$1 <= 0ll ) goto label$14;
 TMP$591$1 = (int64)-(PIXELHEIGHT$1 <= 0ll);
 goto label$99;
 label$14:;
 TMP$591$1 = 0ll;
 label$99:;
 if( TMP$591$1 == 0ll ) goto label$13;
 {
  PIXELHEIGHT$1 = ((int64)__builtin_nearbyint( ((double)PIXELWIDTH$1 / 0x1.p+4) * 0x1.2p+3 ));
 }
 goto label$11;
 label$13:;
 if( PIXELWIDTH$1 > 0ll ) goto label$16;
 TMP$592$1 = (int64)-(PIXELHEIGHT$1 > 0ll);
 goto label$100;
 label$16:;
 TMP$592$1 = 0ll;
 label$100:;
 if( TMP$592$1 == 0ll ) goto label$15;
 {
  PIXELWIDTH$1 = ((int64)__builtin_nearbyint( ((double)PIXELHEIGHT$1 / 0x1.2p+3) * 0x1.p+4 ));
 }
 label$15:;
 label$11:;
 if( COLORBITS$1 >= 16ll ) goto label$18;
 {
  COLORBITS$1 = B$1;
 }
 goto label$17;
 label$18:;
 if( COLORBITS$1 >= 24ll ) goto label$19;
 {
  COLORBITS$1 = 16ll;
 }
 goto label$17;
 label$19:;
 if( COLORBITS$1 >= 32ll ) goto label$20;
 {
  COLORBITS$1 = 24ll;
 }
 goto label$17;
 label$20:;
 {
  COLORBITS$1 = 32ll;
 }
 label$17:;
 if( DEPTHBITS$1 > 0ll ) goto label$22;
 {
  DEPTHBITS$1 = 0ll;
 }
 goto label$21;
 label$22:;
 if( DEPTHBITS$1 >= 16ll ) goto label$23;
 {
  DEPTHBITS$1 = 16ll;
 }
 goto label$21;
 label$23:;
 if( DEPTHBITS$1 >= 32ll ) goto label$24;
 {
  DEPTHBITS$1 = 24ll;
 }
 goto label$21;
 label$24:;
 {
  DEPTHBITS$1 = 32ll;
 }
 label$21:;
 TMP$595$1 = 2147483648ll;
 TMP$594$1 = 2147483648ll;
 TMP$593$1 = 2147483648ll;
 fb_GfxControl_i64( 110, (int64*)&DEPTHBITS$1, &TMP$593$1, &TMP$594$1, &TMP$595$1 );
 if( FULLSCREEN$1 == (boolean)0ll ) goto label$26;
 {
  if( ((int64)-(PIXELWIDTH$1 < 640ll) | (int64)-(PIXELHEIGHT$1 < 480ll)) == 0ll ) goto label$28;
  {
   PIXELWIDTH$1 = 640ll;
   PIXELHEIGHT$1 = 480ll;
  }
  label$28:;
  label$27:;
  int32 FOUNDMODE$2;
  __builtin_memset( &FOUNDMODE$2, 0, 4ll );
  int32 MODE$2;
  int32 vr$31 = fb_GfxScreenList( (int32)COLORBITS$1 );
  MODE$2 = vr$31;
  if( (int64)MODE$2 == 0ll ) goto label$30;
  {
   int64 ERRORVALUE$3;
   ERRORVALUE$3 = 1073741824ll;
   int64 ERRORWIDTH$3;
   __builtin_memset( &ERRORWIDTH$3, 0, 8ll );
   int64 ERRORHEIGHT$3;
   __builtin_memset( &ERRORHEIGHT$3, 0, 8ll );
   label$31:;
   if( (int64)MODE$2 == 0ll ) goto label$32;
   {
    ERRORWIDTH$3 = (int64)__builtin_llabs( ((((uint64)MODE$2 & 4294901760ull) >> (16ll & 63ll)) - (uint64)PIXELWIDTH$1) );
    ERRORHEIGHT$3 = (int64)__builtin_llabs( (((uint64)MODE$2 & 65535ull) - (uint64)PIXELHEIGHT$1) );
    if( (ERRORWIDTH$3 + ERRORHEIGHT$3) >= ERRORVALUE$3 ) goto label$34;
    {
     ERRORVALUE$3 = ERRORWIDTH$3 + ERRORHEIGHT$3;
     FOUNDMODE$2 = MODE$2;
    }
    label$34:;
    label$33:;
    int32 vr$47 = fb_GfxScreenList( 0 );
    MODE$2 = vr$47;
   }
   goto label$31;
   label$32:;
  }
  goto label$29;
  label$30:;
  {
   int32 BITS$3[2];
   __builtin_memset( (int32*)BITS$3, 0, 8ll );
   struct $8FBARRAY1IiE tmp$596$3;
   *(int32**)&tmp$596$3 = (int32*)BITS$3;
   *(int32**)((uint8*)&tmp$596$3 + 8ll) = (int32*)BITS$3;
   *(int64*)((uint8*)&tmp$596$3 + 16ll) = 8ll;
   *(int64*)((uint8*)&tmp$596$3 + 24ll) = 4ll;
   *(int64*)((uint8*)&tmp$596$3 + 32ll) = 1ll;
   *(int64*)((uint8*)&tmp$596$3 + 40ll) = 49ll;
   *(int64*)((uint8*)&tmp$596$3 + 48ll) = 2ll;
   *(int64*)((uint8*)&tmp$596$3 + 56ll) = 0ll;
   *(int64*)((uint8*)&tmp$596$3 + 64ll) = 1ll;
   if( COLORBITS$1 != 16ll ) goto label$36;
   {
    *(int32*)BITS$3 = 32;
    *(int32*)((int64)(int32*)BITS$3 + 4ll) = 24;
   }
   goto label$35;
   label$36:;
   if( COLORBITS$1 != 24ll ) goto label$37;
   {
    *(int32*)BITS$3 = 32;
    *(int32*)((int64)(int32*)BITS$3 + 4ll) = 16;
   }
   goto label$35;
   label$37:;
   {
    *(int32*)BITS$3 = 24;
    *(int32*)((int64)(int32*)BITS$3 + 4ll) = 16;
   }
   label$35:;
   {
    int64 I$4;
    I$4 = 0ll;
    label$41:;
    {
     COLORBITS$1 = (int64)*(int32*)((int64)(int32*)BITS$3 + (I$4 << (2ll & 63ll)));
     int32 vr$54 = fb_GfxScreenList( (int32)COLORBITS$1 );
     MODE$2 = vr$54;
     if( (int64)MODE$2 == 0ll ) goto label$43;
     {
      int64 ERRORVALUE$6;
      ERRORVALUE$6 = 1073741824ll;
      int64 ERRORWIDTH$6;
      __builtin_memset( &ERRORWIDTH$6, 0, 8ll );
      int64 ERRORHEIGHT$6;
      __builtin_memset( &ERRORHEIGHT$6, 0, 8ll );
      label$44:;
      if( (int64)MODE$2 == 0ll ) goto label$45;
      {
       ERRORWIDTH$6 = (int64)__builtin_llabs( ((((uint64)MODE$2 & 4294901760ull) >> (16ll & 63ll)) - (uint64)PIXELWIDTH$1) );
       ERRORHEIGHT$6 = (int64)__builtin_llabs( (((uint64)MODE$2 & 65535ull) - (uint64)PIXELHEIGHT$1) );
       if( (ERRORWIDTH$6 + ERRORHEIGHT$6) >= ERRORVALUE$6 ) goto label$47;
       {
        ERRORVALUE$6 = ERRORWIDTH$6 + ERRORHEIGHT$6;
        FOUNDMODE$2 = MODE$2;
       }
       label$47:;
       label$46:;
       int32 vr$70 = fb_GfxScreenList( 0 );
       MODE$2 = vr$70;
      }
      goto label$44;
      label$45:;
     }
     label$43:;
     label$42:;
     if( (int64)FOUNDMODE$2 == 0ll ) goto label$49;
     {
      goto label$40;
      label$49:;
     }
    }
    label$39:;
    I$4 = I$4 + 1ll;
    label$38:;
    if( I$4 <= 1ll ) goto label$41;
    label$40:;
   }
  }
  label$29:;
  if( (int64)FOUNDMODE$2 == 0ll ) goto label$51;
  {
   PIXELWIDTH$1 = (int64)(((uint64)FOUNDMODE$2 & 4294901760ull) >> (16ll & 63ll));
   PIXELHEIGHT$1 = (int64)((uint64)FOUNDMODE$2 & 65535ull);
  }
  goto label$50;
  label$51:;
  {
   FULLSCREEN$1 = (boolean)0ll;
  }
  label$50:;
 }
 label$26:;
 label$25:;
 int32 vr$82 = fb_GfxScreenRes( (int32)PIXELWIDTH$1, (int32)PIXELHEIGHT$1, (int32)COLORBITS$1, 1, 2, 0 );
 if( (int64)vr$82 == 0ll ) goto label$53;
 {
  FULLSCREEN$1 = (boolean)0ll;
  int32 vr$85 = fb_GfxScreenRes( 640, 350, (int32)B$1, 1, 2, 0 );
  if( (int64)vr$85 == 0ll ) goto label$55;
  {
   FBSTRING TMP$600$3;
   FBSTRING TMP$601$3;
   FBSTRING TMP$602$3;
   FBSTRING TMP$603$3;
   FBSTRING TMP$604$3;
   __builtin_memset( &TMP$604$3, 0, 24ll );
   FBSTRING* vr$88 = fb_LongintToStr( H$1 );
   FBSTRING* vr$89 = fb_LongintToStr( W$1 );
   __builtin_memset( &TMP$600$3, 0, 24ll );
   FBSTRING* vr$92 = fb_StrConcat( &TMP$600$3, (void*)"screenres(", 11ll, (void*)vr$89, -1ll );
   __builtin_memset( &TMP$601$3, 0, 24ll );
   FBSTRING* vr$95 = fb_StrConcat( &TMP$601$3, (void*)vr$92, -1ll, (void*)",", 2ll );
   __builtin_memset( &TMP$602$3, 0, 24ll );
   FBSTRING* vr$98 = fb_StrConcat( &TMP$602$3, (void*)vr$95, -1ll, (void*)vr$88, -1ll );
   __builtin_memset( &TMP$603$3, 0, 24ll );
   FBSTRING* vr$101 = fb_StrConcat( &TMP$603$3, (void*)vr$98, -1ll, (void*)") failed !", 11ll );
   fb_StrAssign( (void*)&TMP$604$3, -1ll, (void*)vr$101, -1ll, 0 );
   ERROREXIT( &TMP$604$3 );
   fb_StrDelete( (FBSTRING*)&TMP$604$3 );
  }
  label$55:;
  label$54:;
 }
 label$53:;
 label$52:;
 fb_GfxFlip( -1, -1 );
 void* vr$105 = fb_GfxGetGLProcAddress( (uint8*)"glCreateShader" );
 GLCREATESHADER$ = (tmp$83)vr$105;
 if( (uint64)GLCREATESHADER$ != 0ull ) goto label$57;
 {
  FBSTRING TMP$606$2;
  __builtin_memset( &TMP$606$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$606$2, -1ll, (void*)"glCreateShader", 15ll, 0 );
  ERROREXIT( &TMP$606$2 );
  fb_StrDelete( (FBSTRING*)&TMP$606$2 );
  label$57:;
 }
 void* vr$110 = fb_GfxGetGLProcAddress( (uint8*)"glDeleteShader" );
 GLDELETESHADER$ = (tmp$12)vr$110;
 if( (uint64)GLDELETESHADER$ != 0ull ) goto label$59;
 {
  FBSTRING TMP$608$2;
  __builtin_memset( &TMP$608$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$608$2, -1ll, (void*)"glDeleteShader", 15ll, 0 );
  ERROREXIT( &TMP$608$2 );
  fb_StrDelete( (FBSTRING*)&TMP$608$2 );
  label$59:;
 }
 void* vr$115 = fb_GfxGetGLProcAddress( (uint8*)"glShaderSource" );
 GLSHADERSOURCE$ = (tmp$92)vr$115;
 if( (uint64)GLSHADERSOURCE$ != 0ull ) goto label$61;
 {
  FBSTRING TMP$610$2;
  __builtin_memset( &TMP$610$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$610$2, -1ll, (void*)"glShaderSource", 15ll, 0 );
  ERROREXIT( &TMP$610$2 );
  fb_StrDelete( (FBSTRING*)&TMP$610$2 );
  label$61:;
 }
 void* vr$120 = fb_GfxGetGLProcAddress( (uint8*)"glCompileShader" );
 GLCOMPILESHADER$ = (tmp$12)vr$120;
 if( (uint64)GLCOMPILESHADER$ != 0ull ) goto label$63;
 {
  FBSTRING TMP$612$2;
  __builtin_memset( &TMP$612$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$612$2, -1ll, (void*)"glCompileShader", 16ll, 0 );
  ERROREXIT( &TMP$612$2 );
  fb_StrDelete( (FBSTRING*)&TMP$612$2 );
  label$63:;
 }
 void* vr$125 = fb_GfxGetGLProcAddress( (uint8*)"glGetShaderiv" );
 GLGETSHADERIV$ = (tmp$73)vr$125;
 if( (uint64)GLGETSHADERIV$ != 0ull ) goto label$65;
 {
  FBSTRING TMP$614$2;
  __builtin_memset( &TMP$614$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$614$2, -1ll, (void*)"glGetShaderiv", 14ll, 0 );
  ERROREXIT( &TMP$614$2 );
  fb_StrDelete( (FBSTRING*)&TMP$614$2 );
  label$65:;
 }
 void* vr$130 = fb_GfxGetGLProcAddress( (uint8*)"glGetShaderInfoLog" );
 GLGETSHADERINFOLOG$ = (tmp$87)vr$130;
 if( (uint64)GLGETSHADERINFOLOG$ != 0ull ) goto label$67;
 {
  FBSTRING TMP$616$2;
  __builtin_memset( &TMP$616$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$616$2, -1ll, (void*)"glGetShaderInfoLog", 19ll, 0 );
  ERROREXIT( &TMP$616$2 );
  fb_StrDelete( (FBSTRING*)&TMP$616$2 );
  label$67:;
 }
 void* vr$135 = fb_GfxGetGLProcAddress( (uint8*)"glCreateProgram" );
 GLCREATEPROGRAM$ = (tmp$82)vr$135;
 if( (uint64)GLCREATEPROGRAM$ != 0ull ) goto label$69;
 {
  FBSTRING TMP$618$2;
  __builtin_memset( &TMP$618$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$618$2, -1ll, (void*)"glCreateProgram", 16ll, 0 );
  ERROREXIT( &TMP$618$2 );
  fb_StrDelete( (FBSTRING*)&TMP$618$2 );
  label$69:;
 }
 void* vr$140 = fb_GfxGetGLProcAddress( (uint8*)"glDeleteProgram" );
 GLDELETEPROGRAM$ = (tmp$12)vr$140;
 if( (uint64)GLDELETEPROGRAM$ != 0ull ) goto label$71;
 {
  FBSTRING TMP$620$2;
  __builtin_memset( &TMP$620$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$620$2, -1ll, (void*)"glDeleteProgram", 16ll, 0 );
  ERROREXIT( &TMP$620$2 );
  fb_StrDelete( (FBSTRING*)&TMP$620$2 );
  label$71:;
 }
 void* vr$145 = fb_GfxGetGLProcAddress( (uint8*)"glAttachShader" );
 GLATTACHSHADER$ = (tmp$72)vr$145;
 if( (uint64)GLATTACHSHADER$ != 0ull ) goto label$73;
 {
  FBSTRING TMP$622$2;
  __builtin_memset( &TMP$622$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$622$2, -1ll, (void*)"glAttachShader", 15ll, 0 );
  ERROREXIT( &TMP$622$2 );
  fb_StrDelete( (FBSTRING*)&TMP$622$2 );
  label$73:;
 }
 void* vr$150 = fb_GfxGetGLProcAddress( (uint8*)"glDetachShader" );
 GLDETACHSHADER$ = (tmp$72)vr$150;
 if( (uint64)GLDETACHSHADER$ != 0ull ) goto label$75;
 {
  FBSTRING TMP$624$2;
  __builtin_memset( &TMP$624$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$624$2, -1ll, (void*)"glDetachShader", 15ll, 0 );
  ERROREXIT( &TMP$624$2 );
  fb_StrDelete( (FBSTRING*)&TMP$624$2 );
  label$75:;
 }
 void* vr$155 = fb_GfxGetGLProcAddress( (uint8*)"glLinkProgram" );
 GLLINKPROGRAM$ = (tmp$12)vr$155;
 if( (uint64)GLLINKPROGRAM$ != 0ull ) goto label$77;
 {
  FBSTRING TMP$626$2;
  __builtin_memset( &TMP$626$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$626$2, -1ll, (void*)"glLinkProgram", 14ll, 0 );
  ERROREXIT( &TMP$626$2 );
  fb_StrDelete( (FBSTRING*)&TMP$626$2 );
  label$77:;
 }
 void* vr$160 = fb_GfxGetGLProcAddress( (uint8*)"glGetProgramiv" );
 GLGETPROGRAMIV$ = (tmp$73)vr$160;
 if( (uint64)GLGETPROGRAMIV$ != 0ull ) goto label$79;
 {
  FBSTRING TMP$628$2;
  __builtin_memset( &TMP$628$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$628$2, -1ll, (void*)"glGetProgramiv", 15ll, 0 );
  ERROREXIT( &TMP$628$2 );
  fb_StrDelete( (FBSTRING*)&TMP$628$2 );
  label$79:;
 }
 void* vr$165 = fb_GfxGetGLProcAddress( (uint8*)"glGetProgramInfoLog" );
 GLGETPROGRAMINFOLOG$ = (tmp$87)vr$165;
 if( (uint64)GLGETPROGRAMINFOLOG$ != 0ull ) goto label$81;
 {
  FBSTRING TMP$630$2;
  __builtin_memset( &TMP$630$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$630$2, -1ll, (void*)"glGetProgramInfoLog", 20ll, 0 );
  ERROREXIT( &TMP$630$2 );
  fb_StrDelete( (FBSTRING*)&TMP$630$2 );
  label$81:;
 }
 void* vr$170 = fb_GfxGetGLProcAddress( (uint8*)"glUseProgram" );
 GLUSEPROGRAM$ = (tmp$12)vr$170;
 if( (uint64)GLUSEPROGRAM$ != 0ull ) goto label$83;
 {
  FBSTRING TMP$632$2;
  __builtin_memset( &TMP$632$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$632$2, -1ll, (void*)"glUseProgram", 13ll, 0 );
  ERROREXIT( &TMP$632$2 );
  fb_StrDelete( (FBSTRING*)&TMP$632$2 );
  label$83:;
 }
 void* vr$175 = fb_GfxGetGLProcAddress( (uint8*)"glGetUniformLocation" );
 GLGETUNIFORMLOCATION$ = (tmp$86)vr$175;
 if( (uint64)GLGETUNIFORMLOCATION$ != 0ull ) goto label$85;
 {
  FBSTRING TMP$634$2;
  __builtin_memset( &TMP$634$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$634$2, -1ll, (void*)"glGetUniformLocation", 21ll, 0 );
  ERROREXIT( &TMP$634$2 );
  fb_StrDelete( (FBSTRING*)&TMP$634$2 );
  label$85:;
 }
 void* vr$180 = fb_GfxGetGLProcAddress( (uint8*)"glUniform1i" );
 GLUNIFORM1I$ = (tmp$66)vr$180;
 if( (uint64)GLUNIFORM1I$ != 0ull ) goto label$87;
 {
  FBSTRING TMP$636$2;
  __builtin_memset( &TMP$636$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$636$2, -1ll, (void*)"glUniform1i", 12ll, 0 );
  ERROREXIT( &TMP$636$2 );
  fb_StrDelete( (FBSTRING*)&TMP$636$2 );
  label$87:;
 }
 void* vr$185 = fb_GfxGetGLProcAddress( (uint8*)"glUniform1f" );
 GLUNIFORM1F$ = (tmp$93)vr$185;
 if( (uint64)GLUNIFORM1F$ != 0ull ) goto label$89;
 {
  FBSTRING TMP$638$2;
  __builtin_memset( &TMP$638$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$638$2, -1ll, (void*)"glUniform1f", 12ll, 0 );
  ERROREXIT( &TMP$638$2 );
  fb_StrDelete( (FBSTRING*)&TMP$638$2 );
  label$89:;
 }
 void* vr$190 = fb_GfxGetGLProcAddress( (uint8*)"glUniform3f" );
 GLUNIFORM3F$ = (tmp$95)vr$190;
 if( (uint64)GLUNIFORM3F$ != 0ull ) goto label$91;
 {
  FBSTRING TMP$640$2;
  __builtin_memset( &TMP$640$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$640$2, -1ll, (void*)"glUniform3f", 12ll, 0 );
  ERROREXIT( &TMP$640$2 );
  fb_StrDelete( (FBSTRING*)&TMP$640$2 );
  label$91:;
 }
 void* vr$195 = fb_GfxGetGLProcAddress( (uint8*)"glUniform3fv" );
 GLUNIFORM3FV$ = (tmp$99)vr$195;
 if( (uint64)GLUNIFORM3FV$ != 0ull ) goto label$93;
 {
  FBSTRING TMP$642$2;
  __builtin_memset( &TMP$642$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$642$2, -1ll, (void*)"glUniform3fv", 13ll, 0 );
  ERROREXIT( &TMP$642$2 );
  fb_StrDelete( (FBSTRING*)&TMP$642$2 );
  label$93:;
 }
 void* vr$200 = fb_GfxGetGLProcAddress( (uint8*)"glUniform4f" );
 GLUNIFORM4F$ = (tmp$96)vr$200;
 if( (uint64)GLUNIFORM4F$ != 0ull ) goto label$95;
 {
  FBSTRING TMP$644$2;
  __builtin_memset( &TMP$644$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$644$2, -1ll, (void*)"glUniform4f", 12ll, 0 );
  ERROREXIT( &TMP$644$2 );
  fb_StrDelete( (FBSTRING*)&TMP$644$2 );
  label$95:;
 }
 void* vr$205 = fb_GfxGetGLProcAddress( (uint8*)"glUniform4fv" );
 GLUNIFORM4FV$ = (tmp$99)vr$205;
 if( (uint64)GLUNIFORM4FV$ != 0ull ) goto label$97;
 {
  FBSTRING TMP$646$2;
  __builtin_memset( &TMP$646$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$646$2, -1ll, (void*)"glUniform4fv", 13ll, 0 );
  ERROREXIT( &TMP$646$2 );
  fb_StrDelete( (FBSTRING*)&TMP$646$2 );
  label$97:;
 }
 FBSTRING* vr$210 = fb_StrAllocTempDescZEx( (uint8*)"load and compile shader pese wait ...", 37ll );
 fb_GfxSetWindowTitle( (FBSTRING*)vr$210 );
 label$7:;
}

void _ZN9SHADERTOYD1Ev( struct $9SHADERTOY* THIS$1 )
{
 label$107:;
 if( (int64)*(uint32*)((uint8*)THIS$1 + 4ll) == 0ll ) goto label$110;
 {
  (GLUSEPROGRAM$)( 0u );
  if( (int64)*(uint32*)THIS$1 == 0ll ) goto label$112;
  {
   (GLDETACHSHADER$)( *(uint32*)((uint8*)THIS$1 + 4ll), *(uint32*)THIS$1 );
   (GLDELETESHADER$)( *(uint32*)THIS$1 );
  }
  label$112:;
  label$111:;
  (GLDELETEPROGRAM$)( *(uint32*)((uint8*)THIS$1 + 4ll) );
 }
 label$110:;
 label$109:;
 label$108:;
 fb_StrDelete( (FBSTRING*)((uint8*)THIS$1 + 8ll) );
}

boolean _ZN9SHADERTOY11COMPILEFILEER8FBSTRING( struct $9SHADERTOY* THIS$1, FBSTRING* FILENAME$1 )
{
 boolean fb$result$1;
 __builtin_memset( &fb$result$1, 0, 1ll );
 label$113:;
 FBSTRING CODE$1;
 __builtin_memset( &CODE$1, 0, 24ll );
 int32 HFILE$1;
 int32 vr$2 = fb_FileFree( );
 HFILE$1 = vr$2;
 int32 vr$3 = fb_FileOpen( (FBSTRING*)FILENAME$1, 2u, 0u, 0u, HFILE$1, 0 );
 if( (int64)vr$3 == 0ll ) goto label$116;
 {
  FBSTRING TMP$652$2;
  FBSTRING TMP$653$2;
  FBSTRING TMP$654$2;
  __builtin_memset( &TMP$652$2, 0, 24ll );
  FBSTRING* vr$7 = fb_StrConcat( &TMP$652$2, (void*)"can't read shader: \x22", 21ll, (void*)FILENAME$1, -1ll );
  __builtin_memset( &TMP$653$2, 0, 24ll );
  FBSTRING* vr$10 = fb_StrConcat( &TMP$653$2, (void*)vr$7, -1ll, (void*)"\x22", 2ll );
  __builtin_memset( &TMP$654$2, 0, 24ll );
  FBSTRING* vr$13 = fb_StrConcat( &TMP$654$2, (void*)vr$10, -1ll, (void*)" !", 3ll );
  fb_StrAssign( (void*)((uint8*)THIS$1 + 8ll), -1ll, (void*)vr$13, -1ll, 0 );
  fb$result$1 = (boolean)0ll;
  fb_StrDelete( (FBSTRING*)&CODE$1 );
  goto label$114;
 }
 label$116:;
 label$115:;
 label$117:;
 int32 vr$17 = fb_FileEof( HFILE$1 );
 if( ~(int64)vr$17 == 0ll ) goto label$118;
 {
  FBSTRING ALINE$2;
  __builtin_memset( &ALINE$2, 0, 24ll );
  fb_FileLineInput( HFILE$1, (void*)&ALINE$2, -1ll, 0 );
  fb_StrConcatAssign( (void*)&CODE$1, -1ll, (void*)&ALINE$2, -1ll, 0 );
  fb_StrConcatAssign( (void*)&CODE$1, -1ll, (void*)"\x0A", 2ll, 0 );
  fb_StrDelete( (FBSTRING*)&ALINE$2 );
 }
 goto label$117;
 label$118:;
 fb_FileClose( HFILE$1 );
 boolean vr$27 = _ZN9SHADERTOY11COMPILECODEER8FBSTRING( THIS$1, &CODE$1 );
 fb$result$1 = vr$27;
 fb_StrDelete( (FBSTRING*)&CODE$1 );
 goto label$114;
 fb_StrDelete( (FBSTRING*)&CODE$1 );
 label$114:;
 return fb$result$1;
}

boolean _ZN9SHADERTOY11COMPILECODEER8FBSTRING( struct $9SHADERTOY* THIS$1, FBSTRING* USERCODE$1 )
{
 FBSTRING TMP$686$1;
 FBSTRING TMP$687$1;
 boolean fb$result$1;
 __builtin_memset( &fb$result$1, 0, 1ll );
 label$119:;
 int32 LOGSIZE$1;
 __builtin_memset( &LOGSIZE$1, 0, 4ll );
 int32 STATUS$1;
 __builtin_memset( &STATUS$1, 0, 4ll );
 FBSTRING FRAGMENTPROLOG$1;
 __builtin_memset( &FRAGMENTPROLOG$1, 0, 24ll );
 FBSTRING VERSION$1;
 __builtin_memset( &VERSION$1, 0, 24ll );
 fb_StrAssign( (void*)&VERSION$1, -1ll, (void*)"#version 460\x0A", 14ll, 0 );
 fb_StrAssign( (void*)&FRAGMENTPROLOG$1, -1ll, (void*)&VERSION$1, -1ll, 0 );
 fb_StrConcatAssign( (void*)&FRAGMENTPROLOG$1, -1ll, (void*)"uniform float     iGlobalTime;\x0A", 32ll, 0 );
 fb_StrConcatAssign( (void*)&FRAGMENTPROLOG$1, -1ll, (void*)"uniform float     iTime;\x0A", 26ll, 0 );
 fb_StrConcatAssign( (void*)&FRAGMENTPROLOG$1, -1ll, (void*)"uniform vec3      iResolution;\x0A", 32ll, 0 );
 fb_StrConcatAssign( (void*)&FRAGMENTPROLOG$1, -1ll, (void*)"uniform float     iTimeDelta;\x0A", 31ll, 0 );
 fb_StrConcatAssign( (void*)&FRAGMENTPROLOG$1, -1ll, (void*)"uniform float     iFrameRate;\x0A", 31ll, 0 );
 fb_StrConcatAssign( (void*)&FRAGMENTPROLOG$1, -1ll, (void*)"uniform int       iFrame;\x0A", 27ll, 0 );
 fb_StrConcatAssign( (void*)&FRAGMENTPROLOG$1, -1ll, (void*)"uniform float     iChannelTime[4];\x0A", 36ll, 0 );
 fb_StrConcatAssign( (void*)&FRAGMENTPROLOG$1, -1ll, (void*)"uniform vec3      iChannelResolution[4];\x0A", 42ll, 0 );
 fb_StrConcatAssign( (void*)&FRAGMENTPROLOG$1, -1ll, (void*)"uniform float     iSampleRate;\x0A", 32ll, 0 );
 fb_StrConcatAssign( (void*)&FRAGMENTPROLOG$1, -1ll, (void*)"uniform vec4      iMouse;\x0A", 27ll, 0 );
 fb_StrConcatAssign( (void*)&FRAGMENTPROLOG$1, -1ll, (void*)"uniform vec4      iDate;\x0A", 26ll, 0 );
 fb_StrConcatAssign( (void*)&FRAGMENTPROLOG$1, -1ll, (void*)"uniform sampler2D iChannel0;\x0A", 30ll, 0 );
 fb_StrConcatAssign( (void*)&FRAGMENTPROLOG$1, -1ll, (void*)"uniform sampler2D iChannel1;\x0A", 30ll, 0 );
 fb_StrConcatAssign( (void*)&FRAGMENTPROLOG$1, -1ll, (void*)"uniform sampler2D iChannel2;\x0A", 30ll, 0 );
 fb_StrConcatAssign( (void*)&FRAGMENTPROLOG$1, -1ll, (void*)"uniform sampler2D iChannel3;\x0A", 30ll, 0 );
 fb_StrConcatAssign( (void*)&FRAGMENTPROLOG$1, -1ll, (void*)"uniform samplerCube iCube;\x0A", 28ll, 0 );
 FBSTRING FRAGMENTEPILOG$1;
 __builtin_memset( &FRAGMENTEPILOG$1, 0, 24ll );
 if( SWCH$ != 0x0p+0 ) goto label$122;
 {
  fb_StrConcatAssign( (void*)&FRAGMENTEPILOG$1, -1ll, (void*)"void main() {\x0A", 15ll, 0 );
  fb_StrConcatAssign( (void*)&FRAGMENTEPILOG$1, -1ll, (void*)"  vec4 color;\x0A", 15ll, 0 );
  fb_StrConcatAssign( (void*)&FRAGMENTEPILOG$1, -1ll, (void*)"  // call user shader\x0A", 23ll, 0 );
  fb_StrConcatAssign( (void*)&FRAGMENTEPILOG$1, -1ll, (void*)"  mainImage(color, gl_FragCoord.xy);\x0A", 38ll, 0 );
  fb_StrConcatAssign( (void*)&FRAGMENTEPILOG$1, -1ll, (void*)"  color.w = 1.0;\x0A", 18ll, 0 );
  fb_StrConcatAssign( (void*)&FRAGMENTEPILOG$1, -1ll, (void*)"  gl_FragColor = color;\x0A", 25ll, 0 );
  fb_StrConcatAssign( (void*)&FRAGMENTEPILOG$1, -1ll, (void*)"}\x0A", 3ll, 0 );
 }
 goto label$121;
 label$122:;
 {
  fb_StrConcatAssign( (void*)&FRAGMENTEPILOG$1, -1ll, (void*)"#define main_image mainImage", 29ll, 0 );
  fb_StrConcatAssign( (void*)&FRAGMENTEPILOG$1, -1ll, (void*)"#define frag_color fragColor", 29ll, 0 );
  fb_StrConcatAssign( (void*)&FRAGMENTEPILOG$1, -1ll, (void*)"#define frag_coord fragCoord", 29ll, 0 );
  fb_StrConcatAssign( (void*)&FRAGMENTEPILOG$1, -1ll, (void*)"#define i_resolution iResolution", 33ll, 0 );
  fb_StrConcatAssign( (void*)&FRAGMENTEPILOG$1, -1ll, (void*)"#define i_time iTime", 21ll, 0 );
  fb_StrConcatAssign( (void*)&FRAGMENTEPILOG$1, -1ll, (void*)"void main() {\x0A", 15ll, 0 );
  fb_StrConcatAssign( (void*)&FRAGMENTEPILOG$1, -1ll, (void*)"  vec4 color;\x0A", 15ll, 0 );
  fb_StrConcatAssign( (void*)&FRAGMENTEPILOG$1, -1ll, (void*)"  // call user shader\x0A", 23ll, 0 );
  fb_StrConcatAssign( (void*)&FRAGMENTEPILOG$1, -1ll, (void*)"  main_image(color, gl_FragCoord.xy);\x0A", 39ll, 0 );
  fb_StrConcatAssign( (void*)&FRAGMENTEPILOG$1, -1ll, (void*)"  color.w = 1.0;\x0A", 18ll, 0 );
  fb_StrConcatAssign( (void*)&FRAGMENTEPILOG$1, -1ll, (void*)"  gl_FragColor = color;\x0A", 25ll, 0 );
  fb_StrConcatAssign( (void*)&FRAGMENTEPILOG$1, -1ll, (void*)"}\x0A", 3ll, 0 );
 }
 label$121:;
 FBSTRING FRAGMENTCODE$1;
 __builtin_memset( &TMP$686$1, 0, 24ll );
 FBSTRING* vr$48 = fb_StrConcat( &TMP$686$1, (void*)&FRAGMENTPROLOG$1, -1ll, (void*)USERCODE$1, -1ll );
 __builtin_memset( &TMP$687$1, 0, 24ll );
 FBSTRING* vr$51 = fb_StrConcat( &TMP$687$1, (void*)vr$48, -1ll, (void*)&FRAGMENTEPILOG$1, -1ll );
 fb_StrInit( (void*)&FRAGMENTCODE$1, -1ll, (void*)vr$51, -1ll, 0 );
 uint32 vr$53 = (GLCREATESHADER$)( 35632u );
 *(uint32*)THIS$1 = vr$53;
 if( (int64)*(uint32*)THIS$1 != 0ll ) goto label$124;
 {
  fb_StrAssign( (void*)((uint8*)THIS$1 + 8ll), -1ll, (void*)"glCreateShader(GL_FRAGMENT_SHADER) failed !", 44ll, 0 );
  fb$result$1 = (boolean)0ll;
  fb_StrDelete( (FBSTRING*)&FRAGMENTCODE$1 );
  fb_StrDelete( (FBSTRING*)&FRAGMENTEPILOG$1 );
  fb_StrDelete( (FBSTRING*)&VERSION$1 );
  fb_StrDelete( (FBSTRING*)&FRAGMENTPROLOG$1 );
  goto label$120;
 }
 label$124:;
 label$123:;
 uint8* PCODE$1;
 PCODE$1 = (uint8*)*(uint8**)&FRAGMENTCODE$1;
 (GLSHADERSOURCE$)( *(uint32*)THIS$1, 1, (uint8**)&PCODE$1, (int32*)0ull );
 (GLCOMPILESHADER$)( *(uint32*)THIS$1 );
 (GLGETSHADERIV$)( *(uint32*)THIS$1, 35713u, &STATUS$1 );
 if( (int64)STATUS$1 != 0ll ) goto label$126;
 {
  FBSTRING TMP$690$2;
  (GLGETSHADERIV$)( *(uint32*)THIS$1, 35716u, &LOGSIZE$1 );
  FBSTRING* vr$72 = fb_SPACE( (int64)LOGSIZE$1 );
  fb_StrAssign( (void*)((uint8*)THIS$1 + 8ll), -1ll, (void*)vr$72, -1ll, 0 );
  (GLGETSHADERINFOLOG$)( *(uint32*)THIS$1, LOGSIZE$1, (int32*)0ull, *(uint8**)((uint8*)THIS$1 + 8ll) );
  __builtin_memset( &TMP$690$2, 0, 24ll );
  FBSTRING* vr$81 = fb_StrConcat( &TMP$690$2, (void*)"glCompileShader(FragmentShader) failed !\x0A", 42ll, (void*)((uint8*)THIS$1 + 8ll), -1ll );
  fb_StrAssign( (void*)((uint8*)THIS$1 + 8ll), -1ll, (void*)vr$81, -1ll, 0 );
  (GLDELETESHADER$)( *(uint32*)THIS$1 );
  *(uint32*)THIS$1 = 0u;
  fb$result$1 = (boolean)0ll;
  fb_StrDelete( (FBSTRING*)&FRAGMENTCODE$1 );
  fb_StrDelete( (FBSTRING*)&FRAGMENTEPILOG$1 );
  fb_StrDelete( (FBSTRING*)&VERSION$1 );
  fb_StrDelete( (FBSTRING*)&FRAGMENTPROLOG$1 );
  goto label$120;
 }
 label$126:;
 label$125:;
 uint32 vr$90 = (GLCREATEPROGRAM$)( );
 *(uint32*)((uint8*)THIS$1 + 4ll) = vr$90;
 if( (int64)*(uint32*)((uint8*)THIS$1 + 4ll) != 0ll ) goto label$128;
 {
  fb_StrAssign( (void*)((uint8*)THIS$1 + 8ll), -1ll, (void*)"glCreateProgram() failed !", 27ll, 0 );
  (GLDELETESHADER$)( *(uint32*)THIS$1 );
  *(uint32*)THIS$1 = 0u;
  fb$result$1 = (boolean)0ll;
  fb_StrDelete( (FBSTRING*)&FRAGMENTCODE$1 );
  fb_StrDelete( (FBSTRING*)&FRAGMENTEPILOG$1 );
  fb_StrDelete( (FBSTRING*)&VERSION$1 );
  fb_StrDelete( (FBSTRING*)&FRAGMENTPROLOG$1 );
  goto label$120;
 }
 label$128:;
 label$127:;
 (GLATTACHSHADER$)( *(uint32*)((uint8*)THIS$1 + 4ll), *(uint32*)THIS$1 );
 (GLLINKPROGRAM$)( *(uint32*)((uint8*)THIS$1 + 4ll) );
 (GLGETPROGRAMIV$)( *(uint32*)((uint8*)THIS$1 + 4ll), 35714u, &STATUS$1 );
 if( (int64)STATUS$1 != 0ll ) goto label$130;
 {
  FBSTRING TMP$693$2;
  (GLGETPROGRAMIV$)( *(uint32*)((uint8*)THIS$1 + 4ll), 35716u, &LOGSIZE$1 );
  FBSTRING* vr$111 = fb_SPACE( (int64)LOGSIZE$1 );
  fb_StrAssign( (void*)((uint8*)THIS$1 + 8ll), -1ll, (void*)vr$111, -1ll, 0 );
  (GLGETPROGRAMINFOLOG$)( *(uint32*)((uint8*)THIS$1 + 4ll), LOGSIZE$1, (int32*)0ull, *(uint8**)((uint8*)THIS$1 + 8ll) );
  __builtin_memset( &TMP$693$2, 0, 24ll );
  FBSTRING* vr$120 = fb_StrConcat( &TMP$693$2, (void*)"glLinkProgram() failed !\x0A", 26ll, (void*)((uint8*)THIS$1 + 8ll), -1ll );
  fb_StrAssign( (void*)((uint8*)THIS$1 + 8ll), -1ll, (void*)vr$120, -1ll, 0 );
  (GLDELETESHADER$)( *(uint32*)THIS$1 );
  *(uint32*)THIS$1 = 0u;
  fb$result$1 = (boolean)0ll;
  fb_StrDelete( (FBSTRING*)&FRAGMENTCODE$1 );
  fb_StrDelete( (FBSTRING*)&FRAGMENTEPILOG$1 );
  fb_StrDelete( (FBSTRING*)&VERSION$1 );
  fb_StrDelete( (FBSTRING*)&FRAGMENTPROLOG$1 );
  goto label$120;
 }
 label$130:;
 label$129:;
 fb$result$1 = (boolean)1ll;
 fb_StrDelete( (FBSTRING*)&FRAGMENTCODE$1 );
 fb_StrDelete( (FBSTRING*)&FRAGMENTEPILOG$1 );
 fb_StrDelete( (FBSTRING*)&VERSION$1 );
 fb_StrDelete( (FBSTRING*)&FRAGMENTPROLOG$1 );
 goto label$120;
 fb_StrDelete( (FBSTRING*)&FRAGMENTCODE$1 );
 fb_StrDelete( (FBSTRING*)&FRAGMENTEPILOG$1 );
 fb_StrDelete( (FBSTRING*)&VERSION$1 );
 fb_StrDelete( (FBSTRING*)&FRAGMENTPROLOG$1 );
 label$120:;
 return fb$result$1;
}

void _ZN7VECTOR2C1Ev( struct $7VECTOR2* THIS$1 )
{
 __builtin_memset( (double*)THIS$1, 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 8ll), 0, 8ll );
 label$131:;
 label$132:;
}

void _ZN7VECTOR2C1Ed( struct $7VECTOR2* THIS$1, double PXY$1 )
{
 label$133:;
 __builtin_memset( (double*)THIS$1, 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 8ll), 0, 8ll );
 *(double*)THIS$1 = PXY$1;
 *(double*)((uint8*)THIS$1 + 8ll) = PXY$1;
 label$134:;
}

void _ZN7VECTOR2C1Edd( struct $7VECTOR2* THIS$1, double PX$1, double PY$1 )
{
 label$135:;
 __builtin_memset( (double*)THIS$1, 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 8ll), 0, 8ll );
 *(double*)THIS$1 = PX$1;
 *(double*)((uint8*)THIS$1 + 8ll) = PY$1;
 label$136:;
}

void _ZN7VECTOR2C1ERS_( struct $7VECTOR2* THIS$1, struct $7VECTOR2* V2$1 )
{
 label$137:;
 __builtin_memset( (double*)THIS$1, 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 8ll), 0, 8ll );
 *(double*)THIS$1 = *(double*)V2$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)V2$1 + 8ll);
 label$138:;
}

void _ZN7VECTOR2aSEd( struct $7VECTOR2* THIS$1, double PXY$1 )
{
 label$139:;
 *(double*)THIS$1 = PXY$1;
 *(double*)((uint8*)THIS$1 + 8ll) = PXY$1;
 label$140:;
}

void _ZN7VECTOR2aSERS_( struct $7VECTOR2* THIS$1, struct $7VECTOR2* P$1 )
{
 label$141:;
 *(double*)THIS$1 = *(double*)P$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)P$1 + 8ll);
 label$142:;
}

FBSTRING* _ZN7VECTOR2cv8FBSTRINGEv( struct $7VECTOR2* THIS$1 )
{
 FBSTRING TMP$700$1;
 FBSTRING TMP$701$1;
 FBSTRING TMP$702$1;
 FBSTRING TMP$703$1;
 FBSTRING fb$result$1;
 __builtin_memset( &fb$result$1, 0, 24ll );
 label$143:;
 FBSTRING* vr$2 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 8ll) );
 FBSTRING* vr$4 = fb_DoubleToStr( *(double*)THIS$1 );
 __builtin_memset( &TMP$700$1, 0, 24ll );
 FBSTRING* vr$7 = fb_StrConcat( &TMP$700$1, (void*)"(", 2ll, (void*)vr$4, -1ll );
 __builtin_memset( &TMP$701$1, 0, 24ll );
 FBSTRING* vr$10 = fb_StrConcat( &TMP$701$1, (void*)vr$7, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$702$1, 0, 24ll );
 FBSTRING* vr$13 = fb_StrConcat( &TMP$702$1, (void*)vr$10, -1ll, (void*)vr$2, -1ll );
 __builtin_memset( &TMP$703$1, 0, 24ll );
 FBSTRING* vr$16 = fb_StrConcat( &TMP$703$1, (void*)vr$13, -1ll, (void*)")", 2ll );
 fb_StrInit( (void*)&fb$result$1, -1ll, (void*)vr$16, -1ll, 0 );
 goto label$144;
 label$144:;
 FBSTRING* vr$19 = fb_StrAllocTempResult( (FBSTRING*)&fb$result$1 );
 return vr$19;
}

void _ZN7VECTOR2pLEd( struct $7VECTOR2* THIS$1, double V$1 )
{
 label$145:;
 *(double*)THIS$1 = *(double*)THIS$1 + V$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) + V$1;
 label$146:;
}

void _ZN7VECTOR2mIEd( struct $7VECTOR2* THIS$1, double V$1 )
{
 label$147:;
 *(double*)THIS$1 = *(double*)THIS$1 - V$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) - V$1;
 label$148:;
}

void _ZN7VECTOR2mLEd( struct $7VECTOR2* THIS$1, double V$1 )
{
 label$149:;
 *(double*)THIS$1 = *(double*)THIS$1 * V$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) * V$1;
 label$150:;
}

void _ZN7VECTOR2dVEd( struct $7VECTOR2* THIS$1, double V$1 )
{
 label$151:;
 *(double*)THIS$1 = *(double*)THIS$1 / V$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) / V$1;
 label$152:;
}

void _ZN7VECTOR2pLERS_( struct $7VECTOR2* THIS$1, struct $7VECTOR2* V2$1 )
{
 label$153:;
 *(double*)THIS$1 = *(double*)THIS$1 + *(double*)V2$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) + *(double*)((uint8*)V2$1 + 8ll);
 label$154:;
}

void _ZN7VECTOR2mIERS_( struct $7VECTOR2* THIS$1, struct $7VECTOR2* V2$1 )
{
 label$155:;
 *(double*)THIS$1 = *(double*)THIS$1 - *(double*)V2$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) - *(double*)((uint8*)V2$1 + 8ll);
 label$156:;
}

void _ZN7VECTOR2mLERS_( struct $7VECTOR2* THIS$1, struct $7VECTOR2* V2$1 )
{
 label$157:;
 *(double*)THIS$1 = *(double*)THIS$1 * *(double*)V2$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) * *(double*)((uint8*)V2$1 + 8ll);
 label$158:;
}

void _ZN7VECTOR2dVERS_( struct $7VECTOR2* THIS$1, struct $7VECTOR2* V2$1 )
{
 label$159:;
 *(double*)THIS$1 = *(double*)THIS$1 / *(double*)V2$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) / *(double*)((uint8*)V2$1 + 8ll);
 label$160:;
}

struct $7VECTOR2* _ZN7VECTOR22XXEv( struct $7VECTOR2* tmp$704$1, struct $7VECTOR2* THIS$1 )
{
 label$161:;
 _ZN7VECTOR2C1Edd( tmp$704$1, *(double*)THIS$1, *(double*)THIS$1 );
 goto label$162;
 label$162:;
 return tmp$704$1;
}

struct $7VECTOR2* _ZN7VECTOR22XYEv( struct $7VECTOR2* tmp$706$1, struct $7VECTOR2* THIS$1 )
{
 label$163:;
 _ZN7VECTOR2C1Edd( tmp$706$1, *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 8ll) );
 goto label$164;
 label$164:;
 return tmp$706$1;
}

struct $7VECTOR2* _ZN7VECTOR22YXEv( struct $7VECTOR2* tmp$708$1, struct $7VECTOR2* THIS$1 )
{
 label$165:;
 _ZN7VECTOR2C1Edd( tmp$708$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)THIS$1 );
 goto label$166;
 label$166:;
 return tmp$708$1;
}

struct $7VECTOR2* _ZN7VECTOR22YYEv( struct $7VECTOR2* tmp$710$1, struct $7VECTOR2* THIS$1 )
{
 label$167:;
 _ZN7VECTOR2C1Edd( tmp$710$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)((uint8*)THIS$1 + 8ll) );
 goto label$168;
 label$168:;
 return tmp$710$1;
}

struct $7VECTOR2* _ZngR7VECTOR2( struct $7VECTOR2* tmp$712$1, struct $7VECTOR2* L$1 )
{
 label$169:;
 _ZN7VECTOR2C1Edd( tmp$712$1, -(*(double*)L$1), -(*(double*)((uint8*)L$1 + 8ll)) );
 goto label$170;
 label$170:;
 return tmp$712$1;
}

struct $7VECTOR2* _ZplR7VECTOR2S0_( struct $7VECTOR2* tmp$714$1, struct $7VECTOR2* L$1, struct $7VECTOR2* R$1 )
{
 label$171:;
 _ZN7VECTOR2C1Edd( tmp$714$1, *(double*)L$1 + *(double*)R$1, *(double*)((uint8*)L$1 + 8ll) + *(double*)((uint8*)R$1 + 8ll) );
 goto label$172;
 label$172:;
 return tmp$714$1;
}

struct $7VECTOR2* _ZplR7VECTOR2Rd( struct $7VECTOR2* tmp$716$1, struct $7VECTOR2* L$1, double* R$1 )
{
 label$173:;
 _ZN7VECTOR2C1Edd( tmp$716$1, *(double*)L$1 + *R$1, *(double*)((uint8*)L$1 + 8ll) + *R$1 );
 goto label$174;
 label$174:;
 return tmp$716$1;
}

struct $7VECTOR2* _ZplRdR7VECTOR2( struct $7VECTOR2* tmp$718$1, double* L$1, struct $7VECTOR2* R$1 )
{
 label$175:;
 _ZN7VECTOR2C1Edd( tmp$718$1, *(double*)R$1 + *L$1, *(double*)((uint8*)R$1 + 8ll) + *L$1 );
 goto label$176;
 label$176:;
 return tmp$718$1;
}

struct $7VECTOR2* _ZmiR7VECTOR2S0_( struct $7VECTOR2* tmp$720$1, struct $7VECTOR2* L$1, struct $7VECTOR2* R$1 )
{
 label$177:;
 _ZN7VECTOR2C1Edd( tmp$720$1, *(double*)L$1 - *(double*)R$1, *(double*)((uint8*)L$1 + 8ll) - *(double*)((uint8*)R$1 + 8ll) );
 goto label$178;
 label$178:;
 return tmp$720$1;
}

struct $7VECTOR2* _ZmiR7VECTOR2Rd( struct $7VECTOR2* tmp$722$1, struct $7VECTOR2* L$1, double* R$1 )
{
 label$179:;
 _ZN7VECTOR2C1Edd( tmp$722$1, *(double*)L$1 - *R$1, *(double*)((uint8*)L$1 + 8ll) - *R$1 );
 goto label$180;
 label$180:;
 return tmp$722$1;
}

struct $7VECTOR2* _ZmiRdR7VECTOR2( struct $7VECTOR2* tmp$724$1, double* L$1, struct $7VECTOR2* R$1 )
{
 label$181:;
 _ZN7VECTOR2C1Edd( tmp$724$1, *(double*)R$1 - *L$1, *(double*)((uint8*)R$1 + 8ll) - *L$1 );
 goto label$182;
 label$182:;
 return tmp$724$1;
}

struct $7VECTOR2* _ZmlR7VECTOR2S0_( struct $7VECTOR2* tmp$726$1, struct $7VECTOR2* L$1, struct $7VECTOR2* R$1 )
{
 label$183:;
 _ZN7VECTOR2C1Edd( tmp$726$1, *(double*)L$1 * *(double*)R$1, *(double*)((uint8*)L$1 + 8ll) * *(double*)((uint8*)R$1 + 8ll) );
 goto label$184;
 label$184:;
 return tmp$726$1;
}

struct $7VECTOR2* _ZmlR7VECTOR2Rd( struct $7VECTOR2* tmp$728$1, struct $7VECTOR2* L$1, double* R$1 )
{
 label$185:;
 _ZN7VECTOR2C1Edd( tmp$728$1, *(double*)L$1 * *R$1, *(double*)((uint8*)L$1 + 8ll) * *R$1 );
 goto label$186;
 label$186:;
 return tmp$728$1;
}

struct $7VECTOR2* _ZmlRdR7VECTOR2( struct $7VECTOR2* tmp$730$1, double* L$1, struct $7VECTOR2* R$1 )
{
 label$187:;
 _ZN7VECTOR2C1Edd( tmp$730$1, *L$1 * *(double*)R$1, *L$1 * *(double*)((uint8*)R$1 + 8ll) );
 goto label$188;
 label$188:;
 return tmp$730$1;
}

struct $7VECTOR2* _ZdvR7VECTOR2S0_( struct $7VECTOR2* tmp$732$1, struct $7VECTOR2* L$1, struct $7VECTOR2* R$1 )
{
 label$189:;
 _ZN7VECTOR2C1Edd( tmp$732$1, *(double*)L$1 / *(double*)R$1, *(double*)((uint8*)L$1 + 8ll) / *(double*)((uint8*)R$1 + 8ll) );
 goto label$190;
 label$190:;
 return tmp$732$1;
}

int64 _ZeqR7VECTOR2S0_( struct $7VECTOR2* L$1, struct $7VECTOR2* R$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$191:;
 if( ((((int64)__builtin_nearbyint( *(double*)L$1 )) ^ ((int64)__builtin_nearbyint( *(double*)R$1 ))) | (((int64)__builtin_nearbyint( *(double*)((uint8*)L$1 + 8ll) )) ^ ((int64)__builtin_nearbyint( *(double*)((uint8*)R$1 + 8ll) )))) == 0ll ) goto label$194;
 {
  fb$result$1 = 0ll;
  goto label$192;
  label$194:;
 }
 fb$result$1 = -1ll;
 goto label$192;
 label$192:;
 return fb$result$1;
}

int64 _ZneR7VECTOR2S0_( struct $7VECTOR2* L$1, struct $7VECTOR2* R$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$195:;
 if( ((((int64)__builtin_nearbyint( *(double*)L$1 )) ^ ((int64)__builtin_nearbyint( *(double*)R$1 ))) | (((int64)__builtin_nearbyint( *(double*)((uint8*)L$1 + 8ll) )) ^ ((int64)__builtin_nearbyint( *(double*)((uint8*)R$1 + 8ll) )))) == 0ll ) goto label$198;
 {
  fb$result$1 = -1ll;
  goto label$196;
  label$198:;
 }
 fb$result$1 = 0ll;
 goto label$196;
 label$196:;
 return fb$result$1;
}

void _ZN7VECTOR3C1Ev( struct $7VECTOR3* THIS$1 )
{
 __builtin_memset( (double*)THIS$1, 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 8ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 16ll), 0, 8ll );
 label$199:;
 label$200:;
}

void _ZN7VECTOR3C1Ed( struct $7VECTOR3* THIS$1, double PXYZ$1 )
{
 label$201:;
 __builtin_memset( (double*)THIS$1, 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 8ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 16ll), 0, 8ll );
 *(double*)THIS$1 = PXYZ$1;
 *(double*)((uint8*)THIS$1 + 8ll) = PXYZ$1;
 *(double*)((uint8*)THIS$1 + 16ll) = PXYZ$1;
 label$202:;
}

void _ZN7VECTOR3C1Eddd( struct $7VECTOR3* THIS$1, double PX$1, double PY$1, double PZ$1 )
{
 label$203:;
 __builtin_memset( (double*)THIS$1, 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 8ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 16ll), 0, 8ll );
 *(double*)THIS$1 = PX$1;
 *(double*)((uint8*)THIS$1 + 8ll) = PY$1;
 *(double*)((uint8*)THIS$1 + 16ll) = PZ$1;
 label$204:;
}

void _ZN7VECTOR3C1ER7VECTOR2d( struct $7VECTOR3* THIS$1, struct $7VECTOR2* V2$1, double PZ$1 )
{
 label$205:;
 __builtin_memset( (double*)THIS$1, 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 8ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 16ll), 0, 8ll );
 *(double*)THIS$1 = *(double*)V2$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)V2$1 + 8ll);
 *(double*)((uint8*)THIS$1 + 16ll) = PZ$1;
 label$206:;
}

void _ZN7VECTOR3C1EdR7VECTOR2( struct $7VECTOR3* THIS$1, double PX$1, struct $7VECTOR2* V2$1 )
{
 label$207:;
 __builtin_memset( (double*)THIS$1, 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 8ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 16ll), 0, 8ll );
 *(double*)THIS$1 = PX$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)V2$1;
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)V2$1 + 8ll);
 label$208:;
}

void _ZN7VECTOR3C1ERS_( struct $7VECTOR3* THIS$1, struct $7VECTOR3* V3$1 )
{
 label$209:;
 __builtin_memset( (double*)THIS$1, 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 8ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 16ll), 0, 8ll );
 *(double*)THIS$1 = *(double*)V3$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)V3$1 + 8ll);
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)V3$1 + 16ll);
 label$210:;
}

void _ZN7VECTOR3aSEd( struct $7VECTOR3* THIS$1, double PXYZ$1 )
{
 label$211:;
 *(double*)THIS$1 = PXYZ$1;
 *(double*)((uint8*)THIS$1 + 8ll) = PXYZ$1;
 *(double*)((uint8*)THIS$1 + 16ll) = PXYZ$1;
 label$212:;
}

void _ZN7VECTOR3aSER7VECTOR2( struct $7VECTOR3* THIS$1, struct $7VECTOR2* P$1 )
{
 label$213:;
 *(double*)THIS$1 = *(double*)P$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)P$1 + 8ll);
 *(double*)((uint8*)THIS$1 + 16ll) = 0x1.p+0;
 label$214:;
}

void _ZN7VECTOR3aSERS_( struct $7VECTOR3* THIS$1, struct $7VECTOR3* P$1 )
{
 label$215:;
 *(double*)THIS$1 = *(double*)P$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)P$1 + 8ll);
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)P$1 + 16ll);
 label$216:;
}

FBSTRING* _ZN7VECTOR3cv8FBSTRINGEv( struct $7VECTOR3* THIS$1 )
{
 FBSTRING TMP$737$1;
 FBSTRING TMP$738$1;
 FBSTRING TMP$739$1;
 FBSTRING TMP$740$1;
 FBSTRING TMP$741$1;
 FBSTRING TMP$742$1;
 FBSTRING fb$result$1;
 __builtin_memset( &fb$result$1, 0, 24ll );
 label$217:;
 FBSTRING* vr$2 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 16ll) );
 FBSTRING* vr$4 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 8ll) );
 FBSTRING* vr$6 = fb_DoubleToStr( *(double*)THIS$1 );
 __builtin_memset( &TMP$737$1, 0, 24ll );
 FBSTRING* vr$9 = fb_StrConcat( &TMP$737$1, (void*)"(", 2ll, (void*)vr$6, -1ll );
 __builtin_memset( &TMP$738$1, 0, 24ll );
 FBSTRING* vr$12 = fb_StrConcat( &TMP$738$1, (void*)vr$9, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$739$1, 0, 24ll );
 FBSTRING* vr$15 = fb_StrConcat( &TMP$739$1, (void*)vr$12, -1ll, (void*)vr$4, -1ll );
 __builtin_memset( &TMP$740$1, 0, 24ll );
 FBSTRING* vr$18 = fb_StrConcat( &TMP$740$1, (void*)vr$15, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$741$1, 0, 24ll );
 FBSTRING* vr$21 = fb_StrConcat( &TMP$741$1, (void*)vr$18, -1ll, (void*)vr$2, -1ll );
 __builtin_memset( &TMP$742$1, 0, 24ll );
 FBSTRING* vr$24 = fb_StrConcat( &TMP$742$1, (void*)vr$21, -1ll, (void*)")", 2ll );
 fb_StrInit( (void*)&fb$result$1, -1ll, (void*)vr$24, -1ll, 0 );
 goto label$218;
 label$218:;
 FBSTRING* vr$27 = fb_StrAllocTempResult( (FBSTRING*)&fb$result$1 );
 return vr$27;
}

uint32 _ZN7VECTOR3cvjEv( struct $7VECTOR3* THIS$1 )
{
 uint32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$219:;
 uint32 T$1;
 uint32 A$1;
 A$1 = 255u;
 A$1 = (uint32)((int64)A$1 << (8ll & 63ll));
 if( *(double*)THIS$1 >= 0x0p+0 ) goto label$222;
 {
 }
 goto label$221;
 label$222:;
 if( *(double*)THIS$1 <= 0x1.p+0 ) goto label$223;
 {
  A$1 = (uint32)((int64)A$1 | 255ll);
 }
 goto label$221;
 label$223:;
 {
  T$1 = (uint32)((int64)__builtin_nearbyint( *(double*)THIS$1 * 0x1.FEp+7 ));
  A$1 = (uint32)((int64)A$1 | (int64)T$1);
 }
 label$221:;
 A$1 = (uint32)((int64)A$1 << (8ll & 63ll));
 if( *(double*)((uint8*)THIS$1 + 8ll) >= 0x0p+0 ) goto label$225;
 {
 }
 goto label$224;
 label$225:;
 if( *(double*)((uint8*)THIS$1 + 8ll) <= 0x1.p+0 ) goto label$226;
 {
  A$1 = (uint32)((int64)A$1 | 255ll);
 }
 goto label$224;
 label$226:;
 {
  T$1 = (uint32)((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 8ll) * 0x1.FEp+7 ));
  A$1 = (uint32)((int64)A$1 | (int64)T$1);
 }
 label$224:;
 A$1 = (uint32)((int64)A$1 << (8ll & 63ll));
 if( *(double*)((uint8*)THIS$1 + 16ll) >= 0x0p+0 ) goto label$228;
 {
 }
 goto label$227;
 label$228:;
 if( *(double*)((uint8*)THIS$1 + 16ll) <= 0x1.p+0 ) goto label$229;
 {
  A$1 = (uint32)((int64)A$1 | 255ll);
 }
 goto label$227;
 label$229:;
 {
  T$1 = (uint32)((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 16ll) * 0x1.FEp+7 ));
  A$1 = (uint32)((int64)A$1 | (int64)T$1);
 }
 label$227:;
 fb$result$1 = A$1;
 goto label$220;
 label$220:;
 return fb$result$1;
}

void _ZN7VECTOR3pLEd( struct $7VECTOR3* THIS$1, double V$1 )
{
 label$230:;
 *(double*)THIS$1 = *(double*)THIS$1 + V$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) + V$1;
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)THIS$1 + 16ll) + V$1;
 label$231:;
}

void _ZN7VECTOR3mIEd( struct $7VECTOR3* THIS$1, double V$1 )
{
 label$232:;
 *(double*)THIS$1 = *(double*)THIS$1 - V$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) - V$1;
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)THIS$1 + 16ll) - V$1;
 label$233:;
}

void _ZN7VECTOR3mLEd( struct $7VECTOR3* THIS$1, double V$1 )
{
 label$234:;
 *(double*)THIS$1 = *(double*)THIS$1 * V$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) * V$1;
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)THIS$1 + 16ll) * V$1;
 label$235:;
}

void _ZN7VECTOR3dVEd( struct $7VECTOR3* THIS$1, double V$1 )
{
 label$236:;
 *(double*)THIS$1 = *(double*)THIS$1 / V$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) / V$1;
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)THIS$1 + 16ll) / V$1;
 label$237:;
}

void _ZN7VECTOR3pLERS_( struct $7VECTOR3* THIS$1, struct $7VECTOR3* V3$1 )
{
 label$238:;
 *(double*)THIS$1 = *(double*)THIS$1 + *(double*)V3$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) + *(double*)((uint8*)V3$1 + 8ll);
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)THIS$1 + 16ll) + *(double*)((uint8*)V3$1 + 16ll);
 label$239:;
}

void _ZN7VECTOR3mIERS_( struct $7VECTOR3* THIS$1, struct $7VECTOR3* V3$1 )
{
 label$240:;
 *(double*)THIS$1 = *(double*)THIS$1 - *(double*)V3$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) - *(double*)((uint8*)V3$1 + 8ll);
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)THIS$1 + 16ll) - *(double*)((uint8*)V3$1 + 16ll);
 label$241:;
}

void _ZN7VECTOR3mLERS_( struct $7VECTOR3* THIS$1, struct $7VECTOR3* V3$1 )
{
 label$242:;
 *(double*)THIS$1 = *(double*)THIS$1 * *(double*)V3$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) * *(double*)((uint8*)V3$1 + 8ll);
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)THIS$1 + 16ll) * *(double*)((uint8*)V3$1 + 16ll);
 label$243:;
}

void _ZN7VECTOR3dVERS_( struct $7VECTOR3* THIS$1, struct $7VECTOR3* V3$1 )
{
 label$244:;
 *(double*)THIS$1 = *(double*)THIS$1 / *(double*)V3$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) / *(double*)((uint8*)V3$1 + 8ll);
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)THIS$1 + 16ll) / *(double*)((uint8*)V3$1 + 16ll);
 label$245:;
}

struct $7VECTOR2* _ZN7VECTOR32XXEv( struct $7VECTOR2* tmp$743$1, struct $7VECTOR3* THIS$1 )
{
 label$246:;
 _ZN7VECTOR2C1Edd( tmp$743$1, *(double*)THIS$1, *(double*)THIS$1 );
 goto label$247;
 label$247:;
 return tmp$743$1;
}

struct $7VECTOR2* _ZN7VECTOR32XYEv( struct $7VECTOR2* tmp$745$1, struct $7VECTOR3* THIS$1 )
{
 label$248:;
 _ZN7VECTOR2C1Edd( tmp$745$1, *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 8ll) );
 goto label$249;
 label$249:;
 return tmp$745$1;
}

struct $7VECTOR2* _ZN7VECTOR32XZEv( struct $7VECTOR2* tmp$747$1, struct $7VECTOR3* THIS$1 )
{
 label$250:;
 _ZN7VECTOR2C1Edd( tmp$747$1, *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 16ll) );
 goto label$251;
 label$251:;
 return tmp$747$1;
}

struct $7VECTOR2* _ZN7VECTOR32YXEv( struct $7VECTOR2* tmp$749$1, struct $7VECTOR3* THIS$1 )
{
 label$252:;
 _ZN7VECTOR2C1Edd( tmp$749$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)THIS$1 );
 goto label$253;
 label$253:;
 return tmp$749$1;
}

struct $7VECTOR2* _ZN7VECTOR32YYEv( struct $7VECTOR2* tmp$751$1, struct $7VECTOR3* THIS$1 )
{
 label$254:;
 _ZN7VECTOR2C1Edd( tmp$751$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)((uint8*)THIS$1 + 8ll) );
 goto label$255;
 label$255:;
 return tmp$751$1;
}

struct $7VECTOR2* _ZN7VECTOR32YZEv( struct $7VECTOR2* tmp$753$1, struct $7VECTOR3* THIS$1 )
{
 label$256:;
 _ZN7VECTOR2C1Edd( tmp$753$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)((uint8*)THIS$1 + 16ll) );
 goto label$257;
 label$257:;
 return tmp$753$1;
}

struct $7VECTOR2* _ZN7VECTOR32ZXEv( struct $7VECTOR2* tmp$755$1, struct $7VECTOR3* THIS$1 )
{
 label$258:;
 _ZN7VECTOR2C1Edd( tmp$755$1, *(double*)((uint8*)THIS$1 + 16ll), *(double*)THIS$1 );
 goto label$259;
 label$259:;
 return tmp$755$1;
}

struct $7VECTOR2* _ZN7VECTOR32ZYEv( struct $7VECTOR2* tmp$757$1, struct $7VECTOR3* THIS$1 )
{
 label$260:;
 _ZN7VECTOR2C1Edd( tmp$757$1, *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 8ll) );
 goto label$261;
 label$261:;
 return tmp$757$1;
}

struct $7VECTOR2* _ZN7VECTOR32ZZEv( struct $7VECTOR2* tmp$759$1, struct $7VECTOR3* THIS$1 )
{
 label$262:;
 _ZN7VECTOR2C1Edd( tmp$759$1, *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 16ll) );
 goto label$263;
 label$263:;
 return tmp$759$1;
}

struct $7VECTOR3* _ZN7VECTOR33XXXEv( struct $7VECTOR3* tmp$761$1, struct $7VECTOR3* THIS$1 )
{
 label$264:;
 _ZN7VECTOR3C1Eddd( tmp$761$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1 );
 goto label$265;
 label$265:;
 return tmp$761$1;
}

struct $7VECTOR3* _ZN7VECTOR33XXYEv( struct $7VECTOR3* tmp$763$1, struct $7VECTOR3* THIS$1 )
{
 label$266:;
 _ZN7VECTOR3C1Eddd( tmp$763$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 8ll) );
 goto label$267;
 label$267:;
 return tmp$763$1;
}

struct $7VECTOR3* _ZN7VECTOR33XXZEv( struct $7VECTOR3* tmp$765$1, struct $7VECTOR3* THIS$1 )
{
 label$268:;
 _ZN7VECTOR3C1Eddd( tmp$765$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 16ll) );
 goto label$269;
 label$269:;
 return tmp$765$1;
}

struct $7VECTOR3* _ZN7VECTOR33XYXEv( struct $7VECTOR3* tmp$767$1, struct $7VECTOR3* THIS$1 )
{
 label$270:;
 _ZN7VECTOR3C1Eddd( tmp$767$1, *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)THIS$1 );
 goto label$271;
 label$271:;
 return tmp$767$1;
}

struct $7VECTOR3* _ZN7VECTOR33XYYEv( struct $7VECTOR3* tmp$769$1, struct $7VECTOR3* THIS$1 )
{
 label$272:;
 _ZN7VECTOR3C1Eddd( tmp$769$1, *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)((uint8*)THIS$1 + 8ll) );
 goto label$273;
 label$273:;
 return tmp$769$1;
}

struct $7VECTOR3* _ZN7VECTOR33XYZEv( struct $7VECTOR3* tmp$771$1, struct $7VECTOR3* THIS$1 )
{
 label$274:;
 _ZN7VECTOR3C1Eddd( tmp$771$1, *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)((uint8*)THIS$1 + 16ll) );
 goto label$275;
 label$275:;
 return tmp$771$1;
}

struct $7VECTOR3* _ZN7VECTOR33XZXEv( struct $7VECTOR3* tmp$773$1, struct $7VECTOR3* THIS$1 )
{
 label$276:;
 _ZN7VECTOR3C1Eddd( tmp$773$1, *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 16ll), *(double*)THIS$1 );
 goto label$277;
 label$277:;
 return tmp$773$1;
}

struct $7VECTOR3* _ZN7VECTOR33XZYEv( struct $7VECTOR3* tmp$775$1, struct $7VECTOR3* THIS$1 )
{
 label$278:;
 _ZN7VECTOR3C1Eddd( tmp$775$1, *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 8ll) );
 goto label$279;
 label$279:;
 return tmp$775$1;
}

struct $7VECTOR3* _ZN7VECTOR33XZZEv( struct $7VECTOR3* tmp$777$1, struct $7VECTOR3* THIS$1 )
{
 label$280:;
 _ZN7VECTOR3C1Eddd( tmp$777$1, *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 16ll) );
 goto label$281;
 label$281:;
 return tmp$777$1;
}

struct $7VECTOR3* _ZN7VECTOR33YXXEv( struct $7VECTOR3* tmp$779$1, struct $7VECTOR3* THIS$1 )
{
 label$282:;
 _ZN7VECTOR3C1Eddd( tmp$779$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)THIS$1, *(double*)THIS$1 );
 goto label$283;
 label$283:;
 return tmp$779$1;
}

struct $7VECTOR3* _ZN7VECTOR33YXYEv( struct $7VECTOR3* tmp$781$1, struct $7VECTOR3* THIS$1 )
{
 label$284:;
 _ZN7VECTOR3C1Eddd( tmp$781$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 8ll) );
 goto label$285;
 label$285:;
 return tmp$781$1;
}

struct $7VECTOR3* _ZN7VECTOR33YXZEv( struct $7VECTOR3* tmp$783$1, struct $7VECTOR3* THIS$1 )
{
 label$286:;
 _ZN7VECTOR3C1Eddd( tmp$783$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 16ll) );
 goto label$287;
 label$287:;
 return tmp$783$1;
}

struct $7VECTOR3* _ZN7VECTOR33YYXEv( struct $7VECTOR3* tmp$785$1, struct $7VECTOR3* THIS$1 )
{
 label$288:;
 _ZN7VECTOR3C1Eddd( tmp$785$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)((uint8*)THIS$1 + 8ll), *(double*)THIS$1 );
 goto label$289;
 label$289:;
 return tmp$785$1;
}

struct $7VECTOR3* _ZN7VECTOR33YYYEv( struct $7VECTOR3* tmp$787$1, struct $7VECTOR3* THIS$1 )
{
 label$290:;
 _ZN7VECTOR3C1Eddd( tmp$787$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)((uint8*)THIS$1 + 8ll), *(double*)((uint8*)THIS$1 + 8ll) );
 goto label$291;
 label$291:;
 return tmp$787$1;
}

struct $7VECTOR3* _ZN7VECTOR33YYZEv( struct $7VECTOR3* tmp$789$1, struct $7VECTOR3* THIS$1 )
{
 label$292:;
 _ZN7VECTOR3C1Eddd( tmp$789$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)((uint8*)THIS$1 + 8ll), *(double*)((uint8*)THIS$1 + 16ll) );
 goto label$293;
 label$293:;
 return tmp$789$1;
}

struct $7VECTOR3* _ZN7VECTOR33YZXEv( struct $7VECTOR3* tmp$791$1, struct $7VECTOR3* THIS$1 )
{
 label$294:;
 _ZN7VECTOR3C1Eddd( tmp$791$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)((uint8*)THIS$1 + 16ll), *(double*)THIS$1 );
 goto label$295;
 label$295:;
 return tmp$791$1;
}

struct $7VECTOR3* _ZN7VECTOR33YZYEv( struct $7VECTOR3* tmp$793$1, struct $7VECTOR3* THIS$1 )
{
 label$296:;
 _ZN7VECTOR3C1Eddd( tmp$793$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 8ll) );
 goto label$297;
 label$297:;
 return tmp$793$1;
}

struct $7VECTOR3* _ZN7VECTOR33YZZEv( struct $7VECTOR3* tmp$795$1, struct $7VECTOR3* THIS$1 )
{
 label$298:;
 _ZN7VECTOR3C1Eddd( tmp$795$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 16ll) );
 goto label$299;
 label$299:;
 return tmp$795$1;
}

struct $7VECTOR3* _ZN7VECTOR33ZXXEv( struct $7VECTOR3* tmp$797$1, struct $7VECTOR3* THIS$1 )
{
 label$300:;
 _ZN7VECTOR3C1Eddd( tmp$797$1, *(double*)((uint8*)THIS$1 + 16ll), *(double*)THIS$1, *(double*)THIS$1 );
 goto label$301;
 label$301:;
 return tmp$797$1;
}

struct $7VECTOR3* _ZN7VECTOR33ZXYEv( struct $7VECTOR3* tmp$799$1, struct $7VECTOR3* THIS$1 )
{
 label$302:;
 _ZN7VECTOR3C1Eddd( tmp$799$1, *(double*)((uint8*)THIS$1 + 16ll), *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 8ll) );
 goto label$303;
 label$303:;
 return tmp$799$1;
}

struct $7VECTOR3* _ZN7VECTOR33ZXZEv( struct $7VECTOR3* tmp$801$1, struct $7VECTOR3* THIS$1 )
{
 label$304:;
 _ZN7VECTOR3C1Eddd( tmp$801$1, *(double*)((uint8*)THIS$1 + 16ll), *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 16ll) );
 goto label$305;
 label$305:;
 return tmp$801$1;
}

struct $7VECTOR3* _ZN7VECTOR33ZYXEv( struct $7VECTOR3* tmp$803$1, struct $7VECTOR3* THIS$1 )
{
 label$306:;
 _ZN7VECTOR3C1Eddd( tmp$803$1, *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 8ll), *(double*)THIS$1 );
 goto label$307;
 label$307:;
 return tmp$803$1;
}

struct $7VECTOR3* _ZN7VECTOR33ZYYEv( struct $7VECTOR3* tmp$805$1, struct $7VECTOR3* THIS$1 )
{
 label$308:;
 _ZN7VECTOR3C1Eddd( tmp$805$1, *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 8ll), *(double*)((uint8*)THIS$1 + 8ll) );
 goto label$309;
 label$309:;
 return tmp$805$1;
}

struct $7VECTOR3* _ZN7VECTOR33ZYZEv( struct $7VECTOR3* tmp$807$1, struct $7VECTOR3* THIS$1 )
{
 label$310:;
 _ZN7VECTOR3C1Eddd( tmp$807$1, *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 8ll), *(double*)((uint8*)THIS$1 + 16ll) );
 goto label$311;
 label$311:;
 return tmp$807$1;
}

struct $7VECTOR3* _ZN7VECTOR33ZZXEv( struct $7VECTOR3* tmp$809$1, struct $7VECTOR3* THIS$1 )
{
 label$312:;
 _ZN7VECTOR3C1Eddd( tmp$809$1, *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 16ll), *(double*)THIS$1 );
 goto label$313;
 label$313:;
 return tmp$809$1;
}

struct $7VECTOR3* _ZN7VECTOR33ZZYEv( struct $7VECTOR3* tmp$811$1, struct $7VECTOR3* THIS$1 )
{
 label$314:;
 _ZN7VECTOR3C1Eddd( tmp$811$1, *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 8ll) );
 goto label$315;
 label$315:;
 return tmp$811$1;
}

struct $7VECTOR3* _ZN7VECTOR33ZZZEv( struct $7VECTOR3* tmp$813$1, struct $7VECTOR3* THIS$1 )
{
 label$316:;
 _ZN7VECTOR3C1Eddd( tmp$813$1, *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 16ll) );
 goto label$317;
 label$317:;
 return tmp$813$1;
}

struct $7VECTOR3* _ZN7VECTOR33RGBEv( struct $7VECTOR3* tmp$815$1, struct $7VECTOR3* THIS$1 )
{
 label$318:;
 _ZN7VECTOR3C1Eddd( tmp$815$1, *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)((uint8*)THIS$1 + 16ll) );
 goto label$319;
 label$319:;
 return tmp$815$1;
}

struct $7VECTOR3* _ZngR7VECTOR3( struct $7VECTOR3* tmp$817$1, struct $7VECTOR3* L$1 )
{
 label$320:;
 _ZN7VECTOR3C1Eddd( tmp$817$1, -(*(double*)L$1), -(*(double*)((uint8*)L$1 + 8ll)), -(*(double*)((uint8*)L$1 + 16ll)) );
 goto label$321;
 label$321:;
 return tmp$817$1;
}

struct $7VECTOR3* _ZplR7VECTOR3d( struct $7VECTOR3* tmp$819$1, struct $7VECTOR3* L$1, double R$1 )
{
 label$322:;
 _ZN7VECTOR3C1Eddd( tmp$819$1, *(double*)L$1 + R$1, *(double*)((uint8*)L$1 + 8ll) + R$1, *(double*)((uint8*)L$1 + 16ll) + R$1 );
 goto label$323;
 label$323:;
 return tmp$819$1;
}

struct $7VECTOR3* _ZpldR7VECTOR3( struct $7VECTOR3* tmp$821$1, double L$1, struct $7VECTOR3* R$1 )
{
 label$324:;
 _ZN7VECTOR3C1Eddd( tmp$821$1, *(double*)R$1 + L$1, *(double*)((uint8*)R$1 + 8ll) + L$1, *(double*)((uint8*)R$1 + 16ll) + L$1 );
 goto label$325;
 label$325:;
 return tmp$821$1;
}

struct $7VECTOR3* _ZmiR7VECTOR3d( struct $7VECTOR3* tmp$823$1, struct $7VECTOR3* L$1, double R$1 )
{
 label$326:;
 _ZN7VECTOR3C1Eddd( tmp$823$1, *(double*)L$1 - R$1, *(double*)((uint8*)L$1 + 8ll) - R$1, *(double*)((uint8*)L$1 + 16ll) - R$1 );
 goto label$327;
 label$327:;
 return tmp$823$1;
}

struct $7VECTOR3* _ZmidR7VECTOR3( struct $7VECTOR3* tmp$825$1, double L$1, struct $7VECTOR3* R$1 )
{
 label$328:;
 _ZN7VECTOR3C1Eddd( tmp$825$1, *(double*)R$1 - L$1, *(double*)((uint8*)R$1 + 8ll) - L$1, *(double*)((uint8*)R$1 + 16ll) - L$1 );
 goto label$329;
 label$329:;
 return tmp$825$1;
}

struct $7VECTOR3* _ZmlR7VECTOR3d( struct $7VECTOR3* tmp$827$1, struct $7VECTOR3* L$1, double R$1 )
{
 label$330:;
 _ZN7VECTOR3C1Eddd( tmp$827$1, *(double*)L$1 * R$1, *(double*)((uint8*)L$1 + 8ll) * R$1, *(double*)((uint8*)L$1 + 16ll) * R$1 );
 goto label$331;
 label$331:;
 return tmp$827$1;
}

struct $7VECTOR3* _ZmldR7VECTOR3( struct $7VECTOR3* tmp$829$1, double L$1, struct $7VECTOR3* R$1 )
{
 label$332:;
 _ZN7VECTOR3C1Eddd( tmp$829$1, *(double*)R$1 * L$1, *(double*)((uint8*)R$1 + 8ll) * L$1, *(double*)((uint8*)R$1 + 16ll) * L$1 );
 goto label$333;
 label$333:;
 return tmp$829$1;
}

struct $7VECTOR3* _ZdvR7VECTOR3d( struct $7VECTOR3* tmp$831$1, struct $7VECTOR3* L$1, double R$1 )
{
 label$334:;
 _ZN7VECTOR3C1Eddd( tmp$831$1, *(double*)L$1 / R$1, *(double*)((uint8*)L$1 + 8ll) / R$1, *(double*)((uint8*)L$1 + 16ll) / R$1 );
 goto label$335;
 label$335:;
 return tmp$831$1;
}

struct $7VECTOR3* _ZdvdR7VECTOR3( struct $7VECTOR3* tmp$833$1, double L$1, struct $7VECTOR3* R$1 )
{
 label$336:;
 _ZN7VECTOR3C1Eddd( tmp$833$1, *(double*)R$1 / L$1, *(double*)((uint8*)R$1 + 8ll) / L$1, *(double*)((uint8*)R$1 + 16ll) / L$1 );
 goto label$337;
 label$337:;
 return tmp$833$1;
}

struct $7VECTOR3* _ZplR7VECTOR3S0_( struct $7VECTOR3* tmp$835$1, struct $7VECTOR3* L$1, struct $7VECTOR3* R$1 )
{
 label$338:;
 _ZN7VECTOR3C1Eddd( tmp$835$1, *(double*)L$1 + *(double*)R$1, *(double*)((uint8*)L$1 + 8ll) + *(double*)((uint8*)R$1 + 8ll), *(double*)((uint8*)L$1 + 16ll) + *(double*)((uint8*)R$1 + 16ll) );
 goto label$339;
 label$339:;
 return tmp$835$1;
}

struct $7VECTOR3* _ZmiR7VECTOR3S0_( struct $7VECTOR3* tmp$837$1, struct $7VECTOR3* L$1, struct $7VECTOR3* R$1 )
{
 label$340:;
 _ZN7VECTOR3C1Eddd( tmp$837$1, *(double*)L$1 - *(double*)R$1, *(double*)((uint8*)L$1 + 8ll) - *(double*)((uint8*)R$1 + 8ll), *(double*)((uint8*)L$1 + 16ll) - *(double*)((uint8*)R$1 + 16ll) );
 goto label$341;
 label$341:;
 return tmp$837$1;
}

struct $7VECTOR3* _ZmlR7VECTOR3S0_( struct $7VECTOR3* tmp$839$1, struct $7VECTOR3* L$1, struct $7VECTOR3* R$1 )
{
 label$342:;
 _ZN7VECTOR3C1Eddd( tmp$839$1, *(double*)L$1 * *(double*)R$1, *(double*)((uint8*)L$1 + 8ll) * *(double*)((uint8*)R$1 + 8ll), *(double*)((uint8*)L$1 + 16ll) * *(double*)((uint8*)R$1 + 16ll) );
 goto label$343;
 label$343:;
 return tmp$839$1;
}

struct $7VECTOR3* _ZdvR7VECTOR3S0_( struct $7VECTOR3* tmp$841$1, struct $7VECTOR3* L$1, struct $7VECTOR3* R$1 )
{
 label$344:;
 _ZN7VECTOR3C1Eddd( tmp$841$1, *(double*)L$1 / *(double*)R$1, *(double*)((uint8*)L$1 + 8ll) / *(double*)((uint8*)R$1 + 8ll), *(double*)((uint8*)L$1 + 16ll) / *(double*)((uint8*)R$1 + 16ll) );
 goto label$345;
 label$345:;
 return tmp$841$1;
}

int64 _ZeqR7VECTOR3S0_( struct $7VECTOR3* L$1, struct $7VECTOR3* R$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$346:;
 if( (((((int64)__builtin_nearbyint( *(double*)L$1 )) ^ ((int64)__builtin_nearbyint( *(double*)R$1 ))) | (((int64)__builtin_nearbyint( *(double*)((uint8*)L$1 + 8ll) )) ^ ((int64)__builtin_nearbyint( *(double*)((uint8*)R$1 + 8ll) )))) | (((int64)__builtin_nearbyint( *(double*)((uint8*)L$1 + 16ll) )) ^ ((int64)__builtin_nearbyint( *(double*)((uint8*)R$1 + 16ll) )))) == 0ll ) goto label$349;
 {
  fb$result$1 = 0ll;
  goto label$347;
  label$349:;
 }
 fb$result$1 = -1ll;
 goto label$347;
 label$347:;
 return fb$result$1;
}

int64 _ZneR7VECTOR3S0_( struct $7VECTOR3* L$1, struct $7VECTOR3* R$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$350:;
 if( (((((int64)__builtin_nearbyint( *(double*)L$1 )) ^ ((int64)__builtin_nearbyint( *(double*)R$1 ))) | (((int64)__builtin_nearbyint( *(double*)((uint8*)L$1 + 8ll) )) ^ ((int64)__builtin_nearbyint( *(double*)((uint8*)R$1 + 8ll) )))) | (((int64)__builtin_nearbyint( *(double*)((uint8*)L$1 + 16ll) )) ^ ((int64)__builtin_nearbyint( *(double*)((uint8*)R$1 + 16ll) )))) == 0ll ) goto label$353;
 {
  fb$result$1 = -1ll;
  goto label$351;
  label$353:;
 }
 fb$result$1 = 0ll;
 goto label$351;
 label$351:;
 return fb$result$1;
}

void _ZN7VECTOR4C1Ev( struct $7VECTOR4* THIS$1 )
{
 label$354:;
 __builtin_memset( (double*)THIS$1, 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 8ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 16ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 24ll), 0, 8ll );
 *(double*)((uint8*)THIS$1 + 24ll) = 0x1.p+0;
 label$355:;
}

void _ZN7VECTOR4C1Edd( struct $7VECTOR4* THIS$1, double PXYZ$1, double PW$1 )
{
 label$356:;
 __builtin_memset( (double*)THIS$1, 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 8ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 16ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 24ll), 0, 8ll );
 *(double*)THIS$1 = PXYZ$1;
 *(double*)((uint8*)THIS$1 + 8ll) = PXYZ$1;
 *(double*)((uint8*)THIS$1 + 16ll) = PXYZ$1;
 *(double*)((uint8*)THIS$1 + 24ll) = PW$1;
 label$357:;
}

void _ZN7VECTOR4C1Edddd( struct $7VECTOR4* THIS$1, double PX$1, double PY$1, double PZ$1, double PW$1 )
{
 label$358:;
 __builtin_memset( (double*)THIS$1, 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 8ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 16ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 24ll), 0, 8ll );
 *(double*)THIS$1 = PX$1;
 *(double*)((uint8*)THIS$1 + 8ll) = PY$1;
 *(double*)((uint8*)THIS$1 + 16ll) = PZ$1;
 *(double*)((uint8*)THIS$1 + 24ll) = PW$1;
 label$359:;
}

void _ZN7VECTOR4C1ER7VECTOR2dd( struct $7VECTOR4* THIS$1, struct $7VECTOR2* V1$1, double PZ$1, double PW$1 )
{
 label$360:;
 __builtin_memset( (double*)THIS$1, 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 8ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 16ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 24ll), 0, 8ll );
 *(double*)THIS$1 = *(double*)V1$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)V1$1 + 8ll);
 *(double*)((uint8*)THIS$1 + 16ll) = PZ$1;
 *(double*)((uint8*)THIS$1 + 24ll) = PW$1;
 label$361:;
}

void _ZN7VECTOR4C1ER7VECTOR2S1_( struct $7VECTOR4* THIS$1, struct $7VECTOR2* V1$1, struct $7VECTOR2* V2$1 )
{
 label$362:;
 __builtin_memset( (double*)THIS$1, 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 8ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 16ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 24ll), 0, 8ll );
 *(double*)THIS$1 = *(double*)V1$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)V1$1 + 8ll);
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)V2$1;
 *(double*)((uint8*)THIS$1 + 24ll) = *(double*)((uint8*)V2$1 + 8ll);
 label$363:;
}

void _ZN7VECTOR4C1ER7VECTOR3d( struct $7VECTOR4* THIS$1, struct $7VECTOR3* V3$1, double PW$1 )
{
 label$364:;
 __builtin_memset( (double*)THIS$1, 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 8ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 16ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 24ll), 0, 8ll );
 *(double*)THIS$1 = *(double*)V3$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)V3$1 + 8ll);
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)V3$1 + 16ll);
 *(double*)((uint8*)THIS$1 + 24ll) = PW$1;
 label$365:;
}

void _ZN7VECTOR4C1EdR7VECTOR3( struct $7VECTOR4* THIS$1, double PX$1, struct $7VECTOR3* V3$1 )
{
 label$366:;
 __builtin_memset( (double*)THIS$1, 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 8ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 16ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 24ll), 0, 8ll );
 *(double*)THIS$1 = PX$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)V3$1;
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)V3$1 + 8ll);
 *(double*)((uint8*)THIS$1 + 24ll) = *(double*)((uint8*)V3$1 + 16ll);
 label$367:;
}

void _ZN7VECTOR4C1ERS_( struct $7VECTOR4* THIS$1, struct $7VECTOR4* V4$1 )
{
 label$368:;
 __builtin_memset( (double*)THIS$1, 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 8ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 16ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 24ll), 0, 8ll );
 *(double*)THIS$1 = *(double*)V4$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)V4$1 + 8ll);
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)V4$1 + 16ll);
 *(double*)((uint8*)THIS$1 + 24ll) = *(double*)((uint8*)V4$1 + 24ll);
 label$369:;
}

void _ZN7VECTOR4aSEd( struct $7VECTOR4* THIS$1, double PXYZW$1 )
{
 label$370:;
 *(double*)THIS$1 = PXYZW$1;
 *(double*)((uint8*)THIS$1 + 8ll) = PXYZW$1;
 *(double*)((uint8*)THIS$1 + 16ll) = PXYZW$1;
 *(double*)((uint8*)THIS$1 + 24ll) = PXYZW$1;
 label$371:;
}

void _ZN7VECTOR4aSER7VECTOR2( struct $7VECTOR4* THIS$1, struct $7VECTOR2* P$1 )
{
 label$372:;
 *(double*)THIS$1 = *(double*)P$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)P$1 + 8ll);
 *(double*)((uint8*)THIS$1 + 16ll) = 0x1.p+0;
 *(double*)((uint8*)THIS$1 + 24ll) = 0x1.p+0;
 label$373:;
}

void _ZN7VECTOR4aSER7VECTOR3( struct $7VECTOR4* THIS$1, struct $7VECTOR3* P$1 )
{
 label$374:;
 *(double*)THIS$1 = *(double*)P$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)P$1 + 8ll);
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)P$1 + 16ll);
 *(double*)((uint8*)THIS$1 + 24ll) = 0x1.p+0;
 label$375:;
}

void _ZN7VECTOR4aSERS_( struct $7VECTOR4* THIS$1, struct $7VECTOR4* P$1 )
{
 label$376:;
 *(double*)THIS$1 = *(double*)P$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)P$1 + 8ll);
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)P$1 + 16ll);
 *(double*)((uint8*)THIS$1 + 24ll) = *(double*)((uint8*)P$1 + 24ll);
 label$377:;
}

FBSTRING* _ZN7VECTOR4cv8FBSTRINGEv( struct $7VECTOR4* THIS$1 )
{
 FBSTRING TMP$847$1;
 FBSTRING TMP$848$1;
 FBSTRING TMP$849$1;
 FBSTRING TMP$850$1;
 FBSTRING TMP$851$1;
 FBSTRING TMP$852$1;
 FBSTRING TMP$853$1;
 FBSTRING TMP$854$1;
 FBSTRING fb$result$1;
 __builtin_memset( &fb$result$1, 0, 24ll );
 label$378:;
 FBSTRING* vr$2 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 24ll) );
 FBSTRING* vr$4 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 16ll) );
 FBSTRING* vr$6 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 8ll) );
 FBSTRING* vr$8 = fb_DoubleToStr( *(double*)THIS$1 );
 __builtin_memset( &TMP$847$1, 0, 24ll );
 FBSTRING* vr$11 = fb_StrConcat( &TMP$847$1, (void*)"(", 2ll, (void*)vr$8, -1ll );
 __builtin_memset( &TMP$848$1, 0, 24ll );
 FBSTRING* vr$14 = fb_StrConcat( &TMP$848$1, (void*)vr$11, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$849$1, 0, 24ll );
 FBSTRING* vr$17 = fb_StrConcat( &TMP$849$1, (void*)vr$14, -1ll, (void*)vr$6, -1ll );
 __builtin_memset( &TMP$850$1, 0, 24ll );
 FBSTRING* vr$20 = fb_StrConcat( &TMP$850$1, (void*)vr$17, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$851$1, 0, 24ll );
 FBSTRING* vr$23 = fb_StrConcat( &TMP$851$1, (void*)vr$20, -1ll, (void*)vr$4, -1ll );
 __builtin_memset( &TMP$852$1, 0, 24ll );
 FBSTRING* vr$26 = fb_StrConcat( &TMP$852$1, (void*)vr$23, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$853$1, 0, 24ll );
 FBSTRING* vr$29 = fb_StrConcat( &TMP$853$1, (void*)vr$26, -1ll, (void*)vr$2, -1ll );
 __builtin_memset( &TMP$854$1, 0, 24ll );
 FBSTRING* vr$32 = fb_StrConcat( &TMP$854$1, (void*)vr$29, -1ll, (void*)")", 2ll );
 fb_StrInit( (void*)&fb$result$1, -1ll, (void*)vr$32, -1ll, 0 );
 goto label$379;
 label$379:;
 FBSTRING* vr$35 = fb_StrAllocTempResult( (FBSTRING*)&fb$result$1 );
 return vr$35;
}

uint32 _ZN7VECTOR4cvjEv( struct $7VECTOR4* THIS$1 )
{
 uint32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$380:;
 uint32 C$1;
 __builtin_memset( &C$1, 0, 4ll );
 C$1 = (uint32)((int64)C$1 << (8ll & 63ll));
 if( *(double*)((uint8*)THIS$1 + 24ll) >= 0x1.010101010101p-8 ) goto label$383;
 {
 }
 goto label$382;
 label$383:;
 if( *(double*)((uint8*)THIS$1 + 24ll) <= 0x1.p+0 ) goto label$384;
 {
  C$1 = (uint32)((int64)C$1 | 255ll);
 }
 goto label$382;
 label$384:;
 {
  C$1 = (uint32)((int64)C$1 | ((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 24ll) * 0x1.FEp+7 )));
 }
 label$382:;
 C$1 = (uint32)((int64)C$1 << (8ll & 63ll));
 if( *(double*)THIS$1 >= 0x1.010101010101p-8 ) goto label$386;
 {
 }
 goto label$385;
 label$386:;
 if( *(double*)THIS$1 <= 0x1.p+0 ) goto label$387;
 {
  C$1 = (uint32)((int64)C$1 | 255ll);
 }
 goto label$385;
 label$387:;
 {
  C$1 = (uint32)((int64)C$1 | ((int64)__builtin_nearbyint( *(double*)THIS$1 * 0x1.FEp+7 )));
 }
 label$385:;
 C$1 = (uint32)((int64)C$1 << (8ll & 63ll));
 if( *(double*)((uint8*)THIS$1 + 8ll) >= 0x1.010101010101p-8 ) goto label$389;
 {
 }
 goto label$388;
 label$389:;
 if( *(double*)((uint8*)THIS$1 + 8ll) <= 0x1.p+0 ) goto label$390;
 {
  C$1 = (uint32)((int64)C$1 | 255ll);
 }
 goto label$388;
 label$390:;
 {
  C$1 = (uint32)((int64)C$1 | ((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 8ll) * 0x1.FEp+7 )));
 }
 label$388:;
 C$1 = (uint32)((int64)C$1 << (8ll & 63ll));
 if( *(double*)((uint8*)THIS$1 + 16ll) >= 0x1.010101010101p-8 ) goto label$392;
 {
 }
 goto label$391;
 label$392:;
 if( *(double*)((uint8*)THIS$1 + 16ll) <= 0x1.p+0 ) goto label$393;
 {
  C$1 = (uint32)((int64)C$1 | 255ll);
 }
 goto label$391;
 label$393:;
 {
  C$1 = (uint32)((int64)C$1 | ((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 16ll) * 0x1.FEp+7 )));
 }
 label$391:;
 fb$result$1 = C$1;
 goto label$381;
 label$381:;
 return fb$result$1;
}

void _ZN7VECTOR4pLEd( struct $7VECTOR4* THIS$1, double V$1 )
{
 label$394:;
 *(double*)THIS$1 = *(double*)THIS$1 + V$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) + V$1;
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)THIS$1 + 16ll) + V$1;
 *(double*)((uint8*)THIS$1 + 24ll) = *(double*)((uint8*)THIS$1 + 24ll) + V$1;
 label$395:;
}

void _ZN7VECTOR4mIEd( struct $7VECTOR4* THIS$1, double V$1 )
{
 label$396:;
 *(double*)THIS$1 = *(double*)THIS$1 - V$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) - V$1;
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)THIS$1 + 16ll) - V$1;
 *(double*)((uint8*)THIS$1 + 24ll) = *(double*)((uint8*)THIS$1 + 24ll) - V$1;
 label$397:;
}

void _ZN7VECTOR4mLEd( struct $7VECTOR4* THIS$1, double V$1 )
{
 label$398:;
 *(double*)THIS$1 = *(double*)THIS$1 * V$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) * V$1;
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)THIS$1 + 16ll) * V$1;
 *(double*)((uint8*)THIS$1 + 24ll) = *(double*)((uint8*)THIS$1 + 24ll) * V$1;
 label$399:;
}

void _ZN7VECTOR4dVEd( struct $7VECTOR4* THIS$1, double V$1 )
{
 label$400:;
 *(double*)THIS$1 = *(double*)THIS$1 / V$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) / V$1;
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)THIS$1 + 16ll) / V$1;
 *(double*)((uint8*)THIS$1 + 24ll) = *(double*)((uint8*)THIS$1 + 24ll) / V$1;
 label$401:;
}

void _ZN7VECTOR4pLER7VECTOR3( struct $7VECTOR4* THIS$1, struct $7VECTOR3* V3$1 )
{
 label$402:;
 *(double*)THIS$1 = *(double*)THIS$1 + *(double*)V3$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) + *(double*)((uint8*)V3$1 + 8ll);
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)THIS$1 + 16ll) + *(double*)((uint8*)V3$1 + 16ll);
 label$403:;
}

void _ZN7VECTOR4mIER7VECTOR3( struct $7VECTOR4* THIS$1, struct $7VECTOR3* V3$1 )
{
 label$404:;
 *(double*)THIS$1 = *(double*)THIS$1 - *(double*)V3$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) - *(double*)((uint8*)V3$1 + 8ll);
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)THIS$1 + 16ll) - *(double*)((uint8*)V3$1 + 16ll);
 label$405:;
}

void _ZN7VECTOR4mLER7VECTOR3( struct $7VECTOR4* THIS$1, struct $7VECTOR3* V3$1 )
{
 label$406:;
 *(double*)THIS$1 = *(double*)THIS$1 * *(double*)V3$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) * *(double*)((uint8*)V3$1 + 8ll);
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)THIS$1 + 16ll) * *(double*)((uint8*)V3$1 + 16ll);
 label$407:;
}

void _ZN7VECTOR4dVER7VECTOR3( struct $7VECTOR4* THIS$1, struct $7VECTOR3* V3$1 )
{
 label$408:;
 *(double*)THIS$1 = *(double*)THIS$1 / *(double*)V3$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) / *(double*)((uint8*)V3$1 + 8ll);
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)THIS$1 + 16ll) / *(double*)((uint8*)V3$1 + 16ll);
 label$409:;
}

void _ZN7VECTOR4pLERS_( struct $7VECTOR4* THIS$1, struct $7VECTOR4* V4$1 )
{
 label$410:;
 *(double*)THIS$1 = *(double*)THIS$1 + *(double*)V4$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) + *(double*)((uint8*)V4$1 + 8ll);
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)THIS$1 + 16ll) + *(double*)((uint8*)V4$1 + 16ll);
 *(double*)((uint8*)THIS$1 + 24ll) = *(double*)((uint8*)THIS$1 + 24ll) + *(double*)((uint8*)V4$1 + 24ll);
 label$411:;
}

void _ZN7VECTOR4mIERS_( struct $7VECTOR4* THIS$1, struct $7VECTOR4* V4$1 )
{
 label$412:;
 *(double*)THIS$1 = *(double*)THIS$1 - *(double*)V4$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) - *(double*)((uint8*)V4$1 + 8ll);
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)THIS$1 + 16ll) - *(double*)((uint8*)V4$1 + 16ll);
 *(double*)((uint8*)THIS$1 + 24ll) = *(double*)((uint8*)THIS$1 + 24ll) - *(double*)((uint8*)V4$1 + 24ll);
 label$413:;
}

void _ZN7VECTOR4mLERS_( struct $7VECTOR4* THIS$1, struct $7VECTOR4* V4$1 )
{
 label$414:;
 *(double*)THIS$1 = *(double*)THIS$1 * *(double*)V4$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) * *(double*)((uint8*)V4$1 + 8ll);
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)THIS$1 + 16ll) * *(double*)((uint8*)V4$1 + 16ll);
 *(double*)((uint8*)THIS$1 + 24ll) = *(double*)((uint8*)THIS$1 + 24ll) * *(double*)((uint8*)V4$1 + 24ll);
 label$415:;
}

void _ZN7VECTOR4dVERS_( struct $7VECTOR4* THIS$1, struct $7VECTOR4* V4$1 )
{
 label$416:;
 *(double*)THIS$1 = *(double*)THIS$1 / *(double*)V4$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) / *(double*)((uint8*)V4$1 + 8ll);
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)THIS$1 + 16ll) / *(double*)((uint8*)V4$1 + 16ll);
 *(double*)((uint8*)THIS$1 + 24ll) = *(double*)((uint8*)THIS$1 + 24ll) / *(double*)((uint8*)V4$1 + 24ll);
 label$417:;
}

struct $7VECTOR2* _ZN7VECTOR42XXEv( struct $7VECTOR2* tmp$855$1, struct $7VECTOR4* THIS$1 )
{
 label$418:;
 _ZN7VECTOR2C1Edd( tmp$855$1, *(double*)THIS$1, *(double*)THIS$1 );
 goto label$419;
 label$419:;
 return tmp$855$1;
}

struct $7VECTOR2* _ZN7VECTOR42XYEv( struct $7VECTOR2* tmp$857$1, struct $7VECTOR4* THIS$1 )
{
 label$420:;
 _ZN7VECTOR2C1Edd( tmp$857$1, *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 8ll) );
 goto label$421;
 label$421:;
 return tmp$857$1;
}

struct $7VECTOR2* _ZN7VECTOR42XZEv( struct $7VECTOR2* tmp$859$1, struct $7VECTOR4* THIS$1 )
{
 label$422:;
 _ZN7VECTOR2C1Edd( tmp$859$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)((uint8*)THIS$1 + 16ll) );
 goto label$423;
 label$423:;
 return tmp$859$1;
}

struct $7VECTOR2* _ZN7VECTOR42YXEv( struct $7VECTOR2* tmp$861$1, struct $7VECTOR4* THIS$1 )
{
 label$424:;
 _ZN7VECTOR2C1Edd( tmp$861$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)THIS$1 );
 goto label$425;
 label$425:;
 return tmp$861$1;
}

struct $7VECTOR2* _ZN7VECTOR42YYEv( struct $7VECTOR2* tmp$863$1, struct $7VECTOR4* THIS$1 )
{
 label$426:;
 _ZN7VECTOR2C1Edd( tmp$863$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)((uint8*)THIS$1 + 8ll) );
 goto label$427;
 label$427:;
 return tmp$863$1;
}

struct $7VECTOR2* _ZN7VECTOR42YZEv( struct $7VECTOR2* tmp$865$1, struct $7VECTOR4* THIS$1 )
{
 label$428:;
 _ZN7VECTOR2C1Edd( tmp$865$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)((uint8*)THIS$1 + 16ll) );
 goto label$429;
 label$429:;
 return tmp$865$1;
}

struct $7VECTOR2* _ZN7VECTOR42ZXEv( struct $7VECTOR2* tmp$867$1, struct $7VECTOR4* THIS$1 )
{
 label$430:;
 _ZN7VECTOR2C1Edd( tmp$867$1, *(double*)((uint8*)THIS$1 + 16ll), *(double*)THIS$1 );
 goto label$431;
 label$431:;
 return tmp$867$1;
}

struct $7VECTOR2* _ZN7VECTOR42ZYEv( struct $7VECTOR2* tmp$869$1, struct $7VECTOR4* THIS$1 )
{
 label$432:;
 _ZN7VECTOR2C1Edd( tmp$869$1, *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 8ll) );
 goto label$433;
 label$433:;
 return tmp$869$1;
}

struct $7VECTOR2* _ZN7VECTOR42ZZEv( struct $7VECTOR2* tmp$871$1, struct $7VECTOR4* THIS$1 )
{
 label$434:;
 _ZN7VECTOR2C1Edd( tmp$871$1, *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 16ll) );
 goto label$435;
 label$435:;
 return tmp$871$1;
}

struct $7VECTOR3* _ZN7VECTOR43XXXEv( struct $7VECTOR3* tmp$873$1, struct $7VECTOR4* THIS$1 )
{
 label$436:;
 _ZN7VECTOR3C1Eddd( tmp$873$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)THIS$1 );
 goto label$437;
 label$437:;
 return tmp$873$1;
}

struct $7VECTOR3* _ZN7VECTOR43XXYEv( struct $7VECTOR3* tmp$875$1, struct $7VECTOR4* THIS$1 )
{
 label$438:;
 _ZN7VECTOR3C1Eddd( tmp$875$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 8ll) );
 goto label$439;
 label$439:;
 return tmp$875$1;
}

struct $7VECTOR3* _ZN7VECTOR43XXZEv( struct $7VECTOR3* tmp$877$1, struct $7VECTOR4* THIS$1 )
{
 label$440:;
 _ZN7VECTOR3C1Eddd( tmp$877$1, *(double*)THIS$1, *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 16ll) );
 goto label$441;
 label$441:;
 return tmp$877$1;
}

struct $7VECTOR3* _ZN7VECTOR43XYXEv( struct $7VECTOR3* tmp$879$1, struct $7VECTOR4* THIS$1 )
{
 label$442:;
 _ZN7VECTOR3C1Eddd( tmp$879$1, *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)THIS$1 );
 goto label$443;
 label$443:;
 return tmp$879$1;
}

struct $7VECTOR3* _ZN7VECTOR43XYYEv( struct $7VECTOR3* tmp$881$1, struct $7VECTOR4* THIS$1 )
{
 label$444:;
 _ZN7VECTOR3C1Eddd( tmp$881$1, *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)((uint8*)THIS$1 + 8ll) );
 goto label$445;
 label$445:;
 return tmp$881$1;
}

struct $7VECTOR3* _ZN7VECTOR43XYZEv( struct $7VECTOR3* tmp$883$1, struct $7VECTOR4* THIS$1 )
{
 label$446:;
 _ZN7VECTOR3C1Eddd( tmp$883$1, *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)((uint8*)THIS$1 + 16ll) );
 goto label$447;
 label$447:;
 return tmp$883$1;
}

struct $7VECTOR3* _ZN7VECTOR43XZXEv( struct $7VECTOR3* tmp$885$1, struct $7VECTOR4* THIS$1 )
{
 label$448:;
 _ZN7VECTOR3C1Eddd( tmp$885$1, *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 16ll), *(double*)THIS$1 );
 goto label$449;
 label$449:;
 return tmp$885$1;
}

struct $7VECTOR3* _ZN7VECTOR43XZYEv( struct $7VECTOR3* tmp$887$1, struct $7VECTOR4* THIS$1 )
{
 label$450:;
 _ZN7VECTOR3C1Eddd( tmp$887$1, *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 8ll) );
 goto label$451;
 label$451:;
 return tmp$887$1;
}

struct $7VECTOR3* _ZN7VECTOR43XZZEv( struct $7VECTOR3* tmp$889$1, struct $7VECTOR4* THIS$1 )
{
 label$452:;
 _ZN7VECTOR3C1Eddd( tmp$889$1, *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 16ll) );
 goto label$453;
 label$453:;
 return tmp$889$1;
}

struct $7VECTOR3* _ZN7VECTOR43YXXEv( struct $7VECTOR3* tmp$891$1, struct $7VECTOR4* THIS$1 )
{
 label$454:;
 _ZN7VECTOR3C1Eddd( tmp$891$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)THIS$1, *(double*)THIS$1 );
 goto label$455;
 label$455:;
 return tmp$891$1;
}

struct $7VECTOR3* _ZN7VECTOR43YXYEv( struct $7VECTOR3* tmp$893$1, struct $7VECTOR4* THIS$1 )
{
 label$456:;
 _ZN7VECTOR3C1Eddd( tmp$893$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 8ll) );
 goto label$457;
 label$457:;
 return tmp$893$1;
}

struct $7VECTOR3* _ZN7VECTOR43YXZEv( struct $7VECTOR3* tmp$895$1, struct $7VECTOR4* THIS$1 )
{
 label$458:;
 _ZN7VECTOR3C1Eddd( tmp$895$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 16ll) );
 goto label$459;
 label$459:;
 return tmp$895$1;
}

struct $7VECTOR3* _ZN7VECTOR43YYXEv( struct $7VECTOR3* tmp$897$1, struct $7VECTOR4* THIS$1 )
{
 label$460:;
 _ZN7VECTOR3C1Eddd( tmp$897$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)((uint8*)THIS$1 + 8ll), *(double*)THIS$1 );
 goto label$461;
 label$461:;
 return tmp$897$1;
}

struct $7VECTOR3* _ZN7VECTOR43YYYEv( struct $7VECTOR3* tmp$899$1, struct $7VECTOR4* THIS$1 )
{
 label$462:;
 _ZN7VECTOR3C1Eddd( tmp$899$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)((uint8*)THIS$1 + 8ll), *(double*)((uint8*)THIS$1 + 8ll) );
 goto label$463;
 label$463:;
 return tmp$899$1;
}

struct $7VECTOR3* _ZN7VECTOR43YYZEv( struct $7VECTOR3* tmp$901$1, struct $7VECTOR4* THIS$1 )
{
 label$464:;
 _ZN7VECTOR3C1Eddd( tmp$901$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)((uint8*)THIS$1 + 8ll), *(double*)((uint8*)THIS$1 + 16ll) );
 goto label$465;
 label$465:;
 return tmp$901$1;
}

struct $7VECTOR3* _ZN7VECTOR43YZXEv( struct $7VECTOR3* tmp$903$1, struct $7VECTOR4* THIS$1 )
{
 label$466:;
 _ZN7VECTOR3C1Eddd( tmp$903$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)((uint8*)THIS$1 + 16ll), *(double*)THIS$1 );
 goto label$467;
 label$467:;
 return tmp$903$1;
}

struct $7VECTOR3* _ZN7VECTOR43YZYEv( struct $7VECTOR3* tmp$905$1, struct $7VECTOR4* THIS$1 )
{
 label$468:;
 _ZN7VECTOR3C1Eddd( tmp$905$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 8ll) );
 goto label$469;
 label$469:;
 return tmp$905$1;
}

struct $7VECTOR3* _ZN7VECTOR43YZZEv( struct $7VECTOR3* tmp$907$1, struct $7VECTOR4* THIS$1 )
{
 label$470:;
 _ZN7VECTOR3C1Eddd( tmp$907$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 16ll) );
 goto label$471;
 label$471:;
 return tmp$907$1;
}

struct $7VECTOR3* _ZN7VECTOR43ZXXEv( struct $7VECTOR3* tmp$909$1, struct $7VECTOR4* THIS$1 )
{
 label$472:;
 _ZN7VECTOR3C1Eddd( tmp$909$1, *(double*)((uint8*)THIS$1 + 16ll), *(double*)THIS$1, *(double*)THIS$1 );
 goto label$473;
 label$473:;
 return tmp$909$1;
}

struct $7VECTOR3* _ZN7VECTOR43ZXYEv( struct $7VECTOR3* tmp$911$1, struct $7VECTOR4* THIS$1 )
{
 label$474:;
 _ZN7VECTOR3C1Eddd( tmp$911$1, *(double*)((uint8*)THIS$1 + 16ll), *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 8ll) );
 goto label$475;
 label$475:;
 return tmp$911$1;
}

struct $7VECTOR3* _ZN7VECTOR43ZXZEv( struct $7VECTOR3* tmp$913$1, struct $7VECTOR4* THIS$1 )
{
 label$476:;
 _ZN7VECTOR3C1Eddd( tmp$913$1, *(double*)((uint8*)THIS$1 + 16ll), *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 16ll) );
 goto label$477;
 label$477:;
 return tmp$913$1;
}

struct $7VECTOR3* _ZN7VECTOR43ZYXEv( struct $7VECTOR3* tmp$915$1, struct $7VECTOR4* THIS$1 )
{
 label$478:;
 _ZN7VECTOR3C1Eddd( tmp$915$1, *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 8ll), *(double*)THIS$1 );
 goto label$479;
 label$479:;
 return tmp$915$1;
}

struct $7VECTOR3* _ZN7VECTOR43ZYYEv( struct $7VECTOR3* tmp$917$1, struct $7VECTOR4* THIS$1 )
{
 label$480:;
 _ZN7VECTOR3C1Eddd( tmp$917$1, *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 8ll), *(double*)((uint8*)THIS$1 + 8ll) );
 goto label$481;
 label$481:;
 return tmp$917$1;
}

struct $7VECTOR3* _ZN7VECTOR43ZYZEv( struct $7VECTOR3* tmp$919$1, struct $7VECTOR4* THIS$1 )
{
 label$482:;
 _ZN7VECTOR3C1Eddd( tmp$919$1, *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 8ll), *(double*)((uint8*)THIS$1 + 16ll) );
 goto label$483;
 label$483:;
 return tmp$919$1;
}

struct $7VECTOR3* _ZN7VECTOR43ZZXEv( struct $7VECTOR3* tmp$921$1, struct $7VECTOR4* THIS$1 )
{
 label$484:;
 _ZN7VECTOR3C1Eddd( tmp$921$1, *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 16ll), *(double*)THIS$1 );
 goto label$485;
 label$485:;
 return tmp$921$1;
}

struct $7VECTOR3* _ZN7VECTOR43ZZYEv( struct $7VECTOR3* tmp$923$1, struct $7VECTOR4* THIS$1 )
{
 label$486:;
 _ZN7VECTOR3C1Eddd( tmp$923$1, *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 8ll) );
 goto label$487;
 label$487:;
 return tmp$923$1;
}

struct $7VECTOR3* _ZN7VECTOR43ZZZEv( struct $7VECTOR3* tmp$925$1, struct $7VECTOR4* THIS$1 )
{
 label$488:;
 _ZN7VECTOR3C1Eddd( tmp$925$1, *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 16ll) );
 goto label$489;
 label$489:;
 return tmp$925$1;
}

struct $7VECTOR3* _ZN7VECTOR43RGBEv( struct $7VECTOR3* tmp$927$1, struct $7VECTOR4* THIS$1 )
{
 label$490:;
 _ZN7VECTOR3C1Eddd( tmp$927$1, *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)((uint8*)THIS$1 + 16ll) );
 goto label$491;
 label$491:;
 return tmp$927$1;
}

struct $7VECTOR4* _ZN7VECTOR44RGBAEv( struct $7VECTOR4* tmp$929$1, struct $7VECTOR4* THIS$1 )
{
 label$492:;
 _ZN7VECTOR4C1Edddd( tmp$929$1, *(double*)THIS$1, *(double*)((uint8*)THIS$1 + 8ll), *(double*)((uint8*)THIS$1 + 16ll), *(double*)((uint8*)THIS$1 + 24ll) );
 goto label$493;
 label$493:;
 return tmp$929$1;
}

struct $7VECTOR4* _ZngR7VECTOR4( struct $7VECTOR4* tmp$931$1, struct $7VECTOR4* L$1 )
{
 label$494:;
 _ZN7VECTOR4C1Edddd( tmp$931$1, -(*(double*)L$1), -(*(double*)((uint8*)L$1 + 8ll)), -(*(double*)((uint8*)L$1 + 16ll)), -(*(double*)((uint8*)L$1 + 24ll)) );
 goto label$495;
 label$495:;
 return tmp$931$1;
}

struct $7VECTOR4* _ZplR7VECTOR4S0_( struct $7VECTOR4* tmp$933$1, struct $7VECTOR4* L$1, struct $7VECTOR4* R$1 )
{
 label$496:;
 _ZN7VECTOR4C1Edddd( tmp$933$1, *(double*)L$1 + *(double*)R$1, *(double*)((uint8*)L$1 + 8ll) + *(double*)((uint8*)R$1 + 8ll), *(double*)((uint8*)L$1 + 16ll) + *(double*)((uint8*)R$1 + 16ll), *(double*)((uint8*)L$1 + 24ll) + *(double*)((uint8*)R$1 + 24ll) );
 goto label$497;
 label$497:;
 return tmp$933$1;
}

struct $7VECTOR4* _ZmiR7VECTOR4S0_( struct $7VECTOR4* tmp$935$1, struct $7VECTOR4* L$1, struct $7VECTOR4* R$1 )
{
 label$498:;
 _ZN7VECTOR4C1Edddd( tmp$935$1, *(double*)L$1 - *(double*)R$1, *(double*)((uint8*)L$1 + 8ll) - *(double*)((uint8*)R$1 + 8ll), *(double*)((uint8*)L$1 + 16ll) - *(double*)((uint8*)R$1 + 16ll), *(double*)((uint8*)L$1 + 24ll) - *(double*)((uint8*)R$1 + 24ll) );
 goto label$499;
 label$499:;
 return tmp$935$1;
}

struct $7VECTOR4* _ZmlR7VECTOR4S0_( struct $7VECTOR4* tmp$937$1, struct $7VECTOR4* L$1, struct $7VECTOR4* R$1 )
{
 label$500:;
 _ZN7VECTOR4C1Edddd( tmp$937$1, *(double*)L$1 * *(double*)R$1, *(double*)((uint8*)L$1 + 8ll) * *(double*)((uint8*)R$1 + 8ll), *(double*)((uint8*)L$1 + 16ll) * *(double*)((uint8*)R$1 + 16ll), *(double*)((uint8*)L$1 + 24ll) * *(double*)((uint8*)R$1 + 24ll) );
 goto label$501;
 label$501:;
 return tmp$937$1;
}

struct $7VECTOR4* _ZdvR7VECTOR4S0_( struct $7VECTOR4* tmp$939$1, struct $7VECTOR4* L$1, struct $7VECTOR4* R$1 )
{
 label$502:;
 _ZN7VECTOR4C1Edddd( tmp$939$1, *(double*)L$1 / *(double*)R$1, *(double*)((uint8*)L$1 + 8ll) / *(double*)((uint8*)R$1 + 8ll), *(double*)((uint8*)L$1 + 16ll) / *(double*)((uint8*)R$1 + 16ll), *(double*)((uint8*)L$1 + 24ll) / *(double*)((uint8*)R$1 + 24ll) );
 goto label$503;
 label$503:;
 return tmp$939$1;
}

struct $7VECTOR4* _ZplR7VECTOR4d( struct $7VECTOR4* tmp$941$1, struct $7VECTOR4* L$1, double R$1 )
{
 label$504:;
 _ZN7VECTOR4C1Edddd( tmp$941$1, *(double*)L$1 + R$1, *(double*)((uint8*)L$1 + 8ll) + R$1, *(double*)((uint8*)L$1 + 16ll) + R$1, *(double*)((uint8*)L$1 + 24ll) + R$1 );
 goto label$505;
 label$505:;
 return tmp$941$1;
}

struct $7VECTOR4* _ZpldR7VECTOR4( struct $7VECTOR4* tmp$943$1, double L$1, struct $7VECTOR4* R$1 )
{
 label$506:;
 _ZN7VECTOR4C1Edddd( tmp$943$1, *(double*)R$1 + L$1, *(double*)((uint8*)R$1 + 8ll) + L$1, *(double*)((uint8*)R$1 + 16ll) + L$1, *(double*)((uint8*)R$1 + 24ll) + L$1 );
 goto label$507;
 label$507:;
 return tmp$943$1;
}

struct $7VECTOR4* _ZmiR7VECTOR4d( struct $7VECTOR4* tmp$945$1, struct $7VECTOR4* L$1, double R$1 )
{
 label$508:;
 _ZN7VECTOR4C1Edddd( tmp$945$1, *(double*)L$1 - R$1, *(double*)((uint8*)L$1 + 8ll) - R$1, *(double*)((uint8*)L$1 + 16ll) - R$1, *(double*)((uint8*)L$1 + 24ll) - R$1 );
 goto label$509;
 label$509:;
 return tmp$945$1;
}

struct $7VECTOR4* _ZmidR7VECTOR4( struct $7VECTOR4* tmp$947$1, double L$1, struct $7VECTOR4* R$1 )
{
 label$510:;
 _ZN7VECTOR4C1Edddd( tmp$947$1, *(double*)R$1 - L$1, *(double*)((uint8*)R$1 + 8ll) - L$1, *(double*)((uint8*)R$1 + 16ll) - L$1, *(double*)((uint8*)R$1 + 24ll) - L$1 );
 goto label$511;
 label$511:;
 return tmp$947$1;
}

struct $7VECTOR4* _ZmlR7VECTOR4d( struct $7VECTOR4* tmp$949$1, struct $7VECTOR4* L$1, double R$1 )
{
 label$512:;
 _ZN7VECTOR4C1Edddd( tmp$949$1, *(double*)L$1 * R$1, *(double*)((uint8*)L$1 + 8ll) * R$1, *(double*)((uint8*)L$1 + 16ll) * R$1, *(double*)((uint8*)L$1 + 24ll) * R$1 );
 goto label$513;
 label$513:;
 return tmp$949$1;
}

struct $7VECTOR4* _ZmldR7VECTOR4( struct $7VECTOR4* tmp$951$1, double L$1, struct $7VECTOR4* R$1 )
{
 label$514:;
 _ZN7VECTOR4C1Edddd( tmp$951$1, L$1 * *(double*)R$1, L$1 * *(double*)((uint8*)R$1 + 8ll), L$1 * *(double*)((uint8*)R$1 + 16ll), L$1 * *(double*)((uint8*)R$1 + 24ll) );
 goto label$515;
 label$515:;
 return tmp$951$1;
}

struct $7VECTOR4* _ZdvR7VECTOR4d( struct $7VECTOR4* tmp$953$1, struct $7VECTOR4* L$1, double R$1 )
{
 label$516:;
 _ZN7VECTOR4C1Edddd( tmp$953$1, *(double*)L$1 / R$1, *(double*)((uint8*)L$1 + 8ll) / R$1, *(double*)((uint8*)L$1 + 16ll) / R$1, *(double*)((uint8*)L$1 + 24ll) / R$1 );
 goto label$517;
 label$517:;
 return tmp$953$1;
}

struct $7VECTOR4* _ZdvdR7VECTOR4( struct $7VECTOR4* tmp$955$1, double L$1, struct $7VECTOR4* R$1 )
{
 label$518:;
 _ZN7VECTOR4C1Edddd( tmp$955$1, *(double*)R$1 / L$1, *(double*)((uint8*)R$1 + 8ll) / L$1, *(double*)((uint8*)R$1 + 16ll) / L$1, *(double*)((uint8*)R$1 + 24ll) / L$1 );
 goto label$519;
 label$519:;
 return tmp$955$1;
}

struct $7VECTOR4* _ZplR7VECTOR4R7VECTOR3( struct $7VECTOR4* tmp$957$1, struct $7VECTOR4* L$1, struct $7VECTOR3* R$1 )
{
 label$520:;
 _ZN7VECTOR4C1Edddd( tmp$957$1, *(double*)L$1 + *(double*)R$1, *(double*)((uint8*)L$1 + 8ll) + *(double*)((uint8*)R$1 + 8ll), *(double*)((uint8*)L$1 + 16ll) + *(double*)((uint8*)R$1 + 16ll), *(double*)((uint8*)L$1 + 24ll) );
 goto label$521;
 label$521:;
 return tmp$957$1;
}

struct $7VECTOR4* _ZplR7VECTOR3R7VECTOR4( struct $7VECTOR4* tmp$959$1, struct $7VECTOR3* L$1, struct $7VECTOR4* R$1 )
{
 label$522:;
 _ZN7VECTOR4C1Edddd( tmp$959$1, *(double*)L$1 + *(double*)R$1, *(double*)((uint8*)L$1 + 8ll) + *(double*)((uint8*)R$1 + 8ll), *(double*)((uint8*)L$1 + 16ll) + *(double*)((uint8*)R$1 + 16ll), 0x1.p+0 );
 goto label$523;
 label$523:;
 return tmp$959$1;
}

struct $7VECTOR4* _ZmiR7VECTOR4R7VECTOR3( struct $7VECTOR4* tmp$961$1, struct $7VECTOR4* L$1, struct $7VECTOR3* R$1 )
{
 label$524:;
 _ZN7VECTOR4C1Edddd( tmp$961$1, *(double*)L$1 - *(double*)R$1, *(double*)((uint8*)L$1 + 8ll) - *(double*)((uint8*)R$1 + 8ll), *(double*)((uint8*)L$1 + 16ll) - *(double*)((uint8*)R$1 + 16ll), *(double*)((uint8*)L$1 + 24ll) );
 goto label$525;
 label$525:;
 return tmp$961$1;
}

struct $7VECTOR4* _ZmiR7VECTOR3R7VECTOR4( struct $7VECTOR4* tmp$963$1, struct $7VECTOR3* L$1, struct $7VECTOR4* R$1 )
{
 label$526:;
 _ZN7VECTOR4C1Edddd( tmp$963$1, *(double*)L$1 - *(double*)R$1, *(double*)((uint8*)L$1 + 8ll) - *(double*)((uint8*)R$1 + 8ll), *(double*)((uint8*)L$1 + 16ll) - *(double*)((uint8*)R$1 + 16ll), 0x1.p+0 );
 goto label$527;
 label$527:;
 return tmp$963$1;
}

struct $7VECTOR4* _ZmlR7VECTOR4R7VECTOR3( struct $7VECTOR4* tmp$965$1, struct $7VECTOR4* L$1, struct $7VECTOR3* R$1 )
{
 label$528:;
 _ZN7VECTOR4C1Edddd( tmp$965$1, *(double*)L$1 * *(double*)R$1, *(double*)((uint8*)L$1 + 8ll) * *(double*)((uint8*)R$1 + 8ll), *(double*)((uint8*)L$1 + 16ll) * *(double*)((uint8*)R$1 + 16ll), *(double*)((uint8*)L$1 + 24ll) );
 goto label$529;
 label$529:;
 return tmp$965$1;
}

struct $7VECTOR4* _ZmlR7VECTOR3R7VECTOR4( struct $7VECTOR4* tmp$967$1, struct $7VECTOR3* L$1, struct $7VECTOR4* R$1 )
{
 label$530:;
 _ZN7VECTOR4C1Edddd( tmp$967$1, *(double*)L$1 * *(double*)R$1, *(double*)((uint8*)L$1 + 8ll) * *(double*)((uint8*)R$1 + 8ll), *(double*)((uint8*)L$1 + 16ll) * *(double*)((uint8*)R$1 + 16ll), 0x1.p+0 );
 goto label$531;
 label$531:;
 return tmp$967$1;
}

struct $7VECTOR4* _ZdvR7VECTOR4R7VECTOR3( struct $7VECTOR4* tmp$969$1, struct $7VECTOR4* L$1, struct $7VECTOR3* R$1 )
{
 label$532:;
 _ZN7VECTOR4C1Edddd( tmp$969$1, *(double*)L$1 / *(double*)R$1, *(double*)((uint8*)L$1 + 8ll) / *(double*)((uint8*)R$1 + 8ll), *(double*)((uint8*)L$1 + 16ll) / *(double*)((uint8*)R$1 + 16ll), *(double*)((uint8*)L$1 + 24ll) );
 goto label$533;
 label$533:;
 return tmp$969$1;
}

struct $7VECTOR4* _ZdvR7VECTOR3R7VECTOR4( struct $7VECTOR4* tmp$971$1, struct $7VECTOR3* L$1, struct $7VECTOR4* R$1 )
{
 label$534:;
 _ZN7VECTOR4C1Edddd( tmp$971$1, *(double*)L$1 / *(double*)R$1, *(double*)((uint8*)L$1 + 8ll) / *(double*)((uint8*)R$1 + 8ll), *(double*)((uint8*)L$1 + 16ll) / *(double*)((uint8*)R$1 + 16ll), 0x1.p+0 );
 goto label$535;
 label$535:;
 return tmp$971$1;
}

int64 _ZeqR7VECTOR4S0_( struct $7VECTOR4* L$1, struct $7VECTOR4* R$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$536:;
 if( ((((((int64)__builtin_nearbyint( *(double*)L$1 )) ^ ((int64)__builtin_nearbyint( *(double*)R$1 ))) | (((int64)__builtin_nearbyint( *(double*)((uint8*)L$1 + 8ll) )) ^ ((int64)__builtin_nearbyint( *(double*)((uint8*)R$1 + 8ll) )))) | (((int64)__builtin_nearbyint( *(double*)((uint8*)L$1 + 16ll) )) ^ ((int64)__builtin_nearbyint( *(double*)((uint8*)R$1 + 16ll) )))) | (((int64)__builtin_nearbyint( *(double*)((uint8*)L$1 + 24ll) )) ^ ((int64)__builtin_nearbyint( *(double*)((uint8*)R$1 + 24ll) )))) == 0ll ) goto label$539;
 {
  fb$result$1 = 0ll;
  goto label$537;
  label$539:;
 }
 fb$result$1 = -1ll;
 goto label$537;
 label$537:;
 return fb$result$1;
}

int64 _ZneR7VECTOR4S0_( struct $7VECTOR4* L$1, struct $7VECTOR4* R$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$540:;
 if( ((((((int64)__builtin_nearbyint( *(double*)L$1 )) ^ ((int64)__builtin_nearbyint( *(double*)R$1 ))) | (((int64)__builtin_nearbyint( *(double*)((uint8*)L$1 + 8ll) )) ^ ((int64)__builtin_nearbyint( *(double*)((uint8*)R$1 + 8ll) )))) | (((int64)__builtin_nearbyint( *(double*)((uint8*)L$1 + 16ll) )) ^ ((int64)__builtin_nearbyint( *(double*)((uint8*)R$1 + 16ll) )))) | (((int64)__builtin_nearbyint( *(double*)((uint8*)L$1 + 24ll) )) ^ ((int64)__builtin_nearbyint( *(double*)((uint8*)R$1 + 24ll) )))) == 0ll ) goto label$543;
 {
  fb$result$1 = -1ll;
  goto label$541;
  label$543:;
 }
 fb$result$1 = 0ll;
 goto label$541;
 label$541:;
 return fb$result$1;
}

void _ZN5PLANEC1Ev( struct $5PLANE* THIS$1 )
{
 label$548:;
 *(double*)THIS$1 = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 8ll) = 0x1.p+0;
 *(double*)((uint8*)THIS$1 + 16ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 24ll) = 0x0p+0;
 label$549:;
}

void _ZN5PLANEC1ER7VECTOR3S1_( struct $5PLANE* THIS$1, struct $7VECTOR3* NORMAL$1, struct $7VECTOR3* V$1 )
{
 label$550:;
 _ZN7VECTOR3aSERS_( (struct $7VECTOR3*)THIS$1, NORMAL$1 );
 *(double*)((uint8*)THIS$1 + 24ll) = -(((*(double*)THIS$1 * *(double*)V$1) + (*(double*)((uint8*)THIS$1 + 8ll) * *(double*)((uint8*)V$1 + 8ll))) + (*(double*)((uint8*)THIS$1 + 8ll) * *(double*)V$1));
 label$551:;
}

double _ZN5PLANE11GETDISTANCEER7VECTOR3( struct $5PLANE* THIS$1, struct $7VECTOR3* V$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$552:;
 fb$result$1 = (((*(double*)THIS$1 * *(double*)V$1) + (*(double*)((uint8*)THIS$1 + 8ll) * *(double*)((uint8*)V$1 + 8ll))) + (*(double*)((uint8*)THIS$1 + 8ll) * *(double*)V$1)) + *(double*)((uint8*)THIS$1 + 24ll);
 goto label$553;
 label$553:;
 return fb$result$1;
}

$10EPLANESIDE _ZN5PLANE7GETSIDEER7VECTOR3( struct $5PLANE* THIS$1, struct $7VECTOR3* V$1 )
{
 $10EPLANESIDE fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$554:;
 double DIST$1;
 DIST$1 = (((*(double*)THIS$1 * *(double*)V$1) + (*(double*)((uint8*)THIS$1 + 8ll) * *(double*)((uint8*)V$1 + 8ll))) + (*(double*)((uint8*)THIS$1 + 8ll) * *(double*)V$1)) + *(double*)((uint8*)THIS$1 + 24ll);
 if( DIST$1 != 0x0p+0 ) goto label$557;
 {
  fb$result$1 = 0ll;
  goto label$555;
  label$557:;
 }
 if( DIST$1 >= 0x0p+0 ) goto label$559;
 {
  fb$result$1 = 2ll;
  goto label$555;
  label$559:;
 }
 fb$result$1 = 1ll;
 goto label$555;
 label$555:;
 return fb$result$1;
}

boolean _ZN5PLANE9INTERSECTER7VECTOR3S1_Rd( struct $5PLANE* THIS$1, struct $7VECTOR3* RAYORIGIN$1, struct $7VECTOR3* RAYDIRECTION$1, double* RESULTT$1 )
{
 boolean fb$result$1;
 __builtin_memset( &fb$result$1, 0, 1ll );
 label$560:;
 double DENOM$1;
 DENOM$1 = ((*(double*)THIS$1 * *(double*)RAYDIRECTION$1) + (*(double*)((uint8*)THIS$1 + 8ll) * *(double*)((uint8*)RAYDIRECTION$1 + 8ll))) + (*(double*)((uint8*)THIS$1 + 8ll) * *(double*)RAYDIRECTION$1);
 double vr$12 = fabs( DENOM$1 );
 if( vr$12 >= 0x1.0624DD2F1A9FCp-10 ) goto label$563;
 {
  fb$result$1 = (boolean)0ll;
  goto label$561;
  label$563:;
 }
 struct $7VECTOR3 PLANECENTER$1;
 _ZN7VECTOR3C1Eddd( &PLANECENTER$1, *(double*)THIS$1 * *(double*)((uint8*)THIS$1 + 24ll), *(double*)((uint8*)THIS$1 + 8ll) * *(double*)((uint8*)THIS$1 + 24ll), *(double*)((uint8*)THIS$1 + 16ll) * *(double*)((uint8*)THIS$1 + 24ll) );
 *(double*)&PLANECENTER$1 = *(double*)&PLANECENTER$1 - *(double*)RAYORIGIN$1;
 *(double*)((uint8*)&PLANECENTER$1 + 8ll) = *(double*)((uint8*)&PLANECENTER$1 + 8ll) - *(double*)((uint8*)RAYORIGIN$1 + 8ll);
 *(double*)((uint8*)&PLANECENTER$1 + 16ll) = *(double*)((uint8*)&PLANECENTER$1 + 16ll) - *(double*)((uint8*)RAYORIGIN$1 + 16ll);
 double T$1;
 T$1 = (((*(double*)&PLANECENTER$1 * *(double*)THIS$1) + (*(double*)((uint8*)&PLANECENTER$1 + 8ll) * *(double*)((uint8*)THIS$1 + 8ll))) + (*(double*)((uint8*)&PLANECENTER$1 + 16ll) * *(double*)((uint8*)THIS$1 + 16ll))) / DENOM$1;
 if( T$1 >= 0x1.0624DD2F1A9FCp-10 ) goto label$565;
 {
  fb$result$1 = (boolean)0ll;
  goto label$561;
  label$565:;
 }
 *RESULTT$1 = T$1;
 fb$result$1 = (boolean)1ll;
 goto label$561;
 label$561:;
 return fb$result$1;
}

double _Z8RADIANCEd( double DEG$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$566:;
 fb$result$1 = (DEG$1 * 0x1.921FB54442D18p+1) / 0x1.68p+7;
 goto label$567;
 label$567:;
 return fb$result$1;
}

struct $7VECTOR2* _Z8RADIANCER7VECTOR2( struct $7VECTOR2* tmp$974$1, struct $7VECTOR2* V$1 )
{
 label$568:;
 _ZN7VECTOR2C1Edd( tmp$974$1, (*(double*)V$1 * 0x1.921FB54442D18p+1) / 0x1.68p+7, (*(double*)((uint8*)V$1 + 8ll) * 0x1.921FB54442D18p+1) / 0x1.68p+7 );
 goto label$569;
 label$569:;
 return tmp$974$1;
}

struct $7VECTOR3* _Z8RADIANCER7VECTOR3( struct $7VECTOR3* tmp$976$1, struct $7VECTOR3* V$1 )
{
 label$570:;
 _ZN7VECTOR3C1Eddd( tmp$976$1, (*(double*)V$1 * 0x1.921FB54442D18p+1) / 0x1.68p+7, (*(double*)((uint8*)V$1 + 8ll) * 0x1.921FB54442D18p+1) / 0x1.68p+7, (*(double*)((uint8*)V$1 + 8ll) * 0x1.921FB54442D18p+1) / 0x1.68p+7 );
 goto label$571;
 label$571:;
 return tmp$976$1;
}

struct $7VECTOR4* _Z8RADIANCER7VECTOR4( struct $7VECTOR4* tmp$978$1, struct $7VECTOR4* V$1 )
{
 label$572:;
 _ZN7VECTOR4C1Edddd( tmp$978$1, (*(double*)V$1 * 0x1.921FB54442D18p+1) / 0x1.68p+7, (*(double*)((uint8*)V$1 + 8ll) * 0x1.921FB54442D18p+1) / 0x1.68p+7, (*(double*)((uint8*)V$1 + 8ll) * 0x1.921FB54442D18p+1) / 0x1.68p+7, (*(double*)((uint8*)V$1 + 24ll) * 0x1.921FB54442D18p+1) / 0x1.68p+7 );
 goto label$573;
 label$573:;
 return tmp$978$1;
}

double _Z7DEGREESd( double RAD$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$574:;
 fb$result$1 = (RAD$1 * 0x1.68p+7) / 0x1.921FB54442D18p+1;
 goto label$575;
 label$575:;
 return fb$result$1;
}

struct $7VECTOR2* _Z7DEGREESR7VECTOR2( struct $7VECTOR2* tmp$980$1, struct $7VECTOR2* V$1 )
{
 label$576:;
 _ZN7VECTOR2C1Edd( tmp$980$1, (*(double*)V$1 * 0x1.68p+7) / 0x1.921FB54442D18p+1, (*(double*)((uint8*)V$1 + 8ll) * 0x1.68p+7) / 0x1.921FB54442D18p+1 );
 goto label$577;
 label$577:;
 return tmp$980$1;
}

struct $7VECTOR3* _Z7DEGREESR7VECTOR3( struct $7VECTOR3* tmp$982$1, struct $7VECTOR3* V$1 )
{
 label$578:;
 _ZN7VECTOR3C1Eddd( tmp$982$1, (*(double*)V$1 * 0x1.68p+7) / 0x1.921FB54442D18p+1, (*(double*)((uint8*)V$1 + 8ll) * 0x1.68p+7) / 0x1.921FB54442D18p+1, (*(double*)((uint8*)V$1 + 8ll) * 0x1.68p+7) / 0x1.921FB54442D18p+1 );
 goto label$579;
 label$579:;
 return tmp$982$1;
}

struct $7VECTOR4* _Z7DEGREESR7VECTOR4( struct $7VECTOR4* tmp$984$1, struct $7VECTOR4* V$1 )
{
 label$580:;
 _ZN7VECTOR4C1Edddd( tmp$984$1, (*(double*)V$1 * 0x1.68p+7) / 0x1.921FB54442D18p+1, (*(double*)((uint8*)V$1 + 8ll) * 0x1.68p+7) / 0x1.921FB54442D18p+1, (*(double*)((uint8*)V$1 + 8ll) * 0x1.68p+7) / 0x1.921FB54442D18p+1, (*(double*)((uint8*)V$1 + 24ll) * 0x1.68p+7) / 0x1.921FB54442D18p+1 );
 goto label$581;
 label$581:;
 return tmp$984$1;
}

struct $7VECTOR2* _Zv13sinR7VECTOR2( struct $7VECTOR2* tmp$986$1, struct $7VECTOR2* V$1 )
{
 label$582:;
 float vr$2 = sinf( (float)*(double*)((uint8*)V$1 + 8ll) );
 float vr$6 = sinf( (float)*(double*)V$1 );
 _ZN7VECTOR2C1Edd( tmp$986$1, (double)vr$6, (double)vr$2 );
 goto label$583;
 label$583:;
 return tmp$986$1;
}

struct $7VECTOR3* _Zv13sinR7VECTOR3( struct $7VECTOR3* tmp$988$1, struct $7VECTOR3* V$1 )
{
 label$584:;
 float vr$2 = sinf( (float)*(double*)((uint8*)V$1 + 16ll) );
 float vr$6 = sinf( (float)*(double*)((uint8*)V$1 + 8ll) );
 float vr$10 = sinf( (float)*(double*)V$1 );
 _ZN7VECTOR3C1Eddd( tmp$988$1, (double)vr$10, (double)vr$6, (double)vr$2 );
 goto label$585;
 label$585:;
 return tmp$988$1;
}

struct $7VECTOR4* _Zv13sinR7VECTOR4( struct $7VECTOR4* tmp$990$1, struct $7VECTOR4* V$1 )
{
 label$586:;
 float vr$2 = sinf( (float)*(double*)((uint8*)V$1 + 24ll) );
 float vr$6 = sinf( (float)*(double*)((uint8*)V$1 + 16ll) );
 float vr$10 = sinf( (float)*(double*)((uint8*)V$1 + 8ll) );
 float vr$14 = sinf( (float)*(double*)V$1 );
 _ZN7VECTOR4C1Edddd( tmp$990$1, (double)vr$14, (double)vr$10, (double)vr$6, (double)vr$2 );
 goto label$587;
 label$587:;
 return tmp$990$1;
}

struct $7VECTOR2* _Zv13cosR7VECTOR2( struct $7VECTOR2* tmp$992$1, struct $7VECTOR2* V$1 )
{
 label$588:;
 float vr$2 = cosf( (float)*(double*)((uint8*)V$1 + 8ll) );
 float vr$6 = cosf( (float)*(double*)V$1 );
 _ZN7VECTOR2C1Edd( tmp$992$1, (double)vr$6, (double)vr$2 );
 goto label$589;
 label$589:;
 return tmp$992$1;
}

struct $7VECTOR3* _Zv13cosR7VECTOR3( struct $7VECTOR3* tmp$994$1, struct $7VECTOR3* V$1 )
{
 label$590:;
 float vr$2 = cosf( (float)*(double*)((uint8*)V$1 + 16ll) );
 float vr$6 = cosf( (float)*(double*)((uint8*)V$1 + 8ll) );
 float vr$10 = cosf( (float)*(double*)V$1 );
 _ZN7VECTOR3C1Eddd( tmp$994$1, (double)vr$10, (double)vr$6, (double)vr$2 );
 goto label$591;
 label$591:;
 return tmp$994$1;
}

struct $7VECTOR4* _Zv13cosR7VECTOR4( struct $7VECTOR4* tmp$996$1, struct $7VECTOR4* V$1 )
{
 label$592:;
 float vr$2 = cosf( (float)*(double*)((uint8*)V$1 + 24ll) );
 float vr$6 = cosf( (float)*(double*)((uint8*)V$1 + 16ll) );
 float vr$10 = cosf( (float)*(double*)((uint8*)V$1 + 8ll) );
 float vr$14 = cosf( (float)*(double*)V$1 );
 _ZN7VECTOR4C1Edddd( tmp$996$1, (double)vr$14, (double)vr$10, (double)vr$6, (double)vr$2 );
 goto label$593;
 label$593:;
 return tmp$996$1;
}

struct $7VECTOR2* _Zv13tanR7VECTOR2( struct $7VECTOR2* tmp$998$1, struct $7VECTOR2* V$1 )
{
 label$594:;
 float vr$2 = tanf( (float)*(double*)((uint8*)V$1 + 8ll) );
 float vr$6 = tanf( (float)*(double*)V$1 );
 _ZN7VECTOR2C1Edd( tmp$998$1, (double)vr$6, (double)vr$2 );
 goto label$595;
 label$595:;
 return tmp$998$1;
}

struct $7VECTOR3* _Zv13tanR7VECTOR3( struct $7VECTOR3* tmp$1000$1, struct $7VECTOR3* V$1 )
{
 label$596:;
 float vr$2 = tanf( (float)*(double*)((uint8*)V$1 + 16ll) );
 float vr$8 = tanf( (float)*(double*)V$1 );
 _ZN7VECTOR3C1Eddd( tmp$1000$1, (double)vr$8, __builtin_tan( *(double*)((uint8*)V$1 + 8ll) ), (double)vr$2 );
 goto label$597;
 label$597:;
 return tmp$1000$1;
}

struct $7VECTOR4* _Zv13tanR7VECTOR4( struct $7VECTOR4* tmp$1002$1, struct $7VECTOR4* V$1 )
{
 label$598:;
 float vr$2 = tanf( (float)*(double*)((uint8*)V$1 + 24ll) );
 float vr$6 = tanf( (float)*(double*)((uint8*)V$1 + 16ll) );
 float vr$10 = tanf( (float)*(double*)((uint8*)V$1 + 8ll) );
 float vr$14 = tanf( (float)*(double*)V$1 );
 _ZN7VECTOR4C1Edddd( tmp$1002$1, (double)vr$14, (double)vr$10, (double)vr$6, (double)vr$2 );
 goto label$599;
 label$599:;
 return tmp$1002$1;
}

struct $7VECTOR2* _Zv14asinR7VECTOR2( struct $7VECTOR2* tmp$1004$1, struct $7VECTOR2* V$1 )
{
 label$600:;
 float vr$2 = asinf( (float)*(double*)((uint8*)V$1 + 8ll) );
 float vr$6 = asinf( (float)*(double*)V$1 );
 _ZN7VECTOR2C1Edd( tmp$1004$1, (double)vr$6, (double)vr$2 );
 goto label$601;
 label$601:;
 return tmp$1004$1;
}

struct $7VECTOR3* _Zv14asinR7VECTOR3( struct $7VECTOR3* tmp$1006$1, struct $7VECTOR3* V$1 )
{
 label$602:;
 float vr$2 = asinf( (float)*(double*)((uint8*)V$1 + 16ll) );
 float vr$6 = asinf( (float)*(double*)((uint8*)V$1 + 8ll) );
 float vr$10 = asinf( (float)*(double*)V$1 );
 _ZN7VECTOR3C1Eddd( tmp$1006$1, (double)vr$10, (double)vr$6, (double)vr$2 );
 goto label$603;
 label$603:;
 return tmp$1006$1;
}

struct $7VECTOR4* _Zv14asinR7VECTOR4( struct $7VECTOR4* tmp$1008$1, struct $7VECTOR4* V$1 )
{
 label$604:;
 float vr$2 = asinf( (float)*(double*)((uint8*)V$1 + 24ll) );
 float vr$6 = asinf( (float)*(double*)((uint8*)V$1 + 16ll) );
 float vr$10 = asinf( (float)*(double*)((uint8*)V$1 + 8ll) );
 float vr$14 = asinf( (float)*(double*)V$1 );
 _ZN7VECTOR4C1Edddd( tmp$1008$1, (double)vr$14, (double)vr$10, (double)vr$6, (double)vr$2 );
 goto label$605;
 label$605:;
 return tmp$1008$1;
}

struct $7VECTOR2* _Zv14acosR7VECTOR2( struct $7VECTOR2* tmp$1010$1, struct $7VECTOR2* V$1 )
{
 label$606:;
 float vr$2 = acosf( (float)*(double*)((uint8*)V$1 + 8ll) );
 float vr$6 = acosf( (float)*(double*)V$1 );
 _ZN7VECTOR2C1Edd( tmp$1010$1, (double)vr$6, (double)vr$2 );
 goto label$607;
 label$607:;
 return tmp$1010$1;
}

struct $7VECTOR3* _Zv14acosR7VECTOR3( struct $7VECTOR3* tmp$1012$1, struct $7VECTOR3* V$1 )
{
 label$608:;
 float vr$2 = acosf( (float)*(double*)((uint8*)V$1 + 16ll) );
 float vr$6 = acosf( (float)*(double*)((uint8*)V$1 + 8ll) );
 float vr$10 = acosf( (float)*(double*)V$1 );
 _ZN7VECTOR3C1Eddd( tmp$1012$1, (double)vr$10, (double)vr$6, (double)vr$2 );
 goto label$609;
 label$609:;
 return tmp$1012$1;
}

struct $7VECTOR4* _Zv14acosR7VECTOR4( struct $7VECTOR4* tmp$1014$1, struct $7VECTOR4* V$1 )
{
 label$610:;
 float vr$2 = acosf( (float)*(double*)((uint8*)V$1 + 24ll) );
 float vr$6 = acosf( (float)*(double*)((uint8*)V$1 + 16ll) );
 float vr$10 = acosf( (float)*(double*)((uint8*)V$1 + 8ll) );
 float vr$14 = acosf( (float)*(double*)V$1 );
 _ZN7VECTOR4C1Edddd( tmp$1014$1, (double)vr$14, (double)vr$10, (double)vr$6, (double)vr$2 );
 goto label$611;
 label$611:;
 return tmp$1014$1;
}

double _Z4ATANdd( double X$1, double Y$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$612:;
 float vr$3 = atan2f( (float)X$1, (float)Y$1 );
 fb$result$1 = (double)vr$3;
 goto label$613;
 label$613:;
 return fb$result$1;
}

struct $7VECTOR2* _Z4ATANR7VECTOR2S0_( struct $7VECTOR2* tmp$1016$1, struct $7VECTOR2* X$1, struct $7VECTOR2* Y$1 )
{
 label$614:;
 float vr$4 = atan2f( (float)*(double*)((uint8*)X$1 + 8ll), (float)*(double*)((uint8*)Y$1 + 8ll) );
 float vr$10 = atan2f( (float)*(double*)X$1, (float)*(double*)Y$1 );
 _ZN7VECTOR2C1Edd( tmp$1016$1, (double)vr$10, (double)vr$4 );
 goto label$615;
 label$615:;
 return tmp$1016$1;
}

struct $7VECTOR3* _Z4ATANR7VECTOR3S0_( struct $7VECTOR3* tmp$1018$1, struct $7VECTOR3* X$1, struct $7VECTOR3* Y$1 )
{
 label$616:;
 float vr$4 = atan2f( (float)*(double*)((uint8*)X$1 + 16ll), (float)*(double*)((uint8*)Y$1 + 16ll) );
 float vr$10 = atan2f( (float)*(double*)((uint8*)X$1 + 8ll), (float)*(double*)((uint8*)Y$1 + 8ll) );
 float vr$16 = atan2f( (float)*(double*)X$1, (float)*(double*)Y$1 );
 _ZN7VECTOR3C1Eddd( tmp$1018$1, (double)vr$16, (double)vr$10, (double)vr$4 );
 goto label$617;
 label$617:;
 return tmp$1018$1;
}

struct $7VECTOR4* _Z4ATANR7VECTOR4S0_( struct $7VECTOR4* tmp$1020$1, struct $7VECTOR4* X$1, struct $7VECTOR4* Y$1 )
{
 label$618:;
 float vr$4 = atan2f( (float)*(double*)((uint8*)X$1 + 24ll), (float)*(double*)((uint8*)Y$1 + 24ll) );
 float vr$10 = atan2f( (float)*(double*)((uint8*)X$1 + 16ll), (float)*(double*)((uint8*)Y$1 + 16ll) );
 float vr$16 = atan2f( (float)*(double*)((uint8*)X$1 + 8ll), (float)*(double*)((uint8*)Y$1 + 8ll) );
 float vr$22 = atan2f( (float)*(double*)X$1, (float)*(double*)Y$1 );
 _ZN7VECTOR4C1Edddd( tmp$1020$1, (double)vr$22, (double)vr$16, (double)vr$10, (double)vr$4 );
 goto label$619;
 label$619:;
 return tmp$1020$1;
}

double _Z3POWdd( double A$1, double B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$620:;
 float vr$3 = powf( (float)A$1, (float)B$1 );
 fb$result$1 = (double)vr$3;
 goto label$621;
 label$621:;
 return fb$result$1;
}

struct $7VECTOR2* _Z3POWR7VECTOR2S0_( struct $7VECTOR2* tmp$1022$1, struct $7VECTOR2* A$1, struct $7VECTOR2* B$1 )
{
 label$622:;
 float vr$4 = powf( (float)*(double*)((uint8*)A$1 + 8ll), (float)*(double*)((uint8*)B$1 + 8ll) );
 float vr$10 = powf( (float)*(double*)A$1, (float)*(double*)B$1 );
 _ZN7VECTOR2C1Edd( tmp$1022$1, (double)vr$10, (double)vr$4 );
 goto label$623;
 label$623:;
 return tmp$1022$1;
}

struct $7VECTOR3* _Z3POWR7VECTOR3S0_( struct $7VECTOR3* tmp$1024$1, struct $7VECTOR3* A$1, struct $7VECTOR3* B$1 )
{
 label$624:;
 float vr$4 = powf( (float)*(double*)((uint8*)A$1 + 16ll), (float)*(double*)((uint8*)B$1 + 16ll) );
 float vr$10 = powf( (float)*(double*)((uint8*)A$1 + 8ll), (float)*(double*)((uint8*)B$1 + 8ll) );
 float vr$16 = powf( (float)*(double*)A$1, (float)*(double*)B$1 );
 _ZN7VECTOR3C1Eddd( tmp$1024$1, (double)vr$16, (double)vr$10, (double)vr$4 );
 goto label$625;
 label$625:;
 return tmp$1024$1;
}

struct $7VECTOR4* _Z3POWR7VECTOR4S0_( struct $7VECTOR4* tmp$1026$1, struct $7VECTOR4* A$1, struct $7VECTOR4* B$1 )
{
 label$626:;
 float vr$4 = powf( (float)*(double*)((uint8*)A$1 + 24ll), (float)*(double*)((uint8*)B$1 + 24ll) );
 float vr$10 = powf( (float)*(double*)((uint8*)A$1 + 16ll), (float)*(double*)((uint8*)B$1 + 16ll) );
 float vr$16 = powf( (float)*(double*)((uint8*)A$1 + 8ll), (float)*(double*)((uint8*)B$1 + 8ll) );
 float vr$22 = powf( (float)*(double*)A$1, (float)*(double*)B$1 );
 _ZN7VECTOR4C1Edddd( tmp$1026$1, (double)vr$22, (double)vr$16, (double)vr$10, (double)vr$4 );
 goto label$627;
 label$627:;
 return tmp$1026$1;
}

double EXP2F( double A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$628:;
 float vr$2 = powf( 0x1.p+1f, (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$629;
 label$629:;
 return fb$result$1;
}

double _Z3EXPd( double A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$630:;
 float vr$2 = expf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$631;
 label$631:;
 return fb$result$1;
}

struct $7VECTOR2* _Z3EXPR7VECTOR2( struct $7VECTOR2* tmp$1028$1, struct $7VECTOR2* A$1 )
{
 label$632:;
 float vr$2 = expf( (float)*(double*)((uint8*)A$1 + 8ll) );
 float vr$6 = expf( (float)*(double*)A$1 );
 _ZN7VECTOR2C1Edd( tmp$1028$1, (double)vr$6, (double)vr$2 );
 goto label$633;
 label$633:;
 return tmp$1028$1;
}

struct $7VECTOR3* _Z3EXPR7VECTOR3( struct $7VECTOR3* tmp$1030$1, struct $7VECTOR3* A$1 )
{
 label$634:;
 float vr$2 = expf( (float)*(double*)((uint8*)A$1 + 16ll) );
 float vr$6 = expf( (float)*(double*)((uint8*)A$1 + 8ll) );
 float vr$10 = expf( (float)*(double*)A$1 );
 _ZN7VECTOR3C1Eddd( tmp$1030$1, (double)vr$10, (double)vr$6, (double)vr$2 );
 goto label$635;
 label$635:;
 return tmp$1030$1;
}

struct $7VECTOR4* _Z3EXPR7VECTOR4( struct $7VECTOR4* tmp$1032$1, struct $7VECTOR4* A$1 )
{
 label$636:;
 float vr$2 = expf( (float)*(double*)((uint8*)A$1 + 24ll) );
 float vr$6 = expf( (float)*(double*)((uint8*)A$1 + 16ll) );
 float vr$10 = expf( (float)*(double*)((uint8*)A$1 + 8ll) );
 float vr$14 = expf( (float)*(double*)A$1 );
 _ZN7VECTOR4C1Edddd( tmp$1032$1, (double)vr$14, (double)vr$10, (double)vr$6, (double)vr$2 );
 goto label$637;
 label$637:;
 return tmp$1032$1;
}

double _Z3LOGd( double A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$638:;
 float vr$2 = logf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$639;
 label$639:;
 return fb$result$1;
}

struct $7VECTOR2* _Z3LOGR7VECTOR2( struct $7VECTOR2* tmp$1034$1, struct $7VECTOR2* A$1 )
{
 label$640:;
 float vr$2 = logf( (float)*(double*)((uint8*)A$1 + 8ll) );
 float vr$6 = logf( (float)*(double*)A$1 );
 _ZN7VECTOR2C1Edd( tmp$1034$1, (double)vr$6, (double)vr$2 );
 goto label$641;
 label$641:;
 return tmp$1034$1;
}

struct $7VECTOR3* _Z3LOGR7VECTOR3( struct $7VECTOR3* tmp$1036$1, struct $7VECTOR3* A$1 )
{
 label$642:;
 float vr$2 = logf( (float)*(double*)((uint8*)A$1 + 16ll) );
 float vr$6 = logf( (float)*(double*)((uint8*)A$1 + 8ll) );
 float vr$10 = logf( (float)*(double*)A$1 );
 _ZN7VECTOR3C1Eddd( tmp$1036$1, (double)vr$10, (double)vr$6, (double)vr$2 );
 goto label$643;
 label$643:;
 return tmp$1036$1;
}

struct $7VECTOR4* _Z3LOGR7VECTOR4( struct $7VECTOR4* tmp$1038$1, struct $7VECTOR4* A$1 )
{
 label$644:;
 float vr$2 = logf( (float)*(double*)((uint8*)A$1 + 24ll) );
 float vr$6 = logf( (float)*(double*)((uint8*)A$1 + 16ll) );
 float vr$10 = logf( (float)*(double*)((uint8*)A$1 + 8ll) );
 float vr$14 = logf( (float)*(double*)A$1 );
 _ZN7VECTOR4C1Edddd( tmp$1038$1, (double)vr$14, (double)vr$10, (double)vr$6, (double)vr$2 );
 goto label$645;
 label$645:;
 return tmp$1038$1;
}

double _Z4EXP2Rd( double* A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$646:;
 double vr$2 = EXP2F( *A$1 );
 fb$result$1 = vr$2;
 goto label$647;
 label$647:;
 return fb$result$1;
}

struct $7VECTOR2* _Z4EXP2R7VECTOR2( struct $7VECTOR2* tmp$1040$1, struct $7VECTOR2* A$1 )
{
 label$648:;
 double vr$1 = EXP2F( *(double*)((uint8*)A$1 + 8ll) );
 double vr$3 = EXP2F( *(double*)A$1 );
 _ZN7VECTOR2C1Edd( tmp$1040$1, vr$3, vr$1 );
 goto label$649;
 label$649:;
 return tmp$1040$1;
}

struct $7VECTOR3* _Z4EXP2R7VECTOR3( struct $7VECTOR3* tmp$1042$1, struct $7VECTOR3* A$1 )
{
 label$650:;
 double vr$1 = EXP2F( *(double*)((uint8*)A$1 + 16ll) );
 double vr$3 = EXP2F( *(double*)((uint8*)A$1 + 8ll) );
 double vr$5 = EXP2F( *(double*)A$1 );
 _ZN7VECTOR3C1Eddd( tmp$1042$1, vr$5, vr$3, vr$1 );
 goto label$651;
 label$651:;
 return tmp$1042$1;
}

struct $7VECTOR4* _Z4EXP2R7VECTOR4( struct $7VECTOR4* tmp$1044$1, struct $7VECTOR4* A$1 )
{
 label$652:;
 double vr$1 = EXP2F( *(double*)((uint8*)A$1 + 24ll) );
 double vr$3 = EXP2F( *(double*)((uint8*)A$1 + 16ll) );
 double vr$5 = EXP2F( *(double*)((uint8*)A$1 + 8ll) );
 double vr$7 = EXP2F( *(double*)A$1 );
 _ZN7VECTOR4C1Edddd( tmp$1044$1, vr$7, vr$5, vr$3, vr$1 );
 goto label$653;
 label$653:;
 return tmp$1044$1;
}

double _Z4LOG2d( double A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$654:;
 float vr$2 = log2f( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$655;
 label$655:;
 return fb$result$1;
}

struct $7VECTOR2* _Z4LOG2R7VECTOR2( struct $7VECTOR2* tmp$1046$1, struct $7VECTOR2* A$1 )
{
 label$656:;
 float vr$2 = log2f( (float)*(double*)((uint8*)A$1 + 8ll) );
 float vr$6 = log2f( (float)*(double*)A$1 );
 _ZN7VECTOR2C1Edd( tmp$1046$1, (double)vr$6, (double)vr$2 );
 goto label$657;
 label$657:;
 return tmp$1046$1;
}

struct $7VECTOR3* _Z4LOG2R7VECTOR3( struct $7VECTOR3* tmp$1048$1, struct $7VECTOR3* A$1 )
{
 label$658:;
 float vr$2 = logf( (float)*(double*)((uint8*)A$1 + 16ll) );
 float vr$6 = log2f( (float)*(double*)((uint8*)A$1 + 8ll) );
 float vr$10 = log2f( (float)*(double*)A$1 );
 _ZN7VECTOR3C1Eddd( tmp$1048$1, (double)vr$10, (double)vr$6, (double)vr$2 );
 goto label$659;
 label$659:;
 return tmp$1048$1;
}

struct $7VECTOR4* _Z4LOG2R7VECTOR4( struct $7VECTOR4* tmp$1050$1, struct $7VECTOR4* A$1 )
{
 label$660:;
 float vr$2 = log2f( (float)*(double*)((uint8*)A$1 + 24ll) );
 float vr$6 = log2f( (float)*(double*)((uint8*)A$1 + 16ll) );
 float vr$10 = log2f( (float)*(double*)((uint8*)A$1 + 8ll) );
 float vr$14 = log2f( (float)*(double*)A$1 );
 _ZN7VECTOR4C1Edddd( tmp$1050$1, (double)vr$14, (double)vr$10, (double)vr$6, (double)vr$2 );
 goto label$661;
 label$661:;
 return tmp$1050$1;
}

double _Z4SQRTd( double A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$662:;
 float vr$2 = sqrtf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$663;
 label$663:;
 return fb$result$1;
}

struct $7VECTOR2* _Z4SQRTR7VECTOR2( struct $7VECTOR2* tmp$1052$1, struct $7VECTOR2* A$1 )
{
 label$664:;
 float vr$2 = sqrtf( (float)*(double*)((uint8*)A$1 + 8ll) );
 float vr$6 = sqrtf( (float)*(double*)A$1 );
 _ZN7VECTOR2C1Edd( tmp$1052$1, (double)vr$6, (double)vr$2 );
 goto label$665;
 label$665:;
 return tmp$1052$1;
}

struct $7VECTOR3* _Z4SQRTR7VECTOR3( struct $7VECTOR3* tmp$1054$1, struct $7VECTOR3* A$1 )
{
 label$666:;
 float vr$2 = sqrtf( (float)*(double*)((uint8*)A$1 + 16ll) );
 float vr$6 = sqrtf( (float)*(double*)((uint8*)A$1 + 8ll) );
 float vr$10 = sqrtf( (float)*(double*)A$1 );
 _ZN7VECTOR3C1Eddd( tmp$1054$1, (double)vr$10, (double)vr$6, (double)vr$2 );
 goto label$667;
 label$667:;
 return tmp$1054$1;
}

struct $7VECTOR4* _Z4SQRTR7VECTOR4( struct $7VECTOR4* tmp$1056$1, struct $7VECTOR4* A$1 )
{
 label$668:;
 float vr$2 = sqrtf( (float)*(double*)((uint8*)A$1 + 24ll) );
 float vr$6 = sqrtf( (float)*(double*)((uint8*)A$1 + 16ll) );
 float vr$10 = sqrtf( (float)*(double*)((uint8*)A$1 + 8ll) );
 float vr$14 = sqrtf( (float)*(double*)A$1 );
 _ZN7VECTOR4C1Edddd( tmp$1056$1, (double)vr$14, (double)vr$10, (double)vr$6, (double)vr$2 );
 goto label$669;
 label$669:;
 return tmp$1056$1;
}

double _Z11INVERSESQRTd( double A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$670:;
 float vr$2 = sqrtf( (float)A$1 );
 fb$result$1 = 0x1.p+0 / (double)vr$2;
 goto label$671;
 label$671:;
 return fb$result$1;
}

struct $7VECTOR2* _Z11INVERSESQRTR7VECTOR2( struct $7VECTOR2* tmp$1058$1, struct $7VECTOR2* A$1 )
{
 label$672:;
 float vr$2 = sqrtf( (float)*(double*)((uint8*)A$1 + 8ll) );
 float vr$7 = sqrtf( (float)*(double*)A$1 );
 _ZN7VECTOR2C1Edd( tmp$1058$1, 0x1.p+0 / (double)vr$7, 0x1.p+0 / (double)vr$2 );
 goto label$673;
 label$673:;
 return tmp$1058$1;
}

struct $7VECTOR3* _Z11INVERSESQRTR7VECTOR3( struct $7VECTOR3* tmp$1060$1, struct $7VECTOR3* A$1 )
{
 label$674:;
 float vr$2 = sqrtf( (float)*(double*)((uint8*)A$1 + 16ll) );
 float vr$7 = sqrtf( (float)*(double*)((uint8*)A$1 + 8ll) );
 float vr$12 = sqrtf( (float)*(double*)A$1 );
 _ZN7VECTOR3C1Eddd( tmp$1060$1, 0x1.p+0 / (double)vr$12, 0x1.p+0 / (double)vr$7, 0x1.p+0 / (double)vr$2 );
 goto label$675;
 label$675:;
 return tmp$1060$1;
}

struct $7VECTOR4* _Z11INVERSESQRTR7VECTOR4( struct $7VECTOR4* tmp$1062$1, struct $7VECTOR4* A$1 )
{
 label$676:;
 float vr$2 = sqrtf( (float)*(double*)((uint8*)A$1 + 24ll) );
 float vr$7 = sqrtf( (float)*(double*)((uint8*)A$1 + 16ll) );
 float vr$12 = sqrtf( (float)*(double*)((uint8*)A$1 + 8ll) );
 float vr$17 = sqrtf( (float)*(double*)A$1 );
 _ZN7VECTOR4C1Edddd( tmp$1062$1, 0x1.p+0 / (double)vr$17, 0x1.p+0 / (double)vr$12, 0x1.p+0 / (double)vr$7, 0x1.p+0 / (double)vr$2 );
 goto label$677;
 label$677:;
 return tmp$1062$1;
}

struct $7VECTOR2* _Zv13absRK7VECTOR2( struct $7VECTOR2* tmp$1064$1, struct $7VECTOR2* V$1 )
{
 double TMP$1066$1;
 double TMP$1067$1;
 label$678:;
 if( *(double*)((uint8*)V$1 + 8ll) >= 0x0p+0 ) goto label$681;
 TMP$1067$1 = -(*(double*)((uint8*)V$1 + 8ll));
 goto label$682;
 label$681:;
 TMP$1067$1 = *(double*)((uint8*)V$1 + 8ll);
 label$682:;
 if( *(double*)V$1 >= 0x0p+0 ) goto label$680;
 TMP$1066$1 = -(*(double*)V$1);
 goto label$683;
 label$680:;
 TMP$1066$1 = *(double*)V$1;
 label$683:;
 _ZN7VECTOR2C1Edd( tmp$1064$1, TMP$1066$1, TMP$1067$1 );
 goto label$679;
 label$679:;
 return tmp$1064$1;
}

struct $7VECTOR3* _Zv13absRK7VECTOR3( struct $7VECTOR3* tmp$1068$1, struct $7VECTOR3* V$1 )
{
 double TMP$1070$1;
 double TMP$1071$1;
 double TMP$1072$1;
 label$684:;
 if( *(double*)((uint8*)V$1 + 16ll) >= 0x0p+0 ) goto label$688;
 TMP$1072$1 = -(*(double*)((uint8*)V$1 + 16ll));
 goto label$689;
 label$688:;
 TMP$1072$1 = *(double*)((uint8*)V$1 + 16ll);
 label$689:;
 if( *(double*)((uint8*)V$1 + 8ll) >= 0x0p+0 ) goto label$687;
 TMP$1071$1 = -(*(double*)((uint8*)V$1 + 8ll));
 goto label$690;
 label$687:;
 TMP$1071$1 = *(double*)((uint8*)V$1 + 8ll);
 label$690:;
 if( *(double*)V$1 >= 0x0p+0 ) goto label$686;
 TMP$1070$1 = -(*(double*)V$1);
 goto label$691;
 label$686:;
 TMP$1070$1 = *(double*)V$1;
 label$691:;
 _ZN7VECTOR3C1Eddd( tmp$1068$1, TMP$1070$1, TMP$1071$1, TMP$1072$1 );
 goto label$685;
 label$685:;
 return tmp$1068$1;
}

struct $7VECTOR4* _Zv13absRK7VECTOR4( struct $7VECTOR4* tmp$1073$1, struct $7VECTOR4* V$1 )
{
 double TMP$1075$1;
 double TMP$1076$1;
 double TMP$1077$1;
 double TMP$1078$1;
 label$692:;
 if( *(double*)((uint8*)V$1 + 24ll) >= 0x0p+0 ) goto label$697;
 TMP$1078$1 = -(*(double*)((uint8*)V$1 + 24ll));
 goto label$698;
 label$697:;
 TMP$1078$1 = *(double*)((uint8*)V$1 + 24ll);
 label$698:;
 if( *(double*)((uint8*)V$1 + 16ll) >= 0x0p+0 ) goto label$696;
 TMP$1077$1 = -(*(double*)((uint8*)V$1 + 16ll));
 goto label$699;
 label$696:;
 TMP$1077$1 = *(double*)((uint8*)V$1 + 16ll);
 label$699:;
 if( *(double*)((uint8*)V$1 + 8ll) >= 0x0p+0 ) goto label$695;
 TMP$1076$1 = -(*(double*)((uint8*)V$1 + 8ll));
 goto label$700;
 label$695:;
 TMP$1076$1 = *(double*)((uint8*)V$1 + 8ll);
 label$700:;
 if( *(double*)V$1 >= 0x0p+0 ) goto label$694;
 TMP$1075$1 = -(*(double*)V$1);
 goto label$701;
 label$694:;
 TMP$1075$1 = *(double*)V$1;
 label$701:;
 _ZN7VECTOR4C1Edddd( tmp$1073$1, TMP$1075$1, TMP$1076$1, TMP$1077$1, TMP$1078$1 );
 goto label$693;
 label$693:;
 return tmp$1073$1;
}

double _Z4SIGNd( double A$1 )
{
 int64 TMP$1079$1;
 int64 TMP$1080$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$702:;
 if( A$1 <= 0x0p+0 ) goto label$705;
 TMP$1080$1 = 1ll;
 goto label$706;
 label$705:;
 if( A$1 >= 0x0p+0 ) goto label$704;
 TMP$1079$1 = -1ll;
 goto label$707;
 label$704:;
 TMP$1079$1 = 0ll;
 label$707:;
 TMP$1080$1 = TMP$1079$1;
 label$706:;
 fb$result$1 = (double)TMP$1080$1;
 goto label$703;
 label$703:;
 return fb$result$1;
}

struct $7VECTOR2* _Z4SIGNR7VECTOR2( struct $7VECTOR2* tmp$1081$1, struct $7VECTOR2* A$1 )
{
 int64 TMP$1083$1;
 int64 TMP$1084$1;
 int64 TMP$1085$1;
 int64 TMP$1086$1;
 label$708:;
 if( *(double*)((uint8*)A$1 + 8ll) <= 0x0p+0 ) goto label$713;
 TMP$1086$1 = 1ll;
 goto label$714;
 label$713:;
 if( *(double*)((uint8*)A$1 + 8ll) >= 0x0p+0 ) goto label$712;
 TMP$1085$1 = -1ll;
 goto label$715;
 label$712:;
 TMP$1085$1 = 0ll;
 label$715:;
 TMP$1086$1 = TMP$1085$1;
 label$714:;
 if( *(double*)A$1 <= 0x0p+0 ) goto label$711;
 TMP$1084$1 = 1ll;
 goto label$716;
 label$711:;
 if( *(double*)A$1 >= 0x0p+0 ) goto label$710;
 TMP$1083$1 = -1ll;
 goto label$717;
 label$710:;
 TMP$1083$1 = 0ll;
 label$717:;
 TMP$1084$1 = TMP$1083$1;
 label$716:;
 _ZN7VECTOR2C1Edd( tmp$1081$1, (double)TMP$1084$1, (double)TMP$1086$1 );
 goto label$709;
 label$709:;
 return tmp$1081$1;
}

struct $7VECTOR3* _Z4SIGNR7VECTOR3( struct $7VECTOR3* tmp$1087$1, struct $7VECTOR3* A$1 )
{
 int64 TMP$1089$1;
 int64 TMP$1090$1;
 int64 TMP$1091$1;
 int64 TMP$1092$1;
 int64 TMP$1093$1;
 int64 TMP$1094$1;
 label$718:;
 if( *(double*)((uint8*)A$1 + 16ll) <= 0x0p+0 ) goto label$725;
 TMP$1094$1 = 1ll;
 goto label$726;
 label$725:;
 if( *(double*)((uint8*)A$1 + 16ll) >= 0x0p+0 ) goto label$724;
 TMP$1093$1 = -1ll;
 goto label$727;
 label$724:;
 TMP$1093$1 = 0ll;
 label$727:;
 TMP$1094$1 = TMP$1093$1;
 label$726:;
 if( *(double*)((uint8*)A$1 + 8ll) <= 0x0p+0 ) goto label$723;
 TMP$1092$1 = 1ll;
 goto label$728;
 label$723:;
 if( *(double*)((uint8*)A$1 + 8ll) >= 0x0p+0 ) goto label$722;
 TMP$1091$1 = -1ll;
 goto label$729;
 label$722:;
 TMP$1091$1 = 0ll;
 label$729:;
 TMP$1092$1 = TMP$1091$1;
 label$728:;
 if( *(double*)A$1 <= 0x0p+0 ) goto label$721;
 TMP$1090$1 = 1ll;
 goto label$730;
 label$721:;
 if( *(double*)A$1 >= 0x0p+0 ) goto label$720;
 TMP$1089$1 = -1ll;
 goto label$731;
 label$720:;
 TMP$1089$1 = 0ll;
 label$731:;
 TMP$1090$1 = TMP$1089$1;
 label$730:;
 _ZN7VECTOR3C1Eddd( tmp$1087$1, (double)TMP$1090$1, (double)TMP$1092$1, (double)TMP$1094$1 );
 goto label$719;
 label$719:;
 return tmp$1087$1;
}

struct $7VECTOR4* _Z4SIGNR7VECTOR4( struct $7VECTOR4* tmp$1095$1, struct $7VECTOR4* A$1 )
{
 int64 TMP$1097$1;
 int64 TMP$1098$1;
 int64 TMP$1099$1;
 int64 TMP$1100$1;
 int64 TMP$1101$1;
 int64 TMP$1102$1;
 int64 TMP$1103$1;
 int64 TMP$1104$1;
 label$732:;
 if( *(double*)((uint8*)A$1 + 24ll) <= 0x0p+0 ) goto label$741;
 TMP$1104$1 = 1ll;
 goto label$742;
 label$741:;
 if( *(double*)((uint8*)A$1 + 24ll) >= 0x0p+0 ) goto label$740;
 TMP$1103$1 = -1ll;
 goto label$743;
 label$740:;
 TMP$1103$1 = 0ll;
 label$743:;
 TMP$1104$1 = TMP$1103$1;
 label$742:;
 if( *(double*)((uint8*)A$1 + 16ll) <= 0x0p+0 ) goto label$739;
 TMP$1102$1 = 1ll;
 goto label$744;
 label$739:;
 if( *(double*)((uint8*)A$1 + 16ll) >= 0x0p+0 ) goto label$738;
 TMP$1101$1 = -1ll;
 goto label$745;
 label$738:;
 TMP$1101$1 = 0ll;
 label$745:;
 TMP$1102$1 = TMP$1101$1;
 label$744:;
 if( *(double*)((uint8*)A$1 + 8ll) <= 0x0p+0 ) goto label$737;
 TMP$1100$1 = 1ll;
 goto label$746;
 label$737:;
 if( *(double*)((uint8*)A$1 + 8ll) >= 0x0p+0 ) goto label$736;
 TMP$1099$1 = -1ll;
 goto label$747;
 label$736:;
 TMP$1099$1 = 0ll;
 label$747:;
 TMP$1100$1 = TMP$1099$1;
 label$746:;
 if( *(double*)A$1 <= 0x0p+0 ) goto label$735;
 TMP$1098$1 = 1ll;
 goto label$748;
 label$735:;
 if( *(double*)A$1 >= 0x0p+0 ) goto label$734;
 TMP$1097$1 = -1ll;
 goto label$749;
 label$734:;
 TMP$1097$1 = 0ll;
 label$749:;
 TMP$1098$1 = TMP$1097$1;
 label$748:;
 _ZN7VECTOR4C1Edddd( tmp$1095$1, (double)TMP$1098$1, (double)TMP$1100$1, (double)TMP$1102$1, (double)TMP$1104$1 );
 goto label$733;
 label$733:;
 return tmp$1095$1;
}

double _Z5FLOORd( double A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$750:;
 float vr$2 = floorf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$751;
 label$751:;
 return fb$result$1;
}

struct $7VECTOR2* _Z5FLOORR7VECTOR2( struct $7VECTOR2* tmp$1105$1, struct $7VECTOR2* A$1 )
{
 label$752:;
 float vr$2 = floorf( (float)*(double*)((uint8*)A$1 + 8ll) );
 float vr$6 = floorf( (float)*(double*)A$1 );
 _ZN7VECTOR2C1Edd( tmp$1105$1, (double)vr$6, (double)vr$2 );
 goto label$753;
 label$753:;
 return tmp$1105$1;
}

struct $7VECTOR3* _Z5FLOORR7VECTOR3( struct $7VECTOR3* tmp$1107$1, struct $7VECTOR3* A$1 )
{
 label$754:;
 float vr$2 = floorf( (float)*(double*)((uint8*)A$1 + 16ll) );
 float vr$6 = floorf( (float)*(double*)((uint8*)A$1 + 8ll) );
 float vr$10 = floorf( (float)*(double*)A$1 );
 _ZN7VECTOR3C1Eddd( tmp$1107$1, (double)vr$10, (double)vr$6, (double)vr$2 );
 goto label$755;
 label$755:;
 return tmp$1107$1;
}

struct $7VECTOR4* _Z5FLOORR7VECTOR4( struct $7VECTOR4* tmp$1109$1, struct $7VECTOR4* A$1 )
{
 label$756:;
 float vr$2 = floorf( (float)*(double*)((uint8*)A$1 + 24ll) );
 float vr$6 = floorf( (float)*(double*)((uint8*)A$1 + 16ll) );
 float vr$10 = floorf( (float)*(double*)((uint8*)A$1 + 8ll) );
 float vr$14 = floorf( (float)*(double*)A$1 );
 _ZN7VECTOR4C1Edddd( tmp$1109$1, (double)vr$14, (double)vr$10, (double)vr$6, (double)vr$2 );
 goto label$757;
 label$757:;
 return tmp$1109$1;
}

double _Z4CEILd( double A$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$758:;
 float vr$2 = ceilf( (float)A$1 );
 fb$result$1 = (double)vr$2;
 goto label$759;
 label$759:;
 return fb$result$1;
}

struct $7VECTOR2* _Z4CEILR7VECTOR2( struct $7VECTOR2* tmp$1111$1, struct $7VECTOR2* A$1 )
{
 label$760:;
 float vr$2 = ceilf( (float)*(double*)((uint8*)A$1 + 8ll) );
 float vr$6 = ceilf( (float)*(double*)A$1 );
 _ZN7VECTOR2C1Edd( tmp$1111$1, (double)vr$6, (double)vr$2 );
 goto label$761;
 label$761:;
 return tmp$1111$1;
}

struct $7VECTOR3* _Z4CEILR7VECTOR3( struct $7VECTOR3* tmp$1113$1, struct $7VECTOR3* A$1 )
{
 label$762:;
 float vr$2 = ceilf( (float)*(double*)((uint8*)A$1 + 16ll) );
 float vr$6 = ceilf( (float)*(double*)((uint8*)A$1 + 8ll) );
 float vr$10 = ceilf( (float)*(double*)A$1 );
 _ZN7VECTOR3C1Eddd( tmp$1113$1, (double)vr$10, (double)vr$6, (double)vr$2 );
 goto label$763;
 label$763:;
 return tmp$1113$1;
}

struct $7VECTOR4* _Z4CEILR7VECTOR4( struct $7VECTOR4* tmp$1115$1, struct $7VECTOR4* A$1 )
{
 label$764:;
 float vr$2 = ceilf( (float)*(double*)((uint8*)A$1 + 24ll) );
 float vr$6 = ceilf( (float)*(double*)((uint8*)A$1 + 16ll) );
 float vr$10 = ceilf( (float)*(double*)((uint8*)A$1 + 8ll) );
 float vr$14 = ceilf( (float)*(double*)A$1 );
 _ZN7VECTOR4C1Edddd( tmp$1115$1, (double)vr$14, (double)vr$10, (double)vr$6, (double)vr$2 );
 goto label$765;
 label$765:;
 return tmp$1115$1;
}

double _Z5FRACTd( double X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$766:;
 double vr$1 = _Z5FLOORd( X$1 );
 fb$result$1 = X$1 - vr$1;
 goto label$767;
 label$767:;
 return fb$result$1;
}

struct $7VECTOR2* _Z5FRACTR7VECTOR2( struct $7VECTOR2* tmp$1117$1, struct $7VECTOR2* X$1 )
{
 label$768:;
 double vr$2 = _Z5FLOORd( *(double*)((uint8*)X$1 + 8ll) );
 double vr$6 = _Z5FLOORd( *(double*)X$1 );
 _ZN7VECTOR2C1Edd( tmp$1117$1, *(double*)X$1 - vr$6, *(double*)((uint8*)X$1 + 8ll) - vr$2 );
 goto label$769;
 label$769:;
 return tmp$1117$1;
}

struct $7VECTOR3* _Z5FRACTR7VECTOR3( struct $7VECTOR3* tmp$1119$1, struct $7VECTOR3* X$1 )
{
 label$770:;
 double vr$2 = _Z5FLOORd( *(double*)((uint8*)X$1 + 16ll) );
 double vr$6 = _Z5FLOORd( *(double*)((uint8*)X$1 + 8ll) );
 double vr$10 = _Z5FLOORd( *(double*)X$1 );
 _ZN7VECTOR3C1Eddd( tmp$1119$1, *(double*)X$1 - vr$10, *(double*)((uint8*)X$1 + 8ll) - vr$6, *(double*)((uint8*)X$1 + 16ll) - vr$2 );
 goto label$771;
 label$771:;
 return tmp$1119$1;
}

struct $7VECTOR4* _Z5FRACTR7VECTOR4( struct $7VECTOR4* tmp$1121$1, struct $7VECTOR4* X$1 )
{
 label$772:;
 double vr$2 = _Z5FLOORd( *(double*)((uint8*)X$1 + 24ll) );
 double vr$6 = _Z5FLOORd( *(double*)((uint8*)X$1 + 16ll) );
 double vr$10 = _Z5FLOORd( *(double*)((uint8*)X$1 + 8ll) );
 double vr$14 = _Z5FLOORd( *(double*)X$1 );
 _ZN7VECTOR4C1Edddd( tmp$1121$1, *(double*)X$1 - vr$14, *(double*)((uint8*)X$1 + 8ll) - vr$10, *(double*)((uint8*)X$1 + 16ll) - vr$6, *(double*)((uint8*)X$1 + 24ll) - vr$2 );
 goto label$773;
 label$773:;
 return tmp$1121$1;
}

int64 _Z6MODULOll( int64 X$1, int64 Y$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$774:;
 fb$result$1 = X$1 - (Y$1 * (X$1 / Y$1));
 goto label$775;
 label$775:;
 return fb$result$1;
}

double _Z6MODULOdd( double X$1, double Y$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$776:;
 double vr$2 = _Z5FLOORd( X$1 / Y$1 );
 fb$result$1 = X$1 - (Y$1 * vr$2);
 goto label$777;
 label$777:;
 return fb$result$1;
}

struct $7VECTOR2* _Z6MODULOR7VECTOR2S0_( struct $7VECTOR2* tmp$1123$1, struct $7VECTOR2* X$1, struct $7VECTOR2* Y$1 )
{
 label$778:;
 double vr$5 = _Z5FLOORd( *(double*)((uint8*)X$1 + 8ll) / *(double*)((uint8*)Y$1 + 8ll) );
 double vr$13 = _Z5FLOORd( *(double*)X$1 / *(double*)Y$1 );
 _ZN7VECTOR2C1Edd( tmp$1123$1, *(double*)X$1 - (*(double*)Y$1 * vr$13), *(double*)((uint8*)X$1 + 8ll) - (*(double*)((uint8*)Y$1 + 8ll) * vr$5) );
 goto label$779;
 label$779:;
 return tmp$1123$1;
}

struct $7VECTOR3* _Z6MODULOR7VECTOR3S0_( struct $7VECTOR3* tmp$1125$1, struct $7VECTOR3* X$1, struct $7VECTOR3* Y$1 )
{
 label$780:;
 double vr$5 = _Z5FLOORd( *(double*)((uint8*)X$1 + 16ll) / *(double*)((uint8*)Y$1 + 16ll) );
 double vr$13 = _Z5FLOORd( *(double*)((uint8*)X$1 + 8ll) / *(double*)((uint8*)Y$1 + 8ll) );
 double vr$21 = _Z5FLOORd( *(double*)X$1 / *(double*)Y$1 );
 _ZN7VECTOR3C1Eddd( tmp$1125$1, *(double*)X$1 - (*(double*)Y$1 * vr$21), *(double*)((uint8*)X$1 + 8ll) - (*(double*)((uint8*)Y$1 + 8ll) * vr$13), *(double*)((uint8*)X$1 + 16ll) - (*(double*)((uint8*)Y$1 + 16ll) * vr$5) );
 goto label$781;
 label$781:;
 return tmp$1125$1;
}

struct $7VECTOR4* _Z6MODULOR7VECTOR4S0_( struct $7VECTOR4* tmp$1127$1, struct $7VECTOR4* X$1, struct $7VECTOR4* Y$1 )
{
 label$782:;
 double vr$5 = _Z5FLOORd( *(double*)((uint8*)X$1 + 24ll) / *(double*)((uint8*)Y$1 + 24ll) );
 double vr$13 = _Z5FLOORd( *(double*)((uint8*)X$1 + 16ll) / *(double*)((uint8*)Y$1 + 16ll) );
 double vr$21 = _Z5FLOORd( *(double*)((uint8*)X$1 + 8ll) / *(double*)((uint8*)Y$1 + 8ll) );
 double vr$29 = _Z5FLOORd( *(double*)X$1 / *(double*)Y$1 );
 _ZN7VECTOR4C1Edddd( tmp$1127$1, *(double*)X$1 - (*(double*)Y$1 * vr$29), *(double*)((uint8*)X$1 + 8ll) - (*(double*)((uint8*)Y$1 + 8ll) * vr$21), *(double*)((uint8*)X$1 + 16ll) - (*(double*)((uint8*)Y$1 + 16ll) * vr$13), *(double*)((uint8*)X$1 + 24ll) - (*(double*)((uint8*)Y$1 + 24ll) * vr$5) );
 goto label$783;
 label$783:;
 return tmp$1127$1;
}

double _Z3MINdd( double A$1, double B$1 )
{
 double TMP$1129$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$784:;
 if( A$1 >= B$1 ) goto label$786;
 TMP$1129$1 = A$1;
 goto label$787;
 label$786:;
 TMP$1129$1 = B$1;
 label$787:;
 fb$result$1 = TMP$1129$1;
 goto label$785;
 label$785:;
 return fb$result$1;
}

struct $7VECTOR2* _Z3MINR7VECTOR2S0_( struct $7VECTOR2* tmp$1130$1, struct $7VECTOR2* A$1, struct $7VECTOR2* B$1 )
{
 double TMP$1132$1;
 double TMP$1133$1;
 label$788:;
 if( *(double*)((uint8*)A$1 + 8ll) >= *(double*)((uint8*)B$1 + 8ll) ) goto label$791;
 TMP$1133$1 = *(double*)((uint8*)A$1 + 8ll);
 goto label$792;
 label$791:;
 TMP$1133$1 = *(double*)((uint8*)B$1 + 8ll);
 label$792:;
 if( *(double*)A$1 >= *(double*)B$1 ) goto label$790;
 TMP$1132$1 = *(double*)A$1;
 goto label$793;
 label$790:;
 TMP$1132$1 = *(double*)B$1;
 label$793:;
 _ZN7VECTOR2C1Edd( tmp$1130$1, TMP$1132$1, TMP$1133$1 );
 goto label$789;
 label$789:;
 return tmp$1130$1;
}

struct $7VECTOR3* _Z3MINR7VECTOR3S0_( struct $7VECTOR3* tmp$1134$1, struct $7VECTOR3* A$1, struct $7VECTOR3* B$1 )
{
 double TMP$1136$1;
 double TMP$1137$1;
 double TMP$1138$1;
 label$794:;
 if( *(double*)((uint8*)A$1 + 16ll) >= *(double*)((uint8*)B$1 + 16ll) ) goto label$798;
 TMP$1138$1 = *(double*)((uint8*)A$1 + 16ll);
 goto label$799;
 label$798:;
 TMP$1138$1 = *(double*)((uint8*)B$1 + 16ll);
 label$799:;
 if( *(double*)((uint8*)A$1 + 8ll) >= *(double*)((uint8*)B$1 + 8ll) ) goto label$797;
 TMP$1137$1 = *(double*)((uint8*)A$1 + 8ll);
 goto label$800;
 label$797:;
 TMP$1137$1 = *(double*)((uint8*)B$1 + 8ll);
 label$800:;
 if( *(double*)A$1 >= *(double*)B$1 ) goto label$796;
 TMP$1136$1 = *(double*)A$1;
 goto label$801;
 label$796:;
 TMP$1136$1 = *(double*)B$1;
 label$801:;
 _ZN7VECTOR3C1Eddd( tmp$1134$1, TMP$1136$1, TMP$1137$1, TMP$1138$1 );
 goto label$795;
 label$795:;
 return tmp$1134$1;
}

struct $7VECTOR4* _Z3MINR7VECTOR4S0_( struct $7VECTOR4* tmp$1139$1, struct $7VECTOR4* A$1, struct $7VECTOR4* B$1 )
{
 double TMP$1141$1;
 double TMP$1142$1;
 double TMP$1143$1;
 double TMP$1144$1;
 label$802:;
 if( *(double*)((uint8*)A$1 + 24ll) >= *(double*)((uint8*)B$1 + 24ll) ) goto label$807;
 TMP$1144$1 = *(double*)((uint8*)A$1 + 24ll);
 goto label$808;
 label$807:;
 TMP$1144$1 = *(double*)((uint8*)B$1 + 24ll);
 label$808:;
 if( *(double*)((uint8*)A$1 + 16ll) >= *(double*)((uint8*)B$1 + 16ll) ) goto label$806;
 TMP$1143$1 = *(double*)((uint8*)A$1 + 16ll);
 goto label$809;
 label$806:;
 TMP$1143$1 = *(double*)((uint8*)B$1 + 16ll);
 label$809:;
 if( *(double*)((uint8*)A$1 + 8ll) >= *(double*)((uint8*)B$1 + 8ll) ) goto label$805;
 TMP$1142$1 = *(double*)((uint8*)A$1 + 8ll);
 goto label$810;
 label$805:;
 TMP$1142$1 = *(double*)((uint8*)B$1 + 8ll);
 label$810:;
 if( *(double*)A$1 >= *(double*)B$1 ) goto label$804;
 TMP$1141$1 = *(double*)A$1;
 goto label$811;
 label$804:;
 TMP$1141$1 = *(double*)B$1;
 label$811:;
 _ZN7VECTOR4C1Edddd( tmp$1139$1, TMP$1141$1, TMP$1142$1, TMP$1143$1, TMP$1144$1 );
 goto label$803;
 label$803:;
 return tmp$1139$1;
}

struct $7VECTOR2* _Z3MINR7VECTOR2Rd( struct $7VECTOR2* tmp$1145$1, struct $7VECTOR2* A$1, double* B$1 )
{
 double TMP$1147$1;
 double TMP$1148$1;
 label$812:;
 if( *(double*)((uint8*)A$1 + 8ll) >= *B$1 ) goto label$815;
 TMP$1148$1 = *(double*)((uint8*)A$1 + 8ll);
 goto label$816;
 label$815:;
 TMP$1148$1 = *B$1;
 label$816:;
 if( *(double*)A$1 >= *B$1 ) goto label$814;
 TMP$1147$1 = *(double*)A$1;
 goto label$817;
 label$814:;
 TMP$1147$1 = *B$1;
 label$817:;
 _ZN7VECTOR2C1Edd( tmp$1145$1, TMP$1147$1, TMP$1148$1 );
 goto label$813;
 label$813:;
 return tmp$1145$1;
}

struct $7VECTOR3* _Z3MINR7VECTOR3Rd( struct $7VECTOR3* tmp$1149$1, struct $7VECTOR3* A$1, double* B$1 )
{
 double TMP$1151$1;
 double TMP$1152$1;
 double TMP$1153$1;
 label$818:;
 if( *(double*)((uint8*)A$1 + 16ll) >= *B$1 ) goto label$822;
 TMP$1153$1 = *(double*)((uint8*)A$1 + 16ll);
 goto label$823;
 label$822:;
 TMP$1153$1 = *B$1;
 label$823:;
 if( *(double*)((uint8*)A$1 + 8ll) >= *B$1 ) goto label$821;
 TMP$1152$1 = *(double*)((uint8*)A$1 + 8ll);
 goto label$824;
 label$821:;
 TMP$1152$1 = *B$1;
 label$824:;
 if( *(double*)A$1 >= *B$1 ) goto label$820;
 TMP$1151$1 = *(double*)A$1;
 goto label$825;
 label$820:;
 TMP$1151$1 = *B$1;
 label$825:;
 _ZN7VECTOR3C1Eddd( tmp$1149$1, TMP$1151$1, TMP$1152$1, TMP$1153$1 );
 goto label$819;
 label$819:;
 return tmp$1149$1;
}

struct $7VECTOR4* _Z3MINR7VECTOR4Rd( struct $7VECTOR4* tmp$1154$1, struct $7VECTOR4* A$1, double* B$1 )
{
 double TMP$1156$1;
 double TMP$1157$1;
 double TMP$1158$1;
 double TMP$1159$1;
 label$826:;
 if( *(double*)((uint8*)A$1 + 24ll) >= *B$1 ) goto label$831;
 TMP$1159$1 = *(double*)((uint8*)A$1 + 24ll);
 goto label$832;
 label$831:;
 TMP$1159$1 = *B$1;
 label$832:;
 if( *(double*)((uint8*)A$1 + 16ll) >= *B$1 ) goto label$830;
 TMP$1158$1 = *(double*)((uint8*)A$1 + 16ll);
 goto label$833;
 label$830:;
 TMP$1158$1 = *B$1;
 label$833:;
 if( *(double*)((uint8*)A$1 + 8ll) >= *B$1 ) goto label$829;
 TMP$1157$1 = *(double*)((uint8*)A$1 + 8ll);
 goto label$834;
 label$829:;
 TMP$1157$1 = *B$1;
 label$834:;
 if( *(double*)A$1 >= *B$1 ) goto label$828;
 TMP$1156$1 = *(double*)A$1;
 goto label$835;
 label$828:;
 TMP$1156$1 = *B$1;
 label$835:;
 _ZN7VECTOR4C1Edddd( tmp$1154$1, TMP$1156$1, TMP$1157$1, TMP$1158$1, TMP$1159$1 );
 goto label$827;
 label$827:;
 return tmp$1154$1;
}

double _Z3MAXdd( double A$1, double B$1 )
{
 double TMP$1160$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$836:;
 if( A$1 <= B$1 ) goto label$838;
 TMP$1160$1 = A$1;
 goto label$839;
 label$838:;
 TMP$1160$1 = B$1;
 label$839:;
 fb$result$1 = TMP$1160$1;
 goto label$837;
 label$837:;
 return fb$result$1;
}

struct $7VECTOR2* _Z3MAXR7VECTOR2S0_( struct $7VECTOR2* tmp$1161$1, struct $7VECTOR2* A$1, struct $7VECTOR2* B$1 )
{
 double TMP$1163$1;
 double TMP$1164$1;
 label$840:;
 if( *(double*)((uint8*)A$1 + 8ll) <= *(double*)((uint8*)B$1 + 8ll) ) goto label$843;
 TMP$1164$1 = *(double*)((uint8*)A$1 + 8ll);
 goto label$844;
 label$843:;
 TMP$1164$1 = *(double*)((uint8*)B$1 + 8ll);
 label$844:;
 if( *(double*)A$1 <= *(double*)B$1 ) goto label$842;
 TMP$1163$1 = *(double*)A$1;
 goto label$845;
 label$842:;
 TMP$1163$1 = *(double*)B$1;
 label$845:;
 _ZN7VECTOR2C1Edd( tmp$1161$1, TMP$1163$1, TMP$1164$1 );
 goto label$841;
 label$841:;
 return tmp$1161$1;
}

struct $7VECTOR3* _Z3MAXR7VECTOR3S0_( struct $7VECTOR3* tmp$1165$1, struct $7VECTOR3* A$1, struct $7VECTOR3* B$1 )
{
 double TMP$1167$1;
 double TMP$1168$1;
 double TMP$1169$1;
 label$846:;
 if( *(double*)((uint8*)A$1 + 16ll) <= *(double*)((uint8*)B$1 + 16ll) ) goto label$850;
 TMP$1169$1 = *(double*)((uint8*)A$1 + 16ll);
 goto label$851;
 label$850:;
 TMP$1169$1 = *(double*)((uint8*)B$1 + 16ll);
 label$851:;
 if( *(double*)((uint8*)A$1 + 8ll) <= *(double*)((uint8*)B$1 + 8ll) ) goto label$849;
 TMP$1168$1 = *(double*)((uint8*)A$1 + 8ll);
 goto label$852;
 label$849:;
 TMP$1168$1 = *(double*)((uint8*)B$1 + 8ll);
 label$852:;
 if( *(double*)A$1 <= *(double*)B$1 ) goto label$848;
 TMP$1167$1 = *(double*)A$1;
 goto label$853;
 label$848:;
 TMP$1167$1 = *(double*)B$1;
 label$853:;
 _ZN7VECTOR3C1Eddd( tmp$1165$1, TMP$1167$1, TMP$1168$1, TMP$1169$1 );
 goto label$847;
 label$847:;
 return tmp$1165$1;
}

struct $7VECTOR4* _Z3MAXR7VECTOR4S0_( struct $7VECTOR4* tmp$1170$1, struct $7VECTOR4* A$1, struct $7VECTOR4* B$1 )
{
 double TMP$1172$1;
 double TMP$1173$1;
 double TMP$1174$1;
 double TMP$1175$1;
 label$854:;
 if( *(double*)((uint8*)A$1 + 24ll) <= *(double*)((uint8*)B$1 + 24ll) ) goto label$859;
 TMP$1175$1 = *(double*)((uint8*)A$1 + 24ll);
 goto label$860;
 label$859:;
 TMP$1175$1 = *(double*)((uint8*)B$1 + 24ll);
 label$860:;
 if( *(double*)((uint8*)A$1 + 16ll) <= *(double*)((uint8*)B$1 + 16ll) ) goto label$858;
 TMP$1174$1 = *(double*)((uint8*)A$1 + 16ll);
 goto label$861;
 label$858:;
 TMP$1174$1 = *(double*)((uint8*)B$1 + 16ll);
 label$861:;
 if( *(double*)((uint8*)A$1 + 8ll) <= *(double*)((uint8*)B$1 + 8ll) ) goto label$857;
 TMP$1173$1 = *(double*)((uint8*)A$1 + 8ll);
 goto label$862;
 label$857:;
 TMP$1173$1 = *(double*)((uint8*)B$1 + 8ll);
 label$862:;
 if( *(double*)A$1 <= *(double*)B$1 ) goto label$856;
 TMP$1172$1 = *(double*)A$1;
 goto label$863;
 label$856:;
 TMP$1172$1 = *(double*)B$1;
 label$863:;
 _ZN7VECTOR4C1Edddd( tmp$1170$1, TMP$1172$1, TMP$1173$1, TMP$1174$1, TMP$1175$1 );
 goto label$855;
 label$855:;
 return tmp$1170$1;
}

struct $7VECTOR2* _Z3MAXR7VECTOR2Rd( struct $7VECTOR2* tmp$1176$1, struct $7VECTOR2* A$1, double* B$1 )
{
 double TMP$1178$1;
 double TMP$1179$1;
 label$864:;
 if( *(double*)((uint8*)A$1 + 8ll) <= *B$1 ) goto label$867;
 TMP$1179$1 = *(double*)((uint8*)A$1 + 8ll);
 goto label$868;
 label$867:;
 TMP$1179$1 = *B$1;
 label$868:;
 if( *(double*)A$1 <= *B$1 ) goto label$866;
 TMP$1178$1 = *(double*)A$1;
 goto label$869;
 label$866:;
 TMP$1178$1 = *B$1;
 label$869:;
 _ZN7VECTOR2C1Edd( tmp$1176$1, TMP$1178$1, TMP$1179$1 );
 goto label$865;
 label$865:;
 return tmp$1176$1;
}

struct $7VECTOR3* _Z3MAXR7VECTOR3Rd( struct $7VECTOR3* tmp$1180$1, struct $7VECTOR3* A$1, double* B$1 )
{
 double TMP$1182$1;
 double TMP$1183$1;
 double TMP$1184$1;
 label$870:;
 if( *(double*)((uint8*)A$1 + 16ll) <= *B$1 ) goto label$874;
 TMP$1184$1 = *(double*)((uint8*)A$1 + 16ll);
 goto label$875;
 label$874:;
 TMP$1184$1 = *B$1;
 label$875:;
 if( *(double*)((uint8*)A$1 + 8ll) <= *B$1 ) goto label$873;
 TMP$1183$1 = *(double*)((uint8*)A$1 + 8ll);
 goto label$876;
 label$873:;
 TMP$1183$1 = *B$1;
 label$876:;
 if( *(double*)A$1 <= *B$1 ) goto label$872;
 TMP$1182$1 = *(double*)A$1;
 goto label$877;
 label$872:;
 TMP$1182$1 = *B$1;
 label$877:;
 _ZN7VECTOR3C1Eddd( tmp$1180$1, TMP$1182$1, TMP$1183$1, TMP$1184$1 );
 goto label$871;
 label$871:;
 return tmp$1180$1;
}

struct $7VECTOR4* _Z3MAXR7VECTOR4Rd( struct $7VECTOR4* tmp$1185$1, struct $7VECTOR4* A$1, double* B$1 )
{
 double TMP$1187$1;
 double TMP$1188$1;
 double TMP$1189$1;
 double TMP$1190$1;
 label$878:;
 if( *(double*)((uint8*)A$1 + 24ll) <= *B$1 ) goto label$883;
 TMP$1190$1 = *(double*)((uint8*)A$1 + 24ll);
 goto label$884;
 label$883:;
 TMP$1190$1 = *B$1;
 label$884:;
 if( *(double*)((uint8*)A$1 + 16ll) <= *B$1 ) goto label$882;
 TMP$1189$1 = *(double*)((uint8*)A$1 + 16ll);
 goto label$885;
 label$882:;
 TMP$1189$1 = *B$1;
 label$885:;
 if( *(double*)((uint8*)A$1 + 8ll) <= *B$1 ) goto label$881;
 TMP$1188$1 = *(double*)((uint8*)A$1 + 8ll);
 goto label$886;
 label$881:;
 TMP$1188$1 = *B$1;
 label$886:;
 if( *(double*)A$1 <= *B$1 ) goto label$880;
 TMP$1187$1 = *(double*)A$1;
 goto label$887;
 label$880:;
 TMP$1187$1 = *B$1;
 label$887:;
 _ZN7VECTOR4C1Edddd( tmp$1185$1, TMP$1187$1, TMP$1188$1, TMP$1189$1, TMP$1190$1 );
 goto label$879;
 label$879:;
 return tmp$1185$1;
}

double _Z5CLAMPddd( double A$1, double B$1, double C$1 )
{
 double TMP$1191$1;
 double TMP$1192$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$888:;
 if( A$1 >= B$1 ) goto label$891;
 TMP$1192$1 = B$1;
 goto label$892;
 label$891:;
 if( A$1 <= C$1 ) goto label$890;
 TMP$1191$1 = C$1;
 goto label$893;
 label$890:;
 TMP$1191$1 = A$1;
 label$893:;
 TMP$1192$1 = TMP$1191$1;
 label$892:;
 fb$result$1 = TMP$1192$1;
 goto label$889;
 label$889:;
 return fb$result$1;
}

struct $7VECTOR2* _Z5CLAMPR7VECTOR2S0_S0_( struct $7VECTOR2* tmp$1193$1, struct $7VECTOR2* A$1, struct $7VECTOR2* B$1, struct $7VECTOR2* C$1 )
{
 double TMP$1195$1;
 double TMP$1196$1;
 double TMP$1197$1;
 double TMP$1198$1;
 label$894:;
 if( *(double*)((uint8*)A$1 + 8ll) >= *(double*)((uint8*)B$1 + 8ll) ) goto label$899;
 TMP$1198$1 = *(double*)((uint8*)B$1 + 8ll);
 goto label$900;
 label$899:;
 if( *(double*)((uint8*)A$1 + 8ll) <= *(double*)((uint8*)C$1 + 8ll) ) goto label$898;
 TMP$1197$1 = *(double*)((uint8*)C$1 + 8ll);
 goto label$901;
 label$898:;
 TMP$1197$1 = *(double*)((uint8*)A$1 + 8ll);
 label$901:;
 TMP$1198$1 = TMP$1197$1;
 label$900:;
 if( *(double*)A$1 >= *(double*)B$1 ) goto label$897;
 TMP$1196$1 = *(double*)B$1;
 goto label$902;
 label$897:;
 if( *(double*)A$1 <= *(double*)C$1 ) goto label$896;
 TMP$1195$1 = *(double*)C$1;
 goto label$903;
 label$896:;
 TMP$1195$1 = *(double*)A$1;
 label$903:;
 TMP$1196$1 = TMP$1195$1;
 label$902:;
 _ZN7VECTOR2C1Edd( tmp$1193$1, TMP$1196$1, TMP$1198$1 );
 goto label$895;
 label$895:;
 return tmp$1193$1;
}

struct $7VECTOR3* _Z5CLAMPR7VECTOR3S0_S0_( struct $7VECTOR3* tmp$1199$1, struct $7VECTOR3* A$1, struct $7VECTOR3* B$1, struct $7VECTOR3* C$1 )
{
 double TMP$1201$1;
 double TMP$1202$1;
 double TMP$1203$1;
 double TMP$1204$1;
 double TMP$1205$1;
 double TMP$1206$1;
 label$904:;
 if( *(double*)((uint8*)A$1 + 16ll) >= *(double*)((uint8*)B$1 + 16ll) ) goto label$911;
 TMP$1206$1 = *(double*)((uint8*)B$1 + 16ll);
 goto label$912;
 label$911:;
 if( *(double*)((uint8*)A$1 + 16ll) <= *(double*)((uint8*)C$1 + 16ll) ) goto label$910;
 TMP$1205$1 = *(double*)((uint8*)C$1 + 16ll);
 goto label$913;
 label$910:;
 TMP$1205$1 = *(double*)((uint8*)A$1 + 16ll);
 label$913:;
 TMP$1206$1 = TMP$1205$1;
 label$912:;
 if( *(double*)((uint8*)A$1 + 8ll) >= *(double*)((uint8*)B$1 + 8ll) ) goto label$909;
 TMP$1204$1 = *(double*)((uint8*)B$1 + 8ll);
 goto label$914;
 label$909:;
 if( *(double*)((uint8*)A$1 + 8ll) <= *(double*)((uint8*)C$1 + 8ll) ) goto label$908;
 TMP$1203$1 = *(double*)((uint8*)C$1 + 8ll);
 goto label$915;
 label$908:;
 TMP$1203$1 = *(double*)((uint8*)A$1 + 8ll);
 label$915:;
 TMP$1204$1 = TMP$1203$1;
 label$914:;
 if( *(double*)A$1 >= *(double*)B$1 ) goto label$907;
 TMP$1202$1 = *(double*)B$1;
 goto label$916;
 label$907:;
 if( *(double*)A$1 <= *(double*)C$1 ) goto label$906;
 TMP$1201$1 = *(double*)C$1;
 goto label$917;
 label$906:;
 TMP$1201$1 = *(double*)A$1;
 label$917:;
 TMP$1202$1 = TMP$1201$1;
 label$916:;
 _ZN7VECTOR3C1Eddd( tmp$1199$1, TMP$1202$1, TMP$1204$1, TMP$1206$1 );
 goto label$905;
 label$905:;
 return tmp$1199$1;
}

struct $7VECTOR4* _Z5CLAMPR7VECTOR4S0_S0_( struct $7VECTOR4* tmp$1207$1, struct $7VECTOR4* A$1, struct $7VECTOR4* B$1, struct $7VECTOR4* C$1 )
{
 double TMP$1209$1;
 double TMP$1210$1;
 double TMP$1211$1;
 double TMP$1212$1;
 double TMP$1213$1;
 double TMP$1214$1;
 double TMP$1215$1;
 double TMP$1216$1;
 label$918:;
 if( *(double*)((uint8*)A$1 + 24ll) >= *(double*)((uint8*)B$1 + 24ll) ) goto label$927;
 TMP$1216$1 = *(double*)((uint8*)B$1 + 24ll);
 goto label$928;
 label$927:;
 if( *(double*)((uint8*)A$1 + 16ll) <= *(double*)((uint8*)C$1 + 24ll) ) goto label$926;
 TMP$1215$1 = *(double*)((uint8*)C$1 + 24ll);
 goto label$929;
 label$926:;
 TMP$1215$1 = *(double*)((uint8*)A$1 + 24ll);
 label$929:;
 TMP$1216$1 = TMP$1215$1;
 label$928:;
 if( *(double*)((uint8*)A$1 + 16ll) >= *(double*)((uint8*)B$1 + 16ll) ) goto label$925;
 TMP$1214$1 = *(double*)((uint8*)B$1 + 16ll);
 goto label$930;
 label$925:;
 if( *(double*)((uint8*)A$1 + 16ll) <= *(double*)((uint8*)C$1 + 16ll) ) goto label$924;
 TMP$1213$1 = *(double*)((uint8*)C$1 + 16ll);
 goto label$931;
 label$924:;
 TMP$1213$1 = *(double*)((uint8*)A$1 + 16ll);
 label$931:;
 TMP$1214$1 = TMP$1213$1;
 label$930:;
 if( *(double*)((uint8*)A$1 + 8ll) >= *(double*)((uint8*)B$1 + 8ll) ) goto label$923;
 TMP$1212$1 = *(double*)((uint8*)B$1 + 8ll);
 goto label$932;
 label$923:;
 if( *(double*)((uint8*)A$1 + 8ll) <= *(double*)((uint8*)C$1 + 8ll) ) goto label$922;
 TMP$1211$1 = *(double*)((uint8*)C$1 + 8ll);
 goto label$933;
 label$922:;
 TMP$1211$1 = *(double*)((uint8*)A$1 + 8ll);
 label$933:;
 TMP$1212$1 = TMP$1211$1;
 label$932:;
 if( *(double*)A$1 >= *(double*)B$1 ) goto label$921;
 TMP$1210$1 = *(double*)B$1;
 goto label$934;
 label$921:;
 if( *(double*)A$1 <= *(double*)C$1 ) goto label$920;
 TMP$1209$1 = *(double*)C$1;
 goto label$935;
 label$920:;
 TMP$1209$1 = *(double*)A$1;
 label$935:;
 TMP$1210$1 = TMP$1209$1;
 label$934:;
 _ZN7VECTOR4C1Edddd( tmp$1207$1, TMP$1210$1, TMP$1212$1, TMP$1214$1, TMP$1216$1 );
 goto label$919;
 label$919:;
 return tmp$1207$1;
}

struct $7VECTOR2* _Z5CLAMPR7VECTOR2dd( struct $7VECTOR2* tmp$1217$1, struct $7VECTOR2* A$1, double B$1, double C$1 )
{
 double TMP$1219$1;
 double TMP$1220$1;
 double TMP$1221$1;
 double TMP$1222$1;
 label$936:;
 if( *(double*)((uint8*)A$1 + 8ll) >= B$1 ) goto label$941;
 TMP$1222$1 = B$1;
 goto label$942;
 label$941:;
 if( *(double*)((uint8*)A$1 + 8ll) <= C$1 ) goto label$940;
 TMP$1221$1 = C$1;
 goto label$943;
 label$940:;
 TMP$1221$1 = *(double*)((uint8*)A$1 + 8ll);
 label$943:;
 TMP$1222$1 = TMP$1221$1;
 label$942:;
 if( *(double*)A$1 >= B$1 ) goto label$939;
 TMP$1220$1 = B$1;
 goto label$944;
 label$939:;
 if( *(double*)A$1 <= C$1 ) goto label$938;
 TMP$1219$1 = C$1;
 goto label$945;
 label$938:;
 TMP$1219$1 = *(double*)A$1;
 label$945:;
 TMP$1220$1 = TMP$1219$1;
 label$944:;
 _ZN7VECTOR2C1Edd( tmp$1217$1, TMP$1220$1, TMP$1222$1 );
 goto label$937;
 label$937:;
 return tmp$1217$1;
}

struct $7VECTOR3* _Z5CLAMPR7VECTOR3dd( struct $7VECTOR3* tmp$1223$1, struct $7VECTOR3* A$1, double B$1, double C$1 )
{
 double TMP$1225$1;
 double TMP$1226$1;
 double TMP$1227$1;
 double TMP$1228$1;
 double TMP$1229$1;
 double TMP$1230$1;
 label$946:;
 if( *(double*)((uint8*)A$1 + 16ll) >= B$1 ) goto label$953;
 TMP$1230$1 = B$1;
 goto label$954;
 label$953:;
 if( *(double*)((uint8*)A$1 + 16ll) <= C$1 ) goto label$952;
 TMP$1229$1 = C$1;
 goto label$955;
 label$952:;
 TMP$1229$1 = *(double*)((uint8*)A$1 + 16ll);
 label$955:;
 TMP$1230$1 = TMP$1229$1;
 label$954:;
 if( *(double*)((uint8*)A$1 + 8ll) >= B$1 ) goto label$951;
 TMP$1228$1 = B$1;
 goto label$956;
 label$951:;
 if( *(double*)((uint8*)A$1 + 8ll) <= C$1 ) goto label$950;
 TMP$1227$1 = C$1;
 goto label$957;
 label$950:;
 TMP$1227$1 = *(double*)((uint8*)A$1 + 8ll);
 label$957:;
 TMP$1228$1 = TMP$1227$1;
 label$956:;
 if( *(double*)A$1 >= B$1 ) goto label$949;
 TMP$1226$1 = B$1;
 goto label$958;
 label$949:;
 if( *(double*)A$1 <= C$1 ) goto label$948;
 TMP$1225$1 = C$1;
 goto label$959;
 label$948:;
 TMP$1225$1 = *(double*)A$1;
 label$959:;
 TMP$1226$1 = TMP$1225$1;
 label$958:;
 _ZN7VECTOR3C1Eddd( tmp$1223$1, TMP$1226$1, TMP$1228$1, TMP$1230$1 );
 goto label$947;
 label$947:;
 return tmp$1223$1;
}

struct $7VECTOR4* _Z5CLAMPR7VECTOR4dd( struct $7VECTOR4* tmp$1231$1, struct $7VECTOR4* A$1, double B$1, double C$1 )
{
 double TMP$1233$1;
 double TMP$1234$1;
 double TMP$1235$1;
 double TMP$1236$1;
 double TMP$1237$1;
 double TMP$1238$1;
 double TMP$1239$1;
 double TMP$1240$1;
 label$960:;
 if( *(double*)((uint8*)A$1 + 24ll) >= B$1 ) goto label$969;
 TMP$1240$1 = B$1;
 goto label$970;
 label$969:;
 if( *(double*)((uint8*)A$1 + 16ll) <= C$1 ) goto label$968;
 TMP$1239$1 = C$1;
 goto label$971;
 label$968:;
 TMP$1239$1 = *(double*)((uint8*)A$1 + 24ll);
 label$971:;
 TMP$1240$1 = TMP$1239$1;
 label$970:;
 if( *(double*)((uint8*)A$1 + 16ll) >= B$1 ) goto label$967;
 TMP$1238$1 = B$1;
 goto label$972;
 label$967:;
 if( *(double*)((uint8*)A$1 + 16ll) <= C$1 ) goto label$966;
 TMP$1237$1 = C$1;
 goto label$973;
 label$966:;
 TMP$1237$1 = *(double*)((uint8*)A$1 + 16ll);
 label$973:;
 TMP$1238$1 = TMP$1237$1;
 label$972:;
 if( *(double*)((uint8*)A$1 + 8ll) >= B$1 ) goto label$965;
 TMP$1236$1 = B$1;
 goto label$974;
 label$965:;
 if( *(double*)((uint8*)A$1 + 8ll) <= C$1 ) goto label$964;
 TMP$1235$1 = C$1;
 goto label$975;
 label$964:;
 TMP$1235$1 = *(double*)((uint8*)A$1 + 8ll);
 label$975:;
 TMP$1236$1 = TMP$1235$1;
 label$974:;
 if( *(double*)A$1 >= B$1 ) goto label$963;
 TMP$1234$1 = B$1;
 goto label$976;
 label$963:;
 if( *(double*)A$1 <= C$1 ) goto label$962;
 TMP$1233$1 = C$1;
 goto label$977;
 label$962:;
 TMP$1233$1 = *(double*)A$1;
 label$977:;
 TMP$1234$1 = TMP$1233$1;
 label$976:;
 _ZN7VECTOR4C1Edddd( tmp$1231$1, TMP$1234$1, TMP$1236$1, TMP$1238$1, TMP$1240$1 );
 goto label$961;
 label$961:;
 return tmp$1231$1;
}

double _Z3MIXddd( double A$1, double B$1, double C$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$978:;
 fb$result$1 = (A$1 * (0x1.p+0 - C$1)) + (B$1 * C$1);
 goto label$979;
 label$979:;
 return fb$result$1;
}

struct $7VECTOR2* _Z3MIXR7VECTOR2S0_S0_( struct $7VECTOR2* tmp$1241$1, struct $7VECTOR2* A$1, struct $7VECTOR2* B$1, struct $7VECTOR2* C$1 )
{
 label$980:;
 _ZN7VECTOR2C1Edd( tmp$1241$1, (*(double*)A$1 * (-(*(double*)C$1) + 0x1.p+0)) + (*(double*)B$1 * *(double*)C$1), (*(double*)((uint8*)A$1 + 8ll) * (-(*(double*)((uint8*)C$1 + 8ll)) + 0x1.p+0)) + (*(double*)((uint8*)B$1 + 8ll) * *(double*)((uint8*)C$1 + 8ll)) );
 goto label$981;
 label$981:;
 return tmp$1241$1;
}

struct $7VECTOR3* _Z3MIXR7VECTOR3S0_S0_( struct $7VECTOR3* tmp$1243$1, struct $7VECTOR3* A$1, struct $7VECTOR3* B$1, struct $7VECTOR3* C$1 )
{
 label$982:;
 _ZN7VECTOR3C1Eddd( tmp$1243$1, (*(double*)A$1 * (-(*(double*)C$1) + 0x1.p+0)) + (*(double*)B$1 * *(double*)C$1), (*(double*)((uint8*)A$1 + 8ll) * (-(*(double*)((uint8*)C$1 + 8ll)) + 0x1.p+0)) + (*(double*)((uint8*)B$1 + 8ll) * *(double*)((uint8*)C$1 + 8ll)), (*(double*)((uint8*)A$1 + 16ll) * (-(*(double*)((uint8*)C$1 + 16ll)) + 0x1.p+0)) + (*(double*)((uint8*)B$1 + 16ll) * *(double*)((uint8*)C$1 + 16ll)) );
 goto label$983;
 label$983:;
 return tmp$1243$1;
}

struct $7VECTOR4* _Z3MIXR7VECTOR4S0_S0_( struct $7VECTOR4* tmp$1245$1, struct $7VECTOR4* A$1, struct $7VECTOR4* B$1, struct $7VECTOR4* C$1 )
{
 label$984:;
 _ZN7VECTOR4C1Edddd( tmp$1245$1, (*(double*)A$1 * (-(*(double*)C$1) + 0x1.p+0)) + (*(double*)B$1 * *(double*)C$1), (*(double*)((uint8*)A$1 + 8ll) * (-(*(double*)((uint8*)C$1 + 8ll)) + 0x1.p+0)) + (*(double*)((uint8*)B$1 + 8ll) * *(double*)((uint8*)C$1 + 8ll)), (*(double*)((uint8*)A$1 + 16ll) * (-(*(double*)((uint8*)C$1 + 16ll)) + 0x1.p+0)) + (*(double*)((uint8*)B$1 + 16ll) * *(double*)((uint8*)C$1 + 16ll)), (*(double*)((uint8*)A$1 + 24ll) * (-(*(double*)((uint8*)C$1 + 24ll)) + 0x1.p+0)) + (*(double*)((uint8*)B$1 + 24ll) * *(double*)((uint8*)C$1 + 24ll)) );
 goto label$985;
 label$985:;
 return tmp$1245$1;
}

struct $7VECTOR2* _Z3MIXR7VECTOR2S0_d( struct $7VECTOR2* tmp$1247$1, struct $7VECTOR2* A$1, struct $7VECTOR2* B$1, double C$1 )
{
 label$986:;
 _ZN7VECTOR2C1Edd( tmp$1247$1, (*(double*)A$1 * (0x1.p+0 - C$1)) + (*(double*)B$1 * C$1), (*(double*)((uint8*)A$1 + 8ll) * (0x1.p+0 - C$1)) + (*(double*)((uint8*)B$1 + 8ll) * C$1) );
 goto label$987;
 label$987:;
 return tmp$1247$1;
}

struct $7VECTOR3* _Z3MIXR7VECTOR3S0_d( struct $7VECTOR3* tmp$1249$1, struct $7VECTOR3* A$1, struct $7VECTOR3* B$1, double C$1 )
{
 label$988:;
 _ZN7VECTOR3C1Eddd( tmp$1249$1, (*(double*)A$1 * (0x1.p+0 - C$1)) + (*(double*)B$1 * C$1), (*(double*)((uint8*)A$1 + 8ll) * (0x1.p+0 - C$1)) + (*(double*)((uint8*)B$1 + 8ll) * C$1), (*(double*)((uint8*)A$1 + 16ll) * (0x1.p+0 - C$1)) + (*(double*)((uint8*)B$1 + 16ll) * C$1) );
 goto label$989;
 label$989:;
 return tmp$1249$1;
}

struct $7VECTOR4* _Z3MIXR7VECTOR4S0_d( struct $7VECTOR4* tmp$1251$1, struct $7VECTOR4* A$1, struct $7VECTOR4* B$1, double C$1 )
{
 label$990:;
 _ZN7VECTOR4C1Edddd( tmp$1251$1, (*(double*)A$1 * (0x1.p+0 - C$1)) + (*(double*)B$1 * C$1), (*(double*)((uint8*)A$1 + 8ll) * (0x1.p+0 - C$1)) + (*(double*)((uint8*)B$1 + 8ll) * C$1), (*(double*)((uint8*)A$1 + 16ll) * (0x1.p+0 - C$1)) + (*(double*)((uint8*)B$1 + 16ll) * C$1), (*(double*)((uint8*)A$1 + 24ll) * (0x1.p+0 - C$1)) + (*(double*)((uint8*)B$1 + 24ll) * C$1) );
 goto label$991;
 label$991:;
 return tmp$1251$1;
}

double _Z5STEP_dd( double EDGE$1, double X$1 )
{
 int64 TMP$1253$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$992:;
 if( X$1 >= EDGE$1 ) goto label$994;
 TMP$1253$1 = 0ll;
 goto label$995;
 label$994:;
 TMP$1253$1 = 1ll;
 label$995:;
 fb$result$1 = (double)TMP$1253$1;
 goto label$993;
 label$993:;
 return fb$result$1;
}

struct $7VECTOR2* _Z5STEP_R7VECTOR2S0_( struct $7VECTOR2* tmp$1254$1, struct $7VECTOR2* EDGE$1, struct $7VECTOR2* X$1 )
{
 int64 TMP$1256$1;
 int64 TMP$1257$1;
 label$996:;
 if( *(double*)((uint8*)X$1 + 8ll) >= *(double*)((uint8*)EDGE$1 + 8ll) ) goto label$999;
 TMP$1257$1 = 0ll;
 goto label$1000;
 label$999:;
 TMP$1257$1 = 1ll;
 label$1000:;
 if( *(double*)X$1 >= *(double*)EDGE$1 ) goto label$998;
 TMP$1256$1 = 0ll;
 goto label$1001;
 label$998:;
 TMP$1256$1 = 1ll;
 label$1001:;
 _ZN7VECTOR2C1Edd( tmp$1254$1, (double)TMP$1256$1, (double)TMP$1257$1 );
 goto label$997;
 label$997:;
 return tmp$1254$1;
}

struct $7VECTOR3* _Z5STEP_R7VECTOR3S0_( struct $7VECTOR3* tmp$1258$1, struct $7VECTOR3* EDGE$1, struct $7VECTOR3* X$1 )
{
 int64 TMP$1260$1;
 int64 TMP$1261$1;
 int64 TMP$1262$1;
 label$1002:;
 if( *(double*)((uint8*)X$1 + 16ll) >= *(double*)((uint8*)EDGE$1 + 16ll) ) goto label$1006;
 TMP$1262$1 = 0ll;
 goto label$1007;
 label$1006:;
 TMP$1262$1 = 1ll;
 label$1007:;
 if( *(double*)((uint8*)X$1 + 8ll) >= *(double*)((uint8*)EDGE$1 + 8ll) ) goto label$1005;
 TMP$1261$1 = 0ll;
 goto label$1008;
 label$1005:;
 TMP$1261$1 = 1ll;
 label$1008:;
 if( *(double*)X$1 >= *(double*)EDGE$1 ) goto label$1004;
 TMP$1260$1 = 0ll;
 goto label$1009;
 label$1004:;
 TMP$1260$1 = 1ll;
 label$1009:;
 _ZN7VECTOR3C1Eddd( tmp$1258$1, (double)TMP$1260$1, (double)TMP$1261$1, (double)TMP$1262$1 );
 goto label$1003;
 label$1003:;
 return tmp$1258$1;
}

struct $7VECTOR4* _Z5STEP_R7VECTOR4S0_( struct $7VECTOR4* tmp$1263$1, struct $7VECTOR4* EDGE$1, struct $7VECTOR4* X$1 )
{
 int64 TMP$1265$1;
 int64 TMP$1266$1;
 int64 TMP$1267$1;
 int64 TMP$1268$1;
 label$1010:;
 if( *(double*)((uint8*)X$1 + 24ll) >= *(double*)((uint8*)EDGE$1 + 24ll) ) goto label$1015;
 TMP$1268$1 = 0ll;
 goto label$1016;
 label$1015:;
 TMP$1268$1 = 1ll;
 label$1016:;
 if( *(double*)((uint8*)X$1 + 16ll) >= *(double*)((uint8*)EDGE$1 + 16ll) ) goto label$1014;
 TMP$1267$1 = 0ll;
 goto label$1017;
 label$1014:;
 TMP$1267$1 = 1ll;
 label$1017:;
 if( *(double*)((uint8*)X$1 + 8ll) >= *(double*)((uint8*)EDGE$1 + 8ll) ) goto label$1013;
 TMP$1266$1 = 0ll;
 goto label$1018;
 label$1013:;
 TMP$1266$1 = 1ll;
 label$1018:;
 if( *(double*)X$1 >= *(double*)EDGE$1 ) goto label$1012;
 TMP$1265$1 = 0ll;
 goto label$1019;
 label$1012:;
 TMP$1265$1 = 1ll;
 label$1019:;
 _ZN7VECTOR4C1Edddd( tmp$1263$1, (double)TMP$1265$1, (double)TMP$1266$1, (double)TMP$1267$1, (double)TMP$1268$1 );
 goto label$1011;
 label$1011:;
 return tmp$1263$1;
}

struct $7VECTOR2* _Z5STEP_dR7VECTOR2( struct $7VECTOR2* tmp$1269$1, double EDGE$1, struct $7VECTOR2* X$1 )
{
 int64 TMP$1271$1;
 int64 TMP$1272$1;
 label$1020:;
 if( *(double*)((uint8*)X$1 + 8ll) >= EDGE$1 ) goto label$1023;
 TMP$1272$1 = 0ll;
 goto label$1024;
 label$1023:;
 TMP$1272$1 = 1ll;
 label$1024:;
 if( *(double*)X$1 >= EDGE$1 ) goto label$1022;
 TMP$1271$1 = 0ll;
 goto label$1025;
 label$1022:;
 TMP$1271$1 = 1ll;
 label$1025:;
 _ZN7VECTOR2C1Edd( tmp$1269$1, (double)TMP$1271$1, (double)TMP$1272$1 );
 goto label$1021;
 label$1021:;
 return tmp$1269$1;
}

struct $7VECTOR3* _Z5STEP_dR7VECTOR3( struct $7VECTOR3* tmp$1273$1, double EDGE$1, struct $7VECTOR3* X$1 )
{
 int64 TMP$1275$1;
 int64 TMP$1276$1;
 int64 TMP$1277$1;
 label$1026:;
 if( *(double*)((uint8*)X$1 + 16ll) >= EDGE$1 ) goto label$1030;
 TMP$1277$1 = 0ll;
 goto label$1031;
 label$1030:;
 TMP$1277$1 = 1ll;
 label$1031:;
 if( *(double*)((uint8*)X$1 + 8ll) >= EDGE$1 ) goto label$1029;
 TMP$1276$1 = 0ll;
 goto label$1032;
 label$1029:;
 TMP$1276$1 = 1ll;
 label$1032:;
 if( *(double*)X$1 >= EDGE$1 ) goto label$1028;
 TMP$1275$1 = 0ll;
 goto label$1033;
 label$1028:;
 TMP$1275$1 = 1ll;
 label$1033:;
 _ZN7VECTOR3C1Eddd( tmp$1273$1, (double)TMP$1275$1, (double)TMP$1276$1, (double)TMP$1277$1 );
 goto label$1027;
 label$1027:;
 return tmp$1273$1;
}

struct $7VECTOR4* _Z5STEP_dR7VECTOR4( struct $7VECTOR4* tmp$1278$1, double EDGE$1, struct $7VECTOR4* X$1 )
{
 int64 TMP$1280$1;
 int64 TMP$1281$1;
 int64 TMP$1282$1;
 int64 TMP$1283$1;
 label$1034:;
 if( *(double*)((uint8*)X$1 + 24ll) >= EDGE$1 ) goto label$1039;
 TMP$1283$1 = 0ll;
 goto label$1040;
 label$1039:;
 TMP$1283$1 = 1ll;
 label$1040:;
 if( *(double*)((uint8*)X$1 + 16ll) >= EDGE$1 ) goto label$1038;
 TMP$1282$1 = 0ll;
 goto label$1041;
 label$1038:;
 TMP$1282$1 = 1ll;
 label$1041:;
 if( *(double*)((uint8*)X$1 + 8ll) >= EDGE$1 ) goto label$1037;
 TMP$1281$1 = 0ll;
 goto label$1042;
 label$1037:;
 TMP$1281$1 = 1ll;
 label$1042:;
 if( *(double*)X$1 >= EDGE$1 ) goto label$1036;
 TMP$1280$1 = 0ll;
 goto label$1043;
 label$1036:;
 TMP$1280$1 = 1ll;
 label$1043:;
 _ZN7VECTOR4C1Edddd( tmp$1278$1, (double)TMP$1280$1, (double)TMP$1281$1, (double)TMP$1282$1, (double)TMP$1283$1 );
 goto label$1035;
 label$1035:;
 return tmp$1278$1;
}

double _Z10SMOOTHSTEPddd( double EDGE0$1, double EDGE1$1, double X$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1044:;
 if( X$1 >= EDGE0$1 ) goto label$1047;
 {
  fb$result$1 = 0x0p+0;
  goto label$1045;
  label$1047:;
 }
 if( X$1 <= EDGE1$1 ) goto label$1049;
 {
  fb$result$1 = 0x1.p+0;
  goto label$1045;
  label$1049:;
 }
 double T$1;
 double vr$4 = _Z5CLAMPddd( (X$1 - EDGE0$1) / (EDGE1$1 - EDGE0$1), 0x0p+0, 0x1.p+0 );
 T$1 = vr$4;
 fb$result$1 = (T$1 * T$1) * (-(T$1 * 0x1.p+1) + 0x1.8p+1);
 goto label$1045;
 label$1045:;
 return fb$result$1;
}

struct $7VECTOR2* _Z10SMOOTHSTEPR7VECTOR2S0_S0_( struct $7VECTOR2* tmp$1284$1, struct $7VECTOR2* EDGE0$1, struct $7VECTOR2* EDGE1$1, struct $7VECTOR2* X$1 )
{
 label$1050:;
 double vr$3 = _Z10SMOOTHSTEPddd( *(double*)((uint8*)EDGE0$1 + 8ll), *(double*)((uint8*)EDGE1$1 + 8ll), *(double*)((uint8*)X$1 + 8ll) );
 double vr$7 = _Z10SMOOTHSTEPddd( *(double*)EDGE0$1, *(double*)EDGE1$1, *(double*)X$1 );
 _ZN7VECTOR2C1Edd( tmp$1284$1, vr$7, vr$3 );
 goto label$1051;
 label$1051:;
 return tmp$1284$1;
}

struct $7VECTOR3* _Z10SMOOTHSTEPR7VECTOR3S0_S0_( struct $7VECTOR3* tmp$1286$1, struct $7VECTOR3* EDGE0$1, struct $7VECTOR3* EDGE1$1, struct $7VECTOR3* X$1 )
{
 label$1052:;
 double vr$3 = _Z10SMOOTHSTEPddd( *(double*)((uint8*)EDGE0$1 + 16ll), *(double*)((uint8*)EDGE1$1 + 16ll), *(double*)((uint8*)X$1 + 16ll) );
 double vr$7 = _Z10SMOOTHSTEPddd( *(double*)((uint8*)EDGE0$1 + 8ll), *(double*)((uint8*)EDGE1$1 + 8ll), *(double*)((uint8*)X$1 + 8ll) );
 double vr$11 = _Z10SMOOTHSTEPddd( *(double*)EDGE0$1, *(double*)EDGE1$1, *(double*)X$1 );
 _ZN7VECTOR3C1Eddd( tmp$1286$1, vr$11, vr$7, vr$3 );
 goto label$1053;
 label$1053:;
 return tmp$1286$1;
}

struct $7VECTOR4* _Z10SMOOTHSTEPR7VECTOR4S0_S0_( struct $7VECTOR4* tmp$1288$1, struct $7VECTOR4* EDGE0$1, struct $7VECTOR4* EDGE1$1, struct $7VECTOR4* X$1 )
{
 label$1054:;
 double vr$3 = _Z10SMOOTHSTEPddd( *(double*)((uint8*)EDGE0$1 + 24ll), *(double*)((uint8*)EDGE1$1 + 24ll), *(double*)((uint8*)X$1 + 24ll) );
 double vr$7 = _Z10SMOOTHSTEPddd( *(double*)((uint8*)EDGE0$1 + 16ll), *(double*)((uint8*)EDGE1$1 + 16ll), *(double*)((uint8*)X$1 + 16ll) );
 double vr$11 = _Z10SMOOTHSTEPddd( *(double*)((uint8*)EDGE0$1 + 8ll), *(double*)((uint8*)EDGE1$1 + 8ll), *(double*)((uint8*)X$1 + 8ll) );
 double vr$15 = _Z10SMOOTHSTEPddd( *(double*)EDGE0$1, *(double*)EDGE1$1, *(double*)X$1 );
 _ZN7VECTOR4C1Edddd( tmp$1288$1, vr$15, vr$11, vr$7, vr$3 );
 goto label$1055;
 label$1055:;
 return tmp$1288$1;
}

struct $7VECTOR2* _Z10SMOOTHSTEPddR7VECTOR2( struct $7VECTOR2* tmp$1290$1, double EDGE0$1, double EDGE1$1, struct $7VECTOR2* X$1 )
{
 label$1056:;
 double vr$1 = _Z10SMOOTHSTEPddd( EDGE0$1, EDGE1$1, *(double*)((uint8*)X$1 + 8ll) );
 double vr$3 = _Z10SMOOTHSTEPddd( EDGE0$1, EDGE1$1, *(double*)X$1 );
 _ZN7VECTOR2C1Edd( tmp$1290$1, vr$3, vr$1 );
 goto label$1057;
 label$1057:;
 return tmp$1290$1;
}

struct $7VECTOR3* _Z10SMOOTHSTEPddR7VECTOR3( struct $7VECTOR3* tmp$1292$1, double EDGE0$1, double EDGE1$1, struct $7VECTOR3* X$1 )
{
 label$1058:;
 double vr$1 = _Z10SMOOTHSTEPddd( EDGE0$1, EDGE1$1, *(double*)((uint8*)X$1 + 16ll) );
 double vr$3 = _Z10SMOOTHSTEPddd( EDGE0$1, EDGE1$1, *(double*)((uint8*)X$1 + 8ll) );
 double vr$5 = _Z10SMOOTHSTEPddd( EDGE0$1, EDGE1$1, *(double*)X$1 );
 _ZN7VECTOR3C1Eddd( tmp$1292$1, vr$5, vr$3, vr$1 );
 goto label$1059;
 label$1059:;
 return tmp$1292$1;
}

struct $7VECTOR4* _Z10SMOOTHSTEPddR7VECTOR4( struct $7VECTOR4* tmp$1294$1, double EDGE0$1, double EDGE1$1, struct $7VECTOR4* X$1 )
{
 label$1060:;
 double vr$1 = _Z10SMOOTHSTEPddd( EDGE0$1, EDGE1$1, *(double*)((uint8*)X$1 + 24ll) );
 double vr$3 = _Z10SMOOTHSTEPddd( EDGE0$1, EDGE1$1, *(double*)((uint8*)X$1 + 16ll) );
 double vr$5 = _Z10SMOOTHSTEPddd( EDGE0$1, EDGE1$1, *(double*)((uint8*)X$1 + 8ll) );
 double vr$7 = _Z10SMOOTHSTEPddd( EDGE0$1, EDGE1$1, *(double*)X$1 );
 _ZN7VECTOR4C1Edddd( tmp$1294$1, vr$7, vr$5, vr$3, vr$1 );
 goto label$1061;
 label$1061:;
 return tmp$1294$1;
}

double _Z7LENGTH2d( double A$1 )
{
 double TMP$1296$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1062:;
 if( A$1 >= 0x0p+0 ) goto label$1064;
 TMP$1296$1 = -A$1;
 goto label$1065;
 label$1064:;
 TMP$1296$1 = A$1;
 label$1065:;
 fb$result$1 = TMP$1296$1;
 goto label$1063;
 label$1063:;
 return fb$result$1;
}

double _Z7LENGTH2RK7VECTOR2( struct $7VECTOR2* V$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1066:;
 fb$result$1 = (*(double*)V$1 * *(double*)V$1) + (*(double*)((uint8*)V$1 + 8ll) * *(double*)((uint8*)V$1 + 8ll));
 goto label$1067;
 label$1067:;
 return fb$result$1;
}

double _Z7LENGTH2RK7VECTOR3( struct $7VECTOR3* V$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1068:;
 fb$result$1 = ((*(double*)V$1 * *(double*)V$1) + (*(double*)((uint8*)V$1 + 8ll) * *(double*)((uint8*)V$1 + 8ll))) + (*(double*)((uint8*)V$1 + 16ll) * *(double*)((uint8*)V$1 + 16ll));
 goto label$1069;
 label$1069:;
 return fb$result$1;
}

double _Z7LENGTH2RK7VECTOR4( struct $7VECTOR4* V$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1070:;
 fb$result$1 = (((*(double*)V$1 * *(double*)V$1) + (*(double*)((uint8*)V$1 + 8ll) * *(double*)((uint8*)V$1 + 8ll))) + (*(double*)((uint8*)V$1 + 16ll) * *(double*)((uint8*)V$1 + 16ll))) + (*(double*)((uint8*)V$1 + 24ll) * *(double*)((uint8*)V$1 + 24ll));
 goto label$1071;
 label$1071:;
 return fb$result$1;
}

double _Z6LENGTHd( double A$1 )
{
 double TMP$1297$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1072:;
 if( A$1 >= 0x0p+0 ) goto label$1074;
 TMP$1297$1 = -A$1;
 goto label$1075;
 label$1074:;
 TMP$1297$1 = A$1;
 label$1075:;
 fb$result$1 = TMP$1297$1;
 goto label$1073;
 label$1073:;
 return fb$result$1;
}

double _Z6LENGTHRK7VECTOR2( struct $7VECTOR2* V$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1076:;
 float vr$9 = sqrtf( (float)((*(double*)V$1 * *(double*)V$1) + (*(double*)((uint8*)V$1 + 8ll) * *(double*)((uint8*)V$1 + 8ll))) );
 fb$result$1 = (double)vr$9;
 goto label$1077;
 label$1077:;
 return fb$result$1;
}

double _Z6LENGTHRK7VECTOR3( struct $7VECTOR3* V$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1078:;
 float vr$13 = sqrtf( (float)(((*(double*)V$1 * *(double*)V$1) + (*(double*)((uint8*)V$1 + 8ll) * *(double*)((uint8*)V$1 + 8ll))) + (*(double*)((uint8*)V$1 + 16ll) * *(double*)((uint8*)V$1 + 16ll))) );
 fb$result$1 = (double)vr$13;
 goto label$1079;
 label$1079:;
 return fb$result$1;
}

double _Z6LENGTHRK7VECTOR4( struct $7VECTOR4* V$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1080:;
 float vr$17 = sqrtf( (float)((((*(double*)V$1 * *(double*)V$1) + (*(double*)((uint8*)V$1 + 8ll) * *(double*)((uint8*)V$1 + 8ll))) + (*(double*)((uint8*)V$1 + 16ll) * *(double*)((uint8*)V$1 + 16ll))) + (*(double*)((uint8*)V$1 + 24ll) * *(double*)((uint8*)V$1 + 24ll))) );
 fb$result$1 = (double)vr$17;
 goto label$1081;
 label$1081:;
 return fb$result$1;
}

double _Z8DISTANCEdd( double A$1, double B$1 )
{
 double TMP$1298$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1082:;
 double D$1;
 D$1 = A$1 - B$1;
 if( A$1 >= 0x0p+0 ) goto label$1084;
 TMP$1298$1 = -A$1;
 goto label$1085;
 label$1084:;
 TMP$1298$1 = A$1;
 label$1085:;
 fb$result$1 = TMP$1298$1;
 goto label$1083;
 label$1083:;
 return fb$result$1;
}

double _Z8DISTANCER7VECTOR2S0_( struct $7VECTOR2* A$1, struct $7VECTOR2* B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1086:;
 double X$1;
 X$1 = *(double*)A$1 - *(double*)B$1;
 double Y$1;
 Y$1 = *(double*)((uint8*)A$1 + 8ll) - *(double*)((uint8*)B$1 + 8ll);
 double D$1;
 D$1 = (X$1 * X$1) + (Y$1 * Y$1);
 if( D$1 != 0x0p+0 ) goto label$1089;
 {
  fb$result$1 = 0x0p+0;
  goto label$1087;
  label$1089:;
 }
 float vr$11 = sqrtf( (float)D$1 );
 fb$result$1 = (double)vr$11;
 goto label$1087;
 label$1087:;
 return fb$result$1;
}

double _Z8DISTANCER7VECTOR3S0_( struct $7VECTOR3* A$1, struct $7VECTOR3* B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1090:;
 double X$1;
 X$1 = *(double*)A$1 - *(double*)B$1;
 double Y$1;
 Y$1 = *(double*)((uint8*)A$1 + 8ll) - *(double*)((uint8*)B$1 + 8ll);
 double Z$1;
 Z$1 = *(double*)((uint8*)A$1 + 16ll) - *(double*)((uint8*)B$1 + 16ll);
 double D$1;
 D$1 = ((X$1 * X$1) + (Y$1 * Y$1)) + (Z$1 * Z$1);
 if( D$1 != 0x0p+0 ) goto label$1093;
 {
  fb$result$1 = 0x0p+0;
  goto label$1091;
  label$1093:;
 }
 float vr$16 = sqrtf( (float)D$1 );
 fb$result$1 = (double)vr$16;
 goto label$1091;
 label$1091:;
 return fb$result$1;
}

double _Z8DISTANCER7VECTOR4S0_( struct $7VECTOR4* A$1, struct $7VECTOR4* B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1094:;
 double X$1;
 X$1 = *(double*)A$1 - *(double*)B$1;
 double Y$1;
 Y$1 = *(double*)((uint8*)A$1 + 8ll) - *(double*)((uint8*)B$1 + 8ll);
 double Z$1;
 Z$1 = *(double*)((uint8*)A$1 + 16ll) - *(double*)((uint8*)B$1 + 16ll);
 double W$1;
 W$1 = *(double*)((uint8*)A$1 + 24ll) - *(double*)((uint8*)B$1 + 24ll);
 double D$1;
 D$1 = (((X$1 * X$1) + (Y$1 * Y$1)) + (Z$1 * Z$1)) + (W$1 * W$1);
 if( D$1 != 0x0p+0 ) goto label$1097;
 {
  fb$result$1 = 0x0p+0;
  goto label$1095;
  label$1097:;
 }
 float vr$21 = sqrtf( (float)D$1 );
 fb$result$1 = (double)vr$21;
 goto label$1095;
 label$1095:;
 return fb$result$1;
}

double _Z3DOTdd( double A$1, double B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1098:;
 fb$result$1 = A$1 * B$1;
 goto label$1099;
 label$1099:;
 return fb$result$1;
}

double _Z3DOTR7VECTOR2S0_( struct $7VECTOR2* A$1, struct $7VECTOR2* B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1100:;
 fb$result$1 = (*(double*)A$1 * *(double*)B$1) + (*(double*)((uint8*)A$1 + 8ll) * *(double*)((uint8*)B$1 + 8ll));
 goto label$1101;
 label$1101:;
 return fb$result$1;
}

double _Z3DOTR7VECTOR3S0_( struct $7VECTOR3* A$1, struct $7VECTOR3* B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1102:;
 fb$result$1 = ((*(double*)A$1 * *(double*)B$1) + (*(double*)((uint8*)A$1 + 8ll) * *(double*)((uint8*)B$1 + 8ll))) + (*(double*)((uint8*)A$1 + 16ll) * *(double*)((uint8*)B$1 + 16ll));
 goto label$1103;
 label$1103:;
 return fb$result$1;
}

double _Z3DOTR7VECTOR4S0_( struct $7VECTOR4* A$1, struct $7VECTOR4* B$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1104:;
 fb$result$1 = (((*(double*)A$1 * *(double*)B$1) + (*(double*)((uint8*)A$1 + 8ll) * *(double*)((uint8*)B$1 + 8ll))) + (*(double*)((uint8*)A$1 + 16ll) * *(double*)((uint8*)B$1 + 16ll))) + (*(double*)((uint8*)A$1 + 24ll) * *(double*)((uint8*)B$1 + 24ll));
 goto label$1105;
 label$1105:;
 return fb$result$1;
}

struct $7VECTOR3* CROSS( struct $7VECTOR3* tmp$1299$1, struct $7VECTOR3* A$1, struct $7VECTOR3* B$1 )
{
 label$1106:;
 _ZN7VECTOR3C1Eddd( tmp$1299$1, (*(double*)((uint8*)A$1 + 8ll) * *(double*)((uint8*)B$1 + 16ll)) - (*(double*)((uint8*)A$1 + 16ll) * *(double*)((uint8*)B$1 + 8ll)), (*(double*)((uint8*)A$1 + 16ll) * *(double*)B$1) - (*(double*)A$1 * *(double*)((uint8*)B$1 + 16ll)), (*(double*)A$1 * *(double*)((uint8*)B$1 + 8ll)) - (*(double*)((uint8*)A$1 + 8ll) * *(double*)B$1) );
 goto label$1107;
 label$1107:;
 return tmp$1299$1;
}

double _Z9NORMALIZEd( double V$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1108:;
 fb$result$1 = 0x1.p+0;
 goto label$1109;
 label$1109:;
 return fb$result$1;
}

struct $7VECTOR2* _Z9NORMALIZER7VECTOR2( struct $7VECTOR2* tmp$1301$1, struct $7VECTOR2* V$1 )
{
 label$1110:;
 double D$1;
 D$1 = (*(double*)V$1 * *(double*)V$1) + (*(double*)((uint8*)V$1 + 8ll) * *(double*)((uint8*)V$1 + 8ll));
 if( D$1 == 0x0p+0 ) goto label$1113;
 {
  float vr$8 = sqrtf( (float)D$1 );
  D$1 = 0x1.p+0 / (double)vr$8;
  label$1113:;
 }
 _ZN7VECTOR2C1Edd( tmp$1301$1, *(double*)V$1 * D$1, *(double*)((uint8*)V$1 + 8ll) * D$1 );
 goto label$1111;
 label$1111:;
 return tmp$1301$1;
}

struct $7VECTOR3* _Z9NORMALIZER7VECTOR3( struct $7VECTOR3* tmp$1303$1, struct $7VECTOR3* V$1 )
{
 label$1114:;
 double D$1;
 D$1 = ((*(double*)V$1 * *(double*)V$1) + (*(double*)((uint8*)V$1 + 8ll) * *(double*)((uint8*)V$1 + 8ll))) + (*(double*)((uint8*)V$1 + 16ll) * *(double*)((uint8*)V$1 + 16ll));
 if( D$1 == 0x0p+0 ) goto label$1117;
 {
  float vr$12 = sqrtf( (float)D$1 );
  D$1 = 0x1.p+0 / (double)vr$12;
  label$1117:;
 }
 _ZN7VECTOR3C1Eddd( tmp$1303$1, *(double*)V$1 * D$1, *(double*)((uint8*)V$1 + 8ll) * D$1, *(double*)((uint8*)V$1 + 16ll) * D$1 );
 goto label$1115;
 label$1115:;
 return tmp$1303$1;
}

struct $7VECTOR4* _Z9NORMALIZER7VECTOR4( struct $7VECTOR4* tmp$1305$1, struct $7VECTOR4* V$1 )
{
 label$1118:;
 double D$1;
 D$1 = (((*(double*)V$1 * *(double*)V$1) + (*(double*)((uint8*)V$1 + 8ll) * *(double*)((uint8*)V$1 + 8ll))) + (*(double*)((uint8*)V$1 + 16ll) * *(double*)((uint8*)V$1 + 16ll))) + (*(double*)((uint8*)V$1 + 24ll) * *(double*)((uint8*)V$1 + 24ll));
 if( D$1 == 0x0p+0 ) goto label$1121;
 {
  float vr$16 = sqrtf( (float)D$1 );
  D$1 = 0x1.p+0 / (double)vr$16;
  label$1121:;
 }
 _ZN7VECTOR4C1Edddd( tmp$1305$1, *(double*)V$1 * D$1, *(double*)((uint8*)V$1 + 8ll) * D$1, *(double*)((uint8*)V$1 + 16ll) * D$1, *(double*)((uint8*)V$1 + 24ll) * D$1 );
 goto label$1119;
 label$1119:;
 return tmp$1305$1;
}

double _Z11FACEFORWARDddd( double N$1, double I$1, double NREF$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1122:;
 double D$1;
 D$1 = I$1 * NREF$1;
 if( D$1 >= 0x0p+0 ) goto label$1125;
 {
  fb$result$1 = N$1;
  goto label$1123;
 }
 goto label$1124;
 label$1125:;
 {
  fb$result$1 = -N$1;
  goto label$1123;
  label$1124:;
 }
 label$1123:;
 return fb$result$1;
}

struct $7VECTOR2* _Z11FACEFORWARDR7VECTOR2S0_S0_( struct $7VECTOR2* tmp$1307$1, struct $7VECTOR2* N$1, struct $7VECTOR2* I$1, struct $7VECTOR2* NREF$1 )
{
 label$1126:;
 double D$1;
 D$1 = (*(double*)I$1 * *(double*)NREF$1) + (*(double*)((uint8*)I$1 + 8ll) * *(double*)((uint8*)NREF$1 + 8ll));
 if( D$1 >= 0x0p+0 ) goto label$1129;
 {
  _ZN7VECTOR2C1ERS_( tmp$1307$1, N$1 );
  goto label$1127;
 }
 goto label$1128;
 label$1129:;
 {
  struct $7VECTOR2 TMP$1308$2;
  struct $7VECTOR2* vr$8 = _ZngR7VECTOR2( &TMP$1308$2, N$1 );
  _ZN7VECTOR2C1ERS_( tmp$1307$1, vr$8 );
  goto label$1127;
  label$1128:;
 }
 label$1127:;
 return tmp$1307$1;
}

struct $7VECTOR3* _Z11FACEFORWARDR7VECTOR3S0_S0_( struct $7VECTOR3* tmp$1309$1, struct $7VECTOR3* N$1, struct $7VECTOR3* I$1, struct $7VECTOR3* NREF$1 )
{
 label$1130:;
 double D$1;
 D$1 = ((*(double*)I$1 * *(double*)NREF$1) + (*(double*)((uint8*)I$1 + 8ll) * *(double*)((uint8*)NREF$1 + 8ll))) + (*(double*)((uint8*)I$1 + 16ll) * *(double*)((uint8*)NREF$1 + 16ll));
 if( D$1 >= 0x0p+0 ) goto label$1133;
 {
  _ZN7VECTOR3C1ERS_( tmp$1309$1, N$1 );
  goto label$1131;
 }
 goto label$1132;
 label$1133:;
 {
  struct $7VECTOR3 TMP$1310$2;
  struct $7VECTOR3* vr$12 = _ZngR7VECTOR3( &TMP$1310$2, N$1 );
  _ZN7VECTOR3C1ERS_( tmp$1309$1, vr$12 );
  goto label$1131;
  label$1132:;
 }
 label$1131:;
 return tmp$1309$1;
}

struct $7VECTOR4* _Z11FACEFORWARDR7VECTOR4S0_S0_( struct $7VECTOR4* tmp$1311$1, struct $7VECTOR4* N$1, struct $7VECTOR4* I$1, struct $7VECTOR4* NREF$1 )
{
 label$1134:;
 double D$1;
 D$1 = (((*(double*)I$1 * *(double*)NREF$1) + (*(double*)((uint8*)I$1 + 8ll) * *(double*)((uint8*)NREF$1 + 8ll))) + (*(double*)((uint8*)I$1 + 16ll) * *(double*)((uint8*)NREF$1 + 16ll))) + (*(double*)((uint8*)I$1 + 24ll) * *(double*)((uint8*)NREF$1 + 24ll));
 if( D$1 >= 0x0p+0 ) goto label$1137;
 {
  _ZN7VECTOR4C1ERS_( tmp$1311$1, N$1 );
  goto label$1135;
 }
 goto label$1136;
 label$1137:;
 {
  struct $7VECTOR4 TMP$1312$2;
  struct $7VECTOR4* vr$16 = _ZngR7VECTOR4( &TMP$1312$2, N$1 );
  _ZN7VECTOR4C1ERS_( tmp$1311$1, vr$16 );
  goto label$1135;
  label$1136:;
 }
 label$1135:;
 return tmp$1311$1;
}

double _Z7REFLECTdd( double I$1, double N$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1138:;
 double D$1;
 D$1 = (I$1 * N$1) * 0x1.p+1;
 fb$result$1 = I$1 - (N$1 * D$1);
 goto label$1139;
 label$1139:;
 return fb$result$1;
}

struct $7VECTOR2* _Z7REFLECTR7VECTOR2S0_( struct $7VECTOR2* tmp$1313$1, struct $7VECTOR2* I$1, struct $7VECTOR2* N$1 )
{
 label$1140:;
 double D$1;
 D$1 = ((*(double*)I$1 * *(double*)N$1) + (*(double*)((uint8*)I$1 + 8ll) * *(double*)((uint8*)N$1 + 8ll))) * 0x1.p+1;
 _ZN7VECTOR2C1Edd( tmp$1313$1, *(double*)I$1 - (*(double*)N$1 * D$1), *(double*)((uint8*)I$1 + 8ll) - (*(double*)((uint8*)N$1 + 8ll) * D$1) );
 goto label$1141;
 label$1141:;
 return tmp$1313$1;
}

struct $7VECTOR3* _Z7REFLECTR7VECTOR3S0_( struct $7VECTOR3* tmp$1315$1, struct $7VECTOR3* I$1, struct $7VECTOR3* N$1 )
{
 label$1142:;
 double D$1;
 D$1 = (((*(double*)I$1 * *(double*)N$1) + (*(double*)((uint8*)I$1 + 8ll) * *(double*)((uint8*)N$1 + 8ll))) + (*(double*)((uint8*)I$1 + 16ll) * *(double*)((uint8*)N$1 + 16ll))) * 0x1.p+1;
 _ZN7VECTOR3C1Eddd( tmp$1315$1, *(double*)I$1 - (*(double*)N$1 * D$1), *(double*)((uint8*)I$1 + 8ll) - (*(double*)((uint8*)N$1 + 8ll) * D$1), *(double*)((uint8*)I$1 + 16ll) - (*(double*)((uint8*)N$1 + 16ll) * D$1) );
 goto label$1143;
 label$1143:;
 return tmp$1315$1;
}

struct $7VECTOR4* _Z7REFLECTR7VECTOR4S0_( struct $7VECTOR4* tmp$1317$1, struct $7VECTOR4* I$1, struct $7VECTOR4* N$1 )
{
 label$1144:;
 double D$1;
 D$1 = ((((*(double*)I$1 * *(double*)N$1) + (*(double*)((uint8*)I$1 + 8ll) * *(double*)((uint8*)N$1 + 8ll))) + (*(double*)((uint8*)I$1 + 16ll) * *(double*)((uint8*)N$1 + 16ll))) + (*(double*)((uint8*)I$1 + 24ll) * *(double*)((uint8*)N$1 + 24ll))) * 0x1.p+1;
 _ZN7VECTOR4C1Edddd( tmp$1317$1, *(double*)I$1 - (*(double*)N$1 * D$1), *(double*)((uint8*)I$1 + 8ll) - (*(double*)((uint8*)N$1 + 8ll) * D$1), *(double*)((uint8*)I$1 + 16ll) - (*(double*)((uint8*)N$1 + 16ll) * D$1), *(double*)((uint8*)I$1 + 24ll) - (*(double*)((uint8*)N$1 + 24ll) * D$1) );
 goto label$1145;
 label$1145:;
 return tmp$1317$1;
}

struct $7VECTOR2* _Z7REFRACTR7VECTOR2S0_d( struct $7VECTOR2* tmp$1319$1, struct $7VECTOR2* I$1, struct $7VECTOR2* N$1, double ETA$1 )
{
 label$1146:;
 struct $7VECTOR2 R$1;
 _ZN7VECTOR2C1Ev( &R$1 );
 double DOTNI$1;
 DOTNI$1 = (*(double*)I$1 * *(double*)N$1) + (*(double*)((uint8*)I$1 + 8ll) * *(double*)((uint8*)N$1 + 8ll));
 double K$1;
 K$1 = -((ETA$1 * ETA$1) * (-(DOTNI$1 * DOTNI$1) + 0x1.p+0)) + 0x1.p+0;
 if( K$1 >= 0x0p+0 ) goto label$1149;
 {
  _ZN7VECTOR2C1ERS_( tmp$1319$1, &R$1 );
  goto label$1147;
 }
 goto label$1148;
 label$1149:;
 if( K$1 != 0x0p+0 ) goto label$1150;
 {
  struct $7VECTOR2 TMP$1320$2;
  struct $7VECTOR2 TMP$1321$2;
  double TMP$1322$2;
  struct $7VECTOR2 TMP$1323$2;
  TMP$1322$2 = ETA$1 * DOTNI$1;
  struct $7VECTOR2* vr$19 = _ZmlRdR7VECTOR2( &TMP$1321$2, &TMP$1322$2, N$1 );
  struct $7VECTOR2* vr$22 = _ZmlRdR7VECTOR2( &TMP$1320$2, &ETA$1, I$1 );
  struct $7VECTOR2* vr$24 = _ZmiR7VECTOR2S0_( &TMP$1323$2, vr$22, vr$19 );
  _ZN7VECTOR2aSERS_( &R$1, vr$24 );
 }
 goto label$1148;
 label$1150:;
 {
  struct $7VECTOR2 TMP$1324$2;
  struct $7VECTOR2 TMP$1325$2;
  double TMP$1326$2;
  struct $7VECTOR2 TMP$1327$2;
  double vr$26 = _Z4SQRTd( K$1 );
  K$1 = vr$26;
  TMP$1326$2 = (ETA$1 * DOTNI$1) + K$1;
  struct $7VECTOR2* vr$31 = _ZmlRdR7VECTOR2( &TMP$1325$2, &TMP$1326$2, N$1 );
  struct $7VECTOR2* vr$34 = _ZmlRdR7VECTOR2( &TMP$1324$2, &ETA$1, I$1 );
  struct $7VECTOR2* vr$36 = _ZmiR7VECTOR2S0_( &TMP$1327$2, vr$34, vr$31 );
  _ZN7VECTOR2aSERS_( &R$1, vr$36 );
 }
 label$1148:;
 _ZN7VECTOR2C1ERS_( tmp$1319$1, &R$1 );
 goto label$1147;
 label$1147:;
 return tmp$1319$1;
}

struct $7VECTOR3* _Z7REFRACTR7VECTOR3S0_d( struct $7VECTOR3* tmp$1328$1, struct $7VECTOR3* I$1, struct $7VECTOR3* N$1, double ETA$1 )
{
 label$1151:;
 struct $7VECTOR3 R$1;
 _ZN7VECTOR3C1Ev( &R$1 );
 double DOTNI$1;
 DOTNI$1 = ((*(double*)I$1 * *(double*)N$1) + (*(double*)((uint8*)I$1 + 8ll) * *(double*)((uint8*)N$1 + 8ll))) + (*(double*)((uint8*)I$1 + 16ll) * *(double*)((uint8*)N$1 + 16ll));
 double K$1;
 K$1 = -((ETA$1 * ETA$1) * (-(DOTNI$1 * DOTNI$1) + 0x1.p+0)) + 0x1.p+0;
 if( K$1 >= 0x0p+0 ) goto label$1154;
 {
  _ZN7VECTOR3C1ERS_( tmp$1328$1, &R$1 );
  goto label$1152;
 }
 goto label$1153;
 label$1154:;
 if( K$1 != 0x0p+0 ) goto label$1155;
 {
  struct $7VECTOR3 TMP$1329$2;
  struct $7VECTOR3 TMP$1330$2;
  struct $7VECTOR3 TMP$1331$2;
  struct $7VECTOR3* vr$22 = _ZmldR7VECTOR3( &TMP$1330$2, ETA$1 * DOTNI$1, N$1 );
  struct $7VECTOR3* vr$24 = _ZmldR7VECTOR3( &TMP$1329$2, ETA$1, I$1 );
  struct $7VECTOR3* vr$26 = _ZmiR7VECTOR3S0_( &TMP$1331$2, vr$24, vr$22 );
  _ZN7VECTOR3aSERS_( &R$1, vr$26 );
 }
 goto label$1153;
 label$1155:;
 {
  struct $7VECTOR3 TMP$1332$2;
  struct $7VECTOR3 TMP$1333$2;
  struct $7VECTOR3 TMP$1334$2;
  double vr$28 = _Z4SQRTd( K$1 );
  K$1 = vr$28;
  struct $7VECTOR3* vr$32 = _ZmldR7VECTOR3( &TMP$1333$2, (ETA$1 * DOTNI$1) + K$1, N$1 );
  struct $7VECTOR3* vr$34 = _ZmldR7VECTOR3( &TMP$1332$2, ETA$1, I$1 );
  struct $7VECTOR3* vr$36 = _ZmiR7VECTOR3S0_( &TMP$1334$2, vr$34, vr$32 );
  _ZN7VECTOR3aSERS_( &R$1, vr$36 );
 }
 label$1153:;
 _ZN7VECTOR3C1ERS_( tmp$1328$1, &R$1 );
 goto label$1152;
 label$1152:;
 return tmp$1328$1;
}

struct $7VECTOR4* _Z7REFRACTR7VECTOR4S0_d( struct $7VECTOR4* tmp$1335$1, struct $7VECTOR4* I$1, struct $7VECTOR4* N$1, double ETA$1 )
{
 label$1156:;
 struct $7VECTOR4 R$1;
 _ZN7VECTOR4C1Ev( &R$1 );
 double DOTNI$1;
 DOTNI$1 = (((*(double*)I$1 * *(double*)N$1) + (*(double*)((uint8*)I$1 + 8ll) * *(double*)((uint8*)N$1 + 8ll))) + (*(double*)((uint8*)I$1 + 16ll) * *(double*)((uint8*)N$1 + 16ll))) + (*(double*)((uint8*)I$1 + 24ll) * *(double*)((uint8*)N$1 + 24ll));
 double K$1;
 K$1 = -((ETA$1 * ETA$1) * (-(DOTNI$1 * DOTNI$1) + 0x1.p+0)) + 0x1.p+0;
 if( K$1 >= 0x0p+0 ) goto label$1159;
 {
  _ZN7VECTOR4C1ERS_( tmp$1335$1, &R$1 );
  goto label$1157;
 }
 goto label$1158;
 label$1159:;
 if( K$1 != 0x0p+0 ) goto label$1160;
 {
  struct $7VECTOR4 TMP$1336$2;
  struct $7VECTOR4 TMP$1337$2;
  struct $7VECTOR4 TMP$1338$2;
  struct $7VECTOR4* vr$26 = _ZmldR7VECTOR4( &TMP$1337$2, ETA$1 * DOTNI$1, N$1 );
  struct $7VECTOR4* vr$28 = _ZmldR7VECTOR4( &TMP$1336$2, ETA$1, I$1 );
  struct $7VECTOR4* vr$30 = _ZmiR7VECTOR4S0_( &TMP$1338$2, vr$28, vr$26 );
  _ZN7VECTOR4aSERS_( &R$1, vr$30 );
 }
 goto label$1158;
 label$1160:;
 {
  struct $7VECTOR4 TMP$1339$2;
  struct $7VECTOR4 TMP$1340$2;
  struct $7VECTOR4 TMP$1341$2;
  double vr$32 = _Z4SQRTd( K$1 );
  K$1 = vr$32;
  struct $7VECTOR4* vr$36 = _ZmldR7VECTOR4( &TMP$1340$2, (ETA$1 * DOTNI$1) + K$1, N$1 );
  struct $7VECTOR4* vr$38 = _ZmldR7VECTOR4( &TMP$1339$2, ETA$1, I$1 );
  struct $7VECTOR4* vr$40 = _ZmiR7VECTOR4S0_( &TMP$1341$2, vr$38, vr$36 );
  _ZN7VECTOR4aSERS_( &R$1, vr$40 );
 }
 label$1158:;
 _ZN7VECTOR4C1ERS_( tmp$1335$1, &R$1 );
 goto label$1157;
 label$1157:;
 return tmp$1335$1;
}

void _ZN4MAT2C1Ed( struct $4MAT2* THIS$1, double D$1 )
{
 label$1161:;
 *(double*)THIS$1 = D$1;
 *(double*)((uint8*)THIS$1 + 8ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 16ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 24ll) = D$1;
 label$1162:;
}

void _ZN4MAT2C1Edddd( struct $4MAT2* THIS$1, double A$1, double B$1, double C$1, double D$1 )
{
 label$1163:;
 *(double*)THIS$1 = A$1;
 *(double*)((uint8*)THIS$1 + 8ll) = B$1;
 *(double*)((uint8*)THIS$1 + 16ll) = C$1;
 *(double*)((uint8*)THIS$1 + 24ll) = D$1;
 label$1164:;
}

FBSTRING* _ZN4MAT2cv8FBSTRINGEv( struct $4MAT2* THIS$1 )
{
 FBSTRING TMP$1343$1;
 FBSTRING TMP$1344$1;
 FBSTRING TMP$1345$1;
 FBSTRING TMP$1346$1;
 FBSTRING TMP$1347$1;
 FBSTRING TMP$1348$1;
 FBSTRING TMP$1349$1;
 FBSTRING TMP$1350$1;
 FBSTRING fb$result$1;
 __builtin_memset( &fb$result$1, 0, 24ll );
 label$1165:;
 FBSTRING* vr$2 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 24ll) );
 FBSTRING* vr$4 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 8ll) );
 FBSTRING* vr$6 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 16ll) );
 FBSTRING* vr$8 = fb_DoubleToStr( *(double*)THIS$1 );
 __builtin_memset( &TMP$1343$1, 0, 24ll );
 FBSTRING* vr$11 = fb_StrConcat( &TMP$1343$1, (void*)"(", 2ll, (void*)vr$8, -1ll );
 __builtin_memset( &TMP$1344$1, 0, 24ll );
 FBSTRING* vr$14 = fb_StrConcat( &TMP$1344$1, (void*)vr$11, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1345$1, 0, 24ll );
 FBSTRING* vr$17 = fb_StrConcat( &TMP$1345$1, (void*)vr$14, -1ll, (void*)vr$6, -1ll );
 __builtin_memset( &TMP$1346$1, 0, 24ll );
 FBSTRING* vr$20 = fb_StrConcat( &TMP$1346$1, (void*)vr$17, -1ll, (void*)"), (", 5ll );
 __builtin_memset( &TMP$1347$1, 0, 24ll );
 FBSTRING* vr$23 = fb_StrConcat( &TMP$1347$1, (void*)vr$20, -1ll, (void*)vr$4, -1ll );
 __builtin_memset( &TMP$1348$1, 0, 24ll );
 FBSTRING* vr$26 = fb_StrConcat( &TMP$1348$1, (void*)vr$23, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1349$1, 0, 24ll );
 FBSTRING* vr$29 = fb_StrConcat( &TMP$1349$1, (void*)vr$26, -1ll, (void*)vr$2, -1ll );
 __builtin_memset( &TMP$1350$1, 0, 24ll );
 FBSTRING* vr$32 = fb_StrConcat( &TMP$1350$1, (void*)vr$29, -1ll, (void*)")", 2ll );
 fb_StrInit( (void*)&fb$result$1, -1ll, (void*)vr$32, -1ll, 0 );
 goto label$1166;
 label$1166:;
 FBSTRING* vr$35 = fb_StrAllocTempResult( (FBSTRING*)&fb$result$1 );
 return vr$35;
}

struct $7VECTOR2* _ZmlR4MAT2R7VECTOR2( struct $7VECTOR2* tmp$1351$1, struct $4MAT2* L$1, struct $7VECTOR2* R$1 )
{
 label$1167:;
 _ZN7VECTOR2C1Edd( tmp$1351$1, (*(double*)L$1 * *(double*)R$1) + (*(double*)((uint8*)L$1 + 16ll) * *(double*)((uint8*)R$1 + 8ll)), (*(double*)((uint8*)L$1 + 8ll) * *(double*)R$1) + (*(double*)((uint8*)L$1 + 24ll) * *(double*)((uint8*)R$1 + 8ll)) );
 goto label$1168;
 label$1168:;
 return tmp$1351$1;
}

struct $7VECTOR2* _ZmlR7VECTOR2R4MAT2( struct $7VECTOR2* tmp$1353$1, struct $7VECTOR2* R$1, struct $4MAT2* L$1 )
{
 label$1169:;
 _ZN7VECTOR2C1Edd( tmp$1353$1, (*(double*)L$1 * *(double*)R$1) + (*(double*)((uint8*)L$1 + 8ll) * *(double*)((uint8*)R$1 + 8ll)), (*(double*)((uint8*)L$1 + 16ll) * *(double*)R$1) + (*(double*)((uint8*)L$1 + 24ll) * *(double*)((uint8*)R$1 + 8ll)) );
 goto label$1170;
 label$1170:;
 return tmp$1353$1;
}

struct $4MAT2 _ZmlR4MAT2S0_( struct $4MAT2* L$1, struct $4MAT2* R$1 )
{
 struct $4MAT2 fb$result$1;
 label$1171:;
 _ZN4MAT2C1Edddd( &fb$result$1, (*(double*)L$1 * *(double*)R$1) + (*(double*)((uint8*)L$1 + 16ll) * *(double*)((uint8*)R$1 + 8ll)), (*(double*)((uint8*)L$1 + 8ll) * *(double*)R$1) + (*(double*)((uint8*)L$1 + 24ll) * *(double*)((uint8*)R$1 + 8ll)), (*(double*)L$1 * *(double*)((uint8*)R$1 + 8ll)) + (*(double*)((uint8*)L$1 + 16ll) * *(double*)((uint8*)R$1 + 24ll)), (*(double*)((uint8*)L$1 + 8ll) * *(double*)((uint8*)R$1 + 16ll)) + (*(double*)((uint8*)L$1 + 24ll) * *(double*)((uint8*)R$1 + 24ll)) );
 goto label$1172;
 label$1172:;
 return fb$result$1;
}

void _ZN4MAT3C1Ed( struct $4MAT3* THIS$1, double D$1 )
{
 label$1173:;
 *(double*)THIS$1 = D$1;
 *(double*)((uint8*)THIS$1 + 8ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 16ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 24ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 32ll) = D$1;
 *(double*)((uint8*)THIS$1 + 40ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 48ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 56ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 64ll) = D$1;
 label$1174:;
}

void _ZN4MAT3C1Eddddddddd( struct $4MAT3* THIS$1, double A$1, double B$1, double C$1, double D$1, double E$1, double F$1, double G$1, double H$1, double J$1 )
{
 label$1175:;
 *(double*)THIS$1 = A$1;
 *(double*)((uint8*)THIS$1 + 8ll) = B$1;
 *(double*)((uint8*)THIS$1 + 16ll) = C$1;
 *(double*)((uint8*)THIS$1 + 24ll) = D$1;
 *(double*)((uint8*)THIS$1 + 32ll) = E$1;
 *(double*)((uint8*)THIS$1 + 40ll) = F$1;
 *(double*)((uint8*)THIS$1 + 48ll) = G$1;
 *(double*)((uint8*)THIS$1 + 56ll) = H$1;
 *(double*)((uint8*)THIS$1 + 64ll) = J$1;
 label$1176:;
}

void _ZN4MAT3C1ER7VECTOR3S1_S1_( struct $4MAT3* THIS$1, struct $7VECTOR3* A$1, struct $7VECTOR3* B$1, struct $7VECTOR3* C$1 )
{
 label$1177:;
 *(double*)THIS$1 = *(double*)A$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)A$1 + 8ll);
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)A$1 + 16ll);
 *(double*)((uint8*)THIS$1 + 24ll) = *(double*)B$1;
 *(double*)((uint8*)THIS$1 + 32ll) = *(double*)((uint8*)B$1 + 8ll);
 *(double*)((uint8*)THIS$1 + 40ll) = *(double*)((uint8*)B$1 + 16ll);
 *(double*)((uint8*)THIS$1 + 48ll) = *(double*)C$1;
 *(double*)((uint8*)THIS$1 + 56ll) = *(double*)((uint8*)C$1 + 8ll);
 *(double*)((uint8*)THIS$1 + 64ll) = *(double*)((uint8*)C$1 + 16ll);
 label$1178:;
}

FBSTRING* _ZN4MAT3cv8FBSTRINGEv( struct $4MAT3* THIS$1 )
{
 FBSTRING TMP$1356$1;
 FBSTRING TMP$1357$1;
 FBSTRING TMP$1358$1;
 FBSTRING TMP$1359$1;
 FBSTRING TMP$1360$1;
 FBSTRING TMP$1361$1;
 FBSTRING TMP$1362$1;
 FBSTRING TMP$1363$1;
 FBSTRING TMP$1364$1;
 FBSTRING TMP$1365$1;
 FBSTRING TMP$1366$1;
 FBSTRING TMP$1367$1;
 FBSTRING TMP$1368$1;
 FBSTRING TMP$1369$1;
 FBSTRING TMP$1370$1;
 FBSTRING TMP$1371$1;
 FBSTRING TMP$1372$1;
 FBSTRING TMP$1373$1;
 FBSTRING fb$result$1;
 __builtin_memset( &fb$result$1, 0, 24ll );
 label$1179:;
 FBSTRING* vr$2 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 64ll) );
 FBSTRING* vr$4 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 40ll) );
 FBSTRING* vr$6 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 16ll) );
 FBSTRING* vr$8 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 56ll) );
 FBSTRING* vr$10 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 32ll) );
 FBSTRING* vr$12 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 8ll) );
 FBSTRING* vr$14 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 48ll) );
 FBSTRING* vr$16 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 24ll) );
 FBSTRING* vr$18 = fb_DoubleToStr( *(double*)THIS$1 );
 __builtin_memset( &TMP$1356$1, 0, 24ll );
 FBSTRING* vr$21 = fb_StrConcat( &TMP$1356$1, (void*)"(", 2ll, (void*)vr$18, -1ll );
 __builtin_memset( &TMP$1357$1, 0, 24ll );
 FBSTRING* vr$24 = fb_StrConcat( &TMP$1357$1, (void*)vr$21, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1358$1, 0, 24ll );
 FBSTRING* vr$27 = fb_StrConcat( &TMP$1358$1, (void*)vr$24, -1ll, (void*)vr$16, -1ll );
 __builtin_memset( &TMP$1359$1, 0, 24ll );
 FBSTRING* vr$30 = fb_StrConcat( &TMP$1359$1, (void*)vr$27, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1360$1, 0, 24ll );
 FBSTRING* vr$33 = fb_StrConcat( &TMP$1360$1, (void*)vr$30, -1ll, (void*)vr$14, -1ll );
 __builtin_memset( &TMP$1361$1, 0, 24ll );
 FBSTRING* vr$36 = fb_StrConcat( &TMP$1361$1, (void*)vr$33, -1ll, (void*)"), (", 5ll );
 __builtin_memset( &TMP$1362$1, 0, 24ll );
 FBSTRING* vr$39 = fb_StrConcat( &TMP$1362$1, (void*)vr$36, -1ll, (void*)vr$12, -1ll );
 __builtin_memset( &TMP$1363$1, 0, 24ll );
 FBSTRING* vr$42 = fb_StrConcat( &TMP$1363$1, (void*)vr$39, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1364$1, 0, 24ll );
 FBSTRING* vr$45 = fb_StrConcat( &TMP$1364$1, (void*)vr$42, -1ll, (void*)vr$10, -1ll );
 __builtin_memset( &TMP$1365$1, 0, 24ll );
 FBSTRING* vr$48 = fb_StrConcat( &TMP$1365$1, (void*)vr$45, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1366$1, 0, 24ll );
 FBSTRING* vr$51 = fb_StrConcat( &TMP$1366$1, (void*)vr$48, -1ll, (void*)vr$8, -1ll );
 __builtin_memset( &TMP$1367$1, 0, 24ll );
 FBSTRING* vr$54 = fb_StrConcat( &TMP$1367$1, (void*)vr$51, -1ll, (void*)"), (", 5ll );
 __builtin_memset( &TMP$1368$1, 0, 24ll );
 FBSTRING* vr$57 = fb_StrConcat( &TMP$1368$1, (void*)vr$54, -1ll, (void*)vr$6, -1ll );
 __builtin_memset( &TMP$1369$1, 0, 24ll );
 FBSTRING* vr$60 = fb_StrConcat( &TMP$1369$1, (void*)vr$57, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1370$1, 0, 24ll );
 FBSTRING* vr$63 = fb_StrConcat( &TMP$1370$1, (void*)vr$60, -1ll, (void*)vr$4, -1ll );
 __builtin_memset( &TMP$1371$1, 0, 24ll );
 FBSTRING* vr$66 = fb_StrConcat( &TMP$1371$1, (void*)vr$63, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1372$1, 0, 24ll );
 FBSTRING* vr$69 = fb_StrConcat( &TMP$1372$1, (void*)vr$66, -1ll, (void*)vr$2, -1ll );
 __builtin_memset( &TMP$1373$1, 0, 24ll );
 FBSTRING* vr$72 = fb_StrConcat( &TMP$1373$1, (void*)vr$69, -1ll, (void*)")", 2ll );
 fb_StrInit( (void*)&fb$result$1, -1ll, (void*)vr$72, -1ll, 0 );
 goto label$1180;
 label$1180:;
 FBSTRING* vr$75 = fb_StrAllocTempResult( (FBSTRING*)&fb$result$1 );
 return vr$75;
}

void _ZN4MAT313SETZROTATIONDEd( struct $4MAT3* THIS$1, double DEG$1 )
{
 label$1181:;
 _ZN4MAT313SETZROTATIONREd( THIS$1, (DEG$1 * 0x1.921FB54442D18p+1) / 0x1.68p+7 );
 label$1182:;
}

void _ZN4MAT313SETZROTATIONREd( struct $4MAT3* THIS$1, double RAD$1 )
{
 label$1183:;
 double CO$1;
 float vr$1 = cosf( (float)RAD$1 );
 CO$1 = (double)vr$1;
 double SI$1;
 float vr$4 = sinf( (float)RAD$1 );
 SI$1 = (double)vr$4;
 *(double*)THIS$1 = CO$1;
 *(double*)((uint8*)THIS$1 + 8ll) = SI$1;
 *(double*)((uint8*)THIS$1 + 16ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 24ll) = -SI$1;
 *(double*)((uint8*)THIS$1 + 32ll) = CO$1;
 *(double*)((uint8*)THIS$1 + 40ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 48ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 56ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 64ll) = 0x1.p+0;
 label$1184:;
}

void _ZN4MAT312SETROTATIONDER7VECTOR3d( struct $4MAT3* THIS$1, struct $7VECTOR3* AXIS$1, double DEG$1 )
{
 label$1185:;
 _ZN4MAT312SETROTATIONRER7VECTOR3d( THIS$1, AXIS$1, (DEG$1 * 0x1.921FB54442D18p+1) / 0x1.68p+7 );
 label$1186:;
}

void _ZN4MAT312SETROTATIONRER7VECTOR3d( struct $4MAT3* THIS$1, struct $7VECTOR3* AXIS$1, double RAD$1 )
{
 label$1187:;
 double CO$1;
 float vr$1 = cosf( (float)RAD$1 );
 CO$1 = (double)vr$1;
 double SI$1;
 float vr$4 = sinf( (float)RAD$1 );
 SI$1 = (double)vr$4;
 double OC$1;
 OC$1 = 0x1.p+0 - CO$1;
 *(double*)THIS$1 = ((OC$1 * *(double*)AXIS$1) * *(double*)AXIS$1) + CO$1;
 *(double*)((uint8*)THIS$1 + 8ll) = ((OC$1 * *(double*)AXIS$1) * *(double*)((uint8*)AXIS$1 + 8ll)) - (*(double*)((uint8*)AXIS$1 + 16ll) * SI$1);
 *(double*)((uint8*)THIS$1 + 16ll) = ((OC$1 * *(double*)((uint8*)AXIS$1 + 16ll)) * *(double*)AXIS$1) + (*(double*)((uint8*)AXIS$1 + 8ll) * SI$1);
 *(double*)((uint8*)THIS$1 + 24ll) = ((OC$1 * *(double*)AXIS$1) * *(double*)((uint8*)AXIS$1 + 8ll)) + (*(double*)((uint8*)AXIS$1 + 16ll) * SI$1);
 *(double*)((uint8*)THIS$1 + 32ll) = ((OC$1 * *(double*)((uint8*)AXIS$1 + 8ll)) * *(double*)((uint8*)AXIS$1 + 8ll)) + CO$1;
 *(double*)((uint8*)THIS$1 + 40ll) = ((OC$1 * *(double*)((uint8*)AXIS$1 + 8ll)) * *(double*)((uint8*)AXIS$1 + 16ll)) - (*(double*)AXIS$1 * SI$1);
 *(double*)((uint8*)THIS$1 + 48ll) = ((OC$1 * *(double*)((uint8*)AXIS$1 + 16ll)) * *(double*)AXIS$1) - (*(double*)((uint8*)AXIS$1 + 8ll) * SI$1);
 *(double*)((uint8*)THIS$1 + 56ll) = ((OC$1 * *(double*)((uint8*)AXIS$1 + 8ll)) * *(double*)((uint8*)AXIS$1 + 16ll)) + (*(double*)AXIS$1 * SI$1);
 *(double*)((uint8*)THIS$1 + 64ll) = ((OC$1 * *(double*)((uint8*)AXIS$1 + 16ll)) * *(double*)((uint8*)AXIS$1 + 16ll)) + CO$1;
 label$1188:;
}

void _ZN4MAT310SETSCALINGER7VECTOR2( struct $4MAT3* THIS$1, struct $7VECTOR2* SCALE$1 )
{
 label$1189:;
 _ZN4MAT310SETSCALINGEdd( THIS$1, *(double*)SCALE$1, *(double*)((uint8*)SCALE$1 + 8ll) );
 label$1190:;
}

void _ZN4MAT310SETSCALINGEd( struct $4MAT3* THIS$1, double SCALE$1 )
{
 label$1191:;
 _ZN4MAT310SETSCALINGEdd( THIS$1, SCALE$1, SCALE$1 );
 label$1192:;
}

void _ZN4MAT310SETSCALINGEdd( struct $4MAT3* THIS$1, double SCALEX$1, double SCALEY$1 )
{
 label$1193:;
 *(double*)THIS$1 = SCALEX$1;
 *(double*)((uint8*)THIS$1 + 8ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 16ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 24ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 32ll) = SCALEY$1;
 *(double*)((uint8*)THIS$1 + 40ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 48ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 56ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 64ll) = 0x1.p+0;
 label$1194:;
}

struct $7VECTOR3* _ZmlR4MAT3R7VECTOR3( struct $7VECTOR3* tmp$1374$1, struct $4MAT3* L$1, struct $7VECTOR3* R$1 )
{
 label$1195:;
 _ZN7VECTOR3C1Eddd( tmp$1374$1, ((*(double*)L$1 * *(double*)R$1) + (*(double*)((uint8*)L$1 + 24ll) * *(double*)((uint8*)R$1 + 8ll))) + (*(double*)((uint8*)L$1 + 48ll) * *(double*)((uint8*)R$1 + 16ll)), ((*(double*)((uint8*)L$1 + 8ll) * *(double*)R$1) + (*(double*)((uint8*)L$1 + 32ll) * *(double*)((uint8*)R$1 + 8ll))) + (*(double*)((uint8*)L$1 + 56ll) * *(double*)((uint8*)R$1 + 16ll)), ((*(double*)((uint8*)L$1 + 16ll) * *(double*)R$1) + (*(double*)((uint8*)L$1 + 40ll) * *(double*)((uint8*)R$1 + 8ll))) + (*(double*)((uint8*)L$1 + 64ll) * *(double*)((uint8*)R$1 + 16ll)) );
 goto label$1196;
 label$1196:;
 return tmp$1374$1;
}

struct $7VECTOR3* _ZmlR7VECTOR3R4MAT3( struct $7VECTOR3* tmp$1376$1, struct $7VECTOR3* R$1, struct $4MAT3* L$1 )
{
 label$1197:;
 _ZN7VECTOR3C1Eddd( tmp$1376$1, ((*(double*)L$1 * *(double*)R$1) + (*(double*)((uint8*)L$1 + 8ll) * *(double*)((uint8*)R$1 + 8ll))) + (*(double*)((uint8*)L$1 + 16ll) * *(double*)((uint8*)R$1 + 16ll)), ((*(double*)((uint8*)L$1 + 24ll) * *(double*)R$1) + (*(double*)((uint8*)L$1 + 32ll) * *(double*)((uint8*)R$1 + 8ll))) + (*(double*)((uint8*)L$1 + 40ll) * *(double*)((uint8*)R$1 + 16ll)), ((*(double*)((uint8*)L$1 + 48ll) * *(double*)R$1) + (*(double*)((uint8*)L$1 + 56ll) * *(double*)((uint8*)R$1 + 8ll))) + (*(double*)((uint8*)L$1 + 64ll) * *(double*)((uint8*)R$1 + 16ll)) );
 goto label$1198;
 label$1198:;
 return tmp$1376$1;
}

struct $4MAT3 _ZmlR4MAT3S0_( struct $4MAT3* L$1, struct $4MAT3* R$1 )
{
 struct $4MAT3 fb$result$1;
 label$1199:;
 _ZN4MAT3C1Eddddddddd( &fb$result$1, ((*(double*)L$1 * *(double*)R$1) + (*(double*)((uint8*)L$1 + 24ll) * *(double*)((uint8*)R$1 + 8ll))) + (*(double*)((uint8*)L$1 + 48ll) * *(double*)((uint8*)R$1 + 16ll)), ((*(double*)((uint8*)L$1 + 8ll) * *(double*)R$1) + (*(double*)((uint8*)L$1 + 32ll) * *(double*)((uint8*)R$1 + 8ll))) + (*(double*)((uint8*)L$1 + 56ll) * *(double*)((uint8*)R$1 + 16ll)), ((*(double*)((uint8*)L$1 + 16ll) * *(double*)R$1) + (*(double*)((uint8*)L$1 + 40ll) * *(double*)((uint8*)R$1 + 8ll))) + (*(double*)((uint8*)L$1 + 64ll) * *(double*)((uint8*)R$1 + 16ll)), ((*(double*)L$1 * *(double*)((uint8*)R$1 + 24ll)) + (*(double*)((uint8*)L$1 + 24ll) * *(double*)((uint8*)R$1 + 32ll))) + (*(double*)((uint8*)L$1 + 48ll) * *(double*)((uint8*)R$1 + 40ll)), ((*(double*)((uint8*)L$1 + 8ll) * *(double*)((uint8*)R$1 + 24ll)) + (*(double*)((uint8*)L$1 + 32ll) * *(double*)((uint8*)R$1 + 32ll))) + (*(double*)((uint8*)L$1 + 56ll) * *(double*)((uint8*)R$1 + 40ll)), ((*(double*)((uint8*)L$1 + 16ll) * *(double*)((uint8*)R$1 + 24ll)) + (*(double*)((uint8*)L$1 + 40ll) * *(double*)((uint8*)R$1 + 32ll))) + (*(double*)((uint8*)L$1 + 64ll) * *(double*)((uint8*)R$1 + 40ll)), ((*(double*)L$1 * *(double*)((uint8*)R$1 + 48ll)) + (*(double*)((uint8*)L$1 + 24ll) * *(double*)((uint8*)R$1 + 56ll))) + (*(double*)((uint8*)L$1 + 48ll) * *(double*)((uint8*)R$1 + 64ll)), ((*(double*)((uint8*)L$1 + 8ll) * *(double*)((uint8*)R$1 + 48ll)) + (*(double*)((uint8*)L$1 + 32ll) * *(double*)((uint8*)R$1 + 56ll))) + (*(double*)((uint8*)L$1 + 56ll) * *(double*)((uint8*)R$1 + 64ll)), ((*(double*)((uint8*)L$1 + 16ll) * *(double*)((uint8*)R$1 + 48ll)) + (*(double*)((uint8*)L$1 + 40ll) * *(double*)((uint8*)R$1 + 56ll))) + (*(double*)((uint8*)L$1 + 64ll) * *(double*)((uint8*)R$1 + 64ll)) );
 goto label$1200;
 label$1200:;
 return fb$result$1;
}

void _ZN4MAT4C1Edddddddddddddddd( struct $4MAT4* THIS$1, double A$1, double B$1, double C$1, double D$1, double E$1, double F$1, double G$1, double H$1, double I$1, double J$1, double K$1, double L$1, double M$1, double N$1, double O$1, double P$1 )
{
 label$1201:;
 *(double*)THIS$1 = A$1;
 *(double*)((uint8*)THIS$1 + 8ll) = B$1;
 *(double*)((uint8*)THIS$1 + 16ll) = C$1;
 *(double*)((uint8*)THIS$1 + 24ll) = D$1;
 *(double*)((uint8*)THIS$1 + 32ll) = E$1;
 *(double*)((uint8*)THIS$1 + 40ll) = F$1;
 *(double*)((uint8*)THIS$1 + 48ll) = G$1;
 *(double*)((uint8*)THIS$1 + 56ll) = H$1;
 *(double*)((uint8*)THIS$1 + 64ll) = I$1;
 *(double*)((uint8*)THIS$1 + 72ll) = J$1;
 *(double*)((uint8*)THIS$1 + 80ll) = K$1;
 *(double*)((uint8*)THIS$1 + 88ll) = L$1;
 *(double*)((uint8*)THIS$1 + 96ll) = M$1;
 *(double*)((uint8*)THIS$1 + 104ll) = N$1;
 *(double*)((uint8*)THIS$1 + 112ll) = O$1;
 *(double*)((uint8*)THIS$1 + 120ll) = P$1;
 label$1202:;
}

void _ZN4MAT4C1Ed( struct $4MAT4* THIS$1, double D$1 )
{
 label$1203:;
 *(double*)THIS$1 = D$1;
 *(double*)((uint8*)THIS$1 + 8ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 16ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 24ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 32ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 40ll) = D$1;
 *(double*)((uint8*)THIS$1 + 48ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 56ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 64ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 72ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 80ll) = D$1;
 *(double*)((uint8*)THIS$1 + 88ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 96ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 104ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 112ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 120ll) = D$1;
 label$1204:;
}

FBSTRING* _ZN4MAT4cv8FBSTRINGEv( struct $4MAT4* THIS$1 )
{
 FBSTRING TMP$1379$1;
 FBSTRING TMP$1380$1;
 FBSTRING TMP$1381$1;
 FBSTRING TMP$1382$1;
 FBSTRING TMP$1383$1;
 FBSTRING TMP$1384$1;
 FBSTRING TMP$1385$1;
 FBSTRING TMP$1386$1;
 FBSTRING TMP$1387$1;
 FBSTRING TMP$1388$1;
 FBSTRING TMP$1389$1;
 FBSTRING TMP$1390$1;
 FBSTRING TMP$1391$1;
 FBSTRING TMP$1392$1;
 FBSTRING TMP$1393$1;
 FBSTRING TMP$1394$1;
 FBSTRING TMP$1395$1;
 FBSTRING TMP$1396$1;
 FBSTRING TMP$1397$1;
 FBSTRING TMP$1398$1;
 FBSTRING TMP$1399$1;
 FBSTRING TMP$1400$1;
 FBSTRING TMP$1401$1;
 FBSTRING TMP$1402$1;
 FBSTRING TMP$1403$1;
 FBSTRING TMP$1404$1;
 FBSTRING TMP$1405$1;
 FBSTRING TMP$1406$1;
 FBSTRING TMP$1407$1;
 FBSTRING TMP$1408$1;
 FBSTRING TMP$1409$1;
 FBSTRING TMP$1410$1;
 FBSTRING fb$result$1;
 __builtin_memset( &fb$result$1, 0, 24ll );
 label$1205:;
 FBSTRING* vr$2 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 120ll) );
 FBSTRING* vr$4 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 88ll) );
 FBSTRING* vr$6 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 56ll) );
 FBSTRING* vr$8 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 24ll) );
 FBSTRING* vr$10 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 112ll) );
 FBSTRING* vr$12 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 80ll) );
 FBSTRING* vr$14 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 48ll) );
 FBSTRING* vr$16 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 16ll) );
 FBSTRING* vr$18 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 104ll) );
 FBSTRING* vr$20 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 72ll) );
 FBSTRING* vr$22 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 40ll) );
 FBSTRING* vr$24 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 8ll) );
 FBSTRING* vr$26 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 96ll) );
 FBSTRING* vr$28 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 64ll) );
 FBSTRING* vr$30 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 32ll) );
 FBSTRING* vr$32 = fb_DoubleToStr( *(double*)THIS$1 );
 __builtin_memset( &TMP$1379$1, 0, 24ll );
 FBSTRING* vr$35 = fb_StrConcat( &TMP$1379$1, (void*)"(", 2ll, (void*)vr$32, -1ll );
 __builtin_memset( &TMP$1380$1, 0, 24ll );
 FBSTRING* vr$38 = fb_StrConcat( &TMP$1380$1, (void*)vr$35, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1381$1, 0, 24ll );
 FBSTRING* vr$41 = fb_StrConcat( &TMP$1381$1, (void*)vr$38, -1ll, (void*)vr$30, -1ll );
 __builtin_memset( &TMP$1382$1, 0, 24ll );
 FBSTRING* vr$44 = fb_StrConcat( &TMP$1382$1, (void*)vr$41, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1383$1, 0, 24ll );
 FBSTRING* vr$47 = fb_StrConcat( &TMP$1383$1, (void*)vr$44, -1ll, (void*)vr$28, -1ll );
 __builtin_memset( &TMP$1384$1, 0, 24ll );
 FBSTRING* vr$50 = fb_StrConcat( &TMP$1384$1, (void*)vr$47, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1385$1, 0, 24ll );
 FBSTRING* vr$53 = fb_StrConcat( &TMP$1385$1, (void*)vr$50, -1ll, (void*)vr$26, -1ll );
 __builtin_memset( &TMP$1386$1, 0, 24ll );
 FBSTRING* vr$56 = fb_StrConcat( &TMP$1386$1, (void*)vr$53, -1ll, (void*)"), (", 5ll );
 __builtin_memset( &TMP$1387$1, 0, 24ll );
 FBSTRING* vr$59 = fb_StrConcat( &TMP$1387$1, (void*)vr$56, -1ll, (void*)vr$24, -1ll );
 __builtin_memset( &TMP$1388$1, 0, 24ll );
 FBSTRING* vr$62 = fb_StrConcat( &TMP$1388$1, (void*)vr$59, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1389$1, 0, 24ll );
 FBSTRING* vr$65 = fb_StrConcat( &TMP$1389$1, (void*)vr$62, -1ll, (void*)vr$22, -1ll );
 __builtin_memset( &TMP$1390$1, 0, 24ll );
 FBSTRING* vr$68 = fb_StrConcat( &TMP$1390$1, (void*)vr$65, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1391$1, 0, 24ll );
 FBSTRING* vr$71 = fb_StrConcat( &TMP$1391$1, (void*)vr$68, -1ll, (void*)vr$20, -1ll );
 __builtin_memset( &TMP$1392$1, 0, 24ll );
 FBSTRING* vr$74 = fb_StrConcat( &TMP$1392$1, (void*)vr$71, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1393$1, 0, 24ll );
 FBSTRING* vr$77 = fb_StrConcat( &TMP$1393$1, (void*)vr$74, -1ll, (void*)vr$18, -1ll );
 __builtin_memset( &TMP$1394$1, 0, 24ll );
 FBSTRING* vr$80 = fb_StrConcat( &TMP$1394$1, (void*)vr$77, -1ll, (void*)"), (", 5ll );
 __builtin_memset( &TMP$1395$1, 0, 24ll );
 FBSTRING* vr$83 = fb_StrConcat( &TMP$1395$1, (void*)vr$80, -1ll, (void*)vr$16, -1ll );
 __builtin_memset( &TMP$1396$1, 0, 24ll );
 FBSTRING* vr$86 = fb_StrConcat( &TMP$1396$1, (void*)vr$83, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1397$1, 0, 24ll );
 FBSTRING* vr$89 = fb_StrConcat( &TMP$1397$1, (void*)vr$86, -1ll, (void*)vr$14, -1ll );
 __builtin_memset( &TMP$1398$1, 0, 24ll );
 FBSTRING* vr$92 = fb_StrConcat( &TMP$1398$1, (void*)vr$89, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1399$1, 0, 24ll );
 FBSTRING* vr$95 = fb_StrConcat( &TMP$1399$1, (void*)vr$92, -1ll, (void*)vr$12, -1ll );
 __builtin_memset( &TMP$1400$1, 0, 24ll );
 FBSTRING* vr$98 = fb_StrConcat( &TMP$1400$1, (void*)vr$95, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1401$1, 0, 24ll );
 FBSTRING* vr$101 = fb_StrConcat( &TMP$1401$1, (void*)vr$98, -1ll, (void*)vr$10, -1ll );
 __builtin_memset( &TMP$1402$1, 0, 24ll );
 FBSTRING* vr$104 = fb_StrConcat( &TMP$1402$1, (void*)vr$101, -1ll, (void*)"), (", 5ll );
 __builtin_memset( &TMP$1403$1, 0, 24ll );
 FBSTRING* vr$107 = fb_StrConcat( &TMP$1403$1, (void*)vr$104, -1ll, (void*)vr$8, -1ll );
 __builtin_memset( &TMP$1404$1, 0, 24ll );
 FBSTRING* vr$110 = fb_StrConcat( &TMP$1404$1, (void*)vr$107, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1405$1, 0, 24ll );
 FBSTRING* vr$113 = fb_StrConcat( &TMP$1405$1, (void*)vr$110, -1ll, (void*)vr$6, -1ll );
 __builtin_memset( &TMP$1406$1, 0, 24ll );
 FBSTRING* vr$116 = fb_StrConcat( &TMP$1406$1, (void*)vr$113, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1407$1, 0, 24ll );
 FBSTRING* vr$119 = fb_StrConcat( &TMP$1407$1, (void*)vr$116, -1ll, (void*)vr$4, -1ll );
 __builtin_memset( &TMP$1408$1, 0, 24ll );
 FBSTRING* vr$122 = fb_StrConcat( &TMP$1408$1, (void*)vr$119, -1ll, (void*)", ", 3ll );
 __builtin_memset( &TMP$1409$1, 0, 24ll );
 FBSTRING* vr$125 = fb_StrConcat( &TMP$1409$1, (void*)vr$122, -1ll, (void*)vr$2, -1ll );
 __builtin_memset( &TMP$1410$1, 0, 24ll );
 FBSTRING* vr$128 = fb_StrConcat( &TMP$1410$1, (void*)vr$125, -1ll, (void*)")", 2ll );
 fb_StrInit( (void*)&fb$result$1, -1ll, (void*)vr$128, -1ll, 0 );
 goto label$1206;
 label$1206:;
 FBSTRING* vr$131 = fb_StrAllocTempResult( (FBSTRING*)&fb$result$1 );
 return vr$131;
}

void _ZN4MAT413SETPROJECTIONEdddd( struct $4MAT4* THIS$1, double FOV$1, double ASPECTRATIO$1, double NEAR$1, double FAR$1 )
{
 label$1207:;
 double A$1;
 float vr$4 = tanf( (float)(((FOV$1 * 0x1.921FB54442D18p+1) / 0x1.68p+7) * 0x1.p-1) );
 A$1 = 0x1.p+0 / (double)vr$4;
 double B$1;
 B$1 = A$1 / ASPECTRATIO$1;
 double C$1;
 C$1 = (FAR$1 + NEAR$1) / (NEAR$1 - FAR$1);
 double D$1;
 D$1 = ((FAR$1 * NEAR$1) * 0x1.p+1) / (NEAR$1 - FAR$1);
 *(double*)THIS$1 = B$1;
 *(double*)((uint8*)THIS$1 + 8ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 16ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 24ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 32ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 40ll) = B$1;
 *(double*)((uint8*)THIS$1 + 48ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 56ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 64ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 72ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 80ll) = C$1;
 *(double*)((uint8*)THIS$1 + 88ll) = -0x1.p+0;
 *(double*)((uint8*)THIS$1 + 96ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 104ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 112ll) = D$1;
 *(double*)((uint8*)THIS$1 + 120ll) = 0x0p+0;
 label$1208:;
}

void _ZN4MAT410SETORTHO2DEdddd( struct $4MAT4* THIS$1, double X$1, double Y$1, double W$1, double H$1 )
{
 label$1209:;
 _ZN4MAT48SETORTHOEdddddd( THIS$1, X$1, X$1 + W$1, Y$1 + H$1, Y$1, 0x1.p+0, -0x1.p+0 );
 label$1210:;
}

void _ZN4MAT410SETORTHO2DEdddddd( struct $4MAT4* THIS$1, double X$1, double Y$1, double W$1, double H$1, double NEAR$1, double FAR$1 )
{
 label$1211:;
 _ZN4MAT48SETORTHOEdddddd( THIS$1, X$1, X$1 + W$1, Y$1, Y$1 + H$1, NEAR$1, FAR$1 );
 label$1212:;
}

void _ZN4MAT48SETORTHOEdddddd( struct $4MAT4* THIS$1, double LEFT_$1, double RIGHT_$1, double BOTTOM$1, double TOP$1, double NEAR$1, double FAR$1 )
{
 label$1213:;
 double X_ORTH$1;
 X_ORTH$1 = 0x1.p+1 / (RIGHT_$1 - LEFT_$1);
 double Y_ORTH$1;
 Y_ORTH$1 = 0x1.p+1 / (TOP$1 - BOTTOM$1);
 double Z_ORTH$1;
 Z_ORTH$1 = -0x1.p+1 / (FAR$1 - NEAR$1);
 double TX$1;
 TX$1 = -(RIGHT_$1 + LEFT_$1) / (RIGHT_$1 - LEFT_$1);
 double TY$1;
 TY$1 = -(TOP$1 + BOTTOM$1) / (TOP$1 - BOTTOM$1);
 double TZ$1;
 TZ$1 = -(FAR$1 + NEAR$1) / (FAR$1 - NEAR$1);
 *(double*)THIS$1 = X_ORTH$1;
 *(double*)((uint8*)THIS$1 + 8ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 16ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 24ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 32ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 40ll) = Y_ORTH$1;
 *(double*)((uint8*)THIS$1 + 48ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 56ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 64ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 72ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 80ll) = Z_ORTH$1;
 *(double*)((uint8*)THIS$1 + 88ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 96ll) = TX$1;
 *(double*)((uint8*)THIS$1 + 104ll) = TY$1;
 *(double*)((uint8*)THIS$1 + 112ll) = TZ$1;
 *(double*)((uint8*)THIS$1 + 120ll) = 0x1.p+0;
 label$1214:;
}

struct $7VECTOR4* _ZmlR4MAT4R7VECTOR4( struct $7VECTOR4* tmp$1411$1, struct $4MAT4* L$1, struct $7VECTOR4* R$1 )
{
 label$1215:;
 _ZN7VECTOR4C1Edddd( tmp$1411$1, (((*(double*)L$1 * *(double*)R$1) + (*(double*)((uint8*)L$1 + 32ll) * *(double*)((uint8*)R$1 + 8ll))) + (*(double*)((uint8*)L$1 + 64ll) * *(double*)((uint8*)R$1 + 16ll))) + (*(double*)((uint8*)L$1 + 96ll) * *(double*)((uint8*)R$1 + 24ll)), (((*(double*)((uint8*)L$1 + 8ll) * *(double*)R$1) + (*(double*)((uint8*)L$1 + 40ll) * *(double*)((uint8*)R$1 + 8ll))) + (*(double*)((uint8*)L$1 + 72ll) * *(double*)((uint8*)R$1 + 16ll))) + (*(double*)((uint8*)L$1 + 104ll) * *(double*)((uint8*)R$1 + 24ll)), (((*(double*)((uint8*)L$1 + 16ll) * *(double*)R$1) + (*(double*)((uint8*)L$1 + 48ll) * *(double*)((uint8*)R$1 + 8ll))) + (*(double*)((uint8*)L$1 + 80ll) * *(double*)((uint8*)R$1 + 16ll))) + (*(double*)((uint8*)L$1 + 112ll) * *(double*)((uint8*)R$1 + 24ll)), (((*(double*)((uint8*)L$1 + 24ll) * *(double*)R$1) + (*(double*)((uint8*)L$1 + 56ll) * *(double*)((uint8*)R$1 + 8ll))) + (*(double*)((uint8*)L$1 + 88ll) * *(double*)((uint8*)R$1 + 16ll))) + (*(double*)((uint8*)L$1 + 120ll) * *(double*)((uint8*)R$1 + 24ll)) );
 goto label$1216;
 label$1216:;
 return tmp$1411$1;
}

struct $7VECTOR4* _ZmlR7VECTOR4R4MAT4( struct $7VECTOR4* tmp$1413$1, struct $7VECTOR4* R$1, struct $4MAT4* L$1 )
{
 label$1217:;
 _ZN7VECTOR4C1Edddd( tmp$1413$1, (((*(double*)L$1 * *(double*)R$1) + (*(double*)((uint8*)L$1 + 8ll) * *(double*)((uint8*)R$1 + 8ll))) + (*(double*)((uint8*)L$1 + 16ll) * *(double*)((uint8*)R$1 + 16ll))) + (*(double*)((uint8*)L$1 + 24ll) * *(double*)((uint8*)R$1 + 24ll)), (((*(double*)((uint8*)L$1 + 32ll) * *(double*)R$1) + (*(double*)((uint8*)L$1 + 40ll) * *(double*)((uint8*)R$1 + 8ll))) + (*(double*)((uint8*)L$1 + 48ll) * *(double*)((uint8*)R$1 + 16ll))) + (*(double*)((uint8*)L$1 + 56ll) * *(double*)((uint8*)R$1 + 24ll)), (((*(double*)((uint8*)L$1 + 64ll) * *(double*)R$1) + (*(double*)((uint8*)L$1 + 72ll) * *(double*)((uint8*)R$1 + 8ll))) + (*(double*)((uint8*)L$1 + 80ll) * *(double*)((uint8*)R$1 + 16ll))) + (*(double*)((uint8*)L$1 + 88ll) * *(double*)((uint8*)R$1 + 24ll)), (((*(double*)((uint8*)L$1 + 96ll) * *(double*)R$1) + (*(double*)((uint8*)L$1 + 104ll) * *(double*)((uint8*)R$1 + 8ll))) + (*(double*)((uint8*)L$1 + 112ll) * *(double*)((uint8*)R$1 + 16ll))) + (*(double*)((uint8*)L$1 + 120ll) * *(double*)((uint8*)R$1 + 24ll)) );
 goto label$1218;
 label$1218:;
 return tmp$1413$1;
}

struct $4MAT4 _ZmlR4MAT4S0_( struct $4MAT4* L$1, struct $4MAT4* R$1 )
{
 struct $4MAT4 fb$result$1;
 label$1219:;
 _ZN4MAT4C1Edddddddddddddddd( &fb$result$1, (((*(double*)L$1 * *(double*)R$1) + (*(double*)((uint8*)L$1 + 32ll) * *(double*)((uint8*)R$1 + 8ll))) + (*(double*)((uint8*)L$1 + 64ll) * *(double*)((uint8*)R$1 + 16ll))) + (*(double*)((uint8*)L$1 + 96ll) * *(double*)((uint8*)R$1 + 24ll)), (((*(double*)((uint8*)L$1 + 8ll) * *(double*)R$1) + (*(double*)((uint8*)L$1 + 40ll) * *(double*)((uint8*)R$1 + 8ll))) + (*(double*)((uint8*)L$1 + 72ll) * *(double*)((uint8*)R$1 + 16ll))) + (*(double*)((uint8*)L$1 + 104ll) * *(double*)((uint8*)R$1 + 24ll)), (((*(double*)((uint8*)L$1 + 16ll) * *(double*)R$1) + (*(double*)((uint8*)L$1 + 48ll) * *(double*)((uint8*)R$1 + 8ll))) + (*(double*)((uint8*)L$1 + 80ll) * *(double*)((uint8*)R$1 + 16ll))) + (*(double*)((uint8*)L$1 + 112ll) * *(double*)((uint8*)R$1 + 24ll)), (((*(double*)((uint8*)L$1 + 24ll) * *(double*)R$1) + (*(double*)((uint8*)L$1 + 56ll) * *(double*)((uint8*)R$1 + 8ll))) + (*(double*)((uint8*)L$1 + 88ll) * *(double*)((uint8*)R$1 + 16ll))) + (*(double*)((uint8*)L$1 + 120ll) * *(double*)((uint8*)R$1 + 24ll)), (((*(double*)L$1 * *(double*)((uint8*)R$1 + 32ll)) + (*(double*)((uint8*)L$1 + 32ll) * *(double*)((uint8*)R$1 + 40ll))) + (*(double*)((uint8*)L$1 + 64ll) * *(double*)((uint8*)R$1 + 48ll))) + (*(double*)((uint8*)L$1 + 96ll) * *(double*)((uint8*)R$1 + 56ll)), (((*(double*)((uint8*)L$1 + 8ll) * *(double*)((uint8*)R$1 + 32ll)) + (*(double*)((uint8*)L$1 + 40ll) * *(double*)((uint8*)R$1 + 40ll))) + (*(double*)((uint8*)L$1 + 72ll) * *(double*)((uint8*)R$1 + 48ll))) + (*(double*)((uint8*)L$1 + 104ll) * *(double*)((uint8*)R$1 + 56ll)), (((*(double*)((uint8*)L$1 + 16ll) * *(double*)((uint8*)R$1 + 32ll)) + (*(double*)((uint8*)L$1 + 48ll) * *(double*)((uint8*)R$1 + 40ll))) + (*(double*)((uint8*)L$1 + 80ll) * *(double*)((uint8*)R$1 + 48ll))) + (*(double*)((uint8*)L$1 + 112ll) * *(double*)((uint8*)R$1 + 56ll)), (((*(double*)((uint8*)L$1 + 24ll) * *(double*)((uint8*)R$1 + 32ll)) + (*(double*)((uint8*)L$1 + 56ll) * *(double*)((uint8*)R$1 + 40ll))) + (*(double*)((uint8*)L$1 + 88ll) * *(double*)((uint8*)R$1 + 48ll))) + (*(double*)((uint8*)L$1 + 120ll) * *(double*)((uint8*)R$1 + 56ll)), (((*(double*)L$1 * *(double*)((uint8*)R$1 + 64ll)) + (*(double*)((uint8*)L$1 + 32ll) * *(double*)((uint8*)R$1 + 72ll))) + (*(double*)((uint8*)L$1 + 64ll) * *(double*)((uint8*)R$1 + 80ll))) + (*(double*)((uint8*)L$1 + 96ll) * *(double*)((uint8*)R$1 + 88ll)), (((*(double*)((uint8*)L$1 + 8ll) * *(double*)((uint8*)R$1 + 64ll)) + (*(double*)((uint8*)L$1 + 40ll) * *(double*)((uint8*)R$1 + 72ll))) + (*(double*)((uint8*)L$1 + 72ll) * *(double*)((uint8*)R$1 + 80ll))) + (*(double*)((uint8*)L$1 + 104ll) * *(double*)((uint8*)R$1 + 88ll)), (((*(double*)((uint8*)L$1 + 16ll) * *(double*)((uint8*)R$1 + 64ll)) + (*(double*)((uint8*)L$1 + 48ll) * *(double*)((uint8*)R$1 + 72ll))) + (*(double*)((uint8*)L$1 + 80ll) * *(double*)((uint8*)R$1 + 80ll))) + (*(double*)((uint8*)L$1 + 112ll) * *(double*)((uint8*)R$1 + 88ll)), (((*(double*)((uint8*)L$1 + 24ll) * *(double*)((uint8*)R$1 + 64ll)) + (*(double*)((uint8*)L$1 + 56ll) * *(double*)((uint8*)R$1 + 72ll))) + (*(double*)((uint8*)L$1 + 88ll) * *(double*)((uint8*)R$1 + 80ll))) + (*(double*)((uint8*)L$1 + 120ll) * *(double*)((uint8*)R$1 + 88ll)), (((*(double*)L$1 * *(double*)((uint8*)R$1 + 96ll)) + (*(double*)((uint8*)L$1 + 32ll) * *(double*)((uint8*)R$1 + 104ll))) + (*(double*)((uint8*)L$1 + 64ll) * *(double*)((uint8*)R$1 + 112ll))) + (*(double*)((uint8*)L$1 + 96ll) * *(double*)((uint8*)R$1 + 120ll)), (((*(double*)((uint8*)L$1 + 8ll) * *(double*)((uint8*)R$1 + 96ll)) + (*(double*)((uint8*)L$1 + 40ll) * *(double*)((uint8*)R$1 + 104ll))) + (*(double*)((uint8*)L$1 + 72ll) * *(double*)((uint8*)R$1 + 112ll))) + (*(double*)((uint8*)L$1 + 104ll) * *(double*)((uint8*)R$1 + 120ll)), (((*(double*)((uint8*)L$1 + 16ll) * *(double*)((uint8*)R$1 + 96ll)) + (*(double*)((uint8*)L$1 + 48ll) * *(double*)((uint8*)R$1 + 104ll))) + (*(double*)((uint8*)L$1 + 80ll) * *(double*)((uint8*)R$1 + 112ll))) + (*(double*)((uint8*)L$1 + 112ll) * *(double*)((uint8*)R$1 + 120ll)), (((*(double*)((uint8*)L$1 + 24ll) * *(double*)((uint8*)R$1 + 96ll)) + (*(double*)((uint8*)L$1 + 56ll) * *(double*)((uint8*)R$1 + 104ll))) + (*(double*)((uint8*)L$1 + 88ll) * *(double*)((uint8*)R$1 + 112ll))) + (*(double*)((uint8*)L$1 + 120ll) * *(double*)((uint8*)R$1 + 120ll)) );
 goto label$1220;
 label$1220:;
 return fb$result$1;
}

struct $4MAT2 _Z14MATRIXCOMPMULTR4MAT2S0_( struct $4MAT2* X$1, struct $4MAT2* Y$1 )
{
 struct $4MAT2 fb$result$1;
 label$1221:;
 struct $4MAT2 Z$1;
 _ZN4MAT2C1Ed( &Z$1, 0x1.p+0 );
 double* PZ$1;
 PZ$1 = (double*)&Z$1;
 double* PX$1;
 PX$1 = (double*)X$1;
 double* PY$1;
 PY$1 = (double*)Y$1;
 int64 I2$1;
 __builtin_memset( &I2$1, 0, 8ll );
 {
  int64 I$2;
  I$2 = 0ll;
  label$1226:;
  {
   int64 IJ$3;
   IJ$3 = I2$1;
   {
    int64 J$4;
    J$4 = 0ll;
    label$1230:;
    {
     *(double*)((uint8*)PZ$1 + (IJ$3 << (3ll & 63ll))) = *(double*)((uint8*)PX$1 + (IJ$3 << (3ll & 63ll))) * *(double*)((uint8*)PY$1 + (IJ$3 << (3ll & 63ll)));
     IJ$3 = IJ$3 + 1ll;
    }
    label$1228:;
    J$4 = J$4 + 1ll;
    label$1227:;
    if( J$4 <= 1ll ) goto label$1230;
    label$1229:;
   }
   I2$1 = I2$1 + 2ll;
  }
  label$1224:;
  I$2 = I$2 + 1ll;
  label$1223:;
  if( I$2 <= 1ll ) goto label$1226;
  label$1225:;
 }
 __builtin_memcpy( &fb$result$1, &Z$1, 32 );
 goto label$1222;
 label$1222:;
 return fb$result$1;
}

struct $4MAT3 _Z14MATRIXCOMPMULTR4MAT3S0_( struct $4MAT3* X$1, struct $4MAT3* Y$1 )
{
 struct $4MAT3 fb$result$1;
 label$1231:;
 struct $4MAT3 Z$1;
 _ZN4MAT3C1Ed( &Z$1, 0x1.p+0 );
 double* PZ$1;
 PZ$1 = (double*)&Z$1;
 double* PX$1;
 PX$1 = (double*)X$1;
 double* PY$1;
 PY$1 = (double*)Y$1;
 int64 I3$1;
 __builtin_memset( &I3$1, 0, 8ll );
 {
  int64 I$2;
  I$2 = 0ll;
  label$1236:;
  {
   int64 IJ$3;
   IJ$3 = I3$1;
   {
    int64 J$4;
    J$4 = 0ll;
    label$1240:;
    {
     *(double*)((uint8*)PZ$1 + (IJ$3 << (3ll & 63ll))) = *(double*)((uint8*)PX$1 + (IJ$3 << (3ll & 63ll))) * *(double*)((uint8*)PY$1 + (IJ$3 << (3ll & 63ll)));
     IJ$3 = IJ$3 + 1ll;
    }
    label$1238:;
    J$4 = J$4 + 1ll;
    label$1237:;
    if( J$4 <= 1ll ) goto label$1240;
    label$1239:;
   }
   I3$1 = I3$1 + 3ll;
  }
  label$1234:;
  I$2 = I$2 + 1ll;
  label$1233:;
  if( I$2 <= 1ll ) goto label$1236;
  label$1235:;
 }
 __builtin_memcpy( &fb$result$1, &Z$1, 72 );
 goto label$1232;
 label$1232:;
 return fb$result$1;
}

struct $4MAT4 _Z14MATRIXCOMPMULTR4MAT4S0_( struct $4MAT4* X$1, struct $4MAT4* Y$1 )
{
 struct $4MAT4 fb$result$1;
 label$1241:;
 struct $4MAT4 Z$1;
 _ZN4MAT4C1Ed( &Z$1, 0x1.p+0 );
 double* PZ$1;
 PZ$1 = (double*)&Z$1;
 double* PX$1;
 PX$1 = (double*)X$1;
 double* PY$1;
 PY$1 = (double*)Y$1;
 int64 I4$1;
 __builtin_memset( &I4$1, 0, 8ll );
 {
  int64 I$2;
  I$2 = 0ll;
  label$1246:;
  {
   int64 IJ$3;
   IJ$3 = I4$1;
   {
    int64 J$4;
    J$4 = 0ll;
    label$1250:;
    {
     *(double*)((uint8*)PZ$1 + (IJ$3 << (3ll & 63ll))) = *(double*)((uint8*)PX$1 + (IJ$3 << (3ll & 63ll))) * *(double*)((uint8*)PY$1 + (IJ$3 << (3ll & 63ll)));
     IJ$3 = IJ$3 + 1ll;
    }
    label$1248:;
    J$4 = J$4 + 1ll;
    label$1247:;
    if( J$4 <= 1ll ) goto label$1250;
    label$1249:;
   }
   I4$1 = I4$1 + 4ll;
  }
  label$1244:;
  I$2 = I$2 + 1ll;
  label$1243:;
  if( I$2 <= 1ll ) goto label$1246;
  label$1245:;
 }
 __builtin_memcpy( &fb$result$1, &Z$1, 128 );
 goto label$1242;
 label$1242:;
 return fb$result$1;
}

void _ZN6VECTORpLERS_( struct $6VECTOR* THIS$1, struct $6VECTOR* R$1 )
{
 label$1251:;
 *(double*)THIS$1 = *(double*)THIS$1 + *(double*)R$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) + *(double*)((uint8*)R$1 + 8ll);
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)THIS$1 + 16ll) + *(double*)((uint8*)R$1 + 16ll);
 label$1252:;
}

void _ZN6VECTORmIERS_( struct $6VECTOR* THIS$1, struct $6VECTOR* R$1 )
{
 label$1253:;
 *(double*)THIS$1 = *(double*)THIS$1 - *(double*)R$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) - *(double*)((uint8*)R$1 + 8ll);
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)THIS$1 + 16ll) - *(double*)((uint8*)R$1 + 16ll);
 label$1254:;
}

void _ZN6VECTORmLEd( struct $6VECTOR* THIS$1, double S$1 )
{
 label$1255:;
 *(double*)THIS$1 = *(double*)THIS$1 * S$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) * S$1;
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)THIS$1 + 16ll) * S$1;
 label$1256:;
}

struct $6VECTOR* _ZmiR6VECTORS0_( struct $6VECTOR* tmp$1422$1, struct $6VECTOR* L$1, struct $6VECTOR* R$1 )
{
 struct $6VECTOR TMP$1423$1;
 label$1257:;
 _ZN6VECTORC1Ev( tmp$1422$1 );
 _ZN6VECTORC1Edddd( &TMP$1423$1, *(double*)L$1 - *(double*)R$1, *(double*)((uint8*)L$1 + 8ll) - *(double*)((uint8*)R$1 + 8ll), *(double*)((uint8*)L$1 + 16ll) - *(double*)((uint8*)R$1 + 16ll), 0x1.p+0 );
 __builtin_memcpy( tmp$1422$1, &TMP$1423$1, 32 );
 label$1258:;
 return tmp$1422$1;
}

struct $6VECTOR* _ZplR6VECTORS0_( struct $6VECTOR* tmp$1424$1, struct $6VECTOR* L$1, struct $6VECTOR* R$1 )
{
 struct $6VECTOR TMP$1425$1;
 label$1259:;
 _ZN6VECTORC1Ev( tmp$1424$1 );
 _ZN6VECTORC1Edddd( &TMP$1425$1, *(double*)L$1 + *(double*)R$1, *(double*)((uint8*)L$1 + 8ll) + *(double*)((uint8*)R$1 + 8ll), *(double*)((uint8*)L$1 + 16ll) + *(double*)((uint8*)R$1 + 16ll), 0x1.p+0 );
 __builtin_memcpy( tmp$1424$1, &TMP$1425$1, 32 );
 label$1260:;
 return tmp$1424$1;
}

struct $6VECTOR* _ZmlR6VECTORd( struct $6VECTOR* tmp$1426$1, struct $6VECTOR* L$1, double R$1 )
{
 struct $6VECTOR TMP$1427$1;
 label$1261:;
 _ZN6VECTORC1Ev( tmp$1426$1 );
 _ZN6VECTORC1Edddd( &TMP$1427$1, *(double*)L$1 * R$1, *(double*)((uint8*)L$1 + 8ll) * R$1, *(double*)((uint8*)L$1 + 16ll) * R$1, 0x1.p+0 );
 __builtin_memcpy( tmp$1426$1, &TMP$1427$1, 32 );
 label$1262:;
 return tmp$1426$1;
}

struct $6VECTOR* _ZmldR6VECTOR( struct $6VECTOR* tmp$1428$1, double L$1, struct $6VECTOR* R$1 )
{
 struct $6VECTOR TMP$1429$1;
 label$1263:;
 _ZN6VECTORC1Ev( tmp$1428$1 );
 _ZN6VECTORC1Edddd( &TMP$1429$1, L$1 * *(double*)R$1, L$1 * *(double*)((uint8*)R$1 + 8ll), L$1 * *(double*)((uint8*)R$1 + 16ll), 0x1.p+0 );
 __builtin_memcpy( tmp$1428$1, &TMP$1429$1, 32 );
 label$1264:;
 return tmp$1428$1;
}

struct $6VECTOR* _ZdvR6VECTORd( struct $6VECTOR* tmp$1430$1, struct $6VECTOR* L$1, double R$1 )
{
 struct $6VECTOR TMP$1431$1;
 label$1265:;
 _ZN6VECTORC1Ev( tmp$1430$1 );
 _ZN6VECTORC1Edddd( &TMP$1431$1, *(double*)L$1 / R$1, *(double*)((uint8*)L$1 + 8ll) / R$1, *(double*)((uint8*)L$1 + 16ll) / R$1, 0x1.p+0 );
 __builtin_memcpy( tmp$1430$1, &TMP$1431$1, 32 );
 label$1266:;
 return tmp$1430$1;
}

struct $6VECTOR* _ZdvdR6VECTOR( struct $6VECTOR* tmp$1432$1, double L$1, struct $6VECTOR* R$1 )
{
 struct $6VECTOR TMP$1433$1;
 label$1267:;
 _ZN6VECTORC1Ev( tmp$1432$1 );
 _ZN6VECTORC1Edddd( &TMP$1433$1, *(double*)R$1 / L$1, *(double*)((uint8*)R$1 + 8ll) / L$1, *(double*)((uint8*)R$1 + 16ll) / L$1, 0x1.p+0 );
 __builtin_memcpy( tmp$1432$1, &TMP$1433$1, 32 );
 label$1268:;
 return tmp$1432$1;
}

double _ZmlR6VECTORS0_( struct $6VECTOR* L$1, struct $6VECTOR* R$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1269:;
 fb$result$1 = ((*(double*)L$1 * *(double*)R$1) + (*(double*)((uint8*)L$1 + 8ll) * *(double*)((uint8*)R$1 + 8ll))) + (*(double*)((uint8*)L$1 + 16ll) * *(double*)((uint8*)R$1 + 16ll));
 goto label$1270;
 label$1270:;
 return fb$result$1;
}

struct $6VECTOR* _Zv24idivR6VECTORS0_( struct $6VECTOR* tmp$1434$1, struct $6VECTOR* L$1, struct $6VECTOR* R$1 )
{
 struct $6VECTOR TMP$1435$1;
 label$1271:;
 _ZN6VECTORC1Ev( tmp$1434$1 );
 _ZN6VECTORC1Edddd( &TMP$1435$1, (*(double*)((uint8*)L$1 + 8ll) * *(double*)((uint8*)R$1 + 16ll)) - (*(double*)((uint8*)L$1 + 16ll) * *(double*)((uint8*)R$1 + 8ll)), (*(double*)((uint8*)L$1 + 16ll) * *(double*)R$1) - (*(double*)L$1 * *(double*)((uint8*)R$1 + 16ll)), (*(double*)L$1 * *(double*)((uint8*)R$1 + 8ll)) - (*(double*)((uint8*)L$1 + 8ll) * *(double*)R$1), 0x1.p+0 );
 __builtin_memcpy( tmp$1434$1, &TMP$1435$1, 32 );
 label$1272:;
 return tmp$1434$1;
}

void _ZN6VECTORC1Ev( struct $6VECTOR* THIS$1 )
{
 __builtin_memset( (double*)THIS$1, 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 8ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 16ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 24ll), 0, 8ll );
 label$1273:;
 label$1274:;
}

void _ZN6VECTORC1ERS_( struct $6VECTOR* THIS$1, struct $6VECTOR* INV$1 )
{
 label$1275:;
 __builtin_memset( (double*)THIS$1, 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 8ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 16ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 24ll), 0, 8ll );
 *(double*)THIS$1 = *(double*)INV$1;
 *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)INV$1 + 8ll);
 *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)INV$1 + 16ll);
 *(double*)((uint8*)THIS$1 + 24ll) = *(double*)((uint8*)INV$1 + 24ll);
 label$1276:;
}

void _ZN6VECTORC1Edddd( struct $6VECTOR* THIS$1, double INX$1, double INY$1, double INZ$1, double INW$1 )
{
 label$1277:;
 __builtin_memset( (double*)THIS$1, 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 8ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 16ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 24ll), 0, 8ll );
 *(double*)THIS$1 = INX$1;
 *(double*)((uint8*)THIS$1 + 8ll) = INY$1;
 *(double*)((uint8*)THIS$1 + 16ll) = INZ$1;
 *(double*)((uint8*)THIS$1 + 24ll) = INW$1;
 label$1278:;
}

void _ZN6VECTORC1Ej( struct $6VECTOR* THIS$1, uint32 COL$1 )
{
 label$1279:;
 uint32 V$1;
 __builtin_memset( (double*)THIS$1, 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 8ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 16ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 24ll), 0, 8ll );
 V$1 = (uint32)((int64)COL$1 & 255ll);
 COL$1 = (uint32)((int64)COL$1 >> (8ll & 63ll));
 *(double*)((uint8*)THIS$1 + 16ll) = (double)(int64)V$1 * 0x1.010101010101p-8;
 V$1 = (uint32)((int64)COL$1 & 255ll);
 COL$1 = (uint32)((int64)COL$1 >> (8ll & 63ll));
 *(double*)((uint8*)THIS$1 + 8ll) = (double)(int64)V$1 * 0x1.010101010101p-8;
 V$1 = (uint32)((int64)COL$1 & 255ll);
 COL$1 = (uint32)((int64)COL$1 >> (8ll & 63ll));
 *(double*)THIS$1 = (double)(int64)V$1 * 0x1.010101010101p-8;
 V$1 = (uint32)((int64)COL$1 & 255ll);
 *(double*)((uint8*)THIS$1 + 24ll) = (double)(int64)V$1 * 0x1.010101010101p-8;
 label$1280:;
}

double _ZN6VECTOR10LENGTHSQRDEv( struct $6VECTOR* THIS$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1281:;
 fb$result$1 = ((*(double*)THIS$1 * *(double*)THIS$1) + (*(double*)((uint8*)THIS$1 + 8ll) * *(double*)((uint8*)THIS$1 + 8ll))) + (*(double*)((uint8*)THIS$1 + 16ll) * *(double*)((uint8*)THIS$1 + 16ll));
 goto label$1282;
 label$1282:;
 return fb$result$1;
}

double _ZN6VECTOR6LENGTHEv( struct $6VECTOR* THIS$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1283:;
 double L$1;
 L$1 = ((*(double*)THIS$1 * *(double*)THIS$1) + (*(double*)((uint8*)THIS$1 + 8ll) * *(double*)((uint8*)THIS$1 + 8ll))) + (*(double*)((uint8*)THIS$1 + 16ll) * *(double*)((uint8*)THIS$1 + 16ll));
 if( L$1 == 0x0p+0 ) goto label$1286;
 {
  L$1 = __builtin_sqrt( L$1 );
  label$1286:;
 }
 fb$result$1 = L$1;
 goto label$1284;
 label$1284:;
 return fb$result$1;
}

struct $6VECTOR* _ZN6VECTOR10NORMALIZEDEv( struct $6VECTOR* tmp$1436$1, struct $6VECTOR* THIS$1 )
{
 struct $6VECTOR TMP$1437$1;
 label$1287:;
 _ZN6VECTORC1Ev( tmp$1436$1 );
 double L$1;
 L$1 = ((*(double*)THIS$1 * *(double*)THIS$1) + (*(double*)((uint8*)THIS$1 + 8ll) * *(double*)((uint8*)THIS$1 + 8ll))) + (*(double*)((uint8*)THIS$1 + 16ll) * *(double*)((uint8*)THIS$1 + 16ll));
 if( L$1 == 0x0p+0 ) goto label$1290;
 {
  L$1 = 0x1.p+0 / __builtin_sqrt( L$1 );
  label$1290:;
 }
 _ZN6VECTORC1Edddd( &TMP$1437$1, *(double*)THIS$1 * L$1, *(double*)((uint8*)THIS$1 + 8ll) * L$1, *(double*)((uint8*)THIS$1 + 16ll) * L$1, 0x1.p+0 );
 __builtin_memcpy( tmp$1436$1, &TMP$1437$1, 32 );
 label$1288:;
 return tmp$1436$1;
}

void _ZN6VECTOR9NORMALIZEEv( struct $6VECTOR* THIS$1 )
{
 label$1291:;
 double L$1;
 L$1 = ((*(double*)THIS$1 * *(double*)THIS$1) + (*(double*)((uint8*)THIS$1 + 8ll) * *(double*)((uint8*)THIS$1 + 8ll))) + (*(double*)((uint8*)THIS$1 + 16ll) * *(double*)((uint8*)THIS$1 + 16ll));
 if( L$1 == 0x0p+0 ) goto label$1294;
 {
  L$1 = 0x1.p+0 / __builtin_sqrt( L$1 );
  *(double*)THIS$1 = *(double*)THIS$1 * L$1;
  *(double*)((uint8*)THIS$1 + 8ll) = *(double*)((uint8*)THIS$1 + 8ll) * L$1;
  *(double*)((uint8*)THIS$1 + 16ll) = *(double*)((uint8*)THIS$1 + 16ll) * L$1;
 }
 label$1294:;
 label$1293:;
 label$1292:;
}

uint32 _ZN6VECTORcvjEv( struct $6VECTOR* THIS$1 )
{
 int64 TMP$1438$1;
 int64 TMP$1439$1;
 int64 TMP$1440$1;
 int64 TMP$1441$1;
 int64 TMP$1442$1;
 int64 TMP$1443$1;
 int64 TMP$1444$1;
 int64 TMP$1445$1;
 uint32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$1295:;
 uint32 UR$1;
 if( *(double*)THIS$1 >= 0x0p+0 ) goto label$1298;
 TMP$1439$1 = 0ll;
 goto label$1305;
 label$1298:;
 if( *(double*)THIS$1 <= 0x1.p+0 ) goto label$1297;
 TMP$1438$1 = 255ll;
 goto label$1306;
 label$1297:;
 TMP$1438$1 = (int64)(uint32)((int64)__builtin_nearbyint( *(double*)THIS$1 * 0x1.FEp+7 ));
 label$1306:;
 TMP$1439$1 = TMP$1438$1;
 label$1305:;
 UR$1 = (uint32)TMP$1439$1;
 uint32 UG$1;
 if( *(double*)((uint8*)THIS$1 + 8ll) >= 0x0p+0 ) goto label$1300;
 TMP$1441$1 = 0ll;
 goto label$1307;
 label$1300:;
 if( *(double*)((uint8*)THIS$1 + 8ll) <= 0x1.p+0 ) goto label$1299;
 TMP$1440$1 = 255ll;
 goto label$1308;
 label$1299:;
 TMP$1440$1 = (int64)(uint32)((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 8ll) * 0x1.FEp+7 ));
 label$1308:;
 TMP$1441$1 = TMP$1440$1;
 label$1307:;
 UG$1 = (uint32)TMP$1441$1;
 uint32 UB$1;
 if( *(double*)((uint8*)THIS$1 + 16ll) >= 0x0p+0 ) goto label$1302;
 TMP$1443$1 = 0ll;
 goto label$1309;
 label$1302:;
 if( *(double*)((uint8*)THIS$1 + 16ll) <= 0x1.p+0 ) goto label$1301;
 TMP$1442$1 = 255ll;
 goto label$1310;
 label$1301:;
 TMP$1442$1 = (int64)(uint32)((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 16ll) * 0x1.FEp+7 ));
 label$1310:;
 TMP$1443$1 = TMP$1442$1;
 label$1309:;
 UB$1 = (uint32)TMP$1443$1;
 uint32 UA$1;
 if( *(double*)((uint8*)THIS$1 + 24ll) >= 0x0p+0 ) goto label$1304;
 TMP$1445$1 = 0ll;
 goto label$1311;
 label$1304:;
 if( *(double*)((uint8*)THIS$1 + 24ll) <= 0x1.p+0 ) goto label$1303;
 TMP$1444$1 = 255ll;
 goto label$1312;
 label$1303:;
 TMP$1444$1 = (int64)(uint32)((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 24ll) * 0x1.FEp+7 ));
 label$1312:;
 TMP$1445$1 = TMP$1444$1;
 label$1311:;
 UA$1 = (uint32)TMP$1445$1;
 fb$result$1 = (uint32)(((((int64)(uint32)(uint8)UR$1 << (16ll & 63ll)) | ((int64)(uint32)(uint8)UG$1 << (8ll & 63ll))) | (int64)(uint32)(uint8)UB$1) | ((int64)(uint32)(uint8)UA$1 << (24ll & 63ll)));
 label$1296:;
 return fb$result$1;
}

struct $6VECTOR* _Z3MIXR6VECTORS0_d( struct $6VECTOR* tmp$1446$1, struct $6VECTOR* L$1, struct $6VECTOR* R$1, double A$1 )
{
 struct $6VECTOR TMP$1447$1;
 label$1313:;
 _ZN6VECTORC1Ev( tmp$1446$1 );
 double V$1;
 V$1 = 0x1.p+0 - A$1;
 _ZN6VECTORC1Edddd( &TMP$1447$1, (*(double*)L$1 * V$1) + (*(double*)R$1 * A$1), (*(double*)((uint8*)L$1 + 8ll) * V$1) + (*(double*)((uint8*)R$1 + 8ll) * A$1), (*(double*)((uint8*)L$1 + 16ll) * V$1) + (*(double*)((uint8*)R$1 + 16ll) * A$1), 0x1.p+0 );
 __builtin_memcpy( tmp$1446$1, &TMP$1447$1, 32 );
 label$1314:;
 return tmp$1446$1;
}

struct $6VECTOR* _Z7REFLECTR6VECTORS0_( struct $6VECTOR* tmp$1448$1, struct $6VECTOR* I$1, struct $6VECTOR* N$1 )
{
 struct $6VECTOR TMP$1449$1;
 struct $6VECTOR TMP$1450$1;
 label$1315:;
 double vr$0 = _ZmlR6VECTORS0_( N$1, I$1 );
 struct $6VECTOR* vr$3 = _ZmldR6VECTOR( &TMP$1449$1, vr$0 * 0x1.p+1, N$1 );
 struct $6VECTOR* vr$5 = _ZmiR6VECTORS0_( &TMP$1450$1, I$1, vr$3 );
 _ZN6VECTORC1ERS_( tmp$1448$1, vr$5 );
 goto label$1316;
 label$1316:;
 return tmp$1448$1;
}

struct $6VECTOR* _Z7REFRACTR6VECTORS0_d( struct $6VECTOR* tmp$1451$1, struct $6VECTOR* I$1, struct $6VECTOR* N$1, double ETA$1 )
{
 label$1317:;
 struct $6VECTOR R$1;
 _ZN6VECTORC1Ev( &R$1 );
 double DOTNI$1;
 double vr$1 = _ZmlR6VECTORS0_( N$1, I$1 );
 DOTNI$1 = vr$1;
 double K$1;
 K$1 = -((ETA$1 * ETA$1) * (-(DOTNI$1 * DOTNI$1) + 0x1.p+0)) + 0x1.p+0;
 if( K$1 >= 0x0p+0 ) goto label$1320;
 {
  _ZN6VECTORC1ERS_( tmp$1451$1, &R$1 );
  goto label$1318;
 }
 goto label$1319;
 label$1320:;
 if( K$1 != 0x0p+0 ) goto label$1321;
 {
  struct $6VECTOR TMP$1452$2;
  struct $6VECTOR TMP$1453$2;
  struct $6VECTOR TMP$1454$2;
  struct $6VECTOR* vr$13 = _ZmldR6VECTOR( &TMP$1453$2, ETA$1 * DOTNI$1, N$1 );
  struct $6VECTOR* vr$15 = _ZmldR6VECTOR( &TMP$1452$2, ETA$1, I$1 );
  _ZmiR6VECTORS0_( &TMP$1454$2, vr$15, vr$13 );
  __builtin_memcpy( &R$1, &TMP$1454$2, 32 );
 }
 goto label$1319;
 label$1321:;
 {
  struct $6VECTOR TMP$1455$2;
  struct $6VECTOR TMP$1456$2;
  struct $6VECTOR TMP$1457$2;
  K$1 = __builtin_sqrt( K$1 );
  struct $6VECTOR* vr$23 = _ZmldR6VECTOR( &TMP$1456$2, (ETA$1 * DOTNI$1) + K$1, N$1 );
  struct $6VECTOR* vr$25 = _ZmldR6VECTOR( &TMP$1455$2, ETA$1, I$1 );
  _ZmiR6VECTORS0_( &TMP$1457$2, vr$25, vr$23 );
  __builtin_memcpy( &R$1, &TMP$1457$2, 32 );
 }
 label$1319:;
 _ZN6VECTORC1ERS_( tmp$1451$1, &R$1 );
 goto label$1318;
 label$1318:;
 return tmp$1451$1;
}

void LATLONTOXYZ( double LAT$1, double LON$1, double* X$1, double* Y$1, double* Z$1 )
{
 label$1358:;
 double R$1;
 R$1 = __builtin_cos( (LAT$1 * 0x1.1DF46A2529D39p-6) );
 *X$1 = R$1 * __builtin_cos( (LON$1 * 0x1.1DF46A2529D39p-6) );
 *Y$1 = __builtin_sin( (LAT$1 * 0x1.1DF46A2529D39p-6) );
 *Z$1 = R$1 * __builtin_sin( (LON$1 * 0x1.1DF46A2529D39p-6) );
 label$1359:;
}

void _ZN9RAYTRACERC1Ev( struct $9RAYTRACER* THIS$1 )
{
 int64 TMP$1458$1;
 int64 TMP$1459$1;
 int64 TMP$1460$1;
 int64 TMP$1461$1;
 label$1364:;
 int64 W$1;
 __builtin_memset( &W$1, 0, 8ll );
 int64 H$1;
 __builtin_memset( &H$1, 0, 8ll );
 __builtin_memset( (int64*)THIS$1, 0, 8ll );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 8ll), 0, 8ll );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 16ll), 0, 8ll );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 24ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 32ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 40ll), 0, 8ll );
 _ZN6VECTORC1Ev( (struct $6VECTOR*)((uint8*)THIS$1 + 48ll) );
 __builtin_memset( (double*)((uint8*)THIS$1 + 80ll), 0, 8ll );
 _ZN6VECTORC1Ev( (struct $6VECTOR*)((uint8*)THIS$1 + 88ll) );
 __builtin_memset( (double*)((uint8*)THIS$1 + 120ll), 0, 8ll );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 128ll), 0, 8ll );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 136ll), 0, 8ll );
 _ZN6VECTORC1Ev( (struct $6VECTOR*)((uint8*)THIS$1 + 144ll) );
 _ZN6VECTORC1Ev( (struct $6VECTOR*)((uint8*)THIS$1 + 176ll) );
 _ZN6VECTORC1Ev( (struct $6VECTOR*)((uint8*)THIS$1 + 208ll) );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 240ll), 0, 8ll );
 __builtin_memset( (struct $8MATERIAL***)((uint8*)THIS$1 + 248ll), 0, 8ll );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 256ll), 0, 8ll );
 __builtin_memset( (struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll), 0, 8ll );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 272ll), 0, 8ll );
 __builtin_memset( (struct $5LIGHT***)((uint8*)THIS$1 + 280ll), 0, 8ll );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 288ll), 0, 8ll );
 __builtin_memset( (struct $5MAP2D***)((uint8*)THIS$1 + 296ll), 0, 8ll );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 304ll), 0, 8ll );
 __builtin_memset( (struct $7AAPIXEL***)((uint8*)THIS$1 + 312ll), 0, 8ll );
 FBSTRING* vr$52 = fb_StrAllocTempDescZEx( (uint8*)"", 0ll );
 TMP$1461$1 = 0ll;
 TMP$1460$1 = 0ll;
 TMP$1459$1 = 0ll;
 TMP$1458$1 = 0ll;
 fb_GfxScreenInfo64( (int64*)&W$1, (int64*)&H$1, &TMP$1458$1, &TMP$1459$1, &TMP$1460$1, &TMP$1461$1, vr$52 );
 _ZN9RAYTRACER4INITElll( THIS$1, ((int64)__builtin_nearbyint( (double)W$1 * 0x1.999999999999Ap-1 )), ((int64)__builtin_nearbyint( (double)H$1 * 0x1.999999999999Ap-1 )), 5ll );
 label$1365:;
}

void _ZN9RAYTRACERC1Elll( struct $9RAYTRACER* THIS$1, int64 W$1, int64 H$1, int64 MD$1 )
{
 label$1366:;
 __builtin_memset( (int64*)THIS$1, 0, 8ll );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 8ll), 0, 8ll );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 16ll), 0, 8ll );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 24ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 32ll), 0, 8ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 40ll), 0, 8ll );
 _ZN6VECTORC1Ev( (struct $6VECTOR*)((uint8*)THIS$1 + 48ll) );
 __builtin_memset( (double*)((uint8*)THIS$1 + 80ll), 0, 8ll );
 _ZN6VECTORC1Ev( (struct $6VECTOR*)((uint8*)THIS$1 + 88ll) );
 __builtin_memset( (double*)((uint8*)THIS$1 + 120ll), 0, 8ll );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 128ll), 0, 8ll );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 136ll), 0, 8ll );
 _ZN6VECTORC1Ev( (struct $6VECTOR*)((uint8*)THIS$1 + 144ll) );
 _ZN6VECTORC1Ev( (struct $6VECTOR*)((uint8*)THIS$1 + 176ll) );
 _ZN6VECTORC1Ev( (struct $6VECTOR*)((uint8*)THIS$1 + 208ll) );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 240ll), 0, 8ll );
 __builtin_memset( (struct $8MATERIAL***)((uint8*)THIS$1 + 248ll), 0, 8ll );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 256ll), 0, 8ll );
 __builtin_memset( (struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll), 0, 8ll );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 272ll), 0, 8ll );
 __builtin_memset( (struct $5LIGHT***)((uint8*)THIS$1 + 280ll), 0, 8ll );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 288ll), 0, 8ll );
 __builtin_memset( (struct $5MAP2D***)((uint8*)THIS$1 + 296ll), 0, 8ll );
 __builtin_memset( (int64*)((uint8*)THIS$1 + 304ll), 0, 8ll );
 __builtin_memset( (struct $7AAPIXEL***)((uint8*)THIS$1 + 312ll), 0, 8ll );
 _ZN9RAYTRACER4INITElll( THIS$1, W$1, H$1, MD$1 );
 label$1367:;
}

void _ZN9RAYTRACERD1Ev( struct $9RAYTRACER* THIS$1 )
{
 label$1368:;
 if( *(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) == (struct $5MAP2D**)0ull ) goto label$1371;
 {
  if( *(int64*)((uint8*)THIS$1 + 288ll) <= 0ll ) goto label$1373;
  {
   {
    int64 I$4;
    I$4 = 0ll;
    int64 TMP$1462$4;
    TMP$1462$4 = *(int64*)((uint8*)THIS$1 + 288ll) + -1ll;
    goto label$1374;
    label$1377:;
    {
     if( *(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (I$4 << (3ll & 63ll))) == (struct $5MAP2D*)0ull ) goto label$1379;
     {
      if( *(uint8**)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (I$4 << (3ll & 63ll))) + 72ll) == (uint8*)0ull ) goto label$1381;
      {
       free( *(void**)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (I$4 << (3ll & 63ll))) + 72ll) );
       *(uint8**)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (I$4 << (3ll & 63ll))) + 72ll) = (uint8*)0ull;
      }
      label$1381:;
      label$1380:;
      free( *(void**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (I$4 << (3ll & 63ll))) );
      *(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (I$4 << (3ll & 63ll))) = (struct $5MAP2D*)0ull;
     }
     label$1379:;
     label$1378:;
    }
    label$1375:;
    I$4 = I$4 + 1ll;
    label$1374:;
    if( I$4 <= TMP$1462$4 ) goto label$1377;
    label$1376:;
   }
   *(int64*)((uint8*)THIS$1 + 288ll) = 0ll;
  }
  label$1373:;
  label$1372:;
  free( *(void**)((uint8*)THIS$1 + 296ll) );
  *(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) = (struct $5MAP2D**)0ull;
 }
 label$1371:;
 label$1370:;
 if( *(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) == (struct $8MATERIAL**)0ull ) goto label$1383;
 {
  if( *(int64*)((uint8*)THIS$1 + 240ll) <= 0ll ) goto label$1385;
  {
   {
    int64 MC$4;
    MC$4 = 0ll;
    int64 TMP$1463$4;
    TMP$1463$4 = *(int64*)((uint8*)THIS$1 + 240ll) + -1ll;
    goto label$1386;
    label$1389:;
    {
     if( *(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MC$4 << (3ll & 63ll))) == (struct $8MATERIAL*)0ull ) goto label$1391;
     {
      free( *(void**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MC$4 << (3ll & 63ll))) );
      *(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MC$4 << (3ll & 63ll))) = (struct $8MATERIAL*)0ull;
     }
     label$1391:;
     label$1390:;
    }
    label$1387:;
    MC$4 = MC$4 + 1ll;
    label$1386:;
    if( MC$4 <= TMP$1463$4 ) goto label$1389;
    label$1388:;
   }
   *(int64*)((uint8*)THIS$1 + 240ll) = 0ll;
  }
  label$1385:;
  label$1384:;
  free( *(void**)((uint8*)THIS$1 + 248ll) );
  *(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) = (struct $8MATERIAL**)0ull;
 }
 label$1383:;
 label$1382:;
 if( *(struct $5LIGHT***)((uint8*)THIS$1 + 280ll) == (struct $5LIGHT**)0ull ) goto label$1393;
 {
  if( *(int64*)((uint8*)THIS$1 + 272ll) <= 0ll ) goto label$1395;
  {
   {
    int64 LC$4;
    LC$4 = 0ll;
    int64 TMP$1464$4;
    TMP$1464$4 = *(int64*)((uint8*)THIS$1 + 272ll) + -1ll;
    goto label$1396;
    label$1399:;
    {
     if( *(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 280ll) + (LC$4 << (3ll & 63ll))) == (struct $5LIGHT*)0ull ) goto label$1401;
     {
      free( *(void**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 280ll) + (LC$4 << (3ll & 63ll))) );
      *(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 280ll) + (LC$4 << (3ll & 63ll))) = (struct $5LIGHT*)0ull;
     }
     label$1401:;
     label$1400:;
    }
    label$1397:;
    LC$4 = LC$4 + 1ll;
    label$1396:;
    if( LC$4 <= TMP$1464$4 ) goto label$1399;
    label$1398:;
   }
   *(int64*)((uint8*)THIS$1 + 272ll) = 0ll;
  }
  label$1395:;
  label$1394:;
  free( *(void**)((uint8*)THIS$1 + 280ll) );
  *(struct $5LIGHT***)((uint8*)THIS$1 + 280ll) = (struct $5LIGHT**)0ull;
 }
 label$1393:;
 label$1392:;
 if( *(struct $7AAPIXEL***)((uint8*)THIS$1 + 312ll) == (struct $7AAPIXEL**)0ull ) goto label$1403;
 {
  if( *(int64*)((uint8*)THIS$1 + 304ll) <= 0ll ) goto label$1405;
  {
   {
    int64 I$4;
    I$4 = 0ll;
    int64 TMP$1465$4;
    TMP$1465$4 = *(int64*)((uint8*)THIS$1 + 304ll) + -1ll;
    goto label$1406;
    label$1409:;
    {
     if( *(struct $7AAPIXEL**)((uint8*)*(struct $7AAPIXEL***)((uint8*)THIS$1 + 312ll) + (I$4 << (3ll & 63ll))) == (struct $7AAPIXEL*)0ull ) goto label$1411;
     {
      free( *(void**)((uint8*)*(struct $7AAPIXEL***)((uint8*)THIS$1 + 312ll) + (I$4 << (3ll & 63ll))) );
      *(struct $7AAPIXEL**)((uint8*)*(struct $7AAPIXEL***)((uint8*)THIS$1 + 312ll) + (I$4 << (3ll & 63ll))) = (struct $7AAPIXEL*)0ull;
     }
     label$1411:;
     label$1410:;
    }
    label$1407:;
    I$4 = I$4 + 1ll;
    label$1406:;
    if( I$4 <= TMP$1465$4 ) goto label$1409;
    label$1408:;
   }
   *(int64*)((uint8*)THIS$1 + 304ll) = 0ll;
  }
  label$1405:;
  label$1404:;
  free( *(void**)((uint8*)THIS$1 + 312ll) );
  *(struct $7AAPIXEL***)((uint8*)THIS$1 + 312ll) = (struct $7AAPIXEL**)0ull;
 }
 label$1403:;
 label$1402:;
 if( *(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) == (struct $8OBJECT3D**)0ull ) goto label$1413;
 {
  if( *(int64*)((uint8*)THIS$1 + 256ll) <= 0ll ) goto label$1415;
  {
   {
    int64 OC$4;
    OC$4 = 0ll;
    int64 TMP$1466$4;
    TMP$1466$4 = *(int64*)((uint8*)THIS$1 + 256ll) + -1ll;
    goto label$1416;
    label$1419:;
    {
     if( *(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OC$4 << (3ll & 63ll))) == (struct $8OBJECT3D*)0ull ) goto label$1421;
     {
      if( *(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OC$4 << (3ll & 63ll))) + 152ll) == (struct $4POLY**)0ull ) goto label$1423;
      {
       if( *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OC$4 << (3ll & 63ll))) + 144ll) <= 0ll ) goto label$1425;
       {
        {
         int64 PC$9;
         PC$9 = 0ll;
         int64 TMP$1467$9;
         TMP$1467$9 = *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OC$4 << (3ll & 63ll))) + 144ll) + -1ll;
         goto label$1426;
         label$1429:;
         {
          if( *(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OC$4 << (3ll & 63ll))) + 152ll) + (PC$9 << (3ll & 63ll))) == (struct $4POLY*)0ull ) goto label$1431;
          {
           free( *(void**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OC$4 << (3ll & 63ll))) + 152ll) + (PC$9 << (3ll & 63ll))) );
           *(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OC$4 << (3ll & 63ll))) + 152ll) + (PC$9 << (3ll & 63ll))) = (struct $4POLY*)0ull;
          }
          label$1431:;
          label$1430:;
         }
         label$1427:;
         PC$9 = PC$9 + 1ll;
         label$1426:;
         if( PC$9 <= TMP$1467$9 ) goto label$1429;
         label$1428:;
        }
        *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OC$4 << (3ll & 63ll))) + 144ll) = 0ll;
       }
       label$1425:;
       label$1424:;
       free( *(void**)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OC$4 << (3ll & 63ll))) + 152ll) );
       *(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OC$4 << (3ll & 63ll))) + 152ll) = (struct $4POLY**)0ull;
      }
      label$1423:;
      label$1422:;
      if( *(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OC$4 << (3ll & 63ll))) + 136ll) == (struct $6VECTOR**)0ull ) goto label$1433;
      {
       if( *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OC$4 << (3ll & 63ll))) + 128ll) <= 0ll ) goto label$1435;
       {
        {
         int64 VC$9;
         VC$9 = 0ll;
         int64 TMP$1468$9;
         TMP$1468$9 = *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OC$4 << (3ll & 63ll))) + 128ll) + -1ll;
         goto label$1436;
         label$1439:;
         {
          if( *(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OC$4 << (3ll & 63ll))) + 136ll) + (VC$9 << (3ll & 63ll))) == (struct $6VECTOR*)0ull ) goto label$1441;
          {
           if( *(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OC$4 << (3ll & 63ll))) + 136ll) + (VC$9 << (3ll & 63ll))) == (struct $6VECTOR*)0ull ) goto label$1442;
           free( *(void**)((uint8*)*(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OC$4 << (3ll & 63ll))) + 136ll) + (VC$9 << (3ll & 63ll))) );
           label$1442:;
           *(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OC$4 << (3ll & 63ll))) + 136ll) + (VC$9 << (3ll & 63ll))) = (struct $6VECTOR*)0ull;
          }
          label$1441:;
          label$1440:;
         }
         label$1437:;
         VC$9 = VC$9 + 1ll;
         label$1436:;
         if( VC$9 <= TMP$1468$9 ) goto label$1439;
         label$1438:;
        }
       }
       label$1435:;
       label$1434:;
       if( *(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OC$4 << (3ll & 63ll))) + 136ll) == (struct $6VECTOR**)0ull ) goto label$1443;
       free( *(void**)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OC$4 << (3ll & 63ll))) + 136ll) );
       label$1443:;
       *(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OC$4 << (3ll & 63ll))) + 136ll) = (struct $6VECTOR**)0ull;
      }
      label$1433:;
      label$1432:;
      free( *(void**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OC$4 << (3ll & 63ll))) );
      *(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OC$4 << (3ll & 63ll))) = (struct $8OBJECT3D*)0ull;
     }
     label$1421:;
     label$1420:;
    }
    label$1417:;
    OC$4 = OC$4 + 1ll;
    label$1416:;
    if( OC$4 <= TMP$1466$4 ) goto label$1419;
    label$1418:;
   }
   *(int64*)((uint8*)THIS$1 + 256ll) = 0ll;
  }
  label$1415:;
  label$1414:;
  free( *(void**)((uint8*)THIS$1 + 264ll) );
  *(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) = (struct $8OBJECT3D**)0ull;
 }
 label$1413:;
 label$1412:;
 label$1369:;
}

void _ZN9RAYTRACER4INITElll( struct $9RAYTRACER* THIS$1, int64 W$1, int64 H$1, int64 MAXDEPTH$1 )
{
 int64 TMP$1469$1;
 label$1444:;
 if( W$1 >= 4ll ) goto label$1447;
 {
  W$1 = 4ll;
  label$1447:;
 }
 if( H$1 >= 4ll ) goto label$1449;
 {
  H$1 = 4ll;
  label$1449:;
 }
 *(int64*)THIS$1 = W$1;
 *(int64*)((uint8*)THIS$1 + 16ll) = ((int64)__builtin_nearbyint( (double)W$1 * 0x1.p-1 ));
 *(int64*)((uint8*)THIS$1 + 8ll) = H$1;
 *(int64*)((uint8*)THIS$1 + 24ll) = ((int64)__builtin_nearbyint( (double)H$1 * 0x1.p-1 ));
 if( W$1 <= H$1 ) goto label$1450;
 TMP$1469$1 = W$1;
 goto label$1453;
 label$1450:;
 TMP$1469$1 = H$1;
 label$1453:;
 *(double*)((uint8*)THIS$1 + 32ll) = (double)TMP$1469$1;
 *(double*)((uint8*)THIS$1 + 40ll) = 0x1.p+0 / *(double*)((uint8*)THIS$1 + 32ll);
 *(double*)((uint8*)THIS$1 + 88ll) = 0x0p+0;
 *(double*)((uint8*)THIS$1 + 96ll) = 0x1.p-1;
 *(double*)((uint8*)THIS$1 + 104ll) = 0x1.p-1;
 *(double*)((uint8*)THIS$1 + 48ll) = 0x1.999999999999Ap-4;
 *(double*)((uint8*)THIS$1 + 56ll) = 0x1.999999999999Ap-4;
 *(double*)((uint8*)THIS$1 + 64ll) = 0x1.999999999999Ap-4;
 *(int64*)((uint8*)THIS$1 + 128ll) = MAXDEPTH$1;
 if( *(int64*)((uint8*)THIS$1 + 128ll) >= 0ll ) goto label$1452;
 {
  *(int64*)((uint8*)THIS$1 + 128ll) = 0ll;
  label$1452:;
 }
 _ZN9RAYTRACER11ADDMATERIALEddddddddddbbbllll( THIS$1, 0x1.p-1, 0x1.p-1, 0x1.p-1, 0x1.6666666666666p-1, 0x1.3333333333333p-2, 0x1.p-2, 0x1.999999999999Ap-1, 0x1.999999999999Ap-3, 0x0p+0, 0x0p+0, (boolean)1ll, (boolean)1ll, (boolean)1ll, -1ll, -1ll, -1ll, -1ll );
 label$1445:;
}

void _ZN9RAYTRACER6ADJUSTEPddd( struct $9RAYTRACER* THIS$1, double* ADJVALUE$1, double MINVALUE$1, double MAXVALUE$1 )
{
 label$1454:;
 if( ADJVALUE$1 == (double*)0ull ) goto label$1457;
 {
  if( *ADJVALUE$1 >= MINVALUE$1 ) goto label$1459;
  {
   *ADJVALUE$1 = MINVALUE$1;
  }
  goto label$1458;
  label$1459:;
  if( *ADJVALUE$1 <= MAXVALUE$1 ) goto label$1460;
  {
   *ADJVALUE$1 = MAXVALUE$1;
  }
  label$1460:;
  label$1458:;
 }
 label$1457:;
 label$1456:;
 label$1455:;
}

int64 _ZN9RAYTRACER8ADDMAP2DER8FBSTRING11MAP2D_TYPESddd( struct $9RAYTRACER* THIS$1, FBSTRING* FILENAME$1, $11MAP2D_TYPES MAPTYPE$1, double REPEATX$1, double REPEATY$1, double REPEATZ$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1461:;
 int64 I$1;
 __builtin_memset( &I$1, 0, 8ll );
 int64 C$1;
 __builtin_memset( &C$1, 0, 8ll );
 int64 RR$1;
 __builtin_memset( &RR$1, 0, 8ll );
 int64 REAL_PITCH$1;
 __builtin_memset( &REAL_PITCH$1, 0, 8ll );
 int64 TARGETADD$1;
 __builtin_memset( &TARGETADD$1, 0, 8ll );
 int64 SOURCEADD$1;
 __builtin_memset( &SOURCEADD$1, 0, 8ll );
 int64 HFILE$1;
 __builtin_memset( &HFILE$1, 0, 8ll );
 uint8 ONEBYTE$1;
 __builtin_memset( &ONEBYTE$1, 0, 1ll );
 uint8* LREAL_PIMAGE$1;
 __builtin_memset( &LREAL_PIMAGE$1, 0, 8ll );
 uint8* LPSOURCEROW$1;
 __builtin_memset( &LPSOURCEROW$1, 0, 8ll );
 uint8* LPTARGETROW$1;
 __builtin_memset( &LPTARGETROW$1, 0, 8ll );
 double R$1;
 __builtin_memset( &R$1, 0, 8ll );
 double G$1;
 __builtin_memset( &G$1, 0, 8ll );
 double B$1;
 __builtin_memset( &B$1, 0, 8ll );
 struct $N9RAYTRACER7FBARRAYI8PALENTRYEE {
  struct $8PALENTRY* DATA;
  struct $8PALENTRY* PTR;
  int64 SIZE;
  int64 ELEMENT_LEN;
  int64 DIMENSIONS;
  int64 FLAGS;
  struct $16__FB_ARRAYDIMTB$ DIMTB[8];
 };
 extern int __$fb_structsizecheck[(sizeof( struct $N9RAYTRACER7FBARRAYI8PALENTRYEE ) == 240) ? 1 : -1];
 struct $N9RAYTRACER7FBARRAYI8PALENTRYEE PAL$1;
 *(struct $8PALENTRY**)&PAL$1 = (struct $8PALENTRY*)0ull;
 *(struct $8PALENTRY**)((uint8*)&PAL$1 + 8ll) = (struct $8PALENTRY*)0ull;
 *(int64*)((uint8*)&PAL$1 + 16ll) = 0ll;
 *(int64*)((uint8*)&PAL$1 + 24ll) = 4ll;
 *(int64*)((uint8*)&PAL$1 + 32ll) = 0ll;
 *(int64*)((uint8*)&PAL$1 + 40ll) = 8ll;
 __builtin_memset( (void*)((uint8*)&PAL$1 + 48ll), 0, 192ll );
 struct $9BMPHEADER HEADER$1;
 __builtin_memset( &HEADER$1, 0, 54ll );
 if( REPEATX$1 >= 0x1.0624DD2F1A9FCp-10 ) goto label$1464;
 {
  REPEATX$1 = 0x1.0624DD2F1A9FCp-10;
  label$1464:;
 }
 if( REPEATY$1 >= 0x1.0624DD2F1A9FCp-10 ) goto label$1466;
 {
  REPEATY$1 = 0x1.0624DD2F1A9FCp-10;
  label$1466:;
 }
 if( REPEATZ$1 >= 0x1.0624DD2F1A9FCp-10 ) goto label$1468;
 {
  REPEATZ$1 = 0x1.0624DD2F1A9FCp-10;
  label$1468:;
 }
 int32 vr$17 = fb_FileFree( );
 HFILE$1 = (int64)vr$17;
 int32 vr$20 = fb_FileOpen( (FBSTRING*)FILENAME$1, 0u, 1u, 0u, (int32)HFILE$1, 0 );
 if( (int64)vr$20 != 0ll ) goto label$1470;
 {
  int64 vr$23 = fb_FileSize( (int32)HFILE$1 );
  if( vr$23 >= 44ll ) goto label$1472;
  {
   fb_FileClose( (int32)HFILE$1 );
   fb$result$1 = -1ll;
   fb_ArrayErase( (struct $7FBARRAYIvE*)&PAL$1 );
   goto label$1462;
  }
  label$1472:;
  label$1471:;
  fb_FileGetLarge( (int32)HFILE$1, 0ll, (void*)&HEADER$1, 54ull );
  if( (int64)*(uint16*)&HEADER$1 == 19778ll ) goto label$1474;
  {
   fb_FileClose( (int32)HFILE$1 );
   fb$result$1 = -1ll;
   fb_ArrayErase( (struct $7FBARRAYIvE*)&PAL$1 );
   goto label$1462;
  }
  label$1474:;
  label$1473:;
  if( (int64)*(int32*)((uint8*)&HEADER$1 + 30ll) == 0ll ) goto label$1476;
  {
   fb_FileClose( (int32)HFILE$1 );
   fb$result$1 = -1ll;
   fb_ArrayErase( (struct $7FBARRAYIvE*)&PAL$1 );
   goto label$1462;
  }
  label$1476:;
  label$1475:;
  if( (int64)*(int16*)((uint8*)&HEADER$1 + 28ll) >= 8ll ) goto label$1478;
  {
   fb_FileClose( (int32)HFILE$1 );
   fb$result$1 = -1ll;
   fb_ArrayErase( (struct $7FBARRAYIvE*)&PAL$1 );
   goto label$1462;
  }
  label$1478:;
  label$1477:;
  {
   int64 TMP$1471$3;
   if( (int64)*(int32*)((uint8*)&HEADER$1 + 14ll) <= 40ll ) goto label$1480;
   {
    {
     I$1 = 1ll;
     int64 TMP$1470$5;
     TMP$1470$5 = (int64)*(int32*)((uint8*)&HEADER$1 + 14ll) + -40ll;
     goto label$1481;
     label$1484:;
     {
      fb_FileGetLarge( (int32)HFILE$1, 0ll, (void*)&ONEBYTE$1, 1ull );
     }
     label$1482:;
     I$1 = I$1 + 1ll;
     label$1481:;
     if( I$1 <= TMP$1470$5 ) goto label$1484;
     label$1483:;
    }
   }
   label$1480:;
   label$1479:;
   if( (int64)*(int16*)((uint8*)&HEADER$1 + 28ll) != 8ll ) goto label$1486;
   {
    if( (int64)*(int32*)((uint8*)&HEADER$1 + 46ll) != 0ll ) goto label$1488;
    {
     *(int32*)((uint8*)&HEADER$1 + 46ll) = 256;
     label$1488:;
    }
    fb_ArrayRedimEx( (struct $7FBARRAYIvE*)&PAL$1, 4ull, -1, 0, 1ull, 0ll, (int64)*(int32*)((uint8*)&HEADER$1 + 46ll) + -1ll );
    fb_FileGetArrayLarge( (int32)HFILE$1, 0ll, (struct $7FBARRAYIvE*)&PAL$1 );
   }
   label$1486:;
   label$1485:;
   fb_FileSeek( (int32)HFILE$1, *(int32*)((uint8*)&HEADER$1 + 10ll) );
   void* vr$52 = calloc( (uint64)*(int32*)((uint8*)&HEADER$1 + 34ll), 1ull );
   LREAL_PIMAGE$1 = (uint8*)vr$52;
   fb_FileGetLarge( (int32)HFILE$1, 0ll, (void*)LREAL_PIMAGE$1, (uint64)(int64)*(int32*)((uint8*)&HEADER$1 + 34ll) );
   fb_FileClose( (int32)HFILE$1 );
   *(int16*)((uint8*)&HEADER$1 + 28ll) = (int16)((int64)*(int16*)((uint8*)&HEADER$1 + 28ll) >> (3ll & 63ll));
   void* vr$63 = realloc( *(void**)((uint8*)THIS$1 + 296ll), (uint64)((*(int64*)((uint8*)THIS$1 + 288ll) << (3ll & 63ll)) + 8ll) );
   *(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) = (struct $5MAP2D**)vr$63;
   void* vr$65 = malloc( 112ull );
   *(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (*(int64*)((uint8*)THIS$1 + 288ll) << (3ll & 63ll))) = (struct $5MAP2D*)vr$65;
   __builtin_memcpy( (struct $9BMPHEADER*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (*(int64*)((uint8*)THIS$1 + 288ll) << (3ll & 63ll))) + 16ll), &HEADER$1, 54 );
   *($11MAP2D_TYPES*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (*(int64*)((uint8*)THIS$1 + 288ll) << (3ll & 63ll))) + 8ll) = MAPTYPE$1;
   *(double*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (*(int64*)((uint8*)THIS$1 + 288ll) << (3ll & 63ll))) + 80ll) = REPEATX$1;
   *(double*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (*(int64*)((uint8*)THIS$1 + 288ll) << (3ll & 63ll))) + 88ll) = REPEATY$1;
   *(double*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (*(int64*)((uint8*)THIS$1 + 288ll) << (3ll & 63ll))) + 96ll) = REPEATZ$1;
   if( (int64)*(int32*)((uint8*)&HEADER$1 + 22ll) >= 0ll ) goto label$1489;
   TMP$1471$3 = -(int64)*(int32*)((uint8*)&HEADER$1 + 22ll);
   goto label$1546;
   label$1489:;
   TMP$1471$3 = (int64)*(int32*)((uint8*)&HEADER$1 + 22ll);
   label$1546:;
   REAL_PITCH$1 = (int64)*(int32*)((uint8*)&HEADER$1 + 34ll) / TMP$1471$3;
   REAL_PITCH$1 = REAL_PITCH$1 - ((int64)*(int32*)((uint8*)&HEADER$1 + 18ll) * (int64)*(int16*)((uint8*)&HEADER$1 + 28ll));
   {
    if( MAPTYPE$1 != 0ll ) goto label$1491;
    label$1492:;
    {
     int64 TMP$1472$5;
     if( (int64)*(int32*)((uint8*)&HEADER$1 + 22ll) >= 0ll ) goto label$1493;
     TMP$1472$5 = -(int64)*(int32*)((uint8*)&HEADER$1 + 22ll);
     goto label$1547;
     label$1493:;
     TMP$1472$5 = (int64)*(int32*)((uint8*)&HEADER$1 + 22ll);
     label$1547:;
     void* vr$114 = malloc( (uint64)(((int64)*(int32*)((uint8*)&HEADER$1 + 18ll) * TMP$1472$5) * 3ll) );
     *(uint8**)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (*(int64*)((uint8*)THIS$1 + 288ll) << (3ll & 63ll))) + 72ll) = (uint8*)vr$114;
     TARGETADD$1 = (int64)*(int32*)((uint8*)&HEADER$1 + 18ll) * 3ll;
    }
    goto label$1490;
    label$1491:;
    {
     int64 TMP$1473$5;
     if( (int64)*(int32*)((uint8*)&HEADER$1 + 22ll) >= 0ll ) goto label$1495;
     TMP$1473$5 = -(int64)*(int32*)((uint8*)&HEADER$1 + 22ll);
     goto label$1548;
     label$1495:;
     TMP$1473$5 = (int64)*(int32*)((uint8*)&HEADER$1 + 22ll);
     label$1548:;
     void* vr$128 = malloc( (uint64)((int64)*(int32*)((uint8*)&HEADER$1 + 18ll) * TMP$1473$5) );
     *(uint8**)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (*(int64*)((uint8*)THIS$1 + 288ll) << (3ll & 63ll))) + 72ll) = (uint8*)vr$128;
     TARGETADD$1 = (int64)*(int32*)((uint8*)&HEADER$1 + 18ll);
    }
    label$1494:;
    label$1490:;
   }
   LPSOURCEROW$1 = LREAL_PIMAGE$1;
   SOURCEADD$1 = ((int64)*(int32*)((uint8*)&HEADER$1 + 18ll) * (int64)*(int16*)((uint8*)&HEADER$1 + 28ll)) + REAL_PITCH$1;
   LPTARGETROW$1 = *(uint8**)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (*(int64*)((uint8*)THIS$1 + 288ll) << (3ll & 63ll))) + 72ll);
   if( (int64)*(int32*)((uint8*)&HEADER$1 + 22ll) >= 0ll ) goto label$1497;
   {
    int64 TMP$1474$4;
    if( (int64)*(int32*)((uint8*)&HEADER$1 + 22ll) >= 0ll ) goto label$1498;
    TMP$1474$4 = -(int64)*(int32*)((uint8*)&HEADER$1 + 22ll);
    goto label$1549;
    label$1498:;
    TMP$1474$4 = (int64)*(int32*)((uint8*)&HEADER$1 + 22ll);
    label$1549:;
    *(int32*)((uint8*)&HEADER$1 + 22ll) = (int32)TMP$1474$4;
    SOURCEADD$1 = SOURCEADD$1 * -1ll;
    LPSOURCEROW$1 = (uint8*)(LREAL_PIMAGE$1 + (((int64)*(int32*)((uint8*)&HEADER$1 + 22ll) + -1ll) * SOURCEADD$1));
   }
   label$1497:;
   label$1496:;
   {
    int16 TMP$1475$4;
    TMP$1475$4 = *(int16*)((uint8*)&HEADER$1 + 28ll);
    if( (int64)TMP$1475$4 != 1ll ) goto label$1500;
    label$1501:;
    {
     {
      if( MAPTYPE$1 != 0ll ) goto label$1503;
      label$1504:;
      {
       {
        RR$1 = 0ll;
        int64 TMP$1476$8;
        TMP$1476$8 = (int64)*(int32*)((uint8*)&HEADER$1 + 22ll) + -1ll;
        goto label$1505;
        label$1508:;
        {
         {
          C$1 = 0ll;
          int64 TMP$1477$10;
          TMP$1477$10 = (int64)*(int32*)((uint8*)&HEADER$1 + 18ll) + -1ll;
          goto label$1509;
          label$1512:;
          {
           I$1 = (int64)*(uint8*)(LPSOURCEROW$1 + C$1);
           *(uint8*)(LPTARGETROW$1 + (C$1 * 3ll)) = *(uint8*)((uint8*)((I$1 << (2ll & 63ll)) + *(int64*)&PAL$1) + 2ll);
           *(uint8*)((uint8*)(LPTARGETROW$1 + (C$1 * 3ll)) + 1ll) = *(uint8*)((uint8*)((I$1 << (2ll & 63ll)) + *(int64*)&PAL$1) + 1ll);
           *(uint8*)((uint8*)(LPTARGETROW$1 + (C$1 * 3ll)) + 2ll) = *(uint8*)((I$1 << (2ll & 63ll)) + *(int64*)&PAL$1);
          }
          label$1510:;
          C$1 = C$1 + 1ll;
          label$1509:;
          if( C$1 <= TMP$1477$10 ) goto label$1512;
          label$1511:;
         }
         LPTARGETROW$1 = (uint8*)(LPTARGETROW$1 + TARGETADD$1);
         LPSOURCEROW$1 = (uint8*)(LPSOURCEROW$1 + SOURCEADD$1);
        }
        label$1506:;
        RR$1 = RR$1 + 1ll;
        label$1505:;
        if( RR$1 <= TMP$1476$8 ) goto label$1508;
        label$1507:;
       }
      }
      goto label$1502;
      label$1503:;
      {
       {
        RR$1 = 0ll;
        int64 TMP$1478$8;
        TMP$1478$8 = (int64)*(int32*)((uint8*)&HEADER$1 + 22ll) + -1ll;
        goto label$1514;
        label$1517:;
        {
         {
          C$1 = 0ll;
          int64 TMP$1479$10;
          TMP$1479$10 = (int64)*(int32*)((uint8*)&HEADER$1 + 18ll) + -1ll;
          goto label$1518;
          label$1521:;
          {
           I$1 = (int64)*(uint8*)(LPSOURCEROW$1 + C$1);
           R$1 = (double)(int64)*(uint8*)((I$1 << (2ll & 63ll)) + *(int64*)&PAL$1) * 0x1.010101010101p-8;
           G$1 = (double)(int64)*(uint8*)((uint8*)((I$1 << (2ll & 63ll)) + *(int64*)&PAL$1) + 1ll) * 0x1.010101010101p-8;
           B$1 = (double)(int64)*(uint8*)((uint8*)((I$1 << (2ll & 63ll)) + *(int64*)&PAL$1) + 2ll) * 0x1.010101010101p-8;
           *(uint8*)(LPTARGETROW$1 + C$1) = (uint8)((int32)__builtin_nearbyint( __builtin_sqrt( (((R$1 * R$1) + (G$1 * G$1)) + (B$1 * B$1)) ) * 0x1.FEp+7 ));
          }
          label$1519:;
          C$1 = C$1 + 1ll;
          label$1518:;
          if( C$1 <= TMP$1479$10 ) goto label$1521;
          label$1520:;
         }
         LPTARGETROW$1 = (uint8*)(LPTARGETROW$1 + TARGETADD$1);
         LPSOURCEROW$1 = (uint8*)(LPSOURCEROW$1 + SOURCEADD$1);
        }
        label$1515:;
        RR$1 = RR$1 + 1ll;
        label$1514:;
        if( RR$1 <= TMP$1478$8 ) goto label$1517;
        label$1516:;
       }
      }
      label$1513:;
      label$1502:;
     }
    }
    goto label$1499;
    label$1500:;
    if( (int64)TMP$1475$4 != 3ll ) goto label$1522;
    label$1523:;
    {
     {
      if( MAPTYPE$1 != 0ll ) goto label$1525;
      label$1526:;
      {
       {
        RR$1 = 0ll;
        int64 TMP$1480$8;
        TMP$1480$8 = (int64)*(int32*)((uint8*)&HEADER$1 + 22ll) + -1ll;
        goto label$1527;
        label$1530:;
        {
         {
          C$1 = 0ll;
          int64 TMP$1481$10;
          TMP$1481$10 = (int64)*(int32*)((uint8*)&HEADER$1 + 18ll) + -1ll;
          goto label$1531;
          label$1534:;
          {
           *(uint8*)(LPTARGETROW$1 + (C$1 * 3ll)) = *(uint8*)(LPSOURCEROW$1 + (C$1 * (int64)*(int16*)((uint8*)&HEADER$1 + 28ll)));
           *(uint8*)((uint8*)(LPTARGETROW$1 + (C$1 * 3ll)) + 1ll) = *(uint8*)((uint8*)(LPSOURCEROW$1 + (C$1 * (int64)*(int16*)((uint8*)&HEADER$1 + 28ll))) + 2ll);
           *(uint8*)((uint8*)(LPTARGETROW$1 + (C$1 * 3ll)) + 2ll) = *(uint8*)((uint8*)(LPSOURCEROW$1 + (C$1 * (int64)*(int16*)((uint8*)&HEADER$1 + 28ll))) + 1ll);
          }
          label$1532:;
          C$1 = C$1 + 1ll;
          label$1531:;
          if( C$1 <= TMP$1481$10 ) goto label$1534;
          label$1533:;
         }
         LPTARGETROW$1 = (uint8*)(LPTARGETROW$1 + TARGETADD$1);
         LPSOURCEROW$1 = (uint8*)(LPSOURCEROW$1 + SOURCEADD$1);
        }
        label$1528:;
        RR$1 = RR$1 + 1ll;
        label$1527:;
        if( RR$1 <= TMP$1480$8 ) goto label$1530;
        label$1529:;
       }
      }
      goto label$1524;
      label$1525:;
      {
       {
        RR$1 = 0ll;
        int64 TMP$1482$8;
        TMP$1482$8 = (int64)*(int32*)((uint8*)&HEADER$1 + 22ll) + -1ll;
        goto label$1536;
        label$1539:;
        {
         {
          C$1 = 0ll;
          int64 TMP$1483$10;
          TMP$1483$10 = (int64)*(int32*)((uint8*)&HEADER$1 + 18ll) + -1ll;
          goto label$1540;
          label$1543:;
          {
           R$1 = (double)(int64)*(uint8*)(LPSOURCEROW$1 + (C$1 * (int64)*(int16*)((uint8*)&HEADER$1 + 28ll))) * 0x1.010101010101p-8;
           B$1 = (double)(int64)*(uint8*)((uint8*)(LPSOURCEROW$1 + (C$1 * (int64)*(int16*)((uint8*)&HEADER$1 + 28ll))) + 1ll) * 0x1.010101010101p-8;
           G$1 = (double)(int64)*(uint8*)((uint8*)(LPSOURCEROW$1 + (C$1 * (int64)*(int16*)((uint8*)&HEADER$1 + 28ll))) + 2ll) * 0x1.010101010101p-8;
           *(uint8*)(LPTARGETROW$1 + C$1) = (uint8)((int32)__builtin_nearbyint( __builtin_sqrt( (((R$1 * R$1) + (G$1 * G$1)) + (B$1 * B$1)) ) * 0x1.FEp+7 ));
          }
          label$1541:;
          C$1 = C$1 + 1ll;
          label$1540:;
          if( C$1 <= TMP$1483$10 ) goto label$1543;
          label$1542:;
         }
         LPTARGETROW$1 = (uint8*)(LPTARGETROW$1 + TARGETADD$1);
         LPSOURCEROW$1 = (uint8*)(LPSOURCEROW$1 + SOURCEADD$1);
        }
        label$1537:;
        RR$1 = RR$1 + 1ll;
        label$1536:;
        if( RR$1 <= TMP$1482$8 ) goto label$1539;
        label$1538:;
       }
      }
      label$1535:;
      label$1524:;
     }
    }
    label$1522:;
    label$1499:;
   }
  }
  if( LREAL_PIMAGE$1 == (uint8*)0ull ) goto label$1545;
  {
   free( (void*)LREAL_PIMAGE$1 );
   label$1545:;
  }
  fb$result$1 = *(int64*)((uint8*)THIS$1 + 288ll);
  *(int64*)((uint8*)THIS$1 + 288ll) = *(int64*)((uint8*)THIS$1 + 288ll) + 1ll;
 }
 goto label$1469;
 label$1470:;
 {
  fb$result$1 = -1ll;
  fb_ArrayErase( (struct $7FBARRAYIvE*)&PAL$1 );
  goto label$1462;
 }
 label$1469:;
 fb_ArrayErase( (struct $7FBARRAYIvE*)&PAL$1 );
 label$1462:;
 return fb$result$1;
}

void _ZN9RAYTRACER8GETMAPXYEllR6VECTORS1_( struct $9RAYTRACER* THIS$1, int64 OBJID$1, int64 POLYID$1, struct $6VECTOR* HITPOINT$1, struct $6VECTOR* MAPXY$1 )
{
 label$1550:;
 struct $6VECTOR AD$1;
 _ZN6VECTORC1Ev( &AD$1 );
 struct $6VECTOR BD$1;
 _ZN6VECTORC1Ev( &BD$1 );
 struct $6VECTOR B$1;
 _ZN6VECTORC1Ev( &B$1 );
 struct $6VECTOR C$1;
 _ZN6VECTORC1Ev( &C$1 );
 struct $6VECTOR D$1;
 _ZN6VECTORC1Ev( &D$1 );
 double R$1;
 __builtin_memset( &R$1, 0, 8ll );
 double DOTC$1;
 __builtin_memset( &DOTC$1, 0, 8ll );
 double ANGLE$1;
 __builtin_memset( &ANGLE$1, 0, 8ll );
 double X$1;
 __builtin_memset( &X$1, 0, 8ll );
 double Y$1;
 __builtin_memset( &Y$1, 0, 8ll );
 double XDIM$1;
 __builtin_memset( &XDIM$1, 0, 8ll );
 double YDIM$1;
 __builtin_memset( &YDIM$1, 0, 8ll );
 struct $4POLY* LPPOLY$1;
 __builtin_memset( &LPPOLY$1, 0, 8ll );
 {
  $14OBJECT3D_TYPES TMP$1484$2;
  TMP$1484$2 = *($14OBJECT3D_TYPES*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll)));
  if( TMP$1484$2 != 1ll ) goto label$1553;
  label$1554:;
  {
   struct $6VECTOR TMP$1485$3;
   struct $6VECTOR TMP$1486$3;
   struct $6VECTOR TMP$1487$3;
   struct $6VECTOR TMP$1488$3;
   struct $6VECTOR TMP$1489$3;
   LPPOLY$1 = *(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 152ll) + (POLYID$1 << (3ll & 63ll)));
   _ZmiR6VECTORS0_( &TMP$1485$3, HITPOINT$1, *(*(struct $6VECTOR***)((uint8*)LPPOLY$1 + 80ll)) );
   __builtin_memcpy( &C$1, &TMP$1485$3, 32 );
   double vr$29 = _ZN6VECTOR6LENGTHEv( &C$1 );
   DOTC$1 = vr$29;
   _ZmiR6VECTORS0_( &TMP$1486$3, *(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)LPPOLY$1 + 80ll) + 8ll), *(*(struct $6VECTOR***)((uint8*)LPPOLY$1 + 80ll)) );
   __builtin_memcpy( &AD$1, &TMP$1486$3, 32 );
   double vr$38 = _ZN6VECTOR6LENGTHEv( &AD$1 );
   XDIM$1 = vr$38;
   _ZmiR6VECTORS0_( &TMP$1487$3, *(struct $6VECTOR**)((uint8*)((uint8*)*(struct $6VECTOR***)((uint8*)LPPOLY$1 + 80ll) + (*(int64*)((uint8*)LPPOLY$1 + 72ll) << (3ll & 63ll))) + -8ll), *(*(struct $6VECTOR***)((uint8*)LPPOLY$1 + 80ll)) );
   __builtin_memcpy( &BD$1, &TMP$1487$3, 32 );
   double vr$49 = _ZN6VECTOR6LENGTHEv( &BD$1 );
   YDIM$1 = vr$49;
   _ZmlR6VECTORd( &TMP$1488$3, &AD$1, 0x1.p+0 / XDIM$1 );
   __builtin_memcpy( &B$1, &TMP$1488$3, 32 );
   _ZmlR6VECTORd( &TMP$1489$3, &C$1, 0x1.p+0 / DOTC$1 );
   __builtin_memcpy( &D$1, &TMP$1489$3, 32 );
   double vr$62 = _ZmlR6VECTORS0_( &B$1, &D$1 );
   ANGLE$1 = vr$62;
   Y$1 = DOTC$1 * ANGLE$1;
   ANGLE$1 = __builtin_sin( __builtin_acos( ANGLE$1 ) );
   X$1 = DOTC$1 * ANGLE$1;
   *(double*)MAPXY$1 = ((X$1 * 0x1.p+0) + 0x1.p-1) / XDIM$1;
   *(double*)((uint8*)MAPXY$1 + 8ll) = ((Y$1 * 0x1.p+0) + 0x1.p-1) / YDIM$1;
  }
  goto label$1552;
  label$1553:;
  if( TMP$1484$2 != 0ll ) goto label$1555;
  label$1556:;
  {
   X$1 = *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 80ll) - *(double*)HITPOINT$1;
   Y$1 = (*(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 88ll) - *(double*)((uint8*)HITPOINT$1 + 8ll)) * -0x1.p+0;
   R$1 = *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 120ll);
   *(double*)MAPXY$1 = ((X$1 / R$1) * 0x1.p-1) + 0x1.p-1;
   *(double*)((uint8*)MAPXY$1 + 8ll) = ((Y$1 / R$1) * 0x1.p-1) + 0x1.p-1;
  }
  label$1555:;
  label$1552:;
 }
 label$1551:;
}

double _ZN9RAYTRACER18GETHIGHTFIELDVALUEElll13BUMP_METHODESb( struct $9RAYTRACER* THIS$1, int64 MAPID$1, int64 X$1, int64 Y$1, $13BUMP_METHODES METHODE$1, boolean INVERSE$1 )
{
 int64 TMP$1490$1;
 int64 TMP$1491$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1557:;
 int64 PTR1$1;
 __builtin_memset( &PTR1$1, 0, 8ll );
 int64 PTR2$1;
 __builtin_memset( &PTR2$1, 0, 8ll );
 int64 PTR3$1;
 __builtin_memset( &PTR3$1, 0, 8ll );
 double H1$1;
 __builtin_memset( &H1$1, 0, 8ll );
 double H2$1;
 __builtin_memset( &H2$1, 0, 8ll );
 double H3$1;
 __builtin_memset( &H3$1, 0, 8ll );
 double H$1;
 __builtin_memset( &H$1, 0, 8ll );
 if( X$1 >= 0ll ) goto label$1559;
 TMP$1490$1 = -X$1;
 goto label$1568;
 label$1559:;
 TMP$1490$1 = X$1;
 label$1568:;
 X$1 = TMP$1490$1 % (int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (MAPID$1 << (3ll & 63ll))) + 34ll);
 if( Y$1 >= 0ll ) goto label$1560;
 TMP$1491$1 = -Y$1;
 goto label$1569;
 label$1560:;
 TMP$1491$1 = Y$1;
 label$1569:;
 Y$1 = TMP$1491$1 % (int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (MAPID$1 << (3ll & 63ll))) + 38ll);
 {
  if( METHODE$1 != 0ll ) goto label$1562;
  label$1563:;
  {
   PTR1$1 = (Y$1 * (int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (MAPID$1 << (3ll & 63ll))) + 34ll)) + X$1;
   PTR2$1 = (Y$1 * (int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (MAPID$1 << (3ll & 63ll))) + 34ll)) + ((X$1 + 1ll) % (int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (MAPID$1 << (3ll & 63ll))) + 34ll));
   H1$1 = (double)(int64)*(uint8*)(*(uint8**)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (MAPID$1 << (3ll & 63ll))) + 72ll) + PTR1$1) * 0x1.010101010101p-8;
   H2$1 = (double)(int64)*(uint8*)(*(uint8**)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (MAPID$1 << (3ll & 63ll))) + 72ll) + PTR2$1) * 0x1.010101010101p-8;
   H$1 = H2$1 - H1$1;
  }
  goto label$1561;
  label$1562:;
  if( METHODE$1 != 1ll ) goto label$1564;
  label$1565:;
  {
   PTR1$1 = (Y$1 * (int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (MAPID$1 << (3ll & 63ll))) + 34ll)) + X$1;
   PTR2$1 = (((Y$1 + 1ll) % (int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (MAPID$1 << (3ll & 63ll))) + 38ll)) * (int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (MAPID$1 << (3ll & 63ll))) + 34ll)) + X$1;
   H1$1 = (double)(int64)*(uint8*)(*(uint8**)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (MAPID$1 << (3ll & 63ll))) + 72ll) + PTR1$1) * 0x1.010101010101p-8;
   H2$1 = (double)(int64)*(uint8*)(*(uint8**)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (MAPID$1 << (3ll & 63ll))) + 72ll) + PTR2$1) * 0x1.010101010101p-8;
   H$1 = H2$1 - H1$1;
  }
  goto label$1561;
  label$1564:;
  if( METHODE$1 != 2ll ) goto label$1566;
  label$1567:;
  {
   PTR1$1 = (Y$1 * (int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (MAPID$1 << (3ll & 63ll))) + 34ll)) + X$1;
   PTR2$1 = (Y$1 * (int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (MAPID$1 << (3ll & 63ll))) + 34ll)) + ((X$1 + 1ll) % (int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (MAPID$1 << (3ll & 63ll))) + 34ll));
   PTR3$1 = (((Y$1 + 1ll) % (int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (MAPID$1 << (3ll & 63ll))) + 38ll)) * (int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (MAPID$1 << (3ll & 63ll))) + 34ll)) + X$1;
   H1$1 = (double)*(uint8*)(*(uint8**)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (MAPID$1 << (3ll & 63ll))) + 72ll) + PTR1$1);
   H1$1 = H1$1 * 0x1.010101010101p-8;
   H2$1 = (double)*(uint8*)(*(uint8**)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (MAPID$1 << (3ll & 63ll))) + 72ll) + PTR2$1);
   H2$1 = H2$1 * 0x1.010101010101p-8;
   H3$1 = (double)*(uint8*)(*(uint8**)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (MAPID$1 << (3ll & 63ll))) + 72ll) + PTR3$1);
   H3$1 = H3$1 * 0x1.010101010101p-8;
   H$1 = ((H2$1 - H1$1) + H3$1) - H1$1;
  }
  label$1566:;
  label$1561:;
 }
 fb$result$1 = H$1;
 goto label$1558;
 label$1558:;
 return fb$result$1;
}

boolean _ZN9RAYTRACER19ISVISIBLEONSTAMPMAPElR6VECTOR( struct $9RAYTRACER* THIS$1, int64 MATID$1, struct $6VECTOR* MAPXY$1 )
{
 double TMP$1492$1;
 double TMP$1493$1;
 boolean fb$result$1;
 __builtin_memset( &fb$result$1, 0, 1ll );
 label$1570:;
 double X$1;
 __builtin_memset( &X$1, 0, 8ll );
 double Y$1;
 __builtin_memset( &Y$1, 0, 8ll );
 int64 XP$1;
 __builtin_memset( &XP$1, 0, 8ll );
 int64 YP$1;
 __builtin_memset( &YP$1, 0, 8ll );
 int64 PTR1$1;
 __builtin_memset( &PTR1$1, 0, 8ll );
 int64 MAPID$1;
 MAPID$1 = *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 184ll);
 if( (*(double*)MAPXY$1 * *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 192ll)) >= 0x0p+0 ) goto label$1572;
 TMP$1492$1 = -(*(double*)MAPXY$1) * *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 192ll);
 goto label$1576;
 label$1572:;
 TMP$1492$1 = *(double*)MAPXY$1 * *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 192ll);
 label$1576:;
 X$1 = TMP$1492$1;
 if( (*(double*)((uint8*)MAPXY$1 + 8ll) * *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 200ll)) >= 0x0p+0 ) goto label$1573;
 TMP$1493$1 = -(*(double*)((uint8*)MAPXY$1 + 8ll)) * *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 200ll);
 goto label$1577;
 label$1573:;
 TMP$1493$1 = *(double*)((uint8*)MAPXY$1 + 8ll) * *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 200ll);
 label$1577:;
 Y$1 = TMP$1493$1;
 XP$1 = ((int64)__builtin_nearbyint( X$1 * (double)(int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (MAPID$1 << (3ll & 63ll))) + 34ll) ));
 XP$1 = XP$1 % (int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (MAPID$1 << (3ll & 63ll))) + 34ll);
 YP$1 = ((int64)__builtin_nearbyint( Y$1 * (double)(int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (MAPID$1 << (3ll & 63ll))) + 38ll) ));
 YP$1 = YP$1 % (int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (MAPID$1 << (3ll & 63ll))) + 38ll);
 PTR1$1 = (YP$1 * (int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (MAPID$1 << (3ll & 63ll))) + 34ll)) + XP$1;
 if( (int64)*(uint8*)(*(uint8**)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (MAPID$1 << (3ll & 63ll))) + 72ll) + PTR1$1) <= 0ll ) goto label$1575;
 {
  fb$result$1 = (boolean)1ll;
  goto label$1571;
  label$1575:;
 }
 label$1571:;
 return fb$result$1;
}

void _ZN9RAYTRACER9DOBUMPMAPEllR6VECTORS1_S1_( struct $9RAYTRACER* THIS$1, int64 HITOBJID$1, int64 HITPOLYID$1, struct $6VECTOR* NORMAL$1, struct $6VECTOR* BNORMAL$1, struct $6VECTOR* MAPXY$1 )
{
 label$1578:;
 double X$1;
 __builtin_memset( &X$1, 0, 8ll );
 double Y$1;
 __builtin_memset( &Y$1, 0, 8ll );
 double L$1;
 __builtin_memset( &L$1, 0, 8ll );
 int64 XP$1;
 __builtin_memset( &XP$1, 0, 8ll );
 int64 YP$1;
 __builtin_memset( &YP$1, 0, 8ll );
 int64 MATID$1;
 __builtin_memset( &MATID$1, 0, 8ll );
 int64 MAPID$1;
 __builtin_memset( &MAPID$1, 0, 8ll );
 MATID$1 = *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (HITOBJID$1 << (3ll & 63ll))) + 112ll);
 MAPID$1 = *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 144ll);
 if( MAPID$1 <= -1ll ) goto label$1581;
 {
  X$1 = *(double*)MAPXY$1 * *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 152ll);
  Y$1 = *(double*)((uint8*)MAPXY$1 + 8ll) * *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 160ll);
  XP$1 = ((int64)__builtin_nearbyint( X$1 * (double)(int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (MAPID$1 << (3ll & 63ll))) + 34ll) ));
  XP$1 = XP$1 % (int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (MAPID$1 << (3ll & 63ll))) + 34ll);
  YP$1 = ((int64)__builtin_nearbyint( Y$1 * (double)(int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (MAPID$1 << (3ll & 63ll))) + 38ll) ));
  YP$1 = YP$1 % (int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (MAPID$1 << (3ll & 63ll))) + 38ll);
  double vr$55 = _ZN9RAYTRACER18GETHIGHTFIELDVALUEElll13BUMP_METHODESb( THIS$1, MAPID$1, XP$1, YP$1, 2ll, (boolean)0ll );
  L$1 = vr$55 * *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 168ll);
  if( L$1 != 0x0p+0 ) goto label$1583;
  {
   __builtin_memcpy( BNORMAL$1, NORMAL$1, 32 );
  }
  goto label$1582;
  label$1583:;
  {
   L$1 = L$1 + 0x1.p+0;
   *(double*)BNORMAL$1 = *(double*)NORMAL$1 * L$1;
   *(double*)((uint8*)BNORMAL$1 + 8ll) = *(double*)((uint8*)NORMAL$1 + 8ll) * L$1;
   *(double*)((uint8*)BNORMAL$1 + 16ll) = *(double*)((uint8*)NORMAL$1 + 16ll) * L$1;
  }
  label$1582:;
 }
 label$1581:;
 label$1580:;
 label$1579:;
}

void _ZN9RAYTRACER12SURFACECOLORElR6VECTORS1_( struct $9RAYTRACER* THIS$1, int64 HITOBJID$1, struct $6VECTOR* MAPXY$1, struct $6VECTOR* RETCOL$1 )
{
 label$1584:;
 int64 MATID$1;
 __builtin_memset( &MATID$1, 0, 8ll );
 int64 MAPID$1;
 __builtin_memset( &MAPID$1, 0, 8ll );
 int64 XP$1;
 __builtin_memset( &XP$1, 0, 8ll );
 int64 YP$1;
 __builtin_memset( &YP$1, 0, 8ll );
 int64 PTR1$1;
 __builtin_memset( &PTR1$1, 0, 8ll );
 double X$1;
 __builtin_memset( &X$1, 0, 8ll );
 double Y$1;
 __builtin_memset( &Y$1, 0, 8ll );
 struct $6VECTOR SURCOL$1;
 _ZN6VECTORC1Ev( &SURCOL$1 );
 MATID$1 = *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (HITOBJID$1 << (3ll & 63ll))) + 112ll);
 MAPID$1 = *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 104ll);
 if( MAPID$1 <= -1ll ) goto label$1587;
 {
  X$1 = *(double*)MAPXY$1 * *(double*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (MAPID$1 << (3ll & 63ll))) + 80ll);
  Y$1 = *(double*)((uint8*)MAPXY$1 + 8ll) * *(double*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (MAPID$1 << (3ll & 63ll))) + 88ll);
  XP$1 = ((int64)__builtin_nearbyint( X$1 * (double)(int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (MAPID$1 << (3ll & 63ll))) + 34ll) ));
  XP$1 = XP$1 % (int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (MAPID$1 << (3ll & 63ll))) + 34ll);
  YP$1 = ((int64)__builtin_nearbyint( Y$1 * (double)(int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (MAPID$1 << (3ll & 63ll))) + 38ll) ));
  YP$1 = YP$1 % (int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (MAPID$1 << (3ll & 63ll))) + 38ll);
  PTR1$1 = ((YP$1 * (int64)*(int32*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (MAPID$1 << (3ll & 63ll))) + 34ll)) * 3ll) + (XP$1 * 3ll);
  *(double*)&SURCOL$1 = (double)*(uint8*)(*(uint8**)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (MAPID$1 << (3ll & 63ll))) + 72ll) + PTR1$1);
  *(double*)&SURCOL$1 = *(double*)&SURCOL$1 * 0x1.010101010101p-8;
  *(double*)((uint8*)&SURCOL$1 + 8ll) = (double)*(uint8*)((uint8*)(*(uint8**)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (MAPID$1 << (3ll & 63ll))) + 72ll) + PTR1$1) + 1ll);
  *(double*)((uint8*)&SURCOL$1 + 8ll) = *(double*)((uint8*)&SURCOL$1 + 8ll) * 0x1.010101010101p-8;
  *(double*)((uint8*)&SURCOL$1 + 16ll) = (double)*(uint8*)((uint8*)(*(uint8**)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (MAPID$1 << (3ll & 63ll))) + 72ll) + PTR1$1) + 2ll);
  *(double*)((uint8*)&SURCOL$1 + 16ll) = *(double*)((uint8*)&SURCOL$1 + 16ll) * 0x1.010101010101p-8;
  *(double*)&SURCOL$1 = *(double*)&SURCOL$1 * *(double*)RETCOL$1;
  *(double*)((uint8*)&SURCOL$1 + 8ll) = *(double*)((uint8*)&SURCOL$1 + 8ll) * *(double*)((uint8*)RETCOL$1 + 8ll);
  *(double*)((uint8*)&SURCOL$1 + 16ll) = *(double*)((uint8*)&SURCOL$1 + 16ll) * *(double*)((uint8*)RETCOL$1 + 16ll);
  if( *(boolean*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 98ll) != (boolean)1ll ) goto label$1589;
  {
   *(double*)&SURCOL$1 = *(double*)&SURCOL$1 + (*(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 8ll) * *(double*)RETCOL$1);
   *(double*)((uint8*)&SURCOL$1 + 8ll) = *(double*)((uint8*)&SURCOL$1 + 8ll) + (*(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 16ll) * *(double*)((uint8*)RETCOL$1 + 8ll));
   *(double*)((uint8*)&SURCOL$1 + 16ll) = *(double*)((uint8*)&SURCOL$1 + 16ll) + (*(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 24ll) * *(double*)((uint8*)RETCOL$1 + 16ll));
  }
  label$1589:;
  label$1588:;
  *(double*)RETCOL$1 = *(double*)RETCOL$1 + *(double*)&SURCOL$1;
  *(double*)((uint8*)RETCOL$1 + 8ll) = *(double*)((uint8*)RETCOL$1 + 8ll) + *(double*)((uint8*)&SURCOL$1 + 8ll);
  *(double*)((uint8*)RETCOL$1 + 16ll) = *(double*)((uint8*)RETCOL$1 + 16ll) + *(double*)((uint8*)&SURCOL$1 + 16ll);
 }
 goto label$1586;
 label$1587:;
 {
  *(double*)RETCOL$1 = *(double*)RETCOL$1 + (*(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 8ll) * *(double*)RETCOL$1);
  *(double*)((uint8*)RETCOL$1 + 8ll) = *(double*)((uint8*)RETCOL$1 + 8ll) + (*(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 16ll) * *(double*)((uint8*)RETCOL$1 + 8ll));
  *(double*)((uint8*)RETCOL$1 + 16ll) = *(double*)((uint8*)RETCOL$1 + 16ll) + (*(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 24ll) * *(double*)((uint8*)RETCOL$1 + 16ll));
 }
 label$1586:;
 label$1585:;
}

struct $6VECTOR* _ZN9RAYTRACER2AVEddd( struct $9RAYTRACER* THIS$1, double X$1, double Y$1, double Z$1 )
{
 struct $6VECTOR* fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1590:;
 struct $6VECTOR* TMP$1;
 void* vr$1 = malloc( 32ull );
 TMP$1 = (struct $6VECTOR*)vr$1;
 *(double*)TMP$1 = X$1;
 *(double*)((uint8*)TMP$1 + 8ll) = Y$1;
 *(double*)((uint8*)TMP$1 + 16ll) = Z$1;
 fb$result$1 = TMP$1;
 goto label$1591;
 label$1591:;
 return fb$result$1;
}

struct $6VECTOR** _ZN9RAYTRACER4APV3EPP6VECTORlll( struct $9RAYTRACER* THIS$1, struct $6VECTOR** V$1, int64 V0$1, int64 V1$1, int64 V2$1 )
{
 struct $6VECTOR** fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1592:;
 struct $6VECTOR** TMP$1;
 void* vr$1 = malloc( 24ull );
 TMP$1 = (struct $6VECTOR**)vr$1;
 *TMP$1 = *(struct $6VECTOR**)((uint8*)V$1 + (V0$1 << (3ll & 63ll)));
 *(struct $6VECTOR**)((uint8*)TMP$1 + 8ll) = *(struct $6VECTOR**)((uint8*)V$1 + (V1$1 << (3ll & 63ll)));
 *(struct $6VECTOR**)((uint8*)TMP$1 + 16ll) = *(struct $6VECTOR**)((uint8*)V$1 + (V2$1 << (3ll & 63ll)));
 fb$result$1 = TMP$1;
 goto label$1593;
 label$1593:;
 return fb$result$1;
}

struct $6VECTOR** _ZN9RAYTRACER4APV4EPP6VECTORllll( struct $9RAYTRACER* THIS$1, struct $6VECTOR** V$1, int64 V0$1, int64 V1$1, int64 V2$1, int64 V3$1 )
{
 struct $6VECTOR** fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1594:;
 struct $6VECTOR** TMP$1;
 void* vr$1 = malloc( 32ull );
 TMP$1 = (struct $6VECTOR**)vr$1;
 *TMP$1 = *(struct $6VECTOR**)((uint8*)V$1 + (V0$1 << (3ll & 63ll)));
 *(struct $6VECTOR**)((uint8*)TMP$1 + 8ll) = *(struct $6VECTOR**)((uint8*)V$1 + (V1$1 << (3ll & 63ll)));
 *(struct $6VECTOR**)((uint8*)TMP$1 + 16ll) = *(struct $6VECTOR**)((uint8*)V$1 + (V2$1 << (3ll & 63ll)));
 *(struct $6VECTOR**)((uint8*)TMP$1 + 24ll) = *(struct $6VECTOR**)((uint8*)V$1 + (V3$1 << (3ll & 63ll)));
 fb$result$1 = TMP$1;
 goto label$1595;
 label$1595:;
 return fb$result$1;
}

int64 _ZN9RAYTRACER11ADDMATERIALEddddddddddbbbllll( struct $9RAYTRACER* THIS$1, double RED$1, double GREEN$1, double BLUE$1, double R_REFLECTION$1, double M_REFLECTION$1, double C_REFLECTION$1, double P_MATERIAL$1, double P_MIRROR$1, double TRANSPARENCY$1, double R_INDEX$1, boolean BUILDSHADOW$1, boolean RECEIVESHADOW$1, boolean MIXCOLORS$1, int64 COLORMAPID$1, int64 BUMPMAPID$1, int64 TRANSMAPID$1, int64 STAMPMAPID$1 )
{
 boolean TMP$1494$1;
 boolean TMP$1495$1;
 boolean TMP$1496$1;
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1596:;
 boolean FLAG$1;
 __builtin_memset( &FLAG$1, 0, 1ll );
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &RED$1, 0x0p+0, 0x1.p+0 );
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &GREEN$1, 0x0p+0, 0x1.p+0 );
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &BLUE$1, 0x0p+0, 0x1.p+0 );
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &R_REFLECTION$1, 0x0p+0, 0x1.p+0 );
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &M_REFLECTION$1, 0x0p+0, 0x1.p+0 );
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &C_REFLECTION$1, 0x1.0624DD2F1A9FCp-10, 0x1.p+0 );
 C_REFLECTION$1 = C_REFLECTION$1 * 0x1.2Cp+7;
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &P_MATERIAL$1, 0x0p+0, 0x1.p+0 );
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &P_MIRROR$1, 0x0p+0, 0x1.p+0 );
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &R_INDEX$1, 0x0p+0, 0x1.p+0 );
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &TRANSPARENCY$1, 0x0p+0, 0x1.p+0 );
 if( (int64)-BUILDSHADOW$1 == 0ll ) goto label$1598;
 TMP$1494$1 = (boolean)1ll;
 goto label$1609;
 label$1598:;
 TMP$1494$1 = (boolean)0ll;
 label$1609:;
 BUILDSHADOW$1 = TMP$1494$1;
 if( (int64)-RECEIVESHADOW$1 == 0ll ) goto label$1599;
 TMP$1495$1 = (boolean)1ll;
 goto label$1610;
 label$1599:;
 TMP$1495$1 = (boolean)0ll;
 label$1610:;
 RECEIVESHADOW$1 = TMP$1495$1;
 if( (int64)-MIXCOLORS$1 == 0ll ) goto label$1600;
 TMP$1496$1 = (boolean)1ll;
 goto label$1611;
 label$1600:;
 TMP$1496$1 = (boolean)0ll;
 label$1611:;
 MIXCOLORS$1 = TMP$1496$1;
 void* vr$20 = realloc( *(void**)((uint8*)THIS$1 + 248ll), (uint64)((*(int64*)((uint8*)THIS$1 + 240ll) << (3ll & 63ll)) + 8ll) );
 *(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) = (struct $8MATERIAL**)vr$20;
 void* vr$22 = calloc( 264ull, 1ull );
 *(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (*(int64*)((uint8*)THIS$1 + 240ll) << (3ll & 63ll))) = (struct $8MATERIAL*)vr$22;
 *(int64*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (*(int64*)((uint8*)THIS$1 + 240ll) << (3ll & 63ll))) = *(int64*)((uint8*)THIS$1 + 240ll);
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (*(int64*)((uint8*)THIS$1 + 240ll) << (3ll & 63ll))) + 8ll) = RED$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (*(int64*)((uint8*)THIS$1 + 240ll) << (3ll & 63ll))) + 16ll) = GREEN$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (*(int64*)((uint8*)THIS$1 + 240ll) << (3ll & 63ll))) + 24ll) = BLUE$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (*(int64*)((uint8*)THIS$1 + 240ll) << (3ll & 63ll))) + 40ll) = R_REFLECTION$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (*(int64*)((uint8*)THIS$1 + 240ll) << (3ll & 63ll))) + 48ll) = M_REFLECTION$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (*(int64*)((uint8*)THIS$1 + 240ll) << (3ll & 63ll))) + 56ll) = C_REFLECTION$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (*(int64*)((uint8*)THIS$1 + 240ll) << (3ll & 63ll))) + 64ll) = P_MATERIAL$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (*(int64*)((uint8*)THIS$1 + 240ll) << (3ll & 63ll))) + 72ll) = P_MIRROR$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (*(int64*)((uint8*)THIS$1 + 240ll) << (3ll & 63ll))) + 80ll) = TRANSPARENCY$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (*(int64*)((uint8*)THIS$1 + 240ll) << (3ll & 63ll))) + 88ll) = R_INDEX$1;
 *(boolean*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (*(int64*)((uint8*)THIS$1 + 240ll) << (3ll & 63ll))) + 96ll) = BUILDSHADOW$1;
 *(boolean*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (*(int64*)((uint8*)THIS$1 + 240ll) << (3ll & 63ll))) + 97ll) = RECEIVESHADOW$1;
 *(boolean*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (*(int64*)((uint8*)THIS$1 + 240ll) << (3ll & 63ll))) + 98ll) = MIXCOLORS$1;
 *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (*(int64*)((uint8*)THIS$1 + 240ll) << (3ll & 63ll))) + 104ll) = COLORMAPID$1;
 *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (*(int64*)((uint8*)THIS$1 + 240ll) << (3ll & 63ll))) + 144ll) = BUMPMAPID$1;
 *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (*(int64*)((uint8*)THIS$1 + 240ll) << (3ll & 63ll))) + 224ll) = TRANSMAPID$1;
 *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (*(int64*)((uint8*)THIS$1 + 240ll) << (3ll & 63ll))) + 184ll) = STAMPMAPID$1;
 if( *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (*(int64*)((uint8*)THIS$1 + 240ll) << (3ll & 63ll))) + 104ll) <= -1ll ) goto label$1602;
 {
  __builtin_memcpy( (struct $6VECTOR*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (*(int64*)((uint8*)THIS$1 + 240ll) << (3ll & 63ll))) + 112ll), (struct $6VECTOR*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (*(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (*(int64*)((uint8*)THIS$1 + 240ll) << (3ll & 63ll))) + 104ll) << (3ll & 63ll))) + 80ll), 32 );
  FLAG$1 = (boolean)1ll;
 }
 label$1602:;
 label$1601:;
 if( *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (*(int64*)((uint8*)THIS$1 + 240ll) << (3ll & 63ll))) + 144ll) <= -1ll ) goto label$1604;
 {
  __builtin_memcpy( (struct $6VECTOR*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (*(int64*)((uint8*)THIS$1 + 240ll) << (3ll & 63ll))) + 152ll), (struct $6VECTOR*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (*(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (*(int64*)((uint8*)THIS$1 + 240ll) << (3ll & 63ll))) + 144ll) << (3ll & 63ll))) + 80ll), 32 );
  FLAG$1 = (boolean)1ll;
 }
 label$1604:;
 label$1603:;
 if( *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (*(int64*)((uint8*)THIS$1 + 240ll) << (3ll & 63ll))) + 224ll) <= -1ll ) goto label$1606;
 {
  __builtin_memcpy( (struct $6VECTOR*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (*(int64*)((uint8*)THIS$1 + 240ll) << (3ll & 63ll))) + 232ll), (struct $6VECTOR*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (*(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (*(int64*)((uint8*)THIS$1 + 240ll) << (3ll & 63ll))) + 224ll) << (3ll & 63ll))) + 80ll), 32 );
  FLAG$1 = (boolean)1ll;
 }
 label$1606:;
 label$1605:;
 if( *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (*(int64*)((uint8*)THIS$1 + 240ll) << (3ll & 63ll))) + 184ll) <= -1ll ) goto label$1608;
 {
  __builtin_memcpy( (struct $6VECTOR*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (*(int64*)((uint8*)THIS$1 + 240ll) << (3ll & 63ll))) + 192ll), (struct $6VECTOR*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (*(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (*(int64*)((uint8*)THIS$1 + 240ll) << (3ll & 63ll))) + 184ll) << (3ll & 63ll))) + 80ll), 32 );
  FLAG$1 = (boolean)1ll;
 }
 label$1608:;
 label$1607:;
 *(boolean*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (*(int64*)((uint8*)THIS$1 + 240ll) << (3ll & 63ll))) + 99ll) = FLAG$1;
 fb$result$1 = *(int64*)((uint8*)THIS$1 + 240ll);
 *(int64*)((uint8*)THIS$1 + 240ll) = *(int64*)((uint8*)THIS$1 + 240ll) + 1ll;
 label$1597:;
 return fb$result$1;
}

void _ZN9RAYTRACER14CHANGEMATERIALElddddddddddbbbllll( struct $9RAYTRACER* THIS$1, int64 MATID$1, double RED$1, double GREEN$1, double BLUE$1, double R_REFLECTION$1, double M_REFLECTION$1, double C_REFLECTION$1, double P_MATERIAL$1, double P_MIRROR$1, double TRANSPARENCY$1, double R_INDEX$1, boolean BUILDSHADOW$1, boolean RECEIVESHADOW$1, boolean MIXCOLORS$1, int64 COLORMAPID$1, int64 BUMPMAPID$1, int64 TRANSMAPID$1, int64 STAMPMAPID$1 )
{
 boolean TMP$1497$1;
 boolean TMP$1498$1;
 boolean TMP$1499$1;
 label$1612:;
 if( ((int64)-(MATID$1 < 0ll) | (int64)-(MATID$1 >= *(int64*)((uint8*)THIS$1 + 240ll))) == 0ll ) goto label$1615;
 {
  goto label$1613;
  label$1615:;
 }
 boolean FLAG$1;
 __builtin_memset( &FLAG$1, 0, 1ll );
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &RED$1, 0x0p+0, 0x1.p+0 );
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &GREEN$1, 0x0p+0, 0x1.p+0 );
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &BLUE$1, 0x0p+0, 0x1.p+0 );
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &R_REFLECTION$1, 0x0p+0, 0x1.p+0 );
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &M_REFLECTION$1, 0x0p+0, 0x1.p+0 );
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &C_REFLECTION$1, 0x1.0624DD2F1A9FCp-10, 0x1.p+0 );
 C_REFLECTION$1 = C_REFLECTION$1 * 0x1.2Cp+7;
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &P_MATERIAL$1, 0x0p+0, 0x1.p+0 );
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &P_MIRROR$1, 0x0p+0, 0x1.p+0 );
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &R_INDEX$1, 0x0p+0, 0x1.p+0 );
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &TRANSPARENCY$1, 0x0p+0, 0x1.p+0 );
 if( (int64)-BUILDSHADOW$1 == 0ll ) goto label$1616;
 TMP$1497$1 = (boolean)1ll;
 goto label$1627;
 label$1616:;
 TMP$1497$1 = (boolean)0ll;
 label$1627:;
 BUILDSHADOW$1 = TMP$1497$1;
 if( (int64)-RECEIVESHADOW$1 == 0ll ) goto label$1617;
 TMP$1498$1 = (boolean)1ll;
 goto label$1628;
 label$1617:;
 TMP$1498$1 = (boolean)0ll;
 label$1628:;
 RECEIVESHADOW$1 = TMP$1498$1;
 if( (int64)-MIXCOLORS$1 == 0ll ) goto label$1618;
 TMP$1499$1 = (boolean)1ll;
 goto label$1629;
 label$1618:;
 TMP$1499$1 = (boolean)0ll;
 label$1629:;
 MIXCOLORS$1 = TMP$1499$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 8ll) = RED$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 16ll) = GREEN$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 24ll) = BLUE$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 40ll) = R_REFLECTION$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 48ll) = M_REFLECTION$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 56ll) = C_REFLECTION$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 64ll) = P_MATERIAL$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 72ll) = P_MIRROR$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 80ll) = TRANSPARENCY$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 88ll) = R_INDEX$1;
 *(boolean*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 96ll) = BUILDSHADOW$1;
 *(boolean*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 97ll) = RECEIVESHADOW$1;
 *(boolean*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 98ll) = MIXCOLORS$1;
 *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 104ll) = COLORMAPID$1;
 *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 144ll) = BUMPMAPID$1;
 *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 224ll) = TRANSMAPID$1;
 *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 184ll) = STAMPMAPID$1;
 if( *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 104ll) <= -1ll ) goto label$1620;
 {
  __builtin_memcpy( (struct $6VECTOR*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 112ll), (struct $6VECTOR*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (*(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 104ll) << (3ll & 63ll))) + 80ll), 32 );
  FLAG$1 = (boolean)1ll;
 }
 label$1620:;
 label$1619:;
 if( *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 144ll) <= -1ll ) goto label$1622;
 {
  __builtin_memcpy( (struct $6VECTOR*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 152ll), (struct $6VECTOR*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (*(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 144ll) << (3ll & 63ll))) + 80ll), 32 );
  FLAG$1 = (boolean)1ll;
 }
 label$1622:;
 label$1621:;
 if( *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 224ll) <= -1ll ) goto label$1624;
 {
  __builtin_memcpy( (struct $6VECTOR*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 232ll), (struct $6VECTOR*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (*(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 224ll) << (3ll & 63ll))) + 80ll), 32 );
  FLAG$1 = (boolean)1ll;
 }
 label$1624:;
 label$1623:;
 if( *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 184ll) <= -1ll ) goto label$1626;
 {
  __builtin_memcpy( (struct $6VECTOR*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 192ll), (struct $6VECTOR*)((uint8*)*(struct $5MAP2D**)((uint8*)*(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) + (*(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 184ll) << (3ll & 63ll))) + 80ll), 32 );
  FLAG$1 = (boolean)1ll;
 }
 label$1626:;
 label$1625:;
 *(boolean*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 99ll) = FLAG$1;
 label$1613:;
}

void _ZN9RAYTRACER17SETCOLORMAPFACTORElddd( struct $9RAYTRACER* THIS$1, int64 MATID$1, double X$1, double Y$1, double Z$1 )
{
 label$1630:;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 112ll) = X$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 120ll) = Y$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 128ll) = Z$1;
 label$1631:;
}

void _ZN9RAYTRACER16SETBUMPMAPFACTORElddd( struct $9RAYTRACER* THIS$1, int64 MATID$1, double X$1, double Y$1, double Z$1 )
{
 label$1632:;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 152ll) = X$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 160ll) = Y$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 168ll) = Z$1;
 label$1633:;
}

void _ZN9RAYTRACER17SETTRANSMAPFACTORElddd( struct $9RAYTRACER* THIS$1, int64 MATID$1, double X$1, double Y$1, double Z$1 )
{
 label$1634:;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 232ll) = X$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 240ll) = Y$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 248ll) = Z$1;
 label$1635:;
}

void _ZN9RAYTRACER17SETSTAMPMAPFACTORElddd( struct $9RAYTRACER* THIS$1, int64 MATID$1, double X$1, double Y$1, double Z$1 )
{
 label$1636:;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 192ll) = X$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 200ll) = Y$1;
 *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 208ll) = Z$1;
 label$1637:;
}

int64 _ZN9RAYTRACER13ADDMATHSPHEREEddddl( struct $9RAYTRACER* THIS$1, double XPOS$1, double YPOS$1, double ZPOS$1, double RADIUS$1, int64 MATID$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1638:;
 if( ((int64)-(MATID$1 < 0ll) | (int64)-(MATID$1 >= *(int64*)((uint8*)THIS$1 + 240ll))) == 0ll ) goto label$1641;
 {
  MATID$1 = 0ll;
  label$1641:;
 }
 void* vr$9 = realloc( *(void**)((uint8*)THIS$1 + 264ll), (uint64)((*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll)) + 8ll) );
 *(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) = (struct $8OBJECT3D**)vr$9;
 void* vr$11 = calloc( 160ull, 1ull );
 *(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) = (struct $8OBJECT3D*)vr$11;
 *($14OBJECT3D_TYPES*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) = 0ll;
 *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) + 80ll) = XPOS$1;
 *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) + 88ll) = YPOS$1;
 *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) + 96ll) = ZPOS$1;
 *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) + 120ll) = RADIUS$1;
 *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) + 112ll) = MATID$1;
 _ZN9RAYTRACER18GETOBJECTSCREENRECEl( THIS$1, *(int64*)((uint8*)THIS$1 + 256ll) );
 fb$result$1 = *(int64*)((uint8*)THIS$1 + 256ll);
 *(int64*)((uint8*)THIS$1 + 256ll) = *(int64*)((uint8*)THIS$1 + 256ll) + 1ll;
 label$1639:;
 return fb$result$1;
}

int64 _ZN9RAYTRACER6ADDBOXEddddddl( struct $9RAYTRACER* THIS$1, double XPOS$1, double YPOS$1, double ZPOS$1, double XSIZE$1, double YSIZE$1, double ZSIZE$1, int64 MATID$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1642:;
 if( ((int64)-(MATID$1 < 0ll) | (int64)-(MATID$1 >= *(int64*)((uint8*)THIS$1 + 240ll))) == 0ll ) goto label$1645;
 {
  MATID$1 = 0ll;
  label$1645:;
 }
 if( XSIZE$1 >= 0x1.p+0 ) goto label$1647;
 {
  XSIZE$1 = 0x1.p+0;
  label$1647:;
 }
 if( YSIZE$1 >= 0x1.p+0 ) goto label$1649;
 {
  YSIZE$1 = 0x1.p+0;
  label$1649:;
 }
 if( ZSIZE$1 >= 0x1.p+0 ) goto label$1651;
 {
  ZSIZE$1 = 0x1.p+0;
  label$1651:;
 }
 double XM$1;
 XM$1 = XSIZE$1 * 0x1.p-1;
 double YM$1;
 YM$1 = YSIZE$1 * 0x1.p-1;
 double ZM$1;
 ZM$1 = ZSIZE$1 * 0x1.p-1;
 void* vr$12 = realloc( *(void**)((uint8*)THIS$1 + 264ll), (uint64)((*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll)) + 8ll) );
 *(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) = (struct $8OBJECT3D**)vr$12;
 void* vr$14 = calloc( 160ull, 1ull );
 *(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) = (struct $8OBJECT3D*)vr$14;
 *($14OBJECT3D_TYPES*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) = 1ll;
 *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) + 112ll) = MATID$1;
 *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) + 80ll) = XPOS$1;
 *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) + 88ll) = YPOS$1;
 *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) + 96ll) = ZPOS$1;
 *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) + 128ll) = 8ll;
 void* vr$49 = malloc( 64ull );
 *(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) + 136ll) = (struct $6VECTOR**)vr$49;
 struct $6VECTOR* vr$57 = _ZN9RAYTRACER2AVEddd( THIS$1, -XM$1, YM$1, -ZM$1 );
 *(*(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) + 136ll)) = vr$57;
 struct $6VECTOR* vr$67 = _ZN9RAYTRACER2AVEddd( THIS$1, -XM$1, -YM$1, -ZM$1 );
 *(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) + 136ll) + 8ll) = vr$67;
 struct $6VECTOR* vr$76 = _ZN9RAYTRACER2AVEddd( THIS$1, XM$1, -YM$1, -ZM$1 );
 *(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) + 136ll) + 16ll) = vr$76;
 struct $6VECTOR* vr$84 = _ZN9RAYTRACER2AVEddd( THIS$1, XM$1, YM$1, -ZM$1 );
 *(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) + 136ll) + 24ll) = vr$84;
 struct $6VECTOR* vr$91 = _ZN9RAYTRACER2AVEddd( THIS$1, XM$1, YM$1, ZM$1 );
 *(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) + 136ll) + 32ll) = vr$91;
 struct $6VECTOR* vr$99 = _ZN9RAYTRACER2AVEddd( THIS$1, XM$1, -YM$1, ZM$1 );
 *(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) + 136ll) + 40ll) = vr$99;
 struct $6VECTOR* vr$108 = _ZN9RAYTRACER2AVEddd( THIS$1, -XM$1, -YM$1, ZM$1 );
 *(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) + 136ll) + 48ll) = vr$108;
 struct $6VECTOR* vr$116 = _ZN9RAYTRACER2AVEddd( THIS$1, -XM$1, YM$1, ZM$1 );
 *(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) + 136ll) + 56ll) = vr$116;
 {
  int64 I$2;
  I$2 = 0ll;
  int64 TMP$1500$2;
  TMP$1500$2 = *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) + 128ll) + -1ll;
  goto label$1652;
  label$1655:;
  {
   *(double*)*(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) + 136ll) + (I$2 << (3ll & 63ll))) = *(double*)*(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) + 136ll) + (I$2 << (3ll & 63ll))) + XPOS$1;
   *(double*)((uint8*)*(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) + 136ll) + (I$2 << (3ll & 63ll))) + 8ll) = *(double*)((uint8*)*(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) + 136ll) + (I$2 << (3ll & 63ll))) + 8ll) + YPOS$1;
   *(double*)((uint8*)*(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) + 136ll) + (I$2 << (3ll & 63ll))) + 16ll) = *(double*)((uint8*)*(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) + 136ll) + (I$2 << (3ll & 63ll))) + 16ll) + ZPOS$1;
  }
  label$1653:;
  I$2 = I$2 + 1ll;
  label$1652:;
  if( I$2 <= TMP$1500$2 ) goto label$1655;
  label$1654:;
 }
 *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) + 144ll) = 6ll;
 void* vr$186 = malloc( 48ull );
 *(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) + 152ll) = (struct $4POLY**)vr$186;
 {
  int64 I$2;
  I$2 = 0ll;
  int64 TMP$1501$2;
  TMP$1501$2 = *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) + 144ll) + -1ll;
  goto label$1656;
  label$1659:;
  {
   void* vr$198 = malloc( 160ull );
   *(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) + 152ll) + (I$2 << (3ll & 63ll))) = (struct $4POLY*)vr$198;
   *(int64*)((uint8*)*(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) + 152ll) + (I$2 << (3ll & 63ll))) + 72ll) = 4ll;
  }
  label$1657:;
  I$2 = I$2 + 1ll;
  label$1656:;
  if( I$2 <= TMP$1501$2 ) goto label$1659;
  label$1658:;
 }
 struct $6VECTOR** vr$220 = _ZN9RAYTRACER4APV4EPP6VECTORllll( THIS$1, *(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) + 136ll), 0ll, 1ll, 2ll, 3ll );
 *(struct $6VECTOR***)((uint8*)*(*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) + 152ll)) + 80ll) = vr$220;
 struct $6VECTOR** vr$233 = _ZN9RAYTRACER4APV4EPP6VECTORllll( THIS$1, *(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) + 136ll), 3ll, 2ll, 5ll, 4ll );
 *(struct $6VECTOR***)((uint8*)*(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) + 152ll) + 8ll) + 80ll) = vr$233;
 struct $6VECTOR** vr$246 = _ZN9RAYTRACER4APV4EPP6VECTORllll( THIS$1, *(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) + 136ll), 4ll, 5ll, 6ll, 7ll );
 *(struct $6VECTOR***)((uint8*)*(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) + 152ll) + 16ll) + 80ll) = vr$246;
 struct $6VECTOR** vr$259 = _ZN9RAYTRACER4APV4EPP6VECTORllll( THIS$1, *(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) + 136ll), 7ll, 6ll, 1ll, 0ll );
 *(struct $6VECTOR***)((uint8*)*(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) + 152ll) + 24ll) + 80ll) = vr$259;
 struct $6VECTOR** vr$272 = _ZN9RAYTRACER4APV4EPP6VECTORllll( THIS$1, *(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) + 136ll), 7ll, 0ll, 3ll, 4ll );
 *(struct $6VECTOR***)((uint8*)*(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) + 152ll) + 32ll) + 80ll) = vr$272;
 struct $6VECTOR** vr$285 = _ZN9RAYTRACER4APV4EPP6VECTORllll( THIS$1, *(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) + 136ll), 1ll, 6ll, 5ll, 2ll );
 *(struct $6VECTOR***)((uint8*)*(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (*(int64*)((uint8*)THIS$1 + 256ll) << (3ll & 63ll))) + 152ll) + 40ll) + 80ll) = vr$285;
 _ZN9RAYTRACER10POLYHELPEREl( THIS$1, *(int64*)((uint8*)THIS$1 + 256ll) );
 fb$result$1 = *(int64*)((uint8*)THIS$1 + 256ll);
 *(int64*)((uint8*)THIS$1 + 256ll) = *(int64*)((uint8*)THIS$1 + 256ll) + 1ll;
 label$1643:;
 return fb$result$1;
}

void _ZN9RAYTRACER17SETOBJECTPOSITIONElddd( struct $9RAYTRACER* THIS$1, int64 ID$1, double XPOS$1, double YPOS$1, double ZPOS$1 )
{
 label$1660:;
 *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (ID$1 << (3ll & 63ll))) + 80ll) = XPOS$1;
 *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (ID$1 << (3ll & 63ll))) + 88ll) = YPOS$1;
 *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (ID$1 << (3ll & 63ll))) + 96ll) = ZPOS$1;
 _ZN9RAYTRACER18GETOBJECTSCREENRECEl( THIS$1, ID$1 );
 label$1661:;
}

int64 _ZN9RAYTRACER13ADDPOINTLIGHTEdddddddb( struct $9RAYTRACER* THIS$1, double XPOS$1, double YPOS$1, double ZPOS$1, double MAXWIDTH$1, double RED$1, double GREEN$1, double BLUE$1, boolean BUILDSHADOW$1 )
{
 boolean TMP$1502$1;
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$1662:;
 if( MAXWIDTH$1 >= 0x1.p+0 ) goto label$1665;
 {
  MAXWIDTH$1 = 0x1.p+0;
  label$1665:;
 }
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &RED$1, 0x0p+0, 0x1.p+0 );
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &GREEN$1, 0x0p+0, 0x1.p+0 );
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &BLUE$1, 0x0p+0, 0x1.p+0 );
 if( (int64)-BUILDSHADOW$1 == 0ll ) goto label$1666;
 TMP$1502$1 = (boolean)1ll;
 goto label$1667;
 label$1666:;
 TMP$1502$1 = (boolean)0ll;
 label$1667:;
 BUILDSHADOW$1 = TMP$1502$1;
 void* vr$9 = realloc( *(void**)((uint8*)THIS$1 + 280ll), (uint64)((*(int64*)((uint8*)THIS$1 + 272ll) << (3ll & 63ll)) + 8ll) );
 *(struct $5LIGHT***)((uint8*)THIS$1 + 280ll) = (struct $5LIGHT**)vr$9;
 void* vr$11 = calloc( 200ull, 1ull );
 *(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 280ll) + (*(int64*)((uint8*)THIS$1 + 272ll) << (3ll & 63ll))) = (struct $5LIGHT*)vr$11;
 *($11LIGHT_TYPES*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 280ll) + (*(int64*)((uint8*)THIS$1 + 272ll) << (3ll & 63ll))) = 0ll;
 *(double*)((uint8*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 280ll) + (*(int64*)((uint8*)THIS$1 + 272ll) << (3ll & 63ll))) + 16ll) = XPOS$1;
 *(double*)((uint8*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 280ll) + (*(int64*)((uint8*)THIS$1 + 272ll) << (3ll & 63ll))) + 24ll) = YPOS$1;
 *(double*)((uint8*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 280ll) + (*(int64*)((uint8*)THIS$1 + 272ll) << (3ll & 63ll))) + 32ll) = ZPOS$1;
 *(double*)((uint8*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 280ll) + (*(int64*)((uint8*)THIS$1 + 272ll) << (3ll & 63ll))) + 176ll) = MAXWIDTH$1;
 *(double*)((uint8*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 280ll) + (*(int64*)((uint8*)THIS$1 + 272ll) << (3ll & 63ll))) + 144ll) = RED$1;
 *(double*)((uint8*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 280ll) + (*(int64*)((uint8*)THIS$1 + 272ll) << (3ll & 63ll))) + 152ll) = GREEN$1;
 *(double*)((uint8*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 280ll) + (*(int64*)((uint8*)THIS$1 + 272ll) << (3ll & 63ll))) + 160ll) = BLUE$1;
 *(boolean*)((uint8*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 280ll) + (*(int64*)((uint8*)THIS$1 + 272ll) << (3ll & 63ll))) + 192ll) = BUILDSHADOW$1;
 fb$result$1 = *(int64*)((uint8*)THIS$1 + 272ll);
 *(int64*)((uint8*)THIS$1 + 272ll) = *(int64*)((uint8*)THIS$1 + 272ll) + 1ll;
 label$1663:;
 return fb$result$1;
}

void _ZN9RAYTRACER16SETLIGHTPOSITIONElddd( struct $9RAYTRACER* THIS$1, int64 LIGHTID$1, double XPOS$1, double YPOS$1, double ZPOS$1 )
{
 label$1668:;
 if( ((int64)-(LIGHTID$1 < 0ll) | (int64)-(LIGHTID$1 >= *(int64*)((uint8*)THIS$1 + 272ll))) == 0ll ) goto label$1671;
 {
  goto label$1669;
  label$1671:;
 }
 *(double*)((uint8*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 280ll) + (LIGHTID$1 << (3ll & 63ll))) + 16ll) = XPOS$1;
 *(double*)((uint8*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 280ll) + (LIGHTID$1 << (3ll & 63ll))) + 24ll) = YPOS$1;
 *(double*)((uint8*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 280ll) + (LIGHTID$1 << (3ll & 63ll))) + 32ll) = ZPOS$1;
 label$1669:;
}

void _ZN9RAYTRACER16GETPOLYSCREENRECEll( struct $9RAYTRACER* THIS$1, int64 OBJID$1, int64 POLYID$1 )
{
 label$1672:;
 struct $6VECTOR* TMP$1;
 __builtin_memset( &TMP$1, 0, 8ll );
 double X$1;
 __builtin_memset( &X$1, 0, 8ll );
 double Y$1;
 __builtin_memset( &Y$1, 0, 8ll );
 if( *(int64*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) == 1ll ) goto label$1675;
 {
  goto label$1673;
  label$1675:;
 }
 if( *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 144ll) >= 1ll ) goto label$1677;
 {
  goto label$1673;
  label$1677:;
 }
 {
  struct $9RECTANGLE* TMP$1503$2;
  TMP$1503$2 = (struct $9RECTANGLE*)((uint8*)*(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 152ll) + (POLYID$1 << (3ll & 63ll))) + 8ll);
  *(double*)TMP$1503$2 = (double)*(int64*)THIS$1;
  *(double*)((uint8*)TMP$1503$2 + 8ll) = (double)*(int64*)((uint8*)THIS$1 + 8ll);
  *(double*)((uint8*)TMP$1503$2 + 32ll) = (double)-(*(int64*)THIS$1);
  *(double*)((uint8*)TMP$1503$2 + 40ll) = (double)-(*(int64*)((uint8*)THIS$1 + 8ll));
 }
 {
  int64 VC$2;
  VC$2 = 0ll;
  int64 TMP$1504$2;
  TMP$1504$2 = *(int64*)((uint8*)*(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 152ll) + (POLYID$1 << (3ll & 63ll))) + 72ll) + -1ll;
  goto label$1678;
  label$1681:;
  {
   TMP$1 = *(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)*(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 152ll) + (POLYID$1 << (3ll & 63ll))) + 80ll) + (VC$2 << (3ll & 63ll)));
   if( *(double*)((uint8*)TMP$1 + 16ll) <= 0x0p+0 ) goto label$1683;
   {
    X$1 = (double)*(int64*)((uint8*)THIS$1 + 16ll) + ((*(double*)TMP$1 * *(double*)((uint8*)THIS$1 + 32ll)) / *(double*)((uint8*)TMP$1 + 16ll));
    Y$1 = (double)*(int64*)((uint8*)THIS$1 + 24ll) - ((*(double*)((uint8*)TMP$1 + 8ll) * *(double*)((uint8*)THIS$1 + 32ll)) / *(double*)((uint8*)TMP$1 + 16ll));
    if( X$1 >= *(double*)((uint8*)*(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 152ll) + (POLYID$1 << (3ll & 63ll))) + 8ll) ) goto label$1685;
    {
     *(double*)((uint8*)*(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 152ll) + (POLYID$1 << (3ll & 63ll))) + 8ll) = X$1;
    }
    goto label$1684;
    label$1685:;
    if( X$1 <= *(double*)((uint8*)*(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 152ll) + (POLYID$1 << (3ll & 63ll))) + 40ll) ) goto label$1686;
    {
     *(double*)((uint8*)*(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 152ll) + (POLYID$1 << (3ll & 63ll))) + 40ll) = X$1;
    }
    label$1686:;
    label$1684:;
    if( Y$1 >= *(double*)((uint8*)*(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 152ll) + (POLYID$1 << (3ll & 63ll))) + 16ll) ) goto label$1688;
    {
     *(double*)((uint8*)*(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 152ll) + (POLYID$1 << (3ll & 63ll))) + 16ll) = Y$1;
    }
    goto label$1687;
    label$1688:;
    if( Y$1 <= *(double*)((uint8*)*(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 152ll) + (POLYID$1 << (3ll & 63ll))) + 48ll) ) goto label$1689;
    {
     *(double*)((uint8*)*(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 152ll) + (POLYID$1 << (3ll & 63ll))) + 48ll) = Y$1;
    }
    label$1689:;
    label$1687:;
   }
   label$1683:;
   label$1682:;
  }
  label$1679:;
  VC$2 = VC$2 + 1ll;
  label$1678:;
  if( VC$2 <= TMP$1504$2 ) goto label$1681;
  label$1680:;
 }
 label$1673:;
}

void _ZN9RAYTRACER18GETOBJECTSCREENRECEl( struct $9RAYTRACER* THIS$1, int64 OBJID$1 )
{
 label$1690:;
 double X$1;
 __builtin_memset( &X$1, 0, 8ll );
 double Y$1;
 __builtin_memset( &Y$1, 0, 8ll );
 struct $6VECTOR* LPVEC$1;
 __builtin_memset( &LPVEC$1, 0, 8ll );
 {
  struct $9RECTANGLE* TMP$1505$2;
  TMP$1505$2 = (struct $9RECTANGLE*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 16ll);
  *(double*)TMP$1505$2 = (double)*(int64*)THIS$1;
  *(double*)((uint8*)TMP$1505$2 + 8ll) = (double)*(int64*)((uint8*)THIS$1 + 8ll);
  *(double*)((uint8*)TMP$1505$2 + 32ll) = (double)-(*(int64*)THIS$1);
  *(double*)((uint8*)TMP$1505$2 + 40ll) = (double)-(*(int64*)((uint8*)THIS$1 + 8ll));
 }
 {
  $14OBJECT3D_TYPES TMP$1506$2;
  TMP$1506$2 = *($14OBJECT3D_TYPES*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll)));
  if( TMP$1506$2 != 1ll ) goto label$1693;
  label$1694:;
  {
   {
    int64 VC$4;
    VC$4 = 0ll;
    int64 TMP$1507$4;
    TMP$1507$4 = *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 128ll) + -1ll;
    goto label$1695;
    label$1698:;
    {
     LPVEC$1 = *(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 136ll) + (VC$4 << (3ll & 63ll)));
     if( *(double*)((uint8*)LPVEC$1 + 16ll) == 0x0p+0 ) goto label$1700;
     {
      X$1 = (double)*(int64*)((uint8*)THIS$1 + 16ll) + ((*(double*)LPVEC$1 * *(double*)((uint8*)THIS$1 + 32ll)) / *(double*)((uint8*)LPVEC$1 + 16ll));
      Y$1 = (double)*(int64*)((uint8*)THIS$1 + 24ll) - ((*(double*)((uint8*)LPVEC$1 + 8ll) * *(double*)((uint8*)THIS$1 + 32ll)) / *(double*)((uint8*)LPVEC$1 + 16ll));
      if( X$1 >= *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 16ll) ) goto label$1702;
      {
       *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 16ll) = X$1;
      }
      goto label$1701;
      label$1702:;
      if( X$1 <= *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 48ll) ) goto label$1703;
      {
       *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 48ll) = X$1;
      }
      label$1703:;
      label$1701:;
      if( Y$1 >= *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 24ll) ) goto label$1705;
      {
       *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 24ll) = Y$1;
      }
      goto label$1704;
      label$1705:;
      if( Y$1 <= *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 56ll) ) goto label$1706;
      {
       *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 56ll) = Y$1;
      }
      label$1706:;
      label$1704:;
     }
     label$1700:;
     label$1699:;
    }
    label$1696:;
    VC$4 = VC$4 + 1ll;
    label$1695:;
    if( VC$4 <= TMP$1507$4 ) goto label$1698;
    label$1697:;
   }
  }
  goto label$1692;
  label$1693:;
  if( TMP$1506$2 != 0ll ) goto label$1707;
  label$1708:;
  {
   {
    struct $6VECTOR* TMP$1508$4;
    TMP$1508$4 = (struct $6VECTOR*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 80ll);
    X$1 = (double)*(int64*)((uint8*)THIS$1 + 16ll) + (((*(double*)TMP$1508$4 - (*(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 120ll) * 0x1.199999999999Ap+0)) * *(double*)((uint8*)THIS$1 + 32ll)) / *(double*)((uint8*)TMP$1508$4 + 16ll));
    Y$1 = (double)*(int64*)((uint8*)THIS$1 + 24ll) - (((*(double*)((uint8*)TMP$1508$4 + 8ll) + (*(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 120ll) * 0x1.199999999999Ap+0)) * *(double*)((uint8*)THIS$1 + 32ll)) / *(double*)((uint8*)TMP$1508$4 + 16ll));
   }
   {
    struct $9RECTANGLE* TMP$1509$4;
    TMP$1509$4 = (struct $9RECTANGLE*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 16ll);
    if( X$1 >= *(double*)TMP$1509$4 ) goto label$1710;
    {
     *(double*)TMP$1509$4 = X$1;
    }
    goto label$1709;
    label$1710:;
    if( X$1 <= *(double*)((uint8*)TMP$1509$4 + 32ll) ) goto label$1711;
    {
     *(double*)((uint8*)TMP$1509$4 + 32ll) = X$1;
    }
    label$1711:;
    label$1709:;
    if( Y$1 >= *(double*)((uint8*)TMP$1509$4 + 8ll) ) goto label$1713;
    {
     *(double*)((uint8*)TMP$1509$4 + 8ll) = Y$1;
    }
    goto label$1712;
    label$1713:;
    if( Y$1 <= *(double*)((uint8*)TMP$1509$4 + 40ll) ) goto label$1714;
    {
     *(double*)((uint8*)TMP$1509$4 + 40ll) = Y$1;
    }
    label$1714:;
    label$1712:;
   }
   {
    struct $6VECTOR* TMP$1510$4;
    TMP$1510$4 = (struct $6VECTOR*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 80ll);
    X$1 = (double)*(int64*)((uint8*)THIS$1 + 16ll) + (((*(double*)TMP$1510$4 + (*(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 120ll) * 0x1.199999999999Ap+0)) * *(double*)((uint8*)THIS$1 + 32ll)) / *(double*)((uint8*)TMP$1510$4 + 16ll));
    Y$1 = (double)*(int64*)((uint8*)THIS$1 + 24ll) - (((*(double*)((uint8*)TMP$1510$4 + 8ll) - (*(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 120ll) * 0x1.199999999999Ap+0)) * *(double*)((uint8*)THIS$1 + 32ll)) / *(double*)((uint8*)TMP$1510$4 + 16ll));
   }
   {
    struct $9RECTANGLE* TMP$1511$4;
    TMP$1511$4 = (struct $9RECTANGLE*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 16ll);
    if( X$1 >= *(double*)TMP$1511$4 ) goto label$1716;
    {
     *(double*)TMP$1511$4 = X$1;
    }
    goto label$1715;
    label$1716:;
    if( X$1 <= *(double*)((uint8*)TMP$1511$4 + 32ll) ) goto label$1717;
    {
     *(double*)((uint8*)TMP$1511$4 + 32ll) = X$1;
    }
    label$1717:;
    label$1715:;
    if( Y$1 >= *(double*)((uint8*)TMP$1511$4 + 8ll) ) goto label$1719;
    {
     *(double*)((uint8*)TMP$1511$4 + 8ll) = Y$1;
    }
    goto label$1718;
    label$1719:;
    if( Y$1 <= *(double*)((uint8*)TMP$1511$4 + 40ll) ) goto label$1720;
    {
     *(double*)((uint8*)TMP$1511$4 + 40ll) = Y$1;
    }
    label$1720:;
    label$1718:;
   }
  }
  label$1707:;
  label$1692:;
 }
 label$1691:;
}

void _ZN9RAYTRACER10POLYHELPEREl( struct $9RAYTRACER* THIS$1, int64 OBJID$1 )
{
 label$1721:;
 struct $6VECTOR A$1;
 _ZN6VECTORC1Ev( &A$1 );
 struct $6VECTOR B$1;
 _ZN6VECTORC1Ev( &B$1 );
 struct $6VECTOR VP$1;
 _ZN6VECTORC1Ev( &VP$1 );
 struct $4POLY* LPPOLY$1;
 __builtin_memset( &LPPOLY$1, 0, 8ll );
 double L$1;
 __builtin_memset( &L$1, 0, 8ll );
 int64 N$1;
 __builtin_memset( &N$1, 0, 8ll );
 if( *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 144ll) >= 1ll ) goto label$1724;
 {
  goto label$1722;
  label$1724:;
 }
 {
  int64 PC$2;
  PC$2 = 0ll;
  int64 TMP$1512$2;
  TMP$1512$2 = *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 144ll) + -1ll;
  goto label$1725;
  label$1728:;
  {
   struct $6VECTOR TMP$1513$3;
   struct $6VECTOR TMP$1514$3;
   struct $6VECTOR TMP$1515$3;
   struct $6VECTOR TMP$1516$3;
   LPPOLY$1 = *(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 152ll) + (PC$2 << (3ll & 63ll)));
   N$1 = *(int64*)((uint8*)LPPOLY$1 + 72ll) + -1ll;
   _ZmiR6VECTORS0_( &TMP$1513$3, *(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)LPPOLY$1 + 80ll) + 8ll), *(*(struct $6VECTOR***)((uint8*)LPPOLY$1 + 80ll)) );
   __builtin_memcpy( &A$1, &TMP$1513$3, 32 );
   _ZmiR6VECTORS0_( &TMP$1514$3, *(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)LPPOLY$1 + 80ll) + (N$1 << (3ll & 63ll))), *(*(struct $6VECTOR***)((uint8*)LPPOLY$1 + 80ll)) );
   __builtin_memcpy( &B$1, &TMP$1514$3, 32 );
   _Zv24idivR6VECTORS0_( &TMP$1515$3, &A$1, &B$1 );
   __builtin_memcpy( (struct $6VECTOR*)((uint8*)LPPOLY$1 + 120ll), &TMP$1515$3, 32 );
   double vr$48 = _ZmlR6VECTORS0_( *(*(struct $6VECTOR***)((uint8*)LPPOLY$1 + 80ll)), (struct $6VECTOR*)((uint8*)LPPOLY$1 + 120ll) );
   *(double*)((uint8*)LPPOLY$1 + 152ll) = vr$48;
   _ZN6VECTOR10NORMALIZEDEv( &TMP$1516$3, (struct $6VECTOR*)((uint8*)LPPOLY$1 + 120ll) );
   __builtin_memcpy( (struct $6VECTOR*)((uint8*)LPPOLY$1 + 88ll), &TMP$1516$3, 32 );
   _ZN9RAYTRACER16GETPOLYSCREENRECEll( THIS$1, OBJID$1, PC$2 );
  }
  label$1726:;
  PC$2 = PC$2 + 1ll;
  label$1725:;
  if( PC$2 <= TMP$1512$2 ) goto label$1728;
  label$1727:;
 }
 _ZN9RAYTRACER18GETOBJECTSCREENRECEl( THIS$1, OBJID$1 );
 label$1722:;
}

boolean _ZN9RAYTRACER13ISPOLYONPIXELElldd( struct $9RAYTRACER* THIS$1, int64 OBJID$1, int64 POLYID$1, double X$1, double Y$1 )
{
 boolean fb$result$1;
 __builtin_memset( &fb$result$1, 0, 1ll );
 label$1729:;
 if( *(int64*)((uint8*)THIS$1 + 256ll) >= 1ll ) goto label$1732;
 {
  fb$result$1 = (boolean)0ll;
  goto label$1730;
  label$1732:;
 }
 if( *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 144ll) >= 1ll ) goto label$1734;
 {
  fb$result$1 = (boolean)0ll;
  goto label$1730;
  label$1734:;
 }
 {
  struct $9RECTANGLE* TMP$1517$2;
  TMP$1517$2 = (struct $9RECTANGLE*)((uint8*)*(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 152ll) + (POLYID$1 << (3ll & 63ll))) + 8ll);
  if( ((int64)-(X$1 >= *(double*)TMP$1517$2) & (int64)-(X$1 <= *(double*)((uint8*)TMP$1517$2 + 32ll))) == 0ll ) goto label$1736;
  {
   if( ((int64)-(Y$1 >= *(double*)((uint8*)TMP$1517$2 + 8ll)) & (int64)-(Y$1 <= *(double*)((uint8*)TMP$1517$2 + 40ll))) == 0ll ) goto label$1738;
   {
    fb$result$1 = (boolean)1ll;
    goto label$1730;
    label$1738:;
   }
  }
  label$1736:;
  label$1735:;
 }
 label$1730:;
 return fb$result$1;
}

boolean _ZN9RAYTRACER18ISANYOBJECTONPIXELEll( struct $9RAYTRACER* THIS$1, int64 X$1, int64 Y$1 )
{
 boolean fb$result$1;
 __builtin_memset( &fb$result$1, 0, 1ll );
 label$1739:;
 if( *(int64*)((uint8*)THIS$1 + 256ll) != 0ll ) goto label$1742;
 {
  fb$result$1 = (boolean)0ll;
  goto label$1740;
  label$1742:;
 }
 {
  int64 I$2;
  I$2 = 0ll;
  int64 TMP$1518$2;
  TMP$1518$2 = *(int64*)((uint8*)THIS$1 + 256ll) + -1ll;
  goto label$1743;
  label$1746:;
  {
   {
    struct $9RECTANGLE* TMP$1519$4;
    TMP$1519$4 = (struct $9RECTANGLE*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (I$2 << (3ll & 63ll))) + 16ll);
    if( ((int64)-((double)X$1 >= *(double*)TMP$1519$4) & (int64)-((double)X$1 <= *(double*)((uint8*)TMP$1519$4 + 32ll))) == 0ll ) goto label$1748;
    {
     if( ((int64)-((double)Y$1 >= *(double*)((uint8*)TMP$1519$4 + 8ll)) & (int64)-((double)Y$1 <= *(double*)((uint8*)TMP$1519$4 + 40ll))) == 0ll ) goto label$1750;
     {
      fb$result$1 = (boolean)1ll;
      goto label$1740;
      label$1750:;
     }
    }
    label$1748:;
    label$1747:;
   }
  }
  label$1744:;
  I$2 = I$2 + 1ll;
  label$1743:;
  if( I$2 <= TMP$1518$2 ) goto label$1746;
  label$1745:;
 }
 fb$result$1 = (boolean)0ll;
 goto label$1740;
 label$1740:;
 return fb$result$1;
}

void _ZN9RAYTRACER15BACKGROUNDCOLORER6VECTORS1_( struct $9RAYTRACER* THIS$1, struct $6VECTOR* RETCOL$1, struct $6VECTOR* RAYDIRECTION$1 )
{
 struct $6VECTOR TMP$1520$1;
 label$1751:;
 double L$1;
 double vr$0 = _ZmlR6VECTORS0_( RAYDIRECTION$1, RAYDIRECTION$1 );
 L$1 = vr$0;
 if( L$1 != 0x0p+0 ) goto label$1754;
 {
  *(double*)((uint8*)RAYDIRECTION$1 + 16ll) = 0x1.p+0;
 }
 goto label$1753;
 label$1754:;
 {
  L$1 = __builtin_sqrt( L$1 );
  *(double*)((uint8*)RAYDIRECTION$1 + 16ll) = *(double*)((uint8*)RAYDIRECTION$1 + 16ll) / L$1;
 }
 label$1753:;
 double vr$8 = pow( *(double*)((uint8*)RAYDIRECTION$1 + 16ll), *(double*)((uint8*)RAYDIRECTION$1 + 16ll) );
 L$1 = vr$8;
 _ZN9RAYTRACER6ADJUSTEPddd( THIS$1, &L$1, 0x0p+0, 0x1.p+0 );
 _ZmlR6VECTORd( &TMP$1520$1, (struct $6VECTOR*)((uint8*)THIS$1 + 88ll), L$1 );
 __builtin_memcpy( RETCOL$1, &TMP$1520$1, 32 );
 label$1752:;
}

uint32 _ZN9RAYTRACER9SHOWPOINTEll( struct $9RAYTRACER* THIS$1, int64 X$1, int64 Y$1 )
{
 uint32 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 4ll );
 label$1755:;
 struct $6VECTOR OSRC$1;
 _ZN6VECTORC1Ev( &OSRC$1 );
 struct $6VECTOR ODES$1;
 _ZN6VECTORC1Ev( &ODES$1 );
 struct $6VECTOR RGBCOL$1;
 _ZN6VECTORC1Ev( &RGBCOL$1 );
 int64 CURREC$1;
 __builtin_memset( &CURREC$1, 0, 8ll );
 {
  *(double*)&ODES$1 = (double)(X$1 - *(int64*)((uint8*)THIS$1 + 16ll)) * *(double*)((uint8*)THIS$1 + 40ll);
  *(double*)((uint8*)&ODES$1 + 8ll) = (double)(*(int64*)((uint8*)THIS$1 + 24ll) - Y$1) * *(double*)((uint8*)THIS$1 + 40ll);
  *(double*)((uint8*)&ODES$1 + 16ll) = 0x1.p+0;
 }
 boolean vr$15 = _ZN9RAYTRACER18ISANYOBJECTONPIXELEll( THIS$1, X$1, Y$1 );
 if( vr$15 != (boolean)1ll ) goto label$1758;
 {
  _ZN9RAYTRACER8RAYTRACEERK6VECTORS2_lRS0_( THIS$1, (struct $6VECTOR*)&OSRC$1, (struct $6VECTOR*)&ODES$1, CURREC$1, &RGBCOL$1 );
 }
 goto label$1757;
 label$1758:;
 {
  _ZN9RAYTRACER15BACKGROUNDCOLORER6VECTORS1_( THIS$1, &RGBCOL$1, &ODES$1 );
 }
 label$1757:;
 uint32 vr$22 = _ZN6VECTORcvjEv( &RGBCOL$1 );
 fb$result$1 = vr$22;
 goto label$1756;
 label$1756:;
 return fb$result$1;
}

boolean _ZN9RAYTRACER17ISMATHSPHEREONRAYER6VECTORS1_lS1_S1_S1_( struct $9RAYTRACER* THIS$1, struct $6VECTOR* RAYORIGIN$1, struct $6VECTOR* RAYDIRECTION$1, int64 OBJID$1, struct $6VECTOR* HITPOINT$1, struct $6VECTOR* NORMALE$1, struct $6VECTOR* MAPXY$1 )
{
 struct $6VECTOR TMP$1532$1;
 struct $6VECTOR TMP$1533$1;
 struct $6VECTOR TMP$1534$1;
 boolean fb$result$1;
 __builtin_memset( &fb$result$1, 0, 1ll );
 label$1759:;
 static struct $6VECTOR A$1;
 static int64 LABEL$1761$1;
 if( LABEL$1761$1 != 0ll ) goto label$1762;
 LABEL$1761$1 = 1ll;
 _ZN6VECTORC1Ev( &A$1 );
 label$1762:;
 static struct $6VECTOR B$1;
 static int64 LABEL$1763$1;
 if( LABEL$1763$1 != 0ll ) goto label$1764;
 LABEL$1763$1 = 1ll;
 _ZN6VECTORC1Ev( &B$1 );
 label$1764:;
 static struct $6VECTOR FOUNDPOINT$1;
 static int64 LABEL$1765$1;
 if( LABEL$1765$1 != 0ll ) goto label$1766;
 LABEL$1765$1 = 1ll;
 _ZN6VECTORC1Ev( &FOUNDPOINT$1 );
 label$1766:;
 static struct $6VECTOR FOUNDNORMALE$1;
 static int64 LABEL$1767$1;
 if( LABEL$1767$1 != 0ll ) goto label$1768;
 LABEL$1767$1 = 1ll;
 _ZN6VECTORC1Ev( &FOUNDNORMALE$1 );
 label$1768:;
 static boolean INSPHERE$1;
 static boolean FLAG$1;
 static double T1$1;
 static double T2$1;
 static double L$1;
 static double L2$1;
 static double M$1;
 static double N$1;
 static double RADIUS$1;
 static int64 MATID$1;
 FLAG$1 = (boolean)0ll;
 INSPHERE$1 = (boolean)0ll;
 MATID$1 = *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 112ll);
 RADIUS$1 = *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 120ll);
 double vr$9 = _ZmlR6VECTORS0_( RAYDIRECTION$1, RAYDIRECTION$1 );
 L$1 = vr$9;
 if( L$1 != 0x0p+0 ) goto label$1770;
 {
  L$1 = 0x1.0624DD2F1A9FCp-10;
  label$1770:;
 }
 M$1 = (((*(double*)RAYDIRECTION$1 * (*(double*)RAYORIGIN$1 - *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 80ll))) * 0x1.p+1) + ((*(double*)((uint8*)RAYDIRECTION$1 + 8ll) * (*(double*)((uint8*)RAYORIGIN$1 + 8ll) - *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 88ll))) * 0x1.p+1)) + ((*(double*)((uint8*)RAYDIRECTION$1 + 16ll) * (*(double*)((uint8*)RAYORIGIN$1 + 16ll) - *(double*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 96ll))) * 0x1.p+1);
 double vr$49 = _ZmlR6VECTORS0_( (struct $6VECTOR*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 80ll), (struct $6VECTOR*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 80ll) );
 double vr$50 = _ZmlR6VECTORS0_( RAYORIGIN$1, RAYORIGIN$1 );
 N$1 = vr$49 + vr$50;
 double vr$57 = _ZmlR6VECTORS0_( (struct $6VECTOR*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 80ll), RAYORIGIN$1 );
 N$1 = (N$1 - (vr$57 * 0x1.p+1)) - (RADIUS$1 * RADIUS$1);
 T1$1 = (M$1 * M$1) - ((L$1 * N$1) * 0x1.p+2);
 if( T1$1 >= 0x0p+0 ) goto label$1772;
 {
  fb$result$1 = (boolean)0ll;
  goto label$1760;
  label$1772:;
 }
 L2$1 = L$1 * 0x1.p+1;
 if( T1$1 != 0x0p+0 ) goto label$1774;
 {
  struct $6VECTOR TMP$1521$2;
  struct $6VECTOR TMP$1522$2;
  T1$1 = -M$1 / L2$1;
  if( T1$1 > 0x0p+0 ) goto label$1776;
  {
   fb$result$1 = (boolean)0ll;
   goto label$1760;
   label$1776:;
  }
  struct $6VECTOR* vr$70 = _ZmldR6VECTOR( &TMP$1521$2, T1$1, RAYDIRECTION$1 );
  _ZplR6VECTORS0_( &TMP$1522$2, RAYORIGIN$1, vr$70 );
  __builtin_memcpy( &FOUNDPOINT$1, &TMP$1522$2, 32 );
  INSPHERE$1 = (boolean)0ll;
  if( *(boolean*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 99ll) != (boolean)1ll ) goto label$1778;
  {
   _ZN9RAYTRACER8GETMAPXYEllR6VECTORS1_( THIS$1, OBJID$1, 0ll, &FOUNDPOINT$1, MAPXY$1 );
   if( *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 184ll) <= -1ll ) goto label$1780;
   {
    boolean vr$81 = _ZN9RAYTRACER19ISVISIBLEONSTAMPMAPElR6VECTOR( THIS$1, MATID$1, MAPXY$1 );
    FLAG$1 = vr$81;
   }
   goto label$1779;
   label$1780:;
   {
    FLAG$1 = (boolean)1ll;
   }
   label$1779:;
  }
  goto label$1777;
  label$1778:;
  {
   FLAG$1 = (boolean)1ll;
  }
  label$1777:;
 }
 goto label$1773;
 label$1774:;
 {
  T1$1 = (-M$1 - __builtin_sqrt( T1$1 )) / L2$1;
  T2$1 = (-M$1 + __builtin_sqrt( T1$1 )) / L2$1;
  if( T1$1 >= 0x1.0624DD2F1A9FCp-10 ) goto label$1782;
  {
   T1$1 = 0x0p+0;
   label$1782:;
  }
  if( T2$1 >= 0x1.0624DD2F1A9FCp-10 ) goto label$1784;
  {
   T2$1 = 0x0p+0;
   label$1784:;
  }
  if( ((int64)-(T1$1 == 0x0p+0) & (int64)-(T2$1 == 0x0p+0)) == 0ll ) goto label$1786;
  {
   fb$result$1 = (boolean)0ll;
   goto label$1760;
   label$1786:;
  }
  if( ((int64)-(T1$1 > 0x0p+0) & (int64)-(T2$1 > 0x0p+0)) == 0ll ) goto label$1788;
  {
   struct $6VECTOR TMP$1524$3;
   struct $6VECTOR TMP$1525$3;
   if( T2$1 >= T1$1 ) goto label$1790;
   {
    {
     double TMP$1523$5;
     TMP$1523$5 = T1$1;
     T1$1 = T2$1;
     T2$1 = TMP$1523$5;
    }
    label$1790:;
   }
   struct $6VECTOR* vr$97 = _ZmldR6VECTOR( &TMP$1524$3, T1$1, RAYDIRECTION$1 );
   _ZplR6VECTORS0_( &TMP$1525$3, RAYORIGIN$1, vr$97 );
   __builtin_memcpy( &FOUNDPOINT$1, &TMP$1525$3, 32 );
   if( *(boolean*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 99ll) != (boolean)1ll ) goto label$1792;
   {
    _ZN9RAYTRACER8GETMAPXYEllR6VECTORS1_( THIS$1, OBJID$1, 0ll, &FOUNDPOINT$1, MAPXY$1 );
    if( *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 184ll) <= -1ll ) goto label$1794;
    {
     boolean vr$108 = _ZN9RAYTRACER19ISVISIBLEONSTAMPMAPElR6VECTOR( THIS$1, MATID$1, MAPXY$1 );
     FLAG$1 = vr$108;
     if( FLAG$1 != (boolean)0ll ) goto label$1796;
     {
      struct $6VECTOR TMP$1526$6;
      struct $6VECTOR TMP$1527$6;
      INSPHERE$1 = (boolean)1ll;
      struct $6VECTOR* vr$110 = _ZmldR6VECTOR( &TMP$1526$6, T2$1, RAYDIRECTION$1 );
      _ZplR6VECTORS0_( &TMP$1527$6, RAYORIGIN$1, vr$110 );
      __builtin_memcpy( &FOUNDPOINT$1, &TMP$1527$6, 32 );
      _ZN9RAYTRACER8GETMAPXYEllR6VECTORS1_( THIS$1, OBJID$1, 0ll, &FOUNDPOINT$1, MAPXY$1 );
      boolean vr$113 = _ZN9RAYTRACER19ISVISIBLEONSTAMPMAPElR6VECTOR( THIS$1, MATID$1, MAPXY$1 );
      FLAG$1 = vr$113;
     }
     label$1796:;
     label$1795:;
    }
    goto label$1793;
    label$1794:;
    {
     FLAG$1 = (boolean)1ll;
    }
    label$1793:;
   }
   goto label$1791;
   label$1792:;
   {
    FLAG$1 = (boolean)1ll;
   }
   label$1791:;
  }
  goto label$1787;
  label$1788:;
  {
   if( T1$1 <= 0x0p+0 ) goto label$1798;
   {
    struct $6VECTOR TMP$1528$4;
    struct $6VECTOR TMP$1529$4;
    struct $6VECTOR* vr$115 = _ZmldR6VECTOR( &TMP$1528$4, T1$1, RAYDIRECTION$1 );
    _ZplR6VECTORS0_( &TMP$1529$4, RAYORIGIN$1, vr$115 );
    __builtin_memcpy( &FOUNDPOINT$1, &TMP$1529$4, 32 );
    INSPHERE$1 = (boolean)0ll;
   }
   goto label$1797;
   label$1798:;
   {
    struct $6VECTOR TMP$1530$4;
    struct $6VECTOR TMP$1531$4;
    struct $6VECTOR* vr$119 = _ZmldR6VECTOR( &TMP$1530$4, T2$1, RAYDIRECTION$1 );
    _ZplR6VECTORS0_( &TMP$1531$4, RAYORIGIN$1, vr$119 );
    __builtin_memcpy( &FOUNDPOINT$1, &TMP$1531$4, 32 );
    INSPHERE$1 = (boolean)1ll;
   }
   label$1797:;
   if( *(boolean*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 99ll) != (boolean)1ll ) goto label$1800;
   {
    _ZN9RAYTRACER8GETMAPXYEllR6VECTORS1_( THIS$1, OBJID$1, 0ll, &FOUNDPOINT$1, MAPXY$1 );
    if( *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 184ll) <= -1ll ) goto label$1802;
    {
     boolean vr$130 = _ZN9RAYTRACER19ISVISIBLEONSTAMPMAPElR6VECTOR( THIS$1, MATID$1, MAPXY$1 );
     FLAG$1 = vr$130;
    }
    goto label$1801;
    label$1802:;
    {
     FLAG$1 = (boolean)1ll;
    }
    label$1801:;
   }
   goto label$1799;
   label$1800:;
   {
    FLAG$1 = (boolean)1ll;
   }
   label$1799:;
  }
  label$1787:;
 }
 label$1773:;
 if( FLAG$1 != (boolean)0ll ) goto label$1804;
 {
  fb$result$1 = (boolean)0ll;
  goto label$1760;
  label$1804:;
 }
 _ZmiR6VECTORS0_( &TMP$1532$1, &FOUNDPOINT$1, (struct $6VECTOR*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 80ll) );
 __builtin_memcpy( NORMALE$1, &TMP$1532$1, 32 );
 struct $6VECTOR* vr$144 = _ZmlR6VECTORd( &TMP$1533$1, NORMALE$1, 0x1.004189374BC6Ap+0 );
 _ZplR6VECTORS0_( &TMP$1534$1, vr$144, (struct $6VECTOR*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 80ll) );
 __builtin_memcpy( HITPOINT$1, &TMP$1534$1, 32 );
 _ZN6VECTOR9NORMALIZEEv( NORMALE$1 );
 if( INSPHERE$1 != (boolean)1ll ) goto label$1806;
 {
  _ZN6VECTORmLEd( NORMALE$1, -0x1.p+0 );
  label$1806:;
 }
 fb$result$1 = (boolean)1ll;
 goto label$1760;
 label$1760:;
 return fb$result$1;
}

boolean _ZN9RAYTRACER14ISPOLYGONONRAYER6VECTORS1_lRlS1_S1_S1_( struct $9RAYTRACER* THIS$1, struct $6VECTOR* RAYORIGIN$1, struct $6VECTOR* RAYDIRECTION$1, int64 OBJID$1, int64* POLYID$1, struct $6VECTOR* HITPOINT$1, struct $6VECTOR* NORMALE$1, struct $6VECTOR* MAPXY$1 )
{
 boolean fb$result$1;
 __builtin_memset( &fb$result$1, 0, 1ll );
 label$1807:;
 boolean FLAG$1;
 __builtin_memset( &FLAG$1, 0, 1ll );
 int64 FOUNDPOLYID$1;
 __builtin_memset( &FOUNDPOLYID$1, 0, 8ll );
 int64 MATID$1;
 __builtin_memset( &MATID$1, 0, 8ll );
 struct $6VECTOR FOUNDHITPOINT$1;
 _ZN6VECTORC1Ev( &FOUNDHITPOINT$1 );
 struct $6VECTOR FOUNDNORMALE$1;
 _ZN6VECTORC1Ev( &FOUNDNORMALE$1 );
 struct $6VECTOR FOUNDMAPXY$1;
 _ZN6VECTORC1Ev( &FOUNDMAPXY$1 );
 double OLDDISTANCE2$1;
 __builtin_memset( &OLDDISTANCE2$1, 0, 8ll );
 double NEWDISTANCE2$1;
 __builtin_memset( &NEWDISTANCE2$1, 0, 8ll );
 struct $6VECTOR A$1;
 _ZN6VECTORC1Ev( &A$1 );
 struct $6VECTOR B$1;
 _ZN6VECTORC1Ev( &B$1 );
 struct $6VECTOR C$1;
 _ZN6VECTORC1Ev( &C$1 );
 double HELP$1;
 __builtin_memset( &HELP$1, 0, 8ll );
 double L$1;
 __builtin_memset( &L$1, 0, 8ll );
 double M$1;
 __builtin_memset( &M$1, 0, 8ll );
 double N$1;
 __builtin_memset( &N$1, 0, 8ll );
 double INSIDE$1;
 __builtin_memset( &INSIDE$1, 0, 8ll );
 double ORIENT$1;
 __builtin_memset( &ORIENT$1, 0, 8ll );
 double T$1;
 __builtin_memset( &T$1, 0, 8ll );
 double X$1;
 __builtin_memset( &X$1, 0, 8ll );
 double Y$1;
 __builtin_memset( &Y$1, 0, 8ll );
 struct $4POLY* LPPOLY$1;
 __builtin_memset( &LPPOLY$1, 0, 8ll );
 if( *(int64*)((uint8*)THIS$1 + 256ll) >= 1ll ) goto label$1810;
 {
  fb$result$1 = (boolean)0ll;
  goto label$1808;
  label$1810:;
 }
 OLDDISTANCE2$1 = 0x1.7D784p+26;
 if( *(int64*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) == 1ll ) goto label$1812;
 {
  fb$result$1 = (boolean)0ll;
  goto label$1808;
  label$1812:;
 }
 if( *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 144ll) >= 1ll ) goto label$1814;
 {
  fb$result$1 = (boolean)0ll;
  goto label$1808;
  label$1814:;
 }
 MATID$1 = *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 112ll);
 {
  int64 PC$2;
  PC$2 = 0ll;
  int64 TMP$1535$2;
  TMP$1535$2 = *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 144ll) + -1ll;
  goto label$1815;
  label$1818:;
  {
   struct $6VECTOR TMP$1537$3;
   struct $6VECTOR TMP$1538$3;
   if( *(int64*)((uint8*)THIS$1 + 136ll) != 0ll ) goto label$1820;
   {
    X$1 = (double)*(int64*)((uint8*)THIS$1 + 16ll) + (*(double*)RAYDIRECTION$1 * *(double*)((uint8*)THIS$1 + 32ll));
    Y$1 = (double)*(int64*)((uint8*)THIS$1 + 24ll) - (*(double*)((uint8*)RAYDIRECTION$1 + 8ll) * *(double*)((uint8*)THIS$1 + 32ll));
    boolean vr$53 = _ZN9RAYTRACER13ISPOLYONPIXELElldd( THIS$1, OBJID$1, PC$2, X$1, Y$1 );
    if( vr$53 != (boolean)0ll ) goto label$1822;
    {
     goto label$1816;
     label$1822:;
    }
   }
   label$1820:;
   label$1819:;
   LPPOLY$1 = *(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 152ll) + (PC$2 << (3ll & 63ll)));
   double vr$62 = _ZmlR6VECTORS0_( (struct $6VECTOR*)((uint8*)LPPOLY$1 + 120ll), RAYORIGIN$1 );
   HELP$1 = vr$62;
   HELP$1 = -(HELP$1 - *(double*)((uint8*)LPPOLY$1 + 152ll));
   if( HELP$1 <= 0x0p+0 ) goto label$1824;
   {
    struct $6VECTOR TMP$1536$4;
    _ZmlR6VECTORd( &TMP$1536$4, (struct $6VECTOR*)((uint8*)LPPOLY$1 + 88ll), -0x1.p+0 );
    __builtin_memcpy( NORMALE$1, &TMP$1536$4, 32 );
   }
   goto label$1823;
   label$1824:;
   {
    __builtin_memcpy( NORMALE$1, (struct $6VECTOR*)((uint8*)LPPOLY$1 + 88ll), 32 );
   }
   label$1823:;
   double vr$72 = _ZmlR6VECTORS0_( NORMALE$1, RAYDIRECTION$1 );
   T$1 = vr$72;
   if( T$1 != 0x0p+0 ) goto label$1826;
   {
    goto label$1816;
    label$1826:;
   }
   double vr$73 = _ZmlR6VECTORS0_( NORMALE$1, RAYORIGIN$1 );
   double vr$82 = _ZmlR6VECTORS0_( *(*(struct $6VECTOR***)((uint8*)*(struct $4POLY**)((uint8*)*(struct $4POLY***)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 152ll) + (PC$2 << (3ll & 63ll))) + 80ll)), NORMALE$1 );
   T$1 = -(vr$73 - vr$82) / T$1;
   if( T$1 > 0x0p+0 ) goto label$1828;
   {
    goto label$1816;
    label$1828:;
   }
   struct $6VECTOR* vr$87 = _ZmldR6VECTOR( &TMP$1537$3, T$1, RAYDIRECTION$1 );
   _ZplR6VECTORS0_( &TMP$1538$3, RAYORIGIN$1, vr$87 );
   __builtin_memcpy( HITPOINT$1, &TMP$1538$3, 32 );
   T$1 = 0x0p+0;
   {
    int64 VC$4;
    VC$4 = 0ll;
    int64 TMP$1539$4;
    TMP$1539$4 = *(int64*)((uint8*)LPPOLY$1 + 72ll) + -1ll;
    goto label$1829;
    label$1832:;
    {
     struct $6VECTOR TMP$1540$5;
     struct $6VECTOR TMP$1541$5;
     _ZmiR6VECTORS0_( &TMP$1540$5, *(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)LPPOLY$1 + 80ll) + (VC$4 << (3ll & 63ll))), HITPOINT$1 );
     __builtin_memcpy( &A$1, &TMP$1540$5, 32 );
     _ZmiR6VECTORS0_( &TMP$1541$5, *(struct $6VECTOR**)((uint8*)*(struct $6VECTOR***)((uint8*)LPPOLY$1 + 80ll) + (((VC$4 + 1ll) % *(int64*)((uint8*)LPPOLY$1 + 72ll)) << (3ll & 63ll))), HITPOINT$1 );
     __builtin_memcpy( &B$1, &TMP$1541$5, 32 );
     _ZN6VECTOR9NORMALIZEEv( &A$1 );
     _ZN6VECTOR9NORMALIZEEv( &B$1 );
     double vr$111 = _ZmlR6VECTORS0_( &A$1, &B$1 );
     INSIDE$1 = vr$111;
     if( INSIDE$1 >= -0x1.p+0 ) goto label$1834;
     {
      goto label$1816;
      label$1834:;
     }
     if( INSIDE$1 <= 0x1.p+0 ) goto label$1836;
     {
      goto label$1816;
      label$1836:;
     }
     T$1 = T$1 + __builtin_acos( INSIDE$1 );
    }
    label$1830:;
    VC$4 = VC$4 + 1ll;
    label$1829:;
    if( VC$4 <= TMP$1539$4 ) goto label$1832;
    label$1831:;
   }
   if( ((int64)-(T$1 > 0x1.921CAC083126Fp+2) & (int64)-(T$1 < 0x1.922339C0EBEEp+2)) == 0ll ) goto label$1838;
   {
    struct $6VECTOR TMP$1542$4;
    if( *(boolean*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 99ll) != (boolean)1ll ) goto label$1840;
    {
     _ZN9RAYTRACER8GETMAPXYEllR6VECTORS1_( THIS$1, OBJID$1, PC$2, HITPOINT$1, MAPXY$1 );
     if( *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 184ll) <= -1ll ) goto label$1842;
     {
      boolean vr$126 = _ZN9RAYTRACER19ISVISIBLEONSTAMPMAPElR6VECTOR( THIS$1, MATID$1, MAPXY$1 );
      if( vr$126 != (boolean)0ll ) goto label$1844;
      {
       goto label$1816;
       label$1844:;
      }
     }
     label$1842:;
     label$1841:;
    }
    label$1840:;
    label$1839:;
    FLAG$1 = (boolean)1ll;
    _ZmiR6VECTORS0_( &TMP$1542$4, HITPOINT$1, RAYORIGIN$1 );
    __builtin_memcpy( &C$1, &TMP$1542$4, 32 );
    if( PC$2 != 0ll ) goto label$1846;
    {
     FOUNDPOLYID$1 = 0ll;
     __builtin_memcpy( &FOUNDHITPOINT$1, HITPOINT$1, 32 );
     __builtin_memcpy( &FOUNDNORMALE$1, NORMALE$1, 32 );
     __builtin_memcpy( &FOUNDMAPXY$1, MAPXY$1, 32 );
     double vr$135 = _ZmlR6VECTORS0_( &C$1, &C$1 );
     OLDDISTANCE2$1 = vr$135;
    }
    goto label$1845;
    label$1846:;
    {
     double vr$138 = _ZmlR6VECTORS0_( &C$1, &C$1 );
     NEWDISTANCE2$1 = vr$138;
     if( NEWDISTANCE2$1 >= OLDDISTANCE2$1 ) goto label$1848;
     {
      FOUNDPOLYID$1 = PC$2;
      __builtin_memcpy( &FOUNDHITPOINT$1, HITPOINT$1, 32 );
      __builtin_memcpy( &FOUNDNORMALE$1, NORMALE$1, 32 );
      __builtin_memcpy( &FOUNDMAPXY$1, MAPXY$1, 32 );
      OLDDISTANCE2$1 = NEWDISTANCE2$1;
     }
     label$1848:;
     label$1847:;
    }
    label$1845:;
   }
   label$1838:;
   label$1837:;
  }
  label$1816:;
  PC$2 = PC$2 + 1ll;
  label$1815:;
  if( PC$2 <= TMP$1535$2 ) goto label$1818;
  label$1817:;
 }
 if( FLAG$1 != (boolean)1ll ) goto label$1850;
 {
  *POLYID$1 = FOUNDPOLYID$1;
  __builtin_memcpy( HITPOINT$1, &FOUNDHITPOINT$1, 32 );
  __builtin_memcpy( NORMALE$1, &FOUNDNORMALE$1, 32 );
  if( *(boolean*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll))) + 99ll) != (boolean)1ll ) goto label$1852;
  {
   __builtin_memcpy( MAPXY$1, &FOUNDMAPXY$1, 32 );
   label$1852:;
  }
 }
 goto label$1849;
 label$1850:;
 {
  *POLYID$1 = -1ll;
 }
 label$1849:;
 fb$result$1 = FLAG$1;
 goto label$1808;
 label$1808:;
 return fb$result$1;
}

boolean _ZN9RAYTRACER13ISOBJECTONRAYER6VECTORS1_lRlS1_S1_S1_S1_( struct $9RAYTRACER* THIS$1, struct $6VECTOR* RAYORIGIN$1, struct $6VECTOR* RAYDIRECTION$1, int64 OBJID$1, int64* POLYID$1, struct $6VECTOR* HITPOINT$1, struct $6VECTOR* NORMALE$1, struct $6VECTOR* BNORMALE$1, struct $6VECTOR* MAPXY$1 )
{
 boolean fb$result$1;
 __builtin_memset( &fb$result$1, 0, 1ll );
 label$1853:;
 boolean FLAG$1;
 __builtin_memset( &FLAG$1, 0, 1ll );
 {
  $14OBJECT3D_TYPES TMP$1543$2;
  TMP$1543$2 = *($14OBJECT3D_TYPES*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll)));
  if( TMP$1543$2 != 1ll ) goto label$1856;
  label$1857:;
  {
   boolean vr$6 = _ZN9RAYTRACER14ISPOLYGONONRAYER6VECTORS1_lRlS1_S1_S1_( THIS$1, RAYORIGIN$1, RAYDIRECTION$1, OBJID$1, POLYID$1, HITPOINT$1, NORMALE$1, MAPXY$1 );
   FLAG$1 = vr$6;
  }
  goto label$1855;
  label$1856:;
  if( TMP$1543$2 != 0ll ) goto label$1858;
  label$1859:;
  {
   boolean vr$7 = _ZN9RAYTRACER17ISMATHSPHEREONRAYER6VECTORS1_lS1_S1_S1_( THIS$1, RAYORIGIN$1, RAYDIRECTION$1, OBJID$1, HITPOINT$1, NORMALE$1, MAPXY$1 );
   FLAG$1 = vr$7;
  }
  label$1858:;
  label$1855:;
 }
 if( FLAG$1 != (boolean)1ll ) goto label$1861;
 {
  if( *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (*(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 112ll) << (3ll & 63ll))) + 144ll) <= -1ll ) goto label$1863;
  {
   _ZN9RAYTRACER9DOBUMPMAPEllR6VECTORS1_S1_( THIS$1, OBJID$1, *POLYID$1, NORMALE$1, BNORMALE$1, MAPXY$1 );
  }
  label$1863:;
  label$1862:;
 }
 label$1861:;
 label$1860:;
 fb$result$1 = FLAG$1;
 goto label$1854;
 label$1854:;
 return fb$result$1;
}

boolean _ZN9RAYTRACER9LINETRACEER6VECTORS1_RlS2_S1_S1_S1_S1_( struct $9RAYTRACER* THIS$1, struct $6VECTOR* RAYORIGIN$1, struct $6VECTOR* RAYDIRECTION$1, int64* OBJID$1, int64* POLYID$1, struct $6VECTOR* HITPOINT$1, struct $6VECTOR* NORMALE$1, struct $6VECTOR* BNORMALE$1, struct $6VECTOR* MAPXY$1 )
{
 boolean fb$result$1;
 __builtin_memset( &fb$result$1, 0, 1ll );
 label$1864:;
 static struct $6VECTOR R$1;
 static int64 LABEL$1866$1;
 if( LABEL$1866$1 != 0ll ) goto label$1867;
 LABEL$1866$1 = 1ll;
 _ZN6VECTORC1Ev( &R$1 );
 label$1867:;
 static struct $6VECTOR N$1;
 static int64 LABEL$1868$1;
 if( LABEL$1868$1 != 0ll ) goto label$1869;
 LABEL$1868$1 = 1ll;
 _ZN6VECTORC1Ev( &N$1 );
 label$1869:;
 static struct $6VECTOR N2$1;
 static int64 LABEL$1870$1;
 if( LABEL$1870$1 != 0ll ) goto label$1871;
 LABEL$1870$1 = 1ll;
 _ZN6VECTORC1Ev( &N2$1 );
 label$1871:;
 static struct $6VECTOR C$1;
 static int64 LABEL$1872$1;
 if( LABEL$1872$1 != 0ll ) goto label$1873;
 LABEL$1872$1 = 1ll;
 _ZN6VECTORC1Ev( &C$1 );
 label$1873:;
 static boolean FLAG$1;
 static boolean FLAG2$1;
 static int64 FOUNDOBJID$1;
 static int64 FOUNDPOLYID$1;
 static struct $6VECTOR FOUNDHITPOINT$1;
 static int64 LABEL$1874$1;
 if( LABEL$1874$1 != 0ll ) goto label$1875;
 LABEL$1874$1 = 1ll;
 _ZN6VECTORC1Ev( &FOUNDHITPOINT$1 );
 label$1875:;
 static struct $6VECTOR FOUNDNORMALE$1;
 static int64 LABEL$1876$1;
 if( LABEL$1876$1 != 0ll ) goto label$1877;
 LABEL$1876$1 = 1ll;
 _ZN6VECTORC1Ev( &FOUNDNORMALE$1 );
 label$1877:;
 static struct $6VECTOR FOUNDBNORMALE$1;
 static int64 LABEL$1878$1;
 if( LABEL$1878$1 != 0ll ) goto label$1879;
 LABEL$1878$1 = 1ll;
 _ZN6VECTORC1Ev( &FOUNDBNORMALE$1 );
 label$1879:;
 static struct $6VECTOR FOUNDMAPXY$1;
 static int64 LABEL$1880$1;
 if( LABEL$1880$1 != 0ll ) goto label$1881;
 LABEL$1880$1 = 1ll;
 _ZN6VECTORC1Ev( &FOUNDMAPXY$1 );
 label$1881:;
 static double OLDDISTANCE2$1;
 static double NEWDISTANCE2$1;
 if( *(int64*)((uint8*)THIS$1 + 256ll) >= 1ll ) goto label$1883;
 {
  fb$result$1 = (boolean)0ll;
  goto label$1865;
  label$1883:;
 }
 OLDDISTANCE2$1 = 0x1.7D784p+26;
 FLAG$1 = (boolean)0ll;
 {
  int64 OC$2;
  OC$2 = 0ll;
  int64 TMP$1544$2;
  TMP$1544$2 = *(int64*)((uint8*)THIS$1 + 256ll) + -1ll;
  goto label$1884;
  label$1887:;
  {
   boolean vr$4 = _ZN9RAYTRACER13ISOBJECTONRAYER6VECTORS1_lRlS1_S1_S1_S1_( THIS$1, RAYORIGIN$1, RAYDIRECTION$1, OC$2, POLYID$1, &R$1, &N$1, &N2$1, MAPXY$1 );
   if( vr$4 != (boolean)1ll ) goto label$1889;
   {
    if( OC$2 != 0ll ) goto label$1891;
    {
     struct $6VECTOR TMP$1545$5;
     __builtin_memcpy( &FOUNDHITPOINT$1, &R$1, 32 );
     __builtin_memcpy( &FOUNDNORMALE$1, &N$1, 32 );
     __builtin_memcpy( &FOUNDBNORMALE$1, &N2$1, 32 );
     __builtin_memcpy( &FOUNDMAPXY$1, MAPXY$1, 32 );
     FOUNDOBJID$1 = 0ll;
     FOUNDPOLYID$1 = *POLYID$1;
     _ZmiR6VECTORS0_( &TMP$1545$5, &R$1, RAYORIGIN$1 );
     __builtin_memcpy( &C$1, &TMP$1545$5, 32 );
     double vr$8 = _ZmlR6VECTORS0_( &C$1, &C$1 );
     OLDDISTANCE2$1 = vr$8;
    }
    goto label$1890;
    label$1891:;
    {
     struct $6VECTOR TMP$1546$5;
     _ZmiR6VECTORS0_( &TMP$1546$5, &R$1, RAYORIGIN$1 );
     __builtin_memcpy( &C$1, &TMP$1546$5, 32 );
     double vr$11 = _ZmlR6VECTORS0_( &C$1, &C$1 );
     NEWDISTANCE2$1 = vr$11;
     if( NEWDISTANCE2$1 >= OLDDISTANCE2$1 ) goto label$1893;
     {
      __builtin_memcpy( &FOUNDHITPOINT$1, &R$1, 32 );
      __builtin_memcpy( &FOUNDNORMALE$1, &N$1, 32 );
      __builtin_memcpy( &FOUNDBNORMALE$1, &N2$1, 32 );
      __builtin_memcpy( &FOUNDMAPXY$1, MAPXY$1, 32 );
      FOUNDOBJID$1 = OC$2;
      FOUNDPOLYID$1 = *POLYID$1;
      OLDDISTANCE2$1 = NEWDISTANCE2$1;
     }
     label$1893:;
     label$1892:;
    }
    label$1890:;
    FLAG$1 = (boolean)1ll;
   }
   label$1889:;
   label$1888:;
  }
  label$1885:;
  OC$2 = OC$2 + 1ll;
  label$1884:;
  if( OC$2 <= TMP$1544$2 ) goto label$1887;
  label$1886:;
 }
 if( FLAG$1 != (boolean)1ll ) goto label$1895;
 {
  *OBJID$1 = FOUNDOBJID$1;
  *POLYID$1 = FOUNDPOLYID$1;
  __builtin_memcpy( HITPOINT$1, &FOUNDHITPOINT$1, 32 );
  __builtin_memcpy( NORMALE$1, &FOUNDNORMALE$1, 32 );
  __builtin_memcpy( BNORMALE$1, &FOUNDBNORMALE$1, 32 );
  __builtin_memcpy( MAPXY$1, &FOUNDMAPXY$1, 32 );
 }
 goto label$1894;
 label$1895:;
 {
  *OBJID$1 = -1ll;
  *POLYID$1 = -1ll;
 }
 label$1894:;
 fb$result$1 = FLAG$1;
 goto label$1865;
 label$1865:;
 return fb$result$1;
}

void _ZN9RAYTRACER10LOCALCOLOREllR6VECTORS1_S1_S1_S1_S1_( struct $9RAYTRACER* THIS$1, int64 HITOBJID$1, int64 HITPOLYID$1, struct $6VECTOR* RAYDIRECTION$1, struct $6VECTOR* HITP$1, struct $6VECTOR* HITN$1, struct $6VECTOR* HITBN$1, struct $6VECTOR* MAPXY$1, struct $6VECTOR* RETCOL$1 )
{
 label$1896:;
 struct $6VECTOR L$1;
 _ZN6VECTORC1Ev( &L$1 );
 struct $6VECTOR V$1;
 _ZN6VECTORC1Ev( &V$1 );
 struct $6VECTOR DUMMY1$1;
 _ZN6VECTORC1Ev( &DUMMY1$1 );
 struct $6VECTOR DUMMY2$1;
 _ZN6VECTORC1Ev( &DUMMY2$1 );
 struct $6VECTOR DUMMY3$1;
 _ZN6VECTORC1Ev( &DUMMY3$1 );
 struct $6VECTOR DUMMY4$1;
 _ZN6VECTORC1Ev( &DUMMY4$1 );
 struct $6VECTOR HNORMAL$1;
 _ZN6VECTORC1Ev( &HNORMAL$1 );
 double VDOT$1;
 __builtin_memset( &VDOT$1, 0, 8ll );
 double LIGHTCOSINUS$1;
 __builtin_memset( &LIGHTCOSINUS$1, 0, 8ll );
 double SPOTANGLE$1;
 __builtin_memset( &SPOTANGLE$1, 0, 8ll );
 double LIGHTSPECULAR$1;
 __builtin_memset( &LIGHTSPECULAR$1, 0, 8ll );
 double LIGHTDISTANCE$1;
 __builtin_memset( &LIGHTDISTANCE$1, 0, 8ll );
 struct $6VECTOR COLLIGHT$1;
 _ZN6VECTORC1Ev( &COLLIGHT$1 );
 struct $6VECTOR COLSPECULAR$1;
 _ZN6VECTORC1Ev( &COLSPECULAR$1 );
 struct $6VECTOR COLDISTANCE$1;
 _ZN6VECTORC1Ev( &COLDISTANCE$1 );
 struct $6VECTOR COLAMBIENT$1;
 _ZN6VECTORC1Ev( &COLAMBIENT$1 );
 int64 OBJID$1;
 __builtin_memset( &OBJID$1, 0, 8ll );
 int64 POLYID$1;
 __builtin_memset( &POLYID$1, 0, 8ll );
 *(double*)RETCOL$1 = 0x0p+0;
 *(double*)((uint8*)RETCOL$1 + 8ll) = 0x0p+0;
 *(double*)((uint8*)RETCOL$1 + 16ll) = 0x0p+0;
 if( *(int64*)((uint8*)THIS$1 + 272ll) >= 0ll ) goto label$1899;
 {
  goto label$1897;
  label$1899:;
 }
 {
  int64 LC$2;
  LC$2 = 0ll;
  int64 TMP$1547$2;
  TMP$1547$2 = *(int64*)((uint8*)THIS$1 + 272ll) + -1ll;
  goto label$1900;
  label$1903:;
  {
   struct $6VECTOR TMP$1548$3;
   boolean TMP$1549$3;
   struct $6VECTOR TMP$1554$3;
   struct $6VECTOR TMP$1555$3;
   _ZmiR6VECTORS0_( &TMP$1548$3, HITP$1, (struct $6VECTOR*)((uint8*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 280ll) + (LC$2 << (3ll & 63ll))) + 16ll) );
   __builtin_memcpy( &L$1, &TMP$1548$3, 32 );
   if( *(boolean*)((uint8*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 280ll) + (LC$2 << (3ll & 63ll))) + 192ll) != (boolean)1ll ) goto label$1904;
   TMP$1549$3 = (boolean)(*(boolean*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (*(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (HITOBJID$1 << (3ll & 63ll))) + 112ll) << (3ll & 63ll))) + 97ll) == (boolean)1ll);
   goto label$1936;
   label$1904:;
   TMP$1549$3 = (boolean)0ll;
   label$1936:;
   if( TMP$1549$3 == (boolean)0ll ) goto label$1906;
   {
    *(int64*)((uint8*)THIS$1 + 136ll) = 1ll;
    boolean vr$58 = _ZN9RAYTRACER9LINETRACEER6VECTORS1_RlS2_S1_S1_S1_S1_( THIS$1, (struct $6VECTOR*)((uint8*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 280ll) + (LC$2 << (3ll & 63ll))) + 16ll), &L$1, &OBJID$1, &POLYID$1, &DUMMY1$1, &DUMMY2$1, &DUMMY3$1, &DUMMY4$1 );
    if( vr$58 != (boolean)1ll ) goto label$1908;
    {
     if( OBJID$1 == HITOBJID$1 ) goto label$1910;
     {
      if( *(boolean*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (*(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (OBJID$1 << (3ll & 63ll))) + 112ll) << (3ll & 63ll))) + 96ll) != (boolean)0ll ) goto label$1912;
      {
       goto label$1901;
       label$1912:;
      }
     }
     label$1910:;
     label$1909:;
    }
    label$1908:;
    label$1907:;
    if( ((int64)-(*(int64*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (HITOBJID$1 << (3ll & 63ll))) == 1ll) & (int64)-(HITPOLYID$1 != POLYID$1)) == 0ll ) goto label$1914;
    {
     goto label$1901;
     label$1914:;
    }
   }
   label$1906:;
   label$1905:;
   if( *(int64*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 280ll) + (LC$2 << (3ll & 63ll))) != 1ll ) goto label$1916;
   {
    struct $6VECTOR TMP$1550$4;
    _ZmiR6VECTORS0_( &TMP$1550$4, (struct $6VECTOR*)((uint8*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 280ll) + (LC$2 << (3ll & 63ll))) + 16ll), HITP$1 );
    __builtin_memcpy( &HNORMAL$1, &TMP$1550$4, 32 );
    _ZN6VECTOR9NORMALIZEEv( &HNORMAL$1 );
    double vr$93 = _ZmlR6VECTORS0_( &HNORMAL$1, (struct $6VECTOR*)((uint8*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 280ll) + (LC$2 << (3ll & 63ll))) + 112ll) );
    SPOTANGLE$1 = vr$93;
    if( SPOTANGLE$1 >= 0x0p+0 ) goto label$1918;
    {
     goto label$1901;
     label$1918:;
    }
    SPOTANGLE$1 = __builtin_acos( SPOTANGLE$1 );
    if( SPOTANGLE$1 <= *(double*)((uint8*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 280ll) + (LC$2 << (3ll & 63ll))) + 184ll) ) goto label$1920;
    {
     goto label$1901;
     label$1920:;
    }
   }
   label$1916:;
   label$1915:;
   _ZN6VECTORmLEd( &L$1, -0x1.p+0 );
   _ZN6VECTOR9NORMALIZEEv( &L$1 );
   if( *(int64*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (*(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (HITOBJID$1 << (3ll & 63ll))) + 112ll) << (3ll & 63ll))) + 144ll) <= -1ll ) goto label$1922;
   {
    double vr$110 = _ZmlR6VECTORS0_( &L$1, HITBN$1 );
    LIGHTCOSINUS$1 = vr$110;
   }
   goto label$1921;
   label$1922:;
   {
    double vr$112 = _ZmlR6VECTORS0_( &L$1, HITN$1 );
    LIGHTCOSINUS$1 = vr$112;
   }
   label$1921:;
   LIGHTCOSINUS$1 = LIGHTCOSINUS$1 * *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (*(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (HITOBJID$1 << (3ll & 63ll))) + 112ll) << (3ll & 63ll))) + 40ll);
   if( LIGHTCOSINUS$1 > 0x0p+0 ) goto label$1924;
   {
    goto label$1901;
    label$1924:;
   }
   if( *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (*(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (HITOBJID$1 << (3ll & 63ll))) + 112ll) << (3ll & 63ll))) + 48ll) <= 0x0p+0 ) goto label$1926;
   {
    struct $6VECTOR TMP$1551$4;
    struct $6VECTOR TMP$1552$4;
    double TMP$1553$4;
    struct $6VECTOR* vr$133 = _ZmiR6VECTORS0_( &TMP$1551$4, &L$1, RAYDIRECTION$1 );
    _ZmlR6VECTORd( &TMP$1552$4, vr$133, 0x1.p-1 );
    __builtin_memcpy( &V$1, &TMP$1552$4, 32 );
    _ZN6VECTOR9NORMALIZEEv( &V$1 );
    double vr$138 = _ZmlR6VECTORS0_( &V$1, HITN$1 );
    VDOT$1 = vr$138;
    if( VDOT$1 >= 0x0p+0 ) goto label$1927;
    TMP$1553$4 = -VDOT$1;
    goto label$1937;
    label$1927:;
    TMP$1553$4 = VDOT$1;
    label$1937:;
    double vr$156 = pow( TMP$1553$4, *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (*(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (HITOBJID$1 << (3ll & 63ll))) + 112ll) << (3ll & 63ll))) + 56ll) );
    LIGHTSPECULAR$1 = *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (*(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (HITOBJID$1 << (3ll & 63ll))) + 112ll) << (3ll & 63ll))) + 48ll) * vr$156;
    if( LIGHTSPECULAR$1 <= 0x0p+0 ) goto label$1929;
    {
     LIGHTCOSINUS$1 = LIGHTCOSINUS$1 + LIGHTSPECULAR$1;
     if( LIGHTCOSINUS$1 <= 0x1.p+0 ) goto label$1931;
     {
      LIGHTCOSINUS$1 = 0x1.p+0;
      label$1931:;
     }
    }
    label$1929:;
    label$1928:;
   }
   label$1926:;
   label$1925:;
   _ZmlR6VECTORd( &TMP$1554$3, (struct $6VECTOR*)((uint8*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 280ll) + (LC$2 << (3ll & 63ll))) + 144ll), LIGHTCOSINUS$1 );
   __builtin_memcpy( &COLLIGHT$1, &TMP$1554$3, 32 );
   double vr$172 = _ZmlR6VECTORS0_( HITP$1, (struct $6VECTOR*)((uint8*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 280ll) + (LC$2 << (3ll & 63ll))) + 16ll) );
   LIGHTDISTANCE$1 = __builtin_sqrt( vr$172 );
   double vr$180 = _Z3EXPd( (-0x1.62E42FEFA39ECp-1 / *(double*)((uint8*)*(struct $5LIGHT**)((uint8*)*(struct $5LIGHT***)((uint8*)THIS$1 + 280ll) + (LC$2 << (3ll & 63ll))) + 176ll)) * LIGHTDISTANCE$1 );
   LIGHTDISTANCE$1 = vr$180;
   if( LIGHTDISTANCE$1 > 0x0p+0 ) goto label$1933;
   {
    goto label$1901;
    label$1933:;
   }
   if( LIGHTDISTANCE$1 <= 0x1.p+0 ) goto label$1935;
   {
    LIGHTDISTANCE$1 = 0x1.p+0;
    label$1935:;
   }
   struct $6VECTOR* vr$183 = _ZmlR6VECTORd( &TMP$1555$3, &COLLIGHT$1, LIGHTDISTANCE$1 );
   _ZN6VECTORpLERS_( RETCOL$1, vr$183 );
  }
  label$1901:;
  LC$2 = LC$2 + 1ll;
  label$1900:;
  if( LC$2 <= TMP$1547$2 ) goto label$1903;
  label$1902:;
 }
 _ZN6VECTORpLERS_( RETCOL$1, (struct $6VECTOR*)((uint8*)THIS$1 + 48ll) );
 label$1897:;
}

void _ZN9RAYTRACER9VECMIRRORER6VECTORS1_S1_S1_( struct $9RAYTRACER* THIS$1, struct $6VECTOR* RETVEC$1, struct $6VECTOR* RAYDIRECTION$1, struct $6VECTOR* HITPOINT$1, struct $6VECTOR* NORMALE$1 )
{
 struct $6VECTOR TMP$1556$1;
 struct $6VECTOR TMP$1557$1;
 struct $6VECTOR TMP$1558$1;
 label$1938:;
 struct $6VECTOR I$1;
 _ZN6VECTORC1Ev( &I$1 );
 struct $6VECTOR I2$1;
 _ZN6VECTORC1Ev( &I2$1 );
 double L$1;
 __builtin_memset( &L$1, 0, 8ll );
 _ZN6VECTOR10NORMALIZEDEv( &TMP$1556$1, RAYDIRECTION$1 );
 __builtin_memcpy( &I$1, &TMP$1556$1, 32 );
 __builtin_memcpy( RETVEC$1, &I$1, 32 );
 _ZN6VECTORmLEd( &I$1, -0x1.p+0 );
 _ZmlR6VECTORd( &TMP$1557$1, &I$1, 0x1.999999999999Ap-4 );
 __builtin_memcpy( &I2$1, &TMP$1557$1, 32 );
 _ZN6VECTORpLERS_( HITPOINT$1, &I2$1 );
 double vr$14 = _ZmlR6VECTORS0_( NORMALE$1, &I$1 );
 L$1 = vr$14;
 L$1 = L$1 * 0x1.p+1;
 _ZmldR6VECTOR( &TMP$1558$1, L$1, NORMALE$1 );
 __builtin_memcpy( &I$1, &TMP$1558$1, 32 );
 _ZN6VECTORpLERS_( RETVEC$1, &I$1 );
 label$1939:;
}

void _ZN9RAYTRACER9VECBROKENElR6VECTORS1_S1_S1_( struct $9RAYTRACER* THIS$1, int64 HITOBJNR$1, struct $6VECTOR* HITPOINT$1, struct $6VECTOR* NORMALE$1, struct $6VECTOR* RAYDIRECTION$1, struct $6VECTOR* TDES$1 )
{
 struct $6VECTOR TMP$1559$1;
 struct $6VECTOR TMP$1560$1;
 struct $6VECTOR TMP$1561$1;
 label$1940:;
 struct $6VECTOR I$1;
 _ZN6VECTORC1Ev( &I$1 );
 struct $6VECTOR I2$1;
 _ZN6VECTORC1Ev( &I2$1 );
 double L$1;
 __builtin_memset( &L$1, 0, 8ll );
 double IOR$1;
 __builtin_memset( &IOR$1, 0, 8ll );
 double COSINUS$1;
 __builtin_memset( &COSINUS$1, 0, 8ll );
 IOR$1 = *(double*)((uint8*)*(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (*(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (HITOBJNR$1 << (3ll & 63ll))) + 112ll) << (3ll & 63ll))) + 88ll);
 if( IOR$1 >= 0x1.47AE147AE147Bp-7 ) goto label$1943;
 {
  IOR$1 = 0x1.47AE147AE147Bp-7;
  label$1943:;
 }
 _ZN6VECTOR10NORMALIZEDEv( &TMP$1559$1, RAYDIRECTION$1 );
 __builtin_memcpy( &I$1, &TMP$1559$1, 32 );
 _ZN6VECTORmLEd( &I$1, -0x1.p+0 );
 double vr$18 = _ZmlR6VECTORS0_( NORMALE$1, &I$1 );
 L$1 = vr$18;
 COSINUS$1 = __builtin_sqrt( (-((-(L$1 * L$1) + 0x1.p+0) / (IOR$1 * IOR$1)) + 0x1.p+0) );
 COSINUS$1 = COSINUS$1 - (L$1 / IOR$1);
 _ZmldR6VECTOR( &TMP$1560$1, COSINUS$1, NORMALE$1 );
 __builtin_memcpy( TDES$1, &TMP$1560$1, 32 );
 _ZN6VECTORmIERS_( TDES$1, &I$1 );
 _ZN6VECTOR10NORMALIZEDEv( &TMP$1561$1, RAYDIRECTION$1 );
 __builtin_memcpy( &I2$1, &TMP$1561$1, 32 );
 _ZN6VECTORmLEd( &I2$1, 0x1.999999999999Ap-4 );
 _ZN6VECTORpLERS_( HITPOINT$1, &I2$1 );
 label$1941:;
}

void _ZN9RAYTRACER8RAYTRACEERK6VECTORS2_lRS0_( struct $9RAYTRACER* THIS$1, struct $6VECTOR* _RAYORIGIN$1, struct $6VECTOR* _RAYDIRECTION$1, int64 CURRAYDEPTH$1, struct $6VECTOR* RETCOL$1 )
{
 label$1944:;
 struct $6VECTOR LCOL$1;
 _ZN6VECTORC1Ev( &LCOL$1 );
 struct $6VECTOR MCOL$1;
 _ZN6VECTORC1Ev( &MCOL$1 );
 struct $6VECTOR TCOL$1;
 _ZN6VECTORC1Ev( &TCOL$1 );
 struct $6VECTOR MIRRORAYDIRECTION$1;
 _ZN6VECTORC1Ev( &MIRRORAYDIRECTION$1 );
 struct $6VECTOR BROKENRAYDIRECTION$1;
 _ZN6VECTORC1Ev( &BROKENRAYDIRECTION$1 );
 struct $6VECTOR HITPOINT$1;
 _ZN6VECTORC1Ev( &HITPOINT$1 );
 struct $6VECTOR NORMALE$1;
 _ZN6VECTORC1Ev( &NORMALE$1 );
 struct $6VECTOR BUMPNORMALE$1;
 _ZN6VECTORC1Ev( &BUMPNORMALE$1 );
 struct $6VECTOR MAPXY$1;
 _ZN6VECTORC1Ev( &MAPXY$1 );
 int64 HITOBJID$1;
 __builtin_memset( &HITOBJID$1, 0, 8ll );
 int64 HITPOLYID$1;
 __builtin_memset( &HITPOLYID$1, 0, 8ll );
 int64 MATID$1;
 __builtin_memset( &MATID$1, 0, 8ll );
 struct $8MATERIAL* PMAT$1;
 __builtin_memset( &PMAT$1, 0, 8ll );
 *(int64*)((uint8*)THIS$1 + 136ll) = CURRAYDEPTH$1;
 struct $6VECTOR RAYORIGIN$1;
 __builtin_memcpy( &RAYORIGIN$1, _RAYORIGIN$1, 32 );
 struct $6VECTOR RAYDIRECTION$1;
 __builtin_memcpy( &RAYDIRECTION$1, _RAYDIRECTION$1, 32 );
 boolean vr$24 = _ZN9RAYTRACER9LINETRACEER6VECTORS1_RlS2_S1_S1_S1_S1_( THIS$1, &RAYORIGIN$1, &RAYDIRECTION$1, &HITOBJID$1, &HITPOLYID$1, &HITPOINT$1, &NORMALE$1, &BUMPNORMALE$1, &MAPXY$1 );
 if( vr$24 != (boolean)0ll ) goto label$1947;
 {
  if( CURRAYDEPTH$1 != 0ll ) goto label$1949;
  {
   _ZN9RAYTRACER15BACKGROUNDCOLORER6VECTORS1_( THIS$1, RETCOL$1, &RAYDIRECTION$1 );
   label$1949:;
  }
 }
 goto label$1946;
 label$1947:;
 {
  struct $6VECTOR TMP$1562$2;
  struct $6VECTOR TMP$1563$2;
  struct $6VECTOR TMP$1564$2;
  struct $6VECTOR TMP$1565$2;
  struct $6VECTOR TMP$1566$2;
  MATID$1 = *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (HITOBJID$1 << (3ll & 63ll))) + 112ll);
  PMAT$1 = *(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll)));
  _ZN9RAYTRACER10LOCALCOLOREllR6VECTORS1_S1_S1_S1_S1_( THIS$1, HITOBJID$1, HITPOLYID$1, &RAYDIRECTION$1, &HITPOINT$1, &NORMALE$1, &BUMPNORMALE$1, &MAPXY$1, &LCOL$1 );
  MATID$1 = *(int64*)((uint8*)*(struct $8OBJECT3D**)((uint8*)*(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) + (HITOBJID$1 << (3ll & 63ll))) + 112ll);
  PMAT$1 = *(struct $8MATERIAL**)((uint8*)*(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) + (MATID$1 << (3ll & 63ll)));
  if( CURRAYDEPTH$1 < *(int64*)((uint8*)THIS$1 + 128ll) ) goto label$1951;
  {
   *(double*)&TCOL$1 = 0x0p+0;
   *(double*)((uint8*)&TCOL$1 + 8ll) = 0x0p+0;
   *(double*)((uint8*)&TCOL$1 + 16ll) = 0x0p+0;
   *(double*)&MCOL$1 = 0x0p+0;
   *(double*)((uint8*)&MCOL$1 + 8ll) = 0x0p+0;
   *(double*)((uint8*)&MCOL$1 + 16ll) = 0x0p+0;
  }
  goto label$1950;
  label$1951:;
  {
   if( *(double*)((uint8*)PMAT$1 + 80ll) <= 0x0p+0 ) goto label$1953;
   {
    _ZN9RAYTRACER9VECBROKENElR6VECTORS1_S1_S1_( THIS$1, HITOBJID$1, &HITPOINT$1, &NORMALE$1, &RAYDIRECTION$1, &BROKENRAYDIRECTION$1 );
    _ZN9RAYTRACER8RAYTRACEERK6VECTORS2_lRS0_( THIS$1, (struct $6VECTOR*)&HITPOINT$1, (struct $6VECTOR*)&BROKENRAYDIRECTION$1, CURRAYDEPTH$1 + 1ll, &TCOL$1 );
   }
   goto label$1952;
   label$1953:;
   {
    *(double*)&TCOL$1 = 0x0p+0;
    *(double*)((uint8*)&TCOL$1 + 8ll) = 0x0p+0;
    *(double*)((uint8*)&TCOL$1 + 16ll) = 0x0p+0;
   }
   label$1952:;
   if( *(double*)((uint8*)PMAT$1 + 72ll) <= 0x0p+0 ) goto label$1955;
   {
    _ZN9RAYTRACER9VECMIRRORER6VECTORS1_S1_S1_( THIS$1, &MIRRORAYDIRECTION$1, &RAYDIRECTION$1, &HITPOINT$1, &NORMALE$1 );
    _ZN9RAYTRACER8RAYTRACEERK6VECTORS2_lRS0_( THIS$1, (struct $6VECTOR*)&HITPOINT$1, (struct $6VECTOR*)&MIRRORAYDIRECTION$1, CURRAYDEPTH$1 + 1ll, &MCOL$1 );
   }
   goto label$1954;
   label$1955:;
   {
    *(double*)&MCOL$1 = 0x0p+0;
    *(double*)((uint8*)&MCOL$1 + 8ll) = 0x0p+0;
    *(double*)((uint8*)&MCOL$1 + 16ll) = 0x0p+0;
   }
   label$1954:;
  }
  label$1950:;
  struct $6VECTOR* vr$68 = _ZmlR6VECTORd( &TMP$1565$2, &TCOL$1, *(double*)((uint8*)PMAT$1 + 80ll) );
  struct $6VECTOR* vr$72 = _ZmlR6VECTORd( &TMP$1563$2, &MCOL$1, *(double*)((uint8*)PMAT$1 + 72ll) );
  struct $6VECTOR* vr$76 = _ZmlR6VECTORd( &TMP$1562$2, &LCOL$1, *(double*)((uint8*)PMAT$1 + 64ll) );
  struct $6VECTOR* vr$78 = _ZplR6VECTORS0_( &TMP$1564$2, vr$76, vr$72 );
  _ZplR6VECTORS0_( &TMP$1566$2, vr$78, vr$68 );
  __builtin_memcpy( RETCOL$1, &TMP$1566$2, 32 );
  _ZN9RAYTRACER12SURFACECOLORElR6VECTORS1_( THIS$1, HITOBJID$1, &MAPXY$1, RETCOL$1 );
 }
 label$1946:;
 label$1945:;
}

void _ZN9RAYTRACER5VBLUREll( struct $9RAYTRACER* THIS$1, int64 XP$1, int64 YP$1 )
{
 struct $6VECTOR TMP$1569$1;
 struct $6VECTOR TMP$1570$1;
 struct $6VECTOR TMP$1571$1;
 label$1956:;
 struct $6VECTOR VA$1;
 uint32 vr$3 = fb_GfxPoint( (void*)0ull, (float)XP$1, (float)(YP$1 + -1ll) );
 _ZN6VECTORC1Ej( &VA$1, vr$3 );
 struct $6VECTOR VB$1;
 uint32 vr$7 = fb_GfxPoint( (void*)0ull, (float)XP$1, (float)YP$1 );
 _ZN6VECTORC1Ej( &VB$1, vr$7 );
 struct $6VECTOR AB$1;
 struct $6VECTOR* vr$11 = _ZmlR6VECTORd( &TMP$1570$1, &VB$1, 0x1.p-1 );
 struct $6VECTOR* vr$14 = _ZmlR6VECTORd( &TMP$1569$1, &VA$1, 0x1.p-1 );
 struct $6VECTOR* vr$16 = _ZplR6VECTORS0_( &TMP$1571$1, vr$14, vr$11 );
 _ZN6VECTORC1ERS_( &AB$1, vr$16 );
 uint32 vr$19 = _ZN6VECTORcvjEv( &AB$1 );
 fb_GfxPset( (void*)0ull, (float)XP$1, (float)(YP$1 + -1ll), vr$19, 4, 0 );
 label$1957:;
}

void _ZN9RAYTRACER5HBLUREll( struct $9RAYTRACER* THIS$1, int64 XP$1, int64 YP$1 )
{
 struct $6VECTOR TMP$1574$1;
 struct $6VECTOR TMP$1575$1;
 struct $6VECTOR TMP$1576$1;
 label$1958:;
 struct $6VECTOR VA$1;
 uint32 vr$3 = fb_GfxPoint( (void*)0ull, (float)(XP$1 + -1ll), (float)YP$1 );
 _ZN6VECTORC1Ej( &VA$1, vr$3 );
 struct $6VECTOR VB$1;
 uint32 vr$7 = fb_GfxPoint( (void*)0ull, (float)XP$1, (float)YP$1 );
 _ZN6VECTORC1Ej( &VB$1, vr$7 );
 struct $6VECTOR AB$1;
 struct $6VECTOR* vr$11 = _ZmlR6VECTORd( &TMP$1575$1, &VB$1, 0x1.p-1 );
 struct $6VECTOR* vr$14 = _ZmlR6VECTORd( &TMP$1574$1, &VA$1, 0x1.p-1 );
 struct $6VECTOR* vr$16 = _ZplR6VECTORS0_( &TMP$1576$1, vr$14, vr$11 );
 _ZN6VECTORC1ERS_( &AB$1, vr$16 );
 uint32 vr$19 = _ZN6VECTORcvjEv( &AB$1 );
 fb_GfxPset( (void*)0ull, (float)(XP$1 + -1ll), (float)YP$1, vr$19, 4, 0 );
 label$1959:;
}

void _ZN9RAYTRACER8EDGEBLUREv( struct $9RAYTRACER* THIS$1 )
{
 label$1960:;
 {
  int64 Y$2;
  Y$2 = 1ll;
  int64 TMP$1577$2;
  TMP$1577$2 = *(int64*)((uint8*)THIS$1 + 8ll) + -1ll;
  goto label$1962;
  label$1965:;
  {
   {
    int64 X$4;
    X$4 = 0ll;
    int64 TMP$1578$4;
    TMP$1578$4 = *(int64*)THIS$1 + -1ll;
    goto label$1966;
    label$1969:;
    {
     struct $6VECTOR TMP$1581$5;
     struct $6VECTOR A$5;
     uint32 vr$7 = fb_GfxPoint( (void*)0ull, (float)X$4, (float)(Y$2 + -1ll) );
     _ZN6VECTORC1Ej( &A$5, vr$7 );
     struct $6VECTOR B$5;
     uint32 vr$11 = fb_GfxPoint( (void*)0ull, (float)X$4, (float)Y$2 );
     _ZN6VECTORC1Ej( &B$5, vr$11 );
     struct $6VECTOR D$5;
     struct $6VECTOR* vr$16 = _ZmiR6VECTORS0_( &TMP$1581$5, &B$5, &A$5 );
     _ZN6VECTORC1ERS_( &D$5, vr$16 );
     double L$5;
     double vr$19 = _ZN6VECTOR6LENGTHEv( &D$5 );
     L$5 = vr$19;
     if( L$5 < 0x1.54FDF3B645A1Dp-2 ) goto label$1971;
     {
      void* vr$24 = realloc( *(void**)((uint8*)THIS$1 + 312ll), (uint64)((*(int64*)((uint8*)THIS$1 + 304ll) << (3ll & 63ll)) + 8ll) );
      *(struct $7AAPIXEL***)((uint8*)THIS$1 + 312ll) = (struct $7AAPIXEL**)vr$24;
      void* vr$26 = malloc( 24ull );
      *(struct $7AAPIXEL**)((uint8*)*(struct $7AAPIXEL***)((uint8*)THIS$1 + 312ll) + (*(int64*)((uint8*)THIS$1 + 304ll) << (3ll & 63ll))) = (struct $7AAPIXEL*)vr$26;
      *(int64*)*(struct $7AAPIXEL**)((uint8*)*(struct $7AAPIXEL***)((uint8*)THIS$1 + 312ll) + (*(int64*)((uint8*)THIS$1 + 304ll) << (3ll & 63ll))) = 1ll;
      *(int64*)((uint8*)*(struct $7AAPIXEL**)((uint8*)*(struct $7AAPIXEL***)((uint8*)THIS$1 + 312ll) + (*(int64*)((uint8*)THIS$1 + 304ll) << (3ll & 63ll))) + 8ll) = X$4;
      *(int64*)((uint8*)*(struct $7AAPIXEL**)((uint8*)*(struct $7AAPIXEL***)((uint8*)THIS$1 + 312ll) + (*(int64*)((uint8*)THIS$1 + 304ll) << (3ll & 63ll))) + 16ll) = Y$2;
      *(int64*)((uint8*)THIS$1 + 304ll) = *(int64*)((uint8*)THIS$1 + 304ll) + 1ll;
     }
     label$1971:;
     label$1970:;
    }
    label$1967:;
    X$4 = X$4 + 1ll;
    label$1966:;
    if( X$4 <= TMP$1578$4 ) goto label$1969;
    label$1968:;
   }
  }
  label$1963:;
  Y$2 = Y$2 + 1ll;
  label$1962:;
  if( Y$2 <= TMP$1577$2 ) goto label$1965;
  label$1964:;
 }
 {
  int64 Y$2;
  Y$2 = 0ll;
  int64 TMP$1582$2;
  TMP$1582$2 = *(int64*)((uint8*)THIS$1 + 8ll) + -1ll;
  goto label$1972;
  label$1975:;
  {
   {
    int64 X$4;
    X$4 = 1ll;
    int64 TMP$1583$4;
    TMP$1583$4 = *(int64*)THIS$1 + -1ll;
    goto label$1976;
    label$1979:;
    {
     struct $6VECTOR TMP$1586$5;
     struct $6VECTOR A$5;
     uint32 vr$58 = fb_GfxPoint( (void*)0ull, (float)(X$4 + -1ll), (float)Y$2 );
     _ZN6VECTORC1Ej( &A$5, vr$58 );
     struct $6VECTOR B$5;
     uint32 vr$62 = fb_GfxPoint( (void*)0ull, (float)X$4, (float)Y$2 );
     _ZN6VECTORC1Ej( &B$5, vr$62 );
     struct $6VECTOR D$5;
     struct $6VECTOR* vr$67 = _ZmiR6VECTORS0_( &TMP$1586$5, &B$5, &A$5 );
     _ZN6VECTORC1ERS_( &D$5, vr$67 );
     double L$5;
     double vr$70 = _ZN6VECTOR6LENGTHEv( &D$5 );
     L$5 = vr$70;
     if( L$5 < 0x1.54FDF3B645A1Dp-2 ) goto label$1981;
     {
      void* vr$75 = realloc( *(void**)((uint8*)THIS$1 + 312ll), (uint64)((*(int64*)((uint8*)THIS$1 + 304ll) << (3ll & 63ll)) + 8ll) );
      *(struct $7AAPIXEL***)((uint8*)THIS$1 + 312ll) = (struct $7AAPIXEL**)vr$75;
      void* vr$77 = malloc( 24ull );
      *(struct $7AAPIXEL**)((uint8*)*(struct $7AAPIXEL***)((uint8*)THIS$1 + 312ll) + (*(int64*)((uint8*)THIS$1 + 304ll) << (3ll & 63ll))) = (struct $7AAPIXEL*)vr$77;
      *(int64*)*(struct $7AAPIXEL**)((uint8*)*(struct $7AAPIXEL***)((uint8*)THIS$1 + 312ll) + (*(int64*)((uint8*)THIS$1 + 304ll) << (3ll & 63ll))) = 0ll;
      *(int64*)((uint8*)*(struct $7AAPIXEL**)((uint8*)*(struct $7AAPIXEL***)((uint8*)THIS$1 + 312ll) + (*(int64*)((uint8*)THIS$1 + 304ll) << (3ll & 63ll))) + 8ll) = X$4;
      *(int64*)((uint8*)*(struct $7AAPIXEL**)((uint8*)*(struct $7AAPIXEL***)((uint8*)THIS$1 + 312ll) + (*(int64*)((uint8*)THIS$1 + 304ll) << (3ll & 63ll))) + 16ll) = Y$2;
      *(int64*)((uint8*)THIS$1 + 304ll) = *(int64*)((uint8*)THIS$1 + 304ll) + 1ll;
     }
     label$1981:;
     label$1980:;
    }
    label$1977:;
    X$4 = X$4 + 1ll;
    label$1976:;
    if( X$4 <= TMP$1583$4 ) goto label$1979;
    label$1978:;
   }
  }
  label$1973:;
  Y$2 = Y$2 + 1ll;
  label$1972:;
  if( Y$2 <= TMP$1582$2 ) goto label$1975;
  label$1974:;
 }
 if( *(struct $7AAPIXEL***)((uint8*)THIS$1 + 312ll) == (struct $7AAPIXEL**)0ull ) goto label$1983;
 {
  if( *(int64*)((uint8*)THIS$1 + 304ll) <= 0ll ) goto label$1985;
  {
   {
    int64 I$4;
    I$4 = 0ll;
    int64 TMP$1587$4;
    TMP$1587$4 = *(int64*)((uint8*)THIS$1 + 304ll) + -1ll;
    goto label$1986;
    label$1989:;
    {
     int64 X$5;
     X$5 = *(int64*)((uint8*)*(struct $7AAPIXEL**)((uint8*)*(struct $7AAPIXEL***)((uint8*)THIS$1 + 312ll) + (I$4 << (3ll & 63ll))) + 8ll);
     int64 Y$5;
     Y$5 = *(int64*)((uint8*)*(struct $7AAPIXEL**)((uint8*)*(struct $7AAPIXEL***)((uint8*)THIS$1 + 312ll) + (I$4 << (3ll & 63ll))) + 16ll);
     if( *(int64*)*(struct $7AAPIXEL**)((uint8*)*(struct $7AAPIXEL***)((uint8*)THIS$1 + 312ll) + (I$4 << (3ll & 63ll))) == 0ll ) goto label$1991;
     {
      _ZN9RAYTRACER5VBLUREll( THIS$1, X$5, Y$5 );
     }
     goto label$1990;
     label$1991:;
     {
      _ZN9RAYTRACER5HBLUREll( THIS$1, X$5, Y$5 );
     }
     label$1990:;
     free( *(void**)((uint8*)*(struct $7AAPIXEL***)((uint8*)THIS$1 + 312ll) + (I$4 << (3ll & 63ll))) );
     *(struct $7AAPIXEL**)((uint8*)*(struct $7AAPIXEL***)((uint8*)THIS$1 + 312ll) + (I$4 << (3ll & 63ll))) = (struct $7AAPIXEL*)0ull;
    }
    label$1987:;
    I$4 = I$4 + 1ll;
    label$1986:;
    if( I$4 <= TMP$1587$4 ) goto label$1989;
    label$1988:;
   }
   *(int64*)((uint8*)THIS$1 + 304ll) = 0ll;
  }
  label$1985:;
  label$1984:;
  free( *(void**)((uint8*)THIS$1 + 312ll) );
  *(struct $7AAPIXEL***)((uint8*)THIS$1 + 312ll) = (struct $7AAPIXEL**)0ull;
 }
 label$1983:;
 label$1982:;
 label$1961:;
}

void _ZN9RAYTRACER4BLUREv( struct $9RAYTRACER* THIS$1 )
{
 label$1992:;
 {
  int64 Y$2;
  Y$2 = 1ll;
  int64 TMP$1588$2;
  TMP$1588$2 = *(int64*)((uint8*)THIS$1 + 8ll) + -2ll;
  goto label$1994;
  label$1997:;
  {
   {
    int64 X$4;
    X$4 = 1ll;
    int64 TMP$1589$4;
    TMP$1589$4 = *(int64*)THIS$1 + -2ll;
    goto label$1998;
    label$2001:;
    {
     struct $6VECTOR TMP$1599$5;
     struct $6VECTOR TMP$1600$5;
     struct $6VECTOR TMP$1601$5;
     struct $6VECTOR TMP$1602$5;
     struct $6VECTOR TMP$1603$5;
     struct $6VECTOR TMP$1604$5;
     struct $6VECTOR TMP$1605$5;
     struct $6VECTOR TMP$1606$5;
     struct $6VECTOR C0$5;
     uint32 vr$8 = fb_GfxPoint( (void*)0ull, (float)(X$4 + -1ll), (float)(Y$2 + -1ll) );
     _ZN6VECTORC1Ej( &C0$5, vr$8 );
     struct $6VECTOR C1$5;
     uint32 vr$13 = fb_GfxPoint( (void*)0ull, (float)X$4, (float)(Y$2 + -1ll) );
     _ZN6VECTORC1Ej( &C1$5, vr$13 );
     struct $6VECTOR C2$5;
     uint32 vr$19 = fb_GfxPoint( (void*)0ull, (float)(X$4 + 1ll), (float)(Y$2 + -1ll) );
     _ZN6VECTORC1Ej( &C2$5, vr$19 );
     struct $6VECTOR C3$5;
     uint32 vr$24 = fb_GfxPoint( (void*)0ull, (float)(X$4 + -1ll), (float)Y$2 );
     _ZN6VECTORC1Ej( &C3$5, vr$24 );
     struct $6VECTOR C4$5;
     uint32 vr$28 = fb_GfxPoint( (void*)0ull, (float)X$4, (float)Y$2 );
     _ZN6VECTORC1Ej( &C4$5, vr$28 );
     struct $6VECTOR C5$5;
     uint32 vr$33 = fb_GfxPoint( (void*)0ull, (float)(X$4 + 1ll), (float)Y$2 );
     _ZN6VECTORC1Ej( &C5$5, vr$33 );
     struct $6VECTOR C6$5;
     uint32 vr$39 = fb_GfxPoint( (void*)0ull, (float)(X$4 + -1ll), (float)(Y$2 + 1ll) );
     _ZN6VECTORC1Ej( &C6$5, vr$39 );
     struct $6VECTOR C7$5;
     uint32 vr$44 = fb_GfxPoint( (void*)0ull, (float)X$4, (float)(Y$2 + 1ll) );
     _ZN6VECTORC1Ej( &C7$5, vr$44 );
     struct $6VECTOR C8$5;
     uint32 vr$50 = fb_GfxPoint( (void*)0ull, (float)(X$4 + 1ll), (float)(Y$2 + 1ll) );
     _ZN6VECTORC1Ej( &C8$5, vr$50 );
     struct $6VECTOR C$5;
     struct $6VECTOR* vr$62 = _ZplR6VECTORS0_( &TMP$1599$5, &C0$5, &C1$5 );
     struct $6VECTOR* vr$64 = _ZplR6VECTORS0_( &TMP$1600$5, vr$62, &C2$5 );
     struct $6VECTOR* vr$66 = _ZplR6VECTORS0_( &TMP$1601$5, vr$64, &C3$5 );
     struct $6VECTOR* vr$68 = _ZplR6VECTORS0_( &TMP$1602$5, vr$66, &C4$5 );
     struct $6VECTOR* vr$70 = _ZplR6VECTORS0_( &TMP$1603$5, vr$68, &C5$5 );
     struct $6VECTOR* vr$72 = _ZplR6VECTORS0_( &TMP$1604$5, vr$70, &C6$5 );
     struct $6VECTOR* vr$74 = _ZplR6VECTORS0_( &TMP$1605$5, vr$72, &C7$5 );
     struct $6VECTOR* vr$76 = _ZplR6VECTORS0_( &TMP$1606$5, vr$74, &C8$5 );
     _ZN6VECTORC1ERS_( &C$5, vr$76 );
     _ZN6VECTORmLEd( &C$5, 0x1.C71C71C71C71Cp-4 );
     uint32 vr$80 = _ZN6VECTORcvjEv( &C$5 );
     fb_GfxPset( (void*)0ull, (float)X$4, (float)Y$2, vr$80, 4, 0 );
    }
    label$1999:;
    X$4 = X$4 + 1ll;
    label$1998:;
    if( X$4 <= TMP$1589$4 ) goto label$2001;
    label$2000:;
   }
  }
  label$1995:;
  Y$2 = Y$2 + 1ll;
  label$1994:;
  if( Y$2 <= TMP$1588$2 ) goto label$1997;
  label$1996:;
 }
 label$1993:;
}

void _ZN9RAYTRACER6RENDERE6AATYPE( struct $9RAYTRACER* THIS$1, $6AATYPE ANTIALIAS$1 )
{
 FBSTRING TMP$1609$1;
 FBSTRING TMP$1610$1;
 FBSTRING TMP$1617$1;
 label$2002:;
 double T1$1;
 __builtin_memset( &T1$1, 0, 8ll );
 uint64* LPSCREEN$1;
 __builtin_memset( &LPSCREEN$1, 0, 8ll );
 void* vr$2 = fb_GfxScreenPtr( );
 if( vr$2 != (void*)0ull ) goto label$2005;
 {
  fb_GfxScreenRes( (int32)*(int64*)THIS$1, (int32)*(int64*)((uint8*)THIS$1 + 8ll), 32, 1, 0, 0 );
 }
 label$2005:;
 label$2004:;
 FBSTRING* vr$8 = fb_LongintToStr( *(int64*)((uint8*)THIS$1 + 8ll) );
 __builtin_memset( &TMP$1609$1, 0, 24ll );
 FBSTRING* vr$11 = fb_StrConcat( &TMP$1609$1, (void*)"render ", 8ll, (void*)vr$8, -1ll );
 __builtin_memset( &TMP$1610$1, 0, 24ll );
 FBSTRING* vr$14 = fb_StrConcat( &TMP$1610$1, (void*)vr$11, -1ll, (void*)" lines. [ESC]=cancel", 21ll );
 fb_GfxSetWindowTitle( (FBSTRING*)vr$14 );
 double vr$15 = fb_Timer( );
 T1$1 = vr$15;
 {
  int64 Y$2;
  Y$2 = 0ll;
  int64 TMP$1611$2;
  TMP$1611$2 = *(int64*)((uint8*)THIS$1 + 8ll) + -1ll;
  goto label$2006;
  label$2009:;
  {
   fb_GfxLock( );
   {
    int64 X$4;
    X$4 = 0ll;
    int64 TMP$1612$4;
    TMP$1612$4 = *(int64*)THIS$1 + -1ll;
    goto label$2010;
    label$2013:;
    {
     uint32 vr$20 = _ZN9RAYTRACER9SHOWPOINTEll( THIS$1, X$4, Y$2 );
     fb_GfxPset( (void*)0ull, (float)X$4, (float)Y$2, vr$20, 4, 0 );
    }
    label$2011:;
    X$4 = X$4 + 1ll;
    label$2010:;
    if( X$4 <= TMP$1612$4 ) goto label$2013;
    label$2012:;
   }
   fb_GfxUnlock( (int32)Y$2, (int32)(Y$2 + 1ll) );
  }
  label$2007:;
  Y$2 = Y$2 + 1ll;
  label$2006:;
  if( Y$2 <= TMP$1611$2 ) goto label$2009;
  label$2008:;
 }
 if( ANTIALIAS$1 == 0ll ) goto label$2015;
 {
  if( ANTIALIAS$1 != 1ll ) goto label$2017;
  {
   FBSTRING* vr$28 = fb_StrAllocTempDescZEx( (uint8*)"edge detection", 14ll );
   fb_GfxSetWindowTitle( (FBSTRING*)vr$28 );
   _ZN9RAYTRACER8EDGEBLUREv( THIS$1 );
  }
  goto label$2016;
  label$2017:;
  if( ANTIALIAS$1 != 2ll ) goto label$2018;
  {
   FBSTRING* vr$29 = fb_StrAllocTempDescZEx( (uint8*)"anitialias", 10ll );
   fb_GfxSetWindowTitle( (FBSTRING*)vr$29 );
   _ZN9RAYTRACER4BLUREv( THIS$1 );
  }
  label$2018:;
  label$2016:;
 }
 label$2015:;
 label$2014:;
 double vr$30 = fb_Timer( );
 T1$1 = vr$30 - T1$1;
 FBSTRING T$1;
 __builtin_memset( &T$1, 0, 24ll );
 int64 _H$1;
 __builtin_memset( &_H$1, 0, 8ll );
 int64 _M$1;
 __builtin_memset( &_M$1, 0, 8ll );
 int64 _S$1;
 __builtin_memset( &_S$1, 0, 8ll );
 if( __builtin_floor( T1$1 ) < 0x1.C2p+11 ) goto label$2020;
 {
  _H$1 = ((int64)__builtin_nearbyint( __builtin_floor( (T1$1 / 0x1.C2p+11) ) ));
  T1$1 = T1$1 - (double)(_H$1 * 3600ll);
  FBSTRING* vr$43 = fb_LongintToStr( _H$1 );
  fb_StrConcatAssign( (void*)&T$1, -1ll, (void*)vr$43, -1ll, 0 );
  fb_StrConcatAssign( (void*)&T$1, -1ll, (void*)":", 2ll, 0 );
  label$2020:;
 }
 if( __builtin_floor( T1$1 ) < 0x1.Ep+5 ) goto label$2022;
 {
  _M$1 = ((int64)__builtin_nearbyint( __builtin_floor( (T1$1 / 0x1.Ep+5) ) ));
  T1$1 = T1$1 - (double)(_M$1 * 60ll);
  FBSTRING* vr$53 = fb_LongintToStr( _M$1 );
  fb_StrConcatAssign( (void*)&T$1, -1ll, (void*)vr$53, -1ll, 0 );
  fb_StrConcatAssign( (void*)&T$1, -1ll, (void*)":", 2ll, 0 );
  label$2022:;
 }
 if( __builtin_floor( T1$1 ) < 0x1.p+0 ) goto label$2024;
 {
  _S$1 = ((int64)__builtin_nearbyint( __builtin_floor( T1$1 ) ));
  T1$1 = T1$1 - (double)_S$1;
  FBSTRING* vr$61 = fb_LongintToStr( _S$1 );
  fb_StrConcatAssign( (void*)&T$1, -1ll, (void*)vr$61, -1ll, 0 );
  label$2024:;
 }
 __builtin_memset( &TMP$1617$1, 0, 24ll );
 FBSTRING* vr$66 = fb_StrConcat( &TMP$1617$1, (void*)"time over all: ", 16ll, (void*)&T$1, -1ll );
 fb_GfxSetWindowTitle( (FBSTRING*)vr$66 );
 fb_StrDelete( (FBSTRING*)&T$1 );
 label$2003:;
}

void _ZN9RAYTRACER15RENDERRECTANGLEEllll( struct $9RAYTRACER* THIS$1, int64 X$1, int64 Y$1, int64 W$1, int64 H$1 )
{
 label$2025:;
 if( ((int64)-(W$1 == 0ll) & (int64)-(H$1 == 0ll)) == 0ll ) goto label$2028;
 {
  goto label$2026;
  label$2028:;
 }
 uint32 vr$3 = _ZN9RAYTRACER9SHOWPOINTEll( THIS$1, X$1, Y$1 );
 fb_GfxLine( (void*)0ull, (float)X$1, (float)Y$1, (float)W$1, (float)H$1, vr$3, 2, 65535u, 1 );
 goto label$2026;
 int64 XD$1;
 XD$1 = (int64)((uint64)W$1 + ((uint64)W$1 >> (63ll & 63ll))) >> (1ll & 63ll);
 int64 YD$1;
 YD$1 = (int64)((uint64)H$1 + ((uint64)H$1 >> (63ll & 63ll))) >> (1ll & 63ll);
 _ZN9RAYTRACER15RENDERRECTANGLEEllll( THIS$1, X$1 + XD$1, Y$1, XD$1, YD$1 );
 _ZN9RAYTRACER15RENDERRECTANGLEEllll( THIS$1, X$1 + XD$1, Y$1 + YD$1, XD$1, YD$1 );
 _ZN9RAYTRACER15RENDERRECTANGLEEllll( THIS$1, X$1, Y$1 + YD$1, XD$1, YD$1 );
 _ZN9RAYTRACER15RENDERRECTANGLEEllll( THIS$1, X$1, Y$1, XD$1, YD$1 );
 label$2026:;
}

void _ZN9RAYTRACER7RENDER2E6AATYPE( struct $9RAYTRACER* THIS$1, $6AATYPE ANTIALIAS$1 )
{
 int64 TMP$1622$1;
 FBSTRING TMP$1629$1;
 label$2029:;
 void* vr$0 = fb_GfxScreenPtr( );
 if( vr$0 != (void*)0ull ) goto label$2032;
 {
  fb_GfxScreenRes( (int32)*(int64*)THIS$1, (int32)*(int64*)((uint8*)THIS$1 + 8ll), 32, 1, 0, 0 );
 }
 label$2032:;
 label$2031:;
 double T1$1;
 double vr$5 = fb_Timer( );
 T1$1 = vr$5;
 FBSTRING* vr$6 = fb_StrAllocTempDescZEx( (uint8*)"render2 1080 lines. [ESC]=cancel", 32ll );
 fb_GfxSetWindowTitle( (FBSTRING*)vr$6 );
 int64 S$1;
 S$1 = 256ll;
 int64 FLAG$1;
 __builtin_memset( &FLAG$1, 0, 8ll );
 label$2033:;
 if( S$1 <= 0ll ) goto label$2035;
 TMP$1622$1 = (int64)-(FLAG$1 == 0ll);
 goto label$2059;
 label$2035:;
 TMP$1622$1 = 0ll;
 label$2059:;
 if( TMP$1622$1 == 0ll ) goto label$2034;
 {
  {
   int64 Y$3;
   Y$3 = 0ll;
   int64 TMP$1623$3;
   TMP$1623$3 = S$1;
   int64 TMP$1624$3;
   TMP$1624$3 = (int64)-(TMP$1623$3 >= 0ll);
   goto label$2036;
   label$2039:;
   {
    fb_GfxLock( );
    fb_GfxLine( (void*)0ull, 0x0p+0f, (float)Y$3, 0x1.DFCp+10f, (float)(S$1 + -1ll), 4294909984u, 2, 65535u, 1 );
    fb_GfxUnlock( (int32)Y$3, (int32)(Y$3 + S$1) );
    {
     int64 X$5;
     X$5 = 0ll;
     int64 TMP$1625$5;
     TMP$1625$5 = S$1;
     int64 TMP$1626$5;
     TMP$1626$5 = (int64)-(TMP$1625$5 >= 0ll);
     goto label$2040;
     label$2043:;
     {
      _ZN9RAYTRACER15RENDERRECTANGLEEllll( THIS$1, X$5, Y$3, S$1, S$1 );
     }
     label$2041:;
     X$5 = X$5 + TMP$1625$5;
     label$2040:;
     if( TMP$1626$5 != 0ll ) goto label$2044;
     if( X$5 >= 1919ll ) goto label$2043;
     goto label$2042;
     label$2044:;
     if( X$5 <= 1919ll ) goto label$2043;
     label$2042:;
    }
    FBSTRING* vr$18 = fb_Inkey( );
    int32 vr$19 = fb_StrCompare( (void*)vr$18, -1ll, (void*)"\x1B", 2ll );
    if( (int64)vr$19 != 0ll ) goto label$2046;
    {
     FLAG$1 = -1ll;
     goto label$2038;
    }
    label$2046:;
    label$2045:;
   }
   label$2037:;
   Y$3 = Y$3 + TMP$1623$3;
   label$2036:;
   if( TMP$1624$3 != 0ll ) goto label$2047;
   if( Y$3 >= 1079ll ) goto label$2039;
   goto label$2038;
   label$2047:;
   if( Y$3 <= 1079ll ) goto label$2039;
   label$2038:;
  }
  S$1 = S$1 >> (1ll & 63ll);
 }
 goto label$2033;
 label$2034:;
 if( ANTIALIAS$1 == 0ll ) goto label$2049;
 {
  if( ANTIALIAS$1 != 1ll ) goto label$2051;
  {
   FBSTRING* vr$23 = fb_StrAllocTempDescZEx( (uint8*)"edge detection", 14ll );
   fb_GfxSetWindowTitle( (FBSTRING*)vr$23 );
   _ZN9RAYTRACER8EDGEBLUREv( THIS$1 );
  }
  goto label$2050;
  label$2051:;
  if( ANTIALIAS$1 != 2ll ) goto label$2052;
  {
   FBSTRING* vr$24 = fb_StrAllocTempDescZEx( (uint8*)"antialias", 9ll );
   fb_GfxSetWindowTitle( (FBSTRING*)vr$24 );
   _ZN9RAYTRACER4BLUREv( THIS$1 );
  }
  label$2052:;
  label$2050:;
 }
 label$2049:;
 label$2048:;
 double vr$25 = fb_Timer( );
 T1$1 = vr$25 - T1$1;
 FBSTRING T$1;
 __builtin_memset( &T$1, 0, 24ll );
 int64 _H$1;
 __builtin_memset( &_H$1, 0, 8ll );
 int64 _M$1;
 __builtin_memset( &_M$1, 0, 8ll );
 int64 _S$1;
 __builtin_memset( &_S$1, 0, 8ll );
 if( __builtin_floor( T1$1 ) <= 0x1.C1Ep+11 ) goto label$2054;
 {
  _H$1 = ((int64)__builtin_nearbyint( __builtin_floor( (T1$1 / 0x1.C2p+11) ) ));
  T1$1 = T1$1 - (double)(_H$1 * 3600ll);
  FBSTRING* vr$38 = fb_LongintToStr( _H$1 );
  fb_StrAssign( (void*)&T$1, -1ll, (void*)vr$38, -1ll, 0 );
  fb_StrConcatAssign( (void*)&T$1, -1ll, (void*)":", 2ll, 0 );
  label$2054:;
 }
 if( __builtin_floor( T1$1 ) <= 0x1.D8p+5 ) goto label$2056;
 {
  _M$1 = ((int64)__builtin_nearbyint( __builtin_floor( (T1$1 / 0x1.Ep+5) ) ));
  T1$1 = T1$1 - (double)(_M$1 * 60ll);
  FBSTRING* vr$48 = fb_LongintToStr( _M$1 );
  fb_StrConcatAssign( (void*)&T$1, -1ll, (void*)vr$48, -1ll, 0 );
  fb_StrConcatAssign( (void*)&T$1, -1ll, (void*)":", 2ll, 0 );
  label$2056:;
 }
 if( __builtin_floor( T1$1 ) < 0x1.p+0 ) goto label$2058;
 {
  _S$1 = ((int64)__builtin_nearbyint( __builtin_floor( T1$1 ) ));
  T1$1 = T1$1 - (double)_S$1;
  FBSTRING* vr$56 = fb_LongintToStr( _S$1 );
  fb_StrConcatAssign( (void*)&T$1, -1ll, (void*)vr$56, -1ll, 0 );
  label$2058:;
 }
 __builtin_memset( &TMP$1629$1, 0, 24ll );
 FBSTRING* vr$61 = fb_StrConcat( &TMP$1629$1, (void*)"time over all: ", 16ll, (void*)&T$1, -1ll );
 fb_GfxSetWindowTitle( (FBSTRING*)vr$61 );
 fb_StrDelete( (FBSTRING*)&T$1 );
 label$2030:;
}

void _ZN5C64_TC1Ev( struct $5C64_T* THIS$1 )
{
 uint64 TMP$1689$1;
 int64 TMP$1690$1;
 int64 TMP$1691$1;
 struct $8MEMORY_T* TMP$1693$1;
 struct $7CPU6510* TMP$1695$1;
 label$2079:;
 __builtin_memset( (struct $8MEMORY_T**)THIS$1, 0, 8ll );
 __builtin_memset( (struct $7CPU6510**)((uint8*)THIS$1 + 8ll), 0, 8ll );
 *(uint8*)NIBBLES$ = (uint8)0u;
 *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) = (uint8)1u;
 *(uint8*)((int64)(uint8*)NIBBLES$ + 257ll) = (uint8)5u;
 *(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) = (uint8)8u;
 label$2081:;
 *(uint8*)((uint8*)NIBBLES$ + (int64)I$) = (uint8)I$;
 I$ = I$ + (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 fb_Locate( (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll), (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll), -1, 0, 0 );
 FBSTRING* vr$10 = fb_StrAllocTempDescZEx( (uint8*)"NIBBLES: ", 9ll );
 fb_PrintString( 0, (FBSTRING*)vr$10, 0 );
 if( I$ >= (uint64)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) & 63ll)) ) goto label$2082;
 TMP$1689$1 = I$;
 goto label$2091;
 label$2082:;
 TMP$1689$1 = I$ - (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 label$2091:;
 fb_PrintULongint( 0, TMP$1689$1, 1 );
 if( I$ > (uint64)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) & 63ll)) ) goto label$2084;
 goto label$2081;
 label$2084:;
 I$ = (uint64)*(uint8*)NIBBLES$;
 label$2085:;
 int64 I$1;
 __builtin_memset( &I$1, 0, 8ll );
 int64 C$1;
 __builtin_memset( &C$1, 0, 8ll );
 fb_GfxScreenRes( (int32)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) & 63ll)), (int32)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)), (int32)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)), (int32)*(uint8*)NIBBLES$, 64, 0 );
 fb_Cls( -65536 );
 FBSTRING* vr$41 = fb_StrAllocTempDescZEx( (uint8*)"", 0ll );
 TMP$1691$1 = 0ll;
 TMP$1690$1 = 0ll;
 fb_GfxScreenInfo64( (int64*)&SCR_W$, (int64*)&SCR_H$, (int64*)&IMGDATA$, (int64*)&PITCH$, &TMP$1690$1, &TMP$1691$1, vr$41 );
 void* vr$51 = fb_GfxImageCreate( (int32)SCR_W$, (int32)SCR_H$, (uint32)*(uint8*)NIBBLES$, (int32)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)), 0 );
 BGIMAGE$ = vr$51;
 void* vr$59 = fb_GfxImageCreate( (int32)SCR_W$, (int32)SCR_H$, (uint32)*(uint8*)NIBBLES$, (int32)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)), 0 );
 FGIMAGE$ = vr$59;
 void* vr$67 = fb_GfxImageCreate( (int32)SCR_W$, (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll), (uint32)*(uint8*)NIBBLES$, (int32)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)), 0 );
 RASTER$ = vr$67;
 void* vr$75 = fb_GfxImageCreate( (int32)SCR_W$, (int32)SCR_H$, (uint32)*(uint8*)NIBBLES$, (int32)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)), 0 );
 RENDER$ = vr$75;
 I$1 = (uint64)*(uint8*)NIBBLES$;
 label$2086:;
 fb_DataReadLongint( (int64*)&C$1 );
 typedef void (*_ZN5C64_T8tmp$1692Eiiii)( int32, int32, int32, int32 );
 ((_ZN5C64_T8tmp$1692Eiiii)&fb_GfxPalette)( (int32)(uint64)I$1, (int32)(uint64)C$1, (int32)-(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll), (int32)-(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 I$1 = (uint64)I$1 + (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 if( (uint64)I$1 >= (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) ) goto label$2088;
 goto label$2086;
 label$2088:;
 void* vr$89 = malloc( 151087112ull );
 TMP$1693$1 = (struct $8MEMORY_T*)vr$89;
 if( TMP$1693$1 == (struct $8MEMORY_T*)0ull ) goto label$2089;
 _ZN8MEMORY_TC1Ev( TMP$1693$1 );
 label$2089:;
 *(struct $8MEMORY_T**)THIS$1 = TMP$1693$1;
 void* vr$91 = malloc( 14720ull );
 TMP$1695$1 = (struct $7CPU6510*)vr$91;
 if( TMP$1695$1 == (struct $7CPU6510*)0ull ) goto label$2090;
 _ZN7CPU6510C1EP8MEMORY_T( TMP$1695$1, *(struct $8MEMORY_T**)THIS$1 );
 label$2090:;
 *(struct $7CPU6510**)((uint8*)THIS$1 + 8ll) = TMP$1695$1;
 label$2080:;
}

void _ZN5C64_TD1Ev( struct $5C64_T* THIS$1 )
{
 label$2092:;
 if( *(struct $7CPU6510**)((uint8*)THIS$1 + 8ll) == (struct $7CPU6510*)0ull ) goto label$2094;
 _ZN7CPU6510D1Ev( *(struct $7CPU6510**)((uint8*)THIS$1 + 8ll) );
 free( *(void**)((uint8*)THIS$1 + 8ll) );
 label$2094:;
 if( *(struct $8MEMORY_T**)THIS$1 == (struct $8MEMORY_T*)0ull ) goto label$2095;
 _ZN8MEMORY_TD1Ev( *(struct $8MEMORY_T**)THIS$1 );
 free( *(void**)THIS$1 );
 label$2095:;
 fb_GfxImageDestroy( (void*)BGIMAGE$ );
 fb_GfxImageDestroy( (void*)FGIMAGE$ );
 fb_GfxImageDestroy( (void*)RASTER$ );
 fb_GfxImageDestroy( (void*)RENDER$ );
 fb_Sleep( 1 );
 label$2093:;
}

void _ZN8MEMORY_TC1Ev( struct $8MEMORY_T* THIS$1 )
{
 FBSTRING TMP$1698$1;
 FBSTRING TMP$1699$1;
 FBSTRING TMP$1700$1;
 FBSTRING TMP$1701$1;
 FBSTRING TMP$1702$1;
 FBSTRING TMP$1703$1;
 FBSTRING TMP$1704$1;
 FBSTRING TMP$1705$1;
 FBSTRING TMP$1706$1;
 FBSTRING TMP$1707$1;
 FBSTRING TMP$1708$1;
 FBSTRING TMP$1709$1;
 FBSTRING TMP$1710$1;
 FBSTRING TMP$1711$1;
 FBSTRING TMP$1712$1;
 FBSTRING TMP$1713$1;
 FBSTRING TMP$1714$1;
 FBSTRING TMP$1715$1;
 FBSTRING TMP$1716$1;
 FBSTRING TMP$1717$1;
 FBSTRING TMP$1718$1;
 FBSTRING TMP$1719$1;
 FBSTRING TMP$1720$1;
 FBSTRING TMP$1721$1;
 FBSTRING TMP$1722$1;
 FBSTRING TMP$1723$1;
 FBSTRING TMP$1724$1;
 FBSTRING TMP$1725$1;
 FBSTRING TMP$1726$1;
 FBSTRING TMP$1727$1;
 FBSTRING TMP$1728$1;
 FBSTRING TMP$1729$1;
 FBSTRING TMP$1730$1;
 FBSTRING TMP$1731$1;
 FBSTRING TMP$1732$1;
 label$2096:;
 __builtin_memset( (double*)THIS$1, 0, 134217728ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 134217728ll), 0, 131072ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 134348800ll), 0, 131072ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 134479872ll), 0, 16588808ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 151068680ll), 0, 8192ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 151076872ll), 0, 2880ll );
 __builtin_memset( (double*)((uint8*)THIS$1 + 151079752ll), 0, 2880ll );
 _ZN9RAYTRACERC1Ev( (struct $9RAYTRACER*)((uint8*)THIS$1 + 151082632ll) );
 _ZN7VECTOR4C1Ev( (struct $7VECTOR4*)((uint8*)THIS$1 + 151082952ll) );
 _ZN7VECTOR2C1Ev( (struct $7VECTOR2*)((uint8*)THIS$1 + 151082984ll) );
 _ZN7VECTOR2C1Ev( (struct $7VECTOR2*)((uint8*)THIS$1 + 151083000ll) );
 __builtin_memset( (uint8*)((uint8*)THIS$1 + 151083016ll), 0, 2048ll );
 __builtin_memset( (uint8*)((uint8*)THIS$1 + 151085064ll), 0, 2048ll );
 SYS_OFFSET$ = (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll));
 fb_DataRestore( (void*)label$2099 );
 label$2100:;
 fb_DataReadLongint( (int64*)&C$ );
 *(double*)((uint8*)THIS$1 + ((int64)I$ << (3ll & 63ll))) = (double)(uint64)C$;
 I$ = I$ + (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 if( I$ > (uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$2102;
 goto label$2100;
 label$2102:;
 I$ = (uint64)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll));
 label$2103:;
 *(double*)((uint8*)THIS$1 + ((int64)I$ << (3ll & 63ll))) = (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll));
 I$ = I$ + (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 if( I$ > (uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$2105;
 goto label$2103;
 label$2105:;
 I$ = (uint64)*(uint8*)NIBBLES$;
 label$2106:;
 *(double*)((uint8*)((uint8*)THIS$1 + ((int64)I$ << (3ll & 63ll))) + 151076872ll) = __builtin_sin( (double)((((int64)__builtin_nearbyint( ((double)I$ * 0x1.921FB54442D18p+1) / (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) )) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) );
 *(double*)((uint8*)((uint8*)THIS$1 + ((int64)I$ << (3ll & 63ll))) + 151079752ll) = __builtin_cos( (double)((((int64)__builtin_nearbyint( ((double)I$ * 0x1.921FB54442D18p+1) / (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) )) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) );
 I$ = I$ + (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 if( I$ > (uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$2108;
 goto label$2106;
 label$2108:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)), (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)), (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)), (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)), (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)), (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8264p+15, (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)), (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)), (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)), (double)*(uint8*)NIBBLES$ );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)), (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)), (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)), (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) );
 I$ = (uint64)*(uint8*)NIBBLES$;
 uint8 TMP$1;
 __builtin_memset( &TMP$1, 0, 1ll );
 FBSTRING* vr$251 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) );
 FBSTRING* vr$257 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) );
 FBSTRING* vr$263 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
 FBSTRING* vr$269 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) );
 FBSTRING* vr$275 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
 FBSTRING* vr$279 = fb_CHR( 1, (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll) );
 FBSTRING* vr$285 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) );
 FBSTRING* vr$291 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) );
 FBSTRING* vr$297 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
 FBSTRING* vr$301 = fb_CHR( 1, (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll) );
 FBSTRING* vr$307 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) );
 FBSTRING* vr$313 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 FBSTRING* vr$319 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) );
 FBSTRING* vr$325 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) );
 FBSTRING* vr$331 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) );
 FBSTRING* vr$337 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) );
 FBSTRING* vr$343 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) );
 FBSTRING* vr$349 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) );
 FBSTRING* vr$353 = fb_CHR( 1, (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll) );
 FBSTRING* vr$359 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) );
 FBSTRING* vr$365 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) );
 FBSTRING* vr$371 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) );
 __builtin_memset( &TMP$1698$1, 0, 24ll );
 FBSTRING* vr$374 = fb_StrConcat( &TMP$1698$1, (void*)vr$371, -1ll, (void*)vr$365, -1ll );
 __builtin_memset( &TMP$1699$1, 0, 24ll );
 FBSTRING* vr$377 = fb_StrConcat( &TMP$1699$1, (void*)vr$374, -1ll, (void*)vr$359, -1ll );
 __builtin_memset( &TMP$1700$1, 0, 24ll );
 FBSTRING* vr$380 = fb_StrConcat( &TMP$1700$1, (void*)vr$377, -1ll, (void*)vr$353, -1ll );
 __builtin_memset( &TMP$1701$1, 0, 24ll );
 FBSTRING* vr$383 = fb_StrConcat( &TMP$1701$1, (void*)vr$380, -1ll, (void*)vr$349, -1ll );
 __builtin_memset( &TMP$1702$1, 0, 24ll );
 FBSTRING* vr$386 = fb_StrConcat( &TMP$1702$1, (void*)vr$383, -1ll, (void*)vr$343, -1ll );
 __builtin_memset( &TMP$1703$1, 0, 24ll );
 FBSTRING* vr$389 = fb_StrConcat( &TMP$1703$1, (void*)vr$386, -1ll, (void*)vr$337, -1ll );
 __builtin_memset( &TMP$1704$1, 0, 24ll );
 FBSTRING* vr$392 = fb_StrConcat( &TMP$1704$1, (void*)vr$389, -1ll, (void*)vr$331, -1ll );
 __builtin_memset( &TMP$1705$1, 0, 24ll );
 FBSTRING* vr$395 = fb_StrConcat( &TMP$1705$1, (void*)vr$392, -1ll, (void*)vr$325, -1ll );
 __builtin_memset( &TMP$1706$1, 0, 24ll );
 FBSTRING* vr$398 = fb_StrConcat( &TMP$1706$1, (void*)vr$395, -1ll, (void*)vr$319, -1ll );
 __builtin_memset( &TMP$1707$1, 0, 24ll );
 FBSTRING* vr$401 = fb_StrConcat( &TMP$1707$1, (void*)vr$398, -1ll, (void*)vr$313, -1ll );
 __builtin_memset( &TMP$1708$1, 0, 24ll );
 FBSTRING* vr$404 = fb_StrConcat( &TMP$1708$1, (void*)vr$401, -1ll, (void*)vr$307, -1ll );
 __builtin_memset( &TMP$1709$1, 0, 24ll );
 FBSTRING* vr$407 = fb_StrConcat( &TMP$1709$1, (void*)vr$404, -1ll, (void*)vr$301, -1ll );
 __builtin_memset( &TMP$1710$1, 0, 24ll );
 FBSTRING* vr$410 = fb_StrConcat( &TMP$1710$1, (void*)vr$407, -1ll, (void*)vr$297, -1ll );
 __builtin_memset( &TMP$1711$1, 0, 24ll );
 FBSTRING* vr$413 = fb_StrConcat( &TMP$1711$1, (void*)vr$410, -1ll, (void*)vr$291, -1ll );
 __builtin_memset( &TMP$1712$1, 0, 24ll );
 FBSTRING* vr$416 = fb_StrConcat( &TMP$1712$1, (void*)vr$413, -1ll, (void*)vr$285, -1ll );
 __builtin_memset( &TMP$1713$1, 0, 24ll );
 FBSTRING* vr$419 = fb_StrConcat( &TMP$1713$1, (void*)vr$416, -1ll, (void*)vr$279, -1ll );
 __builtin_memset( &TMP$1714$1, 0, 24ll );
 FBSTRING* vr$422 = fb_StrConcat( &TMP$1714$1, (void*)vr$419, -1ll, (void*)vr$275, -1ll );
 __builtin_memset( &TMP$1715$1, 0, 24ll );
 FBSTRING* vr$425 = fb_StrConcat( &TMP$1715$1, (void*)vr$422, -1ll, (void*)vr$269, -1ll );
 __builtin_memset( &TMP$1716$1, 0, 24ll );
 FBSTRING* vr$428 = fb_StrConcat( &TMP$1716$1, (void*)vr$425, -1ll, (void*)vr$263, -1ll );
 __builtin_memset( &TMP$1717$1, 0, 24ll );
 FBSTRING* vr$431 = fb_StrConcat( &TMP$1717$1, (void*)vr$428, -1ll, (void*)vr$257, -1ll );
 __builtin_memset( &TMP$1718$1, 0, 24ll );
 FBSTRING* vr$434 = fb_StrConcat( &TMP$1718$1, (void*)vr$431, -1ll, (void*)vr$251, -1ll );
 fb_FileOpen( (FBSTRING*)vr$434, 0u, 0u, 0u, (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll), 0 );
 label$2109:;
 fb_FileGetLarge( 1, 0ll, (void*)&TMP$1, 1ull );
 *(double*)((uint8*)((uint8*)THIS$1 + ((int64)I$ << (3ll & 63ll))) + 134348800ll) = (double)TMP$1;
 I$ = I$ + (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 if( I$ > (uint64)(((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$2111;
 goto label$2109;
 label$2111:;
 I$ = (uint64)*(uint8*)NIBBLES$;
 label$2112:;
 fb_FileGetLarge( 1, 0ll, (void*)&TMP$1, 1ull );
 *(double*)((uint8*)((uint8*)THIS$1 + ((int64)I$ << (3ll & 63ll))) + 134217728ll) = (double)TMP$1;
 I$ = I$ + (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 if( I$ > (uint64)(((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$2114;
 goto label$2112;
 label$2114:;
 fb_FileClose( (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 FBSTRING* vr$481 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) );
 FBSTRING* vr$487 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) );
 FBSTRING* vr$493 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) );
 FBSTRING* vr$499 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) );
 FBSTRING* vr$505 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
 FBSTRING* vr$511 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) );
 FBSTRING* vr$517 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) );
 FBSTRING* vr$523 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) );
 FBSTRING* vr$529 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) );
 FBSTRING* vr$535 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
 FBSTRING* vr$541 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 FBSTRING* vr$547 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) );
 FBSTRING* vr$553 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) );
 FBSTRING* vr$559 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) );
 FBSTRING* vr$565 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) );
 __builtin_memset( &TMP$1719$1, 0, 24ll );
 FBSTRING* vr$568 = fb_StrConcat( &TMP$1719$1, (void*)vr$565, -1ll, (void*)vr$559, -1ll );
 __builtin_memset( &TMP$1720$1, 0, 24ll );
 FBSTRING* vr$571 = fb_StrConcat( &TMP$1720$1, (void*)vr$568, -1ll, (void*)vr$553, -1ll );
 __builtin_memset( &TMP$1721$1, 0, 24ll );
 FBSTRING* vr$574 = fb_StrConcat( &TMP$1721$1, (void*)vr$571, -1ll, (void*)vr$547, -1ll );
 __builtin_memset( &TMP$1722$1, 0, 24ll );
 FBSTRING* vr$577 = fb_StrConcat( &TMP$1722$1, (void*)vr$574, -1ll, (void*)vr$541, -1ll );
 __builtin_memset( &TMP$1723$1, 0, 24ll );
 FBSTRING* vr$580 = fb_StrConcat( &TMP$1723$1, (void*)vr$577, -1ll, (void*)vr$535, -1ll );
 __builtin_memset( &TMP$1724$1, 0, 24ll );
 FBSTRING* vr$583 = fb_StrConcat( &TMP$1724$1, (void*)vr$580, -1ll, (void*)vr$529, -1ll );
 __builtin_memset( &TMP$1725$1, 0, 24ll );
 FBSTRING* vr$586 = fb_StrConcat( &TMP$1725$1, (void*)vr$583, -1ll, (void*)vr$523, -1ll );
 __builtin_memset( &TMP$1726$1, 0, 24ll );
 FBSTRING* vr$589 = fb_StrConcat( &TMP$1726$1, (void*)vr$586, -1ll, (void*)vr$517, -1ll );
 __builtin_memset( &TMP$1727$1, 0, 24ll );
 FBSTRING* vr$592 = fb_StrConcat( &TMP$1727$1, (void*)vr$589, -1ll, (void*)vr$511, -1ll );
 __builtin_memset( &TMP$1728$1, 0, 24ll );
 FBSTRING* vr$595 = fb_StrConcat( &TMP$1728$1, (void*)vr$592, -1ll, (void*)vr$505, -1ll );
 __builtin_memset( &TMP$1729$1, 0, 24ll );
 FBSTRING* vr$598 = fb_StrConcat( &TMP$1729$1, (void*)vr$595, -1ll, (void*)vr$499, -1ll );
 __builtin_memset( &TMP$1730$1, 0, 24ll );
 FBSTRING* vr$601 = fb_StrConcat( &TMP$1730$1, (void*)vr$598, -1ll, (void*)vr$493, -1ll );
 __builtin_memset( &TMP$1731$1, 0, 24ll );
 FBSTRING* vr$604 = fb_StrConcat( &TMP$1731$1, (void*)vr$601, -1ll, (void*)vr$487, -1ll );
 __builtin_memset( &TMP$1732$1, 0, 24ll );
 FBSTRING* vr$607 = fb_StrConcat( &TMP$1732$1, (void*)vr$604, -1ll, (void*)vr$481, -1ll );
 fb_FileOpen( (FBSTRING*)vr$607, 0u, 0u, 0u, (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll), 0 );
 I$ = (uint64)*(uint8*)NIBBLES$;
 label$2115:;
 fb_FileGetLarge( 1, 0ll, (void*)&TMP$1, 1ull );
 *(double*)((uint8*)((uint8*)THIS$1 + ((int64)I$ << (3ll & 63ll))) + 134479872ll) = (double)TMP$1;
 I$ = I$ + (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 if( I$ > (uint64)(((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$2117;
 goto label$2115;
 label$2117:;
 {
  uint64 TIMES$2;
  TIMES$2 = 0ull;
  label$2121:;
  {
   fb_FileSeek( (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll), (int32)*(uint8*)NIBBLES$ );
   I$ = (uint64)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll));
   label$2122:;
   fb_FileGetLarge( 1, 0ll, (void*)&TMP$1, 1ull );
   *(double*)((uint8*)((uint8*)THIS$1 + ((int64)I$ << (3ll & 63ll))) + 134479872ll) = (double)TMP$1;
   I$ = I$ + (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
   if( I$ > (uint64)(((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$2124;
   goto label$2122;
   label$2124:;
  }
  label$2119:;
  TIMES$2 = TIMES$2 + 1ull;
  label$2118:;
  if( TIMES$2 <= 506ull ) goto label$2121;
  label$2120:;
 }
 fb_FileClose( (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, (double)*(uint8*)NIBBLES$, __builtin_inf() );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll), __builtin_inf() );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, (double)(((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)), __builtin_inf() );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, (double)(((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)), __builtin_inf() );
 FBSTRING* vr$684 = fb_StrAllocTempDescZEx( (uint8*)"", 0ll );
 fb_GfxPaint( (void*)0ull, (float)*(uint8*)NIBBLES$, (float)*(uint8*)NIBBLES$, (uint32)(((((int64)(uint32)*(uint8*)NIBBLES$ << (16ll & 63ll)) | ((int64)(uint32)*(uint8*)NIBBLES$ << (8ll & 63ll))) | (int64)(uint32)*(uint8*)NIBBLES$) | ((int64)(uint32)(uint8)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) << (24ll & 63ll))), 0u, (FBSTRING*)vr$684, 0, 1073741828 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, (double)(((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)), (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, (double)(((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)), (double)*(uint8*)NIBBLES$ );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, (double)(((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)), (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, (double)(((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)), (double)*(uint8*)NIBBLES$ );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, (double)(((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)), (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, (double)(((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)), (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) );
 FBSTRING MEM$1;
 FBSTRING* vr$815 = fb_CHR( 1, (int64)*(uint8*)NIBBLES$ );
 fb_StrInit( (void*)&MEM$1, -1ll, (void*)vr$815, -1ll, 0 );
 I$ = (uint64)*(uint8*)NIBBLES$;
 FBSTRING* vr$823 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
 fb_StrAssign( (void*)&MEM$1, -1ll, (void*)vr$823, -1ll, 0 );
 FBSTRING* vr$830 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$830, -1ll, 0 );
 FBSTRING* vr$837 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$837, -1ll, 0 );
 FBSTRING* vr$844 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$844, -1ll, 0 );
 FBSTRING* vr$851 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$851, -1ll, 0 );
 I$ = (uint64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 label$2125:;
 FBSTRING* vr$860 = fb_StrMid( (FBSTRING*)&MEM$1, (int64)I$, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) );
 uint32 vr$861 = fb_ASC( (FBSTRING*)vr$860, 1ll );
 *(double*)((uint8*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) + I$) << (3ll & 63ll))) + 134217728ll) = (double)vr$861;
 if( ((int64)-(*(double*)((uint8*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) + I$) << (3ll & 63ll))) + 134217728ll) > (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) & (int64)-(*(double*)((uint8*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) + I$) << (3ll & 63ll))) + 134217728ll) < (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)))) == 0ll ) goto label$2127;
 goto label$2128;
 label$2127:;
 I$ = I$ + (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 int64 vr$915 = fb_StrLen( (void*)&MEM$1, -1ll );
 if( I$ > (uint64)vr$915 ) goto label$2130;
 goto label$2125;
 label$2130:;
 goto label$2131;
 label$2128:;
 *(double*)((uint8*)((uint8*)THIS$1 + ((int64)((uint64)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + I$) << (3ll & 63ll))) + 134217728ll) = *(double*)((uint8*)((uint8*)((uint8*)THIS$1 + ((int64)((uint64)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + I$) << (3ll & 63ll))) + 134217728ll) + (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) << (3ll & 63ll)));
 goto label$2125;
 label$2131:;
 FBSTRING* vr$947 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) );
 fb_StrAssign( (void*)&MEM$1, -1ll, (void*)vr$947, -1ll, 0 );
 FBSTRING* vr$954 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$954, -1ll, 0 );
 FBSTRING* vr$961 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$961, -1ll, 0 );
 FBSTRING* vr$968 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$968, -1ll, 0 );
 I$ = (uint64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 label$2132:;
 FBSTRING* vr$973 = fb_StrMid( (FBSTRING*)&MEM$1, (int64)I$, (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 uint32 vr$974 = fb_ASC( (FBSTRING*)vr$973, 1ll );
 *(double*)((uint8*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) + I$) << (3ll & 63ll))) + 134217728ll) = (double)vr$974;
 if( ((int64)-(*(double*)((uint8*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) + I$) << (3ll & 63ll))) + 134217728ll) > (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) & (int64)-(*(double*)((uint8*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) + I$) << (3ll & 63ll))) + 134217728ll) < (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)))) == 0ll ) goto label$2134;
 goto label$2135;
 label$2134:;
 I$ = I$ + (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 int64 vr$1028 = fb_StrLen( (void*)&MEM$1, -1ll );
 if( I$ > (uint64)vr$1028 ) goto label$2137;
 goto label$2132;
 label$2137:;
 goto label$2138;
 label$2135:;
 *(double*)((uint8*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) + I$) << (3ll & 63ll))) + 134217728ll) = *(double*)((uint8*)((uint8*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) + I$) << (3ll & 63ll))) + 134217728ll) + (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) << (3ll & 63ll)));
 goto label$2132;
 label$2138:;
 *(double*)((uint8*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) << (3ll & 63ll))) + 134217728ll) = (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll));
 *(double*)((uint8*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) << (3ll & 63ll))) + 134217728ll) = (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll));
 *(double*)((uint8*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) << (3ll & 63ll))) + 134217728ll) = (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll));
 FBSTRING* vr$1111 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) );
 fb_StrAssign( (void*)&MEM$1, -1ll, (void*)vr$1111, -1ll, 0 );
 FBSTRING* vr$1118 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1118, -1ll, 0 );
 FBSTRING* vr$1125 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1125, -1ll, 0 );
 FBSTRING* vr$1132 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1132, -1ll, 0 );
 FBSTRING* vr$1139 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1139, -1ll, 0 );
 FBSTRING* vr$1146 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1146, -1ll, 0 );
 FBSTRING* vr$1153 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1153, -1ll, 0 );
 FBSTRING* vr$1160 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1160, -1ll, 0 );
 FBSTRING* vr$1167 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1167, -1ll, 0 );
 I$ = (uint64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 label$2139:;
 FBSTRING* vr$1172 = fb_StrMid( (FBSTRING*)&MEM$1, (int64)I$, (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 uint32 vr$1173 = fb_ASC( (FBSTRING*)vr$1172, 1ll );
 *(double*)((uint8*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) + I$) << (3ll & 63ll))) + 134217728ll) = (double)vr$1173;
 if( ((int64)-(*(double*)((uint8*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) + I$) << (3ll & 63ll))) + 134217728ll) > (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) & (int64)-(*(double*)((uint8*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) + I$) << (3ll & 63ll))) + 134217728ll) < (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)))) == 0ll ) goto label$2141;
 goto label$2142;
 label$2141:;
 I$ = I$ + (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 int64 vr$1227 = fb_StrLen( (void*)&MEM$1, -1ll );
 if( I$ > (uint64)vr$1227 ) goto label$2144;
 goto label$2139;
 label$2144:;
 goto label$2145;
 label$2142:;
 *(double*)((uint8*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) + I$) << (3ll & 63ll))) + 134217728ll) = *(double*)((uint8*)((uint8*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) + I$) << (3ll & 63ll))) + 134217728ll) + (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) << (3ll & 63ll)));
 goto label$2139;
 label$2145:;
 *(double*)((uint8*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) << (3ll & 63ll))) + 134217728ll) = (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll));
 FBSTRING* vr$1278 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
 fb_StrAssign( (void*)&MEM$1, -1ll, (void*)vr$1278, -1ll, 0 );
 FBSTRING* vr$1285 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1285, -1ll, 0 );
 FBSTRING* vr$1292 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1292, -1ll, 0 );
 FBSTRING* vr$1299 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1299, -1ll, 0 );
 FBSTRING* vr$1306 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1306, -1ll, 0 );
 I$ = (uint64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 label$2146:;
 FBSTRING* vr$1311 = fb_StrMid( (FBSTRING*)&MEM$1, (int64)I$, (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 uint32 vr$1312 = fb_ASC( (FBSTRING*)vr$1311, 1ll );
 *(double*)((uint8*)((uint8*)THIS$1 + ((int64)((uint64)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + I$) << (3ll & 63ll))) + 134217728ll) = (double)vr$1312;
 if( ((int64)-(*(double*)((uint8*)((uint8*)THIS$1 + ((int64)((uint64)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + I$) << (3ll & 63ll))) + 134217728ll) > (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) & (int64)-(*(double*)((uint8*)((uint8*)THIS$1 + ((int64)((uint64)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + I$) << (3ll & 63ll))) + 134217728ll) < (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)))) == 0ll ) goto label$2148;
 goto label$2149;
 label$2148:;
 FBSTRING* vr$1359 = fb_StrMid( (FBSTRING*)&MEM$1, (int64)I$, (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 uint32 vr$1360 = fb_ASC( (FBSTRING*)vr$1359, 1ll );
 *(double*)((uint8*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) + I$) << (3ll & 63ll))) + 134217728ll) = (double)vr$1360;
 if( ((int64)-(*(double*)((uint8*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) + I$) << (3ll & 63ll))) + 134217728ll) > (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) & (int64)-(*(double*)((uint8*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) + I$) << (3ll & 63ll))) + 134217728ll) < (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll))) == 0ll ) goto label$2151;
 goto label$2152;
 label$2151:;
 I$ = I$ + (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 int64 vr$1412 = fb_StrLen( (void*)&MEM$1, -1ll );
 if( I$ > (uint64)vr$1412 ) goto label$2154;
 goto label$2146;
 label$2154:;
 goto label$2155;
 label$2149:;
 *(double*)((uint8*)((uint8*)THIS$1 + ((int64)((uint64)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + I$) << (3ll & 63ll))) + 134217728ll) = *(double*)((uint8*)((uint8*)((uint8*)THIS$1 + ((int64)((uint64)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + I$) << (3ll & 63ll))) + 134217728ll) + (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) << (3ll & 63ll)));
 goto label$2146;
 label$2152:;
 *(double*)((uint8*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) + I$) << (3ll & 63ll))) + 134217728ll) = *(double*)((uint8*)((uint8*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) + I$) << (3ll & 63ll))) + 134217728ll) + (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) << (3ll & 63ll)));
 goto label$2146;
 label$2155:;
 *(double*)((uint8*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) << (3ll & 63ll))) + 134217728ll) = (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll));
 *(double*)((uint8*)((uint8*)THIS$1 + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) << (3ll & 63ll))) + 134217728ll) = (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll));
 *(double*)((uint8*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) << (3ll & 63ll))) + 134217728ll) = (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll));
 *(double*)((uint8*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) << (3ll & 63ll))) + 134217728ll) = (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll));
 *(double*)((uint8*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) << (3ll & 63ll))) + 134217728ll) = (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll));
 FBSTRING* vr$1551 = fb_CHR( 1, (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll) );
 fb_StrAssign( (void*)&MEM$1, -1ll, (void*)vr$1551, -1ll, 0 );
 FBSTRING* vr$1558 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1558, -1ll, 0 );
 FBSTRING* vr$1565 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1565, -1ll, 0 );
 FBSTRING* vr$1572 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1572, -1ll, 0 );
 FBSTRING* vr$1577 = fb_CHR( 1, (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1577, -1ll, 0 );
 FBSTRING* vr$1584 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1584, -1ll, 0 );
 FBSTRING* vr$1591 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1591, -1ll, 0 );
 FBSTRING* vr$1598 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1598, -1ll, 0 );
 FBSTRING* vr$1605 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1605, -1ll, 0 );
 FBSTRING* vr$1612 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1612, -1ll, 0 );
 FBSTRING* vr$1619 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1619, -1ll, 0 );
 I$ = (uint64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 label$2156:;
 FBSTRING* vr$1624 = fb_StrMid( (FBSTRING*)&MEM$1, (int64)I$, (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 uint32 vr$1625 = fb_ASC( (FBSTRING*)vr$1624, 1ll );
 *(double*)((uint8*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) + I$) << (3ll & 63ll))) + 134217728ll) = (double)vr$1625;
 if( ((int64)-(*(double*)((uint8*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) + I$) << (3ll & 63ll))) + 134217728ll) > (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) & (int64)-(*(double*)((uint8*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) + I$) << (3ll & 63ll))) + 134217728ll) < (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)))) == 0ll ) goto label$2158;
 goto label$2159;
 label$2158:;
 label$2159:;
 I$ = I$ + (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 int64 vr$1675 = fb_StrLen( (void*)&MEM$1, -1ll );
 if( I$ > (uint64)vr$1675 ) goto label$2161;
 goto label$2156;
 label$2161:;
 goto label$2162;
 label$2163:;
 *(double*)((uint8*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) + I$) << (3ll & 63ll))) + 134217728ll) = *(double*)((uint8*)((uint8*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) + I$) << (3ll & 63ll))) + 134217728ll) + (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) << (3ll & 63ll)));
 goto label$2159;
 label$2162:;
 uint64 vr$1710 = fb_GetMemAvail( ((int32)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + ((int64)*(uint8*)NIBBLES$ << (3ll & 63ll))) )) );
 double vr$1717 = pow( (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)), (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) );
 FBSTRING* vr$1720 = fb_ULongintToStr( vr$1710 / ((uint64)__builtin_nearbyint( vr$1717 )) );
 fb_StrAssign( (void*)&MEM$1, -1ll, (void*)vr$1720, -1ll, 0 );
 int64 vr$1723 = fb_StrLen( (void*)&MEM$1, -1ll );
 if( vr$1723 != (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$2165;
 goto label$2166;
 label$2165:;
 int64 vr$1726 = fb_StrLen( (void*)&MEM$1, -1ll );
 if( vr$1726 != (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) ) goto label$2168;
 goto label$2169;
 label$2168:;
 label$2166:;
 uint32 vr$1729 = fb_ASC( (FBSTRING*)&MEM$1, 1ll );
 *(double*)((uint8*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) + 134217728ll) = (double)vr$1729;
 *(double*)((uint8*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) << (3ll & 63ll))) + 134217728ll) = (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll));
 *(double*)((uint8*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) << (3ll & 63ll))) + 134217728ll) = (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll));
 goto label$2170;
 label$2169:;
 FBSTRING* vr$1779 = fb_StrMid( (FBSTRING*)&MEM$1, (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll), (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 uint32 vr$1780 = fb_ASC( (FBSTRING*)vr$1779, 1ll );
 *(double*)((uint8*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) + 134217728ll) = (double)vr$1780;
 FBSTRING* vr$1796 = fb_StrMid( (FBSTRING*)&MEM$1, (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll), (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 uint32 vr$1797 = fb_ASC( (FBSTRING*)vr$1796, 1ll );
 *(double*)((uint8*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) << (3ll & 63ll))) + 134217728ll) = (double)vr$1797;
 *(double*)((uint8*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) << (3ll & 63ll))) + 134217728ll) = (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll));
 *(double*)((uint8*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) << (3ll & 63ll))) + 134217728ll) = (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll));
 FBSTRING* vr$1847 = fb_CHR( 1, (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll) );
 fb_StrAssign( (void*)&MEM$1, -1ll, (void*)vr$1847, -1ll, 0 );
 FBSTRING* vr$1854 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1854, -1ll, 0 );
 FBSTRING* vr$1861 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1861, -1ll, 0 );
 FBSTRING* vr$1868 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1868, -1ll, 0 );
 FBSTRING* vr$1873 = fb_CHR( 1, (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1873, -1ll, 0 );
 FBSTRING* vr$1880 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1880, -1ll, 0 );
 FBSTRING* vr$1887 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1887, -1ll, 0 );
 FBSTRING* vr$1894 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1894, -1ll, 0 );
 FBSTRING* vr$1901 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1901, -1ll, 0 );
 FBSTRING* vr$1908 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1908, -1ll, 0 );
 FBSTRING* vr$1915 = fb_CHR( 1, ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) );
 fb_StrConcatAssign( (void*)&MEM$1, -1ll, (void*)vr$1915, -1ll, 0 );
 I$ = (uint64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 label$2171:;
 FBSTRING* vr$1920 = fb_StrMid( (FBSTRING*)&MEM$1, (int64)I$, (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 uint32 vr$1921 = fb_ASC( (FBSTRING*)vr$1920, 1ll );
 *(double*)((uint8*)((uint8*)THIS$1 + ((int64)((uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) + I$) << (3ll & 63ll))) + 134217728ll) = (double)vr$1921;
 I$ = I$ + (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 int64 vr$1938 = fb_StrLen( (void*)&MEM$1, -1ll );
 if( I$ > (uint64)vr$1938 ) goto label$2173;
 goto label$2171;
 label$2173:;
 *(double*)((uint8*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) << (3ll & 63ll))) + 134217728ll) = (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll));
 *(double*)((uint8*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) << (3ll & 63ll))) + 134217728ll) = (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll));
 goto label$2170;
 label$2170:;
 *(double*)((uint8*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) << (3ll & 63ll))) + 134217728ll) = (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll));
 *(double*)((uint8*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) << (3ll & 63ll))) + 134217728ll) = (double)*(uint8*)NIBBLES$;
 *(double*)((uint8*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) << (3ll & 63ll))) + 134217728ll) = (double)*(uint8*)NIBBLES$;
 fb_StrDelete( (FBSTRING*)&MEM$1 );
 label$2097:;
}

void _ZN8MEMORY_TD1Ev( struct $8MEMORY_T* THIS$1 )
{
 label$2174:;
 label$2175:;
 _ZN9RAYTRACERD1Ev( (struct $9RAYTRACER*)((uint8*)THIS$1 + 151082632ll) );
}

double _ZN8MEMORY_T7LENGTH6ER7VECTOR2( struct $8MEMORY_T* THIS$1, struct $7VECTOR2* P$1 )
{
 struct $7VECTOR2 TMP$1733$1;
 struct $7VECTOR2 TMP$1734$1;
 struct $7VECTOR2 TMP$1735$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2176:;
 struct $7VECTOR2* vr$2 = _ZmlR7VECTOR2S0_( &TMP$1733$1, P$1, P$1 );
 struct $7VECTOR2* vr$4 = _ZmlR7VECTOR2S0_( &TMP$1734$1, vr$2, P$1 );
 _ZN7VECTOR2aSERS_( P$1, vr$4 );
 struct $7VECTOR2* vr$6 = _ZmlR7VECTOR2S0_( &TMP$1735$1, P$1, P$1 );
 _ZN7VECTOR2aSERS_( P$1, vr$6 );
 double vr$10 = _Z3POWdd( *(double*)P$1 + *(double*)((uint8*)P$1 + 8ll), 0x1.5555555555555p-3 );
 fb$result$1 = vr$10;
 goto label$2177;
 label$2177:;
 return fb$result$1;
}

double _ZN8MEMORY_T7LENGTH8ER7VECTOR2( struct $8MEMORY_T* THIS$1, struct $7VECTOR2* P$1 )
{
 struct $7VECTOR2 TMP$1736$1;
 struct $7VECTOR2 TMP$1737$1;
 struct $7VECTOR2 TMP$1738$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2178:;
 struct $7VECTOR2* vr$2 = _ZmlR7VECTOR2S0_( &TMP$1736$1, P$1, P$1 );
 _ZN7VECTOR2aSERS_( P$1, vr$2 );
 struct $7VECTOR2* vr$4 = _ZmlR7VECTOR2S0_( &TMP$1737$1, P$1, P$1 );
 _ZN7VECTOR2aSERS_( P$1, vr$4 );
 struct $7VECTOR2* vr$6 = _ZmlR7VECTOR2S0_( &TMP$1738$1, P$1, P$1 );
 _ZN7VECTOR2aSERS_( P$1, vr$6 );
 double vr$10 = _Z3POWdd( *(double*)P$1 + *(double*)((uint8*)P$1 + 8ll), 0x1.p-3 );
 fb$result$1 = vr$10;
 goto label$2179;
 label$2179:;
 return fb$result$1;
}

double _ZN8MEMORY_T7SDPLANEER7VECTOR3( struct $8MEMORY_T* THIS$1, struct $7VECTOR3* P$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2180:;
 fb$result$1 = *(double*)((uint8*)P$1 + 8ll);
 goto label$2181;
 label$2181:;
 return fb$result$1;
}

double _ZN8MEMORY_T8SDSPHEREER7VECTOR3d( struct $8MEMORY_T* THIS$1, struct $7VECTOR3* P$1, double S$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2182:;
 double vr$1 = _Z6LENGTHRK7VECTOR3( (struct $7VECTOR3*)P$1 );
 fb$result$1 = vr$1 - S$1;
 goto label$2183;
 label$2183:;
 return fb$result$1;
}

double _ZN8MEMORY_T5SDBOXER7VECTOR3S1_( struct $8MEMORY_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR3* B$1 )
{
 struct $7VECTOR3 TMP$1739$1;
 struct $7VECTOR3 TMP$1740$1;
 struct $7VECTOR3 TMP$1741$1;
 double TMP$1742$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2184:;
 struct $7VECTOR3 D$1;
 struct $7VECTOR3* vr$2 = _Zv13absRK7VECTOR3( &TMP$1739$1, (struct $7VECTOR3*)P$1 );
 struct $7VECTOR3* vr$4 = _ZmiR7VECTOR3S0_( &TMP$1740$1, vr$2, B$1 );
 _ZN7VECTOR3C1ERS_( &D$1, vr$4 );
 double vr$6 = _Z3MAXdd( *(double*)((uint8*)&D$1 + 8ll), *(double*)((uint8*)&D$1 + 16ll) );
 double vr$7 = _Z3MAXdd( *(double*)&D$1, vr$6 );
 double vr$8 = _Z3MINdd( vr$7, 0x0p+0 );
 TMP$1742$1 = 0x0p+0;
 struct $7VECTOR3* vr$12 = _Z3MAXR7VECTOR3Rd( &TMP$1741$1, &D$1, &TMP$1742$1 );
 double vr$13 = _Z6LENGTHRK7VECTOR3( (struct $7VECTOR3*)vr$12 );
 fb$result$1 = vr$8 + vr$13;
 goto label$2185;
 label$2185:;
 return fb$result$1;
}

double _ZN8MEMORY_T11SDELLIPSOIDER7VECTOR3S1_( struct $8MEMORY_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR3* R$1 )
{
 struct $7VECTOR3 TMP$1743$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2186:;
 struct $7VECTOR3* vr$2 = _ZdvR7VECTOR3S0_( &TMP$1743$1, P$1, R$1 );
 double vr$3 = _Z6LENGTHRK7VECTOR3( (struct $7VECTOR3*)vr$2 );
 double vr$8 = _Z3MINdd( *(double*)R$1, *(double*)((uint8*)R$1 + 8ll) );
 double vr$9 = _Z3MINdd( vr$8, *(double*)((uint8*)R$1 + 16ll) );
 fb$result$1 = (vr$3 + -0x1.p+0) * vr$9;
 goto label$2187;
 label$2187:;
 return fb$result$1;
}

double _ZN8MEMORY_T10UDROUNDBOXER7VECTOR3S1_d( struct $8MEMORY_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR3* B$1, double R$1 )
{
 struct $7VECTOR3 TMP$1744$1;
 struct $7VECTOR3 TMP$1745$1;
 struct $7VECTOR3 TMP$1746$1;
 double TMP$1747$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2188:;
 TMP$1747$1 = 0x0p+0;
 struct $7VECTOR3* vr$3 = _Zv13absRK7VECTOR3( &TMP$1744$1, (struct $7VECTOR3*)P$1 );
 struct $7VECTOR3* vr$5 = _ZmiR7VECTOR3S0_( &TMP$1745$1, vr$3, B$1 );
 struct $7VECTOR3* vr$7 = _Z3MAXR7VECTOR3Rd( &TMP$1746$1, vr$5, &TMP$1747$1 );
 double vr$8 = _Z6LENGTHRK7VECTOR3( (struct $7VECTOR3*)vr$7 );
 fb$result$1 = vr$8 - R$1;
 goto label$2189;
 label$2189:;
 return fb$result$1;
}

double _ZN8MEMORY_T7SDTORUSER7VECTOR3R7VECTOR2( struct $8MEMORY_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR2* T$1 )
{
 struct $7VECTOR2 TMP$1748$1;
 struct $7VECTOR2 TMP$1749$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2190:;
 struct $7VECTOR2* vr$3 = _ZN7VECTOR32XZEv( &TMP$1749$1, P$1 );
 double vr$4 = _Z6LENGTHRK7VECTOR2( (struct $7VECTOR2*)vr$3 );
 _ZN7VECTOR2C1Edd( &TMP$1748$1, vr$4 - *(double*)T$1, *(double*)((uint8*)P$1 + 8ll) );
 double vr$9 = _Z6LENGTHRK7VECTOR2( (struct $7VECTOR2*)&TMP$1748$1 );
 fb$result$1 = vr$9 - *(double*)((uint8*)T$1 + 8ll);
 goto label$2191;
 label$2191:;
 return fb$result$1;
}

double _ZN8MEMORY_T9SDTORUS82ER7VECTOR3R7VECTOR2( struct $8MEMORY_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR2* T$1 )
{
 struct $7VECTOR2 TMP$1751$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2192:;
 struct $7VECTOR2 Q$1;
 struct $7VECTOR2* vr$3 = _ZN7VECTOR32XZEv( &TMP$1751$1, P$1 );
 double vr$4 = _Z6LENGTHRK7VECTOR2( (struct $7VECTOR2*)vr$3 );
 _ZN7VECTOR2C1Edd( &Q$1, vr$4 - *(double*)T$1, *(double*)((uint8*)P$1 + 8ll) );
 double vr$9 = _ZN8MEMORY_T7LENGTH8ER7VECTOR2( THIS$1, &Q$1 );
 fb$result$1 = vr$9 - *(double*)((uint8*)T$1 + 8ll);
 goto label$2193;
 label$2193:;
 return fb$result$1;
}

double _ZN8MEMORY_T9SDTORUS88ER7VECTOR3R7VECTOR2( struct $8MEMORY_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR2* T$1 )
{
 struct $7VECTOR2 TMP$1753$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2194:;
 struct $7VECTOR2 Q$1;
 struct $7VECTOR2* vr$3 = _ZN7VECTOR32XZEv( &TMP$1753$1, P$1 );
 double vr$4 = _ZN8MEMORY_T7LENGTH8ER7VECTOR2( THIS$1, vr$3 );
 _ZN7VECTOR2C1Edd( &Q$1, vr$4 - *(double*)T$1, *(double*)((uint8*)P$1 + 8ll) );
 double vr$9 = _ZN8MEMORY_T7LENGTH8ER7VECTOR2( THIS$1, &Q$1 );
 fb$result$1 = vr$9 - *(double*)((uint8*)T$1 + 8ll);
 goto label$2195;
 label$2195:;
 return fb$result$1;
}

double _ZN8MEMORY_T10SDHEXPRISMER7VECTOR3R7VECTOR2( struct $8MEMORY_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR2* H$1 )
{
 struct $7VECTOR3 TMP$1754$1;
 struct $7VECTOR2 TMP$1755$1;
 struct $7VECTOR2 TMP$1756$1;
 double TMP$1757$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2196:;
 struct $7VECTOR3 Q$1;
 struct $7VECTOR3* vr$2 = _Zv13absRK7VECTOR3( &TMP$1754$1, (struct $7VECTOR3*)P$1 );
 _ZN7VECTOR3C1ERS_( &Q$1, vr$2 );
 double D1$1;
 D1$1 = *(double*)((uint8*)&Q$1 + 16ll) - *(double*)((uint8*)H$1 + 8ll);
 double D2$1;
 double vr$9 = _Z3MAXdd( (*(double*)&Q$1 * 0x1.BB67A0F9096BCp-1) + (*(double*)((uint8*)&Q$1 + 8ll) * 0x1.p-1), *(double*)((uint8*)&Q$1 + 8ll) );
 D2$1 = vr$9 - *(double*)H$1;
 TMP$1757$1 = 0x0p+0;
 _ZN7VECTOR2C1Edd( &TMP$1755$1, D1$1, D2$1 );
 struct $7VECTOR2* vr$16 = _Z3MAXR7VECTOR2Rd( &TMP$1756$1, &TMP$1755$1, &TMP$1757$1 );
 double vr$17 = _Z6LENGTHRK7VECTOR2( (struct $7VECTOR2*)vr$16 );
 double vr$18 = _Z3MAXdd( D1$1, D2$1 );
 double vr$19 = _Z3MINdd( vr$18, 0x0p+0 );
 fb$result$1 = vr$17 + vr$19;
 goto label$2197;
 label$2197:;
 return fb$result$1;
}

double _ZN8MEMORY_T9SDCAPSULEER7VECTOR3S1_S1_d( struct $8MEMORY_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR3* A$1, struct $7VECTOR3* B$1, double R$1 )
{
 struct $7VECTOR3 TMP$1758$1;
 struct $7VECTOR3 TMP$1759$1;
 struct $7VECTOR3 TMP$1760$1;
 struct $7VECTOR3 TMP$1761$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2198:;
 struct $7VECTOR3 PA$1;
 struct $7VECTOR3* vr$2 = _ZmiR7VECTOR3S0_( &TMP$1758$1, P$1, A$1 );
 _ZN7VECTOR3C1ERS_( &PA$1, vr$2 );
 struct $7VECTOR3 BA$1;
 struct $7VECTOR3* vr$5 = _ZmiR7VECTOR3S0_( &TMP$1759$1, B$1, A$1 );
 _ZN7VECTOR3C1ERS_( &BA$1, vr$5 );
 double H$1;
 double vr$9 = _Z3DOTR7VECTOR3S0_( &PA$1, &BA$1 );
 double vr$12 = _Z3DOTR7VECTOR3S0_( &BA$1, &BA$1 );
 double vr$14 = _Z5CLAMPddd( vr$9 / vr$12, 0x0p+0, 0x1.p+0 );
 H$1 = vr$14;
 struct $7VECTOR3* vr$17 = _ZmlR7VECTOR3d( &TMP$1760$1, &BA$1, H$1 );
 struct $7VECTOR3* vr$20 = _ZmiR7VECTOR3S0_( &TMP$1761$1, &PA$1, vr$17 );
 double vr$21 = _Z6LENGTHRK7VECTOR3( (struct $7VECTOR3*)vr$20 );
 fb$result$1 = vr$21 - R$1;
 goto label$2199;
 label$2199:;
 return fb$result$1;
}

double _ZN8MEMORY_T10SDTRIPRISMER7VECTOR3R7VECTOR2( struct $8MEMORY_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR2* H$1 )
{
 struct $7VECTOR3 TMP$1762$1;
 struct $7VECTOR2 TMP$1763$1;
 struct $7VECTOR2 TMP$1764$1;
 double TMP$1765$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2200:;
 struct $7VECTOR3 Q$1;
 struct $7VECTOR3* vr$2 = _Zv13absRK7VECTOR3( &TMP$1762$1, (struct $7VECTOR3*)P$1 );
 _ZN7VECTOR3C1ERS_( &Q$1, vr$2 );
 double D1$1;
 D1$1 = *(double*)((uint8*)&Q$1 + 16ll) - *(double*)((uint8*)H$1 + 8ll);
 double D2$1;
 double vr$12 = _Z3MAXdd( (*(double*)&Q$1 * 0x1.BB67A0F9096BCp-1) + (*(double*)((uint8*)P$1 + 8ll) * 0x1.p-1), -(*(double*)((uint8*)P$1 + 8ll)) );
 D2$1 = vr$12 - (*(double*)H$1 * 0x1.p-1);
 TMP$1765$1 = 0x0p+0;
 _ZN7VECTOR2C1Edd( &TMP$1763$1, D1$1, D2$1 );
 struct $7VECTOR2* vr$20 = _Z3MAXR7VECTOR2Rd( &TMP$1764$1, &TMP$1763$1, &TMP$1765$1 );
 double vr$21 = _Z6LENGTHRK7VECTOR2( (struct $7VECTOR2*)vr$20 );
 double vr$22 = _Z3MAXdd( D1$1, D2$1 );
 double vr$23 = _Z3MINdd( vr$22, 0x0p+0 );
 fb$result$1 = vr$21 + vr$23;
 goto label$2201;
 label$2201:;
 return fb$result$1;
}

double _ZN8MEMORY_T10SDCYLINDERER7VECTOR3R7VECTOR2( struct $8MEMORY_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR2* H$1 )
{
 struct $7VECTOR2 TMP$1766$1;
 struct $7VECTOR2 TMP$1767$1;
 struct $7VECTOR2 TMP$1768$1;
 struct $7VECTOR2 TMP$1769$1;
 struct $7VECTOR2 TMP$1770$1;
 double TMP$1771$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2202:;
 struct $7VECTOR2 D$1;
 struct $7VECTOR2* vr$3 = _ZN7VECTOR32XZEv( &TMP$1767$1, P$1 );
 double vr$4 = _Z6LENGTHRK7VECTOR2( (struct $7VECTOR2*)vr$3 );
 _ZN7VECTOR2C1Edd( &TMP$1766$1, vr$4, *(double*)((uint8*)P$1 + 8ll) );
 struct $7VECTOR2* vr$8 = _Zv13absRK7VECTOR2( &TMP$1768$1, (struct $7VECTOR2*)&TMP$1766$1 );
 struct $7VECTOR2* vr$10 = _ZmiR7VECTOR2S0_( &TMP$1769$1, vr$8, H$1 );
 _ZN7VECTOR2C1ERS_( &D$1, vr$10 );
 double vr$12 = _Z3MAXdd( *(double*)&D$1, *(double*)((uint8*)&D$1 + 8ll) );
 double vr$13 = _Z3MINdd( vr$12, 0x0p+0 );
 TMP$1771$1 = 0x0p+0;
 struct $7VECTOR2* vr$17 = _Z3MAXR7VECTOR2Rd( &TMP$1770$1, &D$1, &TMP$1771$1 );
 double vr$18 = _Z6LENGTHRK7VECTOR2( (struct $7VECTOR2*)vr$17 );
 fb$result$1 = vr$13 + vr$18;
 goto label$2203;
 label$2203:;
 return fb$result$1;
}

double _ZN8MEMORY_T11SDCYLINDER6ER7VECTOR3R7VECTOR2( struct $8MEMORY_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR2* H$1 )
{
 struct $7VECTOR2 TMP$1772$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2204:;
 struct $7VECTOR2* vr$6 = _ZN7VECTOR32XZEv( &TMP$1772$1, P$1 );
 double vr$7 = _ZN8MEMORY_T7LENGTH6ER7VECTOR2( THIS$1, vr$6 );
 double vr$10 = _Z3MAXdd( vr$7 - *(double*)H$1, __builtin_fabs( *(double*)((uint8*)P$1 + 8ll) ) - *(double*)((uint8*)H$1 + 8ll) );
 fb$result$1 = vr$10;
 goto label$2205;
 label$2205:;
 return fb$result$1;
}

double _ZN8MEMORY_T6SDCONEER7VECTOR3S1_( struct $8MEMORY_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR3* C$1 )
{
 struct $7VECTOR2 TMP$1774$1;
 struct $7VECTOR2 TMP$1775$1;
 struct $7VECTOR2 TMP$1776$1;
 struct $7VECTOR2 TMP$1777$1;
 double TMP$1778$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2206:;
 struct $7VECTOR2 Q$1;
 struct $7VECTOR2* vr$3 = _ZN7VECTOR32XZEv( &TMP$1774$1, P$1 );
 double vr$4 = _Z6LENGTHRK7VECTOR2( (struct $7VECTOR2*)vr$3 );
 _ZN7VECTOR2C1Edd( &Q$1, vr$4, *(double*)((uint8*)P$1 + 8ll) );
 double D1$1;
 D1$1 = -(*(double*)((uint8*)&Q$1 + 8ll)) - *(double*)((uint8*)C$1 + 16ll);
 double D2$1;
 struct $7VECTOR2* vr$10 = _ZN7VECTOR32XYEv( &TMP$1775$1, C$1 );
 double vr$12 = _Z3DOTR7VECTOR2S0_( &Q$1, vr$10 );
 double vr$13 = _Z3MAXdd( vr$12, *(double*)((uint8*)&Q$1 + 8ll) );
 D2$1 = vr$13;
 TMP$1778$1 = 0x0p+0;
 _ZN7VECTOR2C1Edd( &TMP$1776$1, D1$1, D2$1 );
 struct $7VECTOR2* vr$18 = _Z3MAXR7VECTOR2Rd( &TMP$1777$1, &TMP$1776$1, &TMP$1778$1 );
 double vr$19 = _Z6LENGTHRK7VECTOR2( (struct $7VECTOR2*)vr$18 );
 double vr$20 = _Z3MAXdd( D1$1, D2$1 );
 double vr$21 = _Z3MINdd( vr$20, 0x0p+0 );
 fb$result$1 = vr$19 + vr$21;
 goto label$2207;
 label$2207:;
 return fb$result$1;
}

double _ZN8MEMORY_T7_SDCONEER7VECTOR3S1_( struct $8MEMORY_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR3* C$1 )
{
 struct $7VECTOR2 TMP$1780$1;
 struct $7VECTOR2 TMP$1782$1;
 struct $7VECTOR2 TMP$1785$1;
 double TMP$1786$1;
 struct $7VECTOR2 TMP$1787$1;
 struct $7VECTOR2 TMP$1788$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2208:;
 struct $7VECTOR2 Q$1;
 struct $7VECTOR2* vr$3 = _ZN7VECTOR32XZEv( &TMP$1780$1, P$1 );
 double vr$4 = _Z6LENGTHRK7VECTOR2( (struct $7VECTOR2*)vr$3 );
 _ZN7VECTOR2C1Edd( &Q$1, vr$4, *(double*)((uint8*)P$1 + 8ll) );
 struct $7VECTOR2 V$1;
 _ZN7VECTOR2C1Edd( &V$1, (*(double*)((uint8*)C$1 + 16ll) * *(double*)((uint8*)C$1 + 8ll)) / *(double*)C$1, -(*(double*)((uint8*)C$1 + 16ll)) );
 struct $7VECTOR2 W$1;
 struct $7VECTOR2* vr$17 = _ZmiR7VECTOR2S0_( &TMP$1782$1, &V$1, &Q$1 );
 _ZN7VECTOR2C1ERS_( &W$1, vr$17 );
 struct $7VECTOR2 VV$1;
 double vr$22 = _Z3DOTR7VECTOR2S0_( &V$1, &V$1 );
 _ZN7VECTOR2C1Edd( &VV$1, vr$22, *(double*)&V$1 * *(double*)&V$1 );
 struct $7VECTOR2 QV$1;
 double vr$27 = _Z3DOTR7VECTOR2S0_( &V$1, &W$1 );
 _ZN7VECTOR2C1Edd( &QV$1, vr$27, *(double*)&V$1 * *(double*)&W$1 );
 struct $7VECTOR2 D$1;
 TMP$1786$1 = 0x0p+0;
 struct $7VECTOR2* vr$34 = _Z3MAXR7VECTOR2Rd( &TMP$1785$1, &QV$1, &TMP$1786$1 );
 struct $7VECTOR2* vr$36 = _ZmlR7VECTOR2S0_( &TMP$1787$1, vr$34, &QV$1 );
 struct $7VECTOR2* vr$38 = _ZdvR7VECTOR2S0_( &TMP$1788$1, vr$36, &VV$1 );
 _ZN7VECTOR2C1ERS_( &D$1, vr$38 );
 double vr$42 = _Z3DOTR7VECTOR2S0_( &W$1, &W$1 );
 double vr$43 = _Z3MAXdd( *(double*)&D$1, *(double*)((uint8*)&D$1 + 8ll) );
 double vr$45 = _Z4SQRTd( vr$42 - vr$43 );
 double vr$49 = _Z3MAXdd( (*(double*)((uint8*)&Q$1 + 8ll) * *(double*)&V$1) - (*(double*)&Q$1 * *(double*)((uint8*)&V$1 + 8ll)), *(double*)((uint8*)&W$1 + 8ll) );
 double vr$50 = _Z4SIGNd( vr$49 );
 fb$result$1 = vr$45 * vr$50;
 goto label$2209;
 label$2209:;
 return fb$result$1;
}

double _ZN8MEMORY_T8SDCONEHQER7VECTOR3S1_( struct $8MEMORY_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR3* C$1 )
{
 struct $7VECTOR2 TMP$1790$1;
 struct $7VECTOR2 TMP$1792$1;
 struct $7VECTOR2 TMP$1795$1;
 struct $7VECTOR2 TMP$1796$1;
 struct $7VECTOR2 TMP$1797$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2210:;
 struct $7VECTOR2 Q$1;
 struct $7VECTOR2* vr$3 = _ZN7VECTOR32XZEv( &TMP$1790$1, P$1 );
 double vr$4 = _Z6LENGTHRK7VECTOR2( (struct $7VECTOR2*)vr$3 );
 _ZN7VECTOR2C1Edd( &Q$1, vr$4, *(double*)((uint8*)P$1 + 8ll) );
 struct $7VECTOR2 V$1;
 _ZN7VECTOR2C1Edd( &V$1, (*(double*)((uint8*)C$1 + 16ll) * *(double*)((uint8*)C$1 + 8ll)) / *(double*)C$1, -(*(double*)((uint8*)C$1 + 16ll)) );
 double VVB$1;
 double vr$16 = _Z3DOTR7VECTOR2S0_( &V$1, &V$1 );
 VVB$1 = vr$16;
 double QVB$1;
 struct $7VECTOR2* vr$20 = _ZmiR7VECTOR2S0_( &TMP$1792$1, &V$1, &Q$1 );
 double vr$22 = _Z3DOTR7VECTOR2S0_( &V$1, vr$20 );
 QVB$1 = vr$22;
 double VVX$1;
 VVX$1 = *(double*)&V$1 * *(double*)&V$1;
 double QVX$1;
 QVX$1 = *(double*)&V$1 * (*(double*)&V$1 - *(double*)&Q$1);
 double HB$1;
 double vr$26 = _Z5CLAMPddd( QVB$1, 0x0p+0, VVB$1 );
 HB$1 = vr$26;
 double HX$1;
 double vr$27 = _Z5CLAMPddd( QVX$1, 0x0p+0, VVX$1 );
 HX$1 = vr$27;
 struct $7VECTOR2 D1$1;
 _ZN7VECTOR2C1Edd( &D1$1, (HB$1 * (HB$1 - (QVB$1 * 0x1.p+1))) / VVB$1, (*(double*)&Q$1 * *(double*)((uint8*)&V$1 + 8ll)) - (*(double*)((uint8*)&Q$1 + 8ll) * *(double*)&V$1) );
 struct $7VECTOR2 D2$1;
 _ZN7VECTOR2C1Edd( &D2$1, (HX$1 * (HX$1 - (QVX$1 * 0x1.p+1))) / VVX$1, *(double*)((uint8*)&Q$1 + 8ll) - *(double*)((uint8*)&V$1 + 8ll) );
 struct $7VECTOR2 D$1;
 struct $7VECTOR2* vr$45 = _Z3MINR7VECTOR2S0_( &TMP$1795$1, &D1$1, &D2$1 );
 _ZN7VECTOR2C1ERS_( &D$1, vr$45 );
 struct $7VECTOR2* vr$50 = _ZmiR7VECTOR2S0_( &TMP$1797$1, &V$1, &Q$1 );
 struct $7VECTOR2* vr$54 = _ZmiR7VECTOR2S0_( &TMP$1796$1, &V$1, &Q$1 );
 double vr$55 = _Z3DOTR7VECTOR2S0_( vr$54, vr$50 );
 double vr$57 = _Z4SQRTd( vr$55 + *(double*)&D$1 );
 double vr$59 = _Z4SIGNd( *(double*)((uint8*)&D$1 + 8ll) );
 fb$result$1 = -vr$57 * vr$59;
 goto label$2211;
 label$2211:;
 return fb$result$1;
}

double _ZN8MEMORY_T13SDCONESECTIONER7VECTOR3ddd( struct $8MEMORY_T* THIS$1, struct $7VECTOR3* P$1, double H$1, double R1$1, double R2$1 )
{
 struct $7VECTOR2 TMP$1798$1;
 struct $7VECTOR2 TMP$1799$1;
 struct $7VECTOR2 TMP$1800$1;
 struct $7VECTOR2 TMP$1801$1;
 double TMP$1802$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2212:;
 double D1$1;
 D1$1 = -(*(double*)((uint8*)P$1 + 8ll)) - H$1;
 double Q$1;
 Q$1 = *(double*)((uint8*)P$1 + 8ll) - H$1;
 double SI$1;
 SI$1 = ((R1$1 - R2$1) * 0x1.p-1) / H$1;
 double D2$1;
 struct $7VECTOR2* vr$10 = _ZN7VECTOR32XZEv( &TMP$1799$1, P$1 );
 struct $7VECTOR2* vr$12 = _ZN7VECTOR32XZEv( &TMP$1798$1, P$1 );
 double vr$13 = _Z3DOTR7VECTOR2S0_( vr$12, vr$10 );
 double vr$18 = _Z4SQRTd( vr$13 * (-(SI$1 * SI$1) + 0x1.p+0) );
 double vr$22 = _Z3MAXdd( (vr$18 + (Q$1 * SI$1)) - R2$1, Q$1 );
 D2$1 = vr$22;
 TMP$1802$1 = 0x0p+0;
 _ZN7VECTOR2C1Edd( &TMP$1800$1, D1$1, D2$1 );
 struct $7VECTOR2* vr$27 = _Z3MAXR7VECTOR2Rd( &TMP$1801$1, &TMP$1800$1, &TMP$1802$1 );
 double vr$28 = _Z6LENGTHRK7VECTOR2( (struct $7VECTOR2*)vr$27 );
 double vr$29 = _Z3MAXdd( D1$1, D2$1 );
 double vr$30 = _Z3MINdd( vr$29, 0x0p+0 );
 fb$result$1 = vr$28 + vr$30;
 goto label$2213;
 label$2213:;
 return fb$result$1;
}

double _ZN8MEMORY_T12SDWOBBLECUBEER7VECTOR3d( struct $8MEMORY_T* THIS$1, struct $7VECTOR3* P$1, double S$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2214:;
 double vr$15 = _Z3MAXdd( (__builtin_fabs( *(double*)P$1 ) - S$1) + (__builtin_sin( (*(double*)((uint8*)P$1 + 8ll) * 0x1.4p+3) ) * 0x1.999999999999Ap-5), __builtin_fabs( *(double*)((uint8*)P$1 + 8ll) ) - S$1 );
 double vr$16 = _Z3MAXdd( vr$15, __builtin_fabs( *(double*)((uint8*)P$1 + 16ll) ) - S$1 );
 fb$result$1 = vr$16;
 goto label$2215;
 label$2215:;
 return fb$result$1;
}

double _ZN8MEMORY_T10UDTRIANGLEER7VECTOR3S1_S1_S1_( struct $8MEMORY_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR3* A$1, struct $7VECTOR3* B$1, struct $7VECTOR3* C$1 )
{
 struct $7VECTOR3 TMP$1803$1;
 struct $7VECTOR3 TMP$1804$1;
 struct $7VECTOR3 TMP$1805$1;
 struct $7VECTOR3 TMP$1806$1;
 struct $7VECTOR3 TMP$1807$1;
 struct $7VECTOR3 TMP$1808$1;
 struct $7VECTOR3 TMP$1809$1;
 struct $7VECTOR3 TMP$1810$1;
 struct $7VECTOR3 TMP$1811$1;
 struct $7VECTOR3 TMP$1812$1;
 struct $7VECTOR3 TMP$1813$1;
 struct $7VECTOR3 TMP$1814$1;
 struct $7VECTOR3 TMP$1815$1;
 struct $7VECTOR3 TMP$1816$1;
 struct $7VECTOR3 TMP$1817$1;
 struct $7VECTOR3 TMP$1818$1;
 struct $7VECTOR3 TMP$1819$1;
 struct $7VECTOR3 TMP$1820$1;
 struct $7VECTOR3 TMP$1821$1;
 struct $7VECTOR3 TMP$1822$1;
 struct $7VECTOR3 TMP$1823$1;
 struct $7VECTOR3 TMP$1824$1;
 double TMP$1825$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2216:;
 struct $7VECTOR3 BA$1;
 struct $7VECTOR3* vr$2 = _ZmiR7VECTOR3S0_( &TMP$1803$1, B$1, A$1 );
 _ZN7VECTOR3C1ERS_( &BA$1, vr$2 );
 struct $7VECTOR3 CB$1;
 struct $7VECTOR3* vr$5 = _ZmiR7VECTOR3S0_( &TMP$1804$1, C$1, B$1 );
 _ZN7VECTOR3C1ERS_( &CB$1, vr$5 );
 struct $7VECTOR3 AC$1;
 struct $7VECTOR3* vr$8 = _ZmiR7VECTOR3S0_( &TMP$1805$1, A$1, C$1 );
 _ZN7VECTOR3C1ERS_( &AC$1, vr$8 );
 struct $7VECTOR3 PA$1;
 struct $7VECTOR3* vr$11 = _ZmiR7VECTOR3S0_( &TMP$1806$1, P$1, A$1 );
 _ZN7VECTOR3C1ERS_( &PA$1, vr$11 );
 struct $7VECTOR3 PB$1;
 struct $7VECTOR3* vr$14 = _ZmiR7VECTOR3S0_( &TMP$1807$1, P$1, B$1 );
 _ZN7VECTOR3C1ERS_( &PB$1, vr$14 );
 struct $7VECTOR3 PC$1;
 struct $7VECTOR3* vr$17 = _ZmiR7VECTOR3S0_( &TMP$1808$1, P$1, C$1 );
 _ZN7VECTOR3C1ERS_( &PC$1, vr$17 );
 struct $7VECTOR3 NOR$1;
 struct $7VECTOR3* vr$22 = CROSS( &TMP$1809$1, &BA$1, &AC$1 );
 _ZN7VECTOR3C1ERS_( &NOR$1, vr$22 );
 struct $7VECTOR3* vr$28 = CROSS( &TMP$1810$1, &BA$1, &NOR$1 );
 double vr$29 = _Z3DOTR7VECTOR3S0_( vr$28, &PA$1 );
 double vr$30 = _Z4SIGNd( vr$29 );
 struct $7VECTOR3* vr$35 = CROSS( &TMP$1811$1, &CB$1, &NOR$1 );
 double vr$36 = _Z3DOTR7VECTOR3S0_( vr$35, &PB$1 );
 double vr$37 = _Z4SIGNd( vr$36 );
 struct $7VECTOR3* vr$43 = CROSS( &TMP$1812$1, &AC$1, &NOR$1 );
 double vr$44 = _Z3DOTR7VECTOR3S0_( vr$43, &PC$1 );
 double vr$45 = _Z4SIGNd( vr$44 );
 if( ((vr$30 + vr$37) + vr$45) >= 0x1.p+1 ) goto label$2218;
 double vr$50 = _Z3DOTR7VECTOR3S0_( &AC$1, &PC$1 );
 double vr$53 = _Z3DOTR7VECTOR3S0_( &AC$1, &AC$1 );
 double vr$55 = _Z5CLAMPddd( vr$50 / vr$53, 0x0p+0, 0x1.p+0 );
 struct $7VECTOR3* vr$58 = _ZmlR7VECTOR3d( &TMP$1823$1, &AC$1, vr$55 );
 struct $7VECTOR3* vr$60 = _ZmiR7VECTOR3S0_( &TMP$1824$1, vr$58, &PC$1 );
 double vr$64 = _Z3DOTR7VECTOR3S0_( &AC$1, &PC$1 );
 double vr$67 = _Z3DOTR7VECTOR3S0_( &AC$1, &AC$1 );
 double vr$69 = _Z5CLAMPddd( vr$64 / vr$67, 0x0p+0, 0x1.p+0 );
 struct $7VECTOR3* vr$72 = _ZmlR7VECTOR3d( &TMP$1821$1, &AC$1, vr$69 );
 struct $7VECTOR3* vr$74 = _ZmiR7VECTOR3S0_( &TMP$1822$1, vr$72, &PC$1 );
 double vr$75 = _Z3DOTR7VECTOR3S0_( vr$74, vr$60 );
 double vr$79 = _Z3DOTR7VECTOR3S0_( &CB$1, &PB$1 );
 double vr$82 = _Z3DOTR7VECTOR3S0_( &CB$1, &CB$1 );
 double vr$84 = _Z5CLAMPddd( vr$79 / vr$82, 0x0p+0, 0x1.p+0 );
 struct $7VECTOR3* vr$87 = _ZmlR7VECTOR3d( &TMP$1819$1, &CB$1, vr$84 );
 struct $7VECTOR3* vr$89 = _ZmiR7VECTOR3S0_( &TMP$1820$1, vr$87, &PB$1 );
 double vr$93 = _Z3DOTR7VECTOR3S0_( &CB$1, &PB$1 );
 double vr$96 = _Z3DOTR7VECTOR3S0_( &CB$1, &CB$1 );
 double vr$98 = _Z5CLAMPddd( vr$93 / vr$96, 0x0p+0, 0x1.p+0 );
 struct $7VECTOR3* vr$101 = _ZmlR7VECTOR3d( &TMP$1817$1, &CB$1, vr$98 );
 struct $7VECTOR3* vr$103 = _ZmiR7VECTOR3S0_( &TMP$1818$1, vr$101, &PB$1 );
 double vr$104 = _Z3DOTR7VECTOR3S0_( vr$103, vr$89 );
 double vr$108 = _Z3DOTR7VECTOR3S0_( &BA$1, &PA$1 );
 double vr$111 = _Z3DOTR7VECTOR3S0_( &BA$1, &BA$1 );
 double vr$113 = _Z5CLAMPddd( vr$108 / vr$111, 0x0p+0, 0x1.p+0 );
 struct $7VECTOR3* vr$116 = _ZmlR7VECTOR3d( &TMP$1815$1, &BA$1, vr$113 );
 struct $7VECTOR3* vr$118 = _ZmiR7VECTOR3S0_( &TMP$1816$1, vr$116, &PA$1 );
 double vr$122 = _Z3DOTR7VECTOR3S0_( &BA$1, &PA$1 );
 double vr$125 = _Z3DOTR7VECTOR3S0_( &BA$1, &BA$1 );
 double vr$127 = _Z5CLAMPddd( vr$122 / vr$125, 0x0p+0, 0x1.p+0 );
 struct $7VECTOR3* vr$130 = _ZmlR7VECTOR3d( &TMP$1813$1, &BA$1, vr$127 );
 struct $7VECTOR3* vr$132 = _ZmiR7VECTOR3S0_( &TMP$1814$1, vr$130, &PA$1 );
 double vr$133 = _Z3DOTR7VECTOR3S0_( vr$132, vr$118 );
 double vr$134 = _Z3MINdd( vr$133, vr$104 );
 double vr$135 = _Z3MINdd( vr$134, vr$75 );
 TMP$1825$1 = vr$135;
 goto label$2219;
 label$2218:;
 double vr$138 = _Z3DOTR7VECTOR3S0_( &NOR$1, &PA$1 );
 double vr$141 = _Z3DOTR7VECTOR3S0_( &NOR$1, &PA$1 );
 double vr$145 = _Z3DOTR7VECTOR3S0_( &NOR$1, &NOR$1 );
 TMP$1825$1 = (vr$138 * vr$141) / vr$145;
 label$2219:;
 double vr$147 = _Z4SQRTd( TMP$1825$1 );
 fb$result$1 = vr$147;
 goto label$2217;
 label$2217:;
 return fb$result$1;
}

double UDQUAD( struct $7VECTOR3* P$1, struct $7VECTOR3* A$1, struct $7VECTOR3* B$1, struct $7VECTOR3* C$1, struct $7VECTOR3* D$1 )
{
 struct $7VECTOR3 TMP$1826$1;
 struct $7VECTOR3 TMP$1827$1;
 struct $7VECTOR3 TMP$1828$1;
 struct $7VECTOR3 TMP$1829$1;
 struct $7VECTOR3 TMP$1830$1;
 struct $7VECTOR3 TMP$1831$1;
 struct $7VECTOR3 TMP$1832$1;
 struct $7VECTOR3 TMP$1833$1;
 struct $7VECTOR3 TMP$1834$1;
 struct $7VECTOR3 TMP$1835$1;
 struct $7VECTOR3 TMP$1836$1;
 struct $7VECTOR3 TMP$1837$1;
 struct $7VECTOR3 TMP$1838$1;
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2220:;
 struct $7VECTOR3 BA$1;
 struct $7VECTOR3* vr$2 = _ZmiR7VECTOR3S0_( &TMP$1826$1, B$1, A$1 );
 _ZN7VECTOR3C1ERS_( &BA$1, vr$2 );
 struct $7VECTOR3 PA$1;
 struct $7VECTOR3* vr$5 = _ZmiR7VECTOR3S0_( &TMP$1827$1, P$1, A$1 );
 _ZN7VECTOR3C1ERS_( &PA$1, vr$5 );
 struct $7VECTOR3 CB$1;
 struct $7VECTOR3* vr$8 = _ZmiR7VECTOR3S0_( &TMP$1828$1, C$1, B$1 );
 _ZN7VECTOR3C1ERS_( &CB$1, vr$8 );
 struct $7VECTOR3 PB$1;
 struct $7VECTOR3* vr$11 = _ZmiR7VECTOR3S0_( &TMP$1829$1, P$1, B$1 );
 _ZN7VECTOR3C1ERS_( &PB$1, vr$11 );
 struct $7VECTOR3 DC$1;
 struct $7VECTOR3* vr$14 = _ZmiR7VECTOR3S0_( &TMP$1830$1, D$1, C$1 );
 _ZN7VECTOR3C1ERS_( &DC$1, vr$14 );
 struct $7VECTOR3 PC$1;
 struct $7VECTOR3* vr$17 = _ZmiR7VECTOR3S0_( &TMP$1831$1, P$1, C$1 );
 _ZN7VECTOR3C1ERS_( &PC$1, vr$17 );
 struct $7VECTOR3 AD$1;
 struct $7VECTOR3* vr$20 = _ZmiR7VECTOR3S0_( &TMP$1832$1, A$1, D$1 );
 _ZN7VECTOR3C1ERS_( &AD$1, vr$20 );
 struct $7VECTOR3 PD$1;
 struct $7VECTOR3* vr$23 = _ZmiR7VECTOR3S0_( &TMP$1833$1, P$1, D$1 );
 _ZN7VECTOR3C1ERS_( &PD$1, vr$23 );
 struct $7VECTOR3 NOR$1;
 struct $7VECTOR3* vr$28 = CROSS( &TMP$1834$1, &BA$1, &AD$1 );
 _ZN7VECTOR3C1ERS_( &NOR$1, vr$28 );
 double S$1;
 struct $7VECTOR3* vr$34 = CROSS( &TMP$1835$1, &BA$1, &NOR$1 );
 double vr$35 = _Z3DOTR7VECTOR3S0_( vr$34, &PA$1 );
 double vr$36 = _Z4SIGNd( vr$35 );
 struct $7VECTOR3* vr$41 = CROSS( &TMP$1836$1, &CB$1, &NOR$1 );
 double vr$42 = _Z3DOTR7VECTOR3S0_( vr$41, &PB$1 );
 double vr$43 = _Z4SIGNd( vr$42 );
 struct $7VECTOR3* vr$49 = CROSS( &TMP$1837$1, &DC$1, &NOR$1 );
 double vr$50 = _Z3DOTR7VECTOR3S0_( vr$49, &PC$1 );
 double vr$51 = _Z4SIGNd( vr$50 );
 struct $7VECTOR3* vr$57 = CROSS( &TMP$1838$1, &AD$1, &NOR$1 );
 double vr$58 = _Z3DOTR7VECTOR3S0_( vr$57, &PD$1 );
 double vr$59 = _Z4SIGNd( vr$58 );
 S$1 = ((vr$36 + vr$43) + vr$51) + vr$59;
 if( S$1 >= 0x1.8p+1 ) goto label$2223;
 {
  struct $7VECTOR3 TMP$1839$2;
  struct $7VECTOR3 TMP$1840$2;
  struct $7VECTOR3 TMP$1841$2;
  struct $7VECTOR3 TMP$1842$2;
  struct $7VECTOR3 TMP$1843$2;
  struct $7VECTOR3 TMP$1844$2;
  struct $7VECTOR3 TMP$1845$2;
  struct $7VECTOR3 TMP$1846$2;
  struct $7VECTOR3 TMP$1847$2;
  struct $7VECTOR3 TMP$1848$2;
  struct $7VECTOR3 TMP$1849$2;
  struct $7VECTOR3 TMP$1850$2;
  struct $7VECTOR3 TMP$1851$2;
  struct $7VECTOR3 TMP$1852$2;
  struct $7VECTOR3 TMP$1853$2;
  struct $7VECTOR3 TMP$1854$2;
  double vr$64 = _Z3DOTR7VECTOR3S0_( &AD$1, &PD$1 );
  double vr$67 = _Z3DOTR7VECTOR3S0_( &AD$1, &AD$1 );
  double vr$69 = _Z5CLAMPddd( vr$64 / vr$67, 0x0p+0, 0x1.p+0 );
  struct $7VECTOR3* vr$72 = _ZmlR7VECTOR3d( &TMP$1853$2, &AD$1, vr$69 );
  struct $7VECTOR3* vr$74 = _ZmiR7VECTOR3S0_( &TMP$1854$2, vr$72, &PD$1 );
  double vr$78 = _Z3DOTR7VECTOR3S0_( &AD$1, &PD$1 );
  double vr$81 = _Z3DOTR7VECTOR3S0_( &AD$1, &AD$1 );
  double vr$83 = _Z5CLAMPddd( vr$78 / vr$81, 0x0p+0, 0x1.p+0 );
  struct $7VECTOR3* vr$86 = _ZmlR7VECTOR3d( &TMP$1851$2, &AD$1, vr$83 );
  struct $7VECTOR3* vr$88 = _ZmiR7VECTOR3S0_( &TMP$1852$2, vr$86, &PD$1 );
  double vr$89 = _Z3DOTR7VECTOR3S0_( vr$88, vr$74 );
  double vr$93 = _Z3DOTR7VECTOR3S0_( &DC$1, &PC$1 );
  double vr$96 = _Z3DOTR7VECTOR3S0_( &DC$1, &DC$1 );
  double vr$98 = _Z5CLAMPddd( vr$93 / vr$96, 0x0p+0, 0x1.p+0 );
  struct $7VECTOR3* vr$101 = _ZmlR7VECTOR3d( &TMP$1849$2, &DC$1, vr$98 );
  struct $7VECTOR3* vr$103 = _ZmiR7VECTOR3S0_( &TMP$1850$2, vr$101, &PC$1 );
  double vr$107 = _Z3DOTR7VECTOR3S0_( &DC$1, &PC$1 );
  double vr$110 = _Z3DOTR7VECTOR3S0_( &DC$1, &DC$1 );
  double vr$112 = _Z5CLAMPddd( vr$107 / vr$110, 0x0p+0, 0x1.p+0 );
  struct $7VECTOR3* vr$115 = _ZmlR7VECTOR3d( &TMP$1847$2, &DC$1, vr$112 );
  struct $7VECTOR3* vr$117 = _ZmiR7VECTOR3S0_( &TMP$1848$2, vr$115, &PC$1 );
  double vr$118 = _Z3DOTR7VECTOR3S0_( vr$117, vr$103 );
  double vr$122 = _Z3DOTR7VECTOR3S0_( &CB$1, &PB$1 );
  double vr$125 = _Z3DOTR7VECTOR3S0_( &CB$1, &CB$1 );
  double vr$127 = _Z5CLAMPddd( vr$122 / vr$125, 0x0p+0, 0x1.p+0 );
  struct $7VECTOR3* vr$130 = _ZmlR7VECTOR3d( &TMP$1845$2, &CB$1, vr$127 );
  struct $7VECTOR3* vr$132 = _ZmiR7VECTOR3S0_( &TMP$1846$2, vr$130, &PB$1 );
  double vr$136 = _Z3DOTR7VECTOR3S0_( &CB$1, &PB$1 );
  double vr$139 = _Z3DOTR7VECTOR3S0_( &CB$1, &CB$1 );
  double vr$141 = _Z5CLAMPddd( vr$136 / vr$139, 0x0p+0, 0x1.p+0 );
  struct $7VECTOR3* vr$144 = _ZmlR7VECTOR3d( &TMP$1843$2, &CB$1, vr$141 );
  struct $7VECTOR3* vr$146 = _ZmiR7VECTOR3S0_( &TMP$1844$2, vr$144, &PB$1 );
  double vr$147 = _Z3DOTR7VECTOR3S0_( vr$146, vr$132 );
  double vr$151 = _Z3DOTR7VECTOR3S0_( &BA$1, &PA$1 );
  double vr$154 = _Z3DOTR7VECTOR3S0_( &BA$1, &BA$1 );
  double vr$156 = _Z5CLAMPddd( vr$151 / vr$154, 0x0p+0, 0x1.p+0 );
  struct $7VECTOR3* vr$159 = _ZmlR7VECTOR3d( &TMP$1841$2, &BA$1, vr$156 );
  struct $7VECTOR3* vr$161 = _ZmiR7VECTOR3S0_( &TMP$1842$2, vr$159, &PA$1 );
  double vr$165 = _Z3DOTR7VECTOR3S0_( &BA$1, &PA$1 );
  double vr$168 = _Z3DOTR7VECTOR3S0_( &BA$1, &BA$1 );
  double vr$170 = _Z5CLAMPddd( vr$165 / vr$168, 0x0p+0, 0x1.p+0 );
  struct $7VECTOR3* vr$173 = _ZmlR7VECTOR3d( &TMP$1839$2, &BA$1, vr$170 );
  struct $7VECTOR3* vr$175 = _ZmiR7VECTOR3S0_( &TMP$1840$2, vr$173, &PA$1 );
  double vr$176 = _Z3DOTR7VECTOR3S0_( vr$175, vr$161 );
  double vr$177 = _Z3MINdd( vr$176, vr$147 );
  double vr$178 = _Z3MINdd( vr$177, vr$118 );
  double vr$179 = _Z3MINdd( vr$178, vr$89 );
  double vr$180 = _Z4SQRTd( vr$179 );
  fb$result$1 = vr$180;
  goto label$2221;
  label$2223:;
 }
 double vr$183 = _Z3DOTR7VECTOR3S0_( &NOR$1, &PA$1 );
 double vr$186 = _Z3DOTR7VECTOR3S0_( &NOR$1, &PA$1 );
 double vr$190 = _Z3DOTR7VECTOR3S0_( &NOR$1, &NOR$1 );
 double vr$192 = _Z4SQRTd( (vr$183 * vr$186) / vr$190 );
 fb$result$1 = vr$192;
 goto label$2221;
 label$2221:;
 return fb$result$1;
}

double _ZN8MEMORY_T3OPSEdd( struct $8MEMORY_T* THIS$1, double D1$1, double D2$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2224:;
 double vr$2 = _Z3MAXdd( -D2$1, D1$1 );
 fb$result$1 = vr$2;
 goto label$2225;
 label$2225:;
 return fb$result$1;
}

struct $7VECTOR2* _ZN8MEMORY_T3OPUER7VECTOR2S1_( struct $7VECTOR2* tmp$1855$1, struct $8MEMORY_T* THIS$1, struct $7VECTOR2* D1$1, struct $7VECTOR2* D2$1 )
{
 struct $7VECTOR2 TMP$1856$1;
 label$2226:;
 if( *(double*)D1$1 >= *(double*)D2$1 ) goto label$2228;
 _ZN7VECTOR2C1ERS_( &TMP$1856$1, D1$1 );
 goto label$2229;
 label$2228:;
 _ZN7VECTOR2C1ERS_( &TMP$1856$1, D2$1 );
 label$2229:;
 _ZN7VECTOR2C1ERS_( tmp$1855$1, &TMP$1856$1 );
 goto label$2227;
 label$2227:;
 return tmp$1855$1;
}

double _ZN8MEMORY_T3OPIEdd( struct $8MEMORY_T* THIS$1, double D1$1, double D2$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2230:;
 double vr$1 = _Z3MAXdd( D1$1, D2$1 );
 fb$result$1 = vr$1;
 goto label$2231;
 label$2231:;
 return fb$result$1;
}

struct $7VECTOR3* _ZN8MEMORY_T5OPREPER7VECTOR3S1_( struct $7VECTOR3* tmp$1857$1, struct $8MEMORY_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR3* C$1 )
{
 struct $7VECTOR3 TMP$1858$1;
 struct $7VECTOR3 TMP$1859$1;
 struct $7VECTOR3 TMP$1860$1;
 label$2232:;
 struct $7VECTOR3* vr$1 = _ZmlR7VECTOR3d( &TMP$1859$1, C$1, 0x1.p-1 );
 struct $7VECTOR3* vr$3 = _Z6MODULOR7VECTOR3S0_( &TMP$1858$1, P$1, C$1 );
 struct $7VECTOR3* vr$5 = _ZmiR7VECTOR3S0_( &TMP$1860$1, vr$3, vr$1 );
 _ZN7VECTOR3C1ERS_( tmp$1857$1, vr$5 );
 goto label$2233;
 label$2233:;
 return tmp$1857$1;
}

double _ZN8MEMORY_T7EXPSMINEddd( struct $8MEMORY_T* THIS$1, double A$1, double B$1, double K$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2234:;
 double RES$1;
 double vr$3 = _Z3EXPd( -K$1 * A$1 );
 double vr$6 = _Z3EXPd( -K$1 * B$1 );
 RES$1 = vr$3 + vr$6;
 double vr$8 = _Z3LOGd( RES$1 );
 fb$result$1 = -vr$8 / K$1;
 goto label$2235;
 label$2235:;
 return fb$result$1;
}

double _ZN8MEMORY_T8POLYSMINEddd( struct $8MEMORY_T* THIS$1, double A$1, double B$1, double K$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2236:;
 double H$1;
 double vr$5 = _Z5CLAMPddd( (((B$1 - A$1) * 0x1.p-1) / K$1) + 0x1.p-1, 0x0p+0, 0x1.p+0 );
 H$1 = vr$5;
 double vr$6 = _Z3MIXddd( B$1, A$1, H$1 );
 fb$result$1 = vr$6 - ((K$1 * H$1) * (0x1.p+0 - H$1));
 goto label$2237;
 label$2237:;
 return fb$result$1;
}

double _ZN8MEMORY_T7POWSMINEddd( struct $8MEMORY_T* THIS$1, double A$1, double B$1, double K$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2238:;
 double vr$1 = _Z3POWdd( A$1, K$1 );
 A$1 = vr$1;
 double vr$2 = _Z3POWdd( B$1, K$1 );
 B$1 = vr$2;
 double vr$7 = _Z3POWdd( (A$1 * B$1) / (A$1 + B$1), 0x1.p+0 / K$1 );
 fb$result$1 = vr$7;
 goto label$2239;
 label$2239:;
 return fb$result$1;
}

struct $7VECTOR3* _ZN8MEMORY_T7OPTWISTER7VECTOR3( struct $7VECTOR3* tmp$1861$1, struct $8MEMORY_T* THIS$1, struct $7VECTOR3* P$1 )
{
 struct $7VECTOR2 TMP$1864$1;
 struct $7VECTOR2 TMP$1865$1;
 label$2240:;
 double C$1;
 C$1 = __builtin_cos( ((*(double*)((uint8*)P$1 + 8ll) * 0x1.4p+3) + 0x1.4p+3) );
 double S$1;
 S$1 = __builtin_sin( ((*(double*)((uint8*)P$1 + 8ll) * 0x1.4p+3) + 0x1.4p+3) );
 struct $4MAT2 M$1;
 _ZN4MAT2C1Edddd( &M$1, C$1, -S$1, S$1, C$1 );
 struct $7VECTOR2* vr$12 = _ZN7VECTOR32XZEv( &TMP$1864$1, P$1 );
 struct $7VECTOR2* vr$15 = _ZmlR4MAT2R7VECTOR2( &TMP$1865$1, &M$1, vr$12 );
 _ZN7VECTOR3C1ER7VECTOR2d( tmp$1861$1, vr$15, *(double*)((uint8*)P$1 + 8ll) );
 goto label$2241;
 label$2241:;
 return tmp$1861$1;
}

struct $7VECTOR2* _ZN8MEMORY_T3MAPER7VECTOR3( struct $7VECTOR2* tmp$1866$1, struct $8MEMORY_T* THIS$1, struct $7VECTOR3* P$1 )
{
 struct $7VECTOR2 TMP$1867$1;
 struct $7VECTOR2 TMP$1868$1;
 struct $7VECTOR2 TMP$1869$1;
 struct $7VECTOR3 TMP$1870$1;
 struct $7VECTOR3 TMP$1871$1;
 struct $7VECTOR2 TMP$1872$1;
 struct $7VECTOR2 TMP$1873$1;
 struct $7VECTOR3 TMP$1874$1;
 struct $7VECTOR3 TMP$1875$1;
 struct $7VECTOR3 TMP$1876$1;
 struct $7VECTOR2 TMP$1877$1;
 struct $7VECTOR2 TMP$1878$1;
 struct $7VECTOR3 TMP$1879$1;
 struct $7VECTOR3 TMP$1880$1;
 struct $7VECTOR3 TMP$1881$1;
 struct $7VECTOR2 TMP$1882$1;
 struct $7VECTOR2 TMP$1883$1;
 struct $7VECTOR3 TMP$1884$1;
 struct $7VECTOR3 TMP$1885$1;
 struct $7VECTOR2 TMP$1886$1;
 struct $7VECTOR2 TMP$1887$1;
 struct $7VECTOR2 TMP$1888$1;
 struct $7VECTOR3 TMP$1889$1;
 struct $7VECTOR3 TMP$1890$1;
 struct $7VECTOR2 TMP$1891$1;
 struct $7VECTOR2 TMP$1892$1;
 struct $7VECTOR3 TMP$1893$1;
 struct $7VECTOR3 TMP$1894$1;
 struct $7VECTOR2 TMP$1895$1;
 struct $7VECTOR2 TMP$1896$1;
 struct $7VECTOR2 TMP$1897$1;
 struct $7VECTOR3 TMP$1898$1;
 struct $7VECTOR3 TMP$1899$1;
 struct $7VECTOR2 TMP$1900$1;
 struct $7VECTOR2 TMP$1901$1;
 struct $7VECTOR2 TMP$1902$1;
 struct $7VECTOR3 TMP$1903$1;
 struct $7VECTOR3 TMP$1904$1;
 struct $7VECTOR3 TMP$1905$1;
 struct $7VECTOR2 TMP$1906$1;
 struct $7VECTOR2 TMP$1907$1;
 struct $7VECTOR3 TMP$1908$1;
 struct $7VECTOR3 TMP$1909$1;
 struct $7VECTOR2 TMP$1910$1;
 struct $7VECTOR2 TMP$1911$1;
 struct $7VECTOR2 TMP$1912$1;
 struct $7VECTOR3 TMP$1913$1;
 struct $7VECTOR3 TMP$1914$1;
 struct $7VECTOR2 TMP$1915$1;
 struct $7VECTOR2 TMP$1916$1;
 struct $7VECTOR2 TMP$1917$1;
 struct $7VECTOR3 TMP$1918$1;
 struct $7VECTOR3 TMP$1919$1;
 struct $7VECTOR2 TMP$1920$1;
 struct $7VECTOR2 TMP$1921$1;
 struct $7VECTOR2 TMP$1922$1;
 struct $7VECTOR3 TMP$1923$1;
 struct $7VECTOR3 TMP$1924$1;
 struct $7VECTOR2 TMP$1925$1;
 struct $7VECTOR2 TMP$1926$1;
 struct $7VECTOR2 TMP$1927$1;
 struct $7VECTOR3 TMP$1928$1;
 struct $7VECTOR3 TMP$1929$1;
 struct $7VECTOR3 TMP$1930$1;
 struct $7VECTOR3 TMP$1931$1;
 struct $7VECTOR3 TMP$1932$1;
 struct $7VECTOR2 TMP$1933$1;
 struct $7VECTOR2 TMP$1934$1;
 struct $7VECTOR3 TMP$1935$1;
 struct $7VECTOR3 TMP$1936$1;
 struct $7VECTOR2 TMP$1937$1;
 struct $7VECTOR3 TMP$1938$1;
 struct $7VECTOR3 TMP$1939$1;
 struct $7VECTOR3 TMP$1940$1;
 struct $7VECTOR3 TMP$1941$1;
 struct $7VECTOR3 TMP$1942$1;
 struct $7VECTOR2 TMP$1943$1;
 struct $7VECTOR2 TMP$1944$1;
 struct $7VECTOR2 TMP$1945$1;
 struct $7VECTOR3 TMP$1946$1;
 struct $7VECTOR3 TMP$1947$1;
 struct $7VECTOR2 TMP$1948$1;
 struct $7VECTOR2 TMP$1949$1;
 struct $7VECTOR3 TMP$1950$1;
 struct $7VECTOR3 TMP$1951$1;
 struct $7VECTOR3 TMP$1952$1;
 struct $7VECTOR2 TMP$1953$1;
 struct $7VECTOR2 TMP$1954$1;
 struct $7VECTOR2 TMP$1955$1;
 struct $7VECTOR3 TMP$1956$1;
 struct $7VECTOR3 TMP$1957$1;
 struct $7VECTOR2 TMP$1958$1;
 struct $7VECTOR2 TMP$1959$1;
 struct $7VECTOR3 TMP$1960$1;
 struct $7VECTOR3 TMP$1961$1;
 struct $7VECTOR3 TMP$1962$1;
 label$2242:;
 double vr$0 = _ZN8MEMORY_T7SDPLANEER7VECTOR3( THIS$1, P$1 );
 _ZN7VECTOR2C1Edd( &TMP$1867$1, vr$0, 0x1.p+0 );
 _ZN7VECTOR2aSERS_( (struct $7VECTOR2*)((uint8*)THIS$1 + 151083000ll), &TMP$1867$1 );
 _ZN7VECTOR3C1Eddd( &TMP$1870$1, 0x0p+0, 0x1.p-2, 0x0p+0 );
 struct $7VECTOR3* vr$8 = _ZmiR7VECTOR3S0_( &TMP$1871$1, P$1, &TMP$1870$1 );
 double vr$9 = _ZN8MEMORY_T8SDSPHEREER7VECTOR3d( THIS$1, vr$8, 0x1.p-2 );
 _ZN7VECTOR2C1Edd( &TMP$1869$1, vr$9, 0x1.7733333333333p+5 );
 struct $7VECTOR2* vr$15 = _ZN8MEMORY_T3OPUER7VECTOR2S1_( &TMP$1868$1, THIS$1, (struct $7VECTOR2*)((uint8*)THIS$1 + 151083000ll), &TMP$1869$1 );
 _ZN7VECTOR2aSERS_( (struct $7VECTOR2*)((uint8*)THIS$1 + 151083000ll), vr$15 );
 _ZN7VECTOR3C1Ed( &TMP$1876$1, 0x1.p-2 );
 _ZN7VECTOR3C1Eddd( &TMP$1874$1, 0x1.p+0, 0x1.p-2, 0x0p+0 );
 struct $7VECTOR3* vr$23 = _ZmiR7VECTOR3S0_( &TMP$1875$1, P$1, &TMP$1874$1 );
 double vr$24 = _ZN8MEMORY_T5SDBOXER7VECTOR3S1_( THIS$1, vr$23, &TMP$1876$1 );
 _ZN7VECTOR2C1Edd( &TMP$1873$1, vr$24, 0x1.8p+1 );
 struct $7VECTOR2* vr$30 = _ZN8MEMORY_T3OPUER7VECTOR2S1_( &TMP$1872$1, THIS$1, (struct $7VECTOR2*)((uint8*)THIS$1 + 151083000ll), &TMP$1873$1 );
 _ZN7VECTOR2aSERS_( (struct $7VECTOR2*)((uint8*)THIS$1 + 151083000ll), vr$30 );
 _ZN7VECTOR3C1Ed( &TMP$1881$1, 0x1.3333333333333p-3 );
 _ZN7VECTOR3C1Eddd( &TMP$1879$1, 0x1.p+0, 0x1.p-2, 0x1.p+0 );
 struct $7VECTOR3* vr$38 = _ZmiR7VECTOR3S0_( &TMP$1880$1, P$1, &TMP$1879$1 );
 double vr$39 = _ZN8MEMORY_T10UDROUNDBOXER7VECTOR3S1_d( THIS$1, vr$38, &TMP$1881$1, 0x1.999999999999Ap-4 );
 _ZN7VECTOR2C1Edd( &TMP$1878$1, vr$39, 0x1.48p+5 );
 struct $7VECTOR2* vr$45 = _ZN8MEMORY_T3OPUER7VECTOR2S1_( &TMP$1877$1, THIS$1, (struct $7VECTOR2*)((uint8*)THIS$1 + 151083000ll), &TMP$1878$1 );
 _ZN7VECTOR2aSERS_( (struct $7VECTOR2*)((uint8*)THIS$1 + 151083000ll), vr$45 );
 _ZN7VECTOR2C1Edd( &TMP$1886$1, 0x1.999999999999Ap-3, 0x1.999999999999Ap-5 );
 _ZN7VECTOR3C1Eddd( &TMP$1884$1, 0x0p+0, 0x1.p-2, 0x1.p+0 );
 struct $7VECTOR3* vr$53 = _ZmiR7VECTOR3S0_( &TMP$1885$1, P$1, &TMP$1884$1 );
 double vr$54 = _ZN8MEMORY_T7SDTORUSER7VECTOR3R7VECTOR2( THIS$1, vr$53, &TMP$1886$1 );
 _ZN7VECTOR2C1Edd( &TMP$1883$1, vr$54, 0x1.9p+4 );
 struct $7VECTOR2* vr$60 = _ZN8MEMORY_T3OPUER7VECTOR2S1_( &TMP$1882$1, THIS$1, (struct $7VECTOR2*)((uint8*)THIS$1 + 151083000ll), &TMP$1883$1 );
 _ZN7VECTOR2aSERS_( (struct $7VECTOR2*)((uint8*)THIS$1 + 151083000ll), vr$60 );
 _ZN7VECTOR3C1Eddd( &TMP$1890$1, -0x1.999999999999Ap-1, 0x1.p-1, 0x1.999999999999Ap-3 );
 _ZN7VECTOR3C1Eddd( &TMP$1889$1, -0x1.4CCCCCCCCCCCDp+0, 0x1.999999999999Ap-4, -0x1.999999999999Ap-4 );
 double vr$67 = _ZN8MEMORY_T9SDCAPSULEER7VECTOR3S1_S1_d( THIS$1, P$1, &TMP$1889$1, &TMP$1890$1, 0x1.999999999999Ap-4 );
 _ZN7VECTOR2C1Edd( &TMP$1888$1, vr$67, 0x1.FE66666666666p+4 );
 struct $7VECTOR2* vr$73 = _ZN8MEMORY_T3OPUER7VECTOR2S1_( &TMP$1887$1, THIS$1, (struct $7VECTOR2*)((uint8*)THIS$1 + 151083000ll), &TMP$1888$1 );
 _ZN7VECTOR2aSERS_( (struct $7VECTOR2*)((uint8*)THIS$1 + 151083000ll), vr$73 );
 _ZN7VECTOR2C1Edd( &TMP$1895$1, 0x1.p-2, 0x1.999999999999Ap-5 );
 _ZN7VECTOR3C1Eddd( &TMP$1893$1, -0x1.p+0, 0x1.p-2, -0x1.p+0 );
 struct $7VECTOR3* vr$81 = _ZmiR7VECTOR3S0_( &TMP$1894$1, P$1, &TMP$1893$1 );
 double vr$82 = _ZN8MEMORY_T10SDTRIPRISMER7VECTOR3R7VECTOR2( THIS$1, vr$81, &TMP$1895$1 );
 _ZN7VECTOR2C1Edd( &TMP$1892$1, vr$82, 0x1.5Cp+5 );
 struct $7VECTOR2* vr$88 = _ZN8MEMORY_T3OPUER7VECTOR2S1_( &TMP$1891$1, THIS$1, (struct $7VECTOR2*)((uint8*)THIS$1 + 151083000ll), &TMP$1892$1 );
 _ZN7VECTOR2aSERS_( (struct $7VECTOR2*)((uint8*)THIS$1 + 151083000ll), vr$88 );
 _ZN7VECTOR2C1Edd( &TMP$1900$1, 0x1.999999999999Ap-4, 0x1.999999999999Ap-3 );
 _ZN7VECTOR3C1Eddd( &TMP$1898$1, 0x1.p+0, 0x1.3333333333333p-2, -0x1.p+0 );
 struct $7VECTOR3* vr$96 = _ZmiR7VECTOR3S0_( &TMP$1899$1, P$1, &TMP$1898$1 );
 double vr$97 = _ZN8MEMORY_T10SDCYLINDERER7VECTOR3R7VECTOR2( THIS$1, vr$96, &TMP$1900$1 );
 _ZN7VECTOR2C1Edd( &TMP$1897$1, vr$97, 0x1.p+3 );
 struct $7VECTOR2* vr$103 = _ZN8MEMORY_T3OPUER7VECTOR2S1_( &TMP$1896$1, THIS$1, (struct $7VECTOR2*)((uint8*)THIS$1 + 151083000ll), &TMP$1897$1 );
 _ZN7VECTOR2aSERS_( (struct $7VECTOR2*)((uint8*)THIS$1 + 151083000ll), vr$103 );
 _ZN7VECTOR3C1Eddd( &TMP$1905$1, 0x1.999999999999Ap-1, 0x1.3333333333333p-1, 0x1.3333333333333p-2 );
 _ZN7VECTOR3C1Eddd( &TMP$1903$1, 0x0p+0, 0x1.p-1, -0x1.p+0 );
 struct $7VECTOR3* vr$111 = _ZmiR7VECTOR3S0_( &TMP$1904$1, P$1, &TMP$1903$1 );
 double vr$112 = _ZN8MEMORY_T6SDCONEER7VECTOR3S1_( THIS$1, vr$111, &TMP$1905$1 );
 _ZN7VECTOR2C1Edd( &TMP$1902$1, vr$112, 0x1.B8p+5 );
 struct $7VECTOR2* vr$118 = _ZN8MEMORY_T3OPUER7VECTOR2S1_( &TMP$1901$1, THIS$1, (struct $7VECTOR2*)((uint8*)THIS$1 + 151083000ll), &TMP$1902$1 );
 _ZN7VECTOR2aSERS_( (struct $7VECTOR2*)((uint8*)THIS$1 + 151083000ll), vr$118 );
 _ZN7VECTOR2C1Edd( &TMP$1910$1, 0x1.999999999999Ap-3, 0x1.999999999999Ap-5 );
 _ZN7VECTOR3C1Eddd( &TMP$1908$1, 0x0p+0, 0x1.p-2, 0x1.p+1 );
 struct $7VECTOR3* vr$126 = _ZmiR7VECTOR3S0_( &TMP$1909$1, P$1, &TMP$1908$1 );
 double vr$127 = _ZN8MEMORY_T9SDTORUS82ER7VECTOR3R7VECTOR2( THIS$1, vr$126, &TMP$1910$1 );
 _ZN7VECTOR2C1Edd( &TMP$1907$1, vr$127, 0x1.9p+5 );
 struct $7VECTOR2* vr$133 = _ZN8MEMORY_T3OPUER7VECTOR2S1_( &TMP$1906$1, THIS$1, (struct $7VECTOR2*)((uint8*)THIS$1 + 151083000ll), &TMP$1907$1 );
 _ZN7VECTOR2aSERS_( (struct $7VECTOR2*)((uint8*)THIS$1 + 151083000ll), vr$133 );
 _ZN7VECTOR2C1Edd( &TMP$1915$1, 0x1.999999999999Ap-3, 0x1.999999999999Ap-5 );
 _ZN7VECTOR3C1Eddd( &TMP$1913$1, -0x1.p+0, 0x1.p-2, 0x1.p+1 );
 struct $7VECTOR3* vr$141 = _ZmiR7VECTOR3S0_( &TMP$1914$1, P$1, &TMP$1913$1 );
 double vr$142 = _ZN8MEMORY_T9SDTORUS88ER7VECTOR3R7VECTOR2( THIS$1, vr$141, &TMP$1915$1 );
 _ZN7VECTOR2C1Edd( &TMP$1912$1, vr$142, 0x1.58p+5 );
 struct $7VECTOR2* vr$148 = _ZN8MEMORY_T3OPUER7VECTOR2S1_( &TMP$1911$1, THIS$1, (struct $7VECTOR2*)((uint8*)THIS$1 + 151083000ll), &TMP$1912$1 );
 _ZN7VECTOR2aSERS_( (struct $7VECTOR2*)((uint8*)THIS$1 + 151083000ll), vr$148 );
 _ZN7VECTOR2C1Edd( &TMP$1920$1, 0x1.999999999999Ap-4, 0x1.999999999999Ap-3 );
 _ZN7VECTOR3C1Eddd( &TMP$1918$1, 0x1.p+0, 0x1.3333333333333p-2, 0x1.p+1 );
 struct $7VECTOR3* vr$156 = _ZmiR7VECTOR3S0_( &TMP$1919$1, P$1, &TMP$1918$1 );
 double vr$157 = _ZN8MEMORY_T11SDCYLINDER6ER7VECTOR3R7VECTOR2( THIS$1, vr$156, &TMP$1920$1 );
 _ZN7VECTOR2C1Edd( &TMP$1917$1, vr$157, 0x1.8p+3 );
 struct $7VECTOR2* vr$163 = _ZN8MEMORY_T3OPUER7VECTOR2S1_( &TMP$1916$1, THIS$1, (struct $7VECTOR2*)((uint8*)THIS$1 + 151083000ll), &TMP$1917$1 );
 _ZN7VECTOR2aSERS_( (struct $7VECTOR2*)((uint8*)THIS$1 + 151083000ll), vr$163 );
 _ZN7VECTOR2C1Edd( &TMP$1925$1, 0x1.p-2, 0x1.999999999999Ap-5 );
 _ZN7VECTOR3C1Eddd( &TMP$1923$1, -0x1.p+0, 0x1.999999999999Ap-3, 0x1.p+0 );
 struct $7VECTOR3* vr$171 = _ZmiR7VECTOR3S0_( &TMP$1924$1, P$1, &TMP$1923$1 );
 double vr$172 = _ZN8MEMORY_T10SDHEXPRISMER7VECTOR3R7VECTOR2( THIS$1, vr$171, &TMP$1925$1 );
 _ZN7VECTOR2C1Edd( &TMP$1922$1, vr$172, 0x1.1p+4 );
 struct $7VECTOR2* vr$178 = _ZN8MEMORY_T3OPUER7VECTOR2S1_( &TMP$1921$1, THIS$1, (struct $7VECTOR2*)((uint8*)THIS$1 + 151083000ll), &TMP$1922$1 );
 _ZN7VECTOR2aSERS_( (struct $7VECTOR2*)((uint8*)THIS$1 + 151083000ll), vr$178 );
 _ZN7VECTOR3C1Eddd( &TMP$1931$1, -0x1.p+1, 0x1.999999999999Ap-3, 0x1.p+0 );
 struct $7VECTOR3* vr$184 = _ZmiR7VECTOR3S0_( &TMP$1932$1, P$1, &TMP$1931$1 );
 double vr$185 = _ZN8MEMORY_T8SDSPHEREER7VECTOR3d( THIS$1, vr$184, 0x1.p-2 );
 _ZN7VECTOR3C1Ed( &TMP$1930$1, 0x1.3333333333333p-3 );
 _ZN7VECTOR3C1Eddd( &TMP$1928$1, -0x1.p+1, 0x1.999999999999Ap-3, 0x1.p+0 );
 struct $7VECTOR3* vr$191 = _ZmiR7VECTOR3S0_( &TMP$1929$1, P$1, &TMP$1928$1 );
 double vr$192 = _ZN8MEMORY_T10UDROUNDBOXER7VECTOR3S1_d( THIS$1, vr$191, &TMP$1930$1, 0x1.999999999999Ap-5 );
 double vr$193 = _ZN8MEMORY_T3OPSEdd( THIS$1, vr$192, vr$185 );
 _ZN7VECTOR2C1Edd( &TMP$1927$1, vr$193, 0x1.Ap+3 );
 struct $7VECTOR2* vr$199 = _ZN8MEMORY_T3OPUER7VECTOR2S1_( &TMP$1926$1, THIS$1, (struct $7VECTOR2*)((uint8*)THIS$1 + 151083000ll), &TMP$1927$1 );
 _ZN7VECTOR2aSERS_( (struct $7VECTOR2*)((uint8*)THIS$1 + 151083000ll), vr$199 );
 _ZN7VECTOR2C1Edd( &TMP$1943$1, 0x1.47AE147AE147Bp-6, 0x1.3333333333333p-1 );
 _ZN7VECTOR3C1Eddd( &TMP$1942$1, 0x1.999999999999Ap-5, 0x1.p+0, 0x1.999999999999Ap-5 );
 _ZN7VECTOR3C1Eddd( &TMP$1940$1, -0x1.p+1, 0x1.999999999999Ap-3, 0x0p+0 );
 struct $7VECTOR3* vr$209 = _ZmiR7VECTOR3S0_( &TMP$1941$1, P$1, &TMP$1940$1 );
 double vr$210 = _Z6LENGTHRK7VECTOR3( (struct $7VECTOR3*)vr$209 );
 double vr$217 = _Z4ATANdd( *(double*)P$1 + 0x1.p+1, *(double*)((uint8*)P$1 + 16ll) );
 _ZN7VECTOR3C1Eddd( &TMP$1939$1, vr$217 / 0x1.921E4F765FD8Bp+2, *(double*)((uint8*)P$1 + 8ll), (vr$210 * 0x1.p-1) + 0x1.47AE147AE147Bp-6 );
 struct $7VECTOR3* vr$222 = _ZN8MEMORY_T5OPREPER7VECTOR3S1_( &TMP$1938$1, THIS$1, &TMP$1939$1, &TMP$1942$1 );
 double vr$223 = _ZN8MEMORY_T10SDCYLINDERER7VECTOR3R7VECTOR2( THIS$1, vr$222, &TMP$1943$1 );
 _ZN7VECTOR2C1Edd( &TMP$1937$1, 0x1.999999999999Ap-3, 0x1.999999999999Ap-4 );
 _ZN7VECTOR3C1Eddd( &TMP$1935$1, -0x1.p+1, 0x1.999999999999Ap-3, 0x0p+0 );
 struct $7VECTOR3* vr$229 = _ZmiR7VECTOR3S0_( &TMP$1936$1, P$1, &TMP$1935$1 );
 double vr$230 = _ZN8MEMORY_T9SDTORUS82ER7VECTOR3R7VECTOR2( THIS$1, vr$229, &TMP$1937$1 );
 double vr$231 = _ZN8MEMORY_T3OPSEdd( THIS$1, vr$230, vr$223 );
 _ZN7VECTOR2C1Edd( &TMP$1934$1, vr$231, 0x1.98p+5 );
 struct $7VECTOR2* vr$237 = _ZN8MEMORY_T3OPUER7VECTOR2S1_( &TMP$1933$1, THIS$1, (struct $7VECTOR2*)((uint8*)THIS$1 + 151083000ll), &TMP$1934$1 );
 _ZN7VECTOR2aSERS_( (struct $7VECTOR2*)((uint8*)THIS$1 + 151083000ll), vr$237 );
 _ZN7VECTOR3C1Eddd( &TMP$1946$1, -0x1.p+1, 0x1.p-2, -0x1.p+0 );
 struct $7VECTOR3* vr$243 = _ZmiR7VECTOR3S0_( &TMP$1947$1, P$1, &TMP$1946$1 );
 double vr$244 = _ZN8MEMORY_T8SDSPHEREER7VECTOR3d( THIS$1, vr$243, 0x1.999999999999Ap-3 );
 _ZN7VECTOR2C1Edd( &TMP$1945$1, (vr$244 * 0x1.6666666666666p-1) + (((__builtin_sin( (*(double*)P$1 * 0x1.9p+5) ) * __builtin_sin( (*(double*)((uint8*)P$1 + 8ll) * 0x1.9p+5) )) * __builtin_sin( (*(double*)((uint8*)P$1 + 16ll) * 0x1.9p+5) )) * 0x1.EB851EB851EB8p-6), 0x1.04p+6 );
 struct $7VECTOR2* vr$264 = _ZN8MEMORY_T3OPUER7VECTOR2S1_( &TMP$1944$1, THIS$1, (struct $7VECTOR2*)((uint8*)THIS$1 + 151083000ll), &TMP$1945$1 );
 _ZN7VECTOR2aSERS_( (struct $7VECTOR2*)((uint8*)THIS$1 + 151083000ll), vr$264 );
 _ZN7VECTOR2C1Edd( &TMP$1953$1, 0x1.999999999999Ap-3, 0x1.999999999999Ap-5 );
 _ZN7VECTOR3C1Eddd( &TMP$1951$1, -0x1.p+1, 0x1.p-2, 0x1.p+1 );
 struct $7VECTOR3* vr$272 = _ZmiR7VECTOR3S0_( &TMP$1952$1, P$1, &TMP$1951$1 );
 struct $7VECTOR3* vr$274 = _ZN8MEMORY_T7OPTWISTER7VECTOR3( &TMP$1950$1, THIS$1, vr$272 );
 double vr$275 = _ZN8MEMORY_T7SDTORUSER7VECTOR3R7VECTOR2( THIS$1, vr$274, &TMP$1953$1 );
 _ZN7VECTOR2C1Edd( &TMP$1949$1, vr$275 * 0x1.p-1, 0x1.759999999999Ap+5 );
 struct $7VECTOR2* vr$282 = _ZN8MEMORY_T3OPUER7VECTOR2S1_( &TMP$1948$1, THIS$1, (struct $7VECTOR2*)((uint8*)THIS$1 + 151083000ll), &TMP$1949$1 );
 _ZN7VECTOR2aSERS_( (struct $7VECTOR2*)((uint8*)THIS$1 + 151083000ll), vr$282 );
 _ZN7VECTOR3C1Eddd( &TMP$1956$1, 0x0p+0, 0x1.6666666666666p-2, -0x1.p+1 );
 struct $7VECTOR3* vr$288 = _ZmiR7VECTOR3S0_( &TMP$1957$1, P$1, &TMP$1956$1 );
 double vr$289 = _ZN8MEMORY_T13SDCONESECTIONER7VECTOR3ddd( THIS$1, vr$288, 0x1.3333333333333p-3, 0x1.999999999999Ap-3, 0x1.999999999999Ap-4 );
 _ZN7VECTOR2C1Edd( &TMP$1955$1, vr$289, 0x1.B570A3D70A3D7p+3 );
 struct $7VECTOR2* vr$295 = _ZN8MEMORY_T3OPUER7VECTOR2S1_( &TMP$1954$1, THIS$1, (struct $7VECTOR2*)((uint8*)THIS$1 + 151083000ll), &TMP$1955$1 );
 _ZN7VECTOR2aSERS_( (struct $7VECTOR2*)((uint8*)THIS$1 + 151083000ll), vr$295 );
 _ZN7VECTOR3C1Eddd( &TMP$1962$1, 0x1.3333333333333p-3, 0x1.999999999999Ap-3, 0x1.999999999999Ap-5 );
 _ZN7VECTOR3C1Eddd( &TMP$1960$1, 0x1.p+0, 0x1.6666666666666p-2, -0x1.p+1 );
 struct $7VECTOR3* vr$303 = _ZmiR7VECTOR3S0_( &TMP$1961$1, P$1, &TMP$1960$1 );
 double vr$304 = _ZN8MEMORY_T11SDELLIPSOIDER7VECTOR3S1_( THIS$1, vr$303, &TMP$1962$1 );
 _ZN7VECTOR2C1Edd( &TMP$1959$1, vr$304, 0x1.595C28F5C28F6p+5 );
 struct $7VECTOR2* vr$310 = _ZN8MEMORY_T3OPUER7VECTOR2S1_( &TMP$1958$1, THIS$1, (struct $7VECTOR2*)((uint8*)THIS$1 + 151083000ll), &TMP$1959$1 );
 _ZN7VECTOR2aSERS_( (struct $7VECTOR2*)((uint8*)THIS$1 + 151083000ll), vr$310 );
 _ZN7VECTOR2C1ERS_( tmp$1866$1, (struct $7VECTOR2*)((uint8*)THIS$1 + 151083000ll) );
 goto label$2243;
 label$2243:;
 return tmp$1866$1;
}

struct $7VECTOR2* _ZN8MEMORY_T7CASTRAYER7VECTOR3S1_( struct $7VECTOR2* tmp$1963$1, struct $8MEMORY_T* THIS$1, struct $7VECTOR3* RO$1, struct $7VECTOR3* RD$1 )
{
 double TMP$1967$1;
 label$2244:;
 double T$1;
 T$1 = 0x1.999999999999Ap-4;
 double M$1;
 M$1 = -0x1.p+0;
 struct $7VECTOR2 RES$1;
 label$2246:;
 {
  struct $7VECTOR2 TMP$1964$2;
  struct $7VECTOR3 TMP$1965$2;
  struct $7VECTOR3 TMP$1966$2;
  struct $7VECTOR3* vr$1 = _ZmlR7VECTOR3d( &TMP$1965$2, RD$1, T$1 );
  struct $7VECTOR3* vr$3 = _ZplR7VECTOR3S0_( &TMP$1966$2, RO$1, vr$1 );
  struct $7VECTOR2* vr$5 = _ZN8MEMORY_T3MAPER7VECTOR3( &TMP$1964$2, THIS$1, vr$3 );
  _ZN7VECTOR2aSERS_( &RES$1, vr$5 );
  if( T$1 <= 0x1.4p+4 ) goto label$2250;
  {
   goto label$2247;
   label$2250:;
  }
  if( *(double*)&RES$1 >= 0x1.0624DD2F1A9FCp-9 ) goto label$2252;
  {
   goto label$2247;
   label$2252:;
  }
  T$1 = T$1 + *(double*)&RES$1;
  M$1 = *(double*)((uint8*)&RES$1 + 8ll);
 }
 label$2248:;
 goto label$2246;
 label$2247:;
 *(double*)&RES$1 = T$1;
 if( T$1 <= 0x1.4p+4 ) goto label$2253;
 TMP$1967$1 = -0x1.p+0;
 goto label$2254;
 label$2253:;
 TMP$1967$1 = M$1;
 label$2254:;
 *(double*)((uint8*)&RES$1 + 8ll) = TMP$1967$1;
 _ZN7VECTOR2C1ERS_( tmp$1963$1, &RES$1 );
 goto label$2245;
 label$2245:;
 return tmp$1963$1;
}

double _ZN8MEMORY_T10SOFTSHADOWER7VECTOR3S1_dd( struct $8MEMORY_T* THIS$1, struct $7VECTOR3* RO$1, struct $7VECTOR3* RD$1, double MINT$1, double TMAX$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2255:;
 double RES$1;
 RES$1 = 0x1.p+0;
 double T$1;
 T$1 = MINT$1;
 {
  int64 I$2;
  I$2 = 0ll;
  label$2260:;
  {
   struct $7VECTOR2 TMP$1968$3;
   struct $7VECTOR3 TMP$1969$3;
   struct $7VECTOR3 TMP$1970$3;
   double H$3;
   struct $7VECTOR3* vr$2 = _ZmlR7VECTOR3d( &TMP$1969$3, RD$1, T$1 );
   struct $7VECTOR3* vr$4 = _ZplR7VECTOR3S0_( &TMP$1970$3, RO$1, vr$2 );
   _ZN8MEMORY_T3MAPER7VECTOR3( &TMP$1968$3, THIS$1, vr$4 );
   H$3 = *(double*)&TMP$1968$3;
   double vr$8 = _Z3MINdd( RES$1, (H$3 * 0x1.p+3) / T$1 );
   RES$1 = vr$8;
   double vr$9 = _Z5CLAMPddd( H$3, 0x1.47AE147AE147Bp-6, 0x1.999999999999Ap-4 );
   T$1 = T$1 + vr$9;
   if( ((int64)-(H$3 < 0x1.0624DD2F1A9FCp-10) | (int64)-(T$1 > TMAX$1)) == 0ll ) goto label$2262;
   {
    goto label$2259;
    label$2262:;
   }
  }
  label$2258:;
  I$2 = I$2 + 1ll;
  label$2257:;
  if( I$2 <= 15ll ) goto label$2260;
  label$2259:;
 }
 double vr$15 = _Z5CLAMPddd( RES$1, 0x0p+0, 0x1.p+0 );
 fb$result$1 = vr$15;
 goto label$2256;
 label$2256:;
 return fb$result$1;
}

struct $7VECTOR3* _ZN8MEMORY_T10CALCNORMALER7VECTOR3( struct $7VECTOR3* tmp$1971$1, struct $8MEMORY_T* THIS$1, struct $7VECTOR3* P$1 )
{
 struct $7VECTOR3 TMP$1972$1;
 struct $7VECTOR2 TMP$1973$1;
 struct $7VECTOR3 TMP$1974$1;
 struct $7VECTOR2 TMP$1975$1;
 struct $7VECTOR3 TMP$1976$1;
 struct $7VECTOR2 TMP$1977$1;
 struct $7VECTOR3 TMP$1978$1;
 struct $7VECTOR2 TMP$1979$1;
 struct $7VECTOR3 TMP$1980$1;
 struct $7VECTOR2 TMP$1981$1;
 struct $7VECTOR3 TMP$1982$1;
 struct $7VECTOR2 TMP$1983$1;
 struct $7VECTOR3 TMP$1984$1;
 struct $7VECTOR3 TMP$1985$1;
 label$2263:;
 _ZN7VECTOR3C1Eddd( &TMP$1982$1, *(double*)P$1, *(double*)((uint8*)P$1 + 8ll), *(double*)((uint8*)P$1 + 16ll) + 0x1.0624DD2F1A9FCp-10 );
 _ZN8MEMORY_T3MAPER7VECTOR3( &TMP$1981$1, THIS$1, &TMP$1982$1 );
 _ZN7VECTOR3C1Eddd( &TMP$1984$1, *(double*)P$1, *(double*)((uint8*)P$1 + 8ll), *(double*)((uint8*)P$1 + 16ll) + -0x1.0624DD2F1A9FCp-10 );
 _ZN8MEMORY_T3MAPER7VECTOR3( &TMP$1983$1, THIS$1, &TMP$1984$1 );
 _ZN7VECTOR3C1Eddd( &TMP$1978$1, *(double*)P$1, *(double*)((uint8*)P$1 + 8ll) + 0x1.0624DD2F1A9FCp-10, *(double*)((uint8*)P$1 + 16ll) );
 _ZN8MEMORY_T3MAPER7VECTOR3( &TMP$1977$1, THIS$1, &TMP$1978$1 );
 _ZN7VECTOR3C1Eddd( &TMP$1980$1, *(double*)P$1, *(double*)((uint8*)P$1 + 8ll) + -0x1.0624DD2F1A9FCp-10, *(double*)((uint8*)P$1 + 16ll) );
 _ZN8MEMORY_T3MAPER7VECTOR3( &TMP$1979$1, THIS$1, &TMP$1980$1 );
 _ZN7VECTOR3C1Eddd( &TMP$1974$1, *(double*)P$1 + 0x1.0624DD2F1A9FCp-10, *(double*)((uint8*)P$1 + 8ll), *(double*)((uint8*)P$1 + 16ll) );
 _ZN8MEMORY_T3MAPER7VECTOR3( &TMP$1973$1, THIS$1, &TMP$1974$1 );
 _ZN7VECTOR3C1Eddd( &TMP$1976$1, *(double*)P$1 + -0x1.0624DD2F1A9FCp-10, *(double*)((uint8*)P$1 + 8ll), *(double*)((uint8*)P$1 + 16ll) );
 _ZN8MEMORY_T3MAPER7VECTOR3( &TMP$1975$1, THIS$1, &TMP$1976$1 );
 _ZN7VECTOR3C1Eddd( &TMP$1972$1, *(double*)&TMP$1973$1 - *(double*)&TMP$1975$1, *(double*)&TMP$1977$1 - *(double*)&TMP$1979$1, *(double*)&TMP$1981$1 - *(double*)&TMP$1983$1 );
 struct $7VECTOR3* vr$48 = _Z9NORMALIZER7VECTOR3( &TMP$1985$1, &TMP$1972$1 );
 _ZN7VECTOR3C1ERS_( tmp$1971$1, vr$48 );
 goto label$2264;
 label$2264:;
 return tmp$1971$1;
}

double _ZN8MEMORY_T6CALCAOER7VECTOR3S1_( struct $8MEMORY_T* THIS$1, struct $7VECTOR3* P$1, struct $7VECTOR3* NOR$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2265:;
 double OCC$1;
 OCC$1 = 0x0p+0;
 double SCA$1;
 SCA$1 = 0x1.p+0;
 {
  int64 I$2;
  I$2 = 0ll;
  label$2270:;
  {
   struct $7VECTOR3 TMP$1986$3;
   struct $7VECTOR3 TMP$1987$3;
   struct $7VECTOR2 TMP$1988$3;
   double HR$3;
   HR$3 = (((double)I$2 * 0x1.EB851EB851EB8p-4) / 0x1.4p+2) + 0x1.47AE147AE147Bp-7;
   struct $7VECTOR3 AOPOS$3;
   struct $7VECTOR3* vr$6 = _ZmlR7VECTOR3d( &TMP$1986$3, NOR$1, HR$3 );
   struct $7VECTOR3* vr$8 = _ZplR7VECTOR3S0_( &TMP$1987$3, vr$6, P$1 );
   _ZN7VECTOR3C1ERS_( &AOPOS$3, vr$8 );
   double DD2$3;
   _ZN8MEMORY_T3MAPER7VECTOR3( &TMP$1988$3, THIS$1, &AOPOS$3 );
   DD2$3 = *(double*)&TMP$1988$3;
   OCC$1 = OCC$1 + (-(DD2$3 - HR$3) * SCA$1);
   SCA$1 = SCA$1 * 0x1.E666666666666p-1;
  }
  label$2268:;
  I$2 = I$2 + 1ll;
  label$2267:;
  if( I$2 <= 4ll ) goto label$2270;
  label$2269:;
 }
 OCC$1 = -(OCC$1 * 0x1.8p+1) + 0x1.p+0;
 double vr$21 = _Z5CLAMPddd( OCC$1, 0x0p+0, 0x1.p+0 );
 fb$result$1 = vr$21;
 goto label$2266;
 label$2266:;
 return fb$result$1;
}

struct $7VECTOR3* _ZN8MEMORY_T11RENDER_GLSLER7VECTOR3S1_( struct $7VECTOR3* tmp$1989$1, struct $8MEMORY_T* THIS$1, struct $7VECTOR3* RO$1, struct $7VECTOR3* RD$1 )
{
 struct $7VECTOR2 TMP$1990$1;
 struct $7VECTOR3 TMP$2031$1;
 label$2271:;
 struct $7VECTOR3 COL$1;
 _ZN7VECTOR3C1Ev( &COL$1 );
 struct $7VECTOR2 RES$1;
 struct $7VECTOR2* vr$2 = _ZN8MEMORY_T7CASTRAYER7VECTOR3S1_( &TMP$1990$1, THIS$1, RO$1, RD$1 );
 _ZN7VECTOR2C1ERS_( &RES$1, vr$2 );
 double T$1;
 T$1 = *(double*)&RES$1;
 double M$1;
 M$1 = *(double*)((uint8*)&RES$1 + 8ll);
 if( M$1 >= 0x0p+0 ) goto label$2274;
 {
  struct $7VECTOR3 TMP$1991$2;
  struct $7VECTOR3 TMP$1992$2;
  _ZN7VECTOR3C1Eddd( &TMP$1991$2, 0x1.p-1, 0x1.3333333333333p-1, 0x1.p+0 );
  struct $7VECTOR3* vr$9 = _ZplR7VECTOR3d( &TMP$1992$2, &TMP$1991$2, *(double*)((uint8*)RD$1 + 8ll) * 0x1.999999999999Ap-1 );
  _ZN7VECTOR3aSERS_( &COL$1, vr$9 );
 }
 goto label$2273;
 label$2274:;
 {
  struct $7VECTOR3 TMP$1993$2;
  struct $7VECTOR3 TMP$1994$2;
  struct $7VECTOR3 TMP$2005$2;
  struct $7VECTOR3 TMP$2006$2;
  struct $7VECTOR3 TMP$2007$2;
  struct $7VECTOR3 TMP$2008$2;
  struct $7VECTOR3 TMP$2009$2;
  struct $7VECTOR3 TMP$2010$2;
  struct $7VECTOR3 TMP$2011$2;
  struct $7VECTOR3 TMP$2012$2;
  struct $7VECTOR3 TMP$2013$2;
  struct $7VECTOR3 TMP$2014$2;
  struct $7VECTOR3 TMP$2015$2;
  struct $7VECTOR3 TMP$2016$2;
  struct $7VECTOR3 TMP$2017$2;
  struct $7VECTOR3 TMP$2018$2;
  struct $7VECTOR3 TMP$2019$2;
  struct $7VECTOR3 TMP$2020$2;
  struct $7VECTOR3 TMP$2021$2;
  struct $7VECTOR3 TMP$2022$2;
  struct $7VECTOR3 TMP$2023$2;
  struct $7VECTOR3 TMP$2024$2;
  struct $7VECTOR3 TMP$2025$2;
  struct $7VECTOR3 TMP$2026$2;
  struct $7VECTOR3 TMP$2027$2;
  struct $7VECTOR3 TMP$2028$2;
  struct $7VECTOR3 TMP$2029$2;
  struct $7VECTOR3 P$2;
  struct $7VECTOR3* vr$12 = _ZmldR7VECTOR3( &TMP$1993$2, T$1, RD$1 );
  struct $7VECTOR3* vr$14 = _ZplR7VECTOR3S0_( &TMP$1994$2, RO$1, vr$12 );
  _ZN7VECTOR3C1ERS_( &P$2, vr$14 );
  struct $7VECTOR3 NOR$2;
  _ZN7VECTOR3C1Ev( &NOR$2 );
  if( M$1 != 0x1.p+0 ) goto label$2276;
  {
   struct $7VECTOR3 TMP$1995$3;
   struct $7VECTOR3 TMP$1996$3;
   struct $7VECTOR3 TMP$1997$3;
   struct $7VECTOR3 TMP$1998$3;
   _ZN7VECTOR3C1Eddd( &TMP$1995$3, 0x0p+0, 0x1.p+0, 0x0p+0 );
   _ZN7VECTOR3aSERS_( &NOR$2, &TMP$1995$3 );
   _ZN7VECTOR3C1Ed( &TMP$1996$3, 0x1.999999999999Ap-2 );
   double vr$23 = _Z5FLOORd( *(double*)&P$2 * 0x1.p+0 );
   double vr$25 = _Z5FLOORd( *(double*)((uint8*)&P$2 + 16ll) * 0x1.p+0 );
   int64 vr$28 = _Z6MODULOll( ((int64)__builtin_nearbyint( vr$23 + vr$25 )), 2ll );
   struct $7VECTOR3* vr$31 = _ZmldR7VECTOR3( &TMP$1997$3, (double)vr$28, &TMP$1996$3 );
   struct $7VECTOR3* vr$33 = _ZplR7VECTOR3d( &TMP$1998$3, vr$31, 0x1.999999999999Ap-4 );
   _ZN7VECTOR3aSERS_( &COL$1, vr$33 );
  }
  goto label$2275;
  label$2276:;
  {
   struct $7VECTOR3 TMP$1999$3;
   struct $7VECTOR3 TMP$2000$3;
   struct $7VECTOR3 TMP$2001$3;
   struct $7VECTOR3 TMP$2002$3;
   struct $7VECTOR3 TMP$2003$3;
   struct $7VECTOR3 TMP$2004$3;
   struct $7VECTOR3* vr$37 = _ZN8MEMORY_T10CALCNORMALER7VECTOR3( &TMP$1999$3, THIS$1, &P$2 );
   _ZN7VECTOR3aSERS_( &NOR$2, vr$37 );
   _ZN7VECTOR3C1Eddd( &TMP$2000$3, 0x1.999999999999Ap-5, 0x1.47AE147AE147Bp-4, 0x1.999999999999Ap-4 );
   struct $7VECTOR3* vr$43 = _ZmlR7VECTOR3d( &TMP$2001$3, &TMP$2000$3, M$1 + -0x1.p+0 );
   struct $7VECTOR3* vr$45 = _Zv13sinR7VECTOR3( &TMP$2002$3, vr$43 );
   struct $7VECTOR3* vr$47 = _ZmldR7VECTOR3( &TMP$2003$3, 0x1.p-1, vr$45 );
   struct $7VECTOR3* vr$49 = _ZpldR7VECTOR3( &TMP$2004$3, 0x1.p-1, vr$47 );
   _ZN7VECTOR3aSERS_( &COL$1, vr$49 );
  }
  label$2275:;
  struct $7VECTOR3 REF$2;
  struct $7VECTOR3* vr$53 = _Z7REFLECTR7VECTOR3S0_( &TMP$2005$2, RD$1, &NOR$2 );
  _ZN7VECTOR3C1ERS_( &REF$2, vr$53 );
  double OCC$2;
  double vr$57 = _ZN8MEMORY_T6CALCAOER7VECTOR3S1_( THIS$1, &P$2, &NOR$2 );
  OCC$2 = vr$57;
  struct $7VECTOR3 LIGHT$2;
  _ZN7VECTOR3C1Eddd( &TMP$2006$2, 0x1.p+0, 0x1.p+0, -0x1.p+0 );
  struct $7VECTOR3* vr$61 = _Z9NORMALIZER7VECTOR3( &TMP$2007$2, &TMP$2006$2 );
  _ZN7VECTOR3C1ERS_( &LIGHT$2, vr$61 );
  double AMBIENT$2;
  double vr$65 = _Z5CLAMPddd( (*(double*)((uint8*)&NOR$2 + 8ll) * 0x1.p-1) + 0x1.p-1, 0x0p+0, 0x1.p+0 );
  AMBIENT$2 = vr$65;
  double DIFFUSE$2;
  double vr$68 = _Z3DOTR7VECTOR3S0_( &NOR$2, &LIGHT$2 );
  double vr$69 = _Z5CLAMPddd( vr$68, 0x0p+0, 0x1.p+0 );
  DIFFUSE$2 = vr$69;
  double BAC$2;
  _ZN7VECTOR3C1Eddd( &TMP$2008$2, -(*(double*)&LIGHT$2), 0x0p+0, -(*(double*)((uint8*)&LIGHT$2 + 16ll)) );
  struct $7VECTOR3* vr$75 = _Z9NORMALIZER7VECTOR3( &TMP$2009$2, &TMP$2008$2 );
  double vr$77 = _Z3DOTR7VECTOR3S0_( &NOR$2, vr$75 );
  double vr$78 = _Z5CLAMPddd( vr$77, 0x0p+0, 0x1.p+0 );
  double vr$81 = _Z5CLAMPddd( -(*(double*)((uint8*)&P$2 + 8ll)) + 0x1.p+0, 0x0p+0, 0x1.p+0 );
  BAC$2 = vr$78 * vr$81;
  double DOM$2;
  double vr$83 = _Z10SMOOTHSTEPddd( -0x1.999999999999Ap-4, 0x1.999999999999Ap-4, *(double*)((uint8*)&REF$2 + 8ll) );
  DOM$2 = vr$83;
  double FR$2;
  double vr$85 = _Z3DOTR7VECTOR3S0_( &NOR$2, RD$1 );
  double vr$87 = _Z5CLAMPddd( vr$85 + 0x1.p+0, 0x0p+0, 0x1.p+0 );
  double vr$88 = _Z3POWdd( vr$87, 0x1.p+1 );
  FR$2 = vr$88;
  double SPECULAR$2;
  double vr$91 = _Z3DOTR7VECTOR3S0_( &REF$2, &LIGHT$2 );
  double vr$92 = _Z5CLAMPddd( vr$91, 0x0p+0, 0x1.p+0 );
  double vr$93 = _Z3POWdd( vr$92, 0x1.p+4 );
  SPECULAR$2 = vr$93;
  double vr$96 = _ZN8MEMORY_T10SOFTSHADOWER7VECTOR3S1_dd( THIS$1, &P$2, &LIGHT$2, 0x1.47AE147AE147Bp-6, 0x1.4p+1 );
  DIFFUSE$2 = DIFFUSE$2 * vr$96;
  double vr$100 = _ZN8MEMORY_T10SOFTSHADOWER7VECTOR3S1_dd( THIS$1, &P$2, &REF$2, 0x1.47AE147AE147Bp-6, 0x1.4p+1 );
  DOM$2 = DOM$2 * vr$100;
  struct $7VECTOR3 LIN$2;
  _ZN7VECTOR3C1Ev( &LIN$2 );
  _ZN7VECTOR3C1Eddd( &TMP$2010$2, 0x1.p+0, 0x1.B333333333333p-1, 0x1.199999999999Ap-1 );
  struct $7VECTOR3* vr$107 = _ZmldR7VECTOR3( &TMP$2011$2, DIFFUSE$2 * 0x1.3333333333333p+0, &TMP$2010$2 );
  _ZN7VECTOR3aSERS_( &LIN$2, vr$107 );
  _ZN7VECTOR3C1Eddd( &TMP$2012$2, 0x1.p+0, 0x1.B333333333333p-1, 0x1.199999999999Ap-1 );
  struct $7VECTOR3* vr$113 = _ZmldR7VECTOR3( &TMP$2013$2, SPECULAR$2 * 0x1.3333333333333p+0, &TMP$2012$2 );
  struct $7VECTOR3* vr$115 = _ZmlR7VECTOR3d( &TMP$2014$2, vr$113, DIFFUSE$2 );
  _ZN7VECTOR3pLERS_( &LIN$2, vr$115 );
  _ZN7VECTOR3C1Eddd( &TMP$2015$2, 0x1.p-1, 0x1.6666666666666p-1, 0x1.p+0 );
  struct $7VECTOR3* vr$121 = _ZmldR7VECTOR3( &TMP$2016$2, AMBIENT$2 * 0x1.999999999999Ap-3, &TMP$2015$2 );
  struct $7VECTOR3* vr$123 = _ZmlR7VECTOR3d( &TMP$2017$2, vr$121, OCC$2 );
  _ZN7VECTOR3pLERS_( &LIN$2, vr$123 );
  _ZN7VECTOR3C1Eddd( &TMP$2018$2, 0x1.p-1, 0x1.6666666666666p-1, 0x1.p+0 );
  struct $7VECTOR3* vr$129 = _ZmldR7VECTOR3( &TMP$2019$2, DOM$2 * 0x1.3333333333333p-2, &TMP$2018$2 );
  struct $7VECTOR3* vr$131 = _ZmlR7VECTOR3d( &TMP$2020$2, vr$129, OCC$2 );
  _ZN7VECTOR3pLERS_( &LIN$2, vr$131 );
  _ZN7VECTOR3C1Eddd( &TMP$2021$2, 0x1.p-2, 0x1.p-2, 0x1.p-2 );
  struct $7VECTOR3* vr$137 = _ZmldR7VECTOR3( &TMP$2022$2, BAC$2 * 0x1.3333333333333p-2, &TMP$2021$2 );
  struct $7VECTOR3* vr$139 = _ZmlR7VECTOR3d( &TMP$2023$2, vr$137, OCC$2 );
  _ZN7VECTOR3pLERS_( &LIN$2, vr$139 );
  _ZN7VECTOR3C1Eddd( &TMP$2024$2, 0x1.p+0, 0x1.p+0, 0x1.p+0 );
  struct $7VECTOR3* vr$145 = _ZmldR7VECTOR3( &TMP$2025$2, FR$2 * 0x1.999999999999Ap-2, &TMP$2024$2 );
  struct $7VECTOR3* vr$147 = _ZmlR7VECTOR3d( &TMP$2026$2, vr$145, OCC$2 );
  _ZN7VECTOR3pLERS_( &LIN$2, vr$147 );
  struct $7VECTOR3* vr$152 = _ZmlR7VECTOR3S0_( &TMP$2027$2, &COL$1, &LIN$2 );
  _ZN7VECTOR3aSERS_( &COL$1, vr$152 );
  double vr$156 = _Z3EXPd( (T$1 * T$1) * -0x1.0624DD2F1A9FCp-9 );
  _ZN7VECTOR3C1Eddd( &TMP$2028$2, 0x1.999999999999Ap-1, 0x1.CCCCCCCCCCCCDp-1, 0x1.p+0 );
  struct $7VECTOR3* vr$163 = _Z3MIXR7VECTOR3S0_d( &TMP$2029$2, &COL$1, &TMP$2028$2, -vr$156 + 0x1.p+0 );
  _ZN7VECTOR3aSERS_( &COL$1, vr$163 );
 }
 label$2273:;
 struct $7VECTOR3* vr$167 = _Z5CLAMPR7VECTOR3dd( &TMP$2031$1, &COL$1, 0x0p+0, 0x1.p+0 );
 _ZN7VECTOR3C1ERS_( tmp$1989$1, vr$167 );
 goto label$2272;
 label$2272:;
 return tmp$1989$1;
}

struct $4MAT3 _ZN8MEMORY_T9SETCAMERAER7VECTOR3S1_d( struct $8MEMORY_T* THIS$1, struct $7VECTOR3* RO$1, struct $7VECTOR3* TA$1, double CR$1 )
{
 struct $7VECTOR3 TMP$2032$1;
 struct $7VECTOR3 TMP$2033$1;
 struct $7VECTOR3 TMP$2035$1;
 struct $7VECTOR3 TMP$2036$1;
 struct $7VECTOR3 TMP$2037$1;
 struct $7VECTOR3 TMP$2038$1;
 struct $4MAT3 fb$result$1;
 label$2277:;
 struct $7VECTOR3 CW$1;
 struct $7VECTOR3* vr$1 = _ZmiR7VECTOR3S0_( &TMP$2032$1, TA$1, RO$1 );
 struct $7VECTOR3* vr$3 = _Z9NORMALIZER7VECTOR3( &TMP$2033$1, vr$1 );
 _ZN7VECTOR3C1ERS_( &CW$1, vr$3 );
 struct $7VECTOR3 CP$1;
 _ZN7VECTOR3C1Eddd( &CP$1, __builtin_sin( CR$1 ), __builtin_cos( CR$1 ), 0x0p+0 );
 struct $7VECTOR3 CU$1;
 struct $7VECTOR3* vr$11 = CROSS( &TMP$2035$1, &CW$1, &CP$1 );
 struct $7VECTOR3* vr$13 = _Z9NORMALIZER7VECTOR3( &TMP$2036$1, vr$11 );
 _ZN7VECTOR3C1ERS_( &CU$1, vr$13 );
 struct $7VECTOR3 CV$1;
 struct $7VECTOR3* vr$18 = CROSS( &TMP$2037$1, &CU$1, &CW$1 );
 struct $7VECTOR3* vr$20 = _Z9NORMALIZER7VECTOR3( &TMP$2038$1, vr$18 );
 _ZN7VECTOR3C1ERS_( &CV$1, vr$20 );
 _ZN4MAT3C1ER7VECTOR3S1_S1_( &fb$result$1, &CU$1, &CV$1, &CW$1 );
 goto label$2278;
 label$2278:;
 return fb$result$1;
}

void _ZN8MEMORY_T9MAINIMAGEER7VECTOR4RK7VECTOR2( struct $8MEMORY_T* THIS$1, struct $7VECTOR4* FRAGCOLOR$1, struct $7VECTOR2* FRAGCOORD$1 )
{
 struct $7VECTOR2 TMP$2040$1;
 struct $7VECTOR2 TMP$2041$1;
 struct $7VECTOR2 TMP$2042$1;
 double TMP$2043$1;
 struct $7VECTOR2 TMP$2044$1;
 double TMP$2045$1;
 struct $7VECTOR3 TMP$2048$1;
 struct $7VECTOR2 TMP$2049$1;
 struct $7VECTOR3 TMP$2050$1;
 struct $7VECTOR3 TMP$2051$1;
 struct $7VECTOR3 TMP$2052$1;
 struct $7VECTOR4 TMP$2053$1;
 struct $7VECTOR3 TMP$2054$1;
 struct $7VECTOR3 TMP$2055$1;
 label$2279:;
 double RTIME$1;
 RTIME$1 = IGLOBALTIME$;
 struct $7VECTOR2 Q$1;
 struct $7VECTOR2* vr$1 = _ZN7VECTOR32XYEv( &TMP$2040$1, &IRESOLUTION$ );
 struct $7VECTOR2* vr$5 = _ZdvR7VECTOR2S0_( &TMP$2041$1, (struct $7VECTOR2*)FRAGCOORD$1, vr$1 );
 _ZN7VECTOR2C1ERS_( &Q$1, vr$5 );
 struct $7VECTOR2 P$1;
 TMP$2045$1 = 0x1.p+0;
 TMP$2043$1 = 0x1.p+1;
 struct $7VECTOR2* vr$11 = _ZmlR7VECTOR2Rd( &TMP$2042$1, &Q$1, &TMP$2043$1 );
 struct $7VECTOR2* vr$13 = _ZmiR7VECTOR2Rd( &TMP$2044$1, vr$11, &TMP$2045$1 );
 _ZN7VECTOR2C1ERS_( &P$1, vr$13 );
 *(double*)&P$1 = *(double*)&P$1 * (*(double*)&IRESOLUTION$ / *(double*)((uint8*)&IRESOLUTION$ + 8ll));
 struct $7VECTOR3 RO$1;
 _ZN7VECTOR3C1Eddd( &RO$1, __builtin_cos( RTIME$1 ) * 0x1.p+1, 0x1.p+0, __builtin_sin( RTIME$1 ) * 0x1.p+1 );
 struct $7VECTOR3 TA$1;
 _ZN7VECTOR3C1Eddd( &TA$1, -0x1.p-1, -0x1.999999999999Ap-2, 0x1.p-1 );
 struct $4MAT3 CA$1;
 struct $4MAT3 vr$25 = _ZN8MEMORY_T9SETCAMERAER7VECTOR3S1_d( THIS$1, &RO$1, &TA$1, 0x0p+0 );
 CA$1 = vr$25;
 struct $7VECTOR3 RD$1;
 struct $7VECTOR2* vr$28 = _ZN7VECTOR22XYEv( &TMP$2049$1, &P$1 );
 _ZN7VECTOR3C1ER7VECTOR2d( &TMP$2048$1, vr$28, 0x1.p+1 );
 struct $7VECTOR3* vr$32 = _Z9NORMALIZER7VECTOR3( &TMP$2050$1, &TMP$2048$1 );
 struct $7VECTOR3* vr$35 = _ZmlR4MAT3R7VECTOR3( &TMP$2051$1, &CA$1, vr$32 );
 _ZN7VECTOR3C1ERS_( &RD$1, vr$35 );
 struct $7VECTOR3 COL$1;
 struct $7VECTOR3* vr$40 = _ZN8MEMORY_T11RENDER_GLSLER7VECTOR3S1_( &TMP$2052$1, THIS$1, &RO$1, &RD$1 );
 _ZN7VECTOR3C1ERS_( &COL$1, vr$40 );
 _ZN7VECTOR3C1Ed( &TMP$2054$1, 0x1.D16872B020C4Ap-2 );
 struct $7VECTOR3* vr$46 = _Z3POWR7VECTOR3S0_( &TMP$2055$1, &COL$1, &TMP$2054$1 );
 _ZN7VECTOR4C1ER7VECTOR3d( &TMP$2053$1, vr$46, 0x1.p+0 );
 _ZN7VECTOR4aSERS_( FRAGCOLOR$1, &TMP$2053$1 );
 label$2280:;
}

void _ZN8MEMORY_T10_MAINIMAGEER7VECTOR4RK7VECTOR2( struct $8MEMORY_T* THIS$1, struct $7VECTOR4* FRAGCOLOR$1, struct $7VECTOR2* FRAGCOORD$1 )
{
 struct $7VECTOR2 TMP$2056$1;
 struct $7VECTOR2 TMP$2057$1;
 struct $7VECTOR4 TMP$2058$1;
 label$2281:;
 struct $7VECTOR2 UV$1;
 struct $7VECTOR2* vr$1 = _ZN7VECTOR32XYEv( &TMP$2056$1, &IRESOLUTION$ );
 struct $7VECTOR2* vr$5 = _ZdvR7VECTOR2S0_( &TMP$2057$1, (struct $7VECTOR2*)FRAGCOORD$1, vr$1 );
 _ZN7VECTOR2C1ERS_( &UV$1, vr$5 );
 _ZN7VECTOR4C1ER7VECTOR2dd( &TMP$2058$1, &UV$1, (__builtin_sin( IGLOBALTIME$ ) * 0x1.p-1) + 0x1.p-1, 0x1.p+0 );
 _ZN7VECTOR4aSERS_( FRAGCOLOR$1, &TMP$2058$1 );
 label$2282:;
}

void _ZN8MEMORY_T9EXEC_GLSLEv( struct $8MEMORY_T* THIS$1 )
{
 label$2283:;
 uint64 FRAMES$1;
 __builtin_memset( &FRAMES$1, 0, 8ll );
 uint64 MX$1;
 __builtin_memset( &MX$1, 0, 8ll );
 uint64 MY$1;
 __builtin_memset( &MY$1, 0, 8ll );
 uint64 MB$1;
 __builtin_memset( &MB$1, 0, 8ll );
 SCR_W$ = 1920ull;
 SCR_H$ = 1080ull;
 *(double*)&IRESOLUTION$ = (double)SCR_W$;
 *(double*)((uint8*)&IRESOLUTION$ + 8ll) = (double)SCR_H$;
 *(double*)((uint8*)&IRESOLUTION$ + 16ll) = *(double*)&IRESOLUTION$ / *(double*)((uint8*)&IRESOLUTION$ + 8ll);
 struct $7VECTOR2 FRAGCOORD$1;
 _ZN7VECTOR2C1Ev( &FRAGCOORD$1 );
 struct $7VECTOR4 FRAGCOLOR$1;
 _ZN7VECTOR4C1Ev( &FRAGCOLOR$1 );
 double TFRAMESTART$1;
 TFRAMESTART$1 = 0x0p+0;
 uint64 COLOUR$1;
 __builtin_memset( &COLOUR$1, 0, 8ll );
 label$2285:;
 if( (double)FRAMES$1 == *(double*)((uint8*)THIS$1 + 394912ll) ) goto label$2286;
 {
  FBSTRING TMP$2063$2;
  *(double*)((uint8*)&FRAGCOORD$1 + 8ll) = (double)(SCR_H$ + 18446744073709551615ull);
  {
   uint64 Y$3;
   Y$3 = 0ull;
   uint64 TMP$2059$3;
   TMP$2059$3 = SCR_H$ + 18446744073709551615ull;
   goto label$2287;
   label$2290:;
   {
    fb_GfxLock( );
    {
     uint64 X$5;
     X$5 = 0ull;
     uint64 TMP$2060$5;
     TMP$2060$5 = SCR_W$ + 18446744073709551615ull;
     goto label$2291;
     label$2294:;
     {
      *(double*)&FRAGCOORD$1 = (double)X$5;
      _ZN8MEMORY_T9MAINIMAGEER7VECTOR4RK7VECTOR2( THIS$1, &FRAGCOLOR$1, (struct $7VECTOR2*)&FRAGCOORD$1 );
      *(double*)((uint8*)THIS$1 + 394888ll) = (double)X$5;
      *(double*)((uint8*)THIS$1 + 394896ll) = (double)Y$3;
      uint32 vr$24 = _ZN7VECTOR4cvjEv( &FRAGCOLOR$1 );
      *(double*)((uint8*)THIS$1 + 394824ll) = (double)vr$24;
      _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.820Cp+15, 0x0p+0 );
     }
     label$2292:;
     X$5 = X$5 + 1ull;
     label$2291:;
     if( X$5 <= TMP$2060$5 ) goto label$2294;
     label$2293:;
    }
    fb_GfxUnlock( (int32)Y$3, (int32)Y$3 );
    fb_Sleep( 1 );
    *(double*)((uint8*)&FRAGCOORD$1 + 8ll) = *(double*)((uint8*)&FRAGCOORD$1 + 8ll) + -0x1.p+0;
    fb_GfxPut( (void*)0ull, 0x0p+0f, 0x0p+0f, (void*)FGIMAGE$, -65536, -65536, -65536, -65536, 0, 6, (void*)&fb_hPutAlpha, -1, (void*)0ull, (void*)0ull );
   }
   label$2288:;
   Y$3 = Y$3 + 1ull;
   label$2287:;
   if( Y$3 <= TMP$2059$3 ) goto label$2290;
   label$2289:;
  }
  IGLOBALTIME$ = IGLOBALTIME$ + 0x1.5555555555555p-5;
  double FPS$2;
  FPS$2 = 0x1.p+0 / (IGLOBALTIME$ - TFRAMESTART$1);
  FBSTRING* vr$36 = fb_ULongintToStr( FRAMES$1 + 1ull );
  __builtin_memset( &TMP$2063$2, 0, 24ll );
  FBSTRING* vr$39 = fb_StrConcat( &TMP$2063$2, (void*)"frame: ", 8ll, (void*)vr$36, -1ll );
  fb_GfxSetWindowTitle( (FBSTRING*)vr$39 );
  TFRAMESTART$1 = IGLOBALTIME$;
  FRAMES$1 = FRAMES$1 + 1ull;
 }
 goto label$2285;
 label$2286:;
 label$2284:;
}

void _ZN8MEMORY_T12EXEC_GLSL_40Ev( struct $8MEMORY_T* THIS$1 )
{
 label$2295:;
 uint64 FRAMES$1;
 __builtin_memset( &FRAMES$1, 0, 8ll );
 uint64 MX$1;
 __builtin_memset( &MX$1, 0, 8ll );
 uint64 MY$1;
 __builtin_memset( &MY$1, 0, 8ll );
 uint64 MB$1;
 __builtin_memset( &MB$1, 0, 8ll );
 SCR_W$ = 40ull;
 SCR_H$ = 25ull;
 *(double*)&IRESOLUTION$ = (double)SCR_W$;
 *(double*)((uint8*)&IRESOLUTION$ + 8ll) = (double)SCR_H$;
 *(double*)((uint8*)&IRESOLUTION$ + 16ll) = *(double*)&IRESOLUTION$ / *(double*)((uint8*)&IRESOLUTION$ + 8ll);
 struct $7VECTOR2 FRAGCOORD$1;
 _ZN7VECTOR2C1Ev( &FRAGCOORD$1 );
 struct $7VECTOR4 FRAGCOLOR$1;
 _ZN7VECTOR4C1Ev( &FRAGCOLOR$1 );
 double TFRAMESTART$1;
 TFRAMESTART$1 = 0x0p+0;
 uint64 COLOUR$1;
 __builtin_memset( &COLOUR$1, 0, 8ll );
 label$2297:;
 if( (double)FRAMES$1 == *(double*)((uint8*)THIS$1 + 394912ll) ) goto label$2298;
 {
  FBSTRING TMP$2067$2;
  *(double*)((uint8*)&FRAGCOORD$1 + 8ll) = (double)(SCR_H$ + 18446744073709551615ull);
  {
   uint64 Y$3;
   Y$3 = 0ull;
   uint64 TMP$2064$3;
   TMP$2064$3 = SCR_H$ + 18446744073709551615ull;
   goto label$2299;
   label$2302:;
   {
    fb_GfxLock( );
    {
     uint64 X$5;
     X$5 = 0ull;
     uint64 TMP$2065$5;
     TMP$2065$5 = SCR_W$ + 18446744073709551615ull;
     goto label$2303;
     label$2306:;
     {
      *(double*)&FRAGCOORD$1 = (double)X$5;
      _ZN8MEMORY_T9MAINIMAGEER7VECTOR4RK7VECTOR2( THIS$1, &FRAGCOLOR$1, (struct $7VECTOR2*)&FRAGCOORD$1 );
      *(double*)((uint8*)THIS$1 + 394888ll) = (double)X$5;
      *(double*)((uint8*)THIS$1 + 394896ll) = (double)Y$3;
      uint32 vr$24 = _ZN7VECTOR4cvjEv( &FRAGCOLOR$1 );
      *(double*)((uint8*)THIS$1 + 394824ll) = (double)vr$24;
      _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.83D6p+15, 0x0p+0 );
     }
     label$2304:;
     X$5 = X$5 + 1ull;
     label$2303:;
     if( X$5 <= TMP$2065$5 ) goto label$2306;
     label$2305:;
    }
    fb_GfxUnlock( (int32)Y$3, (int32)Y$3 );
    fb_Sleep( 1 );
    *(double*)((uint8*)&FRAGCOORD$1 + 8ll) = *(double*)((uint8*)&FRAGCOORD$1 + 8ll) + -0x1.p+0;
   }
   label$2300:;
   Y$3 = Y$3 + 1ull;
   label$2299:;
   if( Y$3 <= TMP$2064$3 ) goto label$2302;
   label$2301:;
  }
  fb_GfxPut( (void*)0ull, 0x0p+0f, 0x0p+0f, (void*)FGIMAGE$, -65536, -65536, -65536, -65536, 0, 6, (void*)&fb_hPutAlpha, -1, (void*)0ull, (void*)0ull );
  IGLOBALTIME$ = IGLOBALTIME$ + 0x1.5555555555555p-5;
  double FPS$2;
  FPS$2 = 0x1.p+0 / (IGLOBALTIME$ - TFRAMESTART$1);
  FBSTRING* vr$36 = fb_ULongintToStr( FRAMES$1 + 1ull );
  __builtin_memset( &TMP$2067$2, 0, 24ll );
  FBSTRING* vr$39 = fb_StrConcat( &TMP$2067$2, (void*)"frame: ", 8ll, (void*)vr$36, -1ll );
  fb_GfxSetWindowTitle( (FBSTRING*)vr$39 );
  TFRAMESTART$1 = IGLOBALTIME$;
  FRAMES$1 = FRAMES$1 + 1ull;
 }
 goto label$2297;
 label$2298:;
 label$2296:;
}

void _ZN8MEMORY_T12EXEC_GLSL_90Ev( struct $8MEMORY_T* THIS$1 )
{
 label$2307:;
 uint64 FRAMES$1;
 __builtin_memset( &FRAMES$1, 0, 8ll );
 uint64 MX$1;
 __builtin_memset( &MX$1, 0, 8ll );
 uint64 MY$1;
 __builtin_memset( &MY$1, 0, 8ll );
 uint64 MB$1;
 __builtin_memset( &MB$1, 0, 8ll );
 SCR_W$ = 90ull;
 SCR_H$ = 60ull;
 *(double*)&IRESOLUTION$ = (double)SCR_W$;
 *(double*)((uint8*)&IRESOLUTION$ + 8ll) = (double)SCR_H$;
 *(double*)((uint8*)&IRESOLUTION$ + 16ll) = *(double*)&IRESOLUTION$ / *(double*)((uint8*)&IRESOLUTION$ + 8ll);
 struct $7VECTOR2 FRAGCOORD$1;
 _ZN7VECTOR2C1Ev( &FRAGCOORD$1 );
 struct $7VECTOR4 FRAGCOLOR$1;
 _ZN7VECTOR4C1Ev( &FRAGCOLOR$1 );
 double TFRAMESTART$1;
 TFRAMESTART$1 = 0x0p+0;
 uint64 COLOUR$1;
 __builtin_memset( &COLOUR$1, 0, 8ll );
 label$2309:;
 if( (double)FRAMES$1 == *(double*)((uint8*)THIS$1 + 394912ll) ) goto label$2310;
 {
  FBSTRING TMP$2071$2;
  *(double*)((uint8*)&FRAGCOORD$1 + 8ll) = (double)(SCR_H$ + 18446744073709551615ull);
  {
   uint64 Y$3;
   Y$3 = 0ull;
   uint64 TMP$2068$3;
   TMP$2068$3 = SCR_H$ + 18446744073709551615ull;
   goto label$2311;
   label$2314:;
   {
    fb_GfxLock( );
    {
     uint64 X$5;
     X$5 = 0ull;
     uint64 TMP$2069$5;
     TMP$2069$5 = SCR_W$ + 18446744073709551615ull;
     goto label$2315;
     label$2318:;
     {
      *(double*)&FRAGCOORD$1 = (double)X$5;
      _ZN8MEMORY_T9MAINIMAGEER7VECTOR4RK7VECTOR2( THIS$1, &FRAGCOLOR$1, (struct $7VECTOR2*)&FRAGCOORD$1 );
      *(double*)((uint8*)THIS$1 + 394888ll) = (double)X$5;
      *(double*)((uint8*)THIS$1 + 394896ll) = (double)Y$3;
      uint32 vr$24 = _ZN7VECTOR4cvjEv( &FRAGCOLOR$1 );
      *(double*)((uint8*)THIS$1 + 394824ll) = (double)vr$24;
      _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.83D8p+15, 0x0p+0 );
     }
     label$2316:;
     X$5 = X$5 + 1ull;
     label$2315:;
     if( X$5 <= TMP$2069$5 ) goto label$2318;
     label$2317:;
    }
    fb_GfxUnlock( (int32)Y$3, (int32)Y$3 );
    fb_Sleep( 1 );
    *(double*)((uint8*)&FRAGCOORD$1 + 8ll) = *(double*)((uint8*)&FRAGCOORD$1 + 8ll) + -0x1.p+0;
   }
   label$2312:;
   Y$3 = Y$3 + 1ull;
   label$2311:;
   if( Y$3 <= TMP$2068$3 ) goto label$2314;
   label$2313:;
  }
  fb_GfxPut( (void*)0ull, 0x0p+0f, 0x0p+0f, (void*)FGIMAGE$, -65536, -65536, -65536, -65536, 0, 6, (void*)&fb_hPutAlpha, -1, (void*)0ull, (void*)0ull );
  IGLOBALTIME$ = IGLOBALTIME$ + 0x1.5555555555555p-5;
  double FPS$2;
  FPS$2 = 0x1.p+0 / (IGLOBALTIME$ - TFRAMESTART$1);
  FBSTRING* vr$36 = fb_ULongintToStr( FRAMES$1 + 1ull );
  __builtin_memset( &TMP$2071$2, 0, 24ll );
  FBSTRING* vr$39 = fb_StrConcat( &TMP$2071$2, (void*)"frame: ", 8ll, (void*)vr$36, -1ll );
  fb_GfxSetWindowTitle( (FBSTRING*)vr$39 );
  TFRAMESTART$1 = IGLOBALTIME$;
  FRAMES$1 = FRAMES$1 + 1ull;
 }
 goto label$2309;
 label$2310:;
 label$2308:;
}

void _ZN8MEMORY_T13EXEC_GLSL_120Ev( struct $8MEMORY_T* THIS$1 )
{
 label$2319:;
 uint64 FRAMES$1;
 __builtin_memset( &FRAMES$1, 0, 8ll );
 uint64 MX$1;
 __builtin_memset( &MX$1, 0, 8ll );
 uint64 MY$1;
 __builtin_memset( &MY$1, 0, 8ll );
 uint64 MB$1;
 __builtin_memset( &MB$1, 0, 8ll );
 SCR_W$ = 120ull;
 SCR_H$ = 60ull;
 *(double*)&IRESOLUTION$ = (double)SCR_W$;
 *(double*)((uint8*)&IRESOLUTION$ + 8ll) = (double)SCR_H$;
 *(double*)((uint8*)&IRESOLUTION$ + 16ll) = *(double*)&IRESOLUTION$ / *(double*)((uint8*)&IRESOLUTION$ + 8ll);
 struct $7VECTOR2 FRAGCOORD$1;
 _ZN7VECTOR2C1Ev( &FRAGCOORD$1 );
 struct $7VECTOR4 FRAGCOLOR$1;
 _ZN7VECTOR4C1Ev( &FRAGCOLOR$1 );
 double TFRAMESTART$1;
 TFRAMESTART$1 = 0x0p+0;
 uint64 COLOUR$1;
 __builtin_memset( &COLOUR$1, 0, 8ll );
 label$2321:;
 if( (double)FRAMES$1 == *(double*)((uint8*)THIS$1 + 394912ll) ) goto label$2322;
 {
  FBSTRING TMP$2075$2;
  *(double*)((uint8*)&FRAGCOORD$1 + 8ll) = (double)(SCR_H$ + 18446744073709551615ull);
  {
   uint64 Y$3;
   Y$3 = 0ull;
   uint64 TMP$2072$3;
   TMP$2072$3 = SCR_H$ + 18446744073709551615ull;
   goto label$2323;
   label$2326:;
   {
    fb_GfxLock( );
    {
     uint64 X$5;
     X$5 = 0ull;
     uint64 TMP$2073$5;
     TMP$2073$5 = SCR_W$ + 18446744073709551615ull;
     goto label$2327;
     label$2330:;
     {
      *(double*)&FRAGCOORD$1 = (double)X$5;
      _ZN8MEMORY_T9MAINIMAGEER7VECTOR4RK7VECTOR2( THIS$1, &FRAGCOLOR$1, (struct $7VECTOR2*)&FRAGCOORD$1 );
      *(double*)((uint8*)THIS$1 + 394888ll) = (double)X$5;
      *(double*)((uint8*)THIS$1 + 394896ll) = (double)Y$3;
      uint32 vr$24 = _ZN7VECTOR4cvjEv( &FRAGCOLOR$1 );
      *(double*)((uint8*)THIS$1 + 394824ll) = (double)vr$24;
      _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.83DAp+15, 0x0p+0 );
     }
     label$2328:;
     X$5 = X$5 + 1ull;
     label$2327:;
     if( X$5 <= TMP$2073$5 ) goto label$2330;
     label$2329:;
    }
    fb_GfxUnlock( (int32)Y$3, (int32)Y$3 );
    fb_Sleep( 1 );
    *(double*)((uint8*)&FRAGCOORD$1 + 8ll) = *(double*)((uint8*)&FRAGCOORD$1 + 8ll) + -0x1.p+0;
   }
   label$2324:;
   Y$3 = Y$3 + 1ull;
   label$2323:;
   if( Y$3 <= TMP$2072$3 ) goto label$2326;
   label$2325:;
  }
  fb_GfxPut( (void*)0ull, 0x0p+0f, 0x0p+0f, (void*)FGIMAGE$, -65536, -65536, -65536, -65536, 0, 6, (void*)&fb_hPutAlpha, -1, (void*)0ull, (void*)0ull );
  IGLOBALTIME$ = IGLOBALTIME$ + 0x1.5555555555555p-5;
  double FPS$2;
  FPS$2 = 0x1.p+0 / (IGLOBALTIME$ - TFRAMESTART$1);
  FBSTRING* vr$36 = fb_ULongintToStr( FRAMES$1 + 1ull );
  __builtin_memset( &TMP$2075$2, 0, 24ll );
  FBSTRING* vr$39 = fb_StrConcat( &TMP$2075$2, (void*)"frame: ", 8ll, (void*)vr$36, -1ll );
  fb_GfxSetWindowTitle( (FBSTRING*)vr$39 );
  TFRAMESTART$1 = IGLOBALTIME$;
  FRAMES$1 = FRAMES$1 + 1ull;
 }
 goto label$2321;
 label$2322:;
 label$2320:;
}

void _ZN8MEMORY_T7KMEMSETEddd( struct $8MEMORY_T* THIS$1, double DE$1, double SZ$1, double V$1 )
{
 label$2331:;
 SZ$1 = SZ$1 - (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 {
  double MEM_LOC$2;
  MEM_LOC$2 = (double)*(uint8*)NIBBLES$;
  double TMP$2076$2;
  TMP$2076$2 = SZ$1;
  goto label$2333;
  label$2336:;
  {
   *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( DE$1 + MEM_LOC$2 )) << (3ll & 63ll))) = V$1;
  }
  label$2334:;
  MEM_LOC$2 = MEM_LOC$2 + 0x1.p+0;
  label$2333:;
  if( MEM_LOC$2 <= TMP$2076$2 ) goto label$2336;
  label$2335:;
 }
 label$2332:;
}

void _ZN8MEMORY_T7KMEMCPYEddd( struct $8MEMORY_T* THIS$1, double SU$1, double DE$1, double SZ$1 )
{
 label$2337:;
 SZ$1 = SZ$1 - (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 {
  double MEM_LOC$2;
  MEM_LOC$2 = (double)*(uint8*)NIBBLES$;
  double TMP$2077$2;
  TMP$2077$2 = SZ$1;
  goto label$2339;
  label$2342:;
  {
   *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( DE$1 + MEM_LOC$2 )) << (3ll & 63ll))) = *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( SU$1 + MEM_LOC$2 )) << (3ll & 63ll)));
  }
  label$2340:;
  MEM_LOC$2 = MEM_LOC$2 + 0x1.p+0;
  label$2339:;
  if( MEM_LOC$2 <= TMP$2077$2 ) goto label$2342;
  label$2341:;
 }
 label$2338:;
}

double _ZN8MEMORY_T4KMINEdd( struct $8MEMORY_T* THIS$1, double V1$1, double V2$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2343:;
 if( V1$1 >= V2$1 ) goto label$2346;
 {
  fb$result$1 = V1$1;
  goto label$2344;
  label$2346:;
 }
 fb$result$1 = V2$1;
 goto label$2344;
 label$2344:;
 return fb$result$1;
}

double _ZN8MEMORY_T10SCREENCODEEd( struct $8MEMORY_T* THIS$1, double CODE$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2347:;
 {
  FBSTRING TMP$2078$2;
  FBSTRING* vr$2 = fb_CHR( 1, ((int64)__builtin_nearbyint( CODE$1 )) );
  fb_StrInit( (void*)&TMP$2078$2, -1ll, (void*)vr$2, -1ll, 0 );
  int32 vr$5 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)" ", 2ll );
  if( (int64)vr$5 != 0ll ) goto label$2350;
  label$2351:;
  {
   fb$result$1 = 0x1.p+5;
  }
  goto label$2349;
  label$2350:;
  int32 vr$8 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"!", 2ll );
  if( (int64)vr$8 != 0ll ) goto label$2352;
  label$2353:;
  {
   fb$result$1 = 0x1.08p+5;
  }
  goto label$2349;
  label$2352:;
  int32 vr$11 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"\x16", 2ll );
  if( (int64)vr$11 != 0ll ) goto label$2354;
  label$2355:;
  {
   fb$result$1 = 0x1.1p+5;
  }
  goto label$2349;
  label$2354:;
  int32 vr$14 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"#", 2ll );
  if( (int64)vr$14 != 0ll ) goto label$2356;
  label$2357:;
  {
   fb$result$1 = 0x1.18p+5;
  }
  goto label$2349;
  label$2356:;
  int32 vr$17 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"$", 2ll );
  if( (int64)vr$17 != 0ll ) goto label$2358;
  label$2359:;
  {
   fb$result$1 = 0x1.2p+5;
  }
  goto label$2349;
  label$2358:;
  int32 vr$20 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"%", 2ll );
  if( (int64)vr$20 != 0ll ) goto label$2360;
  label$2361:;
  {
   fb$result$1 = 0x1.28p+5;
  }
  goto label$2349;
  label$2360:;
  int32 vr$23 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"&", 2ll );
  if( (int64)vr$23 != 0ll ) goto label$2362;
  label$2363:;
  {
   fb$result$1 = 0x1.3p+5;
  }
  goto label$2349;
  label$2362:;
  int32 vr$26 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"'", 2ll );
  if( (int64)vr$26 != 0ll ) goto label$2364;
  label$2365:;
  {
   fb$result$1 = 0x1.38p+5;
  }
  goto label$2349;
  label$2364:;
  int32 vr$29 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"(", 2ll );
  if( (int64)vr$29 != 0ll ) goto label$2366;
  label$2367:;
  {
   fb$result$1 = 0x1.4p+5;
  }
  goto label$2349;
  label$2366:;
  int32 vr$32 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)")", 2ll );
  if( (int64)vr$32 != 0ll ) goto label$2368;
  label$2369:;
  {
   fb$result$1 = 0x1.48p+5;
  }
  goto label$2349;
  label$2368:;
  int32 vr$35 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"*", 2ll );
  if( (int64)vr$35 != 0ll ) goto label$2370;
  label$2371:;
  {
   fb$result$1 = 0x1.5p+5;
  }
  goto label$2349;
  label$2370:;
  int32 vr$38 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"+", 2ll );
  if( (int64)vr$38 != 0ll ) goto label$2372;
  label$2373:;
  {
   fb$result$1 = 0x1.58p+5;
  }
  goto label$2349;
  label$2372:;
  int32 vr$41 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)",", 2ll );
  if( (int64)vr$41 != 0ll ) goto label$2374;
  label$2375:;
  {
   fb$result$1 = 0x1.6p+5;
  }
  goto label$2349;
  label$2374:;
  int32 vr$44 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"-", 2ll );
  if( (int64)vr$44 != 0ll ) goto label$2376;
  label$2377:;
  {
   fb$result$1 = 0x1.68p+5;
  }
  goto label$2349;
  label$2376:;
  int32 vr$47 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)".", 2ll );
  if( (int64)vr$47 != 0ll ) goto label$2378;
  label$2379:;
  {
   fb$result$1 = 0x1.7p+5;
  }
  goto label$2349;
  label$2378:;
  int32 vr$50 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"/", 2ll );
  if( (int64)vr$50 != 0ll ) goto label$2380;
  label$2381:;
  {
   fb$result$1 = 0x1.78p+5;
  }
  goto label$2349;
  label$2380:;
  int32 vr$53 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"0", 2ll );
  if( (int64)vr$53 != 0ll ) goto label$2382;
  label$2383:;
  {
   fb$result$1 = 0x1.8p+5;
  }
  goto label$2349;
  label$2382:;
  int32 vr$56 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"1", 2ll );
  if( (int64)vr$56 != 0ll ) goto label$2384;
  label$2385:;
  {
   fb$result$1 = 0x1.88p+5;
  }
  goto label$2349;
  label$2384:;
  int32 vr$59 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"2", 2ll );
  if( (int64)vr$59 != 0ll ) goto label$2386;
  label$2387:;
  {
   fb$result$1 = 0x1.9p+5;
  }
  goto label$2349;
  label$2386:;
  int32 vr$62 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"3", 2ll );
  if( (int64)vr$62 != 0ll ) goto label$2388;
  label$2389:;
  {
   fb$result$1 = 0x1.98p+5;
  }
  goto label$2349;
  label$2388:;
  int32 vr$65 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"4", 2ll );
  if( (int64)vr$65 != 0ll ) goto label$2390;
  label$2391:;
  {
   fb$result$1 = 0x1.Ap+5;
  }
  goto label$2349;
  label$2390:;
  int32 vr$68 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"5", 2ll );
  if( (int64)vr$68 != 0ll ) goto label$2392;
  label$2393:;
  {
   fb$result$1 = 0x1.A8p+5;
  }
  goto label$2349;
  label$2392:;
  int32 vr$71 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"6", 2ll );
  if( (int64)vr$71 != 0ll ) goto label$2394;
  label$2395:;
  {
   fb$result$1 = 0x1.Bp+5;
  }
  goto label$2349;
  label$2394:;
  int32 vr$74 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"7", 2ll );
  if( (int64)vr$74 != 0ll ) goto label$2396;
  label$2397:;
  {
   fb$result$1 = 0x1.B8p+5;
  }
  goto label$2349;
  label$2396:;
  int32 vr$77 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"8", 2ll );
  if( (int64)vr$77 != 0ll ) goto label$2398;
  label$2399:;
  {
   fb$result$1 = 0x1.Cp+5;
  }
  goto label$2349;
  label$2398:;
  int32 vr$80 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"9", 2ll );
  if( (int64)vr$80 != 0ll ) goto label$2400;
  label$2401:;
  {
   fb$result$1 = 0x1.C8p+5;
  }
  goto label$2349;
  label$2400:;
  int32 vr$83 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)":", 2ll );
  if( (int64)vr$83 != 0ll ) goto label$2402;
  label$2403:;
  {
   fb$result$1 = 0x1.Dp+5;
  }
  goto label$2349;
  label$2402:;
  int32 vr$86 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)";", 2ll );
  if( (int64)vr$86 != 0ll ) goto label$2404;
  label$2405:;
  {
   fb$result$1 = 0x1.D8p+5;
  }
  goto label$2349;
  label$2404:;
  int32 vr$89 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"<", 2ll );
  if( (int64)vr$89 != 0ll ) goto label$2406;
  label$2407:;
  {
   fb$result$1 = 0x1.Ep+5;
  }
  goto label$2349;
  label$2406:;
  int32 vr$92 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"=", 2ll );
  if( (int64)vr$92 != 0ll ) goto label$2408;
  label$2409:;
  {
   fb$result$1 = 0x1.E8p+5;
  }
  goto label$2349;
  label$2408:;
  int32 vr$95 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)">", 2ll );
  if( (int64)vr$95 != 0ll ) goto label$2410;
  label$2411:;
  {
   fb$result$1 = 0x1.Fp+5;
  }
  goto label$2349;
  label$2410:;
  int32 vr$98 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"?", 2ll );
  if( (int64)vr$98 != 0ll ) goto label$2412;
  label$2413:;
  {
   fb$result$1 = 0x1.F8p+5;
  }
  goto label$2349;
  label$2412:;
  int32 vr$101 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"@", 2ll );
  if( (int64)vr$101 != 0ll ) goto label$2414;
  label$2415:;
  {
   fb$result$1 = 0x0p+0;
  }
  goto label$2349;
  label$2414:;
  int32 vr$104 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"A", 2ll );
  if( (int64)vr$104 != 0ll ) goto label$2416;
  label$2417:;
  {
   fb$result$1 = 0x1.p+0;
  }
  goto label$2349;
  label$2416:;
  int32 vr$107 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"B", 2ll );
  if( (int64)vr$107 != 0ll ) goto label$2418;
  label$2419:;
  {
   fb$result$1 = 0x1.p+1;
  }
  goto label$2349;
  label$2418:;
  int32 vr$110 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"C", 2ll );
  if( (int64)vr$110 != 0ll ) goto label$2420;
  label$2421:;
  {
   fb$result$1 = 0x1.8p+1;
  }
  goto label$2349;
  label$2420:;
  int32 vr$113 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"D", 2ll );
  if( (int64)vr$113 != 0ll ) goto label$2422;
  label$2423:;
  {
   fb$result$1 = 0x1.p+2;
  }
  goto label$2349;
  label$2422:;
  int32 vr$116 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"E", 2ll );
  if( (int64)vr$116 != 0ll ) goto label$2424;
  label$2425:;
  {
   fb$result$1 = 0x1.4p+2;
  }
  goto label$2349;
  label$2424:;
  int32 vr$119 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"F", 2ll );
  if( (int64)vr$119 != 0ll ) goto label$2426;
  label$2427:;
  {
   fb$result$1 = 0x1.8p+2;
  }
  goto label$2349;
  label$2426:;
  int32 vr$122 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"G", 2ll );
  if( (int64)vr$122 != 0ll ) goto label$2428;
  label$2429:;
  {
   fb$result$1 = 0x1.Cp+2;
  }
  goto label$2349;
  label$2428:;
  int32 vr$125 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"H", 2ll );
  if( (int64)vr$125 != 0ll ) goto label$2430;
  label$2431:;
  {
   fb$result$1 = 0x1.p+3;
  }
  goto label$2349;
  label$2430:;
  int32 vr$128 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"I", 2ll );
  if( (int64)vr$128 != 0ll ) goto label$2432;
  label$2433:;
  {
   fb$result$1 = 0x1.2p+3;
  }
  goto label$2349;
  label$2432:;
  int32 vr$131 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"J", 2ll );
  if( (int64)vr$131 != 0ll ) goto label$2434;
  label$2435:;
  {
   fb$result$1 = 0x1.4p+3;
  }
  goto label$2349;
  label$2434:;
  int32 vr$134 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"K", 2ll );
  if( (int64)vr$134 != 0ll ) goto label$2436;
  label$2437:;
  {
   fb$result$1 = 0x1.6p+3;
  }
  goto label$2349;
  label$2436:;
  int32 vr$137 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"L", 2ll );
  if( (int64)vr$137 != 0ll ) goto label$2438;
  label$2439:;
  {
   fb$result$1 = 0x1.8p+3;
  }
  goto label$2349;
  label$2438:;
  int32 vr$140 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"M", 2ll );
  if( (int64)vr$140 != 0ll ) goto label$2440;
  label$2441:;
  {
   fb$result$1 = 0x1.Ap+3;
  }
  goto label$2349;
  label$2440:;
  int32 vr$143 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"N", 2ll );
  if( (int64)vr$143 != 0ll ) goto label$2442;
  label$2443:;
  {
   fb$result$1 = 0x1.Cp+3;
  }
  goto label$2349;
  label$2442:;
  int32 vr$146 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"O", 2ll );
  if( (int64)vr$146 != 0ll ) goto label$2444;
  label$2445:;
  {
   fb$result$1 = 0x1.Ep+3;
  }
  goto label$2349;
  label$2444:;
  int32 vr$149 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"P", 2ll );
  if( (int64)vr$149 != 0ll ) goto label$2446;
  label$2447:;
  {
   fb$result$1 = 0x1.p+4;
  }
  goto label$2349;
  label$2446:;
  int32 vr$152 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"Q", 2ll );
  if( (int64)vr$152 != 0ll ) goto label$2448;
  label$2449:;
  {
   fb$result$1 = 0x1.1p+4;
  }
  goto label$2349;
  label$2448:;
  int32 vr$155 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"R", 2ll );
  if( (int64)vr$155 != 0ll ) goto label$2450;
  label$2451:;
  {
   fb$result$1 = 0x1.2p+4;
  }
  goto label$2349;
  label$2450:;
  int32 vr$158 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"S", 2ll );
  if( (int64)vr$158 != 0ll ) goto label$2452;
  label$2453:;
  {
   fb$result$1 = 0x1.3p+4;
  }
  goto label$2349;
  label$2452:;
  int32 vr$161 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"T", 2ll );
  if( (int64)vr$161 != 0ll ) goto label$2454;
  label$2455:;
  {
   fb$result$1 = 0x1.4p+4;
  }
  goto label$2349;
  label$2454:;
  int32 vr$164 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"U", 2ll );
  if( (int64)vr$164 != 0ll ) goto label$2456;
  label$2457:;
  {
   fb$result$1 = 0x1.5p+4;
  }
  goto label$2349;
  label$2456:;
  int32 vr$167 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"V", 2ll );
  if( (int64)vr$167 != 0ll ) goto label$2458;
  label$2459:;
  {
   fb$result$1 = 0x1.6p+4;
  }
  goto label$2349;
  label$2458:;
  int32 vr$170 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"W", 2ll );
  if( (int64)vr$170 != 0ll ) goto label$2460;
  label$2461:;
  {
   fb$result$1 = 0x1.7p+4;
  }
  goto label$2349;
  label$2460:;
  int32 vr$173 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"X", 2ll );
  if( (int64)vr$173 != 0ll ) goto label$2462;
  label$2463:;
  {
   fb$result$1 = 0x1.8p+4;
  }
  goto label$2349;
  label$2462:;
  int32 vr$176 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"Y", 2ll );
  if( (int64)vr$176 != 0ll ) goto label$2464;
  label$2465:;
  {
   fb$result$1 = 0x1.9p+4;
  }
  goto label$2349;
  label$2464:;
  int32 vr$179 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"Z", 2ll );
  if( (int64)vr$179 != 0ll ) goto label$2466;
  label$2467:;
  {
   fb$result$1 = 0x1.Ap+4;
  }
  goto label$2349;
  label$2466:;
  int32 vr$182 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"[", 2ll );
  if( (int64)vr$182 != 0ll ) goto label$2468;
  label$2469:;
  {
   fb$result$1 = 0x1.Bp+4;
  }
  goto label$2349;
  label$2468:;
  int32 vr$185 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"\x5C", 2ll );
  if( (int64)vr$185 != 0ll ) goto label$2470;
  label$2471:;
  {
   fb$result$1 = 0x1.Cp+4;
  }
  goto label$2349;
  label$2470:;
  int32 vr$188 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"]", 2ll );
  if( (int64)vr$188 != 0ll ) goto label$2472;
  label$2473:;
  {
   fb$result$1 = 0x1.Dp+4;
  }
  goto label$2349;
  label$2472:;
  int32 vr$191 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"^", 2ll );
  if( (int64)vr$191 != 0ll ) goto label$2474;
  label$2475:;
  {
   fb$result$1 = 0x1.Ep+4;
  }
  goto label$2349;
  label$2474:;
  int32 vr$194 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"_", 2ll );
  if( (int64)vr$194 != 0ll ) goto label$2476;
  label$2477:;
  {
   fb$result$1 = 0x1.Fp+4;
  }
  goto label$2349;
  label$2476:;
  int32 vr$197 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"`", 2ll );
  if( (int64)vr$197 != 0ll ) goto label$2478;
  label$2479:;
  {
   fb$result$1 = 0x1.p+7;
  }
  goto label$2349;
  label$2478:;
  int32 vr$200 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"a", 2ll );
  if( (int64)vr$200 != 0ll ) goto label$2480;
  label$2481:;
  {
   fb$result$1 = 0x1.02p+7;
  }
  goto label$2349;
  label$2480:;
  int32 vr$203 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"b", 2ll );
  if( (int64)vr$203 != 0ll ) goto label$2482;
  label$2483:;
  {
   fb$result$1 = 0x1.04p+7;
  }
  goto label$2349;
  label$2482:;
  int32 vr$206 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"c", 2ll );
  if( (int64)vr$206 != 0ll ) goto label$2484;
  label$2485:;
  {
   fb$result$1 = 0x1.06p+7;
  }
  goto label$2349;
  label$2484:;
  int32 vr$209 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"d", 2ll );
  if( (int64)vr$209 != 0ll ) goto label$2486;
  label$2487:;
  {
   fb$result$1 = 0x1.08p+7;
  }
  goto label$2349;
  label$2486:;
  int32 vr$212 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"e", 2ll );
  if( (int64)vr$212 != 0ll ) goto label$2488;
  label$2489:;
  {
   fb$result$1 = 0x1.0Ap+7;
  }
  goto label$2349;
  label$2488:;
  int32 vr$215 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"f", 2ll );
  if( (int64)vr$215 != 0ll ) goto label$2490;
  label$2491:;
  {
   fb$result$1 = 0x1.0Cp+7;
  }
  goto label$2349;
  label$2490:;
  int32 vr$218 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"g", 2ll );
  if( (int64)vr$218 != 0ll ) goto label$2492;
  label$2493:;
  {
   fb$result$1 = 0x1.0Ep+7;
  }
  goto label$2349;
  label$2492:;
  int32 vr$221 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"h", 2ll );
  if( (int64)vr$221 != 0ll ) goto label$2494;
  label$2495:;
  {
   fb$result$1 = 0x1.1p+7;
  }
  goto label$2349;
  label$2494:;
  int32 vr$224 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"i", 2ll );
  if( (int64)vr$224 != 0ll ) goto label$2496;
  label$2497:;
  {
   fb$result$1 = 0x1.12p+7;
  }
  goto label$2349;
  label$2496:;
  int32 vr$227 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"j", 2ll );
  if( (int64)vr$227 != 0ll ) goto label$2498;
  label$2499:;
  {
   fb$result$1 = 0x1.14p+7;
  }
  goto label$2349;
  label$2498:;
  int32 vr$230 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"k", 2ll );
  if( (int64)vr$230 != 0ll ) goto label$2500;
  label$2501:;
  {
   fb$result$1 = 0x1.16p+7;
  }
  goto label$2349;
  label$2500:;
  int32 vr$233 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"l", 2ll );
  if( (int64)vr$233 != 0ll ) goto label$2502;
  label$2503:;
  {
   fb$result$1 = 0x1.18p+7;
  }
  goto label$2349;
  label$2502:;
  int32 vr$236 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"m", 2ll );
  if( (int64)vr$236 != 0ll ) goto label$2504;
  label$2505:;
  {
   fb$result$1 = 0x1.1Ap+7;
  }
  goto label$2349;
  label$2504:;
  int32 vr$239 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"n", 2ll );
  if( (int64)vr$239 != 0ll ) goto label$2506;
  label$2507:;
  {
   fb$result$1 = 0x1.1Cp+7;
  }
  goto label$2349;
  label$2506:;
  int32 vr$242 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"o", 2ll );
  if( (int64)vr$242 != 0ll ) goto label$2508;
  label$2509:;
  {
   fb$result$1 = 0x1.1Ep+7;
  }
  goto label$2349;
  label$2508:;
  int32 vr$245 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"p", 2ll );
  if( (int64)vr$245 != 0ll ) goto label$2510;
  label$2511:;
  {
   fb$result$1 = 0x1.2p+7;
  }
  goto label$2349;
  label$2510:;
  int32 vr$248 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"q", 2ll );
  if( (int64)vr$248 != 0ll ) goto label$2512;
  label$2513:;
  {
   fb$result$1 = 0x1.22p+7;
  }
  goto label$2349;
  label$2512:;
  int32 vr$251 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"r", 2ll );
  if( (int64)vr$251 != 0ll ) goto label$2514;
  label$2515:;
  {
   fb$result$1 = 0x1.24p+7;
  }
  goto label$2349;
  label$2514:;
  int32 vr$254 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"s", 2ll );
  if( (int64)vr$254 != 0ll ) goto label$2516;
  label$2517:;
  {
   fb$result$1 = 0x1.26p+7;
  }
  goto label$2349;
  label$2516:;
  int32 vr$257 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"t", 2ll );
  if( (int64)vr$257 != 0ll ) goto label$2518;
  label$2519:;
  {
   fb$result$1 = 0x1.28p+7;
  }
  goto label$2349;
  label$2518:;
  int32 vr$260 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"u", 2ll );
  if( (int64)vr$260 != 0ll ) goto label$2520;
  label$2521:;
  {
   fb$result$1 = 0x1.2Ap+7;
  }
  goto label$2349;
  label$2520:;
  int32 vr$263 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"v", 2ll );
  if( (int64)vr$263 != 0ll ) goto label$2522;
  label$2523:;
  {
   fb$result$1 = 0x1.2Cp+7;
  }
  goto label$2349;
  label$2522:;
  int32 vr$266 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"w", 2ll );
  if( (int64)vr$266 != 0ll ) goto label$2524;
  label$2525:;
  {
   fb$result$1 = 0x1.2Ep+7;
  }
  goto label$2349;
  label$2524:;
  int32 vr$269 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"x", 2ll );
  if( (int64)vr$269 != 0ll ) goto label$2526;
  label$2527:;
  {
   fb$result$1 = 0x1.3p+7;
  }
  goto label$2349;
  label$2526:;
  int32 vr$272 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"y", 2ll );
  if( (int64)vr$272 != 0ll ) goto label$2528;
  label$2529:;
  {
   fb$result$1 = 0x1.32p+7;
  }
  goto label$2349;
  label$2528:;
  int32 vr$275 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"z", 2ll );
  if( (int64)vr$275 != 0ll ) goto label$2530;
  label$2531:;
  {
   fb$result$1 = 0x1.34p+7;
  }
  goto label$2349;
  label$2530:;
  int32 vr$278 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"{", 2ll );
  if( (int64)vr$278 != 0ll ) goto label$2532;
  label$2533:;
  {
   fb$result$1 = 0x1.36p+7;
  }
  goto label$2349;
  label$2532:;
  int32 vr$281 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"|", 2ll );
  if( (int64)vr$281 != 0ll ) goto label$2534;
  label$2535:;
  {
   fb$result$1 = 0x1.38p+7;
  }
  goto label$2349;
  label$2534:;
  int32 vr$284 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"}", 2ll );
  if( (int64)vr$284 != 0ll ) goto label$2536;
  label$2537:;
  {
   fb$result$1 = 0x1.3Ap+7;
  }
  goto label$2349;
  label$2536:;
  int32 vr$287 = fb_StrCompare( (void*)&TMP$2078$2, -1ll, (void*)"~", 2ll );
  if( (int64)vr$287 != 0ll ) goto label$2538;
  label$2539:;
  {
   fb$result$1 = 0x1.3Cp+7;
  }
  label$2538:;
  label$2349:;
  fb_StrDelete( (FBSTRING*)&TMP$2078$2 );
 }
 label$2348:;
 return fb$result$1;
}

double _ZN8MEMORY_T5PEEKBEd( struct $8MEMORY_T* THIS$1, double ADR$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2540:;
 fb$result$1 = *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( ADR$1 )) << (3ll & 63ll)));
 label$2541:;
 return fb$result$1;
}

double _ZN8MEMORY_T5PEEKWEd( struct $8MEMORY_T* THIS$1, double ADR$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2542:;
 double vr$1 = _ZN8MEMORY_T5PEEKBEd( THIS$1, ADR$1 );
 double vr$4 = _ZN8MEMORY_T5PEEKBEd( THIS$1, ADR$1 + 0x1.p+0 );
 fb$result$1 = (double)(((int64)__builtin_nearbyint( vr$1 )) | (((int64)__builtin_nearbyint( vr$4 )) << (8ll & 63ll)));
 label$2543:;
 return fb$result$1;
}

void _ZN8MEMORY_T5POKEBEdd( struct $8MEMORY_T* THIS$1, double ADR$1, double V$1 )
{
 label$2544:;
 *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( ADR$1 )) << (3ll & 63ll))) = V$1;
 {
  if( ADR$1 != 0x1.p+0 ) goto label$2547;
  label$2548:;
  {
   *(double*)((uint8*)THIS$1 + 394888ll) = V$1;
  }
  goto label$2546;
  label$2547:;
  if( ADR$1 != 0x1.p+1 ) goto label$2549;
  label$2550:;
  {
   *(double*)((uint8*)THIS$1 + 394896ll) = V$1;
  }
  goto label$2546;
  label$2549:;
  if( ADR$1 != 0x1.8p+1 ) goto label$2551;
  label$2552:;
  {
   *(double*)((uint8*)THIS$1 + 394904ll) = V$1;
  }
  goto label$2546;
  label$2551:;
  if( ADR$1 != 0x1.p+2 ) goto label$2553;
  label$2554:;
  {
   *(double*)((uint8*)THIS$1 + 394888ll) = *(double*)((uint8*)THIS$1 + 394896ll);
  }
  goto label$2546;
  label$2553:;
  if( ADR$1 != 0x1.4p+2 ) goto label$2555;
  label$2556:;
  {
   *(double*)((uint8*)THIS$1 + 394888ll) = *(double*)((uint8*)THIS$1 + 394904ll);
  }
  goto label$2546;
  label$2555:;
  if( ADR$1 != 0x1.8p+2 ) goto label$2557;
  label$2558:;
  {
   *(double*)((uint8*)THIS$1 + 394896ll) = *(double*)((uint8*)THIS$1 + 394888ll);
  }
  goto label$2546;
  label$2557:;
  if( ADR$1 != 0x1.Cp+2 ) goto label$2559;
  label$2560:;
  {
   *(double*)((uint8*)THIS$1 + 394896ll) = *(double*)((uint8*)THIS$1 + 394904ll);
  }
  goto label$2546;
  label$2559:;
  if( ADR$1 != 0x1.p+3 ) goto label$2561;
  label$2562:;
  {
   *(double*)((uint8*)THIS$1 + 394904ll) = *(double*)((uint8*)THIS$1 + 394888ll);
  }
  goto label$2546;
  label$2561:;
  if( ADR$1 != 0x1.2p+3 ) goto label$2563;
  label$2564:;
  {
   *(double*)((uint8*)THIS$1 + 394904ll) = *(double*)((uint8*)THIS$1 + 394896ll);
  }
  goto label$2546;
  label$2563:;
  if( ADR$1 != 0x1.4p+3 ) goto label$2565;
  label$2566:;
  {
   *(double*)((uint8*)THIS$1 + 395344ll) = *(double*)((uint8*)THIS$1 + 394888ll);
  }
  goto label$2546;
  label$2565:;
  if( ADR$1 != 0x1.6p+3 ) goto label$2567;
  label$2568:;
  {
   *(double*)((uint8*)THIS$1 + 395344ll) = *(double*)((uint8*)THIS$1 + 394896ll);
  }
  goto label$2546;
  label$2567:;
  if( ADR$1 != 0x1.8p+3 ) goto label$2569;
  label$2570:;
  {
   *(double*)((uint8*)THIS$1 + 395344ll) = *(double*)((uint8*)THIS$1 + 394904ll);
  }
  goto label$2546;
  label$2569:;
  if( ADR$1 != 0x1.Ap+3 ) goto label$2571;
  label$2572:;
  {
   *(double*)((uint8*)THIS$1 + 395400ll) = *(double*)((uint8*)THIS$1 + 394888ll);
  }
  goto label$2546;
  label$2571:;
  if( ADR$1 != 0x1.Cp+3 ) goto label$2573;
  label$2574:;
  {
   *(double*)((uint8*)THIS$1 + 395400ll) = *(double*)((uint8*)THIS$1 + 394896ll);
  }
  goto label$2546;
  label$2573:;
  if( ADR$1 != 0x1.Ep+3 ) goto label$2575;
  label$2576:;
  {
   *(double*)((uint8*)THIS$1 + 395400ll) = *(double*)((uint8*)THIS$1 + 394904ll);
  }
  goto label$2546;
  label$2575:;
  if( ADR$1 != 0x1.p+4 ) goto label$2577;
  label$2578:;
  {
   *(double*)((uint8*)THIS$1 + 395456ll) = *(double*)((uint8*)THIS$1 + 394888ll);
  }
  goto label$2546;
  label$2577:;
  if( ADR$1 != 0x1.1p+4 ) goto label$2579;
  label$2580:;
  {
   *(double*)((uint8*)THIS$1 + 395456ll) = *(double*)((uint8*)THIS$1 + 394896ll);
  }
  goto label$2546;
  label$2579:;
  if( ADR$1 != 0x1.2p+4 ) goto label$2581;
  label$2582:;
  {
   *(double*)((uint8*)THIS$1 + 395456ll) = *(double*)((uint8*)THIS$1 + 394904ll);
  }
  goto label$2546;
  label$2581:;
  if( ADR$1 != 0x1.3p+4 ) goto label$2583;
  label$2584:;
  {
   *(double*)((uint8*)THIS$1 + 395568ll) = *(double*)((uint8*)THIS$1 + 394888ll);
  }
  goto label$2546;
  label$2583:;
  if( ADR$1 != 0x1.4p+4 ) goto label$2585;
  label$2586:;
  {
   *(double*)((uint8*)THIS$1 + 395568ll) = *(double*)((uint8*)THIS$1 + 394896ll);
  }
  goto label$2546;
  label$2585:;
  if( ADR$1 != 0x1.5p+4 ) goto label$2587;
  label$2588:;
  {
   *(double*)((uint8*)THIS$1 + 395568ll) = *(double*)((uint8*)THIS$1 + 394904ll);
  }
  goto label$2546;
  label$2587:;
  if( ADR$1 != 0x1.6p+4 ) goto label$2589;
  label$2590:;
  {
   *(double*)((uint8*)THIS$1 + 393232ll) = *(double*)((uint8*)THIS$1 + 394888ll);
  }
  goto label$2546;
  label$2589:;
  if( ADR$1 != 0x1.7p+4 ) goto label$2591;
  label$2592:;
  {
   *(double*)((uint8*)THIS$1 + 393232ll) = *(double*)((uint8*)THIS$1 + 394888ll);
  }
  goto label$2546;
  label$2591:;
  if( ADR$1 != 0x1.8p+4 ) goto label$2593;
  label$2594:;
  {
   *(double*)((uint8*)THIS$1 + 393232ll) = *(double*)((uint8*)THIS$1 + 394888ll);
  }
  goto label$2546;
  label$2593:;
  if( ADR$1 != 0x1.9p+4 ) goto label$2595;
  label$2596:;
  {
   *(double*)((uint8*)THIS$1 + 393240ll) = *(double*)((uint8*)THIS$1 + 394888ll);
  }
  goto label$2546;
  label$2595:;
  if( ADR$1 != 0x1.Ap+4 ) goto label$2597;
  label$2598:;
  {
   *(double*)((uint8*)THIS$1 + 393240ll) = *(double*)((uint8*)THIS$1 + 394888ll);
  }
  goto label$2546;
  label$2597:;
  if( ADR$1 != 0x1.Bp+4 ) goto label$2599;
  label$2600:;
  {
   *(double*)((uint8*)THIS$1 + 393240ll) = *(double*)((uint8*)THIS$1 + 394888ll);
  }
  goto label$2546;
  label$2599:;
  if( ADR$1 != 0x1.Cp+4 ) goto label$2601;
  label$2602:;
  {
   *(double*)((uint8*)THIS$1 + 393248ll) = *(double*)((uint8*)THIS$1 + 394888ll);
  }
  goto label$2546;
  label$2601:;
  if( ADR$1 != 0x1.Dp+4 ) goto label$2603;
  label$2604:;
  {
   *(double*)((uint8*)THIS$1 + 393248ll) = *(double*)((uint8*)THIS$1 + 394888ll);
  }
  goto label$2546;
  label$2603:;
  if( ADR$1 != 0x1.Ep+4 ) goto label$2605;
  label$2606:;
  {
   *(double*)((uint8*)THIS$1 + 393248ll) = *(double*)((uint8*)THIS$1 + 394888ll);
  }
  goto label$2546;
  label$2605:;
  if( ADR$1 != 0x1.Fp+4 ) goto label$2607;
  label$2608:;
  {
   *(double*)((uint8*)THIS$1 + 393256ll) = *(double*)((uint8*)THIS$1 + 394888ll);
  }
  goto label$2546;
  label$2607:;
  if( ADR$1 != 0x1.p+5 ) goto label$2609;
  label$2610:;
  {
   *(double*)((uint8*)THIS$1 + 393256ll) = *(double*)((uint8*)THIS$1 + 394888ll);
  }
  goto label$2546;
  label$2609:;
  if( ADR$1 != 0x1.08p+5 ) goto label$2611;
  label$2612:;
  {
   *(double*)((uint8*)THIS$1 + 393256ll) = *(double*)((uint8*)THIS$1 + 394888ll);
  }
  goto label$2546;
  label$2611:;
  if( ADR$1 != 0x1.1p+5 ) goto label$2613;
  label$2614:;
  {
   *(double*)((uint8*)THIS$1 + 394840ll) = *(double*)((uint8*)THIS$1 + 394888ll);
  }
  goto label$2546;
  label$2613:;
  if( ADR$1 != 0x1.18p+5 ) goto label$2615;
  label$2616:;
  {
   *(double*)((uint8*)THIS$1 + 394864ll) = *(double*)((uint8*)THIS$1 + 394888ll);
  }
  goto label$2546;
  label$2615:;
  if( ADR$1 != 0x1.2p+5 ) goto label$2617;
  label$2618:;
  {
   *(double*)((uint8*)THIS$1 + 394848ll) = *(double*)((uint8*)THIS$1 + 394888ll);
  }
  goto label$2546;
  label$2617:;
  if( ADR$1 != 0x1.28p+5 ) goto label$2619;
  label$2620:;
  {
   *(double*)((uint8*)THIS$1 + 394872ll) = *(double*)((uint8*)THIS$1 + 394888ll);
  }
  goto label$2546;
  label$2619:;
  if( ADR$1 != 0x1.3p+5 ) goto label$2621;
  label$2622:;
  {
   *(double*)((uint8*)THIS$1 + 394856ll) = *(double*)((uint8*)THIS$1 + 394888ll);
  }
  goto label$2546;
  label$2621:;
  if( ADR$1 != 0x1.38p+5 ) goto label$2623;
  label$2624:;
  {
   *(double*)((uint8*)THIS$1 + 394880ll) = *(double*)((uint8*)THIS$1 + 394888ll);
  }
  goto label$2546;
  label$2623:;
  if( ADR$1 != 0x1.4p+5 ) goto label$2625;
  label$2626:;
  {
   *(double*)((uint8*)THIS$1 + 394824ll) = *(double*)((uint8*)THIS$1 + 394888ll);
  }
  goto label$2546;
  label$2625:;
  if( ADR$1 != 0x1.48p+5 ) goto label$2627;
  label$2628:;
  {
   *(double*)((uint8*)THIS$1 + 394832ll) = *(double*)((uint8*)THIS$1 + 394888ll);
  }
  goto label$2546;
  label$2627:;
  if( ADR$1 != 0x1.5p+5 ) goto label$2629;
  label$2630:;
  {
   CHAR_H$ = *(double*)((uint8*)THIS$1 + 394888ll);
  }
  goto label$2546;
  label$2629:;
  if( ADR$1 != 0x1.58p+5 ) goto label$2631;
  label$2632:;
  {
   CHAR_W$ = *(double*)((uint8*)THIS$1 + 394888ll);
  }
  goto label$2546;
  label$2631:;
  if( ADR$1 != 0x1.6p+5 ) goto label$2633;
  label$2634:;
  {
   CHAR_PTR$ = *(double*)((uint8*)THIS$1 + 394888ll);
  }
  goto label$2546;
  label$2633:;
  if( ADR$1 != 0x1.68p+5 ) goto label$2635;
  label$2636:;
  {
   CHAR_BUFFER$ = *(double*)((uint8*)THIS$1 + 394888ll);
  }
  goto label$2546;
  label$2635:;
  if( ADR$1 != 0x1.7p+5 ) goto label$2637;
  label$2638:;
  {
   BITMASK$ = *(double*)((uint8*)THIS$1 + 394888ll);
  }
  goto label$2546;
  label$2637:;
  if( ADR$1 != 0x1.78p+5 ) goto label$2639;
  label$2640:;
  {
   PIXEL_SIZE$ = *(double*)((uint8*)THIS$1 + 394888ll);
  }
  goto label$2546;
  label$2639:;
  if( ADR$1 != 0x1.8p+5 ) goto label$2641;
  label$2642:;
  {
   RADIUS$ = *(double*)((uint8*)THIS$1 + 394888ll);
  }
  goto label$2546;
  label$2641:;
  if( ADR$1 != 0x1.88p+5 ) goto label$2643;
  label$2644:;
  {
   STRING_ADR$ = *(double*)((uint8*)THIS$1 + 394888ll);
  }
  goto label$2546;
  label$2643:;
  if( ADR$1 != 0x1.9p+5 ) goto label$2645;
  label$2646:;
  {
   STRING_LEN$ = *(double*)((uint8*)THIS$1 + 394888ll);
  }
  goto label$2546;
  label$2645:;
  if( ADR$1 != 0x1.98p+5 ) goto label$2647;
  label$2648:;
  {
   *(double*)((uint8*)THIS$1 + 394888ll) = *(double*)((uint8*)THIS$1 + 394840ll);
  }
  goto label$2546;
  label$2647:;
  if( ADR$1 != 0x1.Ap+5 ) goto label$2649;
  label$2650:;
  {
   *(double*)((uint8*)THIS$1 + 394840ll) = *(double*)((uint8*)THIS$1 + 394888ll);
  }
  goto label$2546;
  label$2649:;
  if( ADR$1 != 0x1.A8p+5 ) goto label$2651;
  label$2652:;
  {
   *(double*)((uint8*)THIS$1 + 394888ll) = *(double*)((uint8*)THIS$1 + 394848ll);
  }
  goto label$2546;
  label$2651:;
  if( ADR$1 != 0x1.Bp+5 ) goto label$2653;
  label$2654:;
  {
   *(double*)((uint8*)THIS$1 + 394848ll) = *(double*)((uint8*)THIS$1 + 394888ll);
  }
  goto label$2546;
  label$2653:;
  if( ADR$1 != 0x1.B8p+5 ) goto label$2655;
  label$2656:;
  {
   *(double*)((uint8*)THIS$1 + 394888ll) = *(double*)((uint8*)THIS$1 + 394856ll);
  }
  goto label$2546;
  label$2655:;
  if( ADR$1 != 0x1.Cp+5 ) goto label$2657;
  label$2658:;
  {
   *(double*)((uint8*)THIS$1 + 394888ll) = *(double*)((uint8*)THIS$1 + 394864ll);
  }
  goto label$2546;
  label$2657:;
  if( ADR$1 != 0x1.C8p+5 ) goto label$2659;
  label$2660:;
  {
   *(double*)((uint8*)THIS$1 + 394888ll) = *(double*)((uint8*)THIS$1 + 394872ll);
  }
  goto label$2546;
  label$2659:;
  if( ADR$1 != 0x1.Dp+5 ) goto label$2661;
  label$2662:;
  {
   *(double*)((uint8*)THIS$1 + 394888ll) = *(double*)((uint8*)THIS$1 + 394880ll);
  }
  goto label$2546;
  label$2661:;
  if( ADR$1 != 0x1.D8p+5 ) goto label$2663;
  label$2664:;
  {
   *(double*)((uint8*)THIS$1 + 394880ll) = *(double*)((uint8*)THIS$1 + 394888ll);
  }
  goto label$2546;
  label$2663:;
  if( ADR$1 != 0x1.Ep+5 ) goto label$2665;
  label$2666:;
  {
   *(double*)((uint8*)THIS$1 + 394888ll) = *(double*)((uint8*)THIS$1 + 394872ll);
  }
  goto label$2546;
  label$2665:;
  if( ADR$1 != 0x1.E8p+5 ) goto label$2667;
  label$2668:;
  {
   *(double*)((uint8*)THIS$1 + 394888ll) = *(double*)((uint8*)THIS$1 + 394880ll);
  }
  goto label$2546;
  label$2667:;
  if( ADR$1 != 0x1.Fp+5 ) goto label$2669;
  label$2670:;
  {
   *(double*)((uint8*)THIS$1 + 394888ll) = A1$;
  }
  goto label$2546;
  label$2669:;
  if( ADR$1 != 0x1.F8p+5 ) goto label$2671;
  label$2672:;
  {
   *(double*)((uint8*)THIS$1 + 394888ll) = A2$;
  }
  goto label$2546;
  label$2671:;
  if( ADR$1 != 0x1.p+6 ) goto label$2673;
  label$2674:;
  {
   *(double*)((uint8*)THIS$1 + 394888ll) = A3$;
  }
  goto label$2546;
  label$2673:;
  if( ADR$1 != 0x1.04p+6 ) goto label$2675;
  label$2676:;
  {
   *(double*)((uint8*)THIS$1 + 394888ll) = A4$;
  }
  goto label$2546;
  label$2675:;
  if( ADR$1 != 0x1.08p+6 ) goto label$2677;
  label$2678:;
  {
   *(double*)((uint8*)THIS$1 + 394888ll) = A5$;
  }
  goto label$2546;
  label$2677:;
  if( ADR$1 != 0x1.0Cp+6 ) goto label$2679;
  label$2680:;
  {
   *(double*)((uint8*)THIS$1 + 394888ll) = A6$;
  }
  goto label$2546;
  label$2679:;
  if( ADR$1 != 0x1.1p+6 ) goto label$2681;
  label$2682:;
  {
   *(double*)((uint8*)THIS$1 + 394888ll) = A7$;
  }
  goto label$2546;
  label$2681:;
  if( ADR$1 != 0x1.14p+6 ) goto label$2683;
  label$2684:;
  {
   *(double*)((uint8*)THIS$1 + 394888ll) = A8$;
  }
  goto label$2546;
  label$2683:;
  if( ADR$1 != 0x1.18p+6 ) goto label$2685;
  label$2686:;
  {
   *(double*)((uint8*)THIS$1 + 394888ll) = *(double*)((uint8*)THIS$1 + 394880ll);
  }
  goto label$2546;
  label$2685:;
  if( ADR$1 != 0x1.1Cp+6 ) goto label$2687;
  label$2688:;
  {
   *(double*)((uint8*)THIS$1 + 394888ll) = *(double*)((uint8*)THIS$1 + 394896ll) + *(double*)((uint8*)THIS$1 + 394904ll);
  }
  goto label$2546;
  label$2687:;
  if( ADR$1 != 0x1.2p+6 ) goto label$2689;
  label$2690:;
  {
   *(double*)((uint8*)THIS$1 + 394888ll) = *(double*)((uint8*)THIS$1 + 394896ll) - *(double*)((uint8*)THIS$1 + 394904ll);
  }
  goto label$2546;
  label$2689:;
  if( ADR$1 != 0x1.24p+6 ) goto label$2691;
  label$2692:;
  {
   *(double*)((uint8*)THIS$1 + 394888ll) = *(double*)((uint8*)THIS$1 + 394896ll) * *(double*)((uint8*)THIS$1 + 394904ll);
  }
  goto label$2546;
  label$2691:;
  if( ADR$1 != 0x1.28p+6 ) goto label$2693;
  label$2694:;
  {
   *(double*)((uint8*)THIS$1 + 394888ll) = *(double*)((uint8*)THIS$1 + 394896ll) / *(double*)((uint8*)THIS$1 + 394904ll);
  }
  goto label$2546;
  label$2693:;
  if( ADR$1 != 0x1.2Cp+6 ) goto label$2695;
  label$2696:;
  {
   *(double*)((uint8*)THIS$1 + 394888ll) = (double)(((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394896ll) )) / ((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394904ll) )));
  }
  goto label$2546;
  label$2695:;
  if( ADR$1 != 0x1.3p+6 ) goto label$2697;
  label$2698:;
  {
   double vr$148 = pow( *(double*)((uint8*)THIS$1 + 394896ll), *(double*)((uint8*)THIS$1 + 394904ll) );
   *(double*)((uint8*)THIS$1 + 394888ll) = vr$148;
  }
  goto label$2546;
  label$2697:;
  if( ADR$1 != 0x1.34p+6 ) goto label$2699;
  label$2700:;
  {
   double vr$152 = _Z6MODULOdd( *(double*)((uint8*)THIS$1 + 394896ll), *(double*)((uint8*)THIS$1 + 394904ll) );
   *(double*)((uint8*)THIS$1 + 394888ll) = vr$152;
  }
  goto label$2546;
  label$2699:;
  if( ADR$1 != 0x1.38p+6 ) goto label$2701;
  label$2702:;
  {
   *(double*)((uint8*)THIS$1 + 394888ll) = -(*(double*)((uint8*)THIS$1 + 394888ll));
  }
  goto label$2546;
  label$2701:;
  if( ADR$1 != 0x1.3Cp+6 ) goto label$2703;
  label$2704:;
  {
   *(double*)((uint8*)THIS$1 + 394888ll) = (double)(((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394896ll) )) << (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394904ll) )) & 63ll));
  }
  goto label$2546;
  label$2703:;
  if( ADR$1 != 0x1.4p+6 ) goto label$2705;
  label$2706:;
  {
   *(double*)((uint8*)THIS$1 + 394888ll) = (double)(((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394896ll) )) >> (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394904ll) )) & 63ll));
  }
  goto label$2546;
  label$2705:;
  if( ADR$1 != 0x1.44p+6 ) goto label$2707;
  label$2708:;
  {
   *(double*)((uint8*)THIS$1 + 394888ll) = (double)(int64)-(*(double*)((uint8*)THIS$1 + 394896ll) == *(double*)((uint8*)THIS$1 + 394904ll));
  }
  goto label$2546;
  label$2707:;
  if( ADR$1 != 0x1.48p+6 ) goto label$2709;
  label$2710:;
  {
   *(double*)((uint8*)THIS$1 + 394888ll) = (double)(int64)-(*(double*)((uint8*)THIS$1 + 394896ll) != *(double*)((uint8*)THIS$1 + 394904ll));
  }
  goto label$2546;
  label$2709:;
  if( ADR$1 != 0x1.4Cp+6 ) goto label$2711;
  label$2712:;
  {
   *(double*)((uint8*)THIS$1 + 394888ll) = (double)(int64)-(*(double*)((uint8*)THIS$1 + 394896ll) < *(double*)((uint8*)THIS$1 + 394904ll));
  }
  goto label$2546;
  label$2711:;
  if( ADR$1 != 0x1.5p+6 ) goto label$2713;
  label$2714:;
  {
   *(double*)((uint8*)THIS$1 + 394888ll) = (double)(int64)-(*(double*)((uint8*)THIS$1 + 394896ll) <= *(double*)((uint8*)THIS$1 + 394904ll));
  }
  goto label$2546;
  label$2713:;
  if( ADR$1 != 0x1.54p+6 ) goto label$2715;
  label$2716:;
  {
   *(double*)((uint8*)THIS$1 + 394888ll) = (double)(int64)-(*(double*)((uint8*)THIS$1 + 394896ll) >= *(double*)((uint8*)THIS$1 + 394904ll));
  }
  goto label$2546;
  label$2715:;
  if( ADR$1 != 0x1.58p+6 ) goto label$2717;
  label$2718:;
  {
   *(double*)((uint8*)THIS$1 + 394888ll) = (double)(int64)-(*(double*)((uint8*)THIS$1 + 394896ll) > *(double*)((uint8*)THIS$1 + 394904ll));
  }
  goto label$2546;
  label$2717:;
  if( ADR$1 != 0x1.5Cp+6 ) goto label$2719;
  label$2720:;
  {
   *(double*)((uint8*)THIS$1 + 394888ll) = (double)(((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394896ll) )) & ((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394904ll) )));
  }
  goto label$2546;
  label$2719:;
  if( ADR$1 != 0x1.6p+6 ) goto label$2721;
  label$2722:;
  {
   *(double*)((uint8*)THIS$1 + 394888ll) = (double)~(((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394896ll) )) ^ ((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394904ll) )));
  }
  goto label$2546;
  label$2721:;
  if( ADR$1 != 0x1.64p+6 ) goto label$2723;
  label$2724:;
  {
   *(double*)((uint8*)THIS$1 + 394888ll) = (double)(~((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394896ll) )) | ((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394904ll) )));
  }
  goto label$2546;
  label$2723:;
  if( ADR$1 != 0x1.68p+6 ) goto label$2725;
  label$2726:;
  {
   *(double*)((uint8*)THIS$1 + 394888ll) = (double)(((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394896ll) )) | ((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394904ll) )));
  }
  goto label$2546;
  label$2725:;
  if( ADR$1 != 0x1.6Cp+6 ) goto label$2727;
  label$2728:;
  {
   *(double*)((uint8*)THIS$1 + 394888ll) = (double)(((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394896ll) )) ^ ((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394904ll) )));
  }
  goto label$2546;
  label$2727:;
  if( ADR$1 != 0x1.7p+6 ) goto label$2729;
  label$2730:;
  {
   *(double*)((uint8*)THIS$1 + 394896ll) = *(double*)((uint8*)THIS$1 + 394888ll);
  }
  goto label$2546;
  label$2729:;
  if( ADR$1 != 0x1.74p+6 ) goto label$2731;
  label$2732:;
  {
   *(double*)((uint8*)THIS$1 + 394904ll) = *(double*)((uint8*)THIS$1 + 394888ll);
  }
  goto label$2546;
  label$2731:;
  if( ADR$1 != 0x1.78p+6 ) goto label$2733;
  label$2734:;
  {
   *(double*)((uint8*)THIS$1 + 394888ll) = *(double*)((uint8*)THIS$1 + 394888ll) + 0x1.p+0;
  }
  goto label$2546;
  label$2733:;
  if( ADR$1 != 0x1.7Cp+6 ) goto label$2735;
  label$2736:;
  {
   *(double*)((uint8*)THIS$1 + 394896ll) = *(double*)((uint8*)THIS$1 + 394896ll) + 0x1.p+0;
  }
  goto label$2546;
  label$2735:;
  if( ADR$1 != 0x1.8p+6 ) goto label$2737;
  label$2738:;
  {
   *(double*)((uint8*)THIS$1 + 394904ll) = *(double*)((uint8*)THIS$1 + 394904ll) + 0x1.p+0;
  }
  goto label$2546;
  label$2737:;
  if( ADR$1 != 0x1.84p+6 ) goto label$2739;
  label$2740:;
  {
   *(double*)((uint8*)THIS$1 + 394888ll) = *(double*)((uint8*)THIS$1 + 394888ll) + -0x1.p+0;
  }
  goto label$2546;
  label$2739:;
  if( ADR$1 != 0x1.88p+6 ) goto label$2741;
  label$2742:;
  {
   *(double*)((uint8*)THIS$1 + 394896ll) = *(double*)((uint8*)THIS$1 + 394896ll) + -0x1.p+0;
  }
  goto label$2546;
  label$2741:;
  if( ADR$1 != 0x1.8Cp+6 ) goto label$2743;
  label$2744:;
  {
   *(double*)((uint8*)THIS$1 + 394904ll) = *(double*)((uint8*)THIS$1 + 394904ll) + -0x1.p+0;
  }
  goto label$2546;
  label$2743:;
  if( ADR$1 != 0x1.9p+6 ) goto label$2745;
  label$2746:;
  {
   if( *(double*)((uint8*)THIS$1 + 394896ll) != *(double*)((uint8*)THIS$1 + 394904ll) ) goto label$2748;
   {
    *(double*)((uint8*)THIS$1 + 395344ll) = V$1;
    label$2748:;
   }
  }
  goto label$2546;
  label$2745:;
  if( ADR$1 != 0x1.94p+6 ) goto label$2749;
  label$2750:;
  {
   if( *(double*)((uint8*)THIS$1 + 394896ll) == *(double*)((uint8*)THIS$1 + 394904ll) ) goto label$2752;
   {
    *(double*)((uint8*)THIS$1 + 395344ll) = V$1;
    label$2752:;
   }
  }
  goto label$2546;
  label$2749:;
  if( ADR$1 != 0x1.98p+6 ) goto label$2753;
  label$2754:;
  {
   if( *(double*)((uint8*)THIS$1 + 394896ll) <= *(double*)((uint8*)THIS$1 + 394904ll) ) goto label$2756;
   {
    *(double*)((uint8*)THIS$1 + 395344ll) = V$1;
    label$2756:;
   }
  }
  goto label$2546;
  label$2753:;
  if( ADR$1 != 0x1.9Cp+6 ) goto label$2757;
  label$2758:;
  {
   if( *(double*)((uint8*)THIS$1 + 394896ll) < *(double*)((uint8*)THIS$1 + 394904ll) ) goto label$2760;
   {
    *(double*)((uint8*)THIS$1 + 395344ll) = V$1;
    label$2760:;
   }
  }
  goto label$2546;
  label$2757:;
  if( ADR$1 != 0x1.Ap+6 ) goto label$2761;
  label$2762:;
  {
   if( *(double*)((uint8*)THIS$1 + 394896ll) > *(double*)((uint8*)THIS$1 + 394904ll) ) goto label$2764;
   {
    *(double*)((uint8*)THIS$1 + 395344ll) = V$1;
    label$2764:;
   }
  }
  goto label$2546;
  label$2761:;
  if( ADR$1 != 0x1.A4p+6 ) goto label$2765;
  label$2766:;
  {
   if( *(double*)((uint8*)THIS$1 + 394896ll) >= *(double*)((uint8*)THIS$1 + 394904ll) ) goto label$2768;
   {
    *(double*)((uint8*)THIS$1 + 395344ll) = V$1;
    label$2768:;
   }
  }
  goto label$2546;
  label$2765:;
  if( ADR$1 != 0x1.A8p+6 ) goto label$2769;
  label$2770:;
  {
   *(double*)((uint8*)THIS$1 + 395344ll) = V$1;
  }
  goto label$2546;
  label$2769:;
  if( ADR$1 != 0x1.ACp+6 ) goto label$2771;
  label$2772:;
  {
   double vr$277 = _ZN8MEMORY_T5PEEKBEd( THIS$1, V$1 );
   *(double*)((uint8*)THIS$1 + 394888ll) = vr$277;
  }
  goto label$2546;
  label$2771:;
  if( ADR$1 != 0x1.Bp+6 ) goto label$2773;
  label$2774:;
  {
   _ZN8MEMORY_T5POKEBEdd( THIS$1, V$1, *(double*)((uint8*)THIS$1 + 394888ll) );
  }
  goto label$2546;
  label$2773:;
  if( ADR$1 != 0x1.B4p+6 ) goto label$2775;
  label$2776:;
  {
   uint64 TMP$3;
   __builtin_memset( &TMP$3, 0, 8ll );
   uint64 TIMES$3;
   __builtin_memset( &TIMES$3, 0, 8ll );
   *(double*)((uint8*)THIS$1 + 397040ll) = *(double*)((uint8*)THIS$1 + 395344ll);
   *(double*)((uint8*)THIS$1 + 395400ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.p+0 )) << (3ll & 63ll))) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.p+1 )) << (3ll & 63ll))) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.8p+1 )) << (3ll & 63ll))) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.p+2 )) << (3ll & 63ll))) )) << (8ll & 63ll))) + *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.4p+2 )) << (3ll & 63ll)));
   *(double*)((uint8*)THIS$1 + 395456ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.8p+2 )) << (3ll & 63ll))) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.Cp+2 )) << (3ll & 63ll))) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.p+3 )) << (3ll & 63ll))) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.2p+3 )) << (3ll & 63ll))) )) << (8ll & 63ll))) + *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.4p+3 )) << (3ll & 63ll)));
   *(double*)((uint8*)THIS$1 + 396968ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.6p+3 )) << (3ll & 63ll))) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.8p+3 )) << (3ll & 63ll))) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.Ap+3 )) << (3ll & 63ll))) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.Cp+3 )) << (3ll & 63ll))) )) << (8ll & 63ll))) + *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.Ep+3 )) << (3ll & 63ll)));
   label$2777:;
   if( (double)TMP$3 == *(double*)((uint8*)THIS$1 + 396968ll) ) goto label$2778;
   {
    {
     PC$ = *(double*)((uint8*)THIS$1 + 395400ll);
     double TMP$2170$5;
     TMP$2170$5 = *(double*)((uint8*)THIS$1 + 395456ll);
     goto label$2779;
     label$2782:;
     {
      _ZN8MEMORY_T5POKEBEdd( THIS$1, *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( PC$ )) << (3ll & 63ll))), 0x0p+0 );
     }
     label$2780:;
     PC$ = PC$ + 0x1.p+0;
     label$2779:;
     if( PC$ <= TMP$2170$5 ) goto label$2782;
     label$2781:;
    }
    double vr$412 = _Z6MODULOdd( (double)(TMP$3 + 1ull), *(double*)((uint8*)THIS$1 + 396968ll) );
    TMP$3 = ((uint64)__builtin_nearbyint( vr$412 ));
   }
   goto label$2777;
   label$2778:;
  }
  goto label$2546;
  label$2775:;
  if( ADR$1 != 0x1.B8p+6 ) goto label$2783;
  label$2784:;
  {
   fb_Cls( -65536 );
   FBSTRING TMP$3;
   __builtin_memset( &TMP$3, 0, 24ll );
   FBSTRING* vr$415 = fb_StrAllocTempDescZEx( (uint8*)"cobc -x -free tmp.cob", 21ll );
   fb_Shell( (FBSTRING*)vr$415 );
   FBSTRING* vr$416 = fb_StrAllocTempDescZEx( (uint8*)"./tmp > tmp.txt", 15ll );
   fb_Shell( (FBSTRING*)vr$416 );
   FBSTRING* vr$417 = fb_StrAllocTempDescZEx( (uint8*)"tmp.txt", 7ll );
   fb_FileOpen( (FBSTRING*)vr$417, 2u, 0u, 0u, 1, 0 );
   label$2785:;
   int32 vr$418 = fb_FileEof( 1 );
   if( (int64)vr$418 != 0ll ) goto label$2786;
   {
    fb_FileInput( 1 );
    fb_InputString( (void*)&TMP$3, -1ll, 0 );
    fb_PrintString( 0, (FBSTRING*)&TMP$3, 1 );
   }
   goto label$2785;
   label$2786:;
   fb_FileClose( 1 );
   FBSTRING* vr$422 = fb_StrAllocTempDescZEx( (uint8*)"press any key to contiune.", 26ll );
   fb_PrintString( 0, (FBSTRING*)vr$422, 1 );
   fb_Sleep( -1 );
   fb_StrDelete( (FBSTRING*)&TMP$3 );
  }
  goto label$2546;
  label$2783:;
  if( ADR$1 != 0x1.BCp+6 ) goto label$2787;
  label$2788:;
  {
   *(double*)((uint8*)THIS$1 + 395400ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.p+0 )) << (3ll & 63ll))) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.p+1 )) << (3ll & 63ll))) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.8p+1 )) << (3ll & 63ll))) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.p+2 )) << (3ll & 63ll))) )) << (8ll & 63ll))) + *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.4p+2 )) << (3ll & 63ll)));
   double vr$464 = _ZN8MEMORY_T5PEEKBEd( THIS$1, *(double*)((uint8*)THIS$1 + 395400ll) );
   *(double*)((uint8*)THIS$1 + 394912ll) = vr$464;
  }
  goto label$2546;
  label$2787:;
  if( ADR$1 != 0x1.Cp+6 ) goto label$2789;
  label$2790:;
  {
   *(double*)((uint8*)THIS$1 + 395400ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.p+0 )) << (3ll & 63ll))) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.p+1 )) << (3ll & 63ll))) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.8p+1 )) << (3ll & 63ll))) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.p+2 )) << (3ll & 63ll))) )) << (8ll & 63ll))) + *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.4p+2 )) << (3ll & 63ll)));
   *(double*)((uint8*)THIS$1 + 394912ll) = *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.8p+2 )) << (3ll & 63ll)));
   _ZN8MEMORY_T5POKEBEdd( THIS$1, *(double*)((uint8*)THIS$1 + 395400ll), *(double*)((uint8*)THIS$1 + 394912ll) );
  }
  goto label$2546;
  label$2789:;
  if( ADR$1 != 0x1.C4p+6 ) goto label$2791;
  label$2792:;
  {
   *(double*)((uint8*)THIS$1 + 395400ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.p+0 )) << (3ll & 63ll))) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.p+1 )) << (3ll & 63ll))) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.8p+1 )) << (3ll & 63ll))) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.p+2 )) << (3ll & 63ll))) )) << (8ll & 63ll))) + *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.4p+2 )) << (3ll & 63ll)));
   double vr$553 = _ZN8MEMORY_T5PEEKWEd( THIS$1, *(double*)((uint8*)THIS$1 + 395400ll) );
   *(double*)((uint8*)THIS$1 + 394912ll) = vr$553;
  }
  goto label$2546;
  label$2791:;
  if( ADR$1 != 0x1.C8p+6 ) goto label$2793;
  label$2794:;
  {
   *(double*)((uint8*)THIS$1 + 395400ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.p+0 )) << (3ll & 63ll))) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.p+1 )) << (3ll & 63ll))) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.8p+1 )) << (3ll & 63ll))) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.p+2 )) << (3ll & 63ll))) )) << (8ll & 63ll))) + *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.4p+2 )) << (3ll & 63ll)));
   *(double*)((uint8*)THIS$1 + 394912ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.8p+2 )) << (3ll & 63ll))) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.Cp+2 )) << (3ll & 63ll))) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.p+3 )) << (3ll & 63ll))) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.2p+3 )) << (3ll & 63ll))) )) << (8ll & 63ll))) + *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.4p+3 )) << (3ll & 63ll)));
   _ZN8MEMORY_T5POKEWEdd( THIS$1, *(double*)((uint8*)THIS$1 + 395400ll), *(double*)((uint8*)THIS$1 + 394912ll) );
  }
  goto label$2546;
  label$2793:;
  if( ADR$1 != 0x1.CCp+6 ) goto label$2795;
  label$2796:;
  {
   *(double*)((uint8*)THIS$1 + 395400ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.p+0 )) << (3ll & 63ll))) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.p+1 )) << (3ll & 63ll))) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.8p+1 )) << (3ll & 63ll))) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.p+2 )) << (3ll & 63ll))) )) << (8ll & 63ll))) + *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.4p+2 )) << (3ll & 63ll)));
   *(double*)((uint8*)THIS$1 + 395456ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.8p+2 )) << (3ll & 63ll))) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.Cp+2 )) << (3ll & 63ll))) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.p+3 )) << (3ll & 63ll))) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.2p+3 )) << (3ll & 63ll))) )) << (8ll & 63ll))) + *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.4p+3 )) << (3ll & 63ll)));
   double vr$714 = _ZN8MEMORY_T5PEEKBEd( THIS$1, *(double*)((uint8*)THIS$1 + 395456ll) );
   _ZN8MEMORY_T5POKEBEdd( THIS$1, *(double*)((uint8*)THIS$1 + 395400ll), vr$714 );
  }
  goto label$2546;
  label$2795:;
  if( ADR$1 != 0x1.Dp+6 ) goto label$2797;
  label$2798:;
  {
   *(double*)((uint8*)THIS$1 + 395400ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.p+0 )) << (3ll & 63ll))) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.p+1 )) << (3ll & 63ll))) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.8p+1 )) << (3ll & 63ll))) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.p+2 )) << (3ll & 63ll))) )) << (8ll & 63ll))) + *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.4p+2 )) << (3ll & 63ll)));
   *(double*)((uint8*)THIS$1 + 395456ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.8p+2 )) << (3ll & 63ll))) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.Cp+2 )) << (3ll & 63ll))) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.p+3 )) << (3ll & 63ll))) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.2p+3 )) << (3ll & 63ll))) )) << (8ll & 63ll))) + *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.4p+3 )) << (3ll & 63ll)));
   *(double*)((uint8*)THIS$1 + 395344ll) = *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.6p+3;
   double vr$798 = _ZN8MEMORY_T5PEEKWEd( THIS$1, *(double*)((uint8*)THIS$1 + 395456ll) );
   _ZN8MEMORY_T5POKEWEdd( THIS$1, *(double*)((uint8*)THIS$1 + 395400ll), vr$798 );
  }
  goto label$2546;
  label$2797:;
  if( ADR$1 != 0x1.D4p+6 ) goto label$2799;
  label$2800:;
  {
   *(double*)((uint8*)THIS$1 + 395400ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.p+0 )) << (3ll & 63ll))) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.p+1 )) << (3ll & 63ll))) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.8p+1 )) << (3ll & 63ll))) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.p+2 )) << (3ll & 63ll))) )) << (8ll & 63ll))) + *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.4p+2 )) << (3ll & 63ll)));
   FBSTRING* vr$840 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 394888ll) );
   fb_StrAssign( (void*)&STRING_DATA$, -1ll, (void*)vr$840, -1ll, 0 );
   {
    R3$ = 0x1.p+0;
    double TMP$2175$4;
    int64 vr$841 = fb_StrLen( (void*)&STRING_DATA$, -1ll );
    TMP$2175$4 = (double)vr$841;
    goto label$2801;
    label$2804:;
    {
     FBSTRING* vr$844 = fb_StrMid( (FBSTRING*)&STRING_DATA$, ((int64)__builtin_nearbyint( R3$ )), 1ll );
     uint32 vr$845 = fb_ASC( (FBSTRING*)vr$844, 1ll );
     double vr$847 = _ZN8MEMORY_T10SCREENCODEEd( THIS$1, (double)vr$845 );
     _ZN8MEMORY_T5POKEBEdd( THIS$1, ((CHAR_BUFFER$ + ADR0$) + R3$) + -0x1.p+0, vr$847 );
    }
    label$2802:;
    R3$ = R3$ + 0x1.p+0;
    label$2801:;
    if( R3$ <= TMP$2175$4 ) goto label$2804;
    label$2803:;
   }
  }
  goto label$2546;
  label$2799:;
  if( ADR$1 != 0x1.D8p+6 ) goto label$2805;
  label$2806:;
  {
   STRING_ADR$ = (double)((((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.p+0 )) << (3ll & 63ll))) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.p+1 )) << (3ll & 63ll))) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.8p+1 )) << (3ll & 63ll))) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.p+2 )) << (3ll & 63ll))) )) << (8ll & 63ll))) + *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.4p+2 )) << (3ll & 63ll)));
   STRING_LEN$ = (double)((((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.8p+2 )) << (3ll & 63ll))) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.Cp+2 )) << (3ll & 63ll))) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.p+3 )) << (3ll & 63ll))) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.2p+3 )) << (3ll & 63ll))) )) << (8ll & 63ll))) + *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.4p+3 )) << (3ll & 63ll)));
   *(double*)((uint8*)THIS$1 + 395400ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.6p+3 )) << (3ll & 63ll))) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.8p+3 )) << (3ll & 63ll))) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.Ap+3 )) << (3ll & 63ll))) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.Cp+3 )) << (3ll & 63ll))) )) << (8ll & 63ll))) + *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.Ep+3 )) << (3ll & 63ll)));
   *(double*)((uint8*)THIS$1 + 395344ll) = *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.p+4;
   {
    R3$ = 0x0p+0;
    double TMP$2176$4;
    TMP$2176$4 = STRING_LEN$;
    goto label$2807;
    label$2810:;
    {
     double vr$974 = _ZN8MEMORY_T10SCREENCODEEd( THIS$1, *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( STRING_ADR$ + R3$ )) << (3ll & 63ll))) );
     _ZN8MEMORY_T5POKEBEdd( THIS$1, (CHAR_BUFFER$ + *(double*)((uint8*)THIS$1 + 395400ll)) + R3$, vr$974 );
    }
    label$2808:;
    R3$ = R3$ + 0x1.p+0;
    label$2807:;
    if( R3$ <= TMP$2176$4 ) goto label$2810;
    label$2809:;
   }
  }
  goto label$2546;
  label$2805:;
  if( ADR$1 < 0x1.p+14 ) goto label$2811;
  if( ADR$1 > 0x1.F9Cp+14 ) goto label$2811;
  label$2812:;
  {
   ADR$1 = ADR$1 + -0x1.p+14;
   C$ = ((int64)__builtin_nearbyint( V$1 ));
   C$ = C$ << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) & 63ll);
   C$ = ((int64)__builtin_nearbyint( (double)C$ + *(double*)((uint8*)THIS$1 + 395072ll) ));
   int64 vr$988 = _Z6MODULOll( ((int64)__builtin_nearbyint( ADR$1 )), 90ll );
   XS$ = vr$988;
   XS$ = XS$ << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) & 63ll);
   XS$ = ((int64)__builtin_nearbyint( (double)XS$ + ((double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) * 0x1.Cp+1) ));
   YS$ = ((int64)__builtin_nearbyint( ADR$1 )) / 90ll;
   YS$ = YS$ << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) & 63ll);
   YS$ = ((int64)__builtin_nearbyint( (double)YS$ + ((double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) * 0x1.Cp+1) ));
   if( *(double*)((uint8*)THIS$1 + ((int64)RVS$ << (3ll & 63ll))) == (double)(int64)*(uint8*)NIBBLES$ ) goto label$2814;
   {
    C$ = C$ & (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll));
   }
   label$2814:;
   label$2813:;
   if( *(double*)((uint8*)THIS$1 + 394856ll) > (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$2816;
   {
    *(double*)((uint8*)THIS$1 + 394856ll) = (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
   }
   label$2816:;
   label$2815:;
   _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8204p+15, (double)*(uint8*)NIBBLES$ );
   *(double*)&Y$ = (double)*(uint8*)NIBBLES$;
   *(double*)&X$ = (double)*(uint8*)NIBBLES$;
   label$2817:;
   if( ((int64)-((double)Y$ == *(double*)((uint8*)THIS$1 + 395088ll)) & (int64)-((double)X$ == *(double*)((uint8*)THIS$1 + 395080ll))) != 0ll ) goto label$2818;
   {
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.p+1, (double)XS$ );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.8p+1, (double)X$ );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.1Cp+6, (double)*(uint8*)NIBBLES$ );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.8p+2, (double)*(uint8*)NIBBLES$ );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.8p+1, (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.24p+6, (double)*(uint8*)NIBBLES$ );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.8p+2, (double)*(uint8*)NIBBLES$ );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.8p+1, (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.2Cp+6, (double)*(uint8*)NIBBLES$ );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.8p+2, (double)*(uint8*)NIBBLES$ );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.8p+1, *(double*)((uint8*)THIS$1 + 395032ll) );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.1Cp+6, (double)*(uint8*)NIBBLES$ );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.1p+5, (double)*(uint8*)NIBBLES$ );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.p+1, (double)YS$ );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.8p+1, (double)Y$ );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.1Cp+6, (double)*(uint8*)NIBBLES$ );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.8p+2, (double)*(uint8*)NIBBLES$ );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.8p+1, 0x1.Cp+1 );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.24p+6, (double)*(uint8*)NIBBLES$ );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.8p+2, (double)*(uint8*)NIBBLES$ );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.8p+1, (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.2Cp+6, (double)*(uint8*)NIBBLES$ );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.8p+2, (double)*(uint8*)NIBBLES$ );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.8p+1, *(double*)((uint8*)THIS$1 + 395040ll) );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.1Cp+6, (double)*(uint8*)NIBBLES$ );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.2p+5, (double)*(uint8*)NIBBLES$ );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.p+1, (double)XS$ );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.8p+1, (double)X$ );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.1Cp+6, (double)*(uint8*)NIBBLES$ );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.8p+2, (double)*(uint8*)NIBBLES$ );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.8p+1, (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.24p+6, (double)*(uint8*)NIBBLES$ );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.8p+2, (double)*(uint8*)NIBBLES$ );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.8p+1, (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.1Cp+6, (double)*(uint8*)NIBBLES$ );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.8p+2, (double)*(uint8*)NIBBLES$ );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.8p+1, (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.2Cp+6, (double)*(uint8*)NIBBLES$ );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.8p+2, (double)*(uint8*)NIBBLES$ );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.8p+1, *(double*)((uint8*)THIS$1 + 395032ll) );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.1Cp+6, (double)*(uint8*)NIBBLES$ );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.18p+5, (double)*(uint8*)NIBBLES$ );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.p+1, (double)YS$ );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.8p+1, (double)Y$ );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.1Cp+6, (double)*(uint8*)NIBBLES$ );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.8p+2, (double)*(uint8*)NIBBLES$ );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.8p+1, 0x1.Cp+1 );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.24p+6, (double)*(uint8*)NIBBLES$ );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.8p+2, (double)*(uint8*)NIBBLES$ );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.8p+1, (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.1Cp+6, (double)*(uint8*)NIBBLES$ );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.8p+2, (double)*(uint8*)NIBBLES$ );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.8p+1, (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.2Cp+6, (double)*(uint8*)NIBBLES$ );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.8p+2, (double)*(uint8*)NIBBLES$ );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.8p+1, *(double*)((uint8*)THIS$1 + 395040ll) );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.1Cp+6, (double)*(uint8*)NIBBLES$ );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.28p+5, (double)*(uint8*)NIBBLES$ );
    double vr$1089 = _ZN8MEMORY_T6PEEK64Ed( THIS$1, 0x1.81F8p+15 );
    _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.81F8p+15, vr$1089 );
    X$ = X$ + 1ll;
    if( (double)X$ <= *(double*)((uint8*)THIS$1 + 395080ll) ) goto label$2820;
    {
     X$ = 0ll;
     Y$ = Y$ + 1ll;
     C$ = C$ + 1ll;
    }
    label$2820:;
    label$2819:;
   }
   goto label$2817;
   label$2818:;
   _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8208p+15, 0x0p+0 );
   ADR$1 = ADR$1 + 0x1.p+14;
   V$1 = *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( ADR$1 )) << (3ll & 63ll)));
  }
  goto label$2546;
  label$2811:;
  if( ADR$1 != 0x1.4p+19 ) goto label$2821;
  label$2822:;
  {
   fb_GfxLine( FGIMAGE$, (float)X_AXIS0$, (float)Y_AXIS0$, (float)(X_AXIS0$ + PIXEL_SIZE$), (float)(Y_AXIS0$ + PIXEL_SIZE$), (uint32)(((((int64)(uint32)(uint8)((int32)__builtin_nearbyint( RED2$ )) << (16ll & 63ll)) | ((int64)(uint32)(uint8)((int32)__builtin_nearbyint( GREEN2$ )) << (8ll & 63ll))) | (int64)(uint32)(uint8)((int32)__builtin_nearbyint( BLUE2$ ))) | ((int64)(uint32)(uint8)((int32)__builtin_nearbyint( XALPHA2$ )) << (24ll & 63ll))), 2, 65535u, 0 );
  }
  goto label$2546;
  label$2821:;
  if( ADR$1 != 0x1.40002p+19 ) goto label$2823;
  label$2824:;
  {
   fb_GfxLine( FGIMAGE$, (float)X_AXIS0$, (float)Y_AXIS0$, (float)X_AXIS1$, (float)Y_AXIS1$, (uint32)(((((int64)(uint32)(uint8)((int32)__builtin_nearbyint( RED2$ )) << (16ll & 63ll)) | ((int64)(uint32)(uint8)((int32)__builtin_nearbyint( GREEN2$ )) << (8ll & 63ll))) | (int64)(uint32)(uint8)((int32)__builtin_nearbyint( BLUE2$ ))) | ((int64)(uint32)(uint8)((int32)__builtin_nearbyint( XALPHA2$ )) << (24ll & 63ll))), 0, (uint32)((int64)__builtin_nearbyint( BITMASK$ )), 0 );
  }
  goto label$2546;
  label$2823:;
  if( ADR$1 != 0x1.40004p+19 ) goto label$2825;
  label$2826:;
  {
   fb_GfxEllipse( FGIMAGE$, (float)X_AXIS0$, (float)Y_AXIS1$, (float)RADIUS$, (uint32)(((((int64)(uint32)(uint8)((int32)__builtin_nearbyint( RED2$ )) << (16ll & 63ll)) | ((int64)(uint32)(uint8)((int32)__builtin_nearbyint( GREEN2$ )) << (8ll & 63ll))) | (int64)(uint32)(uint8)((int32)__builtin_nearbyint( BLUE2$ ))) | ((int64)(uint32)(uint8)((int32)__builtin_nearbyint( XALPHA2$ )) << (24ll & 63ll))), 0x0p+0f, 0x0p+0f, 0x1.921FB8p+2f, 0, 4 );
  }
  goto label$2546;
  label$2825:;
  if( ADR$1 < 0x1.8p+19 ) goto label$2827;
  if( ADR$1 > 0x1.8FFEp+19 ) goto label$2827;
  label$2828:;
  {
   ADR$1 = ADR$1 + -0x1.8p+19;
   *(double*)((uint8*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( ADR$1 )) << (3ll & 63ll))) + 134479872ll) = V$1;
   ADR$1 = ADR$1 + 0x1.8p+19;
  }
  goto label$2546;
  label$2827:;
  if( ADR$1 < 0x1.Ap+19 ) goto label$2829;
  if( ADR$1 > 0x1.A7CEp+19 ) goto label$2829;
  label$2830:;
  {
   ADR$1 = ADR$1 + -0x1.Ap+19;
   C$ = ((int64)__builtin_nearbyint( V$1 ));
   C$ = C$ << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) & 63ll);
   C$ = ((int64)__builtin_nearbyint( (double)C$ + *(double*)((uint8*)THIS$1 + 395072ll) ));
   int64 vr$1184 = _Z6MODULOll( ((int64)__builtin_nearbyint( ADR$1 )), 160ll );
   XS$ = vr$1184;
   XS$ = XS$ << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) & 63ll);
   XS$ = XS$ + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) * (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll));
   YS$ = ((int64)__builtin_nearbyint( ADR$1 )) / 160ll;
   YS$ = YS$ << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) & 63ll);
   YS$ = YS$ + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) * (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll));
   if( *(double*)((uint8*)THIS$1 + ((int64)RVS$ << (3ll & 63ll))) == (double)(int64)*(uint8*)NIBBLES$ ) goto label$2832;
   {
    C$ = C$ & (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll));
   }
   label$2832:;
   label$2831:;
   if( *(double*)((uint8*)THIS$1 + 394856ll) > (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$2834;
   {
    *(double*)((uint8*)THIS$1 + 394856ll) = (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
   }
   label$2834:;
   label$2833:;
   _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8204p+15, (double)*(uint8*)NIBBLES$ );
   *(double*)&Y$ = (double)*(uint8*)NIBBLES$;
   *(double*)&X$ = (double)*(uint8*)NIBBLES$;
   label$2835:;
   if( ((int64)-((double)Y$ == *(double*)((uint8*)THIS$1 + 395088ll)) & (int64)-((double)X$ == *(double*)((uint8*)THIS$1 + 395080ll))) != 0ll ) goto label$2836;
   {
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.p+1, (double)XS$ );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.8p+1, (double)X$ );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.1Cp+6, 0x0p+0 );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.8p+2, 0x0p+0 );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.8p+1, 0x1.Ep+1 );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.24p+6, 0x0p+0 );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.8p+2, 0x0p+0 );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.8p+1, 0x1.p+1 );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.2Cp+6, 0x0p+0 );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.8p+2, 0x0p+0 );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.8p+1, *(double*)((uint8*)THIS$1 + 395032ll) );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.1Cp+6, 0x0p+0 );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.1p+5, 0x0p+0 );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.p+1, (double)YS$ );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.8p+1, (double)Y$ );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.1Cp+6, 0x0p+0 );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.8p+2, 0x0p+0 );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.8p+1, 0x1.Ep+1 );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.24p+6, 0x0p+0 );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.8p+2, 0x0p+0 );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.8p+1, 0x1.p+1 );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.2Cp+6, 0x0p+0 );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.8p+2, 0x0p+0 );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.8p+1, *(double*)((uint8*)THIS$1 + 395040ll) );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.1Cp+6, 0x0p+0 );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.2p+5, 0x0p+0 );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.p+1, (double)XS$ );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.8p+1, (double)X$ );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.1Cp+6, 0x0p+0 );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.8p+2, 0x0p+0 );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.8p+1, 0x1.Ep+1 );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.24p+6, 0x0p+0 );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.8p+2, 0x0p+0 );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.8p+1, 0x1.Cp+2 );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.1Cp+6, 0x0p+0 );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.8p+2, 0x0p+0 );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.8p+1, 0x1.p+1 );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.2Cp+6, 0x0p+0 );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.8p+2, 0x0p+0 );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.8p+1, *(double*)((uint8*)THIS$1 + 395032ll) );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.1Cp+6, 0x0p+0 );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.18p+5, 0x0p+0 );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.p+1, (double)YS$ );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.8p+1, (double)Y$ );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.1Cp+6, 0x0p+0 );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.8p+2, 0x0p+0 );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.8p+1, 0x1.Ep+1 );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.24p+6, 0x0p+0 );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.8p+2, 0x0p+0 );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.8p+1, 0x1.p+2 );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.1Cp+6, 0x0p+0 );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.8p+2, 0x0p+0 );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.8p+1, 0x1.p+1 );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.2Cp+6, 0x0p+0 );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.8p+2, 0x0p+0 );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.8p+1, *(double*)((uint8*)THIS$1 + 395040ll) );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.1Cp+6, 0x0p+0 );
    _ZN8MEMORY_T5POKEBEdd( THIS$1, 0x1.28p+5, 0x0p+0 );
    double vr$1237 = _ZN8MEMORY_T6PEEK64Ed( THIS$1, 0x1.81F8p+15 );
    _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.81F8p+15, vr$1237 );
    X$ = X$ + 1ll;
    if( (double)X$ <= *(double*)((uint8*)THIS$1 + 395080ll) ) goto label$2838;
    {
     X$ = 0ll;
     Y$ = Y$ + 1ll;
     C$ = C$ + 1ll;
    }
    label$2838:;
    label$2837:;
   }
   goto label$2835;
   label$2836:;
   _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8208p+15, 0x0p+0 );
   ADR$1 = ADR$1 + 0x1.Ap+19;
   V$1 = *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( ADR$1 )) << (3ll & 63ll)));
  }
  label$2829:;
  label$2546:;
 }
 label$2545:;
}

void _ZN8MEMORY_T5POKEWEdd( struct $8MEMORY_T* THIS$1, double ADR$1, double V$1 )
{
 label$2839:;
 _ZN8MEMORY_T5POKEBEdd( THIS$1, ADR$1, (double)(((uint64)__builtin_nearbyint( V$1 )) & 255ull) );
 _ZN8MEMORY_T5POKEBEdd( THIS$1, ADR$1 + 0x1.p+0, (double)((((uint64)__builtin_nearbyint( V$1 )) & 65280ull) >> (8ll & 63ll)) );
 label$2840:;
}

double _ZN8MEMORY_T8ISSYMBOLE8FBSTRINGd( struct $8MEMORY_T* THIS$1, FBSTRING* S$1, double START$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2841:;
 label$2843:;
 {
  {
   uint64 TMP$2177$3;
   FBSTRING* vr$2 = fb_StrMid( (FBSTRING*)S$1, ((int64)__builtin_nearbyint( START$1 )), 1ll );
   uint32 vr$3 = fb_ASC( (FBSTRING*)vr$2, 1ll );
   TMP$2177$3 = (uint64)vr$3;
   goto label$2847;
   label$2848:;
   {
    goto label$2844;
   }
   goto label$2846;
   label$2849:;
   {
    START$1 = START$1 + 0x1.p+0;
   }
   goto label$2846;
   label$2847:;
   static const void* tmp$2178[10ll] = {
    &&label$2848,
    &&label$2848,
    &&label$2848,
    &&label$2848,
    &&label$2848,
    &&label$2848,
    &&label$2848,
    &&label$2848,
    &&label$2848,
    &&label$2848,
   };
   if( (TMP$2177$3 - 48ull) > 9ull ) goto label$2849;
   goto *tmp$2178[TMP$2177$3 - 48ull];
   label$2846:;
  }
 }
 label$2845:;
 goto label$2843;
 label$2844:;
 fb$result$1 = START$1;
 label$2842:;
 return fb$result$1;
}

double _ZN8MEMORY_T8ISNUMBERE8FBSTRINGd( struct $8MEMORY_T* THIS$1, FBSTRING* S$1, double START$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2850:;
 int64 TMP$1;
 __builtin_memset( &TMP$1, 0, 8ll );
 TMP$1 = ((int64)__builtin_nearbyint( START$1 ));
 label$2852:;
 {
  {
   uint64 TMP$2179$3;
   FBSTRING* vr$3 = fb_StrMid( (FBSTRING*)&GET_DATA$, TMP$1, 1ll );
   uint32 vr$4 = fb_ASC( (FBSTRING*)vr$3, 1ll );
   TMP$2179$3 = (uint64)vr$4;
   goto label$2856;
   label$2857:;
   {
    TMP$1 = TMP$1 + 1ll;
   }
   goto label$2855;
   label$2858:;
   {
    TMP$1 = TMP$1 + 1ll;
   }
   goto label$2855;
   label$2859:;
   {
    TMP$1 = TMP$1 + 1ll;
   }
   goto label$2855;
   label$2860:;
   {
    goto label$2853;
   }
   goto label$2855;
   label$2856:;
   static const void* tmp$2180[67ll] = {
    &&label$2858,
    &&label$2860,
    &&label$2860,
    &&label$2860,
    &&label$2860,
    &&label$2858,
    &&label$2860,
    &&label$2858,
    &&label$2858,
    &&label$2860,
    &&label$2857,
    &&label$2857,
    &&label$2857,
    &&label$2857,
    &&label$2857,
    &&label$2857,
    &&label$2857,
    &&label$2857,
    &&label$2857,
    &&label$2857,
    &&label$2860,
    &&label$2860,
    &&label$2860,
    &&label$2860,
    &&label$2860,
    &&label$2860,
    &&label$2860,
    &&label$2860,
    &&label$2858,
    &&label$2860,
    &&label$2860,
    &&label$2860,
    &&label$2860,
    &&label$2860,
    &&label$2859,
    &&label$2860,
    &&label$2860,
    &&label$2860,
    &&label$2860,
    &&label$2860,
    &&label$2860,
    &&label$2860,
    &&label$2860,
    &&label$2860,
    &&label$2860,
    &&label$2860,
    &&label$2860,
    &&label$2860,
    &&label$2860,
    &&label$2860,
    &&label$2860,
    &&label$2860,
    &&label$2860,
    &&label$2860,
    &&label$2860,
    &&label$2860,
    &&label$2860,
    &&label$2860,
    &&label$2860,
    &&label$2860,
    &&label$2859,
    &&label$2860,
    &&label$2860,
    &&label$2860,
    &&label$2860,
    &&label$2860,
    &&label$2859,
   };
   if( (TMP$2179$3 - 38ull) > 66ull ) goto label$2860;
   goto *tmp$2180[TMP$2179$3 - 38ull];
   label$2855:;
  }
 }
 label$2854:;
 goto label$2852;
 label$2853:;
 FBSTRING* vr$10 = fb_StrMid( (FBSTRING*)&GET_DATA$, ((int64)__builtin_nearbyint( START$1 )), TMP$1 );
 double vr$11 = fb_VAL( (FBSTRING*)vr$10 );
 if( vr$11 <= 0x0p+0 ) goto label$2862;
 {
  FBSTRING* vr$13 = fb_StrMid( (FBSTRING*)&GET_DATA$, ((int64)__builtin_nearbyint( START$1 )), TMP$1 );
  double vr$14 = fb_VAL( (FBSTRING*)vr$13 );
  fb$result$1 = vr$14;
 }
 goto label$2861;
 label$2862:;
 {
  fb$result$1 = 0x0p+0;
 }
 label$2861:;
 label$2851:;
 return fb$result$1;
}

void _ZN8MEMORY_T6GETXYZEv( struct $8MEMORY_T* THIS$1 )
{
 FBSTRING TMP$2181$1;
 FBSTRING TMP$2184$1;
 FBSTRING TMP$2186$1;
 label$2863:;
 __builtin_memset( &TMP$2181$1, 0, 24ll );
 fb_StrAssign( (void*)&TMP$2181$1, -1ll, (void*)&GET_DATA$, -1ll, 0 );
 double vr$3 = _ZN8MEMORY_T8ISNUMBERE8FBSTRINGd( THIS$1, &TMP$2181$1, 0x1.Cp+2 );
 *(double*)((uint8*)THIS$1 + 394840ll) = vr$3;
 fb_StrDelete( (FBSTRING*)&TMP$2181$1 );
 if( *(double*)((uint8*)THIS$1 + 394840ll) != 0x0p+0 ) goto label$2866;
 {
  FBSTRING TMP$2182$2;
  FBSTRING* vr$8 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 394840ll) );
  int64 vr$9 = fb_StrLen( (void*)vr$8, -1ll );
  __builtin_memset( &TMP$2182$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$2182$2, -1ll, (void*)&GET_DATA$, -1ll, 0 );
  double vr$15 = _ZN8MEMORY_T8ISNUMBERE8FBSTRINGd( THIS$1, &TMP$2182$2, (double)(vr$9 + 7ll) );
  *(double*)((uint8*)THIS$1 + 394840ll) = -vr$15 + 0x0p+0;
  fb_StrDelete( (FBSTRING*)&TMP$2182$2 );
 }
 goto label$2865;
 label$2866:;
 FBSTRING* vr$21 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 394840ll) );
 int64 vr$22 = fb_StrLen( (void*)vr$21, -1ll );
 FBSTRING* vr$24 = fb_StrMid( (FBSTRING*)&GET_DATA$, vr$22 + 7ll, 1ll );
 int32 vr$25 = fb_StrCompare( (void*)vr$24, -1ll, (void*)"-", 2ll );
 if( (int64)vr$25 != 0ll ) goto label$2867;
 {
  FBSTRING TMP$2183$2;
  FBSTRING* vr$28 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 394840ll) );
  int64 vr$29 = fb_StrLen( (void*)vr$28, -1ll );
  __builtin_memset( &TMP$2183$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$2183$2, -1ll, (void*)&GET_DATA$, -1ll, 0 );
  double vr$35 = _ZN8MEMORY_T8ISNUMBERE8FBSTRINGd( THIS$1, &TMP$2183$2, (double)(vr$29 + 8ll) );
  *(double*)((uint8*)THIS$1 + 394840ll) = -vr$35 + 0x0p+0;
  fb_StrDelete( (FBSTRING*)&TMP$2183$2 );
 }
 label$2867:;
 label$2865:;
 FBSTRING* vr$41 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 394840ll) );
 int64 vr$42 = fb_StrLen( (void*)vr$41, -1ll );
 __builtin_memset( &TMP$2184$1, 0, 24ll );
 fb_StrAssign( (void*)&TMP$2184$1, -1ll, (void*)&GET_DATA$, -1ll, 0 );
 double vr$48 = _ZN8MEMORY_T8ISNUMBERE8FBSTRINGd( THIS$1, &TMP$2184$1, (double)(vr$42 + 9ll) );
 *(double*)((uint8*)THIS$1 + 394848ll) = vr$48;
 fb_StrDelete( (FBSTRING*)&TMP$2184$1 );
 FBSTRING* vr$52 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 394840ll) );
 int64 vr$53 = fb_StrLen( (void*)vr$52, -1ll );
 FBSTRING* vr$55 = fb_StrMid( (FBSTRING*)&GET_DATA$, vr$53 + 9ll, 1ll );
 int32 vr$56 = fb_StrCompare( (void*)vr$55, -1ll, (void*)"-", 2ll );
 if( (int64)vr$56 != 0ll ) goto label$2869;
 {
  FBSTRING TMP$2185$2;
  FBSTRING* vr$59 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 394840ll) );
  int64 vr$60 = fb_StrLen( (void*)vr$59, -1ll );
  __builtin_memset( &TMP$2185$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$2185$2, -1ll, (void*)&GET_DATA$, -1ll, 0 );
  double vr$66 = _ZN8MEMORY_T8ISNUMBERE8FBSTRINGd( THIS$1, &TMP$2185$2, (double)(vr$60 + 10ll) );
  *(double*)((uint8*)THIS$1 + 394848ll) = -vr$66 + 0x0p+0;
  fb_StrDelete( (FBSTRING*)&TMP$2185$2 );
 }
 label$2869:;
 label$2868:;
 FBSTRING* vr$72 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 394848ll) );
 int64 vr$73 = fb_StrLen( (void*)vr$72, -1ll );
 __builtin_memset( &TMP$2186$1, 0, 24ll );
 fb_StrAssign( (void*)&TMP$2186$1, -1ll, (void*)&GET_DATA$, -1ll, 0 );
 double vr$79 = _ZN8MEMORY_T8ISNUMBERE8FBSTRINGd( THIS$1, &TMP$2186$1, (double)(vr$73 + 13ll) );
 *(double*)((uint8*)THIS$1 + 394856ll) = vr$79;
 fb_StrDelete( (FBSTRING*)&TMP$2186$1 );
 FBSTRING* vr$83 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 394848ll) );
 int64 vr$84 = fb_StrLen( (void*)vr$83, -1ll );
 FBSTRING* vr$86 = fb_StrMid( (FBSTRING*)&GET_DATA$, vr$84 + 13ll, 1ll );
 int32 vr$87 = fb_StrCompare( (void*)vr$86, -1ll, (void*)"-", 2ll );
 if( (int64)vr$87 != 0ll ) goto label$2871;
 {
  FBSTRING TMP$2187$2;
  FBSTRING* vr$90 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 394848ll) );
  int64 vr$91 = fb_StrLen( (void*)vr$90, -1ll );
  __builtin_memset( &TMP$2187$2, 0, 24ll );
  fb_StrAssign( (void*)&TMP$2187$2, -1ll, (void*)&GET_DATA$, -1ll, 0 );
  double vr$97 = _ZN8MEMORY_T8ISNUMBERE8FBSTRINGd( THIS$1, &TMP$2187$2, (double)(vr$91 + 14ll) );
  *(double*)((uint8*)THIS$1 + 394856ll) = vr$97 + 0x0p+0;
  fb_StrDelete( (FBSTRING*)&TMP$2187$2 );
 }
 label$2871:;
 label$2870:;
 label$2864:;
}

double _ZN8MEMORY_T6PEEK64Ed( struct $8MEMORY_T* THIS$1, double ADR$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$2872:;
 {
  if( ADR$1 < 0x1.Cp+15 ) goto label$2875;
  if( ADR$1 > 0x1.FFFEp+15 ) goto label$2875;
  label$2876:;
  {
   fb$result$1 = *(double*)((uint8*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( ADR$1 + -0x1.Cp+15 )) << (3ll & 63ll))) + 134217728ll);
  }
  goto label$2874;
  label$2875:;
  if( ADR$1 < 0x1.4p+15 ) goto label$2877;
  if( ADR$1 > 0x1.7FFEp+15 ) goto label$2877;
  label$2878:;
  {
   fb$result$1 = *(double*)((uint8*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( ADR$1 + -0x1.4p+15 )) << (3ll & 63ll))) + 134348800ll);
  }
  goto label$2874;
  label$2877:;
  if( ADR$1 < 0x1.Bp+15 ) goto label$2879;
  if( ADR$1 > 0x1.B7FEp+15 ) goto label$2879;
  label$2880:;
  {
   fb$result$1 = *(double*)((uint8*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( ADR$1 + -0x1.Bp+15 )) << (3ll & 63ll))) + 134479872ll);
  }
  goto label$2874;
  label$2879:;
  if( ADR$1 < 0x1.Ap+15 ) goto label$2881;
  if( ADR$1 > 0x1.A7FEp+15 ) goto label$2881;
  label$2882:;
  {
   int64 REG$3;
   REG$3 = ((int64)__builtin_nearbyint( ADR$1 )) & 63ll;
   if( REG$3 != 18ll ) goto label$2884;
   {
    fb$result$1 = 0x0p+0;
   }
   goto label$2883;
   label$2884:;
   {
    fb$result$1 = 0x1.FEp+7;
    label$2883:;
   }
  }
  goto label$2874;
  label$2881:;
  {
   fb$result$1 = *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( ADR$1 )) << (3ll & 63ll)));
  }
  label$2885:;
  label$2874:;
 }
 label$2873:;
 return fb$result$1;
}

void _ZN8MEMORY_T6POKE64Edd( struct $8MEMORY_T* THIS$1, double ADR$1, double V$1 )
{
 label$2886:;
 *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( ADR$1 )) << (3ll & 63ll))) = V$1;
 if( ((int64)-(ADR$1 >= 0x1.Bp+15) & (int64)-(ADR$1 <= 0x1.B7FEp+15)) == 0ll ) goto label$2889;
 goto label$2890;
 label$2889:;
 goto label$2891;
 label$2890:;
 ADR$1 = ADR$1 + -0x1.Bp+15;
 *(double*)((uint8*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( ADR$1 )) << (3ll & 63ll))) + 151068680ll) = V$1;
 ADR$1 = ADR$1 + *(double*)((uint8*)THIS$1 + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll)));
 V$1 = *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( ADR$1 )) << (3ll & 63ll)));
 label$2891:;
 if( ADR$1 != 0x1.8Ep+7 ) goto label$2893;
 goto label$2894;
 label$2893:;
 goto label$2895;
 label$2894:;
 label$2895:;
 if( ADR$1 != (double)(int64)FCOLOR$ ) goto label$2897;
 goto label$2898;
 label$2897:;
 goto label$2899;
 label$2898:;
 if( V$1 != (double)(int64)*(uint8*)NIBBLES$ ) goto label$2901;
 goto label$2902;
 label$2901:;
 if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$2904;
 goto label$2905;
 label$2904:;
 if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) ) goto label$2907;
 goto label$2908;
 label$2907:;
 if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) ) goto label$2910;
 goto label$2911;
 label$2910:;
 if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) ) goto label$2913;
 goto label$2914;
 label$2913:;
 if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) ) goto label$2916;
 goto label$2917;
 label$2916:;
 if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) ) goto label$2919;
 goto label$2920;
 label$2919:;
 if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) ) goto label$2922;
 goto label$2923;
 label$2922:;
 if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) ) goto label$2925;
 goto label$2926;
 label$2925:;
 if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) ) goto label$2928;
 goto label$2929;
 label$2928:;
 if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) ) goto label$2931;
 goto label$2932;
 label$2931:;
 if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) ) goto label$2934;
 goto label$2935;
 label$2934:;
 if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) ) goto label$2937;
 goto label$2938;
 label$2937:;
 if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) ) goto label$2940;
 goto label$2941;
 label$2940:;
 if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) ) goto label$2943;
 goto label$2944;
 label$2943:;
 if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) ) goto label$2946;
 goto label$2947;
 label$2946:;
 if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$2949;
 goto label$2950;
 label$2949:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$2952;
 goto label$2953;
 label$2952:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$2955;
 goto label$2956;
 label$2955:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$2958;
 goto label$2959;
 label$2958:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$2961;
 goto label$2962;
 label$2961:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$2964;
 goto label$2965;
 label$2964:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$2967;
 goto label$2968;
 label$2967:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$2970;
 goto label$2971;
 label$2970:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$2973;
 goto label$2974;
 label$2973:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$2976;
 goto label$2977;
 label$2976:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$2979;
 goto label$2980;
 label$2979:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$2982;
 goto label$2983;
 label$2982:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$2985;
 goto label$2986;
 label$2985:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$2988;
 goto label$2989;
 label$2988:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$2991;
 goto label$2992;
 label$2991:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$2994;
 goto label$2995;
 label$2994:;
 if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$2997;
 goto label$2998;
 label$2997:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$3000;
 goto label$3001;
 label$3000:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$3003;
 goto label$3004;
 label$3003:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$3006;
 goto label$3007;
 label$3006:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$3009;
 goto label$3010;
 label$3009:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$3012;
 goto label$3013;
 label$3012:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$3015;
 goto label$3016;
 label$3015:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$3018;
 goto label$3019;
 label$3018:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$3021;
 goto label$3022;
 label$3021:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$3024;
 goto label$3025;
 label$3024:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$3027;
 goto label$3028;
 label$3027:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$3030;
 goto label$3031;
 label$3030:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$3033;
 goto label$3034;
 label$3033:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$3036;
 goto label$3037;
 label$3036:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$3039;
 goto label$3040;
 label$3039:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$3042;
 goto label$3043;
 label$3042:;
 if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$3045;
 goto label$3046;
 label$3045:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$3048;
 goto label$3049;
 label$3048:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$3051;
 goto label$3052;
 label$3051:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$3054;
 goto label$3055;
 label$3054:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$3057;
 goto label$3058;
 label$3057:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$3060;
 goto label$3061;
 label$3060:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$3063;
 goto label$3064;
 label$3063:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$3066;
 goto label$3067;
 label$3066:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$3069;
 goto label$3070;
 label$3069:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$3072;
 goto label$3073;
 label$3072:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$3075;
 goto label$3076;
 label$3075:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$3078;
 goto label$3079;
 label$3078:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$3081;
 goto label$3082;
 label$3081:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$3084;
 goto label$3085;
 label$3084:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$3087;
 goto label$3088;
 label$3087:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$3090;
 goto label$3091;
 label$3090:;
 if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$3093;
 goto label$3094;
 label$3093:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$3096;
 goto label$3097;
 label$3096:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$3099;
 goto label$3100;
 label$3099:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$3102;
 goto label$3103;
 label$3102:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$3105;
 goto label$3106;
 label$3105:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$3108;
 goto label$3109;
 label$3108:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$3111;
 goto label$3112;
 label$3111:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$3114;
 goto label$3115;
 label$3114:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$3117;
 goto label$3118;
 label$3117:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$3120;
 goto label$3121;
 label$3120:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$3123;
 goto label$3124;
 label$3123:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$3126;
 goto label$3127;
 label$3126:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$3129;
 goto label$3130;
 label$3129:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$3132;
 goto label$3133;
 label$3132:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$3135;
 goto label$3136;
 label$3135:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$3138;
 goto label$3139;
 label$3138:;
 if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$3141;
 goto label$3142;
 label$3141:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$3144;
 goto label$3145;
 label$3144:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$3147;
 goto label$3148;
 label$3147:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$3150;
 goto label$3151;
 label$3150:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$3153;
 goto label$3154;
 label$3153:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$3156;
 goto label$3157;
 label$3156:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$3159;
 goto label$3160;
 label$3159:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$3162;
 goto label$3163;
 label$3162:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$3165;
 goto label$3166;
 label$3165:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$3168;
 goto label$3169;
 label$3168:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$3171;
 goto label$3172;
 label$3171:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$3174;
 goto label$3175;
 label$3174:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$3177;
 goto label$3178;
 label$3177:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$3180;
 goto label$3181;
 label$3180:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$3183;
 goto label$3184;
 label$3183:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$3186;
 goto label$3187;
 label$3186:;
 label$3188:;
 if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$3190;
 goto label$3191;
 label$3190:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$3193;
 goto label$3194;
 label$3193:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$3196;
 goto label$3197;
 label$3196:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$3199;
 goto label$3200;
 label$3199:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$3202;
 goto label$3203;
 label$3202:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$3205;
 goto label$3206;
 label$3205:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$3208;
 goto label$3209;
 label$3208:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$3211;
 goto label$3212;
 label$3211:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$3214;
 goto label$3215;
 label$3214:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$3217;
 goto label$3218;
 label$3217:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$3220;
 goto label$3221;
 label$3220:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$3223;
 goto label$3224;
 label$3223:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$3226;
 goto label$3227;
 label$3226:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$3229;
 goto label$3230;
 label$3229:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$3232;
 goto label$3233;
 label$3232:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$3235;
 goto label$3236;
 label$3235:;
 if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) ) goto label$3238;
 goto label$3239;
 label$3238:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$3241;
 goto label$3242;
 label$3241:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$3244;
 goto label$3245;
 label$3244:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$3247;
 goto label$3248;
 label$3247:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$3250;
 goto label$3251;
 label$3250:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$3253;
 goto label$3254;
 label$3253:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$3256;
 goto label$3257;
 label$3256:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$3259;
 goto label$3260;
 label$3259:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$3262;
 goto label$3263;
 label$3262:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$3265;
 goto label$3266;
 label$3265:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$3268;
 goto label$3269;
 label$3268:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$3271;
 goto label$3272;
 label$3271:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$3274;
 goto label$3275;
 label$3274:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$3277;
 goto label$3278;
 label$3277:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$3280;
 goto label$3281;
 label$3280:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$3283;
 goto label$3284;
 label$3283:;
 if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$3286;
 goto label$3287;
 label$3286:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$3289;
 goto label$3290;
 label$3289:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$3292;
 goto label$3293;
 label$3292:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$3295;
 goto label$3296;
 label$3295:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$3298;
 goto label$3299;
 label$3298:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$3301;
 goto label$3302;
 label$3301:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$3304;
 goto label$3305;
 label$3304:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$3307;
 goto label$3308;
 label$3307:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$3310;
 goto label$3311;
 label$3310:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$3313;
 goto label$3314;
 label$3313:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$3316;
 goto label$3317;
 label$3316:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$3319;
 goto label$3320;
 label$3319:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$3322;
 goto label$3323;
 label$3322:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$3325;
 goto label$3326;
 label$3325:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$3328;
 goto label$3329;
 label$3328:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$3331;
 goto label$3332;
 label$3331:;
 if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$3334;
 goto label$3335;
 label$3334:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$3337;
 goto label$3338;
 label$3337:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$3340;
 goto label$3341;
 label$3340:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$3343;
 goto label$3344;
 label$3343:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$3346;
 goto label$3347;
 label$3346:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$3349;
 goto label$3350;
 label$3349:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$3352;
 goto label$3353;
 label$3352:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$3355;
 goto label$3356;
 label$3355:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$3358;
 goto label$3359;
 label$3358:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$3361;
 goto label$3362;
 label$3361:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$3364;
 goto label$3365;
 label$3364:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$3367;
 goto label$3368;
 label$3367:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$3370;
 goto label$3371;
 label$3370:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$3373;
 goto label$3374;
 label$3373:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$3376;
 goto label$3377;
 label$3376:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$3379;
 goto label$3380;
 label$3379:;
 if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$3382;
 goto label$3383;
 label$3382:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$3385;
 goto label$3386;
 label$3385:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$3388;
 goto label$3389;
 label$3388:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$3391;
 goto label$3392;
 label$3391:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$3394;
 goto label$3395;
 label$3394:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$3397;
 goto label$3398;
 label$3397:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$3400;
 goto label$3401;
 label$3400:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$3403;
 goto label$3404;
 label$3403:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$3406;
 goto label$3407;
 label$3406:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$3409;
 goto label$3410;
 label$3409:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$3412;
 goto label$3413;
 label$3412:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$3415;
 goto label$3416;
 label$3415:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$3418;
 goto label$3419;
 label$3418:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$3421;
 goto label$3422;
 label$3421:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$3424;
 goto label$3425;
 label$3424:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$3427;
 goto label$3428;
 label$3427:;
 if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) ) goto label$3430;
 goto label$3431;
 label$3430:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$3433;
 goto label$3434;
 label$3433:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$3436;
 goto label$3437;
 label$3436:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$3439;
 goto label$3440;
 label$3439:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$3442;
 goto label$3443;
 label$3442:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$3445;
 goto label$3446;
 label$3445:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$3448;
 goto label$3449;
 label$3448:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$3451;
 goto label$3452;
 label$3451:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$3454;
 goto label$3455;
 label$3454:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$3457;
 goto label$3458;
 label$3457:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$3460;
 goto label$3461;
 label$3460:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$3463;
 goto label$3464;
 label$3463:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$3466;
 goto label$3467;
 label$3466:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$3469;
 goto label$3470;
 label$3469:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$3472;
 goto label$3473;
 label$3472:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$3475;
 goto label$3476;
 label$3475:;
 if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$3478;
 goto label$3479;
 label$3478:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$3481;
 goto label$3482;
 label$3481:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$3484;
 goto label$3485;
 label$3484:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$3487;
 goto label$3488;
 label$3487:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$3490;
 goto label$3491;
 label$3490:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$3493;
 goto label$3494;
 label$3493:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$3496;
 goto label$3497;
 label$3496:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$3499;
 goto label$3500;
 label$3499:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$3502;
 goto label$3503;
 label$3502:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$3505;
 goto label$3506;
 label$3505:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$3508;
 goto label$3509;
 label$3508:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$3511;
 goto label$3512;
 label$3511:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$3514;
 goto label$3515;
 label$3514:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$3517;
 goto label$3518;
 label$3517:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$3520;
 goto label$3521;
 label$3520:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$3523;
 goto label$3524;
 label$3523:;
 if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$3526;
 goto label$3527;
 label$3526:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$3529;
 goto label$3530;
 label$3529:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$3532;
 goto label$3533;
 label$3532:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$3535;
 goto label$3536;
 label$3535:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$3538;
 goto label$3539;
 label$3538:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$3541;
 goto label$3542;
 label$3541:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$3544;
 goto label$3545;
 label$3544:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$3547;
 goto label$3548;
 label$3547:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$3550;
 goto label$3551;
 label$3550:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$3553;
 goto label$3554;
 label$3553:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$3556;
 goto label$3557;
 label$3556:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$3559;
 goto label$3560;
 label$3559:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$3562;
 goto label$3563;
 label$3562:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$3565;
 goto label$3566;
 label$3565:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$3568;
 goto label$3569;
 label$3568:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$3571;
 goto label$3572;
 label$3571:;
 if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$3574;
 goto label$3575;
 label$3574:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$3577;
 goto label$3578;
 label$3577:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$3580;
 goto label$3581;
 label$3580:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$3583;
 goto label$3584;
 label$3583:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$3586;
 goto label$3587;
 label$3586:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$3589;
 goto label$3590;
 label$3589:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$3592;
 goto label$3593;
 label$3592:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$3595;
 goto label$3596;
 label$3595:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$3598;
 goto label$3599;
 label$3598:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$3601;
 goto label$3602;
 label$3601:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$3604;
 goto label$3605;
 label$3604:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$3607;
 goto label$3608;
 label$3607:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$3610;
 goto label$3611;
 label$3610:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$3613;
 goto label$3614;
 label$3613:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$3616;
 goto label$3617;
 label$3616:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$3619;
 goto label$3620;
 label$3619:;
 if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$3622;
 goto label$3623;
 label$3622:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$3625;
 goto label$3626;
 label$3625:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$3628;
 goto label$3629;
 label$3628:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$3631;
 goto label$3632;
 label$3631:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$3634;
 goto label$3635;
 label$3634:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$3637;
 goto label$3638;
 label$3637:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$3640;
 goto label$3641;
 label$3640:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$3643;
 goto label$3644;
 label$3643:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$3646;
 goto label$3647;
 label$3646:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$3649;
 goto label$3650;
 label$3649:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$3652;
 goto label$3653;
 label$3652:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$3655;
 goto label$3656;
 label$3655:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$3658;
 goto label$3659;
 label$3658:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$3661;
 goto label$3662;
 label$3661:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$3664;
 goto label$3665;
 label$3664:;
 if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$3667;
 goto label$3668;
 label$3667:;
 goto label$2899;
 label$2902:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$2899;
 label$2905:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$2899;
 label$2908:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$2899;
 label$2911:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$2899;
 label$2914:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$2899;
 label$2917:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$2899;
 label$2920:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$2899;
 label$2923:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$2899;
 label$2926:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$2899;
 label$2929:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$2899;
 label$2932:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$2899;
 label$2935:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$2899;
 label$2938:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$2899;
 label$2941:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$2899;
 label$2944:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$2899;
 label$2947:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$2899;
 label$2950:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$2899;
 label$2953:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$2899;
 label$2956:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$2899;
 label$2959:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$2899;
 label$2962:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$2899;
 label$2965:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$2899;
 label$2968:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$2899;
 label$2971:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$2899;
 label$2974:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$2899;
 label$2977:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$2899;
 label$2980:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$2899;
 label$2983:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$2899;
 label$2986:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$2899;
 label$2989:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$2899;
 label$2992:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$2899;
 label$2995:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$2899;
 label$2998:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$2899;
 label$3001:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$2899;
 label$3004:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$2899;
 label$3007:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$2899;
 label$3010:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$2899;
 label$3013:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$2899;
 label$3016:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$2899;
 label$3019:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$2899;
 label$3022:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$2899;
 label$3025:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$2899;
 label$3028:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$2899;
 label$3031:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$2899;
 label$3034:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$2899;
 label$3037:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$2899;
 label$3040:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$2899;
 label$3043:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$2899;
 label$3046:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$2899;
 label$3049:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$2899;
 label$3052:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$2899;
 label$3055:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$2899;
 label$3058:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$2899;
 label$3061:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$2899;
 label$3064:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$2899;
 label$3067:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$2899;
 label$3070:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$2899;
 label$3073:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$2899;
 label$3076:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$2899;
 label$3079:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$2899;
 label$3082:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$2899;
 label$3085:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$2899;
 label$3088:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$2899;
 label$3091:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$2899;
 label$3094:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$2899;
 label$3097:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$2899;
 label$3100:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$2899;
 label$3103:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$2899;
 label$3106:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$2899;
 label$3109:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$2899;
 label$3112:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$2899;
 label$3115:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$2899;
 label$3118:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$2899;
 label$3121:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$2899;
 label$3124:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$2899;
 label$3127:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$2899;
 label$3130:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$2899;
 label$3133:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$2899;
 label$3136:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$2899;
 label$3139:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$2899;
 label$3142:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$2899;
 label$3145:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$2899;
 label$3148:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$2899;
 label$3151:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$2899;
 label$3154:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$2899;
 label$3157:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$2899;
 label$3160:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$2899;
 label$3163:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$2899;
 label$3166:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$2899;
 label$3169:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$2899;
 label$3172:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$2899;
 label$3175:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$2899;
 label$3178:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$2899;
 label$3181:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$2899;
 label$3184:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$2899;
 label$3187:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$2899;
 label$3191:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$2899;
 label$3194:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$2899;
 label$3197:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$2899;
 label$3200:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$2899;
 label$3203:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$2899;
 label$3206:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$2899;
 label$3209:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$2899;
 label$3212:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$2899;
 label$3215:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$2899;
 label$3218:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$2899;
 label$3221:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$2899;
 label$3224:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$2899;
 label$3227:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$2899;
 label$3230:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$2899;
 label$3233:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$2899;
 label$3236:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$2899;
 label$3239:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$2899;
 label$3242:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$2899;
 label$3245:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$2899;
 label$3248:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$2899;
 label$3251:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$2899;
 label$3254:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$2899;
 label$3257:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$2899;
 label$3260:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$2899;
 label$3263:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$2899;
 label$3266:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$2899;
 label$3269:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$2899;
 label$3272:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$2899;
 label$3275:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$2899;
 label$3278:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$2899;
 label$3281:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$2899;
 label$3284:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$2899;
 label$3287:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$2899;
 label$3290:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$2899;
 label$3293:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$2899;
 label$3296:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$2899;
 label$3299:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$2899;
 label$3302:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$2899;
 label$3305:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$2899;
 label$3308:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$2899;
 label$3311:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$2899;
 label$3314:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$2899;
 label$3317:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$2899;
 label$3320:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$2899;
 label$3323:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$2899;
 label$3326:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$2899;
 label$3329:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$2899;
 label$3332:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$2899;
 label$3335:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$2899;
 label$3338:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$2899;
 label$3341:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$2899;
 label$3344:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$2899;
 label$3347:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$2899;
 label$3350:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$2899;
 label$3353:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$2899;
 label$3356:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$2899;
 label$3359:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$2899;
 label$3362:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$2899;
 label$3365:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$2899;
 label$3368:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$2899;
 label$3371:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$2899;
 label$3374:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$2899;
 label$3377:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$2899;
 label$3380:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$2899;
 label$3383:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$2899;
 label$3386:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$2899;
 label$3389:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$2899;
 label$3392:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$2899;
 label$3395:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$2899;
 label$3398:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$2899;
 label$3401:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$2899;
 label$3404:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$2899;
 label$3407:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$2899;
 label$3410:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$2899;
 label$3413:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$2899;
 label$3416:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$2899;
 label$3419:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$2899;
 label$3422:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$2899;
 label$3425:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$2899;
 label$3428:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$2899;
 label$3431:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$2899;
 label$3434:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$2899;
 label$3437:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$2899;
 label$3440:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$2899;
 label$3443:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$2899;
 label$3446:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$2899;
 label$3449:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$2899;
 label$3452:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$2899;
 label$3455:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$2899;
 label$3458:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$2899;
 label$3461:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$2899;
 label$3464:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$2899;
 label$3467:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$2899;
 label$3470:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$2899;
 label$3473:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$2899;
 label$3476:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$2899;
 label$3479:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$2899;
 label$3482:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$2899;
 label$3485:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$2899;
 label$3488:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$2899;
 label$3491:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$2899;
 label$3494:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$2899;
 label$3497:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$2899;
 label$3500:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$2899;
 label$3503:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$2899;
 label$3506:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$2899;
 label$3509:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$2899;
 label$3512:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$2899;
 label$3515:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$2899;
 label$3518:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$2899;
 label$3521:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$2899;
 label$3524:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$2899;
 label$3527:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$2899;
 label$3530:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$2899;
 label$3533:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$2899;
 label$3536:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$2899;
 label$3539:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$2899;
 label$3542:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$2899;
 label$3545:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$2899;
 label$3548:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.Cp+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.Cp+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.Cp+7 );
 goto label$2899;
 label$3551:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.82p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.82p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.82p+7 );
 goto label$2899;
 label$3554:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.44p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.44p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.44p+7 );
 goto label$2899;
 label$3557:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.06p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.06p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.06p+7 );
 goto label$2899;
 label$3560:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.9p+6 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.9p+6 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.9p+6 );
 goto label$2899;
 label$3563:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.14p+6 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.14p+6 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.14p+6 );
 goto label$2899;
 label$3566:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.3p+5 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.3p+5 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.3p+5 );
 goto label$2899;
 label$3569:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.Cp+2 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.Cp+2 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.Cp+2 );
 goto label$2899;
 label$3572:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$2899;
 label$3575:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$2899;
 label$3578:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$2899;
 label$3581:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$2899;
 label$3584:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$2899;
 label$3587:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$2899;
 label$3590:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$2899;
 label$3593:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$2899;
 label$3596:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$2899;
 label$3599:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$2899;
 label$3602:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$2899;
 label$3605:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$2899;
 label$3608:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$2899;
 label$3611:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$2899;
 label$3614:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$2899;
 label$3617:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.FEp+7 );
 goto label$2899;
 label$3620:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+7 );
 goto label$2899;
 label$3623:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.32p+7 );
 goto label$2899;
 label$3626:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$2899;
 label$3629:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$2899;
 label$3632:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$2899;
 label$3635:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+5 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$2899;
 label$3638:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.32p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+6 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$2899;
 label$3641:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.32p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$2899;
 label$3644:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$2899;
 label$3647:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.76p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$2899;
 label$3650:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.FEp+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.98p+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$2899;
 label$3653:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x0p+0 );
 goto label$2899;
 label$3656:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+5 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$2899;
 label$3659:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+5 );
 goto label$2899;
 label$3662:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.98p+6 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$2899;
 label$3665:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x0p+0 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.FEp+7 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.98p+6 );
 goto label$2899;
 label$3668:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, 0x1.4p+5 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, 0x1.4p+5 );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, 0x1.4p+5 );
 goto label$2899;
 label$2899:;
 if( ADR$1 != (double)(int64)VMCSB$ ) goto label$3670;
 {
  {
   if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) ) goto label$3672;
   label$3673:;
   {
    *(double*)((uint8*)THIS$1 + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) = (double)*(uint8*)NIBBLES$;
    *(double*)((uint8*)THIS$1 + ((int64)HIBASE$ << (3ll & 63ll))) = (double)((((uint64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) )) & 65280ull) >> (8ll & 63ll));
   }
   goto label$3671;
   label$3672:;
   if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$3674;
   label$3675:;
   {
    *(double*)((uint8*)THIS$1 + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) = (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll));
    *(double*)((uint8*)THIS$1 + ((int64)HIBASE$ << (3ll & 63ll))) = (double)((((uint64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) )) & 65280ull) >> (8ll & 63ll));
   }
   goto label$3671;
   label$3674:;
   if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$3676;
   label$3677:;
   {
    *(double*)((uint8*)THIS$1 + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) = (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll));
    *(double*)((uint8*)THIS$1 + ((int64)HIBASE$ << (3ll & 63ll))) = (double)((((uint64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) )) & 65280ull) >> (8ll & 63ll));
   }
   goto label$3671;
   label$3676:;
   if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$3678;
   label$3679:;
   {
    *(double*)((uint8*)THIS$1 + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) = (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll));
    *(double*)((uint8*)THIS$1 + ((int64)HIBASE$ << (3ll & 63ll))) = (double)((((uint64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) )) & 65280ull) >> (8ll & 63ll));
   }
   goto label$3671;
   label$3678:;
   if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$3680;
   label$3681:;
   {
    *(double*)((uint8*)THIS$1 + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) = (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll));
    *(double*)((uint8*)THIS$1 + ((int64)HIBASE$ << (3ll & 63ll))) = (double)((((uint64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) )) & 65280ull) >> (8ll & 63ll));
   }
   goto label$3671;
   label$3680:;
   if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$3682;
   label$3683:;
   {
    *(double*)((uint8*)THIS$1 + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) = (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)));
    *(double*)((uint8*)THIS$1 + ((int64)HIBASE$ << (3ll & 63ll))) = (double)((((uint64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) )) & 65280ull) >> (8ll & 63ll));
   }
   goto label$3671;
   label$3682:;
   if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$3684;
   label$3685:;
   {
    *(double*)((uint8*)THIS$1 + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) = (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)));
    *(double*)((uint8*)THIS$1 + ((int64)HIBASE$ << (3ll & 63ll))) = (double)((((uint64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) )) & 65280ull) >> (8ll & 63ll));
   }
   goto label$3671;
   label$3684:;
   if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$3686;
   label$3687:;
   {
    *(double*)((uint8*)THIS$1 + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) = (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)));
    *(double*)((uint8*)THIS$1 + ((int64)HIBASE$ << (3ll & 63ll))) = (double)((((uint64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) )) & 65280ull) >> (8ll & 63ll));
   }
   goto label$3671;
   label$3686:;
   if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$3688;
   label$3689:;
   {
    *(double*)((uint8*)THIS$1 + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) = (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll));
    *(double*)((uint8*)THIS$1 + ((int64)HIBASE$ << (3ll & 63ll))) = (double)((((uint64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) )) & 65280ull) >> (8ll & 63ll));
   }
   goto label$3671;
   label$3688:;
   if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$3690;
   label$3691:;
   {
    *(double*)((uint8*)THIS$1 + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) = (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)));
    *(double*)((uint8*)THIS$1 + ((int64)HIBASE$ << (3ll & 63ll))) = (double)((((uint64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) )) & 65280ull) >> (8ll & 63ll));
   }
   goto label$3671;
   label$3690:;
   if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$3692;
   label$3693:;
   {
    *(double*)((uint8*)THIS$1 + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) = (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)));
    *(double*)((uint8*)THIS$1 + ((int64)HIBASE$ << (3ll & 63ll))) = (double)((((uint64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) )) & 65280ull) >> (8ll & 63ll));
   }
   goto label$3671;
   label$3692:;
   if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$3694;
   label$3695:;
   {
    *(double*)((uint8*)THIS$1 + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) = (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)));
    *(double*)((uint8*)THIS$1 + ((int64)HIBASE$ << (3ll & 63ll))) = (double)((((uint64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) )) & 65280ull) >> (8ll & 63ll));
   }
   goto label$3671;
   label$3694:;
   if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$3696;
   label$3697:;
   {
    *(double*)((uint8*)THIS$1 + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) = (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll));
    *(double*)((uint8*)THIS$1 + ((int64)HIBASE$ << (3ll & 63ll))) = (double)((((uint64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) )) & 65280ull) >> (8ll & 63ll));
   }
   goto label$3671;
   label$3696:;
   if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$3698;
   label$3699:;
   {
    *(double*)((uint8*)THIS$1 + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) = (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)));
    *(double*)((uint8*)THIS$1 + ((int64)HIBASE$ << (3ll & 63ll))) = (double)((((uint64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) )) & 65280ull) >> (8ll & 63ll));
   }
   goto label$3671;
   label$3698:;
   if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$3700;
   label$3701:;
   {
    *(double*)((uint8*)THIS$1 + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) = (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)));
    *(double*)((uint8*)THIS$1 + 5184ll) = (double)((((uint64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) )) & 65280ull) >> (8ll & 63ll));
   }
   goto label$3671;
   label$3700:;
   if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$3702;
   label$3703:;
   {
    *(double*)((uint8*)THIS$1 + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) = (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)));
    *(double*)((uint8*)THIS$1 + ((int64)HIBASE$ << (3ll & 63ll))) = (double)((((uint64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) )) & 65280ull) >> (8ll & 63ll));
   }
   label$3702:;
   label$3671:;
  }
 }
 goto label$3669;
 label$3670:;
 if( ((((((((int64)-(ADR$1 == (double)(int64)SP0X$) | (int64)-(ADR$1 == (double)(int64)SP1X$)) | (int64)-(ADR$1 == (double)(int64)SP2X$)) | (int64)-(ADR$1 == (double)(int64)SP3X$)) | (int64)-(ADR$1 == (double)(int64)SP4X$)) | (int64)-(ADR$1 == (double)(int64)SP5X$)) | (int64)-(ADR$1 == (double)(int64)SP6X$)) | (int64)-(ADR$1 == (double)(int64)SP7X$)) == 0ll ) goto label$3704;
 {
  *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( ADR$1 )) << (3ll & 63ll))) = V$1;
 }
 goto label$3669;
 label$3704:;
 if( ((((((((int64)-(ADR$1 == (double)(int64)SP0Y$) | (int64)-(ADR$1 == (double)(int64)SP1Y$)) | (int64)-(ADR$1 == (double)(int64)SP2Y$)) | (int64)-(ADR$1 == (double)(int64)SP3Y$)) | (int64)-(ADR$1 == (double)(int64)SP4Y$)) | (int64)-(ADR$1 == (double)(int64)SP5Y$)) | (int64)-(ADR$1 == (double)(int64)SP6Y$)) | (int64)-(ADR$1 == (double)(int64)SP7Y$)) == 0ll ) goto label$3705;
 {
  *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( ADR$1 )) << (3ll & 63ll))) = V$1;
 }
 goto label$3669;
 label$3705:;
 if( ((((((((int64)-(ADR$1 == (double)(int64)SP0COL$) | (int64)-(ADR$1 == (double)(int64)SP1COL$)) | (int64)-(ADR$1 == (double)(int64)SP2COL$)) | (int64)-(ADR$1 == (double)(int64)SP3COL$)) | (int64)-(ADR$1 == (double)(int64)SP4COL$)) | (int64)-(ADR$1 == (double)(int64)SP5COL$)) | (int64)-(ADR$1 == (double)(int64)SP6COL$)) | (int64)-(ADR$1 == (double)(int64)SP7COL$)) == 0ll ) goto label$3706;
 {
  _ZN8MEMORY_T6POKE64Edd( THIS$1, (double)FCOLOR$, V$1 );
 }
 goto label$3669;
 label$3706:;
 if( ADR$1 != (double)(int64)SPENA$ ) goto label$3707;
 {
 }
 goto label$3669;
 label$3707:;
 if( ADR$1 != (double)(int64)RASTR$ ) goto label$3708;
 {
  fb_GfxPut( (void*)0ull, 0x0p+0f, (float)V$1, (void*)RASTER$, -65536, -65536, -65536, -65536, 0, 6, (void*)&fb_hPutAlpha, -1, (void*)0ull, (void*)0ull );
 }
 goto label$3669;
 label$3708:;
 if( ADR$1 != (double)(int64)EXTCOL$ ) goto label$3709;
 {
  if( V$1 != (double)(int64)*(uint8*)NIBBLES$ ) goto label$3711;
  goto label$3712;
  label$3711:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$3714;
  goto label$3715;
  label$3714:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) ) goto label$3717;
  goto label$3718;
  label$3717:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) ) goto label$3720;
  goto label$3721;
  label$3720:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) ) goto label$3723;
  goto label$3724;
  label$3723:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) ) goto label$3726;
  goto label$3727;
  label$3726:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) ) goto label$3729;
  goto label$3730;
  label$3729:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) ) goto label$3732;
  goto label$3733;
  label$3732:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) ) goto label$3735;
  goto label$3736;
  label$3735:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) ) goto label$3738;
  goto label$3739;
  label$3738:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) ) goto label$3741;
  goto label$3742;
  label$3741:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) ) goto label$3744;
  goto label$3745;
  label$3744:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) ) goto label$3747;
  goto label$3748;
  label$3747:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) ) goto label$3750;
  goto label$3751;
  label$3750:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) ) goto label$3753;
  goto label$3754;
  label$3753:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) ) goto label$3756;
  goto label$3757;
  label$3756:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$3759;
  goto label$3760;
  label$3759:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$3762;
  goto label$3763;
  label$3762:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$3765;
  goto label$3766;
  label$3765:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$3768;
  goto label$3769;
  label$3768:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$3771;
  goto label$3772;
  label$3771:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$3774;
  goto label$3775;
  label$3774:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$3777;
  goto label$3778;
  label$3777:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$3780;
  goto label$3781;
  label$3780:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$3783;
  goto label$3784;
  label$3783:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$3786;
  goto label$3787;
  label$3786:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$3789;
  goto label$3790;
  label$3789:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$3792;
  goto label$3793;
  label$3792:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$3795;
  goto label$3796;
  label$3795:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$3798;
  goto label$3799;
  label$3798:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$3801;
  goto label$3802;
  label$3801:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$3804;
  goto label$3805;
  label$3804:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$3807;
  goto label$3808;
  label$3807:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$3810;
  goto label$3811;
  label$3810:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$3813;
  goto label$3814;
  label$3813:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$3816;
  goto label$3817;
  label$3816:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$3819;
  goto label$3820;
  label$3819:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$3822;
  goto label$3823;
  label$3822:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$3825;
  goto label$3826;
  label$3825:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$3828;
  goto label$3829;
  label$3828:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$3831;
  goto label$3832;
  label$3831:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$3834;
  goto label$3835;
  label$3834:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$3837;
  goto label$3838;
  label$3837:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$3840;
  goto label$3841;
  label$3840:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$3843;
  goto label$3844;
  label$3843:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$3846;
  goto label$3847;
  label$3846:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$3849;
  goto label$3850;
  label$3849:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$3852;
  goto label$3853;
  label$3852:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$3855;
  goto label$3856;
  label$3855:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$3858;
  goto label$3859;
  label$3858:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$3861;
  goto label$3862;
  label$3861:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$3864;
  goto label$3865;
  label$3864:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$3867;
  goto label$3868;
  label$3867:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$3870;
  goto label$3871;
  label$3870:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$3873;
  goto label$3874;
  label$3873:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$3876;
  goto label$3877;
  label$3876:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$3879;
  goto label$3880;
  label$3879:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$3882;
  goto label$3883;
  label$3882:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$3885;
  goto label$3886;
  label$3885:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$3888;
  goto label$3889;
  label$3888:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$3891;
  goto label$3892;
  label$3891:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$3894;
  goto label$3895;
  label$3894:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$3897;
  goto label$3898;
  label$3897:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$3900;
  goto label$3901;
  label$3900:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$3903;
  goto label$3904;
  label$3903:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$3906;
  goto label$3907;
  label$3906:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$3909;
  goto label$3910;
  label$3909:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$3912;
  goto label$3913;
  label$3912:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$3915;
  goto label$3916;
  label$3915:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$3918;
  goto label$3919;
  label$3918:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$3921;
  goto label$3922;
  label$3921:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$3924;
  goto label$3925;
  label$3924:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$3927;
  goto label$3928;
  label$3927:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$3930;
  goto label$3931;
  label$3930:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$3933;
  goto label$3934;
  label$3933:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$3936;
  goto label$3937;
  label$3936:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$3939;
  goto label$3940;
  label$3939:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$3942;
  goto label$3943;
  label$3942:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$3945;
  goto label$3946;
  label$3945:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$3948;
  goto label$3949;
  label$3948:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$3951;
  goto label$3952;
  label$3951:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$3954;
  goto label$3955;
  label$3954:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$3957;
  goto label$3958;
  label$3957:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$3960;
  goto label$3961;
  label$3960:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$3963;
  goto label$3964;
  label$3963:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$3966;
  goto label$3967;
  label$3966:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$3969;
  goto label$3970;
  label$3969:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$3972;
  goto label$3973;
  label$3972:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$3975;
  goto label$3976;
  label$3975:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$3978;
  goto label$3979;
  label$3978:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$3981;
  goto label$3982;
  label$3981:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$3984;
  goto label$3985;
  label$3984:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$3987;
  goto label$3988;
  label$3987:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$3990;
  goto label$3991;
  label$3990:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$3993;
  goto label$3994;
  label$3993:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$3996;
  goto label$3997;
  label$3996:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$3999;
  goto label$4000;
  label$3999:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$4002;
  goto label$4003;
  label$4002:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$4005;
  goto label$4006;
  label$4005:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$4008;
  goto label$4009;
  label$4008:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$4011;
  goto label$4012;
  label$4011:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$4014;
  goto label$4015;
  label$4014:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$4017;
  goto label$4018;
  label$4017:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$4020;
  goto label$4021;
  label$4020:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$4023;
  goto label$4024;
  label$4023:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$4026;
  goto label$4027;
  label$4026:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$4029;
  goto label$4030;
  label$4029:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$4032;
  goto label$4033;
  label$4032:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$4035;
  goto label$4036;
  label$4035:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$4038;
  goto label$4039;
  label$4038:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$4041;
  goto label$4042;
  label$4041:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$4044;
  goto label$4045;
  label$4044:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$4047;
  goto label$4048;
  label$4047:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$4050;
  goto label$4051;
  label$4050:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$4053;
  goto label$4054;
  label$4053:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$4056;
  goto label$4057;
  label$4056:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$4059;
  goto label$4060;
  label$4059:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$4062;
  goto label$4063;
  label$4062:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$4065;
  goto label$4066;
  label$4065:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$4068;
  goto label$4069;
  label$4068:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$4071;
  goto label$4072;
  label$4071:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$4074;
  goto label$4075;
  label$4074:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$4077;
  goto label$4078;
  label$4077:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$4080;
  goto label$4081;
  label$4080:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$4083;
  goto label$4084;
  label$4083:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$4086;
  goto label$4087;
  label$4086:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$4089;
  goto label$4090;
  label$4089:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$4092;
  goto label$4093;
  label$4092:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$4095;
  goto label$4096;
  label$4095:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$4098;
  goto label$4099;
  label$4098:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$4101;
  goto label$4102;
  label$4101:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$4104;
  goto label$4105;
  label$4104:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$4107;
  goto label$4108;
  label$4107:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$4110;
  goto label$4111;
  label$4110:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$4113;
  goto label$4114;
  label$4113:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$4116;
  goto label$4117;
  label$4116:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$4119;
  goto label$4120;
  label$4119:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$4122;
  goto label$4123;
  label$4122:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$4125;
  goto label$4126;
  label$4125:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$4128;
  goto label$4129;
  label$4128:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$4131;
  goto label$4132;
  label$4131:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$4134;
  goto label$4135;
  label$4134:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$4137;
  goto label$4138;
  label$4137:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$4140;
  goto label$4141;
  label$4140:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$4143;
  goto label$4144;
  label$4143:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$4146;
  goto label$4147;
  label$4146:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$4149;
  goto label$4150;
  label$4149:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$4152;
  goto label$4153;
  label$4152:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$4155;
  goto label$4156;
  label$4155:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$4158;
  goto label$4159;
  label$4158:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$4161;
  goto label$4162;
  label$4161:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$4164;
  goto label$4165;
  label$4164:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$4167;
  goto label$4168;
  label$4167:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$4170;
  goto label$4171;
  label$4170:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$4173;
  goto label$4174;
  label$4173:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$4176;
  goto label$4177;
  label$4176:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$4179;
  goto label$4180;
  label$4179:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$4182;
  goto label$4183;
  label$4182:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$4185;
  goto label$4186;
  label$4185:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$4188;
  goto label$4189;
  label$4188:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$4191;
  goto label$4192;
  label$4191:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$4194;
  goto label$4195;
  label$4194:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$4197;
  goto label$4198;
  label$4197:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$4200;
  goto label$4201;
  label$4200:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$4203;
  goto label$4204;
  label$4203:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$4206;
  goto label$4207;
  label$4206:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$4209;
  goto label$4210;
  label$4209:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$4212;
  goto label$4213;
  label$4212:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$4215;
  goto label$4216;
  label$4215:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$4218;
  goto label$4219;
  label$4218:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$4221;
  goto label$4222;
  label$4221:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$4224;
  goto label$4225;
  label$4224:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$4227;
  goto label$4228;
  label$4227:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$4230;
  goto label$4231;
  label$4230:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$4233;
  goto label$4234;
  label$4233:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$4236;
  goto label$4237;
  label$4236:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$4239;
  goto label$4240;
  label$4239:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$4242;
  goto label$4243;
  label$4242:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$4245;
  goto label$4246;
  label$4245:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$4248;
  goto label$4249;
  label$4248:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$4251;
  goto label$4252;
  label$4251:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$4254;
  goto label$4255;
  label$4254:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$4257;
  goto label$4258;
  label$4257:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$4260;
  goto label$4261;
  label$4260:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$4263;
  goto label$4264;
  label$4263:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$4266;
  goto label$4267;
  label$4266:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$4269;
  goto label$4270;
  label$4269:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$4272;
  goto label$4273;
  label$4272:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$4275;
  goto label$4276;
  label$4275:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$4278;
  goto label$4279;
  label$4278:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$4281;
  goto label$4282;
  label$4281:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$4284;
  goto label$4285;
  label$4284:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$4287;
  goto label$4288;
  label$4287:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$4290;
  goto label$4291;
  label$4290:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$4293;
  goto label$4294;
  label$4293:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$4296;
  goto label$4297;
  label$4296:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$4299;
  goto label$4300;
  label$4299:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$4302;
  goto label$4303;
  label$4302:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$4305;
  goto label$4306;
  label$4305:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$4308;
  goto label$4309;
  label$4308:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$4311;
  goto label$4312;
  label$4311:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$4314;
  goto label$4315;
  label$4314:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$4317;
  goto label$4318;
  label$4317:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$4320;
  goto label$4321;
  label$4320:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$4323;
  goto label$4324;
  label$4323:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$4326;
  goto label$4327;
  label$4326:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$4329;
  goto label$4330;
  label$4329:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$4332;
  goto label$4333;
  label$4332:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$4335;
  goto label$4336;
  label$4335:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$4338;
  goto label$4339;
  label$4338:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$4341;
  goto label$4342;
  label$4341:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$4344;
  goto label$4345;
  label$4344:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$4347;
  goto label$4348;
  label$4347:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$4350;
  goto label$4351;
  label$4350:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$4353;
  goto label$4354;
  label$4353:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$4356;
  goto label$4357;
  label$4356:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$4359;
  goto label$4360;
  label$4359:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$4362;
  goto label$4363;
  label$4362:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$4365;
  goto label$4366;
  label$4365:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$4368;
  goto label$4369;
  label$4368:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$4371;
  goto label$4372;
  label$4371:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$4374;
  goto label$4375;
  label$4374:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$4377;
  goto label$4378;
  label$4377:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$4380;
  goto label$4381;
  label$4380:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$4383;
  goto label$4384;
  label$4383:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$4386;
  goto label$4387;
  label$4386:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$4389;
  goto label$4390;
  label$4389:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$4392;
  goto label$4393;
  label$4392:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$4395;
  goto label$4396;
  label$4395:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$4398;
  goto label$4399;
  label$4398:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$4401;
  goto label$4402;
  label$4401:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$4404;
  goto label$4405;
  label$4404:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$4407;
  goto label$4408;
  label$4407:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$4410;
  goto label$4411;
  label$4410:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$4413;
  goto label$4414;
  label$4413:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$4416;
  goto label$4417;
  label$4416:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$4419;
  goto label$4420;
  label$4419:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$4422;
  goto label$4423;
  label$4422:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$4425;
  goto label$4426;
  label$4425:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$4428;
  goto label$4429;
  label$4428:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$4431;
  goto label$4432;
  label$4431:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$4434;
  goto label$4435;
  label$4434:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$4437;
  goto label$4438;
  label$4437:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$4440;
  goto label$4441;
  label$4440:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$4443;
  goto label$4444;
  label$4443:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$4446;
  goto label$4447;
  label$4446:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$4449;
  goto label$4450;
  label$4449:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$4452;
  goto label$4453;
  label$4452:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$4455;
  goto label$4456;
  label$4455:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$4458;
  goto label$4459;
  label$4458:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$4461;
  goto label$4462;
  label$4461:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$4464;
  goto label$4465;
  label$4464:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$4467;
  goto label$4468;
  label$4467:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$4470;
  goto label$4471;
  label$4470:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$4473;
  goto label$4474;
  label$4473:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$4476;
  goto label$4477;
  label$4476:;
  goto label$4478;
  label$3712:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)(((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll));
  goto label$4479;
  label$3715:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 51ll);
  goto label$4479;
  label$3718:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 102ll);
  goto label$4479;
  label$3721:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 153ll);
  goto label$4479;
  label$3724:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 204ll);
  goto label$4479;
  label$3727:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 255ll);
  goto label$4479;
  label$3730:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 13056ll);
  goto label$4479;
  label$3733:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 13107ll);
  goto label$4479;
  label$3736:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 13158ll);
  goto label$4479;
  label$3739:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 13209ll);
  goto label$4479;
  label$3742:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 13260ll);
  goto label$4479;
  label$3745:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 13311ll);
  goto label$4479;
  label$3748:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 26112ll);
  goto label$4479;
  label$3751:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 26163ll);
  goto label$4479;
  label$3754:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 26214ll);
  goto label$4479;
  label$3757:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 26265ll);
  goto label$4479;
  label$3760:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 26316ll);
  goto label$4479;
  label$3763:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 26367ll);
  goto label$4479;
  label$3766:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 39168ll);
  goto label$4479;
  label$3769:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 39219ll);
  goto label$4479;
  label$3772:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 39270ll);
  goto label$4479;
  label$3775:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 39321ll);
  goto label$4479;
  label$3778:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 39372ll);
  goto label$4479;
  label$3781:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 39423ll);
  goto label$4479;
  label$3784:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 52224ll);
  goto label$4479;
  label$3787:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 52275ll);
  goto label$4479;
  label$3790:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 52326ll);
  goto label$4479;
  label$3793:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 52377ll);
  goto label$4479;
  label$3796:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 52428ll);
  goto label$4479;
  label$3799:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 52479ll);
  goto label$4479;
  label$3802:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 65280ll);
  goto label$4479;
  label$3805:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 65331ll);
  goto label$4479;
  label$3808:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 65382ll);
  goto label$4479;
  label$3811:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 65433ll);
  goto label$4479;
  label$3814:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 65484ll);
  goto label$4479;
  label$3817:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 65535ll);
  goto label$4479;
  label$3820:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 3342336ll);
  goto label$4479;
  label$3823:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 3342387ll);
  goto label$4479;
  label$3826:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 3342438ll);
  goto label$4479;
  label$3829:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 3342489ll);
  goto label$4479;
  label$3832:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 3342540ll);
  goto label$4479;
  label$3835:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 3342591ll);
  goto label$4479;
  label$3838:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 3355392ll);
  goto label$4479;
  label$3841:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 3355443ll);
  goto label$4479;
  label$3844:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 3355494ll);
  goto label$4479;
  label$3847:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 3355545ll);
  goto label$4479;
  label$3850:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 3355596ll);
  goto label$4479;
  label$3853:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 3355647ll);
  goto label$4479;
  label$3856:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 3368448ll);
  goto label$4479;
  label$3859:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 3368499ll);
  goto label$4479;
  label$3862:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 3368550ll);
  goto label$4479;
  label$3865:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 3368601ll);
  goto label$4479;
  label$3868:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 3368652ll);
  goto label$4479;
  label$3871:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 3368703ll);
  goto label$4479;
  label$3874:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 3381504ll);
  goto label$4479;
  label$3877:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 3381555ll);
  goto label$4479;
  label$3880:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 3381606ll);
  goto label$4479;
  label$3883:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 3381657ll);
  goto label$4479;
  label$3886:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 3381708ll);
  goto label$4479;
  label$3889:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 3381759ll);
  goto label$4479;
  label$3892:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 3394560ll);
  goto label$4479;
  label$3895:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 3394611ll);
  goto label$4479;
  label$3898:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 3394662ll);
  goto label$4479;
  label$3901:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 3394713ll);
  goto label$4479;
  label$3904:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 3394764ll);
  goto label$4479;
  label$3907:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 3394815ll);
  goto label$4479;
  label$3910:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 3407616ll);
  goto label$4479;
  label$3913:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 3407667ll);
  goto label$4479;
  label$3916:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 3407718ll);
  goto label$4479;
  label$3919:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 3407769ll);
  goto label$4479;
  label$3922:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 3407820ll);
  goto label$4479;
  label$3925:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 3407871ll);
  goto label$4479;
  label$3928:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 6684672ll);
  goto label$4479;
  label$3931:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 6684723ll);
  goto label$4479;
  label$3934:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 6684774ll);
  goto label$4479;
  label$3937:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 6684825ll);
  goto label$4479;
  label$3940:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 6684876ll);
  goto label$4479;
  label$3943:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 6684927ll);
  goto label$4479;
  label$3946:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 6697728ll);
  goto label$4479;
  label$3949:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 6697779ll);
  goto label$4479;
  label$3952:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 6697830ll);
  goto label$4479;
  label$3955:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 6697881ll);
  goto label$4479;
  label$3958:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 6697932ll);
  goto label$4479;
  label$3961:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 6697983ll);
  goto label$4479;
  label$3964:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 6710784ll);
  goto label$4479;
  label$3967:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 6710835ll);
  goto label$4479;
  label$3970:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 6710886ll);
  goto label$4479;
  label$3973:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 6710937ll);
  goto label$4479;
  label$3976:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 6710988ll);
  goto label$4479;
  label$3979:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 6711039ll);
  goto label$4479;
  label$3982:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 6723840ll);
  goto label$4479;
  label$3985:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 6723891ll);
  goto label$4479;
  label$3988:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 6723942ll);
  goto label$4479;
  label$3991:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 6723993ll);
  goto label$4479;
  label$3994:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 6724095ll);
  goto label$4479;
  label$3997:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 6736896ll);
  goto label$4479;
  label$4000:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 6736947ll);
  goto label$4479;
  label$4003:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 6736998ll);
  goto label$4479;
  label$4006:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 6737049ll);
  goto label$4479;
  label$4009:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 6737100ll);
  goto label$4479;
  label$4012:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 6737151ll);
  goto label$4479;
  label$4015:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 6749952ll);
  goto label$4479;
  label$4018:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 6750003ll);
  goto label$4479;
  label$4021:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 6750054ll);
  goto label$4479;
  label$4024:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 6750105ll);
  goto label$4479;
  label$4027:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 6750156ll);
  goto label$4479;
  label$4030:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 6750207ll);
  goto label$4479;
  label$4033:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 10027008ll);
  goto label$4479;
  label$4036:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 10027059ll);
  goto label$4479;
  label$4039:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 10027110ll);
  goto label$4479;
  label$4042:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 10027161ll);
  goto label$4479;
  label$4045:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 10027212ll);
  goto label$4479;
  label$4048:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 10027263ll);
  goto label$4479;
  label$4051:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 10040064ll);
  goto label$4479;
  label$4054:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 10040115ll);
  goto label$4479;
  label$4057:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 10040166ll);
  goto label$4479;
  label$4060:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 10040217ll);
  goto label$4479;
  label$4063:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 10040268ll);
  goto label$4479;
  label$4066:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 10040319ll);
  goto label$4479;
  label$4069:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 10053120ll);
  goto label$4479;
  label$4072:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 10053171ll);
  goto label$4479;
  label$4075:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 10053222ll);
  goto label$4479;
  label$4078:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 10053273ll);
  goto label$4479;
  label$4081:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 10053324ll);
  goto label$4479;
  label$4084:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 10053375ll);
  goto label$4479;
  label$4087:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 10066176ll);
  goto label$4479;
  label$4090:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 10066227ll);
  goto label$4479;
  label$4093:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 10066278ll);
  goto label$4479;
  label$4096:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 10066329ll);
  goto label$4479;
  label$4099:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 10066380ll);
  goto label$4479;
  label$4102:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 10066431ll);
  goto label$4479;
  label$4105:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 10079232ll);
  goto label$4479;
  label$4108:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 10079283ll);
  goto label$4479;
  label$4111:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 10079334ll);
  goto label$4479;
  label$4114:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 10079385ll);
  goto label$4479;
  label$4117:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 10079436ll);
  goto label$4479;
  label$4120:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 10079487ll);
  goto label$4479;
  label$4123:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 10092288ll);
  goto label$4479;
  label$4126:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 10092339ll);
  goto label$4479;
  label$4129:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 10092390ll);
  goto label$4479;
  label$4132:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 10092441ll);
  goto label$4479;
  label$4135:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 10092492ll);
  goto label$4479;
  label$4138:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 10092543ll);
  goto label$4479;
  label$4141:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 13369344ll);
  goto label$4479;
  label$4144:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 13369395ll);
  goto label$4479;
  label$4147:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 13369446ll);
  goto label$4479;
  label$4150:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 13369497ll);
  goto label$4479;
  label$4153:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 13369548ll);
  goto label$4479;
  label$4156:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 13369599ll);
  goto label$4479;
  label$4159:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 13382400ll);
  goto label$4479;
  label$4162:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 13382451ll);
  goto label$4479;
  label$4165:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 13382502ll);
  goto label$4479;
  label$4168:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 13382553ll);
  goto label$4479;
  label$4171:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 13382604ll);
  goto label$4479;
  label$4174:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 13382655ll);
  goto label$4479;
  label$4177:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 13395456ll);
  goto label$4479;
  label$4180:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 13395507ll);
  goto label$4479;
  label$4183:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 13395558ll);
  goto label$4479;
  label$4186:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 13395609ll);
  goto label$4479;
  label$4189:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 13395660ll);
  goto label$4479;
  label$4192:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 13395711ll);
  goto label$4479;
  label$4195:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 13408512ll);
  goto label$4479;
  label$4198:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 13408563ll);
  goto label$4479;
  label$4201:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 13408614ll);
  goto label$4479;
  label$4204:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 13408665ll);
  goto label$4479;
  label$4207:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 13408716ll);
  goto label$4479;
  label$4210:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 13408767ll);
  goto label$4479;
  label$4213:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 13421568ll);
  goto label$4479;
  label$4216:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 13421619ll);
  goto label$4479;
  label$4219:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 13421670ll);
  goto label$4479;
  label$4222:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 13421721ll);
  goto label$4479;
  label$4225:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 13421772ll);
  goto label$4479;
  label$4228:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 13421823ll);
  goto label$4479;
  label$4231:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 13434624ll);
  goto label$4479;
  label$4234:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 13434675ll);
  goto label$4479;
  label$4237:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 13434726ll);
  goto label$4479;
  label$4240:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 13434777ll);
  goto label$4479;
  label$4243:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 13434828ll);
  goto label$4479;
  label$4246:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 13434879ll);
  goto label$4479;
  label$4249:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 16711680ll);
  goto label$4479;
  label$4252:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 16711731ll);
  goto label$4479;
  label$4255:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 16711782ll);
  goto label$4479;
  label$4258:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 16711833ll);
  goto label$4479;
  label$4261:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 16711884ll);
  goto label$4479;
  label$4264:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 16711935ll);
  goto label$4479;
  label$4267:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 16724736ll);
  goto label$4479;
  label$4270:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 16724787ll);
  goto label$4479;
  label$4273:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 16724838ll);
  goto label$4479;
  label$4276:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 16724889ll);
  goto label$4479;
  label$4279:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 16724940ll);
  goto label$4479;
  label$4282:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 16724991ll);
  goto label$4479;
  label$4285:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 16737792ll);
  goto label$4479;
  label$4288:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 16737843ll);
  goto label$4479;
  label$4291:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 16737894ll);
  goto label$4479;
  label$4294:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 16737945ll);
  goto label$4479;
  label$4297:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 16737996ll);
  goto label$4479;
  label$4300:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 16738047ll);
  goto label$4479;
  label$4303:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 16750848ll);
  goto label$4479;
  label$4306:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 16750899ll);
  goto label$4479;
  label$4309:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 16750950ll);
  goto label$4479;
  label$4312:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 16751001ll);
  goto label$4479;
  label$4315:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 16751052ll);
  goto label$4479;
  label$4318:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 16763904ll);
  goto label$4479;
  label$4321:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 16763955ll);
  goto label$4479;
  label$4324:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 16764006ll);
  goto label$4479;
  label$4327:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 16764057ll);
  goto label$4479;
  label$4330:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 16764108ll);
  goto label$4479;
  label$4333:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 16764159ll);
  goto label$4479;
  label$4336:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 16776960ll);
  goto label$4479;
  label$4339:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 16777011ll);
  goto label$4479;
  label$4342:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 16777062ll);
  goto label$4479;
  label$4345:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 16777113ll);
  goto label$4479;
  label$4348:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 16777164ll);
  goto label$4479;
  label$4351:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 16777215ll);
  goto label$4479;
  label$4354:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 14737632ll);
  goto label$4479;
  label$4357:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 12698049ll);
  goto label$4479;
  label$4360:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 10658466ll);
  goto label$4479;
  label$4363:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 8618883ll);
  goto label$4479;
  label$4366:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 6579300ll);
  goto label$4479;
  label$4369:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 4539717ll);
  goto label$4479;
  label$4372:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 4605510ll);
  goto label$4479;
  label$4375:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 460551ll);
  goto label$4479;
  label$4378:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 3342336ll);
  goto label$4479;
  label$4381:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)(((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll));
  goto label$4479;
  label$4384:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 6684672ll);
  goto label$4479;
  label$4387:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 10027008ll);
  goto label$4479;
  label$4390:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 13369344ll);
  goto label$4479;
  label$4393:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 16711680ll);
  goto label$4479;
  label$4396:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 13382400ll);
  goto label$4479;
  label$4399:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 10053120ll);
  goto label$4479;
  label$4402:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 6723840ll);
  goto label$4479;
  label$4405:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 3394560ll);
  goto label$4479;
  label$4408:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 65280ll);
  goto label$4479;
  label$4411:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 52275ll);
  goto label$4479;
  label$4414:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 39270ll);
  goto label$4479;
  label$4417:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 26265ll);
  goto label$4479;
  label$4420:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 13260ll);
  goto label$4479;
  label$4423:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 255ll);
  goto label$4479;
  label$4426:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 3342540ll);
  goto label$4479;
  label$4429:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 6684825ll);
  goto label$4479;
  label$4432:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 10027110ll);
  goto label$4479;
  label$4435:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 13369395ll);
  goto label$4479;
  label$4438:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 16711680ll);
  goto label$4479;
  label$4441:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 13382400ll);
  goto label$4479;
  label$4444:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 10053120ll);
  goto label$4479;
  label$4447:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 6723840ll);
  goto label$4479;
  label$4450:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 3394560ll);
  goto label$4479;
  label$4453:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 16756736ll);
  goto label$4479;
  label$4456:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 16760832ll);
  goto label$4479;
  label$4459:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 3407616ll);
  goto label$4479;
  label$4462:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 3407667ll);
  goto label$4479;
  label$4465:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 65331ll);
  goto label$4479;
  label$4468:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 6750054ll);
  goto label$4479;
  label$4471:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 65382ll);
  goto label$4479;
  label$4474:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 2631720ll);
  goto label$4479;
  label$4477:;
  *(double*)((uint8*)THIS$1 + 395656ll) = (double)((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + 2631720ll);
  goto label$4479;
  label$4479:;
  fb_GfxLine( BGIMAGE$, 0x0p+0f, 0x0p+0f, 0x1.DFCp+10f, 0x1.0DCp+10f, (uint32)((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395656ll) )), 2, 65535u, 0 );
  label$4480:;
 }
 goto label$3669;
 label$3709:;
 if( ((((int64)-(ADR$1 == (double)(int64)BGCOL0$) | (int64)-(ADR$1 == (double)(int64)BGCOL1$)) | (int64)-(ADR$1 == (double)(int64)BGCOL2$)) | (int64)-(ADR$1 == (double)(int64)BGCOL3$)) == 0ll ) goto label$4481;
 {
  if( V$1 != (double)(int64)*(uint8*)NIBBLES$ ) goto label$4483;
  goto label$4484;
  label$4483:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$4486;
  goto label$4487;
  label$4486:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) ) goto label$4489;
  goto label$4490;
  label$4489:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) ) goto label$4492;
  goto label$4493;
  label$4492:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) ) goto label$4495;
  goto label$4496;
  label$4495:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) ) goto label$4498;
  goto label$4499;
  label$4498:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) ) goto label$4501;
  goto label$4502;
  label$4501:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) ) goto label$4504;
  goto label$4505;
  label$4504:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) ) goto label$4507;
  goto label$4508;
  label$4507:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) ) goto label$4510;
  goto label$4511;
  label$4510:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) ) goto label$4513;
  goto label$4514;
  label$4513:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) ) goto label$4516;
  goto label$4517;
  label$4516:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) ) goto label$4519;
  goto label$4520;
  label$4519:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) ) goto label$4522;
  goto label$4523;
  label$4522:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) ) goto label$4525;
  goto label$4526;
  label$4525:;
  if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) ) goto label$4528;
  goto label$4529;
  label$4528:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$4531;
  goto label$4532;
  label$4531:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$4534;
  goto label$4535;
  label$4534:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$4537;
  goto label$4538;
  label$4537:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$4540;
  goto label$4541;
  label$4540:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$4543;
  goto label$4544;
  label$4543:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$4546;
  goto label$4547;
  label$4546:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$4549;
  goto label$4550;
  label$4549:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$4552;
  goto label$4553;
  label$4552:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$4555;
  goto label$4556;
  label$4555:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$4558;
  goto label$4559;
  label$4558:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$4561;
  goto label$4562;
  label$4561:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$4564;
  goto label$4565;
  label$4564:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$4567;
  goto label$4568;
  label$4567:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$4570;
  goto label$4571;
  label$4570:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$4573;
  goto label$4574;
  label$4573:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$4576;
  goto label$4577;
  label$4576:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$4579;
  goto label$4580;
  label$4579:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$4582;
  goto label$4583;
  label$4582:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$4585;
  goto label$4586;
  label$4585:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$4588;
  goto label$4589;
  label$4588:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$4591;
  goto label$4592;
  label$4591:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$4594;
  goto label$4595;
  label$4594:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$4597;
  goto label$4598;
  label$4597:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$4600;
  goto label$4601;
  label$4600:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$4603;
  goto label$4604;
  label$4603:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$4606;
  goto label$4607;
  label$4606:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$4609;
  goto label$4610;
  label$4609:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$4612;
  goto label$4613;
  label$4612:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$4615;
  goto label$4616;
  label$4615:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$4618;
  goto label$4619;
  label$4618:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$4621;
  goto label$4622;
  label$4621:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$4624;
  goto label$4625;
  label$4624:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$4627;
  goto label$4628;
  label$4627:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$4630;
  goto label$4631;
  label$4630:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$4633;
  goto label$4634;
  label$4633:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$4636;
  goto label$4637;
  label$4636:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$4639;
  goto label$4640;
  label$4639:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$4642;
  goto label$4643;
  label$4642:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$4645;
  goto label$4646;
  label$4645:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$4648;
  goto label$4649;
  label$4648:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$4651;
  goto label$4652;
  label$4651:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$4654;
  goto label$4655;
  label$4654:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$4657;
  goto label$4658;
  label$4657:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$4660;
  goto label$4661;
  label$4660:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$4663;
  goto label$4664;
  label$4663:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$4666;
  goto label$4667;
  label$4666:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$4669;
  goto label$4670;
  label$4669:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$4672;
  goto label$4673;
  label$4672:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$4675;
  goto label$4676;
  label$4675:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$4678;
  goto label$4679;
  label$4678:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$4681;
  goto label$4682;
  label$4681:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$4684;
  goto label$4685;
  label$4684:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$4687;
  goto label$4688;
  label$4687:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$4690;
  goto label$4691;
  label$4690:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$4693;
  goto label$4694;
  label$4693:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$4696;
  goto label$4697;
  label$4696:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$4699;
  goto label$4700;
  label$4699:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$4702;
  goto label$4703;
  label$4702:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$4705;
  goto label$4706;
  label$4705:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$4708;
  goto label$4709;
  label$4708:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$4711;
  goto label$4712;
  label$4711:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$4714;
  goto label$4715;
  label$4714:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$4717;
  goto label$4718;
  label$4717:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$4720;
  goto label$4721;
  label$4720:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$4723;
  goto label$4724;
  label$4723:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$4726;
  goto label$4727;
  label$4726:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$4729;
  goto label$4730;
  label$4729:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$4732;
  goto label$4733;
  label$4732:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$4735;
  goto label$4736;
  label$4735:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$4738;
  goto label$4739;
  label$4738:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$4741;
  goto label$4742;
  label$4741:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$4744;
  goto label$4745;
  label$4744:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$4747;
  goto label$4748;
  label$4747:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$4750;
  goto label$4751;
  label$4750:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$4753;
  goto label$4754;
  label$4753:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$4756;
  goto label$4757;
  label$4756:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$4759;
  goto label$4760;
  label$4759:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$4762;
  goto label$4763;
  label$4762:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$4765;
  goto label$4766;
  label$4765:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$4768;
  goto label$4769;
  label$4768:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$4771;
  goto label$4772;
  label$4771:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$4774;
  goto label$4775;
  label$4774:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$4777;
  goto label$4778;
  label$4777:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$4780;
  goto label$4781;
  label$4780:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$4783;
  goto label$4784;
  label$4783:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$4786;
  goto label$4787;
  label$4786:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$4789;
  goto label$4790;
  label$4789:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$4792;
  goto label$4793;
  label$4792:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$4795;
  goto label$4796;
  label$4795:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$4798;
  goto label$4799;
  label$4798:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$4801;
  goto label$4802;
  label$4801:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$4804;
  goto label$4805;
  label$4804:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$4807;
  goto label$4808;
  label$4807:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$4810;
  goto label$4811;
  label$4810:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$4813;
  goto label$4814;
  label$4813:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$4816;
  goto label$4817;
  label$4816:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$4819;
  goto label$4820;
  label$4819:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$4822;
  goto label$4823;
  label$4822:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$4825;
  goto label$4826;
  label$4825:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$4828;
  goto label$4829;
  label$4828:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$4831;
  goto label$4832;
  label$4831:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$4834;
  goto label$4835;
  label$4834:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$4837;
  goto label$4838;
  label$4837:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$4840;
  goto label$4841;
  label$4840:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$4843;
  goto label$4844;
  label$4843:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$4846;
  goto label$4847;
  label$4846:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$4849;
  goto label$4850;
  label$4849:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$4852;
  goto label$4853;
  label$4852:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$4855;
  goto label$4856;
  label$4855:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$4858;
  goto label$4859;
  label$4858:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$4861;
  goto label$4862;
  label$4861:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$4864;
  goto label$4865;
  label$4864:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$4867;
  goto label$4868;
  label$4867:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$4870;
  goto label$4871;
  label$4870:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$4873;
  goto label$4874;
  label$4873:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$4876;
  goto label$4877;
  label$4876:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$4879;
  goto label$4880;
  label$4879:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$4882;
  goto label$4883;
  label$4882:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$4885;
  goto label$4886;
  label$4885:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$4888;
  goto label$4889;
  label$4888:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$4891;
  goto label$4892;
  label$4891:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$4894;
  goto label$4895;
  label$4894:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$4897;
  goto label$4898;
  label$4897:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$4900;
  goto label$4901;
  label$4900:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$4903;
  goto label$4904;
  label$4903:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$4906;
  goto label$4907;
  label$4906:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$4909;
  goto label$4910;
  label$4909:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$4912;
  goto label$4913;
  label$4912:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$4915;
  goto label$4916;
  label$4915:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$4918;
  goto label$4919;
  label$4918:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$4921;
  goto label$4922;
  label$4921:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$4924;
  goto label$4925;
  label$4924:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$4927;
  goto label$4928;
  label$4927:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$4930;
  goto label$4931;
  label$4930:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$4933;
  goto label$4934;
  label$4933:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$4936;
  goto label$4937;
  label$4936:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$4939;
  goto label$4940;
  label$4939:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$4942;
  goto label$4943;
  label$4942:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$4945;
  goto label$4946;
  label$4945:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$4948;
  goto label$4949;
  label$4948:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$4951;
  goto label$4952;
  label$4951:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$4954;
  goto label$4955;
  label$4954:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$4957;
  goto label$4958;
  label$4957:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$4960;
  goto label$4961;
  label$4960:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$4963;
  goto label$4964;
  label$4963:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$4966;
  goto label$4967;
  label$4966:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$4969;
  goto label$4970;
  label$4969:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$4972;
  goto label$4973;
  label$4972:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$4975;
  goto label$4976;
  label$4975:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$4978;
  goto label$4979;
  label$4978:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$4981;
  goto label$4982;
  label$4981:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$4984;
  goto label$4985;
  label$4984:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$4987;
  goto label$4988;
  label$4987:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$4990;
  goto label$4991;
  label$4990:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$4993;
  goto label$4994;
  label$4993:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$4996;
  goto label$4997;
  label$4996:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$4999;
  goto label$5000;
  label$4999:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$5002;
  goto label$5003;
  label$5002:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$5005;
  goto label$5006;
  label$5005:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$5008;
  goto label$5009;
  label$5008:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$5011;
  goto label$5012;
  label$5011:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$5014;
  goto label$5015;
  label$5014:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$5017;
  goto label$5018;
  label$5017:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$5020;
  goto label$5021;
  label$5020:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$5023;
  goto label$5024;
  label$5023:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$5026;
  goto label$5027;
  label$5026:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$5029;
  goto label$5030;
  label$5029:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$5032;
  goto label$5033;
  label$5032:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$5035;
  goto label$5036;
  label$5035:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$5038;
  goto label$5039;
  label$5038:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$5041;
  goto label$5042;
  label$5041:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$5044;
  goto label$5045;
  label$5044:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$5047;
  goto label$5048;
  label$5047:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$5050;
  goto label$5051;
  label$5050:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$5053;
  goto label$5054;
  label$5053:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$5056;
  goto label$5057;
  label$5056:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$5059;
  goto label$5060;
  label$5059:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$5062;
  goto label$5063;
  label$5062:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$5065;
  goto label$5066;
  label$5065:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$5068;
  goto label$5069;
  label$5068:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$5071;
  goto label$5072;
  label$5071:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$5074;
  goto label$5075;
  label$5074:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$5077;
  goto label$5078;
  label$5077:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$5080;
  goto label$5081;
  label$5080:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$5083;
  goto label$5084;
  label$5083:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$5086;
  goto label$5087;
  label$5086:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$5089;
  goto label$5090;
  label$5089:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$5092;
  goto label$5093;
  label$5092:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$5095;
  goto label$5096;
  label$5095:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$5098;
  goto label$5099;
  label$5098:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$5101;
  goto label$5102;
  label$5101:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$5104;
  goto label$5105;
  label$5104:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$5107;
  goto label$5108;
  label$5107:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$5110;
  goto label$5111;
  label$5110:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$5113;
  goto label$5114;
  label$5113:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$5116;
  goto label$5117;
  label$5116:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$5119;
  goto label$5120;
  label$5119:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$5122;
  goto label$5123;
  label$5122:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$5125;
  goto label$5126;
  label$5125:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$5128;
  goto label$5129;
  label$5128:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$5131;
  goto label$5132;
  label$5131:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$5134;
  goto label$5135;
  label$5134:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$5137;
  goto label$5138;
  label$5137:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$5140;
  goto label$5141;
  label$5140:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$5143;
  goto label$5144;
  label$5143:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$5146;
  goto label$5147;
  label$5146:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$5149;
  goto label$5150;
  label$5149:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$5152;
  goto label$5153;
  label$5152:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$5155;
  goto label$5156;
  label$5155:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$5158;
  goto label$5159;
  label$5158:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$5161;
  goto label$5162;
  label$5161:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$5164;
  goto label$5165;
  label$5164:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$5167;
  goto label$5168;
  label$5167:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$5170;
  goto label$5171;
  label$5170:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$5173;
  goto label$5174;
  label$5173:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$5176;
  goto label$5177;
  label$5176:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$5179;
  goto label$5180;
  label$5179:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$5182;
  goto label$5183;
  label$5182:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$5185;
  goto label$5186;
  label$5185:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$5188;
  goto label$5189;
  label$5188:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$5191;
  goto label$5192;
  label$5191:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$5194;
  goto label$5195;
  label$5194:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$5197;
  goto label$5198;
  label$5197:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$5200;
  goto label$5201;
  label$5200:;
  if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$5203;
  goto label$5204;
  label$5203:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$5206;
  goto label$5207;
  label$5206:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$5209;
  goto label$5210;
  label$5209:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$5212;
  goto label$5213;
  label$5212:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$5215;
  goto label$5216;
  label$5215:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$5218;
  goto label$5219;
  label$5218:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$5221;
  goto label$5222;
  label$5221:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$5224;
  goto label$5225;
  label$5224:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$5227;
  goto label$5228;
  label$5227:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$5230;
  goto label$5231;
  label$5230:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$5233;
  goto label$5234;
  label$5233:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$5236;
  goto label$5237;
  label$5236:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$5239;
  goto label$5240;
  label$5239:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$5242;
  goto label$5243;
  label$5242:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$5245;
  goto label$5246;
  label$5245:;
  if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$5248;
  goto label$5249;
  label$5248:;
  goto label$4478;
  label$4484:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$4478;
  label$4487:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$4478;
  label$4490:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$4478;
  label$4493:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$4478;
  label$4496:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$4478;
  label$4499:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$4478;
  label$4502:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$4478;
  label$4505:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$4478;
  label$4508:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$4478;
  label$4511:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$4478;
  label$4514:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$4478;
  label$4517:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$4478;
  label$4520:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$4478;
  label$4523:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$4478;
  label$4526:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$4478;
  label$4529:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$4478;
  label$4532:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$4478;
  label$4535:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$4478;
  label$4538:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$4478;
  label$4541:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$4478;
  label$4544:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$4478;
  label$4547:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$4478;
  label$4550:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$4478;
  label$4553:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$4478;
  label$4556:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$4478;
  label$4559:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$4478;
  label$4562:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$4478;
  label$4565:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$4478;
  label$4568:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$4478;
  label$4571:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$4478;
  label$4574:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$4478;
  label$4577:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$4478;
  label$4580:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$4478;
  label$4583:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$4478;
  label$4586:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$4478;
  label$4589:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$4478;
  label$4592:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$4478;
  label$4595:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$4478;
  label$4598:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$4478;
  label$4601:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$4478;
  label$4604:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$4478;
  label$4607:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$4478;
  label$4610:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$4478;
  label$4613:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$4478;
  label$4616:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$4478;
  label$4619:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$4478;
  label$4622:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$4478;
  label$4625:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$4478;
  label$4628:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$4478;
  label$4631:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$4478;
  label$4634:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$4478;
  label$4637:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$4478;
  label$4640:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$4478;
  label$4643:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$4478;
  label$4646:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$4478;
  label$4649:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$4478;
  label$4652:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$4478;
  label$4655:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$4478;
  label$4658:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$4478;
  label$4661:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$4478;
  label$4664:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$4478;
  label$4667:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$4478;
  label$4670:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$4478;
  label$4673:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$4478;
  label$4676:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$4478;
  label$4679:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$4478;
  label$4682:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$4478;
  label$4685:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$4478;
  label$4688:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$4478;
  label$4691:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$4478;
  label$4694:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$4478;
  label$4697:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$4478;
  label$4700:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$4478;
  label$4703:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$4478;
  label$4706:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$4478;
  label$4709:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$4478;
  label$4712:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$4478;
  label$4715:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$4478;
  label$4718:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$4478;
  label$4721:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$4478;
  label$4724:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$4478;
  label$4727:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$4478;
  label$4730:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$4478;
  label$4733:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$4478;
  label$4736:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$4478;
  label$4739:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$4478;
  label$4742:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$4478;
  label$4745:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$4478;
  label$4748:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$4478;
  label$4751:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$4478;
  label$4754:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$4478;
  label$4757:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$4478;
  label$4760:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$4478;
  label$4763:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$4478;
  label$4766:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$4478;
  label$4769:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$4478;
  label$4772:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$4478;
  label$4775:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$4478;
  label$4778:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$4478;
  label$4781:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$4478;
  label$4784:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$4478;
  label$4787:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$4478;
  label$4790:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$4478;
  label$4793:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$4478;
  label$4796:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$4478;
  label$4799:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$4478;
  label$4802:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$4478;
  label$4805:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$4478;
  label$4808:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$4478;
  label$4811:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$4478;
  label$4814:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$4478;
  label$4817:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$4478;
  label$4820:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$4478;
  label$4823:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$4478;
  label$4826:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$4478;
  label$4829:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$4478;
  label$4832:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$4478;
  label$4835:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$4478;
  label$4838:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$4478;
  label$4841:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$4478;
  label$4844:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$4478;
  label$4847:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$4478;
  label$4850:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$4478;
  label$4853:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$4478;
  label$4856:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$4478;
  label$4859:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$4478;
  label$4862:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$4478;
  label$4865:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$4478;
  label$4868:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$4478;
  label$4871:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$4478;
  label$4874:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$4478;
  label$4877:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$4478;
  label$4880:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$4478;
  label$4883:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$4478;
  label$4886:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$4478;
  label$4889:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$4478;
  label$4892:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$4478;
  label$4895:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$4478;
  label$4898:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$4478;
  label$4901:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$4478;
  label$4904:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$4478;
  label$4907:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$4478;
  label$4910:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$4478;
  label$4913:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$4478;
  label$4916:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$4478;
  label$4919:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$4478;
  label$4922:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$4478;
  label$4925:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$4478;
  label$4928:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$4478;
  label$4931:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$4478;
  label$4934:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$4478;
  label$4937:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$4478;
  label$4940:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$4478;
  label$4943:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$4478;
  label$4946:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$4478;
  label$4949:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$4478;
  label$4952:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$4478;
  label$4955:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$4478;
  label$4958:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$4478;
  label$4961:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$4478;
  label$4964:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$4478;
  label$4967:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$4478;
  label$4970:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$4478;
  label$4973:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$4478;
  label$4976:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$4478;
  label$4979:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$4478;
  label$4982:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$4478;
  label$4985:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$4478;
  label$4988:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$4478;
  label$4991:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$4478;
  label$4994:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$4478;
  label$4997:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$4478;
  label$5000:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$4478;
  label$5003:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$4478;
  label$5006:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$4478;
  label$5009:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$4478;
  label$5012:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$4478;
  label$5015:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$4478;
  label$5018:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$4478;
  label$5021:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$4478;
  label$5024:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$4478;
  label$5027:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$4478;
  label$5030:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$4478;
  label$5033:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$4478;
  label$5036:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$4478;
  label$5039:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$4478;
  label$5042:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$4478;
  label$5045:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$4478;
  label$5048:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$4478;
  label$5051:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$4478;
  label$5054:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$4478;
  label$5057:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$4478;
  label$5060:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$4478;
  label$5063:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$4478;
  label$5066:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$4478;
  label$5069:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$4478;
  label$5072:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$4478;
  label$5075:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$4478;
  label$5078:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$4478;
  label$5081:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$4478;
  label$5084:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$4478;
  label$5087:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$4478;
  label$5090:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$4478;
  label$5093:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$4478;
  label$5096:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$4478;
  label$5099:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$4478;
  label$5102:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$4478;
  label$5105:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$4478;
  label$5108:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$4478;
  label$5111:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$4478;
  label$5114:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$4478;
  label$5117:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$4478;
  label$5120:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$4478;
  label$5123:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$4478;
  label$5126:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$4478;
  label$5129:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.Cp+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.Cp+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.Cp+7 );
  goto label$4478;
  label$5132:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.82p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.82p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.82p+7 );
  goto label$4478;
  label$5135:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.44p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.44p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.44p+7 );
  goto label$4478;
  label$5138:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.06p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.06p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.06p+7 );
  goto label$4478;
  label$5141:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.9p+6 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.9p+6 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.9p+6 );
  goto label$4478;
  label$5144:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.14p+6 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.14p+6 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.14p+6 );
  goto label$4478;
  label$5147:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.3p+5 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.3p+5 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.3p+5 );
  goto label$4478;
  label$5150:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.Cp+2 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.Cp+2 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.Cp+2 );
  goto label$4478;
  label$5153:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$4478;
  label$5156:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$4478;
  label$5159:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$4478;
  label$5162:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$4478;
  label$5165:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$4478;
  label$5168:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$4478;
  label$5171:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$4478;
  label$5174:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$4478;
  label$5177:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$4478;
  label$5180:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$4478;
  label$5183:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$4478;
  label$5186:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$4478;
  label$5189:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$4478;
  label$5192:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$4478;
  label$5195:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$4478;
  label$5198:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.FEp+7 );
  goto label$4478;
  label$5201:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+7 );
  goto label$4478;
  label$5204:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.32p+7 );
  goto label$4478;
  label$5207:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$4478;
  label$5210:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$4478;
  label$5213:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$4478;
  label$5216:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+5 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$4478;
  label$5219:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.32p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+6 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$4478;
  label$5222:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.32p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$4478;
  label$5225:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.98p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$4478;
  label$5228:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.6p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$4478;
  label$5231:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.FEp+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.8p+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$4478;
  label$5234:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x0p+0 );
  goto label$4478;
  label$5237:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+5 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$4478;
  label$5240:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+5 );
  goto label$4478;
  label$5243:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.98p+6 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$4478;
  label$5246:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x0p+0 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.FEp+7 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.98p+6 );
  goto label$4478;
  label$5249:;
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Cp+15, 0x1.4p+5 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.800Ep+15, 0x1.4p+5 );
  _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.801p+15, 0x1.4p+5 );
  goto label$4478;
  label$4478:;
 }
 label$4481:;
 label$3669:;
 {
  if( ADR$1 != (double)(int64)*(uint8*)NIBBLES$ ) goto label$5251;
  label$5252:;
  {
  }
  goto label$5250;
  label$5251:;
  if( ADR$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) ) goto label$5253;
  label$5254:;
  {
   FBSTRING TMP$2191$3;
   FBSTRING TMP$2192$3;
   fb_GfxScreen( 0, 8, 0, 0, 0 );
   FBSTRING* vr$6798 = fb_DoubleToStr( V$1 );
   __builtin_memset( &TMP$2191$3, 0, 24ll );
   FBSTRING* vr$6801 = fb_StrConcat( &TMP$2191$3, (void*)"mplayer -vo xv -fs -alang en dv://", 35ll, (void*)vr$6798, -1ll );
   __builtin_memset( &TMP$2192$3, 0, 24ll );
   FBSTRING* vr$6804 = fb_StrConcat( &TMP$2192$3, (void*)vr$6801, -1ll, (void*)" -dvd-device /dev/sr0", 22ll );
   fb_Shell( (FBSTRING*)vr$6804 );
   fb_GfxScreenRes( 1920, 1080, 32, 7, 64, 0 );
   fb_Cls( -65536 );
   FBSTRING* vr$6805 = fb_StrAllocTempDescZEx( (uint8*)"", 0ll );
   fb_GfxPaint( (void*)0ull, 0x0p+0f, 0x0p+0f, 4278190080u, 0u, (FBSTRING*)vr$6805, 0, 1073741828 );
  }
  goto label$5250;
  label$5253:;
  if( ADR$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$5255;
  label$5256:;
  {
   fb_GfxScreen( 0, 8, 0, 0, 0 );
   FBSTRING* vr$6812 = fb_StrAllocTempDescZEx( (uint8*)"mplayer -vo xv -fs dvdnav:// -mouse-movements -dvd-device /dev/sr0", 66ll );
   fb_Shell( (FBSTRING*)vr$6812 );
   fb_GfxScreenRes( 1920, 1080, 32, 7, 64, 0 );
   fb_Cls( -65536 );
   FBSTRING* vr$6813 = fb_StrAllocTempDescZEx( (uint8*)"", 0ll );
   fb_GfxPaint( (void*)0ull, 0x0p+0f, 0x0p+0f, 4278190080u, 0u, (FBSTRING*)vr$6813, 0, 1073741828 );
  }
  goto label$5250;
  label$5255:;
  if( ADR$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$5257;
  label$5258:;
  {
   *(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) << (3ll & 63ll))) = (double)(((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) << (3ll & 63ll))) )) << ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) << (3ll & 63ll))) )) << (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) << (3ll & 63ll))) )) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + *(double*)((uint8*)THIS$1 + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) << (3ll & 63ll)));
  }
  goto label$5250;
  label$5257:;
  if( ADR$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$5259;
  label$5260:;
  {
   *(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) << (3ll & 63ll))) = (double)(((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) << (3ll & 63ll))) )) << ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) << (3ll & 63ll))) )) << (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) << (3ll & 63ll))) )) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + *(double*)((uint8*)THIS$1 + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) << (3ll & 63ll)));
  }
  goto label$5250;
  label$5259:;
  if( ADR$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$5261;
  label$5262:;
  {
   *(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) << (3ll & 63ll))) = (double)(((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) << (3ll & 63ll))) )) << ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) << (3ll & 63ll))) )) << (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) << (3ll & 63ll))) )) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + *(double*)((uint8*)THIS$1 + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) << (3ll & 63ll)));
  }
  goto label$5250;
  label$5261:;
  if( ADR$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$5263;
  label$5264:;
  {
   *(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) << (3ll & 63ll))) = (double)(((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) << (3ll & 63ll))) )) << ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) << (3ll & 63ll))) )) << (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) << (3ll & 63ll))) )) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + *(double*)((uint8*)THIS$1 + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) << (3ll & 63ll)));
  }
  goto label$5250;
  label$5263:;
  if( ADR$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$5265;
  label$5266:;
  {
   *(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) << (3ll & 63ll))) = (double)(((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) << (3ll & 63ll))) )) << ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) << (3ll & 63ll))) )) << (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) << (3ll & 63ll))) )) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + *(double*)((uint8*)THIS$1 + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) << (3ll & 63ll)));
  }
  goto label$5250;
  label$5265:;
  if( ADR$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$5267;
  label$5268:;
  {
   *(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) << (3ll & 63ll))) = (double)(((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) << (3ll & 63ll))) )) << ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) << (3ll & 63ll))) )) << (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) << (3ll & 63ll))) )) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + *(double*)((uint8*)THIS$1 + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) << (3ll & 63ll)));
  }
  goto label$5250;
  label$5267:;
  if( ADR$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$5269;
  label$5270:;
  {
   *(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) << (3ll & 63ll))) = (double)(((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) << (3ll & 63ll))) )) << ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) << (3ll & 63ll))) )) << (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) << (3ll & 63ll))) )) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + *(double*)((uint8*)THIS$1 + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) << (3ll & 63ll)));
  }
  goto label$5250;
  label$5269:;
  if( ADR$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$5271;
  label$5272:;
  {
   *(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) << (3ll & 63ll))) = (double)(((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) << (3ll & 63ll))) )) << ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) << (3ll & 63ll))) )) << (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) << (3ll & 63ll))) )) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + *(double*)((uint8*)THIS$1 + ((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) << (3ll & 63ll)));
  }
  goto label$5250;
  label$5271:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$5273;
  label$5274:;
  {
   *(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) = (double)((((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 393304ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 393312ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 393320ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 393328ll) )) << (8ll & 63ll))) + *(double*)((uint8*)THIS$1 + 393336ll);
  }
  goto label$5250;
  label$5273:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$5275;
  label$5276:;
  {
   *(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) << (3ll & 63ll))) = (double)((((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 393352ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 393360ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 393368ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 393376ll) )) << (8ll & 63ll))) + *(double*)((uint8*)THIS$1 + 393384ll);
  }
  goto label$5250;
  label$5275:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$5277;
  label$5278:;
  {
   *(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) << (3ll & 63ll))) = (double)((((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 393400ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 393408ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 393416ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 393424ll) )) << (8ll & 63ll))) + *(double*)((uint8*)THIS$1 + 393432ll);
  }
  goto label$5250;
  label$5277:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$5279;
  label$5280:;
  {
   *(double*)((uint8*)THIS$1 + 394864ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 393448ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 393456ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 393464ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 393472ll) )) << (8ll & 63ll))) + *(double*)((uint8*)THIS$1 + 393480ll);
  }
  goto label$5250;
  label$5279:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$5281;
  label$5282:;
  {
   *(double*)((uint8*)THIS$1 + 394872ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 393496ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 393504ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 393512ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 393520ll) )) << (8ll & 63ll))) + *(double*)((uint8*)THIS$1 + 393528ll);
  }
  goto label$5250;
  label$5281:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$5283;
  label$5284:;
  {
   *(double*)((uint8*)THIS$1 + 394880ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 393544ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 393552ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 393560ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 393568ll) )) << (8ll & 63ll))) + *(double*)((uint8*)THIS$1 + 393576ll);
  }
  goto label$5250;
  label$5283:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$5285;
  label$5286:;
  {
   *(double*)((uint8*)THIS$1 + 394888ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 393592ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 393600ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 393608ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 393616ll) )) << (8ll & 63ll))) + *(double*)((uint8*)THIS$1 + 393624ll);
  }
  goto label$5250;
  label$5285:;
  if( ADR$1 != 0x1.8068p+15 ) goto label$5287;
  label$5288:;
  {
   *(double*)((uint8*)THIS$1 + 394896ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 393640ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 393648ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 393656ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 393664ll) )) << (8ll & 63ll))) + *(double*)((uint8*)THIS$1 + 393672ll);
  }
  goto label$5250;
  label$5287:;
  if( ADR$1 != 0x1.8074p+15 ) goto label$5289;
  label$5290:;
  {
   *(double*)((uint8*)THIS$1 + 394904ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 393688ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 393696ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 393704ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 393712ll) )) << (8ll & 63ll))) + *(double*)((uint8*)THIS$1 + 393720ll);
  }
  goto label$5250;
  label$5289:;
  if( ADR$1 != 0x1.808p+15 ) goto label$5291;
  label$5292:;
  {
   *(double*)((uint8*)THIS$1 + 394912ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 393736ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 393744ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 393752ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 393768ll) )) << (8ll & 63ll))) + *(double*)((uint8*)THIS$1 + 393776ll);
  }
  goto label$5250;
  label$5291:;
  if( ADR$1 != 0x1.808Ep+15 ) goto label$5293;
  label$5294:;
  {
   *(double*)((uint8*)THIS$1 + 394920ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 393792ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 393800ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 393808ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 393816ll) )) << (8ll & 63ll))) + *(double*)((uint8*)THIS$1 + 393824ll);
  }
  goto label$5250;
  label$5293:;
  if( ADR$1 != 0x1.8096p+15 ) goto label$5295;
  label$5296:;
  {
   *(double*)((uint8*)THIS$1 + 394928ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 393832ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 393840ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 393848ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 393856ll) )) << (8ll & 63ll))) + *(double*)((uint8*)THIS$1 + 393864ll);
  }
  goto label$5250;
  label$5295:;
  if( ADR$1 != 0x1.80A4p+15 ) goto label$5297;
  label$5298:;
  {
   *(double*)((uint8*)THIS$1 + 394936ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 393880ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 393888ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 393896ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 393904ll) )) << (8ll & 63ll))) + *(double*)((uint8*)THIS$1 + 393912ll);
  }
  goto label$5250;
  label$5297:;
  if( ADR$1 != 0x1.80Bp+15 ) goto label$5299;
  label$5300:;
  {
   *(double*)((uint8*)THIS$1 + 394944ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 393928ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 393936ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 393944ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 393952ll) )) << (8ll & 63ll))) + *(double*)((uint8*)THIS$1 + 393960ll);
  }
  goto label$5250;
  label$5299:;
  if( ADR$1 != 0x1.80BCp+15 ) goto label$5301;
  label$5302:;
  {
   *(double*)((uint8*)THIS$1 + 394952ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 393976ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 393984ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 393992ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394000ll) )) << (8ll & 63ll))) + *(double*)((uint8*)THIS$1 + 394008ll);
  }
  goto label$5250;
  label$5301:;
  if( ADR$1 != 0x1.80C8p+15 ) goto label$5303;
  label$5304:;
  {
   *(double*)((uint8*)THIS$1 + 394960ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394024ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394032ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 386040ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394048ll) )) << (8ll & 63ll))) + *(double*)((uint8*)THIS$1 + 394056ll);
  }
  goto label$5250;
  label$5303:;
  if( ADR$1 != 0x1.80D4p+15 ) goto label$5305;
  label$5306:;
  {
   *(double*)((uint8*)THIS$1 + 394968ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394072ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394080ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394088ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394096ll) )) << (8ll & 63ll))) + *(double*)((uint8*)THIS$1 + 394104ll);
  }
  goto label$5250;
  label$5305:;
  if( ADR$1 != 0x1.80Ep+15 ) goto label$5307;
  label$5308:;
  {
   *(double*)((uint8*)THIS$1 + 394976ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394120ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394128ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394136ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394144ll) )) << (8ll & 63ll))) + *(double*)((uint8*)THIS$1 + 394152ll);
  }
  goto label$5250;
  label$5307:;
  if( ADR$1 != 0x1.80ECp+15 ) goto label$5309;
  label$5310:;
  {
   *(double*)((uint8*)THIS$1 + 394984ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394168ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394176ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394184ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394192ll) )) << (8ll & 63ll))) + *(double*)((uint8*)THIS$1 + 394200ll);
  }
  goto label$5250;
  label$5309:;
  if( ADR$1 != 0x1.80F8p+15 ) goto label$5311;
  label$5312:;
  {
   *(double*)((uint8*)THIS$1 + 394992ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394216ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394224ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394232ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394240ll) )) << (8ll & 63ll))) + *(double*)((uint8*)THIS$1 + 394248ll);
  }
  goto label$5250;
  label$5311:;
  if( ADR$1 != 0x1.8104p+15 ) goto label$5313;
  label$5314:;
  {
   *(double*)((uint8*)THIS$1 + 395000ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394264ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394272ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394280ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394288ll) )) << (8ll & 63ll))) + *(double*)((uint8*)THIS$1 + 394296ll);
  }
  goto label$5250;
  label$5313:;
  if( ADR$1 != 0x1.811p+15 ) goto label$5315;
  label$5316:;
  {
   *(double*)((uint8*)THIS$1 + 395008ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394312ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394320ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394328ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394336ll) )) << (8ll & 63ll))) + *(double*)((uint8*)THIS$1 + 394344ll);
  }
  goto label$5250;
  label$5315:;
  if( ADR$1 != 0x1.811Cp+15 ) goto label$5317;
  label$5318:;
  {
   *(double*)((uint8*)THIS$1 + 395016ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394360ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394368ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394376ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394384ll) )) << (8ll & 63ll))) + *(double*)((uint8*)THIS$1 + 394392ll);
  }
  goto label$5250;
  label$5317:;
  if( ADR$1 != 0x1.8128p+15 ) goto label$5319;
  label$5320:;
  {
   *(double*)((uint8*)THIS$1 + 395024ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394408ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394416ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394424ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394432ll) )) << (8ll & 63ll))) + *(double*)((uint8*)THIS$1 + 394440ll);
  }
  goto label$5250;
  label$5319:;
  if( ADR$1 != 0x1.8134p+15 ) goto label$5321;
  label$5322:;
  {
   *(double*)((uint8*)THIS$1 + 395032ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394456ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394464ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394472ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394480ll) )) << (8ll & 63ll))) + *(double*)((uint8*)THIS$1 + 394488ll);
  }
  goto label$5250;
  label$5321:;
  if( ADR$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) ) goto label$5323;
  label$5324:;
  {
   typedef void (*_ZN8MEMORY_T8tmp$2194Ellllb)( int64, int64, int64, int64, boolean );
   ((_ZN8MEMORY_T8tmp$2194Ellllb)&GLSCREEN)( ((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394952ll) )), ((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394960ll) )), -1ll, -1ll, (boolean)1ll );
  }
  goto label$5250;
  label$5323:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$5325;
  label$5326:;
  {
   {
    uint64 TMP$2195$4;
    TMP$2195$4 = ((uint64)__builtin_nearbyint( V$1 ));
    goto label$5328;
    label$5329:;
    {
     FBSTRING TMP$2204$5;
     boolean BFULLSCREEN$5;
     __builtin_memset( &BFULLSCREEN$5, 0, 1ll );
     boolean BTEXTURED$5;
     __builtin_memset( &BTEXTURED$5, 0, 1ll );
     boolean BNOISE$5;
     __builtin_memset( &BNOISE$5, 0, 1ll );
     boolean BLINEAR$5;
     __builtin_memset( &BLINEAR$5, 0, 1ll );
     boolean BNEAREST$5;
     __builtin_memset( &BNEAREST$5, 0, 1ll );
     boolean BNEARESTLINEAR$5;
     __builtin_memset( &BNEARESTLINEAR$5, 0, 1ll );
     boolean BLINEARNEAREST$5;
     __builtin_memset( &BLINEARNEAREST$5, 0, 1ll );
     boolean BMIPMAP$5;
     __builtin_memset( &BMIPMAP$5, 0, 1ll );
     boolean BREPEAT$5;
     __builtin_memset( &BREPEAT$5, 0, 1ll );
     *(double*)((uint8*)THIS$1 + 394952ll) = 0x1.Ep+10;
     *(double*)((uint8*)THIS$1 + 394960ll) = 0x1.0Ep+10;
     _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.814p+15, 0x0p+0 );
     struct $4VEC3 V3$5;
     __builtin_memset( &V3$5, 0, 12ll );
     *(float*)&V3$5 = 0x1.Ep+10f;
     *(float*)((uint8*)&V3$5 + 4ll) = 0x1.0Ep+10f;
     *(float*)((uint8*)&V3$5 + 8ll) = (float)((double)*(float*)&V3$5 / (double)*(float*)((uint8*)&V3$5 + 4ll));
     struct $9SHADERTOY SHADER$5;
     _ZN9SHADERTOYC1Ev( &SHADER$5 );
     int64 vr$7938 = fb_StrLen( (void*)&FILENAME$, -1ll );
     if( vr$7938 != 0ll ) goto label$5331;
     {
      BTEXTURED$5 = (boolean)1ll;
      fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"./shaders/pc/demo.glsl", 23ll, 0 );
     }
     label$5331:;
     label$5330:;
     boolean vr$7940 = _ZN9SHADERTOY11COMPILEFILEER8FBSTRING( &SHADER$5, &FILENAME$ );
     if( vr$7940 != (boolean)0ll ) goto label$5333;
     {
      FBSTRING TMP$2199$6;
      FBSTRING TMP$2200$6;
      FBSTRING TMP$2201$6;
      FBSTRING TMP$2202$6;
      __builtin_memset( &TMP$2202$6, 0, 24ll );
      __builtin_memset( &TMP$2199$6, 0, 24ll );
      FBSTRING* vr$7945 = fb_StrConcat( &TMP$2199$6, (void*)"file: ", 7ll, (void*)&FILENAME$, -1ll );
      __builtin_memset( &TMP$2200$6, 0, 24ll );
      FBSTRING* vr$7948 = fb_StrConcat( &TMP$2200$6, (void*)vr$7945, -1ll, (void*)"\x0A\x0A", 3ll );
      __builtin_memset( &TMP$2201$6, 0, 24ll );
      FBSTRING* vr$7951 = fb_StrConcat( &TMP$2201$6, (void*)vr$7948, -1ll, (void*)((uint8*)&SHADER$5 + 8ll), -1ll );
      fb_StrAssign( (void*)&TMP$2202$6, -1ll, (void*)vr$7951, -1ll, 0 );
      ERROREXIT( &TMP$2202$6 );
      fb_StrDelete( (FBSTRING*)&TMP$2202$6 );
     }
     label$5333:;
     label$5332:;
     __builtin_memset( &TMP$2204$5, 0, 24ll );
     FBSTRING* vr$7957 = fb_StrConcat( &TMP$2204$5, (void*)&FILENAME$, -1ll, (void*)" ok ...", 8ll );
     fb_GfxSetWindowTitle( (FBSTRING*)vr$7957 );
     (GLUSEPROGRAM$)( *(uint32*)((uint8*)&SHADER$5 + 4ll) );
     int32 TEXTURES$5[4];
     __builtin_memset( (int32*)TEXTURES$5, 0, 16ll );
     struct $N8MEMORY_T8FBARRAY1IiEE {
      int32* DATA;
      int32* PTR;
      int64 SIZE;
      int64 ELEMENT_LEN;
      int64 DIMENSIONS;
      int64 FLAGS;
      struct $16__FB_ARRAYDIMTB$ DIMTB[1];
     };
     extern int __$fb_structsizecheck[(sizeof( struct $N8MEMORY_T8FBARRAY1IiEE ) == 72) ? 1 : -1];
     struct $N8MEMORY_T8FBARRAY1IiEE tmp$2205$5;
     *(int32**)&tmp$2205$5 = (int32*)TEXTURES$5;
     *(int32**)((uint8*)&tmp$2205$5 + 8ll) = (int32*)TEXTURES$5;
     *(int64*)((uint8*)&tmp$2205$5 + 16ll) = 16ll;
     *(int64*)((uint8*)&tmp$2205$5 + 24ll) = 4ll;
     *(int64*)((uint8*)&tmp$2205$5 + 32ll) = 1ll;
     *(int64*)((uint8*)&tmp$2205$5 + 40ll) = 49ll;
     *(int64*)((uint8*)&tmp$2205$5 + 48ll) = 4ll;
     *(int64*)((uint8*)&tmp$2205$5 + 56ll) = 0ll;
     *(int64*)((uint8*)&tmp$2205$5 + 64ll) = 3ll;
     glGenTextures( 4, (uint32*)TEXTURES$5 );
     if( BTEXTURED$5 == (boolean)0ll ) goto label$5335;
     {
      int64 TMP$2209$6;
      if( FGIMAGE$ != (void*)0ull ) goto label$5337;
      {
       void* vr$7962 = fb_GfxImageCreate( 512, 512, 4278190080u, 32, 0 );
       FGIMAGE$ = vr$7962;
       if( BNOISE$5 != (boolean)1ll ) goto label$5339;
       {
        {
         int64 Y$9;
         Y$9 = 0ll;
         label$5343:;
         {
          {
           int64 X$11;
           X$11 = 0ll;
           label$5347:;
           {
            double vr$7963 = fb_Rnd( 0x1.p+0f );
            double vr$7969 = fb_Rnd( 0x1.p+0f );
            double vr$7976 = fb_Rnd( 0x1.p+0f );
            fb_GfxPset( FGIMAGE$, (float)X$11, (float)Y$9, (uint32)(((((int64)(uint32)(uint8)((int32)__builtin_nearbyint( vr$7963 * 0x1.FEp+7 )) << (16ll & 63ll)) | ((int64)(uint32)(uint8)((int32)__builtin_nearbyint( vr$7969 * 0x1.FEp+7 )) << (8ll & 63ll))) | (int64)(uint32)(uint8)((int32)__builtin_nearbyint( vr$7976 * 0x1.FEp+7 ))) | 4278190080ll), 4, 0 );
           }
           label$5345:;
           X$11 = X$11 + 1ll;
           label$5344:;
           if( X$11 <= 512ll ) goto label$5347;
           label$5346:;
          }
         }
         label$5341:;
         Y$9 = Y$9 + 1ll;
         label$5340:;
         if( Y$9 <= 512ll ) goto label$5343;
         label$5342:;
        }
       }
       goto label$5338;
       label$5339:;
       {
        {
         int64 Y$9;
         Y$9 = 0ll;
         label$5351:;
         {
          {
           int64 X$11;
           X$11 = 0ll;
           label$5355:;
           {
            uint32 TMP$2206$12;
            if( ((X$11 + Y$9) % 2ll) != 0ll ) goto label$5356;
            TMP$2206$12 = 4294967295u;
            goto label$8229;
            label$5356:;
            TMP$2206$12 = 4278190080u;
            label$8229:;
            fb_GfxLine( FGIMAGE$, (float)((double)(X$11 << (9ll & 63ll)) / 0x1.p+4), (float)((double)(Y$9 << (9ll & 63ll)) / 0x1.p+4), 0x1.Fp+4f, 0x1.Fp+4f, TMP$2206$12, 2, 65535u, 1 );
           }
           label$5353:;
           X$11 = X$11 + 1ll;
           label$5352:;
           if( X$11 <= 32ll ) goto label$5355;
           label$5354:;
          }
         }
         label$5349:;
         Y$9 = Y$9 + 1ll;
         label$5348:;
         if( Y$9 <= 32ll ) goto label$5351;
         label$5350:;
        }
        FBSTRING* vr$8000 = fb_StrAllocTempDescZEx( (uint8*)"FreeBASIC", 9ll );
        fb_GfxDrawString( FGIMAGE$, 0x0p+0f, 0x0p+0f, 4, (FBSTRING*)vr$8000, 4294901760u, (void*)0ull, 0, (void*)0ull, (void*)0ull, (void*)0ull );
        FBSTRING* vr$8001 = fb_StrAllocTempDescZEx( (uint8*)"Shadertoy.com", 13ll );
        fb_GfxDrawString( FGIMAGE$, 0x1.8p+4f, 0x1.8p+4f, 4, (FBSTRING*)vr$8001, 4278255360u, (void*)0ull, 0, (void*)0ull, (void*)0ull, (void*)0ull );
       }
       label$5338:;
      }
      label$5337:;
      label$5336:;
      int64 TW$6;
      __builtin_memset( &TW$6, 0, 8ll );
      int64 TH$6;
      __builtin_memset( &TH$6, 0, 8ll );
      int64 TB$6;
      __builtin_memset( &TB$6, 0, 8ll );
      int64 TP$6;
      __builtin_memset( &TP$6, 0, 8ll );
      void* PIXELS$6;
      __builtin_memset( &PIXELS$6, 0, 8ll );
      TMP$2209$6 = 0ll;
      fb_GfxImageInfo64( (void*)FGIMAGE$, (int64*)&TW$6, (int64*)&TH$6, (int64*)&TB$6, (int64*)&TP$6, &PIXELS$6, &TMP$2209$6 );
      glBindTexture( 3553u, *(uint32*)TEXTURES$5 );
      if( BMIPMAP$5 == (boolean)0ll ) goto label$5358;
      {
       glTexParameteri( 3553u, 33169u, 1 );
       glTexParameteri( 3553u, 10240u, 9728 );
       glTexParameteri( 3553u, 10241u, 9987 );
      }
      label$5358:;
      label$5357:;
      if( BREPEAT$5 == (boolean)0ll ) goto label$5360;
      {
       glTexParameteri( 3553u, 10242u, 10497 );
       glTexParameteri( 3553u, 10243u, 10497 );
      }
      label$5360:;
      label$5359:;
      if( BLINEAR$5 == (boolean)0ll ) goto label$5362;
      {
       glTexParameteri( 3553u, 10241u, 9729 );
       glTexParameteri( 3553u, 10240u, 9729 );
      }
      goto label$5361;
      label$5362:;
      if( BNEAREST$5 == (boolean)0ll ) goto label$5363;
      {
       glTexParameteri( 3553u, 10241u, 9728 );
       glTexParameteri( 3553u, 10240u, 9728 );
      }
      goto label$5361;
      label$5363:;
      if( BNEARESTLINEAR$5 == (boolean)0ll ) goto label$5364;
      {
       glTexParameteri( 3553u, 10241u, 9728 );
       glTexParameteri( 3553u, 10240u, 9729 );
      }
      goto label$5361;
      label$5364:;
      if( BLINEARNEAREST$5 == (boolean)0ll ) goto label$5365;
      {
       glTexParameteri( 3553u, 10241u, 9729 );
       glTexParameteri( 3553u, 10240u, 9728 );
      }
      label$5365:;
      label$5361:;
      glTexImage2D( 3553u, 0, 6408, (int32)TW$6, (int32)TH$6, 0, 32993u, 5121u, (void*)PIXELS$6 );
      glBindTexture( 3553u, 0u );
     }
     label$5335:;
     label$5334:;
     int32 ICHANNEL0$5;
     int32 vr$8015 = (GLGETUNIFORMLOCATION$)( *(uint32*)((uint8*)&SHADER$5 + 4ll), (uint8*)"iChannel0" );
     ICHANNEL0$5 = vr$8015;
     if( (int64)ICHANNEL0$5 <= -1ll ) goto label$5367;
     {
      (GLUNIFORM1I$)( ICHANNEL0$5, 0 );
      glActiveTexture( 33984u );
      glBindTexture( 3553u, *(uint32*)TEXTURES$5 );
     }
     label$5367:;
     label$5366:;
     int32 IGLOBALTIME$5;
     int32 vr$8017 = (GLGETUNIFORMLOCATION$)( *(uint32*)((uint8*)&SHADER$5 + 4ll), (uint8*)"iGlobalTime" );
     IGLOBALTIME$5 = vr$8017;
     int32 ITIME$5;
     int32 vr$8018 = (GLGETUNIFORMLOCATION$)( *(uint32*)((uint8*)&SHADER$5 + 4ll), (uint8*)"iTime" );
     ITIME$5 = vr$8018;
     int32 IRESOLUTION$5;
     int32 vr$8019 = (GLGETUNIFORMLOCATION$)( *(uint32*)((uint8*)&SHADER$5 + 4ll), (uint8*)"iResolution" );
     IRESOLUTION$5 = vr$8019;
     int32 IMOUSE$5;
     int32 vr$8020 = (GLGETUNIFORMLOCATION$)( *(uint32*)((uint8*)&SHADER$5 + 4ll), (uint8*)"iMouse" );
     IMOUSE$5 = vr$8020;
     int32 IFRAME$5;
     int32 vr$8021 = (GLGETUNIFORMLOCATION$)( *(uint32*)((uint8*)&SHADER$5 + 4ll), (uint8*)"iFrame" );
     IFRAME$5 = vr$8021;
     if( (int64)IRESOLUTION$5 <= -1ll ) goto label$5369;
     {
      (GLUNIFORM3F$)( IRESOLUTION$5, *(float*)&V3$5, *(float*)((uint8*)&V3$5 + 4ll), *(float*)((uint8*)&V3$5 + 8ll) );
      label$5369:;
     }
     int64 OX$5;
     OX$5 = -1ll;
     int64 OY$5;
     OY$5 = -1ll;
     int64 OB$5;
     OB$5 = -1ll;
     int64 MX$5;
     __builtin_memset( &MX$5, 0, 8ll );
     int64 MY$5;
     __builtin_memset( &MY$5, 0, 8ll );
     int64 MB$5;
     __builtin_memset( &MB$5, 0, 8ll );
     int64 FRAMES$5;
     __builtin_memset( &FRAMES$5, 0, 8ll );
     int64 FPS$5;
     __builtin_memset( &FPS$5, 0, 8ll );
     double TRUNTIME$5;
     __builtin_memset( &TRUNTIME$5, 0, 8ll );
     double TSTART$5;
     double vr$8029 = fb_Timer( );
     TSTART$5 = vr$8029;
     double TNOW$5;
     __builtin_memset( &TNOW$5, 0, 8ll );
     double TLAST$5;
     TLAST$5 = TSTART$5;
     label$5370:;
     FBSTRING* vr$8031 = fb_Inkey( );
     int32 vr$8032 = fb_StrCompare( (void*)vr$8031, -1ll, (void*)"", 1ll );
     if( (int64)vr$8032 != 0ll ) goto label$5371;
     {
      double vr$8034 = fb_Timer( );
      TNOW$5 = vr$8034;
      TRUNTIME$5 = TNOW$5 - TSTART$5;
      if( (int64)ITIME$5 <= -1ll ) goto label$5373;
      {
       (GLUNIFORM1F$)( ITIME$5, (float)TRUNTIME$5 );
      }
      goto label$5372;
      label$5373:;
      if( (int64)IGLOBALTIME$5 <= -1ll ) goto label$5374;
      {
       (GLUNIFORM1F$)( IGLOBALTIME$5, (float)TRUNTIME$5 );
      }
      label$5374:;
      label$5372:;
      if( (int64)IFRAME$5 <= -1ll ) goto label$5376;
      {
       (GLUNIFORM1F$)( IFRAME$5, (float)FRAMES$5 );
       label$5376:;
      }
      if( (int64)IMOUSE$5 <= -1ll ) goto label$5378;
      {
       int64 TMP$2216$7;
       int64 TMP$2217$7;
       TMP$2217$7 = 0ll;
       TMP$2216$7 = 0ll;
       int32 vr$8048 = fb_GetMouse64( (int64*)&MX$5, (int64*)&MY$5, &TMP$2216$7, (int64*)&MB$5, &TMP$2217$7 );
       if( (int64)vr$8048 != 0ll ) goto label$5380;
       {
        int64 TMP$2218$8;
        int64 TMP$2219$8;
        if( OX$5 != MX$5 ) goto label$5381;
        TMP$2218$8 = (int64)-(OY$5 != MY$5);
        goto label$8230;
        label$5381:;
        TMP$2218$8 = -1ll;
        label$8230:;
        if( TMP$2218$8 != 0ll ) goto label$5382;
        TMP$2219$8 = (int64)-(OB$5 != MB$5);
        goto label$8231;
        label$5382:;
        TMP$2219$8 = -1ll;
        label$8231:;
        if( TMP$2219$8 == 0ll ) goto label$5384;
        {
         (GLUNIFORM4F$)( IMOUSE$5, (float)MX$5, (float)(SCR_H$ - (uint64)MY$5), (float)MB$5, 0x1.p+0f );
         OX$5 = MX$5;
         OY$5 = MY$5;
         OB$5 = MB$5;
        }
        label$5384:;
        label$5383:;
       }
       label$5380:;
       label$5379:;
      }
      label$5378:;
      label$5377:;
      glRectf( -0x1.p+0f, -0x1.p+0f, 0x1.p+0f, 0x1.p+0f );
      fb_GfxFlip( -1, -1 );
      FRAMES$5 = FRAMES$5 + 1ll;
      if( (FRAMES$5 % 60ll) != 0ll ) goto label$5386;
      {
       FBSTRING TMP$2221$7;
       FBSTRING TMP$2222$7;
       double vr$8058 = fb_Timer( );
       TNOW$5 = vr$8058;
       FPS$5 = ((int64)__builtin_nearbyint( 0x1.Ep+5 / (TNOW$5 - TLAST$5) ));
       TLAST$5 = TNOW$5;
       FBSTRING* vr$8062 = fb_LongintToStr( FPS$5 );
       __builtin_memset( &TMP$2221$7, 0, 24ll );
       FBSTRING* vr$8065 = fb_StrConcat( &TMP$2221$7, (void*)&FILENAME$, -1ll, (void*)" fps: ", 7ll );
       __builtin_memset( &TMP$2222$7, 0, 24ll );
       FBSTRING* vr$8068 = fb_StrConcat( &TMP$2222$7, (void*)vr$8065, -1ll, (void*)vr$8062, -1ll );
       fb_GfxDrawString( (void*)0ull, 0x0p+0f, 0x0p+0f, -2147483644, (FBSTRING*)vr$8068, 0u, (void*)0ull, 0, (void*)0ull, (void*)0ull, (void*)0ull );
      }
      label$5386:;
      label$5385:;
     }
     goto label$5370;
     label$5371:;
     fb_StrAssign( (void*)&STRCODE$, -1ll, (void*)"", 1ll, 0 );
     fb_GfxScreenRes( 1920, 1080, 32, 7, 64, 0 );
     fb_Cls( -65536 );
     {
      OFFSET$ = 0x0p+0;
      label$5390:;
      {
       _ZN8MEMORY_T6POKE64Edd( THIS$1, *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( SYS_OFFSET$ + 0x1.2Bp+8 )) << (3ll & 63ll))) + OFFSET$, 0x1.p+5 );
      }
      label$5388:;
      OFFSET$ = OFFSET$ + 0x1.p+0;
      label$5387:;
      if( OFFSET$ <= 0x1.p+10 ) goto label$5390;
      label$5389:;
     }
     _ZN9SHADERTOYD1Ev( &SHADER$5 );
    }
    goto label$5327;
    label$5391:;
    {
     FBSTRING* vr$8076 = fb_StrAllocTempDescZEx( (uint8*)"tmp.pov", 7ll );
     fb_FileOpen( (FBSTRING*)vr$8076, 3u, 0u, 0u, 1, 0 );
     FBSTRING* vr$8077 = fb_StrAllocTempDescZEx( (uint8*)"// Start of file", 16ll );
     fb_PrintString( 1, (FBSTRING*)vr$8077, 1 );
    }
    goto label$5327;
    label$5392:;
    {
     FBSTRING* vr$8078 = fb_StrAllocTempDescZEx( (uint8*)"// End of file", 14ll );
     fb_PrintString( 1, (FBSTRING*)vr$8078, 1 );
     fb_FileClose( 1 );
    }
    goto label$5327;
    label$5393:;
    {
     FBSTRING TMP$2230$5;
     FBSTRING TMP$2231$5;
     FBSTRING TMP$2234$5;
     FBSTRING TMP$2235$5;
     FBSTRING* vr$8079 = fb_StrAllocTempDescZEx( (uint8*)"povray -d -H600 -W800 tmp.pov", 29ll );
     fb_Shell( (FBSTRING*)vr$8079 );
     FBSTRING* vr$8080 = fb_StrAllocTempDescZEx( (uint8*)"convert tmp.png -w --o tmp.bmp", 30ll );
     fb_Shell( (FBSTRING*)vr$8080 );
     FBSTRING* vr$8082 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 394952ll) );
     __builtin_memset( &TMP$2230$5, 0, 24ll );
     FBSTRING* vr$8085 = fb_StrConcat( &TMP$2230$5, (void*)"cp tmp.bmp ./vram/", 19ll, (void*)vr$8082, -1ll );
     __builtin_memset( &TMP$2231$5, 0, 24ll );
     FBSTRING* vr$8088 = fb_StrConcat( &TMP$2231$5, (void*)vr$8085, -1ll, (void*)".bmp", 5ll );
     fb_Shell( (FBSTRING*)vr$8088 );
     FBSTRING* vr$8089 = fb_StrAllocTempDescZEx( (uint8*)"rm tmp.pov tmp.png", 18ll );
     fb_Shell( (FBSTRING*)vr$8089 );
     fb_Cls( -65536 );
     FBSTRING* vr$8091 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 394952ll) );
     __builtin_memset( &TMP$2234$5, 0, 24ll );
     FBSTRING* vr$8094 = fb_StrConcat( &TMP$2234$5, (void*)"./vram/", 8ll, (void*)vr$8091, -1ll );
     __builtin_memset( &TMP$2235$5, 0, 24ll );
     FBSTRING* vr$8097 = fb_StrConcat( &TMP$2235$5, (void*)vr$8094, -1ll, (void*)".bmp", 5ll );
     fb_GfxBload( (FBSTRING*)vr$8097, FGIMAGE$, (void*)0ull );
     fb_GfxPut( FGIMAGE$, 0x0p+0f, 0x0p+0f, (void*)RENDER$, -65536, -65536, -65536, -65536, 0, 1, (void*)&fb_hPutPSet, -1, (void*)0ull, (void*)0ull );
    }
    goto label$5327;
    label$5394:;
    {
     *(double*)((uint8*)THIS$1 + 394952ll) = V$1;
    }
    goto label$5327;
    label$5395:;
    {
     {
      uint8 FRAME$6;
      FRAME$6 = (uint8)((int32)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394952ll) ));
      uint8 TMP$2237$6;
      TMP$2237$6 = (uint8)((int32)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394960ll) ));
      goto label$5396;
      label$5399:;
      {
       FBSTRING TMP$2239$7;
       FBSTRING TMP$2240$7;
       FBSTRING* vr$8104 = fb_UIntToStr( (uint32)FRAME$6 );
       __builtin_memset( &TMP$2239$7, 0, 24ll );
       FBSTRING* vr$8107 = fb_StrConcat( &TMP$2239$7, (void*)".\x5Cvram\x5C", 8ll, (void*)vr$8104, -1ll );
       __builtin_memset( &TMP$2240$7, 0, 24ll );
       FBSTRING* vr$8110 = fb_StrConcat( &TMP$2240$7, (void*)vr$8107, -1ll, (void*)".bmp", 5ll );
       fb_GfxBload( (FBSTRING*)vr$8110, RENDER$, (void*)0ull );
       fb_SleepEx( 10, 1 );
       fb_GfxPut( FGIMAGE$, 0x0p+0f, 0x0p+0f, (void*)RENDER$, -65536, -65536, -65536, -65536, 0, 1, (void*)&fb_hPutPSet, -1, (void*)0ull, (void*)0ull );
      }
      label$5397:;
      FRAME$6 = (uint8)((int64)FRAME$6 + 1ll);
      label$5396:;
      if( (int64)FRAME$6 <= (int64)TMP$2237$6 ) goto label$5399;
      label$5398:;
     }
    }
    goto label$5327;
    label$5400:;
    {
     {
      uint64 TMP$2242$6;
      TMP$2242$6 = ((uint64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394968ll) ));
      goto label$5402;
      label$5403:;
      {
       FBSTRING* vr$8118 = fb_StrAllocTempDescZEx( (uint8*)"a", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$8118, 0 );
      }
      goto label$5401;
      label$5404:;
      {
       FBSTRING* vr$8119 = fb_StrAllocTempDescZEx( (uint8*)"aa_level", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8119, 0 );
      }
      goto label$5401;
      label$5405:;
      {
       FBSTRING* vr$8120 = fb_StrAllocTempDescZEx( (uint8*)"aastep", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8120, 0 );
      }
      goto label$5401;
      label$5406:;
      {
       FBSTRING* vr$8121 = fb_StrAllocTempDescZEx( (uint8*)"aa_threshold", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8121, 0 );
      }
      goto label$5401;
      label$5407:;
      {
       FBSTRING* vr$8122 = fb_StrAllocTempDescZEx( (uint8*)"abs", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8122, 0 );
      }
      goto label$5401;
      label$5408:;
      {
       FBSTRING* vr$8123 = fb_StrAllocTempDescZEx( (uint8*)"absolute", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8123, 0 );
      }
      goto label$5401;
      label$5409:;
      {
       FBSTRING* vr$8124 = fb_StrAllocTempDescZEx( (uint8*)"absorption", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8124, 0 );
      }
      goto label$5401;
      label$5410:;
      {
       FBSTRING* vr$8125 = fb_StrAllocTempDescZEx( (uint8*)"abstract", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8125, 0 );
      }
      goto label$5401;
      label$5411:;
      {
       FBSTRING* vr$8126 = fb_StrAllocTempDescZEx( (uint8*)"accept", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8126, 0 );
      }
      goto label$5401;
      label$5412:;
      {
       FBSTRING* vr$8127 = fb_StrAllocTempDescZEx( (uint8*)"access", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8127, 0 );
      }
      goto label$5401;
      label$5413:;
      {
       FBSTRING* vr$8128 = fb_StrAllocTempDescZEx( (uint8*)"accuracy", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8128, 0 );
      }
      goto label$5401;
      label$5414:;
      {
       FBSTRING* vr$8129 = fb_StrAllocTempDescZEx( (uint8*)"acos", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8129, 0 );
      }
      goto label$5401;
      label$5415:;
      {
       FBSTRING* vr$8130 = fb_StrAllocTempDescZEx( (uint8*)"acosh", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8130, 0 );
      }
      goto label$5401;
      label$5416:;
      {
       FBSTRING* vr$8131 = fb_StrAllocTempDescZEx( (uint8*)"active", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8131, 0 );
      }
      goto label$5401;
      label$5417:;
      {
       FBSTRING* vr$8132 = fb_StrAllocTempDescZEx( (uint8*)"adaptive", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8132, 0 );
      }
      goto label$5401;
      label$5418:;
      {
       FBSTRING* vr$8133 = fb_StrAllocTempDescZEx( (uint8*)"adc_bailout", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8133, 0 );
      }
      goto label$5401;
      label$5419:;
      {
       FBSTRING* vr$8134 = fb_StrAllocTempDescZEx( (uint8*)"add", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8134, 0 );
      }
      goto label$5401;
      label$5420:;
      {
       FBSTRING* vr$8135 = fb_StrAllocTempDescZEx( (uint8*)"address", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8135, 0 );
      }
      goto label$5401;
      label$5421:;
      {
       FBSTRING* vr$8136 = fb_StrAllocTempDescZEx( (uint8*)"advancing", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8136, 0 );
      }
      goto label$5401;
      label$5422:;
      {
       FBSTRING* vr$8137 = fb_StrAllocTempDescZEx( (uint8*)"after", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8137, 0 );
      }
      goto label$5401;
      label$5423:;
      {
       FBSTRING* vr$8138 = fb_StrAllocTempDescZEx( (uint8*)"agate", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8138, 0 );
      }
      goto label$5401;
      label$5424:;
      {
       FBSTRING* vr$8139 = fb_StrAllocTempDescZEx( (uint8*)"agate_turb", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8139, 0 );
      }
      goto label$5401;
      label$5425:;
      {
       FBSTRING* vr$8140 = fb_StrAllocTempDescZEx( (uint8*)"alias", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8140, 0 );
      }
      goto label$5401;
      label$5426:;
      {
       FBSTRING* vr$8141 = fb_StrAllocTempDescZEx( (uint8*)"all", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8141, 0 );
      }
      goto label$5401;
      label$5427:;
      {
       FBSTRING* vr$8142 = fb_StrAllocTempDescZEx( (uint8*)"all_intersections", 17ll );
       fb_PrintString( 1, (FBSTRING*)vr$8142, 0 );
      }
      goto label$5401;
      label$5428:;
      {
       FBSTRING* vr$8143 = fb_StrAllocTempDescZEx( (uint8*)"alpha", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8143, 0 );
      }
      goto label$5401;
      label$5429:;
      {
       FBSTRING* vr$8144 = fb_StrAllocTempDescZEx( (uint8*)"alphabet", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8144, 0 );
      }
      goto label$5401;
      label$5430:;
      {
       FBSTRING* vr$8145 = fb_StrAllocTempDescZEx( (uint8*)"alphabetic", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8145, 0 );
      }
      goto label$5401;
      label$5431:;
      {
       FBSTRING* vr$8146 = fb_StrAllocTempDescZEx( (uint8*)"alphabetic-lower", 16ll );
       fb_PrintString( 1, (FBSTRING*)vr$8146, 0 );
      }
      goto label$5401;
      label$5432:;
      {
       FBSTRING* vr$8147 = fb_StrAllocTempDescZEx( (uint8*)"alphabetic-upper", 16ll );
       fb_PrintString( 1, (FBSTRING*)vr$8147, 0 );
      }
      goto label$5401;
      label$5433:;
      {
       FBSTRING* vr$8148 = fb_StrAllocTempDescZEx( (uint8*)"alphanumeric", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8148, 0 );
      }
      goto label$5401;
      label$5434:;
      {
       FBSTRING* vr$8149 = fb_StrAllocTempDescZEx( (uint8*)"alphanumeric-edited", 19ll );
       fb_PrintString( 1, (FBSTRING*)vr$8149, 0 );
      }
      goto label$5401;
      label$5435:;
      {
       FBSTRING* vr$8150 = fb_StrAllocTempDescZEx( (uint8*)"also", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8150, 0 );
      }
      goto label$5401;
      label$5436:;
      {
       FBSTRING* vr$8151 = fb_StrAllocTempDescZEx( (uint8*)"alter", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8151, 0 );
      }
      goto label$5401;
      label$5437:;
      {
       FBSTRING* vr$8152 = fb_StrAllocTempDescZEx( (uint8*)"alternate", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8152, 0 );
      }
      goto label$5401;
      label$5438:;
      {
       FBSTRING* vr$8153 = fb_StrAllocTempDescZEx( (uint8*)"altitude", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8153, 0 );
      }
      goto label$5401;
      label$5439:;
      {
       FBSTRING* vr$8154 = fb_StrAllocTempDescZEx( (uint8*)"always_sample", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8154, 0 );
      }
      goto label$5401;
      label$5440:;
      {
       FBSTRING* vr$8155 = fb_StrAllocTempDescZEx( (uint8*)"ambient", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8155, 0 );
      }
      goto label$5401;
      label$5441:;
      {
       FBSTRING* vr$8156 = fb_StrAllocTempDescZEx( (uint8*)"ambient_light", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8156, 0 );
      }
      goto label$5401;
      label$5442:;
      {
       FBSTRING* vr$8157 = fb_StrAllocTempDescZEx( (uint8*)"and", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8157, 0 );
      }
      goto label$5401;
      label$5443:;
      {
       FBSTRING* vr$8158 = fb_StrAllocTempDescZEx( (uint8*)"and_bits", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8158, 0 );
      }
      goto label$5401;
      label$5444:;
      {
       FBSTRING* vr$8159 = fb_StrAllocTempDescZEx( (uint8*)"angle", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8159, 0 );
      }
      goto label$5401;
      label$5445:;
      {
       FBSTRING* vr$8160 = fb_StrAllocTempDescZEx( (uint8*)"any", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8160, 0 );
      }
      goto label$5401;
      label$5446:;
      {
       FBSTRING* vr$8161 = fb_StrAllocTempDescZEx( (uint8*)"aperture", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8161, 0 );
      }
      goto label$5401;
      label$5447:;
      {
       FBSTRING* vr$8162 = fb_StrAllocTempDescZEx( (uint8*)"append", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8162, 0 );
      }
      goto label$5401;
      label$5448:;
      {
       FBSTRING* vr$8163 = fb_StrAllocTempDescZEx( (uint8*)"apply", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8163, 0 );
      }
      goto label$5401;
      label$5449:;
      {
       FBSTRING* vr$8164 = fb_StrAllocTempDescZEx( (uint8*)"arc_angle", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8164, 0 );
      }
      goto label$5401;
      label$5450:;
      {
       FBSTRING* vr$8165 = fb_StrAllocTempDescZEx( (uint8*)"are", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8165, 0 );
      }
      goto label$5401;
      label$5451:;
      {
       FBSTRING* vr$8166 = fb_StrAllocTempDescZEx( (uint8*)"area", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8166, 0 );
      }
      goto label$5401;
      label$5452:;
      {
       FBSTRING* vr$8167 = fb_StrAllocTempDescZEx( (uint8*)"area_light", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8167, 0 );
      }
      goto label$5401;
      label$5453:;
      {
       FBSTRING* vr$8168 = fb_StrAllocTempDescZEx( (uint8*)"areas", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8168, 0 );
      }
      goto label$5401;
      label$5454:;
      {
       FBSTRING* vr$8169 = fb_StrAllocTempDescZEx( (uint8*)"array", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8169, 0 );
      }
      goto label$5401;
      label$5455:;
      {
       FBSTRING* vr$8170 = fb_StrAllocTempDescZEx( (uint8*)"arraylength", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8170, 0 );
      }
      goto label$5401;
      label$5456:;
      {
       FBSTRING* vr$8171 = fb_StrAllocTempDescZEx( (uint8*)"as", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8171, 0 );
      }
      goto label$5401;
      label$5457:;
      {
       FBSTRING* vr$8172 = fb_StrAllocTempDescZEx( (uint8*)"asc", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8172, 0 );
      }
      goto label$5401;
      label$5458:;
      {
       FBSTRING* vr$8173 = fb_StrAllocTempDescZEx( (uint8*)"ascending", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8173, 0 );
      }
      goto label$5401;
      label$5459:;
      {
       FBSTRING* vr$8174 = fb_StrAllocTempDescZEx( (uint8*)"ascii", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8174, 0 );
      }
      goto label$5401;
      label$5460:;
      {
       FBSTRING* vr$8175 = fb_StrAllocTempDescZEx( (uint8*)"asin", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8175, 0 );
      }
      goto label$5401;
      label$5461:;
      {
       FBSTRING* vr$8176 = fb_StrAllocTempDescZEx( (uint8*)"asinh", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8176, 0 );
      }
      goto label$5401;
      label$5462:;
      {
       FBSTRING* vr$8177 = fb_StrAllocTempDescZEx( (uint8*)"asm", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8177, 0 );
      }
      goto label$5401;
      label$5463:;
      {
       FBSTRING* vr$8178 = fb_StrAllocTempDescZEx( (uint8*)"assembler", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8178, 0 );
      }
      goto label$5401;
      label$5464:;
      {
       FBSTRING* vr$8179 = fb_StrAllocTempDescZEx( (uint8*)"assert", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8179, 0 );
      }
      goto label$5401;
      label$5465:;
      {
       FBSTRING* vr$8180 = fb_StrAllocTempDescZEx( (uint8*)"assign", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8180, 0 );
      }
      goto label$5401;
      label$5466:;
      {
       FBSTRING* vr$8181 = fb_StrAllocTempDescZEx( (uint8*)"assumed_gamma", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8181, 0 );
      }
      goto label$5401;
      label$5467:;
      {
       FBSTRING* vr$8182 = fb_StrAllocTempDescZEx( (uint8*)"async", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8182, 0 );
      }
      goto label$5401;
      label$5468:;
      {
       FBSTRING* vr$8183 = fb_StrAllocTempDescZEx( (uint8*)"at", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8183, 0 );
      }
      goto label$5401;
      label$5469:;
      {
       FBSTRING* vr$8184 = fb_StrAllocTempDescZEx( (uint8*)"atan", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8184, 0 );
      }
      goto label$5401;
      label$5470:;
      {
       FBSTRING* vr$8185 = fb_StrAllocTempDescZEx( (uint8*)"atan2", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8185, 0 );
      }
      goto label$5401;
      label$5471:;
      {
       FBSTRING* vr$8186 = fb_StrAllocTempDescZEx( (uint8*)"atanh", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8186, 0 );
      }
      goto label$5401;
      label$5472:;
      {
       FBSTRING* vr$8187 = fb_StrAllocTempDescZEx( (uint8*)"atn", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8187, 0 );
      }
      goto label$5401;
      label$5473:;
      {
       FBSTRING* vr$8188 = fb_StrAllocTempDescZEx( (uint8*)"attribute", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8188, 0 );
      }
      goto label$5401;
      label$5474:;
      {
       FBSTRING* vr$8189 = fb_StrAllocTempDescZEx( (uint8*)"author", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8189, 0 );
      }
      goto label$5401;
      label$5475:;
      {
       FBSTRING* vr$8190 = fb_StrAllocTempDescZEx( (uint8*)"auto", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8190, 0 );
      }
      goto label$5401;
      label$5476:;
      {
       FBSTRING* vr$8191 = fb_StrAllocTempDescZEx( (uint8*)"automatic", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8191, 0 );
      }
      goto label$5401;
      label$5477:;
      {
       FBSTRING* vr$8192 = fb_StrAllocTempDescZEx( (uint8*)"autostop", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8192, 0 );
      }
      goto label$5401;
      label$5478:;
      {
       FBSTRING* vr$8193 = fb_StrAllocTempDescZEx( (uint8*)"average", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8193, 0 );
      }
      goto label$5401;
      label$5479:;
      {
       FBSTRING* vr$8194 = fb_StrAllocTempDescZEx( (uint8*)"avg", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8194, 0 );
      }
      goto label$5401;
      label$5480:;
      {
       FBSTRING* vr$8195 = fb_StrAllocTempDescZEx( (uint8*)"await", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8195, 0 );
      }
      goto label$5401;
      label$5481:;
      {
       FBSTRING* vr$8196 = fb_StrAllocTempDescZEx( (uint8*)"b", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$8196, 0 );
      }
      goto label$5401;
      label$5482:;
      {
       FBSTRING* vr$8197 = fb_StrAllocTempDescZEx( (uint8*)"backfacing", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8197, 0 );
      }
      goto label$5401;
      label$5483:;
      {
       FBSTRING* vr$8198 = fb_StrAllocTempDescZEx( (uint8*)"background", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8198, 0 );
      }
      goto label$5401;
      label$5484:;
      {
       FBSTRING* vr$8199 = fb_StrAllocTempDescZEx( (uint8*)"backspace", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8199, 0 );
      }
      goto label$5401;
      label$5485:;
      {
       FBSTRING* vr$8200 = fb_StrAllocTempDescZEx( (uint8*)"basis", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8200, 0 );
      }
      goto label$5401;
      label$5486:;
      {
       FBSTRING* vr$8201 = fb_StrAllocTempDescZEx( (uint8*)"beep", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8201, 0 );
      }
      goto label$5401;
      label$5487:;
      {
       FBSTRING* vr$8202 = fb_StrAllocTempDescZEx( (uint8*)"before", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8202, 0 );
      }
      goto label$5401;
      label$5488:;
      {
       FBSTRING* vr$8203 = fb_StrAllocTempDescZEx( (uint8*)"begin", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8203, 0 );
      }
      goto label$5401;
      label$5489:;
      {
       FBSTRING* vr$8204 = fb_StrAllocTempDescZEx( (uint8*)"beginning", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8204, 0 );
      }
      goto label$5401;
      label$5490:;
      {
       FBSTRING* vr$8205 = fb_StrAllocTempDescZEx( (uint8*)"between", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8205, 0 );
      }
      goto label$5401;
      label$5491:;
      {
       FBSTRING* vr$8206 = fb_StrAllocTempDescZEx( (uint8*)"bezier_spline", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8206, 0 );
      }
      goto label$5401;
      label$5492:;
      {
       FBSTRING* vr$8207 = fb_StrAllocTempDescZEx( (uint8*)"bicubic_patch", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8207, 0 );
      }
      goto label$5401;
      label$5493:;
      {
       FBSTRING* vr$8208 = fb_StrAllocTempDescZEx( (uint8*)"binary", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8208, 0 );
      }
      goto label$5401;
      label$5494:;
      {
       FBSTRING* vr$8209 = fb_StrAllocTempDescZEx( (uint8*)"bind", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8209, 0 );
      }
      goto label$5401;
      label$5495:;
      {
       FBSTRING* vr$8210 = fb_StrAllocTempDescZEx( (uint8*)"blackbody", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8210, 0 );
      }
      goto label$5401;
      label$5496:;
      {
       FBSTRING* vr$8211 = fb_StrAllocTempDescZEx( (uint8*)"black_hole", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8211, 0 );
      }
      goto label$5401;
      label$5497:;
      {
       FBSTRING* vr$8212 = fb_StrAllocTempDescZEx( (uint8*)"blank", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8212, 0 );
      }
      goto label$5401;
      label$5498:;
      {
       FBSTRING* vr$8213 = fb_StrAllocTempDescZEx( (uint8*)"bload", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8213, 0 );
      }
      goto label$5401;
      label$5499:;
      {
       FBSTRING* vr$8214 = fb_StrAllocTempDescZEx( (uint8*)"blob", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8214, 0 );
      }
      goto label$5401;
      label$5500:;
      {
       FBSTRING* vr$8215 = fb_StrAllocTempDescZEx( (uint8*)"block", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8215, 0 );
      }
      goto label$5401;
      label$5501:;
      {
       FBSTRING* vr$8216 = fb_StrAllocTempDescZEx( (uint8*)"blue", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8216, 0 );
      }
      goto label$5401;
      label$5502:;
      {
       FBSTRING* vr$8217 = fb_StrAllocTempDescZEx( (uint8*)"blur_samples", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8217, 0 );
      }
      goto label$5401;
      label$5503:;
      {
       FBSTRING* vr$8218 = fb_StrAllocTempDescZEx( (uint8*)"bool", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8218, 0 );
      }
      goto label$5401;
      label$5504:;
      {
       FBSTRING* vr$8219 = fb_StrAllocTempDescZEx( (uint8*)"both", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8219, 0 );
      }
      goto label$5401;
      label$5505:;
      {
       FBSTRING* vr$8220 = fb_StrAllocTempDescZEx( (uint8*)"bottom", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8220, 0 );
      }
      goto label$5401;
      label$5506:;
      {
       FBSTRING* vr$8221 = fb_StrAllocTempDescZEx( (uint8*)"bounded_by", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8221, 0 );
      }
      goto label$5401;
      label$5507:;
      {
       FBSTRING* vr$8222 = fb_StrAllocTempDescZEx( (uint8*)"box", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8222, 0 );
      }
      goto label$5401;
      label$5508:;
      {
       FBSTRING* vr$8223 = fb_StrAllocTempDescZEx( (uint8*)"boxed", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8223, 0 );
      }
      goto label$5401;
      label$5509:;
      {
       FBSTRING* vr$8224 = fb_StrAllocTempDescZEx( (uint8*)"bozo", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8224, 0 );
      }
      goto label$5401;
      label$5510:;
      {
       FBSTRING* vr$8225 = fb_StrAllocTempDescZEx( (uint8*)"break", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8225, 0 );
      }
      goto label$5401;
      label$5511:;
      {
       FBSTRING* vr$8226 = fb_StrAllocTempDescZEx( (uint8*)"brick", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8226, 0 );
      }
      goto label$5401;
      label$5512:;
      {
       FBSTRING* vr$8227 = fb_StrAllocTempDescZEx( (uint8*)"brick_size", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8227, 0 );
      }
      goto label$5401;
      label$5513:;
      {
       FBSTRING* vr$8228 = fb_StrAllocTempDescZEx( (uint8*)"brightness", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8228, 0 );
      }
      goto label$5401;
      label$5514:;
      {
       FBSTRING* vr$8229 = fb_StrAllocTempDescZEx( (uint8*)"brilliance", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8229, 0 );
      }
      goto label$5401;
      label$5515:;
      {
       FBSTRING* vr$8230 = fb_StrAllocTempDescZEx( (uint8*)"bsave", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8230, 0 );
      }
      goto label$5401;
      label$5516:;
      {
       FBSTRING* vr$8231 = fb_StrAllocTempDescZEx( (uint8*)"b_spline", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8231, 0 );
      }
      goto label$5401;
      label$5517:;
      {
       FBSTRING* vr$8232 = fb_StrAllocTempDescZEx( (uint8*)"bump", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8232, 0 );
      }
      goto label$5401;
      label$5518:;
      {
       FBSTRING* vr$8233 = fb_StrAllocTempDescZEx( (uint8*)"bump_map", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8233, 0 );
      }
      goto label$5401;
      label$5519:;
      {
       FBSTRING* vr$8234 = fb_StrAllocTempDescZEx( (uint8*)"bumps", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8234, 0 );
      }
      goto label$5401;
      label$5520:;
      {
       FBSTRING* vr$8235 = fb_StrAllocTempDescZEx( (uint8*)"bump_size", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8235, 0 );
      }
      goto label$5401;
      label$5521:;
      {
       FBSTRING* vr$8236 = fb_StrAllocTempDescZEx( (uint8*)"bvec2", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8236, 0 );
      }
      goto label$5401;
      label$5522:;
      {
       FBSTRING* vr$8237 = fb_StrAllocTempDescZEx( (uint8*)"bvec3", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8237, 0 );
      }
      goto label$5401;
      label$5523:;
      {
       FBSTRING* vr$8238 = fb_StrAllocTempDescZEx( (uint8*)"bvec4", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8238, 0 );
      }
      goto label$5401;
      label$5524:;
      {
       FBSTRING* vr$8239 = fb_StrAllocTempDescZEx( (uint8*)"by", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8239, 0 );
      }
      goto label$5401;
      label$5525:;
      {
       FBSTRING* vr$8240 = fb_StrAllocTempDescZEx( (uint8*)"byte", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8240, 0 );
      }
      goto label$5401;
      label$5526:;
      {
       FBSTRING* vr$8241 = fb_StrAllocTempDescZEx( (uint8*)"c", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$8241, 0 );
      }
      goto label$5401;
      label$5527:;
      {
       FBSTRING* vr$8242 = fb_StrAllocTempDescZEx( (uint8*)"cache", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8242, 0 );
      }
      goto label$5401;
      label$5528:;
      {
       FBSTRING* vr$8243 = fb_StrAllocTempDescZEx( (uint8*)"calculatenormal", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$8243, 0 );
      }
      goto label$5401;
      label$5529:;
      {
       FBSTRING* vr$8244 = fb_StrAllocTempDescZEx( (uint8*)"call", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8244, 0 );
      }
      goto label$5401;
      label$5530:;
      {
       FBSTRING* vr$8245 = fb_StrAllocTempDescZEx( (uint8*)"calls", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8245, 0 );
      }
      goto label$5401;
      label$5531:;
      {
       FBSTRING* vr$8246 = fb_StrAllocTempDescZEx( (uint8*)"camera", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8246, 0 );
      }
      goto label$5401;
      label$5532:;
      {
       FBSTRING* vr$8247 = fb_StrAllocTempDescZEx( (uint8*)"cancel", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8247, 0 );
      }
      goto label$5401;
      label$5533:;
      {
       FBSTRING* vr$8248 = fb_StrAllocTempDescZEx( (uint8*)"cardinality", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8248, 0 );
      }
      goto label$5401;
      label$5534:;
      {
       FBSTRING* vr$8249 = fb_StrAllocTempDescZEx( (uint8*)"case", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8249, 0 );
      }
      goto label$5401;
      label$5535:;
      {
       FBSTRING* vr$8250 = fb_StrAllocTempDescZEx( (uint8*)"cast", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8250, 0 );
      }
      goto label$5401;
      label$5536:;
      {
       FBSTRING* vr$8251 = fb_StrAllocTempDescZEx( (uint8*)"castnamespace", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8251, 0 );
      }
      goto label$5401;
      label$5537:;
      {
       FBSTRING* vr$8252 = fb_StrAllocTempDescZEx( (uint8*)"caustics", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8252, 0 );
      }
      goto label$5401;
      label$5538:;
      {
       FBSTRING* vr$8253 = fb_StrAllocTempDescZEx( (uint8*)"cbl", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8253, 0 );
      }
      goto label$5401;
      label$5539:;
      {
       FBSTRING* vr$8254 = fb_StrAllocTempDescZEx( (uint8*)"cbrt", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8254, 0 );
      }
      goto label$5401;
      label$5540:;
      {
       FBSTRING* vr$8255 = fb_StrAllocTempDescZEx( (uint8*)"cd", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8255, 0 );
      }
      goto label$5401;
      label$5541:;
      {
       FBSTRING* vr$8256 = fb_StrAllocTempDescZEx( (uint8*)"cdbl", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8256, 0 );
      }
      goto label$5401;
      label$5542:;
      {
       FBSTRING* vr$8257 = fb_StrAllocTempDescZEx( (uint8*)"cdecl", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8257, 0 );
      }
      goto label$5401;
      label$5543:;
      {
       FBSTRING* vr$8258 = fb_StrAllocTempDescZEx( (uint8*)"ceil", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8258, 0 );
      }
      goto label$5401;
      label$5544:;
      {
       FBSTRING* vr$8259 = fb_StrAllocTempDescZEx( (uint8*)"cellnoise", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8259, 0 );
      }
      goto label$5401;
      label$5545:;
      {
       FBSTRING* vr$8260 = fb_StrAllocTempDescZEx( (uint8*)"cells", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8260, 0 );
      }
      goto label$5401;
      label$5546:;
      {
       FBSTRING* vr$8261 = fb_StrAllocTempDescZEx( (uint8*)"centroid", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8261, 0 );
      }
      goto label$5401;
      label$5547:;
      {
       FBSTRING* vr$8262 = fb_StrAllocTempDescZEx( (uint8*)"cf", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8262, 0 );
      }
      goto label$5401;
      label$5548:;
      {
       FBSTRING* vr$8263 = fb_StrAllocTempDescZEx( (uint8*)"ch", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8263, 0 );
      }
      goto label$5401;
      label$5549:;
      {
       FBSTRING* vr$8264 = fb_StrAllocTempDescZEx( (uint8*)"chain", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8264, 0 );
      }
      goto label$5401;
      label$5550:;
      {
       FBSTRING* vr$8265 = fb_StrAllocTempDescZEx( (uint8*)"char", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8265, 0 );
      }
      goto label$5401;
      label$5551:;
      {
       FBSTRING* vr$8266 = fb_StrAllocTempDescZEx( (uint8*)"character", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8266, 0 );
      }
      goto label$5401;
      label$5552:;
      {
       FBSTRING* vr$8267 = fb_StrAllocTempDescZEx( (uint8*)"character_length", 16ll );
       fb_PrintString( 1, (FBSTRING*)vr$8267, 0 );
      }
      goto label$5401;
      label$5553:;
      {
       FBSTRING* vr$8268 = fb_StrAllocTempDescZEx( (uint8*)"character_length_b", 18ll );
       fb_PrintString( 1, (FBSTRING*)vr$8268, 0 );
      }
      goto label$5401;
      label$5554:;
      {
       FBSTRING* vr$8269 = fb_StrAllocTempDescZEx( (uint8*)"character_length_mb", 19ll );
       fb_PrintString( 1, (FBSTRING*)vr$8269, 0 );
      }
      goto label$5401;
      label$5555:;
      {
       FBSTRING* vr$8270 = fb_StrAllocTempDescZEx( (uint8*)"characters", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8270, 0 );
      }
      goto label$5401;
      label$5556:;
      {
       FBSTRING* vr$8271 = fb_StrAllocTempDescZEx( (uint8*)"char_length", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8271, 0 );
      }
      goto label$5401;
      label$5557:;
      {
       FBSTRING* vr$8272 = fb_StrAllocTempDescZEx( (uint8*)"char_length_b", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8272, 0 );
      }
      goto label$5401;
      label$5558:;
      {
       FBSTRING* vr$8273 = fb_StrAllocTempDescZEx( (uint8*)"char_length_mb", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$8273, 0 );
      }
      goto label$5401;
      label$5559:;
      {
       FBSTRING* vr$8274 = fb_StrAllocTempDescZEx( (uint8*)"charset", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8274, 0 );
      }
      goto label$5401;
      label$5560:;
      {
       FBSTRING* vr$8275 = fb_StrAllocTempDescZEx( (uint8*)"chdir", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8275, 0 );
      }
      goto label$5401;
      label$5561:;
      {
       FBSTRING* vr$8276 = fb_StrAllocTempDescZEx( (uint8*)"check", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8276, 0 );
      }
      goto label$5401;
      label$5562:;
      {
       FBSTRING* vr$8277 = fb_StrAllocTempDescZEx( (uint8*)"checker", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8277, 0 );
      }
      goto label$5401;
      label$5563:;
      {
       FBSTRING* vr$8278 = fb_StrAllocTempDescZEx( (uint8*)"chr", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8278, 0 );
      }
      goto label$5401;
      label$5564:;
      {
       FBSTRING* vr$8279 = fb_StrAllocTempDescZEx( (uint8*)"cint", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8279, 0 );
      }
      goto label$5401;
      label$5565:;
      {
       FBSTRING* vr$8280 = fb_StrAllocTempDescZEx( (uint8*)"circle", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8280, 0 );
      }
      goto label$5401;
      label$5566:;
      {
       FBSTRING* vr$8281 = fb_StrAllocTempDescZEx( (uint8*)"circular", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8281, 0 );
      }
      goto label$5401;
      label$5567:;
      {
       FBSTRING* vr$8282 = fb_StrAllocTempDescZEx( (uint8*)"clamp", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8282, 0 );
      }
      goto label$5401;
      label$5568:;
      {
       FBSTRING* vr$8283 = fb_StrAllocTempDescZEx( (uint8*)"class", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8283, 0 );
      }
      goto label$5401;
      label$5569:;
      {
       FBSTRING* vr$8284 = fb_StrAllocTempDescZEx( (uint8*)"class-id", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8284, 0 );
      }
      goto label$5401;
      label$5570:;
      {
       FBSTRING* vr$8285 = fb_StrAllocTempDescZEx( (uint8*)"clear", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8285, 0 );
      }
      goto label$5401;
      label$5571:;
      {
       FBSTRING* vr$8286 = fb_StrAllocTempDescZEx( (uint8*)"clipped_by", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8286, 0 );
      }
      goto label$5401;
      label$5572:;
      {
       FBSTRING* vr$8287 = fb_StrAllocTempDescZEx( (uint8*)"clock", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8287, 0 );
      }
      goto label$5401;
      label$5573:;
      {
       FBSTRING* vr$8288 = fb_StrAllocTempDescZEx( (uint8*)"clock_delta", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8288, 0 );
      }
      goto label$5401;
      label$5574:;
      {
       FBSTRING* vr$8289 = fb_StrAllocTempDescZEx( (uint8*)"clock_on", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8289, 0 );
      }
      goto label$5401;
      label$5575:;
      {
       FBSTRING* vr$8290 = fb_StrAllocTempDescZEx( (uint8*)"clock-units", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8290, 0 );
      }
      goto label$5401;
      label$5576:;
      {
       FBSTRING* vr$8291 = fb_StrAllocTempDescZEx( (uint8*)"close", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8291, 0 );
      }
      goto label$5401;
      label$5577:;
      {
       FBSTRING* vr$8292 = fb_StrAllocTempDescZEx( (uint8*)"closure", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8292, 0 );
      }
      goto label$5401;
      label$5578:;
      {
       FBSTRING* vr$8293 = fb_StrAllocTempDescZEx( (uint8*)"cls", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8293, 0 );
      }
      goto label$5401;
      label$5579:;
      {
       FBSTRING* vr$8294 = fb_StrAllocTempDescZEx( (uint8*)"cobol", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8294, 0 );
      }
      goto label$5401;
      label$5580:;
      {
       FBSTRING* vr$8295 = fb_StrAllocTempDescZEx( (uint8*)"code", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8295, 0 );
      }
      goto label$5401;
      label$5581:;
      {
       FBSTRING* vr$8296 = fb_StrAllocTempDescZEx( (uint8*)"code-set", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8296, 0 );
      }
      goto label$5401;
      label$5582:;
      {
       FBSTRING* vr$8297 = fb_StrAllocTempDescZEx( (uint8*)"collating", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8297, 0 );
      }
      goto label$5401;
      label$5583:;
      {
       FBSTRING* vr$8298 = fb_StrAllocTempDescZEx( (uint8*)"collect", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8298, 0 );
      }
      goto label$5401;
      label$5584:;
      {
       FBSTRING* vr$8299 = fb_StrAllocTempDescZEx( (uint8*)"color", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8299, 0 );
      }
      goto label$5401;
      label$5585:;
      {
       FBSTRING* vr$8300 = fb_StrAllocTempDescZEx( (uint8*)"color_map", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8300, 0 );
      }
      goto label$5401;
      label$5586:;
      {
       FBSTRING* vr$8301 = fb_StrAllocTempDescZEx( (uint8*)"color.w", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8301, 0 );
      }
      goto label$5401;
      label$5587:;
      {
       FBSTRING* vr$8302 = fb_StrAllocTempDescZEx( (uint8*)"colour", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8302, 0 );
      }
      goto label$5401;
      label$5588:;
      {
       FBSTRING* vr$8303 = fb_StrAllocTempDescZEx( (uint8*)"colour_map", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8303, 0 );
      }
      goto label$5401;
      label$5589:;
      {
       FBSTRING* vr$8304 = fb_StrAllocTempDescZEx( (uint8*)"column", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8304, 0 );
      }
      goto label$5401;
      label$5590:;
      {
       FBSTRING* vr$8305 = fb_StrAllocTempDescZEx( (uint8*)"com", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8305, 0 );
      }
      goto label$5401;
      label$5591:;
      {
       FBSTRING* vr$8306 = fb_StrAllocTempDescZEx( (uint8*)"comma", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8306, 0 );
      }
      goto label$5401;
      label$5592:;
      {
       FBSTRING* vr$8307 = fb_StrAllocTempDescZEx( (uint8*)"comment", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8307, 0 );
      }
      goto label$5401;
      label$5593:;
      {
       FBSTRING* vr$8308 = fb_StrAllocTempDescZEx( (uint8*)"commit", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8308, 0 );
      }
      goto label$5401;
      label$5594:;
      {
       FBSTRING* vr$8309 = fb_StrAllocTempDescZEx( (uint8*)"common", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8309, 0 );
      }
      goto label$5401;
      label$5595:;
      {
       FBSTRING* vr$8310 = fb_StrAllocTempDescZEx( (uint8*)"communication", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8310, 0 );
      }
      goto label$5401;
      label$5596:;
      {
       FBSTRING* vr$8311 = fb_StrAllocTempDescZEx( (uint8*)"comp", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8311, 0 );
      }
      goto label$5401;
      label$5597:;
      {
       FBSTRING* vr$8312 = fb_StrAllocTempDescZEx( (uint8*)"comp-1", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8312, 0 );
      }
      goto label$5401;
      label$5598:;
      {
       FBSTRING* vr$8313 = fb_StrAllocTempDescZEx( (uint8*)"comp-2", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8313, 0 );
      }
      goto label$5401;
      label$5599:;
      {
       FBSTRING* vr$8314 = fb_StrAllocTempDescZEx( (uint8*)"comp-3", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8314, 0 );
      }
      goto label$5401;
      label$5600:;
      {
       FBSTRING* vr$8315 = fb_StrAllocTempDescZEx( (uint8*)"comp-4", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8315, 0 );
      }
      goto label$5401;
      label$5601:;
      {
       FBSTRING* vr$8316 = fb_StrAllocTempDescZEx( (uint8*)"comp-5", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8316, 0 );
      }
      goto label$5401;
      label$5602:;
      {
       FBSTRING* vr$8317 = fb_StrAllocTempDescZEx( (uint8*)"complex", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8317, 0 );
      }
      goto label$5401;
      label$5603:;
      {
       FBSTRING* vr$8318 = fb_StrAllocTempDescZEx( (uint8*)"component", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8318, 0 );
      }
      goto label$5401;
      label$5604:;
      {
       FBSTRING* vr$8319 = fb_StrAllocTempDescZEx( (uint8*)"composite", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8319, 0 );
      }
      goto label$5401;
      label$5605:;
      {
       FBSTRING* vr$8320 = fb_StrAllocTempDescZEx( (uint8*)"computational", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8320, 0 );
      }
      goto label$5401;
      label$5606:;
      {
       FBSTRING* vr$8321 = fb_StrAllocTempDescZEx( (uint8*)"computational-1", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$8321, 0 );
      }
      goto label$5401;
      label$5607:;
      {
       FBSTRING* vr$8322 = fb_StrAllocTempDescZEx( (uint8*)"computational-2", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$8322, 0 );
      }
      goto label$5401;
      label$5608:;
      {
       FBSTRING* vr$8323 = fb_StrAllocTempDescZEx( (uint8*)"computational-3", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$8323, 0 );
      }
      goto label$5401;
      label$5609:;
      {
       FBSTRING* vr$8324 = fb_StrAllocTempDescZEx( (uint8*)"computational-4", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$8324, 0 );
      }
      goto label$5401;
      label$5610:;
      {
       FBSTRING* vr$8325 = fb_StrAllocTempDescZEx( (uint8*)"computational-5", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$8325, 0 );
      }
      goto label$5401;
      label$5611:;
      {
       FBSTRING* vr$8326 = fb_StrAllocTempDescZEx( (uint8*)"compute", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8326, 0 );
      }
      goto label$5401;
      label$5612:;
      {
       FBSTRING* vr$8327 = fb_StrAllocTempDescZEx( (uint8*)"com-reg", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8327, 0 );
      }
      goto label$5401;
      label$5613:;
      {
       FBSTRING* vr$8328 = fb_StrAllocTempDescZEx( (uint8*)"concat", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8328, 0 );
      }
      goto label$5401;
      label$5614:;
      {
       FBSTRING* vr$8329 = fb_StrAllocTempDescZEx( (uint8*)"concatenate", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8329, 0 );
      }
      goto label$5401;
      label$5615:;
      {
       FBSTRING* vr$8330 = fb_StrAllocTempDescZEx( (uint8*)"cond", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8330, 0 );
      }
      goto label$5401;
      label$5616:;
      {
       FBSTRING* vr$8331 = fb_StrAllocTempDescZEx( (uint8*)"cone", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8331, 0 );
      }
      goto label$5401;
      label$5617:;
      {
       FBSTRING* vr$8332 = fb_StrAllocTempDescZEx( (uint8*)"confidence", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8332, 0 );
      }
      goto label$5401;
      label$5618:;
      {
       FBSTRING* vr$8333 = fb_StrAllocTempDescZEx( (uint8*)"configuration", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8333, 0 );
      }
      goto label$5401;
      label$5619:;
      {
       FBSTRING* vr$8334 = fb_StrAllocTempDescZEx( (uint8*)"conic_sweep", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8334, 0 );
      }
      goto label$5401;
      label$5620:;
      {
       FBSTRING* vr$8335 = fb_StrAllocTempDescZEx( (uint8*)"conserve_energy", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$8335, 0 );
      }
      goto label$5401;
      label$5621:;
      {
       FBSTRING* vr$8336 = fb_StrAllocTempDescZEx( (uint8*)"const", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8336, 0 );
      }
      goto label$5401;
      label$5622:;
      {
       FBSTRING* vr$8337 = fb_StrAllocTempDescZEx( (uint8*)"constref", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8337, 0 );
      }
      goto label$5401;
      label$5623:;
      {
       FBSTRING* vr$8338 = fb_StrAllocTempDescZEx( (uint8*)"constructor", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8338, 0 );
      }
      goto label$5401;
      label$5624:;
      {
       FBSTRING* vr$8339 = fb_StrAllocTempDescZEx( (uint8*)"cont", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8339, 0 );
      }
      goto label$5401;
      label$5625:;
      {
       FBSTRING* vr$8340 = fb_StrAllocTempDescZEx( (uint8*)"contained_by", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8340, 0 );
      }
      goto label$5401;
      label$5626:;
      {
       FBSTRING* vr$8341 = fb_StrAllocTempDescZEx( (uint8*)"contains", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8341, 0 );
      }
      goto label$5401;
      label$5627:;
      {
       FBSTRING* vr$8342 = fb_StrAllocTempDescZEx( (uint8*)"content", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8342, 0 );
      }
      goto label$5401;
      label$5628:;
      {
       FBSTRING* vr$8343 = fb_StrAllocTempDescZEx( (uint8*)"continue", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8343, 0 );
      }
      goto label$5401;
      label$5629:;
      {
       FBSTRING* vr$8344 = fb_StrAllocTempDescZEx( (uint8*)"control", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8344, 0 );
      }
      goto label$5401;
      label$5630:;
      {
       FBSTRING* vr$8345 = fb_StrAllocTempDescZEx( (uint8*)"control0", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8345, 0 );
      }
      goto label$5401;
      label$5631:;
      {
       FBSTRING* vr$8346 = fb_StrAllocTempDescZEx( (uint8*)"control1", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8346, 0 );
      }
      goto label$5401;
      label$5632:;
      {
       FBSTRING* vr$8347 = fb_StrAllocTempDescZEx( (uint8*)"controls", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8347, 0 );
      }
      goto label$5401;
      label$5633:;
      {
       FBSTRING* vr$8348 = fb_StrAllocTempDescZEx( (uint8*)"converting", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8348, 0 );
      }
      goto label$5401;
      label$5634:;
      {
       FBSTRING* vr$8349 = fb_StrAllocTempDescZEx( (uint8*)"coords", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8349, 0 );
      }
      goto label$5401;
      label$5635:;
      {
       FBSTRING* vr$8350 = fb_StrAllocTempDescZEx( (uint8*)"corr", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8350, 0 );
      }
      goto label$5401;
      label$5636:;
      {
       FBSTRING* vr$8351 = fb_StrAllocTempDescZEx( (uint8*)"corresponding", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8351, 0 );
      }
      goto label$5401;
      label$5637:;
      {
       FBSTRING* vr$8352 = fb_StrAllocTempDescZEx( (uint8*)"cos", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8352, 0 );
      }
      goto label$5401;
      label$5638:;
      {
       FBSTRING* vr$8353 = fb_StrAllocTempDescZEx( (uint8*)"cosh", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8353, 0 );
      }
      goto label$5401;
      label$5639:;
      {
       FBSTRING* vr$8354 = fb_StrAllocTempDescZEx( (uint8*)"count", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8354, 0 );
      }
      goto label$5401;
      label$5640:;
      {
       FBSTRING* vr$8355 = fb_StrAllocTempDescZEx( (uint8*)"cppdecl", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8355, 0 );
      }
      goto label$5401;
      label$5641:;
      {
       FBSTRING* vr$8356 = fb_StrAllocTempDescZEx( (uint8*)"crackle", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8356, 0 );
      }
      goto label$5401;
      label$5642:;
      {
       FBSTRING* vr$8357 = fb_StrAllocTempDescZEx( (uint8*)"crand", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8357, 0 );
      }
      goto label$5401;
      label$5643:;
      {
       FBSTRING* vr$8358 = fb_StrAllocTempDescZEx( (uint8*)"cross", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8358, 0 );
      }
      goto label$5401;
      label$5644:;
      {
       FBSTRING* vr$8359 = fb_StrAllocTempDescZEx( (uint8*)"csng", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8359, 0 );
      }
      goto label$5401;
      label$5645:;
      {
       FBSTRING* vr$8360 = fb_StrAllocTempDescZEx( (uint8*)"csrlin", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8360, 0 );
      }
      goto label$5401;
      label$5646:;
      {
       FBSTRING* vr$8361 = fb_StrAllocTempDescZEx( (uint8*)"cube", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8361, 0 );
      }
      goto label$5401;
      label$5647:;
      {
       FBSTRING* vr$8362 = fb_StrAllocTempDescZEx( (uint8*)"cubic", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8362, 0 );
      }
      goto label$5401;
      label$5648:;
      {
       FBSTRING* vr$8363 = fb_StrAllocTempDescZEx( (uint8*)"cubic_spline", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8363, 0 );
      }
      goto label$5401;
      label$5649:;
      {
       FBSTRING* vr$8364 = fb_StrAllocTempDescZEx( (uint8*)"cubic_wave", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8364, 0 );
      }
      goto label$5401;
      label$5650:;
      {
       FBSTRING* vr$8365 = fb_StrAllocTempDescZEx( (uint8*)"currency", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8365, 0 );
      }
      goto label$5401;
      label$5651:;
      {
       FBSTRING* vr$8366 = fb_StrAllocTempDescZEx( (uint8*)"current_date", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8366, 0 );
      }
      goto label$5401;
      label$5652:;
      {
       FBSTRING* vr$8367 = fb_StrAllocTempDescZEx( (uint8*)"current_time", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8367, 0 );
      }
      goto label$5401;
      label$5653:;
      {
       FBSTRING* vr$8368 = fb_StrAllocTempDescZEx( (uint8*)"current_timestamp", 17ll );
       fb_PrintString( 1, (FBSTRING*)vr$8368, 0 );
      }
      goto label$5401;
      label$5654:;
      {
       FBSTRING* vr$8369 = fb_StrAllocTempDescZEx( (uint8*)"cursor", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8369, 0 );
      }
      goto label$5401;
      label$5655:;
      {
       FBSTRING* vr$8370 = fb_StrAllocTempDescZEx( (uint8*)"cutaway_textures", 16ll );
       fb_PrintString( 1, (FBSTRING*)vr$8370, 0 );
      }
      goto label$5401;
      label$5656:;
      {
       FBSTRING* vr$8371 = fb_StrAllocTempDescZEx( (uint8*)"cvd", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8371, 0 );
      }
      goto label$5401;
      label$5657:;
      {
       FBSTRING* vr$8372 = fb_StrAllocTempDescZEx( (uint8*)"cvi", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8372, 0 );
      }
      goto label$5401;
      label$5658:;
      {
       FBSTRING* vr$8373 = fb_StrAllocTempDescZEx( (uint8*)"cvs", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8373, 0 );
      }
      goto label$5401;
      label$5402:;
      static const void* tmp$4377[256ll] = {
       &&label$5403,
       &&label$5404,
       &&label$5405,
       &&label$5406,
       &&label$5407,
       &&label$5408,
       &&label$5409,
       &&label$5410,
       &&label$5411,
       &&label$5412,
       &&label$5413,
       &&label$5414,
       &&label$5415,
       &&label$5416,
       &&label$5417,
       &&label$5418,
       &&label$5419,
       &&label$5420,
       &&label$5421,
       &&label$5422,
       &&label$5423,
       &&label$5424,
       &&label$5425,
       &&label$5426,
       &&label$5427,
       &&label$5428,
       &&label$5429,
       &&label$5430,
       &&label$5431,
       &&label$5432,
       &&label$5433,
       &&label$5434,
       &&label$5435,
       &&label$5436,
       &&label$5437,
       &&label$5438,
       &&label$5439,
       &&label$5440,
       &&label$5441,
       &&label$5442,
       &&label$5443,
       &&label$5444,
       &&label$5445,
       &&label$5446,
       &&label$5447,
       &&label$5448,
       &&label$5449,
       &&label$5450,
       &&label$5451,
       &&label$5452,
       &&label$5453,
       &&label$5454,
       &&label$5455,
       &&label$5456,
       &&label$5457,
       &&label$5458,
       &&label$5459,
       &&label$5460,
       &&label$5461,
       &&label$5462,
       &&label$5463,
       &&label$5464,
       &&label$5465,
       &&label$5466,
       &&label$5467,
       &&label$5468,
       &&label$5469,
       &&label$5470,
       &&label$5471,
       &&label$5472,
       &&label$5473,
       &&label$5474,
       &&label$5475,
       &&label$5476,
       &&label$5477,
       &&label$5478,
       &&label$5479,
       &&label$5480,
       &&label$5481,
       &&label$5482,
       &&label$5483,
       &&label$5484,
       &&label$5485,
       &&label$5486,
       &&label$5487,
       &&label$5488,
       &&label$5489,
       &&label$5490,
       &&label$5491,
       &&label$5492,
       &&label$5493,
       &&label$5494,
       &&label$5495,
       &&label$5496,
       &&label$5497,
       &&label$5498,
       &&label$5499,
       &&label$5500,
       &&label$5501,
       &&label$5502,
       &&label$5503,
       &&label$5504,
       &&label$5505,
       &&label$5506,
       &&label$5507,
       &&label$5508,
       &&label$5509,
       &&label$5510,
       &&label$5511,
       &&label$5512,
       &&label$5513,
       &&label$5514,
       &&label$5515,
       &&label$5516,
       &&label$5517,
       &&label$5518,
       &&label$5519,
       &&label$5520,
       &&label$5521,
       &&label$5522,
       &&label$5523,
       &&label$5524,
       &&label$5525,
       &&label$5526,
       &&label$5527,
       &&label$5528,
       &&label$5529,
       &&label$5530,
       &&label$5531,
       &&label$5532,
       &&label$5533,
       &&label$5534,
       &&label$5535,
       &&label$5536,
       &&label$5537,
       &&label$5538,
       &&label$5539,
       &&label$5540,
       &&label$5541,
       &&label$5542,
       &&label$5543,
       &&label$5544,
       &&label$5545,
       &&label$5546,
       &&label$5547,
       &&label$5548,
       &&label$5549,
       &&label$5550,
       &&label$5551,
       &&label$5552,
       &&label$5553,
       &&label$5554,
       &&label$5555,
       &&label$5556,
       &&label$5557,
       &&label$5558,
       &&label$5559,
       &&label$5560,
       &&label$5561,
       &&label$5562,
       &&label$5563,
       &&label$5564,
       &&label$5565,
       &&label$5566,
       &&label$5567,
       &&label$5568,
       &&label$5569,
       &&label$5570,
       &&label$5571,
       &&label$5572,
       &&label$5573,
       &&label$5574,
       &&label$5575,
       &&label$5576,
       &&label$5577,
       &&label$5578,
       &&label$5579,
       &&label$5580,
       &&label$5581,
       &&label$5582,
       &&label$5583,
       &&label$5584,
       &&label$5585,
       &&label$5586,
       &&label$5587,
       &&label$5588,
       &&label$5589,
       &&label$5590,
       &&label$5591,
       &&label$5592,
       &&label$5593,
       &&label$5594,
       &&label$5595,
       &&label$5596,
       &&label$5597,
       &&label$5598,
       &&label$5599,
       &&label$5600,
       &&label$5601,
       &&label$5602,
       &&label$5603,
       &&label$5604,
       &&label$5605,
       &&label$5606,
       &&label$5607,
       &&label$5608,
       &&label$5609,
       &&label$5610,
       &&label$5611,
       &&label$5612,
       &&label$5613,
       &&label$5614,
       &&label$5615,
       &&label$5616,
       &&label$5617,
       &&label$5618,
       &&label$5619,
       &&label$5620,
       &&label$5621,
       &&label$5622,
       &&label$5623,
       &&label$5624,
       &&label$5625,
       &&label$5626,
       &&label$5627,
       &&label$5628,
       &&label$5629,
       &&label$5630,
       &&label$5631,
       &&label$5632,
       &&label$5633,
       &&label$5634,
       &&label$5635,
       &&label$5636,
       &&label$5637,
       &&label$5638,
       &&label$5639,
       &&label$5640,
       &&label$5641,
       &&label$5642,
       &&label$5643,
       &&label$5644,
       &&label$5645,
       &&label$5646,
       &&label$5647,
       &&label$5648,
       &&label$5649,
       &&label$5650,
       &&label$5651,
       &&label$5652,
       &&label$5653,
       &&label$5654,
       &&label$5655,
       &&label$5656,
       &&label$5657,
       &&label$5658,
      };
      if( TMP$2242$6 > 255ull ) goto label$5401;
      goto *tmp$4377[TMP$2242$6 - 0ull];
      label$5401:;
     }
    }
    goto label$5327;
    label$5659:;
    {
     {
      uint64 TMP$2496$6;
      TMP$2496$6 = ((uint64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394968ll) ));
      goto label$5661;
      label$5662:;
      {
       FBSTRING* vr$8376 = fb_StrAllocTempDescZEx( (uint8*)"cylinder", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8376, 0 );
      }
      goto label$5660;
      label$5663:;
      {
       FBSTRING* vr$8377 = fb_StrAllocTempDescZEx( (uint8*)"cylindrical", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8377, 0 );
      }
      goto label$5660;
      label$5664:;
      {
       FBSTRING* vr$8378 = fb_StrAllocTempDescZEx( (uint8*)"d", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$8378, 0 );
      }
      goto label$5660;
      label$5665:;
      {
       FBSTRING* vr$8379 = fb_StrAllocTempDescZEx( (uint8*)"data", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8379, 0 );
      }
      goto label$5660;
      label$5666:;
      {
       FBSTRING* vr$8380 = fb_StrAllocTempDescZEx( (uint8*)"dataxel", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8380, 0 );
      }
      goto label$5660;
      label$5667:;
      {
       FBSTRING* vr$8381 = fb_StrAllocTempDescZEx( (uint8*)"date", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8381, 0 );
      }
      goto label$5660;
      label$5668:;
      {
       FBSTRING* vr$8382 = fb_StrAllocTempDescZEx( (uint8*)"date-compiled", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8382, 0 );
      }
      goto label$5660;
      label$5669:;
      {
       FBSTRING* vr$8383 = fb_StrAllocTempDescZEx( (uint8*)"date-written", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8383, 0 );
      }
      goto label$5660;
      label$5670:;
      {
       FBSTRING* vr$8384 = fb_StrAllocTempDescZEx( (uint8*)"day", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8384, 0 );
      }
      goto label$5660;
      label$5671:;
      {
       FBSTRING* vr$8385 = fb_StrAllocTempDescZEx( (uint8*)"day-of-week", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8385, 0 );
      }
      goto label$5660;
      label$5672:;
      {
       FBSTRING* vr$8386 = fb_StrAllocTempDescZEx( (uint8*)"dbcs", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8386, 0 );
      }
      goto label$5660;
      label$5673:;
      {
       FBSTRING* vr$8387 = fb_StrAllocTempDescZEx( (uint8*)"dbms_in_memory", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$8387, 0 );
      }
      goto label$5660;
      label$5674:;
      {
       FBSTRING* vr$8388 = fb_StrAllocTempDescZEx( (uint8*)"de", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8388, 0 );
      }
      goto label$5660;
      label$5675:;
      {
       FBSTRING* vr$8389 = fb_StrAllocTempDescZEx( (uint8*)"debug", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8389, 0 );
      }
      goto label$5660;
      label$5676:;
      {
       FBSTRING* vr$8390 = fb_StrAllocTempDescZEx( (uint8*)"debug-contents", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$8390, 0 );
      }
      goto label$5660;
      label$5677:;
      {
       FBSTRING* vr$8391 = fb_StrAllocTempDescZEx( (uint8*)"debugging", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8391, 0 );
      }
      goto label$5660;
      label$5678:;
      {
       FBSTRING* vr$8392 = fb_StrAllocTempDescZEx( (uint8*)"debug-item", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8392, 0 );
      }
      goto label$5660;
      label$5679:;
      {
       FBSTRING* vr$8393 = fb_StrAllocTempDescZEx( (uint8*)"debug-line", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8393, 0 );
      }
      goto label$5660;
      label$5680:;
      {
       FBSTRING* vr$8394 = fb_StrAllocTempDescZEx( (uint8*)"debug-name", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8394, 0 );
      }
      goto label$5660;
      label$5681:;
      {
       FBSTRING* vr$8395 = fb_StrAllocTempDescZEx( (uint8*)"debug-sub-1", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8395, 0 );
      }
      goto label$5660;
      label$5682:;
      {
       FBSTRING* vr$8396 = fb_StrAllocTempDescZEx( (uint8*)"debug-sub-2", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8396, 0 );
      }
      goto label$5660;
      label$5683:;
      {
       FBSTRING* vr$8397 = fb_StrAllocTempDescZEx( (uint8*)"debug-sub-3", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8397, 0 );
      }
      goto label$5660;
      label$5684:;
      {
       FBSTRING* vr$8398 = fb_StrAllocTempDescZEx( (uint8*)"dec", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8398, 0 );
      }
      goto label$5660;
      label$5685:;
      {
       FBSTRING* vr$8399 = fb_StrAllocTempDescZEx( (uint8*)"decimal", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8399, 0 );
      }
      goto label$5660;
      label$5686:;
      {
       FBSTRING* vr$8400 = fb_StrAllocTempDescZEx( (uint8*)"decimal-point", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8400, 0 );
      }
      goto label$5660;
      label$5687:;
      {
       FBSTRING* vr$8401 = fb_StrAllocTempDescZEx( (uint8*)"declaratives", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8401, 0 );
      }
      goto label$5660;
      label$5688:;
      {
       FBSTRING* vr$8402 = fb_StrAllocTempDescZEx( (uint8*)"declare", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8402, 0 );
      }
      goto label$5660;
      label$5689:;
      {
       FBSTRING* vr$8403 = fb_StrAllocTempDescZEx( (uint8*)"decode", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8403, 0 );
      }
      goto label$5660;
      label$5690:;
      {
       FBSTRING* vr$8404 = fb_StrAllocTempDescZEx( (uint8*)"def", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8404, 0 );
      }
      goto label$5660;
      label$5691:;
      {
       FBSTRING* vr$8405 = fb_StrAllocTempDescZEx( (uint8*)"default", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8405, 0 );
      }
      goto label$5660;
      label$5692:;
      {
       FBSTRING* vr$8406 = fb_StrAllocTempDescZEx( (uint8*)"defdbl", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8406, 0 );
      }
      goto label$5660;
      label$5693:;
      {
       FBSTRING* vr$8407 = fb_StrAllocTempDescZEx( (uint8*)"define", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8407, 0 );
      }
      goto label$5660;
      label$5694:;
      {
       FBSTRING* vr$8408 = fb_StrAllocTempDescZEx( (uint8*)"defined", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8408, 0 );
      }
      goto label$5660;
      label$5695:;
      {
       FBSTRING* vr$8409 = fb_StrAllocTempDescZEx( (uint8*)"defint", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8409, 0 );
      }
      goto label$5660;
      label$5696:;
      {
       FBSTRING* vr$8410 = fb_StrAllocTempDescZEx( (uint8*)"defsng", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8410, 0 );
      }
      goto label$5660;
      label$5697:;
      {
       FBSTRING* vr$8411 = fb_StrAllocTempDescZEx( (uint8*)"defstr", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8411, 0 );
      }
      goto label$5660;
      label$5698:;
      {
       FBSTRING* vr$8412 = fb_StrAllocTempDescZEx( (uint8*)"degrees", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8412, 0 );
      }
      goto label$5660;
      label$5699:;
      {
       FBSTRING* vr$8413 = fb_StrAllocTempDescZEx( (uint8*)"delete", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8413, 0 );
      }
      goto label$5660;
      label$5700:;
      {
       FBSTRING* vr$8414 = fb_StrAllocTempDescZEx( (uint8*)"delimited", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8414, 0 );
      }
      goto label$5660;
      label$5701:;
      {
       FBSTRING* vr$8415 = fb_StrAllocTempDescZEx( (uint8*)"delimiter", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8415, 0 );
      }
      goto label$5660;
      label$5702:;
      {
       FBSTRING* vr$8416 = fb_StrAllocTempDescZEx( (uint8*)"density", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8416, 0 );
      }
      goto label$5660;
      label$5703:;
      {
       FBSTRING* vr$8417 = fb_StrAllocTempDescZEx( (uint8*)"density_file", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8417, 0 );
      }
      goto label$5660;
      label$5704:;
      {
       FBSTRING* vr$8418 = fb_StrAllocTempDescZEx( (uint8*)"density_map", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8418, 0 );
      }
      goto label$5660;
      label$5705:;
      {
       FBSTRING* vr$8419 = fb_StrAllocTempDescZEx( (uint8*)"dents", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8419, 0 );
      }
      goto label$5660;
      label$5706:;
      {
       FBSTRING* vr$8420 = fb_StrAllocTempDescZEx( (uint8*)"depending", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8420, 0 );
      }
      goto label$5660;
      label$5707:;
      {
       FBSTRING* vr$8421 = fb_StrAllocTempDescZEx( (uint8*)"desc", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8421, 0 );
      }
      goto label$5660;
      label$5708:;
      {
       FBSTRING* vr$8422 = fb_StrAllocTempDescZEx( (uint8*)"descending", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8422, 0 );
      }
      goto label$5660;
      label$5709:;
      {
       FBSTRING* vr$8423 = fb_StrAllocTempDescZEx( (uint8*)"destination", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8423, 0 );
      }
      goto label$5660;
      label$5710:;
      {
       FBSTRING* vr$8424 = fb_StrAllocTempDescZEx( (uint8*)"destructor", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8424, 0 );
      }
      goto label$5660;
      label$5711:;
      {
       FBSTRING* vr$8425 = fb_StrAllocTempDescZEx( (uint8*)"detail", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8425, 0 );
      }
      goto label$5660;
      label$5712:;
      {
       FBSTRING* vr$8426 = fb_StrAllocTempDescZEx( (uint8*)"determinant", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8426, 0 );
      }
      goto label$5660;
      label$5713:;
      {
       FBSTRING* vr$8427 = fb_StrAllocTempDescZEx( (uint8*)"df3", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8427, 0 );
      }
      goto label$5660;
      label$5714:;
      {
       FBSTRING* vr$8428 = fb_StrAllocTempDescZEx( (uint8*)"dict_find", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8428, 0 );
      }
      goto label$5660;
      label$5715:;
      {
       FBSTRING* vr$8429 = fb_StrAllocTempDescZEx( (uint8*)"dict_next", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8429, 0 );
      }
      goto label$5660;
      label$5716:;
      {
       FBSTRING* vr$8430 = fb_StrAllocTempDescZEx( (uint8*)"dict_value", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8430, 0 );
      }
      goto label$5660;
      label$5717:;
      {
       FBSTRING* vr$8431 = fb_StrAllocTempDescZEx( (uint8*)"difference", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8431, 0 );
      }
      goto label$5660;
      label$5718:;
      {
       FBSTRING* vr$8432 = fb_StrAllocTempDescZEx( (uint8*)"diffuse", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8432, 0 );
      }
      goto label$5660;
      label$5719:;
      {
       FBSTRING* vr$8433 = fb_StrAllocTempDescZEx( (uint8*)"dim", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8433, 0 );
      }
      goto label$5660;
      label$5720:;
      {
       FBSTRING* vr$8434 = fb_StrAllocTempDescZEx( (uint8*)"dimension", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8434, 0 );
      }
      goto label$5660;
      label$5721:;
      {
       FBSTRING* vr$8435 = fb_StrAllocTempDescZEx( (uint8*)"dimensions", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8435, 0 );
      }
      goto label$5660;
      label$5722:;
      {
       FBSTRING* vr$8436 = fb_StrAllocTempDescZEx( (uint8*)"dimension_size", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$8436, 0 );
      }
      goto label$5660;
      label$5723:;
      {
       FBSTRING* vr$8437 = fb_StrAllocTempDescZEx( (uint8*)"direction", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8437, 0 );
      }
      goto label$5660;
      label$5724:;
      {
       FBSTRING* vr$8438 = fb_StrAllocTempDescZEx( (uint8*)"directive_error", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$8438, 0 );
      }
      goto label$5660;
      label$5725:;
      {
       FBSTRING* vr$8439 = fb_StrAllocTempDescZEx( (uint8*)"disc", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8439, 0 );
      }
      goto label$5660;
      label$5726:;
      {
       FBSTRING* vr$8440 = fb_StrAllocTempDescZEx( (uint8*)"discard", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8440, 0 );
      }
      goto label$5660;
      label$5727:;
      {
       FBSTRING* vr$8441 = fb_StrAllocTempDescZEx( (uint8*)"dispersion", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8441, 0 );
      }
      goto label$5660;
      label$5728:;
      {
       FBSTRING* vr$8442 = fb_StrAllocTempDescZEx( (uint8*)"dispersion_samples", 18ll );
       fb_PrintString( 1, (FBSTRING*)vr$8442, 0 );
      }
      goto label$5660;
      label$5729:;
      {
       FBSTRING* vr$8443 = fb_StrAllocTempDescZEx( (uint8*)"displace", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8443, 0 );
      }
      goto label$5660;
      label$5730:;
      {
       FBSTRING* vr$8444 = fb_StrAllocTempDescZEx( (uint8*)"display", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8444, 0 );
      }
      goto label$5660;
      label$5731:;
      {
       FBSTRING* vr$8445 = fb_StrAllocTempDescZEx( (uint8*)"display-1", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8445, 0 );
      }
      goto label$5660;
      label$5732:;
      {
       FBSTRING* vr$8446 = fb_StrAllocTempDescZEx( (uint8*)"dispose", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8446, 0 );
      }
      goto label$5660;
      label$5733:;
      {
       FBSTRING* vr$8447 = fb_StrAllocTempDescZEx( (uint8*)"distance", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8447, 0 );
      }
      goto label$5660;
      label$5734:;
      {
       FBSTRING* vr$8448 = fb_StrAllocTempDescZEx( (uint8*)"dist_exp", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8448, 0 );
      }
      goto label$5660;
      label$5735:;
      {
       FBSTRING* vr$8449 = fb_StrAllocTempDescZEx( (uint8*)"distinct", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8449, 0 );
      }
      goto label$5660;
      label$5736:;
      {
       FBSTRING* vr$8450 = fb_StrAllocTempDescZEx( (uint8*)"div", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8450, 0 );
      }
      goto label$5660;
      label$5737:;
      {
       FBSTRING* vr$8451 = fb_StrAllocTempDescZEx( (uint8*)"divide", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8451, 0 );
      }
      goto label$5660;
      label$5738:;
      {
       FBSTRING* vr$8452 = fb_StrAllocTempDescZEx( (uint8*)"division", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8452, 0 );
      }
      goto label$5660;
      label$5739:;
      {
       FBSTRING* vr$8453 = fb_StrAllocTempDescZEx( (uint8*)"do", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8453, 0 );
      }
      goto label$5660;
      label$5740:;
      {
       FBSTRING* vr$8454 = fb_StrAllocTempDescZEx( (uint8*)"dot", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8454, 0 );
      }
      goto label$5660;
      label$5741:;
      {
       FBSTRING* vr$8455 = fb_StrAllocTempDescZEx( (uint8*)"double", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8455, 0 );
      }
      goto label$5660;
      label$5742:;
      {
       FBSTRING* vr$8456 = fb_StrAllocTempDescZEx( (uint8*)"doublegreatethan", 16ll );
       fb_PrintString( 1, (FBSTRING*)vr$8456, 0 );
      }
      goto label$5660;
      label$5743:;
      {
       FBSTRING* vr$8457 = fb_StrAllocTempDescZEx( (uint8*)"double_illuminate", 17ll );
       fb_PrintString( 1, (FBSTRING*)vr$8457, 0 );
      }
      goto label$5660;
      label$5744:;
      {
       FBSTRING* vr$8458 = fb_StrAllocTempDescZEx( (uint8*)"down", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8458, 0 );
      }
      goto label$5660;
      label$5745:;
      {
       FBSTRING* vr$8459 = fb_StrAllocTempDescZEx( (uint8*)"downto", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8459, 0 );
      }
      goto label$5660;
      label$5746:;
      {
       FBSTRING* vr$8460 = fb_StrAllocTempDescZEx( (uint8*)"draw", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8460, 0 );
      }
      goto label$5660;
      label$5747:;
      {
       FBSTRING* vr$8461 = fb_StrAllocTempDescZEx( (uint8*)"duplicates", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8461, 0 );
      }
      goto label$5660;
      label$5748:;
      {
       FBSTRING* vr$8462 = fb_StrAllocTempDescZEx( (uint8*)"dvec2", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8462, 0 );
      }
      goto label$5660;
      label$5749:;
      {
       FBSTRING* vr$8463 = fb_StrAllocTempDescZEx( (uint8*)"dvec3", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8463, 0 );
      }
      goto label$5660;
      label$5750:;
      {
       FBSTRING* vr$8464 = fb_StrAllocTempDescZEx( (uint8*)"dvec4", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8464, 0 );
      }
      goto label$5660;
      label$5751:;
      {
       FBSTRING* vr$8465 = fb_StrAllocTempDescZEx( (uint8*)"dx", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8465, 0 );
      }
      goto label$5660;
      label$5752:;
      {
       FBSTRING* vr$8466 = fb_StrAllocTempDescZEx( (uint8*)"dy", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8466, 0 );
      }
      goto label$5660;
      label$5753:;
      {
       FBSTRING* vr$8467 = fb_StrAllocTempDescZEx( (uint8*)"dynamic", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8467, 0 );
      }
      goto label$5660;
      label$5754:;
      {
       FBSTRING* vr$8468 = fb_StrAllocTempDescZEx( (uint8*)"dz", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8468, 0 );
      }
      goto label$5660;
      label$5755:;
      {
       FBSTRING* vr$8469 = fb_StrAllocTempDescZEx( (uint8*)"e", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$8469, 0 );
      }
      goto label$5660;
      label$5756:;
      {
       FBSTRING* vr$8470 = fb_StrAllocTempDescZEx( (uint8*)"eccentricity", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8470, 0 );
      }
      goto label$5660;
      label$5757:;
      {
       FBSTRING* vr$8471 = fb_StrAllocTempDescZEx( (uint8*)"edit", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8471, 0 );
      }
      goto label$5660;
      label$5758:;
      {
       FBSTRING* vr$8472 = fb_StrAllocTempDescZEx( (uint8*)"egcs", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8472, 0 );
      }
      goto label$5660;
      label$5759:;
      {
       FBSTRING* vr$8473 = fb_StrAllocTempDescZEx( (uint8*)"egi", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8473, 0 );
      }
      goto label$5660;
      label$5760:;
      {
       FBSTRING* vr$8474 = fb_StrAllocTempDescZEx( (uint8*)"eject", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8474, 0 );
      }
      goto label$5660;
      label$5761:;
      {
       FBSTRING* vr$8475 = fb_StrAllocTempDescZEx( (uint8*)"elif", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8475, 0 );
      }
      goto label$5660;
      label$5762:;
      {
       FBSTRING* vr$8476 = fb_StrAllocTempDescZEx( (uint8*)"else", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8476, 0 );
      }
      goto label$5660;
      label$5763:;
      {
       FBSTRING* vr$8477 = fb_StrAllocTempDescZEx( (uint8*)"elseif", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8477, 0 );
      }
      goto label$5660;
      label$5764:;
      {
       FBSTRING* vr$8478 = fb_StrAllocTempDescZEx( (uint8*)"emi", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8478, 0 );
      }
      goto label$5660;
      label$5765:;
      {
       FBSTRING* vr$8479 = fb_StrAllocTempDescZEx( (uint8*)"emission", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8479, 0 );
      }
      goto label$5660;
      label$5766:;
      {
       FBSTRING* vr$8480 = fb_StrAllocTempDescZEx( (uint8*)"enable", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8480, 0 );
      }
      goto label$5660;
      label$5767:;
      {
       FBSTRING* vr$8481 = fb_StrAllocTempDescZEx( (uint8*)"encode", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8481, 0 );
      }
      goto label$5660;
      label$5768:;
      {
       FBSTRING* vr$8482 = fb_StrAllocTempDescZEx( (uint8*)"end", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8482, 0 );
      }
      goto label$5660;
      label$5769:;
      {
       FBSTRING* vr$8483 = fb_StrAllocTempDescZEx( (uint8*)"end-add", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8483, 0 );
      }
      goto label$5660;
      label$5770:;
      {
       FBSTRING* vr$8484 = fb_StrAllocTempDescZEx( (uint8*)"end-call", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8484, 0 );
      }
      goto label$5660;
      label$5771:;
      {
       FBSTRING* vr$8485 = fb_StrAllocTempDescZEx( (uint8*)"end-compute", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8485, 0 );
      }
      goto label$5660;
      label$5772:;
      {
       FBSTRING* vr$8486 = fb_StrAllocTempDescZEx( (uint8*)"end-delete", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8486, 0 );
      }
      goto label$5660;
      label$5773:;
      {
       FBSTRING* vr$8487 = fb_StrAllocTempDescZEx( (uint8*)"end-divide", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8487, 0 );
      }
      goto label$5660;
      label$5774:;
      {
       FBSTRING* vr$8488 = fb_StrAllocTempDescZEx( (uint8*)"end-evaluate", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8488, 0 );
      }
      goto label$5660;
      label$5775:;
      {
       FBSTRING* vr$8489 = fb_StrAllocTempDescZEx( (uint8*)"end-if", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8489, 0 );
      }
      goto label$5660;
      label$5776:;
      {
       FBSTRING* vr$8490 = fb_StrAllocTempDescZEx( (uint8*)"ending", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8490, 0 );
      }
      goto label$5660;
      label$5777:;
      {
       FBSTRING* vr$8491 = fb_StrAllocTempDescZEx( (uint8*)"end-invoke", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8491, 0 );
      }
      goto label$5660;
      label$5778:;
      {
       FBSTRING* vr$8492 = fb_StrAllocTempDescZEx( (uint8*)"end-multiply", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8492, 0 );
      }
      goto label$5660;
      label$5779:;
      {
       FBSTRING* vr$8493 = fb_StrAllocTempDescZEx( (uint8*)"endofdata", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8493, 0 );
      }
      goto label$5660;
      label$5780:;
      {
       FBSTRING* vr$8494 = fb_StrAllocTempDescZEx( (uint8*)"end-of-page", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8494, 0 );
      }
      goto label$5660;
      label$5781:;
      {
       FBSTRING* vr$8495 = fb_StrAllocTempDescZEx( (uint8*)"end-perform", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8495, 0 );
      }
      goto label$5660;
      label$5782:;
      {
       FBSTRING* vr$8496 = fb_StrAllocTempDescZEx( (uint8*)"end-read", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8496, 0 );
      }
      goto label$5660;
      label$5783:;
      {
       FBSTRING* vr$8497 = fb_StrAllocTempDescZEx( (uint8*)"end-receive", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8497, 0 );
      }
      goto label$5660;
      label$5784:;
      {
       FBSTRING* vr$8498 = fb_StrAllocTempDescZEx( (uint8*)"end-return", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8498, 0 );
      }
      goto label$5660;
      label$5785:;
      {
       FBSTRING* vr$8499 = fb_StrAllocTempDescZEx( (uint8*)"end-rewrite", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8499, 0 );
      }
      goto label$5660;
      label$5786:;
      {
       FBSTRING* vr$8500 = fb_StrAllocTempDescZEx( (uint8*)"end-search", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8500, 0 );
      }
      goto label$5660;
      label$5787:;
      {
       FBSTRING* vr$8501 = fb_StrAllocTempDescZEx( (uint8*)"end-start", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8501, 0 );
      }
      goto label$5660;
      label$5788:;
      {
       FBSTRING* vr$8502 = fb_StrAllocTempDescZEx( (uint8*)"end-string", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8502, 0 );
      }
      goto label$5660;
      label$5789:;
      {
       FBSTRING* vr$8503 = fb_StrAllocTempDescZEx( (uint8*)"end-subtract", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8503, 0 );
      }
      goto label$5660;
      label$5790:;
      {
       FBSTRING* vr$8504 = fb_StrAllocTempDescZEx( (uint8*)"endswith", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8504, 0 );
      }
      goto label$5660;
      label$5791:;
      {
       FBSTRING* vr$8505 = fb_StrAllocTempDescZEx( (uint8*)"end-unstring", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8505, 0 );
      }
      goto label$5660;
      label$5792:;
      {
       FBSTRING* vr$8506 = fb_StrAllocTempDescZEx( (uint8*)"end-write", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8506, 0 );
      }
      goto label$5660;
      label$5793:;
      {
       FBSTRING* vr$8507 = fb_StrAllocTempDescZEx( (uint8*)"enter", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8507, 0 );
      }
      goto label$5660;
      label$5794:;
      {
       FBSTRING* vr$8508 = fb_StrAllocTempDescZEx( (uint8*)"entry", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8508, 0 );
      }
      goto label$5660;
      label$5795:;
      {
       FBSTRING* vr$8509 = fb_StrAllocTempDescZEx( (uint8*)"enum", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8509, 0 );
      }
      goto label$5660;
      label$5796:;
      {
       FBSTRING* vr$8510 = fb_StrAllocTempDescZEx( (uint8*)"environ", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8510, 0 );
      }
      goto label$5660;
      label$5797:;
      {
       FBSTRING* vr$8511 = fb_StrAllocTempDescZEx( (uint8*)"environment", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8511, 0 );
      }
      goto label$5660;
      label$5798:;
      {
       FBSTRING* vr$8512 = fb_StrAllocTempDescZEx( (uint8*)"eof", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8512, 0 );
      }
      goto label$5660;
      label$5799:;
      {
       FBSTRING* vr$8513 = fb_StrAllocTempDescZEx( (uint8*)"eop", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8513, 0 );
      }
      goto label$5660;
      label$5800:;
      {
       FBSTRING* vr$8514 = fb_StrAllocTempDescZEx( (uint8*)"equal", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8514, 0 );
      }
      goto label$5660;
      label$5801:;
      {
       FBSTRING* vr$8515 = fb_StrAllocTempDescZEx( (uint8*)"equivalence", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8515, 0 );
      }
      goto label$5660;
      label$5802:;
      {
       FBSTRING* vr$8516 = fb_StrAllocTempDescZEx( (uint8*)"eqv", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8516, 0 );
      }
      goto label$5660;
      label$5803:;
      {
       FBSTRING* vr$8517 = fb_StrAllocTempDescZEx( (uint8*)"erase", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8517, 0 );
      }
      goto label$5660;
      label$5804:;
      {
       FBSTRING* vr$8518 = fb_StrAllocTempDescZEx( (uint8*)"erdev", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8518, 0 );
      }
      goto label$5660;
      label$5805:;
      {
       FBSTRING* vr$8519 = fb_StrAllocTempDescZEx( (uint8*)"erf", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8519, 0 );
      }
      goto label$5660;
      label$5806:;
      {
       FBSTRING* vr$8520 = fb_StrAllocTempDescZEx( (uint8*)"erfc", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8520, 0 );
      }
      goto label$5660;
      label$5807:;
      {
       FBSTRING* vr$8521 = fb_StrAllocTempDescZEx( (uint8*)"erl", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8521, 0 );
      }
      goto label$5660;
      label$5808:;
      {
       FBSTRING* vr$8522 = fb_StrAllocTempDescZEx( (uint8*)"err", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8522, 0 );
      }
      goto label$5660;
      label$5809:;
      {
       FBSTRING* vr$8523 = fb_StrAllocTempDescZEx( (uint8*)"error", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8523, 0 );
      }
      goto label$5660;
      label$5810:;
      {
       FBSTRING* vr$8524 = fb_StrAllocTempDescZEx( (uint8*)"error_bound", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8524, 0 );
      }
      goto label$5660;
      label$5811:;
      {
       FBSTRING* vr$8525 = fb_StrAllocTempDescZEx( (uint8*)"escape", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8525, 0 );
      }
      goto label$5660;
      label$5812:;
      {
       FBSTRING* vr$8526 = fb_StrAllocTempDescZEx( (uint8*)"esi", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8526, 0 );
      }
      goto label$5660;
      label$5813:;
      {
       FBSTRING* vr$8527 = fb_StrAllocTempDescZEx( (uint8*)"evaluate", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8527, 0 );
      }
      goto label$5660;
      label$5814:;
      {
       FBSTRING* vr$8528 = fb_StrAllocTempDescZEx( (uint8*)"every", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8528, 0 );
      }
      goto label$5660;
      label$5815:;
      {
       FBSTRING* vr$8529 = fb_StrAllocTempDescZEx( (uint8*)"except", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8529, 0 );
      }
      goto label$5660;
      label$5816:;
      {
       FBSTRING* vr$8530 = fb_StrAllocTempDescZEx( (uint8*)"exception", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8530, 0 );
      }
      goto label$5660;
      label$5817:;
      {
       FBSTRING* vr$8531 = fb_StrAllocTempDescZEx( (uint8*)"exit", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8531, 0 );
      }
      goto label$5660;
      label$5818:;
      {
       FBSTRING* vr$8532 = fb_StrAllocTempDescZEx( (uint8*)"exp", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8532, 0 );
      }
      goto label$5660;
      label$5819:;
      {
       FBSTRING* vr$8533 = fb_StrAllocTempDescZEx( (uint8*)"exp2", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8533, 0 );
      }
      goto label$5660;
      label$5820:;
      {
       FBSTRING* vr$8534 = fb_StrAllocTempDescZEx( (uint8*)"expand", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8534, 0 );
      }
      goto label$5660;
      label$5821:;
      {
       FBSTRING* vr$8535 = fb_StrAllocTempDescZEx( (uint8*)"expand_thresholds", 17ll );
       fb_PrintString( 1, (FBSTRING*)vr$8535, 0 );
      }
      goto label$5660;
      label$5822:;
      {
       FBSTRING* vr$8536 = fb_StrAllocTempDescZEx( (uint8*)"expm1", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8536, 0 );
      }
      goto label$5660;
      label$5823:;
      {
       FBSTRING* vr$8537 = fb_StrAllocTempDescZEx( (uint8*)"exponent", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8537, 0 );
      }
      goto label$5660;
      label$5824:;
      {
       FBSTRING* vr$8538 = fb_StrAllocTempDescZEx( (uint8*)"export", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8538, 0 );
      }
      goto label$5660;
      label$5825:;
      {
       FBSTRING* vr$8539 = fb_StrAllocTempDescZEx( (uint8*)"exports", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8539, 0 );
      }
      goto label$5660;
      label$5826:;
      {
       FBSTRING* vr$8540 = fb_StrAllocTempDescZEx( (uint8*)"extend", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8540, 0 );
      }
      goto label$5660;
      label$5827:;
      {
       FBSTRING* vr$8541 = fb_StrAllocTempDescZEx( (uint8*)"exterior", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8541, 0 );
      }
      goto label$5660;
      label$5828:;
      {
       FBSTRING* vr$8542 = fb_StrAllocTempDescZEx( (uint8*)"extern", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8542, 0 );
      }
      goto label$5660;
      label$5829:;
      {
       FBSTRING* vr$8543 = fb_StrAllocTempDescZEx( (uint8*)"external", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8543, 0 );
      }
      goto label$5660;
      label$5830:;
      {
       FBSTRING* vr$8544 = fb_StrAllocTempDescZEx( (uint8*)"exterr", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8544, 0 );
      }
      goto label$5660;
      label$5831:;
      {
       FBSTRING* vr$8545 = fb_StrAllocTempDescZEx( (uint8*)"extinction", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8545, 0 );
      }
      goto label$5660;
      label$5832:;
      {
       FBSTRING* vr$8546 = fb_StrAllocTempDescZEx( (uint8*)"extract", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8546, 0 );
      }
      goto label$5660;
      label$5833:;
      {
       FBSTRING* vr$8547 = fb_StrAllocTempDescZEx( (uint8*)"f", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$8547, 0 );
      }
      goto label$5660;
      label$5834:;
      {
       FBSTRING* vr$8548 = fb_StrAllocTempDescZEx( (uint8*)"fabs", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8548, 0 );
      }
      goto label$5660;
      label$5835:;
      {
       FBSTRING* vr$8549 = fb_StrAllocTempDescZEx( (uint8*)"faceforward", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8549, 0 );
      }
      goto label$5660;
      label$5836:;
      {
       FBSTRING* vr$8550 = fb_StrAllocTempDescZEx( (uint8*)"face_indices", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8550, 0 );
      }
      goto label$5660;
      label$5837:;
      {
       FBSTRING* vr$8551 = fb_StrAllocTempDescZEx( (uint8*)"facets", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8551, 0 );
      }
      goto label$5660;
      label$5838:;
      {
       FBSTRING* vr$8552 = fb_StrAllocTempDescZEx( (uint8*)"fade_color", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8552, 0 );
      }
      goto label$5660;
      label$5839:;
      {
       FBSTRING* vr$8553 = fb_StrAllocTempDescZEx( (uint8*)"fade_colour", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8553, 0 );
      }
      goto label$5660;
      label$5840:;
      {
       FBSTRING* vr$8554 = fb_StrAllocTempDescZEx( (uint8*)"fade_distance", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8554, 0 );
      }
      goto label$5660;
      label$5841:;
      {
       FBSTRING* vr$8555 = fb_StrAllocTempDescZEx( (uint8*)"fade_power", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8555, 0 );
      }
      goto label$5660;
      label$5842:;
      {
       FBSTRING* vr$8556 = fb_StrAllocTempDescZEx( (uint8*)"falloff", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8556, 0 );
      }
      goto label$5660;
      label$5843:;
      {
       FBSTRING* vr$8557 = fb_StrAllocTempDescZEx( (uint8*)"falloff_angle", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8557, 0 );
      }
      goto label$5660;
      label$5844:;
      {
       FBSTRING* vr$8558 = fb_StrAllocTempDescZEx( (uint8*)"false", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8558, 0 );
      }
      goto label$5660;
      label$5845:;
      {
       FBSTRING* vr$8559 = fb_StrAllocTempDescZEx( (uint8*)"far", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8559, 0 );
      }
      goto label$5660;
      label$5846:;
      {
       FBSTRING* vr$8560 = fb_StrAllocTempDescZEx( (uint8*)"fclose", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8560, 0 );
      }
      goto label$5660;
      label$5847:;
      {
       FBSTRING* vr$8561 = fb_StrAllocTempDescZEx( (uint8*)"fd", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8561, 0 );
      }
      goto label$5660;
      label$5848:;
      {
       FBSTRING* vr$8562 = fb_StrAllocTempDescZEx( (uint8*)"field", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8562, 0 );
      }
      goto label$5660;
      label$5849:;
      {
       FBSTRING* vr$8563 = fb_StrAllocTempDescZEx( (uint8*)"file", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8563, 0 );
      }
      goto label$5660;
      label$5850:;
      {
       FBSTRING* vr$8564 = fb_StrAllocTempDescZEx( (uint8*)"file-control", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8564, 0 );
      }
      goto label$5660;
      label$5851:;
      {
       FBSTRING* vr$8565 = fb_StrAllocTempDescZEx( (uint8*)"file_exists", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8565, 0 );
      }
      goto label$5660;
      label$5852:;
      {
       FBSTRING* vr$8566 = fb_StrAllocTempDescZEx( (uint8*)"files", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8566, 0 );
      }
      goto label$5660;
      label$5853:;
      {
       FBSTRING* vr$8567 = fb_StrAllocTempDescZEx( (uint8*)"filler", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8567, 0 );
      }
      goto label$5660;
      label$5854:;
      {
       FBSTRING* vr$8568 = fb_StrAllocTempDescZEx( (uint8*)"filter", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8568, 0 );
      }
      goto label$5660;
      label$5855:;
      {
       FBSTRING* vr$8569 = fb_StrAllocTempDescZEx( (uint8*)"filterwidth", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8569, 0 );
      }
      goto label$5660;
      label$5856:;
      {
       FBSTRING* vr$8570 = fb_StrAllocTempDescZEx( (uint8*)"final", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8570, 0 );
      }
      goto label$5660;
      label$5857:;
      {
       FBSTRING* vr$8571 = fb_StrAllocTempDescZEx( (uint8*)"final_clock", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8571, 0 );
      }
      goto label$5660;
      label$5858:;
      {
       FBSTRING* vr$8572 = fb_StrAllocTempDescZEx( (uint8*)"final_frame", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8572, 0 );
      }
      goto label$5660;
      label$5859:;
      {
       FBSTRING* vr$8573 = fb_StrAllocTempDescZEx( (uint8*)"finalization", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8573, 0 );
      }
      goto label$5660;
      label$5860:;
      {
       FBSTRING* vr$8574 = fb_StrAllocTempDescZEx( (uint8*)"finally", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8574, 0 );
      }
      goto label$5660;
      label$5861:;
      {
       FBSTRING* vr$8575 = fb_StrAllocTempDescZEx( (uint8*)"finish", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8575, 0 );
      }
      goto label$5660;
      label$5862:;
      {
       FBSTRING* vr$8576 = fb_StrAllocTempDescZEx( (uint8*)"first", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8576, 0 );
      }
      goto label$5660;
      label$5863:;
      {
       FBSTRING* vr$8577 = fb_StrAllocTempDescZEx( (uint8*)"fisheye", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8577, 0 );
      }
      goto label$5660;
      label$5864:;
      {
       FBSTRING* vr$8578 = fb_StrAllocTempDescZEx( (uint8*)"fix", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8578, 0 );
      }
      goto label$5660;
      label$5865:;
      {
       FBSTRING* vr$8579 = fb_StrAllocTempDescZEx( (uint8*)"fixed", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8579, 0 );
      }
      goto label$5660;
      label$5866:;
      {
       FBSTRING* vr$8580 = fb_StrAllocTempDescZEx( (uint8*)"flat", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8580, 0 );
      }
      goto label$5660;
      label$5867:;
      {
       FBSTRING* vr$8581 = fb_StrAllocTempDescZEx( (uint8*)"flatness", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8581, 0 );
      }
      goto label$5660;
      label$5868:;
      {
       FBSTRING* vr$8582 = fb_StrAllocTempDescZEx( (uint8*)"flip", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8582, 0 );
      }
      goto label$5660;
      label$5869:;
      {
       FBSTRING* vr$8583 = fb_StrAllocTempDescZEx( (uint8*)"float", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8583, 0 );
      }
      goto label$5660;
      label$5870:;
      {
       FBSTRING* vr$8584 = fb_StrAllocTempDescZEx( (uint8*)"floor", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8584, 0 );
      }
      goto label$5660;
      label$5871:;
      {
       FBSTRING* vr$8585 = fb_StrAllocTempDescZEx( (uint8*)"fmod", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8585, 0 );
      }
      goto label$5660;
      label$5872:;
      {
       FBSTRING* vr$8586 = fb_StrAllocTempDescZEx( (uint8*)"fn", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8586, 0 );
      }
      goto label$5660;
      label$5873:;
      {
       FBSTRING* vr$8587 = fb_StrAllocTempDescZEx( (uint8*)"focal_point", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8587, 0 );
      }
      goto label$5660;
      label$5874:;
      {
       FBSTRING* vr$8588 = fb_StrAllocTempDescZEx( (uint8*)"fog", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8588, 0 );
      }
      goto label$5660;
      label$5875:;
      {
       FBSTRING* vr$8589 = fb_StrAllocTempDescZEx( (uint8*)"fog_alt", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8589, 0 );
      }
      goto label$5660;
      label$5876:;
      {
       FBSTRING* vr$8590 = fb_StrAllocTempDescZEx( (uint8*)"fog_offset", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8590, 0 );
      }
      goto label$5660;
      label$5877:;
      {
       FBSTRING* vr$8591 = fb_StrAllocTempDescZEx( (uint8*)"fog_type", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8591, 0 );
      }
      goto label$5660;
      label$5878:;
      {
       FBSTRING* vr$8592 = fb_StrAllocTempDescZEx( (uint8*)"footing", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8592, 0 );
      }
      goto label$5660;
      label$5879:;
      {
       FBSTRING* vr$8593 = fb_StrAllocTempDescZEx( (uint8*)"fopen", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8593, 0 );
      }
      goto label$5660;
      label$5880:;
      {
       FBSTRING* vr$8594 = fb_StrAllocTempDescZEx( (uint8*)"for", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8594, 0 );
      }
      goto label$5660;
      label$5881:;
      {
       FBSTRING* vr$8595 = fb_StrAllocTempDescZEx( (uint8*)"form", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8595, 0 );
      }
      goto label$5660;
      label$5882:;
      {
       FBSTRING* vr$8596 = fb_StrAllocTempDescZEx( (uint8*)"format", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8596, 0 );
      }
      goto label$5660;
      label$5883:;
      {
       FBSTRING* vr$8597 = fb_StrAllocTempDescZEx( (uint8*)"forward", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8597, 0 );
      }
      goto label$5660;
      label$5884:;
      {
       FBSTRING* vr$8598 = fb_StrAllocTempDescZEx( (uint8*)"fprintf", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8598, 0 );
      }
      goto label$5660;
      label$5885:;
      {
       FBSTRING* vr$8599 = fb_StrAllocTempDescZEx( (uint8*)"frag_color", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8599, 0 );
      }
      goto label$5660;
      label$5886:;
      {
       FBSTRING* vr$8600 = fb_StrAllocTempDescZEx( (uint8*)"fragcolor", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8600, 0 );
      }
      goto label$5660;
      label$5887:;
      {
       FBSTRING* vr$8601 = fb_StrAllocTempDescZEx( (uint8*)"frag_coord", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8601, 0 );
      }
      goto label$5660;
      label$5888:;
      {
       FBSTRING* vr$8602 = fb_StrAllocTempDescZEx( (uint8*)"fragcoord", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8602, 0 );
      }
      goto label$5660;
      label$5889:;
      {
       FBSTRING* vr$8603 = fb_StrAllocTempDescZEx( (uint8*)"frame_number", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8603, 0 );
      }
      goto label$5660;
      label$5890:;
      {
       FBSTRING* vr$8604 = fb_StrAllocTempDescZEx( (uint8*)"fre", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8604, 0 );
      }
      goto label$5660;
      label$5891:;
      {
       FBSTRING* vr$8605 = fb_StrAllocTempDescZEx( (uint8*)"frequency", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8605, 0 );
      }
      goto label$5660;
      label$5892:;
      {
       FBSTRING* vr$8606 = fb_StrAllocTempDescZEx( (uint8*)"fresnel", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8606, 0 );
      }
      goto label$5660;
      label$5893:;
      {
       FBSTRING* vr$8607 = fb_StrAllocTempDescZEx( (uint8*)"from", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8607, 0 );
      }
      goto label$5660;
      label$5894:;
      {
       FBSTRING* vr$8608 = fb_StrAllocTempDescZEx( (uint8*)"full", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8608, 0 );
      }
      goto label$5660;
      label$5895:;
      {
       FBSTRING* vr$8609 = fb_StrAllocTempDescZEx( (uint8*)"function", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8609, 0 );
      }
      goto label$5660;
      label$5896:;
      {
       FBSTRING* vr$8610 = fb_StrAllocTempDescZEx( (uint8*)"fvec2", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8610, 0 );
      }
      goto label$5660;
      label$5897:;
      {
       FBSTRING* vr$8611 = fb_StrAllocTempDescZEx( (uint8*)"fvec3", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8611, 0 );
      }
      goto label$5660;
      label$5898:;
      {
       FBSTRING* vr$8612 = fb_StrAllocTempDescZEx( (uint8*)"fvec4", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8612, 0 );
      }
      goto label$5660;
      label$5899:;
      {
       FBSTRING* vr$8613 = fb_StrAllocTempDescZEx( (uint8*)"g", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$8613, 0 );
      }
      goto label$5660;
      label$5900:;
      {
       FBSTRING* vr$8614 = fb_StrAllocTempDescZEx( (uint8*)"gather", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8614, 0 );
      }
      goto label$5660;
      label$5901:;
      {
       FBSTRING* vr$8615 = fb_StrAllocTempDescZEx( (uint8*)"generate", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8615, 0 );
      }
      goto label$5660;
      label$5902:;
      {
       FBSTRING* vr$8616 = fb_StrAllocTempDescZEx( (uint8*)"generic", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8616, 0 );
      }
      goto label$5660;
      label$5903:;
      {
       FBSTRING* vr$8617 = fb_StrAllocTempDescZEx( (uint8*)"get", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8617, 0 );
      }
      goto label$5660;
      label$5904:;
      {
       FBSTRING* vr$8618 = fb_StrAllocTempDescZEx( (uint8*)"getattribute", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8618, 0 );
      }
      goto label$5660;
      label$5905:;
      {
       FBSTRING* vr$8619 = fb_StrAllocTempDescZEx( (uint8*)"getchar", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8619, 0 );
      }
      goto label$5660;
      label$5906:;
      {
       FBSTRING* vr$8620 = fb_StrAllocTempDescZEx( (uint8*)"getmatrix", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8620, 0 );
      }
      goto label$5660;
      label$5907:;
      {
       FBSTRING* vr$8621 = fb_StrAllocTempDescZEx( (uint8*)"getmessage", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8621, 0 );
      }
      goto label$5660;
      label$5908:;
      {
       FBSTRING* vr$8622 = fb_StrAllocTempDescZEx( (uint8*)"gettextureinfo", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$8622, 0 );
      }
      goto label$5660;
      label$5909:;
      {
       FBSTRING* vr$8623 = fb_StrAllocTempDescZEx( (uint8*)"gif", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8623, 0 );
      }
      goto label$5660;
      label$5910:;
      {
       FBSTRING* vr$8624 = fb_StrAllocTempDescZEx( (uint8*)"giving", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8624, 0 );
      }
      goto label$5660;
      label$5911:;
      {
       FBSTRING* vr$8625 = fb_StrAllocTempDescZEx( (uint8*)"gl_fragcolor", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8625, 0 );
      }
      goto label$5660;
      label$5912:;
      {
       FBSTRING* vr$8626 = fb_StrAllocTempDescZEx( (uint8*)"gl_fragcoord.xy", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$8626, 0 );
      }
      goto label$5660;
      label$5913:;
      {
       FBSTRING* vr$8627 = fb_StrAllocTempDescZEx( (uint8*)"global", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8627, 0 );
      }
      goto label$5660;
      label$5914:;
      {
       FBSTRING* vr$8628 = fb_StrAllocTempDescZEx( (uint8*)"global_lights", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8628, 0 );
      }
      goto label$5660;
      label$5915:;
      {
       FBSTRING* vr$8629 = fb_StrAllocTempDescZEx( (uint8*)"global_settings", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$8629, 0 );
      }
      goto label$5660;
      label$5916:;
      {
       FBSTRING* vr$8630 = fb_StrAllocTempDescZEx( (uint8*)"go", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8630, 0 );
      }
      goto label$5660;
      label$5917:;
      {
       FBSTRING* vr$8631 = fb_StrAllocTempDescZEx( (uint8*)"goback", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8631, 0 );
      }
      goto label$5660;
      label$5661:;
      static const void* tmp$4378[256ll] = {
       &&label$5662,
       &&label$5663,
       &&label$5664,
       &&label$5665,
       &&label$5666,
       &&label$5667,
       &&label$5668,
       &&label$5669,
       &&label$5670,
       &&label$5671,
       &&label$5672,
       &&label$5673,
       &&label$5674,
       &&label$5675,
       &&label$5676,
       &&label$5677,
       &&label$5678,
       &&label$5679,
       &&label$5680,
       &&label$5681,
       &&label$5682,
       &&label$5683,
       &&label$5684,
       &&label$5685,
       &&label$5686,
       &&label$5687,
       &&label$5688,
       &&label$5689,
       &&label$5690,
       &&label$5691,
       &&label$5692,
       &&label$5693,
       &&label$5694,
       &&label$5695,
       &&label$5696,
       &&label$5697,
       &&label$5698,
       &&label$5699,
       &&label$5700,
       &&label$5701,
       &&label$5702,
       &&label$5703,
       &&label$5704,
       &&label$5705,
       &&label$5706,
       &&label$5707,
       &&label$5708,
       &&label$5709,
       &&label$5710,
       &&label$5711,
       &&label$5712,
       &&label$5713,
       &&label$5714,
       &&label$5715,
       &&label$5716,
       &&label$5717,
       &&label$5718,
       &&label$5719,
       &&label$5720,
       &&label$5721,
       &&label$5722,
       &&label$5723,
       &&label$5724,
       &&label$5725,
       &&label$5726,
       &&label$5727,
       &&label$5728,
       &&label$5729,
       &&label$5730,
       &&label$5731,
       &&label$5732,
       &&label$5733,
       &&label$5734,
       &&label$5735,
       &&label$5736,
       &&label$5737,
       &&label$5738,
       &&label$5739,
       &&label$5740,
       &&label$5741,
       &&label$5742,
       &&label$5743,
       &&label$5744,
       &&label$5745,
       &&label$5746,
       &&label$5747,
       &&label$5748,
       &&label$5749,
       &&label$5750,
       &&label$5751,
       &&label$5752,
       &&label$5753,
       &&label$5754,
       &&label$5755,
       &&label$5756,
       &&label$5757,
       &&label$5758,
       &&label$5759,
       &&label$5760,
       &&label$5761,
       &&label$5762,
       &&label$5763,
       &&label$5764,
       &&label$5765,
       &&label$5766,
       &&label$5767,
       &&label$5768,
       &&label$5769,
       &&label$5770,
       &&label$5771,
       &&label$5772,
       &&label$5773,
       &&label$5774,
       &&label$5775,
       &&label$5776,
       &&label$5777,
       &&label$5778,
       &&label$5779,
       &&label$5780,
       &&label$5781,
       &&label$5782,
       &&label$5783,
       &&label$5784,
       &&label$5785,
       &&label$5786,
       &&label$5787,
       &&label$5788,
       &&label$5789,
       &&label$5790,
       &&label$5791,
       &&label$5792,
       &&label$5793,
       &&label$5794,
       &&label$5795,
       &&label$5796,
       &&label$5797,
       &&label$5798,
       &&label$5799,
       &&label$5800,
       &&label$5801,
       &&label$5802,
       &&label$5803,
       &&label$5804,
       &&label$5805,
       &&label$5806,
       &&label$5807,
       &&label$5808,
       &&label$5809,
       &&label$5810,
       &&label$5811,
       &&label$5812,
       &&label$5813,
       &&label$5814,
       &&label$5815,
       &&label$5816,
       &&label$5817,
       &&label$5818,
       &&label$5819,
       &&label$5820,
       &&label$5821,
       &&label$5822,
       &&label$5823,
       &&label$5824,
       &&label$5825,
       &&label$5826,
       &&label$5827,
       &&label$5828,
       &&label$5829,
       &&label$5830,
       &&label$5831,
       &&label$5832,
       &&label$5833,
       &&label$5834,
       &&label$5835,
       &&label$5836,
       &&label$5837,
       &&label$5838,
       &&label$5839,
       &&label$5840,
       &&label$5841,
       &&label$5842,
       &&label$5843,
       &&label$5844,
       &&label$5845,
       &&label$5846,
       &&label$5847,
       &&label$5848,
       &&label$5849,
       &&label$5850,
       &&label$5851,
       &&label$5852,
       &&label$5853,
       &&label$5854,
       &&label$5855,
       &&label$5856,
       &&label$5857,
       &&label$5858,
       &&label$5859,
       &&label$5860,
       &&label$5861,
       &&label$5862,
       &&label$5863,
       &&label$5864,
       &&label$5865,
       &&label$5866,
       &&label$5867,
       &&label$5868,
       &&label$5869,
       &&label$5870,
       &&label$5871,
       &&label$5872,
       &&label$5873,
       &&label$5874,
       &&label$5875,
       &&label$5876,
       &&label$5877,
       &&label$5878,
       &&label$5879,
       &&label$5880,
       &&label$5881,
       &&label$5882,
       &&label$5883,
       &&label$5884,
       &&label$5885,
       &&label$5886,
       &&label$5887,
       &&label$5888,
       &&label$5889,
       &&label$5890,
       &&label$5891,
       &&label$5892,
       &&label$5893,
       &&label$5894,
       &&label$5895,
       &&label$5896,
       &&label$5897,
       &&label$5898,
       &&label$5899,
       &&label$5900,
       &&label$5901,
       &&label$5902,
       &&label$5903,
       &&label$5904,
       &&label$5905,
       &&label$5906,
       &&label$5907,
       &&label$5908,
       &&label$5909,
       &&label$5910,
       &&label$5911,
       &&label$5912,
       &&label$5913,
       &&label$5914,
       &&label$5915,
       &&label$5916,
       &&label$5917,
      };
      if( TMP$2496$6 > 255ull ) goto label$5660;
      goto *tmp$4378[TMP$2496$6 - 0ull];
      label$5660:;
     }
    }
    goto label$5327;
    label$5918:;
    {
     {
      uint64 TMP$2749$6;
      TMP$2749$6 = ((uint64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394968ll) ));
      goto label$5920;
      label$5921:;
      {
       FBSTRING* vr$8635 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 394968ll) );
       fb_PrintString( 1, (FBSTRING*)vr$8635, 0 );
      }
      goto label$5919;
      label$5922:;
      {
       FBSTRING* vr$8637 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 394968ll) );
       fb_PrintString( 1, (FBSTRING*)vr$8637, 1 );
      }
      goto label$5919;
      label$5923:;
      {
       FBSTRING* vr$8641 = fb_DoubleToStr( -(*(double*)((uint8*)THIS$1 + 394968ll)) + 0x0p+0 );
       fb_PrintString( 1, (FBSTRING*)vr$8641, 0 );
      }
      goto label$5919;
      label$5924:;
      {
       FBSTRING* vr$8645 = fb_DoubleToStr( -(*(double*)((uint8*)THIS$1 + 394968ll)) + 0x0p+0 );
       fb_PrintString( 1, (FBSTRING*)vr$8645, 1 );
      }
      goto label$5919;
      label$5925:;
      {
       FBSTRING* vr$8646 = fb_StrAllocTempDescZEx( (uint8*)"\x0D\x0A", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8646, 1 );
      }
      goto label$5919;
      label$5926:;
      {
       FBSTRING* vr$8649 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 394968ll) * 0x1.999999999999Ap-4 );
       fb_PrintString( 1, (FBSTRING*)vr$8649, 0 );
      }
      goto label$5919;
      label$5927:;
      {
       FBSTRING* vr$8652 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 394968ll) * 0x1.999999999999Ap-4 );
       fb_PrintString( 1, (FBSTRING*)vr$8652, 1 );
      }
      goto label$5919;
      label$5928:;
      {
       FBSTRING* vr$8655 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 394968ll) * 0x1.47AE147AE147Bp-7 );
       fb_PrintString( 1, (FBSTRING*)vr$8655, 0 );
      }
      goto label$5919;
      label$5929:;
      {
       FBSTRING* vr$8658 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 394968ll) * 0x1.47AE147AE147Bp-7 );
       fb_PrintString( 1, (FBSTRING*)vr$8658, 1 );
      }
      goto label$5919;
      label$5930:;
      {
       FBSTRING* vr$8661 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 394968ll) * 0x1.0624DD2F1A9FCp-10 );
       fb_PrintString( 1, (FBSTRING*)vr$8661, 0 );
      }
      goto label$5919;
      label$5931:;
      {
       FBSTRING* vr$8664 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 394968ll) * 0x1.0624DD2F1A9FCp-10 );
       fb_PrintString( 1, (FBSTRING*)vr$8664, 1 );
      }
      goto label$5919;
      label$5920:;
      static const void* tmp$4379[11ll] = {
       &&label$5921,
       &&label$5922,
       &&label$5923,
       &&label$5924,
       &&label$5925,
       &&label$5926,
       &&label$5927,
       &&label$5928,
       &&label$5929,
       &&label$5930,
       &&label$5931,
      };
      if( TMP$2749$6 > 10ull ) goto label$5919;
      goto *tmp$4379[TMP$2749$6 - 0ull];
      label$5919:;
     }
    }
    goto label$5327;
    label$5932:;
    {
     FBSTRING* vr$8667 = fb_CHR( 1, ((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394968ll) )) );
     fb_StrAssign( (void*)&MSG$, -1ll, (void*)vr$8667, -1ll, 0 );
     fb_PrintString( 1, (FBSTRING*)&MSG$, 0 );
     fb_StrAssign( (void*)&MSG$, -1ll, (void*)"", 1ll, 0 );
    }
    goto label$5327;
    label$5933:;
    {
     FBSTRING* vr$8670 = fb_CHR( 1, ((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394968ll) )) );
     fb_StrAssign( (void*)&MSG$, -1ll, (void*)vr$8670, -1ll, 0 );
     fb_PrintString( 1, (FBSTRING*)&MSG$, 1 );
     fb_StrAssign( (void*)&MSG$, -1ll, (void*)"", 1ll, 0 );
    }
    goto label$5327;
    label$5934:;
    {
     FBSTRING* vr$8672 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 394968ll) );
     fb_StrAssign( (void*)&MSG$, -1ll, (void*)vr$8672, -1ll, 0 );
     fb_PrintString( 1, (FBSTRING*)&MSG$, 0 );
     fb_StrAssign( (void*)&MSG$, -1ll, (void*)"", 1ll, 0 );
    }
    goto label$5327;
    label$5935:;
    {
     FBSTRING* vr$8674 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 394968ll) );
     fb_StrAssign( (void*)&MSG$, -1ll, (void*)vr$8674, -1ll, 0 );
     fb_PrintString( 1, (FBSTRING*)&MSG$, 1 );
     fb_StrAssign( (void*)&MSG$, -1ll, (void*)"", 1ll, 0 );
    }
    goto label$5327;
    label$5936:;
    {
     FBSTRING* vr$8677 = fb_HEX_l( ((uint64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394968ll) )) );
     fb_StrAssign( (void*)&MSG$, -1ll, (void*)vr$8677, -1ll, 0 );
     fb_PrintString( 1, (FBSTRING*)&MSG$, 0 );
     fb_StrAssign( (void*)&MSG$, -1ll, (void*)"", 1ll, 0 );
    }
    goto label$5327;
    label$5937:;
    {
     FBSTRING* vr$8680 = fb_HEX_l( ((uint64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394968ll) )) );
     fb_StrAssign( (void*)&MSG$, -1ll, (void*)vr$8680, -1ll, 0 );
     fb_PrintString( 1, (FBSTRING*)&MSG$, 1 );
     fb_StrAssign( (void*)&MSG$, -1ll, (void*)"", 1ll, 0 );
    }
    goto label$5327;
    label$5938:;
    {
     {
      uint64 TMP$2753$6;
      TMP$2753$6 = ((uint64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394968ll) ));
      goto label$5940;
      label$5941:;
      {
       FBSTRING TMP$2757$7;
       FBSTRING TMP$2758$7;
       FBSTRING* vr$8683 = fb_StrAllocTempDescZEx( (uint8*)"CHARS.INC", 9ll );
       FBSTRING* vr$8684 = fb_StrLcase2( (FBSTRING*)vr$8683, 0 );
       __builtin_memset( &TMP$2757$7, 0, 24ll );
       FBSTRING* vr$8687 = fb_StrConcat( &TMP$2757$7, (void*)"#include \x0D", 11ll, (void*)vr$8684, -1ll );
       __builtin_memset( &TMP$2758$7, 0, 24ll );
       FBSTRING* vr$8690 = fb_StrConcat( &TMP$2758$7, (void*)vr$8687, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8690, 1 );
      }
      goto label$5939;
      label$5942:;
      {
       FBSTRING TMP$2760$7;
       FBSTRING TMP$2761$7;
       FBSTRING* vr$8691 = fb_StrAllocTempDescZEx( (uint8*)"COLORS.INC", 10ll );
       FBSTRING* vr$8692 = fb_StrLcase2( (FBSTRING*)vr$8691, 0 );
       __builtin_memset( &TMP$2760$7, 0, 24ll );
       FBSTRING* vr$8695 = fb_StrConcat( &TMP$2760$7, (void*)"#include \x0D", 11ll, (void*)vr$8692, -1ll );
       __builtin_memset( &TMP$2761$7, 0, 24ll );
       FBSTRING* vr$8698 = fb_StrConcat( &TMP$2761$7, (void*)vr$8695, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8698, 1 );
      }
      goto label$5939;
      label$5943:;
      {
       FBSTRING TMP$2763$7;
       FBSTRING TMP$2764$7;
       FBSTRING* vr$8699 = fb_StrAllocTempDescZEx( (uint8*)"CONSTS.INC", 10ll );
       FBSTRING* vr$8700 = fb_StrLcase2( (FBSTRING*)vr$8699, 0 );
       __builtin_memset( &TMP$2763$7, 0, 24ll );
       FBSTRING* vr$8703 = fb_StrConcat( &TMP$2763$7, (void*)"#include \x0D", 11ll, (void*)vr$8700, -1ll );
       __builtin_memset( &TMP$2764$7, 0, 24ll );
       FBSTRING* vr$8706 = fb_StrConcat( &TMP$2764$7, (void*)vr$8703, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8706, 1 );
      }
      goto label$5939;
      label$5944:;
      {
       FBSTRING TMP$2766$7;
       FBSTRING TMP$2767$7;
       FBSTRING* vr$8707 = fb_StrAllocTempDescZEx( (uint8*)"DEBUG.INC", 9ll );
       FBSTRING* vr$8708 = fb_StrLcase2( (FBSTRING*)vr$8707, 0 );
       __builtin_memset( &TMP$2766$7, 0, 24ll );
       FBSTRING* vr$8711 = fb_StrConcat( &TMP$2766$7, (void*)"#include \x0D", 11ll, (void*)vr$8708, -1ll );
       __builtin_memset( &TMP$2767$7, 0, 24ll );
       FBSTRING* vr$8714 = fb_StrConcat( &TMP$2767$7, (void*)vr$8711, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8714, 1 );
      }
      goto label$5939;
      label$5945:;
      {
       FBSTRING TMP$2769$7;
       FBSTRING TMP$2770$7;
       FBSTRING* vr$8715 = fb_StrAllocTempDescZEx( (uint8*)"FINISH.INC", 10ll );
       FBSTRING* vr$8716 = fb_StrLcase2( (FBSTRING*)vr$8715, 0 );
       __builtin_memset( &TMP$2769$7, 0, 24ll );
       FBSTRING* vr$8719 = fb_StrConcat( &TMP$2769$7, (void*)"#include \x0D", 11ll, (void*)vr$8716, -1ll );
       __builtin_memset( &TMP$2770$7, 0, 24ll );
       FBSTRING* vr$8722 = fb_StrConcat( &TMP$2770$7, (void*)vr$8719, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8722, 1 );
      }
      goto label$5939;
      label$5946:;
      {
       FBSTRING TMP$2772$7;
       FBSTRING TMP$2773$7;
       FBSTRING* vr$8723 = fb_StrAllocTempDescZEx( (uint8*)"GLASS.INC", 9ll );
       FBSTRING* vr$8724 = fb_StrLcase2( (FBSTRING*)vr$8723, 0 );
       __builtin_memset( &TMP$2772$7, 0, 24ll );
       FBSTRING* vr$8727 = fb_StrConcat( &TMP$2772$7, (void*)"#include \x0D", 11ll, (void*)vr$8724, -1ll );
       __builtin_memset( &TMP$2773$7, 0, 24ll );
       FBSTRING* vr$8730 = fb_StrConcat( &TMP$2773$7, (void*)vr$8727, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8730, 1 );
      }
      goto label$5939;
      label$5947:;
      {
       FBSTRING TMP$2775$7;
       FBSTRING TMP$2776$7;
       FBSTRING* vr$8731 = fb_StrAllocTempDescZEx( (uint8*)"GOLDS.INC", 9ll );
       FBSTRING* vr$8732 = fb_StrLcase2( (FBSTRING*)vr$8731, 0 );
       __builtin_memset( &TMP$2775$7, 0, 24ll );
       FBSTRING* vr$8735 = fb_StrConcat( &TMP$2775$7, (void*)"#include \x0D", 11ll, (void*)vr$8732, -1ll );
       __builtin_memset( &TMP$2776$7, 0, 24ll );
       FBSTRING* vr$8738 = fb_StrConcat( &TMP$2776$7, (void*)vr$8735, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8738, 1 );
      }
      goto label$5939;
      label$5948:;
      {
       FBSTRING TMP$2778$7;
       FBSTRING TMP$2779$7;
       FBSTRING* vr$8739 = fb_StrAllocTempDescZEx( (uint8*)"METALS.INC", 10ll );
       FBSTRING* vr$8740 = fb_StrLcase2( (FBSTRING*)vr$8739, 0 );
       __builtin_memset( &TMP$2778$7, 0, 24ll );
       FBSTRING* vr$8743 = fb_StrConcat( &TMP$2778$7, (void*)"#include \x0D", 11ll, (void*)vr$8740, -1ll );
       __builtin_memset( &TMP$2779$7, 0, 24ll );
       FBSTRING* vr$8746 = fb_StrConcat( &TMP$2779$7, (void*)vr$8743, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8746, 1 );
      }
      goto label$5939;
      label$5949:;
      {
       FBSTRING TMP$2781$7;
       FBSTRING TMP$2782$7;
       FBSTRING* vr$8747 = fb_StrAllocTempDescZEx( (uint8*)"RAD_DEF.INC", 11ll );
       FBSTRING* vr$8748 = fb_StrLcase2( (FBSTRING*)vr$8747, 0 );
       __builtin_memset( &TMP$2781$7, 0, 24ll );
       FBSTRING* vr$8751 = fb_StrConcat( &TMP$2781$7, (void*)"#include \x0D", 11ll, (void*)vr$8748, -1ll );
       __builtin_memset( &TMP$2782$7, 0, 24ll );
       FBSTRING* vr$8754 = fb_StrConcat( &TMP$2782$7, (void*)vr$8751, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8754, 1 );
      }
      goto label$5939;
      label$5950:;
      {
       FBSTRING TMP$2784$7;
       FBSTRING TMP$2785$7;
       FBSTRING* vr$8755 = fb_StrAllocTempDescZEx( (uint8*)"SHAPES2.INC", 11ll );
       FBSTRING* vr$8756 = fb_StrLcase2( (FBSTRING*)vr$8755, 0 );
       __builtin_memset( &TMP$2784$7, 0, 24ll );
       FBSTRING* vr$8759 = fb_StrConcat( &TMP$2784$7, (void*)"#include \x0D", 11ll, (void*)vr$8756, -1ll );
       __builtin_memset( &TMP$2785$7, 0, 24ll );
       FBSTRING* vr$8762 = fb_StrConcat( &TMP$2785$7, (void*)vr$8759, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8762, 1 );
      }
      goto label$5939;
      label$5951:;
      {
       FBSTRING TMP$2787$7;
       FBSTRING TMP$2788$7;
       FBSTRING* vr$8763 = fb_StrAllocTempDescZEx( (uint8*)"SHAPES.INC", 10ll );
       FBSTRING* vr$8764 = fb_StrLcase2( (FBSTRING*)vr$8763, 0 );
       __builtin_memset( &TMP$2787$7, 0, 24ll );
       FBSTRING* vr$8767 = fb_StrConcat( &TMP$2787$7, (void*)"#include \x0D", 11ll, (void*)vr$8764, -1ll );
       __builtin_memset( &TMP$2788$7, 0, 24ll );
       FBSTRING* vr$8770 = fb_StrConcat( &TMP$2788$7, (void*)vr$8767, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8770, 1 );
      }
      goto label$5939;
      label$5952:;
      {
       FBSTRING TMP$2790$7;
       FBSTRING TMP$2791$7;
       FBSTRING* vr$8771 = fb_StrAllocTempDescZEx( (uint8*)"SHAPESQ.INC", 11ll );
       FBSTRING* vr$8772 = fb_StrLcase2( (FBSTRING*)vr$8771, 0 );
       __builtin_memset( &TMP$2790$7, 0, 24ll );
       FBSTRING* vr$8775 = fb_StrConcat( &TMP$2790$7, (void*)"#include \x0D", 11ll, (void*)vr$8772, -1ll );
       __builtin_memset( &TMP$2791$7, 0, 24ll );
       FBSTRING* vr$8778 = fb_StrConcat( &TMP$2791$7, (void*)vr$8775, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8778, 1 );
      }
      goto label$5939;
      label$5953:;
      {
       FBSTRING TMP$2793$7;
       FBSTRING TMP$2794$7;
       FBSTRING* vr$8779 = fb_StrAllocTempDescZEx( (uint8*)"SKIES.INC", 9ll );
       FBSTRING* vr$8780 = fb_StrLcase2( (FBSTRING*)vr$8779, 0 );
       __builtin_memset( &TMP$2793$7, 0, 24ll );
       FBSTRING* vr$8783 = fb_StrConcat( &TMP$2793$7, (void*)"#include \x0D", 11ll, (void*)vr$8780, -1ll );
       __builtin_memset( &TMP$2794$7, 0, 24ll );
       FBSTRING* vr$8786 = fb_StrConcat( &TMP$2794$7, (void*)vr$8783, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8786, 1 );
      }
      goto label$5939;
      label$5954:;
      {
       FBSTRING TMP$2796$7;
       FBSTRING TMP$2797$7;
       FBSTRING* vr$8787 = fb_StrAllocTempDescZEx( (uint8*)"STAGE1.INC", 10ll );
       FBSTRING* vr$8788 = fb_StrLcase2( (FBSTRING*)vr$8787, 0 );
       __builtin_memset( &TMP$2796$7, 0, 24ll );
       FBSTRING* vr$8791 = fb_StrConcat( &TMP$2796$7, (void*)"#include \x0D", 11ll, (void*)vr$8788, -1ll );
       __builtin_memset( &TMP$2797$7, 0, 24ll );
       FBSTRING* vr$8794 = fb_StrConcat( &TMP$2797$7, (void*)vr$8791, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8794, 1 );
      }
      goto label$5939;
      label$5955:;
      {
       FBSTRING TMP$2799$7;
       FBSTRING TMP$2800$7;
       FBSTRING* vr$8795 = fb_StrAllocTempDescZEx( (uint8*)"STARS.INC", 9ll );
       FBSTRING* vr$8796 = fb_StrLcase2( (FBSTRING*)vr$8795, 0 );
       __builtin_memset( &TMP$2799$7, 0, 24ll );
       FBSTRING* vr$8799 = fb_StrConcat( &TMP$2799$7, (void*)"#include \x0D", 11ll, (void*)vr$8796, -1ll );
       __builtin_memset( &TMP$2800$7, 0, 24ll );
       FBSTRING* vr$8802 = fb_StrConcat( &TMP$2800$7, (void*)vr$8799, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8802, 1 );
      }
      goto label$5939;
      label$5956:;
      {
       FBSTRING TMP$2802$7;
       FBSTRING TMP$2803$7;
       FBSTRING* vr$8803 = fb_StrAllocTempDescZEx( (uint8*)"STDCAM.INC", 10ll );
       FBSTRING* vr$8804 = fb_StrLcase2( (FBSTRING*)vr$8803, 0 );
       __builtin_memset( &TMP$2802$7, 0, 24ll );
       FBSTRING* vr$8807 = fb_StrConcat( &TMP$2802$7, (void*)"#include \x0D", 11ll, (void*)vr$8804, -1ll );
       __builtin_memset( &TMP$2803$7, 0, 24ll );
       FBSTRING* vr$8810 = fb_StrConcat( &TMP$2803$7, (void*)vr$8807, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8810, 1 );
      }
      goto label$5939;
      label$5957:;
      {
       FBSTRING TMP$2805$7;
       FBSTRING TMP$2806$7;
       FBSTRING* vr$8811 = fb_StrAllocTempDescZEx( (uint8*)"STONEOLD.INC", 12ll );
       FBSTRING* vr$8812 = fb_StrLcase2( (FBSTRING*)vr$8811, 0 );
       __builtin_memset( &TMP$2805$7, 0, 24ll );
       FBSTRING* vr$8815 = fb_StrConcat( &TMP$2805$7, (void*)"#include \x0D", 11ll, (void*)vr$8812, -1ll );
       __builtin_memset( &TMP$2806$7, 0, 24ll );
       FBSTRING* vr$8818 = fb_StrConcat( &TMP$2806$7, (void*)vr$8815, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8818, 1 );
      }
      goto label$5939;
      label$5958:;
      {
       FBSTRING TMP$2808$7;
       FBSTRING TMP$2809$7;
       FBSTRING* vr$8819 = fb_StrAllocTempDescZEx( (uint8*)"STONES1.INC", 11ll );
       FBSTRING* vr$8820 = fb_StrLcase2( (FBSTRING*)vr$8819, 0 );
       __builtin_memset( &TMP$2808$7, 0, 24ll );
       FBSTRING* vr$8823 = fb_StrConcat( &TMP$2808$7, (void*)"#include \x0D", 11ll, (void*)vr$8820, -1ll );
       __builtin_memset( &TMP$2809$7, 0, 24ll );
       FBSTRING* vr$8826 = fb_StrConcat( &TMP$2809$7, (void*)vr$8823, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8826, 1 );
      }
      goto label$5939;
      label$5959:;
      {
       FBSTRING TMP$2811$7;
       FBSTRING TMP$2812$7;
       FBSTRING* vr$8827 = fb_StrAllocTempDescZEx( (uint8*)"STONES2.INC", 11ll );
       FBSTRING* vr$8828 = fb_StrLcase2( (FBSTRING*)vr$8827, 0 );
       __builtin_memset( &TMP$2811$7, 0, 24ll );
       FBSTRING* vr$8831 = fb_StrConcat( &TMP$2811$7, (void*)"#include \x0D", 11ll, (void*)vr$8828, -1ll );
       __builtin_memset( &TMP$2812$7, 0, 24ll );
       FBSTRING* vr$8834 = fb_StrConcat( &TMP$2812$7, (void*)vr$8831, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8834, 1 );
      }
      goto label$5939;
      label$5960:;
      {
       FBSTRING TMP$2814$7;
       FBSTRING TMP$2815$7;
       FBSTRING* vr$8835 = fb_StrAllocTempDescZEx( (uint8*)"STONES.INC", 10ll );
       FBSTRING* vr$8836 = fb_StrLcase2( (FBSTRING*)vr$8835, 0 );
       __builtin_memset( &TMP$2814$7, 0, 24ll );
       FBSTRING* vr$8839 = fb_StrConcat( &TMP$2814$7, (void*)"#include \x0D", 11ll, (void*)vr$8836, -1ll );
       __builtin_memset( &TMP$2815$7, 0, 24ll );
       FBSTRING* vr$8842 = fb_StrConcat( &TMP$2815$7, (void*)vr$8839, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8842, 1 );
      }
      goto label$5939;
      label$5961:;
      {
       FBSTRING TMP$2817$7;
       FBSTRING TMP$2818$7;
       FBSTRING* vr$8843 = fb_StrAllocTempDescZEx( (uint8*)"TEXTURES.INC", 12ll );
       FBSTRING* vr$8844 = fb_StrLcase2( (FBSTRING*)vr$8843, 0 );
       __builtin_memset( &TMP$2817$7, 0, 24ll );
       FBSTRING* vr$8847 = fb_StrConcat( &TMP$2817$7, (void*)"#include \x0D", 11ll, (void*)vr$8844, -1ll );
       __builtin_memset( &TMP$2818$7, 0, 24ll );
       FBSTRING* vr$8850 = fb_StrConcat( &TMP$2818$7, (void*)vr$8847, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8850, 1 );
      }
      goto label$5939;
      label$5962:;
      {
       FBSTRING TMP$2820$7;
       FBSTRING TMP$2821$7;
       FBSTRING* vr$8851 = fb_StrAllocTempDescZEx( (uint8*)"WOODMAPS.INC", 12ll );
       FBSTRING* vr$8852 = fb_StrLcase2( (FBSTRING*)vr$8851, 0 );
       __builtin_memset( &TMP$2820$7, 0, 24ll );
       FBSTRING* vr$8855 = fb_StrConcat( &TMP$2820$7, (void*)"#include \x0D", 11ll, (void*)vr$8852, -1ll );
       __builtin_memset( &TMP$2821$7, 0, 24ll );
       FBSTRING* vr$8858 = fb_StrConcat( &TMP$2821$7, (void*)vr$8855, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8858, 1 );
      }
      goto label$5939;
      label$5963:;
      {
       FBSTRING TMP$2823$7;
       FBSTRING TMP$2824$7;
       FBSTRING* vr$8859 = fb_StrAllocTempDescZEx( (uint8*)"WOODS.INC", 9ll );
       FBSTRING* vr$8860 = fb_StrLcase2( (FBSTRING*)vr$8859, 0 );
       __builtin_memset( &TMP$2823$7, 0, 24ll );
       FBSTRING* vr$8863 = fb_StrConcat( &TMP$2823$7, (void*)"#include \x0D", 11ll, (void*)vr$8860, -1ll );
       __builtin_memset( &TMP$2824$7, 0, 24ll );
       FBSTRING* vr$8866 = fb_StrConcat( &TMP$2824$7, (void*)vr$8863, -1ll, (void*)"\x0D", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8866, 1 );
      }
      goto label$5939;
      label$5940:;
      static const void* tmp$4380[23ll] = {
       &&label$5941,
       &&label$5942,
       &&label$5943,
       &&label$5944,
       &&label$5945,
       &&label$5946,
       &&label$5947,
       &&label$5948,
       &&label$5949,
       &&label$5950,
       &&label$5951,
       &&label$5952,
       &&label$5953,
       &&label$5954,
       &&label$5955,
       &&label$5956,
       &&label$5957,
       &&label$5958,
       &&label$5959,
       &&label$5960,
       &&label$5961,
       &&label$5962,
       &&label$5963,
      };
      if( TMP$2753$6 > 22ull ) goto label$5939;
      goto *tmp$4380[TMP$2753$6 - 0ull];
      label$5939:;
     }
    }
    goto label$5327;
    label$5964:;
    {
     {
      uint64 TMP$2825$6;
      TMP$2825$6 = ((uint64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394968ll) ));
      goto label$5966;
      label$5967:;
      {
       FBSTRING* vr$8869 = fb_StrAllocTempDescZEx( (uint8*)"gosub", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8869, 0 );
      }
      goto label$5965;
      label$5968:;
      {
       FBSTRING* vr$8870 = fb_StrAllocTempDescZEx( (uint8*)"goto", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8870, 0 );
      }
      goto label$5965;
      label$5969:;
      {
       FBSTRING* vr$8871 = fb_StrAllocTempDescZEx( (uint8*)"gradient", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8871, 0 );
      }
      goto label$5965;
      label$5970:;
      {
       FBSTRING* vr$8872 = fb_StrAllocTempDescZEx( (uint8*)"granite", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8872, 0 );
      }
      goto label$5965;
      label$5971:;
      {
       FBSTRING* vr$8873 = fb_StrAllocTempDescZEx( (uint8*)"gray", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8873, 0 );
      }
      goto label$5965;
      label$5972:;
      {
       FBSTRING* vr$8874 = fb_StrAllocTempDescZEx( (uint8*)"gray_threshold", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$8874, 0 );
      }
      goto label$5965;
      label$5973:;
      {
       FBSTRING* vr$8875 = fb_StrAllocTempDescZEx( (uint8*)"greateeq", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8875, 0 );
      }
      goto label$5965;
      label$5974:;
      {
       FBSTRING* vr$8876 = fb_StrAllocTempDescZEx( (uint8*)"greater", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8876, 0 );
      }
      goto label$5965;
      label$5975:;
      {
       FBSTRING* vr$8877 = fb_StrAllocTempDescZEx( (uint8*)"green", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8877, 0 );
      }
      goto label$5965;
      label$5976:;
      {
       FBSTRING* vr$8878 = fb_StrAllocTempDescZEx( (uint8*)"group", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8878, 0 );
      }
      goto label$5965;
      label$5977:;
      {
       FBSTRING* vr$8879 = fb_StrAllocTempDescZEx( (uint8*)"group_by", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8879, 0 );
      }
      goto label$5965;
      label$5978:;
      {
       FBSTRING* vr$8880 = fb_StrAllocTempDescZEx( (uint8*)"h", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$8880, 0 );
      }
      goto label$5965;
      label$5979:;
      {
       FBSTRING* vr$8881 = fb_StrAllocTempDescZEx( (uint8*)"half", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8881, 0 );
      }
      goto label$5965;
      label$5980:;
      {
       FBSTRING* vr$8882 = fb_StrAllocTempDescZEx( (uint8*)"hash", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8882, 0 );
      }
      goto label$5965;
      label$5981:;
      {
       FBSTRING* vr$8883 = fb_StrAllocTempDescZEx( (uint8*)"hashnoise", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8883, 0 );
      }
      goto label$5965;
      label$5982:;
      {
       FBSTRING* vr$8884 = fb_StrAllocTempDescZEx( (uint8*)"having", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8884, 0 );
      }
      goto label$5965;
      label$5983:;
      {
       FBSTRING* vr$8885 = fb_StrAllocTempDescZEx( (uint8*)"header", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8885, 0 );
      }
      goto label$5965;
      label$5984:;
      {
       FBSTRING* vr$8886 = fb_StrAllocTempDescZEx( (uint8*)"heading", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8886, 0 );
      }
      goto label$5965;
      label$5985:;
      {
       FBSTRING* vr$8887 = fb_StrAllocTempDescZEx( (uint8*)"height_field", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8887, 0 );
      }
      goto label$5965;
      label$5986:;
      {
       FBSTRING* vr$8888 = fb_StrAllocTempDescZEx( (uint8*)"henyey_greenstein", 17ll );
       fb_PrintString( 1, (FBSTRING*)vr$8888, 0 );
      }
      goto label$5965;
      label$5987:;
      {
       FBSTRING* vr$8889 = fb_StrAllocTempDescZEx( (uint8*)"hex", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8889, 0 );
      }
      goto label$5965;
      label$5988:;
      {
       FBSTRING* vr$8890 = fb_StrAllocTempDescZEx( (uint8*)"hexagon", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8890, 0 );
      }
      goto label$5965;
      label$5989:;
      {
       FBSTRING* vr$8891 = fb_StrAllocTempDescZEx( (uint8*)"hf_gray_16", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8891, 0 );
      }
      goto label$5965;
      label$5990:;
      {
       FBSTRING* vr$8892 = fb_StrAllocTempDescZEx( (uint8*)"hierarchy", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8892, 0 );
      }
      goto label$5965;
      label$5991:;
      {
       FBSTRING* vr$8893 = fb_StrAllocTempDescZEx( (uint8*)"highp", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8893, 0 );
      }
      goto label$5965;
      label$5992:;
      {
       FBSTRING* vr$8894 = fb_StrAllocTempDescZEx( (uint8*)"high-value", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8894, 0 );
      }
      goto label$5965;
      label$5993:;
      {
       FBSTRING* vr$8895 = fb_StrAllocTempDescZEx( (uint8*)"high-values", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8895, 0 );
      }
      goto label$5965;
      label$5994:;
      {
       FBSTRING* vr$8896 = fb_StrAllocTempDescZEx( (uint8*)"hintend", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8896, 0 );
      }
      goto label$5965;
      label$5995:;
      {
       FBSTRING* vr$8897 = fb_StrAllocTempDescZEx( (uint8*)"hint_error", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8897, 0 );
      }
      goto label$5965;
      label$5996:;
      {
       FBSTRING* vr$8898 = fb_StrAllocTempDescZEx( (uint8*)"hintstart", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8898, 0 );
      }
      goto label$5965;
      label$5997:;
      {
       FBSTRING* vr$8899 = fb_StrAllocTempDescZEx( (uint8*)"holdout", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8899, 0 );
      }
      goto label$5965;
      label$5998:;
      {
       FBSTRING* vr$8900 = fb_StrAllocTempDescZEx( (uint8*)"hollow", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8900, 0 );
      }
      goto label$5965;
      label$5999:;
      {
       FBSTRING* vr$8901 = fb_StrAllocTempDescZEx( (uint8*)"hour", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8901, 0 );
      }
      goto label$5965;
      label$6000:;
      {
       FBSTRING* vr$8902 = fb_StrAllocTempDescZEx( (uint8*)"hvec2", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8902, 0 );
      }
      goto label$5965;
      label$6001:;
      {
       FBSTRING* vr$8903 = fb_StrAllocTempDescZEx( (uint8*)"hvec3", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8903, 0 );
      }
      goto label$5965;
      label$6002:;
      {
       FBSTRING* vr$8904 = fb_StrAllocTempDescZEx( (uint8*)"hvec4", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8904, 0 );
      }
      goto label$5965;
      label$6003:;
      {
       FBSTRING* vr$8905 = fb_StrAllocTempDescZEx( (uint8*)"hypercomplex", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8905, 0 );
      }
      goto label$5965;
      label$6004:;
      {
       FBSTRING* vr$8906 = fb_StrAllocTempDescZEx( (uint8*)"hypot", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8906, 0 );
      }
      goto label$5965;
      label$6005:;
      {
       FBSTRING* vr$8907 = fb_StrAllocTempDescZEx( (uint8*)"i", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$8907, 0 );
      }
      goto label$5965;
      label$6006:;
      {
       FBSTRING* vr$8908 = fb_StrAllocTempDescZEx( (uint8*)"iChannel0", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8908, 0 );
      }
      goto label$5965;
      label$6007:;
      {
       FBSTRING* vr$8909 = fb_StrAllocTempDescZEx( (uint8*)"iChannel1", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8909, 0 );
      }
      goto label$5965;
      label$6008:;
      {
       FBSTRING* vr$8910 = fb_StrAllocTempDescZEx( (uint8*)"iChannel2", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8910, 0 );
      }
      goto label$5965;
      label$6009:;
      {
       FBSTRING* vr$8911 = fb_StrAllocTempDescZEx( (uint8*)"iChannel3", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8911, 0 );
      }
      goto label$5965;
      label$6010:;
      {
       FBSTRING* vr$8912 = fb_StrAllocTempDescZEx( (uint8*)"iChannelResolution", 18ll );
       fb_PrintString( 1, (FBSTRING*)vr$8912, 0 );
      }
      goto label$5965;
      label$6011:;
      {
       FBSTRING* vr$8913 = fb_StrAllocTempDescZEx( (uint8*)"iChannelTime", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8913, 0 );
      }
      goto label$5965;
      label$6012:;
      {
       FBSTRING* vr$8914 = fb_StrAllocTempDescZEx( (uint8*)"iCube", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8914, 0 );
      }
      goto label$5965;
      label$6013:;
      {
       FBSTRING* vr$8915 = fb_StrAllocTempDescZEx( (uint8*)"id", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8915, 0 );
      }
      goto label$5965;
      label$6014:;
      {
       FBSTRING* vr$8916 = fb_StrAllocTempDescZEx( (uint8*)"iDate", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8916, 0 );
      }
      goto label$5965;
      label$6015:;
      {
       FBSTRING* vr$8917 = fb_StrAllocTempDescZEx( (uint8*)"identification", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$8917, 0 );
      }
      goto label$5965;
      label$6016:;
      {
       FBSTRING* vr$8918 = fb_StrAllocTempDescZEx( (uint8*)"if", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8918, 0 );
      }
      goto label$5965;
      label$6017:;
      {
       FBSTRING* vr$8919 = fb_StrAllocTempDescZEx( (uint8*)"ifdef", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8919, 0 );
      }
      goto label$5965;
      label$6018:;
      {
       FBSTRING* vr$8920 = fb_StrAllocTempDescZEx( (uint8*)"ifelse", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8920, 0 );
      }
      goto label$5965;
      label$6019:;
      {
       FBSTRING* vr$8921 = fb_StrAllocTempDescZEx( (uint8*)"iff", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8921, 0 );
      }
      goto label$5965;
      label$6020:;
      {
       FBSTRING* vr$8922 = fb_StrAllocTempDescZEx( (uint8*)"ifndef", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8922, 0 );
      }
      goto label$5965;
      label$6021:;
      {
       FBSTRING* vr$8923 = fb_StrAllocTempDescZEx( (uint8*)"iframe", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8923, 0 );
      }
      goto label$5965;
      label$6022:;
      {
       FBSTRING* vr$8924 = fb_StrAllocTempDescZEx( (uint8*)"iframerate", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8924, 0 );
      }
      goto label$5965;
      label$6023:;
      {
       FBSTRING* vr$8925 = fb_StrAllocTempDescZEx( (uint8*)"iGlobalTime", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8925, 0 );
      }
      goto label$5965;
      label$6024:;
      {
       FBSTRING* vr$8926 = fb_StrAllocTempDescZEx( (uint8*)"iimage1D", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8926, 0 );
      }
      goto label$5965;
      label$6025:;
      {
       FBSTRING* vr$8927 = fb_StrAllocTempDescZEx( (uint8*)"iimage1DArray", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8927, 0 );
      }
      goto label$5965;
      label$6026:;
      {
       FBSTRING* vr$8928 = fb_StrAllocTempDescZEx( (uint8*)"iimage2D", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8928, 0 );
      }
      goto label$5965;
      label$6027:;
      {
       FBSTRING* vr$8929 = fb_StrAllocTempDescZEx( (uint8*)"iimage2DArray", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8929, 0 );
      }
      goto label$5965;
      label$6028:;
      {
       FBSTRING* vr$8930 = fb_StrAllocTempDescZEx( (uint8*)"iimage3D", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8930, 0 );
      }
      goto label$5965;
      label$6029:;
      {
       FBSTRING* vr$8931 = fb_StrAllocTempDescZEx( (uint8*)"iimageBuffer", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8931, 0 );
      }
      goto label$5965;
      label$6030:;
      {
       FBSTRING* vr$8932 = fb_StrAllocTempDescZEx( (uint8*)"iimageCube", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8932, 0 );
      }
      goto label$5965;
      label$6031:;
      {
       FBSTRING* vr$8933 = fb_StrAllocTempDescZEx( (uint8*)"image", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8933, 0 );
      }
      goto label$5965;
      label$6032:;
      {
       FBSTRING* vr$8934 = fb_StrAllocTempDescZEx( (uint8*)"image1D", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8934, 0 );
      }
      goto label$5965;
      label$6033:;
      {
       FBSTRING* vr$8935 = fb_StrAllocTempDescZEx( (uint8*)"image1DArray", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8935, 0 );
      }
      goto label$5965;
      label$6034:;
      {
       FBSTRING* vr$8936 = fb_StrAllocTempDescZEx( (uint8*)"image1DArrayShadow", 18ll );
       fb_PrintString( 1, (FBSTRING*)vr$8936, 0 );
      }
      goto label$5965;
      label$6035:;
      {
       FBSTRING* vr$8937 = fb_StrAllocTempDescZEx( (uint8*)"image1DShadow", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8937, 0 );
      }
      goto label$5965;
      label$6036:;
      {
       FBSTRING* vr$8938 = fb_StrAllocTempDescZEx( (uint8*)"image2D", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8938, 0 );
      }
      goto label$5965;
      label$6037:;
      {
       FBSTRING* vr$8939 = fb_StrAllocTempDescZEx( (uint8*)"image2DArray", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8939, 0 );
      }
      goto label$5965;
      label$6038:;
      {
       FBSTRING* vr$8940 = fb_StrAllocTempDescZEx( (uint8*)"image2DArrayShadow", 18ll );
       fb_PrintString( 1, (FBSTRING*)vr$8940, 0 );
      }
      goto label$5965;
      label$6039:;
      {
       FBSTRING* vr$8941 = fb_StrAllocTempDescZEx( (uint8*)"image2DShadow", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8941, 0 );
      }
      goto label$5965;
      label$6040:;
      {
       FBSTRING* vr$8942 = fb_StrAllocTempDescZEx( (uint8*)"image3D", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8942, 0 );
      }
      goto label$5965;
      label$6041:;
      {
       FBSTRING* vr$8943 = fb_StrAllocTempDescZEx( (uint8*)"imageBuffer", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8943, 0 );
      }
      goto label$5965;
      label$6042:;
      {
       FBSTRING* vr$8944 = fb_StrAllocTempDescZEx( (uint8*)"imageCube", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8944, 0 );
      }
      goto label$5965;
      label$6043:;
      {
       FBSTRING* vr$8945 = fb_StrAllocTempDescZEx( (uint8*)"image_height", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8945, 0 );
      }
      goto label$5965;
      label$6044:;
      {
       FBSTRING* vr$8946 = fb_StrAllocTempDescZEx( (uint8*)"image_map", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8946, 0 );
      }
      goto label$5965;
      label$6045:;
      {
       FBSTRING* vr$8947 = fb_StrAllocTempDescZEx( (uint8*)"image_pattern", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8947, 0 );
      }
      goto label$5965;
      label$6046:;
      {
       FBSTRING* vr$8948 = fb_StrAllocTempDescZEx( (uint8*)"image_width", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8948, 0 );
      }
      goto label$5965;
      label$6047:;
      {
       FBSTRING* vr$8949 = fb_StrAllocTempDescZEx( (uint8*)"imouse", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8949, 0 );
      }
      goto label$5965;
      label$6048:;
      {
       FBSTRING* vr$8950 = fb_StrAllocTempDescZEx( (uint8*)"imp", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8950, 0 );
      }
      goto label$5965;
      label$6049:;
      {
       FBSTRING* vr$8951 = fb_StrAllocTempDescZEx( (uint8*)"implementation", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$8951, 0 );
      }
      goto label$5965;
      label$6050:;
      {
       FBSTRING* vr$8952 = fb_StrAllocTempDescZEx( (uint8*)"import", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8952, 0 );
      }
      goto label$5965;
      label$6051:;
      {
       FBSTRING* vr$8953 = fb_StrAllocTempDescZEx( (uint8*)"in", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$8953, 0 );
      }
      goto label$5965;
      label$6052:;
      {
       FBSTRING* vr$8954 = fb_StrAllocTempDescZEx( (uint8*)"include", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8954, 0 );
      }
      goto label$5965;
      label$6053:;
      {
       FBSTRING* vr$8955 = fb_StrAllocTempDescZEx( (uint8*)"index", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8955, 0 );
      }
      goto label$5965;
      label$6054:;
      {
       FBSTRING* vr$8956 = fb_StrAllocTempDescZEx( (uint8*)"indexed", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8956, 0 );
      }
      goto label$5965;
      label$6055:;
      {
       FBSTRING* vr$8957 = fb_StrAllocTempDescZEx( (uint8*)"indicate", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8957, 0 );
      }
      goto label$5965;
      label$6056:;
      {
       FBSTRING* vr$8958 = fb_StrAllocTempDescZEx( (uint8*)"inherited", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8958, 0 );
      }
      goto label$5965;
      label$6057:;
      {
       FBSTRING* vr$8959 = fb_StrAllocTempDescZEx( (uint8*)"inherits", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8959, 0 );
      }
      goto label$5965;
      label$6058:;
      {
       FBSTRING* vr$8960 = fb_StrAllocTempDescZEx( (uint8*)"initial", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8960, 0 );
      }
      goto label$5965;
      label$6059:;
      {
       FBSTRING* vr$8961 = fb_StrAllocTempDescZEx( (uint8*)"initial_clock", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8961, 0 );
      }
      goto label$5965;
      label$6060:;
      {
       FBSTRING* vr$8962 = fb_StrAllocTempDescZEx( (uint8*)"initial_frame", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8962, 0 );
      }
      goto label$5965;
      label$6061:;
      {
       FBSTRING* vr$8963 = fb_StrAllocTempDescZEx( (uint8*)"initialization", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$8963, 0 );
      }
      goto label$5965;
      label$6062:;
      {
       FBSTRING* vr$8964 = fb_StrAllocTempDescZEx( (uint8*)"initialize", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8964, 0 );
      }
      goto label$5965;
      label$6063:;
      {
       FBSTRING* vr$8965 = fb_StrAllocTempDescZEx( (uint8*)"initiate", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8965, 0 );
      }
      goto label$5965;
      label$6064:;
      {
       FBSTRING* vr$8966 = fb_StrAllocTempDescZEx( (uint8*)"inkey", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8966, 0 );
      }
      goto label$5965;
      label$6065:;
      {
       FBSTRING* vr$8967 = fb_StrAllocTempDescZEx( (uint8*)"inline", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8967, 0 );
      }
      goto label$5965;
      label$6066:;
      {
       FBSTRING* vr$8968 = fb_StrAllocTempDescZEx( (uint8*)"inlinenoinline", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$8968, 0 );
      }
      goto label$5965;
      label$6067:;
      {
       FBSTRING* vr$8969 = fb_StrAllocTempDescZEx( (uint8*)"in_memory", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8969, 0 );
      }
      goto label$5965;
      label$6068:;
      {
       FBSTRING* vr$8970 = fb_StrAllocTempDescZEx( (uint8*)"inner", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8970, 0 );
      }
      goto label$5965;
      label$6069:;
      {
       FBSTRING* vr$8971 = fb_StrAllocTempDescZEx( (uint8*)"inout", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8971, 0 );
      }
      goto label$5965;
      label$6070:;
      {
       FBSTRING* vr$8972 = fb_StrAllocTempDescZEx( (uint8*)"inp", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8972, 0 );
      }
      goto label$5965;
      label$6071:;
      {
       FBSTRING* vr$8973 = fb_StrAllocTempDescZEx( (uint8*)"input", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8973, 0 );
      }
      goto label$5965;
      label$6072:;
      {
       FBSTRING* vr$8974 = fb_StrAllocTempDescZEx( (uint8*)"input-output", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8974, 0 );
      }
      goto label$5965;
      label$6073:;
      {
       FBSTRING* vr$8975 = fb_StrAllocTempDescZEx( (uint8*)"inquire", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8975, 0 );
      }
      goto label$5965;
      label$6074:;
      {
       FBSTRING* vr$8976 = fb_StrAllocTempDescZEx( (uint8*)"insert", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8976, 0 );
      }
      goto label$5965;
      label$6075:;
      {
       FBSTRING* vr$8977 = fb_StrAllocTempDescZEx( (uint8*)"inside", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8977, 0 );
      }
      goto label$5965;
      label$6076:;
      {
       FBSTRING* vr$8978 = fb_StrAllocTempDescZEx( (uint8*)"inside_vector", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$8978, 0 );
      }
      goto label$5965;
      label$6077:;
      {
       FBSTRING* vr$8979 = fb_StrAllocTempDescZEx( (uint8*)"inspect", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8979, 0 );
      }
      goto label$5965;
      label$6078:;
      {
       FBSTRING* vr$8980 = fb_StrAllocTempDescZEx( (uint8*)"installation", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8980, 0 );
      }
      goto label$5965;
      label$6079:;
      {
       FBSTRING* vr$8981 = fb_StrAllocTempDescZEx( (uint8*)"instr", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$8981, 0 );
      }
      goto label$5965;
      label$6080:;
      {
       FBSTRING* vr$8982 = fb_StrAllocTempDescZEx( (uint8*)"int", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$8982, 0 );
      }
      goto label$5965;
      label$6081:;
      {
       FBSTRING* vr$8983 = fb_StrAllocTempDescZEx( (uint8*)"integer", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8983, 0 );
      }
      goto label$5965;
      label$6082:;
      {
       FBSTRING* vr$8984 = fb_StrAllocTempDescZEx( (uint8*)"interface", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8984, 0 );
      }
      goto label$5965;
      label$6083:;
      {
       FBSTRING* vr$8985 = fb_StrAllocTempDescZEx( (uint8*)"interior", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8985, 0 );
      }
      goto label$5965;
      label$6084:;
      {
       FBSTRING* vr$8986 = fb_StrAllocTempDescZEx( (uint8*)"interior_texture", 16ll );
       fb_PrintString( 1, (FBSTRING*)vr$8986, 0 );
      }
      goto label$5965;
      label$6085:;
      {
       FBSTRING* vr$8987 = fb_StrAllocTempDescZEx( (uint8*)"internal", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8987, 0 );
      }
      goto label$5965;
      label$6086:;
      {
       FBSTRING* vr$8988 = fb_StrAllocTempDescZEx( (uint8*)"interpolate", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$8988, 0 );
      }
      goto label$5965;
      label$6087:;
      {
       FBSTRING* vr$8989 = fb_StrAllocTempDescZEx( (uint8*)"intersect", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8989, 0 );
      }
      goto label$5965;
      label$6088:;
      {
       FBSTRING* vr$8990 = fb_StrAllocTempDescZEx( (uint8*)"intersection", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$8990, 0 );
      }
      goto label$5965;
      label$6089:;
      {
       FBSTRING* vr$8991 = fb_StrAllocTempDescZEx( (uint8*)"interval", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$8991, 0 );
      }
      goto label$5965;
      label$6090:;
      {
       FBSTRING* vr$8992 = fb_StrAllocTempDescZEx( (uint8*)"intervals", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8992, 0 );
      }
      goto label$5965;
      label$6091:;
      {
       FBSTRING* vr$8993 = fb_StrAllocTempDescZEx( (uint8*)"into", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$8993, 0 );
      }
      goto label$5965;
      label$6092:;
      {
       FBSTRING* vr$8994 = fb_StrAllocTempDescZEx( (uint8*)"intrinsic", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8994, 0 );
      }
      goto label$5965;
      label$6093:;
      {
       FBSTRING* vr$8995 = fb_StrAllocTempDescZEx( (uint8*)"invalid", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8995, 0 );
      }
      goto label$5965;
      label$6094:;
      {
       FBSTRING* vr$8996 = fb_StrAllocTempDescZEx( (uint8*)"invariant", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$8996, 0 );
      }
      goto label$5965;
      label$6095:;
      {
       FBSTRING* vr$8997 = fb_StrAllocTempDescZEx( (uint8*)"inverse", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$8997, 0 );
      }
      goto label$5965;
      label$6096:;
      {
       FBSTRING* vr$8998 = fb_StrAllocTempDescZEx( (uint8*)"inversesqr", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$8998, 0 );
      }
      goto label$5965;
      label$6097:;
      {
       FBSTRING* vr$8999 = fb_StrAllocTempDescZEx( (uint8*)"invoke", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$8999, 0 );
      }
      goto label$5965;
      label$6098:;
      {
       FBSTRING* vr$9000 = fb_StrAllocTempDescZEx( (uint8*)"i-o", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9000, 0 );
      }
      goto label$5965;
      label$6099:;
      {
       FBSTRING* vr$9001 = fb_StrAllocTempDescZEx( (uint8*)"i-o-control", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$9001, 0 );
      }
      goto label$5965;
      label$6100:;
      {
       FBSTRING* vr$9002 = fb_StrAllocTempDescZEx( (uint8*)"ioctl", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9002, 0 );
      }
      goto label$5965;
      label$6101:;
      {
       FBSTRING* vr$9003 = fb_StrAllocTempDescZEx( (uint8*)"ior", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9003, 0 );
      }
      goto label$5965;
      label$6102:;
      {
       FBSTRING* vr$9004 = fb_StrAllocTempDescZEx( (uint8*)"i_resolution", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$9004, 0 );
      }
      goto label$5965;
      label$6103:;
      {
       FBSTRING* vr$9005 = fb_StrAllocTempDescZEx( (uint8*)"iResolution", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$9005, 0 );
      }
      goto label$5965;
      label$6104:;
      {
       FBSTRING* vr$9006 = fb_StrAllocTempDescZEx( (uint8*)"irid", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9006, 0 );
      }
      goto label$5965;
      label$6105:;
      {
       FBSTRING* vr$9007 = fb_StrAllocTempDescZEx( (uint8*)"irid_wavelength", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$9007, 0 );
      }
      goto label$5965;
      label$6106:;
      {
       FBSTRING* vr$9008 = fb_StrAllocTempDescZEx( (uint8*)"is", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$9008, 0 );
      }
      goto label$5965;
      label$6107:;
      {
       FBSTRING* vr$9009 = fb_StrAllocTempDescZEx( (uint8*)"isampler1D", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9009, 0 );
      }
      goto label$5965;
      label$6108:;
      {
       FBSTRING* vr$9010 = fb_StrAllocTempDescZEx( (uint8*)"isampler1DArray", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$9010, 0 );
      }
      goto label$5965;
      label$6109:;
      {
       FBSTRING* vr$9011 = fb_StrAllocTempDescZEx( (uint8*)"isampler2D", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9011, 0 );
      }
      goto label$5965;
      label$6110:;
      {
       FBSTRING* vr$9012 = fb_StrAllocTempDescZEx( (uint8*)"isampler2DArray", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$9012, 0 );
      }
      goto label$5965;
      label$6111:;
      {
       FBSTRING* vr$9013 = fb_StrAllocTempDescZEx( (uint8*)"isampler2DRect", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$9013, 0 );
      }
      goto label$5965;
      label$6112:;
      {
       FBSTRING* vr$9014 = fb_StrAllocTempDescZEx( (uint8*)"isampler3D", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9014, 0 );
      }
      goto label$5965;
      label$6113:;
      {
       FBSTRING* vr$9015 = fb_StrAllocTempDescZEx( (uint8*)"iSampleRate", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$9015, 0 );
      }
      goto label$5965;
      label$6114:;
      {
       FBSTRING* vr$9016 = fb_StrAllocTempDescZEx( (uint8*)"glsl ", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9016, 0 );
      }
      goto label$5965;
      label$6115:;
      {
       FBSTRING* vr$9017 = fb_StrAllocTempDescZEx( (uint8*)"isamplerCube", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$9017, 0 );
      }
      goto label$5965;
      label$6116:;
      {
       FBSTRING* vr$9018 = fb_StrAllocTempDescZEx( (uint8*)"isconnected", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$9018, 0 );
      }
      goto label$5965;
      label$6117:;
      {
       FBSTRING* vr$9019 = fb_StrAllocTempDescZEx( (uint8*)"isconstant", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9019, 0 );
      }
      goto label$5965;
      label$6118:;
      {
       FBSTRING* vr$9020 = fb_StrAllocTempDescZEx( (uint8*)"isfinite", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9020, 0 );
      }
      goto label$5965;
      label$6119:;
      {
       FBSTRING* vr$9021 = fb_StrAllocTempDescZEx( (uint8*)"isinf", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9021, 0 );
      }
      goto label$5965;
      label$6120:;
      {
       FBSTRING* vr$9022 = fb_StrAllocTempDescZEx( (uint8*)"isnan", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9022, 0 );
      }
      goto label$5965;
      label$6121:;
      {
       FBSTRING* vr$9023 = fb_StrAllocTempDescZEx( (uint8*)"isosurface", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9023, 0 );
      }
      goto label$5965;
      label$6122:;
      {
       FBSTRING* vr$9024 = fb_StrAllocTempDescZEx( (uint8*)"isotropic", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9024, 0 );
      }
      goto label$5965;
      label$6123:;
      {
       FBSTRING* vr$9025 = fb_StrAllocTempDescZEx( (uint8*)"iterate", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9025, 0 );
      }
      goto label$5965;
      label$6124:;
      {
       FBSTRING* vr$9026 = fb_StrAllocTempDescZEx( (uint8*)"i_time", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9026, 0 );
      }
      goto label$5965;
      label$6125:;
      {
       FBSTRING* vr$9027 = fb_StrAllocTempDescZEx( (uint8*)"itime", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9027, 0 );
      }
      goto label$5965;
      label$6126:;
      {
       FBSTRING* vr$9028 = fb_StrAllocTempDescZEx( (uint8*)"itimedelta", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9028, 0 );
      }
      goto label$5965;
      label$6127:;
      {
       FBSTRING* vr$9029 = fb_StrAllocTempDescZEx( (uint8*)"ivec2", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9029, 0 );
      }
      goto label$5965;
      label$6128:;
      {
       FBSTRING* vr$9030 = fb_StrAllocTempDescZEx( (uint8*)"ivec3", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9030, 0 );
      }
      goto label$5965;
      label$6129:;
      {
       FBSTRING* vr$9031 = fb_StrAllocTempDescZEx( (uint8*)"ivec4", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9031, 0 );
      }
      goto label$5965;
      label$6130:;
      {
       FBSTRING* vr$9032 = fb_StrAllocTempDescZEx( (uint8*)"j", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$9032, 0 );
      }
      goto label$5965;
      label$6131:;
      {
       FBSTRING* vr$9033 = fb_StrAllocTempDescZEx( (uint8*)"jitter", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9033, 0 );
      }
      goto label$5965;
      label$6132:;
      {
       FBSTRING* vr$9034 = fb_StrAllocTempDescZEx( (uint8*)"join", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9034, 0 );
      }
      goto label$5965;
      label$6133:;
      {
       FBSTRING* vr$9035 = fb_StrAllocTempDescZEx( (uint8*)"jpeg", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9035, 0 );
      }
      goto label$5965;
      label$6134:;
      {
       FBSTRING* vr$9036 = fb_StrAllocTempDescZEx( (uint8*)"julia", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9036, 0 );
      }
      goto label$5965;
      label$6135:;
      {
       FBSTRING* vr$9037 = fb_StrAllocTempDescZEx( (uint8*)"julia_fractal", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$9037, 0 );
      }
      goto label$5965;
      label$6136:;
      {
       FBSTRING* vr$9038 = fb_StrAllocTempDescZEx( (uint8*)"just", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9038, 0 );
      }
      goto label$5965;
      label$6137:;
      {
       FBSTRING* vr$9039 = fb_StrAllocTempDescZEx( (uint8*)"justified", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9039, 0 );
      }
      goto label$5965;
      label$6138:;
      {
       FBSTRING* vr$9040 = fb_StrAllocTempDescZEx( (uint8*)"k", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$9040, 0 );
      }
      goto label$5965;
      label$6139:;
      {
       FBSTRING* vr$9041 = fb_StrAllocTempDescZEx( (uint8*)"kanji", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9041, 0 );
      }
      goto label$5965;
      label$6140:;
      {
       FBSTRING* vr$9042 = fb_StrAllocTempDescZEx( (uint8*)"key", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9042, 0 );
      }
      goto label$5965;
      label$6141:;
      {
       FBSTRING* vr$9043 = fb_StrAllocTempDescZEx( (uint8*)"kill", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9043, 0 );
      }
      goto label$5965;
      label$6142:;
      {
       FBSTRING* vr$9044 = fb_StrAllocTempDescZEx( (uint8*)"l", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$9044, 0 );
      }
      goto label$5965;
      label$6143:;
      {
       FBSTRING* vr$9045 = fb_StrAllocTempDescZEx( (uint8*)"label", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9045, 0 );
      }
      goto label$5965;
      label$6144:;
      {
       FBSTRING* vr$9046 = fb_StrAllocTempDescZEx( (uint8*)"lambda", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9046, 0 );
      }
      goto label$5965;
      label$6145:;
      {
       FBSTRING* vr$9047 = fb_StrAllocTempDescZEx( (uint8*)"last", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9047, 0 );
      }
      goto label$5965;
      label$6146:;
      {
       FBSTRING* vr$9048 = fb_StrAllocTempDescZEx( (uint8*)"lathe", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9048, 0 );
      }
      goto label$5965;
      label$6147:;
      {
       FBSTRING* vr$9049 = fb_StrAllocTempDescZEx( (uint8*)"layout", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9049, 0 );
      }
      goto label$5965;
      label$6148:;
      {
       FBSTRING* vr$9050 = fb_StrAllocTempDescZEx( (uint8*)"lcopy", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9050, 0 );
      }
      goto label$5965;
      label$6149:;
      {
       FBSTRING* vr$9051 = fb_StrAllocTempDescZEx( (uint8*)"leading", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9051, 0 );
      }
      goto label$5965;
      label$6150:;
      {
       FBSTRING* vr$9052 = fb_StrAllocTempDescZEx( (uint8*)"leave", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9052, 0 );
      }
      goto label$5965;
      label$6151:;
      {
       FBSTRING* vr$9053 = fb_StrAllocTempDescZEx( (uint8*)"left", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9053, 0 );
      }
      goto label$5965;
      label$6152:;
      {
      }
      goto label$5965;
      label$6153:;
      {
       FBSTRING* vr$9054 = fb_StrAllocTempDescZEx( (uint8*)"len", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9054, 0 );
      }
      goto label$5965;
      label$6154:;
      {
       FBSTRING* vr$9055 = fb_StrAllocTempDescZEx( (uint8*)"length", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9055, 0 );
      }
      goto label$5965;
      label$6155:;
      {
       FBSTRING* vr$9056 = fb_StrAllocTempDescZEx( (uint8*)"leopard", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9056, 0 );
      }
      goto label$5965;
      label$6156:;
      {
       FBSTRING* vr$9057 = fb_StrAllocTempDescZEx( (uint8*)"less", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9057, 0 );
      }
      goto label$5965;
      label$6157:;
      {
       FBSTRING* vr$9058 = fb_StrAllocTempDescZEx( (uint8*)"lesseq", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9058, 0 );
      }
      goto label$5965;
      label$6158:;
      {
       FBSTRING* vr$9059 = fb_StrAllocTempDescZEx( (uint8*)"let", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9059, 0 );
      }
      goto label$5965;
      label$6159:;
      {
       FBSTRING* vr$9060 = fb_StrAllocTempDescZEx( (uint8*)"libraryt", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9060, 0 );
      }
      goto label$5965;
      label$6160:;
      {
       FBSTRING* vr$9061 = fb_StrAllocTempDescZEx( (uint8*)"light_group", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$9061, 0 );
      }
      goto label$5965;
      label$6161:;
      {
       FBSTRING* vr$9062 = fb_StrAllocTempDescZEx( (uint8*)"light_source", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$9062, 0 );
      }
      goto label$5965;
      label$6162:;
      {
       FBSTRING* vr$9063 = fb_StrAllocTempDescZEx( (uint8*)"like", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9063, 0 );
      }
      goto label$5965;
      label$6163:;
      {
       FBSTRING* vr$9064 = fb_StrAllocTempDescZEx( (uint8*)"limit", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9064, 0 );
      }
      goto label$5965;
      label$6164:;
      {
       FBSTRING* vr$9065 = fb_StrAllocTempDescZEx( (uint8*)"limits", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9065, 0 );
      }
      goto label$5965;
      label$6165:;
      {
       FBSTRING* vr$9066 = fb_StrAllocTempDescZEx( (uint8*)"linage", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9066, 0 );
      }
      goto label$5965;
      label$6166:;
      {
       FBSTRING* vr$9067 = fb_StrAllocTempDescZEx( (uint8*)"linage-counter", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$9067, 0 );
      }
      goto label$5965;
      label$6167:;
      {
       FBSTRING* vr$9068 = fb_StrAllocTempDescZEx( (uint8*)"line", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9068, 0 );
      }
      goto label$5965;
      label$6168:;
      {
       FBSTRING* vr$9069 = fb_StrAllocTempDescZEx( (uint8*)"linear_spline", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$9069, 0 );
      }
      goto label$5965;
      label$6169:;
      {
       FBSTRING* vr$9070 = fb_StrAllocTempDescZEx( (uint8*)"linearstep", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9070, 0 );
      }
      goto label$5965;
      label$6170:;
      {
       FBSTRING* vr$9071 = fb_StrAllocTempDescZEx( (uint8*)"linear_sweep", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$9071, 0 );
      }
      goto label$5965;
      label$6171:;
      {
       FBSTRING* vr$9072 = fb_StrAllocTempDescZEx( (uint8*)"line-counter", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$9072, 0 );
      }
      goto label$5965;
      label$6172:;
      {
       FBSTRING* vr$9073 = fb_StrAllocTempDescZEx( (uint8*)"lines", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9073, 0 );
      }
      goto label$5965;
      label$6173:;
      {
       FBSTRING* vr$9074 = fb_StrAllocTempDescZEx( (uint8*)"linkage", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9074, 0 );
      }
      goto label$5965;
      label$6174:;
      {
       FBSTRING* vr$9075 = fb_StrAllocTempDescZEx( (uint8*)"list", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9075, 0 );
      }
      goto label$5965;
      label$6175:;
      {
       FBSTRING* vr$9076 = fb_StrAllocTempDescZEx( (uint8*)"llist", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9076, 0 );
      }
      goto label$5965;
      label$6176:;
      {
       FBSTRING* vr$9077 = fb_StrAllocTempDescZEx( (uint8*)"ln", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$9077, 0 );
      }
      goto label$5965;
      label$6177:;
      {
       FBSTRING* vr$9078 = fb_StrAllocTempDescZEx( (uint8*)"load", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9078, 0 );
      }
      goto label$5965;
      label$6178:;
      {
       FBSTRING* vr$9079 = fb_StrAllocTempDescZEx( (uint8*)"load_file", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9079, 0 );
      }
      goto label$5965;
      label$6179:;
      {
       FBSTRING* vr$9080 = fb_StrAllocTempDescZEx( (uint8*)"loc", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9080, 0 );
      }
      goto label$5965;
      label$6180:;
      {
       FBSTRING* vr$9081 = fb_StrAllocTempDescZEx( (uint8*)"local", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9081, 0 );
      }
      goto label$5965;
      label$6181:;
      {
       FBSTRING* vr$9082 = fb_StrAllocTempDescZEx( (uint8*)"local-storage", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$9082, 0 );
      }
      goto label$5965;
      label$6182:;
      {
       FBSTRING* vr$9083 = fb_StrAllocTempDescZEx( (uint8*)"locate", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9083, 0 );
      }
      goto label$5965;
      label$6183:;
      {
       FBSTRING* vr$9084 = fb_StrAllocTempDescZEx( (uint8*)"location", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9084, 0 );
      }
      goto label$5965;
      label$6184:;
      {
       FBSTRING* vr$9085 = fb_StrAllocTempDescZEx( (uint8*)"lock", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9085, 0 );
      }
      goto label$5965;
      label$6185:;
      {
       FBSTRING* vr$9086 = fb_StrAllocTempDescZEx( (uint8*)"lof", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9086, 0 );
      }
      goto label$5965;
      label$6186:;
      {
       FBSTRING* vr$9087 = fb_StrAllocTempDescZEx( (uint8*)"log", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9087, 0 );
      }
      goto label$5965;
      label$6187:;
      {
       FBSTRING* vr$9088 = fb_StrAllocTempDescZEx( (uint8*)"log10", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9088, 0 );
      }
      goto label$5965;
      label$6188:;
      {
       FBSTRING* vr$9089 = fb_StrAllocTempDescZEx( (uint8*)"log2", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9089, 0 );
      }
      goto label$5965;
      label$6189:;
      {
       FBSTRING* vr$9090 = fb_StrAllocTempDescZEx( (uint8*)"logb", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9090, 0 );
      }
      goto label$5965;
      label$6190:;
      {
       FBSTRING* vr$9091 = fb_StrAllocTempDescZEx( (uint8*)"logical", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9091, 0 );
      }
      goto label$5965;
      label$6191:;
      {
       FBSTRING* vr$9092 = fb_StrAllocTempDescZEx( (uint8*)"long", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9092, 0 );
      }
      goto label$5965;
      label$6192:;
      {
       FBSTRING* vr$9093 = fb_StrAllocTempDescZEx( (uint8*)"look_at", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9093, 0 );
      }
      goto label$5965;
      label$6193:;
      {
       FBSTRING* vr$9094 = fb_StrAllocTempDescZEx( (uint8*)"looks_like", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9094, 0 );
      }
      goto label$5965;
      label$6194:;
      {
       FBSTRING* vr$9095 = fb_StrAllocTempDescZEx( (uint8*)"loop", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9095, 0 );
      }
      goto label$5965;
      label$6195:;
      {
       FBSTRING* vr$9096 = fb_StrAllocTempDescZEx( (uint8*)"lower", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9096, 0 );
      }
      goto label$5965;
      label$6196:;
      {
       FBSTRING* vr$9097 = fb_StrAllocTempDescZEx( (uint8*)"lower_mb", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9097, 0 );
      }
      goto label$5965;
      label$6197:;
      {
       FBSTRING* vr$9098 = fb_StrAllocTempDescZEx( (uint8*)"low_error_factor", 16ll );
       fb_PrintString( 1, (FBSTRING*)vr$9098, 0 );
      }
      goto label$5965;
      label$6198:;
      {
       FBSTRING* vr$9099 = fb_StrAllocTempDescZEx( (uint8*)"lowp", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9099, 0 );
      }
      goto label$5965;
      label$6199:;
      {
       FBSTRING* vr$9100 = fb_StrAllocTempDescZEx( (uint8*)"low-value", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9100, 0 );
      }
      goto label$5965;
      label$6200:;
      {
       FBSTRING* vr$9101 = fb_StrAllocTempDescZEx( (uint8*)"low-values", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9101, 0 );
      }
      goto label$5965;
      label$6201:;
      {
       FBSTRING* vr$9102 = fb_StrAllocTempDescZEx( (uint8*)"lpad", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9102, 0 );
      }
      goto label$5965;
      label$6202:;
      {
       FBSTRING* vr$9103 = fb_StrAllocTempDescZEx( (uint8*)"lpos", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9103, 0 );
      }
      goto label$5965;
      label$6203:;
      {
       FBSTRING* vr$9104 = fb_StrAllocTempDescZEx( (uint8*)"lprint", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9104, 0 );
      }
      goto label$5965;
      label$6204:;
      {
       FBSTRING* vr$9105 = fb_StrAllocTempDescZEx( (uint8*)"lset", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9105, 0 );
      }
      goto label$5965;
      label$6205:;
      {
       FBSTRING* vr$9106 = fb_StrAllocTempDescZEx( (uint8*)"luminance", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9106, 0 );
      }
      goto label$5965;
      label$6206:;
      {
       FBSTRING* vr$9107 = fb_StrAllocTempDescZEx( (uint8*)"m", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$9107, 0 );
      }
      goto label$5965;
      label$6207:;
      {
       FBSTRING* vr$9108 = fb_StrAllocTempDescZEx( (uint8*)"m_2_pi", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9108, 0 );
      }
      goto label$5965;
      label$6208:;
      {
       FBSTRING* vr$9109 = fb_StrAllocTempDescZEx( (uint8*)"m_2_sqrtpi", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9109, 0 );
      }
      goto label$5965;
      label$6209:;
      {
       FBSTRING* vr$9110 = fb_StrAllocTempDescZEx( (uint8*)"m_4_pi", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9110, 0 );
      }
      goto label$5965;
      label$6210:;
      {
       FBSTRING* vr$9111 = fb_StrAllocTempDescZEx( (uint8*)"macro", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9111, 0 );
      }
      goto label$5965;
      label$6211:;
      {
       FBSTRING* vr$9112 = fb_StrAllocTempDescZEx( (uint8*)"magnet", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9112, 0 );
      }
      goto label$5965;
      label$6212:;
      {
       FBSTRING* vr$9113 = fb_StrAllocTempDescZEx( (uint8*)"main", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9113, 0 );
      }
      goto label$5965;
      label$6213:;
      {
       FBSTRING* vr$9114 = fb_StrAllocTempDescZEx( (uint8*)"main_image", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9114, 0 );
      }
      goto label$5965;
      label$6214:;
      {
       FBSTRING* vr$9115 = fb_StrAllocTempDescZEx( (uint8*)"mainImage", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9115, 0 );
      }
      goto label$5965;
      label$6215:;
      {
       FBSTRING* vr$9116 = fb_StrAllocTempDescZEx( (uint8*)"major_radius", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$9116, 0 );
      }
      goto label$5965;
      label$6216:;
      {
       FBSTRING* vr$9117 = fb_StrAllocTempDescZEx( (uint8*)"mandel", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9117, 0 );
      }
      goto label$5965;
      label$6217:;
      {
       FBSTRING* vr$9118 = fb_StrAllocTempDescZEx( (uint8*)"map", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9118, 0 );
      }
      goto label$5965;
      label$6218:;
      {
       FBSTRING* vr$9119 = fb_StrAllocTempDescZEx( (uint8*)"map_type", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9119, 0 );
      }
      goto label$5965;
      label$6219:;
      {
       FBSTRING* vr$9120 = fb_StrAllocTempDescZEx( (uint8*)"marble", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9120, 0 );
      }
      goto label$5965;
      label$6220:;
      {
       FBSTRING* vr$9121 = fb_StrAllocTempDescZEx( (uint8*)"mat2", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9121, 0 );
      }
      goto label$5965;
      label$6221:;
      {
       FBSTRING* vr$9122 = fb_StrAllocTempDescZEx( (uint8*)"mat2x2", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9122, 0 );
      }
      goto label$5965;
      label$5966:;
      static const void* tmp$4381[256ll] = {
       &&label$5967,
       &&label$5968,
       &&label$5969,
       &&label$5970,
       &&label$5971,
       &&label$5972,
       &&label$5973,
       &&label$5974,
       &&label$5975,
       &&label$5976,
       &&label$5977,
       &&label$5978,
       &&label$5979,
       &&label$5980,
       &&label$5981,
       &&label$5982,
       &&label$5983,
       &&label$5984,
       &&label$5985,
       &&label$5986,
       &&label$5987,
       &&label$5988,
       &&label$5989,
       &&label$5990,
       &&label$5991,
       &&label$5992,
       &&label$5993,
       &&label$5965,
       &&label$5994,
       &&label$5995,
       &&label$5996,
       &&label$5997,
       &&label$5998,
       &&label$5999,
       &&label$6000,
       &&label$6001,
       &&label$6002,
       &&label$6003,
       &&label$6004,
       &&label$6005,
       &&label$6006,
       &&label$6007,
       &&label$6008,
       &&label$6009,
       &&label$6010,
       &&label$6011,
       &&label$6012,
       &&label$6013,
       &&label$6014,
       &&label$6015,
       &&label$6016,
       &&label$6017,
       &&label$6018,
       &&label$6019,
       &&label$6020,
       &&label$6021,
       &&label$6022,
       &&label$6023,
       &&label$6024,
       &&label$6025,
       &&label$6026,
       &&label$6027,
       &&label$6028,
       &&label$6029,
       &&label$6030,
       &&label$6031,
       &&label$6032,
       &&label$6033,
       &&label$6034,
       &&label$6035,
       &&label$6036,
       &&label$6037,
       &&label$6038,
       &&label$6039,
       &&label$6040,
       &&label$6041,
       &&label$6042,
       &&label$6043,
       &&label$6044,
       &&label$6045,
       &&label$6046,
       &&label$6047,
       &&label$6048,
       &&label$6049,
       &&label$6050,
       &&label$6051,
       &&label$6052,
       &&label$6053,
       &&label$6054,
       &&label$6055,
       &&label$6056,
       &&label$6057,
       &&label$6058,
       &&label$6059,
       &&label$6060,
       &&label$6061,
       &&label$6062,
       &&label$6063,
       &&label$6064,
       &&label$6065,
       &&label$6066,
       &&label$6067,
       &&label$6068,
       &&label$6069,
       &&label$6070,
       &&label$6071,
       &&label$6072,
       &&label$6073,
       &&label$6074,
       &&label$6075,
       &&label$6076,
       &&label$6077,
       &&label$6078,
       &&label$6079,
       &&label$6080,
       &&label$6081,
       &&label$6082,
       &&label$6083,
       &&label$6084,
       &&label$6085,
       &&label$6086,
       &&label$6087,
       &&label$6088,
       &&label$6089,
       &&label$6090,
       &&label$6091,
       &&label$6092,
       &&label$6093,
       &&label$6094,
       &&label$6095,
       &&label$6096,
       &&label$6097,
       &&label$6098,
       &&label$6099,
       &&label$6100,
       &&label$6101,
       &&label$6102,
       &&label$6103,
       &&label$6104,
       &&label$6105,
       &&label$6106,
       &&label$6107,
       &&label$6108,
       &&label$6109,
       &&label$6110,
       &&label$6111,
       &&label$6112,
       &&label$6113,
       &&label$6114,
       &&label$6115,
       &&label$6116,
       &&label$6117,
       &&label$6118,
       &&label$6119,
       &&label$6120,
       &&label$6121,
       &&label$6122,
       &&label$6123,
       &&label$6124,
       &&label$6125,
       &&label$6126,
       &&label$6127,
       &&label$6128,
       &&label$6129,
       &&label$6130,
       &&label$6131,
       &&label$6132,
       &&label$6133,
       &&label$6134,
       &&label$6135,
       &&label$6136,
       &&label$6137,
       &&label$6138,
       &&label$6139,
       &&label$6140,
       &&label$6141,
       &&label$6142,
       &&label$6143,
       &&label$6144,
       &&label$6145,
       &&label$6146,
       &&label$6147,
       &&label$6148,
       &&label$6149,
       &&label$6150,
       &&label$6151,
       &&label$6152,
       &&label$6153,
       &&label$6154,
       &&label$6155,
       &&label$6156,
       &&label$6157,
       &&label$6158,
       &&label$6159,
       &&label$6160,
       &&label$6161,
       &&label$6162,
       &&label$6163,
       &&label$6164,
       &&label$6165,
       &&label$6166,
       &&label$6167,
       &&label$6168,
       &&label$6169,
       &&label$6170,
       &&label$6171,
       &&label$6172,
       &&label$6173,
       &&label$6174,
       &&label$6175,
       &&label$6176,
       &&label$6177,
       &&label$6178,
       &&label$6179,
       &&label$6180,
       &&label$6181,
       &&label$6182,
       &&label$6183,
       &&label$6184,
       &&label$6185,
       &&label$6186,
       &&label$6187,
       &&label$6188,
       &&label$6189,
       &&label$6190,
       &&label$6191,
       &&label$6192,
       &&label$6193,
       &&label$6194,
       &&label$6195,
       &&label$6196,
       &&label$6197,
       &&label$6198,
       &&label$6199,
       &&label$6200,
       &&label$6201,
       &&label$6202,
       &&label$6203,
       &&label$6204,
       &&label$6205,
       &&label$6206,
       &&label$6207,
       &&label$6208,
       &&label$6209,
       &&label$6210,
       &&label$6211,
       &&label$6212,
       &&label$6213,
       &&label$6214,
       &&label$6215,
       &&label$6216,
       &&label$6217,
       &&label$6218,
       &&label$6219,
       &&label$6220,
       &&label$6221,
      };
      if( TMP$2825$6 > 255ull ) goto label$5965;
      goto *tmp$4381[TMP$2825$6 - 0ull];
      label$5965:;
     }
    }
    goto label$5327;
    label$6222:;
    {
     {
      uint64 TMP$3071$6;
      TMP$3071$6 = ((uint64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394968ll) ));
      goto label$6224;
      label$6225:;
      {
       FBSTRING* vr$9125 = fb_StrAllocTempDescZEx( (uint8*)"mat2x3", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9125, 0 );
      }
      goto label$6223;
      label$6226:;
      {
       FBSTRING* vr$9126 = fb_StrAllocTempDescZEx( (uint8*)"mat2x4", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9126, 0 );
      }
      goto label$6223;
      label$6227:;
      {
       FBSTRING* vr$9127 = fb_StrAllocTempDescZEx( (uint8*)"mat3", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9127, 0 );
      }
      goto label$6223;
      label$6228:;
      {
       FBSTRING* vr$9128 = fb_StrAllocTempDescZEx( (uint8*)"mat3x2", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9128, 0 );
      }
      goto label$6223;
      label$6229:;
      {
       FBSTRING* vr$9129 = fb_StrAllocTempDescZEx( (uint8*)"mat3x3", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9129, 0 );
      }
      goto label$6223;
      label$6230:;
      {
       FBSTRING* vr$9130 = fb_StrAllocTempDescZEx( (uint8*)"mat3x4", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9130, 0 );
      }
      goto label$6223;
      label$6231:;
      {
       FBSTRING* vr$9131 = fb_StrAllocTempDescZEx( (uint8*)"mat4", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9131, 0 );
      }
      goto label$6223;
      label$6232:;
      {
       FBSTRING* vr$9132 = fb_StrAllocTempDescZEx( (uint8*)"mat4x2", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9132, 0 );
      }
      goto label$6223;
      label$6233:;
      {
       FBSTRING* vr$9133 = fb_StrAllocTempDescZEx( (uint8*)"mat4x3", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9133, 0 );
      }
      goto label$6223;
      label$6234:;
      {
       FBSTRING* vr$9134 = fb_StrAllocTempDescZEx( (uint8*)"mat4x4", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9134, 0 );
      }
      goto label$6223;
      label$6235:;
      {
       FBSTRING* vr$9135 = fb_StrAllocTempDescZEx( (uint8*)"material", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9135, 0 );
      }
      goto label$6223;
      label$6236:;
      {
       FBSTRING* vr$9136 = fb_StrAllocTempDescZEx( (uint8*)"material_map", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$9136, 0 );
      }
      goto label$6223;
      label$6237:;
      {
       FBSTRING* vr$9137 = fb_StrAllocTempDescZEx( (uint8*)"matrix", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9137, 0 );
      }
      goto label$6223;
      label$6238:;
      {
       FBSTRING* vr$9138 = fb_StrAllocTempDescZEx( (uint8*)"max", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9138, 0 );
      }
      goto label$6223;
      label$6239:;
      {
       FBSTRING* vr$9139 = fb_StrAllocTempDescZEx( (uint8*)"max_extent", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9139, 0 );
      }
      goto label$6223;
      label$6240:;
      {
       FBSTRING* vr$9140 = fb_StrAllocTempDescZEx( (uint8*)"max_gradient", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$9140, 0 );
      }
      goto label$6223;
      label$6241:;
      {
       FBSTRING* vr$9141 = fb_StrAllocTempDescZEx( (uint8*)"max_intersections", 17ll );
       fb_PrintString( 1, (FBSTRING*)vr$9141, 0 );
      }
      goto label$6223;
      label$6242:;
      {
       FBSTRING* vr$9142 = fb_StrAllocTempDescZEx( (uint8*)"max_iteration", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$9142, 0 );
      }
      goto label$6223;
      label$6243:;
      {
       FBSTRING* vr$9143 = fb_StrAllocTempDescZEx( (uint8*)"max_sample", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9143, 0 );
      }
      goto label$6223;
      label$6244:;
      {
       FBSTRING* vr$9144 = fb_StrAllocTempDescZEx( (uint8*)"max_trace", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9144, 0 );
      }
      goto label$6223;
      label$6245:;
      {
       FBSTRING* vr$9145 = fb_StrAllocTempDescZEx( (uint8*)"max_trace_level", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$9145, 0 );
      }
      goto label$6223;
      label$6246:;
      {
       FBSTRING* vr$9146 = fb_StrAllocTempDescZEx( (uint8*)"m_e", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9146, 0 );
      }
      goto label$6223;
      label$6247:;
      {
       FBSTRING* vr$9147 = fb_StrAllocTempDescZEx( (uint8*)"media", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9147, 0 );
      }
      goto label$6223;
      label$6248:;
      {
       FBSTRING* vr$9148 = fb_StrAllocTempDescZEx( (uint8*)"media_attenuation", 17ll );
       fb_PrintString( 1, (FBSTRING*)vr$9148, 0 );
      }
      goto label$6223;
      label$6249:;
      {
       FBSTRING* vr$9149 = fb_StrAllocTempDescZEx( (uint8*)"media_interaction", 17ll );
       fb_PrintString( 1, (FBSTRING*)vr$9149, 0 );
      }
      goto label$6223;
      label$6250:;
      {
       FBSTRING* vr$9150 = fb_StrAllocTempDescZEx( (uint8*)"mediump", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9150, 0 );
      }
      goto label$6223;
      label$6251:;
      {
       FBSTRING* vr$9151 = fb_StrAllocTempDescZEx( (uint8*)"memory", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9151, 0 );
      }
      goto label$6223;
      label$6252:;
      {
       FBSTRING* vr$9152 = fb_StrAllocTempDescZEx( (uint8*)"memory_size", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$9152, 0 );
      }
      goto label$6223;
      label$6253:;
      {
       FBSTRING* vr$9153 = fb_StrAllocTempDescZEx( (uint8*)"merge", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9153, 0 );
      }
      goto label$6223;
      label$6254:;
      {
       FBSTRING* vr$9154 = fb_StrAllocTempDescZEx( (uint8*)"mesh", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9154, 0 );
      }
      goto label$6223;
      label$6255:;
      {
       FBSTRING* vr$9155 = fb_StrAllocTempDescZEx( (uint8*)"mesh2", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9155, 0 );
      }
      goto label$6223;
      label$6256:;
      {
       FBSTRING* vr$9156 = fb_StrAllocTempDescZEx( (uint8*)"message", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9156, 0 );
      }
      goto label$6223;
      label$6257:;
      {
       FBSTRING* vr$9157 = fb_StrAllocTempDescZEx( (uint8*)"metaclass", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9157, 0 );
      }
      goto label$6223;
      label$6258:;
      {
       FBSTRING* vr$9158 = fb_StrAllocTempDescZEx( (uint8*)"meta_hint", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9158, 0 );
      }
      goto label$6223;
      label$6259:;
      {
       FBSTRING* vr$9159 = fb_StrAllocTempDescZEx( (uint8*)"metallic", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9159, 0 );
      }
      goto label$6223;
      label$6260:;
      {
       FBSTRING* vr$9160 = fb_StrAllocTempDescZEx( (uint8*)"method", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9160, 0 );
      }
      goto label$6223;
      label$6261:;
      {
       FBSTRING* vr$9161 = fb_StrAllocTempDescZEx( (uint8*)"method-id", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9161, 0 );
      }
      goto label$6223;
      label$6262:;
      {
       FBSTRING* vr$9162 = fb_StrAllocTempDescZEx( (uint8*)"metric", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9162, 0 );
      }
      goto label$6223;
      label$6263:;
      {
       FBSTRING* vr$9163 = fb_StrAllocTempDescZEx( (uint8*)"microfacet", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9163, 0 );
      }
      goto label$6223;
      label$6264:;
      {
       FBSTRING* vr$9164 = fb_StrAllocTempDescZEx( (uint8*)"mid", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9164, 0 );
      }
      goto label$6223;
      label$6265:;
      {
       FBSTRING* vr$9165 = fb_StrAllocTempDescZEx( (uint8*)"min", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9165, 0 );
      }
      goto label$6223;
      label$6266:;
      {
       FBSTRING* vr$9166 = fb_StrAllocTempDescZEx( (uint8*)"min_extent", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9166, 0 );
      }
      goto label$6223;
      label$6267:;
      {
       FBSTRING* vr$9167 = fb_StrAllocTempDescZEx( (uint8*)"minimum_reuse", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$9167, 0 );
      }
      goto label$6223;
      label$6268:;
      {
       FBSTRING* vr$9168 = fb_StrAllocTempDescZEx( (uint8*)"minute", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9168, 0 );
      }
      goto label$6223;
      label$6269:;
      {
       FBSTRING* vr$9169 = fb_StrAllocTempDescZEx( (uint8*)"mkd", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9169, 0 );
      }
      goto label$6223;
      label$6270:;
      {
       FBSTRING* vr$9170 = fb_StrAllocTempDescZEx( (uint8*)"mkdir", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9170, 0 );
      }
      goto label$6223;
      label$6271:;
      {
       FBSTRING* vr$9171 = fb_StrAllocTempDescZEx( (uint8*)"mki", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9171, 0 );
      }
      goto label$6223;
      label$6272:;
      {
       FBSTRING* vr$9172 = fb_StrAllocTempDescZEx( (uint8*)"mks", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9172, 0 );
      }
      goto label$6223;
      label$6273:;
      {
       FBSTRING* vr$9173 = fb_StrAllocTempDescZEx( (uint8*)"M_LN", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9173, 0 );
      }
      goto label$6223;
      label$6274:;
      {
       FBSTRING* vr$9174 = fb_StrAllocTempDescZEx( (uint8*)"M_LN2", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9174, 0 );
      }
      goto label$6223;
      label$6275:;
      {
       FBSTRING* vr$9175 = fb_StrAllocTempDescZEx( (uint8*)"M_LOG10E", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9175, 0 );
      }
      goto label$6223;
      label$6276:;
      {
       FBSTRING* vr$9176 = fb_StrAllocTempDescZEx( (uint8*)"M_LOG2E", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9176, 0 );
      }
      goto label$6223;
      label$6277:;
      {
       FBSTRING* vr$9177 = fb_StrAllocTempDescZEx( (uint8*)"mod", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9177, 0 );
      }
      goto label$6223;
      label$6278:;
      {
       FBSTRING* vr$9178 = fb_StrAllocTempDescZEx( (uint8*)"mode", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9178, 0 );
      }
      goto label$6223;
      label$6279:;
      {
       FBSTRING* vr$9179 = fb_StrAllocTempDescZEx( (uint8*)"modules", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9179, 0 );
      }
      goto label$6223;
      label$6280:;
      {
       FBSTRING* vr$9180 = fb_StrAllocTempDescZEx( (uint8*)"month", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9180, 0 );
      }
      goto label$6223;
      label$6281:;
      {
       FBSTRING* vr$9181 = fb_StrAllocTempDescZEx( (uint8*)"more-labels", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$9181, 0 );
      }
      goto label$6223;
      label$6282:;
      {
       FBSTRING* vr$9182 = fb_StrAllocTempDescZEx( (uint8*)"mortar", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9182, 0 );
      }
      goto label$6223;
      label$6283:;
      {
       FBSTRING* vr$9183 = fb_StrAllocTempDescZEx( (uint8*)"motor", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9183, 0 );
      }
      goto label$6223;
      label$6284:;
      {
       FBSTRING* vr$9184 = fb_StrAllocTempDescZEx( (uint8*)"move", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9184, 0 );
      }
      goto label$6223;
      label$6285:;
      {
       FBSTRING* vr$9185 = fb_StrAllocTempDescZEx( (uint8*)"M_PI", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9185, 0 );
      }
      goto label$6223;
      label$6286:;
      {
       FBSTRING* vr$9186 = fb_StrAllocTempDescZEx( (uint8*)"M_PI_2", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9186, 0 );
      }
      goto label$6223;
      label$6287:;
      {
       FBSTRING* vr$9187 = fb_StrAllocTempDescZEx( (uint8*)"M_PI_4", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9187, 0 );
      }
      goto label$6223;
      label$6288:;
      {
       FBSTRING* vr$9188 = fb_StrAllocTempDescZEx( (uint8*)"M_SQRT", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9188, 0 );
      }
      goto label$6223;
      label$6289:;
      {
       FBSTRING* vr$9189 = fb_StrAllocTempDescZEx( (uint8*)"M_SQRT2", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9189, 0 );
      }
      goto label$6223;
      label$6290:;
      {
       FBSTRING* vr$9190 = fb_StrAllocTempDescZEx( (uint8*)"multiple", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9190, 0 );
      }
      goto label$6223;
      label$6291:;
      {
       FBSTRING* vr$9191 = fb_StrAllocTempDescZEx( (uint8*)"multiply", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9191, 0 );
      }
      goto label$6223;
      label$6292:;
      {
       FBSTRING* vr$9192 = fb_StrAllocTempDescZEx( (uint8*)"n", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$9192, 0 );
      }
      goto label$6223;
      label$6293:;
      {
       FBSTRING* vr$9193 = fb_StrAllocTempDescZEx( (uint8*)"name", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9193, 0 );
      }
      goto label$6223;
      label$6294:;
      {
       FBSTRING* vr$9194 = fb_StrAllocTempDescZEx( (uint8*)"namelist", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9194, 0 );
      }
      goto label$6223;
      label$6295:;
      {
       FBSTRING* vr$9195 = fb_StrAllocTempDescZEx( (uint8*)"native", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9195, 0 );
      }
      goto label$6223;
      label$6296:;
      {
       FBSTRING* vr$9196 = fb_StrAllocTempDescZEx( (uint8*)"native_binary", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$9196, 0 );
      }
      goto label$6223;
      label$6297:;
      {
       FBSTRING* vr$9197 = fb_StrAllocTempDescZEx( (uint8*)"natural", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9197, 0 );
      }
      goto label$6223;
      label$6298:;
      {
       FBSTRING* vr$9198 = fb_StrAllocTempDescZEx( (uint8*)"natural_spline", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$9198, 0 );
      }
      goto label$6223;
      label$6299:;
      {
       FBSTRING* vr$9199 = fb_StrAllocTempDescZEx( (uint8*)"nchar", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9199, 0 );
      }
      goto label$6223;
      label$6300:;
      {
       FBSTRING* vr$9200 = fb_StrAllocTempDescZEx( (uint8*)"near", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9200, 0 );
      }
      goto label$6223;
      label$6301:;
      {
       FBSTRING* vr$9201 = fb_StrAllocTempDescZEx( (uint8*)"nearest_count", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$9201, 0 );
      }
      goto label$6223;
      label$6302:;
      {
       FBSTRING* vr$9202 = fb_StrAllocTempDescZEx( (uint8*)"negative", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9202, 0 );
      }
      goto label$6223;
      label$6303:;
      {
       FBSTRING* vr$9203 = fb_StrAllocTempDescZEx( (uint8*)"nested_loop", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$9203, 0 );
      }
      goto label$6223;
      label$6304:;
      {
       FBSTRING* vr$9204 = fb_StrAllocTempDescZEx( (uint8*)"new", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9204, 0 );
      }
      goto label$6223;
      label$6305:;
      {
       FBSTRING* vr$9205 = fb_StrAllocTempDescZEx( (uint8*)"next", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9205, 0 );
      }
      goto label$6223;
      label$6306:;
      {
       FBSTRING* vr$9206 = fb_StrAllocTempDescZEx( (uint8*)"nil", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9206, 0 );
      }
      goto label$6223;
      label$6307:;
      {
       FBSTRING* vr$9207 = fb_StrAllocTempDescZEx( (uint8*)"no", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$9207, 0 );
      }
      goto label$6223;
      label$6308:;
      {
       FBSTRING* vr$9208 = fb_StrAllocTempDescZEx( (uint8*)"no_bump_scale", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$9208, 0 );
      }
      goto label$6223;
      label$6309:;
      {
       FBSTRING* vr$9209 = fb_StrAllocTempDescZEx( (uint8*)"no_cache", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9209, 0 );
      }
      goto label$6223;
      label$6310:;
      {
       FBSTRING* vr$9210 = fb_StrAllocTempDescZEx( (uint8*)"no_image", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9210, 0 );
      }
      goto label$6223;
      label$6311:;
      {
       FBSTRING* vr$9211 = fb_StrAllocTempDescZEx( (uint8*)"noise", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9211, 0 );
      }
      goto label$6223;
      label$6312:;
      {
       FBSTRING* vr$9212 = fb_StrAllocTempDescZEx( (uint8*)"noise_generator", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$9212, 0 );
      }
      goto label$6223;
      label$6313:;
      {
       FBSTRING* vr$9213 = fb_StrAllocTempDescZEx( (uint8*)"none", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9213, 0 );
      }
      goto label$6223;
      label$6314:;
      {
       FBSTRING* vr$9214 = fb_StrAllocTempDescZEx( (uint8*)"nonlocal", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9214, 0 );
      }
      goto label$6223;
      label$6315:;
      {
       FBSTRING* vr$9215 = fb_StrAllocTempDescZEx( (uint8*)"noperspective", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$9215, 0 );
      }
      goto label$6223;
      label$6316:;
      {
       FBSTRING* vr$9216 = fb_StrAllocTempDescZEx( (uint8*)"no_reflection", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$9216, 0 );
      }
      goto label$6223;
      label$6317:;
      {
       FBSTRING* vr$9217 = fb_StrAllocTempDescZEx( (uint8*)"normal", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9217, 0 );
      }
      goto label$6223;
      label$6318:;
      {
       FBSTRING* vr$9218 = fb_StrAllocTempDescZEx( (uint8*)"normal_indices", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$9218, 0 );
      }
      goto label$6223;
      label$6319:;
      {
       FBSTRING* vr$9219 = fb_StrAllocTempDescZEx( (uint8*)"normalize", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9219, 0 );
      }
      goto label$6223;
      label$6320:;
      {
       FBSTRING* vr$9220 = fb_StrAllocTempDescZEx( (uint8*)"normal_map", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9220, 0 );
      }
      goto label$6223;
      label$6321:;
      {
       FBSTRING* vr$9221 = fb_StrAllocTempDescZEx( (uint8*)"normal_vectors", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$9221, 0 );
      }
      goto label$6223;
      label$6322:;
      {
       FBSTRING* vr$9222 = fb_StrAllocTempDescZEx( (uint8*)"no_shadow", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9222, 0 );
      }
      goto label$6223;
      label$6323:;
      {
       FBSTRING* vr$9223 = fb_StrAllocTempDescZEx( (uint8*)"nostackframe", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$9223, 0 );
      }
      goto label$6223;
      label$6324:;
      {
       FBSTRING* vr$9224 = fb_StrAllocTempDescZEx( (uint8*)"not", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9224, 0 );
      }
      goto label$6223;
      label$6325:;
      {
       FBSTRING* vr$9225 = fb_StrAllocTempDescZEx( (uint8*)"noteq", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9225, 0 );
      }
      goto label$6223;
      label$6326:;
      {
       FBSTRING* vr$9226 = fb_StrAllocTempDescZEx( (uint8*)"null", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9226, 0 );
      }
      goto label$6223;
      label$6327:;
      {
       FBSTRING* vr$9227 = fb_StrAllocTempDescZEx( (uint8*)"nulls", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9227, 0 );
      }
      goto label$6223;
      label$6328:;
      {
       FBSTRING* vr$9228 = fb_StrAllocTempDescZEx( (uint8*)"number", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9228, 1 );
      }
      goto label$6223;
      label$6329:;
      {
       FBSTRING* vr$9229 = fb_StrAllocTempDescZEx( (uint8*)"number_of_waves", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$9229, 0 );
      }
      goto label$6223;
      label$6330:;
      {
       FBSTRING* vr$9230 = fb_StrAllocTempDescZEx( (uint8*)"numeric", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9230, 0 );
      }
      goto label$6223;
      label$6331:;
      {
       FBSTRING* vr$9231 = fb_StrAllocTempDescZEx( (uint8*)"numeric-edited", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$9231, 0 );
      }
      goto label$6223;
      label$6332:;
      {
       FBSTRING* vr$9232 = fb_StrAllocTempDescZEx( (uint8*)"o", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$9232, 0 );
      }
      goto label$6223;
      label$6333:;
      {
       FBSTRING* vr$9233 = fb_StrAllocTempDescZEx( (uint8*)"object", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9233, 0 );
      }
      goto label$6223;
      label$6334:;
      {
       FBSTRING* vr$9234 = fb_StrAllocTempDescZEx( (uint8*)"object-computer", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$9234, 0 );
      }
      goto label$6223;
      label$6335:;
      {
       FBSTRING* vr$9235 = fb_StrAllocTempDescZEx( (uint8*)"occurs", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9235, 0 );
      }
      goto label$6223;
      label$6336:;
      {
       FBSTRING* vr$9236 = fb_StrAllocTempDescZEx( (uint8*)"oct", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9236, 0 );
      }
      goto label$6223;
      label$6337:;
      {
       FBSTRING* vr$9237 = fb_StrAllocTempDescZEx( (uint8*)"octaves", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9237, 0 );
      }
      goto label$6223;
      label$6338:;
      {
       FBSTRING* vr$9238 = fb_StrAllocTempDescZEx( (uint8*)"octet_length", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$9238, 0 );
      }
      goto label$6223;
      label$6339:;
      {
       FBSTRING* vr$9239 = fb_StrAllocTempDescZEx( (uint8*)"of", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$9239, 0 );
      }
      goto label$6223;
      label$6340:;
      {
       FBSTRING* vr$9240 = fb_StrAllocTempDescZEx( (uint8*)"off", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9240, 0 );
      }
      goto label$6223;
      label$6341:;
      {
       FBSTRING* vr$9241 = fb_StrAllocTempDescZEx( (uint8*)"offset", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9241, 0 );
      }
      goto label$6223;
      label$6342:;
      {
       FBSTRING* vr$9242 = fb_StrAllocTempDescZEx( (uint8*)"oldfpccall", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9242, 0 );
      }
      goto label$6223;
      label$6343:;
      {
       FBSTRING* vr$9243 = fb_StrAllocTempDescZEx( (uint8*)"omega", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9243, 0 );
      }
      goto label$6223;
      label$6344:;
      {
       FBSTRING* vr$9244 = fb_StrAllocTempDescZEx( (uint8*)"omitted", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9244, 0 );
      }
      goto label$6223;
      label$6345:;
      {
       FBSTRING* vr$9245 = fb_StrAllocTempDescZEx( (uint8*)"omnimax", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9245, 0 );
      }
      goto label$6223;
      label$6346:;
      {
       FBSTRING* vr$9246 = fb_StrAllocTempDescZEx( (uint8*)"on", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$9246, 0 );
      }
      goto label$6223;
      label$6347:;
      {
       FBSTRING* vr$9247 = fb_StrAllocTempDescZEx( (uint8*)"once", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9247, 0 );
      }
      goto label$6223;
      label$6348:;
      {
       FBSTRING* vr$9248 = fb_StrAllocTempDescZEx( (uint8*)"onion", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9248, 0 );
      }
      goto label$6223;
      label$6349:;
      {
       FBSTRING* vr$9249 = fb_StrAllocTempDescZEx( (uint8*)"open", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9249, 0 );
      }
      goto label$6223;
      label$6350:;
      {
       FBSTRING* vr$9250 = fb_StrAllocTempDescZEx( (uint8*)"operator", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9250, 0 );
      }
      goto label$6223;
      label$6351:;
      {
       FBSTRING* vr$9251 = fb_StrAllocTempDescZEx( (uint8*)"option", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9251, 0 );
      }
      goto label$6223;
      label$6352:;
      {
       FBSTRING* vr$9252 = fb_StrAllocTempDescZEx( (uint8*)"optional", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9252, 0 );
      }
      goto label$6223;
      label$6353:;
      {
       FBSTRING* vr$9253 = fb_StrAllocTempDescZEx( (uint8*)"options", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9253, 0 );
      }
      goto label$6223;
      label$6354:;
      {
       FBSTRING* vr$9254 = fb_StrAllocTempDescZEx( (uint8*)"or", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$9254, 0 );
      }
      goto label$6223;
      label$6355:;
      {
       FBSTRING* vr$9255 = fb_StrAllocTempDescZEx( (uint8*)"or_bits", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9255, 0 );
      }
      goto label$6223;
      label$6356:;
      {
       FBSTRING* vr$9256 = fb_StrAllocTempDescZEx( (uint8*)"order", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9256, 0 );
      }
      goto label$6223;
      label$6357:;
      {
       FBSTRING* vr$9257 = fb_StrAllocTempDescZEx( (uint8*)"ordered", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9257, 0 );
      }
      goto label$6223;
      label$6358:;
      {
       FBSTRING* vr$9258 = fb_StrAllocTempDescZEx( (uint8*)"oren_nayar", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9258, 0 );
      }
      goto label$6223;
      label$6359:;
      {
       FBSTRING* vr$9259 = fb_StrAllocTempDescZEx( (uint8*)"organization", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$9259, 0 );
      }
      goto label$6223;
      label$6360:;
      {
       FBSTRING* vr$9260 = fb_StrAllocTempDescZEx( (uint8*)"orient", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9260, 0 );
      }
      goto label$6223;
      label$6361:;
      {
       FBSTRING* vr$9261 = fb_StrAllocTempDescZEx( (uint8*)"orientation", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$9261, 0 );
      }
      goto label$6223;
      label$6362:;
      {
       FBSTRING* vr$9262 = fb_StrAllocTempDescZEx( (uint8*)"orthographic", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$9262, 0 );
      }
      goto label$6223;
      label$6363:;
      {
       FBSTRING* vr$9263 = fb_StrAllocTempDescZEx( (uint8*)"other", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9263, 0 );
      }
      goto label$6223;
      label$6364:;
      {
       FBSTRING* vr$9264 = fb_StrAllocTempDescZEx( (uint8*)"out", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9264, 0 );
      }
      goto label$6223;
      label$6365:;
      {
       FBSTRING* vr$9265 = fb_StrAllocTempDescZEx( (uint8*)"outer", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9265, 0 );
      }
      goto label$6223;
      label$6366:;
      {
       FBSTRING* vr$9266 = fb_StrAllocTempDescZEx( (uint8*)"output", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9266, 0 );
      }
      goto label$6223;
      label$6367:;
      {
       FBSTRING* vr$9267 = fb_StrAllocTempDescZEx( (uint8*)"overflow", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9267, 0 );
      }
      goto label$6223;
      label$6368:;
      {
       FBSTRING* vr$9268 = fb_StrAllocTempDescZEx( (uint8*)"overlaps", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9268, 0 );
      }
      goto label$6223;
      label$6369:;
      {
       FBSTRING* vr$9269 = fb_StrAllocTempDescZEx( (uint8*)"override", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9269, 0 );
      }
      goto label$6223;
      label$6370:;
      {
       FBSTRING* vr$9270 = fb_StrAllocTempDescZEx( (uint8*)"p", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$9270, 0 );
      }
      goto label$6223;
      label$6371:;
      {
       FBSTRING* vr$9271 = fb_StrAllocTempDescZEx( (uint8*)"packed", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9271, 0 );
      }
      goto label$6223;
      label$6372:;
      {
       FBSTRING* vr$9272 = fb_StrAllocTempDescZEx( (uint8*)"packed-decimal", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$9272, 0 );
      }
      goto label$6223;
      label$6373:;
      {
       FBSTRING* vr$9273 = fb_StrAllocTempDescZEx( (uint8*)"padding", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9273, 0 );
      }
      goto label$6223;
      label$6374:;
      {
       FBSTRING* vr$9274 = fb_StrAllocTempDescZEx( (uint8*)"page", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9274, 0 );
      }
      goto label$6223;
      label$6375:;
      {
       FBSTRING* vr$9275 = fb_StrAllocTempDescZEx( (uint8*)"page-counter", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$9275, 0 );
      }
      goto label$6223;
      label$6376:;
      {
       FBSTRING* vr$9276 = fb_StrAllocTempDescZEx( (uint8*)"paint", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9276, 0 );
      }
      goto label$6223;
      label$6377:;
      {
       FBSTRING* vr$9277 = fb_StrAllocTempDescZEx( (uint8*)"palette", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9277, 0 );
      }
      goto label$6223;
      label$6378:;
      {
       FBSTRING* vr$9278 = fb_StrAllocTempDescZEx( (uint8*)"panoramic", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9278, 0 );
      }
      goto label$6223;
      label$6379:;
      {
       FBSTRING* vr$9279 = fb_StrAllocTempDescZEx( (uint8*)"parallel", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9279, 0 );
      }
      goto label$6223;
      label$6380:;
      {
       FBSTRING* vr$9280 = fb_StrAllocTempDescZEx( (uint8*)"parameter", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9280, 0 );
      }
      goto label$6223;
      label$6381:;
      {
       FBSTRING* vr$9281 = fb_StrAllocTempDescZEx( (uint8*)"parametric", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9281, 0 );
      }
      goto label$6223;
      label$6382:;
      {
       FBSTRING* vr$9282 = fb_StrAllocTempDescZEx( (uint8*)"partition", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9282, 0 );
      }
      goto label$6223;
      label$6383:;
      {
       FBSTRING* vr$9283 = fb_StrAllocTempDescZEx( (uint8*)"pascal", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9283, 0 );
      }
      goto label$6223;
      label$6384:;
      {
       FBSTRING* vr$9284 = fb_StrAllocTempDescZEx( (uint8*)"pass", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9284, 0 );
      }
      goto label$6223;
      label$6385:;
      {
       FBSTRING* vr$9285 = fb_StrAllocTempDescZEx( (uint8*)"pass_through", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$9285, 0 );
      }
      goto label$6223;
      label$6386:;
      {
       FBSTRING* vr$9286 = fb_StrAllocTempDescZEx( (uint8*)"password", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9286, 0 );
      }
      goto label$6223;
      label$6387:;
      {
       FBSTRING* vr$9287 = fb_StrAllocTempDescZEx( (uint8*)"pattern", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9287, 0 );
      }
      goto label$6223;
      label$6388:;
      {
       FBSTRING* vr$9288 = fb_StrAllocTempDescZEx( (uint8*)"pause", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9288, 0 );
      }
      goto label$6223;
      label$6389:;
      {
       FBSTRING* vr$9289 = fb_StrAllocTempDescZEx( (uint8*)"pcopy", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9289, 0 );
      }
      goto label$6223;
      label$6390:;
      {
       FBSTRING* vr$9290 = fb_StrAllocTempDescZEx( (uint8*)"peek", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9290, 0 );
      }
      goto label$6223;
      label$6391:;
      {
       FBSTRING* vr$9291 = fb_StrAllocTempDescZEx( (uint8*)"pen", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9291, 0 );
      }
      goto label$6223;
      label$6392:;
      {
       FBSTRING* vr$9292 = fb_StrAllocTempDescZEx( (uint8*)"perform", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9292, 0 );
      }
      goto label$6223;
      label$6393:;
      {
       FBSTRING* vr$9293 = fb_StrAllocTempDescZEx( (uint8*)"perspective", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$9293, 0 );
      }
      goto label$6223;
      label$6394:;
      {
       FBSTRING* vr$9294 = fb_StrAllocTempDescZEx( (uint8*)"pf", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$9294, 0 );
      }
      goto label$6223;
      label$6395:;
      {
       FBSTRING* vr$9295 = fb_StrAllocTempDescZEx( (uint8*)"pgm", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9295, 0 );
      }
      goto label$6223;
      label$6396:;
      {
       FBSTRING* vr$9296 = fb_StrAllocTempDescZEx( (uint8*)"ph", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$9296, 0 );
      }
      goto label$6223;
      label$6397:;
      {
       FBSTRING* vr$9297 = fb_StrAllocTempDescZEx( (uint8*)"phase", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9297, 0 );
      }
      goto label$6223;
      label$6398:;
      {
       FBSTRING* vr$9298 = fb_StrAllocTempDescZEx( (uint8*)"phong", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9298, 0 );
      }
      goto label$6223;
      label$6399:;
      {
       FBSTRING* vr$9299 = fb_StrAllocTempDescZEx( (uint8*)"phong_size", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9299, 0 );
      }
      goto label$6223;
      label$6400:;
      {
       FBSTRING* vr$9300 = fb_StrAllocTempDescZEx( (uint8*)"photons", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9300, 0 );
      }
      goto label$6223;
      label$6401:;
      {
       FBSTRING* vr$9301 = fb_StrAllocTempDescZEx( (uint8*)"pi", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$9301, 0 );
      }
      goto label$6223;
      label$6402:;
      {
       FBSTRING* vr$9302 = fb_StrAllocTempDescZEx( (uint8*)"pic", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9302, 0 );
      }
      goto label$6223;
      label$6403:;
      {
       FBSTRING* vr$9303 = fb_StrAllocTempDescZEx( (uint8*)"picture", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9303, 0 );
      }
      goto label$6223;
      label$6404:;
      {
       FBSTRING* vr$9304 = fb_StrAllocTempDescZEx( (uint8*)"pigment", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9304, 0 );
      }
      goto label$6223;
      label$6405:;
      {
       FBSTRING* vr$9305 = fb_StrAllocTempDescZEx( (uint8*)"pigment_map", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$9305, 0 );
      }
      goto label$6223;
      label$6406:;
      {
       FBSTRING* vr$9306 = fb_StrAllocTempDescZEx( (uint8*)"pigment_pattern", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$9306, 0 );
      }
      goto label$6223;
      label$6407:;
      {
       FBSTRING* vr$9307 = fb_StrAllocTempDescZEx( (uint8*)"planar", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9307, 0 );
      }
      goto label$6223;
      label$6408:;
      {
       FBSTRING* vr$9308 = fb_StrAllocTempDescZEx( (uint8*)"plane", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9308, 0 );
      }
      goto label$6223;
      label$6409:;
      {
       FBSTRING* vr$9309 = fb_StrAllocTempDescZEx( (uint8*)"play", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9309, 0 );
      }
      goto label$6223;
      label$6410:;
      {
       FBSTRING* vr$9310 = fb_StrAllocTempDescZEx( (uint8*)"plus", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9310, 0 );
      }
      goto label$6223;
      label$6411:;
      {
       FBSTRING* vr$9311 = fb_StrAllocTempDescZEx( (uint8*)"pmap", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9311, 0 );
      }
      goto label$6223;
      label$6412:;
      {
       FBSTRING* vr$9312 = fb_StrAllocTempDescZEx( (uint8*)"png", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9312, 0 );
      }
      goto label$6223;
      label$6413:;
      {
       FBSTRING* vr$9313 = fb_StrAllocTempDescZEx( (uint8*)"pnoise", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9313, 0 );
      }
      goto label$6223;
      label$6414:;
      {
       FBSTRING* vr$9314 = fb_StrAllocTempDescZEx( (uint8*)"point", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9314, 0 );
      }
      goto label$6223;
      label$6415:;
      {
       FBSTRING* vr$9315 = fb_StrAllocTempDescZEx( (uint8*)"point_at", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9315, 0 );
      }
      goto label$6223;
      label$6416:;
      {
       FBSTRING* vr$9316 = fb_StrAllocTempDescZEx( (uint8*)"pointcloud_get", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$9316, 0 );
      }
      goto label$6223;
      label$6417:;
      {
       FBSTRING* vr$9317 = fb_StrAllocTempDescZEx( (uint8*)"pointcloud_search", 17ll );
       fb_PrintString( 1, (FBSTRING*)vr$9317, 0 );
      }
      goto label$6223;
      label$6418:;
      {
       FBSTRING* vr$9318 = fb_StrAllocTempDescZEx( (uint8*)"pointcloud_write", 16ll );
       fb_PrintString( 1, (FBSTRING*)vr$9318, 0 );
      }
      goto label$6223;
      label$6419:;
      {
       FBSTRING* vr$9319 = fb_StrAllocTempDescZEx( (uint8*)"pointer", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9319, 0 );
      }
      goto label$6223;
      label$6420:;
      {
       FBSTRING* vr$9320 = fb_StrAllocTempDescZEx( (uint8*)"poke", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9320, 0 );
      }
      goto label$6223;
      label$6421:;
      {
       FBSTRING* vr$9321 = fb_StrAllocTempDescZEx( (uint8*)"poly", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9321, 0 );
      }
      goto label$6223;
      label$6422:;
      {
       FBSTRING* vr$9322 = fb_StrAllocTempDescZEx( (uint8*)"polygon", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9322, 0 );
      }
      goto label$6223;
      label$6423:;
      {
       FBSTRING* vr$9323 = fb_StrAllocTempDescZEx( (uint8*)"poly_wave", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9323, 0 );
      }
      goto label$6223;
      label$6424:;
      {
       FBSTRING* vr$9324 = fb_StrAllocTempDescZEx( (uint8*)"pos", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9324, 0 );
      }
      goto label$6223;
      label$6425:;
      {
       FBSTRING* vr$9325 = fb_StrAllocTempDescZEx( (uint8*)"position", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9325, 0 );
      }
      goto label$6223;
      label$6426:;
      {
       FBSTRING* vr$9326 = fb_StrAllocTempDescZEx( (uint8*)"position_b", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9326, 0 );
      }
      goto label$6223;
      label$6427:;
      {
       FBSTRING* vr$9327 = fb_StrAllocTempDescZEx( (uint8*)"position_mb", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$9327, 0 );
      }
      goto label$6223;
      label$6428:;
      {
       FBSTRING* vr$9328 = fb_StrAllocTempDescZEx( (uint8*)"positive", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9328, 0 );
      }
      goto label$6223;
      label$6429:;
      {
       FBSTRING* vr$9329 = fb_StrAllocTempDescZEx( (uint8*)"pot", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9329, 0 );
      }
      goto label$6223;
      label$6430:;
      {
       FBSTRING* vr$9330 = fb_StrAllocTempDescZEx( (uint8*)"pow", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9330, 0 );
      }
      goto label$6223;
      label$6431:;
      {
       FBSTRING* vr$9331 = fb_StrAllocTempDescZEx( (uint8*)"ppm", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9331, 0 );
      }
      goto label$6223;
      label$6432:;
      {
       FBSTRING* vr$9332 = fb_StrAllocTempDescZEx( (uint8*)"precision", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9332, 0 );
      }
      goto label$6223;
      label$6433:;
      {
       FBSTRING* vr$9333 = fb_StrAllocTempDescZEx( (uint8*)"precompute", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9333, 0 );
      }
      goto label$6223;
      label$6434:;
      {
       FBSTRING* vr$9334 = fb_StrAllocTempDescZEx( (uint8*)"preset", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9334, 0 );
      }
      goto label$6223;
      label$6435:;
      {
       FBSTRING* vr$9335 = fb_StrAllocTempDescZEx( (uint8*)"pretrace_end", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$9335, 0 );
      }
      goto label$6223;
      label$6436:;
      {
       FBSTRING* vr$9336 = fb_StrAllocTempDescZEx( (uint8*)"pretrace_start", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$9336, 0 );
      }
      goto label$6223;
      label$6437:;
      {
       FBSTRING* vr$9337 = fb_StrAllocTempDescZEx( (uint8*)"print", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9337, 0 );
      }
      goto label$6223;
      label$6438:;
      {
       FBSTRING* vr$9338 = fb_StrAllocTempDescZEx( (uint8*)"printf", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9338, 0 );
      }
      goto label$6223;
      label$6439:;
      {
       FBSTRING* vr$9339 = fb_StrAllocTempDescZEx( (uint8*)"printing", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9339, 0 );
      }
      goto label$6223;
      label$6440:;
      {
       FBSTRING* vr$9340 = fb_StrAllocTempDescZEx( (uint8*)"prism", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9340, 0 );
      }
      goto label$6223;
      label$6441:;
      {
       FBSTRING* vr$9341 = fb_StrAllocTempDescZEx( (uint8*)"private", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9341, 0 );
      }
      goto label$6223;
      label$6442:;
      {
       FBSTRING* vr$9342 = fb_StrAllocTempDescZEx( (uint8*)"procedure", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9342, 0 );
      }
      goto label$6223;
      label$6443:;
      {
       FBSTRING* vr$9343 = fb_StrAllocTempDescZEx( (uint8*)"procedure-pointer", 17ll );
       fb_PrintString( 1, (FBSTRING*)vr$9343, 0 );
      }
      goto label$6223;
      label$6444:;
      {
       FBSTRING* vr$9344 = fb_StrAllocTempDescZEx( (uint8*)"procedures", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9344, 0 );
      }
      goto label$6223;
      label$6445:;
      {
       FBSTRING* vr$9345 = fb_StrAllocTempDescZEx( (uint8*)"proceed", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9345, 0 );
      }
      goto label$6223;
      label$6446:;
      {
       FBSTRING* vr$9346 = fb_StrAllocTempDescZEx( (uint8*)"processing", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9346, 0 );
      }
      goto label$6223;
      label$6447:;
      {
       FBSTRING* vr$9347 = fb_StrAllocTempDescZEx( (uint8*)"prod", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9347, 0 );
      }
      goto label$6223;
      label$6448:;
      {
       FBSTRING* vr$9348 = fb_StrAllocTempDescZEx( (uint8*)"program", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9348, 0 );
      }
      goto label$6223;
      label$6449:;
      {
       FBSTRING* vr$9349 = fb_StrAllocTempDescZEx( (uint8*)"program-id", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9349, 0 );
      }
      goto label$6223;
      label$6450:;
      {
       FBSTRING* vr$9350 = fb_StrAllocTempDescZEx( (uint8*)"projected_through", 17ll );
       fb_PrintString( 1, (FBSTRING*)vr$9350, 0 );
      }
      goto label$6223;
      label$6451:;
      {
       FBSTRING* vr$9351 = fb_StrAllocTempDescZEx( (uint8*)"property", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9351, 0 );
      }
      goto label$6223;
      label$6452:;
      {
       FBSTRING* vr$9352 = fb_StrAllocTempDescZEx( (uint8*)"protected", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9352, 0 );
      }
      goto label$6223;
      label$6453:;
      {
       FBSTRING* vr$9353 = fb_StrAllocTempDescZEx( (uint8*)"pset", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9353, 0 );
      }
      goto label$6223;
      label$6454:;
      {
       FBSTRING* vr$9354 = fb_StrAllocTempDescZEx( (uint8*)"psnoise", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9354, 0 );
      }
      goto label$6223;
      label$6455:;
      {
       FBSTRING* vr$9355 = fb_StrAllocTempDescZEx( (uint8*)"ptype", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9355, 0 );
      }
      goto label$6223;
      label$6456:;
      {
       FBSTRING* vr$9356 = fb_StrAllocTempDescZEx( (uint8*)"public", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9356, 0 );
      }
      goto label$6223;
      label$6457:;
      {
       FBSTRING* vr$9357 = fb_StrAllocTempDescZEx( (uint8*)"published", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9357, 0 );
      }
      goto label$6223;
      label$6458:;
      {
       FBSTRING* vr$9358 = fb_StrAllocTempDescZEx( (uint8*)"purge", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9358, 0 );
      }
      goto label$6223;
      label$6459:;
      {
       FBSTRING* vr$9359 = fb_StrAllocTempDescZEx( (uint8*)"put", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9359, 0 );
      }
      goto label$6223;
      label$6460:;
      {
       FBSTRING* vr$9360 = fb_StrAllocTempDescZEx( (uint8*)"pwr", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9360, 0 );
      }
      goto label$6223;
      label$6461:;
      {
       FBSTRING* vr$9361 = fb_StrAllocTempDescZEx( (uint8*)"q", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$9361, 0 );
      }
      goto label$6223;
      label$6462:;
      {
       FBSTRING* vr$9362 = fb_StrAllocTempDescZEx( (uint8*)"quadratic_spline", 16ll );
       fb_PrintString( 1, (FBSTRING*)vr$9362, 0 );
      }
      goto label$6223;
      label$6463:;
      {
       FBSTRING* vr$9363 = fb_StrAllocTempDescZEx( (uint8*)"quadric", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9363, 0 );
      }
      goto label$6223;
      label$6464:;
      {
       FBSTRING* vr$9364 = fb_StrAllocTempDescZEx( (uint8*)"quartic", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9364, 0 );
      }
      goto label$6223;
      label$6465:;
      {
       FBSTRING* vr$9365 = fb_StrAllocTempDescZEx( (uint8*)"quaternion", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9365, 0 );
      }
      goto label$6223;
      label$6466:;
      {
       FBSTRING* vr$9366 = fb_StrAllocTempDescZEx( (uint8*)"queue", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9366, 0 );
      }
      goto label$6223;
      label$6467:;
      {
       FBSTRING* vr$9367 = fb_StrAllocTempDescZEx( (uint8*)"quick_color", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$9367, 0 );
      }
      goto label$6223;
      label$6468:;
      {
       FBSTRING* vr$9368 = fb_StrAllocTempDescZEx( (uint8*)"quick_colour", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$9368, 0 );
      }
      goto label$6223;
      label$6469:;
      {
       FBSTRING* vr$9369 = fb_StrAllocTempDescZEx( (uint8*)"quilted", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9369, 0 );
      }
      goto label$6223;
      label$6470:;
      {
       FBSTRING* vr$9370 = fb_StrAllocTempDescZEx( (uint8*)"quote", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9370, 0 );
      }
      goto label$6223;
      label$6471:;
      {
       FBSTRING* vr$9371 = fb_StrAllocTempDescZEx( (uint8*)"quotes", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9371, 0 );
      }
      goto label$6223;
      label$6472:;
      {
       FBSTRING* vr$9372 = fb_StrAllocTempDescZEx( (uint8*)"r", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$9372, 0 );
      }
      goto label$6223;
      label$6473:;
      {
       FBSTRING* vr$9373 = fb_StrAllocTempDescZEx( (uint8*)"radial", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9373, 0 );
      }
      goto label$6223;
      label$6474:;
      {
       FBSTRING* vr$9374 = fb_StrAllocTempDescZEx( (uint8*)"radians", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9374, 0 );
      }
      goto label$6223;
      label$6475:;
      {
       FBSTRING* vr$9375 = fb_StrAllocTempDescZEx( (uint8*)"radiosity", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9375, 0 );
      }
      goto label$6223;
      label$6476:;
      {
       FBSTRING* vr$9376 = fb_StrAllocTempDescZEx( (uint8*)"radius", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9376, 0 );
      }
      goto label$6223;
      label$6477:;
      {
       FBSTRING* vr$9377 = fb_StrAllocTempDescZEx( (uint8*)"rainbow", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9377, 0 );
      }
      goto label$6223;
      label$6478:;
      {
       FBSTRING* vr$9378 = fb_StrAllocTempDescZEx( (uint8*)"raise", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9378, 0 );
      }
      goto label$6223;
      label$6479:;
      {
       FBSTRING* vr$9379 = fb_StrAllocTempDescZEx( (uint8*)"ramp_wave", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9379, 0 );
      }
      goto label$6223;
      label$6480:;
      {
       FBSTRING* vr$9380 = fb_StrAllocTempDescZEx( (uint8*)"rand", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9380, 0 );
      }
      goto label$6223;
      label$6224:;
      static const void* tmp$4382[256ll] = {
       &&label$6225,
       &&label$6226,
       &&label$6227,
       &&label$6228,
       &&label$6229,
       &&label$6230,
       &&label$6231,
       &&label$6232,
       &&label$6233,
       &&label$6234,
       &&label$6235,
       &&label$6236,
       &&label$6237,
       &&label$6238,
       &&label$6239,
       &&label$6240,
       &&label$6241,
       &&label$6242,
       &&label$6243,
       &&label$6244,
       &&label$6245,
       &&label$6246,
       &&label$6247,
       &&label$6248,
       &&label$6249,
       &&label$6250,
       &&label$6251,
       &&label$6252,
       &&label$6253,
       &&label$6254,
       &&label$6255,
       &&label$6256,
       &&label$6257,
       &&label$6258,
       &&label$6259,
       &&label$6260,
       &&label$6261,
       &&label$6262,
       &&label$6263,
       &&label$6264,
       &&label$6265,
       &&label$6266,
       &&label$6267,
       &&label$6268,
       &&label$6269,
       &&label$6270,
       &&label$6271,
       &&label$6272,
       &&label$6273,
       &&label$6274,
       &&label$6275,
       &&label$6276,
       &&label$6277,
       &&label$6278,
       &&label$6279,
       &&label$6280,
       &&label$6281,
       &&label$6282,
       &&label$6283,
       &&label$6284,
       &&label$6285,
       &&label$6286,
       &&label$6287,
       &&label$6288,
       &&label$6289,
       &&label$6290,
       &&label$6291,
       &&label$6292,
       &&label$6293,
       &&label$6294,
       &&label$6295,
       &&label$6296,
       &&label$6297,
       &&label$6298,
       &&label$6299,
       &&label$6300,
       &&label$6301,
       &&label$6302,
       &&label$6303,
       &&label$6304,
       &&label$6305,
       &&label$6306,
       &&label$6307,
       &&label$6308,
       &&label$6309,
       &&label$6310,
       &&label$6311,
       &&label$6312,
       &&label$6313,
       &&label$6314,
       &&label$6315,
       &&label$6316,
       &&label$6317,
       &&label$6318,
       &&label$6319,
       &&label$6320,
       &&label$6321,
       &&label$6322,
       &&label$6323,
       &&label$6324,
       &&label$6325,
       &&label$6326,
       &&label$6327,
       &&label$6328,
       &&label$6329,
       &&label$6330,
       &&label$6331,
       &&label$6332,
       &&label$6333,
       &&label$6334,
       &&label$6335,
       &&label$6336,
       &&label$6337,
       &&label$6338,
       &&label$6339,
       &&label$6340,
       &&label$6341,
       &&label$6342,
       &&label$6343,
       &&label$6344,
       &&label$6345,
       &&label$6346,
       &&label$6347,
       &&label$6348,
       &&label$6349,
       &&label$6350,
       &&label$6351,
       &&label$6352,
       &&label$6353,
       &&label$6354,
       &&label$6355,
       &&label$6356,
       &&label$6357,
       &&label$6358,
       &&label$6359,
       &&label$6360,
       &&label$6361,
       &&label$6362,
       &&label$6363,
       &&label$6364,
       &&label$6365,
       &&label$6366,
       &&label$6367,
       &&label$6368,
       &&label$6369,
       &&label$6370,
       &&label$6371,
       &&label$6372,
       &&label$6373,
       &&label$6374,
       &&label$6375,
       &&label$6376,
       &&label$6377,
       &&label$6378,
       &&label$6379,
       &&label$6380,
       &&label$6381,
       &&label$6382,
       &&label$6383,
       &&label$6384,
       &&label$6385,
       &&label$6386,
       &&label$6387,
       &&label$6388,
       &&label$6389,
       &&label$6390,
       &&label$6391,
       &&label$6392,
       &&label$6393,
       &&label$6394,
       &&label$6395,
       &&label$6396,
       &&label$6397,
       &&label$6398,
       &&label$6399,
       &&label$6400,
       &&label$6401,
       &&label$6402,
       &&label$6403,
       &&label$6404,
       &&label$6405,
       &&label$6406,
       &&label$6407,
       &&label$6408,
       &&label$6409,
       &&label$6410,
       &&label$6411,
       &&label$6412,
       &&label$6413,
       &&label$6414,
       &&label$6415,
       &&label$6416,
       &&label$6417,
       &&label$6418,
       &&label$6419,
       &&label$6420,
       &&label$6421,
       &&label$6422,
       &&label$6423,
       &&label$6424,
       &&label$6425,
       &&label$6426,
       &&label$6427,
       &&label$6428,
       &&label$6429,
       &&label$6430,
       &&label$6431,
       &&label$6432,
       &&label$6433,
       &&label$6434,
       &&label$6435,
       &&label$6436,
       &&label$6437,
       &&label$6438,
       &&label$6439,
       &&label$6440,
       &&label$6441,
       &&label$6442,
       &&label$6443,
       &&label$6444,
       &&label$6445,
       &&label$6446,
       &&label$6447,
       &&label$6448,
       &&label$6449,
       &&label$6450,
       &&label$6451,
       &&label$6452,
       &&label$6453,
       &&label$6454,
       &&label$6455,
       &&label$6456,
       &&label$6457,
       &&label$6458,
       &&label$6459,
       &&label$6460,
       &&label$6461,
       &&label$6462,
       &&label$6463,
       &&label$6464,
       &&label$6465,
       &&label$6466,
       &&label$6467,
       &&label$6468,
       &&label$6469,
       &&label$6470,
       &&label$6471,
       &&label$6472,
       &&label$6473,
       &&label$6474,
       &&label$6475,
       &&label$6476,
       &&label$6477,
       &&label$6478,
       &&label$6479,
       &&label$6480,
      };
      if( TMP$3071$6 > 255ull ) goto label$6223;
      goto *tmp$4382[TMP$3071$6 - 0ull];
      label$6223:;
     }
    }
    goto label$5327;
    label$6481:;
    {
     {
      uint64 TMP$3323$6;
      TMP$3323$6 = ((uint64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394888ll) ));
      if( TMP$3323$6 != 0ull ) goto label$6483;
      label$6484:;
      {
       FBSTRING* vr$9383 = fb_StrAllocTempDescZEx( (uint8*)"random", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9383, 0 );
      }
      goto label$6482;
      label$6483:;
      if( TMP$3323$6 != 1ull ) goto label$6485;
      label$6486:;
      {
       FBSTRING* vr$9384 = fb_StrAllocTempDescZEx( (uint8*)"randomize", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9384, 0 );
      }
      goto label$6482;
      label$6485:;
      if( TMP$3323$6 != 2ull ) goto label$6487;
      label$6488:;
      {
       FBSTRING* vr$9385 = fb_StrAllocTempDescZEx( (uint8*)"range", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9385, 0 );
      }
      goto label$6482;
      label$6487:;
      if( TMP$3323$6 != 3ull ) goto label$6489;
      label$6490:;
      {
       FBSTRING* vr$9386 = fb_StrAllocTempDescZEx( (uint8*)"ratio", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9386, 0 );
      }
      goto label$6482;
      label$6489:;
      if( TMP$3323$6 != 4ull ) goto label$6491;
      label$6492:;
      {
       FBSTRING* vr$9387 = fb_StrAllocTempDescZEx( (uint8*)"raytype", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9387, 0 );
      }
      goto label$6482;
      label$6491:;
      if( TMP$3323$6 != 5ull ) goto label$6493;
      label$6494:;
      {
       FBSTRING* vr$9388 = fb_StrAllocTempDescZEx( (uint8*)"rd", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$9388, 0 );
      }
      goto label$6482;
      label$6493:;
      if( TMP$3323$6 != 6ull ) goto label$6495;
      label$6496:;
      {
       FBSTRING* vr$9389 = fb_StrAllocTempDescZEx( (uint8*)"read", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9389, 0 );
      }
      goto label$6482;
      label$6495:;
      if( TMP$3323$6 != 7ull ) goto label$6497;
      label$6498:;
      {
       FBSTRING* vr$9390 = fb_StrAllocTempDescZEx( (uint8*)"ready", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9390, 0 );
      }
      goto label$6482;
      label$6497:;
      if( TMP$3323$6 != 8ull ) goto label$6499;
      label$6500:;
      {
       FBSTRING* vr$9391 = fb_StrAllocTempDescZEx( (uint8*)"real", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9391, 0 );
      }
      goto label$6482;
      label$6499:;
      if( TMP$3323$6 != 9ull ) goto label$6501;
      label$6502:;
      {
       FBSTRING* vr$9392 = fb_StrAllocTempDescZEx( (uint8*)"receive", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9392, 0 );
      }
      goto label$6482;
      label$6501:;
      if( TMP$3323$6 != 10ull ) goto label$6503;
      label$6504:;
      {
       FBSTRING* vr$9393 = fb_StrAllocTempDescZEx( (uint8*)"reciprocal", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9393, 0 );
      }
      goto label$6482;
      label$6503:;
      if( TMP$3323$6 != 11ull ) goto label$6505;
      label$6506:;
      {
       FBSTRING* vr$9394 = fb_StrAllocTempDescZEx( (uint8*)"record", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9394, 0 );
      }
      goto label$6482;
      label$6505:;
      if( TMP$3323$6 != 12ull ) goto label$6507;
      label$6508:;
      {
       FBSTRING* vr$9395 = fb_StrAllocTempDescZEx( (uint8*)"recording", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9395, 0 );
      }
      goto label$6482;
      label$6507:;
      if( TMP$3323$6 != 13ull ) goto label$6509;
      label$6510:;
      {
       FBSTRING* vr$9396 = fb_StrAllocTempDescZEx( (uint8*)"records", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9396, 0 );
      }
      goto label$6482;
      label$6509:;
      if( TMP$3323$6 != 14ull ) goto label$6511;
      label$6512:;
      {
       FBSTRING* vr$9397 = fb_StrAllocTempDescZEx( (uint8*)"recursion_limit", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$9397, 0 );
      }
      goto label$6482;
      label$6511:;
      if( TMP$3323$6 != 15ull ) goto label$6513;
      label$6514:;
      {
       FBSTRING* vr$9398 = fb_StrAllocTempDescZEx( (uint8*)"recursive", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9398, 0 );
      }
      goto label$6482;
      label$6513:;
      if( TMP$3323$6 != 16ull ) goto label$6515;
      label$6516:;
      {
       FBSTRING* vr$9399 = fb_StrAllocTempDescZEx( (uint8*)"red", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9399, 0 );
      }
      goto label$6482;
      label$6515:;
      if( TMP$3323$6 != 17ull ) goto label$6517;
      label$6518:;
      {
       FBSTRING* vr$9400 = fb_StrAllocTempDescZEx( (uint8*)"redefines", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9400, 0 );
      }
      goto label$6482;
      label$6517:;
      if( TMP$3323$6 != 18ull ) goto label$6519;
      label$6520:;
      {
       FBSTRING* vr$9401 = fb_StrAllocTempDescZEx( (uint8*)"reel", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9401, 0 );
      }
      goto label$6482;
      label$6519:;
      if( TMP$3323$6 != 19ull ) goto label$6521;
      label$6522:;
      {
       FBSTRING* vr$9402 = fb_StrAllocTempDescZEx( (uint8*)"reference", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9402, 0 );
      }
      goto label$6482;
      label$6521:;
      if( TMP$3323$6 != 20ull ) goto label$6523;
      label$6524:;
      {
       FBSTRING* vr$9403 = fb_StrAllocTempDescZEx( (uint8*)"references", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9403, 0 );
      }
      goto label$6482;
      label$6523:;
      if( TMP$3323$6 != 21ull ) goto label$6525;
      label$6526:;
      {
       FBSTRING* vr$9404 = fb_StrAllocTempDescZEx( (uint8*)"reflect", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9404, 0 );
      }
      goto label$6482;
      label$6525:;
      if( TMP$3323$6 != 22ull ) goto label$6527;
      label$6528:;
      {
       FBSTRING* vr$9405 = fb_StrAllocTempDescZEx( (uint8*)"reflection", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9405, 0 );
      }
      goto label$6482;
      label$6527:;
      if( TMP$3323$6 != 23ull ) goto label$6529;
      label$6530:;
      {
       FBSTRING* vr$9406 = fb_StrAllocTempDescZEx( (uint8*)"reflection_exponent", 19ll );
       fb_PrintString( 1, (FBSTRING*)vr$9406, 0 );
      }
      goto label$6482;
      label$6529:;
      if( TMP$3323$6 != 24ull ) goto label$6531;
      label$6532:;
      {
       FBSTRING* vr$9407 = fb_StrAllocTempDescZEx( (uint8*)"refract", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9407, 0 );
      }
      goto label$6482;
      label$6531:;
      if( TMP$3323$6 != 25ull ) goto label$6533;
      label$6534:;
      {
       FBSTRING* vr$9408 = fb_StrAllocTempDescZEx( (uint8*)"refraction", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9408, 0 );
      }
      goto label$6482;
      label$6533:;
      if( TMP$3323$6 != 26ull ) goto label$6535;
      label$6536:;
      {
       FBSTRING* vr$9409 = fb_StrAllocTempDescZEx( (uint8*)"regex_match", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$9409, 0 );
      }
      goto label$6482;
      label$6535:;
      if( TMP$3323$6 != 27ull ) goto label$6537;
      label$6538:;
      {
       FBSTRING* vr$9410 = fb_StrAllocTempDescZEx( (uint8*)"regex_search", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$9410, 0 );
      }
      goto label$6482;
      label$6537:;
      if( TMP$3323$6 != 28ull ) goto label$6539;
      label$6540:;
      {
       FBSTRING* vr$9411 = fb_StrAllocTempDescZEx( (uint8*)"register", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9411, 0 );
      }
      goto label$6482;
      label$6539:;
      if( TMP$3323$6 != 29ull ) goto label$6541;
      label$6542:;
      {
       FBSTRING* vr$9412 = fb_StrAllocTempDescZEx( (uint8*)"reintroduce", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$9412, 0 );
      }
      goto label$6482;
      label$6541:;
      if( TMP$3323$6 != 30ull ) goto label$6543;
      label$6544:;
      {
       FBSTRING* vr$9413 = fb_StrAllocTempDescZEx( (uint8*)"relative", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9413, 0 );
      }
      goto label$6482;
      label$6543:;
      if( TMP$3323$6 != 31ull ) goto label$6545;
      label$6546:;
      {
       FBSTRING* vr$9414 = fb_StrAllocTempDescZEx( (uint8*)"release", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9414, 0 );
      }
      goto label$6482;
      label$6545:;
      if( TMP$3323$6 != 32ull ) goto label$6547;
      label$6548:;
      {
       FBSTRING* vr$9415 = fb_StrAllocTempDescZEx( (uint8*)"reload", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9415, 0 );
      }
      goto label$6482;
      label$6547:;
      if( TMP$3323$6 != 33ull ) goto label$6549;
      label$6550:;
      {
       FBSTRING* vr$9416 = fb_StrAllocTempDescZEx( (uint8*)"rem", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9416, 0 );
      }
      goto label$6482;
      label$6549:;
      if( TMP$3323$6 != 34ull ) goto label$6551;
      label$6552:;
      {
       FBSTRING* vr$9417 = fb_StrAllocTempDescZEx( (uint8*)"remainder", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9417, 0 );
      }
      goto label$6482;
      label$6551:;
      if( TMP$3323$6 != 35ull ) goto label$6553;
      label$6554:;
      {
       FBSTRING* vr$9418 = fb_StrAllocTempDescZEx( (uint8*)"removal", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9418, 0 );
      }
      goto label$6482;
      label$6553:;
      if( TMP$3323$6 != 36ull ) goto label$6555;
      label$6556:;
      {
       FBSTRING* vr$9419 = fb_StrAllocTempDescZEx( (uint8*)"renames", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9419, 0 );
      }
      goto label$6482;
      label$6555:;
      if( TMP$3323$6 != 37ull ) goto label$6557;
      label$6558:;
      {
       FBSTRING* vr$9420 = fb_StrAllocTempDescZEx( (uint8*)"render", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9420, 0 );
      }
      goto label$6482;
      label$6557:;
      if( TMP$3323$6 != 38ull ) goto label$6559;
      label$6560:;
      {
       FBSTRING* vr$9421 = fb_StrAllocTempDescZEx( (uint8*)"renum", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9421, 0 );
      }
      goto label$6482;
      label$6559:;
      if( TMP$3323$6 != 39ull ) goto label$6561;
      label$6562:;
      {
       FBSTRING* vr$9422 = fb_StrAllocTempDescZEx( (uint8*)"repeat", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9422, 0 );
      }
      goto label$6482;
      label$6561:;
      if( TMP$3323$6 != 40ull ) goto label$6563;
      label$6564:;
      {
       FBSTRING* vr$9423 = fb_StrAllocTempDescZEx( (uint8*)"replace", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9423, 0 );
      }
      goto label$6482;
      label$6563:;
      if( TMP$3323$6 != 41ull ) goto label$6565;
      label$6566:;
      {
       FBSTRING* vr$9424 = fb_StrAllocTempDescZEx( (uint8*)"replacing", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9424, 0 );
      }
      goto label$6482;
      label$6565:;
      if( TMP$3323$6 != 42ull ) goto label$6567;
      label$6568:;
      {
       FBSTRING* vr$9425 = fb_StrAllocTempDescZEx( (uint8*)"report", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9425, 0 );
      }
      goto label$6482;
      label$6567:;
      if( TMP$3323$6 != 43ull ) goto label$6569;
      label$6570:;
      {
       FBSTRING* vr$9426 = fb_StrAllocTempDescZEx( (uint8*)"reporting", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9426, 0 );
      }
      goto label$6482;
      label$6569:;
      if( TMP$3323$6 != 44ull ) goto label$6571;
      label$6572:;
      {
       FBSTRING* vr$9427 = fb_StrAllocTempDescZEx( (uint8*)"reports", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9427, 0 );
      }
      goto label$6482;
      label$6571:;
      if( TMP$3323$6 != 45ull ) goto label$6573;
      label$6574:;
      {
       FBSTRING* vr$9428 = fb_StrAllocTempDescZEx( (uint8*)"repository", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9428, 0 );
      }
      goto label$6482;
      label$6573:;
      if( TMP$3323$6 != 46ull ) goto label$6575;
      label$6576:;
      {
       FBSTRING* vr$9429 = fb_StrAllocTempDescZEx( (uint8*)"rerun", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9429, 0 );
      }
      goto label$6482;
      label$6575:;
      if( TMP$3323$6 != 47ull ) goto label$6577;
      label$6578:;
      {
       FBSTRING* vr$9430 = fb_StrAllocTempDescZEx( (uint8*)"reserve", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9430, 0 );
      }
      goto label$6482;
      label$6577:;
      if( TMP$3323$6 != 48ull ) goto label$6579;
      label$6580:;
      {
       FBSTRING* vr$9431 = fb_StrAllocTempDescZEx( (uint8*)"reset", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9431, 0 );
      }
      goto label$6482;
      label$6579:;
      if( TMP$3323$6 != 49ull ) goto label$6581;
      label$6582:;
      {
       FBSTRING* vr$9432 = fb_StrAllocTempDescZEx( (uint8*)"restore", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9432, 0 );
      }
      goto label$6482;
      label$6581:;
      if( TMP$3323$6 != 50ull ) goto label$6583;
      label$6584:;
      {
       FBSTRING* vr$9433 = fb_StrAllocTempDescZEx( (uint8*)"resume", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9433, 0 );
      }
      goto label$6482;
      label$6583:;
      if( TMP$3323$6 != 51ull ) goto label$6585;
      label$6586:;
      {
       FBSTRING* vr$9434 = fb_StrAllocTempDescZEx( (uint8*)"return", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9434, 0 );
      }
      goto label$6482;
      label$6585:;
      if( TMP$3323$6 != 52ull ) goto label$6587;
      label$6588:;
      {
       FBSTRING* vr$9435 = fb_StrAllocTempDescZEx( (uint8*)"return-code", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$9435, 0 );
      }
      goto label$6482;
      label$6587:;
      if( TMP$3323$6 != 53ull ) goto label$6589;
      label$6590:;
      {
       FBSTRING* vr$9436 = fb_StrAllocTempDescZEx( (uint8*)"returning", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9436, 0 );
      }
      goto label$6482;
      label$6589:;
      if( TMP$3323$6 != 54ull ) goto label$6591;
      label$6592:;
      {
       FBSTRING* vr$9437 = fb_StrAllocTempDescZEx( (uint8*)"reversed", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9437, 0 );
      }
      goto label$6482;
      label$6591:;
      if( TMP$3323$6 != 55ull ) goto label$6593;
      label$6594:;
      {
       FBSTRING* vr$9438 = fb_StrAllocTempDescZEx( (uint8*)"rewind", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9438, 0 );
      }
      goto label$6482;
      label$6593:;
      if( TMP$3323$6 != 56ull ) goto label$6595;
      label$6596:;
      {
       FBSTRING* vr$9439 = fb_StrAllocTempDescZEx( (uint8*)"rewrite", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9439, 0 );
      }
      goto label$6482;
      label$6595:;
      if( TMP$3323$6 != 57ull ) goto label$6597;
      label$6598:;
      {
       FBSTRING* vr$9440 = fb_StrAllocTempDescZEx( (uint8*)"rf", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$9440, 0 );
      }
      goto label$6482;
      label$6597:;
      if( TMP$3323$6 != 58ull ) goto label$6599;
      label$6600:;
      {
       FBSTRING* vr$9441 = fb_StrAllocTempDescZEx( (uint8*)"rgb", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9441, 0 );
      }
      goto label$6482;
      label$6599:;
      if( TMP$3323$6 != 59ull ) goto label$6601;
      label$6602:;
      {
       FBSTRING* vr$9442 = fb_StrAllocTempDescZEx( (uint8*)"rgbf", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9442, 0 );
      }
      goto label$6482;
      label$6601:;
      if( TMP$3323$6 != 60ull ) goto label$6603;
      label$6604:;
      {
       FBSTRING* vr$9443 = fb_StrAllocTempDescZEx( (uint8*)"rgbft", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9443, 0 );
      }
      goto label$6482;
      label$6603:;
      if( TMP$3323$6 != 61ull ) goto label$6605;
      label$6606:;
      {
       FBSTRING* vr$9444 = fb_StrAllocTempDescZEx( (uint8*)"rgbt", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9444, 0 );
      }
      goto label$6482;
      label$6605:;
      if( TMP$3323$6 != 62ull ) goto label$6607;
      label$6608:;
      {
       FBSTRING* vr$9445 = fb_StrAllocTempDescZEx( (uint8*)"rh", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$9445, 0 );
      }
      goto label$6482;
      label$6607:;
      if( TMP$3323$6 != 63ull ) goto label$6609;
      label$6610:;
      {
       FBSTRING* vr$9446 = fb_StrAllocTempDescZEx( (uint8*)"right", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9446, 0 );
      }
      goto label$6482;
      label$6609:;
      if( TMP$3323$6 != 65ull ) goto label$6611;
      label$6612:;
      {
       FBSTRING* vr$9447 = fb_StrAllocTempDescZEx( (uint8*)"ripples", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9447, 0 );
      }
      goto label$6482;
      label$6611:;
      if( TMP$3323$6 != 66ull ) goto label$6613;
      label$6614:;
      {
       FBSTRING* vr$9448 = fb_StrAllocTempDescZEx( (uint8*)"rmdir", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9448, 0 );
      }
      goto label$6482;
      label$6613:;
      if( TMP$3323$6 != 67ull ) goto label$6615;
      label$6616:;
      {
       FBSTRING* vr$9449 = fb_StrAllocTempDescZEx( (uint8*)"rnd", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9449, 0 );
      }
      goto label$6482;
      label$6615:;
      if( TMP$3323$6 != 68ull ) goto label$6617;
      label$6618:;
      {
       FBSTRING* vr$9450 = fb_StrAllocTempDescZEx( (uint8*)"rotate", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9450, 0 );
      }
      goto label$6482;
      label$6617:;
      if( TMP$3323$6 != 69ull ) goto label$6619;
      label$6620:;
      {
       FBSTRING* vr$9451 = fb_StrAllocTempDescZEx( (uint8*)"roughness", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9451, 0 );
      }
      goto label$6482;
      label$6619:;
      if( TMP$3323$6 != 70ull ) goto label$6621;
      label$6622:;
      {
       FBSTRING* vr$9452 = fb_StrAllocTempDescZEx( (uint8*)"round", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9452, 0 );
      }
      goto label$6482;
      label$6621:;
      if( TMP$3323$6 != 71ull ) goto label$6623;
      label$6624:;
      {
       FBSTRING* vr$9453 = fb_StrAllocTempDescZEx( (uint8*)"rounded", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9453, 0 );
      }
      goto label$6482;
      label$6623:;
      if( TMP$3323$6 != 72ull ) goto label$6625;
      label$6626:;
      {
       FBSTRING* vr$9454 = fb_StrAllocTempDescZEx( (uint8*)"row", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9454, 0 );
      }
      goto label$6482;
      label$6625:;
      if( TMP$3323$6 != 73ull ) goto label$6627;
      label$6628:;
      {
       FBSTRING* vr$9455 = fb_StrAllocTempDescZEx( (uint8*)"row_major", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9455, 0 );
      }
      goto label$6482;
      label$6627:;
      if( TMP$3323$6 != 74ull ) goto label$6629;
      label$6630:;
      {
       FBSTRING* vr$9456 = fb_StrAllocTempDescZEx( (uint8*)"rpad", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9456, 0 );
      }
      goto label$6482;
      label$6629:;
      if( TMP$3323$6 != 75ull ) goto label$6631;
      label$6632:;
      {
       FBSTRING* vr$9457 = fb_StrAllocTempDescZEx( (uint8*)"rset", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9457, 0 );
      }
      goto label$6482;
      label$6631:;
      if( TMP$3323$6 != 76ull ) goto label$6633;
      label$6634:;
      {
       FBSTRING* vr$9458 = fb_StrAllocTempDescZEx( (uint8*)"run", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9458, 0 );
      }
      goto label$6482;
      label$6633:;
      if( TMP$3323$6 != 77ull ) goto label$6635;
      label$6636:;
      {
       FBSTRING* vr$9459 = fb_StrAllocTempDescZEx( (uint8*)"s", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$9459, 0 );
      }
      goto label$6482;
      label$6635:;
      if( TMP$3323$6 != 78ull ) goto label$6637;
      label$6638:;
      {
       FBSTRING* vr$9460 = fb_StrAllocTempDescZEx( (uint8*)"safecall", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9460, 0 );
      }
      goto label$6482;
      label$6637:;
      if( TMP$3323$6 != 79ull ) goto label$6639;
      label$6640:;
      {
       FBSTRING* vr$9461 = fb_StrAllocTempDescZEx( (uint8*)"same", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9461, 0 );
      }
      goto label$6482;
      label$6639:;
      if( TMP$3323$6 != 80ull ) goto label$6641;
      label$6642:;
      {
       FBSTRING* vr$9462 = fb_StrAllocTempDescZEx( (uint8*)"same_source", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$9462, 0 );
      }
      goto label$6482;
      label$6641:;
      if( TMP$3323$6 != 81ull ) goto label$6643;
      label$6644:;
      {
       FBSTRING* vr$9463 = fb_StrAllocTempDescZEx( (uint8*)"sampler1D", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9463, 0 );
      }
      goto label$6482;
      label$6643:;
      if( TMP$3323$6 != 82ull ) goto label$6645;
      label$6646:;
      {
       FBSTRING* vr$9464 = fb_StrAllocTempDescZEx( (uint8*)"sampler1DArray", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$9464, 0 );
      }
      goto label$6482;
      label$6645:;
      if( TMP$3323$6 != 83ull ) goto label$6647;
      label$6648:;
      {
       FBSTRING* vr$9465 = fb_StrAllocTempDescZEx( (uint8*)"sampler1DArrayShadow", 20ll );
       fb_PrintString( 1, (FBSTRING*)vr$9465, 0 );
      }
      goto label$6482;
      label$6647:;
      if( TMP$3323$6 != 84ull ) goto label$6649;
      label$6650:;
      {
       FBSTRING* vr$9466 = fb_StrAllocTempDescZEx( (uint8*)"sampler1DShadow", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$9466, 0 );
      }
      goto label$6482;
      label$6649:;
      if( TMP$3323$6 != 95ull ) goto label$6651;
      label$6652:;
      {
       FBSTRING* vr$9467 = fb_StrAllocTempDescZEx( (uint8*)"sampler2D", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9467, 0 );
      }
      goto label$6482;
      label$6651:;
      if( TMP$3323$6 != 86ull ) goto label$6653;
      label$6654:;
      {
       FBSTRING* vr$9468 = fb_StrAllocTempDescZEx( (uint8*)"sampler2DArray", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$9468, 0 );
      }
      goto label$6482;
      label$6653:;
      if( TMP$3323$6 != 87ull ) goto label$6655;
      label$6656:;
      {
       FBSTRING* vr$9469 = fb_StrAllocTempDescZEx( (uint8*)"sampler2DArrayShadow", 20ll );
       fb_PrintString( 1, (FBSTRING*)vr$9469, 0 );
      }
      goto label$6482;
      label$6655:;
      if( TMP$3323$6 != 88ull ) goto label$6657;
      label$6658:;
      {
       FBSTRING* vr$9470 = fb_StrAllocTempDescZEx( (uint8*)"sampler2DRect", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$9470, 0 );
      }
      goto label$6482;
      label$6657:;
      if( TMP$3323$6 != 89ull ) goto label$6659;
      label$6660:;
      {
       FBSTRING* vr$9471 = fb_StrAllocTempDescZEx( (uint8*)"sampler2DRectShadow", 19ll );
       fb_PrintString( 1, (FBSTRING*)vr$9471, 0 );
      }
      goto label$6482;
      label$6659:;
      if( TMP$3323$6 != 90ull ) goto label$6661;
      label$6662:;
      {
       FBSTRING* vr$9472 = fb_StrAllocTempDescZEx( (uint8*)"sampler2DShadow", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$9472, 0 );
      }
      goto label$6482;
      label$6661:;
      if( TMP$3323$6 != 91ull ) goto label$6663;
      label$6664:;
      {
       FBSTRING* vr$9473 = fb_StrAllocTempDescZEx( (uint8*)"sampler3D", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9473, 0 );
      }
      goto label$6482;
      label$6663:;
      if( TMP$3323$6 != 92ull ) goto label$6665;
      label$6666:;
      {
       FBSTRING* vr$9474 = fb_StrAllocTempDescZEx( (uint8*)"sampler3DRect", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$9474, 0 );
      }
      goto label$6482;
      label$6665:;
      if( TMP$3323$6 != 93ull ) goto label$6667;
      label$6668:;
      {
       FBSTRING* vr$9475 = fb_StrAllocTempDescZEx( (uint8*)"samplerBuffer", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$9475, 0 );
      }
      goto label$6482;
      label$6667:;
      if( TMP$3323$6 != 94ull ) goto label$6669;
      label$6670:;
      {
       FBSTRING* vr$9476 = fb_StrAllocTempDescZEx( (uint8*)"samplerCube", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$9476, 0 );
      }
      goto label$6482;
      label$6669:;
      if( TMP$3323$6 != 95ull ) goto label$6671;
      label$6672:;
      {
       FBSTRING* vr$9477 = fb_StrAllocTempDescZEx( (uint8*)"samplerCubeShadow", 17ll );
       fb_PrintString( 1, (FBSTRING*)vr$9477, 0 );
      }
      goto label$6482;
      label$6671:;
      if( TMP$3323$6 != 96ull ) goto label$6673;
      label$6674:;
      {
       FBSTRING* vr$9478 = fb_StrAllocTempDescZEx( (uint8*)"samples", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9478, 0 );
      }
      goto label$6482;
      label$6673:;
      if( TMP$3323$6 != 97ull ) goto label$6675;
      label$6676:;
      {
       FBSTRING* vr$9479 = fb_StrAllocTempDescZEx( (uint8*)"save", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9479, 0 );
      }
      goto label$6482;
      label$6675:;
      if( TMP$3323$6 != 98ull ) goto label$6677;
      label$6678:;
      {
       FBSTRING* vr$9480 = fb_StrAllocTempDescZEx( (uint8*)"save_file", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9480, 0 );
      }
      goto label$6482;
      label$6677:;
      if( TMP$3323$6 != 99ull ) goto label$6679;
      label$6680:;
      {
       FBSTRING* vr$9481 = fb_StrAllocTempDescZEx( (uint8*)"scale", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9481, 0 );
      }
      goto label$6482;
      label$6679:;
      if( TMP$3323$6 != 100ull ) goto label$6681;
      label$6682:;
      {
       FBSTRING* vr$9482 = fb_StrAllocTempDescZEx( (uint8*)"scallop_wave", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$9482, 0 );
      }
      goto label$6482;
      label$6681:;
      if( TMP$3323$6 != 101ull ) goto label$6683;
      label$6684:;
      {
       FBSTRING* vr$9483 = fb_StrAllocTempDescZEx( (uint8*)"scattering", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9483, 0 );
      }
      goto label$6482;
      label$6683:;
      if( TMP$3323$6 != 102ull ) goto label$6685;
      label$6686:;
      {
       FBSTRING* vr$9484 = fb_StrAllocTempDescZEx( (uint8*)"screen", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9484, 0 );
      }
      goto label$6482;
      label$6685:;
      if( TMP$3323$6 != 103ull ) goto label$6687;
      label$6688:;
      {
       FBSTRING* vr$9485 = fb_StrAllocTempDescZEx( (uint8*)"sd", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$9485, 0 );
      }
      goto label$6482;
      label$6687:;
      if( TMP$3323$6 != 104ull ) goto label$6689;
      label$6690:;
      {
       FBSTRING* vr$9486 = fb_StrAllocTempDescZEx( (uint8*)"search", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9486, 0 );
      }
      goto label$6482;
      label$6689:;
      if( TMP$3323$6 != 105ull ) goto label$6691;
      label$6692:;
      {
       FBSTRING* vr$9487 = fb_StrAllocTempDescZEx( (uint8*)"second", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9487, 0 );
      }
      goto label$6482;
      label$6691:;
      if( TMP$3323$6 != 106ull ) goto label$6693;
      label$6694:;
      {
       FBSTRING* vr$9488 = fb_StrAllocTempDescZEx( (uint8*)"section", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9488, 0 );
      }
      goto label$6482;
      label$6693:;
      if( TMP$3323$6 != 107ull ) goto label$6695;
      label$6696:;
      {
       FBSTRING* vr$9489 = fb_StrAllocTempDescZEx( (uint8*)"security", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9489, 0 );
      }
      goto label$6482;
      label$6695:;
      if( TMP$3323$6 != 108ull ) goto label$6697;
      label$6698:;
      {
       FBSTRING* vr$9490 = fb_StrAllocTempDescZEx( (uint8*)"seed", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9490, 0 );
      }
      goto label$6482;
      label$6697:;
      if( TMP$3323$6 != 109ull ) goto label$6699;
      label$6700:;
      {
       FBSTRING* vr$9491 = fb_StrAllocTempDescZEx( (uint8*)"segment", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9491, 0 );
      }
      goto label$6482;
      label$6699:;
      if( TMP$3323$6 != 110ull ) goto label$6701;
      label$6702:;
      {
       FBSTRING* vr$9492 = fb_StrAllocTempDescZEx( (uint8*)"segment-limit", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$9492, 0 );
      }
      goto label$6482;
      label$6701:;
      if( TMP$3323$6 != 111ull ) goto label$6703;
      label$6704:;
      {
       FBSTRING* vr$9493 = fb_StrAllocTempDescZEx( (uint8*)"section", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9493, 0 );
      }
      goto label$6482;
      label$6703:;
      if( TMP$3323$6 != 112ull ) goto label$6705;
      label$6706:;
      {
       FBSTRING* vr$9494 = fb_StrAllocTempDescZEx( (uint8*)"select", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9494, 0 );
      }
      goto label$6482;
      label$6705:;
      if( TMP$3323$6 != 113ull ) goto label$6707;
      label$6708:;
      {
       FBSTRING* vr$9495 = fb_StrAllocTempDescZEx( (uint8*)"selector", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9495, 0 );
      }
      goto label$6482;
      label$6707:;
      if( TMP$3323$6 != 114ull ) goto label$6709;
      label$6710:;
      {
       FBSTRING* vr$9496 = fb_StrAllocTempDescZEx( (uint8*)"selection", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9496, 0 );
      }
      goto label$6482;
      label$6709:;
      if( TMP$3323$6 != 115ull ) goto label$6711;
      label$6712:;
      {
       FBSTRING* vr$9497 = fb_StrAllocTempDescZEx( (uint8*)"self", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9497, 0 );
      }
      goto label$6482;
      label$6711:;
      if( TMP$3323$6 != 116ull ) goto label$6713;
      label$6714:;
      {
       FBSTRING* vr$9498 = fb_StrAllocTempDescZEx( (uint8*)"send", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9498, 0 );
      }
      goto label$6482;
      label$6713:;
      if( TMP$3323$6 != 117ull ) goto label$6715;
      label$6716:;
      {
       FBSTRING* vr$9499 = fb_StrAllocTempDescZEx( (uint8*)"sentence", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9499, 0 );
      }
      goto label$6482;
      label$6715:;
      if( TMP$3323$6 != 118ull ) goto label$6717;
      label$6718:;
      {
       FBSTRING* vr$9500 = fb_StrAllocTempDescZEx( (uint8*)"separate", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9500, 0 );
      }
      goto label$6482;
      label$6717:;
      if( TMP$3323$6 != 119ull ) goto label$6719;
      label$6720:;
      {
       FBSTRING* vr$9501 = fb_StrAllocTempDescZEx( (uint8*)"sequence", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9501, 0 );
      }
      goto label$6482;
      label$6719:;
      if( TMP$3323$6 != 120ull ) goto label$6721;
      label$6722:;
      {
       FBSTRING* vr$9502 = fb_StrAllocTempDescZEx( (uint8*)"sequential", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9502, 0 );
      }
      goto label$6482;
      label$6721:;
      if( TMP$3323$6 != 121ull ) goto label$6723;
      label$6724:;
      {
       FBSTRING* vr$9503 = fb_StrAllocTempDescZEx( (uint8*)"sequentially", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$9503, 0 );
      }
      goto label$6482;
      label$6723:;
      if( TMP$3323$6 != 122ull ) goto label$6725;
      label$6726:;
      {
       FBSTRING* vr$9504 = fb_StrAllocTempDescZEx( (uint8*)"service", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9504, 0 );
      }
      goto label$6482;
      label$6725:;
      if( TMP$3323$6 != 123ull ) goto label$6727;
      label$6728:;
      {
       FBSTRING* vr$9505 = fb_StrAllocTempDescZEx( (uint8*)"set", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9505, 0 );
      }
      goto label$6482;
      label$6727:;
      if( TMP$3323$6 != 124ull ) goto label$6729;
      label$6730:;
      {
       FBSTRING* vr$9506 = fb_StrAllocTempDescZEx( (uint8*)"sgn", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9506, 0 );
      }
      goto label$6482;
      label$6729:;
      if( TMP$3323$6 != 125ull ) goto label$6731;
      label$6732:;
      {
       FBSTRING* vr$9507 = fb_StrAllocTempDescZEx( (uint8*)"shadowless", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9507, 0 );
      }
      goto label$6482;
      label$6731:;
      if( TMP$3323$6 != 126ull ) goto label$6733;
      label$6734:;
      {
       FBSTRING* vr$9508 = fb_StrAllocTempDescZEx( (uint8*)"shell", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9508, 0 );
      }
      goto label$6482;
      label$6733:;
      if( TMP$3323$6 != 127ull ) goto label$6735;
      label$6736:;
      {
       FBSTRING* vr$9509 = fb_StrAllocTempDescZEx( (uint8*)"shift-in", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9509, 0 );
      }
      goto label$6482;
      label$6735:;
      if( TMP$3323$6 != 128ull ) goto label$6737;
      label$6738:;
      {
       FBSTRING* vr$9510 = fb_StrAllocTempDescZEx( (uint8*)"shift-out", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9510, 0 );
      }
      goto label$6482;
      label$6737:;
      if( TMP$3323$6 != 129ull ) goto label$6739;
      label$6740:;
      {
       FBSTRING* vr$9511 = fb_StrAllocTempDescZEx( (uint8*)"shl", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9511, 0 );
      }
      goto label$6482;
      label$6739:;
      if( TMP$3323$6 != 130ull ) goto label$6741;
      label$6742:;
      {
       FBSTRING* vr$9512 = fb_StrAllocTempDescZEx( (uint8*)"short", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9512, 0 );
      }
      goto label$6482;
      label$6741:;
      if( TMP$3323$6 != 131ull ) goto label$6743;
      label$6744:;
      {
       FBSTRING* vr$9513 = fb_StrAllocTempDescZEx( (uint8*)"shr", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9513, 0 );
      }
      goto label$6482;
      label$6743:;
      if( TMP$3323$6 != 132ull ) goto label$6745;
      label$6746:;
      {
       FBSTRING* vr$9514 = fb_StrAllocTempDescZEx( (uint8*)"sign", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9514, 0 );
      }
      goto label$6482;
      label$6745:;
      if( TMP$3323$6 != 133ull ) goto label$6747;
      label$6748:;
      {
       FBSTRING* vr$9515 = fb_StrAllocTempDescZEx( (uint8*)"simple_nested_loop", 18ll );
       fb_PrintString( 1, (FBSTRING*)vr$9515, 0 );
      }
      goto label$6482;
      label$6747:;
      if( TMP$3323$6 != 134ull ) goto label$6749;
      label$6750:;
      {
       FBSTRING* vr$9516 = fb_StrAllocTempDescZEx( (uint8*)"sin", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9516, 0 );
      }
      goto label$6482;
      label$6749:;
      if( TMP$3323$6 != 135ull ) goto label$6751;
      label$6752:;
      {
       FBSTRING* vr$9517 = fb_StrAllocTempDescZEx( (uint8*)"sine_wave", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9517, 0 );
      }
      goto label$6482;
      label$6751:;
      if( TMP$3323$6 != 136ull ) goto label$6753;
      label$6754:;
      {
       FBSTRING* vr$9518 = fb_StrAllocTempDescZEx( (uint8*)"sinh", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9518, 0 );
      }
      goto label$6482;
      label$6753:;
      if( TMP$3323$6 != 137ull ) goto label$6755;
      label$6756:;
      {
       FBSTRING* vr$9519 = fb_StrAllocTempDescZEx( (uint8*)"size", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9519, 0 );
      }
      goto label$6482;
      label$6755:;
      if( TMP$3323$6 != 138ull ) goto label$6757;
      label$6758:;
      {
       FBSTRING* vr$9520 = fb_StrAllocTempDescZEx( (uint8*)"sizeof", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9520, 0 );
      }
      goto label$6482;
      label$6757:;
      if( TMP$3323$6 != 139ull ) goto label$6759;
      label$6760:;
      {
       FBSTRING* vr$9521 = fb_StrAllocTempDescZEx( (uint8*)"skip1", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9521, 0 );
      }
      goto label$6482;
      label$6759:;
      if( TMP$3323$6 != 140ull ) goto label$6761;
      label$6762:;
      {
       FBSTRING* vr$9522 = fb_StrAllocTempDescZEx( (uint8*)"skip2", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9522, 0 );
      }
      goto label$6482;
      label$6761:;
      if( TMP$3323$6 != 141ull ) goto label$6763;
      label$6764:;
      {
       FBSTRING* vr$9523 = fb_StrAllocTempDescZEx( (uint8*)"skip3", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9523, 0 );
      }
      goto label$6482;
      label$6763:;
      if( TMP$3323$6 != 142ull ) goto label$6765;
      label$6766:;
      {
       FBSTRING* vr$9524 = fb_StrAllocTempDescZEx( (uint8*)"sky", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9524, 0 );
      }
      goto label$6482;
      label$6765:;
      if( TMP$3323$6 != 143ull ) goto label$6767;
      label$6768:;
      {
       FBSTRING* vr$9525 = fb_StrAllocTempDescZEx( (uint8*)"sky_sphere", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9525, 0 );
      }
      goto label$6482;
      label$6767:;
      if( TMP$3323$6 != 144ull ) goto label$6769;
      label$6770:;
      {
       FBSTRING* vr$9526 = fb_StrAllocTempDescZEx( (uint8*)"slice", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9526, 0 );
      }
      goto label$6482;
      label$6769:;
      if( TMP$3323$6 != 145ull ) goto label$6771;
      label$6772:;
      {
       FBSTRING* vr$9527 = fb_StrAllocTempDescZEx( (uint8*)"slope", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9527, 0 );
      }
      goto label$6482;
      label$6771:;
      if( TMP$3323$6 != 146ull ) goto label$6773;
      label$6774:;
      {
       FBSTRING* vr$9528 = fb_StrAllocTempDescZEx( (uint8*)"slope_map", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9528, 0 );
      }
      goto label$6482;
      label$6773:;
      if( TMP$3323$6 != 147ull ) goto label$6775;
      label$6776:;
      {
       FBSTRING* vr$9529 = fb_StrAllocTempDescZEx( (uint8*)"smallint", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9529, 0 );
      }
      goto label$6482;
      label$6775:;
      if( TMP$3323$6 != 148ull ) goto label$6777;
      label$6778:;
      {
       FBSTRING* vr$9530 = fb_StrAllocTempDescZEx( (uint8*)"smooth", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9530, 0 );
      }
      goto label$6482;
      label$6777:;
      if( TMP$3323$6 != 149ull ) goto label$6779;
      label$6780:;
      {
       FBSTRING* vr$9531 = fb_StrAllocTempDescZEx( (uint8*)"smooth_linearstep", 17ll );
       fb_PrintString( 1, (FBSTRING*)vr$9531, 0 );
      }
      goto label$6482;
      label$6779:;
      if( TMP$3323$6 != 150ull ) goto label$6781;
      label$6782:;
      {
       FBSTRING* vr$9532 = fb_StrAllocTempDescZEx( (uint8*)"smoothstep", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9532, 0 );
      }
      goto label$6482;
      label$6781:;
      if( TMP$3323$6 != 151ull ) goto label$6783;
      label$6784:;
      {
       FBSTRING* vr$9533 = fb_StrAllocTempDescZEx( (uint8*)"smooth_triangle", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$9533, 0 );
      }
      goto label$6482;
      label$6783:;
      if( TMP$3323$6 != 152ull ) goto label$6785;
      label$6786:;
      {
       FBSTRING* vr$9534 = fb_StrAllocTempDescZEx( (uint8*)"snoise", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9534, 0 );
      }
      goto label$6482;
      label$6785:;
      if( TMP$3323$6 != 153ull ) goto label$6787;
      label$6788:;
      {
       FBSTRING* vr$9535 = fb_StrAllocTempDescZEx( (uint8*)"softfloat", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9535, 0 );
      }
      goto label$6482;
      label$6787:;
      if( TMP$3323$6 != 154ull ) goto label$6789;
      label$6790:;
      {
       FBSTRING* vr$9536 = fb_StrAllocTempDescZEx( (uint8*)"solid", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9536, 0 );
      }
      goto label$6482;
      label$6789:;
      if( TMP$3323$6 != 155ull ) goto label$6791;
      label$6792:;
      {
       FBSTRING* vr$9537 = fb_StrAllocTempDescZEx( (uint8*)"sor", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9537, 0 );
      }
      goto label$6482;
      label$6791:;
      if( TMP$3323$6 != 156ull ) goto label$6793;
      label$6794:;
      {
       FBSTRING* vr$9538 = fb_StrAllocTempDescZEx( (uint8*)"sort", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9538, 0 );
      }
      goto label$6482;
      label$6793:;
      if( TMP$3323$6 != 157ull ) goto label$6795;
      label$6796:;
      {
       FBSTRING* vr$9539 = fb_StrAllocTempDescZEx( (uint8*)"sort-control", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$9539, 0 );
      }
      goto label$6482;
      label$6795:;
      if( TMP$3323$6 != 158ull ) goto label$6797;
      label$6798:;
      {
       FBSTRING* vr$9540 = fb_StrAllocTempDescZEx( (uint8*)"sort-core-size", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$9540, 0 );
      }
      goto label$6482;
      label$6797:;
      if( TMP$3323$6 != 159ull ) goto label$6799;
      label$6800:;
      {
       FBSTRING* vr$9541 = fb_StrAllocTempDescZEx( (uint8*)"sort-file-size", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$9541, 0 );
      }
      goto label$6482;
      label$6799:;
      if( TMP$3323$6 != 160ull ) goto label$6801;
      label$6802:;
      {
       FBSTRING* vr$9542 = fb_StrAllocTempDescZEx( (uint8*)"sort-merge", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9542, 0 );
      }
      goto label$6482;
      label$6801:;
      if( TMP$3323$6 != 161ull ) goto label$6803;
      label$6804:;
      {
       FBSTRING* vr$9543 = fb_StrAllocTempDescZEx( (uint8*)"sort-message", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$9543, 0 );
      }
      goto label$6482;
      label$6803:;
      if( TMP$3323$6 != 162ull ) goto label$6805;
      label$6806:;
      {
       FBSTRING* vr$9544 = fb_StrAllocTempDescZEx( (uint8*)"sort-mode-size", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$9544, 0 );
      }
      goto label$6482;
      label$6805:;
      if( TMP$3323$6 != 163ull ) goto label$6807;
      label$6808:;
      {
       FBSTRING* vr$9545 = fb_StrAllocTempDescZEx( (uint8*)"sort-return", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$9545, 0 );
      }
      goto label$6482;
      label$6807:;
      if( TMP$3323$6 != 164ull ) goto label$6809;
      label$6810:;
      {
       FBSTRING* vr$9546 = fb_StrAllocTempDescZEx( (uint8*)"sound", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9546, 0 );
      }
      goto label$6482;
      label$6809:;
      if( TMP$3323$6 != 165ull ) goto label$6811;
      label$6812:;
      {
       FBSTRING* vr$9547 = fb_StrAllocTempDescZEx( (uint8*)"source", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9547, 0 );
      }
      goto label$6482;
      label$6811:;
      if( TMP$3323$6 != 166ull ) goto label$6813;
      label$6814:;
      {
       FBSTRING* vr$9548 = fb_StrAllocTempDescZEx( (uint8*)"source-computer", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$9548, 0 );
      }
      goto label$6482;
      label$6813:;
      if( TMP$3323$6 != 167ull ) goto label$6815;
      label$6816:;
      {
       FBSTRING* vr$9549 = fb_StrAllocTempDescZEx( (uint8*)"space", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9549, 0 );
      }
      goto label$6482;
      label$6815:;
      if( TMP$3323$6 != 169ull ) goto label$6817;
      label$6818:;
      {
       FBSTRING* vr$9550 = fb_StrAllocTempDescZEx( (uint8*)"spaces", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9550, 0 );
      }
      goto label$6482;
      label$6817:;
      if( TMP$3323$6 != 170ull ) goto label$6819;
      label$6820:;
      {
       FBSTRING* vr$9551 = fb_StrAllocTempDescZEx( (uint8*)"spacing", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9551, 0 );
      }
      goto label$6482;
      label$6819:;
      if( TMP$3323$6 != 171ull ) goto label$6821;
      label$6822:;
      {
       FBSTRING* vr$9552 = fb_StrAllocTempDescZEx( (uint8*)"spc", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9552, 0 );
      }
      goto label$6482;
      label$6821:;
      if( TMP$3323$6 != 172ull ) goto label$6823;
      label$6824:;
      {
       FBSTRING* vr$9553 = fb_StrAllocTempDescZEx( (uint8*)"specialize", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9553, 0 );
      }
      goto label$6482;
      label$6823:;
      if( TMP$3323$6 != 173ull ) goto label$6825;
      label$6826:;
      {
       FBSTRING* vr$9554 = fb_StrAllocTempDescZEx( (uint8*)"special-names", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$9554, 0 );
      }
      goto label$6482;
      label$6825:;
      if( TMP$3323$6 != 174ull ) goto label$6827;
      label$6828:;
      {
       FBSTRING* vr$9555 = fb_StrAllocTempDescZEx( (uint8*)"specular", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9555, 0 );
      }
      goto label$6482;
      label$6827:;
      if( TMP$3323$6 != 175ull ) goto label$6829;
      label$6830:;
      {
       FBSTRING* vr$9556 = fb_StrAllocTempDescZEx( (uint8*)"sphere", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9556, 0 );
      }
      goto label$6482;
      label$6829:;
      if( TMP$3323$6 != 176ull ) goto label$6831;
      label$6832:;
      {
       FBSTRING* vr$9557 = fb_StrAllocTempDescZEx( (uint8*)"sphere_sweep", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$9557, 0 );
      }
      goto label$6482;
      label$6831:;
      if( TMP$3323$6 != 177ull ) goto label$6833;
      label$6834:;
      {
       FBSTRING* vr$9558 = fb_StrAllocTempDescZEx( (uint8*)"spherical", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9558, 0 );
      }
      goto label$6482;
      label$6833:;
      if( TMP$3323$6 != 178ull ) goto label$6835;
      label$6836:;
      {
       FBSTRING* vr$9559 = fb_StrAllocTempDescZEx( (uint8*)"spiral1", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9559, 0 );
      }
      goto label$6482;
      label$6835:;
      if( TMP$3323$6 != 179ull ) goto label$6837;
      label$6838:;
      {
       FBSTRING* vr$9560 = fb_StrAllocTempDescZEx( (uint8*)"spiral2", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9560, 0 );
      }
      goto label$6482;
      label$6837:;
      if( TMP$3323$6 != 180ull ) goto label$6839;
      label$6840:;
      {
       FBSTRING* vr$9561 = fb_StrAllocTempDescZEx( (uint8*)"spline", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9561, 0 );
      }
      goto label$6482;
      label$6839:;
      if( TMP$3323$6 != 181ull ) goto label$6841;
      label$6842:;
      {
       FBSTRING* vr$9562 = fb_StrAllocTempDescZEx( (uint8*)"splineinverse", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$9562, 0 );
      }
      goto label$6482;
      label$6841:;
      if( TMP$3323$6 != 182ull ) goto label$6843;
      label$6844:;
      {
       FBSTRING* vr$9563 = fb_StrAllocTempDescZEx( (uint8*)"split", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9563, 0 );
      }
      goto label$6482;
      label$6843:;
      if( TMP$3323$6 != 183ull ) goto label$6845;
      label$6846:;
      {
       FBSTRING* vr$9564 = fb_StrAllocTempDescZEx( (uint8*)"split_union", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$9564, 0 );
      }
      goto label$6482;
      label$6845:;
      if( TMP$3323$6 != 184ull ) goto label$6847;
      label$6848:;
      {
       FBSTRING* vr$9565 = fb_StrAllocTempDescZEx( (uint8*)"spotlight", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9565, 0 );
      }
      goto label$6482;
      label$6847:;
      if( TMP$3323$6 != 185ull ) goto label$6849;
      label$6850:;
      {
       FBSTRING* vr$9566 = fb_StrAllocTempDescZEx( (uint8*)"spotted", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9566, 0 );
      }
      goto label$6482;
      label$6849:;
      if( TMP$3323$6 != 186ull ) goto label$6851;
      label$6852:;
      {
       FBSTRING* vr$9567 = fb_StrAllocTempDescZEx( (uint8*)"sqr", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9567, 0 );
      }
      goto label$6482;
      label$6851:;
      if( TMP$3323$6 != 187ull ) goto label$6853;
      label$6854:;
      {
       FBSTRING* vr$9568 = fb_StrAllocTempDescZEx( (uint8*)"sqrt", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9568, 0 );
      }
      goto label$6482;
      label$6853:;
      if( TMP$3323$6 != 188ull ) goto label$6855;
      label$6856:;
      {
       FBSTRING* vr$9569 = fb_StrAllocTempDescZEx( (uint8*)"standard", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9569, 0 );
      }
      goto label$6482;
      label$6855:;
      if( TMP$3323$6 != 189ull ) goto label$6857;
      label$6858:;
      {
       FBSTRING* vr$9570 = fb_StrAllocTempDescZEx( (uint8*)"standard-1", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9570, 0 );
      }
      goto label$6482;
      label$6857:;
      if( TMP$3323$6 != 190ull ) goto label$6859;
      label$6860:;
      {
       FBSTRING* vr$9571 = fb_StrAllocTempDescZEx( (uint8*)"standard-2", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9571, 0 );
      }
      goto label$6482;
      label$6859:;
      if( TMP$3323$6 != 191ull ) goto label$6861;
      label$6862:;
      {
       FBSTRING* vr$9572 = fb_StrAllocTempDescZEx( (uint8*)"start", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9572, 0 );
      }
      goto label$6482;
      label$6861:;
      if( TMP$3323$6 != 192ull ) goto label$6863;
      label$6864:;
      {
       FBSTRING* vr$9573 = fb_StrAllocTempDescZEx( (uint8*)"startswith", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9573, 0 );
      }
      goto label$6482;
      label$6863:;
      if( TMP$3323$6 != 193ull ) goto label$6865;
      label$6866:;
      {
       FBSTRING* vr$9574 = fb_StrAllocTempDescZEx( (uint8*)"static", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9574, 0 );
      }
      goto label$6482;
      label$6865:;
      if( TMP$3323$6 != 194ull ) goto label$6867;
      label$6868:;
      {
       FBSTRING* vr$9575 = fb_StrAllocTempDescZEx( (uint8*)"statistics", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9575, 0 );
      }
      goto label$6482;
      label$6867:;
      if( TMP$3323$6 != 195ull ) goto label$6869;
      label$6870:;
      {
       FBSTRING* vr$9576 = fb_StrAllocTempDescZEx( (uint8*)"status", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9576, 0 );
      }
      goto label$6482;
      label$6869:;
      if( TMP$3323$6 != 196ull ) goto label$6871;
      label$6872:;
      {
       FBSTRING* vr$9577 = fb_StrAllocTempDescZEx( (uint8*)"stdcall", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9577, 0 );
      }
      goto label$6482;
      label$6871:;
      if( TMP$3323$6 != 197ull ) goto label$6873;
      label$6874:;
      {
       FBSTRING* vr$9578 = fb_StrAllocTempDescZEx( (uint8*)"stdout", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9578, 0 );
      }
      goto label$6482;
      label$6873:;
      if( TMP$3323$6 != 198ull ) goto label$6875;
      label$6876:;
      {
       FBSTRING* vr$9579 = fb_StrAllocTempDescZEx( (uint8*)"step", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9579, 0 );
      }
      goto label$6482;
      label$6875:;
      if( TMP$3323$6 != 199ull ) goto label$6877;
      label$6878:;
      {
       FBSTRING* vr$9580 = fb_StrAllocTempDescZEx( (uint8*)"stick", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9580, 0 );
      }
      goto label$6482;
      label$6877:;
      if( TMP$3323$6 != 200ull ) goto label$6879;
      label$6880:;
      {
       FBSTRING* vr$9581 = fb_StrAllocTempDescZEx( (uint8*)"stof", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9581, 0 );
      }
      goto label$6482;
      label$6879:;
      if( TMP$3323$6 != 201ull ) goto label$6881;
      label$6882:;
      {
       FBSTRING* vr$9582 = fb_StrAllocTempDescZEx( (uint8*)"stoi", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9582, 0 );
      }
      goto label$6482;
      label$6881:;
      if( TMP$3323$6 != 202ull ) goto label$6883;
      label$6884:;
      {
       FBSTRING* vr$9583 = fb_StrAllocTempDescZEx( (uint8*)"stop", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9583, 0 );
      }
      goto label$6482;
      label$6883:;
      if( TMP$3323$6 != 203ull ) goto label$6885;
      label$6886:;
      {
       FBSTRING* vr$9584 = fb_StrAllocTempDescZEx( (uint8*)"str", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9584, 0 );
      }
      goto label$6482;
      label$6885:;
      if( TMP$3323$6 != 205ull ) goto label$6887;
      label$6888:;
      {
       FBSTRING* vr$9585 = fb_StrAllocTempDescZEx( (uint8*)"strcmp", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9585, 0 );
      }
      goto label$6482;
      label$6887:;
      if( TMP$3323$6 != 206ull ) goto label$6889;
      label$6890:;
      {
       FBSTRING* vr$9586 = fb_StrAllocTempDescZEx( (uint8*)"strength", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9586, 0 );
      }
      goto label$6482;
      label$6889:;
      if( TMP$3323$6 != 207ull ) goto label$6891;
      label$6892:;
      {
       FBSTRING* vr$9587 = fb_StrAllocTempDescZEx( (uint8*)"strig", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9587, 0 );
      }
      goto label$6482;
      label$6891:;
      if( TMP$3323$6 != 208ull ) goto label$6893;
      label$6894:;
      {
       FBSTRING* vr$9588 = fb_StrAllocTempDescZEx( (uint8*)"string", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9588, 0 );
      }
      goto label$6482;
      label$6893:;
      if( TMP$3323$6 != 209ull ) goto label$6895;
      label$6896:;
      {
       FBSTRING* vr$9589 = fb_StrAllocTempDescZEx( (uint8*)"strptr", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9589, 0 );
      }
      goto label$6482;
      label$6895:;
      if( TMP$3323$6 != 210ull ) goto label$6897;
      label$6898:;
      {
       FBSTRING* vr$9590 = fb_StrAllocTempDescZEx( (uint8*)"strlen", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9590, 0 );
      }
      goto label$6482;
      label$6897:;
      if( TMP$3323$6 != 211ull ) goto label$6899;
      label$6900:;
      {
       FBSTRING* vr$9591 = fb_StrAllocTempDescZEx( (uint8*)"strlwr", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9591, 0 );
      }
      goto label$6482;
      label$6899:;
      if( TMP$3323$6 != 212ull ) goto label$6901;
      label$6902:;
      {
       FBSTRING* vr$9592 = fb_StrAllocTempDescZEx( (uint8*)"structure", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9592, 0 );
      }
      goto label$6482;
      label$6901:;
      if( TMP$3323$6 != 213ull ) goto label$6903;
      label$6904:;
      {
       FBSTRING* vr$9593 = fb_StrAllocTempDescZEx( (uint8*)"strupr", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9593, 0 );
      }
      goto label$6482;
      label$6903:;
      if( TMP$3323$6 != 214ull ) goto label$6905;
      label$6906:;
      {
       FBSTRING* vr$9594 = fb_StrAllocTempDescZEx( (uint8*)"sturm", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9594, 0 );
      }
      goto label$6482;
      label$6905:;
      if( TMP$3323$6 != 215ull ) goto label$6907;
      label$6908:;
      {
       FBSTRING* vr$9595 = fb_StrAllocTempDescZEx( (uint8*)"subarray", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9595, 0 );
      }
      goto label$6482;
      label$6907:;
      if( TMP$3323$6 != 216ull ) goto label$6909;
      label$6910:;
      {
       FBSTRING* vr$9596 = fb_StrAllocTempDescZEx( (uint8*)"sub-queue-1", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$9596, 0 );
      }
      goto label$6482;
      label$6909:;
      if( TMP$3323$6 != 217ull ) goto label$6911;
      label$6912:;
      {
       FBSTRING* vr$9597 = fb_StrAllocTempDescZEx( (uint8*)"sub-queue-2", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$9597, 0 );
      }
      goto label$6482;
      label$6911:;
      if( TMP$3323$6 != 218ull ) goto label$6913;
      label$6914:;
      {
       FBSTRING* vr$9598 = fb_StrAllocTempDescZEx( (uint8*)"sub-queue-3", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$9598, 0 );
      }
      goto label$6482;
      label$6913:;
      if( TMP$3323$6 != 219ull ) goto label$6915;
      label$6916:;
      {
       FBSTRING* vr$9599 = fb_StrAllocTempDescZEx( (uint8*)"subroutine", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9599, 0 );
      }
      goto label$6482;
      label$6915:;
      if( TMP$3323$6 != 220ull ) goto label$6917;
      label$6918:;
      {
       FBSTRING* vr$9600 = fb_StrAllocTempDescZEx( (uint8*)"substr", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9600, 0 );
      }
      goto label$6482;
      label$6917:;
      if( TMP$3323$6 != 221ull ) goto label$6919;
      label$6920:;
      {
       FBSTRING* vr$9601 = fb_StrAllocTempDescZEx( (uint8*)"substring", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9601, 0 );
      }
      goto label$6482;
      label$6919:;
      if( TMP$3323$6 != 222ull ) goto label$6921;
      label$6922:;
      {
       FBSTRING* vr$9602 = fb_StrAllocTempDescZEx( (uint8*)"substring_mb", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$9602, 0 );
      }
      goto label$6482;
      label$6921:;
      if( TMP$3323$6 != 223ull ) goto label$6923;
      label$6924:;
      {
       FBSTRING* vr$9603 = fb_StrAllocTempDescZEx( (uint8*)"subtract", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9603, 0 );
      }
      goto label$6482;
      label$6923:;
      if( TMP$3323$6 != 224ull ) goto label$6925;
      label$6926:;
      {
       FBSTRING* vr$9604 = fb_StrAllocTempDescZEx( (uint8*)"sum", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9604, 0 );
      }
      goto label$6482;
      label$6925:;
      if( TMP$3323$6 != 225ull ) goto label$6927;
      label$6928:;
      {
       FBSTRING* vr$9605 = fb_StrAllocTempDescZEx( (uint8*)"super", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9605, 0 );
      }
      goto label$6482;
      label$6927:;
      if( TMP$3323$6 != 226ull ) goto label$6929;
      label$6930:;
      {
       FBSTRING* vr$9606 = fb_StrAllocTempDescZEx( (uint8*)"superellipsoid", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$9606, 0 );
      }
      goto label$6482;
      label$6929:;
      if( TMP$3323$6 != 227ull ) goto label$6931;
      label$6932:;
      {
       FBSTRING* vr$9607 = fb_StrAllocTempDescZEx( (uint8*)"superp", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9607, 0 );
      }
      goto label$6482;
      label$6931:;
      if( TMP$3323$6 != 228ull ) goto label$6933;
      label$6934:;
      {
       FBSTRING* vr$9608 = fb_StrAllocTempDescZEx( (uint8*)"suppress", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9608, 0 );
      }
      goto label$6482;
      label$6933:;
      if( TMP$3323$6 != 229ull ) goto label$6935;
      label$6936:;
      {
       FBSTRING* vr$9609 = fb_StrAllocTempDescZEx( (uint8*)"surfacearea", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$9609, 0 );
      }
      goto label$6482;
      label$6935:;
      if( TMP$3323$6 != 230ull ) goto label$6937;
      label$6938:;
      {
       FBSTRING* vr$9610 = fb_StrAllocTempDescZEx( (uint8*)"swap", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9610, 0 );
      }
      goto label$6482;
      label$6937:;
      if( TMP$3323$6 != 231ull ) goto label$6939;
      label$6940:;
      {
       FBSTRING* vr$9611 = fb_StrAllocTempDescZEx( (uint8*)"switch", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9611, 0 );
      }
      goto label$6482;
      label$6939:;
      if( TMP$3323$6 != 232ull ) goto label$6941;
      label$6942:;
      {
       FBSTRING* vr$9612 = fb_StrAllocTempDescZEx( (uint8*)"symbolic", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9612, 0 );
      }
      goto label$6482;
      label$6941:;
      if( TMP$3323$6 != 233ull ) goto label$6943;
      label$6944:;
      {
       FBSTRING* vr$9613 = fb_StrAllocTempDescZEx( (uint8*)"sync", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9613, 0 );
      }
      goto label$6482;
      label$6943:;
      if( TMP$3323$6 != 234ull ) goto label$6945;
      label$6946:;
      {
       FBSTRING* vr$9614 = fb_StrAllocTempDescZEx( (uint8*)"synchronized", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$9614, 0 );
      }
      goto label$6482;
      label$6945:;
      if( TMP$3323$6 != 235ull ) goto label$6947;
      label$6948:;
      {
       FBSTRING* vr$9615 = fb_StrAllocTempDescZEx( (uint8*)"sys", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9615, 0 );
      }
      goto label$6482;
      label$6947:;
      if( TMP$3323$6 != 236ull ) goto label$6949;
      label$6950:;
      {
       FBSTRING* vr$9616 = fb_StrAllocTempDescZEx( (uint8*)"system", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9616, 0 );
      }
      goto label$6482;
      label$6949:;
      if( TMP$3323$6 != 237ull ) goto label$6951;
      label$6952:;
      {
       FBSTRING* vr$9617 = fb_StrAllocTempDescZEx( (uint8*)"t", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$9617, 0 );
      }
      goto label$6482;
      label$6951:;
      if( TMP$3323$6 != 238ull ) goto label$6953;
      label$6954:;
      {
       FBSTRING* vr$9618 = fb_StrAllocTempDescZEx( (uint8*)"tab", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9618, 0 );
      }
      goto label$6482;
      label$6953:;
      if( TMP$3323$6 != 239ull ) goto label$6955;
      label$6956:;
      {
       FBSTRING* vr$9619 = fb_StrAllocTempDescZEx( (uint8*)"table", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9619, 0 );
      }
      goto label$6482;
      label$6955:;
      if( TMP$3323$6 != 240ull ) goto label$6957;
      label$6958:;
      {
       FBSTRING* vr$9620 = fb_StrAllocTempDescZEx( (uint8*)"tally", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9620, 0 );
      }
      goto label$6482;
      label$6957:;
      if( TMP$3323$6 != 241ull ) goto label$6959;
      label$6960:;
      {
       FBSTRING* vr$9621 = fb_StrAllocTempDescZEx( (uint8*)"tallying", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9621, 0 );
      }
      goto label$6482;
      label$6959:;
      if( TMP$3323$6 != 242ull ) goto label$6961;
      label$6962:;
      {
       FBSTRING* vr$9622 = fb_StrAllocTempDescZEx( (uint8*)"tan", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9622, 0 );
      }
      goto label$6482;
      label$6961:;
      if( TMP$3323$6 != 243ull ) goto label$6963;
      label$6964:;
      {
       FBSTRING* vr$9623 = fb_StrAllocTempDescZEx( (uint8*)"tanh", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9623, 0 );
      }
      goto label$6482;
      label$6963:;
      if( TMP$3323$6 != 244ull ) goto label$6965;
      label$6966:;
      {
       FBSTRING* vr$9624 = fb_StrAllocTempDescZEx( (uint8*)"tape", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9624, 0 );
      }
      goto label$6482;
      label$6965:;
      if( TMP$3323$6 != 245ull ) goto label$6967;
      label$6968:;
      {
       FBSTRING* vr$9625 = fb_StrAllocTempDescZEx( (uint8*)"target", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9625, 0 );
      }
      goto label$6482;
      label$6967:;
      if( TMP$3323$6 != 246ull ) goto label$6969;
      label$6970:;
      {
       FBSTRING* vr$9626 = fb_StrAllocTempDescZEx( (uint8*)"template", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9626, 0 );
      }
      goto label$6482;
      label$6969:;
      if( TMP$3323$6 != 247ull ) goto label$6971;
      label$6972:;
      {
       FBSTRING* vr$9627 = fb_StrAllocTempDescZEx( (uint8*)"term", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9627, 0 );
      }
      goto label$6482;
      label$6971:;
      if( TMP$3323$6 != 248ull ) goto label$6973;
      label$6974:;
      {
       FBSTRING* vr$9628 = fb_StrAllocTempDescZEx( (uint8*)"terminal", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9628, 0 );
      }
      goto label$6482;
      label$6973:;
      if( TMP$3323$6 != 249ull ) goto label$6975;
      label$6976:;
      {
       FBSTRING* vr$9629 = fb_StrAllocTempDescZEx( (uint8*)"terminate", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9629, 0 );
      }
      goto label$6482;
      label$6975:;
      if( TMP$3323$6 != 250ull ) goto label$6977;
      label$6978:;
      {
       FBSTRING* vr$9630 = fb_StrAllocTempDescZEx( (uint8*)"test", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9630, 0 );
      }
      goto label$6482;
      label$6977:;
      if( TMP$3323$6 != 251ull ) goto label$6979;
      label$6980:;
      {
       FBSTRING* vr$9631 = fb_StrAllocTempDescZEx( (uint8*)"text", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9631, 0 );
      }
      goto label$6482;
      label$6979:;
      if( TMP$3323$6 != 252ull ) goto label$6981;
      label$6982:;
      {
       FBSTRING* vr$9632 = fb_StrAllocTempDescZEx( (uint8*)"texture", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9632, 0 );
      }
      goto label$6482;
      label$6981:;
      if( TMP$3323$6 != 253ull ) goto label$6983;
      label$6984:;
      {
       FBSTRING* vr$9633 = fb_StrAllocTempDescZEx( (uint8*)"texture3d", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9633, 0 );
      }
      goto label$6482;
      label$6983:;
      if( TMP$3323$6 != 254ull ) goto label$6985;
      label$6986:;
      {
       FBSTRING* vr$9634 = fb_StrAllocTempDescZEx( (uint8*)"texture_list", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$9634, 0 );
      }
      goto label$6482;
      label$6985:;
      if( TMP$3323$6 != 255ull ) goto label$6987;
      label$6988:;
      {
       FBSTRING* vr$9635 = fb_StrAllocTempDescZEx( (uint8*)"texture_map", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$9635, 0 );
      }
      label$6987:;
      label$6482:;
     }
    }
    goto label$5327;
    label$6989:;
    {
     {
      uint64 TMP$3574$6;
      TMP$3574$6 = ((uint64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394888ll) ));
      goto label$6991;
      label$6992:;
      {
       FBSTRING* vr$9638 = fb_StrAllocTempDescZEx( (uint8*)"tga", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9638, 0 );
      }
      goto label$6990;
      label$6993:;
      {
       FBSTRING* vr$9639 = fb_StrAllocTempDescZEx( (uint8*)"than", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9639, 0 );
      }
      goto label$6990;
      label$6994:;
      {
       FBSTRING* vr$9640 = fb_StrAllocTempDescZEx( (uint8*)"then", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9640, 0 );
      }
      goto label$6990;
      label$6995:;
      {
       FBSTRING* vr$9641 = fb_StrAllocTempDescZEx( (uint8*)"thickness", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9641, 0 );
      }
      goto label$6990;
      label$6996:;
      {
       FBSTRING* vr$9642 = fb_StrAllocTempDescZEx( (uint8*)"this", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9642, 0 );
      }
      goto label$6990;
      label$6997:;
      {
       FBSTRING* vr$9643 = fb_StrAllocTempDescZEx( (uint8*)"threadvar", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9643, 0 );
      }
      goto label$6990;
      label$6998:;
      {
       FBSTRING* vr$9644 = fb_StrAllocTempDescZEx( (uint8*)"threshold", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9644, 0 );
      }
      goto label$6990;
      label$6999:;
      {
       FBSTRING* vr$9645 = fb_StrAllocTempDescZEx( (uint8*)"through", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9645, 0 );
      }
      goto label$6990;
      label$7000:;
      {
       FBSTRING* vr$9646 = fb_StrAllocTempDescZEx( (uint8*)"thru", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9646, 0 );
      }
      goto label$6990;
      label$7001:;
      {
       FBSTRING* vr$9647 = fb_StrAllocTempDescZEx( (uint8*)"tiff", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9647, 0 );
      }
      goto label$6990;
      label$7002:;
      {
       FBSTRING* vr$9648 = fb_StrAllocTempDescZEx( (uint8*)"tightness", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9648, 0 );
      }
      goto label$6990;
      label$7003:;
      {
       FBSTRING* vr$9649 = fb_StrAllocTempDescZEx( (uint8*)"tile2", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9649, 0 );
      }
      goto label$6990;
      label$7004:;
      {
       FBSTRING* vr$9650 = fb_StrAllocTempDescZEx( (uint8*)"tiles", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9650, 0 );
      }
      goto label$6990;
      label$7005:;
      {
       FBSTRING* vr$9651 = fb_StrAllocTempDescZEx( (uint8*)"time", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9651, 0 );
      }
      goto label$6990;
      label$7006:;
      {
       FBSTRING* vr$9652 = fb_StrAllocTempDescZEx( (uint8*)"timer", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9652, 0 );
      }
      goto label$6990;
      label$7007:;
      {
       FBSTRING* vr$9653 = fb_StrAllocTempDescZEx( (uint8*)"times", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9653, 0 );
      }
      goto label$6990;
      label$7008:;
      {
       FBSTRING* vr$9654 = fb_StrAllocTempDescZEx( (uint8*)"timestamp", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9654, 0 );
      }
      goto label$6990;
      label$7009:;
      {
       FBSTRING* vr$9655 = fb_StrAllocTempDescZEx( (uint8*)"timesten", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9655, 0 );
      }
      goto label$6990;
      label$7010:;
      {
       FBSTRING* vr$9656 = fb_StrAllocTempDescZEx( (uint8*)"title", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9656, 0 );
      }
      goto label$6990;
      label$7011:;
      {
       FBSTRING* vr$9657 = fb_StrAllocTempDescZEx( (uint8*)"to", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$9657, 0 );
      }
      goto label$6990;
      label$7012:;
      {
       FBSTRING* vr$9658 = fb_StrAllocTempDescZEx( (uint8*)"tolerance", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9658, 0 );
      }
      goto label$6990;
      label$7013:;
      {
       FBSTRING* vr$9659 = fb_StrAllocTempDescZEx( (uint8*)"top", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9659, 0 );
      }
      goto label$6990;
      label$7014:;
      {
       FBSTRING* vr$9660 = fb_StrAllocTempDescZEx( (uint8*)"toroidal", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9660, 0 );
      }
      goto label$6990;
      label$7015:;
      {
       FBSTRING* vr$9661 = fb_StrAllocTempDescZEx( (uint8*)"torus", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9661, 0 );
      }
      goto label$6990;
      label$7016:;
      {
       FBSTRING* vr$9662 = fb_StrAllocTempDescZEx( (uint8*)"trace", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9662, 0 );
      }
      goto label$6990;
      label$7017:;
      {
       FBSTRING* vr$9663 = fb_StrAllocTempDescZEx( (uint8*)"trailing", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9663, 0 );
      }
      goto label$6990;
      label$7018:;
      {
       FBSTRING* vr$9664 = fb_StrAllocTempDescZEx( (uint8*)"transform", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9664, 0 );
      }
      goto label$6990;
      label$7019:;
      {
       FBSTRING* vr$9665 = fb_StrAllocTempDescZEx( (uint8*)"transformc", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9665, 0 );
      }
      goto label$6990;
      label$7020:;
      {
       FBSTRING* vr$9666 = fb_StrAllocTempDescZEx( (uint8*)"transformu", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9666, 0 );
      }
      goto label$6990;
      label$7021:;
      {
       FBSTRING* vr$9667 = fb_StrAllocTempDescZEx( (uint8*)"translate", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9667, 0 );
      }
      goto label$6990;
      label$7022:;
      {
       FBSTRING* vr$9668 = fb_StrAllocTempDescZEx( (uint8*)"translucent", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$9668, 0 );
      }
      goto label$6990;
      label$7023:;
      {
       FBSTRING* vr$9669 = fb_StrAllocTempDescZEx( (uint8*)"transmit", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9669, 0 );
      }
      goto label$6990;
      label$7024:;
      {
       FBSTRING* vr$9670 = fb_StrAllocTempDescZEx( (uint8*)"transparent", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$9670, 0 );
      }
      goto label$6990;
      label$7025:;
      {
       FBSTRING* vr$9671 = fb_StrAllocTempDescZEx( (uint8*)"transpose", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9671, 0 );
      }
      goto label$6990;
      label$7026:;
      {
       FBSTRING* vr$9672 = fb_StrAllocTempDescZEx( (uint8*)"triangle", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9672, 0 );
      }
      goto label$6990;
      label$7027:;
      {
       FBSTRING* vr$9673 = fb_StrAllocTempDescZEx( (uint8*)"triangle_wave", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$9673, 0 );
      }
      goto label$6990;
      label$7028:;
      {
       FBSTRING* vr$9674 = fb_StrAllocTempDescZEx( (uint8*)"trim", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9674, 0 );
      }
      goto label$6990;
      label$7029:;
      {
       FBSTRING* vr$9675 = fb_StrAllocTempDescZEx( (uint8*)"trim_b", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9675, 0 );
      }
      goto label$6990;
      label$7030:;
      {
       FBSTRING* vr$9676 = fb_StrAllocTempDescZEx( (uint8*)"trim_mb", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9676, 0 );
      }
      goto label$6990;
      label$7031:;
      {
       FBSTRING* vr$9677 = fb_StrAllocTempDescZEx( (uint8*)"troff", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9677, 0 );
      }
      goto label$6990;
      label$7032:;
      {
       FBSTRING* vr$9678 = fb_StrAllocTempDescZEx( (uint8*)"tron", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9678, 0 );
      }
      goto label$6990;
      label$7033:;
      {
       FBSTRING* vr$9679 = fb_StrAllocTempDescZEx( (uint8*)"true", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9679, 0 );
      }
      goto label$6990;
      label$7034:;
      {
       FBSTRING* vr$9680 = fb_StrAllocTempDescZEx( (uint8*)"trunc", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9680, 0 );
      }
      goto label$6990;
      label$7035:;
      {
       FBSTRING* vr$9681 = fb_StrAllocTempDescZEx( (uint8*)"try", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9681, 0 );
      }
      goto label$6990;
      label$7036:;
      {
       FBSTRING* vr$9682 = fb_StrAllocTempDescZEx( (uint8*)"ttf", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9682, 0 );
      }
      goto label$6990;
      label$7037:;
      {
       FBSTRING* vr$9683 = fb_StrAllocTempDescZEx( (uint8*)"turb_depth", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9683, 0 );
      }
      goto label$6990;
      label$7038:;
      {
       FBSTRING* vr$9684 = fb_StrAllocTempDescZEx( (uint8*)"turbulence", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9684, 0 );
      }
      goto label$6990;
      label$7039:;
      {
       FBSTRING* vr$9685 = fb_StrAllocTempDescZEx( (uint8*)"type", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9685, 0 );
      }
      goto label$6990;
      label$7040:;
      {
       FBSTRING* vr$9686 = fb_StrAllocTempDescZEx( (uint8*)"typedef", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9686, 0 );
      }
      goto label$6990;
      label$7041:;
      {
       FBSTRING* vr$9687 = fb_StrAllocTempDescZEx( (uint8*)"u", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$9687, 0 );
      }
      goto label$6990;
      label$7042:;
      {
       FBSTRING* vr$9688 = fb_StrAllocTempDescZEx( (uint8*)"uimage1D", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9688, 0 );
      }
      goto label$6990;
      label$7043:;
      {
       FBSTRING* vr$9689 = fb_StrAllocTempDescZEx( (uint8*)"uimage1DArray", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$9689, 0 );
      }
      goto label$6990;
      label$7044:;
      {
       FBSTRING* vr$9690 = fb_StrAllocTempDescZEx( (uint8*)"uimage2D", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9690, 0 );
      }
      goto label$6990;
      label$7045:;
      {
       FBSTRING* vr$9691 = fb_StrAllocTempDescZEx( (uint8*)"uimage2DArray", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$9691, 0 );
      }
      goto label$6990;
      label$7046:;
      {
       FBSTRING* vr$9692 = fb_StrAllocTempDescZEx( (uint8*)"uimage3D", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9692, 0 );
      }
      goto label$6990;
      label$7047:;
      {
       FBSTRING* vr$9693 = fb_StrAllocTempDescZEx( (uint8*)"uimageBuffer", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$9693, 0 );
      }
      goto label$6990;
      label$7048:;
      {
       FBSTRING* vr$9694 = fb_StrAllocTempDescZEx( (uint8*)"uimageCube", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9694, 0 );
      }
      goto label$6990;
      label$7049:;
      {
       FBSTRING* vr$9695 = fb_StrAllocTempDescZEx( (uint8*)"uint", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9695, 0 );
      }
      goto label$6990;
      label$7050:;
      {
       FBSTRING* vr$9696 = fb_StrAllocTempDescZEx( (uint8*)"ultra_wide_angle", 16ll );
       fb_PrintString( 1, (FBSTRING*)vr$9696, 0 );
      }
      goto label$6990;
      label$7051:;
      {
       FBSTRING* vr$9697 = fb_StrAllocTempDescZEx( (uint8*)"undef", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9697, 0 );
      }
      goto label$6990;
      label$7052:;
      {
       FBSTRING* vr$9698 = fb_StrAllocTempDescZEx( (uint8*)"uniform", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9698, 0 );
      }
      goto label$6990;
      label$7053:;
      {
       FBSTRING* vr$9699 = fb_StrAllocTempDescZEx( (uint8*)"union", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9699, 0 );
      }
      goto label$6990;
      label$7054:;
      {
       FBSTRING* vr$9700 = fb_StrAllocTempDescZEx( (uint8*)"unit", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9700, 0 );
      }
      goto label$6990;
      label$7055:;
      {
       FBSTRING* vr$9701 = fb_StrAllocTempDescZEx( (uint8*)"unknown", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9701, 0 );
      }
      goto label$6990;
      label$7056:;
      {
       FBSTRING* vr$9702 = fb_StrAllocTempDescZEx( (uint8*)"unlock", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9702, 0 );
      }
      goto label$6990;
      label$7057:;
      {
       FBSTRING* vr$9703 = fb_StrAllocTempDescZEx( (uint8*)"unsigned", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9703, 0 );
      }
      goto label$6990;
      label$7058:;
      {
       FBSTRING* vr$9704 = fb_StrAllocTempDescZEx( (uint8*)"unstring", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9704, 0 );
      }
      goto label$6990;
      label$7059:;
      {
       FBSTRING* vr$9705 = fb_StrAllocTempDescZEx( (uint8*)"until", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9705, 0 );
      }
      goto label$6990;
      label$7060:;
      {
       FBSTRING* vr$9706 = fb_StrAllocTempDescZEx( (uint8*)"up", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$9706, 0 );
      }
      goto label$6990;
      label$7061:;
      {
       FBSTRING* vr$9707 = fb_StrAllocTempDescZEx( (uint8*)"update", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9707, 0 );
      }
      goto label$6990;
      label$7062:;
      {
       FBSTRING* vr$9708 = fb_StrAllocTempDescZEx( (uint8*)"upon", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9708, 0 );
      }
      goto label$6990;
      label$7063:;
      {
       FBSTRING* vr$9709 = fb_StrAllocTempDescZEx( (uint8*)"upper", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9709, 0 );
      }
      goto label$6990;
      label$7064:;
      {
       FBSTRING* vr$9710 = fb_StrAllocTempDescZEx( (uint8*)"upper_mb", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9710, 0 );
      }
      goto label$6990;
      label$7065:;
      {
       FBSTRING* vr$9711 = fb_StrAllocTempDescZEx( (uint8*)"usage", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9711, 0 );
      }
      goto label$6990;
      label$7066:;
      {
       FBSTRING* vr$9712 = fb_StrAllocTempDescZEx( (uint8*)"usampler1D", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9712, 0 );
      }
      goto label$6990;
      label$7067:;
      {
       FBSTRING* vr$9713 = fb_StrAllocTempDescZEx( (uint8*)"usampler1DArray", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$9713, 0 );
      }
      goto label$6990;
      label$7068:;
      {
       FBSTRING* vr$9714 = fb_StrAllocTempDescZEx( (uint8*)"usampler2D", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9714, 0 );
      }
      goto label$6990;
      label$7069:;
      {
       FBSTRING* vr$9715 = fb_StrAllocTempDescZEx( (uint8*)"usampler2DArray", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$9715, 0 );
      }
      goto label$6990;
      label$7070:;
      {
       FBSTRING* vr$9716 = fb_StrAllocTempDescZEx( (uint8*)"usampler2drect", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$9716, 0 );
      }
      goto label$6990;
      label$7071:;
      {
       FBSTRING* vr$9717 = fb_StrAllocTempDescZEx( (uint8*)"usampler3D", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9717, 0 );
      }
      goto label$6990;
      label$7072:;
      {
       FBSTRING* vr$9718 = fb_StrAllocTempDescZEx( (uint8*)"usamplerBufferStruct", 20ll );
       fb_PrintString( 1, (FBSTRING*)vr$9718, 0 );
      }
      goto label$6990;
      label$7073:;
      {
       FBSTRING* vr$9719 = fb_StrAllocTempDescZEx( (uint8*)"usamplerCube", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$9719, 0 );
      }
      goto label$6990;
      label$7074:;
      {
       FBSTRING* vr$9720 = fb_StrAllocTempDescZEx( (uint8*)"use", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9720, 0 );
      }
      goto label$6990;
      label$7075:;
      {
       FBSTRING* vr$9721 = fb_StrAllocTempDescZEx( (uint8*)"use_alpha", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9721, 0 );
      }
      goto label$6990;
      label$7076:;
      {
       FBSTRING* vr$9722 = fb_StrAllocTempDescZEx( (uint8*)"use_color", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9722, 0 );
      }
      goto label$6990;
      label$7077:;
      {
       FBSTRING* vr$9723 = fb_StrAllocTempDescZEx( (uint8*)"use_colour", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9723, 0 );
      }
      goto label$6990;
      label$7078:;
      {
       FBSTRING* vr$9724 = fb_StrAllocTempDescZEx( (uint8*)"use_index", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9724, 0 );
      }
      goto label$6990;
      label$7079:;
      {
       FBSTRING* vr$9725 = fb_StrAllocTempDescZEx( (uint8*)"uses", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9725, 0 );
      }
      goto label$6990;
      label$7080:;
      {
       FBSTRING* vr$9726 = fb_StrAllocTempDescZEx( (uint8*)"using", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9726, 0 );
      }
      goto label$6990;
      label$7081:;
      {
       FBSTRING* vr$9727 = fb_StrAllocTempDescZEx( (uint8*)"usr", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9727, 0 );
      }
      goto label$6990;
      label$7082:;
      {
       FBSTRING* vr$9728 = fb_StrAllocTempDescZEx( (uint8*)"u_steps", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9728, 0 );
      }
      goto label$6990;
      label$7083:;
      {
       FBSTRING* vr$9729 = fb_StrAllocTempDescZEx( (uint8*)"utf8", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9729, 0 );
      }
      goto label$6990;
      label$7084:;
      {
       FBSTRING* vr$9730 = fb_StrAllocTempDescZEx( (uint8*)"utf16", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9730, 0 );
      }
      goto label$6990;
      label$7085:;
      {
       FBSTRING* vr$9731 = fb_StrAllocTempDescZEx( (uint8*)"utf32", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9731, 0 );
      }
      goto label$6990;
      label$7086:;
      {
       FBSTRING* vr$9732 = fb_StrAllocTempDescZEx( (uint8*)"uvec2", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9732, 0 );
      }
      goto label$6990;
      label$7087:;
      {
       FBSTRING* vr$9733 = fb_StrAllocTempDescZEx( (uint8*)"uvec3", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9733, 0 );
      }
      goto label$6990;
      label$7088:;
      {
       FBSTRING* vr$9734 = fb_StrAllocTempDescZEx( (uint8*)"uvec4", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9734, 0 );
      }
      goto label$6990;
      label$7089:;
      {
       FBSTRING* vr$9735 = fb_StrAllocTempDescZEx( (uint8*)"uv_indices", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9735, 0 );
      }
      goto label$6990;
      label$7090:;
      {
       FBSTRING* vr$9736 = fb_StrAllocTempDescZEx( (uint8*)"uv_mapping", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9736, 0 );
      }
      goto label$6990;
      label$7091:;
      {
       FBSTRING* vr$9737 = fb_StrAllocTempDescZEx( (uint8*)"uv_vectors", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9737, 0 );
      }
      goto label$6990;
      label$7092:;
      {
       FBSTRING* vr$9738 = fb_StrAllocTempDescZEx( (uint8*)"v", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$9738, 0 );
      }
      goto label$6990;
      label$7093:;
      {
       FBSTRING* vr$9739 = fb_StrAllocTempDescZEx( (uint8*)"val", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9739, 0 );
      }
      goto label$6990;
      label$7094:;
      {
       FBSTRING* vr$9740 = fb_StrAllocTempDescZEx( (uint8*)"value", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9740, 0 );
      }
      goto label$6990;
      label$7095:;
      {
       FBSTRING* vr$9741 = fb_StrAllocTempDescZEx( (uint8*)"values", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9741, 0 );
      }
      goto label$6990;
      label$7096:;
      {
       FBSTRING* vr$9742 = fb_StrAllocTempDescZEx( (uint8*)"var", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9742, 0 );
      }
      goto label$6990;
      label$7097:;
      {
       FBSTRING* vr$9743 = fb_StrAllocTempDescZEx( (uint8*)"varchar", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9743, 0 );
      }
      goto label$6990;
      label$7098:;
      {
       FBSTRING* vr$9744 = fb_StrAllocTempDescZEx( (uint8*)"variance", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9744, 0 );
      }
      goto label$6990;
      label$7099:;
      {
       FBSTRING* vr$9745 = fb_StrAllocTempDescZEx( (uint8*)"varptr", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9745, 0 );
      }
      goto label$6990;
      label$7100:;
      {
       FBSTRING* vr$9746 = fb_StrAllocTempDescZEx( (uint8*)"varying", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9746, 0 );
      }
      goto label$6990;
      label$7101:;
      {
       FBSTRING* vr$9747 = fb_StrAllocTempDescZEx( (uint8*)"vaxis_rotate", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$9747, 0 );
      }
      goto label$6990;
      label$7102:;
      {
       FBSTRING* vr$9748 = fb_StrAllocTempDescZEx( (uint8*)"vcross", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9748, 0 );
      }
      goto label$6990;
      label$7103:;
      {
       FBSTRING* vr$9749 = fb_StrAllocTempDescZEx( (uint8*)"vdot", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9749, 0 );
      }
      goto label$6990;
      label$7104:;
      {
       FBSTRING* vr$9750 = fb_StrAllocTempDescZEx( (uint8*)"vec2", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9750, 0 );
      }
      goto label$6990;
      label$7105:;
      {
       FBSTRING* vr$9751 = fb_StrAllocTempDescZEx( (uint8*)"vec3", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9751, 0 );
      }
      goto label$6990;
      label$7106:;
      {
       FBSTRING* vr$9752 = fb_StrAllocTempDescZEx( (uint8*)"vec4", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9752, 0 );
      }
      goto label$6990;
      label$7107:;
      {
       FBSTRING* vr$9753 = fb_StrAllocTempDescZEx( (uint8*)"vector", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9753, 0 );
      }
      goto label$6990;
      label$7108:;
      {
       FBSTRING* vr$9754 = fb_StrAllocTempDescZEx( (uint8*)"version", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9754, 0 );
      }
      goto label$6990;
      label$7109:;
      {
       FBSTRING* vr$9755 = fb_StrAllocTempDescZEx( (uint8*)"vertex_vectors", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$9755, 0 );
      }
      goto label$6990;
      label$7110:;
      {
       FBSTRING* vr$9756 = fb_StrAllocTempDescZEx( (uint8*)"view", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9756, 0 );
      }
      goto label$6990;
      label$7111:;
      {
       FBSTRING* vr$9757 = fb_StrAllocTempDescZEx( (uint8*)"virtual", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9757, 0 );
      }
      goto label$6990;
      label$7112:;
      {
       FBSTRING* vr$9758 = fb_StrAllocTempDescZEx( (uint8*)"vlength", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9758, 0 );
      }
      goto label$6990;
      label$7113:;
      {
       FBSTRING* vr$9759 = fb_StrAllocTempDescZEx( (uint8*)"vnormalize", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9759, 0 );
      }
      goto label$6990;
      label$7114:;
      {
       FBSTRING* vr$9760 = fb_StrAllocTempDescZEx( (uint8*)"void", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9760, 0 );
      }
      goto label$6990;
      label$7115:;
      {
       FBSTRING* vr$9761 = fb_StrAllocTempDescZEx( (uint8*)"volatile", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9761, 0 );
      }
      goto label$6990;
      label$7116:;
      {
       FBSTRING* vr$9762 = fb_StrAllocTempDescZEx( (uint8*)"vrotate", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9762, 0 );
      }
      goto label$6990;
      label$7117:;
      {
       FBSTRING* vr$9763 = fb_StrAllocTempDescZEx( (uint8*)"v_steps", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9763, 0 );
      }
      goto label$6990;
      label$7118:;
      {
       FBSTRING* vr$9764 = fb_StrAllocTempDescZEx( (uint8*)"vstr", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9764, 0 );
      }
      goto label$6990;
      label$7119:;
      {
       FBSTRING* vr$9765 = fb_StrAllocTempDescZEx( (uint8*)"vturbulence", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$9765, 0 );
      }
      goto label$6990;
      label$7120:;
      {
       FBSTRING* vr$9766 = fb_StrAllocTempDescZEx( (uint8*)"w", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$9766, 0 );
      }
      goto label$6990;
      label$7121:;
      {
       FBSTRING* vr$9767 = fb_StrAllocTempDescZEx( (uint8*)"wait", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9767, 0 );
      }
      goto label$6990;
      label$7122:;
      {
       FBSTRING* vr$9768 = fb_StrAllocTempDescZEx( (uint8*)"ward", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9768, 0 );
      }
      goto label$6990;
      label$7123:;
      {
       FBSTRING* vr$9769 = fb_StrAllocTempDescZEx( (uint8*)"warning", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9769, 0 );
      }
      goto label$6990;
      label$7124:;
      {
       FBSTRING* vr$9770 = fb_StrAllocTempDescZEx( (uint8*)"warp", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9770, 0 );
      }
      goto label$6990;
      label$7125:;
      {
       FBSTRING* vr$9771 = fb_StrAllocTempDescZEx( (uint8*)"water_level", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$9771, 0 );
      }
      goto label$6990;
      label$7126:;
      {
       FBSTRING* vr$9772 = fb_StrAllocTempDescZEx( (uint8*)"wavelength_color", 16ll );
       fb_PrintString( 1, (FBSTRING*)vr$9772, 0 );
      }
      goto label$6990;
      label$7127:;
      {
       FBSTRING* vr$9773 = fb_StrAllocTempDescZEx( (uint8*)"waves", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9773, 0 );
      }
      goto label$6990;
      label$7128:;
      {
       FBSTRING* vr$9774 = fb_StrAllocTempDescZEx( (uint8*)"wend", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9774, 0 );
      }
      goto label$6990;
      label$7129:;
      {
       FBSTRING* vr$9775 = fb_StrAllocTempDescZEx( (uint8*)"when", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9775, 0 );
      }
      goto label$6990;
      label$7130:;
      {
       FBSTRING* vr$9776 = fb_StrAllocTempDescZEx( (uint8*)"when-compiled", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$9776, 0 );
      }
      goto label$6990;
      label$7131:;
      {
       FBSTRING* vr$9777 = fb_StrAllocTempDescZEx( (uint8*)"where", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9777, 0 );
      }
      goto label$6990;
      label$7132:;
      {
       FBSTRING* vr$9778 = fb_StrAllocTempDescZEx( (uint8*)"while", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9778, 0 );
      }
      goto label$6990;
      label$7133:;
      {
       FBSTRING* vr$9779 = fb_StrAllocTempDescZEx( (uint8*)"width", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9779, 0 );
      }
      goto label$6990;
      label$7134:;
      {
       FBSTRING* vr$9780 = fb_StrAllocTempDescZEx( (uint8*)"window", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9780, 0 );
      }
      goto label$6990;
      label$7135:;
      {
       FBSTRING* vr$9781 = fb_StrAllocTempDescZEx( (uint8*)"with", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9781, 0 );
      }
      goto label$6990;
      label$7136:;
      {
       FBSTRING* vr$9782 = fb_StrAllocTempDescZEx( (uint8*)"wood", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9782, 0 );
      }
      goto label$6990;
      label$7137:;
      {
       FBSTRING* vr$9783 = fb_StrAllocTempDescZEx( (uint8*)"words", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9783, 0 );
      }
      goto label$6990;
      label$7138:;
      {
       FBSTRING* vr$9784 = fb_StrAllocTempDescZEx( (uint8*)"working-storage", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$9784, 0 );
      }
      goto label$6990;
      label$7139:;
      {
       FBSTRING* vr$9785 = fb_StrAllocTempDescZEx( (uint8*)"wrinkles", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9785, 0 );
      }
      goto label$6990;
      label$7140:;
      {
       FBSTRING* vr$9786 = fb_StrAllocTempDescZEx( (uint8*)"write", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9786, 0 );
      }
      goto label$6990;
      label$7141:;
      {
       FBSTRING* vr$9787 = fb_StrAllocTempDescZEx( (uint8*)"write-only", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9787, 0 );
      }
      goto label$6990;
      label$7142:;
      {
       FBSTRING* vr$9788 = fb_StrAllocTempDescZEx( (uint8*)"x", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$9788, 0 );
      }
      goto label$6990;
      label$7143:;
      {
       FBSTRING* vr$9789 = fb_StrAllocTempDescZEx( (uint8*)"xor", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9789, 0 );
      }
      goto label$6990;
      label$7144:;
      {
       FBSTRING* vr$9790 = fb_StrAllocTempDescZEx( (uint8*)"xor_bits", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9790, 0 );
      }
      goto label$6990;
      label$7145:;
      {
       FBSTRING* vr$9791 = fb_StrAllocTempDescZEx( (uint8*)"y", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$9791, 1 );
      }
      goto label$6990;
      label$7146:;
      {
       FBSTRING* vr$9792 = fb_StrAllocTempDescZEx( (uint8*)"year", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9792, 0 );
      }
      goto label$6990;
      label$7147:;
      {
       FBSTRING* vr$9793 = fb_StrAllocTempDescZEx( (uint8*)"yes", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9793, 0 );
      }
      goto label$6990;
      label$7148:;
      {
       FBSTRING* vr$9794 = fb_StrAllocTempDescZEx( (uint8*)"yield", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9794, 0 );
      }
      goto label$6990;
      label$7149:;
      {
       FBSTRING* vr$9795 = fb_StrAllocTempDescZEx( (uint8*)"z", 1ll );
       fb_PrintString( 1, (FBSTRING*)vr$9795, 0 );
      }
      goto label$6990;
      label$7150:;
      {
       FBSTRING* vr$9796 = fb_StrAllocTempDescZEx( (uint8*)"zero", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9796, 0 );
      }
      goto label$6990;
      label$7151:;
      {
       FBSTRING* vr$9797 = fb_StrAllocTempDescZEx( (uint8*)"zeroes", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9797, 0 );
      }
      goto label$6990;
      label$7152:;
      {
       FBSTRING* vr$9798 = fb_StrAllocTempDescZEx( (uint8*)"zeros", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9798, 0 );
      }
      goto label$6990;
      label$6991:;
      static const void* tmp$4383[162ll] = {
       &&label$6992,
       &&label$6993,
       &&label$6994,
       &&label$6995,
       &&label$6996,
       &&label$6997,
       &&label$6998,
       &&label$6999,
       &&label$7000,
       &&label$7001,
       &&label$7002,
       &&label$7003,
       &&label$7004,
       &&label$7005,
       &&label$6990,
       &&label$7006,
       &&label$7007,
       &&label$7008,
       &&label$7009,
       &&label$7010,
       &&label$7011,
       &&label$7012,
       &&label$7013,
       &&label$7014,
       &&label$7015,
       &&label$7016,
       &&label$7017,
       &&label$7018,
       &&label$7019,
       &&label$7020,
       &&label$7021,
       &&label$7022,
       &&label$7023,
       &&label$7024,
       &&label$7025,
       &&label$7026,
       &&label$7027,
       &&label$7028,
       &&label$7029,
       &&label$7030,
       &&label$7031,
       &&label$7032,
       &&label$7033,
       &&label$7034,
       &&label$7035,
       &&label$7036,
       &&label$7037,
       &&label$7038,
       &&label$7039,
       &&label$7040,
       &&label$7041,
       &&label$7042,
       &&label$7043,
       &&label$7044,
       &&label$7045,
       &&label$7046,
       &&label$7047,
       &&label$7048,
       &&label$7049,
       &&label$7050,
       &&label$7051,
       &&label$7052,
       &&label$7053,
       &&label$7054,
       &&label$7055,
       &&label$7056,
       &&label$7057,
       &&label$7058,
       &&label$7059,
       &&label$7060,
       &&label$7061,
       &&label$7062,
       &&label$7063,
       &&label$7064,
       &&label$7065,
       &&label$7066,
       &&label$7067,
       &&label$7068,
       &&label$7069,
       &&label$7070,
       &&label$7071,
       &&label$7072,
       &&label$7073,
       &&label$7074,
       &&label$7075,
       &&label$7076,
       &&label$7077,
       &&label$7078,
       &&label$7079,
       &&label$7080,
       &&label$7081,
       &&label$7082,
       &&label$7083,
       &&label$7084,
       &&label$7085,
       &&label$7086,
       &&label$7087,
       &&label$7088,
       &&label$7089,
       &&label$7090,
       &&label$7091,
       &&label$7092,
       &&label$7093,
       &&label$7094,
       &&label$7095,
       &&label$7096,
       &&label$7097,
       &&label$7098,
       &&label$7099,
       &&label$7100,
       &&label$7101,
       &&label$7102,
       &&label$7103,
       &&label$7104,
       &&label$7105,
       &&label$7106,
       &&label$7107,
       &&label$7108,
       &&label$7109,
       &&label$7110,
       &&label$7111,
       &&label$7112,
       &&label$7113,
       &&label$7114,
       &&label$7115,
       &&label$7116,
       &&label$7117,
       &&label$7118,
       &&label$7119,
       &&label$7120,
       &&label$7121,
       &&label$7122,
       &&label$7123,
       &&label$7124,
       &&label$7125,
       &&label$7126,
       &&label$7127,
       &&label$7128,
       &&label$7129,
       &&label$7130,
       &&label$7131,
       &&label$7132,
       &&label$7133,
       &&label$7134,
       &&label$7135,
       &&label$7136,
       &&label$7137,
       &&label$7138,
       &&label$7139,
       &&label$7140,
       &&label$7141,
       &&label$7142,
       &&label$7143,
       &&label$7144,
       &&label$7145,
       &&label$7146,
       &&label$7147,
       &&label$7148,
       &&label$7149,
       &&label$7150,
       &&label$7151,
       &&label$7152,
      };
      if( TMP$3574$6 > 161ull ) goto label$6990;
      goto *tmp$4383[TMP$3574$6 - 0ull];
      label$6990:;
     }
    }
    goto label$5327;
    label$7153:;
    {
     {
      uint64 TMP$3730$6;
      TMP$3730$6 = ((uint64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394888ll) ));
      goto label$7155;
      label$7156:;
      {
       FBSTRING* vr$9801 = fb_StrAllocTempDescZEx( (uint8*)"buffer", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9801, 0 );
      }
      goto label$7154;
      label$7157:;
      {
       FBSTRING* vr$9802 = fb_StrAllocTempDescZEx( (uint8*)"shared", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9802, 0 );
      }
      goto label$7154;
      label$7158:;
      {
       FBSTRING* vr$9803 = fb_StrAllocTempDescZEx( (uint8*)"coherent", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9803, 0 );
      }
      goto label$7154;
      label$7159:;
      {
       FBSTRING* vr$9804 = fb_StrAllocTempDescZEx( (uint8*)"restrict", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9804, 0 );
      }
      goto label$7154;
      label$7160:;
      {
       FBSTRING* vr$9805 = fb_StrAllocTempDescZEx( (uint8*)"readonly", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9805, 0 );
      }
      goto label$7154;
      label$7161:;
      {
       FBSTRING* vr$9806 = fb_StrAllocTempDescZEx( (uint8*)"writeonly", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9806, 0 );
      }
      goto label$7154;
      label$7162:;
      {
       FBSTRING* vr$9807 = fb_StrAllocTempDescZEx( (uint8*)"atomic_uint", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$9807, 0 );
      }
      goto label$7154;
      label$7163:;
      {
       FBSTRING* vr$9808 = fb_StrAllocTempDescZEx( (uint8*)"patch", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9808, 0 );
      }
      goto label$7154;
      label$7164:;
      {
       FBSTRING* vr$9809 = fb_StrAllocTempDescZEx( (uint8*)"sample", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9809, 0 );
      }
      goto label$7154;
      label$7165:;
      {
       FBSTRING* vr$9810 = fb_StrAllocTempDescZEx( (uint8*)"precise", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9810, 0 );
      }
      goto label$7154;
      label$7166:;
      {
       FBSTRING* vr$9811 = fb_StrAllocTempDescZEx( (uint8*)"dmat2", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9811, 0 );
      }
      goto label$7154;
      label$7167:;
      {
       FBSTRING* vr$9812 = fb_StrAllocTempDescZEx( (uint8*)"dmat3", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9812, 0 );
      }
      goto label$7154;
      label$7168:;
      {
       FBSTRING* vr$9813 = fb_StrAllocTempDescZEx( (uint8*)"dmat4", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9813, 0 );
      }
      goto label$7154;
      label$7169:;
      {
       FBSTRING* vr$9814 = fb_StrAllocTempDescZEx( (uint8*)"dmat2x2", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9814, 0 );
      }
      goto label$7154;
      label$7170:;
      {
       FBSTRING* vr$9815 = fb_StrAllocTempDescZEx( (uint8*)"dmat2x3", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9815, 0 );
      }
      goto label$7154;
      label$7171:;
      {
       FBSTRING* vr$9816 = fb_StrAllocTempDescZEx( (uint8*)"dmat2x4", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9816, 0 );
      }
      goto label$7154;
      label$7172:;
      {
       FBSTRING* vr$9817 = fb_StrAllocTempDescZEx( (uint8*)"dmat3x2", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9817, 0 );
      }
      goto label$7154;
      label$7173:;
      {
       FBSTRING* vr$9818 = fb_StrAllocTempDescZEx( (uint8*)"dmat3x3", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9818, 0 );
      }
      goto label$7154;
      label$7174:;
      {
       FBSTRING* vr$9819 = fb_StrAllocTempDescZEx( (uint8*)"dmat3x4", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9819, 0 );
      }
      goto label$7154;
      label$7175:;
      {
       FBSTRING* vr$9820 = fb_StrAllocTempDescZEx( (uint8*)"dmat4x2", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9820, 0 );
      }
      goto label$7154;
      label$7176:;
      {
       FBSTRING* vr$9821 = fb_StrAllocTempDescZEx( (uint8*)"dmat4x3", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9821, 0 );
      }
      goto label$7154;
      label$7177:;
      {
       FBSTRING* vr$9822 = fb_StrAllocTempDescZEx( (uint8*)"dmat4x4", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9822, 0 );
      }
      goto label$7154;
      label$7178:;
      {
       FBSTRING* vr$9823 = fb_StrAllocTempDescZEx( (uint8*)"image2DMS", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9823, 0 );
      }
      goto label$7154;
      label$7179:;
      {
       FBSTRING* vr$9824 = fb_StrAllocTempDescZEx( (uint8*)"iimage2DMS", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9824, 0 );
      }
      goto label$7154;
      label$7180:;
      {
       FBSTRING* vr$9825 = fb_StrAllocTempDescZEx( (uint8*)"uimage2DMS", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9825, 0 );
      }
      goto label$7154;
      label$7181:;
      {
       FBSTRING* vr$9826 = fb_StrAllocTempDescZEx( (uint8*)"image2DMSArray", 14ll );
       fb_PrintString( 1, (FBSTRING*)vr$9826, 0 );
      }
      goto label$7154;
      label$7182:;
      {
       FBSTRING* vr$9827 = fb_StrAllocTempDescZEx( (uint8*)"iimage2DMSArray", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$9827, 0 );
      }
      goto label$7154;
      label$7183:;
      {
       FBSTRING* vr$9828 = fb_StrAllocTempDescZEx( (uint8*)"uimage2DMSArray", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$9828, 0 );
      }
      goto label$7154;
      label$7184:;
      {
       FBSTRING* vr$9829 = fb_StrAllocTempDescZEx( (uint8*)"struct", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9829, 0 );
      }
      goto label$7154;
      label$7185:;
      {
       FBSTRING* vr$9830 = fb_StrAllocTempDescZEx( (uint8*)"sampler2DRect", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$9830, 0 );
      }
      goto label$7154;
      label$7186:;
      {
       FBSTRING* vr$9831 = fb_StrAllocTempDescZEx( (uint8*)"resource", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9831, 0 );
      }
      goto label$7154;
      label$7187:;
      {
       FBSTRING* vr$9832 = fb_StrAllocTempDescZEx( (uint8*)"M_PI", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9832, 0 );
      }
      goto label$7154;
      label$7188:;
      {
       FBSTRING* vr$9833 = fb_StrAllocTempDescZEx( (uint8*)"M_PI_2", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9833, 0 );
      }
      goto label$7154;
      label$7189:;
      {
       FBSTRING* vr$9834 = fb_StrAllocTempDescZEx( (uint8*)"M_PI_4", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9834, 0 );
      }
      goto label$7154;
      label$7190:;
      {
       FBSTRING* vr$9835 = fb_StrAllocTempDescZEx( (uint8*)"M_2PI", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9835, 0 );
      }
      goto label$7154;
      label$7191:;
      {
       FBSTRING* vr$9836 = fb_StrAllocTempDescZEx( (uint8*)"M_4PI", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9836, 0 );
      }
      goto label$7154;
      label$7192:;
      {
       FBSTRING* vr$9837 = fb_StrAllocTempDescZEx( (uint8*)"M_2_SQRTPI", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9837, 0 );
      }
      goto label$7154;
      label$7193:;
      {
       FBSTRING* vr$9838 = fb_StrAllocTempDescZEx( (uint8*)"M_E", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9838, 0 );
      }
      goto label$7154;
      label$7194:;
      {
       FBSTRING* vr$9839 = fb_StrAllocTempDescZEx( (uint8*)"M_LN2", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9839, 0 );
      }
      goto label$7154;
      label$7195:;
      {
       FBSTRING* vr$9840 = fb_StrAllocTempDescZEx( (uint8*)"M_LN10", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9840, 0 );
      }
      goto label$7154;
      label$7196:;
      {
       FBSTRING* vr$9841 = fb_StrAllocTempDescZEx( (uint8*)"M_LOG2E", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9841, 0 );
      }
      goto label$7154;
      label$7197:;
      {
       FBSTRING* vr$9842 = fb_StrAllocTempDescZEx( (uint8*)"M_LOG10E", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9842, 0 );
      }
      goto label$7154;
      label$7198:;
      {
       FBSTRING* vr$9843 = fb_StrAllocTempDescZEx( (uint8*)"M_SQRT2", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9843, 0 );
      }
      goto label$7154;
      label$7199:;
      {
       FBSTRING* vr$9844 = fb_StrAllocTempDescZEx( (uint8*)"M_SQRT1_2", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9844, 0 );
      }
      goto label$7154;
      label$7200:;
      {
       FBSTRING* vr$9845 = fb_StrAllocTempDescZEx( (uint8*)"sincos", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9845, 0 );
      }
      goto label$7154;
      label$7201:;
      {
       FBSTRING* vr$9846 = fb_StrAllocTempDescZEx( (uint8*)"inversesqrt", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$9846, 0 );
      }
      goto label$7154;
      label$7202:;
      {
       FBSTRING* vr$9847 = fb_StrAllocTempDescZEx( (uint8*)"seg", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9847, 0 );
      }
      goto label$7154;
      label$7203:;
      {
       FBSTRING* vr$9848 = fb_StrAllocTempDescZEx( (uint8*)"seek", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9848, 0 );
      }
      goto label$7154;
      label$7204:;
      {
       FBSTRING* vr$9849 = fb_StrAllocTempDescZEx( (uint8*)"sleep", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9849, 0 );
      }
      goto label$7154;
      label$7205:;
      {
       FBSTRING* vr$9850 = fb_StrAllocTempDescZEx( (uint8*)"console", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9850, 0 );
      }
      goto label$7154;
      label$7206:;
      {
       FBSTRING* vr$9851 = fb_StrAllocTempDescZEx( (uint8*)"COB_SWITCH_1", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$9851, 0 );
      }
      goto label$7154;
      label$7207:;
      {
       FBSTRING* vr$9852 = fb_StrAllocTempDescZEx( (uint8*)"COB_SWITCH_2", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$9852, 0 );
      }
      goto label$7154;
      label$7208:;
      {
       FBSTRING* vr$9853 = fb_StrAllocTempDescZEx( (uint8*)"COB_SWITCH_3", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$9853, 0 );
      }
      goto label$7154;
      label$7209:;
      {
       FBSTRING* vr$9854 = fb_StrAllocTempDescZEx( (uint8*)"COB_SWITCH_4", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$9854, 0 );
      }
      goto label$7154;
      label$7210:;
      {
       FBSTRING* vr$9855 = fb_StrAllocTempDescZEx( (uint8*)"COB_SWITCH_5", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$9855, 0 );
      }
      goto label$7154;
      label$7211:;
      {
       FBSTRING* vr$9856 = fb_StrAllocTempDescZEx( (uint8*)"COB_SWITCH_6", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$9856, 0 );
      }
      goto label$7154;
      label$7212:;
      {
       FBSTRING* vr$9857 = fb_StrAllocTempDescZEx( (uint8*)"COB_SWITCH_7", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$9857, 0 );
      }
      goto label$7154;
      label$7213:;
      {
       FBSTRING* vr$9858 = fb_StrAllocTempDescZEx( (uint8*)"COB_SWITCH_8", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$9858, 0 );
      }
      goto label$7154;
      label$7214:;
      {
       FBSTRING* vr$9859 = fb_StrAllocTempDescZEx( (uint8*)"abort", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9859, 0 );
      }
      goto label$7154;
      label$7215:;
      {
       FBSTRING* vr$9860 = fb_StrAllocTempDescZEx( (uint8*)"achar", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9860, 0 );
      }
      goto label$7154;
      label$7216:;
      {
       FBSTRING* vr$9861 = fb_StrAllocTempDescZEx( (uint8*)"acosd", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9861, 0 );
      }
      goto label$7154;
      label$7217:;
      {
       FBSTRING* vr$9862 = fb_StrAllocTempDescZEx( (uint8*)"adjustl", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9862, 0 );
      }
      goto label$7154;
      label$7218:;
      {
       FBSTRING* vr$9863 = fb_StrAllocTempDescZEx( (uint8*)"adjustr", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9863, 0 );
      }
      goto label$7154;
      label$7219:;
      {
       FBSTRING* vr$9864 = fb_StrAllocTempDescZEx( (uint8*)"aimag", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9864, 0 );
      }
      goto label$7154;
      label$7220:;
      {
       FBSTRING* vr$9865 = fb_StrAllocTempDescZEx( (uint8*)"aint", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9865, 0 );
      }
      goto label$7154;
      label$7221:;
      {
       FBSTRING* vr$9866 = fb_StrAllocTempDescZEx( (uint8*)"alarm", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9866, 0 );
      }
      goto label$7154;
      label$7222:;
      {
       FBSTRING* vr$9867 = fb_StrAllocTempDescZEx( (uint8*)"alocated", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9867, 0 );
      }
      goto label$7154;
      label$7223:;
      {
       FBSTRING* vr$9868 = fb_StrAllocTempDescZEx( (uint8*)"implicit", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9868, 0 );
      }
      goto label$7154;
      label$7224:;
      {
       FBSTRING* vr$9869 = fb_StrAllocTempDescZEx( (uint8*)"find", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9869, 0 );
      }
      goto label$7154;
      label$7225:;
      {
       FBSTRING* vr$9870 = fb_StrAllocTempDescZEx( (uint8*)"inquire", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9870, 0 );
      }
      goto label$7154;
      label$7226:;
      {
       FBSTRING* vr$9871 = fb_StrAllocTempDescZEx( (uint8*)"image2DRect", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$9871, 0 );
      }
      goto label$7154;
      label$7227:;
      {
       FBSTRING* vr$9872 = fb_StrAllocTempDescZEx( (uint8*)"smpler2DMS", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9872, 0 );
      }
      goto label$7154;
      label$7228:;
      {
       FBSTRING* vr$9873 = fb_StrAllocTempDescZEx( (uint8*)"shortint", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9873, 0 );
      }
      goto label$7154;
      label$7229:;
      {
       FBSTRING* vr$9874 = fb_StrAllocTempDescZEx( (uint8*)"word", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9874, 0 );
      }
      goto label$7154;
      label$7230:;
      {
       FBSTRING* vr$9875 = fb_StrAllocTempDescZEx( (uint8*)"cardinal", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9875, 0 );
      }
      goto label$7154;
      label$7231:;
      {
       FBSTRING* vr$9876 = fb_StrAllocTempDescZEx( (uint8*)"longint", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9876, 0 );
      }
      goto label$7154;
      label$7232:;
      {
       FBSTRING* vr$9877 = fb_StrAllocTempDescZEx( (uint8*)"longword", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9877, 0 );
      }
      goto label$7154;
      label$7233:;
      {
       FBSTRING* vr$9878 = fb_StrAllocTempDescZEx( (uint8*)"int64", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9878, 0 );
      }
      goto label$7154;
      label$7234:;
      {
       FBSTRING* vr$9879 = fb_StrAllocTempDescZEx( (uint8*)"qword", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9879, 0 );
      }
      goto label$7154;
      label$7235:;
      {
       FBSTRING* vr$9880 = fb_StrAllocTempDescZEx( (uint8*)"single", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9880, 0 );
      }
      goto label$7154;
      label$7236:;
      {
       FBSTRING* vr$9881 = fb_StrAllocTempDescZEx( (uint8*)"extended", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9881, 0 );
      }
      goto label$7154;
      label$7237:;
      {
       FBSTRING* vr$9882 = fb_StrAllocTempDescZEx( (uint8*)"boolean", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9882, 0 );
      }
      goto label$7154;
      label$7238:;
      {
       FBSTRING* vr$9883 = fb_StrAllocTempDescZEx( (uint8*)"inherited", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9883, 0 );
      }
      goto label$7154;
      label$7239:;
      {
       FBSTRING* vr$9884 = fb_StrAllocTempDescZEx( (uint8*)"base", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9884, 0 );
      }
      goto label$7154;
      label$7240:;
      {
       FBSTRING* vr$9885 = fb_StrAllocTempDescZEx( (uint8*)"sbyte", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9885, 0 );
      }
      goto label$7154;
      label$7241:;
      {
       FBSTRING* vr$9886 = fb_StrAllocTempDescZEx( (uint8*)"ushort", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9886, 0 );
      }
      goto label$7154;
      label$7242:;
      {
       FBSTRING* vr$9887 = fb_StrAllocTempDescZEx( (uint8*)"ulong", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9887, 0 );
      }
      goto label$7154;
      label$7243:;
      {
       FBSTRING* vr$9888 = fb_StrAllocTempDescZEx( (uint8*)"catch", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9888, 0 );
      }
      goto label$7154;
      label$7244:;
      {
       FBSTRING* vr$9889 = fb_StrAllocTempDescZEx( (uint8*)"checked", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9889, 0 );
      }
      goto label$7154;
      label$7245:;
      {
       FBSTRING* vr$9890 = fb_StrAllocTempDescZEx( (uint8*)"decimal", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9890, 0 );
      }
      goto label$7154;
      label$7246:;
      {
       FBSTRING* vr$9891 = fb_StrAllocTempDescZEx( (uint8*)"delegate", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9891, 0 );
      }
      goto label$7154;
      label$7247:;
      {
       FBSTRING* vr$9892 = fb_StrAllocTempDescZEx( (uint8*)"event", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9892, 0 );
      }
      goto label$7154;
      label$7248:;
      {
       FBSTRING* vr$9893 = fb_StrAllocTempDescZEx( (uint8*)"foreach", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9893, 0 );
      }
      goto label$7154;
      label$7249:;
      {
       FBSTRING* vr$9894 = fb_StrAllocTempDescZEx( (uint8*)"namespace", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9894, 0 );
      }
      goto label$7154;
      label$7250:;
      {
       FBSTRING* vr$9895 = fb_StrAllocTempDescZEx( (uint8*)"params", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9895, 0 );
      }
      goto label$7154;
      label$7251:;
      {
       FBSTRING* vr$9896 = fb_StrAllocTempDescZEx( (uint8*)"ref", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9896, 0 );
      }
      goto label$7154;
      label$7252:;
      {
       FBSTRING* vr$9897 = fb_StrAllocTempDescZEx( (uint8*)"sealed", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9897, 0 );
      }
      goto label$7154;
      label$7253:;
      {
       FBSTRING* vr$9898 = fb_StrAllocTempDescZEx( (uint8*)"stackalloc", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9898, 0 );
      }
      goto label$7154;
      label$7254:;
      {
       FBSTRING* vr$9899 = fb_StrAllocTempDescZEx( (uint8*)"typeof", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9899, 0 );
      }
      goto label$7154;
      label$7255:;
      {
       FBSTRING* vr$9900 = fb_StrAllocTempDescZEx( (uint8*)"throw", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9900, 0 );
      }
      goto label$7154;
      label$7256:;
      {
       FBSTRING* vr$9901 = fb_StrAllocTempDescZEx( (uint8*)"unchecked", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9901, 0 );
      }
      goto label$7154;
      label$7257:;
      {
       FBSTRING* vr$9902 = fb_StrAllocTempDescZEx( (uint8*)"unsafe", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9902, 0 );
      }
      goto label$7154;
      label$7258:;
      {
       FBSTRING* vr$9903 = fb_StrAllocTempDescZEx( (uint8*)"equals", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9903, 0 );
      }
      goto label$7154;
      label$7259:;
      {
       FBSTRING* vr$9904 = fb_StrAllocTempDescZEx( (uint8*)"into", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9904, 0 );
      }
      goto label$7154;
      label$7260:;
      {
       FBSTRING* vr$9905 = fb_StrAllocTempDescZEx( (uint8*)"nameof", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9905, 0 );
      }
      goto label$7154;
      label$7261:;
      {
       FBSTRING* vr$9906 = fb_StrAllocTempDescZEx( (uint8*)"notnull", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9906, 0 );
      }
      goto label$7154;
      label$7262:;
      {
       FBSTRING* vr$9907 = fb_StrAllocTempDescZEx( (uint8*)"orderby", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9907, 0 );
      }
      goto label$7154;
      label$7263:;
      {
       FBSTRING* vr$9908 = fb_StrAllocTempDescZEx( (uint8*)"partial", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9908, 0 );
      }
      goto label$7154;
      label$7264:;
      {
       FBSTRING* vr$9909 = fb_StrAllocTempDescZEx( (uint8*)"remove", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9909, 0 );
      }
      goto label$7154;
      label$7265:;
      {
       FBSTRING* vr$9910 = fb_StrAllocTempDescZEx( (uint8*)"unmanaged", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9910, 0 );
      }
      goto label$7154;
      label$7266:;
      {
       FBSTRING* vr$9911 = fb_StrAllocTempDescZEx( (uint8*)"inf", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9911, 0 );
      }
      goto label$7154;
      label$7267:;
      {
       FBSTRING* vr$9912 = fb_StrAllocTempDescZEx( (uint8*)"NaN", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9912, 0 );
      }
      goto label$7154;
      label$7268:;
      {
       FBSTRING* vr$9913 = fb_StrAllocTempDescZEx( (uint8*)"NA", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$9913, 0 );
      }
      goto label$7154;
      label$7269:;
      {
       FBSTRING* vr$9914 = fb_StrAllocTempDescZEx( (uint8*)"as?", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9914, 0 );
      }
      goto label$7154;
      label$7270:;
      {
       FBSTRING* vr$9915 = fb_StrAllocTempDescZEx( (uint8*)"fun", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9915, 0 );
      }
      goto label$7154;
      label$7271:;
      {
       FBSTRING* vr$9916 = fb_StrAllocTempDescZEx( (uint8*)"!in", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9916, 0 );
      }
      goto label$7154;
      label$7272:;
      {
       FBSTRING* vr$9917 = fb_StrAllocTempDescZEx( (uint8*)"!is", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9917, 0 );
      }
      goto label$7154;
      label$7273:;
      {
       FBSTRING* vr$9918 = fb_StrAllocTempDescZEx( (uint8*)"package", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9918, 0 );
      }
      goto label$7154;
      label$7274:;
      {
       FBSTRING* vr$9919 = fb_StrAllocTempDescZEx( (uint8*)"typealias", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9919, 0 );
      }
      goto label$7154;
      label$7275:;
      {
       FBSTRING* vr$9920 = fb_StrAllocTempDescZEx( (uint8*)"init", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9920, 0 );
      }
      goto label$7154;
      label$7276:;
      {
       FBSTRING* vr$9921 = fb_StrAllocTempDescZEx( (uint8*)"param", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9921, 0 );
      }
      goto label$7154;
      label$7277:;
      {
       FBSTRING* vr$9922 = fb_StrAllocTempDescZEx( (uint8*)"receiver", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9922, 0 );
      }
      goto label$7154;
      label$7278:;
      {
       FBSTRING* vr$9923 = fb_StrAllocTempDescZEx( (uint8*)"setparam", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9923, 0 );
      }
      goto label$7154;
      label$7279:;
      {
       FBSTRING* vr$9924 = fb_StrAllocTempDescZEx( (uint8*)"actual", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9924, 0 );
      }
      goto label$7154;
      label$7280:;
      {
       FBSTRING* vr$9925 = fb_StrAllocTempDescZEx( (uint8*)"annotation", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9925, 0 );
      }
      goto label$7154;
      label$7281:;
      {
       FBSTRING* vr$9926 = fb_StrAllocTempDescZEx( (uint8*)"companion", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9926, 0 );
      }
      goto label$7154;
      label$7282:;
      {
       FBSTRING* vr$9927 = fb_StrAllocTempDescZEx( (uint8*)"crossinline", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$9927, 0 );
      }
      goto label$7154;
      label$7283:;
      {
       FBSTRING* vr$9928 = fb_StrAllocTempDescZEx( (uint8*)"expect", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9928, 0 );
      }
      goto label$7154;
      label$7284:;
      {
       FBSTRING* vr$9929 = fb_StrAllocTempDescZEx( (uint8*)"infix", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9929, 0 );
      }
      goto label$7154;
      label$7285:;
      {
       FBSTRING* vr$9930 = fb_StrAllocTempDescZEx( (uint8*)"lateinit", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9930, 0 );
      }
      goto label$7154;
      label$7286:;
      {
       FBSTRING* vr$9931 = fb_StrAllocTempDescZEx( (uint8*)"noinline", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9931, 0 );
      }
      goto label$7154;
      label$7287:;
      {
       FBSTRING* vr$9932 = fb_StrAllocTempDescZEx( (uint8*)"reified", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9932, 0 );
      }
      goto label$7154;
      label$7288:;
      {
       FBSTRING* vr$9933 = fb_StrAllocTempDescZEx( (uint8*)"suspend", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9933, 0 );
      }
      goto label$7154;
      label$7289:;
      {
       FBSTRING* vr$9934 = fb_StrAllocTempDescZEx( (uint8*)"tailrec", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9934, 0 );
      }
      goto label$7154;
      label$7290:;
      {
       FBSTRING* vr$9935 = fb_StrAllocTempDescZEx( (uint8*)"vararg", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9935, 0 );
      }
      goto label$7154;
      label$7291:;
      {
       FBSTRING* vr$9936 = fb_StrAllocTempDescZEx( (uint8*)"it", 2ll );
       fb_PrintString( 1, (FBSTRING*)vr$9936, 0 );
      }
      goto label$7154;
      label$7292:;
      {
       FBSTRING* vr$9937 = fb_StrAllocTempDescZEx( (uint8*)"callable", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9937, 0 );
      }
      goto label$7154;
      label$7293:;
      {
       FBSTRING* vr$9938 = fb_StrAllocTempDescZEx( (uint8*)"clone", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9938, 0 );
      }
      goto label$7154;
      label$7294:;
      {
       FBSTRING* vr$9939 = fb_StrAllocTempDescZEx( (uint8*)"echo", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9939, 0 );
      }
      goto label$7154;
      label$7295:;
      {
       FBSTRING* vr$9940 = fb_StrAllocTempDescZEx( (uint8*)"empty", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9940, 0 );
      }
      goto label$7154;
      label$7296:;
      {
       FBSTRING* vr$9941 = fb_StrAllocTempDescZEx( (uint8*)"enddeclare", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9941, 0 );
      }
      goto label$7154;
      label$7297:;
      {
       FBSTRING* vr$9942 = fb_StrAllocTempDescZEx( (uint8*)"endfor", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9942, 0 );
      }
      goto label$7154;
      label$7298:;
      {
       FBSTRING* vr$9943 = fb_StrAllocTempDescZEx( (uint8*)"endforeach", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9943, 0 );
      }
      goto label$7154;
      label$7299:;
      {
       FBSTRING* vr$9944 = fb_StrAllocTempDescZEx( (uint8*)"endif", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9944, 0 );
      }
      goto label$7154;
      label$7300:;
      {
       FBSTRING* vr$9945 = fb_StrAllocTempDescZEx( (uint8*)"endswitch", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9945, 0 );
      }
      goto label$7154;
      label$7301:;
      {
       FBSTRING* vr$9946 = fb_StrAllocTempDescZEx( (uint8*)"endwile", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9946, 0 );
      }
      goto label$7154;
      label$7302:;
      {
       FBSTRING* vr$9947 = fb_StrAllocTempDescZEx( (uint8*)"extends", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9947, 0 );
      }
      goto label$7154;
      label$7303:;
      {
       FBSTRING* vr$9948 = fb_StrAllocTempDescZEx( (uint8*)"instanceof", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9948, 0 );
      }
      goto label$7154;
      label$7304:;
      {
       FBSTRING* vr$9949 = fb_StrAllocTempDescZEx( (uint8*)"isset", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9949, 0 );
      }
      goto label$7154;
      label$7305:;
      {
       FBSTRING* vr$9950 = fb_StrAllocTempDescZEx( (uint8*)"require", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9950, 0 );
      }
      goto label$7154;
      label$7306:;
      {
       FBSTRING* vr$9951 = fb_StrAllocTempDescZEx( (uint8*)"trait", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9951, 0 );
      }
      goto label$7154;
      label$7307:;
      {
       FBSTRING* vr$9952 = fb_StrAllocTempDescZEx( (uint8*)"unset", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9952, 0 );
      }
      goto label$7154;
      label$7308:;
      {
       FBSTRING* vr$9953 = fb_StrAllocTempDescZEx( (uint8*)"del", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9953, 0 );
      }
      goto label$7154;
      label$7309:;
      {
       FBSTRING* vr$9954 = fb_StrAllocTempDescZEx( (uint8*)"yield", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9954, 0 );
      }
      goto label$7154;
      label$7310:;
      {
       FBSTRING* vr$9955 = fb_StrAllocTempDescZEx( (uint8*)"signed", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9955, 0 );
      }
      goto label$7154;
      label$7311:;
      {
       FBSTRING* vr$9956 = fb_StrAllocTempDescZEx( (uint8*)"final", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9956, 0 );
      }
      goto label$7154;
      label$7312:;
      {
       FBSTRING* vr$9957 = fb_StrAllocTempDescZEx( (uint8*)"implements", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9957, 0 );
      }
      goto label$7154;
      label$7313:;
      {
       FBSTRING* vr$9958 = fb_StrAllocTempDescZEx( (uint8*)"strictfp", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9958, 0 );
      }
      goto label$7154;
      label$7314:;
      {
       FBSTRING* vr$9959 = fb_StrAllocTempDescZEx( (uint8*)"throws", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9959, 0 );
      }
      goto label$7154;
      label$7315:;
      {
       FBSTRING* vr$9960 = fb_StrAllocTempDescZEx( (uint8*)"transient", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9960, 0 );
      }
      goto label$7154;
      label$7316:;
      {
       FBSTRING* vr$9961 = fb_StrAllocTempDescZEx( (uint8*)"allocate", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9961, 0 );
      }
      goto label$7154;
      label$7317:;
      {
       FBSTRING* vr$9962 = fb_StrAllocTempDescZEx( (uint8*)"andalso", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9962, 0 );
      }
      goto label$7154;
      label$7318:;
      {
       FBSTRING* vr$9963 = fb_StrAllocTempDescZEx( (uint8*)"assertwarn", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9963, 0 );
      }
      goto label$7154;
      label$7319:;
      {
       FBSTRING* vr$9964 = fb_StrAllocTempDescZEx( (uint8*)"bin", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9964, 0 );
      }
      goto label$7154;
      label$7320:;
      {
       FBSTRING* vr$9965 = fb_StrAllocTempDescZEx( (uint8*)"bit", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9965, 0 );
      }
      goto label$7154;
      label$7321:;
      {
       FBSTRING* vr$9966 = fb_StrAllocTempDescZEx( (uint8*)"bitreset", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9966, 0 );
      }
      goto label$7154;
      label$7322:;
      {
       FBSTRING* vr$9967 = fb_StrAllocTempDescZEx( (uint8*)"bitset", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9967, 0 );
      }
      goto label$7154;
      label$7323:;
      {
       FBSTRING* vr$9968 = fb_StrAllocTempDescZEx( (uint8*)"byref", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9968, 0 );
      }
      goto label$7154;
      label$7324:;
      {
       FBSTRING* vr$9969 = fb_StrAllocTempDescZEx( (uint8*)"byval", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9969, 0 );
      }
      goto label$7154;
      label$7325:;
      {
       FBSTRING* vr$9970 = fb_StrAllocTempDescZEx( (uint8*)"callocate", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9970, 0 );
      }
      goto label$7154;
      label$7326:;
      {
       FBSTRING* vr$9971 = fb_StrAllocTempDescZEx( (uint8*)"cbool", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9971, 0 );
      }
      goto label$7154;
      label$7327:;
      {
       FBSTRING* vr$9972 = fb_StrAllocTempDescZEx( (uint8*)"cbyte", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9972, 0 );
      }
      goto label$7154;
      label$7328:;
      {
       FBSTRING* vr$9973 = fb_StrAllocTempDescZEx( (uint8*)"clng", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9973, 0 );
      }
      goto label$7154;
      label$7329:;
      {
       FBSTRING* vr$9974 = fb_StrAllocTempDescZEx( (uint8*)"clongint", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9974, 0 );
      }
      goto label$7154;
      label$7330:;
      {
       FBSTRING* vr$9975 = fb_StrAllocTempDescZEx( (uint8*)"command", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9975, 0 );
      }
      goto label$7154;
      label$7331:;
      {
       FBSTRING* vr$9976 = fb_StrAllocTempDescZEx( (uint8*)"condbroadcast", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$9976, 0 );
      }
      goto label$7154;
      label$7332:;
      {
       FBSTRING* vr$9977 = fb_StrAllocTempDescZEx( (uint8*)"condcreate", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9977, 0 );
      }
      goto label$7154;
      label$7333:;
      {
       FBSTRING* vr$9978 = fb_StrAllocTempDescZEx( (uint8*)"conddestroy", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$9978, 0 );
      }
      goto label$7154;
      label$7334:;
      {
       FBSTRING* vr$9979 = fb_StrAllocTempDescZEx( (uint8*)"condsignal", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$9979, 0 );
      }
      goto label$7154;
      label$7335:;
      {
       FBSTRING* vr$9980 = fb_StrAllocTempDescZEx( (uint8*)"condwait", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9980, 0 );
      }
      goto label$7154;
      label$7336:;
      {
       FBSTRING* vr$9981 = fb_StrAllocTempDescZEx( (uint8*)"cptr", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$9981, 0 );
      }
      goto label$7154;
      label$7337:;
      {
       FBSTRING* vr$9982 = fb_StrAllocTempDescZEx( (uint8*)"cshort", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9982, 0 );
      }
      goto label$7154;
      label$7338:;
      {
       FBSTRING* vr$9983 = fb_StrAllocTempDescZEx( (uint8*)"csign", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9983, 0 );
      }
      goto label$7154;
      label$7339:;
      {
       FBSTRING* vr$9984 = fb_StrAllocTempDescZEx( (uint8*)"cubyte", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9984, 0 );
      }
      goto label$7154;
      label$7340:;
      {
       FBSTRING* vr$9985 = fb_StrAllocTempDescZEx( (uint8*)"cuint", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9985, 0 );
      }
      goto label$7154;
      label$7341:;
      {
       FBSTRING* vr$9986 = fb_StrAllocTempDescZEx( (uint8*)"culng", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9986, 0 );
      }
      goto label$7154;
      label$7342:;
      {
       FBSTRING* vr$9987 = fb_StrAllocTempDescZEx( (uint8*)"culngint", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9987, 0 );
      }
      goto label$7154;
      label$7343:;
      {
       FBSTRING* vr$9988 = fb_StrAllocTempDescZEx( (uint8*)"cunsg", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$9988, 0 );
      }
      goto label$7154;
      label$7344:;
      {
       FBSTRING* vr$9989 = fb_StrAllocTempDescZEx( (uint8*)"curdir", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9989, 0 );
      }
      goto label$7154;
      label$7345:;
      {
       FBSTRING* vr$9990 = fb_StrAllocTempDescZEx( (uint8*)"cushort", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9990, 0 );
      }
      goto label$7154;
      label$7346:;
      {
       FBSTRING* vr$9991 = fb_StrAllocTempDescZEx( (uint8*)"custom", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$9991, 0 );
      }
      goto label$7154;
      label$7347:;
      {
       FBSTRING* vr$9992 = fb_StrAllocTempDescZEx( (uint8*)"cva_arg", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9992, 0 );
      }
      goto label$7154;
      label$7348:;
      {
       FBSTRING* vr$9993 = fb_StrAllocTempDescZEx( (uint8*)"cva_copy", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9993, 0 );
      }
      goto label$7154;
      label$7349:;
      {
       FBSTRING* vr$9994 = fb_StrAllocTempDescZEx( (uint8*)"cva_list", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$9994, 0 );
      }
      goto label$7154;
      label$7350:;
      {
       FBSTRING* vr$9995 = fb_StrAllocTempDescZEx( (uint8*)"cva_end", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9995, 0 );
      }
      goto label$7154;
      label$7351:;
      {
       FBSTRING* vr$9996 = fb_StrAllocTempDescZEx( (uint8*)"cva_start", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9996, 0 );
      }
      goto label$7154;
      label$7352:;
      {
       FBSTRING* vr$9997 = fb_StrAllocTempDescZEx( (uint8*)"cvl", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$9997, 0 );
      }
      goto label$7154;
      label$7353:;
      {
       FBSTRING* vr$9998 = fb_StrAllocTempDescZEx( (uint8*)"cvlongint", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$9998, 0 );
      }
      goto label$7154;
      label$7354:;
      {
       FBSTRING* vr$9999 = fb_StrAllocTempDescZEx( (uint8*)"cvshort", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$9999, 0 );
      }
      goto label$7154;
      label$7355:;
      {
       FBSTRING* vr$10000 = fb_StrAllocTempDescZEx( (uint8*)"dateadd", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$10000, 0 );
      }
      goto label$7154;
      label$7356:;
      {
       FBSTRING* vr$10001 = fb_StrAllocTempDescZEx( (uint8*)"datediff", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$10001, 0 );
      }
      goto label$7154;
      label$7357:;
      {
       FBSTRING* vr$10002 = fb_StrAllocTempDescZEx( (uint8*)"datepart", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$10002, 0 );
      }
      goto label$7154;
      label$7358:;
      {
       FBSTRING* vr$10003 = fb_StrAllocTempDescZEx( (uint8*)"dateserial", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$10003, 0 );
      }
      goto label$7154;
      label$7359:;
      {
       FBSTRING* vr$10004 = fb_StrAllocTempDescZEx( (uint8*)"datevalue", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$10004, 0 );
      }
      goto label$7154;
      label$7360:;
      {
       FBSTRING* vr$10005 = fb_StrAllocTempDescZEx( (uint8*)"deallocate", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$10005, 0 );
      }
      goto label$7154;
      label$7361:;
      {
       FBSTRING* vr$10006 = fb_StrAllocTempDescZEx( (uint8*)"defbyte", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$10006, 0 );
      }
      goto label$7154;
      label$7362:;
      {
       FBSTRING* vr$10007 = fb_StrAllocTempDescZEx( (uint8*)"deflng", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$10007, 0 );
      }
      goto label$7154;
      label$7363:;
      {
       FBSTRING* vr$10008 = fb_StrAllocTempDescZEx( (uint8*)"deflongint", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$10008, 0 );
      }
      goto label$7154;
      label$7364:;
      {
       FBSTRING* vr$10009 = fb_StrAllocTempDescZEx( (uint8*)"defshort", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$10009, 0 );
      }
      goto label$7154;
      label$7365:;
      {
       FBSTRING* vr$10010 = fb_StrAllocTempDescZEx( (uint8*)"defubyte", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$10010, 0 );
      }
      goto label$7154;
      label$7366:;
      {
       FBSTRING* vr$10011 = fb_StrAllocTempDescZEx( (uint8*)"defuint", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$10011, 0 );
      }
      goto label$7154;
      label$7367:;
      {
       FBSTRING* vr$10012 = fb_StrAllocTempDescZEx( (uint8*)"defulongint", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$10012, 0 );
      }
      goto label$7154;
      label$7368:;
      {
       FBSTRING* vr$10013 = fb_StrAllocTempDescZEx( (uint8*)"defushort", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$10013, 0 );
      }
      goto label$7154;
      label$7369:;
      {
       FBSTRING* vr$10014 = fb_StrAllocTempDescZEx( (uint8*)"dir", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$10014, 0 );
      }
      goto label$7154;
      label$7370:;
      {
       FBSTRING* vr$10015 = fb_StrAllocTempDescZEx( (uint8*)"dylibfree", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$10015, 0 );
      }
      goto label$7154;
      label$7371:;
      {
       FBSTRING* vr$10016 = fb_StrAllocTempDescZEx( (uint8*)"dylibload", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$10016, 0 );
      }
      goto label$7154;
      label$7372:;
      {
       FBSTRING* vr$10017 = fb_StrAllocTempDescZEx( (uint8*)"dylibsymbol", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$10017, 1 );
      }
      goto label$7154;
      label$7373:;
      {
       FBSTRING* vr$10018 = fb_StrAllocTempDescZEx( (uint8*)"encoding", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$10018, 0 );
      }
      goto label$7154;
      label$7374:;
      {
       FBSTRING* vr$10019 = fb_StrAllocTempDescZEx( (uint8*)"erfn", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$10019, 0 );
      }
      goto label$7154;
      label$7375:;
      {
       FBSTRING* vr$10020 = fb_StrAllocTempDescZEx( (uint8*)"ermn", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$10020, 0 );
      }
      goto label$7154;
      label$7376:;
      {
       FBSTRING* vr$10021 = fb_StrAllocTempDescZEx( (uint8*)"exec", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$10021, 0 );
      }
      goto label$7154;
      label$7377:;
      {
       FBSTRING* vr$10022 = fb_StrAllocTempDescZEx( (uint8*)"exepath", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$10022, 0 );
      }
      goto label$7154;
      label$7378:;
      {
       FBSTRING* vr$10023 = fb_StrAllocTempDescZEx( (uint8*)"compile", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$10023, 0 );
      }
      goto label$7154;
      label$7379:;
      {
       FBSTRING* vr$10024 = fb_StrAllocTempDescZEx( (uint8*)"help", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$10024, 0 );
      }
      goto label$7154;
      label$7380:;
      {
       FBSTRING* vr$10025 = fb_StrAllocTempDescZEx( (uint8*)"identify", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$10025, 0 );
      }
      goto label$7154;
      label$7381:;
      {
       FBSTRING* vr$10026 = fb_StrAllocTempDescZEx( (uint8*)"listnh", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$10026, 0 );
      }
      goto label$7154;
      label$7382:;
      {
       FBSTRING* vr$10027 = fb_StrAllocTempDescZEx( (uint8*)"old", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$10027, 0 );
      }
      goto label$7154;
      label$7383:;
      {
       FBSTRING* vr$10028 = fb_StrAllocTempDescZEx( (uint8*)"rename", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$10028, 0 );
      }
      goto label$7154;
      label$7384:;
      {
       FBSTRING* vr$10029 = fb_StrAllocTempDescZEx( (uint8*)"resequence", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$10029, 0 );
      }
      goto label$7154;
      label$7385:;
      {
       FBSTRING* vr$10030 = fb_StrAllocTempDescZEx( (uint8*)"scratch", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$10030, 0 );
      }
      goto label$7154;
      label$7386:;
      {
       FBSTRING* vr$10031 = fb_StrAllocTempDescZEx( (uint8*)"show", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$10031, 0 );
      }
      goto label$7154;
      label$7387:;
      {
       FBSTRING* vr$10032 = fb_StrAllocTempDescZEx( (uint8*)"unsave", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$10032, 0 );
      }
      goto label$7154;
      label$7388:;
      {
       FBSTRING* vr$10033 = fb_StrAllocTempDescZEx( (uint8*)"bufsiz", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$10033, 0 );
      }
      goto label$7154;
      label$7389:;
      {
       FBSTRING* vr$10034 = fb_StrAllocTempDescZEx( (uint8*)"ccpos", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$10034, 0 );
      }
      goto label$7154;
      label$7390:;
      {
       FBSTRING* vr$10035 = fb_StrAllocTempDescZEx( (uint8*)"change", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$10035, 0 );
      }
      goto label$7154;
      label$7391:;
      {
       FBSTRING* vr$10036 = fb_StrAllocTempDescZEx( (uint8*)"ctrlc", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$10036, 0 );
      }
      goto label$7154;
      label$7392:;
      {
       FBSTRING* vr$10037 = fb_StrAllocTempDescZEx( (uint8*)"det", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$10037, 0 );
      }
      goto label$7154;
      label$7393:;
      {
       FBSTRING* vr$10038 = fb_StrAllocTempDescZEx( (uint8*)"dif", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$10038, 0 );
      }
      goto label$7154;
      label$7394:;
      {
       FBSTRING* vr$10039 = fb_StrAllocTempDescZEx( (uint8*)"ern", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$10039, 0 );
      }
      goto label$7154;
      label$7395:;
      {
       FBSTRING* vr$10040 = fb_StrAllocTempDescZEx( (uint8*)"fileattr", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$10040, 0 );
      }
      goto label$7154;
      label$7396:;
      {
       FBSTRING* vr$10041 = fb_StrAllocTempDescZEx( (uint8*)"filecopy", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$10041, 0 );
      }
      goto label$7154;
      label$7397:;
      {
       FBSTRING* vr$10042 = fb_StrAllocTempDescZEx( (uint8*)"filedatetime", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$10042, 0 );
      }
      goto label$7154;
      label$7398:;
      {
       FBSTRING* vr$10043 = fb_StrAllocTempDescZEx( (uint8*)"fileexists", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$10043, 0 );
      }
      goto label$7154;
      label$7399:;
      {
       FBSTRING* vr$10044 = fb_StrAllocTempDescZEx( (uint8*)"filelen", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$10044, 0 );
      }
      goto label$7154;
      label$7400:;
      {
       FBSTRING* vr$10045 = fb_StrAllocTempDescZEx( (uint8*)"freefile", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$10045, 0 );
      }
      goto label$7154;
      label$7401:;
      {
       FBSTRING* vr$10046 = fb_StrAllocTempDescZEx( (uint8*)"frac", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$10046, 0 );
      }
      goto label$7154;
      label$7402:;
      {
       FBSTRING* vr$10047 = fb_StrAllocTempDescZEx( (uint8*)"getjoystick", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$10047, 0 );
      }
      goto label$7154;
      label$7403:;
      {
       FBSTRING* vr$10048 = fb_StrAllocTempDescZEx( (uint8*)"getkey", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$10048, 0 );
      }
      goto label$7154;
      label$7404:;
      {
       FBSTRING* vr$10049 = fb_StrAllocTempDescZEx( (uint8*)"getmouse", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$10049, 0 );
      }
      goto label$7154;
      label$7405:;
      {
       FBSTRING* vr$10050 = fb_StrAllocTempDescZEx( (uint8*)"hibyte", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$10050, 0 );
      }
      goto label$7154;
      label$7406:;
      {
       FBSTRING* vr$10051 = fb_StrAllocTempDescZEx( (uint8*)"hiword", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$10051, 0 );
      }
      goto label$7154;
      label$7155:;
      static const void* tmp$4384[256ll] = {
       &&label$7156,
       &&label$7157,
       &&label$7158,
       &&label$7154,
       &&label$7159,
       &&label$7160,
       &&label$7161,
       &&label$7162,
       &&label$7163,
       &&label$7164,
       &&label$7165,
       &&label$7166,
       &&label$7167,
       &&label$7168,
       &&label$7169,
       &&label$7170,
       &&label$7171,
       &&label$7172,
       &&label$7173,
       &&label$7174,
       &&label$7154,
       &&label$7175,
       &&label$7176,
       &&label$7177,
       &&label$7178,
       &&label$7179,
       &&label$7180,
       &&label$7181,
       &&label$7182,
       &&label$7183,
       &&label$7184,
       &&label$7185,
       &&label$7186,
       &&label$7187,
       &&label$7188,
       &&label$7189,
       &&label$7190,
       &&label$7191,
       &&label$7192,
       &&label$7193,
       &&label$7194,
       &&label$7195,
       &&label$7196,
       &&label$7197,
       &&label$7198,
       &&label$7199,
       &&label$7200,
       &&label$7201,
       &&label$7202,
       &&label$7203,
       &&label$7204,
       &&label$7205,
       &&label$7206,
       &&label$7207,
       &&label$7208,
       &&label$7209,
       &&label$7210,
       &&label$7211,
       &&label$7212,
       &&label$7213,
       &&label$7214,
       &&label$7215,
       &&label$7216,
       &&label$7217,
       &&label$7218,
       &&label$7219,
       &&label$7220,
       &&label$7221,
       &&label$7222,
       &&label$7223,
       &&label$7224,
       &&label$7225,
       &&label$7226,
       &&label$7227,
       &&label$7228,
       &&label$7229,
       &&label$7230,
       &&label$7231,
       &&label$7232,
       &&label$7233,
       &&label$7234,
       &&label$7235,
       &&label$7236,
       &&label$7237,
       &&label$7238,
       &&label$7239,
       &&label$7240,
       &&label$7241,
       &&label$7242,
       &&label$7243,
       &&label$7244,
       &&label$7245,
       &&label$7246,
       &&label$7247,
       &&label$7248,
       &&label$7249,
       &&label$7250,
       &&label$7251,
       &&label$7252,
       &&label$7253,
       &&label$7254,
       &&label$7255,
       &&label$7256,
       &&label$7257,
       &&label$7258,
       &&label$7259,
       &&label$7154,
       &&label$7260,
       &&label$7261,
       &&label$7262,
       &&label$7263,
       &&label$7264,
       &&label$7265,
       &&label$7266,
       &&label$7267,
       &&label$7268,
       &&label$7269,
       &&label$7270,
       &&label$7271,
       &&label$7272,
       &&label$7273,
       &&label$7274,
       &&label$7275,
       &&label$7276,
       &&label$7277,
       &&label$7278,
       &&label$7279,
       &&label$7154,
       &&label$7154,
       &&label$7280,
       &&label$7281,
       &&label$7282,
       &&label$7283,
       &&label$7284,
       &&label$7285,
       &&label$7286,
       &&label$7287,
       &&label$7288,
       &&label$7289,
       &&label$7290,
       &&label$7291,
       &&label$7292,
       &&label$7293,
       &&label$7294,
       &&label$7295,
       &&label$7296,
       &&label$7297,
       &&label$7298,
       &&label$7299,
       &&label$7300,
       &&label$7301,
       &&label$7302,
       &&label$7303,
       &&label$7304,
       &&label$7305,
       &&label$7306,
       &&label$7307,
       &&label$7308,
       &&label$7309,
       &&label$7310,
       &&label$7311,
       &&label$7312,
       &&label$7313,
       &&label$7314,
       &&label$7315,
       &&label$7316,
       &&label$7317,
       &&label$7318,
       &&label$7319,
       &&label$7320,
       &&label$7321,
       &&label$7322,
       &&label$7323,
       &&label$7324,
       &&label$7325,
       &&label$7326,
       &&label$7327,
       &&label$7328,
       &&label$7329,
       &&label$7330,
       &&label$7331,
       &&label$7332,
       &&label$7333,
       &&label$7334,
       &&label$7335,
       &&label$7336,
       &&label$7337,
       &&label$7338,
       &&label$7339,
       &&label$7340,
       &&label$7341,
       &&label$7342,
       &&label$7343,
       &&label$7344,
       &&label$7345,
       &&label$7346,
       &&label$7347,
       &&label$7348,
       &&label$7349,
       &&label$7350,
       &&label$7351,
       &&label$7352,
       &&label$7353,
       &&label$7354,
       &&label$7355,
       &&label$7356,
       &&label$7357,
       &&label$7358,
       &&label$7359,
       &&label$7360,
       &&label$7361,
       &&label$7362,
       &&label$7363,
       &&label$7364,
       &&label$7365,
       &&label$7366,
       &&label$7367,
       &&label$7368,
       &&label$7369,
       &&label$7370,
       &&label$7371,
       &&label$7372,
       &&label$7373,
       &&label$7374,
       &&label$7375,
       &&label$7376,
       &&label$7377,
       &&label$7378,
       &&label$7379,
       &&label$7380,
       &&label$7381,
       &&label$7382,
       &&label$7383,
       &&label$7384,
       &&label$7385,
       &&label$7386,
       &&label$7387,
       &&label$7388,
       &&label$7389,
       &&label$7390,
       &&label$7391,
       &&label$7392,
       &&label$7393,
       &&label$7394,
       &&label$7395,
       &&label$7396,
       &&label$7397,
       &&label$7398,
       &&label$7399,
       &&label$7400,
       &&label$7401,
       &&label$7402,
       &&label$7403,
       &&label$7404,
       &&label$7405,
       &&label$7406,
      };
      if( TMP$3730$6 > 255ull ) goto label$7154;
      goto *tmp$4384[TMP$3730$6 - 0ull];
      label$7154:;
     }
    }
    goto label$5327;
    label$7407:;
    {
     {
      uint64 TMP$3968$6;
      TMP$3968$6 = ((uint64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394968ll) ));
      goto label$7409;
      label$7410:;
      {
       FBSTRING* vr$10054 = fb_StrAllocTempDescZEx( (uint8*)"imageconvertrow", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$10054, 0 );
      }
      goto label$7408;
      label$7411:;
      {
       FBSTRING* vr$10055 = fb_StrAllocTempDescZEx( (uint8*)"imagecreate", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$10055, 0 );
      }
      goto label$7408;
      label$7412:;
      {
       FBSTRING* vr$10056 = fb_StrAllocTempDescZEx( (uint8*)"imagedestroy", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$10056, 0 );
      }
      goto label$7408;
      label$7413:;
      {
       FBSTRING* vr$10057 = fb_StrAllocTempDescZEx( (uint8*)"imageinfo", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$10057, 0 );
      }
      goto label$7408;
      label$7414:;
      {
       FBSTRING* vr$10058 = fb_StrAllocTempDescZEx( (uint8*)"instrrev", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$10058, 0 );
      }
      goto label$7408;
      label$7415:;
      {
       FBSTRING* vr$10059 = fb_StrAllocTempDescZEx( (uint8*)"isdate", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$10059, 0 );
      }
      goto label$7408;
      label$7416:;
      {
       FBSTRING* vr$10060 = fb_StrAllocTempDescZEx( (uint8*)"isredirected", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$10060, 0 );
      }
      goto label$7408;
      label$7417:;
      {
       FBSTRING* vr$10061 = fb_StrAllocTempDescZEx( (uint8*)"lbound", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$10061, 0 );
      }
      goto label$7408;
      label$7418:;
      {
       FBSTRING* vr$10062 = fb_StrAllocTempDescZEx( (uint8*)"lcase", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$10062, 0 );
      }
      goto label$7408;
      label$7419:;
      {
       FBSTRING* vr$10063 = fb_StrAllocTempDescZEx( (uint8*)"lib", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$10063, 0 );
      }
      goto label$7408;
      label$7420:;
      {
       FBSTRING* vr$10064 = fb_StrAllocTempDescZEx( (uint8*)"lobyte", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$10064, 0 );
      }
      goto label$7408;
      label$7421:;
      {
       FBSTRING* vr$10065 = fb_StrAllocTempDescZEx( (uint8*)"loword", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$10065, 0 );
      }
      goto label$7408;
      label$7422:;
      {
       FBSTRING* vr$10066 = fb_StrAllocTempDescZEx( (uint8*)"ltrim", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$10066, 0 );
      }
      goto label$7408;
      label$7423:;
      {
       FBSTRING* vr$10067 = fb_StrAllocTempDescZEx( (uint8*)"mkl", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$10067, 0 );
      }
      goto label$7408;
      label$7424:;
      {
       FBSTRING* vr$10068 = fb_StrAllocTempDescZEx( (uint8*)"mklongint", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$10068, 0 );
      }
      goto label$7408;
      label$7425:;
      {
       FBSTRING* vr$10069 = fb_StrAllocTempDescZEx( (uint8*)"mkshort", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$10069, 0 );
      }
      goto label$7408;
      label$7426:;
      {
       FBSTRING* vr$10070 = fb_StrAllocTempDescZEx( (uint8*)"monthname", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$10070, 1 );
      }
      goto label$7408;
      label$7427:;
      {
       FBSTRING* vr$10071 = fb_StrAllocTempDescZEx( (uint8*)"multikey", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$10071, 0 );
      }
      goto label$7408;
      label$7428:;
      {
       FBSTRING* vr$10072 = fb_StrAllocTempDescZEx( (uint8*)"mutexcreate", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$10072, 0 );
      }
      goto label$7408;
      label$7429:;
      {
       FBSTRING* vr$10073 = fb_StrAllocTempDescZEx( (uint8*)"mutexdestroy", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$10073, 0 );
      }
      goto label$7408;
      label$7430:;
      {
       FBSTRING* vr$10074 = fb_StrAllocTempDescZEx( (uint8*)"mutexlock", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$10074, 0 );
      }
      goto label$7408;
      label$7431:;
      {
       FBSTRING* vr$10075 = fb_StrAllocTempDescZEx( (uint8*)"mutexunlock", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$10075, 0 );
      }
      goto label$7408;
      label$7432:;
      {
       FBSTRING* vr$10076 = fb_StrAllocTempDescZEx( (uint8*)"naked", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$10076, 0 );
      }
      goto label$7408;
      label$7433:;
      {
       FBSTRING* vr$10077 = fb_StrAllocTempDescZEx( (uint8*)"now", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$10077, 1 );
      }
      goto label$7408;
      label$7434:;
      {
       FBSTRING* vr$10078 = fb_StrAllocTempDescZEx( (uint8*)"offsetof", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$10078, 0 );
      }
      goto label$7408;
      label$7435:;
      {
       FBSTRING* vr$10079 = fb_StrAllocTempDescZEx( (uint8*)"orelse", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$10079, 0 );
      }
      goto label$7408;
      label$7436:;
      {
       FBSTRING* vr$10080 = fb_StrAllocTempDescZEx( (uint8*)"overload", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$10080, 0 );
      }
      goto label$7408;
      label$7437:;
      {
       FBSTRING* vr$10081 = fb_StrAllocTempDescZEx( (uint8*)"pointcoord", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$10081, 0 );
      }
      goto label$7408;
      label$7438:;
      {
       FBSTRING* vr$10082 = fb_StrAllocTempDescZEx( (uint8*)"ptr", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$10082, 0 );
      }
      goto label$7408;
      label$7439:;
      {
       FBSTRING* vr$10083 = fb_StrAllocTempDescZEx( (uint8*)"preserve", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$10083, 0 );
      }
      goto label$7408;
      label$7440:;
      {
       FBSTRING* vr$10084 = fb_StrAllocTempDescZEx( (uint8*)"procptr", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$10084, 0 );
      }
      goto label$7408;
      label$7441:;
      {
       FBSTRING* vr$10085 = fb_StrAllocTempDescZEx( (uint8*)"redim", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$10085, 0 );
      }
      goto label$7408;
      label$7442:;
      {
       FBSTRING* vr$10086 = fb_StrAllocTempDescZEx( (uint8*)"rgba", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$10086, 0 );
      }
      goto label$7408;
      label$7443:;
      {
       FBSTRING* vr$10087 = fb_StrAllocTempDescZEx( (uint8*)"rtrim", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$10087, 0 );
      }
      goto label$7408;
      label$7444:;
      {
       FBSTRING* vr$10088 = fb_StrAllocTempDescZEx( (uint8*)"sadd", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$10088, 0 );
      }
      goto label$7408;
      label$7445:;
      {
       FBSTRING* vr$10089 = fb_StrAllocTempDescZEx( (uint8*)"scope", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$10089, 0 );
      }
      goto label$7408;
      label$7446:;
      {
       FBSTRING* vr$10090 = fb_StrAllocTempDescZEx( (uint8*)"screencopy", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$10090, 0 );
      }
      goto label$7408;
      label$7447:;
      {
       FBSTRING* vr$10091 = fb_StrAllocTempDescZEx( (uint8*)"screencontrol", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$10091, 0 );
      }
      goto label$7408;
      label$7448:;
      {
       FBSTRING* vr$10092 = fb_StrAllocTempDescZEx( (uint8*)"screenevent", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$10092, 0 );
      }
      goto label$7408;
      label$7449:;
      {
       FBSTRING* vr$10093 = fb_StrAllocTempDescZEx( (uint8*)"screenglproc", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$10093, 0 );
      }
      goto label$7408;
      label$7450:;
      {
       FBSTRING* vr$10094 = fb_StrAllocTempDescZEx( (uint8*)"screeninfo", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$10094, 0 );
      }
      goto label$7408;
      label$7451:;
      {
       FBSTRING* vr$10095 = fb_StrAllocTempDescZEx( (uint8*)"screenlist", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$10095, 0 );
      }
      goto label$7408;
      label$7452:;
      {
       FBSTRING* vr$10096 = fb_StrAllocTempDescZEx( (uint8*)"screenlock", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$10096, 0 );
      }
      goto label$7408;
      label$7453:;
      {
       FBSTRING* vr$10097 = fb_StrAllocTempDescZEx( (uint8*)"screenptr", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$10097, 0 );
      }
      goto label$7408;
      label$7454:;
      {
       FBSTRING* vr$10098 = fb_StrAllocTempDescZEx( (uint8*)"screenres", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$10098, 0 );
      }
      goto label$7408;
      label$7455:;
      {
       FBSTRING* vr$10099 = fb_StrAllocTempDescZEx( (uint8*)"screenset", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$10099, 0 );
      }
      goto label$7408;
      label$7456:;
      {
       FBSTRING* vr$10100 = fb_StrAllocTempDescZEx( (uint8*)"screensync", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$10100, 0 );
      }
      goto label$7408;
      label$7457:;
      {
       FBSTRING* vr$10101 = fb_StrAllocTempDescZEx( (uint8*)"screenunlock", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$10101, 0 );
      }
      goto label$7408;
      label$7458:;
      {
       FBSTRING* vr$10102 = fb_StrAllocTempDescZEx( (uint8*)"setdate", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$10102, 0 );
      }
      goto label$7408;
      label$7459:;
      {
       FBSTRING* vr$10103 = fb_StrAllocTempDescZEx( (uint8*)"setenviron", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$10103, 0 );
      }
      goto label$7408;
      label$7460:;
      {
       FBSTRING* vr$10104 = fb_StrAllocTempDescZEx( (uint8*)"setmouse", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$10104, 0 );
      }
      goto label$7408;
      label$7461:;
      {
       FBSTRING* vr$10105 = fb_StrAllocTempDescZEx( (uint8*)"settime", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$10105, 0 );
      }
      goto label$7408;
      label$7462:;
      {
       FBSTRING* vr$10106 = fb_StrAllocTempDescZEx( (uint8*)"sub", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$10106, 0 );
      }
      goto label$7408;
      label$7463:;
      {
       FBSTRING* vr$10107 = fb_StrAllocTempDescZEx( (uint8*)"threadcall", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$10107, 0 );
      }
      goto label$7408;
      label$7464:;
      {
       FBSTRING* vr$10108 = fb_StrAllocTempDescZEx( (uint8*)"threadcreate", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$10108, 0 );
      }
      goto label$7408;
      label$7465:;
      {
       FBSTRING* vr$10109 = fb_StrAllocTempDescZEx( (uint8*)"threaddetach", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$10109, 0 );
      }
      goto label$7408;
      label$7466:;
      {
       FBSTRING* vr$10110 = fb_StrAllocTempDescZEx( (uint8*)"threadwait", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$10110, 0 );
      }
      goto label$7408;
      label$7467:;
      {
       FBSTRING* vr$10111 = fb_StrAllocTempDescZEx( (uint8*)"trans", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$10111, 0 );
      }
      goto label$7408;
      label$7468:;
      {
       FBSTRING* vr$10112 = fb_StrAllocTempDescZEx( (uint8*)"ubound", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$10112, 0 );
      }
      goto label$7408;
      label$7469:;
      {
       FBSTRING* vr$10113 = fb_StrAllocTempDescZEx( (uint8*)"ubyte", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$10113, 0 );
      }
      goto label$7408;
      label$7470:;
      {
       FBSTRING* vr$10114 = fb_StrAllocTempDescZEx( (uint8*)"ucase", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$10114, 0 );
      }
      goto label$7408;
      label$7471:;
      {
       FBSTRING* vr$10115 = fb_StrAllocTempDescZEx( (uint8*)"uinteger", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$10115, 0 );
      }
      goto label$7408;
      label$7472:;
      {
       FBSTRING* vr$10116 = fb_StrAllocTempDescZEx( (uint8*)"ulongint", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$10116, 0 );
      }
      goto label$7408;
      label$7473:;
      {
       FBSTRING* vr$10117 = fb_StrAllocTempDescZEx( (uint8*)"va_arg", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$10117, 0 );
      }
      goto label$7408;
      label$7474:;
      {
       FBSTRING* vr$10118 = fb_StrAllocTempDescZEx( (uint8*)"va_first", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$10118, 0 );
      }
      goto label$7408;
      label$7475:;
      {
       FBSTRING* vr$10119 = fb_StrAllocTempDescZEx( (uint8*)"va_next", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$10119, 0 );
      }
      goto label$7408;
      label$7476:;
      {
       FBSTRING* vr$10120 = fb_StrAllocTempDescZEx( (uint8*)"vallng", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$10120, 0 );
      }
      goto label$7408;
      label$7477:;
      {
       FBSTRING* vr$10121 = fb_StrAllocTempDescZEx( (uint8*)"valint", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$10121, 0 );
      }
      goto label$7408;
      label$7478:;
      {
       FBSTRING* vr$10122 = fb_StrAllocTempDescZEx( (uint8*)"view", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$10122, 0 );
      }
      goto label$7408;
      label$7479:;
      {
       FBSTRING* vr$10123 = fb_StrAllocTempDescZEx( (uint8*)"wbin", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$10123, 0 );
      }
      goto label$7408;
      label$7480:;
      {
       FBSTRING* vr$10124 = fb_StrAllocTempDescZEx( (uint8*)"wchr", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$10124, 0 );
      }
      goto label$7408;
      label$7481:;
      {
       FBSTRING* vr$10125 = fb_StrAllocTempDescZEx( (uint8*)"weekday", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$10125, 0 );
      }
      goto label$7408;
      label$7482:;
      {
       FBSTRING* vr$10126 = fb_StrAllocTempDescZEx( (uint8*)"weekdayname", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$10126, 0 );
      }
      goto label$7408;
      label$7483:;
      {
       FBSTRING* vr$10127 = fb_StrAllocTempDescZEx( (uint8*)"whex", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$10127, 0 );
      }
      goto label$7408;
      label$7484:;
      {
       FBSTRING* vr$10128 = fb_StrAllocTempDescZEx( (uint8*)"windowtitle", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$10128, 0 );
      }
      goto label$7408;
      label$7485:;
      {
       FBSTRING* vr$10129 = fb_StrAllocTempDescZEx( (uint8*)"winput", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$10129, 0 );
      }
      goto label$7408;
      label$7486:;
      {
       FBSTRING* vr$10130 = fb_StrAllocTempDescZEx( (uint8*)"woct", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$10130, 0 );
      }
      goto label$7408;
      label$7487:;
      {
       FBSTRING* vr$10131 = fb_StrAllocTempDescZEx( (uint8*)"wspace", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$10131, 0 );
      }
      goto label$7408;
      label$7488:;
      {
       FBSTRING* vr$10132 = fb_StrAllocTempDescZEx( (uint8*)"wstr", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$10132, 0 );
      }
      goto label$7408;
      label$7489:;
      {
       FBSTRING* vr$10133 = fb_StrAllocTempDescZEx( (uint8*)"wstring", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$10133, 0 );
      }
      goto label$7408;
      label$7490:;
      {
       FBSTRING* vr$10134 = fb_StrAllocTempDescZEx( (uint8*)"zstring", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$10134, 0 );
      }
      goto label$7408;
      label$7491:;
      {
       FBSTRING* vr$10135 = fb_StrAllocTempDescZEx( (uint8*)"ert", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$10135, 0 );
      }
      goto label$7408;
      label$7492:;
      {
       FBSTRING* vr$10136 = fb_StrAllocTempDescZEx( (uint8*)"endifle", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$10136, 0 );
      }
      goto label$7408;
      label$7493:;
      {
       FBSTRING* vr$10137 = fb_StrAllocTempDescZEx( (uint8*)"fnend", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$10137, 0 );
      }
      goto label$7408;
      label$7494:;
      {
       FBSTRING* vr$10138 = fb_StrAllocTempDescZEx( (uint8*)"fnexit", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$10138, 0 );
      }
      goto label$7408;
      label$7495:;
      {
       FBSTRING* vr$10139 = fb_StrAllocTempDescZEx( (uint8*)"free", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$10139, 0 );
      }
      goto label$7408;
      label$7496:;
      {
       FBSTRING* vr$10140 = fb_StrAllocTempDescZEx( (uint8*)"fsp", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$10140, 0 );
      }
      goto label$7408;
      label$7497:;
      {
       FBSTRING* vr$10141 = fb_StrAllocTempDescZEx( (uint8*)"functionend", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$10141, 0 );
      }
      goto label$7408;
      label$7498:;
      {
       FBSTRING* vr$10142 = fb_StrAllocTempDescZEx( (uint8*)"functionexit", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$10142, 0 );
      }
      goto label$7408;
      label$7499:;
      {
       FBSTRING* vr$10143 = fb_StrAllocTempDescZEx( (uint8*)"getrfa", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$10143, 0 );
      }
      goto label$7408;
      label$7500:;
      {
       FBSTRING* vr$10144 = fb_StrAllocTempDescZEx( (uint8*)"handler", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$10144, 0 );
      }
      goto label$7408;
      label$7501:;
      {
       FBSTRING* vr$10145 = fb_StrAllocTempDescZEx( (uint8*)"linput", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$10145, 0 );
      }
      goto label$7408;
      label$7502:;
      {
       FBSTRING* vr$10146 = fb_StrAllocTempDescZEx( (uint8*)"mag", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$10146, 0 );
      }
      goto label$7408;
      label$7503:;
      {
       FBSTRING* vr$10147 = fb_StrAllocTempDescZEx( (uint8*)"magtape", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$10147, 0 );
      }
      goto label$7408;
      label$7504:;
      {
       FBSTRING* vr$10148 = fb_StrAllocTempDescZEx( (uint8*)"mar", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$10148, 0 );
      }
      goto label$7408;
      label$7505:;
      {
       FBSTRING* vr$10149 = fb_StrAllocTempDescZEx( (uint8*)"margin", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$10149, 0 );
      }
      goto label$7408;
      label$7506:;
      {
       FBSTRING* vr$10150 = fb_StrAllocTempDescZEx( (uint8*)"mat", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$10150, 0 );
      }
      goto label$7408;
      label$7507:;
      {
       FBSTRING* vr$10151 = fb_StrAllocTempDescZEx( (uint8*)"noecho", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$10151, 0 );
      }
      goto label$7408;
      label$7508:;
      {
       FBSTRING* vr$10152 = fb_StrAllocTempDescZEx( (uint8*)"nomargin", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$10152, 0 );
      }
      goto label$7408;
      label$7509:;
      {
       FBSTRING* vr$10153 = fb_StrAllocTempDescZEx( (uint8*)"num", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$10153, 0 );
      }
      goto label$7408;
      label$7510:;
      {
       FBSTRING* vr$10154 = fb_StrAllocTempDescZEx( (uint8*)"num2", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$10154, 0 );
      }
      goto label$7408;
      label$7511:;
      {
       FBSTRING* vr$10155 = fb_StrAllocTempDescZEx( (uint8*)"num1", 4ll );
       fb_PrintString( 1, (FBSTRING*)vr$10155, 0 );
      }
      goto label$7408;
      label$7512:;
      {
       FBSTRING* vr$10156 = fb_StrAllocTempDescZEx( (uint8*)"place", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$10156, 0 );
      }
      goto label$7408;
      label$7513:;
      {
       FBSTRING* vr$10157 = fb_StrAllocTempDescZEx( (uint8*)"quo", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$10157, 0 );
      }
      goto label$7408;
      label$7514:;
      {
       FBSTRING* vr$10158 = fb_StrAllocTempDescZEx( (uint8*)"rad", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$10158, 0 );
      }
      goto label$7408;
      label$7515:;
      {
       FBSTRING* vr$10159 = fb_StrAllocTempDescZEx( (uint8*)"rctrlc", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$10159, 0 );
      }
      goto label$7408;
      label$7516:;
      {
       FBSTRING* vr$10160 = fb_StrAllocTempDescZEx( (uint8*)"rctrl0", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$10160, 0 );
      }
      goto label$7408;
      label$7517:;
      {
       FBSTRING* vr$10161 = fb_StrAllocTempDescZEx( (uint8*)"recount", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$10161, 0 );
      }
      goto label$7408;
      label$7518:;
      {
       FBSTRING* vr$10162 = fb_StrAllocTempDescZEx( (uint8*)"remap", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$10162, 0 );
      }
      goto label$7408;
      label$7519:;
      {
       FBSTRING* vr$10163 = fb_StrAllocTempDescZEx( (uint8*)"retry", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$10163, 0 );
      }
      goto label$7408;
      label$7520:;
      {
       FBSTRING* vr$10164 = fb_StrAllocTempDescZEx( (uint8*)"rmsstatus", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$10164, 0 );
      }
      goto label$7408;
      label$7521:;
      {
       FBSTRING* vr$10165 = fb_StrAllocTempDescZEx( (uint8*)"prompt", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$10165, 0 );
      }
      goto label$7408;
      label$7522:;
      {
       FBSTRING* vr$10166 = fb_StrAllocTempDescZEx( (uint8*)"subend", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$10166, 0 );
      }
      goto label$7408;
      label$7523:;
      {
       FBSTRING* vr$10167 = fb_StrAllocTempDescZEx( (uint8*)"exitsub", 7ll );
       fb_PrintString( 1, (FBSTRING*)vr$10167, 0 );
      }
      goto label$7408;
      label$7524:;
      {
       FBSTRING* vr$10168 = fb_StrAllocTempDescZEx( (uint8*)"trm", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$10168, 0 );
      }
      goto label$7408;
      label$7525:;
      {
       FBSTRING* vr$10169 = fb_StrAllocTempDescZEx( (uint8*)"unless", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$10169, 0 );
      }
      goto label$7408;
      label$7526:;
      {
       FBSTRING* vr$10170 = fb_StrAllocTempDescZEx( (uint8*)"vmsstatus", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$10170, 0 );
      }
      goto label$7408;
      label$7527:;
      {
       FBSTRING* vr$10171 = fb_StrAllocTempDescZEx( (uint8*)"xlate", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$10171, 0 );
      }
      goto label$7408;
      label$7528:;
      {
       FBSTRING* vr$10172 = fb_StrAllocTempDescZEx( (uint8*)"allocated", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$10172, 0 );
      }
      goto label$7408;
      label$7529:;
      {
       FBSTRING* vr$10173 = fb_StrAllocTempDescZEx( (uint8*)"anint", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$10173, 0 );
      }
      goto label$7408;
      label$7530:;
      {
       FBSTRING* vr$10174 = fb_StrAllocTempDescZEx( (uint8*)"asind", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$10174, 0 );
      }
      goto label$7408;
      label$7531:;
      {
       FBSTRING* vr$10175 = fb_StrAllocTempDescZEx( (uint8*)"associated", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$10175, 0 );
      }
      goto label$7408;
      label$7532:;
      {
       FBSTRING* vr$10176 = fb_StrAllocTempDescZEx( (uint8*)"atand", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$10176, 0 );
      }
      goto label$7408;
      label$7533:;
      {
       FBSTRING* vr$10177 = fb_StrAllocTempDescZEx( (uint8*)"atan2d", 6ll );
       fb_PrintString( 1, (FBSTRING*)vr$10177, 0 );
      }
      goto label$7408;
      label$7534:;
      {
       FBSTRING* vr$10178 = fb_StrAllocTempDescZEx( (uint8*)"atomic_add", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$10178, 0 );
      }
      goto label$7408;
      label$7535:;
      {
       FBSTRING* vr$10179 = fb_StrAllocTempDescZEx( (uint8*)"atomic_and", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$10179, 0 );
      }
      goto label$7408;
      label$7536:;
      {
       FBSTRING* vr$10180 = fb_StrAllocTempDescZEx( (uint8*)"atomic_cas", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$10180, 0 );
      }
      goto label$7408;
      label$7537:;
      {
       FBSTRING* vr$10181 = fb_StrAllocTempDescZEx( (uint8*)"atomic_define", 13ll );
       fb_PrintString( 1, (FBSTRING*)vr$10181, 0 );
      }
      goto label$7408;
      label$7538:;
      {
       FBSTRING* vr$10182 = fb_StrAllocTempDescZEx( (uint8*)"atomic_fetch_add", 16ll );
       fb_PrintString( 1, (FBSTRING*)vr$10182, 0 );
      }
      goto label$7408;
      label$7539:;
      {
       FBSTRING* vr$10183 = fb_StrAllocTempDescZEx( (uint8*)"atomic_fetch and", 16ll );
       fb_PrintString( 1, (FBSTRING*)vr$10183, 0 );
      }
      goto label$7408;
      label$7540:;
      {
       FBSTRING* vr$10184 = fb_StrAllocTempDescZEx( (uint8*)"atomic_fetch_or", 15ll );
       fb_PrintString( 1, (FBSTRING*)vr$10184, 0 );
      }
      goto label$7408;
      label$7541:;
      {
       FBSTRING* vr$10185 = fb_StrAllocTempDescZEx( (uint8*)"atomic_fetch_xor", 16ll );
       fb_PrintString( 1, (FBSTRING*)vr$10185, 0 );
      }
      goto label$7408;
      label$7542:;
      {
       FBSTRING* vr$10186 = fb_StrAllocTempDescZEx( (uint8*)"atomic_or", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$10186, 0 );
      }
      goto label$7408;
      label$7543:;
      {
       FBSTRING* vr$10187 = fb_StrAllocTempDescZEx( (uint8*)"atomic_ref", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$10187, 0 );
      }
      goto label$7408;
      label$7544:;
      {
       FBSTRING* vr$10188 = fb_StrAllocTempDescZEx( (uint8*)"atomic_xor", 10ll );
       fb_PrintString( 1, (FBSTRING*)vr$10188, 0 );
      }
      goto label$7408;
      label$7545:;
      {
       FBSTRING* vr$10189 = fb_StrAllocTempDescZEx( (uint8*)"backtrace", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$10189, 0 );
      }
      goto label$7408;
      label$7546:;
      {
       FBSTRING* vr$10190 = fb_StrAllocTempDescZEx( (uint8*)"bessel_j0", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$10190, 0 );
      }
      goto label$7408;
      label$7547:;
      {
       FBSTRING* vr$10191 = fb_StrAllocTempDescZEx( (uint8*)"bessel_j1", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$10191, 0 );
      }
      goto label$7408;
      label$7548:;
      {
       FBSTRING* vr$10192 = fb_StrAllocTempDescZEx( (uint8*)"bessel_jn", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$10192, 0 );
      }
      goto label$7408;
      label$7549:;
      {
       FBSTRING* vr$10193 = fb_StrAllocTempDescZEx( (uint8*)"bessel_y0", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$10193, 0 );
      }
      goto label$7408;
      label$7550:;
      {
       FBSTRING* vr$10194 = fb_StrAllocTempDescZEx( (uint8*)"bassel_y1", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$10194, 0 );
      }
      goto label$7408;
      label$7551:;
      {
       FBSTRING* vr$10195 = fb_StrAllocTempDescZEx( (uint8*)"bessel_yn", 9ll );
       fb_PrintString( 1, (FBSTRING*)vr$10195, 0 );
      }
      goto label$7408;
      label$7552:;
      {
       FBSTRING* vr$10196 = fb_StrAllocTempDescZEx( (uint8*)"bge", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$10196, 0 );
      }
      goto label$7408;
      label$7553:;
      {
       FBSTRING* vr$10197 = fb_StrAllocTempDescZEx( (uint8*)"bgt", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$10197, 0 );
      }
      goto label$7408;
      label$7554:;
      {
       FBSTRING* vr$10198 = fb_StrAllocTempDescZEx( (uint8*)"bit_size", 8ll );
       fb_PrintString( 1, (FBSTRING*)vr$10198, 0 );
      }
      goto label$7408;
      label$7555:;
      {
       FBSTRING* vr$10199 = fb_StrAllocTempDescZEx( (uint8*)"ble", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$10199, 0 );
      }
      goto label$7408;
      label$7556:;
      {
       FBSTRING* vr$10200 = fb_StrAllocTempDescZEx( (uint8*)"blt", 3ll );
       fb_PrintString( 1, (FBSTRING*)vr$10200, 0 );
      }
      goto label$7408;
      label$7557:;
      {
       FBSTRING* vr$10201 = fb_StrAllocTempDescZEx( (uint8*)"btest", 5ll );
       fb_PrintString( 1, (FBSTRING*)vr$10201, 0 );
      }
      goto label$7408;
      label$7558:;
      {
       FBSTRING* vr$10202 = fb_StrAllocTempDescZEx( (uint8*)"c_associated", 12ll );
       fb_PrintString( 1, (FBSTRING*)vr$10202, 0 );
      }
      goto label$7408;
      label$7559:;
      {
       FBSTRING* vr$10203 = fb_StrAllocTempDescZEx( (uint8*)"c_f_pointer", 11ll );
       fb_PrintString( 1, (FBSTRING*)vr$10203, 0 );
      }
      goto label$7408;
      label$7409:;
      static const void* tmp$4385[151ll] = {
       &&label$7410,
       &&label$7411,
       &&label$7412,
       &&label$7413,
       &&label$7414,
       &&label$7415,
       &&label$7416,
       &&label$7417,
       &&label$7418,
       &&label$7419,
       &&label$7420,
       &&label$7408,
       &&label$7421,
       &&label$7422,
       &&label$7423,
       &&label$7424,
       &&label$7425,
       &&label$7426,
       &&label$7427,
       &&label$7428,
       &&label$7429,
       &&label$7430,
       &&label$7431,
       &&label$7432,
       &&label$7433,
       &&label$7434,
       &&label$7435,
       &&label$7436,
       &&label$7437,
       &&label$7438,
       &&label$7439,
       &&label$7440,
       &&label$7441,
       &&label$7442,
       &&label$7443,
       &&label$7444,
       &&label$7445,
       &&label$7446,
       &&label$7447,
       &&label$7448,
       &&label$7449,
       &&label$7450,
       &&label$7451,
       &&label$7452,
       &&label$7453,
       &&label$7454,
       &&label$7455,
       &&label$7456,
       &&label$7457,
       &&label$7458,
       &&label$7459,
       &&label$7460,
       &&label$7461,
       &&label$7462,
       &&label$7463,
       &&label$7464,
       &&label$7465,
       &&label$7466,
       &&label$7467,
       &&label$7468,
       &&label$7469,
       &&label$7470,
       &&label$7471,
       &&label$7472,
       &&label$7473,
       &&label$7474,
       &&label$7475,
       &&label$7476,
       &&label$7477,
       &&label$7478,
       &&label$7479,
       &&label$7480,
       &&label$7481,
       &&label$7482,
       &&label$7483,
       &&label$7484,
       &&label$7485,
       &&label$7486,
       &&label$7487,
       &&label$7488,
       &&label$7489,
       &&label$7490,
       &&label$7491,
       &&label$7492,
       &&label$7493,
       &&label$7494,
       &&label$7495,
       &&label$7496,
       &&label$7497,
       &&label$7498,
       &&label$7499,
       &&label$7500,
       &&label$7501,
       &&label$7502,
       &&label$7503,
       &&label$7504,
       &&label$7505,
       &&label$7506,
       &&label$7507,
       &&label$7508,
       &&label$7509,
       &&label$7510,
       &&label$7511,
       &&label$7512,
       &&label$7513,
       &&label$7514,
       &&label$7515,
       &&label$7516,
       &&label$7517,
       &&label$7518,
       &&label$7519,
       &&label$7520,
       &&label$7521,
       &&label$7522,
       &&label$7523,
       &&label$7524,
       &&label$7525,
       &&label$7526,
       &&label$7527,
       &&label$7528,
       &&label$7529,
       &&label$7530,
       &&label$7531,
       &&label$7532,
       &&label$7533,
       &&label$7534,
       &&label$7535,
       &&label$7536,
       &&label$7537,
       &&label$7538,
       &&label$7539,
       &&label$7540,
       &&label$7541,
       &&label$7542,
       &&label$7543,
       &&label$7544,
       &&label$7545,
       &&label$7546,
       &&label$7547,
       &&label$7548,
       &&label$7549,
       &&label$7550,
       &&label$7551,
       &&label$7552,
       &&label$7553,
       &&label$7554,
       &&label$7555,
       &&label$7556,
       &&label$7557,
       &&label$7558,
       &&label$7559,
      };
      if( TMP$3968$6 > 150ull ) goto label$7408;
      goto *tmp$4385[TMP$3968$6 - 0ull];
      label$7408:;
     }
    }
    goto label$5327;
    label$5328:;
    static const void* tmp$4386[23ll] = {
     &&label$5329,
     &&label$5391,
     &&label$5392,
     &&label$5393,
     &&label$5394,
     &&label$5395,
     &&label$5400,
     &&label$5659,
     &&label$5327,
     &&label$5918,
     &&label$5932,
     &&label$5933,
     &&label$5934,
     &&label$5935,
     &&label$5936,
     &&label$5937,
     &&label$5938,
     &&label$5964,
     &&label$6222,
     &&label$6481,
     &&label$6989,
     &&label$7153,
     &&label$7407,
    };
    if( TMP$2195$4 > 22ull ) goto label$5327;
    goto *tmp$4386[TMP$2195$4 - 0ull];
    label$5327:;
   }
  }
  goto label$5250;
  label$5325:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$7560;
  label$7561:;
  {
   {
    if( V$1 != (double)(int64)*(uint8*)NIBBLES$ ) goto label$7563;
    label$7564:;
    {
     uint8 TMP$4121$5;
     uint8 TMP$4123$5;
     uint8 TMP$4125$5;
     uint8 TMP$4127$5;
     uint8 TMP$4129$5;
     uint8 TMP$4131$5;
     uint8 TMP$4133$5;
     uint8 TMP$4135$5;
     uint8 TMP$4137$5;
     uint8 TMP$4139$5;
     uint8 TMP$4141$5;
     uint8 TMP$4143$5;
     uint8 TMP$4145$5;
     uint8 TMP$4147$5;
     uint8 TMP$4149$5;
     uint8 TMP$4151$5;
     uint8 TMP$4153$5;
     uint8 TMP$4155$5;
     uint8 TMP$4157$5;
     uint8 TMP$4159$5;
     uint8 TMP$4161$5;
     uint8 TMP$4163$5;
     uint8 TMP$4165$5;
     uint8 TMP$4167$5;
     uint8 TMP$4169$5;
     uint8 TMP$4171$5;
     uint8 TMP$4173$5;
     uint8 TMP$4175$5;
     uint8 TMP$4177$5;
     uint8 TMP$4179$5;
     uint8 TMP$4181$5;
     uint8 TMP$4183$5;
     uint8 TMP$4185$5;
     uint8 TMP$4187$5;
     uint8 TMP$4189$5;
     uint8 TMP$4191$5;
     uint8 TMP$4193$5;
     uint8 TMP$4195$5;
     uint8 TMP$4197$5;
     uint8 TMP$4199$5;
     uint8 TMP$4201$5;
     uint8 TMP$4203$5;
     uint8 TMP$4212$5;
     uint8 TMP$4214$5;
     uint8 TMP$4216$5;
     fb_GfxScreenRes( 640, 480, 32, 0, 0, 0 );
     fb_Cls( -65536 );
     FBSTRING* vr$10216 = fb_StrAllocTempDescZEx( (uint8*)"blender --version > err.txt", 27ll );
     fb_Shell( (FBSTRING*)vr$10216 );
     FBSTRING* vr$10218 = fb_StrAllocTempDescZEx( (uint8*)"err.txt", 7ll );
     fb_FileOpen( (FBSTRING*)vr$10218, 2u, 0u, 0u, (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll), 0 );
     label$7565:;
     int32 vr$10220 = fb_FileEof( (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
     if( (int64)vr$10220 != 0ll ) goto label$7566;
     {
      fb_FileLineInput( (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll), (void*)&STRCODE$, -1ll, 0 );
      fb_PrintString( 0, (FBSTRING*)&STRCODE$, 1 );
     }
     goto label$7565;
     label$7566:;
     fb_FileClose( (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
     FBSTRING* vr$10225 = fb_StrAllocTempDescZEx( (uint8*)"tmp.py", 6ll );
     fb_FileOpen( (FBSTRING*)vr$10225, 3u, 0u, 0u, (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll), 0 );
     TMP$4121$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$10226 = fb_StrAllocTempDescZEx( (uint8*)"# Start of file", 15ll );
     fb_PrintString( (int32)TMP$4121$5, (FBSTRING*)vr$10226, 1 );
     TMP$4123$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$10228 = fb_StrAllocTempDescZEx( (uint8*)"import bpy,math,mathutils,bmesh,bgl,blf", 39ll );
     fb_PrintString( (int32)TMP$4123$5, (FBSTRING*)vr$10228, 1 );
     TMP$4125$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$10230 = fb_StrAllocTempDescZEx( (uint8*)"from math import radians", 24ll );
     fb_PrintString( (int32)TMP$4125$5, (FBSTRING*)vr$10230, 1 );
     TMP$4127$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$10232 = fb_StrAllocTempDescZEx( (uint8*)"from random import randint", 26ll );
     fb_PrintString( (int32)TMP$4127$5, (FBSTRING*)vr$10232, 1 );
     TMP$4129$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$10234 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.render.engine = 'CYCLES'", 42ll );
     fb_PrintString( (int32)TMP$4129$5, (FBSTRING*)vr$10234, 1 );
     TMP$4131$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$10236 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.render.resolution_x = 640", 43ll );
     fb_PrintString( (int32)TMP$4131$5, (FBSTRING*)vr$10236, 1 );
     TMP$4133$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$10238 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.render.resolution_y = 480", 43ll );
     fb_PrintString( (int32)TMP$4133$5, (FBSTRING*)vr$10238, 1 );
     TMP$4135$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$10240 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.render.resolution_percentage = 100", 52ll );
     fb_PrintString( (int32)TMP$4135$5, (FBSTRING*)vr$10240, 1 );
     TMP$4137$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$10242 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.render.image_settings.file_format = 'BMP'", 59ll );
     fb_PrintString( (int32)TMP$4137$5, (FBSTRING*)vr$10242, 1 );
     TMP$4139$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$10244 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.render.tile_x = 32", 36ll );
     fb_PrintString( (int32)TMP$4139$5, (FBSTRING*)vr$10244, 1 );
     TMP$4141$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$10246 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.render.tile_y = 32", 36ll );
     fb_PrintString( (int32)TMP$4141$5, (FBSTRING*)vr$10246, 1 );
     TMP$4143$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$10248 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.cycles.preview_samples = 1", 44ll );
     fb_PrintString( (int32)TMP$4143$5, (FBSTRING*)vr$10248, 1 );
     TMP$4145$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$10250 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.render.use_persistent_data = True", 51ll );
     fb_PrintString( (int32)TMP$4145$5, (FBSTRING*)vr$10250, 1 );
     TMP$4147$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$10252 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.cycles.use_progressive_refine = True", 54ll );
     fb_PrintString( (int32)TMP$4147$5, (FBSTRING*)vr$10252, 1 );
     TMP$4149$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$10254 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.render.use_save_buffers = True", 48ll );
     fb_PrintString( (int32)TMP$4149$5, (FBSTRING*)vr$10254, 1 );
     TMP$4151$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$10256 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.render.use_border = True", 42ll );
     fb_PrintString( (int32)TMP$4151$5, (FBSTRING*)vr$10256, 1 );
     TMP$4153$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$10258 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.cycles.device = 'CPU'", 39ll );
     fb_PrintString( (int32)TMP$4153$5, (FBSTRING*)vr$10258, 1 );
     TMP$4155$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$10260 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.cycles.max_bounces = 3", 40ll );
     fb_PrintString( (int32)TMP$4155$5, (FBSTRING*)vr$10260, 1 );
     TMP$4157$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$10262 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.cycles.min_bounces = 0", 40ll );
     fb_PrintString( (int32)TMP$4157$5, (FBSTRING*)vr$10262, 1 );
     TMP$4159$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$10264 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.cycles.diffuse_bounces = 3", 44ll );
     fb_PrintString( (int32)TMP$4159$5, (FBSTRING*)vr$10264, 1 );
     TMP$4161$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$10266 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.cycles.glossy_bounces = 3", 43ll );
     fb_PrintString( (int32)TMP$4161$5, (FBSTRING*)vr$10266, 1 );
     TMP$4163$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$10268 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.cycles.transmission_bounces = 1", 49ll );
     fb_PrintString( (int32)TMP$4163$5, (FBSTRING*)vr$10268, 1 );
     TMP$4165$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$10270 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.cycles.transparent_max_bounces = 4", 52ll );
     fb_PrintString( (int32)TMP$4165$5, (FBSTRING*)vr$10270, 1 );
     TMP$4167$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$10272 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.cycles.transparent_min_bounces = 0", 52ll );
     fb_PrintString( (int32)TMP$4167$5, (FBSTRING*)vr$10272, 1 );
     TMP$4169$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$10274 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.cycles.caustics_reflective = False", 52ll );
     fb_PrintString( (int32)TMP$4169$5, (FBSTRING*)vr$10274, 1 );
     TMP$4171$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$10276 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.cycles.caustics_refractive = False", 52ll );
     fb_PrintString( (int32)TMP$4171$5, (FBSTRING*)vr$10276, 1 );
     TMP$4173$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$10278 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.cycles.use_square_samples = True", 50ll );
     fb_PrintString( (int32)TMP$4173$5, (FBSTRING*)vr$10278, 1 );
     TMP$4175$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$10280 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.cycles.samples = 4", 36ll );
     fb_PrintString( (int32)TMP$4175$5, (FBSTRING*)vr$10280, 1 );
     TMP$4177$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$10282 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.cycles.debug_use_spatial_splits = True", 56ll );
     fb_PrintString( (int32)TMP$4177$5, (FBSTRING*)vr$10282, 1 );
     TMP$4179$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$10284 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.world.cycles.max_bounces = 1", 46ll );
     fb_PrintString( (int32)TMP$4179$5, (FBSTRING*)vr$10284, 1 );
     TMP$4181$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$10286 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.cycles.volume_bounces = 0", 43ll );
     fb_PrintString( (int32)TMP$4181$5, (FBSTRING*)vr$10286, 1 );
     TMP$4183$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$10288 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.object.data.cycles.is_portal = True", 47ll );
     fb_PrintString( (int32)TMP$4183$5, (FBSTRING*)vr$10288, 1 );
     TMP$4185$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$10290 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.cycles.debug_use_hair_bvh = False", 51ll );
     fb_PrintString( (int32)TMP$4185$5, (FBSTRING*)vr$10290, 1 );
     TMP$4187$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$10292 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.scene.cycles.shading_system = True", 46ll );
     fb_PrintString( (int32)TMP$4187$5, (FBSTRING*)vr$10292, 1 );
     TMP$4189$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$10294 = fb_StrAllocTempDescZEx( (uint8*)"bpy.data.objects['Light'].select_set(True)", 42ll );
     fb_PrintString( (int32)TMP$4189$5, (FBSTRING*)vr$10294, 1 );
     TMP$4191$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$10296 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.view_layer.objects.active = bpy.data.objects['Light']", 65ll );
     fb_PrintString( (int32)TMP$4191$5, (FBSTRING*)vr$10296, 1 );
     TMP$4193$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$10298 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.object.data.type = 'SUN'", 36ll );
     fb_PrintString( (int32)TMP$4193$5, (FBSTRING*)vr$10298, 1 );
     TMP$4195$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$10300 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.object.data.energy = 1", 34ll );
     fb_PrintString( (int32)TMP$4195$5, (FBSTRING*)vr$10300, 1 );
     TMP$4197$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$10302 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.object.data.use_shadow = True", 41ll );
     fb_PrintString( (int32)TMP$4197$5, (FBSTRING*)vr$10302, 1 );
     TMP$4199$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$10304 = fb_StrAllocTempDescZEx( (uint8*)"bpy.data.objects['Cube'].select_set(True)", 41ll );
     fb_PrintString( (int32)TMP$4199$5, (FBSTRING*)vr$10304, 1 );
     TMP$4201$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$10306 = fb_StrAllocTempDescZEx( (uint8*)"bpy.context.view_layer.objects.active = bpy.data.objects['Cube']", 64ll );
     fb_PrintString( (int32)TMP$4201$5, (FBSTRING*)vr$10306, 1 );
     TMP$4203$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$10308 = fb_StrAllocTempDescZEx( (uint8*)"scene = bpy.data.scenes[\x22Scene\x22]", 32ll );
     fb_PrintString( (int32)TMP$4203$5, (FBSTRING*)vr$10308, 1 );
     label$7567:;
     {
      FBSTRING* vr$10310 = fb_StrAllocTempDescZEx( (uint8*)"BLENDER:\x5C> ", 11ll );
      fb_LineInput( (FBSTRING*)vr$10310, (void*)&STRCODE$, -1ll, 0, 0, -1 );
      int32 vr$10311 = fb_StrCompare( (void*)&STRCODE$, -1ll, (void*)"", 1ll );
      if( (int64)vr$10311 == 0ll ) goto label$7571;
      {
       uint8 TMP$4211$7;
       TMP$4211$7 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
       fb_PrintString( (int32)TMP$4211$7, (FBSTRING*)&STRCODE$, 1 );
      }
      goto label$7570;
      label$7571:;
      {
       goto label$7568;
       label$7570:;
      }
     }
     label$7569:;
     goto label$7567;
     label$7568:;
     TMP$4212$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$10314 = fb_StrAllocTempDescZEx( (uint8*)"bpy.data.scenes['Scene'].render.filepath = './tmp'", 50ll );
     fb_PrintString( (int32)TMP$4212$5, (FBSTRING*)vr$10314, 1 );
     TMP$4214$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$10316 = fb_StrAllocTempDescZEx( (uint8*)"bpy.ops.render.render(use_viewport = True, write_still=True)", 60ll );
     fb_PrintString( (int32)TMP$4214$5, (FBSTRING*)vr$10316, 1 );
     TMP$4216$5 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
     FBSTRING* vr$10318 = fb_StrAllocTempDescZEx( (uint8*)"# End of file", 13ll );
     fb_PrintString( (int32)TMP$4216$5, (FBSTRING*)vr$10318, 1 );
     fb_FileClose( (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
     fb_Cls( -65536 );
     FBSTRING* vr$10321 = fb_StrAllocTempDescZEx( (uint8*)"blender -b -P tmp.py", 20ll );
     fb_Shell( (FBSTRING*)vr$10321 );
     FBSTRING* vr$10322 = fb_StrAllocTempDescZEx( (uint8*)"tmp.bmp", 7ll );
     fb_GfxBload( (FBSTRING*)vr$10322, (void*)0ull, (void*)0ull );
     FBSTRING* vr$10323 = fb_StrAllocTempDescZEx( (uint8*)"rm tmp.py tmp.bmp", 17ll );
     fb_Shell( (FBSTRING*)vr$10323 );
     fb_Locate( 60, 1, -1, 0, 0 );
     FBSTRING* vr$10324 = fb_StrAllocTempDescZEx( (uint8*)"Press any key to continue.", 26ll );
     fb_PrintString( 0, (FBSTRING*)vr$10324, 1 );
     fb_Sleep( -1 );
     fb_GfxScreenRes( 1920, 1080, 32, 0, 0, 0 );
     fb_Cls( -65536 );
    }
    goto label$7562;
    label$7563:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$7572;
    label$7573:;
    {
     fb_GfxScreenRes( 640, 480, 32, 0, 0, 0 );
     fb_Cls( -65536 );
     FBSTRING* vr$10327 = fb_StrAllocTempDescZEx( (uint8*)"cobc -V > err.txt", 17ll );
     fb_Shell( (FBSTRING*)vr$10327 );
     FBSTRING* vr$10329 = fb_StrAllocTempDescZEx( (uint8*)"err.txt", 7ll );
     fb_FileOpen( (FBSTRING*)vr$10329, 2u, 0u, 0u, (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll), 0 );
     label$7574:;
     int32 vr$10331 = fb_FileEof( (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
     if( (int64)vr$10331 != 0ll ) goto label$7575;
     {
      fb_FileLineInput( (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll), (void*)&STRCODE$, -1ll, 0 );
      fb_PrintString( 0, (FBSTRING*)&STRCODE$, 1 );
     }
     goto label$7574;
     label$7575:;
     fb_FileClose( (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
     FBSTRING* vr$10335 = fb_StrAllocTempDescZEx( (uint8*)"tmp.cob", 7ll );
     fb_FileOpen( (FBSTRING*)vr$10335, 3u, 0u, 0u, 2, 0 );
     label$7576:;
     {
      FBSTRING* vr$10336 = fb_StrAllocTempDescZEx( (uint8*)"COBOL:\x5C> ", 9ll );
      fb_LineInput( (FBSTRING*)vr$10336, (void*)&STRCODE$, -1ll, 0, 0, -1 );
      int32 vr$10337 = fb_StrCompare( (void*)&STRCODE$, -1ll, (void*)"", 1ll );
      if( (int64)vr$10337 == 0ll ) goto label$7580;
      {
       uint8 TMP$4225$7;
       TMP$4225$7 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
       fb_PrintString( (int32)TMP$4225$7, (FBSTRING*)&STRCODE$, 1 );
      }
      goto label$7579;
      label$7580:;
      {
       goto label$7577;
       label$7579:;
      }
     }
     label$7578:;
     goto label$7576;
     label$7577:;
     fb_FileClose( (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
     fb_Cls( -65536 );
     FBSTRING* vr$10341 = fb_StrAllocTempDescZEx( (uint8*)"cobc -x -free tmp.cob -o tmp", 28ll );
     fb_Shell( (FBSTRING*)vr$10341 );
     FBSTRING* vr$10342 = fb_StrAllocTempDescZEx( (uint8*)"./tmp > tmp.txt", 15ll );
     fb_Shell( (FBSTRING*)vr$10342 );
     FBSTRING* vr$10343 = fb_StrAllocTempDescZEx( (uint8*)"tmp.txt", 7ll );
     fb_FileOpen( (FBSTRING*)vr$10343, 2u, 0u, 0u, 2, 0 );
     label$7581:;
     int32 vr$10345 = fb_FileEof( (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
     if( (int64)vr$10345 != 0ll ) goto label$7582;
     {
      fb_FileLineInput( 2, (void*)&STRCODE$, -1ll, 0 );
      fb_PrintString( 0, (FBSTRING*)&STRCODE$, 1 );
     }
     goto label$7581;
     label$7582:;
     fb_FileClose( (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
     FBSTRING* vr$10348 = fb_StrAllocTempDescZEx( (uint8*)"rm tmp tmp.cob tmp.txt err.txt", 30ll );
     fb_Shell( (FBSTRING*)vr$10348 );
     FBSTRING* vr$10349 = fb_StrAllocTempDescZEx( (uint8*)"Press any key to continue.", 26ll );
     fb_PrintString( 0, (FBSTRING*)vr$10349, 1 );
     fb_Sleep( -1 );
     fb_GfxScreenRes( 1920, 1080, 32, 0, 0, 0 );
     fb_Cls( -65536 );
    }
    goto label$7562;
    label$7572:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) ) goto label$7583;
    label$7584:;
    {
     fb_GfxScreenRes( 800, 600, 32, 0, 0, 0 );
     fb_Cls( -65536 );
     FBSTRING* vr$10352 = fb_StrAllocTempDescZEx( (uint8*)"Persistence of Vision(tm) Ray Tracer 3.7.0.9", 44ll );
     fb_PrintString( 0, (FBSTRING*)vr$10352, 1 );
     FBSTRING* vr$10353 = fb_StrAllocTempDescZEx( (uint8*)"POV-Ray is based on DKBTrace 2.12 by David K. Buck & Aaron A. Collins", 69ll );
     fb_PrintString( 0, (FBSTRING*)vr$10353, 1 );
     FBSTRING* vr$10354 = fb_StrAllocTempDescZEx( (uint8*)"(C) 1991-2013 Persistence of Vision Raytracer Pty. Ltd.", 55ll );
     fb_PrintString( 0, (FBSTRING*)vr$10354, 1 );
     FBSTRING* vr$10356 = fb_StrAllocTempDescZEx( (uint8*)"tmp.pov", 7ll );
     fb_FileOpen( (FBSTRING*)vr$10356, 3u, 0u, 0u, (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll), 0 );
     label$7585:;
     {
      FBSTRING* vr$10357 = fb_StrAllocTempDescZEx( (uint8*)"POVRAY:\x5C> ", 10ll );
      fb_LineInput( (FBSTRING*)vr$10357, (void*)&STRCODE$, -1ll, 0, 0, -1 );
      int32 vr$10358 = fb_StrCompare( (void*)&STRCODE$, -1ll, (void*)"", 1ll );
      if( (int64)vr$10358 == 0ll ) goto label$7589;
      {
       uint8 TMP$4232$7;
       TMP$4232$7 = *(uint8*)((int64)(uint8*)NIBBLES$ + 2ll);
       fb_PrintString( (int32)TMP$4232$7, (FBSTRING*)&STRCODE$, 1 );
      }
      goto label$7588;
      label$7589:;
      {
       goto label$7586;
       label$7588:;
      }
     }
     label$7587:;
     goto label$7585;
     label$7586:;
     fb_FileClose( (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
     FBSTRING* vr$10362 = fb_StrAllocTempDescZEx( (uint8*)"povray tmp.pov", 14ll );
     fb_Shell( (FBSTRING*)vr$10362 );
     FBSTRING* vr$10363 = fb_StrAllocTempDescZEx( (uint8*)"convert tmp.png 0.bmp", 21ll );
     fb_Shell( (FBSTRING*)vr$10363 );
     FBSTRING* vr$10364 = fb_StrAllocTempDescZEx( (uint8*)"mv 0.bmp ./vram/0.bmp", 21ll );
     fb_Shell( (FBSTRING*)vr$10364 );
     FBSTRING* vr$10365 = fb_StrAllocTempDescZEx( (uint8*)"./vram/0.bmp", 12ll );
     fb_GfxBload( (FBSTRING*)vr$10365, (void*)0ull, (void*)0ull );
     fb_Locate( 60, 1, -1, 0, 0 );
     FBSTRING* vr$10366 = fb_StrAllocTempDescZEx( (uint8*)"Press any key to continue.", 26ll );
     fb_PrintString( 0, (FBSTRING*)vr$10366, 1 );
     fb_Sleep( -1 );
     fb_GfxScreenRes( 1920, 1080, 32, 0, 0, 0 );
     fb_Cls( -65536 );
    }
    goto label$7562;
    label$7583:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) ) goto label$7590;
    label$7591:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.bas", 8ll, 0 );
     fb_StrAssign( (void*)&COMPILER$, -1ll, (void*)"fbc ", 5ll, 0 );
    }
    goto label$7562;
    label$7590:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) ) goto label$7592;
    label$7593:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.bas", 8ll, 0 );
     fb_StrAssign( (void*)&COMPILER$, -1ll, (void*)"fbc -lang qb ", 14ll, 0 );
    }
    goto label$7562;
    label$7592:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) ) goto label$7594;
    label$7595:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.glsl", 9ll, 0 );
     fb_StrAssign( (void*)&COMPILER$, -1ll, (void*)"", 1ll, 0 );
    }
    goto label$7562;
    label$7594:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) ) goto label$7596;
    label$7597:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.cob", 8ll, 0 );
     fb_StrAssign( (void*)&COMPILER$, -1ll, (void*)"cobc -x -free ", 15ll, 0 );
    }
    goto label$7562;
    label$7596:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) ) goto label$7598;
    label$7599:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.f77", 8ll, 0 );
     fb_StrAssign( (void*)&COMPILER$, -1ll, (void*)"gfortran -std=legacy ", 22ll, 0 );
    }
    goto label$7562;
    label$7598:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) ) goto label$7600;
    label$7601:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.pas", 8ll, 0 );
     fb_StrAssign( (void*)&COMPILER$, -1ll, (void*)"fpc ", 5ll, 0 );
    }
    goto label$7562;
    label$7600:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll) ) goto label$7602;
    label$7603:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.osl", 8ll, 0 );
     fb_StrAssign( (void*)&COMPILER$, -1ll, (void*)"", 1ll, 0 );
    }
    goto label$7562;
    label$7602:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) ) goto label$7604;
    label$7605:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.pov", 8ll, 0 );
     fb_StrAssign( (void*)&COMPILER$, -1ll, (void*)"povray ", 8ll, 0 );
    }
    goto label$7562;
    label$7604:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll) ) goto label$7606;
    label$7607:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.java", 9ll, 0 );
     fb_StrAssign( (void*)&COMPILER$, -1ll, (void*)"java ", 6ll, 0 );
    }
    goto label$7562;
    label$7606:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) ) goto label$7608;
    label$7609:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.c", 6ll, 0 );
     fb_StrAssign( (void*)&COMPILER$, -1ll, (void*)"gcc ", 5ll, 0 );
    }
    goto label$7562;
    label$7608:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll) ) goto label$7610;
    label$7611:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.cpp", 8ll, 0 );
     fb_StrAssign( (void*)&COMPILER$, -1ll, (void*)"g++ ", 5ll, 0 );
    }
    goto label$7562;
    label$7610:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) ) goto label$7612;
    label$7613:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.cs", 7ll, 0 );
     fb_StrAssign( (void*)&COMPILER$, -1ll, (void*)"csc ", 5ll, 0 );
    }
    goto label$7562;
    label$7612:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) ) goto label$7614;
    label$7615:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.js", 7ll, 0 );
     fb_StrAssign( (void*)&COMPILER$, -1ll, (void*)"node ", 6ll, 0 );
    }
    goto label$7562;
    label$7614:;
    if( V$1 != (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$7616;
    label$7617:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.php", 8ll, 0 );
     fb_StrAssign( (void*)&COMPILER$, -1ll, (void*)"php -f ", 8ll, 0 );
    }
    goto label$7562;
    label$7616:;
    if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$7618;
    label$7619:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.py", 7ll, 0 );
     fb_StrAssign( (void*)&COMPILER$, -1ll, (void*)"python ", 8ll, 0 );
    }
    goto label$7562;
    label$7618:;
    if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$7620;
    label$7621:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.swift", 10ll, 0 );
     fb_StrAssign( (void*)&COMPILER$, -1ll, (void*)"swift ", 7ll, 0 );
    }
    goto label$7562;
    label$7620:;
    if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$7622;
    label$7623:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.m", 6ll, 0 );
     fb_StrAssign( (void*)&COMPILER$, -1ll, (void*)"octave --persist ", 18ll, 0 );
    }
    goto label$7562;
    label$7622:;
    if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$7624;
    label$7625:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.kt", 7ll, 0 );
     fb_StrAssign( (void*)&COMPILER$, -1ll, (void*)"kotlinc ", 9ll, 0 );
    }
    goto label$7562;
    label$7624:;
    if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$7626;
    label$7627:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.r", 6ll, 0 );
     fb_StrAssign( (void*)&COMPILER$, -1ll, (void*)"rscript ", 9ll, 0 );
    }
    goto label$7562;
    label$7626:;
    if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$7628;
    label$7629:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.dart", 9ll, 0 );
     fb_StrAssign( (void*)&COMPILER$, -1ll, (void*)"dart ", 6ll, 0 );
    }
    goto label$7562;
    label$7628:;
    if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$7630;
    label$7631:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.scala", 10ll, 0 );
     fb_StrAssign( (void*)&COMPILER$, -1ll, (void*)"scalac ", 8ll, 0 );
    }
    goto label$7562;
    label$7630:;
    if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$7632;
    label$7633:;
    {
     fb_FileOpen( (FBSTRING*)&FILENAME$, 3u, 0u, 0u, 1, 0 );
    }
    goto label$7562;
    label$7632:;
    if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$7634;
    label$7635:;
    {
     fb_FileClose( 1 );
    }
    goto label$7562;
    label$7634:;
    if( V$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$7636;
    label$7637:;
    {
     FBSTRING TMP$4273$5;
     FBSTRING TMP$4278$5;
     fb_GfxLine( FGIMAGE$, 0x0p+0f, 0x0p+0f, (float)SCR_W$, (float)SCR_H$, 4278190080u, 2, 65535u, 0 );
     __builtin_memset( &TMP$4273$5, 0, 24ll );
     FBSTRING* vr$10461 = fb_StrConcat( &TMP$4273$5, (void*)&COMPILER$, -1ll, (void*)&FILENAME$, -1ll );
     fb_Shell( (FBSTRING*)vr$10461 );
     FBSTRING* vr$10462 = fb_StrAllocTempDescZEx( (uint8*)"./tmp > tmp.txt", 15ll );
     fb_Shell( (FBSTRING*)vr$10462 );
     FBSTRING* vr$10463 = fb_StrAllocTempDescZEx( (uint8*)"tmp.txt", 7ll );
     fb_FileOpen( (FBSTRING*)vr$10463, 2u, 0u, 0u, 1, 0 );
     SCR_POS$ = 0ull;
     *(double*)((uint8*)THIS$1 + 394896ll) = 0x0p+0;
     *(double*)((uint8*)THIS$1 + 394904ll) = 0x0p+0;
     *(double*)((uint8*)THIS$1 + 394912ll) = 0x0p+0;
     label$7638:;
     int32 vr$10467 = fb_FileEof( 1 );
     if( (int64)vr$10467 != 0ll ) goto label$7639;
     {
      fb_FileLineInput( 1, (void*)&STRCODE$, -1ll, 0 );
      {
       INDEX$ = (uint16)1u;
       uint16 TMP$4274$7;
       int64 vr$10469 = fb_StrLen( (void*)&STRCODE$, -1ll );
       TMP$4274$7 = (uint16)vr$10469;
       goto label$7640;
       label$7643:;
       {
        FBSTRING* vr$10472 = fb_StrMid( (FBSTRING*)&STRCODE$, (int64)INDEX$, 1ll );
        uint32 vr$10473 = fb_ASC( (FBSTRING*)vr$10472, 1ll );
        *(double*)((uint8*)THIS$1 + 394888ll) = (double)vr$10473;
        if( ((int64)-(*(double*)((uint8*)THIS$1 + 394888ll) > 0x1.Fp+4) & (int64)-(*(double*)((uint8*)THIS$1 + 394888ll) < 0x1.p+6)) == 0ll ) goto label$7645;
        {
         *(double*)((uint8*)THIS$1 + 394888ll) = *(double*)((uint8*)THIS$1 + 394888ll) + 0x1.p+5;
         label$7645:;
        }
        _ZN8MEMORY_T5POKEBEdd( THIS$1, (double)((uint64)((int64)INDEX$ + 16383ll) + SCR_POS$), (double)(((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394888ll) + 0x1.p+5 )) & 63ll) );
       }
       label$7641:;
       INDEX$ = (uint16)((int64)INDEX$ + 1ll);
       label$7640:;
       if( (int64)INDEX$ <= (int64)TMP$4274$7 ) goto label$7643;
       label$7642:;
      }
      SCR_POS$ = SCR_POS$ + 90ull;
     }
     goto label$7638;
     label$7639:;
     SCR_POS$ = 5400ull;
     *(double*)((uint8*)THIS$1 + 394912ll) = 0x0p+0;
     fb_FileClose( 1 );
     fb_StrAssign( (void*)&STRCODE$, -1ll, (void*)"press any key to continue.", 27ll, 0 );
     {
      INDEX$ = (uint16)1u;
      uint16 TMP$4276$6;
      int64 vr$10500 = fb_StrLen( (void*)&STRCODE$, -1ll );
      TMP$4276$6 = (uint16)vr$10500;
      goto label$7646;
      label$7649:;
      {
       FBSTRING* vr$10503 = fb_StrMid( (FBSTRING*)&STRCODE$, (int64)INDEX$, 1ll );
       uint32 vr$10504 = fb_ASC( (FBSTRING*)vr$10503, 1ll );
       *(double*)((uint8*)THIS$1 + 394888ll) = (double)vr$10504;
       if( ((int64)-(*(double*)((uint8*)THIS$1 + 394888ll) > 0x1.Fp+4) & (int64)-(*(double*)((uint8*)THIS$1 + 394888ll) < 0x1.p+6)) == 0ll ) goto label$7651;
       {
        *(double*)((uint8*)THIS$1 + 394888ll) = *(double*)((uint8*)THIS$1 + 394888ll) + 0x1.p+5;
        label$7651:;
       }
       _ZN8MEMORY_T5POKEBEdd( THIS$1, (double)((uint64)((int64)INDEX$ + 16383ll) + SCR_POS$), (double)(((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394888ll) + 0x1.p+5 )) & 63ll) );
      }
      label$7647:;
      INDEX$ = (uint16)((int64)INDEX$ + 1ll);
      label$7646:;
      if( (int64)INDEX$ <= (int64)TMP$4276$6 ) goto label$7649;
      label$7648:;
     }
     __builtin_memset( &TMP$4278$5, 0, 24ll );
     FBSTRING* vr$10531 = fb_StrConcat( &TMP$4278$5, (void*)"rm ./tmp; ./", 13ll, (void*)&FILENAME$, -1ll );
     fb_Shell( (FBSTRING*)vr$10531 );
     SCR_POS$ = 0ull;
     fb_StrAssign( (void*)&STRCODE$, -1ll, (void*)"", 1ll, 0 );
     fb_GfxPut( (void*)0ull, 0x0p+0f, 0x0p+0f, (void*)FGIMAGE$, -65536, -65536, -65536, -65536, 0, 1, (void*)&fb_hPutPSet, -1, (void*)0ull, (void*)0ull );
     fb_Sleep( -1 );
     fb_GfxLine( FGIMAGE$, 0x0p+0f, 0x0p+0f, (float)SCR_W$, (float)SCR_H$, 4278190080u, 2, 65535u, 0 );
     fb_GfxPut( (void*)0ull, 0x0p+0f, 0x0p+0f, (void*)FGIMAGE$, -65536, -65536, -65536, -65536, 0, 1, (void*)&fb_hPutPSet, -1, (void*)0ull, (void*)0ull );
    }
    goto label$7562;
    label$7636:;
    if( V$1 != 0x1.Bp+4 ) goto label$7652;
    label$7653:;
    {
     *(double*)((uint8*)THIS$1 + 394840ll) = 0x0p+0;
     *(double*)((uint8*)THIS$1 + 394848ll) = 0x0p+0;
     fb_GfxLine( FGIMAGE$, 0x0p+0f, 0x0p+0f, (float)SCR_W$, (float)SCR_H$, 4278190080u, 2, 65535u, 0 );
     fb_FileOpen( (FBSTRING*)&FILENAME$, 0u, 0u, 0u, 1, 0 );
     SCR_POS$ = 0ull;
     *(double*)((uint8*)THIS$1 + 394896ll) = 0x0p+0;
     *(double*)((uint8*)THIS$1 + 394904ll) = 0x0p+0;
     *(double*)((uint8*)THIS$1 + 394912ll) = 0x0p+0;
     label$7654:;
     int32 vr$10541 = fb_FileEof( 1 );
     if( (int64)vr$10541 != 0ll ) goto label$7655;
     {
      fb_FileLineInput( 1, (void*)&STRCODE$, -1ll, 0 );
      {
       INDEX$ = (uint16)1u;
       uint16 TMP$4280$7;
       int64 vr$10543 = fb_StrLen( (void*)&STRCODE$, -1ll );
       TMP$4280$7 = (uint16)vr$10543;
       goto label$7656;
       label$7659:;
       {
        FBSTRING* vr$10546 = fb_StrMid( (FBSTRING*)&STRCODE$, (int64)INDEX$, 1ll );
        uint32 vr$10547 = fb_ASC( (FBSTRING*)vr$10546, 1ll );
        *(double*)((uint8*)THIS$1 + 394888ll) = (double)vr$10547;
        if( ((int64)-(*(double*)((uint8*)THIS$1 + 394888ll) > 0x1.Fp+4) & (int64)-(*(double*)((uint8*)THIS$1 + 394888ll) < 0x1.p+6)) == 0ll ) goto label$7661;
        {
         *(double*)((uint8*)THIS$1 + 394888ll) = *(double*)((uint8*)THIS$1 + 394888ll) + 0x1.p+5;
         label$7661:;
        }
        _ZN8MEMORY_T5POKEBEdd( THIS$1, (double)((uint64)((int64)INDEX$ + 16383ll) + SCR_POS$), (double)(((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394888ll) + 0x1.p+5 )) & 63ll) );
       }
       label$7657:;
       INDEX$ = (uint16)((int64)INDEX$ + 1ll);
       label$7656:;
       if( (int64)INDEX$ <= (int64)TMP$4280$7 ) goto label$7659;
       label$7658:;
      }
      SCR_POS$ = SCR_POS$ + 90ull;
     }
     goto label$7654;
     label$7655:;
     SCR_POS$ = 5400ull;
     *(double*)((uint8*)THIS$1 + 394912ll) = 0x0p+0;
     fb_FileClose( 1 );
     fb_StrAssign( (void*)&STRCODE$, -1ll, (void*)"press any key to continue.", 27ll, 0 );
     {
      INDEX$ = (uint16)1u;
      uint16 TMP$4281$6;
      int64 vr$10574 = fb_StrLen( (void*)&STRCODE$, -1ll );
      TMP$4281$6 = (uint16)vr$10574;
      goto label$7662;
      label$7665:;
      {
       FBSTRING* vr$10577 = fb_StrMid( (FBSTRING*)&STRCODE$, (int64)INDEX$, 1ll );
       uint32 vr$10578 = fb_ASC( (FBSTRING*)vr$10577, 1ll );
       *(double*)((uint8*)THIS$1 + 394888ll) = (double)vr$10578;
       if( ((int64)-(*(double*)((uint8*)THIS$1 + 394888ll) > 0x1.Fp+4) & (int64)-(*(double*)((uint8*)THIS$1 + 394888ll) < 0x1.p+6)) == 0ll ) goto label$7667;
       {
        *(double*)((uint8*)THIS$1 + 394888ll) = *(double*)((uint8*)THIS$1 + 394888ll) + 0x1.p+5;
        label$7667:;
       }
       _ZN8MEMORY_T5POKEBEdd( THIS$1, (double)((uint64)((int64)INDEX$ + 16383ll) + SCR_POS$), (double)(((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394888ll) + 0x1.p+5 )) & 63ll) );
      }
      label$7663:;
      INDEX$ = (uint16)((int64)INDEX$ + 1ll);
      label$7662:;
      if( (int64)INDEX$ <= (int64)TMP$4281$6 ) goto label$7665;
      label$7664:;
     }
     SCR_POS$ = 0ull;
     fb_StrAssign( (void*)&STRCODE$, -1ll, (void*)"", 1ll, 0 );
     fb_GfxPut( (void*)0ull, 0x0p+0f, 0x0p+0f, (void*)FGIMAGE$, -65536, -65536, -65536, -65536, 0, 1, (void*)&fb_hPutPSet, -1, (void*)0ull, (void*)0ull );
     fb_Sleep( -1 );
     fb_GfxLine( FGIMAGE$, 0x0p+0f, 0x0p+0f, (float)SCR_W$, (float)SCR_H$, 4278190080u, 2, 65535u, 0 );
     fb_GfxPut( (void*)0ull, 0x0p+0f, 0x0p+0f, (void*)FGIMAGE$, -65536, -65536, -65536, -65536, 0, 1, (void*)&fb_hPutPSet, -1, (void*)0ull, (void*)0ull );
    }
    goto label$7562;
    label$7652:;
    if( V$1 != 0x1.Cp+4 ) goto label$7668;
    label$7669:;
    {
     fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"", 1ll, 0 );
    }
    label$7668:;
    label$7562:;
   }
  }
  goto label$5250;
  label$7560:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$7670;
  label$7671:;
  {
   fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"tmp.glsl", 9ll, 0 );
   _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8142p+15, 0x0p+0 );
  }
  goto label$5250;
  label$7670:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$7672;
  label$7673:;
  {
   int64 TMP$4283$3;
   int64 TMP$4284$3;
   int64 X$3;
   __builtin_memset( &X$3, 0, 8ll );
   int64 Y$3;
   __builtin_memset( &Y$3, 0, 8ll );
   int64 WHEEL$3;
   __builtin_memset( &WHEEL$3, 0, 8ll );
   int64 BUTTONS$3;
   __builtin_memset( &BUTTONS$3, 0, 8ll );
   int64 RES$3;
   __builtin_memset( &RES$3, 0, 8ll );
   TMP$4284$3 = 0ll;
   TMP$4283$3 = 0ll;
   int32 vr$10635 = fb_GetMouse64( (int64*)&X$3, (int64*)&Y$3, &TMP$4283$3, (int64*)&BUTTONS$3, &TMP$4284$3 );
   *(double*)((uint8*)THIS$1 + 394576ll) = (double)vr$10635;
   *(double*)((uint8*)THIS$1 + 394840ll) = (double)X$3;
   *(double*)((uint8*)THIS$1 + 394848ll) = (double)Y$3;
   *(double*)((uint8*)THIS$1 + 394856ll) = (double)WHEEL$3;
   if( (BUTTONS$3 & 1ll) == 0ll ) goto label$7675;
   {
    *(double*)((uint8*)THIS$1 + 394864ll) = 0x1.p+0;
    label$7675:;
   }
   if( (BUTTONS$3 & 2ll) == 0ll ) goto label$7677;
   {
    *(double*)((uint8*)THIS$1 + 394864ll) = 0x1.p+1;
    label$7677:;
   }
   if( (BUTTONS$3 & 4ll) == 0ll ) goto label$7679;
   {
    *(double*)((uint8*)THIS$1 + 394864ll) = 0x1.p+2;
    label$7679:;
   }
  }
  goto label$5250;
  label$7672:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$7680;
  label$7681:;
  {
   fb_PageCopy( ((int32)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394840ll) )), ((int32)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394848ll) )) );
  }
  goto label$5250;
  label$7680:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$7682;
  label$7683:;
  {
   FBSTRING TMP$4287$3;
   FBSTRING TMP$4288$3;
   uint8 TMP$3;
   __builtin_memset( &TMP$3, 0, 1ll );
   {
    int64 C$4;
    C$4 = 0ll;
    label$7687:;
    {
     *(double*)((uint8*)((uint8*)THIS$1 + (C$4 << (3ll & 63ll))) + 134479872ll) = 0x0p+0;
    }
    label$7685:;
    C$4 = C$4 + 1ll;
    label$7684:;
    if( C$4 <= 8191ll ) goto label$7687;
    label$7686:;
   }
   FBSTRING* vr$10678 = fb_DoubleToStr( V$1 );
   __builtin_memset( &TMP$4287$3, 0, 24ll );
   FBSTRING* vr$10681 = fb_StrConcat( &TMP$4287$3, (void*)"./chargen/", 11ll, (void*)vr$10678, -1ll );
   __builtin_memset( &TMP$4288$3, 0, 24ll );
   FBSTRING* vr$10684 = fb_StrConcat( &TMP$4288$3, (void*)vr$10681, -1ll, (void*)".c64", 5ll );
   fb_FileOpen( (FBSTRING*)vr$10684, 0u, 0u, 0u, 1, 0 );
   {
    int64 I$4;
    I$4 = 0ll;
    int64 TMP$4289$4;
    int64 vr$10685 = fb_FileSize( 1 );
    TMP$4289$4 = vr$10685;
    goto label$7688;
    label$7691:;
    {
     fb_FileGetLarge( 1, 0ll, (void*)&TMP$3, 1ull );
     *(double*)((uint8*)((uint8*)THIS$1 + (I$4 << (3ll & 63ll))) + 134479872ll) = (double)TMP$3;
    }
    label$7689:;
    I$4 = I$4 + 1ll;
    label$7688:;
    if( I$4 <= TMP$4289$4 ) goto label$7691;
    label$7690:;
   }
   fb_FileClose( 1 );
  }
  goto label$5250;
  label$7682:;
  if( ADR$1 == (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$7693;
  label$7694:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$7692;
  label$7693:;
  {
   {
    if( V$1 < (double)(int64)*(uint8*)NIBBLES$ ) goto label$7696;
    if( V$1 > (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) ) goto label$7696;
    label$7697:;
    {
     int64 vr$10721 = _Z6MODULOll( ((int64)__builtin_nearbyint( V$1 )), ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) );
     _ZN8MEMORY_T6POKE64Edd( THIS$1, (double)FCOLOR$, (double)vr$10721 );
    }
    goto label$7695;
    label$7696:;
    if( V$1 < (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$7698;
    if( V$1 > (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$7698;
    label$7699:;
    {
     _ZN8MEMORY_T6POKE64Edd( THIS$1, (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)), (double)(((((int64)__builtin_nearbyint( V$1 - (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) )) % (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) * (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll))) % (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) );
    }
    goto label$7695;
    label$7698:;
    if( V$1 < (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$7700;
    if( V$1 > (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$7700;
    label$7701:;
    {
     _ZN8MEMORY_T6POKE64Edd( THIS$1, (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)), (double)(((((int64)__builtin_nearbyint( V$1 - (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) )) % (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) * (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll))) % (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) );
    }
    goto label$7695;
    label$7700:;
    if( V$1 < (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$7702;
    if( V$1 > (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$7702;
    label$7703:;
    {
     _ZN8MEMORY_T6POKE64Edd( THIS$1, (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)), (double)(((((int64)__builtin_nearbyint( V$1 - (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) )) % (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) * (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll))) % (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) );
    }
    goto label$7695;
    label$7702:;
    {
     _ZN8MEMORY_T6POKE64Edd( THIS$1, (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)), (double)(((((int64)__builtin_nearbyint( V$1 - (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) )) % (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) * (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll))) % (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) );
    }
    label$7704:;
    label$7695:;
   }
   if( ADR$1 != 0x1.81D8p+15 ) goto label$7706;
   {
    double vr$10878 = _ZN8MEMORY_T6PEEK64Ed( THIS$1, 0x1.8192p+15 );
    _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.A04p+15, vr$10878 );
    double vr$10879 = _ZN8MEMORY_T6PEEK64Ed( THIS$1, 0x1.8192p+15 );
    _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.A042p+15, vr$10879 );
   }
   label$7706:;
   label$7705:;
  }
  goto label$5250;
  label$7692:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$7707;
  label$7708:;
  {
   {
    if( V$1 < (double)(int64)*(uint8*)NIBBLES$ ) goto label$7710;
    if( V$1 > (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) ) goto label$7710;
    label$7711:;
    {
     int64 vr$10900 = _Z6MODULOll( ((int64)__builtin_nearbyint( V$1 )), ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) );
     _ZN8MEMORY_T6POKE64Edd( THIS$1, (double)BGCOL0$, (double)vr$10900 );
    }
    goto label$7709;
    label$7710:;
    if( V$1 < (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$7712;
    if( V$1 > (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$7712;
    label$7713:;
    {
     _ZN8MEMORY_T6POKE64Edd( THIS$1, (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)), (double)(((((int64)__builtin_nearbyint( V$1 - (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) )) % (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) * (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll))) % (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) );
    }
    goto label$7709;
    label$7712:;
    if( V$1 < (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$7714;
    if( V$1 > (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$7714;
    label$7715:;
    {
     _ZN8MEMORY_T6POKE64Edd( THIS$1, (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)), (double)(((((int64)__builtin_nearbyint( V$1 - (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) )) % (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) * (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll))) % (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) );
    }
    goto label$7709;
    label$7714:;
    if( V$1 < (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) ) goto label$7716;
    if( V$1 > (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$7716;
    label$7717:;
    {
     _ZN8MEMORY_T6POKE64Edd( THIS$1, (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)), (double)(((((int64)__builtin_nearbyint( V$1 - (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) )) % (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) * (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll))) % (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) );
    }
    goto label$7709;
    label$7716:;
    {
     _ZN8MEMORY_T6POKE64Edd( THIS$1, (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)), (double)(((((int64)__builtin_nearbyint( V$1 - (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) )) % (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) * (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll))) % (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) );
    }
    label$7718:;
    label$7709:;
   }
  }
  goto label$5250;
  label$7707:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$7719;
  label$7720:;
  {
   fb_GfxLine( FGIMAGE$, (float)*(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))), (float)*(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) << (3ll & 63ll))), (float)*(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) << (3ll & 63ll))), (float)*(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) << (3ll & 63ll))), (uint32)((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) << (3ll & 63ll))) )), 2, 65535u, 0 );
  }
  goto label$5250;
  label$7719:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$7721;
  label$7722:;
  {
   fb_GfxLine( FGIMAGE$, (float)*(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))), (float)*(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) << (3ll & 63ll))), (float)*(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) << (3ll & 63ll))), (float)*(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) << (3ll & 63ll))), (uint32)((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) << (3ll & 63ll))) )), 2, 65535u, 0 );
  }
  goto label$5250;
  label$7721:;
  if( ADR$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) ) goto label$7723;
  label$7724:;
  {
   fb_GfxScreen( 0, 8, 0, 0, 0 );
   fb_Chain( (FBSTRING*)&STRCODE$ );
   fb_StrAssign( (void*)&STRCODE$, -1ll, (void*)"", 1ll, 0 );
   fb_GfxScreenRes( 1920, 1080, 32, 0, 65, 0 );
   fb_Cls( -65536 );
   FBSTRING* vr$11205 = fb_StrAllocTempDescZEx( (uint8*)"", 0ll );
   fb_GfxPaint( (void*)0ull, 0x0p+0f, 0x0p+0f, 4278190080u, 0u, (FBSTRING*)vr$11205, 0, 1073741828 );
   {
    OFFSET$ = 0x0p+0;
    label$7728:;
    {
     _ZN8MEMORY_T6POKE64Edd( THIS$1, *(double*)((uint8*)THIS$1 + 395608ll) + OFFSET$, 0x1.p+5 );
    }
    label$7726:;
    OFFSET$ = OFFSET$ + 0x1.p+0;
    label$7725:;
    if( OFFSET$ <= 0x1.p+10 ) goto label$7728;
    label$7727:;
   }
  }
  goto label$5250;
  label$7723:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) ) goto label$7729;
  label$7730:;
  {
   FBSTRING TMP$4291$3;
   fb_GfxScreen( 0, 8, 0, 0, 0 );
   __builtin_memset( &TMP$4291$3, 0, 24ll );
   FBSTRING* vr$11221 = fb_StrConcat( &TMP$4291$3, (void*)"wine ", 6ll, (void*)&STRCODE$, -1ll );
   fb_Shell( (FBSTRING*)vr$11221 );
   fb_StrAssign( (void*)&STRCODE$, -1ll, (void*)"", 1ll, 0 );
   fb_GfxScreenRes( 1920, 1080, 32, 0, 65, 0 );
   fb_Cls( -65536 );
   FBSTRING* vr$11222 = fb_StrAllocTempDescZEx( (uint8*)"", 0ll );
   fb_GfxPaint( (void*)0ull, 0x0p+0f, 0x0p+0f, 4278190080u, 0u, (FBSTRING*)vr$11222, 0, 1073741828 );
   {
    OFFSET$ = 0x0p+0;
    label$7734:;
    {
     _ZN8MEMORY_T6POKE64Edd( THIS$1, *(double*)((uint8*)THIS$1 + 395608ll) + OFFSET$, 0x1.p+5 );
    }
    label$7732:;
    OFFSET$ = OFFSET$ + 0x1.p+0;
    label$7731:;
    if( OFFSET$ <= 0x1.p+10 ) goto label$7734;
    label$7733:;
   }
  }
  goto label$5250;
  label$7729:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$7735;
  label$7736:;
  {
   FBSTRING TMP$4294$3;
   FBSTRING TMP$4295$3;
   fb_GfxScreen( 0, 8, 0, 0, 0 );
   __builtin_memset( &TMP$4294$3, 0, 24ll );
   FBSTRING* vr$11238 = fb_StrConcat( &TMP$4294$3, (void*)"dosbox-x ", 10ll, (void*)&STRCODE$, -1ll );
   __builtin_memset( &TMP$4295$3, 0, 24ll );
   FBSTRING* vr$11241 = fb_StrConcat( &TMP$4295$3, (void*)vr$11238, -1ll, (void*)" -fullscreen -exit", 19ll );
   fb_Shell( (FBSTRING*)vr$11241 );
   fb_StrAssign( (void*)&STRCODE$, -1ll, (void*)"", 1ll, 0 );
   fb_GfxScreenRes( 1920, 1080, 32, 0, 65, 0 );
   fb_Cls( -65536 );
   FBSTRING* vr$11242 = fb_StrAllocTempDescZEx( (uint8*)"", 0ll );
   fb_GfxPaint( (void*)0ull, 0x0p+0f, 0x0p+0f, 4278190080u, 0u, (FBSTRING*)vr$11242, 0, 1073741828 );
  }
  goto label$5250;
  label$7735:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$7737;
  label$7738:;
  {
   FBSTRING TMP$4297$3;
   __builtin_memset( &TMP$4297$3, 0, 24ll );
   FBSTRING* vr$11255 = fb_StrConcat( &TMP$4297$3, (void*)&STRCODE$, -1ll, (void*)".asm", 5ll );
   fb_FileOpen( (FBSTRING*)vr$11255, 3u, 0u, 0u, 1, 0 );
   fb_StrAssign( (void*)&STRCODE$, -1ll, (void*)"", 1ll, 0 );
  }
  goto label$5250;
  label$7737:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$7739;
  label$7740:;
  {
   fb_PrintString( 1, (FBSTRING*)&STRCODE$, 1 );
   fb_StrAssign( (void*)&STRCODE$, -1ll, (void*)"", 1ll, 0 );
  }
  goto label$5250;
  label$7739:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll)) ) goto label$7741;
  label$7742:;
  {
   fb_FileClose( 1 );
   fb_StrAssign( (void*)&STRCODE$, -1ll, (void*)"", 1ll, 0 );
  }
  goto label$5250;
  label$7741:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll)) ) goto label$7743;
  label$7744:;
  {
   FBSTRING TMP$4301$3;
   FBSTRING TMP$4302$3;
   FBSTRING TMP$4303$3;
   FBSTRING TMP$4304$3;
   __builtin_memset( &TMP$4301$3, 0, 24ll );
   FBSTRING* vr$11288 = fb_StrConcat( &TMP$4301$3, (void*)"nasm ", 6ll, (void*)&STRCODE$, -1ll );
   __builtin_memset( &TMP$4302$3, 0, 24ll );
   FBSTRING* vr$11291 = fb_StrConcat( &TMP$4302$3, (void*)vr$11288, -1ll, (void*)".asm -f bin -o", 15ll );
   __builtin_memset( &TMP$4303$3, 0, 24ll );
   FBSTRING* vr$11294 = fb_StrConcat( &TMP$4303$3, (void*)vr$11291, -1ll, (void*)&STRCODE$, -1ll );
   __builtin_memset( &TMP$4304$3, 0, 24ll );
   FBSTRING* vr$11297 = fb_StrConcat( &TMP$4304$3, (void*)vr$11294, -1ll, (void*)".bin", 5ll );
   fb_Shell( (FBSTRING*)vr$11297 );
   fb_StrAssign( (void*)&STRCODE$, -1ll, (void*)"", 1ll, 0 );
  }
  goto label$5250;
  label$7743:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) ) goto label$7745;
  label$7746:;
  {
   FBSTRING TMP$4307$3;
   FBSTRING TMP$4308$3;
   FBSTRING TMP$4309$3;
   FBSTRING TMP$4311$3;
   fb_GfxScreen( 0, 8, 0, 0, 0 );
   __builtin_memset( &TMP$4307$3, 0, 24ll );
   FBSTRING* vr$11310 = fb_StrConcat( &TMP$4307$3, (void*)"dosbox-x -c 'boot ", 19ll, (void*)&STRCODE$, -1ll );
   __builtin_memset( &TMP$4308$3, 0, 24ll );
   FBSTRING* vr$11313 = fb_StrConcat( &TMP$4308$3, (void*)vr$11310, -1ll, (void*)"'", 2ll );
   __builtin_memset( &TMP$4309$3, 0, 24ll );
   FBSTRING* vr$11316 = fb_StrConcat( &TMP$4309$3, (void*)vr$11313, -1ll, (void*)" -exit", 7ll );
   fb_Shell( (FBSTRING*)vr$11316 );
   __builtin_memset( &TMP$4311$3, 0, 24ll );
   FBSTRING* vr$11319 = fb_StrConcat( &TMP$4311$3, (void*)"rm ", 4ll, (void*)&STRCODE$, -1ll );
   fb_Shell( (FBSTRING*)vr$11319 );
   fb_StrAssign( (void*)&STRCODE$, -1ll, (void*)"", 1ll, 0 );
   fb_GfxScreenRes( 1920, 1080, 32, 0, 65, 0 );
   fb_Cls( -65536 );
   FBSTRING* vr$11320 = fb_StrAllocTempDescZEx( (uint8*)"", 0ll );
   fb_GfxPaint( (void*)0ull, 0x0p+0f, 0x0p+0f, 4278190080u, 0u, (FBSTRING*)vr$11320, 0, 1073741828 );
   {
    OFFSET$ = 0x0p+0;
    label$7750:;
    {
     _ZN8MEMORY_T6POKE64Edd( THIS$1, *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( SYS_OFFSET$ + 0x1.2Bp+8 )) << (3ll & 63ll))) + OFFSET$, 0x1.p+5 );
    }
    label$7748:;
    OFFSET$ = OFFSET$ + 0x1.p+0;
    label$7747:;
    if( OFFSET$ <= 0x1.p+10 ) goto label$7750;
    label$7749:;
   }
  }
  goto label$5250;
  label$7745:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) ) goto label$7751;
  label$7752:;
  {
   fb_Shell( (FBSTRING*)&STRCODE$ );
   fb_StrAssign( (void*)&STRCODE$, -1ll, (void*)"", 1ll, 0 );
  }
  goto label$5250;
  label$7751:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) ) goto label$7753;
  label$7754:;
  {
   SWCH$ = V$1;
  }
  goto label$5250;
  label$7753:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) ) goto label$7755;
  label$7756:;
  {
   FBSTRING* vr$11358 = fb_CHR( 1, ((int64)__builtin_nearbyint( V$1 )) );
   FBSTRING* vr$11359 = fb_StrLcase2( (FBSTRING*)vr$11358, 0 );
   fb_StrConcatAssign( (void*)&STRCODE$, -1ll, (void*)vr$11359, -1ll, 0 );
  }
  goto label$5250;
  label$7755:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$7757;
  label$7758:;
  {
   fb_PrintString( 1, (FBSTRING*)&STRCODE$, 1 );
   fb_StrAssign( (void*)&STRCODE$, -1ll, (void*)"", 1ll, 0 );
  }
  goto label$5250;
  label$7757:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) ) goto label$7759;
  label$7760:;
  {
   *(double*)((uint8*)THIS$1 + ((int64)RVS$ << (3ll & 63ll))) = V$1;
   if( (((int64)__builtin_nearbyint( *(double*)((uint8*)((uint8*)THIS$1 + (C$ << (3ll & 63ll))) + 134479872ll) )) & (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) >> (X$ & 63ll))) == 0ll ) goto label$7762;
   {
    if( *(double*)((uint8*)THIS$1 + ((int64)RVS$ << (3ll & 63ll))) == (double)(int64)*(uint8*)NIBBLES$ ) goto label$7764;
    {
     _ZN8MEMORY_T6POKE64Edd( THIS$1, (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)), (double)*(uint8*)NIBBLES$ );
    }
    goto label$7763;
    label$7764:;
    {
     _ZN8MEMORY_T6POKE64Edd( THIS$1, (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)), (double)*(uint8*)NIBBLES$ );
     label$7763:;
    }
   }
   goto label$7761;
   label$7762:;
   {
    if( *(double*)((uint8*)THIS$1 + ((int64)RVS$ << (3ll & 63ll))) == (double)(int64)*(uint8*)NIBBLES$ ) goto label$7766;
    {
     _ZN8MEMORY_T6POKE64Edd( THIS$1, (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)), (double)*(uint8*)NIBBLES$ );
    }
    goto label$7765;
    label$7766:;
    {
     _ZN8MEMORY_T6POKE64Edd( THIS$1, (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)), (double)*(uint8*)NIBBLES$ );
     label$7765:;
    }
   }
   label$7761:;
  }
  goto label$5250;
  label$7759:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) ) goto label$7767;
  label$7768:;
  {
   fb_FileClose( 1 );
  }
  goto label$5250;
  label$7767:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll)) ) goto label$7769;
  label$7770:;
  {
   FBSTRING* vr$11466 = fb_CHR( 1, ((int64)__builtin_nearbyint( V$1 )) );
   FBSTRING* vr$11467 = fb_StrLcase2( (FBSTRING*)vr$11466, 0 );
   fb_StrConcatAssign( (void*)&FILENAME$, -1ll, (void*)vr$11467, -1ll, 0 );
  }
  goto label$5250;
  label$7769:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$7771;
  label$7772:;
  {
   _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8142p+15, 0x0p+0 );
   fb_StrAssign( (void*)&FILENAME$, -1ll, (void*)"", 1ll, 0 );
  }
  goto label$5250;
  label$7771:;
  if( ADR$1 != (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) ) goto label$7773;
  label$7774:;
  {
   {
    if( V$1 != (double)(int64)*(uint8*)NIBBLES$ ) goto label$7776;
    label$7777:;
    {
     *(double*)((uint8*)THIS$1 + 395032ll) = 0x0p+0;
     *(double*)((uint8*)THIS$1 + 395040ll) = 0x0p+0;
    }
    goto label$7775;
    label$7776:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$7778;
    label$7779:;
    {
     *(double*)((uint8*)THIS$1 + 395032ll) = 0x1.91p+9;
     *(double*)((uint8*)THIS$1 + 395040ll) = 0x0p+0;
    }
    goto label$7775;
    label$7778:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) ) goto label$7780;
    label$7781:;
    {
     *(double*)((uint8*)THIS$1 + 395032ll) = 0x0p+0;
     *(double*)((uint8*)THIS$1 + 395040ll) = 0x1.86p+8;
    }
    goto label$7775;
    label$7780:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) ) goto label$7782;
    label$7783:;
    {
     *(double*)((uint8*)THIS$1 + 395032ll) = 0x1.91p+9;
     *(double*)((uint8*)THIS$1 + 395040ll) = 0x1.86p+8;
    }
    label$7782:;
    label$7775:;
   }
  }
  goto label$5250;
  label$7773:;
  if( ADR$1 != 0x1.8202p+15 ) goto label$7784;
  label$7785:;
  {
   {
    if( V$1 != (double)(int64)*(uint8*)NIBBLES$ ) goto label$7787;
    label$7788:;
    {
     {
      X$ = ((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394952ll) ));
      int64 TMP$4312$6;
      TMP$4312$6 = ((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394960ll) ));
      goto label$7789;
      label$7792:;
      {
       {
        Y$ = ((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394168ll) ));
        int64 TMP$4313$8;
        TMP$4313$8 = ((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394976ll) ));
        goto label$7793;
        label$7796:;
        {
         _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8004p+15, ((double)X$ / __builtin_fabs( (*(double*)((uint8*)THIS$1 + 394952ll) - *(double*)((uint8*)THIS$1 + 394960ll)) )) * 0x1.FEp+7 );
         _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8006p+15, (double)G$ );
         _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8008p+15, ((double)Y$ / __builtin_fabs( (*(double*)((uint8*)THIS$1 + 394168ll) - *(double*)((uint8*)THIS$1 + 394976ll)) )) * 0x1.FEp+7 );
         fb_GfxPset( FGIMAGE$, (float)X$, (float)Y$, (uint32)((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394824ll) )), 4, 0 );
        }
        label$7794:;
        Y$ = Y$ + 1ll;
        label$7793:;
        if( Y$ <= TMP$4313$8 ) goto label$7796;
        label$7795:;
       }
       G$ = ((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394928ll) ));
      }
      label$7790:;
      X$ = X$ + 1ll;
      label$7789:;
      if( X$ <= TMP$4312$6 ) goto label$7792;
      label$7791:;
     }
     fb_GfxPut( (void*)0ull, 0x0p+0f, 0x0p+0f, (void*)FGIMAGE$, -65536, -65536, -65536, -65536, 0, 6, (void*)&fb_hPutAlpha, -1, (void*)0ull, (void*)0ull );
    }
    goto label$7786;
    label$7787:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$7797;
    label$7798:;
    {
    }
    goto label$7786;
    label$7797:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) ) goto label$7799;
    label$7800:;
    {
    }
    goto label$7786;
    label$7799:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) ) goto label$7801;
    label$7802:;
    {
    }
    goto label$7786;
    label$7801:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) ) goto label$7803;
    label$7804:;
    {
    }
    goto label$7786;
    label$7803:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 5ll) ) goto label$7805;
    label$7806:;
    {
     _ZN8MEMORY_T13EXEC_GLSL_120Ev( THIS$1 );
    }
    goto label$7786;
    label$7805:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 6ll) ) goto label$7807;
    label$7808:;
    {
     _ZN8MEMORY_T12EXEC_GLSL_40Ev( THIS$1 );
    }
    goto label$7786;
    label$7807:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) ) goto label$7809;
    label$7810:;
    {
     _ZN8MEMORY_T12EXEC_GLSL_90Ev( THIS$1 );
    }
    goto label$7786;
    label$7809:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) ) goto label$7811;
    label$7812:;
    {
     _ZN8MEMORY_T9EXEC_GLSLEv( THIS$1 );
    }
    label$7811:;
    label$7786:;
   }
  }
  goto label$5250;
  label$7784:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)) ) goto label$7813;
  label$7814:;
  {
   fb_GfxLock( );
  }
  goto label$5250;
  label$7813:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll)) ) goto label$7815;
  label$7816:;
  {
   fb_GfxUnlock( ((int32)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) << (3ll & 63ll))) )), ((int32)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll)) << (3ll & 63ll))) + (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) )) );
  }
  goto label$5250;
  label$7815:;
  if( ADR$1 != (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)) ) goto label$7817;
  label$7818:;
  {
   fb_GfxUnlock( (int32)YS$, (int32)(YS$ + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) );
  }
  goto label$5250;
  label$7817:;
  if( ADR$1 != 0x1.820Ap+15 ) goto label$7819;
  label$7820:;
  {
   {
    uint64 TMP$4315$4;
    TMP$4315$4 = ((uint64)__builtin_nearbyint( V$1 ));
    goto label$7822;
    label$7823:;
    {
     fb_GfxPset( RASTER$, (float)*(double*)((uint8*)THIS$1 + 394840ll), 0x0p+0f, (uint32)((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394824ll) )), 4, 0 );
    }
    goto label$7821;
    label$7824:;
    {
     fb_GfxPset( RASTER$, (float)*(double*)((uint8*)THIS$1 + 394840ll), 0x0p+0f, (uint32)((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394832ll) )), 4, 0 );
    }
    goto label$7821;
    label$7825:;
    {
     fb_GfxLine( RASTER$, (float)*(double*)((uint8*)THIS$1 + 394840ll), 0x0p+0f, (float)*(double*)((uint8*)THIS$1 + 394864ll), 0x0p+0f, (uint32)((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394824ll) )), 0, 65535u, 0 );
    }
    goto label$7821;
    label$7826:;
    {
     fb_GfxLine( RASTER$, (float)*(double*)((uint8*)THIS$1 + 394840ll), 0x0p+0f, (float)*(double*)((uint8*)THIS$1 + 394864ll), 0x0p+0f, (uint32)((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394832ll) )), 0, 65535u, 0 );
    }
    goto label$7821;
    label$7827:;
    {
     fb_GfxLine( RASTER$, (float)*(double*)((uint8*)THIS$1 + 394840ll), 0x0p+0f, (float)*(double*)((uint8*)THIS$1 + 394864ll), 0x0p+0f, (uint32)((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394824ll) )), 0, (uint32)((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 393584ll) )), 0 );
    }
    goto label$7821;
    label$7828:;
    {
     fb_GfxLine( RASTER$, (float)*(double*)((uint8*)THIS$1 + 394840ll), 0x0p+0f, (float)*(double*)((uint8*)THIS$1 + 394864ll), 0x0p+0f, (uint32)((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394832ll) )), 0, (uint32)((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 393584ll) )), 0 );
    }
    goto label$7821;
    label$7822:;
    static const void* tmp$4387[6ll] = {
     &&label$7823,
     &&label$7824,
     &&label$7825,
     &&label$7826,
     &&label$7827,
     &&label$7828,
    };
    if( TMP$4315$4 > 5ull ) goto label$7821;
    goto *tmp$4387[TMP$4315$4 - 0ull];
    label$7821:;
   }
  }
  goto label$5250;
  label$7819:;
  if( ADR$1 != 0x1.820Cp+15 ) goto label$7829;
  label$7830:;
  {
   {
    if( V$1 != 0x0p+0 ) goto label$7832;
    label$7833:;
    {
     fb_GfxPset( FGIMAGE$, (float)*(double*)((uint8*)THIS$1 + 394888ll), (float)*(double*)((uint8*)THIS$1 + 394896ll), (uint32)((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394824ll) )), 4, 0 );
    }
    goto label$7831;
    label$7832:;
    if( V$1 != 0x1.p+0 ) goto label$7834;
    label$7835:;
    {
     fb_GfxPset( BGIMAGE$, (float)*(double*)((uint8*)THIS$1 + 394888ll), (float)*(double*)((uint8*)THIS$1 + 394896ll), (uint32)((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394832ll) )), 4, 0 );
    }
    goto label$7831;
    label$7834:;
    if( V$1 != 0x1.p+1 ) goto label$7836;
    label$7837:;
    {
     fb_GfxLine( FGIMAGE$, (float)*(double*)((uint8*)THIS$1 + 394888ll), (float)*(double*)((uint8*)THIS$1 + 394896ll), (float)*(double*)((uint8*)THIS$1 + 394904ll), (float)*(double*)((uint8*)THIS$1 + 394912ll), (uint32)((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394824ll) )), 0, 65535u, 0 );
    }
    goto label$7831;
    label$7836:;
    if( V$1 != 0x1.8p+1 ) goto label$7838;
    label$7839:;
    {
     fb_GfxLine( BGIMAGE$, (float)*(double*)((uint8*)THIS$1 + 394888ll), (float)*(double*)((uint8*)THIS$1 + 394896ll), (float)*(double*)((uint8*)THIS$1 + 394904ll), (float)*(double*)((uint8*)THIS$1 + 394912ll), (uint32)((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394832ll) )), 0, 65535u, 0 );
    }
    goto label$7831;
    label$7838:;
    if( V$1 != 0x1.p+2 ) goto label$7840;
    label$7841:;
    {
     fb_GfxLine( FGIMAGE$, (float)*(double*)((uint8*)THIS$1 + 394888ll), (float)*(double*)((uint8*)THIS$1 + 394896ll), (float)*(double*)((uint8*)THIS$1 + 394904ll), (float)*(double*)((uint8*)THIS$1 + 394912ll), (uint32)((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394824ll) )), 1, 65535u, 0 );
    }
    goto label$7831;
    label$7840:;
    if( V$1 != 0x1.4p+2 ) goto label$7842;
    label$7843:;
    {
     fb_GfxLine( BGIMAGE$, (float)*(double*)((uint8*)THIS$1 + 394888ll), (float)*(double*)((uint8*)THIS$1 + 394896ll), (float)*(double*)((uint8*)THIS$1 + 394904ll), (float)*(double*)((uint8*)THIS$1 + 394920ll), (uint32)((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394832ll) )), 1, 65535u, 0 );
    }
    goto label$7831;
    label$7842:;
    if( V$1 != 0x1.8p+2 ) goto label$7844;
    label$7845:;
    {
     fb_GfxLine( FGIMAGE$, (float)*(double*)((uint8*)THIS$1 + 394888ll), (float)*(double*)((uint8*)THIS$1 + 394896ll), (float)*(double*)((uint8*)THIS$1 + 394904ll), (float)*(double*)((uint8*)THIS$1 + 394912ll), (uint32)((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394824ll) )), 2, 65535u, 0 );
    }
    goto label$7831;
    label$7844:;
    if( V$1 != 0x1.Cp+2 ) goto label$7846;
    label$7847:;
    {
     fb_GfxLine( BGIMAGE$, (float)*(double*)((uint8*)THIS$1 + 394888ll), (float)*(double*)((uint8*)THIS$1 + 394896ll), (float)*(double*)((uint8*)THIS$1 + 394904ll), (float)*(double*)((uint8*)THIS$1 + 394912ll), (uint32)((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394832ll) )), 2, 65535u, 0 );
    }
    goto label$7831;
    label$7846:;
    if( V$1 != 0x1.p+3 ) goto label$7848;
    label$7849:;
    {
     fb_GfxEllipse( FGIMAGE$, (float)*(double*)((uint8*)THIS$1 + 394888ll), (float)*(double*)((uint8*)THIS$1 + 394896ll), (float)*(double*)((uint8*)THIS$1 + 394904ll), (uint32)((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394824ll) )), 0x0p+0f, 0x0p+0f, 0x1.921FB8p+2f, 0, 4 );
    }
    goto label$7831;
    label$7848:;
    if( V$1 != 0x1.2p+3 ) goto label$7850;
    label$7851:;
    {
     fb_GfxEllipse( BGIMAGE$, (float)*(double*)((uint8*)THIS$1 + 394888ll), (float)*(double*)((uint8*)THIS$1 + 394896ll), (float)*(double*)((uint8*)THIS$1 + 394904ll), (uint32)((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394832ll) )), 0x0p+0f, 0x0p+0f, 0x1.921FB8p+2f, 0, 4 );
    }
    goto label$7831;
    label$7850:;
    if( V$1 != 0x1.4p+3 ) goto label$7852;
    label$7853:;
    {
     fb_GfxLine( FGIMAGE$, (float)*(double*)((uint8*)THIS$1 + 394888ll), (float)*(double*)((uint8*)THIS$1 + 394896ll), (float)*(double*)((uint8*)THIS$1 + 394904ll), (float)*(double*)((uint8*)THIS$1 + 394912ll), (uint32)((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394824ll) )), 0, (uint32)((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394920ll) )), 0 );
    }
    goto label$7831;
    label$7852:;
    if( V$1 != 0x1.6p+3 ) goto label$7854;
    label$7855:;
    {
     fb_GfxLine( BGIMAGE$, (float)*(double*)((uint8*)THIS$1 + 394888ll), (float)*(double*)((uint8*)THIS$1 + 394896ll), (float)*(double*)((uint8*)THIS$1 + 394904ll), (float)*(double*)((uint8*)THIS$1 + 394912ll), (uint32)((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394832ll) )), 0, (uint32)((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394920ll) )), 0 );
    }
    label$7854:;
    label$7831:;
   }
  }
  goto label$5250;
  label$7829:;
  if( ADR$1 != 0x1.820Ep+15 ) goto label$7856;
  label$7857:;
  {
   fb_PrintString( 1, (FBSTRING*)&STRCODE$, 0 );
   fb_GfxDrawString( FGIMAGE$, 0x0p+0f, 0x0p+0f, -2147483644, (FBSTRING*)&STRCODE$, 0u, (void*)0ull, 0, (void*)0ull, (void*)0ull, (void*)0ull );
   fb_StrAssign( (void*)&STRCODE$, -1ll, (void*)"", 1ll, 0 );
  }
  goto label$5250;
  label$7856:;
  if( ADR$1 != 0x1.821p+15 ) goto label$7858;
  label$7859:;
  {
   {
    double TMP$4316$4;
    TMP$4316$4 = *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) )) << (3ll & 63ll)));
    if( TMP$4316$4 < 0x1.p+0 ) goto label$7861;
    if( TMP$4316$4 > 0x1.DCp+6 ) goto label$7861;
    label$7862:;
    {
     *(double*)((uint8*)THIS$1 + 394912ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.p+0 )) << (3ll & 63ll))) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.p+1 )) << (3ll & 63ll))) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.8p+1 )) << (3ll & 63ll))) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.p+2 )) << (3ll & 63ll))) )) << (8ll & 63ll))) + *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.4p+2 )) << (3ll & 63ll)));
     _ZN8MEMORY_T5POKEBEdd( THIS$1, *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) )) << (3ll & 63ll))), *(double*)((uint8*)THIS$1 + 394912ll) );
     *(double*)((uint8*)THIS$1 + 395344ll) = *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.8p+2;
    }
    goto label$7860;
    label$7861:;
    if( TMP$4316$4 < 0x1.DCp+6 ) goto label$7863;
    if( TMP$4316$4 > 0x1.FCp+6 ) goto label$7863;
    label$7864:;
    {
     _ZN8MEMORY_T5POKEBEdd( THIS$1, *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) )) << (3ll & 63ll))), 0x0p+0 );
     *(double*)((uint8*)THIS$1 + 395344ll) = *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.p+2;
    }
    goto label$7860;
    label$7863:;
    if( TMP$4316$4 < 0x1.p+7 ) goto label$7865;
    if( TMP$4316$4 > 0x1.0Cp+7 ) goto label$7865;
    label$7866:;
    {
     _ZN8MEMORY_T5POKEBEdd( THIS$1, *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) )) << (3ll & 63ll))), 0x0p+0 );
     *(double*)((uint8*)THIS$1 + 395344ll) = *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.p+2;
    }
    goto label$7860;
    label$7865:;
    if( TMP$4316$4 < 0x1.0Ep+7 ) goto label$7867;
    if( TMP$4316$4 > 0x1.44p+7 ) goto label$7867;
    label$7868:;
    {
     _ZN8MEMORY_T5POKEBEdd( THIS$1, *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) )) << (3ll & 63ll))), 0x0p+0 );
     *(double*)((uint8*)THIS$1 + 395344ll) = *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.p+2;
    }
    label$7867:;
    label$7860:;
   }
   *(double*)((uint8*)THIS$1 + 395400ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.p+0 )) << (3ll & 63ll))) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.p+1 )) << (3ll & 63ll))) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.8p+1 )) << (3ll & 63ll))) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.p+2 )) << (3ll & 63ll))) )) << (8ll & 63ll))) + *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.4p+2 )) << (3ll & 63ll)));
   {
    double TMP$4317$4;
    TMP$4317$4 = *(double*)((uint8*)THIS$1 + 395400ll);
    if( TMP$4317$4 < 0x1.p+14 ) goto label$7870;
    if( TMP$4317$4 > 0x1.F9Cp+14 ) goto label$7870;
    label$7871:;
    {
     *(double*)((uint8*)THIS$1 + 394912ll) = *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( ADR0$ + 0x1.p+0 )) << (3ll & 63ll)));
     _ZN8MEMORY_T5POKEBEdd( THIS$1, ADR0$, *(double*)((uint8*)THIS$1 + 394912ll) );
     *(double*)((uint8*)THIS$1 + 395344ll) = *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.8p+1;
    }
    goto label$7869;
    label$7870:;
    if( TMP$4317$4 < 0x1.4p+19 ) goto label$7872;
    if( TMP$4317$4 > 0x1.5FFFEp+19 ) goto label$7872;
    label$7873:;
    {
     _ZN8MEMORY_T5POKEBEdd( THIS$1, *(double*)((uint8*)THIS$1 + 395400ll), 0x0p+0 );
     *(double*)((uint8*)THIS$1 + 395344ll) = *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.p+2;
    }
    label$7872:;
    label$7869:;
   }
   *(double*)((uint8*)THIS$1 + 395344ll) = (double)0ll;
  }
  goto label$5250;
  label$7858:;
  if( ADR$1 != 0x1.8212p+15 ) goto label$7874;
  label$7875:;
  {
   *(double*)((uint8*)THIS$1 + 395344ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395352ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395360ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395368ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395376ll) )) << (8ll & 63ll))) + *(double*)((uint8*)THIS$1 + 395384ll);
  }
  goto label$5250;
  label$7874:;
  if( ADR$1 != 0x1.822p+15 ) goto label$7876;
  label$7877:;
  {
   *(double*)((uint8*)THIS$1 + 395400ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395408ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395416ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395424ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395432ll) )) << (8ll & 63ll))) + *(double*)((uint8*)THIS$1 + 395440ll);
  }
  goto label$5250;
  label$7876:;
  if( ADR$1 != 0x1.822Ep+15 ) goto label$7878;
  label$7879:;
  {
   *(double*)((uint8*)THIS$1 + 395456ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395464ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395472ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395480ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395488ll) )) << (8ll & 63ll))) + *(double*)((uint8*)THIS$1 + 395496ll);
  }
  goto label$5250;
  label$7878:;
  if( ADR$1 != 0x1.823Cp+15 ) goto label$7880;
  label$7881:;
  {
   *(double*)((uint8*)THIS$1 + 395512ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395520ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395528ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395536ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395544ll) )) << (8ll & 63ll))) + *(double*)((uint8*)THIS$1 + 395552ll);
  }
  goto label$5250;
  label$7880:;
  if( ADR$1 != 0x1.824Ap+15 ) goto label$7882;
  label$7883:;
  {
   *(double*)((uint8*)THIS$1 + 395568ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395576ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395584ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395592ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395600ll) )) << (8ll & 63ll))) + *(double*)((uint8*)THIS$1 + 395608ll);
  }
  goto label$5250;
  label$7882:;
  if( ADR$1 != 0x1.8258p+15 ) goto label$7884;
  label$7885:;
  {
   *(double*)((uint8*)THIS$1 + 395624ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395632ll) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395640ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395656ll) )) << (8ll & 63ll))) + *(double*)((uint8*)THIS$1 + 395664ll);
  }
  goto label$5250;
  label$7884:;
  if( ADR$1 != 0x1.8266p+15 ) goto label$7886;
  label$7887:;
  {
   *(double*)((uint8*)THIS$1 + 395680ll) = (double)(((((((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395688ll) )) << (56ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395696ll) )) << (48ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395704ll) )) << (40ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395712ll) )) << (32ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395720ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395728ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395736ll) )) << (8ll & 63ll))) + *(double*)((uint8*)THIS$1 + 395744ll);
  }
  goto label$5250;
  label$7886:;
  if( ADR$1 != 0x1.827Ap+15 ) goto label$7888;
  label$7889:;
  {
   *(double*)((uint8*)THIS$1 + 395760ll) = (double)(((((((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395768ll) )) << (56ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395776ll) )) << (48ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395784ll) )) << (40ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395792ll) )) << (32ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395800ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395808ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395816ll) )) << (8ll & 63ll))) + *(double*)((uint8*)THIS$1 + 395824ll);
  }
  goto label$5250;
  label$7888:;
  if( ADR$1 != 0x1.828Ep+15 ) goto label$7890;
  label$7891:;
  {
   *(double*)((uint8*)THIS$1 + 395840ll) = (double)(((((((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395848ll) )) << (56ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395856ll) )) << (48ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395864ll) )) << (40ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395872ll) )) << (32ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395880ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395888ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395896ll) )) << (8ll & 63ll))) + *(double*)((uint8*)THIS$1 + 395904ll);
  }
  goto label$5250;
  label$7890:;
  if( ADR$1 != 0x1.82A2p+15 ) goto label$7892;
  label$7893:;
  {
   *(double*)((uint8*)THIS$1 + 395920ll) = (double)(((((((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395928ll) )) << (56ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395936ll) )) << (48ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395944ll) )) << (40ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395952ll) )) << (32ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395960ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395968ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395976ll) )) << (8ll & 63ll))) + *(double*)((uint8*)THIS$1 + 395984ll);
  }
  goto label$5250;
  label$7892:;
  if( ADR$1 != 0x1.82B6p+15 ) goto label$7894;
  label$7895:;
  {
   *(double*)((uint8*)THIS$1 + 396000ll) = (double)(((((((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 396008ll) )) << (56ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 396016ll) )) << (48ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 396024ll) )) << (40ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 396032ll) )) << (32ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 396040ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 396048ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 396056ll) )) << (8ll & 63ll))) + *(double*)((uint8*)THIS$1 + 396064ll);
  }
  goto label$5250;
  label$7894:;
  if( ADR$1 != 0x1.82CAp+15 ) goto label$7896;
  label$7897:;
  {
   *(double*)((uint8*)THIS$1 + 396080ll) = (double)(((((((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 396088ll) )) << (56ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 396096ll) )) << (48ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 396104ll) )) << (40ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 396112ll) )) << (32ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 396120ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 396128ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 396136ll) )) << (8ll & 63ll))) + *(double*)((uint8*)THIS$1 + 396144ll);
  }
  goto label$5250;
  label$7896:;
  if( ADR$1 != 0x1.82DEp+15 ) goto label$7898;
  label$7899:;
  {
   *(double*)((uint8*)THIS$1 + 396000ll) = *(double*)((uint8*)THIS$1 + 394888ll);
  }
  goto label$5250;
  label$7898:;
  if( ADR$1 != 0x1.82Ep+15 ) goto label$7900;
  label$7901:;
  {
   *(double*)((uint8*)THIS$1 + 396000ll) = *(double*)((uint8*)THIS$1 + 394896ll);
  }
  goto label$5250;
  label$7900:;
  if( ADR$1 != 0x1.82E2p+15 ) goto label$7902;
  label$7903:;
  {
   *(double*)((uint8*)THIS$1 + 396000ll) = *(double*)((uint8*)THIS$1 + 394904ll);
  }
  goto label$5250;
  label$7902:;
  if( ADR$1 != 0x1.82E4p+15 ) goto label$7904;
  label$7905:;
  {
   *(double*)((uint8*)THIS$1 + 395680ll) = *(double*)((uint8*)THIS$1 + 394888ll);
  }
  goto label$5250;
  label$7904:;
  if( ADR$1 != 0x1.82E6p+15 ) goto label$7906;
  label$7907:;
  {
   *(double*)((uint8*)THIS$1 + 395680ll) = *(double*)((uint8*)THIS$1 + 394896ll);
  }
  goto label$5250;
  label$7906:;
  if( ADR$1 != 0x1.82E8p+15 ) goto label$7908;
  label$7909:;
  {
   *(double*)((uint8*)THIS$1 + 395680ll) = *(double*)((uint8*)THIS$1 + 394904ll);
  }
  goto label$5250;
  label$7908:;
  if( ADR$1 != 0x1.82EAp+15 ) goto label$7910;
  label$7911:;
  {
   *(double*)((uint8*)THIS$1 + 395760ll) = *(double*)((uint8*)THIS$1 + 394888ll);
  }
  goto label$5250;
  label$7910:;
  if( ADR$1 != 0x1.82ECp+15 ) goto label$7912;
  label$7913:;
  {
   *(double*)((uint8*)THIS$1 + 395760ll) = *(double*)((uint8*)THIS$1 + 394896ll);
  }
  goto label$5250;
  label$7912:;
  if( ADR$1 != 0x1.82EEp+15 ) goto label$7914;
  label$7915:;
  {
   *(double*)((uint8*)THIS$1 + 395760ll) = *(double*)((uint8*)THIS$1 + 394904ll);
  }
  goto label$5250;
  label$7914:;
  if( ADR$1 != 0x1.82Fp+15 ) goto label$7916;
  label$7917:;
  {
   *(double*)((uint8*)THIS$1 + 395920ll) = *(double*)((uint8*)THIS$1 + 394888ll);
  }
  goto label$5250;
  label$7916:;
  if( ADR$1 != 0x1.82F2p+15 ) goto label$7918;
  label$7919:;
  {
   {
    if( V$1 != (double)(int64)*(uint8*)NIBBLES$ ) goto label$7921;
    label$7922:;
    {
     *(double*)((uint8*)THIS$1 + 395920ll) = *(double*)((uint8*)THIS$1 + 395120ll);
    }
    goto label$7920;
    label$7921:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$7923;
    label$7924:;
    {
     *(double*)((uint8*)THIS$1 + 395920ll) = *(double*)((uint8*)THIS$1 + 394904ll);
    }
    label$7923:;
    label$7920:;
   }
  }
  goto label$5250;
  label$7918:;
  if( ADR$1 != 0x1.82F4p+15 ) goto label$7925;
  label$7926:;
  {
   *(double*)((uint8*)THIS$1 + 393232ll) = *(double*)((uint8*)THIS$1 + 395680ll);
  }
  goto label$5250;
  label$7925:;
  if( ADR$1 != 0x1.82F6p+15 ) goto label$7927;
  label$7928:;
  {
   *(double*)((uint8*)THIS$1 + 393232ll) = *(double*)((uint8*)THIS$1 + 395680ll);
  }
  goto label$5250;
  label$7927:;
  if( ADR$1 != 0x1.82F8p+15 ) goto label$7929;
  label$7930:;
  {
   *(double*)((uint8*)THIS$1 + 393232ll) = *(double*)((uint8*)THIS$1 + 395680ll);
  }
  goto label$5250;
  label$7929:;
  if( ADR$1 != 0x1.82FAp+15 ) goto label$7931;
  label$7932:;
  {
   *(double*)((uint8*)THIS$1 + 393240ll) = *(double*)((uint8*)THIS$1 + 395680ll);
  }
  goto label$5250;
  label$7931:;
  if( ADR$1 != 0x1.82FCp+15 ) goto label$7933;
  label$7934:;
  {
   *(double*)((uint8*)THIS$1 + 393240ll) = *(double*)((uint8*)THIS$1 + 395680ll);
  }
  goto label$5250;
  label$7933:;
  if( ADR$1 != 0x1.82FEp+15 ) goto label$7935;
  label$7936:;
  {
   *(double*)((uint8*)THIS$1 + 393240ll) = *(double*)((uint8*)THIS$1 + 395680ll);
  }
  goto label$5250;
  label$7935:;
  if( ADR$1 != 0x1.83p+15 ) goto label$7937;
  label$7938:;
  {
   *(double*)((uint8*)THIS$1 + 393248ll) = *(double*)((uint8*)THIS$1 + 395680ll);
  }
  goto label$5250;
  label$7937:;
  if( ADR$1 != 0x1.D122p+15 ) goto label$7939;
  label$7940:;
  {
   *(double*)((uint8*)THIS$1 + 393248ll) = *(double*)((uint8*)THIS$1 + 395680ll);
  }
  goto label$5250;
  label$7939:;
  if( ADR$1 != 0x1.8304p+15 ) goto label$7941;
  label$7942:;
  {
   *(double*)((uint8*)THIS$1 + 393248ll) = *(double*)((uint8*)THIS$1 + 395680ll);
  }
  goto label$5250;
  label$7941:;
  if( ADR$1 != 0x1.8306p+15 ) goto label$7943;
  label$7944:;
  {
   *(double*)((uint8*)THIS$1 + 393256ll) = *(double*)((uint8*)THIS$1 + 395680ll);
  }
  goto label$5250;
  label$7943:;
  if( ADR$1 != 0x1.8308p+15 ) goto label$7945;
  label$7946:;
  {
   *(double*)((uint8*)THIS$1 + 393256ll) = *(double*)((uint8*)THIS$1 + 395680ll);
  }
  goto label$5250;
  label$7945:;
  if( ADR$1 != 0x1.830Ap+15 ) goto label$7947;
  label$7948:;
  {
   *(double*)((uint8*)THIS$1 + 393256ll) = *(double*)((uint8*)THIS$1 + 395680ll);
  }
  goto label$5250;
  label$7947:;
  if( ADR$1 != 0x1.830Cp+15 ) goto label$7949;
  label$7950:;
  {
   *(double*)((uint8*)THIS$1 + 394840ll) = *(double*)((uint8*)THIS$1 + 395680ll);
  }
  goto label$5250;
  label$7949:;
  if( ADR$1 != 0x1.830Ep+15 ) goto label$7951;
  label$7952:;
  {
   *(double*)((uint8*)THIS$1 + 394864ll) = *(double*)((uint8*)THIS$1 + 395680ll);
  }
  goto label$5250;
  label$7951:;
  if( ADR$1 != 0x1.831p+15 ) goto label$7953;
  label$7954:;
  {
   *(double*)((uint8*)THIS$1 + 394848ll) = *(double*)((uint8*)THIS$1 + 395680ll);
  }
  goto label$5250;
  label$7953:;
  if( ADR$1 != 0x1.8312p+15 ) goto label$7955;
  label$7956:;
  {
   *(double*)((uint8*)THIS$1 + 394872ll) = *(double*)((uint8*)THIS$1 + 395680ll);
  }
  goto label$5250;
  label$7955:;
  if( ADR$1 != 0x1.8314p+15 ) goto label$7957;
  label$7958:;
  {
   *(double*)((uint8*)THIS$1 + 394856ll) = *(double*)((uint8*)THIS$1 + 395680ll);
  }
  goto label$5250;
  label$7957:;
  if( ADR$1 != 0x1.8316p+15 ) goto label$7959;
  label$7960:;
  {
   *(double*)((uint8*)THIS$1 + 394880ll) = *(double*)((uint8*)THIS$1 + 395680ll);
  }
  goto label$5250;
  label$7959:;
  if( ADR$1 != 0x1.8318p+15 ) goto label$7961;
  label$7962:;
  {
   *(double*)((uint8*)THIS$1 + 394824ll) = *(double*)((uint8*)THIS$1 + 395680ll);
  }
  goto label$5250;
  label$7961:;
  if( ADR$1 != 0x1.831Ap+15 ) goto label$7963;
  label$7964:;
  {
   *(double*)((uint8*)THIS$1 + 394832ll) = *(double*)((uint8*)THIS$1 + 395680ll);
  }
  goto label$5250;
  label$7963:;
  if( ADR$1 != 0x1.831Cp+15 ) goto label$7965;
  label$7966:;
  {
   *(double*)((uint8*)THIS$1 + 395680ll) = *(double*)((uint8*)THIS$1 + 394840ll);
  }
  goto label$5250;
  label$7965:;
  if( ADR$1 != 0x1.831Ep+15 ) goto label$7967;
  label$7968:;
  {
   *(double*)((uint8*)THIS$1 + 394840ll) = *(double*)((uint8*)THIS$1 + 395680ll);
  }
  goto label$5250;
  label$7967:;
  if( ADR$1 != 0x1.832p+15 ) goto label$7969;
  label$7970:;
  {
   *(double*)((uint8*)THIS$1 + 395680ll) = *(double*)((uint8*)THIS$1 + 394848ll);
  }
  goto label$5250;
  label$7969:;
  if( ADR$1 != 0x1.8322p+15 ) goto label$7971;
  label$7972:;
  {
   *(double*)((uint8*)THIS$1 + 394848ll) = *(double*)((uint8*)THIS$1 + 395680ll);
  }
  goto label$5250;
  label$7971:;
  if( ADR$1 != 0x1.8324p+15 ) goto label$7973;
  label$7974:;
  {
   *(double*)((uint8*)THIS$1 + 395680ll) = *(double*)((uint8*)THIS$1 + 394856ll);
  }
  goto label$5250;
  label$7973:;
  if( ADR$1 != 0x1.8326p+15 ) goto label$7975;
  label$7976:;
  {
   *(double*)((uint8*)THIS$1 + 395680ll) = *(double*)((uint8*)THIS$1 + 394864ll);
  }
  goto label$5250;
  label$7975:;
  if( ADR$1 != 0x1.8328p+15 ) goto label$7977;
  label$7978:;
  {
   *(double*)((uint8*)THIS$1 + 395680ll) = *(double*)((uint8*)THIS$1 + 394872ll);
  }
  goto label$5250;
  label$7977:;
  if( ADR$1 != 0x1.832Ap+15 ) goto label$7979;
  label$7980:;
  {
   *(double*)((uint8*)THIS$1 + 395680ll) = *(double*)((uint8*)THIS$1 + 394880ll);
  }
  goto label$5250;
  label$7979:;
  if( ADR$1 != 0x1.832Cp+15 ) goto label$7981;
  label$7982:;
  {
   *(double*)((uint8*)THIS$1 + 394880ll) = *(double*)((uint8*)THIS$1 + 395680ll);
  }
  goto label$5250;
  label$7981:;
  if( ADR$1 != 0x1.832Ep+15 ) goto label$7983;
  label$7984:;
  {
   *(double*)((uint8*)THIS$1 + 395680ll) = *(double*)((uint8*)THIS$1 + 394872ll);
  }
  goto label$5250;
  label$7983:;
  if( ADR$1 != 0x1.833p+15 ) goto label$7985;
  label$7986:;
  {
   *(double*)((uint8*)THIS$1 + 395680ll) = *(double*)((uint8*)THIS$1 + 394880ll);
  }
  goto label$5250;
  label$7985:;
  if( ADR$1 != 0x1.8332p+15 ) goto label$7987;
  label$7988:;
  {
   *(double*)((uint8*)THIS$1 + 395680ll) = *(double*)((uint8*)THIS$1 + 394880ll);
  }
  goto label$5250;
  label$7987:;
  if( ADR$1 != 0x1.8334p+15 ) goto label$7989;
  label$7990:;
  {
   *(double*)((uint8*)THIS$1 + 395680ll) = *(double*)((uint8*)THIS$1 + 395760ll) + *(double*)((uint8*)THIS$1 + 395840ll);
  }
  goto label$5250;
  label$7989:;
  if( ADR$1 != 0x1.8336p+15 ) goto label$7991;
  label$7992:;
  {
   *(double*)((uint8*)THIS$1 + 395680ll) = *(double*)((uint8*)THIS$1 + 395760ll) - *(double*)((uint8*)THIS$1 + 395840ll);
  }
  goto label$5250;
  label$7991:;
  if( ADR$1 != 0x1.8338p+15 ) goto label$7993;
  label$7994:;
  {
   *(double*)((uint8*)THIS$1 + 395680ll) = *(double*)((uint8*)THIS$1 + 395760ll) * *(double*)((uint8*)THIS$1 + 395840ll);
  }
  goto label$5250;
  label$7993:;
  if( ADR$1 != 0x1.833Ap+15 ) goto label$7995;
  label$7996:;
  {
   *(double*)((uint8*)THIS$1 + 395680ll) = *(double*)((uint8*)THIS$1 + 395760ll) / *(double*)((uint8*)THIS$1 + 395840ll);
  }
  goto label$5250;
  label$7995:;
  if( ADR$1 != 0x1.833Cp+15 ) goto label$7997;
  label$7998:;
  {
   *(double*)((uint8*)THIS$1 + 395680ll) = (double)(((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395760ll) )) / ((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395840ll) )));
  }
  goto label$5250;
  label$7997:;
  if( ADR$1 != 0x1.833Ep+15 ) goto label$7999;
  label$8000:;
  {
   double vr$12305 = pow( *(double*)((uint8*)THIS$1 + 395760ll), *(double*)((uint8*)THIS$1 + 395840ll) );
   *(double*)((uint8*)THIS$1 + 395680ll) = vr$12305;
  }
  goto label$5250;
  label$7999:;
  if( ADR$1 != 0x1.834p+15 ) goto label$8001;
  label$8002:;
  {
   double vr$12309 = _Z6MODULOdd( *(double*)((uint8*)THIS$1 + 395760ll), *(double*)((uint8*)THIS$1 + 395840ll) );
   *(double*)((uint8*)THIS$1 + 395680ll) = vr$12309;
  }
  goto label$5250;
  label$8001:;
  if( ADR$1 != 0x1.8342p+15 ) goto label$8003;
  label$8004:;
  {
   *(double*)((uint8*)THIS$1 + 395680ll) = -(*(double*)((uint8*)THIS$1 + 395680ll));
  }
  goto label$5250;
  label$8003:;
  if( ADR$1 != 0x1.8344p+15 ) goto label$8005;
  label$8006:;
  {
   *(double*)((uint8*)THIS$1 + 395680ll) = (double)(((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395760ll) )) << (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395840ll) )) & 63ll));
  }
  goto label$5250;
  label$8005:;
  if( ADR$1 != 0x1.8346p+15 ) goto label$8007;
  label$8008:;
  {
   *(double*)((uint8*)THIS$1 + 395680ll) = (double)(((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395760ll) )) >> (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395840ll) )) & 63ll));
  }
  goto label$5250;
  label$8007:;
  if( ADR$1 != 0x1.8348p+15 ) goto label$8009;
  label$8010:;
  {
   *(double*)((uint8*)THIS$1 + 395680ll) = (double)(int64)-(*(double*)((uint8*)THIS$1 + 395760ll) == *(double*)((uint8*)THIS$1 + 395840ll));
  }
  goto label$5250;
  label$8009:;
  if( ADR$1 != 0x1.834Ap+15 ) goto label$8011;
  label$8012:;
  {
   *(double*)((uint8*)THIS$1 + 395680ll) = (double)(int64)-(*(double*)((uint8*)THIS$1 + 395760ll) != *(double*)((uint8*)THIS$1 + 395840ll));
  }
  goto label$5250;
  label$8011:;
  if( ADR$1 != 0x1.834Cp+15 ) goto label$8013;
  label$8014:;
  {
   *(double*)((uint8*)THIS$1 + 395680ll) = (double)(int64)-(*(double*)((uint8*)THIS$1 + 395760ll) < *(double*)((uint8*)THIS$1 + 395840ll));
  }
  goto label$5250;
  label$8013:;
  if( ADR$1 != 0x1.834Ep+15 ) goto label$8015;
  label$8016:;
  {
   *(double*)((uint8*)THIS$1 + 395680ll) = (double)(int64)-(*(double*)((uint8*)THIS$1 + 395760ll) <= *(double*)((uint8*)THIS$1 + 395840ll));
  }
  goto label$5250;
  label$8015:;
  if( ADR$1 != 0x1.835p+15 ) goto label$8017;
  label$8018:;
  {
   *(double*)((uint8*)THIS$1 + 395680ll) = (double)(int64)-(*(double*)((uint8*)THIS$1 + 395760ll) >= *(double*)((uint8*)THIS$1 + 395840ll));
  }
  goto label$5250;
  label$8017:;
  if( ADR$1 != 0x1.8352p+15 ) goto label$8019;
  label$8020:;
  {
   *(double*)((uint8*)THIS$1 + 395680ll) = (double)(int64)-(*(double*)((uint8*)THIS$1 + 395760ll) > *(double*)((uint8*)THIS$1 + 395840ll));
  }
  goto label$5250;
  label$8019:;
  if( ADR$1 != 0x1.8354p+15 ) goto label$8021;
  label$8022:;
  {
   *(double*)((uint8*)THIS$1 + 395680ll) = (double)(((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395760ll) )) & ((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395840ll) )));
  }
  goto label$5250;
  label$8021:;
  if( ADR$1 != 0x1.8356p+15 ) goto label$8023;
  label$8024:;
  {
   *(double*)((uint8*)THIS$1 + 395680ll) = (double)~(((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394960ll) )) ^ ((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395040ll) )));
  }
  goto label$5250;
  label$8023:;
  if( ADR$1 != 0x1.8358p+15 ) goto label$8025;
  label$8026:;
  {
   *(double*)((uint8*)THIS$1 + 395680ll) = (double)(~((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394960ll) )) | ((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395040ll) )));
  }
  goto label$5250;
  label$8025:;
  if( ADR$1 != 0x1.835Ap+15 ) goto label$8027;
  label$8028:;
  {
   *(double*)((uint8*)THIS$1 + 395680ll) = (double)(((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395760ll) )) | ((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395840ll) )));
  }
  goto label$5250;
  label$8027:;
  if( ADR$1 != 0x1.835Cp+15 ) goto label$8029;
  label$8030:;
  {
   *(double*)((uint8*)THIS$1 + 395680ll) = (double)(((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395760ll) )) ^ ((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395840ll) )));
  }
  goto label$5250;
  label$8029:;
  if( ADR$1 != 0x1.835Ep+15 ) goto label$8031;
  label$8032:;
  {
   *(double*)((uint8*)THIS$1 + 395760ll) = *(double*)((uint8*)THIS$1 + 395680ll);
  }
  goto label$5250;
  label$8031:;
  if( ADR$1 != 0x1.836p+15 ) goto label$8033;
  label$8034:;
  {
   *(double*)((uint8*)THIS$1 + 395840ll) = *(double*)((uint8*)THIS$1 + 395680ll);
  }
  goto label$5250;
  label$8033:;
  if( ADR$1 != 0x1.8362p+15 ) goto label$8035;
  label$8036:;
  {
   *(double*)((uint8*)THIS$1 + 395680ll) = *(double*)((uint8*)THIS$1 + 395680ll) + 0x1.p+0;
  }
  goto label$5250;
  label$8035:;
  if( ADR$1 != 0x1.8364p+15 ) goto label$8037;
  label$8038:;
  {
   *(double*)((uint8*)THIS$1 + 395760ll) = *(double*)((uint8*)THIS$1 + 395760ll) + 0x1.p+0;
  }
  goto label$5250;
  label$8037:;
  if( ADR$1 != 0x1.8366p+15 ) goto label$8039;
  label$8040:;
  {
   *(double*)((uint8*)THIS$1 + 395840ll) = *(double*)((uint8*)THIS$1 + 395840ll) + 0x1.p+0;
  }
  goto label$5250;
  label$8039:;
  if( ADR$1 != 0x1.8368p+15 ) goto label$8041;
  label$8042:;
  {
   *(double*)((uint8*)THIS$1 + 395680ll) = *(double*)((uint8*)THIS$1 + 395680ll) + -0x1.p+0;
  }
  goto label$5250;
  label$8041:;
  if( ADR$1 != 0x1.836Ap+15 ) goto label$8043;
  label$8044:;
  {
   *(double*)((uint8*)THIS$1 + 395760ll) = *(double*)((uint8*)THIS$1 + 395760ll) + -0x1.p+0;
  }
  goto label$5250;
  label$8043:;
  if( ADR$1 != 0x1.836Cp+15 ) goto label$8045;
  label$8046:;
  {
   *(double*)((uint8*)THIS$1 + 395840ll) = *(double*)((uint8*)THIS$1 + 395840ll) + -0x1.p+0;
  }
  goto label$5250;
  label$8045:;
  if( ADR$1 != 0x1.836Ep+15 ) goto label$8047;
  label$8048:;
  {
   if( *(double*)((uint8*)THIS$1 + 395760ll) != *(double*)((uint8*)THIS$1 + 395840ll) ) goto label$8050;
   {
    *(double*)((uint8*)THIS$1 + 396000ll) = V$1;
    label$8050:;
   }
  }
  goto label$5250;
  label$8047:;
  if( ADR$1 != 0x1.837p+15 ) goto label$8051;
  label$8052:;
  {
   if( *(double*)((uint8*)THIS$1 + 395760ll) == *(double*)((uint8*)THIS$1 + 395840ll) ) goto label$8054;
   {
    *(double*)((uint8*)THIS$1 + 396000ll) = V$1;
    label$8054:;
   }
  }
  goto label$5250;
  label$8051:;
  if( ADR$1 != 0x1.8372p+15 ) goto label$8055;
  label$8056:;
  {
   if( *(double*)((uint8*)THIS$1 + 395760ll) <= *(double*)((uint8*)THIS$1 + 395840ll) ) goto label$8058;
   {
    *(double*)((uint8*)THIS$1 + 396000ll) = V$1;
    label$8058:;
   }
  }
  goto label$5250;
  label$8055:;
  if( ADR$1 != 0x1.8374p+15 ) goto label$8059;
  label$8060:;
  {
   if( *(double*)((uint8*)THIS$1 + 395760ll) < *(double*)((uint8*)THIS$1 + 395840ll) ) goto label$8062;
   {
    *(double*)((uint8*)THIS$1 + 396000ll) = V$1;
    label$8062:;
   }
  }
  goto label$5250;
  label$8059:;
  if( ADR$1 != 0x1.8376p+15 ) goto label$8063;
  label$8064:;
  {
   if( *(double*)((uint8*)THIS$1 + 395760ll) > *(double*)((uint8*)THIS$1 + 395840ll) ) goto label$8066;
   {
    *(double*)((uint8*)THIS$1 + 396000ll) = V$1;
    label$8066:;
   }
  }
  goto label$5250;
  label$8063:;
  if( ADR$1 != 0x1.8378p+15 ) goto label$8067;
  label$8068:;
  {
   if( *(double*)((uint8*)THIS$1 + 395760ll) <= *(double*)((uint8*)THIS$1 + 395840ll) ) goto label$8070;
   {
    *(double*)((uint8*)THIS$1 + 396000ll) = V$1;
    label$8070:;
   }
  }
  goto label$5250;
  label$8067:;
  if( ADR$1 != 0x1.837Ap+15 ) goto label$8071;
  label$8072:;
  {
   *(double*)((uint8*)THIS$1 + 396000ll) = V$1;
  }
  goto label$5250;
  label$8071:;
  if( ADR$1 != 0x1.837Cp+15 ) goto label$8073;
  label$8074:;
  {
   double vr$12434 = _ZN8MEMORY_T5PEEKBEd( THIS$1, V$1 );
   *(double*)((uint8*)THIS$1 + 395680ll) = vr$12434;
  }
  goto label$5250;
  label$8073:;
  if( ADR$1 != 0x1.837Ep+15 ) goto label$8075;
  label$8076:;
  {
   _ZN8MEMORY_T5POKEBEdd( THIS$1, V$1, *(double*)((uint8*)THIS$1 + 395680ll) );
  }
  goto label$5250;
  label$8075:;
  if( ADR$1 != 0x1.838p+15 ) goto label$8077;
  label$8078:;
  {
   uint64 TMP$3;
   __builtin_memset( &TMP$3, 0, 8ll );
   uint64 TIMES$3;
   __builtin_memset( &TIMES$3, 0, 8ll );
   *(double*)((uint8*)THIS$1 + 397040ll) = *(double*)((uint8*)THIS$1 + 396000ll);
   *(double*)((uint8*)THIS$1 + 395680ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 396000ll) + 0x1.p+0 )) << (3ll & 63ll))) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 396000ll) + 0x1.p+1 )) << (3ll & 63ll))) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 396000ll) + 0x1.8p+1 )) << (3ll & 63ll))) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 396000ll) + 0x1.p+2 )) << (3ll & 63ll))) )) << (8ll & 63ll))) + *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 396000ll) + 0x1.4p+2 )) << (3ll & 63ll)));
   *(double*)((uint8*)THIS$1 + 395760ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 396000ll) + 0x1.8p+2 )) << (3ll & 63ll))) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 396000ll) + 0x1.Cp+2 )) << (3ll & 63ll))) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 396000ll) + 0x1.p+3 )) << (3ll & 63ll))) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 396000ll) + 0x1.2p+3 )) << (3ll & 63ll))) )) << (8ll & 63ll))) + *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 396000ll) + 0x1.4p+3 )) << (3ll & 63ll)));
   *(double*)((uint8*)THIS$1 + 396968ll) = (double)((((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 396000ll) + 0x1.6p+3 )) << (3ll & 63ll))) )) << (32ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 396000ll) + 0x1.8p+3 )) << (3ll & 63ll))) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 396000ll) + 0x1.Ap+3 )) << (3ll & 63ll))) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 396000ll) + 0x1.Cp+3 )) << (3ll & 63ll))) )) << (8ll & 63ll))) + *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395344ll) + 0x1.Ep+3 )) << (3ll & 63ll)));
   label$8079:;
   if( (double)TMP$3 == *(double*)((uint8*)THIS$1 + 396968ll) ) goto label$8080;
   {
    {
     PC$ = *(double*)((uint8*)THIS$1 + 395680ll);
     double TMP$4318$5;
     TMP$4318$5 = *(double*)((uint8*)THIS$1 + 395760ll);
     goto label$8081;
     label$8084:;
     {
      _ZN8MEMORY_T6POKE64Edd( THIS$1, *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( PC$ )) << (3ll & 63ll))), 0x0p+0 );
     }
     label$8082:;
     PC$ = PC$ + 0x1.p+0;
     label$8081:;
     if( PC$ <= TMP$4318$5 ) goto label$8084;
     label$8083:;
    }
    TMP$3 = (TMP$3 + 1ull) % ((uint64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 396968ll) ));
   }
   goto label$8079;
   label$8080:;
  }
  goto label$5250;
  label$8077:;
  if( ADR$1 != 0x1.8382p+15 ) goto label$8085;
  label$8086:;
  {
   *(double*)((uint8*)THIS$1 + 396968ll) = (double)(((((((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 396976ll) )) << (56ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 396984ll) )) << (48ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 396992ll) )) << (40ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 397000ll) )) << (32ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 397008ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 397016ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 397024ll) )) << (8ll & 63ll))) + *(double*)((uint8*)THIS$1 + 397032ll);
  }
  goto label$5250;
  label$8085:;
  if( ADR$1 != 0x1.8384p+15 ) goto label$8087;
  label$8088:;
  {
   *(double*)((uint8*)THIS$1 + 397040ll) = (double)(((((((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 397048ll) )) << (56ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 397048ll) )) << (48ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 397064ll) )) << (40ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 397072ll) )) << (32ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 397080ll) )) << (24ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 397088ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 397096ll) )) << (8ll & 63ll))) + *(double*)((uint8*)THIS$1 + 397104ll);
   *(double*)((uint8*)THIS$1 + 396000ll) = (double)0ll;
  }
  goto label$5250;
  label$8087:;
  if( ADR$1 != 0x1.8386p+15 ) goto label$8089;
  label$8090:;
  {
   *(double*)((uint8*)THIS$1 + 395656ll) = (double)(((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395624ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395632ll) )) << (8ll & 63ll))) + *(double*)((uint8*)THIS$1 + 395640ll);
  }
  goto label$5250;
  label$8089:;
  if( ADR$1 != 0x1.8388p+15 ) goto label$8091;
  label$8092:;
  {
   *(double*)((uint8*)THIS$1 + 395656ll) = (double)(((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395624ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395632ll) )) << (8ll & 63ll))) + *(double*)((uint8*)THIS$1 + 395640ll);
  }
  goto label$5250;
  label$8091:;
  if( ADR$1 != 0x1.838Ap+15 ) goto label$8093;
  label$8094:;
  {
   *(double*)((uint8*)THIS$1 + 395656ll) = (double)(((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395624ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395632ll) )) << (8ll & 63ll))) + *(double*)((uint8*)THIS$1 + 395640ll);
  }
  goto label$5250;
  label$8093:;
  if( ADR$1 != 0x1.838Cp+15 ) goto label$8095;
  label$8096:;
  {
   *(double*)((uint8*)THIS$1 + 395656ll) = (double)(((((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395648ll) )) << (24ll & 63ll)) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395624ll) )) << (16ll & 63ll))) + (((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395632ll) )) << (8ll & 63ll))) + *(double*)((uint8*)THIS$1 + 395640ll);
  }
  goto label$5250;
  label$8095:;
  if( ADR$1 != 0x1.838Ep+15 ) goto label$8097;
  label$8098:;
  {
   fb_GfxLine( FGIMAGE$, (float)*(double*)((uint8*)THIS$1 + 394840ll), (float)*(double*)((uint8*)THIS$1 + 394848ll), (float)*(double*)((uint8*)THIS$1 + 394864ll), (float)*(double*)((uint8*)THIS$1 + 394872ll), (uint32)((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 394824ll) )), 2, 65535u, 0 );
  }
  goto label$5250;
  label$8097:;
  if( ADR$1 != 0x1.83CEp+15 ) goto label$8099;
  label$8100:;
  {
   {
    if( V$1 != (double)(int64)*(uint8*)NIBBLES$ ) goto label$8102;
    label$8103:;
    {
     fb_GfxLine( FGIMAGE$, 0x0p+0f, 0x0p+0f, 0x1.DFCp+10f, 0x1.0DCp+10f, (uint32)*(uint8*)NIBBLES$, 2, 65535u, 0 );
    }
    goto label$8101;
    label$8102:;
    if( V$1 != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$8104;
    label$8105:;
    {
     fb_GfxLine( BGIMAGE$, 0x0p+0f, 0x0p+0f, 0x1.DFCp+10f, 0x1.0DCp+10f, (uint32)*(uint8*)NIBBLES$, 2, 65535u, 0 );
    }
    label$8104:;
    label$8101:;
   }
  }
  goto label$5250;
  label$8099:;
  if( ADR$1 != 0x1.83Dp+15 ) goto label$8106;
  label$8107:;
  {
   FBSTRING TMP$4319$3;
   FBSTRING TMP$4320$3;
   uint8 TMP$3;
   __builtin_memset( &TMP$3, 0, 1ll );
   {
    uint64 C$4;
    C$4 = 0ull;
    label$8111:;
    {
     *(double*)((uint8*)((uint8*)THIS$1 + ((int64)C$4 << (3ll & 63ll))) + 134479872ll) = 0x0p+0;
    }
    label$8109:;
    C$4 = C$4 + 1ull;
    label$8108:;
    if( C$4 <= 8191ull ) goto label$8111;
    label$8110:;
   }
   FBSTRING* vr$12715 = fb_DoubleToStr( V$1 + 0x1.FEp+7 );
   __builtin_memset( &TMP$4319$3, 0, 24ll );
   FBSTRING* vr$12718 = fb_StrConcat( &TMP$4319$3, (void*)"./chargen/", 11ll, (void*)vr$12715, -1ll );
   __builtin_memset( &TMP$4320$3, 0, 24ll );
   FBSTRING* vr$12721 = fb_StrConcat( &TMP$4320$3, (void*)vr$12718, -1ll, (void*)".c64", 5ll );
   fb_FileOpen( (FBSTRING*)vr$12721, 0u, 0u, 0u, 1, 0 );
   {
    uint64 I$4;
    I$4 = 0ull;
    uint64 TMP$4321$4;
    int64 vr$12722 = fb_FileSize( 1 );
    TMP$4321$4 = (uint64)vr$12722;
    goto label$8112;
    label$8115:;
    {
     fb_FileGetLarge( 1, 0ll, (void*)&TMP$3, 1ull );
     *(double*)((uint8*)((uint8*)THIS$1 + ((int64)I$4 << (3ll & 63ll))) + 134479872ll) = (double)TMP$3;
    }
    label$8113:;
    I$4 = I$4 + 1ull;
    label$8112:;
    if( I$4 <= TMP$4321$4 ) goto label$8115;
    label$8114:;
   }
   fb_FileClose( 1 );
  }
  goto label$5250;
  label$8106:;
  if( ADR$1 != 0x1.83D2p+15 ) goto label$8116;
  label$8117:;
  {
   FBSTRING TMP$4322$3;
   FBSTRING TMP$4323$3;
   uint8 TMP$3;
   __builtin_memset( &TMP$3, 0, 1ll );
   {
    uint64 C$4;
    C$4 = 0ull;
    label$8121:;
    {
     *(double*)((uint8*)((uint8*)THIS$1 + ((int64)C$4 << (3ll & 63ll))) + 134479872ll) = 0x0p+0;
    }
    label$8119:;
    C$4 = C$4 + 1ull;
    label$8118:;
    if( C$4 <= 8191ull ) goto label$8121;
    label$8120:;
   }
   FBSTRING* vr$12733 = fb_DoubleToStr( V$1 + 0x1.FEp+8 );
   __builtin_memset( &TMP$4322$3, 0, 24ll );
   FBSTRING* vr$12736 = fb_StrConcat( &TMP$4322$3, (void*)"./chargen/", 11ll, (void*)vr$12733, -1ll );
   __builtin_memset( &TMP$4323$3, 0, 24ll );
   FBSTRING* vr$12739 = fb_StrConcat( &TMP$4323$3, (void*)vr$12736, -1ll, (void*)".c64", 5ll );
   fb_FileOpen( (FBSTRING*)vr$12739, 0u, 0u, 0u, 1, 0 );
   {
    uint64 I$4;
    I$4 = 0ull;
    uint64 TMP$4324$4;
    int64 vr$12740 = fb_FileSize( 1 );
    TMP$4324$4 = (uint64)vr$12740;
    goto label$8122;
    label$8125:;
    {
     fb_FileGetLarge( 1, 0ll, (void*)&TMP$3, 1ull );
     *(double*)((uint8*)((uint8*)THIS$1 + ((int64)I$4 << (3ll & 63ll))) + 134479872ll) = (double)TMP$3;
    }
    label$8123:;
    I$4 = I$4 + 1ull;
    label$8122:;
    if( I$4 <= TMP$4324$4 ) goto label$8125;
    label$8124:;
   }
   fb_FileClose( 1 );
  }
  goto label$5250;
  label$8116:;
  if( ADR$1 != 0x1.83D4p+15 ) goto label$8126;
  label$8127:;
  {
   {
    if( V$1 != 0x0p+0 ) goto label$8129;
    label$8130:;
    {
     FBSTRING TMP$4325$5;
     FBSTRING TMP$4326$5;
     FBSTRING TMP$4327$5;
     FBSTRING TMP$4328$5;
     FBSTRING TMP$4329$5;
     FBSTRING* vr$12747 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 394896ll) );
     FBSTRING* vr$12749 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 394888ll) );
     FBSTRING* vr$12751 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 394824ll) );
     __builtin_memset( &TMP$4325$5, 0, 24ll );
     FBSTRING* vr$12754 = fb_StrConcat( &TMP$4325$5, (void*)"c", 2ll, (void*)vr$12751, -1ll );
     __builtin_memset( &TMP$4326$5, 0, 24ll );
     FBSTRING* vr$12757 = fb_StrConcat( &TMP$4326$5, (void*)vr$12754, -1ll, (void*)"M", 2ll );
     __builtin_memset( &TMP$4327$5, 0, 24ll );
     FBSTRING* vr$12760 = fb_StrConcat( &TMP$4327$5, (void*)vr$12757, -1ll, (void*)vr$12749, -1ll );
     __builtin_memset( &TMP$4328$5, 0, 24ll );
     FBSTRING* vr$12763 = fb_StrConcat( &TMP$4328$5, (void*)vr$12760, -1ll, (void*)",", 2ll );
     __builtin_memset( &TMP$4329$5, 0, 24ll );
     FBSTRING* vr$12766 = fb_StrConcat( &TMP$4329$5, (void*)vr$12763, -1ll, (void*)vr$12747, -1ll );
     fb_GfxDraw( FGIMAGE$, (FBSTRING*)vr$12766 );
    }
    goto label$8128;
    label$8129:;
    if( V$1 != 0x1.p+0 ) goto label$8131;
    label$8132:;
    {
     FBSTRING TMP$4330$5;
     FBSTRING TMP$4331$5;
     FBSTRING TMP$4332$5;
     FBSTRING* vr$12768 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 394888ll) );
     FBSTRING* vr$12770 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 394824ll) );
     __builtin_memset( &TMP$4330$5, 0, 24ll );
     FBSTRING* vr$12773 = fb_StrConcat( &TMP$4330$5, (void*)"c", 2ll, (void*)vr$12770, -1ll );
     __builtin_memset( &TMP$4331$5, 0, 24ll );
     FBSTRING* vr$12776 = fb_StrConcat( &TMP$4331$5, (void*)vr$12773, -1ll, (void*)"u", 2ll );
     __builtin_memset( &TMP$4332$5, 0, 24ll );
     FBSTRING* vr$12779 = fb_StrConcat( &TMP$4332$5, (void*)vr$12776, -1ll, (void*)vr$12768, -1ll );
     fb_GfxDraw( FGIMAGE$, (FBSTRING*)vr$12779 );
    }
    goto label$8128;
    label$8131:;
    if( V$1 != 0x1.p+1 ) goto label$8133;
    label$8134:;
    {
     FBSTRING TMP$4333$5;
     FBSTRING TMP$4334$5;
     FBSTRING TMP$4335$5;
     FBSTRING* vr$12781 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 386888ll) );
     FBSTRING* vr$12783 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 394824ll) );
     __builtin_memset( &TMP$4333$5, 0, 24ll );
     FBSTRING* vr$12786 = fb_StrConcat( &TMP$4333$5, (void*)"c", 2ll, (void*)vr$12783, -1ll );
     __builtin_memset( &TMP$4334$5, 0, 24ll );
     FBSTRING* vr$12789 = fb_StrConcat( &TMP$4334$5, (void*)vr$12786, -1ll, (void*)"d", 2ll );
     __builtin_memset( &TMP$4335$5, 0, 24ll );
     FBSTRING* vr$12792 = fb_StrConcat( &TMP$4335$5, (void*)vr$12789, -1ll, (void*)vr$12781, -1ll );
     fb_GfxDraw( FGIMAGE$, (FBSTRING*)vr$12792 );
    }
    goto label$8128;
    label$8133:;
    if( V$1 != 0x1.8p+1 ) goto label$8135;
    label$8136:;
    {
     FBSTRING TMP$4336$5;
     FBSTRING TMP$4337$5;
     FBSTRING TMP$4338$5;
     FBSTRING* vr$12794 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 386888ll) );
     FBSTRING* vr$12796 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 394824ll) );
     __builtin_memset( &TMP$4336$5, 0, 24ll );
     FBSTRING* vr$12799 = fb_StrConcat( &TMP$4336$5, (void*)"c", 2ll, (void*)vr$12796, -1ll );
     __builtin_memset( &TMP$4337$5, 0, 24ll );
     FBSTRING* vr$12802 = fb_StrConcat( &TMP$4337$5, (void*)vr$12799, -1ll, (void*)"l", 2ll );
     __builtin_memset( &TMP$4338$5, 0, 24ll );
     FBSTRING* vr$12805 = fb_StrConcat( &TMP$4338$5, (void*)vr$12802, -1ll, (void*)vr$12794, -1ll );
     fb_GfxDraw( FGIMAGE$, (FBSTRING*)vr$12805 );
    }
    goto label$8128;
    label$8135:;
    if( V$1 != 0x1.p+2 ) goto label$8137;
    label$8138:;
    {
     FBSTRING TMP$4339$5;
     FBSTRING TMP$4340$5;
     FBSTRING TMP$4341$5;
     FBSTRING* vr$12807 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 394888ll) );
     FBSTRING* vr$12809 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 394824ll) );
     __builtin_memset( &TMP$4339$5, 0, 24ll );
     FBSTRING* vr$12812 = fb_StrConcat( &TMP$4339$5, (void*)"c", 2ll, (void*)vr$12809, -1ll );
     __builtin_memset( &TMP$4340$5, 0, 24ll );
     FBSTRING* vr$12815 = fb_StrConcat( &TMP$4340$5, (void*)vr$12812, -1ll, (void*)"r", 2ll );
     __builtin_memset( &TMP$4341$5, 0, 24ll );
     FBSTRING* vr$12818 = fb_StrConcat( &TMP$4341$5, (void*)vr$12815, -1ll, (void*)vr$12807, -1ll );
     fb_GfxDraw( FGIMAGE$, (FBSTRING*)vr$12818 );
    }
    goto label$8128;
    label$8137:;
    if( V$1 != 0x1.4p+2 ) goto label$8139;
    label$8140:;
    {
     FBSTRING TMP$4342$5;
     FBSTRING TMP$4343$5;
     FBSTRING TMP$4344$5;
     FBSTRING* vr$12820 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 394888ll) );
     FBSTRING* vr$12822 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 394824ll) );
     __builtin_memset( &TMP$4342$5, 0, 24ll );
     FBSTRING* vr$12825 = fb_StrConcat( &TMP$4342$5, (void*)"c", 2ll, (void*)vr$12822, -1ll );
     __builtin_memset( &TMP$4343$5, 0, 24ll );
     FBSTRING* vr$12828 = fb_StrConcat( &TMP$4343$5, (void*)vr$12825, -1ll, (void*)"e", 2ll );
     __builtin_memset( &TMP$4344$5, 0, 24ll );
     FBSTRING* vr$12831 = fb_StrConcat( &TMP$4344$5, (void*)vr$12828, -1ll, (void*)vr$12820, -1ll );
     fb_GfxDraw( FGIMAGE$, (FBSTRING*)vr$12831 );
    }
    goto label$8128;
    label$8139:;
    if( V$1 != 0x1.8p+2 ) goto label$8141;
    label$8142:;
    {
     FBSTRING TMP$4345$5;
     FBSTRING TMP$4346$5;
     FBSTRING TMP$4347$5;
     FBSTRING* vr$12833 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 394888ll) );
     FBSTRING* vr$12835 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 394824ll) );
     __builtin_memset( &TMP$4345$5, 0, 24ll );
     FBSTRING* vr$12838 = fb_StrConcat( &TMP$4345$5, (void*)"c", 2ll, (void*)vr$12835, -1ll );
     __builtin_memset( &TMP$4346$5, 0, 24ll );
     FBSTRING* vr$12841 = fb_StrConcat( &TMP$4346$5, (void*)vr$12838, -1ll, (void*)"f", 2ll );
     __builtin_memset( &TMP$4347$5, 0, 24ll );
     FBSTRING* vr$12844 = fb_StrConcat( &TMP$4347$5, (void*)vr$12841, -1ll, (void*)vr$12833, -1ll );
     fb_GfxDraw( FGIMAGE$, (FBSTRING*)vr$12844 );
    }
    goto label$8128;
    label$8141:;
    if( V$1 != 0x1.Cp+2 ) goto label$8143;
    label$8144:;
    {
     FBSTRING TMP$4348$5;
     FBSTRING TMP$4349$5;
     FBSTRING TMP$4350$5;
     FBSTRING* vr$12846 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 394888ll) );
     FBSTRING* vr$12848 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 394824ll) );
     __builtin_memset( &TMP$4348$5, 0, 24ll );
     FBSTRING* vr$12851 = fb_StrConcat( &TMP$4348$5, (void*)"c", 2ll, (void*)vr$12848, -1ll );
     __builtin_memset( &TMP$4349$5, 0, 24ll );
     FBSTRING* vr$12854 = fb_StrConcat( &TMP$4349$5, (void*)vr$12851, -1ll, (void*)"g", 2ll );
     __builtin_memset( &TMP$4350$5, 0, 24ll );
     FBSTRING* vr$12857 = fb_StrConcat( &TMP$4350$5, (void*)vr$12854, -1ll, (void*)vr$12846, -1ll );
     fb_GfxDraw( FGIMAGE$, (FBSTRING*)vr$12857 );
    }
    goto label$8128;
    label$8143:;
    if( V$1 != 0x1.p+3 ) goto label$8145;
    label$8146:;
    {
     FBSTRING TMP$4351$5;
     FBSTRING TMP$4352$5;
     FBSTRING TMP$4353$5;
     FBSTRING* vr$12859 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 394888ll) );
     FBSTRING* vr$12861 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 394824ll) );
     __builtin_memset( &TMP$4351$5, 0, 24ll );
     FBSTRING* vr$12864 = fb_StrConcat( &TMP$4351$5, (void*)"c", 2ll, (void*)vr$12861, -1ll );
     __builtin_memset( &TMP$4352$5, 0, 24ll );
     FBSTRING* vr$12867 = fb_StrConcat( &TMP$4352$5, (void*)vr$12864, -1ll, (void*)"h", 2ll );
     __builtin_memset( &TMP$4353$5, 0, 24ll );
     FBSTRING* vr$12870 = fb_StrConcat( &TMP$4353$5, (void*)vr$12867, -1ll, (void*)vr$12859, -1ll );
     fb_GfxDraw( FGIMAGE$, (FBSTRING*)vr$12870 );
    }
    goto label$8128;
    label$8145:;
    if( V$1 != 0x1.2p+3 ) goto label$8147;
    label$8148:;
    {
     FBSTRING TMP$4354$5;
     FBSTRING* vr$12872 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 394824ll) );
     __builtin_memset( &TMP$4354$5, 0, 24ll );
     FBSTRING* vr$12875 = fb_StrConcat( &TMP$4354$5, (void*)"c", 2ll, (void*)vr$12872, -1ll );
     fb_GfxDraw( FGIMAGE$, (FBSTRING*)vr$12875 );
    }
    goto label$8128;
    label$8147:;
    if( V$1 != 0x1.4p+3 ) goto label$8149;
    label$8150:;
    {
     FBSTRING TMP$4355$5;
     FBSTRING TMP$4356$5;
     FBSTRING TMP$4357$5;
     FBSTRING TMP$4358$5;
     FBSTRING TMP$4359$5;
     FBSTRING* vr$12877 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 394896ll) );
     FBSTRING* vr$12879 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 394888ll) );
     FBSTRING* vr$12881 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 394824ll) );
     __builtin_memset( &TMP$4355$5, 0, 24ll );
     FBSTRING* vr$12884 = fb_StrConcat( &TMP$4355$5, (void*)"c", 2ll, (void*)vr$12881, -1ll );
     __builtin_memset( &TMP$4356$5, 0, 24ll );
     FBSTRING* vr$12887 = fb_StrConcat( &TMP$4356$5, (void*)vr$12884, -1ll, (void*)"p", 2ll );
     __builtin_memset( &TMP$4357$5, 0, 24ll );
     FBSTRING* vr$12890 = fb_StrConcat( &TMP$4357$5, (void*)vr$12887, -1ll, (void*)vr$12879, -1ll );
     __builtin_memset( &TMP$4358$5, 0, 24ll );
     FBSTRING* vr$12893 = fb_StrConcat( &TMP$4358$5, (void*)vr$12890, -1ll, (void*)",", 2ll );
     __builtin_memset( &TMP$4359$5, 0, 24ll );
     FBSTRING* vr$12896 = fb_StrConcat( &TMP$4359$5, (void*)vr$12893, -1ll, (void*)vr$12877, -1ll );
     fb_GfxDraw( FGIMAGE$, (FBSTRING*)vr$12896 );
    }
    goto label$8128;
    label$8149:;
    if( V$1 != 0x1.6p+3 ) goto label$8151;
    label$8152:;
    {
     FBSTRING TMP$4360$5;
     FBSTRING TMP$4361$5;
     FBSTRING TMP$4362$5;
     FBSTRING* vr$12898 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 394888ll) );
     FBSTRING* vr$12900 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 394824ll) );
     __builtin_memset( &TMP$4360$5, 0, 24ll );
     FBSTRING* vr$12903 = fb_StrConcat( &TMP$4360$5, (void*)"c", 2ll, (void*)vr$12900, -1ll );
     __builtin_memset( &TMP$4361$5, 0, 24ll );
     FBSTRING* vr$12906 = fb_StrConcat( &TMP$4361$5, (void*)vr$12903, -1ll, (void*)"s", 2ll );
     __builtin_memset( &TMP$4362$5, 0, 24ll );
     FBSTRING* vr$12909 = fb_StrConcat( &TMP$4362$5, (void*)vr$12906, -1ll, (void*)vr$12898, -1ll );
     fb_GfxDraw( FGIMAGE$, (FBSTRING*)vr$12909 );
    }
    goto label$8128;
    label$8151:;
    if( V$1 != 0x1.8p+3 ) goto label$8153;
    label$8154:;
    {
     FBSTRING TMP$4363$5;
     FBSTRING TMP$4364$5;
     FBSTRING TMP$4365$5;
     FBSTRING* vr$12911 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 394888ll) );
     FBSTRING* vr$12913 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 394824ll) );
     __builtin_memset( &TMP$4363$5, 0, 24ll );
     FBSTRING* vr$12916 = fb_StrConcat( &TMP$4363$5, (void*)"c", 2ll, (void*)vr$12913, -1ll );
     __builtin_memset( &TMP$4364$5, 0, 24ll );
     FBSTRING* vr$12919 = fb_StrConcat( &TMP$4364$5, (void*)vr$12916, -1ll, (void*)"a", 2ll );
     __builtin_memset( &TMP$4365$5, 0, 24ll );
     FBSTRING* vr$12922 = fb_StrConcat( &TMP$4365$5, (void*)vr$12919, -1ll, (void*)vr$12911, -1ll );
     fb_GfxDraw( FGIMAGE$, (FBSTRING*)vr$12922 );
    }
    goto label$8128;
    label$8153:;
    if( V$1 != 0x1.Ap+3 ) goto label$8155;
    label$8156:;
    {
     FBSTRING TMP$4367$5;
     FBSTRING TMP$4368$5;
     FBSTRING TMP$4369$5;
     FBSTRING* vr$12924 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 394888ll) );
     FBSTRING* vr$12926 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 394824ll) );
     __builtin_memset( &TMP$4367$5, 0, 24ll );
     FBSTRING* vr$12929 = fb_StrConcat( &TMP$4367$5, (void*)"c", 2ll, (void*)vr$12926, -1ll );
     __builtin_memset( &TMP$4368$5, 0, 24ll );
     FBSTRING* vr$12932 = fb_StrConcat( &TMP$4368$5, (void*)vr$12929, -1ll, (void*)"ta", 3ll );
     __builtin_memset( &TMP$4369$5, 0, 24ll );
     FBSTRING* vr$12935 = fb_StrConcat( &TMP$4369$5, (void*)vr$12932, -1ll, (void*)vr$12924, -1ll );
     fb_GfxDraw( FGIMAGE$, (FBSTRING*)vr$12935 );
    }
    goto label$8128;
    label$8155:;
    if( V$1 != 0x1.Cp+3 ) goto label$8157;
    label$8158:;
    {
     FBSTRING TMP$4370$5;
     FBSTRING TMP$4371$5;
     FBSTRING* vr$12937 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 394824ll) );
     __builtin_memset( &TMP$4370$5, 0, 24ll );
     FBSTRING* vr$12940 = fb_StrConcat( &TMP$4370$5, (void*)"c", 2ll, (void*)vr$12937, -1ll );
     __builtin_memset( &TMP$4371$5, 0, 24ll );
     FBSTRING* vr$12943 = fb_StrConcat( &TMP$4371$5, (void*)vr$12940, -1ll, (void*)&STRCODE$, -1ll );
     fb_GfxDraw( FGIMAGE$, (FBSTRING*)vr$12943 );
     fb_StrAssign( (void*)&STRCODE$, -1ll, (void*)"", 1ll, 0 );
    }
    goto label$8128;
    label$8157:;
    if( V$1 != 0x1.Ep+3 ) goto label$8159;
    label$8160:;
    {
     FBSTRING TMP$4372$5;
     __builtin_memset( &TMP$4372$5, 0, 24ll );
     FBSTRING* vr$12946 = fb_StrConcat( &TMP$4372$5, (void*)"b", 2ll, (void*)&STRCODE$, -1ll );
     fb_GfxDraw( FGIMAGE$, (FBSTRING*)vr$12946 );
     fb_StrAssign( (void*)&STRCODE$, -1ll, (void*)"", 1ll, 0 );
    }
    goto label$8128;
    label$8159:;
    if( V$1 != 0x1.p+4 ) goto label$8161;
    label$8162:;
    {
     FBSTRING TMP$4373$5;
     FBSTRING TMP$4374$5;
     FBSTRING TMP$4375$5;
     FBSTRING* vr$12948 = fb_DoubleToStr( *(double*)((uint8*)THIS$1 + 394824ll) );
     __builtin_memset( &TMP$4373$5, 0, 24ll );
     FBSTRING* vr$12951 = fb_StrConcat( &TMP$4373$5, (void*)"c", 2ll, (void*)vr$12948, -1ll );
     __builtin_memset( &TMP$4374$5, 0, 24ll );
     FBSTRING* vr$12954 = fb_StrConcat( &TMP$4374$5, (void*)vr$12951, -1ll, (void*)"n", 2ll );
     __builtin_memset( &TMP$4375$5, 0, 24ll );
     FBSTRING* vr$12957 = fb_StrConcat( &TMP$4375$5, (void*)vr$12954, -1ll, (void*)&STRCODE$, -1ll );
     fb_GfxDraw( FGIMAGE$, (FBSTRING*)vr$12957 );
     fb_StrAssign( (void*)&STRCODE$, -1ll, (void*)"", 1ll, 0 );
    }
    label$8161:;
    label$8128:;
   }
  }
  goto label$5250;
  label$8126:;
  if( ADR$1 != 0x1.83D6p+15 ) goto label$8163;
  label$8164:;
  {
   {
    if( V$1 != 0x0p+0 ) goto label$8166;
    label$8167:;
    {
     _ZN8MEMORY_T6POKE64Edd( THIS$1, (*(double*)((uint8*)THIS$1 + 395608ll) + *(double*)((uint8*)THIS$1 + 394888ll)) + (*(double*)((uint8*)THIS$1 + 394896ll) * 0x1.4p+5), *(double*)((uint8*)THIS$1 + 394944ll) );
    }
    label$8166:;
    label$8165:;
   }
  }
  goto label$5250;
  label$8163:;
  if( ADR$1 != 0x1.83D8p+15 ) goto label$8168;
  label$8169:;
  {
   {
    if( V$1 != 0x0p+0 ) goto label$8171;
    label$8172:;
    {
     _ZN8MEMORY_T6POKE64Edd( THIS$1, (*(double*)((uint8*)THIS$1 + 394888ll) + (*(double*)((uint8*)THIS$1 + 394896ll) * 0x1.68p+6)) + 0x1.p+14, *(double*)((uint8*)THIS$1 + 394944ll) );
    }
    label$8171:;
    label$8170:;
   }
  }
  goto label$5250;
  label$8168:;
  if( ADR$1 != 0x1.83DAp+15 ) goto label$8173;
  label$8174:;
  {
   {
    if( V$1 != 0x0p+0 ) goto label$8176;
    label$8177:;
    {
     _ZN8MEMORY_T5POKEBEdd( THIS$1, (*(double*)((uint8*)THIS$1 + 394888ll) + (*(double*)((uint8*)THIS$1 + 394896ll) * 0x1.4p+7)) + 0x1.Ap+19, *(double*)((uint8*)THIS$1 + 394944ll) );
    }
    label$8176:;
    label$8175:;
   }
  }
  goto label$5250;
  label$8173:;
  if( ADR$1 < *(double*)((uint8*)THIS$1 + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) ) goto label$8178;
  if( ADR$1 > (*(double*)((uint8*)THIS$1 + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll))) + (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll))) ) goto label$8178;
  label$8179:;
  {
   ADR$1 = ADR$1 - *(double*)((uint8*)THIS$1 + ((((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) << (3ll & 63ll)));
   C$ = ((uint64)__builtin_nearbyint( V$1 ));
   C$ = (uint64)C$ << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) & 63ll);
   C$ = ((uint64)__builtin_nearbyint( (double)(uint64)C$ + *(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)) << (3ll & 63ll))) ));
   if( *(double*)((uint8*)THIS$1 + ((int64)RVS$ << (3ll & 63ll))) == (double)(int64)*(uint8*)NIBBLES$ ) goto label$8181;
   {
    *(double*)&C$ = (double)(((int64)__builtin_nearbyint( *(double*)&C$ )) & (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)));
    label$8181:;
   }
   if( *(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) << (3ll & 63ll))) > (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$8183;
   {
    *(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 13ll)) << (3ll & 63ll))) = (double)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
    label$8183:;
   }
   _ZN8MEMORY_T6POKE64Edd( THIS$1, (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll)), (double)*(uint8*)NIBBLES$ );
   if( *(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) << (3ll & 63ll))) != (double)(int64)*(uint8*)NIBBLES$ ) goto label$8185;
   {
    XS$ = (uint64)(((int64)__builtin_nearbyint( ADR$1 )) % (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)));
    XS$ = (uint64)XS$ << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) & 63ll);
    XS$ = ((uint64)__builtin_nearbyint( ((double)(uint64)XS$ + (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll))) + 0x1.Cp+1 ));
    YS$ = (uint64)(((int64)__builtin_nearbyint( ADR$1 )) / (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll)));
    YS$ = (uint64)YS$ << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 3ll) & 63ll);
    YS$ = ((uint64)__builtin_nearbyint( ((double)(uint64)YS$ + (double)(((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll))) + 0x1.Cp+1 ));
    *(double*)&Y$ = (double)*(uint8*)NIBBLES$;
    *(double*)&X$ = (double)*(uint8*)NIBBLES$;
    label$8186:;
    if( ((int64)-((double)Y$ == *(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll)) << (3ll & 63ll)))) & (int64)-((double)X$ == *(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) << (3ll & 63ll))))) != 0ll ) goto label$8187;
    {
     *(double*)((uint8*)THIS$1 + 394840ll) = ((double)(XS$ + X$) * 0x1.5p+2) + *(double*)((uint8*)THIS$1 + 395032ll);
     *(double*)((uint8*)THIS$1 + 394848ll) = ((double)(YS$ + Y$) * 0x1.1p+2) + *(double*)((uint8*)THIS$1 + 395040ll);
     *(double*)((uint8*)THIS$1 + 394864ll) = (((double)(XS$ + X$) * 0x1.5p+2) + *(double*)((uint8*)THIS$1 + 395032ll)) + 0x1.Cp+2;
     *(double*)((uint8*)THIS$1 + 394872ll) = (((double)(YS$ + Y$) * 0x1.1p+2) + *(double*)((uint8*)THIS$1 + 395040ll)) + 0x1.Cp+2;
     double vr$13206 = _ZN8MEMORY_T6PEEK64Ed( THIS$1, 0x1.81F8p+15 );
     _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.81F8p+15, vr$13206 );
     X$ = (uint64)X$ + (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
     if( (double)(uint64)X$ <= *(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 9ll)) << (3ll & 63ll))) ) goto label$8189;
     {
      X$ = (uint64)*(uint8*)NIBBLES$;
      Y$ = (uint64)Y$ + (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
      C$ = (uint64)C$ + (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
     }
     label$8189:;
     label$8188:;
    }
    goto label$8186;
    label$8187:;
    _ZN8MEMORY_T6POKE64Edd( THIS$1, (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll)), (double)*(uint8*)NIBBLES$ );
   }
   goto label$8184;
   label$8185:;
   if( *(double*)((uint8*)THIS$1 + (((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll)) << (3ll & 63ll))) != (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$8190;
   {
    XS$ = ((int64)__builtin_nearbyint( ADR$1 )) % 40ll;
    XS$ = XS$ << (3ll & 63ll);
    XS$ = XS$ + 32ll;
    YS$ = ((int64)__builtin_nearbyint( ADR$1 )) / 40ll;
    YS$ = YS$ << (3ll & 63ll);
    YS$ = YS$ + 32ll;
    Y$ = ((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395088ll) ));
    X$ = ((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395080ll) ));
    label$8191:;
    if( ((int64)-(Y$ == 0ll) & (int64)-(X$ == 0ll)) != 0ll ) goto label$8192;
    {
     *(double*)((uint8*)THIS$1 + 394864ll) = (double)(((XS$ - X$) * 5ll) + 2ll) + *(double*)((uint8*)THIS$1 + 395032ll);
     *(double*)((uint8*)THIS$1 + 394872ll) = (double)(((YS$ - Y$) << (2ll & 63ll)) + 2ll) + *(double*)((uint8*)THIS$1 + 395040ll);
     *(double*)((uint8*)THIS$1 + 394840ll) = (double)(((XS$ - X$) * 5ll) + -2ll) + *(double*)((uint8*)THIS$1 + 395032ll);
     *(double*)((uint8*)THIS$1 + 394848ll) = (double)(((YS$ - Y$) << (2ll & 63ll)) + -2ll) + *(double*)((uint8*)THIS$1 + 395040ll);
     double vr$13293 = _ZN8MEMORY_T6PEEK64Ed( THIS$1, 0x1.81F8p+15 );
     _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.81F8p+15, vr$13293 );
     X$ = X$ + -1ll;
     if( X$ >= 0ll ) goto label$8194;
     {
      X$ = ((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395080ll) ));
      Y$ = Y$ + -1ll;
      C$ = C$ + 1ll;
      label$8194:;
     }
    }
    goto label$8191;
    label$8192:;
    fb_GfxUnlock( (int32)YS$, (int32)(YS$ + 8ll) );
   }
   goto label$8184;
   label$8190:;
   if( *(double*)((uint8*)THIS$1 + 395064ll) != 0x1.p+1 ) goto label$8195;
   {
    XS$ = ((int64)__builtin_nearbyint( ADR$1 )) % 40ll;
    XS$ = XS$ << (3ll & 63ll);
    XS$ = ((int64)__builtin_nearbyint( (double)XS$ + 0x1.88p+4 ));
    YS$ = ((int64)__builtin_nearbyint( ADR$1 )) / 40ll;
    YS$ = YS$ << (3ll & 63ll);
    YS$ = ((int64)__builtin_nearbyint( (double)YS$ + 0x1.88p+4 ));
    Y$ = 0ll;
    X$ = 0ll;
    label$8196:;
    if( ((int64)-((double)Y$ == *(double*)((uint8*)THIS$1 + 395088ll)) & (int64)-((double)X$ == *(double*)((uint8*)THIS$1 + 395080ll))) != 0ll ) goto label$8197;
    {
     *(double*)((uint8*)THIS$1 + 394840ll) = ((double)((XS$ + X$) * 5ll) / 0x1.p+1) + *(double*)((uint8*)THIS$1 + 395032ll);
     *(double*)((uint8*)THIS$1 + 394848ll) = ((double)((YS$ + Y$) << (2ll & 63ll)) / 0x1.p+1) + *(double*)((uint8*)THIS$1 + 395040ll);
     *(double*)((uint8*)THIS$1 + 394864ll) = ((double)(((XS$ + X$) * 5ll) + 7ll) / 0x1.p+1) + *(double*)((uint8*)THIS$1 + 395032ll);
     *(double*)((uint8*)THIS$1 + 394872ll) = ((double)(((YS$ + Y$) << (2ll & 63ll)) + 4ll) / 0x1.p+1) + *(double*)((uint8*)THIS$1 + 395040ll);
     double vr$13352 = _ZN8MEMORY_T6PEEK64Ed( THIS$1, 0x1.81F8p+15 );
     _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.81F8p+15, vr$13352 );
     X$ = X$ + 1ll;
     if( (double)X$ <= *(double*)((uint8*)THIS$1 + 395080ll) ) goto label$8199;
     {
      X$ = 0ll;
      Y$ = Y$ + 1ll;
      C$ = C$ + 1ll;
      label$8199:;
     }
    }
    goto label$8196;
    label$8197:;
    _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.8208p+15, 0x0p+0 );
   }
   goto label$8184;
   label$8195:;
   if( *(double*)((uint8*)THIS$1 + 395064ll) != 0x1.8p+1 ) goto label$8200;
   {
    XS$ = ((int64)__builtin_nearbyint( ADR$1 )) % 80ll;
    XS$ = XS$ << (3ll & 63ll);
    XS$ = XS$ + 32ll;
    YS$ = ((int64)__builtin_nearbyint( ADR$1 )) / 80ll;
    YS$ = YS$ << (3ll & 63ll);
    YS$ = YS$ + 32ll;
    {
     Y$ = ((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395088ll) ));
     goto label$8201;
     label$8204:;
     {
      {
       X$ = 0ll;
       int64 TMP$4376$7;
       TMP$4376$7 = ((int64)__builtin_nearbyint( *(double*)((uint8*)THIS$1 + 395080ll) ));
       goto label$8205;
       label$8208:;
       {
        *(double*)((uint8*)THIS$1 + 394864ll) = ((((double)(XS$ - X$) * 0x1.4p+2) + 0x1.p+1) / 0x1.p+1) + *(double*)((uint8*)THIS$1 + 395032ll);
        *(double*)((uint8*)THIS$1 + 394872ll) = ((((double)(YS$ - Y$) * 0x1.p+2) + 0x1.p+1) / 0x1.p+1) + *(double*)((uint8*)THIS$1 + 395040ll);
        *(double*)((uint8*)THIS$1 + 394840ll) = ((((double)(XS$ - X$) * 0x1.4p+2) + -0x1.p+1) / 0x1.p+1) + *(double*)((uint8*)THIS$1 + 395032ll);
        *(double*)((uint8*)THIS$1 + 394848ll) = ((((double)(YS$ - Y$) * 0x1.p+2) + -0x1.p+1) / 0x1.p+1) + *(double*)((uint8*)THIS$1 + 395040ll);
        double vr$13403 = _ZN8MEMORY_T6PEEK64Ed( THIS$1, 0x1.81F8p+15 );
        _ZN8MEMORY_T6POKE64Edd( THIS$1, 0x1.81F8p+15, vr$13403 );
       }
       label$8206:;
       X$ = X$ + 1ll;
       label$8205:;
       if( X$ <= TMP$4376$7 ) goto label$8208;
       label$8207:;
      }
      C$ = ((int64)__builtin_nearbyint( (double)C$ + 0x1.p+0 ));
     }
     label$8202:;
     Y$ = Y$ + -1ll;
     label$8201:;
     if( Y$ >= 0ll ) goto label$8204;
     label$8203:;
    }
    fb_GfxUnlock( (int32)YS$, ((int32)__builtin_nearbyint( (double)YS$ + 0x1.p+3 )) );
   }
   label$8200:;
   label$8184:;
  }
  goto label$5250;
  label$8178:;
  if( ADR$1 < (*(double*)((uint8*)THIS$1 + 395608ll) + 0x1.p+10) ) goto label$8209;
  if( ADR$1 > (*(double*)((uint8*)THIS$1 + 395608ll) + 0x1.01Cp+10) ) goto label$8209;
  label$8210:;
  {
   {
    if( ADR$1 != (*(double*)((uint8*)THIS$1 + 395608ll) + 0x1.p+10) ) goto label$8212;
    label$8213:;
    {
    }
    goto label$8211;
    label$8212:;
    if( ADR$1 != (*(double*)((uint8*)THIS$1 + 395608ll) + 0x1.01p+10) ) goto label$8214;
    label$8215:;
    {
    }
    goto label$8211;
    label$8214:;
    if( ADR$1 != (*(double*)((uint8*)THIS$1 + 395608ll) + 0x1.014p+10) ) goto label$8216;
    label$8217:;
    {
    }
    goto label$8211;
    label$8216:;
    if( ADR$1 != (*(double*)((uint8*)THIS$1 + 395608ll) + 0x1.018p+10) ) goto label$8218;
    label$8219:;
    {
    }
    goto label$8211;
    label$8218:;
    if( ADR$1 != (*(double*)((uint8*)THIS$1 + 395608ll) + 0x1.01Cp+10) ) goto label$8220;
    label$8221:;
    {
    }
    label$8220:;
    label$8211:;
   }
  }
  goto label$5250;
  label$8209:;
  if( ADR$1 < (double)((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) ) goto label$8222;
  if( ADR$1 > (double)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 7ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) ) goto label$8222;
  label$8223:;
  {
   _ZN8MEMORY_T5POKEBEdd( THIS$1, ADR$1, V$1 );
  }
  goto label$5250;
  label$8222:;
  if( ADR$1 < 0x1.Cp+15 ) goto label$8226;
  if( ADR$1 <= 0x1.FFFEp+15 ) goto label$8225;
  label$8226:;
  if( ADR$1 < 0x1.4p+15 ) goto label$8227;
  if( ADR$1 <= 0x1.7FFEp+15 ) goto label$8225;
  label$8227:;
  if( ADR$1 < 0x1.Bp+15 ) goto label$8224;
  if( ADR$1 > 0x1.B7FEp+15 ) goto label$8224;
  label$8225:;
  {
   *(double*)((uint8*)THIS$1 + (((int64)__builtin_nearbyint( ADR$1 )) << (3ll & 63ll))) = V$1;
  }
  label$8224:;
  label$5250:;
 }
 label$8228:;
 label$2887:;
}

uint8 _ZN8MEMORY_T9READUBYTEEd( struct $8MEMORY_T* THIS$1, double ADR$1 )
{
 uint8 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 1ll );
 label$8232:;
 double vr$1 = _ZN8MEMORY_T6PEEK64Ed( THIS$1, ADR$1 );
 fb$result$1 = (uint8)((int32)__builtin_nearbyint( vr$1 ));
 goto label$8233;
 label$8233:;
 return fb$result$1;
}

int8 _ZN8MEMORY_T8READBYTEEd( struct $8MEMORY_T* THIS$1, double ADR$1 )
{
 int8 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 1ll );
 label$8234:;
 double vr$1 = _ZN8MEMORY_T6PEEK64Ed( THIS$1, ADR$1 );
 fb$result$1 = (int8)((int32)__builtin_nearbyint( vr$1 ));
 goto label$8235;
 label$8235:;
 return fb$result$1;
}

uint16 _ZN8MEMORY_T10READUSHORTEd( struct $8MEMORY_T* THIS$1, double ADR$1 )
{
 uint16 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 2ll );
 label$8236:;
 double vr$1 = _ZN8MEMORY_T6PEEK64Ed( THIS$1, ADR$1 );
 double vr$6 = _ZN8MEMORY_T6PEEK64Ed( THIS$1, ADR$1 + (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) );
 fb$result$1 = (uint16)(((int64)__builtin_nearbyint( vr$1 )) | (((int64)__builtin_nearbyint( vr$6 )) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)));
 goto label$8237;
 label$8237:;
 return fb$result$1;
}

void _ZN8MEMORY_T9WRITEBYTEEdd( struct $8MEMORY_T* THIS$1, double ADR$1, double B8$1 )
{
 label$8238:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, ADR$1, B8$1 );
 label$8239:;
}

void _ZN8MEMORY_T10WRITEUBYTEEdd( struct $8MEMORY_T* THIS$1, double ADR$1, double B8$1 )
{
 label$8240:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, ADR$1, B8$1 );
 label$8241:;
}

void _ZN8MEMORY_T11WRITEUSHORTEdd( struct $8MEMORY_T* THIS$1, double ADR$1, double W16$1 )
{
 label$8242:;
 _ZN8MEMORY_T6POKE64Edd( THIS$1, ADR$1, (double)(((uint64)__builtin_nearbyint( W16$1 )) & 255ull) );
 _ZN8MEMORY_T6POKE64Edd( THIS$1, ADR$1 + (double)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll), (double)((((uint64)__builtin_nearbyint( W16$1 )) & 65280ull) >> (8ll & 63ll)) );
 label$8243:;
}

void _ZN7CPU6510C1EP8MEMORY_T( struct $7CPU6510* THIS$1, struct $8MEMORY_T* LPMEM$1 )
{
 label$8244:;
 __builtin_memset( (uint8*)THIS$1, 0, 1ll );
 __builtin_memset( (uint8*)((uint8*)THIS$1 + 1ll), 0, 1ll );
 __builtin_memset( (uint8*)((uint8*)THIS$1 + 2ll), 0, 1ll );
 __builtin_memset( (uint8*)((uint8*)THIS$1 + 3ll), 0, 1ll );
 __builtin_memset( (uint16*)((uint8*)THIS$1 + 4ll), 0, 2ll );
 __builtin_memset( (uint16*)((uint8*)THIS$1 + 6ll), 0, 2ll );
 __builtin_memset( (struct $8MEMORY_T**)((uint8*)THIS$1 + 8ll), 0, 8ll );
 __builtin_memset( (struct $6OPCODE*)((uint8*)THIS$1 + 16ll), 0, 56ll );
 __builtin_memset( (struct $6OPCODE*)((uint8*)THIS$1 + 72ll), 0, 14336ll );
 __builtin_memset( (FBSTRING*)((uint8*)THIS$1 + 14408ll), 0, 312ll );
 *(struct $8MEMORY_T**)((uint8*)THIS$1 + 8ll) = LPMEM$1;
 int64 I$1;
 I$1 = 0ll;
 fb_DataRestore( (void*)label$8247 );
 {
  I$1 = 0ll;
  label$8251:;
  {
   {
    struct $6OPCODE* TMP$4389$4;
    TMP$4389$4 = (struct $6OPCODE*)((uint8*)((uint8*)THIS$1 + (I$1 * 56ll)) + 72ll);
    fb_DataReadULongint( (uint64*)TMP$4389$4 );
    fb_DataReadStr( (void*)((uint8*)TMP$4389$4 + 8ll), 4ll, 0 );
    fb_DataReadULongint( (uint64*)((uint8*)TMP$4389$4 + 16ll) );
    fb_DataReadULongint( (uint64*)((uint8*)TMP$4389$4 + 24ll) );
    fb_DataReadULongint( (uint64*)((uint8*)TMP$4389$4 + 32ll) );
    fb_DataReadULongint( (uint64*)((uint8*)TMP$4389$4 + 48ll) );
   }
  }
  label$8249:;
  I$1 = I$1 + 1ll;
  label$8248:;
  if( I$1 <= 255ll ) goto label$8251;
  label$8250:;
 }
 fb_DataRestore( (void*)label$8253 );
 {
  I$1 = 0ll;
  label$8257:;
  {
   fb_DataReadStr( (void*)((uint8*)((uint8*)THIS$1 + (I$1 * 24ll)) + 14408ll), -1ll, 0 );
  }
  label$8255:;
  I$1 = I$1 + 1ll;
  label$8254:;
  if( I$1 <= 12ll ) goto label$8257;
  label$8256:;
 }
 *(uint8*)((uint8*)THIS$1 + 7ll) = (uint8)1u;
 *(uint16*)((uint8*)THIS$1 + 4ll) = (uint16)64738u;
 label$8245:;
}

void _ZN7CPU6510D1Ev( struct $7CPU6510* THIS$1 )
{
 label$8258:;
 label$8259:;
 struct $N7CPU65108FBARRAY1I8FBSTRINGEE {
  FBSTRING* DATA;
  FBSTRING* PTR;
  int64 SIZE;
  int64 ELEMENT_LEN;
  int64 DIMENSIONS;
  int64 FLAGS;
  struct $16__FB_ARRAYDIMTB$ DIMTB[1];
 };
 extern int __$fb_structsizecheck[(sizeof( struct $N7CPU65108FBARRAY1I8FBSTRINGEE ) == 72) ? 1 : -1];
 struct $N7CPU65108FBARRAY1I8FBSTRINGEE tmp$4391$1;
 *(FBSTRING**)&tmp$4391$1 = (FBSTRING*)((uint8*)THIS$1 + 14408ll);
 *(FBSTRING**)((uint8*)&tmp$4391$1 + 8ll) = (FBSTRING*)((uint8*)THIS$1 + 14408ll);
 *(int64*)((uint8*)&tmp$4391$1 + 16ll) = 312ll;
 *(int64*)((uint8*)&tmp$4391$1 + 24ll) = 24ll;
 *(int64*)((uint8*)&tmp$4391$1 + 32ll) = 1ll;
 *(int64*)((uint8*)&tmp$4391$1 + 40ll) = 49ll;
 *(int64*)((uint8*)&tmp$4391$1 + 48ll) = 13ll;
 *(int64*)((uint8*)&tmp$4391$1 + 56ll) = 0ll;
 *(int64*)((uint8*)&tmp$4391$1 + 64ll) = 12ll;
 fb_ArrayDestructStr( (struct $7FBARRAYIvE*)&tmp$4391$1 );
}

FBSTRING* _ZN7CPU6510cv8FBSTRINGEv( struct $7CPU6510* THIS$1 )
{
 FBSTRING TMP$4405$1;
 FBSTRING TMP$4406$1;
 FBSTRING TMP$4407$1;
 FBSTRING TMP$4408$1;
 FBSTRING TMP$4409$1;
 FBSTRING TMP$4410$1;
 FBSTRING TMP$4411$1;
 FBSTRING TMP$4412$1;
 FBSTRING TMP$4413$1;
 FBSTRING TMP$4414$1;
 FBSTRING TMP$4415$1;
 FBSTRING TMP$4416$1;
 FBSTRING TMP$4417$1;
 FBSTRING TMP$4418$1;
 FBSTRING TMP$4419$1;
 FBSTRING TMP$4420$1;
 FBSTRING TMP$4421$1;
 FBSTRING TMP$4422$1;
 FBSTRING TMP$4423$1;
 FBSTRING TMP$4424$1;
 FBSTRING TMP$4425$1;
 FBSTRING TMP$4426$1;
 FBSTRING TMP$4427$1;
 FBSTRING TMP$4428$1;
 FBSTRING fb$result$1;
 __builtin_memset( &fb$result$1, 0, 24ll );
 label$8260:;
 FBSTRING* vr$4 = fb_ULongintToStr( (uint64)(int64)*(uint8*)THIS$1 & 1ull );
 FBSTRING* vr$9 = fb_ULongintToStr( (uint64)((int64)*(uint8*)THIS$1 >> (1ll & 63ll)) & 1ull );
 FBSTRING* vr$14 = fb_ULongintToStr( (uint64)((int64)*(uint8*)THIS$1 >> (2ll & 63ll)) & 1ull );
 FBSTRING* vr$19 = fb_ULongintToStr( (uint64)((int64)*(uint8*)THIS$1 >> (3ll & 63ll)) & 1ull );
 FBSTRING* vr$24 = fb_ULongintToStr( (uint64)((int64)*(uint8*)THIS$1 >> (4ll & 63ll)) & 1ull );
 FBSTRING* vr$29 = fb_ULongintToStr( (uint64)((int64)*(uint8*)THIS$1 >> (6ll & 63ll)) & 1ull );
 FBSTRING* vr$34 = fb_ULongintToStr( (uint64)((int64)*(uint8*)THIS$1 >> (7ll & 63ll)) & 1ull );
 FBSTRING* vr$37 = fb_HEXEx_b( *(uint8*)((uint8*)THIS$1 + 6ll), (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
 FBSTRING* vr$40 = fb_HEXEx_b( *(uint8*)((uint8*)THIS$1 + 3ll), (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
 FBSTRING* vr$43 = fb_HEXEx_b( *(uint8*)((uint8*)THIS$1 + 2ll), (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
 FBSTRING* vr$46 = fb_HEXEx_b( *(uint8*)((uint8*)THIS$1 + 1ll), (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) );
 FBSTRING* vr$49 = fb_HEXEx_s( *(uint16*)((uint8*)THIS$1 + 4ll), (int32)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) );
 __builtin_memset( &TMP$4405$1, 0, 24ll );
 FBSTRING* vr$52 = fb_StrConcat( &TMP$4405$1, (void*)"PC:", 4ll, (void*)vr$49, -1ll );
 __builtin_memset( &TMP$4406$1, 0, 24ll );
 FBSTRING* vr$55 = fb_StrConcat( &TMP$4406$1, (void*)vr$52, -1ll, (void*)" A:", 4ll );
 __builtin_memset( &TMP$4407$1, 0, 24ll );
 FBSTRING* vr$58 = fb_StrConcat( &TMP$4407$1, (void*)vr$55, -1ll, (void*)vr$46, -1ll );
 __builtin_memset( &TMP$4408$1, 0, 24ll );
 FBSTRING* vr$61 = fb_StrConcat( &TMP$4408$1, (void*)vr$58, -1ll, (void*)" X:", 4ll );
 __builtin_memset( &TMP$4409$1, 0, 24ll );
 FBSTRING* vr$64 = fb_StrConcat( &TMP$4409$1, (void*)vr$61, -1ll, (void*)vr$43, -1ll );
 __builtin_memset( &TMP$4410$1, 0, 24ll );
 FBSTRING* vr$67 = fb_StrConcat( &TMP$4410$1, (void*)vr$64, -1ll, (void*)" Y:", 4ll );
 __builtin_memset( &TMP$4411$1, 0, 24ll );
 FBSTRING* vr$70 = fb_StrConcat( &TMP$4411$1, (void*)vr$67, -1ll, (void*)vr$40, -1ll );
 __builtin_memset( &TMP$4412$1, 0, 24ll );
 FBSTRING* vr$73 = fb_StrConcat( &TMP$4412$1, (void*)vr$70, -1ll, (void*)" S:", 4ll );
 __builtin_memset( &TMP$4413$1, 0, 24ll );
 FBSTRING* vr$76 = fb_StrConcat( &TMP$4413$1, (void*)vr$73, -1ll, (void*)vr$37, -1ll );
 __builtin_memset( &TMP$4414$1, 0, 24ll );
 FBSTRING* vr$79 = fb_StrConcat( &TMP$4414$1, (void*)vr$76, -1ll, (void*)" N:", 4ll );
 __builtin_memset( &TMP$4415$1, 0, 24ll );
 FBSTRING* vr$82 = fb_StrConcat( &TMP$4415$1, (void*)vr$79, -1ll, (void*)vr$34, -1ll );
 __builtin_memset( &TMP$4416$1, 0, 24ll );
 FBSTRING* vr$85 = fb_StrConcat( &TMP$4416$1, (void*)vr$82, -1ll, (void*)" V:", 4ll );
 __builtin_memset( &TMP$4417$1, 0, 24ll );
 FBSTRING* vr$88 = fb_StrConcat( &TMP$4417$1, (void*)vr$85, -1ll, (void*)vr$29, -1ll );
 __builtin_memset( &TMP$4418$1, 0, 24ll );
 FBSTRING* vr$91 = fb_StrConcat( &TMP$4418$1, (void*)vr$88, -1ll, (void*)" -", 3ll );
 __builtin_memset( &TMP$4419$1, 0, 24ll );
 FBSTRING* vr$94 = fb_StrConcat( &TMP$4419$1, (void*)vr$91, -1ll, (void*)" B:", 4ll );
 __builtin_memset( &TMP$4420$1, 0, 24ll );
 FBSTRING* vr$97 = fb_StrConcat( &TMP$4420$1, (void*)vr$94, -1ll, (void*)vr$24, -1ll );
 __builtin_memset( &TMP$4421$1, 0, 24ll );
 FBSTRING* vr$100 = fb_StrConcat( &TMP$4421$1, (void*)vr$97, -1ll, (void*)" D:", 4ll );
 __builtin_memset( &TMP$4422$1, 0, 24ll );
 FBSTRING* vr$103 = fb_StrConcat( &TMP$4422$1, (void*)vr$100, -1ll, (void*)vr$19, -1ll );
 __builtin_memset( &TMP$4423$1, 0, 24ll );
 FBSTRING* vr$106 = fb_StrConcat( &TMP$4423$1, (void*)vr$103, -1ll, (void*)" I:", 4ll );
 __builtin_memset( &TMP$4424$1, 0, 24ll );
 FBSTRING* vr$109 = fb_StrConcat( &TMP$4424$1, (void*)vr$106, -1ll, (void*)vr$14, -1ll );
 __builtin_memset( &TMP$4425$1, 0, 24ll );
 FBSTRING* vr$112 = fb_StrConcat( &TMP$4425$1, (void*)vr$109, -1ll, (void*)" Z:", 4ll );
 __builtin_memset( &TMP$4426$1, 0, 24ll );
 FBSTRING* vr$115 = fb_StrConcat( &TMP$4426$1, (void*)vr$112, -1ll, (void*)vr$9, -1ll );
 __builtin_memset( &TMP$4427$1, 0, 24ll );
 FBSTRING* vr$118 = fb_StrConcat( &TMP$4427$1, (void*)vr$115, -1ll, (void*)" C:", 4ll );
 __builtin_memset( &TMP$4428$1, 0, 24ll );
 FBSTRING* vr$121 = fb_StrConcat( &TMP$4428$1, (void*)vr$118, -1ll, (void*)vr$4, -1ll );
 fb_StrAssign( (void*)&fb$result$1, -1ll, (void*)vr$121, -1ll, 0 );
 label$8261:;
 FBSTRING* vr$124 = fb_StrAllocTempResult( (FBSTRING*)&fb$result$1 );
 return vr$124;
}

double _ZN7CPU65104TICKEd( struct $7CPU6510* THIS$1, double FLG$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$8262:;
 uint8 TICKS$1;
 TICKS$1 = *(uint8*)NIBBLES$;
 FBSTRING MSG$1;
 FBSTRING* vr$2 = fb_CHR( 1, (int64)*(uint8*)NIBBLES$ );
 fb_StrInit( (void*)&MSG$1, -1ll, (void*)vr$2, -1ll, 0 );
 struct $5MULTI V$1;
 __builtin_memset( &V$1, 0, 8ll );
 uint8 vr$10 = _ZN8MEMORY_T9READUBYTEEd( *(struct $8MEMORY_T**)((uint8*)THIS$1 + 8ll), (double)*(uint16*)((uint8*)THIS$1 + 4ll) );
 __builtin_memcpy( (struct $6OPCODE*)((uint8*)THIS$1 + 16ll), (struct $6OPCODE*)((uint8*)((uint8*)THIS$1 + ((int64)vr$10 * 56ll)) + 72ll), 56 );
 *(double*)((uint8*)THIS$1 + 56ll) = (double)*(uint8*)NIBBLES$;
 TICKS$1 = (uint8)((int64)TICKS$1 + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 *(uint16*)((uint8*)THIS$1 + 4ll) = (uint16)((int64)*(uint16*)((uint8*)THIS$1 + 4ll) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 {
  uint64 TMP$4429$2;
  TMP$4429$2 = *(uint64*)((uint8*)THIS$1 + 32ll);
  goto label$8265;
  label$8266:;
  {
  }
  goto label$8264;
  label$8267:;
  {
   (*(tmp$1673*)((uint8*)THIS$1 + 64ll))( THIS$1 );
  }
  goto label$8264;
  label$8268:;
  {
   double vr$29 = _ZN7CPU65107ADR_IMMEv( THIS$1 );
   *(uint16*)((uint8*)THIS$1 + 56ll) = (uint16)((int32)__builtin_nearbyint( vr$29 ));
   (*(tmp$1673*)((uint8*)THIS$1 + 64ll))( THIS$1 );
  }
  goto label$8264;
  label$8269:;
  {
   double vr$33 = _ZN7CPU65107ADR_ABSEv( THIS$1 );
   *(uint16*)((uint8*)THIS$1 + 56ll) = (uint16)((int32)__builtin_nearbyint( vr$33 ));
   (*(tmp$1673*)((uint8*)THIS$1 + 64ll))( THIS$1 );
  }
  goto label$8264;
  label$8270:;
  {
   double vr$37 = _ZN7CPU65108ADR_ZEROEv( THIS$1 );
   *(uint16*)((uint8*)THIS$1 + 56ll) = (uint16)((int32)__builtin_nearbyint( vr$37 ));
   (*(tmp$1673*)((uint8*)THIS$1 + 64ll))( THIS$1 );
  }
  goto label$8264;
  label$8271:;
  {
   double vr$41 = _ZN7CPU65109ADR_ZEROXEv( THIS$1 );
   *(uint16*)((uint8*)THIS$1 + 56ll) = (uint16)((int32)__builtin_nearbyint( vr$41 ));
   (*(tmp$1673*)((uint8*)THIS$1 + 64ll))( THIS$1 );
  }
  goto label$8264;
  label$8272:;
  {
   double vr$45 = _ZN7CPU65109ADR_ZEROYEv( THIS$1 );
   *(uint16*)((uint8*)THIS$1 + 56ll) = (uint16)((int32)__builtin_nearbyint( vr$45 ));
   (*(tmp$1673*)((uint8*)THIS$1 + 64ll))( THIS$1 );
  }
  goto label$8264;
  label$8273:;
  {
   double vr$49 = _ZN7CPU65108ADR_ABSXEv( THIS$1 );
   *(uint16*)((uint8*)THIS$1 + 56ll) = (uint16)((int32)__builtin_nearbyint( vr$49 ));
   (*(tmp$1673*)((uint8*)THIS$1 + 64ll))( THIS$1 );
  }
  goto label$8264;
  label$8274:;
  {
   double vr$53 = _ZN7CPU65108ADR_ABSYEv( THIS$1 );
   *(uint16*)((uint8*)THIS$1 + 56ll) = (uint16)((int32)__builtin_nearbyint( vr$53 ));
   (*(tmp$1673*)((uint8*)THIS$1 + 64ll))( THIS$1 );
  }
  goto label$8264;
  label$8275:;
  {
   double vr$57 = _ZN7CPU65107ADR_RELEv( THIS$1 );
   *(uint16*)((uint8*)THIS$1 + 56ll) = (uint16)((int32)__builtin_nearbyint( vr$57 ));
   (*(tmp$1673*)((uint8*)THIS$1 + 64ll))( THIS$1 );
  }
  goto label$8264;
  label$8276:;
  {
   double vr$61 = _ZN7CPU65108ADR_INDXEv( THIS$1 );
   *(uint16*)((uint8*)THIS$1 + 56ll) = (uint16)((int32)__builtin_nearbyint( vr$61 ));
   (*(tmp$1673*)((uint8*)THIS$1 + 64ll))( THIS$1 );
  }
  goto label$8264;
  label$8277:;
  {
   double vr$65 = _ZN7CPU65108ADR_INDYEv( THIS$1 );
   *(uint16*)((uint8*)THIS$1 + 56ll) = (uint16)((int32)__builtin_nearbyint( vr$65 ));
   (*(tmp$1673*)((uint8*)THIS$1 + 64ll))( THIS$1 );
  }
  goto label$8264;
  label$8278:;
  {
   double vr$69 = _ZN7CPU65107ADR_INDEv( THIS$1 );
   *(uint16*)((uint8*)THIS$1 + 56ll) = (uint16)((int32)__builtin_nearbyint( vr$69 ));
   (*(tmp$1673*)((uint8*)THIS$1 + 64ll))( THIS$1 );
  }
  goto label$8264;
  label$8265:;
  static const void* tmp$4430[13ll] = {
   &&label$8266,
   &&label$8267,
   &&label$8268,
   &&label$8269,
   &&label$8270,
   &&label$8271,
   &&label$8272,
   &&label$8273,
   &&label$8274,
   &&label$8275,
   &&label$8276,
   &&label$8277,
   &&label$8278,
  };
  if( TMP$4429$2 > 12ull ) goto label$8264;
  goto *tmp$4430[TMP$4429$2 - 0ull];
  label$8264:;
 }
 fb$result$1 = (double)*(uint8*)NIBBLES$;
 fb_StrDelete( (FBSTRING*)&MSG$1 );
 label$8263:;
 return fb$result$1;
}

double _ZN7CPU65107ADR_UNKEv( struct $7CPU6510* THIS$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$8279:;
 fb_Sleep( -1 );
 fb$result$1 = (double)*(uint8*)NIBBLES$;
 goto label$8280;
 label$8280:;
 return fb$result$1;
}

double _ZN7CPU65107ADR_IMMEv( struct $7CPU6510* THIS$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$8281:;
 fb$result$1 = (double)*(uint16*)((uint8*)THIS$1 + 4ll);
 *(uint16*)((uint8*)THIS$1 + 4ll) = (uint16)((int64)*(uint16*)((uint8*)THIS$1 + 4ll) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 label$8282:;
 return fb$result$1;
}

double _ZN7CPU65107ADR_RELEv( struct $7CPU6510* THIS$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$8283:;
 fb$result$1 = (double)*(uint16*)((uint8*)THIS$1 + 4ll);
 *(uint16*)((uint8*)THIS$1 + 4ll) = (uint16)((int64)*(uint16*)((uint8*)THIS$1 + 4ll) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 label$8284:;
 return fb$result$1;
}

double _ZN7CPU65107ADR_ABSEv( struct $7CPU6510* THIS$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$8285:;
 uint16 vr$4 = _ZN8MEMORY_T10READUSHORTEd( *(struct $8MEMORY_T**)((uint8*)THIS$1 + 8ll), (double)*(uint16*)((uint8*)THIS$1 + 4ll) );
 fb$result$1 = (double)vr$4;
 *(uint16*)((uint8*)THIS$1 + 4ll) = (uint16)((int64)*(uint16*)((uint8*)THIS$1 + 4ll) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll));
 label$8286:;
 return fb$result$1;
}

double _ZN7CPU65108ADR_ZEROEv( struct $7CPU6510* THIS$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$8287:;
 uint8 vr$4 = _ZN8MEMORY_T9READUBYTEEd( *(struct $8MEMORY_T**)((uint8*)THIS$1 + 8ll), (double)*(uint16*)((uint8*)THIS$1 + 4ll) );
 fb$result$1 = (double)((int64)vr$4 & (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)));
 *(uint16*)((uint8*)THIS$1 + 4ll) = (uint16)((int64)*(uint16*)((uint8*)THIS$1 + 4ll) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 label$8288:;
 return fb$result$1;
}

double _ZN7CPU65109ADR_ZEROXEv( struct $7CPU6510* THIS$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$8289:;
 uint8 vr$4 = _ZN8MEMORY_T9READUBYTEEd( *(struct $8MEMORY_T**)((uint8*)THIS$1 + 8ll), (double)*(uint16*)((uint8*)THIS$1 + 4ll) );
 fb$result$1 = (double)(((int64)vr$4 + (int64)*(uint8*)((uint8*)THIS$1 + 2ll)) & (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)));
 *(uint16*)((uint8*)THIS$1 + 4ll) = (uint16)((int64)*(uint16*)((uint8*)THIS$1 + 4ll) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 label$8290:;
 return fb$result$1;
}

double _ZN7CPU65109ADR_ZEROYEv( struct $7CPU6510* THIS$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$8291:;
 uint8 vr$4 = _ZN8MEMORY_T9READUBYTEEd( *(struct $8MEMORY_T**)((uint8*)THIS$1 + 8ll), (double)*(uint16*)((uint8*)THIS$1 + 4ll) );
 fb$result$1 = (double)(((int64)vr$4 + (int64)*(uint8*)((uint8*)THIS$1 + 3ll)) & (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)));
 *(uint16*)((uint8*)THIS$1 + 4ll) = (uint16)((int64)*(uint16*)((uint8*)THIS$1 + 4ll) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 label$8292:;
 return fb$result$1;
}

double _ZN7CPU65108ADR_ABSXEv( struct $7CPU6510* THIS$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$8293:;
 uint16 vr$4 = _ZN8MEMORY_T10READUSHORTEd( *(struct $8MEMORY_T**)((uint8*)THIS$1 + 8ll), (double)*(uint16*)((uint8*)THIS$1 + 4ll) );
 fb$result$1 = (double)((int64)vr$4 + (int64)*(uint8*)((uint8*)THIS$1 + 2ll));
 *(uint16*)((uint8*)THIS$1 + 4ll) = (uint16)((int64)*(uint16*)((uint8*)THIS$1 + 4ll) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll));
 label$8294:;
 return fb$result$1;
}

double _ZN7CPU65108ADR_ABSYEv( struct $7CPU6510* THIS$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$8295:;
 uint16 vr$4 = _ZN8MEMORY_T10READUSHORTEd( *(struct $8MEMORY_T**)((uint8*)THIS$1 + 8ll), (double)*(uint16*)((uint8*)THIS$1 + 4ll) );
 fb$result$1 = (double)((int64)vr$4 + (int64)*(uint8*)((uint8*)THIS$1 + 3ll));
 *(uint16*)((uint8*)THIS$1 + 4ll) = (uint16)((int64)*(uint16*)((uint8*)THIS$1 + 4ll) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll));
 label$8296:;
 return fb$result$1;
}

double _ZN7CPU65108ADR_INDXEv( struct $7CPU6510* THIS$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$8297:;
 struct $5MULTI V$1;
 __builtin_memset( &V$1, 0, 8ll );
 uint8 vr$5 = _ZN8MEMORY_T9READUBYTEEd( *(struct $8MEMORY_T**)((uint8*)THIS$1 + 8ll), (double)*(uint16*)((uint8*)THIS$1 + 4ll) );
 *(uint16*)&V$1 = (uint16)(((int64)vr$5 + (int64)*(uint8*)((uint8*)THIS$1 + 2ll)) & (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)));
 uint16 vr$19 = _ZN8MEMORY_T10READUSHORTEd( *(struct $8MEMORY_T**)((uint8*)THIS$1 + 8ll), (double)*(uint16*)&V$1 );
 *(uint16*)&V$1 = vr$19;
 *(uint16*)((uint8*)THIS$1 + 4ll) = (uint16)((int64)*(uint16*)((uint8*)THIS$1 + 4ll) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 fb$result$1 = (double)*(uint16*)&V$1;
 label$8298:;
 return fb$result$1;
}

double _ZN7CPU65108ADR_INDYEv( struct $7CPU6510* THIS$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$8299:;
 uint8 vr$4 = _ZN8MEMORY_T9READUBYTEEd( *(struct $8MEMORY_T**)((uint8*)THIS$1 + 8ll), (double)*(uint16*)((uint8*)THIS$1 + 4ll) );
 uint16 vr$7 = _ZN8MEMORY_T10READUSHORTEd( *(struct $8MEMORY_T**)((uint8*)THIS$1 + 8ll), (double)vr$4 );
 *(uint16*)&V$ = vr$7;
 *(uint16*)&V$ = (uint16)((int64)*(uint16*)&V$ + (int64)*(uint8*)((uint8*)THIS$1 + 3ll));
 fb$result$1 = (double)*(uint16*)&V$;
 *(uint16*)((uint8*)THIS$1 + 4ll) = (uint16)((int64)*(uint16*)((uint8*)THIS$1 + 4ll) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 label$8300:;
 return fb$result$1;
}

double _ZN7CPU65107ADR_INDEv( struct $7CPU6510* THIS$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$8301:;
 uint16 vr$4 = _ZN8MEMORY_T10READUSHORTEd( *(struct $8MEMORY_T**)((uint8*)THIS$1 + 8ll), (double)*(uint16*)((uint8*)THIS$1 + 4ll) );
 *(uint16*)&V$ = vr$4;
 uint16 vr$7 = _ZN8MEMORY_T10READUSHORTEd( *(struct $8MEMORY_T**)((uint8*)THIS$1 + 8ll), (double)*(uint16*)&V$ );
 *(uint16*)&V$ = vr$7;
 *(uint16*)((uint8*)THIS$1 + 4ll) = (uint16)((int64)*(uint16*)((uint8*)THIS$1 + 4ll) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll));
 fb$result$1 = (double)*(uint16*)&V$;
 label$8302:;
 return fb$result$1;
}

void _ZN7CPU65104PUSHEd( struct $7CPU6510* THIS$1, double B$1 )
{
 label$8303:;
 _ZN8MEMORY_T10WRITEUBYTEEdd( *(struct $8MEMORY_T**)((uint8*)THIS$1 + 8ll), (double)*(uint16*)((uint8*)THIS$1 + 6ll), B$1 );
 *(uint8*)((uint8*)THIS$1 + 6ll) = (uint8)((int64)*(uint8*)((uint8*)THIS$1 + 6ll) - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 label$8304:;
}

double _ZN7CPU65104PULLEv( struct $7CPU6510* THIS$1 )
{
 double fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$8305:;
 *(uint8*)((uint8*)THIS$1 + 6ll) = (uint8)((int64)*(uint8*)((uint8*)THIS$1 + 6ll) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 uint8 vr$10 = _ZN8MEMORY_T9READUBYTEEd( *(struct $8MEMORY_T**)((uint8*)THIS$1 + 8ll), (double)*(uint16*)((uint8*)THIS$1 + 6ll) );
 fb$result$1 = (double)vr$10;
 label$8306:;
 return fb$result$1;
}

void INS_UNK( struct $7CPU6510* CPU$1 )
{
 label$8307:;
 label$8308:;
}

void INS_ADC( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$4431$1;
 uint8 TMP$4432$1;
 uint8 TMP$4433$1;
 uint8 TMP$4434$1;
 label$8309:;
 uint8 UB$1;
 UB$1 = *(uint8*)NIBBLES$;
 uint8 vr$3 = _ZN8MEMORY_T9READUBYTEEd( *(struct $8MEMORY_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll) );
 UB$1 = vr$3;
 *(uint16*)&V$ = (uint16)((int64)*(uint8*)((uint8*)CPU$1 + 1ll) + (int64)UB$1);
 if( ((uint64)(int64)*(uint8*)CPU$1 & 1ull) != (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$8312;
 {
  *(uint16*)&V$ = (uint16)((int64)*(uint16*)&V$ + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
  label$8312:;
 }
 if( ((~((int64)*(uint8*)((uint8*)CPU$1 + 1ll) ^ (int64)UB$1) & ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) & (((int64)*(uint8*)((uint8*)CPU$1 + 1ll) ^ (int64)*(uint8*)&V$) & ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)))) == 0ll ) goto label$8313;
 TMP$4431$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8317;
 label$8313:;
 TMP$4431$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 label$8317:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551551ull) | (((uint64)TMP$4431$1 & 1ull) << (6ll & 63ll)));
 *(uint8*)((uint8*)CPU$1 + 1ll) = *(uint8*)&V$;
 if( (int64)*(uint16*)&V$ <= (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$8314;
 TMP$4432$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8318;
 label$8314:;
 TMP$4432$1 = *(uint8*)NIBBLES$;
 label$8318:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551614ull) | ((uint64)TMP$4432$1 & 1ull));
 if( (int64)*(uint8*)&V$ != (int64)*(uint8*)NIBBLES$ ) goto label$8315;
 TMP$4433$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8319;
 label$8315:;
 TMP$4433$1 = *(uint8*)NIBBLES$;
 label$8319:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$4433$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)&V$ >= (int64)*(uint8*)NIBBLES$ ) goto label$8316;
 TMP$4434$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8320;
 label$8316:;
 TMP$4434$1 = *(uint8*)NIBBLES$;
 label$8320:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$4434$1 & 1ull) << (7ll & 63ll)));
 label$8310:;
}

void INS_AND( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$4435$1;
 uint8 TMP$4436$1;
 label$8321:;
 uint8 vr$5 = _ZN8MEMORY_T9READUBYTEEd( *(struct $8MEMORY_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll) );
 *(uint8*)((uint8*)CPU$1 + 1ll) = (uint8)((int64)*(uint8*)((uint8*)CPU$1 + 1ll) & (int64)vr$5);
 if( (int64)*(uint8*)((uint8*)CPU$1 + 1ll) != (int64)*(uint8*)NIBBLES$ ) goto label$8323;
 TMP$4435$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8325;
 label$8323:;
 TMP$4435$1 = *(uint8*)NIBBLES$;
 label$8325:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$4435$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)((uint8*)CPU$1 + 1ll) >= (int64)*(uint8*)NIBBLES$ ) goto label$8324;
 TMP$4436$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8326;
 label$8324:;
 TMP$4436$1 = *(uint8*)NIBBLES$;
 label$8326:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$4436$1 & 1ull) << (7ll & 63ll)));
 label$8322:;
}

void INS_ASL( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$4437$1;
 uint8 TMP$4438$1;
 uint8 TMP$4439$1;
 label$8327:;
 uint8 vr$3 = _ZN8MEMORY_T9READUBYTEEd( *(struct $8MEMORY_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll) );
 *(uint8*)&V$ = vr$3;
 if( ((int64)*(uint8*)&V$ & ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) == 0ll ) goto label$8329;
 TMP$4437$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8332;
 label$8329:;
 TMP$4437$1 = *(uint8*)NIBBLES$;
 label$8332:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551614ull) | ((uint64)TMP$4437$1 & 1ull));
 *(uint8*)&V$ = (uint8)((int64)*(uint8*)&V$ << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) & 63ll));
 _ZN8MEMORY_T10WRITEUBYTEEdd( *(struct $8MEMORY_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll), (double)*(uint8*)&V$ );
 if( (int64)*(uint8*)&V$ != (int64)*(uint8*)NIBBLES$ ) goto label$8330;
 TMP$4438$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8333;
 label$8330:;
 TMP$4438$1 = *(uint8*)NIBBLES$;
 label$8333:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$4438$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)&V$ >= (int64)*(uint8*)NIBBLES$ ) goto label$8331;
 TMP$4439$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8334;
 label$8331:;
 TMP$4439$1 = *(uint8*)NIBBLES$;
 label$8334:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$4439$1 & 1ull) << (7ll & 63ll)));
 label$8328:;
}

void INS_ASLA( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$4440$1;
 uint8 TMP$4441$1;
 uint8 TMP$4442$1;
 label$8335:;
 if( ((int64)*(uint8*)((uint8*)CPU$1 + 1ll) & ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) == 0ll ) goto label$8337;
 TMP$4440$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8340;
 label$8337:;
 TMP$4440$1 = *(uint8*)NIBBLES$;
 label$8340:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551614ull) | ((uint64)TMP$4440$1 & 1ull));
 *(uint8*)((uint8*)CPU$1 + 1ll) = (uint8)((int64)*(uint8*)((uint8*)CPU$1 + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) & 63ll));
 if( (int64)*(uint8*)((uint8*)CPU$1 + 1ll) != (int64)*(uint8*)NIBBLES$ ) goto label$8338;
 TMP$4441$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8341;
 label$8338:;
 TMP$4441$1 = *(uint8*)NIBBLES$;
 label$8341:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$4441$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)((uint8*)CPU$1 + 1ll) >= (int64)*(uint8*)NIBBLES$ ) goto label$8339;
 TMP$4442$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8342;
 label$8339:;
 TMP$4442$1 = *(uint8*)NIBBLES$;
 label$8342:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$4442$1 & 1ull) << (7ll & 63ll)));
 label$8336:;
}

void INS_BCC( struct $7CPU6510* CPU$1 )
{
 label$8343:;
 if( ((uint64)(int64)*(uint8*)CPU$1 & 1ull) != (uint64)(int64)*(uint8*)NIBBLES$ ) goto label$8346;
 {
  *(uint16*)&V$ = *(uint16*)((uint8*)CPU$1 + 4ll);
  *(int16*)&V$ = (int16)((int64)*(int16*)&V$ - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
  int8 vr$13 = _ZN8MEMORY_T8READBYTEEd( *(struct $8MEMORY_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll) );
  *(int16*)&V$ = (int16)(((int64)*(int16*)&V$ + (int64)vr$13) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
  *(uint16*)((uint8*)CPU$1 + 4ll) = *(uint16*)&V$;
 }
 label$8346:;
 label$8345:;
 label$8344:;
}

void INS_BCS( struct $7CPU6510* CPU$1 )
{
 label$8347:;
 if( ((uint64)(int64)*(uint8*)CPU$1 & 1ull) == 0ull ) goto label$8350;
 {
  *(uint16*)&V$ = *(uint16*)((uint8*)CPU$1 + 4ll);
  *(int16*)&V$ = (int16)((int64)*(int16*)&V$ - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
  int8 vr$12 = _ZN8MEMORY_T8READBYTEEd( *(struct $8MEMORY_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll) );
  *(int16*)&V$ = (int16)(((int64)*(int16*)&V$ + (int64)vr$12) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
  *(uint16*)((uint8*)CPU$1 + 4ll) = *(uint16*)&V$;
 }
 label$8350:;
 label$8349:;
 label$8348:;
}

void INS_BEQ( struct $7CPU6510* CPU$1 )
{
 label$8351:;
 if( ((uint64)((int64)*(uint8*)CPU$1 >> (1ll & 63ll)) & 1ull) != (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$8354;
 {
  *(uint16*)&V$ = *(uint16*)((uint8*)CPU$1 + 4ll);
  *(int16*)&V$ = (int16)((int64)*(int16*)&V$ - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
  int8 vr$14 = _ZN8MEMORY_T8READBYTEEd( *(struct $8MEMORY_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll) );
  *(int16*)&V$ = (int16)(((int64)*(int16*)&V$ + (int64)vr$14) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
  *(uint16*)((uint8*)CPU$1 + 4ll) = *(uint16*)&V$;
 }
 label$8354:;
 label$8353:;
 label$8352:;
}

void INS_BIT( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$4443$1;
 uint8 TMP$4444$1;
 uint8 TMP$4445$1;
 label$8355:;
 int8 B$1;
 __builtin_memset( &B$1, 0, 1ll );
 int8 vr$4 = _ZN8MEMORY_T8READBYTEEd( *(struct $8MEMORY_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll) );
 B$1 = vr$4;
 if( ((int64)B$1 & ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) == 0ll ) goto label$8357;
 TMP$4443$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8360;
 label$8357:;
 TMP$4443$1 = *(uint8*)NIBBLES$;
 label$8360:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$4443$1 & 1ull) << (7ll & 63ll)));
 if( ((int64)B$1 & ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) == 0ll ) goto label$8358;
 TMP$4444$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8361;
 label$8358:;
 TMP$4444$1 = *(uint8*)NIBBLES$;
 label$8361:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551551ull) | (((uint64)TMP$4444$1 & 1ull) << (6ll & 63ll)));
 if( (int64)*(uint8*)NIBBLES$ != ((int64)B$1 & (int64)*(int8*)((uint8*)CPU$1 + 2ll)) ) goto label$8359;
 TMP$4445$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8362;
 label$8359:;
 TMP$4445$1 = *(uint8*)NIBBLES$;
 label$8362:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$4445$1 & 1ull) << (1ll & 63ll)));
 label$8356:;
}

void INS_BMI( struct $7CPU6510* CPU$1 )
{
 label$8363:;
 if( ((uint64)((int64)*(uint8*)CPU$1 >> (7ll & 63ll)) & 1ull) == 0ull ) goto label$8366;
 {
  *(uint16*)&V$ = *(uint16*)((uint8*)CPU$1 + 4ll);
  *(int16*)&V$ = (int16)((int64)*(int16*)&V$ - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
  int8 vr$13 = _ZN8MEMORY_T8READBYTEEd( *(struct $8MEMORY_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll) );
  *(int16*)&V$ = (int16)(((int64)*(int16*)&V$ + (int64)vr$13) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
  *(uint16*)((uint8*)CPU$1 + 4ll) = *(uint16*)&V$;
 }
 label$8366:;
 label$8365:;
 label$8364:;
}

void INS_BNE( struct $7CPU6510* CPU$1 )
{
 label$8367:;
 if( ((uint64)((int64)*(uint8*)CPU$1 >> (1ll & 63ll)) & 1ull) != (uint64)(int64)*(uint8*)NIBBLES$ ) goto label$8370;
 {
  *(uint16*)&V$ = *(uint16*)((uint8*)CPU$1 + 4ll);
  *(int16*)&V$ = (int16)((int64)*(int16*)&V$ - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
  int8 vr$14 = _ZN8MEMORY_T8READBYTEEd( *(struct $8MEMORY_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll) );
  *(int16*)&V$ = (int16)(((int64)*(int16*)&V$ + (int64)vr$14) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
  *(uint16*)((uint8*)CPU$1 + 4ll) = *(uint16*)&V$;
 }
 label$8370:;
 label$8369:;
 label$8368:;
}

void INS_BPL( struct $7CPU6510* CPU$1 )
{
 label$8371:;
 if( ((uint64)((int64)*(uint8*)CPU$1 >> (7ll & 63ll)) & 1ull) != 0ull ) goto label$8374;
 {
  *(uint16*)&V$ = *(uint16*)((uint8*)CPU$1 + 4ll);
  *(int16*)&V$ = (int16)((int64)*(int16*)&V$ - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
  int8 vr$13 = _ZN8MEMORY_T8READBYTEEd( *(struct $8MEMORY_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll) );
  *(int16*)&V$ = (int16)(((int64)*(int16*)&V$ + (int64)vr$13) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
  *(uint16*)((uint8*)CPU$1 + 4ll) = *(uint16*)&V$;
 }
 label$8374:;
 label$8373:;
 label$8372:;
}

void INS_BRK( struct $7CPU6510* CPU$1 )
{
 label$8375:;
 *(uint16*)((uint8*)CPU$1 + 4ll) = (uint16)((int64)*(uint16*)((uint8*)CPU$1 + 4ll) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 _ZN7CPU65104PUSHEd( CPU$1, (double)*(uint8*)((uint8*)CPU$1 + 5ll) );
 _ZN7CPU65104PUSHEd( CPU$1, (double)*(uint8*)((uint8*)CPU$1 + 4ll) );
 _ZN7CPU65104PUSHEd( CPU$1, (double)*(uint8*)CPU$1 );
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551599ull) | (((uint64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) & 1ull) << (4ll & 63ll)));
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551611ull) | (((uint64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) & 1ull) << (2ll & 63ll)));
 uint16 vr$29 = _ZN8MEMORY_T10READUSHORTEd( *(struct $8MEMORY_T**)((uint8*)CPU$1 + 8ll), 0x1.FFFCp+15 );
 *(uint16*)((uint8*)CPU$1 + 4ll) = vr$29;
 label$8376:;
}

void INS_BVC( struct $7CPU6510* CPU$1 )
{
 label$8377:;
 if( ((uint64)((int64)*(uint8*)CPU$1 >> (6ll & 63ll)) & 1ull) != (uint64)(int64)*(uint8*)NIBBLES$ ) goto label$8380;
 {
  *(uint16*)&V$ = *(uint16*)((uint8*)CPU$1 + 4ll);
  *(int16*)&V$ = (int16)((int64)*(int16*)&V$ - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
  int8 vr$14 = _ZN8MEMORY_T8READBYTEEd( *(struct $8MEMORY_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll) );
  *(int16*)&V$ = (int16)(((int64)*(int16*)&V$ + (int64)vr$14) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
  *(uint16*)((uint8*)CPU$1 + 4ll) = *(uint16*)&V$;
 }
 label$8380:;
 label$8379:;
 label$8378:;
}

void INS_BVS( struct $7CPU6510* CPU$1 )
{
 label$8381:;
 if( ((uint64)((int64)*(uint8*)CPU$1 >> (6ll & 63ll)) & 1ull) == 0ull ) goto label$8384;
 {
  *(uint16*)&V$ = *(uint16*)((uint8*)CPU$1 + 4ll);
  *(int16*)&V$ = (int16)((int64)*(int16*)&V$ - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
  int8 vr$13 = _ZN8MEMORY_T8READBYTEEd( *(struct $8MEMORY_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll) );
  *(int16*)&V$ = (int16)(((int64)*(int16*)&V$ + (int64)vr$13) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
  *(uint16*)((uint8*)CPU$1 + 4ll) = *(uint16*)&V$;
 }
 label$8384:;
 label$8383:;
 label$8382:;
}

void INS_CLC( struct $7CPU6510* CPU$1 )
{
 label$8385:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551614ull) | ((uint64)*(uint8*)NIBBLES$ & 1ull));
 label$8386:;
}

void INS_CLD( struct $7CPU6510* CPU$1 )
{
 label$8387:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551607ull) | (((uint64)*(uint8*)NIBBLES$ & 1ull) << (3ll & 63ll)));
 label$8388:;
}

void INS_CLI( struct $7CPU6510* CPU$1 )
{
 label$8389:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551611ull) | (((uint64)*(uint8*)NIBBLES$ & 1ull) << (2ll & 63ll)));
 label$8390:;
}

void INS_CLV( struct $7CPU6510* CPU$1 )
{
 label$8391:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551551ull) | (((uint64)*(uint8*)NIBBLES$ & 1ull) << (6ll & 63ll)));
 label$8392:;
}

void INS_CMP( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$4446$1;
 uint8 TMP$4447$1;
 uint8 TMP$4448$1;
 label$8393:;
 uint8 vr$5 = _ZN8MEMORY_T9READUBYTEEd( *(struct $8MEMORY_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll) );
 *(uint16*)&V$ = (uint16)((int64)*(uint8*)((uint8*)CPU$1 + 1ll) - (int64)vr$5);
 if( (int64)*(uint16*)&V$ > (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$8395;
 TMP$4446$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8398;
 label$8395:;
 TMP$4446$1 = *(uint8*)NIBBLES$;
 label$8398:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551614ull) | ((uint64)TMP$4446$1 & 1ull));
 if( (int64)*(uint8*)&V$ != (int64)*(uint8*)NIBBLES$ ) goto label$8396;
 TMP$4447$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8399;
 label$8396:;
 TMP$4447$1 = *(uint8*)NIBBLES$;
 label$8399:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$4447$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)&V$ >= (int64)*(uint8*)NIBBLES$ ) goto label$8397;
 TMP$4448$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8400;
 label$8397:;
 TMP$4448$1 = *(uint8*)NIBBLES$;
 label$8400:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$4448$1 & 1ull) << (7ll & 63ll)));
 label$8394:;
}

void INS_CPX( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$4449$1;
 uint8 TMP$4450$1;
 uint8 TMP$4451$1;
 label$8401:;
 uint8 vr$5 = _ZN8MEMORY_T9READUBYTEEd( *(struct $8MEMORY_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll) );
 *(uint16*)&V$ = (uint16)((int64)*(uint8*)((uint8*)CPU$1 + 2ll) - (int64)vr$5);
 if( (int64)*(uint16*)&V$ > (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$8403;
 TMP$4449$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8406;
 label$8403:;
 TMP$4449$1 = *(uint8*)NIBBLES$;
 label$8406:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551614ull) | ((uint64)TMP$4449$1 & 1ull));
 if( (int64)*(uint8*)&V$ != (int64)*(uint8*)NIBBLES$ ) goto label$8404;
 TMP$4450$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8407;
 label$8404:;
 TMP$4450$1 = *(uint8*)NIBBLES$;
 label$8407:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$4450$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)&V$ >= (int64)*(uint8*)NIBBLES$ ) goto label$8405;
 TMP$4451$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8408;
 label$8405:;
 TMP$4451$1 = *(uint8*)NIBBLES$;
 label$8408:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$4451$1 & 1ull) << (7ll & 63ll)));
 label$8402:;
}

void INS_CPY( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$4452$1;
 uint8 TMP$4453$1;
 uint8 TMP$4454$1;
 label$8409:;
 uint8 vr$5 = _ZN8MEMORY_T9READUBYTEEd( *(struct $8MEMORY_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll) );
 *(uint16*)&V$ = (uint16)((int64)*(uint8*)((uint8*)CPU$1 + 3ll) - (int64)vr$5);
 if( (int64)*(uint16*)&V$ > (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$8411;
 TMP$4452$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8414;
 label$8411:;
 TMP$4452$1 = *(uint8*)NIBBLES$;
 label$8414:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551614ull) | ((uint64)TMP$4452$1 & 1ull));
 if( (int64)*(uint8*)&V$ != (int64)*(uint8*)NIBBLES$ ) goto label$8412;
 TMP$4453$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8415;
 label$8412:;
 TMP$4453$1 = *(uint8*)NIBBLES$;
 label$8415:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$4453$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)&V$ >= (int64)*(uint8*)NIBBLES$ ) goto label$8413;
 TMP$4454$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8416;
 label$8413:;
 TMP$4454$1 = *(uint8*)NIBBLES$;
 label$8416:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$4454$1 & 1ull) << (7ll & 63ll)));
 label$8410:;
}

void INS_DEC( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$4455$1;
 uint8 TMP$4456$1;
 label$8417:;
 uint8 vr$3 = _ZN8MEMORY_T9READUBYTEEd( *(struct $8MEMORY_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll) );
 *(uint8*)&V$ = vr$3;
 *(int8*)&V$ = (int8)((int64)*(int8*)&V$ - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 if( (int64)*(int8*)&V$ != (int64)*(uint8*)NIBBLES$ ) goto label$8419;
 TMP$4455$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8421;
 label$8419:;
 TMP$4455$1 = *(uint8*)NIBBLES$;
 label$8421:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$4455$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)&V$ >= (int64)*(uint8*)NIBBLES$ ) goto label$8420;
 TMP$4456$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8422;
 label$8420:;
 TMP$4456$1 = *(uint8*)NIBBLES$;
 label$8422:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$4456$1 & 1ull) << (7ll & 63ll)));
 _ZN8MEMORY_T10WRITEUBYTEEdd( *(struct $8MEMORY_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll), (double)*(uint8*)&V$ );
 label$8418:;
}

void INS_DEX( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$4457$1;
 uint8 TMP$4458$1;
 label$8423:;
 *(int8*)((uint8*)CPU$1 + 2ll) = (int8)((int32)__builtin_nearbyint( (double)(int64)*(int8*)((uint8*)CPU$1 + 2ll) + -0x1.p+0 ));
 if( (int64)*(uint8*)((uint8*)CPU$1 + 2ll) != (int64)*(uint8*)NIBBLES$ ) goto label$8425;
 TMP$4457$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8427;
 label$8425:;
 TMP$4457$1 = *(uint8*)NIBBLES$;
 label$8427:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$4457$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)((uint8*)CPU$1 + 2ll) >= (int64)*(uint8*)NIBBLES$ ) goto label$8426;
 TMP$4458$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8428;
 label$8426:;
 TMP$4458$1 = *(uint8*)NIBBLES$;
 label$8428:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$4458$1 & 1ull) << (7ll & 63ll)));
 label$8424:;
}

void INS_DEY( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$4459$1;
 uint8 TMP$4460$1;
 label$8429:;
 *(int8*)((uint8*)CPU$1 + 3ll) = (int8)((int64)*(int8*)((uint8*)CPU$1 + 3ll) - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 if( (int64)*(uint8*)((uint8*)CPU$1 + 3ll) != (int64)*(uint8*)NIBBLES$ ) goto label$8431;
 TMP$4459$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8433;
 label$8431:;
 TMP$4459$1 = *(uint8*)NIBBLES$;
 label$8433:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$4459$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)((uint8*)CPU$1 + 3ll) >= (int64)*(uint8*)NIBBLES$ ) goto label$8432;
 TMP$4460$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8434;
 label$8432:;
 TMP$4460$1 = *(uint8*)NIBBLES$;
 label$8434:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$4460$1 & 1ull) << (7ll & 63ll)));
 label$8430:;
}

void INS_EOR( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$4461$1;
 uint8 TMP$4462$1;
 label$8435:;
 uint8 vr$5 = _ZN8MEMORY_T9READUBYTEEd( *(struct $8MEMORY_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll) );
 *(uint8*)((uint8*)CPU$1 + 1ll) = (uint8)((int64)*(uint8*)((uint8*)CPU$1 + 1ll) ^ (int64)vr$5);
 if( (int64)*(uint8*)((uint8*)CPU$1 + 1ll) != (int64)*(uint8*)NIBBLES$ ) goto label$8437;
 TMP$4461$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8439;
 label$8437:;
 TMP$4461$1 = *(uint8*)NIBBLES$;
 label$8439:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$4461$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)((uint8*)CPU$1 + 1ll) >= (int64)*(uint8*)NIBBLES$ ) goto label$8438;
 TMP$4462$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8440;
 label$8438:;
 TMP$4462$1 = *(uint8*)NIBBLES$;
 label$8440:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$4462$1 & 1ull) << (7ll & 63ll)));
 label$8436:;
}

void INS_INC( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$4463$1;
 uint8 TMP$4464$1;
 label$8441:;
 uint8 vr$3 = _ZN8MEMORY_T9READUBYTEEd( *(struct $8MEMORY_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll) );
 *(uint8*)&V$ = vr$3;
 *(int16*)&V$ = (int16)((int64)*(int16*)&V$ + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 _ZN8MEMORY_T9WRITEBYTEEdd( *(struct $8MEMORY_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll), (double)*(uint8*)&V$ );
 if( (int64)*(uint8*)&V$ != (int64)*(uint8*)NIBBLES$ ) goto label$8443;
 TMP$4463$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8445;
 label$8443:;
 TMP$4463$1 = *(uint8*)NIBBLES$;
 label$8445:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$4463$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)&V$ >= (int64)*(uint8*)NIBBLES$ ) goto label$8444;
 TMP$4464$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8446;
 label$8444:;
 TMP$4464$1 = *(uint8*)NIBBLES$;
 label$8446:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$4464$1 & 1ull) << (7ll & 63ll)));
 label$8442:;
}

void INS_INX( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$4465$1;
 uint8 TMP$4466$1;
 label$8447:;
 *(uint8*)&V$ = *(uint8*)((uint8*)CPU$1 + 2ll);
 *(int16*)&V$ = (int16)((int64)*(int16*)&V$ + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 *(uint8*)((uint8*)CPU$1 + 2ll) = *(uint8*)&V$;
 if( (int64)*(uint8*)&V$ != (int64)*(uint8*)NIBBLES$ ) goto label$8449;
 TMP$4465$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8451;
 label$8449:;
 TMP$4465$1 = *(uint8*)NIBBLES$;
 label$8451:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$4465$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)&V$ >= (int64)*(uint8*)NIBBLES$ ) goto label$8450;
 TMP$4466$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8452;
 label$8450:;
 TMP$4466$1 = *(uint8*)NIBBLES$;
 label$8452:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$4466$1 & 1ull) << (7ll & 63ll)));
 label$8448:;
}

void INS_INY( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$4467$1;
 uint8 TMP$4468$1;
 label$8453:;
 *(uint8*)&V$ = *(uint8*)((uint8*)CPU$1 + 3ll);
 *(int16*)&V$ = (int16)((int64)*(int16*)&V$ + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 *(uint8*)((uint8*)CPU$1 + 3ll) = *(uint8*)&V$;
 if( (int64)*(uint8*)&V$ != (int64)*(uint8*)NIBBLES$ ) goto label$8455;
 TMP$4467$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8457;
 label$8455:;
 TMP$4467$1 = *(uint8*)NIBBLES$;
 label$8457:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$4467$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)&V$ >= (int64)*(uint8*)NIBBLES$ ) goto label$8456;
 TMP$4468$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8458;
 label$8456:;
 TMP$4468$1 = *(uint8*)NIBBLES$;
 label$8458:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$4468$1 & 1ull) << (7ll & 63ll)));
 label$8454:;
}

void INS_JMP( struct $7CPU6510* CPU$1 )
{
 label$8459:;
 *(uint16*)((uint8*)CPU$1 + 4ll) = *(uint16*)((uint8*)CPU$1 + 56ll);
 label$8460:;
}

void INS_JSR( struct $7CPU6510* CPU$1 )
{
 label$8461:;
 *(uint16*)((uint8*)CPU$1 + 4ll) = (uint16)((int64)*(uint16*)((uint8*)CPU$1 + 4ll) - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
 _ZN7CPU65104PUSHEd( CPU$1, (double)*(uint8*)((uint8*)CPU$1 + 5ll) );
 _ZN7CPU65104PUSHEd( CPU$1, (double)*(uint8*)((uint8*)CPU$1 + 4ll) );
 *(uint16*)((uint8*)CPU$1 + 4ll) = *(uint16*)((uint8*)CPU$1 + 56ll);
 label$8462:;
}

void INS_LDA( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$4469$1;
 uint8 TMP$4470$1;
 label$8463:;
 uint8 vr$3 = _ZN8MEMORY_T9READUBYTEEd( *(struct $8MEMORY_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll) );
 *(uint8*)((uint8*)CPU$1 + 1ll) = vr$3;
 if( (int64)*(uint8*)((uint8*)CPU$1 + 1ll) != (int64)*(uint8*)NIBBLES$ ) goto label$8465;
 TMP$4469$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8467;
 label$8465:;
 TMP$4469$1 = *(uint8*)NIBBLES$;
 label$8467:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$4469$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)((uint8*)CPU$1 + 1ll) >= (int64)*(uint8*)NIBBLES$ ) goto label$8466;
 TMP$4470$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8468;
 label$8466:;
 TMP$4470$1 = *(uint8*)NIBBLES$;
 label$8468:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$4470$1 & 1ull) << (7ll & 63ll)));
 label$8464:;
}

void INS_LDX( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$4471$1;
 uint8 TMP$4472$1;
 label$8469:;
 uint8 vr$3 = _ZN8MEMORY_T9READUBYTEEd( *(struct $8MEMORY_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll) );
 *(uint8*)((uint8*)CPU$1 + 2ll) = vr$3;
 if( (int64)*(uint8*)((uint8*)CPU$1 + 2ll) != (int64)*(uint8*)NIBBLES$ ) goto label$8471;
 TMP$4471$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8473;
 label$8471:;
 TMP$4471$1 = *(uint8*)NIBBLES$;
 label$8473:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$4471$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)((uint8*)CPU$1 + 2ll) >= (int64)*(uint8*)NIBBLES$ ) goto label$8472;
 TMP$4472$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8474;
 label$8472:;
 TMP$4472$1 = *(uint8*)NIBBLES$;
 label$8474:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$4472$1 & 1ull) << (7ll & 63ll)));
 label$8470:;
}

void INS_LDY( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$4473$1;
 uint8 TMP$4474$1;
 label$8475:;
 uint8 vr$3 = _ZN8MEMORY_T9READUBYTEEd( *(struct $8MEMORY_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll) );
 *(uint8*)((uint8*)CPU$1 + 3ll) = vr$3;
 if( (int64)*(uint8*)((uint8*)CPU$1 + 3ll) != (int64)*(uint8*)NIBBLES$ ) goto label$8477;
 TMP$4473$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8479;
 label$8477:;
 TMP$4473$1 = *(uint8*)NIBBLES$;
 label$8479:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$4473$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)((uint8*)CPU$1 + 3ll) >= (int64)*(uint8*)NIBBLES$ ) goto label$8478;
 TMP$4474$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8480;
 label$8478:;
 TMP$4474$1 = *(uint8*)NIBBLES$;
 label$8480:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$4474$1 & 1ull) << (7ll & 63ll)));
 label$8476:;
}

void INS_LSR( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$4475$1;
 uint8 TMP$4476$1;
 uint8 TMP$4477$1;
 label$8481:;
 uint8 vr$3 = _ZN8MEMORY_T9READUBYTEEd( *(struct $8MEMORY_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll) );
 *(uint8*)&V$ = vr$3;
 if( ((int64)*(uint8*)&V$ & (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) == 0ll ) goto label$8483;
 TMP$4475$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8486;
 label$8483:;
 TMP$4475$1 = *(uint8*)NIBBLES$;
 label$8486:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551614ull) | ((uint64)TMP$4475$1 & 1ull));
 *(uint8*)&V$ = (uint8)((int64)*(uint8*)&V$ >> ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) & 63ll));
 _ZN8MEMORY_T10WRITEUBYTEEdd( *(struct $8MEMORY_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll), (double)*(uint8*)&V$ );
 if( (int64)*(uint8*)&V$ != (int64)*(uint8*)NIBBLES$ ) goto label$8484;
 TMP$4476$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8487;
 label$8484:;
 TMP$4476$1 = *(uint8*)NIBBLES$;
 label$8487:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$4476$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)&V$ >= (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$8485;
 TMP$4477$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8488;
 label$8485:;
 TMP$4477$1 = *(uint8*)NIBBLES$;
 label$8488:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$4477$1 & 1ull) << (7ll & 63ll)));
 label$8482:;
}

void INS_LSRA( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$4478$1;
 uint8 TMP$4479$1;
 uint8 TMP$4480$1;
 label$8489:;
 if( ((int64)*(uint8*)((uint8*)CPU$1 + 1ll) & (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) == 0ll ) goto label$8491;
 TMP$4478$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8494;
 label$8491:;
 TMP$4478$1 = *(uint8*)NIBBLES$;
 label$8494:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551614ull) | ((uint64)TMP$4478$1 & 1ull));
 *(uint8*)((uint8*)CPU$1 + 1ll) = (uint8)((int64)*(uint8*)((uint8*)CPU$1 + 1ll) >> ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) & 63ll));
 if( (int64)*(uint8*)((uint8*)CPU$1 + 1ll) != (int64)*(uint8*)NIBBLES$ ) goto label$8492;
 TMP$4479$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8495;
 label$8492:;
 TMP$4479$1 = *(uint8*)NIBBLES$;
 label$8495:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$4479$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)((uint8*)CPU$1 + 1ll) >= (int64)*(uint8*)NIBBLES$ ) goto label$8493;
 TMP$4480$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8496;
 label$8493:;
 TMP$4480$1 = *(uint8*)NIBBLES$;
 label$8496:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$4480$1 & 1ull) << (7ll & 63ll)));
 label$8490:;
}

void INS_NOP( struct $7CPU6510* CPU$1 )
{
 label$8497:;
 label$8498:;
}

void INS_ORA( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$4481$1;
 uint8 TMP$4482$1;
 label$8499:;
 uint8 vr$5 = _ZN8MEMORY_T9READUBYTEEd( *(struct $8MEMORY_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll) );
 *(uint8*)((uint8*)CPU$1 + 1ll) = (uint8)((int64)*(uint8*)((uint8*)CPU$1 + 1ll) | (int64)vr$5);
 if( (int64)*(uint8*)((uint8*)CPU$1 + 1ll) != (int64)*(uint8*)NIBBLES$ ) goto label$8501;
 TMP$4481$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8503;
 label$8501:;
 TMP$4481$1 = *(uint8*)NIBBLES$;
 label$8503:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$4481$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)((uint8*)CPU$1 + 1ll) >= (int64)*(uint8*)NIBBLES$ ) goto label$8502;
 TMP$4482$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8504;
 label$8502:;
 TMP$4482$1 = *(uint8*)NIBBLES$;
 label$8504:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$4482$1 & 1ull) << (7ll & 63ll)));
 label$8500:;
}

void INS_PHA( struct $7CPU6510* CPU$1 )
{
 label$8505:;
 _ZN7CPU65104PUSHEd( CPU$1, (double)*(uint8*)((uint8*)CPU$1 + 1ll) );
 label$8506:;
}

void INS_PHP( struct $7CPU6510* CPU$1 )
{
 label$8507:;
 _ZN7CPU65104PUSHEd( CPU$1, (double)*(uint8*)CPU$1 );
 label$8508:;
}

void INS_PLA( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$4483$1;
 uint8 TMP$4484$1;
 label$8509:;
 double vr$0 = _ZN7CPU65104PULLEv( CPU$1 );
 *(uint8*)((uint8*)CPU$1 + 1ll) = (uint8)((int32)__builtin_nearbyint( vr$0 ));
 if( (int64)*(uint8*)((uint8*)CPU$1 + 1ll) != (int64)*(uint8*)NIBBLES$ ) goto label$8511;
 TMP$4483$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8513;
 label$8511:;
 TMP$4483$1 = *(uint8*)NIBBLES$;
 label$8513:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$4483$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)((uint8*)CPU$1 + 1ll) >= (int64)*(uint8*)NIBBLES$ ) goto label$8512;
 TMP$4484$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8514;
 label$8512:;
 TMP$4484$1 = *(uint8*)NIBBLES$;
 label$8514:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$4484$1 & 1ull) << (7ll & 63ll)));
 label$8510:;
}

void INS_PLP( struct $7CPU6510* CPU$1 )
{
 label$8515:;
 double vr$0 = _ZN7CPU65104PULLEv( CPU$1 );
 *(uint8*)CPU$1 = (uint8)((int32)__builtin_nearbyint( vr$0 ));
 label$8516:;
}

void INS_ROL( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$4485$1;
 uint8 TMP$4486$1;
 uint8 TMP$4487$1;
 uint8 TMP$4488$1;
 label$8517:;
 uint8 vr$3 = _ZN8MEMORY_T9READUBYTEEd( *(struct $8MEMORY_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll) );
 *(uint8*)&V$ = vr$3;
 if( ((uint64)(int64)*(uint8*)CPU$1 & 1ull) != (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$8519;
 TMP$4485$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8525;
 label$8519:;
 TMP$4485$1 = *(uint8*)NIBBLES$;
 label$8525:;
 CARY$ = (int64)TMP$4485$1;
 if( ((int64)*(uint8*)&V$ & ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) == 0ll ) goto label$8520;
 TMP$4486$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8526;
 label$8520:;
 TMP$4486$1 = *(uint8*)NIBBLES$;
 label$8526:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551614ull) | ((uint64)TMP$4486$1 & 1ull));
 *(uint8*)&V$ = (uint8)((int64)*(uint8*)&V$ << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) & 63ll));
 if( CARY$ == 0ll ) goto label$8522;
 {
  *(uint8*)&V$ = (uint8)((int64)*(uint8*)&V$ | (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
  label$8522:;
 }
 _ZN8MEMORY_T10WRITEUBYTEEdd( *(struct $8MEMORY_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll), (double)*(uint8*)&V$ );
 if( (int64)*(uint8*)&V$ != (int64)*(uint8*)NIBBLES$ ) goto label$8523;
 TMP$4487$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8527;
 label$8523:;
 TMP$4487$1 = *(uint8*)NIBBLES$;
 label$8527:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$4487$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)&V$ >= (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$8524;
 TMP$4488$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8528;
 label$8524:;
 TMP$4488$1 = *(uint8*)NIBBLES$;
 label$8528:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$4488$1 & 1ull) << (7ll & 63ll)));
 label$8518:;
}

void INS_ROLA( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$4489$1;
 uint8 TMP$4490$1;
 uint8 TMP$4491$1;
 uint8 TMP$4492$1;
 label$8529:;
 if( ((uint64)(int64)*(uint8*)CPU$1 & 1ull) != (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$8531;
 TMP$4489$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8537;
 label$8531:;
 TMP$4489$1 = *(uint8*)NIBBLES$;
 label$8537:;
 CARY$ = (int64)TMP$4489$1;
 if( ((int64)*(uint8*)((uint8*)CPU$1 + 1ll) & ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) == 0ll ) goto label$8532;
 TMP$4490$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8538;
 label$8532:;
 TMP$4490$1 = *(uint8*)NIBBLES$;
 label$8538:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551614ull) | ((uint64)TMP$4490$1 & 1ull));
 *(uint8*)((uint8*)CPU$1 + 1ll) = (uint8)((int64)*(uint8*)((uint8*)CPU$1 + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) & 63ll));
 if( CARY$ == 0ll ) goto label$8534;
 {
  *(uint8*)((uint8*)CPU$1 + 1ll) = (uint8)((int64)*(uint8*)((uint8*)CPU$1 + 1ll) | (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
  label$8534:;
 }
 if( (int64)*(uint8*)((uint8*)CPU$1 + 1ll) != (int64)*(uint8*)NIBBLES$ ) goto label$8535;
 TMP$4491$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8539;
 label$8535:;
 TMP$4491$1 = *(uint8*)NIBBLES$;
 label$8539:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$4491$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)((uint8*)CPU$1 + 1ll) >= (int64)*(uint8*)NIBBLES$ ) goto label$8536;
 TMP$4492$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8540;
 label$8536:;
 TMP$4492$1 = *(uint8*)NIBBLES$;
 label$8540:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$4492$1 & 1ull) << (7ll & 63ll)));
 label$8530:;
}

void INS_ROR( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$4493$1;
 uint8 TMP$4494$1;
 uint8 TMP$4495$1;
 uint8 TMP$4496$1;
 label$8541:;
 if( ((uint64)(int64)*(uint8*)CPU$1 & 1ull) != (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$8543;
 TMP$4493$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8549;
 label$8543:;
 TMP$4493$1 = *(uint8*)NIBBLES$;
 label$8549:;
 CARY$ = (int64)TMP$4493$1;
 uint8 vr$8 = _ZN8MEMORY_T9READUBYTEEd( *(struct $8MEMORY_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll) );
 *(uint8*)&V$ = vr$8;
 if( ((int64)*(uint8*)&V$ & (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) == 0ll ) goto label$8544;
 TMP$4494$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8550;
 label$8544:;
 TMP$4494$1 = *(uint8*)NIBBLES$;
 label$8550:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551614ull) | ((uint64)TMP$4494$1 & 1ull));
 *(uint8*)&V$ = (uint8)((int64)*(uint8*)&V$ >> ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) & 63ll));
 if( CARY$ == 0ll ) goto label$8546;
 {
  *(uint8*)&V$ = (uint8)((int64)*(uint8*)&V$ | ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)));
  label$8546:;
 }
 _ZN8MEMORY_T10WRITEUBYTEEdd( *(struct $8MEMORY_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll), (double)*(uint8*)&V$ );
 if( (int64)*(uint8*)&V$ != (int64)*(uint8*)NIBBLES$ ) goto label$8547;
 TMP$4495$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8551;
 label$8547:;
 TMP$4495$1 = *(uint8*)NIBBLES$;
 label$8551:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$4495$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)&V$ >= (int64)*(uint8*)NIBBLES$ ) goto label$8548;
 TMP$4496$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8552;
 label$8548:;
 TMP$4496$1 = *(uint8*)NIBBLES$;
 label$8552:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$4496$1 & 1ull) << (7ll & 63ll)));
 label$8542:;
}

void INS_RORA( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$4497$1;
 uint8 TMP$4498$1;
 uint8 TMP$4499$1;
 uint8 TMP$4500$1;
 label$8553:;
 if( ((uint64)(int64)*(uint8*)CPU$1 & 1ull) != (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$8555;
 TMP$4497$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8561;
 label$8555:;
 TMP$4497$1 = *(uint8*)NIBBLES$;
 label$8561:;
 CARY$ = (int64)TMP$4497$1;
 if( ((int64)*(uint8*)((uint8*)CPU$1 + 1ll) & (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) == 0ll ) goto label$8556;
 TMP$4498$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8562;
 label$8556:;
 TMP$4498$1 = *(uint8*)NIBBLES$;
 label$8562:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551614ull) | ((uint64)TMP$4498$1 & 1ull));
 *(uint8*)((uint8*)CPU$1 + 1ll) = (uint8)((int64)*(uint8*)((uint8*)CPU$1 + 1ll) >> ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) & 63ll));
 if( CARY$ == 0ll ) goto label$8558;
 {
  *(uint8*)((uint8*)CPU$1 + 1ll) = (uint8)((int64)*(uint8*)((uint8*)CPU$1 + 1ll) | ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)));
  label$8558:;
 }
 if( (int64)*(uint8*)((uint8*)CPU$1 + 1ll) != (int64)*(uint8*)NIBBLES$ ) goto label$8559;
 TMP$4499$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8563;
 label$8559:;
 TMP$4499$1 = *(uint8*)NIBBLES$;
 label$8563:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$4499$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)((uint8*)CPU$1 + 1ll) >= (int64)*(uint8*)NIBBLES$ ) goto label$8560;
 TMP$4500$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8564;
 label$8560:;
 TMP$4500$1 = *(uint8*)NIBBLES$;
 label$8564:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$4500$1 & 1ull) << (7ll & 63ll)));
 label$8554:;
}

void INS_RTI( struct $7CPU6510* CPU$1 )
{
 label$8565:;
 double vr$0 = _ZN7CPU65104PULLEv( CPU$1 );
 *(uint8*)CPU$1 = (uint8)((int32)__builtin_nearbyint( vr$0 ));
 double vr$3 = _ZN7CPU65104PULLEv( CPU$1 );
 *(uint8*)((uint8*)CPU$1 + 4ll) = (uint8)((int32)__builtin_nearbyint( vr$3 ));
 double vr$6 = _ZN7CPU65104PULLEv( CPU$1 );
 *(uint8*)((uint8*)CPU$1 + 5ll) = (uint8)((int32)__builtin_nearbyint( vr$6 ));
 *(uint16*)((uint8*)CPU$1 + 4ll) = (uint16)((int32)__builtin_nearbyint( (double)(int64)*(uint16*)((uint8*)CPU$1 + 4ll) + 0x1.p+0 ));
 label$8566:;
}

void INS_RTS( struct $7CPU6510* CPU$1 )
{
 label$8567:;
 double vr$0 = _ZN7CPU65104PULLEv( CPU$1 );
 *(uint8*)((uint8*)CPU$1 + 4ll) = (uint8)((int32)__builtin_nearbyint( vr$0 ));
 double vr$3 = _ZN7CPU65104PULLEv( CPU$1 );
 *(uint8*)((uint8*)CPU$1 + 5ll) = (uint8)((int32)__builtin_nearbyint( vr$3 ));
 *(uint16*)((uint8*)CPU$1 + 4ll) = (uint16)((int32)__builtin_nearbyint( (double)(int64)*(uint16*)((uint8*)CPU$1 + 4ll) + 0x1.p+0 ));
 label$8568:;
}

void INS_SBC( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$4501$1;
 uint8 TMP$4502$1;
 uint8 TMP$4503$1;
 uint8 TMP$4504$1;
 label$8569:;
 struct $5MULTI B$1;
 __builtin_memset( &B$1, 0, 8ll );
 uint8 vr$4 = _ZN8MEMORY_T9READUBYTEEd( *(struct $8MEMORY_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll) );
 *(uint8*)&B$1 = vr$4;
 *(uint16*)&V$ = (uint16)((int64)*(uint8*)((uint8*)CPU$1 + 1ll) - (int64)*(uint8*)&B$1);
 if( ((uint64)(int64)*(uint8*)CPU$1 & 1ull) != (uint64)(int64)*(uint8*)NIBBLES$ ) goto label$8572;
 {
  *(int16*)&V$ = (int16)((int64)*(int16*)&V$ - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll));
  label$8572:;
 }
 if( ((((int64)*(uint8*)((uint8*)CPU$1 + 1ll) ^ (int64)*(uint8*)&B$1) & ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll))) & (((int64)*(uint8*)((uint8*)CPU$1 + 1ll) ^ (int64)*(uint8*)&V$) & ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)))) == 0ll ) goto label$8573;
 TMP$4501$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8577;
 label$8573:;
 TMP$4501$1 = *(uint8*)NIBBLES$;
 label$8577:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551551ull) | (((uint64)TMP$4501$1 & 1ull) << (6ll & 63ll)));
 *(uint8*)((uint8*)CPU$1 + 1ll) = *(uint8*)&V$;
 if( (int64)*(uint16*)&V$ > (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 15ll)) ) goto label$8574;
 TMP$4502$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8578;
 label$8574:;
 TMP$4502$1 = *(uint8*)NIBBLES$;
 label$8578:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551614ull) | ((uint64)TMP$4502$1 & 1ull));
 if( (int64)*(uint8*)&V$ != (int64)*(uint8*)NIBBLES$ ) goto label$8575;
 TMP$4503$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8579;
 label$8575:;
 TMP$4503$1 = *(uint8*)NIBBLES$;
 label$8579:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$4503$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)&V$ >= (int64)*(uint8*)NIBBLES$ ) goto label$8576;
 TMP$4504$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8580;
 label$8576:;
 TMP$4504$1 = *(uint8*)NIBBLES$;
 label$8580:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$4504$1 & 1ull) << (7ll & 63ll)));
 label$8570:;
}

void INS_SEC( struct $7CPU6510* CPU$1 )
{
 label$8581:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551614ull) | ((uint64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) & 1ull));
 label$8582:;
}

void INS_SED( struct $7CPU6510* CPU$1 )
{
 label$8583:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551607ull) | (((uint64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) & 1ull) << (3ll & 63ll)));
 label$8584:;
}

void INS_SEI( struct $7CPU6510* CPU$1 )
{
 label$8585:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551611ull) | (((uint64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) & 1ull) << (2ll & 63ll)));
 label$8586:;
}

void INS_STA( struct $7CPU6510* CPU$1 )
{
 label$8587:;
 _ZN8MEMORY_T10WRITEUBYTEEdd( *(struct $8MEMORY_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll), (double)*(uint8*)((uint8*)CPU$1 + 1ll) );
 label$8588:;
}

void INS_STX( struct $7CPU6510* CPU$1 )
{
 label$8589:;
 _ZN8MEMORY_T10WRITEUBYTEEdd( *(struct $8MEMORY_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll), (double)*(uint8*)((uint8*)CPU$1 + 2ll) );
 label$8590:;
}

void INS_STY( struct $7CPU6510* CPU$1 )
{
 label$8591:;
 _ZN8MEMORY_T10WRITEUBYTEEdd( *(struct $8MEMORY_T**)((uint8*)CPU$1 + 8ll), (double)*(uint16*)((uint8*)CPU$1 + 56ll), (double)*(uint8*)((uint8*)CPU$1 + 3ll) );
 label$8592:;
}

void INS_TAX( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$4505$1;
 uint8 TMP$4506$1;
 label$8593:;
 *(uint8*)((uint8*)CPU$1 + 2ll) = *(uint8*)((uint8*)CPU$1 + 1ll);
 if( (int64)*(uint8*)((uint8*)CPU$1 + 2ll) != (int64)*(uint8*)NIBBLES$ ) goto label$8595;
 TMP$4505$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8597;
 label$8595:;
 TMP$4505$1 = *(uint8*)NIBBLES$;
 label$8597:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$4505$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)((uint8*)CPU$1 + 2ll) >= (int64)*(uint8*)NIBBLES$ ) goto label$8596;
 TMP$4506$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8598;
 label$8596:;
 TMP$4506$1 = *(uint8*)NIBBLES$;
 label$8598:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$4506$1 & 1ull) << (7ll & 63ll)));
 label$8594:;
}

void INS_TAY( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$4507$1;
 uint8 TMP$4508$1;
 label$8599:;
 *(uint8*)((uint8*)CPU$1 + 3ll) = *(uint8*)((uint8*)CPU$1 + 1ll);
 if( (int64)*(uint8*)((uint8*)CPU$1 + 3ll) != (int64)*(uint8*)NIBBLES$ ) goto label$8601;
 TMP$4507$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8603;
 label$8601:;
 TMP$4507$1 = *(uint8*)NIBBLES$;
 label$8603:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$4507$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)((uint8*)CPU$1 + 3ll) >= (int64)*(uint8*)NIBBLES$ ) goto label$8602;
 TMP$4508$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8604;
 label$8602:;
 TMP$4508$1 = *(uint8*)NIBBLES$;
 label$8604:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$4508$1 & 1ull) << (7ll & 63ll)));
 label$8600:;
}

void INS_TSX( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$4509$1;
 uint8 TMP$4510$1;
 label$8605:;
 *(uint8*)((uint8*)CPU$1 + 2ll) = *(uint8*)((uint8*)CPU$1 + 6ll);
 if( (int64)*(uint8*)((uint8*)CPU$1 + 2ll) != (int64)*(uint8*)NIBBLES$ ) goto label$8607;
 TMP$4509$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8609;
 label$8607:;
 TMP$4509$1 = *(uint8*)NIBBLES$;
 label$8609:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$4509$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)((uint8*)CPU$1 + 2ll) >= (int64)*(uint8*)NIBBLES$ ) goto label$8608;
 TMP$4510$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8610;
 label$8608:;
 TMP$4510$1 = *(uint8*)NIBBLES$;
 label$8610:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$4510$1 & 1ull) << (7ll & 63ll)));
 label$8606:;
}

void INS_TXA( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$4511$1;
 uint8 TMP$4512$1;
 label$8611:;
 *(uint8*)((uint8*)CPU$1 + 1ll) = *(uint8*)((uint8*)CPU$1 + 2ll);
 if( (int64)*(uint8*)((uint8*)CPU$1 + 1ll) != (int64)*(uint8*)NIBBLES$ ) goto label$8613;
 TMP$4511$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8615;
 label$8613:;
 TMP$4511$1 = *(uint8*)NIBBLES$;
 label$8615:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$4511$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)((uint8*)CPU$1 + 1ll) >= (int64)*(uint8*)NIBBLES$ ) goto label$8614;
 TMP$4512$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8616;
 label$8614:;
 TMP$4512$1 = *(uint8*)NIBBLES$;
 label$8616:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$4512$1 & 1ull) << (7ll & 63ll)));
 label$8612:;
}

void INS_TXS( struct $7CPU6510* CPU$1 )
{
 label$8617:;
 *(uint8*)((uint8*)CPU$1 + 6ll) = *(uint8*)((uint8*)CPU$1 + 2ll);
 label$8618:;
}

void INS_TYA( struct $7CPU6510* CPU$1 )
{
 uint8 TMP$4513$1;
 uint8 TMP$4514$1;
 label$8619:;
 *(uint8*)((uint8*)CPU$1 + 1ll) = *(uint8*)((uint8*)CPU$1 + 3ll);
 if( (int64)*(uint8*)((uint8*)CPU$1 + 1ll) != (int64)*(uint8*)NIBBLES$ ) goto label$8621;
 TMP$4513$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8623;
 label$8621:;
 TMP$4513$1 = *(uint8*)NIBBLES$;
 label$8623:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551613ull) | (((uint64)TMP$4513$1 & 1ull) << (1ll & 63ll)));
 if( (int64)*(int8*)((uint8*)CPU$1 + 1ll) >= (int64)*(uint8*)NIBBLES$ ) goto label$8622;
 TMP$4514$1 = *(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
 goto label$8624;
 label$8622:;
 TMP$4514$1 = *(uint8*)NIBBLES$;
 label$8624:;
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551487ull) | (((uint64)TMP$4514$1 & 1ull) << (7ll & 63ll)));
 label$8620:;
}

void INS_R32( struct $7CPU6510* CPU$1 )
{
 label$8625:;
 double vr$3 = _ZN8MEMORY_T6PEEK64Ed( *(struct $8MEMORY_T**)((uint8*)CPU$1 + 8ll), (double)*(uint32*)((uint8*)CPU$1 + 56ll) );
 *(uint8*)((uint8*)CPU$1 + 1ll) = (uint8)((int32)__builtin_nearbyint( vr$3 ));
 label$8626:;
}

void INS_W32( struct $7CPU6510* CPU$1 )
{
 label$8627:;
 _ZN8MEMORY_T6POKE64Edd( *(struct $8MEMORY_T**)((uint8*)CPU$1 + 8ll), (double)*(uint32*)((uint8*)CPU$1 + 56ll), (double)*(uint8*)((uint8*)CPU$1 + 1ll) );
 label$8628:;
}

void INS_R64( struct $7CPU6510* CPU$1 )
{
 label$8629:;
 double vr$3 = _ZN8MEMORY_T6PEEK64Ed( *(struct $8MEMORY_T**)((uint8*)CPU$1 + 8ll), (double)*(uint64*)((uint8*)CPU$1 + 56ll) );
 *(uint8*)((uint8*)CPU$1 + 1ll) = (uint8)((int32)__builtin_nearbyint( vr$3 ));
 label$8630:;
}

void INS_W64( struct $7CPU6510* CPU$1 )
{
 label$8631:;
 _ZN8MEMORY_T6POKE64Edd( *(struct $8MEMORY_T**)((uint8*)CPU$1 + 8ll), (double)*(uint64*)((uint8*)CPU$1 + 56ll), (double)*(uint8*)((uint8*)CPU$1 + 1ll) );
 label$8632:;
}

int64 INTERRUPTSERVICE( struct $7CPU6510* CPU$1 )
{
 int64 fb$result$1;
 __builtin_memset( &fb$result$1, 0, 8ll );
 label$9229:;
 static FBSTRING S$1;
 int64 KEY$1;
 __builtin_memset( &KEY$1, 0, 8ll );
 int64 IRQTICKS$1;
 __builtin_memset( &IRQTICKS$1, 0, 8ll );
 if( ((uint64)((int64)*(uint8*)CPU$1 >> (2ll & 63ll)) & 1ull) != (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$9232;
 {
  fb$result$1 = (int64)*(uint8*)NIBBLES$;
  goto label$9230;
  label$9232:;
 }
 int64 NCHARS$1;
 uint8 vr$10 = _ZN8MEMORY_T9READUBYTEEd( *(struct $8MEMORY_T**)((uint8*)CPU$1 + 8ll), 0x1.8Cp+7 );
 NCHARS$1 = (int64)vr$10;
 if( NCHARS$1 >= (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 10ll) ) goto label$9234;
 {
  FBSTRING STRKEY$2;
  FBSTRING* vr$13 = fb_Inkey( );
  fb_StrInit( (void*)&STRKEY$2, -1ll, (void*)vr$13, -1ll, 0 );
  int64 vr$16 = fb_StrLen( (void*)&STRKEY$2, -1ll );
  KEY$1 = vr$16;
  if( KEY$1 == 0ll ) goto label$9236;
  {
   KEY$1 = (int64)*(uint8*)((uint8*)((uint8*)*(uint8**)&STRKEY$2 + KEY$1) - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) + ((KEY$1 - (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll)) * ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll)));
   {
    if( KEY$1 != (((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)) + (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 11ll)) ) goto label$9238;
    label$9239:;
    {
     fb_End( 0 );
    }
    goto label$9237;
    label$9238:;
    if( KEY$1 < 65ll ) goto label$9240;
    if( KEY$1 > 90ll ) goto label$9240;
    label$9241:;
    {
     KEY$1 = KEY$1 + 32ll;
     FBSTRING* vr$34 = fb_CHR( 1, KEY$1 );
     fb_StrConcatAssign( (void*)&S$1, -1ll, (void*)vr$34, -1ll, 0 );
    }
    goto label$9237;
    label$9240:;
    if( KEY$1 < 97ll ) goto label$9242;
    if( KEY$1 > 122ll ) goto label$9242;
    label$9243:;
    {
     KEY$1 = KEY$1 + -32ll;
     FBSTRING* vr$36 = fb_CHR( 1, KEY$1 );
     fb_StrConcatAssign( (void*)&S$1, -1ll, (void*)vr$36, -1ll, 0 );
    }
    goto label$9237;
    label$9242:;
    if( KEY$1 != 316ll ) goto label$9244;
    label$9245:;
    {
     fb_Locate( 1, 1, -1, 0, 0 );
     FBSTRING* vr$37 = fb_SPACE( 48ll );
     fb_PrintString( 0, (FBSTRING*)vr$37, 1 );
     fb_Locate( 1, 1, -1, 0, 0 );
     FBSTRING* vr$38 = fb_StrAllocTempDescZEx( (uint8*)"save filename:", 14ll );
     fb_ConsoleInput( (FBSTRING*)vr$38, -1, -1 );
     fb_InputString( (void*)&STRKEY$2, -1ll, 0 );
     int64 vr$41 = fb_StrLen( (void*)&STRKEY$2, -1ll );
     if( vr$41 == 0ll ) goto label$9247;
     {
      int32 vr$42 = fb_FileFree( );
      KEY$1 = (int64)vr$42;
      int32 vr$46 = fb_FileOpen( (FBSTRING*)&STRKEY$2, 0u, 2u, 0u, (int32)KEY$1, 0 );
      if( (int64)vr$46 != 0ll ) goto label$9249;
      {
       uint8 U8$7;
       __builtin_memset( &U8$7, 0, 1ll );
       int64 NBYTES$7;
       uint16 vr$50 = _ZN8MEMORY_T10READUSHORTEd( *(struct $8MEMORY_T**)((uint8*)CPU$1 + 8ll), 0x1.68p+5 );
       NBYTES$7 = (int64)vr$50;
       NBYTES$7 = NBYTES$7 + -2048ll;
       fb_FilePutLarge( (int32)KEY$1, 0ll, (void*)&NBYTES$7, 8ull );
       {
        int64 I$8;
        I$8 = 0ll;
        int64 TMP$5131$8;
        TMP$5131$8 = NBYTES$7 + -1ll;
        goto label$9250;
        label$9253:;
        {
         uint8 vr$59 = _ZN8MEMORY_T9READUBYTEEd( *(struct $8MEMORY_T**)((uint8*)CPU$1 + 8ll), (double)(I$8 + 2048ll) );
         U8$7 = vr$59;
         fb_FilePutLarge( (int32)KEY$1, 0ll, (void*)&U8$7, 1ull );
        }
        label$9251:;
        I$8 = I$8 + 1ll;
        label$9250:;
        if( I$8 <= TMP$5131$8 ) goto label$9253;
        label$9252:;
       }
       fb_FileClose( (int32)KEY$1 );
      }
      goto label$9248;
      label$9249:;
      {
       FBSTRING TMP$5133$7;
       fb_Locate( 1, 1, -1, 0, 0 );
       FBSTRING* vr$64 = fb_SPACE( 48ll );
       fb_PrintString( 0, (FBSTRING*)vr$64, 1 );
       fb_Locate( 1, 1, -1, 0, 0 );
       __builtin_memset( &TMP$5133$7, 0, 24ll );
       FBSTRING* vr$68 = fb_StrConcat( &TMP$5133$7, (void*)"can't create: ", 15ll, (void*)&STRKEY$2, -1ll );
       fb_PrintString( 0, (FBSTRING*)vr$68, 1 );
       fb_Beep( );
       fb_Sleep( -1 );
      }
      label$9248:;
     }
     label$9247:;
     label$9246:;
     KEY$1 = 0ll;
    }
    goto label$9237;
    label$9244:;
    if( KEY$1 != 317ll ) goto label$9254;
    label$9255:;
    {
     fb_Locate( 1, 1, -1, 0, 0 );
     FBSTRING* vr$69 = fb_SPACE( 48ll );
     fb_PrintString( 0, (FBSTRING*)vr$69, 1 );
     fb_Locate( 1, 1, -1, 0, 0 );
     FBSTRING* vr$70 = fb_StrAllocTempDescZEx( (uint8*)"load filename:", 14ll );
     fb_ConsoleInput( (FBSTRING*)vr$70, -1, -1 );
     fb_InputString( (void*)&STRKEY$2, -1ll, 0 );
     int64 vr$73 = fb_StrLen( (void*)&STRKEY$2, -1ll );
     if( vr$73 == 0ll ) goto label$9257;
     {
      int32 vr$74 = fb_FileFree( );
      KEY$1 = (int64)vr$74;
      int32 vr$78 = fb_FileOpen( (FBSTRING*)&STRKEY$2, 0u, 1u, 0u, (int32)KEY$1, 0 );
      if( (int64)vr$78 != 0ll ) goto label$9259;
      {
       uint8 U8$7;
       __builtin_memset( &U8$7, 0, 1ll );
       int64 NBYTES$7;
       __builtin_memset( &NBYTES$7, 0, 8ll );
       fb_FileGetLarge( (int32)KEY$1, 0ll, (void*)&NBYTES$7, 8ull );
       {
        int64 I$8;
        I$8 = 0ll;
        int64 TMP$5135$8;
        TMP$5135$8 = NBYTES$7 + -1ll;
        goto label$9260;
        label$9263:;
        {
         fb_FileGetLarge( (int32)KEY$1, 0ll, (void*)&U8$7, 1ull );
         _ZN8MEMORY_T10WRITEUBYTEEdd( *(struct $8MEMORY_T**)((uint8*)CPU$1 + 8ll), (double)(I$8 + 2048ll), (double)U8$7 );
        }
        label$9261:;
        I$8 = I$8 + 1ll;
        label$9260:;
        if( I$8 <= TMP$5135$8 ) goto label$9263;
        label$9262:;
       }
       fb_FileClose( (int32)KEY$1 );
       NBYTES$7 = NBYTES$7 + 2048ll;
       _ZN8MEMORY_T11WRITEUSHORTEdd( *(struct $8MEMORY_T**)((uint8*)CPU$1 + 8ll), 0x1.68p+5, (double)NBYTES$7 );
       *(uint16*)((uint8*)CPU$1 + 4ll) = (uint16)42282u;
      }
      goto label$9258;
      label$9259:;
      {
       FBSTRING TMP$5137$7;
       fb_Locate( 1, 1, -1, 0, 0 );
       FBSTRING* vr$97 = fb_SPACE( 48ll );
       fb_PrintString( 0, (FBSTRING*)vr$97, 1 );
       fb_Locate( 1, 1, -1, 0, 0 );
       __builtin_memset( &TMP$5137$7, 0, 24ll );
       FBSTRING* vr$101 = fb_StrConcat( &TMP$5137$7, (void*)"can't open: ", 13ll, (void*)&STRKEY$2, -1ll );
       fb_PrintString( 0, (FBSTRING*)vr$101, 1 );
       fb_Beep( );
       fb_Sleep( -1 );
      }
      label$9258:;
     }
     label$9257:;
     label$9256:;
     KEY$1 = 0ll;
    }
    goto label$9237;
    label$9254:;
    if( KEY$1 != 327ll ) goto label$9264;
    label$9265:;
    {
     KEY$1 = 19ll;
    }
    goto label$9237;
    label$9264:;
    if( KEY$1 != 8ll ) goto label$9266;
    label$9267:;
    {
     KEY$1 = 20ll;
    }
    goto label$9237;
    label$9266:;
    if( KEY$1 != 331ll ) goto label$9268;
    label$9269:;
    {
     KEY$1 = 157ll;
    }
    goto label$9237;
    label$9268:;
    if( KEY$1 != 328ll ) goto label$9270;
    label$9271:;
    {
     KEY$1 = 145ll;
    }
    goto label$9237;
    label$9270:;
    if( KEY$1 != 333ll ) goto label$9272;
    label$9273:;
    {
     KEY$1 = 29ll;
    }
    goto label$9237;
    label$9272:;
    if( KEY$1 != 336ll ) goto label$9274;
    label$9275:;
    {
     KEY$1 = 17ll;
    }
    label$9274:;
    label$9237:;
   }
   if( KEY$1 == 0ll ) goto label$9277;
   {
    _ZN8MEMORY_T10WRITEUBYTEEdd( *(struct $8MEMORY_T**)((uint8*)CPU$1 + 8ll), (double)(NCHARS$1 + 631ll), (double)KEY$1 );
    _ZN8MEMORY_T10WRITEUBYTEEdd( *(struct $8MEMORY_T**)((uint8*)CPU$1 + 8ll), 0x1.8Cp+7, (double)(NCHARS$1 + 1ll) );
   }
   label$9277:;
   label$9276:;
  }
  label$9236:;
  label$9235:;
  fb_StrDelete( (FBSTRING*)&STRKEY$2 );
 }
 label$9234:;
 label$9233:;
 _ZN7CPU65104PUSHEd( CPU$1, (double)*(uint8*)((uint8*)CPU$1 + 5ll) );
 _ZN7CPU65104PUSHEd( CPU$1, (double)*(uint8*)((uint8*)CPU$1 + 4ll) );
 _ZN7CPU65104PUSHEd( CPU$1, (double)*(uint8*)CPU$1 );
 uint8 vr$117 = _ZN8MEMORY_T9READUBYTEEd( *(struct $8MEMORY_T**)((uint8*)CPU$1 + 8ll), 0x1.FFFCp+15 );
 *(uint8*)((uint8*)CPU$1 + 5ll) = vr$117;
 uint8 vr$120 = _ZN8MEMORY_T9READUBYTEEd( *(struct $8MEMORY_T**)((uint8*)CPU$1 + 8ll), 0x1.FFFEp+15 );
 *(uint8*)((uint8*)CPU$1 + 4ll) = vr$120;
 *(uint8*)CPU$1 = (uint8)((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551599ull);
 *(uint8*)CPU$1 = (uint8)(((uint64)(int64)*(uint8*)CPU$1 & 18446744073709551611ull) | 4ull);
 label$9278:;
 if( *(uint64*)((uint8*)CPU$1 + 16ll) == 64ull ) goto label$9279;
 {
  _ZN7CPU65104TICKEd( CPU$1, __builtin_inf() );
  IRQTICKS$1 = IRQTICKS$1 + 1ll;
 }
 goto label$9278;
 label$9279:;
 double vr$133 = _ZN7CPU65104PULLEv( CPU$1 );
 *(uint8*)CPU$1 = (uint8)((int32)__builtin_nearbyint( vr$133 ));
 double vr$136 = _ZN7CPU65104PULLEv( CPU$1 );
 *(uint8*)((uint8*)CPU$1 + 4ll) = (uint8)((int32)__builtin_nearbyint( vr$136 ));
 double vr$139 = _ZN7CPU65104PULLEv( CPU$1 );
 *(uint8*)((uint8*)CPU$1 + 5ll) = (uint8)((int32)__builtin_nearbyint( vr$139 ));
 if( KEY$1 != 13ll ) goto label$9281;
 {
  FLAG$ = 1ll;
 }
 goto label$9280;
 label$9281:;
 {
  FLAG$ = 0ll;
 }
 label$9280:;
 fb$result$1 = IRQTICKS$1;
 label$9230:;
 return fb$result$1;
}

void RASTERLINE( void* PARAM$1 )
{
 label$9282:;
 struct $7VECTOR2 FRAGCOORD$1;
 _ZN7VECTOR2C1Ev( &FRAGCOORD$1 );
 struct $7VECTOR4 FRAGCOLOR$1;
 _ZN7VECTOR4C1Ev( &FRAGCOLOR$1 );
 struct $10THREADSCAN* SCANPARAMS$1;
 SCANPARAMS$1 = (struct $10THREADSCAN*)PARAM$1;
 {
  uint64 X$2;
  X$2 = 0ull;
  uint64 TMP$5138$2;
  TMP$5138$2 = ((uint64)__builtin_nearbyint( *(double*)((uint8*)SCANPARAMS$1 + 8ll) ));
  goto label$9284;
  label$9287:;
  {
   *(double*)&FRAGCOORD$1 = (double)X$2;
   *(double*)((uint8*)&FRAGCOORD$1 + 8ll) = *(double*)((uint8*)SCANPARAMS$1 + 16ll) - *(double*)SCANPARAMS$1;
   _ZN8MEMORY_T9MAINIMAGEER7VECTOR4RK7VECTOR2( *(struct $8MEMORY_T**)((uint8*)*(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) + 8ll), &FRAGCOLOR$1, (struct $7VECTOR2*)&FRAGCOORD$1 );
   uint32 vr$12 = _ZN7VECTOR4cvjEv( &FRAGCOLOR$1 );
   fb_GfxPset( FGIMAGE$, (float)X$2, (float)*(double*)SCANPARAMS$1, vr$12, 4, 0 );
  }
  label$9285:;
  X$2 = X$2 + 1ull;
  label$9284:;
  if( X$2 <= TMP$5138$2 ) goto label$9287;
  label$9286:;
 }
 label$9283:;
}

void KMAIN( struct $14MULTIBOOT_INFO* MB_INFO$1 )
{
 label$9288:;
 TICKS$ = (uint64)*(uint8*)NIBBLES$;
 RES$ = (uint64)*(uint8*)NIBBLES$;
 label$9290:;
 {
  TICKS$ = TICKS$ + (uint64)(int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll);
  if( FLAG$ != (int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 1ll) ) goto label$9294;
  {
   _ZN7CPU65104TICKEd( *(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll), (double)TICKS$ );
  }
  goto label$9293;
  label$9294:;
  {
   _ZN7CPU65104TICKEd( *(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll), __builtin_inf() );
  }
  label$9293:;
  if( (TICKS$ % (uint64)((((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 2ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 12ll) & 63ll)) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 8ll) & 63ll))) + ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 14ll) << ((int64)*(uint8*)((int64)(uint8*)NIBBLES$ + 4ll) & 63ll)))) != (uint64)(int64)*(uint8*)NIBBLES$ ) goto label$9296;
  {
   int64 vr$19 = INTERRUPTSERVICE( *(struct $7CPU6510**)((uint8*)&COMPUTER$ + 8ll) );
   TICKS$ = TICKS$ + (uint64)vr$19;
   fb_GfxLock( );
   fb_GfxPut( (void*)0ull, (float)*(uint8*)NIBBLES$, (float)*(uint8*)NIBBLES$, (void*)BGIMAGE$, -65536, -65536, -65536, -65536, 0, 1, (void*)&fb_hPutPSet, -1, (void*)0ull, (void*)0ull );
   fb_GfxPut( (void*)0ull, (float)*(uint8*)NIBBLES$, (float)*(uint8*)NIBBLES$, (void*)FGIMAGE$, -65536, -65536, -65536, -65536, 0, 6, (void*)&fb_hPutAlpha, -1, (void*)0ull, (void*)0ull );
   fb_GfxWaitVSync( );
   fb_GfxUnlock( -1, -1 );
  }
  label$9296:;
  label$9295:;
 }
 label$9292:;
 goto label$9290;
 label$9291:;
 label$9289:;
}

int32 main( int32 __FB_ARGC__$0, char** __FB_ARGV__$0 )
{
 int32 fb$result$0;
 __builtin_memset( &fb$result$0, 0, 4ll );
 fb_Init( __FB_ARGC__$0, (uint8**)__FB_ARGV__$0, 0 );
 fb_DataRestore( (void*)label$8247 );
 label$0:;
 label$8246:;
 label$8252:;
 label$2098:;
 KMAIN( MB_INFO$ );
 label$1:;
 fb_End( 0 );
 return fb$result$0;
}

static void _ZN9SHADERTOYC1Ev( struct $9SHADERTOY* THIS$1 )
{
 __builtin_memset( (uint32*)THIS$1, 0, 4ll );
 __builtin_memset( (uint32*)((uint8*)THIS$1 + 4ll), 0, 4ll );
 __builtin_memset( (FBSTRING*)((uint8*)THIS$1 + 8ll), 0, 24ll );
 label$101:;
 label$102:;
}

static void _ZN9SHADERTOYaSERKS_( struct $9SHADERTOY* THIS$1, struct $9SHADERTOY* __FB_RHS__$1 )
{
 label$103:;
 *(uint32*)THIS$1 = *(uint32*)__FB_RHS__$1;
 *(uint32*)((uint8*)THIS$1 + 4ll) = *(uint32*)((uint8*)__FB_RHS__$1 + 4ll);
 fb_StrAssign( (void*)((uint8*)THIS$1 + 8ll), -1ll, (void*)((uint8*)__FB_RHS__$1 + 8ll), -1ll, 0 );
 label$104:;
}

static void _ZN5PLANEaSERKS_( struct $5PLANE* THIS$1, struct $5PLANE* __FB_RHS__$1 )
{
 label$544:;
 _ZN7VECTOR3aSERS_( (struct $7VECTOR3*)THIS$1, (struct $7VECTOR3*)__FB_RHS__$1 );
 *(double*)((uint8*)THIS$1 + 24ll) = *(double*)((uint8*)__FB_RHS__$1 + 24ll);
 label$545:;
}

static void _ZN9RECTANGLEC1Ev( struct $9RECTANGLE* THIS$1 )
{
 _ZN6VECTORC1Ev( (struct $6VECTOR*)THIS$1 );
 _ZN6VECTORC1Ev( (struct $6VECTOR*)((uint8*)THIS$1 + 32ll) );
 label$1322:;
 label$1323:;
}

static void _ZN9RECTANGLEaSERKS_( struct $9RECTANGLE* THIS$1, struct $9RECTANGLE* __FB_RHS__$1 )
{
 label$1324:;
 __builtin_memcpy( (struct $6VECTOR*)THIS$1, (struct $6VECTOR*)__FB_RHS__$1, 32 );
 __builtin_memcpy( (struct $6VECTOR*)((uint8*)THIS$1 + 32ll), (struct $6VECTOR*)((uint8*)__FB_RHS__$1 + 32ll), 32 );
 label$1325:;
}

static void _ZN5MAP2DaSERKS_( struct $5MAP2D* THIS$1, struct $5MAP2D* __FB_RHS__$1 )
{
 label$1330:;
 *(int64*)THIS$1 = *(int64*)__FB_RHS__$1;
 *($11MAP2D_TYPES*)((uint8*)THIS$1 + 8ll) = *($11MAP2D_TYPES*)((uint8*)__FB_RHS__$1 + 8ll);
 __builtin_memcpy( (struct $9BMPHEADER*)((uint8*)THIS$1 + 16ll), (struct $9BMPHEADER*)((uint8*)__FB_RHS__$1 + 16ll), 54 );
 *(uint8**)((uint8*)THIS$1 + 72ll) = *(uint8**)((uint8*)__FB_RHS__$1 + 72ll);
 __builtin_memcpy( (struct $6VECTOR*)((uint8*)THIS$1 + 80ll), (struct $6VECTOR*)((uint8*)__FB_RHS__$1 + 80ll), 32 );
 label$1331:;
}

static void _ZN8MATERIALaSERKS_( struct $8MATERIAL* THIS$1, struct $8MATERIAL* __FB_RHS__$1 )
{
 label$1336:;
 *(int64*)THIS$1 = *(int64*)__FB_RHS__$1;
 __builtin_memcpy( (struct $6VECTOR*)((uint8*)THIS$1 + 8ll), (struct $6VECTOR*)((uint8*)__FB_RHS__$1 + 8ll), 32 );
 *(double*)((uint8*)THIS$1 + 40ll) = *(double*)((uint8*)__FB_RHS__$1 + 40ll);
 *(double*)((uint8*)THIS$1 + 48ll) = *(double*)((uint8*)__FB_RHS__$1 + 48ll);
 *(double*)((uint8*)THIS$1 + 56ll) = *(double*)((uint8*)__FB_RHS__$1 + 56ll);
 *(double*)((uint8*)THIS$1 + 64ll) = *(double*)((uint8*)__FB_RHS__$1 + 64ll);
 *(double*)((uint8*)THIS$1 + 72ll) = *(double*)((uint8*)__FB_RHS__$1 + 72ll);
 *(double*)((uint8*)THIS$1 + 80ll) = *(double*)((uint8*)__FB_RHS__$1 + 80ll);
 *(double*)((uint8*)THIS$1 + 88ll) = *(double*)((uint8*)__FB_RHS__$1 + 88ll);
 *(boolean*)((uint8*)THIS$1 + 96ll) = *(boolean*)((uint8*)__FB_RHS__$1 + 96ll);
 *(boolean*)((uint8*)THIS$1 + 97ll) = *(boolean*)((uint8*)__FB_RHS__$1 + 97ll);
 *(boolean*)((uint8*)THIS$1 + 98ll) = *(boolean*)((uint8*)__FB_RHS__$1 + 98ll);
 *(boolean*)((uint8*)THIS$1 + 99ll) = *(boolean*)((uint8*)__FB_RHS__$1 + 99ll);
 *(int64*)((uint8*)THIS$1 + 104ll) = *(int64*)((uint8*)__FB_RHS__$1 + 104ll);
 __builtin_memcpy( (struct $6VECTOR*)((uint8*)THIS$1 + 112ll), (struct $6VECTOR*)((uint8*)__FB_RHS__$1 + 112ll), 32 );
 *(int64*)((uint8*)THIS$1 + 144ll) = *(int64*)((uint8*)__FB_RHS__$1 + 144ll);
 __builtin_memcpy( (struct $6VECTOR*)((uint8*)THIS$1 + 152ll), (struct $6VECTOR*)((uint8*)__FB_RHS__$1 + 152ll), 32 );
 *(int64*)((uint8*)THIS$1 + 184ll) = *(int64*)((uint8*)__FB_RHS__$1 + 184ll);
 __builtin_memcpy( (struct $6VECTOR*)((uint8*)THIS$1 + 192ll), (struct $6VECTOR*)((uint8*)__FB_RHS__$1 + 192ll), 32 );
 *(int64*)((uint8*)THIS$1 + 224ll) = *(int64*)((uint8*)__FB_RHS__$1 + 224ll);
 __builtin_memcpy( (struct $6VECTOR*)((uint8*)THIS$1 + 232ll), (struct $6VECTOR*)((uint8*)__FB_RHS__$1 + 232ll), 32 );
 label$1337:;
}

static void _ZN5LIGHTaSERKS_( struct $5LIGHT* THIS$1, struct $5LIGHT* __FB_RHS__$1 )
{
 label$1342:;
 *($11LIGHT_TYPES*)THIS$1 = *($11LIGHT_TYPES*)__FB_RHS__$1;
 *(int64*)((uint8*)THIS$1 + 8ll) = *(int64*)((uint8*)__FB_RHS__$1 + 8ll);
 __builtin_memcpy( (struct $6VECTOR*)((uint8*)THIS$1 + 16ll), (struct $6VECTOR*)((uint8*)__FB_RHS__$1 + 16ll), 32 );
 __builtin_memcpy( (struct $6VECTOR*)((uint8*)THIS$1 + 48ll), (struct $6VECTOR*)((uint8*)__FB_RHS__$1 + 48ll), 32 );
 __builtin_memcpy( (struct $6VECTOR*)((uint8*)THIS$1 + 80ll), (struct $6VECTOR*)((uint8*)__FB_RHS__$1 + 80ll), 32 );
 __builtin_memcpy( (struct $6VECTOR*)((uint8*)THIS$1 + 112ll), (struct $6VECTOR*)((uint8*)__FB_RHS__$1 + 112ll), 32 );
 __builtin_memcpy( (struct $6VECTOR*)((uint8*)THIS$1 + 144ll), (struct $6VECTOR*)((uint8*)__FB_RHS__$1 + 144ll), 32 );
 *(double*)((uint8*)THIS$1 + 176ll) = *(double*)((uint8*)__FB_RHS__$1 + 176ll);
 *(double*)((uint8*)THIS$1 + 184ll) = *(double*)((uint8*)__FB_RHS__$1 + 184ll);
 *(boolean*)((uint8*)THIS$1 + 192ll) = *(boolean*)((uint8*)__FB_RHS__$1 + 192ll);
 label$1343:;
}

static void _ZN4POLYaSERKS_( struct $4POLY* THIS$1, struct $4POLY* __FB_RHS__$1 )
{
 label$1348:;
 *(int64*)THIS$1 = *(int64*)__FB_RHS__$1;
 _ZN9RECTANGLEaSERKS_( (struct $9RECTANGLE*)((uint8*)THIS$1 + 8ll), (struct $9RECTANGLE*)((uint8*)__FB_RHS__$1 + 8ll) );
 *(int64*)((uint8*)THIS$1 + 72ll) = *(int64*)((uint8*)__FB_RHS__$1 + 72ll);
 *(struct $6VECTOR***)((uint8*)THIS$1 + 80ll) = *(struct $6VECTOR***)((uint8*)__FB_RHS__$1 + 80ll);
 __builtin_memcpy( (struct $6VECTOR*)((uint8*)THIS$1 + 88ll), (struct $6VECTOR*)((uint8*)__FB_RHS__$1 + 88ll), 32 );
 __builtin_memcpy( (struct $6VECTOR*)((uint8*)THIS$1 + 120ll), (struct $6VECTOR*)((uint8*)__FB_RHS__$1 + 120ll), 32 );
 *(double*)((uint8*)THIS$1 + 152ll) = *(double*)((uint8*)__FB_RHS__$1 + 152ll);
 label$1349:;
}

static void _ZN8OBJECT3DaSERKS_( struct $8OBJECT3D* THIS$1, struct $8OBJECT3D* __FB_RHS__$1 )
{
 label$1354:;
 *($14OBJECT3D_TYPES*)THIS$1 = *($14OBJECT3D_TYPES*)__FB_RHS__$1;
 *(int64*)((uint8*)THIS$1 + 8ll) = *(int64*)((uint8*)__FB_RHS__$1 + 8ll);
 _ZN9RECTANGLEaSERKS_( (struct $9RECTANGLE*)((uint8*)THIS$1 + 16ll), (struct $9RECTANGLE*)((uint8*)__FB_RHS__$1 + 16ll) );
 __builtin_memcpy( (struct $6VECTOR*)((uint8*)THIS$1 + 80ll), (struct $6VECTOR*)((uint8*)__FB_RHS__$1 + 80ll), 32 );
 *(int64*)((uint8*)THIS$1 + 112ll) = *(int64*)((uint8*)__FB_RHS__$1 + 112ll);
 *(double*)((uint8*)THIS$1 + 120ll) = *(double*)((uint8*)__FB_RHS__$1 + 120ll);
 *(int64*)((uint8*)THIS$1 + 128ll) = *(int64*)((uint8*)__FB_RHS__$1 + 128ll);
 *(struct $6VECTOR***)((uint8*)THIS$1 + 136ll) = *(struct $6VECTOR***)((uint8*)__FB_RHS__$1 + 136ll);
 *(int64*)((uint8*)THIS$1 + 144ll) = *(int64*)((uint8*)__FB_RHS__$1 + 144ll);
 *(struct $4POLY***)((uint8*)THIS$1 + 152ll) = *(struct $4POLY***)((uint8*)__FB_RHS__$1 + 152ll);
 label$1355:;
}

static void _ZN9RAYTRACERaSERKS_( struct $9RAYTRACER* THIS$1, struct $9RAYTRACER* __FB_RHS__$1 )
{
 label$1360:;
 *(int64*)THIS$1 = *(int64*)__FB_RHS__$1;
 *(int64*)((uint8*)THIS$1 + 8ll) = *(int64*)((uint8*)__FB_RHS__$1 + 8ll);
 *(int64*)((uint8*)THIS$1 + 16ll) = *(int64*)((uint8*)__FB_RHS__$1 + 16ll);
 *(int64*)((uint8*)THIS$1 + 24ll) = *(int64*)((uint8*)__FB_RHS__$1 + 24ll);
 *(double*)((uint8*)THIS$1 + 32ll) = *(double*)((uint8*)__FB_RHS__$1 + 32ll);
 *(double*)((uint8*)THIS$1 + 40ll) = *(double*)((uint8*)__FB_RHS__$1 + 40ll);
 __builtin_memcpy( (struct $6VECTOR*)((uint8*)THIS$1 + 48ll), (struct $6VECTOR*)((uint8*)__FB_RHS__$1 + 48ll), 32 );
 *(double*)((uint8*)THIS$1 + 80ll) = *(double*)((uint8*)__FB_RHS__$1 + 80ll);
 __builtin_memcpy( (struct $6VECTOR*)((uint8*)THIS$1 + 88ll), (struct $6VECTOR*)((uint8*)__FB_RHS__$1 + 88ll), 32 );
 *(double*)((uint8*)THIS$1 + 120ll) = *(double*)((uint8*)__FB_RHS__$1 + 120ll);
 *(int64*)((uint8*)THIS$1 + 128ll) = *(int64*)((uint8*)__FB_RHS__$1 + 128ll);
 *(int64*)((uint8*)THIS$1 + 136ll) = *(int64*)((uint8*)__FB_RHS__$1 + 136ll);
 __builtin_memcpy( (struct $6VECTOR*)((uint8*)THIS$1 + 144ll), (struct $6VECTOR*)((uint8*)__FB_RHS__$1 + 144ll), 32 );
 __builtin_memcpy( (struct $6VECTOR*)((uint8*)THIS$1 + 176ll), (struct $6VECTOR*)((uint8*)__FB_RHS__$1 + 176ll), 32 );
 __builtin_memcpy( (struct $6VECTOR*)((uint8*)THIS$1 + 208ll), (struct $6VECTOR*)((uint8*)__FB_RHS__$1 + 208ll), 32 );
 *(int64*)((uint8*)THIS$1 + 240ll) = *(int64*)((uint8*)__FB_RHS__$1 + 240ll);
 *(struct $8MATERIAL***)((uint8*)THIS$1 + 248ll) = *(struct $8MATERIAL***)((uint8*)__FB_RHS__$1 + 248ll);
 *(int64*)((uint8*)THIS$1 + 256ll) = *(int64*)((uint8*)__FB_RHS__$1 + 256ll);
 *(struct $8OBJECT3D***)((uint8*)THIS$1 + 264ll) = *(struct $8OBJECT3D***)((uint8*)__FB_RHS__$1 + 264ll);
 *(int64*)((uint8*)THIS$1 + 272ll) = *(int64*)((uint8*)__FB_RHS__$1 + 272ll);
 *(struct $5LIGHT***)((uint8*)THIS$1 + 280ll) = *(struct $5LIGHT***)((uint8*)__FB_RHS__$1 + 280ll);
 *(int64*)((uint8*)THIS$1 + 288ll) = *(int64*)((uint8*)__FB_RHS__$1 + 288ll);
 *(struct $5MAP2D***)((uint8*)THIS$1 + 296ll) = *(struct $5MAP2D***)((uint8*)__FB_RHS__$1 + 296ll);
 *(int64*)((uint8*)THIS$1 + 304ll) = *(int64*)((uint8*)__FB_RHS__$1 + 304ll);
 *(struct $7AAPIXEL***)((uint8*)THIS$1 + 312ll) = *(struct $7AAPIXEL***)((uint8*)__FB_RHS__$1 + 312ll);
 label$1361:;
}

static void _ZN8MEMORY_TaSERKS_( struct $8MEMORY_T* THIS$1, struct $8MEMORY_T* __FB_RHS__$1 )
{
 int64 TMP$1632$1;
 double* TMP$1633$1;
 double* TMP$1634$1;
 int64 TMP$1635$1;
 double* TMP$1636$1;
 double* TMP$1637$1;
 int64 TMP$1638$1;
 double* TMP$1639$1;
 double* TMP$1640$1;
 int64 TMP$1641$1;
 double* TMP$1642$1;
 double* TMP$1643$1;
 int64 TMP$1644$1;
 double* TMP$1645$1;
 double* TMP$1646$1;
 int64 TMP$1647$1;
 double* TMP$1648$1;
 double* TMP$1649$1;
 int64 TMP$1650$1;
 double* TMP$1651$1;
 double* TMP$1652$1;
 int64 TMP$1653$1;
 uint8* TMP$1654$1;
 uint8* TMP$1655$1;
 int64 TMP$1656$1;
 uint8* TMP$1657$1;
 uint8* TMP$1658$1;
 label$2060:;
 TMP$1633$1 = (double*)THIS$1;
 TMP$1634$1 = (double*)__FB_RHS__$1;
 TMP$1632$1 = 0ll;
 label$2062:;
 *TMP$1633$1 = *TMP$1634$1;
 TMP$1633$1 = (double*)((uint8*)TMP$1633$1 + 8ll);
 TMP$1634$1 = (double*)((uint8*)TMP$1634$1 + 8ll);
 TMP$1632$1 = TMP$1632$1 + 1ll;
 if( TMP$1632$1 != 16777216ll ) goto label$2062;
 TMP$1636$1 = (double*)((uint8*)THIS$1 + 134217728ll);
 TMP$1637$1 = (double*)((uint8*)__FB_RHS__$1 + 134217728ll);
 TMP$1635$1 = 0ll;
 label$2063:;
 *TMP$1636$1 = *TMP$1637$1;
 TMP$1636$1 = (double*)((uint8*)TMP$1636$1 + 8ll);
 TMP$1637$1 = (double*)((uint8*)TMP$1637$1 + 8ll);
 TMP$1635$1 = TMP$1635$1 + 1ll;
 if( TMP$1635$1 != 16384ll ) goto label$2063;
 TMP$1639$1 = (double*)((uint8*)THIS$1 + 134348800ll);
 TMP$1640$1 = (double*)((uint8*)__FB_RHS__$1 + 134348800ll);
 TMP$1638$1 = 0ll;
 label$2064:;
 *TMP$1639$1 = *TMP$1640$1;
 TMP$1639$1 = (double*)((uint8*)TMP$1639$1 + 8ll);
 TMP$1640$1 = (double*)((uint8*)TMP$1640$1 + 8ll);
 TMP$1638$1 = TMP$1638$1 + 1ll;
 if( TMP$1638$1 != 16384ll ) goto label$2064;
 TMP$1642$1 = (double*)((uint8*)THIS$1 + 134479872ll);
 TMP$1643$1 = (double*)((uint8*)__FB_RHS__$1 + 134479872ll);
 TMP$1641$1 = 0ll;
 label$2065:;
 *TMP$1642$1 = *TMP$1643$1;
 TMP$1642$1 = (double*)((uint8*)TMP$1642$1 + 8ll);
 TMP$1643$1 = (double*)((uint8*)TMP$1643$1 + 8ll);
 TMP$1641$1 = TMP$1641$1 + 1ll;
 if( TMP$1641$1 != 2073601ll ) goto label$2065;
 TMP$1645$1 = (double*)((uint8*)THIS$1 + 151068680ll);
 TMP$1646$1 = (double*)((uint8*)__FB_RHS__$1 + 151068680ll);
 TMP$1644$1 = 0ll;
 label$2066:;
 *TMP$1645$1 = *TMP$1646$1;
 TMP$1645$1 = (double*)((uint8*)TMP$1645$1 + 8ll);
 TMP$1646$1 = (double*)((uint8*)TMP$1646$1 + 8ll);
 TMP$1644$1 = TMP$1644$1 + 1ll;
 if( TMP$1644$1 != 1024ll ) goto label$2066;
 TMP$1648$1 = (double*)((uint8*)THIS$1 + 151076872ll);
 TMP$1649$1 = (double*)((uint8*)__FB_RHS__$1 + 151076872ll);
 TMP$1647$1 = 0ll;
 label$2067:;
 *TMP$1648$1 = *TMP$1649$1;
 TMP$1648$1 = (double*)((uint8*)TMP$1648$1 + 8ll);
 TMP$1649$1 = (double*)((uint8*)TMP$1649$1 + 8ll);
 TMP$1647$1 = TMP$1647$1 + 1ll;
 if( TMP$1647$1 != 360ll ) goto label$2067;
 TMP$1651$1 = (double*)((uint8*)THIS$1 + 151079752ll);
 TMP$1652$1 = (double*)((uint8*)__FB_RHS__$1 + 151079752ll);
 TMP$1650$1 = 0ll;
 label$2068:;
 *TMP$1651$1 = *TMP$1652$1;
 TMP$1651$1 = (double*)((uint8*)TMP$1651$1 + 8ll);
 TMP$1652$1 = (double*)((uint8*)TMP$1652$1 + 8ll);
 TMP$1650$1 = TMP$1650$1 + 1ll;
 if( TMP$1650$1 != 360ll ) goto label$2068;
 _ZN9RAYTRACERaSERKS_( (struct $9RAYTRACER*)((uint8*)THIS$1 + 151082632ll), (struct $9RAYTRACER*)((uint8*)__FB_RHS__$1 + 151082632ll) );
 _ZN7VECTOR4aSERS_( (struct $7VECTOR4*)((uint8*)THIS$1 + 151082952ll), (struct $7VECTOR4*)((uint8*)__FB_RHS__$1 + 151082952ll) );
 __builtin_memcpy( (struct $7VECTOR2*)((uint8*)THIS$1 + 151082984ll), (struct $7VECTOR2*)((uint8*)__FB_RHS__$1 + 151082984ll), 16 );
 _ZN7VECTOR2aSERS_( (struct $7VECTOR2*)((uint8*)THIS$1 + 151083000ll), (struct $7VECTOR2*)((uint8*)__FB_RHS__$1 + 151083000ll) );
 TMP$1654$1 = (uint8*)((uint8*)THIS$1 + 151083016ll);
 TMP$1655$1 = (uint8*)((uint8*)__FB_RHS__$1 + 151083016ll);
 TMP$1653$1 = 0ll;
 label$2069:;
 *TMP$1654$1 = *TMP$1655$1;
 TMP$1654$1 = (uint8*)(TMP$1654$1 + 1ll);
 TMP$1655$1 = (uint8*)(TMP$1655$1 + 1ll);
 TMP$1653$1 = TMP$1653$1 + 1ll;
 if( TMP$1653$1 != 2048ll ) goto label$2069;
 TMP$1657$1 = (uint8*)((uint8*)THIS$1 + 151085064ll);
 TMP$1658$1 = (uint8*)((uint8*)__FB_RHS__$1 + 151085064ll);
 TMP$1656$1 = 0ll;
 label$2070:;
 *TMP$1657$1 = *TMP$1658$1;
 TMP$1657$1 = (uint8*)(TMP$1657$1 + 1ll);
 TMP$1658$1 = (uint8*)(TMP$1658$1 + 1ll);
 TMP$1656$1 = TMP$1656$1 + 1ll;
 if( TMP$1656$1 != 2048ll ) goto label$2070;
 label$2061:;
}

static void _ZN7CPU6510aSERKS_( struct $7CPU6510* THIS$1, struct $7CPU6510* __FB_RHS__$1 )
{
 int64 TMP$1682$1;
 struct $6OPCODE* TMP$1683$1;
 struct $6OPCODE* TMP$1684$1;
 int64 TMP$1685$1;
 FBSTRING* TMP$1686$1;
 FBSTRING* TMP$1687$1;
 label$2073:;
 __builtin_memcpy( (uint8*)THIS$1, (uint8*)__FB_RHS__$1, 1 );
 __builtin_memcpy( (uint8*)((uint8*)THIS$1 + 1ll), (uint8*)((uint8*)__FB_RHS__$1 + 1ll), 1 );
 __builtin_memcpy( (uint8*)((uint8*)THIS$1 + 2ll), (uint8*)((uint8*)__FB_RHS__$1 + 2ll), 1 );
 __builtin_memcpy( (uint8*)((uint8*)THIS$1 + 3ll), (uint8*)((uint8*)__FB_RHS__$1 + 3ll), 1 );
 __builtin_memcpy( (uint16*)((uint8*)THIS$1 + 4ll), (uint16*)((uint8*)__FB_RHS__$1 + 4ll), 2 );
 __builtin_memcpy( (uint16*)((uint8*)THIS$1 + 6ll), (uint16*)((uint8*)__FB_RHS__$1 + 6ll), 2 );
 *(struct $8MEMORY_T**)((uint8*)THIS$1 + 8ll) = *(struct $8MEMORY_T**)((uint8*)__FB_RHS__$1 + 8ll);
 __builtin_memcpy( (struct $6OPCODE*)((uint8*)THIS$1 + 16ll), (struct $6OPCODE*)((uint8*)__FB_RHS__$1 + 16ll), 56 );
 TMP$1683$1 = (struct $6OPCODE*)((uint8*)THIS$1 + 72ll);
 TMP$1684$1 = (struct $6OPCODE*)((uint8*)__FB_RHS__$1 + 72ll);
 TMP$1682$1 = 0ll;
 label$2075:;
 __builtin_memcpy( TMP$1683$1, TMP$1684$1, 56 );
 TMP$1683$1 = (struct $6OPCODE*)((uint8*)TMP$1683$1 + 56ll);
 TMP$1684$1 = (struct $6OPCODE*)((uint8*)TMP$1684$1 + 56ll);
 TMP$1682$1 = TMP$1682$1 + 1ll;
 if( TMP$1682$1 != 256ll ) goto label$2075;
 TMP$1686$1 = (FBSTRING*)((uint8*)THIS$1 + 14408ll);
 TMP$1687$1 = (FBSTRING*)((uint8*)__FB_RHS__$1 + 14408ll);
 TMP$1685$1 = 0ll;
 label$2076:;
 fb_StrAssign( (void*)TMP$1686$1, -1ll, (void*)TMP$1687$1, -1ll, 0 );
 TMP$1686$1 = (FBSTRING*)((uint8*)TMP$1686$1 + 24ll);
 TMP$1687$1 = (FBSTRING*)((uint8*)TMP$1687$1 + 24ll);
 TMP$1685$1 = TMP$1685$1 + 1ll;
 if( TMP$1685$1 != 13ll ) goto label$2076;
 label$2074:;
}

__attribute__(( constructor )) static void _GLOBAL__I( void )
{
 label$9298:;
 _ZN7VECTOR3C1Ev( &IRESOLUTION$ );
 _ZN7VECTOR4C1Ev( &IMOUSE$ );
 _ZN5C64_TC1Ev( &COMPUTER$ );
 label$9299:;
}

__attribute__(( destructor )) static void _GLOBAL__D( void )
{
 label$9301:;
 _ZN5C64_TD1Ev( &COMPUTER$ );
 label$9302:;
}
